{
    "title": "The Twelve Zenati Pt. 29",
    "pages": [
        "Authors note: Hello everyone. I am still struggling to find time and motivation to write at present. While I will endeavour to do better than I have in the last month of holiday madness, try to remember this is my hobby not my profession and I have a full-time job as well as my family and circle of friends to keep happy. I know it's hard to wait between chapters and I will try harder to get back on a regular schedule of updates for you. You the readers are important to me and I appreciate each and every one of you.\n\nI am grateful to MsSensualiT and Techie for offering to help me out and be my second sets of eyes. I hope those of you who enjoy this series continue to do so. Not long until the end now, fingers crossed. ~ellie. \n\nGenesis walked back to the cabin he shared with Olivia after the long meeting and knew he would have to be away from her side more often in the near future. She had been quiet and withdrawn when he had sought her out after returning to the property. She either couldn't tell him what was wrong or didn't want to. So, he had put her in a tight corset; and bound her limbs loosely, leaving her lying on their bed to think about why she seemed petulant and unable to talk to him when he had told her he had to attend a family meeting. \n\nNow, as he approached the cabin again, he wondered if that had been the best course of action. Their relationship was evolving just as he had hoped it would. Still, every so often, it seemed Olivia reverted to the untrusting, withdrawn little girl, and he felt the need to assert his dominance to bring her out of it. Could it be her way of seeking his attention? He considered the possibility, but with everything going on lately and her sister missing, presumed dead until today, he had no way to be sure.\n\nAs if a light bulb went off over his head with an idea of why she had been acting this way, he strode purposefully into the cabin, locking the door behind him. Fuck, he was so stupid not to have put the pieces together sooner. He walked into their bedroom and found his girl asleep, still wrapped in the loose bonds he had placed on her to encourage her to think about how to explain her mood to him.\n\nGenesis began to undress. There was something heart-warming about holding Olivia in his arms as she slept. It amplified the closeness and rightness of their relationship, regardless of the minefields they would have to wade through for the rest of their lives, thanks to the fucked-up way the men she had known before him had treated her.\n\nIn the last few days, both of them had changed. Olivia seemed even more beautiful now than when he first met her. Her face was softer, more feminine, more open and giving than she used to be. The hard lines around her mouth and eyes were gone, and she looked almost doll-like in her serenity. It was as if the worries of the world had disappeared from her face, and her body relaxed in trusting contentment against his. He knew she felt the freedom to allow herself to believe that she would be his forever now, and in some ways that had enhanced her openness with him until now, that was.\n\nHe lovingly stroked her hair and kissed her forehead softly. Olivia responded by sighing his name and snuggling tighter in his arms. Their bodies fit perfectly together, and his arms tightened, trying to get her as close as he could. He watched her sleep in awe of the woman he had claimed as his to love and protect. She would twitch in her sleep, moaning his name and afterwards snuggle tighter into his arms. At one point as he watched her sleep, she had a particularly violent shudder, and in her sleep whimpered, \"Stay Genesis, stay with me, Master.\"\n\n\"I'm yours, Little One. I'm not going anywhere my love,\" he murmured this soft reassurance close to her ear. Genesis was pleased that even as she slept, he dominated her dreams. He wanted to reassure her, and responded by tightening his arms. Even in her sleep, Olivia pressed against him as she heard those words and her lips curled into a semblance of a smile.\n\nGenesis absent-mindedly stroked her hair and caressed her face as he watched her sleep. He felt a strong ache in his chest when he heard her moaning and whimpering his name as she slept. He knew she had captured him from the first moment he saw her, and he had worked hard to capture her just as wholly with his love. \n\n\"You're mine, now and forever. No one will threaten to take you from me again,\" Genesis growled possessively. He hadn't realised how much anxiety he had felt about the AFP's investigation until it was over and his girl was finally free of any ties to the nightmare she had endured before him. It was hard for him even to remember the terrified, brain-washed girl he first met at the hospital. She was so much more than that now, and she belonged to him. His smile tightened because with ownership came great responsibility.\n\nShe was dependent on him as she had been on Remington and her Father before him for her role in life. Without that guiding hand, she appeared lost and alone. Unlike her sister who had protected her heart by hiding it behind her castle walls; his girl wanted to believe in fairy-tales and riding off into the sunset with a prince rather than the ogres she had to please to survive. Now he was that for her, a prince who had captured her heart, so it was his responsibility to keep it safe. There had been a pure, beautiful innocent woman hidden inside her, and he had forced her to reveal it. It was his duty now to make sure that she has never hurt again.\n\nGenesis's musings were cut short as he remembered the revelation he had when he had entered the cabin. He looked down at Olivia's serene face and bent down to kiss her lips. He let his tongue trace her lips until her mouth opened in a plea for more. He knew she was awake now, and Genesis softly whispered, \"We need to talk Little One. It's time to wake up.\"\n\nOlivia's eyes opened, and she studied his face almost as if she was seeing it for the first time. She expected this to be one incredible dream, and he would be gone when she woke up. He was still here, holding her, with his eyes telling her that he loved her as much as she loved him. She had been dreaming of the way he made love to her, and she wasn't ready to get up. Her eyes closed, with her lips curling into a petulant pout as she whispered, \"I'm not ready to wake up, yet, please just a little longer.\"\n\nGenesis knew how she felt. He wasn't ready for her to be out of his arms either. Still, he couldn't allow her to continue just going through the motions of living while withdrawing from everyone who loved her except him. Vivienne had become increasingly concerned about her withdrawal. She worried that Olivia was suffering from anxiety and depression now that she didn't have an excuse to hide away from the rest of his family. Genesis wove his fingers into her hair, knotted his fist and pulled her face away from his chest. Her eyes were open now looking at him intensely, and he could see her craving for more. \n\n\"Little girls who pout and say no to their Master could get a spanking!\" He growled softly\n\n\"Oh Master, do you promise,\" Olivia's whole face lit up with a mischievous grin. \n\n\"Absolutely!\" Genesis chuckled.\n\nGenesis flipped her over in his lap and gave her a quick smack on her very inviting ass cheek. Olivia moaned, wiggled her butt and seductively whimpered. Genesis laughed, he loved her playful manner, and he almost felt childish himself as they played together. \n\n\"Yes, but there's a time and place for everything. As much as I want to play with you, right now, we have to talk,\" he said seriously.\n\nOlivia's playful look faded and was replaced by one of uncertainty. Then she pressed against his chest, lifting her bound wrists over his head to wrap around his neck and kissed him softly. \n\n\"I'm sorry, I don't know what is wrong with me I will try harder to get to know everyone it's just a little overwhelming,\" she tried to explain using the only excuse she had come up with before she fell asleep. \"Please, we don't have to talk, do we?\" she asked while kissing along his jawline to his ear.\n\nTheir lips merged in a deep, loving and soulful kiss that affirmed everything both of them were feeling. The kiss would've gone on forever if Olivia could have made it last. Genesis broke the kiss suddenly and lifted Olivia out of bed with him and put her down gently so she could stand on her own feet. He undid the bonds from her wrists and ankles quickly and gave her a robe so she couldn't so easily distract him from getting to the bottom of her ever-darkening moods.\n\n\"Come,\" he held out his hand to her and led her from the bedroom. He then settled her on the couch beside him, grateful for the change of location and time to get his need to take her under control. He let out a long breath and decided to rip the band-aid off for her. \"The Suebi do not have Marcella. She is not being treated like you were by Remington,\" he said, watching her face morph from surprise, to shock, to relief, to a sadness he didn't understand.\n\nOlivia let out a long breath as he took away one of her deepest fears about what happened to Marcella. She said nothing, but allowed the relief to wash over as she came to the realisation that Marcella had left, even after she had reached out to her sister and all but begged her to stay, at least for a little while. The thought brought tears to her eyes.\n\n\"Talk to me Little One,\" Genesis cajoled in a soft voice. \"What is going on in that beautiful head of yours?\"\n\n\"She left then. Just walked away from us without even making sure the AFP took the evidence as proof of my innocence. I think that hurts more than believing they were holding her like I was,\" she whispered.\n\n\"I don't believe that either. We discovered some new information today that makes us believe the people responsible for the murders on the yacht may have taken Marcella with them,\" Genesis explained as he rubbed her back. \"We have no reason to believe they are as cruel or ruthless with women as Remington was. We have every hope that we can find her and bring her home,\" he hated giving her hope when he wasn't sure they could find the Varangian, who seemed to be able to disappear at will. Still, the man had crossed the Zenati, and regardless of whether Marcella needed rescuing or not, the cursed ones had marked the man who took her. It was about family pride now and the reputation they had for retribution on anyone who knowingly crossed them.\n\n\"So, she is a prisoner?\" Olivia asked, blinking a tear to her cheek.\n\n\"We don't know that either. She could have chosen to go with them when they found her held onboard that yacht by the Suebi. We don't know the how's and why's we just know who probably has her, and now we are trying to locate him,\" Genesis explained further.\n\n\"If she chose to leave, why wouldn't she choose to come back?\" Olivia asked.\n\n\"There are many reasons, too many to speculate about, but the chances of her being held the way you were are not even in the list. Marcella is strong, and we have to believe she can fight her own battles until we can find her,\" Genesis reassured her.\n\n\"She's a protector. Who is she protecting if not us? Do you think this killer will come after us?\" she asked her eyes wide.\n\n\"Only stupid men threaten the Zenati,\" Genesis scoffed. \"The man who has her is not stupid. He knows she lives under our protection so he won't hurt her. Not unless he wants to go to war with our family, and no one has dared challenge us like that in centuries. No one but the Suebi who targeted all the tables at that time. Trust me. This man is not that stupid. He is arrogant enough to have her, but not stupid enough to hurt her in any way.\"\n\n\"Is Noah going to go after her again?\" Olivia asked.\n\n\"Yes, we all will this time,\" Genesis nodded. \"I will need to be away from home quite a bit until this is done, but it's important. I need you to build relationships with the other women, not just Vivienne. You can't be wholly reliant on me for human interactions. I need you to be here and stay safe where I know you are protected. If I don't know you are here and happy, I may just lose my mind and let both Noah and Marcella down by needing to return to check on you more often than I should,\" he admitted.\n\n\"She loves him, you know?\" Olivia said after a brief pause where Genesis stayed silent. \"She won't admit it, but when we were talking, I could tell, and when he came and took her from that little balcony, she didn't fight him, she curled into him. She might never say it, but she loves and trusts him to look after her, which is probably why she left him behind to protect him.\"\n\n\"Yeah, I'm pretty sure that's true, but if they are never in the same room again, they can't work it out and be as happy as us,\" Genesis grinned at her. \"You are happy, aren't you? Now that you are free to be mine in every way possible?\"\n\n\"Yes,\" she answered simply and leaned forward to kiss him. She had waited long enough today for him to show her just how much he loved her.\n\nOlivia melted into Genesis's kiss. He had a way of possessing her with each wild, amorous, thought obliterating kiss. She still needed his arms around her feeling him close as everything else faded to insignificance as she basked in the white-hot heat of his love and pushed even closer in her attempt to meld with him. At the same time, Genesis rained kisses on Olivia's face as she tried to kiss him back.\n\nOlivia squirmed in his grasp as he gently pushed her from him until he set her on the ground, and she dropped to her knees in front of him. She leaned forward appreciating that he had remained naked save for the loose boxers he had pulled on when he had given her a robe to wear. She eagerly leaned in nuzzling against him and running her fingertips around the waistband as if asking permission to remove them.\n\nHer eagerness for him almost undid Genesis as he lifted his hips, allowing her to remove his boxers. As she settled back on her knees before him, her little ass resting on her heels, he pushed the robe from her shoulders enjoying the sight of her in the snug corset he had placed her in earlier that afternoon. He was momentarily mesmerised by her heaving breasts. He slipped his fingers into the bodice to tug her nipples up and expose them over the demi cups of the garment.\n\nFinally settling back, he allowed her to take what she wanted from him, expecting the slow tease of her hands followed by her tongue. Still, she surprised him by leaning forward and sucking most of his length into her mouth without the teasing tentative touches he was used to from her when given the freedom to do as she wanted. \n\nHearing his groans, sent quivers of pleasure down her back as she knelt at his feet worshipping his cock. It satisfied her in a way she had never known before Genesis, and his moans were food for her heart and soul. With his fingers threaded through her hair, he gently pulled her head onto his cock further and further. Feeling him grow in her mouth made her happy beyond reason. She wasn't sure she could even put it into words if he asked her too. Even when she gagged on his cock it made her yearn for more. \n\nShe felt powerful and sexy. Deep in her heart, she knew she belonged to him, but the few occasions where she had pushed him over the edge like this, and he had lost control and come in her mouth, she knew he belonged to her just as much as she did to him. \n\nOlivia became lost in the act. Her whole focus was on Genesis's cock, and the sounds of surrender he made for her. She smelled his scent, tasted his essence and knew that with him, she was free to be the carnal, sensual woman she wanted to be for him. Not because he made her that way, but because she wanted to revel in this love she thought she would never find.\n\nThe man she loved whole-heartedly may not be perfect for others, but he was perfect for her. The world around her faded away until he suddenly yanked her off his cock and pulled her up by her arms. Her eyes were glazed with heat as she looked at him questioningly. The question was answered almost immediately when she felt the head of his cock prying open her wet and willing pussy.\n\nOlivia wrapped her arms around his neck, and her legs gripped either side of his thighs. As she slid down his cock, her whole body trembled with sensation. He always felt so big when he first entered her tight pussy. She took deep gasping breaths as the exquisite torture of taking all of him spun her head and made her cry out loud enough for anyone close to their cabin to hear. \n\n\"Don't come yet,\" Genesis warned as he stood with her in his arms. He kept her impaled on his cock as he slowly walked them back to the bedroom, knowing that her clit and pussy would be stimulated with every step. He bent his head to swallow her whimpers and mewls of delight with a deep engulfing kiss as they moved slower than usual in this unfamiliar cabin.\n\nFrom the very first step, Olivia felt the need to climax consume her. She didn't know how it was possible, but his cock seemed to move even deeper inside her. Her clit and pussy were being caressed simultaneously by his rock-hard cock. Each bouncing step set off another round of excruciatingly pleasurable explosions inside her. It was unbearable pleasure bordering on cruelty as she tried to hold back the flood of her orgasm. She wouldn't deny him because there was nothing he could ask of her that she wouldn't do in their relationship. While he dominated her during sex, he took her the way she wanted to be taken. She was free; honestly, truly and finally free of all the ties that stopped her from accepting and revelling in the fact that this could be her life, not just a dream that she would be woken up from. It was only in that freedom that she could admit he had owned her body and soul from the moment they had met. \n\nGenesis loved, adored and protected her, guiding her and making her his queen. He filled her mind with wonder, passion and awe while the bliss built to explosive proportions in her body. He was wild as he thrust into the willing sweetness of her body and her orgasm tore through her body without her being able to hold it back any longer.\n\nHe pushed her hard against the wall of the bedroom fucking her hard and deep as she continued to come for him. Each orgasm seemingly more searing than the last. With the wall of the bedroom supporting her, one of Genesis's hands was free to slide into her silky hair and grab a fistful. He jerked her head backwards, exposing her delicious neck. The jolt of pain and pleasure rippled down her back as his lips and teeth claimed her neck.\n\n\"What a naughty little nymph you are,\" he growled into her throat.\n\nHer answering groan made her throat throb beneath his lips in this primal act of domination. The sacrifice of her neck had always been a very primitive and symbolic sign of submission. Olivia's exposed neck told Genesis that she trusted and believed in him. The delicious sensations of having him feast on her neck only enhanced the weakening jolts of her orgasm as he continued to fuck her hard and deep.\n\n\"You're mine, you belong to me and you always will!\" Genesis growled claiming her yet again not only for her, but also for himself. He didn't know what he would have done if Marcella hadn't moved heaven and earth to save her sister. He owed her everything, and he would find her and make sure she had everything she needed even if that wasn't a life with his brother. The thought that he had no more battles to fight to claim the beautiful woman in his arms completely swept him over the edge and onto the crest of his climax. He growled into her neck, biting her soft flesh, knowing he would leave a mark as he lost control and pumped his cum into her.\n\n\"Mine,\" Genesis groaned as he slid to his knees with Olivia's arms and legs still wrapped tightly around his torso. Both were hot and sweaty, but they glowed with love and satisfaction. ",
        "\"Yours,\" Olivia agreed in a hoarse whisper and laid her head on his chest, listening to the heart that matched her own. \"And you are mine,\" she whispered and smiled shyly claiming him in turn which she had never done in her life before. No one had been hers before; but she felt it now, with this amazing, patient, kind man and she didn't want to let go, not now, not ever.\n\n*****\n\nMarcella had done well not being recognised at the gallery. She hid her features behind her long sleek hair and spoke very little. She'd enjoyed the artwork and found that Konrad was unperturbed if she left his side to continue exploring the gallery when friends and business associates had waylaid him. The wine was good, and she had to remind herself that now was not the time to overdo things and lose sight of what she was here to accomplish, so she nursed her drink taking only small sips at timed intervals.\n\n\"I am eager to return home with you,\" Konrad murmured into her ear, startling her as she viewed a breathtaking landscape.\n\n\"Are you ready to leave so soon?\" she asked cocking an eyebrow and turning back to the artwork.\n\n\"I believe something more enticing awaits me beyond this gallery, despite the calibre of art on display,\" he continued to murmur close to her ear.\n\n\"In that case, I will just visit the bathroom quickly and meet you at the coat check counter,\" she smiled in agreement even though she felt anything but confident about the decision she'd made. She knew in her heart she needed to protect the people she cared for and that going back while Konrad watched and waited for her to do what she needed to end that part of her life was far too dangerous for anyone that might want to stop her. Her mind went to Noah, and she felt a pang of regret as she so often did since leaving the yacht. It was better this way. It had been a clean break, and they would all be better off for her absence. She smiled despite herself as she walked through the milling crowd towards the bathrooms. She had accomplished what she had gone to Darwin to do. She was now happy Olivia had found love, and would be cared for the way she deserved now that she was free of her past.\n\nBefore turning into the short corridor where the bathrooms were located, she looked back over her shoulder. She saw Konrad had been detained by one of the Donati brothers. She had trouble remembering who was who, but knew he would extricate himself as politely as possible in a minute or two and be waiting for her, so she hurried down to the bathroom. Marcella had to look at the door several times before realising it was unisex. She hadn't been expecting that in a building with such traditional architecture, but she pushed open the door and found a free stall despite several women who stood at the mirror refreshing their lipstick and fixing their clothes.\n\nShe'd barely sat down when there was a sudden movement of feet across the tiles, making her wonder if something was wrong. Still, after the wine, she found it almost impossible to stop mid-stream and resigned herself to the fact that if something were wrong, she would be stuck in here for a while. There was a knock on several doors, and the answering women were asked to leave the room as soon as possible. When the knock came on her door, she froze.\n\n\"Just a minute,\" she squeaked using her muscles to squeeze out every drop she could as fast as she could. She didn't want to endure the jet ride home with a full bladder. There was a grunted response and then a shuffling of feet, and she knew whoever it was, was waiting for her to appear. Embarrassed, she stood, righted her clothes and flushed before stepping out of the stall to find out what was going on. She stopped in her tracks when she saw who it was waiting for her before pulling herself together and apologising for delaying their evacuation and made for the small sink.\n\n\"I'm sorry, I'll be out in just a minute, is something going on in the gallery?\" she asked.\n\n\"Not at all,\" Peri Donati said with a smile. \"I have been trying to catch up with you all night, but it was as if you were avoiding me. I'm Peri Donati, and you are?\"\n\n\"Mischa. Mischa Grosso,\" she clutched at the only Russian sounding surname she could think of at the time. She wasn't giving this woman her new identity. \n\n\"Well, Mischa. I feel like I should know you. Have we met before, you seem so familiar?\" She asked.\n\n\"No, we have never met or spoken,\" Marcella said her eyes darting to the hulking Donati brother. He stood against the door, blocking her quick exit before resettling on Peri again.\n\n\"Are you sure you seem so familiar?\" Peri pressed. \n\n\"We were in the same place once, a long time ago. You would have seen me just as I know who you are. Still, we've never spoken or interacted in any way,\" Marcella admitted hoping that would be enough.\n\n\"You're from Brisbane originally?\" Peri continued to question wondering why this girl was so reticent to talk to her, and wondering if she was in some kind of trouble. \n\n\"No, perhaps we are both mistaken. I'm sorry my date must we waiting for me, and he will worry if I take too long,\" Marcella said as she tried to escape the thoughtful eyes of the other woman.\n\n\"Oh, I know all about that trust me. Bathrooms seem to be the bane of my existence, so I can't honestly believe I am doing this to you, but I just can't shake the feeling that I should know who you are. Up until recently, I hadn't travelled much so I can't imagine where we would have seen each other and never spoken, if you're not from Brisbane yourself,\" Peri frowned and looked at Dante. \n\n\"Canberra?\" Dante suggested, and Peri looked around wide-eyed at Marcella.\n\n\"You can't be old enough to have been there when I was,\" Peri gasped.\n\n\"I was forced to go. I was underage, but my Father lied so I would be trained to be the ideal of his perfect woman. Not once but twice,\" her throat caught, and she knew she was saying too much, giving away too much about who she was, so she took a steadying breath and began again. \"I have put that behind me now, and I am living my life the best way I can. Perhaps you do actually want to help me. In that case, you can let me go without making me go down memory lane into a nightmare just to satisfy your curiosity. If you wouldn't mind not mentioning this meeting to anyone, I would appreciate it,\" Marcella said with more than a little harshness to her voice, embarrassment and sorrow in her voice and expression, she came upon the unmoving Donati brother. \"Please excuse me,\" she added and pushed past a stunned Dante to exit the bathroom and hurry out to the coat check where she hoped Konrad would be waiting.\n\n\"Everything alright?\" Konrad asked, concerned by the look on her face when she got to him.\n\n\"I will tell you about it in the car,\" she said in a clipped voice. \n\nKonrad looked over her shoulder, and no one seemed to be following her or even looking her way. He frowned down at her, but guided her out to his waiting car.\n\n\"Peri cornered me in the bathroom,\" Marcella admitted as soon as the car started moving. She said my face was familiar and that she had been trying to speak to me during the night, but she thought I had been avoiding her. I told her my name was Mischa Grosso and I was in Canberra at the same time as her. It's not a big deal as there were hundreds of women there at that time. She was surprised about my age, and I had no choice but to admit I had been sent there underage which if she bothers to check will lead her to me,\" Marcella sighed. \"I asked her to let me get on with my life and put that nightmare behind me and not mention the fact that we had met as I had no intention of revisiting that nightmare just because she was curious.\"\n\n\"You said that, to Peri Donati?\" Konrad chuckled as if delighted. She will feel bad because her nightmare there was worse, and made national news. She wouldn't like being made to revisit that time either. I don't think you have any cause to worry about her following-up on that time in her life. She wishes to forget it as much as you do. I don't know your entire history, Mischa, and had I known of your connection to Peri I would have chosen a different Table to test your disguise. I wouldn't purposely cause you distress if I could help it.\"\n\n\"If you had known, that would have been an unfair test regardless. I would never ask the Donatis to help me,\" she admitted. \"Maybe I should have said something earlier, but I wasn't consulted about your game before coming to Donati territory. Nor was I given a lot of time to think about all the scenarios once you told me. Not that being locked in a bathroom with Peri Donati would have crossed my mind.\" She sighed and ended the conversation by turning to look out of the window, hating that she may have inadvertently put more people in danger.\n\n*****\n\n\"X-man,\" Dante chuckled into the phone.\n\n\"Dan the man,\" Xavier chuckled back. \"To what do I owe the pleasure of hearing your voice at this time of night?\"\n\n\"I found something tonight that you might be missing. Something I believe you've been searching for only I don't think it wants to be found,\" Dante spoke in an upbeat tone despite the seriousness of his call. \n\n\"Your sense of humour?\" Xavier asked drolly.\n\n\"A small blonde Pitbull, although I believe she was brunette until recently,\" Dante mused. \n\n\"Blonde Pitbull, you say?\" Xavier paused. \"In Brisbane?\" \n\n\"Was. She flew out after leaving the gallery tonight. The Ghost she was with is hard to keep tabs on as a rule. I don't expect they were more than an hour's flight time away, but we couldn't keep eyes on them once the plane left the ground. No flight plan was logged. I have people looking into it for you because that's the kind and generous friend I am,\" Dante said. \n\n\"I'm sure you will send me the invoice,\" Xavier deadpanned. \"The last time you did me a favour out of the goodness of your heart, it cost me a case of Sambuca. \n\n\"Look man, she said if we wanted to help her, we wouldn't tell anyone about our conversation. Only it wasn't hard to put the pieces together after finding Stevie West in your neck of the woods recently. She seemed resigned to her fate if anything,\" Dante mused condensing the short conversation Peri had with Marcella Gambaro. \"She was using the name Mischa Grosso, and with the blonde locks, she can pull off the Russian sounding name.\"\n\n\"And she is with the Ghost, by her own choice?\" X-man asked.\n\n\"Honestly, the feeling I got was that she was protecting someone else by staying with him. My gut isn't as highly tuned as Dom's. I always thought Leo had all the talent,\" Dante sighed still missing his twin and hating the vast hole left in his life that overshadowed everything he had now. \"Still, it hasn't led me astray recently. Who would she be protecting?\" Dante asked.\n\n\"Her sister, Olivia, most likely,\" Xavier said. \"Marcella was taken from us during the raid to find the evidence to exonerate for sister from colluding with the Suebi.\" He didn't explain any further knowing that Olivia's story of coming back from the dead after being found with the northern Suebi leader was well known amongst the leaders of the other tables by now.\n\n\"I'm trying to remember her exact wording, but that doesn't seem to gel with what I am feeling. Peri is involved now, and you know how that woman worries, and wants to save every lost girl who survived an induction to the family like she had,\" he sighed. \"There is something wrong there X-man, and you don't have to tell me what it is, but I'm here, and I'm willing to help if you need it. That's what our circle is about these days remember?\"\n\n\"Yeah, Nathanael has been helping despite his injuries. Did you realise how bad he was hit?\" X-man asked. \"Oscar tore shreds off me for going to him for help. I don't want Josh coming after me as well. Your little brother is one scary dude when he's pissed,\" he admitted.\n\n\"I live to piss the little guy off,\" Dante chuckled. Josh was the complete opposite of little in size and reputation.\n\n\"Calling him that ought to do it,\" Xavier chuckled and stepped onto a balcony closing the door behind him. \"D...\" his voice softened and became serious. \"This is much bigger now than just a missing girl. It's been a long time since someone challenged the Zenati's claim on anything and the blackcoats are not taking it well. Do you understand what I am saying?\"\n\n\"Yeah,\" Dante leaned back in his chair. His gut had told him something was very wrong when he saw the girl with the Ghost. \"You know who the Ghost is?\"\n\n\"Yeah, Konrad Van Kemp. We call him Game Master rather than Ghost, but both apply to the Varangian. I won't ask you or your family to become involved in what is essentially a Zenati issue. My Father's would not like it known that someone was stupid enough to challenge us in our domain the way this man has, or that we have accepted the challenge. However, any information you have about the Varangian would be welcomed between friends,\" Xavier said.\n\n\"I'll do you one better,\" Dante said. \"Security film from tonight sent directly to your email along with the last contact details I had for the man she was with. \"I believe the plane was heading north, but I am not sure how far we were able to track it. He could be in Sergi territory for all we know, but then that may be a good thing. Phill is the most gifted oracle this country has ever seen. I'll get back to you first up in the morning.\"\n\n\"Thanks, D.,\" Xavier said quietly.\n\n\"The circle, man. Consider calling a meeting. After recent events, it's more important than ever we stay together and have each other's backs. If Matteo didn't have ours and have Ricco sound the alarm... well that's a nightmare none of us wants to think about,\" Dante knew he was putting himself out there with Xavier. He tended to keep himself apart from the group for the most part. However, Lio had loved the man when they were kids, and for that reason, Dante was determined to reach out a helping hand. \n\n\"Have you started channelling your brother then?\" Xavier asked as if reading his mind.\n\n\"I think he's fucking haunting me, trying to make me play nicer with the other kids,\" Dante said disgustedly.\n\n\"Sounds like something he would do. I have to go. Talk to you in the morning,\" Xavier said with a catch to his voice and ended the call.\n\nDante looked a little stunned at the phone and went in search of Josh before he called any of his other friends. Josh needed to know that he intended to be on the right side of this war the Varangian Guard had declared on the Zenati. He already knew Peri wanted to help the girl who had looked so sad and resigned to a life she didn't want when she left the gallery.\n\n*****\n\n\"I trust that everything you asked for has been provided,\" Konrad asked. He watched Marcella close the document folder that had been waiting for her when they returned to his isolated home in the rainforest hinterland and sat back to regard him.\n\n\"It seems that you have been several moves ahead in this game of yours, to have all this at hand, including the cards required to access my new bank accounts,\" she said.\n\n\"Moves and counter moves. It pays to plan for all possibilities. My reputation guarantees that I play hard and that I am fair in the deals I make with others,\" Konrad said with the arrogance of a man who knew he was the best at what he did. \n\n\"Was what happen to the Suebi fair?\" Marcella tilted her head. It bothered her that he was allied with them until the moment of their victory and only then did he take action against the woman's insanity. Not that she was complaining. She didn't think Olivia would have been safe if Madonna had lived because of the way she had spoken about her. Still, she didn't like the callous way he had flipped a switch and killed them all in cold blood with no remorse or care for the lives he ended. Since that night, she came to realise that this Brotherhood Konrad led had no real allegiance to anyone but themselves, and even that was tenuous for those who made mistakes, even small ones. They were in it for the wealth and prestige that came along with contracts they took.\n\n\"It was necessary. We both know the Suebi princess was broken beyond repair. She would have reigned her special brand of mayhem and madness down on the northern reaches of the clan lands, and her mother would have encouraged her,\" he explained patiently. \"If nothing else your sister would have remained at risk even after the AFP dropped the charges against her.\"\n\n\"They did already?\" Marcella asked her eyes going wide in surprise.\n\n\"Indeed, it was fortunate that the Zenati intercepted the information your Uncle sent to the AFP which would have condemned her as a fraud. Still, I expect your sister is Zenati in name as well now,\" Konrad mused.\n\n\"She got married? Already?\" Marcella gasped blinking her wide eyes. Something inside her crumbled at having to miss that wedding, and all of the events in Olivia's future she would also have to miss if she stayed away from the Zenati for good. Her thoughts drifted to Noah, and the look on his face when he had let her go. She felt like her insides were crumbling to sit in the bottom of her belly, making her feel heavy and out of sorts. \n\n\"I would expect that Genesis would not have put it off any longer than he had to, but who knows what happens when they gather on that property in the middle of the desert,\" he rolled his eyes. \"The Zenati are strange and secret people, rumoured to be cursed because of their innate darkness.\n\n\"What if I changed my mind and decided to return to put my affairs in order before embarking on an affair with you. That was an option you gave me originally,\" Marcella asked, reaching out to place a hand over the folder that held the best escape plan she'd had ever.\n\n\"This is true. However, when you chose to leave with me this evening, you changed boundaries in which we must play this game. You made your move and will need to live with the consequences of that. By now the Zenati would know you were discovered with me at the Donati gallery, and that you left with me willingly,\" he shrugged and spread his hands as if there was nothing more he could do about the situation.\n\n\"Had you decided to return by seeking the help of the Donati you would have told them I allowed you to do that and what a gentleman I had been since allowing you to live when all else on that barge died. Choosing to leave with me was a betrayal of everything they had done for you since your time with them began. You chose to walk away, too ungrateful even to return and thank them for their kindness while saying farewell to your sister. I do not mean to presume that your time with the Zenati was without hardship. Still, as you have now spurned their generosity by choosing to remain with me,\" Konrad lifted his hands out to his sides in a palm-up gesture as if reiterating there was nothing he could do.\n\nMarcella had been through this type of tactic before. Her Uncle often tried to separate her from those who would keep her strong and buoy up her resolve to deny him any access to her body that he didn't force on her. She considered the man across from her, the Game Master, and took a deep breath. She had grown up playing the very real game of survival, and if he thought her easy to conquer, he would discover he was wrong, so very wrong. She would play his game and protect the ones she cared about, and she would win. \n\n\"I believe you owe me two weeks of your time, starting tonight,\" he said smugly. \n\nStill, she remained silent as she gazed at him passively, no emotions played across her face. She knew that to show anything of what she was thinking would be to give him a clue as to how to manipulate her, and make her compliant to the deal she had struck with him. Her counteroffer, she cursed herself for not seeing this man for the mastermind he was before now. He had known and been prepared for everything she had asked for and offered in return.",
        "\"I can sense your hesitation, so I will give you the evening to contemplate your next move. As I said, I am not a rapist, nor am I a prison warden. I have offered you sanctuary and protection here in my home. I can give you the means of escape not just from me, but everything Table related if that is what you want,\" he tapped the folder meaningfully, then drew it back across his desk to slide it into a drawer.\n\n\"An evening to consider all I have learned from you today would be good thank you,\" she replied as equally formal as he was being.\n\n\"I will, however, offer you two incentives to honour the choice you have made, and prove I am not the monster you think me to be. Give me what you promised for our time together, and I will take you to see Jessa. She is in the hospital clinging to life after her husband tried to force her to take her own life to protect his secret deal with your father. I will also allow you to watch the funeral of the Aunt you lived with from a distance, and pay your respects at her graveside,\" he said, observing her with knowing eyes. He was pleased she had reacted to the two incidents he discovered; he was concerned that she would shut down and internalise the information she clearly hadn't known about. It seems your Uncle and Father have been tying up loose ends of their own recently.\n\nMarcella swiped the tear that rolled down her cheek at the news of Jessa. She had always seemed so happy and in a hurry to be with her children whenever Marcella had called her. She had no idea Jessa was in trouble, or that she had married a monster like her Uncle and Father. She had believed Jessa had escaped to the safety of the Farnese Table, and she had let herself believe the excuses of her sister when she refused to facetime chat with her. Her Aunt was old and had lived a quiet, solitary life. Perhaps her death was a kindness for the older woman who had been ill for some time. It was Jessa that made her heart constrict. She had been off trying to save one sister while the other had almost died at the hands of someone who should have loved her.\n\n\"We will talk again in the morning about the choices you have made,\" Konrad said softly helping her from the chair and walking with her to her room. \"I am sure you are tired and upset by the news of your sister and Aunt. If you need anything during the night come to me, my door will always be open to you, Mischa.\" He said as he stroked her cheek with the back of his knuckles. He left her in the doorway of the suite of rooms she occupied and walked away. \n\nMarcella looked down as she closed the door and leaned back against it. Now she had to create a strategy of her own to survive this fucked up game of Konrad's. Still, the rebukes he had given her in the most gentlemanly of ways continued to sting at her mind. She hadn't spurned the Zenati, had she? She had walked away from Noah and all he had done for her despite continually trying to push him away. The look on his face as he asked her to stay as he declared his love for her froze in her mind. Had she spurned him and his family when she had walked away tonight? It shook her to the core that she might not ever be able to return now, even to see Vivienne and Olivia and the families of their own they were creating because of the choices she had made. \n\nIt was true that she had been living on their credit for months now, travelling and investigating using their resources. All she did was argue and run from the very people she was reliant upon. She couldn't have done any of what she had accomplished without their backing, or at least their cars and money. She thought about the huge hole she had made in her modest nest egg by running away from the hospital before Noah found her and took over the financial burden. She knew that if not for the generosity of the Zenati, she wouldn't have been able to afford to stay and help Olivia.\n\nMarcella admitted that she did owe them some sort of thanks for taking her in and allowing her to stay when her father had ordered her home. She sighed and thought about everything Noah had told her about his family. They didn't send their girls for training with the Battaglia, the women all had careers if they wanted them as well as families and charity work outside the home. They had shown her time and again that they were a different type of table to the rest and although all arrogant and controlling in their own way, particularly when it came to keeping their loved ones safe, she could admit this now that she was doing exactly the same thing. \n\nMarcella had decided without any consultation that her way was the best way to get what they needed and left Noah behind to keep him safe. She had almost been killed along with the others if Konrad hadn't decided to try and seduce her into his bed. She thought about Jessa all alone and critically ill in hospital; Olivia, when she had asked her to stay; and of Vivienne who had been there for her as only a best friend could. She sighed. She hadn't even called Vivienne back as she had promised she would. She lay down and let her thoughts swirl in her head, sinking lower and lower into a funk created from all the mistakes she had made recently. Would the biggest one be trying to beat the Game Master at his own game? What was two weeks in the grand scheme of things? She'd done worse to protect the ones she loved.\n\n*****\n\nNoah woke with a start. There was movement in his cabin and the smell of coffee brewing. He looked at the time and cursed. Who the fuck would be in his place at four a.m. It was the first night in the last two weeks he had slept here, in the big bed he had thought to be sharing with his kitten making her purr just for him. He pushed those thoughts from his mind and slid quietly from the bed, padding silently out into the main open-plan room.\n\n\"Morning,\" Xavier said casually from the kitchen bench where he had set up cups of sugar and milk as well as a plate of breakfast pastries.\n\n\"Why the fuck are you here at this time of the morning?\" Noah grumbled, sinking heavily onto a stool beside the kitchen bench. \n\n\"Because I need to tell you a few of my secrets, and I don't want interruptions or prying eyes,\" he continued to sound casual. Still, Noah sat up straighter, dread coiling in his belly at the words. \n\n\"Dom?\" Noah asked.\n\n\"He already knows all my secrets,\" Xavier chuckled, but Noah got the feeling there was more about Dom than Xavier was letting on. \"He has recovered well, and plans to live for a while\" Xavier smiled then poured two cups of coffee. The expression on his face told Noah that whatever Xavier had come for was important. \"Let's sit in the comfortable chairs, shall we?\" He handed Noah a cup, and led the way over to the small sitting area and soft cushioned sofas.\n\n\"Alright,\" Noah said warily and followed sitting adjacent to the man with the pastries and coffee between them on the low table.\n\n\"Can I invoke client-attorney privilege?\" Xavier asked, then gave a crooked smile and a half chuckle.\n\n\"You didn't have to ask, but sure let's make it clear that nothing said here goes beyond us for now,\" Noah nodded.\n\n\"It will go beyond us to a select few, but you will know who you can and can't share with by the end of it,\" Xavier stated and sat back gathering his thoughts. He was still deciding where to start when the door opened quietly and was shut by the man who came in.\n\n\"I told you to wake me up arsehole,\" Dom grumbled. \"There better be coffee ready.\"\n\n\"I'll get you a cup,\" Noah said and stood heading for the kitchen as Dom glared at Xavier and slumped into an armchair.\n\n\"What have you told him so far?\" Dom asked.\n\n\"Nothing just that I want to share a few secrets with him,\" Xavier shrugged.\n\n\"Good, then you can't fuck it up like you did when you told me. It's important, now more so than ever,\" Dom harrumphed. \"So, Noah here's a brief history of the tables which you already know but bear with us for this. Wealth, money, power, some have it, some don't, the history is pretty checked. The Savoys will have you believe they have it and deserve it because of their links to the royal family, but they have very little of either except the name which is why the Martino family rule over the Savoy on the same table. The Donati and Vitali and to some degree the Farnese family have it all in spades which is why they are allies and equals in each other's eyes. The Pellegrini were like that once, but have had several falls from grace internationally in recent times, and their reputation is gone. With me so far?\"\n\n\"Six of the others have one or two of the three elements, but not all and therefore tend to band together for strength in numbers when opposing the more substantial tables. Still, those alliances can grow and change depending on the issue at hand. Then there is the last two. The Battaglia, who remain partisan so they can provide unbiased warriors to those that require them and contracted workers without prior allegiance. That leaves us. We have never offered an alliance to anyone, not a single table or a group. We make our own decisions and fight our own battles. We have wealth, power and reputation, but it is tainted and, in some cases, feared, because of our curse. This is why we have never stood on the same level as those at the top of the table, so to speak. We have been known as the Black Coats, the Blade Masters and the Cursed Ones at different times in history. None of this is news to you, I am sure,\" Dom finished.\n\n\"I'll agree, and add that in medieval times we were probably on top of all the tables in reputation, power and money. It is the more peaceful current times that allow us to fade from the spotlight and people like the Varangian feel they can challenge us,\" Noah added and found both his companions nodding in agreement.\n\n\"When they came to this country our great grandfathers formed tentative alliances with those closest to them in distance around this country, and the east coast quickly controlled the thirteen with both the Battaglia and Zenati abstaining from many issues. The next generation fought to find better alliances with like-minded families, traditionalists versus new ways of thinking. That type of thing. Just as our fathers were coming into power, there was an uprising from the Suebi threat across Europe, and the celts began pushing back against the tables in the Americas. There were random attacks here, mostly on the Donati's and Vitali's. There was some concern that the hostilities would grow so to strengthen ties between all the tables they came up with a plan,\" Dom continued. \"That plan involves Xavier and his secrets.\" He grabbed a pastry and his coffee and sat back as if finished talking.\n\n\"Oh, so I can talk now?\" Xavier huffed. \"Haven't been able to shut him up since he got the ability back after his surgery.\"\n\nNoah chuckled and said nothing he had no idea where this impromptu history lesson was taking him.\n\n\"Let's cut to the chase, you know we got an early warning about the attack on Mama when it happened,\" Xavier said.\n\n\"Yeah, we caught a lucky break that time, it wasn't expected at all,\" Noah agreed. \"We could have lost Emma as well if the alarm hadn't been raised.\"\n\n\"Any idea where the alarm came from?\" Xavier asked.\n\n\"I guessed the watchmen, I never questioned it,\" Noah shrugged. \"Before now,\" he frowned.\n\n\"I hit the alarm,\" Xavier said quietly. \"I got the information from a group text from Ricco Vitali as did every other table who was able to prepare for the attack, some with minutes only to spare, and minimise the casualties.\"\n\n\"How did Ricco Vitali know the Suebi would attack Junie?\" Noah's frown deepened. \"Or the other mothers in a coordinated attack?\"\n\n\"The Vitali had been under siege from elements in the Martino family who had links to the Suebi, just as the Donati had been meddled with by the Suebi through the Pellegrini family. It seems there has been a wider picture to drive wedges between the tables leaving the Martino, Pellegrini and Battaglia with their reputations in tatters, and the strongest of the families picking up the pieces of ruined lives. Through it all, there has been one constant thing,\" Xavier said pausing to take a breath. \"A secret called the circle.\"\n\n\"Ricco is part of this secret circle?\" Noah said, reading between the lines.\n\n\"No, but his brother Matteo is,\" Xavier said. \"I flew to Hong Kong to meet with him for a bachelor party of sorts with the other ten men who remain in our circle. We are rarely seen all in one place, unless representing our families at the wedding of a future chair or an important funeral. Even then, not all will attend. Having the opportunity to meet outside of the country was one we all took, and we were able to discuss the turmoil plaguing the Vitali, Donati and several other tables at the time. Matteo gave Ricco, his oracle our numbers for emergencies, and that is how every table knew of the attack minutes before it came.\"\n\n\"Okay and you are telling me this secret because?\" Noah asked.\n\n\"Because, Nathanael Gambaro, Marcus Battaglia, Tony Martino and now Dante Donati are involved, and I might as well include Massimo Farnese in that group. That's already over half including me, and if I don't invite them into the fray they may just come anyway and make matters worse,\" Xavier sighed.\n\n\"Okay I get the Gambaro's and Farnese, Even the Battaglia and Martino table after Apollo's visit, but why is a Donati involved?\" Noah furrowed his eyebrows, making it seem like a permanent state this morning.\n\n\"Because Marcella showed up in his gallery last night, disguised and hard to recognise, but it was her. She was with a client of his called Konrad Van Kemp,\" Xavier said. \"D. called me as soon as they left, he had people trying to track them. Still, she went Konrad willingly Noah. D. thinks it was because she was protecting someone or something, but she asked them not to interfere.\"\n\nNoah didn't say another word. He stood and went to his room to pack, wondering if Gideon would fly him to Brisbane, or if taking one of his companies planes and pilots would be worth the loss of income. Either way, he had to leave now while the trail was fresh.\n\n\"Noah, stop. They flew out of Brisbane right after leaving the gallery. They didn't log a flight plan, but Dante is trying to get details for us. There is nothing to be done in Brisbane except ruffle feathers. That's why I am telling you this. I have people in every major city and rural area if you will trust my friends and me, all of whom are either chairs or oracles of the new tables,\" Xavier said.\n\n\"Why didn't you start with that? They could be anywhere now, and I am a whole day behind the sighting,\" he growled, throwing the duffle he had been packing onto the bed.\n\n\"Because there is more and I need you calm to hear it, so punch Dom if you need to hit someone and let's go back to the sofa,\" Xavier said mildly with a half-smile as Dom protested his brother's offer.\n\n\"I have been wanting to punch Dom for a while,\" Noah mused, trying to tamp down all the rage he had been burying since being released from the clinic.\n\n\"Trust me, you aren't the only one,\" Xavier chuckled. \"It's the fact that he's always right. You think he could fail just once in a while to make the rest of us feel better about fucking up on the regular.\"\n\n\"Speak for yourself,\" Noah lifted an eyebrow. \"I am practically perfect in every way.\"\n\nThe three men chuckled and went back to the sitting area. Then they speculated on how to use the circle to cover all the bases and narrow down the movements of Marcella and the Varangian instead of charging around blindly.\n\nThe older sister in the hospital and the funeral of the Aunt were likely places she may pop up if at all after being recognised last night. However, suppose it was Konrad who had been sowing the seeds of discord amongst the tables in the previous few years. In that case, he may go after one of the Tables who notoriously sat on the fence on all decisions in deciding whether to take action against another. \n\nIt was time to take Dante's advice and call a meeting of the circle, Xavier admitted. His heart ached for his first love who was no longer among that group of men. While he was happy in his marriage, Lio Donati had been his first love, and they had secretly met to spend stolen moments together right up until his death. Just the memory of that made him sad and made it almost impossible to deal with Dante in person. Still, he had to swallow down that heartache and do what needed to be done. If he and Dom were right about the bigger picture, the Tables needed to stand together and show a united front while the Zenati did what they do best.\n\n\"I'm going to head down to the forge this morning while you talk to your fathers. I won't be able to hide my fury as the older men bicker. Everything you said sounds more than plausible and should give them pause to consider their vendetta in a different light. Maybe even consider involving the others who are affected, so relationships don't become even more strained than they already are. If turning the tables against each other has been his plan all along he's winning right now,\" Noah said as he shrugged on a heavy fire-retardant shirt and some long pants.\n\n\"We'll let you know. I want you in the circle meeting even if it's off-screen,\" Xavier said.\n\n\"You got it, boss,\" Noah saluted and left the cottage feeling better than he had the day before. They had a solid plan with solid leads, allies they knew were loyal to Xavier and the circle if nothing else. Now he just had to pray that Marcella wanted to come back to what they had begun to feel for each other.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "doninant",
        "family",
        "secrets and lies",
        "submissive",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-29"
}