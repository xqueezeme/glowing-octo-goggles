{
    "title": "A Matter of Blood Pt. 03",
    "pages": [
        "==============================================\n\nCHAPTER SEVEN\n\n==============================================\n\nNow\n\n\"Really? You're going to throw your only weapon away? I taught you better than that.\"\n\nIt was another voice. A little higher pitched. Throaty. Feminine. Commanding. I recognized her too, of course. I even got an erection because my cock didn't really care how much trouble the rest of me was in.\n\n\"Oh, for fuck's sake,\" I said softly, \"this is entirely unfair.\"\n\nI relaxed my stance. This person, at least, I really didn't want to kill.\n\nWith fluid ease she dismounted her horse. She unsheathed her sword and handed it to Kyrza on her way past. I decided to do the same. I let go of Caliban and she remained there, floating. It was a neat trick that I mostly used to look mysterious and impress people. I met her about twenty paces away, roughly halfway between my spear and her soldiers. \n\nShe removed her helm. I sighed, in sorrow, nostalgia, and anticipation. Adewyn was just as beautiful as I remembered. Perhaps more so as she had grown into her body. She wore her pure white hair short, and it was sweaty and unruly from being in her helm. She was tall for a woman, but not quite as tall as I. Her fine armor could not cover her shapely form, at least not entirely. I knew that beneath it she was toned muscle but also soft slopes. She had athletically curved hips and fine breasts, not large but pert and with deep red nipples. Her skin appeared tan and was naturally slightly darker than mine. I wondered if she still trimmed her sex. All this I remembered easily.\n\nAdewyn had her full brother's aristocratic features and proud nose. I did not wish to be reminded of Tyr just now and her allegiance to him, so I pressed down my rage for the moment.\n\n\"Why are we not fighting?\" I asked.\n\n\"Because I didn't come here to fight. And because you don't want to die.\"\n\nI laughed. It was bitter, but honest.\n\n\"Times have changed. I don't want to fight you because I don't want to kill you. If you hadn't spoken up I'd be full of regret by now.\"\n\nShe raised one eyebrow skeptically.\n\n\"It doesn't matter. I'm here to find you but not to kill you. Or capture you. I'm...I'm not here on father's behalf, or Tyr's. Not really.\"\n\n\"Then who?\"\n\n\"Mine. Yours. The kingdom.\"\n\n\"You're going to have to be a bit more specific than that.\"\n\nIt was her turn to sigh. I noticed that throughout our little conversation she had difficulty meeting my eyes. It was a shame as hers were the dark blue of the sea during a storm. I couldn't tell if her reticence was due to deceit or guilt.\n\n\"I can be. I want to be. But do we have to do this? I mean, can we make camp and sit in a tent and speak...like we used to? Before...before...\" she stopped and rubbed the back of her head the way she did when frustrated or unsure. \n\n\"All right. We'll talk. I don't think it will be like old times though.\"\n\n\"Why not?\"\n\nI smiled like the wolf I had become but did not answer.\n\nWe pitched camp next to a small stand of pines and a spring of clear water that probably froze every night. I had no tent but at Adewyn's insistence I put my bedroll and pack inside of hers. I didn't bother unrolling it. When we were done, she gave some orders to Kyrza, and she waved me into her tent. I went in cautiously. I left Caliban embedded in the soft earth next to a pine tree. She would warn me if anything untoward happened outside or someone was foolish enough to touch her.\n\nAfter we sat down Adewyn offered me some wine and stale bread. We ate and drank in silence for a few minutes. Finally, she spoke.\n\n\"I need you.\"\n\n\"I don't need you.\"\n\n\"Are you sure?\"\n\n\"I haven't truly needed anyone for five years. Why do you need me?\"\n\n\"I...fuck. Look, can we clear something up first?\"\n\nI nodded and waited for her to speak.\n\n\"I didn't know that Tyr planned to kill you. I didn't even know any details for over a year. And by that time...I thought that it was too late to do anything about it. He told me that he had heard that you were going to try and usurp him and father, so he confronted you and you attacked him. In the struggle you were stabbed and thrown out of the window. It bothered me. Even considering how much you cared for Merwyd it didn't make much sense to me. Finally I cornered him and demanded the truth. He admitted that he struck first but he still insisted that you had been plotting against him.\"\n\n\"And you believed him after the first lie?\"\n\n\"Yes. I'm stupid. And I loved him. You know I did.\"\n\n\"Once you told me that you loved me. But I'm sure you fucked my would-be killer and slept soundly in his arms afterwards. For a year, at least, probably much more.\"\n\nShe reacted as though I had slapped her in the face. She always had a soft, or perhaps I should say wet, spot for Tyr. \n\n\"I...I know. I still believed him. I did. I thought that you had truly revolted, or planned some kind of coup. For love. It seemed like something that you might do. We all knew that you were still sleeping with Merwyd and smitten with her. Probably more than she was with you. So it wasn't that big of a stretch to think that you might try something desperate.\"\n\nI started to move towards the tent to leave.\n\n\"I've heard enough. You sit in my presence and defend him still. I owe you nothing. Don't seek me again.\"\n\nShe reached out and grabbed my arm as I reached for my pack. I tensed and looked at her. She tentatively released me.\n\n\"Please. Just listen. I'm not...not defending him. I'm not even defending myself. I'm just explaining. Even after I knew that he struck first, I still loved him. Would you have had me kill one brother to avenge another? Who might have been a traitor?\"\n\n\"Yes.\"\n\n\"Things aren't that simple and you know it.\"\n\n\"I think that you'll find that outside of Marche Grodayn things are much simpler. There are your friends and there are your enemies. Kill one and save the other. You made your choice. Why are you here now? How can you expect me to help you?\"\n\n\"Something is wrong. The kingdom is falling apart. Rebellion has spread south and the lesser houses are taking notice of the opportunity to strike out on their own. Tyr isn't acting normally and I can't find father, although I know he is somewhere in the North. Possibly in Jorvik. And Uncle Bayrd has been left in charge at Marche Grodayn but he was prohibited from taking any action.\"\n\nI had my suspicions at this point, based on what Raisa had told me. I had no proof, however, so I kept them to myself.\n\n\"What would you have me do?\"\n\n\"Help me to help Tyr. Or come with me and speak to Bayrd. Or help me find father. Or just reassure the people and the army that someone is in charge. After all the strange things that I have seen I believe that you were not treated fairly. That you were loyal. If we can't find father so that he can help Tyr to recover...then I'll support your claim to the throne.\"\n\n\"Why does Tyr need help? Is he sick?\"\n\nShe looked away from me, at the ground. I had never seen her display such...shame? I tried not to let it show but it bothered me. Despite what I had said, I knew her to be ethical, and once sworn she would be loyal. I was prodding her, yes, but to see what her responses would be. She would be loyal to Tyr because he had claimed her a few months before I had been attacked. And she had loved him and probably even me at one point. The fact that she was conflicted at all was, to me, strange.\n\n\"He...I...I can't talk about it.\"\n\nAdewyn brought her arms up and hugged herself. She still hadn't looked at me. I was concerned for her now, although I didn't want her to know it. She was a defiant woman, strong, who loathed to show any fear or weakness. Both her mother and father had similar habits, and they seemed to only intensify in her. Of all of my relatives the army respected her the most. She was the second oldest sibling, and used to being obeyed or at least respected. Her posture now was not that of a commander of armies but more like that of a lost child.\n\n\"What if I agreed to look for father with you first? But nothing else. I cannot even truly promise that I won't kill him if I see him, if he was behind or supported my assassination.\"\n\n\"I can accept that. As long as you agree to claim the throne if we can't find him.\"\n\nI raised my eyebrows in shock.\n\n\"Claim the throne? Even if Tyr is alive?\"\n\nShe bit her lip, but nodded. \n\nAdewyn's response surprised me a bit. While I was distracted with the implications of it, she moved her hand to my leg, which startled me. When she had my attention she looked at me with her deep blue eyes and smiled. In the confines of the tent I became suddenly aware of her smell, sweaty and musky. My cock responded.\n\nI realized that I had much more desire for Adewyn than trust or love. I frowned and shook my head. She drew her hand back as if I had burned her, and I could see the hurt in her eyes.\n\nI wish I could say that this didn't affect me. That I had grown cold and used to being alone. I wanted to be free of old bonds, free to avenge myself properly. \n\nBut part of me still wanted to hold Adewyn, to make love to her. Sleep came with some difficulty that night.\n\nSo started the long path back home. I look back now and question how I could ever have thought it would be as simple and straight-forward as vengeance.\n\n==============================================\n\nCHAPTER EIGHT\n\n==============================================\n\nJorvik was busy, even for the late harvest season. The port was bustling and the forges were hot. The people, however, were even more sullen and suspicious than normal. I was used to the \"courtesy\" of the North, and I knew something was wrong. \n\nRebellion was so thick in the air you could almost smell it. Everywhere you could hear commoners speculate on the King, Duke Eorvane, and even the Guilds of the City. Each was suspected of conspiring against at least one of the others. The only solid bet I would take is that the Duke was readying his army to march towards the best opportunity, whether that was independence, defense, or even for the crown. \n\nWhen we arrived we went straight to the Ducal Palace, a hulk of grey stone and barred windows that squatted on the hill at the center of the city. Adewyn and I had decided to let Kyrza speak for us until we'd reached Eorvane. We weren't sure what kind of reception we'd get or if the Duke was involved in father's disappearance. Eorvane was generally honorable, as these things go, but I suspected all nobles of being as loyal as their opportunities.\n\nWhen we arrived, the majority of the troops were made to wait outside in the courtyard, but as Kyrza's \"lieutenants\" we were allowed to wait with her in a well-appointed room with fur rugs, plush chairs, and a roaring fire.\n\nI took my gloves off and held them before the hearth, although I left my helm on. This was the first time that I'd felt warm in weeks and I was happily taking advantage of it. Adewyn had unmasked and raised her eyebrow but said nothing. Her disapproval became palpable when the Duke and his entourage entered the room and I did not rise.\n\nThe Duke was a bear of a man: tall, burly, and hairy. His beard sprawled over his face like black ivy, and his thinning hair was braided down his back. He was at least fifty, but had the energy and capacity for drink of a much younger man.\n\n\"Kyrza. Good to see you. We've been waiting for news from Marche Grodayn for some time and...well.\"\n\nHe did a good job of concealing his surprise when he saw Adewyn. He knew her of course, and she would stand out anywhere with her bright white hair. He ignored me, which was what I wanted.\n\n\"Duke Eorvane, you have my respects and those of my family,\" Adewyn said, always the dutiful girl. The Duke wasn't feeling quite as diplomatic.\n\n\"Adewyn. Your family has an odd way to show respect. We ask for assistance in putting down my rather disobedient neighbors. Beg for it, almost. And what news do I hear? That the King, your own father, was marching here to put Jorvik to the sword! I ought to have you in chains for this. Perhaps he'd listen to me if his dear daughter was in my hands, eh?\"\n\nAdewyn was surprised, and took her time responding. She was holding back her anger, but just barely. I decided to help. I laughed rather loudly. Eorvane looked in my direction, his eyes blazing.\n\n\"You dare! I might arrest her but she would be treated well. I assure you that you will spend some time in chains...\"\n\n\"If you want to arrest either of us,\" I said, slowly standing and removing my helm, \"then you'll need a few dozen more men. Good ones too, not your usual drunken northerners. And maybe a capable chamberlain to remind you of what happens to those that detain princes of Pure Blood\"\n\nI looked different. My hair was shorn fairly short, and I had a beard. I had ceased dying it a few weeks back and the natural white was starting to show through. He took a moment and examined me.\n\n\"Finn?\" he said finally, with a little bit of shock, \"By the gods it is you! You damned lout! I thought you were dead! Everyone did!\"\n\nJust like that the tension was gone. If it was ever there. Adewyn looked very annoyed with me, which was a nice side benefit.\n\n\"Even I did, but it turns out I was just in Troyes.\"\n\n\"In the South that bull about you being a rebel might have flown, but up here we knew you wouldn't try to take the throne. You're too damn smart to want any actual power getting in the way of your womanizing.\"\n\nI laughed.\n\n\"Do you think we could talk with you? In private? We need your help.\"\n\n\"Yes. Of course!\" He looked over at Adewyn, rather sheepishly, \"I would never have had you arrested...it was a strategy to get you talking, nothing more. Come. Lets get you some food and drink and then we can get to business.\"\n\nWe were led to a small but opulent meeting room, where we ate cold meat and cheese and drank fine wine. No one spoke of anything important, and we joked as if were all old friends. Even Adewyn told a bawdy tale about a milk maid and three knights. It was nice. But all nice things must end. The food was cleared and we were left alone.\n\n\"So,\" the Duke said, \"things must be serious if a prince and a princess are here to see me. Especially when one is dead and the other is married to the heir.\"\n\n\"I'm not,\" Adewyn said suddenly, \"Married to the heir. Not any more.\"\n\nEorvane's and I both looked over at her in surprise. That wasn't something that happened to Pureblood women. Almost ever. She blushed and neither I nor the Duke was going to press her on it. It would have been asking her specifically how her humiliation took place.\n\n\"Well,\" she went on, capitalizing on our silence, \"Father is missing. He's supposed to be somewhere in the North. Maybe even here. And things at home are...well, they aren't normal. We're trying to reach him to tell him what is going on and persuade him to come back. Has he been here?\"\n\nDuke Eorvane sat back in his chair. It was obvious to both myself and Adewyn that his surprise was not acting. After a long moment of silent consideration, he spoke.\n\n\"I can swear to you that I've not seen your father in two years. And even then it was back in Marche Grodayn, to speak to him about the troubles up here. He assured me that Tyr would be coming north with an army and all would be well, but that never happened. Tyr and your Uncle did come, but there was no army. He wished to undertake the Journey as soon as possible. When he was done, he went home. He barely spoke two words to me the entire time he was here. You two are the first of the royal line that I've seen since then.\"\n\nAdewyn looked at me, her face devoid of expression. She didn't know about the Journey. Only men were told. And then only royalty and the heads of noble houses. I would get her caught up later though.\n\n\"Did he pass?\" I asked, simply.\n\n\"He certainly survived to return home. I learned later from the Keeper that your uncle also took the Journey. I know that isn't the way things are done, generally. Unless you have something to tell me?\"\n\n\"I don't. Neither of us do. All of this is...strange. Will you help us? To find father? And to deal with my brother and uncle, if it comes to that.\"\n\n\"Finn,\" he said, stroking his beard thoughtfully, \"I think you know that up here in the North those of us who are loyal to your family would prefer to see you in charge over Tyr or god help us, your uncle. Especially along side Adewyn.\"\n\nAdewyn looked flattered by that. The army loved her, so the North loved her too. She was always seen in the field, never hiding in a castle or dressed for a ball. She would be ideal at dealing with people like Eorvane. He went on.\n\n\"But I can't support Finn the Usurper. Even if I don't think the tales are true.\"\n\nHe finished. I rather assumed that was that, but Adewyn didn't.\n\n\"What version of Finn could you support?\" she asked, craftily.\n\nHe smiled at her.\n\n\"A good question. Well, now that it comes to it, I could support Finn the Rightful Heir. I could even support Finn the King. But for that, he'd have to take the Journey, wouldn't he? And survive without out going mad, of course.\"\n\n\"Of course,\" I agreed, wryly, \"It would be a shame if I died. All right. I'll take the Journey, and Adewyn will be my Guard. When I return from that, we can speak to the Comdail of the North, and I can make some concessions and threats, and see who falls in line and who doesn't.\"\n\nThe Duke nodded and smiled widely. He would be happy, after all. If he backed me and I ended up on the throne he would end up being my main supporter in the North, and I'd have to be his very best friend. Well, I had no intention of taking the throne, but he wasn't the worst person to be friends with, not by a long shot.\n\n\"Go and get some rest, both of you. I'll get you some rooms. Tomorrow the Keeper will take you down to the caverns,\" Eorvane said, pausing for a moment as if he had thought of something, \"On the bright side, if you go mad, no one will be able to tell.\"\n\nThen he laughed a long time at his own joke. So did Adewyn, to my dismay. \n\n* * *\n\nWhen we arrived at our rooms, which were quite well appointed, the storm that was brewing between myself and Adewyn broke in earnest. For my part, I will say that I did nothing to stop it, which isn't my proudest moment.\n\nKyrza and her men, sensing trouble, disappeared pretty quickly. I wished that I could join them. I didn't want to deal with this right now.\n\n\"What the fuck is this Journey? Why didn't you tell me about it?\" Adewyn demanded. Well, at least she wasn't shouting.\n\n\"It's the last requirement of kingship. Technically it happens after being crowned, but it could happen before. It's not generally shared with, uh, women. Even royal ones.\"\n\n\"Why the fuck not?\"\n\nWhy the fuck not, indeed. I could see no good reason for that, but several bad ones. I was, however, not in any mood to be a peacemaker.\n\n\"Because it isn't any of your business. Not that you'd understand that, being who you are. The short version is that it reveals great wisdom but can kill you or leave you insane if you fail to rise to it. Perhaps they were afraid that women like you would see this as an opportunity to expand their power or select someone they preferred to survive.\"\n\n\"What do you mean, 'like me'?\" she said, softly and dangerously.\n\nThis is where, had I been thinking, I would have said something truthful but not incendiary. Or even just hugged her. I did not do either of those things.\n\n\"I suppose I mean plotters and liars.\"\n\n\"What?\"\n\n\"You heard me. Were you going to tell me that Tyr had discarded you like an overly tumbled tavern wench?\"\n\nLooking back, if she had stabbed me at this point I would have had a hard time blaming her. \n\n\"How dare you say that to me! I found you! I...I believed you!\"\n\n\"Sure. A few years too late, but who's counting. And did you believe me? Or did you just need someone to go force your beloved Tyr to take you back and then perhaps conveniently die?\"",
        "She stepped forward and slapped me, hard. \n\n\"That's more like it,\" I said, throwing caution to the wind, \"Adewyn the Proud, delivering just punishment to her impudent younger brother. I don't fear you any more and I see no reason to help you to return to Tyr's side. And I won't be his stand in until you do.\"\n\nI moved to the door. I expected something to be thrown at me or hurtful words to be shouted in my direction. Or perhaps even to hear the sound of an unsheathed sword. I would have preferred those, because then I could continue to be righteously indignant. \n\nWhat I did not expect was her to be speaking softly and bitterly, almost in a whisper.\n\n\"I know I'm not who you want. I know I'm a bad sister. Please forgive me.\"\n\nI stopped and turned around. I wasn't really sure why. After all I had just been treating my sister quite badly. Why would I be concerned now?\n\nShe was drawn into herself, arms wrapped around her torso, looking down at the floor.\n\n\"I know I should have asked more questions. I know I should have done...something. Once I understood that you hadn't started the fight, I knew that you never conspired to kill Tyr. But you were dead, and it was too late. And Merwyd was his favorite, and had borne a daughter already, so I...I had to do more to stay in his life. I know I'm not worth the same as her. I understand that, but...but I'm not all bad. As soon as I heard that you were alive and that Uncle had sent killers after you I left with Kyrza. I thought...well...maybe it doesn't matter.\"\n\n\"Go on,\" I said, already feeling a kind of guilt that I wasn't very familiar with, \"what did you think?\"\n\n\"I thought that it was a chance to make up for what I hadn't done before. You won't believe me, but even if Tyr hadn't...hadn't released me, I'd have tried to find you first. It was blind luck that I decided to head north. I thought you might take the amber routes to Jorvik, because the Eorvane trusted you. I just thought...I thought that if I protected you, served you, like a good sister, you might forgive me. I know its selfish.\"\n\nThis whole time she was looking down, away from me. I was even more disturbed with this behavior the second time. What had happened to this confident woman to make her unable to look at me? Granted, there was unfortunate history between us, but I knew in my heart that I was the one being stubborn in my little persecution complex. The truth was that she had come for me and offered to help me. And then offered herself in another way. The only string attached was that I didn't act completely selfishly and tried to help out the people. \n\n\"It isn't selfish,\" I said, hugging her, \"It's noble. You're noble. I'm sorry. I'm...I'm very angry, and I'm taking it all out on you. And you aren't the cause of any of my trouble, not really.\"\n\nAdewyn tensed up at first when she felt my arms around her, but then she melted into me, turning and burying her head in my chest. It was hard to remember sometimes that she was shorter than I was. She was always my older sister, strong and proud, unafraid to take charge and do what had to be done.\n\nI felt a warm wetness through my tunic and I realized that she had ben crying silently. I didn't know what else to do so I led her to one of the bedrooms and shut the door. Although it runs counter to my reputation, I wasn't thinking of sex at that moment. I mostly wanted privacy, so she could act how she needed to and not put up a front for Kyrza and the soldiers. I sat her down on the bed and sat back against the head board. Without prompting she laid down and put her head in my lap. \n\nI gently stroked her short white hair. I had always loved how the boyish cut looked on her. It made her look bold and, well, erotic, especially when she was telling me to get out of my clothes and into her bed. I forgot how soft it was. How it felt when I ran my fingers through it. I was going to ask her a question but I noticed that she was sleeping. Soundly.\n\nI guess I knew who trusted who. I felt a reasonable amount of shame at my previous behavior, and let her sleep. Watching her face, relaxed and calm, had an effect on me as well. I remembered laying in bed with her as a much younger man. She'd taught me much about pleasing women, and had been quite a giving lover as well as trainer. I'd felt a bit heartbroken when she told me that she would be with Tyr and that our time would inevitably end. Maybe that was the first time that I truly resented him. I kept it pretty well hidden, or I thought I did.\n\nMy uncle saw it, though. He told me when we would go out drinking together. At the time I thought it was just commiseration, but now...\n\nMy reverie was broken when Adewyn woke. She sat up suddenly, her face red.\n\n\"Oh,\" she said, simply.\n\n\"Yes?\"\n\n\"I, uh, didn't mean to fall asleep.\"\n\n\"You might have needed to, though. And I didn't mind. It gave me a chance to watch you. To remember how I felt about you, and how you truly are.\"\n\nShe looked away from me, and her voice had a quaver to it when she spoke.\n\n\"I thought you didn't need me.\"\n\n\"I thought so too. I was wrong. I often am. More often than when I was just the lesser son.\"\n\nShe laughed, softly. It was sincere and vulnerable. Like her.\n\n\"You've never been lesser. None of your sisters think so. I know.\"\n\nShe turned to face me. I reached out and stroked her face, softly, felt how her skin alternated between soft but rough from being in the wind and weather. She leaned into my palm, and then, looking me in the eye, kissed it.\n\n\"Will you make me yours?\" Adewyn asked. It was a loaded question. She wanted more than physical affection. I still nodded. I felt a bit more clear-headed now. I had discovered, watching her sleep, that I wanted more than to survive in comfortable anonymity.\n\n\"I'll claim you, but I'm not going to release if I do. I can't lose anyone else to Tyr. If you still love him, then I'll do everything I can to help and protect you but I won't do any more,\" I found that I was nervous saying this. Even after all I had been through I still got as anxious as a lovesick teen with fear of my older sister rejecting me.\n\nShe looked at me, with a mix of longing and sadness.\n\n\"I should have asked you to run away with me before you were betrayed. I did love Tyr, but not any more. I don't think I've truly loved him for years. I tried to convince myself that I did, but I love you. I never really stopped. You have an annoying way of making women fall for you, even or perhaps especially when you don't intend to.\"\n\nI laughed.\n\n\"Are you saying my charisma is accidental? Well, I suppose its better than not having any at all. As I've already said, I love you, so I'm willing...\"\n\nHer face fell so suddenly that I thought that I'd said something wrong. She held her hand up, palm towards me.\n\n\"I'm...I'm glad. But there's something that I need to show you. It might make me...less attractive as a prospective wife or concubine. So you should know about it before you make any oaths.\"\n\nAdewyn was ever the dutiful daughter and sister. I didn't know what she was going to show me, but I braced myself. Not so much because I thought I might have to reject her but because I didn't want to display any reactions that might make her think that I was disgusted with her. I'd hurt her enough recently.\n\nAdewyn, blushing slightly, slowly unbuttoned her military-style jacket and removed it. She had a simple loose white tunic underneath, that she removed, and then some binding to keep her breasts from moving too much and out of the way. \n\nSpeaking of Adewyn's breasts, they were, if anything, better than I had remembered them. The last time we'd been together as lovers was over seven years ago, and I suppose she had done a little extra growing. Her chest had filled out and now it was quite easy to see how feminine she truly was, as the upward curve of her breasts led to her pink, compact nipples. They were small and hard now, though, showing her eagerness. Her muscle tone had remained, especially obvious with her naturally tanned skin, and the definition on her arms and abdomen was notable. I couldn't see it under her trousers but I knew that her ass would be muscular and firm as well. In short, she was intensely desirable to anyone who enjoyed the company of women, and I was confused with her earlier statement. Until she turned around.\n\nDespite my contrary intent, I still gasped a little when I saw the scars, which made her look down again and me feel like a righteous jackass. It wasn't with disgust, however. It was shock.\n\nShe had a series of uneven, almost jagged, vertical furrows on her back. They ran from her shoulders all the way down to the small of her back. Awful scars, which had clearly healed badly. If I didn't know better, I'd have said that she fell under some kind of alchemical torture. I did know better, however, and the wounds were made by magic. Dark magic. The kind that demons and fools used.\n\n\"Who did this to you?\" I asked, quietly.\n\n\"It doesn't matter,\" she replied too quickly. A rehearsed comment or one that she repeated to others or herself.\n\n\"It does,\" I said, with calm that surprised even me, \"because I'm going to kill them.\"\n\nShe swallowed, nervously, but did not respond. I moved towards her on the bed and put one hand on her arm, and then lightly stroked one of the scars with the fingers of my left hand. My intent was to show that I was not disgusted with them. As I lightly brushed the first mark, however, she twitched.\n\n\"Did that hurt?\"\n\nShe nodded.\n\n\"Do they all hurt like that?\"\n\nShe nodded again. I could see the glint of tears from the side of her cheek. I was incensed almost beyond words. \n\n\"Can nothing be done to soothe them? Or heal them?\"\n\n\"They are healing...but very slowly. I have an ointment that I put on every day. Sometimes I ask Kyrza to help me. She's loyal and doesn't talk about my secrets. I've gone to a temple healer, but they weren't able to help. Regardless, every month they get a little better, a little smaller. The healer told me that in a few years I won't be able to feel them at all.\"\n\n\"Gods, Adewyn. How could I have stayed away when this was happening to you?\" I didn't intend for her to answer, but she turned and smiled at me, tears in her eyes.\n\n\"What would you have done? Come home and died trying to save me? Brave and pointless death is for other men. Believe me when I say they are a small price to pay to see you alive. And to hear you say you love me.\"\n\nI sighed and held her head in my hands so that I could look her in the eyes. And so that she couldn't look away. I needed her to understand how serious I was when I took the oath.\n\n\"You are property of this prince. No other may have you, without killing me.\"\n\nHer tears flowed freely now, and she let out a little sob. I drew her to me and held her, careful not to touch her scars.\n\n\"W...will you put some ointment on them now? If it doesn't make you feel...uh...bad. They won't hurt for a few hours, and it will be easier for us to...to make love.\"\n\nShe went over to her satchel and got a small jar that she handed to me. Then she thought for a moment, and stripped off her trousers and panties. Well, she no longer shaved, but her small thatch of hair made me want to throw her down and bury my tongue in her sex. First things first though. \n\nI stripped as she lay down on her stomach. She looked at me, hungrily. \n\n\"Oh. I've missed that. You've picked up a few more muscles. And scars.\" She said as she stretched out and rested her head on the pillow.\n\n\"Yeah. Mercenary life will do that. I've been a lot luckier than most of the people I know. I swear to god Sari is just one continuous scar by now.\"\n\nI straddled her, resting some of my weight on her shapely ass. I made no attempt to conceal how hard I was from just being in her presence. Her scars were awful, but they did not detract from her beauty. They made her seem vulnerable, and awoke long-dormant urges to protect and care fro her. She certainly was capable of standing on her own, but that didn't mean I couldn't help her.\n\nI put some of the ointment on my hands and warmed it. I found that it had a slightly cooling effect. I began to slowly and gently spread it on her back. She tensed up at first, whether in pain or fear I did not know, but soon relaxed. I massaged her gently, making sure to cover every part of every scar. She made a small noise in her throat. Then I wiped my hands off on my discarded tunic, and started to rub the muscles in her firm ass, then the soft skin of her thighs, and finally her shapely calves. She moaned and her breathing became slightly ragged.\n\n\"Has it been a while?\" I asked.\n\n\"For massages or for fucking? It doesn't matter, the answer is yes to both. I bet you had your regular string of women on campaign.\"\n\nAdewyn had said the last sentence with some poorly concealed bitterness. \n\n\"No. I've only slept with one woman for...well I guess its been five years. And even then, fairly irregularly.\"\n\nShe snorted a disdainful laugh.\n\n\"Come on. You don't have to lie to me. I'm your big sister, and, oh fuck that feels good...and you know I'm going to let you do whatever you want to me. So how many was it, really?\"\n\n\"One. The answer won't change no matter how many times you ask. I do care for her, but such is the way of things that we couldn't always be together.\"\n\n\"Well, I suppose that you don't have any reason to lie to me. You have changed in more ways than I expected. God I missed your hands. I remember how you used to make me cum with them in the mornings when we didn't have a lot of time. Every day was so much better after that.\"\n\nHer eyes were still closed but she was smiling at the memory. I did too. There are fewer things that bring me more joy than giving my sisters pleasure.\n\nTo that I end I reached one hand down between her soft inner thighs and lightly stroked the lips of her pussy. She was very wet and made a loud noise, deep in her throat. \n\n\"Oh god. I'm so ready for you, Finn. So fucking ready. Do...do you want me to put on a shirt, first?\"\n\nI playfully spanked her, careful to go nowhere near any of her scars. \n\n\"No. I want to see all of you goddammit. I didn't claim you to hide you. Don't ever be ashamed of yourself in my presence. You've become even more beautiful since the last time I saw you.\"\n\n\"Liar,\" she said as I moved off of her so that she could roll over. She was smiling as she said it.\n\n\"If only there was some way I could prove to you how much I desired you. Some act we could preform that would make both of us feel satisfied and loved. Oh well, guess I'll be going then...\" As I gave my sarcastic little speech I started to move to the foot of the bed before Adewyn threw a pillow at my head with deadly accuracy. I laughed after I had dropped it to the floor.\n\n\"Get back here and take care of your older sister. She's...goddammit I'm so horny right now I...oh fuck...yes...fuck...oh god like that please don't stop...\"\n\nI cut off her frustrated speech by moving straight over and burying my face in her wet slit, as I'd wanted to since I saw her again. Her scent, long familiar to me in my lonesome nights, filled my nose and her taste...gods she was musky but pure. The taste of desire, matured and intensified.\n\nI used no technique, no tricks. I just allowed my tongue and eventually my fingers to explore her while she gasped and bucked and moaned underneath me. I spread her with my fingers, and pushed my tongue inside her as far I sit would go. I flicked it over her clitoris and sucked it into my mouth. I tasted very part of her lips. I was dying of thirst and she was the only spring. I felt her tense and grind against my face. I stopped for a moment and then started up again. Every time I brought her to the edge, but I refused to take her over. \n\n\"Oh, fuck. Please...please Finn let me...I need it so badly from you...\"\n\nShe even tried to touch herself to finish but I wouldn't allow her. Her words devolved into whimpers and moans. Then I began to finger her in earnest, hooking them so I stroked her g-spot and licking her clitoris all over with my tongue while sucking it into my mouth. \n\nDenied for so long, Adewyn's orgasm began deep within her, starting with her pussy clenching over my fingers and her legs tightening over my shoulders like a vise. Her hands began to grasp at my short hair and push my head down ever harder. Her back began to arch and shudder, her head rolled helplessly on the pillow. She began to cry out, simple animal noises of lust as the orgasm took her and had its way with her, much as I had. As her cries turned to sobs I kept working on her, her body trembling and tense, and finally collapsing on itself, limply.\n\n\"Oh...gods...Finn...gods...\"\n\nI crawled up to her and smiled smugly at her while I gently stroked her hair. I was pleased at her inability to form sentences. She leaned up suddenly and kissed me, intensely, passionately, her agile tongue forcing its way into my mouth. She held my head with one of her hands so that I could not escape her, and suddenly she rolled me over with her body, straddling me and holding me still with her strong leg muscles. My hard, throbbing cock was pinned between her soaking womanhood and my own stomach. I moaned, loudly, involuntarily. Fuck. I wanted her so badly, and she knew it.\n\n\"You fucking tease. You've become a better lover, too. I haven't cum like that since...well I don't know. Ever?\"\n\nShe was her regular aggressive and confident self again, and that made me even happier than the pleasure I had brought her. Adewyn without her strength and will was like a lioness with no fangs. It wasn't right and I would make the person that had hurt her suffer. \n\nMy thoughts of righteous revenge were interrupted as she began to rub her slit up and down my cock. It was my turn to moan in need and have difficulty thinking.\n\n\"Oh? Do you like that little brother? Have you missed your sister's cunt?\"\n\n\"So much. I've missed...oh fuck...I've missed you, Adewyn. I never stopped...oh fuck...loving you.\"\n\nI hadn't really meant to say that. It's amazing the truths that slip out when your sister is rubbing her slick wet folds over you and not letting you enter her. She stopped briefly, looking at me with a fiercely serious expression.\n\n\"Is that true, Finn? Have you still loved me all of these years? Even...even when you knew that you couldn't have me?\"\n\n\"I was ashamed of it. I hated myself for it. I resented Tyr although we were still brothers. But yes. I've loved you since before you broke things off with me. I wanted you as soon as I heard your voice again. I didn't want you to know because I never wanted to be vulnerable again.\"\n\nAdewyn rose up for a moment, and then put her hand on the side of my face. Then she slowly and tenderly leaned in and kissed me. It wasn't rough or passionate. It was slow and caring.\n\n\"Don't worry, Finn. Big sister is here to take care of you now. No more teasing.\"\n\nShe seized my shaft in that firm but gentle way that only she knew, and rose up above me on her knees. As she locked eyes with me she positioned herself over me, and then slowly allowed gravity to impale her on my cock. I had my hands on her hips and barely resisted the urge to pull her down faster. I think she would have stopped me if I had. Not because it might hurt, but because she wanted to draw things out, to make me cum as hard as she could.\n\n\"Oh, fuck, Adewyn. How the fuck do you feel this good?\"\n\nAs she slid onto me she gripped me with her internal muscles, hurting me but only in the best way. Finally, I filled her completely. I moaned and she whimpered but she wouldn't move. When I tried to move her with my hands, she grabbed my wrists and pulled them away.\n\n\"Oh? Is that a little frustrating for you? Being inside your big sister but unable to take what you desire?\" she teased. ",
        "\"Gods, Adewyn, why are you doing this to me?\" I barely managed to get out, even though I knew the answer. I was briefly tempted to use magic to turn the tables on her but in my distracted state I could end up being more forceful than I intended.\n\n\"Because I want to hear you say it. Say it, and I'll give you what you want. And more.\"\n\n\"I need you Adewyn. And now I need your cunt. Please...\"\n\n\"Ah,\" she said, beginning to move up and down, \"that's my good boy. I missed your, oh gods, begging. And your fucking amazing cock.\"\n\nI was stronger than I had been the last time that we'd made love. I seized her hips and began to push with her and pull her down onto my cock, heedless of bruising her, and her moans and chirps only encouraged me to do more. Our last time had been slow, sensual, and a little sad. Not so, now. This was joyous and rough, like sailing through a storm. She rode me hard enough that I realized that I would have bruises where her hands gripped my chest and where her muscular ass impacted my thighs. If she'd had long nails, I would have been bleeding quite a bit already.\n\nThe pain only made it better. I needed her, truly I was not just speaking sweet words. I needed her and I needed to plant my seed deep within her. I'd felt that way before, but I can honestly say that I'd never truly been driven by the urge to get a woman with child before. At that moment I wanted that more than breath or water. \n\nI felt her spasming around my shaft already. She seized up briefly and I could tell that the orgasm took her by surprise. I took advantage of her mental confusion. I sat up and rolled her over onto her back. Thankfully the ointment kept her from feeling any pain. I was not gentle. She gasped even as she continued to cum. I put her thighs up under my stomach, her calves on my shoulders. I wanted to fuck her hard and deep, so I did.\n\nI began to pound into her, ruthlessly. She moved her arms up to my torso and I grabbed her wrists and held them, roughly.\n\n\"Finn, you're so fucking hard. I've never felt it like this. Please fill me, love. Make me yours again. Own your sister's wet pussy.\"\n\nHer words drove me harder and hearing her speak my name like she did made me wild with desire. I was incapable of speech. I could only grunt and moan. Her own moans began to build again, until she began to cry out with each savage thrust. I should have worried that I was hurting her, but I was beyond such concerns.\n\nAs her tight pussy gripped me with her largest orgasm, I came as well. I nearly passed out, which was new to me. I came over and over, driving into her and holding myself there, imagining her womb filling with my fertile cum. She gripped and spasmed my cock, her back arched, her final scream echoing in the small room, her sex bathing my cock in more of her warm fluids before she collapsed limply onto the sheets. \n\nThe servants definitely heard that.\n\nFinally, after she had drained me dry, I rolled off of her. She made a small, mournful noise as my cock left her and our mixed fluids poured out of her. I found the sight to be extremely satisfying. I felt that I had marked her as mine. As I looked down, her soft gaze and gentle smile seemed to agree with me.\n\nI lay beside her and she rolled close to me, laying her head on my chest. It was the first time she had done so in years. I felt the old connection we had return, and with greater force. I felt loved. \n\n\"Oh gods. You can't leave me now. Not after what you've just done to me,\" she said.\n\nShe laughed, deep in her throat and nuzzled into my chest. Soon she was breathing slowly and regularly, asleep.\n\nI stayed awake a little longer. For once I wasn't afraid of my dreams or worried about what the day would bring, I just wanted to be with her like that, in peace. It's still one of my better memories.\n\nThe events of the next day would make me glad for it.\n\n==============================================\n\nCHAPTER NINE\n\n==============================================\n\n\"Finn, wake up, she's here!\"\n\nFor once, I didn't panic but rolled over slowly, stretching. I had been the little spoon, which was a nice change of pace.\n\n\"Yes,\" I said simply, \"she is indeed here.\"\n\n\"Godammit, Finn, its Raisa! She was the one that uncle sent to kill you!\"\n\nI chuckled and looked over at Raisa. I wasn't surprised to see her there. She was sitting crosslegged on an overstuffed chair that she had somehow silently moved to the foot of the bed. She was without her cowl or hood, and was slicing and eating an apple with deliberate and intense calm.\n\nI'd never seen someone eat an apple threateningly before. It was somewhat impressive. Adewyn was sitting up, halfway between getting up and running across the room for her sword and looking at me in an adorably confused fashion.\n\n\"Calm down, Adewyn. I told you that I had only one lover for the last five years. There she is.\"\n\nRaisa's attempts to be intimidating faltered a little as she gave away a small smile at my admission that there had been no others that whole time. Then she resumed glaring at us. Well, me really. It had been my cock that had dared enter her sister, after all. \n\nAdewyn looked at me, nonplussed. \n\n\"Raisa was working for you? This whole time? No wonder you stayed out of sight.\"\n\nI nodded.\n\n\"With me. Raisa was working with me. As you are. I don't think I'm in any position to be giving orders to my dear sisters. In fact, I would have been dead several times without her intervention. She saved my life. Not to mention kept me from...well...going mad.\"\n\nAdewyn reconsidered Raisa as if seeing her for the first time. I knew that it was easy for her siblings to underestimate her. To her credit, Raisa simply sat there and smugly ate her apple.\n\n\"So,\" Raisa said finally, \"Was this your plan? Ditching me so you could get back together with the Ice Dragon?\" She said the latter dismissively as she gestured vaguely towards my bed partner with her knife. Adewyn's eyes were huge. It was hard to say if she was more shocked or angry with Raisa's casual insult.\n\nHoo boy. This was not going well. I hoped that this was not the first time that Adewyn had heard this particular nickname. The army called her that too but they said it with more warmth. I decided that direct and transparent was the best way to go to prevent a fight in my bedroom.\n\n\"Don't start acting like a damn foolish fishwife now, Raisa. You had pieces of your ribs in your lungs. You had lost...god knows how much blood. I did what I could for you but I knew you needed at least a week to rest. And I wasn't going to endanger you further by hiding with you or trying to bring you along. If you had died I wouldn't have forgiven myself. Ever. So tell me what's really bothering you.\"\n\nRaisa huffed rather pettily (and prettily). \n\n\"Well, Finn, princes may sleep with whomever they please. I understand that. But...but they have to keep their...their promises. Don't they?\" Raisa voice quavered a bit as she spoke. I understood. I looked her in the eye.\n\n\"I will always keep my promises to you. All of them. You are mine as Adewyn is mine, and you will be more if circumstances deign to favor us.\"\n\nShe smiled, reassured, and hopped nimbly to her feet. She may have been a deadly assassin but just then she could have been a little girl practicing somersaults in a field.\n\n\"Oh,\" she said as if she'd just thought of something, \"You should probably get dressed. There's a man out there waiting for you.\"\n\n* * *\n\nAfter some awkward dressing and exchanged looks between the three of us, I finally managed to leave the bedroom alive to go meet the guide. His eyebrows went up when he saw two beautiful women following me out. Good. At least someone here was impressed with me.\n\nHe didn't need to know that both of them were probably annoyed with me.\n\n\"I'm Keeper Johannes. My father maintained the caverns before me and he led your father down the same way I'm about to lead you.\"\n\nHe was young, perhaps twenty years of age, and short with a mop of darkish hair. I shook his hand, and then he led us away from our rooms. We went down passages large and small in the castle, through twisting stairways and halls carved from the living rock of the castle's foundation. \n\nIt was all to misdirect us. The Duke's family had been given the sacred duty of guarding this cavern, and the city of Jorvik had been built around it. Even were all else to fall, the cavern would be protected. Such was his oath, in any case.\n\nThe Keepers were a little known lesser house of nobility, who alone could enter the cave and leave it freely, without any ill effect. They took care of whatever tasks the inhabitant, or inhabitants, desired. They either didn't remember or would never speak of what they had seen or communicated with. In any case it was strictly forbidden for me to ask.\n\nFinally, after almost a half hour, we opened a hinged door in the side of massive empty wine cask with a false back. We went through that about another fifty paces, and found ourselves in a great, rough stone opening into what was obviously a natural cave. A great brazier roared with flame here, and my scalp tingled with the magic it gave off as well as light and heat. I believed it to be part of the defenses which must lurk here.\n\n\"Here we are, my lord. All the rest is your task. Once you enter we cannot interfere until you return. When you leave the cave, we can help you again, so just worry about getting back here. We'll wait for you.\"\n\n\"What's my role?\" Adewyn asked.\n\n\"You make sure no one follows me down, even friends. And you protect me when I get out. Odds are I will be in no fit state,\" I said.\n\n\"And what do I do?\" Raisa asked.\n\n\"You kill the Keeper if I don't return,\" I replied.\n\n\"What?\" Johannes said, paling.\n\nI looked at him, my eyes boring into him.\n\n\"Anything you want to tell me? Tyr is clever and my uncle more so. It would be like them to set a trap for someone they mistrusted. Or to simply pay you to omit something important. Now is your chance, no harm will come to you.\"\n\nI saw by the bead of sweat on his brow that I had touched a nerve.\n\n\"Your...your uncle said that if any usurpers came after them, that I was not to warn them about the dangers of the stream. So that they might drink of it and die.\"\n\nHe swallowed nervously. I smiled like a wolf.\n\n\"Well, usurpers should be slain. As we both know, I'm my father's rightful heir, so you've done the right thing,\" I said, \"But she's still going to kill you if I anything happens to me.\"\n\nHe nodded, trembling. I think he had told me the truth, but there was probably a significant chance that I would die or go mad anyway. \n\nWell, time would tell and I was terrible at goodbyes. I started my Journey without looking back.\n\n* * *\n\nThe cavern stretched out before me, pitching downward as it opened up, the shadows full of dark promises. A stream of water rolled into the mouth of it, fed by the rain and descending deep beyond my lantern's light. For some reason, not knowing the final destination of the water unsettled me. I laughed briefly at my own cowardice, then began my descent.\n\nIt was a rough walk. Certainly the angle wasn't steep enough to call it climbing, but the uneven ground combined with the shadows and downward trend led to me tripping a great deal and even falling hard once on my shoulder. Fortunately only my pride took any real injury, although my forehead was bleeding slightly. More importantly, the lantern was undamaged. \n\nI continued down for what seemed like an hour but in truth could have been no more than fifteen minutes. The cavern yawed left and right, but the angle stayed steady. As I continued there seemed to be a fog in the air, perhaps from the moisture of the stream. I convinced myself that the whispering I heard was just the water moving over rocks, but in my heart I did not believe it. \n\nAfter another hour had passed of moving steadly down, I began to become bored. I cannot rightly tell you why. There were plenty of sensations, and it seemed like the shadows were alive here, flickering and jumping. When I shined light into them, I saw nothing alive, but the stone of the wall had peculiar circular deformations which made it look skulls of various sizes piled high upon one another. I considered turning back.\n\nSuddenly, I wretched, bringing up mostly water and a little bread that I had eaten earlier. I hadn't felt ill at all before I found myself kneeling and heaving over and over, until nothing more remained. Had I been poisoned this morning? Was the duke trying to kill me?\n\n\"Easy, friend. You aren't doing so well. Its all right. You probably won't die.\"\n\nLater I remembered his kindly voice. I remembered that it wasn't really a man, but a woman. No, that wasn't quite right either. Was it even human? I know that we sat and talked, for some time, maybe hours. I asked questions and listened and heard stories and strange truths. \n\nNo matter how hard I tired, I could not remember the details. Not until great danger was upon us, when they would all come back to me in a rush.\n\nIn the meantime I remembered only fragments of their words: which made little sense without context, and that I knew had great and important details missing:\n\n\"Soon, by my reckoning, the things which drove the Karrash through the gates will open them wide again. I will be no match for them. They will push through, and if humanity is not prepared and unified...The armies of Belial do not regard Humanity as an equal, or even as an enemy, but only as a resource...Your sisters and mother and children included... All other considerations, including your petty politics and hatreds, are secondary...Your brother...did not understand, although he tried. The vapors took him and he failed his Journey. I returned him to the surface where hopefully you have confined him somewhere that he cannot harm others or himself...Go now, and tell your people that you have returned with the hope of the light and the wisdom of the dark...\"\n\nI remembered nothing after that.\n\n* * *\n\nSomeone was touching my shoulder and gently shaking me. I awoke in terror of the divine, standing and shouting.\n\n\"I have returned with the hope of the light and the wisdom of the dark!\"\n\nI looked around. I was in my room in the Duke's palace. Raisa had been trying to wake me and now was stunned and unmoving. Adewyn was standing and looked like she was about to tackle me. The Duke himself was midway through eating a sausage. And the Keeper just smiled.\n\n\"I've never heard the words delivered at quite that volume,\" he said, \"but that is the proper and expected message. He has successfully completed his Journey.\" \n\nWith that he stood to leave. I ran forward and blocked his progress. I was certain that I looked mad and covered in rock dust, some blood, and probably vomit. He stepped back, momentarily afraid. I didn't blame him.\n\n\"When my brother and uncle returned, did they both speak the words?\"\n\n\"What?\"\n\n\"Think, man! Did they both say the words properly? Were there any mistakes?\"\n\nHe looked annoyed but then unsure.\n\n\"There were mistakes. But...that isn't uncommon. The vapors confuse the mind.\"\n\n\"What did they say?\"\n\n\"Well, your brother said the light was hopeless and the dark was unwise. And your uncle spoke of the hope of the dark and the wisdom of the light. The order isn't supposed to matter though, only that the four words are said: light, hope, wisdom, dark. That's what I was told, anyway.\"\n\n\"You're wrong,\" I said, suddenly very sure that things were much worse than I had initially thought, \"But it isn't your fault. From now on the Journey is only to be considered a success if the words are said as I did. Well, they don't have to be shouted, but in that order. Understand?\"\n\nI really had no right to order the Keeper to do anything. He was independent of kings and their petty will. But he saw in me the true insight of madness, and nodded before he left.\n\nI felt suddenly very weak and sat down, heavily on the bed. I looked at my hands and to my surprise I noticed I was clean. I felt my face and there was a good half inch of beard growth.\n\n\"How long was I sleeping?\"\n\n\"Only a few days,\" Eorvane said, calmly, \"Your uncle slept longer. Tyr didn't at all. I suppose that should have worried us.\"\n\n\"Yes,\" I agreed, but I wasn't sure how I knew what I did, \"It should have. He failed. He failed and went mad.\"\n\nAs I said the latter I locked eyes with Adewyn, projecting what I hoped was compassion. She still looked away.\n\n\"Shall I call the Northern Comdail to session?\" Eorvane asked. He referred to the rulers of the noble houses of the North. They were stubborn and truculent but they were also my most likely supporters. \n\n\"Yes,\" I said, \"and do what you can to have the meeting soon. Things more important than a petty royal feud are happening.\" \n\nI didn't explain, because I couldn't, but I put as much force behind my words as possible. Why couldn't I remember what had happened down there? I knew a few things, I felt a few things. That was it. Damn it!\n\n\"I'll be off then. You should rest up. The poisons won't clear from your system entirely for several more days. I'll have dinner sent up for you and your sisters, er, wives.\" Eorvane said, then he, too, left, closing the door behind him.\n\n\"Raisa, can you give us a minute?\" I asked, my eyes never leaving Adewyn. She rolled her eyes but stood up to leave, as she did I said, \"Don't go far. You're sharing my bed tonight.\"\n\nShe looked back at me over her shoulder and graced me with the faintest of smiles before she left, gods help me, out the window. What the hell did they teach her at that temple?\n\n\"Are you dividing your time up between us now?\" Adewyn asked, smiling.\n\n\"Yes. Although I can't make it official yet I'm going to treat you like wives, not concubines. I hope that doesn't bother you.\"\n\n\"On the contrary, I find it appealing. I think you'll make a fine king.\" she said, then sighed deeply, her eyes sad and tired, \"Ask what you must.\"\n\nI did not share her faith that I would be king, but somehow it didn't bother me. I felt that there were more important things than my survival, now. In fact, if it came to it, any of my sisters could rule effectively, no matter what the law said. At the moment I had more important questions.\n\n\"Was Tyr the one who gave you those scars? Did he hurt you?\" I tried to keep my voice even, but she had to hear at least a little of my anger. I was old and wise enough to know that there were many unfair things about the world. One of them was that women, especially noble women, were always held to be inferior and submissive to men. No matter how worthless the men in question or capable the woman. Alongside that, however, was the teachings of our ancestors, which held that a man of Pure Blood must always protect the women of his family. To hurt a woman or child out of simple cruelty was to be the most despised of creatures.\n\n\"It was my fault, really,\" Adewyn said, all too casually, \"I provoked him. He clearly wasn't well, and he ordered me to take some cavalry and go burn some villages where a baron had refused to pay taxes. I told him...well I said he was a fool and it would only make things worse. At the best of times it would have made Tyr mad, but these weren't the best of times. So...so he said a word. It was obviously magic, but nothing I was familiar with. I remember great green light exploding behind my eyes. And then nothing.\"\n\n\"I woke up on a table, I was probably still in Marche Grodayn. It was made of stone. I was so cold. I didn't understand at first, but then I realized that I had been stripped and bound with harsh rope. I was laying face down. Gods...if anyone but you had asked...I wouldn't...\"\n\nShe stopped for a moment and breathed. I didn't want to interrupt her but I walked over and sat next to her on the couch, pulling her close to me. When she had calmed down a little, she went on.",
        "\"I couldn't see Tyr. He never let me see him. I wasn't blindfolded but my head...it was strapped down so I could only look in one direction. He said something, I don't remember what it was, and then there was searing pain. I thought it should end, that I should pass out, or that it would overwhelm my senses. I'd been injured in battle before, but this was nothing like that. I felt...every second as whatever he was doing, slowly, so fucking slowly, gouged a line in my back. It hurt so much. I know I was weak, because I screamed. I begged. I pleaded. I offered to do such demeaning things that I knew...that I knew he had come to enjoy.\"\n\n\"He just laughed. I don't know if he was cutting the marks or if he had some...some implement. Whatever it was, it was magic. I know that. He would recite or read things to me, and they didn't make any sense. Even when I understood the language, which I didn't always. Eventually, he stopped, and the pain lessened. Then...then he said a word and I passed out.\"\n\n\"I woke up in my own bed, my new injury bandaged, but still in great pain. After that, it happened more regularly. I would always fall asleep in my bed, or elsewhere, and wake up in that fucking place. And he would be reciting, and laughing as I screamed and pleaded and told him I loved him.\"\n\n\"I finally had enough. I was his wife but I wasn't going to die like that. I went to uncle and told him about the way I was treated, the strange magics, everything. Do you know what he said?\"\n\nI shook my head. I was, I think, too enraged to speak.\n\n\"He laughed and said that Tyr was doing his best to prepare me to be a...a good bride for...\"\n\n\"Belial,\" I said, finishing her thought. I remembered the name from the cave.\n\n\"How did you know?\" Adewyn said, sitting back from me suddenly, fear in her eyes.\n\nI shook my head.\n\n\"I was...warned about him, somehow? I'm sorry. I don't remember much from the Journey. I know that Tyr was warned as well, but it drove him mad. I don't know why.\"\n\nI reached out. She flinched a bit, which made me sad, but again I understood why. I took her head in my hands, gently. I looked her in the eyes. I spoke almost at a whisper.\n\n\"I need you to understand something. What he did to you was his fault. You did not provoke him. He would have done it to you sooner or later, no matter what happened. You are a good sister and you were a good wife to him. I know it. I don't know how he treated you before he went on his Journey, but when he returned, he was...cruel beyond measure. He violated your trust and tortured you. He made you think you were weak when you were not. All of this is unforgivable.\"\n\nAt that she melted into my arms and sobbed. She said nothing and neither did I, for a very long time. I would never allow her to be hurt like that again. I felt something in me stir for the first time in years. The feeling of being a part of a family, and being desperate to protect it.\n\nTyr would die, like the wounded animal he had become. Uncle would have to be killed as well, unless I was very much mistaken. I or one of my sisters would sit on the throne. There was no other way.\n\nNow the only question became how to go about it."
    ],
    "authorname": "LateStageInfernalism",
    "tags": [
        "brother",
        "sister",
        "fantasy",
        "epic",
        "romance",
        "love",
        "older sister",
        "magic",
        "long",
        "reunited lovers"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-matter-of-blood-pt-03"
}