{
    "title": "A Guide to Great Anal Sex Pt. 03",
    "pages": [
        "Thanks to everyone (particularly women) who have wrote, expressing gratitude to us for raising their comfort level with anal sex. We want everyone to find what works for herself within her comfort zones.\n\nJust to review the areas of intense anal stimulation for a woman, there are four key elements: 1) the exposed head of the clitoris; 2) its tip ends; 3) the g-spot; and 4) the furrow located between the outer and inner sphincters. If you can visual a woman's asshole with the point closest to the vagina as 12:00 noon, a man can add to his partner's pleasure in any of what follows by placing his pointer and middle finger at 11:00 and 1:00 on her body and pressing gently. A woman can add to her own arousal by inserting her pointer finger into her vagina and massaging her g-spot while she strokes her clitoris with her thumb. It's a bit like adding a spice to a food dish and all depends upon how much arousal you both want. \n\nWe've divided anal sex into two categories: outercourse and intercourse. Outercourse is an activity that doesn't involve me penetrating Celeste's ass beyond her sphincters. Intercourse does. Each provides several options for exceptional pleasure.\n\nOutercourse:\n\n1) The finger. This may be your cup of tea but it isn't Celeste's. In part I, we talked about the use of the finger in massaging the furrow between the inner and outer sphincters. While every couple is different, Celeste finds the orgasm that results from this just too intense to be enjoyable. This highlights one of the few problems with ass fucking. For us, there are circumstances where intensity rises to the level of discomfort. (See below on complete penetration, anal sex during menstruation, and sequential orgasms.)\n\n2) The penis. The French have practiced frottage for centuries. Wearing clothes or not, it consists in my placing the head of my dick on Celeste's asshole and pressing gently. It's extremely pleasurable for a her and I can vary its intensity in many ways. Thirty-five years ago in Paris, it wasn't commonplace but it also wasn't unusual to see a couple frotting (a verb I have made up) on a crowded second class Metro car during a stop at Chatelet. As an understanding of ass fucking has spread thanks to the Internet, dances have also acknowledged this pleasure. If you go to many clubs, you will observe this. When you see a groups circled around a couple, clapping their raised hands in tune to the music, it's a reasonable assumption that the focus of everyone's attention is on a couple frotting in the center of the circle, usually with most of their clothes still on.\n\nCeleste and I frot almost every morning and almost every evening, but only briefly and not usually with the intention of achieving orgasm. In the morning, we frot for a couple of minutes until Celeste's outer sphincter relaxes and she gets a little damp. The sensation when this relaxation occurs is accurately described as a rosebud opening up. You can actually feel it happen. In the evening, Celeste loves to frot once we are in bed. Sometimes it puts her directly to sleep. Even if it doesn't, I can just feel the tension passing out of her body as complete relaxation sets in.\n\n3) The tongue. Stimulating a woman's (or a man's) asshole with your tongue is one of the great pleasures in anal sex. Celeste loves it when I rim her and I love it when she rims me. You do want to be sure that your partner's anus is perfectly clean and inviting before beginning. If you want to make certain of this, use an anal douche available at any drug store and then rinse thoroughly. These take about five minutes to work. \n\nI love eating Celeste's hole. It has a slightly sweet, slightly metallic taste to it and is a delightful experience that puts cunnilingus to shame in comparison. Eating her turns Celeste completely on while not producing either the unpleasant smell or taste that a tongue on the clit does. Besides, it's a cardinal principle for me that a man should never touch a woman's clit\u2014with anything. That's in her comfort zone and she alone is entitled to control it.\n\nWhen I rim Celeste, I nibble at her pucker to tease her and use broad strokes across her hole to excite her. If she really wants to get it on, she reaches back and spreads her ass cheeks for me. When she does this, I press my mouth over her entire hole and suction it open. Then I roll the edges of my tongue up and form something the looks remarkably like a the pastry shell of a cannoli. Using it as a miniature, flexible penis, I fuck her in exactly the spot where she doesn't want my finger. The sensation this creates is far gentler and more diffuse. She almost always strokes herself in into a huge orgasm when I sometimes grabbing a pillow and screaming into it. This is one of her two favorite O's. Her anal contractions during and after her orgasm are so strong that it produce the sensation that she trying to nip off the tip of my tongue.\n\nCeleste: You may think that Jimmy is exaggerating here, but everything he has written in the paragraph above is absolutely true. When he has the tip of his tongue on the magical spot and I'm stroking my clit with my thumb and pressing against my g-spot with my finger, I absolutely explode. That's the only word for it. What's adds to my pleasure is that I know I have the same effect on him. When I rim him, playing with his nipples that are extremely sensitive, what he says and our sheets prove this every time. If you really are interested in great anal sex and don't rim, learn how to do it in the way that most excites your partner. You'll both be happy the rest of your lives if you do.\n\nPositions:\n\nBefore discussing anal penetration (intercourse), it is important to consider various positions that can be used for it. I would assume (but don't know) that a key to the choice of a position for a man who wants to deliver maximum pleasure to a woman is the curvature and size of his penis. Your ability to press against a woman's g-spot during intercourse is very important to maximum pleasure for her. I, for example ,have a very average 6-61/2 inch dick that is very flexible. All positions work equally well for me. If, however, you have a penis that curves back toward your belly button or away from it dramatically you will want to take this into consideration when selecting a position. This must be particularly true for men who have extremely hard, inflexible erections. \n\nSize, particularly length, also matters. If ever there was proof for the saying that it's not the size of the ship but how and where you sail it that counts, ass fucking is it. Despite what the porn industry wants you to believe, guys with shorter pricks actually have an advantage in delivering anal pleasure. This is because a woman, when she fucks herself on your rod, can do so as hard as she wants and not worry about bruising herself. On the other hand, if you are long and a sensitive lover, you will want to choose a position that is best for shallower penetration. You should also wrap a finger and thumb around the root of your dick to prevent \"bottoming out\" that can cause pain and bruising. If you're really long, use two fingers.\n\nThere is no ideal position for anal intercourse. All have their advantages and disadvantages. These are some that Celeste and I have tried.\n\n1. Celeste on her back with a pillow under her butt and her legs thrown over my shoulders. The advantages of this position are that it's easy to kiss and make eye contact. It also permits the deepest possible penetration. It's a very good position for a man whose penis curves back toward his body. With some practice he can stimulate a woman's g-spot by pressing directly on it through the membrane that separates the anal canal from the vagina. To do this, however, he has to be careful to penetrate shallowly into the anal canal, only two or three inches. It's a question of angles and vectors. Disadvantages include that it's awkward for Celeste to stroke her clit and virtually impossible for her to touch her own g-spot.\n\n(An aside that has nothing to do with ass fucking, but everything to do with family planning. We have a life-long friend from our days in college who is a doctor practicing in Montpelier, France. He gave us the wonderful advice to use this position vaginally when we wanted to have a baby with Celeste either putting her finger up my ass and pressing against my prostate or using a toy to do the same thing. It's a bit awkward but he claims that it maximizes the amount of cum generated and the force of the ejaculation, This shoots a maximum amount of semen exactly where it is most likely to accomplish the purpose. I don't know if this is medically provable, but will say that we did this three times and Celeste had three beautiful babies. All were carried to term and delivered within days of what we thought would be ideal birth dates. Maybe it was just a coincidence, but maybe not. In either case, it was a very enjoyable experience.) \n\n2) Cowgirl: Celeste sits on my dick facing me with me raising legs to a 45 degree angle so that a she can recline against them as she strokes herself. There are many advantages to this including Celeste having full access to her clit, g-spot, and the ability of an inward curving penis to touch that spot. Disadvantage: it is very difficult to control the depth of penetration. Nevertheless, this is recommended by C and J.\n\n3) Reverse cowgirl: the position where Celeste sits on a my dick facing away from me and often leans backwards when she fucks herself. Advantages: It gives her full access to her clit and vagina while providing an ideal angle for massaging the g-spot for a man whose penis curves away from his body. Disadvantage: it's a very distant act, offering virtually no eye, finger, or mouth contact between partners.\n\n4) Doggy-style or me entering Celeste's ass from behind while she rests on her hands and knees. There's a reason why vaginal doggy style is such a popular position: it makes pressure against the g-spot possible. Anal doggie style only increases this angle of penetration If you know what you're doing, it's an ideal way to hit this pleasure point, particularly if your erect penis curves away from you body. I also find it a huge turn on to be able to see Celeste move my dick in and out of her ass as she fucks herself. There are disadvantages. Eye-to-eye and mouth-to-mouth contact is almost impossible. Celeste also finds it difficult to stroke herself when her hands are supporting her body. The biggest problem, however, is that her legs start to shake as her orgasm approaches and frequently give way. When this happens, I pancake on top of her and that isn't very romantic. \n\n5) Standing, with Celeste leaning over and bracing herself against a tree, the refrigerator, etc. All of the advantages and disadvantages of doggy style but with no risk of pancaking. I have also learned to wrap my arm around Celeste's waist when the trembling start and hold her up as she orgasms. Recommended by C and J.\n\n6) Spoons\u2014or doggy style lying down. With us both on our sides and me behind, I insert my penis into Celeste's ass. This is, far and away, our favorite position, the one we use almost all the time when we are in bed. It's the most comfortable one for Celeste and lets us concentrate on a slow leisurely fuck. Pressure on her g-spot can come from either my dick or her finger and she has complete access to her clit. It doesn't contribute much to eye-to-eye or mouth-to-mouth, but it does lead to beautiful orgasms whenever Celeste wants to have one. Highly recommended by C and J.\n\nHaving been through all of the preliminaries, part IV of the series will discuss intercourse itself."
    ],
    "authorname": "celesteandjim",
    "tags": [
        "fingers",
        "frottage",
        "rimming",
        "orgasms",
        "positions"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/a-guide-to-great-anal-sex-pt-03"
}