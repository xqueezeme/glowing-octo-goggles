{
    "title": "Five Alive Plus One More",
    "pages": [
        "That last session with Clyde and his co-conspirator Chloe provided me with fantasy fodder for a good while. It was my birthday week and my second visit to a high-end spa in midtown that also happened to provide off-book full-release ladies' massages... if you were lucky enough to know about their \"promo code\" from referring friends. \n\nNow, every time I'm lying around with my trusty toys, I replay the memory of Clyde pounding my ass with his 8-inch sausage while I munch on Chloe's sumptuous C-cups. I was never one to run after girls, but it was delicious to play with her mounds as she and Clyde worked me over -- Chloe massaging my clit with a vibe or finger-fucking my pussy with her long strong digits, while Clyde sucked on my pussy and ass before \"shagging me rotten.\"\n\nIt's been a few weeks now, and I'm back in town ready for another treatment. I go to the bookmarked site and choose 4-handed massage again. Last time, I chose Clyde whom I had experienced the first time I visited the spa, but I left the second therapist to chance. As delectable as Chloe was, since that time, I have wondered what it would be like to be treated by two men. Opening the pulldown menu, I choose Clyde again as my first therapist again, of course. The guy is HOT, and plus he knows what I like. \n\nMoving along the appointment flow, I choose Male for my second therapist. Up pops a list of names and since I don't know any of them, I leave it open. I trust Clyde to pair up with someone right for me. I enter the code I've used previously, #fivealiveplus, and confirm the appointment. The session is at the end of the week which seems a tantalizing eternity from now, but that gives me time to get a fresh wax job -- for maximum glide, if you know what I mean.\n\nAs I close my laptop, I realize my pussy is creaming just thinking about getting worked on by two guys. I go into the bedroom and take out my toy kit, settling in for a nice solo wank session. First, I set the vibrator on low to tease my clit as I let my mind go. How would it go with two guys...? I'm pretty experimental, with a strong predilection for anal, but I've never been with two guys. Except that time in college when I crashed out with my boyfriend and his best friend, but we were all too drunk to really do anything. And I wasn't doing backdoor yet in those days.\n\nAnyway, I'm working my clit imagining how it would be with Clyde and mystery massage guy. Would he be another yoga/surfer hard body like Clyde, tall and hung? Would one of them stuff his cock in my mouth as the other one rims me out while finger-fucking me? As I'm mulling this over, I reach for my dildo that can work for either my vag or my ass. Technically an anal toy, at its widest at the base, it's about 1.25 inches wide, so not crazy big. It does have a vibe insertable into the base, which is its best feature. \n\nI wet the dildo in my mouth and slowly slide it into my already moist pussy. I turn on the vibe insert -- it's not strong, just a nice awareness, and work it in and out of my pussy while I continue to massage my clit with the vibrator. This is all foreplay to me. I know I will graduate to more, eventually.\n\nAfter some minutes of allowing my mind to dance over the possibility of two guys penetrating me at the same time (whichever openings those would be), I'm impatient now to have something in my ass. Leaving the dildo in my pussy and setting the clit vibe down for a moment, I lube up one of my smaller butt plugs and slowly (oh, so slowly) slip it into my ass. \n\nI fuck my ass with it a little before leaving it in my back passage and taking up the dildo and the vibrator again. With one hand, I hold the base of the two insertables together, such that the vibration of the dildo transfers over to the butt plug. Again, not strong, but very nice. I do have a 2-prong toy, but sometimes I like to fiddle around with the different combos. \n\nThe vibrator on my clit is now on the second intensity setting. Still holding the two insertable bases in my left hand, I gently DP myself with these toys, each time pulling the plug out just so the widest part stretches my asshole. Mmmmmm, I'd bet Clyde and whichever partner he would be working with would enjoy this show right now. \n\nThe dildo in my pussy is nice but not anywhere near the girth of Clyde's cock, which is about 2 inches wide and easily 8 inches base to tip. I was surprised as anybody that I was able to swallow up his entire member in my ass, but engulf it whole, I did. Fuck... I was going to make this wank session a leisurely one, but just thinking about Clyde's schlong and whatever may be in store for me on Friday makes me hot to cum sooner than later. \n\nI draw the toys out of my body and hop off the bed to kneel on the runner by my bed. I pull out a much bigger life-like cock that has a stand-up base. Releasing the vibe again for a moment and leaving it skittering on my bed, I lightly lube up the huge cock and slowly lower my pussy on it. I then take the smaller dildo that had been in my pussy, smear more lube on it and with the vibrator back on my clit on High now, I gradually insert the smaller dildo into my ass and switch on the built-in vibe.\n\nI slow-hump the huge toy cock with my dripping pussy while working the anal dildo in and out of my ass -- sometimes with short strokes with just a third of it in my anal ring, sometimes with the whole length in and out of my tunnel. Fuck, I love this. If I had an extra hand, I would be pinching my nipples, hard. \n\nI can feel my orgasm winking at me from a distance and as much I would like to delay the inevitable finish a little while longer, I'm again envisioning being worked on by Clyde with his mystery partner -- maybe one in my pussy or ass, and one in my mouth. Or, the fantasy that I've only recently allowed myself to consider because it's so over the top -- not to mention a little scary if one of the cocks is as big as Clyde's -- one in my pussy and the other pumping in and out of my ass. And maybe magically, buxom Chloe would pop in and stuff one of her luscious tits in my mouth.\n\nOh fuck.... just imagining that and working my ass harder with the dildo is sending me over the edge. I hump the pussy dildo from base to tip as I fuck my ass with the other dildo. Ahhh, fuccccckkkkk... I come hard, feeling my ass squeeze the dildo and my vagina walls massage the toy in my hungry cunt. I ride the waves of my orgasm as I lighten the pressure on my clit, which is so sensitive and throbbing after my climax.\n\nAfter a few moments, I slow down the pussy-humping to a stop and switch off the vibrator. My ass is still in the final throes of clenching around the toy, and I absent-mindedly count the number of times it's pulsing. 7... 8... 9.. Jesus. That was so fucking hot. I bow my head onto my bed to catch my breath, juices running down my inner thighs, the ass toy still embedded in my tight wink. I can scarcely wait until Friday.\n\n+ + + \n\nThe day is finally here. I have been so horny thinking about today's treatment, but I've been very strict with myself and have not masturbated at all today. (Yesterday, however, was another story. I had gone for my full wax job and upon coming home, got myself all turned on and wanked off every which way in front of my dressing room mirror.)\n\nThe pretty spa assistant led me into the treatment room -- a different one than from previous visits. This room is in the corner and a little bigger, with the usual massage table and also a massage chair. Not wasting a moment after she leaves the room, I get into position on the table, place the towel over my backside, and wait, my bald pussy already lightly creaming.\n\nThe usual soft knock on the door, then Clyde softly walks in, followed by the second therapist. \"Hi Lizzie, glad to have you again.\" He says in his usual affable manner. \"This is Luis; he'll be partnering with me on the 4-hand massage today. How are you feeling in your body? Any pain or soreness?\"\n\nI'm thinking to myself, 'no, but I hope to be sore later.' Instead I answer, \"Hi again, Clyde. Hi, Luis. No aches or pain, just glad it's the end of the day Friday. I really need this treatment today.\"\n\n\"Not to worry, we'll take good care of you.\" Clyde answers.\n\nAs I shift to position my face in the cushioned head cradle, I scope out Luis out of the corner of my eye. Jesus, if Clyde is the lanky yoga/surfer dude (who can also rim and ream me like a champ), Luis looks like a panty-wetting Latin lover archetype. He's not as tall as Clyde, about 5'10\", lean and well-muscled, with close-cropped dark hair. It's too dim in the room for me to make out his face, but I can tell he's all cheekbones, smoldering eyes, and chiseled lips. Fuck me. I mean, literally. I can feel my pussy responding with a slight gush of moisture.\n\nTaking their positions, Clyde at the head, and Luis at my feet, they slather their hands with oil and start with the preliminaries. As he started out last time, Clyde works from the base of my neck to my low back, where my back joins the tops of my buttocks. Happy ending or not, he gives a hell of a massage, and I can immediately feel the week's tension start to melt away.\n\nLuis mirrors Clyde's strokes and, similar to how Chloe started last time, glides his strong hands from the backs of my heels up my legs, ending just where my legs join my ass. Then he glides his hands back down, continue with his thumbs pressing into my feet, rubbing small circles on the balls of my feet, and culminating in lightly pulling my toes. I absolutely love footwork so this is just heavenly. His hands are strong, but his touch is different from Clyde's. More intense, more animalistic somehow.\n\nThey synchronize their strokes so that their hands meet at the tops and bottoms of my ass, respectively, with each stroke. Clyde has expanded the downstroke to include the tops of my glutes, his long, strong oiled fingers slipping beneath the towel still covering my ass. Luis still terminates his upstroke at the very top of my thighs, but -- maybe it's my imagination -- his thumbs seem to linger a bit at the top, a hair's breadth from my inner cunt lips. I'm already so turned on and my lady parts feel completely swampy.\n\nBut this being first and foremost a legit therapeutic massage, they switch to working my upper and lower body one side at a time. Clyde starts with my right shoulder girdle, upper arm, forearm, and hand, while Luis focuses on my left thigh, calf, and foot.\n\n\"Leezie, is it OK if I remove the towel so I can better access your hip?\" Luis asks. His accent is not strong, but I do love the way he pronounces my name.\n\n\"Mmmm-hmmm, please do.\"\n\nLuis is now working my entire left lower body, foot to buttock, and he is amazing. This spa sure knows how to hire therapists. I hold a lot of tension in my hips (most people do), and he really goes to town on my glutes. It's a little painful, but I know Clyde must have given him notes on this area of my body from previous times, so I decide to let him do his work. When he's satisfied that he's unknotted all my kinks, Luis soothes my entire hip and leg with firm glides using his oiled palm. Amazing.\n\nHe repeats this intense work on the other side as Clyde switches to my left upper body. I feel like a rag doll, and while I can't wait for the #fivealive benefits, I am thoroughly loving this right now.\n\nLuis has finished the somewhat excruciating work on my right hip and leg and is now finishing up with the palm-smoothing technique. He walks back to the end of the table and revisits the heels to butt crease long strokes. But this time, he's gliding both his oiled thumbs up the inside of my butt cheeks on the upstroke. Fuck, that feels good. He then starts to massage my ass, lightly stroking the outer ring of my anus with each circular movement. It feels like an extension of the work he was doing before, yet decidedly not.\n\nThen I hear a faint creak and I realize he is climbing onto the massage table between my slightly parted legs. Holy shit, is he going to fuck me already? But no, he slips one arm under my hips so that my ass cheeks naturally open up more and starts to lick me out, from dripping pussy to ass crack. Oh, my fucking god. His tongue is as muscular as his body looks, and his energy is definitely \"take no prisoners.\"\n\nThen, maddeningly, he slows down and stops. What? There's a pause, and then I feel something being inserted into my ass. He's working in a medium-sized butt plug, lightly fucking my ass with it as if to train my ass hole. He ends up leaving it in there, gently untucks his oiled arm from underneath me, and backs off the table.\n\n\"OK, Lizzie, let's turn you over,\" Clyde says softly.\n\nWith a small whimper, I slowly flip myself over, sliding down a bit so that my head is off the cradle. Luis is ready with the bolster to slip underneath my knees for back support. They oil up again and resume their left/right bodywork like nothing is out of the ordinary, except that Luis has just sampled my box, the room smells strongly of pussy, and I have a plug in my ass.\n\nFinally, they're done working over my muscles. I am so relaxed yet so very horny. As if he can hear me, Clyde gently turns my head to face his side of the table, undoes the tie to his loose pants, and offers me his cock, already primed with a drip of precum. I latch onto it like a baby to a breast and start taking long pulls on it.\n\nMeanwhile, Luis bends both my legs and opens them to the sides, opening up my pussy and exposing my clit. He promptly leans down and starts lapping at my clit with his muscular tongue. The guy doesn't waste time with any teasing motions at all. Fantastic. He reaches down to the plug and gently fucks me with it. Then he lets my anus close on it again and, like a magician, switches on the vibrator hidden in the plug. Not missing a beat, he slips two strong fingers in my pussy and slowly fucks me while making firm circles on my clit with his amazing tongue.\n\nI reach out to take hold of Clyde's massive cock with one hand as I suck and pump him. My other hand is firmly holding Luis' head to my pussy and I buck into his face, matching the rhythm of his clit-licking. In my mind's eye, I can envision myself being serviced by these two studs. The image is so hot that my first orgasm comes hard and fast. I moan deeply with Clyde's cock stuffed in my mouth, as Luis brings me off with his powerful tongue and fingers, the vibe and plug in my ass providing accompaniment. \"mmmmmmph, mmmmmm, ffmmpphhhh....\" My eyes are tearing from Clyde's cock knocking against the back of my throat. But he doesn't cum yet. It seems he has other plans...\n\nAt this point, both Clyde and Luis slow down the cadence of their movements and one after the other, slowly back off my body. Luis clicks the plug vibe off but leaves the plug in place, which provides my anal ring with a delightfully huggy feeling post orgasm. I'm lying in there in a daze with my eyes closed and wondering if my time is up yet. Suddenly, I feel a smooth strong hand take hold of my cheek to turn it to one side. My eyes float open and am surprised and thrilled to be presented with Luis' cock in my face!\n\nWhile Clyde's cock is pretty massive, proportionate with his height (I'd guess 6'2\", and yes, I know not all tall guys are hung), Luis' is impressive in a different way. He is completely manscaped -- whereas Clyde is not -- which sets off his tool beautifully. Not as big but still in the \"hung\" range, with a slight curve to it, and uncut. He rolls back his foreskin to expose his sculpted cock head and rubs it on my lips. I open my mouth immediately and offer up my wet tongue to taste his salty precum. Yummy! He starts fucking my mouth with his stiff cock in slow strokes. I know I just came, but fuck, so hot!\n\nMeanwhile Clyde has started softly lapping at my pussy. He's wise to the fact that my clit would be super sensitive after my orgasm so keeps his movements light. I am literally in seventh heaven, again with a cock in my mouth and one on my snatch. I feel slightly undone from all the pleasure and sensations and wonder how I'll walk out of here today.\n\nAfter a few, Luis motions for me to stop and pulls out of my mouth. I make a pout of protest but then quickly realize the reason for the switch. Clyde reaches up and scooping me up from underneath my thighs, pulls my hips down to the end of table. He bends my knees towards my chest and starts eating me out more energetically. For his part, Luis probes his thumb into my mouth to manually open it and almost roughly stuffs his cock back into my mouth. Oh, my God, so good, so hot.\n\nAfter some length of time, again I have no idea how much time has elapsed, Clyde pulls his face away from my pussy to stand up. Then I hear the familiar crackle of a condom wrapper being opened and several seconds later, he glides his entire fattie into my pussy in one motion. \"Mmmmmmmph...\" I moan with Luis' cock in my mouth. \n\nClyde starts fucking me smooth and slow. Luis is also fucking my mouth smooth and slow, his fingers wrapped in my hair. \"Mmmmm, Leezie, your mouth is so nasty, so gooood...\" Luis moans. Oh, my lord God. I am being serviced beyond my dreams. Only thing missing is.... Oh, never mind, Clyde just turned on the vibrator in my butt plug. I reach up to roughly tweak my nipples. I am eager to drink Luis' cum, should he decide to share it with me. He doesn't seem to be in any kind of hurry though.\n\nThen, once again, Luis motions for me to slow down and pulls his stiff, slobbery cock out of my mouth. He walks to the head of the table and with his oily hands, slides them underneath my shoulders to ease me towards a seated posture. Like a synchronized trapeze artist, Clyde catches me and gathers me up completely off the table. I automatically hold on with my legs and arms. He had taken off his shirt, and his chest hair tickles my breast and nipples. Wonderful. He carries me over to the massage chair and sits himself down. \n\nThe armless chair has a narrow bench seat and is inclined slightly back with pads for one's shins, or in my case, for my feet since I'm on top of Clyde. I grab on to the hand rest ledge behind the head rest, and we continue our leisurely fucking, with Clyde palming my breasts and pinching my nipples. I am realizing now the chair is perfect for riding cowgirl. Yee-haw!\n\nOf course, this clever seat exposes my ass in the back, and Luis wastes no time attend to it. He pops out the butt plug and kneels down to tongue-spear my ass hole. Oh, sweet baby Jesus, in all my fantasies leading up to today, this particular scenario had never come up. Luis' tongue seems to have a spine of its own and stabs my back passage like a small cock. It's fucking amazing. \n\nMeanwhile I can tell Clyde is getting close to coming. He has moved his hands from my tits to my hips and is driving my pelvis hard on his cock. I'm sure it's not easy for Luis to keep up his rhythm in my rear, but he is holding up valiantly.\n\n\"Ah, fuck, Lizzie, your pussy is so sweet, so tight. You're gonna make me blow my load, baby.\" Luis takes a break from rimming me to allow us space but inserts two oily fingers in my ass as I bounce on Clyde faster and faster, taking in the entire length of his cock each time. \n\n\"Ahhhhhhh, I'm coming, oh fuck. You're milking my cock with good with your slutty little pussy. Ahhhhh, fuccccckkkkk....\" Clyde buries his face in my neck and bucks his hips in the strong throes of his orgasm. Oh, my god, what wonderful service this is. Absolutely amazing. I slump in his arms, an oily, happy mess, enjoying Luis' fingers still slowly fucking my back passage.\n\nThen, what do you know, in my zoned-out state, I hear the familiar crinkle again behind me and realize Luis is putting on a condom. I feel him slather some lube on my ass and guess that he's also putting some on himself. Oh, sweet God, I'm soon going to butt-fucked while another cock is inside my pussy. Does it count as DP if one guy already came, I wonder absent-mindedly. But I'm quickly jolted awake by Luis introducing his hot cock inside my back passage. He gives a few courtesy pumps at my tight entrance to prime it, then after only a few strokes, he plunges all the way in.",
        "Thank God Clyde has softened a bit after his orgasm. Honestly, I'm not sure I could take these two hunks at full mast down there. I mean, I probably could have, but it would have been challenging. But what I am receiving right now is very niiiiiice. A hot Latino cock in my ass, while my pussy snuggles over Clyde's resting sausage. I feel full to the brim with cock.\n\n\"You're right, Clyde, her culo is tight and creamy as fuck. Damn, woman, you're gonna make me cum fast!\" Maybe it should bother me that they shared locker-room talk about me beforehand, but I guess I'm a real slut because it totally turns me on. With Clyde's semi-hard cock still filling up my pussy, I shimmy my hips slightly forward and back to meet Luis' thrusts. He's definitely doing all the work, though, his strong hands steadying my shoulders as he repeatedly rams his cock into my ass.\n\n\"Ah, fuck, I'm coming, ahhhhh.....fuccckkkk.....!!!\" Luis stuffs the fingers of one hand in my mouth for me to suck on as I arch my hips back to receive him. He bucks his hips hard into my ass and unloads his spunk into my well-fucked ass. Moaning my appreciation, I luxuriate in the both of them nuzzling my neck and rubbing their strong oiled hands all over me, Clyde kneading my thighs and buttocks, and Luis massaging my tits while still softly pumping his cock into my backside. Mmmmmm...\n\nAfter a minute of catching our breath, Luis lets his cock slip out of my ass. He goes behind the massage chair to tip it slightly forward to facilitate Clyde standing up with my legs wrapped around him, his cock slipping out of me as he does so. He walks me back over to the table and gently poses me down so I can stretch out. They peel off the condoms and chuck them into the wastebasket. Then each therapist proceeds to sponge me down with a warm wet cloth. \n\nOnce I'm freshened up, Clyde drapes a crisp clean sheet over me and says, \"Rest a little. See you next time.\" They softly pad out of the room."
    ],
    "authorname": "POVscribe",
    "tags": [
        "big cock",
        "double penetration",
        "dp",
        "fellatio",
        "group sex",
        "latin lover",
        "massage fantasy",
        "masturbation",
        "shaved pussy",
        "mfm"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/five-alive-plus-one-more"
}