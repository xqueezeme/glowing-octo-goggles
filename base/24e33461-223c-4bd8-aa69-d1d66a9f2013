{
    "title": "The Winsome Widow",
    "pages": [
        "<center>Foreword</center>\n\nHello readers. My apologies for delaying the beginning of The Winsome Widow, but I must make a couple of small acknowledgements before we start. These in no way impact on the story, so feel free to scroll down to Chapter 1, safe in the knowledge that you have missed nothing of import.\n\nThe title for this story came from @sirhugs who posted that and nothing else in the Story Ideas forum on the Literotica Discussion Boards.\n\nMy own inspiration came from two sources: in response to @sirhugs title, @Hypoxia suggested that \"The Winsome Widow is a pub with a lurid sign and regulars telling lascivious tales\". That was all it took for my mind to connect to a wonderful Stephen King short story: The Breathing Method. In King's story, the characters gather at an unnamed Storytelling Club where the members tell tales of mystery and macabre. It includes two stories: an inner story told by one of the club's members and the outer story of the narrator's arrival at the club as a new member, where he discovers that everything is not entirely as it seems; the club holds a dark secret of mystery and macabre to rival any of those told within its walls.\n\nI don't claim the talent of Mr King, but I wanted to tell an erotic tale that captured the occult essence of his Storytelling Club. I doubt that The Winsome Widow will ever find its way into Stephen King's hands, but if it did I would want him to understand that this story is an act of homage, not one of mockery or plagiarism. In service of that homage, I freely admit that I have borrowed the wonderfully austere Stevens from his club for just one night; as well as a few names from his storytelling club, including Johanssen, which I thought was a perfect fit for the last of The Widow's founding members, as well as Evelyn, David Adley, references to Waterhouse, and one other famous name from the pen of Stephen King that I will allow fans to discover for themselves.\n\nLastly, this is the first of my works that attempts to tell a real story. My previous writing couches erotica in just enough context to allow the reader to connect with the characters; that is not so much a 'story' as a deliberate attempt to dial up the erotica by appealing to more than just the carnal senses. By telling what I hope is a (more) real story here \u2013 albeit one that is derivative of a much finer storyteller \u2013 I hope I have brought something new to the table.\n\nThank you readers; now let's get on with the storytelling.\n\n<center>~~~</center>\n\n<center>\"It is the tale, not he who tells it\"</center>\n\n<center>Stephen King</center>\n\n<center>Chapter 1 - Barrow</center>\n\nIn one of the secluded laneways off Macleay St in Potts Point, Sydney, sits a set of five handsome two-story Victorian brick terraces; each with a brass plaque beside the door identifying the surgeon or barrister who practices within. The westernmost of the group has no name on its plaque; just a relief impression of a woman in profile, not unlike the obverse side of a coin; one from a realm blessed with a most beautiful and elegant monarch.\n\nThis building is The Winsome Widow; a gentleman's club of such secrecy that it has no business registration or certificate of incorporation, no advertising, no web site and as near as I could tell, no membership roll or club dues. Men come and go of an evening, but there is no evidence of debauchery, such as deliveries of alcohol or exotic dancers; no loud music, no drunken, stumbling patrons leaving at late hours and never a hint of trouble that has involved law enforcement.\n\nSurprisingly, no disenfranchised or loose-lipped member has ever revealed the secret of what happens within its walls; but perhaps most surprising of all is that the club allows members to admit guests, and to the best of my investigations, every guest has thence become a member and maintained the secrecy of the club. Every single one; no exceptions.\n\nIt was not without some trepidation that I stood inside the gate, looking up at the barred and curtained windows as I prepared to enter what members simply called The Widow; my sole intent being to discover her secrets. Curiosity killed the cat? Ah yes, but information revived it!\n\n\"We'll be met at the door by Stevens,\" Riley explained, my reluctant co-conspirator for the evening. \"He's the butler; try not to say anything, but if you must then keep it brief.\"\n\n\"Stevens?\" I smirked. \"How butlery. Not Mr Stevens? No first name?\"\n\n\"If he has one then I don't know what it is,\" Riley said without any humour in his voice. \"It would be a mistake to underestimate him. He is the most singularly enigmatic man I have ever met; I believe that very little escapes his notice.\"\n\n\"Well, are we going in?\" I asked ironically. \"Or waiting for him to come outside and get us?\"\n\n\"You might be surprised,\" he answered enigmatically. Perhaps it was rubbing off from Stevens.\n\nWe walked to the wide oaken door and I looked for either a bell or a knocker but there was none. I glanced at Riley, but he made no move to announce our presence so I reached out to knock.\n\n\"Give it a moment,\" he murmured.\n\nI turned to look at him, my hand poised in mid-knock, when the door was opened by a tall, austere man of about thirty wearing a plain black suit and grey necktie. I half expected tails and a bow tie with a white linen napkin draped over one wrist, but even in his conservative modern dress, Stevens' bearing and manner still screamed English butler.\n\n\"Welcome back, Mr Campbell,\" said Stevens, his neutral accent not exactly English but not exactly Australian either.\n\n\"Thank you, Stevens,\" Riley replied in neutral tones of his own. \"This is Alex Barrow, a colleague.\"\n\nColleague? I was a junior associate and Riley had his name on the door, but I suppose he could hardly introduce me as his extortionist or his blackmailer.\n\n\"Welcome to The Winsome Widow, Mr Barrow,\" Stevens said dryly, managing to line up all those Ws without sounding comic.\n\nI held out my hand but he chose that moment to step backwards and open the door fully, thereby ignoring my offer of greeting without appearing to do so. It was probably a butler thing; no fraternisation, no contact.\n\nRiley allowed him to take his coat but Stevens made no attempt to remove my tweed jacket, something that Riley insisted I wear; his only condition before acceding to my threatening demand to be brought to the club. I had tried to get an explanation for this insistence, but even upon threat of exposure, he still refused and I had no further gambit to play. In the end I wanted The Widow more than I wanted to know why I had to wear a jacket that went out of fashion fifty years ago. I managed to spare myself the indignity of leather elbow patches and I was actually surprised at how stylish and quirky I looked with a matching waistcoat and a pair of designer, rectangular-framed eyeglasses. Riley only shook his head when he saw my attempt to 'pull off' the tweed look, telling me I had missed the point, but conveniently forgetting that he refused to explain the point in the first place.\n\nI followed Riley down the corridor into a large sitting room with high Victorian ceilings and decorated in timeless gentleman's club chic: timber panelling, burgundy patterned wallpaper, leather wing-back armchairs and an open fire with a good bed of coals and a low flame. I looked around for Stevens, but he was gone so I joined Riley at the liquor cart just inside the door; it was stocked with labelled decanters of red wine, sherry, port, cognac and scotch whiskey. No ice, no mixers, and certainly no beer; I wondered if Stevens would fetch me a Bloody Mary, but I was disinclined to ask.\n\nRiley poured himself a red wine and I nodded when he gestured towards me with the decanter. I sipped as we walked to a vacant pair of armchairs and found it to be exquisite. Riley saw the question on my face and answered it before I could ask.\n\n\"They're all from The Widow's cellar,\" he explained. \"Nobody except Stevens has ever seen the bottle, and the most he has ever offered is that it's a special vintage from a local vineyard. Davis is a bit of a wine snob,\" he flicked his eyes at a forty-ish man reading a newspaper, \"and he can't even identify the grape.\"\n\nHe watched as I swirled and sniffed and tasted the sublime flavours of berry and liquorice and black current. \"The Widow has many mysteries,\" he said. \"You soon learn to accept and not to question.\" I smiled inwardly; I planned to answer at least a few of those mysteries before the evening was over.\n\nI heard a familiar voice at the front door and flashed my eyes at Riley.\n\n\"It's Evan,\" I hissed. \"Where can we go? I don't want him to recognise me.\"\n\n\"The last time he saw you, you had tits and no beard,\" Riley said in a low voice, making no indication that he was matching my movements to leave. \"Relax. I don't even recognise you.\"\n\nI watched the door in a dull panic, trying to control my breathing as I mentally practiced my man's voice in my head. Evan walked through the door and I felt a familiar surge of wanting; he looked characteristically hot in a tailored gunmetal grey suit, stylish eyeglasses and square-toed Oxfords polished to a mirror shine.\n\nHe poured himself a scotch and \u2013 looking around \u2013 caught Riley's eye with practiced ease and came over.\n\n\"Farrer,\" Riley greeted him, making no attempt to stand up. \"This is Alex Barrow.\" I wasn't used to this all-male informality of surnames and casual introductions; I didn't know whether to stand and shake hands or to smile and nod.\n\n\"Evan Farrer,\" he said, stepping close enough to obviate the need for me to stand, clearly he didn't expect me to get up.\n\nMaking sure I got a good grip, I tried to squeeze in an un-womanly manner and misdirect his attention from my small hand. I felt a spark of lust as we touched, silently reproaching myself at the same time; I dumped him, for fuck's sake; it frustrated me no end that I couldn't just forget about him.\n\n\"Evening,\" I said, deliberately using a one-word greeting so that I could mask my voice with a croak and a cough to clear my throat. I was suddenly very conscious of my disguise; I was accustomed to men running a slow gaze down to my thighs and then haltingly back up over my hips and breasts, currently strapped painfully flat while padding in the lining of my waistcoat straightened out the curves of my waist. I was almost disappointed; Evan didn't check out my tits or my legs; he just smiled and looked at my eyes as we shook hands, two quick pumps and then he let me go.\n\n\"I see you're in tweed tonight, Mr Barrow,\" he smiled with an ironic nod to my jacket. \"That's probably sensible for your debut at The Widow.\"\n\nI just smiled and nodded, raising an ironic eyebrow of acknowledgement indicating a shared understanding that I didn't actually share.\n\n\"Yes, that was my recommendation,\" Riley interjected. \"I myself wore a navy blazer on my first visit and I don't mind admitting that I left that night a tad shaken.\"\n\n\"I bet!\" Evan laughed quietly. \"I bet you did! Oh, I would pay a high price to have seen the look on your face.\"\n\n\"Well you can ask Johanssen then,\" Riley smiled disarmingly. \"He was the one who invited me. He can wax loquacious after a couple of ports, so you should get a pretty vivid description even now, twenty-eight years after the event.\"\n\n\"I know,\" Evan returned enthusiastically. \"I'm told he has the chair tonight? We should hear a fine tale with a long, slow burn.\"\n\n\"Indeed, indeed!\" Riley nodded knowingly. \"With Waterhouse gone, Johanssen is the last of the old men. If we're lucky he might treat us to one of the old tales; I bet he has a few from the early days that none of us have heard before.\"\n\n\"We can only hope.\" And then changing the subject, \"Actually, I'm glad you're here, Campbell,\" I was unaccustomed to anyone using Riley's surname without 'Mr' in front of it. \"I wanted to pick your brain about a commercial property in the city.\"\n\n\"Well,\" Riley smiled. \"Sit down. I just finished telling Barrow about the library and he was keen to abandon me for a quiet read.\" This was news to me, but I was more than happy to be out of the way of any conversation; I would just have to trust that my hold over Riley was strong enough that he wouldn't reveal me to Evan.\n\nI took my cue and stood up; even with the lifts in my shoes I was still six inches shorter than Evan and had to stifle an urge to stand on my toes and kiss him. I followed Riley's gaze towards a door and walked off with a smirk as I thought about the quid-pro-quo of giving Evan a beard-burn with my fake facial hair.\n\n<center>Chapter 2 - Alex</center>\n\nEvan and I were six months separated but we lived together for almost two years prior to that. The initial attraction was mutual; we were both successful professionals in our late twenties with similar interests in food, music and movies. We are both considered more than moderately attractive and are rarely short of options in our choice of partners, but we had the good fortune to meet at a time when we were both in relationships that were circling the drain.\n\nThe mutual attraction and mutual interests led to a string of 'chance' meetings, which led to a date, which led to the swift despatch of our respective partners so that we could finally consummate our attraction in my bedroom.\n\nI wouldn't describe our early sex life as electric, but to give Evan due credit, he was a most attentive lover who always ensured that I came; although far more often it was under the ministrations of his tongue than his cock. If a girl can possibly complain about coming every single time she had sex with her lover, then I suppose I am complaining. Even though I relished the sweet relief of climax with his tongue on my clitoris, I longed to share that moment with him inside me, arching and straining with my own crescendo as his cock throbbed deep within my womanhood and emptied his seed into my molten core.\n\nShortly after we moved in together, I was contemplating how to brooch the subject of a light bondage fantasy in which he could restrain me and take me with animal abandon, not worrying about my orgasm but trusting that the raw physicality of the moment would bring me through ... and if it didn't, well a smart girl always keeps a ready supply of batteries, right?\n\nMy plans had progressed so far as lingerie shopping, which was fun; to browsing bondage aids at the adult superstore, which was terrifying. My little bag of tricks included sheer red stockings with lace trim and matching garters and belt, no panties (I congratulated myself on the savings), and a red lace quarter-cup bra that lifted and separated my B-cup breasts but covered only the undersides, leaving my nipples deliciously free for his entertainment and mine.\n\nWith these things bagged and paid for at my favourite boutique, I entered and then circled the sex shop for more than an hour, finally proceeding to the counter with cheeks redder than my new lingerie and \u2013 clutched in my white-knuckled fist \u2013 a spreader bar; a lightweight rod about two feet long with thick velcro ankle straps at either end. I also eyed the handcuffs, but the metal ones looked too scary and the furry ones looked ridiculous, so I bypassed them altogether and chose to consolidate further practical savings by calling into service one or several of my own silk scarves to bind my wrists.\n\nAs I waited to pay for my new acquisition (cash, of course), I held my breath in silent terror of the clerk calling over a crackling PA system 'Kinks and Fetish to the register, kinks and fetish; I need a price check on a spreader, that's a price check on a K24 BondMaster leg-spreader, thank you Kinks and Fetish!' How a woman can buy tampons from a 15-year-old boy at the supermarket but baulk at showing her chosen sex aid to a fat middle-aged woman in a sex superstore beggars belief; but that was my reality. \n\nOn my way home on the train with my new purchase safely concealed in a nondescript bag, I looked around at my fellow passengers and tried to imagine what they would think if they knew the long package in my hands was a leg spreader. I admit that I found the thought titillating. Then of course, I wondered what they would do if I took it out and tried it on; hiking my charcoal pencil skirt up my thighs so that I could open my legs wide enough to strap myself in, exposing my lacy panties which at that moment would be showing a spreading stain that betrayed my arousal. I desperately wanted to reach down and touch myself, and it was a sweet agony to be helpless with my sexy thoughts, wriggling in my seat and squeezing my thighs together so that I could feel the lips of my pussy slide against each other.\n\nUpon arriving home I almost ran to the bedroom to try on my purchases. I stripped naked and immediately plunged a finger into my open slit; the relief of finally being able to pleasure myself was like a physical weight being lifted. With considerable willpower I stopped myself from going further and withdrew to gently massage just the outer lips, still wanting to save myself for Evan. Enjoying the sensation of denying myself, I tried on the lingerie first, even though I longed to strap myself in to the spreader. With slow, deliberate movements, I sat naked on the bed and watched in the mirror as I pulled the ruby stockings over my shapely calves and up my trim thighs. As I stood to put on the garter belt, I could see the level of my arousal in the mirror; the smooth lips of my outer labia pink and engorged from the rubbing, while the deeper coral pink of my opening glistened with wet promise.\n\nLastly, the quarter-cup bra; its sheer and lacy crescents hoisting my breasts to a level of perkiness unseen since my teenage years, their shape drawing focus to the hard, pink points of my nipples. With no panties, the belt, garters and lacy tops of the stockings formed a crimson picture frame around the wanton, pink perfection of my shaved pussy. The overall effect was ... stunning! God, I looked so hot, I wanted to fuck myself!\n\nBreathing heavily, I unwrapped the long package and held the spreader, feeling its potent energy course through me like quicksilver as I fingered the soft padding of the thick ankle straps. Sitting on the bed before the mirror again, I first strapped it on to one ankle and then, drawing a shuddering breath, I opened my legs wide and leaned down to strap on the other end.\n\nNervously licking my lips to a glossy sheen, I looked in the mirror, trying to remember the last time my legs had been spread this wide. Gymnastics at school? Goodness, that was 15 years ago. Certainly I never opened myself up like this for sex; I only ever spread my legs modestly wide and then lifted my knees to give my lover access. This? This was perverted! Prostitutes probably opened their legs like this to their seething, salivating clients. I had never felt so ... fuck it; I had never felt so God-damned HOT in my entire life.\n\nI tried pulling my knees together, straining uselessly against the ankle straps, but the bar was too long. With my hands tied I would be utterly helpless; my pussy wide open and inviting for anyone or anything that happened by and needed a hot wet place to park. At that moment I wanted nothing more than to reach into my drawer for a vibrator and buzz myself to a cataclysmic orgasm; I figured it would take all of about forty-five seconds.\n\nI was saved by serendipity as the phone beside the bed rang; I looked longingly at my reflection and then at the bottom drawer where my toy awaited, and with a resigned sigh I reached for the phone.\n\n\"Hello?\"\n\n\"Hey babe, it's me,\" Evan, of course.\n\n\"I was just thinking about you,\" I smiled, treating myself to some discreet fingering while I talked. \"Will you be long?\"\n\n\"Actually, that's why I called,\" he sounded a little disappointed to be the bearer of bad news, but there was an undercurrent of excitement as well. \"One of our clients has invited me to his club and I was calling to tell you to have dinner without me.\"",
        "I wasn't exactly dressed for dinner and there was nothing in the fridge. I sensed a pizza delivery in my immediate future. I watched my finger gliding up and down my slit in the mirror and wondered what the pizza delivery boy would look like.\n\n\"Really?\" I asked. \"Is there anything I could say to change your mind?\" My soft and sexy voice actually titillating me more than Evan as I watched my reflection pleasure herself.\n\n\"Probably yes,\" he laughed. \"I think it's just a bunch of old geezers sitting around telling lewd stories from their salad days, but they're rich and powerful old geezers with more influence than the State Upper House, so ...\"\n\n\"So you're going.\" Statement, not a question.\n\n\"Yeah,\" he said. \"Can I make it up to you?\"\n\n\"Uh huh!\" I replied brightly. \"I have a surprise for you when you get home. Don't have too much to drink, okay?\"\n\n\"Sounds intriguing,\" he laughed. \"Maybe I should come home right now.\"\n\n\"Go have fun with your geezers,\" I said, letting him off the hook. \"But don't be too late. And text me when you're on your way.\"\n\n\"Done. Love you.\"\n\n\"Love you too,\" I blew a kiss and hung up the phone.\n\nWell, what to do? I could rub out a quick orgasm and be horny again when he got home in four or five hours, or ... The thoughts of bondage and self-restraint and denial had me excited and the thought of denying myself a bit longer was strangely more arousing than it was disappointing. With a little reluctance but mounting excitement, I released myself from the spreader, put on a bath robe and went in search of a pizza menu.\n\n<center>Chapter 3 - Evan</center>\n\nThe text came through from Evan at 11:30pm; he was on his way home. I had downloaded an erotic eBook a bit earlier and was keeping my fires burning with a little bit of reading and a little bit of rubbing ... through my robe, of course; I think if I touched myself properly then things would have quickly spiralled out of control.\n\nHeart pounding in my chest, I raced into the bedroom and found a couple of silk scarfs in my drawer. Watching in the wardrobe mirror, I tried a few poses in bed: sitting up, lying down, arms apart and arms together; I settled for a semi-reclined position on the pillows with both hands tied above my head at the centre of the bed head. From here I could watch all the action in the mirror, and I liked the way the position of my arms lifted my breasts even higher in the quarter-cup bra.\n\nNot knowing how long Evan would be, I fumbled with the spreader but eventually got it fitted and then tried to tie myself up to the bed head. It was more awkward than I had imagined; I didn't want my hands so loose that it looked like I could easily get free, but I needed an extra set of hands to bind myself properly. In the end, I tied one scarf in a loop around the top bar of the bed and then simply wound my wrists in loops and \u2013 when I couldn't wind another turn \u2013 I held the small amount of slack between both hands.\n\nLooking in the mirror again, the effect was pretty convincing, and incredibly erotic. With my shoulders propped up, breasts exposed, legs open wide, knees slightly bent, nipples hard and pussy absolutely dripping with excitement; I looked indescribably sexy in my lingerie as well as completely helpless and exposed.\n\nNow I was really nervous; I had no idea how Evan would react, was he even into this kind of thing? He was pretty conservative and restrained so in my mind it wasn't a certainty. The last thing I wanted when he saw me was a conversation or to have to explain what to do; I just wanted him to take me and fuck me \u2013 not make love to me; not his usual, considerate, let's-make-sure-Alex-comes gentle loving \u2013 I wanted to have to scrape myself off the bed afterwards and to know that I had been administered the fucking of a lifetime.\n\nI didn't really have any plans on how to achieve this, but since it was a fantasy, I thought a fantasy role-play would be a good way to let him know what was required. And that's about as much time as I got to think about it, because within a minute or two of getting myself tied up, I head his key in the door.\n\n\"Is there somebody there?\" I called out in a frightened voice as I heard the front door open.\n\n\"Alex?\" Evan's voice; good. This would be embarrassing if it was the pizza boy coming back.\n\n\"Help me!\" I cried. \"I'm in the bedroom.\"\n\nI heard him coming at a run but he stopped dead inside the doorway, trying to work out what he was looking at.\n\n\"Please, Sir,\" I pretended not to know him. \"Help me. There was a man ... but you scared him off.\" I twisted my hips on the bed, trying to close my legs to hide my naked pussy. \"Please untie me. I'm so frightened.\"\n\n\"Al-..\" he began, my name freezing on his lips as he suddenly worked out what I was doing. \"Ma'am,\" he started again, I could almost see the cogs turning in his brain. \"Did he ...?\" Evan froze again on the word, not sure whether he should say such an ugly thing.\n\n\"Rape me?\" I asked. \"No. He just stripped me and tied me up and then ...\" I eyed the pink dripping centre of my sex, making sure his eyes moved there as well. \"... and then he undressed too, and ...\", I forced a sob into my voice and tried to squeeze out a few tears, \"... and he was holding his ... his cock,\" I spat the word, \"... just looking at me and stroking it ... and it was so big and so thick ...\" I sobbed a few more times and drew in a shaky breath. \"... and I couldn't help it. I'm so ashamed. I thought about what he was going to do to me ... if it would hurt me because it was so big ... and I started to get wet.\" I cried through this last bit, impossibly trying to close my legs in pretend shame at my arousal.\n\n\"Are you going to untie me?\" I asked; I managed to have a few tears cascading down my cheeks by this point, and I noticed with some satisfaction that Evan was thick and erect beneath his suit trousers. \"I was so frightened. But now you're here to rescue me. Won't you cover me up so you can't see how ...\" I eyed my steaming opening again, \"... how ... I'm so ...? It's so humiliating.\" I had both eyes teary now and was gazing up at his blurry features.\n\n\"Shhhh,\" he soothed, coming to the side of the bed. \"You have nothing to be ashamed of at all.\" He placed a hand on my fluttering stomach and fingered the fine lacework of the garter belt. \"It's very understandable,\" he continued, moving his fingers slowly down towards my shaved mons pubis, \"that in your helpless state ...\"\n\n\"I am,\" I pleaded. \"I'm completely helpless. He could have done anything to me; anything at all.\"\n\n\"... that in your helpless state ... with your emotions high ...\" he was pausing every few words, searching for the right script; I wanted to applaud him, he was doing brilliantly. A lesser man would have simply stepped up to the plate and started fucking. \"... that feelings ... seemingly opposed feelings ... would overcome you.\"\n\n\"I ... I suppose,\" I sobbed.\n\n\"For example,\" he continued. \"Here you are, still utterly helpless and frightened, and yet ...\" his hand cupped my searing pussy, \"... and yet, when I do this, you probably still find it arousing beneath all that helplessness and fear.\" He slipped his middle finger into my slit and glided it frictionlessly up and down over my opening.\n\nI didn't need to act for this part; I had been effectively masturbating without direct contact to my pussy for the better part of four hours and when his finger touched my entrance, I felt a bolt of pure sensation tear through my core, like throwing gasoline onto the glowing coals of a fire.\n\n\"Ohhhhhhh-uhhhhhh,\" I voiced a guttural, bestial moan of desire; writhing my hips and pulling one leg up and the other down, vainly trying to close my thighs tight over his probing finger.\n\n\"Are you sure you want me to untie you?\" he asked, leaning down to take a nipple between his lips, sucking and flicking the hard tip with his tongue while he entered me with his finger.\n\n\"Ohhhhhhh,\" I moaned. \"Please, don't.\"\n\n\"Don't do this?\" He moved to the other nipple and effortlessly slid a second finger into my gaping hole at the same time. \"Or don't untie you? You're not being clear.\"\n\nI let out a little shriek of passion as he went in deep with his first two fingers and worked my aching clitoris with the tip of his thumb. \"No. Don't. Stop,\" I gasped between ragged breaths and cries of ecstasy.\n\n\"Don't stop?\" he said, sounding surprised. \"Well if you insist.\" He got up and moved to the foot of the bed, continuing to finger me mercilessly until he couldn't reach any more. Grabbing the spreader in the middle, he pulled towards himself and with a genuinely frightened shriek I felt my bottom lift off the bed. I clutched the silk scarf in a death grip as he did it again, shaking me out like a beach towel, screaming and eyes bulging with excitement and fear. The next time he lifted, he turned the spreader and I flipped neatly over like a rotisserie chicken; my hands tied high on the bed and my back arched painfully downwards. I felt Evan let go of the spreader and I pulled my legs in, getting my knees underneath me so that I wasn't bent backwards any longer.\n\nI was disappointed that I couldn't see what was happing in the mirror, but I realised I was in a perfect fantasy rape, doggy position; hands tied to the bed head, bottom high and legs spread wide with my steaming entrance open and inviting. I heard Evan unbuckling his trousers and I dropped my shoulders to push my pussy out even more; wriggling my hips, straining against the spreader bar and powerless to close my legs.\n\nEvan climbed onto the bed behind me; one moment I felt his knob feeling around my opening and the next he was slamming his pelvis into my ass, his knob thundering into my cervix as the muscles up and down my vagina rippled and spasmed with this sudden incursion. I screamed, although it was more with surprise than with fear or pain. Evan is about medium-large \u2013 I have certainly never had cause for complaint \u2013 and he always works his cock gently into my pussy, even if he has already tongued me to an orgasm; so to have him fill me so completely and so instantly, it felt like he was turning me inside out.\n\nI didn't have time to get used to it because he grabbed me roughly on the curve of my hips and set to fucking me with a vigour and pace I had never experienced before. Each time he pulled almost all the way out, I felt like I could take half a breath again, but then he would pound his meat back into me and I would scream again from the incredible feeling of fullness and the explosion of ecstasy as he ground his knob against my cervix.\n\nAfter half a dozen strokes, the pussy spasms stopped but I could feel a powerful orgasm already building deep inside me. I managed to get control of the screaming, but with every one of those powerful thrusts, I couldn't help but cry out a little with building passion, only to gasp and snort in a very unladylike fashion as I desperately sucked in air on each backstroke.\n\nHolding onto the bed head now, I pushed back against him as my orgasm exploded and every nerve ending in my body lit up like a Christmas tree; tears streaming down my cheeks, I laid my head back and released and animal cry of desire, like a big cat in heat.\n\nI could feel Evan getting ready to cum as well. \"Fuck me!\" I screamed at him. \"Cum in me!\" With my orgasm abating and now feeling well and truly stretched, I couldn't believe how full I felt. My vagina always feels wonderfully tight around his cock, and I love the way he is just the right size to touch down at the back of my pussy, but tonight it felt like I was a virgin again; he felt ... bigger somehow. Longer!\n\nStill pounding into me like a machine, I felt him coming; his hot seed spilling into me, while his seemingly massive cock pumped it around my love canal like a washing machine. And still he didn't stop; if anything he felt even harder than before. I've never had anything quite like it in my pussy; long and thick and hard, it was like being fucked by a police baton. While he slammed his hips into my ass, I pushed back harder, bringing my clitoris into contact with his thick, wonderful cock. I looked down between my breasts at the steaming, cum-soaked train-wreck of our coupling; his balls slapping wetly against my shaved mons while his thrusting cock pumped his seed out of my cunt and down my thighs.\n\nThis almost pagan image of my pussy being so utterly dominated and conquered by his thick, pounding dick was bringing me to a second orgasm. Crying again as the surge of adrenalin and emotion built up inside me, I unleashed another animal roar; tears falling and spit flying from my lips and even a disgusting run of snot from my nose that I couldn't wipe with my tied hands and was forced to smear on my shoulder as I screamed and pleaded for him cum in me again, to fill me up until I begged him to stop.\n\nWith my orgasm still washing over me, he fulfilled my wish and unloaded again; if anything, this one was even more powerful than the first and I could feel the individual jets of cum spraying deep inside my core as his thick cock throbbed painfully against the constricting walls of my womanhood. Two, three, four pumps and he was still going; five and six and once again I could feel fresh, hot cum spilling from my opening and down my soaking thighs to stain the tops of my stockings.\n\nFinally his thrusts began to weaken and I felt his cock mercifully lose some of its heat and size as it wilted inside me. My own climax finished, I didn't have the strength to hold myself up any more and fumblingly unwound my wrists from the scarf and fell to the bed, flat and helpless and still locked in the spreader as Evan pulled his softening member wetly from my hole.\n\nI tried to roll over but couldn't and he took pity on me, releasing both ankles with a stereo rip of velcro. Flopping down beside me, he looked and sounded at least as spent as I was; relishing my newly found freedom, I rolled onto my side and snuggled into him, pressing my nipples into the thick muscles of his chest as we kissed, softly and lovingly, belying the frenzied, animal sex that we had just enjoyed.\n\n\"How was the boys club?\" I purred.\n\n\"Actually it was pretty good,\" he laughed. \"But I'm glad I came home.\"\n\n\"Really?\" I said, stupidly. \"I didn't know whether you'd like it.\"\n\n\"No! God, it was just what I needed,\" he said. \"You know what lewd, lascivious shit guys talk about when there're no girls about...\" he asked, rhetorically, I suppose.\n\n\"Actually no, I don't!\" I cried mischievously, eyes flashing as I pinched his bottom lightly.\n\n\"Well, they can be pretty crude,\" he said. \"I'm ashamed to say it got me so I was looking forward to getting home to you; hoping you wouldn't be asleep yet.\"\n\n\"Oh, Sweetie,\" I mocked him gently. \"Did the bad men at the club get you all horny?\"\n\n\"It doesn't sound very nice when you say it like that,\" he laughed. \"But kind of, yeah.\"\n\nI just laughed at his frankness, happy for him that it worked out so well; to come home horny and see his girlfriend tied to the bed in lingerie and ready to fuck.\n\n\"So you won't be going back, then,\" I said.\n\n\"Well,\" he considered it. \"I wasn't going to. But you may have changed my mind.\"\n\n\"Oh, really?\"\n\n\"Hmmm!\" he said, considering it in his head. \"I mean, that was a pretty special surprise you planned, but I don't think we can lay that whole experience at the door of some sexy undies and a bondage fantasy. I think the night out might have helped.\"\n\n\"So let me get this straight,\" I laughed. \"You need to go out with the boys to you can come home and fuck your girlfriend in a way to which you hope she becomes accustomed. Is that it?\"\n\n\"Do you disagree?\" he asked.\n\nI thought about it; about how hard his cock was ... and how fucking BIG it felt inside me. To be honest, I didn't think my little fantasy could take credit for all that. And he came twice! Jesus, can guys even do that? What the fuck happened at that club?\n\n\"Actually,\" I said, squeezing him tight. \"I'm willing to give the club another go as well.\n\n<center>Chapter 4 \u2013 Club Night</center>\n\nI was too sore to have sex for a couple of days after our first successful experiment with light bondage, but I got out the spreader bar and scarves on a few more occasions, sometimes surprising Evan like the first time and sometimes letting him tie me up in positions that appealed to him. One time I talked him into taking me by surprise, tying me up and 'raping' me; I contributed to the fantasy by struggling and crying, although I stopped short of screaming and trying to hurt him. Even though we had a safe word, Evan was still tentative and gentle and loving, often asking me if I was okay; he never achieved that animal abandon of the first time and \u2013 as a result \u2013 my orgasms were a bit of a lottery; sometimes yes, sometimes no, but never another multiple. Upon reflection, I'm not convinced that it was an improvement over our previous sex where at least I was guaranteed a climax; but there was a certain excitement in trying something different and a bit naughty.\n\nBy the time the last Thursday of the month came around again \u2013 Evan's club night \u2013 I had resolved to try something new, and given the outstanding success of last time I allowed it to coincide with his boys' night out. I asked him to text me again when he left \u2013 so he knew I was up to something \u2013 and when my phone cheeped I ran down to the end of our street in a tight mini and heels. When his car turned into our street, I stepped off the curb and stood in a hipshot pose, pushing out my small breasts and pretending to hitchhike. At first he drove straight past me and then \u2013 just before my heart had a chance to sink \u2013 I saw his brake lights come on ... the car even skidded a little, which was wonderfully flattering. He reversed back to me, wound down his window and said something like \"Isn't it a bit late to be out on the streets alone.\"\n\nWe played a little hitchhiker fantasy, where I pretended to be frightened but ever so grateful, and he drove around for an hour while I gave him little glimpses down my top (no bra) and beneath my hem (no panties). Eventually, as we were circling back around to our suburb, I asked how I could ever repay him for the ride; I was so grateful, but I had no money. He said he could think of a way that a pretty girl like me could make some money, and we went off into a reluctant hooker fantasy where I pretended to be initially disgusted by the idea but quickly came around.\n\n\"But I won't do everything,\" I said demurely.\n\n\"Like what won't you do?\" he asked.\n\n\"I won't do anal,\" I said, shivering; no role-play needed for that one.\n\n\"That's okay,\" he said. \"No Greek, fair enough. What about Spanish?\"\n\n\"Spanish?\" I asked; I really didn't know what that one was.\n\n\"You know,\" he said. \"Tit fucking.\"\n\nI almost laughed; I wasn't accustomed to his dirty talk, and it was really turning me on.\n\n\"I'm not sure mine are big enough,\" I giggled. \"You might want a refund.\"\n\n\"Show me,\" he said. \"I'll tell you if they're okay.\"\n\nI pulled the top of my dress down to my waist and showed him my breasts, making a little lunge at the wheel when he started to veer off the road.\n\n\"Hmmm. Maybe,\" he said. \"Push them together for me.\"\n\nI did as he asked, making a nice soft channel down the middle that I had no trouble imagining his cock sliding into.\n\n\"Yeah, sure,\" he said. \"I'd fuck that. What about creampie?\"\n\nOnce again, I made him explain it in lewd detail, pulling up my dress while I looked at my engorged pussy, pretending to consider whether I would allow him to cum in me and then watch while it dripped out again.\n\nWe went on in this vein until he turned into our street again. Would I swallow his cock? Sure, I'd try; depends on the size. Could I see it? Fine, but I'm driving; you'll have to get it out. Which, of course I did; stroking and squeezing it while I contemplated whether I could swallow it.",
        "When he parked the car beneath our building, I left my dress around my waist and kept hold of his erection while we caught the lift up; I briefly wondered if anyone was monitoring the security camera. We got into the apartment without being seen, which was almost disappointing, and then went on with the role-play; I pretended reluctance again and he tried to bring me around, stroking my nipples, raising the price and edging me slowly into the bedroom.\n\nUltimately, the sex was once again amazing. He fucked my mouth, my breasts, my pussy and even between my closed thighs, deliciously grazing my clitoris and making me come for the third time. He also came twice, once in my mouth and once in my pussy; but like last time he didn't get soft in between. In fact, he just seemed to get bigger and harder and when he finally entered my pussy, I had that first-time feeling of being opened up like a ripe virgin again, my pussy clinging and gripping at his thick manhood as he plunged all the way into my steaming core.\n\n<center>~~~</center>\n\nEvan's club night became a little tradition with us; one night I texted him an address and let him seduce me at a bar; on another I had my car 'break down' so he could help me; I even pretended to be a slutty cop one night, stopping him, strip searching him and then making him perform a ridiculous and sexy sobriety test on the side of the road. Every time we fucked like wild animals, and every time I came at least twice; five times on one occasion. \n\nAfter the first couple of adventures, I thought that my recollections of the size and hardness of his cock were being influenced by the intensity of the sex; but more and more I came to believe that on club night he really was thicker, longer and harder than normal. My pussy agreed with me too; although I fully expected to have tender lips from his pounding cock, I also felt sore and stretched on the inside, and probing around with a dildo the morning after, there were indeed a few tender patches in there that suggested a bigger-than-usual cock.\n\nAfter that first month, we didn't try again to recapture the magic mid-month; we just had regular, satisfying, loving sex and saved the raw, animal sex for that last Thursday night. \n\n<center>~~~</center>\n\nOne club night I had to work late and I had already warned Evan that I had nothing planned; in fact he would probably beat me home. As it turned out I did get home first, but I was so tired that I just undressed and crawled into bed. Evan came home after I fell asleep and crawled in behind me, snuggling up close with one hand cupping my breast while his hard cock pressed uncomfortably against my bottom. I was so tired that I was initially prepared to warn him off, but then surprised myself when I started to get horny and wet.\n\nI opened my thighs a little and Evan slipped his cock between them, fucking that little triangular gap where my pussy meets my legs, while I crossed my ankles and squeezed him tight between my thighs until he came. Did I think that would be the end of it? Oh, so wrong! He was still hard and he just flipped me over, ripped off my panties and plunged his cum-dripping cock into my soaking cunt, pounding me with a dozen quick strokes until he had me screaming and writhing, grinding his knob against my cervix while star-bursts of ecstasy exploded in my womanhood.\n\nEvan went on fucking me to two more climaxes, the third one exploding while I was still coming down from the second; and then he came again, pumping jet after jet of thick cum into me while he stirred it with his cock, working his hot seed into every corner of my molten pussy.\n\n<center>~~~</center>\n\nThat was the night that sparked my interest in Evan's club. Prior to that, I was prepared to believe that our wonderful lovemaking was a fortuitous product of my creative role-playing and an evening of lascivious guy-talk over a few lubricating drinks. But this time the role-playing was removed from the equation and the sex was still every bit as good \u2013 or better if you consider that I didn't even want sex that night \u2013 I had to question exactly what went on at that club to get my boyfriend into a pussy-pounding, animal-fucking, twice-cumming kind of mood.\n\nI tried asking Evan, of course, but he said it was very secretive; like Fight Club, the first rule of The Winsome Widow is that there is no Winsome Widow. Of course, he didn't say that; I didn't even know the name of the club until I hired a private investigator. But that was later; after I had run out of options.\n\nOur routine went back to normal, or so Evan thought; every month he would go to his club and when he returned we would fuck like walruses in heat. Even in my suspicion I couldn't deny the raw sexuality; it wasn't like I was just playing along, he really did make me indescribably horny when he came home and he really did bring me to two, three and even four consecutive orgasms; always having two of his own and never softening in between ejaculations.\n\nWondering whether they had hookers at the club, I checked for the obvious signs like lipstick and perfume and cum stains in his underwear, but never found anything amiss. Taking my investigation to the next level, I waited outside his work and followed him one night, learning The Widow's location, though not her name. Parked down the street, I watched men come as the light bled out of the day; usually alone although some in pairs; and at the end of the night about eight of them \u2013 including Evan \u2013 came out as a group and with quiet nods of farewell they made their way to their own cars or walked up towards Macleay St and Kings Cross.\n\nI pulled out quietly and drove away to keep ahead of Evan but stopped near home and got out, dressed in a sheer body stocking and waited for his car so that we could engage in a streetwalker fantasy, something we had tried before. He would ask for all kinds of outrageous sex acts and I would quote equally outrageous prices or quiz him over details, like would he bite my nipples, or did he expect me to swallow his cock, or could I use his cum to rub into my tits as a skin conditioner.\n\nAnd even though I was suspicious of what he was doing at the club, even though I had just spent a few hours sitting in my car secretly monitoring his activities; still from the moment I leaned in his window, I was soaking wet and breathlessly desperate to have his cock inside me. I recognised how bizarre this was but I couldn't help myself; I had tried brushing him off on club night and ended up fucking even more frantically to four powerful climaxes. I considered the possibility that the club was dispensing pheromones or a powerful aphrodisiac, such was my bafflement at the bizarre horniness that club-night brought out in us both.\n\nOnce a month I got the best sex of my life; hell, I'm betting I got the best sex of almost any woman's life; and between times I had a faithful, attentive and sensitive lover. The right thing to do would have been to thank my lucky stars; that would have been the right thing ... but it wasn't my thing.\n\nThe curiosity consumed me. I had tried asking Evan a hundred different ways what happened at the club, what they drank, what they talked about; hell, he wouldn't even tell me the damned thing's name or the names of any of his friends there. \n\nOn the last night we were together, I played my final card and tried to withhold sex, pleading with him to tell me, but he just picked me up and carried me to the bedroom, tearing my clothes off my body as I kicked and fought. Naked and pinned to the bed, I had our safe word on the tip of my tongue but I couldn't utter it; the awful truth was at that I longed for him to take me like this. When he pressed his knob against my entrance I was barely surprised to feel him sliding around in my freely flowing juices; and even though I was crying and still weakly fighting him, he still entered me in single stroke and both of us came with intensity of the moment.\n\nThe following morning, with my perspective restored, I delivered the ultimatum that I have regretted ever since: tell me about the club or I leave.\n\nI left.\n\n<center>Chapter 5 - Riley</center>\n\nThe months that followed were a misery for me; I loved Evan \u2013 and I was sure he loved me \u2013 but I couldn't reconcile that against the secrecy of his God-damned club. There was something going on at that terrace in Potts Point \u2013 something sexual, I was sure \u2013 and I felt that Evan had in some way been cheating on me, all the while giving me the best sex I would ever experience. I felt jilted and wronged and completely justified in my actions; but I also felt petty and small and ashamed of myself. Secret men's business; what's the big fucking deal?\n\nIf it was just about what I thought of as cheating, then dumping him should have been the end of it; but of course it wasn't. Hell, under the right conditions I probably would have considered swinging to spice up our sex life, so I couldn't afford to get too holy on the idea of cheating; not that I had any evidence anyway.\n\nThe problem was a simple one: curiosity. It wasn't so much that I didn't know his secret; it was that I wasn't allowed to know his secret, and that just wasn't acceptable.\n\nAfter months of self-recriminations and soul searching, I resolved to continue my pursuit of the mysterious men's club by engaging a private investigator. I told him everything I knew about the club; its location and the night that it operated being the sum total of my knowledge, and one week and $2000 later he presented to me the following information, some of which I outlined earlier: it is called The Winsome Widow; it is not a registered business, nor does it appear to collect dues from members; bank searches of Evan and other members reveal no payments to a common and suspicious vendor; and the building is owned by something called The Adley Family Trust, although it is not the listed residence of any person.\n\nHe took photographs of several members and managed to trace the names of most of them; he surreptitiously interviewed their spouses and friends but came up dry; no new information. And that was it! I thought it was going to be a complete waste of $2000 until he went through the photographs with me; they were all unfamiliar \u2013 even with the names supplied \u2013 until the second last one: Riley Campbell, a senior partner at my very own firm.\n\nJackpot!\n\nI wasn't immediately sure how this helped; I already knew the identity of one member \u2013 Evan \u2013 and that was no help to me. What I needed with Riley was some leverage; something I couldn't get from Evan ... a sex scandal with a junior associate perhaps. Most men wouldn't care, but a powerful man? A married man? Such a man might be prepared to part with one secret to keep another one.\n\n<center>~~~</center>\n\nMy chance came barely a month later when the partners funded a celebration for landing a big new client at work. I had arranged several opportunities to bump into Riley in the office, smiling and flirting with him, making sure he knew my name and knew I was single. It wasn't actually that difficult; I found him attractive for an older man, and he was smart and witty and a good conversationalist. On one of our 'chance encounters' in the kitchen, I actually found myself giggling behind my hand and flashing my eyes at him, not because I was trying to seduce him, but because I was genuinely flattered and entertained by his attention.\n\nOn the night of the celebration, the partners had booked out the function area of a local venue that served nice beer and wine in quantities that spoke of their intentions to entice their clients in their range of cigars and premium scotches. I was one of the first to arrive and approached the barman on my own.\n\n\"A bottle of vodka, please,\" I requested.\n\n\"Sorry Ma'am,\" he smiled, \"I can only serve drinks in glasses.\"\n\n\"I don't want you to serve it to me,\" I parried, flashing my eyes at him flirtatiously and placing a $100 note on the bar. \"I want you to pour it down the sink, fill it up with water and then make me Bloody Marys with it.\"\n\nA quick study, he understood immediately that I wanted to appear to drink all night without getting drunk. \"I could save you some money by filling an empty bottle with water,\" he grinned.\n\n\"What's your name?\" I leaned forward, smiling and giving him a superior view down my dress.\n\n\"Dan,\" he responded simply.\n\n\"Dan,\" I said. \"I'm Alex. Come closer; I want to give my new best friend a kiss.\"\n\nDan leaned over the bar and I gave him a chaste kiss on the corner of his mouth.\n\n\"Now, Dan,\" I said in conspiratorial tones. \"I would like a Bloody Mary, made with your finest vodka, please.\"\n\n\"Bloody Mary, coming right up, Alex,\" he replied in his efficient bar-tenderly voice.\n\nI watched as he retrieved an almost empty bottle of vodka, tipped it out and filled it with water, and then made my Bloody Mary with it.\n\n\"My friends will be ordering me the same drink,\" I said, \"and ...\"\n\n\"And you'd like me to make it with your personal vodka?\" he asked.\n\n\"Dan,\" I smiled, \"you are man of astute vision.\" I pushed the money towards him.\n\n\"You can hold onto that for the price of another kiss,\" he said, perhaps not feeling he had earned the money, having poured out only about five dollars worth of vodka.\n\nKnowing a good deal when I see one, I leaned forwards again and gave him a softer, longer kiss; full on the lips with a little \"Mmmm\" at the end. Dan looked pretty pleased with it and I wasn't complaining either. I took my Virgin Mary and staked out a nearby cluster of armchairs and sofas around a low table from which I could watch for Riley.\n\nIt was easier than I expected; Riley arrived with one of the other partners and saw me sitting alone; I waved and smiled and they both came to sit with me, bringing me another not-so-Bloody Mary. They were possibly just being polite by not leaving a colleague to sit on her own, but I don't think the combination of the low chair, my short skirt and crossed legs revealing the embroidered tops of my stockings did any harm.\n\nThe place soon filled up with people and noise and between my skirt and Riley's charisma, we had a regular progression of visitors to our table, obviating the need for him to mingle in a more partnery fashion. I took many opportunities to cross and recross my legs, providing little glimpses of my red lace panties to keen observers, while also tugging at my hem in mock outrage at its inexcusable affront to my modesty as it continually rode up over the tops of my stockings. \n\nAs the evening wore on, I consumed six or more of my special Bloody Marys; adjusting my perceived level of drunkenness with each one. In one inspired move, I leaned over the table to pick up my glass \u2013 providing a long, sexy look down my cleavage \u2013 and then juggled the glass as I sat back, slopped a little over the edge and cried out as I spread my legs to avoid staining my stockings; holding them open for a few moments with my bare thighs and tiny panties on show while I laughed at myself and licked tomato juice off my fingers. Between the red lace knickers and my red lips licking the red tomato juice from my red-tipped fingers ... well if there was any guy there NOT thinking about sinking their purple prick into my pink pussy, then they're either blind or gay.\n\nFinally at around 11pm, I caught Riley looking at his watch and then he drained his glass in what appeared to be obvious moves preparatory to leaving. Now was the time to make my play. I looked at my own watch and said \"Oh goodness, is that the time?\" and fished my car keys out of my bag.\n\n\"Early start for me tomorrow,\" I said, standing up. As I edged past Riley, I pretended to overbalance towards the table and then, overcorrecting, I tipped backwards, waving my arms and then fell directly into his lap to the raucous amusement of everyone at the table.\n\n\"Oh, my hero,\" I laughed, leaning sideways and kissing him on the cheek; making sure he had an excellent view down my top. \"I think I'm falling for you, Riley.\"\n\nEveryone dutifully giggled at my wit as I struggled out of his lap, allowing my car keys to jingle so that there could be no mistake that I intended to drive in my drunken state.\n\n\"You're not driving home, are you Alex?\" Riley asked with a frown.\n\n\"I'm fine,\" I dismissed him with felt like a carefree, inebriated wave. \"You can't get drunk on Bloody Marys,\" I smiled lopsidedly with sage wisdom. \"The Worcestershire Sauce neutralises the alcohol.\" I winked at him.\n\n\"Well, I don't think the science on that one is quite final,\" Riley smiled. \"I was just about to leave anyway; I'll give you a ride.\"\n\nBingo! \"Don't be ridiculous!\" I said with an over-expressive wave, which had me wobbling on my heels again. \"I'm fine.\"\n\n\"It wasn't an offer, Alex,\" he said. \"As of now it's a condition of your employment.\"\n\n\"Oh, well,\" I smiled. \"Since you put it that way...\" I held out a hand for him and although he took it politely, he didn't use it to help himself up; probably figuring I would finish up in his lap again. That was wise on his part; I felt a little electric pulse of excitement at his touch and dropping back into his lap felt like a distinct possibility.\n\n\"Bye, everyone,\" I waved with my free hand. I wondered if I was overdoing it; I didn't actually want everyone to think I was fucking Riley, I just wanted him to realise that they would believe my story when I blackmailed him into telling me The Winsome Widow's secrets.\n\nWhen we got to Riley's car \u2013 something sleek and dark and German \u2013 he held the door open for me and I felt a little pang of guilt. He was a wonderful man; I could tell by the way he made me feel that fucking him would actually be my pleasure, but then I would have to use that against him. I didn't feel very proud of my actions at that moment, but I was still driven by my insatiable curiosity and couldn't help myself.\n\nI was prepared to go through with my blackmail even if we didn't fuck by threatening to lie about it; but I kept up the seduction by chatting and laughing as he drove because I wanted the extra insurance and \u2013 I was realising more and more \u2013 I also wanted his cock. Why do these Winsome Widow men get me so wet?\n\nWhen we got to my apartment, Riley stopped but didn't shut off the engine; it looked like he was going to be a gentleman after all. This was going to take some more creativity. I had considered this possibility and planned a few contingencies; a kiss goodbye in the car that gets out of control; or \"I'm afraid, walk me to my door\"; but the drunken damsel was working for me and I thought I could milk it a bit longer.\n\nAs I got out of the car, I leaned back down to flash some cleavage and say goodbye, and then stepped back and tripped on the curb, falling to the concrete on my bottom with a yelp. Instantly the engine was switched off and Riley was running around the front of the car to help me up. I gave him another flash of panties and stockings as he helped me up and then fell into his chest, running my fingertips beneath the lapels of his jacket and checking out his muscles. He was in really great shape for his age and I could feel my nipples tingling with excitement.\n\n\"I don't think that barman was using enough Worcestershire,\" I said, looking up at him through my eyelashes.\n\n\"Are you okay to get inside on your own?\" he asked with genuine concern.\n\n\"Um?\" I started to release him and looked down at my wobbling heels. \"Maybe. I don't know,\" I looked back up sheepishly.\n\n\"Come on, then,\" he took my arm and beeped his car locked.\n\nWe got into the lift lobby without too much tripping. \"What floor am I on?\" I asked drunkenly.\n\nHe raised a speculative eyebrow at me, waiting to see if I would work out what was wrong with that question.",
        "\"I'm kidding,\" I winked. \"I'm pretty sure it's four.\"\n\nHe pressed number four and rode up with me. Finally at my door, he was still holding my arm and my heart was trip-hammering in my chest; this was the critical moment, I knew if I could get him inside then I could get him into bed.\n\n\"Thank you Riley,\" I turned and held him. \"You're my chivalrous knight, tonight.\"\n\nEven on my heels, I was too short to reach his mouth, so I held his shoulders and pulled myself up to kiss him; a small one on the lips first, and then with an audible drawing of breath I kissed him harder, taking his lower lip between mine and pressing my breasts into his chest.\n\n\"No, Alex,\" he said calmly, lifting his head back out of my reach.\n\n\"Riley,\" I breathed, my eyes shut. \"I want you. Kiss me.\"\n\n\"Alex,\" he said calmly again, pausing long enough for me to open my eyes, wanting to find out how he was resisting me. \"I'm gay.\"\n\nOh, fuck! This was going to be a problem. How do I sexually blackmail a ... wait a moment ...?\n\n\"Huh?\" My face probably ranged through a kaleidoscope of emotions; from horniness to surprise, confusion and then dark satisfaction. \"But I didn't ... Are you out?\"\n\nHe just looked at me, his face a mask of concern.\n\n\"Riley,\" I said, stepping back and suddenly sober. \"Come inside. We need to talk about The Winsome Widow.\"\n\n<center>~~~</center>\n\n\"I told you,\" he lamented. Riley's hair was a mess from running his fingers through it in frustration. \"I told you a hundred times. It's a secret because nobody tells and nobody tells because nobody would believe us. Worst case, we'd be locked up.\"\n\n\"Try me,\" I said.\n\n\"You won't believe me,\" he threw his arms in the air. \"Then you'll just ask again.\"\n\n\"Try me,\" I sat back, calmly blocking his frustration and letting him know there was only one way for this to progress.\n\n\"Magic!\" he blurted sarcastically with another wave of his arms. \"There! Are you satisfied? The Winsome Widow is magic! That's your explanation.\"\n\n\"In what way is it magic?\" I asked, still calm. I don't think he was expecting me to pursue this line of questioning.\n\n\"It's ... like a magic aphrodisiac,\" he said, settling down a little. \"But it doesn't just make you horny; it makes you a rock star lover, too.\"\n\nI was trying to look impassive to go along with the interrogator persona, but the juxtaposition of Riley's grey hair and contemporary slang tickled a smile out of me.\n\n\"All guys are horny,\" I argued. \"And some of them have to be decent lovers; it's the law of averages.\" I was playing devil's advocate, but this was interesting; Evan had gone from a standard level of horniness and bedroom adeptness to off-the-scale in both on club nights. Having this confirmed by Riley was easily my most exciting lead on The Winsome Widow. \"Maybe you're always a rock star in the sack.\" I paused and then added with a smirk: \"The offer still stands, you know. You could always show me what you mean.\"\n\n\"You didn't hear me earlier\" he said testily. \"I'm gay.\"\n\n\"And yet you're married.\"\n\n\"That's my point exactly!\" he gestured grandly, hands flying again for emphasis. \"Once a month, my wife gets a mind-blowing fucking ...\"\n\n\"You fancy yourself a bit, don't you?\" I smiled.\n\nHe ignored me, \"... and the rest of the time I'm picking up guys off the street in Darlinghurst. She has no idea, but she's long since stopped trying to get me interested at any other time. SHE ...\" he emphasised the word, drawing it out, \"... knows when she's on a good thing and doesn't ask questions.\" \n\nI hadn't told him about Evan yet but perhaps he had already guessed, given my interest. It had occurred to me more than once that I used to be on a very good thing.\n\n\"So you're straight on club night; and gay the rest of the time?\" I asked with a little edge of sarcasm in my voice.\n\n\"God! You don't get it!\" he cried. \"The Widow does something to you! After a night there, you'd fuck a dog on a chain ... AND THE DOG WOULD THANK YOU! I choose to go home after The Widow because despite everything, I love my wife and I value our marriage. I could go off to a prostitute, but there's no point; it just doesn't matter who you fuck \u2013 whether you love them or hate them or just don't care \u2013 it's always the most brain-snappingly orgasmic sex you'll ever have. Before menopause, my wife used the pill to schedule her periods around club night, but before she worked out that little trick, I had to take my wagon elsewhere a couple of times a year. I've fucked guys and girls, prostitutes and people I've picked up in bars ... this one time I used an old cum-soaked street whore with missing teeth ... and I still nearly blew the condom off my cock, I came so hard.\"\n\n\"Listen to me carefully,\" he said, leaning forward and looking me straight in the eye. \"The Widow does something to you; but it's a good thing. You just have to learn how to include it in your life safely. I don't want to know what it is and neither does anyone else; I just want to enjoy it.\"\n\n\"It's hard to believe,\" I said frankly.\n\n\"And yet ... you DO believe it,\" he said slowly, realising the truth in real time as it came from his mouth. \"You've experienced it ... at least, you've been with someone who has.\"\n\n\"Evan,\" I admitted. \"But not since last year.\"\n\n\"Farrer? You left him?\" he smiled. \"I wondered why he stopped driving. He's been walking back towards Kings Cross; I thought it was for a bus, but it must be for a hooker.\"\n\nI thought about some nameless prostitute getting my quadruple orgasms and a bolt of jealousy tore through me, making it hard for me to concentrate on where I was taking this interrogation.\n\n\"So,\" I began, trying a new line of questions. \"What is it? A pill? Spiked drink?\"\n\nHe shook his head. \"That's what I thought at first. I tried not drinking the wine, but the effect was the same. I told you before; it's magic, there IS no logical explanation.\"\n\n\"Are you trying to tell me,\" I asked, \"that you just go along, have a drink, spin some shit, and then leave with a porn-star cock that just won't quit? Did I miss anything? No shaman with a shrunken head on a stick? Some kind of ritual?\"\n\nHe visibly reared at that last sentence, eyes wide and nostrils flaring.\n\n\"A ritual?\" I said, smiling and leaning forward. \"What kind of ritual? Pentagrams drawn in blood?\"\n\n\"Don't be stupid!\" he spat.\n\n\"Hey, you're the one who said it was magic,\" I defended myself. \"What am I supposed to think?\"\n\n\"The ritual is a story,\" he sighed. \"One of us has to tell a story.\"\n\nI thought about what Evan had said: men telling lewd stories about their salad days. I had imagined guys drinking pints and laughing drunkenly about feeling up some girl's tits on the train. It seemed there was more to this. I nodded for him to continue.\n\n\"One of us tells a story. Penthouse Forum stuff; happy hookers, girl next door, stranger in the hot tub ... that kind of thing.\"\n\n\"And you get a king-size boner and fuck your wife's brains out.\" More of a statement than a question.\n\n\"Well ... pretty much ... yes,\" he agreed.\n\n\"And that's it?\"\n\n\"That's it!\"\n\nI sensed that he was leaving something out, but I didn't really know how to call him on it or ask the right questions to tease it out. Then, a bolt of inspiration hit me and a carnivorous smile spread across my face.\n\n\"I want to go there. You can get me in.\"\n\n<center>Chapter 6 - Johanssen</center>\n\nIf the transient sexual prowess of its members was a mystery, then the library itself was the enigma wrapped in the riddle wrapped in the mystery that was The Winsome Widow gentlemen's club. I was initially charmed by the high shelves stacked with bound volumes; there were no windows and all four walls were completely covered floor to ceiling with bookshelves and a wheeled ladder attached to each wall. In the centre of the room were two Chesterfield sofas and two sumptuous matching armchairs surrounding a long, low coffee table.\n\nAs I looked through the titles, I realised that all or at least most of it was erotica of every kinky fetish the mind could imagine \u2013 and many that my mind would have preferred not to imagine. Much of it was obviously recent, but some volumes caught my eye that seemed quite old indeed. Picking some at random, I saw publishing dates as early as the nineteenth century.\n\nI picked out what looked like a first edition of Lady Chatterley's Lover and smiled inwardly; this must have been placed here a great many years ago for it to be considered erotica. At best, these days, it could be considered a little racy to give to school kids. Looking at the dedication page, there was a handwritten note.\n\n\"For my dearest Connie, please accept this unexpurgated text as a token of my affection and appreciation for the time we shared. David\"\n\nI studied Lady Chatterley at school and could probably have turned unerringly to the consummation scene, although I didn't have to; this volume was so well-thumbed that the book simply fell open at the correct page. I found those old, familiar words so easily:\n\n\"Then with a quiver of exquisite pleasure he touched the warm soft body, and touched her navel for a moment in a kiss.\"\n\nI knew the next line by heart; it should be \"And he had to come in to her at once, to enter the peace on earth of her soft, quiescent body.\" It had always struck me as strange that without even a paragraph break, he went from kissing her naval (which of course maybe wasn't her navel at all) to fucking her, even though the fucking itself lasted a mere sentence; his only excuse for not giving her a proper tonguing was that he was horny.\n\nBut that next sentence was missing. I scanned forwards, my eyes catching on words like \"moist\", \"pink\", and \"loins\". Oh my goodness, he didn't just fuck her for one sentence; he sucked her breasts, he kissed her nipples, traced his tongue down over her fluttering belly to the moist parting between her thighs where he lapped at her heady juices and then entered her first with his tongue until she came and then again with his cock. Holy shit! It went on for four fucking pages!\n\nScanning for other classics, I spotted Dickens' Great Expectations; but knowing how dark it was already with a sadistic school master and young boys, I didn't feel inclined to investigate what unpolished depredations The Winsome Widow may have dug from times that are perhaps best forgotten.\n\nI settled into one of the armchairs with what looked to be a very new collection of short stories about an erotically mischievous Australian girl in a private boarding school. It was wonderfully steamy and before I knew it more than an hour had passed and I felt a lovely tingle in my pussy that I longed to satisfy. I was about to give myself a discreet rub when the door opened; it was Riley, his face beginning to show some of the strain of what I putting him through.\n\n\"It's showtime,\" he said. \"Are you ready?\"\n\nReady for what? I wondered. I had only the vaguest idea of what was about to happen; I knew that someone would tell a sexy story \u2013 hopefully something as hot as the ones I had been reading \u2013 and then a bunch of men would get magically horny and leave in search of some deserving pussy to plunder. But what would happen to me? Would I be immune? Or would I feel the same effect? And if so, how would I satisfy it? Riley was my ride home and a small part of me looked forward to the possibility of luring him into my apartment.\n\nI got up and came over to him, feeling as nervous as he looked. \"Will I be okay?\"\n\n\"If you keep your mouth shut and your jacket on, I think we'll both be okay,\" he said cryptically.\n\n\"You're not going to tell me why I have to wear the tweed jacket, are you?\"\n\n\"Not now,\" he shook his head. \"Maybe afterwards ... if you promise to leave me alone.\"\n\nI felt a little hurt. Satisfaction of my curiosity was coming at a great cost; so far I had hurt Evan and myself and now Riley. I hoped it was going to be worth it.\n\n<center>~~~</center>\n\nRiley led me back out into the sitting room and towards a door I hadn't noticed earlier that was emblazoned with another relief profile of The Winsome Widow carved into its surface. Inside was the most curious table I had ever seen; it was ostensibly round with twelve seats \u2013 as if from some Arthurian legend \u2013 but each place at the table was scalloped \u2013 or cut out \u2013 to create a semi-circular divot into which you could pull your chair, creating a little cocoon between the table and the chair back.\n\nThere were only two free spaces for Riley and me; I felt relieved that they were adjacent; somehow having Riley close was comforting, much as he probably hated me. Looking around, I saw Evan as well as a number of other familiar faces from my investigator's photos.\n\nThe room was dimly lit, but some sconces over the mantle illuminated a large portrait of a kneeling woman. The artist was behind and to the side so only half of her profile was visible, but it was obvious that she was strikingly beautiful and almost certainly the same woman carved into the door. Her delicate nose, glossy chestnut hair and the edges of her lips were about all we could see of her exposed features, but even in her black widow's weeds it was easy to tell that she had a long, sensuous body with full, high breasts and a slim waist curving into a shapely, rounded bottom. Surrounded by grey shapes in soft focus that were clearly headstones; this was without doubt The Winsome Widow herself.\n\nAn old man seated beneath the portrait cleared his throat and, even though nobody had been talking, a deeper hush fell over the gathering as if everybody had stopped breathing. Clearly the oldest in the room, he looked to be at least eighty; Riley himself may have been the next most senior, although he was easily twenty years this man's junior. Looking around, I also noticed that he was the only other one wearing tweed. This must be Johanssen that Evan mentioned earlier.\n\n\"Welcome fellow members,\" his voice was deep and mellifluous, \"and a new guest \u2013 Mr Barrow,\" he nodded at me and I raised a few fingers off the table in acknowledgement. \"Tonight is a special night; I know that many of you were hoping for one of the old stories and I think you won't be disappointed; in many ways, the tale I will tell tonight is in fact the first story told in The Winsome Widow.\"\n\nThere were dutiful murmurs of approval and some of surprise around the table.\n\n\"Our dear friend Mr Waterhouse is now three weeks in the ground. You may not be aware that he and I were two of the founding members of The Winsome Widow over 50 years ago. Now I am the last one. All these years we \u2013 and our co-founder, Richard Bachman, sadly taken years before his time \u2013 have kept The Widow's secrets, but tonight \u2013 my last night,\" gasps of surprise all around, \"I shall share with you all that I know and you eleven will go forward without me as the new founders.\"\n\nI couldn't believe my luck! I had come for secrets and it appeared I was going to get them; in spades! I knew Riley had been holding back on me a little bit, but it was equally clear that he didn't know everything; there was so much at The Winsome Widow that remained a mystery even to him after thirty or so years of membership.\n\n\"Many years hence,\" Johanssen continued, \"only one of you will remain \u2013 perhaps it will be you, Mr Barrow, or you, Mr Farrer; young men both with your lives ahead of you \u2013 and on that day you shall repeat tonight's story for the third founding. It is for this reason that you must all experience tonight's meeting equally, so Mr Barrow, I am afraid I must ask you to remove your jacket.\"\n\nI heard a sharp intake of breath from Riley next to me. I had no idea what this tweed jacket business was about; I knew that Riley wanted me to wear it, and I was coming to the opinion that his purpose was to conceal one of The Widow's secrets from me. Whatever the jacket did, it somehow altered the experience of this storytelling ritual.\n\nNervous nonetheless, my eyes flicked to Johanssen's own tweed jacket. \"I myself shall remain in tweed,\" he answered my unspoken question. \"Tonight I shall remain a passive conduit for the tale, and besides,\" he chuckled in deep and amused tones, \"with my blood pressure, my doctor would ...\" he paused for a moment and smiled wryly, deep lines of age creasing his face, \"... 'pitch a fit,' is the term I believe my grand-daughter would use.\"\n\nI felt a presence behind and to my side; Stevens had silently appeared there for my jacket. God, the man moved like a cat; I hadn't even heard him come in. I stood and allowed him to take my jacket, leaving me just my padded waistcoat over the shirt and tie. I was more conscious than ever of my breasts, swelling and strapped painfully tight under my shirt.\n\n\"I think the tweed waistcoat is a first for The Widow, Mr Barrow. It looks tremendous by the way; I applaud your avant-garde sense of style. What do you think Stevens? Will it matter?\"\n\nI felt a surge of adrenaline and my breath caught in my throat; if I removed the waistcoat and its concealing padding then it would be impossible not to notice the slim curves of my hips and narrow waist. I was so close to discovering secrets kept for over fifty years; to be thwarted now would be to shatter me.\n\n\"I think not, Mr Johanssen,\" Stevens replied.\n\n\"Very well then,\" Johanssen said. \"I'm sure you are the expert on these matters.\" Observing my nervousness he addressed me directly again: \"You needn't be concerned, Mr Barrow. The experience is at worst unsettling, but it is by no means unpleasant.\"\n\nA very quiet \"Hear, hear\" came from across the table, followed by a muted chorus or laughter.\n\n\"Very well; let us begin, for I have several tales to tell. Stevens?\"\n\nThe butler appeared silently once again behind Johanssen's shoulder; he wore a pair of white gloves and was holding a small statue of a woman; or perhaps I should say a goddess, because even in the gloom and from across the table I could feel the raw sexuality of the carved stone.\n\nJohanssen held up his hands in a warding off gesture. \"Not tonight, thank you Stevens,\" he said. \"Just having her on the table will be more than enough for my old heart.\"\n\nStevens offered the statue to the man on Johanssen's left; he cradled it in both hands, facing him as he stroked a thumb across the hair. Passing it on, the next man repeated the ritual, and so on around the table; some handing it on quickly, some gazing at it for a few extra moments. One man who looked about Riley's age \u2013 though not in nearly as good condition \u2013 simply allowed the statue to be passed by his seat, grazing the hair with a finger on the way through.\n\nRiley was not a lingerer; he quickly held, stoked and then passed the statue to me. As it touched my hands, I felt a flood of warmth course though my body, like walking into a shopping centre from the cold and feeling those hot blowers over the door wash away all the shivers of the freezing outdoors. Mechanically, I repeated the ritual I had watched the others perform, but at the same time I was spellbound by the goddess in my hands. Had I said the images of The Winsome Widow were beautiful? Well she paled in comparison to this carving. The goddess was completely naked; her legs were together, so only the faintest suggestion of her sex could be seen between her thighs. I could feel the tiny cleft of her buttocks in the palm of my hand, and my eyes followed the sensuous curves of her hips past the perfection of her flat stomach and into the swell of her breasts; one concealed behind the flowing locks of hair cascading over one shoulder, and the other full and round and topped with a small, upturned nipple.\n\nAs perfect as the goddess's body seemed, it was in her face that the master carver had presented his finest work. Each tiny, delicate feature: her lips, nostrils, dimples; they were perfect in every regard, but the true magic was captured in her expression, for there could be no doubt that the sculptor had rendered her in the throes of a powerful orgasm. With eyes shut, her lips were parted and mouthing some vocalisation of her passion; her head was laid back with the cords of her slim neck standing taut; and although there was no colour, it was almost possible to detect a flush in the exotic texture of her stone cheeks.",
        "\"Alex,\" I heard Riley breathe beside me.\n\nI had held the goddess longer than any of the others but still I felt disinclined to let her go. A powerful machinery inside me had begun to turn over; it had started with the warm flush, but now I could feel my nipples tingling and a wet warmth in my loins. I took one last opportunity to stroke her exposed breast and felt a direct electric connection from her nipple, though my finger, up my arm and down to my sex; I knew that given another thirty seconds with her in my hands that I would come without ever having touched myself.\n\nReluctantly I passed her to my left; almost prising my hands off her slim form, fighting the desire to keep her for myself until the hot promise that had begun to burn in my loins was fulfilled. When finally I released her, I could still feel the connection; it was fading as she moved away from me but still there and tingling in my fingertips. My heart racing, I could hear my own breath coming in gasps and I caught Riley looking at me from the corner of my eye. I watched the goddess as she completed the circle and was placed in the centre of the table, and then I concentrated on controlling my breathing lest it develop into moans that would betray my gender.\n\n<center>~~~</center>\n\n\"It might amuse you to know,\" Johanssen began, \"that The Winsome Widow began not as a storytelling club, but as a Bridge foursome. Of course we did not have the club name at the time, but we met in this very house; Waterhouse, Bachman, myself, and the owner of this building at the time, Mr David Adley.\n\n\"This was in fact Adley's primary residence, one that he shared with his lovely bride, Evelyn. You can see her captivating portrait behind me, so I need not spend too much time describing to you the depth of her allure, except to say that it was surpassed only by the beauty of her soul. To meet her, even a blind man would be smitten by her first word before ever he felt the delight of her touch. As a young man in my twenties, I myself admit to a certain crush; a jealousy on the part of my dear friend Adley, and doubtless the same was true for Waterhouse and Bachman.\n\n\"It will not surprise you to learn that our Bridge night was the last Thursday of each month. It is customary for a Bridge foursome to comprise two couples; however Evelyn had no love for the game and the rest of us were all bachelors at the time. Evelyn would serve us drinks when we arrived, usually attired in some exquisite gown that clung to her perfect curves, and then she would retire, leaving us men to discuss our day before moving into this very room for the card game.\n\n\"Every month we would cycle partners in an unspoken pact to discourage the development of secret signs that would enable cheating during the bidding phase. Waterhouse was by far the most skilful player and would inevitably win when paired with myself or Bachman, however the most closely fought matches came when he was paired with Adley.\n\n\"I don't mean to suggest that Adley was a poor Bridge player; in fact the opposite was true; the man possessed a stunning intellect and a photographic memory that lent him a tremendous advantage in the game. The problem, you see, was in the playful nature of his young wife. We never discussed it but I have no doubt that Waterhouse and Bachman were also aware of Evelyn's presence in the room, even though to this day I do not know whether Adley thought we remained ignorant. \n\n\"You see, after Evelyn had served us drinks, she would retreat to this room and secret herself beneath the tablecloth. With a flair for the dramatic, she would wait until her husband had a hand that compelled him to bid aggressively, and then she would move between his legs and pleasure him, timing her most sensuous stokes with his turn at the bid.\n\n\"As distracting as it was to play cards to the wet sounds of Adley's manhood sliding down the throat of his beautiful wife, not one of us ever challenged him on the matter, such was the erotic allure of the act performed under the innocent veil of a gentlemen's card game. At the end of the evening we three would leave with painful erections and farcically walk in three different directions to one of the many brothels \u2013 illegal in those days, of course \u2013 that dotted the Kings Cross and Potts Point landscape.\n\n\"The conclusion of this part of the tale is, I'm afraid, as predictable as it is true. The timing of our Bridge night on the last Thursday of the month was quite practical for me as my salary at that time was paid in cash on the first day of the month. Not that we played for money, of course, but my visits to local whore houses after Bridge had become rather habit forming and the poor state of my fiscal liquidity by the end of the month was sometimes the encouragement I needed to abstain from the pleasures offered by Kings Cross's superior knocking shops, although I hasten to add that sometimes it simply meant that I would darken the door of one of the less reputable establishments instead.\n\n\"On the night in question, Adley caught me counting my billfold and \u2013 asking me if I was planning a purchase \u2013 I found I was unable to lie and settled for the lesser sin of omission; I told him that I was planning to go out afterwards and was checking that I had sufficient funds, which of course was all entirely true. The Adleys were quite wealthy and for a moment I was afraid that David would embarrass me by offering a loan; I still blush at the thought, not because of the state of my own affairs, but because I thought so lowly of my friend to believe he would do such a thing in the company of others.\n\n\"'Well,' he said cryptically, 'perhaps we can save you some of your money.' At the time I had no idea what he meant, although in the context of my story I suppose that you all have my advantage. Adley seemed inclined not to pursue the conversation and I was more than happy to avoid further discussion regarding my plans after I left his house, so we spoke of other things until it was time to play.\n\n\"Adley always sat in the same place for cards and the rest of us would change positions to make up the pairs; but on this occasion as we entered the drawing room he took the seat opposite, claiming that a change of perspective might bring him a change of luck. As I was to be his partner for the evening, I took his place here beneath the mantle and from opposite me, Adley smiled winningly and tipped me a wink, which of course I did not understand at the time, although I soon would.\n\n<center>~~~</center>\n\nJohanssen paused and looked around the table. \"I feel as though the rest of this story is redundant in its predictability, but for the sake of tradition I will continue. There is much more to come afterwards and perhaps you will find those parts of the tale more interesting.\" He coughed twice into his hand and Stevens materialised as if from nowhere with a glass of water. \n\n\"Thank you, Stevens,\" Johanssen spent a few moments visibly regathering his thoughts as eleven pairs of eyes watched him patiently; predictable as the story may be, his oratory skills were exceptional and I for one wanted for nothing more than to listen to him reveal the secret of the beautiful wife beneath the table and her subsequent pleasuring of the wrong man. \n\nThe anticipation alone was making me tingle and I wasn't the only one; a couple of men took the opportunity to lean forward and touch the stone idol in the middle of the table. With a thrill of excitement, I copied them and once again felt that surge of warmth flood through my body and then contract like a hot sun to a point deep in the core of my womanhood where it burned with erotic heat.\n\n<center>~~~</center>\n\n\"Waterhouse won the contract for the first hand; however Adley and I made the best of our inferior cards and managed to thwart him by a trick. In the hand that followed, Adley opened with a bid of One Club and I was delighted to note that I held the King and Ten in that suit as well as two more spot cards and some high ranking cards in other suits.\n\n\"Bachman raised us to One Heart and I had no hesitation calling Two Clubs in support of Adley's opening bid. In my excitement at winning the opening hand and receiving such promising cards for the second, I had completely forgotten Evelyn's delightfully playful habit of hiding beneath the table; but it came back to me in a forceful rush when I felt a light touch on the inside of each knee, gently forcing my legs apart.\n\n\"Well, gentlemen, here was a conundrum; what to do? I flatter myself to believe that I was thinking clearly at the time \u2013 even though it is likely that my reptile brain took over at the instant of Evelyn's first touch \u2013 but the choices as they presented themselves to me were these: I could expose Evelyn and thereby embarrass her and Adley both, thus jeopardising our friendship (remember gentlemen, this was circa 1960; free love and sex parties were still several years in the future); or I could attempt to silently alert Evelyn to the fact that I was not her husband, which I suppose is what I should have done; or I could savour the moment and allow her to continue and discover for herself, for it seemed probable that she would do exactly that at any moment.\n\n\"Did I make a choice? Really, what choice could I make? This woman had been the subject of so many of my private fantasies and now one of them was playing out as if it was directly fed from my own imagination. Gentlemen, if you think you may have done differently, then I put it to you that you have never had the woman of your dreams kneeling between your legs and slipping her delicate hand into your fly.\n\n\"And this is precisely the situation in which I found myself; to this day \u2013 and I have replayed these moments in my head many times \u2013 I do not have any recollection of Evelyn even unzipping me, nor of her freeing me from my underwear. To my memory, there seems to be no space of time between the moment she opened my legs and the next when she closed her small hand around my shaft.\n\n\"Somehow the bidding continued; I believe that I may have raised one more time, but that was instinct; I was virtually incapable of even seeing the cards in my own hand, let alone counting potential winners or intuiting the likely strength of Adley's hand. With each new bid Evelyn squeezed me, flooding my cock with fresh supplies of blood and bringing me to a degree of hardness that I scarcely believed possible. I slid down in my chair to give her better access and she instantly took it, sliding her fist all the way to the base of my shaft and massaging me with an action more befitting a milking maid than the urban lady that she was.\n\n\"All thoughts of calling some kind of halt to her game were forgotten; either she couldn't tell the difference between cocks in the darkness beneath the table, or \u2013 and at the time I preferred this idea \u2013 she discovered that she was milking the wrong cock too late to do anything about it and good manners forced her to continue to the logical conclusion.\n\n\"Anyway, Adley won the contract for us \u2013 something insane like Four No Trumps \u2013 and play began. It was a mercy that I was the dummy for the hand; I found new respect for my friend that he was capable of playing cards in this condition, because I certainly was not; with my hand face up, I simply played out the cards that Adley called, but I was caught on at least three occasions playing the wrong one. \n\nAs the game progressed, Evelyn introduced her other hand, warmly cupping my balls and gently squeezing them while she massaged that sensitive place behind, all the while stroking with painstaking slowness up and down my shaft, squeezing with alternate fingers until I reflexively strained my cock whereby she would hold it in a death grip at the base, trapping the excess blood flow and making it throb with the painful need for release.\n\n\"With two tricks to play, Adley had the lead but we had already lost the few tricks that we could afford. As he led his second to last card \u2013 the King of Diamonds \u2013 Evelyn picked up her pace, stoking me faster and longer, gripping my balls tighter and rubbing the pre-cum around the tip of my cock with each upstroke. I could feel the gathering climax in my balls and I felt a moment of panic at the mess that I knew I must create. I was entirely at her mercy, either she would make me ejaculate over my trousers, which would make for an embarrassing exit at the close of the evening; or she would allow me to cum all over her; and gentlemen, I don't mind telling you that the mental image of the exquisite Mrs Adley crouched beneath the table in her evening gown with my cock in her hands while she sprayed my seed over her beautiful face tipped me over the edge.\n\n\"Adley collected the penultimate trick and played the Jack of Diamonds, which Bachman could not follow and nor could I; but as I played my card, my balls swelled massively, causing me crab forwards in my chair and shoot my card across the table. As Adley retrieved it and placed it on the trick, I felt Evelyn's soft, painted lips close around the head of my cock, and as she sucked me smoothly and deeply in the warm, heavenly recesses of her mouth, my balls released and I pumped what felt like one long continuous stream of cum into her throat. I groaned with the release in chorus with Adley right as Waterhouse played the winning Queen, thereby depriving us of the contract, and then I sat back reeling with the ecstasy of Evelyn's fingers and tongue milking the last few drops of spunk from my wilting member.\n\n<center>~~~</center>\n\nThe story was so wonderfully vivid; as a woman I was relating to the actions of Evelyn rather than those of the young Johanssen, but even so, as he told the tale I felt my legs open involuntarily as if unseen hands forced them apart and felt my clitoris burn with imagined contact of my own secret lover beneath the table.\n\nJohanssen paused for another sip of water and I took the opportunity to reach for the idol once again. I was fully aroused by this time and felt my own secretions freely lubricating my pussy lips and they rubbed together deliciously as I moved in my seat. Grasping the goddess tightly in one hand, I pressed the perfect curve of her buttocks into my palm and stroked my thumb over her flat stomach, up and down, touching the underside of her exposed breast as rivers of fire coursed up my arm and directly down into my sex, sending fresh floods of juices welling from my opening.\n\nThe burning in my pussy was building to an unbearable level and I almost dropped the idol, causing it to wobble on the table as I sat back, my back arching as I writhed against my chair, loving the gentle abrasion of my wet panties against the engorged, open folds of my pussy.\n\nMy mind was spinning; after the extraordinary sex with Evan and then Riley's assertions of magic at work in The Winsome Widow, I was already half convinced that there was some supernatural power at work even before I arrived at the club. Any residual doubts I may have harboured were fully dispelled when I first touched the idol, and by this point in Johanssen's tale I was a complete convert. It was plain to me that some unearthly force was acting through the idol, but exactly what was it doing? It was as though it was amplifying the story and beaming it directly into my brain, bypassing my ears. In a strange way, it seemed that I was feeling what Johanssen felt, but as a woman I had no frame of reference for the sensations he described in his cock, and as a result they were imperfectly translated.\n\nJohanssen continued with the story.\n\n<center>~~~ </center>\n\n\"If I ever believed the fantasy of mistaken identity then Evelyn quickly dispelled it by continuing her game just as Bachman shuffled the cards and continued ours. Releasing my limp cock from her mouth, she moved backwards and untied my right shoe, removing both it and my sock to leave me barefoot. Guiding me with a firm hand, she crossed my legs at the knee and then with a whisper of satin I felt her mount my raised right foot and press the wet warmth of her womanhood into my instep. She raised my trouser leg and \u2013 closing her arms around my calf \u2013 she hugged me close and I felt the swell of her naked breasts first open around my knee and then envelop me in their soft warmth as she squeezed them between her arms. Slowly pumping her hips, she rubbed her steaming slit up and down the length of my foot, grinding and writhing and forcing her outer labia to peel open against the hard knob of bone on the top of my foot.\n\n\"Flexing my leg, I kicked up, lifting her knees off the floor as she buried her face in the meat of my thigh to stifle a scream. I bounced her like this, eight, ten, a dozen times, and felt her copious juices running down my foot and coating my toes, and so I wiggled them just to feel the erotic essence of her sex sliding between them. Although not my intention, I felt my great toe slide frictionlessly between the cheeks of her ass and she stiffened and froze in her wanton fucking of my foot. Thinking that I had overstepped the parameters of this encounter, I removed my toe only to have Evelyn buck angrily against my leg, squeezing my calf in frustration.\n\n\"Experimentally, I slid my toe back between her firm cheeks and sat in stunned wonder, playing random cards on random tricks while she ground on the tip of my toe (the nail trimmed mercifully short) until she brought me to the opening of her asshole. Before I knew what she was doing, she slipped me effortlessly into her back passage and then, incredibly, gave me the 'giddy up' gesture by pumping her hips and squeezing her thighs around my foot.\n\n\"I resumed bouncing her and lifting her off the floor until I felt her stiffening against my leg, arching and straining and pushing my toe deeper into her tight ass as she ground her soaking pussy against my foot. A moment later and Evelyn clenched her sphincter and her thighs and bucked against my knee in the throes of orgasm as I felt her ejaculate in a warm flood over my foot. Sliding me gently out of her ass, she opened my thighs again and slowly and lovingly, she kissed and sucked my cock back to life.\n\n<center>~~~</center>\n\nI related more closely to the story of Evelyn pleasuring herself, and I found that as Johanssen described each part of the story, I was able to follow along in my imagination, channelling the power of the idol so that I actually felt my own pussy lips peeling back and the instep of an unseen stranger's foot gliding effortlessly up and down my steaming slit.\n\nI recoiled as he came to the part about the anal toe-fucking \u2013 I have never felt an attraction for anal sex \u2013 but it was as though I could feel Evelyn's pleasure and experience her need, and as she brought his toe to her tight rear entrance, the moment overcame me; I relaxed my muscles and felt a delicious fullness enter my virgin ass.\n\nWith that wriggling digit tickling my sensitive little back door and the hard saddle of an imaginary foot opening my aching lips, I allowed Evelyn's spirit to take me completely; I felt her orgasm building in my own core and as she climaxed, so did I; my own come gushing from my hot, open cunt and running down my thighs.\n\nIt was all I could do not to scream; holding my breath and pinching my eyes closed; I just held on and waited for the fiery eruptions in my core to subside until I could draw a shaky breath again with some measure of control.\n\nOpening my eyes, I carefully scanned around to check who had seen me come, but everyone was listening in rapt attention as Johanssen described Evelyn's second round of cock-sucking. With some trepidation, I reached beneath the table to see how much of a mess I had made of my trousers and I could scarcely believe what I found; nothing! Just some wetness from my earlier secretions on my panties, but no ejaculation, even though I had felt it gushing down my thighs in a flood.",
        "The other thing I noticed as I touched myself was that I was still insatiably horny; my orgasm hadn't quelled any of my need; if anything it had made me more desperate. The truth dawned on me with stunning clarity; I hadn't come at all, perhaps through the power of the idol I had actually experienced Evelyn's orgasm rather than my own.\n\nI began putting together what little I knew of the idol's power. Firstly, it made you indescribably horny and oversexed; undoubtedly it was this effect that explained Evan's and Riley's post-club sexual energy. Secondly, it channelled sexual sensation \u2013 or at least the recollection of that sensation \u2013 from one person to another; this explained how I was able to feel some of Johanssen's recalled feelings. I likened the sensation to picking up a radio signal, and in my case, the signal I picked up from Johanssen was filled with static because I was a woman.\n\nThe real mystery is how I felt Evelyn's orgasm. It could have been my own imagination building an orgasm from Johanssen's description \u2013 and maybe I was mistaken about the ejaculation that I felt \u2013 but that didn't feel right; as real as the climax felt, it just didn't feel like mine. But if not mine, then whose? In a room full of men, where was the woman whose orgasm I tuned in to?\n\n<center>Chapter 7 \u2013 Evelyn</center>\n\n\"Aleeeeeeeeex.\"\n\nI looked around, startled from my contemplation of the idol by the voice, a female voice, whispering my name; soft, sweet and enticing.\n\n\"Aleeeeeeeeex. Come to me.\"\n\nBreathy and sexy, it seemed directionless; all I knew for sure was that it wasn't any of the men around the table calling me; they couldn't even hear it; they all remained absorbed in Johanssen's narrative. He had closed out his Bridge night adventure with Evelyn and was now explaining how Adley had confided his wife's love of erotic fiction and how their Bridge night had slowly morphed into Storytelling Night; where the men would take turns to tell an erotic story while Evelyn hid beneath the table, eavesdropping and voting on the quality of the stories with her hands and her lips.\n\n \"Use the idol, Aleeeeeeeeex. Come to me.\"\n\nThat disembodied voice should have been terrifying, but it felt calming, even soothing. I wanted to ask its owner where she was but clearly I was the only one who could hear her, and speaking up \u2013 especially in my own voice \u2013 would definitely NOT go unnoticed around the table.\n\nFollowing her instructions, I leaned over to touch the idol and felt that familiar erotic warmth once again flooding up my arm; I tipped my head back, nostrils flared, revelling in the ecstasy that buzzed through my body.\n\nI leaned harder against the table and with a weightless, roller-coaster lurch, it became insubstantial beneath me and I ... slipped ... that's the only way I can think to describe it; I slipped INTO the table; it's oaken surface penetrating the middle of my stomach, painless and bloodless. With the ghostly table now no longer responding to my touch, I threw out both hands to arrest my slide and they both passed through its surface as if through smoke; and with nothing to hold me up, I spilled forwards and fell to the floor with a sickening sense of vertigo as the table passed harmlessly through my head.\n\n\"Hello Alex.\"\n\nDisoriented and gasping with fright, I cast about with wild eyes so see a young woman with chestnut hair kneeling next to me in a long evening gown. Her full, ripe breasts; the slim curve of her waist; her tiny, round bottom perched on her heels; all were all lovingly outlined in sleek, clinging, black satin. With delicate features and glowing, flawless skin, she was every bit as beautiful as Johanssen had described.\n\n\"Hello Evelyn,\" I smiled, making the connection instantly and sounding far more casually accepting than I felt.\n\nI expected some kind of response from the men; if not to my dramatic fall through the table, then at least to the sound of my voice \u2013 my woman's voice \u2013 from beneath the table. Staring into Evelyn's luminous eyes, I listened to Johanssen's deep, sonorous tones as he described yet another sexy tryst with the woman kneeling beside me. Were they so absorbed that they hadn't noticed?\n\nThe impossibility of the moment was breaking into my thoughts; my eyes saw a beautiful woman, surely no older than thirty-five and radiant with youth; but my ears listened to the story of her deeds; adventures of more than fifty years ago.\n\n\"Who ...?\" I began, unsure what I was asking. Who was she? I didn't need that one answered; I knew this was Evelyn; I could feel it. But how could she be so young, so beautiful?\n\nShe understood my question with the same intuition that told me the truth of who she was, and by way of an answer, she passed a hand in front of her face; her image shimmered like a heat haze and for a moment I saw the features of an old woman, still beautiful in a stately, elegant way; but with deep lines down her cheeks and around her eyes, her glorious hair still long and vibrant but now silver rather than the glossy chestnut of her youth.\n\nThe shimmering image stabilised and she was young again and full of radiant life. In the darkness beneath the table, the legs of those seated around us were all colourless shadows; but Evelyn was vibrant with soft, milky skin and red painted lips; she simply shone; not a luminous inner glow like a ghost in a movie, but as if from an external light source that didn't exist. The table legs and the pattern in the carpet beneath her were shrouded in gloom, but Evelyn was just ... simply ... visible!\n\nLooking around at the unbroken circle of chairs and legs, some important piece of information was trying to assert itself on my consciousness, but it was like a word on the tip of your tongue that you just can't remember. I cast about again, trying to orient myself; which seat was mine? \n\nGot it! There are NO EMPTY SEATS! Holy fuck, I'm a ghost! Am I dead?\n\nI turned back to Evelyn with a constricting feeling of panic building in my chest. \"Where am I?\"\n\nIt was another stupid question, but as before, she understood my meaning as though telepathically and in answer, she reached out to touch the person behind my left shoulder. As she did, I felt a soft hand close around my own calf and gently squeeze the muscle there. I jerked my leg in fright, but the sensation persisted even though I could see that there was nothing touching me.\n\nOh my God! That's my chair! Those are my legs!\n\nThe figure in the chair was me and Evelyn was stroking my real body; the ME beneath the table was just my consciousness, and studying my body more closely, I saw that I glowed with the same light as Evelyn. I felt my face; the fake beard and eyeglasses were gone; I was no longer dressed in a man's suit and tie but in the pencil skirt and blouse I had worn to work earlier that day. And joy of joys; I was wearing a comfortable bra instead of that painful strapping to hide the swell of my breasts.\n\nI watched as Evelyn stroked higher on the motionless form at the table and I shivered as the soft sensation of her touch crept invisibly past my knee and under my skirt. I had only ever been mildly curious about the idea of intimacy with another woman, but my heightened arousal combined with the sublime beauty of the woman stroking her way slowly up my thigh washed away any reluctance I might have felt. She paused and looked into my eyes questioningly; as if asking whether I wanted this. My tongue darted out to lick my dry lips and with a breathless nod I parted my legs and bid her to continue.\n\nThe ghostly eroticism was captivating; I was watching Evelyn touch the form in the chair (I couldn't yet think of that person as me); but to feel her every touch on my own thighs whilst crouched beside her left me dizzy with passion and mounting desire.\n\nI held my breath as she moved her thumb to the junction between seated Alex's thighs, and then gasped with mingled disbelief and passion as her ghostly fingers passed straight through the trousers and panties to touch the wet entrance of her (my?) womanhood.\n\nI couldn't see what Evelyn was doing with her hand, but I could feel the effects as she stroked the tip of her thumb slowly through my steaming slit, avoiding direct contact with my clitoris for the moment as she teased apart my soft inner folds with her thumb tip.\n\nEntranced by the vision of Evelyn's fingers disappearing into the crotch of my real-self's trousers, I moved towards her; partly for a better look at that impossible sight, and partly just to be closer; like the idol on the table, Evelyn was radiating a magnetic eroticism that made you want to reach out and touch her. \n\nI was slowly coming to terms with my dual nature. Being curious, I reached to touch real-Alex's knee only to watch agog as my ghostly hand passed straight through her real flesh without touching. \n\n\"Concentrate,\" Evelyn whispered in my ear, taking my hand in hers. \"You can do it, but you need to focus on what you want to touch.\" She interlocked fingers with me and placed our joined palms over the top of real-Alex's pants leg, stroking softly so that I could feel that ghostly touch beneath my skirt, even though it was only Evelyn's hand I could feel and not my own.\n\n\"Focus on your hand, Alex,\" she breathed in my ear; then she softly brushed her lips against mine, both of us gasping lightly at the moment of contact.\n\nLike a fluorescent light flickering on, I felt the suit trousers beneath my hand gain substance while a new sensation materialised on my knee down at floor level. To say it felt surreal is a huge understatement; the only remotely comparable experience is when your touch yourself with a hand that has gone to sleep from a lack of blood flow. When that happens, you can see the contact but only feel half of it; but in this case I expected to feel half of the contact but instead I felt all of it. My mind was still reeling but now I felt the connection with the seated woman; she really was me!\n\nI was surprised at the feelings that my own foreign touch aroused; it was so intimate, mystical ... it was SO FUCKING EROTIC! I felt Evelyn toying at my entrance again with her free hand and untwined our fingers, moving up that seated girl's thigh to meet her, only to be thwarted by the trousers that Evelyn's hand was able to magically pass through.\n\nOur cheeks were almost touching. \"Show me,\" I breathed, knowing she would understand without an explanation.\n\nPlacing her free hand over mine once again, she drew it back down the seated woman's thigh and then \u2013 with her fingers slightly ahead of mine \u2013 she slid slowly forwards again, her fingertips disappearing beneath the fabric as I felt the delicious skin-on-skin touch slide up my kneeling leg towards my pussy.\n\n\"Let yourself go....\" she whispered in my ear, and then as she took the lobe between her lips in a soft kiss, I felt my own hand melt through the trouser leg to glide along my real self's smooth thigh. The sensation was beyond any earthly experience, certainly beyond masturbation, to have another body so utterly at your mercy, but to have your every touch reflected back at you; the erotic possibilities were beyond my power to resist.\n\n\"Why do dogs lick their privates?\" The old joke goes. \"Because they CAN! Har, har har!\" It was years after I first heard that one as a child that I finally understood it, but now I saw the deeper truth; we masturbate with our hands because that's all we CAN use. Another image entered my mind; a pornographic picture I saw on the internet of a gymnast \u2013 a contortionist, I suppose \u2013 naked and balanced on her hands with her body curled over her head so that she could pleasure herself with her tongue. I remember looking at that photo jealously, wondering what it would feel like to lick myself and to come on my own face. \n\nEvelyn sensed my need and backed away, allowing me to move forwards and kneel between that seated woman's open legs, my hands on her thighs stroking the fluttering muscles up towards her sex. Disconcerted by the sight of my eerily lit, ghostly hands passing through the fabric of her trousers, I closed my eyes and going by feel alone the mental vision was complete; I imagined this as a threesome, with me pleasuring the seated Alex while a third person lay between my open legs copying my actions stroke for stroke.\n\nBeyond foreplay now, I made my hand into a gun and slid first one and then two fingers into the tight embrace of my pussy, stretching my opening with a delicious ripple of parting muscles as I drove all the way in to the webbing between my fingers. The feeling was electric; as much as I love to use my fingers on myself, it's all but impossible to get the angle necessary for a deep penetration without uncomfortably twisting your wrist. But this? I stroked effortlessly in and out of my soaking hole, building up a rhythm and fucking myself harder and faster as my confidence grew. Adding a third finger I pushed hard, roughly stretching my cunt wider, teasing the hard nub of my clitoris with the tip of my thumb as each stroke bottomed out on my engorged, swollen pussy lips.\n\nThe feeling of that ghostly hand between my crouching legs, mercilessly stretching my poor pussy open beneath the sheer nylon of my panties, was bringing me closer and closer to a climax as it pounded into my wanton sex. I didn't want to finish until I had felt everything this experience had to offer, so with an animal cry of passion, I pulled my dripping fingers from my slit and immediately dove back in with my tongue, tasting my naked essence at its source for the first time.\n\nThat heady, womanly taste in my mouth and the wild, exploring ghost tongue in my pussy brought me to the brink of climax. Teetering at the edge- ah, ah, ah, like a sneeze that just won't come - I strained forwards with my tongue, trying to go deeper and feeling a brief pang of guilt for lovers past whom I had silently condemned for similar shortcomings.\n\n\"Free yourself, Aleeeeeeeeex,\" Evelyn's voice came from beneath me, between my legs where the ghost of my loving tongue had my pussy lips splayed wide open beneath my panties. \"Don't be constrained by your physical body.\"\n\nAnd then with an explosion of pleasure I felt her suck my clitoris between her lips, teasing it with her tongue, the sensation overlayed the tongue-fucking I was giving to myself and delivered a magical doubling of the ecstasy in my sex as I quivered madly on the brink of release. As before, where Evelyn's erotic kiss had given me the power to control my astral state, with her lips on my love button I strained forward again and my tongue simply ... GREW! \n\nOh, good lord, it felt like a giraffe tongue; long and thick and prehensile, driving into my core, probing and searching every corner of my womanhood, stretching and licking and filling me up with its thick heat until I was sure I would burst. And then I did. With Evelyn between my legs compressing my clit and my pussy straining to contain my throbbing, licking, magical tongue; my orgasm finally erupted with an explosive release that pounded out from my pussy and set my nerve endings ringing with the shock wave. For a moment I felt a flood spilling down my chin, but by the time I had reeled in my tongue my face was dry, despite the fact that I could still taste the sweet essence of my sex.\n\n<center>Chapter 8 \u2013 The Winsome Widow</center>\n\n\"You need to listen to this,\" Evelyn whispered. \n\nWe knelt together and listened; Johanssen was still telling a story and even though I hadn't been concentrating, I still understood where he was up to; perhaps the seated Alex who just got the tongue-fucking of her life had been listening on my behalf. \n\nHe was re-telling David Adley's tale of the stone idol; he and Evelyn had honeymooned in South America and sought out a local mystic \u2013 a witch woman, the locals claimed \u2013 who was said to dispense aphrodisiacs. Just married and still discovering the joys of sex, the couple were enchanted by the idea and sought out the old woman, keen to try any concoction that might allow them to fuck all night.\n\nAs Johanssen told the story, Evelyn took my hand and I saw it all with the perfect clarity of her recollection.\n\n<center>~~~ </center>\n\nUpon crossing her palm with the requisite silver, the crone produced a leaden box containing the stone idol and allowed David to hold it, instructing him to cradle her in his palm and stroke her hair with his thumb. Just to be near it, Evelyn felt its power and reached out to touch it with her husband.\n\n\"Noooooo!\" croaked the witch woman. \"This magic is for men; not for the likes of us.\" Grasping Evelyn's wrist in her claw, she moved the young bride away from the idol while David continued to absorb its erotic energy. \"The goddess, she turns the man into a stallion.\" The witch closed her gnarled fist and brandished her bony forearm, just in case there was any doubt as to which feature of a stallion bore the most relevance to her metaphor.\n\n\"But the woman,\" she hissed, her ancient eyes twinkling with dark knowledge \"she become a ...\" and then she paused, looking for the right word. \"I do not know the English; she become EQUITADOR; it is cowboy, but not the same ...she become the master of the horses. She control them.\"\n\n<center>~~~</center>\n\n\"That first night,\" Evelyn said, her eyes moist with fond recollection, \"oh, the things we did, Alex. It was wonderful and frightening and by morning neither of us could bear to face the future with that experience forever in our past.\" She took my hand in both of hers, as if pleading with me to understand. \"David went back to the woman; God knows what he paid but he returned with the idol, and that's how we ... that's how I come to have it now.\"\n\nMy head was still spinning with questions; but it was also spinning with unsated lust; the release from my astral-orgasm was only transitory and in a moment I was insatiably horny again. No wonder the men came home from The Widow every month with their cocks bursting from their pants; even if they experience one of those ghostly orgasms, they're still horny and ready to go all over again; it's only the real sex away from the idol that gives them any lasting release.\n\nI tried putting together what I had learned:\n\nFact number one: like the \"me\" beneath the table, the Evelyn I could see was not the real one; she was an astral projection. Where was the real Evelyn? Probably somewhere in the house.\n\nNumber two: Evelyn owned the house and the idol. Did the others know she even existed? My private investigator didn't find out about her \u2013 and Johanssen mentioned her in a very \"past-tense\" fashion \u2013 so probably not.\n\nThree: Evelyn was responsible for dishing out at least some of the pleasure around the table; although some of it also seemed to be radio signals broadcast among the men.\n\nThe men ... THE MEN... That's the bit I didn't get. Why did we have these seemingly God-like abilities to manipulate our astral forms while the men were just cattle? Wait ... No! Not cattle, what had the witch said? Stallions! Their time was still to come; after they had fuelled up on the idol's mysterious power they would go forth and pour it out with a vengeance into the nearest waiting pussy.\n\n\"What did she mean?\" I asked Evelyn. \"Equi...?\"\n\n\"Equitador,\" Evelyn said gravely. \"Master of the horses.\" She seemed to consider her explanation for a moment, and then: \"Maybe it's easier to show you.\"\n\nTurning to one of the pairs of legs around the table, she held out her hand and with a look of concentration on her face, she made a beckoning gesture, like a stage magician drawing some object across the table. \n\nAfter everything that had happened so far, I didn't think that I could be surprised anymore; but my jaw fell as I watched Evan's astral form stream from his seated body and reform in front of Evelyn, completely naked.",
        "\"Evan!\" I gasped, my hand over my mouth with shock and a ridiculous (considering the circumstances) fear of discovery, sitting as I was beneath the table with no disguise. But oddly, he didn't even look at me; he just knelt there, his cock thick and hard and pulsing with promising intent, calmly looking at Evelyn.\n\n\"Evan?\" I snapped my fingers at him, but he still ignored me.\n\n\"He won't respond to you in this state,\" Evelyn said. \"He's mine alone for now, although afterwards he won't remember me, just the feelings we share.\" I watched jealously as Evelyn beckoned with her hand again and Evan leaned down and kissed her softly, matching her movements as she opened her mouth to him. Without breaking the kiss, she took his erect cock in her hand and slowly lay back on the floor, drawing him along with her.\n\nEvelyn lifted her knees and the black satin swam down the length of her thighs to pool at her waist. I saw a flash of panties and then with a tiny flourish of her free hand they disappeared as Evelyn brought the thick head of Evan's cock to her entrance; touching it once, twice to her pussy lips to part them, her juices glistening on his throbbing purple head. With a third touch to her open sex, she seated him in her steaming hole and released his shaft, and then clasping both hands around his backside, she drew him into her, gasping and voicing a low moan as Evan's thick, pulsing rod glided all the way to the hilt in a single, fluid movement.\n\nTouching down softly on her smooth, shaved labia, Evan pulled most of the way out and thrust gently back inside, withdrawing once again at the gentlest of touches of his hard pubis against her softly glowing pussy lips. I could tell from Evelyn's mounting cries at the bottom of each stroke that his cock head was probing her cervix, breathlessly teasing her to a higher state of arousal.\n\nMy jealousy of Evelyn taking my ex boyfriend \u2013 the man I still loved \u2013 had melted away instantly with the erotic joy of voyeurism. I had never watched a couple having sex before and was surprised at how erotic it felt. Spellbound, I gaped at Evelyn's tiny opening stretched rudely around Evan's thick manhood; her pink folds rippling over the bulging veins and ridges that glistened with her juices. At the top of every stroke I could see Evelyn's opening contract as she flexed her muscles; closing up her soft sheath and holding it tight for Evan's iron manhood to open anew with the next thrust.\n\nWithout thinking what I was doing, I moved behind Evan and closed my arms around his broad chest, hugging him to my breasts and resting my chin on his shoulder. With an extra squeeze, I felt the power of the idol coursing through me and joining us; first mentally, as I channelled his manly lust, and then physically as with another dizzy lurch my body melted and merged into his.\n\nI could feel Evan in there with me; we both heard Evelyn's soft cries as she approached orgasm and we both felt the hot paradise of her love canal squeezing down on his cock; but it was me in the driver's seat for now.\n\nAnd oh, the ecstasy! Evelyn's wonderful heat tightly gripping what felt like a billion nerve endings in his cock ... MY cock, making them sing in a harmony of lust; the sublime friction as I pulled out of that silken sheath and the feeling of conquest as I drove back in, touching down on her cervix and making her cry out in mounting desire; it was so raw and powerful and animal and utterly unlike a woman's experience of being fucked.\n\nStill fucking her slowly and deeply, I brushed the gown's strap off her shoulder and pulled down the bodice to expose a full and perfect breast; I kissed around the nipple, feeling goose bumps rise beneath my lips, and then gently sucked her nipple into my mouth, compressing and nibbling the tip to Evelyn's obvious delight as she ran her hands up my powerful body and twined her long fingers though my hair.\n\n\"I'm ready, my love,\" she gasped, her back arching and legs quivering with the galloping approach of her climax. I felt Evan's cock swell to the sound his lover's voice and he took back some of my control with a low, animal grunt; pushing into her more forcefully and mashing his pubis into her delicate labia. Oh my goodness; now THIS is fucking! With thrusting hips we drove Evan's eight inches into her tiny, tight canal; his knob pounding mercilessly into her cervix and his balls now coated with glistening pussy juice and slapping wetly against the tight cheeks of her ass as he (we?) lifted her off the floor with the sheer force of the impact on her poor, battered pussy lips.\n\nEvelyn quivered and finally came, her mouth open in a silent scream as she wrapped her heels around Evan's muscular thighs; fighting against his final thrusts and greedily trying to keep his cock deep inside her as she shook with the intensity of her climax. His breath coming in ragged gasps, Evan jerked and strained forwards, his thick glowing muscles twitching along his arms and down his back; and then with a cry he was coming \u2013 WE were coming \u2013 too. Like a trough before a powerful wave I felt his balls contract up towards the base of his cock, and then bulge outwards again as he delivered thick ropes of creamy seed deep into the hot core of Evelyn's womanhood. With her own climax winding down, Evelyn softened against him and released her locked heels from behind his thighs, allowing me to stroke Evan's cock slowly in and out, basking in the fading heat of our coupling as the combined juices of our lovemaking pumped weakly out around our junction and coated Evelyn's glowing labia in a sticky, beautiful mess.\n\n<center>~~~</center>\n\nEvelyn dismissed Evan with a wave and his astral form melted back into the physical body sitting at the table, leaving us together in a lovers' embrace with me back in my own astral body again.\n\nShe smiled at me without the least sign of self-consciousness. \"Do you want to try now?\" she began.\n\n\"God, yes!\" I breathed. The thought of sex without consequences was too delicious not to try. \"How do I do it?\"\n\n\"Just concentrate on the one you want,\" she said, pulling her evening gown back down over her thighs. \"And then take him.\"\n\nShe made it sound so easy. We disengaged and \u2013 sitting up \u2013 I concentrated on the chair facing me, raising my hand in the same beckoning gesture as Evelyn had used.\n\n\"No!\" she cried desperately, grabbing my wrist and pulling it away. \"Not that one! We never take the men in tweed!\"\n\nAha! This made perfect sense; the guys who wanted a more sedate evening at The Winsome Widow wore a tweed jacket as a signal to Evelyn to leave them alone. That's why Riley wanted me in tweed! He didn't want me to get the deluxe treatment. Little did he know that Evelyn couldn't be fooled, she knew from the outset that there was a woman at the table.\n\nNow that it was pointed out, I could see the tweed flaps of Johanssen's jacket hanging by his hips and looking at Evelyn I saw a deep sadness in her eyes.\n\n\"What is it?\" I asked with genuine concern.\n\n\"It was David,\" she whispered sadly. \"He was wearing a tweed jacket when I ... when he...\"\n\nShe touched my hand and I felt that electric transfer of knowledge as she had done earlier; I saw Evelyn using her astral form to pleasure her husband and his friends; David begging off early and going to bed, rubbing his chest; and then Evelyn crying out in the night, holding her husband's lifeless form in their marital bed.\n\nOh my goodness, the poor woman. After all these years she blames herself for her husband's death, which was doubtless nothing more than a heart attack; very probably a defect that could have erupted at any time.\n\nShe took both of my hands in hers and leaned her head close to mine, kissing me softly on the corner of my mouth. \"Don't favour just one,\" she said. \"Use them equally ... and be careful.\" And with a final kiss, her image faded and disappeared.\n\nAlone now beneath the table, I paused for a few minutes to tune back into the end of Johanssen's story \u2013 actually it was Adley's story \u2013 about the origins of the idol and their use of it in the house that was to become The Winsome Widow.\n\nIt was becoming clear from the narrative that the men really were like cattle; they had no idea of its true power. Johanssen knew of Adley's death, but were ignorant of Evelyn's continued presence in the house; as far as he knew, she disappeared weeks after her husband's death and the evergreen Stevens appeared as administrator of the Adley Family Trust ... the very same Stevens who still appears to be a young man after all these years. Another mystery!\n\nMy libido was decidedly cooler after learning of Evelyn's tragic loss and the thought of all the years she had spent as a widow. As tempted as I was to summon one of the men to fuck me \u2013 hell, I was tempted to summon all of them for a gangbang \u2013 I resisted and like Evelyn, I felt myself fade and rejoin my physical body at the table just as Johanssen was winding up the story.\n\n<center>~~~</center>\n\n\"And there you have it gentlemen: the known history of The Winsome Widow, as incomplete as it is.\" Johanssen sipped his water and looked around the table with a knowing smile. \"Mr Farrer, I perceive that The Widow has been kind to you tonight; perhaps you can add an extra chapter when you re-tell the story fifty years from now.\" He turned his gaze to me and I acknowledged him with a nod and a smile. \"Mr Barrow. I trust that you are past any earlier misgivings. Your maiden visit wasn't too unsettling, I hope?\"\n\n\"Fine, thank you,\" I croaked, covering my mouth. There were a few sniggers around the table from men mistaking my disguised voice for a kind of overwhelmed surprise.\n\n\"Well then,\" he continued. \"I think that is all I can tell you. I'm quite certain I shan't see The Winsome Widow again. I fear that I am not too far behind poor Waterhouse; so gentlemen, when my time comes, I hope you will all drink to my memory and continue to enjoy The Winsome Widow's many mysteries.\"\n\n<center>~~~</center>\n\nOn our way out, Stevens appeared at the door with our jackets and coats, dressing each of us in turn and farewelling us with a formal \"Goodnight.\"\n\nStevens held out my tweed jacket and I turned my back to him to slip it on. I was just thinking to myself how very visible he looked in the dim lighting of the vestibule and then he leaned in close to whisper in my ear. \"Thank you Alex; it was lovely to have company.\"\n\n\"Ev...?\" I almost blurted her name but managed to stop myself as Stevens tipped me a wink.\n\n\"Goodnight, Mr Barrow,\" he said in his usual manly voice.\n\nI nodded politely in response, too surprised to make an attempt at my own man's voice.\n\nEvan walked past me as I waited for Riley and I instinctively reached out to touch his elbow as he passed.\n\n\"I beg your pardon?\" he asked politely as he turned around. \"Did you say something?\"\n\n\"No,\" I husked, shaking my head and suppressing a smile.\n\n\"Huh! Could have sworn I heard a voice,\" he said, mostly to himself.\n\n<center>~~~</center>\n\nRiley dropped me off at my apartment. He wanted to come up \u2013 and I knew why, part of me wanted it too \u2013 but I sent him home to his wife with an apology; hopefully it would save me my job.\n\nStanding in front of the mirror, I peeled off my beard and my wig, unpinned my hair, unwound the strapping to release my poor, aching breasts, and finally became a woman again.\n\nI heard the doorbell ring as I stepped out of the shower and shrugged into my robe to answer the door.\n\n\"Alex, I ... I don't know what I'm doing here.\"\n\n\"I called you, honey,\" I smiled. \"Don't you remember?\"\n\n\"I've been to the club tonight,\" he said, his face still a mask of confusion. \"I remember leaving ... and then suddenly I was here. Are we still fighting?\"\n\n\"Don't be silly,\" I said, taking his hand and leading him inside. \"You don't need to tell me about the club. Just love me.\" I took him into my arms and we kissed, slow and deep; and with a snap of my fingers our clothes all fell in a heap on the floor. Oh, I could get used to this!\n\n<center>Epilogue</center>\n\n\"Alex Wheeler?\"\n\n\"Who's asking?\" I said; the man at my door wasn't someone I recognised. He looked a bit like a lawyer and countless episodes of TV legal dramas had instilled an irrational caution against the possibility of being subpoenaed, regardless of how unlikely that was to ever happen to me.\n\n\"My name is Hugh Riversdale,\" he said, producing a card. \"I'm the executor of Evelyn Adley's will.\"\n\n\"Oh?\" I didn't know what to say. \"Yes, I'm Alex Wheeler.\" Now I was really curious. \"I only met Evelyn once. I didn't even know she died.\"\n\n\"Ms Wheeler, I have some exciting news for you,\" he explained, brandishing a manila folder of papers. Geez, this guy really missed his calling as a grief counsellor! \"You have been appointed sole trustee of the Adley Family Trust.\"\n\nI think my mouth was hanging open.\n\n\"What?\"\n\n\"It entails a generous salary and a private residence in Potts Point,\" he smiled. \"There are a few conditions regarding the use of the residence, but it's only once a month; I don't think you'll find it too onerous.\"\n\n\"Evan!\" I called, turning around with a smile. \"I have some good news!\""
    ],
    "authorname": "blin18",
    "tags": [
        "light bondage",
        "magic",
        "bisexual female",
        "female masturbation",
        "lingerie",
        "seduction",
        "fantasy"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-winsome-widow"
}