{
    "title": "Ten Tips for the New Prostitute",
    "pages": [
        "Note: this website does not encourage illegal activity. Prostitution is legal in some jurisdictions. Please check your local laws.\n\n*\n\nEvery so often I get a note from someone, asking me how to get into the \"business\". It usually comes from a girl, late-teens, and I don't think the message is necessarily sincere, but it comes from a matter of intrigue. Unless they have the King James Version in hand, almost universally, people are intrigued by what I do, and I understand that. Most are genuinely curious and entertained by me and what I do, and first response is always positive. But once people get to know me and become more educated in what I do, there is a divergence; some remain seduced by me, but the majority, at one point or another, wither away. I cross a line they won't. I make a pretty good living crossing lines most people wouldn't, but this is also who I am.\n\nIt is not often that someone with a modicum of success in her chosen field will tell you to not follow her path, but that is what I am telling you, if you are a young girl who thinks what I do is glamorous, if you think prostitution is easy, if you believe selling your body is your right. This is not a profession for the softly composed. Most wizen up fairly quickly and go out and get a job, because they realize a small piece of their souls are broken off and stolen every time they give themselves to someone who sees them as little more than a piece of ass. The rest live in a hell of their own making, of violence and addiction and crime. They didn't choose to do this, someone else chose it for them, but they die like this, and I am thoroughly convinced that the most beautiful women in the history of the world died broken, alone, and miserable. I am a rare exception, and I don't boast about it, because there but for the grace of God...\n\nHaving preached enough, if you still want to try your hand at this, I offer ten quick tips for those of you entering the profession. \n\n1. PICK YOUR PIMP WISELY. Darryl is probably the biggest reason why I'm calling my own shots today, and also the biggest reason why I'm not dead. Not only is Darryl built for protection (he played linebacker at ASU before he tore his knee up), he also has a nose for business. He would fare just as well on Wall Street as he does on THE street. I've been with him for almost 15 years, two of them as husband and wife. He will always be my business partner, briefing my clientele, garnering new clients, weeding out potential troublemakers. He just has this knack for finding partners for me who are clean and with money. We treat this as a business, and he always dresses well, as if he were a CEO. He has a couple other girls working for him, including my Amber, but by now he has honed his talents, and in 2006 we brought in six figures! Other girls aren't so lucky, they have pimps who think it manly to dress nice while they are shivering in a heroin hell. As a species, pimps are bloodsuckers and the lowest form of life on earth, so I am very fortunate to have Darryl, someone who sees this more of a business than an ego trip. Don't get with a pimp just because he can talk the talk. Expect the best right away. The first time he puts you in a compromising position should be the last time. If he is dressing fine while you're strung out, there is something definitely wrong. Trust me, your dad would make a better pimp than 99.99% of the jackasses out there. One last thing: the bigger the mouth on the pimp, the worse he is. Real pimps know how to attract the right kind of attention (clean and moneyed johns) without the wrong kind (police, thugs) coming around. Real pimps take pride in how the woman looks and feels, not himself. Real pimps carry a gun but never even think of pulling it out. Real pimps let their business do the talking. I am proud of Darryl, and yes, he is still the most amazing fuck I ever had (and still have a few times a month, but that's another story). What he lacks in being a solid husband, he more than makes up for in business savvy. \n\n2. FELLATIO IS AN ART, NOT A SCIENCE. If you're the kind of girl who sucks cock just to make your boyfriend happy, don't sell yourself on your ability to do so. You have to enjoy giving head in order to be good at it. It is an acquired taste. It's something you get better at the more you do it. You'll learn little tricks to make it more appealing to your client; here's one for you, always make eye contact with him when you are pleasuring him with your mouth. It makes it seem there is a connection between you and him, plus men like seeing their cocks disappearing into your mouth and the expression in your eyes as you perform. There is no perfect recipe for the ultimate blowjob, and you won't know the ingredients until you work at it. Soft but strong lips, the ability to ignore your gag reflex, lack of shame, these are a couple. But the bottom line is, if you don't enjoy doing it, your man will tell right away.\n\n3. RSIE YOUR CLIENTELE TO YOUR OWN LEVEL. If you dress like a $20 hooker, you will get $20 johns. If your clothes suggest you will go into any alley for any nasty deed, you will most certainly find the skuzziest men America has to offer to do those things to you. I learned fast that if you dress like a million bucks, you will make a million bucks. If you talk like a street rat, you will collect street rats. If you act like royalty, you will collect princes. It sounds simplistic, but look down that one street in your city where the streetgirls collect, how are they dressed? Every so often there is one girl who stands out, and she is inherently no prettier than any other girl out there, but she makes an impression because she isn't in a tube top, her breasts aren't sagging to her waist, her shorts aren't cutting off the circulation to her legs. Usually she is a little cleaner, a little more conservative in her clothing, and her head is hanging just a little higher. She is usually quiet, letting her personna talk for her. She isn't walking up to every single car that stops at her light, asking the guy if he wants to party. She is above all that, and she presents herself as such. She will make more in two or three tricks that night than the skuzzy girls who are out there all night long, giving head for $20 a shot, because she presents herself better.\n\n4. BE EXTREMELY CAREFUL WITH THE DRUGS YOU USE. Cocaine ruined my marriage, and I am thankful that's the most it ruined in my life. I tell people I am a recovering addict, but I question that, only because, over the last two or three years, I've been able to partake in a little heroin with my sex and enjoy it without needing it every day. I've seen far too many beautiful people ruin and kill themselves doing what I do because the drugs overwhelmed them. Many start because it's part of the culture, part of the business, part of being a party girl. But these same girls will continue to use it to take the edge off of what they do. Maybe a downer to go right to sleep after a night of work. Maybe some coke here to get themselves motivated, or some painkillers there to numb parts of themselves needing numbing. As I say, this can be a harrowing business, and many girls become addicts because the job can seem like walking into a horror show every single fucking night, and it's all they can do to get through it without screaming their heads off. I am incredibly lucky, I blew a lot of money on coke (Darryl and I estimated we probably blew over a million dollars in narcotics since we've been together), I put myself in many compromising situations, and I never got into deep trouble, knock on wood. I never developed classic tweeking mannerisms, and it never interrupted my health to a point where it would alert people. Then again, I never completely abhorred the profession like many do, so I never did drugs just to get through a date. Now that I call my own shots, I do enjoy my heroin with my sex, maybe once every five or six months. But I am damn lucky\u2014DAMN LUCKY\u2014nothing has happened to me\u2014yet.\n\n5. IF YOU ARE UNCOMFORTABLE WITH A SITUATION, DON'T DO IT. The entire concept of prostitution involves a woman putting herself in vulnerable situations, usually with men who see her at best a pleasurable business transaction, at worse a dirty whore who deserves the worst. Although there is something intriguing in a streetwalker, it takes a certain mentality to follow a stranger, odds are not the prettiest man in town, into a dark alley or a seedy motel, get on her knees before him, and cradle his manhood in her mouth, when he could do anything to her and most likely say every nasty thing to her, then get up and do it over and over every night. Gangbangs and bisexuality and interracial sex and all the things you see on porn sound alluring, but when Jenna Jameson does it, she has full control of the environment--you as a working girl don't. Much of sex is about power, not beauty, not even pleasure, but what men who are failures in their own lives can take control over you. If you do not want to engage in something that you know could end with humiliation or injury or worse, by all means, walk away. It is not worth your life to go to a coke party, get doped up on some bad shit, and let a dozen guys take turns on you, only to pass out, be left for dead, and wake up in a dumpster like so much trash because they didn't want to have to deal with the police over a two-bit slut. Don't do it unless you have some level of confidence that the situation is safe for you. That is why a solid pimp is necessary, who can screen your johns, who can get dope that is safe, and who has a nose for trouble and will come running. Personal experience also helps, and the more you do it, the more you will learn about the possibilities of the male species, what they will and won't do to you. You'll learn to deal with more complex situations, and hence you have a small degree of control. Still, if you are unsure, don't do it. \n\n6. EXPECT TO BE SHUNNED BY FAMILY. I haven't spoken to my father since I was 16, almost 20 years. He sees my mother in my face and can't imagine how she could be such an angel of a woman and me be such a whore. My big brother is one of the best friends I ever had, but my little brother, who has had a crush on me since we were kids, still treats me like a piece of ass and goes back and forth from trying to talk me into bed to cursing me out for being a slut. My mother died a while back, and though she knew what I do, and though I know it broke her heart, she always treated me like a tragic baby sister, wanting to be the one I talk to about whatever is going on in my life, no one else ever knowing. My family is a mix, and lest I remind you, I am 35, divorced, and without children. If you are a teen, expect your family to disown you, to talk down about you, to argue, to curse, to kick you out until you clean yourself up. To be honest, I couldn't imagine parents who wouldn't kick their kids out if they were living a criminal adolescence. Any woman who sells her body for a living, whether she is a streetwalker, model, stripper, actress, inherently will never have sound marriages or long-term relationships with men, friendly, sexual, or otherwise. It is what it is, because at some point, every man, no matter how understanding, will demand a certain level of loyalty, and it is impossible to prove that to a man when you are giving yourself to others. No relationship can last but a few weeks. That is why dirty girls don't have real friends, they tend to keep with \"their own kind\", people in the same situation. That is why many strippers are temporary lesbians, because men sicken them and they seek understanding for what they do by someone who is in it with them. That is why Amber and Darryl are my new family, my girlfriend and my pimp, my future spouse and my ex-husband. Again, I count my blessings for having these few people as constants in my life, most are not so lucky. I gave up my relationship with my father for this, and there are times when my heart breaks because I would love to call him, but I can't. I wish my baby brother saw me as a sister and not a piece of ass.\n\n7. NEVER CONDUCT BUSINESS AT HOME. You don't want your clientele to ever have the ability to see you when you don't want them to. Like any other business, success in prostitution involves your ability to lessen the unforeseeable, to maintain professionalism and control of all aspects. Unless you are bringing over someone you deeply trust (and I strongly recommend you do NOT take a dear friend and turn him into a client, it will break your heart every time), always conduct business elsewhere. Streetwalkers know this, that's why they're on the street and in hotel rooms and not selling out of their homes. Escorts know this, that is why business is conducted through agencies and most of the time involve meeting at a neutral location. Whether you enjoy or detest this job, you have to be able to physically separate yourself from it when you are done for the night. You have to feel that you will never have to see the guy you were just with again unless you choose or by dumb chance. Never give a phone number or address. If your john wants you again, let him go through your agency or pimp. Keep all such encounters on a business level, and I know it's a real tough thing to do. Guys will fall in love with you and become possessive and want you; even you will occasionally feel a bond between you and your partner, it's bound to happen, it's sex, for crying out loud. But you must keep your wits about yourself. It is a business. Like any other job, leave your job at the office, don't take it home with you. \n\n8. REMEMBER YOUR ALIASES. My clients all know me by the name Tiffany, and if they know me with any degree of depth, they know me as Tiffany Christian. I'm not telling you this so you can find me and gain my services, but to tell you that you need to create a separate personna, a fake identity, a name. You have to do this. You don't want to attach your personal name to anything you do, you don't want anyone knowing anything more about you than you need them to know. The police can find twenty girls on the street names Diamond, but they have a much harder time tracking Julia Gutierrez. Your name is your anonymity. I've had other aliases, but you need to settle on one, because if you throw out three names--Topaz, Layla, and Lee are three I used to be known as--it becomes harder to keep track of what you've done, if Topaz was with a drugdealer and Layla witnessed an assault. What's more, it will sound almost schizophrenic, but when you do this, you create a separate personality. If you knew me, and you knew Tiffany Christian, you would note several definite differences in character; for instance, Olivia tends to be bookish, articulate, and she loves good conversation--Tiffany talks like a nympho ditz who lets her partner feel smart. Olivia is a bit of a slob because when she comes home from work, she is there to relax; Tiffany is meticulous and subtlely controlling, every detail flawless, every aspect that she can control is. Olivia comes across as a feeling and caring person, Tiffany can only think of sex and what new ways she can get herself and her partner off, no matter who gets hurt. I know I've created my own little Brechtian drama in my own head, having to slip into my Tiffany skin in order to perform. Someone was asking me about that just the other day, why I don't do this every single day, and I said because I need a few hours to step out of being Tiffany and return to myself for a while, then to get myself back into Tiffany. That is a necessity with me, because if I sink into Tiffany for too long, I don't return easily, and that is when I get into real trouble, like addiction or violence. I love being Olivia, and I haven't descended completely into Tiffany for about seven years now. For a night or two or even a long weekend, Tiffany can prowl, and it's fun being her, but at the end of the day, I love Olivia.\n\n9. YOU HAVE EVERY RIGHT TO SAY NO. Don't ever think, just because some guy paid to be inside you, you've lost the right to say NO. You are not a slave. You are a woman, a beautiful human being who chooses to present her body in a provocative manner in the hope of selling it. You are not an animal. You are what poets dream about. You are an object of desire. You do have a small degree of control. Use it. You are not a prude for saying NO to a gentlemen who is unclean and you can sense means you harm--quite the contrary, saying NO in such instances is proof of your intelligence! If a guy is into a rape fantasy, and he is frightening you, walk away as fast as you can. Fortunately for me, I have a pimp who is really looking out for me and screens my partners, and he has done so remarkably well, whether it's now with computer sophistication or back then with street smarts. He knows the lines I have drawn, and he doesn't coerce me into doing anything I don't want to do. Many times, though, in the heat of the moment, you are alone with a man or a group of men who frighten you. You don't have to do it. You are not a slave. If you fear pregnancy, say NO if your partner refuses the condom. If he is being a real asshole and is being aggressive, give him his money back and go home. NO means NO, even if you are a prostitute.\n\n10. IF YOU CAN'T LOOK YOURSELF IN THE MIRROR, STOP DOING WHAT YOU'RE DOING. That's true for anyone in any endeavor. But if you come home, heart still racing because the speed you took earlier is still raging through you, vagina raw, breasts bruised, dress torn, and you look in the mirror and don't like what you see, stop doing it. You are doing things that society looks down upon, and no matter how hot you look, no matter how much you get for your efforts, no matter how famous or infamous you become, you are still breaking a Commandment, you are giving God the middle finger. Amber is a screamer in bed, even with me, and her eyes are shut tight, because she tells me, every time she is with a partner, every time she feels her pussy filled, she sees the ugly and laughing faces of about seven teenagers who raped her when she was in high school. She is a gorgeous woman who now works with me and my Darryl, I've known her for a decade, but her addictions hit her a little harder than it did me, and she has a couple of the tweeker mannerisms I seem to have avoided. She should stop what she is doing, but she doesn't know anything else except to spread her legs. She has a tough time looking herself in the mirror, and she has tried to get out if it the only way she can think of, marriage. Well, three divorces and two children she lost custody of, a high-school dropout who can barely read her name, and a body still vivacious enough to draw four figures a night, and it's clear that, though she needs to get out, she never will. She is very unhappy, and her thing these days is painkillers. She will die before she is 40, I am convinced of it, which is nothing new, as I have said, the most beautiful women in the history of mankind all died broken. \n\nAbove all, I do not recommend my lifestyle to anyone out there. But if you are convinced that you should try, I hope this helps. Write to me and tell me how it goes. "
    ],
    "authorname": "IrresistibleBeauty",
    "tags": [
        "prostitution",
        "fellatio",
        "lifestyle",
        "drugs",
        "whore",
        "slut"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/ten-tips-for-the-new-prostitute"
}