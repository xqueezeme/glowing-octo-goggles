{
    "title": "AnimeCon Harem Pt. 11",
    "pages": [
        "As it turned out, the Westerlin hotel did feature a small pair of restrooms right off the hotel lobby, directly across from a partitioned-off dining area where she remembered enjoying a continental breakfast during last year's AnimeCon. The ladies' room was clean and well-lit, containing the expected basic amenities\u2014Rebecca had hurried past the row of sinks beneath the wide mirror and into the privacy of the farthest stall, a larger handicapped-accessible one.\n\nThere was no time for Rebecca to undo her sword belt or unwrap the winnagas wound securely around her shins and ankles. The skirting of tunic that hung down nearly to her knees was lifted up and the hem clenched in her teeth, frantic fingers undid the neat ties on either side of her viking rus trousers, and they were shoved down together with the simple historical smallclothes she wore beneath. Her back thumped against the far tile wall and then slid downward as Rebecca let herself drop into a squatting position, knees splayed wide.\n\nMara cast aside her Rebecca qualities almost as quickly as the girl had managed to work her medieval garb out of the way.\n\nHer trembling hand hovered over her exposed labia for a moment, fingers curling into claws that ached to simply maul across herself. She managed to hold herself back\u2014just barely\u2014 fingers splaying wide and then clenching into a tight fist and opening again. Maintaining control when that maddening itch of pink was ravaging up and down her astral body was more difficult than she could have ever imagined. Stephanie's flames were everywhere and they were nowhere.\n\nThe brilliant color remained in a distant dream, and it was also right here wreathing her in insatiable fire. Mara's naked thighs were fair and pale as they tensed with anticipation beneath the cold, sterile light of the ladies' room, and also somewhere beyond that the rich mahogany hues of her many limbs were splitting and crackling beneath the onslaught of a thousand bright pink tongues of flame.\n\nSearing heat. Simmering sex. Delirious pink smoke in billowing, choking clouds, each one its own thick puff of FUCK ME lust issuing out from Stephanie over there as she\u2014\n\nSqueezing her eyes shut and letting out a slow, ragged breath, Mara began like she usually did and flashed an ungentle slap across her own pussy. It stung in a delicious way, making her jerk back and shiver against the bathroom wall. The fabric of the tunic was ground between her teeth as she followed up with a few more little love taps, then she shoved her hand down to clamp down at the juncture between her legs and squeeze herself.\n\nShe was warm and wet and begging for more attention.\n\n\"Mmmmhph!\" Rebecca squeaked out around the mouthful of tunic she was biting down on. \"Mnn, mmn, mmmmphh\u2014phh!\"\n\nShe raked fingers across her one thigh and tried to massage the muscle\u2014Mara's entire body was aching for attention but there was only so much she could do at once. The foreplay she really needed was a violent brawl, to grapple wildly with an opponent, to throw out vicious strikes and receive them in turn, to be wrestled to the ground, to smash together into tree trunks with her opponent and roll down a hillside of rocks and roots and scraggly underbrush. To be locked in unbroken combat with someone large and overwhelmingly male and preferably about to fuck her.\n\nAhhhhh okay okay time out, out of control, OUT OF CONTROL! Rebecca reeled in the bad brains Mara part of her that sometimes went a bit too far when it was horny time. Rape fantasies are all fine and fancy 'till it gets fuzzy on who's raping who! BAD! BAD! It's a\u2014um\u2014ah, it's slippery, it's so slippery, it's such a slippery slope there!\n\nRebecca almost spat out the mouthful of tunic, her eyes flashing open in surprise as more Mara needs were forced out into the open in a vibrant hiss like steam and smoke. Her middle finger was snug and soaked and definitely inside herself somehow already, and even hunkered down and propped up against the wall as she was, Rebecca\u2014Mara still almost lost her balance. The telltale schlick schlick had already begun as she began to frig herself in earnest. Experience taught her over and over again that no one was able to be as ruthless as she could be to herself.\n\nIt was also a lot harder than expected to not imagine Brian right now.\n\nNo no no, safe thoughts, safe thoughts\u2014Jarenth, Rebecca decided. Goblin Labyrinth fanfiction smut. Jarenth the Goblin King just can't help but seduce me because of a wicked spell he's been put under. Or, um. Yaoi boys kissing? Brian's back and shoulders. NO NOT BRIAN\u2014GEEZ.\n\nRebecca's free hand had been helping hold up her tunic against her body but she was forced to grasp and fumble against herself in search of her breasts because she needed a bit more sensation and it was just so frustrating! The corded musculature of her forearm would soon cramp up because of how fast she was fingering herself\u2014her hand was a blur of motion but she was too wet and it was like she couldn't find the traction she needed to really get off.\n\nOhhh my goodness. Ice-skating anime boys. Figure-skater anime boy butts, Rebecca tried, mewling into the mouthful of tunic and squeezing her eyes shut. Hands on my throat. No? The way Megan looked at me in that shower\u2014okay, I guess no. Sinking up to my clit in, um, in VIBRATING QUICKSAND\u2014no? That one really good tussle in my tent with\u2014no, not even that? Jarenth in drag\u2014no? H-how a fair maid can milk a bull, and with every stroke comes out a bucket-full? No?!\n\nPink flashed and flared in the distance, explosions on the horizon of her mind, and Rebecca shuddered and squirmed in response. Somewhere out there, she knew Stephanie had climaxed. Unfortunately, that didn't bring the Mara in her to satisfaction either\u2014she was still feeling beastly desires, still left in the still-burning aftermath of a wild blaze of smoke and ash, a forest fire of sexual devastation that left her only partway to that spectacular orgasm finish of her own she needed so much.\n\nUm um um, okay okay. Brian... and Stephanie? Rebecca wondered. Them... doing it together? Is that even okay to think about? Is that\u2014\n\nHer knees knocked closed in surprise and she almost lost her footing and toppled over. Something about that particular line of fantasy matched up in perfect magical conjunction. Like when single shines the triple suns, because the sudden and immediate effect on her libido reaching greater heights may as well have been ritual spellcraft. Spreading her legs wide open again, Rebecca resumed fingering herself with new vigor.\n\nOkay\u2014yeah that's okay. Yeppers. It's okay okay. It's okie dokie okay day today okay\u2014? The Rebecca train of thought popped out in a giggle of delirium until Mara strained a finger behind her thumb and then released it to give her clitoral hood a vicious flick.\n\n\"Mmm, mmm, Mm Mm Mmmmmhhh\u2014!\" She couldn't help but toss and turn her head at the power of the sensations this time, and her wild tangle of hair flicked across her face with the motion.\n\nBrian atop Stephanie, pumping into her. Brian BRUTALLY FUCKING Stephanie, thrusting into her, over where they are in the hotel room. Brian and Stephanie but they're NAKED and doing it right there. Slapping flesh and squeals of surprise. Sounds of pleasure. Brian finally letting loose, Stephanie's big smile\u2014I raced over here because the fire's spreading ohhh it's spreading, I can't get away nope I can't STOP them, I have to stop this but I can't\u2014nothing will stop them!\n\nThey're having sex. I'm watching somehow and I shouldn't be watching but he's driving that enormous big man thing of his into her over and over and I can't stop them, I can't stop watching and I can't stop from playing with myself and it feels so GOOD as they\u2014as I\u2014it's\u2014it's\u2014?!!\n\nRebecca's mouth opened and let out a faint, wordless croak as she quivered and came, the unheeded tunic slipping back down over her thighs.\n\nDozens of trees groaned and splintered and finally toppled over with a deafening crash of branches, the burnished lines of wood grain within the split timber flickering with strange light. The last of those pink embers were still dancing in the air about her, and Mara's\u2014Rebecca's\u2014mind felt like it was clouding over with a verdant spread of sudden fresh growth. Young saplings were sprouting up anew from the remains of the felled tree, pushing apart broken old bark with new life, each in bolder browns and richer russet hues than what had been there before.\n\nIt feels... ohhh my mercy that feels soo good... The veil of pink smoke was finally lifting, her head was clearing, and Rebecca could only let out a small contented laugh at herself and the mess she'd made\u2014she was slick down with fluid arousal and dewy droplets had even been flicked across the floor tile.\n\nA periodic fire like that is... healthy for a forest! It's, um, it's perfectly natural to rack up a few tree rings on the inside like that now and then. I'm not a VOYEUR or anything weird. It's not like I could even stop receiving all of that\u2014I don't think? It was... nice. Fun? I feel so much better.\n\n\"Yes, yes,\" Rebecca mumbled to herself with a silly smile. \"That. That is what magic should be like.\"\n\n* * *\n\nKelly slowly stretched out her limbs as presence of mind began to return and bring the hotel room back into clarity. She hadn't passed out\u2014at least not exactly\u2014but she'd absolutely fallen into that bleary twilight between awareness and unconsciousness for a bit. Sending seemed to take more out of her than just concentration and effort, and some sixth, seventh, or maybe eleventh sense of hers that she was on the cusp of properly discovering felt like it was now running on empty.\n\n\"Hey,\" Kelly huffed out in as cute a voice as she could muster. \"Hey, you two.\"\n\nShe hoisted herself up on her elbows upon the bedspread and with some difficulty managed to slither over in what felt like an ungraceful lizard crawl to settle on top of Brian and Stephanie's naked bodies. Her inner clock felt off now, distorted from her brief brush with the past. It wasn't that she felt like she hadn't seen these two for days, it was like she was about to see them here, in a few days from where she was now.\n\nBut now, HERE is now, Kelly blinked at them, struggling to get her bearings. It felt like she'd been interrupted in the midst of a good book, and then when she returned to reading again she'd picked up from the wrong page. Or something. What the actual fuck?\n\n\"Hey, you. Boyfriend,\" Kelly repeated, looking at Brian for a moment and then turning to Stephanie. \"Girlfriend.\"\n\n\"Kell,\" Brian acknowledged, managing to pull his arm out from beneath her so that he could wrap it around her in an embrace. Kelly's body seemed to soak up his attention like a sponge, and she rested her cheek against him and half-heartedly blew strands of bright-red hair out of her face with a puff of her lip. He was still breathing heavily, and the steady rise and fall his chest that was gently rocking her view became strangely comforting.\n\n\"Baby,\" Stephanie beamed at her, nuzzling closer into their small pile of bodies. \"...Did you see?\"\n\n\"Kinda,\" Kelly admitted with a wry smile. \"Might need to see it again\u2014just to make sure.\"\n\nIt was a little dismaying to realize that she wasn't entirely joking. Part of what she'd just seen remained here with her, and part of it had been sent far away and now felt distant and unreal. It was like a buffet plate Kelly had piled up for someone else and carried over to a different table\u2014she remembered what she'd put on it, kinda, but the memories weren't right here in front of her to double-check and make sure.\n\nWhich is totally unfair! Kelly decided, inwardly pouting. Like, fuck that\u2014I'm not sending back actual good bits ever again. The good bits, those are for ME, me here in this timeline. From now on, I'll only send back like, a little monologue to myself. Like that other Kelly did. IF ANYTHING. My power fucking sucks.\n\nStephanie giggled\u2014a beautiful sound that plucked at Kelly's heartstrings and forced her to engrave the melodic laughter deep into memory\u2014and the naked girl with her fluffy pink hair in disarray stroked fingertips down across Kelly's shoulder. There was something different about Stephanie, something not quite tangible, and Kelly examined her for a moment in a struggle to decide if she'd become more lovely to her because of charm magic or whatever, or if it was simply Kelly's own feelings of love and adoration coloring her perception.\n\n\"Do I look any different?\" Stephanie blushed, turning shy beneath the intensity of Kelly's searching eyes.\n\n\"Yeah,\" Kelly decided, although she couldn't put her finger on exactly what changed. \"I think so. Do you feel different? Like you've become a woman?\"\n\n\"Kinda?\" Stephanie squeaked out in embarrassment. \"A little, maybe? I feel... I feel... like I feel different? Maybe?\"\n\nKelly strained her neck forward so that she could give Stephanie a peck on the lips.\n\nShe still didn't think of losing virginity as a big deal, but she was willing to acknowledge it as a milestone of sorts. After all, Stephanie didn't lose it\u2014she'd given it to Brian. In at least some small way, Stephanie had closed one chapter of her life and embarked on the next. Brand new start for all of us, huh? In a whole bunch of ways, I guess.\n\n\"How was it?\" Kelly asked with a knowing look.\n\n\"It was...\" Stephanie trailed off with a look of wonder as she groped for words to describe the experience. After a few moments she gave up and simply answered with a positively radiant smile.\n\n\"That good, huh?\" Kelly felt herself warming with a glow of relief and satisfaction. \"Good. Great. How 'bout you, Brian?\"\n\n\"Me?\" Brian seemed surprised that he'd been remembered.\n\n\"Yeah, you,\" Kelly planted a kiss on his collarbone. \"How do you feel?\"\n\n\"I feel... wow, I guess it's been a while since anyone asked me that,\" Brian said with an uneasy laugh. \"I feel good. At peace. Like it's been a while since I ever thought things might turn out okay, but now it actually seems like they just might.\"\n\n\"They just might,\" Kelly agreed, kissing him again. They really just might...\n\n\"Ugh, we've gotta get going,\" Brian muttered with a soft groan, searching for his phone for a moment before realizing it was still missing. \"It's gotta be almost eleven already. Really wish we could keep the room for one more night and just, y'know, decompress a bit.\"\n\n\"That's a funny way of phrasing 'fuck like rabbits,'\" Kelly smirked.\n\n\"Can't we stay just one more night?\" Stephanie asked with a pained expression. \"I have money, I can see if\u2014\"\n\n\"Much as I'd really, really love that...\" Brian sighed. \"I have work at six tomorrow morning, and I live a little over an hour away. There's no way I can stay another night.\"\n\n\"Call in sick?\" Kelly suggested, slowly rubbing her cheek across the perplexing firmness of Brian's pectoral muscles. \"What do you do for a living again?\"\n\n\"Drive a forklift at a packing plant,\" Brian grumbled. \"I'm fairly essential. They've got a team that packs the boxes and loads them on the pallets, then they need me to either get the pallets down to the warehouse, or more often than not quickly shuffle stuff around so that they get to the loading docks immediately. The same little two-hundred yard stretch basically, but like a couple hundred times a day. Wasn't even easy to use my vacation days I'd saved for AnimeCon\u2014the plant manager called me into his office trying to convince me to work through the weekend, trade in the vacay days for cash.\"\n\n\"So, what\u2014does nobody else in the whole place know how to drive a forklift?\" Kelly asked.\n\n\"Probably not?\" Brian laughed. \"The more qualifications a worker has, the better pay grade they fit into. Which naturally means that to cut costs, the plant employs nothing but the worst workers they can for packing and whatnot. Mostly from a temp agency, and then if they can get by for six months without being written up or flaking for a better job, they get hired on.\n\n\"My manager's the only other guy certified to drive the lift, and he's not very good at it,\" Brian confided. \"He has to take it real slow. So, filled pallets are gonna be crowding up the floor, packers trying to get them out of the way with pallet jacks just to keep their operations going, the truck guys'll be getting impatient because they're waiting on him and it's throwing off their schedule\u2014everything turns into a huge clusterfuck and tensions are gonna be running high.\"\n\n\"Christ,\" Kelly mouthed. \"Sounds rough. Funny story\u2014I'm actually scheduled to work tomorrow, too. My retail job. Pretty sure I was gonna no-show either way, though.\"\n\n\"Do you need to call or anything...?\" Brian asked.\n\n\"Nah,\" Kelly murmured. \"Fuck 'em. Seriously, just fuck 'em.\"\n\n\"Where do you work, Kelly?\" Stephanie asked with interest.\n\n\"Dollarydoos, on the other end of the city here,\" Kelly snorted. \"Typical discount variety store\u2014situated in the shitty low income part of town right 'tween the liquor store and this super sketchy payday cash advance place. Everything Dollarydoos sells is overpriced trash, which is really fucking saying something, because every item in the store costs a fucking buck. One single dollar. Well, plus tax sometimes, I guess?\"\n\n\"Think I've been in a Dollarydoos before,\" Brian chuckled. \"Bought a broom there once\u2014 'cause it was on my way home\u2014and the piece of shit was only good for like, three or four back and forth sweeps before the bottom part with the bristles broke off the flimsy plastic handle.\"\n\n\"Ohmigod, right?!\" Kelly slapped a hand against his chest in aggravation and sat partway up. \"We have to use one for sweeping store at the end of shifts. Like the whole bottom of ours is nothing but duct tape so it like, bends and wiggles and it's all floppy when you try to use it. Flaccid fucking cheap piece of shit. Arrgh, and the whole fucking thing is only like, eight inches wide! Rhonda\u2014this other old bitch that works there, she said that the normal kind of real broom you'd get anywhere else the brush is thirteen inches wide, like that's the normal standard.\"\n\n\"So, I shouldn't ever shop at a Dollarydoos?\" Stephanie asked with a faint smile.\n\n\"Definitely not,\" Kelly scowled. \"I don't even want you going inside one\u2014it's nothing but meth addicts and landwhale fucking single mothers of six with their screaming little shitstains running around the toy aisle pulling everything off the shelves. People actually go into Dollarydoos with their food stamps and fill their fucking carts with nothing but off-brand soda, tiny little dollar bags of chips, snack cakes and shit\u2014and it's like, Jesus, lady\u2014this is what you're going with for your groceries? Seriously? Seriously?\"\n\n\"Well, you could call in and try to get transferred to the Dollarydoos in my town, rather than burning your bridges with them completely,\" Brian suggested.\n\n\"That's not even fucking funny,\" Kelly said, giving him a withering look.\n\n\"No, I'm being serious\u2014think about it for a second,\" Brian said. \"Ours isn't this inner city Dollarydoos\u2014\"\n\n\"\u2014Still not funny,\" Kelly warned. \"There's no fucking way I'm\u2014\"\n\n\"\u2014because half my area's like, these rich upscale neighborhoods,\" Brian continued. \"Never went in there much, but from what I could tell, the Dollarydoos we have mostly just sells cheapo holiday decorations to old people. Party favors, teaching supply stuff, and, you know, the junk toys and novelty stuff. It's a very different kind of, uh, locale. And, you're already trained for the job and everything.\"",
        "Kelly fell silent, her next retort failing to emerge.\n\n\"I said I'd support you until you get your feet under you, and I meant it,\" Brian promised. \"But, I also worry that that'll make you uncomfortable, or like, strain the relationship between us with stupid power dynamic stuff. Don't want you to feel like you're beholden to me, or dependent on me if you don't want to be, and Dollarydoos seems like it'd be just like this easy, low-pressure part time job income that could give you some... I don't know, agency? I guess? I'm not saying I want you to suffer at some Dollarydoos job you obviously hate, I'm saying that it's an option you could have if you wanted it. So that you don't feel trapped with me, or anything. I don't want you to feel trapped.\"\n\nKelly regarded him in silence with searching eyes for a long moment, both rendered speechless and struggling with a surge of unfamiliar emotion.\n\nThat's... totally not a romantic thing to say, Kelly thought. Right? Why does it halfway feel like it is? The fuck? There's nothing, NOTHING fucking appealing about working at any Dollarydoos. I fucking HATE Dollarydoos.\n\nHis eyes were sincere, though, and something about what he said had her feeling weird. While as an extraordinarily attractive woman Kelly was very accustomed to guys telling her things that would make her happy, she'd long since learned that their words were always suspect. There was always a motive, the age-old dance of guys plying a beauty with honeyed words had gotten so stale to her that it had begun to feel purely transactional in nature.\n\nSo, what? Is this a charm magic influence thing? Kelly wondered, momentarily bewildered. Or, is it like... because he's not saying things just so I'll like him, but he's actually just... thinking of me? Worrying for me, putting thought into things on my behalf? Is that how he always is with Emily? Is it fucking weird and psychotic that him telling me I could keep working at fucking DOLLARYDOOS actually goes full circle and becomes... almost kinda touching? What the actual fuck, Kelly?\n\n\"Uhh,\" Kelly began, feeling conflicted. \"Okay. I'll think about it. I really hate working there, though.\"\n\n\"I figured,\" Brian nodded. \"I don't exactly love my job, either. Just, take it as something to mull over and really consider?\"\n\n\"I think it's a brilliant idea!\" Stephanie insisted. \"Try it, Kelly\u2014please? It could give you a better start moving in with Brian\u2014if you end up not liking it, you can always quit later. If you just no-show at the Dollarydoos you work at now, the one near Brian won't ever want to hire you! Can you call them, call your work, do you have their number in your phone? You can tell them it's an emergency, or that your living situation has suddenly, um\u2014\"\n\n\"Whoa, whoa, slow down, guys,\" Kelly rocked back, running her fingers through her hair. \"I'm gonna\u2014I don't know? It's weird for me to put a whole lot of thought into what I'm gonna be doing, let alone have other people thinking about it. Er, thinking about me? In that context?\"\n\n\"You're gonna have to get used to it,\" Brian said, gently shifting Kelly off of him so that he could start to get up.\n\n\"You're going to have to,\" Stephanie agreed, looking at Kelly with an intensity in her blue eyes that Kelly found mesmerizing. \"We love you.\"\n\nOr, it's like they DO have a motive, and it's just that they want what's best for me, Kelly swallowed, trying not to feel overwhelmed by a moment that seemed so insignificant to them. How fucking crazy is that, these days? What do I even DO with that, how do I respond to that? How does a lifetime of just getting fucked over and then fucking over other people in turn ever prepare you for... for THIS? What the absolute fuck are you getting yourself into this time, Kelly?\n\n\"C'mon, let's get dressed and meet up with everybody,\" Brian said, assisting Stephanie up from where she'd been cuddling in close on the bed. \"There's still a little bit of AnimeCon left for us to check out before this weekend's really over.\"\n\nKelly couldn't help but feel sympathy for the obvious look of heartache that crossed Stephanie's features at the reminder, but Brian had been on the lookout for it and managed to slightly appease her with a tender kiss. Stephanie managed to muster a warm smile, but Kelly could see how difficult it was for her knowing that everyone she'd just fallen so far and so hard in love for was about to be out of arm's reach for a good long while.\n\nThere weren't any 'buck up, kiddo,' aphorisms Kelly had for her, either. She found herself warring with an anxious mixture of feelings\u2014bittersweetness at the con weekend ending, trepidation at stepping into a new life living with Brian, and... she knew she was going to miss Stephanie, too. A lot.\n\nDistracted as they were by the sheer melancholy of soon parting, both girls turned to watch Brian get up, with him clutching carefully between his legs to hold the\u2014 \n\n\"What the fuck,\" Kelly blurted out, staring at the bulbous extension that was ponderously swinging back and forth down by Brian's thigh.\n\n\"Hey, don't laugh,\" Brian pleaded, sounding a little incredulous himself. \"Tryin' to not make a mess, here.\"\n\n\"What the fuck!\" Stephanie exclaimed, clapping a hand over her mouth.\n\n\"There it is again Steph, you're swearing,\" Brian called over his shoulder as he awkwardly tried to amble over towards the hotel room's small bathroom. \"I heard it.\"\n\n\"I didn't swear!\" Stephanie protested, gathering a handful of the sheets to pull against herself as if to protect her from the shock of what she was seeing. \"I don't swear. Is that\u2014is that the fucking condom?!\"\n\n\"What the fuck,\" Kelly repeated. \"Brian, Brian stop\u2014turn around, let me see that.\"\n\n\"I swear you're swearing,\" Brian chuckled, continuing to take cautious steps toward the bathroom.\n\n\"I'm not swearing!\" Stephanie insisted.\n\n\"Brian either that's the fucking condom, or you had time to start making fucking balloon animals in bed there with us,\" Kelly said, climbing up off the bed and hurrying over to grab his shoulders and spin him around to face them.\n\n\"Steph's picking up all this bad language from you, I hope you know,\" Brian said.\n\n\"Is that the condom?!\" Stephanie called over with a giggle.\n\n\"Okay, okay I know it looks like a lot, but it's really not that much,\" Brian tried to rationalize. \"I mean, between you teasing me along forever and Stephanie being Stephanie, and it'd also been a while since I\u2014\"\n\n\"Hours, Brian,\" Kelly refuted him. \"Hours. This is a lot of fucking cum for you to shoot out after what we saw last night.\"\n\nUpon closer inspection, the milky transparent latex was stretched out to what must have been its absolute limit. The condom was absolutely swollen with spend, bloated out in an obscene rounded shape that Brian was struggling to cup from beneath while pinching the top of it tight against the base of his dick. Kelly dropped into a crouch so that the ridiculous sight was right in front of her eyes and she could still barely believe what she was seeing.\n\n\"I mean... probably a good thing we remembered it in time at least, right?\" Brian said with a nervous chuckle. \"If we hadn't, I can only imagine what\u2014hey hey whoa careful!\"\n\n\"I'm being so careful,\" Kelly chided in a playful voice. \"Don't let go of it from the bottom. Yeah, just kinda cradle it. Let me just...\"\n\nKelly had actually never removed a rubber from a guy before, but she imagined this would be a new experience to just about anyone. With as much concentration and focus as she could bring to bear\u2014the smell of raw, animalistic sex was right in her face now, and it was potent\u2014she took over squeezing the mouth of the condom shut against him while ever so slowly sliding it down and off of him. That took longer than she expected, inch after inch of glistening cock being revealed as it was drawn out of the veritable balloon of still-warm ejaculuate\u2014it was so distracting that she couldn't even think up a crass joke to articulate.\n\n\"Jeeeesus, Brian,\" Kelly finally mouthed in awe. \"Brian.\"\n\nShe could feel how dangerously bubble-thin the heavy purse of latex was stretched, and she did her best to ignore the soft groan Brian let out as she eased it down across the flaring crown of his cockhead. With deft precision that impressed even herself, she ensured the end stayed closed between her thumb and forefinger while beginning to stretch that ring even further so that she could attempt to twist it around and tie it.\n\n\"Whoa, whoa\u2014it's gonna pop,\" Brian warned.\n\n\"It's not gonna pop!\" Kelly whispered back in a harsh voice.\n\nIf it did pop\u2014and it definitely felt like it was about to\u2014Kelly would get a face full of magical semen, so she leaned in even closer and stared at her trembling fingers with the intensity of an explosives expert defusing a bomb. She was determined to try to do this, and if it popped and splattered her face with his cum... Well, yeah I'm okay with that, too. Obviously.\n\n\"I think... I almost... hah!\" Kelly grinned in triumph. \"I got it. Now, sorta tilt your hand and very carefully just kinda settle the weight of it in my hand.\"\n\n\"You don't have to wave it around,\" Brian laughed. \"C'mon, just get it over the waste basket, before it breaks and spills everywhere or something.\"\n\n\"We're not throwing this out!\" Kelly said, shooting him an aghast look for as long as she could hold it before she felt her cheeks naturally curling into a wicked smile. \"We haven't even shown Emily, yet.\"\n\n\"Oh, God,\" Brian made a face. \"Don't you dare hand that to Emily. She'll completely, one hundred fifty thousand percent absolutely be unable to stop herself from throwing it at something.\"\n\n\"Stephanie,\" Kelly called. \"Steph, you've gotta come see this. Come and see this before we give it to Emily.\"\n\n\"You can't,\" Brian protested. \"You can't give it to Emily. C'mon, you know she'll throw it at something. Or someone.\"\n\nThat does seem... expressly dangerous, Kelly thought to herself as Stephanie clambered off the bed and joined them on her knees. With what basically amounts to a water balloon full of magic transformation cum? We should maybe keep this handy?\n\n\"That's incredible,\" Stephanie remarked, smiling with pride at the distended condom Kelly had managed to tie off. \"Brian\u2014you're amazing.\"\n\nKelly was about to say more, but after following Stephanie's gaze she discovered that the girl had already lost interest in the ridiculously overfilled condom\u2014in favor of an adoring look at Brian's dick. Though no longer standing up at attention, the girls would be hard-pressed to describe it as flaccid. The delightful vulgar instrument was still fairly flushed with arousal, it gleamed with slick splendor after the removal of the condom, and appeared so incredibly mouth-watering that Kelly found herself subconsciously leaning in towards it.\n\nStephanie licked her lips and made a tiny whimpering noise.\n\n\"Yeah, this is, uh,\" Kelly fumbled for words as she turned her head away and rose to her feet, carefully hefting the condom in hand. \"Impressive.\"\n\n\"Okay, but seriously don't show that to Emily,\" Brian laughed, taking the slightly dazzled Stephanie by the hand and guiding her up to her feet before she could start licking and slurping his penis back into a full erection. \"I'm gonna wash up a tiny bit and get dressed\u2014we should probably get going soon.\"\n\n\"What if I chuck it at Emily?\" Kelly suggested, gently squeezing the condom inflated with cum in her hand to feel its shape distort. \"Like, here, Emmie\u2014catch!\"\n\n\"That's... uh,\" Brian smile began to fall. \"Please don't, not even as a joke. She has a kinda bad history with people playing mean pranks on her from high school. Accidentally spilling drinks on her, her finding spit on the back of her bag after going down a crowded hall\u2014that sort of thing. Don't want to upset her with anything like that.\"\n\n\"Oh,\" Kelly said, forcibly letting her hand relax.\n\nA flash of anger had spiked through her even at merely hearing that Emily had been bullied in the past, which surprised her. In any other situation Kelly would have delighted in sharing some of her own high school stories about how shocking and cruel teens can be at that particular turn of conversation. Most of them weren't from the perspective of one of the victims, either. Now, instead she felt... a little bit pissed, a tiny bit overprotective, and a whole lot of sympathy emerging out of nowhere for Emily, which wasn't a combination of emotions Kelly was used to.\n\nOkay, THAT'S a charm thing, probably, Kelly thought. It didn't bother her as much as it probably should have. It's uncharacteristic, doesn't fit the pattern of how I'd normally react at all. And whatever happened to her was way back in high school, anyways. Nothing recent, nothing super RELEVANT. Right?\n\nUnlike their situation now with Chloe, which was both recent and relevant, and it took Kelly a conscious effort not to clench her hand and crush the fragile condom. It maybe wasn't fair of her to immediately associate bullying with Chloe, but there was no other decent outlet for actively venting her outrage this weekend.\n\nShould pelt that cunt in the fucking face with this thing. Giving Chloe a smack and a tiny shove, getting her own mustard all over her whatever-it-was cosplay\u2014it wasn't enough. Blowing Brian right in front of her and seeing her totally pop her gasket, that was fantastic... but STILL not enough. Nowhere even close.\n\nDon't know how I'm gonna manage it without getting us all in trouble, but I am personally going to beat the shit the living shit out of her for everything she's done to Stephanie. The way she treated Brian. For EVERYTHING she's done. I just want to RUIN her.\n\n\"Hey, Steph do you want to keep this?\" Brian asked. He turned, lifting up the liner from the ice bucket out of the sink. \"We can fill it with more ice from the machine, if you think you still need it.\" \n\n\"I'd... actually forgotten all about that,\" Stephanie blushed, bringing a hand up and inspecting her face in the mirror. \"It doesn't... look bad? I don't really feel anything anymore.\"\n\nKelly stared at that plastic bag\u2014it was tied shut, but the ice inside had long since melted away overnight, leaving Brian with a lopsided baggie filled with water in his hand to parallel the tied-off condom of cum Kelly held in hers. Except... that ice last night probably did fuck-all for her swelling or bruising or whatever. Pretty sure the REAL solution to that is over here in my hand.\n\nShe pursed her lips. Her natural first thought at the mention of someone throwing a condom full of cum at someone was naturally to find a chance to hurl it at Chloe. Randomly getting someone's cum flung onto you was WAY more grotesque and humiliating than a mere condiment like mustard\u2014and it would have also represented their personal victory over her in a very intimate way.\n\nBut then, on the other hand... wouldn't that be literally throwing pearls before swine? Kelly glanced at herself in the mirror, then turned her eyes to Stephanie, marveling again at how outstanding they looked today. Why waste our magic health and beauty elixir on HER, of all people? We don't even know for sure exactly what all this stuff can do.\n\nAfter a quick bit of washing up, the trio managed to dress themselves with only minor distractions necking and touching each other, and then they surveyed the hotel room for the very last time. A lot had happened in here over the weekend, and as silly and sentimental as it was\u2014Kelly found herself sad to leave it behind.\n\nThere was the pretty kickass truth or dare game we played Friday night under the pretense of GETTING TO KNOW EACH OTHER, goading them on 'til Stephanie actually dared Brian to go down on her. Pulling Steph into a kiss the next morning, and then... yeah a teensy bit more than a kiss. Tryin' on the Calamity Queen dress thing and kinda seeing for myself what Sarah feels when she does all her ridiculous elaborate outfits for conventions. Blowing Brian right in front of his ex, getting that epic load blasted all over my tits\u2014his stuff's gotta be magic, because it tastes INCREDIBLE. Gettin' fucked 'till I saw stars. Then all that crazy drown the slut stuff with Emily... Jesus, I get turned on just thinking about it.\n\n\"Can't believe we're leaving,\" Stephanie murmured in a small voice.\n\n\"Just until next year. We'll use this hotel again next time,\" Brian promised, putting his arms around her shoulders. \"This AnimeCon's still goin' on, so don't you go getting yourself depressed just yet.\"\n\n\"Yeah,\" Stephanie looked up at him with a sad smile.\n\n\"There's plenty of other stuff, too,\" Kelly proposed. \"Excuses for us to all meet up and get together now and then. Concerts, football games. Parties. Doesn't just have to be this geeky garba\u2014\"\n\n\"Yeah! Think there's a big renaissance fair coming up this fall,\" Brian remembered with a lopsided grin. \"With live action roleplaying and everything, we can ask Rebecca about it. Another excuse for us to all dress up and\u2014\"\n\n\"You guys are hopeless,\" Kelly rolled her eyes. \"Next thing I know, you'll be suggesting we get into that stupid dice-and-dungeon All-Quest stuff.\"\n\n\"Well, I do know a guy who runs a table,\" Brian mused with a smile. \"Could try giving him a call, he'd be thrilled to have some new blood at the\u2014\"\n\n\"Ooh,\" Stephanie beamed up at him. \"I've heard about All-Quest, but I never had a group of people to try playing with...\"\n\n\"Hah ha, very funny, dorks,\" Kelly said with a strained smile. Shit. I can't even tell if they're kidding anymore.\n\n\"I can regale you tales of that time I played Bj\u00f6rn, my homebrew Fistmancy Bloodzerker,\" Brian teased. \"Great guy, huge mustache. Never met a problem he couldn't solve with proper application of violence. Magic punches, mind you, and at ninth tier my damage output was insane\u2014\"\n\n\"I can shut you up with kisses,\" Kelly growled. \"Is that what you want, my tongue down your throat every time you relapse into more weeb bullshit?\"\n\n\"Relapse?!\" Brian let out an indignant scoff. \"And ack-shully, I'll have you know All-Quest games are a western discipline, so you construing it as\u2014\"\n\nKelly pressed in close, gripping the front of his shirt and silencing him with the softness of her lips. They kissed for a long moment, Kelly only releasing him to regard him with a stern look.\n\n\"Uh,\" Brian continued in his stuffy imitation of a nerd. \"You see, referring to it as weeb is just factually incorr\u2014\"\n\nShe leaned in again, this time slipping her tongue into his mouth and playing it against his for an exceptionally heated kiss that somehow stretched on for a lot longer than intended before she finally let him free again.\n\n\"I...\" Brian worked his lips. \"Huh. Forgot what I was saying.\"\n\n\"Good,\" Kelly grunted, turning to see Stephanie's blushing face. \"And what are you lookin' at, huh? Do you want kisses? 'Cause that's how you get kisses.\"\n\n\"I always want kisses,\" Stephanie sighed with a soft smile, and something about the cutesy delivery and the sparkle in the girl's blue eyes had Kelly's heart racing all over again. \"Kisses and kisses and kisses.\"\n\n\"Alright, that's it,\" Kelly huffed in exasperation. \"Everybody, clothes off. Looks like we're in for round two.\"\n\n\"Really wish we could,\" Brian lamented. \"We've gotta get moving, though.\"\n\nHe left the room keys on the dresser, they each took one last glance around, and then they all filed out of the room and out into the sunlight. Megan and Emily were still out in the pool courtyard waiting for them with the small pile of bags, costume pieces, and the Noblesse Oblique shipping box on one of the chaise loungers lined up beside the clear blue water. Several of the breakfast platter cartons were open nearby and Emily was gesticulating to Megan with an animated expression as she typed something into her phone, but Rebecca was nowhere to be found.",
        "\"Hey, Emmie,\" Brian greeted in a somewhat sheepish voice as they walked over to join them. \"Sorry\u2014were you all waiting on us out here?\"\n\n\"Oh hey!\" Emily beamed up at him, then shot an expectant look at Stephanie. \"Uhhh, how was it? How'd... everything go?\"\n\nBlushing furiously, Stephanie covered her face and hid against Brian, unable to reply.\n\n\"It was... great,\" Brian said.\n\n\"Everything was fine,\" Kelly assured Emily. \"I barely had to help them at all.\"\n\n\"You actually helped out quite a bit,\" Brian chuckled. \"Did Rebecca go on ahead to the convention?\"\n\n\"Think she was looking for a restroom,\" Megan said.\n\n\"Welll, next time you guys, are, um, wrestlin' around and stuff do you think I could help out a bit?\" Emily pleaded, batting her eyelashes. \"If you want? Pretty-please?\"\n\n\"Do you really want to wrestle around and stuff with me?\" Kelly asked Emily, pursing her lips into a cute pout. \"We can\u2014\"\n\nAn unexpected but all-too-familiar sound interrupted, and Kelly stared down at her purse in surprise for a moment before registering what it was; her phone was going off. That was sure to be Chelsea calling\u2014Kelly lived with her, along with Chelsea's boyfriend Devan and their one-year-old brat Skyler. This was probably the wake up call, finally arriving to jar her out of the impossible dream that was this weekend and back to cruel reality. \n\n\"Shit,\" Kelly swore, opening up her purse and pulling out her phone. \"Sorry, one sec, guys.\"\n\nNot wanting to leave them but needing a bit of privacy, Kelly took a small stroll away from her new friends around towards the other end of the pool. It was hard not to think of how distant and empty past Kelly felt to her now, and trying to put her back in that different mindset to address the vestiges of that life now had her shoulders tensing all over again. Figuring out how to stitch together the disparity between the Kelly from before and who she felt like she was now was going to take some work, and she took a deep breath before accepting the call and bringing the phone up to her face.\n\n\"Chelsea,\" Kelly greeted in a neutral tone. \"Hey.\"\n\n\"Hey, girl,\" Chelsea's soft sigh sounded out. \"Is it okay if I pick you up a little earlier today? Like, in about an hour? I told my mom she could have the car at two o'clock for her doctor's appointment thing. How'd things go with your sister?\"\n\n\"Um,\" Kelly's mind went blank for a moment at simply hearing Chelsea again. \"It\u2014well, it went. Long story...\"\n\nThe sound of Chelsea's voice reminded Kelly of her little space on the couch in their porch room that reeked of smoke and stale beer. Kicking off her work shoes and wadding up that greasy-feeling McBurger apron, or the stuffy Dollarydoos collared shirt, and letting herself fall heavily onto the couch cushions. Sliding tapes into the VCR slot of the old TV out there so that the pictures could play out silently\u2014the set's speakers had blown out long ago\u2014while she wearily messed around on her phone. The feeling of exhaustion and the maddening frustration that all of her efforts were just running her ragged but getting her nowhere, every single fucking day.\n\n\"Did she not take it well?\" Chelsea asked in her subdued voice. \"I hope she didn't\u2014Skyler, drop that. You drop that right now. That's not for you to play with. You\u2014give me that. Not for you to play with, honey. Er, sorry. I hope your sister didn't, like, flip out on you?\"\n\nIt was easy for her to picture Skyler's grabby little hands, because Kelly seemed to be babysitting him whenever she wasn't working one of her shitty grueling jobs. The tyke was cute, but his need for constant supervision was demanding when she already felt strained and stretched thin after her shifts. One-year-olds have no real concept of personal space\u2014her shoes, the scattered VHS tapes, Kelly's plastic ashtray, lighter, and her cigarette packs were all toys to him. She was using the box from Skyler's Toddler Table as her hamper, and more often than not she'd discover it tipped over and her clothing strewn around the tiny borrowed living area when she got home, simply because Skyler wanted to play with the box.\n\nIf I didn't keep all my good cosmetics here in my purse, can't even imagine the mess I'd come home to. Well, not HOME exactly, I guess...\n\nIt had never been a home, just a familiar place where Kelly existed while feeling miserable for herself. Somewhere to wile away the hours until her next work shift or the next time she could drink herself to sleep. Remembering her situation there evoked a mild sense of steadily deepening dread, recalling that maybe this is it, that maybe this is as good as it's gonna get, a life slipping into the cracks and just disappearing into obscurity after having fallen so hard and so far from what she thought she\u2014 \n\n\"No, she\u2014um,\" Kelly clapped a hand to her forehead, realizing she'd fallen silent for a moment too long. \"Listen, Chel\u2014how much money do I owe you guys?\"\n\n\"How much money?\" Chelsea asked. \"Umm. Maybe something like... sixty dollars? I think?\"\n\n\"No, I mean like, not just what I borrowed. Rent and my part of the bills and everything,\" Kelly clarified with some difficulty. \"I haven't been real great about paying you guys every month, and I know that.\"\n\n\"I think... I'd have to check with Devan,\" Chelsea's quiet voice sounded concerned. \"You're... it sounds like you're not coming back. Kelly... are you in trouble?\"\n\n\"I... don't think I'm coming back,\" Kelly confirmed. \"But it's the opposite of trouble, I guess. I think I'm\u2014it's like I'm getting a lot of things figured out? Definitely want to square things off with you and Devan, though. You've been way too good to me to burn you guys like that.\"\n\n\"I'll talk to him,\" Chelsea said, and then paused for a long moment. \"Am I... not picking you up from the anime convention, then?\"\n\n\"Could you actually... throw all my stuff in a bag or something and bring it by?\" Kelly asked with a wince. \"And, I can pay you guys whatever I owe you in cash.\"\n\n\"In cash?\" Chelsea repeated. \"Umm, Kelly you didn't...?\"\n\n\"Prostitute myself out to geeks at an anime convention?\" Kelly supplied with a faint smile.\n\n\"Hey\u2014Kelly, your words, not mine!\" Chelsea let out an uneasy laugh. \"I just, um, I didn't think that...\"\n\n\"Yeah, charged a nickel a go, and you wouldn't believe how much I earned,\" Kelly joked in a dry tone. \"Had a big line of guys all weekend, I've just been bent over letting them go at it while I count and roll all the coins, you know? Can I just give you loose change, is that cool? Don't want the other pimps making fun of you when you take your cut over to the Coinster machine at the Shop-n-Serve.\"\n\n\"Hah, Kelly...\" Chelsea's laugh was only slightly strained. \"You... didn't for real, though, right? The money, I mean. I thought that Kingsley Productions guy was just, um. Video, like filming stuff for the internet or whatever. Not like, escorting and stuff...\"\n\n\"I...\" Kelly's heart leapt into her throat and she felt a little choked up in realizing just how close she'd come to making a lot of really terrible decisions. \"Chel, I'm not escorting. I'm not gonna do the porno thing after all, either. I... don't know how to explain it and you'd never believe all the crazy shit going on, but things have like, completely turned around. I'm going to be okay now.\"\n\n\"What happened?!\" Chelsea sounded thrilled. \"Did your sister talk you into\u2014\"\n\n\"I found some good people,\" Kelly tried to figure out how she was going to explain this. \"And, they're gonna take care of me. I'm gonna take care of them.\"\n\n\"Good... people?\" Chelsea repeated in disbelief. \"People, like, as in a church community, or something?\"\n\n\"People as in, like a boyfriend and a girlfriend,\" Kelly admitted. \"Kinda.\"\n\n\"So... you're moving in with another couple?\" Chelsea sounded perplexed. \"Um. Is it... like...?\"\n\n\"Yeah, we're all\u2014I'm, uh, involved,\" Kelly admitted. \"It's complicated.\"\n\n\"Jesus. Kelly...\" Chelsea groaned. \"Are you... sure about this?\"\n\n\"I am,\" Kelly answered with growing confidence. \"I really am. This is it. I think I've found where I'm meant to be.\"\n\n* * *\n\nIt was a picturesque scene; a fiery-haired beauty walking alongside the lovely blue water of the poolside, while framed behind by the flowering plants of the hotel's cabana courtyard decor. The young woman had a long, confident stride and a presence about her that naturally commanded attention\u2014despite the gorgeous girls at his side, Brian still felt a little starstruck at the sight of Kelly, because Kelly impressed.\n\nNone of this weekend seems even remotely possible, Brian thought to himself, not quite daring to shake his head in disbelief.\n\nThe pensive look Kelly had worn while on the phone cleared up upon making eye contact with him, and she shot him a brilliant smile. A very Kelly smile, almost a lopsided smirk, one that appeared simply because he was watching. A smile just for him, a pleased expression, something to show how much she appreciated being noticed. There was an intentional bounce to her step when she realized he was looking her way, and as always, she was a mesmerizing sight to see.\n\nOr, ah, none of this seems probable? Brian fought to preserve his line of thought, which became exceptionally difficult with Kelly intent on distracting him. This whole weekend's just been... unreal. Like something out of a dream.\n\nBeside him\u2014clinging to his arm, actually\u2014Stephanie was absolutely radiant with happiness. He'd heard that a woman in love would have a certain glow about them, but this was the most definitive example he'd ever witnessed in person. Her adorable cheeks curved in a cherubic smile, and every glance from her seemed to pour out unadulterated joy, as though her feelings were just continuously spilling over and she simply couldn't help but share them with everyone around her.\n\nIt quickly became clear that he wasn't the only one to notice.\n\n\"Geez, Steph\u2014 you're too much,\" Emily teased, sharing a knowing look with Brian.\n\nThe familiar way Emily gazed at him had begun to change, too. After knowing each other for so long he was adept at reading her, but now some unfathomable distance between them had been bridged and the meaning in her eyes was so much more bright and vivid. Brian knew Emily, but at the same time he could see there were untold volumes more still to discover that had somehow gone unspoken all this time.\n\nI. Love. You, Emily seemed to say, and that familiar taunting grin of hers seemed to be slowly struggling with something more intimate and honest. So much. I love you and love you and love you and love you.\n\nUnable to stop himself, he reached his hand out towards her.\n\nHer reaction was priceless\u2014Emily's face seemed to waver between the one she meant to show him and several other ones she'd have liked to keep to herself. Each one was more interesting than the last, but after a split second she regained her composure into a very Emily grin and instead slapped his extended palm in a high five.\n\nEmily... seriously?\n\nWhen she held out her hand for him to return the favor, Emily found herself grabbed. There was no escape for her\u2014because as if reading his mind, while Brian took one of Emily's wrists, Stephanie beside him captured the other. Together, they pulled the startled Latina with the bright blue pixie-cut in close to them.\n\n\"Oi, oi, oi!\" Emily pretended to struggle for a moment before breaking into a fit of giggles.\n\n\"Emily...\" Kelly sighed as she finished her approach, shaking her head in apparent dismay. \"What the fuck was that.\"\n\n\"What, nobody gives high-fives around here?!\" Emily protested, blushing as Brian and Stephanie both squeezed her tight. \"Errghh, c'mon guys, it's\u2014\"\n\n\"Emily, here,\" Kelly goaded, holding up her palm. \"High five.\"\n\n\"Yeah!\" Emily lit up, squirming an arm free to throw out towards Kelly. \"That's what I'm\u2014 hey wait you traitor!\"\n\nBrian turned to discover Kelly had caught Emily's hand and gently cupped it against her own cheek, allowing the girl's thumb to fall between her lips for a soft, surprisingly sensual kiss. Stephanie giggled at the sight and that seemed to spur Kelly on even further, the taller girl closing her eyes and drawing Emily's digit into her mouth in an increasingly erotic display.\n\n\"Whew lawdy,\" Megan interjected, fanning herself with one hand. \"You all are crazy. Like, it goes from zero to yaoi sparkles and blooming flowers in three seconds flat, here.\"\n\n\"Yaoi sparkles?\" Brian questioned, arching an eyebrow at the girl.\n\n\"Uhh\u2014yeah slip of the tongue,\" Megan chortled. \"Yuri sparkles? Is that a thing? It's probably a thing. Y'all know what I mean, like in shojou manga where the backgrounds are all oooh\u2014\"\n\nTurning his attention from the jazz hands Megan was throwing to Emily's flustered but half-hearted attempt to escape, he couldn't help but feel that inkling of doubt again. The situation was goddamned arousing. Impossible. Emily's small chest was pressed up against him, and she was hemmed into place there by Stephanie and Kelly who were by themselves the kind of perfect flavors of sex appeal that would easily turn heads anywhere. He'd always wanted to believe in good karma, believe that someday his luck would turn around, but actually watching it do so over the course of a weekend was\u2014well, still a little unbelievable.\n\nStupid to question a good thing, though, Brian chided himself. Right?\n\nWas there a limit to how lucky he could be all at once? Was he somehow tempting fate, had he exceeded some mortal threshold for how many good things were allowed to happen to him all at once? Winding up with even one relationship that felt like this it felt like life was being unexpectedly\u2014almost suspiciously\u2014generous. Let alone hitting some sort of triple multiplier like this.\n\nIs the game... broken? Brian tried not to wonder. This weekend\u2014this AnimeCon, it feels like my personal RNG is just way, way off. Like, I shouldn't complain, I KNOW I shouldn't, but it's like... it's like any moment I'm just waiting for it all to come crashing down. Expecting the luck to abruptly run out, thinking that some other shoe has to drop. It's so...\n\n\"Brian\u2014I feel the same way,\" Stephanie confided, giving him a look of adoration that was liberally spiked with her sweetened special blend of unbridled attraction. \"About everything. About this whole weekend.\"\n\n\"I\u2014hey now, Brian said, showing her an uncertain smile. It was impossible to look away. \"I didn't even say anything,\"\n\n\"You don't have to,\" Stephanie whispered softly. Behind her glasses, those beautiful blue eyes seemed to tempt him in deeper and deeper. \"I can tell!\"\n\n\"You can?\"\n\n\"I can!\" Stephanie assured him with a serious nod that made her pink bangs bob. Everything about her when she was trying to be candid somehow came off as incredibly cute. \"I can tell, because it's the same for me. Good things just\u2014they just don't happen to me. Not like this. Not until this weekend. Then, everything all happened at once!\"\n\n\"Hey it wasn't all rainbows and Butterbees!\" Emily protested. She'd given up on escaping them and decided to latch herself onto Brian, looping her arms around his neck. \"All that crazy bad shit happened, too\u2014\"\n\n\"Butterbees?\" Kelly asked with a skeptical look.\n\n\"It's a\u2014\" Brian began.\n\n\"It's from Monster Battlers,\" Megan chimed in. \"Butterbee; evolves from a Honeygon at level twelve. Honeygon as in like, hexagon, 'cause in real-life beehives they\u2014\"\n\n\"I get it, I get it,\" Kelly winced, holding her hands up. \"So, a geeky video game reference. I get it.\"\n\n\"And then, Butterbee later evolves into Sweetqueen!\" Stephanie teased, grinning at Kelly. \"At level thirty, I think?\"\n\n\"Do you want kisses?\" Kelly growled again, shooting Stephanie a playful look of anger. \"'Cause I told you; that's how you get kisses.\"\n\n\"I said it because I want kisses,\" Stephanie beamed, not letting go of Brian's arm but leaning over in Kelly's direction.\n\nTo Brian's surprise, Kelly's playful facade seemed to melt away beneath the blazing heat of Stephanie's smile, revealing a very genuine look of love. With an exasperated sigh and some clearly feigned reluctance, Kelly crowded in over Emily's shoulder and puckered her lips to shower Stephanie with repeated\u2014and rather noisy\u2014kisses.\n\n\"Muah,\" Kelly smacked her lips against Stephanie's with a wet sound, then greedily lunged in for more and more. \"Muah, muah, muah, muah.\"\n\n\"Okay\u2014uh, whoa,\" Megan commented in a small voice from the sidelines.\n\n\"You guys are gonna be a real bitch to reform,\" Kelly complained, but the look in her eyes as she examined Stephanie again from up close seemed to express a very different sentiment. \"What a bunch of weebs...\"\n\nOkay, so... there's definitely a ton going on here. Though a little surprised, Brian didn't find himself as taken aback as he thought he would be.\n\nAgainst all expectations, Kelly had really opened up, and his first rather negative impression of her had been overturned again and again over the course of the weekend. Since meeting her on Friday, it was as if all of her prickliness had been sheared away bit by bit, the stinging barbs he kept thinking she was about to hit them with were completely blunted. Her personality was certainly still sharp, but the leading edge of that was no longer directed at them. The air of superiority she'd been projecting that first night was smothered beneath what appeared to be budding feelings of affection, like she actually, truly cared for each of them.\n\nIt's all just so... WEIRD? Brian thought to himself, forced to once again reevaluate his estimation of Kelly. Like, it doesn't even feel fair to question her after everything she's done for us, and she's done A LOT, but...\n\n\"Nah, we're totes gonna get you playing too,\" Emily insisted, sticking her tongue out at Kelly. \"We'll get it loaded up on your phone so we can all play together. Hey, we can form our own Monster Battlers cadre!\"\n\n\"What, now you need shut up with kisses, too?\" Kelly narrowed her eyes at the girl. \"Am I a joke to you?\"\n\n\"Well, we need six for a cadre, right?\" Emily continued on undaunted. \"Brian and I play, Steph obviously plays, Rebecca plays a little bit\u2014or at least, she used to, I got her started\u2014Megan you play, right? With all of us together, we can\u2014mmph!?!!\"\n\nBrian blinked, watching on in amazement as Kelly pressed in to give Emily a rather passionate kiss. The sight shouldn't have fazed him after everything their little group had been through together last night, but it did still add to how unreal everything felt. Someone was making out with his Emily, right there in front of him. A gorgeous girl was making out with Emily. \n\nI should probably be feeling... I don't know, jealous, right? Brian felt himself heating up, but it wasn't with jealousy. Or, or CONFLICTED, or something. Kell just kissed Stephanie. Then, she kissed Emily. But then instead it's like... all of us have been kissing each other, it's... like, fuck how did we get neck deep into polygamy so damned fast? More than neck deep, even. I've made love to ALL THREE of these girls in like, the past ten hours or so. That's... that's impossible, right? This is some kind of fever dream? This is\u2014\n\n\"Brian,\" Stephanie addressed him in a comforting voice. \"It's okay.\"\n\nHow do you DO that? Brian regarded Stephanie with a smile. Does my face really gave away that much?\n\nOn the one hand it seemed implausible, but then on the other\u2014it was hard to refute the girl's powers of observation with the hungry way her eyes seemed to drink him in, the burning thirst for him that had been ignited in Stephanie. Something about the way she seemed to totally fixate on him every time she turned his way suggested that her appetite for more of him was utterly insatiable. As if she was ravenous for every little minute detail he might display\u2014how could she possibly miss any of the subtle tells his expression gave away?",
        "\"Any more weebery from you, Kitten?\" Kelly's eyes flashed and she wet her lips as if searching for every last lingering trace of Emily's lips to savor. \"Or have you learned your lesson?\"\n\n\"Uhhh,\" Emily seemed at a loss for words for once. \"Uhhh\u2014Brian, she's bullying me!\"\n\n\"Yeah, but you love being bullied,\" Kelly said, releasing Emily from their three-way hug with a dismissive smirk. \"There, happy? And hey\u2014did anyone save us any breakfast?\"\n\n\"Yeah,\" Megan spoke up, picking up one of the cartons in a daze. \"Uhh. Rebecca wouldn't let us touch this one, said it's for you guys. Girls. Guy and girls. Y'all.\"\n\n\"Cool, cool,\" Kelly nodded, accepting the breakfast platter with a grateful nod. \"Where is Reb\u2014whoa, this is heavy\u2014where is Rebecca?\"\n\n\"Combined most of my leftovers into that one,\" Emily said. \"I'm smol, my tummy doesn't fit much. And, I think Rebecca ran off to find a restroom?\"\n\n\"Well, here, then,\" Kelly sat down on the nearest poolside lounger and settled the carton in her lap. \"Brian, Steph\u2014help me finish all this. Forks\u2014where's the forks?\"\n\n\"Here,\" Megan offered.\n\n\"Thanks.\"\n\n\"Was that your workplace on the phone back there, Kelly?\" Stephanie asked as she settled in to sit next to Kelly on the lounger. \"Brian\u2014sit and eat!\"\n\nHesitating for only a moment, Brian grabbed the adjacent lounger and dragged it closer so that he could huddle in with them. It was strange but not unpleasant seeing an increasingly assertive Stephanie. Unlike when Chloe had commanded him to do something, Stephanie didn't seem to be bossing him around. There was an insistent love in her tone, and she eyed him with a nervous smile as if to ask if it was okay. By contrast, each time Chloe had tried to dictate his actions, it had added into this ever-growing weight of dissatisfaction until their relationship was straining with tension.\n\nStephanie telling him what to do somehow made her even more endearing, and he was happy to comply.\n\n\"No, it was... a friend,\" Kelly paused. \"Chelsea, she was going to pick me up. That was the original plan, from, you know, from before. I asked her to just bring my stuff. If... uh, yeah if it's still cool that I'm staying with you, Brian. If... this is all happening for real?\"\n\n\"Yeah, of course,\" Brian nodded, putting his hand on her knee to give her some reassurance.\n\nIt was unsettling seeing Kelly reveal her uneasiness in the way she spoke like this, but that she did so instead of putting on a front for them was also touching. In truth, he felt a little overwhelmed at the reminder\u2014from now on they were going to be cohabitating, and everything felt like it was happening too fast. He didn't think he was having second thoughts, exactly, just the reality of their situation seemed to creep up on him and pounce when he least expected it.\n\n\"Probably shoulda asked, huh?\" Kelly gave him a weak smile. \"Like, I know you said it'd be cool if I stayed with you for a while, but I shouldn't have assumed you meant like, right away or anything, I just...\"\n\n\"No, it's totally cool,\" Brian gave her leg a squeeze. \"No sense in delaying, right? I live a few hours away depending on traffic, but there should be time tonight to start getting you settled, and then you can unpack and make yourself at home or whatever tomorrow while I'm at work.\"\n\n\"Okay, cool,\" Kelly looked relieved.\n\nAfter a moment of thought, she oriented her forkful of scrambled eggs towards him so that she could feed him a bite. He obliged, leaning in and accepting it. It was hard not to once again compare the massive difference in treatment with the way things had been with Chloe\u2014Chloe would have never been caught dead even sharing a utensil with him.\n\n\"Cool,\" Emily echoed in agreement.\n\n\"Cool,\" Stephanie said, trying her hardest not to sound wistful. She took a bite from the breakfast platter with her fork and chewed for a moment, but in the end couldn't stop herself from saying more. \"Oh my gosh, I'm so jealous, though!\"\n\n\"Cut class for a few days and come stay with us?\" Kelly's lip quirked into a mischievous smirk.\n\n\"Hey\u2014!\" Megan pouted. \"Don't tell her that! Stephie has like, perfect attendance!\"\n\n\"I really want to, though,\" Stephanie admitted, turning a pleading look towards Brian. \"I mean, maybe... maybe I should...?\"\n\n\"Fuuuck, just remembered I totally bailed on my Saturday shift yesterday,\" Emily squeaked, dropping her head into her hands. \"After trading shifts with Karen and everything. I'm totally fired.\"\n\n\"Same,\" Kelly chuckled. \"Gonna no-show mine tomorrow morning. Fuck gainful employment, am I right?\"\n\n\"Fuck, yeah but I'm broke and I hate job-hunting,\" Emily groaned. \"It's literally the worst. Applications, ugh. Interviews. Orientation. Filling out all that bullshit paperwork and starting all over again from the bottom again. Why can't I ever be smart?\"\n\n\"Will can probably get you a job at Marino's Pizza,\" Brian suggested with a wry smile.\n\n\"Fuck Will,\" Emily spat. \"Goddamn creep. Asshole. Piece of shit. No.\"\n\n\"Hey\u2014Will's not so bad,\" Brian laughed, leaning in to allow Kelly to feed him another bite of breakfast.\n\n\"Oh, don't even get me started,\" Emily warned.\n\n\"Kelly... why don't you call into your work and explain?\" Stephanie pressed. \"Wouldn't it be better starting off there, if you could just transfer?\"\n\n\"Ugghh,\" Kelly made a face. \"Really don't wanna.\"\n\n\"Where do you work?\" Emily asked.\n\n\"A Dollarydoos, here in the city,\" Kelly sighed. \"You?\"\n\n\"Lucca Italiano,\" Emily grumbled. \"Hoighty-toighty fancy-shmancy rich twat fine dining joint. I'm a waitress\u2014serving staff\u2014whatever, or well, I guess I was.\"\n\n\"Do you know for sure you're fired?\" Brian asked, pausing to accept another fork full of eggs, this time from Stephanie. \"I mean, maybe they'll just write you up? Or, if you have a good enough excuse\u2014\"\n\n\"Nah,\" Emily shook her head. \"Just... nah. This'd be like, my fifth write-up there anyways. I hate that place, and everyone there hates me.\"\n\n\"That sucks,\" Megan huffed. \"Sounds stressful. And I've never even had a job!\"\n\n\"Wait, like, never?\" Emily asked.\n\n\"Nope!\" Megan answered.\n\n\"How old are you...?\" Emily asked. \"I mean, no offense or anything, but...\"\n\n\"From what I gather, you guys live in... like, a real wealthy area?\" Kelly asked, looking from Brian to Emily.\n\n\"Yeah,\" Emily made a face. \"Sorta? I live with my mom and my sister, in like, an upper middle-class neighborhood? Brian used to be in with the real rich pricks with the mansions and shit\u2014his god awful parents, don't ask\u2014but then he was at Aunt Mattie's, and now he's got an apartment kinda just on the outer edge of town.\"\n\n\"Don't ask?\" Kelly probed, turning to regard Brian.\n\n\"I\u2014err, yeah, don't ask,\" Brian grimaced. \"Long story.\"\n\n\"Not good people,\" Emily scowled. \"They were the worst. Fucking goddamn pieces of\u2014\"\n\n\"I won't ask, then,\" Kelly cut her off, holding her hands up. \"Not my business until Brian ever wants to talk about it.\"\n\n\"Okay, yeah,\" Emily nodded, trying to forcibly relax. \"Good.\"\n\n\"I've got all sorts of shit in my past,\" Kelly said with some difficulty, swiping up the last bit of food from the carton with her fork and tucking it into her mouth. \"Is it... I dunno, you think we should like, get it all out of the way before I try living with you? To make sure this is gonna work?\"\n\n\"You tell me whatever at your own pace,\" Brian shrugged. \"And we'll work through it together.\"\n\n\"That's... great,\" Kelly managed. \"Okay. Thank you. Really\u2014thank you.\"\n\nThe group lapsed into silence for a minute, with Megan awkwardly fidgeting while Stephanie took Kelly's hand and gave it a reassuring squeeze.\n\n\"Well, uh. Fuck,\" Emily finally grunted out, ambling up to her feet. \"The hell's taking Rebecca so long? Convention time's a-wastin'. Should I go check on her?\"\n\n\"Sure,\" Brian said, collecting the scattered breakfast cartons and cramming them back into the plastic bag. \"We can take some of this stuff out to my car. Steph, you want to leave your bag in my car for now while we head over to the con?\"\n\n\"Um... we can do that,\" Stephanie nodded. \"I think. Megan, are you still parked...?\"\n\n\"Yeah, way over at the Sherriott,\" Megan said. \"Sorry.\"\n\n\"No, no, it's fine,\" Stephanie stood and swept the lap of her overall shorts with her fingertips.\n\n\"This has all been... this whole morning's been really, really great. But, I'm super excited to get back to the convention, too!\"\n\n* * *\n\n\"Rebeccaaa?\" Emily asked, leaning into the Westerlin's public restroom and peeking inside as she rapped a knuckle against the door in a seven note shave and a haircut riff. \"Chinga tu madre\u2014cabr\u00f3n!\"\n\n\"Emily!\" Rebecca's shy voice issued out from the farthest stall. \"What if someone else was in here?! You realize I know that you're swearing!\"\n\nBack when Rebecca had first been introduced to their friend group and they discovered she didn't approve of their constant bad language, Mike, Will, and Emily would switch to Spanish curse words as a joke. Brian and Chloe had simply been more careful with what they said, one of the other two Rebeccas they knew\u2014Becca\u2014would swear in French, and of course Tanya who was perfectly fluent in Russian didn't care at all and continued to swear colorfully in English regardless of how exasperated that made Rebecca.\n\n\"Yeah, uhh. I just wanted to check on ya,\" Emily called. \"You okay in there? We were all about to head back over to the con.\"\n\n\"I'm okay!\" Rebecca drawled out in exasperation.\n\n\"You're okay?\" Emily teased.\n\n\"I'm okay!\" Rebecca repeated in a huff. \"Geez.\"\n\nThere were some rustling sounds that Emily guessed would be Rebecca adjusting her tunic, and then she heard the clack of the stall's lock sliding out. Rebecca emerged, blushing furiously. The embarrassed expression was a surprise\u2014and there had been no flush of the toilet, so Emily immediately felt her suspicions rouse as she inspected her friend with interest. Awkward expression aside, Rebecca still looked rather dashing in her viking getup, and there didn't seem to be anything amiss with her tunic.\n\n\"You're okay?\" Emily prodded.\n\n\"Would you stop it!\" Rebecca scolded her, crossing over to the sinks to wash her hands. \"I'm okay! I just had to... powder my nose and freshen up!\"\n\n\"Okay, okay,\" Emily held her hands up with a grin. \"I was just concerned, 'cause your face is all red, and there's this weird musky sex smell in here, so\u2014eek!\"\n\nHands still under the running water from the faucet, Rebecca was now twisting to flick water in Emily's direction. The spry Latina only just managed to duck back out of the restroom and pull the door shut to avoid a spray of droplets. After peeking back through the slit doorway for a moment to see her friend had finished washing up and was drying her hands, the grinning Emily swung the door back open and reentered.\n\n\"I mean are you coming, or not?!\" Emily laughed. \"C'mon, convention time's a'wastin'!\"\n\n\"Here,\" Rebecca shoved a lanyard with an AnimeCon badge at Emily with a pout.\n\n\"Uhh, thanks,\" Emily said. \"I already got one, though?\"\n\n\"That one there is Brian's, and no, you don't have one,\" Rebecca reminded her. \"Mr. Gary gave us single-day passes yesterday\u2014those were only good for Saturday. There was a colored strip on the bottom that says so! Today, you and I have to buy new single-day passes.\"\n\n\"Ugh, do we have to, though?\" Emily balked, making a face. \"If we just wear yesterday's single-day ones again, no one will probably notice.\"\n\n\"Emily...\" Rebecca warned her.\n\n\"Fine, fine,\" Emily rolled her eyes. \"Whatever, I haven't even spent any money yet this weekend. It's whatever. I'm just sayin'.\"\n\n\"I'm going to hold onto this, for safekeeping,\" Rebecca stated, holding up the harem charm.\n\nRebecca had taken it off the lanyard, and Emily couldn't help but look at the wooden trinket with total fascination. This little novelty nicknack that had been collecting dust on the little curio beside her desk for ages, alongside chibi anime figurines and bobbleheads and other random junk she decorated her room with. Now, the little slat of wood with the Japanese characters carved into it was magic, probably, it was a focus of power or a mystery macguffin or an occult catalyst or something special.\n\n\"...Okay,\" Emily nodded.\n\n\"Okay?\" Rebecca arched an eyebrow.\n\n\"Yes. Okay,\" Emily reached out and closed Rebecca's hand around the charm. \"It's safest with you, for now. You're responsible, and I trust you.\"\n\n\"I was worried you were going to want to play around with it,\" Rebecca admitted. She opened up one of the leather pouches hanging from her belt and carefully secured the charm inside.\n\n\"I do want to play around with it,\" Emily confirmed. \"But, not today, and\u2014I realize it's a big deal, and maybe dangerous, and I don't want anything happening. I can be responsible and make good decisions too, you know! Geez.\"\n\n\"Good,\" Rebecca gave her a proud nod.\n\n\"That said...\" Emily quirked her lip. \"It is Brian's. I gave it to him, and it also belongs to him, like... magically? If he's the focus of the harem thing. We're gonna have to return it back to him, at some point.\"\n\n\"Agreed,\" Rebecca said. \"As soon as you're willing to tell him what we think it is, or what we think it does, then I'll give it back to him.\"\n\n\"Ugghh,\" Emily groaned. \"We'll see. I mean, yeah, yeah. I get it, I get it. Responsibility.\"\n\n\"Either you or one of the other girls needs to tell him at some point,\" Rebecca prodded. \"The sooner, the better.\"\n\n\"Ehhhh,\" Emily looked away.\n\n\"Emily,\" Rebecca gave her a stern look.\n\n\"I mean, I totally get what you're saying!\" Emily blustered. \"But, I can't do it. No way. Maybe Stephie or Kelly can figure out how to break it to him, but with the way things have gone between Brian and me? With stuff like that? Just, nooope, nah, no way, won't do it. Can't do it.\"\n\n\"You can't keep the truth from him,\" Rebecca sighed. \"Emily, the sooner you tell him what's going on, the sooner you don't have to worry about it anymore. Do you really want this hanging over your head the whole\u2014\"\n\n\"I know I know I know!\" Emily threw her hands up. \"But, I really, totally, completely can't do it. Can't be the one to tell him. Call me a coward if you want, I can't do it.\"\n\n\"You're not a coward,\" Rebecca assured her. \"I think that if\u2014\"\n\n\"I don't care if it makes me a coward, Rebecca\u2014he'll hate this,\" Emily growled. \"I know Brian. If there's any chance we're being influenced by the charm stuff, and uh, yeah we kinda all are, he'll hate it. He'll doubt my feelings, he'll think they're not real, that it doesn't count and it'll fuck all of this up right back to where it was but worse, and maybe ruined forever. I can't risk that.\"\n\n\"That might be,\" Rebecca furrowed her brow. \"But, it's still his right to know, and his judgement to make. If you really love him, you need to come clean about this whole thing.\"\n\n\"Don't even go there,\" Emily gritted her teeth. \"You know I can't poison this, you know I\u2014I need this. Rebecca.\"\n\n\"What if I broke the charm in half, and these things you're feeling right now for Brian just disappeared?\" Rebecca asked.\n\n\"They wouldn't,\" Emily snapped back. \"I loved him before.\"\n\n\"Then, it doesn't matter if I break it?\" Rebecca arched her eyebrow and put a hand to the pouch at her hip.\n\n\"Wait wait wait no just\u2014don't,\" Emily lunged in to stop Rebecca's arm. \"Please, don't fuck around with me right now? You're being\u2014\"\n\n\"That's the line of thought Brian will probably have,\" Rebecca warned her. \"When he finds out about everything. To him, if the feelings you girls have are real, then him breaking the charm will prove it. So, I want you to think about that, Emily. Really think about it. This isn't something you can put off or delay forever. The longer you wait, the more of a problem it's going to turn into. Okay?\"\n\n\"...Yeah,\" Emily finally managed to bite out. \"Okay.\"\n\n\"Please don't hate me for this,\" Rebecca pulled Emily into a tight hug. \"I'm telling you these things because I'm your friend. Okay?\"\n\n\"I don't hate you,\" Emily was still gritting her teeth. \"Just, I hate this. I know you're a good friend. My best friend. I'll appreciate you to death for all this later probably. Maybe. Just, right now...\"\n\n\"We'll figure out as much as we can about the charm magic stuff first,\" Rebecca promised. \"Maybe it only has effects when in proximity to the charm, or to Brian, or something. Maybe it's a limited-time thing, and the blue will be gone from your hair tomorrow. Or in a few days. Maybe to be affected, you have to keep touching the charm every time. We don't know.\"\n\n\"We don't know,\" Emily echoed.\n\n\"Brian would be more... receptive, if any of those things were the case,\" Rebecca said, patting Emily's back but not yet releasing her. \"Right?\"\n\n\"Right,\" Emily took a deep breath. \"We figure it out. You keep the charm safe. It's a real working magic harem charm. It's real magic. It, uh, yeah it definitely seems to amp up attraction to Brian a bit, and maybe some other stuff, too... but that's like, just one component of what's going on, and we can explain that to him that there's more going on. It's also handing out free superpowers. Free magic superpowers, so a little bit of influence on the side is practically\u2014\"\n\n\"I don't think they're superpowers,\" Rebecca rolled her eyes.\n\n\"They are to me,\" Emily shrugged. \"I don't care if they seem minor or like small fry stuff compared to powers in anime or cape flicks or whatever. They're supernatural powers, and they're ours, and this is probably our only chance to ever have them.\"\n\n\"Do you feel like you're closer to discovering yours?\" Rebecca asked.\n\n\"Yes,\" Emily gave her a serious nod. \"Kinda. It's not much, it's like, a tickle, but it's definitely a whole new thing, like a whole new sense or something that I've never felt before. Whatever it is.\"\n\n\"We don't know how any of this works, or if it's dangerous,\" Rebecca sighed. \"Should we really be messing around with it? With the dreamscape thing, or interacting with each others minds or emotions or\u2014\"\n\n\"We're not messing around with it!\" Emily said, struggling out from Rebeca's embrace. \"We have you. We're responsible!\"\n\n\"We're all under the effect of something like charm person,\" Rebecca said. \"It's influencing our thoughts\u2014suggestibility, attraction, our emotional connections. I'm not even comfortable telling you why I had to run off to this restroom, but I can definitely say it's because of something I would never normally do. Emily, messing with these things, it's dangerous. Maybe even moreso if Brian isn't actually in control or even aware of the extent to which we're in an altered state.\"\n\n\"Oh, c'mon\u2014Steph and Kelly got magic powers!\" Emily argued. \"You did, too. I'm like, right on the verge of figuring mine out, maybe. You've got to give us some time. We have this whole dreamscape thing goin' on that connects all of us! And\u2014I love him. You know that. I always have.\"\n\n\"You seem to be putting a lot into the whole magic powers angle,\" Rebecca pointed out. \"Is that the real factor, for you? For instance, if this was someone other than Brian. Say you get magic powers, but it means you feel attraction to someone else instead of Brian\u2014would you stay on for the powers, or break the charm?\"\n\n\"I\u2014\" Emily scrunched up her face for a moment as she thought about it and finally let out a heavy sigh. \"I'd... break the charm. Fantasy magic shit is amazing, but it'd make me feel sick and eat me up inside if the harem focus wasn't Brian. I don't just feel that way now, either\u2014I've always felt that way.\"",
        "\"And, you're sure?\" Rebecca pressed.\n\n\"Yeah,\" Emily gave her friend a pensive look. \"I think ever since Josh I've felt that way. He was a great guy, but what I feel for Brian wasn't there. Josh was attractive, but I never wanted to kiss him. He was even so patient with me and was never pushy about any of it. At the time I was thinking I just needed to, I don't know, force myself to bear with it, that once I got over Brian some mental block would disappear and I'd be normal and have feelings for Josh.\n\n\"But... what I feel for Brian isn't something that you just get over,\" Emily said. \"It's a part of me. It's been a part of me since I first met him, and it's only gotten bigger and stronger the longer I've known him.\"\n\n\"Okay\u2014you're in love with Brian,\" Rebecca diagnosed. \"To me, that means you shouldn't even feel threatened about breaking the charm, because it seems like your feelings aren't going to change. You realize that Stephanie and Kelly are also involved, and they're going to get more and more involved the longer this goes on? Are you okay with that? Really okay with that?\"\n\n\"I am,\" Emily promised. \"With them being in this, and even with you being in this. None of it's what I would have ever expected, but... I feel like we're all good for each other, like each of us is a little lost on our own, but when we're together we're better. More than the sum of our parts, or whatever. Maybe the charm is magically suppressing jealousy and stuff, and maybe it isn't.\"\n\n\"You think it might not be?\" Rebecca cast her a doubtful glance.\n\n\"I think that's mostly Stephanie,\" Emily shrugged. \"Stephanie, and the way her power works\u2014it like, it connects us all together in just the right way. There's no room for doubt or duplicity or whatever when you're tapped into each other's feelings. The raw sincerity of everything is just right there out in the open. I think that winds up hitting Kelly and I the hardest, because both of us have big trust issue stuffs\u2014but that's all mostly mental, and Steph just bypasses right around that entirely with emotional connection.\"\n\n\"That's... an astute observation for you to make,\" Rebecca remarked.\n\n\"How is it for you?\" Emily asked. \"I know you're a lot more complicated than you seem. And, that you have a lot going on that you don't talk about, and that's always been cool. I mean, no not cool, but like\u2014same. I'm the same. Wouldn't even know where to begin untangling my own weird problems, not going to pry into yours. You're my best friend, but you're a private person, and I've always respected that. Right?\"\n\n\"Yeah,\" Rebecca said.\n\nLapsing into silence for a moment, the two girls meandered across the hotel lobby and towards the door that led out into the patio area, but didn't rejoin Brian and the others just yet.\n\n\"Asking you to take some leap of faith into whatever the fuck this is, when you didn't have feelings for Brian to begin with\u2014I can't do that,\" Emily reasoned. \"I want to, I want you to be a part of all of this. But, it's a lot, and I get that. Right now, I think you need some space to think about what you want to do. Then, at some point us girls can all get together for the first official harem meeting, and we'll work everything out.\"\n\n\"Emily\u2014you stop that, right now!\" Rebecca gave her a playful thwap on the shoulder. \"I'm the responsible one who shares wisdom and insight! You stop being reasonable right now! What's gotten into you?!\"\n\n\"I don't even know!\" Emily threw her hands up in exasperation. \"Brian, obviously. Steph's mind magic or feels magic or whatever, too. Going by my river metaphor, it feels like a lot of my major hangups or blockages finally got washed away and things are moving again. I feel amazing. I feel better than I've felt in a long time, and in like every single way. I can't even put it into words.\"\n\n\"Well,\" Rebecca sighed. \"I am very happy for you. But, things were completely platonic between Brian and I until I got charmed. I don't know that it's a good idea for me to be... involved with him, especially if all of you are. I don't like things to be complicated and messy, Emily.\"\n\n\"Okay,\" Emily tried to choose her words carefully. \"Do you want out of the harem? That's... I mean, I get it. It's reasonable. Soon as we figure out how, we can\u2014\"\n\n\"I don't know what I want,\" Rebecca admitted. \"But... I don't know. I'm past the initial squealing in excitement phase of discovering something really magical, and... honestly now I'm a little rattled. When Stephanie and Brian were, um. Making love. The whole dreamscape went up in pink flames and I... couldn't shut it out at all. The feelings, the\u2014what she was experiencing. You know.\"\n\nRebecca studied Emily for a moment, looking unsure of herself.\n\n\"I, um, I was kind of afraid you were going to give me a hard time for even admitting that,\" Rebecca said. \n\nEmily instead immediately lunged in to hug Rebecca again.\n\n\"Not about that,\" Emily said in a soft voice. \"You're being serious, and... Jesus, Rebecca. I'm so sorry. Just the thought of it, of that kind of thing going on but you can't stop it from happening and don't want it, Rebecca... doesn't that pretty much basically kinda make it ra\u2014\"\n\n\"I'm not going to consider it that,\" Rebecca cut her off. \"I know she didn't have that kind of intention and I don't think that anyone was at fault. It wasn't even... bad, completely, it was just, the situation was frustrating and uncomfortable and kind of shows me how much potential for danger is there.\"\n\n\"Are you okay?\" Emily asked.\n\n\"I am, I'm okay!\" Rebecca promised. \"A little bit more nervous about the harem stuff than I was before. I don't think I would've minded being exposed to... Stephanie's experience, if I'd had some warning first. It was interesting and exciting and incredible sharing that... moment, with her. Just... think, Emily. What if it had happened while I was in the middle of assisting one of the residents at work, or while I was driving on the Interstate? Or trying to spend time with my grandparents?\"\n\n\"You're right, you're right,\" Emily gave her a sober nod. \"That wouldn't be good. We'll figure it out, I promise. And, if we can't figure it out and make it safe\u2014we can talk about breaking the charm.\"\n\n\"I'm not trying to be a negative Nancy about this,\" Rebecca gave Emily a squeeze and then gently pushed her away so that she could examine her at arm's length. \"I'm just concerned.\"\n\n\"You're not being negative, you're being right,\" Emily said. \"Absolutely right. I'm\u2014well, I'm caught up in everything and I don't have the clearest head about all this just yet. So, thank you for being the dependable one. We need you. You're sure you're okay?\"\n\n\"I'm okay,\" Rebecca promised again. \"Like I said, it wasn't bad. It was very... special, being able to share Stephanie's moment like that. It was very... wow.\"\n\n\"Yeah, I know what you mean,\" Emily ran a hand through her hair. \"It's not even like I had real experience to compare it to, but the charm magic stuff definitely amplifies a lot of what's going on during, uh. Sex stuff. They kinda drowned me in it last night. Or, maybe that's just another Stephanie power thing, the emotional aspect taking it to another level? Or something.\"\n\n\"Whatever it is... I'm going to keep my distance from Brian for the rest of this weekend,\" Rebecca cautioned. \"I want you to keep some distance from him too until we're more certain of what's going on, but I don't think I can ask you to do that.\"\n\n\"I... yeah,\" Emily blushed. \"Sorry. Thank you.\"\n\n\"So. What I'm going to do, is run on ahead and get in line for single-day passes,\" Rebecca decided. \"I'm going to keep an eye on the dreamscape in case there's an emergency, but I'm going to make every effort to not actually delve into it. If possible. I'll pick up your pass since I'll be in line anyways, and I'll call you. I want you to call me if anything happens.\"\n\n\"Okay,\" Emily nodded. \"Thank you. I, uh, I'm probably going to keep trying to get into my own charm power thing, so\u2014please don't be mad at me for that.\"\n\n\"I knew you would,\" Rebecca gave her an exasperated smile. \"Please be careful, and please call me right away if anything happens.\"\n\n\"Yeah, of course,\" Emily promised. \"Thank you again.\"\n\n\"Okay, go on, go!\" Rebecca rolled her eyes. \"Go have fun with Brian.\"\n\nWhen Emily pushed through the door and back out to the courtyard area, everyone was gone.\n\n\"What the fuck,\" Emily heaved both palms up in a flipping the table gesture. \"Seriously?\"\n\nTrotting across the poolside patio looking this way and that and then storming out through the gate with an indignant look on her face, Emily quickly spotted her friends\u2014they were all the way over on the other side of the Westerlin's parking lot. She immediately recognized the discolored mark on the trunk of Brian's car where it had once sported bumper sticker shaped like one of the military emblems from Fantasy Wars. All four doors were open, and everyone's bags were piled on top of the beat up roof as Brian, Stephanie, Kelly, and Megan shifted belongings around.\n\n\"Oi!\" Emily called over across the parking lot in her best cute angry voice. \"Oi, oi! Don't just leave me behind!\"\n\n\"Emily!\" Kelly yelled. \"Get over here.\"\n\n\"I can't believe you were about to leave without me!\" Emily put on a playful pout as she crossed over to them.\n\n\"We kept to the code\u2014ye who falls behind, gets left behind,\" Brian chuckled. \"Kidding. We're just moving stuff around, we're gonna leave my car parked here 'till we're done for the day. Where's Rebecca?\"\n\n\"She, uh, had to go?\" Emily said. \"She'll meet up with us later.\"\n\n\"Emily, come here,\" Kelly called, motioning her over towards one of the bags perched on the roof she was currently digging through. It looked like Brian's bag, in fact.\n\n\"That was your first time last night, right?\" Kelly asked, pulling out one of Brian's shirts and holding it up for examination. \"Well, I don't make the rules, but I do gotta enforce them.\"\n\n\"After you first have sex, you have to wear one of his shirts,\" Megan explained, gesturing towards Stephanie. \"Apparently it's a rule!\"\n\n\"I don't think that's actually a rule,\" Brian said as he took a carry-bag that had a Darkmask helmet peeking out the top and leaned inside the car to carefully stack it on top of the big cardboard box from before. \"I think Kelly just wants to play dress-up with her new girlfriends.\"\n\n\"Hey,\" Kelly quipped with a small smile. \"It's a rule, now. Keep to the code, alright?\"\n\nAs Emily rounded the adjacent car and joined them in the space between vehicles, she discovered Stephanie wearing an oversized button-up dress shirt. It looked enormous on her, hanging down almost past her thigh, and there was something really sexy about the look on her.\n\n\"It's... from his other cosplay,\" Stephanie said with an embarrassed smile as she fidgeted with the bottom of the shirt.\n\n\"Emily's a lot smaller than Steph, though,\" Kelly made a small noise of aggravation. \"She's gonna be just swimming in any of these other shirts of his.\"\n\n\"I'm not a lot smaller,\" Emily huffed, blowing a raspberry in Kelly's direction. \"I'm just a little bit smaller. And, what is this, amateur hour?! I steal Brian's clothes literally all the time!\"\n\n\"Aha! So you admit that you stole my missing hoodie!\" Brian slapped the roof of his car in mock fury.\n\n\"Oh, whatever. I did not!\"\n\n\"You just said you did!\"\n\n\"Yeah, but I didn't specifically say I stole your hoodie!\"\n\n\"You stole it. I knew it!\" Brian griped. \"Soon as I brought up that it was gone, you started all backpedaling and getting evasive abou\u2014hey!\"\n\nHe was cut off with a noise of surprise, as Emily couldn't help but take the opportunity to grab his ass as she pushed past him and made for the driver's side seat.\n\n\"Uh, no I didn't,\" Emily retorted as she jabbed the button to pop the trunk. \"'Cause, it was never missing, it was just where you weren't gonna find it right away.\"\n\n\"You hid it in the trunk?!\" Brian playfully spanked a hand across her bottom in return as she tried to skedaddle back around the car and she couldn't help but let out a gleeful yelp. \"When?\" How did you even\u2014\"\n\n\"Sooo it wasn't stolen, technically,\" Emily gloated, digging past the mesh plastic half-crate where Brian kept spare transmission fluid, motor oil, and other assorted car stuff since his apartment didn't have a garage. Stashed away in the folds of a musty old blanket in the back, Emily grabbed out the hidden hoodie and yanked it free so that she could hold it up proudly for the others.\n\n\"Carry it low, drive it slow\u2014certified forklift operators for Jesus,\" Kelly read the bold text emblazoned across the front of the hoodie with a mixture of horror and disgust. \"Wow. Who knew that one line could get me this hot and bothered? Please, no. Stop. You can't. You're making me wet.\"\n\n\"Right?!\" Emily beamed as she started struggling her way up into it. \"Mike and Tanya got it for Brian last Christmas, but I helped them pick it out.\"\n\n\"Yeah, uh, I can tell you did,\" Kelly tried to keep a straight face as she shoved Brian's other shirts back into his bag and tossed it in the car. \"Listen, both of you\u2014and you too, Stephanie\u2014we're going to have to all go out shopping together soon so that I can teach you all how to dress.\"\n\n\"That's the plan today, isn't it?\" Brian grinned. \"It's Sunday\u2014today's the day of the con the vendors mark down their prices. So, today we're shopping.\"\n\n\"Yesssss!\" Emily pumped her fist in the air. \"Tables have already turned, we're deckin' out Kelly in weeaboo wear!\"\n\n\"I'm not, and you can't make me,\" Kelly rolled her eyes.\n\n\"What do you think, Steph?\" Brian asked. \"I think I saw a T-shirt in the vendor's room that'd look great on her. It had a big-boobed wolfgirl in a bikini with her tongue lolling out all crazy, and it said 'high five if you love furries!'\"\n\n\"Dead serious though\u2014no way,\" Kelly warned. \"Nuh-uh.\"\n\n\"Oh my God, last year I bought a shirt that says 'yaoi holes' on the front in Japanese,\" Megan chimed in with an eager expression. \"I wear it all the time to class and nobody realizes what it actually says!\"\n\n\"I think everyone realizes,\" Stephanie added with a shy smile. \"You keep, um, loudly explaining what it means in front of people...\"\n\n\"I do not!\" Megan exclaimed. \"Hardly!\"\n\n\"I don't know what yow oy holes are, but I'm gonna go out on a limb and say also no, no way, end of story,\" Kelly decided.\n\n\"Ohhh she doesn't know what yaoi is yet,\" Emily's hands crept upwards to her own cheeks in excitement. \"This is going to be so much fun! I mean\u2014 Steph, you know what yaoi is, right?!\"\n\nStephanie quickly shook her head no, her fluffy pink locks swaying back and forth as she adamantly attempted to deny the truth.\n\n\"Ugh, I've already tried to educate her in the ways of yaoi,\" Megan scoffed. \"But, she's too squeamish for the good stuff.\"\n\n\"The good stuff?\" Emily arched an eyebrow.\n\n\"Steph, what do you want to do with your bag?\" Brian asked. \"If you want, you can leave it here in my car. Then whenever we're all conned out for the day and ready to leave, I can swing both of you guys over to wherever you're parked.\"\n\n\"Yes! Thank you,\" Stephanie said. \"Megan's car's at the Sherriott. I... I just, wow I don't even want this weekend to ever end.\"\n\n\"Skip a couple weeks of school and come stay with us,\" Kelly offered. \"Brian and I can\u2014\"\n\n\"Don't you steal my Stephie!\" Megan exclaimed. \"I didn't even hardly get to see her all weekend, and we're best friends! Steph\u2014you've never ever missed a class. You can't just skip school.\"\n\n\"I'll... think about it,\" Stephanie told Brian as she fidgeted with the hem of the oversized shirt she was wearing. \"I mean, I really, really want to...\"\n\n\"Emily, kitten...\" Kelly spoke up, stepping back and gesturing for Emily to come closer. \"Talk to you alone for a sec?\"\n\n\"Yeah? Sure,\" Emily's curiosity was piqued. \"What's up?\"\n\n\"I stashed a condom in your shoe,\" Kelly answered in a low voice, blowing errant red locks out of her face with a flippant puff of her lip. \"Your ninja shoe from whatever cosplay thing you were.\"\n\n\"A... condom?\" Emily blinked.\n\n\"A full condom,\" Kelly explained. \"Tied off and everything, practically a little water balloon, and it's, uh, it's full of the secret sauce that has us changing colors and seeding us with whatever magic bullshit.\"\n\n\"Right. Okay,\" Emily whispered back, doing her best not to look over in the direction of her bag. \"Good call. We need that stuff\u2014you know, for science.\"\n\n\"Or emergencies, you never know,\" Kelly said. \"Steph had a bruise on her face last night, but she didn't this morning. I figured, you're into geeky shit and you'd want to save some spunk as a healing potion or something.\"\n\nBruises... Emily couldn't help but bring her fingers up to her face and probe around where Chloe had inadvertently elbowed her the other day. Fuck me, I totally forgot about all of that. Again. There's too much going on. Yes siree, don't even feel a twinge. There's so many things we need to test\u2014Brian's cum might have regenerative properties or even\u2014\n\n\"Yeah, so you have one shoe outside your bag of clothes, and then one shoe inside, now,\" Kelly continued in a hushed voice. \"Wrapped the rubber in one of your socks, then tucked it down in your shoe, and put that shoe in your bag. So, don't forget and shove your foot in there or anything.\"\n\n\"Okay, cool, cool,\" Emily nodded quickly and tried not to imagine doing just that. \"I won't. Fuck, should I run back and grab some ice from the ice machine again? Do we need to keep it, uh, preserved?\"\n\n\"No clue,\" Kelly shrugged. \"You're the charm stuff expert\u2014or, you will be, in the future. It was still warm last time I touched it, and it probably shouldn't have been. Magic?\"\n\n\"Magic!\" Emily all but squealed in excitement, bouncing on her heels.\n\n\"I mean, I get it, yeah, and I'd have probably kept it myself, but then at the same time I didn't want it popping accidentally and exploding all over my purse, so,\" Kelly gave her a wry smile. \"Figured you'd definitely want to keep a condom full of magic cum. Oh\u2014hey, promise me you won't throw it at anyone.\"\n\n\"Throw it?!\" Emily shot Kelly an aggrieved look. \"No way, I'm not wasting it!\" \n\nEven if someone had smuggled me a condom full of Brian's cum back before I knew about all the actual real magicalness, I wouldn't have WASTED it! Emily thought with a rigid smile. Might've been a creepy perv with it, like made a little BRIAN SHRINE around it. Or kept it to suckle into my mouth while I masturbated like a total degenerate, but I wouldn't ever WASTE it.\n\n\"Thought for sure you'd want to... I don't even know. Figure stuff out with it, or something? I dunno, experiment? Test it on stuff?\" Kelly held up her hands. \"I'm gonna be getting more straight from the source like, on the regular, sooo\u2014yeah, I'll get you more whenever I can?\"\n\n\"Are you saying that just to like, flex on me?\" Emily narrowed her eyes.\n\n\"Sorry, habit,\" Kelly shrugged. \"And also warning you, I guess? That kind of sex is too good for me to not be trying to have it every day. You can't even blame me.\"\n\n\"...Yeah,\" Emily sighed. \"Okay. Try to get me whatever you can. This one you squirreled away in the shoe is from just then earlier, when you were in there with Brian and Steph? Or from last night?\"\n\n\"This morning, good and fresh,\" Kelly confirmed. \"I had another weird\u2014well, I think I might've maybe figured out part of my charm power thing.\"\n\n\"You got another message from the future?!\" Emily demanded, leaning in close. \"What did it\u2014\"",
        "\"No, no\u2014kinda the opposite, I guess?\" Kelly shrugged. \"Sent something to the past. Or, to a past. Sort of. To get me the past me to where I am here\u2014I think a future me did the same thing to get me here where I am now, to... this. It's complicated. Long story, and\u2014look, I think everyone's ready to head over to the con.\"\n\nCar doors slammed closed, everyone stepped away from the vehicle, and it indeed seemed like they were finally ready to go. To Emily's surprise, Stephanie and Kelly seemed to share a meaningful look with each other, and then both of the girls ceded Brian to Emily without a word. Having fully expected to be sidelined, Emily stared at Brian's hand held in hers in surprise as their group trooped down the sidewalk towards the crosswalk. It was nice, and she was thrilled, but it was hard not to wonder if those two were communicating with magic somehow\u2014or if it was just some sort of social savvy where the girls could sense that Emily needed some time with him.\n\nEither way, it's super appreciated, Emily couldn't help but grin and give Brian a squeeze.\n\nThe long strip of concrete walkway that lined the busy road wasn't wide enough for them to travel bunched up, so Emily and Brian led the way like they were a couple no, fuck me sideways, we ARE a for-real fucking couple, now, with Kelly trailing behind at a discreet distance and then Stephanie and Megan bringing up the rear. Megan seemed to be absolutely brimming with questions for what her pink-haired friend had been up to over the course of the weekend, and somehow the overweight girl spoke in excited whispers that carried even further than her normal speaking voice.\n\n\"Oh\u2014oh you didn't,\" Megan could be overheard remarking after a flustered Stephanie murmured out an answer in a voice too tiny for Emily to discern. \"You didn't. Ohmigod. Was he, like... was it like, you know?\"\n\n\"Brian... c'mon, what do you think about all of this?\" Emily asked, sharing a look with him.\n\n\"All of this?\" Brian gave her a smile.\n\nShe felt like a blatant obvious idiot like this trying to pose it as an innocuous question as possible, but thanks to all of Rebecca's meddling, now Emily really needed to know what he thought. She missed just connecting with Brian. She'd had such a crush on him in high school\u2014a crush that apparently hadn't been as one-sided as she'd thought\u2014and after the awkwardness of that botched attempt at kissing him years ago, and then watching in helpless frustration as he fell into the clutches of that psychopath Chloe, Emily felt they were long overdue for conversation.\n\nAbout a lot of things.\n\n\"You know. The whole... this weekend thing,\" Emily supplied, wondering how in the heck she was going to be able to tiptoe around the circumference of this weekend's craziness with this line of inquiry. \"You and me. You and Steph and Kelly\u2014all of us. This weird hair color thing happening with us girls. Chloe snapping and going ballistic like that. That craziness last night\u2014Brian that was like, an orgy. Bruh. What's even going on anymore?\"\n\n\"...I don't know,\" he replied after a long moment of consideration. \"It's been unreal, kind of like something out of a dream. But, then at the same time it feels more real. Like the rest of my year, the rest of my life has just been this kind of... I dunno, bleak sort of blah. But then, here and now everything's bright, and the colors are vivid, and it's like this is it. I don't know what the it is in this, exactly, but this is definitely it.\"\n\nHe let out a helpless laugh, shaking his head.\n\n\"I'm not making any sense, am I?\"\n\n\"You're making tons of sense,\" Emily promised in a slow voice, inching in closer and tracing her fingers down his side. \"Fuckin'... yeah, just tons of sense.\"\n\nWhen she relaxed her thoughts a bit and just focused in on Brian and her feelings for him and the sexy goddamned sound of his voice the blue feeling flowed. It was like she could touch on twinges of her charm magic, whatever it was, tap into a sexy fluid stream of... something. Emily wasn't sure how to put it into words without simply exhausting all the wet words in her vocabulary, but there was definitely an emotional component to it.\n\nMaybe just being closer to Brian like this makes it easier to focus on my personal charm magic stuff? Worth experimenting with. Ugghhh does it make me horny though, fuck.\n\n\"Yeah? I don't think I'm actually making any sense,\" Brian laughed. \"Don't think I've ever felt so... out of my depth. I don't know what's going on, but I do know I'm really, really glad you're here with me for it. Yeah.\"\n\n\"Yeah?\" Emily beamed up at him, all but purring. \"Yeah.\"\n\n\"Yeah,\" Brian said. \"You'd never believe any of this if you weren't here and I tried to tell you about it all later. You'd think I was making it all up. Yeah?\"\n\n\"Yeah,\" Emily agreed with a little laugh of her own, shaking her head at what a wild ride this weekend had shaped up to be. \"Yeah?\"\n\n\"Yeah,\" Brian gave her hand a squeeze. \"I'm serious though, I really needed you to be here for this. Yeah.\"\n\n\"Yea-you did?\" Emily blurted out, just barely catching herself from getting baited into saying yeah? again. Normally she caught on to the yeah thing they did more quickly than this, but trying to dip into her senses towards her charm sense or whatever while they were walking and talking had her feeling more than a little dazzled and turned on. \"You mean it?\"\n\n\"Yeah,\" Brian grinned, giving her a look. \"You bring out the best in me. Well, okay maybe not the best but you bring out parts of me that don't really come out otherwise. Yeah?\"\n\nIt was a bubbly sensation, a unique watery something that was soaked through and through, saturated with the very essence of the idea of bright blue through some sort of synesthesia mindfuckery. But also it was as if the blue was pure distilled Emily, with all the random esoteric Emily bullshit filtered out. Just the real me\u2014I think that's like some inkling in the right direction. To figuring out my charm thing. I bring out the real Brian, and somehow, somewhere. He brings out the real me right back in return. Whatever that really means.\n\n\"Yeah?\" Brian tried again.\n\nOh my God, I don't even care. Just never let this feeling stop, Emily bit her lip. I love this so much. Love him. I have him, he's mine. Well, ours. Close enough. He's just so\u2014well, he just SPEAKS to me. And, it just, it CONNECTS.\n\n\"Uh-huh,\" Emily wasn't able to stop herself from grinning back at him. She could read it all over his face, she knew that he could tell she could knew, and they'd still effortlessly somehow fallen into the trap of another one of their stupid meaningless yeah jokes that would be impossible to explain to anyone without sounding insane. \n\n\"Yes. I've got the meme magic,\" Emily declared. \"I'm the only one who can pull the worst puns outta you. The raunchy jokes, the innuendo, the stupid, immature Brian that'd've made Chloe burst a vein saying the wrong inappropriate thing. Yes siree, that's me and my Brian. Yeah!\"\n\nEmily jerked her arm out and flashing Brian her most rad thumbs-up. Knowing how lame it was simply enhanced the radness of it.\n\n\"Yeah!\" Brian agreed, slipping an arm around her.\n\n\"Yeah yeah yeah,\" Kelly remarked in amusement, and when Emily turned to look the girl was rolling her eyes.\n\nFor some reason, it didn't even feel weird that Kelly had overheard them being idiotic and goofy. Kelly didn't seem to be making fun of how dumb her and Brian could get around each other sometimes, there weren't any judgemental overtones apparent. The confident and beautiful red-haired girl was just adding in a little bit of her own. It was like she felt compelled to touch bases, to ensure she didn't come off as too aloof and distant from them. Kelly was giving the two of them space to be stupid together, but then also still wanted them to be within reach of her. \n\nIt was a strangely pleasant dynamic to be around a girl like Kelly and for once not feeling like she needed to keep her guard up. Kind of similar to what it was like going around with Rebecca, feeling secure in the fact that Rebecca was the mature one who had all the right adulting answers. But, in Kelly's case, she was covering that more social aspect of things. Kelly was like one of the cool popular girls who had antagonized her all throughout high school, but now Emily would get to see what it was like having one of them in her corner, for a change.\n\nIs that the harem charm greasing the interpersonal wheels there, or what? Emily thought, glancing back behind them from Kelly to Stephanie and feeling all warm and fuzzy inside. It's like Brian and I, we complete each other, but then adding in the other girls completes us even more, out to like way past what I ever would have even imagined. Relationship metaphor-wise, we're like giant animal robot mechas that combine together into an even bigger, more badass giant robot mecha.\n\nThey reached the street corner at the intersection in front of the broad convention venue, and there was already a small crowd of tired but still-smiling convention attendees there waiting to cross. Emily hadn't noticed, but there were a fair few people out and about on the streets here this close to noon, and between the midday traffic and all the others around she was forced to start raising her voice to be heard, and to lean in closer to him to hear his responses.\n\nNot that she minded that at all.\n\n\"So, um. Brian. When you say things are like, bright and more vivid now with the colors, do you mean this at all?\" Emily teased her bright blue locks out with a flick of her fingertips. \n\n\"Yeah, there's that going on, too,\" Brian said, looking like he still didn't know what to make of it.\n\n\"What do you think's going on?\" Emily prodded. \"What are your thoughts on it?\"\n\n\"A big part of me wants to say it's a prank,\" Brian said with an uncertain smile. \"Like, somehow you guys met up and... coordinated it sometime yesterday, somehow. For some reason.\"\n\n\"You think it's a prank?\" Emily lifted her eyebrows.\n\n\"No, I don't,\" Brian ran a hand through his own hair as he struggled to explain. \"It's like, when I'm trying to puzzle out an explanation, that's the best I can do. Or I should say, if it was happening to someone else, that's what I would say this was; a prank.\"\n\n\"So, you don't think it's a prank,\" Emily summed up.\n\n\"I don't know what I think about it,\" Brian tried. \"I don't believe it's a prank or some game or something, but my old guess doesn't fit anymore.\"\n\n\"What was your old guess?\"\n\n\"Well, with Stephanie\u2014 on Friday, she was wearing these rabbit ears,\" Brian explained. \"Big felt ears, attached to a headband, for her cosplay. They were red and pink, she said she'd just dyed them; so a bit of color seeping or something and appearing in her blonde didn't seem too out there. At first.\"\n\n\"Wow, I can't even picture her blonde,\" Emily remarked, twisting back to give Stephanie a long look. \"Like, a dirty blonde or a real light blonde? Goldenish? Bottle blonde? Platinum?\"\n\n\"Uhhh,\" Brian patted his pockets as if searching for his phone before appearing to remember it was still missing in action. \"We did take some pics together yesterday. Yesterday morning. But, I think at that point she was already full pink like this.\"\n\n\"Annnd, okay how do you think that happened?\" Emily gestured for him to continue.\n\n\"I did it, I guess,\" Brian conjectured. \"Somehow. I don't know what I did, but each time there was a bit more color\u2014for each of you girls\u2014it was from something I did. Kissing, and, ah, other stuff.\"\n\nNormally, she would have pressed his other stuff explanation with a salacious teasing remark of some kind, but Brian actually sounded like he was at a loss, that this was making him uncomfortable. Emily swallowed back the impulsive teasing words that were such an ingrained reflex to spurt out and simply nodded, letting him have another minute to figure out what he wanted to say.\n\n\"It's\u2014yeah, I don't know,\" Brian shrugged. \"With Stephanie, it could halfway make sense with the dye, but then when it comes to you and Kelly who have\u2014uh, well had\u2014real dark hair already, I don't even know. It seems impossible.\"\n\n\"Gimme your best guesses,\" Emily encouraged.\n\n\"You know what it is, don't you?\" Brian said, making a face halfway between an unsure smile and a grimace that made Emily intensely uncomfortable. He wasn't even being serious with her here, but the fact that she was intentionally keeping the truth from him made it cut deep.\n\n\"We girls have... talked about it,\" Emily said slowly, carefully choosing her words. \"We've worked out some ideas, but no we don't know anything for sure. We, uh. We wanted to... um. If it's okay can we keep our guess to ourselves kinda, until we're ready to talk about it with you? I mean, keep us girlses' guess as to why it might to just between us girls. For now. If that's okay?\"\n\nBrian frowned, and Emily did her very best not to shrivel up into a guilty husk beneath his gaze as he studied her, trying to puzzle out what was really going on. \n\n\"You guys will tell me if you feel like it's my fault, right?\" Brian finally asked.\n\n\"No no no, it's not like about fault, or anything,\" Emily quickly assured him. \"You didn't do anything wrong. You make us all\u2014you make me so happy, and\u2014I love you. I love you so much. We love you. Okay?\"\n\nEmily stopped him in place so that she could turn him towards her, plant a hand on either side of his face, and draw him into an insistent kiss. \n\n\"Okay,\" Brian said. \"I trust you. And I love you.\"\n\nThe magic permeating her body swayed and almost rolled into a bow wave as Emily stared up into the gorgeous green of his eyes. Hearing him say it, hearing him mean it had a tangible effect on the blue coursing through her, because it felt like a speedboat had just gone roaring down her little length of calm river and everything was suddenly movement and motion in the wake of its passing. Aggh, and yep. Both nipples went hard like, right there with that smoldery look he's got. It's like I'm back in high school all over again.\n\n\"My guesses?\" Brian cocked his smile into a lopsided grin and gave her a small tug forward, directing her along across the street. \"Alright, let's see...\"\n\nShe hadn't even noticed the traffic lurch to a halt in front of them or the crosswalk signal change\u2014Emily had been absolutely glamoured. Fuck me, did Stephie and Kell both go through this to get their powers?! How do you, uh, how do you even FOCUS with all of this going on? Fuck the magic shit, I just want to jump his bones and bump uglies for the rest of the day.\n\n\"The one that's most likely, but goes against my gut feeling, is that you all are in on it together somehow,\" Brian admitted. \"Hair dye, chemical applications. Maybe there's time-delay hair dye? I'd be looking this stuff up on my phone if I had it.\"\n\n\"Time-delay hair dye sounds cool,\" Emily said. \"What else've you got?\"\n\n\"Well,\" Brian winced. \"Okay yeah this one's stupid but it was a thought that came up\u2014 rabbits can completely change the color of their fur in the span of a few months. Like, winter fur is white, but in spring they're brown or whatever. Doesn't fit this situation for a ton of reasons, but it's all that comes to mind when I think about hair that's able to change colors naturally.\"\n\n\"Sunlight can bleach hair,\" Emily pointed out.\n\n\"Yeah, but that's not natural\u2014the sun counts as like, an outside, external effect.\"\n\n\"The sun's not natural?\" Emily teased.\n\n\"You know what I mean.\"\n\n\"Okay,\" Emily said. \"That idea's... something. A little iffy. What else?\"\n\n\"Magic,\" Brian suggested. \"Like anime magic, where the guy has a harem of girls and each one has different crazy colored hair.\"\n\n\"Uhhh,\" Emily's heart leapt into her throat and she did her best not to tense up. \"Anime magic.\"\n\n\"Yeah,\" Brian shrugged. \"I know it sounds like it's more stupid and unlikely and impossible, but I think it's actually closer to my gut feeling on this than the other ones.\"\n\n\"Okay, yeah,\" Emily soldiered on. \"Anime magic's possible. Anything's possible. What else?\"\n\n\"Alright, I think this might be my best one,\" Brian continued. \"Body chemistry. I picked up an, I don't know, a rare enzyme or had some strange reaction, and now my bodily fluids cause a weirdly specific allergic reaction in you guys.\"\n\n\"That's... huh,\" Emily pursed her lip. \"Allergic reaction but only to hair?\"\n\n\"I guess?\" Brian gave her an expressive shrug. \"No clue what the crazy colors are all about, but I remember Will telling me once that there's four different kinds of allergic reactions, and they all do different things. Like I said\u2014I'd probably have more intelligent guesses if I had my phone this morning so I could look some stuff up.\"\n\n\"Well anime magic's my favorite so far,\" Emily admitted as they stepped up onto the curb in front of AnimeCon.\n\n\"Thought it would be,\" Brian gave her a small smirk. \"But prank is still my first place guess, just in case you were planning on having an aha moment on me sometime later.\"\n\n\"Duly noted.\"\n\nThey both turned to wait for the rest of their small group gather again amid the other pedestrians and convention-goers. Kelly was right behind them, but Megan and Stephanie had lagged considerably behind as the two girls were caught up in a lively discussion with one another, with Stephanie surprisingly animated and gesturing with both hands while Megan kept interrupting with her reactions.\n\nNo further words between Emily and Brian were exchanged as their group met up and started to meander forward together. Emily let out a small sigh of relief as they crossed the convention plaza and they left the topic of anime magic behind them for now, because there was a time and a place for figuring out magic, and right now it was time to have fun at AnimeCon with the guy she adored. Emily hated mornings\u2014anything before one o'clock PM was morning in Emily's book\u2014but today she simply felt like she agreed with the way Brian described the special significance of this weekend. This is it. Whatever 'it' is, this is definitely it.\n\nShe'd spent the entirety of this short trip across the street hanging off of Brian's arm, and the only time he'd freed it from her grasp had been when he instead slipped it around her to hold her while they walked. In the past she'd always been more than a little touchy about her personal space, but everything had changed. Now it was like she was so completely enamored with this puppy-love affectionate skinship that she simply couldn't let go at all.\n\nEvery color was more vibrant, every detail more beautiful and perfect. The AnimeCon banner gently undulated in the breeze from where it was affixed high above the entrance to the hall, scattered groupings of attendees in familiar nerdy trappings could be seen here and there, along with the occasional cosplay. The normal convention excitement she felt was amped up to eleven despite the fact that she wasn't even in cosplay today. Everything was better than she could have ever hoped for.\n\nFuuuck I'm turning clingy already, Emily tried to scold herself, but all she felt was a giddy sort of glee. I just\u2014I can't even help it! We're together, we're really, for real actually together. I can't help but be all over him.\n\nAs absurd as it sounded, being boyfriend and girlfriend was enhanced by the inclusion of several other girlfriends into the mixture. There wasn't any room to be self-conscious or fret over whether she was good enough or if she was doing everything right here in her first real relationship. Emily was instead rolling up with a girl squad, and there was a surreal sense of security in feeling like they would support her. "
    ],
    "authorname": "FortySixtyFour",
    "tags": [
        "cosplay",
        "masturbation",
        "magic",
        "geek",
        "convention",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/animecon-harem-pt-11"
}