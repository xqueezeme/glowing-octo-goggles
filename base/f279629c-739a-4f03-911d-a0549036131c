{
    "title": "The Candyman",
    "pages": [
        "Inspired by a story by TxTallTales. \n\nThis one's kind of dark. \n\n***** \n\nTHE CANDYMAN \n\nA journey out of Hell. \n\n***** \n\n\"Where'd you get that candy, Audrey?\" \n\n\"From Mr. Henry.\" \n\nLiz was not at all comfortable with this. Audrey shouldn't be getting candy from anyone, and certainly not from some man she didn't know. Just what in the hell was going on? But she needed to stay calm to get more information from her young daughter. \n\n\"Oh? And who's Mr. Henry?\" \n\n\"He's the man that lives where Susie used to live.\" \n\nSusie had been one of Audrey's best friends until they moved across the country. Lionel and Monica hadn't wanted to leave the close-knit neighborhood but the promotion and accompanying pay raise were just too good to turn down. \n\n\"And how do you get the candy?\" \n\n\"Just knock on the side door. He keeps a bowl full of candy right next to it and lets you choose one whole piece a day.\" \n\n\"Do the other kids get candy, too?\" \n\n\"Sure mom. They all do.\" \n\n\"And...\" Her voice caught just a bit. \"Do you ever go into Mr. Henry's house.\" \n\n\"No, mom. I just get candy and say thank you. Can I go play now?\" \n\n\"Sure, baby.\" \n\nLiz was trying to remain outwardly calm was inside she was seething. Who in the hell was this guy and why did he think it was okay to lure kids to his door with free candy? What the hell was he planning? Is he grooming them? Get them used to him then lure them into the house for God only knows what? Oh no, there was no way this was going to stand. She was immediately on the phone to her neighbor and best friend, Kristin. \n\n\"What's up, Lizzy?\" \n\nLiz related the conversation she had just had with Audrey and asked if Kristin's son, Ryan, had ever mentioned Mr. Henry or shown up with strange candy. \n\n\"Now that you mention it, he came home a couple of days ago sucking on a piece of hard candy. I just assumed he got it from one of the other parents. I didn't think twice about it at the time.\" \n\n\"Something's not right about this guy, Kris. I mean, a single man having kids come to his door for candy? We need a neighborhood meeting. My house in an hour.\" \n\nThere were 9 houses on this particular cul-de-sac, and all were families with young children, except one, or so it seemed. Fourteen of the 16 parents were at the meeting (2 of the husbands were still at work) and they were all growing concerned. Each of them had noticed their children with candy of unknown origin over the last few weeks but none of them thought to question it. This was a safe neighborhood so why would they. None of them thought about the newest addition. \n\n\"I remember when he moved in,\" recalled Angela. Her husband, Monty, was one of those still at work. \"I kept looking for a wife or kids and never saw any. I just assumed I missed them but it's been 2 months and I still haven't seen anyone but him.\" \n\n\"I don't think I've ever gotten a good look at him,\" added Pam, from the corner house. 'What does he look like?\" \n\n\"Tall, handsome, in decent shape. He has dark hair that he seems to keep a little long. A good-looking guy, I guess.\" \n\nThe unspoken implication was that he didn't look like a child predator, but what does one actually look like? \n\n\"I think we need to avoid saying anything to the kids. We don't want to scare them into being afraid of some monster in their midst,\" contributed Kalina. \n\n\"So, we do nothing?\" asked David incredulously. He and his wife, Cara, were the only people of color on the block, and their two boys were growing up to be handsome little devils. \n\n\"Absolutely not,\" responded Kalina. \"I think we take it right to this guy and tell him we don't appreciate what he's doing and if he doesn't knock it the hell off then we'll go to the police. That's what we do.\" \n\nThere was a rousing chorus of cheers in support of Kalina's idea. It was decided that half of them would keep the children at Liz's house, where the horde of minors was already tearing up the backyard, and the rest of them would go confront this Henry character. \n\nSeven of them went, 4 men and 3 women, and they marched right up to the pervert's (sorry, alleged pervert's) door and rang the bell. \n\nThe chiming sound surprised Henry. He'd been here for two months and had had no visitors, except the children of course. But they always came to the side door, as he had told them. It faced the street and was more visible while his front door was tucked back a bit from the street. \n\nHe peered out the window at the collection of adults outside his door. He initially thought they were here to finally give him a welcome, though he hadn't particularly missed not getting one, but as he took them in there was anger on their faces and he put that idea out of his mind. He briefly considered not answering but didn't think they'd believe he wasn't home. He opened the door. \n\n\"Yes?\" \n\n\"Look pal, we know what you're doing,\" started the very large man that stood at the front of the pack. \"You need to lay off giving candy out to the kids, all right. There isn't a place around here for perverts and if you keep it up we'll sick the cops on you. Got it?\" \n\nThe verbal attack had surprised him. He had always thought the folks around here to be kind but that was certainly not the impression they were giving off. In fact, they were downright hostile right now and they most definitely had the wrong idea, but this wasn't the time to point this out. \n\n\"I don't want to cause any trouble. I'll tell the kids tomorrow.\" \n\n\"No, you don't need to be talking to any of the kids. Just stop giving out the candy.\" \n\n\"They won't understand if I just stop. I'll put a sign outside the door, okay?\" \n\n\"Fine. Just stay away from the kids.\" \n\nThat taken care of, the angry parents turned and walked away. Henry gently closed the door as they strode down the pathway and on to the sidewalk. \n\nBy the time they got back to Liz's house they were congratulating themselves on the fear they had obviously instilled in the pervert. They imagined the pee running down his leg as he lost control of his bladder. 'Serves the asshole right' they told themselves. No one was going to make a victim of their kids. \n\nWhen they had all reconvened in Liz's living room the seven that had made the trip recounted the events. It seemed in the telling to have become even more amazingly dramatic than it had been in real life, but isn't that how legends are born. Still, there was some anxiety amongst them. \n\n\"Should we just leave it at that?\" wondered Cara. \"I mean, will that stop him from doing something or have we simply made it harder?\" \n\n\"Hey Doug, isn't your brother a cop?\" asked Liz. Doug was Pam's husband. \"Maybe he could get some information on this guy.\" \n\nDoug agreed to call his brother, Bob, and see if he could get a little background on this guy. Bob was a detective in the next town over and had often told them to give him the names of any guys their daughter, Ashlynn, started seeing and he'd get the lowdown for them. This was possibly even more important than that and Doug had no doubt Bob would be happy to help. \n\nThe evening wound down and the families all returned to their homes but every one of them was doing so feeling just a little less safe and secure than they had this morning. Liz was particularly shaken up. She and Victor had tried for years to have a baby and finally scored when Audrey came along. She was the youngest in the neighborhood and the thought of something happening to her gave her chills. She finally had a few sips of brandy to calm her down. Even the smallest amount of alcohol seemed to make her sleepy, and she needed the help tonight. \n\nThe next day Doug put in that call to his brother and Bob agreed to help, cautioning that it will take several days to get any sort of decent information. The parents decided to set up a neighborhood watch-type program, though it was more 'neighbor watch' since there was only one they were really keeping an eye on. \n\nKristin and her husband, Chris (yes, they regularly took light ribbing for the similarity in their names) did a walk-by at Henry's house and reported back to the rest of the parents that there was, in fact, a sign posted outside the side door, the candy door. It was short and to the point. \n\n'Dear children, \n\nI'm sorry but I can't give out candy anymore. I hope you understand. \n\nMister Henry' \n\nNow when the children played there was always an adult outside keeping an eye on them, mostly to make sure they never got too close to Henry's house. They hated having to spend time doing this and worry so much, but in the absence of any actual information about the guy there wasn't much they could do. They were all pretty much just biding their time until Bob could give them the background report. \n\nApart from seeing his car leave in the morning, presumably to go to work, and come back around noon, there was absolutely no movement or sightings at Henry's house. \n\n***** \n\nThis went on for a good two weeks and the longer it went on the more concerned the neighborhood grew, thinking it meant Bob had found something. The kids had expressed disappointment many times about their candy supply drying up and couldn't understand why someone so nice would suddenly stop. The parents offered vague generalities about possible reasons, not wanting to worry the older kids who might understand what they were concerned about and knowing the younger ones wouldn't really get it. Once they had Bob's report they'd spread the word. \n\nEveryone breathed a sigh of relief when the real estate sign with the 'Coming Soon' placard on top went up in his yard. \n\nFinally, Bob called and said he had completed his investigation and was ready to deliver a report. They all gathered in Pam and Doug's living room that Sunday evening. The kids were upstairs or in the backyard playing while the grown-ups talked. \n\n\"I feel like we should have our pitchforks and torches ready,\" quipped Chris, which elicited some nervous laughter. \n\n\"Okay,\" started Bob. \"Let's hit the basics first. Henry James Weston, 33 years old, earns in the six figures as a computer engineer and consultant, and also does some web hosting and design on the side. He goes into his office at Alpha Logistics downtown most mornings and spends the rest of the time working from home.\" \n\n\"That explains why he's always home in the afternoons when the kids are outside playing,\" pointed out Angela. \n\n\"He isn't a registered sex offender,\" Bob continued, \"and in fact not only has he never been convicted of any crime but he's never been arrested. He's never even had a speeding ticket, at least not in this state, and he's lived here all of his life.\" \n\n\"That doesn't necessarily mean anything,\" said David. \"Just because he's never been caught doesn't mean he's never done anything.\" \n\n\"True, though the same could be said for all of you,\" Bob responded. \"Let's focus on what we know rather than supposition.\" \n\nAll the parents nodded their assent and Bob continued. \n\n\"I talked with his co-workers and former neighbors and all of those that I spoke to at first were pretty resolute in their high opinion of him. Two of them actually said that whatever I was looking into, if I thought Henry was involved I'd be wasting my time and suggested looking elsewhere. But finally, one of his neighbors said something that pointed me in the right direction.\" \n\nBob paused for effect, waiting for someone to verbalize the question he knew they all wanted to ask. \n\n\"Well, what'd they say?\" Liz finally asked. \n\n\"She said that before she would have thought I was crazy, but that he'd been acting quite different ever since the accident and was sure if he had done anything wrong it was because of that. I asked for more information but she wasn't willing to share anymore and left quickly.\" \n\n\"Did you find out what she was talking about?\" asked Stacy, Kalina's husband. \n\n\"I did. I dug through accident reports and finally found it.\" \n\nBob paused just a moment to gather some fortitude. Talking about things like this hadn't gotten any easier for him over the years. \n\n\"About 21 months ago, Mr. Weston's wife of nearly 11 years, Jessica, and his two children, Ariel, age 9 and Eric, age 7, were killed by a drunk driver on their way home after having met Mr. Weston for dinner.\" \n\n\"Oh my God!\" exhaled Liz, tears creeping out of her eyes and down her cheeks. \n\nEach of the complete couples reflexively took their spouse's hands, suddenly needing the assurance that they were nearby. Bob took in the scene and suspected many of them felt bad enough, and when he continued his report had no doubt that feeling would get even worse. \n\n\"After making that discovery I made some more discreet inquiries and found that Mr. Weston has been extremely depressed ever since, which of course is understandable. He's been seeing a counselor a couple times a week ever since and the general opinion is that it really hasn't been very effective.\" \n\n\"My gosh, that poor man,\" expressed Cara. \"I can't even begin to imagine recovering from something like that.\" \n\n\"As to the candy thing, I suspect it has to do with his children. He has expressed to those around him that what is most important to him is to honor the memory of his children. He does this by doing nice things for the children in his life. For example, last Christmas he asked all of his neighbors and co-workers what the most expensive thing their kids wanted for Christmas, and then he bought it for them. All of them. He didn't want his name on the package but just asked that the parent describe in detail how the child reacted when opening the gift.\" \n\n\"He just wanted a little vicarious joy at Christmas,\" surmised Kristin. \n\nBob continued. \"He used his late wife's life insurance and the settlement from the driver's estate - yes, he was killed as well - to establish scholarship funds in their names. He plans to award two each year, to a female that wants to be a teacher and a male that wants to be a veterinarian. I assume those choices have something to do with his kids as well; probably what they wanted to be.\" \n\n\"Christ!\" David suddenly said, louder than he intended. \"He probably just wanted to do something nice for the neighborhood kids to make himself feel a little better after losing his own and we all but dragged him out of his house and beat the shit out of him.\" \n\n\"True,\" Bob agreed, \"but your concern was perfectly understandable given the situation and circumstances. Maybe next time it would be handled a little differently but I'm not even sure I would have done anything differently.\" \n\n\"And now he's selling his house because he thinks we all believe he's a child predator,\" said Angela. \"We've driven him from his home.\" \n\n\"Let's be honest,\" said Victor, Liz's husband. \"We did all think he was a child predator, and we treated him like one. I'd say we owe him an apology.\" \n\nThis time leaving just two parents behind to keep an eye on the kids, the remaining adults made their way across the street again, this time in a far more subdued manner than they had previously, when anger and perceived righteousness was fueling their march. \n\nSitting quietly in his house, Henry watched the crowd make their way across the street and couldn't imagine what he had done to set them off this time. The sign was up and he had stayed inside whenever he was home, afraid that even stepping foot into his backyard would send the wrong message. They surely saw the realty sign in the front yard; why couldn't they just leave him alone until he moved. He held a small hope that they weren't coming to his house but that died as they walked up his driveway and rang the bell. \n\nHenry looked at the crowd and didn't see any weapons so, despite his better judgment, he opened the door. This time he took the initiative. \n\n\"I put up the sign. You can check. It's still there. And I haven't talked to any of the kids. I'll be out of your hair as soon as I can,\" he said, gesturing with his eyes toward the sign in the yard. \n\nIt was Cara, soft and gentle Cara, that took the lead. \n\n\"We know, Henry, and we appreciate you doing as we asked.\" \n\n\"You demanded.\" \n\n\"Yes, you're right, we did. And now we owe you an apology. A pretty big one.\" \n\n\"What're you talking about?\" \n\n\"We came over here and confronted you without all the facts, and we were wrong. We know that now.\" \n\n\"Is that why that cop was asking all of those questions about me? You were checking me out?\" \n\nCara turned to Doug. \"I guess your brother wasn't as discreet as he thought he was.\" She turned back to Henry. \"Yes, we asked Doug's brother to find out about you. You have to understand what it looked like to us.\" \n\n\"Yeah, sure, apology accepted,\" Henry said as he started to close the door, but Cara quickly put her foot in the way to stop the door from closing, which Henry looked down and saw and then looked back at Cara. \n\n\"We'd like you to consider not moving,\" she said. \n\n\"Why? What do you care?\" \n\n\"Admittedly, we feel bad about what we did and now feel even worse at the idea of making you leave your home. And we'd also like the opportunity to get to know you better, so there aren't any more misunderstandings. I don't think we'd be comfortable with the candy thing, at least not right away, but otherwise...\" \n\nHenry glanced from person to person. Their eyes were friendly enough but there was an underlying guilt there, and he suspected this was more a gesture to assuage their own guilt more than anything else. \n\n\"I'll think about it,\" he said in a tone that implied he had no intention of doing any such thing as he tried again to close the door, only to find Cara's foot still firmly lodged there. \n\n\"Henry, we...we know about your family.\" \n\nThe countenance on Henry's face changed immediately. They had briefly debated whether they should mention their knowledge of the accident and decided to only use it as a last resort, if they thought they weren't connecting to him. That may have been a bad decision. The door flung fully open and the rage on Henry's face, in fact in his whole body, was unmistakable. \n\n\"My family,\" he growled, and there was no other word for it, \"is none of your fucking business! You had no God damn right to dig that up and you certainly have no right to talk about them! Am I being in any way unclear about this?\" \n\nThe entire assemblage of adults shrank backwards as one. They didn't really think he would assault them in any way but keeping a little distance seemed prudent. \n\n\"Henry, we didn't mean to upset you...\" \n\n\"Then just what in the hell did you mean to do? And don't fucking tell me you understand because I promise you that you don't!\" \n\nCara considered the moment and made a decision, hoping everyone would go along. She turned to her friends. \n\n\"Why don't the rest of you go back home. I'd like to speak with Henry alone for a moment. Henry, would that be all right?\" \n\nHenry didn't respond, and in fact didn't really even move. Cara took that as agreement and turned back to her friends to encourage them to return to Pam and Doug's house. Her husband, David, didn't move right away, reluctant to leave his wife alone with this guy, and Cara immediately moved to reassure him that she would be just fine. Reluctantly he turned and left, but ultimately stayed outside where he could keep an eye on what was going on. \n\nWhen the crowd had fully retreated Cara turned back toward Henry. The full extent of his anger was not there anymore but he certainly couldn't be described as calm. \n\n\"Henry, my name is Cara and the man watching us from afar is my husband, David. We've handled all of this extremely poorly. We should have welcomed you when you first moved in but we didn't. The truth is that is usually the job of the wives, to welcome new residents. I think we were waiting to see a woman make her appearance and when we didn't see one we let it fall by the wayside. It's not an excuse, just an explanation.\" ",
        "\"That's fine. I wouldn't have been very receptive to something like that anyway.\" \n\n\"And I apologize for speaking about your wife and children. It wasn't our place. We were just trying to let you know we had been wrong and...well, I'm sorry.\" \n\n\"Forget about it. I wish I could.\" \n\n\"Anyway, we'd like to try and make up for our lack of manners. During the summer, we have a lot of neighborhood parties. We rotate hosting and have them most weekends. David and I happen to be hosting this weekend and would very much like you to come.\" \n\n\"Look, I appreciate the offer but I'm not very good company these days. And I'm not very comfortable in large groups.\" \n\n\"It won't be too crowded. We have a good-sized backyard and there won't be that many people. Just the families plus a few friends and family that live nearby. Probably not more than 30 people, plus the kids of course.\" \n\n\"I'll think about it, okay. That's the best I can do.\" \n\n\"Please do. I'd...we'd all really like you to come.\" \n\nShe gently put her hand on his upper arm and gave it a slight squeeze, then turned and walked back toward Pam and Doug's house. Henry turned and went back into his house, closing the door without even a look back. \n\n\"You invited him to the party?\" asked Kalina. \"Are you sure that was wise. We still don't really know him.\" \n\n\"And just how are we going to get to know him unless we spend time in social situations, hmm? We couldn't profess to be welcoming him to the neighborhood and then have a neighborhood get-together without inviting him.\" \n\n\"You're right, you're right. I guess I'm still just being overly cautious.\" \n\n\"Besides, he might not even show up.\" \n\n***** \n\nThe week passed without incident, nor was there any indication from Henry one way or the other as to whether he planned to attend the party. The realty sign remained firmly in place. \n\nDavid and Cara spent the morning getting ready for the gathering. People usually started to arrive around 3:00 and things rarely wrapped up until nearly midnight. All the families on the cul-de-sac made a good living so those that hosted the party also bore the cost, but again it was rotated and everyone took a turn so it all evened out in the end. They could afford it, after all. \n\nBy 4:00pm the party was in full swing but Henry had not arrived. In addition to the neighborhood couples they had several guests that attended most weeks. Doug's brother, detective Bob, and his wife, Pauline, were regular attendees, as was Kalina's brother, Michael, and Victor's sister, Selma. Liz's sister, Monique, was here tonight but didn't show up as regularly since she often worked at the hospital on Saturdays. Marisa, Kristin's cousin that used to live just a couple blocks away, was also here tonight even though it was her ex's weekend with the kids. \n\nIt was nearly 8:00pm and Cara had popped into the kitchen to get another tray of cheese and crackers when she heard the doorbell, which was odd since everyone was here and they didn't usually stand on ceremony anyway. She opened the door to find an obviously reluctant Henry standing on the other side. \n\n\"Henry, you made it. Come in, come in.\" \n\nShe should have known that he wouldn't presume to just walk into the backyard like everyone else, all things considered. She took his arm and guided him through the house and into the backyard. \n\n\"We've already eaten but there's still plenty of food. Would you like me to fix you a plate?\" \n\n\"No, thank you. I ate before I came over. I just...\" \n\nThe words were lost as Henry took in the crowd outside. The adults were in various groups holding their own conversations while the kids ran amok on the yard, playing tag or hide and seek or some other such game. The big kids played eagerly with the younger ones. \n\nCara took him around and made the introductions. Because the confrontations had been the entirety of their interactions, Henry had never actually met any of the neighbors, and made only a token effort to commit the names to memory. As the old joke goes, he hoped there wasn't a test later. \n\nCara stayed with him, trying to make him as comfortable as possible. He stood socially near a group having a conversation but couldn't bring himself to contribute anything to it. These people were all old friends and had known each other for years. They spoke easily with each other and everyone knew what everyone else was talking about. As the evening went on his feeling of isolation grew, and finally he just sat in a chair in corner of the yard. \n\nCara had returned to her hostess duties so had lost track of Henry but was certain her friends would welcome him and take care of him. They had talked about the need to be open to him, not only because it was the right thing to do as good people and good neighbors but also to make up for their lack of social graces thus far. \n\nIt was the movement that caught her eye. She was aware that someone was sitting in a darker corner of the yard but didn't think twice about it until that person moved, and even then it just drew her attention out of curiosity more than anything else. But when she saw the person get up and quietly leave the yard through the gate in the corner she knew immediately it was Henry making an escape. She made the instant decision to catch up to him. She ran through the house and caught him just as he was walking slowly up his driveway. \n\n\"Henry, are you okay?\" \n\n\"I'm...fine. I...it was...I needed to get home.\" \n\nShe slid her arm inside his and hooked his elbow. \n\n\"Can we just walk for a few minutes? Would that be okay?\" \n\nHe didn't answer but allowed her to guide him away from his house and on a stroll down the street. They walked along in silence for a few minutes before Cara broke the quiet. \n\n\"Something happened, didn't it? Would you like to talk about it?\" \n\nHe didn't really, but she was reaching out to him, something that had happened precious few times since the accident and he knew something needed to change. \n\n\"I was already anxious because of how crowded things were. I haven't been very good with groups since the...lately. I didn't know anyone and I felt like I was intruding, so I finally just decided to sit and watch the kids play. That was nice at first, but...\" \n\nHe suddenly went silent. \n\n\"But what?\" Cara prompted. \n\n\"I found myself looking for Ari and Eric, like I always did when we were at the park or something. And of course, I realized that they weren't there, which led to me knowing I'd never see them again and I...I just couldn't stay there any longer.\" \n\n\"Henry, I'm sorry...\" \n\n\"Please stop apologizing, Cara. I appreciate what you're doing, really.\" \n\nThey walked along a while longer. Cara found herself wanting desperately to help Henry reconnect to the world. It was more than making up for their behavior thus far; this was someone that needed real help, a real friend. Maybe someone to listen but isn't trying to analyze him. If she could just get him talking about things maybe that would be therapeutic. She ventured into dangerous territory but hoped it would help. \n\n\"Tell me about your wife, Henry.\" \n\nA smile came over his face as he thought of her. \n\n\"She was amazing. We met in college. We were at the same party; I was there alone and she was with some really big guy. A football player, I think. As the night wore on he got drunk and started being an asshole, so she asked if I'd dance with her. He didn't seem to care at first, but when he wanted to leave he came to get her. She said she was breaking up with him because he always got drunk and ignored her at parties and she was tired of it.\" \n\n\"It sounds like the right choice.\" \n\n\"He said, 'you're dumping me for this loser' and she said no, she was dumping him because he's an asshole. Being with me was just a bonus.\" \n\nHenry paused a minute, smiling at the recollection. It was hard to talk about her; really hard. \n\n\"We were pretty much inseparable after that. We just clicked. We got married about a year after graduation. That's how long it took her and our moms to plan the wedding. She had always wanted a huge wedding. I'd have been happy under a tree in the park with a preacher and a couple of witnesses as long as it all ended with her as my wife.\" \n\n\"I'm sure it was beautiful.\" \n\n\"It was. When Ariel came along 18 months later and Eric 2 years after that things were just perfect. I had everything I ever wanted.\" \n\n\"Tell me about Ariel.\" \n\n\"She was the light of my life. Practical like her mom. She wanted to be a teacher. She was looking forward to the 4<sup>th</sup> grade. She wanted to be in Mrs. Nuhn's class, but so did everyone. She was the most popular teacher in the school and Ari wanted to be just like her. We tried to get her involved in sports or cheerleading but she wouldn't do it. She said she was a lady and ladies didn't do those things. She loved girl scouts and she absolutely adored her brother.\" \n\n\"That's nice. No rivalry there?\" \n\n\"Not at all. They played together all the time, and one time a friend asked Eric to go away so just the girls could play and Ari had a fit. It almost cost them the friendship, and that girl never suggested that again. She'd have been a wonderful teacher, and a great mom.\" \n\n\"How about Eric?\" \n\n\"He was an old soul. He cared about everyone and everything. He was so sensitive. One time he thought he saw our cat across the street when he was at the school bus stop that he ran home in tears to tell me about it. I had to show him that she was asleep on her bed before he could be calmed down.\" \n\n\"Ariel wanted to be a teacher. What about Eric?\" \n\n\"Once, a family friend asked him what he wanted to be when he grew up. He said...\" Henry started to laugh at the memory. \"...that he wanted to be a vegetarian.\" \n\nHenry kept laughing but it was halting, and Cara looked at him and realized he was crying at the same time. Crying at the loss of his boy while laughing at the humor of the memory. The laughter and the tears were a stark contrast. \n\n\"We finally got him to explain that he wanted to be an animal doctor, but we never did convince him the word was veterinarian.\" \n\n\"They sound so precious.\" \n\nThey walked along in silence for a few minutes. Cara hoped that she hadn't caused more problems by getting him to open up but she had heard that talking about things can help lift the crushing grief that envelops people. She knew talking about her own problems, even though they weren't of this magnitude, had helped her in the past. \n\n\"I failed them, you know.\" \n\nHenry's voice broke the silent reverie. \n\n\"What do you mean?\" \n\n\"At its most basic, a father's job is to protect his children, to keep them safe, and I failed.\" \n\n\"Henry, you weren't even there.\" \n\n\"I was supposed to be. I should've been. We had planned to go out to dinner as a family that night. I was going home after work to change and then we'd go together. I...got hung up on something at work, someone's idea of an emergency, and had to stay late. I called Jess and suggested we reschedule but she said the kids were looking forward to it and suggested we just meet at the restaurant. So that's what we did. \n\n\"Dinner was nice. The kids were perfect angels as they always were and Jessica looked just beautiful. I never got tired of looking at her. We had two cars, of course, so we said our goodbyes. Jess left first because the kids had an early morning and I stayed behind to pay the bill. Ari asked if she could ride with me but I had to say no because I had my two-seater and she was too small to sit in the front seat with the air bag. Ironic that I said no so she'd be safe. \n\n\"They left 10 minutes before I did but I still got home first. I thought Jess may have stopped at the store but that didn't make sense since she wanted to get the kids home, and she would have texted me also. I tried calling and went straight to voice mail. I texted and got no response. I gave her 20 minutes and then went out looking. I drove back toward the restaurant, taking a different route than I had taken home. \n\n\"When I saw the flashing lights I knew instantly it was them. I drove over there and ran toward the accident. I saw Jess' van and became frantic. I tried to rush in but the police stopped me. I yelled that it was my wife and kids and I fought against everyone that was trying to hold me back, but they still wouldn't let me go. I found out later they were already gone by that point. There was nothing I could do and they didn't want me to see. I finally had to be sedated and I woke up in the hospital.\" \n\nThe tears were streaming down Cara's cheeks as she imagined what Henry had gone through. Of course, they matched those on Henry's face as well. \n\n\"You can't blame yourself, Henry. If you'd been in the car you'd probably be gone now, too.\" \n\n\"Anything would be better than this...this...existing, just waiting to die! At least then I'd be with my wife and my kids.\" \n\n\"I wish I knew something to say, Henry. All I can think to say is I'm sorry.\" \n\n\"There's nothing really to say, Cara. Thank you for listening. I'm gonna go home now.\" \n\n\"No, you're not.\" \n\n\"Cara...\" \n\n\"Henry, you've had a traumatic evening and there is no way I'm sending you home to sit there alone. You're sleeping in my guest room tonight.\" \n\n\"But David...\" \n\n\"David has his own bed. Now come on.\" \n\nCara pulled on his arm and Henry only put up token resistance. The party was still going on as she led him into the guest room. She sat him down on the bed. \n\n\"Start getting undressed. I'll bring you a pair of David's pajamas to borrow.\" \n\nWhen Cara returned with a pair of David's pajamas Henry had barely moved. The only difference was that he was sitting instead of standing. She took the initiative, unbuttoning his shirt and pulling it off his shoulders. She pulled his shoes and then his socks from his feet, and then stood him up and unbuttoned his slacks. \n\n\"Am I doing this or are you, Henry?\" \n\nHe didn't react so Cara continued. He was practically catatonic so she simply went about the business of sliding his pants down, sitting him on the bed, putting the pajama pants on to his legs, pulling him to his feet, and pulling the pants up. She pulled back the covers and had Henry lie down and he rolled on to his side automatically. She pulled back the covers and left the room, turning out the light. She was sure he was asleep before the door was closed. \n\nCara went outside to rejoin the party, immediately tracking down her husband and letting him know they had a guest and then recounting the events of the evening, as well as Henry's recollection of the night of the accident. They tried desperately to get back into the spirit of the party but weren't particularly successful, and for the first time were actually glad when the party came to an end. \n\n***** \n\nHenry woke the next morning a little disoriented at the unfamiliar surroundings, but soon the previous night came rushing back to him. It was about this same moment that he realized he wasn't alone in the bed: there was someone behind him. \n\nHe rolled over on to his back and was shocked to see Cara lying there, seemingly still asleep. He leapt from the bed so fast that he ran into the bedside table and had to save the lamp that he toppled over. All the racket woke up Cara. \n\n\"Good morning, Henry.\" \n\n\"Cara, what's going on? Why are you in bed with me? What happened?\" \n\n\"Hang on, one question at a time.\" \n\n\"You shouldn't be in here with me. What if David were to walk in?\" \n\nAs if on cue the bedroom door opened and David did walk in, taking a bite out of the apple he was carrying. \n\n\"Good morning, you two.\" \n\nHenry, not picking up on the dynamics of the situation and David's obvious ease after walking in on them, immediately went on the defensive. \n\n\"David, I swear nothing happened,\" he said, glancing back and forth between his hosts. \n\n\"Sure it did, Henry,\" said David. \"We were all finally able to get some sleep.\" \n\n\"Huh?\" \n\n\"You were yelling in your sleep. I'm guessing nightmares.\" \n\nHenry's head drooped in embarrassment. That particular fact was not one that he wanted to get out, but he felt at this point he owed his hosts an explanation. \n\n\"Yep. Every night. I thought I was past the yelling, though.\" \n\n\"I'm sure it was the trauma of last night,\" Cara said. \"Your emotions were all inflamed after the party and our talk. That's why I didn't want you home alone. That and I was afraid...\" She trailed off. \n\n\"Afraid I'd kill myself? Tried that already, on the anniversary of the accident. Didn't take enough pills. But how'd you end up in bed with me? \n\n\"We heard the yelling when we came inside after the party broke up. Cara was able to calm you down by lying next to you for a couple of minutes, but after we went back to our room it wasn't long before you started up again. We tried that a few times before we decided to just have her sleep in here so we could all get some rest.\" \n\n\"David, Cara, I'm so sorry...\" \n\nDavid held up his hand. \n\n\"Henry, there is absolutely no apology necessary. You've gone through something I can't even begin to fathom, and frankly wouldn't want to. We are happy to do whatever we can to help, however small it might be. If I were you I'd be locked up in a mental ward.\" \n\nTime to get it all out in the open, Henry thought. \n\n\"I was...for 3 months. After I left the hospital the first time I kept going to the scene of the accident and trying to save them. I snarled up traffic pretty bad. I got hauled in and released a couple of times before they realized I wasn't going to stop. I saw a video of myself. It wasn't pretty.\" \n\n\"You said you tried to...kill yourself?\" \n\n'Yep. All I succeeded in doing was making myself sick and being put under 72-hour observation.\" \n\n\"You haven't tried since?\" \n\n\"No. I realized that if I killed myself I wouldn't see them again. They're waiting for me in heaven and suicide, being a sin, is a one-way ticket to hell. I guess I'll just have to wait.\" \n\nCara climbed out of bed and said she'd get some breakfast started. She squeezed David's arm on the way out, more to reassure herself that he was there than anything else, and he followed her out. Henry sat down and got himself together, and then just as he started looking around for his clothes David reappeared with his things. \n\n\"We ran them through the wash so you'd have something clean to put on. You'll have to live with yesterday's boxers though. Neither of us was going to take those off of you.\" \n\nHenry smiled and expressed his thanks as David again retreated to give Henry some privacy. David joined his wife in the kitchen and was taken by surprise when Cara suddenly grabbed him and pulled him into a tight hug. David wrapped his arms around her and held her close. \n\n***** \n\nCara realized that having Henry come to the barbecue was a mistake because it was inevitable that he would be overwhelmed by the number of people. Instead, she worked out with the families on the street to have him over for dinner individually so he could get to know them better but on a smaller scale. \n\nCara and David started things themselves that very evening, having Henry join them for Sunday dinner. They introduced him to their boys: Marcus was 12 and Dylan was 9. They talked about David's job as an analyst at a local tech company, which gave them something in common to talk about. \n\nDavid made a good living, allowing Cara to be a stay-at-home mom, as were a number of the ladies on the street. Those moms that could got together pretty much every morning so the kids could play and the ladies could bond and plan the family activities. \n\nMarcus was the family athlete, starring on his middle school basketball team and also playing little league in the summer. Dylan was the more cerebral one, preferring reading over sports, though both boys were avid video game players. ",
        "It was on this evening that Henry finally explained the thing with the candy. \n\n\"When I was a kid there was an elderly couple that lived down the street; Mr. and Mrs. Hall. He was a retired botanist who still grew plants for some of the local nurseries. His whole backyard was a big greenhouse. \n\n\"Anyway, he used to give out candy to the kids on the street. One piece a day, and somehow he always knew if you tried to come back on the same day. He didn't hold it against you but he didn't give you candy either. \n\n\"When Jess and I bought our old house, I started the same tradition, as best I could anyway. I still worked in the office full time back then. All the parents knew us by then so it wasn't a big deal. When I moved here, well, I wanted to do it again, to see their eyes light up just a little when they put something sweet into their mouths. I didn't even think about how it would look. I just knew it made me happy, even if just for a moment.\" \n\nThe evening at an end, Henry said his thanks to his hosts for a wonderful dinner and a nice night, and made the lonely trudge back to his empty house. As much as he appreciated what they were trying to do, it often made his own house (it wasn't really a home) feel even more empty when he got back. He took a shot of Jack to help him sleep then went to bed. \n\n***** \n\nNext up for the Sunday dinner treatment was Angela and Monty, and their 15-year old son, Mitchell, and 12-year old daughter, Rachel. \n\nHe liked Mitchell, who was very polite and helpful. He was tall and athletic. He played football but baseball was his first love, having just completed his freshman year in high school but on the varsity team. \n\nRachel was pretty but Henry found her to have something of an attitude; maybe that was just because she was 12. He had a wave of sadness hit him at the thought that Ari never got a chance to have a 12-year old attitude. He had to excuse himself for a few minutes, feigning the need to use the restroom. \n\nThen it was Kristin and Chris, and their 7-year old son, Ryan. Henry had to fight to get through that one. Spending time with a boy that was the same age Eric had been when he died was almost more than he could handle, and a couple months ago he probably wouldn't have been able to. But he stuck it out as best he could, and again thanked his hosts for a fine meal and a nice evening. \n\nSlowly but surely Henry worked his way around the neighborhood with the simple-sounding goal of getting him more integrated in the neighborhood. Each time the evening went well and he graciously thanked his hosts for their hospitality, complimenting the loveliness of their home and that beauty of their family. And each night he went home alone to his house. Usually he'd have at least one drink and as time wore on more and more drinks were consumed. He needed it to deal with the pain of being surrounded by loving, happy families, which made the loss of his own all the more profound. \n\nThere had been an exception. In the middle of it all was the meal he shared with Liz and Victor, their daughter Audrey, Victor's sister, Selma and her daughter, Marisela, and Liz's sister, Monique. While spending time with Audrey, who brought back memories of a younger Ariel, had its difficult moments, he had found he enjoyed the conversation with the family. \n\nMonique and Selma were quite different, both physically and otherwise. Monique was very slim, probably weighing no more than 115 pounds, while Selma was very voluptuous and Rubenesque, with large breasts and a large, round behind. Monique wore jeans and a low-cut sweater, while Selma wore a frilly blouse and an ankle-length skirt. Monique was single and seemed to be something of a party girl, outspoken and brash, while Selma was quiet and seemed like more of the homebody-type. There was no mention of a husband so Henry assumed he was no longer on the picture. \n\nMonique was 29 and seemed to revel in her singlehood. She talked a bit about some of the things she had done, and she was obviously proud of the number of men she had been with. She was nice enough but, like a lot of people, Henry found her to be a bit much. \n\nSelma was more reserved, quiet and introspective. Henry thought more than once that she reminded him of Jessica. She didn't seem to like talking about herself any more than Henry liked talking about himself, and there was something of a battle of wills as they each tried to turn the topic of conversation to the other. \n\n\"How old is Marisela?\" \n\n\"My angel is 8; almost 8 and a half.\" \n\n\"I find it hard to believe you're old enough to have an 8-year- old.\" \n\n\"You're very kind, but I'm 31. Plenty old to have an 8-year old.\" \n\nLiz and Victor did the dishes and cleaned up the kitchen, practically dragging Monique the hell out of the living room so Henry and Selma could talk privately. Liz almost smacked her sister when Monique suggested that she thought getting laid would help solve Henry's depression. \n\n\"It always makes me feel better,\" Monique justified. \n\nLiz and Victor were both thinking that even if nothing happened with Selma, connecting with other people was the key to bringing Henry around and beginning the healing process. Sure, he had friends at work and probably had people he considered friends back in his old neighborhood, but they were probably too much of a reminder of his old life. Liz would have to remember to let Cara know how well things were improving, at least to her. \n\nAnd then it nearly all went off the rails. \n\nAudrey and Marisela, who had been playing quietly in Audrey's bedroom most of the evening, came out to say good night after Liz had gone in and gotten them ready for bed. Marisela was having a sleepover and would be staying here tomorrow while her mom went to work. \n\nShe said her good nights to everyone, Henry included, but then her sympathetic nature and childish innocence took over, and with the best of intentions went to say one last thing to Henry. \n\n\"I'm sorry your family died, Mister Henry.\" \n\nSelma's hand flew to her mouth in shock and a sudden quiet descended on the entire room. Liz and Monique were frozen, and even Victor, who always knew what to do, had no idea what to do. Henry, to his credit, gave no hint of the pain that the little girl's words had sparked. He didn't want her to be upset. So, he simply took her hands in his and spoke in as gentle and kind a voice as he could manage. \n\n\"Thank you, sweetie.\" \n\nSelma looked at Henry and could see he was shaking. It was just a little but it was there, and he was really trying to keep it together for Marisela's sake. Liz got her wits about her and hustled the girls off to bed, and no sooner had they left the room than Henry stood up. \n\n\"I...should get going. Thank you for dinner.\" \n\nHe turned and headed for the door, but Selma managed to catch up with him before he got all the way out the door. \n\n\"Henry, I'm so sorry for what she said.\" \n\n\"It's okay, Selma,\" he said as he turned to face her. \"She was just trying to be sweet. You have a beautiful little girl there. Thank you for the conversation. I had a nice evening.\" \n\n\"Me too. Thank you, too.\" \n\nHenry managed a rueful smile as he turned and headed out the door and down the street to his lonely house. It took several drinks that night to get to sleep. \n\n***** \n\nThings went on like that for the next couple of months. Henry had managed to get through Sunday dinner with each of the families on the block, and had even spent some time at the summer barbecues, though there was still an obvious separation between he and these people that had been close friends for years. That was to be expected, and wasn't something that could be solved overnight. \n\nCara and David were the closest to him, mostly because Cara was determined to do everything she could to help him. She easily knew more about him than anyone else, and they had spoken on more than one occasion about Jessica, his kids, and...that night. \n\nThe barbecues had ended and school had begun once again. Weeknights were again filled with structure as the kids once again had homework and bedtimes, so socializing was mostly limited to the weekends. \n\nDavid and Cara were having a small get-together on this particular Saturday. Marcus and Dylan were spending the day with their grandparents (David's folks) so they were organizing an adults-only get together. Nothing fancy; just a chance to drink a little more alcohol than they usually could and spend an afternoon and evening not having to worry about the kids. \n\nPam and Doug were coming over, 15-year-old Ashlynn more than capable of looking after herself, as were Angela and Monty, who'd left their own 15-year-old, Mitchell home alone while 12-year-old Rachel was having a sleepover at the house of a friend from school. She had invited Henry, thinking he might enjoy the smaller group, but he hadn't answered the invite. \n\nAs she was prepping the snacks she asked David to go on down to Henry's house and knock on the door to see if he'd come over. David, ever the dutiful husband, did just that, but not without making Monty and Doug go with him. No sooner had he knocked on the door than his phone rang. It was his wife. \n\n\"Is he coming?\" \n\n\"Hang on, I just knocked on the door. All the lights are off and I don't see or hear anything. He may not be home.\" \n\n\"Is his car there?\" \n\n\"Yeah, I saw it as we came up the driveway.\" \n\nCara suddenly had a very bad feeling. \n\n\"What day is it?\" she asked Pam. \n\n\"Saturday.\" \n\n\"No, no, damn it, the date. What's the date?\" \n\n\"The...uh...14<sup>th</sup>. Why?\" \n\n\"SHIT!\" \n\nCara went running out the front door, screaming into her phone as she did, though David could probably hear her just as well without it. Pam and Angela exchanged looks of confusion before following her. They didn't know what was wrong but they would be there to help. \n\n\"DAVID, GET INTO THE HOUSE! BREAK IN IF YOU HAVE TO!\" \n\n\"What? Cara, I'm not gonna...\" \n\n\"IT'S THE SECOND FUCKING ANNIVERSARY OF THE ACCIDENT, DAVID! GET IN THE GOD DAMN HOUSE!\" \n\nEveryone was shocked; Cara never swore. The realization of Cara's meaning hit David like a bolt of lightning. \n\n\"Guys, we need to get in now!\" \n\nThey didn't understand what was going on but David and Cara's insistence was enough for them. Monty tried just breaking through the front door but couldn't get it to budge. Doug found a largish rock in the flower bed near the door and used it to break one of the small windows next to the front door, then carefully reached around and unlocked the deadbolt. Six people flooded into Henry's entry. \n\nThey scoured the house and it was David that found the master bedroom first. Henry was on the bed with a picture of his family, a half-empty bottle of Jack Daniels, and three empty pill bottles. There was no way to know how many pills he had taken but he bet it was enough. \n\n\"In the bedroom! Call 911!\" \n\nPam was on the phone immediately to summon help while Cara raced to the side of her husband as he tried to get some response out of the unconscious man laying prone on the bed. \n\n\"Henry, wake up, man, c'mon,\" he said as he gently, then more forcefully, smacked Henry on his cheeks, not knowing what else to do. \n\nDoug checked for a pulse and found one, though it was faint. It seemed like forever had passed but it had likely only been a couple of minutes when they could hear the sirens start to pierce the air. Angela ran outside to direct the first responders where to go. It was city policy to dispatch fire, police and EMT's to every call. The fire department arrived first. \n\nThey ordered everyone to clear out and began first aid, doing so until the EMT's arrived shortly after the police car pulled in. The emergency vehicles blocked off Henry's house and the sirens had drawn the entire neighborhood out of their houses. The smaller kids were quickly sent back inside, their parents afraid of what might be happening. \n\nEach of the adults in the house were interviewed and gave an explanation as to what happened. Finally, Henry was loaded up on a stretcher and wheeled out of the house and down the driveway to the waiting ambulance, which quickly pulled away. \n\n\"I'm going to the hospital,\" Cara told David, and he simply nodded, the plans for the afternoon quickly forgotten. \n\nCara sat in the waiting room. A more apt name had never been created. It was several hours before someone finally emerged to give an update, asking first if she was family. She was tempted to say yes but didn't know what problems that might create down the road. \n\n\"No. He doesn't have any family. Please, I just need to know if he's gonna be okay.\" \n\n\"Physically he should be okay. We had to pump his stomach, of course, and it's lucky you got to him when you did. He had easily taken enough pills. He'll be sore for a while, especially his throat from the pump and the stomach contents, but he should eventually recover fully. Emotionally, mentally, well, that's not my specialty but I suspect that'll be a much harder road.\" \n\n\"Can I see him?\" \n\n\"They'll have him in a room in about an hour. I'll have someone let you know and you can go in, though he probably won't be conscious yet.\" \n\nCara ran home to take a quick shower and grab something to eat, noticing that David had already cleaned up the house and packed away the food that was being prepared. She gave him an update and asked him to let everyone know. And then she was out the door and back at the hospital. Fifteen minutes later a nurse let her know Henry was in his room and the doctor had cleared her to go in. \n\nCara stayed overnight, cleaning up as best she could in the hospital bathroom. There was no way she wasn't going to be there when he woke up unless it was absolutely impossible. She already had Angela set up to watch the boys if this spilled into the work week. The doctor had indicated that Henry's body had absorbed enough of the medications that he would probably be out for at least a couple of days, but Cara was there for the long haul. \n\nIt was Monday afternoon when she finally saw his eyes start to blink open. She just watched him for a few minutes as he realized where he was, and that his attempt had failed. She could see his body sag as he came to terms with the fact that he was still alive. Finally, his eyes settled on her, and she managed a small smile. He opened his mouth to talk but nothing came out, and the effort made him wince. \n\n\"Don't try to talk, Henry. Your throat is still sore and inflamed from the stomach pumping. Here, there's a dry erase board so you can communicate.\" \n\nShe handed him the board and the marker, and he immediately scribbled 'Why?' on it. \n\n\"They had to pump your stomach to get the pills out and that has to come out somewhere.\" \n\nHe shook his head. That wasn't what he meant, and he added to his note. \n\n\"Why did you stop me?\" \n\n\"Henry, your family is waiting for you. You said yourself you can't get to them like this, and I won't allow you to not see them again. Not if I have anything to say about it.\" \n\nHe erased his board and wrote again. \n\n\"I can't take it anymore. Too much. Too hard.\" \n\n\"You can, Henry. You must. Ariel and Eric are counting on being with their daddy again one day. You have to have the strength for them, and for Jessica, too. Your time on earth without them might be hard, but imagine doing it for eternity.\" \n\nThe tears started to roll down Henry's face. Cara grabbed a tissue from the box next to the bed and wiped his face. She didn't care how inappropriate it might be; she climbed on to the bed and lay down next to him. He needed to be held, to be assured that somehow it would be okay, and that was the only way to do it. \n\nCara stayed the rest of the evening before Henry finally insisted she go back to her family. She agreed, then stepped out of the room for a few minutes. She came back in and sat down. Henry wrote on the board. \n\n\"I thought you were going home.\" \n\n\"I will, in a few minutes.\" \n\nThey sat quietly, with Cara making no real movement toward leaving and Henry continuing to wonder when she was leaving. It's not that he wanted to be rid of her, but he felt guilty keeping her from her own family, her own life. \n\nWhen his door opened he finally understood. In walked Kalina with a small bag that suggested she was planning to stay for a while. Cara had been waiting for her replacement. Henry shook his head, trying to object to taking his friends from their families. He reached for his board but Cara stopped him. \n\n\"Too bad, Henry. We're your friends and we're not going to let you be here alone. I've already got volunteers and you're just going to have to accept it, unless you want to tell the staff to bar us from visiting. I can't stop you from doing that. Please let us take care of you.\" \n\nHenry pondered it and finally surrendered, nodding his head that it was okay. \n\n\"Good. Kalina's on the shift for tonight, obviously. I've got others lined up for the next couple of days. They're keeping you here for observation, both for your stomach and throat and...well, for your emotional health. Standard protocol after a suicide attempt, even though I think it's a waste of time since you won't be trying this again, will you?\" \n\nHenry shook his head. \n\n\"Good. I'll try to stop by tomorrow.\" \n\nCara kissed him on the forehead before saying goodbye to him and Kalina and making her way out of the room. \n\n***** \n\nHenry didn't sleep well, though that wasn't anything new. He still had nightmares but they weren't as intense. He assumed the drugs the hospital had given him were responsible for that. At times throughout the night he could see Kalina sleeping on the reclining chair in the corner. He was very thankful for the friends he had made here, even if accepting their help made him feel like a burden. He was glad he had decided to stay, that sign in his yard long gone and mostly forgotten. \n\nHe must have drifted off, because the next he knew it was morning. He glanced into the corner and Kalina's things were gone but there was a new bag there now, so someone must have replaced her. He wondered who. \n\nThat question was answered 10 minutes later when Selma came walking into the room. She was carrying a cup of coffee (or something in a Styrofoam cup anyway) and what looked like a breakfast sandwich of some kind. \n\n\"Oh good, you're awake. Sorry, I got hungry so I ran down to the cafeteria. Do you need anything?\" \n\nHenry grabbed his board. \n\n\"Why are you here?\" \n\nSelma's face fell. \n\n\"If you'd rather someone else sat with you I can call Cara.\" \n\nHenry shook his head strongly. That wasn't what he meant at all. He was glad she was here, but unlike the couples that lived on the street she was a single mom and he was worried about her losing pay to sit here with him. \n\n\"You're a single mom. Need to work.\" \n\n\"I have plenty of sick hours and vacation. They've actually been bugging me to use some of them so I did. Cara asked for volunteers and I volunteered. You're sure it's okay?\" \n\n\"I'm really glad you're here. Thank you.\" \n\n\"You're welcome,\" she said as she smiled at him. \"I'm just glad you're okay. I haven't had a chance to really get to know you yet.\" \n\nShe pulled a chair closer to the side of the bed so they could see each other better. That Henry thought she was pretty wasn't surprising. What was surprising was that he was aware of it. He hadn't had that thought about a woman since the accident. He saw beautiful women every day at work but that they were beautiful never occurred to him. With Selma, it did. \n\n\"What about Marisela?\" \n\n\"Liz is going to take care of her. Get her from school, do homework, feed her, the whole thing. Believe me, she won't miss me a bit. A sleepover at Aunt Liz's house is her Holy Grail.\" ",
        "\"Tell me about her.\" \n\n\"She does well in school. Recess is still her favorite time at school, but she does like math and science so we'll see how it goes. She's well-behaved, does her homework, adores her cousin Audrey, and likes to color. Not much else to tell, I guess.\" \n\n\"Her father?\" \n\n\"What about him?\" \n\n\"Is he in her life?\" \n\n\"Does child support every month count as 'in her life'?\" she chuckled. \"No. He lives in California somewhere. The last I heard he was married and had two other kids. We never hear from him personally. Even his support is a direct deposit.\" \n\n\"When did you guys divorce?\" \n\n\"We were never married.\" \n\n\"If you don't wanna talk about this you don't have to.\" \n\n\"No, it's okay. We'd been together for almost a year when I got pregnant. It was an accident but I thought we were in love so I wasn't upset. I figured we'd get married but we didn't. He even suggested maybe it wasn't his.\" \n\n\"Asshole!\" Henry scribbled. \n\n\"Yes, he was. DNA proved it was his and he's on the hook until she's 18. He makes good money so I don't think it's a big deal for him. He was gone right after she was born and she's never even met him. Someday I'm sure she'll want to know more but she seems happy with just me for now. Victor has been an amazing uncle, though.\" \n\nCommunication was slow since Henry had to write down everything he wanted to say, but it helped him keep the conversation focused on Selma rather than himself. And so, the day was passed with them either getting to know more about each other between Henry needing to rest and the visits from doctors, nurses, and the mental health professionals. \n\nAs night fell Henry began to wonder who was going to be on the night shift. While he would have preferred Selma stay he knew what a burden that would be on her and didn't want her to go through that. However, when it got later and no one arrived he finally asked, via his board, when the change was taking place and who was coming next. \n\n\"Well, unless you have some objection, you're stuck with me for the night.\" \n\nHenry smiled as he wrote 'That's great' on his board and the evening continued much as the day had gone. \n\nBy the next morning his throat was starting to feel better and he could scratch out some words, though Selma admonished him if she thought he was talking too much. The doctor who came by in the morning said Henry would be staying another day, mostly at the insistence of the social workers but they agreed it would do his physical condition some good to stay as well. After that bit of news Selma pulled out her phone and gave Cara the update, including letting her know that she would stay with Henry for the rest of his stay. Henry just smiled. \n\nThe next 24 hours passed similarly to the previous 24 hours. Selma had actually brought a couple changes of clothes so she was able to stay relatively clean and fresh. Henry wished he could say the same. \n\nWhen at last he was given a clean bill of health by the doctors and a relatively clean slate by the social workers, Henry was released. They climbed into Selma's Toyota Rav 4 and she drove him back to his house. He walked in to find the place all cleaned up, with Cara and Liz inside making lunch. \n\n\"After days of hospital food,\" Cara said, \"we thought you could use a home-cooked meal.\" \n\nHenry took a shower and shaved, and then they sat around the table and ate, talking about how awful hospitals were and studiously avoiding the subject of Henry's suicide attempt. For her part, Cara truly believed he wouldn't try it again. She had spent a lot of time talking to him over the past months and believed he was convinced that wasn't the way to go, but had succumbed to a weak moment. Liz and Selma weren't as convinced, and even Cara made a mental note to mark the accident's third anniversary on her calendar. \n\nHenry refused attempts by Cara to get him to stay with her family for a while. He already felt guilty enough for having monopolized so much of their time and simply refused to consider it. They stayed for a few hours before Henry insisted they return to their own lives, with assurances that he'd be fine. \n\nNot that he actually believed that. \n\n***** \n\nAnother month passed without any events of note. The weather was starting to turn as autumn and winter approached, and the winter clothes started making their appearance. \n\nThe neighborhood socializing continued as it had, as groups of two or more of the families would get together on weekends, and even sometimes would have dinner together during the week. Everyone made the effort to invite Henry, since he was the only single person on the street. He came a majority of the time but didn't accept every invite. \n\nWhat they didn't know was how hard it remained to go back to an empty house after spending the evening among families like the one he used to have, and his feelings on being able to handle that return to empty home generally controlled whether he accepted or not. \n\nHe tended to accept Cara's invitations more often than most because he felt he owed her for all she had done, as he also did with Liz's requests in hopes of spending a little more time talking to Selma. That was based mostly on the fact that she was single, and he was therefore not intruding on a family, and that he enjoyed talking to her because they had so much in common. They spoke smoothly and easily, and could go on for what seemed like hours. Liz and Victor often left them alone to do just that. \n\nBut then the night would end and Henry would go back to his empty, lonely house. Even he wasn't entirely sure when the depression and sadness began to turn to anger and frustration, but it did, and the stage was set even though the show wouldn't arrive for another month. \n\nIt was an uncharacteristically warm evening in November. There was a major storm moving through the area, with expectation of thunder and lightning. The rain was expected to be heavy and go on for more than a day. \n\nCara and David had put the boys to bed and were just considering heading there themselves. It was Friday night and Marcus had basketball tomorrow early. As they were closing up the house Cara turned off the TV, allowing the noise from outside to finally permeate their brain. \n\n\"Do you hear that, David?\" \n\n\"Yeah, it sounds like it's coming from outside, like someone's out there yelling.\" \n\nThey peeked out the window but couldn't see anything. Perhaps someone's TV was up really loud, but they doubted anyone in the neighborhood would be so thoughtless. \n\n\"I'm gonna check it out,\" David said as he pulled on his raincoat. \n\n\"Okay, just be careful.\" \n\nCara waited in the house waiting for David to come back and let him know what was going on, but soon twenty minutes had passed and he wasn't back. She pulled on her own coat and stepped outside. The yelling was coming from down the street. She had her face lowered against the weather but finally found David standing and staring at Henry's roof. She did the same. \n\n\"David, is that Henry up there?\" \n\n\"Yep.\" \n\n\"My God, why are you just standing here? He's trying to kill himself again.\" \n\nShe made to go toward Henry's house but David stopped her. \n\n\"No, he's tethered to the chimney. You can see the line and the harness he's wearing.\" \n\n\"Well, then, he's gonna get himself killed.\" \n\n\"I'm pretty sure that's the idea, honey.\" \n\nCara paused and began actually listening to the words Henry was yelling as a huge crash of thunder rocked the sky and the rain poured down in sheets. \n\n\"C'MON YOU ASSHOLE, IS THAT ALL YOU'VE GOT? I'VE SEEN MORE POWER FROM A 9-VOLT BATTERY!\" \n\n\"He can't kill himself and go to heaven so he's trying to get God to do it? That's ridiculous. We have to stop him.\" \n\nShe started to move toward the house but David again grabbed her arm and held her back. \n\n\"I CAN'T BELIEVE IT TOOK YOU SIX FUCKING DAYS TO CREATE THE UNIVERSE! AND THEN YOU RESTED? I COULD'VE SLAPPED THIS WHOLE THING TOGETHER IN A DAY AND A HALF!\" \n\n\"We're just going the stand here and do nothing?\" \n\n\"That's precisely what we're gonna do.\" \n\n\"WHAT'S THE MATTER, ASSHOLE? YOU AFRAID TO FACE ME?!\" \n\n\"But David...\" \n\nDavid turned to his wife and looked her in the eyes. \n\n\"Cara, baby, what you've done is amazing. You're my hero for what you've done for him...\" \n\n\"C'MON! YOU'LL NEVER TAKE ME DOWN. YOU COULDN'T IF YOU TRIED!\" \n\n\"...but you've taken him as far as you can on your own.\" \n\n\"David...\" \n\n\"No, baby. It's between him and God now.\" \n\n\"YOU PANSY-ASS BASTARD. YOU REACH DOWN HERE AND PLUCK AWAY INNOCENT WOMEN AND CHILDREN. HOW ABOUT TRYING TO TAKE DOWN A MAN, HUH?\" \n\n\"How in the hell is he gonna beat God, David?\" \n\n\"If he dies, he wins. At least in his mind.\" \n\n\"ALL POWERFUL, MY ASS!\" \n\n\"But if he doesn't,\" David continued, \"Maybe he'll understand that it's just not his time yet. He'll have faced God and still be here.\" \n\n\"FUCK YOU, GOD! FUCK! YOU!\" \n\n\"Go home, Cara. We've got this.\" \n\n\"We?\" \n\nFor the first time, she looked around and was surprised to see the men from every house bundled up in rain gear and watching the performance playing out on Henry's roof. In some cases, their wives were there as well, and she imagined the conversation she had with David was being similarly repeated between all the other couples. \n\n\"David, it's dangerous out here.\" \n\n\"We're his friends, Cara, and he needs us now. You've done what you could. At the risk of sounding sexist, the woman's part is over. It's a man's pride at stake now. It's our turn. Please go inside and be safe. We'll be okay.\" \n\nThe women somehow ended up at Liz's house, which afforded the best view of the spectacle. The men withstood the pouring rain, their eyes never wavering as Henry fought his battle with God. He went from daring God to kill him to begging him to do it, and then back to daring him again. All the while the thunder clapped and the lighting flashed and the wind roared around them. And through it all the men stood as sentries, ready to step in when their friend, their brother, needed them. \n\nThey were impressed with the stamina Henry displayed. Fueled by a seemingly never-ending supply of adrenaline, Henry railed at God and the universe for over two hours until he began to noticeably slow. Acting as if they had been given orders, the men all moved forward simultaneously, as if this happened every day and they knew exactly when their assistance would be required. They came together at the base of Henry's driveway. \n\n\"He must have a ladder somewhere,\" Chris theorized. \"Probably around back.\" \n\nHe and Monty headed up the driveway in search while the rest of the guys continued to plan. \n\n\"It's gonna be slippery. We'll need to be careful.\" \n\n\"Wait until he's really exhausted; otherwise he might fight against us.\" \n\n\"I've got a knife so we can cut the harness line if we have to.\" \n\nThe guys on the driveway responded to a summons from Chris to come around back, where the ladder was set up against a flatter section of roof that would be easier to walk on. David went first and made his way to where Henry was on his knees still trying to summon the energy to continue his fight. But it was over. \n\n\"Henry.\" \n\nHenry's head turned to look into the eyes of the 6-foot tall man standing over him. Even with the rain pouring down as it still was, the tears on Henry's face were evident. \n\n\"Why won't He take me, David? What did I do to deserve this?\" \n\n\"You didn't do anything, buddy. It's just the way things are right now. He has something else in mind for you.\" \n\n\"It's not fair, David. I shouldn't have to be without them.\" \n\nDavid got on to his knees next to Henry and took the sides of his friend's head in his hands. \n\n\"I know it, my friend. I know it.\" \n\nFinally, it was too much, and Henry broke down. David hugged him close to him as Henry's body was wracked with sobs. Monty appeared next to the embracing men and waited silently to lend a hand. They helped Henry to his feet and guided him to the ladder. Scott, another of the husbands on the street, and Chris, the two largest of the group, anchored the ladder from the bottom. Victor stood on the ladder and helped Monty and David guide Henry's feet safely to one of the rungs, and slowly they all descended until they all had feet on the ground. \n\nThey helped Henry into the house and peeled him out of his wet clothes. Yes, even his boxers had to go, but this wasn't the time for modesty or discomfort. They got him dressed and put him into bed. Stacy and Monty volunteered to stay and make sure all was well and the rest of the husbands returned to their homes. Cara did not care for the men's plan and was on the phone immediately. \n\n\"Tell the guys to go home,\" she told David as soon as she was off the phone. \"The men did their part. The women have truly got this.\" \n\nHer tone left no room for discussion so David simply called Monty and told him they had been relieved, at Cara's insistence, and they, too, knew better than to argue. They made one final check on Henry and then made their way back to their wives.  \n\n***** \n\nHenry awoke to the silence of the room. He vaguely remembered the guys helping him from the roof but it was more of a blur in his mind. What wasn't a blur was the smell of breakfast. That, he was pretty sure, was real. He stumbled out of bed and into the kitchen and was more than surprised to see Selma standing over his cooktop. \n\n\"Oh good, you're awake. Breakfast is almost ready. You didn't have much but I made some eggs and some fried potatoes.\" \n\n\"Selma, what're you...\" \n\n\"Cara called me last night and said my services were needed.\" \n\n\"You don't have to...\" \n\n\"Quiet. I'm right where I need to be, and where I wanna be, too. Okay?\" \n\n\"Where's Marisela?\" \n\n\"At Liz's. Now wash your hands.\" \n\nThey ate in companionable silence, though Selma spent more time watching Henry than actually eating. She had asked Cara after the time in the hospital to call her immediately, day or night, if Henry ever needed anyone, and Cara had done that very thing last night. Despite the weather, which had actually calmed quite a bit by the time Henry was being pulled from his roof, she bundled Marisela up and brought her to Victor and Liz's house, then went to Henry's house to take care of him. The guys had already left so there was just the two of them in the house. \n\nShe had set the alarm on her phone to ensure she was up before Henry. She looked in on him and he was still sleeping; it had been a long night after all. He was at peace, at least for the moment, so she took inventory of the kitchen to see about breakfast. There had been very little and hoped the eggs were still good, which they were. She found some russet potatoes in the pantry and cut them up for frying. It wasn't much but it would do. \n\n\"I suppose you know what happened last night.\" \n\n\"I do.\" \n\n\"I can't imagine what you must think of me.\" \n\nShe placed her hand on top of his. \n\n\"I think you're a man that loved his wife and kids and is angry at having lost them, and you are dealing with it the best way that you can. That's what I think.\" \n\n\"I think I need to lie down some more.\" \n\n\"Okay. I'll keep myself busy. Just let me know if you need anything.\" \n\nHenry nodded his head and started for the bedroom, then stopped. The memory of Cara lying next to him in the hospital came to mind. \n\n\"Selma?\" \n\n\"Yes, Henry.\" \n\n\"Would it...would it be too much to ask for...for you to just lay in bed with me?\" \n\n\"It wouldn't be too much to ask at all,\" Selma responded as a smile came to her face. \"I'd be happy to.\" \n\nSelma climbed into the bed first and got herself settled, and then Henry got in next to her. The end result was Henry resting his head on Selma's shoulder while she stroked his hair and face to help him relax. He was asleep in no time. \n\nAbout 45 minutes later there was a knock on the door, which Selma ignored and Henry apparently didn't hear. Next, the doorbell rang with similar results. Finally, the door opened and Selma could hear Cara calling Henry's name through the house. Eventually she opened the door to the bedroom to and found Henry cuddled up to Selma, while Selma put her finger to her lips in the universal gesture for quiet. Cara moved to Selma's side of the bed. \n\n\"He was up earlier and ate some breakfast. He's been asleep again for almost an hour.\" \n\n\"I wanted to check on him. I made him give me a key after the...after we had to break into his house. Would you like to take a break?\" \n\n\"Nope. I'd rather stay with him. Liz and Victor have got Marisela covered.\" \n\n\"So, you've got this.\" \n\n\"I've got this.\" \n\nCara just nodded and took her leave. She was aware of the growing relationship between them, and Selma had confessed to Liz that she was developing feelings for Henry and hoped he could somehow move on and look for love again. The suicide attempt was a definite setback. She wasn't sure about this most recent event but hoped it might serve as a turning point. \n\nSelma ended up spending both days of the weekend, though they both joined Victor, Selma, and the kids for dinner on both Saturday and Sunday, and Selma slept In Liz's guest room. There were no outward signs of affection between them but Victor and Liz both noticed Henry become anxious whenever Selma was out of sight. \n\n***** \n\nThe next week passed without incident, and with nice weather predicted for that weekend Kalina and Stacy planned a party in their backyard that would be much like the summer barbecues. \n\nIt was fully attended and the weather proved to very cooperative. The news had quickly spread among the wives that something seemed to be developing between Henry and Selma but they hadn't clued in the men for fear one of them would say something and spook Henry. \n\nAs dinner was served Henry and Chris were sitting off to the side of the yard discussing some of the services that Henry's company offered that may be of interest to Chris'. Selma approached them carrying two plates of food and Henry's head turned as he heard her approaching. \n\n\"I made you a plate, Henry. I hope that's okay.\" \n\n\"That's great, Selma. Thank you.\" \n\n\"Is that other plate for me?\" Chris asked. \n\n\"No.\" \n\nSelma just stared at Chris, waiting for him to understand what was going on. Henry looked at him as well, but it still took him a few seconds to understand, and then find a way to make a graceful exit. \n\n\"Okay, well, I think I'll find my wife and have something to eat,\" he said as he worked his bulk out of the low-slung chair and walked away without another word. \n\n\"I seem to have lost my companion, Selma. Would you care to join me?\" \n\n\"I would, thank you.\" \n\nChris found his wife, who had already put a plate together for him. \n\n\"Hey Kris, what's going on with Henry and Selma?\" \n\nShe followed his gaze to the couple in the corner and smiled, knowing very well what was going on. \n\n\"I'm not sure, babe. Maybe a miracle.\" \n\nSoon, the rest of the party was forgotten as Selma and Henry got lost in their own conversation and their own world. As the party went on the word quietly spread and the (hopefully) budding couple was left to themselves. \n\n\"Would you like to take a walk?\" Henry asked as they finished eating. \n\n\"I would, very much.\" \n\nThey disposed of their plates and headed out through the side gate, and it's not an exaggeration to say that every eye in that yard was on them as they slipped out, and the possibilities immediately became the primary topic of conversation. \n\nOutside the gate, Selma grasped Henry's arm, thinking that holding hands might be a little much right now. There was little said, and what was said was mostly banal talk about how nice the weather was and things like that. If one could read their minds, that person would know that they both wanted the same thing but that Henry was scared to try and Selma was worried about pushing him away. ",
        "After about 30 minutes found themselves in front of Henry's house, though still on the sidewalk. Henry stopped walking, and Selma looked at him in an attempt to figure out what he was thinking. Then Henry turned to her with a look of anxiety on his face, like he wanted to say or do something but wasn't sure how to start. Selma rested her wrists on his shoulders, her hands dangling over his back, and gave him a welcoming smile. \n\nThey looked into each other's eyes, and Henry's hands found their way to Selma's waist, causing her to lock her hands around Henry's neck in response. Their faces moved closer, slowly closer, until the first very tentative touching of their lips. Henry pulled Selma closer to him and she welcomed him doing so. \n\nAs the kissing went on, Henry grew more and more uncomfortable. He was very fond of Selma and for the first time in his life had someone that he actually thought he could have a relationship with, but something was holding him back, even pulling at him, and suddenly it was imperative that he stop. He pulled away suddenly, pulling himself from Selma's arms. \n\n\"Damn it!\" Henry shouted as his whole demeanor changed. \n\n\"Hey, it's okay,\" Selma offered, trying desperately to show her understanding. \n\n\"Selma, I'm sorry, I think I'm gonna call it a night. Let me walk you back to the party.\" \n\nShe took his arm once more and they head back toward Kalina's house. It was quiet, just like it had been when they started this walk, but now Henry seemed to have the weight of the world on his shoulders. He walked her over to the gate but didn't go in. \n\n\"I'll call you tomorrow.\" \n\n\"Okay, Henry. Sleep well.\" \n\nWhen Selma came through the gate all of the eyes again turned in her direction, but instead of seeing Henry come in behind her they watched as she latched the gate. She turned and smiled at all of the onlookers and then went inside the house. Cara and Liz were not far behind her. \n\n\"What happened?\" Cara asked \n\nSelma told them what happened on the walk, and they agreed that it seemed like a 'two steps forward, one step back' situation. The walk and the kiss were positive signs, but something happened that caused him to pull back, something internal that they could have no knowledge of or control over. The promise of a call tomorrow seemed to make that clear. All they could do was see what happened next. They returned to the party. \n\n***** \n\nCara was home alone, David and the boys having left early that morning to go on one of their 'man-trips'. She never objected and looked forward to the lack of testosterone that days like this promised. She was cleaning the kitchen when the doorbell rang. \n\n\"Hey Henry. How are you this morning?\" \n\n\"I'm okay, I guess.\" \n\n\"Did you need something?\" \n\n\"Cara, are you free this morning?\" \n\n\"I don't have any plans other than cleaning up a bit, but you should know my husband doesn't let me date.\" \n\n\"Oh no, Cara, it's nothing like that,\" Henry said, genuinely afraid his friend had misinterpreted what he said. \n\n\"Henry, I was kidding. What do you need?\" \n\n\"Would you...be willing to go somewhere with me?\" \n\nConsidering his hesitancy and tone of voice, Cara knew whatever this was would be hard, and he needed someone along for support. She'd have thought that would have been Selma but it wasn't her place to judge. What she was certain of was that he needed her. \n\n\"Do I get to know where we're going?\" \n\n\"Not yet, if that's okay.\" \n\n\"That's fine. Let me get my coat.\" \n\nThey climbed into Henry's car and drove out of the neighborhood. Cara wasn't really watching the road as much as she was looking at Henry. He was anxious but determined; nervous but resolute. The drive went on for about 30 minutes. \n\nAt last he pulled into a subdivision that seemed to be his destination, and when Cara saw the sign on the side of the road that said 'CEMETERY - 1 MILE' she knew immediately that's where they were headed. \n\nHenry navigated the complex system of roads and parking lots, knowing exactly where he was going and how to get there. At last he pulled into a small lot and into one of the five parking spaces there, all of them empty. \n\n\"Would you mind waiting here?\" Henry asked after they had gotten out of the car. \n\n\"Of course not. I'll be right here if you need me.\" \n\nHenry nodded, then trudged slowly across the grass and up a small rise. He was probably about 50 yards in when he finally stopped at a small collection of headstones. \n\nHenry gazed upon the final resting places of his family. Tears came to his eyes as they always did, and he almost just turned and left. But somehow, he found the strength to stay. \n\n\"Hey Jess.\" \n\nHe shifted his feet and thought about how to start. He had spent all morning thinking about this and what to say, but now that he was here the words wouldn't come. \n\n\"I, uh, tried to come see you a few weeks ago,\" he finally said, a chuckle of dark laughter coming along as well, \"but my travel plans changed at the last minute.\" \n\nOne of the things that Jessica has always loved about him was his ability to find humor in even the darkest time, and he hoped that she had laughed a bit. \n\n\"I also had a talk with God a few days ago. I asked nicely if I could come be with you. He very kindly said he'd rather I stayed here for a while. We argued, things got a little heated, but what're you gonna do. Can't really say no to God, right?\" \n\nAgain, he chuckled but only briefly. It was time to get down to why he was here. \n\n\"Jess...I've met someone. I think you'd like her. Her name is Selma and she...well, she reminds me a lot of you. She's caring and gentle and kind. Baby, I'm so lost without you. You always knew the right thing to do. I need you to tell me what's right. God, I wish you were here, or even that I was there, but I guess neither of those is possible.\" \n\nHe moved over, standing in front of the stones that read ARIEL ALICIA WESTON and ERIC HENRY WESTON. Jessica had wanted their son to be a 'junior' but Henry had insisted he be allowed to have his own name so he could be his own person. Using Henry as his middle name had been the compromise. \n\n\"Hey baby girl. How's my undersea princess? How about you, big boy. How's my little prince?\" \n\nHe got down on one knee, just like he always did when talking to them. It was important to bring himself down to their level, he'd always told Jess. He didn't want them to be intimidated by his size or scared to say something. They needed to feel safe to talk about anything. \n\n\"I miss you both so much. My friend, Selma, has a little girl. Her name is Marisela and she's 8. I think you'd all be best friends. Ari, Eric, it's important that you understand that I'm not trying to replace you. No one could ever do that. But she does fill a little of the Ariel-and-Eric-sized hole in my heart.\" \n\nHe stood up again and moved so he was right in the middle of all of them. \n\n\"Jess, you once told me that if anything ever happened to you that you hoped I'd find someone else to love and that could love me back. I told you I'd never love anyone like I loved you and I still think that might be true, but I think I still have enough for Selma. You're not here, baby, and God knows I wish you were, but I'm gonna take you at your word and hope you can forgive me if I've chosen wrong.\" \n\nThe tears were flowing freely now and Henry had stopped making any effort to stem the tide. \n\n\"I wanted you to know that when I finally see you in heaven that I may not be alone, but I promise you that I'll be there one day. But for now I have to stay here. God apparently has a plan for me and I have to see what it is. I'll miss you every day for the rest of my life, but I'm going to try my best to make you proud of me by living the rest of those days the best that I can. I love you, Jessica.\" \n\nThe final words were barely out of his mouth before he couldn't take it anymore and collapsed in tears. Cara, who had been quietly and slowly moving closer and closer knowing that when he needed her he'd need her right then, closed the gap between them in seconds and pulled him to her. \n\n\"It's okay, Henry, let it out. Just let it go.\" \n\nHe clung to her like a drowning victim grasps a life preserver, and the metaphor wasn't far off. They stayed there for several minutes until Henry's sobs finally went away and he pulled himself back from her. \n\n\"I'm sorry, Cara, but thank you for coming.\" \n\n\"No apologies needed, and you're welcome.\" \n\nThey walked back to the car and started the drive back to their homes. It was silent for the first 15 minutes, and then Henry spoke. \n\n\"Did Selma tell you what happened last night?\" \n\n\"She did.\" \n\n\"I hope she's not upset. I...I couldn't...I had to talk to Jessica first. I had to explain to her that I was trying to move on, but I wasn't leaving her behind, you know.\" \n\n\"I know. She was only upset that you were upset. She knows this is hard.\" \n\nHenry seemed to accept that answer and there was no more talking the rest of the drive home. He dropped Cara at her house and then pulled into his driveway. He pulled out his phone and called Selma. \n\n\"Hello?\" \n\n\"Can I come see you?\" \n\n\"Of course. You don't even have to ask.\" \n\n\"Are you at home?\" \n\n\"I'm still at Liz and Victor's.\" \n\n\"I'll be right there.\" \n\nHenry walked across the street and knocked on the door, which Selma opened since she knew it would be him. Henry took her hand and pulled her out on to the porch, and she offered no resistance. He pulled her close to him and without a word brought his lips to hers. She brought her arms around his neck and returned his kisses with passionate ones of her own. Liz and Victor watched from inside the house through the open door and smiled while reaching for each other's hands. \n\nAt last the kiss broke apart, but without the suddenness of last night. \n\n\"I'm sorry about last night.\" \n\n\"Don't be. It was your first try at intimacy. It was to be expected.\" \n\n\"Can Liz watch Marisela for a while. I'd like to go back to my place so we can have some privacy.\" \n\nSelma just waved into the house and they waved back; no words were needed. Henry took Selma's hand and they walked across the street to his house, and then into the bedroom. He climbed on to the bed and held his hand out to her. She took it and joined him on the bed. \n\nHe again moved his lips to hers and they kissed sweetly and gently for several minutes. Selma was going with the flow of whatever Henry was comfortable with, and when he slid his hand under her sweater to reach the bare skin of her torso she let out a welcoming 'mmmm'. And when his hand finally reached her bra-clad breast she let out another one, this time louder and longer. \n\nShe had just one brief moment of hesitation as he slid his hand back down and found the roundness of her ass, though he was outside of her clothing. She broke the kiss. \n\n\"Henry, I should tell you that I'm a little self-conscious about my size. I'm kind of a big girl.\" \n\n\"Selma, you are absolutely beautiful and perfect in every way. There's nothing at all you should feel self-conscious about.\" \n\nHenry's complete acceptance of her exactly as she was made all the difference in the world, and she gave herself to him, wholly and completely. They didn't go all the way this day, but over the next week they got together every day and explored each other on an intimate level. \n\nIt was a week later, the following Sunday, when Henry at last entered Selma for the first time, and it was like the heavens parted and the angels sang. It felt so perfect, so right, and somehow Henry knew in his mind and, more importantly, in his heart that he had made the right decision and Jessica was okay with it. \n\n***** \n\nA BRIEF EPILOGUE - 18 MONTHS LATER \n\n\"Thanks for the candy, Mister Henry.\" \n\n\"Bye kids.\" \n\n\"Bye Miss Selma.\" \n\n\"Bye guys. Be safe.\" \n\nHenry turned around into the eyes of his bride of just over a year and gave her a mock angry look. \n\n\"You're supposed to be resting.\" \n\n\"I can't relax. My butt hurts and your son won't stop kicking me.\" \n\n\"If you need me to rub your butt to make it feel better I can probably manage it.\" \n\n\"You rubbing my body parts is what got us into this mess in the first place.\" \n\n\"Honey, I think you're confused. It isn't the rubbing...\" \n\n\"Oh yes, it is. It's you rubbing that thing of yours inside me over and over again.\" \n\n\"If it bothers you I can stop.\" \n\n\"Don't you dare, mister. In fact, if you want me to rest I'll need some inspiration to stay on my back, and you're just the man to give it to me.\" \n\nHenry and Selma had married after dating for another 6 months. Marisela had gone a long way toward healing Henry's heart from the break caused by the loss of his Ariel, and now ultrasound had confirmed that their new baby, due in about a month, would be a boy. \n\nWhile no one could ever be sure of God's plan, Henry had decided that at the very least he was here to provide a husband for Selma and a father for Marisela, and he would take on other challenges as they came. Selma and Marisela moved into his house on the street, which made everyone happy. \n\nEven as happy as he was with Selma, Jessica was never far from his thoughts or his heart. He loved Selma very much, but part of him would always belong to his first wife. Selma knew this and was okay with it; the part of him she had was more than enough for her. \n\n***** \n\nfin \n\n***** \n\nAuthor's Note: I debated on which category to put this in. I considered Romance but felt it was not enough of a focal point of the story as a whole so eventually decided on Non-Erotic."
    ],
    "authorname": "BigGuy33",
    "tags": [
        "loss",
        "new love",
        "romance",
        "god",
        "tragedy"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-candyman"
}