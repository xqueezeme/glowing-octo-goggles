{
    "title": "The French Connection Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 12 - Prison Break, Redux\n\n\"Ah, so you are dirty.\" I said to the Warden. \"And we now have the proof.\"\n\n\"You ain't gonna live long enough to prove a damn thing.\" said Warden Williams. \"Men, kill this bastard. The girl gets killed by a ricochet, unfortunately.\"\n\nAs the guards moved to shoot me, the third guard behind them slammed the butt of his rifle into one of the guards' head from behind. The other hesitated, and I moved with lightning speed and kicked the gun out of his hands. Then the crowbar went to work. As the third guard collected the weapons, I administered punishment to the two guards as well as the Warden, who thought he was a 'Kung Fu fighter', but was sadly mistaken.\n\n\"They don't have any cuffs to put on them.\" said Leonard Lotz, the 'third guard'. He'd infiltrated the prison and confirmed what we'd been told: Yvonne Newton proclaimed her innocence the first time she saw him.\n\n\"No problem.\" I said. I got what looked like a solid rectangular box out of my pocket and placed it where I knew the electric junction for Yvonne's cell was. Then I manually pushed the door open.\n\n\"Come on.\" I told Yvonne. She came out as I directed Leonard to help me put the two guards in the cell. Then I closed the door and took the box with me, locking them inside.\n\n\"Let's take Warden Williams back to the FBI.\" I said. We hauled him up off the floor.\n\n\"Won't do any good.\" said the Warden. \"My men ambushed your men. They're all dead by now.\"\n\n\"Warden,\" I said wearily, \"I truly hope you don't think you're dealing with an Agency of the Weak-Minded, here. Lotz, you got a radio?\"\n\n* * * * * * * * * * * * * * * *\n\n\"Don, we're holding out in the control room!\" said Muscone. \"They've got the room surrounded, but haven't tried to come in yet.\"\n\n\"What about the cafeteria?\" I asked.\n\n\"It's a standoff, there.\" Muscone said.\n\nI looked at Lotz and we both grinned as I asked \"Have they tried to shoot at you, or shoot their way in? Have any of them fired a shot?\"\n\n\"No.\" said Muscone. \"Not yet.\"\n\n\"Good.\" I said. \"Tell your men to start shooting to kill. Their guns have no ammo in them!\"\n\nA moment later, Jack radioed back. \"They all surrendered. How did you know they had no ammo?\"\n\n\"I learned a few things... oh, about 400 years ago.\" I radioed back. I was later told that Jack Muscone responded to that with words that he did not learn in my daddy's household...\n\n* * * * * * * * * * * * * * * *\n\nThe FBI Agents locked the rogue guards into the cells in which they'd been hiding. Turns out some of them were the convicts sent to this prison, and were offered favors if they helped the Warden defeat us. They were given empty guns, and told that if they surprised the FBI, they'd be able to get the FBI's loaded guns and kill the Agents with them.\n\nMore Agents and other 'good guys' were coming in, so we left. At the helicopter, I asked Lotz if he was coming with us. \"No, I'm going to make a run for it.\" he said. \"Your sister will find something for me to do. By the way... thank you for giving Kathy that nice funeral. She was a good person, she deserved it.\"\n\n\"Yes, she did.\" I said. \"Take care of yourself, Leonard, and thanks for your help.\"\n\n\"I told you I was good at prison breaks.\" Lotz said in his cynical way, but with a grin. I grinned and we shook hands, and I boarded the helicopter to leave.\n\nWe got Yvonne Newton to the helicopter and took off. FBI Special Agent Jefferson remained behind to take command of the prison and the situation there.\n\n\"Who was that guy that helped you?\" asked Muscone as we buckled into the plane to go home.\n\n\"Oh, some guy I met in Paris last week.\" I said. \"He's good at prison breaks.\"\n\n\"No doubt.\" said Muscone. \"So... they're going to send extra lighter fluid for your bonfire for this one. How'd you do it?\"\n\n\"My buddy there infiltrated the prison as a guard.\" I said. \"He confirmed that it was Yvonne... she told him she was wrongly imprisoned as soon as she saw him, like she did every other new person she saw... and then he got wind that the Warden was going to give a lot of guys empty guns to hopefully subdue all of you. He was hoping some of his loyal guards could fire their loaded guns at you to make you think they were all carrying loaded guns. Fortunately, you guys were able to barricade yourselves long enough for me to get Yvonne out.\"\n\n\"And the Warden into our custody. And we got it all on tape. Good job.\" said Muscone. \"But we really do need to talk about you deliberately walking into traps like that...\"\n\n* * * * * * * * * * * * * * * *\n\nI went up to Yvonne, who was sitting towards the front of the plane, ravenously eating the breakfast she had been brought. \n\n\"Yvonne, what happened?\" I asked as I sat down next to her.\n\n\"I don't know.\" said Yvonne. \"One night last August I went to bed like normal, and the next morning I woke up in that cell. At first I had no idea what was going on, and the guards wouldn't tell me anything; they looked at me like I was crazy. I asked for a lawyer, and they said no visits, that my appeals were up. Over time, I figured out that they thought I was my sister Julie...\" She began crying.\n\n\"Yes.\" I said. \"Your sister betrayed you, too. She had you put in that prison cell so that she could roam free without anyone knowing she escaped. But you're out now. We'll have to confirm your identity by a DNA test, and you'll have to stay at home in your townhouse until we do, under Police guard.\"\n\n\"They didn't foreclose on my townhouse?\" Yvonne asked.\n\n\"No.\" I said. \"Apparently your sister made the monthly payments, and she would stay there or let her associates stay there. We're going to see about getting you your old job back with the library system, but it's more likely we'll have to find you a place with the University.\"\n\nYvonne nodded, then said \"Thank you for coming for me, Commander.\" Her voice quavered as she said \"I had lost hope that I'd ever get out of there.\"\n\n\"Never lose hope.\" I said. \"It is never over, until it is over.\"\n\nPart 13 - Early Elections\n\n\"Early DNA markers show it's Yvonne, not Julie.\" said Cindy Ross at 3:00pm, Tuesday, March 27th. \"The full tests won't be back for two days, and the legally defensible data won't be back for eight days. The Federal Judge agreed to let Yvonne wear an ankle monitor, and she can go to the grocery store.\"\n\n\"Good.\" I said. \"Laura informs me that Dr. Paul Berkshire needs an administrative assistant, and he is going to interview Yvonne. So things should work out for her, I hope.\"\n\n\"God, I can't even imagine it.\" said Cindy. \"Doing something like that to Molly, or her doing that to me. I know you and your sister are a long way better than you used to be, too.\"\n\n\"True.\" I said. \"I still make sure to keep my eyes firmly on my sister when she's in my presence, but few things compare to what Julie did to Yvonne... what Westboro and Thatcher did to those poor puppy dogs qualifies, but few other things...\" I shook my head in wonder of the evil that people can do to each other... and to puppies.\n\n\"That leads to one other thing.\" said Cindy. \"Davis thinks someone was using Yvonne's apartment as recently as last night. He thought he smelled perfume, and of course Yvonne hadn't been in her own apartment in months.\"\n\n\"He might be right.\" I said. \"You put out the APB for Julie?\"\n\n\"Yes.\" said Cindy. \"State-wide. The FBI has put out a nationwide alert for her, as well.\" Then she said \"I just have one question, sir.\"\n\n\"Which is?\" I replied.\n\n\"How long have you known Julie Newton was out of prison and working against us?\"\n\nI paused and then said \"I knew there was someone, a so-called 'outside agency' working against us as early as last Fall. Dana Fox did not go to California and choose to harass Callie on his own; the CIA would have barbecued him for fucking with their Agent 'Honeybee'.\" Cindy smiled at that, and at the thought of her beloved Agent 'Honeybee'.\n\n\"When we got Jack's kids out of that townhouse in Florida,\" I continued, \"Brooke said something about killing my family... and my dog, too. I think that was when it first struck me that someone was behind his prison escape, someone who also knew about Bowser. Of course I was trying to avoid being beaten up by Red Brooke at the time, so I didn't think about it again until later... and I realized that the Bowser reference went to Brooke by a dog-hater, and then it followed that whoever hated Bowser did so because it was Bowser who outed the Consultant of Crime.\"\n\n\"Yes it was.\" said Cindy, who had facilitated Bowser's action.\n\n\"I put it all together after the incident in Paris.\" I said. \"Waddell was sent there by Julie Newton, and perhaps some other rogues, to eventually set up my sister, who coincidentally is your cousin, to be killed. Someone gave the new CIA Director bad information, and he sent Melina to kill Elizabeth... and Melina was to be killed by Waddell.\"\n\n\"By the time I got back and handled everything concerning Goth Girl Kathy's death,\" I said, \"I was in the process of finding out if Julie was still in prison, and she wasn't; her sister had been put in there in her place. So I was already planning to go get Yvonne when Paulina couldn't find her. And so it goes...\"\n\nCindy shook her head. \"And why any criminal on earth thinks they can do business here and get away with it, I'll never know.\"\n\n\"That's what I wish they'd think.\" I replied. \"But still they try. Still they try...\"\n\n* * * * * * * * * * * * * * * *\n\nBigAgraFoods CEO Lloyd Feingold was relatively short at 5'6\" tall, and was beginning to show curvature of the spine in addition to having that classic 'pear shaped' body that denoted future health problems. Normally this was offset by his friendly demeanor, easygoing manner, and his way of bringing all sides together to make deals in the Boardrooms of the Nation. But now he looked haggard, exhausted, and in some ways befuddled as he took his place in the room in the U.S. Capitol, where he was to be grilled by the Senate Intelligence Committee.\n\nAfter the swearing in, the Senators began asking questions. Senator Samuel Russell was one of the first to be recognized by the Chair.\n\n\"Mr. Feingold,\" said Senator Russell, \"BigAgraFoods feeds millions of people, is that not right?\"\n\n\"We estimate that between six hundred million and one billion people are fed either directly or indirectly by BigAgraFoods farms.\" said Feingold.\n\n\"That is doing a lot of good for a lot of people.\" said Russell. \"But you have groups that attack you in the Press, for using genetically modified crops, stuff like that?\"\n\n\"That is true, Senator.\" said the CEO.\n\n\"And in the past few months, a group calling themselves 'The Guardians of Justice', a criminal, treasonous organization, have been making false accusations against you, is that not right?\" asked Russell.\n\n\"We consider their accusations to be baseless, yes sir.\" said Feingold.\n\n\"I would like to emphasize,\" said Russell, \"that this 'Guardians of Justice' group is being pursued by the FBI for charges that will include treason against the United States for releasing classified documents to the Public. I yield the balance of my time.\"\n\nOver an hour later, Senator Richard 'Bill' Nunn was finally recognized. He bore in: \"Mr. Feingold, whatever you think of the Guardians of Justice, they released what were purported to be copies of BigAgraFoods documents that suggested BigAgraFoods had plans in association with the Government to control the foodstuffs of the Nation. Are there genuine BigAgraFoods documents that match the copies the Guardians released?\"\n\n\"Senator, I have not seen what that terrorist group released.\" said Feingold. \"So I would have no idea what matches what in that regard.\"\n\n\"Let me ask this---\" started Nunn.\n\n\"Will the gentleman yield?\" asked Russell.\n\n\"The question is, Mr. Feingold---\" tried Nunn again.\n\n\"Will the gentleman yield?\" asked Russell again.\n\n\"No, I will not yield to you, Senator Russell!\" yelled Nunn, worn to anger. \"You are obviously trying to use up my time before I can ask these important questions, but your tactics to hide the truth will not work! Now Mr. Feingold... is it true that BigAgraFoods made plans with the Government, or without the Government, to control the foodstuffs of the Nation?\"\n\n\"That is not true.\" said Feingold. \"I am not aware of any such plans, for benign nor sinister purposes, to exercise that kind of control over the world's food supply.\"\n\n\"Mr. Feingold, did you know a BigAgraFoods employee named Larry Wheeler?\" asked Nunn.\n\n\"Will the gentleman yield?\" asked Russell.\n\n\"Please answer the question Mr. Feingold.\" said Nunn, ignoring Russell. \"Did you know a former BigAgraFoods employee named Larry Wheeler, or were you aware of him?\"\n\n\"Will the gentleman yield?\" persisted Russell.\n\nThe Chairman intervened. 'Senator Russell, Senator Nunn has already said he will not yield, and I will extend his time to cover the time you're obviously trying to waste, here. Mr. Feingold, please answer Senator Nunn's question.\" Russell was red faced with furious anger; if looks could kill, the Chairman would be dead.\n\n\"I've met many of my BigAgraFoods employees,\" said Feingold, \"but beyond the ones I am in constant contact with on a daily basis, I don't believe I can be expected to remember on a close basis. I don't recall knowing Mr. Wheeler, though I may have met him at a company function.\"\n\n\"Mr. Feingold,\" said Nunn, as the majority of the room got interested, \"Larry Wheeler was murdered, and the SBI investigators believe he may have been a whistleblower that exposed or was going to expose BigAgraFoods corruption, and that the Guardians of Justice documents were real. Are you sure you don't know who he was within your company?\"\n\nFeingold looked deeply confused. He covered his microphone with his hand as his lawyer whispered into his ear. The exchange went on for several seconds. Finally, Feingold answered: \"I stand by my previous answer, Senator. And I further assert that I am not familiar with what the Guardians of Justice may or may not have released to the Public. We have lawyers and cyber-security that handle those things, and I was never briefed on any of it.\"\n\n\"You're the CEO of the company, Mr. Feingold.\" asserted Nunn. \"And you're telling this Committee, under oath, that you had no knowledge of any of this?\"\n\n\"That is not what I said.\" said Feingold. \"I said I'm not familiar with what this group put out in any detail to which I can answer in this hearing.\"\n\n\"The Senator's time has expired.\" said the Chair as Nunn wanted to press the issue. The hearing concluded shortly afterwards. Nunn watched as Feingold and his attorney left, having an exchange of words, as if Feingold really didn't know what was going on, and was haranguing the legal beagle. Then he saw out of the corner of his eye that Senator Russell was staring at him. He turned and made sure to meet Russell's stare...\n\n* * * * * * * * * * * * * * * *\n\n\"How did it go, Lloyd?\" asked Mitt Willis, calling after seeing the hearings were over.\n\n\"God damn it, Mitt!\" swore Feingold. \"What the hell is going on? They were asking about that shadow group, and some guy named 'Wheeler'. Who the fuck is 'Wheeler'?\"\n\n\"He's a former employee of ours that was murdered down in Senator Russell's home area.\" said Willis. \"No one to worry about.\"\n\n\"Mitt!\" gasped Feingold, \"United States Senators were asking me about him! Asking ME! So yes, he's someone I need to worry about! Now you come to Headquarters tomorrow. I'm calling a 'come to Jesus' meeting with the brass and the Board...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Hi Don,\" said Senator Nunn, calling me on my personal iPhone. \"We just got through grilling BigAgraFoods CEO Lloyd Feingold.\"\n\n\"How did it go?\" I asked.\n\n\"Russell tried hard to interfere.\" said Nunn. \"But a few of my Conservative colleagues helped me put the guy through the wringer. Don, what I'm going to tell you may sound a little crazy, and you're way more observant than I am... but I think Feingold had no idea what was going on. He looked confused, he constantly asked his lawyer about things, and he's sitting there under oath saying he doesn't know what's going on... and he's the CEO of the company.\"\n\n\"Can you send me a tape of the hearing?\" I asked. \"So I can observe him for myself?\"\n\n\"I'll see what I can do.\" said Nunn. \"And Don, be careful over there. Russell was enraged at the questions I asked. He looked like a caged tiger...\"\n\n* * * * * * * * * * * * * * * *\n\nCarole and Jim had been put to bed, and Buddy was sleeping by Jim's bed. Bowser, however, was enjoying some skritchins from Your Iron Crowbar as Laura, my mom, Cindy, Callie, Teresa and Todd talked and watched election results coming in. At 10:05pm, the results were delivered.\n\n\"And from the Fox Two Decision Desk,\" said Amber Harris, sitting next to Dr. Romanov of the University's Institute for Politics, \"with 100% of the votes tallied, Assistant Public Health Officer Susan Weston has won the Council seat vacated by the indictment of Thomas P. Cook. Voters turned out in surprisingly large numbers, with 52% of eligible voters casting ballots. Dr. Romanov, how did Ms. Weston win this race?\"\n\n\"There were several factors, Amber.\" said Dr. Romanov. \"Ms. Weston is in touch with the issues that are important to voters: climate change, diversity, and equality for women. She's a former Police Officer, but is not a sycophant of Commander Troy and his policies of Police brutality. And name recognition as a Public Servant was also helpful...\"\n\n\"That's a crock.\" said Cindy, causing Bowser to look up at her. \"Jenna has the same name recognition, the same record of Public Service if not a better one, and the same general political views that this bozo said caused Weston to win. Ditto that for Harlow, for the most part.\"\n\n\"What do you think, Todd?\" asked Callie.\n\n\"I don't know.\" said Todd. \"Not many BOW Enterprises employees live in that district, so it didn't have much interest for us.\"\n\n\"She was a Police Officer, then went to the Public Health Department.\" said Teresa. \"Jenna's been a State Attorney for a while now, not really local or in local news. Turnbull didn't have a snowball's chance; he just did it to make a blog for KXTC on his experiences. And Harlow... how did she do, by the way?\"\n\nThe numbers were on the Chiron streaming at the bottom of the screen. \"Weston 52%, Stiles 31%, Carmela 7%, Harlow 5%, Turnbull 2%.\" I read. \"Might be good for Stiles in the D.A. race. Harlow had a lot of ads, but didn't even out-poll Professor Carmela.\"\n\n\"Why do you think Weston won, Darling?\" asked Laura, to me.\n\n\"I think she got the stealth endorsement of this outstanding dog, here.\" I said, petting Bowser. He looked at me with pure love in his canine eyes and wagged his tail mightily upon hearing his name. I pressed my palm into the right side of his head at the base of his jaw and he pushed back; he loved being rubbed there.\n\n\"Seriously,\" I said as I continued to rub Bowser cheek, \"I think Weston saying she was committed to running for the Council again, for either the same seat or Loran Michaels's seat, is what convinced voters to vote for her. The others are running for other positions, and like Teresa said, Turnbull wasn't serious about it.\"",
        "\"Which seat will she run for now?\" Cindy asked.\n\n\"Michaels's seat.\" I said. \"And then someone else will run for the Cook seat. It's all part of the plan...\"\n\n\"What plan is that, Uncle Don?\" Todd asked.\n\n\"Certain, shall we say, professional politicians and groups are trying to stack the Council. The Weston seat swap is part of it. We'll have to see who runs for what...\"\n\nPart 14 - Making Sausage\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette from in front of City Hall at 7:00am, Wednesday, March 28th. \"The vote is in, and Assistant Public Health Officer Susan Weston has been elected to fill the unexpired term of Thomas P. Cook on the Town & County Council!\"\n\n\"Ms. Weston won by a fairly convincing margin over Jenna Stiles, 52-31%.\" said Bettina. \"Asked if this boded ill for Ms. Stiles's campaign for D.A., Dr. Romanov of the University's Institute for Politics said that it actually bodes well for Ms. Stiles's name recognition, and that former Deputy Chief Della Harlow is the one whose campaign for Sheriff may be on the rocks.\"\n\n\"And in State news,\" said Bettina, \"the Legislative session is almost over, and a grand total of three bills have been passed by our State lawmakers: the Awards bill, with awards already being given out by the Governor; the Corporate Data Security Act, protecting big companies from Sunshine Laws and the Open Records Act; and the School Safety Act, which creates gun free zones within 50 ft. of all high schools, middle schools, and elementary schools.\"\n\nBettina: \"The School Safety bill was not expected to pass, but moderate Republicans, led by Rep. Wilson Hammonds of Pottsville, voted with Democrats to pass the bill in the State House, while the Democrats ramrodded the bill through on a straight-party-line vote in the State Senate. Governor Val Jared did veto the bill, and the veto likely will be sustained.\"\n\n\"Passing that bill caused experts to believe that other bills might be worked out, but that has not been the case.\" Bettina continued. \"There will very likely be no Budget, which means the State continues to work at the exact same levels as last year, with no increases for inflation or cost of living. But the most serious situation is the Law Enforcement Bill. The State Patrol has warned that they will go on strike if a bill for them is not passed, and SBI Agents fear they will be out of work next week.\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is Priya Ajmani, Five-Alive News in the Morning!\" shouted the gorgeous Indian reporterette at 8:00am, Wednesday, March 28th. \"With the Legislative session nearing its end, the political Parties are trading barbs more than exchanging ideas for legislation. But one thing they all agree on is that Governor Val Jared is not taking the lead in solving the State's political problems.\"\n\n\"But no Legislators are filling the vacuum of leadership, either.\" continued Priya. \"As State Senator Katherine Woodburn said in a speech yesterday, the gridlock has reached a point where no one is even trying to find common ground. Meanwhile, State Senator Woodburn congratulated Susan Weston on winning the Council seat to fill the unexpired term of Thomas P. Cook, who was indicted on financial charges and then disappeared without a trace.\"\n\n* * * * * * * * * * * * * * * *\n\n\"It's bad.\" said Senator Moe Molinari, who had called me on my personal iPhone. \"Senator Cerone and I have enjoyed the lunches at each other's restaurants, and we've come to agreement on one thing: that there is no possible bill. But the Select Bipartisan Group, as we and a few others call ourselves, are willing to meet with you, and see if there's any hope left.\"\n\n\"We can but try, Senator.\" I said. \"Tell your group to be ready to work through the night. I'm going to lock us all in one room and throw away the keys, and I'll be the only one in there with a crowbar...\"\n\n* * * * * * * * * * * * * * * *\n\nThere is an old saying that goes:  'People who love sausage and the law should never watch either one being made.' And it is the truth.\n\nAfter lunch and making arrangements, I logged in as an SBI Reserve Inspector and flew down to Midtown in the TCPD's Bell 206 helicopter, parking on the helipad atop the parking deck that served the State Capitol. I went inside and was met by an assistant of State Senator Jimmy 'Coffin' Cerone, who guided me through a labyrinth of offices to a small conference room.\n\nInside were State Senators Molinari(R), Cerone(D), Woodburn(D), Cain Mitchell(R), Sean Stockton(R), Richard Langdon(D), and State Representatives Isaac Jacobson(D), Sharon Marshall(R), Johnny Perdue(R), Wilson Hammonds(R), and Elijah McKinney(D) of Southport, who represented the grimy, crime-ridden black districts of Southport.\n\nAlso present was Colonel Hartmann, the Commander of the State Patrol, and a youngish man named Dave Smigelski; he was Governor Jared's staffer for dealing with the Legislature.\n\nI sat in the chair at the center of the long table, with Col. Hartmann opposite me. Molinari and Cerone were the ends of the table, and everyone else found seats where they could around the table. I was faintly surprised that neither Molinari nor Cerone took the reins to lead the meeting; all eyes were on Your Iron Crowbar.\n\n\"All right.\" I said. \"We can go around the horn to get everyone's positions, or I'll just dictate a bill and you'll all agree to it, yes?\" There was laughter in the room at that.\n\n\"I'll go first.\" said Perdue, the only Libertarian in the State Legislature. \"I believe we should separate the State Patrol and SBI portions of this bill into two separate bills----\"\n\n\"Absolutely not.\" said Katherine Woodburn. \"Senate Democrats won't even hear of that.\"\n\n\"Why not?\" growled Colonel Hartmann. I was not sure why he was here; maybe the Republicans had invited him to verbally shame the Democrats. It wasn't working. \"Why not separate us from the SBI, and you guys take care of my people separately from the other stuff?\"\n\n\"I can give you one of two answers, and you see which one works best for you.\" said Richard Langdon, his shrill voice coming out of his tall, lanky body always surprising to me. \"The first is that we keep leverage by keeping the bills combined, and lose that leverage if we separate the bills. The second, as a more practical matter, is that even if we do separate the bills, the State Patrol bill would not go through unless we get what we want on the SBI bill. So there's really no point.\"\n\nColonel Hartmann looked disgusted, and who could blame him... but what he didn't realize was that Langdon had actually told him the real and open truth... something that rarely occurs in Legislative bodies at any level.\n\n\"Besides,\" said Elijah McKinney, \"maybe the SBI and State Patrol should be working more closely together, even merged into one unit. This would give the State the law enforcement manpower we need in times of emergencies, such as riots, when crowd control is needed.\" No one was fooled; everyone knew what McKinney really wanted to control: white opposition to black violence. He was one of Senator Maxine Watts's closest supporters with the 'Black Voices Raised' group.\n\n\"Are you kidding?\" gasped Colonel Hartmann, a bit naively not understanding what McKinney really wanted. \"We're the State Patrol, not the National Guard, and we're not a paramilitary organization like the NTF is.\" The NTF was the SBI's Narcotics Task Force, which had been accused of being a paramilitary entity unto itself when Jack Lewis was SBI Director. It had taken a certain redhead with a crowbar firing a machine gun at the NTF to wake some people up, but I digress...\n\n\"The NTF is not a paramilitary unit!\" Katherine Woodburn said hotly. \"It's a unit dedicated to taking filthy drugs of our streets and not letting them get to our children---\"\n\n*TAP!* *TAP!* *TAP!* *TAP!* *TAP!* \n\nNew use for the red crowbar! It was now being used as a gavel. \"Okay, okay, we're not going to debate the finer points of the NTF vs. the State Patrol.\" I said. Nice try, Don, but it was a NO GO.\n\n\"The Governor would also be interested in integrating the SBI and State Patrol,\" said Dave Smigelski, \"or at least to have a much closer working relationship, in order to crack down on Illegal Immigrants in the State and turn them over to ICE for prosecution and deportation.\"\n\n\"No way in hell!\" Wilson Hammonds, standard-bearer for the Republican Establishment Elites, who followed the U.S. Chamber of Commerce's orders to protect and preserve illegal immigration for the elite big companies of the Nation. \"Jared can burn in hell before we'll allow him a dime to persecute undocumented workers!\"\n\n*TAP!* *TAP!* *TAP!* *TAP!* *TAP!* \n\nEveryone quieted down, but Smigelski had introduced the 800-lb. elephant in the room: the Governor would veto any bill that did not address Illegal Immigration to his (the Governor's) liking. The long meeting was about to become much, much longer...\n\n* * * * * * * * * * * * * * * *\n\nThey brought in a dinner buffet. Everyone went through the line, some twice. Except Colonel Hartmann. He'd had enough of this, and announced that he was leaving.\n\n\"It is obvious to me that no one here except Commander Troy gives a God-damn about the men and women of the State Patrol. And it's not just disregard; I've never seen such utter hatred for law enforcement as I'm seeing from you Legislators, of both parties. You are all disgusting fatbodies!\"\n\n\"You do realize you're talking to and about the people who allocate money for your salaries?\" snarled Katherine Woodburn.\n\n\"And you think that's a threat?\" shouted Hartmann. \"You think that's your stranglehold over us? What are you going to do, Senator, when you have no State Patrol to allocate money to? What are you going to do, when there's no State Patrol giving out tickets to enrich your local and State Government coffers? And when there are bad highway conditions, and accidents on the roads?\"\n\n\"But you don't care about that, do you Senator?\" Hartmann continued, on a roll, now. \"You don't give a shit about us; you only care about your fucking political games, of who has what over who as 'leverage'. Well, we're sick and god-damn tired of being your political pawns. Go find someone else to fuck over.\" With that, Hartmann stalked out of the room.\n\n\"Well,\" said Dave Smigelski, not helping at all, \"I guess we'll add getting a new State Patrol Commander to our list of things to do. Want the job, Commander Troy?\"\n\n\"Let me tell you something, jerk.\" I replied, standing up to full height and bearing in on him, but not quite shouting. \"Colonel Hartmann was right. And he and the State Patrol are just a microcosm of the People of this State. They are disgusted with all of you. They did not elect Jared because he's anything great; they elected him because they are tired of the status quo politicians that don't seem to give a flying fuck about them.\"\n\n\"They saw a deeply corrupt standard politician in Jack Lewis, and they were desperate for anything but that.\" I went on, twisting the proverbial knife. \"They see you guys unable to even pass a bill in the Legislature, then attack Jared when he shows that an armored vest actually worked. Do you people truly not realize that the Voters don't see it they way you do, and that they are sick and tired of you?\"\n\n\"Then why are you here now, Commander?\" asked Richard 'Dick' Langdon. \"If you're so disgusted with us, why are you participating in this meeting?\"\n\n\"I thought I might actually be able to facilitate something good happening.\" I said. \"But I think I was wrong; I think you bastards are beyond hope. So is that what you want me to do? Want me to follow Colonel Hartmann out the door?\"\n\n\"No.\" said Jimmy 'Coffin' Cerone. \"We want you to stay, and help us get past this. Langdon, if you have a problem with that, don't let the door hit your ass on the way out. Now let's have some dinner, folks, and have a little cool-down period.\"\n\nAs everyone ate, Katherine Woodburn asked me \"How is your daughter doing after that ordeal in that warehouse, Commander?\" Everyone became attentive.\n\n\"She's doing well.\" I said. \"I think she's on the young side to really understand what happened. She's really not at the death-awareness stage yet.\"\n\n\"That's fortunate.\" said Sean Stockton. \"So she's had no nightmares, or anything?\"\n\n\"Not that we're aware of.\" I said. \"She hasn't woken up crying in the middle of the night or anything.\"\n\n\"Incredibly brave thing, your Police Captain did.\" said Jimmy Cerone. \"Just unbelievable.\" There was general agreement.\n\n\"And then Jared goes off and gets political at the joint session where she was being honored.\" said Langdon. \"Showing that armor vest off.\"\n\n\"That was my other Captain that took that shot.\" I said. \"And he wasn't being political about it, despite what the False News Media said; he was just showing the Legislators how close a call it was for Captain Ross.\"\n\n\"So you're still a Jared-lover, Commander Troy?\" snarled Cain Mitchell. It was an outright accusation, full of hatred and hostility.\n\n\"He's a damn sight better than the corrupt Jack Lewis.\" I said with authority in my voice as I stared down Cain Mitchell. \"I'll never regret that election outcome, no matter what anyone says about Governor Jared.\"\n\n\"Commander,\" said Cerone, \"why don't we begin our discussions of the Law Enforcement Bill again...\"\n\n* * * * * * * * * * * * * * * *\n\nJulie Newton was exhausted. She'd just gotten out of her sister's townhouse when the Police had begun showing up. Then they brought her sister Yvonne back to the townhouse. That meant that her, Julie's, escape from Supermax was known about, and that the Police would be on the lookout for her.\n\nShe'd burned a false I.D. to check into a seedy hotel on the southside of Town. Then she'd heard about the Hedonist party. It was at a club that was beginning to run down, called 'Punk'. And it was supposed to be a big orgy, where the participants would wear masks. That sounded like a place where she could disappear.\n\nSo here she was at this 'party'. There was plenty of food and drink at the bar, so she was able to eat well and drink. She watched the action on the floor, which consisted of masked men and women engaging in hot sex acts. Many were couples swapping, some soft-swapping, some hard-swapping. \n\nThen there were the young, very fit young men with washboard abs and large cocks, servicing older women while those women's husbands' watched. Though all were masked, Julie was sure that some of them worked for Rita, while others were college studs in that mythical Sigma Epsilon Chi (S.E.X.) fraternity, with the size to match.\n\nJulie noticed that in the far corner of the room, a woman was being lustily fucked by a man as she sucked another man's cock, while other men watched and waited their turns. The woman looked to be very beautiful despite the 'Batgirl' mask she was wearing that covered most of her head. Her breasts were large, her body fit, and her pussy was taking cocks, large cocks, like the starved whore she probably was.\n\nThen Julie noticed a handsome young man looking her over. He was fit and well-hung, so she smiled at him in invitation to join her...\n\n* * * * * * * * * * * * * * * *\n\n\"All right,\" I said to the exhausted Legislators in the room as it began getting late. It was 10:30pm. \"The Republicans in the room, especially Mr. Perdue, want the SBI-SIS to be discontinued. The Democrats in the room, especially Ms. Woodburn, want the SBI Reserve to go away. So why aren't we reaching a compromise on this?\"\n\n\"Some of us, Mr. Crowbar,\" said Moe Molinari, \"don't think it's a good idea to do away with either.\"\n\n\"That's right.\" said Jimmy Cerone. \"And I'll commit sacrilege by saying that I want something left of the SBI Reserve so that you, the Iron Crowbar, can continue in your role as SBI Reserve Inspector. Your influence on State Law Enforcement is much more soothing than some here are willing to admit.\"\n\nWow, they really were laying some things on the table, I thought to myself. But I ran with it. \"Okay, we discontinue the SBI Reserve Program, which never got off the ground and no one participates in, any more. But we still have an SBI Reserve of select law enforcement personnel, with a certain level of skills and experience, and probably a minimum level of rank or grade, such as Sergeant, that can be called up when needed. Maybe retired local LEOs, and such.\"\n\n\"What was the problem with the Reserve Program in the first place?\" asked Sharon Marshall.\n\nI replied \"It was created by Governor Jared and Senior LEOs, meaning Police Chiefs and Sheriffs, as a means of reducing the size of and mission of the regular SBI to a support role, and bringing up experienced local LEOs to help with cases outside their own jurisdictions. The idea was to have a pool of well-trained, experienced people assisting locals as well as being able to cross county lines. It was also hoped that it would strengthen badly frayed relations between local LEOs and the SBI of the time.\" \n\nI continued: \"It has largely failed due to lack of use. Jurisdictions wouldn't call for SBI Reserve help, and many local jurisdictions didn't want their people getting called up to go to other jurisdictions when they were needed at home. My own Town & County Council loves to rant about me helping the SBI and FBI, as an example.\"\n\n\"Having said all that,\" I said, \"there does need to be a Reserve pool for extreme situations, such as the Atlanta murdered and missing children situation some decades ago, or if the City were hosting the Super Bowl or College Football National Title Game and interagency support is needed.\"\n\n\"And the SIS?\" asked Woodburn. \"Roll that into the NTF?\"\n\n\"No way.\" said Johnny Perdue. \"The NTF is bad enough as it is. They need to be scaled back, and be only a support role for local LEOs They're too powerful and too overbearing on local LEOs as it is, they act like a paramilitary unit... and not all of the locals have Iron Crowbars to stand up to the NTF.\" I smiled at that one. I do love 'standing up' to the SBI-NTF. Katherine Woodburn was not smiling; she was most very displeased with Perdue's statement.\n\n\"What I suggest,\" said Dave Smigelski, \"is to transform the SBI-SIS into a new unit, called SBI-ICE. This unit will be dedicated to pursuing and arresting Illegal Persons in our State for turnover to the Federal ICE for deportation or incarceration, and restoring jobs to American citizens and the People of this State, especially our black citizens.\"\n\n\"I'd rather shut down the SBI and State Patrol than allow that to ever happen!\" shouted Wilson Hammonds, his face deep red with utter fury. \"There will never, ever be an SBI-ICE while I have any influence on it. Never!\" He and Smigelski stared at each other, and their hatred for each other was palpable throughout the room.\n\n\"Commander, it's getting late.\" said Moe Molinari. \"Tell us what we're going to do on this...\"\n\n* * * * * * * * * * * * * * * *\n\nThe young guy was mounting Julie as they made out hotly on the mattress on the floor. Julie had not realized how horny she was until the stud had kissed her and began fondling her breasts. Now she was on her back, naked except for her mask and her black high heel pumps that shaped her slender legs nicely, and the stud was next to her, kissing her and sliding his fingers in and out of her sopping wet pussy.\n\nShe was dimly aware that other people in the room had begun watching her and her new friend as the heat of their foreplay increased. She was stroking the boy's cock, which had hardened and lengthened to its impressive nine inch length. Pre-cum was leaking from the tip as Julie gently jacked his meat.\n\nWhen the guy could stand it no longer, he lifted up and rolled onto her. She spread her legs in welcome as he mounted her, dryhumping her, letting his cockshaft slide along her swollen labes as he teased her until she was squirming with hot desire. She finally was able to reach between them, grab his hard, thick shaft, and fit his cockhead into her slit. He pushed forward.",
        "\"Unnh!\" Julie gasped. The boy also groaned as his cock sank down into her tight, wet cunt. He got halfway, then pulled back and drove forward again, then again until he was balls-deep inside her, his meat fully sheathed in her snug womanhood.\n\n\"Oh yeah, fuck me!\" Julie said, trying to keep her voice down and failing. The young stud complied. He began humping his ass and hips up and down, pumping in and out of her with hard, deep strokes. Julie was gasping and moaning; it had been a long time since she'd had a cock this large inside her, and a young man like this balling her with raw, male power.\n\nTheir mouths were pressed together and their tongues twined as they rutted hotly. Julie was humping her ass up to meet the stud's thrusts down into her, matching his rhythm as the loud smacks of flesh-on-flesh filled the air. Others were watching, enjoying the sight of the pretty woman on her back, her legs high in the air and caught under the handsome young man's arms, and his muscular ass bobbing as he plowed her furrow like there was no tomorrow.\n\nAs Julie's first orgasm overcame her, she did not notice that the woman in the 'Batgirl' mask had begun watching her, even as the other woman was being fucked hard by a well-hung satyr. The woman shifted her position to be fucked dogstyle as she watched Julie being pounded...\n\n* * * * * * * * * * * * * * * *\n\nIt still felt like the incredibly hung guy was fucking her, that his cock was still pistoning in and out of her as Julie got dressed. She had begun coming hard, then another hot orgasm had overwhelmed her, until she'd lost count of the number of times her pussy had clamped down on the huge throbbing member invading her with relentless power.\n\nFinally, the guy whispered \"Had enough?\", and while she wanted this fuck to go on, she knew she was becoming exhausted. So she nodded. The guy began fucking her fast with short, stabbing thrusts, then groaned as he began coming, firing his jism into the tip of the condom he was wearing until he was spent, his balls drained and aching.\n\nThe sound of applause reached Julie's ears as they finished. The people watching were clapping in appreciation of the intensely arousing sex act they'd just enjoyed watching. Julie blushed self-consciously. Then she realized she needed to get out of there before she was recognized.\n\nAs she and the young stud got dressed, she asked him if he could take her to Pottsville, that she'd pay him for the gas and some extra for his personal courtesy. He'd agreed. They left the party, and the guy helped her into his Toyota Camry. Julie relaxed, feeling good for the moment, the lassitude coming over her. She closed her eyes for a moment...\n\n* * * * * * * * * * * * * * * *\n\n\"All right.\" I said. \"The SBI Reserve will consist of experienced Officers, some retirees of local LEO organizations, retirees from the regular SBI. Not unlike a Police Auxiliary unit.\"\n\n\"And you, Commander Troy.\" said Moe Molinari. That had been Molinari and Cerone's addition, that I specifically would be retained as the SBI Reserve Inspector. And I had added one more name for what I envisioned would happen in the future, if I had my way.\n\n\"Yes sir.\" I said. \"Okay, the SBI-SIS will cease to exist. The SBI-NTF will continue to operate upon the rules of last year's law, requiring notification and permission of local LEOs before operating within those locals' jurisdictions -unless- those local LEOs are part of the problem, and otherwise requiring the locals' invitation to work within their jurisdictions.\"\n\n\"Bloody lot of red tape to go through.\" muttered Katherine Woodburn. She did not like the 'devolution' of authority to the local LEOs at all. Not one bit. But there was the precedent of last year, there were tired legislators not really willing to be 'walls of granite' with her, and she was losing this battle.\n\nIn exchange, she was getting a plum concession: the 'SBI-ICE' unit to replace the SBI-SIS, with the purpose of being State-level ICE unit to pursue and apprehend illegal aliens and turn them over to the Feds for deportation, was officially buried. Instead, the SBI-SIS was leaving the building (figuratively), the SBI Reserve Director position was being abolished along with much of the SBI Reserve program, and there was no direct mention of money specifically for interdiction of Illegal Persons.\n\n\"Okay, we have a reasonable bill here.\" said Moe Molinari. \"No one is going to like all of it, but it's something we can all live with.\" Everyone else agreed. With one exception.\n\n\"Aren't y'all forgetting something?\" whined Dave Smigelski. \"The Governor is going to veto any bill that does not specifically give monetary increases and manpower for the direct purpose of combatting illegal immigration. There is no mention of that in this bill, and I'll be advising the Governor to veto it if that is not included.\"\n\nEveryone groaned. That was the ultimate deal breaker. For some reason unknown to me, everyone's eyes went to me for a response...\n\n* * * * * * * * * * * * * * * *\n\n\"And in the master's chambers, They gathered for the feast,\n\nThey stabbed it with their steely knives, But they just can't kill the beast...\"\n\n---The Eagles, 'Hotel California'\n\nJulie Newton woke up, feeling groggy. As she sat up, she realized she was in some sort of dimly lighted metal shed. A storage room had been constructed out of a chain-link fence, and she was inside it. The door was locked on the outside. She was trapped. Worse, her hands were zip-tied behind her.\n\n\"Hello?\" she called out. \"Is anyone there?\"\n\n\"Oh, yes.\" she heard a woman's voice say from somewhere in the darkness. Then a woman in clingy black 'pajamas' came out of the darkness, the clingy black clothes showing off her magnificent body: large breasts, tapering to a slender waist then back out to wider hips and a mouthwatering ass. Her hair was raven black, and her face was concealed by a Guy Fawkes mask, the tell-tale sign of an 'Anonymous'.\n\n\"How does it feel, bitch?\" asked another woman's voice, this one normally more feminine and sweeter, but now reduced to a whispery snarl. Her body was slender, fairly athletic, and she had blonde hair behind her 'Anonymous' Guy Fawkes mask. \"How does it feel to wake up imprisoned, not knowing where you are or what's going on... or what's going to happen? Doesn't feel good, does it?... but that's exactly what you did to your own sister.\"\n\n\"I can't even conceive of that level of cruelty. Well, maybe I can.\" said the first woman, then said as if it were a sudden thought: \"Oh... don't you realize where you are? Do you not recognize this place, this ground?\"\n\n\"No.\" said Julie.\n\n\"Why, it's the storage shed built on the grounds of the old Standard Tools Building.\" said the dark-haired woman. \"They're building a new building here, to replace the one that you and Pastor Westboro blew up... with several people inside.\" (Author's note: 'Women's Work', Ch. 03.)\n\n\"Including us.\" said a third woman coming up to them. She was dressed like the others: in clingy black clothes, but she did not wear an Anonymous mask; she instead wore a headdress and veil, and glasses. Julie could feel the aura around this woman, and she had an idea that she'd seen this woman before as the woman said \"Karla Warner died here; her blood stains your filthy hands.\"\n\n\"That's what she got, for betraying my great master!\" snapped Julie, unrepentant all the way. She looked at the woman with glasses, now knowing who she was facing. \"And you betrayed him, also. I will make your death more painful than you can imagine.\"\n\n\"You dare speak of betrayal, bitch?\" the blonde woman practically yelled. \"You, who betrayed the Town & County Police, who dishonored the TCPD badge, for which I am going to destroy you as the traitor Judas Iscariot was destroyed?\"\n\n\"I was loyal to my master, and to my beloved Captain Malone to their very ends.\" declared Julie. \"I have only one regret: that Commander Donald Troy did not die at their hands or at mine. Bring him here! Let him face me!\"\n\n\"You don't seem to get it, my dear 'Sinon'.\" snarled the older woman in glasses. \"This isn't about Donny Troy. This is between us women. You were the one behind the Kendra Luskin frame-up of Peter Dwayne Gordon, her false accusations doing disservice to all women who really are being raped. You were behind FBI Agent Dana Fox and his attack on Callie Carrington and her porn company, you were behind Waddell and his defection, you were behind Red Brooke's raping and murdering women all over the country...\"\n\n\"But the worst of all...\" the woman continued... \"you arranged with two men to chain a little girl inside a ring of explosives... yes, explosives, like the ones you set off right here that killed Karla Warner... that was your plan that you gave Thomas Cook and John Hardwood, to destroy that precious little girl... and then... there's Paris. Oh, God! how I owe you for Paris.\"\n\n\"That's right.\" said another woman, also dressed in black, coming in behind them. Taller than the others, her body just as magnificent as the first woman's, her raven-black hair flowing down her back behind her own 'Anonymous' mask. \"Did you really think you could get me to kill the Iron Crowbar's sister, then have me eliminated, too? Did you really think that would work, that you could possibly fool the Iron Crowbar in any of these idiotic schemes of yours?\"\n\n\"Yezzzzz.\" said the older woman. \"Your beloved master, Pastor Westboro, could not defeat the Iron Crowbar. And you, vastly inferior to him and Pastor Westboro, thought you could beat Commander Troy? But most important... you have Karla's blood on your hands... and Kathy's... my poor Kathy's soul cries for vengeance... and I will deliver it tonight.\"\n\n\"I want to deliver it.\" said the first woman. \"For my mother.\"\n\n\"No, let me.\" said the blonde. \"For my mother-in-law... and for the TCPD.\"\n\n\"Ladies,\" said the last woman, \"I'm the only one in here that can legally kill her.\"\n\n\"I have a better idea.\" said the older woman. She handed everyone latex gloves, and as they put them on she went over and picked up a gray metal box. \"Let me tell you a story. My dear baby brother loved Agatha Christie novels. He'd sneak into my room and take the ones on my bookshelf. I'd catch him and beat the shit out of him... until he became too big to beat up. He also found out all the Agatha Christie novels were in the Public Library.\"\n\nShe continued: \"One of those Agatha Christie novels was called 'Murder on the Orient Express'. M. Hercule Poirot discovered that everyone else stabbed the dead man, so he could not tell for sure just which person actually killed him; they all did it.\"\n\nShe opened the box, which contained four steel 'Rambo' knives, with heavy metal handles. \"So what I propose is that we do the same... and give Ms. Caesar here her just due as if it were the Ides of March.\" She went around and let the other women take a knife, then took the last for herself. \n\nThe taller woman unlocked the door to the fenced-in area. Julie tried to fight them off, but the older woman and the taller woman were well-trained in Aikido and other martial arts. They easily subdued Julie, brought her out into the larger space, and forced her to her knees. The other women came forward and they all surrounded Julie. The attack commenced.\n\nThey stabbed Julie in her chest, her back, her sides. The force of their blows had them moving to their right, in a counterclockwise circle around her, stabbing her all over the place. Her screams were cut short by a vicious thrust into her throat.\n\nFinally, Julie fell over. The older woman flicked her knife into the floor, and the other women came over and did the same, so that there were now four knives sticking out of the floor, side-by-side by side by side. They would never know who delivered the actual fatal blow, or if one of the multiple fatal wounds came from which one of them. But it did not matter; their mission was achieved. Karla Warner, Goth Girl Kathy, and the Town & County Police Force as well, were avenged.\n\nJulie Newton, former TCPD Detective and traitor to the Badge, spy for and assistant to the Consultant of Crime, and a rabid hater of dogs... was finally and at long last... dead.\n\n* * * * * * * * * * * * * * * *\n\n\"Do you have the votes to override the veto?\" I asked the room as the clock struck Midnight, literally and figuratively.\n\n\"With your help, Commander,\" said Moe Molinari, \"we can probably get the two-thirds majorities in both Chambers to override the veto.\"\n\n\"You'd do that, Commander?\" snarled Smigelski. \"You'd betray the Governor like that?\"\n\n\"No.\" I said. \"First of all, I am not beholden to the Governor, so 'betrayal' is a false premise that I reject. Second, I will be talking to the Governor, and without your sorry ass as a go-between. He will hear my unvarnished words from my own potty mouth, rather than your false interpretations of my Scriptures, so to speak.\" I knew that there was money that could be used for interdicting Illegal Persons, but Smigelski was fucking everything up with his overzealous position.\n\nJust then my Police iPhone rang. It was Captain Ross.\n\n\"What?!...\" I gasped. \"Where?... when?... okay. I'll come up now. Crime Lab people there?... no, get their asses in there to process that scene immediately!... Okay... yes, do that... okay.. I'll see you in a little bit...\"\n\nI hung up. \"Duty calls.\" I said. \"They found the body of one of the most wanted felons in the Nation in my County tonight. I've gotta go.\" I got up. \"Folks, you have a bill, here. Either pass it through, or don't. I've done all I can for you.\" \n\n\"Thank you for coming and helping, Commander.\" said Moe Molinari, standing up as well. Others also murmured their thanks as I quickly shook all their hands and then all but ran to the door.\n\n* * * * * * * * * * * * * * * *\n\n1:30am, Thursday, March 29th. I should not have been flying a helicopter that late at night and as tired as I was from the exhausting ordeal of making legal sausage. But I had an adrenaline rush, and I could almost feel the blood flowing in my body. Cindy had reported that the dead person was none other than the traitor Julie Newton, and that someone had made sausage of her with multiple stab wounds.\n\nDetective Jerome Davis met me at the airport, not realizing my Police SUV was already there. Still, his presence was good, as he filled me in on everything as we drove down to the Standard Tools Building site.\n\n\"The M.E. said that time of death was about 11:30pm.\" said Jerome. \"Her body was still warm when we found her.\"\n\n\"Who called it in?\" I asked.\n\n\"Anonymous tip to the Duty Desk, sir.\" said Davis. \"Burner phone, of course.\"\n\n\"Who has Captain Ross put on the case as the primary?\" I asked.\n\n\"Detective Warner, sir.\" said Jerome. \"May I speak freely, sir?\"\n\n\"You're going to ask why the Detective whose mother-in-law was murdered by Newton and Westboro is assigned to the case of that murderer's death?\" I asked.\n\n\"Not much gets by you, sir... so I'm told by the FBI guys.\" said Davis.\n\nI smiled. \"Well, it's an interesting question. I'm looking forward to hearing the answer myself...\"\n\n* * * * * * * * * * * * * * * *\n\nWhen we arrived, we gave our badge numbers to Patrolman Culver. I went inside the large metal shed, which was more like a too-small airplane hanger. Cindy saw me and came up to me, but did not say anything as she saw I was observing everything. My eyes were all over the place.\n\nThe body of Julie Newton had been removed. I saw four knives embedded in the floor, all soaked with blood. I saw Detective Joanne Warner talking to Officers near one of the chain-link storage 'closets'. On the other side of the crime scene I saw SBI Captain Tanya Perlman, sitting atop her 'tank', talking with Christina Cho. Near them was Sheriff Daniel Allgood and his lovely wife Melina.\n\n\"Your report, Captain.\" I finally said, after completing my observations.\n\n\"Martha wanted to get the body to the morgue for the autopsy as quickly as possible.\" said Cindy. \"It was removed just minutes ago. We have photographs if you want to see them.\"\n\n\"In a few minutes.\" I said. \"Keep going.\"\n\n\"Julie Newton was stabbed multiple times.\" said Cindy. \"Probably by those knives on the floor. Multiple footprints of different sizes all over the place, some of the footprints made in blood. Rather small feet; I'm going to theorize that they were either very small men... or more likely women. Myron got camera footage from around the area; it was inconclusive at best.\"\n\n\"What does that mean?\" I asked.\n\n\"Either nothing was on the film, or we got those staticky lines as if Slender Man showed up. In reality, it was likely a bug-killer type of device.\"\n\n\"CIA standard issue, maybe?\" I asked. Cindy nodded.\n\n\"Okay, let's go talk to the Sheriff.\" I said. We went over to Daniel and Melina.\n\n\"Sheriff,\" I said, \"we have to bring in the SBI-OER to investigate this.\"\n\n\"I agree.\" said Daniel.\n\n\"Why?\" asked Melina.\n\n\"Julie Newton was once a Police Detective here,\" I said, \"but then dishonored herself by betraying the TCPD Badge. We cannot be expected to be impartial.\"\n\n\"Make the call.\" said Daniel.\n\nAs I got my Police cellphone out, I said \"Daniel, surely you are not here for political reasons, like Gil Krasney would be if he knew about this.\"\n\nDaniel gave a brief, pursed smile. \"Well, sorta. I was in a meeting with my Chief of Staff, and Melina and Joanne Warner were at our house after going out for dinner together.\" Melina and Joanne were good friends, and went hunting together often, as well as their families socializing. \"When Joanne got the call, Melina called me, and so I came over. And some of it is for the reasons you said, Don... it's going to be hard to be impartial about this.\"\n\nI got on the phone and called SBI Lieutenant Norm Chow, who said he'd be right over.\n\n* * * * * * * * * * * * * * * *\n\nThere was one duty left, and it had to be done soon, before the Press got hold of the story and started blabbing it all over the place. Father Romano accompanied me and Captain Ross to Yvonne Newton's townhouse. We had no choice but to wake her up, and again had no choice but to tell her the news that her sister had been found dead.\n\nWe explained some of what we found, and I told her that I'd asked the SBI to come in and complete the investigation. Yvonne nodded in understanding. And despite what Julie had done to Yvonne, Yvonne did require Father Romano's aid and comfort, as this was indeed a time of grief for the young woman...\n\nPart 15 - Aftermath\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette at 7:00am, Thursday, March 29th, from in front of Police Headquarters. \"Fox Two News has learned that former TCPD Detective turned wanted criminal, Julie Newton, was found murdered last night!\"\n\nThe MCD room erupted into applause. Not wild applause like the day Sharples's arrest was announced, but a more muted, somber applause befitting the death of a traitor to the Thin Blue Line.\n\nBettina reported: \"The Town & County Police are not releasing details of Ms. Newton's death, but Commander Donald Troy issued a statement saying that he has called in the SBI-OER to lead the investigation, citing that the case is 'sensitive' and that while he has confidence in the integrity of the TCPD, he wants to make sure the investigation of the Newton murder is conducted as impartially as possible.\"\n\n\"And in State news,\" Bettina said, \"The State Patrol is preparing to go on strike! Colonel Hartmann, the State Patrol Commander, made a fiery statement last night. Roll tape.\"\n\nTape rolled: \"After meeting with Members of the Legislature,\" said Colonel Hartmann, \"I have come to the conclusion that the Legislature does not care about law enforcement in this State, they do not care about the safety and security of the State's citizens, and they don't care about anything but the lobbyists contributing to their campaign coffers. Last night, our Union and State Patrol leadership authorized a General Strike by the State Patrol if the Legislature does not pass, and the Governor does not sign, a Law Enforcement bill by midnight, March 31st.\"",
        "* * * * * * * * * * * * * * * *\n\n\"Wow, she's dead.\" said Rudistan, a bit solemnly. \"Hard to believe.\"\n\n\"Anyone told her sister yet?\" asked Teddy Parker.\n\n\"Yes.\" I said. \"We went over last night, so that she wouldn't hear it from the Press first.\"\n\n\"Sir,\" said Joanne, \"did you get the Legislators to agree on a Law Enforcement Bill?\" I did not fail to notice that she was trying to change the subject.\n\n\"Maybe.\" I said. \"And that reminds me of something I need to do.\" As I turned to go, I said \"Good coffee this morning, Davis!\"\n\n\"Thank you, sir!\" said Jerome Davis. \"Anchors Aweigh!\"\n\n* * * * * * * * * * * * * * * *\n\nU.S. Senator Bill Nunn had sent me video files of the testimony of Lloyd Feingold. I began watching them, and making observations. Just before 8:00am, Cindy knocked on my office door, and then came on in.\n\n\"Whassup?\" I asked as I indicated for her sit down.\n\n\"KSTD about to broadcast.\" said Cindy. \"Angels meeting to follow.\" Sure enough, Teresa knocked on my door, and came on in. I turned on the television.\n\n\"This is Priya Ajmani, Five-Alive News in the Morning!\" said the beautiful Indian reporterette at 8:00am sharp, from in front of the State Office Building. \"We have breaking news, just in the last five minutes, that an important bipartisan group of Legislators have worked out a compromise Law Enforcement bill! This bill will fully fund the State Patrol and give them the equipment they need. There will be major changes to the SBI, however!\"\n\nPriya went on to detail the SBI changes, which were verbatim what we'd agreed to the night before. Priya omitted only that Your Iron Crowbar was going to be the only SBI Reservist left.\n\n\"Wow, you did it, sir.\" said Teresa. \"They compromised!\"\n\n\"They were far more desperate to make a compromise than their public statements and the Media's lies would have you believe.\" I said. \"I think Colonel Hartmann ripping them a new one, and publicly as well as privately, helped a lot.\"\n\n\"What about the Governor?\" asked Cindy.\n\n\"Oh yeah.\" I said. \"Him. Ladies, there will be no Angels meeting this morning. I have a call to make, to Midtown...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Yes, Governor.\" I said. \"There's plenty of money for immigration enforcement. Let's just speak softly and carry large crowbars on that... yes, Governor, I think you can sign it... sir, they're going to curse you if you do, and curse you if you don't; they'll find a way to say bad things no matter what... you'll have plenty of time after the bill is passed to show them with 'deeds, not words'... okay... thank you, Governor.\" The Governor had hung up before I could say 'goodbye'.\n\nI resumed my review of the Feingold tapes. Yep, Senator Nunn was right: this guy looked confused, like he was realizing he'd not been told everything.\n\nI reviewed other public appearances by Mr. Feingold. It seemed he was always the one testifying, taking the arrows from Congress, taking the arrows in hostile press conferences. However, at the 'feelgood' appearances for charity, at the benign press conferences, BigAgraFoods President Mitt Bain Willis was always there. A 'good cop, bad cop' routine if ever this local cop on the beat had seen one, I thought to myself...\n\n* * * * * * * * * * * * * * * *\n\nAt 9:30am, I was stunned to watch on KXTC as breaking news came on. It was Dave Smigelski, 'spokesman' for the Governor.\n\n\"As you know,\" he said, \"the Governor has vowed to veto any bill that does not include full funding for supporting immigration laws and arresting Illegal Persons and turning them over to ICE, as well as creating an SBI-ICE unit for that specific purpose. The compromise Law Enforcement Bill is totally unacceptable to the Governor's office...\"\n\nI was already speed-dialing the Governor. His personal secretary answered. \"Yes, Commander, he's aware of it. Smigelski was not authorized to say that to the Press. The Governor is on it.\" With that, the secretary hung up on me.\n\nAs I was holding my cellphone, it rang. It was State Senator Moe Molinari...\n\n* * * * * * * * * * * * * * * *\n\n\"We have a problem, sir.\" said Captain Croyle at 10:30am. She had arrived with Lt. Hugh Hewitt of the SpecOps Teams. \"Yvonne is in no financial condition to pay for Julie's funeral, and there's no insurance to cover it.\"\n\n\"The prison system can bury her.\" I said.\n\n\"Or we can get her worthless body into the ground as fast as possible.\" said Teresa. \"Let the County bury her.\" It struck me why Teresa was suggesting what she'd just suggested: Teresa did not feel the same way about the late Captain Malone as I and others did, and she knew he'd want his lover Newton to receive a decent burial. If Teresa is anything, she is loyal to the last to those who've earned that loyalty.\n\n\"That means the TCPD has to provide the pallbearers.\" I said. \"Nobody on the TCPD is going to want to do that.\"\n\n\"I have a solution, sir.\" said Hugh Hewitt. I again understood.\n\n\"You were an Army Ranger, weren't you, Hewitt?\" I asked.\n\n\"Yes sir.\" said Hugh. \"We will take care of it.\" I approved the plan, and dismissed them both.\n\n* * * * * * * * * * * * * * * *\n\n\"Listen up!\" said Lt. Hewitt as he addressed the SpecOps people in their office areas on the other side of HQ, near Classroom 'J' and the gym. \"Who in here was in the Rangers?\" Four hands were raised.\n\nHewitt explained about the funeral detail. \"We Rangers do the dirty jobs, we do the bad and hard things as well as the good things. I know you Rangers will do your jobs along with me.\"\n\n\"Yes sir!\" said one of the SpecOps, also a former Ranger.\n\n\"I'll do it with you.\" said another guy, followed by one more. They had enough pallbearers to do the job required of them.\n\n* * * * * * * * * * * * * * * *\n\nGovernor Valnius Jared stepped up to the podium at the State Capitol, flanked by Senators Molinari, Cerone, Woodburn, and Stockton. He said to the gathered Press \"Thank you for coming. I am here to clear up some confusion. The words you heard earlier by my former staffer were not correct, and were not authorized by me. And while the Law Enforcement Bill is not perfect, I will accept it in its current form.\"\n\n\"Are you going to fire Colonel Hartmann?\" yelled out Tim Sioban of KSB News.\n\n\"No.\" said the Governor. \"He took care of his State Patrol Officers. He was frustrated. I can understand that, what with the constant barrage of False News reporting from you in the Press.\"\n\n\"Aren't you going back on your word?\" yelled Lester Holder of KXTC. \"Why are you capitulating when this bill doesn't meet your demands for immigration enforcement?\"\n\n\"That's your opinion, not the actual facts.\" said the Governor. \"Immigration enforcement will continue in cooperation with ICE and other Federal Government agencies. This State will continue to be a State where the law will be fully applied to Illegal Persons.\" \n\nThe Press hatred of Jared was building up. \"Senator Woodburn!\" shouted Brian Jennings, political reporter for KSTD, \"is is true that Commander Donald Troy wrote this bill for you, that you Legislators could not do this yourselves?\"\n\n\"Obviously we're the ones that make the bills and vote on them.\" replied Katherine. \"We were happy to have Commander Troy's insights, as well as those of State Patrol Colonel Hartmann.\"\n\n\"It would serve you in the Press very well,\" said Moe Molinari, with what was as close to anger as anyone had seen from him in some considerable time, \"to learn to respect Commander Donald Troy. You have no idea of what he is capable of, of his abilities. None.\"\n\n\"John Hardwood sure does.\" snarled Lester Holder. The Press Corps fell silent. The unspeakable had been spoken.\n\n\"I think that'll conclude this press conference.\" said the Governor. He left, followed by the Legislators. The Law Enforcement bill would be voted on that afternoon, and signed into law by the Governor that evening.\n\nPart 16 - Truth and Consequences\n\nOn Friday, March 30th, Lieutenant Norm Chow of the SBI-OER and Earl Drake, legal counsel for the SBI, interviewed Your Iron Crowbar in the Main Conference Room of TCPD Headquarters.\n\n\"Where were you between 7:30pm and 12:00 midnight last Wednesday?\" asked Chow.\n\n\"I was at the State Capitol from about 3:30pm until midnight.\" I said. \"Non-stop meeting with Legislators.\" I named the Legislators. \"Colonel Hartmann of the State Patrol was in there, too, but left earlier in the evening. And pray that you never have to endure eight hours with this State's Legislators.\"\n\n\"We've still got jobs, thanks to you doing that.\" said Chow. \"But you didn't hear me say that. Earl?\"\n\n\"We've already confirmed this with several of the Legislators.\" said Drake. \"As to Ms. Newton, we know you discovered her sister was put in Supermax in her place, and you rescued the sister. Did you have any idea at all where Ms. Newton was?\"\n\n\"I could get snarky,\" I said, \"and tell you that if I knew where Julie Newton was at any time, I would have gone and arrested her. But seriously, no. I had no idea where she was until I was called and told that her dead body had been found.\"\n\n* * * * * * * * * * * * * * * *\n\nDetective Joanne Warner was called into the Conference Room.\n\n\"Where were you between 7:30pm and midnight last Wednesday?\" asked Drake.\n\n\"Having dinner with Melina Allgood, Sheriff Allgood's wife.\" said Joanne. \"Then we went to her house and chatted, waiting for her husband to get home. He ended up working late, so I was at her house when the call came in that Newton's body had been found. We took her children to her sister's house, then went to the crime scene.\"\n\n\"And her sister is Commander Troy's wife?\" asked Drake.\n\n\"Yes sir, that is correct.\" said Joanne.\n\n\"Thank you for your time, Detective.\" said Chow, dismissing Joanne. After she left, he said \"Well, they'll be each other's alibi, as if they need one.\" \n\n\"True.\" said Drake. \"Warner is a suspect because her mother-in-law was killed at that same location, and she got her Purple Order by being in that building trying to make arrests when Westboro blew it up. But unless we get something solid, her alibi is going to hold up.\"\n\n\"If she had committed the murder, it'd be kind of stupid to kill Newton at that same location, wouldn't it?\" asked Chow.\n\n\"You're making too much sense, Lieutenant.\" said Drake. \"Okay, we've still got to talk to a lot of Police today; every single one of them technically is a suspect...\"\n\n* * * * * * * * * * * * * * * *\n\nSaturday, March 31st. In the early morning hours, I drove down to the World Headquarters of 'The Vision'. Dr. Eckhart's acolyte Tommy escorted me up the elevator to the large round office of the founder and great leader of the self-help empire.\n\n\"Ah, young Donald.\" said Eckhart happily, getting up from his desk as I came in. He came up and warmly hugged me, and I returned it. \"How are you, my young nephew?\"\n\n\"Good, Uncle Harvey, and you?\" I replied.\n\n\"Couldn't be better.\" said Eckhart. \"Oh, come on in, Cindy.\" Cindy came in from the other side as Eckhart went to his desk. \"My friend, the Police Superintendent in Paris, sent me an interesting package, wouldn't you say?\" He brought out a leather sleeveless jacket, blood-stained, with armor lining in the back. I recognized it; Goth Girl Kathy had been wearing it when she died.\n\n\"Armored in the back, but not the front.\" said Eckhart. \"An interesting choice of garment, wouldn't you say, my young nephew?\"\n\n\"Carefully chosen, I would say.\" I replied, knowing full well what Dr. Eckhart was intimating.\n\n\"Let's have some breakfast.\" said Eckhart. He led us to the dining table, which was on the side opposite his desk. The windows near the table looked out east, over the parking lot and grounds that were former vineyards and groves of fruit trees leading towards the University-Midtown Highway. The sun would come up on this side, I noted.\n\n\"And we have our other guest.\" said Eckhart as we came to the table. I saw someone come out from the far side... it was my sister Elizabeth.\n\nWe all sat down at the table. I made sure to sit with my back to the window so that Elizabeth, sitting opposite me, was facing the sunlight that was about to appear. Elizabeth had not failed to notice that, and gave something of a smirk.\n\nDr. Eckhart was at the end of the table, to my left, and Cindy came and sat next to me. We poured coffee and had bagels and cream cheese (yum!), and would later partake of a breakfast buffet. But now was the time to talk.\n\n\"I do want to thank you, baby brother, for Paris.\" said Elizabeth.\n\n\"Well, it did not go very well.\" I replied. No one present was fooled.\n\n\"Quite the opposite, mon petit fr\u00e8re.\" said Elizabeth, her eyes boring into me. \"That silencer on Melina's rifle actually transmitted a signal when she fired, that my little receiver picked up, so I knew exactly when to fall down as if I'd been shot. The French Police were kind enough to escort me to the Israeli Embassy, from where I was able to get back to the United States.\"\n\n\"Yes, we had many helpful friends.\" said Dr. Eckhart.\n\n\"And Kathy died a hero.\" said Cindy, working the 'vibe' she was having. That caused Elizabeth to look at me very hard, like she did when we were kids and she was about to attack me.\n\n\"You knew, didn't you?\" my sister said, seemingly accusingly. \"What am I asking, of course you knew. Truly nothing gets past you anymore. I only ask how did you know?\" I knew what she meant: that I had observed and deduced Kathy's fatal condition.\n\nI sipped my coffee then set the cup down. \"I had three chances to observe Kathy, with time lapses between: first, when she shot Mr. C. in the back with an arrow, in a very timely manner, I might add; second, on Christmas Eve, when you both visited Carole and Teresa in the hospital; and third, in Paris. I would be a dull Detective indeed to not notice with the time lapse that she was increasingly gravely ill, and was getting much worse when I saw her in Paris. I don't think she would've made it to June, as the doctors said she would.\"\n\nElizabeth nodded. \"I saw her every day. She tried to hide the pain, and that she was deteriorating...\" She became introspective. I'd rarely seen that look of sadness for another person on my sister's face.\n\n\"I didn't attend this party.\" said Cindy. \"Clue me in.\"\n\n\"Cindy knows what happened.\" I said. \"I told her the details, but not the background of it.\"\n\nElizabeth nodded, then said \"At first, I though my baby brother had made a miscalculation, and that Kathy had died as a result of Waddell already being up on the balcony with Melina. And then... I realized that you did not fail to realize that... and you let Kathy go up first, so that she could sacrifice herself.\" \n\nAll eyes were on me. I did not say one word. Of admittance, nor denial.\n\n\"You... you gave her the chance to die. Honorably.\" said Cindy, understanding. Dr. Eckhart nodded, a little smile on his face.\n\n\"Like Takaki Taichi.\" I replied quietly. \"Kathy had the choice, and she made it.\" I looked at Elizabeth. \"She did not fear an assassin's bullet. She feared going blind, and of being a burden to you, or to her family. She chose to die saving another person's life, rather than having her young sister see her die in darkness and in pain. She knew, as I know, that you would've cared for her to the end, but she preferred death to that, as well.\"\n\n\"Thank you for that.\" said Elizabeth. She then sucked it up and steeled herself. \"Well, I'm going to be leaving soon. As I said at Christmas, it would be a good idea to get out of your way. Very far away.\"\n\nI smiled. \"I'm sure wherever you go, you'll be of great help to our Uncle Harvey, here.\" Eckhart laughed.\n\n\"Not much gets by you, young Donald.\" he said. \"And I'm equally sure that some people are going to regret very badly what they tried to do to your sister.\"\n\nSome time later, Elizabeth hugged us all goodbye. \"Thank you again for Kathy.\" she whispered as she hugged me. \"She's at peace now. No more pain.\"\n\n\"She died well.\" I replied. As Elizabeth headed for the elevator, I called out \"Shalom!\" Her eyes crinkled in amusement as she nodded her head. Then she got on the elevator, and was gone.\n\n\"What was that about?\" asked Cindy.\n\n\"She's converted to Judaism.\" I said.\n\n\"How did you know that?\" Cindy asked.\n\n\"That Star-of-David pendant on her necklace was my first clue.\" I said. \"I saw her wearing it in Paris, and saw it under the neckline of her blouse today...\"\n\nCindy looked at her father and shrugged. \"Nothing gets by him, Father.\"\n\n\"Fortunately for all of us.\" replied Eckhart, his eyes also crinkled with amusement...\n\n* * * * * * * * * * * * * * * *\n\nAs we drove home in my Police SUV, Cindy was simply agog at what she'd learned.\n\n\"So that's why she wore the vest with armor only in the back.\" my cousin said, partly to herself. \"So that the bullet wouldn't come out her back and hit Melina.\"\n\n\"Yes.\" I said. \n\n\"And instead of dying blind and helpless,\" Cindy said \"she died a hero, with a Flag on her casket and a star in the wall at Langley. You really do take care of your people, Don. But... Kathy was no friend of yours. She helped Ned set you up at Ward Harvester.\"\n\n\"She also shot Mr. C. in the back with an arrow to save my life.\" I said. \"And she gave the CIA valuable information while working with Elizabeth... valuable until they changed Directors.\"\n\nYes, for right or for wrong, part of my plan was to give Goth Girl Kathy the chance to die honorably, and she took it. My reasons why? I could say it was for taking out Mr. C., I could say it was for helping Elizabeth arm the Jews and give info on the Islamists to the authorities, and actually being a good and loyal CIA Agent.\n\nBut my first reason was deeper than that. I was remembering that standoff with Ned in the Ward Harvester warehouse, walking into his trap to save the baby he'd kidnapped. (Author's note: 'Trilogy: The Dawn's Early Light'.) It had been Goth Girl Kathy that had cared for the baby, and protected the baby from Ned doing it harm, and I had not forgotten that.\n\nA little bit of bad in the best of us, a little bit of good in the worst of us. I may have been bad in planning for Kathy to die, but I chose the good and honorable ending for Agent 'Darkwave'. She had died, but her sacrifice would live forever...\n\nPart 17 - Epilogue\n\nI did not attend Julie Newton's funeral, which was held in the chapel of the Frank Freeman Funeral Home. There were not many people there. Yvonne Newton was there, some of her friends from the Public Library where she'd worked, a number of people from First Baptist Church, loyalists to Pastor Westboro and his memory.\n\n\"You're not going to believe who is here, and who is leading the interment service.\" Teresa whispered, having called me on my Police cellphone. She was watching from a distance, having led the traffic patrol for the funeral.\n\n\"Don't keep me in suspense.\" I said.\n\n\"Della Harlow is here, as are Kelly Carnes and Malinda Adams.\" said Teresa. \"And leading the service... SBI Chaplain Steven Ikea!\"\n\n\"No surprise there.\" I said. \"Birds of a feather.\"\n\nTeresa later told me that after the service was over, Chaplain Ikea, Della Harlow, and Kelly Carnes had talked for considerable time. \"I don't know what it's about,\" she said, \"but I don't need Cindy's vibes to know that something ain't right about it.\"\n\n* * * * * * * * * * * * * * * *\n\n6:50am, Monday, April 2d. I was sitting in my office reading Duty Logs before the coffee klatch, when my Police iPhone rang. I answered it to hear a near-babbling man on the other side. It was Myron Milton.\n\n\"Mary just gave birth to her, Commander!\" Myron was all but shouting. \"She's a beautiful little girl...\"\n\nAt 6:55am I went into MCD for the coffee klatch and to hear Bettina's broadcast. But I had news first.\n\n\"Ladies and gentlemen!\" I called out loudly, \"I am very happy to announce that Mary Milton just gave birth to a daughter, named Mary Louise Milton! Mother and daughter are doing very well, grandpa Marvin Milton is very excited, and daddy Myron is absolutely beside himself.\" ",
        "The room broke into applause. \"That is so awesome!\" said Joanne Warner.\n\n\"Poor Myron.\" said Theo Washington, with mock sympathy. \"He's going to be worn out with 2:00am feeding times.\"\n\n\"He'll find a way to cope.\" said Vice Detective Christopher Purvis.\n\n\"I can't wait for Seth and me to have those 'problems'.\" Joanne said.\n\n\"I won't be having those problems.\" said Cindy.\n\n\"Famous last words.\" replied Teresa, which generated her some attention. Teresa deflected it by saying \"What do you think, Commander?\"\n\n\"I think...\" I said, reflectively, \"that there is nothing in this world better than having and raising a child, or children. The feeding times, the long nights... they're worth it. They're worth it.\"\n\nEveryone quieted down. Bettina was coming onscreen...\n\nFinis... for now."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "big cock",
        "orgy",
        "mystery",
        "drama",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-french-connection-ch-03-2"
}