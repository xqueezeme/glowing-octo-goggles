{
    "title": "The Amateur Revival Ch. 02",
    "pages": [
        "This is the second chapter of the Amateur Revival story. This chapter starts where Chapter One ended. While I hope this chapter can stand by itself, it will make more sense if you read Chapter One first.\n\nThis story is a work of fiction. Some real places and institutions are mentioned or alluded to, but they are used fictitiously. Insofar as the author knows, no real person affiliated with any of those places or institutions has done anything akin to what is described in this story. Any similarities between any character in this story and any real person are coincidental and unintended. I encourage comments on this story, both favorable and unfavorable. Thank you for reading.\n\n_______________________________________________________________\n\nOver Carol's objection, I put my pants on that Saturday evening long enough to pay the girl who delivered our pizza. We both got dressed to go to the supermarket on Sunday morning to get things for breakfast and dinner. Otherwise, Carol and I stayed nude until she dressed to go to work Monday morning. We made love enough times over that day and a half that we were both sore. It was a good sore.\n\nOur next rehearsal was to learn the \"group dance.\" Kim's dictum was \"if you're going to perform nude, you rehearse nude.\" We also had to learn it nude. I'm not sure it was truly a dance, more a series of movements to music. The scene started with us standing bunched together at center stage with our arms in the air, a pose taken from the original show. When the music started, we began running around the stage, doing things like cartwheels and rolls that had to be choreographed so we didn't hit each other. That was followed by each guy picking a girl up from behind under her shoulders and spinning her around. The women had to keep their legs spread. \"Show some slit,\" Kim instructed. The \"dance\" ended with us lining up boy-girl-boy-girl and leapfrogging over each other until we were all offstage. Seeing this written description, it sounds a little goofy, but it was fun to do.\n\nAnother development at this next rehearsal was the presence of Kim's boyfriend Luke, clothed of course. \"Luke's my second set of eyes,\" Kim told us. Luke would attend all the remaining rehearsals.\n\nWe spent almost three hours getting the \"group dance\" to the point where we weren't running into each other. Kim finally called a break. \"We'll start on the couples' dances next. I'll e-mail each couple when I want to work with them.\" In addition to the group dance, each couple would do a dance by themselves.\n\nAgain, I don't know whether what Carol and I did was really dancing. Our dance started with the two of us standing back-to-back at center stage. When the music started, we each ran to the side of the stage we were facing. The bulk of the dance was the two of us running patterns across the stage in which we came very close to each other but never touched. The dance ended with Carol going into the stage left wings. I stood slightly right of center stage facing left. Carol was to run at me and leap with me catching her legs and lifting her in an upright position until her knees were level with my face. I was to hold her in that position and do a 360 degree turn. Kim was emphatic, \"I want you to hold Mom high enough that the audience can see her mound above your head and your dick below her feet.\" When I completed the turn, Carol was supposed to slide down my body with us embracing \"passionately\" when her feet hit the stage floor.\n\nWisely, Kim started with us practicing the end of the dance. More wisely, Kim had borrowed some thick gym mats for us to practice on. The tricky part was for Carol to time her jump so I could catch her and use her momentum to lift her up. That meant she couldn't jump too far from me or too close to me. In practice we did both. When Carol jumped too early, I could catch her but couldn't lift her. The result was I usually dropped her. When Carol jumped too late, she usually knocked me over and the two of us landed in a heap on the mat. It took a lot of time, but we finally mastered it. The rest of our dance was easy.\n\nThe only parts of the original show which Kim had retained were the opening \"taking off the robe\" scene and the final scene which ended with the cast in the nude \"daisy chain\" line across the stage that was an iconic image from the original show. Consistent with the show's original formats, Kim had included a few skits.\n\nIn the sequence of the show, my first skit was with Sarah and Derrick, called \"Circumcision.\" Sarah came onstage in a suit and began a monologue about male circumcision. When Sarah said, \"Let's look at an example of a circumcised dick,\" I walked onstage nude and stood beside Sarah. I am circumcised. Sarah took my dick in her hand and began talking about it. A camera mounted over the stage projected an image of my dick in Sarah's hand on a large screen upstage.\n\nWhen Sarah finished talking about my dick, she said \"Let's look at an uncircumcised dick.\" Derrick then walked onstage nude and stood on the opposite side of Sarah from me. Derrick was not circumcised. Sarah took Derricks dick in her hand and talked about it while an image of Derrick's dick in Sarah's hand appeared on the screen. The scene ended with Sarah facing the audience and saying, \"The most important question is whether a circumcised dick or an uncircumcised dick provides greater stimulation in the vagina. I need to research that further.\" All three of us then faced upstage. Sarah put an arm around each of our bare backs we walked upstage together. A curtain came down behind us.\n\nThe most interesting, and longest, part of Kim's re-written show came in the middle. The portion had no script. Instead, the couples came onstage nude, one couple at a time, and simply talked about their experience of being nude onstage in front of an audience and why they were doing the show. The idea was to say what you were thinking and what we said was meant to change from performance to performance. Beyond establishing the order in which the couples would appear, Kim never rehearsed this segment.\n\nWe moved into the theater for rehearsals the second full week of April. Even Sarah, Maria, Aaron, and Antonio had gotten comfortable going nude in the room we had used on campus. Sure, Kim and Luke were there clothed; but the rest of us were nude and there was no one else coming and going. It had become like our own locker room.\n\nWalking onto the stage naked for the first time, in front of the auditorium full of empty seats, gave all of us, I think, a strong sense that we were naked in a place where people are supposed to wear clothes. The sense of exposure was heightened by the fact we who were nude were a minority in the huge room. During that first rehearsal in the theater, there were probably twenty clothed people working on lights, sound, the few sets, and setting up storage of our few costumes. We were also introduced to the two theater students who would be the stage manager and assistant stage manager: Clarissa and Doug respectively.\n\nAt first, our nudity attracted a lot of attention from the crew. Carol, LaTonya, Sarah, and Maria drew most of the attention, of course. After some initial hesitance, all four women reconciled to the idea that they were there to be seen nude. I never quite got over the feeling I was doing something naughty when I walked out of the dressing room, across the hall, and through the door into the backstage buck naked.\n\nWe opened on the first Thursday night in May. Our \"dress\" rehearsals were the preceding Tuesday and Wednesday. On Tuesday, we got a shock: make-up! I don't think any of us had thought about wearing make-up. I hadn't known that bare skin doesn't look natural under stage lights. We needed a base all over our bodies to appear to have natural skin tones. We would also need facial make-up so that lips and eyebrows didn't wash out. Kim also wanted us to use make-up to make our pubic hair stand out a little. It took a couple of hours on Tuesday for one of Kim's classmates to teach us about make up and for us to be made up that first time. Getting make up on all parts of our bodies became a collaborative effort. That was fun and created a sexy mood for the rehearsal, which may have been part of the plan.\n\nCarol told me that the theater's maximum seating capacity was 350. About a dozen clothed people, including Kim's faculty advisor, were sitting down front for that first \"dress\" rehearsal. While we'd gotten comfortable being nude with each other, that first dress rehearsal again put us through the anxiety, and excitement, of being nude in front of strangers. I think we were all having fun with it by the end of the rehearsal.\n\nWe had to wash the make-up off our bodies after rehearsal. The dressing room had a tiled shower room with showerheads mounted around the walls, and two individual shower stalls that afforded privacy. No one used the stalls. After the rehearsal, we all showered together.\n\nKim had a videographer and still photographer come to the second dress rehearsal. Carol and I still have copies of the video and the stills from that rehearsal. The video is fun to watch every now and again. Kim had also gotten reporters from the daily campus paper and the weekly Cambridge newspaper to attend. Both women were, I think, shocked and then fascinated. Each cast member, still nude, was interviewed by one or the other reporter. However, the advance stories in the Thursday student paper and on the weekly paper's website were disappointingly brief.\n\nI awoke that Thursday morning and went to Carol's kitchen to make coffee while Carol got dressed for work. She had a client meeting that morning. Carol walked into the kitchen looking gorgeous, even in a business suit. I had yet to put anything on. \"I see you're ready for this evening,\" Carol teased as she took a mug of coffee from me.\n\n\"You look great,\" I said, \"but you look better in costume.\"\n\nCarol took a slug of coffee. \"Tonight's the night,\" she said.\n\n\"Are we ready for this?\" I asked.\n\nCarol let out a sigh. \"Talk about conflicted,\" she said. \"Part of me can't wait to get naked and prance around showing everyone everything and another part of me hopes the show is cancelled at the last minute. I'm glad you're going to be there with me.\"\n\n\"I'll go anywhere and do anything with you,\" I replied.\n\n\"I know,\" Carol said and hugged me. \"You don't realize how happy that makes me.\" We held each other tight for a few moments until Carol said, \"I have got to get going.\"\n\n\"Pick you up here at 4:00?\" I asked.\n\n\"Perfect,\" Carol replied and went into the garage. The show didn't start until 8:00 p.m. Carol and I were going to be at the theater ridiculously early. It didn't matter if we were the first. Carol had a key.\n\nThe weather was typical early May, cool at night but comfortable once the sun came up. I drove home, changed into running gear, went to the nearby state park, and ran trails for a couple of hours. As I ran, I thought about what it would be like in several hours when I was standing onstage in front of an audience naked. I thought about Carol standing naked next to me. I visualized LaTonya, Sarah, and Maria standing onstage naked too. I wondered how they would feel at that moment. I was getting myself excited. I'd have to be very careful about that.\n\nWhen I picked Carol up, she had traded her business suit for a pullover top, slacks, and flats. She carried a light jacket and a small bag. Raising the bag up, she said. \"I'm sure I won't need any of this, but I'll feel better having it.\" To me at least, Carol looked very beautiful.\n\nAs I reached out to open the stage door for Carol, she said, \"Oh boy.\" The door was unlocked. I followed Carol in. Kim, the stage managers, and the crew were already there doing whatever they did. Clarissa saw us and gestured towards a cardboard box in the corner. \"Programs in there,\" she said. \"Help yourselves.\"\n\nThe show wasn't using a traditional booklet program, both because of cost and because some cast members didn't want written evidence that they were in the show. The program was a single, one-sided sheet listing the scenes in order (there was no intermission). At the bottom was a line, \"Produced and directed by Kimberly Dwyer.\" Another line beneath that said, \"We thank the City of Cambridge and the Old High School Theater Group.\"\n\nAfter walking around idly for a few minutes, I followed Carol into the dressing room. \"We might as well get our clothes off,\" Carol said. We walked to a locker with a bench in front of it and began undressing. By that time, Carol and I had undressed together dozens of times, in private and with others. This time was different. We were both eager and hesitant at the same time.\n\nWhen Carol was nude, she took a small step away from me and asked, \"How do I look?\" I ran my eyes along her full breasts, slightly rounded tummy, down her slightly fleshy thighs to her shapely calves. I looked back up at her mound with its close-cropped blonde hair. I looked further up at her gorgeous face and bright blue eyes framed by her naturally blonde hair.\n\n\"You look exquisite,\" I said. We hugged, tightly.\n\nWe were still holding each other when LaTonya and Derrick walked in several minutes later. \"Already in costume,\" Derrick said when he saw us.\n\n\"Now, now,\" LaTonya said in mock scolding. \"No messing around before the show. People can tell.\" LaTonya and Derrick stripped off. Carol gave Derrick a hug and I hugged LaTonya.\n\nSarah and Aaron came in a few minutes later. They both seemed very nervous. Oddly, that put Carol and me more at ease. I think we were trying to show we were blas\u00e9 about the whole situation.\n\nMaria and Antonio didn't show up until after 6:00 p.m. Once they were in the door, Maria announced, \"we almost didn't come tonight, but we realized that would be unprofessional.\"\n\nIn a very exaggerated accent, LaTonya said, \"Unprofessional? We getting paid for this? Shit, I've missed my checks.\" That passed for funny at the time.\n\nClarissa's voice came over a loudspeaker in the dressing room. \"6:30. Cast start make-up.\"\n\n\"We've got to get our clothes off,\" Maria said urgently to Antonio. Carol and I started putting base on each other.\n\nOver the loudspeaker, Clarissa gave us a countdown of sorts: \"One hour to showtime,\" \"thirty minutes to showtime,\" \"crew to stations.\" Finally, the dressing room door opened. Doug said, softly but distinctly, \"take your position in the wings.\" Doug held the door as we walked, single file and nude, out the door, across the hall, and through the door Clarissa was holding for us.\n\nWalking out of the dressing room nude was a moment of truth. It was suddenly very real: we were going to be standing onstage naked in front of God knows who. Whomever bought a ticket and came to the theater that night would see our bare asses, pubes, and tits. I felt like I was stepping off the edge of a cliff, but I was also excited about what was to come. Carol reached out and squeezed my hand.\n\nDoug walked across the stage (the curtain was down) while Clarissa put on her headset. Into her headset, Clarissa said, \"lower robes.\" A curtain made of something like vinyl came down far upstage. It had hooks evenly spaced along it. Each hook held a buff-colored robe.\n\nClarissa gave the instruction \"kill houselights.\" A moment later, Clarissa said \"up curtain.\" As the curtain went up, the five-piece combo in the pit started playing an almost spooky tune. After a few bars, Clarissa looked at us and said \"go!\"\n\nNo stage lights were on, but we could see clearly as Sarah led us onstage in single file. A sound from the house told me the audience could see the stage well enough to see we were naked. In unison, we turned our backs to the audience and put on our robes. We turned around and walked to center stage, where we formed a tight circle. We put our arms in the air. A dull red light came on pointed down at us.\n\nWe held that pose for several beats until the music changed into something more seductive. The lighting changed so that the stage was illuminated, not brightly, in a sort of purple color. With Sarah leading again, we marched about as far downstage and formed a line. We were each doing dance-like moves, dipping our shoulders and swaying our hips. After a few bars, we started working with our robes, flashing a bare shoulder or thigh. The pace of the music picked up and we took our flashing further, lowering the robe to show a bare breast or turning and raising the robe to show a bare ass.\n\nThat was the point, at least for me, that the anxiety largely fell away. People came to see my nude body. I was going to show it and sell it.\n\nThe music changed key. We each turned to face our partner. We were opening and closing our robes, flashing each other. Carol looked happy and excited.\n\nThe music changed key again and sped up. We turned to face the audience and flashed our robes open and closed at them. That was my first good look at the auditorium. My first impression was that no one was there. Looking a second or two longer, I saw some people, but guessed there were fewer than 100.\n\nThe music stopped. We turned our backs to the audience and raised our arms again, grabbing ahold of our robes to lift them up and show our asses to the audience. We held that pose until a bell sounded once. The drummer played drumroll during which we whipped our robes over our heads. As that reached a crescendo, we spun around to face the audience and threw our robes down on the stage. Bright lights came on. We were fully illuminated, standing naked in a line facing the audience.\n\nI heard a gasp. We stood still, posing, for about thirty seconds. That was when I realized I was enjoying the hell out of this. I was amped and into it. The lights went out again and I used the darkness to steal another look at Carol. She was breathing harder. Her nipples had firmed. Even in the relative dark, her eyes were sparkling. It was a very sexy moment.\n\nA spotlight lit up Antonio at the stage right end of our line. He stood for a moment before slowly turning around. The idea was to show all of each actor's nude body, one at a time. The spotlight shifted from Antonio to Maria. She did her turn. The spotlight moved to Carol. She had an expression of joy on her face. She slowly did her do her turn. To me, she'd never looked more desirable.\n\nSuddenly, the bright (and hot) spotlight was on me. I looked straight ahead, unable to see the audience for the light. After a couple of beats, I took a small step right with my right leg to free my balls a bit. I lifted my arms slightly and turned both palms out in a \"this is me\" gesture. I held that pose for a beat before doing my turn. The light stayed on me for a beat after I finished the turn before moving to LaTonya.\n\nWhen Sarah finished her turn in the spotlight, the stage lights retuned to dull purple. Leaving our robes in the stage floor, we walked backwards upstage, trying to keep the line even. When we reached a point about two-thirds of the way upstage, a curtain came down ending the scene.\n\nWe walked offstage silently. Derrick and LaTonya were doing the first couples dance next. They stayed in the wings. The rest of us very quietly walked back to the dressing room where we could hear the show over the loudspeaker. Instantly, when we were in the dressing room, Carol hugged me very tightly. \"That,\" she said loudly, 'is the most fucking exciting thing I've ever done!\" We kissed. I could see Sarah and Aaron kissing too. Maria and Antonio were holding hands.\n\nOver the music on the loudspeaker, we heard Clarissa call \"ready Maria and Aaron.\" They quickly put on clothes and left the dressing room. They were doing a skit on the premise of two strangers trapped in a very hot elevator. As the elevator car supposedly got hotter, they began disrobing until they were both nude. At that point, they basically forgot about the heat and began exploring each other. The skit took several minutes. After a while, Clarissa called \"Derrick ready.\" Derrick put on a fireman's coat and hat and left the room. The skit ended with Derrick playing a fireman rescuing the stranded strangers and finding them naked in an embrace.",
        "Carol and I had a few minutes because the elevator skit was followed by Mari and Antonio's couple's dance. About mid-way through that, Clarissa's voice said, \"Sarah, Derrick, Will ready.\" The circumcision skit was next. Sarah was already dressed in heels, a skirt, blouse, and jacket. The audience wouldn't notice, but the blouse and skirt looked good on Sarah without any underwear.\n\nStanding naked on stage with my dick in Sarah's hand was fun but, hearing them yet again, Sarah's lines seemed dumb. The circumcision skit was followed by Sarah and Aaron's couple's dance. The ad lib segment came next. Carol and I listened over the loudspeaker in the dressing room as Maria and Antonio and Sarah and Aaron took their turns. Each couple was supposed to talk for eight to ten minutes. LaTonya and Derrick had just started when Clarissa called \"Carol and Will ready.\" We left the dressing room naked and barefoot and went into the stage right wings.\n\nI honestly had no idea what I was going to say when I got out there, much less what Carol would say. LaTonya and Derrick walked off stage holding hands. Clarissa whispered loudly, \"Carol and Will go!\"\n\nI followed Carol's enticing ass onstage. All the lights were on. It was very bright. The theater had been chilly for all our rehearsals, but I felt hot at that moment onstage. Carol and I walked to center stage and stood roughly a foot apart. Kim wanted us mainly facing the audience, but we were free to move as we wished so long as we were not concealing ourselves and stayed within about 18 inches of each other.\n\nAfter a moment's silence, Carol asked, \"Will, what are you feeling right now?\"\n\nThat question from my lover and dearest friend renewed the feelings I had experienced when I first stripped in front of the cast back in March. \"I feel freed,\" I said. \"Like a weight I hadn't realized I was carrying has been lifted from me. I also feel very privileged to be standing here naked with you. What are you feeling?\"\n\n\"I'm feeling nervous and excited,\" Carol replied. \"Also sexy,\" she said and gave a swish of her bare hips. \"I feel like I'm in a new and very different place. I also feel very grateful you're here. More grateful than you'll ever know.\"\n\n\"Why did you agree to be in this show?\" I asked Carol.\n\n\"It was my daughter's idea,\" Carol answered. \"This show is her senior project. She asked me to be in it, I don't know why, and told me what it was. My first reaction was 'No, I could never do that.' Then, I stopped to think. I, uh,\" Carol paused, looked down a moment, and then looked out at the audience. \"My husband died almost four years ago. I had always had fantasies, but I never acted them out from respect and affection for Tom. That wasn't his sort of thing. For a long time after Tom passed, I continued to repress myself out of loyalty to my late husband.\"\n\nCarol broke Kim's rules by walking several feet away from me, turning, and walking back. \"After Kim asked me to do this, I realized that continuing to live as I'd lived with Tom wasn't going to bring him back. This sounds awful, but his death was a gift in the sense that it has freed me try things, like this; things I'd thought about but would never have done while I was with him. I'm still living so I might as well live out some dreams. Why are you doing this Will?\"\n\nI knew the question was coming but dreaded it. I thought Carol and I had built a solid relationship in a short time but feared I could trash that in a few words. I took a deep breath. \"Because you asked,\" I said simply.\n\n\"Just because I asked?\" Carol responded, arching an eyebrow.\n\n\"Well,\" I said, \"I had seen the original Oh! Calcutta! years ago. I thought being in the cast was probably a lot of fun. That was a lesser consideration. The major consideration was that you asked me.\"\n\nMimicking Carol, I turned to face the audience. \"My wife divorced me almost twenty years ago. I had allowed my work to become my mistress and she got tired of it. That hurt, very deeply. I decided I couldn't endure that hurt again, so I closed myself off. I left the city where I worked and bought a place outside of Cambridge. When I moved here, I met a bright, beautiful, charming woman who would have made me rethink closing myself off from relationships except she was already married, happily, to a great guy. They had a great daughter. I became friends with the family and admired them all, but her most of all.\"\n\nI turned to face Carol. \"I was sad when Tom died. I liked him a lot. His passing seemed to put you even farther off limits. You don't move in on a woman after her husband dies. You were the one person I was willing to risk a relationship with but that could never happen. When you asked me to do this show with you the impossible suddenly seemed possible.\"\n\nI'd gotten more emotional than I should have. I saw a tear in Carol's eye. She stepped to me, hugged me, and we kissed. In full voice, Carol said, \"I wish I could have sex with you right now in front of these people.\" That brought multiple gasps from the audience. \"I love you Will,\" Carol said.\n\n\"I love you Carol,\" I said. We kissed and held each other very tight. Both of our hearts were beating fast. We hugged for a long time, saying nothing.\n\nWe finally let go of each other. Holding hands, we faced the audience. My eyes had adjusted so I could make out individual faces. Some people looked like they thought we were delivering scripted lines. Some seemed to be waiting to see what we would do next. One or two looked bored. Carol finally said, \"that's probably more than you wanted to hear from us.\"\n\n\"Thank you for coming tonight,\" I said. Carol and I walked offstage hand-in-hand.\n\nAs we walked past Clarissa, the stage manager said, \"good job.\" There was a moment of silence in the theater, then people started clapping.\n\nThere was no time for Carol and me to discuss what we had said onstage. The whole cast was in the next skit. The premise of the skit was two people in swimwear, Maria and Antonio, accidently stumbling upon a nude beach. Carol, LaTonya, Sarah, Derrick, Aaron, and I played the nude beach regulars. We had no lines. All the dialogue was the discussion between Maria and Antonio about whether they should stay or go and, once they decided to stay for a bit, whether they should take their clothes off. Of course, the skit ended with Maria and Antonio getting naked with the rest of us.\n\nCarol and I did our couple's dance next. Lifting Carol up and showing her off to the audience was exhilarating. Hugging Carol's nude body to mine when I let her down was a special moment.\n\nOur dance was followed by the \"FOC skit.\" Derrick came out in a tux and began a monologue about freedom of choice. A couple of minutes into the monologue, one of the women came onstage wearing panties, a skirt, and a top. Derrick issued a series of commands, having the woman turn around, remove her skirt, kneel on the stage, and remove her panties. Derrick's last command was \"expose!\" On that command, the woman pushed her ass into the air so that her vulva and asshole were exposed to the audience. Derrick resumed his monologue while the woman held that pose to the end of the skit. Carol, Sarah, and Maria rotated in the woman's role. They all said they enjoyed it.\n\nThe freedom of choice skit was followed by the group dance and the finale. The finale was almost exactly the final scene of the original play, with some dialogue updated. The end of that scene, with us lined up belly to belly, back to belly, or ass-to-ass also served as the curtain call.\n\nAs we went back to the dressing room, I thought \"that was over way too fast.\"\n\nI think everyone was a little giddy. In the dressing room, LaTonya yelled out, \"I don't want to put my clothes on!\"\n\n\"Shower,\" someone called. \"Everyone in the shower!\"\n\nThe shower room was more than large enough to accommodate all eight of us. Aaron, to my surprise, yelled \"let's wash Sarah!\" Sarah had no time to object before seven pairs of soapy hands were rubbing all over her body. That set the precedent that we'd all wash one person at a time. Naturally, Aaron was the next person washed. Derrick, Antonio, and I let the girls wash Aaron's dick.\n\nWe had just started washing LaTonya when Kim came in. \"Hey!\" she yelled, standing in the entry way to the shower. We calmed down. \"You guys did a fantastic job. My biggest concern was the ad lib segment and that turned out to be the strongest part of the show. Our house was disappointing but,\" she turned to the two young women standing, a bit uncomfortably behind her, \"our local theater critics tell me that positive reviews will appear in the campus paper tomorrow and on the Cambridge Sun website. People will read those and be fighting for tickets for tomorrow's show. We can't disappoint. Good job!\"\n\nKim walked out of the dressing room. Her appearance, although short, brought us all back to earth. We showered in our usual couples, dressed, and left. There was talk of getting a drink somewhere, but it was already almost 10:00 p.m. and several of us had to work the next day.\n\nKim and Luke were waiting for Carol and me by my car outside. \"Mom, Will,\" Kim started, \"what you two said during the ad lib was.\" Kim stopped. She didn't say anything for a moment. Finally, she said softly, \"it was just what I was hoping for.\"\n\nCarol had worn just her jacket, slacks, and shoes for the drive home. As soon as we were in her house, those came off. \"Get those clothes off, buster,\" Carol said lustfully. \"I'm as horny as I've ever been.\" We didn't wait to get upstairs. Instead, Carol rode me as I lay on my back on her living room rug. Unlike our usual lovemaking, which I'd characterize as slow and tender, this was frantic, almost animal, sex. It was also a hell of a lot of fun.\n\nAfterwards, I asked Carol, \"How did you come up with that line about fucking me onstage? I think you gave someone a heart attack.\"\n\n\"I would have if I hadn't known it would get us arrested,\" Carol said, \"I really wanted to show those people what we mean to each other. Besides, it would be hot to fuck with people watching.\" I was learning a new depth to Carol's exhibitionism. I liked it.\n\nCarol went into the office that Friday morning. I went home to work out. Naturally, before I worked out, I checked the Cambridge Sun website to see if its review was up. It was. The lead paragraph was all we needed: \"Do you think it would be fun to stand naked on a stage in front of a bunch of strangers? No? Well, the cast of Oh! Cambridge! which opened last night at the Old High School Theater for a limited run of six performances, might make you think otherwise. The play is based on the 1970s' \"nudie musical\" Oh! Calcutta! The point of the play seems to be giving the audience as many different views of the casts' nude bodies as possible. The bodies of the amateur cast are worth seeing. The original Oh! Calcutta! consisted mainly of skits which tried to be erotic. Oh! Cambridge! Does a little of that but also explores the cast members' feelings about appearing nude onstage. The profusion of bare breasts, buttocks, penises, and vulvas is off-putting at first. However, the cast seems so sincere and seems to be having so much fun that, by the end of the show you almost wish you were up there showing everything along with them.\"\n\nCarol had read the review and called just as I was finishing it. She was thrilled. At the end of our brief chat, I said, \"Maybe that will bring a few more people in.\"\n\n\"I hope it brings a lot more people in,\" Carol replied. \"Now that I've decided to show off my bare ass, I want everyone in town to see it.\" I loved Carol more every time I talked to her.\n\nThe house for our first Friday performance was about half full. Someone told me that the campus paper, which also had a favorable review, didn't come out until mid-afternoon that day. I hoped the college kids would read it that night and come to the show Saturday.\n\nAfter the Friday show, LaTonya, Derrick, Sarah, Aaron, Carol, and I went out for a drink. We were hyped from being nude in front of an audience for about 90 minutes and needed to calm down. For a college town, Cambridge didn't have a wide choice in bars, one of many reasons I had stayed away from the bars while I lived there. We settled on the quieter \"old people's\" bar called the Mare & Stud.\n\nI think we subconsciously expected to walk into the bar, have everyone recognize us from the play, and rise to applaud. Of course, that didn't happen. We were just an anonymous party of six sitting at a table. Derrick had just returned to the table with a second round when a middle-aged man came up and said, \"hello Carol.\" To me, the guy reeked of used car salesman.\n\n\"Hello Bob,\" Carol responded. To the table, Carol said, \"this is Bob Gentile, senior residential loan officer at County Bank. I do closings for them.\"\n\nGentile had a smirk on his face. To the table, he announced, \"I went to a play this evening.\" Carol's face started to redden. \"I've worked with Carol for over ten years,\" Gentile said. \"I suspected she hid a nice body under her lawyer's clothes. Boy was I right! I don't know who's fucking you Carol, but he's a lucky bastard.\" He gestured at LaTonya and Sarah. \"You ladies looked nice also.\" He glanced at Aaron, Derrick, and me and said, \"Sorry. I'm not into guys.\" Gentile walked away, still smirking.\n\n\"With that attitude, I doubt he's into girls very often,\" LaTonya commented.\n\nCarol took a gulp of her drink. \"It's ok,\" she said, more to herself than us. \"If Bob wants to spend our next closing remembering what I look like naked, I don't give a shit, so long as he pays my bill.\"\n\n\"He's probably going home to whack off to his mental picture of you,\" Sarah said.\n\n\"Like all the guys from the audience are masturbating to the image of your bare ass in the air in the FOC skit?\" Carol asked. Sarah had played the woman in the scene with Derrick that night.\n\n\"I hadn't thought of that,\" Sarah replied. A slight smile crept onto her face.\n\nAt home later, I asked Carol if she was concerned about the incident with Gentile. \"Bob Gentile is a leering jerk,\" Carol said. \"I've known that since I started doing work for the Bank. He won't pull the work from me. What he probably will do is try to embarrass me at the next closing. I can hear him saying something like, 'Carol, why don't you do he closing in the nude? I know you like to have people see you naked.'\" Carol paused, grinned, and added, \"If he says something like that, maybe I will just strip off, do the closing in the buff, and charge him double.\"\n\nOur first Saturday performance was a sellout. I was impossible to tell from the stage, but Luke told us afterwards that the audience was about two-thirds college kids. The audience was a bit rowdier than a usual theater crowd, although nothing out of control. As LaTonya and Derrick finished their couple's dance, a male voice boomed from somewhere in the auditorium, \"I'd love to fuck her. She's fucking gorgeous!\" I wouldn't have put it that way, but LaTonya did look great nude.\n\nThe whole cast went for drinks after the Saturday performance along with Kim and Luke. We went to a different bar, hoping for no repeat of Bob Gentile. This bar had a younger crowd with more energy. That suited our mood. Still, we got a table in a far corner.\n\nWe had just, finally, gotten our first round of drinks when two young women walked up to our table. I assumed they were undergrads. \"You're the people doing the nude play?\" the redhead asked. We all nodded. \"I went to your show tonight with some friends,\" the girl said, \"we all loved it.\"\n\nThe brunette with her said, \"you looked like you were having the time of your lives. Is it really that much fun to be naked in a play?\"\n\nThat question was, in my opinion, for one of the women to answer. I was a little surprised that it was Maria who answered it. \"It really is fun,\" Maria said. \"I thought I'd made a huge mistake when I had to strip the first time in rehearsal, but I did it and it's been a thrill.\"\n\n\"I wish I could do something like that,\" the brunette replied. The two girls walked away. We were recognized three more times that evening. Each time, the comments we got were very positive.\n\nNot all the feedback was positive. I spent Saturday and Sunday nights at Carol's as usual. When I got home Monday morning, a letter was wedged into my front doorframe. It was from the president of a local group I did volunteer work for. The bottom line was that my appearance in Oh! Cambridge! was \"inconsistent with our values\" and \"we must insist that you completely disassociate from our organization.\"\n\nI showed the letter to Carol that night. Her response was an uncharacteristic \"fuck them!\" The letter might have been the center of attention on our dressing room bulletin board for the last three shows. However, events moved beyond that.\n\nWe had a severe storm the Wednesday night between performance weekends. Power went out during the night. Carol and I thought little of it and just snuggled closer. Around 10:00 a.m. Thursday, I got a text from Kim asking the cast to be at the theater by 4:00 p.m. Kim and Luke were waiting for us. Luke looked sweaty and fatigued. Kim was her usual high energy self.\n\nWhen we were all in the dressing room, Kim announced, \"Sarah called me this morning. Aaron fell down their stairs while the power was out last night. It's not life-threatening, but he's in the hospital and can't walk.\"\n\n\"We're going with only three couples?\" LaTonya asked.\n\n\"No,\" Kim said sharply. \"The original show had five couples. We were pushing it with only four. We're also sold out these last three nights. We'll have four couples! The only people who know the show well enough to step in are Luke and me. We're going to do it. We've been here since noon working on the couple's dance.\"\n\n\"I missed an important lecture on valuing intangibles,\" Luke whined. He did not seem happy. I suspected Kim had given him the choice of either going nude in the show for three performances or give up getting laid by Kim. That was, I thought, a no-brainer.\n\nI had never seen Kim Dwyer naked before she stripped in the dressing room that night. Kim was a younger, slimmer version of her mother. In other words, gorgeous. I also noticed Kim was smiling a lot once she got naked. She hadn't smiled much in her role as the clothed producer and director.\n\nLuke certainly had nothing physical to be ashamed of, but he seemed unhappy. I again marveled at what we men will do for sex with a beautiful woman. I also wondered whether Kim appreciated the damage she might be doing to their relationship. Although, viewed from her perspective. What choice did she have?\n\nI did not see Kim and Luke's couple's dance. Luke said very little during their part of the ad lib segment. Kim cut him and herself from the ad lib segment on Friday and Saturday.\n\nFor me, the biggest difference was doing the circumcision skit with Kim instead of Sarah. It was odd, but rather nice, to have my girlfriend's beautiful adult daughter holding my dick onstage. During the final performance on Saturday night, Kim was rubbing the underside of my head with her index finger. I hoped that wasn't obvious on the upstage screen. Kim brought me awful close to breaking the no hard-ons rule. She was grinning at me as she, Derrick, and I walked offstage.\n\nI was almost sad going into the final ad lib segment with Carol. It had been special being nude with her onstage talking to each other and a room full of strangers. That night, we talked again about how the show brought us together, how we enjoyed being nude together, and how the shared exhibitionism had deepened our relationship. At one point, Carol said, \"I wonder if Kim had this planned.\"\n\nFrom upstage, we heard Kim say, \"I planned some of it, Mom.\" Carol and I both turned to see Kim, nude, walking downstage towards us. \"I chose to do this show with you in mind. I found the composition book where you wrote out your fantasies. I thought they were hot. I knew you hadn't acted any out because of Dad. I had to give you an opportunity now that Dad's gone.\"",
        "Kim had come all the way downstage and stood between Carol and me. She put an arm around each of our backs. \"The part I didn't plan was Will,\" Kim said. \"I knew Will was a friend of yours and Dad's, but he'd never registered with me. The way you suggested asking him to be in the show, I knew you were very attracted to him. Once I started working with him, I understood the attraction. He has a great body.\"\n\n\"Which I hadn't seen until we did this show,\" Carol interjected.\n\n\"Will puts off this vibe,\" Kim continued, \"of 'you can trust me, I'll respect you, and I'll give you a screaming orgasm.' He's incredibly sexy.\" Now, I was embarrassed.\n\n\"Anyway,\" Kim concluded, \"the most rewarding part of this show for me has been bringing you two together. You must promise me you'll stay together so we can all have fun in the future.\" Kim's delivery was so poignant I didn't consider what she meant by the three of us having fun in the future. Kim pulled us into a tight circle with her. My dick was pressed between Carol's belly and Kim's. Carol and Kim kissed me. I kissed each of them.\n\nWe had been good boys and girls for the first five performances. There had been no intentional touching of pubes. That changed when we reached the group dance in the final show. The four women were gleefully grabbing dicks. The final scene included a segment, just before we lined up in the \"daisy chain\" where we all ran around the stage, maybe lifting someone else up or spinning them around. That night, we men were grabbing tits and putting our hands between the girls' thighs.\n\nWhen we formed the daisy chain, Carol and I always got together face-to-face. That night, I was violating the no hard-on rule. As we came together, Carol spread her legs slightly. My dick went between her legs, pressed against her outer lips. Antonio's ass was pressed against Carol's and LaTonya's ass was against mine. As the curtain came down, Carol said, \"I'm horny as hell!\"\n\nWhen the curtain fell and we broke out of the daisy chain, I wasn't the only guy who was hard. LaTonya smiled at us, grabbed Derrick's hand, and almost ran towards the dressing room. Carol smiled at me, and we followed.\n\nIn the dressing room, LaTonya bent over a table and Derrick entered her from behind. Carol cried \"excellent idea!\" She grabbed my dick and started stroking it.\n\nOver Carol's shoulder, I saw Maria and Antonio enter the room. Their eyes lit up as they saw what we were doing. Mari's hand was on Antonio's dick and Antonio's hand was between Mari's thighs instantly.\n\nWhen I was almost painfully hard, Carol gently pushed me backwards until my legs hit a bench and I sat down. Facing me, Carol straddled me, and lowered herself down, guiding me into her with her hand. Glancing away from Carol's exquisite face for a moment, I saw that Antonio had Maria bent over the table next to LaTonya and Derrick.\n\nI was partially distracted by the dressing room door opening. Kim walked in, still nude, followed by Luke in a tee shirt and shorts. Seconds after Kim walked in, Derrick and then LaTonya came quite loudly. Carol was giving signs she wasn't far away, so I turned full attention back to her, taking a nipple in my mouth. I started using my legs to push up into Carol as she went up and down on me. That was an unwittingly good idea. Moments later, Carol said, \"oh god... Oh! God!... OH GAAAWD!\" Her body shuddered and her eyes closed. I shot a moment later, put my arms around Carol, and held her as tightly as I could.\n\nA few moments after Carol and I had come, we heard Maria, in a voice an octave lower than usual go \"Oh.. Oh....OHOHOHOHOHOHOHOH\" and gasp. That was followed by several grunts by Antonio. LaTonya and Derrick, Carol and I, and Maria and Antonio had all come in an unintentional series. We would never have managed that if we'd been trying.\n\nKim, stood in the center of the room, clapped her hands, and yelled \"this is great!\" Luke had walked out. After a couple more moments, Kim came over to Carol and me. \"I watched my mom come!\" Kim said. \"How cool is that!\" Kim looked down at my still erect dick, covered in Carol's and my fluids. \"That looks fantastic,\" Kim said. \"I'd love that right now.\"\n\n\"Where's Luke?\" Carol asked.\n\n\"He got pissy about everyone fucking and left,\" Kim replied.\n\n\"That's no fun,\" I quipped.\n\n\"There are issues,\" Kim retorted.\n\nSince no one organized a final night cast party, Carol and I decided to host a party in my pool the day after our final performance. The pool was the one major improvement I had made to my home outside Cambridge. We were only inviting the cast. Carol had a large banner made that said, \"NO CLOTHING ALLOWED IN POOL.\" We posted that on two stakes just beyond the far end of the pool deck, facing the pool.\n\nThankfully, the weather was excellent. Carol and I had just finished setting out the coolers with beer and wine when LaTonya and Derrick arrived. LaTonya saw the sign, saw that Carol and I were naked, and said, \"my kind of party.\" She and Derrick stripped off immediately. Maria, Antonio, and Kim arrived shortly after.\n\nI was pleased that Sarah also came. She wore a swimsuit which she immediately took off. \"How's Aaron?\" I asked as I got her a cup of wine.\n\n\"He's home,\" she said. \"He tore ligaments in a knee and gave himself a concussion. Michael's taking care of him this afternoon.\"\n\n\"Michael?\" I asked.\n\n\"Our son,\" Sarah replied. \"He's about to graduate from Shawnee Trails High.\"\n\nI had no clue Sarah and Aaron had any children. \"He didn't....\" I started.\n\n\"See the show,\" Sarah finished. She smiled. \"He certainly did. He came with his girlfriend the first Friday night.\"\n\n\"How did that work?\" I asked.\n\n\"Michael told me the next morning that I had a hot body,\" Sarah said with some pride. \"Kelly, Michael's girlfriend, called me and asked what it was like to be in the show. Kelly's parents are friends of ours. They saw the show last Friday. Of course, they missed Aaron and me. I was disappointed about that.\" Sarah being disappointed that friends hadn't seen her and Aaron nude in the show moved her further up in my estimation.\n\nThe eight of us were talking and sipping our drinks. Apropos of nothing, Maria said, \"that was really fun last night when we all came one right after the other.\"\n\nA naughty smile appeared on LaTonya's lovely face. \"I wonder whether we could do that again?\" she mused.\n\nMaria smiled and replied, \"there's only one way to find out.\" Pretty quickly, LaTonya and Derrick and Maria and Antonio were on cushions pulled from my lounge chairs, side-by-side, fucking in the sunshine.\n\nCarol, Sarah, Kim, and I were watching. Carol suddenly said, \"Will, we can't let Sarah feel left out.\"\n\nI put my hands on Sarah's bare hips and backed her up to a sturdy table. I sat her on the table and gently spread her legs. I began running a finger around her lips and found she was already moist. I pushed my index finger into Sarah. \"Oh!\" she said, \"I can't.\"\n\n\"It's only cheating if Will puts his dick in you,\" Carol said breezily.\n\n\"Oh, that feels good,\" Sarah said. \"Just, please don't tell Aaron.\" I moved my finger around inside Sarah. After a moment, she said, \"that's REALLY good. Right there.\" I rubbed vigorously on that spot. As Sarah's face flushed and her breathing sped up, I put my middle finger in too. \"Even better,\" Sarah said as she started squirming her ass around on the table.\n\nI looked at Sarah's face as I finger-fucked her. The looks she gave back made it seem even more erotic. Suddenly, Sarah said, \"Oh my!\" She rocked back and forth on the table, took three very sharp breaths, then let out a long \"aaaah.\" Sarah gently took my wrist and pulled my hand away from her. She got off the table, kissed me, and said, \"Wonderful. Thank you. Carol, you have a great guy here.\"\n\n\"I know,\" Carol replied, smiling.\n\nI didn't feel guilty about laying with Sarah. In my mind, she, like LaTonya and Maria, was an attractive woman, but not remotely comparable to Carol. Our one guest so far left out of the sex play, Kim, was a different matter. As I've said, Kim was a younger, sleeker version of Carol. In other words, she was a compellingly beautiful young woman clothed, and much more beautiful nude. It would be very easy to get too attracted to Kim.\n\nTemptation didn't arise that day. As LaTonya was coming very vocally, almost musically, a cell phone started to ring. Kim said, \"shit, that's mine.\" She walked to the table where she'd put it and answered the call. She listened for a moment, then said, \"I'm at the party at Will's.\" A moment later, Kim said, \"Mom, LaTonya, Derrick, Maria, Antonio, Sarah, and Will.\" Another pause, and then Kim said, \"of course we are.\" Kim listened again. After another moment, she said in a voice that sounded resigned, \"Ok. I'll be right over.\"\n\nKim ended her call. She picked up the white one-piece she'd worn when she arrived and began wriggling into it. I'm sorry, but there is something very sexy about a woman taking a swimsuit off or putting one on. As Kim pulled the straps of her suit over her shoulders, she said, \"Mom, Will, sorry but I've got to go. That was Luke. He wants me to go over to his place. I guess we're going to try to reconcile.\" Kim pulled on a pair of shorts, slipped her feet into sandals, grabbed her things, and was gone.\n\nEveryone at our party had work or school in the morning, except me. Consequently, everyone was gone by about 7:00 p.m. When Carol and I finished cleaning up, she remarked that we were the only people there the whole time who had not had an orgasm. I took her hand and led Carol onto the soft grass past the pool deck. As we kissed, her hand went for my dick and mine went for her clit. We were both still horny from watching our friends. Carol was soon on her back on the grass.\n\nIt seemed like I had just entered Carol when I heard the door from the house to the backyard close loudly and things being dropped on a patio table. \"Luke is such an asshole,\" I heard Kim saying. That was followed by, \"Oh shit! Sorry!\"\n\n\"We thought you'd stay the night with Luke,\" Carol said. I started to pull out, but Carol put her hands on my ass and pulled me back. \"She's already seen us fuck,\" Carol whispered. A minute or so later, I heard a sound to my left. I glanced that direction in time to see Kim, nude again, sit down in a patio chair about 18 inches away from us. She pulled her legs up so her feet were in the chair with her heels against her ass. The thought that Kim was watching me make love to her mother was arousing. I know, I'm perverted.\n\nAs usual, Carol and I took it slow, letting things build up until we each reached had an intense release, hopefully at about the same time. That night, I shot just as Carol's hips started bucking violently. She came moments later with a very sharp intake of breath. We kissed.\n\nI suddenly remembered that Kim was sitting next to us. I pulled out of Carol and rolled off to lie by her side. I momentarily felt like I'd done something wrong. I looked at Kim. She made eye contact and smiled. Her right hand was between her legs. Carol and I watched as Carol's gorgeous daughter got herself off. It was a beautiful thing to see."
    ],
    "authorname": "HStoner",
    "tags": [
        "exhibition",
        "public nudity",
        "group sex",
        "voyeurism",
        "nudism",
        "nudity",
        "group"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-amateur-revival-ch-02"
}