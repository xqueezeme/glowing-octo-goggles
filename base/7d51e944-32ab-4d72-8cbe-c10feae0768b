{
    "title": "A New Way of Seeing Things Pt. 02 Ch. 03",
    "pages": [
        "Tim and Gwen's lovemaking that Sunday morning was slow and relaxed, neither in any particular hurry to forego the comfort of each other's attentions for a quicker release. The Lady's complaints about wasting the day in bed eventually became too much for Gwen to ignore, and she coaxed her husband between her legs and to his orgasm. The business of running a household would not wait, and Gwen politely slid from beneath him and headed for the bathroom soon after his last tremor had passed. He chuckled and shook his head. Tim knew his wife had a schedule to keep, even on the weekend.\n\n\"Tim?\"\n\nHis razor stopped in midstroke as he looked into the mirror at the reflection of his wife standing behind him. He had not bothered to dress after his shower, but Gwen had thrown on a robe as a defense against any unexpected visitors that might find their way to the house that morning. \"Hmmm?\"\n\n\"That beach yesterday. Did you know people did...that...there?\" \n\n\"Well...I know there are certain spots on the lake that feature less clothing than others...that being one of them.\"\n\n\"And how do you know that? You've been there before?\"\n\n\"Well, yeah...Charlie knows where most of 'em are, and when we're out on his boat fishing, he seems to find his way towards them for a quick look-see.\"\n\n\"And have you and Charlie ever...joined them?\"\n\nTim laughed. \"Oh, God no! There's no way I would ever want to see Charlie naked, and it really would be cruel and unusual punishment to expose him to others!\"\n\n\"So, that was the first time you ever did...that?\"\n\nHis eyes met hers. \"First time. Let's just say I didn't think you would have the same scarring effect on people's eyeballs that Charlie would.\" \n\n\"I see.\" She thought for a moment, the Lady unwilling to believe her husband would willingly expose his wife's naked body to others. Had he hoped to put on an even bolder display? Tim's reflection looked back at her for some sort of confirmation that her line of questioning had reached its end. \"Did you know that they did more than just take their clothes off?\" Images of the young woman fondling her boyfriend were fresh in her memory. \n\nHe slowly began shaving again. \"Can't say that I did,\" he answered truthfully. \"We never really get close enough to see anything like that. Charlie likes to look, but he doesn't want to look like he's looking.\" \n\nThe Lady sniffed in disbelief while the Slut moved to take things in another, more perverted direction. \"Do you know why that girl was so angry with her boyfriend?\" Gwen was pretty sure she already knew that answer, but the Slut desired confirmation and perhaps a man's view of the event. She sensed Tim's discomfort with the subject, and felt guilty for asking.\n\n\"Well,\" he began slowly, finishing the last strokes of his razor and reaching for a towel, \"she was pretty vocal about it, so yeah, I guess I do. I'm surprised you didn't hear her as well.\"\n\n\"Oh, I couldn't make out what she was saying,\" Gwen answered half-truthfully, \"so, why was she upset?\" \n\nTim patted his face with the towel, unwilling to make eye contact. \"Oh, let's just say her boyfriend was quick on the trigger,\" came his muffled response.\n\n\"You mean he...finished too early?\"\n\n\"Yup, you could say that.\"\n\n\"But she seemed so mad!\"\n\n\"Well, I think it took her by surprise.\" He looked at Gwen and could tell his explanation was not sufficient. \"He lost it right about face level...\"\n\n\"Oh. Oh!\" The Slut crowed in pleasure with her correct interpretation. \"And I guess she didn't like that?\"\n\nTim laughed again. \"Would you?\"\n\nGwen sidestepped the question. \"Do you think it was an accident?\" \n\n\"Possible, I guess, but I doubt it. Just one of those things guys like to do, and he seemed like one of those guys that shoot first, ask permission later.\"\n\n\"Did you ever want to do that?\" Gwen remembered Natalie's accounting of Adam's tastes on the subject; was it really just a \"guy thing\"?\n\nIt was Tim's turn to artfully evade. \"I would never do anything that you didn't like.\" Her quick glance at his reflection gave him away; she didn't think his awakening member was a figment of her imagination. \"But I would always ask permission first. You have a beautiful face,\" he murmured as he kissed her on the forehead and moved past her towards his clothes. Gwen and the Lady worked together to let the subject drop, although she and the Slut pondered the meaning of his last statement for some time after.\n\nFriday approached, and Gwen's anxiety grew. She and Tim had not spent much time together due to the amount of time he was spending down at the condo job site, and while her toys had been called into action twice to help deal with the effects of a rampant imagination enlivened by their day at the lake and their conversation about it, she found herself wanting more. Her inability to satiate her desire made her doubt she would have the strength and resolve to resist any more inappropriate activities after her ride with Natalie. The Lady proposed she cancel, or at least move their get-together to a spot less likely to make certain \"perversions\" possible, a solution Gwen rejected as decidedly unfriendly. Perhaps some alone time before Natalie arrived would be the answer, to take the edge of any desire later on. \n\nGwen got up from her desk to head to the house and follow through with her pre-Natalie plan after the last of the urgent paperwork was disposed of that morning. The curious mix of nerves and excitement reminded Gwen of the emotions she felt before riding into a competition show ring\u2014the thrill of the adrenaline-pumping ride while she fought the fear of \"screwing up.\" Her nerves currently had the upper hand over her desire and had dampened much of her need for self-pleasure, but her practical side was certain that to do so now could help avoid being put in a compromising position with her sister-in-law later. \n\nHer cell phone went off as Gwen picked it up from the desk, almost making her drop it in surprise. A brief wave of fear swept over her as the thought occurred it might be Natalie calling to cancel. A glance at the displayed number told her otherwise.\n\n\"Hi Alison, what's up?\"\n\n\"Hi Mom! What are you up to today?\"\n\n\"Oh, you know, just did some paperwork, going to go riding with your Aunt Natalie later...\" and a trip to the bedroom in between, the Slut added. \n\n\"Oh...well, I've got the day off-would you two mind if I tagged along? Unless this is a grown-ups only thing?\" She added hurriedly.\n\nThe Lady gave a polite cheer. Alison's presence would most certainly prevent any improper behavior. \n\nOr would it, Gwen worried. Her mind conjured images of Natalie stripped to waist as she mounted her horse, or walking around nude in the front yard as she retrieved her bag from the car. She wouldn't with her niece here, would she? \n\n\"Mom?\" Ali's voice brought her back to the here and now. \n\n\"Oh, of course, honey, sorry, please join us, it's not a grown-up only ride, and besides, you're a grown-up!\" she babbled. \"Whatever horse gets left behind when we ride together gets so mad! They'll all love getting out together for a change.\"\n\n\"Great! I'll be up in a little bit.\"\n\n\"We'll wait for you.\" \n\nGwen first reaction was to call Natalie, to warn her, to ask her not to\u2014what? She tossed about the words needed to convey a message of propriety while around her niece, not finding anything that she thought might not come off as insulting or insensitive. In the end, she decided to wait until Natalie arrived and politely ask for her cooperation once she had gotten a read on her sister-in-law's mood. \n\nIt was Alison who arrived first, however, five minutes before her aunt. Mother and daughter were still exchanging pleasantries in the yard when Natalie pulled her SUV up next to Ali's. She was dressed as she always was, tight jeans, tight t-shirt, no bra, and greeted the others with a mix of surprise and warmth. Gwen watched nervously as they saddled the horses, examining her daughter for any sign that she might have noticed her aunt's unfettered breasts, waiting for that moment where Natalie would remove her top and Alison would be shocked and mortified by her nudity. She debated what to do\u2014act shocked and mortified as well, or perhaps pretend it was not happening and ignore it altogether? The first option would certainly be what Alison would expect of her mother, but Gwen knew that would be hypocritical given the casualness they had developed on their rides. Gwen decided she would not be able to fault Natalie for calling her out on that fact and chose not to open that box. The Slut suggested she take off her shirt as well in a show of support, an idea that was quickly dismissed. \n\nThe busty blonde cinched the last strap and led Tigger out of the barn. The others followed with their mounts, Gwen cautiously hopeful that today at least, Natalie's shirt would stay on. To her relief, it did, and the trio started up the ridge. \n\nGwen fretted over every moment on the trail, fearful her sister-in-law might say or do something that would be completely inappropriate with Alison in attendance. Despite nothing more salacious than gossip from the family's law firm of Curran, Stein, and Associates, Gwen cringed at the thought of Natalie as a ticking time bomb of expos\u00e9.\n\nThey took the long way around the ridge to the picnic table, only stopping there briefly to stretch. \n\n\"Oh Gwen, is next Friday a good day to go see Barry?\" \n\nShe visibly stiffened at the question and forced herself to relax. She knew what Natalie was speaking of. \"Uh, sure, I guess. We can talk about it later.\" \n\n\"Who's Barry?\" Alison asked innocently from the other side of Tigger. \n\nGwen scrambled to frame a suitable answer. \n\n\"Barry is a photographer,\" Natalie replied easily. \"Does wonderful portrait and human interest work. I'm taking your mother to go see some of it.\"\n\n\"Mom? Looking at pictures of something other than horses?\" She stepped from behind her mount and smiled. \"Is it time for another family portrait?\" \n\nGwen smiled weakly but didn't answer as her daughter continued on. \"Well, I have to hand it to you Aunt Natalie, you're really exposing my mother to a whole new world. If you two see anything you like enough to buy, I'd love to see it.\" \n\n\"I don't see why not,\" Natalie replied as she glanced at her sister-in-law, a sly smile on her face. Gwen frowned and subtly shook her head, hoping she would get the hint and let it drop. \n\nThe return to the barn was made mostly in silence, Natalie and Alison just enjoying the peace and quiet of the forest, Gwen on guard for anything else that might be said while worrying over what would become of their traditional swim\u2014or shower, the Slut needlessly reminded her. \n\nThere was nothing more than small talk as the horses were groomed. All three mounts were turned out in the paddock, and Alison turned to the older women. \"Don't you usually take a swim after you ride?\"\n\nAgain Natalie was the first to answer. 'Well, yes, as a matter of fact we usually do...\" \n\n\"Well, it's certainly hot enough today. I'm going in\u2014how about you?\"\n\nNatalie smiled. \"That would be nice, but I didn't bring a suit today.\"\n\nAlison laughed. \"Well, I'd let you borrow one of mine, but I don't think it would even come close to fitting you up top.\" She eyed her Aunt's chest meaningfully. \"And I'd say swim in your underwear, but it looks like you forgot some of that, too. So, just take your jeans off and come in with us\u2014Mom, you're going in too, right?\" \n\nNatalie laughed. \"That's nice of you, kiddo, but I need to get to work early today, anyways. Gwen, alright if I use your shower?\" \n\nThe panicked woman brought herself under control enough to squeak out an \"of course.\" Natalie smiled again and started for her truck. Alison and her mother continued on to the kitchen and were pouring two glasses of sweet tea when Natalie joined them, duffle bag in hand. \n\n\"Use our shower,\" Gwen insisted, \"there's more room.\" \n\n\"Ahh yes, the party shower,\" she replied with a smile, and disappeared down the hallway. \n\nTheir drinks led to lunch, and sandwich fixings had been laid on the table when a wet-haired Natalie reappeared. \"Let me make you something to eat,\" Gwen offered, hurrying to the refrigerator for tomatoes.\" \n\n\"Nah, that's alright,\" her sister-in-law replied a she poured herself a glass of tea and downed it. \"Gotta go.\" She hugged her niece, then Gwen. \"I'll call you later about Friday, okay?\"\n\nThe blushing woman nodded furiously, anxious to end this part of the conversation. She watched from the kitchen, relief her dominant emotion, as her sister-in-law got into her truck and pulled away.\n\n\"Swim?\" Alison repeated, not waiting for an answer. \"I'm going to go get changed.\" \n\n\"I'll be along in a minute,\" her mother answered, putting the last of the cold cuts away. \"Can you grab some towels from the linen closet?\"\n\nAlison's door was open just a crack as Gwen walked by, her daughter visible inside, back to the door and pushing her jeans down her legs. She averted her eyes as black panties came into view and continued on to her bedroom, stopping short when she reached the entrance. \n\nWedged between the pillows on the crisply made bed was a cream-colored penis, a yellow note stuck to the shaft between the head and testicles. Gwen shut the door as quickly as she could without slamming it and ran to her side of the bed. Questions and answers flooded through her whirling mind. Where had it come from? Natalie. It had to be Natalie. Why? Hopefully the note would explain. Had Alison seen it? The towels she had been asked to retrieve were in a closet just outside the now closed bedroom door. With trembling hands she reached for the dildo. It was not as lifelike as her other one she decided, not that she was any expert on the real thing. It was not as long, but certainly wider, her fingers unable to meet her thumb after wrapping around the smooth shaft just beneath the flared head. Her other hand delicately removed the note. \n\nFor when you need more than one\n\n-N-\n\nGwen's brain frantically tried to decipher what that meant. She certainly was not going to put that thing in her mouth\u2014she doubted her mouth could open wide enough\u2014and her bottom would most certainly never have anything going in it, much less this behemoth. One to share, the Slut wickedly pointed out. Gwen quickly stuffed both dildo and note in her drawer, suddenly fearful Alison might enter unannounced and find her mother holding a fake penis. \n\nGwen fought to control her nerves as she considered her one-piece as a display of modesty before her resolve weakened and grabbed for the bikini hanging on the back of the bathroom door. \n\nAlison, in her own two-piece, was waiting for her in the kitchen, holding two towels. \"Ready?\" \n\nGwen studied her daughter for any sign that she might have seen what had been on her mother's bed. The pair made their way up the hillock and into the cool water. They soaked for a few moments, neither moving much, just enjoying the late summer sun beating down on their heads while their bodies luxuriated under the sparkling surface. \n\n\"Mom, can I ask you something?\" \n\nGwen's rollercoaster of panic again left the loading station and began its climb. She had seen the dildo! \"Uh, sure, what?\" \n\n\"If you and Aunt Natalie swim after you ride, why doesn't she just leave a suit here, so she doesn't forget it?\"\n\nThe rollercoaster car stopped its ascent. \"That's a good idea...I'll suggest it next time.\"\n\nSomething in her would not let it stop there, however. The Slut, anxious to perhaps shock the young woman, momentarily gained control and the car lurched upward again. \"Actually, honey, she doesn't usually wear one.\" \n\nThe young woman turned to her mother, a smile on her face. \"Really? Like as in, not wearing anything at all?\"\n\nGwen closed her eyes. \"Nothing at all,\" she replied as her knees collapsed and she sank under the surface to avoid looking her daughter in the eyes. \"Please keep that between us though, alright?\" she continued as she surfaced, eyes still closed as her hands pushed the water away. \n\n\"Will do,\" Alison laughed. \"How do you feel about that? Does it offend you?\" \n\n\"No, not any more. I was shocked when she first did it, but I've gotten used to it. To tell you the truth, I usually don't wear one any more, either.\"\n\nHer daughter's eyes grew wide. \"Holy cow, Mom! Really? You?\"\n\n\"Really. Me. Does that offend you?\" \n\n\"Not in the slightest! Just surprising, that's all. I mean, I always wondered where KD and I got the nudist gene, what with you and Daddy being so conservative and all...\"\n\n\"Wait, what do you mean by 'nudist gene'?\" \n\nWe've been skinnydipping for as long as we were allowed to be up here alone, any time you weren't home, and sometimes when you were,\" she said with a grin. \"Guess we didn't need to be so discrete about it. Does KD know that you do?\"\n\n\"You did need to be discrete\u2014at least back then,\" Gwen said with as much calm as she could muster. \"As for your sister, I think I gave her a pretty good idea when she was home before school. And if there is such a thing as a \"nudist gene\", you got it from your father.\"\n\n\"He likes to go bare ass too, huh?\"\n\n\"Alison Marie Nelson! That is your father you are talking about! But if you must know, yes he does. Once again, I would appreciate it if you kept that between us. That would be very embarrassing if anyone found out.\"\n\n\"Alison Marie Cubinski,\" her daughter teased. \"Not a word, I promise. So, if you and Aunt Natalie like to go au naturel, why didn't you today?\" \n\nGwen paused. \"Well, I think your Aunt was worried about what you might think.\" \n\n\"Oh, I see. So IT was an grown-up-only thing today.\"\n\n\"No\u2014yes! But, it's just not something you normally do with your niece around, even if she's an adult.\"\n\n\"Well, I think that's dumb. It's just the human body\u2014I've seen plenty of 'em.\" \n\nGwen was tempted to ask her daughter just how she had seen \"plenty of 'em,\" but the Lady insisted she really didn't want to know. \n\nAlison's eyes flashed mischievously, another gift of her father's genes, Gwen knew. \"Well, since we're both adults, do you mind if I lose mine?\"\n\nThe Lady shrieked her protest\u2014this was most inappropriate! Gwen struggled to squelch her. \"If you feel more comfortable that way, honey,\" she replied, wanting to be the hip, cool mom she had promised herself to become. The words were barely out of her mouth before Alison had the knot behind her neck undone and the cups hanging loosely against the mounds beneath. Alison slipped the top over her head, her exposed breasts mirror images of the woman's watching her. Gwen was still surprised when her daughter stooped and the bottoms emerged from beneath the surface, joining the bra on the pool deck. \"Much better,\" the naked young woman announced. She submerged and pushed off the bottom towards the other end of the pool. Her mother stood watching the refracted image of her daughter's naked bottom gliding beneath the surface. \n\nAlison came up by the far wall and turned back to Gwen. \"Don't worry about me if you want to get rid of yours.\"\n\n\"No, I'm fine for now, honey,\" Gwen replied. In truth, she was tempted, and a bit envious of her daughter's freedom, but the idea of being naked in front of her daughter still smacked of perversion . \n\n\"Am I making you uncomfortable? If I am, I can get dressed.\" \n\n\"No, no, you're fine, I'm still a little shy, is all.\" \n\nAlison smiled and turned on her back to float, firm breasts pointing into the air, droplets clinging to the small vee of dark hair between her legs sparkling in the sunlight. Alison's body was truly beautiful, a younger, more attractive version of her own, Gwen had to admit, and she wondered if she could have looked half that good at that age if she had tried. You did look that good, the Slut reminded her, you just worked like hell to cover it up. ",
        "The pair lazed for a quarter hour, daughter floating and idly paddling while her mother stood in place as her upper body dried in the sun. By silent agreement, both left the water, wrapped themselves in their towels and made their way back down to the house. \n\n\"Have fun with Aunt Natalie at the photographer's,\" a now-dressed Alison told her as she was leaving. \"Love to hear what you think, and I definitely want to see anything you buy.\"\n\n\"Oh, I doubt I'm going to buy anything,\" Gwen demurred, \"just going to keep your Aunt company.\"\n\n\"Have fun, anyways. My mother, enjoying a day out without a horse between her legs,\" Alison chuckled as she descended the deck stairs, \"who'd have thought?\"\n\nWhat would you think if you knew why Aunt Natalie and I are going to Barry's, Gwen wondered as she walked her daughter out to her car and continued on to the office to check messages. The \"gift\" from Natalie was on her mind also, and she intended to examine it further after the office had been taken care of.\n\nThe dildo was forgotten as The Lady chastised her for not being there in person to take the urgent delivery call she was now listening to on the machine. Gwen hurried back across the yard to change into clothes presentable on a jobsite. The part requested in the message was delivered in person after she had pulled it from their inventory and hurried into town.\n\nWalt and Andrew were the first truck back that afternoon, returning from an emergency residential call and only moments behind Gwen's return from her errand. The other two trucks returned sometime after that from the condos, dusk descending as the last parts and tools were pulled from them for the weekend. Tim was the last out of the garage, shutting off the big fluorescents and closing the overhead doors as Cliff's truck backed away. \n\nGwen watched her husband trudge across the yard in the last light, jeans and blue work shirt barely discernible. His path was curving to the left, she noted, away from the house and towards the pool. He disappeared beyond the edge of the house, and she had a good idea what he was up to. By the time she had climbed the stairs, beer for her husband in one hand and a towel for him in the other, he was in the water, clothes discarded in a pile by the gate. \n\n\"You read my mind\u2014thanks,\" Tim said as she knelt by the pool's edge to hand him his beer. Gwen retreated to a nearby lounger and sat on the edge while her nude husband remained submerged up to his chest. \"Hell of a day,\" he said as he pulled on his beer. \"Broke a couple of things we're going to need to replace. Mike needs to work on being gentler on the tools. Hot as hell in those condos, too\u2014they haven't cut the windows yet.\"\n\n\"That's too bad,\" Gwen sympathized. \"Leave me a list of what you need and I'll start pricing them out on Monday.\" The stars in the moonless sky and the low lights around the pool were now the only illumination. An idea came to mind, a way to make his day better. Gwen looked around, the treeline already dark, the barn and workshop marked by the splash of floodlights under their eaves. They had made love in broad daylight in the middle of a popular lake. This was much less risky. She began to unbutton her shirt. \n\nTim took notice. \"Coming in?\"\n\n\"Not yet. Anything else happen today?\"\n\n\"He took another swig of beer. \"Oh, a shouting match between Charlie and one of the other contractors about who gets to park their truck where. I had to break it up.\"\n\nGwen's shirt and bra were now gone, her slacks soon to follow. \"I hope the other guy wasn't as big as Charlie. I'd hate to get in between that.\"\n\n\"Yeah...coming in now?\"\n\n\"Not yet.\" Gwen moved back into the recliner and leaned back, letting her legs fall to either side, far from the edges of the chair. From his vantage point, Tim had a clear view of his wife lying back in the chair, legs spread wide for his inspection. Entranced, he climbed from the water and began to dry himself, his manhood already showing signs of shaking off the effects of the cold water.\n\n\"You just gonna sit out here for a while?\"\n\n\"Well, if you like, I can go inside and finish dinner for you. Or I can stay out here and...do whatever you like.\" \n\n\"Out here? Aren't you worried someone will see us?\"\n\n\"We'll hear them first, right?\"\n\nTim needed no further encouragement. \"Right.\" He had a clear idea of what he wanted, and moved astride Gwen's midsection, his freshening cock inches from her face. She gladly took his offering in her mouth, tongue bathing the spongy head before her lips slid further down the shaft. Her husband's hands rested gently on the back of her head as his torso impulsively flexed and tried to drive his length into the engulfing warmth of Gwen's mouth. \n\n\"Touch yourself.\" \n\nGwen looked up at her husband questioningly, never removing him from between her lips.\n\n\"Touch yourself,\" he repeated, \"play with your...pussy.\" \n\nTim looked back down at her, waiting to see how she might react to his use of such a vulgar word. She had come such a long way in these few short months, but the experience of all those years before was not easily undone. \n\nHer hand snaked between his legs, and Tim could see the muscles of her arm contract ever so slightly as she began to do his bidding behind him. Gwen continued to look into her husband's eyes as her tongue again bathed his length, looking for his approval. Tim smiled, groaned, and pushed forward again. \n\nIt was some time before Tim removed himself from between her lips and shuffled backwards, poised over her hips. Gwen jerked her hand away from her sex, old beliefs reflexively forcing her to hide her shameful touching from his gaze. \n\nThe naked man towering over her did not seem to notice as he brought one leg up and over her thigh, then the other, until he was standing between her widespread legs. Tim slowly lowered himself until his straining erection hovered inches from Gwen's opening. \"Put it in.\"\n\nShe glanced down quickly and her hand found the dangling cudgel. Tim's hips again flexed forward even as she aimed, the hot length sliding along her fingertips as she withdrew them before his pubic bone trapped them against her body. \n\nGwen quickly discovered the lounger dictated a unique angle for their joining, one that was especially effective on her sensitive clit. Tim's slow thrusting gave her climax time to build, a long, slow climb as the sounds of the night mixed with her husband's soft grunting while he bent to his task. The thought of offering her face to use for his pleasure played in her mind; could she dare and would he accept? The perversity of the act made her want to try it, but the feeling of his body against her mons was too good to give up. Some other time. Tonight she happily allowed him to push into her.\n\nHer orgasm did not sneak up this time. She both heard and felt it well before it arrived, her blood pounding in her ears as the first waves began to radiate from her sex. She was only dimly aware of Tim's release as she came, his strong pounding suddenly stopping with one last effort to deposit his seed into her womb.. \n\n\"Now I'm ready for a swim,\" Gwen announced as Tim's breathing calmed and his penis softened and retreated from her warm folds. He rose and accompanied her, lazily wrapped in each other's arms until the two naked bodies made their way back to the house and bed."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "wife",
        "husband",
        "daughter",
        "toys",
        "outdoors",
        "skinnydipping",
        "oral",
        "missionary"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-02-ch-03"
}