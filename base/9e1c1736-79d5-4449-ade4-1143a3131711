{
    "title": "TRC - Lord of the Glass Desert Ch. 14",
    "pages": [
        "Chapter 14\n\nKashka felt extremely awkward the first night with the gazelles. Mostly because Kal refused to do anything unless she gave him explicit permission. After the previous night's shyness, it took a few minutes just to tell him to get into bed. Then, to make matters worse, the gazelles stood there and waited for her to give them instructions as well. Thankfully, she only needed to tell Kal and Rhim to continue what they started outside and didn't require her to get overly specific. Although the mischief in his eyes informed her the idea had crossed his mind.\n\nThe cat-girl climbed in next to them and watched as Rhim wailed her appreciation of Kal's skill with both his tongue and cock. She yammered on about how much better it felt than all the other times she'd been with a man. The mage finally kissed her and began slamming his prick into the gazelle-woman just to shut her up.\n\nCoovie climbed onto the bed behind Kashka and indicated she might be interested in finding out what the cat-girl tasted like. Laika had spent plenty of time between the Kashka's legs, lapping at her sex as Kal slid his cock in and out of one of them, so she didn't dislike the idea.\n\n\"As long as you don't mind that I can't return the favor,\" she said, sticking out her tongue and running a finger down the raspy surface.\n\nCoovie smiled and gently pushed her onto her back, \"We're used to it. Remember what we said about the lioness's catching us?\" Kashka nodded. \"Just don't be as rough as they are, please?\"\n\nThe cat-girl learned that a gazelle's tongue was solid black and slightly rougher than a human's. While it felt nice, her and Coovie's attention was more on the couple fucking like mad next to them.\n\nThings went sideways when Kal finally drove Rhim over the edge. Besides scratching Kal's back hard enough to draw blood, the gazelle's orgasm didn't seem very interesting to Kashka other than being particularly intense. However, Coovie stopped licking and looked over at her friend in shock. The situation became very uncomfortable when Rhim's climax subsided. The gazelle clutched Kal like a child clinging to a parent and began sobbing as she apologized over and over. The woman howled how sorry she was to all of her past husbands for what she did to them and how she didn't know it could have been this good the entire time.\n\nCoovie crawled up the bed and nudged Kal out of the way. Laying down next to the distraught gazelle, she took Rhim in her arms and gently rocked her as she cried.\n\nKashka rolled on her side and pushed herself up on an elbow as Kal took up a place behind her with his quickly deflating cock brushing against her ass. They watched as the two women embraced and listened to Coovie tell her friend that they weren't bad or evil, that they just didn't know there was a different way or understand what they were doing to their mates.\n\nKashka looked back at the mage, \"You need to do it again, Kal.\"\n\n\"Do you think that's wise, Mistress?\"\n\n\"This was supposed to be her reward for helping you. It's turned into a punishment. Also, you've only had sex with her, not made love to her.\"\n\nCoovie perked up at her words. \"What do you mean he hasn't made love to her? That's what they were doing,\" she said.\n\nKashka lifted a leg into the air and reached down. While not fully hard, the mage's cock had regained some of its stiffness from rubbing against her bottom. Looking back at him, she directed it into her sex and said, \"Make love to me, Kal.\"\n\n\"As you wish.\"\n\nKal lowered his head until their lips met as he slowly pushed the rest of the way into her. One arm came around and cradled her head while they kissed as the other lightly brushed across her breasts and belly, occasionally dipping down to tease her clit.\n\nAfter a few minutes of slowly stroking in and out of Kashka's sex, Kal wrapped his arms tightly around her as he began to speed up. Their lips parted and he leaned down to plant tiny kisses along her neck and shoulder as she started panting and moaning from the pleasure.\n\nKal turned Kashka's head and pressed his lips to hers again as he sped up slightly. They were still nowhere near the pounding pace he set with Rhim when he threw his hips forward and held himself inside her. A low growl emanated from his throat, and Kashka gasped as his cock pulsed inside her. She moaned into his mouth as the cum flowing into her pussy triggered her orgasm, and the mage grunted as her sex tightened around his cock.\n\nWhen they finally broke their kiss, Kashka looked over at the gazelles while Kal rested his chin on her shoulder as he gradually softened.\n\nCoovie was still cradling Rhim even though they were both staring with awe at her and Kal.\n\n\"I want that,\" said Rhim with an air of reverence.\n\n\"Me too,\" said Coovie.\n\nThe cat-girl smiled at them as she caught her breath. \"I believe it's part of Kal's plan for you to have moments like this with your future mates.\"\n\nThe mage hummed in agreement and kissed Kashka's cheek before looking over at the gazelles. \"That's only part of it. I want you two to teach what we learn about your mating scent to other monster girls you encounter. The best way to improve relations between humans and monster girls is to stop making the humans feel like they are under attack.\n\n\"You may encounter few men willing to spend the night with you, but don't expect it. Also, it will probably take some time before you run into a human willing to settle down with you. Even then, humans have very different needs. Having an aware and active human mate will probably require settling near a village and building a house for them to live in. We aren't made for your nomadic lifestyle.\"\n\nRhim and Coovie both looked at him in confusion. \"There are several nomadic human tribes that wander the southern lands.\"\n\nLooking back at the mage, Kashka chuckled, \"So you don't know everything?\"\n\nKal rolled his eyes, \"I never claimed to know everything. It's a good thing too, or I would feel even more foolish for not knowing about these tribes.\"\n\n\"This is going to be a big change to our lives, isn't it?\" asked Coovie, her expression betraying her worry.\n\n\"Yes,\" said Kashka as she squirmed for a moment while pressing back into Kal's chest, \"but in return, you will get moments like this with your husband in your own bed and your own home.\" She enjoyed a moment of contentment before wiggling free of the mage. \"But, as I said earlier, Kal, you need to finish taking care of your helper. I believe I heard her ask you to reapply some of Cyrene's slime on the way back here?\"\n\nKal chuckled, \"She did, and I took care of that in the restroom after cleaning the dirt off her.\"\n\nRhim giggled, \"We nearly didn't make it here.\"\n\n\"Then get hard again,\" Kashka commanded. \"Rhim, you take my spot.\"\n\n\"Yes, mistress,\" said Kal.\n\nAfter a moment's hesitation, Rhim stammered, \"Y--Yes M--Mistress.\"\n\n\"Not you too!\" Kashka huffed at the gazelle and getting a laugh from Kal and Coovie as Rhim looked genuinely concerned she had done something wrong. The cat shooed her into position with a smile to let her know she wasn't actually upset while Kal began tracing a rune in the air.\n\nBy the time the rune was complete, Rhim had laid her head on the arm he was using. Kal reached over her with his other hand, grabbed the rune out of the air, lifted a leg, and pointed it at his scrotum. The spell brightened as he activated it before vanishing.\n\nCoovie stared as his cock started growing again. \"Can all humans do that, and we just didn't know about it?\" she asked Kashka with a hint of despair creeping into her voice.\n\n\"No,\" said Kal as he lowered his leg. \"Remember, I'm a magic-user, and I don't think many mages know this spell. Don't expect other humans to do what I just did.\"\n\n\"However, they may be able to do something similar with their mating scent,\" offered Kashka.\n\n\"True. But it should only be used sparingly. My magic prevents the bad effects of being hard for hours and hours. I also have healing spells at my disposal. Other human men can be severely hurt by staying hard for too long.\"\n\nCoovie and Rhim shared a look. From their expressions, they were reliving an unpleasant memory.\n\n\"It's in the past. You know better now and won't let it happen again, right?\" said Kal.\n\nBoth gazelles nodded but looked sad.\n\n\"Do you want to continue?\" Kal asked Rhim, slipping his prick between her asscheeks and nudging her pucker.\n\nShe tried to look back at him, but her antlers pointed tips hung up in the bedclothes and she settled with a sidelong look. There was sadness in her eyes. \"No, I don't think I do,\" she said softly. Kal canceled the spell on his groin, then held Rhim tight as Coovie sidled over to hug her friend from the front. Together the gazelles began crying, not from missed opportunities like Rhim earlier, but from the knowledge they were the cause of the excruciating pain some of their previous mates experienced with them.\n\nKashka sighed. The mood was gone, and the gazelles needed to forgive themselves more than they needed sex. The cat-girl laid down opposite Kal and hugged Coovie from behind until they finally fell asleep.\n\n------\n\nA few days later, the four of them stood a little way from the road with Coovie a short distance downwind.\n\nKal tried not to chuckle as the gazelle glared at him.\n\n\"Do you really need to watch?\" she asked, annoyed.\n\n\"I need to be sure you aren't cheating,\" he replied.\n\nThe gazelle-woman stood with her legs spread, holding a glass bottle to her crotch. The bottle had a black ring traced around it just under half full and a red ring higher up. The black ring showed where her mating scent took effect while the red indicated too much, and her target male would go into a lust craze.\n\n\"Hmph,\" grunted the gazelle as she relaxed and started filling the bottle. Kal said she needed to learn the proper timing and amount without looking down, or she wouldn't get her reward. Coovie glanced at Rhim. The other gazelle stood next to Kal, looking quite pleased with herself. She had good reason. Coovie could see where her sex was still swollen from the mage bending her over for a hard, fast fuck a few minutes ago. As Coovie looked on, she saw a dollop of Kal's cum drip onto her friend's thigh.\n\nWetness soaked the hand holding the bottle as it overflowed.\n\n\"Dammit!\" she yelled, pulling the container away. Grumbling with annoyance, she squatted down and finished emptying her bladder while dumping the bottle's contents out\n\nWith a disappointed sigh, Kal stepped over and cast a cleaning spell on the bottle and her hand as she finished. \"I was looking forward to giving you your reward,\" he said, helping her to her feet.\n\n\"So was I. You could have warned me,\" pouted the gazelle.\n\n\"That would defeat the purpose. You need to learn the proper amount to use when hunting for your next husband.\"\n\n\"How come she doesn't need to piss in a bottle?\" Coovie asked, pointing at Kashka.\n\n\"Because I'm not wandering the savannah looking for a mate,\" the cat-girl replied.\n\n\"Besides,\" said Kal, \"she's still my Mistress for the time being. If she doesn't want to pee in a bottle, I can't make her.\"\n\nKashka leveled a glare at the mage, \"I wish you would explain this whole 'Mistress' nonsense. Not that I'm really complaining, having you at my beck and call has been fun. I'm just confused as to why.\"\n\n\"I'm not sure I want to tell you just yet,\" he said with a laugh. \"I've been enjoying not worrying about what happens in the bedroom other than staying hard.\"\n\n\"Ria told me you haven't done this with any of your other lovers, that she knows of.\"\n\nKal scratched his head, \"I haven't? It seems like it would have happened at least once before.\"\n\n\"She said most of your women prefer when you take the lead in the bedroom but that you didn't mind sitting back and letting them have their way when they are in the mood to be demanding.\"\n\nThe mage shrugged, \"It only seems fair. They put up with me whenever I get demanding. It's only right I do the same,\" he said, taking the bottle from Coovie. \"Ria, store this, please.\"\n\n\"Is that what you do? Put up with us?\" said the cat-girl, raising an eyebrow.\n\n\"Bad choice of words on my part, but you know what I meant,\" he said as they started back toward the road. Kal began turning to avoid the merchant wagon coming up the road, but the assortment of waterskins and leather bottles hanging from the side caught his eye.\n\n\"You three keep going. I have an idea that might help,\" he said, pointing at the cart.\n\nKashka nodded before turning and continuing on a path parallel to the road with Rhim and Coovie in tow. Their lead on the main body of merchant wagons had dwindled as Kal worked with the gazelles, and encountering them had become a fairly common occurrence. If they were already on the road, they just moved to the side until the merchant passed. But, if they saw a cart while coming back to the road from camp, or one of these 'training' breaks, they often stayed out on the savannah to avoid harassment.\n\nThis wagon was larger than usual and required six horses to pull while two plodded along behind it on leads. The style seemed to be more for traveling families. Inside was food storage and a small bed that could be rolled up and stashed out of the way near the wagon's wooden roof. The outer sides were shelves covered by wooden panels that folded down and turned into storefronts, kitchens, or workshops. The extra weight from the shelving and goods within also demanded extra horses. From the wide variety of leather workmanship hanging from the cart's sides, Kal was hoping this was one of the wagons with a workshop.\n\n\"Ho, there!\" Kal called as he trotted up to the drivers. The man on the far side wore clothes that marked him as Fazalan and leaned over to peer at him. The hired guard in the seat closer to him wore minimal clothing. His attire consisted of a pair of shorts, a short cape to protect his shoulders from the sun, and a very wide straw hat. The man glared and held his long, whip-like stick at the ready as Kal approached.\n\n\"I saw you sell water and wineskins. Is there a chance you make them as well?\" said the mage as he got closer.\n\n\"Are you needing something bigger?\" the man asked. By how his mouth moved, Kal guessed he spoke in the Fazalan tongue.\n\n\"Actually, no, I need some a little smaller.\" Kal retrieved the marked bottle from Ria. Holding it up, he pointed a little bit below the red line. \"One that holds about this much and no more.\"\n\nThe man seemed surprised that Kal spoke the Fazalan tongue, but his eyes widened with interest when the mage summoned the bottle. After a moment's thought, the merchant turned and called out. \"Chaldi, this man wants some custom canteens. See what you can do to help him.\"\n\n\"Are the ones hanging in the side not good enough?\" came a woman's voice from inside the cart. A second later, the speaker poked her head through an opening between the men to regard Kal with curiosity. Kal held up the bottle and pointed at it again. \"Oh,\" said the woman. \"No, I don't have any that small, but if you don't mind traveling with us for the day, I can make you one.\"\n\n\"I'm interested in at least two, but I'll take as many as you can make.\"\n\nChaldi turned to her husband, \"Stop so I can get my tools and leather,\" she told him before disappearing into the back of the cart again. The merchant tugged the reins, and his wife hopped out the back of the wagon as they came to a stop. Kal walked around and watched with interest as her husband opened the wagon's side. She picked up a small pot with what seemed to be rendered fat inside and handed it to Kal, then grabbed some leatherworking tools, a few rolls of tanned leather, some thread, and a lap-sized workbench. Lifting the pot and taking a sniff, Kal detected the faint smell of beeswax, not lard.\n\nHer husband closed the wagon's side as Chaldi placed her items in the back of the cart and climbed in.\n\nShe sat down and took the pot from Kal then placed the lap bench across her legs as the cart started moving. \"I can make the canteens in a few hours, but you'll have to wait until we stop for the night so I can melt this down and seal them,\" she said, tapping the pot. \"Judging by your clothing, I think it's fair to say you won't have any issues paying for these?\" she asked while trimming the leather.\n\n\"I'm certain I have more than enough to cover a few waterskins,\" he assured her. \"since this will take the rest of the day, I may go join my companions and return when you make camp tonight,\" said Kal, pointing off to the side of the road.\n\nHolding her work to the lap bench, Chaldi stuck her head out the back of the wagon and looked where he was indicating. Frowning, she sat back, \"You don't look very 'captured.'\"\n\n\"I'm not. The cat is my servant, by her own insistence, and we'll be parting ways with the gazelles when we reach the next town. The bottles are for them.\"\n\n\"Cat?\" asked Chaldi as she leaned forward again. \"Oh, I didn't see her a second ago. Are these parting gifts for spreading their legs?\" she asked, sitting back and returning to her work.\n\n\"Not quite. They're helping me with some research and agreed to teach what we learn to any other monster girls they encounter.\"\n\n\"Now I'm curious. Is this some kind of secret? Or can you tell me what this 'research' is?\"\n\n\"I'm trying to teach them how to use their mating scent properly.\"\n\n\"Properly?\"\n\nKal for thought a moment. \"I'm helping them use their scent to tease and entice a man into bed instead of making him lust crazy and effectively kidnapping him.\" He looked out at the two women. \"These past few days have been hard on them. I explained in detail what they did to their previous husbands, including how much pain the men suffered at their hands. They didn't take it well at times, but they are willing to learn and change.\"\n\n\"The men suffered? Did they stab them with their antlers?\"\n\n\"The men probably would have preferred that. Their mating scent makes a man hard, but he'll go soft for a while every few hours. I believe it's a protection built into monster girls back when they were created. Unfortunately, getting their mate hard is specific to each monster girl. Between the two of them, some of their partners never got the chance to go soft. After a few hours, that can be a very bad thing for a man.\"\n\nChaldi finished cutting the leather and began punching the holes for future sewing. \"And here I thought it was every man's dream to stay hard and buried inside a puss for days at a time.\"\n\nKal chuckled, \"I won't say the thought isn't enticing, but it looks like there is a good reason we can't.\"\n\nThe leatherworker's smile faded, \"You said they can make a man hard without making him run off with her?\"\n\n\"Yes, that's what I'm trying to teach them.\"\n\nChaldi glanced back at her husband, then fixed Kal with an intense stare, \"Will it work on a man who can't get hard?\"\n\n\"Um, I don't know. We've only tested it on me, and I don't have that problem.\"\n\n\"My husband has the nicest cock of any man I've been with,\" she said in low tones. \"But for the past few years, he's had a problem staying hard, or getting it up at all. He's been accommodating and even let me buy a male prostitute a few times, but he hasn't been inside my puss in months. I miss the feeling, and I know it hurts him.\"\n\n\"And you want to see if their mating scent will help?\" Kal asked.\n\nChaldi nodded.\n\n\"I feel this is a unique opportunity, so I'm willing if the girls are. However, there are some things you need to know. First, their mating scent is mixed with their urine. Second, their scent tends to fixate a man on that monster girl. If we try this, there is a chance he won't be interested in you at first. And finally, if one of the girls use too much, he will chase her down and fuck her, and there won't be a damn thing you or I can do about it.\" He glanced off to the side of the road again, \"After the last few days, I think they'd be as upset as you and your husband if that happened.\"",
        "The woman looked up at Kal, \"Urine? 'Use too much'?\" she glanced down at the leather canteen she was making for a moment, then raised an eyebrow at the mage. \"Is that what these are for?\"\n\n\"Yes,\" he answered, holding up the bottle again. The low mark indicates when it starts taking effect, the high mark is too much. Don't tell them, but it's actually a little higher than this,\" said Kal in a conspiratorial whisper.\n\n\"Is that what they are going to do? Piss in these, then pour it out upwind?\"\n\n\"No, the scent's power fades quickly. After only a few minutes... actually, that might work better than having them time themselves when they... Wait, no, that won't work. Then every girl would need one of these bottles.\"\n\n\"I won't say I'm pleased my canteens are for holding piss, but once they're paid for, it's not my problem.\" She turned around and called out, \"Melir, Soonu, this man has some companions walking out on the grasslands. I'm inviting them over. He promises they are friendly.\"\n\nBoth men looked back through the wagon as she spoke. \"You mean the gazelles? Oh, it looks like there's a cat-girl wearing clothes with them too. Where was she hiding?\" asked her husband.\n\n\"The problem comes when they get too friendly,\" mumbled the hired guard.\n\n\"I promise they will be good, or I will deal with them myself,\" said Kal\n\nThe guard's eyes widened, \"You speak my language?\"\n\nKal shook his head. \"Just a little bit of magic to help me in my travels,\" he said before calling to the girls.\n\n---\n\nMelir, the guard, had little to worry about from the gazelles with Kal taking care of their needs. All three girls were more interested in watching Chaldi turn sheets of tanned leather into small water bottles with oversized necks and stoppers.\n\nKal was curious how she would get the measurement correct. The leatherworker soaked the sewn bottles in a water container to soften the leather, then filled Kal's marked bottle with dried beans before pouring them into the canteens. She then took a stick slightly smaller than the bottle's neck and shoved the beans in, stretching the leather until the beans from Kal's bottle were flush with the top of the canteen. Once finished, she set the bottle to the side to dry and went on to the next. The last step was soaking the leather with beeswax inside and out to make it waterproof, but that wouldn't happen until they made camp.\n\nCoovie and Rhim seemed especially excited about helping Chaldi and Soonu tonight. Melir was far less enthusiastic once everything had been explained. As the couple's guard, he was supposed to stay nearby. Melir wasn't particularly happy about getting aroused from the gazelle's scent with only his hand for relief. The news came just as he was starting to understand the gazelles weren't interested in attacking him or the merchant and had begun to get used to their presence.\n\nKal eventually selected Coovie to be Chaldi and Soonu's helper. He felt it might be good to put a little pressure on her to try harder and not get distracted so easily. Especially since he offered up the rest of the night in bed as a reward for not sending the other men into lust crazes, after clearing it with Kashka, of course. He also had a plan in case the gazelle slipped up again.\n\nRhim was disappointed that Kal didn't pick her but agreed with his decision. After only a couple days of practice, she rarely had any problem judging the correct amount of her mating scent to use. This opportunity would be a good incentive for her friend. Since Kal would be occupied with Coovie and Kashka tonight, the gazelle turned her attention to Melir. Kal had caught wind of the guard's grumbling and mentioned it to her and the other two girls earlier. At the cat-girl's suggestion, she approached the man as he continued scanning the grasslands for threats.\n\nThe long whip-like stick whistled in front of her. \"Come no closer,\" he said.\n\n\"I won't,\" said Rhim. \"I just came to let you know that if you need some relief later, I would enjoy helping you.\"\n\nThe guard stared at the gazelle woman as she dropped back to join the other monster girls walking behind the wagon.\n\nRhim leaned over and whispered to Kashka, \"Did I do it right?\"\n\n\"You did fine,\" the cat-girl answered with a smile. \"Don't get your hopes up, but at least Melir knows he has the option now.\"\n\nListening in, Kal chuckled. \"Sage advice from a woman who was barely more than a virgin a month ago.\"\n\nKashka stuck her nose in the air, \"Laika trained me well. Not that you have reason to complain.\"\n\n\"Is this Laika your wife?\" asked Chaldi.\n\n\"No, she's a pleasure slave on the caravan. An old enemy put a price on my head, and the caravan master didn't expect me to live, so he duped me into buying the most expensive accommodations.\" He smiled down at the cat-girl, \"I think it worked out for the best.\"\n\n\"You were in the front section of the caravan? Hmph, I should have charged you more for these,\" she said, tapping the bottle she was working on.\n\nThe mage smiled, \"Make no mistake, I come from humble beginnings. One of the benefits of having monster girls as lovers is one of them can find and retrieve high-quality gems with ease.\"\n\nChaldi glanced around, \"Is she hiding somewhere?\"\n\n\"No, she's back at my home, far, far to the west, of the Sulerin desert.\n\nDisappointment flickered across her face. \"You certainly seem to have an interesting story. I wish we had more time. I would like to hear more of it.\"\n\n\"Consider yourself lucky he hasn't started talking about why he's on this journey,\" Kashka piped in.\n\nKal appeared confused, but the leatherworker looked at her with interest.\n\n\"Oh?\"\n\n\"He's going to meet his woman on the other side of the world. Who is immortal but is also dead, while at the same time is not dead and trying to come back to life. Even though she isn't really dead.\"\n\n\"That... does sound confusing,\" said Chaldi.\n\nThe mage snickered, \"It's my quest, but it sounds silly when you put it like that.\"\n\n\"So what she said is true?\"\n\nKal nodded.\n\nShaking her head, the leatherworker looked down and focused on her work.\n\n---\n\nChaldi and Coovie were almost giddy with excitement when the sun threatened to touch the horizon, and Soonu announced they would be making camp in a couple of hours. Melir seemed to be in a better mood since Rhim's proposal, but Soonu's mood turned from initial excitement to resigned sadness. Kal finally approached him and asked what was wrong.\n\nSoonu looked down from the driver's seat and sighed. \"I appreciate what you and your friend are going to do, but it's only a temporary fix. Once you and your monster girls leave, I'll be unable to get it up again. That's if it even works.\"\n\n\"Assuming it works, which really should be your biggest worry right now, you and Chaldi have the option of occasionally approaching a monster girl, explaining your situation, and asking for help.\"\n\nChaldi poked her head out from the back, \"But nothing comes for free. What will they want in return?\"\n\n\"I doubt I need to answer this, but in all likelihood, they will want a turn with your husband. Most monster girls are much more reasonable than humans give them credit and won't try to steal him away if their needs are met. I won't say all of them are reasonable, though. Over generations, many monster girls believe kidnapping is the only way to get a mate. I suggest you do like a friend of mine back home and consider forming a triad with a monster girl you can trust. You get to have a mostly normal sex life with your wife while your third gets her needs met and, if you all agree, gets a daughter out of the deal.\"\n\nThe leatherworker frowned, \"I don't know about that. I'm not too keen on sharing, and how are we going to explain traveling with a monster girl?\"\n\n\"That I'm not sure about. I wish I had all the answers, but at the same time, I wish I could snap my fingers and make humans and monster girls get along,\" said Kal. \"As it is, my mates and I are trying to kick the pebbles at the top of the mountain in hopes it will grow into something bigger than we could ever do by ourselves.\"\n\nSoonu frowned, \"Don't forget, rockslides can bury entire towns.\"\n\nThe mage nodded, \"That's why I'm doing things like with the girls. I'm not kicking pebbles just yet, but laying the groundwork for when I do. If this works tonight, it could be a huge selling point for the acceptance of monster girls.\"\n\n\"Or extremely harmful,\" said Kashka as she walked up next to Kal. \"Too many humans would be willing to exploit us just for this. Honestly, I doubt you are the first to look into using our mating scents in such a mannner. Imagine one of us held captive and forced to get men hard instead of just helping out.\"\n\n\"Sadly, you're probably right. Is what I'm doing really any better? Or am I just being nicer about it?\"\n\n\"Coovie is walking into this with open eyes and the option to back out. Yes, there is a huge difference,\" said the cat-girl. She was starting to get a little testy with him.\n\n\"Did I say something wrong?\"\n\n\"No, you're just being annoying. Normally you're so assured and confident, yet for something like this, you need it spelled out that you're not like Bozun or the slavers you rescued the dog-girls from. I don't like it when you get like this.\"\n\n\"I'm just trying to be... aware.\"\n\n\"Well, stop. Your judgment had been sound in the time I've known you and you seem to surround yourself with women willing to tell you if you are screwing up. Follow that big brain of yours. We'll warn you if you start down the wrong path.\"\n\n\"We?\" the mage asked, raising an eyebrow. \"Are you counting yourself as one of my women now?\"\n\nKashka's eyes widened as her face turned bright red, \"Uh... no,\" she said, reaching up and touching the delicate chains of the golden choker around her neck, \"I still have penance to pay for the people I've wronged. I don't deserve to be one of your women.\"\n\n\"Pennance? Is traveling with me really such a punishment?\"\n\nShe glared up at him, \"Right now? Yes.\"\n\n\"Then what will it take for you to right the wrongs of your past? What do you consider the endpoint at which you are forgiven? Or are you going to keep punishing yourself for the rest of your life?\"\n\n\"I--I don't know how to answer that, Kal, but I think that helping you try to build a relationship between humans and my kind is a good place to start.\"\n\n\"Tonight should certainly help toward your goal if all goes well,\" said Soonu. \"It just hurts me to admit I can't take care of my wife without assistance.\"\n\nChaldi smirked at him before addressing Kal and Kashka. \"Don't get the wrong impression. He has done a lot to take care of me.\" She reached over and began rubbing her husband through his trousers. \"But he spoiled me with this for so many years, I miss the feeling.\"\n\nSoonu relaxed and leaned back to let his wife fondle him.\n\n\"It doesn't look like he's lost any sensitivity,\" Kal observed.\n\n\"No. It just won't get hard and stay hard,\" said the merchant. \"The things that felt good still feel good, but it takes a lot of time and work for me to finish.\" Soonu gave his wife a look of curiosity then glanced down at her hand. \"You've never been this open around other people.\"\n\n\"We've never had an opportunity like this without someone trying to sell us snake oil,\" she replied.\n\n\"But you did offer him one of the canteens you're making.\"\n\nKal waved up at the couple, getting their attention. \"If it puts your mind at ease, I'll pay for all of the bottles she's making. Good or bad outcome, the information I gain from this will be worth more than the few silvers for the bottle.\"\n\n\"So, no snake oil,\" said Soonu. After giving the reins a light tug, he placed them in his wife's free hand and closed his eyes, smiling as he enjoyed Chaldi's rubbing.\n\nOn the other side of the wagon, Melir watched the two gazelle women as they casually chatted. The one who approached him earlier occasionally sent shy glances in his direction and preened a little whenever she saw him looking her way, but otherwise didn't seem very interested in him. He was starting to believe this wasn't some ruse and that they weren't trying to lull him into dropping his guard before whisking him off into the grasslands.\n\nUnfortunately, the less he saw them as threats, the more he saw them as women. For the third time in as many minutes, he reached down and adjusted himself before continuing to scan the savannah.\n\n---\n\nCoovie and Rhim both stopped dead in the road, their ears swiveling as they looked to the south.\n\n\"What is it?\" Melir asked.\n\n\"Hyenas, big ones,\" said Coovie. \"It sounds like a large pack.\"\n\n\"They're hunting,\" said Rhim.\n\nMelir stood up and looked in the same direction as the gazelles. He couldn't hear them like the women, but he spotted the hyenas moving slowly through the grass from the wagon's seat. \"I see them.\"\n\n\"Is there a woman like us with them?\" Coovie asked.\n\nMelir watched for a few more seconds, then shook his head.\n\n\"Damn,\" whispered Rhim as Kal and Kashka came jogging around the back of the wagon.\n\n\"Damn?\" asked Kal.\n\n\"If there was a hyena girl with them, we might be able to let her fuck us in exchange for leading the pack away,\" said Rhim.\n\n\"The way you said that brings up some interesting questions,\" said the mage.\n\n\"If you don't know about hyena females, then you might be in for a little bit of a shock,\" said Coovie with a smirk.\n\n\"Actually, I read up on some of the wildlife before we came here. I think I know what you're talking about. What are our options?\"\n\n\"We will need to fight,\" said Melir as he reached into the back of the wagon and traded out his whip-stick for a metal-tipped spear. \"Hyenas can run for a long time and will tire out the horses.\" He tapped the butt of the spear on the side of the wagon, \"Too much weight,\"\n\n\"Rhim and I can run longer and faster than them but only barely,\" said Coovie, \"he's probably right.\"\n\n\"Kill them, drive them away, or distract them?\" asked Kal.\n\n\"From the sound, it's the big hyenas. A pack this size will quickly strip an area of food,\" said Coovie\n\n\"So, cull them?\" Kal offered.\n\n\"Once we've taken down their numbers, how do we drive the rest off?\" asked Melir as he hopped down from the wagon. Chaldi quickly took his place in the seat.\n\n\"We won't need to. They aren't going to get close to the wagon,\" said Kal. He looked over at Kashka, \"Care to stretch your legs a little?\"\n\n\"After the sandworms, I think I'd like an easier fight,\" she said with a nod.\n\nMelir and Chaldi looked surprised as Kal traced a glowing rune in the air over Kashka's chest and activated it. \"Be careful with your extra strength and speed,\" he said as he began drawing a second rune.\n\n\"This feels like overkill for a bunch of big dogs,\" she said as the magical strength flowed through her body.\n\n\"You know I don't like taking chances.\"\n\n\"Says the man who killed two sandworms almost singlehandedly.\"\n\n\"You helped, and I think the old lady gets credit for the second.\"\n\n\"That's why I said, 'almost,'\" Kashka's tail flicked back and forth as her legs and arms shifted to feline. \"Race?\"\n\n\"Ria, I need you and my staff,\" he said as Kashka dropped to all fours. He spun the staff and held it against the back of his arm as the sprite appeared and took stock of the situation. \"You give the signal,\" he told the little avatar.\n\n\"You're mean, Kal,\" she said, pointing at the glowing runes on his vambraces. Flitting up between them, she raised a hand. \"Go!\" Ria shouted. The mage and cat both took off like arrows leaving the sprite staring. \"Dammit, he used it on her too!\" she yelped before streaking after them.\n\nMelir spun around and looked up at Chaldi and Soonu with a shocked expression. \"I heard about someone killing two sandworms on your crossing. That was them?\"\n\n\"We weren't in the caravan,\" said Chaldi as she stared after the mage and cat, \"but we heard about it when picking up our goods and saw one of the sandworms when we crossed over to this side years ago. The guards said a mage killed one, and an old lady sacrificed herself to kill the other. Some people said he had a companion, while others claimed he did it alone. I have a feeling we know which were correct.\"\n\n---\n\n\"I'm winning!\" Kal called out to the cat-girl over the rushing wind.\n\n\"Only because you're taller!\" Kashka yelled back before spitting out another piece of grass. Running this fast was exhilarating but constantly getting slapped in the face by the tall grass was a little annoying. \"You should've done this the other day instead of having me ride on your back.\"\n\n\"I couldn't remember that version of the spell right then, or I would have. I didn't spend all that time in the library staring at the wall.\"\n\nKashka caught an unexpected scent as they neared the pack of hyenas.\n\n\"Kal! Metal!\" she yelled, veering sharply to the side.\n\nThe mage only had enough time to boost his strength rune and activate his shield as a dog-like warrior in metal armor jumped up, brandishing a stone-tipped spear. Kal's shield smashed into the weapon, reducing it to splinters before the mage and creature went tumbling into the rest of the pack. Kal pushed off and rolled to his feet, barely noticing he dropped his staff. Instead, the mage focused on bringing his shield up again and slamming it into the creatures directly in front of him, sending the thing flying backwards.\n\nHis strength rune glowed brighter as he sprung into the air while turning so he could see what he was up against.\n\nGnolls, one of the few monstrous races which kept their original shape after Prentas's spell. They were also one of the most feared by men because of their unusual genitalia and willingness to use it to enforce their dominance over others. However, they didn't go completely unaffected. Like orcs, goblins, and kobolds, they stopped having male offspring and needed human males to conceive.\n\nIn front of him, nearly thirty of the creatures rose to their feet, accompanied by the clanking of mismatched human armor.\n\nMost of them leveled their spears at him, but one of the gnolls pushed her way back through the ranks. \"Looks like we may have a little more fun than planned,\" said the hyena-like woman as Kashka ran up beside Kal. \"And he brought along some extra meat for us too.\"\n\n\"Sorry, I'm the only one who gets to eat her,\" he called out to the approaching gnolls. Spotting a glowing white speck coming towards them, he yelled, \"Ria, grab my staff!\"\n\nA couple of the creatures spun around, expecting an attack from behind. Instead, a speck of light leapt up from the ground next to the first gnoll Kal bowled over and darted after the sprite as it passed overhead.\n\n\"This wasn't what I thought you were racing toward,\" said Ria as the light dipped into her bag then immediately popped out to turn into Kal's staff.\n\n\"To be fair, neither did we,\" Kal replied as Kashka nodded. \"Rhim and Coovie heard them and thought they were true hyenas, not gnolls.\"\n\n\"What's the plan?\" asked the sprite.\n\n\"Well, they were talking about forcing me to breed with them and consider Kashka meat. So, I doubt there's a peaceful resolution to this.\"\n\n\"Don't worry, human, we'll be sure to get our pleasure out of her holes before we eat her,\" said the gnoll leader. The woman pulled aside her loincloth to reveal a phallic organ they supposedly used, just like a penis but was somehow actually a vagina.\n\nDespite his curiosity about how the whole process worked, he had no interest in experiencing it firsthand. \"Since I've already taken out two of you, and the battle hasn't even started. I'll allow you the chance to run away.\" He looked over at the cat-girl, \"Kashka, how many do you think you can take down?\"\n\n\"Twelve before I get in close,\" she replied, pulling her throwing knives and a vial of clear liquid from the pouches on her belt, then drizzling the viscous fluid across the blade tips.",
        "The gnoll leader chuckled. \"I'll give you credit for trying, but that bluff isn't going to work.\" She turned to her warriors, \"Get them.\"\n\n---\n\nThe girls heard the crash as Kal ran into the first gnoll but could not see what happened from the ground. Chaldi witnessed everything from where she stood on the wagon seat and immediately ordered them to go help. Melir, Rhim, and Coovie looked on with fear, then wonder, as the band of gnolls moved toward Kal and Kashka.\n\nFrom their vantage point on top of a small rise, they saw most of the gnolls' front line collapse, clutching their throats. Those who survived were quickly met by purple arrows Kal summoned as he mimed drawing a bow. After the first volley, they watched Kashka brandish her daggers and rush forward, cutting down gnolls in a whirlwind of blades. On the other side, Kal did the same but instead sent the beasts flying with crushing blows from his twirling staff. Melir shook his head and turned back toward the road.\n\n\"You're leaving?\" asked Rhim.\n\n\"Yes. The safest way to deal with the dogs would be to stay back and fire his magic bolts as the cat cut them down. That he rushed in at the same time... they are toying with the dogs, they don't need my spear,\" said Melir before jogging back. Even though he wanted to stay and watch, his first task was protecting the merchant and his wife.\n\nChaldi and Soonu looked at him in confusion when he returned. \"What happened? Why did you come back?\" Chaldi asked.\n\n\"I'm sure they will thank you for sending me to assist them, but I would have been more burden than help.\" Chaldi moved over so he could crawl back into his seat. Once settled in, he sighed and looked at his employers. \"After what I just saw, I believe they are the ones who killed the sandworms.\"\n\n---\n\nThe sun disappeared below the horizon, dimming the landscape as Kal approached Kashka with one of the gnoll's spears in his hand. Ria had stored his staff earlier before returning to her bag.\n\n\"You're terrifying, you know that?\" he said.\n\n\"Terrifying? How so?\" the cat-girl asked as she peeled up a piece of leather armor from one of the dead creatures. She cleaned her blades with the cloth padding beneath before returning them to their sheaths.\n\n\"You don't parry, or duck, or dodge. Or maybe I should say that you do, but it's always in the form of another attack.\"\n\n\"It helps when you can see where their attacks are going before they do.\"\n\n\"Can you tell the future now?\" he asked. It certainly seemed like it. The last of their opponents stabbed at Kashka with a spear, and the woman barely moved to avoid it. As she closed in, the creature lifted a leg to catch her in the stomach, but the cat-girl put a hand on its knee and used it to vault herself up and over its head. The assassin landed silently behind the gnoll as it grabbed at its neck, trying to stop the blood flowing from a thin but deep cut.\n\n\"No, just using my ability differently. Instead of only using it for my own attacks, I'm using it to judge where my opponent strikes as well.\"\n\n\"As I said, terrifying. Out in the desert I thought about sparring with you to pass the time and keep my skills sharp. I'm glad I didn't. You would have made a fool out of me,\" said Kal as he bent down by the gnoll leader's head. His shield flashed, and the dead beast's head rolled free.\n\n\"Hardly, you are far more skilled than any of these,\" she said, waving at the gnoll corpses.\n\n\"That's good to know,\" he said as he took the butt of the spear and shoved it into the head's exposed windpipe before lifting it into the air.\n\n\"What are you doing?\" Kashka asked, but Kal just held up a finger for her to wait.\n\nThe first gnoll Kal crashed into didn't survive the encounter, but he merely knocked the second unconscious. It may be alive, but he wouldn't be surprised if it had more than a few broken bones from the impact. Though the mage was only guessing, he figured its position toward the group's rear indicated low status among the other gnolls.\n\nKal shoved the spear into the ground next to the creature then roughly kicked it until it finally woke up. The gnoll snarled at him until he jerked a thumb over his shoulder at the troupe leader's head.\n\n\"That's what happens to those who threaten to kill and eat one of my women,\" he said in an icy tone. \"Congratulations on your promotion.\"\n\n---\n\n\"I don't get why you let one of them live,\" said Soonu as they set up camp for the night.\n\n\"Blame it on foolish pride,\" Kal replied as he tossed his tent out and said the command to set it up. \"I like to believe I'm a good person, and that gnoll was out cold before it had the chance to raise its weapon. Technically, it never attacked Kashka or me, so I let it live. Hopefully, it will have a healthy fear of humans going forward.\"\n\nOnce the grass around their campsite was trimmed and scraped down nearly to the dirt, Melir declared it safe enough to build a small fire. Stray sparks were more dangerous toward the end of the wet season as they could erupt into flash fires, but the guard didn't see the need to take chances. Coovie and Rhim both thanked him profusely, and Rhim even managed to kiss the man on the cheek before scampering away.\n\nThe couple's fire turned out to be a small pile of rocks with a flamestone, much like the ones Kal made for the stove and fireplace back at his farmhouse, tucked in the middle.\n\nSoonu also brought out a tall pole with a metal spike on one end and an enchanted stone on the other. He stuck the pole in the ground a short distance from the 'fire' and said, \"Luma.\" Rhim and Coovie seemed fascinated by the brightly glowing stone. They certainly found it far more interesting than Kal's light spell.\n\nAfter supper, Chaldi retrieved her pot of beeswax and finished up the canteens by removing the beans then brushing the outside with the melted wax. She ladled some inside and poured it out as she slowly rotated the leather bottle before plugging them with a stopper and handing two each to the gazelles. The leatherworker laughed at their looks of confusion before fetching a couple of soft belts for them to hang the canteens from.\n\n\"What are the extras for?\" Rhim asked Kal.\n\n\"For you to teach others what we learned and for them to teach others and so on.\"\n\n\"Remember watching Kal and me your first night with us? Kal has given you the knowledge to have that for yourself. Spreading that knowledge to others is how you will repay him.\"\n\nCoovie looked down at the leather bottle, \"So, what are these for?\"\n\n\"To practice measuring your mating scent,\" said Kal, \"But also to cheat if you feel the need. Fill it to the top and then pour it out upwind to get the reaction you want without using too much.\"\n\n\"Speaking of which...\" said Chaldi while casting a sultry glance at her husband.\n\nSoonu slapped his knees and started getting up from where he was sitting, \"The wife has spoken, time to clean up and get ready for bed.\"\n\n---\n\nCoovie wrinkled her nose as she peered into the neck of the leather bottle. \"It's just below the top,\" she stated.\n\n\"Good job, now stand upwind and pour it out.\"\n\nThe gazelle nodded and walked back and forth across the far side of the road, drizzling the bottle's contents at arm's length. Kal wasn't sure when it happened, but the wind primarily came from the south now, instead of west like he was used to.\n\nCoovie shook out the last remaining droplets and replaced the stopper before trotting back to Kal, Kashka, and Ria.\n\n\"Now we wait for them to give us a signal if it worked or not,\" said Kal.\n\nA few minutes passed, but instead of a specific yes or no, they heard soft, rhythmic moaning from the merchant's wagon.\n\n\"I think we call that a success. Let's head inside so you can get your reward,\" Kal said to Coovie. The gazelle shot him a brilliant smile before sprinting to the tent ahead of them. The mage looked around and asked, \"Where's Rhim?\"\n\nKashka put a hand on his back and pushed him after Coovie, \"Don't you mind where she is. You have two women who need your attention already.\"\n\nKal chuckled, \"Yes, Mistress.\"\n\n---\n\nMelir growled in frustration. He knew this would happen, but that didn't make him feel any better about the erection straining to get free of his shorts. His employer's wagon was shaking from their energetic lovemaking, and the wife's moans were just making things worse. The mage and his women had all retired to their strange magical tent, leaving him alone to keep watch.\n\nWith a final look around the moonlit savannah, Melir pulled his pants down and groaned with relief as he began stroking himself. It didn't take long before he stood there panting as he approached his first climax.\n\nAt the sound of soft footsteps, he spun away, gripping his prick. Glaring back over his shoulder, he saw the other gazelle-woman walking toward him. Melir bit back his sharp words as Rhim knelt down in front of him. Without a word, she looked up into his eyes and opened her mouth.\n\nAfter a moment's hesitation, Melir turned back toward the gazelle-woman. Rhim glanced between the cock inches from her face and his eyes a few times before finally looking up again and extending her tongue. As the guard began stroking himself again, the gazelle's hand drifted over and began teasing her clit.\n\nHe had been so close moments before her arrival, it only took another minute before Melir grabbed Rhim's hair and held her in place as he began shooting his seed into her mouth. She flinched as a stray spurt landed on the side of her nose and forehead. The gazelle brought her other hand up and scraped the guard's seed down into her mouth before swallowing it all down. Her fingers on her clit sped up, and Rhim moaned as a small orgasm washed over her. When she opened her eyes again, Melir's prick bobbed in time with his heartbeat right in front of her. She looked back up at him and opened her mouth again in invitation.\n\nKashka peeked out from the door of Kal's tent. She nearly cheered as the guard slowly fed his cock into Rhim's mouth.\n\n\"Not bad, Kashka. Not bad at all,\" whispered Ria from her shoulder. \"You are definitely putting Laika's teachings to good use.\"\n\n\"Thanks,\" the cat-girl replied as she closed the flap and Ria sealed the tent. \"But now it's time to get my reward,\" she said, stripping off her clothes as she walked over to the bedroom."
    ],
    "authorname": "BluDraygn",
    "tags": [
        "oral",
        "magic",
        "monstergirls",
        "action"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/trc-lord-of-the-glass-desert-ch-14"
}