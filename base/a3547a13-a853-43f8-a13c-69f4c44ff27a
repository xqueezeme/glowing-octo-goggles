{
    "title": "Fiji Baby",
    "pages": [
        "This is the long-awaited sequel to my story of love and lust in the New Zealand outback, \"You'll See, Lucy\". I've had a number of requests for this story, and I apologize to everyone who enjoyed the last one so much that it took me so long to write again. Life sometimes has a way of directing us away from our personal projects. Hopefully this will live up to the expectations of the fans of the first part. In any case, this story takes place some years after. The rest will become apparent. Enjoy! And please feel free to contact me with comments and suggestions for a third installment. \n\n============================== \n\n\"This...is just a one-time thing,\" Lucy began. I nodded in ascension. \n\n\"What happens in New Zealand stays in New Zealand,\" I reassured her. \n\n\"It's for the best,\" Becca agreed. We were all silent again, but the breathing was easier. The next day we met Frank at the airport to drop of his ute. I gave him a look and a handshake that said, \"Meet me at the pub, I've got a tale for you,\" and he drove off with a polite nod and smile to the girls. Becca and I took Lucy into the airport as far as security before saying our goodbyes. She still looked amazing, standing there, happy but slightly sad, dressed all pretty in her light skirt and sandals, her deep cleavage once again beckoning. I gave her a long, strong hug when it was my turn, and she surprised me by giving me a long, deep, loving kiss. When we finally broke I saw that Becca was flushed and smiling. She squeezed my hand. I was getting laid that night for sure. Lucy bit her lip and ran and hand down my chest as she took a step away and picked up her things. \n\n\"I've got some free time around Christmas,\" she said, slinging her bag over her shoulder, \"And I hear this country is beautiful that time of year. Perhaps I'll come visit you two? Besides...\" \n\n\"What happens in New Zealand,\" I began. \n\n\"Stays...in New Zealand,\" Becca said, smiling at her sister and pulling in close to me. Lucy winked at us both, turned, and was gone. \n\n***** \n\nChristmas. She kept her word, technically, as she never did indicate what year that might be. 2007 ended without a word from Boston as Becca and I settled into our tiny, cold flat in Dunedin. It had been a terrible hassle to transfer all of our credits, but after four years I finally returned to school and finished my degree, as did Becca. Finally employable beyond selling river-running trips to hipsters and slickers, we moved into a comfortable little bungalow south of Auckland. By the end of 2008, I had a job overseeing a drilling project at the gold mine in Waihi, and my pretty little bride-to-be was donning her brightly-colored scrubs each morning. Weekends on the beaches of the Coromandel, vacations to the forgotten valleys of the Fiordland...life was good. \n\nBut still, no word from stateside. Our questions were finally answered in a letter from Mrs. Castel. \n\n\"Does this not seem strange to you?\" I said, sitting at our little kitchen table and holding the hand-written letter. Their mother was a stickler for traditional correspondence. \n\n\"Does what seem strange?\" Becca answered. She had finished the letter before I returned home from the mine, and left it out for me to read. I waited for her to look at me, then gave her a \" 'scuse me?' look with my eyebrows. \n\n\"The fact that Lucy's getting a divorce because he slept with another woman? I never took her for a hypocrite,\" I said. I immediately winced, regretting my choice of words as Becca stopped putting away dishes from the drainer and gave me a stern look. \"I didn't mean that-\" I began. \n\n\"I'm not even going to go into all the reasons why that's wrong, because I think you know all of them,\" she said, winding down from her momentary temper and turning back to the sink. She was right. Our backcountry tryst of the previous year was something entirely different, indeed. Infidelity? Maybe, technically. But the phrase \"cosmic command of the highest echelon\" comes to mind. There was no way it could not have happened. \n\nI paused, leaning back in my chair and allowing the letter to wave in the breeze from the open window. The kitchen was silent for a moment. \n\n\"We should call her,\" I suggested. Becca shook her head. \n\n\"Despite what little you know of her, Lucy is a very private person. Let her handle this on her own, and when she's ready, she'll do the calling,\" Becca said. Ready for what? I wondered. \n\nI was silent for another moment, then got up and began to help her put away the dishes. \"Then write to her,\" I said. \n\nBecca stopped and looked out the window, then looked at me. She shrugged. \n\n***** \n\nBecca did. She wrote a beautiful long letter that we both signed, then slipped in a photo of the two of us at Lake Taupo. We didn't really expect a response. And, well...we didn't get one. Not for another year. \n\n***** \n\nI managed to pick up the phone on the fourth ring, dripping wet and holding a towel around my waist. It never fails. Always when you're in the shower. Becca wasn't home from the hospital yet. \n\n\"Hello?\" I said. Silence. I wiped the water off the side of my face. \"Hello?\" I said again. \n\n\"Peter?\" \n\n\"Oh, hey babe!\" I said quickly, thinking I had recognized the voice as Becca's, \"Could you stop and grab some brew on the way home? We're fresh out,\" I said. Musical giggling sounded from the receiver. \n\n\"Well, I would, but I don't think it would keep on the flight over.\" \n\n\".....Uhhh....\" I said, furrowing my brow. I felt suddenly like I was being put on. \n\n\"Peter, it's Lucy,\" she said with a laugh. I was flabbergasted for a moment, my jaw dropping. \n\n\"Peter, are you there?\" she said, laughing more. What a wonderful sound. My chest flooded with heat as a huge smile spread across my face. I was still in the towel and still talking to her forty minutes later when Becca arrived home and wrestled the phone away. I let the sisters talk privately for as long as they wanted, then joined back in at Becca's behest about an hour later. If her out-of-the-blue phone call was a wonderful surprise, news that she would be attending our wedding and reception was positively spine-tingling. Becca jumped on the couch like a little girl, practically crying with happiness. \n\nThe next month passed with amazing rapidity. Christmas came and went, and on January 15th my bride's parents arrived with Lucy, and my father and brother later that same day. The tiny outdoor ceremony was completed with only our immediate family in attendance, witnessing our union (at least, our lawful one) beneath an oceanside Pohutukawa tree exploding with its trademark red blossoms. \n\nThe reception was another matter all together. \n\nEveryone would later recall the night, if they could recall it at all, as perfect. The air was warm and balmy beneath the same bursting red trees, the breeze calm. Long strings of paper lanterns hung from the branches, food and booze flowed with a pace that would have shamed the most raucous of Roman orgies, and the crowded dance floor pulsed with the beat from the live band as over 200 friends and family members partied until sunrise. For that night, everyone acted like we were back in college, complete with a couple of highly inappropriate keg stands, streaking runs, and even a good 'ol rasslin' match between some drunken miners from work. As morning brought the harsh sun, those who weren't carted off by taxis littered the deck furniture, couches, and guest beds of the huge house on the water that had been rented for the occasion. I would later vaguely recall being helped to the master suite by two little pairs of hands, and awoke mid-afternoon to the lovely, familiar, exotic, and all-together welcome scent of Lucy's hair. \n\nI blinked. Then blinked again. It took a lot of blinks to clear the bleariness from my eyes, let me tell you. Lucy stirred under my arm with a soft little moan, nuzzling into the fluffy white pillow that we shared. I finally began to gain my bearings and raised my head, only to be greeted with the pulsing pain of a hangover. I immediately let my head back to the pillow. I lay flat on my back, still wearing one shoe. My bow-tie was loose around my neck, my shirt unbuttoned to mid-chest, and there was a girl on each shoulder, both snuggled close. Becca had at least shed her expensive white dress, and had climbed into bed wearing her stockings, panties, and bra. Lucy must have been a bit further gone. The only things that were missing were her shoes. She even had her purse slung over one shoulder, her beautiful and revealing red dress lightly rumpled from her night-time tossing. There wasn't a man at the party who didn't try to pick up Lucy, and look where she ended up! I smiled to myself and closed my eyes, drinking in the feel of their warmth against me. \n\nIt took a few minutes to gently extricate myself from their arms and weave my way across the carpet to the bathroom. I left the lights off as I downed glass after glass of water from the tap, adding a few migraine-strength headache pills on top of the last. Out in the bedroom the sisters had yet to stir, so I thoughtfully placed glasses of water and their own soon-to-be-needed doses on the nightstand before struggling out of my clothes and into the shower. \n\nThe power of bathing after a night of heavy drinking cannot be understated. By the time I finished scrubbing every inch and washing my hair twice, I felt like a new man. When I exited the bathroom, towel-clad, the girls still slumbered on. I quietly pulled on a pair of shorts and a t-shirt, then wandered downstairs to bid farewell to the remaining couch-guests. There wasn't any food to speak of, as the caterers had done a wonderful job of cleaning up after the rest of us slobs passed out. Breakfast would have to wait until we got back to our place. \n\nI returned to the master suite to find that the water and pills I'd laid out for the sisters had been dutifully consumed, and both were rubbing their eyes and temples while sitting on the edge of the bed. They nursed their hangovers in a silent way after a soft 'good morning' and genuine smile, and both fell asleep in the car on the way home. I wasn't sure at that point if there had been any prior arrangement with Lucy, but much to my happy surprise she seemed all too prepared to stay for at least a few days, judging by the size of the bag I had loaded into my trunk. Our contact in the presence of guests had been limited to knowing looks and furtive glances, but it was clear she was glad to be there, and Becca and I made it clear she was welcome. \n\nSunset over the ocean found us outside again, seated comfortably on padded deck furniture around a small fire set in a big steel dish. The hair of the dog was in each of our hands, and we comfortably sipped the deep red wine over conversation. Becca and Lucy had never gotten dressed, instead changing into bathrobes after their shower. Lucy wore mine. And nothing underneath. But she had been careful to not let me see anything. \n\n\"I can't believe it's taken me three years to get back here,\" Lucy said, looking over the low flames and out to the ocean, \"I've thought about you guys every day.\" \n\n\"We've missed you too, Lucy,\" Becca chimed in, \"But we never made too much effort to visit you, either.\" \n\nLucy laughed. \"In Boston? Why would you? No, I'd rather keep my lives separate, really. VP Lucy doesn't know much about Kiwi Lucy. Besides, what would we do there that could compare? Go to the aquarium?\" \n\nWe all grinned at one another. Becca suddenly shot me a look, and her smile spread wider. She was up to something. \n\n\"Lucy...\" she began, actually looking at me while she said it, \"Have you thought much about...what we talked about?\" \n\nLucy stopped mid-sip and looked from Becca to me and back with a big smile and a nip of her lower lip. She suddenly set her glass down on the deck and jumped up from her seat to run indoors. \n\n\"What did you talk about?\" I asked. Becca didn't have time to answer before her sister returned suddenly, scampering along on her toes and carrying an envelope, which she handed to me before sitting down again. I'd never seen Becca so excited, or Lucy for that matter. \n\n\"Go ahead, open it,\" Becca said, gesturing. It wasn't sealed. Inside was an Air New Zealand ticket sleeve. Inside that was a ticket to Fiji. My jaw dropped. Again. \n\n\"You didn't,\" I said to Becca with a wide grin. The girls just grinned back. \n\n\"Becky suggested it, and I...thought that maybe three nights and three days together might make up for three years apart,\" she said. \n\n\"I'm speechless,\" I muttered, eliciting laughs from the two women. \n\n\"Well, since no one ever talks about what happens on their honeymoon anyway...it wouldn't hurt to add another hot girl to the mix,\" Becca giggled. I had yet to pick my jaw up off the deck. \n\n\"Packed? We leave tomorrow morning, after all,\" I said to Lucy. She nodded with a sly smile. \n\n\"Everything I'll need. But I didn't bother bringing any underwear. You know...to save weight,\" she answered, standing with Becca and I. As I followed Lucy's swinging hips into the house, Becca boldly gave my hardening manhood a firm squeeze. \n\n\"Make sure you pack your camera,\" she said with a wink. \n\n***** \n\nFiji. \n\nI had been once before, years ago, and was glad to see that little had changed after the recent coup. It seemed like a 4-year cycle, really, with a new general ensconcing himself in Suva City about twice every decade. As our 767 touched down on the Nadi runway with a bump and a roar, the girls gripped my hands tightly. I glanced at the both of them, seated on my left and right, big smiles of excitement spread across each beautiful face. \n\nThey had taken my warnings about clothing seriously, and were dressed modestly in accordance with the rather conservative local custom. Fijian women didn't wear shorts, and they certainly didn't flaunt their cleavage as well, which both girls were apt to do. Becca had confessed that Lucy staying clothed around me wasn't a mistake but rather a teasing regimen, so I didn't really complain that they were forced to cover up a little. Less swelling in the shorts. However, as we exited the plane into the classic tropical island heat and humidity, their t-shirts left little to the imagination anyway. The tight, knit fabric clung to their taut bellies and full breasts, Lucy especially. She hadn't been kidding about not bringing any underwear.  \n\nOur boat didn't leave for the outer islands for another 5 hours after we landed, so after I vigorously negotiated a fare with the mini-bus cabbie, I got to follow two sets of swinging hips all around the Nadi shopping district. The sisters dragged me into every little shop on Queen's Road, despite that fact that most of them sold the exact same knock-off American designer brands. But they did find a few things to buy (go figure), filling a shopping bag between them with native handicrafts and brightly-colored sarong skirts, which the amiable young islander saleswoman showed them how to put on. They even insisted I get one, at least one a little less flowery. Fijian men wear skirts. They ARE awfully comfortable in the heat. \n\nThe ride to the outer islands and our secluded resort left at 2:00 PM and took three hours, not a minute of which was complained about, despite the small sections of pitching and rolling swells that plagued the longer crossings between islands. It was a beautiful, breezy, sun-soaked day on the ocean, and the jet-powered catamaran's pilot took the boat in close to all the rocky, uninhabited isles along the way. I spread the map out on my lap and ran my finger across it. Becca clung to the railing nearby, while Lucy clung to me as we sat on a bench on the upper deck. \n\n\"So we're here,\" I said to Lucy, alternately moving my finger across the blue of the map and pointing to the horizon, \"That's Guna, that's Vuake...and up there should be Nacula. And right around in this area...is our resort.\" \n\n\"Tell me about this place,\" she asked, looking up at me. Our noses were no more than a few inches apart, her emerald green eyes sparkling as she looked at me so closely from under her wide, floppy hat. I had to pause a moment, which only made her grin more happily. Lucy was such a flirt and tease, and took every opportunity to make me lose my train of thought with her amazing unspoken charm. \n\n\"*ahem* Well, it's a new place. There are dozens of resorts out here, some catering almost exclusively to the rich and famous, others priced for backpackers. We're someplace in between. Most of the inexpensive resorts are communal style places; you live in dorms, and eat together at prescribed times. Our's is more...self-sufficient. We get one of ten fully-stocked little cabins, away from everyone else, sort of at all points of the clock around a forested isle. We'll be at \"nine o'clock\", out on a little peninsula. I requested the most secluded one they had when I made the reservations last year.\" \n\n\"What's the beach like?\" Lucy asked. \n\n\"We get our own, in a little cove. They sent me pictures,\" I answered. \n\n\"We cook?\" \n\n\"No, we have kind of a room service. We order out, and they'll bring it to us when we want.\" \n\n\"What's the view like?\" \n\n\"You know, we'll be there in another hour. Maybe you'd like to save a FEW pleasant surprises?\" Becca chimed in with a laugh. Lucy smiled and made a pouty face. We began to get into the area of the resorts, and stopped frequently for armadas of small craft that appeared from nowhere to ferry people in to the shoreline. We were the furthest from the mainland, and the last to leave. I looked around the boat as we left the next-to-last stop, and saw many couples holding one another close, smiling and whispering. I grinned to myself. Our little island was going to have the most sex per capita in the world about three hours from then. \n\nThe catamaran stopped some distance out from our island. No boats were there yet, and as the captain radioed the resort, everyone crowded to the railing to view our paradise from afar. I looked up and down and grinned inwardly. Every man had a beautiful woman on his arm, but I was the only one with two. \n\n\"It looks like Eden,\" Becca said, Lucy nodding in ascension. The wide ring of the coral reef kept our larger boat at bay as the little open-topped run-abouts appeared from the shore, making for the gap in the ring where we waited. The island was wide and flat, looking as if it might rise only twenty or thirty feet above the waves at its middle. Coconut palms waved in the breeze, overhanging the sea along the white sand beach, surrounded by bright azure waters. \n\nOur boats soon arrived, and after they were stacked with luggage we squeezed aboard the nearly-broached little vessels and puttered to shore. The look of wonder on the faces of Lucy and Becca got more and more pronounced as we neared the beach, and a scene that they had only ever seen in airplane travel magazines came to life. A small welcoming committee of smiling, chocolate-skinned Fijian men and women assembled on the sand, dressed in brightly-colored sarongs and buttoned shirts. \n\n\"They'll give you girls flowers,\" I said, speaking to Lucy and Becca over a mound of bags between us, the lapping water only inches below the gunwhale behind me. \n\n\"We get lei'd?\" Becca joked, glancing at the beaming Lucy. I chuckled. \n\n\"Not yet,\" I answered, \"This is just a single blossom. If you're taken, you put it behind your right ear. Available, on the left.\" \n\n\"What am I?\" Lucy asked, displaying ring-less fingers. \n\n\"Definitely taken,\" Becca answered for me, hooking her sister's arm in her own as they stepped together onto the little pier. Sinewy, shirtless Fijian teens swarmed the little boats, waist-deep in the water, smiling shyly and mumbling \"bula\" to us as they portaged our luggage to the shore, and then off into the trees. We would see it again at our cabin. The welcoming committee spoke more English, adorning the girls with wonderful-smelling flowers and greeting each warmly. A tall, barefooted bear of a man greeted me with a handshake and broad, white smile. ",
        "\"Bula! Welcome to our island, Peter,\" he boomed, recognizing me from the photo the resort insisted on having, \"I am Curtis. Please, if there is anything I can do for you, you have only to ask.\" I thanked him as he handed me a fat envelope, our welcome packet, with the names \"Peter and Rebecca\" hand-written on the outside. \"And Lucy\" had been added below. As I looked at the names, I paused again to drink it all in, raising my head to look around me at my heavenly surroundings and angelic company. Curtis's voice boomed out behind me, greeting other guests as as I moved up the beach toward where Lucy and Becca chatted with a pretty young Fijian woman, who was gesturing toward where several wooden structures blended nicely with the trees. Lucy turned for a moment, looking for me, and smiled winningly as she caught my eye. She gave a cute little wave. She and my new wife both looked radiant, dressed almost identically in expensive, white, linen form-fitting blouses and loose pants. Lucy still wore her big floppy straw hat and sunglasses, her sandals held in one hand as she wiggled her toes into the white sand, her dark brown locks spread across her shoulders. Becca noticed me approaching and smiled as well, her own tawny hair held back stylishly with her sunglasses on top of her head. \n\n\"Those boys already took our stuff to our hut,\" Becca said, coming forward to take my free hand, \"Shall we?\" \n\n\"Yes!\" Lucy piped in, plucking our welcome envelope from my other hand and lacing her fingers into mine. I noticed not a few grinning glances from some of the other male guests. Lucy lowered her voice and spoke close to my ear as she said, \"I feel the need to show more skin!\" \n\nMy member lurched to life in my shorts as she headed for a small opening in the trees. Having Lucy's body so close and yet so covered was beginning to feel like cookies on the top shelf; visible but unattainable. The gap in the trees led to a narrow, sandy path, which in turn led to a hub of sorts with a number of small, signed arrows and little paths running off in all directions. \n\n\"Mirror Cove, that's us,\" Becca said, pointing and leading the way. \n\n\"Mirror Cove?\" Lucy inquired. \n\n\"It's really sheltered from wind and waves. Very calm in the morning and evening,\" I clarified, almost verbatim from the brochure. Becca had let go of my hand to lead the way on the path, but Lucy held tight, giving me periodic squeezes for no discernible reason. I began to relive moments from three years ago, and started to wonder which girl I was really on this honeymoon with. She had taken off her sunglasses under the trees and held them in her hand with the sandals and envelope, her big, doe-like emerald greens lighting up whenever our eyes met. \n\nWe had been walking perhaps 10 minutes along the winding path when the dense forest began to open up slightly. Small birds chirped and flitted about in the trees above, and quick, green lizards darted under our feet in the sand. \n\n\"Good luck,\" I laughed as Becca tried, and failed, to catch one. \n\n\"I'm gonna get one, you watch,\" she said, picking herself up out of the sand and dusting off her hands. \n\n\"There it is!\" Lucy exclaimed, pointing. Our hut appeared as suddenly as did the shoreline, and Lucy let go of my hand to run up ahead with Becca. They had made it ready for our arrival, fresh flowers placed around the large room and the ceiling fan turning slowly. Our bags sat in a neat row at the foot of the huge king-size bed, the elegant hand-made tiled floor covered here and there with thin, soft rugs. A single step served as a stoop, with a rough mat of reeds to clean the dry sand from our bare feet before we entered. I was glad to see my guitar case lain carefully, flat on the bed, but couldn't help a peak inside to be sure everything was ship-shape. \n\n\"Hey!\" Becca laughed, leaping onto the bed in another vain attempt to capture a cute little green lizard. It disappeared lightning fast, and Lucy burst out laughing at Becca's antics. \n\n\"Those little guys are everywhere!\" I said, \"He went that way!\" \n\nWe all laughed as we followed him into the bathroom, but quickly forgot the hunt as we continued to explore. A huge shower with solar-heated water adjoined the main bedroom, along with a vanity and facilities. These were actually the only two rooms. What more did you need? \n\n\"This...is...phenomenal,\" Becca said, filling a glass from a chilled bottle of Fiji Water that had been set out on a small table by the door for our arrival. \n\n\"Phenomenal doesn't cut it, but it'll have to do until we invent a stronger word,\" Lucy said with a laugh, stepping outside into the sand. The front door opened directly onto the beach under palms and a small roofed area with Adirondack-style chairs. Nearby and closer to the water, a large hammock was spread between two tall, flowering trees. Lucy wasted no time in climbing into it, swinging back and forth as she looked out over the calm waters. I dropped myself into a chair under the porch roof and flicked open my knife to open our welcome envelope. Becca came and sat on the arm. As I read over the pages of contents, I glanced at my watch. \n\n\"How hungry are you girls?\" I called, so Lucy could hear in the hammock. \n\n\"Famished!\" she answered, rolling out of the hammock and climbing the beach as I waved the paper menu in my hand. She and Becca pressed their heads together to glance it over. \n\n\"That,\" Becca said simply, stabbing her finger down. I laughed. \n\n\"Yes ma'am,\" I joked. \n\n\"Make it two. And this here...sounds amazing,\" Lucy said, running her fingers under a line in the 'dessert' section. I looked at it. \n\n\"It is,\" I said, recognizing one of my favorite food-based memories: the dollop of rich vanilla ice cream in a half of a ripe mango with the other half crushed on top. My mouth watered. The menu specifically mentioned that all you needed to do was call it in with the little black courtesy phone by the bed, and it would be brought to you. But I wanted to do a little exploring. \n\n\"Make yourselves at home, girls, I'll be back with grub post haste,\" I said, handing the sheaf of papers to Becca and pecking her on the cheek for no reason. She smiled and squeezed my arm as I passed, the girls already beginning to chat and laugh as I headed off into the trees, back down the narrow path. The island was actually set up more like a live oak tree than a clock, as I found, with the main kitchen, quietly humming underground diesel generators, gift shop and bar at the root. The cabins were at all the tips of the branches. Several other couples were seated with brightly colored drinks at small tables in the open-air dining area as I arrived and leaned my elbows on the bar. A tall, shirtless young Fijian stood cleaning glasses, and looked up with a smile. \n\n\"Bula. What can I get for you sir?\" he said in his island lilt. I ordered our food and drinks, tacking on a refill for our hut's ice chest and some bottles of this and that. Most of it was dispatched to our hut almost immediately; I would carry the food and desserts when it was ready. In the meantime, I ordered myself a drink at the bar and chatted with an Englishman who joined me momentarily. \n\n\"Kiwi, aye?\" he said, recognizing my accent. I nodded. \n\n\"Yorkshire?\" I replied. He laughed. \n\n\"Impressive! So what are you out here for, mate? Enjoying a holiday?\" he said. \n\n\"Honeymoon, actually,\" I said, sipping my drink. \n\n\"Ah, congratulations!\" he said, touching glasses with me. He paused a moment and lowered his voice. \"Aren't you the bloke you showed up with, ah, two young ladies?\" \n\nI just grinned over my drink. \n\n\"It's a good story,\" I said. \n\n\"They look a lot alike,\" he observed. \n\n\"They're sisters,\" I replied. He paused in astonishment, then whistled. \n\n\"You set the bar awfully high for the rest of us, brother,\" he laughed. We made small talk while we finished our drinks. My food soon arrived, packaged for travel to our hut. \n\n\"Good chatting with you, mate. I'd say to enjoy yourself, but I don't think it's necessary!\" he said, shaking my hand. I gathered up the parcels and headed back along our path. It was quiet when I arrived at the hut, but as I neared the door I could hear a sweet, melodious sound. Lucy was humming. \n\n\"What a pretty tune,\" I said as I wiped my feet and stepped through the door. My breath caught for a moment as she turned to me and smiled radiantly, as usual. \n\n\"Hi, Peter,\" she said sweetly, a hand holding the strings of her bikini top behind her neck, \"You're just in time! Could you help me, please? I can't seem to get this tied correctly.\" \n\nI whistled softly in appreciation as I set down our dinner on the table by the door and moved across the room to where she stood in front of the tall mirror, by the open window. White linen drapes, matching her bathing suit perfectly, blew gently in the breeze. \n\n\"You look...incredible,\" I said, ending my quip with a short, nervous laugh. She smiled at me and turned to face the mirror again, watching me in it as I moved up behind her. Her two-piece was brand new and blinding white, covering just enough of her perfect ass to be revealing yet tantalizing, tied in a simple bow above each smooth hip. She had managed to tie on her top across the back, but the knot behind her neck was giving her trouble. She let go of the strings as I took them in my fingers and tied the half-hitch. I could feel the weight of her breasts as I pulled the knot snug. \n\n\"Thank you,\" she replied softly, blushing ever-so-slightly. We were silent for a moment. \"Becky's down the beach, looking for seashells,\" she said, seeming to hear my thoughts. \n\n\"Ah,\" I said, pulling the loops of the bow as she held her long, dark locks out of the way. \"Do you have any idea how hard this is?\" I laughed. \n\n\"Tying a bow?\" she joked, \"I thought you had a degree.\" \n\n\"Not in knots. But no, keeping myself from just pulling this off of you,\" I replied as I finished the knot. She giggled softly as she turned to me, then pushed herself up on her tip-toes against my chest, her arms crossing behind my neck as she looked up into my eyes. Our noses were millimeters apart. She smelled amazing, the scent of the blossom behind her ear filling my head. \n\n\"When I decide you get to see me, I'll take it off myself,\" she said softly, her sparkling green eyes burning into mine. I licked my lips involuntarily. \n\n\"And when will that be?\" I said. \n\nLucy just grinned slyly. Her lower lip trembled slightly for a moment as she felt my hands encircle her waist. God, her skin was perfect, so like Rebecca's. She suddenly pushed herself closer, her breasts pressing hard against my chest. A small, kitten-like sound escaped her throat as she kissed me, and I pulled her middle close as I returned it. Her hands moved down to hold my sharp jaw as she pressed her lips and tongue against mine. I felt her tremble, then she broke the kiss with a little gasp. \n\n\"You need to shave,\" she laughed nervously, defusing the overly-romantic moment. I scrubbed my palm across my chin, the black stubble showing a bit. I chuckled. \n\n\"Yeah...yeah, I'd better get on that,\" I said. Lucy took a small step back and then smiled, spinning a delicate 360 and spreading her arms, palms up. \n\n\"So, you like it? I bought it in Auckland, just for this trip,\" she said. Her breasts bounced heavily as she finished the spin, her lightly-tanned cleavage as deep and spectacular as the Grand Canyon. The usual speechless moment passed before I answered. \n\n\"Pure elegance,\" I answered. She smiled and turned back to face the mirror, running her hands down her sides. I always loved a woman who knew she looked beautiful. \n\n\"It's not easy to find a suit that will, ah, fit,\" she laughed, cupping and lifting her breasts, then adjusting the tie behind her back, \"Apparently I'm an E-cup in the UK sizes. They didn't know what the heck 34 triple-dee was.\" \n\n\"Jesus,\" I breathed with a laugh, watching her huge, perfect tits move hypnotically in her hands. She giggled at me as she turned and passed me towards the door, pulling a fluffy white towel from the foot of the bed as she did so. I watched her go, her shapely hips swinging and firm bottom bouncing slightly with each footfall. My erection raged like steel in my shorts as I crossed the room to the bathroom and got out my shaving kit. \n\nI was standing in the doorway, smoothing on aftershave, when Becca came wandering along the beach with her palm full of exotic shells and pieces of coral. She, too, was dressed in a two-piece bathing suit, tied like Lucy's, only rose-red instead of white. We chatted while we ate around the low table under the porch roof, then relaxed a little more in the Adirondacks to spoon down the soft ice cream and mango. \n\n\"Oh my God, this is heaven,\" Lucy managed between bites. \n\n\"You're telling me,\" I laughed, licking my own spoon, \"White sandy beach, sun setting purple on the horizon, gently waving palms, two goddesses for company...and ice cream.\" They laughed, a pretty, blended sound. The sun was indeed setting slowly, our proximity to the equator making night equal day. \n\n\"Lucy, one more swim before dark?\" Becca said, standing. I watched her perky D's move as she adjusted her own top. I'd been hard for what seemed like hours. \n\n\"Wonderful idea,\" her sister replied. I relaxed and watched the two nymphs step slowly into the water, laughing at it's coolness in the failing sunlight and splashing it onto their smooth, bare skin before silently gliding into deeper water. \n\n\"This calls for a camera,\" I mumbled to myself, rising from the chair to retrieve my digital. I walked to the water's edge, shirtless now and dressed in the Fijian-style men's sarong, the camera strap around my neck. I said nothing, and instead simply began to snap pictures of the girls silhouetted against the sunset, black shadows of bust and curves against the artist's backdrop of exploding colors. I was beginning to be glad of the extra battery pack, recharger, and four sixteen-gig memory cards I'd packed. Especially after I'd snapped the 50th frame in only a few minutes. \n\n\"I think we're being recorded,\" I heard Becca call out from the water. \n\n\"I don't know...*click*....what you mean,\" I said, pausing mid-sentence to snap another photo. \n\n\"Can we trust him with those, Becky?\" Lucy laughed, breast-stroking slowly toward shore to where she could stand. \n\n\"Oh, yeah, I think so. He could start a rather successful porn site with all the stuff he's got of me, and he hasn't,\" Becca said. \n\n\"Yet,\" I replied, eliciting laughs. \n\n\"What does he have of you?\" Lucy asked, walking chest-deep through the water to stand near Becca. \n\n\"Photo and video of whatever-you-can-think-of,\" she laughed. \n\n\"But it's still lacking,\" I chimed in. \n\n\"How?\" Becca laughed incredulously. \n\n\"For starters, my collection only ever features a single perfect ass and pair of breasts.\" \n\n\"Ooooo, hahaha!\" Lucy laughed, \"Should we 'flesh out' his collection, Becky?\" \n\n\"I think that could be arranged,\" she replied saucily, moving with Lucy until they were both waist-deep in the water, the colors behind them becoming all the more amazing, even though my light was failing. I snapped pictures continuously as Becca turned her back to Lucy in the calm, mirror-like water while her sister gently pulled the ties from her top and lifted it away before turning and allowing Becca to do the same for her. I gasped softly to myself, my camera clicking away as Lucy's perfect, beautiful breasts heaved into view, her nipples at attention as the water evaporated from her skin. The girls giggled as they turned to face one another, playfully lifting and caressing. \n\n\"I don't think I've heard that shutter pause for more than a split second,\" Becca laughed, moving a half step forward to press her breasts into her sister's, their combined cleavage bursting between them. \n\n\"How are we doing?\" Lucy asked, smiling into the camera as she embraced Becca. They turned to face me, their tits hanging close. I snapped away as they moved from pose to pose of their own will. \n\n\"I think you're doing so well, I'm going to have to switch battery packs before long,\" I laughed. I got several dozen more as they emerged from the water and reclined on a single huge white beach towel in the sand. I even got a few posed shots of them embracing as if to kiss, although the girls weren't quite comfortable with going the whole way. A mouth on a breast was a different story, however, and my hard-on reached new heights as I heard Lucy give a small moan, Becca's lips suckling over one, then the other hard little nipple. \n\n\"Whoa there, Becky,\" Lucy giggled, shivering a bit as her younger sister released the nipple and blushed slightly. \n\n\"Sorry,\" Becca giggled, \"Lost in the moment.\" \n\n\"I didn't say stop,\" she giggled sensuously. \n\n\"You know, as long as he's got batteries...\" Becca began. Lucy's eyes and smiled widened together and they both looked at me, lying next to one another on the towel. I paused snapping pictures. \n\n\"...what?\" I said. \n\n\"We brought something along to give you a little show,\" Lucy answered, gesturing toward our cabin. The light had diminished to only the barest glimmer of red and orange on the western horizon. \n\n\"Shall we head inside and show you?\" Becca suggested, rising to her knees. My heart beat faster. What did they bring? A show? What show? What lingerie could be better than those bathing suits? \n\nBecca got to her feet and led me indoors by the hand while Lucy picked up the towel and shook the sand off, draping it over the back of one of the Adirondacks before wiping her feet and following us inside. I was impressed with the lighting as I flipped the hidden switch, subtly-disguised wall sconces springing to life with a yellowy light and reflecting off the walls and ceiling to fill the room with a soft glow. \n\n\"Peeerfeeeect!\" Lucy laughed in a sing-song voice, looking around at the light. \n\n\"Where did you stash it? Peter, sit,\" Becca said, speaking to each of us in turn and directing me to a chair with a corner view of the massive bed. \n\n\"It's in with my shower stuff. Hang on,\" she replied, padding across the rugs and tile into the bathroom, \"Actually, c'mere, we need a quick rinse.\" God, I never got enough of watching those perfect tits move. She was like something out of an anime wet dream, or Tomb Raider, or...whatever. Something that isn't supposed to exist on this plane of reality. She and Becca disappeared into the shower together for just a moment to wash away the salt, and I about choked when they stepped out of the bathroom. Silence permeated the room for a couple of very long seconds as my jaw dropped lower and lower, until Becca and Lucy burst out laughing. \n\n\"So, you're surprised. Is that what I'm getting?\" Lucy giggled, moving closer and letting the huge, pink, double-ended silicone dildo wobble obscenely in her hand. \n\n\"How many times are you girls going to do this to me on this trip? I've haven't been left speechless so many times since....\" I said, trailing off. \n\n\"And again,\" Becca laughed, joining her sister in climbing up onto the bed. \n\n\"We wanted to give you...a little show while we were here...just for your enjoyment,\" Lucy said. \n\n\"So, why don't you change that battery pack and memory card, and set up the tripod. We'll wait,\" Becca said with a teasing grin. I was in action and halfway through with her instructions by the time she finished the sentence. My still camera also recorded HD video. I was already happy I had sprung for it as I hit the record button. As the red light blinked and I settled back in my chair, Becca and Lucy turned to one another on the bed on their knees. They immersed themselves in the role a little better than I thought they might. \n\n\"*whew!* Ready?\" Lucy said, breathless and flushed as her little sister's hands came to rest on her hips. Becca nodded as Lucy's hands moved to her hips as well. I had no idea what to expect. I couldn't possibly have in my wildest dreams expected what followed. Nervously, tentatively, they closed their eyes and their lips touched in a gentle kiss. My breathing quickened as their lips slowly parted, bubble-gum pink tongues emerging to slide softly against one another as their lips pressed more tightly together, hands now in motion, bows at their hips being pulled and released. ",
        "\"Jesus,\" I breathed to myself, too softly for either of them to hear. Lucy broke away first, her eyes locked with Becca's as she lay back on the bed, tilting her hips to allow her sister to pull away the flimsy white halves of her bikini. She was impossibly bare, her powder-smooth pussy puffy and aroused. She rolled back on her ass to a sitting position as Becca turned away, twisting onto her hands and knees and turning her head to locks eyes with me. She shot me a sultry smile as she witnessed the circus tent I'd pitched in the sarong, then gestured with her eyes to bring my attention back to where it belonged. Behind her, Lucy pulled the rest of the red blows from the bikini and slid the thin fabric from between Becca's smooth thighs. I pulled at the sarong, sweat beads appearing on my chest. My shaft bounced into view, throbbing almost painfully. Becca smiled again, suddenly looking slightly nervous. She and Lucy were about to cross a line. \n\nI watched my beautiful young wife give a soft moan, arching her silky smooth back towards the floor and stretching her arms out across the bed like a kitten, presenting her pretty little pussy and ass high in the air as Lucy hovered above. I could see her breathing coming faster along with mine as Lucy's mouth moved closer and closer from behind. As her big sister's tongue delved into her pussy, licking her luxuriously from front to back, I watched Becca's eyes pop wide, a loud and completely involuntary moan of pleasure bursting from her throat. Her hands clutched the sheets. \n\n\"Ohhh my God,\" I finally groaned out loud. My hand grasped my cock as if I expected it to pop off and fly around the room like an escaped balloon. Lucy moaned with her, softer. I about shot my load as her tongue slid over Becca's tiny rosebud and appeared between her cheeks, a long strand of my wife's slick and heavenly juices dripping from the tip. \n\n\"Jesus, Becky you are so wet,\" Lucy gasped, licking her lips before giving her little sister's pussy another long, slow lick, pushing her tongue between the dense, wet petals. Becca shuddered visibly and moaned even louder, her eyes on mine, screaming 'this is all for you'. Lucy paused a little longer over Becca's bud this time, making her squirm and giggle for a moment, before giving a third lick, longer, slower, and deeper. \n\n\"Ohhh God, Lucy!\" she exclaimed, fingernails scratching the sheets audibly as her toes curled. She pulled away slightly. \"Stop! Stop-stop, oh Jesus that's too much,\" she gasped. Lucy sat back on her heels with a little laugh as Becca rolled off her hands and knees, sitting up and facing her. \n\n\"Wow!\" Lucy giggled, flushing, \"Pretty good for my first time.\" \n\n\"Yeah!\" Becca laughed nervously, pushing her hair back, \"I guess it's my turn, then.\" \n\n\"Yeah...OK,\" Lucy said with a nervous little swallow, slowly laying back onto the soft bed and letting her hips tilt with her. Becca lowered herself down to lie on her belly as Lucy rolled her legs back further, spreading and presenting for her sister just as Becca had before. She turned her head on the bed to lock eyes with mine, an excited smile on her face as Becca's hot breath sent shivers up her spine. Becca was as attentive as Lucy had been, slathering her soft tongue up and over every hot-button Lucy had between her legs, and eliciting the same gasping moan of surprise and taboo pleasure. \n\n\"Ohmygoodness!\" Lucy squealed, her legs jerking as her sister's tongue slithered over her clit. Becca giggled, her face and chest flushed red, her own body trembling with their forbidden touches. \n\n\"Pretty good for my first time, too,\" she said breathlessly, swirling her tongue over and around Lucy's little hole before delving between her soft folds, sealing her lips over her sweet pussy. \"God, you taste nice, Lucy,\" she murmured, licking with obvious pleasure. \n\n\"Mmm-nnn!\" Lucy squealed again, her hands clutching the sheets and her legs quaking harder as she held them aloft. Becca slid her hands down Lucy's smooth thighs as she licked her once more from bottom to top. Every movement of Lucy's body said 'pleasure' as her eyes burned into mine and Becca raised her head to look at me as well, my cock towering over my lap as I sat in the chair. They glanced at one another, a silent question passing through their eyes before they moved to kneel on the bed, Lucy's hand quickly finding their toy. They turned to form the top of the T from my view as Lucy dripped lube from a tiny bottle onto the dildo and her sister dropped her shoulders to the sheets, lifting her ass high as I had seen her do so many wonderful times. But this time Lucy had my normal view, and I watched as well as heard Becca's loud moan as her big sister sank one end of the toy into her pussy. Lucy bit her lip and let a little moan of her own escape as the slick, pink toy pushed deep.  \n\n\"Wow, baby, you've got a deep pussy!\" she giggled, Becca laughing breathlessly in response. \n\n\"It's taken a lot of wonderful, wonderful practice,\" she said, looking at me. Her eyes suddenly jumped wide. \"Oo! Oh wow, but I do have an end!\" she laughed, jerking away, \"And I think you just found it!\" Lucy laughed softly, withdrawing the toy just a hair. \n\n\"Good,\" she said, \"Any deeper and I wouldn't get my half, you greedy little thing.\" \n\n\"Guuuuuilty-y-y!\" Becca laughed in a sing-song voice. Behind her, Lucy turned on her hands and knees, directing her own end to her own sweet peach. She bit her lip softly as the rounded head parted her folds and slid into her. \n\n\"Mmmm...\" she whispered, releasing her hand as she took the length, \"God, it's nice to be filled.\" \n\nMy cock was leaking so badly that my pre-cum was dripping down the side like an oozing volcano, the head pulsing visibly with my heavy heartbeat as Lucy's smooth ass kissed Becca's, then pressed firmly until the whole 14 inches was equally shared inside of them both. \n\n\"Ready, Becky-baby?\" Lucy said, looking at me as she said it. Becca nodded as they both rose to their hands and knees. At first, the older girl counted for them as they established a rhythm, pulling away and pushing back against one another in perfect time. \"One...and...two...and...one...and two...and...mmmm!\" Lucy moaned, their tushies pressed together on each numbered count. As the rhythm continued, and the sister's simultaneous moans of carnal pleasure filled our little island hut, my cock throbbed in time. Their volume grew with their pace, their butts kissing with a soft slap, my cock living vicariously through the toy. I felt as if I could actually feel their perfect, tight lips grasping my shaft and head, their slick, furnace-like heat enveloping me over and over. I could remember Lucy's pussy. I could remember it perfectly from that night years ago. Every petal of her rose, every textured corner of her pink interior, her searing heat, the heavy bounce of her tits, the ball-draining gasp of pleasure as I filled her completely. I watched her fill herself over and over against my beautiful new wife, who moaned and gasped along with her sister, the perky D-cups that crowned her chest swinging smoothly beneath her. God, such perfection! \n\nTheir moans and cries reached a crescendo that I thought might make me cum without a touch. The movement on the bed of so much beautiful flesh filled my head in a blur as Becca squealed out her orgasm only moments ahead of her sister. The two of them gripped the sheets and cried out loudly, their perfect rhythm faltering and failing as one, then the other pulled away and collapsed onto the bed. Lucy was first the roll breathlessly into a seated position, leaning on her hands and beaming as she looked at me in the chair, her legs spread just enough to let me see the puffy pink wetness between. She ran her hand up Becca's leg, then gave her ass a sharp little smack with a giggle. \n\n\"He looks ready to burst,\" Lucy cooed, as Becca raised her head from the sheets with her own smile. \n\n\"Well, it's dangerous to have all that pressure sitting around,\" Becca giggled, \"Someone could lose an eye.\" They smiled at one another for a moment, silently planning. \n\n\"Can you stand, Pete?\" Lucy said with a big smile. \n\n\"I think so,\" I laughed, shakily pushing myself to my feet as she and Becca bounced off the bed towards me, immediately dropping to their knees on the soft rug at my feet. \"Oh Jesus...\" I moaned simply, letting the sarong fall away completely as Becca dripped some lube into her palm and took my throbbing, swollen shaft in her tiny little hand. Lucy knelt beside her and scooped her hands under her tits, lifting and pressing them together in a clear invitation. \n\n\"Mmm, this isn't going to take long at all!\" Becca giggled, cupping my balls with her free hand, \"I hope you're ready for a big one, Lucy.\" \n\n\"Ooo, God yes,\" Lucy moaned, moving closer, holding her endless cleavage up for me as my canvas. Becca spread the lube over my tip and sensitive underbelly before suddenly closing her fist and stroking my length. \n\n\"Nnggg!\" I gasped as she pushed my cock directly at the canyon between Lucy's tits. My cock bulged and my little wife moaned, knowing well the feel of my impending explosion. She stroked me again, my member so sensitive that my the lights in the room swam. One more stroke of Becca's little hand, and my orgasm broke savagely over my body, my cock leaping in her fist. \n\n\"Ohhh Peter! Yes!\" Lucy gasped, my first spurt bursting forth to splash across her cleavage in a river of white. I screamed silently at the sight, unable to do anything but tremble on my toes as Lucy and Becca moaned and gasped for me. My wife held and stroked me dutifully as the ropes came one after another, directing long, heavy streams of cum over her sister's tits. Lucy moaned in surprise as Becca gave her an unexpected treat, a single spurt sailing through her lips and filling her little mouth to overflowing. The last few spurts poured onto her breasts as my knees failed me. I collapsed back into my chair with a long gasp and watched the sisters come together in a lewd, open-mouthed kiss, the thick pool of semen in Lucy's mouth exchanged between them, the overflow dripping down Becca's chin and onto her own heaving breasts. Becca pulled away momentarily and put a fingertip on Lucy's lips to stop her as she paused, closed her eyes, swallowed deeply, then moaned softly and opened her eyes again, licking her lips with a smile before moving forward to share another slow kiss with her sister. My chest heaved as I caught my breath and watched Lucy lift her heavy tits higher, Becca's mouth descending to lap at the icing that covered them. She soon filled her mouth once more with my seed and moved again to kiss Lucy. The older girl moaned softly as she gladly accepted the warm white load, licking her pink lips before sealing them and letting my cum slide smoothly down her throat. Her green eyes sparkling as she looked at me with a big smile, Becca's head again dropping to Lucy's presented cleavage to lick a the glistening mounds of perfect flesh. \n\n\"Last little bit,\" Becca giggled, letting the cum slide over her tongue as she pushed it into Lucy's mouth again in a long, wet kiss. Lucy swallowed once more, this time looking me right in the eye as she did so. The thought nearly made me pass out, all my seed now warming their taut little bellies. Lucy's cleavage glistened with sticky wetness as the sisters helped one another to their feet before leading me from my chair to the shower. The water washed away the sweat and sugar, and the girls tumbled into bed still in fluffy white towels while I somehow remembered to stop the camera and put a new battery on the charger. Tomorrow, after all, was another day. \n\nI killed the lights and climbed up into bed. The girls quickly divided to allow me to lie between them, and just as quickly draped their warm bodies over me as I wrapped an arm around each. I kissed Becca, then Lucy, and they squeezed me tightly for a moment. \n\n\"I can't possibly thank you angels enough, but I'm going to try my hardest in the coming days and nights,\" I said, squeezing them both back. They giggled softly together, and Lucy's hand ran over my chest for a moment before lying still. Becca ran her own hand over and covered her sister's their fingers intertwining gently. They both fell asleep in seconds, leaving me to listen to the night birds and insects out the open door and windows for a moment before drifting off myself. I'd never known such perfect sleep. \n\n***** \n\nAmazingly, I awoke just before sunrise. \n\nThe pale gray glow was beginning to fill the room as I gently lifted my head and glanced down at the two girls, neither of whom had moved a muscle the whole night. Both sets of pretty eyes were comfortably closed, their breathing deep, slow, and even. I blinked and looked around, suddenly finding myself eye-to-eye with a small gray gecko on the wall above me head. We eye-balled each other for a moment before he turned and scampered across the wall. \n\nIt was becoming lighter by the moment, and I felt rested and refreshed. I carefully rolled each sleeping angel onto her other side, disturbing them just slightly as I rose and padded naked across the rugs to stand in the open doorway and look out across the mirror-like lagoon. Birds flitted about in the trees above, and another gray gecko was eyeballing me from the door jamb. \n\n\"What is it with you guys this morning?\" I mumbled. I picked up my sarong, still in a heap where I had stood to paint Lucy's chest the previous night. I wrapped it around my waist as I stepped out into the sand. It was cool after the long night, but as I moseyed aimlessly down the beach the first rays of sun were streaming over the ocean. It would be hot soon. \n\nI wandered down the beach, the overnight tide having erased all trace of the previous day and washed up new treasures. I picked up some shells for Becca and rounded the end of our little peninsula before turning back around and walking slowly back. Once back in front of our hut, I pitched the sarong and dove into the lagoon, breaking the silent morning with the splash. I kicked out towards the reef until I could feel the cold, deeper water on my legs, then turned along the coral ring and swam in a wide circle back to shore. When I arrived back at the hut, I found Becca sitting on the front step in her towel, smiling serenely. I picked up my sarong from the sand and joined her. \n\n\"She's still sleeping,\" she said softly, gesturing back inside. \n\n\"Well, it's early,\" I said, wrapping an arm around her middle and sharing a kiss, \"What are you doing up?\" \n\nShe shrugged and smiled. \"I felt you get up, and then a gecko ran across my back.\" \n\n\"Yeah, they're about this morning,\" I said, looking around above my head, \"Did you sleep well?\" \n\n\"Very well,\" she said, \"Did you enjoy the show?\" \n\nI let our a long, soft whistle in response, and she giggled. \n\n\"Good. So did we. We talked for a while about whether we wanted to...you know...cross that line. But we both decided it had just been a long time coming. We've always been closer than most sisters,\" she said, venting the last of her reservations. \n\n\"It looked as natural as it comes,\" I assured her. She smiled at me. \n\n\"It was fun! And...it felt incredible. Her tongue! Jesus,\" she said with a short laugh, \"But it was mostly for you. I don't really see us doing that without you watching.\" \n\n\"Well, I'll watch anytime,\" I said. Behind us, we heard the sheets stir. I looked back to see Lucy sit up, her towel falling away absently as she stood and padded across to the door, rubbing her eyes. Her skin looked smooth and supple with the morning sun and rest, and I stood to make room for her on the stoop. \n\n\"Thanks,\" she said quietly with a soft smile, sitting down next to Becca. \n\n\"Sleep well?\" her sister asked. Lucy nodded. \n\n\"Perfect,\" she said, chilly goosebumps suddenly appearing on her chest. She crossed her arms over her bare breasts and looked up at me with a grin. \"Breakfast?\" \n\n***** \n\nThe rest of the morning passed slowly. And we were thankful for that. By noon we had snorkeled along our private section of the reef and seen electric colored fish we never thought possible. Lucy turned out to be quite the amateur marine biologist, and was the last to come in from the water, insisting on recounting all the things we'd missed over our light lunch. Afterwards, we dressed a little more sensibly and went on a short tour of the island's wooded interior with one of our hosts, who pointed out various trees, flowers, lizards, insects, and birds. Around 3 PM, Becca made a gentle comment about her feet being sore from her thongs, and we headed back to our hut. We ordered a small, early supper and I mixed us all drinks from our hut's ice chest. Becca finished hers over conversation under the mango trees out front, then excused herself to the bathroom. When she didn't return in a few minutes, I looked in the open door and found her curled up on the bed, fast asleep. I headed back outside to where Lucy sat swinging lazily in the hammock. She'd once again donned her out-of-this-world white bikini, and covered her eyes with her big black sunglasses. \n\n\"Was I right?\" she said. \n\n\"Out like a light,\" I said with a laugh, plopping down into one of the Adirondack chairs close to the hammock. \n\n\"Told you. She always got nap-happy this time of day when we were kids,\" Lucy said, \"I could never fall asleep like her. I'm jealous of her for that.\" \n\n\"Ha, yeah,\" I said, sipping my drink and stirring the ice with my finger. We were silent for several minutes, each of us just absently listening and watching the beauty around us. \n\n\"I guess I'm jealous of her for a lot of things,\" she suddenly said, softer this time. I said nothing for a moment, listening to the ice clinking in my glass. Uh-oh, I thought. \n\n\"You shouldn't be,\" I replied, instantly understanding her meaning. I looked up at Lucy and met her gaze, holding it for a moment before she looked away and gave a sweet chuckle. \n\n\"I can't help it,\" she said, \"No matter how good she is at sharing.\" \n\nI really didn't know what to say. I sipped at my drink and held her eyes when she wished. \n\n\"You know I bawled like a baby when I heard the two of you were engaged?\" she said, \"It's true. I called her. Becca. Don't suppose she told you that.\" \n\nI shook my head slowly, wishing my drink was bigger, and a lot stronger. I hadn't expected this. \n\n\"I begged her not to. I got the lecture of my life, from my little sister no less, and we had a big fight. That's why I haven't visited or anything. I couldn't. I got over it, though. Mostly,\" she continued. Another minute of awkward silence. She sniffled. \"It's my fault Mike cheated,\" she said. \n\n\"Lucy, it's nobody's fault but his,\" I began. \n\n\"No, it is,\" she said. I detected a hint of a sob, her chin trembling slightly. \"I wouldn't sleep with my own husband. Not after Paradise Valley,\" she said, referring to our moonlit encounter of three years prior. Bombshell. \"I haven't been with another man since you. I didn't want to,\" she said. Jesus Christ. My head swam. \n\n\"Lucy, you should have said something!\" I exclaimed, perhaps too forcefully. Her lip trembled again, and she suddenly jumped up from the hammock and made for the hut, covering her face with her hands. I swung out a long arm and hooked her around her middle as she passed, pulling her down into my lap in a warm hug. \n\n\"I'm sorry, Peter, I know I should have said something, or done something!\" she said, sobbing softly, \"I feel like such a stupid little girl with a crush! I can't stop!\" \n\nI caressed her cheek with my palm, turning her head to me as I lifted away her sunglasses. Her eyes were wet behind them, big tears on her cheeks. She immediately wiped them away and sniffled again. \n\n\"I've been...God, I've been so in love with you ever since I met you in Boston,\" she confessed. I'd been hoping she wouldn't say it, and it hit me like a truck. Her big, wet, bright green eyes swam with tears. Suddenly she darted forward and planted her mouth on mine, kissing me deeply and flinging her arms around my neck with a little moan. I didn't know what to say as she broke the kiss momentarily, resting her forehead on mine. Words flowed. ",
        "\"I can love you both, Lucy,\" I said. Her face broke into a huge, happy smile, a nervous laugh popping out. We kissed again, and again, and again. God, she tasted so sweet. Was that all she wanted to hear? I thought, this feels too easy. Our tongues intertwined over and under as she wrapped her arms around my shoulders. I twirled my fingers into her soft hair, then kissed down her throat to nibble lightly at her neck. She shivered and gasped softly. \n\n\"Can we start now, then?\" she said, moaning a little. I paused to look up and meet her eyes. \n\n\"Should I wake Becca?\" I offered. \n\n\"No,\" she said, shaking her head with a mischievous smile, \"Just this once, let me be selfish.\" \n\nI wondered if my wife would have something to say about this later. But alright, I thought, if she wants my full attention, she's had it since Auckland! I kissed her again, pulling her close and letting her strong legs wrap around my middle as I stood. My fingers deftly slipped the bow from behind her back as I moved. Becca's huge white towel was still spread on the sand where she'd been sitting earlier, and I knelt to lay Lucy down upon it, my hand behind her head, our lips never parting. She helped me, pulling away her top and letting her soft mounds spread evenly on her chest. My mouth moved down between them, my hands cupping each in turn to bring her nipples to my mouth as I hovered above her. \n\n\"God, don't ever change,\" she said breathlessly as she ran her hands over the bunched muscles in my shoulders. The skin of her belly was impossibly soft, her natural scent intoxicating in a way I'd learned to love, as it was the same in her younger sister. I was glad of my recent shave as I reveled in her flesh, my hands sliding down her toned sides, scooping behind the small of her back as I kissed lower. She giggled at the way I pulled the bows of her bikini with my teeth, her fingers scratching lightly at my hair. Her legs spread invitingly at the lightest touch to her inner thigh, but I proceeded to tease, kissing close to her covered sex, feeling her heat, then nibbling away down her leg. She moaned softly. \n\n\"You're so spoiling me,\" she laughed, \"I've had this dream every night for three years!\" \n\n\"Only doing what comes natural, Lucy,\" I murmured, pulling away the skimpy white triangle that hid her treasure. I ran my palm down over her swollen mound, then held my arm firm and let her push her heat against it with a whimper. So smooth! \n\n\"Wow,\" I said breathlessly, running my fingers lightly over her outer lips. \n\n\"I hope you like it. I did it for you,\" she said, blushing slightly. I looked up questioningly as I petted her more insistently. \n\n\"Mmmm....\" she moaned momentarily, \"It cost me a fortune, and I had to go like sixteen times. Was it worth it?\" \n\n\"Every damn penny if it cost a million\" I said wetly, breathing close on her pussy. She moaned again, clutching her hands over her breasts as she tilted her hips for me, begging for more attention. And attention she would receive. Becca waxed, and she was good at it, but this was something different all together. Not a hair could be found, nor a spot, nor a single stick of stubble. She was as bare as the day she was born, but oh! So much a woman! I slid my hands down the backs of her silky thighs and pushed her hips back further, suddenly delving in to follow the path of Becca from the previous night. \n\n\"Uhhhh! Peter, oh! My God!\" she moaned, shuddering from head to toe at the long lick. My mouth watered at her taste and scent, my wide tongue splitting her wet petals and sliding over her button. I licked her again, and again, feeding off of her cries of pleasure, the way she pulled at the towel, the way her fingers twisted into my hair, the way she pushed and ground her hips in tight circles against my mouth... \n\nI delved my tongue inside of her with reckless abandon, my hands holding her hips and ass as she gasped and moaned her appreciation. I licked her back, forth, over and under and in every conceivable pattern as I quickly re-learned her unique geography. \n\n\"Nnnngg! Peter, what!...how do you know all my secrets?\" she moaned, her hips twisting as I buzzed the tip of my tongue under her clit. I wanted to respond, but didn't want to stop. Her legs tensed and flexed, her hips now pushing more rhythmically as I ratcheted her orgasm higher and higher with every twirl of my tongue. \n\n\"Oh! Oh, Peter, stop! I...I can't breath!\" she squealed, twisting her body on the towel, her legs clutching my head as I licked her right over the edge. Her sweet little body tensed from head to toe as her breath left her completely, only to be regained in a huge gasp as she insistently pushed me away from her over-sensitive pussy. \n\n\"Oh God! Oh God! Oh my fucking God!\" she gasped over and over. I released her, kissing lazily down across her mound, belly, and thighs as her breasts heaved rapidly. \"Never! I've never...goddammit I can't even talk!\" she laughed. I moved up, crawling over her belly and suspending myself above her on my elbows as I grinned at her loss of control. There are a few things I do well. There were tears in her beautiful green eyes again, but thankfully a different kind. They sparkled as she looked up at me, suddenly pushing herself up from the towel to kiss me roughly. I fell back to the towel with her, pressing my bare chest against those huge, perfect tits. Her nipples were like two hard points against my pecs. She squeezed me with her knees as I lay between her legs, pressing my weight comfortably against her as she held my head in her hands. She started to squirm, trying to push an arm between us. I can take a hint. \n\nI pulled away to sit back on my heels, the sarong easily shed from the tucked folds at my waist. I was already painfully hard, and the look on Lucy's face as I sprang into view was priceless. I've never known a girl to really get turned on by the sight of a man's cock, but I guess Lucy was an exception! She was positively hyperventilating with excitement as I moved close between her legs and lay my hard, heavy shaft against her belly, my balls pressed against the heat of her smooth sex. My hands ran over her legs as her's caressed my cock against her. \n\n\"It looks so big like that,\" she moaned with a giggle, pressing me against her skin, \"God, look! You'll be all the way up in my belly when you go deep.\" Indeed, my tip reached inches above her navel. Becca had a famously deep pussy, and joked she could feel it coming up her throat in her favorite position: on her back with her ankles hooked over my shoulders. \n\n\"No way I can take it like Becky,\" she said breathlessly, as if reading my thoughts, \"That girl's pussy is bottomless, but I think I'd die!\" \n\n\"Well, we'd better move, then,\" I laughed, kissing her little painted toes as her legs kicked high by my shoulders. She pushed herself up with her hands, her eyes flashing. \n\n\"Take me from behind,\" she said, licking her lips. The sun was setting over the water behind me, and I could see a faint sheen of excited sweat on her heaving breasts. I pulled away momentarily to allow her to flip over onto her hands and knees. She tossed her dark hair with a flip of her head as she looked back at me over her shoulder. \n\n\"Is this good?\" she asked, pushing her ass back at me. \n\n\"A little higher,\" I answered, running my hands over her back and hips. My own breath was coming more ragged. Her curves were as smooth as Becca's, but deeper, the hourglass far more pronounced. Her shapely hips fit my huge, rough miner's hands more than perfectly, and I scooped her up as she pressed her silky thighs together. \"There, that's perfect,\" I said. She moaned softly as I kissed my way down her spine, my thumbs working gently at the long, strong strips of muscle and smooth skin. I sat back on my heels as she arched her back towards the sand and thrust her ass high, inviting me closer. She shivered again as my tongue danced over her tiny, round, winking rosebud, and I rubbed my thumb around her little hole in a silent question. She giggled. \n\n\"Mmmm, not tonight, Romeo,\" she giggled, her emerald greens sparkling at me over her shoulder, \"I'm not ready for you! Buuuut...you've got a backstage pass for this trip, so don't worry...\" \n\n\"Ohh man, can't wait to cash that in,\" I growled, giving her a playful swat on the rear. She yelped shrilly with a little laugh as I rubbed the spot and kissed her smooth cheeks. I rimmed her bud again, this time moving my tongue lower to delve deeply into her wet rose. She cooed softly again and pushed her hips back against my tongue. \n\n\"Ooo, more spoilage?\" she moaned, \"How much can a girl stand?\" I didn't respond immediately, letting my tongue tip wiggle over her clit as she tilted her hips further. \"God, Peter, please, just take me!\" she moaned with a little laugh, \"I can't wait any longer for this!\" \n\nI straighted up, grasping her hips and pulling her back while I took my shaft in hand. She was so wet, so open, and so ready...and SO hot! I stirred the searing head of my cock around between her petals, marveling at her furnace-like heat. \n\n\"Slowly, slowly,\" she moaned, looking back at me as my tip gently penetrated her, \"It's been a really, really long time! This Fiji baby needs a some TLC.\" \n\n\"Move back on me,\" I said softly, letting her set her own pace. I matched her movements as my cock slid smoothly into her pussy, her breathing deep and somewhat labored as she took my length and girth inside of her. \n\n\"Jesus...\" she moaned. I was starting to think she'd gone religious on me in the intervening years. She was talking like that a lot lately. \n\n\"You...feel...SO...incredible,\" she gasped, as I filled her completely, balls deep, and gently slid out of her, then in again. \"God, I can feel every single inch pushing up in me...\" she moaned, \"Fuck, that's deep!\" \n\n\"Too much?\" I asked breathlessly. \n\n\"No! No, God, no,\" she gasped, shaking her head, \"Let me take it! Nnnn-mm!\" I let her move, using my technique perfected with Becca to let her accommodate me completely. As she pushed her hips back, her soft, wet lips sliding down my shaft, I pushed up into her at the same time, building upon the rhythm she established herself. Just like her little sister, Lucy seemed to much prefer long, deep, slower strokes, rocking forward on her knees and pushing herself back again with her hands. The air was becoming cooler as a soft breeze blew in from the ocean. I groaned deeply and ran my hands up and down her sides, stopping to encircle her waist. The sensation of the cool air tickling my wet shaft between each deep, slow thrust was amazing! As Lucy controlled our pace, my hips began to gently slap her ass in an even tempo, her cheeks pulsing with each push. She moaned, gasped, whimpered and whined as I penetrated her pretty pussy over and over and over, punctuating the periodic too-deep thrust with a little puppy-yelp as my tip kissed her cervix. But she never did complain. \n\n\"Nnnnnn, God, Peter, it's like you were made to fuck me!\" Lucy gasped, glancing over her shoulder at me with a breathless smile. She, dropped from her hands to her elbows and tossed her hair over her left shoulder, gripping the towel with both hands as I held her hips tightly. I pushed deep as she pushed hard back against me, and felt her slick, puffy lips spread around my root in a velvety wave. \n\n\"Who says I wasn't?\" I gasped back, ending with a loud moan of pleasure. \n\n\"Uh! Uh! Mm! Oh, Peter, like that! Yes! Give me all of it...pull out a little more...Uh! UH! UH! Yes, Jesus, that feels so fucking good!\" she cried, as I changed my thrusts to slip out all the way to the tip on each long stroke. \n\n\"Like that, Lucy?\" I gasped, holding her hips tighter to keep us balanced. \n\n\"Yes! UH! UH! *oo!!* UH! UH! Nnnn, God, yes, I love it deep!\" she moaned, looking back at me again, eyes flashing. She paused her endless expression of uncontrollable pleasure to smiled at me between moans. \"Do you like how I feel, Peter?\" she said with a little breathless giggle, before succumbing again to a long, loud moan that sounded above the soft slap of skin on skin. I leaned over to kiss her straining back and shoulders. \n\n\"Yes,\" I gasped simply, moaning into her neck as I planted more kisses, \"You've got....Jesus, uhhh!...such a perfect little pussy...\" \n\n\"Mmmmm!\" she moaned, whimpering a little, \"Well you're gonna make this perfect little pussy cum really soon, baby!\" \n\n\"God, Lucy, I'm not gonna be far behind!\" I gasped, swatting her ass again before planting my hand back on her hip. She moaned loud at the slap, pushing back harder, but keeping the strokes long and deep as she started to lose control. \n\n\"Ooooo, Peterrrr!\" she squealed, fingers gripping the towel, \"You're getting me soooo close! God, please don't stop! Don't stop, I'm right there! Oh! Uh! UH! UH! Uhhhhh Peter I'm cumminggg!\" She shook and jerked as I held her steady, gasping along with her shrieks of pleasure as I thrust in and out of her sweet little body just as deep and long as before. My balls boiled with seed as my own orgasm began to mount quickly. Lucy screamed aloud as another Earth-shattering climax blew through her and she pushed herself back onto her hands. \n\n\"Jesus, Lucy, I'm gonna cum!\" I groaned loudly, still thrusting lustily into her. \n\n\"Don't stop!\" she suddenly gasped, tossing her hair as she looked back at me with those same sparkling greens, \"Don't stop! Fucking fill me, Peter! Cum in my pussy!\" \n\n\"Uhhhhh...FUCK!\" I growled, jamming my length into her sweet cream right to the hilt as I exploded with the force of a shotgun, every muscle in my body tensing as our burning eyes each locked on the other's. I saw her smiling face as my river of seed flowed inside of her, and I felt her pussy squeezing me rhythmically as I came in torrents. Aftershocks shuddered up my spine as I rocked back onto my heels, keeping her ass pressed tight against my hips. She rocked back with me, kneeling between my knees as I held my length deep in her pussy, my last few spasms pushing the last few drops of white into her. I ran my hands up her sides and around her belly as she began to purr with a serene smile, giggling breathlessly as I cupped her heavy tits in my hands and kissed her neck. She reached back to twirl my black hair as her other hand covered mine over her left breast. \n\n\"Ohh, Peter...\" she moaned softly, squeezing me inside of her again, \"Oh my God, baby, you're amazing...\" \n\nI just groaned softly in response and squeezed her lightly in my arms, slowly twisting each nipple in my fingers. I felt her body gently relax as her breathing slowed, and she turned in my arms just enough to kiss me. She giggled for no reason but happiness as our lips and tongues touched lightly, and finally she pulled away, rocking forward on her knees and rolling her hip to the towel on the sand. She lay propped on a hand, her legs together as she reached behind to touch her pussy. She gave a tinkling laugh. \n\n\"My goodness, Superman, how do you do that twice in two days?\" she giggled, feeling the slippery drip between her soft lips that belied the river of cum I'd pumped deep inside of her. I shrugged and laughed. \n\n\"I practice?\" I suggested with a chuckle, laying down beside her on the towel, my length, sticky with our mixed juices, slowly softening against my leg. \n\n\"God, that's hot,\" she giggled softly, slowly pushing a finger into her pink before bringing it dripping to her mouth. She gave a soft moan. \"Jesus, Pete, you filled me right up!\" \n\n\"Wow you're naughty,\" I laughed. She rolled her eyes coyly and shrugged. \n\n\"What can I say, we taste good together,\" she said with a little smile. \n\n***** \n\nWe rinsed together in the shower as Becca slumbered on, and I passed another night in deep, dreamless sleep. I awoke the next morning alone and naked. I blinked several times and rubbed my eyes, then peered around the silent room. The sun told me it wasn't past seven in the morning. \n\n\"Ah, hello again,\" I murmured to the gecko, once again eye-to-eye with me on the wall. I sat up. Birds were singing and insects softly buzzing, and through the open door and windows I could hear soft conversation. I swung my legs over the side of the bed and tapped my toes on the tile, stretching for a moment before slowly standing. As I found my sarong and wrapped it about my waist, I saw a shadow approaching the doorway. A moment later, Becca appeared, smiling as she saw me. \n\n\"Morning, babe,\" she said sweetly, stepping indoors to receive a kiss. \n\n\"Morning yourself, cutie,\" I said, giving her a squeeze and running a hand down her side, \"Sleep well?\" \n\n\"Yes!\" she laughed, \"Although my sister tells me I missed a good show.\" \n\n\"Ha! Yeah, I guess you did. She didn't seem to think you'd mind,\" I said, following her outside to sit in the chairs under the shade of the trees. I looked around us. \"Where'd she go? I thought I heard you two talking a moment ago.\" \n\n\"Oh, I sent her to see about renting one of those little sailboats we saw the other day,\" she said. The resort had a small number of light, centerboard boats to rent, and although Becca and I sailed often around Auckland and Coromandel, Lucy had never even been in one. I quietly suspected she'd been \"banished\" for a short time, and prepared myself for whatever my young wife had to say. She was silent for a moment as she retrieved two glasses of pineapple juice for us, then sat comfortably on my lap in the chair. It didn't take long. \n\n\"So, she told you?\" she said. My first male instinct was to play dumb. \n\n\"Told me what?\" I said. Becca gave a thin smile, knowing the reaction well. \n\n\"That she's in love with you,\" Becca clarified softly. \n\n\"Oh. Yeah,\" I said stupidly, peering into my glass a moment before taking a sip in the few seconds of uncomfortable silence. \n\n\"What did you tell her?\" she asked. I looked at her. She was still softly smiling. Was it a trap? I thought. Why bait me? She obviously knows what I said. \n\n\"I told her I could love you both,\" I answered. She took a deep, slow breath, taking in what that might mean, I supposed. \n\n\"Can you?\" she finally said. I looked up into her soft, yellowy-hazel eyes, but said nothing for a moment. \"She says you did a fine job last night...I'm just wondering...I mean, I know what kind of woman my sister is. She's amazing. She's perfect! I just want to hear from you...that you can really love us both. As sisters. Equally.\" She was asking if I was going to leave her for Lucy. I locked eyes with her again. \n\n\"Yes. I can,\" I said confidently. She looked into my eyes, and another familiar smile spread across her face. \n\n\"OK. I believe you,\" she said simply, taking a sip of her juice, \"But there is still one problem.\" \n\n\"What's that?\" I asked. \n\n\"This is the second day of my honeymoon, and I still haven't gotten filled,\" she said wantonly, looking at me with suddenly sultry eyes. \n\n\"Mmm, well that I can help you with,\" I said with a big smile, running a hand up her belly to cup her breast in her rose-red bikini. She playfully swatted my hand away. \n\n\"Oh, not yet, buddy,\" she giggled, \"Lucy may have wanted to be selfish with you last night, but I want her to watch you fuck me! You gotta wait 'til she gets back. Then...you get my pussy.\" \n\nWatching my beautiful young nymph of a wife sitting on my lap, gently teasing my cock with her fingertips for twenty minutes...it was pure torture. It seemed more like twenty years before Lucy finally came padding through the sand in her sarong and white swimsuit. \n\n\"Uh! Finally!\" Becca laughed, pushing herself off my lap and taking my hand as I stood from the chair. Lucy laughed as my huge hard-on pushed out the tuck of my sarong when I got up, letting it fall to the sand. \n\n\"Wow! OK, what's going on?\" she giggled, swishing her hips as she came closer to wrap a hand around my shaft. I groaned, and Becca playfully swatted her sister's hand away. ",
        "\"Mm-mm! You already had your fun last night. My turn for a ride,\" Becca giggled. \n\n\"Damn,\" Lucy said, making a pouty lip and crossing her arms over her tits. \n\n\"So....pull up a chair,\" Becca said with a naughty drip to her voice, pulling me towards the open door of the cabin. \n\n\"Oooo, lucky me,\" she giggled, following close behind, \"I can live vicariously for a little bit, I think...\" \n\nBecca was a bit of a take-charge girl in bed. She loved to be on top, she loved to initiate the action, and she loved to orchestra her own pleasure. \n\n\"Over there, Lucy. I think you'll have the best view,\" she said, indicating the chair I'd watched the two of them from before. Lucy laughed. \n\n\"So, what's the show this morning? Am I gonna get to see anything especially naughty?\" she said, pulling the tucked edge of her sarong out and letting it crumple to the floor as she turned and lowered herself to the padded chair, crossing her legs like a lady. \n\n\"Hmmm,\" Becca purred, easing herself backwards up onto the bed, sitting and leading me with her hands on my cock, \"What would you like to see? \n\n\"Oo!\" Lucy giggled, \"Dirty on demand? Love it. Let's see...I think I wanna see you...get just what he gave me last night.\" \n\n\"You mean pound my pretty little pussy 'til my eyes water?\" Becca murmured, looking at me as she said it. My cock lurched. God, I love my wife, I thought. \n\n\"Uh!\" Lucy moaned, squeezing her crossed legs together as she remembered. She pushed a hand between them. \"And then some! I wanna see you take it deep, girl. Like you always brag about.\" \n\n\"Ooo, baby, I wouldn't have it any other way,\" she answered, still looking at me. \"C'mere, big boy,\" she purred. I stood close by the side of the bed, my hands on my hips, as I watched Becca rolled and pull her legs up onto the bed, turning and crawling forward until she was facing me on all fours. Her tongue slithered from between her teeth as she tickled the tip of my towering erection, making me jump and moan. To my left, I could see Lucy out of the corner of my eye as she tilted her hips to slide her bikini bottoms down her smooth legs. The sisters and I let out a common moan of pleasure simultaneously as Becca took me into her mouth. Lucy slid her fingers into her pussy, cupping one bikini-covered breast with her free hand. She moaned softly as she watched Becca's lips wrap around my pole, easily accepting my length deep into her throat in a highly practiced manner. \n\n\"Becky, holy shit...\" Lucy breathed, marveling as her baby sister's lips touched my balls and her nose touched my belly. My little wife moaned as she slowly drew her lips and tongue back up my long shaft, slurping breathlessly off my tip. She giggled and looked up at me with a smile. \n\n\"Show her how I can take it like this,\" she said, licking her lips. I nodded with a smile as she turned her attention back to my glistening, towering manhood, wrapping her lips around my tip with a hungry groan. I pumped my hips gently forward, letting her accept me into her throat again. She moaned as her lips touched my balls once more, a deep, guttural vibration I could feel all up and down my spine. \n\n\"Wow,\" Lucy breathed. She watched, her fingers dancing slowly over her pussy as I ran my hands lightly over her little sister's head, back, and shoulders, my cock pumping slowly in and out of her mouth. Becca moaned loud and often as I stroked deep into her throat, her breasts swinging gently. She loved the act and the position, saying that nothing but anal made her feel more like a dirty little girl. And God, I never tired of her amazing oral skills! \n\nShe couldn't take it fast and hard, of course, but that was a good thing in my mind. I watched my spit-slicked shaft sliding in and out of her mouth, and listened to her moans of pleasure. By the time she decided she was done, her pussy would be wetter than if I had been going down on her the whole time. Her lips slid off my tip with another soft slurp, and she pushed herself back onto her heels, kneeling on the bed as she looked up at me. \n\n\"God, I'm so fucking wet,\" she giggled, spreading her knees and touching her puffy little pussy, \"I know I usually want to play more, but right now I really just want you inside of me!\" \n\n\"Mmm,\" I growled playfully, pushing her back on the bed and grabbing her ankles. She squealed and laughed as I pulled her across the bed and climbed on with her. She threw her legs high as I pulled her red bikini bottoms up and off her kicking feet. Just as I had with Lucy, I lay my hot slab of dick down between Becca's baby-soft thighs, feeling it hot against her swollen mound and belly. \n\n\"Oh, God, Peter,\" she moaned, taking hold of me with both hands and rubbing her belly with the tip, \"I can't wait to feel you up in there!\" \n\n\"Then why should we?\" I replied. Lucy moaned softly beside us. Becca lay breathless on her back, and moved her hands to touch my thighs as I knelt between her legs and pushed her knees back to her chest. \n\n\"Oh, Peter, fill me, fill me!\" Becca mewled, moaning softly as I stirred my leaking tip around between her puffy little lips before gently beginning to feed my length into her. \"Ohhhhh God!\" she cried, her hands grasping my hips as I raised myself over her. I let her ankles hook over my shoulders as I pushed onto my hands and feet, my muscles bunching mightily as I easily held Becca's famously favorite position. Her hips tilted and her chest heaved, her eyes popping nearly out of her head as I sunk every last millimeter of cock into her sweet, creamy pussy. \n\n\"Jesus fucking Christ!\" she cursed, tensing as I finally found the bottom of her pussy. \"Gawwwd that's deep!\" she groaned, gasping as it pushed hard up into her belly. She wasn't the only one to gasp, as our small audience witnessed her baby sister's impossible feat. \n\n\"Gosh, Becky, your little pussy is endless!\" she moaned, her fingers flying over her button as she watched me begin to pump every last inch of my dick in and out of Becca's vagina. \n\n\"Oh, no she's not!\" Becca laughed breathlessly, wincing as I pushed my weight against her upturned hips. I knew enough by then that her yelps and grimaces were not indications to stop what I was doing. I could still remember the first time we had tried this position. \"I can't go all the way,\" I'd protested, \"I'll hurt you!\" \"Oh, God, hurt me,\" she'd moaned, pulling insistently at my hips, \"I want you to!\" \n\n\"UH! UH! Fuck! Me!\" Becca squealed, punctuated each of my tip-to-balls thrusts with a gasp, moan, curse, or groan of encouragement. \"God, fucking, dammit that's a lot of fucking cock in me!\" she cried. During sex, Becca was often so enthralled with watching my shaft pierce her over and over that our eyes barely met. I admit I'm often guilty of the same. The sight of her smooth, soft, puffy lips spreading like water around my girth is captivating to say the very least! \n\nLucy and I moaned along with Becca, each of us experiencing our own version of blissful pleasure. As my shaft plunged deep into my wife's tight little pussy, I marveled at the fact that less than twelve hours previously I had been buried in her sister's. The two were the same and yet different in wonderful ways, neither better than the other, and each enough to drive a man out of his mind. Lucy's pussy was a furnace of wet heat, her thick, puffy peach producing an unforgettable visual while her unique internal texture made for an all-too-quick ball-draining experience. Becca's pussy was a bottomless sheath, enveloping me to the very root, and so tight I was forced to open her anew with every stroke. Both had welcomed me so wonderfully, and I was all too happy to repay with every ounce of pleasure I could coax from their beautiful bodies. \n\n\"Deeper! Deeper!\" Becca squealed, gasping for the impossible as I grunted and growled with every balls-deep stroke into her sweet pussy. I could feel my tip mashing against her cervix with each savage thrust, just as my hips slapped against her upturned thighs, and still she egged me on. \"God, don't stop!\" she cried, \"Don't stop, you're gonna make me cum, Peter! I'm gonna cum so fucking hard! Uh! Uh! UH! UH! UHH-nn-Gaaawwwdd!\" The breath left her lungs as she stared down at my gleaming piston pumping in and out of her, her mouth agape and eyes watering. I could hear Lucy's own crescendo, her legs shaking and squeezing as her fingers coaxed another orgasm from her body. I pressed my hips down as hard as I could with each plunge, and I could feel Becca's slick lips spreading wider against my root. My thick, blunt tip bumped hard against that firm nub deep inside of her, the final sensation that told me there was nowhere left to go. I felt my orgasm mounting as Becca finally gasped for air, her chest heaving and her toes curling into claws as another orgasm began to build rapidly. \n\n\"Fucking shit, you're incredible!\" she cried, always a foul-mouthed, pretty thing when the sex was really good. Still she didn't take her eyes off the penetration, both the sisters enthralled with watching so much glistening manhood sliding roughly up inside of the little girl. \"God, it's so fucking hot with you watching him do this to me, Lucy!\" she laughed breathlessly, before another wall-shaking moan of pleasure took over her vocals. Lucy just smiled back, sweat shining on her cleavage as she rubbed her wet pussy in tiny circles, her other hand now busy behind as she pushed the tip of a spit-slicked finger into her bottom. \n\nThat was about it. It often only took some tiny change in the rhythm to push me over the edge, and seeing Lucy touching her little hole was the last straw. \n\n\"Goddammit, Becca, I'm gonna fucking fill you up!\" I shouted over her moans. Her eyes flew up to mine, and her hand flew down to her pussy, a huge smile springing to her face through her grimace of pleasure. \n\n\"Yes!\" she cried, encircling my slippery, sliding shaft with her fingers, \"Cum my tight little pussy! Fill me up, just like you filled Lucy!\" She squeezed rhythmically with her fingers, a practiced motion that somehow intensified my orgasm. Plus, she loved to feel the great, long, mighty pumps, the root of my cock flexing like a strong arm with each thick rope of semen that exploded inside of her. \n\n\"Uhhhhhh FUH-HUCK!\" I gasped, my legs failing to keep me up as my orgasm finally arrived. My rhythm faltered, and Becca yelped sharply as I slapped my hips hard against her upturned ass. My jets came in quick succession, rope after rope pumped into my wife's clenching vagina as I shouted at the ceiling. \n\n\"Uh! Uh! Uh God!\" I gasped, the last aftershocks racking my arms and legs. Utterly spent, I let my weight rest on my beautiful wife, our sweaty bodies pressing together as we kissed breathlessly. I felt myself slowly softening inside of her, Becca's pussy still clenching periodically. I rolled to the side and slipped out. My cock softened slowly in the cooler air, the wet shaft lolling against my belly as Becca gingerly lowered her heels to the bed and covered her sopping pussy with one hand, the other rubbing her lower belly. \n\n\"OhmyGod,\" she breathed, her chest heaving. \n\n\"OH my GOD,\" Lucy seconded with a little laugh, rising shakily from the chair to join us in lying together on the bed. \n\n\"Are you alright?\" I laughed, watching Becca rubbing her abdomen. She nodded, turning her head on the bed to look at me with a soft, serene smile. \n\n\"Oh, yes, I am definitely alright,\" she giggled, \"I'm just gonna be a little sore. This little pussy's gonna need some rest. And some TLC!\" \n\n\"Guys, I've never seen anything so hot in my life,\" Lucy laughed. I made a faltering little bow as I rose to get us a glass of juice to share. \"And Becca, what the fuck is UP with that pussy? How do you not, like, die when he does that do you?\" she laughed. Becca grinned and shrugged. \n\n\"Hey, I guess I just got those genes. You got the deep cheeks, I got the deep vagina!\" she giggled. She sat up on her hands to accept a swallow or two of pineapple juice, then passed the glass to Lucy, then back to me before I collapsed in Lucy's chair. We were silent for a moment the wind and waves the only sounds besides our deep breathing. Lucy finally broke the spell. \n\n\"Breakfast?\" \n\n***** \n\nThe girls went for a quick skinny-dip in the lagoon while I phoned in our order. We chatted as we ate, and I Lucy reported on the little sailboats the resort had for rent. She also confessed she was somewhat afraid of small craft. \n\n\"Peter is an expert sailor, Lucy,\" Becca said encouragingly, \"You're safer with him on the water than on land!\" \n\n\"I'm not sure how to take that,\" I laughed. Lucy was curious and excited, and it didn't take much persuasion. They dressed themselves in sarongs and their bathing suits, then spread sunscreen on one another (which I enjoyed witnessing) before we headed to the main building. I rented a small sailing dinghy and managed to convince Curtis of my expertise, enough so that he lent me a nautical chart of the surrounding islands and reefs, complete with bathymetry. \n\n\"And here, sir, you may find some sea caves. Very spectacular. I highly recommend. If you and your, ah, girls...are strong swimmers, you may dive under, and you will be in a kind of, ahhh....chimney. You will see!\" Curtis said in his deep accent, miming the location. \"And here, and here...are good beaches. Be sure to take plenty of fresh water, there will not be much to drink but coconut milk on these islands,\" he continued. I thanked him, and we loaded up the little boat with a picnic lunch and supplies before heading off into the blinding tropical midday sun. The boat was small enough for me to single-hand the tiller and sheets, so although I had taught Becca to be an excellent little crew girl, I left the two of them free to enjoy the wind and surf. The breeze proved strong and consistent, with only a few surprise cat's-paws to wash over the little boat. Lucy's shrieks and giggles were musical when I turned us into the wind and heeled the boat over far enough to dip her in the water before she scrambled laughing to the windward side. \n\nWe stopped for a light lunch in the shade of some coconut palms on one of the tiny, sandy isles that dotted my chart. Afterwards, as we set off towards the sea caves Curtis had marked, the wind had calmed enough that I felt comfortable letting the girls take the tiller. I set about capturing the moments on my camera as Lucy tried her hand at sailing, then took the helm again to skipper us in close to shore. It was mid-afternoon by the time we reached the caves, beaching the boat in a short, sandy cove and hauling it up into the trees, away from the waves that might draw it out to see and leave us stranded. We were on a larger island, near some short cliffs that rimmed a rocky promontory. \n\n\"So Curtis said we can get into the caves from that point, there,\" I said, pointing across the calm lagoon to where the cliffs were the highest, \"Up for a swim, girls?\" \n\n\"Around here, always,\" Becca replied. We all stripped naked before diving into the lagoon and stroking lazily to the cave mouth. A short dive through dark water brought us within, and I soon wished my camera had a waterproof case as I watched the two dripping, nude goddesses look about in amazement at the wondrous alcoves and cathedral-like ceiling of the room. Sunlight wafted down from natural skylights. Lucy was the first to mention it was getting cooler. \n\n\"Yeah, and we're kinda losing light in here,\" Becca seconded, \"Peter, should we be heading out?\" I was frowning at the bit of sky I could see through the hole in the ceiling. \n\n\"Yes,\" I agreed simply, \"I think we may have a bit of unexpected weather coming our way.\" \n\nIt turned out I was right. We made it back to the boat, and then back to our island only moments before a wicked, gusty wind blew up that would have made crossing between the isles a bit of a harrowing experience for the girls. Although it was still sunny and warm on our island, dark, low thunderheads could be seen on the ocean's horizon. Curtis came to greet us as several young Fijian teens swarmed the little boat, hoisting it into the air once we had disembarked and carrying it up the beach. \n\n\"Yes, you are correct,\" Curtis said in his thick island accent, after I inquired about the weather, \"We received a report from Suva only an hour ago. This evening will be dry, but starting late tonight we can expect heavy rain.\" \n\nBack at our hut, we ordered some food and had a leisurely supper on the sand around four in the afternoon. Daylight was fading the time we finished, and the slowly approaching storm had produced a slightly eerie calm to the air. Becca disappeared for a spell, and returned clutching three tall glasses which she set carefully on the table before handing one to each of us. \n\n\"With the storm coming, I thought these were appropriate,\" she said, always the expert bartender. Her signature \"dark n' stormy\" featured an extra twist of lime on top of the spicy ginger beer and dark rum. We sipped our drinks contentedly as I watched the colored lights begin to paint the western horizon as well as my girls' smooth skin. The lack of breeze had made the evening balmy, and both Becca and her sister were back in their oh-so-pretty red and white bathing suits, respectively. Having finished her drink, Becca pre-emptively lit several tiki-torches around our awning, the one bit of kitsch we'd found at the hut. She also returned with my guitar. I laughed as she handed it to me. \n\n\"You know, I had no idea you played until I saw that in our luggage,\" Lucy said, \"Are you any good?\" \n\nI smiled as I gently plucked at the strings, re-tuning the instrument after it's trip through heat and humidity. \"I can play a few songs,\" I said modestly. \n\n\"He's very good,\" Becca said for me, rolling her eyes. I leaned back in the Adirondack, satisfied with the sound from the strings, and strummed gently as I thought of something to play. \n\n\"Becca tells me you can sing, Lucy,\" I said with a smile, knowing the reaction I'd get. She immediately blushed and glared at Becca. \n\n\"Dammit Becky!\" she laughed. \n\n\"But you can! That's at least a set of genes we both got from Mum and Dad,\" she replied. \n\n\"You like Jack Johnson?\" I asked Lucy. She hesitated for a moment before answering, then nodded. \n\n\"Yeah,\" she said, shrugging, \"I guess so.\" \n\n\"She's got every freaking album,\" Becca muttered. Lucy blushed again. \n\n\"I'm not much of a songwriter myself, but I know his stuff pretty well,\" I said, strumming a few chords as I silently picked a song, \"If I played one, would the two of you sing it for me?\" The sisters looked at one another for a moment, and Lucy shrugged with a little grin. I could tell she was somewhat excited to be given the opportunity to show off. Becca had told me earlier that she had an incredible singing voice. After hearing some of the notes she'd hit on the beach the previous night, I was inclined to believe it. \n\n\"Sure, so long as I'm not singing alone,\" she said. \n\n\"Oh shush, you're better than me by miles,\" Becca laughed, \"I'll start, OK? Then you can take over when you want.\" Lucy shrugged, still a little pink, and nodded with a nervous little smile. \n\n\"You two know this one?\" I said, playing the soft, falling, stepping notes at the beginning of \"All At Once\". They both nodded. I played the introduction, and Becca's soft voice picked up the lyrics quickly. She was far less bashful about singing for me, having done it plenty in the past. \n\n\"All at once...the world can overwhelm me...there's almost nothing that you could tell me...that could ease my mind...\" she sang. Lucy started to move gently with the music, smiling as her sister hummed and giggled through a few lines she couldn't remember. I was immediately dumbfounded when Lucy took over from Becca at the second verse, her voice perfect and melodious. She added soft inflections to the words as she sang, alternately smiling at me and closing her eyes as she moved in her chair. God, even her singing was sexy! ",
        "\"I wanna take the preconceived out from underneath your feet, we could...shake it off, and instead we'll plant some seeds...we'll watch 'em as they grow, and with each new beat, from your heart the roots grow deeper, the branches will they reach for what?...nobody really knows...\" she sang. Lucy knew every word, and I smiled at Becca, arching my eyebrows when Lucy wasn't looking. 'Wow!', I mouthed. \n\n\"...sometimes if feels like the heart ain't no place to be singin' from at all...\" Lucy sang, finishing the song by herself. She blushed mightily and stood to curtsy gracefully as Becca and I applauded her, sitting back down in her chair with a little \"thanks\" and nervous smile. Try as we might, Becca and I were unable to coax her into sing any more, so I treated them to several of my lyric-less acoustic creations by firelight before setting the guitar aside for the night. \n\n\"Isn't she amazing?\" Becca said when I was done, making Lucy blush for the umpteenth time that evening. \n\n\"Becca, quit!\" she giggled, brushing her hair back with a hand. \n\n\"No, Lucy, she's right,\" I encouraged, \"You've got a gift! Both of you do.\" \n\n\"Well...thanks,\" she said, smiling as she looked at the sand. I looked at Becca, who rolled her eyes. I, too, could tell that Lucy was beaming on the inside. Becca got up and passed me on her way to the bathroom inside, bending down to whisper in my ear. \n\n\"She loves to look good in front of you,\" she said with a little smile, as if I needed more of a reason to shower her with well-deserved praise. \n\n\"What did she say?\" Lucy asked, after her sister had left. I just grinned at the high school-like intrigue. \n\n\"Oh, nothing,\" I replied with a little grin, shaking my head. She narrowed her eyes suspiciously, then got up from her chair and boldly slid into my lap. God, her ass was so warm and smooth... \n\n\"Was I better than her? C'mon, tell me,\" she giggled softly. I suddenly understood the reason for Becca's whisper, and smiled at Lucy. \n\n\"Definitely,\" I replied, looking over my shoulder with mock caution before I said it. Lucy blushed again. \n\n\"Thanks,\" she said. I wrapped an arm around her in my lap, and could feel her heart pumping as my big hand settled on her skin close under her breast. \"You know,\" she continued, adding a sexy lilt to her voice, \"It's not the only thing I can do better than her.\" \n\n\"Hey now,\" I laughed, \"I'm not choosing any favorites!\" \n\n\"It's not her fault,\" she giggled, \"I'm the lucky sister who got these...\" She cupped her huge, soft breasts in her hands as she said it, lifting them in her tiny little blinding-white top. My cock began to harden in my sarong in a series of quick jerks, and Lucy purred softly as she felt the hot bar rise against her ass. \"And I take it you know what I might do with them?\" she giggled, reaching between her thighs to stroke my length through the thin material. \n\n\"I can't leave you alone with him for even a second, can I?\" Becca laughed, bouncing down off the step and striking an akimbo pose in front of us. Lucy gave her a naughty grin. \n\n\"Well, now that our musical interlude is over, I was just suggesting some other activities for the evening,\" she said. \n\n\"Oh? Such as?\" Becca asked, sliding her own pretty little ass onto the arm of my chair. Lucy looked back at me as she responded. \n\n\"I thought I'd see if Peter would like to do a little more painting...\" she said, squeezing a breast to illustrate her point for Becca. Her little sister gave an interested little moan. \n\n\"Oooo, I think I'd enjoy watching that,\" she giggled, rising from the arm of my chair as Lucy slipped off my lap and stood up in front of me, \"I'll go grab the lube!\" \n\n\"This can be the special thing I can do for you,\" she giggled, sliding her hands up my thighs as she knelt in the sand between my knees. Her fingers began to tease out the tucked edge of the sarong as she continued. \"Becca's got beautiful tits, but I know she's not big enough to do this correctly!\" \n\n\"You're right,\" I said softly, making her giggle a bit. She was getting really excited, her skin slightly flushed as she eyes shone at me in the light from the torches around us. After pulling away the sarong and letting my hard length spring free, her hands roamed slowly over my abs and legs, her eyes locked on mine in an electrifying manner. Becca returned quickly with a little bottle of Astroglide and handed it to Lucy. She was also carrying my camera and tripod, and took only a moment to set it up for an unparalleled view. \n\n\"Here you go, babe,\" she said, \"Get him all ready while I loose the girls!\" \n\nLucy giggled at her as Becca stood behind her to begin pulling at the little knots in her top. God, I loved those little knots! A wonderful obstacle to hide such splendor on the both of them. Lucy's thin, strong little hands ran up my thigh to cup my balls as she thumbed open the top of the bottle with a little *click*. She giggled with excitement as she hefted my sack in her warm little palm. \n\n\"You know, with the amount of cum you filled the two of us with in the last twenty-four hours, I thought you must have a hollow leg to keep it all in,\" she said, \"But I guess I was so enthralled with the tree, I never checked out the size of the nuts!\" Becca laughed out loud at her sister as Lucy continued to gently palm my balls. \n\n\"Oh, you'll get your treat, girl,\" she laughed, finishing the knot behind Lucy's back and moving to the one behind her neck, \"It seems like if he's got longer than eight hours to recover, he'll fill you up all over again!\" I shrugged with a smile. The size of my load had always been a point of pride for me. \n\n\"Glad you ladies enjoy, 'cause I have no choice in the matter,\" I laughed. \n\n\"Oh, I'll enjoy,\" Lucy purred, letting out a tinkling little laugh at my gasp when her huge, beautiful breasts were finally revealed. Becca pulled away the top and let it fall to the sand, then leaned down to cup Lucy's tits as her big sister dripped the cool, slick lube onto the tip of my gently throbbing member. \n\n\"Just one rule, Peter,\" Lucy continued, turning the drip to the endless cleavage that Becca held for her, \"Don't tell me when you're going to shoot!\" \n\n\"Ah, are you sure?\" I laughed, \"I don't want to put out an eye.\" \n\n\"I'll be careful,\" Lucy giggled, letting Becca slide her tits against one another until they shone slick with lube, \"I just want it to be a surprise when you start.\" I just nodded, breathless already. Lucy's hands took over from her sister's, cupping her juggs as she scooted forward in the sand to meet them with my glistening tower. God, her tits were perfect! Her hard little nipples crowned each mountain of smooth flesh, so big and beautiful that even my nine inches were nearly lost within them as the warm skin wrapped around my shaft. \n\n\"Mmm, that's hot...\" Lucy purred, watching my face as she held her tits easily around my cock and began to slowly slide up and down. I groaned deeply and let my head fall back against the chair. The girls both laughed. \n\n\"Wow, Becky, I think he likes it!\" Lucy cooed, squeezing her tits tighter around me. \n\n\"Ohh, Jesus, your tits feel...amazing...\" I groaned. \n\n\"I know they do,\" Lucy giggled. She gently moved her tits up and down, rocking back and forth with the muscles in her abs and back as she stroked my entire length. \n\n\"Oh, God, do it slow like that,\" Becca purred, having knelt at Lucy's shoulder to watch the action, \"Make him wait for it!\" \n\n\"Ooo, Becky, you bad girl!\" Lucy laughed, never pausing, \"You want me to torture him a little?\" I just watched as my cock pulled back between Lucy's tits, her soft, perfect cleavage slipping closed over the sensitive head. I groaned again, flexing my shaft. Becca leaned close to Lucy's ear and whispered something inaudible. Lucy grinned mischievously in response. \n\n\"And just what was that?\" I asked between groans. Becca shrugged and rolled her eyes innocently. \n\n\"Just giving away one of your secrets,\" she said. Uh-oh, I thought. Which one? \n\n\"Mmmm...\" Lucy moaned softly, smiling at me as she continued to slide her tits slowly up and down my long shaft. God, what a feeling! I could feel her heart beating hard through the sensitive underside of my cock, her skin warm and impossibly soft. In her t-shirts, blouses, bras and bathing suits, her huge, heavy tits hung firm despite their size. But wrapped around my shaft, they took on an entirely different character. Pressed snugly around me, they were as smooth and soft as pillows, the supple flesh filling every contour of my manhood and sliding over the ultra-sensitive ridge around my head in a continuous waterfall of pleasure. \n\n\"Ohhh, God!\" I groaned loudly, my hands squeezing the arm of the chair as I flexed my cock mightily. Watching her face was almost as hot as watching her tits sliding around my dick. She smiled at me with a mix of happiness, mischief, and out-right adoration, her green eyes still as striking as the first time we met. I focused often on the bodies of the perfect young women before me, but the current show placed the lovely symmetry of their faces on prominent display. \n\n\"Jesus, you two are beautiful,\" I suddenly said. They smiled and looked at one another. \n\n\"He's right, you are,\" Lucy said to Becca with a laugh, never ceasing her movement over my cock. \n\n\"Or was he talking to them?\" Becca giggled, gesturing toward's Lucy's juggs with her chin before looking at me. I shrugged, breathless. \n\n\"Can it be both?\" I laughed with them, following it with a long, loud moan. \n\n\"Ooo, those must be really good, Lucy,\" Becca purred, \"This isn't going to take long at all!\" \n\n\"Mmm, better slow it down, then,\" Lucy giggled, reducing her movement by half and running the tip of her little pink tongue over her lip, \"Don't want him shooting too soon...I'm still enjoying this!\" \n\n\"Oh, fine by me!\" I gasped. \n\n\"You feel it yet?\" Becca whispered to Lucy, so that I could hear. Lucy nodded slowly, smiling as she watched me, slowly sliding her slippery tits up and down, up and down... \n\n\"Uh-huh, just like you said. So I start going slower, right?\" she said. Becca nodded. \n\n\"Yeah...just slow it down, and hold him there. Then when he shoots...God, he'll fucking cover you!\" she giggled. Now I understood the whisper from before. \n\n\"Oh, God you're bad,\" I growled, shaking my head at them as they laughed. My cock felt like it had grown ten sizes, the head huge and swollen, the shaft tingling and throbbing. I watched the head split her cleavage again as it slid up towards her chin, then sink back between her globes as she stroked them up my shaft. God help me! I thought. I felt as though I might break off the arm of the chair as I strained my legs, pushing my feet into the sand as the girls' naughty giggles and little moans of encouragement filled my ears along with the soft slurp of the lube between Lucy's juggs. \n\n\"I think he's gonna cum soon, Becky,\" Lucy purred, \"In fact I'm sure of it!\" \n\n\"Slow down even more!\" Becca said wickedly, moving to encircle her sister's middle with her arms and rest her chin on one shoulder, closer to the action. \n\n\"Nnngg!\" I groaned, as Lucy did as instructed. Her tits now climbed up and down my shaft in a maddeningly slow, smooth wave, the torchlight glistening from her cleavage and dancing in her eyes. \n\n\"Slower...\" Becca giggled, reaching around to cover her sister's hand with her own, both sets of palms cupping and squeezing Lucy's tits around my rapidly pulsing cock. My balls boiled with what felt like a load of magma rather than semen. \n\n\"He's almost there, isn't he?\" Lucy cooed, her face flushed with excitement. \n\n\"Oh, God, he is,\" Becca growled softly, \"He is gonna cum so much, too.\" \n\n\"Oh, fuck yes,\" Lucy moaned, \"Right between my tits! God, I can't wait to feel it all over me...\" My mouth hung open in a silent bellow as I squirmed in the chair, every muscle in my body on full alert. Suddenly I felt it start, my balls pulling up tight against the base of my cock as the long, hard, involuntary pulses began pushing a massive load up my shaft. \n\n\"Oh, here it comes!\" Becca moaned. \n\n\"Uh! Yes! God, yes, cum, baby, cum!\" Lucy gasped, as the first, huge, searing-hot gush of semen burst from my tip while I was still buried deep in her cleavage. \n\n\"Ohhhhhhh ffffuuuucccckkkk!\" I growled, holding on to the chair as if I might launch into orbit. Even that first spurt came with such force and volume that Lucy's cleavage was instantly flooded with white, my thick seed forced up into the valley between her mounds like a volcanic eruption. It filled the space and spilled over the smoothly arcing hills of flesh, running onto Lucy and Becca's joined hands as they moaned with me. Lucy still moved her tits slowly on my spasming shaft, the next two equally-huge jets splashing against her neck and chin to run down over her mountainous chest. \n\n\"Oh my God!\" Becca gasped, then laughed, having just taken a surprise shot in the face as I squirmed with pleasure in the chair. Cum splashed across her cheek and lips in a long curve of pure white as her pink tongue slipped out to lick her lips. More jets, weaker now, jumped from my tip as it peeked up from Lucy's deep cleavage, filling the canyon lake to brimming once more before the pulses finally stopped. \n\n\"Jesus, Peter!\" Lucy laughed breathlessly, looking down at herself. Thick strands of semen criss-crossed her chest from the top of her tits to the nape of her neck. She slowly leaned back, my softening cock slipping free, and the lake of seed that rested in her cleavage slowly ran down between her tits and over her belly, pooling again between her thighs. \n\n\"God, don't fucking move,\" Becca laughed, jumping up to take the camera off the tripod as I slowly recovered in the chair, my own chest heaving. She returned in half a moment and began snapping pictures as Lucy struck some naughty poses. She continued snapping as Lucy scooped finger-fulls of cum from her belly and breasts and brought them to her mouth to be greedily licked. \n\n\"Mmmm,\" she moaned, lapping the thick strands from her fingers and swallowing contentedly, \"God, you taste good. Maybe I should have finished you in my mouth instead, and take out the middle-girls.\" \n\nBecca giggled, setting the camera aside and reprising the scene from our first night as Lucy held her tits up to be slowly and sensuously licked clean. I was completely and utterly drained, having just spent fifteen minutes at the peak of my pleasure with every muscle in my body tensed to breaking. But to my surprise, I found myself getting hard again as I watched Becca's tongue scoop the last bits of my load from her sister's big tits. She noticed and giggled. \n\n\"I think we'd better stop,\" she laughed, gently reaching out to hold my hardening shaft, \"We want to save the rest for later!\" \n\n\"If we must,\" Lucy sighed, her own hand joining Becca's on my slick shaft for a moment. I groaned with mock disappointment as they released me, and accepted their help to rise from the chair. The next hour passed with equal bliss, as we got cleaned and showered. Lucy seemed all too eager for more closeness, and I quickly had her naked in my arms as the three of us got into bed. With the lights off and the darkness nearly complete, I found myself beset by the two nymphs. My hands never ceased moving as I touched acres of perfect flesh, my mouth meeting Lucy's, then her breasts, then Becca's lips, then Lucy's pussy, and on and on. I greedily lapped at first one, then the other delicious peach, my lips and tongue exploring them fully as I delved inside to musical moans that filled the dark room. Lucy's silky thighs enveloped me for a moment, then gently relented as I moved to Becca as she knelt on all fours. My little wife squealed with delight as I pushed my tongue inside, then up and across her little rosebud. I felt the bed move as Lucy rolled across the sheets and suddenly released a gasping moan that told me Becca's tongue was again busy. It was a tangle myself and their two wonderful bodies in the blackness, my hands and mouth reaching every corner of each of them as their tongues explored each other to gasps and cries of amazing pleasure. The walls rang as I finished Becca first, then Lucy, holding each of them at their unique peak of rapture until they begged me to stop. I fell asleep that night with their sweet, mingled taste on my lips, each girl breathing deep and even beside me as the storm clouds slowly gathered over our little island. \n\n***** \n\nI awoke to dim gray light and the sound of water on leaves. I looked up at the wall above my head. \n\n\"Oh, come the fuck on, dude,\" I muttered to the gecko, blowing a gust of air at him. He scampered away across the wall as I blinked and gained my surroundings. The rain was slow, heavy, and steady, with the wind still calm. It was almost stiflingly warm and humid under the low, dark clouds, even with all our windows and the door wide open. Lucy and Becca slumbered on against my shoulders, and I smiled softly to myself as I closed my eyes and listened to the drops falling. Becca gave a sleepy little moan and stirred against my shoulder, our skin slightly tacky from the wetness in the air. She slowly opened her big, doey eyes and looked at me. \n\n\"Hi,\" she whispered, smiling. \n\n\"Hey,\" I whispered back. We both looked over at Lucy, who slept on, dead to the world. \"Am I responsible for that, or are you?\" \n\nBecca smiled wickedly and giggled softly. \"Probably a little of both,\" she whispered. We were silent for a few moments, each of us looking at the ceiling and watching the fan turn. There was a flash outside, and both of us looked up. A few seconds later, the sky cracked and broke, a huge peel of thunder echoing between the rain-soaked tropical islands. Lucy jumped and gave a squeak, starting awake in a flash. She was halfway to her feet before she realized where she was. \n\n\"Whoa,\" she laughed, as her sister laughed with her. \n\n\"Well, I guess she's awake now,\" Becca said. \n\n\"And sticky,\" Lucy said, feeling the humidity on her bare breasts. \n\n\"I think that might be mostly from last night,\" Becca laughed, sitting up and feeling her belly and the tackiness of the dried sweat. \n\n\"How far away was the lightning?\" Lucy asked, standing and stretching before padding slowly over to the open door. She placed her hand on the jamb and looked out over the rippling lagoon, rubbing her eyes. \n\nI thought back. \"Five or six seconds, maybe,\" I answered, sitting up with Becca. Lucy looked back and smiled. \n\n\"I'm going for a swim,\" she said, and stepped out the door. Becca looked at me and shrugged, then rolled over to put her feet on the cool tile. She walked stiffly over the door, stretching as she went, and leaned out to feel the rain on her hand. \n\n\"It's warm,\" she said, smiling at me over her shoulder, \"I think Lucy may have had the right idea. C'mon!\" I pushed myself up and out of bed, rolling my head on my shoulders to work out the kinks before I followed my wife out into the steady downpour of luke-warm droplets. Lucy had already slipped silently into the lagoon, the water disturbed only by the soft remnants of the ocean swells that managed to slip over the reef beyond. Billions of interconnected rings, the spreading ripples from the rainshower, decorated the surface in an ever-moving painting. I spread my arms and turned my face to the gray clouds with a broad smile. It felt amazing. \n\nI heard Becca laugh at me before she waded naked into the lagoon. She breast-stroked slowly out to where Lucy was treading water. They spoke, but I couldn't make it out. That's probably on purpose, I thought. More diabolical planning, as usual. I opened my eyes and looked out at them, hands on my hips. I was suddenly aware of my manhood, hanging half-hard and long between my legs. I swung like a pendulum as I waded into water, stroking out to join them where their arms and legs waved lazily. Our hair was already dark and wet from the rain. We were silent as we gently moved about in the water, a bit of tension between us. Lucy was close, and I could actually feel her body heat through the small bit of water separating us. Becca was nearby. ",
        "\"Last day,\" Lucy sighed. I nodded. \n\n\"Last day,\" I replied. \n\n\"I guess that means we need to make it memorable,\" Becca said with a smile. Lucy laughed. \n\n\"More memorable, I think you mean,\" she said. \n\n\"Anything you girls want to do today? One last day in Fiji. The storm should clear later today,\" I said, addressing Becca. She shrugged, then smiled and looked at Lucy. \n\n\"I know what my big sis wants to do,\" she giggled, \"Or should I say...wants to have done to her.\" Lucy flushed a bit and grinned. \n\n\"Yeah, well, maybe I'm delaying until last minute,\" she said. \n\n\"What for?\" Becca said, \"It's all you've talked to me about since we got here!\" We all started moving closer to shore, tired of treading water. I was the first to dig my toes into the sand, and took a hand of each water nymph to pull them into the shallows. \n\n\"Maybe I'm...nervous,\" she said with a shrug and smile, \"I'm practically a virgin again, you know! I haven't even put a finger in there since...last time.\" I was instantly hard under the water. The thought of that delectable brunette, bent over, cheeks split by my shaft... \n\n\"Maybe we should practice,\" Becca giggled, \"We have toys, you know.\" \n\n\"No, I don't want to,\" she said, grinning at me and moving close. She jumped in surprise, then laughed as she first bumped into, then laid hands upon my erection. \"I just want to take it like it really was my first time, all over again.\" I smiled back at her as she pressed herself against me and leaned up for a long, soft kiss. I heard Becca make a little moaning sound, and she came close to get in on the action. \n\n\"Well, you were there for my first time, Lucy,\" Becca said, touching each of us as she nestled close in the water, \"But what was yours like?\" \n\nLucy shrugged and made a face. \"Meh,\" she said, \"No experience...equals not much fun. I was curious, and he was...stupid. So it hurt, and not in the good way.\" \n\n\"Oh,\" Becca said. She gave her sister's supple side and squeeze under the water, and exchanged a soft smile. \"Well, it's Fiji, baby. I think we can take a mulligan,\" she giggled. Lucy smiled and nodded, looking from Becca to me again.  \n\n\"That's right,\" she said, giving my hard shaft a squeeze, \"Today I'm a virgin, and tonight I'll lose my little cherry to this tall, dark god. I just hope a don't bite too many holes in the sheets.\" She gave me a sweet smile, drops of water clinging to her dark lashes as she batted her eyes at me. I gave a chuckle. \n\n\"Don't hold back. I'll buy them a new set,\" I said, letting my hands slide down each woman to give each bum a squeeze. \n\n\"Oh, no you don't, mister,\" Becca giggled, pushing my hand away, \"Lucy's getting her bottom deflowered tonight! She's the center of attention. You don't get a pass for my backstage.\" \n\nI made a pouty face, and she laughed. \"Well, you'd better be filming, then,\" I said. Lucy's eyes went wide and excitement. \n\n\"Maybe we'd better keep this guy on the DL,\" Lucy giggled, pushing her sister's hand away from my cock and removing her own. \"I want the full experience later!\" \n\n\"Full experience?\" I asked, eyebrow arched. \n\n\"Ooo, naughty, Lucy,\" Becca giggled, with a little moan. She kept smiling at her sister as she answered me. \"I think she wants you to fill her up in more ways than one,\" she said. I nearly shot it right there. \n\n***** \n\nThe rest of the day passed slowly as the three of us tried our best at the game of keeping our hands off of one another. It wasn't easy. The rain didn't stop until noon, during which the girls read their books, and I strummed quietly on my guitar while sitting in the doorway. Lunch arrived as ordered: a late breakfast of eggs and French toast with juice. The sun came out by two in the afternoon, and we moved outside as the rays dried the sand and cleared the gloom from across our little lagoon. Lucy and Becca donned their respective white and red bathing suits and lay together in the hammock, talking quietly and giggling once in a while. It wasn't long before they dozed off in each other's arms. I took some photos of the sleeping angels, then lay down to read indoors, but soon lay aside my book. The sounds of the breeze and birds outside, and the waving of the shadows of the palms, soon had my eyelids heavy. \n\n***** \n\nI awoke to the sound of water running in the bathroom. No sooner had I regained consciousness than I was forced to draw a gasp. \n\n\"Mmmm...\" Becca moaned softly, drawing her soft lips slowly up my shaft. \n\n\"Jesus, honey,\" I groaned, looking down to lock eyes with her. Apparently I had been sleeping with wood, and it was too much for my sweet young wife to resist. Her lips slipped off my tip with a slurp. \n\n\"It's four o'clock, and the sun is getting lower,\" she said, \"Lucy woke me, and said she wanted to get...ready.\" \n\n\"Mmmm,\" I answered, moaning again as she lazily look me into her mouth, her tongue running spirals around my head as she took me deep. \n\n\"I'm gonna be sidelined tonight, but if I get to watch the show I'm going to make one request,\" she said, slipping her lips off again and giving them a light lick. \n\n\"What's that?\" I asked. She looked quickly at the bathroom door to be sure it was still closed, then back at me with a sexy little smile. \n\n\"Remember the last time I let you fuck me in my ass? How you went really deep?\" she began, grinning at the look on my face. I rolled my eyes for effect as I nodded. I'd taken her from behind in front of a mirror, and her eyes about popped out when I hit bottom, still with inches left to go. \n\n\"A little too deep, as I remember,\" I chuckled. Her eyes widened with her smile and she nodded. \n\n\"Well,\" she continued, speaking softly, \"When you give it to her...go deeper.\" My eyes must have told the story, because she giggled and gave my throbbing member a slow lick. \"She's always bragging about her 'deep cheeks', so...let's see if she can walk the walk! I wanna see the look on her face when you're balls-deep in her...think you can do that for me?\" \n\n\"Oh yes,\" I growled softly. Becca laughed again as gave me another lick. \n\n\"God, I can hear her squealing already,\" she said. Just then, the latch on the bathroom door gave a soft click. Lucy emerged, beaming. \n\n\"I'm ready,\" she giggled nervously, hopping up onto the high bed to join her sister. Becca moved over as she arrived, throwing a silky thigh over my leg and lying down comfortably along my side, her hot breath on my manhood giving me shivers. Lucy moved close and mimicked Becca's position. She gave a little sigh as she slid her hand over my abs and down to grasp the base of my cock. Her fingers couldn't quite encircle me. \n\n\"Mmmm...God, it really does feel like my first time,\" she laughed nervously, squeezing my girth. I ran my hand over her shoulder and stroked her hair. \n\n\"You're not getting cold feet, are you?\" Becca teased, lightly pinching her hip. Lucy shot her a look and stuck her tongue out. \n\n\"No! I can be a little nervous though, can't I? I mean...I've got a lot of cock staring me in the eye!\" she laughed. \n\n\"And I can't wait to see the look on your face when he fills you up,\" Becca said again, looking at me. She gave me another lick, then glanced at Lucy. \"There's room for two in here, you know,\" she said. \n\n\"Ooo, hot,\" Lucy giggled, leaning in to run the tip of her tongue up the side of my shaft as her little sister suckled softly on the tip. Two little hands from two different girls steadied my throbbing dick, one encircling the shaft while the other gently cradled my heavy, shaved sack. Becca gave a soft moan as her wet lips slid slowly over my glans, her eyes glowing at me from under long, dark lashes. Every nerve in my body seemed dead except for those endings touched by my two loves. I watched them slowly switch places, Becca's lips and tongue sliding down my shaft as Lucy's slid up to suck lovingly at the head. Their mouths met momentarily as they passed each other, and Becca giggled at my gasp, but they didn't stop. I continued to throb, painfully hard, as Becca moved to replace Lucy again. But Lucy seemed to like the tip, and they giggled to each other as they vied for space, kissing one another slowly with the head of my cock between them. \n\n\"Holy-,\" I groaned, unable to form a sentence. They just moaned together in response, eyes closed in the lewd kiss. Their tongues sought to touch, sliding over and around my cock's head as I clutched the sheets with white knuckles, unable to look away from the sisters and their play. I let out a loud moan, and flexed my cock, drawing little giggles from the girl. They opened their eyes and turned in their attentions to fix my eyes with theirs, the little tongues and soft lips still roaming and probing. I gasped again at the sight that I would remember until my dying moment: two beautiful sets of bright eyes and long lashes, wet lips nipping, sucking, and pulling at my tip, pink tongues sliding and licking, and soft, warm hands holding my manhood with both care and wanton intent. \n\n\"Don't even start,\" Becca giggled, correctly identifying my mounting pleasure, \"Lucy's got a much more naughty place for you to shoot this into.\" She gently hefted my sack in her little palm as I gritted my teeth, Lucy continuing her tongue's torture through smiling lips. She gave a little moan as she finally relinquished my member, and gave her lower lips a soft bite with white teeth. \n\n\"Even the thought has me tingling all over,\" she said softly, reaching between her silky thighs as she pushed herself up into a sitting position, \"I am so ready for this.\" \n\n\"You say that now,\" Becca giggled, pushing herself up to lean on an arm and rest on her hip. \"Maybe you're eyes are a little bigger than your bumhole.\" \n\nLucy laughed out loud. \"Well, they definitely are. But hopefully only literally,\" she said, obviously still nervous. She looked to me, seemingly waiting for something, and gave a sweet little smile. \"So?\" she intoned, \"Where should I be?\" \n\nI pushed myself up on my elbows to shoot back another broad smile. \"However you're most relaxed and comfortable, I guess,\" I said, gesturing towards the edge of our big, soft, high bed. \"How about you lie on your back, right there?\" \n\n\"Mmmm...\" she said, grinning big as she hopped down to the floor and waited for me to get up, \"I've never had it like that!\" Becca looked surprised. \n\n\"Really? You've never done anal on your back?\" she said. Her sister shook her head. \n\n\"I've only ever taken it from behind. I guess that's just how I envisioned it,\" she said with a shrug. I swung my feet onto the floor and stood up to let Lucy take my space on the big bed. She used her hands to jump her rump onto the bed backwards, then leaned back on her hands. She was obviously a bit nervous to get started, and continued to talk as I fetched our lube from the bathroom and Becca got out my camera. \n\n\"Wow,\" Becca giggled, suddenly feeling very experienced next to her older sister, \"You've been missing out, babe.\" \n\n\"Why, is it better this way?\" Lucy asked, suddenly very interested. Becca considered, cocking her head to one side. \n\n\"Well, I happen to think so,\" she said, \"It feels a little different, that's for sure. He hits some new spots in there...especially when he goes deep.\" \n\n\"I'm liking the sound of this,\" she said, smiling at me as I returned from the bathroom with the bottle. As I approached, she lay slowly back and lifted her legs. Her big tits rolled back with her, flattening slightly on her chest as she pulled her knees back, her feet high in the air. She watched as I squeezed some lube out onto two fingers, and let out a fluttery sigh as I touched it to her exposed pucker. I was entranced as my fingers circled her back door, the soft, crinkly flesh of the hole winking and squeezing involuntarily. I had yet to touch her vagina myself, but the sight was making my mouth water. Her lips were puffy and flushed, all of her inner petals just barely visible between them, and shining like water in the sun. A big, clear drop hung like dew at the very bottom of her sweet pussy, where her lips thinned down to infinity before ending only a centimeter or less from her pucker. Her anus itself, by then shiny with lube and begging for my attention, looked like an artist's rendition of some sort of quantum singularity, with all lines of light focused down to an impossibly small dot, directly in the center of a thick ring of muscle beneath the smooth skin. \n\n\"Just put it in me,\" I heard her half-moaning voice. It broke my trance, and I realized I had already lubed my penis while lost in la-la-land. \n\n\"Jesus, Lucy,\" Becca giggled. She was already behind the camera, moving around us slowly, \"A little excited?\" \n\n\"A little,\" she laughed, nodding. Her eyes got bigger as she watched me move between her legs, and a sharp gasp escaped her lips as my slippery tip kissed her bottom. \"Put it in me and don't stop,\" she said, biting her lip as she smiled up at me. \n\n\"All the way?\" I asked, stirring my head around her anus. God, she felt strong. \n\n\"All the way,\" she replied, nodding slowly. \"I wanna feel you all...up inside me,\" she said, tracing a slow line up her belly with her fingertips. \n\n\"I don't want to hurt you,\" I said, shaking my head as I pressed my tip more insistently against her anus. I could feel her starting to give way, flexing the muscles in her hips and belly. \n\n\"Oh, God,\" she moaned as her anus slowly began to open to my invader, something that seemed impossible to look at her guarded entrance. \"Do it,\" she moaned, \"Hurt me. I want you to.\" \n\n\"Holy-holy,\" I groaned deeply. She squeaked softly in her throat, her legs jerking a little as the ring of my glans slipped past the ring of her asshole. \n\n\"Jesus Christ!\" she squealed as I pushed further. We moaned long and loud, in almost perfect unison as my shining shaft sank slowly between her cheeks like a ship beneath the waves. As inch after inch penetrated her bottom, I felt her heat increasing exponentially until I was sure that my head would come out cooked on just the first thrust. \n\n\"Oh my GOD, Peter,\" I heard Becca moan softly, filming her sister's penetration in wanton detail. She moved the lens from our coupling to Lucy's face several times as Lucy's expression became more and more outrageous, and her cries louder and more fervent. Without seeing our forbidden act, one would think she was being slowly impaled through the belly on a spear! Her squeals, screams, moans, and groans continually caught in her throat and burst from her chest as my shaft began to slowly saw back and forth, in and out of her butt. I drove the breath from her lungs as my cock surged smoothly into her bowels, and her brow pinched as I pushed deeper and deeper with each slow, steady thrust. Goosebumps appeared on her thighs and buttocks, and her chest flushed pink from her breasts to her forehead. \n\n\"My God!\" she gasped, finally finding the breath between guttural moans and animal-like squeals, \"God, Peter, I've never had it so deep! You're so-unngh!-so far in me! NNNnn!\" \n\n\"That's it, Peter, give it all to her,\" Becca growled softly, speaking at my side as Lucy played out her pleasure and pain before us both, impaled on the inches of my relentless manhood. \n\n\"Becca, you bitch!\" Lucy gasped with a breathless smile, groaning deeply as I pushed forward again, \"You just want to hear me scream!\" \n\n\"At the top of your lungs, Lucy-baby,\" Becca cooed, giggling as I went deeper still, causing Lucy to squeal again, her eyes flying wide. \n\n\"Wow!\" she cried simply, twisting her hips as I pushed forward again, trying to navigate me past the unique velvety curves inside of her. Again and again I slid my shaft in and out of her ass, and again and again she cried out, her legs shaking and her toes curled hard. I pushed just a little deeper with every thrust, the impossibly tight sleeve of her rectum running over me longer and longer until I again felt my entire self being distilled into my raging penis. I slid out until I could see the ring of my tip, then slowly pushed all the way in, endless hard, shining flesh sinking into Lucy's body right to the very last. \n\n\"Oh God, please!\" Lucy shrieked, her resolve failing, \"No...God, I just can't take any more! No more!\" she wailed, both hands pressed against my abs. Becca was ready, having filmed every second. \n\n\"That's all there is, honey,\" she giggled, \"You did it!\" I held myself deep inside of Lucy, feeling her belly pulse as she let out a single little laugh of relief. \n\n\"Wow!\" she said, sweaty, shining, and breathless, \"Whoa! Wow, that's a lot of dick in my ass! Holy God...\" \n\n\"How's it feel, Lucy?\" Becca giggled, zeroing in on her sister's flushed face. \n\n\"I swear...\" she breathed, \"I can feel pressure on my diaphram!\" Lucy held her hands over her stomach for emphasis, then ran one down her belly to feel the root of my cock and lazily touch her impossibly-wet pussy, then ran it back up her belly as she spoke. \"Peter, Jesus...\" she said to me, looking up and shaking her head slowly, \"I can feel it...all of it here, inside me...\" \n\nI could barely form words. \"God, you're incredible, Lucy,\" I moaned, flexing myself in her ass and making her jump and moan. \n\n\"Fuck me,\" she groaned, pulling her legs back again and pushing her feet toward the ceiling. I didn't take but a second to respond, and began slowly withdrawing my shaft from her bottom. She groaned as endless inches emerged, and louder still as I slid them back inside. \"Oh God, fuck me!\" she cried, louder this time. Becca was having fun with the camera. \n\n\"What's happening to you right now, Lucy-girl?\" she giggled, holding the camera to her sister's face. Lucy laughed back, her body moving in time to my slowly-building thrusts. \n\n\"Uh! Uh! Oh! I'm being-UH!-fucked! In the ass!\" she giggled breathlessly, smiling for the camera. \n\n\"Mmmm...naughty!\" Becca giggled, waving the camera about the action and her sister's body in motion, \"Now say it cute!\" \n\nLucy laughed out loud through my own moans and the sound of my hips against her thighs and ass. \"Mmm! Ok....Uh! Right now...ung! Uh! UH! I've got a big-Uh!-long-Ng!-hard cock...Oh God! Uh! Sliding...in and out...of my butt! Really deep! Oh God, it's-UH!-up my butt-Ung!-so deep!\" \n\nBecca giggled behind the camera. \"Nice, girl, nice!\" she laughed, \"Who's cock is up that tight butt, then?\" \n\n\"Peter's!\" she gasped, looking up at me with a smile. \n\n\"Who's he?\" Becca asked. Lucy giggled as she caught the meaning. \n\n\"Oh! He's my-UH God!-my little sister's husband!\" she cried, \"I'm getting fucked...Uhhh!...in my ass, by-OO!-by my little sister's husband!\" \n\n\"Hot,\" Becca moaned, \"You having fun?\" \n\n\"God, Becky,\" Lucy squealed, \"He's fucking my ass! So! Fucking! Good!\" Each word punctuated a balls-deep thrust. I wouldn't last long, Lucy was making sure of that. I could feel her muscles, pushing out on the in-stroke to admit my cock, and pulling hard as I withdrew, letting me feel the strong, slippery ring of her anus sliding from my root to my tip on each thrust. Over and over I pushed myself up between her firm, quivering cheeks, and over and over I felt that ring squeezing hard. The heat and texture of her bowels were almost too much to take in. As I thrust inside, the hard ring sliding down, sweet, searing fire assailed me from all sides. The sleeve of her rectum was narrow, with a deep, velvety texture that I could feel my tip plowing through like a harvester through a field of corn. Her rectum stretched and pulsed around my length, hugging me tightly but reluctantly, my girth filling the canal to bursting. Deep inside, my tip pushed past the curves of her innards, peeking so deep into her body that I could feel her breath and heartbeat, and the tension in her belly at the momentary aching stab of pain that Becca had described to me in detail. God, she took it so well, and so deep! If I watched closely, I could see her firm little belly bulge slightly above her pussy as her innards moved to make way for my manhood. The ego-boost was astonishing. I felt like a Greek god of old, oiled and shining, my shaft standing proud, tall, thick, and unmatched as a mere mortal woman lay before me to receive the spear. Lucy's hands held her legs back behind her knees, her toes curled and pointed to the ceiling. Her huge tits bounced and flowed hypnotically on her chest, moving in time to my thrusts, and her sweaty and shining buns jiggled with each sharp contact with my hips. ",
        "Sliding out of Lucy's ass was an equally wonderful journey. As soon as my balls kissed her cheeks, I felt her anus clamp hard, the flesh around pulled slightly outward as I withdrew and felt her body in reverse. My tip bounced through the curves of her bowels and back into her rectum, only to have the soft, velvety sleeve pull closed as soon as I passed, her textured interior flowing over me in a wave. That tight ring slid all the way up my shaft, the comparably cool air of our cabin tingling my exposed skin. Her anus stayed clamped hard until she felt my tip held between her inner and outer rings. Then, she pushed and opened for me, begging me to repeat the journey and push one more scream from her lungs. \n\n\"Peter, you're gonna make me cum!\" Lucy suddenly cried out. I just groaned in response and held my hands tighter around her smooth hips. I could feel her insides all in motion as her push-squeeze rhythm faltered. She screamed soundlessly, her back arched off the bed and her head pressed hard back into the covers. Her hands clutched my wrists as I held her tightly through her climax, which lasted over thirty seconds, during which I never stopped pounding her bottom with deep, steady thrusts. Finally, there came a deep, gasping breath, just when I thought for sure she would pass out. Her chest heaved and heaved, rising and falling with an amazing rapidity as she hyperventilated into another climax. \n\n\"Jeeeessusss!\" she screamed, her asshole squeezing so hard I could barely fit inside. Every muscle in the body quivered like she was seizing, and only piecemeal little sounds escaped from her throat, with not a breath of air to power her vocals. She gasped again, her face flushed pink and tears of pleasure streaming from her eyes. \n\n\"Oh God...oh God not again!\" she cried, \"I can't....I can't take iiiitttttt!\" She choked and gasped for breath again as a third orgasm hit her like a shotgun blast. Lucy squirmed and squealed, as if half of her was trying desperately to get away from my endlessly plunging shaft. The sight was incredible. She tore at the sheets, dug her nails into my steel-hard arms, while all the while her body shook and strained enough to snap tendons, my cock pistoning smoothly in and out of her butt. And that was it. I had only to look down once more at our coupling, and I'd had it. Her pink rose and engorged mound was positively flowing with her juices, while just below my shining shaft was sliding up and down, in and out, filling the willing and wonderful bottom of a beautiful woman. It hit me like a truck. \n\n\"I'm cumming!\" I gasped in surprise. Lucy gasped back, taking a breath to cry out to me. \n\n\"Oh, God! Peter, cum in me! Cum in my ass!\" \n\n\"Aaahh Lucy, I'm cumming!\" I bellowed, \"I'm cumming in your ass!\" \n\n\"Do it! Do it! OH! Ohhhh yes, baby, I can feel it! Ohhhhh yes! Yes! Oh, Peter, fill me up! Fucking fill me! Ohhh my GOD I can't believe you're cumming in my ass!\" \n\nI could barely hear her over the roaring of blood in my ears. I had no idea where Becca was, as blackness seemed to rim my vision, but I had a fleeting thought of 'wow, I hope she's getting this' as I erupted into her big sister's butt like Mt. Saint Helens. The pumping seemed to go on forever, so hard that my cock ached with the effort. Long, hard ropes burst from my tip as I held my shaft balls-deep in Lucy's asshole, moving back and forth only about an inch to prolong the pleasure. Instead of a shoot-shoot-shoot rhythm as usual, the contractions lasted seconds at a time, and I could feel the hot fluid pushing up my shaft, squeezing past Lucy's clamped anus to explode into her. \n\n\"Uh! Uh! Uh....Uh......Uh God,\" I gasped, my wide chest heaving as the last few aftershocks wracked my spine. I opened my eyes to find Lucy and Becca beaming at one another, and then at me. \n\n\"That was a big one,\" Lucy giggled, her breath quickly returning as the heaving in her chest slowed. \n\n\"Wow, even by Peter standards?\" Becca laughed. I gently, slowly slid out of Lucy's butt, her anus closing quickly behind my tip. Her little hole was pink and shining, and a single drop of cum leaked from the center. My cock was slowly softening, and I gently wiped the lube away as Lucy gingerly lowered her feet to the floor, her legs suffering from a slight cramp. \n\n\"Oh, God, yeah. HUGE even by Peter standards,\" Lucy laughed, putting a hand on her belly as she slowly sat up on the edge of the bed. \"Ohhhh my goodness,\" she sighed. Becca was still rolling the camera as her big sister turned and crawled up onto the bed to lay down on her belly, utterly spent. \n\n\"How do you know?\" Becca asked, as if interviewing her \"post butt-fuck\". Lucy pulled up a leg and rolled onto her side to face her little sister. She ran her hand down her side and hip, then over onto her belly, her big tits resting comfortably together on the bed in front of her. \n\n\"Because the load is so big I can feel the hot-spot in my belly,\" she giggled, \"Plus, when I crawled up here, I could feel it moving a bit.\" \n\n\"Uh-oh,\" Becca laughed, filming me as I crawled onto the bed behind Lucy. She turned to look up at me and smile lovingly. We shared a soft kiss. God, she tasted wonderful. \"Are you going to have to take a trip to the little girl's room soon?\" Becca laughed. \n\n\"I don't think so,\" Lucy giggled, \"It's really in there!\" \n\n\"Alright,\" Becca said, \"Well, say goodnight, you two.\" Lucy and I waved to the camera, and Becca stopped recording and set it aside on the table. She returned to crawl up and lie next to Lucy, then lean in for a long, passionate, completely unexpected kiss. I watched the sisters embrace as I lay close behind Lucy. \n\n\"Mmm! Wow,\" Lucy giggled as they finished. \n\n\"That was amazing,\" Becca said with a shiver, \"I can't wait to put that video on the TV at home!\" \n\n\"That better not make it on YouTube,\" Lucy said. We all laughed. \n\n\"What, you don't want to make ten million dollars overnight?\" I asked, rolling out of bed to fetch us some drinks. \n\n\"No!\" Lucy laughed, \"Our eyes only! Becky, you'd better burn me a DVD! ASAP!\" \n\n\"It'll be right behind you,\" Becca said. \n\n***** \n\nWe slept like the dead that night. At least, for a while. Lucy slept through the night soundly, breathing softly on her side. I was in the middle as usual, and I felt Becca get up and not come back immediately. I opened my eyes slowly and blinked about, then saw her in the moonlight outside, sitting in the hammock. I glanced at Lucy, then gently rolled out of the bed. \n\n\"Good morning,\" she said softly. I could see her smile in the eerie blue light, and she moved slightly to let me sit next to her on the hammock. She turned to swing both legs over me and lay her head on my shoulder. \n\n\"Do you love her?\" she asked. Right to the point. \n\n\"Haven't we already discussed this?\" I said gently. \n\n\"We have...but I just want to do it again. After tonight,\" she replied. I sighed softly. \n\n\"I do. But not any more or less than I love you,\" I said. \n\n\"Why not?\" \n\n\"Pardon?\" \n\n\"Why don't you love her more? You have every reason to. She sings better than me, she's got huge boobs that you can really fuck, she gives great head, and she can take you in her butt balls-deep when I can only manage the first seven inches.\" \n\n\"Anything else?\" I joked. I felt her face smile against my shoulder. \"Becca, you just listed all the physical things she can do for me.\" \n\n\"Singing isn't physical,\" she replied. \n\n\"You can sing, too. But what does that matter? There are lots of reasons to love both of you. If you want to keep it to your list, you give better head, you've got a deeper and tighter pussy, and yeah, maybe you don't have boobs like her's, but I love your boobs. And I also love your ass. Since when are you jealous of her?\" \n\nBecca shrugged. \"I'm not, I guess. I just...I dunno. Maybe I'm just still adjusting to this thing with being...I guess kinda married to us both.\" \n\n\"You're my wife. Lucy's my wife's hot sister,\" I said. Becca laughed. \n\n\"Yeah, OK,\" she said, \"Plus, I do have one big one on her.\" \n\n\"What's that?\" I asked, smiling as I felt her little hand take my hardening shaft. \n\n\"No matter how hot she is, or how deep her cheeks are, I get this whenever I want,\" she said. I groaned softly as her lips slipped over my tip, and a soft moan rumbled in her mouth. \n\n\"I love you, Becca,\" I sighed. She didn't reply, but took me deep into her throat as her head descended into my lap. Lucy slept soundly as her little sister bobbed her head up and down my shaft until she had my howling at the moon in a very literal sense. She just had to have the last load of our honeymoon. It was only right. We returned to bed to cuddle only a couple hours before sunrise, my seed sitting warm in her belly and a satisfied smile on her beautiful face. \n\n***** \n\nThe next day was as happy as any other, but solemn in an underhanded fashion. We packed our bags and went for one last nude swim in the lagoon before rinsing and heading to the main compound. After a light meal, we spied the big yacht as it arrived out behind the reef. The engines rumbled as it held itself against the current until the launches from shore could ferry us out. We took lots of photos on the trip back to Nadi. The weather was beautiful and sunny, and the girls covered up in their mainland garb of white linen and broad hats. We were headed back to Auckland, but Lucy's tickets went straight to LAX from Nadi. We all got through the security and headed to her gate, as the flight to LA left an hour or so earlier. We kept the conversation light. \n\nI had expected Lucy to cry, but it didn't make it much easier when she did. No bawling, but little sad tears making tracks down her cheeks. She hugged her sister tight, and me as well, and whispered to us to get all the pictures and video to her as soon as we could. \n\n\"I love you,\" she said to me as she turned to head into the jet-way, the last passenger to board. I stood with my arm holding Becca close, both of us smiling back. \n\n\"We love you too,\" Becca said for me, squeezing my hand. And then she was off. \n\n***** \n\nBoston. A light knock came at the heavy wood door. The office beyond was festooned with plants and dark wood, and a huge salt-water fish tank lined one wall, its pumps quietly humming. \n\n\"Come in,\" Lucy said, without averting her attention from the papers that covered her desk, or the large computer screen that glowed back at her. \n\n\"Miss Castel?\" said her secretary, peeking in the door, \"I'm sorry to disturb you, but a package arrived for you.\" Lucy looked up, trying to keep a straight face. She waved her secretary in, who handed her a yellow DHL box over the desk. Lucy looked at the address and smiled. \n\n\"Thank you, Grace. I've been expecting this,\" she said. As he secretary left, she called after her. \"And Grace? Please cancel my appointments for the rest of the day. I'm not to be disturbed.\" \n\n\"Yes, Miss Castel. I'll see to it,\" she replied, nodding. The door shut behind her, and Lucy heard the heavy brass lock slide home with a clunk as her secretary locked her inside with the only other key. \n\n\"Finally,\" she sighed, excited beyond measure. She sliced open the tape and opened the box to find it filled with dried palm fronds and a Blu-ray DVD, along with an envelope covered with Becca's trademark drawings. She leaned comfortably in her high-backed leather chair as she read the letter. \n\nDearest Lucy, \n\nI know you've been waiting for this, and I know I said it would \"right behind you\", but Peter decided he wanted to do a little editing. He had a lot of fun with this, so we really hope you like it. He thought it was better than just the footage we shot. The final night's video is amazing! You'll flip. But also check out the slideshows Peter put together, because he took some incredible photos of the both of us. Better than Playboy. :-) \n\nWe both miss you terribly. I know you said you'd rather us not come to Boston, but you'd better make tracks and get back here when you can, then! I know you have the money, miss VP. Anyway, I'll keep this short and sweet, since I know you're itching to have a look at the DVD. Enjoy! \n\nLove, \n\nBecca & Peter \n\nThey had both signed their names, and Becca had put some extra lipstick on and given the bottom of the page a kiss. Lucy smiled wistfully, then set the letter aside and stood from her chair. She took the Blu-ray from its case and slid it into the drive on the side of the huge 27\" iMac that stood facing her on the desk. The software quickly took over and opened up the disc's content, and a stylish splash screen appeared, playing Jack Johnson in the background. Lucy chuckled as she read over the choices on the screen, then stood to pull the expensive wooden Venetian blinds. The room took on a twilight appearance. She unbuttoned the jacket of her black pantsuit and lay it aside, then began to work at the buttons of her cream-colored silk blouse. Beneath, her breasts strained against a lacy, baby-blue bra. After she toed off her low heels, the pants came next, and she folded them along the crease and lay them over her jacket on a nearby chair. \n\nLucy paused, dressed in her matching bra and thong, to lean down on the desk and trace the mouse over the menu. She smiled in amusement as she saw the choices, and thumbed through the titles. Peter and Becca had put together several photo slideshows, as well as the videos they had taken. \"Water Nymphs\", \"Sisters At Play\", and \"The Big One\" contained slideshows of professional-grade photos of the girls in and out of the lagoon, then ramping up to when they retired to the cabin for their taboo-shattering play-time. The last one contained a photo set of the pics Becca snapped after Peter had blown his massive load between her tits. Even looking at the photo-vignettes that graced the covers of each slideshow made Lucy's pussy begin to moisten in a big way. Three shorter sets contained photos of she and her sister asleep in the hammock together, each of them skippering their little sailboat, and them smiling in the sun on the boat trip back to Nadi. \n\nBut the videos were what she had been waiting each day since Fiji to see. There was \"Double The Fun\", with she and Becca playing with their double-ended dildo, and ending with a massive shot onto her tits and the sharing of the load between them. Then there was \"The Girls of Summer\", featuring her epic tit-fuck of Peter's long cock. And finally, there was \"The Deflowering of Lucy Castell\". Lucy was shaking she was so excited, and was almost hesitant to click on it. She paused, delaying, and opened her bottom desk drawer with a secret lock. Inside were a selection of toys and lube. \n\n\"Oh my,\" she sighed. Lucy reached in a selected a long glass plug and her favorite silicone dildo, along with a bottle of lube. She was breathing heavily even as she unhooked the double-clasped bra, and slid her panties down her long, smooth legs. Finally, she managed to muster the courage and clicked the video. \n\nThe footage was rocky as Becca turned on the camera and got a good hold on it. \n\n\"Why, is it better in missionary?\" Lucy heard herself say. \n\n\"Well, I happen to think so,\" came her little sister's voice, behind the camera. Lucy listened to the dialog, smiling at how obviously nervous she was at the time. She watched the camera, and watched herself lie back on the bed and draw her legs back. Becca zoomed in close to her body, shooting her face as they talked, and sliding down her body to feature her pussy and ass, staying close as Peter's fingers appeared to smear her little hole with lube. \n\n\"God....\" Lucy breathed. She squeezed a big dollop of lube onto the tip of the big plug, wanting to penetrate herself in time to the video. \n\n\"God, just put it in me,\" came her own voice from her speakers. Becca had a perfect, level view as Peter took himself and pressed the head of his massive penis against her anus, which clenched in response. \n\n\"Wow, he's huge!\" Lucy laughed in her empty office. She slouched in her chair and spread her knees, reaching down between her thighs with her toy to touch the cool tip to her anus, hidden between her cheeks. \n\n\"All the way,\" came her high, breathy voice on the speakers. She pressed the plug against her asshole, her mouth agape as she watched her anus on screen press inwards, resisting the impending invasion of Peter's massive tool. Lucy listened to her blasphemous curse, and watched her legs jerk in surprise as his tip passed into her. She watched Becca's shots of her priceless expressions and sweating brow, and listened to her own animalistic squeals and cries as an image of the endless train of dick sliding into her butt filled the screen. She filled herself with the plug as Peter filled Past-Lucy with cock, but longed for the sweet ache of pleasure she saw herself experiencing on the screen. She bit her lip, utterly astonished at the carnal act she had allowed to be performed on her body. She watched in amazement as the action really got going, with Peter plunging his shining shaft in and out of her bottom with deep, long strokes. Lucy could hardly believe what she was seeing. Where does it all go? She thought, listening as Becca spoke to her from behind the camera, filming her grimacing face and bouncing, jiggling tits. \n\n\"What's happening to you right now, Lucy-girl?\" Becca asked. Lucy slowly sank the dildo into her pussy as she listened to her half-coherent response. \n\n\"I'm being-UH!-fucked in the ass!\" came her cry, with a breathless laugh. The rest of the video passed in a haze. She barely got a dozen thrusts into her pussy before she was biting her tongue to keep from screaming through the walls. Her vision was swimming by the time she was listening to Peter bellowing out his orgasm. Becca had been right there, and filmed the whole thing: his shaft buried to the hilt in the bottom, the thick vein of his pipe flexing mightily, filling her ass with cum. She listened to her own cries, begging him to fill her, her moans punctuating each great pump of his dick as she felt the hot, heavy jets pouring into her bowels. \n\nLucy pulled up another window as the video continued to play in the background. She called up the Orbitz website and began to type, even as she listened to the final words of the video. \n\n\"Say goodnight, you two,\" came her little sister's voice. Lucy pulled out her purse. \n\n\"I'd prefer 'hello',\" she said with a smile. \n\nTHE END. "
    ],
    "authorname": "boysetsfire",
    "tags": [
        "anal",
        "butt",
        "fiji",
        "tropical",
        "threesome",
        "sisters",
        "incest"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/fiji-baby"
}