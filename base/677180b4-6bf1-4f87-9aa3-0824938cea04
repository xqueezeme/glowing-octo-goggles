{
    "title": "Mike & Karen Ch. 19",
    "pages": [
        " The driver for the chairman rang the doorbell as the men present looked in wonder at the massive dwelling in front of them. They'd heard many things, of course, about this Canadian industrialist and business magnate, Jonathan Blackwell, but they hadn't truly appreciated the information they'd been given about Blackwell Manor.\n\nSeconds later, a tall and striking woman with bronze hair and astonishing golden-amber eyes, wearing a black and white maid's uniform she was almost spilling out of answered the door, her expression neutral, but with an underlying hint of danger.\n\n\"Good evening,\" said the young man who had rung the doorbell. \"We are here for the business meeting and dinner with Mister Jonathan Blackwell and his family?\"\n\n\"Mais bien s\u00fbr,\" Karen said, her unnerving eyes hard and her expression somewhere between dour and exasperation. \"By all means, gentlemen, follow me...\"         \n\n \n\nMike &amp; Karen\n\nDisclaimer: All characters are 18 years of age or older while actively engaging in sexual activity. This story is a prequel/sequel (sprequel?) to my other work, Alex &amp; Alexa. As always, many thanks and gratuitous panty shots from Freja and Jeanie to my long-suffering editor and beta-reader for their assistance in polishing up and improving this work. Reviews are welcome; flames will be snickered at and deleted with extreme prejudice. Enjoy!\n\nPlease Note: There are incest themes with a secondary couple in this story. Just a forewarning.\n\n       Chapter XIX- With Six You Get Egg Roll\n\n Blackwell Manor, February 1987, one dark and miserably cold, wet night... \n\n\"Judas!\" Karen shouted in outrage toward the backs of the retreating staff, who were all hurrying to cars and taxis in the large driveway. \"Quislings! Apostates! How could you?! In my time of need?!\"\n\nShe turned and her eyes widened as she saw Angelique, one of her favourite staff members, hurrying for the door and pulling a scarf around her head as if she were hoping to not be noticed.\n\n\"Angelique!\" Karen exclaimed in dismay. \"You... you're bailing on me too?\"\n\n\"Miss Gordon... Karen...\" the girl said, faltering for a moment before she remembered her aversion to danger. \"I love you, we all love you, but... well... to be indelicate, I'd rather have my eyeballs sucked out my ass than get involved in this insane scheme of yours. I'll... I'll be back in a week...\"\n\n\"How can you lot take your accrued time off all at once?!\" Karen called to Angelique's back as she hurried for a cab that was pulling up. \"You're not even unionized! Are you?\"\n\nStanding in the grand foyer, Karen turned and leaned back against the door, closing it while also sliding down it slightly. Her expression was one of disbelief. The manor, which was normally a quiet place to begin with, seemed eerily so to her now. Not all the staff and servants had stampeded out the front door, so some must have made their escape via other methods of egress.\n\nCowards.\n\n\"I can't believe it, Jordan,\" she said rather dully as she gazed at the grand staircase. \"They all left. All of them. Does loyalty mean nothing these days?\"\n\n\"One cannot blame them, my dear,\" the older man said in a kindly voice. He was in his fifties, his hair silvery and his face getting thin, but he stood ram-rod straight and had a bearing of quiet and crisp dignity and efficiency about him. \"Because even by your rather lofty standards, this caper is nothing short of madness.\"\n\n\"Oh, you're exaggerating,\" she grumped dismissively. There was something amiss with the world when her powers of persuasion failed her. Reality had gone wrong. Again. As it always seemed to when she needed it most. \"But with their disappearance, yes, it is now folly heaped upon madness. Jordan, we can't do this by ourselves.\"\n\n\"Too true, mistress,\" he agreed as he put on his fedora and picked up his walking stick. \"And I wish you the best of luck. I shall be back some days from now.\"\n\nHer eyes widened in shock. \"Jordan!\" she gasped as she stood up, looking stunned. \"How can you-\"\n\n\"Adieu, my dear girl,\" he said as he opened the door and headed out. \"Hopefully not forever, mind.\"\n\nKaren stared at the closed door, dumbfounded. She hadn't expected Jordan, of all people, to abandon her. Could this idea truly be that crazed?\n\nNo, she told herself. They're all just afraid. Challenges and the prospect of success terrify little people with little dreams. What was there to fear, except fear itself?\n\nKaren sighed loudly and looked over at Odo, her father's beagle of rather advanced age. He looked back up at her through rheumy eyes, snuffled and then trotted away, disappearing like everyone else.\n\n\"Et tu, Brute?\" Karen grumbled, folding her arms and scowling at the floor. She was truly alone now and was forced to admit that she had no way of pulling this off by herself. Not without a lot of favours.\n\nWell, didn't people owe her a lot of favours?\n\nShe stood up straight again, her daunting golden-amber eyes flashing in determination. Yes. This would work out after all. She just needed to call in favours!\n\nNow who was insane enough to get themselves involved in this little caper to save her family?\n\n***\n\nUniversity campus, the following morning...\n\n\"Ummm... 'scuse me?\" Mona said, her eyebrow raised as she gave Karen a rather surprised look. \"Did I just hear you right, princess?\"\n\n\"If you mean did you hear me ask for help, then yes, you indeed heard me right,\" Karen affirmed, standing with her friend in the hallway of the dorm, outside their favourite study hall. To Mona's surprise, the normally supremely 'in control of everything' Karen had asked for her assistance, and whatever this was, it had an air of urgency to it, even before the explanation.\n\n\"You. Asking me for help,\" Mona stated, wanting to make sure she'd heard correctly. \"As in, 'I'm Karen Gordon, and I need assistance from mortals' kind of help?\"\n\nKaren gave her friend a look. \"I would prefer to not have to call in a favour.\"\n\nMona's expression was skeptical. \"Girl, how many favours do you think you're owed? You bought me lunch one day when I forgot my wallet back in my room; you didn't save me from working for Don Bluth and dying of diabetes as a result.\"\n\n\"Do you still owe DeBourne any favours?\" Karen asked.\n\nMona seemed confused. \"I... maybe?\"\n\n\"Good, I'll take one of his,\" the bronze-haired girl said. \"He won't notice.\"\n\n\"What?\" asked Mona, shaking her head as if to clear of Karen's bafflegab. \"That's not how favours work, woman, you can't just steal one from somebody else. They aren't like my grandpa's spankings on credit against future bad behaviour!\"\n\nKaren sighed and made a decision. \"Mona, I'm sorry that I have to do this, then...\"\n\nThe black girl looked slightly worried now. \"No, you wouldn't. You can't, Kar. That's cheating.\"\n\nKaren made to speak, but Mona shut it down quickly. \"Okay, okay! Whatever it is, I'm in! Come Hell or high water, I'm in! Just not that!\"\n\n\"I thought you'd see it my way,\" Karen said airily, nodding in satisfaction. \"Now let's go find Remington and Heyman, I need them too.\"\n\n\"All right, but only if you explain on the way what I'm getting myself into,\" Mona muttered as she fell into line beside Karen, who was already marching down the hall toward the stairs up to the third floor.\n\n***\n\n\"Did I just hear you right?\" Janet asked as she sat on the edge of Lisa's bed, her eyebrow almost raised into her hairline. \"Because even for you, Kar, this is completely nuts.\"\n\n\"I think everyone is just blowing it out of proportion,\" Karen replied, standing while everyone else sat in the room she shared with Lisa, her dorm mate of two years now.\n\n\"Um, I gotta agree with Janet,\" Lisa said, sitting on the floor, her legs bowed and the bottoms of her feet touching. \"I don't think I've ever heard of anything outside of a sitcom that was this weird.\"\n\n\"Girl, you don't know the half of it,\" Mona said, sitting on Karen's bed, legs crossed and kicking one knee back and forth. \"She tried to steal a favour I owed DeBourne in order to get me on board.\"\n\nJanet made a wry face. \"Y'didn't give it to her, did you? Those DeBourne favours and obligations are gold, y'know. That's like trading steak dinners in prison, you hold onto 'em.\"\n\n\"If you three are done...\" Karen said somewhat testily, standing in the middle of the room with her arms folded. She was considerably taller than all of them, and they were four best friends, but Karen was primus inter pares. There was no doubt who was in charge when the chips were down. \"There's a lot to work out still.\"\n\n\"Understatement of the year, princess,\" Janet snorted. \"And even if all four of us are involved, we're still way low on requisite numbers. If we're your only help, you're still screwed, blued and tattooed.\"\n\nThe three girls waited and watched Karen intently as she scowled at the floor, her prodigious mind racing to find solutions to her problem. She couldn't deny it, even the four of them were not nearly enough to pull this off. She needed more bodies.\n\n\"Well, first things first,\" Karen announced, deciding to tackle one part of the crisis at a time. \"Are you three in?\"\n\n\"I already told you I am,\" Mona muttered, shaking her head. \"My mama's gonna give me hail Columbia if she ever finds out, and how the Hell we keep this from becoming an international incident is beyond me.\"\n\n\"It won't be international, probably,\" Karen insisted. She looked at Lisa, who got flustered and flapped her arms uselessly for a moment before answering.\n\n\"Ohhhh, Kar, how'm I supposed to say no?\" the tiny redheaded girl whined. \"I'm your roomie and you're my best friend! How would it look if I didn't help?\"\n\n\"Terrible,\" Karen answered simply. \"Awful. Unforgivable.\"\n\n\"Damn, girl, you play hardball, don't you?\" Mona mused, making a wry face. Lisa was squirming like a worm on a hook. \"Be nice, you know she's gonna do it.\"\n\nLisa hung her head in defeat and nodded. Karen looked over at Janet who said nothing for several seconds. She seemed to be thinking this through very thoroughly. Mona made another wry face. \"If you took this long to make up your mind about sex, you'd still be a virgin, woman.\"\n\nJanet stuck out her tongue at Mona before looking up at Karen. \"Y'know that if this blows up, it'll ruin any chances I ever have of a career in law, right? I'll be lucky if I could get a job as a notary.\"\n\n\"But think about if we succeed,\" Karen pressed, giving them what she hoped was a pep speech. \"If we pull this off...\"\n\n\"If we pull this off, your family is greener than ever, yeah,\" Janet interrupted. \"It's not like we'll ever get any public credit.\"\n\n\"That... is very true,\" Karen admitted. \"But we four, we can do anything together, if we put our minds to it!\"\n\n\"I bet being clinically insane helps, and having an unfailing belief in yourself,\" Mona sighed. \"Fine, we're all in. But now what?\"\n\n\"Well, you three will have to come to the manor, obviously,\" Karen pointed out. \"And from there, we can... what?\"\n\nAll three of her friends were staring at her, dumbfounded. It was Mona who finally found her tongue. \"We're going with you to Blackwell Manor?\"\n\n\"And?\"\n\n\"That ginormous place you grew up in that is half the size of our entire campus?\"\n\n\"I believe that's the one in question, yes.\"\n\n\"We've never been to your place before, Kar,\" Janet stated. \"This is kind of a first, y'know?\"\n\n\"Well, I've never been to any of your homes before, have I?\" Karen reasoned. \"What's so different?\"\n\n\"I don't even know how to explain this to her,\" Mona sighed as she stood, followed by the other two rising to their feet. \"So now what?\"\n\n\"Well, I've only got room for one, since I drove down in the Quattro,\" Karen mused. \"Two of you will have to drive up there, so who is coming with m-\"\n\n\"NOT IT!\" Mona and Janet both yelped instantly, touching the pad of their index fingers to their noses.\n\nKaren shrugged. \"I guess you're with me, Red. Get dressed.\"\n\n\"Wait, what?!\" Lisa blurted, going pale and looking back and forth between Mona and Janet. \"Not fair! Why do I have to drive with Pinky Tuscadero?!\"\n\n\"Well, you are her girlfriend,\" Mona reasoned.\n\n\"She has a point, darling.\" Karen agreed.\n\n\"W- no, wait!\" Lisa blurted again, holding up a panicky hand to halt the proceedings and then pointing at her roomie. \"I- I dumped her, remember? We've been broken up for over a month!\"\n\n\"She has a point,\" Karen iterated.\n\n\"Sounds like the penance for her folly has begun,\" Janet laughed as she made for the door. \"Enjoy the rally, Li.\"\n\n\"I'll send the directions your way in a bit,\" Karen called.\n\n\"I know where the Bridle Path is, Kar,\" Mona replied, winking. \"I'll just look for the biggest house that screams 'Black people use rear entrance.'\"\n\n\"Hey now!\" Karen protested, but the duo was gone, and the door closed. She turned to look back at Lisa, who seemed very tiny and very alone now. \"Well? No time for dilly-dallying. Get dressed, spit-spot!\"\n\n\"I'll go find my crash helmet...\" Lisa moped, skulking off.\n\n***\n\nBlackwell Manor, February, the present...\n\nKaren was listening to the Ciaccona of Bach's Violin Partita No. 2 as she sat in the study. It was one of the rooms recently pulled out of mothballs, so to speak, and also one of her favourites. Relatively small and intimate, it was blessed with acoustics exquisite for listening to music. What was playing was a recording made of her many years ago that had been a favourite of her mother's. Her preferred antique chair and a strong cup of coffee made by Theresa complemented the mood perfectly.\n\nSitting in her lap was an old book, dating back to 1923. It was a copy of Omar Khayyam's Rubiyat, and it was the first birthday gift her husband had ever given her. Listening to Bach, drinking coffee, and reading Sufi poetry, this was as perfect a grey February evening as one could-\n\n\"Hey, mom,\" Alex said as he leaned casually in the entrance to the study. \"How's things?\"\n\n\"Just fine, darling,\" she replied, smiling warmly at the sight of her son. Her handsome, gifted and immeasurably wonderful son. Of all the gifts Michael had even given her, how could anything, anywhere, match Alex? \"What are you so reticent to tell me?\"\n\nHe sighed and looked at the floor, shrugging. How did his parents always know? \"That obvious, hm?\"\n\nKaren nodded and went back to reading. \"Maybe you don't notice, but when you're up to something, you have a tendency to lapse into using contractions in your speech in order to seem casual. You also speak to your father and I from an average distance of three meters, as if we'll smell your perfidy. But when you're not up to something, you just cruise on in and get 'all up in our grill', so to speak.\"\n\n\"I do?\" he queried as he approached her now, obviously busted. He wasn't accustomed to having a tell. After all, how had he kept his desperate love for Alexa off his parents' radar all last summer? Was this a new thing? He sat down in a chair near her and waited patiently while she finished reading.\n\nShe sighed contentedly at the sight of her son- Alexander Orion Dayraven DeBourne. He was the only child she'd had with her husband (so far), and he was her pride and joy, even if she used her Blackwell breeding to keep him in line when necessary. He was at least as smart as her or Michael, with an incredible gift for languages and music. Tall and strongly built, with a mane of golden hair, electric-blue eyes and a chiseled jaw, he was as handsome as he was charismatic.\n\nIf only he weren't wasn't such a snark-knight or a troll...\n\nShe closed her book and looked at him. \"Since Huey, Dewey, and Louie aren't with you, I assume this means that you're an envoy?\" she asked as she took a sip of her coffee. She loved the chicory root notes in this blend.\n\nAlex didn't even bother trying to be inscrutable at this point. \"Okay, so...\" he began, going over what he'd rehearsed. While his father was the ultimate authority in the DeBourne household, and Karen had always followed his lead when he asserted himself, Alex clearly knew that bypassing his mother was a dire misstep. She was a very wealthy physicist with ready access to strong acids and nuclear reactor cores, so hiding his body wouldn't be a challenge. \"This may sound strange, but...\"\n\n\"I wouldn't have it any other way, Alexander,\" she said simply, her elbow on the plush arm of her chaise and her chin on the back of her hand as she gazed at him. She knew her golden-amber eyes unnerved him, as they did everyone else (except her oversized husband), but she found it a useful way to keep him in line when he was growing up. She crossed one leg over the other and settled in for what she hoped was a good yarn, as only a DeBourne could spin. \"Do elucidate.\"\n\n\"Well,\" he began uncertainly. Karen batted her gorgeous eyelashes at him slowly, waiting to be taken on a narrative adventure. Michael wasn't around, so her son would have to do. He seemed to be thinking carefully, as if what should have been a walk in the park could quickly become the trek into Mordor. \"Jeanie's grandparents think she's married to a guy, so Jeanie and Freja want to borrow me to pretend that I'm her hubby. So, uh... Alexa and I need to go to Collingwood for a couple of days. Okay?\"\n\nKaren just looked at her beloved son for several seconds, letting him sweat. It wasn't often that she got to see a DeBourne male look out of sorts, so she enjoyed it while she could. It was the little pleasures, sometimes.\n\n\"Well, then,\" she said finally, standing and smoothing the front of her skirt before smiling down at him. \"I guess you'd best speak with Ari and have him help you forge a marriage certificate or two, oui? Shouldn't take more than a couple of minutes with all those shiny toys in his office.\"\n\n\"Really, mom?\" he almost blurted, standing hastily when he remembered his mother had stood up. Michael had taught Alex to always stand when any female member of the family stood, especially if they were older, not to mention his mother. \"D'you mean it?\"\n\n\"Of course, darling,\" she cooed, smiling and coming over to give him and warm and loving hug, her head and his shoulder. He smelled like a DeBourne, and it made her happy. \"You're a big boy now, and you have to look out for your peers, don't you?\"\n\nShe looked up at him now, smiling still. \"But keep it minimally illegal, Alex. Don't use my security systems for anything that I have to answer for. After all, Pickering isn't that far away, is it?\"\n\n\"Candu, mom,\" he said, nodding.\n\n\"That's my boy, and nice pun,\" she said sweetly, giving him an affectionate kiss on the cheek. \"Enjoy your life lessons, Alex.\"\n\nShe sauntered out of the room, looking forward to her son and her baby sister telling her how that fiasco would go down. She wandered down the hallway, humming to herself and stopping to appreciate a small bouquet of fresh flowers in a vase before moving on.\n\n\"Did your son find you, Mrs. DeBourne?\" Tatyana, the new seneschal asked, stopping and folding her hands primly in front of herself. \"He seemed to need to speak to you, and yet he was apprehensive.\"\n\n\"With good reason, Miss Orlova,\" Karen replied, nodding. \"He's going to pretend to be his friend Jeanie's husband for the duration of her grandparents' visit to Collingwood. Just think, four people aged eighteen to twenty trying to pull off a scam like that. What could possibly go wrong?\"\n\n\"One does wonder if you are speaking from experience, ma'am,\" Tatyana mused.\n\n\"More than my fair share, I'm afraid,\" Karen admitted. \"Come, have tea with me and I'll tell you the short version of it. The incident took place in this very abode...\"",
        "***\n\nLisa almost had her face pressed to the passenger seat window in awe as she looked out of the Audi coupe and up at the massive mansion in front of her. They were in the huge, circular front driveway, which she was reasonably certain was bigger than her parents' entire house. A tall pointy thing wrapped in tarpaulin against the winter weather dominated the center. Must've been a fountain, like she'd seen in her history books.\n\n\"Wow...\" she murmured.\n\n\"I know,\" Karen agreed, nodding from the driver's seat. \"Looks rather dreary in winter twilight, doesn't it? It looks much better during the day.\"\n\n\"As di bubbe volt gehat beytsim volt zi gevain mayn zaidah,\" the redhead muttered under her breath in muttered in response. \"I can't believe I didn't pee myself on the way over here. Do you know how embarrassing that'd be? To pee myself in front of this house? What if it saw me pee myself, Kar?\"\n\n\"Are you saying I'm not a good driver?\" asked her friend.\n\n\"You're an amazing driver, but this isn't NASCAR,\" Lisa said in exasperation, glad that she could feel her pulse again. \"You go like a zillion kilometers an hour through dense traffic and you're often driving with your knees!\"\n\n\"I have a perfect driver's record, thank you,\" Karen sniffed.\n\n\"Fighter pilots are probably the best pilots on earth, but that doesn't mean flying with them isn't terrifying,\" said the redhead. \"Was that revenge for me dumping you? Because I'll totally take you back if it means I don't have to go through that again.\"\n\n\"You made your choice, toots, live with it,\" Karen lilted, unconcerned. \"We'll wait for Remington and Mona to get here and then head on in. You can just calm your bladder in the meantime.\"\n\nKaren fixed her eyeliner in the mirror while Lisa sat back in her seat and regulated her breathing. Maybe five minutes later, headlights blinked their way up the driveway, and an old beater car trundled up toward them. It pulled up beside Karen's car, and Janet, who was in the passenger's seat, simply gaped at the sprawling edifice in front of her.\n\n\"Damn,\" Mona said as she got out of the car and came around, also looking at the manor. \"Do you have to throw out this entire driveway now because my car's touched it, princess?\"\n\n\"Oh, don't be like that, I've had uglier cars than yours profane this driveway,\" Karen answered as she got out, followed by Lisa. She hugged her two friends and then led them up the white steps and to the large front doors.\n\n\"So, what, we pull on a ringer three times and Lurch appears?\" Janet asked, looking around. It had grown dark, and the temperature was dropping.\n\nKaren fixed her with a look. \"No, normally Jordan would answer the door, smart-ass.\"\n\n\"Aw, I love Cadbury,\" Janet said sweetly, holding her hands to her heart. \"He's so formal, but he's always so attentive to you. It's like you've got your own Nana Dog.\"\n\n\"Maybe, but Nana flew the coop along with the rest of the Lost Boys this time,\" Karen muttered, unlocking the door and leading them inside. \"I've been betrayed.\"\n\n\"What, no Pennyworth?\" Janet asked, sounding hurt. \"But... who going to make tea and crumpets for me?\"\n\n\"Remington,\" Karen growled as she closed the door behind them. Her three friends were gaping around at the grand foyer. \"Well... welcome to where I grew up.\"\n\n\"Jesus, Mary, Joseph, and the donkey,\" Lisa breathed. \"How can even you afford all this, Kar?\"\n\n\"I cannot, thank you,\" Karen said flatly. \"It was built just before World War One, and I guess money went a lot farther back then.\"\n\n\"Your entrance is bigger than my parents' house,\" Lisa breathed, looking at the sculpted plaster moulding that bordered the ceiling and was covered in gold leaf. \"Remind me how are you not the enemy of the people?\"\n\n\"I believe the word is philanthropy, but I digress, I'm just a girl,\" Karen said simply. \"I guess we can find a room to sit in and discuss next moves, hm?\"\n\nShe led them down the Hall of Ancestors, and her friends tried to not let the endless faces staring down at them bother them.\n\n\"If you want to moon anyone or give them the finger, feel free,\" she said casually, not stopping. \"Heaven knows, I've done it often enough.\"\n\nAll three managed to refrain, and she brought them to one of the sitting rooms. She gestured for them each to find a chair and then sat herself. \"I can call for coffee or other drinks if you- damn...\"\n\nThe three girls smirked as Karen stood and sighed, composing herself. \"I forgot. Can I get you ladies any beverages? Maybe a light snack?\"\n\n\"I'll take a coffee, please.\" Mona said.\n\n\"I dunno, pop of some description, I'm not picky,\" Janet added.\n\n\"We've all seen your dates, no argument here,\" quipped Mona, making Janet stick her tongue out at her friend again. They all looked at Lisa. She thought for several seconds and then shrugged. \"Um... got any kosher wine?\"\n\nKaren considered. \"I probably have some cherry cordial, I can just tell you it's Manischewitz,\" Karen offered. She then turned and exited the room.\n\n\"D'you think they'd let us come and live here, since we're her best friends?\" Janet mused, looking around. This room was all dark wood panels, with plush antique furniture, and gilded edges. It felt old, but not worn, and was very comfortable.\n\n\"I can't imagine not getting mistaken for the help all the time,\" Mona sighed.\n\n\"Oh, don't be like that,\" Lisa chided. \"Karen hasn't got a racist bone in her body, and neither do her parents, we've met them. Besides, if they think you're the help, they're gonna expect me to do their taxes.\"\n\n\"Bitch, please, you're terrible at math,\" Janet snickered. \"Princess is better at math than anyone we know.\"\n\n\"Well, faster, maybe,\" Mona corrected. \"Even faster than DeBourne, but not better, as she keeps reminding us.\"\n\n\"Yeah, she really took that lesson to heart,\" Lisa agreed. \"I don't think my roomie is used to having her cute little tuchus handed to her, by anyone, ever.\"\n\n\"Fuck me, look at that sound system,\" Janet breathed, gazing at the towering unit that was spread out along a wall. \"Think she'd mind if we turn it on? Maybe she has some Whitney Houston?\"\n\n\"I vote for Bo Diddley,\" Mona piped up.\n\nThe both looked at Lisa, who scowled. \"What? Am I supposed to say klezmer music or something?\"\n\n\"Well, no Houston, no Michael Jackson, no anything modern and fun,\" Janet mused, looking through the compact discs that were slotted neatly into a long rack. \"But we have Belafonte, how 'bout that?\"\n\nHer friends nodded, and Janet began figuring out how to activate the beast before sliding the CD into the tray. It clicked back into the body of the stereo and she hit 'Play'.\n\n\"DAYYYYYYYYYYYYYYY-O!!!!!!\" Harry thundered, making Mona and Lisa both start in fright while Janet was knocked backward feet-over-head over the giant chesterfield some feet behind her.\n\nMona hurried over and found the volume dial, turning the sound down to possibly a twentieth of what it had been when the speakers had tried to liquefy Janet. She then went and found her friend behind the couch, lying on the floor and staring up at the ceiling with her feet in the air. Her eyes were wide as dinner plates and her face seemed frozen in a rictus of shock.\n\n\"I see you three found the stereo system,\" Karen observed as she walked back into the room, holding a silver tray with everyone's drinks on them, along with some fancy cookies and small treats. \"Is Remington alive?\"\n\n\"Now y'know what it's like to drive with her,\" Lisa sniffed, looking at Janet. \"Serves you right for throwing me to the wolves earlier.\"\n\n\"Harry Belafonte killed me,\" Janet murmured, still staring. \"Not how I pictured going, to the Banana Boat Song.\"\n\n\"Her brain's working, but I think her bod's dead,\" Mona sighed, trying to move her friend. \"Now what?\"\n\n\"Unfortunately, we don't keep a massage therapist in-residence,\" Karen mused.\n\n\"Well, no, neither do I, after all,\" Lisa added, shrugging.\n\n\"But even if we did, they would have no doubt bailed on me tonight, in my time of need,\" Karen grumbled. \"So no help there. Tell you what, let's relocate to the hot tub in the solarium.\"\n\n\"You have a fucking jacuzzi in a solarium?\" Janet asked, finally turning her head, and looking at her friend from the floor. That got her attention.\n\n\"Just a little one,\" Karen admitted, almost blushing. \"It only fits six, maybe eight.\"\n\n\"It only fits six, maybe eight,\" Janet muttered as Mona helped her to her feet. \"And none of us brought bathing suits, princess. And we'd all look ridiculous in any of yours.\"\n\n\"That's true,\" Lisa agreed, since she was a small B-cup at best, as opposed to Karen's annoyingly bouncy and gravity-defying D's.\n\n\"Well, we've all showered together, and seen each other naked,\" Karen reasoned, shrugging. \"We'll just go al fresco. I see Red nude every night, after all.\"\n\nLisa blushed now.\n\n\"I'll sweeten the deal and throw in some champagne,\" Karen offered. \"It's not like my parents are going to notice a bottle or three missing from the cellar.\"\n\n\"I'm in,\" Mona replied instantly, almost dropping Janet. \"I love champagne.\"\n\n\"I'll pretend it's kosher,\" Lisa said, shrugging. \"Can champagne be kosher?\"\n\n\"Pretty sure Princess isn't, but you dine out on her every night,\" Janet quipped, standing now. Mona burst out laughing while Lisa blushed redder than her hair.\n\nKaren just rolled her eyes and led the trio out of the room, leaving Belafonte singing to nobody.\n\n***\n\nA solarium...\n\n\"Gawwwwd, this is Heaven...\" Janet sighed in bliss, settling into the foamy water as jets churned around them. It was one of the fancy models that had seats built into it at various points. \"I dunno why you ever leave this place, Kar. I'd just sit around and be idle rich all day if I were you.\"\n\n\"My family would not stand for that,\" Karen pointed out, sitting across from Janet and tipping her champagne glass her friend's way for emphasis. Each of them had occupied a side of the tub, and they were all quite naked. \"In my family, you pull your weight and become a great success, or you get shunted off to some small island with a stipend where you won't embarrass us ever again.\"\n\n\"Wow, harsh way to have a posh life,\" Mona said, sipping at her bubbly. She loved champagne; it was a very rare indulgence for her, and one she never passed up on, since her parents were both teetotalers. \"But yeah, gotta agree with Remington, I'd be really hard-pressed to leave. Hell, I'm not sure I can now.\"\n\n\"When my family gets back, that'll change,\" Karen sighed. \"Why do you think I chose to live on campus instead of commuting?\"\n\n\"Because you're clinically insane, duh,\" Lisa answered, sipping her drink and making Janet and Mona giggle.\n\nKaren frowned and reached out to touch a small button on a panel. Without warning, a small jet pointing up directly in the middle of the seat Lisa was sitting on activated. The redhead whooped in shock and leaped out of her seat, splashing water and champagne everywhere. Mona and Janet both burst out laughing while Karen looked smug. Lisa was standing in the middle of the tub, very naked, and breathing heavily, her eyes wide in shock.\n\n\"Ohmigod, do me next!\" Janet said eagerly, looking at Karen in excitement while she braced her hands on the edge of the tub. \"Me! Do me next!\"\n\n\"Not a chance, you harlot,\" Karen said sternly, causing Janet to slouch back in her seat and pout. \"You'll wear the jet out.\"\n\n\"This is not my night for staying calm!\" she gasped, giving Karen a hurt look. \"Why?\"\n\n\"Well, you did just call her clinically insane,\" Mona pointed out.\n\n\"Oh, right, the mean stuff I said,\" Lisa murmured, pursing her lips as she realized she probably had that coming. Karen was already pouring her friend another flute of champagne, the incident seemingly forgotten now that she had been avenged. Lisa took it, although she forgot to sit, probably not trusting that Karen had turned the jet off yet. \"But let's be honest, now that Kar's explained everything to us, our entire night has been pretty-\"\n\nLisa stopped talking and gawked up at something in front of her and behind Mona, back toward the interior of the house. She then squeaked in fright and ducked under the water, taking her champagne with her. A shadow loomed over the jacuzzi.\n\nKaren turned her head slightly, looking annoyed, while Janet smirked. Mona seemed uncertain.\n\n\"It's right behind me, isn't it?\" she said in a quiet voice.\n\n\"How come you to be in my house, sirrah?\" Karen asked as Mike towered over them all, even more than normally, since they were sitting in a hot tub set into the floor.\n\n\"You asked me to come to your place, and I rang the doorbell but nobody answered,\" he said, looking down at the three women, who were obviously naked. Lisa still hadn't come back up, several tresses of her red hair floating on the surface in the center. \"The door was unlocked, so I just came in.\"\n\n\"And how did you know to find us here?\" she queried, still staring up at him.\n\n\"Where else would you be?\" he reasoned, shrugging. \"This place had to have a hot tub with a scenic view, and I somehow doubt you brought these three here to practice the choreography for Mickey wherever you're hiding the dance studio. And Remington can't even dance; all her best moves are horizontal.\"\n\nMona snerked while Janet blushed.\n\nMike looked around again, his great, shaggy mane of golden hair tossing side to side. \"Why do you even live on campus when you could be here?\"\n\n\"Holla!\" Mona called, holding up her glass.\n\n\"That is none of your business, good sir, especially since you have yet to explain how you found us, not to mention your way here, without directions from me.\"\n\nMike looked slightly bemused. \"I know where the Bridle Path is, Gordon. And the giant rock at the entrance to that thousand kilometer-long driveway of yours has the word 'Blackwell' carved into it in letters so large that Stevie Wonder can hear them.\"\n\nKaren scowled at the water. He had a point, those letters were absurdly large. She'd never liked them.\n\n\"Why am I here, Gordon?\" Mike asked. He was wearing his customary jean jacket, under which was a T-shirt advertising the classic rock band Deep Purple. \"If I wanted to look at wet, naked girls, Ping has a considerable library of bootlegs on the subject. And I always have access to Remington.\"\n\n\"It's true, he does,\" Janet agreed readily.\n\n\"Are your surroundings that anathema to you, DeBourne?\" Karen queried, not quite done looking at him as he towered over everyone.\n\n\"No, but it's nearly eleven at night, I am elbow-deep in sticky string numbers, and I'm on something of a deadline,\" he answered.\n\n\"Then why are you here at all?\"\n\nMike frowned. \"You said you needed my help, that it was something important. Why do you think?\"\n\nKaren didn't answer for several seconds, but Mona and Janet were almost certain she was blushing as she looked at the water churning and foaming in front of her. \"I-\"\n\nThe moment was lost when Lisa burst up from the water, gasping very loudly, her red hair whipping about in her desperate bid to breathe. The three girls all held their hands up to shield their faces while Mike just looked on in bemusement.\n\nLisa finally managed to control herself, and then looked at Karen sheepishly, holding out her champagne flute. Karen rolled her eyes and filled it again. Lisa also chose at that moment to remember that she was standing naked in the center of the hot tub, and that Mike could see her in all her slender, B-cup redheaded Jewish glory. Now he'd even know she'd started shaving for Karen.\n\n\"S-sorry I'm naked,\" she said weakly, looking up at him and trying to cover herself with one hand.\n\nMike just shrugged. \"I'm not.\"\n\nJanet leaned in hurriedly as Lisa wobbled and then seemed to faint, catching her a split-second before she submerged again. She wedged the swooning redhead back in her seat and then looked at Mike. \"Y'sorry I'm naked?\"\n\n\"Not at all, nor am I surprised,\" Mike said simply. This earned a giggle from Mona, while Janet sat indignantly back in her seat and turned her face away from Mike, her nose in the air and her arms crossed.\n\nBut she kept her legs apart in case Karen decided to punish her with that jet.\n\n\"Gordon, it's late,\" Mike said firmly, indicating he was done wasting time. \"Now why am I here?\"\n\n\"You... might want to sit for this,\" Karen suggested.\n\nMike shook his head. \"I'll stand, it makes quick exits easier if I find you're up to something truly insane.\"\n\nKaren closed her eyes for a moment, and then began to explain. The three girls already knew everything, but decided to listen again, just in case it made more sense the second time around.\n\n\"My parents have gone to Italy on vacation for a month,\" she began. \"While they were gone, a business opportunity came up. A big one. With Chinese industrialists.\"\n\nMike just listened, saying nothing. Karen continued.\n\n\"I immediately latched onto the prospect, but it proved harder than I expected to set up, and before I knew it, they were coming here, to the mansion, to meet my father in person and conduct the business dealings with him personally.\"\n\nStill no response.\n\n\"They're coming here to meet my impressive blond father, and his family,\" she finally clarified.\n\nMike turned and began walking away.\n\n\"DeBourne!\" Karen said with urgency, standing up. The other three girls just looked at her, stunned. Had she forgotten she was naked and very wet?\n\nMike stopped just before reaching the door of the solarium and sighed. He slowly turned around and walked back, standing where he had before, and just stared at her, seemingly unfazed by her nudity.\n\nJanet slowly stood up and turned toward Mike, letting him see her naked as well. Without looking, Karen pointed back at the seat Janet had just vacated, her meaning clear. Sheepishly, Janet sunk back down into the tub and stayed quiet.\n\nSlowly, Karen stepped up out of the tub and came over to him. Meanwhile, Mike had reached over and taken a large, plush towel from a rack and handed it to her, allowing her to wrap herself in it and conceal her body. Without another word, they both turned to the door and walked out together, with Karen leading the way.\n\nBack in the solarium, there was only silence. The women didn't exactly seem to know what to say. Finally, Janet broke the silence and pointed at something.\n\n\"Could, um... one of you press that jet button for me?\" she asked hopefully.\n\n ***\n\n\"Where is everyone?\" Mike asked, looking around as they walked down a hallway together. \"I mean, I've never been here before, but I'm pretty sure it's not supposed to feel this creepy and empty.\"\n\n\"They all left,\" Karen replied, trying to keep the bitterness out of her voice. \"Once they found out that I was planning to somehow host this party of Beijing businessmen and convince them that they'd just negotiated a mutually beneficial deal with my father, they all flew out the door, promising to be back in a week, if there was an estate to come back to.\"\n\n\"Smart folk,\" he mused. \"Even your butler? Jordan?\"\n\n\"He's a seneschal, first of all, and yes, even him,\" Karen lamented. \"I did not see that coming.\"\n\n\"Let me get this straight,\" Mike said, towering over her as they walked together. She took him to a small arboretum, one she liked to stand in when she needed to destress. It smelled of lavender, and it gave her a sense of serenity when she needed it most. \"Against all odds, you've convinced a bunch of Chinese tycoons to come here and negotiate business deals with your father, despite the fact that he is patently not here.\"\n\nShe nodded.\n\n\"And he is unaware of any of this.\"\n\nAnother nod of admission.\n\n\"And you've already roped those three into helping you with this sham, but you thought you'd ask me to pretend to be your father? Because we're both blond?\"",
        "\"And impressive,\" Karen added.\n\n\"In very different ways, Gordon,\" Mike pointed out. \"Why?\"\n\nKaren almost fussed as she tried to explain herself. \"Because I'm always trying to prove myself to that man.\"\n\n\"It's not like you can tell him,\" Mike felt obliged to mention. \"If this goes to Hell, you'll wish you'd gone with it. And if you achieve the impossible and somehow pull this off, he's still going to be outraged once he finds out. I don't know him well, but I think I understand him enough to know that he won't react favourably.\"\n\n\"I know,\" Karen sighed, closing her eyes. \"I'm stuck, DeBourne. I didn't expect everyone to bail on me. It's been a hard month.\"\n\nMike nodded. She hadn't been kidding about that. Earlier in February, Karen had tired of her science department, Mathematical, always losing out to Theoretical for funding, simply because quantum anything made Theoretical physics cool. There was indeed an undeserved bias, and when no one would correct the issue, she'd taken matters into her own hands.\n\nShe'd subtly introduced flawed equations into the Theoretical department's submission, effectively destroying it, and clearing the way for another department to finally have a chance. Unfortunately for Karen, Mike had, in the space of mere days, managed to undo all the bad calculations, and rebuild the entire theorem from the ground up, and once again, Theoretical took top spot.\n\nIt had been a hard loss for Karen, but she'd also proven her point to the person who could help her most, Mike. The two of them agreed that they would force the Science faculty to stop favouring Theoretical and become systemically unbiased and be objective.\n\nAnd it seemed to be working.\n\n\"I guess it has, hasn't it?\" Mike agreed. He should know; that month nearly killed him as he threw his body, mind, and soul into correcting all the damage she'd done. It had taken everything out of him, so the fact that she'd created the bad theorems so easily, for a project she wasn't even familiar with, was absolutely terrifying.\n\n\"So, then, this is your opportunity to atone for that stunt earlier this month,\" she decided, looking up at him.\n\n\"Wait, what?\" he blurted, looking at her in confusion. \"Me atone?\"\n\nThe bronze-haired beauty nodded.\n\n\"For what, exactly?\"\n\n\"For demolishing my poor department's chances, yet again, to get top spot in the department, and get the funding it needs. It was your fault it didn't happen.\"\n\n\"Now hold on, Norma Osborn,\" Mike said firmly. \"We agreed to work together to make this competition less necessary!\" Mike protested.\n\n\"And it might work,\" she affirmed. \"But that doesn't mean that you didn't crush our chances. You personally, not those wet willies you hang around with.\"\n\n\"And somehow, this requires me to atone by pretending to be your father and somehow pull off a business deal worth God knows how much with a bunch of Chinese industrialists?\"\n\nShe nodded.\n\nMike pinched his eyes as he spoke. \"Gordon, even for you, this is utter madness.\"\n\n\"That's almost exactly what Jordan said,\" Karen pointed out. \"You haven't been talking with Jordan... have you?\"\n\n\"What, me and the butler?\" Mike replied, rolling his eyes. \"Oh, constantly, Gordon, usually over high tea with strawberries and clotted cream at the Royal York.\"\n\n\"There was no call to be sarcastic,\" Karen grumbled. \"It was a fair question.\"\n\n\"Gordon, only someone who could get themselves into a situation this unhinged is liable to ask a question so absurd,\" Mike pointed out. \"And since you are the only living woman in Western Christendom with the resources and ability to actually get themselves in a situation this unhinged, the list of people likely to be asking me is considerably narrowed. To exactly you.\"\n\nKaren scowled at the floor. \"So I guess that's a no.\"\n\n\"Are you kidding?\" he laughed. \"Take on a bunch of pompous industrialists who do the bidding of Beijing? I wouldn't miss it for the world!\"\n\nKaren didn't allow herself to faint in relief.\n\n***\n\nBlackwell Manor, the present. A certain solarium... \n\n Karen moaned in pleasure as she sat in her husband's lap, thrusting back and forth, her pussy gripping his massive cock like a warm, wet vise. With every inward push, she flexed her ass cheeks hard, tightening around him. Her large breasts pressed to his chest, and her fingers curled in his golden mane of hair as she looked deep into his eyes.\n\n\"Mmmm, happy anniversary to me,\" she breathed, leaning in and giving his ear a nip.\n\n\"And this is the anniversary of what?\" Mike asked, reaching down and squeezing her ass cheeks as she ground and thrust against him.\n\n\"It's the anniversary... of you pulling my bacon out of the fire... yet again...\" she breathed, shivering as he squeezed her with his powerful hands. He was sitting on the edge of the hot tub, his feet in the water, while she rode on him, the noise of the churning jets masking their heated fucking.\n\n\"The Beijing scam,\" he said, smiling. \"I remember it well. But you've returned the favour countless times over, may I point out.\"\n\n\"That's why it's happy anniversary to me,\" Karen panted, loving the feel of his cock so deep inside her, stretching her wide. \"That day means so much to me.\"\n\nThe solarium was kept warm, since the plants that surrounded the hot tub were all tropical species, and the room itself was half-set into the back lot, with large insulated glass walls and windows looking out. Mike had made sure that Tatyana knew everyone was to stay away for some time, giving them privacy.\n\nBecause he hadn't forgotten exactly how important this day was.\n\n\"Yessssss,\" Karen hissed, her whole body trembling. \"Maybe today is the day you make me pregnant, Michael...\"\n\n\"I sure hope so,\" he agreed, pushing down on her hips and spearing himself in farther, making her arch her back and groan loudly at the glass ceiling.\n\nSince she was leaning back now, still pumping against him, Mike took the opportunity to bend his head and sucked one of her nipples into his mouth, and she keened in delight. He fondled and groped her while she rode on him, lost in pleasure together.\n\n\"You might want to turn around,\" Mike whispered, pausing in molesting her breast. \"Our audience might appreciate it.\"\n\n\"Mmmmm, I do so love having a secret audience,\" she purred, nodding. She let him sit back and then she turned around on his lap, now facing out from her husband. He was still deep inside her when he pulled Karen back against his chest, fondling her breasts while making her moan loudly as she started moving up and down, her core muscles working hard. She turned her head and kissed him hungrily, their tongues tangling as they made love.\n\nThis was no doubt an eyeful for their secret voyeur.\n\n***\n\nThe Master Suite...\n\nTrilby walked into the huge bedroom, ready to do her afternoon check on the state of things. She'd been paying attention and working hard these past two weeks, learning everything Tatyana would teach her, and even picking up points from Valentina, the other housekeeper.\n\nShe was still the cool, laid-back hippie chick, and that was no fa\u00e7ade, but that didn't mean she couldn't be competent as well, did it?\n\nShe was about to start looking for things to dust when she heard a slight sigh from somewhere else in the room. Or maybe it was a tiny moan?\n\nBehind her habitual round-rimmed Lennon sunglasses, Trilby raised an eyebrow as she slowly moved forward, approaching the source of the noise she'd heard. This took her to the far side of the bedroom, to the massive windows that overlooked the atrium and the back lot of the property. There was a shape by the long sill of the window facing the other wing.\n\nTrilby paused as she found Valentina on her knees, leaning against the sill, her chin resting on her forearm and muffling her sighs by sighing into her sleeve. The skirt of her uniform was hiked up around her hips, and her panties were around one of her ankles. Her other hand seemed to be moving between her legs. She was watching something out the window.\n\n\"Well now,\" Trilby said just loud enough to be heard. The unexpected voice caused Valentina to yelp and she threw herself aside, tumbling away from the window and lying against the wall. Her eyes were wide, and her chest was heaving. Her legs were spread wide, and Trilby was treated to the involuntary sight of her co-worker's shaved pussy, glistening from her naughty activity.\n\n\"Sorry, didn't mean to spook you,\" she said, not quite sure what to do, except for perhaps stare at Valentina's face and not between her legs. \"Good thing it was me who came up and not Tatyana or one of the others.\"\n\n\"Darnit, Tril,\" Valentina wheezed, her heart still thundering in her chest. \"You nearly gave me a heart attack. Are all hippie chicks so creepy quiet?\"\n\n\"Probably just me,\" Trilby replied, shrugging slightly. \"Buuuuut, I gotta wonder, why're you workin' your tang here in our employer's bedroom? Not like I don't hear you at night in our own room.\"\n\nVal blushed furiously, called out twice on her personal pleasure habits. She remembered to close her legs, however. \"I...\"\n\nTrilby waited silently for an explanation- not ot that she was sure she wanted one, mind.\n\nValentina sighed. She was more comfortable around Trilby than the others yet, although they were all getting along well. But she and Trilby had gotten used to seeing one another in various states of undress, and even total nudity. They had an unspoken rule that they'd do their best to simply not notice.\n\nTrilby had to admit, though, it was hard to not notice Valentina. She was a well-built girl, short but with sizable breasts and sensual curves, and Trilby was just bi enough to enjoy noticing from behind her glasses. Hopefully Val didn't notice her noticing.\n\nValentina continued. \"I was in here seeing if anything needed doing.\"\n\n\"My job today,\" Trilby pointed out. \"You were doing the kids' room.\"\n\n\"They're not kids, Tril, be nice,\" Val protested, not liking how this conversation was proceeding. Especially since her pussy was still tingling like mad. The curse of the Prospero women, she guessed.\n\n\"Y'haven't gotten to the part where you explain why you were in here,\" her companion pointed out. \"And neither of us has all day, y'know.\"\n\nValentina continued. \"I came in here and was just looking to see if the sills needed any love, and I happened to look down...\"\n\nTrilby gave her co-worker a skeptical look, but then Valentina nodded her head in the direction of the window facing east. Trilby walked over to the window, looked out, and then down.\n\nBehind her glasses, her eyes went wide. Not far below, in one of the sunrooms, she could see Mr. and Mrs. DeBourne, on the edge of the whirlpool, making love. She was sitting in his lap, thrusting back and forth while his huge hands held her in place.\n\n\"Oh, wow...\" she murmured, shaking her head for a moment to stop herself from staring and then looking back at Valentina. \"So, what, y'saw our employers doing the wild thing, and you decided it'd be fun to peep on 'em and get one off? You are lucky it was me who found you.\"\n\nVal looked flustered. \"Well... d'you blame me? I mean, look, Tril...\"\n\nTrilby sighed and looked again, making sure she wasn't directly in her employers' line of sight. By now, Mrs. DeBourne had turned around in her husband's lap and was facing outward, leaning back against him so that Trilby had a good view of how absolutely glorious the woman's body was. Her large breasts wobbled hypnotically, while she ground her hips, her core muscles undulating beneath her flawless skin. Mrs. DeBourne kept her pussy shaved, except for a thin strip of bronze hair just above.\n\nMr. DeBourne was as imposing as his wife was gorgeous. His massive hands massaged her large breasts, and nearly covered them. His body was powerfully built, with muscles everywhere. His chest was huge, broad and chiseled, and his shoulders seemed like they would touch the opposite walls. His arms were bigger than Trilby's thighs, possibly her waist, which was a frightening thought.\n\nAnd that tool between his legs was an absolute kidney-cracker. She must have been staring hard, because she could make out exactly how wide it split his wife, and her face showed her uncontrollable pleasure.\n\n\"Okay, I can't blame her,\" the hippie girl admitted readily. \"But Val, what if someone else caught you, instead of me?\"\n\n\"I kinda thought that through,\" Val said, blushing and still lying back against the wall, her legs closed. \"Glenda took Tatyana and Theresa into town to pick up some things, Ari's geeking out in his office, Andrea's down in Sub-Basement Three, and Marie is in in the greenhouses with Tunde and Dave. That's everyone accounted for. So... when I saw them going at it, I... kinda...\"\n\n\"Took the opportunity,\" Trilby finished, shaking her head slightly. \"Kinda thought it through is an overstatement, y'know.\"\n\n\"Look, I'm ahead of schedule with my chores, and there's... there's no harm, right?\" the cute brunette reasoned hopefully.\n\n\"And if they saw you?\" Trilby asked.\n\nVal thought about that. \"I... don't think they'd mind too much?\" I mean, they're gonna be plenty visible to anyone walking through the atrium and back lot, right?\"\n\n\"I'm bettin' they were counting on nobody would,\" Trilby sighed. \"I hope for your sake that you're right and they don't mind bein' spied on.\"\n\nValentina said nothing, but looked up at the window rather yearningly.\n\n\"What, really?\" Trilby exclaimed. \"You just got caught and all you can think about is finishing up?\"\n\n\"I was really close before you scared the daylights outta me, Tril,\" Val whined. \"I can't just turn it off, it takes me than a spook to close these valves.\"\n\n\"Maybe I'll have Andrea tighten them for you,\" muttered Trilby.\n\n\"That's not funny,\" Val pouted. \"And yeah, I kinda wanna finish, so I can get on with things.\"\n\n\"So, what, I just let you continue?\" asked her co-worker.\n\nVal blushed. \"Un-unless you wanna keep a lookout at the door, warn me if anyone's coming.\"\n\n\"You did not just ask me that, did you?\"\n\n\"I... yeah?\" Val replied meekly.\n\nTrilby turned and headed back toward the door, but as she approached it, she slowed down, sighed, and hung her head, coming to a stop. Seconds passed before she looked back at Valentina in annoyance. \"Well, c'mon,\" she said testily. \"Whaddya waiting for, an engraved invitation from them?\"\n\nVal's eyes widened for a moment in surprise before she got on her knees and scrambled back to the window, assuming her former position. To her delight, they seemed nowhere near done, and Mrs. DeBourne writhed on her husband's lap, his massive cock almost splitting her in two. She pressed her mouth to the sleeve of her uniform as she hunched forward slightly, her skirt around her hips again, and the fingers of her other hand buried deep in her wanton pussy. Her eyes were riveted to the erotic scene below.\n\n\"Can't believe she's still a virgin,\" Trilby muttered to herself, folding her arms and leaning against the doorframe, 'keeping watch'. \"What a waste.\"\n\nBack at the window, Valentina was whimpering as she watched, her thumb playing with her clit while two fingers slid back and forth inside her, her womanhood making slick, wet noises. Her heart was pounding in her chest as she watched Mrs. DeBourne writhe up and down lustily on her husband's lap, her mouth indicating that she was being quite vocal, even if Val couldn't hear it up here on the third floor.\n\nHis hands were still mauling her breasts, and one of hers was wrapped around his neck while she kissed him feverishly. Her free hand was massaging her clit while he skewered her, flying over the little nub expertly, meant to enhance what she was already feeling many times over. It had to be such a perfectly choreographed dance with these two by this time.\n\nBack at the door, Trilby noticed she was feeling warmer than normal. She could barely hear Val's little whimpers, but more than that, she could hear the wet sounds her giz was making. It sent a tingle through Trilby, who bit her lip and tried not to think about it, reminding herself that she apparently volunteered for sentry duty.\n\nBut she also noticed that only one of her arms was crossed over her chest now, and the hand at the end of said arm was gripping her breast rather tightly. Her other hand had found fit to snake down to the front of her skirt, and was pushing against her panties through it, as if to tell what lay beneath to calm down.\n\nShe was definitely going to have to take care of this later.\n\nValentina was panting now, her hand soaked from working her pussy furiously as she watched the action below. The bronze-haired goddess was now grinding down shamelessly on her husband now, who was driving her wild with the way her handled her. She bucked her hips and Val saw her pussy working around the huge tool it held. They were both trembling, straining against one another, trying to hold one for precious seconds...\n\nValentina squeaked and clenched her teeth, pressing her hips against her hand as she began to cum, her eyes glued to the scene below. Mrs. DeBourne was crying out in ecstasy, her body rigid while Mr. DeBourne's cock seemed to almost swell and throb, and Val could tell he was cumming inside his wife.\n\nGod, she wanted that to be her.\n\nOn the other side of the room by the door, Trilby shivered a tiny bit, squeezing her eyes shut and breathing out through her nose while she pressed her fingers at hard as she could against her clit, making herself cum. She knew she'd have to change her panties now, and it was a good thing she and Val were in charge of their own laundry.\n\nShe stood up straight, took a deep breath, and wiggled down the hall toward the stairs, determined to make it to their room without delay.\n\nBack in the suite, Val was leaning against the sill, breathing heavily, and sweat dampening her skin from her hairline to her feet. Her heart thudded in her chest, and she felt the wonderful, liquid bliss of orgasm slowly coursing through her. She pulled her fingers out of her pussy and kissed them, sucking the cum off her hand.\n\nWith another deep breath, she straightened herself up and peered out the window again. Mr. DeBourne had settled into the water, his wife still in his lap, and now doubt still impaled on him. It was wonderful to look at, but the show was over. Val leaned back on her haunches and sighed, feeling much better now.\n\nShe used her cleaning supplies to wipe the hardwood floor where she'd been kneeling, followed by the sill she'd been leaning on, and the general vicinity, as if it had just received a normal cleaning. She hiked her panties back up, shivering as they touched her sensitive pussy, and then wiggled out of the room, unable to describe exactly how wonderful this job truly was.\n\nShe really hoped that Tril was enjoying this as much as she was.\n\n***\n\nMike and Karen sat lazily in the tub together, with her still pinned to him by his hard cock. She loved how he could stay hard after orgasm, just letting her feel him inside her, pulsing and sending ripples of pleasure through her body.\n\n\"Wonderful,\" she whispered, nuzzling her nose against his cheek while her hand caressed his jaw. \"Do you think Ms. Prospero enjoyed the show?\"\n\n\"It was a twofer after a bit,\" Mike mentioned, his hands still on her heaving breasts. \"Trilby showed up and found her.\"\n\n\"Oh, goodness,\" Karen giggled. \"She must have scared the daylights out of the poor girl.\"\n\n\"Trilby watched for a while, then Valentina was back, and she finished herself off when we did. I'm thinking it's been a good day for her?\"\n\n\"Are we going to take her as a lover?\" Karen asked. She liked the idea, but it was her husband's decision. Anything she could do to make this man happy, she'd do it. He was her world, after all.",
        "\"Pretty sure she'd work free for a decade if we did,\" Mike chuckled. \"It's what she wants more than anything, to lose her virginity to you and I.\"\n\n\"Mmmm, then when the moment is right, maybe we'll see to that,\" Karen murmured, still floating on a river of bliss, and so very desperately in love with her husband. \"Anything that makes my mighty lord happy.\"\n\n\"And anything for my princess,\" he whispered, drawing her in for a kiss.\n\n***\n\nBlackwell Manor, three decades earlier... \n\nIt would be a busy day, after a night of sleep like none of the visitors had ever conceived of. They'd each been given their own rooms, with very comfortable beds that were a dream come true to sleep on. Mike, who was too big for any of the beds in the various staff rooms and other guest suites, had finally been assigned the master suite, which belonged to Karen's parents, because it contained the only bed big enough to fit him, and she needed him in fighting shape the following day.\n\n\"You'll be staying in here,\" she said at the entrance to the room, gesturing at the vast expanse while she stood beside her. The double doors were so wide that there was actually space for the two of them to fit for once. \"Will it meet your needs?\"\n\nShe half-expected him to seem very offended by the wealth and luxury that surrounded him, but then she remembered that he hadn't even blinked as he passed through the rest of the Manor. Shouldn't the bedrooms be at least as opulent as the rest of the place?\n\nShe didn't know whether to be annoyed by his lack of proletarian outrage, but she was in no position to pick a fight with him right now either. She needed him.\n\n\"I'm looking forward to trying that bed,\" he said simply, nodding. \"Not very often I see one that can accommodate me.\"\n\n\"Help me through this, DeBourne, and I'll make sure your dorm room is ninety percent plush mattress when we get back,\" she said with a tone of certainty. \"The en suite bathroom has its own shower and hot tub, in case you need to relax, and-\"\n\n\"I'll probably just freshen up and hit the sack, to be honest,\" he said simply. \"I'm gonna need all the sleep I can get if I'm gonna pretend to be a zillionaire business magnate.\"\n\nI'm perfectly willing to loan you all of my sleep as well if it helps, Karen thought. You'll never appreciate how much of this hinges on you, DeBourne. If you thought I pushed you to your limits before...\n\n\"I'll leave you to it, then,\" she said, nodding. \"I'll send somebody up to wake- I mean, one of the girls or myself will come by to wake you in the morning.\"\n\n\"That's fine, just don't send Remington,\" Mike said as he began pulling off his shirt, revealing his titan chest and making Karen's temperature rise significantly. \"You know what she'll try to do.\"\n\n\"Valid point. I'll be sure to do it myself or send Heyman, since she's gay,\" Karen agreed, turning and walking away. \"Sleep well... father.\"\n\nMike shook his head and walked into the room, looking around. He may have wanted to explore and marvel at everything, but there'd be time for that later. He was well aware of exactly what was at stake here. If this scam blew up, the damage to the Blackwells would be immeasurable. He was also reasonably sure that imitating people and conducting business deals on their behalf without their permission was a crime. He didn't need Janet to tell him that.\n\nHe'd stripped down to his boxers and laid his clothes over a chair. A few minutes after his ablutions, he was crawling into the titanic bed, amazed at how much room there was. He got greedy and sprawled out in the center, his arms and legs stretched wide as the cushy mattress seemed to hug him and bid him good night. He sighed contentedly and closed his eyes...\n\nOnly to open them seconds later. The lights were still on. Desperate to not leave his cocoon, he peered around the walls, looking for light switches, but seeing none.\n\nHe clapped his hands together on a hunch, but nothing happened. Frowning, he looked at the ceiling.\n\n\"Lights out.\"\n\nSuddenly he was enveloped in darkness. He grunted and settled back in to go to sleep.\n\nNo wonder Gordon's crazy, he thought to himself as he began rapidly losing consciousness. I wish I was crazy...\n\n ***\n\n\"All right, DeBourne is ensconced in his room,\" Karen began.\n\n\"You found a dungeon big enough to hold him?\" Janet quipped, making Mona and Lisa snicker.\n\n\"Very funny, you trollop,\" Karen sighed. \"He is seen to. Now we should all get to bed; we'll need all the sleep we can get. The rooms I've picked for you are right next to mine, where Heyman and I will be staying.\"\n\n\"What, she gets to stay with you in your big suite and ginormous bed?\" Janet protested. \"Why does Heyman get to?\"\n\n\"Because she has sex with me,\" Karen pointed out. \"Are you filling in?\"\n\n\"Well, no,\" Janet said somewhat awkwardly. \"But... well, you've told us before that the bed is easily big enough for all four of us, and you promised us if we ever did a sleepover, we'd all use it, right?\"\n\nWell, Karen had promised that, she had to admit. Granted, she hadn't anticipated these exact circumstances when she'd made said promise, it was just meant to be a fun girls' night when she would let her closest friends see into her past, and part of how she became who she was.\n\n\"Gotta be honest, Kar, I think we're all kinda scared,\" Mona added, giving her friend a wan smile. \"I don't think even you have been involved in an international scandal before, and if we five sophomore university students screw up, that's exactly what happens, y'know?\"\n\nKaren nodded, because she didn't want to hear herself say that it was true. She'd committed herself to this insane course of action, and she didn't dare fail. She was always so confident that everything would work out her way, because it always did, and she was taking bigger and bigger chances as she walked toward her destiny.\n\nBut less than two weeks ago, she'd been thwarted by someone who was at least her equal, and it had been a bitter pill to swallow. Was that why she'd arranged this insane endeavour? To make up for the sting of that loss?\n\nShe wished she had DeBourne's fearlessness. When she'd made it plain that she intended to scam Chinese industrialists, no doubt with strong connections to Beijing and the People's Communist Party, he just laughed jovially like some Nordic god and said he was in without a second thought. The crazier the scenario, the more he wanted in, to prove himself against it.\n\n\"I'm scared, Kar,\" Mona confessed. \"And I want my best friends with me tonight.\"\n\nKaren sighed and nodded. \"Well, I wasn't really planning on having sex with Heyman tonight anyway, since we'll need all the sleep we can get. Fine, we'll all use my bed. I guess I can refrain from sleeping naked for one night.\"\n\n\"I'm sure we can adapt,\" Janet laughed as they all stood up and left the lounge. They'd been drinking champagne, and Karen would make sure that there was a hangover remedy available for the morning, just in case.\n\nThere was no room for error, after all.\n\nShe led them up to the third floor and down the halls to the end of the west wing, where her suite of rooms awaited. They were all gaping in wonder (even more than before) as she opened the doors and gestured for them to enter.\n\n\"Hoooooleeeeeeee shit...\" Janet breathed as she looked around. \"This bedroom is bigger than all three of our dorm rooms put together.\"\n\n\"Are the walls really dusky pink?\" asked Mona, gazing at the d\u00e9cor. The wallpaper and paints, subtly complementing one another, were accented by pink gold leaf, and all the ornate furniture fit into the theme as well.\n\nLisa almost seemed at a loss for words. \"Kar, I... I know I tease you about you being the enemy of the common man and such, but... what was it like? Growing up like this, I mean. Sleeping in this room when you were a little girl.\"\n\n\"I never wanted for anything, but I had to work for everything,\" Karen answered, feeling ambivalent about these surroundings, as she always had. \"I do not belong to some classless, nouveau-riche family; I can trace my ancestry all the way back to the time of William the Conqueror. The first Blackwell we know of is mentioned as a prominent landowner in the Domesday Book.\"\n\n\"Damn,\" Mona said, still stuck looking at the wallpaper, but listening intently. \"I thought I was kinda cool for tracing my mom's family back over a hundred and sixty years, but isn't that around nine hundred? Talk about blue blood.\"\n\nKaren nodded. \"Indeed. Nine-hundred exactly, in fact. And in this family, you weren't allowed to be dead weight. Perform to your utmost, always. Earn this life or be banished.\"\n\n\"Sounds harsh,\" Janet mused.\n\n\"My parents love me endlessly, but they made sure that I was my best and most accomplished self,\" Karen sighed. \"So my life was perhaps one of idyllic luxury, but I never dared fail, either.\"\n\n\"That'd screw me right up, no lie,\" Mona said. \"Trying to be worth more than all this constantly, just to validate myself.\"\n\n\"Hey, uh,\" Lisa interrupted, getting everyone's attention. \"Not to rain on the parade, but I don't think we're welcome in here...\"\n\nKaren looked over at the bed, and indeed saw her gorgeous Persian cat scowling at them from her plush pillow. The beast was the single most spoiled vertebrate alive on the planet. She barely tolerated anyone, including Karen, who was her theoretical owner.\n\n\"Oh, yes, Bianca,\" she sighed. \"There might be some negotiating involved if we want to share the bed with her. She's used to having it to herself since I moved on campus. Don't be upset if she doesn't take to you, she dislikes every-\"\n\n\"Oh, nonsense,\" Janet cooed as she walked up to the bed and introduced herself. To Karen's complete amazement, Bianca stood up to greet Janet and allowed the law student to pet her. Karen had never seen anything like it before. \"She's just a pampered little sweetie! Isn't she? Isn't she?\"\n\nThey all gaped as Janet picked the beautiful cat up and held her overhead, making ridiculous noises at the animal before bringing her down and cuddling her close. The damn cat was actually purring, loudly. \"She's just a pretty, pretty princess, yes she is.\"\n\n\"And here I thought she only knew her way around dick,\" Mona said, watching with a raised eyebrow. \"What gives, Remington?\"\n\nJanet looked up and smiled as she sat on the edge of the bed, caressing Bianca under her chin, which was normally a murder trigger. \"I grew up with five older brothers, and there's almost ten years between the youngest one and me. They hardly ever had time for me, so I got really good with animals and pets to compensate.\"\n\nShe absolutely beamed and hugged Bianca tight, rocking her. \"I've got my cuddle buddy for the night. You guys'll have to work something out for yourselves.\n\nMona sighed and looked at Karen. \"Guess it's us. You and me, with a Heyman filling?\"\n\n\"That works for me,\" Karen replied, shrugging.\n\n\"Hey, don't I get a say in this?\" Lisa protested, trying to sound offended.\n\n\"No,\" said both her friends, making her blush and go silent.\n\n\"Okay, let's get ready,\" Karen announced. \"We need as much sleep as we can get, we've got a lot to do, and tomorrow's our only full day of prep.\"\n\nAt Karen's behest, the girls all got ready for bed. Karen indeed proved accommodating by wearing a long nightshirt to bed, as opposed to her normal nudity. Lisa and Mona wore similar long shirts, while Janet was just wearing a T-shirt and panties while she snuggled Bianca on the far side of the bed. The other three cuddled close, appreciating the contact.\n\nBefore long, they were all asleep. Lisa was sandwiched between Karen and Mona, who were hugging across her. The redhead, sound asleep on her back, had a happy smile on her freckled face, her hands held just above her like little cat paws. Karen knew that meant she was truly content.\n\nSo be it, because they all needed to be in the exactly the right frame of mind for what came next.\n\n***\n\nBlackwell Manor, the present...\n\nTatyana looked at the couple over her teacup before setting it down on the saucer and placing it on the table. Across from her sat Mike and Karen on a large chesterfield, and Jordan sat in a chair on another side of the table they shared while the strains of Haydn played in the background. He smiled in amusement at his successor's expression.\n\n\"I must admit, if I may be so bold, that I would have expected Mister DeBourne to be the one who was always coming up with strange schemes that could spell disaster,\" she said softly. \"Were there many others like this?\"\n\n\"More than a few, one way or another,\" Karen said, smiling. \"And I remember them all fondly. I was always roping Michael into bizarre situations, and always with the excuse that he was the person with the absurd talents I needed to complete whatever the task was. Truth be told, however, they might also have been an excuse to keep him nearby, even if I thought there was no chance for us.\"\n\n\"You know things are out of whack when I'm the reasonable and sane one,\" Mike added, making Karen smirk up at him and nudge him gently in the ribs. \"Well, to be fair, Mona was probably the most level-headed of the group.\"\n\n\"It was not the little Jewish girl from the sounds of it, certainly,\" Tatyana agreed, nodding.\n\n\"I must admit, I do miss Lisa, my dear,\" Jordan mused, adding a lump of sugar to his tea. \"I miss them all, really, but I had a soft spot for her. Is she still married and living in Idaho?\"\n\nKaren nodded. \"I'm hoping she can make it up for the housewarming in March, along with the other two. We'll have this place together by then, and having them around will be such a thrill for old times' sake WE have a lot of surprises to spring on them, after all.\"\n\n\"A pity that Bianca and Odo are not around for Ms. Remington to coddle,\" Jordan said. \"They were very fond of her.\"\n\n\"Janet scooped up all the rejection I got from Bianca and turned it into affection,\" Mike chuckled. \"I wouldn't be surprised if she got along with Blurgle and Grundle.\"\n\nTatyana made a face. \"Those are Master Alex's hermit crabs, yes?\"\n\nMike and Karen both just nodded.\n\n\"I have now encountered his rather... eccentric sense of humour, but I do not yet know which of you to blame for it,\" the seneschal admitted.\n\nThe married couple pointed at one another before they began laughing. Jordan just shrugged, knowing that the blame lay squarely on both their shoulders. It wasn't anything he hadn't been used to for some decades now.\n\n\"You are not still trying to pull scams like this occasionally, are you?\" Tatyana asked.\n\n\"No, I think my wife has that out of her system by now,\" Mike said. \"And I personally was never prone to insanity.\"\n\nKaren looked up at her husband. \"You got drunk and stood on top of a section of the Berlin Wall and sang 'Men of Harlech' while they knocked it down underneath you. I was there. Thank God you weren't wearing your uniform.\"\n\n\"I had a bigger crowd than Hasselhoff did,\" Mike sniffed.\n\n\"You were a serviceman?\" Tatyana queried, taking another sip of her tea.\n\nMike nodded. \"Kar and I both were, from the late Eighties to the mid-Nineties. I was Airborne, she was infantry, attached to sciences and psychology.\"\n\n\"It's a nice way of saying 'the pretty girl wasn't allowed to fight, so she got to teach',\" Karen added, leaning forward and whispering to Tatyana. \"We were both stationed out of Petawawa. I thought my father was going to have a stroke when I told him I was enlisting with Michael.\"\n\n\"He didn't approve of military careers because they were too pedestrian?\"\n\n\"That, and he hadn't fully processed my recent announcement of my relationship to this big lug,\" Karen answered, tilting her head at her husband. \"A military stint is not unheard of for Blackwell men, but his little girl...\"\n\n\"Even though we both left as commissioned officers,\" Mike pointed out. \"I was a captain, and Kar was a lieutenant.\"\n\n\"Maybe if I'd joined the navy,\" his wife mused, tapping her finger against her cheek as she looked at the ceiling. \"Somehow convinced the Canadian government to rename one of its ships the Thunderhawk.\"\n\n\"Ah, yes, I have met her,\" Tatyana said, nodding. \"She is the young woman suspended in the library, yes? Miss Prospero and Trilby do not know what to make of her.\"\n\n\"She's only one of three we have here,\" Karen explained. \"There's two older ones, both in storage in the basement. They're considerably older and more delicate, so they don't stand up as well as the one you see. The one in the library adorned the Thunderhawk that fought with Nelson at the Nile and Trafalgar. Had the War of 1812 gone on longer, it might have come to deal with the Americans along with Wellington.\"\n\n\"So it is only just over two hundred years old, is that all?\" Tatyana quipped.\n\n\"The oldest one survived the battle against the Spanish Armada, so yes, Trafalgar is the baby of the group,\" Karen said simply, letting Tatyana pour more tea for her. \"As for what happened next morning...\"\n\n***\n\nMorning, Blackwell Mano, 1987r...\n\n\"Angie, thank you so much for coming!\" Karen said as she swept the woman into a grateful hug.\n\n\"I wasn't about to say no, even if I don't know what's going on yet, and this is my week off,\" the older woman replied, smiling at the beautiful young lady in front of her. \"Oh my goodness, is this where you really live? When I saw it from the outside, I thought I was being pranked.\"\n\n\"No, this is where I was raised,\" Karen said, gesturing for her to enter. \"I live on campus currently.\"\n\n\"Why?\" Angie asked, still looking around in awe.\n\n\"I've been asked that a lot recently,\" Karen sighed. \"And I'm hoping what I'm about to ask you doesn't send you flying out the door, flapping your arms and screaming.\"\n\n\"I'll manage to not do that somehow,\" Angie said as she walked arm-in-arm with Karen through the manor to a study, where Lisa, Mona, and Janet were waiting. \"But what is it that you want?\"\n\n\"It gets better every time I hear it, girl,\" Mona said from her chair, drinking more champagne. \"Go on, Kar...\"\n\nKaren drew a deep breath, standing and holding Angie by the hands, in case she tried to bolt. Angie was the kitchen manager for the Scott Mission, not far from the university, and the previous fall, Karen and her friends had helped her through a major crisis. She felt deeply indebted to this remarkable young woman. She would hear Karen out.\n\n\"I'll just be blunt,\" Karen began. \"My father doesn't know it, because he's on vacation in Europe, but I am trying to negotiate a business deal with tycoons from China, and I am stuck using myself and a small core of people to somehow pull this off, scamming them into thinking that they're negotiating with my father.\"\n\nAngie stared at Karen for some seconds before glancing over at her three sitting friends, who all simply nodded. She looked back at Karen then. \"Um, okay. What... do you want from me?\"\n\nKaren smiled wanly. \"When I told the staff my plans, they all fled for the hills, all of them. I need someone to prepare a business dinner one would entertain Chinese multimillionaires to.\"\n\n\"Oh, you just want me to cook?\" Angie said, looking relieved. \"Well, I can do that, sure. I'll have a few of my best people join us and we'll just whip everything up and stay out of the way, right? How many am I cooking for?\"\n\n\"Maybe twenty, at most,\" Karen said, sounding incredibly relieved, while her friends all sighed in relief as well. \"Trust me, my kitchen has everything you'll need. What would you like to make? Keep it Western, since they're coming to us.\"\n\n\"Well, it's been a while since I've made my veal ossobuco,\" Angie mused. \"Say, broasted potatoes and some colourful root veggies or asparagus. You guys can handle the drinks, right?\"\n\n\"I'm sure I'll work that aspect out,\" Karen almost gushed while Mona, Janet, and Lisa laughed and hugged one another. \"I'm so happy you agreed, Angie, I was in a real bind.\"",
        "\"Psh, nonsense, I've barely any role to play at all,\" Angie said dismissively. \"Besides, if this all goes askew, I can just say I'm the hired help for the evening and know nothing, right? But I do have one question.\"\n\n\"Anything, just ask,\" Karen said readily.\n\n\"Your friends are helping you, yes?\"\n\nThe three nodded.\n\n\"And this is supposed to be a business meeting with your father, right?\" Angie reasoned. \"Gotta admit, none of you are gonna pass for a man.\"\n\n\"I already have someone lined up for that, actually,\" Karen announced, nodding.\n\n\"Who, aside from that giant blond lunatic who lumbers around your campus, is insane enough to try and imitate a zillionaire businessman on a moment's notice?\" Angie asked.\n\nNone of the girls replied.\n\n\"Oh, God,\" Angie breathed. \"You somehow conned him into doing it? When was the last time you saw a business magnate who was built like Hulk Hogan, honey?\"\n\nKaren looked at her friends, eyebrow raised.\n\n\"A wrestler in the WWF, Kar,\" Janet explained. \"Big muscles and loud all over, but less hair than DeBourne.\"\n\n\"Everybody's got less hair than DeBourne,\" mentioned Mona, making Lisa snicker.\n\n\"How did you convince him?\" Angie asked.\n\nKaren shrugged. \"It didn't take much, to be honest. The moment he found out that he'd be taking on Beijing, he was all over it like a dirty shirt.\"\n\n\"Lunatic,\" Angie sighed. \"Look, I have no idea if even you can do this, Karen, but I owe you and I'll happily help. Just let me and two of my people stay out of the way and cook, and you have a deal.\"\n\nKaren hugged Angie again in relief. \"Thank you so much...\"\n\n\"Where is Paul Bunyan, anyway?\" Angie asked, looking around. \"The floor isn't shaking, so he's not in the building.\"\n\n\"He's gone back to campus,\" Karen explained. \"He has an exquisitely tailored suit that he looks amazing in.\"\n\nHer three friends all smirked at one another. Karen failed to notice.\n\n\"He'll bring it back here, and then probably start getting into character,\" she continued. \"Knowing him, he'll pick up any books he can find on the subject of international business deals and read them on his way back.\"\n\n\"Will that be any help?\"\n\n\"If it was anyone else, no,\" Karen said, shaking her head. \"With him, God only knows. It can't hurt, though.\"\n\nHer dilemma was by no means solved, but every tiny bit helped, didn't it?\n\n***\n\nTatyana looked at Karen rather intently. \"How, if one might ask, ma'am, did you manage to pull this scam together at all? What sequence of events allowed you to get even this far?\"\n\nKaren sighed and tried to decide how to answer. The event in question had been over thirty years ago, so there was no harm in being completely honest. But from her point of view, so many of the pertinent details were maddeningly dull.\n\n\"Although I was not an actual member of my father's companies and firms,\" she began, \"I knew just about everyone who worked for him, especially the higher-ups. Or, more to the point, they knew me, the hyper-intelligent, inquisitive, and precocious young girl who was constantly getting underfoot when she visited any of the offices. They were used to me, and more or less thought nothing of me being around.\"\n\n\"So as you grew up, you were privy to a lot of things,\" Tatyana mused. \"And you learned quickly, via osmosis.\"\n\nKaren nodded. \"I knew a lot more than I should have, and essentially was armed with much bigger guns than I was capable of using as yet. More than that, people began owing me favours, one way or another.\"\n\nThe seneschal thought about what her employer was saying. \"You more or less had carte blanche, since your father trusted you implicitly, even if you were not involved in the company's dealings. You still managed to know what was going on.\"\n\n\"Often better than even he did, since I was unhampered by details and being mired daily in the subject, I always had a fresh perspective and eye,\" Karen agreed. \"In any event, I spied an opportunity that no one else had glanced at, soon after the departure of my mother and father for Italy.\"\n\n\"And you got it in your head that this was a good idea.\"\n\n\"Maybe I was still stinging from my drubbing at the hands of this lout some weeks earlier,\" Karen said, tilting her head at her giant husband. \"But I needed to prove to myself that I was still in charge of my own destiny. I know, it makes no sense, but I was rather given to flights of fancy.\"\n\n\"Are you sure it was yourself you were trying to prove things to?\" Tatyana asked, looking over her teacup as she sipped. Her meaning was clear.\n\nKaren smiled and leaned into Mike's side. \"I am pretty certain that I was trying to show off for this man here, even if I couldn't admit it to anyone, including myself. In any event, I managed to orchestrate a series of calls and negotiations about getting this deal done, before my parents came home. The window was small, and the Chinese jumped on it. Too quickly.\"\n\n\"Goodness, so they insisted on the meeting ahead of whatever your schedule was?\" Tatyana queried, pouring more tea for herself. She then looked at Jordan. \"And you abandoned her? In her crazed hour of need?\"\n\nJordan cleared his throat rather uncomfortably. \"I seem to recall thinking that if I helped her, she would not learn anything.\"\n\n\"And if she succeeded, she definitely wouldn't learn anything,\" Mike chuckled. \"Failure is the better teacher.\"\n\n\"Like you'd know,\" Karen snorted before returning her attention to Tatyana. \"I basically had all the right people doing my bidding putting it together, but nobody knew what anyone else was doing. If I had my way, it would all be over before anyone figured it out, and then the results would be too green and convenient for anyone to protest.\"\n\n\"You really thought this could possibly work?\" Tatyana asked.\n\nBy way of response, Karen spread her hands out and looked around. \"I'm here, aren't I? I assume Jordan told you what my father was like about incompetent people and failure.\"\n\n\"That people who embarrassed the family were shipped off to remote resort islands to live on a comfortable stipend so that they could never cause trouble again,\" Tatyana said, nodding. \"So you essentially got your father's company, in his absence, to broker a deal to meet with Chinese businessmen, and intended to conduct the affair yourself, without anyone knowing.\"\n\nKaren nodded.\n\n\"And you convinced a bunch of teenagers to help you.\"\n\nAgain, the mistress of Blackwell Manor nodded.\n\n\"How did the Chinese fall for any of this?\" Tatyana asked finally, still perplexed.\n\n\"Well...\" Karen began, folding her hands in her lap.\n\n***\n\nBlackwell Manor, February 1987...\n\n\"You've been losing some weight in the right places; this suit is fitting you better than it did last time I saw it on you,\" Karen mused as she adjusted Mike's suit while he stood in front of a full-length mirror. She could hear he was about to protest, so she chimed in before he could. \"Have you tweaked your workout? It shows.\"\n\n\"Oh, well... yeah, I guess I have,\" Mike answered, trying to not sound pleased. He gently flexed his arm, his giant bicep bulging, yet somehow not tearing the fabric or looking ridiculous within it. \"I mean, we wouldn't want the suit to look wrong tonight, would we?\"\n\n\"No, sir, we would not,\" Karen said lightly, smiling to herself while she smoothed out the lapel. \"You look as sharp as the day we fitted it to you.\"\n\n\"Hey, if that's what it takes to pull this off,\" he agreed, determination in his voice. \"How are we on time?\"\n\n\"Fine, I guess, although there's still a lot to do,\" Karen said, grimacing slightly as she stood behind him, making sure the suit was immaculate. She hoped her tone didn't betray her concern. His suit was the one part of this endeavour that had thus far proved flawless. \"Angie says they're on schedule in the kitchen and everything looks great. Apparently the layout and all the equipment available is a dream come true.\"\n\n\"Hard to imagine when there's a jacuzzi just down the hall to relax in,\" Mike quipped, checking himself out in the mirror. \"So you think I'm ready?\"\n\n\"Oh, not even close,\" Karen said emphatically. \"All I said was that your suit was ready for this event. You, on the other hand, Enkidu...\"\n\nHe looked down at her and raised an eyebrow. \"You intend to screw with my hair, don't you?\"\n\n\"You're getting shaved and I'm doing something with that mane of yours,\" she replied, brooking no argument. \"You cannot meet them having five o'clock shadow, nor with hair that a Celtic warrior or a wild horse would be insanely jealous of.\"\n\n\"Hey now,\" Mike protested, but Karen was having none of it. She didn't have time to debate DeBourne's grooming habits. He was doing this her way, end of story. When she needed to know how to rough it by eating twigs and beetles, then he could run the show. \"So what do you plan to do?\"\n\n\"Relax, I'll probably just use some pomade to slick it back so that it looks more contained, and then give it tiny trims here and there to assist. But I promise, once you wash out the goop, you'll be back to your shaggy glory, Aslan.\"\n\nShe turned him around and assessed him again, looking up and down and then nodding. \"Good. Now go to my parent's bathroom and wait. I'll be along in a minute. Try not to break anything.\"\n\nHe gave her a wry look before turning and walking off in the direction instructed. She didn't want to be ordering him around, it felt very wrong, but she needed to keep him off-balance for now, so that she could get him in the proper headspace. If he tried to get there on his own...\n\nShe headed down to the kitchen to check on Angie and her crew, who were busily making all the food and seemed to have things well in hand. Their job was to prepare this magnificent feast, trundle if up on carts and in chafing dishes, and it would be served at the table by the single attendant in the room.\n\nAnd if the guests asked why there were so few servants, it would be explained to them that these negotiations were simply too valuable and too sensitive to allow any but the most trusted of employees be privy to it. Everyone else had been given the night off. It only made sense, didn't it?\n\n\"How are we doing?\" she asked as she swished back into the anteroom where the girls were getting ready. There were piles of outfits everywhere, and they seemed to be at their wits' end.\n\n\"Kar, is nobody in this house shaped like an average woman?\" Janet groused, holding up one dress after another. \"Seriously, most of these tits are too big for me! I'll need to stuff cantaloupes down the front to fit properly.\"\n\n\"And you and I are about to have words, princess,\" Mona announced as she approached Karen. \"Because I know you are not gonna make me wear a maid's outfit, right?\"\n\nKaren said nothing.\n\n\"Tell me that never even crossed your mind, girl,\" Mona warned. Karen looked at Janet, who shook her head.\n\n\"Pass,\" the brunette said. \"You know how clumsy I can get.\"\n\nAll three of her friends were looking at her intently, and Karen felt the hair on the back of her neck go up.\n\n\"What?\" she asked suspiciously.\n\n***\n\n\"I almost dread asking what happened next, but I simply must know,\" Tatyana said, almost on the edge of her seat while she looked at Mike and Karen intently.\n\nAt some point, several other members of the staff had joined the group, standing around expectantly and waiting to hear more. Valentina was practically leaning over the back of Tatyana's seat, her chores obviously forgotten. Ari was standing nearby, smirking, while both Glenda and Andrea were leaning against the wall. Trilby waited near the doorway into the room.\n\n\"What happened next?\" asked Tatyana.\n\n\"Some hours later, our visitors finally arrived...\" Karen explained.\n\n***\n\nMeanwhile, back in Decepticon Central...\n\nThe doorbell had rung, and Karen slowly walked toward the great doors, taking a deep breath. How? How had this gone so very wrong?\n\nSomehow, she had been reduced to the role of the maid, the lone employee entrusted with keeping her mouth shut about these secret dealings. Her three so-called 'friends' had all agreed that she was best suited for the role amongst them, which didn't make much sense. She had anticipated helping Mike, her 'father', in getting these negotiations handled. And she wasn't going to be doing that when she was the hired help.\n\nA maid.\n\nA French maid.\n\nNamed Mitsou.\n\n\"Why am I a French maid?!\" she'd protested.\n\n\"Because you speak French fluently, duh,\" Janet had said simply. \"I mean, yeah, you also speak Arabic and Russian, but you don't exactly look Arabic, y'know?\"\n\n\"What was the problem with me being a native English-speaking maid if I'm to be the maid at all?!\" she'd shot back.\n\n\"Well that's just boring, isn't it?\" Lisa giggled. \"And it always makes me wet when you speak French.\"\n\n\"I thought it was when I spoke Russian that your knees got weak,\" Karen pointed out.\n\nLisa shrugged. \"What can I say, I get gooey when you start speaking. Go get ready, Mitsou.\"\n\nKaren stopped now and looked at herself in a mirror in the grand foyer- on such short notice, she'd had to borrow one of Angelique's uniforms, and it looked ridiculous on her. Frantic adjustments had allowed Karen to somehow wiggle into it (with the help of a lot of baby powder), and final adjustments were finished while she was wearing it.\n\nHer shining bronze hair was framed by a maid's lace cap, while her large bust was barely restrained by the corset top. She was showing an absurd amount of cleavage. The waist had been taken in, accenting her almost hourglass figure, and the skirt, which normally fell past the shorter Angelique's knees, rested somewhere on her thighs, showing off her long dancer's legs, clad in sheer stockings.\n\nWhat had she done to deserve this?\n\nAnother deep breath, and she walked toward the doorway, steeling herself. She twisted the handle and opened the huge wooden doors, the February twilight banished by the overhead lights directly in front of the door, along with a heating unit to keep visitors warm.\n\nStanding in front of her were ten Chinese men, the youngest of whom was likely in his late twenties, and the oldest in his late fifties. They were all wearing heavy coats to protect themselves from the Canadian winter.\n\n\"Good evening,\" said the youngest man, whom she guessed was the fluent English speaker, based on his diction. \"We are here for the business meeting and dinner with Mister Jonathan Blackwell and his family?\"\n\n\"Mais bien s\u00fbr,\" she said in a lilting French accent while she curtsied slightly, as she'd always seen the staff do when answering the door. \"Please, follow me...\"\n\nShe allowed them all to come in, and then took their coats quickly, depositing them on hangers in a small room off the side of the foyer. Her guests were looking around in varying degrees of wonder at their surroundings. While they were no doubt all wealthy themselves, they probably had not had that much exposure to Victorian and Edwardian luxury, even in Hong Kong. No, these men were from Beijing, and this would have quite the effect on them. Good.\n\n\"Gentlemen, if you would,\" she said in her French accent, indicating they should follow her. She led them out of the grand foyer, and then down the Hall of Ancestors, taking her time so that they had plenty of opportunity to stare at the patriarchs who lined the walls, portraits and busts alike. \"My name is Mitsou, and I shall be looking after you this evening.\"\n\n\"It is very quiet,\" mentioned the youngest man. \"Why are there so few people in a house that is so big?\"\n\n\"My employer, Monsieur Blackwell, he thought it best to give the rest of the staff the night off, oui?\" Karen replied, trying to talk with her hands, because that's what French people did. \"I was retained because of my subtlety and devotion to confidences. Given the nature of your dealings, he thought it best if as few people as possible were around.\"\n\n\"Sensible, yes,\" stated the eldest man, whom she perceived to be the lead in this endeavour. He walked toward the front of the group, preceded only by the youngest man, and with the others gathered around him.\n\nRemember what your father had always said about the way the Chinese do business, she thought to herself as she led them toward the formal dining room. Everyone has a place in the strategy, a mission, and they are reliant on groupthink. Individualism is not a social norm, even in business. They'll always look to the leader for their answers. \n\nThey rounded a corner and came through a set of open doors, leading them into the dining room. Around the long, formal wooden table, nearly twenty places were set, but currently only four of them were occupied. The people awaiting them all stood, and the Chinese delegation could not contain their awe. The incredibly striking maid with the hawk-like golden eyes was unusual enough, but Mister Blackwell was totally unexpected.\n\nThe man they'd come to do business with was gigantic, a head and shoulders over the tallest of them, and most of the businessmen would come to his sternum. Within his immaculate suit (it had to be Savile Row), he was powerfully built, huge all over. His blond hair was formed back, revealing a high forehead, and his eyes were a piercing electric blue.\n\nHe was terrifying. This man was the mogul, the mandarin, the taipan, of Blackwell Industries.\n\nAnd what a worthy adversary he would be.\n\n\"Welcome,\" he thundered in a deep voice as he came around the table. \"Allow me to introduce myself. I am Jonathan Blackwell.\"\n\n\"I am honoured, Mister Blackwell,\" said the senior businessman, stepping forward now and holding out his head. \"I am Zhao Liang.\"\n\n\"The pleasure is mine,\" Mike said amiably, accepting the proffered hand. He made sure not to engulf his guest's entire hand in his own, but shook it politely for some seconds.\n\nZhao observed and then smiled up at Mike. \"So... you are human after all.\"\n\nNot one to be left with nothing to say, Mike replied. \"Indeed. And there's twice as much of me as there is of you.\"\n\nThe guests all chuckled, including Zhao. Karen watched silently from nearby, observing everything. She only hoped she could pass any subtle hints as might be helpful to DeBourne over the course of the evening, based on her observations.\n\nMike then made his way through the other men present, introducing himself while the youngest man gave all their names to him. Karen's keen eye saw at least two of the men subtly smell their hands after Mike had shaken them, pretending to wipe at their faces or touch their noses.\n\nThey're so used to bowing, instead of the personal contact of Western business. Even after all that tradition, humans still try to mark one another's scent, to assess friend or foe. What will they make of DeBourne? This must be disconcerting for them. \n\n\"Please, come and meet my family,\" Mike said grandly, gesturing at the women around the table, who were all standing and waiting patiently. \"First, my cousin Florence Blackwell, who does much of her business in France, but is looking at the east to open up her options.\"\n\n\"Pleased to meet you all,\" Janet said, beaming a smile and holding out her hand to be shake. There was a pause before the youngest man shook it, followed by Zhao taking the bullet and doing the same on behalf of his team. It would have to do.\n\nFemale business moguls?\n\n\"This is my second cousin Brianna, from the Harcourt-Blackwells,\" Mike continued, indicating Mona, who simply nodded her head by way of greeting.\n\nThere was another pause, and Zhao tilted his head slightly. \"She is a Blackwell?\"\n\nMike and Mona both nodded.\n\n\"A negress?\"\n\nKaren eyes widened and she went into instant mental damage control mode as she saw Mona's eyes harden slightly, and Mike stood a little taller, waiting to see what happened next.",
        "\"Maybe a little strange for you,\" Mona said finally, smiling as politely as she could. \"But I assure you, gentlemen, I've come by my business savvy honestly, and my stocks speak for themselves... Halas And Batchelor, Nelvana, Rankin-Bass, Blue Sky, Pierrot...\"\n\nIs she really just rhyming off the names of animation studios and hoping they'll fall for it?! Karen screamed internally.\n\n\"And finally, my lovely wife, Miranda,\" Mike said grandly, gesturing to Lisa, who was clad in a stately green dress and wearing pearls. By contrast, Mona and Janet were both wearing smart skirt-suits they'd found and that fit them.\n\n\"Ah yes,\" Zhao said, coming forward and bowing to her politely. \"Our research told us to expect an impressive blond man and a lovely red-headed wife. I can see that we were not mistaken. Thank you for having us in your home.\"\n\n\"Oh, my pleasure,\" Lisa almost squeaked, nodding her head and smiling, her freckles dancing around her face. \"Welcome to our home, gentlemen.\"\n\n\"Let's start with drinks in the study,\" Mike announced before turning to look at Karen. \"Mitsou, we'll need three bottles of the Krug Clos, please. And the Belgian crystal. Meet us in the bar.\"\n\nKaren's eyes widened slightly. \"M-monsieur, the Krug Clos?\"\n\nMike's smile was more of a smirk. \"The Krug Clos de Mesnil Blanc du Blancs, yes. Now hurry, girl.\"\n\nKaren curtsied rather stiffly and turned to walk out of the room and head for the wine cellar. She was going to kill DeBourne. The Krug Clos was close to three thousand dollars a bottle, Canadian! She could barely feel her fingers as she touched the door of the spirits room. Was she having a stroke?\n\nThe dimly lit room stretched on for some meters, but it might as well have been kilometers, because the passage of space and time meant very little to her at the moment. She stopped and pinched her eyes, knowing she had to focus. Time was not on her side.\n\nShe'd been down here countless times before with her father, or the sommelier, who taught her where to find everything, as well as the characters of the wines and spirits, and their rarity.\n\nAnd that oversized gorilla had just instructed her to bring three bottles of one of the most expensive sparkling aperitif wines on the planet. How on Earth was she supposed to hide that? Controlling her breathing, which felt very shallow to her, Karen walked through the rows, arriving at the Sparkling Wine Aperitif section, which was next to the Champagne Aperitif section.\n\nShe turned her head and looked at a stout, locked wooden door at the back of the aisle she was in, where things were kept chilled. At least she didn't have to get anything out of there.\n\nShe found the Krug Clos, and steadied her fingers as she took three bottles of it from their slots, before returning them. She pulled away and sagged heavily against a free space on the wall, sighing.\n\nDirectly in front of her was an opened bottle of zinfandel. She took the bottle, yanked the cork out with her fingers, and took a long, stiff pull of the strong red before exhaling loudly and stopping it again. She gathered the three bottles of Krug up and headed out of the room to get the bucket and the serving wagon.\n\nIf she survived this evening, DeBourne would not.\n\n***\n\n\"They called you Mitsou?\" Tatyana asked, raising an eyebrow. She looked over at Marie, who had joined the small crowd recently. \"Is this a common name?\"\n\n\"No, not as such,\" the French woman replied. \"I cannot think of any instances where I knew a girl with the name.\"\n\n\"At least you didn't call her Fifi,\" Valentina added, still standing behind Tatyana's chair. \"Would've made her sound like a poodle.\"\n\n\"I am willing to bet that Mrs. DeBourne felt more like a sabretooth that night,\" the seneschal said before looking at Mike. \"And how on earth did you know that she had Krug Clos available?\"\n\nMike shrugged. \"I just guessed, to be honest. It was hard to imagine her place not having something like that, and I read about it in a society magazine I found in her parents' room the night before.\"\n\n\"See? Incorrigible,\" Karen said, tilting her head toward her giant husband as he sat next to her. \"What chance did I have?\"\n\n\"Are you talking about that night, or not falling in love?\" Tatyana queried.\n\n\"Maybe both,\" Karen admitted while those gathered snickered. Even Trilby was smiling. \"But you must all be parched, standing here listening to me prattle on.\"\n\n\"Yes, I was wondering that too,\" Tatyana mused, turning and looking at her staff. \"Am I to understand that you are all finished with your duties?\"\n\n\"I'm sure they can catch up later, Miss Orlova,\" Mike said easily, waving off the concern. \"They might as well know what went on in this place, and any lunacy yet to come their way.\"\n\n\"I have every confidence that they will bring their own special brand of lunacy into the fold, sir,\" Tatyana replied, turning her head slightly to look up at Valentina. The younger girl cleared her throat and tried to stand still. \"So then, you were compelled to bring several thousand dollars worth of sparkling wine to the pre-dinner course.\"\n\n\"O-kay, I'm about to out myself as a real bumpkin here,\" Trilby said, coming toward the gathering now. \"But I don't grok the difference between sparkling wine and champagne, sorry. Somebody gimme a lowdown?\"\n\nVal rolled her eyes. \"There's no difference, Tril, except where they're made. \"Champagne comes exclusively from the region of Champagne in France, sparkling wine is the exact same thing from anywhere else on the planet. Legally, the region owns the name.\"\n\n\"Huh, no kiddin',\" Trilby said, standing next to her co-worker. \"So a sparkling wine could be better than a champagne.\"\n\n\"Infinitely,\" Karen agreed, nodding. \"Michael and I have had some terrible champagnes. Remember that horrible bubbly in the little club in Lucerne?\"\n\n\"How can I forget?\" Mike laughed. \"Despite it smelling like feet, you still managed to drink enough to start table dancing and singing.\"\n\n\"I spent quite a bit of that trip inebriated, it's true,\" Karen sighed. \"But yes, Trilby, there's nothing except a legal consideration. Where the drink is made is the only difference. But I have an idea. If Theresa will make drinks and some light snacks for everyone, we'll have this conversation in the dining hall, where it all happened, oui?\"\n\n\"I'll be ready in ten minutes, ma'am!\" Theresa said, hurrying out of the room.\n\n\"Michael and I will see you all shortly,\" Karen announced, causing the crowd to disperse. Val was giggling excitedly and talking to Trilby, while Tatyana and Jordan went last, no doubt to go make sure the dining hall was in good order. This left Mike and Karen alone in the room, and she leaned her head against his shoulder, smiling at the flowers in the little alcove next to the door.\n\n\"You and I have always had the strangest charmed life, haven't we?\" she said rather dreamily, enjoying the feel of him next to her. There were few things she craved more, and they all involved him.\n\nHe nodded and put his arm around her, holding her to his side. \"Adventure's not even half-over, Gordon. Plenty of time to cause more mischief.\"\n\nShe giggled and nuzzled her cheek against his massive bicep before kissing it. \"How many times have you come to my rescue?\"\n\n\"Not as many as you've come to mine, I think,\" he mused, making her smile and roll her eyes. \"It's a good crew we have here, don't you agree?\"\n\nKaren nodded. \"They'll become like family, after a fashion. You can tell they all love it here, even Trilby. In my father's day, and before, the employees were just employees, with Jordan being the exception. They were paid well to be professional and discreet; that was all the Blackwells wanted of them. I like this better.\"\n\n\"Valentina no doubt agrees,\" Mike said, smirking down at his wife.\n\nKaren put on a show of being offended. She crossed one knee over the other, folded her hands on said knee, and looked away, her nose in the air. \"I will have you know, Michael DeBourne, that if that girl had been born without a vagina and if she had sex drive of a rock, she would still be perfect for this position.\"\n\n\"On that point we agree, princess,\" Mike chuckled, standing and then scooping his wife into his arms, making her squeak. \"Let's go have a cold February night beverage and regale the troops with tales of our insanity.\"\n\nShe giggled and kicked her feet cutely as he carried her out of the study.\n\n***\n\nThirty-some years earlier, in the smoking lounge and bar...\n\nThe evening had been progressing without many crises so far, barring Mike repeatedly sending Karen for more bottles of expensive spirits. He was able to consume herculean amounts of alcohol, and their Chinese guests seemed to have taken this as something of a challenge, trying as a group to match him. But seeing as how he weighed more than any two of them combined, this appeared to be a losing prospect.\n\nKaren, as the designated attendant, stood silently nearby, her hands folded primly in front of herself, watching everything. Her golden-amber eyes surveyed the room, and she listened attentively. DeBourne was showing absolutely no effects from the alcohol, which was not surprising given how much water he displaced. In addition to that, he'd been eating chunks of bread with generous amounts of white butter, along with the fatty canapes Angie kept sending up, so his stomach was nicely lined and retarding the onset of the alcohol's effects.\n\nKaren couldn't help but wonder: was DeBourne using this as a weapon against the Chinese? Using alcohol to loosen them up?\n\nThere were two problems, however, that she was actively keeping track of. First, Mr. Zhao did not seem terribly adept at holding his liquor, and he was proving quite fascinated with Mona, talking to her constantly. Mona kept improvising, but she was running out of ideas to pull out of her ass.\n\nSecond, and worse, the only person who seemed to be less able to hold their liquor than Mr. Zhao was Lisa, who was getting rather soused. She wasn't staggering around babbling incoherently, but she was somewhat flushed, and had began to giggle.\n\nAnd as Karen well knew, when Lisa got drunk, it was Bad Ideas Time.\n\n\"Our information, it told us to expect a blond man, and his red-headed wife,\" mentioned one businessman, whose name was Chen. \"Both in their late forties. I must know your secrets for looking so young despite your age.\"\n\nKaren pursed her lip as she watched and listened. She had put makeup on Lisa, specifically around her eyes, to give her the appearance of crow's feet, a few age lines along her cheeks to help her look older. To her credit, it seemed to have worked. DeBourne, on the other hand, despite the makeup touches, seemed unchanged. They'd be getting through this sham on his force of personality alone.\n\n\"True love,\" Lisa said as she took another sip from her glass. She'd moved onto martinis by now. \"And lots of sex.\"\n\nMike almost choked on his drink, while the two businessmen speaking with them cleared their throats and looked away. Karen's eyes widened when she heard her roommate say it; she could not restrain from a facepalm.\n\n\"That... must be a detailed instruction manual you have on the subject,\" one man said awkwardly.\n\n\"Well, it's not the Golden Lotus or the Dream In The Western Chamber, but it keeps her happy,\" Mike offered as an explanation.\n\n\"And I must ask,\" one of the men said, leaning in slightly and hoping he was being discreet. \"The woman attending to us, she is not just your maid, is she?\"\n\n\"What am I to infer from that, Mr. Chen?\" Mike queried, looking down at his guest.\n\n\"Nothing inappropriate, I assure you,\" the man assured him, also looking at Lisa. \"What I meant was that we all think that there is more to her than being a simply domestic servant. She is attentive, yes, but she observes everything keenly, and is always ready. And her eyes, they are... intense.\"\n\nMike simply listened, waiting for the man to get to the point, giving him nothing.\n\n\"We have legends in China about frightening women whose job it is to protect their liege lords,\" Chen almost whispered. \"Surely this woman is also your bodyguard.\"\n\nKaren's eyes narrowed.\n\nMike almost laughed loudly but settled for smiling. \"She is indeed more than a simple domestic servant to me, yes. Mitsou has many skills, and her understanding of physics and mathematics is absolutely frightening.\"\n\nKaren tried not to frown as she readied another bottle for opening. Was he mollifying her? How many times was she going to have to kill him after this? She needed one of those necromancers that DeBourne's gamer geek friends were always on about, so that she could kill him, raise him from the dead and kill him again.\n\n\"Very unusual eyes,\" mused the other businessman with Chen, named Hao.\n\nMike shrugged. \"Sun Quan had green eyes.\"\n\nChen looked surprised. \"You know the Sanguo.\"\n\n\"I read a lot, so Chinese literature is known to me,\" Mike said simply.\n\nChen turned and mumbled something to Hao in their own language, and Karen regretted not speaking any forms of Chinese right then. Their attention returned to Mike and Lisa and they smiled. \"A most worthy servant to have in one's employ, certainly. Retaining her must be expensive.\"\n\n\"She pretty high-maintenance, I'll grant you that,\" Mike agreed, making Karen's ears go red and causing her to almost rip the cork out of the wine bottle she was opening with her fingernails.\n\n\"The sex with her isn't bad either,\" Lisa mentioned as she drained her martini. Mike blinked but recovered quickly, while Karen, who was some distance away with the drinks, hung her head in despair. The two businessmen looked up at Mike in confusion and disbelief.\n\n\"Well, it's one way to keep down the price for employing her,\" Mike offered.\n\nKaren picked up a tray of drinks she'd prepared and marched away to another section of the room, away from the two soon-to-be-dead people. Janet seemed to be having a lovely time speaking with several of the businessmen, who plainly considered her a safe bet in comparison to the towering Mr. Blackwell. And their senior, Mr. Zhao, seemed intent on monopolizing the black woman.\n\n\"Oh, c'mon, guys,\" Janet laughed as she paused in sipping her aperitif. \"You know international laws about tariffs as well as I do! If you want to do business with my cousin, scrap that dumb limited agreement you have with Bombardier and move your operations over to work with Blackwell. But the tariffs go up if you play both at once.\"\n\n\"It is not common to hear Canadians bad-mouth one of their own, even a competitor,\" mentioned Chao, the youngest man. \"You think your case and what you have to offer is that strong?\"\n\n\"You're here, aren't you?\" Janet replied, looking over her glass as she took another sip. \"You guys're busy, you wouldn't've made the time if you weren't interested.\"\n\n\"It was indeed an interesting proposal you made, once you saw what we were trying to do,\" said another. \"Your offer was ambitious, to say the least. Many were conflicted as to whether it was brilliant, or completely insane.\"\n\n\"Y'never know with my cuz,\" Janet quipped, clearly enjoying the attention, whatever her earlier fears might have been. She was applying her legal classes and training to the conversation, so she felt much more in her element. \"Ah, thank you, Mitsou!\"\n\n\"Ne rien, mam'selle,\" Karen said in as pleasant a tone as she could manage, given that they were discussing her offer and found it deranged. It wasn't deranged, it was just bold. She gave each person present another drink, took the old glasses, and then headed off to rescue Mona.\n\n\"But Miss Blackwell, you must tell me more of your stocks,\" Mr. Zhao was insisting, standing very close to her. \"They intrigue me, and if we were both investors... our stocks, they might abut one another, almost as if they were kissing.\"\n\n\"That's a very expensive wedding ring you have there, Mr. Zhao,\" Mona mentioned, nodding at the hand he held his drink in. \"Must've cost your wife a pretty penny.\"\n\n\"You mean a pretty yuan,\" he quipped, smiling and touching his knuckle to her cheek affectionately. \"And yes, it is worth some tens of thousands of dollars in your Canadian money. I think it would complement your exotic skin tone so we-\"\n\n\"D\u00e9sol\u00e9e, madame et monsieur, but I have new drinks for you,\" Karen interrupted, curtsying politely as she strode up. \"But I am afraid that I might not have made the lady's drink to her specifications.\"\n\n\"You never seem to manage it, Mitsou,\" Mona replied, thankful for the reprieve. \"Come and I'll show you.\"\n\n\"Monsieur Zhao, my employer, Monsieur DeB- Monsieur Blackwell, is looking to have a word with you, I believe.\"\n\n\"Please excuse,\" Zhao said, nodding his head politely, although he was clearly unhappy about being torn away from his new love interest for something as trivial as business. He turned and headed toward Mike, snapping his fingers to get the attention of the youngest businessman and bring him along. Mona sighed heavily as he left.\n\n\"Thanks for that,\" she said quietly as she walked with Karen over to the bar to pretend to show her how to make the drink. \"He keeps on asking more and more questions about my investments and portfolios. If he actually starts looking for a derivatives investor named Chuck Jones, we're done for.\"\n\nDespite herself, Karen stifled a snicker.\n\n\"Ugh, my ass feels like a pincushion,\" Mona groused. \"I should've agreed to be the damn black maid; at least I would've had excuses to keep leaving the room.\"\n\n\"I'm sorry,\" Karen said humbly, looking downcast. \"This is my fault.\"\n\n\"Kar, you had no way of knowing he was gonna be an old lecher who was hot to trot and down with the swirl,\" Mona said, smiling. \"I think we're pulling this off, hon.\"\n\n\"If Heyman doesn't sink us,\" Karen muttered.\n\nMona paused. \"Shit, she getting drunk?\"\n\nKaren tilted her head subtly in the direction of Mike and Lisa. While Mike was supremely composed and dominant, Lisa had reached the giggly phase of being drunk, and seemed intent on making sure everyone knew she was heterosexually married and not, in fact, a lesbian. Mike kept subtly moving her hand away from his crotch when she tried to pat it.\n\n\"Fuuuuuuck,\" Mona said in distress. \"She may blow this yet. Why is she trying to prove she's not a lesbian when nobody thought she was?\"\n\n\"She's moved on to martinis, you know her and gin,\" sighed Karen. \"Only a matter of time before-\"\n\nA tinkling, chiming sound echoed out of the dining hall.\n\n\"Saved by the bell,\" Karen said in relief, straightening up and turning to address the crowd, her hands folded in front of herself. \"Mesdames et messieurs, dinner is being served, please follow me and I will see you all seated, oui?\"\n\nMike took Lisa by the arm and moved to follow 'Mitsou', his stride perhaps a little longer than Lisa could keep up with. She squeaked and hurried so that she was not just pulled along.\n\n\"C'mon, boys,\" Janet purred, standing between two of the businessmen and taking each by the arm. \"I know the way.\"\n\nMona rolled her eyes as Mr. Zhao found her and eagerly escorted her into the dining hall, only having to remove his hand from her ass twice.\n\n***\n\nThe dining room...\n\nDinner was being wheeled in and set up by Karen, after she had seated everyone. She began by ladling out bowls of steaming Mulligatawny soup to each of the guests. It must have been spicy because Lisa had developed the hiccups.\n\nWell, that or her martinis were finally catching up with her. Karen could only hope it was the former, but her roomie's persistent giggling after each hiccup did not give her much hope.\n\nZhao spoke to his youngest businessman, who was sitting next to him and acting as translator when his boss' English was strained by a concept. Mr. Zhao also kept his free hand on Mona's thigh whenever he could since she was sitting next to him at his insistence."
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "chicanery",
        "minor lesbian themes",
        "alcohol",
        "comedy",
        "flashbacks",
        "friendship",
        "music",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/mike-and-karen-ch-19"
}