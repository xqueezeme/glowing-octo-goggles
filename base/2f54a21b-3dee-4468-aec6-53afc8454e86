{
    "title": "Hindsight",
    "pages": [
        "What would you do if you could go back to being your eighteen year old self? Timothy Dane. Yeah, I'd fuck him, that's what I'd do. I scrolled through my social media page and clicked on his profile, gazing into those baby blue eyes and rugged handsome smile, completely ignoring the fact that his wife was also staring at me in the picture. It's funny how some people change a lot in twenty years and some really don't\u2014Timothy Dane was one of the guys who didn't. I mean, sure, he was a smidge older looking but he was still ripped, gorgeous...god, am I seriously getting wet thinking about him? How fucking pathetic. I looked at his wife and couldn't help the sneer on my face\u2014Angela Boomer Dane. What a dumb name. She was one of those who looked the same now too\u2014still had that dull, short straight brown hair, those same overly plucked eyebrows in a ridiculous curve that made her seem like she was always surprised. They started dating as sophomores and married after college\u2014clich\u00e9 high school sweethearts. Disgusting.\n\nI stubbed out my cigarette in the ashtray on the table and leaned back in the patio chair on my porch, staring out into the rain. I rarely smoked\u2014that shit will kill you\u2014but when I got stressed I needed to do something so puff puff I went. I knew I shouldn't. Mom died of lung cancer, she smoked like a chimney after I was born for almost twenty years. Almost, I say\u2014because she died just after I started college, middle of my freshman year. By the time they found the cancer it was too late; she fought, but in the end all it did was leave a wake of medical bills for me to pay off after her death. I had to drop out, kiss my dreams goodbye and start working two shithole jobs to get out of debt. If the house hadn't been in Grandpa's name still, I would have lost that too. Luckily it was though, but by the time I paid off mom's medical bills Pops went too\u2014thankfully, he was old enough that all that was taken care of by his life insurance. Mom, on the other hand, wasn't.\n\nI stared at the digital image of Timothy Dane's face, clicking through his pictures to see his happy kids and perfect magazine life\u2014what? You know what, you can eat a dick. Don't you judge me, you know you use social media to stalk people too fucker. At least I'm not above pretending like I don't. Fine, whatever\u2014I clicked out of his profile and back to the event page, my thumb hovering over the buttons. Yes...No...Maybe. Ugh. Was it already my twentieth class reunion? Am I that fucking old\u2014thirty eight. Yup, I'm that fucking old. I clicked Maybe, though if I'm being honest, we both know it is a hard No. I mean, I'm disgusted with myself, with my life. I'm thirty eight, I've gained seventy pounds since senior year, I literally have nothing to show for myself\u2014no husband, no kids, no nothing. I've got a job, but not one that I'd admit to any of those people, fuck, I work at a gas station. And not one of those fancy gas stations, like the ghetto kind in the neighborhood where no one who comes in is white. Frankly, I'm the whitest person who has ever set foot in there and that's saying something because I'm only half. What's the other half? Like everything, little bit of this, little bit of that\u2014like making soup without a recipe, you just clean out the fridge and throw that shit in a pot, add water and bam, you've got soup. The only good thing about being a mutt is you look 'exotic.' Mom always said we would make great spies\u2014our looks pretty much blended in with any ethnicity, we could look mixed, Indian, Native American, Asian, whatever. \n\nThe one that I always got was Hispanic. I suppose it didn't help that my boss at the ghetto gas station was Mexican. Thank goodness I took Spanish all throughout high school. I know, you don't really learn enough to carry on a conversation with anyone older than five, but getting the basics down really helped. Once I started working there, I was thrown into the trenches and forced to speak a language that wasn't my own every day. That's the only good thing about that job, aside from my pathetic paycheck, was that I'm now fluent in another language. Yup, I know all the bad, dirty words too.\n\nSpanish class, wow, that's a blast from the past\u2014it was one of two classes my senior year that I had with Timothy Dane, in fact I sat next to him. He fucking sucked at it and if memory serves right, he almost failed until the football coach personally paid for a tutor so he wouldn't lose his varsity linebacker. I scrolled through the list of people who said they were attending the reunion and it brought back some memories\u2014I hadn't seen a single one of these people since graduation, though I was 'friends' with them now. Stupid, right? I mean, yeah, I'll accept your friend request even though you said like three words to me and never pronounced my name right. Gives me something more to feel bad about while I'm eating cereal for dinner like a loser and scrolling through their professional family photos in matching plaid shirts against a burlap background.\n\nI leaned back in the chair and sighed\u2014if I could go back and just change one or two things, what would it be? Would I become the popular girl? A cheerleader instead of some quiet emo goth freak that everyone avoided? No. I knew exactly the moment I'd go back to, because it was the one that affected me the hardest. It made my life unbearable. I closed my eyes and dredged up that memory.\n\n...\n\n\"Catarina?\" It was my mom's voice. \n\nI drew in a deep breath, the smell of second hand smoke and grease filling my lungs. When I opened my eyes, I saw her sitting across the table from me in the crappy diner we frequented when she didn't feel like cooking. There was a cig hanging out of her mouth, her face looking at me like she was waiting for an answer. I could never recall the question, but I remembered everything else about that night. I always felt like that was the night I should have told her to quit smoking, to go see a doctor because in a year, she'd be dead.\n\nYou know what? It's my day dream so this time, I'm going to do something about it. I reached across the table, grabbed the cigarette out of her mouth and stubbed it out into the ashtray, \"Quit being so fucking selfish! In one year, you'll die of lung cancer\u2014I know this for a fact. In almost nine months your cough will get so bad that you will finally drag yourself to the doctor only to discover that it is too late\u2014then, you die. You die and you leave me all alone and you know what, Mom? My life is shit because of it. Because you're not there. So for once in your life will you just listen to me and stop smoking? Go to the fucking doctor tomorrow and demand they do tests\u2014if they would have caught it sooner, you would have lived.\" I was pissed, my voice was angry and there were tears running down my face. It was all true, this one moment fucked my life to hell. I hated that she smoked but I never had the balls to do anything about it.\n\nMom looked shocked; she put the menu down, her hands shaking. Right then, the waitress came over, \"Do you know what you ladies want?\"\n\n\"A club and fries,\" I said before looking over at my Mom\u2014her mouth was still open, \"And she'll have the strip steak, medium well with a baked potato and extra sour cream. And I mean, a lot of sour cream, like an entire bowl.\" \n\nThe waitress nodded and walked off. I sighed, \"I'm going to wash my hands.\" I got up and went to the bathroom, leaving my Mom gaping behind me.\n\nWhen I walked in and caught a look at my eighteen year old self, I laughed. I watched my reflection reach up and touch my black hair, painstakingly straightened by hand every day, stupid bangs curled into that fake round tunnel, thick black make up and lipstick twelve shades too dark. I had a dumb velvet choker on, a baggy button up black shirt and a long black skirt with combat boots. Wretched fashions of the past. I pulled up the hem of the shirt and looked at my flat stomach\u2014god, how I wished I had that body back. To think, I was always mortified that I weighed 130, because all those other twig bitches thought 110 was fat. I'd kill to weigh 130 again\u2014if I had known then, what I knew at thirty eight, how different my life would have ended up. \n\nI saw teenage me roll my eyes before shutting them\u2014yeah, this was too painful of a memory to dredge up. Back then I had the world in the palm of my hand\u2014I could have been anything, done anything, but instead I squandered it. Hindsight is a bitch.\n\nWhen I opened my eyes, I expected to see my front lawn just beyond my porch, my overweight ass stuffed into a patio chair while I stalked former classmates online. But, that isn't what I saw\u2014I opened my eyes and I was still in the bathroom of that crappy diner, staring at my eighteen year old self. What the fuck. I blinked again. I reached up and slapped my stupid emo face\u2014nothing happened. Well, I mean my face hurt and was a little red but it was still there.\n\nI leaned on the sink and stared at myself\u2014was this really happening? I mean, I would have killed for the chance to go back and change things but that wasn't a possibility. Maybe I had finally lost it. Or maybe, just maybe...\n\nWoah. What would you do if you could go back to being your eighteen year old self? \n\nI'm not going to fuck it up this time, that's for damn sure. I washed my hands and went out into the diner, sat across from my mom. She didn't light up another cig in my absence, so that was good. I looked up at her face and almost burst into tears\u2014I missed her so much. I held it together and gave her a smile, \"How was work?\"\n\nShe looked at me odd but started laughing, before telling me about her day. It was the most normal, boring conversation we had while eating, but it was something I always missed later in life.\n\nWe got home before seven, it was a Thursday. As we pulled into the garage, I sat there for a moment before talking to her again, \"I'm serious, Mom. You need to call the doctor tomorrow. I know that you've been having problems breathing for a while now and you just think it is a linger cold, but it isn't. Promise me. Promise me you'll call.\"\n\nShe looked at me\u2014her face was blank, but I saw the worry in her eyes. She smiled and reached out, touching my cheek, \"Okay baby. I'll call first thing in the morning.\"\n\n\"And no more smoking.\"\n\nShe grimaced, \"No more smoking. I'll pick up a patch before work.\"\n\nWhat a fucking relief that was\u2014now I just had to make sure she stuck to it. When we got out of the car and I saw my reflection in the window, I almost flinched. \"I think I'm going to go to the thrift store down the street and pick up some different clothes.\"\n\nMom looked at me with a frown, \"More black?\"\n\nI shook my head, waving my hand over my body \"No, I'm over this.\"\n\n\"Thank god,\" she muttered under her breath. She fished out her wallet and handed me forty bucks, \"Here, as long as it isn't black I honestly don't care what you wear.\"\n\nI laughed, giving her a hug before I tucked the money into my pocket and wandered out of the garage. It was a little cool for a fall night but I didn't care. I couldn't believe it, even still\u2014it was impossible, but somehow my thirty-eight year old consciousness was thrown back into my eighteen year old body. I got a second chance to make something of myself. Well, most likely I was just passed out in the chair on my porch, snoring away and having some wicked hangover dream, but you know what? Who the fuck cares\u2014I'm going to go with the flow.\n\nI walked into the thrift store and smiled\u2014eighteen year old me wouldn't have been caught dead here. Who would have known in a few decades, second hand shopping would be cool? I tried to remember what the mid nineties were like\u2014ugh. Plaid, horizontal stripes, ribbed shirts, midriffs, shiny, pink and coveralls. No thank you. I remembered that seventies style clothing was coming back around so I scoured the store and found some decent vintage clothes. Wow, forty dollars bought a lot back then.\n\nI wandered home just before dark with a huge bag in each hand; Mom was watching TV so I stripped the tags off and stuffed everything into the wash before heading to my room. Ah, the room of my teenage years\u2014nothing like what you would think, mind you. I would have bet that most girls in my school had posters of boy bands, hunks from movies, stupid cats or whatever was pink but not me\u2014maps. Maps covered my walls; I always wanted to travel the world, see new things, meet different people, experience other cultures, I just never had the chance. I kicked off my combat boots and ran into the small attached bathroom, scrubbing the shit off of my face, finally seeing the perfect complexion underneath all of that foundation. It made me smile. Eighteen year old me was actually attractive, hot even\u2014I was just always too awkward and quiet to make anything come out of it. Not this time, though.\n\nI changed into PJs and flopped onto the twin bed, pulling out my homework.\n\nIt's a good fucking thing I still remembered half this shit because I would have been screwed otherwise. I stuffed my new-old clothes into the dryer and finished off my calculus just as the phone rang. It startled me, honestly\u2014I looked around and saw the handset on the wall. Yikes, landlines, that's right\u2014I had my own personal teen line back in the day, though it wasn't like many people called me. When I got up and looked at the caller ID, it read Adams, Philip. Who the fuck was that?\n\n\"Hello?\" I answered.\n\n\"Hey kitten,\" a deep male voice purred, \"what are you wearing?\"\n\n\"Who the fuck is this?\" I snapped.\n\n\"What? It's me, Colton.\"\n\nOh god, Colton Adams, how could I ever forget that douche? I dated him for most of my senior year, he was a real shit bag. I also lost my virginity to him in the back seat of his crappy Ford Tempo\u2014wait a second, tomorrow night, that's the day I would lose my virginity. I almost laughed out loud\u2014not this time. That's a hard nope to this motherfucker.\n\n\"Oh, sorry. Hey I'm busy so I gotta go.\" I said quickly.\n\n\"Wait, kitten\u2014\" I heard him say when I hung up the phone. Thinking on it, I left it off the hook because I knew he'd call back. \n\nI had a stupid, shit eating grin on my face as I recalled what would happen the following day\u2014I had a memory like a steel trap sometimes. I went to school, boring as usual; in Spanish class, Timothy Dane asked me if I could help him with his homework over the weekend. God how I wanted to, but I chickened out and said I was busy\u2014I knew he only asked me because I was wicked smart and easy for a jock like him to approach since I was a nobody, a quiet awkward girl who should have been falling over the chance to spend time with him. Instead, I blew him off. Colton picked me up that night and we went to a movie, then parked down a gravel road and he fucked me. It was painful and in no way enjoyable, granted neither of us knew what we were doing back then but still\u2014I always wished he wasn't my first. Now, I'd get to pick and yup, that's right, I will impale myself on Timothy Dane like a sacrificial lamb.\n\nI pulled out my English book and read a few chapters, which was both funny and pointless because I remembered finishing the book. Eventually, the dryer went off. I went downstairs and got my clothes, giving my Mom a kiss on the cheek goodnight before I headed back up to my room. While folding them and putting them away\u2014a habit I never had as a teen\u2014I was actually looking forward to tomorrow. This was going to be amazing.\n\n...\n\nWhen my alarm went off at 5:30 am I leapt out of bed. Nervously, I went to the bathroom and turned on the light\u2014I barely slept, but that didn't matter, I was still eighteen year old me, grinning like a fool. I hopped into the shower, washed my hair and body, shaved my legs and\u2014woah, what the fuck is this, a tribble? I hesitantly prodded at the bush between my legs, yikes...carefully I shaved my bikini line before getting out of the shower. I forgot about that thing\u2014I didn't start waxing until I was twenty. Looking around my bathroom I knew that I couldn't rip it off now, I didn't have any supplies and plus, I wasn't sure that high school kids knew about bald pussies back then. I grabbed a pair of scissors and decided that I could at least weed wack the damn thing back. It nearly took me fifteen minutes before I got the hedge under control to the point that I no longer looked like a 70's porn star. \n\nI tossed some mousse into my hair, knowing that it would dry wavy but would look good. I stood in front of the mirror naked for a long time, simply admiring the body I used to be ashamed of\u2014a nice C cup, hips, curves (but not any extras, if you know what I mean), nice flat stomach and a plump ass. Damn. Hindsight\u2014right?!\n\nI slipped on a black bra and panties because that's all I had back then, everything in black. I pulled on a tight red tank top underneath a red plaid shirt that I buttoned up almost all the way, but still let my cleavage show and a pair of slim blue jeans. Vintage feel, but still doable in the mid-90's. I put on some socks and the pair of black I bought the night before with my other clothes. Back in the bathroom I went through my makeup, saving only the mascara before dumping the rest into the trash\u2014unless I planned on going as a vampire for Halloween, it was pretty much worthless. I snuck into Mom's bathroom; she was in the shower.\n\n\"Hey,\" I said, \"I'm going to use some of your make up until I can get some at the store.\"\n\n\"Okay honey,\" she replied. She continued humming to herself behind the curtain.\n\nI rummaged through her stash and opted for some palate of brown eyeshadows, going natural instead of goth. A quick dusting of the eyes, some smoky eyeliner and mascara, a light sheen of a pinkish-red lipstick and bam, my image was remade. I was definitely fuckable.\n\nI grabbed my backpack and went downstairs to the kitchen and made some oatmeal in the microwave. I was just about finished when Mom came downstairs in her work clothes.\n\n\"Holy shit,\" she said, looking at me, completely stunned. \"You weren't kidding, you're really done with all of that black stuff.\"\n\n\"Yeah,\" I said, kind of embarrassed, \"do I look okay?\"\n\n\"Okay? You're gorgeous honey!\"\n\n\"Ack, you're saying that because you have to,\" I grumbled.\n\n\"No, I'm not. Before I would just say, 'I love you no matter what,' because you can't really tell your daughter that she looks scary.\"\n\nI laughed hard, \"Okay, okay, I get it. Thanks Mom.\"\n\nShe leaned over and kissed me on the forehead, \"Of course darling. Do you want a ride?\"\n\n\"No, I'm going to catch the bus,\" I said, sticking my bowl into the dishwasher. \"Have a good day, and don't forget\u2014\"\n\n\"I will call the doctor as soon as I get in.\" She smiled at me. God, it was good to see her again.\n\nI hopped onto the public bus and sat in the back like I always used to. In my backpack, I found\u2014yes, I'm serious\u2014my portable CD player and wired headphones. I contained my laughter as I put them on over my ears and listened to whatever was in there. I knew there was a smile on my face, just thinking what an amazing day this would be.\n\nAt the next stop, a few of the popular guys from school got on, Derek and Brandon. After the bus started moving again, I caught one of them flat out staring at me\u2014like mouth open kind of staring. I turned and looked at him, gave him a smile and did one of those stupid head nod things. \n\nDerek was shocked and mouthed, \"Hey.\"\n\nI turned my gaze back to the window but I could see him nudging his friend, casually pointing over at me. It was a good feeling to be noticed and not because I was a freak. When the bus finally stopped two blocks from school, I got off last to find Derek and Brandon waiting for me.\n\n\"Hey Catarina,\" Brandon said. His eyes wandered up and down my body.\n\nI smirked, stuffing my CD player into my backpack, \"It's Cat\u2014only my mom calls me Catarina.\"\n\n\"Okay, Cat,\" Brandon grinned.",
        "\"Meow,\" Derek joked. \"I'm serious, you look...different.\"\n\nI laughed, \"Yeah well, haven't you just ever woken up one day and thought, shit, I got this.\"\n\nThey weren't sure what to make of it so they just laughed awkwardly while we started walking to school. Before this moment, neither one of them had said a fucking word to me in the seven years since we started secondary school together. The old me would have been terrified at carrying on a conversation with pretty much anyone\u2014but after years of Hispanic guys hitting on me at the gas station I knew how to bullshit with the best of them.\n\nWe walked through the front doors of the high school and I turned to head down the north hall where my locker was. \"We should hang out sometime,\" I offered to the pair of them.\n\n\"Okay,\" Brandon grinned, Derek nodding in agreement. They waved as we parted ways.\n\nI got to my locker and hesitated\u2014fuck, I had no idea what the combination was, I mean like after twenty years you tend to forget the stupid shit. I remembered I wrote everything down in my planner so I pulled it out, thankful that I was always paranoid of making an ass out of myself so I tried to be prepared. I spun the lock a few times, landing on the right numbers and popped it open. I stuffed my bag in, catching a glimpse of my eighteen year old face in the mirror\u2014this was going to be a great day.\n\n\"What was that all about last night, kitten?\" Colton's voice came from behind my locker door. I rolled my eyes, grabbing my history book and binder before shutting the door. The look on his face\u2014it was priceless. He was floored. \"Wow, I mean, like before you know you were...but now...\" He had a stupid grin on his face.\n\nI leaned on the locker, motioning a hand between us, \"Look, this, you and I\u2014it's not working for me anymore so...have a nice life?\" It occurred to me at that point that I had never ever broken up with anyone. I always got dumped. Talk about awkward.\n\nHe gaped at me for several moments before bursting out laughing, \"Oh, that was a good one, you had me going for a moment there.\"\n\nI stared at him blankly\u2014wow, he really was an idiot. What the fuck was I thinking? When my expression didn't change, I saw it click in his eyes; then, he got mad.\n\n\"You\u2014you've got to be kidding me, kitten, you can't dump me,\" he said loudly. Several of our classmate who stopped to gawk at me were also witnessing the break up. He tried to grab my arm, \"We'll talk about this later, you're making a scene now!\"\n\nI jerked my arm away, rolling my eyes, \"No, Colton, you're making a scene. And there's nothing to talk about because we're through. Good bye.\" I turned and walked off down the hallway, ignoring him when he called out my name.\n\nHistory was just as dull as I remembered it, though it was clear kids were staring at me the entire time. I tried not to look back but I couldn't wipe the stupid grin off of my face. After class I headed back to my locker to get my calculus book. Jacob, the guy who had his locker next to mine, was standing there in front of his, digging through it. \n\nI stopped in the middle of the hallway, staring at him\u2014Jacob Tegen, how could I forget that guy? He and I were friends for years, not the hanging outside of school kind of friends but the partner up when everyone else avoided us, sit at lunch together so we wouldn't be alone kind of friends. I thought about him for a long time after high school, always curious as to what happened to him but no matter how much I searched online, I never found out anything.\n\nI walked over to my locker and casually opened it, \"Hey Jacob.\"\n\n\"Hey,\" he mumbled, still digging.\n\nI knew what he was looking for, he always lost his pens. I pulled one out of my bag and handed it to him\u2014he stared at it, before looking at me. He had these amazing bright green eyes, light brown hair and he was scrawny but tall, and so incredibly awkward\u2014think of how a large breed puppy is clumsy until they grow into their feet, that kind of awkward.\n\n\"Thanks,\" he said, taking the pen while still looking me over, \"you changed your make up.\"\n\n\"Yeah,\" I shrugged, swapping out my books, \"Do you want to go get together lunch today?\"\n\nHe stared at me blankly for a minute; when I looked back at him, I was surprised to see that he was sneering, \"What, now that you don't have a boyfriend you just expect me to hang out with you again?\"\n\nI blinked several times\u2014what the fuck? I racked my brain, digging through my memories to try to figure out what was wrong with him; we hung out all the time...until I started dating Colton. Then I more or less gave him the cold shoulder\u2014shit, what a dick move. I frowned, \"I'm sorry I've been a bitch, Jacob. I don't know what came over me\u2014you're my friend and that is something that means more than whatever guy asks me out. I shouldn't have ignored you, you're the only one who actually gets me. Forgive me?\"\n\nThe anger melted off of his face and he sighed.\n\n\"I'll buy you ice cream,\" I offered with a small smile.\n\n\"Fine,\" he grumbled, \"it's about time you pulled your head out of your ass. Colton Adams\u2014what were you thinking?\"\n\n\"Ugh, I know right!\" I glanced at the clock and shut my locker, \"I have to get to class, but I'll meet you here before lunch? Promise?\"\n\nHe was surprised by my insistence and hesitantly smiled, \"Promise.\"\n\nI had to speed walk to get to calculus on time, skidding into through the door just as the bell chimed. I sat down in my seat quickly while the teacher took attendance\u2014he always did it on his own and let us talk for the first few minutes of class. I remembered hating this class so much, not because it was math\u2014I loved math!\u2014but because we were sat alphabetically and that meant I was stuck around the popular bitches. Think Mean Girls wearing pink on Wednesdays popular bitches. They were dumb as fuck too and I know the one behind me tried to copy off of my tests several times. And the one to my left\u2014that's right, Angela Boomer soon to be Angela Dane. I glanced over and saw her with those stupid arched eyebrows. \n\nI noticed she looked pale\u2014then, when I remembered, I had to lower my head and let my hair cover the wicked grin on my face\u2014she had the stomach flu. Of course, she didn't know it right now, but next period during PE she was going to puke all over the gym and get sent home. That's why Timothy Dane asked me to help him with Spanish later, because they had plans to rent movies from Blockbuster (LOL!) and she couldn't because her parents made her stay home.\n\n\"Your hair looks really nice,\" the girl behind me said. I turned around and looked at her\u2014Cindy, head cheerleader. \n\nI smiled earnestly, \"Thank you.\" I guessed she probably didn't mean it, but I knew what she looked like in twenty years\u2014that's right, I'm not the only one who packed on the pounds. She wanted to become a professional dancer but failed at it and ended up being a real estate agent. \n\nCalculus went by fast; when we got our tests back, I was pleased to see a B+. Sad, but it was also the highest grade in the class. By the time the bell rang I was ready to witness the disaster that would come next period. I made my way to the locker room, stuffing my books into the small gym locker before pulling out my clothes and guess what? They were black. And baggy. Whatever, I knew that this class would be cut short so I unbuttoned my plaid shirt and hung it up, opting to just wear the red tank top and my gym shorts.\n\nWhen I wandered out into the gym, I grimaced\u2014it was flag football. I hated sports on a good day but anything to do with football even more. I grabbed one of the flag belts and slipped it around my waist, clipping it in the front. The P.E. teacher counted us off into teams and reminded us of the rules before sending us off to different parts of the large gym.\n\nI was on the blue team and across the court was Angela on the red team. I made sure to avoid going anywhere near her for the first five minutes of the game\u2014I didn't want to catch anything. Then, just as she was ready to hike the ball to the girl behind her\u2014out it came. Puke, everywhere. Girls screamed, because, well, they're girls. A few of them gagged. I just tried not to burst out laughing from my safe distance away.\n\nThe teacher came running over and shooed us all onto the opposite side of the gym. He gagged himself when he got hear her, especially since she vomited again. The entire class sat down against the wall as far as possible while he escorted her to the nurse's office and the janitor came to clean up the mess. By the time the teacher got back, there were only five minutes left, so he dismissed us.\n\nI changed my clothes, slathered on some deodorant, touched up my lipstick and fluffed my hair before booking it out of there, trying to avoid the toxic cloud of perfume the popular bitches sprayed, making themselves smell like cupcakes or coconuts or glitter or whatever the fuck it was. After a brief stop at my hall locker to get my communications book, I was off to the first class that I shared with Timothy Dane. Granted, it wouldn't be until last period Spanish that he asked me for help, but I could definitely seed the desire.\n\nI always had problems in this class\u2014eighteen year old me would almost rather die than be forced to give a speech in front of a group of my peers. It was terrifying, I always spoke to quiet, when I got nervous I screwed up words and that just made my face burn red. But this time, I had this. I sauntered in, ignoring the surprised looks on everyone's face and took my usual seat towards the back. This was the one class where we got to sit wherever we felt like it, though people rarely changed spots after they were divided up into their clicks. I always sat in the back, alone. But not today\u2014Derek came in, saw me, and sat down with a smile.\n\n\"Hey Cat,\" he said.\n\nI grinned back, \"Hey Derek.\"\n\n\"So, I heard a rumor that Angela Boomer\u2014\"\n\n\"Yeah,\" I made a face, \"like everywhere.\"\n\n\"Ew,\" he said, \"how embarrassing.\"\n\nRight, because self image was more important back then than, you know, making sure someone wasn't dying. I frowned, looking sad, \"I hope she gets better.\" I caught the eyes of Timothy Dane right as he walked in. He stopped dead in his tracks, those gorgeous blue eyes locked on mine\u2014fuck, yeah, I was getting wet. That man was a god, I tell you...I just hoped he was as good in bed as I dreamed he was.\n\nWhen his brow crinkled he came over and sat in front of Derek, \"Hey Derek. Hey...Cat...you look\u2014\"\n\n\"Different?\" That seemed to be the general, most obvious way everyone was putting it.\n\nHe shrugged, \"I was going to say really good but yeah, definitely different.\"\n\nI blushed, fuck, he was hot, \"Thanks.\"\n\nWhen the teacher started talking, I didn't hear a damn word she said. Timothy Dane was within my line of sight to her and you can guess who I was staring at. He had short cropped light brown hair, a square masculine face and that smile, that smile alone could make me weak. He was buff, even for high school, thick arms that always looked on the verge of tearing his shirts open and a flat chest. I almost started salivating when I tried to imagine what he'd look like without a shirt\u2014nice cut abs, no hair...and lower? How big was his cock, I wondered? I fully intended on finding that out\u2014my eighteen year old body was definitely a virgin but this thirty eight year old mind was a slut. I squirmed in my seat a little, imagining gagging on his cock, letting him cum down my throat then giving him a little bit to get hard again. I knew he wasn't a virgin but this was high school\u2014even if Angela gave him head you can guarantee it wasn't very good. I mean, he'd look down and she'd look up all surprised and shit with those fucking eyebrows\u2014how much of a turn on could that actually be?\n\nI startled when Timothy turned around and motioned to Derek and me\u2014balls, I had no idea what was going on. I watched the two guys turn their desks to face mine. When they looked at me, I shrugged, \"I kinda zoned out there, what are we doing?\"\n\n\"She wants us to practice the conversations on page thirty, in groups of threes,\" Derek said.\n\n\"Oh,\" I wasn't able to suppress the grin on my face\u2014these guys chose to group up with me. I was always the last one picked, the odd chick out forced to group up with whoever wasn't quick enough to avoid it. Not this time.\n\nI thumbed through the book and started reading the conversation; when I got to the next paragraph, I looked over at Derek\u2014his eyes were fixed on my tits. Her jerked his gaze away and read the next bit. I glanced down at my book, half heartedly following along. Man\u2014this was great\u2014hell, even I wanted to look at my tits. I sat up straight and tugged my shirt down a bit, like I was straightening it; then, I leaned forward, placing my forearms on the desk and grasped the edge in my hands, pressing my biceps inward to squeeze my tits together. By the time Timothy finished his paragraph and it was my turn, I knew exactly where they were staring. Boys\u2014so predictable at that age, am I right?\n\nWe kept going around our little group, reading the paragraphs. By the end of the class, I saw Timothy shift in his seat, trying to casually adjust his cock. This was going to be easier than I thought, if a little cleavage was enough to get him hard. When the bell rang, they moved their desks back. I rose and intentionally bent over to pick up my binder off of the floor and right as I did, the guys looked back at me and saw straight down my tank top to my black bra. I even caught Derek in the act.\n\nI was fucking horny and cheeky as hell, so I winked at him, watching his eyes grow wide. I smiled at Timothy, \"See you in Spanish.\"\n\n\"Oh, I'll be there,\" he replied. When I glanced over my shoulder on the way out the door, his eyes were glued to my ass.\n\nIf I hadn't made Jacob promise to meet me for lunch by our lockers, I might have spent the first ten minutes of it in the bathroom rubbing one out\u2014I was that ready to go. Teenage hormones are a horrible thing\u2014when you get them, you have no fucking clue what to do about it. Then, when you're old and fat and can watch porn at 4 o'clock in the afternoon on your cell phone, you know exactly how to stroke that pussy, even got it down to a science. It's just unfair, you know?\n\nJacob actually looked surprised that I showed up; I was a little hurt by that, but then again I had been a twat to him so it was only fair. I dumped my books into the locker and grabbed my wallet, \"What are you thinking? The pizzeria or the sandwich shop?\"\n\n\"You promised me ice cream,\" he said, closing his locker, \"so the sandwich shop.\"\n\nI grinned, \"Okay let's go.\" \n\nWe booked it out of the high school and across the street to the small sandwich shop tucked into the small strip mall; luckily, we made it there before the rush of our classmates. We each ordered our sandwiches, cokes and ice cream, obviously eating our dessert first while we sat down at a small table near the back.\n\n\"What are you going to do after school, Jacob?\" I asked, curious.\n\n\"Go home, like I do every day,\" he replied, eyeing me oddly.\n\n\"No, I mean like after you graduate?\"\n\n\"Oh,\" he said, taking a long lick off of the cone, \"I don't know really. I got into a few Universities on the east coast. I was thinking business. I always wanted to be my own boss, you know?\"\n\n\"Huh,\" I said, \"I never knew that. We don't really hang out as much as we should.\"\n\nJacob took a long look at me, \"No, we don't.\"\n\nWhen I gazed into his bright green eyes\u2014it struck me\u2014the way he always hung out with me, how he was the one who initiated most of our conversations, the odd looks he would give me...Jacob liked me. Like, like-liked me. Holy fuck\u2014how did I not see that before? He took a bite off of his cone and asked, \"What about you, Cat?\"\n\nI dropped my gaze, \"I always wanted to be a writer.\"\n\nHe shrugged, \"So, be a writer. Nothing is stopping you.\"\n\nAnd I realized, yeah, he's right\u2014as long as I made sure Mom went to the doctor, my life wouldn't get thrown through a blender. Maybe I could cling on to that dream after all. We carried on awkward conversation thorough out our lunch and during our walk back, though it was just as much my fault as it was his\u2014realizing that he had a thing for me was something so out of left field I felt my blatant confidence waning; what else did I miss because I had my head too far up my ass?\n\nBy the time we got back to our lockers, there were only a few minutes left before next period. He grabbed his stuff and shut the door, \"So, there's this French film that is showing at that small theatre in the art gallery on Sunday. I'm going to go. You know, in case you want to come.\"\n\nI slowly shut my locker, hearing the muffled click\u2014he and I had never hung out outside of school before. Was it a date? Wait, did it matter if it was? Why was I putting labels on this\u2014I offered him a smile. \"Yeah, that sounds cool. What time?\"\n\nHe shrugged, \"It starts at seven, but if you want I can pick you up at five and we can get a bite to eat.\"\n\nHoly fuck. It was a date. I grinned like a fool, \"Okay. If I don't see you later today, I'll see you at five on Sunday.\"\n\nWhen he smiled, I realized how infrequently I saw him do that, \"Have a good weekend until then, Cat.\" I watched him awkwardly walk down the hall.\n\nI spent the next two class periods trying to figure this shit out\u2014Jacob Tegen. Before, old me dated Colton up until the last month of school, when he dumped me because he said I was too clingy. I took it really hard and struggled in that last month, but I had no memories of Jacob Tegen during that entire time. I truly blew him off my senior year and never heard from him again. Would he be at our twentieth class reunion? \n\nBy the time Spanish came rolling around, I was starting to lose my resolve. This new development with Jacob was unexpected to say the least\u2014but I always had a thing for Timothy Dane. Like, since second grade. Even after I graduated and obviously even twenty years later. No, I decided, this was my one chance to change my past. It wasn't like Timothy was going to dump Angela or her eyebrows, they got married and had kids. I'd go over to his house tonight, fuck his brains out and then we would both pretend like it never happened and be done with it. The perfect way to lose your virginity\u2014to the one guy you always wanted and never got.\n\nHis eyes locked on mine the moment he came through the door and he flashed me that fucking amazing smile of his. Oh yeah, I'd be cumming on his cock tonight. He took his assigned seat next to me and class started per usual; the teacher handed back last week's test and I aced it. When I glanced over at Timothy's, I saw his slightly embarrassed look.\n\n\"Ouch,\" I said, staring at the big fat F on the top of the page.\n\n\"Tell me about it,\" he replied. He got up and went to talk to the teacher while we had personal time to do our homework. I overheard the conversation even though they tried to keep it quiet.\n\n\"I'm not sure what to tell you, Mr. Dane, this seems to be a habit of yours. Tests count for half of your grade and none of your scores are very good.\"\n\n\"Is there any extra credit I can do?\"\n\n\"I'll tell you what\u2014take time this weekend and study. After school on Monday you can retake the test and I'll record the higher grade.\"\n\n\"Okay. Thank you.\"\n\nTimothy flopped back down in his chair.\n\n\"What's the verdict?\" I said in Spanish.\n\nHe looked at me blankly.\n\n\"What did he say?\" I whispered quietly in English.\n\n\"Oh,\" he replied, stuffing the test in his book, \"I can retake it on Monday.\"\n\n\"That's good news\u2014you can study over the weekend.\"\n\nHe shook his head, \"I have been studying, it does no good. I'm going to fail the class.\" He frowned, glancing over at the big A on my page. I saw the wheels turning in his head and was surprised when he looked nervous\u2014did he look nervous before? I didn't think so. \"I'm guessing you already have plans tonight, but if you don't...maybe you could help me?\"",
        "I did my damnedest not to jump up and down, \"Sure, I don't have anything going on tonight. I can come over\u2014what time?\"\n\nHe looked surprised, \"Um, six? I'll get us a pizza for dinner\u2014what kind do you like?\" He was smiling now.\n\nI couldn't help but return the grin as I watched him write down his address and phone number on a piece of paper, \"I'll eat whatever.\"\n\n\"Cool,\" he said. \n\nHe kept stealing glances at me throughout the rest of the class. Occasionally I'd lean over and erase a word off of his homework when he used the wrong one. He was frustrated\u2014but at himself because each time I did it, he smiled at me.\n\nBy the time the bell rang, I was counting down the seconds until 6 pm. I didn't see Jacob anywhere after school, so I packed up my bag and walked to the bus stop. Half way there, Brandon and Derek caught up to me. It was weird, but we started talking like we were old friends; they even sat by me on the bus. A few stops before they got off, Derek shifted awkwardly in his seat.\n\n\"Hey, can I have your phone number?\" He blurted out, looking surprised afterwards like he didn't really think he'd do it.\n\n\"Um, sure?\" I pulled a pen out of my bag and grabbed his arm, writing the number of my teen line on the back. He grinned like an idiot and they both waved before getting off of the bus.\n\nIt was almost four by the time I got home; Mom wouldn't be home for another hour and a half. I ran up to my room and dumped by bag by the door before kicking off my shoes and shutting my door. Two hours was a long time, but I knew exactly how I was going to pass it.\n\nI stood in front of the mirror while I stripped, watching myself curiously as if I were watching a stranger, which I pretty much was because this body was amazing. When I slid my panties off, I turned and looked at my ass, bending over in half and glancing back at the exposed pussy in the mirror. I was glistening, wet from a day imagining my night with Timothy. I threw some pillows on the floor and laid back on them, watching the curious reflection spread her legs and bare it all to me. My skin was so smooth, so firm and these tits\u2014god, they were heaven.\n\nI watched myself run my hands over them, cupping and squeezing their weight. When I flicked my nipples, they started to harden. As soon as they were perked up, I rolled them in between my fingers, sending a shudder through the youthful body. With a light touch, I traced a path down my flat stomach and let my fingers run through the neatly trimmed bush.\n\nSpreading my lower lips wide, I gazed at my cunt in the mirror, truly appreciating the beauty of the untouched flesh between my legs. I tilted my hips up some more, pressing my tip toes into the ground so I could spread my ass cheeks and see the tight pucker between them\u2014yes, that part of me was still a virgin too. Well, in this eighteen year old body at least...it would be a few years before I took my first cock up the ass and oh god, how much I loved that when it was done right. Took a certain kind of man, though, a patient one who made sure to rub my clit at the same time so I enjoyed it, instead of just stuffing his dick in there without preparing me.\n\nMy fingers easily slipped through the wet lips; I used my left hand to splay them open, exposing the view of my clit. Biting down at my bottom lip in excitement, I teased myself, rubbing it slowly at first along the edges. I had to force my eyes to stay open, focused on the spectacle of watching this long forgotten body as if I were a voyeur watching a stranger. When my fingers started closing in on that bit of tender flesh, my breathing got heavy. I rubbed firmly in a circle, my ass clenching shut tight, my legs tensing\u2014fuck, I wanted a cock bad. I moved my left hand down and slid a finger inside of my wet hole which actually caused me to wince\u2014right, I was a virgin. Normally, by the time I was this ready to go I'd stuff three fingers in there and start fucking myself but right now, one would have to do. I slid it in and out, my other hand still working that tiny little clit faster and faster. I felt the build up, it was different from what I was used to. Working my body over, I sucked in a breath and held it until my legs started shaking and the orgasm hit me. My hips bucked upwards, grinding into my hands and I moaned out loud and low before crumpling down onto the carpet; my entire body was shaking and I could feel my cunt pulsing, the high of cumming rippling through me. Fuck, it was stronger than usual\u2014when it occurred to me why, I laughed. Thirty eight year old me knocked one out solo every night before bed; in a way, I had built up an immunity to it. But this body, this young, svelte body didn't have much experience with masturbation. I know I tried it a few times but never actually got anywhere. Kinda hard to know what goal you're aiming for if you've never reached it before.\n\nI laid on the floor for a long time, floating on that wave of bliss, trying to remain conscious because I knew I should go shower before Mom got home. Finally, when the phone rang, I forced myself to my feet and walked over to it while glancing at the time\u2014it was almost five. The caller ID said Adams, Philip. God, he wasn't going to give up, was he?\n\n\"Hello?\"\n\n\"Hello kitten,\" he said. \"If you apologize, I'll take you back.\"\n\n\"Why the fuck would I want that, Colton?\"\n\n\"Excuse me?\"\n\nI sighed, \"Look, we had some fun but I'm not interested in you anymore. There are plenty of other fish in the sea, you're bound to find someone else.\"\n\n\"I can't fucking believe you, Cat. We were going to go to prom together, remember? That's next week. I already rented my tux and had it matched to your dress.\"\n\nOh, prom, right, \"To my dress? My black dress, I'm assuming? Well, I'm sure you can find someone else to go with.\"\n\n\"I know I can,\" he said arrogantly, \"it's you I'm worried about. You don't have any friends, remember?\"\n\nWhat the hell was I thinking dating this ass hat? \"Please stop calling me, Colton. Good bye.\" I hung up the phone. Rolling my eyes, I hopped into the shower, ignoring the ringing when he called back four more times in the process of me getting ready.\n\nIn my closet, I looked at the black prom dress I had picked out\u2014it was slutty. Slim fitting, thin straps, slit up the side, in fact I'm not sure why my Mom would let me walk out of the house in it. When I noticed the smaller bag near the bottom, I remembered the lace panties and matching bra that I had bought to go with it\u2014prom was when I had decided I would lose my virginity to Colton. Of course, I didn't know at the time that he'd take me down a gravel road a week before, make out in the back seat and then grind against me until he was hard. He blamed me for it and said it was my responsibility to fix it because blue balls were painful. And stupid, desperate to meet someone's approval, eighteen year old me wiggled out of my black pants, stuck my ass up in the air like a dog and let him fuck me in the back seat of his shitty car. God, it was painful too, I was dry and not in the mood but I didn't want to disappoint him. \n\nSighing, I wiped the frown off of my face\u2014not this time. Pulling out the lacy underwear, I slid it on my body and pranced in front of the mirror. Tonight, I was going to lose my virginity to Timothy Dane and I was going to fucking enjoy it. I put on my slim jeans, finding a dark blue, long sleeve button up shirt, which I left unbuttoned just enough so that my bra could almost be seen. Digging through my jewelry box I wasn't too thrilled about what I saw; I put some small studs in my ears, skipped a necklace and put a cheap copper ring on. I slipped on my chucks and grabbed my backpack when I heard the garage door open up downstairs.\n\nMom was standing in the kitchen when I got down there, \"Hi Mom!\"\n\n\"Hey sweetie,\" she said, giving me a hug.\n\nWhen I pulled back I looked at her, \"Did you\u2014\"\n\n\"Yes,\" she smiled, \"I called and the doctor was able to see me today. They ran some tests and I'll know next week.\"\n\nI was so happy, I started tearing up; when she saw me, she cupped my cheek before pulling me close, \"Aw, honey, don't cry. I'm still here. You look nice\u2014are you going out with Colton tonight?\"\n\n\"Ugh,\" I said when I pulled back, \"no I dumped him today. I'm actually going over to a friend's house to study Spanish\u2014can I borrow the car?\"\n\n\"Of course,\" she tossed me the keys before heading upstairs to change, \"Be home by midnight, Catarina. I love you!\"\n\n\"Love you too Mom!\" I called up to her before I went into the garage and hopped into the car. I backed out of the drive way carefully and started towards Timothy Dane's house...yeah yeah, I didn't need to look at the address he wrote down because you bet I damn well knew where he lived. Maybe I casually walked by it a few times a week, maybe I didn't. Don't judge me.\n\nWhen I pulled up to his house, I noticed two cars in the driveway\u2014and realized that his parents were home. I was definitely disappointed, to say the least because I guarantee you that I wouldn't be quiet while losing my virgin and with adults in the house that meant it was a no go. A little deflated, I buttoned up my shirt to hide my bra and grabbed a light cotton jacket out of my bag. Swinging the backpack over my shoulder after locking the car, I walked up to the front door and rang the bell.\n\nMr. Dane opened the door\u2014he looked surprised to see anyone, let alone me, not that he knew me, \"Can I help you?\"\n\n\"Hi, is Timothy home?\"\n\nHe raised a brow and turned his head to call over his shoulder, \"Timothy!\" He stepped back and held the door open, motioning for me to come in. \n\nWhen I did, I saw Mrs. Dane and she was dressed rather nicely\u2014long red dress, high heels, diamond earrings and the like. I glanced at Mr. Dane and he was wearing a suit\u2014they must be on their way out for the night. Woo!\n\n\"I'll be up in a minute!\" Timothy called from downstairs.\n\n\"I don't believe we've met?\" Mrs. Dane said, walking to me.\n\nI waved awkwardly like I figured an eighteen year old girl would, \"Hi, I'm Cat Fletcher. I go to school with Timothy\u2014we are going to practice Spanish tonight.\"\n\n\"You're his study buddy?\" Mr. Dane said, looking me over. It took me a second to realize what was happening\u2014they were heading out the door for a date and Timothy told them a friend was coming over to study Spanish, but probably neglected to mention that I was an eighteen year old hottie who definitely wanted some dick from their son. Fuck\u2014it was written all over Mr. Dane's face, I could tell, he was worried about leaving me alone with his son.\n\n\"Yup,\" I offered and shrugged my shoulders, \"Timothy said if I helped him practice Spanish he'd teach me how to throw a football. It's the flag football unit in P.E. and I throw really bad. Like a girl, bad.\" I frowned before popping a smile back onto my face and casually slipping my hands into my pockets.\n\nThat seemed to ease his worries a little bit but I could see the hesitation in Mrs. Dane's face\u2014certainly they didn't think I was the issue, maybe they didn't trust Timothy? I wracked my brain until I pulled up the memory\u2014oh god, how could I forget...there was a rumor going around school that he and Angela fucked a month ago! I almost started laughing really hard too\u2014I remember the next day she came to school she was limping around like someone shoved a car up her twat or something. I bit my lip, wondering if it was just failed sex, or if Timothy was hung...\n\n\"Maybe we should cancel,\" Mr. Dane said quietly to Mrs. Dane. I eyed them both.\n\n\"Why would you cancel your date? We're just going to be studying, you have nothing to worry about.\" When they looked at me, I let the smile fade off of my face, \"Oh\u2014you think\u2014oh no, you think that...?\" My eyes went wide. With my hand in my pocket I slipped the copper ring onto my ring finger before pulling it out and pointing at it, \"I made a pledge to God, Mr. Dane. I will remain pure so that I can offer my future husband the ultimate gift on our wedding night.\" Right then Timothy came up the stairs and froze when he saw me.\n\nMr. and Mrs. Dane looked shocked. I could feel my face turning red in embarrassment which was just as well because it sold my story. Awkwardly I stuffed my hands back into my pants pockets and turned to Timothy, speaking in Spanish, \"Hello Timothy, are you ready to study?\" \n\n\"Ah, sure,\" he said glancing at his parents.\n\nMrs. Dane smiled and elbowed her husband before grabbing her coat and walking out the garage door, \"Have a good time you two\u2014nice to meet you Cat.\"\n\n\"You too Mrs. Dane!\" I called after her.\n\nMr. Dane pulled some cash out of his wallet and walked over to his son. He handed it to him and said something stern before walking out as well. I watched their car pull out of the drive way before I breathed a sigh of relief and glanced at Timothy\u2014he was staring at me skeptically.\n\n\"What?\" I said.\n\n\"Nothing\u2014I, ah, I didn't realize you were...you know, religious.\" He walked over to the couch and flopped down.\n\nI unbuttoned the top three buttons of my shirt when his back was turned and followed him; I dropped my bag on the floor and sat down beside him, \"I'm not.\"\n\n\"What? You told my parents\u2014\"\n\nI laughed, \"Yeah, they seemed to think that you would be studying with a guy.\"\n\nHe looked at me coyly, \"I might have neglected to tell them you were a chick. They were going out tonight and I didn't think they'd be comfortable leaving me alone with a girl.\"\n\n\"Jesus,\" I said, \"because you fucked Angela?\" Angela and her eyebrows, that is.\n\nHe went wide eyed, \"I didn't\u2014I mean yeah, but\u2014how do you? Did she tell you?\"\n\n\"Do I look like I'm friends with her?\" It came out more disgusted than I intended it, so I back peddled, \"She was walking around like a cowboy for a few days, it was pretty obvious.\"\n\n\"Fuck,\" he said. His face started turning red and he stammered out the rest, \"It was an accident.\"\n\n\"You...accidentally stuck your dick into her? Like, you tripped and fell and it just popped in?\" I was trying really hard not to laugh at him; when he saw my face he started laughing too. \n\nHe ran his hand over his short hair, \"Ugh, we were dry humping and it just kinda went in so we, you know.\"\n\nI blinked a few times, \"You know you're supposed to dry hump with your clothes on, right?\"\n\n\"Well I do now,\" he shrugged.\n\nFuck, teenage boys are stupid. \"Well there are going to be no accidents tonight,\" I said in smooth Spanish, \"I'm going to fuck you until you can't see straight.\" When he stared blankly at me, I felt myself getting wet. God, he was hot. I lied in English, \"I said let's go over the test materials first.\"\n\n\"Right, Spanish,\" he said very unenthusiastically. We grabbed our books and started studying; I quizzed him on a few things and discovered his main issue was with conjugating verbs. Yeah, I know you don't know what that is, because you read shit, not write it\u2014be quiet and let me finish.\n\nAfter about an hour he was getting a handle on the stuff he failed. He paused for a bit and I went to the bathroom while he ordered us pizza. When I was washing up, I kept staring at myself in the mirror, \"You're really going to go through with this,\" I whispered to my reflection, \"you're going to lose your virginity to Timothy Dane...fuck, he's hot, but...is this weird? I mean, you're like, thirty eight so...you're a cougar technically.\" I glanced down at my shirt and undid another button, starring at the perky tits alluded to by the cleavage, \"Naw, this body is definitely not thirty eight.\"\n\nWhen I got back out to the living room, Timothy was eyeing me while I sat down. I picked up my Spanish book and turned to him, \"So should we go over this week's stuff?\"\n\n\"Yeah,\" he said, tearing his gaze away from me, only to look back again, \"You know, Cat, you are really easy to hang out with.\"\n\n\"Thanks?\" I smirked.\n\n\"I mean, you are different than I thought you'd be. Before you were all quiet and I could never really figure out if you were scared or angry but now you're\u2014you're like one of the guys, but you're not a guy, you're really...hot.\" I stared at him for a long time until he finally looked away, \"I'm sorry, I shouldn't have said that.\"\n\nI laughed, \"You know I've had a crush on you since second grade, so...\"\n\nHe looked surprised, \"Really? No, I didn't...why didn't you ever say anything?\"\n\nI shrugged, \"I wasn't very good at talking to anyone, let alone the hottest, most popular jock in school.\"\n\n\"So, what changed?\" He seemed flattered by the compliment. I noticed that he, ever so slightly, started to lean closer to me.\n\n\"Hindsight,\" I said, my gaze locked on his delicious looking lips, \"I finally realized that in twenty years, I didn't want to look back at this time in my life with regret.\"\n\nHe smiled, \"Well, hopefully you won't regret tutoring me.\"\n\n\"I will if you fail,\" I snipped and closed the gap between us. My heart was pounding a million miles an hour when his lips touched mine\u2014the self conscious part of me feared he would pull away...but he didn't. I rested my hand on his chest though honestly, I wanted to grab his cock right then. I parted my lips when his tongue prodded at me and let him into my mouth. The kiss was...it was...sigh, it was fucking awful. He was a horrible kisser, there was so much spit coming out of him and instead of teasing me with his tongue he shoved the whole thing in there and just left it because obviously he didn't have a fucking clue what to do with it either.\n\nThankfully, the door bell rang. He pulled back and sheepishly looked away before he paused, I noticed his cheeks getting red. He got up and walked to the front door and I wiped the pint of slobber off of my face. Well, that was a disappointment but it doesn't matter, because I want his cock and not his mouth, remember?\n\nI followed him into the kitchen and he handed me a plate, \"Do you want a soda?\" He asked, though he still couldn't make eye contact.\n\n\"Sure,\" I shrugged and grabbed a few slices and put some on his plate for him.\n\nWe walked out into the living room and sat on the floor next to each other in pure fucking silence. Like, silence so thick that you could cut that shit with a dull plastic knife. Maybe even a spork. We were both on our second slices before he said, \"I have a girlfriend.\"\n\n\"I realize that,\" I replied.\n\n\"I don't plan on breaking up with her,\" he mumbled to his piece of pizza. \n\nThose eyebrows must have been plucked with dark magic, because for some reason that twig bitch had her claws hooked into him\u2014whatever, I wasn't looking for a boyfriend. \"So, you said I'm like one of the guys, right? That means I should just bluntly say whatever is on my mind?\" I set my slice down on the plate and looked at him.\n\nHe looked nervous when he met my gaze\u2014oh fuck, he probably thought I was one of those clingy girls. I suppose that makes sense because he was hella gorgeous so he always had chicks fawning over him. \"Yeah,\" he replied.\n\nAll right, here goes nothing, \"I'm not looking for a boyfriend, Timothy. I'm looking for...one night.\"\n\nHe blinked, \"One night?\"\n\nOMFG teenage boys\u2014how the hell did any of us lose our virginity to them? Seriously! \"One night of sex. With you.\" His eyes got wide and his mouth dropped open. My resolve was starting to wane and I was beginning to lose my confidence, \"Don't make this weird or anything, Timothy, I just want to lose my virginity to you, then we can go our separate ways.\"\n\nI sat back and stared off at the wall\u2014maybe I screwed this up, maybe I read him wrong and he really loved arched eyebrows. I was starting to get nervous and contemplated going to the drug store to buy some tweezers when he shifted awkwardly.\n\n\"I've only done it once before,\" he said nervously, \"but...if you want to...\"\n\n\"I do,\" I replied, oh fuck did I want to.\n\n\"Okay, so...how do you want to do this?\" He set his plate down and turned his entire body to me.",
        "I felt the shit eating grin cross my face again, \"Well, first I'd like to give you a blowjob...then after you've recovered from that, maybe we can go to your room?\" When I looked over, he was excited\u2014of course he was excited, I mean, what eighteen year old guy would say no to putting his dick in a chick's mouth?\n\nHe started unbuttoning his jeans until I reached out and took his hands, stopping him, \"Why don't you stand up?\"\n\nHe eagerly got up and stood in front of me; he wiped his hands on his shirt. I tipped up onto my knees and looked into his eyes when I unbuttoned his pants. I hooked my fingers between the elastic of his boxers and his waist and slowly tugged them and his jeans down. When my gaze fell on his hard dick, I couldn't help but lick my lips\u2014this was what I wanted. It wasn't bad, a little small like maybe six inches and not terribly thick; when I reached up and wrapped my tiny hand around it, I could circle it with my thumb and middle finger. But that's okay\u2014I could work with this, as the adage goes, size doesn't matter it's what you do with it. That's true\u2014well, for the most part, because sometimes you just want to have your cunt stretched by a nice fat cock or have a long one bottom out and poke your ovaries until you shoot eggs like a fish. At least with Timothy's cock, I could take it all in my mouth while still being upright.\n\nI opened my lips and glanced up at him, maintaining eye contact when I took him into my mouth\u2014the look on his face, let me tell you, was sheer awe. In one long, slow motion I took the entire thing in and felt the tip hit the back of my throat.\n\n\"Oh fuck!\" He said, eyes wide with a huge grin on his face.\n\nI closed my lips down on his shaft and pulled back, letting my tongue wiggle against the bottom before circling the tip. By the time I worked my way back down again, he was panting. I decided to give my signature move a whirl and left his entire cock in my mouth; then I started suckling, squeezing my lips in time with my tongue moving back and forth along the bottom. It was a good thing I was holding my breath because he came, hard. His hips bucked forward while he tried to shove his cock deeper into my mouth and his face crinkled up before he threw his head back. I reached up and grabbed his thighs to hold him still and keep him from pulling out because I didn't want cum all over my clothes. I choked it down\u2014not my favorite thing to do, but in a pinch you just gotta swallow it.\n\nWhen he finally started shaking and I thought his knees were going to buckle, I stopped sucking as hard and instead was gentle with his softening cock, lazily running my tongue over it while I pulled back until it finally popped out of my mouth. Timothy staggered backward a few steps and fell into the arm chair, staring intently at me.\n\n\"Holy shit, where did you learn how to do that?\" He managed to get out in a complete sentence.\n\nI tried not to laugh\u2014I mean, that whole blow job took like maybe a minute\u2014I figured teenage boys wouldn't have much lasting power but shit, was I glad I didn't waste my virginity to a zero to sixty seconds attempt at sex. \"I ah,\" fuck, what was I going to say? I couldn't tell him the truth\u2014that I had given many, many blow jobs over the twenty years since I graduated high school, \"I read about it on the internet?\"\n\n\"Wow,\" was all he managed to say. \n\nI licked my lips and grinned at him as he pulled his boxers and pants up while still sitting, \"So maybe in a little bit we can go to your room?\"\n\n\"Whatever you want, Cat,\" he grinned at me.\n\nI wanted it right then\u2014I was dripping and ready to go, but I figured even a teenage boy would need like ten minutes to recover. I laid on my stomach on the floor, pulling my Spanish book up in front of me and raising my feet up into the air. I knew it looked sexy as hell and from his position he could see right down my shirt to my black bra. With a flirty gaze, I quizzed him on some more verbs. We barely made it to ten minutes before I could see his cock straining in his pants.\n\nI shut my book and stood up, \"Want to show me your room?\"\n\nHe almost leapt out of the chair and led me downstairs to the basement; his room was a typical boy room, decked out in dark green and blue, plaid comforter, shit everywhere like a tornado went through it.\n\n\"Sorry,\" he mumbled, kicking clothes into a pile, \"I didn't think we'd end up in here so it is a mess.\"\n\n\"I don't care,\" I said after taking my chucks off; standing before him, I started to unbutton my shirt which immediately got his attention. When I pulled it off and exposed my lacy black bra, his eyes were glued to my tits. I undid my pants and swayed my hips from side to side while I wiggled out of them, bending in half to pull them off and stood in front of him. \n\nI intended to undress him but he was in such a hurry his shirt was ripped off over his head and his pants and boxers were gone and in a pile before I had a chance to make a move towards him\u2014he was just as eager as I was. He came at me and reached up to touch my tits\u2014but stopped. I saw the doubt in his eyes.\n\nWithout hesitation I swung my right hand up my back and unclasped the bra, letting it fall from my arms. I took his hands into mine and I brought them up to my breasts, guiding his fingers to cup them. He was almost giddy about it. After breaking the ice, I let him explore the mounds on his own; he fumbled with it, squeezing too hard, pressing them together, jiggling them slightly. It was kind of a turn off.\n\nI realized then, that what I had imagined my first time being with Timothy was something more akin to a harlequin romance novel\u2014that a handsome, rugged, buff, experienced man would sweep me off my feet and make love to me all throughout the night, the pain of my lost maidenhood soon forgotten in the throes of bliss. But this\u2014this was not that. No, this was going to be some horny, inexperienced teenage boy blindly jabbing his dick around until it ended up in something close to a hole only to thrust three times and cum.\n\nI took Timothy's hands off of my tits and turned him towards the bed, pushing him down onto it. I slid out of my panties and laid down next to him; he immediately rolled his body over mine, putting his knee between my legs to spread them. When his mouth came down on mine, I suffered through a few minutes of kissing until I felt him prodding his dick near my cunt; I pulled back and stopped him, \"Timothy...\"\n\nThe excitement on his face drained, \"You...changed your mind...?\"\n\n\"No,\" I said, \"I want to be on top.\"\n\n\"Oh, okay,\" he quickly flopped over onto his back, his grin returned.\n\nYou bet your ass I wasn't going to let him top me\u2014I wanted to cum and if he had control I'd blink and it would be over. I swung my leg over his waist and reached between us to take a hold of his dick; I swirled the tip of it against my wet cunt and I actually heard him moan. I positioned it in the opening and slowly pressed backwards. It was tight and I felt a burn of pain, but nothing like the first time I lost my virginity\u2014I was so wet now, I was so fucking horny that by the time I impaled myself on him the pain was long forgotten.\n\nI sat there on his dick and savored the moment I always wanted. Finally, I leaned forward, placed my hands on his bare chest for balance before I started to lift my ass up and drop it back down slowly. Timothy's hands found my hips and he squeezed the flesh gently; I gazed down into his eyes with a smirk. Half a dozen strokes and he said, \"Fuck, Cat, I'm so close.\" I stopped immediately and he groaned, \"Cat.\"\n\nI reached back and grabbed his balls and pulled them downward gently; he gaped at me when I did that, \"Yeah, well I'm not close. You're just here for the ride, remember?\"\n\n\"Wh\u2014what?\"\n\nI slowly started rocking again, \"I've wanted this for a long time Timothy\u2014don't screw it up for me. I am going to fuck you until I cum on your dick, then you can do whatever you want. Got it?\"\n\nThe mixture of shock and need on his face didn't allow for him to respond, so he just laid there and took it. I continued moving, my tight pussy wrapped around that young hard dick; I felt the yearning building up inside of my core and I knew that it wouldn't take me much time but I drug it out as long as I could. I had to stop at least two more times and tug on his balls to keep him from cumming. My pace increased and I felt my breath get stuck in my lungs, my entire body tensed while I ground down on his cock; then, I felt that built up tension explode inside of me\u2014it hit with such force I twitched and fell forward onto his chest. I closed my eyes and let the warm bliss permeate my body. I felt my cunt convulsing around his hot dick, grabbing it and kneading it.\n\nTimothy's arms wrapped around my back and he held me, not moving while I laid there, panting against his neck. I knew he was waiting; I tilted up my head and whispered into his ear, \"Fuck me. Hard.\"\n\nHe didn't hesitate; he kept his grip around my back but started pounding his cock into me, his hips raising both of us out of the bed. I groaned and grasped onto his shoulders when my second orgasm hit\u2014not long after, I heard him moaning and he jammed his cock into me as far as he could, his body quaking when he came.\n\n\"Fuck,\" he said softly, \"that was...amazing.\"\n\nI laid on his chest, listening to his rapidly beating heart, \"Yes, it was.\" I closed my eyes, my entire body pulsing with ecstasy. \n\n...\n\nWhen I opened my eyes, I saw it raining outside and I realized I was sitting on my porch. Ah fuck, I did really pass out and have a hangover dream. Son of a bitch!\n\nI grabbed my phone and got up, walking through the front door of my house and froze. What the actual hell\u2014everything was different. The furniture was expensive looking and not the old crap my mom had bought almost thirty years ago, the house itself looked like it had been remodeled and was decked to the nines.\n\nI jumped when my phone rang, lifting it up I saw the caller ID, John Werner. Who the fuck is that, and how did his number get into my phone?\n\n\"Hello?\" I answered, skeptically.\n\n\"O-M-G Cat! I just read the last five chapters and they are gold,\" he said that last word in a sing-song sort of way, his voice was slightly effeminate, \"I know you are busy this weekend, but do you think you could get the next five to me by Wednesday? I am so excited! We're almost done!\"\n\nI had no clue what he was talking about; I closed my eyes and memories came pouring into my head\u2014I graduated, Mom beat cancer, I went to college and holy fuck I was a writer! This dude was my agent! \"Sure thing John, I can do that.\"\n\n\"You are such a peach, Cat. I gotta go\u2014I'll talk to you Wednesday. Bye!\"\n\nI clicked the end call button on my phone; when I looked down, expecting to see the frumpy fat pants I usually wore, I saw a slim pair of leggings. Oh my god\u2014I literally ran into the bathroom and started stripping to gawk at my naked self. My tits were big and perky, my stomach was flat, my ass had a nice curve to it and my legs were toned\u2014I kept the body I had in high school. Touching my stomach I instantly remembered hours and hours spent at the gym, shopping at the organic grocery store, eating salads for dinner like a fucking adult.\n\nA huge smile grew on my face; I grabbed my phone and tapped my way to the event invite: Yes...No...Maybe. Yes, definitely yes.\n\n...\n\nIt took a while for everything to come back to me, but somehow I knew it all\u2014my old life and my second chance. I finally made something of myself, I finished college, I was a fucking award winning author\u2014I even called Mom and talked to her for almost an hour; she got remarried and moved down to Florida to retire.\n\nI found this amazing black dress in my closet and a pair of sexy black high heels. I felt great when I left home, but the closer I got to the reunion I started to have doubts. I sat in my car outside the huge hotel that it was in. I was so fucking excited to go in there and strut my stuff, but now? I don't know, it is hard to explain it. My life was amazing and yet\u2014I was still single. I never really found that one person I was meant to be with; I thumbed through the list of confirmed attendees and clicked on a few of their profiles\u2014they were all still married with kids, stupidly posed family photos and tons of pictures out with friends. Yet mine\u2014my profile was full of exotic landscapes from my travels, photos of me at book signings and posts promoting my newest novels. Not a single picture of me on a date or hanging out with friends or living a life outside of my career. I felt like I missed out on something both times I lived my life.\n\nI got out of my car and put the keys in my clutch before walking inside. Somehow I almost felt more insecure now than I did in high school the first time. The conference room was converted into a makeshift club, the lights were low and a huge bar was set up on one side. I checked in at the table and got my name tag before deciding I would need a drink to get through this\u2014then, I caught his gaze. Timothy flashed me that million dollar smile when I walked up to the bar.\n\n\"Tequila sour,\" I said to the bartender. While he mixed my drink, Timothy scooted over, resting with one arm on the bar.\n\n\"Catarina Fletcher, you're a sight for sore eyes.\"\n\nI glanced over at him with a smirk, \"Timothy Dane. How are you?\"\n\n\"Better, now that you're here,\" he said, sliding into the seat. \n\nI shook my head and sat down as well, \"Aren't you here with your wife?\"\n\nHe rolled his eyes, \"Angela? Yeah, she's over with her group of has beens.\"\n\n\"Has beens,\" I laughed, \"what's the matter, Timothy? Your life isn't the way you thought it'd be?\"\n\nHe knocked back his whisky shot\u2014I wondered how many he already had before he got here. His voice was low, quiet, \"That's the understatement of the fucking year.\" Shooting me a sideways glance, he added, \"You, on the other hand, have done quite well for yourself. And you've still got that banging body you had back in high school.\"\n\nI thought back on it, sifting through the memories\u2014yes, we fucked and he took my virginity and that was that, just as I thought it would be. Nothing ever became of Jacob and I, we went to prom together as friends but he moved east for college and never came back. Every now and then we'd email each other, but there hasn't been word from him in years. In fact, while I can recall many good relationships, none of them ever stuck. \"Well,\" I shrugged, sipping my drink, \"we'll always have Spanish class.\"\n\nTimothy turned to me, lust in his eyes, \"You know, you were the best I ever had, Cat. Wanna slip out for a bit? I can get us a room upstairs.\"\n\nFuck\u2014seriously? Yes, I wanted to grind myself on that cock again. I wanted to leave him with another memory of what he missed out on during the past twenty years with Angela's eyebrows. But, somehow, I knew that one fleeting night of passion with him would only make me feel even more lonely in the end. I huffed a laugh, leaned forward and kissed him on the cheek, \"Not in the cards, Timothy. Have a good night.\"\n\nRising, I got out of my seat; I could feel his eyes on my ass, on the way it swayed when I walked in heels. Good, I thought\u2014always leave them wanting more. I walked out the door and into the somewhat quiet hallway\u2014what was I doing here? I mean, sure, I had a great life now, I had my dream job, my Mom was still alive, I had a great body and wanted for almost nothing, but why was I here? To rub it into the faces of these sheeple? It occurred to me that I was doing the exact same thing they would have done to the old me\u2014show up to the twentieth reunion so they could see how much of a failure their classmates' lives turned out to be, just to make themselves feel better. I sipped my drink and stood there, looking through the doors to the pulsing dance floor, seeing middle aged adults desperately cling onto what they once were instead of rejoicing in who they had become. No, if I learned one thing, it was that I stopped trying to make everyone else happy a long time ago. I knocked back my drink and set the empty glass on a table before turning around to leave.\n\n\"Hello, Cat.\" It was a voice I hadn't heard in a long time.\n\nJust as I turned, my eyes fell on him\u2014he was tall and slender, though not scrawny, not anymore. His light brown hair was swept back at an angle and his bright green eyes twinkled out from behind thick black glasses frames. He had the beginnings of a beard, more like scruff if a man didn't shave for a week. His hands were tucked into the pants of his navy three piece suit and when he walked towards me it was like a moving GQ cover. Fuck, he was drop dead gorgeous.\n\n\"Jacob?\" I said it as a question, but I knew exactly who he was. Who would have thought?\n\nHis confident, gliding steps brought him forward. When his hands came out of his pockets, they immediately slid around my hips. He pulled me towards him and leaned down, never breaking his gaze. When his lips met mine I melted into his mouth, my entire body relaxing against him, against this handsome man who was once my friend. When he finally pulled away, I was breathless.\n\n\"I should have done that twenty years ago,\" he panted out, his eyes wandering over my face, his desire, his need for me finally as clear as day.\n\nI knew, right then, that he was the one I missed out on, \"Hindsight is a bitch, isn't it?\""
    ],
    "authorname": "AfterDusk",
    "tags": [
        "humor",
        "humour"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/hindsight-9"
}