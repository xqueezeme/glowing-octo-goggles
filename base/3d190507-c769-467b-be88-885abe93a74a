{
    "title": "Sex Education Ch. 02",
    "pages": [
        "It was time for the Thanksgiving Formal at Barton Hills. I had spent the last four weeks trying to figure out a way to seduce Mim. My roadblock was that I didn't think Mim would fall for any cheap tricks. She was not only beautiful, but smart and sophisticated. In the end, I decided to just go and have a good time. Maybe karma would be with me. At the very least, I would spend an evening with Mim.\n\nThere are not many occasions that I can dress in formal Scottish attire. My great grandparents emigrated in the early part of the twentieth century. Along with their meager possessions, they brought a strong sense of their culture. My great grandfather worked hard, opened a small bank that soon became a big bank, catering to immigrants. My grandfather took over and he increased the family's prosperity, along with a sense of propriety. He instituted the tradition of a formal family dinner every Sunday. He would take the family to the local Episcopal Church and then back to his house for a splendid meal. He also insisted on formal Scottish attire.\n\nThus from an early age I learned how to wear a kilt. As I grew, I also developed a special kinship with the Scottish customs. I wore a kilt to my wedding and every other formal event. I loved proclaiming my heritage in such an obvious and stylish way.\n\nI adjust my sporran while evaluating my reflection in the full length mirror. From the ghille brogues on my feet to the Prince Charlie jacket, I look the perfect Scottish gentleman. I hope Mim will find me well turned out, but maybe not a \"perfect\" gentleman.\n\nArriving at the Academy I park and head over to the main administration building for a small reception. \n\nRuthann greets me at the door.\n\n\"Wow, Mac,\" she gushes, \"you look really cool. And handsome.\" She blushes a bit with that admission.\n\n\"And you, my bonnie lass, are a sight of beauty.\"\n\nRuthann blushes deeper. But it's true. She's wearing a cocktail dress of soft black crepe that reaches her knees. Standing in two inch pumps, she is as tall as I am. Her hair is braided into one long plait and rests over her shoulder. The dress accents her young curves and small breasts that do not appear to be encumbered by a bra and the shoes make her long legs even more appealing. Her make-up is not over-done and I wonder if Mim might have had a hand in it. My suspicions increase as I lean forward to kiss her cheek and inhale the same delicate scent that Mim wears.\n\n\"Thanks, Mac,\" she coos and kisses me back on my cheek. \"Let me go and let Ms. Collins know you're here,\" she says and turns away.\n\nI look around the formal entry hall and study the portraits of former Heads of School. They all look fairly stiff and quite formidable. I don't know the current head, but heard she is not as rigid as her predecessors. She understood that today's parents and students want order but not a stranglehold on their burgeoning daughters.\n\nI sense movement and turn. I stop breathing.\n\nMim is crossing toward me. I did not think such beauty existed.\n\nMim is wearing a floor-length white soft silk gown with a tartan sash flowing from her right shoulder to her left hip, where it is knotted together. A brooch pins the sash to her shoulder. Her dress is slit halfway up her right side and a flash of leg appears with every step. The silk clings to her body, subtly defining her feminine figure. I can see her breasts move feely under the fabric and notice no visible break in the fall of the dress over her hips. I wonder if she too is naked under her clothing.\n\nHer golden hair is piled high and pulled into a loose bun in the back. With her hair out of the way of her long, elegant neck, my gaze falls to the slightly scooped neckline. She has accented her green eyes with enough mascara to make them appear to be two emeralds set in ivory. Her lips are a deep pink to help highlight the blush on her cheekbones. \n\nShe seems to glide toward me. I look down to see a black patent leather pump appear as the slit that reaches half-way up her thigh exposes a shapely leg.\n\nAs with Ruthann, her shoes bring her to eye level with me. She rests her hand on my shoulder and leans in to kiss my cheek. I am not sure what swooning is, but I think I may have done so as her lips touch my skin.\n\nPulling back she smiles and then a cloud crosses her face.\n\n\"Mac, are you all right? It looks like you've seen a ghost.\"\n\nRecovering, I try to make light, \"A bit early in the evening for Macbeth, Mim.\"\n\nShe smiles but asks again.\n\n\"Seriously, are you feeling all right?\"\n\nI decide to go for it.\n\n\"Mim, I am feeling a bit weak in the knees.\"\n\nShe frowns and then I continue.\n\n\"I have never seen a more beautiful woman than the one before me.\" \n\nShe beams and slips her arm through mine.\n\n\"Thank you.\"\n\nGuiding me toward the main hall, she adds, \"And, I must add that I have never seen a Scottish gentleman look better.\"\n\nWe enter the hall and I swear there is a moment of silence as heads turn toward us. I catch Ruthann out of the corner of my eye and she silently applauds.\n\nI wink and then feel Mim moving us forward. We begin the introductions.\n\nAfter forty minutes of champagne and light conversation, the Head of School makes a few remarks thanking everyone, especially the generous patrons of the Academy. She then instructs us to head to the ballroom attached to the original mansion.\n\nAs we are moving along with the crowd, with Mim easily resting her hand on my arm, a different hand slips under my other arm. I turn to see my friend Jennifer.\n\n\"My God, Mac, you are beyond handsome tonight.\"\n\nMim peeks her head around and says, \"Hell-o Jennifer. Nice to see you. Here with your husband?\"\n\nHmm, I sense the beginning of a cat fight, or at least one feline marking her territory.\n\n\"Actually, Caroline and I are here together. The boys are off to Bermuda for golfing and whatever.\"\n\nI notice Caroline, another mutual friend from my married days, standing alongside of Jennifer.\n\n\"Too bad,\" purrs Mim. \"I understand the band is quite good.\"\n\nNot to be pushed aside, \"Well, maybe Mac can find a spot on his dance card for an old friend.\"\n\n\"Maybe,\" replies Mim, \"but I think it just may be full.\"\n\n\"Well,\" says Jennifer as she squeezes my bicep, \"we'll just have to see.\" She and Caroline move off. I think Jennifer is wiggling her ass a bit as she moves in front of us. \n\n\"You can retract your claws now,\" I say lightly.\n\nMim blushes then smiles. \"That obvious?\"\n\n\"No matter,\" I say. \"I do feel a bit flattered.\"\n\n\"Why so?\" she replies. \"I do think your dance card may be full. I know I love to dance and I did promise Ruthann and Chrissy they each could have a turn or two. And, our dear Head of School whispered that she wouldn't mind a spin around the floor. So, your friendly flirtatious friend may just be shite out of luck.\"\n\nI explode with her last statement and pat her hand resting on my forearm. \n\n\"I am your guest and am at your complete disposal.\"\n\n\"Complete! Hmm.\"\n\nI leave that hanging as we enter the grand ballroom. There are round tables set along the perimeter and the middle left open for dancing. A five piece combo occupies one end of the room and is playing soft background music as we take our seats. \n\nThe table conversation is both spirited and entertaining. Each person contributes stories and observations. As the wait staff is clearing the dinner in preparation for dessert, a young woman rushes to our table and whispers into Mim's ear. She nods and the young woman leaves.\n\n\"I'm afraid you must excuse me for a bit. Seems one of the girls in my dorm has taken sick. I'll look in on her and see if she needs the nurse. Please enjoy yourselves and I'll be back as soon as I can.\"\n\nShe turns to me and says softly, \"Sorry, Mac. I'll ask Ruthann and Chrissy to look after you. Save me a dance.\"\n\nMim stands and quickly leaves the ballroom. My eyes trail her as her bottom moves seductively under the silk.\n\nWe enjoy dessert and the band picks up the pace and the dancing begins.\n\nChrissy and Ruthann approach me. \n\n\"How about a dance?\" Chrissy asks.\n\nWe make our way into the crowd. There's a slow ballad and I take the young blond in my arms. \n\nShe rests her head on my shoulder and we slowly move to the music. I am amazed at the womanly feel of her body. Her surprisingly full breasts press into me. She softly sighs and pushes into me. Our thighs rub and my hand rests on her muscled lower back.\n\nThe song ends and Chrissy whispers in my ear, \"That was dreamy, Mac. Thanks.\"\n\n\"Thank you,\" I reply and lead her back to where Ruthann is waiting.\n\n\"Com'on, Mac,\" calls Ruthann as she grabs my hand and pulls me to the dance floor as the band revs up.\n\n\"I doubt if I'm any good at this type of dancing,\" I say.\n\n\"Hey, we're a bunch of white folks. Nobody is good at dancing.\"\n\nThe band makes its way through a couple covers of modern pop songs and then takes the tempo down with a slow tune.\n\n\"Now, this is something I can do,\" I say to Ruthann.\n\n\"I hope so, 'cause I suck at real dancing. I noticed Chrissy was doing great.\" \n\n\"It's not hard.\"\n\nI slide my hand around her waist. She looks at me with doe eyes. \n\n\"Put your hand on my shoulder. I'll guide you and just slide your feet along with me.\"\n\nShe's athletic enough to be able to control her body and we manage to get through the dance. She smiles broadly at the end.\n\n\"Thanks, Mac. That was cool. I think we actually danced.\"\n\n\"We did, indeed. And no need for thanks. The pleasure is all mine.\"\n\n\"Mac, you're cool.\" She hugs me. I felt her young body tight against mine, her small breasts pushing into my chest. Alarm bells started going off and I step back.\n\nThe band starts another slow tune. Ruthann looks at me and smiles. She comes into my arms and we dance. After a minute, she moves her body close to mine and entwines her arms behind my neck. Her body conforms to mine. I feel her breasts push into my chest, sense her nipples digging in, her legs brush my thighs and her groin rubs against me.\n\nAlthough she is just a young girl, I am just a man. I feel my body begin to react. She must feel my growing reaction and pushes slightly harder into my crotch. She sighs softly into my ear.\n\nI gently unclasp her hands from my neck. Stepping back, I smile at her.\n\n\"I need a break.\"\n\nShe looks at me through half-closed eyes.\n\n\"This is so sweet, Mac. Do we hafta' stop?\"\n\nI then nod and stroke her cheek. \n\n\"I need something cool to drink.\"\n\n\"Yeah, me too,\" she sighs understanding that whatever was starting to happen was not going to continue. \"Let's find Chrissy and get a drink.\"\n\nWe see her friend at the bar. The girls get diet colas and I order a beer.\n\n\"Let's go out on the terrace. I need to cool down,\" says Ruthann.\n\nThe night is cool, but not cold. We stand looking at the cloudless sky with its endless band of stars.\n\n\"You guys looked totally together in that slow dance,\" offers Chrissy.\n\n\"Mac, is smooth.\"\n\n\"Amen!\" says Chrissy.\n\nI lift my beer and the girls clink their glasses.\n\n\"Mac, you really are the man,\" Chrissy says.\n\n\"I guess you'd have to be to be in the sex ed class,\" adds Ruthann.\n\nAfter a silence, she asks. \"What was it like standing there naked?\"\"\n\n\"Ruthann,\" hisses Chrissy, \"that's not a nice thing to ask.\"\n\n\"Well, I don't know. I mean I don't think I could do that in front of a class of guys.\"\n\nI laugh. \"Yeah, not something I do every day.\"\n\n\"But you seemed relaxed,\" says Chrissy.\n\n\"Funny, I think those dark glasses probably help us more than they do the audience. By not being able to see all the girls, you feel like you're not on display. It sounds strange, but I never felt exposed.\"\n\n\"Well, you were,\" snorts Chrissy.\n\nThe three of us laugh. \n\n\"Anyway,\" adds Ruthann, \"you were the only guy who didn't get, you know, like hard after it was over.\"\n\n\"Disappointed?\"\n\nRuthann chokes. \"Shit, sorry, I mean I wasn't implying...\"\n\n\"I'm only teasing you, Ruthann.\"\n\n\"Oh, yeah. But, Mac, when we were dancing, I think I felt something.\"\n\nMy stomach flips. \n\n\"Sorry, Ruthann, I'm embarrassed. I didn't mean for anything to happen.\"\n\n\"Wow, like you got hard, Mac?\" asks Chrissy.\n\n\"Not totally. That's why I needed this break. Look, girls, I'm a guy and you are two beautiful young women. Sometimes, things happen. Don't think I'm some old perv.\"\n\nThey each snake an arm through mine.\n\n\"Mac, we don't think that way, honest,\" says Ruthann. \"As far as I'm concerned, we never have to talk about it again.\"\n\nShe kisses my cheek and Chrissy kisses the other. We look at the stars for a while.\n\n\"You know,\" Ruthann says, \"I never saw a guy naked before our class and certainly never saw a hard-on. It was totally weird seeing Robbie with an erection. I was shocked but also turned on a little.\"\n\n\"Yeah, me, too,\" says Chrissy. \"I really liked feeling all those tight butts and then seeing the other guys hard. That was awesome.\"\n\n\"So, Ruthann, I guess you learned something,\" I ask. \"How about you, Chrissy, also a first as far as seeing a naked guy or an erection?\"\n\nChrissy remains silent, then softly says, \"No, on both accounts.\"\n\n\"Do tell, girl,\" urges Ruthann.\n\n\"Well, my stepfather's son, Jason, is my age. When mom and I moved in with them last summer, I thought it would be kinda' weird. But, Jason is a decent guy and we hit it off. We like the same music and movies and started hanging out together. Our parents dug that and were happy we not causing them grief.\n\n\"Jason lives in a room over the garage. His father fixed up the space and put in a bathroom. Jason liked it because he said he could play his music loud, have friends over and mostly just have private space. At first, he never invited me up. I assumed he just wanted to keep it a special place. After a few weeks, however, I got curious and asked him about it. He said I could come up anytime. So, I started hanging out there. We would hang, watch TV or play video games. A lot of the time, we just chilled and enjoyed being together.'\n\nChrissy finishes her soda and sets the glass on the banister. \n\n\"Can we go in? I'm getting chilled,\" she asks.\n\nReentering the building, Ruthann leads us to a small library. We each take a seat in worn leather chairs and Chrissy takes up her tale.\n\n\"One day I get home late from a friend's house. My mom and stepdad are not around, so I go up to Jason's. I hear the music blasting and knock on his door, but get no answer. I open it and find Jason dancing around his room\u2014totally naked.\n\n\"I sorta' freak. I don't know what to do. He hasn't seen me yet, so I'm thinking maybe I should just sneak back out. Just then, he turns and sees me. He's still dancing and his dick is like flopping around all over the place.\n\n\"He sees me and smiles. Not embarrassed or anything.\"\n\n\"Hey, Chrissy, wanna' dance?\" he calls out.\n\n\"I figure what the fuck, oops, sorry, Mac. Anyway, I start dancing. Totally bizarre. After a while we are both tired and he turns the music down.\"\n\n\"You're a good dancer, Chrissy.\"\n\n\"Thanks. You're naked, Jason.\"\n\n\"He smiles and asks if I want a Coke.\"\n\n\"We're sitting on his bed like this is perfectly normal. Jason says he likes being naked. He explained that's why he was reluctant to invite me up to his room in the beginning. Then, he enjoyed hanging out with me, but he missed being able to be naked. He was going to tell me about it, but now that I was there, he doesn't have to.\n\n\"After that, he was nude a lot of the times I went up there. He never tried to get me to take my clothes off, although he said I could if I wanted. And, he never tried to hit on me or anything. He just liked walking around bare-assed. After a few times, I got used to it. He has a nice body and I had never seen a naked boy before. One day I came up and he was in his bed reading and he had an erection.\"\n\nChrissy looks at both of us and smiles. She is blushing and Ruthann gives her a sip from her glass.\n\n\"Anyway, he says hi like it's nothing. I get a little annoyed.\"\n\n\"Jason, you have a hard-on,\" I said.\n\n\"Yeah. I'm reading some really neat erotic lit. Actually, I was just going to beat-off. Would that freak you out?\"\n\n\"I shrugged and he took that as a no and began rubbing it. I just watched and in a few minutes he was exploding all over his stomach. He asks me to get him some toilet paper from his bathroom. I do and he cleans himself up.\"\n\n\"I needed that,\" he says.\n\n\"I ask him what he's reading and he hands me a book by Anais Nin. I started reading and got turned on myself. She writes really neat erotic stuff. Anyway, from then on, Jason would continue to be nude, walk around with a hard-on and masturbate any time he felt like it. He said I could feel free to do the same, or not. I chose 'or not'\u2014well not with him anyway. The only thing I ever did was help him masturbate. It was neat but since I didn't have any romantic feelings for him, it was just sorta' an experiment. The good thing is I got pretty good at it, at least according to Jason.\"\n\nRuthann pats her hand. \"Wow, I never heard any of that.\"\n\n\"Well, there never seemed to be a good time to bring it up. Tonight, I guess was a good time.\"\n\n\"So, have you had any other times to practice this new skill,\" asked Ruthann.\n\n\"Unfortunately, no,\" says Chrissy. \"Although after seeing the guys at our sex ed class, I was getting itchy palms.\"\n\nWe share a good laugh and fall into silence.\n\nAfter a few moments, Ruthann asks me, \"Hey, did Ms. Collins ask you about helping with The Sirens?\"\n\n\"Sirens? No, she didn't mention anything about them. What do you use sirens for, emergency warning?\"\n\nBoth girls giggle.\n\n\"What? Is there something wrong with them?\"\n\nThey giggle some more and Ruthann says, \"We should let Ms. Collins talk to you.\"\n\nI'm about to push the subject, when we're interrupted.\n\n\"There you are. You naughty boy trying to hide from us.\"\n\nI look up to see Jennifer and Caroline entering the room.\n\n\"Ruthann and Chrissy,\" she says, \"why don't you two girls run along and rejoin the rest of the people. We want to talk with Mac in private.\"\n\nI see the looks in the girl's eyes and hope they don't say what they obviously are thinking.\n\nRuthann pulls it together.\n\n\"Sure, Mrs. Condron,\" she says. \"We'll leave you grown-ups alone.\"\n\nShe and Chrissy leave.\n\n\"Mac, we've been looking all over for you,\" purrs Jennifer. \n\n\"Well, you found me.\"\n\nJennifer walks toward me and I notice she is slightly unsteady.\n\n\"Had a couple champagnes?\"\n\n\"Jus' a couple,\" she giggles. Caroline covers her mouth and joins in the giggling.\n\n\"Was there something special you wanted, Jennifer?\"\n\n\"As a matter of fact there is,\" she says.\n\nShe pulls up a footstool in front of my chair and she and Caroline sit down.\n\n\"Actually, there are two things.\"\n\nHer words are definitely slurring.\n\nI wait but she just sits there smiling.\n\n\"And, they would be what?\"\n\nThe two women look at each other and giggle some more. It's getting annoying.\n\n\"Well, they are related. You see, Mac, I was describing the sex ed class and how you were the star\u2014the biggest star.\"\n\nCaroline blushes and looks away.\n\n\"Yes, I told her Mandy certainly was most likely not exaggerating when she told us what a great fuck you were.\"\n\nI stare at her.\n\n\"What?\" she asks.\n\n\"Oh, come on, Mac. What do you think we girls talk about when you guys are out golfing or driving cars around in a circle? Huh?\"\n\n\"I have no idea.\"\n\n\"S-E-X,\" she says. \"Who's getting it and who's not. Which husband is a good screw. Which guys will go down on us and if they're any good. Sex, Mac, that's what we want to talk about.\n\n\"Mandy used to say you were the best fuck she'd ever had. And, that you could last for hours and had a great dick. We were all so jealous. Christ, Caroline and I have talked about it. Both our husbands are fat and fast.\"\n",
        "\"And, with small dicks,\" adds Caroline.\n\n\"Yeah, puny penises. Dinky dicks. Crummy cocks. Miniscule manhood. I could go on, but you get the point.\"\n\n\"Ladies, I don't want to hear this. Believe me I have no interest in your private sex lives or how you rate your men's equipment. Just tell me what you want, and then maybe I can rejoin the festivities.\"\n\n\"Ok,\" says Jennifer as she leans forward, coming close to my face. I smell the strong odor of wine. Her eyes are glazed. \n\n\"What Caroline wants to know is what you're wearing under that kilt.\"\n\n\"None of your business. What's the second thing?\"\n\n\"Oh, we'll see about whose business it is. And, I want to prove to Caroline that I was not lying about your beautiful cock. So, why not just lift that lil' kilty-wilty for us.\"\n\n\"God, Jennifer, you're really smashed. Why don't you two call a cab and go home.\"\n\n\"Oh, we will call a cab. We are not stupid enough to drive like this. And, we will go home. And, you know what, Mac?\"\n\n\"What?\"\n\n\"We will go to my house, take our clothes off and fuck each other silly.\"\n\nI am shocked. I also have nothing to say to that.\n\n\"So, give us a peek. It will really boost our libidos and we'll be on our way. Oh, and one last thing, you can come with us if you want.\"\n\nI look at Jennifer. She is beautiful. Many a night when Mandy and I used to hang out with her, I imagined what it would be like to bed her. Caroline is less attractive, but only mildly so. I never had any fantasies about Caroline. Well, no more than the average male wondering what a woman looks like naked.\n\nNow, I am seeing another side of Jennifer. I guess it falls into the category of \"be careful of what you wish for, it just might come true.\"\n\n\"Sorry to disappoint you. But, that is not going to happen.\"\n\nI stand to leave the room.\n\n\"Are you sure, Mac?\" purrs Jennifer.\n\nShe unties the blue ribbon that secures the top of her dress together. She pulls the neckline apart and it slides down her chest. With a tug, she pulls it down to her waist exposing her white breasts. For years, I wondered what they looked like. Now, I gaze on the large mounds with huge areolas and dark nipples and I feel almost nothing, although admit to myself that they are spectacular breasts.\n\n\"Still sure?\"\n\nBefore I can answer, she turns to Caroline and lifts the silk blouse and camisole her friend is wearing above her silk skirt. In a flash, Caroline's tiny breasts appear and her nipples are hard bumps. Caroline holds up her blouse as Jennifer runs her hands over the small but pretty breasts. \n\n\"Getting some doubts now? Aren't these so cute? Her nipples are like little rubies.\"\n\nI don't have doubts, but I do have desires. Looking at two topless women is feeding the desire. I gaze at Jennifer's impressive breasts. Her nipples are hard and the skin of her breasts is covered with small goose bumps. They far surpass my fantasies. Still, I don't want to go down that road.\n\n\"I'm leaving.\"\n\nJennifer takes her hands away from Caroline's small mounds and plays with her own nipples.\n\n\"Mac, I don't think it would be good for your reputation or that of those two high school girls if word got out that they were alone with you in a private room and someone found you three in a compromising situation.\"\n\n\"That's bullshit,\" I hiss. \"There was nothing going on here and you know it.\"\n\n\"All I know is that you three were here, hiding from everyone else. The girls were all flushed and sitting practically in your lap. This could be serious. And, we all saw you dancing with them\u2014dancing very close, might I add. They might even get expelled. And, since you are known to have been naked in front of them, and maybe not wearing anything underneath that kilt...Well, let's just say people could draw the wrong conclusion.\"\n\n\"Why are you being such a bitch? They didn't do anything wrong.\"\n\n\"Maybe, maybe not. But you know once something like this gets out, it's hard to contain it.\"\n\nI stare at her. She must be a lot drunker than I first thought. I know I should just walk out, but I hesitate because I'm afraid that she might actually follow through and make things difficult for the girls.\n\nJennifer is now tweaking her own breasts, making her nipples point out. Caroline is copying her movements on her own chest.\n\n\"Look, Jennifer, you're drunk and tomorrow you will most likely regret this whole thing. So, let's just stop it now.\"\n\nShe shakes her head back and forth. \"Dick or no deal.\"\n\n\"Jennifer, I am not going to flash you.\"\n\n\"No problem,\" she says. \"We'll do all the work.\"\n\nIn a flash she grabs the hem of my kilt and flips it up. She and Caroline stare at my naked flesh.\n\n\"Ooh, Caroline. See I told you it's huge.\"\n\n\"Awesome,\" whispers Caroline.\n\nJennifer reaches out and grabs me. She begins to move her hand up and down my shaft. I resist getting an erection but know I can not hold out for long. Caroline's hand joins her and the two stroke me and fondle my balls. I begin to move my hand to push them away.\n\n\"What the hell is going on here?\"\n\nI look up to see Mim in the doorway. Jennifer and Caroline jerk their heads around. \n\nThere is fire in Mim's eyes.\n\n\"Really, have you people lost your minds?\"\n\nJennifer is frozen in place, one hand holding up my kilt and the other clamped onto my dick. Both of them have their breasts exposed.\n\nI pull my kilt free and drop it. Jennifer's hand remains underneath with a death grip on my dick. Caroline jerks hers away and is pulling down her blouse.\n\n\"Jennifer, I think you can release him now.\"\n\nJennifer shakes her head a bit and then seems to realize where her hand is. She withdraws it.\n\n\"Mim, I can...\"\n\n\"Jennifer, I suggest you cover your bosoms and then you and your friend find a way home now. On Monday, when you are sober, we can discuss this situation, if it is necessary. Right now, I am thinking maybe we should all just forget and move on.\"\n\nJennifer and Caroline rise, rearrange their clothes and carefully make their way out of the room, careful not to cross too close to Mim.\n\n\"Mim,\" I begin.\n\nShe holds up her hand. She goes to the door and looks out to be sure that the two ladies are leaving.\n\n\"Mac, do you think you can possibly be in the presence of women and not feel the need to demonstrate your masculinity?\"\n\n\"Mim, it's not what it looks like.\"\n\n\"Really? I don't think there are too many interpretations to standing exposed in front of two grown and half-naked women while they sample the goods.\"\n\n\"Ok, I know that's what it looks like.\"\n\n\"No, Mac, that's what it was.\"\n\nMim is flushed, and I fear it is with anger and not lust.\n\n\"I was trying to protect Ruthann and Chrissy.\"\n\n\"Now, I've heard everything. How does flashing protect them?\"\n\n\"Just let me tell you the whole story.\"\n\nMim crosses her arms underneath her breasts making the mounds push out and her nipples protrude farther. She nods for me to continue.\n\nI relate the story, not sparing any details. Well, I do leave out the part where Chrissy was telling us about her stepbrother and, of course, about me getting semi-aroused dancing with Ruthann.\n\nWhen I finish, Mim continues to stare at me.\n\n\"So?\" I ask pleadingly.\n\n\"As daft as that tale sounds, I think I may believe it. The girls found me as I was coming back into the ballroom. They told me about Jennifer and her friend. They said they thought those women were drunk and they were worried about you.\"\n\n\"It's the truth, Mim. I swear.\"\n\nShe shakes her head and then sighs. \n\n\"Jesus, Mac. If it were anyone else but me walking in here, there would be hell to pay.\"\n\nI nod. \"So, all is forgiven?\"\n\nShe slowly smiles. \"I suppose. Only on one condition.\"\n\nI look at her.\n\n\"I think you owe me a dance. Hell, make that several dances.\"\n\nI grin like a teenager. \"Absolutely!\"\n\nShe takes my arm and we start to make our way out.\n\n\"And,\" I add, \"maybe I can entice you into a proper date.\"\n\n\"Aye,\" she says softly. \"A proper date? Would that be one where you are not exposing the family jewels to a room full of girls, a family member or members of our faculty?\"\n\n\"Sorta,\" I answer. \"But, maybe we should not exclude every faculty member.\"\n\nShe turns her face to mine and blushes.\n\n\"Yes, perhaps not.\"\n\nWe find our way back to the ballroom. The band is returning from a break. They begin with a couple fast tempo songs. I ask Mim if we can sit out and have a drink.\n\nStanding by the bar, we sip our drinks. Chrissy and Ruthann are dancing and laughing.\n\n\"They're nice kids,\" I say.\n\n\"Yes. I suppose they're teacher's pets. But, they are smart. They have a good sense of themselves and don't seem as lost as so many of my students. They are the stars of the volleyball team. I can rely on them to help me out a lot. I asked them to work at this event as sort of a reward for all the other things they do.\"\n\n\"You mean helping with the sex ed class was work and not a reward?\" I ask.\n\nMim smiles at my teasing. \"Oh, I suppose it did have some good points to it.\"\n\n\"At least four,\" I offer.\n\nShe laughs out loud. Mim slips her arm through mine as we stand close to each other and watch the dance floor.\n\nThe music ends and Ruthann spots us. She drags Chrissy over.\n\n\"Thank God, you're saved,\" she gushes.\n\n\"Yes, I appreciate you sending in the cavalry.\"\n\n\"Cavalry?\" says Mim.\n\n\"Americanism,\" Ruthann adds. \"Sending you to rescue him.\"\n\n\"Ah.\"\n\n\"So, what happened?\" gushes Ruthann. \"They looked like were ready to eat you up.\"\n\nThe band strikes up a slow tune. Instead of replying to Ruthann, I motion with my eyes to the dance floor.\n\n\"Absolutely,\" says Ruthann. \"You two need to get out there. He's a really good dancer, Ms. Collins. Go on.\"\n\n\"And, you dance, too!\" Mim says with a smile.\n\n\"Well, I promise not to break all of your toes.\"\n\n\"Puts you way ahead of my last date.\"\n\nShe catches herself, but it is too late.\n\n\"So, we're having a date?\"\n\nRuthann and Chrissy giggle. \n\nMim shoots them a glance and then says, \"Let's dance.\"\n\nI lead her onto the floor. Slipping my hand around her waist, I enjoy the feel of her toned body. She rests her hand on my shoulder, keeping a few inches of space between us, and looks into my eyes. I can't read her look, but my heart flutters at the intensity of her gaze and the depth of her green eyes.\n\nWe move as if we've danced with each other for ages. With subtle pressure on her waist or a slight pull of my hand, I signal our next move. She follows with flawless grace.\n\nThe song ends and I regrettably remove my hand from her waist. She holds my hand in hers and we look at each other.\n\n\"Lovely, Mac. Thanks.\"\n\nI am about to respond when the band leader announces a song by Barry White. I know it's from the ancient past, but I still think he is pure sex.\n\nI arch an eyebrow and Mim smiles. We step back onto the dance floor.\n\nWith a subtle grin she says, \"So, Mac, do you want to dance or do you want to D-A-N-C-E?\"\n\nI step close to her, encircle her waist and pull her tight to me. She presses against me and leans her head on my shoulder while her hand snakes around my neck and her fingers caress my hairline.\n\nWe dance, but barely move about the floor.\n\nI bring our clenched hands close to my chest and my other hand slips onto her hip. I hear a low sigh.\n\nWe move as one as the singer does a decent cover of Barry,\n\nMy fingers move lightly along the smooth silk of her side. I daringly let my fingers stretch to the top of her rear. I realize I have felt no waistband of underwear.\n\n\"Hold me, Mac,\" she whispers.\n\nI pull her tighter and feel her breasts press into my chest. Even through my layers of clothing, I can make out her hard nipples atop the soft mounds. I swear she is not wearing anything underneath.\n\nMim sighs louder and pushes her pelvis hard against me. I think she must be able to feel my greatly engorged member. I am not hard, but I am certainly not hanging limp.\n\nMy eyes are closed as I revel in our intimate touching and drink in her fragrance. My lips press to her ear, \"You smell incredible.\"\n\n\"Mmm, so do you,\" she says. She moves her head from my shoulder and I open my eyes. We lock on to each other. I move forward to kiss her, but she pulls her head away and puts it back down on my shoulder. My lips brush the top of her head, grazing the silken pile of blond.\n\nThe song ends and I hug her tightly. She pushes fully against me and slowly raises her eyes. We look at each other. Mim presses her lips to my cheek and kisses me as her hand moves down over my butt, softly stroking and squeezing it. Instantly, I become hard.\n\nMim looks at me and her eyes widen. She can feel my erection pushing against her through the kilt.\n\nI can do no more than shrug.\n\nPulling me tight against her one last time, my hard member pushes against her crotch.\n\n\"Thank you,\" she whispers in my ear. \"And to confirm your suspicions, I am wearing under this dress exactly what you are obviously wearing under your kilt.\"\n\nHolding my hand she leads me off the floor, keeping her body in front of mine to shield any bulge in my kilt. She heads back to the tall table where the two girls still stand. I stand close to the table, hoping no one can see my discomfort.\n\n\"I need the loo,\" Mim says.\n\n\"I'll go with,\" offers Chrissy.\n\nAs they head off, I say to Ruthann,\" I need a drink. Can you get me one?\"\n\nSmiling, she says, \"I think you need a bucket of cold water thrown on you.\"\n\n\"What?\"\n\n\"That was the sexiest dance I have ever seen. God, you two looked so hot out there.\"\n\n\"Really? I hope no one else noticed.\"\n\n\"Who cares? You and Ms. Collins, wow, it got my motor running. Besides, that tent in your kilt must mean you liked it a lot.\"\n\nTogether our eyes fall to my kilt that is indeed tented out in front. We look at each other and break out laughing.\n\n\"Shit, I am so embarrassed, Ruthann. Do you think other people noticed?\"\n\n\"No, probably not. I just happened to look down as you guys got to the table.\"\n\n\"Just happened to look down...?\n\n\"Hey, a girl can get curious, you know. I mean after what I felt when we were dancing and then seeing how close you and Ms. Collins were...\"\n\nI pat her hand and she kisses my cheek.\n\n\"You wouldn't want to give a girl a little peek?\"\n\nVisions of her looking at my erection and maybe more scream through my frontal lobe. Then, a touch of sanity intrudes.\n\n\"I still need a drink.\"\n\nSighing, Ruthann takes one last lingering look at my stretched out kilt.\n\n\"How about a soda? They will serve me those.\"\n\nI nod and she moves off. \n\nBy the time she comes back, I have returned to a close to normal state.\n\nI take the Coke down in two large swallows. \n\nMim and Chrissy arrive back with drinks in hand. Mim hands me a beer and she has a whisky.\n\nWe drink and watch the dancers. The band takes a break and the silence is welcome.\n\n\"Mim, what's this about broken sirens? You want my help to fix them?\"\n\nMim looks at the two girls, who each try to avoid her gaze. Finally, Ruthann looks up and softly says, \"It sorta' slipped out, Ms. Collins. But, I told Mac you would need to talk with him.\"\n\nShaking her head, she asks me, \"What did she say?\"\n\n\"Only that you might want some help with some sirens.\"\n\nChuckling, Mim replies. \"Not some sirens, Mac, The Sirens, as in mythology.\"\n\nI frown. \"Come again.\"\n\n\"Do you know the story of the Sirens?\"\n\n\"From the Odyssey?\"\n\nShe nods.\n\n\"Sure. Odysseus was on his long journey home. He was leaving the land of Circe and she warned him of the Siren's Song. It was supposed to be a melody so sweet that it lured sailors onto the rocks and to their death. They were also rumored to be beautiful creatures\u2014half bird and half woman.\"\n\n\"So, did our hero escape their trance?\"\n\nI feel she is testing me. \"He told his men to stuff wax into their ears so they would not hear their song. He had them lash him to the mast so he might hear them. He ordered his men to leave him tied to the mast, no matter how hard he begged, pleaded, ordered or cursed. They did so and he listened in agony to their song, longing to jump into the sea to follow it.\"\n\n\"Well done, Mac. So, the Sirens I speak of are not the blaring horns of a fire alarm.\"\n\n\"Ok, but I don't get what you want me for.\"\n\n\"I have a dear friend, Deidre, who teaches art here at the Academy. She is also an accomplished artist. She is embarking on a major commission for a collector who is completing his nouveau mansion on the coast of Massachusetts at Manchester-by-the-Sea. He wants an oil of The Sirens to grace his living room, which will overlook the rocky shore.\"\n\n\"Sounds nice, but, I am wondering where I come in. You need me to help move the finished painting?\"\n\nThe three women exchange a glance.\n\n\"Mac, we need an Odysseus. I was hoping you'd volunteer.\"\n\n\"Me? Why?\"\n\n\"Well, you are a handsome man, and ruggedly so. I imagine Odysseus was like you in many ways. You and he are adventurers and that spirit shows on your face and in your eyes. Also, you are in your thirties. As you know, Odysseus was away fighting the Trojan War for 10 years and then spent another 10 finding his way back to Penelope. So, I couldn't ask some young lad to be the model.\"\n\n\"Yeah, but I feel there's more.\"\n\nSmiling Mim adds, \"Oh, there is one more thing.\"\n\nI wait.\n\n\"Odysseus will have to be nude.\"\n\nI look at the three ladies nodding slowly.\n\n\"You see, Mac, it was most likely how the men were in the boat. They didn't have many clothes to begin with and would not want them ruined passing through the turbulent waters.\"\n\n\"Oh, I see. You're going for realism.\"\n\n\"Not me, Deidre. And, a nude Odysseus is a lot more interesting than a clothed one. And, well, since the Siren's Song is supposed to pull a man to them and infuse him with desire, Deidre thinks our naked Odysseus should be...Let me put this delicately, he should be clearly physically attracted to the song.\"\n\n\"You mean...\"\n\n\"Yes, fully aroused while straining to get free.\"\n\n\"Wow, you really have a knack to offer some interesting adventures. I'm not sure I could do that. It was one thing to model for your class. But to stand in an art studio with an erection and be alone in front of a woman I don't know. I think I might pass. Hell, I doubt if I'll be able to get hard. I might be that embarrassed.\"\n\n\"Mac, I will introduce you to Deidre. You will love her. And, you will not be alone in front of her.\"\n\n\"Huh?\"\n\n\"No, there will be three Sirens posing with you. And, again for realism, these three will also be nude.\"\n\n\"This is getting more weird, Mim. So, who are the Sirens?\"\n\n\"Well, one is Crystal. I think you might know her. She is the barista at the coffee house down from your garage. She has the long red hair.\"\n\n\"Sure, I know her. Actually, I think she and Sam...\" I curse myself for letting that out.\n\n\"Don't worry, Mac. I know Sam is gay. So do Ruthann and Chrissy. We don't broadcast it about school, because Sam is our friend. And, I know that she and Crystal recently began dating. It was Sam who suggested her as a model.\"\n\n\"Whew, I thought I just landed Sam in a pile of manure. Ok, so who are the other two? Do I also know them?\"\n\nMim looks at Ruthann, who is now scarlet.\n\n\"No way. Ruthann, are you sure?\"\n\n\"Yeah. I really want to do it. It is so unlike me and I think that's a major reason. Besides, once I heard that you might be Odysseus, I felt like a thousand times better. Mac, I'm not sure I could do it if you don't agree. I really think I would feel comfortable with you. So, please!\"\n\nI push aside the torrent of mental images of Ruthann standing naked next to me. Well, I try to push them aside, but vivid visions of her small breasts continue to insinuate themselves into my consciousness. I imagine her naked long legs leading to a tight butt. I wonder what her sex would look like, when I shake my head to bring me back to my senses.",
        "\"And your parents agreed to this?\"\n\n\"Yeah. You see, Deidre is my mom.\"\n\nI guess my open mouth exposes my inner emotions.\n\n\"Actually she's what she calls Bohemian. My mom is totally cool with people expressing themselves. Nudity for her is no big deal and in her way of thinking shouldn't be a big deal for anyone else. I've posed nude for some of her other work, but never with a man.\"\n\nTurning back to Mim, I ask. \"And Siren number three?\"\n\nHer green eyes sparkle in the light from the votive candle on the table. \"Have you ever heard me sing, Mac? Some say my voice is enchanting.\" She grins widely, exposing her perfect white teeth, as she lays her hand on top of mine.\n\nMy mind spins around and I try to grasp that I would be posing naked with Mim. My doubts about maintaining an erection disappear into nothingness.\n\nOver the next week, I watch the clock progress at an unbearably slow pace.\n\nFriday dragged on even more slowly. Every minute seemed an hour. Mim suggested that the four of us\u2014the models\u2014travel to Deidre's on Friday evening. She said we could go over the plan for the weekend and get an early start in the morning. Deidre lives about an hour away along Long Island Sound. I volunteer to drive. Mim said Chrissy and my cousin, Sam, would be coming out on Saturday and we could have a great dinner and some fun that evening. \n\nAfter picking up Crystal, I drive to the Academy to gather Mim and Ruthann. Ruthann said her mom would have dinner for us when we get there.\n\nArriving after dark, I can make out the shape of a large house and hear the waves somewhere below us.\n\nRuthann leads the way into the house and calls out for her mother.\n\nA tall, slender woman appears and embraces Ruthann. I immediately see the resemblance. \n\nEach is close to six feet tall. They share the same grey eyes and fair complexion. Deidre's hair is close-cropped and speckled with grey. She has the same lean frame as her daughter.\n\nMim introduces me.\n\nI shake hands and feel the strength in her grip. \n\n\"Pleasure to meet you in person, Mac. I am grateful for you joining us.\"\n\n\"In person?\"\n\n\"Yes, Mim had shared the recording of the sex education class. I know you are perfect for Odysseus. You have a strong figure and your face is full of character. And, not to be too forward, the fact that you are uncircumcised is wonderful.\"\n\nI manage a side glance to Mim and arch an eyebrow. I had no idea that Mim had shared the recording of the class.\n\n\"Well, Ruthann, show our guests to their rooms. You can freshen up and then let's have a bite to eat.\"\n\nAfter a few minutes we gather in a great room adjacent to the kitchen. Deidre has a fire crackling in the open hearth. I smell something rich and tangy and notice a large pot on the stove.\n\nDeidre removes a loaf of bread from the oven, sets it in a basket and covers it with a terry towel.\n\nShe directs us to the sitting area around the fireplace. On a low table are a bottle of red wine and some cheese and crackers. All of us, including Ruthann, are soon toasting and relaxing in the warmth of the fire.\n\n\"So, I thought we'd have a bite and then head out to the barn. I would like to block some poses so we can get right into it in the morning. I know I won't finish everything this weekend, but if I can develop the right pose I can shoot some stills. I hope to at least complete a good sketch tomorrow and what time we have available on Sunday. I can use the photos to work during the week. I probably will need you all back once or twice more.\n\n\"Mac, I may need to impose on your time a bit more. You are the focus of the painting and I will need a lot of time working with you.\"\n\nMim had mentioned as much to me and I nod agreement.\n\nWe chat a bit and then Deidre and Ruthann serve a delicious, thick lamb stew. The homemade bread is warm and yeasty and a perfect complement. We enjoy a second bottle of wine with dinner.\n\nAfter loading the dishwasher, Deidre leads us through an enclosed walkway to a barn attached to the main house. Along the way I notice a set of French doors leading to an outside patio with a large hot tub about ten feet outside. Down on the left is an open doorway that leads into a bathroom. Inside the barn she has fashioned a spacious studio. One wall is mostly windows. I assume it must face north and provide great light. \n\nIn the middle, stands a dais raised about a foot above the floor. Deidre has already fashioned a faux mast standing about eight feet. She has placed several low benches in front and behind, simulating rows in a boat. \n\n\"Now, everyone can relax, we'll just be working on blocking several different poses. No need to undress. We'll leave that for tomorrow.\"\n\nMim positions the women in various poses until she finds a look that is satisfactory. She asks me to stand with my back to the makeshift mast. \n\n\"Clasp your hands behind you and around the mast, Mac. Now try leaning forward. Great. Ok, now push back against the mast. Nice. How about putting one leg up on a bench. Good.\"\n\nShe keeps me moving and rearranges the women around me. After about an hour, she seems to settle on a pose with me pressed hard against the mast, my hands stretched behind me. This pose pushes my hips out and I imagine when I am nude it will put focus on my sex. She mentions that she will lightly tie my hands behind me during our pose. Mim is standing to my right, Ruthann seated to my left and Crystal behind me, leaning over my shoulder.\n\n\"I think this might work,\" declares Deidre. \"Of course, tomorrow we will see what it looks like and where everyone's hands and legs will be. But for now, let's call it a night.\"\n\nAs we make our way back to the main house, I fall in next to Mim. \n\n\"Have a minute before we go to bed?\"\n\n\"Sure, let me get ready and I'll knock on your door.\"\n\nThe large upstairs afforded each of us a bedroom. There's a shared bath between each pair of rooms. Crystal and I are one pair and Mim and Ruthann are the other.\n\nCrystal uses the bath first and then calls through the door that it's all mine. I do my business. I strip to a long-sleeve t-shirt and boxers. I wonder if I should put more clothes on and then realize in a few hours we all will be standing around naked.\n\nAbout ten minutes go by before I hear a light tap.\n\nI open to admit Mim wearing a floor-length flannel nightgown, the collar tight around her neck. As she moves, I notice her breasts moving under the soft material. \n\n\"Thanks for seeing me,\" I say and close the door behind her.\n\nMim sits in a rocker next to the bed and I rest on the edge of the mattress.\n\n\"Having a case of nerves?\" she asks.\n\n\"I won't lie, I am.\"\n\n\"Don't worry, Mac. After a few minutes, you will forget you're nude.\"\n\n\"Sounds like a voice of experience,\" I say.\n\nMim blushes slightly. \n\n\"Aye, I've posed a couple times for Deidre. Although, this will be the first time with a gentleman present. The other times were either alone or with Ruthann. Deidre is great with nudes and gets a lot of commissions. She is quite talented.\"\n\n\"So, is there a Mister O'Shaughnessy?\"\n\n'There is, but he's no longer her husband. Gordon lives in France these days. They divorced about ten years ago. That's how she managed to have this place.\"\n\n\"I thought it looks a bit much for an art teacher.\"\n\n\"Oh, Deidre does quite smartly selling her work, but, yes, this would be beyond even a successful artist.\"\n\nI notice some glasses on the dresser and ask Mim if she'd like a drink.\n\n\"You have something?\"\n\nI pull open my bag and extract a bottle of 18 year Macallan.\n\n\"Mac, you're lovely.\"\n\nI smile and pour each of us a couple fingers. We toast and Mim offers, \"Here's to getting naked.\"\n\nI laugh and take a long pull.\n\n\"Anyway,\" Mim continues, \"As Deidre has described to me, she and Gordon never seemed to click. She is quite a free spirit and he was cut from a more restricted mold. His family are investment bankers and piled up oodles of money. After Ruthann was born, Gordon became even more distant and uptight. Deidre tried to work through his aloofness, but nothing seemed to work. One night, as trite as it sounds, Deidre returned home early from a meeting and found Gordon with his cock bollocks deep in a young man's bum. Nothing underage, mind you, but still not what you want from a husband. Seems Gordon was mostly putting on a straight face for Mommy and Daddy. Also, it wouldn't go over so well with the old boys club on Wall Street to have an O'Shaughnessy trolling around for gay prostitutes.\n\n\"Deidre handled it as well as could be expected.\"\n\n\"And, that would be?\" I asked.\n\n\"She fucked him over royally.\"\n\nWe both laugh at her earthy description.\n\n\"Deidre had a long discussion with Daddy. Seems she probably could have done quite smartly on the Street. She negotiated full ownership of this estate, a handsome annual stipend that covers all taxes, expenses and maintenance, generous child support for Ruthann, her education costs, plus a trust fund for her when she reaches 35. Deidre also gets a modest alimony check each month, as long as she does not remarry. So, with all that, her pay from the Academy and a successful art career, she does quiet well.\"\n\nI sip my drink. \n\n\"So, Mac, is that what you wanted to talk about?\"\n\n\"I guess not. Truthfully, Mim, I don't know what I want. I thought maybe talking would make me les apprehensive.\"\n\n\"Really, Mac, it will be fine. Look both Ruthann and I have already seen you naked. Deidre has seen the video and Crystal, if I may be crude, has no use for cock.\"\n\nI nod.\n\n\"Mac, what is it?\"\n\n\"You're going to be naked.\"\n\n\"Ah,\" she says and finishes her Scotch.\n\nRising, she crosses to the dresser and pours another strong drink and turns to pour another shot into my glass.\n\n\"That bothers you, does it, Mac. Having me naked.\"\n\n\"Well, sort of,\" I stammer. \"It's just that, well, I like you. I think you've gathered that.\"\n\n\"And, I like you, Mac. Truly. You're a nice man and I've enjoyed your company. I thought we had a splendid time at the dance.\"\n\n\"Yes,\" I agree, \"but I think I want more.\"\n\nMim looks directly at me and nods. \n\n\"Mac, there is no 'more' right now. Just the way it is. So, tomorrow we'll strip off and pose. After, we'll get dressed. That's it.\"\n\n\"But, why? I know you like me. I would say you've even flirted a bit.\"\n\nMim looks away, staring into the dark beyond the paned window.\n\n\"True, I have,\" she says softly. \"I told myself it was harmless, but I know better. I apologize if I've led you to believe there could be more than friendship. But, Mac, it could be a splendid friendship.\"\n\nI snort and say, \"Sort of a friend with no benefits.\"\n\nMim laughs. \"Exactly. But, standing next to each other totally nude might be considered a slight benefit.\"\n\n\"More a slight torture,\" I answer.\n\n\"Touch\u00e9.\"\n\nMim finishes her drink and stands. \n\n\"Thanks for the whisky, Mac, and for the chat. I'll see you in the morning.\"\n\nShe reaches up and softly kisses my cheek. I inhale her clean scent and lay my hand on her shoulder.\n\n\"See you in the morning, Mim.\"\n\nI wake up on Saturday after a fitful night. \n\nI move through my morning routine in a daze, asking myself what I had gotten into. Then, I think of Mim's face and my mind tells me to stop worrying. In a matter of hours I would be standing nude with her.\n\nMim had encouraged me to let the manscaping go by and return to a natural state. She and the other two women were doing the same for the last month. \n\n\"Getting it to go a bit wild,\" she had said. \"Even letting our underarms and legs go untamed. I don't think the Sirens were into shaving and waxing.\"\n\nI dress in jeans and a t-shirt, pulling a sweater on top. Mim had asked me to forgo underwear to eliminate lines on my torso.\n\nDeidre has a breakfast of fruit, pastries, juice and coffee waiting in the great room. She encourages us to eat quickly and join her in the studio.\n\nWe make our way to the studio to find Deidre readying a couple large sketch pads on easels. \n\n\"Again, thank you all for agreeing to be part of this project. I am really excited and know you all will be perfect. I see the work going along this way. \n\n\"Today, we will spend a lot of time blocking the poses with you undressed. It will take a while for me to get the best composition and angle for me. Once that is set, probably after lunch, I will start sketching some broad outlines. I will probably do three or four small studies, if we have time. I will also be taking a bunch of photos, so I can continue to work on the composition after we are done here today. \n\n\"We will have good light until around 3. We can break then. Tonight I have a special dinner planned. I imagine that Sam and Chrissy will be joining us sometime this afternoon. So, we will have a lot of fun this evening. Tomorrow, we can work 'til noon. I know you all have other commitments back home. I'll call you during the week to schedule our next session. Any questions?\"\n\nHearing none, she directs us toward two screens against the far wall. \n\n\"I think two of you can fit behind each screen. You'll find a robe to wear after you disrobe. When you're changed, come on out and we'll get to work.\"\n\nMim and Ruthann head off to the area on the right. Crystal heads to the one on the left and I follow. I am a little uneasy just going in with her and stripping. I know we will all be nude, but just stripping together for the first time seems weird.\n\n\"Hey, Crystal, I think I'll hit the bathroom now. You go along and I'll join you in a minute.\"\n\n\"Sure, no prob.\"\n\nI go through the door to the bathroom I saw before. I actually do have to relieve myself and take a bit longer than normal, hoping to give Crystal enough time to change. I look around and notice there are two enclosed stalls with toilets, a row of sinks and a large tiled shower room with four heads. Unisex, I imagine. \n\nI enter back into the barn and walk behind the screen. I am greeted by the sight of a lovely naked rump, bent over and searching through a large handbag. Crystal's legs are slightly parted and I can clearly see her pussy lips. \n\nI feel my face reddening as she stands straight, with a cell tight to her ear.\n\n\"Hey, you. No, we're just getting ready. He went to the john. Oh, wait he's back.\"\n\nCrystal turns to me. She is totally nude and really attractive. She had freed her long red hair from its braid and it hangs loose around her shoulders. Her skin is pale and spotted with freckles. Bright white breasts with dark rose nipples stand firmly high on her chest. \n\nI smile. She smiles. I look at her crotch. True to Mim's prediction, Crystal has wild red pubic hair. It has tufts and curls and spreads across her pubic area and onto her thighs. It looks luscious. I notice a full crop of red hair in her armpits while her legs are covered in soft red fluff.\n\nTalking into the phone, Crystal reaches for her robe. \n\n\"Just a sec,\" she calls and hands the phone to me as she pulls the robe on. \"It's Sam.\"\n\n\"Hi.\"\n\n\"Hey, Cuz, are you balls naked yet?\"\n\nThat's Sam. Cutting to the chase.\n\n\"Uh, no.\"\n\n\"Well, strip down, dude. Can't hide those goodies under a bushel basket all day.\" She adds with a chuckle, \"And, I think you'll need a bushel sized-basket to hold all the meat.\"\n\n\"Sam...\" I begin.\n\n\"Anyway, good luck and pass me back to Crystal. By the way, she is smokin' hot, right.\"\n\nLooking at the pretty woman standing with an open robe and exposing one sweet breast and a forest of red, I answer, \"Couldn't agree more.\" I hand the phone to Crystal.\n\nThey chat for a while as I slowly remove my shoes, sweater and t-shirt. I am unbuckling my belt as Crystal ends the call and drops her cell back into her purse.\n\nI freeze as she turns back to me.\n\n\"Mac, just do it. We have to get used to being nude. I can leave if you want, but you know we are going to be doing this a lot. So, just go for it.\"\n\nI nod and unzip and drop my jeans. Crystal looks me over and grins.\n\nShe grabs the other robe and hands it to me. \n\n\"You know, Mac. You're not bad looking...for a guy. I never saw an uncircumcised cock before. Interesting.\"\n\nWe both smile and pulling the robe around me, we leave the confines of the changing space.\n\nThe other three are already gathered on the set.\n\nDeidre gathers us four models around her. \n\n\"Thanks, again, for being willing to pose for me,\" she says. \"I've got some ideas based on our work last night. So, let's get rid of the robes and get down to work.\"\n\nI feel my throat close and my tongue feels like the coarsest sandpaper.\n\nThere are hooks along the wall nearest the posing platform. Crystal slips her robe off and hangs it on a hook. Her compact body moves toward the set. Her breasts barely move on her chest; the flesh of her small globes pulled tight as the cool air hits them.\n\nRuthann looks at me and weakly smiles. Her hands clasp the sash at her waist.\n\nI return her smile. She is hesitating.\n\n\"Nervous?\" I ask.\n\n\"I have never been naked with a man before,\" she says.\n\n\"It's ok, Ruthann. You're beautiful. Just take a deep breath and do it.\"\n\nTurning away from me, Ruthann lets the robe slide down her back and she catches it by the collar. Her slender back is white with little difference where her bikini would cover her private areas. I see her muscles flex along her shoulders and down her back. Her waist narrows slightly and then flares to her hips. She has a slightly round and tight butt. Her long legs are toned and slender. Turning she looks directly at me and smiles. I return her expression and let my eyes take in her stunning front. \n\nHer breasts are small and sit high on her chest. Her dark areolas are only the size of a nickel and are topped by darker, puffy, raisin-sized hard nipples. I admire her flat stomach and can't help but stare at the thick, black bush. In a word she is alluring. I know she is just 19, but standing nude in front of me she is all woman--a sexy and vibrant woman.\n\nNow grinning widely, she passes me on her way to the set. \"I guess we're even now,\" she says softly as she brushes by me.\n\n\"You are spectacular,\" I reply equally quietly. \n\nI realize I will have little difficulty in maintaining an erection as I am already half-mast.\n\nMim looks directly into my eyes and loosens the belt at her waist. Her robe flows open showing the insides of her breasts and a magnificent blond bush. Holding my gaze she slips off her robe, fully exposing her breasts. I now am hard underneath my robe as I stare at the most beautiful breasts I have ever seen. They are not overly large, but are perfectly formed mounds with a slight tear-drop shape. Her pink areolas cover the entire point of her breasts with dark pink nipples centered perfectly. She turns to hang her robe and I catch my breath. Her firm, round bottom is better than I dreamed, and, believe me, I've dreamed about what I saw moving underneath her jeans over these last few weeks.\n\nHer shapely legs do not quite meet at the top of her thighs leaving a slight gap that I find exotically inviting. She turns to walk to the set. I notice the wonderful V of her hip bones pointing down to her blondness. Although full, her bush is composed of fine hair. I can make out her lips moving enticingly as she moves.\n\nFinally, I drop my robe and walk to my position at the makeshift mast. I chuckle to myself as my private \"mast\" leads the way.\n\n\"Ah, Mac,\" Deidre says, \"Nice. You look just the way a sorely tempted Odysseus would appear surrounded by beautiful Sirens and tortured by their song.\"\n\nRuthann laughs and says, \"Dede, if that's your way of saying his hard-on is awesome, well, I agree.\"\n\nThat breaks the tension and we all join her in laughing.\n\nDeidre ties my hands loosely behind the mast and I lean back as we rehearsed. My hips thrust forward and my erection points skyward.\n\nDeidre positions Crystal behind me, sanding on top of the bench. Her left breast is exposed over my shoulder and one hand snaking over my shoulder to lightly rest on my right breast.",
        "Ruthann is seated at my left, eye level with my groin. Deidre has her circle my thigh with one arm and lean her head against the outside of my leg. She has her look up toward my face, but in reality she is looking almost directly at my erection. Deidre fusses with her pose and finally has Ruthann spread her legs, placing my foot in between her thighs. My toes and heel are touching the inside of each thigh. I look down to see her sex opened slightly as her legs are spread. I think a drop of pre-cum has made its way to my tip.\n\nDeidre has Mim push close to my right side. Her breast pushes into my right bicep. Deidre places her right hand at the very top of my pubic area, behind my erection, with her fingers falling into my thick pubic hair. She tilts her head up and her eyes lock onto mine. To complete the pose, Deidre pushes Mim's tush so that her crotch is now tight against my thigh, nestling the soft blond bush against my thigh. I pray I do not spontaneously ejaculate as I sense the heat from her pussy.\n\nWith a couple minor adjustments to each of us, Deidre proclaims it a good pose and runs off a series of photos on her digital camera. She then moves to her easels with large sketch pads attached. Working quickly, she dashes off one sketch after another. Ripping paper from the pads, she lets them float to the floor and keeps working at a rapid pace. She moves the easels to get a slightly different view and completes a dozen additional quick drawings. \n\nAfter about 45 minutes she allows us to relax our poses and loosen our limbs. None of us has spoken since we began. \n\nMim looks at me, \"How are you holding up, Mac?\"\n\n\"A little stiff, but ok.\"\n\nShe tries to stifle a smile and looks at my still erect penis.\n\n\"Perhaps, more than a little?\"\n\nRuthann overhears us and cracks up.\n\nDeidre asks us to get back into position and she now begins doing more detailed sketches. After about a half-hour, even though I am surrounded by beautiful naked women, my hard-on begins to wilt. I can't touch it because of my bound hands, so just let nature take its course.\n\nDeidre pauses her drawing.\n\n\"Mac, I know it's difficult to maintain an erection for such a long time. I am working on that area now. Could we help you resume your pose, as it were.\"\n\nI nod.\n\n\"I can do it, Dede,\" pipes in Ruthann.\n\nDeidre begins to say something, but then nods.\n\n\"Sure, honey, go ahead.\"\n\nRuthann turns her dark, doe eyes to mine and cracks a wide smile. She lays her delicate fingers along my flaccid shaft. \n\nI see her mouth make a little 'ooh.\" She lifts it and begins to squeeze. If what she confessed the night of the dance is true, this is her first time touching a man.\n\nI say softly, \"Just stroke it. Move your hand up and down.\"\n\nNodding, she begins to lightly touch me. It feels good, but she is too tentative.\n\nI am about to say something, when Mim speaks.\n\n\"You can do it harder, Ruthann. You won't hurt him. Go ahead squeeze it and keep moving.\"\n\nMim moves her hand on top of Ruthann's and guides it up and down, squeezing my thickening dick. With a look of concentration, Ruthann begins to stroke more aggressively as Mim slips her hand away. Ruthann's actions move my foreskin back and forth and produce some clear liquid.\n\n\"Use that liquid to cover his shaft and your hand will move easier,\" coaches Mim.\n\nRuthann swirls her fingers around my cap and coats my semi hard dick.\n\nQuickly her hands glide up and down and in a few seconds I respond. She works faster and I am now erect.\n\n\"Thanks,\" I say gazing into her wide eyes.\n\n\"My pleasure,\" she responds with a sly smile.\n\nDeidre takes up her drawing and we work for another hour, with Ruthann helping me maintain my pose a couple times.\n\n\"Ok, time for a break and lunch,\" Deidre declares.\n\nCrystal unties my hands and I begin swinging them to promote circulation. Crystal grabs her robe and trots off in direction of the bathroom.\n\nRuthann is lying back on the bench working the kinks out. Her lithe body catches the early afternoon light. Lying on her back on the bench her breasts practically disappear onto her chest, leaving her erect nipples pushing up. After a few minutes she stands and coming next to me, tilts her head up and kisses my cheek. \"You are the coolest, Mac.\"\n\nI let my hand rest on the small of her back, resisting the urge to slide it down onto her tiny butt.\n\nShe moves away and slips on her robe. \n\nShe and Deidre move toward the main house.\n\nMim and I stand facing each other, completely nude.\n\n\"Not uncomfortable?\" I ask.\n\n\"Surprisingly, no,\" she responds.\n\nI am tempted to look up and down her body.\n\nMim senses my discomfort.\n\n\"Good Lord, Mac, you can look. After all, I've looked closely at you quite a bit.\"\n\nI hold her gaze for several moments. Finally, I move my eyes to her chest. My breath catches as I once again take in the beauty of her breasts. I then slowly move my eyes lower, taking in every marvelous inch. My journey stops at her blond tangle. My hard dick twitches as I make out the delicate slit of her lips nestled among the blond wisps.\n\nI return my eyes to hers. She is smiling and slowly turns. I feast on the sight of her perfect butt. After a minute she turns again and looks at me.\n\n\"So...?\"\n\n\"You are the most beautiful woman I have ever seen. Thank you.\"\n\nMim blushes deeply. Holding her stomach away from my erection, she leans in to kiss my lips tenderly.\n\n\"You are quite the gentleman, Angus Bruce. Thank you.\"\n\nShe retrieves both our robes and says we should go eat.\n\nWalking along I ask Mim about Deidre.\n\n\"Ruthann calls her mother, Dede?\"\n\n'Aye, Dede is what her friends call her. She is a bit of a free spirit and feels her daughter can also be her friend.\"\n\n\"So, what should I call her?\"\n\n\"I'd stick with Deidre, Mac. She'll let you know if she wants you to call her Dede.\"\n\nAfter a light lunch, Deidre tells the women to relax for a bit and asks if I mind going with her to work on some details. \n\n'Give us an hour,\" she tells them. \n\nBack in the studio, I ask, \"Robe off?\"\n\n\"Please.\"\n\nI hang the robe and step into the set. \n\nLooking at my flaccid dick, I say, \"I could try to...\"\n\nDeidre says, \"Actually, I want to work on the muscles in your legs, so you can relax.\"\n\nShe positions me as before, but without binding my hands.\n\nShe is working on one of the pads. \n\n\"Mac, thanks for agreeing to pose. You are exactly what I had envisioned for Odysseus.\"\n\n\"Happy to help,\" I say and then add, \"mostly.\"\n\n\"Oh?\"\n\n\"Well, I was nervous being naked with Ruthann. She's only a teenager. And...\"\n\n\"Yes?\"\n\n\"Well, I'm a little surprised you let her touch me.\"\n\nDeidre sketches in silence for a while.\n\n\"Ruthann is the best daughter I could ever have asked for. We love each other and have no major issues. She is, however, Mac, a very self-possessed young woman. I know she has not had any real sexual experience, at least with a man. What they do at school in their dorm rooms, I don't know, and definitely don't ask. But, she is embracing life and I support her.\"\n\nDeidre rips off the sheet and starts on a new one. I look at the discarded paper on the floor and see a half-dozen views of my thighs and a few of my calves.\n\n\"She likes you a lot, Mac. She told me what a wonderful time she and Chrissy had at the dance. I think she appreciates that you treat like a woman and not just a kid. She also said you had a 'wicked hot' body.\"\n\nWe both laugh at Deidre's imitation of a young girl's slang.\n\n\"Mac, can you flex your left calf for a bit?\"\n\nI comply and she draws.\n\n\"So, other than be willing to stand naked among these beautiful women, how am I what you were looking for in a model?\"\n\nDeidre moves her easel to get a different angle.\n\n\"First, you have a good body. Nice musculature, good proportions, and a handsome face. Second, there is a rugged quality about you that strikes a chord. I imagine that Odysseus was rugged being a warrior and then challenged by his travels. Of course, you have a great cock. I love that it is uncircumcised. And, it's large and thick. Very manly and easy to draw.\"\n\nDeidre continues to draw and has me position my leg a couple different ways.\n\n\"I've had a number of male models for different works,\" she says as she works. \"They all were circumcised. I don't find the cut cock nearly as interesting as an intact one. A couple were relatively small and, to tell the truth, it's not easy to draw a small cock. Much better to work with a big, thick one like yours. Also, you are the first man I'm drawing with an erection. I like it. Mac, you have a perfect cock when it's hard.\"\n\nI am slightly amazed having such a frank discussion about my anatomy with an attractive woman. I study Deidre as she works. She is wearing a tight t-shirt that reveals a small chest and flat stomach. I put her age at mid to late 40s. I'd have guessed younger just by her appearance, but she does have a 19 year-old daughter. She is in top shape. Her face is unlined and her skin is clear with a soft sheen. Her grey eyes could be those of a twenty year old. Well, actually they are as lively as her daughter's. With her tight jeans, I can imagine her long legs are still toned and shapely.\n\nAbout 15 minutes later, Deidre says she has what she needs.\n\n\"I'll go get the girls. Mac, we will pick up where we left off before. I will need you hard again. If you can't get it up, I'm sure Ruthann will help. She seemed to enjoy it the first time.\"\n\nAs Deidre heads out, I begin stroking myself. Unfortunately, I'm still half-mast when everyone returns.\n\nWe take out positions and Crystal ties my hands.\n\nWithout any urging, Ruthann takes matters into her hands and soon has me up and ready. Her sweet smile sends a chill through my body as alarms go off in my brain. \"This is just a kid,\" I remind myself.\n\nShe takes her former position at my feet and grazes my balls with her hands as she snakes her arm around my thigh. Resting her head on my thigh, she turns her head and places a soft kiss on the outer part of my leg. I am rigid, especially looking at her open pussy as she pulls her legs apart to slide them around my foot.\n\nMim pushes her breasts back into my arm and her nipples feel harder than before. She places her hand near my pubic patch, letting her fingers drift a little lower than before. Added to all this is Crystal's hard nubs making an indention on my shoulder and into my back. \n\nDeidre is now working on a more detailed and full-scale sketch. There is no conversation as Deidre makes subtle adjustments in our poses. After an hour of holding my latest pose, my muscles are screaming. But the pro that I am, I maintain a rock hard dick, with occasional assistance from Ruthann.\n\nBy now I have held an erection for the better part of the day. I recall describing blue balls in the sex ed class. I fear I may be experiencing a severe case tonight. I let my mind drift to fantasize about Ruthann taking control and with a mixture of kisses and stroking bringing me to a stellar orgasm. \n\nI'm awakened from my reverie by a stifled laugh from Ruthann. I look down at her and she is swallowing a smile.\n\nI furrow my brow and mouth, \"What?\"\n\nShe mouths back, \"It's jumping.\"\n\nI look at my dick and see it bounce. I guess my daydreams were affecting my hard-on. I just smile at Ruthann and she returns the gesture.\n\nDeidre works us for another thirty minutes. She looks outside at the dimming light.\n\n\"I guess we should call it a day,\" she says. \"Thank you, guys, you are the best. Get some rest. We'll have cocktails at 6 and dinner at 7.\"\n\n\"Are we all invited,\" comes a voice from the doorway.\n\nWe turn to see Sam and Chrissy standing there. All the ladies exchange waves and greetings. Of course, with my hands still tied behind my back I can only stand there fully erect and grin. I consider trying to wave with my dick, but then I reconsider. Probably not cool.\n\nI look at Chrissy and she gives me a wide smile and dramatically lets her eyes drop to my crotch.\n\nCrystal grabs her robe and trots over to exchange a hug with Sam. \n\n\"Hey, Deidre,\" calls Sam, \"can we use the hot tub?\"\n\n\"Sure, it's all set.\"\n\nChrissy asks if Ruthann is coming.\n\n\"In a bit,\" she answers. \"You go ahead with Sam and Crystal. I'll catch you in a little while.\"\n\nShe stands and unties me as the three women leave.\n\n\"Mac,\" says Deidre, \"you have been fabulous today. I'm sure you are all knotted up. Posing can be strenuous. How about I give you a massage?\"\n\n\"Really?\"\n\nRuthann jumps in, \"She's the best, Mac. Dede is a licensed massage therapist. Before she and my father married, she had her own business.\"\n\nI look at Deidre and she nods. \n\nShe takes my silence as an answer and moves to the far corner of the room. I hadn't noticed some furniture covered with sheets. Ruthann joins her and they wheel two massage tables toward the center of the studio.\n\n\"Mim, if you are up for a rub-down, Ruthann can help you relax. I've been teaching her and she is quite good. Got great strong hands. You'll love her and she needs the practice.\"\n\n\"Sure,\" says Mim. \"I could use a good working over.\"\n\nRemaining naked, Mim crawls up onto the table, lying face down. An equally nude Ruthann grabs a plastic bottle of what looks like oil and starts dribbling some on Mim's back.\n\nDeidre guides me to lie on my stomach. I turn my head to the side to be able to watch Mim and Ruthann. My erection has mostly subsided, but I wonder if it will stay down as I marvel at Mim's round bottom. And, gazing at the slender and sexy figure of Ruthann doesn't help matters.\n\n\"Have you ever had a deep muscle massage, Mac?\" asks Deidre as she runs her oiled hands up and down my back.\n\n\"I've had a couple massages back when I was in banking,\" I reply enjoying her touch and the warmth strength of her hands. \"I guess they were deep muscle, I just called them massages.\"\n\n\"Ok,\" she says letting her fingers trace my spine. \"What I like to do with some people is combine deep muscle with a sensuous massage. By sensuous, I mean that the entire body is engaged and no body part is avoided. If you are comfortable with that approach, I know I can rid you of all the knots and especially the tension you accumulated today.\"\n\nAlready I am getting into the touching and murmur agreement. I wish she could alleviate the biggest tension resting in my testicles.\n\nI watch as Ruthann works Mim's shoulders and back. Mim has her face turned toward me and opens her eyes for a few seconds, smiles and then closes them.\n\nDeidre is working my traps and manipulates my arm so she can release some tension. Moving down my back, she soon is working on my butt. I notice Ruthann is doing the same to Mim. \n\nAfter kneading each cheek, Deidre works down one leg and then back up the other.\n\nMim is now turning onto her back. Her breasts form small pillows on her chest, with her pink nipples clearly distended. Her untrimmed blond bush erupts from her crotch in spires of silky curls.\n\n\"Mac, do you trust me?\" asks Deidre.\n\n\"I guess. But, why are you asking?\"\n\n\"Because I want to extend the boundaries of the massage. If you trust me, I can promise you will not regret it. And, I believe this is what you need.\"\n\n\"Ok, I trust you.\"\n\n\"Roll onto your back.\"\n\nDeidre reaches underneath the table and retrieves a thick pillow. She asks me to raise my hips and she slips it underneath. My butt is now raised.\n\nDeidre slips on an exam glove.\n\n\"What are you...\"\n\n\"Mac, I'm going to massage your prostate. And, then, well let's say, I want to make sure you don't experience blue balls tonight.\"\n\n\"Huh?\"\n\n\"Believe me you will love it.\"\n\n\"The only other time I've had a finger there is during my annual physical.\"\n\n\"This will be different.\"\n\nI look at Mim. She is watching me and I think I detect a nod. Ruthann is massaging Mim's breasts making soft circles with her hands, but stealing glances in my direction. I now guess that the ladies must have been discussing this at lunch. \n\nI feel oil dribbling down my crack. Deidre uses a finger to work it around my anus and pushes a bit inside. I flinch. Mim winks at me as Ruthann slightly pulls Mim's nipples up extending the pale orbs from her chest.\n\nDeidre works more oil in my anus and then slowly inserts a finger. My instinct is to tighten to fight the intrusion.\n\nWith her other hand she strokes my butt. \"Relax, honey.\"\n\nI will my anus to relax and Deidre's finger enters completely.\n\nI feel her tip touch my prostrate and I moan out loud. She gently rubs it and hot pleasure infuses my body, emanating from my anus outward. I am rapidly becoming hard.\n\n\"Are you finished with Mim, Sweetie?\"\n\nRuthann says she is.\n\nMim nods in agreement.\n\n\"Come and work Mac's shoulders and chest, while I tend to his needs.\"\n\nRuthann stands at my head. I look up to see the underside of her cute breasts with her nipples dark and hard.\n\nShe leans forward and works the muscles in my neck and shoulder. I turn my head to look at the table beside me. Mim is now lying on her side, resting her head on her folded arm. Her breasts drop slightly, but hold their shape. Her free hand is nestled between her legs. \n\nRuthann is working miracles with my tense muscles and Deidre is still gently working her finger inside me. My erection is throbbing.\n\nI turn my head to the other side and Ruthann digs in.\n\nDeidre is making soft circles on my stomach.\n\nI close my eyes. In a second they pop open as I feel a hand moving up and down my hard shaft.\n\nI look down to see Deidre stroking me.\n\n\"I don't think...\"\n\n\"Sssh,\" Deidre says. \"Just go with it, Mac.\"\n\nI can feel my balls tightening. After hours of maintaining an erection, standing among beautiful naked women, and having my prostate so erotically massaged, I want release. I cannot let it go in front of these three.\n\n\"I'm very close.\"\n\n\"It's ok, Mac. You need this. Let it go.\"\n\n\"No, I can't.\"\n\n\"Sure you can. It's natural. Let it happen.\"\n\n\"But, Ruthann...\"\n\n\"She needs to learn some things, Mac. It's fine.\"\n\nShe slips her hand on my balls and massages them. Letting them fall free, she grabs my shaft and picks up the tempo. \n\nRuthann leans forward and I stare at the puffy nipples inches above my head. I hear a soft moan to my right where Mim is lying. I feel the pressure reach the critical point. There is no holding back.\n\nDeidre pumps harder. Her finger plunges deeper and hits my prostate again and begins milking it. I groan and let loose.\n\nMy first shot explodes and hits Ruthann, splattering her left breast. Deidre then pushes my erection tight against my stomach and I shoot four more times, my cum spreading out over my chest and stomach. Deidre coaxes two more explosions by milking my prostate and caressing my cock and balls with her hand.\n\nShe slips her finger from my butt. Her other hand is covered in my cum. Slipping off her glove, she rubs my torso working the goo on her fingers into the puddles already on me. She covers my chest and stomach. Ruthann helps her work the rapidly cooling liquid into my skin. The glob on her breast remains.\n\nAs I look across at Mim, who is now sitting, the enormity of what just happened strikes me. Three women watched me cum. If what Ruthann said at the dance is true, this is the first time she has seen a man reach orgasm. What would Mim now think of me? I want to get close to her. I want her, period. Now, will she think me some deviant?\n\n\"That was beautiful,\" Mim says. \"Thank you, Mac, for allowing us to be part of your intimate life.\" She stands, drapes her robe over her shoulders and leaves the studio.\n\n\"Are you ok, Mac?\" asks Deidre.\n\n\"A bit shocked, Deidre. I don't know if I should be embarrassed, mortified or what.\"\n\n\"Mac, don't be anything. What happened is the most natural thing in the world. You were aroused for most of the day. You needed, and you deserved, release. Also, milking the prostate is good for you. It cleans out the system. Now, you can get cleaned up, rest and we'll have a fantastic dinner.\"",
        "I sit up. Looking down at my front with the drying cum, I say I probably should not walk through the house looking like this.\n\n\"Take a shower here. There are lots of towels and toiletries in the bath.\"\n\nRuthann excuses herself, running toward the door without bothering with a robe. Deidre's back is to her. I watch her tiny butt move seductively. She pauses at the door and turns toward me. With a wicked grin lighting up her face, she scoops the remnants of my ejaculation from her breast and pops her finger in her mouth. She sucks it clean, swallows and blows me a kiss.\n\n\"Deidre, was that the first time Ruthann saw a man cum?\"\n\n\"I think so. Mac, don't worry. It's time for her to learn more; to take a few more steps toward womanhood. I'm happy she was here.\"\n\nI grab my robe and head toward the bathroom as Deidre tidies up.\n\nI enter the shower room to find Sam and Crystal drying off. Sam has gone completely bare between her legs. It is quite a contrast to the thick red scene between Crystal's thighs.\n\n\"Hey, Cuz, gonna' take a shower?\"\n\n\"Yeah. How was the hot tub?\"\n\nI find some shampoo and soap on a shelf and begin to adjust the flow from a showerhead.\n\n\"Fab,\" says Crystal. \"Just what I needed to get the kinks out. How was the massage?\"\n\nChuckling, I say, \"It got the kinks out, too.\"\n\nLaughing, they leave. I stand under the hot water enjoying the wet heat.\n\nI hear voices.\n\n\"Hey, Mac,\" says Ruthann, \"can Chrissy and I come in and take a shower?\"\n\n\"Uh, I'll be through in a couple minutes.\"\n\n\"It's ok with us, well, with Chrissy. So, can we come in?\"\n\n\"Sure, I guess.\"\n\nRuthann enters the room, pulling a naked Chrissy behind her. \n\n\"Oh, God,\" I think. I cannot take any more of this.\n\nAlthough Ruthann is sexy, she is also lean and all angles. In a few years, she may grow more comfortably into her frame, but now she is slightly awkward. Still, her small breasts are magnets for my eyes. Her puffy nipples seem to be in a permanent state of hardness. Her long torso, toned legs and flat stomach are narrowly overshadowed in eroticism by her wild bush. The dark curls and swirls invite exploration. I steadily rise as I continue to stare at her.\n\nChrissy is the antithesis. She is only an inch shorter than Ruthann, but where Ruthann is angles, Chrissy is soft curves. Her breasts are large and full. They extend from her chest with an arrogance that only young women can produce. Her areolas are more oval than round and start pale around the edges only to darken at her nipple. Each nipple is dark and erect, as she stands looking back at me.\n\nShe, too, has a long torso. Her belly button holds a silver pendant that leads my gaze to her trimmed blond pussy. She has cleared everything except an inch-wide landing strip that ends above her full lips. What little glimpse I had of Ruthann's nether region indicated small, tight vaginal lips. Chrissy sports large thick lips, with the inner lips protruding slightly. I honestly think my mouth is watering.\n\n\"I hope you don't mind if we shower with you,\" says Ruthann. She focuses on my dick which is once again fully extended, and says, \"Uh, guess not.\"\n\n\"Well, I'm just finishing up.\"\n\nThey each take a shower head across from me and begin to wet their hair. \n\nI am eager to leave since being aroused and naked in front of two beautiful and naked high school girls sounds totally perverted, no matter how I spin it.\n\n\"I hope you cleaned your chest really well,\" Ruthann says.\n\nI try to give her a glance that I hope will prevent further discussion of what she witnesses a few minutes ago.\n\n\"It's ok, Mac. I told Chrissy. She thinks it's cool and wishes she could have seen it.\" \n\n\"Yeah, Mac. I bet it was the ultimate companion to our sex ed class. And, I really like your hard-on. It's a lot neater than those other guys\"\n\nNudging Ruthann, she continues, \"Although Ruthann did like Robbie's.\"\n\n\"Well, he is cute and it was the first one I ever saw.\" \n\n\"But not as nice as this one,\" says Chrissy as she points in my direction.\n\nThe girls giggle and I smile. I turn around, offering my back to them, as I wash and rinse my erection.\n\n\"Want some help with that?\" calls out Chrissy. Both girls break down giggling.\n\nI remove my hand from my erection and mumble that I'm fine. Finishing, I turn off the water and face them. They are each washing between their legs. I need to leave immediately. All the release that Deidre afforded me is a distant memory as I observe these young beauties.\n\nI quickly towel dry, slip on my robe and say I'll see them at dinner.\n\nThey wave and I make a beeline back to my room.\n\nCocktail hour is relaxed as we lounge in front of the fire in the great room. Since no one is driving, we all enjoy the wine. The conversation ranges from school issues to the crazy things customers say to Crystal at the coffee shop. \n\nDeidre calls us to dinner. We arrange ourselves around the large farmer's table as Deidre and Ruthann bring out dishes piled high with pasta and chicken parm. Loaves of crusty garlic bread and a tossed salad complete our meal. More bottles of red wine arrive and we dig in.\n\nSeated between Mim and Sam, I look around at the sight of so many attractive women. I admit to myself I am one lucky guy.\n\nThe conversation gradually shifts to what I describe as \"women's issues.\" I don't have much to add and just enjoy the sound of feminine voices and the laughter of people enjoying each other's company.\n\nAround nine the energy starts to lag. I announce my bedtime. Chrissy, Ruthann, Crystal and Sam decide to start a Scrabble marathon. Mim and Deidre offer to finish cleaning up. I volunteer my services, but am quickly shooed away.\n\nI make my way upstairs, use the bath and strip in my bedroom. I'm standing naked checking emails on my phone, when a soft knock interrupts me.\n\n\"Mac, may I come in?\"\n\n\"Sure, but I'm not dressed.\"\n\nMim chuckles and says, \"What else is new.\"\n\nShe enters, dressed again in her long flannel nightgown.\n\nI know I should be uncomfortable, but feel quite relaxed. I no longer have to imagine what Mim looks like naked. I only wish I could refresh my memory now.\n\nMim smiles at me and sits on the edge of the bed. \"I enjoy looking at your body, Mac\"\n\n\"You know, there are other things that are enjoyable besides looking.\"\n\nMim looks away and sighs.\n\n\"Yes, I know, but now I will confine myself to looking.\"\n\n\"And, that's because...\"\n\n\"Well, that's because I don't...\"\n\n\"Date,\" I say completing her sentence.\n\nMim nods.\n\n\"Why?\"\n\n\"Just the way it is right now. Please don't ask me to explain.\"\n\nI can see the pain behind her eyes. Could she be ill, I wonder? Maybe she does not like men. Although Sam says she is sure she is not a lesbian, she could be wrong. \n\nI look into her eyes. The depth draws me in. \n\n\"You are the most beautiful woman I have ever known.\"\n\nMim blushes and shrugs.\n\n\"Thank you.\"\n\nWe hold our gaze.\n\n\"Mac,\" Mim begins, \"I just wanted to tell you that this afternoon was special for me. I hope you weren't uncomfortable.\"\n\n\"It was certainly different.\"\n\n\"Yes, it was.\"\n\n\"Did you know Deidre was going to do that?\"\n\n\"Not really.\"\n\n\"But you had a clue?\"\n\n\"Mac, Deidre is a beautiful woman, inside and out. She lives openly and has almost no sexual hang-ups that I can detect. She knew you were probably overdue for a full release and helped you achieve it.\"\n\n\"So, it was purely clinical?\"\n\nLaughing, she says, \"Well, masturbating an attractive man may extend beyond just the clinical.\"\n\n\"So, I take it she has given you massages before?\"\n\nMim stiffens slightly and nods.\n\n\"Has she done the same for you?\"\n\n\"Mac, Deidre and I are friends, no, make that kindred souls. She has a special talent to sense what others need. So, yes, sometimes after I've modeled or even if I am just staying for a night, she might offer a massage. She is quite proficient. And, if she senses a deeper need in me, she will bring me to orgasm. She only massages my exterior and does not penetrate me. We do not have sex with each other. She relaxes my body and cleans my psyche. Are you shocked?\"\n\n\"No, actually I am intrigued to see you have a sexual side.\"\n\n\"You mean beyond the 'Ice Princess' veneer?\"\n\n\"I don't think of you that way.\"\n\n\"Most do, I fear. I am a deeply sensual woman, Mac. I have needs and desires.\"\n\n\"Yet, you hold yourself back.\"\n\n\"First, it would not be wise for me to be known as a promiscuous woman. I think the administration would not look kindly on that. So, I do not date or become involved in intimate relationships.\"\n\n\"I can understand that, but surely the administration cannot demand that you swear off any contact.\"\n\n\"No, you're right. I choose to do so.\"\n\n\"For reasons you can't explain.\"\n\n\"Again, Mac, for reasons I choose not to explain. What's that expression? It's complicated.\"\n\nI nod. I inwardly grin at the sight of a naked man talking to a woman about not being intimate.\n\n\"Mim, just for the record, then. I want to pursue a relationship with you. I would want us to be more than friends, if we are even that.\"\n\nMim takes a deep breath. \"Mac, we are certainly friends. I enjoy your company immensely.\"\n\nThen, cracking a smile, she adds, \"Besides we are spending quite a bit of time naked together. And, I am sitting in your room as you stand nude in front of me. That would at least make us special friends.\"\n\n\"And, there can be no more?\"\n\n\"Well, I did watch you ejaculate,\" she says as her smile widens. \"That's something more.\"\n\n\"Did you cum?\"\n\nMim shrugs and flashes a sexy smile.\n\n\"So, I suppose we're at our boundary?\"\n\nRising, Mim crosses to me. \n\n\"Hold me.\"\n\nI open my arms and she steps in. Wrapping her arms around me, she hugs me tightly. I slip my arms around her and embrace her.\n\n\"Mac, I could fall into your bed in a second. I know it would be an exquisite pleasure and my body aches for it. But, I cannot. I also wish not to explain. So, at least understand that it is not that I don't want you; it's just that I can't want you.\"\n\nHer closeness affects me and I start to rise. Mim stirs as my erection pushes through the thin flannel. \n\n\"Mac, I'm sorry I've brought this on. I have to leave. Forgive me for being so brazen and causing you any distress.\"\n\nI shake my head to indicate it is all right.\n\n\"I respect your decision, Mim. Don't worry, there is always a remedy at hand.\"\n\nI feel her laughing into my chest.\n\nShe turns her face to mine and we lock eyes.\n\nI move to her mouth. Our lips meet and fire races through my blood. I pull her tighter, my erection beating in rhythm with my speeding heart. Her lower body pushes tight against my erection. She sways slightly from side to side.\n\nShe breaks away. \n\n\"Thank you, Mac, that was special. It was also our last kiss. Don't hate me.\"\n\nShe frees herself and leaves the room, not glancing back.\n\nIn a second the door reopens, and Mim sticks her head back in.\n\n\"I could send for Deidre.\"\n\nWe both look at my erection. Together we smile.\n\n\"I think she has already gone above and beyond the call of duty today.\"\n\nMim has a funny look in her eyes, \"Mac, I know she would not see it as a duty. Keep your mind open.\"\n\nThe door closes.\n\nThe next day is more of the same\u2014naked posing. Sam and Chrissy stay in the studio for a while. I think they get a kick out of watching Ruthann's efforts to keep me hard. Deidre calls it a day around noon. \n\nWe enjoy a light lunch and I take Mim, Ruthann and Chrissy back to the Academy, while Sam and Crystal ride together.\n\nDeidre says she will work on the painting and then call us back either as a group or individually to work on details.\n\n(To be continued)"
    ],
    "authorname": "orie",
    "tags": [
        "nude modeling",
        "co-ed showers",
        "prostate massage",
        "masturbation",
        "no underwear",
        "flashing boobs",
        "hairy pussies"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/sex-education-ch-02-2"
}