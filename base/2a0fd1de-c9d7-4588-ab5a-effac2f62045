{
    "title": "Butt Lovely Pt. 02 - Stormy starts.",
    "pages": [
        "One simply does not let their husband, (He's my husband now, I remind myself smiling into his hungry hazel eyes,) tell all their stories. I mean, please look at his last effort. He's so mechanical and all about where he put his willy and what sort of noises we made.\n\nThose eyes. Those chameleon coloured pools of communication that tell me constantly with their changing hues of his innermost thoughts. I soundly thrash him at card games, you know. They watch me now across the way from the other seat in the limo that rushes us to our honeymoon suite. The same hungry eyes I met that very first day I saw him.\n\nLove at first sight... Pah! Such girlish princessy notions. That was the first flickering embers of a fire I spent the whole afternoon stoking. And I'm naughtily prodding it now with my apparent disinterest as we leave our half pissed family and friends and rocket toward this next naughty moment.\n\nI want to tear my stupid 'going away dress' off and pounce on the beautiful man and ride him through several blisses until he squirts deliciously into me. But... I'm teasing and building a thing. When he does squirt later it will be hard earned.\n\nWhere was I? Oh... Beginnings. See this is why women should tell stories. There are all sorts of side roads to explore. They day we met. He thinks my smile right now is for him but its for that day. Nevermind. He's such a lovely.\n\nCarrie and I had split. It was gruesomely emotional. She was 'exploring a new relationship'. I was exploring my grief. Three years I'd committed to her whimsical adventures. We were travelling in Australia, visiting my relatives when she discovered a tall blonde Australian girl with a life saver's uniform and a surfboard.\n\nHeartbroken, I sought refuge at my Aunt Molly's home. I wanted to go home. I wanted my stupid large brothers to go and beat someone up for me. I wanted my Mumsy to cook me liver and bacon and brush my hair and wanted not to feel so stupidly emotional.\n\nI'd mostly put myself back together and I was applying for nursing contracts in parts of the country that were as far away as Germany was from my old home in Birmingham. Molly was watching me tapping away at the blessed keyboard with my index fingers and scowling at the screen.\n\n\"You need to get laid.\" She told me.\n\n\"You need to jolly well fuck off.\" I unleashed a witty retort. \"I need a job or I'm heading back to old blighty.\"\n\n\"Seriously Jules, this too will change. You can't bog down in it darling.\"\n\n\"Save the platitudes Aunty M. One thing at a time. Besides, look at me... I'm easily a full stone heavier than I was when I arrived last Autumn. I need to diet and take a jog. Maybe then the getting laid will occur.\" MmHmm. That's where my self-esteem was located.\n\nNot that I was, well, VERY fat. But I hover usually around sixty-five kilos. My present seventy-two hung a little heavily on my five foot five frame, whatever that is in centimetres. Stupid French and their silly ten's things.\n\nAnyhooo... Those side-tracks hmmm?\n\nSo dear Aunty M's started doing what dear Aunties all over the world do and went on a matchmaking mission. Oh, my good lord she found some bottom dwellers from her 'plenty more fish in the sea' list that she selected the blind dates and 'I have someone I'd like you to meet' from.\n\nThen one gloriously sunny Friday, she put her phone down on the kitchen island and pressed the speaker button while she was talking with Dudley.\n\n\"Duds,\" she said in her drawling Australian attempt at the Queen's English, \"Can you get David for me please.\"\n\n\"Ah... He's busy love. Why? You want some more coaching?\" My uncle replied.\n\n\"Dudley please just fetch the beautiful man. You can do that can't you? You are still the boss?\"\n\n\"Fine. Hang on.\"\n\nA short moment later a man with an intriguingly deep voice said, \"Mr Gilbert?\"\n\nMy pants wet. It had been more than three years since a man had interested me sexually but the moment he spoke my vadge spoke back.\n\n\"Molly...\" Uncle Dudley said.\n\n\"Oh hi, Molly love. How're you doin?\" He sounded a little like crocodile Dundee. A little scary and wild.\n\n\"I'm fine Davo, but instead of our usual Sunday coaching, do you think you would like to join Dudley and I for a quick bat on Saturday afternoon? My niece Julia is visiting. We could play a set of Doubles if you like and I'll make snacks.\"\n\n\"Yeah sounds good. Nothin doin Saturday anyway and you do make some ripper snacks, love.\"\n\n\"Goodo then Davo.\" Oh the 'oh' and more oh's these Aussies use. \"See you around noon.\"\n\n\"It's a date, love.\"\n\n\"Oh you...\" My Aunt actually blushed before hanging up.\n\n\"You'll love Davo. He's good fun. Bit old for you, but good fun. Might just snap you out of your funk and by goodness, he can play tennis.\"\n\n\"We'll see about that.\" I thought. I am ranked quite well in the Birmingham League. Or at least I was before I came to Australia and put some post break up pounds on.\n\nSee now? He leaves out all the romance. I read his story you know, and it sounded like one of Daddies Penthouse magazine stories. \"I never thought it would happen to me.\" Indeed. Pfff.\n\nI was watching that sunny Saturday late morning in September while he hoisted the net and put a few practice serves wickedly across the court. I was watching from an upstairs window at Aunty M's Coominya homestead. I'd seen his little car rumble down the gravel drive and park near the courts and I was fascinated by his familiarity. Most 'help' introduce themselves at the front door before simply setting up and getting about things. What sort of 'coach' just waltzes around like he belongs?\n\nA very svelte one it seemed.\n\nHe was tall. I liked that. Not giant; respectably tall and seemed well built in his white shorts and polo shirt. Neatly groomed too. No frightful beards or man buns. Ageless from my vantage but fit looking.\n\n\"Julia dear?\" Aunty M positively bellowed from somewhere downstairs.\n\nInvestigation located her in the kitchen, also watching our guest as he warmed up and pranced about.\n\n\"Hi. There you are love. Could you go tell Davo that I'm almost done in the kitchen. I'll be there directly. Soon as I change. Oh and rustle the old man up. I think he's in the study.\"\n\nMy reply of, \"Sure,\" translated, including the volunteered eye-roll that accompanied it to, 'fine... I'll play fetch the husband and go introduce myself to the man you've spent the last twelve hours promoting to me like he's some kind of god'.\n\nDudley was easy to find. In his study as usual.\n\n\"Put the work down for a moment Uncle Duds. Mr Stimpson is here and Aunty M is keen for a hit.\"\n\n\"Hit and a giggle it is then.\" He is a lovely man. His hugs are genuine and generously apportioned. When he releases me I swat my butterflies aside and make my way to the court to find the latest creature my well intentioned Aunt has flung at me in a desperate attempt to lure me from my self-imposed exile from social involvement.\n\nThe steel gate to the court squeaks loudly enough to announce me.\n\n\"The infamous Mr Stimpson, I presume.\" He straightens quickly, making me giggle. 'Cute butt for an old guy,' I think.\n\n\"Ah... Hi. The very same. David.\" His broad smile and healthy teeth are my new favourite thing. As I shake his hand, I find him younger than I figured from the upstairs window. It's hard to tell with these Aussies. All that sun and such.\n\n\"You have me at a bit of a disadvantage, love. I didn't know Nigella Lawson's hot little sister was going to be here today.\"\n\n\"Haha. Please.... Trowel it on a little more thickly, David.\"\n\n\"Do you have a name to go with the pretty face?\"\n\n\"Oh dear... The whole name or just the useful parts?\"\n\nHe's still holding my hand quite nicely. Not too firmly or weakly. Warm, not dominating.\n\n\"David Earnest Stimpson, at your service 'milady'.\" He mocks my accent cheekily.\n\n\"Oh no.\" I shake my head trying not to smile, \"One of those funny boys. Well then. I shall bestow upon you my complete description. Elizabeth Julia Anne Bernice Gilberts. Please call me Julia.\"\n\n\"Okay Jules. Very pleased to meet you.\" It seems quite so. He pats my shoulder with the hand that isn't shaking mine and positively beams those healthy teeth at me like I'm either the best thing he's encountered this week or lunch.\n\n\"So, I was told there'd be tennis to go with the pretty ladies today. Is Moll's about?\"\n\n\"Moll's? Oh, yes erm... Just finishing up in the kitchen. She said she'd be here as soon as she changed. Speaking of which...\" I'm suddenly quite aware of my lazy attire. Yoga pants and a floppy t-shirt... Quite the first frumpy impression. \"I should go throw on some trainers. I hear you're quite the tennis coach.\"\n\n\"Ah... Bit of a hack but do love the game.\"\n\nHis hazel eyes... They bore into mine. They flit to my lips and chest. They remind me of hungry wild animals and they flash yellow amid the brown and green. Positively predatorial, they take a dip to my feet as we release each other's hands and then they sensuously slurp their way back up to mine.\n\nWe're locked in this weird standoff of staring and smiling for uncomfortably long. I haven't felt this moment of attraction toward another human since I met Carrie all that time ago. Certainly not for a man. Certainly not for a slightly older man.\n\nI've also quite certainly destroyed these knickers. Something about his presence, his smell, his voice, just reached down quickly and directly into my leggings and switched on the waterworks. Oh, my giddy aunt, I'm going to have to be very, very careful.\n\n\"Erm...\" It's Keates or Shakespeare in its eloquence.\n\n\"Yeah, Ah... I'll get set up here. Nice to meet you Jules.\" He winks. Who winks? Why is he winking. Oh sweet fuckity fuck. I need to... A thing over there.\n\n\"Likewise, David. I'll, erm... The... house and...\" Oh good lord shoot me. I'm going to leave two snail trails all the way back to the house. One from my useless drooling mouth and one from my nethers.\n\n\"Infamous? Bloody Moll's been blowing smoke up my arse again hasn't she.\"\n\n\"Haha.\" Thank you beautiful man for the levity. So, I tick off my fingers and list, \"Devastatingly handsome. Mind of a genius. Heart of a poet. The usual fare, David.\"\n\nHe blushes slightly and examines his feet for a moment. \"Well, hopefully you're not too disappointed. I had better get warmed up, so you all don't make a fool of me on the court.\"\n\n\"And I had best change.\" I smile and take my leave with some shreds of dignity still courtesy of his self-deprecation and well... him.\n\n\"David.\" I call from the gate. It can't hurt to wind the man up a little. He could be a bit of fun. \"Not too disappointed at all.\" I return his wink and hurry away feeling every bit as silly as a schoolgirl trying to flirt.\n\nIn my room I struggled with clothing choices. Clearly selecting a bra was simple. It had to be the thing I wore when riding. A straight jacket of lycra that kept me from taking an eye out. But these clothes laid out on my bed mocked me.\n\nOne simply does not, NOT wear, one's tennis clothes when playing tennis. This plain white sports blouse and this simple sensible skirt are a uniform of sorts and obviously the correct choice; six months ago. Six months ago, when I was my sixty-two kilo, dieting like a good girl self. Part of me wishes to defy convention and wear my yoga pants, they conceal a multitude of sins and are super comfy.\n\nAnother part of me smiles at the way my breasts stretch the blouse and refuse to allow the top two buttons to close. It looks a little saucy, I decide turning this way and that in the mirror. What am I thinking? I'm too fat for saucy. It will just look like what it is; I've consoled myself with far too much cheesecake and ice cream and my clothes don't fit. Ridiculous!\n\nThe skirt when I decide to attempt the entire ensemble should fall respectably to about mid-thigh. Thankfully it still secures around my waist. Perhaps I haven't gained too much tummy at least. But my bottom lifts the hem almost scandalously now.\n\nI want to cry. Six months ago, I felt so good in this outfit. Healthy and curvy. Now I feel silly and lewd.\n\nAs I tie my trainers and pull my little white socks up, I remind myself to pull on a pair of lycra cycle shorts. Perhaps that will save the day if the now too short skirt betrays me on the court.\n\n\"At least it will stop those thunder thighs rubbing.\" I tell myself aloud.\n\nScowling at myself in the mirror, I assemble my unruly locks in a loose bun and watch as the tears start without permission. \"Nothing a jog around the block won't fix. How're you going at the gym? That diet's really working.\" Yeah, well fuck you Carrie. Fuck you very much. This is me. No matter how hard you squeeze me, I'm not going to fit in the mould you picture for me.\n\nI tried so hard for her approval. I apologised for every pound and every stolen calorie. \"Sorry, this fit last month. Sorry, I've been working really hard.\" Well, no more fucking apologising. This is me. If that lovely man downstairs or any other person on this planet ever earns my love it will be because they accept me as I am.\n\nSucking in a deep breath I sternly tell my reflection. \"Elizabeth Julia Ann Bernice Gilbert, you will not apologise for any aspect of who you are. You are wonderful and complete just as you stand here.\"\n\nAnd I find myself almost believing it as I fix my scant make up and wonder how tennis will go. I do so hope to put in a good showing at least. He wouldn't be the first tennis coach I've humbled.\n\nWe've agreed to mixed doubles and a single set on this sweltering spring afternoon. I'm paired with Uncle Dud's which suits me; I rather hoped for the opportunity to oppose the devilishly confident Mr Stimpson.\n\nThe score stands now at five games to two in their advantage and forty-love.\n\nI'm seething.\n\nAt first it was quite amusing. My outfit had quite the effect on David. Uncle Dud's commented on the brevity of my skirt and from that moment, David was tripping over himself to get a look either down my top or up my skirt when I bent to retrieve a ball. Quite literally. At one point, I was leaning down to tie a lace and he was running to return a volley from Uncle Duds. The resultant fall was quite comical.\n\nBut as the game progressed, I noted that despite his masterful precision and form, his game lacked any power. We shared some quite vigorous volleys but to be honest, Aunt M returned her balls more forcefully.\n\nNonetheless, he surgically placed his shots and chance alone gave us our two wins. He was playing with us. I'm not a poor sport. I don't mind losing; especially when playing against someone with his obvious skill. But the cad was playing with me like a cat plays with a mouse. Either that or patronising me by lobbing things gently for the 'little' girl.\n\nI'm sure it shows on my face. When I anger, I have a flare of blush that spreads down my neck. I can feel the heat of it now as he serves a gentle ace that I should have returned but failed to predict. It lands perfectly inside the very corner I thought it would miss. A man with his height and strength should be slamming them through.\n\nWhen we shake hands as Aunt M takes the last point, and the game, and set, he thanks me for the game politely and comments on my back hand.\n\n\"You're very agile and quite skilled. If you had a little more accuracy in your backhand, you'd have taken a few more points, love.\" The condescending cunt. I abhor the c-word. But there are times it needs deployment, even if just in my mind. I nod and make for a courtside drink.\n\nWatching as he compliments my Uncle and Aunt on their game and suggests coaching tips, I notice his eyes flit sideways to find me occasionally. If he thinks he's in with half a chance after treating me like little princess Polly, he has yet to meet an angry Julia.\n\nI follow them crankily to the pool where Aunty M has assembled hors d'oeuvres and a nice punch. They chat and eat and I skirt the conversation politely. Inside, I grow angrier by the moment at his smug familiarity.\n\nSoon enough, the pleasantries seem to come to an end.\n\n\"Ah, well... If I may be excused, I have several work calls to make this afternoon.\" Uncle Dudley hastens away toward the house.\n\n\"And David if you don't mind, I need to clear this mess. I'll leave you two kids to the pool. A swim would probably be in order.\" She kisses his cheeks and I ponder the stupidity of leaving him alone with me in an obvious set up play. Has she not read my face and present demeanour?\n\nHe's chewing the last of some small treat and sipping at his punch. I'm stewing silently on a pool chair trying not to look at him.\n\n\"You play very well, Jules. You had me beat a few times there.\"\n\nJules? I calmly stand and place my plate of crumbs on the table and turn to face him. His eyes find mine and recognise the anger, scant moments before I lose control of my mouth and the following blisters his face.\n\n\"You smug bastard. Do you think I don't know you were pulling all your shots? And those serves. For fucks sake, Aunt Molly put more oomph into her game than you did. Then you played games with us, surgically embarrassing us while doing it with one hand behind your back. I don't mind fucking losing you arrogant pig, but I do hate losing to a posing ponce. You can shove your patronising tips up your arse, David Earnest Stimpson.\"\n\nI'm not one to flame and run. If I give someone the news, I stand in my moment and see what they have to say for themselves. His face registers shock, then understanding and then he sighs and shakes his head.\n\nI watch sternly as he shrugs and pulls his sweat stained shirt off. Despite my anger, naughty parts of me wish I wasn't so presently volatile, as I see his toned stomach and chest and 'fuck me'... His scar.\n\n\"Bit of a bingle on a horse, love. I'll be sore for a week after today thanks to you. Need to put some movement through the shoulder and cool it down. Maybe you could use a cool down yourself, Jules.\" His raised eyebrow infuriates me, as does his chuckle when he bomb dives into the pool like an adolescent, splashing me with water.\n\nI've showered. I've brushed my hair. I've thrown my pillow at the wall and cursed myself. Then picked it up and fluffed it and returned it to the bed. I've watched him swim gentle laps out the window. Clearly, exercising his rotor cuff after our game. I have not, not even slightly, forgiven myself for making assumptions and a total cock of myself.\n\nMy father treated me like his little princess all my life. His patronising lack of expectations for me and... I need to let this go.\n\n\"Julia?\"\n\n\"Aunty M.\"\n\n\"May I?\"\n\n\"One moment.\" I wrap my towel around my naked body. \"Okay.\"\n\n\"Hi.\" She says, placing a tray with a small pot of tea, two cups and some cream on the dresser.\n\n\"Oh god...\" I fall back on the bed and hold my scarlet face.\n\n\"Hahaha... I heard, darling.\" She pours tea and sips hers while I hide in my hands. \"He won the Australian Open at age twenty-three. A complete outsider. Had only been pro for a year. Went on to rank in the world's top 50 before the accident. Nasty business. Ended his career. That's when we met him. Came to work for Duds. He does a little coaching on the side for a select few clients.\"\n\n\"He obviously had a reconstruction. With physio...\" I offer.\n\n\"Yes. There was bone damage too. Some plates. You'd have to ask him for the details.\"\n\n\"Like he's ever going to speak to me again. A shrew! I was a total shrew.\"\n\n\"Ha phhh... He finds the humour in most things, our Davo. Give him a chance.\"\n\n\"A chance? I positively sprayed him.\"\n\n\"Hmmm. Your tea is going cold.\"\n\nThe good old cup of tea. Although this stuff that passes for tea in Australia is an acquired taste, I'm sure. I rise and frown at my black tea and sip its wisdom.\n\n\"So, what now, Aunty M?\"\n\n\"Fucks me.\" She laughs. \"He does seem rather fond of you. Or at least some parts of you. His fall was spectacular.\"",
        "I can't help but laugh remembering his flailing and chagrin.\n\n\"He did seem a little unduly fascinated by certain things.\" I giggle.\n\n\"But there was a definite spark there, Julia. I could see it in your eyes. Oh my god, and his. I thought he was going to stop the game to eat you. I've tried to set him up before you know, and he was always polite but vague. I don't know what his ex did to him but it must have been brutal. You... I wish he looked at me like that. If I was twenty years younger... Damn...\"\n\n\"I know. No-one's looked at me like that since Carrie and it makes me afraid. I think I was looking for reasons to hate him.\"\n\n\"Well he rather liked some bits of you and if I can offer a little womanly advice, it would be to put those bits in a nice swimsuit and go and see if you can rekindle that little spark that you let turn into a blazing passion. That sort of passion should never be wasted.\"\n\n\"Damn it.\" I owe him an apology and it's one of three things that I absolutely abhor. \"You're right.\"\n\n\"Usually, but can you please let Dud's know that.\"\n\nI dress with her help. She selects a demure little yellow sundress that on the hanger looks sweet as sunflowers. On my frame it looks whorish. I wear a simple one-piece bathing suit underneath.\n\n\"Perfect.\" She announces. \"Like shooting fish in a barrel.\"\n\n\"I look...\" My tits are just... And my arse...\n\n\"Trust me sugar, he's a goner.\"\n\n\"Do you have any liniment?\"\n\n\"Oh! Smart girl.\"\n\n\"I am a nurse.\"\n\n\"One moment.\"\n\nVoltaren Osteo gel in hand, I drag my embarrassed and flouncy form to the poolside again with three beers.\n\n\"Here she is.\" Uncle Dud's says. \"My favourite niece. Absolute talk of the Birmingham ladies club. Quite squarely ranks, you know. Embarrasses a few men on the occasion.\"\n\n\"I'm sure you do, Jules.\" He says straight to me like I didn't just light a fuse under his bottom. \"Come on. Sit. Dudley is telling me all sorts of embarrassing stories about you.\"\n\n\"Oh. You.\" I frown and hand him a beer. \"And you. Take this and bugger off.\" I hand Uncle Dud's a beer. Then for fortitude I roll the cap off mine with my finger and tip it at them. \"Cheers.\"\n\n\"Cheers.\" They chorus and Uncle Dudley wanders laughing back to the house.\n\nMost impolitely, I plonk myself upon his lap. He reclines in a sun lounge and I just sit across his thighs like I belong there. After my first long, fortitude building swig of ale I lift a leg to straddle his thighs, (it's well short of any rude business, but close enough to suggest it,) and say, \"Right. If we're going to be friends, I have a few deal breakers.\"\n\n\"Right love?\" He raises an eyebrow.\n\n\"I absolutely abhor bad breath and bad kissers.\"\n\nWith that I put my beer down and move forward enough to grab his neck and pull him to my face.\n\nOh dear. It was the worst kind of mistake.\n\nHe tasted like beer. Beer and heat. Beer and heat and promise. Beer, heat, promise and longing. His tongue tasted like it belonged in my knickers. His breath smelled like I could overdose on its manly woody molten... oh god my swimsuit is already wet and I'm nowhere near the water.\n\nHe pushed me off. HE, pushed ME, off.\n\n\"God, Jules I'm sorry.\"\n\nI have no idea what for and then I suddenly do. It's pressing rudely into my thigh.\n\n\"Haha, well that's a good test of assembly,\" I smile knowing I have tipped the equilibrium back into a court that I now control, \"So... Those two out of the way...\"\n\nHe raises an eyebrow again.\n\n\"Apologies. I detest being wrong. So, lose the shirt.\" I brandish the Voltaren gel, \"And let me get about this bloody apology, then Davy.\"\n\n\"Davy?\"\n\n\"Don't be a prick now.\"\n\nHis warm laughter and lost shirt tell me the day is not lost. I squirt gel into my palm and warm it for a moment before smearing it on his scarred shoulder.\n\n\"Oh dear.\" I run my fingers firmly along his bones and muscle structure. \"Quite a decent, what did you call it? Bingle. Quite the bingle indeed.\"\n\nHe groans as I rub the gel in. I am quite good at this without being conceited. Volunteering during my nursing studies with local rugby teams gave me plenty of experience. Plenty, of massage experience as well.\n\n\"So, collar bone is plated, Acromion too. Lots of calcification in the Transverse humeral ligament. Quite the bingle, Davy. You said a horse did all this?\"\n\n\"Technically the ground and a rock did it. The horse just launched me.\" He laughs as I squirt some more gel in my hand. \"I was helping Dad muster and the old girl spooked at nothing, put in a pig rut and threw me. Broke the head right off the humerus, collar bone and bits of the clavical. Tore all the tendons in my cuff and quite a lot of ligament damage. Was six weeks in hospital and the surgeries didn't seem to end. Worst bit was the damage to the Humeral head. Best thing for the shoulder is movement in the joint but movement inflames the joint because of bone chips to the ball end.\"\n\n\"Can't win.\" I tell him. \"Do you still see physio?\"\n\n\"No.\"\n\n\"They could help some.\"\n\n\"They tell me to do all the things I am already doing and recommend pain killers to deal with the pain of the process.\"\n\n\"So.\"\n\n\"Painkillers are the problem. This I can live with.\" His eyes are serious for the first time since I've seen them today. The edacious burn is replaced with some kind of downtrodden thing.\n\n\"Look. If we're going to be friends as you suggest, then you need to know I'm an addict. Two years clean now but still fronting up to meetings. This...\" He taps his shoulder, \"Ended my career. This...\" He taps his head. \"Destroyed my life. I was trying to get back on the circuit as soon as possible and the doctors gave me all sorts of things. I needed more and more of them over time and I knew it wasn't just for pain relief. Without them I was someone else. Someone I didn't know or like. Mean.\"\n\nI had lived with Carrie for the best part of three years and never had such a real conversation.\n\n\"So. Into rehab... Was there for three months the first time. When I came out Karen was gone. The wife. She had shacked up with my manager. That sort of sent me spiralling back into rehab again. Was there six months that time and when I came out there were divorce papers and settlement things. It was kinda lucky really that she was with my manager because he was bloody careful with my investments knowing that she might get some. Off I went again.\"\n\nHis shoulder needs no more rubbing, so I drop my hands to my lap and listen.\n\n\"Back into rehab. Out a few months later and I guess time helps these things.\" He rubs his shoulder. \"The injury was settling. I met Dudley through one of the meetings. He was struggling with gambling. And here I am. With a pretty little English girl sitting on my lap talking shit about myself.\"\n\nI laugh at his narrative. \"Well, it's a familiar story within athletic circles. And specifically, prescription painkillers are known for their addictive nature. But it's the first time I've heard it told by someone who didn't minimise their responsibility for it.\"\n\n\"No point keeping secrets. They just bite you in the coight when they get out.\" He winks again.\n\nI realise I'm squinting at him after a moment, \"Well, I'm sorry for earlier. I grew up the youngest of five. I have four older brothers and doting parents. I've been molly-coddled my entire life. I wanted to play rugby, they signed me up for tennis. I wanted to ride motorcycles, they bought me a pony. I wanted to study marine biology, they cajoled me into nursing. Getting the picture, lovely?\"\n\nHe smiles and nods.\n\n\"So, I jumped to conclusions and reacted a little too passionately. I'm very sorry.\"\n\nHe watches me with those serious eyes a moment too long and then nods slowly, \"Love, that is the best apology I've ever been given. First the kiss. Then the massage, now an explanation and a sincere 'sorry'. But I won't accept it.\"\n\nI guess my confusion is reflected on my face because he laughs and continues but this time with that hunger in his eyes again, \"Never. Ever. Apologise for your passion. But thank you for sharing it. That kiss was truly something. I've never had a friend kiss me quite like that before.\"\n\nMy nervous giggle interrupts him momentarily, \"Look, the hole I was trying to fill with drugs was the place my passion was supposed to be. I'd been passionate about tennis from the time I found that racket and ball when I was six. I spent every day after school whacking that ball against the bricks on the shed until dark. Then suddenly it was all gone. I had passion still but no idea where to invest it. So, I put it in a cage and like all wild things when you trap them they waste away. It was only when Dudley got me into sports marketing that I found my passion again. So, my beautiful new friend, never apologise for your passion. At least not to me.\"\n\nWhat a truly lovely man. If all Australian men are like this, why didn't I visit the colonies earlier?\n\n\"I have a secret too, lovely Davy. I don't really want to be your friend.\" I wink as seems to be the custom.\n\nWith that I took hold of my hem and lifted the little yellow dress right up over my head. It took a little shimmying and tugging to pull it past the girls but when I threw it to the tiles the look on his face was priceless. I'm sure he wasn't expecting the swimsuit.\n\n\"Instead, I'd like to maybe find out what else we could become. But first, a nice man suggested I should cool down earlier. I'm going for a dip, Davy.\" Before slipping off the tiles into the cool water I giggled watching him adjust his trousers.\n\nThe cool water and the simple act of trying not to drown is both invigorating and purging. My mind relaxes from the day's emotion and my body releases tension with every stroke. I'm not a fast swimmer given my frame, but I am a strong swimmer. Well, at least I'm positively buoyant. And he seems particularly fond of my flotation devices.\n\n\"How fucking old are you, anyway?\" He asks thrusting a towel at me as I climb the stairs.\n\n\"It's rude to ask a lady her age.\" I wrinkle my nose at him. \"And twenty-'fucking'-six if you must use the vernacular.\"\n\n\"Get fucked.\" He laughs. \"I've been feeling like a fucking pedo all afternoon. I had you pegged at eighteen or so.\"\n\n\"How old are you Methuselah?\" I scrub the welcome harsh dry cotton on my English sun-deprived skin.\n\n\"Thirty-three. But you look... I... Sorry. Anyhow, Moll's wants us up at the house for something. She'll be trying to talk me into staying the night or something. Happens every time.\"\n\n\"She's got the hots for you, Davy.\" I smirk as he blushes and tries not to watch me towelling my curves. Thirty-three is 'doable'. \"So, Davy-Davy, if I promise not to chuck a right wobbly like a proper babby, will you help widdle me up to the housey wousey so I don't twip and hurt my tosie wosies? You pervy old dude.\"\n\n\"Nah... I think you got this toots. Oh, sorry, not too patronising for you Princess?\"\n\nMy raucous cackles fade into distant memory as his yowl fills the air. A wet towel is a precious tool and that flick was pure brother trained merciless beauty.\n\n\"Study... Please, if you... Well... Things...\" Dudley tells him, smiling at the way we're holding hands. \"Ah... Manilla... Production and, god, I have no idea who to bribe.\"\n\nThey leave me with Aunty M, who brushes my cheek with her palm and says, \"You might need to be careful love, you're glowing like a green streetlight.\"\n\n\"Pff... Dirty old man. I'm just playing with him. And look at you... Gushing around over him. It's a wonder Uncle Duds hasn't got the twelve gauge out.\"\n\n\"Eh... He's used to it.\" She gestures at some glasses and an ice bucket and laughs.\n\n\"Your mission should you choose to accept it.\" She raises an eyebrow and continues in her best James Bond voice, \"Is to get a few of these into the young man and convince him to stay the evening. I've a lovely lamb roast in the oven, some pinot noir and I've made up the guest room.\"\n\nShe eyes me quite seriously, purses her lips and twists her eyebrows into her best 'spanish inquistion', \"And I saw that kiss by the pool, young lady. Tell me... Exactly how did it taste?\"\n\nAgain, with the wet pants...\n\n\"Ngoargh... Aunty M... My god. I... Just... I shouldn't and I want, but he feels so dangerous and what if I... And then he... Fuck... Just look... Don't... You stop this thing... I'm... I have no handles. Nothing to grab and last... I felt... Carrie, you know. I can't.\" And then I'm crying for no fucking reason. To again, 'use the vernacular'.\n\n\"Isn't it fucking lovely?\" My beautiful Aunt whispers against my hair as she holds me in a soft hug to her shoulder. \"Isn't it fucking something?\"\n\nShe holds me a moment too long and I erupt, \"Why do you fucking care even?\"\n\n\"My motivations, Julia are truly noble. I've been trying to get him back on a horse since I learned his story. I'm sure between the two of us, we can get him... back in the saddle...\"\n\nHer pause is profoundly laden with rude and meaning in equal portions.\n\n\"He hasn't ridden since the accident. I don't know if it's worry he'll be thrown again or... He won't really talk about it. And women... He dates a little but never anything serious. Probably the same story. I don't know. Help me prepare the vegies. You know Dudley doesn't need his help at all. I just promised him a blowjob if he kept Davo busy for a couple of hours.\"\n\n\"Hahaha. She's yampy as, our old wench.\" I laugh at her. \"Be a sweety Duds and I'll throw in a gobby. You tart.\"\n\n\"There are two ways to a man's heart, either by the willy or between his ribs with a sharp knife.\" She shows me the filleting knife she's using to peel pumpkin. \"So, Dudley will waylay him until it's too late to politely refuse a dinner invitation from a pretty young pommy girl.\" She winks naughtily, \"And I'll insist that he stays the night so that he can enjoy a few whiskey's with Dudley. You, my dear girl, are going to bat your eyelashes and shrug your shoulders a lot.\"\n\n\"My shoulders?\"\n\nShe glances down at my cleavage, \"It seems to interest him.\"\n\n\"You grotty woman.\" I laugh, \"Are you trying to pimp me on the house guest?\"\n\n\"Nothing of the sort but sometimes a bloody good bounce in the sack is just the thing. I may even throw old Dud's around the bedroom later.\"\n\n\"Eww... Aunty M. You go play up your own end. I don't have any earmuffs.\"\n\n\"Oh...\" She puts down her knife and wipes her hands on a tea towel. \"Look. He's had a rough run of things, Davo. I know you have too but please... I don't know how... Look. You're both young and there's an obvious attraction. If you just want to roll him in the hay, then good on you but please don't play games with his heart.\"\n\n\"Aunty M? Is that the big sister, 'I'll break your legs if you hurt him' talk?\"\n\n\"Something like it.\" She grimaces and gets back to peeling pumpkin.\n\n\"Look. He really is quite a sweetheart but I don't even know if I'm ready to roll anyone in the hay, as it were. That kiss was lovely, but it was... well it started as an apology and...\" Great. Just thinking about it sends heat to my knickers. \"I'm enjoying his company. I'll play nice. I find I quite like him and damn it, I don't even know if he wants to see me again. I'd like to maybe go on a date or something. I don't know. I've only just really met him.\"\n\n\"Sorry love. I talk too much. Just enjoy yourself. I have no idea what sort of advice or things your mother would have to say, but just follow your heart.\"\n\n\"Ha. Mumsy would have him trapped in a corner while she tried to ooze all over him. She's such a tramp. I suspect the only reason Father puts up with it is because he's worse. Anyhow. I need another shower to get rid of the chlorine. Are you right with this lot?\"\n\n\"Didn't need any help to begin with, love.\"\n\nFrom my bedroom window where I sit and check emails and social media, I can see clouds beginning to darken the western sky. The sun is low over the tall gums and long shadows paint the lawns. I've been stalking his social media and it's been thoroughly pointless. It's a wasteland of short, clearly managed releases. Obviously, someone still does his media for him.\n\nA message from Carrie is bolded in my feed. I hesitate before clicking on it. It's been at least two months without any contact. And why now? Why now, when my heart has been skipping all day with possibilities?\n\n[Hey Babs, I'm sorry for how things went. Just thought I'd let you know I'm off back home. Broke it off with Tina and out of money. I took my chances and I accept my lot. I hope things are well for you. You deserve a lot better than what I gave you. I leave on the twentieth if you'd like one last coffee. Love, Carrie.]\n\nMy first thought is, \"Damn, now she knows I read that and expects a reply.\" I don't fucking need this today of all days. My second thought is, \"Great, blarting again today.\" As I burst into tears.\n\nI'm not even sad. These are tears of frustration and echoes of grief. The grief contrasts starkly with the hope I'd been allowing myself to feel and the simple flutters of attraction. Typical Carrie timing. She could always twist the knife.\n\nI stare at the reply box as I sob. All sorts of emotions swirl through me. Memories of happy times with the little red-haired lady assault me. It's just coffee... Maybe meeting for coffee...\n\nA voice outside distracts me and I leave my cross-legged spot on the rumpled bed. Outside I see Dudley standing beside the little car that Davy had... \"Davy?\" I ask myself. The affection in the sobriquet spotlights this moment and carves away the conflicting emotions. I watch as Dudley beams and hands Davy the keys to the funny looking little car. Then I deliberately take up my laptop and answer.\n\n[Hi Carrie, Sad for your news. Say hello to our friends back home for me. All the best. Take care, Julia.] No one will ever call me 'Babs' again. I'm no-one's baby. I'm sad that things didn't work out for us. I'm sad too that things didn't work out for her and surf-barbie. But I'm happy for the little girl in me that is just a tiny bit excited about this man whose hazel eyes devour me. This man who smiles at me like I'm the best thing he's seen all his life. This man who sees me and doesn't want to change me.\n\nThis too, may not work. But I'm going to open my heart a little and explore it.\n\nRearranged and dressed again in my sunflower yellow sundress, this time with a matching bra and knickers set instead of the swimsuit, I wander happily downstairs. A weight of sorts has lifted or a fog has cleared or some such metaphorical moment, and happiness creeps in through all the crack of me.\n\n\"Oh dear. You look...\" Aunty M smiles at me. \"Radiant. Come on the boys are looking at Davo's new car. Let's take them a beer and make the right noises. Stupid expensive toys...\"\n\n\"What is it? Is it a Mazda?\" I ask. I know it's a Lotus Elise but the look on their faces is to die for. \"Is it fast?\"\n\nI pass Dudley his beer and Aunty M gives Davy his. His mouth is open and words should be coming out.\n\n\"I like the colour, it's the same as your dress Julia.\" Aunty M says, taking my lead, \"Kind of banana.\"\n\nUncle Dudley blusters, \"Look here, girls. It's a Lotus. Very expensive you know. Fast too. And it's Norfolk Yellow. A Cup 250...\" He's shaking his head and I can't help laughing and giving the game away.\n\n\"The Bathurst Edition too.\" I add. \"I thought they only came in white.\"\n\nHis smile is beautiful, \"I had it painted. White was boring. Thought one day, I'd meet a pretty girl who liked yellow.\"\n\n\"Oh...\" I tell him seriously, \"You're staying the night. Guest room is made up. I'm told Aussie boys aren't allowed to resist polite dinner invitations from pommy chicks.\"\n\n\"Oh. Um, I had some... I guess...\"\n\n\"God Davy, don't make me have to throw in a gobby like Aunty M did to get Uncle Duds to distract you all afternoon until it was too late to politely refuse dinner.\" Dudley blushes crimson.",
        "\"Heaven forbid.\" He grins. \"What are you up to Moll's? You've been trying to conn me into an overnighter for ages now?\"\n\n\"She has a massive girly crush on you, Davy. Oh and she wants you to take me horse riding tomorrow. I could use a few pointers; it's been a long time out of the saddle for me.\"\n\n\"Ah... You and me both, Jules. Not since... Well.\" He rubs his shoulder and dark things flit across his face.\n\nHe looks rather comical in Dudley's clothes. They're a tad large and quite stuffy looking on him. He sits across from me at the table and discusses cattle with Dudley. I learn that one of his investments is a cattle property in the Cooper region, wherever that happens to be.\n\n\"Helicopters, Julia.\" Uncle Dudley laughs, \"They use helicopters to muster them. Genius, but must cost an absolute fortune in fuel.\"\n\n\"Cheaper than paying men on bikes or horseback. That would take months and... The choppers are only little fellas. The pilots are station hands. It's not as glitzy as it sounds. Dusty and hard work still. You'd love it out there, Jules. Sunsets are something else. The horizon goes on forever and with the desert dust, they glow crimson and... oh. Yeah, pretty sunsets.\" He blushes. I wonder why. Was it because he was including me in some kind of vision?\n\nOh dear... His heart.\n\nHe's holding it out for me. And why? Or is he? Or is it just his own hopes and imaginings? Fock... You think too hard, \"Jules\".\n\n\"So dear, that was... Hmm... Delicious and the thing with the sauce...\" Dudley claps the table. \"Delicious. Here's to the cook.\" He raises his whiskey filled glass that he's probably filled few too many times. She's ingenious, my Aunty M. Enough whiskey and the promised blowjob and he'll be practically chomping on the bit to finish dinner early and leave Davy and I alone. It's a little rudely manipulated and I remind myself never to underestimate my Aunt.\n\n\"Dessert yet Duds... Hold the horses...\" She tells him.\n\n\"Davy, that little yellow lady...\" I smile and do my best sultry look. \"I bet she's wicked on the mountain roads.\"\n\n\"Oh god, Jules... You have no idea.\" And the passion flashes in his eyes. \"Up over Mt Glorious and down into Dayboro. She's so nimble... So... Damn. You'll have to... Oh. Hey, what are you doing tomorrow?\"\n\nThere is a collective laugh around the table that shames us both into some serious blushes.\n\n\"Erm... Maybe going for a drive?\" I smile at his cheeky, smiling hazel eyes.\n\n\"After bloody horse riding.\" He fills his mouth with a spoonful of food and dark things gather on his face. When the shadow passes, he asks, \"You know your sports cars. How did you know it was a Bathurst girl?\"\n\n\"You left the Union Jack on the ends of the rear spoiler and well the wheels mostly. I know some of the others have them but in Australia? Had to be a Bathurst. Oh, and no, I don't know much about sports cars, but I do know a little about Lotus. Father was the son of Gun Quarter industrialists. He invested heavily in Lotus stock. Almost broke the family but still... I do like shiny things.\"\n\nHis smile is all of those beautiful big straight teeth and a little skewiff dimple in the corner. He fumbles a little then reaches out for my hand. I shrug as Aunty M suggested I should this afternoon.\n\n\"Your hand.\" He smiles staring at my breasts.\n\nI reach across and he hands me a keyring.\n\n\"If you can get me on a bloody horse tomorrow, you can drive the little lady up over the mountain.\"\n\nDinner finishes with a pavlova and ice-cream. It's something of an Aussie sort; has passionfruit on top of cream and meringue and well it's embarrassingly delicious. He's watching as I lick my spoon and some cream from my fingers... There's a wonderfully naughty glint in his eyes.\n\n\"I do like a woman with appetite.\" Uncle Dud's chuffs at Aunty M who is also licking her fingers.\n\n\"Hmm... I'm sure you do, you dirty old man. Come on Davo. Help with dishes please, love.\" She tells my prey.\n\nThis whole day has been some slow furnace. A fire was lit and fanned and now I watch with eyes that 'hunt' as he smiles and follows my lovely aunt to the kitchen with an armful of plates and a playful smile. I'm imagining all sorts of naughty things I could do to him if...\n\n\"David is a good man, Julia. He is careful, deliberate and like all of us a little broken by this world.\"\n\n\"I've already got the lecture, Uncle Duds.\" I laugh.\n\n\"Still. He likes you. I can see you want him but be careful please.\"\n\n\"Erm...\" Awkward much?\n\n\"Shh... You practically burned his arse off with your glare as he followed Molly out. I'd like to see him back on a horse though. I don't think it's right for a man not to go for a jolly good gallop every now and then. Old Sue would be the perfect fit. She's a school-ma'am of a mount. Could use the exercise anyhow. Just watch she's not too green. Maybe send her a few times around the round yard before you seat him. She's gentle but still a little spirited.\"\n\nHis analogous ramble is a little convoluted, but I understand his caution as a similar warning that I got from Aunty Molly.\n\n\"I'll be gentle, Duds.\" And I wink again. He winks back. This is clearly an Aussie thing. Although Uncle Brenton Dudley Eugene Phillip Gilbert assimilating it is a little odd.\n\nAnd then. Dishes get done. Port gets consumed. Business gets discussed and my Father's brother's wife snakes an arm around my shoulder and says, \"He likes you a lot. Be patient.\"\n\nI don't know what she thinks I'm waiting for. Mostly, I'm just enjoying the company and his attention as we sit in the drawing room and converse lightly. No matter how far Uncle Dud's tries to pull him into politics, sports or business, Davy always brings the conversation around with a question directed to me.\n\n\"Julia, you must have opinions on this marketing angle.\" He steers me in. They've been discussing a line of leggings and an advertising campaign that markets them squarely at tall toned fitness models. \"You made that pair you wore this morning look sensational. I just don't think the hook is in promoting them with running.\"\n\n\"Damn straight. Leggings are for eating cheesecake in. For when one is too lazy to get dressed properly. But I don't think an advertisement showing an overweight frump lounging on cushions eating cake is going have them marching off the shelves, Davy.\"\n\n\"I think...\" It was mean to throw in the fat reference. I'm not searching for compliments, just making an unsettling observation. \"I think you may be... Look, it's real women buying the stock. Look at the sizing we commission for god's sakes. What if it's pitched at real women. Young busy mum's and working women who are trying to squeeze a quick walk or run into their schedule.\"\n\n\"Ahem... You do remember who we're pitching it to.\" Dudley interjects, \"Bigoted bitch she is. She'd never go for anything that didn't have at least one close up of a models arse or tits.\"\n\n\"Well, you are not selling them to men.\" I offer.\n\n\"Now Jules, what about the LGBTXYZ contingent.\" David mocks, \"Don't marginalise the boys in leggings.\"\n\nHe's going to shit when he finds out that I'm bi. \"I hate running. If you ever see me running, you should run too, because something is chasing me. A little tennis and some horse riding are enough exercise for me. Leggings are great when riding, much more comfortable that jodhpurs. Maybe you could explore other activities?\"\n\n\"I have several pair I wear when gardening.\" Aunty M chimes in.\n\n\"So what you're suggesting,\" Snuffles Uncle Dud's, \"Is a gay man with skin tight yoga paints picking flowers from horseback. Quite the imagery.\"\n\n\"Don't forget the closing close up on his junk,\" Aunty M laughs.\n\n\"Carrie made me wear leggings when we ran, insisted they helped with weight loss somehow. I hated them. So sweaty and hot and clingy. I much preferred a nice loose pair of shorts.\"\n\n\"You should wear whatever you feel comfortable in. I thought you said you hated running. Gary sounds like a bit of a jerk.\"\n\n\"It's Carrie as in Carrie Fisher, not Gary as in Gary Glitter. Hindsight would suggest you are accurate in your appraisal of her though.\"\n\nHe processes the information extremely quickly. There is just a small awkward glance at my Uncle and Aunt but his smile doesn't falter.\n\n\"Well, her loss, Jules. Her loss.\" He smiles still flickering those hungry hazel eyes on mine. Obviously not deterred by the information.\n\n\"Indeed. And time we old folk retired I think.\" Uncle Dudley stretches and yawns.\n\n\"Oh, you aren't tired. I know what you're thinking.\" Aunty M laughs.\n\n\"Well promises were made...\" He winks.\n\n\"You're awful.\" She smiles, \"Why don't you youngsters take that bottle of red and a blanket down to the gazebo. It's only early and it's a lovely night. There's even a bit of a light show out over the valley.\"\n\n\"What a splendid idea. I love a good storm.\" I tell her truthfully and kiss her cheek goodnight. \"I'll fetch a blanket. You will join me, Davy, won't you?\"\n\n\"He'll do as he's bloody well told.\" Uncle Dud's laughs. \"The women rule the roost in this house.\"\n\nWhen I return with a blanket he's tapping at his phone.\n\n\"Planning an escape route?\"\n\n\"Nothing of the sort, love. Just re-arranging some plans I had for tomorrow.\"\n\n\"I'm sorry. Anything important?\" I am sorry too. He's been rather manipulated.\n\n\"I was meeting Megan for lunch; it's fine we'll catch up through the week. Don't be sorry, Jules.\" He puts his phone away and smiles genuinely, \"I'm enjoying your company.\"\n\n\"Megan is?\" I leave 'competition' unasked.\n\n\"Oh... No, Megan is... Ah... We dated a while back. A friend, I guess.\" His squirming is amusing.\n\n\"So, we've kept you from your friend with benefits?\" I ask, hooking my arm through his and deliberately pulling him against my breast as we walk the short way to the Gazebo. He's carrying the wine and glasses. I carry the blanket.\n\n\"You really do enjoy teasing me, don't you Jules?\"\n\n\"Immensely.\" Speaking of which, \"Hand me your phone please Davy.\"\n\nHe complies without question and I add my name to his contacts. \"I'm in town from Wednesday through Friday with interviews and hopefully some contract negotiation. When you're done with your 'friend', I'd like a dinner invitation or some such thing.\"\n\nI hand it back and he looks at my details, smiling. \"Megan is married. We remained friends. There's no-\"\n\n\"Shh. Open the wine, pour us a glass each and relax, lovely.\" I rub his cheek with the back of my fingers. \"You are fun to tease.\" Information acquired. Target destroyed. Tyres peed on. I relax onto the outdoor couch and pat it beside me when he turns back with glasses. I pull the blanket around his shoulder and mine and lean into his warmth.\n\n\"So how... I'm not sure it's polite to ask, but, your ex was a woman.\"\n\n\"And here I am snuggling up to you?\" His awkwardness is delightful. His honest question not mocking or rude. \"I don't much care about the bits and pieces, it's the person that I'm attracted to. The bits and pieces are quite fun, but the person more important.\"\n\nI'm rubbing his arm as I speak. My face is pressed against his shoulder. It feels safe and snug beside him. \"I met Carrie at University. We were both studying nursing. I'd had boyfriends before that and had never been attracted to a woman. There was something about her though. A fire in her that I admired. We were together for about three years all up. We came to Australia to work and explore.\"\n\nI don't know why I'm telling him all this. It's easy to let it spill out and honestly, I wish for him to know me.\n\n\"It's only been since we split that I've seen some of the things that weren't so nice about her. I was never quite up to par, you know. Too fat, too loud, too driven, too... bla bla listen to me waffle Davy. I'm sorry. You're...\" A nice safe place and a good listener, I don't tell him.\n\nHe snakes an arm around my shoulders. \"It's okay, Jules. Go on, love.\"\n\nWe sip our wines silently and stare off over Lowood way where lightning flashes through heavy clouds.\n\n\"We got our visas and some nursing contracts in Australia and the plan was to earn enough money to travel. I got to see Cairns and the tablelands. It was beautiful up there. Then she ran off with the first beach bunny she found. Some tall bronzed blonde. I couldn't compete with that.\"\n\n\"No, Jules you couldn't.\" He mumbles.\n\n\"The fock you say?\" I lurch away from him in anger.\n\nHis laugh is infuriating. I'm about to get up and leave when he says, \"It would hardly be fair on her.\"\n\n\"Oh... You...\" I'm pouting and trying to squash my sudden anger back down. He tugs me back to his side and kisses me gently on the forehead.\n\n\"So, your self-esteem took a flogging. That explains a few comments I picked up on.\" His fingers brush through my hair as he holds my head against his chest. \"Let me tell you about my day, Jules.\"\n\n\"I knew I was getting railroaded from the moment I took that call on Friday. Moll's has tried setting me up a few times now. Some of them were nice women too, but none really rang any bells for me. So, I expected to turn up today and have some polite conversation with some relatively disinteresting creature that was nice but not really my cup of tea.\"\n\nHe's grown so warm I worry I'll fall asleep right here, listening to his low calm tones and drowning in the man smell of him.\n\n\"The moment I saw you. At the tennis court. I don't believe in that love at first sight faff, but by God, lust at first sight... Damn. I don't know what Carrie thought a woman should look like but I know what I like. Then you lost your shit at me. God damn that was the hottest thing I've seen in years. A beautiful brunette with breasts to- ah probably should mind my manners. love, Um, a beautiful brunette with a passionate soul. And you turned out to be a sweetheart too. You're intelligent to talk with, play tennis and well... I guess I like you a lot.\"\n\n\"I'm a fucking handful you know. At the moment all you're seeing is tits and arse and my best behaviour. Well, not even that.\" I laugh at the ridiculousness of the day. \"You'll be sick of me in no time, Davy. Now shh. Watch the pretty storm with me.\"\n\nI think it's how you know that a person is a good fit. This cosy silence deepens into a kind of intimacy that extends beyond the simple physical snuggle and the shared blanket. Like two souls meeting and 'god you're a dreadful sap Julia'.\n\nThe wind starts to pick up a little and I pull the blanket closer around me. We can hear the thunder now. The storm has changed directions and is slowly moving our way.\n\n\"So, lovely Davy who cuddles good, are you going to ask me out for dinner?\" Technically he has to now because it would be remarkably unchivalrous to reply in the negative.\n\n\"About that.\" He's thinking. His brow is wrinkled like he's doing math or god help, me trying to work out how to turn me down. \"I... Look, where do you stay when you're in town?\"\n\n\"My friend Jessica and her husband. They live in Strathpine not far from the trains and I can commute into the city. She's a lovely girl. You'd like Jessie. They're just married though and I feel like a bit of chaperone when I stay. Like if I wasn't there, they'd be boinking on the couch or something. I'm waffling. Why Davy?\"\n\n\"Well look. We've just met and I don't want you to... Just...\"\n\n\"Spit it out old boy.\" I laugh at him.\n\n\"Stay with me... I have a little unit in the city. It overlooks the gardens. It's not as flash as this place but it's clean and... Look, there's a spare room, I'm not saying... Anyway, there's a spare room and it would mean you would be walking distance from your appointments. Selfishly, I'd get to spend some more time with you and see how we get along.\"\n\nOh, it's dangerous. I already like him far more than I was prepared to. Those eyes. Just their grazing my skin burns hot. When they find mine though I want. I want... I need even. Say something Julia you nonce.\n\n\"Yes.\" I drop the blanket and straddle him in a most unladylike way; my tits pushed hard into his chest and my face against his neck. My wine glass held steady without spilling over his shoulder. \"Yes, lovely Davy.\" I tell his neck.\n\n\"It's perfect. I can walk to appointments and stroll in the gardens and do some shopping.\" I'm probably gushing, \"I won't have to sit in a carriage full of smells and strangers and oh, you must let me cook. I'm not at all related to Nigella as some smarty suggested but I can cook well. Yes.\"\n\nHis hands tilt my face to his and he simply says, \"Good.\"\n\nMy hand behind his neck urges him forward and I peck his lips with mine. I'm unwilling yet to surrender to one of those poolside kisses only because I know where it would lead and I don't want to throw myself at him like a loose floozy.\n\nThankfully, the first drops of rain on the roof interrupt us before I rape the poor man. The wine and the glasses are forgotten as we laugh and run back across the lawn with the blanket over our heads.\n\n\"So... I guess this is goodnight.\" He grins at me. \"Horse riding in the morning and sore from tennis. Should probably try and get some sleep.\"\n\nI don't know what time it is, but it's late and as much as I'd like to spend more time with him, he's right.\n\n\"I guess so, Davy. Now if you promise to behave yourself, I'd like to kiss you goodnight.\"\n\nHe grins but his eyes burn hot for me. This time his arms pull me in and he cradles the back of my head in his hand as he feasts on me. Hot lips burn against my own and slight stubble scratches while his tongue gently asks permission of my lips. Granted without thought, my own tongue meets his and I slake my thirst for this.\n\nMy arms around his waist pull him tightly to my body and I feel him harden against my tummy. If he only knew my own arousal. The need for breath parts us briefly then we fiercely reclaim our union. It's only when we part again for breath and he starts kissing down my neck that put a hand between us and gently press him back.\n\n\"Goodnight, lovely Davy.\" I huff and drown in his eyes.\n\n\"Goodnight Elizabeth Julia Ann Bernice Gilbert.\" Oh god, he remembered the whole pompous thing?\n\nWithout a further word we hold hands and climb the stairs. I nod as he finds his door and whispers, \"See you in the morning, Jules.\"\n\nI can't sleep. I showered and brushed my hair. I've tossed and turned and replayed every moment of this lovely day. But now, tired as I am, I lay and listen to the storm rage outside and I can't get him out of my mind.\n\nI wasn't prepared to like him. The whole set up was groan worthy. Awkward and weird is usually how these arrangements end up but holy shit; here I am. Though I just showered and pulled on my sleepwear, I'm thoroughly soaked and riding a whole-body arousal that the storm seems to reflect. His eyes, those kisses. The thunder and the rain lashing the windows.\n\nI'm drawn from the bed by the power and majesty of the weather. Lightning flashes light my way through the quietly sliding door to the long glassed in veranda that runs the length of the house. Placing my palms on the glass I fancy I am part of the storm; that I can feel its power course through my hands and mix with my arousal.\n\nIt's impossible to recall the last time I felt this sexually charged. Surely not since Carrie, at least. Remembering her between my legs, her small tongue flicking at me and my hands tangled in her hair I am surprised when she fades so quickly from my mind and I'm suddenly imagining him down there. His hot tongue invading me and teasing me to bliss.\n\nSex with Carrie was good. Not fantastic but lovely and intimate. She was a skilled lover but such a control freak. Everything had to be her way. Even sex. I tried to show her my one dirty desire but even that was not good enough. She kept my passion well doused. Sated, but very well controlled. I don't remember even masturbating since the breakup. I thought sometimes she took my libido with her.",
        "But the devilish Mr Stimpson. One look from those fiery eyes of his and... Even now as I squeeze my breast and feel the scrumptious heat run from my nipple to my navel, I am picturing his eyes on mine. He's done nothing but fan my fires all day. It took every ounce of propriety I possessed not to drag him into my room and ravish him this evening. Every. Damn. Ounce.\n\nA flash of lightning, closer now, illuminates me. My face astounds me, reflected in the wet windowpane. The fire in my belly is painted all over my face and I'm almost ashamed of myself. But not ashamed enough to stop my right hand rubbing slowly down my tummy to the elastic of my sleep shorts.\n\nThe following clap of thunder startles me, so focused am I on my the laval heat between my thighs. Fingers slip quickly past the elastic and smear the wet on my thighs deliciously. The storm rages loud enough that no-one hears my ragged breath or tiny moans of self-pleasure.\n\nDark leaves slap arrhythmically, driven by the wind against windows somewhere on the veranda and my fingers tease through my unkempt thatch of (God you better tidy that up before you let him near you Julia.) pubic hair and tease my swollen lips apart. A bliss builds in my toes and legs and I coax it higher. Some nervous tension that I know will tighten like a spring as I gently slide through the mess of me.\n\nMore lightning strikes. This time I can smell it on the air. The flash was blindingly close and I fancy it hit a tree on the small acreage. With the violent crack that follows I plunge two fingers home and fancy the storm is part of me. Perhaps my lover, building my passion with its own. My thumb butterflies on my bean and I feel the first tremors in my belly and knees.\n\nI'm maddeningly close. Another flash of lightning arcs across the sky and the wind yowls ever louder. My thing... I need... I shouldn't... So grotty... But leaning my head against the glass, my other hand leaves the window and does my thing.\n\nI discovered this thing when I was first learning to pleasure myself. Before anyone labelled actions dirty or wrong and sometimes now, I unequivocally require this dark act. This secret pleasure that my hand now seeks autonomously.\n\nWhile my right-hand squeezes, pulsing pleasure on my bean and vadge, my left dips into the flooded mess of me and smears my juice much further back. I feel my fingers touch my little ring and press and circle and the knot that is my bliss builds like the storm; howling in my belly for release.\n\nA crack of lightning startles that teasing finger inside me and I push and twist it against the naughty hole, slowly relaxing the tight muscles there until a second finger joins it to penetrate this nasty part of me.\n\n\"Ee-yew, Julia... I will not. That's wholly nasty.\" I can hear Carrie's judgement that day I found courage to share my secret. And maybe it is but I need it. I need the naughty thing for the big ones. Like this one that I know his eyes have built all day for me. I wonder how he'd judge this wrongness.\n\nSlippery as an eel now, I wiggle my knuckles over each other crammed as they are in my clenching bottom and feel myself start to tip. Another flash of lightning shows me the concentration on my face as I work my bean and my bottom together to what is amounting to a new height of pleasure.\n\nImagining his hands on my body, caressing my breasts and roaming lower to cover my hands. Imagining them covering my hands with their strength on roughness, urging me on and breathing his wild breath on my neck as he stands hard behind me. Imagining his cock; that hot rod of flesh I felt when kissing.\n\nMy eyes are closed tightly against the dark night but still I see the brightness through my eyelids as lightning chases across the sky and in that moment, I imagine David inside me and tip gloriously into splendour. I'm sure I vocalise some primal thing and hope it lost in the noise of the storm. My insides, front and back, grip at my fingers and I hunch in time with the contractions.\n\nPressing my forehead hard against the glass to hold me up while I ride out this tsunami of release, I open my eyes to take in the glory of the storm that crashes about with me and die in horror.\n\nA sobbed cry leaves my lips and tears stream down my face in shame as I see him. He's leaning against the wall near his open door. His eyes find mine and he simply says, \"Shh...\" Then he's walking slowly toward me. His face is darkened by the night, but I see the storm in his eyes.\n\n\"I'm so... Oh God... So sorry you...\" It's hard to blubber while blarting in shame and still feeling little remnants of my bliss shame me further. I can't bear to turn to him. My grotty shameful hands fly from my pants to hide my face and then I feel him.\n\nThe warm hands I was imagining earlier pull me to him. \"Shh... Never apologise to me for your passion, Julia. Shh.\" One of his hands seeks to pull mine from my face but I still can't face this lovely man who holds me warmly through my humiliation. Slowly his hand insists I leave the window and he pulls me to his chest and wipes at my tears.\n\n\"You are, without a single doubt, the most erotic vision I've ever witnessed. Shh, beautiful Jules.\" He breaths quietly into my hair and I feel those lips kiss my head softly. Oh god I can smell myself so strongly. My hands reek of what I've done and he must smell it too. Mortified, I try to hide in his embrace. The irony of seeking refuge in the very thing I am abashed of mocks me further.\n\nGradually my sobbed breathing settles and I relax into his enfolding forgiveness. A titter escapes me. The silliness of this whole moment contrasts so violently with the pleasure moments earlier. And therein I am aware of my lingering inflammation. The smell of him, his minty breath and warm man aroma fill my consciousness.\n\nHis body against my back is hot and his breathing hints at his own arousal. An arousal that is made obvious by a hard, hot pressure on my back. He hasn't run. He held me. He didn't judge. He called me erotic. Eventually, my hands leave my face and fold over his forearms where they cuddle around my waist. Perhaps I can even forgive myself for masturbating like a naughty teen on the veranda where anyone could see.\n\nThe light kisses he still delivers to my forehead and head, urge me to turn to find his eyes over my shoulder and I knew. He swallowed hard and his lips found mine just long enough to rekindle my early blaze. My neck hurt so I turned away, but I knew. I knew what was going to happen and I put my right hand on his right hand and urged it lower to my shorts.\n\nHis left hand found its own way up under my nightshirt and again I braced my hands against the window. Perhaps the storm was passing now but I heard and saw nothing but his reflection in the glass and his low groaned, \"My god you're beautiful, woman,\" as his hand slipped inside my shorts and his fingers brushed through that unruly mess of curly hairs.\n\nHot lingering kisses on my neck reminded me a wolf toying with its prey. His hot breath on my ear and the gentle embrocation of my flooded vadge had me teetering quickly on another bliss. He didn't mush my breasts as some do. Rather his rough hand worshiped them in gentle caress and tiny tugging at my nipples.\n\nMy heart felt ready to launch right out of my chest and I surrendered. I leaned back hard against him and gave my body over. A gentle thunder rumbled outside and I locked my eyes on his in the window.\n\n\"Take me, Davy. Please.\" Not waiting for his answer, I pulled my shorts away and felt them pool at my feet. Fumbling now behind me I found the rod of him. My god. It felt so hard and thick and hot and I could feel his own heartbeat in its throbbing shaft. I was mocking myself with my need for him; grinding back to feel it on my bottom and feeling only my hand that refused to relinquish its prize.\n\nReleasing my breast drew a small sigh of loss from my lips but quickly turned them to a naughty grin as I felt his hand fumbling between us. Finally. Finally, I held him by his root. The first hot cock I'd held in more than three years throbbed in my hand as I held and stroked it. His groan was menacing and low and no threat. It was pure promise.\n\nHis hand drew away leaving cold air on my sodden crotch where it had been expertly preparing me. I felt him smear my own juice along himself and then he took my wrists and pinned them to the window. Arching my back like a needy slut, I sought his hardness with my bottom and then suddenly it was pressing bluntly against my wet slit.\n\nI'm sure I cried out in pleasure as he thrust gently, coating himself in my need before penetrating me. A moments panic taunted me.\n\n\"Gently, Davy. It's been...\" And words were lost to me as I felt him slide into my body. I was stretched beyond stinging to a pressured pain. \"Wait... Wait...\" I gasped and my hand moved down to feel him in me. My god, there was more. I wet my lips where they clung to his hard shaft and rocked gently as my body relaxed to accept him.\n\nI should have known. I should have expected him to be as gentle as he was. But I didn't and part of me didn't want it. Part of me wanted to be roughly taken and thoroughly owned. That need drove me rocking deeper onto him until I was finally impaled as deeply as I could ever remember. And yet still he waited patiently for my innards to stop grasping at him.\n\nI heard myself moaning and worried that we would draw Aunty M, or heaven forbid, Dud's out to the veranda. Shame at rutting like dogs in public should have gripped me but instead all I felt was the power of the storm that had been brewing all day between us. Then as distant thunder grumbled outside our own storm broke.\n\nWhen he slowly withdrew, I came a little. Small shocks of pleasure that had me clapping at the knob of him as it remained poised just inside me. His first thrust was testing and torturously slow. Oh god, it had been so long since I'd been filled by a man. Carrie and I had toys but this... This feeling of something living, pulsing and sliding ridges through you in a hot wave...\n\n\"Harder, lovely Davy. Go on now.\" I urged him with what voice I could muster and to emphasise my need I pushed back hard on him to meet his thrust. The earlier pain was just a stretching fullness now as he slid in and out over and over.\n\n\"Oh shit. A condom, Jules. We should-\"\n\n\"No.\" The thought of losing this perfect fullness horrified me, \"No. Just... Oh.\"\n\nI was so near another bliss. One that threatened to eclipse my earlier effort. It was right there at the end of every thrust, yet just out of reach and I remembered my earlier promise this day.\n\n\"Elizabeth Julia Ann Bernice Gilbert, you will not apologise for any aspect of who you are. You are wonderful and complete just as you stand here.\"\n\nCan I do this thing? My thing. And I know I will. This man will know all of me. And I will not allow myself to feel shame. My hand is already reaching behind me, between us. I can feel his tummy slapping my fingers as I slide a finger down to where he saws in and out and I scoop enough moisture to, \"Oh my god.\" I croak as my finger slips inside my bottom.\n\nIt's a little unbalanced bent over as I am, braced with one hand on the window and the other fingering my bottom while he rogers me splendidly. I'm almost grateful when I feel his rough thumb press next to my finger. Oh god, will he? Please let him.\n\nPulling my finger out I feel the ridges of his knuckle slip through my naughty ring and then I'm stretched both by his lovely cock and his rough, thick thumb. The feeling of fullness combined with the feeling of acceptance for this naughty thing, tip me headlong into an orgasm that surpasses anything I've felt in such a long time.\n\nHe stills himself inside me and holds me up with an arm around my waist as my body violently wrings pleasure from me.\n\n\"God Jules, beautiful love.\" He says and I can feel my bottom and my vadge applauding on his finger and his cock. Just as I think I'm starting to finish cumming, I feel his thumb withdrawn and I feel my bottom hole trying to close. It's all so heavenly grotty.\n\nI feel his fingers gathering moisture around where we join and then gasp as two fingers spear into my arse. They wriggle against each other and stretch me terribly. I'm tipped instantly into another small bliss.\n\n\"Oh God, Davy. I... thankyou. I need it. I'm sorry. It's so grotty but-\"\n\n\"Shh Jules. Never apologise for-\"\n\n\"My passion. Oh God...\" He's pulling out of me. No. I want... And then I'm empty. I can feel my vadge gaping and the loss is profoundly sad.\n\nBut then a new and much wilder thing occurs to me. I can feel the head of him pressing bluntly between my vadge and my bottom. Will he? Is he going to- And suddenly his fingers are gone from me and the head of him is stretching my bottom tightly.\n\n\"Oh Davy.\" I growl. \"So rude. So lovely rude.\" And greedily, I'm already rocking on him. Relaxing and pressing him further in. The stinging stretch as his shaft flares brings tears to my eyes but I love this naughty bottom thing. I ache deeply as I finally seat myself against him with his lovely cock crammed into my dirty hole.\n\nMy mouth hangs open in wonder at the many sensations flooding my body, but my favourite is his gentle hands rubbing my shoulders and arms. I can see his eyes every now and then with the distant lightning flashes and in one of those moments I catch the same wonder in his. When I've finally stretched enough to move, I slip him nearly out and drive him steadily back in.\n\nOh dear. All those tiny ridges that felt wonderful in my vadge now tickle and tease at the tight ring of muscle that holds him captive. This is so much better than fingers back there. I'm so full, I just wish I had... Oh god. That. I need that.\n\nHis hand ran down my arm and cupped around in front of me to draw lazy wet circles in my sodden flaps. Now and then he slips fingers into me and draws around my bean but I'm distracted from it by his gentle thrusting in my bottom. I don't think I'd actually stopped cumming properly when he entered me and every tiny motion tips me back into tiny blisses that follow one another.\n\nBut now as he thrusts into my bottom, I feel something else building. The little blisses seem to gather deeper in my gut where he stretches me impossibly and as he builds pace something larger looms.\n\nGod, I've never felt this taken. First his masterful fucking then now this rapacious buggery. He's not at all gentle now. Banging into me hard and deep, his balls are slapping at my vadge where his hand busies itself with my bean. God help me I want to scream my pleasure.\n\n\"So close Jules.\" He grunts. \"Gonna...\"\n\nI urge him faster. Slapping back against him. Meeting his thrusts with my own. My threatened bliss is boiling like a kettle about to whistle and then he bucks and I feel his cock swell against my bottom hole and I believe I feel him splash hotly inside me. Again, he bucks and his lovely cock pumps me with his spurt.\n\nWith his third bucking spurt, my eyes close hard and I start shaking all over. My knees give out and he holds me to him. His cock still spurting deep inside me and my orgasm rips through my body harder than I've ever felt before.\n\nOver and over I shake and the pleasure wrings through my body. I'm aware of his hand over my mouth but the scream is far away like from someone else. My legs shake like rag doll limbs with each squeezing cramp in my bottom and womb and if he was not holding me, I'd be twitching on the floor.\n\nWe stagger backwards away from the window. Him deep inside me still and me shaking and wondering if I'll ever stop orgasming. He directs us to a chair and I cum again as we thump down heavily into it.\n\n\"God Jules. That was... I never.\"\n\nI agree wholeheartedly but cannot speak. The lovely man puts his arms warmly around my middle and holds me through this recovering moment. His cock softens inside me but my bottom holds it gripped like a prize.\n\n\"Shh...\" He says warmly near my ear. \"Shh... Are you alright?\"\n\n\"Emotional, Davy. I'm good. Just hold me a little while.\"\n\nHe does. We're still sitting there much later when I become uncomfortable and realise I need the loo.\n\n\"So, that happened. Let's not be awkward now, Davy. I need the loo and a shower. You do too. Before I go, I want one of those kisses. We can talk in the morning.\"\n\nIt's a much gentler kiss this time. Passionate still but tender and intimate. I made the loo. I didn't make the shower. I fell asleep while sitting on the bed thinking about him and smiling like a loon. Grotty girl indeed.\n\n \n"
    ],
    "authorname": "Rollinbones",
    "tags": [
        "anal",
        "blind date",
        "romance"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/butt-lovely-pt-02-stormy-starts"
}