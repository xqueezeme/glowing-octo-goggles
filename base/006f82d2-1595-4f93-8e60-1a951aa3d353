{
    "title": "The Royal Lycan Ch. 02",
    "pages": [
        "Thanks for waiting, reading and voting. Sorry to anyone who suffered over the wait. I do what I can when I can, though it's true I am prompted by you guys when I just forget. \n\n***\n\nFeeling constricted, Jett slowly opened his eyes and tried to roll onto his back. He couldn't; he was on his side up against a wall. In a fucking closet.\n\nBill had stashed him for safe keeping. It was basic etiquette, he supposed, not to leave someone in the open whilst vulnerably unconscious. \n\nJett's fist ploughed through the wooden shutter in his face and he crawled out. He was still in the empty building, third floor up. Blinking away the last remnants of wooziness, Jett gave himself a little shake, stretched his thick arms over his head and cracked his neck and shoulders.\n\nThen he began to pace, considering the insanity of his predicament. It wouldn't do to blindly chase after Bill. He had to approach the situation logically, especially when his agenda was arguably illogical. He had to consider everything he knew before proceeding.\n\nFirst piece of disturbing news - Tessa was Lycan, likely half-blood. And she had no idea, nor could she immediately recognise that they needed to be together.\n\nJett raked a hand though his black hair with an exasperated chuckle. \n\nSecondly, Tessa was en route to a dangerous man with a highly ambitious motive. Hector's plans never bothered Jett until now. \n\nJett paused pacing and rubbed his jaw, feeling a slight stubble graze his palm. \n\nBill only stole Tessa to save his ass. Which meant Bill wouldn't dare disclose the circumstances to Hector; that Jett and Tessa were highly compatible Lycans. That Jett failed to keep his hands off her.\n\n\"Whoah,\" Jett muttered, drawing a deep breath to cool the heat that flooded his body when he remembered touching Tessa, tasting her. The perfection of her soft, curved butt and the way he'd licked her. \n\nJett shook his head with a growl and resumed pacing. Bill wouldn't rat him out, and Bill was right in his assessment that Hector wouldn't dream of hiring Jett for a critical job that would compromise him. It was all too important. \n\nJett stopped and stood tall, hands on hips. Hector didn't know, and Bill won't tell him. Which meant no one would be surprised if he turned up. He was a trusted associate and always welcome on Hector's property, unlike Bill. Hector's gang never took to Bill, and Jett could easily narrow it down to Luca's history with Catherine. \n\nHaving decided his next course of action, Jett ran to the basement, immensely relieved when he saw Bill hadn't nicked his weapons or slashed his tyres. \n\nThis was a race that didn't allow the luxury of time. He was chasing Tessa. And Tessa's underground group of protectors were chasing him.\n\n***\n\nTessa waited on the hotel couch with her arms wrapped about her knees. The last 24 hours were rife with tension and uncertainties. A complete stranger had returned in place of Jett and advised that their journey was to resume as normal. Again, she didn't have a choice. Unlike Jett, Bill was impossible to read.\n\nA brusque, giant of a man, Bill resembled an ancient Viking warrior in modern-day clothes. He had a tidy beard, eyes of a pretty blue and shoulder-length blonde hair that looked well-conditioned but needed a comb. That's where his gentle features ended; everything else about him screamed danger. He possessed a cold demeanour, abundant tattoos extending across his chest and biceps, a hulking physique. \n\nDespite a frightening appearance, Bill was a gentleman, if a bit abrupt. There were no snide remarks about her supposed history, no physical manhandling. None of the baffling sexual chemistry that she felt with Jett. Regardless of the stark differences between Bill and Jett's mannerisms, it was very clear she was in Bill's custody.\n\nWhen Bill removed his jacket and Tessa's attention fell to his forearms, a sight so startling, she was completely unaware of rudely gaping at him. Bill's arms were thick and strong. But from his elbows down were a series of angry red scars, as if he'd tried to cut his wrists several times or fallen victim to some kind of industrial accident. \n\nBill wasn't offended when he caught her staring. On the contrary, he'd actually smiled, his first since they met, and made an offhand comment about relationship problems. He spoke with wry humour, as if she should get the joke. She didn't. \n\nBill had left the room to take a phone call, and when he returned, he looked disturbed. Tessa sensed it had a lot to do with her. Bill often stared, but not to engage. He was lost in his own thoughts and appraising her at the same time. \n\nTessa self-consciously looked away from Bill's fixed gaze, hoping he wasn't a rapist. Eventually Bill rubbed his palms together as though reaching a tough decision. Soon he stood over her, his giant shadow engulfing her small frame, waiting until she dared meet his eyes. \n\n\"Open your mouth,\" he ordered.\n\n\"Why?\" Tessa asked nervously.\n\n\"I want to see your teeth,\" Bill answered, still staring. \n\n\"I don't want to,\" Tessa faltered, not understanding his motivation. Was this his strange way of asking for a blow job? He didn't look interested in her.\n\n\"Ok.\" He unexpectedly moved on. \"You're a virgin?\"\n\n\"Y-es.\"\n\n\"If I told you to take your clothes off right now, what would you do?\"\n\nTessa gulped. His manner was confusingly more clinical than amorous.\n\n\"Well?\" he curtly prompted.\n\n\"I...I don't want to.\"\n\nBill watched her face carefully; his own expression gave nothing away. \"Take your clothes off, Theresa.\" \n\nDistressed, Tessa shook her head, fearfully shrinking from him. \n\nWhen he continued to scrutinise her, Tessa realised he didn't want answers. He was asking intimate, invasive questions and gauging her reaction.\n\n\"Why are you doing this?\" she asked tremulously. \"What are you looking for?\"\n\n\"Nothing.\" Resigned, Bill retreated to stand against the wall facing Tessa. He scrolled through his phone and made a call. \"She's submissive. I don't know how ...Yeah, probably. That's Jett for you.\" \n\nHe turned to lean against the wall, watching the heel of his boot scuff the ground. \"I don't know about this, love. Jett wasn't himself. Hector couldn't have known. No. I'm not doing that,\" he said firmly, his eyes sliding back to Tessa.\n\nThe voice on the other line, clearly a woman, increased volume.\n\nBill grunted. \"I'm more scared it'll work.\" \n\nThe feminine tone squirrelled away in Bill's ear until he sighed harshly. \"The job is going ahead. It has to, for Jett's sake. Don't forget this was your idea, Cat.\" \n\nBiting his lip, Bill ended the call and approached Tessa, who continued to watch him fearfully. \n\nBill pulled a gun from the back of his pants and crouched in front of her, gently balancing the weapon on his thigh in a loose grip. He took a deep breath.\n\nSMACK!\n\nTessa was suddenly on her side, shocked and winded by the unexpected slap. Clasping her hand to her burning cheek, she scrambled away from Bill, who slightly tilted his head, studying her. When Tessa's eyes filled with tears and her lip trembled, Bill tucked the gun away.\n\n\"Sorry, Theresa,\" he gruffly apologised, his eyes worried. \"I won't hurt you again.\" He paused. \"Did Jett tell you anything?\" \n\n\"My name isn't Theresa,\" Tessa said shakily, still rattled from the blow. \"What Jett said so far...I think he's wrong.\" \n\n\"Yeah.\" Bill looked away. \"There's a lot wrong with this world.\" \n\nTessa could tell he wasn't happy about the situation; that a part of him sympathised with her. \"Will you take me home?\" she tried hopefully.\n\nBill stared at his boots for a long time before dragging his gaze to meet Tessa's. \n\n\"To your new home, yes.\"\n\n***\n\nThree men occupied a large, lavishly furnished room. The first, Pavel, stood by the window, average height, stocky build, black hair that curled over the tops of his ears and tawny brown eyes. Aimlessly staring at the outside greenery, extending to the border of a golf course, he wore a navy suit that gave off an air of stoic respectability. Where his suit jacket gaped open, two guns were visibly holstered to his chest. \n\nThe second man in a black suit, Luca, sat in an armchair by the fireplace, before which Hector calmly paced.\n\nThere was a gun by his hip, but unlike Pavel and Luca's weaponry it was more decorative, and he was clearly unlikely to require it. His clothes were casual but expensive; beige slacks, sky-blue t-shirt stretched tightly across well-conditioned pecs. A solid gold chain lay over the shirt. His light blonde hair was cut very short, a military look. Despite a handsome face, his blue eyes were cold and unsettlingly piercing. \n\n\"I wanted Doc here to meet her,\" Hector irritably muttered. \"Have you heard from him?\"\n\nLuca lazily stretched his long limbs out with a sigh. \"He's probably still on a plane, Hector.\"\n\nHector shook his head. \"No. He's taking too long.\"\n\n\"You want me to send more people to look for him?\" Luca tiredly offered. \"We have guys at the airport. There's nothing else we can do but wait.\"\n\nPavel checked his phone when it buzzed. \"She's on the way up,\" he confirmed.\n\n\"Do you want us to leave?\" Luca asked.\n\nHector paused his slow pacing and stared contemplatively at the flames flickering up the fireplace. \"I thought you'd be anxious to meet her, Luca.\"\n\nLuca smirked. \"It would be wise not to startle her.\" \n\n\"Stay. She's going to be seeing a lot of you,\" Hector shrugged and settled into the armchair opposite Luca. Pavel left the window to stand behind Hector's chair.\n\nAll eyes moved to the door when it opened. Bill and Tessa were ushered in, the latter looking utterly miserable. \n\nThough Bill wasn't a chirpy character, there was a grimness to his face that conveyed he wasn't happy about the situation. He gripped Tessa's upper arm as though she were a flight risk, but quickly released her when Hector's attention fell to his hand with raised eyebrows. \n\n\"Theresa, this is Hector,\" Bill curtly introduced them. \"He will settle you into a new life.\"\n\nTessa was certain everyone in the room could hear her heart thumping. She gulped and glanced around, noting the men intently watching her, not giving anything away. She looked up at Bill by her side, also watching her, looking tempted to say something. His uncertainty frightened her. \n\nPanicking, Tessa broke gaze and her eyes locked with the man in the black suit, who immediately grinned and vacated his seat. At first glance Tessa mistook Luca for Hector. Luca was built, chiselled, with serious features. But his eyes silently laughed at her. Whoever he was, he wasn't nervous or guarded, the way an employee of a dangerous man should be. \n\n\"Please,\" Hector gestured the empty space opposite. Luca's fingers curled invitingly across the top of the chair. Tessa felt like the invitation was rife with innuendo. \n\nTessa swallowed again and slowly left Bill's side to sit opposite Hector. She felt her skin crawling from so much male attention; especially the one standing directly behind her. She didn't like Luca; she didn't like the way he'd smiled at her. His face was wicked, as though he knew something she didn't. Her eyes flew up from her palms to meet Hector's, silently scrutinising her with the smallest smile of satisfaction. \n\nThis was the man who had organised an abrupt kidnapping, who'd hired a gunman to steal her in the night. The man whom Jett crudely said was going to force her into a marriage and pregnancy. \n\n\"The man behind you is Luca,\" Hector clarified, leaning forward slightly. \"The one behind me is Pavel,\" he playfully tilted his head. \"They're part of my security unit, so you're going to be spending a lot of time with them. Don't be afraid; they're like family.\"\n\nYou don't have any family.\n\nTessa wasn't receptive to Hector's reassurances. She didn't like his confident honey-tone. His deep voice was like velvet; deceptively smooth, dangerous. She already missed Jett's rough, brusquely masculine way. There was no pretence about Jett. \n\n\"You're very elegant, Tessa,\" Hector went on, smiling when she started at the use of her everyday name. \"I look forward to getting to know you better.\" \n\nHe's going to rape you. \n\nShe looked back to Bill, standing tall and silent, her eyes pleading with him to intervene. \n\nTessa's stomach clenched when Bill didn't move. She returned Hector's perusal, discovering she was wrong about her virginity; it had absolutely no effect on her sex drive. She didn't feel any attraction to Hector, nothing like the unsmotherable urge she felt toward Jett.\n\nHector was classically good-looking, very clean-cut, tidily dressed. But there was something lethal in his eyes that made her think of a cage fighter, who shouldn't be let out of the cage. His hands, casually linked as his forearms rested on his knees, looked brutally strong. The man emitted an essence of violence that no one else seemed to notice. It certainly bothered her. \n\n\"There's no need to be shy with me, Tessa.\" Amused by her silence, Hector lazily clicked his fingers at Pavel. \"Money.\"\n\nBill numbly accepted the thick metal suitcase, his eyes on Tessa, who was again staring down at her palms. \n\n\"Bill, you never explained why Jett couldn't make the delivery,\" Hector interrupted Bill's daze. \"Why didn't he contact me, himself?\" \n\nBill gruffly cleared his throat to conceal his nervousness. \"A precaution to protect your interests. He suspected a tail.\" \n\nHector looked pleased. \"Ah. Appreciated.\" His gaze was again fixed on Tessa's face, observing her discomfort. \"I won't be offended if you want to count it, Bill. It's probably the most money I've paid anyone for a job.\"\n\nBill glanced at the case in his hands, suddenly remembering its existence, knowing only a suicidal fool would openly question Hector's honour. Of course, Hector would be insulted if he chose to count it. If Luca didn't fill him with bullets, someone waiting outside the room would finish the job. Hector liked to play games; always sending polite little death invitations on a whim. \n\n\"No need,\" Bill said tersely, slightly fidgeting with the case in his hands, his eyes darting between Hector and Tessa. \n\n\"Then give my best to Jett, won't you?\" Hector smiled at the embarrassed blush that filled Tessa's cheekbones at Jett's mention. \n\nBill didn't answer.\n\n\"Is there a problem, Bill?\" Luca queried Bill's hesitancy, the warmth completely gone from his face, now filled with menacing hostility. He only ever looked at Bill with a dense hatred. Bill knew exactly why, everyone did, and it gave him a lot of satisfaction. \n\n\"Nope.\" Bill's grip on the case tightened, he stole a last look at Tessa's pale, stricken face and stalked from the room. \n\n\"Well, he's not winning any personality awards,\" Hector smirked as the door slammed behind Bill. He reached for Tessa's hand, catching it before she could retreat. \"She's so adorably timid,\" he murmured, his eyes flickered up to meet Luca's before returning to Tessa's. \"You're alright, aren't you, Tessa?\"\n\n\"N-Not really,\" she uttered, squirming in the seat and feeling Luca's gaze burning the top of her head. She missed a female presence. Sara, her sassy friend at the diner, would have sprung a few good comebacks by now. \n\nBut all Tessa understood was that she had no choices, and she certainly wasn't comfortable expressing her resistance surrounded by strange gunmen who stared at her as though she'd stepped out of a crashed meteorite. \n\nPavel's soft laugh broke the quiet.\n\n\"Shush,\" Hector chastised over his shoulder, squeezing Tessa's hand, his thumb drawing circles on her skin. \"You have nothing to fear. Trust me.\"\n\nJett's words crashed through her mind, and she felt increasingly faint.\n\n'You have nothing to fear from him.' \n\n'He's going to marry and impregnate you.'\n\n'You'll do everything he says, like the little bitch you are.' \n\nTessa felt suspended. Male voices circled her for a time. Hector's came through clearly.\n\n\"This is promising,\" he remarked in a pleased tone that struck Tessa as particularly callous in the moment. \n\nFeeling smothered in the firm embrace of a man, a spicy cologne filled her nostrils. Tessa blinked at up Luca, who'd caught her before she could hit the floor. His dark fringe came close to crossing his vision; he smiled that knowing smile, flashing a row of white teeth. He reminded her of an image she once saw on the cover of a romance novel, a brooding Italian billionaire. Amused by her scrutiny, Luca cocked an eyebrow and addressed Hector.\n\n\"I suggest rest; give her time to process things,\" he advised. \"She's probably been through the ringer, Hector. Then there are the tests.\"\n\n\"How right you are.\" Hector was on his feet, his hands in his pockets, peering down at them. \"I'll leave you in Luca's capable hands, Tessa. It's a pleasure to finally meet you. One of many to come, I'm sure.\" His eyes moved to Luca. \"I'll have dinner with Tessa in my room, say seven o'clock.\" Then he strode off without a backward glance.\n\nTessa quietly whimpered when Luca's arm curled about her waist to gently lift her to her feet.\n\n\"You're not at all what I expected,\" he said, pinching her chin to smile into her face, his tone mildly disappointed. \"Come on, green eyes.\"\n\n\"Wait!\" Tessa gasped; her feet abruptly swept from the floor. \"Don't! I can walk!\"\n\n\"You fainted,\" Luca pointed out. \"You're my responsibility.\"\n\nFeeling uncomfortably faint again, Tessa turned her face to the warmth of his neck. The intimate contact combined with a complete lack of familiarity made her skin crawl. \"I want to go home.\"\n\nIt was as if Luca never heard her. \n\n***\n\nTessa felt she was lucky to have been allowed to pick her clothes for the evening, given Luca shadowed her like a cop supervising a dangerous felon. \n\nAfter the blood tests, gunmen escorted her to an apartment where Luca was waiting. The suit was gone, and he seemed deceivingly casual in black jeans and a green sweater. Only the gun at his hip indicated he wasn't as harmless as he appeared. His eyes were still wicked, his expression often switched between sombre and teasing. \n\nTessa quickly noticed her quarters were grander than anywhere she'd stayed before, overtly fancy. She didn't like it. \n\nLuca patiently waited in the loungeroom while she showered and dressed in a basic blue jumper and black jeans, forcing her mind to move beyond the fact the large array of clothes and shoes were all her size. When she was ready, Luca silently walked her into the elevator, down the hall to Hector's suite. \n\nTessa was shaking as he reached over her shoulder to knock on the redwood door. It swung open and Hector beamed at them, in black tracksuit pants and an open white robe.\n\nTessa's eyes widened at his solid bare chest. There were tattoos, very different to Bill's. Too many skulls. Yuck.\n\n\"Good luck,\" Luca murmured by her ear, and lightly pushed her into the room.\n\nTessa lightly stumbled and turned with alarm as the door closed her in with Hector.\n\n\"Here,\" he placed a glass of water into her hand. \"You look like you need this.\"\n\n\"No, I...\"\n\n\"Relax.\" His hand was lightly on the small of her back and he inclined his head to the dining table stocked with dishes, gently steering her toward it.\n\nOnce she was safety seated, Hector settled into the chair opposite. \"Firstly, Tessa, I want to thank you for being so cooperative.\"\n\n'You're going to do everything he tells you to do, like the little bitch you are.' \n\nTessa's face tightened; her stomach quaked with nausea. Hector's gentlemanly behaviour was terrifying. The fear was pure anticipation; waiting for the veil to lift and show her the monster inside. She knew it was there. \n\nAs much as she wanted to run away screaming, she hadn't been alone since Bill handed her over, and she had no idea how to get through the seemingly endless corridors and rooms to the outside. ",
        "\"Why all the guns?\" Tessa blurted.\n\nHector looked amused. \"I'm sorry?\"\n\n\"Everyone seems to have one.\" Her eyes darted to Hector's silver handgun carelessly left on a desk by the wall.\n\n\"Would you like one?\" he smiled.\n\n\"C-C-Can I?\" she stammered with more surprise than enthusiasm. \n\n\"Of course,\" he shrugged. \"But these things should be personalised. Pavel will help you design one to your tastes.\"\n\nTessa bit her lip, understanding she wasn't getting a weapon in the near future, and also aware that Hector deliberately hadn't answered her question.\n\n\"So, I have to ask,\" Hector continued conversationally, \"How was your time with Jett?\"\n\n\"J-Jett?\" Tessa stuttered. \n\nJett. The big, scary guy who'd pounced on her when she practically stepped from the shower, bullied her into his care and imprisoned her in a safehouse. Who'd stared at her with intense grey eyes that sparkled yellow; eyes that she suddenly ached to see again. The man who'd burst into her prison, tore her dress and buried his face between her legs like it was his heaven. And it'd felt like her heaven.\n\n\"Tessa?\"\n\n\"F-Fine. He was fine,\" she said hurriedly, her cheeks tellingly flushed. \"May I have a glass of wine?\"\n\nHector hesitated. \"I don't think that's optimal for your health, Tessa. You don't mind if I call you 'Tessa' instead of 'Theresa'?\"\n\n\"I'm not Theresa,\" Tessa said stubbornly. \n\n\"I guessed you might feel that way,\" he shrugged dismissively. \"I thought you might feel closer to me if I use a name you're accustomed to, for now.\"\n\n\"I feel like...\" Tessa swallowed nervously. \"I feel like I don't have any choices.\"\n\n\"It depends how you want to see it,\" Hector said conversationally, aptly spearing vegetables with his fork. The fork wavered by his mouth. \"The way you frame the situation is entirely your choice,\" he finished, taking the bite. \n\n\"Was Jett telling the truth about what you want with me?\" Tessa asked stiltedly. \n\n\"Probably,\" Hector answered without concern, tossing back the rest of his water. Then he changed the subject.\n\nTessa forced herself to eat, to be polite and because she sensed she was going to need physical stamina for whatever upheaval was in store. The property seemed to be swarming with armed men, which wasn't promising for an escape. If she could get her hands on a phone...\n\n\"So, Jett wasn't rough with you?\" Hector enquired, startling Tessa from her anxious thoughts. By the look on his face, her answer was important, and she wondered what was behind the question. \n\n\"He was fine,\" she answered uncomfortably. \"He said your interests in me are inappropriate,\" she blurted before she could stop herself. The fear of it had weighed heavily since she was informed, and it was better to know than wonder.\n\nHector stiffened, his blue eyes turned cold and Tessa had the distinct feeling of accidentally getting another person in trouble. \n\n\"Inappropriate?\" Hector queried. \"Jett implied I was punching above my weight?\"\n\n\"No, I mean he implied...that your intentions toward me are... er...sort of...intimate,\" Tessa awkwardly explained. It didn't sound quite right to say 'romantic'. \n\n\"He told you I am going to marry you and try for an heir?\" Hector frankly clarified.\n\nWhen Tessa didn't answer, Hector smiled to himself as he placed his utensils down. Tessa shivered at his expression; it wasn't a nice smile. Worst of all, he wasn't exactly rushing to reassure her that he wasn't planning those things. In fact, he'd stated it with certainty, something already set in stone.\n\n\"Hector, please don't rape me,\" she said quietly. \n\n\"You don't find me attractive?\" he lightly queried, letting the robe slip over his shoulders. \"Maybe I'm not your type, but I'm not a gargoyle. And I've been celibate since I found out you were alive. You could say I'm heavily invested in our future.\"\n\nTessa looked away from his newly exposed torso, rippling muscle. He seemed more threatening than tempting, especially the intense way he was looking at her. She wrung her hands under the table. \"Please, Hector. You're scaring me.\"\n\nAfter a long, contemplative stare, Hector slowly drew his robe back over his shoulders. \"I'm sorry, Tessa. I didn't mean to make you uncomfortable. Guess I overestimated my flirtation skills,\" he concluded with a wry chuckle.\n\nImmensely relieved, Tessa chugged the rest of her water, almost choking on it. \n\n\"I'm surprised you haven't asked about your parents,\" Hector remarked.\n\nTessa stiffened and set her glass down. \"I don't talk about them.\" \n\n\"I can tell you everything you want to know,\" Hector shrugged. \"I thought you'd be curious.\"\n\nTessa shook her head. \"I don't want to go there.\" \n\nThe more time that passed, the more convinced Tessa was that she'd been thrust into a world of lunatics who'd mistaken her for someone else. She didn't need to break open the sore topic of parentage.\n\nHector carefully watched the shift in her expressions, the hint of a smile forming when he saw her face set with a stony determination. \n\nWith slow deliberation, he drew a slip of paper from his robe and placed it on the table, watching the colour drain from Tessa's face. \n\n\"Your mother was exceptionally stunning,\" he mused. \"Maybe she was prettier than you, but you're definitely more elegant, and I prefer that.\"\n\nTessa didn't hear Hector's insulting assessment as her fingers slowly curled over the edge of the table. \n\nShe gazed at a photograph of the most beautiful woman she'd ever seen. Honey-gold hair and impossibly large, turquoise eyes, full lips spread in a beaming, charismatic grin. \n\nTessa saw her four-year old self, timidly holding her mother's hand. She was quite a plain child, with dull, ash-brown hair and ordinary features. Her good looks blossomed when she hit puberty, a pleasant surprise.\n\nStrangely, despite the beauty variance, Tessa noted she did look uncannily like her mother. \n\nHector's voice cut through her thoughts, voicing her observation. \"Weird, isn't it? You look exactly like her, but very different at the same time.\"\n\n\"But...where did you get this?\" she asked hoarsely, her mind spinning to connect how her life made any sense. It couldn't be real.\n\nHector shrugged. \"It's not the only thing I found in my search for you.\" \n\nTessa felt very close to fainting again, nodding her thanks when Hector poured another glass of water. The picture would have been taken the same year her family was broken. \n\nStaring at the image, she began to remember small, indistinct experiences; the warmth of her mother's smile, soft kisses, a vanilla perfume. The sweet scent was safety; a place to burrow and hide from shouting crowds and flashing lights.\n\n\"I knew the second we met, you didn't believe any of this,\" Hector sighed. \"I know your history is tragic, and I thought this might be the best way to-\" \n\n\"I'm going to be sick,\" Tessa uttered, pushing back from the table.\n\n\"Tessa-\"\n\nBefore Hector could get a hold on her, Tessa staggered from her seat and rushed to Hector's ensuite, falling to her knees to retch into the toilet. She could sense Hector standing in the doorway behind her.\n\n\"Can I get you anything?\" he asked.\n\nStill fighting to catch her breath, Tessa rested her forehead on the ceramic bowl, letting its coolness soothe the heat in her face. \n\n\"Tessa?\" Hector prompted, coming closer. \"I can get anything you need.\"\n\nTessa laughed weakly into the bowl, mulling over the things she couldn't have. Privacy, freedom, Jett...\n\nCoughing, Tessa pondered why she was still thinking about him. She wanted that guy in a way that was completely baffling. He brought her into this mess. He didn't care about her. \n\n\"I'd like to go back to my room,\" she muttered.\n\n\"No problem,\" Hector replied, and pulled out his phone.\n\nThere was something extra humiliating about being carried back to her room by Luca. Soon Tessa lay limply on a soft surface, and Luca went about turning on lights and lowering the setting to a gentle glow. \n\n\"Has it passed?\" he asked.\n\nTessa's eyes flew open to perceive Luca expectantly standing over her, hands on hips. He was in a suit, with a large gun tucked into the waist-section and looked like he didn't belong in her room.\n\n\"What?\"\n\nHe sympathetically tilted his head. \"The nausea. Do you think you'll be sick again?\"\n\n\"No, I'm alright now,\" Tessa mumbled, lightly shaking her head. \"It was just a shock.\"\n\n\"I understand.\" He paused, and when she didn't speak, he continued. \"I'll be back with the standard sick-kit; water, vitamins, soup and crackers. If you crave something hot, we can have it made up, just let me know.\" \n\n\"I-It's ok, you don't have to come back,\" Tessa answered in a small hopeful voice.\n\nLuca laughed. \"So, Hector left me to explain the sleeping arrangement.\" He pointed across the room to a large daybed lining the wall. \"That's where I sleep.\"\n\n\"What? Why?\"\n\nHe just grinned and walked out. Before Tessa could get her hopes up, a stranger entered and stood against the door, watching her. He was in a dark blue uniform, like a paramedic, except he was wearing a shotgun.\n\n\"Who are you?\" Tessa asked feebly. \n\nThe armed man appeared prepared for anything but questions. He opened his mouth and then closed it. It was an awkward moment, but Tessa was too upset to care. \n\n\"Well, don't call me 'Theresa',\" she snapped, getting under the covers and turning her back on the guard. \n\n***\n\nWaking up the next day was strange. Tessa suffered a completely blank moment, surrounded by unfamiliar finery. Busy frowning at the big window streaming morning sun across the bed, she jumped with fright when a man cleared his throat from the other side of the room.\n\nIt was Luca. He had changed into more casual clothes; black jeans, boots. Still high quality, just minus the sombre suit and intimidating gun. Tessa suspected he had a gun, somewhere.\n\n\"I have to go out,\" he said indifferently, straightening his shirt. The material was crisp and blue, sort of striking against his tanned skin. He strode to a wall mirror and checked his reflection.\n\nTessa blinked with confusion. There was an air of preoccupied excitement about him; similar to before a job interview or first date. \"Where are you going?\" she asked.\n\n\"Never you mind,\" Luca dismissed her query, giving his handsome mirror image a rueful smile and lightly ruffling his dark hair. \"I'll be back before lunch. Hector knows.\"\n\n\"Oh.\"\n\nSomeone knocked, and Luca checked his watch. \"About time.\" He opened the door and had a quiet word to a man on the other side, before turning back to Tessa.\n\n\"He has breakfast for you. If you want anything or go anywhere, let Steve know and he'll arrange it, if it's possible,\" he added, opening the door wider.\n\nThe visitor, a large, ruddy young man who blushed the moment Luca acknowledged him, waved awkwardly to Tessa before stepping into the room with a tray balanced in one hand. Tessa didn't smile, noticing the side of his jacket was caught up with butt-end of a large revolver poking out of his waistband. \n\n***\n\nA tall redhead casually strutted down a quiet street, using her teeth to tear open a small chip packet. In brown ankle boots and small denim shorts, she was very leggy. With hair cut almost boyishly short, it was very thick and tousled attractively around her head. \n\nShe had naturally plump lips and enormous blue eyes fringed with black lashes, accentuated by eyeliner that created a raw, edgy effect. Despite having a charming 'doll-face', she clearly wasn't a woman to be messed with. \n\nReaching her ride, she swallowed the last of the crisps with a gulp of contempt and irritably cocked her head at the man straddling Bill's motorcycle. \n\n\"Hey, Cat.\" Luca leaned forward onto the handlebars, stretching his broad shoulders out. His dark eyes ran interestedly up the length of her smooth legs, over the sexy black tank-top to rest on her angry face. \"How are you?\"\n\n\"How the fuck did you know I was here?\" Cat snapped. \n\nSmiling flirtatiously, Luca mysteriously shrugged. \n\n\"Get off my bike,\" Cat said stonily, throwing the food packet into a nearby bin. \"What do you want?\" she demanded, when Luca didn't move. \n\n\"I saw your friend yesterday,\" he said conversationally. \n\n\"You mean my husband?\" Cat tartly corrected him. \n\nLuca ignored her point. \"He looks like a regular boring human fella to me,\" he drawled, his dark eyes went reflectively to the sky. \"Funny when we were kids, you said we couldn't be together because I wasn't wolf enough. Then you went and married a human anyway. I've always wondered why.\"\n\n\"Bill's dick is really big?\" Cat said helpfully. \n\n\"So are the scars on his wrists.\" Luca showed his teeth in a malicious grin. \"Shame he didn't die.\"\n\nCat rolled her eyes and impatiently sucked her lower lip between her teeth, removing tasty salt remnants. \n\n\"You know, when Hector gets the throne, a lot is going to change,\" Luca continued, trailing a finger along the handlebars. \"It's not too late to choose me.\"\n\nUnmoved, Cat blankly stared at him. \n\nLuca raised his eyebrows. \"You're not curious at all about the girl Bill transferred? I could tell you some of it over a drink.\" \n\nCat laughed disdainfully. \"Get your ass off my bike, Luca.\" \n\nAfter a heavy pause, Luca took his time removing himself and stood close by the front of the motorcycle. Cat scowled when she hopped on. The warmth of the seat made her want to scream. That, and she was facing Luca in a submissive position. She glared at his grip on the handlebar. \"I notice you're still a dickhead.\" \n\n\"And you've been a bitch since you turned sixteen,\" he returned with slight aggression, very aroused looking down at her. She was eye-level with his chest, glaring up with those big eyes, bright with a sexy rage that stirred his cock. The way her toned legs straddled the sides of the bike made him rock hard. He'd give anything to possess her. \n\n\"And ten years later, you're still harassing me,\" she said sweetly, the blue of her eyes stone cold as they landed on Luca's fingers, still gripping one handlebar. \"For a man with so much to offer, you could really use help with the ladies.\"\n\n\"You're not invincible, you know,\" Luca murmured, perfectly aware she wanted to shove his hand off the bike but was reluctant to touch him. He could feel her temper rising; he loved it. \"There are ways to restrain your kind.\"\n\nCat pursed her lips with exaggerated thoughtfulness. \"I don't know. The last time didn't really work out for you,\" she said with false sympathy, full lips curved to a pleased grin. \n\n\"I treasure the scars,\" Luca answered, amusement creeping into his eyes as he placed his free hand on his chest.\n\nCat smirked and started the engine. \"Well, I'd like to say it was nice running into you, but it never is.\"\n\n\"I guess the pleasure is all mine,\" Luca responded, still not releasing the handle.\n\n\"Yeah.\" Cat finally gave in, gripped his wrist and yanked it free. \"Well, I'm going home to fuck Bill,\" she announced, enjoying the flash of annoyed jealousy in Luca's eyes as she kicked the bike into gear. \"Biggest dick I've ever seen. It's hard work, but I'm not complaining. I love my wifely duties.\"\n\nLuca quickly stepped back before she could knock him over. He shoved his hands down his pockets to hide his painful erection, staring after Cat until she disappeared around a corner. \n\n\"One day soon, Luca,\" he promised himself. \"You'll bring that bitch to heel.\"\n\n***\n\nCat wrenched the front door open and stamped into the house. \"Bill!\" she shouted, kicking her boots off.\n\nBill's head poked around the corner, a slice of toast in his mouth. \"Hey.\" \n\n\"That shithead turned up, again!\"\n\n\"Which one?\" Bill said, grinning when Cat's eyes widened angrily. \"I can't kill him, love. He's too close to Hector. Just go on pretending he doesn't exist.\"\n\n\"I can't, because he's somehow keeping tabs on me. He just shows up!\" \n\nBill's smile faded. \"I don't like that at all.\" \n\n\"It's driving me freaking nuts. And he has this superior attitude like he's going to win something,\" she scowled. \"I'm really worked up.\"\n\n\"It'll pass, love,\" Bill said gently, taking another bite of toast. \"Hector has Theresa, Luca will have his hands full. Jett's still MIA.\"\n\n\"You saved his ass, and he's an ungrateful mutt.\" Cat stalked down the hallway, turning indignantly when Bill didn't move. \"Are you coming, or not?\" she snarled. \"We have to hurry.\"\n\nBill's grin resurfaced. Throwing the toast aside, he followed Cat into the bedroom and watched her furiously strip down. \"I can't believe I was ever friends with Luca!\" she raged, throwing her clothes across the room. \"I want to rip his face off!\"\n\n\"Hey, easy,\" Bill soothed, his fingers slid over her smooth shoulders and squeezed consolingly. He cupped her adorable heart-shaped face, his body warming with excitement being close to his naked wife. \"You can take it out on me. I'll let you try.\"\n\nThe rage in Cat's eyes softened and she looked apprehensive. \"There's no time for foreplay.\"\n\nBill heeded her warning and abruptly pushed her back to the padded wall, secured her hands in the cuffs, padded her from the wrists. He left her legs free.\n\n\"Bill!\" Cat insisted, impatient.\n\n\"What?\" he murmured, stroking a hand up her thigh, his thumb curling up her pussy and pressing into the tight, wet hole. \"What's your hurry? What are you gonna do about it?\"\n\nCat groaned and her arms went tense. \"Hurry up!\" \n\nBill slowly pulled his shirt off, watching Cat's eyes fix hungrily on his toned chest, a strange colour beginning to flicker around her irises. He dropped his pants and turned to her, smiling at her heated expression. She looked like she hated him; very hot and bothered, her temper escalating with her excitement.\n\n\"Don't make me wait,\" she threatened.\n\nBill's eyes moved to the finger pads, hearing them strain as Cat's rage mounted, her nails piercing the interior mesh as they began to extend. \n\n\"Bill!\" Cat growled, the sound rattling through her chest. \n\n\"Mm-hm,\" Bill answered, nonchalant. He let his heavy cock bounce free of his underwear and watched Cat pull against the bindings. He knew Cat's body wanted to violently lash out, but just as much, wanted to be used. \n\nBill turned his back and walked away.\n\n\"Bill.\" Cat's silken voice was barely recognisable; half sultry, half growl. \n\nBill laughed callously. In the beginning he certainly hadn't taken to the fact he needed to routinely mistreat his lover when they had sex. It was always better when she was unsettled, he didn't have to work so hard to draw the beast in her to surface. \n\nTheir situation was very unusual, and they had to roll with it. Sometimes Bill wished he was like Jett. Then he could fuck Cat whenever he wanted, the process would be so natural, her temperament wouldn't reject him every time. Sometimes he felt bad about it, especially when Cat was so sweet and desperate, when she tried to convince him it was safe, anything to stop the pain. \n\nBut Bill understood the twisted nature of his wife; her suffering. She was dangerously angry in sex; she couldn't help that. It was a complete shift in personality, like loving two women. She despised him to start, a genuine hatred true to her genetics. Then she'd purr gratitude once it passed. \n\n\"Bill!\" Cat snarled through her teeth. \n\nBill ignored her. The more worked up she was, the more intense her orgasm. This perfectly suited his sadistic streak. He picked up an elegant cat o' nine tails and went to her, using the butt of it to push her face up.\n\nThough Cat was tall, Bill's large frame dwarfed her.\n\n\"You walk into the house raving about Luca,\" he mused, watching her eyes practically spark with outrage. \"Do you secretly want him?\"\n\n\"The fuck-!\" Cat shrieked when the whip swept across her tits in a painful slap that took her breath away. She groaned at the searing heat that followed. She opened her mouth to shout at him, but a soft rubber ball pushed past her teeth to shut away her complaint.",
        "\"Maybe this is what Luca thinks about when he's alone,\" Bill continued, slowly twisting the butt of the whip into her seeping pussy. \"Tying you up, muzzling you so you can't sass him. Teaching you a lesson.\"\n\nShaking with need, Cat felt Bill's thick cock slap her hip, his precum trailing across her fevered skin. That's what she wanted inside her. \n\n\"How about I let you cum on the whip and we'll call it a day?\" Bill offered, lightly fucking her with it.\n\nCat screamed against the gag and Bill quickly checked the chains were holding. He heard the material rend against Cat's fingers and made a mental note to get new covers. \n\nProper restraints were a bitch to find. It was never fun asking manufacturers whether their merchandise could withstand certain unnatural qualities. He didn't want to be reported to PETA. He also didn't quite have the courage to visit Cat's hometown and ask her dad for direction. \n\n\"Or...\" Bill dragged the whip free and smacked her tits again. \"Should I call him over now and let him see you like this? Leave you alone together? Play fetch?\"\n\nThe whip struck the front of her thighs, Cat howled, overwhelmed by the force of her wrath. She cried angry tears; eyeliner trailed down her face in distressing black rivulets. Bill enjoyed it.\n\n\"You look like a whore,\" he told her with a cruel half-smile. \"Maybe I'll charge him for the experience.\" He decided to stop there, not wanting to make Cat too hysterical in her crazed state. \n\nCat strained, lifting herself with the cuffs, her claws hooked into the pads. Bill jumped back when she blindly pushed off the wall and tried to kick him in the face. \n\nBill dodged it, caught her ankle and held it wide, wishing they had more time. Staring at her glistening pink folds, tempted to lick them, instead he brought the whip down on her soft inner thigh.\n\nCat screamed again; a long cry of rage and despair. She was ready. \n\nBefore Cat could attempt another kick, Bill forcefully pushed against her. Standing firm between her legs, his hand clawed into her hair, clenching in the vibrant red strands, dragging down to force her face up. \n\nBill stared at Cat's eyes, mesmerised by the yellow glitter that had once taken them both by surprise; that she could express it for him. The flittering colour was a primal warning, but also a ray of hope that their love had some possibility of a future.  \n\nTrapped against all movement, Cat shrieked with a wrath she couldn't control or express. As she began to accept her immobile state, the sounds eventually dwindled to indistinct snarls, guttural growling; her legs kicking out at the sides of Bill's torso. He had her pinned. \n\nBreathing raggedly, Cat moaned with surprise when Bill's hefty cock went into her, a shocking thrust. She shouted against the gag, fighting the invasion, wanting to push him away but also wanting more of the pleasure, everything faster. The opposing desires were exhausting. \n\n\"I'm going to cum inside you, Cat,\" Bill grunted against her temple, holding her trembling body in place with brutal force, fucking her into the padded wall. \"There's nothing you can do to stop it.\" \n\nCat's panting deepened, her eyes rolled back and closed as the ecstasy hurtled forward. Surrendering the fight, her body went slack as Bill's cock rapidly stabbed into her. She felt suspended, unable to move, her mind numb to everything except the wonderful thickness of Bill's girth filling her. \n\nDimly she knew he was kissing her cheek, her temple, whispering gently while he had his way. It was so hot. The fog in her mind began to clear and the anger fled her body, like a menacing ocean wave crashing to nothing on shore. She'd cleared the storm. \n\nBill drew back, staring down, watching his thick shaft pull out covered in wet and slide back in, hearing Cat soft moans. Still grunting with pleasure, coated in sweat, he fumbled with Cat's gag and dragged it clear of her face.\n\n\"Bill!\" she whimpered, then their lips were together. A fiery sensation simmered up her body, she cried out against Bill's kiss, straining, increasingly dizzy. \n\nBill sucked her tongue and drew back, panting. \"Now,\" he groaned, his movements frenzied, gripping Cat's cuffs for support. \"Now, Cat! Fuck!\" \n\nCat seized up, her gorgeous face strained, her irises turned almost completely gold. \"Bill...Oh-!\" \n\nBill felt her climax hit; she spasmed against him, her pussy clenched repeatedly. More fluid rushed her soaked channel, preparing her body for a worse invasion. \n\nBill knew he was adequately hung enough to satisfy her, uniquely blessed in that department. But sometimes he felt guilty about the sacrifice she made for him; forfeiting the powerful connection she could only experience with her own kind. The decision to forgo motherhood.\n\nCat went completely limp, held up only by the restraints and Bill. Her eyes were closed, her breathing slowed. It was the defeated moment a male Lycan would take full advantage of. \n\nBill cupped her face demandingly, his fingers increasing pressure until her eyes tiredly blinked open; the sparks were gone. Only the crystal blue with faint shimmers of gold fading by the second. Very sexy. She wasn't dangerous anymore.\n\n\"Feel better, love?\" he asked huskily. \n\nGazing up at him with sultry adoration, Cat weakly nodded. A gentle purr quivered through her chest.\n\nBill untied the restraints, careful to lift her up before she could sink to the floor. He carried his sleeping wife upstairs to their bedroom, laying her under the blanket. Sex was all-consuming for Cat, especially if she was worked-up to start. She rarely stayed conscious afterward.\n\nBill put on pants and returned to the kitchen to get water and check his phone. A streak of guilt flashed through him whenever he remembered the exchange; the way Tessa had looked at him. But it was business, it wasn't his fight and most importantly Jett's life was at stake. He'd called Jett repeatedly, messaged about the trade, with no answer. \n\nBill wasn't exactly surprised, though the long silence from Jett's end made him uneasy. The job was done, and they could move on, if only Jett would accept it.\n\nBill texted again. 'Hello hello. I have your money. And beer. Come find me.'\n\nHe tossed the phone to the kitchen counter with a sigh, knowing better than to expect a reply. \n\n***\n\nHector's pen tapped the sleek desk repeatedly. \"Where the fuck is Doc?\"\n\n\"We don't know.\" Pavel looked to the side. \"He's gone offline.\"\n\n\"Try him again,\" Hector frowned.\n\nLuca waited until the door closed behind Pavel. \"We should wait,\" he advised. \"Doc should see Theresa before anything else.\"\n\n\"Tessa was alone with Jett for hours before Bill took over,\" Hector mused, still tapping thoughtfully. \"Have you ever known Jett to catch a tail?\"\n\n\"He's too careful, for that,\" Luca shook his head. \"But if you want to do this properly...\"\n\n\"I don't have time, Luca,\" Hector groaned. \"And I don't like being kept at arms-length from Tessa.\" \n\n\"Well, Jett's gone silent,\" Luca shrugged. \"From that alone, I'd call it a sure thing. But from experience I'll tell you something.\" He shook his head. \"I wouldn't be surprised if Doc pulls up a negative. She's nothing like Catherine.\"\n\n***\n\nFeeling blissfully well-rested, Cat stretched her supple body with a happy sigh before opening her eyes. The corner of her mouth turned up mischievously when she saw the bulk of her lover beside her, sitting up against the headboard. \n\nBill was reading something on his phone, his golden hair loose and brushing his wide shoulders. His eyes didn't budge from the device when Cat's fingers began to suggestively walk down his abdomen.\n\n\"No, love.\" He scrolled down the screen. \n\nTurning onto her belly, Cat wriggled nearer. \"Don't worry, I'm sated.\"\n\n\"You never are.\" Bill lightly slapped her hand away.\n\nCat narrowed her eyes and sharply watched Bill's face, gauging if he was being bitter about her species. When he serenely flicked the phone screen again, she nestled closer, resting her chin on his hip. She poked her tongue out and licked him, watching his cock jump in his trousers. \n\n\"Cat.\" \n\n\"What?\"\n\n\"We're upstairs. Don't be dangerous.\" \n\nCat sat up in a huff, raking a hand through the sexy tuft of red hair gathered atop her head. \"The worst of it is out of my system,\" she reasoned. \n\nBill laughed. \"You're pretty insistent for an unaroused person.\"\n\n\"Just one lick?\" Cat batted her lashes. \"I won't go near your balls.\"\n\nBill sighed and ignored her, feeling the heat of her gaze travel along his body. \n\n\"What about an innocent makeout sesh?\" Cat suggested.\n\n\"There is nothing innocent about kissing you,\" Bill smirked in a tone that suggested he was happy with that fact.\n\n\"I just want to fool around a little,\" Cat pouted. \"Nothing crazy.\"\n\n\"Nuh-uh.\" Bill resumed reading. \"Check your eyes, love.\"\n\nCat scrambled naked from the bed to stare at her sparkling reflection in the mirrored cupboard door. \"Fuck!\" she scowled. She looked again and stomped her foot. \"Fuck! Fuck! Fuck!\" \n\n\"Mm-hm,\" Bill replied, his features slightly wicked. \"Guess Luca really did get you worked up.\" \n\n\"Fuck off!\" Cat snapped, returning to the bed. She stared at the ceiling a while, her fingers trailing over the warmth of her skin, fingertips tracing her slick pussy. She flopped on her side to ogle her husband. \n\nA long minute passed before Bill glanced her way. \"Would you like to go downstairs, love?\" \n\nCat beamed at him. \"Maaaybe.\"\n\n***\n\nHector normally wore light colours but opted for an all-black ensemble for dinner, no shoes. The darker colouring made him look quite fair-skinned, blonder and more blue-eyed than usual. \n\nTessa went for a plain, conservative look. An autumn-patterned jumper and brown jeans. It didn't matter what she wore, Hector always gave her an appreciative once-over whenever they met. The admiration was more predatory than casual, as though Hector had purchased her and was waiting for the official trade. \n\nAfter dinner in his room, their plates were taken away. Once the door closed behind his staff, Hector drew his seat alongside Tessa's.\n\n\"This flirtation has been fun, but we need to talk about more serious matters,\" he said, capturing her hand in an intimate hold.\n\nTessa shifted uncomfortably. \"Can I go home?\"\n\n\"No,\" Hector chuckled. \"Have I mentioned how happy it makes me, that you've been compliant so far?\" \n\n\"Yes,\" Tessa said slowly, suddenly reminded of a pamphlet about abusive relationships that someone had left at the diner. \n\n\"Good,\" he smiled, leaning closer. \"I want things to go well between us without any...ugliness.\"\n\nTessa turned away but Hector tightened his grip on her hand. He lightly kissed her cheek, behind her ear. \n\n\"Hector, I-\" she protested. \n\n\"You were born to be worshipped,\" Hector breathed, his arm sliding around Tessa to stop her chair scooting back. Straightening, he released Tessa's hand to cup her face, the light of his eyes turning dark as they fell on her parted lips. \"Let me, Tessa.\"\n\nHe kissed her with slow, sensual force. Tessa managed to turn her face and he began to kiss her neck in the same manner. \"Hector, no,\" Tessa shook her head, pushing his shoulders. \n\n\"Shh.\" His hand left her face, traced over one breast and began to pry down the waist of her pants. \n\n\"Don't.\" Tessa shook her head against his shoulder, gasping when his fingers slid into her panties, his fingertips stroking her pussy, awakening her clit. It didn't feel right, him touching that part of her. \n\nHector persisted, softly groaning into Tessa's hair as her nub began to swell. Tessa felt her face flush with the aggravation of it.\n\n\"Look, I know you think that...I mean...\" Tessa tried to push him away, but Hector ignored her.\n\n\"Whatever comes now, I'll forgive you. You'll do fine,\" he whispered. \n\nTessa strained away as far as she could whilst remaining in the chair. \"Please, don't,\" she mumbled, growing fearful of the turmoil gathering inside her. \"Please, let me go. I don't want you.\"\n\nTessa knew who she wanted; a stranger who Bill could have slaughtered, for all she knew. A dangerous man she would never see again, and only in the aftermath of his company could she understand how much she wanted him. \n\nShe wanted to see Jett again; his rugged good looks, sexy grin and intense grey eyes. Obviously, the traumatic experience was rousing all kinds of irrational desires. But the very thought of Jett lying dead somewhere created a sudden, devastating pain through her chest.\n\n\"Take it slower, Tessa,\" Hector warned, his fingers sliding up to her jumping pulse. \"You're burning up.\"\n\n\"I don't want to be here. I don't want you,\" she stubbornly repeated, feeling fevered; an unusual, discomfiting sensation that took her back to an upsetting time in Jett's custody. \n\nTessa slipped from the seat but Hector followed, pinning her to the ground. \n\n\"Stop fighting it,\" he grunted, pulling up the front of her sweater. He paused, taken by the sight of her breasts. Then his mouth hungrily fastened to her nipple, his teeth pinched.\n\n\"Don't!\" Tessa cried, now vigorously resisting. The burning grew, and she was more conscious of it now, because she wasn't excited to distraction. She was getting angry. \n\n\"You're so soft and tasty,\" Hector groaned against her chest, licking her. Tessa shuddered and tried to push him away. A soft growl travelled up her throat.\n\nTo her amazement, Hector immediately backed off as if she was dangerously electric. As he kept his distance, Tessa hurriedly pulled the sweater down over her breasts, hating the wetness, that her nipples were erect. \n\nHector was on the phone, his cold blue eyes fixed on her. \"Now.\"\n\nTessa's jaw dropped incredulously. \"What...?\"\n\nThe door burst open, Luca and Pavel entered with two armed men. They must have been waiting outside the whole time. If Tessa weren't so alarmed, she'd have laughed. They rushed her, the armed men both wearing blue-grey leather with body armour about the torso, throat and arms. They looked like a sci-fi SWAT team.\n\nStartled, Tessa screamed. In a blurred moment it felt like there were hands all over her; she was seized and lifted by the bizarre group and carried to the bed. The men weren't nonchalant like before. They stared intensely, as if she might grow a second vampiric head any moment. \n\nThe strangers held her down, Luca and Pavel went about attaching metal cuffs to her wrists and ankles, securing her to the mattress. Pavel forced a strange pair of boxing mitts over her hands.\n\n\"What the Hell is going on? What is this?!\" Tessa shouted. \"What the fuck is wrong with you people?\"\n\nHector pulled a knife and Tessa seized up with terror as he carefully sliced away her clothing except for her underwear, tossing the tarnished material aside. Then he crawled onto the bed; his smile arrogant though his eyes were menacing. The others silently watched him kiss Tessa's ankle, his lips slowly progressed up her calf to her thigh. \n\n\"Please!\" Tessa begged, looking at Luca, who seemed fascinated by her. \n\nAs Hector's attentions escalated, Tessa struggled with dismay, her cheeks bright red with exertion and embarrassment. His face was in her gusset, she felt his panting breath hot between her thighs. The men watched quietly.\n\nTessa closed her eyes to shut out the humiliation of being strapped to a bed in nothing but sheer panties. After a lifetime without male attention, the experience was intimidating beyond anything she could comprehend. \n\n\"She's beautiful,\" Pavel remarked, as though it was an unlikelihood, restlessly tracing the suspenders supporting the guns on his chest. \n\nLuca didn't comment, his attention on the quick, budding rise of Tessa's nipples.\n\nTessa turned her burning face into her arm and arched against the bed with an indignant squeal when Hector drew the gusset aside and his mouth intimately explored her. \n\n'This is a sex cult. You've been abducted by a fucking sex cult,' Tessa thought with bitter exasperation. Hector's story was bullshit; the photo of her parents had been doctored, never mind that it looked real and roused strange memories. \n\nBy mistake someone had plucked her from a normal life and entrapped her in some sort of weird society, there was no better explanation. And why not, going by her miserable existence so far, why should her bad luck stop now?\n\nAnger sparked up her body, that same sense of frustration and injustice; the world bizarrely unfair, constantly bullying her. The pain of it flashed up her arms and numbed her fingers cocooned in the weird boxing mitts. The frustration was painful, but she couldn't release the rage.\n\n\"Her eyes?\" Hector asked, his inquiry slightly muffled. \n\nLuca pulled Tessa's hair and her eyes flew open to stare desperately at him. \"Very, very green. Nothing else.\"\n\n\"Bet she glittered for that mutt,\" Hector chuckled. \"This is sexier than I envisioned.\" He moved up Tessa's body, gently kissing along her neck. \"Relax, baby.\"\n\nWhen his fingers pried her saliva-wet folds, Tessa squealed and strained against the cuffs, wishing she could throw the hulking male off her, find a gun and blow his head off. \n\n\"Oh yeah,\" Hector said thickly, pressing two fingers into her tight hole. \"Oh, fuck, yeah,\" he muttered, thumbing her clit, his other hand working to free his cock. \"Relax, Tessa. You'll get used to this.\"\n\n\"Fuck you!\" Tessa shrieked. \n\nHector's laugh quickly died when his fingers sank a little deeper. \"Fuck.\"\n\nLuca's attention left Tessa's face. \"What?\"\n\nHector lurched back onto his knees, frowning at Tessa. \"Guys, get out. Everyone out.\" \n\nPavel frowned. \"Hector, what-?\"\n\n\"GET OUT!\" Hector screamed, and the others rushed to exit. \"Not you!\" he pointed at Luca, who paused mid-stride and waited until the door closed behind Pavel. \n\nLuca crossed his arms, expressionless. \"Well?\"\n\nHector stalked to the other side of the room, out of Tessa's earshot, and angrily dragged a hand across his head, agitatedly rubbing his buzz-cut. \"She's a fucking virgin, Luca.\"\n\n\"What?\" Luca's eyes cut to Tessa. \"But...\"\n\n\"You said this was a sure thing!\" Hector snarled.\n\n\"I didn't think beyond what we know.\" Luca suddenly realised the extent of his oversight. \"For them to be together even an hour...this has never happened before.\"\n\n\"Luca,\" Hector said carefully, shaking with anger. \"I've killed more important people for far less than this.\"\n\n\"I told you everything,\" Luca shot back, not rattled in the slightest. \"I said to wait for Doc to get here, but you wanted to go ahead.\" He crossed his arms. \"Be reasonable, Hector. You gambled on a statistic. Jett's one tough bastard, everyone knows that.\"\n\nIncensed, Hector closed his eyes and pressed his fists to them. \"Never, in the history of Lycan interactions, has a male failed to mate a virgin. It's statistically impossible.\"\n\n\"Well...\" Luca said with unhelpful doubt. \"I guess not impossible.\" He tilted his head. \"It's not the worst thing, Hector. We have the girl and that's what matters. And if Doc was here to verify her...\"\n\n\"Fine,\" Hector snarled. \"I can accept my share of the blame. But I need you to make this right, Luca. Fix it.\" \n\nLuca crossed his arms. \"Fine. But I want Catherine.\" \n\nHector made a disgusted sound and rolled his eyes. \"I told you, once I'm crowned-\"\n\n\"We agreed when you get yours, I get mine. Now we have Theresa-\" \n\n\"I think you'll agree a critical piece of her is flawed,\" Hector said sarcastically before shaking his head. \"Fine. You can take the resources you want. But don't come crying to me if she claws your junk to ribbons.\"\n\n\"Thank you.\" Luca cocked his head. \"So, what now?\"\n\n\"We need Jett,\" Hector snapped. \"It has to be him.\"\n\nLuca looked cynical. \"We catch the alpha, trap them in a room together, make sure she's deflowered, then reorchestrate another 'first time' with witnesses?\"",
        "\"Why did Bill bring her if Jett hadn't fucked up?\" Hector pondered. \"How the fuck could Jett resist it?\" \n\n\"Maybe Jett removed himself before he could succumb?\" Luca shrugged. \"Maybe we underestimated his dedication to a job.\" \n\n\"They're fucking animals, Luca. They can't control themselves.\"\n\n\"Well, Jett managed, because there's no way Theresa could fight him off.\" Luca quirked an eyebrow. \"So, what do I tell the others? You couldn't get it up?\"\n\n\"Fuck off, Luca. No one can know about this.\" Hector looked across at Tessa, warily watching them, still squirming against the restraints. His bare chest expanded with a lustful breath; his balls twinged. \"I can't fuck her until this is done. What shit luck.\"\n\n\"You can do other things.\" Luca rubbed his temples. \"We can find another-\"\n\n\"In the city? It has to be Jett; he's the only one alienated from his pack. And that mutt's calibre is too good to pass up.\" Hector exhaled at the ceiling, then turned back to Tessa's squirming figure, his body warmed at the tempting sight. \"Then I guess we repeat history. Like mother, like daughter.\" \n\n\"This is really messy, Hector,\" Luca lectured. \"We wanted Jett to run away from us.\"\n\n\"I don't care how you pull it off,\" Hector said savagely. \"Once word gets out that Theresa Sinclair is alive, others will close in. I need a Lycan heir on the way and the child must, by all appearances, be mine. I can't win this fucking war without it.\" \n\n***\n\nJett parked the SUV off-road, close by the forest's tree border. It wasn't ideal, but a risk he had to take. He opened the boot and picked out two guns, his eyes landing on Tessa's bag that Bill neglected to take in his hurry. \n\nThinking about Tessa, Jett wondered if she'd fight or go willingly; if she'd warmed to Hector's charms and the glamorous future on offer. From what he'd witnessed so far, she had little control of her instincts, her attraction to him. If she wanted to be stubborn about it, that was her shit luck, because he wasn't leaving without her. \n\nJett squashed the unhelpful thoughts and tried to focus. The group tailing him were unlikely to barge onto Hector's property. It was possible they'd wait on the border for an opportunity to nab Tessa, but there was no way to predict their next move. \n\nJett ran through trees at an incredible pace, considering his objective and his approach. He knew Hector's property like the back of his hand, and very few of the men on site would be privy to the depth of Hector's agenda with Tessa. Jett knew showing up was incredibly ballsy, insane even. But he had some advantages. He was a familiar face, Hector wasn't expecting him, and he was built to fight. If he could get his hands on Tessa, no one would risk trying to shoot him. \n\nJett was relieved not to see Luca or Pavel loitering out front. The small group of gunmen nodded in greeting and let him walk straight through the doors. Jett moved quickly, avoiding cameras where possible. Given the size of Hector's property and the security installed, it was impossible to avoid being caught on tape. It was a very good thing they weren't expecting him.\n\nThere were only two places Jett presumed Tessa would be; imprisoned in a luxury suite or shacked up with Hector. Jett felt his rage spike at the latter option, and he quickly set that instinct aside and moved on, tuning in to every conversation until he picked up a collective group discussion, all male. \n\nThen from the next level up, he heard Tessa scream. The trip there was a blur to him; anyone in his path was dispatched with swift violence. There was no plan in his logical mind. But his animal brain knew Tessa's location with perfect clarity, locked onto her. There were light traces of her scent, now familiar to him, spurring him on. \n\n***\n\nLuca left the room in a hurry, eager to get his plan underway. To finally dominate Cat. It'd take a vengefully long, destructive campaign to break her, and he could hardly wait. Luca's expression turned sinister at the thought of serving up ten years' worth of pent-up anger and frustration. \n\nIt could have been perfect, but Cat turned on him. Then it got ugly. The tender side of Luca, the lovestruck boy, died years ago. The feelings were still there, but they were more poison than pure. The sentiment was bittered, twisted, broken beyond repair. \n\nLuca's dark eyes glowed as his thoughts went darker places. He'd keep Bill alive for a while, really rub it in, force Cat's compliancy and make her eat her words over and over until she begged to belong to him. Once her willpower was reduced to a frayed thread, he'd snap it completely and make her watch Bill die. From thereon Cat's world would consist only of him. Forever. \n\nLuca sighed, his cock straining against his pants. Turning the corner, his evil fantasy was sharply disrupted when he saw the small pile of bodies at the end of the hallway. Jett stood over them, looking at Luca, his pale eyes lethal.\n\n\"Oh, sh-!\" Luca managed. There was a brief feeling of staring death in the face, an ironic thought that he was going to die with an erection. Then nothing. \n\n***\n\n\"Things started out well between us, don't you think?\" Hector mused, straddling Tessa, caressing her exposed breasts. \"Obviously taken a turn for the worse, but we'll work it out.\"\n\nTessa whimpered; the anger gone with despair replacing it. Nothing made sense to her, and she was too tired to scream anymore. She closed her eyes, turning inward to the dark, escaping her current predicament for a peaceful minute. \n\nHector's weight swept from her body. Tessa opened her eyes and her throat closed up with shock.\n\nIt was him. Jett, the man seared into her brain that she couldn't forget, standing over her looking completely unhinged. There was a lot of violence in his expression, marring his handsome face. He was terrifying, and Tessa was afraid to know why. \n\nHad he run out of drugs? Did Hector underpay him? Was he going to kill her? \n\nTessa turned to see Hector slumped against the wall on the other side of the room. Maybe she'd taken his bizarre hospitality for granted. The irony of being so guarded with guns and suddenly unprotected when it actually mattered made her want to laugh.\n\nInstead, she squeaked with fright when Jett angrily unlatched her restraints and ripped the gloves from her hands. His hand was on her wrist, pulling her up, and Tessa curled back into the bed with a protesting cry.\n\nOne edge of Jett's mouth turned up. She didn't want to leave with him. Tough shit. \n\n\"No! No!\" Tessa cried, trying to resist Jett as he easily tugged her into his arms and stood with her across his shoulder. \"I don't want to go with you!\" \n\n\"You want to stay here?\" he barked, taken aback by the urge to kiss her in the middle of such chaos. \n\n\"Yes! Yes, I do!\" Tessa insisted, twisting across his shoulder, knowing it wasn't entirely true. Though the saying 'out of the frypan and into the fire' blared repeatedly through her mind. \n\nSquirming against him, she felt a sudden jolt of desire shoot down her spine and sizzle between her legs. His hands on her thighs were a pleasurable pressure.\n\nJett laughed roughly at her answer, then paused. There were a lot of people running toward them, there was no time to dress her. He turned to the large window. \"Time to go.\"\n\nTessa saw where his attention shifted and frantically struggled. \"No! No! Don't do it! Please, don't!\" \n\n\"It'll be fine, I promise,\" he grunted, kicking through the pane.\n\nTessa screamed when glass loudly shattered, the remnants falling some distance to crash to the ground below. She felt she might die of fear before the impact could kill her. \n\n\"Wrap your legs around my waist. Hold onto my neck,\" Jett brusquely ordered, shifting her in his arms. With immense effort, he stifled the primitive desire that flashed up his body from being so close to her. \n\nTessa considered fighting, but seconds later the night wind brushed her face and she was out in the open. With a terrified whimper she clung desperately to Jett's rock-solid build, her thighs aching with the force she applied. She was so scared she didn't even care about being naked in public. \n\nTessa expected to plough into concrete any second. But they moved steadily, stealthily down the building together, hearing the chaos ensue throughout the property. Once news of Jett's surprise attack made its way across staff, everyone had rushed into the house, leaving the outside practically unguarded.\n\n\"Don't open your eyes, Tess.\"\n\nTessa felt a strange surge of comfort at Jett's voice. It was a simple order, but there was certainty in his tone, familiarity in the nickname. He was in control of the situation, somehow. That didn't stop the urge to do the exact opposite of what she was told. \n\nTessa opened her eyes and screamed again when they suddenly dropped, Jett landing with confidence on mere inches of window ledge, his fingers gripping sections of exposed brick. \n\n\"Tess, goddamnit!\" Jett growled. \"Close your eyes!\"\n\nTessa snapped her eyes shut, crying again. The heat of Jett's body was soothing, immersing her in some kind of comfort, but she was so traumatized. Breathing in Jett's compelling scent, she sobbed brokenly the entire way and continued to bawl when Jett commenced a more jolting run. At some point he held her to him with one arm, the other firing a weapon. \n\nTessa's hold around Jett's neck tightened considerably when a bullet zinged past them. She heard shouting voices, calling to cease fire. They obviously didn't want to kill her; she didn't trust Jett felt the same. With her legs around his waist, without even looking she knew moisture from her throbbing pussy was dampening the front of his clothes. She was humiliated.\n\nJett's sprint slowed, Tessa fearfully opened her swollen eyes to make out the large black SUV before the passenger door opened and she was shoved into it. The driver door opened and slammed. Jett was next to her. The locks clicked before Tessa could open her door.\n\n\"Hold still, damnit,\" Jett growled, yanking the belt across her body to click. He pulled out his phone, hitting 'send' to the warning text he'd drafted for Bill earlier. He couldn't risk another intervention from his friend. Now, Bill would have to take Cat and run. \n\nTessa quickly changed her mind about undoing the seatbelt when the car violently pulled out onto the road. She flushed self-consciously, suddenly aware of being nude once again in front of him. It was less vulnerable than being naked and shot at, but way more embarrassing. \n\n\"Please, let me go,\" she pleaded, keeping her thighs tightly closed and holding her arms across her chest. \n\nJett grunted scornfully, reaching to draw a light blanket from the back seat; it was more for his sake than her comfort. He noticed her cheeks were damp with tears; he wished she'd wipe them away. Their interaction had to be kept to a minimum if he had any hope of concentrating. \n\nPart of Jett wanted to laugh hysterically at the insanity of what he'd just done, the ridiculousness similar to losing an ill-thought-out bet or drunkenly accepting a suicidal dare. \n\nThe fact he'd just strolled into Hector's property and stolen a literal royal princess, climbed down the outside wall with the naked girl wrapped around him in full view of Hector's men and then sprinted to his getaway vehicle with a hardon. This was definitely a story to share back home over numerous beers.\n\nTessa miserably accepted the blanket, covering herself over the belt, primly tucking the material under her chin. She still couldn't believe she was alive after going out the window. Though that meant nothing if her minutes were numbered. \n\nShe sniffled into the blanket. \"Are you going to kill me?\"\n\nJett smirked and shook his head. Catching her scent, her natural reaction to him, his heart began to thump, his body heating up with the swell of his cock. The delectable essence wafting from his clothes straight to his nose was intoxicating and incredibly distracting. He wanted to press the material to his face and deeply inhale. He wanted to get straight to the source of the scent, sitting right beside him. It was torture.\n\nThey were definitely compatible; more than compatible. He had to get Tessa to a safe location. Ignore the call of her virginal pheromone until the time was right. When they reached their destination, his family would have to wait a bit longer for a proper explanation. \n\nThey'd be expecting him; he'd given notice. There would be calls, messages flooding through, a mixed reception. Heartfelt welcomes, curiosity, joy. There would be warnings. Some concerned, others cynical. Outright threats. \n\nWhatever it was, he'd deal with it. If it was Tessa's first time, he'd have to do everything properly. This endeavour directly clashed with the fact he was very close to pulling over, laying down the back seat, forcing Tessa back, pinning her wrists and...\n\nJett glared more fixedly at the road. There wasn't time for that. Regardless, he was beginning to feel faint with the heady arousal taking him over. He was still angry; insanely angry about the way he'd found Tessa, tied down under Hector. Hectors hands touching her soft breasts like he owned them. Entitled fucker.\n\nTessa nervously watched the cloud of intensity around Jett somehow deepen. Though seriously upset, she was conscious of being in a better position than ten minutes ago and feeling generally better about where she was now. She stared at his attractive profile, dark hair, jaw clenched. \n\nShe noticed the grey of his eyes shift to that familiar bright glimmer, reflecting light in the dark. His big hands gripped the wheel with unnecessary strength, the veins in his arms bulging. She wondered what he was thinking.\n\n\"W-What are you going to do with m-me?\" she finally stammered.\n\nJett ignored his better judgement and looked at her. She was still crying, shaking, scared out of her mind. He felt awful about it.\n\nBut despite his stress, his rage, his excitement; all the pressing concerns about their uncertain future, when Tessa asked that question, Jett couldn't help himself. \n\nHe grinned."
    ],
    "authorname": "Bellie444",
    "tags": [
        "alpha male",
        "kidnapped",
        "intrigue",
        "imprisoned",
        "rescue",
        "romance",
        "lycan",
        "non-human",
        "princess",
        "bondage"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-royal-lycan-ch-02"
}