{
    "title": "Freak Ch. 03",
    "pages": [
        "Freak\n\nFree the Dancing Llamas\n\nChapter 3: Le Freak, C'est Chic\n\n\u2014\u2014\u2014\u2014\n\nWhen I wake, I practically jump out of my skin because I'm in a dark bedroom and a strange bed.\n\nI'm naked, except for my thong and bra. The underwear I distinctly remember having worn the night before. I realise after a moment that I'm back in the den, but not in my room. I'm in the vampire's, I realise, as I look around at the vaguely familiar surroundings in the dark.\n\n\"Shit,\" I mutter, wondering what the hell happened last night to lead me here.\n\nI have a think for a moment, the last thing I remember was being in the bar with Elian. I blush remembering how I blew him there. Oh God! The memory becomes stronger; I got down to my knees and sucked his cock in a public place.\n\nI've never done anything like that before and thinking about it now...and...and...\n\nI loved it. He touched me after that too, but barely. I vividly remember the incredible release, the way the orgasm pulsed around my body...and then...then I suppose I must have fallen asleep? I had been exhausted, and after the intense release I think my body had just sort of collapsed.\n\nI turn in the bed, and look over to see Elian next to me - he's asleep which is a weird thing to me. I don't know why, but maybe seeing him resting and vulnerable is just kind of odd. He's not someone I associate with vulnerability.\n\nNevertheless, I take the moment to have a good look at him - I take in his big, broad shoulders, strong arms. He's shirtless, he is also possibly pant-less, but there's a sheet covering his lower half. I've never seen him naked before, I muse. Actually, never seen him without a shirt on either. Just as I thought, he is finely muscled. I notice there's a dark misting of hair over his chest, and I want to touch it.\n\nThe little beast inside of me agrees; touch, touch, the wolf demands.\n\n \n\nHe's asleep, so I figure I'm safe. I lean over leaning on my elbows and look at him closer. Asleep I don't feel so intimidated. He has such a sharp, masculine face, nose definitely has been broken and set a few times. He's not handsome, I'd never describe him as that. Although there's something so intriguing about his face that keeps me looking; that keeps me captivated.\n\nI gently pet the hair on his chest, and notice how nice it feels, I like the texture, it looks rougher than the hair on his head, although I'm not sure if I'm feeling brave enough to find out. He looks so strong even in sleep, maybe it's his largeness, his build and musculature. Or maybe it's because even in his sleep he still looks self-assured and confident.\n\nElian shifts, eyes opening, and his red gaze is upon me. I'm too nervous to make eye contact, so I just keep petting his chest, exploring the skin, hair and muscles. After the amount of sexual things we've done together, I don't feel like I should be embarrassed of how I want to touch him. <br >\n\nHis hand reaches out to smooth back the hair off my face, pushing it past my neck and over my shoulder. The gesture is surprisingly gentle, sends a little trail of tingles up my neck and spine.\n\nI'm feeling brave, so I venture to look at his face, and I notice his face is relaxed. Eyes, half-lidded and still sort of sleepy. I want him to kiss me I realise with startling surprise. I want him to place his lips on mine. We've done so much together already in a few days, but not kiss.\n\nI figure I have nothing to lose. He's taken what he wants from me, so surely I should be able to take what I want?\n\nI lean forward and press my mouth against his. His lips are soft, although his stubble is abrasive against my skin. The kiss is brief, but still manages to make my lips vibrate at the mere contact.\n\nI pull back, and realise maybe I shouldn't have. Maybe he doesn't want to kiss me, maybe he would have by now if that was something he desired from me.\n\nBut then it's okay. Then he smiles, and it makes my heart stutter. What is he doing to me? He doesn't say anything to me, just brings his large arms to pull me and his mouth seeks mine, his lips move over mine in a sweet dance. I tilt my head, leaning further into the caress, bringing a brave hand to softy touch his jaw.\n\nI sigh, perhaps because I've been holding by breath. He takes advantage of the little opening, tongue darting in to taste me before retreating. The kiss sends a aching thrill of longing in my body. I realise I'm pressing myself into him, trying to feel as much of his skin on mine. To my everlasting dismay he pulls back.\n\n\"Evening,\" Elian grunts, placing a chaste kiss to my mouth. He's pressing me back into the mattress, and I lean up to keep kissing him. I don't want to stop, I want to keep going and see where this leads us next.\n\n\"If you're tryna' tempt me into staying in bed all evening, I am persuaded,\" He murmurs between kisses.\n\n\"Was that your plan when you undressed me last night?\"\n\nHe laughs, it's a nice laugh, not mean or cruel; just humoured. He leans down to kiss my nipple through the lacy fabric and I release a breathy sigh. I never thought my breasts were much to fuss over - sort of on the smaller side actually, but the way his tongue and mouth caress me, it makes me feel like they're perfect.\n\n\"Don't worry, I didn't touch you while you were asleep,\" He leans to kiss my other nipple, \"just figured that dress wouldn't be comfortable to sleep in,\" That is surprisingly thoughtful and I'm not sure what to do with this information.\n\n\"It wouldn't be, no.\"\n\nHe continues kissing down my body, suddenly stopping at my navel to look up at me.\n\n\"This is nice underwear. Were you planning on showing it to the wolf king?\" His voice is sort of playful, but there's an odd spark in his eyes, electric, dangerous and thrilling all at the same time.\n\nWhat does he know about me and Eric?\n\nDuh, Lililth. You introduced yourself as the King's Queen in trial, and he saw you two on a date at the restaurant! \n\nI shrug, \"Eric and I are supposed to mate, so I prepared for the possibility.\"\n\n\"How would you have gotten through that saga, I wonder? Or does the king like a bit of rough play?\"\n\nIs that what we do together? Do Elian and I 'rough play'?\n\nI sigh, \"I just lie back and think of England,\"\n\nHe leans back up my body, effectively pining me underneath me, it's gone from sexy to intimidating in a matter of moments. The hair is standing on the back of my neck and I feel like I need to leave. There hasn't been much that's changed in the space of those seconds, just a slight difference in our bodies. But something's changed in him and in the air around him.\n\n\"I don't know if I want to hear about you fucking another man.\" He says, voice deep, threatening. This is a strange exchange now, and I'm not sure how I feel about it. My brain is struggling to keep up with what is going on, on account of the fact that my pussy is still aching for him and clouding my brain.\n\nI try to push him off, but he is too big; too strong. His body smothers me but not in a good way.\n\n\"You're the one who asked,\" I manage, \"Now get off, I don't feel comfortable.\"\n\nHe leans to the side, releasing me and I move away.\n\n\"Don't wear nice things for him, he'll get the wrong idea.\" Elian says. I don't bother looking at him, I don't know what the hell is going on. I move to get off the bed. I can figure out this weirdness later, right now I know I should leave.\n\n\"That's the point. And what? My normal stuff not do it for you? Well, I'm sorry my usual underwear is not up to standard. Now I remember why I was ignoring you. You are such an asshole.\" I grind out, stumbling around, trying to find the dress I was wearing earlier that evening. I don't manage to find it, and just grab Elian's shirt off the chair and shove it on. I tail out of there as quickly as I can.\n\nI'll come back for Mercy's dress and my heels later, I promise myself.\n\nI manage to make it to my room without having to run into anyone shamefully, the last thing I need is anyone from this god forsaken pack coming out of the vampire's room.\n\n\u2014\u2014\u2014\u2014\u2014\n\nThe next day my life carries on. I go to work, I come back to the den, I try to ring my family and they ignore my calls. When I'm making dinner for myself in the den kitchen, Eric joins me.\n\nNot for, thankfully, another painful endeavour into small talk.\n\n\"You,\" This is apparently Eric's favourite way to greet me now. I turn away for a moment from my cooking to give him my full attention.\n\n\"Hey Eric. What's up?\" I keep my tone friendly and relaxed. Although in the inside I'm a little offended that he doesn't bother talking to me like an actual human being.\n\n\"The vampire wants you. Says he likes your blood type, and is refusing to feed off Mercy.\" Eric looks tired and annoyed I realise.\n\n\"Blood type?\" How the hell can he have a preference for blood type? Is there a taste difference between them, I wonder.\n\n\"Yeah, can you go sort it out? These vamps are such a headache. But I'd rather not piss them off, they're good allies and we need this deal to work.\" Eric rubs his neck, and for a moment gives me a glimpse that maybe he knows more about me than I realised, \"Look I know this isn't easy for you, especially being away from home. You've been such a trouper. Do you think you could keep trouping on? Do this favour for the pack?\"\n\nHe's got me there. If this is supposed to be my new pack, I really should do anything I can to help them. And despite what it might sometimes seem like, I do want them to like me. It'd make things a hell of a lot easier.\n\n\"Sure thing, Eric,\" I smile. Although on the inside I'm filled with a sense of dread. I don't want to see Elian after last night. I don't want to face him after everything. So much and so little has happened between us and it's complicated by the fact that the man is a mystery to me.\n\nI know only a few things about him;\n\nOne: His name is Elian\n\nTwo: He is a fairly important vampire in his clan.\n\nThree: He likes putting his dick in my ass.\n\nThese facts are not exactly reassuring, and I'm still not sure how I feel about number three, except that I like it. And the thing about fact three is that it taught me something about myself which is: having a dick in my ass gets me to orgasm.\n\n...Maybe I sort of like a lot of the sexual things he does to me.\n\nIt doesn't make up for Fact Four: I do not know much about this guy. Liking sex with him shouldn't be confused with actual intimacy with a normal person.\n\nEither way, like a good wolf, after I eat my dinner (And honestly, I wouldn't call it eating - I pick at it and then throw it away because I'm too nervous about seeing Elian again after our spat) I head down the corridor which leads to his room.\n\nI swear something feels funny in this corridor tonight. My heart almost leaps into my throat when I reach his door. The door opens and out comes Michelle...Michelle wearing a red silk dress which accentuates every damn curve of her body, especially her massive tits. There's no way in hell they didn't just fuck.\n\nI don't even like Michelle as a person but even I'd have a damn hard time not touching her in that ensemble.\n\n\"Oh hey, freak,\" Michelle says, voice all airy. She stares at me like I'm dirt, like it's an effort to even look at me.\n\nMaybe it is. I look down at myself - jean shorts and a t-shirt. Not much to look at, I guess. Michelle doesn't even bother to wait for a response, she just keeps on walking past me, down the hallway all casual as if I didn't just catch her walking out of some vamp's room looking like a snack.\n\nMaybe...maybe Elian would like me better if... No, I can't go down that rabbit hole. I don't give a shit about his opinion, or anyone else's for that matter I remind myself. I'm just here to do my duty.\n\nStill, I can't help but wonder what was she doing in there? I feel my heart and stomach clench. I feel sick. I don't give a shit about pissing him off. I am not going to feed him, when he's clearly already done that tonight.\n\nI walk into his room and what I see makes me even angrier. Here is Elian, buttoning his shirt up and I can't help the barrage of jealous thoughts flow through me. The first being: obviously they've just had sex. He's getting dressed, she was barely dressed when she left...How long has this been going on? And who the hell else is this guy sleeping with? \n\n\"Guess you already had your feed n' fuck,\" I say; my voice makes his head snap up and for a moment I'm startled by the intensity of his gaze. I steel myself and continue, \"So I guess I'm not needed here after all. You come near me again and I'll shove a crucifix so far up your ass you'll taste the metal.\"\n\nHm. So much for being in control and calm. As it turns out I'm extremely angry.\n\n\"I don't really have a desire for anything up my ass.\" He bites back quickly, \"And I don't know what you're talking about. So maybe dial down your crazy for tonight and start speaking in a normal way or I'll slap some sense into you.\"\n\nHis threat is filled with a careful sort of anger, the sort that's half threat and half test. His words are mean, his intentions are harm, and my wolf is ready to tackle.\n\n\"Don't talk like that to me, pig.\" I'm hissing now and I feel my wolf pacing, ready to pounce; to fight.\n\nHe comes to stand before me and he's laughing, except it's a cruel, mean laugh, \"You want to fight me? Okay, come on then. Attack me, hit me. Do what you need to so that you can get the crazy out of you. Maybe it's a wolf thing, or maybe it's a woman th-\"\n\nI don't let him finish the sentence. One moment I'm standing before him, the next I'm flying into the air and laying punches into him like I'm Bruce Lee.\n\n\"You're a real piece of shit, you know that? You get all mad at me because of a duty I have, and you go and stick your prick in anything that has a heartbeat and a pair of big tits,\" I punch my fist into his jaw but he doesn't seem to even feel it. His head doesn't even flinch at the contact.\n\nHow dare he think he can tell me what to do and then I see Michelle coming out of his room, barely dressed? What the actual hell? \n\n\"I don't know what the fuck you're talkin' about, you psycho bitch,\" He hisses, as I land a punch on his stomach.\n\nAfter that I don't think I manage to land a single hit on him, he's too quick and strong. I do what I can, using my momentum to push us to the floor, trying to trap him beneath me.\n\n\"Don't call me a psycho bitch, That's offensive and sexist,\" I try to claw him with my nails, but he manages to grab both my wrists.\n\n\"Fuck, Lilith, what is this actually about?\" His words stop me for a moment.\n\nThen...then his hands are no longer restraining me, and my hands, well they're no longer punching him. I'm rubbing my crotch against him, I feel overheated and ravenous for his touch. Suddenly he's frantically pushing my pants off, and I'm madly fumbling with the fly of his pants, desperate to have him. Then he's rooting up into me, impaling me on his cock and I'm desperately thrust down into him, riding him like he's a stallion.\n\nYes, my wolf preens, she's delighted by this turn of events.\n\nI throw my shirt and bra off, I need to be naked, I need him all over me, his touch, his scent. Growls have given way to heavy breathing and moaning. I buck up against him, taking everything I can. I reach forward and tear his shirt off. Yes, tear - like some kind of animal. Elian doesn't seem to give a shit though, just keeps thrusting up into me, red eyes flashing is raw need.\n\nThen I realise, this is good - actually it's great - but I need something more. The wolf inside is prowling; restless. She wants something different now, something...of a different flavour.\n\n\"Elian,\" Is what I can manage to say, \"I need...please,\" I'm moaning, maybe I'm begging, hips undulating on top of him, pussy clenching in need. I don't need to say anything further apparently, because he responds.\n\n\"Okay,\" His voice is soothing, his face understanding. He flips us, position me face down, legs spread on the floor, my entire body flat. His large heat is on top of me in a matter of seconds and I can feel his cock covered in my liquid entering my tight ass. I relax into it, accept it. It's what I need and he knows this.\n\nThe wolf is contented, delighted.\n\nBetter, she whispers, yield to your master. \n\nHis thrusts are rough and merciless and I need that too. He ruts into me until my knees and hips are sore from rubbing against the carpet, until my little ring is burning and my pussy is throbbing in need.\n\n\"Fuck me harder. Use me,\" I'm begging; I should be embarrassed but I don't care.\n\n\"Shut up, bitch,\" he hisses, shoving my panties into my mouth as he continues to relentlessly fuck me. It's perfect, just like that he gets it.\n\nHe's uses me until I ache all over, until all I can do is shake and cry. With a final jolt of his hips, Elian spills himself inside of me, leaves me burning and throbbing between my cheeks.\n\nI want release but at the same time, I want this. This total lack of control, this total denial over my need. It's delicious, warm and aching. I'm begging him, praying to the vampire to cum, but it's part of a game, I realise.\n\n\"In five days,\" He whispers, taking the gag out of my mouth, and my jaw is able to finally relax, \"In five days time I'm going to make you cum so hard you forget your own damn name. Your orgasms belongs to me now.\"\n\n\"That a threat?\" I manage to muster lamely, my face buried in the carpet of the floor. It's possible that I can't move my body right now.\n\n\"Yeah,\" he gives my ass a resounding slap, and I feel my clit throb in response. He continues, \"Tomorrow, I expect to see you here promptly at eight. Don't be late again. For every minute you're late, it's an extra day you don't get to have an orgasm.\"\n\nOh wow - his words send a powerful pulse through my cunt. I can feel ever cell in my body practically leap at the thought of it.\n\n\"Fine,\" I say it like It's a punishment, but honestly it's hot.\n\n\"I was thinkin' there should be other rules too,\" Elian's voice continues. My body relaxes as his large hand runs down from my neck and down my back. He repeats this action over and over again, leaving a trail of gooseflesh in its wake.\n\n\"How many?\" I manage to ask. I'm amazed I can even speak at this point, I'm a mix of sleepy, horny and relaxed.\n\n\"Few more. No masturbation between our sessions,\" he places a kiss on my shoulder and picks me up, taking us both to the bed, \"Unless I give you permission. And no one else.\"\n\n\"What about Eric?\" I ask, as he leans back to sit against the headboard, bringing me to lay back against his chest.\n\n\"No,\" He's voice is angry, he presses his mouth against my neck and nips - scrapping his fangs threateningly against my neck. The action has me crying out in delight and surprise. It sends a shiver straight to my breasts. With one large arm around my waist, he brings his other hand to wedge my thighs open.\n\nMy body tightens in anticipation and I'm expecting many things. A rough slap on my sex? That's not one of them. As the slap stings my pussy, I squeal, trying to move away, trying to close my legs. He's much stronger than I am though, especially in my weakened state and he easily overpowers me.\n\nElian moves his other arm from around my waist, and in a matter of seconds both his large hands are now wedged between my thighs. His fingers are surprisingly gentle and delicate. With one hand he spreads my pussy lips, exposing me completely. With the other he brings a finger to stroke my clit, gently coaxing it out of it's shell.\n\nOh God, that feels so fucking good. \n\nI squirm and sigh as his finger continues to swirl around the aching bundle of nerves, working the little nub until it hardens and swells. I can feel it ache and practically vibrate with the need for release. I'm so close. ",
        "\"Do you want this?\" He whispers in my ear, fingers expertly playing between sensitive flesh, making me hot everywhere, tremors coursing throughout my entire body.\n\nDo I want this? Is he kidding? \n\n\"Y-yeah,\" I manage. Elian brings two fingers to scrub and tease my stiff little bead until I'm sweating from the pleasure and intensity of it. I can feel the stirrings of orgasm beginning to circle it's way from my stomach to my sex.\n\n\"Such a beautiful pussy,\" Elian's words curl across my ear, his stubble is abrasive against my neck but all it does it make me hotter, \"So lovely and responsive. I want you to cum, Lil, I want your pleasure just as much as you do.\"\n\nI can feel liquid arousal dripping from my hole, down, down between my ass cheeks and I squirm, I'm so close to coming! His words and his touch send me closer still.\n\n\"Yeah?\" I manage to ask.\n\nHe surprises me with a series of sharp slaps on my cunt which stings my little nub, my orgasm now a retreating memory. I want to scream in frustration.\n\n\"Yeah, So don't fuck the Wolf King. Fuck the Wolf King and I can't give you the pleasure we both want. You understand?\"\n\n\"Fine,\" I practically sob at the frustration of not having release, \"But don't I get to give you rules?\"\n\n\"No,\" His quick response is painful, possibly more painful than his slaps.\n\n\"So you can fuck whoever you want, and I have to just be at your beck and call?\" I manage to pull away and he lets me this time. I push my hair behind my ears and turn away from him - the best I can do is curl to my side, my back to him. I'm too tired to walk, but I don't want to touch him right now.\n\n\"Yeah.\" How can he sound so confident?\n\n\"Can you at least tell me who else you're seeing?\" I don't know why I want to know this, maybe because my brain is so fucked up from this entire exchange. It's possible my mind has melted along with my body.\n\n\"Why does it matter?\"\n\nIt burns like a hole through my chest. I can't believe how upset I am at this. I know I'm acting like a jealous girlfriend, when, well, we've only known each other for a few days. But it's painful and my wolf is thrashing around - she isn't satisfied with this response. With the beast carrying on it's exhausting me further. I'm not sure if I can physically move at this point.\n\nFood, I need food. \n\n\"Well sorry, but I refuse to agree to that,\" I whisper into my knees. Although I'm quiet, I know he's heard me because the next minute he's all gentle with soft caresses, stroking my hair, bringing me back into his arms and kissing my back, neck and shoulder. I don't know if it's an apology, but it makes me even sadder.\n\n\"Don't,\" I say, \"I'll take the sex, I know what I'm getting with that. But don't be nice.\" I swallow, and add because I want him to know I'm not here in his bed willingly right now, \"I'd move but I can't really walk right now, with my wolf thrashing about, and with what we just did - my body doesn't have the energy.\"\n\nI realise I am extremely hungry, but I'm too weak to move and eat. Should've eaten dinner properly. It's quite possible I'm headed for a massive low. Which in Wolf-speak means I'm a few hours away from going total-psycho, shifting into a wolf and killing a bunch of humans.  \n\n\"Okay, Lil,\" He says, big arms wrapping me up and pulling me tightly against his chest, \"I won't see anyone else.\" I fit so easily in his chest, and again it reminds me of just how big of a beast this man is. My wolf is rolling around inside, she doesn't give a shit about anything but being in his arms right now and it's pissing me off.\n\nHis sudden acquiescence makes me suspicious.\n\nI shake my head, \"I've done this before. Not the rough-sex stuff. The guy-I'm-seeing-making-a-promise-he-can't-keep thing. I don't want that again. I think I'm worth more than that. Don't promise me something you don't want to promise. Let's just...not.\"\n\n\"I'm not in the business of making promises I can't keep,\" Elian's response is gruff and I realise he's angry which annoys me. How does he have a right to be angry with me after everything? \n\n\"Sure,\" I sigh, \"Let's see how long that lasts,\" the sarcasm drips from me.\n\n\"Right, so our agreement is: You don't orgasm unless it's with me, you stop seeing anyone including the Wolf King, and you make sure you're on time every evening. I will not see anyone else as well. That agreeable to you?\"\n\n\"What, are you a bloody lawyer?\" I snort, \"Gonna write up a contract?\"\n\nHis mouth is pressed to my ear and he says, \"Yes, that's why Michelle was in my room, she was giving me the contract we've been trying to sort through for this ridiculous co-existence crap.\"\n\nAh. Ah Fuck. \n\n\"Oh.\"\n\n\"And instead of chucking a little tantrum and exploding all over the place, you could have just asked. I'd suggest that for next time.\" His nose nudges my ear and he drags his lips up and places a kiss on my temple.\n\n\"I hate you,\" the words tear from my throat before I can stop myself. Elian is too much, takes too much and expects too much. I feel like he's going to destroy me.\n\n\"Nah, I think you kinda like me, Lil,\" he teases. I manage to turn my head to look at him and am startled to realise he's smiling at me.\n\n\"If I weren't so weak I'd punch you.\" I growl, trying to ignore the way his smile makes my body flush.\n\n\"Hmm, that's no good. Let's get you some food so you can hit me if you want to.\" He kisses my hair gently, \"By the way, there was one more rule I forgot to mention.\"\n\n\"You're really pushing it, vampire,\" I hiss.\n\n\"Trust me, you'll want this one.\"\n\n\"What is it then?\" I roll my eyes.\n\n\"Safeword,\" he says.\n\n\"What's a safeword?\" the word is foreign to me as a concept.\n\n\"When things get too much, you say a word that means 'stop'.\"\n\n\"So why can't I just say stop?\"\n\n\"Because sometimes that's part of the play. You know, I say 'take it, slut.' or 'shut the fuck up, bitch' and hold you down, and you might respond with a struggle and a 'no', or 'stop, you villain'\" Elian replies, \"But you don't mean it, it's just sort of part of the act and if I stop it might ruin things. So to make it less confusing, it's best to pick a safeword you can use when it gets too much and you actually want to stop.\"\n\n\"Oh,\" I frown, \"I guess that makes sense. But so far you've been spot on with telling when I want to stop or not.\"\n\n\"But I won't always be. Sometimes I might get carried away.\" Elian shrugs, \"I'm glad that you've been okay with the things we've done. I thought perhaps the first time...\"\n\nHis mentioning of the first time we had sex peaks my curiosity - does he carry guilt? Our first time together hadn't exactly been consensual in the strictest sense. But I'd liked that as it had turned out - in fact have gotten off on the idea of it more times than I can count.\n\n\"The first time I enjoyed. Could have been better if you used more words.\" I finally say. That's true - it would have made a hell of a difference to the start of all of this if he'd at least asked verbally in some way. But then, I do wonder if I'd have liked it as much. It's not like I'd said no. Actually, I'd sort of rubbed myself against him and everything, I'd practically begged him for a second orgasm when he'd asked if I could handle another one...\n\nI try not to think about it too much - it gives me a headache and makes me feel like a terrible feminist. All I can honestly say is that I liked it. That's the important thing, right?\n\n\"I regret that I didn't ask you properly. I'm sorry,\" He says.\n\n\"I still liked it. I liked it a lot actually. As you put it, 'it was part of the play' and I liked how you played,\" I try not to blush, \"I guess I'll have a think about the safeword. Now get me some food, or I'm going to literally collapse and possibly go postal and kill a bunch of people.\"\n\n\"Of course,\" Elian flashes me a quick smile and for a moment it makes my heart stutter. What kind of witchcraft was that? He gets up, laying me gently down on the bed. I'm grateful as I can't move much at this point. Which in a way is a good thing - it means I'm still a while off killing humans territory. I watch him as he gets dressed. As he puts on a new shirt he speaks again, \"Have any particular food in mind?\"\n\n\"Something with meat.\" is my reply, \"The closest food to the den is a burger place on Market Street. That would be good.\"\n\n\"I won't be too long then,\" He nods, grabbing what looks like his phone and wallet and heading out the room - the door shutting softly behind him.\n\nAs soon as he leaves, a million thoughts run through my brain - the main one being: what the hell was all of that?\n\n\u2014\u2014\u2014\u2014\n\nAs per Elian's promise he's back in twenty minutes with three burgers and a side of chips and water. I'm into my third burger when I realise he's watching me.\n\nI swallow the meat and frown. It's possible he's staring because I look like a squirrel stuffing it's cheeks with nuts.\n\n<br >\"Stop staring at me, it's uncomfortable.\" I say between mouthfuls.\n\n\"Just amazed at how big your mouth is,\" Elian says casually, red eyes still fixated on me \"I can't stop staring. I wish I could.\"\n\n\"I'm leaving this room as soon as I can walk,\" I mutter taking another bite of the burger. He can stare all he wants, I didn't realise how starving I was and I have no plans to slow down or take smaller bites.\n\n\"Sure,\" He shrugs, \"Don't care what you do as long as you're back here at eight tomorrow evening.\"\n\n\"I'm not in the way of some orgy sex romp?\"\n\n<br >\"Nah, it was cancelled. All the women pulled out because my dick's too big. It's a curse.\"\n\nI realise he's joking and it's startling. For a moment I'm startled by the glint of his fangs as he laughs. Weird that he has four of them...\n\n\"The shit you say...\" I take another bite of burger not caring that I'm talking with my mouth full, \"It was better when you spoke less before. More mysterious, much more sexy.\"\n\n\"Yeah, watchin' you eat has kinda taken the mystery out for me too.\"\n\nI know I'm smiling by the time I'm finishing my burger. I finish the rest of the chips and water. When I'm done I feel better, more in control and I can certainly move my legs now.\n\n\"I better go,\" I shrug, putting the rubbish in the bin under the desk. I move around to grab my clothes strewn all over the floor, shoving my shorts and shirt back on.\n\n\"Not gonna steal my shirt again?\" he asks - I turn and stare at him. Even with his hard eyes, crooked nose and sharp jaw, he somehow manages to be sort of...handsome? Nope - I'm wrong. It's clearly the weird post-coitus hormones making me think I actually like him.\n\n\"I forgot I still have that. I'll bring it back tomorrow,\" I nod, adjusting my clothes properly.\n\n\"You keep it, looked better on you anyway,\"\n\nI don't believe him, but just shrug anyway. I'm not in the mood to drag out this conversation. The sooner I leave his presence the sooner I can gain control of my head. This guy seems to have some sort of magic over me and even though my wolf loves it, it's alarming to the more human side of my brain.\n\n\"Good luck with your contract.\" before I turn to leave I remember one more thing, \"Butterfly,\" I say.\n\n\"Hm?\" Elian tilts his head, looking at me, brow furrowed in confusion.\n\n\"The safeword, I was thinking 'Butterfly'. I like Butterflies, so it'll be easy for me to remember.\"\n\n\"Butterfly,\" Elian says sampling the word in his mouth. He looks at me and nods, \"See you tomorrow at 8.\"\n\n\"See you then.\"\n\nI make my way back to my room like I'm a robot and sit on my bed. I'm not sure what just happened. I think I might have just entered a relationship?\n\nI lay in my bed and think long and hard about what just happened. If there's anything I've come to terms with tonight it's that I like the way Elian fucks me. I like the way he knows my needs, before even I do. His sexual energy is almost too much and simultaneously just the right amount.\n\nI'm just not sure if I like him...hell I don't even know him. Although my wolf certainly has no reservations about him, instead she's filled with contentment and is rather pleased with herself having found someone for us that seems to satisfy our needs.\n\nI wonder what tomorrow will bring and what he has in mind over the next five days. I know I should be more pissed about how domineering and controlling he is. Unlike the other alpha wolves this control doesn't seem to be about putting me in my place and keeping me in line. Instead it seems to be focused around desire and need. I think about his words, about what he said with him wanting my pleasure just as much as I want it.\n\nIs there such thing as a good kind of control when it comes to sex and intimacy? I'm not sure, the only thing I am sure about is this: If it's a relationship, it's the weirdest relationship I've ever been in.\n\n \n"
    ],
    "authorname": "FreeTheDancingLlamas",
    "tags": [
        "clitorial stimulation",
        "anal sex",
        "erotica",
        "kissing",
        "orgasm denial",
        "safeword",
        "sex",
        "teasing",
        "vampire",
        "werewolf"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/freak-ch-03"
}