{
    "title": "Descent into Depravity",
    "pages": [
        "This is the first in a series of stories of a woman who learns, shortly after the death of her husband, that he had a secret life, a depraved life, that he never shared with her; and of her descent over the years that follow into the depraved lifestyle of her late husband. The categories the various chapters will posted in will vary depending on the specific depravity Alice is exploring. \n\n***** \n\nMy name is Alice. I was a thirty-year-old school teacher when my husband died two years ago. I'm writing this because my therapist recommended it. I have been depressed ever since my husband died. My therapist suggested I keep a diary recording my activities and emotions. At first I resisted, but then I thought, why not? I majored in English in college. I've always liked to write, but I'm not sure I want to show this to my therapist, even though I'm willing to share it with all of you on this anonymous basis. \n\nWhen you live with a man for almost ten years you think you know him\u2014I mean really know him. You are sure he has shared all his secrets with you, as you have with him, and that there is nothing in his life that would surprise you. \n\nAfter my husband, Larry, was killed in a car wreck, I learned that there was a lot I didn't know about him, a lot that he hadn't told me during our ten-year marriage. I had been living under the assumption that he and I were a typical suburban couple. Larry sold life insurance from an office in the city, and I taught English in a nearby junior high school. Larry made a good living, and we had a nice house in a suburb just over the hills from Oakland. \n\nWe had no children, by choice, and looking back now I can see that we had a pretty bland, plain-vanilla sex life\u2014mostly missionary position sex on Friday night with just enough foreplay to get my motor running. I realize now there could have been more to our sex life, a lot more. But I had been telling myself for years that what we had was normal. I believed my own rationalization and thought it was just the way things should be. I also believed Larry was totally satisfied. Sex just wasn't an important part of our lives, and we were both happy with that\u2014or I thought we were. \n\nI was devastated by Larry's death. It was like someone suddenly ripped away half of me. Larry was the person I used as a sounding board for anything I was uncertain about, the person who would patiently listen to my frustrations with work or with my family or any other aspect of my life and then carefully explain to me why it wasn't my fault and how to avoid the problem in the future. I truly thought he was my better half. It wasn't just a silly saying for me. And now he was gone. I cried nightly for months, and I struggled to keep it together at work, retreating several times a day to a stall in the ladies' room to sob silently and hope that I was alone with my grief. \n\nThen about six months after Larry's death something happened that had a profound effect on my life. The lawyers probating Larry's will needed information to file closing tax returns for his estate. Larry had managed our finances and kept all our financial records, so I was struggling to find everything they needed. But I remembered he had a laptop in his home office. I had never paid any attention to it, assuming it was something he used for work. But the insurance firm had told me that they had his office laptop, and there was nothing personal on it. So I went looking for Larry's home computer in search of the information the lawyers wanted. \n\nI found the computer easily enough\u2014in a drawer in his desk. The next challenge was figuring out the pass code to open it up. I tried a few phrases I thought he might have used without any luck. Then I remembered I had read a lot of people foolishly write their access code on a piece of tape on the back of their computer. Sure enough, there it was. The code should have been my first clue that I was entering Larry's very private life. It was \"Cocksucker.\" That wasn't language he would have used around me, and cock sucking wasn't in our limited repertoire of sexual activities, so I couldn't believe that was a password, but I was desperate and tried it. To my shock it worked, and what I found after I entered the oh-so-private world of Larry on the laptop was even more shocking. \n\nI found the financial records the lawyers were seeking almost immediately. Larry was very organized. He had a folder titled \"Financial\" with a variety of neatly organized sub-folders that covered every aspect of our financial life for at least the last seven or eight years. I spent my Saturday afternoon sorting through the files and sending the relevant ones on to the lawyers. It was dull work. \n\nJust as I was finishing up the phone rang\u2014my friend Joan calling to invite me to dinner with her husband. I had been rejecting people's attempts to draw me out of my darkness for months and I started to do it with Joan, almost as a matter of reflex, but Joan wouldn't buy it. She insisted I join them, and I reluctantly agreed. \n\nJoan's husband, Herv\u00e9, had started his career as a chef. His first French Bistro was so successful that he now spent his time managing a collection of ten or twelve restaurants he owned around the country. He loved to cook. It was his passion, and dinner was delicious. Herv\u00e9 kept the wine flowing, and Joan kept the conversation going without delving into my grief. It was my first enjoyable evening since Larry's death. \n\nWhen I got home I changed into a lightweight nightgown, but I wasn't ready for sleep. Even though I was already a little tipsy from the wine at dinner, I went to a box of wine in my refrigerator and poured myself a glass. It didn't take long to surf through the whole channel list on the TV without finding anything of interest. \n\nTo this day I don't know why, but I decided to look at Larry's computer. I really had no expectation there would be anything on it more interesting than the dull financial records I had been looking at. After all that was Larry. His life revolved around our financial situation. He never seemed to have any interest in anything else, but I remembered that there had been a file headed \"Personal\" that I hadn't looked at. Earlier I had thought about opening it, but that seemed like invading his privacy, something I had been trained as a child never to do to anyone. \n\n\"But he's dead, so he isn't entitled to privacy any more, and I want to look,\" I told myself. I never would have told myself anything so preposterous if I had been sober. But I wasn't. I was drunk and feeling a little pissed at Larry for getting himself killed (the wreck was his fault), so I poured myself another glass of wine and opened the folder called \"Personal.\" It was a life-changing event. Larry was not the man I thought he was, not even close. \n\nThe folder was organized with a number of subfolders (just as the financial folder had been organized). The one that immediately caught my attention was labeled \"Porn Pics.\" \n\nReally? Larry had a collection of pornographic pictures? \"No fucking way!\" I said aloud. (I really must have been drunk. I was using language the kids I taught in junior high school used when they thought the teachers weren't listening). \n\n\"Do I really want to look at this?\" I asked myself (I had taken to talking aloud since Larry's death, just saying whatever was running through my head without censorship since there was no one to hear me. It was another thing my therapist had recommended). \n\n\"Fuck yes,\" I responded aloud as I double-clicked on the folder. When it opened, in typical Larry style there was nothing but a collection of sub-folders. My god the man was obsessively organized. I mean, if you're going to collect porn, do you take the time to organize it by categories? Apparently if you were Larry you did. \n\nThere was nothing discreet about the folder names he used at this level: \"Fucking;\" \"Cock Sucking;\" \"Cunnilingus;\" \"Gay males;\" \"Lesbians;\" \"Threesomes;\" \"Anal;\" \"Masturbation;\" \"Toys;\" \"BDSM;\" \"Public Sex;\" \"Exhibitionists;\" \"Voyeurs; \"MILFs; Cum Shots;\" . . . You get the idea. It was a long list of sub-folders. Who knew there were so many ways to have sex? I certainly didn't at that point in my life . . . but I was about to learn. \n\nI opened some of the sub-folders and looked at a few of the pictures. Yup, they were exactly what the label said they were and extremely graphic. Nothing was left to the imagination. \n\nAs I leafed through Larry's porn folders I continued to sip my wine. At first I was shocked and dismayed. How could Larry have done this in secret? Now I was mad at him for two reasons: for dying and leaving me alone, and for being a pervert! I was in even less of a mood for sleep than I had been before I started snooping through Larry's computer, so I went to the fridge and refilled my wine glass. \n\nAs I was walking back from the kitchen, I had another shock. \"Fuck, I'm horny,\" I said. I was shocked. It had been six months since I even thought about sex, much less had an orgasm, (and I had to admit, given the way Larry and I conducted our sex life, orgasms had been few and far between before his death). \n\nI sat down at the computer and continued to drink wine and leaf through the porn folders. The more I snooped into Larry's depraved files the hornier (and drunker) I got. I could feel my nipples swelling and when I looked down at my nightgown they were pushing out the fabric in twin peaks. I took another sip of wine, and as I lowered the glass I let the rim brush the thin fabric covering one of my engorged nipples. I shivered and the muscles in my pussy contracted in response. \n\n\"Oh fuck!\" I said to myself. \"What am I doing? Looking at Larry's porn collection and making myself horny. Have you no morals at all, Alice?\" \n\n\"Fuck morals,\" I responded to myself. \"I haven't felt like this since Larry died, and this feels really, really good.\" \n\nI continued to leaf through the collection. Another glass of wine. \"This is so nasty. I'm loving it. I never did anything like this with Larry . . ., but he did, the pervert!\" \n\n\"So that makes you better than him? Just because he didn't tell you?\" \n\n\"I don't care. He was a pervert. I'm just having fun.\" The logic of that likely escapes you, but it made sense to me at the time. Wine and lust will do that for you. \n\nI had taken one hand off the keyboard and was using it to massage my tits through the thin fabric of my nightgown. It felt delicious. I would cup each breast and then massage it with my fingers. Then as I withdrew my hand, I let my fingers drag across the engorged nipple. The sensation when I stroked my nipple was fantastic, sending a shock to my pussy each time. I was squirming in my seat pushing my pussy lips together with my thighs as I moved back and forth in the office chair. \n\n\"Alice you're masturbating and you're enjoying this. You're as much of a perv as he was.\" \n\n\"I don't care,\" I told myself. \"So what if I'm being a pervert? It's been way too long, and I need this. Oh fuck how I need this,\" I said aloud, still struggling to justify my conduct. \n\nNow I had a hand on each breast massaging it and stroking the nipple through the cloth of my nightgown. Without a hand to advance the computer, I was just staring at one image on the screen\u2014a woman sitting on a man, her legs spread lewdly on either side of his and his cock pushed into her shaven pussy, his balls pressing firmly against her. She had her hands on her big soft breasts holding them out toward the viewer and her head was thrown back, her eyes closed and her mouth open in what I assumed was a scream of ecstasy as an orgasm tore through her. \n\nEarlier I had noticed a sub-folder titled \"Slide Shows.\" I pulled a hand away from my breasts long enough to open it. It contained a large number of files that were identified only by a date\u2014no indication of the perversion documented within. The dates went back at least seven or eight years before Larry had died. \"That fucking pervert,\" I said. \"He's been collecting this crap for at least seven years!\" \n\nI finished the last of my second (or was it third? fourth?) glass of wine as I scrolled down through the files. When I set the glass down (after again dragging it across my engorged nipples) I selected a file at random\u2014January 15, 2011. I double-clicked it and leaned back in the chair watching a series of lewd pictures scroll across the screen. Much better. Now I had both hands free to masturbate. \n\nI pulled my nightgown over my head and tossed it over my shoulder. That left me with nothing on but my panties. As the lewd photographs scrolled slowly by I cupped my breasts from beneath and used my thumb and forefinger to rub and softly pinch my nipples. \"Oh fuck, this feels good,\" I said. \n\nEventually I came to the end of the slide show. I reluctantly pulled a hand away from one of my breasts and used it to maneuver the mouse to open the next slide show. It was more of the same and totally satisfactory given the mood I was in. If Larry had shown me this material when he collected it, I would probably have been outraged with him. Now I was reveling in it. \n\nInstead of bringing my hand back up to my breast I dropped it to my naked thigh and slowly slid it up towards my white panties. I wasn't surprised to discover they were soaked. For a while I used that hand to stroke and massage my pussy lips through the fabric of my panties, but when an image appeared on the screen of a nude woman lying on a bed, her legs spread lewdly, and her hands engaged in masturbating her naked pussy, I knew the panties had to go. I raised my hips and dragged my panties off. Now completely naked, I leaned back in the chair and spread my legs. I used one hand to push my unruly bush aside and spread the outer lips of my pussy to give two fingers of my other hand access to the sensitive tissue below. Then I just lay there, tilted back in the chair stroking my dripping pussy and gasping every time my fingers touched my clit. \n\nMy god this felt good! I wasn't in any particular rush, so I avoided my clit, knowing it would push me over the edge. The next slide show seemed to focus on women masturbating. Just what I needed. As I watched the filthy pictures role by on the screen I varied my technique by sliding a couple of fingers into my cunt. It was dripping. I rotated the fingers in my cunt so the tips pressed against all sides of my vagina. There was a spot on the front wall that felt especially good. \n\nAs I neared the end of the masturbation slide show (for the second time), I realized that I was approaching the point of no return. Leaving two fingers in my cunt just pushing against the spot on the front wall, I used my other hand to begin rubbing my clit. It didn't take long before I tipped over into the kind of massive orgasm people have when they have been abstaining for months. I screamed loudly and felt liquid gush from my cunt. I had never squirted like that before. \n\nFor a long time I just lay in the chair, enervated by the force of my climax (and all the wine I had consumed). Now I wanted sleep, but I couldn't sleep slumped in the chair in Larry's office. I pulled myself together enough to shut down the computer, use my undies to clean up the mess my squirting had made, and then I tottered off to bed, leaving my nighty and soggy undies lying in the den. It was the best night's sleep I had experienced in months. \n\n* * * * * * \n\nI awoke the next morning with a nasty little headache, but less than what I probably had earned, given how much wine I had consumed the night before. I drank a couple of glasses of water and chased them with about three ibuprofen. The recovery wasn't immediate, but it was better than I deserved. Fortunately it was Sunday so I didn't have to go to work. \n\nI looked in the refrigerator for something for breakfast and came to the realization that there was nothing of interest. For most of the last six months my solution to that problem would have been to skip breakfast, but this morning I was hungry and I decided to go out. This was a milestone in my recovery process. I went to an IHOP and ordered a stack of hotcakes with a side of bacon. I loaded the hotcakes with butter and maple syrup. It was way more than I would normally eat, but I had always liked this meal and I felt like indulging myself. Besides, I was planning on taking my usual 8-mile Sunday afternoon run, so a little carbo-loading was in order. \n\nI was sitting with my back against a wall with a view of most of the restaurant. As I ate I indulged in one of my favorite pastimes\u2014people watching. An IHOP on Sunday morning is a cross section of Middle America. There are families just out of church\u2014everyone dressed as well as their budget will allow, children scrubbed and shining, some behaving and others fussing; young couples who looked like they were just out of bed, desperate for that first cup of coffee; older couples enjoying a once a week break from the usual grind; even a few solos like myself. I was having fun making up stories about each of them\u2014this man a widower, but unlike myself a widower of many year's experience settled into an acceptance of his aloneness; this couple recently married (you can tell from the gooey looks); another couple, last night's hook-up from a club, each hoping they remembered their partner's name. The variety was limited only by my imagination, which I knew bore little relationship to reality. \n\nEventually my mind wandered back to last night and Larry's computer. The first problem was just how much further was I going to delve into Larry's personal life. There were lots more sub-folders below the Personal folder. Just how much more did I want to know? I thought about just throwing the computer off the Golden Gate Bridge and letting the past be past. But given the financial records on the machine, that didn't seem like a good idea. So if I was going to keep the machine around how was I going to resist the temptation to dig deeper into my late husband's perverted personal life. Just how twisted was he and how much did I really want to know? \n\nI laughed as I admitted to myself that the success of my efforts to avoid digging further into Larry's past would be dependent on my ability to limit my drinking and keep my libido tamped down. The first was arguably doable. After all I wasn't a lush. But how do you control how horny you get and when? I knew from last night's experience that when my libido took over I was going to go back to that computer to see what other kinds of erotica I could find. This was going to be a challenge, I told myself, as I signed a debit card slip for my breakfast and gathered my things to leave. \n\nAfter breakfast I spent some time working on my lesson plans for the upcoming week. I didn't think much about Larry and his computer. I truly loved my teaching job and I could easily lose myself in the work. \n\nAfter completing my prep for the upcoming week I changed clothes; shorts, and a sports bra for a run. My headache was gone and I needed the endorphins a good long run would serve up. When I run I often try to focus my mind on the work I have coming up. Not the details of lesson plans, but the intangibles. Which kids seem to be having problems and what can I do about it, and how do I keep my super-achievers challenged, all in the context of the coming week's lesson plan. I started out doing that, but my mind kept drifting away\u2014back to the lurid pictures my husband had saved on his computer. I appreciated the money and investments he had left me when he passed, but I wasn't so sure about the legacy on his computer. \n\nAs I ran my mind focused less and less on my frustrations with Larry's secrecy and more simply on the eroticism of the pictures I had spent Saturday evening staring at. By the time I finished I was dripping wet from the heat and very aroused. ",
        "I stepped into my bathroom and looked at myself in the floor to ceiling mirror. My sports bra was about half soaked with sweat (normal for a run in our climate in the late spring and summer) but my nipples were engorged to the point of looking like they wanted to tear a hole in the fabric of the bra. I stripped my bra off, pushed my shorts and panties off my hips, and tossed everything into a hamper. Now I was standing naked before the mirror, except I still had my running shoes and socks on. I laughed. What is it I asked myself that I had always found so kinky about a woman naked but for her running shoes. I released my ponytail and let my long dark hair, damp from running like the rest of me, fall about my shoulders. I was in a silly mood and I vamped a bit, pulling a strand of my auburn hair across my upper lip like a mustache. I was leaning back on one foot with the other knee bent and the shoe raised to the toe. Then I broke up laughing at my ridiculous pose. \n\nMy mind went back to the porn of last night and I stood, still facing the mirror, but now holding both my C-cup breasts, pushing them out towards the mirror as though to a photographer . . . or a lover. Mmmm. This felt nice. Now I was using my thumb and forefinger to rub the engorged nipples on each breast. The sensation was marvelous and there was something about watching myself in the mirror standing there, naked but for my running shoes, masturbating my tits. \"Yes! This is so fucking hot! So nasty!\" I said aloud. \n\nI backed away from the mirror until my butt hit the counter behind me. I hopped up on it so I was sitting facing the mirror, my legs spread carelessly and my feet swinging a bit. I pushed my running shoes off so they would stop banging against the cabinet doors and then looked at myself again, now naked but for a pair of short-top white socks. \n\nMy bush was glistening with the sweat from my run. Was it just the sweat? I ran my fingers through it and confirmed that it was by no means all sweat. Some of it had the slippery lube feel of a leaking pussy. I pulled my fingers to my nose and confirmed the source by the smell. Then, still clowning and imitating the porn I had watched, I slipped the fingers into my mouth and sucked the pussy juices off of them. Hmm. The flavor was okay. I had never tasted it before. I was watching myself closely in the mirror and I sucked slowly and carefully like I was working on a cock (not that I really knew that much about cocksucking). I was getting more aroused and less inhibited by the minute. \n\nNow I pulled one heel up on the counter and let my knee fall to the side. I used the fingers of one hand to push the thick hair aside and let the other hand begin to masturbate my pussy. As I watched myself masturbate in the mirror I began to talk to myself. \n\n\"Oh you are a horny slut, aren't you, Alice? You know it's wrong to watch yourself masturbate like this don't you?\" \n\nI slid a finger into my cunt and responded to myself, \"Who says it's wrong? Anything that feels this good can't possibly be wrong.\" I slipped a second finger in and pressed both fingers against that special spot on the front wall. I sucked in air with a hiss as I savored the delicious sensations flowing from my cunt. \"Besides,\" I continued, \"How can I be a slut? That implies I'm fucking a lot of different people and I'm not fucking anyone and haven't since before Larry died. Horny I'll admit to. But not a slut.\" Leaving my fingers of one hand in my cunt, now sliding in and out like a small cock, I begin using the other hand to stroke my pussy lips and lightly massage my engorged clit. \n\n\"Yeah, well you would be a slut if you had anyone to fuck,\" I told myself. \n\n\"Ahhh! Ahhh!\" I had brushed my clit a bit harder than I should have and almost tipped into a climax. I didn't want that to happen. I was enjoying this too much to just rub out a quick orgasm. \n\n\"Well, maybe I will fuck a lot of people,\" I said, continuing my conversation with myself. \"So what! Larry's gone and he wasn't worth much for fucking when he was here . . . Yeah, maybe I should fuck a few people.\" Now I had both heels up on the counter. I had stripped my socks off because they kept sliding off the tile. My legs were spread as wide as I could get them and I was finger-fucking myself furiously with one hand and rapidly rubbing my clit with the other. The image in the mirror was . . . was . . . \"Oh fuck, I can't think of a word strong enough, nasty enough,\" I said. Finally I told myself I looked \"depraved,\" which was clearly an overstatement compared with what came later. \n\nI could feel myself teetering on the edge of an orgasm. \"Oh fuck. Here it comes. Here it comes. Oh fuuuuuuuck!\" I screamed as a good solid orgasm ripped through me. \n\nI let my feet drop to the floor and then the rest of my enervated body slowly slid down to join my feet on the cool tile, where I lay, coiled in a sweaty, sticky heap. Eventually I recovered enough to take a shower. The shower was a long one\u2014the water cool at first until my body temperature cooled, and then a hot shower that I let soak away the fatigue of my run and my energetic masturbation. \n\n* * * * * * \n\nI was watching some mindless TV after dinner, when a random thought hit me. \"I wonder if there is a way I can hook up Larry's computer to this big TV set.\" Why? Duh! Because I thought his porn would be so much better on the big screen, and the couch would be so much better to recline on than Larry's office chair while I . . . well, you know. \n\nI spent the next couple of hours fiddling with the TV and the computer and digging through the Internet for solutions, and eventually I made it work. I was tempted to pull up some of Larry's porn, but it was approaching midnight, and I had to work in the morning. Big screen porn would have to wait until Monday night. \n\nWork the next day was good and it was bad. \n\nThe only problem came in fifth period when I was minding a class of eighth graders doing self-directed study. I didn't have to really do anything except sit behind a desk at the head of the classroom and make sure that they remained focused on their work. That was when my mind started to wander, not back to Larry but to the porn legacy he had left me. I was just sitting in the classroom and my mind was replaying a specific video I had watched in which a woman lovingly shaved another woman's genitals and then ate her to a screaming climax. \n\nI wasn't focused on the sex. It was the shaving of the woman's bush that fascinated me. I realized as I sat there staring mindlessly at the eighth graders that what I wanted to do was to go home and shave myself as bald and shiny as the woman in the video. I knew that if I were to look at my pussy right now, I would barely be able to see my pussy lips lost in a tangled bush of springy, twisted hair. I wanted my lips to be clearly visible, especially when swollen with lust. From there my mind wandered to things that a man (or a woman) could do to my sex exposed like that. \n\nI became incredibly horny sitting there thinking about shaving my pussy. By the time the class ended I wanted to run to the restroom and bring myself to a quick climax. \"No,\" I told myself firmly and quietly as the last child hurried from the room. \"I'm not going to do that now. I have another class to teach starting in five minutes. I'll behave until I get home.\" \n\nI'd like to say I was 100% focused on my teaching in period six, but that wouldn't be true, and you wouldn't believe me anyhow. We all know that once your mind begins to focus on sex, it's very hard to get it to return to other topics without the benefit of an orgasm and the release it provides. But I did my best. \n\nOnce sixth period was over I cleaned up my things and walked quickly to my car. I told myself that I needed to focus on my driving and I more or less did, other than rubbing my pussy through my slacks each time I was stopped at a traffic light. There was one light at which I was waiting along the left side of a cement truck. I knew the driver could look right down at my legs. I laid my hand in my lap and held it still when I thought he was looking at me. If he was looking forward, I was rubbing my sex. Once the light changed I drove quickly away from the slow lumbering truck, almost shaking with fear that he had seen me masturbating. \n\nBy the time I got home the only thing my addled mind could focus on was sex. Dinner would have to wait. I stripped off my work clothes, including my now soggy panties. I toweled myself dry and got ahold of an old electric razor of Larry's. It had a beard trimming attachment that I used to trim away the bulk of my pubic hair. As the tub filled with warm water I stood looking at myself in the mirror. My swollen pussy lips stood well above the remnant of my bush remaining after my haircut. I was so horny even my swollen clit was protruding from between my newly liberated lips. Now I just had to take a razor and finish the job. I was so fucking horny. I climbed into the tub and lay back letting things soak in the warm water while I wondered what it was going to be like to go to work with a naked pussy the next day. You're going to wear panties of course,\" I told myself. \"You're not depraved.\" \n\n\"Well, just a little,\" I whispered in response. \n\nI started with my legs, just for practice. Then I soaped the area I was really interested in, got out a new razor and carefully stripped away all the stubble remaining from what I had done with the beard trimmer. After washing away the soap, I climbed out of the tub, dried myself, and put lotion on the tender new skin I had exposed. Then I donned a lightweight robe I had taken to wearing around the house of late. It was silk and ended well short of my knees. It almost felt like I was wearing nothing at all, especially with the sensation of the air across my newly shaven pussy. Is this, I wondered, what it feels like to be nudist? \n\n\"No,\" I said. \"You have to go outside to really be a nudist.\" \n\n\"Okay. Let's go.\" \n\nI went to the kitchen and poured myself a glass of wine and then stepped out onto our back porch. Our porch was sheltered from the neighbor's view, so there really wasn't any way someone could be looking at me, but that didn't matter to me. I was outdoors on a warm late afternoon and I felt naked, even if it wasn't completely true. \n\nI lay back on a chaise longue, setting the wine glass alongside. After a couple of sips of wine I released the belt on my robe. Now each time I reached down for my wine, I could feel my robe sliding away from my body. After about three more drinks my robe was completely open and my wineglass was empty. \"Oh my. I should have brought the bottle,\" I said. \n\nI hopped up and walked casually back to the kitchen, my robe open and my boobs swinging as I walked. I smiled as I thought about how shocked Larry would be to see this. Returning to the deck with the bottle, I refilled my glass and lay back on the chaise longue enjoying my nudity. \n\nAfter another glass of wine, I began to softly massage my breasts. \"Oh fuck, that feels nice,\" I said aloud. Then I remembered that even if the neighbors couldn't see me they could hear me. \"Naughty, naughty,\" I whispered. \n\nNow I was roughly massaging my tits and pulling on my engorged nipples. \"Oh fuck yes,\" I whispered. Then I let my right hand drift slowly down to my newly shaven pussy. \"Oh, so nasty. No hair. No hair at all. Just my fat, swollen, slippery, wet pussy lips, and . . . gasp . . . my hard, needy clit.\" \n\nNow I had my legs pulled up so my heels were on the cushion and my knees spread as wide as I could get them. Both hands were busy with my sex now, three fingers of one hand relentlessly fucking my drenched cunt, and the fingers of the other hand lightly massaging my clit. \n\n\"Oh, oh, oh. Yes. . . . Yes . . . Oh shit. So fucking good!\" Now I didn't care who was watching or listening. I just wanted to get myself off. \"How could this get any nastier?\" I asked myself. Lying on my back porch my robe thrown open so I essentially naked and masturbating in front of god and everyone. \n\nI let myself just cruise and enjoy what I was doing for a good five minutes or so. And then I realized that I was holding myself on the edge of a cliff. A cliff I couldn't sustain. So I just let myself fly off the cliff with a scream loud enough to have come from any of the houses on the block (at least that is what I told myself later). As I climaxed, my back was arched, my fingers jammed into my cunt and my other hand pressing down hard on my spasming clit. Fuck, what a climax! \n\nI lay on my side curled in fetal position for a long time. Eventually I rolled to my back and stretched. \"Yes! Yes! Oh god yes. Life is good again.\" I kicked my feet like a little kid and I didn't care who heard what. Life was good again."
    ],
    "authorname": "Bluepen451",
    "tags": [
        "masturbation",
        "outdoors",
        "squirting",
        "porn",
        "shaving"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/descent-into-depravity-2"
}