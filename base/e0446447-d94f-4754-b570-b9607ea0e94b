{
    "title": "The Perils of Being Too Trusting Ch. 03",
    "pages": [
        "So, I'm honestly ashamed how long this chapter took to write. Some of it was I got distracted, some of it was that I hate proofreading, so I just kept writing instead of going back to proofread. Very bad habit.\n\nThere are two more chapters after this one, and I am already working on them. Hopefully I can get back to posting faster than one chapter per year. If anyone is interested in proofreading, please, please, please let me know. I'm doing this in Google Docs, and it's pretty easy to give folks editing rights. If you like the story, at least it would get you an advance peek. \n\nAlso any encouraging feedback always helps.\n\nK\n\n*\n\nHeather was glad the restaurant was busy this morning, it made it easier to keep her mind off her complete lack of underwear. Her skirt came down almost to her knees, and her blouse and camisole covered things fairly well as long as she was standing straight, but she still felt very exposed. Every time she rushed back to the kitchen she could feel the draft around her pussy. It hadn't been obvious when SpareRod had picked out her outfit how revealing her top would be every time she bent over. With several buttons cut off the blouse, it fell open and exposed the camisole almost completely. While the cami was tight enough that there was no risk of her boobs falling out, it was a little low cut so it didn't cover them as well as Heather would have liked. Plus it did nothing to hide her nipples poking through the fabric. She'd only been at work for about 20 minutes, but she had received several appreciative stares from guys as she bent over to set down plates. \n\nThe other thing she was avoiding was thinking about how the hell she was going to get the selfies taken. She checked the time on her phone, and knew she really couldn't put this off any longer. After topping all the coffee mugs she headed back towards the restrooms. She would have much preferred to do this in a stall in the women's room, but he had specifically forbid that. So she went right past the bathrooms and out the back door. She quickly scooted between a dumpster and the building corner, hiding herself for the most part from the back door and from the alley. It was still very exposed, but at least she should hear someone coming either out the door or driving up the alley. Once her phone was ready, she pushed down the cami so both her breasts were out, opened her blouse to completely expose them, and held up her skirt in the front so she was showing everything. She tried to take photo quickly, but the enormity of what she was doing hit her as she attempted to hold the phone up and capture her exposed tits and pussy. Her hands trembled and it took several tries before she had a clear picture. She decided to take one as an upskirt by holding the phone low, giving a close up of her pussy. She was amazed how swollen and open her pussy lips looked, and she couldn't resist running her finger over her clit as she snapped another picture or two. It felt so good, it was difficult to stop and cover up, but she knew if she stayed too long she was sure to get caught. She rushed to one of the stalls in the women's room so she could send the pictures to him in relative safety. She also took the opportunity to finger herself for a bit while she was there. She hoped that she wasn't so wet her juices would start running down her legs.\n\nIt wasn't until she was washing her hands that she noticed that pushing down her camisole had stretched it a bit, and it didn't want to stay as high as it had before. Bending over her reflection was showing a scandalous amount of boob down her blouse. She would have to be careful how she bent over. \n\nThree more times over her shift she snuck out to the back to take some more pictures. She felt like she had to vary it a bit, so she got some of her squatting with her legs wide, and even a couple of her ass as well. Even though it scared the shit out of her, it also was strangely liberating to be so wild, so sexual. In a strange way it helped to know that she was still a good girl and that she was only doing this because she was being forced. \n\nShe wasn't being forced to masturbate in the women's stalls, but she was doing that anyways, and after the second group of photos she shot a short video of her finger-fucking herself and sent that too. She figured it might help keep him in a good mood and make him nicer to her. It shocked her how difficult it was to stop though, and she found herself chewing on her lower lip as she went back to work she was so frustrated. \n\nIt wasn't until the third time behind the dumpster that she got caught. She was squatting down, the cami pushed down, the shirt fully open to show off her tits, her legs spread wide so she could finger her wet pussy, and trying to take the picture when she heard a voice.\n\n\"Wha da FUUUCK!??!\" \n\nThe homeless guy had been walking up the alley, and she hadn't heard him coming. She snapped her thighs together, tried to pull up her camisole, and rushed into the restaurant. She heard the homeless guy yell for her to come back a couple times, but thankfully he shut up and moved on. Her heart was racing as she tried to rearrange her clothes as best she could with trembling hands. She didn't even dare go into the bathroom, so she rushed to send off one photo to SpareRod and got back to work. It wasn't until she set down a coffee mug in front of a customer and saw his eyes widen that she realized maybe her clothes weren't right. She looked down to find that she had not pulled up her cami far enough, and her nipple had slipped into plain view. She tried to fix it and be more careful, but she was sure several more customers got a nice peek at her tits that morning.\n\nHeather was a complete wreck by the time her shift ended. She could feel the slickness on her thighs as she walked, and she was worried that it might run down her legs where customers might see. As soon as she clocked out, she raced to her car to get some privacy. After wiping her upper thighs and crotch with some tissues, she checked her phone and saw she had an email from SpareRod:\n\nsubslut\n\nWhile I can tell you are trying, you need to know your performance has not been satisfactory. You spent several minutes in your room last night before you got naked. You also failed to stay naked this morning until you were ready to leave your room. Although the quality of your pictures were quite good during work today, you went more than 90 minutes between them on several occasions. These transgressions will need to be punished. Take your camisole off from under your blouse immediately. Go to a grocery store to do some shopping. Send me a picture of yourself inside the store, proving you've followed instructions, and I will send you a shopping list.\n\nSpareRod\n\n\"Fuck!\" Heather swore. \n\nShe thought she had been so good. She was dismayed to think what punishment might entail. He had made it clear that it would be more severe than yesterday, and she wasn't sure she could take it. But there was no way she wanted that video to go public either, so she decided to go to the store and see what came next. She tried for at least a minute to get the shoulder straps of the cami down her blouse sleeves so she could get the camisole off without taking off her blouse, but the sleeves were too tight. She finally gave up, and pulled the whole thing off as quickly as she could. Unfortunately that tangled her blouse, and she ended up spending even more time sitting topless trying to straighten out her blouse to get it back on. Finally, she started to pull it back on and almost shrieked when she noticed there was a guy less than 30 feet away staring at her in shock. She had no idea how long he had been there, but he had certainly had a clear view of her bare breasts. She didn't even button the blouse, she just started her car and raced away. \n\nShe did manage to button her blouse at the first stoplight, but since she had cut off all but three buttons, it really didn't help. She was horrified by how much of her chest was showing. Just trying to make the shirt stay still while driving proved impossible. She had no doubt that she flashed several people as she drove to a supermarket. She did opt to drive across town to minimize the chance of running into anyone she knew. \n\nOnce in the store, it took a while for her to find a quiet aisle where she could snap a picture safely. She knew enough about what he expected to make sure her nipples were completely exposed for the picture. No reason to disappoint him and draw more punishment. Unfortunately that made getting the picture even more difficult. Not the exposing herself part, that happened pretty much all by itself, since when she held the camera at arm's length to take the picture, the blouse fell open all by itself. But finding a spot where she thought she could do that without being spotted by anyone or by the security cameras she could see on the ceiling was a real challenge. She finally ended up in the greeting card aisle, facing the shelves as close as she could to try and hide from the security cameras. As luck would have it, right as she took the picture, an elderly woman came into the aisle. Heather covered herself as fast as she could, and hurried away to another aisle. She did hear the woman say something, but her ears were ringing and her heart was pounding, so she had no idea what the woman was saying or if it was even about her.\n\nShe sent the picture to SpareRod and tried to stay inconspicuous while she wandered around the store. It seemed to take forever, but it was actually less than ten minutes later when his instructions came.\n\nSubslut,\n\nHere is your shopping list. You need two zucchini or yellow squash, one a comfortable size to fuck yourself with, the other to feel a bit large. The other items should be all together in the store, an enema kit, some KY jelly, and two packages of condoms. You are not allowed to buy anything else, part of the punishment is everyone will be thinking about what you are up to. Make sure to take a picture of your items for me right before you check out. Then head home and I'll see you when you're on video.\n\nS\n\nHeather was terrified at where this was leading, but she couldn't see a way out. She grabbed a small basket, and headed to the produce section. She was in a bit of a quandary about what to do about the zucchini. Since she was so petite she was not one of those girls looking for a guy to be huge. In fact guys who were big enough to make her be careful was more the norm. That said, she knew if she picked them too small that he would accuse her going too easy on herself. In the end she picked one just over five inches for the small one, and another that was about six and a half inches long for the second. She just had to hope it would be okay.\n\nHolding the basket so it kept her blouse closed, she headed towards feminine products for the rest of her purchases. She found the lube and the condoms quickly, but it took quite a bit of time looking between the oils, douches, and suppositories to finally find the enema kit. That in itself was a bit embarrassing to be spending so long looking in this area, but it got worse when she found it on the bottom shelf. She started to bend over to set the basket on the ground, but her blouse spread wide open, showing a dramatic amount of cleavage. If she bent at the waist, her blouse would open, but if she squatted down her skirt would ride up and she worried she would flash her crotch. To make things worse, a couple guys were hanging out in the aisle, watching her out of the corners of their eyes. They clearly knew something was up.\n\nUsing one arm to hold her blouse closed, and the other to keep her skirt firmly against her legs, she squatted down with her thighs pressed tightly together. She was sure it looked awkward as hell, but with the two guys staring at her blatantly, she figured it was less awkward than flashing them. Once she was down so her calves were touching the backs of her thighs, that freed one hand to reach for the enema kit. Her heart was pounding because of the guys watching her, and it was more difficult to stay balanced than she thought it would be. As she leaned over to get the enema kit from the bottom shelf, she felt herself losing her balance. On instinct she shot one leg out as a counter-balance, and used the hand that had been holding her blouse closed to steady herself against the shelf.\n\n\"Holy shit!\" she heard one of the guys swear. \n\nHeather gasped and looked at herself. The blouse had not opened completely, but her left nipple was within millimeters of being exposed. On top of that, with her with her leg out and skirt riding up she was showing way more leg than she meant to, and it was possible the guys could see right up her skirt. She tossed the enema kit in her basket and bolted upright as fast as she could. She was so flustered that she was pretty sure that both guys got a decent look down her blouse as she rushed out of the aisle. As she walked away she thought she heard one of them say something to the other that included the word \"tits,\" but she didn't stick around to find out. \n\nHer shopping complete, she headed up front to pay and get out of there. Checking out with her current purchases, dressed in this outfit, the whole idea put a pit in her stomach. The humiliation of interacting with the clerk would be unbearable. While she stood there, too terrified to move, she suddenly remembered that she needed to take a picture of her basket. While using her phone to snap the picture, it occurred to her that this store had self-check-out. She almost jumped for joy with her plan to beat him! He hadn't told her that she needed to check-out with a cashier, so she could do it herself, and not interact with anyone. \n\nUnable to keep the grin from her face, she headed to the kiosks, and scanned everything in her basket. She worked quickly to get it all into a bag, glad that there was no one in front of her to peek down her blouse. It gave her the freedom to work faster without worrying about holding her blouse together. She got her credit card out, started to pay the bill, and saw something that almost made her scream in horror. There was a screen above the kiosk that she had not noticed before, and a video of her was on that screen for the world to see. Even worse, it was from an angle that was clearly looking down her blouse. The way she was leaning forward, people walking by could see on the screen that her right nipple peeking out . To top it off, the word \"RECORDING\" was blinking across the bottom of the screen. Heather was mortified. Not only had people walking by seen her exposed breasts, but the system was now capturing it, probably for eternity. She looked over her shoulders, and noticed a couple guys had positioned themselves to watch her on the screen. There really wasn't anything to do but cover up and leave as fast as she could.\n\nThe drive home was every bit as nerve wracking as the drive to the store had been. Her blouse just did not want to stay closed. She had no idea how many people might have seen her tits on the way home; she tried not to make eye contact. Once safely in her house, she went to her room and turned on her computer. At the last second she remembered she was supposed to be naked. She had just finished pulling off the skirt and blouse when his voice came over the speakers.\n\n\"Hey slut,\" he asked, \"aren't you supposed to get naked as soon as you enter the house?\"\n\n\"Yes Sir, sorry Sir,\" she apologized quickly.\n\n\"That will add to your punishment. You're certainly racking it up today. But we'll deal with the extra punishment in a bit, let's get started on what you need to do to make up for last night and this morning. Show me your pussy, is it wet?\"\n\nHeather was humiliated all over again to show him how slick and swollen her pussy lips were. It was bad enough to stand in front of her computer with her hips thrust forward to push her sex close to the camera, but to have it be so obvious that it was turning her on made it doubly degrading. She could feel herself blush from head to toe listening to him talk about how wet her hot little cunt was. She was glad when he told her that she could step back, but her stomach resumed its somersaults when he told her she needed to get the zucchinis and condoms and go to her living room window.\n\n\"Puh-please Suh-Sir,\" Heather stammered, \"I... I don't want to do this.\"\n\n\"You should have thought about that before you disobeyed the rules, now get your ass out there.\"\n\nHeather had to hold back tears as she set the computer on the floor next to the window, and stood with her hands on the window sash and her legs spread wide. This was way worse than yesterday, not because she was any more exposed than yesterday, but she knew what was coming next.\n\n\"Okay, now put a condom on the smaller zucchini, and let's see how it fits.\"\n\nHeather was so terrified she was shaking. She knew what he was going to make her do, and the idea that her neighbors might be able to watch was inconceivable. It was one thing if they saw her masturbate with her fingers, but this was too much.\n\n\"Please Sir, I can't do this. Please don't, I just can't, it's too humiliating. With a zucchini?!?\"\n\n\"Too humiliating? More than having that video be out on the web where anyone could find it? Okay, I'll admit that fucking yourself with some vegetables is humiliating by itself, and that doing it in front of your window is doubly so. But compared to having that video out on the web for anyone to find? With everything you did? With everything you said? About people you know? Come on, it's likely that no one will even see you, and even if they can, they probably won't even be sure if it's you or what you're really doing. Now I know your cunt is plenty wet, so get that condom on it, and start fucking yourself.\"\n\nHeather thought about just shutting down the computer and running away, rather than continue this degradation. But she knew that would be even worse. She looked up and down the street, and decided there was probably never going to be a better time. She opened the condom package, rolled it onto the phallic vegetable, and slowly worked it in to her pussy. It wasn't very big, and she was so wet that it slid in easily. And Holy Fuck did it feel good! She hadn't had anything bigger than her fingers inside in so long, and just the feeling of it sliding in caused a moan to escape her lips. She was more humiliated than ever to have him know how much this turned her on.\n\nHe kept her going at in front of the window for over fifteen minutes, switching to the larger zucchini about halfway through. She was sweaty and trembling from standing with her knees flexed and gyrating her hips as she fucked herself right there where anyone walking by could see her. Her nipple was sore from pinching and pulling on it, and her pussy was buzzing from all the attention it was getting. The whole experience had been excruciatingly degrading. The worst part was that just when she had been right at the edge of orgasm, right as she could feel the beginnings of a climax washing over her, he had told her to stop. The frustration almost made her cry. \n\n\"Okay, we should take a break from that,\" he chuckled, \"you little slut, you're getting all hot and bothered. Besides, we need to do something about your clothes for tomorrow. I think you have a pink camisole and another white blouse right?\"\n\n\"Yes Sir.\"\n\n\"Good, wear that, but that skirt was too long. I think you have a black one that is a little shorter, right? But I still don't think that's short enough. I think you can hem that up two more inches, okay?\"\n\nHeather couldn't believe it, he was going to have her spend the next couple hours naked at her sewing machine hemming up not just her black skirt, but also another grey one to be mid-thigh. They still wouldn't be her shortest skirts, but they would be the shortest ones she'd ever worn to work, and without panties they would feel very risky. She kept hoping for reprieve before tomorrow, but she agreed to work on the skirts.",
        "He also left her instructions to spank herself again, twenty times on each cheek, and five times on each tit. He told her that he wouldn't watch it live, but he would watch the recording to make sure she did a good job. Heather didn't know how she felt about him not even staying to watch her do it. It's not like she liked him commenting on how she spanked herself, how her ass reddened or her breasts jiggled under the impact. But the fact that he wouldn't even watch seemed more demeaning, like she wasn't worth it. It was crazy that she was wishing that he'd watch her spank herself, but somehow doing it without him watching was even worse.\n\nHis final reminder was that while she was allowed to put on a bra, the camisole, and panties for the babysitting job, she must not put them on until she was in front of the family's house. He made it clear he expected pictures of her dressing in her car. With that he was gone.\n\nThe spanking seemed even more painful than the day before. Without him to guide her, she kept feeling like she wasn't hitting herself hard enough to satisfy him. In the end she gave herself close to 30 spanks on each ass cheek, and over ten on each tit because it was so difficult to actually hit herself there, especially the nipple. Once she finally finished, she set the sewing machine up at the dining room table and went to work. She had no idea how she would explain it to her roommates if they came home, so she just hoped they stayed at work all day and didn't stop by the house for some strange reason. \n\nShe breathed a sigh of relief after she finished the skirts, and dressed to drive to her babysitting job. Again, she was not entirely successful in keeping her boobs covered while driving. The way the seatbelt pressed against the blouse had a tendency to hold it open exposing her to anyone looking in. She couldn't be sure if anyone saw her, but it was embarrassing all the same. She parked in front of the family's house, took several pictures of herself with her blouse open and her skirt pulled up, sending them to him to prove she had not put on any underwear . Putting on the bra and camisole under the shirt without exposing herself too much proved to be harder than she expected, but she managed eventually. After putting on her panties, she headed into the house to watch the children.\n\nThe afternoon and evening was welcome relief from her world of being blackmailed. Being fully dressed for the first time in 24 hours, and being too busy to think about her predicament was a blessing. All too soon, it was 9:30PM and she was back in her car checking her phone as she pulled off her panties. She knew this respite was too good to last, and she wasn't surprised to see a message. She was surprised how extreme it was, demanding that she find a quiet place to stop her car, and to take a picture of herself outside her car and completely naked. Just the thought of it was terrifying, especially since he made it clear that she needed to use her flash, which would almost certainly attract attention no matter where she did it. In the end she found a parking lot for a massive big box store that had closed, and pulled to the edge of the lot. She stripped naked in the car, hunching over to hide from any cars that might happen by. She quickly jumped out, crouching to keep the car between her and the rest of the lot. Squatting with her legs spread wide, knowing that he'd appreciate the clear view of her crotch, she snapped a quick picture. The flash from her phone was so bright it scared the crap out her, but she knew she'd better take another one since she really couldn't see where she was pointing, and she didn't want to waste time looking at it while she was completely exposed. \n\nBack in her car, she breathed a sigh of relief that the first picture was just fine. Once she had pulled her blouse back over her shoulders she sent him the picture along with the message confirming she would follow instructions to not put on her skirt or button her blouse until she got home. The drive was beyond terrifying. All she could think about was if she got pulled over she would not have time to get dressed. She was so nervous that she was probably running the risk of being cited for driving too slow. Even still, she couldn't stop herself from teasing her clit and pinching her nipples from time to time as she drove. She hated the fact that she was being forced to do this, and it felt completely different than she had fantasized about. She couldn't deny she was turned on now, but she was pretty sure that getting arrested for public indecency would not be a turn on. The fear she felt was very real, and it made her heart race. She parked in front her house, thanked God for getting home safe, and pulled on her skirt to go into the house. \n\nShe felt so much better being covered, that it wasn't until she saw Keely's face staring at her that she realized how exposed she still was. Her blouse only buttoned to about halfway between her navel and her breasts, and it fit quite loose, so there was real risk of her boobs popping out as she walked. It took a lot of will to not cover herself with her arms, but she followed instructions and stood straight with her arms at her side. She knew she'd be on video soon enough, so there was no point in defying him.\n\n\"Holy fuck!\" Keely exclaimed. \"Did you wear that to babysit?\"\n\n\"Fuck no,\" Heather was stuck how to explain why she had taken off her clothes on the way home, so she had to scramble. \"I was thinking about how you and Anna were saying I should be a nudist, so I was feeling a little crazy and I drove home naked.\" Heather was even more shocked at the words coming out of her mouth than Keely was, but it was the best she could do.\n\n\"So I just put this on when I got here,\" she finished lamely.\n\n\"You're shitting me!\" Keely was still trying to take it in. \"Really? You drove home naked? What possessed you to do that? That's crazy. Too bad Anna's not here, she'd laugh her ass off. I know you like skinny dipping, but I didn't think you were really a nudist.\" \n\nHeather just shrugged, got her computer, and sat down in the chair across from the sofa where Keely was sitting. She opened the chat program and began broadcasting from her camera, hoping that Keely would change the topic before he would be able to hear it all. Those were quickly dashed.\n\n\"No,\" Keely continued, \"you didn't really drive naked did you? You're crazy. Weren't you scared shitless?\"\n\n\"Totally shitless,\" Heather confirmed, \"but kinda exciting too. It was weird. My heart was pounding and I was literally shaking, but I never even thought about stopping.\" \n\n\"Better you than me, girlfriend.\"\n\nBy this time Heather had the video chat running, muting her speakers in case he came on. It only took him a couple seconds to realize she couldn't hear him and to start the chat screen. His first question was to ask what was going on, and she was mortified to explain to him that she was trying to convince her roommate that she wanted to become a nudist. He urged her to continue the conversation.\n\n\"Oh you know how I am,\" Heather tried to keep it going, \"I like the thrill. It's been kinda boring since we graduated, I'm just looking to make things a bit more exciting.\"\n\n\"You just need to get laid, that's what you need.\"\n\n\"No shit on that one, but pickings are pretty slim around here lately. So I have to adapt.\"\n\n\"Oh, that's what you're doing, ad-daaaapting,\" Keely rolled her eyes. \"I'm not sure running around in your undies or driving naked is what I'd call adapting, but whatever suits you. Like I said last night, just don't be trying to steal all the guys on me.\"\n\nThe text on Heather's screen urged to push the issue.\n\n\"So,\" she stammered, \"you're saying wouldn't mind if I were naked right now, as long as there were no guys around?\"\n\n\"Shit, you know I don't mind. I'm the one who went skinny dipping with you. But there's no way you're getting naked right there with the front blinds open.\"\n\nHeather knew even before she looked at her screen that she was going to be required to prove Keely wrong. Sure enough the instant message from him said she should strip to show Keely the new Heather. Heather rolled her eyes at the idea that this would be the \"New Heather\", but she knew what she had to do.\n\n\"Ha,\" she forced a chuckle, \"is that a challenge? You know howI respond to challenges.\"\n\nBefore Keely could say anything, Heather stood up and unbuttoned the last buttons on her shirt. Her hands were trembling, not really because of the thought of being naked in front of Keely; that had happened before. It was more the reason she was stripping, knowing she didn't have a choice, not knowing what might come next. What other ways would he humiliate her? What would it do to her relationship with Keely? But she tried hard not to think about all that, and just stripped off the blouse and stepped out of the skirt.\n\n\"Holy fuck,\" Keely was never speechless for long, but she did take a long look up and down Heather's naked body before she started talking. \"Well, suit yourself. But just because I went skinny dipping with you that one time, don't expect me to join your little nudist colony here. And I'm not sure you should do it in front of Anna either. I think hanging out in your undies was pushing her limits yesterday. You start going around full nakey and she'd probably freak the fuck out.\"\n\nHeather's heart was pounding so hard she could barely hear Keely through the buzzing in her ears, and she had to sit back down before she fell over. She kept thinking how crazy it was what she was doing, that normal people didn't do stuff like this. Being continuously aroused wasn't helping anything either. Her nipples ached, and she was desperate to tweak or tug them, although it terrified her that she might start doing it subconsciously while Keely was watching her. Fortunately she was able to put her laptop strategically over her crotch to hide that her lips were swollen and wet. At least she was able to do that until SpareRod noticed.\n\nSpareRod2003: u need to move ur laptop - no fair hiding ur cunt\n\nnawtysubslut1989: Pleeeze Sir. Don't make me do too much - it would be worse than just letting her see that video\n\nSpareRod2003: relax slut. I'm not going to make you beg for her to piss in your mouth or anything. I just figure that if you're going to be naked around her all the time you should make sure she can see you well\n\nnawtysubslut1989: Naked all the time?!?!???\n\nSpareRod2003: Lol. Well, maybe not all the time. It sounds like Anna wouldn't appreciate that. Will she be home soon?\n\nnawtysubslut1989: Not for a few hours, she's out with friends.\n\nSpareRod2003: Then no reason for u to not show off some. Now move that laptop and spread ur legs a bit so she gets a view of your lips.\n\nHeather couldn't believe she was doing this, moving the computer up to the arm of the chair and spreading her legs to give Keely a full view. She had never felt so exposed in her life. She couldn't bear to make eye contact with Keely, she could see in her peripheral vision that her roommate was occasionally looking over and staring. It felt so weird to be naked and to be ogled by her fully clothed roommate. The whole experience was turning her on so much that she began to get worried her pussy would start leaking right in front of Keely.\n\nNawtysubslut1989: Please Sir, may I go to the bathroom to get a towel and wipe myself? I'm afraid I'm going to leave a stain on the chair.\n\nSpareRod2003: I might let you do that slut. But I need for you to do something for me. Do you have any beers in the house?\n\nNs19: Yes Sir, I have a six-pack of Fat Tire that I bought a few days ago.\n\nSpareRod2003: Great. In a minute you're going to ask Keely if you can get her a beer. Try to make sure she says yes, but either way you can go to the bathroom then. Leave your computer, it would be weird to take it with you. You may grab a towel to put on the chair. Go get the beers, and once they're open, use one to fuck yourself in your kitchen. I want you to fuck yourself hard for two straight minutes. I want your cunt swollen and gaping when you sit back down. \n\nNs19: WTF! You're joking!?!? What if Keely sees?\n\nSpareRod2003: Definitely not joking. Make sure Keely doesn't see. I'll be nice to u, u can keep that bottle for yourself. I'm not sure Keely's ready for the taste of ur pussy yet\n\nHeather was terrified by the \"yet\" in that comment, but her mind was spinning too fast to even be able to think about what she might say.\n\nSpareRod2003: You'll probably need to drink a bit first to keep it from foaming over, but you'll figure that out. When you're done, take the beer to Keely. Make sure you stand close to her with your legs spread when you hand over the beer. She should get a good view of your open, sopping cunt, and probably be able to smell it too. NOW GO GET GOING SLUT!\n\nHeather didn't want to go. \n\nIt was going to be too humiliating. Maybe it would be better if he just posted the video? She thought about how likely it was that anyone she knew would even see it. There was a lot of stuff on the internet, so maybe no one she knew would find out. And even if someone did, would they really tell Keely or the O'Donnell's? She tried to weigh the uncertain risk of someone seeing the video against the certain risk of fucking herself with a beer bottle in the kitchen. Then she saw something on her computer screen that changed her mind.\n\nSpareRod sent her Keely's email address. \n\nHeather's stomach did flip-flops as she processed what she was seeing. He had obviously used his time on her Facebook account to collect contact information for her friends. That meant he had her roommates', the O'Donnel's, and even her parents' emails. He could send that video directly to the people that she was most worried about. Her trust in him had put her even more at his mercy, and all she could do now is go with it and hope it didn't get too bad. There was only one way forward.\n\nShe asked Keely if she would like a beer.\n\nHeather had to work a little to convince Keely to not let Heather drink alone, but it was never too hard to convince Keely to celebrate a little. That settled, Heather managed to get to the bathroom. She used the opportunity to go pee, and grabbed a towel before heading to the kitchen. She got the beers, opened them, and as she drank about a third of a beer she thought about how to do this. First, she needed find a place in the kitchen that wasn't too visible to the neighbors. It was one thing to have them see her nude, she really wanted to avoid them watching her do something this perverted. She found if she stood in the corner near the microwave she was mostly out of view of the window, and even out of view of the hallway in case Keely decided to get up. The microwave gave her an idea on how to both explain two minutes of fucking herself with the bottle, and cover any noise she might make. She pulled out a package of popcorn, and set the microwave for two minutes.\n\nWhat she hadn't counted on was that while the noise of the microwave would mean that Keely couldn't possibly hear that Heather was masturbating in the kitchen with a beer bottle, it also meant Heather wouldn't hear if Keely got up and came to the kitchen. Heather worked the beer bottle in and out of her pussy, gyrating her hips, and biting her lower lip to keep from moaning. She pushed hard on the bottle, getting the entire neck in as well as part of where the bottle flared out. She wanted to a good job for him, to make her pussy soaked and gaping. She didn't want to give him any excuses to make things any worse. \n\nSuddenly she heard some noise from the living room, and for a brief second she was terrified that Keely was headed towards the kitchen. She kept fucking herself, listening and looking for any clue that she was going to be found out. Thankfully there was nothing more, but to her surprise the fear of being caught pushed her right to the edge of orgasm. She actually had to stop and pull the bottle out for fear of cumming on the spot. Not only would that have broken his rules, but she would have screamed out so loud that Keely, the neighbors, and everyone on the block would have known what she was doing. After about ten seconds she went back to fucking herself, and counted herself lucky that she didn't orgasm before the microwave beeped and she could stop. Pulling the bottle out made her feel so empty and frustrated that she wanted to cry. She didn't even look at her crotch, knowing that seeing just how much she was about to show to Keely would make her cry for sure. \n\nShe carried Keely's beer and the bowl of popcorn out, and stood close to her roommate to let her take the beer and some popcorn. Keely's eyes focused briefly on Heather's rock hard nipples, then went wide as she looked down at Heather's pussy. Heather's shame was beyond anything she could have imagined. She knew it must be totally obvious that her pussy looked freshly fucked, and to make it worse Keely just stared at it instead of taking the beer she was being offered, her lips slightly parted. It may have been Heather's imagination, but she thought Keely was about to lick her lips in anticipation.\n\n\"Uhhm...thanks,\" Keely finally spoke, \"it's kind of wild having my own naked serving girl. It seems very sophisticated in a debauched kind of way.\" \n\n\"Well that's what I'm going for,\" Heather giggled, \"sophisticated debauchery.\" \n\nShe couldn't believe she had said that, but there was no taking it back now. She went back to the kitchen to get her towel and beer. Keely gave a funny look as Heather spread her towel on the chair and sat down. Spreading her thighs to expose her pussy again was even harder than she expected. She could easily see her clit and her inner lips protruding as she sat, and she didn't even want to contemplate how it must have looked to Keely. Keely stared at Heather's crotch, but thankfully only talked about the towel.\n\n\"That's a good idea if you're going to be a nudist,\" Keely suggested, \"I hear nudists keep towels with them at all times.\"\n\nHeather laughed, and the two them chatted about more normal things as they drank their beers. Even so, Heather's state of arousal stayed on red alert, with both Keely openly staring, and the reminder Heather got with every sip of her beer. She couldn't actually taste herself on the bottle, but there was no denying the smell of sex each time she brought to her mouth. \n\nEven after the conversation moved away from Heather's nudity Keely would still occasionally make a crack about having a naked serving girl. SpareRod kept up the chat at the same time, urging Heather to play up the role, as well as making her continue to humiliate herself. Periodically he'd have her do things like lifting her foot onto the chair to spread herself wider, idly tweaking her nipple, or sucking on her beer bottle suggestively. Heather was pretty sure her sexual behavior was noticed, but Keely didn't say anything. \n\nAfter a bit, SpareRod upped the ante. He told her to offer to get Keely another beer, but not get one for herself. He thought that would better fit her role as a serving girl. On top of that, once she brought the beer, she had to offer Keely a foot massage. He made it clear that she was to persist until Keely agreed, or Heather would face more punishment. The image of kneeling naked in front of Keely and rubbing her feet was incredibly erotic to Heather, and she could feel her pussy pulsing as she typed about it. Unfortunately actually suggesting it to Keely, while standing naked in front of her, was so humiliating that her body rebelled and she found it almost impossible to stand. SpareRod was persistent though, and he made clear he was not going to let her escape. He also insisted she turn her laptop so he could watch the whole experience and be sure she didn't cheat. Realizing she was beaten, Heather dove in to her tasks.",
        "Keely easily agreed to another beer, but said this had to be her last one since they both had to work the next day. Heather padded naked into the kitchen to fetch the beer. The only relief from her terror about what was coming next was that she didn't have to fuck herself on the bottle again. She brought the beer back to Keely, which elicited a puzzled look.\n\n\"Aren't you going to have another one?\" Keely asked.\n\n\"No,\" Heather felt like such a dork, \"I figured if I'm going to be your serving girl, I should play the part.\"\n\n\"Really?\" Keely came back after an awkward pause while she looked up and down at her naked roommate. \"Hmmm, I think I'm gonna enjoy this.\"\n\n\"Yeah,\" Heather tried to smile to cover how nervous she felt. \"Well I guess if I'm in the role, I should go all the way. Anything else I can do for you? Maybe a foot massage?\"\n\n\"Yeah right!\" Keely retorted sarcastically. \n\n\"C'mon. You know you like massages.\"\n\nWait, you're serious? You want to give me a foot massage now? Like that?\"\n\n\"I'm just trying out the serving girl role. Indulge me. Besides your feet must be a little sore from being in heels all day \"\n\n\"Well, fuck,\" Keely laughed, \"it sounds more like you're indulging me, not the other way around. But who am I to argue? Girl... oh serving girl! Massage my feet for me now!\"\n\nHeather had to laugh at Keely's mock imperious mannerism. Keely put on a haughty look, kicked off her heels, and stuck her foot out for Heather to massage. Heather's heart skipped a beat and she gulped as she got down on her knees in front of Keely, resting her roommate's foot on top of her thigh and massaging it. Keely sighed loudly, took a sip of her beer, and rolled her head back on the sofa. Heather smiled watching Keely luxuriate in being served, and tried to focus on doing as good a job as she could. She felt so horny she could barely stand it. At one point she had this crazy urge to pull Keely's foot into her crotch and hump herself on it. She knew better than to try, but it was exciting to think about.\n\nA few times while working on Keely's foot, massaging the arch, Heather's bare breast brushed against her roommate's foot. When she switched to the other foot, Keely's toe brushed against Heather's nipple, tweaking it slightly. A shiver ran through her body, and she thought she could see a slight smirk flash across Keely's face. After that, every time Heather's boob came in contact with Keely's toes, Keely would wiggle her toes, almost like she was trying to hit Heather's nipple again. Heather wondered if it were a game, trying to get her to jump. She felt her face flush as she wondered how much Keely was enjoying this.\n\nHeather switched to one of her favorite techniques for foot massage, using her arm to trap the heel against her hip and stomach, and pulling on the toes to stretch out the foot. That put the toes very near her right nipple as she pulled, and Heather enjoyed the sensation as Keely's foot bumped her boob. Keely clearly enjoyed the sensation of having her toes pulled, letting out an audible moan as Heather pulled. Heather was so turned on she could barely stop from jumping Keely's bones, damned the consequences. \n\nBut it was not to be. Keely sat up abruptly and pulled her foot back. She was flushed and breathing a little hard, and Heather suspected the situation had gotten to Keely as well. \n\n\"Very nice foot-rub serving girl,\" Keely said using her mock imperious tone again. \"Now I'm off to bed, it's an early morning tomorrow. You'll clean up here, won't you?\"\n\nKeely stood, and actually patted Heather on the head before heading off to her bedroom. Heather felt so humiliated. Not only had she been getting ready to make a pass at Keely, and now felt rejected, Keely was seriously treating her like a serving girl by telling her to pick up and patting her on the head like some kind of pet. Unfortunately the humiliation only added to her horniness, and she was now desperate to cum. She jumped back on the computer as soon as Keely's door was closed.\n\nSpareRod2003: Well done slut. I wish I could have seen more of what you were doing to her feet, but watching her face was amusing. It looks like she enjoyed that very much.\n\nNawtySubSlut1989: Thank you Sir. I wanted to do a go a good job.\n\nSpareRod2003: Did you enjoy it?\n\nNawtySubSlut1989: Fuck Sir, I'm so horny now!\n\nSpareRod2003: Lol - I'll take that as a yes. We'll have to make sure you get plenty of chances to serve her on your knees from now on. Get things cleaned up like she told you and then go to your room. Be sure to bring your beer bottle, you're not done with it yet.\n\nHeather washed the popcorn bowl, put it away and threw Keely's bottle in the recycling before racing to take her computer and her empty beer bottle to her room. Even though Keely's door was still shut it made her feel very exposed with her door wide open. All it would take would be Keely walking into the hall, or Anna coming home and she would be exposed. Since there wasn't anything she could do about it, she tried to put it out of her mind. \n\nHis first command was for her to sit facing her wide open door, and resume fucking herself with the beer bottle. While she was a little grateful to be facing away from her window so that if the neighbor looked over it wouldn't be completely obvious what she was doing, but she did worry about the squishy noises as she worked the bottle in and out as deeply as she could. He let her go for almost five minutes, just as she was feeling an orgasm build up.\n\nSpareRod2003: I have a few more tasks for you slut. Go to your bathroom now and use your enema kit on yourself. Be sure to follow instructions and flush yourself out well, do it at least two times. There will be severe punishments if any shit is visible when we are playing later. I'm not into that, I only want to play with your ass. There will come a time when you'll have to do this on camera, but for your first time, I'm really not interested. Keep your bathroom door open of course, but you can leave your computer here..\n\nWhenever Heather thought her humiliation couldn't get any more unbearable, he somehow found a way to make it even worse. She had never had an enema, actually had never really even considered it. While it was a small relief that he wouldn't be watching her try to insert the nozzle up her butt, doing it with her doors open added more than enough terror and humiliation. What if Keely heard? What if Anna came home and walked into her room? She tried in vain to convince him to let her put it off or to close her doors, but he made it clear that he wouldn't budge. Reluctantly she headed to her bathroom. \n\nIt took three tries before she was satisfied that she was flushing clear. Overall the process wasn't too unpleasant, the only bad part had been a few cramps while she was trying to hold it in. She had read a few stories where girls were forced to hold it in for extended periods, and she couldn't even imagine what would really be like. It certainly wouldn't be sexy, it was too uncomfortable to really be a turn on. \n\nThe next layer of humiliation was to allow him to inspect her asshole. He had her stick her butt in the camera and spread her cheeks wide. This was followed by probing with her finger, first lubed only by spit, and then using the KY lube she'd bought. Soon she was laying on her back in bed, legs high in the air, working a well lubed beer bottle in and out of her ass while she flicked her clit with the other hand. When she got too close to cumming, he had her stop playing with clit, and squat with the bottle on the floor, using her weight to push the bottle deeper into her ass. After a couple tries she got the entire neck of the bottle in, but it was too uncomfortable to push it in any deeper so he made her just bounce there for a while until she could return to her previous position with her legs up and playing with her clit. She lost track of time going back and forth, going right up to the edge of orgasm followed by stretching her anus using her body weight against the bottle on the floor. \n\nWhen he finally let her stop it was almost midnight, and she was a wreck. She was hot, sweaty, her ass ached, and she was absolutely desperate to cum. She hated herself for it, but she was reduced to begging to be allowed to cum. \n\nNawtySubSlut1989: Pleeze Sir, may I cum? I'm so horny, may your horny sub slut please cum?\n\nShe knew enough from his stories to know he'd like her referring to herself in the third person, and she hoped it would be enough. Unfortunately he made it immensely clear that she was not to cum, and that he expected her to keep the camera on all night, and in fact all the way until she left for work. He warned her that he would send her an email before morning with additional instructions for the day, and with one last reminder that he would be watching her, he told her to go to bed.\n\n*\n\nHeather carefully set her computer by her bathroom sink while she waited for the shower to warm up. As weird as it had been yesterday to shower with her door open, it felt very strange to be arranging for it to be recorded. She knew that he didn't want the shower curtain to obstruct his view, which meant there would be lots of spray, and that could be bad for her computer. Satisfied it was positioned to stay dry, she climbed in the shower. He had sent an email overnight, giving her several new instructions, starting with what to do in the shower. Aside from getting clean, she was now required to masturbate for five minutes every morning while in the shower, and to make it even worse she was required to finger fuck her asshole the entire time she was doing it. He made it clear that she was not to cum, but he expected her to get very close. \n\nShe used a little bit of conditioner to lube up her middle finger and her asshole, and gently slid it in. His instructions were to face away from the camera and bend over with her legs spread wide so he could clearly see her finger slide in and out as she diddled her clit. The position was a bit awkward, but the more turned on she got the less she thought about it. Actually she got so into it that she slid a second finger into her ass, and had to bite her lip to keep from moaning. She had to stop touching her clit for a bit after three minutes to make sure she wouldn't cum, but she was right back close to orgasm when the five minutes was up and she could stop altogether. \n\nThe newly shortened skirt came to her mid thigh, and felt especially skimpy with nothing under it. The camisole and blouse set was similar to what she had worn the day before, only the blouse was a little bit thinner, and she could just see the bumps of her nipples even when she was fully covered. She was bound to get more stares today.\n\nFriday mornings were always busy with regulars at the restaurant, and Heather felt rushed from the moment she got to work. She tried not to make eye contact too much with her customers, especially the men. She could sense their eyes wandering up and down her body, lingering on her thinly covered breasts or her bare legs. She could feel face warm as she blushed from being on display, and her nipples ached from being continuously hard. \n\nHe had different instructions for sending him proof today, letting her use the ladies room instead of the alley. That was the good news, since she did not want to get caught by the busboys or by any homeless people today. But the bad news was he wanted her to send a couple short videos of herself every hour. One needed to be of her pinching and twisting her still sore nipples, and the other of her finger-fucking herself with two fingers. By the third time she had to sneak into the bathroom it was getting so embarrassing it was ridiculous. There was a customer in the stall next to her, and no matter how quiet she tried to be, she felt like the squishy noises from her fingers working in and out of her pussy was coming over a loudspeaker. \n\nShe felt like her co-workers were looking at her and wondering what was up that she was going to the bathroom so often, and that her customers were staring at her ever more prominent nipples. The worst thing was when some of her juice actually leaked onto her thigh, and began creeping down as she walked. She was terrified that it would show below the hem of her skirt, but there was no way she could stop and wipe herself clean without attracting even more attention. She was completely mortified when some actually dropped on the floor, leaving a small glistening trail down her inner thigh. It was five more minutes before she could get enough privacy to wipe it with a napkin.\n\nWhen she finally left work she was a jumble of nerves. Her nipples ached from all the twisting and pulling, and her pussy was leaking like a faucet under her short skirt. Even though she knew that she would be naked at home, and she was terrified at what he might make her do, she was just glad to be away from everyone ogling her. As soon as she got home she stripped down in her living room and turned on her computer, waiting for him to come on and give further instructions. She ended up kneeling naked in front of her computer with her hands on top of her head and legs spread wide for almost a half an hour before he came on. It was excruciating to wait like that, with nothing to do but worry that someone would come to the door, but she didn't dare do anything else. She was determined not to give him any reasons to punish her today. \n\n\"Hello slut,\" his voice finally came out of her speakers, \"I'm enjoying the videos you sent. Are you still as wet as you were at the restaurant?\"\n\n\"Holy shit Sir,\" Heather complained, \"I'm sure everyone knew what I was up to. I was in the bathroom so much, it was so hard to be quiet, and I'm sure I smell like sex.\"\n\n\"Show me.\"\n\nHeather was reminded how humiliating it was to spread her lips and show how well lubricated her pussy was. She felt like she was blushing to her toes as she played with her pussy, spread her lips, pushed two fingers inside of herself to show him how much the lube coated her fingers, and other humiliating demonstrations. He made her smear her juices around her thighs, neck, and tits before he let her quit. \n\n\"I've sent you a package,\" he finally changed the subject, \"and it will need a signature, so we need to find something you can wear when you sign for it. Go find a bath towel we can modify to be more consistent with your new dress code.\"\n\n\"Package? What did you send me Sir?\"\n\n\"Not your place to ask, slut. It's your job to prepare yourself for the delivery man.\"\n\n\"Please Sir, don't make me do something with him. I'm not really a slut Sir. I couldn't really do anything SIr, I'm just too scared.\"\n\n\"Oh stop your whining, you silly bimbo,\" he scolded her. \"I won't push you any further than you're capable of, but we've talked about how you are going to have to get used to be naked in front of strangers. You won't have to touch him or let him touch you, but you are going to be a bit embarrassed. Now go get that towel.\"\n\nShe wasn't sure she trusted him, but she figured keeping him busy with the towel would at least distract him. She spent the next ten minutes cutting one of her large bath towels to be almost the size of a bath mat. She cut it so it was just barely long enough to wrap around her, with no option but to let her bare hip peek out the slit. Once she had it tenuously in place to cover her boobs, it came down just barely past her crotch. Even if she managed to keep it on when the package was delivered, the FedEx guy would be seeing a lot of skin. And SpareRod made it clear, that was not the way it was going to happen.\n\n\"Now practice by raising your left arm. Once you take your arm away from where you have it tucked in, I want the towel to fall.\"\n\nIt took Heather a couple tries to get the towel to cover most of her private parts but drop the instant she raised her left arm. He made it clear that she would be doing this in front of the delivery man, and made her practice several times to make sure the towel would drop every time. Once he was satisfied, he told her to get naked again, and to head to the bathroom. \n\nHe let her know that he would expect her to give herself an enema every day when she got home from work, so that she would always be clean for any playing in the afternoon. She discovered it was even more humiliating to flush herself out with him watching as she did it. He made her put much more liquid up her ass, and then she had to hold it for five minutes or more while she played with her clit. The conflict between being right at the edge of orgasm and the pain and cramping from the enema shredded her equilibrium and left her feeling like she could focus on nothing other than her need to cum.\n\nUnfortunately it was not to be. He made her take another shower to rinse off and get her hair wet so she'd have an excuse for only having a towel on. He didn't let her towel off, but made her walk around naked and dripping to grab one of her jeans skirts plus the shortest skirt she owned to take to the living room.\n\nHer shortest skirt was a pleated floral print one that she liked to wear when she was getting a bit dressed up but keep a youthful look. It was definitely shorter than mid-thigh, but she had friends who wore shorter skirts. Unfortunately he wanted her to cut her jeans skirt to be an inch shorter than that. It took just few minutes to cut and model it for him. The skirt was now just thirteen inches from waist to hem, and while it covered everything, Heather knew she would have to be very careful in this skirt. Especially since it was unlikely he was going to let her wear one of her few pairs of panties. All she could do was hope she could stay standing up straight whenever he made her wear it.\n\nBut for now he made her take it right back off again, and sit nude in her living room, working the hem of her newly shortened skirt with a bristly hairbrush to try and fray it a little. He told her it was to make the cut denim look more used, but she suspected it was also to keep her mind occupied while she sat naked waiting for the doorbell to ring. Their conversation moved into slightly more normal territory while she worked the skirt, and although he occasionally made her twist and pull her nipples or tease her clit, it was otherwise like chatting with an ordinary friend. The whole thing seemed so surreal to Heather. She remembered how much she enjoyed chatting with him, and what had attracted her to him in the first place. It was difficult to reconcile that guy with the one who was about to parade her naked in front of some stranger.\n\nHeather's heart started pounding when she noticed the delivery truck pull up in front of her house. She rushed to wrap the towel around her, and repositioned the camera to face the door before her doorbell rang. She was literally shaking as she undid the latch and opened the door. Time seem to slow down as she found herself face to face with a middle age guy in a FedEx uniform, who appeared to be in complete shock as he looked her up and down.\n\n\"I'm sorry, I just got out of the shower,\" Heather said meekly. \"I'm expecting a delivery and didn't want to miss it.\"\n\n\"Uhh... uhm... I need a signature for this... ummm... ma'am,\" the driver managed to stutter out as he held out an electronic tablet for her to sign and his eyes wandered up and down her exposed flesh.\n\nIf Heather hadn't been so scared about what was coming next she would have thought how cute it was this guy was getting flustered. But she didn't have time to think about that, she had a job to do, and she knew SpareRod was watching. She reached to take the tablet in her left hand so she could sign with her right, and just like she had practiced, the skimpy towel dropped instantly to the ground.\n\n\"Oh FUCK!\" Heather shouted uncontrollably. \n\nEven though she knew it was going to happen, suddenly standing stark naked at her front door almost put her body into shock. It was bad enough being ogled by the delivery man, but she hadn't counted on how exposed she would be to her entire street. She tried not to look but she noticed a car slowing down to a crawl as it drove by her house.",
        "\"I'm sorry,\" she mumbled as she tried to grab the towel off the ground. \"Damn towel is too small.\"\n\n\"It's okay, ma'am,\" the driver was trying to be polite, \"these things happen I guess.\"\n\nHeather briefly struggled to try and pick up the towel and figure out how to put it back on while holding the tablet, but decided that would take longer than just signing for the package. She laughed, tucked the towel under her arm, and signed for him. She made a point of staying out in the open so SpareRod would know she was exposed to the street, and even stood with her legs slightly apart. Her crotch hairs had not grown in at all yet, so her engorged lips were clearly on display. \n\n\"I guess since you've already seen it all,\" she laughed, \"we might as well get this over with.\"\n\nHe didn't seem to know what to say to that, so he kept quiet. She handed him back the tablet, he gave her the envelope, and as soon as her door was closed she found herself laughing hysterically.\n\n\"That was so fucking crazy!\" she shouted at her computer between bursts of laughter. \"I'm literally shaking. I thought my heart was going to explode!\"\n\n\"You did that quite well, slut,\" he congratulated her. \"It would have been better if you had managed to turn around and bend over so he could see your ass, but we'll save that for next...\"\n\nHeather cut him off with a loud scream. After checking the return address on the envelope, and deciding that trying to track down a Mr Rod Spare from Kansas City wasn't going to lead her any closer to knowing who SpareRod really was, she opened the envelope. The scream escaped her lips as three fat bundles of twenty dollar bills fell onto her coffee table.\n\n\"Holy fuck!\" Heather shouted. \"This must be like $3,000! What are you, like a drug dealer or something?!?\"\n\n\"No,\" he replied dryly, \"I'm a blackmailer, remember? I wanted you to have the money, but given what I'm doing I didn't think it would be smart to make it easy to trace it back to me. Getting cash and sending it to you from some random place seemed to be safest thing.\"\n\n\"But you are the one blackmailing me. I'm not complaining, but doesn't this usually work the other way around?\"\n\n\"Good point that,\" he laughed, \"but trust me, my interests in you have absolutely nothing to do with what you have, and everything to do with who you are. I want you focused on what I want you to do, and not stressing about how you're going to pay for the things you'll need to to do that.\"\n\n\"What the fuck do you want me to do that's gonna cost me $3,000??!?!?\"\n\n\"Well, not that much right away,\" he chuckled, \"but I wanted to be sure it was more than enough so we wouldn't have to talk about how much money things cost. I hate that kind of thing.\"\n\n\"Well,\" Heather rolled her eyes, \"thank God we won't have to do that. I mean, I'd hate for money to get in the way of you blackmailing me into parading around naked in front of strangers.\"\n\n\"Exactly,\" he deadpanned. \"Besides you're barely making ends meet now. Money is definitely something I can bring to make this a lot more exciting.\"\n\n\"Even more exciting, oh yay,\" Heather came back sarcastically, \"I can hardly wait. So what, are you some kind of a gazillionaire?\" \n\n\"I told you, I got very lucky at getting in on the ground floor at a tech company and made out well when they were acquired. I'm not 'never have to work again' rich, but I can do this pretty easily, and it is SO worth it to me.\"\n\n\"Okay, so I'm scared to ask, but what will I be doing with my new loot?\"\n\n\"FIrst off, we're getting the video chat set up on your phone so I can watch you even when you're not at home. Your phone bill will go up a bit, but you can afford it now. Next you need some sex toys. I've been doing a little research, and surprisingly even in a conservative place like Colorado Springs there are several place you can buy a dildo.\"\n\n\"Oh fuck,\" Heather swore, \"you're going to make me go to a sex shop, aren't you? Please Sir, I've never done anything like that, can't we just order it online?\"\n\n\"Now where would the fun be in that? Let's get you dressed so you can go buy some paddles and nipple clamps.\"\n\nThose words drove spike of terror into Heather's heart. Go buy bondage toys in person!?!? Have to look someone in the eye as she pays for them? It was all insane; she knew she needed to argue with him.\n\n\"It's funny slut,\" he interrupted her thoughts, \"I've been editing some videos of you, particularly with you talking about what you want to do that sweet young O'Donnell girl. It's very convenient I have both your parents' and her parents' emails addresses right here, so I can be sure they get to see and hear your dirty little fantasies.\"\n\nHeather could hear the smirk in his voice. She was pretty sure he wouldn't actually do it since it would take away all of his fun, but just the slightest chance that those closest to her would see that video made her stomach do flip-flops. There would be no way to explain to her parents, to the O'Donells, why she had said those horrible, twisted fantasies. It was too scary to contemplate; she knew she would do what he wanted.\n\nHe told her to put on the camisole she'd worn under her blouse, her newly shortened jean skirt, and the highest heels she owned. She looked at herself on the screen as she modelled for him, and all she saw was a total slut. Her nipples were clearly visible through the clingy fabric of the cami, and the high heels made the tiny skirt seem even shorter. She looked like an absolute whore. She hoped to God that she didn't run into anyone who knew her.\n\nThey spent a few minutes more setting up her phone to do video chat. She brought the phone with her, and did her best to keep him entertained while she drove. Having him live was even worse than sending him pictures, mostly because he kept up a running commentary, including instructions on how to adjust her clothing. He make her hike her skirt up so she wasn't sitting on it, and then tuck the front in so her pussy was completely exposed. He let her keep her breasts covered when she stopped at traffic lights, but while she was driving he made her lower her top down to her waist, basically making the cami and skirt no more than a belt around her waist. It was even more humiliating that she couldn't stop playing with her nipples while she drove.\n\nHe gave her an address on the east side of town, and she was surprised when she arrived that it seemed like any ordinary store in a strip mall. She had expected something really run down and seedy, not something that looked so respectable. Inside the store looked a cross between lingerie and a t-shirt shop, and it actually took her a moment to find the section in back behind the tall shelves where the adult items were. She'd read about places like these, but had never been in anything like it in real life. The back of the store looked a little more seedy, but still looked safe enough to her. It seemed to be mostly a bunch of sex toys, kinky lingerie, lotions and lubes, with some small racks of magazines and movies. She wondered who would buy those anymore with so much porn on the internet, but there were a few men looking through them, so she guessed there was still a market for it.\n\nShe used the earbuds on her phone and was able to keep up a bit of a conversation with SpareRod while she browsed per his instructions. He seemed very disappointed when he saw the woman behind the counter was over 50 and probably over 200 pounds. He joked that it was too bad that real life didn't work like a porn movie where the girl behind the counter would be super hot, horny, and who would force Heather to submit in all kinds of kinky ways. Heather had to giggle at the idea, but was glad that he wasn't going to make her do anything gross with the woman. On top of that, there were a few couples there shopping together, and the girls were giving Heather dirty looks already. They didn't look like they would appreciate Heather putting on some kind of sex show. Actually, one of them looked like she would probably gouge Heather's eyes out if Heather gave her the slightest reason.\n\nShe did notice a few men seemed to be spending more time watching her than really browsing the store. She guessed they didn't see single women in here very often, at least not dressed like Heather was. When she commented on that to SpareRod, he came up with a challenge for her. In between shopping for dildos, nipple clamps, and vibrators she also needed to flash her pussy to one person and her tits to a different guy. \n\n\"But Sir,\" she whispered into the mike of her earbuds, \"I can't. They might attack me!\"\n\n\"As much as they might think about it,\" he chided her, \"no one is going to attack you. Don't lead anyone on, don't make eye contact, and just make it look totally accidental. They probably won't even dare talk to you, but if they do you can just go straight to the counter to make your purchases.\"\n\nHeather could feel her heart pounding at the idea that she would flash more strangers today.\n\n\"Sir, I'm not sure I can.\"\n\n\"Oh come on now, slut,\" he sounded annoyed. \"Don't make me threaten you again. You just stood stark naked in front of the delivery man, you can certainly arrange a nipple slip or an upskirt right now. Get one done now, and then we'll shop for a while. Let's GO!\"\n\nHeather jumped from his sudden tone. She knew he was right, that she just needed to move fast and not think about it. She looked around and found an older guy browsing the bargain movies that looked safe enough. She walked one aisle over so she was facing him with a rack of movies between them. Trying to appear nonchalant, she scratched her shoulder and moved the spaghetti strap on the camisole over so it would slide down her arm. Heather had to work to keep a straight face as she tried to let the strap slide low enough for her nipple to come into view. Unfortunately, she was too turned on and her nipple was too hard to let the top slip by. SpareRod's laughter made her blush even more as she had to twist and shimmie a bit before her nipple popped into view. She let it stay in view for at least a full second before she gasped and pulled the cami back into place. She couldn't even make eye contact with the guy as she shuffled her way back towards the bondage section to finish her shopping list. It took her another ten minutes with SpareRod giving her pointers on spanking paddles and all kinds of kinky things before he was satisfied with her selections.\n\nFlashing her pussy proved to be easier. She just dropped the box of three different sizes of butt-plugs onto the floor, making a loud bang that caused everyone to look her way. All she had to do was squat down without keeping her legs together, and her short skirt ensured that several guys got a good show. She could tell she had accomplished her mission by the way they craned their necks to get a better view. She tried to manipulate her phone so SpareRod got a view up her skirt too, and as soon as she heard his appreciative whistle she stood up and scurried to the checkout. After five humiliating minutes of the woman behind the counter inspecting all of her kinky purchases, laying them on the counter for everyone to see, Heather raced out of the store. The experience had humiliated her to the core. Just the smirk on the woman's face made Heather want a giant hole to open up in the floor and swallow her. Even though she knew SpareRod would continue to humiliate her in the car and at home, she couldn't wait to get out of there and into the relative safety of her car.\n\nShe was of course right that he would keep the pressure up, and as soon as she stopped at the first stoplight, he told her to remove her skirt. While she had been telling him all afternoon that this skirt was useless for protecting her modesty, that didn't mean she thought it would be okay to take it off. As short as the skirt was, the camisole barely met the skirt at her waist, so she would have no coverage at all for her ass and pussy. Instinctively she wanted to argue with him, but she caught herself before he could demand that she drive nude instead. Even though driving naked in broad daylight would probably get her arrested, she knew that he might make her do it if she pushed it, so she unbuttoned the waist of her skirt and slid it off before the light turned green. She knew that anyone in a taller vehicle would be able to look down and see her bottomless, and she instinctively covered her crotch with her left hand while driving with her right. Unfortunately, he did not approve and he made her spread her legs and finger herself as she drove, keeping herself on edge the entire time. She drove very carefully, sticking to the right lane hoping no one would get a good view, and was amazed that she got home without incident.\n\nShe didn't know why she thought he would let her put the skirt back on to walk from her car to her house, but it still surprised her when he told her to remain bottomless and walk slowly, slinging the bag of sex toys over her shoulder. Not only would she be unable to hide her pussy or her ass, but this position would also force her to thrust out her tits so people could clearly see her nipples through the camisole. She kept her eyes locked on her front door for the entire time, so she didn't know if any of her neighbors were watching her as she walked to the front door. Even though she thought she would be getting used to this by now, she still wanted to die of shame.\n\nIf any neighbors saw her bare ass, none of them shouted at her before she got inside. It was good he reminded her to get naked once across the threshold of her door, rather than be cruel and wait for her to forget so he could punish her. She knew that normally that would be his style, so she figured he must be in a good mood after her showing off at the store. \n\n\"Okay slut, let's try out a few of your new purchases.\"\n\nOr maybe he just wanted to get right to playing with the toys. \n\n\"Let's start with that six inch dildo you bought, the one with suction cup. Find a chair it can mount to.\"\n\nHeather's dining room chairs had flat wooden seats, and she found that with a bit of saliva the dildo attached solidly, the phallus thrusting upward obscenely. \n\n\"How wet are you?\" he asked, \"I'm wondering if you can climb on that thing with out any prep? Why don't you try that for me?\"\n\nShe could tell from his tone that this wasn't actually a really a request, and she really didn't want to spank her nipples today, so she worked quickly to fit the fake cock into her pussy. To her utter humiliation, not only did the dildo enter her easily, but she slid quickly down until her ass touched the chair. She knew she was turned on, but it was a shock to see how wet and open she really was.\n\n\"Oh my, \" his voice was almost a gasp, \"I knew you liked doing this stuff slut, but I had no idea. But don't stop, I want you working that in and and out of your sweet little cunt. Good little slut. Just like that. Not too fast! Definitely no cumming allowed, but keep moving at all times.\"\n\nHeather was thoroughly humiliated to have him know once again how turned on she was by what he was doing, but it got even worse when an involuntary moan escaped her lips. He chuckled and guided her through another minute of slow, teasing strokes, building her up even closer to orgasm. Finally he let her stop, instead instructing her to set up her sewing machine so she could do some work while bobbing up and down on the dildo. It took her a few minutes, but soon she was back on the dildo, trying to measure a work skirt to trim it to be 15 inches. While that was longer than the skirt she had just been wearing, it was definitely going to attract attention at work. She tried to put that out of her mind and focus on just getting the skirt done. Not that it was easy to focus while he was chatting with her and keeping her bouncing on the dildo.\n\n\"How much longer until you have to leave for your babysitting job tonight?\"\n\n\"About an hour from now. It only takes me 10 minutes to get there. But they're going out a bit late since it's Friday, so I won't be home until after 11:00.\"\n\n\"Okay. I want you to wear what you wore to the sex shop to drive over there, but once you're there, change into what you wore to work, except of course you'll need to put on underwear. I'll send you a message for instructions on the way home.\"\n\n\"I understand, Sir.\"\n\n\"Good slut. Until then, I want you to keep fucking that cunt on that dildo. Of course I imagine your legs will get very tired, maybe even cramp up, so you can take a rest whenever you want.\"\n\n\"Thank you, Sir,\" Heather answered , even though she knew there was a catch coming.\n\n\"Of course, you'll need to keep occupied while you're resting, so whenever you're resting I want you to use the dildo to practice your deepthroat technique. I seem to remember you saying you didn't like blowjobs, so I'm figuring you need the practice.\"\n\n\"Oh my God,\" she protested. \"But the dildo, it's covered in my schnizz. That's so gross!\"\n\nHis peals of laughter did not make her feel any better.\n\n\"Wait,\" he asked once his laughter was under control, \"you told me that you've gone down on another girl before?\"\n\n\"Well,\" she stammered sheepishly, \"yeah, I did. Well I did the one time. I finger banged girls the other times. Plus I was drunk. And I've given a lot of blowjobs, but never after having it in my pussy first. It's bad enough that I might have to have guys' cum in my mouth, there's no way I want my juices too. I kinda have issues with bodily fluids.\"\n\n\"Well, I guess you'll have to get over that,\" he was still laughing. \"I'm sure in time you'll learn to love the taste of your own juices. Why don't you show me your deep throat technique before I log off?\"\n\n\"My technique? I told you I don't have any fucking technique!\"\n\n\"All the more reason for you to practice now. Don't get me upset slut!\"\n\nHeather sighed, lifted herself off of the dildo, pried it from the chair, and brought it up to her mouth. The bright pink phallus was shiny with her lube, but she decided she had to just go for it. She plunged it into her mouth and managed to get almost two thirds of it in before it tickled her gag reflex. While she wouldn't call the taste pleasant, it wasn't anywhere near as bad as she had been afraid it would be. She started to use her best blowjob skills, looking at the camera and trying to be as sexy as she knew how, hoping to get back on his good side. She even started to really get into it.\n\n\"You're kidding right?\" his question disrupted her performance. \"That looks like you only got what, four inches into your mouth? Is that really as deep as you can take it?\"\n\nHeather tried to protest that she had taken more, but he made her do it again, trying several times and letting him view from several angles. It was clear that she couldn't even take four inches into her mouth. He had her slowly work it in until she just started to gag, and hold it there for several seconds.\n\n\"Don't move it much, just hold it there for a bit. Good little slut. Now move it very slightly for the next 10 seconds.\"\n\nHeather almost gagged a couple times, but by moving the dildo out just slightly and then back again, she found herself getting just slightly more comfortable with a penis starting to enter her throat.\n\n\"Getting there slut. Until you leave for babysitting, you'll either be bouncing on that cock on the chair, or when you're tired or think you might cum, then you will be practicing your deepthroat, holding that dildo as deep in your throat as you can. Understood?\"\n\n\"I understand, Sir.\" \n\n\"I'll be recording you the rest of the afternoon, so I'll be able to check later if you followed instructions. Now, get to it slut. And try to do a good job on that skirt,\" he smirked.\n\nHeather rolled her eyes at the comment about the skirt, but was at least glad to have him sign off without assigning any spankings. She reattached the dildo to her seat, and slid herself into position. She pondered how amazing it was that you could get used to something so quickly. Just a few days ago she wouldn't even think of sitting around naked in her own bedroom, and now she was naked in her dining room, fucking herself with her newly acquired sex toys, and in plain view of the windows at the front of the house. And as icing on the cake, she was trying to sew. She just hoped she didn't sew her finger or anything.",
        "It took just over five minutes for her legs to start cramping, so she had to switch to deep throat practice again. This time she barely noticed the taste of her own fluids. She could only take the dildo in her throat for about a minute or two, so she switched back again. Back and forth she went, for about 50 minutes. She never managed to get far on hemming the skirt, but otherwise she was sure she had followed instructions. But now she was covered in a sheen of sweat from the exertion, plus her legs were slick from her own juices, so she desperately needed a shower. She took her computer into her bathroom, and let him watch her shower. She knew he was recording all this, and she really didn't want to give him any reason to punish her, so she made the shower as sexy as she could. She wiggled her ass at the camera, spent extra time soaping her breasts, and even fingered her pussy and asshole for a while. She actually started to enjoy the show, although she had to stop for fear of cumming after riding a cock for the better part of an hour. Her body felt like it was vibrating with sexual energy, and she had no idea how she was going settle down once she had to babysit. Walking out to her car dressed like a slut didn't help. Surprisingly, even getting fully dressed for work, complete with underwear, didn't calm her down any. Although that was probably because she had to get naked in her car in broad daylight to do it. She found herself essentially permanently turned on by the time she texted a photo to him to prove she wasn't getting dressed too early. So turned on that before she knew it, she was sending him a video of herself fingering her pussy while she sat in the car. She knew it was more than he had asked for, but she just couldn't stop herself.\n\nWhat was she turning into?\n\n*\n\nBrad popped open his beer, and started his computer as he unpacked the takeout boxes for his dinner. He had often thought that after years as a bachelor he should probably learn to cook, but the truth was it had never become a priority. It's not like take-out was that bad, and he certainly could afford it. While he was eating, he pulled up the recording of Heather bouncing on her new pink dildo, which made the meal seem even more special. He still couldn't believe his luck as he watched her lithe body work up and down on the fake cock. All he could think was how he would never get tired of watching this. The way her taut body tensed and rippled as the cock slid in and out of her; the way her perky tits bounced as she moved; the little moans and funny faces she made as she got herself more and more worked up. He was in heaven just watching her, and he had to undo his fly to relieve the pressure from his hardening cock.\n\nHer efforts to improve her blowjob technique were more amusing than sexy, but he still enjoyed watching them. He thought she might have made about a quarter inch of progress, but it was hard to tell. He'd have to keep her working on this daily. He wasn't sure when he might take the risk to meet her face to face, but when the time came he wanted to make sure her blowjob skills were up to par. While he still would get the occasional blowjob, it had been a several years since he'd been lucky enough to be with a woman who could really deep throat. His penis strained even more as he imagined Heather giving him an enthusiastic blowjob.\n\nIf her activities in the dining room got him hard, the show she gave in the shower almost had him blowing his load. He swore softly as he watch her soap and tweak her nipples, shake her ass at him, even clean her asshole, getting three fingers into her ass at one point. He hadn't expected her to shower, and even if he had, he certainly didn't expect this little sex show. He couldn't tell for sure if she was doing it for him, or just because it made her hot, but he suspected it was a bit of both. He was amazed that just a few days after he started blackmailing her that she was back again to improvising and improving on his ideas. He had been afraid that she would hate him so much for blackmailing her that she would shut down and only do what he forced her to do. He wasn't sure exactly what it all meant, but he was loving it.\n\nIt wasn't until after he had cleaned up his dishes that he checked his messages. He didn't think that he could get any more turned on, but Heather's little video of masturbating in her car in broad daylight had him stroking fiercely. She looked so out of control horny, and it was completely beyond anything he had told her to do. It was an unbelievable turn on to think of her being so into being treated like this that she would keep looking for more and more intense experiences. He watched the video over and over as he jacked off.\n\nOnce he'd finally recovered, he thought more about how her new enthusiasm could work for him. He'd been terrified when he'd gone to the bank while in Kansas City and gotten all that cash. Even though he'd been careful, he knew that if she had brought in law enforcement they could track down him down some way, and he'd had a sleepless night after sending the cash. Now not only had she not called the police, but she had flashed the delivery man, bought some sex toys, and was sending him video snippets on her own initiative. He never would have thought things could go so well. His only worry was that now he would need to ratchet things up to stay in front of her. Originally he had worried he would push her too far too fast, but he had to trust that this was turning her on more than he could have ever guessed, and that she could handle more. He was pretty sure he could keep her amused tonight, but he needed to think of some bigger things for the coming days.\n\n*\n\nHeather felt like she had ants in her pants the entire time she was babysitting. Even though part of her was glad to be wearing panties and a bra again, the sensations from them were exacerbating her tingling pussy and her throbbing nipples. She would have guessed that edging for a couple days plus riding in a dildo for the better part of an hour would make her really horny, but knowing that in her head didn't prepare her for living it. She felt like her crotch was running a river of lube, and even with going to the bathroom frequently to dry herself, her panties were soaked. Fortunately the kids she was watching were wrapped up in some fantasy card trading game, so she could keep to herself and sneak in a few rubs here and there. But she didn't dare do any more than that for fear of cumming by accident. After the kids were down it was even more difficult to stay focused on normal activities, but somehow she managed to do dishes and read her book without playing with herself too much. It wouldn't do to get caught by the parents if they came home early. For the same reason she didn't dare log into her chat program to see if SpareRod had sent anything. \n\nFinally the parents came home, and she raced back to her car. She could feel her heart starting to pound as she opened the messaging app on her phone. She wasn't sure it was with dread or anticipation, but either way there was a message and she had to focus on whatever came next.\n\nSpareRod2003: First off slut, I want you to know that I appreciated your extra efforts this afternoon. You definitely have the right idea, it is always a good idea to try to exceed my expectations. As a reward you will only need to remove your bra and and panties for the drive home. You will need to play with your pussy as much as you can on the drive, but I'll allow you to enjoy some time covered up for your drive home. Text me when you're home\n\n\"Oh,\" Heather rolled her eyes, \"you're going to let me stayed dressed now that it's dark and no one could see me anyways. Big deal!\"\n\nShe had to take off her blouse briefly to remove her bra from under the camisole, but she put it right back on. She shucked her panties, and was on her way home. \n\nKeely and Anna were in her living room when she home, and it appeared they were getting pretty drunk. \n\n\"Heaaaatherrrrrr,\" Anna slurred, \"we've mished you so much.\" \n\n\"Wow,\" Heather was caught in a somewhat sloppy hug as she walked by the couch Anna was lounging on, \"you two are having fun.\"\n\n\"We probably drank more wine at Rico's than we should have,\" admitted Keely. \"Some guys started buying us drinks. The wine was okay, but they weren't really our types. So we had to get the fuck out after we drank up all their wine. Couldn't stop partying though, so we opened up another here. C'mon and join us.\"\n\n\"Uhm,\" Heather knew that she had to text SpareRod, so she needed to stall a bit. \"Let me go change first.\"\n\n\"Yeah,\" Keely had a mischievous smile, \"you do seem over-dressed, don't you?\"\n\nHeather blushed deeply, but didn't respond as she scurried back to her room. She almost closed the door behind her, but remembered her rules just in time and left it open. She did her best to step out of the view and strip naked while she brought up the video chat program on her computer. She didn't want to stay here naked with her door open too long, but she knew better than to get dressed without his permission. The idea of having to spank herself or leave the room naked while Anna and Keely were close was terrifying. Thankfully, he was already on so she didn't need to wait. She updated him on what her roommates were up to.\n\nSpareRod2003: Well, since Keely asked you to join with them, I guess you'd better get back out there.\n\nNawtySubSlut1989: Anna's there too, Sir. I can't go out there naked, she'll freak. \n\nSpareRod2003: Don't worry slut, I'm understand your roommates' limits. We need to work them up slowly to your new subbie slut status. I think we let you keep a sleeveless top, right? Kind of a wife-beater?\n\nHeather's heart started to pound at the thought of wearing that shirt. The armholes would almost continuously show a side-boob no matter how careful she was. She was going to be more exposed to Anna than she had ever been before, but she didn't want to protest for fear of what else he might make her do. She rushed to pull the top on, and found her boyshort panties from the other night. She was about put the underwear on when she heard her computer ping.\n\nSpareRod2003: What are you doing, slut? you weren't about to get dressed without permission were you? I don't remember telling you that you could wear underwear.\n\n\"Please Sir,\" Heather hissed at the microphone on her computer, \"I can't go out there bottomless.\"\n\nSpareRod2003: Hmmm. Let me see. Stand back with your hands at your sides. Good girl - now turn around. I can't actually see your cunt, and only a bit of your ass cheeks, so it looks like you're acceptably covered. Get out there! And for not obeying immediately, I have a new rule. No more sitting on the furniture when you're at home. You may either stand, or sit on the floor, but no sitting on the furniture unless I specifically tell you to. And I'm only likely to tell you to do that when I want you to mount your dildo on it.\n\nThat definitely did not make her feel any better. She opened her mouth to beg him to change his mind, but she knew better by now. She grabbed her computer and headed into the living room.\n\n\"Holy shhhiiiit!\" Anna shouted when she saw Heather. \"You're not wearing much, are you.\"\n\n\"I guess you are getting closer to being a nudist aren't you,\" Keely winked at Heather as she poured her a glass of wine. \"Who knows where this could lead?\"\n\n\"Jussht don't be gettin' all naked an' shit right now,\" Anna slurred. \"Don't want evrywun sshheeeing and thinking we're all sshluts.\"\n\n\"Ohhh, I think most folks already know what they think about you,\" Keely teased, \"let Heather have her fun.\"\n\nHeather laughed out loud as Anna flipped Keely the finger and yelled obscenities. Keely blew a kiss, and Anna stick out her tongue. They kept up their banter and Heather tried to decide what to do about sitting. At first she thought it would be safer to sit on the floor in front of the Keely's couch, since she was a more tolerant of her state of dress. But that would guarantee Anna a view up her skirt/shirt, so she decided it was better to sit next to Anna so only Keely might see Heather's private parts. \n\nThe girls gave her a funny look as she slid down and sat on the floor next to Anna. The shirt was so short and open on the sides that it was essentially impossible to be modest as she sunk to the floor. She was pretty sure Keely got a good view of her vaj and Anna saw her boob from the side as she positioned herself. She finally came to rest on the carpet with her thighs together, her feet tucked under her, and her computer off to the side. She felt her cheeks burning in embarrassment as the girls laughed at her and rolled their eyes. But at least they didn't say anything too catty. She positioned the computer so SpareRod could see her, she could see his chat, and (hopefully) Anna could see nothing. She just prayed they believed Heather was checking her social media and things like that, rather than doing something crazy like chatting with her online blackmailer. Heather kept up with the girls' discussions while sporadically answering his chat messages.\n\nSpareRod2003: So are they enjoying the view?\n\nNawtySubSlut1989: Pretty sure Keely got the whole show. Anna probably only saw my boob. My heart is pounding!\n\nSpareRod2003: I love watching you be nervous. Slug down that glass of wine now, and ask for a refill.\n\nNawtySubSlut1989: Getting me drunk, Sir?\n\nSpareRod2003: Just calming your nerves, slut.\n\nKeely had a sly smirk on her face when she told Heather to bring her glass over for more wine. Heather tried to stand as as modestly as she could, using one hand to hold down her hem so she didn't moon Anna. Keely didn't make it any easier, taking the glass to fill it, but then pulling it away when Heather tried to take the full glass back. Keely giggled watching Heather's breasts sway and jiggle as she tried to get the glass back, doing her best to hold her shirt hem down. Finally, Keely let Heather get her glass and she repeated the awkward process of sitting on the floor. Keely's big grin let her know that she had flashed her pussy again. At least this time she kept her boob inside her shirt.\n\nSpareRod2003: That's so funny that she made you walk over there. Did Anna get a nice view of your ass?\n\nNawtySubSlut1989: I don't think so, Sir, I held my hem down. I think Keely got a view of my boobs, though. She kept moving the glass so I couldn't get it back.\n\nSpareRod2003: Oh well, that's too bad for Anna. I like Keely's sense of humor though. I think we should make sure she sees a bit more. I want you to drink half of that glass of wine right away. Then I want you to pinch each nipple through your shirt for a full five second count.\n\nHeather almost choked on her wine. She manage to drink half the glass before she responded.\n\nNawtySubSlut1989: I can't, Sir. They're right here! It'll be too obvious.\n\nSpareRod2003: You worry too much. I'm sure you can do it subtly. You are allowed to cross your arms to cover what your fingers are doing, but make sure to pinch them hard. I want them to show clearly through that top.\n\nNawtySubSlut1989: Please Sir. They already show so much. I'm scared.\n\nSpareRod2003: Hmmm. Let me look here, I think I have Keely's and Anna's email addresses handy. I wonder how quickly they would get that video of you fantasizing about everything you would like them to do to you.\n\nNawtySubSlut1989: Okay, I understand Sir. Please just give me some time. I'm very scared, particularly what Anna might do. Please don't push me too hard.\n\nSpareRod2003: You have some time, slut, but don't test me too long.\n\nHeather looked down at her breasts and pondered how she would do this. Her nipples were showing pretty clearly now, she thought, especially when they could slip right out through the arm holes. She set down her half full wine glass and engaged in the conversation with her roommates. She could feel her heart pounding as she crossed her arms in front of her boobs, trying to keep her attention on Keely's eyes as she position her right hand behind her left bicep, and pinched her nipple. She kept her eyes locked with Keely's and did her best to keep chatting as she bore down hard on her nipple and counted slowly in her head. One Mississippi, two Mississippi, three Mississippi... Keely's eyes darted down a couple times, clearly suspecting something was up. Her eyes widened slightly when Heather dropped her hand, and it was all Heather could do to not look down at her nipple. She was sure from Keely's reaction that it had to be more prominent through the thin fabric than ever. Heather knew for sure that if she looked down Keely would figure out Heather had done it on purpose.\n\nShe waited for almost five more minutes, talking and sipping her wine as casually as possible, before she had worked up enough courage to do her second nipple. Keely seemed to be paying even closer attention this time, and Heather was pretty sure she could see a smirk form once her rock hard right nipple was back in view Heather's face felt hot and flushed, and she was sure was going to start leaking profusely from her pussy.\n\nSpareRod2003: That was acceptable. It seems like you need more wine to calm yourself down. Finish your glass and go get some more. But this time I want you to walk over and back on your knees. As an extra challenge, hold your glass in both hands at all times. You'll just have to hold it out for Keely to pour. That will keep you from adjusting your shirt in any way. You are not to touch your shirt under any circumstances, even when you sit back down.\n\nHeather didn't think it was possible for her heart to beat any harder, but the image of kneeling in front of Keely, holding the glass out with both hands asking her to fill it, it almost made her chest explode. It was so submissive, there was no way Keely wouldn't pick up on it. Plus not holding the hem of her shirt down meant she would probably show most of her butt to Anna. Part of her wanted to plead and beg with him not to make her do it, but deep down part of her was getting incredibly turned on by the thought. This was what she had fantasized about wasn't it? To be able to do these kinky, dirty things while not having to take responsibility for it? This way she would be able to tell herself that she didn't have a choice, that he forced her to do it, and then just ride with the sensations. Suddenly, she knew she was going to go through with it, and anything else he told her to do tonight.\n\nShe swallowed the rest of the wine, got up onto her knees, and holding the glass in both hands in front of her, walked on her knees over to Keely. Her voice came out even softer and more submissive than she expected when she asked for some more wine. Keely had a quick burst of laughter, but quickly recovered and grabbed the wine bottle. Heather didn't dare turn around to see Anna's reaction, but she was pretty sure it was stunned silence. \n\nKeely held up the wine bottle, and cocked an eyebrow at Heather expectantly. It was clear that Keely wanted to hold her glass out at arms length to get her wine. Heather's face turned yet a deeper shade of red as she held her arms out straight, holding the glass in both hands. Not satisfied, Keely moved the bottle a few inches back. Heather remembered her plan to go through this no matter what, and she bent at the waist, leaning forward to get the glass next the wine bottle. Her shirt fell away from her breasts as she bent forward, giving Keely an even better view of her nipples. Heather wasn't sure how much the hem of the shirt rose in back, but she imagined that about half her ass was in plain view. She kept her thighs pressed tight together to make sure she wasn't showing Anna her vagina or anus.\n\nKeely filled Heather's wine glass very full, emptying the bottle. Heather had to focus on the glass as she walked on her knees back to her place next to Anna, just to be sure it didn't spill. The good news was focusing on that helped Heather not worry what was on show. When she finally was seated she took a chance and looked down at herself. It was even worse than she had feared. Her shirt had shifted and her left nipple was peeking out from the large arm hole. On top of that, the shirt had ridden up so her slit was clearly visible as she sat. It took every shred of willpower she had to not readjust the shirt to cover herself. Instead she just kept her thighs pressed together as tightly as she could, placed her left bicep where it hid her nipple from Anna, and tried to engage in the conversation as if everything were normal. Keely grabbed another bottle of wine, filling her own and Anna's. It wasn't lost on Heather that Keely had walked over to fill Anna's glass, but had made Heather come to get hers. ",
        "Heather was busy enough in the conversation that she couldn't update SpareRod about everything, but he could clearly see how exposed she was. He did make her drink half her glass of wine, which was running the risk of moving her past tipsy and into outright drunk. But being a little drunk did make it easier when he told her to sit with her legs out in front of her rather than with her feet tucked under her butt. Since she wasn't allowed to touch her shirt, she ended up with her bare ass on the carpet and her pussy in plain sight. Keely must have been getting quite the view, and it was possible that Anna could see it. The good news was with all the motion her nipple somehow slipped back inside the shirt. Even still, it was beyond humiliating to continue chatting with her roommates with her junk hanging out and not being allowed to do anything to cover herself. But after five minutes or so she began to calm down a bit and she started to feel a little normal. Apparently he noticed that, and wanted to keep the pressure up, because that's when the text showed up instructing her to spread her legs so her knees were six inches apart. She tried to argue that Keely would be able to see everything if she did that, but he suggested that sitting criss-cross-applesauce would really show Keely everything. Heather's heart began pound as she shifted her butt a little and left her legs apart. Keely definitely glanced down at Heather's crotch, but other than a slight smirk, she didn't show any sign of disapproval. \n\nAll of which must made SpareRod want to keep upping the ante. His next instruction was to use her right hand to scratch under her right boob, and to make sure her nipple stayed exposed after that. She almost choked on her wine reading that, it was so brazen, her roommates were going to know for sure she was doing it on purpose. She took a few minutes to try to figure out how to do it in a way that wouldn't be obvious, but finally decided she would just do it and get it over with. Keeley's eyes widened as Heather rubbed her rib cage just below her right boob, exposing her entire breast to her roommate. Heather tried to keep a straight face, and slugged down the last of her wine, leaving her right nipple completely exposed.\n\n\"Ohhh... fuck,\" Anna suddenly sighed, \"I'm so drunk. I'm gotta go to bed. My head is just spinning.\"\n\nHeather and Keely watched Anna stagger down the hall and stumble into her room before she slammed her door. Keely laughed out loud, but Heather was worried.\n\n\"Did I push it too far,\" Heather asked, \"do you think she'll be pissed?\"\n\n\"Shit,\" Keeley answered, \"she'll barely remember anything through the hangover she's going to have. But I'd say that being out in just that shirt with your junk all hanging out was a bit much for her. She's kinda conservative, I think you'd better at least wear those booty-shorts around her from now on \"\n\n\"But I... I don't mind,\" Keely continued. She was trying to sound nonchalant, but Heather could hear some excitement in her voice. \"I even kinda enjoyed having a naked serving girl last night.\"\n\nHeather shivered inside hearing even that small bit of encouragement. It made her exposed pussy even wetter, and it terrified her how much this turned her on. She knew how SpareRod would react, and sure enough he texted within seconds.\n\nSpareRod2003: Can't pass up that offer. Strip now, and ask her what you can do for her. Do anything she asks, and a foot massage is the bare minimum I'll accept. Be sure to turn your computer so I get to watch.\n\nHeather looked at Keely for a few seconds, and then lowered her gaze to the floor. \n\n\"I guess I could be your naked serving girl again tonight,\" Heather said shyly. She leaned forward and removed her shirt quickly before Keely could respond, got up her knees, and moved a little closer to Keely. \n\n\"What can I do for you Ma'am?\"\n\nKeely looked a little surprised, but Heather thought she also looked relieved. From Keely's point of view, it had been a risky move to suggest that Heather should get naked. Keely had no way of knowing that Heather had no choice. She wasn't sure what Keely's expectations were, but Heather resolved to do her best to keep things easy for her roommate.\n\n\"Can I get you some more wine? Another foot massage?\" Heather prompted.\n\n\"Actually I think I'm done with wine,\" Keely had a bit of a wicked grin as she realized Heather was game to play. \"I think we have some Amaretto in the kitchen cupboard. I'll have some on the rocks.\"\n\nHeather took a deep breath, recognizing that Keely was having some fun at Heather's expense, sending her to the kitchen naked. She casually spun her computer around as she stood up, aiming it generally towards Keely's seat so he'd be able to see whatever happened next. She was pretty sure the screen was tilted so the camera would only take in Keely from about the chest down, but there was no way to really check without letting Keely in on what was happening, so she just had to trust that it would work out.\n\nThe trip to the kitchen was not as nerve-wracking as the previous night's, since she didn't have to fuck a bottle this time, but it still felt very exposed to be walking in plain view of the window completely naked. She worked as quickly as she could to limit her exposure, and soon was standing in front of Keely offering her the drink.\n\n\"Mmmm, that's perfect,\" Keely sighed, \"and now that foot massage. Will you take off my boots?\"\n\nKeely raised her foot, holding her leg parallel to the floor, waiting for Heather to remove the boot. Heather took her roommate's calf gently in her left hand, and used her right to pull the heel of the boot. It was a pretty tight fit, and Heather had to work at it a while, but it looked like Keely enjoyed watching the sway and jiggle of Heather's boobs as she worked the boot off. Once the boot was off, Heather slid her roommate's sock down slowly, caressing Keely's foot sensually as she went. Keely giggled a little as if it tickled, but managed to keep her foot mostly still. Once Heather had the sock off, Keely raised her other foot and arched her eyebrow at Heather. Heather decided to up the ante a bit, and swung her leg over Keely's leg, pivoting so her ass was facing Keely. Heather blushed at the thought of being so brazen, but she hoped that SpareRod would appreciate the extra effort. She could only imagine the view Keely had as Heather bent over to pull on the boot heel, with her legs forced to spread a bit by Keely's leg between them. Heather could feel her butt cheeks part a bit, and the cool air on her pussy and asshole. The humiliation of the exposure made her pussy throb with pleasure. It was all she could do to keep herself from pulling Keely's shin up against her crotch, but she knew she would leave a wet stain on Keely's jeans if she did that. So she had to settle for removing the boot as seductively as she could.\n\n\"Let me help you with that,\" Keely giggled, and she planted her right foot on Heather's right ass cheek, her big toe perilously close to Heather's butthole. Keely pushed with her foot, like she was helping to get her boot off, but it really seemed like all that really happened was to spread Heather's ass even wider.\n\n\"Is my roommate seriously checking out my asshole?\" Heather thought. The thought was so kinky, it made her shiver. She pushed her butt back, and wiggled it a little as she pretended to struggle to get the boot off. It didn't get the boot off any faster, but it did help keep her cheeks spread wide, and it even repositioned Keely's big toe closer to Heather's exposed anus. \n\nUnfortunately Heather couldn't make this last too long without destroying the last shred of the illusion that this was even remotely normal behavior. Soon enough she had both the boot and the sock off and was kneeling. facing her roommate, her butt resting on her feet. Before she could get Keely's foot to start the massage, Keely stood up and started unbuttoning her jeans.\n\n\"Ahh,\" she sighed, \"it's too hot to keep these on. I'm may not start getting naked like you, but there's no reason to keep these jeans on. Oh serving girl, help me get these jeans off.\"\n\nKeely said the last bit in her fake imperious tone that made Heather laugh out loud. She had to reach up to get a hold of Keely's waistband, and slowly, sensuously pulled down the jeans. It felt so strange to be kneeling in front of her roommate, her face just a few inches away from the sheer satin panties covering Keely's sex. She didn't know if she wanted to bury her face in Keely's crotch and lick, or to run away and hide. She tried to make it as sensual as she could, tracing her fingernails along Keely's thighs as she slowly worked the jeans down. Keely bit her lower lip and shivered slightly from the caresses, but all too soon she stepped out of the jeans and sat back down. \n\nStill kneeling, Heather sat back on top of her feet, and took one foot on to her lap and began massaging it. After a few minutes, Heather repositioned herself slightly, making sure to spread her knees apart to make sure there was no way Keely could miss the view of her naked serving girl's pussy. Heather couldn't believe how brazen she was being, but between all the edging with no release and SpareRod pushing all her buttons, she was too turned on to think straight. She repeated her tricks from night before, casually brushing her roommates toes against her breasts. Keely reciprocated by wiggling her toes when it might tweak Heather's nipples. Keely kept a detached look on her face and didn't make eye contact as she cooly sipped her drink. Despite Keely's outward indifference, Heather was surprised when Keely pulled her right foot up onto the couch. This had the effect of spreading Keely's legs wide and pulling her panties tight against her crotch; the view of Keely's plump folds through the satin panties almost made Heather swoon. She bit her lower lip as she stared at Keely's crotch and kept up the massage.\n\nWhen Heather switched to Keely's right foot, Keely pulled her left up onto the couch and somehow managed to sit with her legs spread even wider. A few stray pubic hairs poked out around the gusset of the panties, and Heather had visions of cramming her face in there and licking for all she was worth. All this teasing was impairing her judgement and making her head spin. She took Keely's foot and pulled it in against her belly, the toes pressed into her boob. The toes weren't quite touching her nipple, and as much as she wanted to do that, something held her back. It just seemed too bold for her. Heather slowly began massaging up Keely's calf, alternating between deep muscle probing and teasing her fingernails. Keely laid her head back and closed her eyes as Heather massaged higher and higher. Soon Keely dropped her left foot back to the floor and murmured that Heather should do that calf too.\n\nAfter several minutes of massaging Keely's left calf, Heather stood up on her knees and moved up to the left thigh, rubbing from about mid-thigh down to the knee. She did the right thigh next, eliciting the softest of moans from Keely. Heather positioned herself between Keely's knees, and began massaging her the tops of her upper thighs, almost up to her panties. Heather's heart was pounding at how brazen she was being. But before she could decide if she should take this any further, Keely opened her eyes, and smiled lazily at Heather.\n\n\"You are an awesome serving girl,\" she said. \"I could totally get used to this treatment. But I'm so relaxed now, I'd better go to bed. Help me up.\"\n\nKeely raised her arm, waiting for Heather to help her. Heather shakily got to her feet, then pulled Keely up. Keely wobbled for a second, and stepped forward, putting her arm around her shorter roommate. Heather's knees almost buckled as Keely's hand slid down her bare back and came to rest on her butt. \n\n\"We left a bit of a mess in the kitchen,\" Keely said breathily, just inches from Heather's face, \"you'll be a good serving wench and clean up for us, right?\"\n\nAs Keely said the word \"wench\" she moved her hand closer to Heather's ass crack and squeezed her butt cheek firmly. Then Keely leaned in and kissed Heather right on the lips. The kiss was firm, lasted a few seconds, and Heather thought Keely even sucked on Heather's upper lip for just an instant. Keely's hand definitely grabbed Heather's ass more firmly, and Heather even felt fingernails graze her anus. But before she could respond, Keely stepped away, walked to her bedroom, and closed her door.\n\n\"Fuuuuuuck!\" Heather swore quietly as she pinched her nipple and stroked her clit for a few seconds. She didn't think she'd ever been this horny in her life. She sat down with her computer to chat with SpareRod for a few minutes. He told that she'd better do a good job cleaning up, included scrubbing the kitchen floor on her hands and knees, or she'd be spanking herself in the front picture window again. To make it worse, he had her get one of the new butt plugs she'd bought (the smallest one, thank God) and told her to keep it in her ass while cleaning. \n\nIt took her just over an hour to clean the living room and kitchen up. She knew she should have been terrified, but she was still buzzing with arousal, and the feeling of the buttplug in her ass was surprisingly pleasant. She found herself wiggling her ass and clenching her legs, especially while she was scrubbing the kitchen floor on her hands and knees with her ass up in the air. She had no idea how she would explain this if Anna or Keely if they got up, but thankfully they didn't. \n\nFinally she went to her bedroom, and following his instructions, she edged herself on cam for 10 minutes before removing the butt plug and getting ready for bed. Even though she had had such a long day, she didn't think there was any way she would fall asleep soon. Her mind raced as she played the days events over and over in her mind. As terrifying as it all had been, the part that both excited and scared her the most is how things were changing with Keely. It was all so insane, and she didn't know where events were taking her. She was worried about how tonight's developments would change things with her roommate, but once SpareRod took control it didn't seem she had any choice. In the end, she decided she just had to let go of any illusion of control, and after that she started to drift off to sleep. Her last thought was that it was starting to feel right to trust them."
    ],
    "authorname": "koala011860091",
    "tags": [
        "blackmail",
        "online",
        "forced exhibitionism",
        "orgasm denial",
        "cfnf"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-perils-of-being-too-trusting-ch-03"
}