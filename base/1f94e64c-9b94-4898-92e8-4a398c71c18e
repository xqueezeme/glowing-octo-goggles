{
    "title": "Inverted Intimacy",
    "pages": [
        "Author's note: This story builds slowly and pushes a silly premise far beyond plausibility. I hope you enjoy it.\n\nI received tremendous support in writing this story. My thanks to Ravenna933, swiftlytilting, ChancesAre, EditingAlix, LostLittleLamb, and 1moeannie for their incredibly thoughtful feedback and encouragement.\n\nRavenna933, swiftlytilting, ChancesAre, and LostLittleLamb are published authors on Literotica and I urge you to read their excellent stories.\n\nAlthough not stated explicitly, all characters are over 18 years old.\n\n* * * * *\n\n\"Breasts, yes. I want to show you my breasts,\" Anna said, making a simple request that complicated everything.\n\nJake instinctively glanced down at her chest, before wrenching his gaze back to her face. His mind raced in useless circles around a single thought: Danger!\n\n\"But you have to promise to tell me if that would make you uncomfortable,\" Anna said. \"I can only ask you this favor because our friendship is both close and solidly non-romantic. I completely understand if my request is just too flippin' weird!\"\n\nJake had never been less comfortable in his life. This felt like a bad idea.\n\nHe wanted it anyway.\n\nFeeling ashamed of himself, Jake forced himself to think. Anna wouldn't ask unless it was important to her. He didn't want to hurt her feelings, so he tried a joke. \"Compared to eating the terrible chicken dinner you made last night, this sounds like a walk in the park.\"\n\nAnna erupted in giggling. She was clearly nervous, but it was comforting to hear her infectious laugh. That, at least, felt normal.\n\nThey met about a year ago, neighbors moving in on the same day. She had a kind face. If she wore makeup, it wasn't enough to notice. She was an inch taller, had brown eyes and long blonde hair--brilliantly shining blonde--always in a ponytail. Her face seemed to have only two states: stern concentration or an easy smile. She had a solid aspect to her figure but wasn't fat. Her tight jeans revealed strong legs and a substantial bottom that her height proportioned nicely. A baggy flannel shirt hid any details about her breasts.\n\nAlthough Jake tended to be shy, an endless conversation began during their second shared elevator trip. Her name was Aine, but she went by Anna. She liked hiking and tinkering with electronics. They both just moved into town and it was their first time living on their own. Anna did some kind of computer engineering work that sounded much cooler than the business analysis work he did. They both used Excel spreadsheets extensively for work and shared many of the same frustrations with its quirks. They liked a lot of the same video games and movies and had plenty to talk about.\n\nThat first night they shared take-out at Jake's place, which was the start of Anna's habit of visiting constantly. Jake insisted on paying. To repay him, the next night Anna made dinner in his kitchen. Jake then reciprocated the following night. Neither of them was a very good cook, but it worked out. They ate dinner together nearly every day, alternating cooking and cleanup. Anna declared it was more efficient to share food between two people. She also decided Jake's pot, pan, and dish situation was better than hers, so they used his kitchen. Jake gave her the spare key to his apartment and she came and went as she pleased. He started to develop real feelings for her. This stopped when, after a week hanging out together, Anna mused on the merits of their relationship.\n\n\"I'm glad we're neighbors,\" Anna said that day. \"We've only known each other a week, and yet I already feel like we've been friends for years.\"\n\n\"I feel the same way,\" Jake had said.\n\n\"Best of all,\" she added in a moment burned into his memory, \"Is we don't have a trace of romantic tension between us. We're free to just be friends without all that bullshit.\"\n\nJake let her comment pass without challenge. What else could he do? But it was a blow. All his romantic and erotic fantasies about her fizzled, impossible to sustain if she didn't feel the same. At least he did genuinely like her, mostly.\n\nThe \"mostly\" came down to her presumptuousness. She saw that, obviously, it made sense for them to share Jake's kitchen. Obviously, it made sense for her to set up her electronics workbench in Jake's apartment, and hadn't even asked him. He didn't complain because he liked their dinner arrangement and liked seeing her build crazy electronics. She wasn't wrong in her actions; he just wished she'd ask first.\n\nWatching movies, playing video games, and discussing politics solidified their friendship. Jake was eventually able to suppress most of his unwelcome feelings about Anna. He tried his best to think of her as just a friend. A pal.\n\nWhich made this request so upsetting. He was dismayed to find that his efforts over the past year had only hidden the shameful ember of carnal desire in his heart. Her words now rekindled it into a bright flame, unthinking and ravenous. He refused to let it burn this person he cared about.\n\n\"Anna, wait.\" Jake was surprised to hear the words coming out of his mouth. Concern returned to her face. \"Are you sure about this? It's not that I don't want to see... you.\"\n\n\"Then why don't you shut up and let me show you?\" Anna asked, laughing nervously.\n\n\"Believe me, I'm wondering myself. I just... we've been neighbors for almost a year now, and I like to think we've become friends. However, I never got the sense you saw me as more than a friend, so this whole 'I want you to see me naked' thing is a bit of a surprise. Not an unwelcome surprise, but, well, can you please spell it out for this dummy?\"\n\nAnna looked down and sighed. \"You're right, I owe you an explanation. Please... please be patient with me. This isn't easy.\"\n\n\"Deal,\" Jake said in agreement. He leaned back on the couch and crossed his arms and legs in an exaggerated manner. \"I'm extremely patient.\"\n\nAnna took a deep breath. \"When I was eighteen I had my first serious boyfriend, Andrew. We were making out, and I let him take my shirt and bra off. It was a mistake. He was a mistake. I don't know what I saw in him. The thing is, I have inverted nipples.\" Anna turn away from Jake and began to shyly fidget. \"He freaked out when he saw them. He didn't want to touch them anymore, didn't want to touch me. Looking back, I think he was just a nervous kid frightened by something he didn't understand. Still, it really hurt.\"\n\n\"Fucking hell, Andrew. What a massive asshole,\" Jake said.\n\nAnna's face showed relief at his reaction. \"Yes,\" she agreed, \"especially when he told his friends and started calling me 'Nnanna' for 'No Nip Anna.'\"\n\n\"No way!\" Jake said. \"What the fuck?\"\n\n\"High school can be rough, right? It's not even accurate. I have nipples, they just go in instead of out. I think the whole school eventually heard. Plenty of people 'accidentally' called me Nnanna, even a teacher once. I was devastated at the time, but I've tried to forget about him, about his reaction, about the taunting. I've dated a few guys over the years, though I've always ended it before things got... intimate. I've come to realize, on some level, I'm still ashamed of my body. I'm still afraid of a repeat of Andrew's reaction.\"\n\n\"That is some bullshit. No person should be ashamed of their body.\"\n\n\"Yes,\" Anna agreed. \"Intellectually, I know that. I've been telling myself for years. My trouble is the difference between knowing in my head and really feeling it in my heart. That's what I'm hoping you can help me with.\"\n\n\"Got it,\" Jake said. \"You want to show me your breasts, so I can NOT freak out.\"\n\n\"Exactly! Which sounds silly when you say it out loud. I know this is a weird favor to ask, I just... I feel safe with you.\" Doubt returned to her face. \"It's totally okay if you'd rather not do this. I don't want to guilt you into this.\"\n\n\"Anna, it's okay. Thank you for explaining. I understand, I think.\"\n\n\"Oh, come on, it's not a big deal,\" Anna said, trying to sound casual. \"Right?\"\n\nJake shook his head. \"I disagree,\" he said. \"A friend sharing something deeply personal and fraught with shame, trusting me. It's a big deal.\"\n\nAnna gazed into Jake's eyes, her breasts dominating his thoughts as they rose and fell with her breaths. He wondered if he saw more than friendship flickering in her eyes, but then it vanished.\n\n\"Thank you,\" she said. \"Now that we've reached an understanding and decided on a course of action, we have another problem: I don't see how I can work up the courage to actually, um, do it.\" Her voice got very quiet at the end as she looked down and chewed her lip. \"It just seems impossibly weird and awkward to undress in front of you.\" She gave his arm a gentle shove like she did when they played video games.\n\nJake thought for a second.\n\n\"Well I'm certainly not going to pressure you. But if you're set on doing this, then I have a suggestion: What if we both pretend you're fully clothed? I'll set up the video game. When you're ready, you come in dressed however you want, and we'll both just pretend everything is normal. We can play Mario Kart like we planned, all very normal and unremarkable.\" Jake couldn't help smirking a little bit at this last sentence.\n\nAnna's face brightened. \"I like that idea. That might work.\"\n\nJake stood up. \"Off you go, then,\" he pointed at his bedroom. \"I'll just set up the game and you can join me when you're ready.\" He faced the TV and grabbed the remote. \"I hope you are prepared to get trounced,\" he added.\n\nAnna departed for his bedroom. Jake's heart raced, and his hands trembled a bit. He tried some deep slow breaths. They didn't help much. He visualized the bedroom door behind him and the woman he expected to emerge any second.\n\nJake was ashamed to feel an erection start at just the thought of seeing Anna's breasts. His friend was trusting him to help her! He had to master himself and come through for her. He had to.\n\nHe heard Anna take a quiet step into the open doorway behind him. He dared not turn around.\n\nOn an impulse he pulled his own shirt off and tossed it. While he was very aware his own skinny chest was completely unremarkable, he hoped this would make her a bit more comfortable.\n\nThen he did something he knew she hated. \"I hope you don't mind, I'm just going to start the race. I'm choosing your character... yes, Bowser on the biggest car so you can't do anything but go in a straight line...\"\n\nAnna's hand snatched the controller out of his as she dropped beside him on the couch.\n\n\"Don't you dare!\" she said, laughing.\n\nJake kept his eyes locked on the TV screen, trying to act casual while his mind reeled at the bare breasts just visible at the corner of his eye. She had done it!\n\nPart of him wanted to turn and stare directly at the first bare breasts he'd met in person. A bigger part of him was simply proud of his friend's courage. She'd identified a source of needless shame and took steps to overcome it. Jake wanted to make this a positive experience for her.\n\nThat didn't mean he didn't take in as much as he could without looking directly. In addition to taking off her shirt and bra, she had taken out her ponytail. She parted her hair on either side of her head, and let it fall down her front. Through this inadequate screen of hair he thrilled at an impression of pale roundness, and maybe a hint of pink?\n\nIt helped to have the game to concentrate on, though his playing was shit. Anna was never one to sit still and just push buttons on the controller. She moved her whole body with each turn of the race car. He kept his gaze glued to the TV even though her constant movement tickled the outskirts of his vision mercilessly.\n\nAfter several races, Jake started to feel close to normal. His game-play was back up to the level of \"respectable.\" His erection calmed down. He still hadn't gotten a look at Anna's bare breasts sitting right next to him, but he also no longer had to struggle to keep his eyes locked forward. He felt relaxed and happy, having fun with his friend. More than happy, he felt buoyant. It was as if Anna's bare chest was a beacon radiating warmth, bathing his heart in contentment. Just knowing that she trusted him with this made him feel closer to her.\n\nWhen Anna won the next race, Jake decided to check on her. He put the controller down, tilted his head far back on the couch to make it clear he could only see the ceiling, and leaned in her direction with one hand to his mouth in a conspiratorial gesture. Whispering, he said, \"How are you doing?\"\n\nAnna mirrored his pose and whispered in response. \"Really good, actually. How are you doing?\"\n\n\"Really good, too,\" Jake said, afraid to reveal how much more than just 'good' he felt.\n\nAnna nodded slightly and then she sat up and resumed talking in a normal voice. \"I'm going to get us glasses of water.\" And with that she stood up and walked to the kitchen.\n\nJake took in the sight of her bare back as she walked away from him. She was beautiful. He longed to touch her and hated himself for it. Momentarily, she would be walking back toward him, and he had to keep his eyes on the TV. He had to.\n\nShe returned from the kitchen with two glasses of water. Instead of sitting she stood directly in front of him, blocking the TV, and held one out. Jake's efforts at gaze discipline went out the window as he was forced to look up at the glass, which she held at the exact elevation to be in line between his eyeballs and her breasts. Jake did his best to keep his eyes moving up to her face where he looked her in the eyes and said a hoarse \"thank you\" as he took the glass.\n\nAnna tilted her head far back to take drink. With her eyes toward the ceiling, Jake understood she was giving him permission to look.\n\nJake's eyes widened as he took in the sight, and his composure left him. The rest of the room faded out of existence as his brain took in every detail.\n\nThe slightly tan color of Anna's face and arms was thanks to the sun, for her bare shoulders and upper chest were paler. Her breasts were paler still and revealed a faint tracery of blue veins around her shapely contours. Her hair covered the promised inverted nipples, though he could see the edges of puffy pink areolas.\n\nOn the one hand, this was just another part of his friend's body. His friend Anna happened to be a woman, women have breasts, and these were simply Anna's breasts. Up close like this, Jake could see the subtle details on her skin. The fine hairs, sprinkling of moles, and minor asymmetries stressed the reality of what he beheld, in contrast to the airbrushed breasts in porn. Intellectually, Jake knew in the big picture all breasts, all bodies, were ultimately unremarkable.\n\nOn the other hand, Jake couldn't help feeling these particular breasts were magical beacons of beauty, acceptance, trust, and intimacy. Anna's breasts emanated waves of warmth that bathed his heart in joy and evoked feelings of affection and protectiveness. It pained him to think of all those years of being ashamed of her body, avoiding physical intimacy for fear of rejection.\n\nAfter an eternity of taking in this sight, Anna sat on the couch again. He fastened his eyes on the TV and tried to regain his composure.\n\nJake felt a flash of pain on his arm as Anna playfully hit him with the back of her hand. \"Come on, slowpoke, press 'A' so we can start the next race. I'm enjoying destroying you.\"\n\n\"Oops,\" Jake said, resuming the game. And then, feeling daring, he added: \"I don't know where my mind was.\"\n\nIt was hard to tell without turning his head, but he thought he saw her smile.\n\nThey played a few more races until it was their usual bedtime for a work night.\n\nAnna stood up. \"Well, we both have work tomorrow. Better call it a night.\" She walked into Jake's bedroom and then returned dressed normally. The light in the room felt weaker without the shining warmth of her bare breasts. He fought to hide his disappointment.\n\n\"G'night,\" she said, walking to the door.\n\nJake leaped up to meet her at the door. \"Thanks for the fun evening,\" he said. Then, his face reddening, \"I mean the Mario Kart.\"\n\nAnna laughed, her face blushing too. \"Thank YOU!\" Then, hesitating, \"for everything.\"\n\nWhen the door closed behind her, Jake's apartment felt cold, lonely, and dark.\n\n* * * * *\n\nThe next day at work, Jake had trouble getting anything done with visions of Anna's breasts dancing in his head. He missed the feeling of being with her when she was topless. But on his way home, a new worry arose: How awkward would it be when he saw her again tonight? There was no going back to how things had been before.\n\nOpening the door to his apartment, he heard Anna working in the kitchen.\n\n\"Hey,\" Jake called out.\n\n\"Hey yourself,\" Anna answered from the kitchen.\n\nJake relaxed when he saw she was wearing a shirt, though not without a pang of disappointment. What had he expected? Idiot. Anna cut vegetables, wearing the circuit-board-print apron she liked.\n\n\"Get the waters, I'm almost finished.\"\n\nJake tried to act normal but couldn't stop thinking about her breasts as he set the coffee table in front of the TV. Anna put down plates of chicken salad and sat beside him on the couch.\n\nNormally, at this point they would watch something on TV while they ate. The remote control was on the arm of the couch next to Anna, ignored.\n\n\"How was work?\" Anna asked.\n\n\"Oh fine, pretty normal,\" Jake lied. \"You?\"\n\n\"Actually,\" Anna said, \"I had trouble focusing at work today.\" She paused there, as if giving Jake an opportunity to say more.\n\n\"To be honest,\" Jake admitted, turning to look her in the eye, \"I had the same problem.\"\n\n\"Was there something on your mind?\" Anna asked.\n\n\"Technically two things were on my mind,\" Jake said.\n\nAnna burst out laughing. Relieved, Jake laughed too.\n\n\"I want to thank you,\" Anna said, \"for being so patient with me last night. And kind. I was close to running out of the room in tears. You helped me keep it together.\" She took his hand. \"That was very kind of you. I feel like a burden of shame was lifted. Thank you.\"\n\nJake blushed.\n\n\"What I hadn't expected, though...\" Anna looked down. \"What I hadn't expected was how much I enjoyed it.\"\n\nAnna slowly raised her eyes to meet Jake's. Panic came rushing back. Did she want to do it again? Did Jake want that? Confused thoughts swirled in his head. Did he want to kiss Anna? Yes, but she didn't want that. Did he feel romantic thoughts about her? Yes, but she didn't want that either. Did he want to see her breasts again, despite all his misgivings? Yes. Most definitely yes.\n\n\"Did you...\" Anna was studying his face. \"Did you enjoy it, too?\"\n\n\"YES!\" Jake blurted out, not exactly playing it cool.\n\nAnna smiled. \"Do you... do you mind if we do it again?\"\n\n\"I would love that,\" Jake answered.\n\nAnna hesitated. \"It made me feel better when you took your shirt off first.\"\n\nJake nearly tore his shirt in his rush to pull it off. Anna's eyes on his chest made his skin feel warm.\n\nAfter a moment of staring, Anna started to unbutton her shirt. Feeling emboldened by Anna's unguarded staring at him, Jake watched her fingers work. The anticipation was intense, and he felt a reckless swelling between his legs.\n\n\"Excuse me,\" Anna said sternly, \"my eyes are up here.\"\n\nJake blanched and tore his gaze up at the ceiling, his heart pounding in panic and his dick shrinking in shame. Incoherent apologies spilled out of his mouth as he tried to repair the damage his eager eyes had done.\n\n\"Whoa, whoa, it's okay, I was just joking!\" Anna said quickly. \"I've never seen anyone go so pale. Are you okay? Jake, you didn't do anything wrong. The whole point is for you to look at me.\" She grabbed his shoulders. \"Jake, please, I'm sorry, I was only trying to be funny.\" She gently pulled on the back of his head until it was tilted down at her chest again. \"Your respectful instincts are part of why I trust you. It's okay. I want you to look.\"",
        "He watched her shirt rise and fall with each breath, and eventually his breathing matched hers. Anna released his head and resumed unbuttoning. She wasn't wearing a bra. After the last button, she put her hands down. With a deep breath, Anna looked Jake directly in the eyes and with a quick motion pulled her shirt open.\n\nAnna's bare breasts brightened the room. Jake's greedy eyes took in more details from this first unobstructed view. Her left areola had a small mole on the perimeter at the six o'clock position. In the center of each impossibly pink areola were puffy little slits where the skin of her nipples folded inside instead of out. They were beautiful.\n\nJake looked up to Anna's face with a big grin on his face. She was smiling too, though still nervous. She covered her breasts with her hands.\n\n\"Sorry, it's just...\" She looked down in thought. \"It's intense, being looked at.\"\n\nJake was sorry to see her breasts covered, but sorrier she seemed upset.\n\n\"What if we get dressed again and continue like normal, then?\" Jake said, suggesting the exact opposite of what he wanted. \"It's okay, you know.\"\n\nAnna shook her head. \"Oh, I didn't mean that. I don't... I don't want that. I just needed a little break.\" Then, quieter, she added, \"I like this.\"\n\nJake knew he needed to walk a fine line to balance Anna's feelings, their friendship, and his desperate need to get as much time with her breasts as possible. He also needed to occupy her hands with something.\n\n\"I do, too.\" Jake said, turning on the TV. \"I also like schooling you in the ways of the Kart,\" he said, holding out a controller for her.\n\n* * * * *\n\nTheir routine went back to normal, the only difference was neither of them wore shirts. Jake became accustomed to the sight of Anna's bare breasts, and eventually was even able to stop worrying about where his gaze landed. Anna didn't seem to mind him looking, though he tried not to stare. The exception was when she sometimes fell asleep while they watched a movie. Jake hated himself for violating her trust, but he couldn't help himself. The bluish light from the TV flickering over her breasts in the dark room was more engaging than any movie.\n\nHe was even able to stop having an erection constantly, much to the relief of his confused dick. Jake assumed this trend would continue until her breasts made no impact upon him at all. He was wrong. There was just so much to admire about them. How they moved when she walked, when she breathed, when she laughed. Anna seemed to like being topless as well. She never seemed quite as happy as she did when her shirt was off.\n\nAfter a few weeks, Anna started coming by before work, too. She said she wanted to get better about exercising properly and invited Jake to join her. She would come by early in the morning, un-showered in her sleep shirt and sweatpants, hair pulled into a messy pony tail. As soon as the door to his apartment closed, she would pull off her shirt and fire up the exercise video game program. They would stand beside each other in front of the TV doing the routines, her breasts moving in all kinds of interesting ways. Jake wondered if she wouldn't be more comfortable with a sports bra, but she never seemed to mind, and he certainly didn't either.\n\nOne day a plumbing problem in her apartment resulted in the walls of her bathroom being torn open during repairs. He offered his shower to her, and she began using it after exercising each day. And of course, since she was at Jake's apartment in the morning anyway, why shouldn't she eat breakfast there too? In this way Jake ended up with an apartment-mate in every way but one: She did not sleep there.\n\nNormally Anna wore jeans, except for the mornings when she arrived in sweatpants. The first evening she came by in shorts was the first time he saw her legs. Jake found himself distracted by her bare thighs, solid and well-proportioned with her figure. Spring was turning into summer and the days were getting warmer. He supposed that's all it was.\n\nJune brought the first hot day of the year. All the windows were open with a complicated arrangement of fans to get the air to circulate. They both sat on the couch watching a dumb show, drinking ice water, and sweating.\n\n\"It's soooooo hot,\" Anna said. \"Every stitch of clothing is a burden. Would you mind if I stripped down to my underpants?\"\n\nJake took a long sip of ice water to stall as he thought of how to respond.\n\n\"You don't have to take your shorts off too,\" Anna continued, \"though you're welcome to. This heat is unbearable, don't you think?\"\n\nJake agreed it was hot, though he also knew it wouldn't make much difference whether their shorts were on or off. What was she up to? He was strongly tempted to call her on the weak ruse and deal with it directly.\n\nHe remembered that when she first wanted to bare her breasts to him, she was only able to manage it because he played along as if everything was normal. Jake supposed it depended on whether he wanted to see her in panties.\n\nThe growing hardness between his legs both answered that question and presented a problem. If she took her shorts off, he would feel obliged do the same. But his briefs would do little to conceal his excitement. Feeling a little frustrated, Jake decided to stop trying to hide it. She wanted to share more of her body? Well, his body had a penis, and sometimes it had a mind of its own. If it made her uncomfortable, she could tell him.\n\n\"Way too hot for shorts, agreed,\" he said. Jake stood up and unbuttoned his shorts. He took them off, folded them, and placed them neatly on the side table. He resumed his seat, slouching on the couch in front of the fan, a bulge rather obviously straining against the fabric of his briefs.\n\nJake pretended to be interested in the TV. He was pretty sure he saw Anna looking at his crotch for a second. Then she also stood and removed her shorts, revealing plain black panties. After a while, Jake's body calmed down and things felt normal again. They sweated their way through the end of the show and parted for sleep as usual.\n\nThe next morning when Anna arrived for their workout, even though it was not nearly as hot, she stripped down to her panties again. Jake followed her lead and they exercised wearing only briefs. From then on, and without further discussion, stripped to briefs was the new normal. Jake started to doubt his guess of her motives. Perhaps it really was just a temperature thing and Anna wasn't working up to revealing more.\n\nThe issue was resolved Friday evening after dinner. It was another uncomfortably hot evening. Anna sat next to him on the couch wearing her new normal outfit of nothing but panties (royal blue today) and a concerned look on her face. Jake sat up and turned off the TV. She looked like she had something to say.\n\n\"What's the matter, Anna?\"\n\nShe hesitated, then said, \"Do I embarrass you?\"\n\nJake laughed. \"What are you talking about?\"\n\nAnna looked unsure of herself as she spoke, \"When I first wanted to show you my breasts, it was to overcome a particular insecurity.\"\n\n\"Stupid fuckin' Andrew,\" Jake said.\n\n\"Yes, stupid fucking Andrew,\" Anna agreed. \"And I'm so grateful you agreed, because it has changed how I feel about myself. I didn't realize how much that shame was weighing on me. I really think I've moved past that.\" She looked down in thought. \"But you may have noticed I haven't been inclined to put my shirt back on.\" Her face reddened a bit at this. \"What I hadn't anticipated was how good it would feel. Is that weird?\"\n\n\"I don't know if it's weird,\" Jake answered. \"But I feel the same way. I like hanging out with you like this. It just feels... right. It feels good.\"\n\nAnna's eyes brightened at this. \"I was hoping you felt the same way, but sometimes I doubt myself and wonder if I'm just being ridiculous. I'm afraid you're rolling your eyes at me while I prance around topless.\"\n\nJake laughed again. \"Impossible. Never! Anna... ugh, you're right, it is weird to talk about this.\" He took a deep breath. \"Anna, it gives me joy to be with you, my friend. And it gives me like a hundred-times joy multiplier to be with you with our clothes off.\"\n\nNow Anna laughed. \"Joy multiplier? Sounds like you've been playing too many video games.\" She thought for a moment before shrugging. \"But I suppose that's as good a description as I can come up with too.\"\n\n\"Then we're good?\" Jake asked, \"You're okay?\"\n\n\"Yes, thank you,\" Anna said, though she obviously had more on her mind. She cleared her throat. \"I can't help wondering... would it feel even better to just be... you know...\" As she spoke, her voice got softer and softer, until it was a barely audible whisper, \"... completely naked?\"\n\nJake had been anticipating this, and secretly hoping for it, ever since she first took her shorts off. He had suspected topless wasn't the final destination, but he dared not believe it till now. He did his best to fight the growth of his troublesome, eager dick.\n\nHe desperately wanted to avoid messing this up, and he thought he knew her well enough now to plot the right course.\n\nBefore his courage faltered, Jake stood up and pulled his briefs down. For the first time in his adult life, he was completely naked before a woman. His dick was in a state of tension, fighting between arousal and his mental urging for calm. Jake hadn't planned it this way, but he was pleased with how it turned out: A bit large, though still limp and non-threatening. It was the best first impression he could manage.\n\n\"Like this?\" Jake asked. He busied himself with carefully folding his underwear and putting it aside, while in his peripheral vision he saw Anna looking between his legs. Without waiting for an answer, he handed her a game controller as he sat back down and looked at the TV.\n\nStarting up the game was just the motivation Anna needed. Without a word she also stood up, removed her panties, and sat back down to play. Jake could tell there was a triangle of brown hair between her legs, though he couldn't make out any more detail.\n\nFor the rest of the evening they both played video games like normal, pretending they weren't completely naked with each other for the first time. Jake's only real struggle was keeping a lid on how incredibly happy he felt.\n\nNeither of them played particularly well. There was a lot of laughing and pretending everything was normal. At the usual time, Anna dressed to return to her apartment, giving Jake a good view of her bare bottom as she bent over to put on her panties. Then she was gone, and Jake was left wondering if completely naked was the new normal. He got erect at the thought and didn't bother trying to stop it as visions of her pale bottom and triangle of brown hair danced in his mind. It still felt awkward, but the arousal couldn't be denied.\n\n* * * * *\n\nThe next morning, Jake was torn about how to dress. Until yesterday, he'd have been wearing his briefs when she arrived, and she would strip to match him. Would she be expecting him fully nude now? If he wore his briefs to wait for a signal from Anna, would he be sending his own signal?\n\nHe decided to gamble on believing what she said about wanting to be completely naked. If she changed her mind after last night, if she did not take it all off this morning, he had his underpants nearby.\n\nWhen she arrived, Jake busied himself rolling the couch out of the way and unrolling the yoga mats while Anna undressed.\n\n\"Do you want to try the strength training routine today?\" Anna asked.\n\n\"Sure,\" Jake responded as he looked in her direction and was delighted to find his glance timed perfectly to see her hook her thumbs into her panties and pull them down. She was leaning toward him as she pulled them off, giving him a chance for an unguarded look at the brown triangle dominating his thoughts since the night before. Being in shadow he couldn't see any more detail before she straightened, and he averted his eyes. The quick glimpse of Anna's breasts dangling in the foreground as she bent over and revealed the dark triangle between her legs swelled his dick enough for it to point forward suspended in air. Jake flushed with embarrassment at how obvious his arousal was, so he turned away to start stretching.\n\nBy the end of the exercise routine his arousal had relaxed slightly. He was relieved when Anna went to shower, and he hoped it would relax the rest of the way with her out of the room. He heard her start the shower as he rolled the couch back into position.\n\n\"Jake?\" she called from the bathroom.\n\nHe walked to the hall and was surprised to see the bathroom door still open.\n\n\"Yes?\" he answered from the hall.\n\n\"I left my new shampoo on the counter, could you hand it to me please? I'm already all wet.\"\n\nJake told himself to play it cool, but his dick wasn't listening.\n\n\"Sure, just a sec,\" Jake replied as he stepped into the steamy bathroom, grabbed the bottle of shampoo from the counter, and turned to the shower holding it out. The shower stall was deep enough the glass door wasn't needed to keep water from escaping. Anna had it open.\n\nHer hair was wet and matted against her head. In her hand was a sudsy washcloth, and she was bent down scrubbing her thigh with it. The hair between her legs was white with foam. Her upper body was already covered in suds, and her breasts jiggled with her movement. Something about the sight of her wet soapy breasts caused his erection to jump to full attention without warning. He tried to turn away to hide it, twisting awkwardly as he held out the bottle of shampoo, feeling exposed and helpless.\n\n\"While you're here,\" Anna said, taking the bottle, \"you're welcome to shower, too. There's plenty of room.\" She turned her back to him, opening a path to the spray of water. She resumed talking about the plot holes in a movie they watched recently, ignoring Jake's insistent erection.\n\nJake knew Anna noticed he was now more erect than ever. He felt ashamed of his straining dick, but he couldn't help it! He considered declining the invitation, though that seemed rude. Anna was kindly ignoring his raging party foul, and he decided it was okay to accept this kindness.\n\nJake stepped past Anna into the warm water. Closing his eyes as it streamed over his face, he tried to calm his arousal. Anna was still talking about movie plot holes, acting oblivious to Jake's struggles, and he was grateful for the normalcy.\n\n\"Excuse me, Mr. Water Hog,\" he heard her say. Opening his eyes, he saw her hair was covered in shampoo.\n\n\"Oops, sorry,\" Jake said as he stepped out of the way and started shampooing himself. Standing under the stream of water, Anna closed her eyes and tilted her head back. With her arms up as she rinsed her hair, her breasts looked amazing as they swayed with her arm movements. Soapy water streamed down her chest and between her legs, the fascinating triangle becoming brown again as the white soap washed away. Jake's erection throbbed in response, and he tore his eyes away reluctantly.\n\nRinsed, Anna stepped past Jake's disrespectful erection and started toweling off, still talking about the movie. The distance helped Jake regain his composure as he washed himself. He hesitated when it was time to wash between his legs, as he just couldn't bring himself to touch himself in her view when he was so erect. Turning away, he soaped it in private and then finished up without incident before drying himself.\n\nAnna blow-dried her hair in front of the mirror. Seeing her arms up once more and how it lifted her breasts, Jake's efforts at calming his arousal were foiled again.\n\nAnna was still talking, pretending like everything was normal. Jake was grateful for her efforts to put him at ease, which in turn made him feel even more ashamed of his behavior. His friend was being so kind to him, and in return he was being grossly inappropriate. Jake brushed his hair miserably, when he realized Anna had stopped talking and was watching his face in the mirror.\n\n\"Are you okay?\" she asked.\n\n\"Um, of course, why wouldn't I be?\" Jake answered, forcing his expression brighter.\n\n\"It's okay to tell me if I pushed things too far,\" Anna said. \"I didn't mean to gross you out.\"\n\n\"No!\" Jake answered. \"No, no, no, that's not it at all.\" He hated himself even more for making her think that, and it softened his erection. Realizing Anna was expecting an explanation, Jake relented. \"I was ashamed of this,\" he said, gesturing down toward his crotch. He cast his eyes down in shame.\n\n\"Oh Jake,\" Anna said, shaking her head. She looked directly at his dick, perhaps a bit longer than necessary. \"I don't know a lot about how the male body works, but I know you can't really control when it gets... hard. You were worried about that?\"\n\nJake nodded.\n\nAnna laughed. \"I'm so relieved that's all it was. You looked so unhappy I was afraid you were grossed out seeing me shower. I think the novelty will wear off soon and your penis will get bored. Don't worry about it. I accept you as you are. Do you accept me as I am?\"\n\nJake nodded again.\n\n\"Anyway, I don't think the plot holes ruined the movie, but it all seemed so avoidable...\" Anna continued where she left off, repairing the awkward moment with welcome normalcy. Having Anna's permission to relax really did help, and he felt things slowly shrink while his heart rate returned to normal. With that raging distraction out of the way, he realized how much fun it was to shower with his friend.\n\n\"You're so right,\" Jake said, \"it's best to just avoid the problems.\"\n\n\"Exactly!\" Anna said with a smile.\n\n* * * * *\n\nJake found himself genuinely enjoying the new normal of full nudity. Anna was right: Topless felt good, in only briefs felt better, and fully nude felt the best of all. Her nakedness served as an ever-present reminder of her trust in him, of their closeness, which in turn made all their disagreements shallow. When everyday miscommunications arose, it was easy to give the benefit of the doubt when that person was trusting you so completely.\n\nWhat Jake struggled with were his confused sexual feelings. Anna kindly gave him permission to not hide his erections, though he still wished they were less frequent. With her breasts, eventually his curiosity was, if not eliminated, sated enough to lessen the urgency. It was different with her pants off.\n\nJake saw plenty of her endearingly cute bottom. It was well-proportioned to her frame and suited her perfectly. Every now and then she would bend over with her bottom toward Jake and his eyes would instinctively search for revelations, but always in vain because her bottom cheeks sealed off the details within. Similarly, at the front, her thighs managed to hide any details within the fascinating triangle of hair. A darkening of the hair where her cleft began was the most he managed to see.\n\nAnna had told him she was only comfortable because things were not romantic between them. He tried to respect that, even though the sexual attraction he felt for her was strong. He couldn't help suspecting that she felt something for him in return. Nothing obvious, just the occasional look that seemed more longing than friendly. But he couldn't be sure, so he tried his best to pretend there was nothing romantic between them.\n\nWhether she had sexual feelings for him or not, he couldn't help getting an erection when he got a glimpse between her legs. He got a bit of relief when she wore panties for a few days during her period, but when that was over and she was completely naked again his erection problem got even worse. Then another development made him give up all hope of controlling himself.\n\nJake was on the couch reading a book when Anna joined him. He sat with his back against the armrest, facing the opposite end, and she mirrored his position, facing him with her knees pulled up together. Without looking up, Jake could tell her legs were blocking a view of anything new. She pulled an electronics magazines up to her face. Jake started to relax again when more movement caught his eye. Very slowly, Anna's knees separated as the one toward the front of the couch started to swing down.",
        "With Anna's face blocked by the magazine, Jake dared to watch as her thighs pulled apart and revealed his first direct view between her legs. From the triangle of hair above, over the long cleft marked by full hairy lips, down to the obscuring darkness below, his greedy eyes took it all in. Her knee kept moving and continued until her thighs were perpendicular to each other. To Jake's amazement, this pulled apart her outer lips just a little and revealed the smallest bit of pink.\n\nFrozen in fascination, Jake stared with all his might at what Anna was revealing to him. Years of looking at porn had given him a good idea of what to expect, yet at the same time it was so delightfully and uniquely Anna. What a beautiful woman! He ached to touch her, to care for her, and was grateful she couldn't hear these ridiculous thoughts. With alarm he realized he was extremely, intensely erect. She would be reading part of his mind if she saw this erection, and he regretted it didn't communicate the affection and tenderness that was also in his heart. He felt ashamed at his sexual feelings, though these low emotions were not enough to override the elation he felt.\n\n\"It's okay to tell me if it's gross,\" Anna said, keeping the magazine in front of her face.\n\nIt took several seconds for the words to penetrate his reverie.\n\n\"I'm sorry, what?\" was all Jake could manage.\n\n\"My vulva. I know it's pretty gross, and it won't hurt my feelings if you prefer I... sit in a more ladylike manner.\"\n\n\"It's beautiful!\" Jake blurted, throwing out the window all hope of playing it cool.\n\nAnna lowered the magazine and Jake met her skeptical gaze. Jake reddened and looked away.\n\n\"I thought we were accepting each other as we are,\" Jake said to the floor. \"You are a good and kind person to the core, and my friend. How could any part of you be 'gross'?\"\n\nJake felt her foot on his shoulder as she gave him a shove. \"You're not so bad yourself,\" she said. Jake looked up to see her smiling before she brought the magazine back up in front of her face. Did he catch her glancing at his impossibly hard erection before the magazine came up? Her legs returned to their perpendicular position and then stretched open even wider than before as she settled, inviting Jake to gaze upon the delicate pink petals of her beautiful flower. By the time she left for bed that evening, there was nothing left of Jake's mind but a loop replaying the glorious image.\n\n* * * * *\n\nAfter brutally destroying him in Boulevard Battler IV, Anna put down the controller. Bringing her knees together and pointing them toward him, she tucked her feet beneath her and rested an elbow over the back of the couch.\n\n\"Jake, can I ask you a personal question?\"\n\nJake mirrored her position, so they were facing each other. His eyes were practiced now at taking in the sight of the top of her bush and her beautiful breasts without lingering, and his dick remained calm in the face of her nakedness. He was feeling quite confident in his mastery of his own arousal until he looked her in the eyes. Something about her earnest expression touched his heart, and this in turn brought a hint of swelling between his legs. He was a long way from mastery.\n\n\"Of course,\" he answered. \"Anything.\"\n\n\"I don't mean to pry, and it's okay if you don't want to answer... I don't mean to offend you, and--\"\n\n\"Anna!\" Jake interrupted, shaking his head. \"It's me. Just ask.\"\n\nAnna looked down. \"Do you ever, you know...\"\n\n\"Yes?\"\n\nAnna brought her face back up to meet his gaze. \"Do you ever look at porn?\"\n\nJake burst out laughing. Anna did not join in, looking confused.\n\n\"Sorry,\" Jake said, forcing himself to stop laughing. \"I wasn't expecting that question.\"\n\nAnna looked at him silently, awaiting an answer.\n\n\"Well, yes, of course I do. Why?\"\n\n\"Then you've seen lots of naked women?\"\n\n\"Loads.\"\n\n\"Have you ever seen... breasts... like mine?\"\n\n\"Never!\" Jake answered confidently. \"Every woman's breasts are unique, your beautiful breasts included.\"\n\n\"No, I mean my inverted nipples. Do you ever see nipples like mine?\"\n\n\"Oh. Sometimes. Not often.\"\n\n\"Were they... attractive?\"\n\n\"Definitely!\"\n\nAnna looked doubtful.\n\n\"It's true! I've seen some incredibly beautiful models with inverted nipples.\"\n\nAnna looked down for a second, and then back at Jake. \"Show me.\"\n\nJake returned her gaze. This didn't feel right. \"Look, Anna, are you sure? I mean, you don't need me to search the internet.\"\n\nAnna looked away again. \"I actually do. I tried, but...\" she said, exasperated, \"it got overwhelming fast. I was hoping you could do some, well, some curating for me.\"\n\n\"Or you could just take my word for it,\" Jake argued. \"Inverted nipples are beautiful! Be confident in that.\"\n\nAnna looked at him intently. \"Show me.\"\n\n\"Okay, if you insist.\" Jake fetched his laptop and resumed his seat, facing Anna so she couldn't see his screen. \"Give me a minute to find some.\" Jake remembered one particular model with fascinating breasts. Dark hair, bright blue eyes, and impossibly round large breasts with strikingly inverted nipples. Jake felt relieved his dick was behaving for a change, thanks to this awkward situation.\n\n\"Here is a good one, if you want to see,\" Jake said. He shifted to sit normally on the couch and casually pulled the laptop over his crotch as a precaution. Anna sat right next to him, the side of her body pressed against his. Jake was glad to be covered by the laptop because the contact with her skin caused things to start to swell beneath the computer. He tried to ignore it.\n\n\"She's beautiful,\" Anna said, clicking through the series of pictures. Anna's clicks on the laptop touchpad moved it very slightly against his growing arousal.\n\n\"She is,\" Jake agreed.\n\n\"Her breasts are huge!\"\n\nJake laughed. \"Yes, but look at her nipples.\"\n\n\"You're right, they're pretty similar to mine. Do all porn models shave their pubic hair like she does?\" Anna asked.\n\n\"Definitely not all. Many do,\" Jake answered.\n\n\"I wonder what it feels like,\" Anna said. \"Do you think it's cooler? This summer is so hot.\"\n\n\"I have no idea,\" Jake said. \"I've never tried it.\"\n\nAnna was thoughtful for a moment. \"I'm curious what it's like. If I shaved my pubes, would you shave yours?\"\n\nThe thought of seeing Anna shaved bare seemed like the most appealing idea in the world. He didn't care one way or another about shaving himself, but if that was the price for getting her to shave, he would gladly pay it. \"Sure!\" Jake said. \"Why not? Anything is worth trying in this heat.\"\n\n\"There's one thing, though,\" Anna said hesitantly. \"I'm nervous about wielding a razor in such a tender place when I can't see very well down there. Would you... would you be willing to help me?\"\n\nJake swallowed. \"Help, um, help you shave?\"\n\nAnna nodded. \"I know it's a big favor. It's no problem if you'd rather not.\"\n\nJake couldn't think of anything he wanted to do more than spend some quality time with Anna's vagina.\n\n\"It's not that! I'm happy to help. It's just, I've never shaved a, um, you know, a...\"\n\n\"Vulva?\" Anna said with a smirk. \"It's okay to use the word. Anyway, neither have I! But you have the advantage of being able to see down there.\"\n\n\"Okay, fair point,\" Jake said. \"But it also means... well in order to do this, I'll need to...\" Anna raised her eyebrows waiting for him to finish.\n\n\"I'll be clean,\" Anna said. \"I'm going to shower first, of course.\"\n\nJake wasn't expecting that. He shook his head. \"Oh, no, I'm not concerned about that. I just mean I'll need to... touch... you. There. You know, to shave you.\"\n\nAnna frowned. \"Yes, hmm, I see the difficulty now. You've got a friend sincerely asking for your help with her most private place, and you're balking because even a clean vulva is, let's face it, pretty gross.\"\n\n\"NO!\" Jake said. \"That's not it at all!\" Anna looked hurt. \"I'm sorry, I don't mean to yell. You're completely misunderstanding me. I don't think you're gross in any way. I don't think your... vulva is gross. At all. Not to be too corny about it, but I think your whole body is beautiful. Including your vag--, I mean, vulva.\" Anna looked skeptical. Jake grimaced. \"I'm nervous because... well, you've said our relationship isn't sexual. I have to be honest with you. There's no way I can touch your body... your vulva... and not be affected. Sexually.\"\n\nAnna bit her lip and looked down, nodding. \"I'm still figuring myself out. I think that experience with Andrew all those years ago affected me more than I realized. I don't know what I want, or what I feel. I just know I feel safe with you.\" She lifted her head to look him in the eye. \"Do you think it's possible to just pretend that it's not sexual between us?\"\n\n\"Yes, I can do that,\" Jake said. \"Though my body might react differently.\"\n\nAnna smiled in relief. \"Then there's nothing to worry about. Once the novelty wears off, you'll realize what a tedious task you've volunteered for. Now come ON already.\" Her face bright with happiness, she jumped up from the couch, pulling him by the hand to the bathroom. \"I'm happy to help shave you in return, of course.\"\n\n\"That's probably safest,\" Jake said, trying to play it cool as he realized where she would be touching him.\n\nThey showered together like normal. Anna got two fresh towels, spreading one on the floor of the bathroom and keeping the other folded as a pillow. She unwrapped a new razor and put it, along with a can of shaving cream, beside the towel. Lying down on her back, she stretched her legs out and spread them apart.\n\n\"Do you think I should shave it all or keep a patch of hair?\" she asked.\n\nJake stood transfixed by the sight, contemplating her lovely bush. It was full and fluffy and beautiful, with light brown hair looking impossibly soft. Part of him didn't want her to shave it, but only part of him.\n\n\"We could definitely leave a patch of hair if you want. Though even if you start fully shaved it would grow back soon.\"\n\n\"Good point. Let's just shave it all to start.\" She reached for the can of shaving cream.\n\n\"Wait,\" Jake said. \"When I've shaved my beard in the past it worked much better when I clipped the hair short first. Otherwise the razor gets clogged. I have some small mustache scissors, if you want?\"\n\n\"Good idea,\" Anna agreed.\n\nJake dug in his drawer until he found the scissors, and then turned to face her and froze. Could he really do this? He felt a bit faint at the thought of accidentally cutting her.\n\n\"It's okay, Jake. I know you're going to be gentle. Go ahead and start!\" She smiled nervously at him. \"But please be careful.\"\n\nJake took a deep breath and knelt between her open legs. He'd never been this close, and his greedy eyes took in every detail. He looked up to her face, framed at this angle by her lovely breasts, and she gave him an encouraging nod. Taking a deep breath, Jake raised his empty hand toward her and gently grabbed a tuft of hair. It was even softer than it looked.\n\n\"Your hair is beautiful. Are you sure you want me to cut it?\"\n\nAnna rolled her eyes. \"Yes, I'm sure. Let's do it!\"\n\nSlowly, Jake brought the scissors up and snipped off a chunk of hair. Realizing he needed a place to collect it, he spread out a tissue. Anna watched him intently, propped up on her elbows. Carefully he worked, gathering and snipping, gathering and snipping. He gently brushed the loose hairs off her after trimming everything above her cleft.\n\n\"How are you doing?\" Jake asked.\n\n\"Thank you for being so gentle. I would be a nervous wreck doing this myself.\"\n\n\"It's my pleasure,\" Jake said automatically, before realizing how intensely true the statement was. Quickly, he added, \"Are you ready for me to continue working down... lower?\"\n\n\"You mean on my vulva?\" She laughed. \"Please use the names of my body parts, you silly.\"\n\n\"Sorry, you're right. Are you ready for me to trim your vulva?\"\n\n\"Absolutely, please go ahead,\" Anna said with a smile, though he still saw nervousness in her eyes. She dropped back onto the towel pillow, her breathing only a little shaky.\n\nLooking at her tender folds, Jake felt his palms sweating and his heart beating furiously. Gently, so gently, he touched his finger to the top of her cleft and drew it down to tease out the hairs trapped within. It took a few tries to get the hairs pulled off the bit of her inner labia that sat flush with her cleft. Careful to hold the scissors so he could see exactly where they cut and terrified of hurting her, he trimmed down the length of her outer lips.\n\nAnna's hips twitched a little. \"That tickles!\"\n\n\"Sorry! I'm not trying to tickle you.\"\n\n\"I know, it's just a bit of sensory overload. Can you please just pause for a minute and press your palm against my skin, just to give my nerves a minute to calm down?\"\n\n\"Skin? Don't you mean 'vulva'?\" Jake said.\n\nAnna laughed. \"Fair point! Yes, please put your hand over my vulva to calm it down.\"\n\nJake put his palm against her cleft and felt its warmth, relishing the intimacy. Anna sighed and took a few deep breaths. \"Okay, I'm good. Keep going.\"\n\n\"Could you please spread your legs a bit wider, so I can trim at the base of your legs?\"\n\n\"Sure thing!\" Anna said. She bent her knees, bringing her feet up to rest against the sides of Jake's legs as he knelt before her. Her outer lips were pulled apart, revealing moist pinkness inside. Her lovely scent grew stronger in his nose. Jake felt his erection jump. At least she couldn't see his obvious arousal now. A few more minutes of careful clipping and he was done. He couldn't be sure, but her inner lips looked wetter than before. He gently brushed the loose hairs away from her cleft and onto the tissue. Remembering how it might tickle, he placed his palm over everything again to relieve her.\n\n\"Would you like me to clip, um, further down?\" Then, remembering her earlier admonishment, added, \"Around your, uh, anus?\"\n\nAnna giggled as she sat up, her cheeks a little red. Anna bit her lip. \"I suppose getting embarrassed at this point is silly. Yes, please trim down there, too.\" She turned over onto her knees and pushed her bottom into the air, giving Jake his first clear view between her cheeks. His heart yearned with affection for her, the desire to care for her, even her cute little butthole. Only a few wisps of hair grew back there, and he was soon finished clipping.\n\n\"Okay, I think we're ready to start shaving,\" Jake said. \"Does it make sense to do that in the tub with lots of warm water?\"\n\n\"Definitely the tub, but we're not ready yet. I need to clip you!\"\n\n\"Oh!\" Jake said, \"I forgot.\" It was true. He was disappointed to realize he was quite erect, and with no way to hide it.\n\n\"Well come on, trade places with me!\" Jake stood up, his massive erection hanging out in the open air. He lay on his back feeling exposed and embarrassed. Anna knelt between his legs, and then she picked up his feet and brought them against the sides of her legs, so he was spread apart like she had been. His straining dick pointed up at the wall somewhere above his head.\n\n\"Sorry about that,\" he said, gesturing toward his erection.\n\n\"Don't be!\" Anna replied. \"I think it actually works better to have the skin stretched out for this. See if you can keep it that way. Are you ready?\"\n\n\"Sure, go ahead,\" Jake answered. He didn't expect it to be difficult to stay hard with her breath gently tickling his shaft. Sitting up on his elbows, he watched her gently grab a tuft of hair and clip it. She looked up to make sure he was okay, and then resumed careful clipping. Her breasts hung down in a lovely way as she bent over him clipping. Jake put his head back on the towel pillow and tried to relax, her every touch thrilling him.\n\n\"I didn't realize hairs grew up the shaft of your penis.\"\n\n\"Yeah it's pretty nasty.\"\n\n\"No, it's not nasty,\" Anna said. \"Just interesting.\" He felt her fingers gingerly wrap around his shaft. \"Wow, the skin is so soft. It's a weird contrast with the hardness beneath the skin.\" Jake relished the feel of her hand on him and listened to the soft swish of the scissors.\n\n\"Are you doing okay?\" Anna asked. She paused and kept her hand still on his hardness, the same anti-tickling strategy he'd used on her. It felt so nice. Jake was far more than okay, though he didn't dare say that.\n\nHe tilted his head up to look at her. \"Perfectly comfortable. Thank you for being so careful.\" She smiled at him, and then returned to her trimming. Her tongue poked out between her lips the same way it did when she was focused on some electronics soldering project. Seeing her so dedicated to caring for him made his ridiculous dick strain against her fingers.\n\n\"Everything is more dynamic down here than I thought,\" Anna said.\n\nJake sat up again to give her a questioning look.\n\n\"I suppose it's obvious. It just hadn't occurred to me. Like, when you're hard it's not simply rigid. It's constantly softening a bit and re-hardening. I can even feel your pulse! And your scrotum moves!\"\n\nJake laughed. \"Yeah I guess it's all pretty weird.\"\n\n\"Not weird! Interesting.\"\n\nAnna moved her hand down to his scrotum, her fingers gently stroking it as she trimmed hairs.\n\n\"Alright, flip over so I can trim your... um,\" Anna giggled for a second before continuing. \"Your anus.\" Jake dreaded this, but he complied. \"Oh, I like how this seam of skin connects to your scrotum. This is so interesting!\" A few more minutes of trimming and then she was done.\n\n\"Okay NOW we're ready for the shaving part,\" Anna said brightly.\n\nJake righted himself and helped clean up the tissues of trimmed pubic hair. There was a lot of hair.\n\n\"Wow, look at us all trimmed!\" Anna said, looking back and forth between the two trimmed crotches. \"It feels cooler already. This is going to be great!\" She started the water running and moved the new razor and can of shaving cream to the edge of the tub. They climbed in together and sat facing each other in the rising water.\n\n\"This is fun,\" Anna said. \"I know it must be weird and tedious for you. I really appreciate you doing this with me.\"\n\n\"Are you kidding?\" Jake said. \"I'm having fun too. It's not tedious at all.\"\n\nAnna pulled herself up to sit on the edge of the tub and handed Jake the can of shaving cream. Still sitting in the water, he scooted toward her as she spread her legs apart. Jake squirted some shaving cream into his hand.\n\n\"Ready?\" he asked. Anna nodded, but he could see that her smile was a bit forced. He didn't blame her for being nervous. He knew he felt more than nervous, and was grateful his hands remained steady. Jake dabbed the cream on the clipped-short hairs above her cleft and massaged it in with circular motions of his fingertips. Then he carefully dragged the razor in downward strokes, with the grain of her hair, stretching her skin flat as needed. Rinsing the razor often, he made sure to avoid re-shaving the same patch of skin. Finally, he was done with her pubic mound and rinsed her with cupped handfuls of water.\n\n\"Nicely done, Jake!\" Anna said, stroking the smooth skin with her hand. \"Very nicely done.\"\n\nJake smiled, feeling pleased with his work. \"Are you ready for me to shave your vulva now?\"\n\n\"Yes please!\" Anna replied, though he could tell her enthusiasm was trying to conceal her nervousness.\n\nJake squirted more cream in his hand and dabbed it on either side of her cleft. With both hands he gently rubbed cream along the inside of her legs and along her outer lips. Glancing up to check on her, he saw her cheeks were flushed. Did his touches feel good to her, or was that simply terror? Anna gave him a reassuring smile. Jake tried to focus.\n\nContinuing the short downward strokes, Jake gently drew the razor along her outer lips. Terrified of hurting her, with his other hand he stretched the skin flat and pulled it away from her inner labia as he shaved. After several minutes of careful work, she was shaved as far down as he could work at this angle. He brought up cupped handfuls of water to rinse and carefully stroked her skin feeling for any spots he might have missed. After a few touch-up strokes, he felt satisfied.",
        "\"How is that?\" Jake asked, looking up to her face. Anna's cheeks were even more flushed, and she bit her lower lip. She broke out into a big smile.\n\n\"Wow, Jake, you did a great job!\" She explored all the shaved places with her fingers. \"It feels so strange.\"\n\n\"I didn't do a perfect job,\" Jake said. \"I was afraid of giving you a razor burn, so I went for gentleness over thoroughness.\"\n\n\"Thank you for being so careful. The whole time I knew I was in safe hands.\"\n\n\"You're beautiful,\" Jake said softly, lost in thought staring at her smooth cleft. Then, catching himself, \"I think it looks great! Want me to finish your, uh, anus?\"\n\n\"Definitely!\" Anna said. She dipped her bottom in the tub water to get everything freshly wet and turned over on her knees to present her bottom to him. Jake put shaving cream along the inside of each bottom cheek. A few careful strokes of the razor later he was finished, and he stopped to admire his work on her beautiful body.\n\n\"All done!\" he announced.\n\nAnna sat back down in the tub. \"Alright, your turn now. Up on the edge of the tub!\"\n\nWhile shaving Anna, Jake was so focused on being careful that his misbehaving dick shrunk down to nearly normal. Spreading his legs and presenting himself to Anna, however, quickly brought it back to fully erect.\n\n\"Thank you,\" she said. \"I was worried how I would do this properly if your penis wasn't erect. Are you ready?\"\n\nJake nodded, and Anna started rubbing shaving cream into his pubic hair. Looking down he watched her beautiful face, completely focused on her task. Her breasts, so comforting to see, jiggled as she moved. Part of him was very present, relishing her touches and attention. Another part of him was so deep in thought it was almost like having an out of body experience. Anna was the one person he cared most about in the whole world. She was his closest friend, the person who most understood him. When he was away from her, he missed her. When he was with her, he felt utterly content. His place didn't feel like home unless she was there too. This wasn't mere physical lust, though there was plenty of that as well. He truly loved her. The trouble was he didn't see a way to tell her this, without risking messing up what he already had. The thought of frightening her off, of not sharing this intimacy with her, was too horrible to consider.\n\nSeeing the way she touched him, though, so carefully and tenderly, it was hard to believe she didn't have any sexual feelings for him.\n\n\"There we go,\" Anna said, waking him from his reverie. Jake looked down to see himself thoroughly hairless. He didn't get time to really look before she turned him over to shave between his butt cheeks. A minute later she was finished. They rinsed off in the shower and stood next to each other in front of the mirror to admire the results.\n\n\"We look fantastic. I love this!\" Anna said.\n\n\"You look amazing,\" Jake said.\n\n\"So do you!\" Anna was striking poses in the mirror. \"Oh, I almost forgot. We need to moisturize.\" She dug in her drawer and pulled out a bottle of lotion. \"It's a very gentle lotion suitable for the whole body. Do you mind if I apply it?\" Jake shook his head and Anna straightened the towel on the floor for him to lie down upon. Anna used both hands on him to gently massage lotion everywhere she had shaved, including the shaft of his rock-hard dick and his smooth ball sack. Unlike shaving, he was obviously capable of applying lotion to himself without danger. But if she wanted to touch him and be touched by him, he certainly wasn't going to argue. He was surprised to find Anna spreading the lotion beyond the shaved areas, carefully rubbing it over his chest, arms, and legs. \"Okay, flip over,\" she said, and Jake carefully arranged his erection as he did so. She rubbed lotion on his back, over his bottom, and lastly deep between his butt cheeks. Being touched all over felt incredible.\n\n\"There you go,\" Anna said. \"Now it's my turn, if you don't mind trading places.\" She handed him the bottle of lotion and lay down on her back with her legs apart. \"It's safe for use on genitals, but all the same when you moisturize the outer lips of my vulva please try not to get any inside.\" Jake nodded and then proceeded to gently rub lotion into her skin.\n\nAnna sighed with her eyes closed. \"That feels nice. If you don't mind, please put lotion on the rest of my body too.\"\n\nJake hesitated briefly. He felt uncertain about everything except that he wanted this. Whatever doubts swirled in his mind, he wasn't able to resist the invitation.\n\nFirst, he worked down her legs, and then back up to her hips. He slowed down a bit when he reached her belly. In spite of everywhere he had touched her, he hadn't yet touched her breasts, or even her belly. Unsure how to proceed, he rubbed lotion up her sides to her shoulders and down her arms, afraid of touching her breasts. It wasn't surprising Anna wouldn't let this continue, though.\n\n\"Please moisturize my breasts too,\" she said. A simple enough sentence, and yet for a second Jake felt paralyzed. Jake thought back to when she first showed them to him. This was the invitation he'd been hoping for ever since. Putting more lotion on each hand, he made circular motions around her shoulders, then her upper chest. He ran both hands down her sternum, feeling the inner edges of her breasts. At last he pushed up from beneath each breast as his lotion-greased palms crested the peaks and felt her firm areolas. Afraid of ruining the moment, he kept his hands in motion, circling back down over her breasts from above, then in from the outside, out from between them, trying to memorize their contours with his fingers. When he felt like he could no longer pretend they needed more lotion he reluctantly asked her to flip over. She smiled at him and sighed happily as she did so.\n\nRubbing lotion on her back, he was happy to feel his arousal calming down. As fascinated as he would always be by her breasts, her adorable bottom, her tender folds and all the wonders hidden within, those treasures meant nothing on their own. What he loved was Anna the person, everything about her, the whole package. She said she wanted to at least pretend that their relationship was not sexual. He tried to respect her request, but it wasn't easy. His fingers kneaded the muscles of her back and she moaned in pleasure. Jake felt warm contentment in his heart. He finished by putting a last squirt of lotion on his fingertips and pushing them deep between the cheeks of her bottom and caressing her sweet little butthole.\n\nThey washed the lotion off their hands and then resumed admiring themselves in the mirror.\n\n\"I can't get over how great this looks. And how great it feels! Everything is tingly and fresh. Thank you, thank you for doing this with me. I didn't have the courage to do it by myself.\"\n\n\"You look amazing,\" Jake said. \"I think my hairy legs look a little silly next to my shaved crotch, but you're right: It certainly does feel great!\"\n\n\"Next time we can try shaving your legs too, if you want.\"\n\n\"Sure,\" Jake said, not caring about his legs but loving the mention of a 'next time.'\n\n\"All that close detail work has given me an appetite,\" Anna said. \"Come on.\" After a visit to the kitchen they ended up on their usual spots beside each other on the couch, sitting cross-legged facing each other.\n\n\"I can't get over how different it looks,\" Anna said, staring between her legs and stroking the smooth skin there. \"I feel truly naked now. It feels great!\" She looked Jake in the eye. \"Thank you. I know this was a lot to ask of you.\"\n\nJake swallowed and nodded. It had been an ordeal of desire mixed with terror and he was both relieved it was over and hoping he would get another opportunity.\n\n\"Happy to,\" he said.\n\nAnna smiled at him and looked back down at her shaved crotch. Quietly, she said, \"I didn't realize how good it would feel to be touched by you. Is it wrong to enjoy that even though our relationship isn't sexual?\"\n\nJake felt his cheeks get warm. Why did she keep insisting this was not sexual? He didn't want to ruin this amazing development, but he was also tired of this charade.\n\n\"I thought we were only pretending it wasn't,\" Jake said.\n\nAnna looked like she wanted to say something, but she didn't.\n\nJake sighed. \"Anna, come on. My penis is hard around you all the time because obviously I am sexually attracted to you. And I don't know, but it seemed possible you were experiencing some sexual feelings as well.\" Anna looked like she was going to object, though no words came out. \"That doesn't mean we have to do anything about it, but it seems silly to deny what's plainly happening here.\"\n\nAnna brought her knees up to her chest and wrapped her arms around them to cover herself. Jake had a sinking feeling in his chest. Had he ruined everything?\n\n\"I don't want to have sex,\" Anna said, looking down.\n\n\"I know that!\" Jake said. \"Of course I know that. All I mean is I think it's okay to be honest with each other.\"\n\nAnna looked back up at him, gratitude in her eyes. \"You don't hate me?\"\n\nJake laughed. \"I don't hate you at all.\" I love you, he didn't say.\n\n\"It's okay to like being touched, even if that's all we do?\" Anna asked.\n\nJake nodded.\n\nRelieved, Anna put her knees back down. \"Scoot over,\" she said. As Jake did, she arranged herself sitting beside him with her legs splayed apart. With one hand she operated the remote control, and with the other she picked up Jake's hand and placed it between her legs with a contented sigh.\n\n* * * * *\n\nThey decided Tuesday and Friday mornings were the best days to shave each other. Under the pretense of skin moisturization she insisted every morning include giving each other the full-body lotion treatment after they showered. It took time, but Jake hardly felt like objecting. Watching TV on the couch together, if it wasn't too hot, always involved touching. Sometimes she'd pull his arm around her and settle his hand on one of her breasts. Sometimes she'd spread her legs and press his fingers against her cleft. Often her hand would gently rest atop his dick.\n\nThere was more general touching, too. She started hugging him when she arrived in the morning, and when she said good night in the evenings. Touching his hand while they were talking, or just leaning against him when she was beside him.\n\nAt first, it felt awkward. He feared touching her too greedily and throwing this wonderful situation out of balance. Before long, though, the physical contact with Anna became natural. More than natural, it became important. He felt such closeness with her, such intimacy.\n\nHe learned to read what she needed. Sometimes it was obvious, like when she would throw her legs over his lap on the couch and spread her knees apart: That meant she wanted his hand over her warm cleft. Other times it was something more subtle, like squeezing her own shoulder to signal her back muscles needed rubbing. Often, they just exchanged brief touches, like if she was busy soldering and he gently put his palm on her spine as he walked by her workbench.\n\nJake was proud of his dick, as stupid as it was. It eventually got the message this vagina he was spending so much quality time with was not open for intercourse and calmed right down. Somewhere in his heart lived a lump of fear that she didn't love him as he loved her, but he tried to focus on the bright side. Jake loved this intimacy with Anna and couldn't bear the thought of losing it. Wouldn't he gladly remain a virgin if only he could stay with her? Wouldn't he?\n\nOne evening, Anna sat beside him on the couch with a serious look on her face.\n\n\"Jake, listen, I know I've already put a lot of burden on our friendship these past weeks. There's something else I want to ask you about. I don't want to do a cycle of agonizing self-doubt this time, so I'm just going to go out on a limb and ask you. Do you promise to tell me if my question makes you uncomfortable?\"\n\n\"Of course I'll tell you,\" Jake said.\n\n\"You know that model you showed me earlier, the one with the inverted nipples?\"\n\n\"Yes,\" Jake laughed. \"Yes, I remember.\"\n\n\"You found those pictures pretty quickly. Have you looked at pictures of her before?\"\n\n\"Well, yes,\" Jake admitted.\n\n\"And when you looked, it made you feel... aroused?\"\n\nJake felt his face turn red. There didn't seem to be any point in denying the obvious. \"Yes.\"\n\n\"Even though she has weird nipples?\"\n\n\"Anna, look. I don't see her nipples as a negative. It just made her more enticingly unique and fascinating.\"\n\nAnna nodded. \"And when you felt aroused, looking at her pictures, did you... well did it make you want to... touch... yourself?\"\n\n\"Anna, are you asking if I masturbate when I look at porn?\"\n\nAnna nodded.\n\n\"The answer is yes, of course I do. I'm not proud of it, and I've never talked with anyone about it before. But you seem to sincerely want to know. I'm... I'm not really interested in being teased about this.\"\n\n\"Why would I tease you? I wouldn't do that.\"\n\nJake gave her a doubtful look but saw only sincerity in her expression.\n\n\"Do you mind if I ask you more questions?\"\n\nJake laughed. This woman bared her beautiful body to him every day. How could he say no? With a sigh, he said, \"Go for it.\"\n\n\"How did it start? Wasn't it weird?\"\n\n\"It started quite innocently. I somehow noticed it felt good to touch myself there, and it seemed like all positives and no negatives.\"\n\n\"Were you looking at porn then?\"\n\n\"Oh no, not at first. I'm not even sure I thought about girls at first. That connection came later.\"\n\n\"Did you hide it?\"\n\n\"Well, yes. I clearly sensed this was a private thing.\"\n\n\"And that's it? All positives, no negatives from the start? No shame involved?\"\n\n\"Oh, I didn't mean to suggest that. I said it started quite innocently.\" Jake paused briefly, and then continued very quietly. \"Eventually I got the message it was something to be ashamed of, and I associated profound guilt with it.\"\n\n\"Then you stopped?\"\n\nJake shook his head. \"Of course not. It felt so good! I simply internalized the shame and self-loathing.\"\n\nAnna squeezed his hands in hers. \"Do you still feel shame?\"\n\nJake took a deep breath. \"Not the same way. Eventually I realized I wasn't hurting anyone, and while it isn't the most productive use of time it's not worth beating myself up over. The only thing I struggle with anymore is keeping my fantasies respectful.\"\n\n\"What do you mean?\"\n\n\"Well, like... I used to try to imagine what every girl in my school looked like naked. But it didn't seem right to fantasize about someone who hasn't... invited me to. I can't help what images pop into my head and try to ignore the inappropriate ones. That's why I feel okay about looking at porn. Those people have given permission to be fantasized about.\"\n\nAnna squeezed his hand and was silent for a while in thought. \"For me, I also got the message, as you said, that I shouldn't touch myself that way. And I didn't. I've since accepted, intellectually, there is nothing wrong with it. But I can't seem to shake this latent shame. I've tried, and it just doesn't work for me.\"\n\n\"What doesn't work?\" Jake asked.\n\n\"Touching myself. Masturbating. Every time I try it, I can't overcome the feelings of shame.\"\n\n\"You've never masturbated?\" Jake tried to not sound incredulous.\n\n\"Not really, no.\"\n\nJake hesitated a moment, and then asked, \"Is it different when you... have sex?\"\n\n\"Oh, I've never had sex,\" Anna said. \"Never really been close. Have you?\"\n\nJake shook his head. \"No, me neither.\"\n\nThey sat together in silence, the picture of the nude model on the computer forgotten.\n\nAnna took a breath and asked, \"What does it feel like to... have an orgasm?\"\n\nPart of him was expecting this question. He thought about the countless times he'd masturbated. What was it like to not know?\n\n\"It's okay,\" Anna said with disappointment. \"I didn't mean to pry.\"\n\n\"You're not prying!\" Jake said quickly. \"Sorry, I've never talked about this with anyone. I'm not sure how to describe it. I'm happy to share it with you, but please be patient with me.\"\n\nAnna's face relaxed. She waited patiently while Jake thought.\n\n\"I think it's kind of like sneezing,\" he said.\n\nAnna looked confused. \"What?\"\n\nJake smiled. \"Well, kind of. You know that tickle in your nose before a sneeze? It's annoying, and not a strong sensation, but you know unmistakably a sneeze is coming. The feeling builds, and builds, and then suddenly there's this out of control explosion that somehow your whole body is involved in. The explosion is related to the tickle, it comes from it, but is orders of magnitude more powerful. More intense. And then afterwards it feels like relief, like all this tension was suddenly released.\"\n\nAnna looked doubtful. \"You're not really selling it.\"\n\nJake laughed. \"Well the difference is, unlike a sneeze, it's all pleasure. It starts as mild pleasure. It feels good, and it builds. It can continue building, and just feels amazing. Sometimes it's nice to take it slow and enjoy that feeling. When the orgasm hits it feels like the pleasure-o-meter goes off the scale.\"\n\nAnna laughed. \"If it's that great, why aren't you masturbating, like, every day?\"\n\nJake's cheeks turned red. \"It's not necessarily every day.\"\n\nAnna's eyes widened. \"Oh.\" She giggled nervously.\n\nJake nodded. Anna sat in quiet thought.\n\n\"What I'm wondering is,\" Anna finally said softly, haltingly, \"for me, would it be different if I was... masturbating... with a... friend?\"\n\nJake could only see one interpretation for what she just said to him, and yet it seemed impossible.\n\n\"What do you mean?\" Jake asked, studying her face for any sign of joking.\n\n\"Would you be willing to... masturbate with me?\"\n\nJake stared at her stupidly.\n\nAnna turned away and moved to stand up. \"Sorry, I know that was weird. Please forget I asked.\"\n\nJake held tight to her hand. \"YES!\" he blurted out.\n\nAnna turned back toward him.\n\n\"I mean, no that's not weird,\" Jake continued. \"Yes, I will do that with you. Masturbate.\" Anna smiled. \"After all, that's an extremely normal thing for friends to do together.\"\n\nThey both laughed. \"What's your vision?\" Jake asked. \"How will this work?\"\n\nAnna gestured at the computer in Jake's lap. \"Do you think you could find a movie of something we could both, um, enjoy?\"\n\nJake laughed. \"Can you be more specific?\"\n\n\"A man and a woman having sex?\"\n\n\"Okay. Any turn offs?\"\n\n\"What do you mean?\"\n\n\"You haven't watched much porn, have you?\"\n\n\"No,\" Anna answered.\n\n\"That's okay. Let me sketch a typical 'plot' for you. Couple kisses. Couple undresses. Couple takes turns performing oral sex on each other. Man puts penis in woman's vagina. Lots of thrusting and then, usually, pulling out and ejaculating on the woman.\"\n\nAnna made a face of disgust. \"ON her? Why do they pull out like that?\"\n\nJake laughed. \"Okay noted, what penises do is disgusting. This brings up another issue we should discuss. If we do this together, I feel I must point out to you I have a penis, and when I orgasm my penis ejaculates semen. If that is gross to you, maybe this isn't a great idea?\"\n\nJake felt a little bad confronting her so directly on this. He thought it was disgusting too, but she hurt his feelings.\n\n\"I'm sorry, you're right. But I am curious--why is it normal for the man to pull out?\"\n\n\"I don't know, I think just so the camera can see the climax? Anyway, I'll find one where the penis stays inside. Any other concerns?\"\n\n\"Do they always do oral sex? It seems gross to put your mouth where someone pees.\"\n\n\"Not always,\" Jake said, \"though it's very common.\"\n\n\"Why is gross stuff common in porn? That doesn't seem sexy.\"\n\nJake thought about how much he'd like to put his mouth on her. \"I think it depends on the relationship. A stranger, or someone you're not attracted to, then I agree it's a big yuck. Someone you are attracted to, someone you care for deeply and find beautiful and appealing, well, maybe it's a special intimacy? I'd also guess it feels good in a unique way. I have no personal experience, though. Just speculating.\"",
        "\"Hmmm.\" Anna seemed doubtful.\n\n\"You'd prefer something without oral sex?\" Jake asked.\n\n\"At least to start, please.\"\n\nJake found a suitably tasteful example of the genre, put the laptop on the coffee table in front of them, and started the video. Sitting beside Anna, Jake became very conscious of his shrunken dick. He was too embarrassed to be aroused or to touch himself, and his hands rested on his thighs. Anna sat in about the same position, hands on her thighs.\n\nThe woman in the video took her bra off. She had small breasts with big nipples.\n\n\"I like her breasts,\" Anna said. \"She has great nipples. Do you like them?\"\n\n\"Yes, they're nice.\" Jake would have preferred to be looking at Anna's, though.\n\nThe woman in the video pulled down the man's pants and stroked his dick with her hands. \"What a beautiful cock,\" the woman said in a sultry voice.\n\nAnna giggled. \"Do people really talk that way?\"\n\nJake shrugged. \"They do in porn, at least.\"\n\n\"Cock is such a funny word,\" Anna said. \"Is that what you call your penis?\"\n\nJake let out a short laugh. \"Believe it or not, I don't talk to my penis that often.\"\n\n\"I think you mean you don't talk to your COCK,\" Anna said. She nodded toward the screen. \"His cock seems to like her,\" she said, clearly enjoying the word. She looked over at Jake's shrunken dick, stark evidence of how uncomfortable he was in this unusual situation. \"But yours doesn't seem so interested. Do you want to try a different video?\"\n\n\"Sorry,\" Jake said. \"It's not the video. This just feels weird. I feel a bit paralyzed.\"\n\n\"It is awkward, but we can overcome it,\" Anna said. \"How do you, normally, how do you touch yourself?\"\n\nJake spoke slowly, feeling nervous. \"I hold my... penis...\"\n\n\"Cock,\" Anna corrected with a smile.\n\n\"Okay, I hold my cock, and I squeeze until it is hard. Once hard I... I stroke up and down the length of it.\"\n\nAnna nodded, staring at his limp dick.\n\n\"How about...\" Jake swallowed. \"How about you?\"\n\nAnna laughed. \"Well as I explained I don't really know what I'm doing.\"\n\n\"Okay, I know, but what have you tried? What is your... plan for this attempt?\"\n\nAnna frowned. \"Just general rubbing around my vulva, I suppose.\"\n\n\"Any particular places?\"\n\n\"I've read I should focus on my clitoris, but that's way too sensitive so I kind of rub around it.\"\n\n\"Do you put your finger... inside?\" Jake asked.\n\n\"Oh no,\" Anna said, shaking her head. Then, quietly, \"I've never put anything inside.\" She turned to face him. \"My gynecologist has, of course, but it was uncomfortable, and I've always been a little afraid of doing it on my own. I suppose that sounds stupid.\"\n\nJake shook his head. \"Not at all. There's nothing stupid about listening to your feelings. The whole point of masturbating is to feel good.\"\n\nFor a moment they sat in silence watching the video. Finally, Anna put her hand between her legs.\n\n\"Come on, slow poke,\" she said with a smile. \"Catch up!\"\n\nJake took hold of his shrunken dick.\n\n\"This isn't so bad,\" Anna said. \"How are you doing?\"\n\n\"Doing okay,\" Jake said.\n\n\"Then let's start stroking.\"\n\nJake started rolling his limp dick between his fingers while, out of the corner of his eye, he saw Anna rubbing between her legs. He wanted to watch Anna instead of the video, but he kept his eyes on the screen. The man in the video was now stroking the woman's pussy. Jake thought about when he had stroked Anna during shaving and moisturizing, which he found deeply erotic but wasn't supposed to be about sexual pleasure. He wondered what it would be like to stroke her to make her feel good. Sharing his first explicitly sexual moment with her was powerfully arousing and soon he was fully erect.\n\n\"That's more like it,\" Anna said, nodding at his erection. \"Look at that beautiful cock! Feeling better?\"\n\nJake took this opportunity to look over at Anna, her friendly face and her bare breasts making his heart long with desire as he stroked himself.\n\n\"Much,\" he answered. \"How are you doing? Is it working better having company?\"\n\n\"I think so. It's still weird, isn't it?\"\n\n\"Pretty weird!\" Jake agreed.\n\nIn the video, the man was now fingering the woman. She was shaved except for a small patch.\n\n\"Wow,\" Anna said.\n\nEager for any opportunity to turn his head in her direction, Jake asked, \"What?\"\n\n\"That woman's labia are enormous!\"\n\n\"Hmmm, I suppose they're reasonably prominent,\" Jake replied.\n\n\"Reasonably prominent? They don't even fit in her vulva, they're just hanging outside like, 'Hey, what's up?'\"\n\nJake laughed. \"Okay, yes. But based on my, uh, experience examining imagery of such things, they're not unusually large.\"\n\nAnna sat up a little and leaned down to look between her legs. Jake followed her gaze and was amazed to see she had pulled her outer lips apart, spreading open the petals of her labia.\n\n\"But look, they're so much bigger than mine!\"\n\nJake took in the sight of her inner pinkness glistening with moisture. Spread open like this, Jake was pretty sure her clitoris wasn't erect, but his heart thrilled to be seeing in there. His hungry cock throbbed.\n\n\"You're so beautiful,\" Jake blurted out.\n\nAnna laughed. \"Right,\" she said with sarcasm.\n\n\"Beautiful,\" Jake repeated, looking her in the eye to make his point.\n\nAnna looked away in embarrassment and leaned back on the couch, resuming her gentle rubbing while watching the video.\n\n\"She seems to like that,\" Anna said. The woman in the video moaned with pleasure as the man pushed two fingers into her. \"She sure talks about her 'pussy' a lot. Pussy, pussy, pussy! It feels naughty. Say it!\"\n\nJake giggled.\n\n\"Come on, Jake!\"\n\n\"Pussy,\" Jake said, quietly.\n\n\"Pussy!\" Anna said, louder.\n\n\"Pussy!\" Jake matched her.\n\n\"PUSSY!!\" Anna nearly yelled. The woman in the video orgasmed loudly while they giggled. \"Well she either really enjoyed that or did a good job acting like she did,\" Anna said. \"I wonder if an orgasm really feels that good.\"\n\n\"It totally does,\" Jake said. \"Or it can. Speaking of, how are things going in your quest?\"\n\nAnna sighed. \"I don't know. It feels nice touching myself. I don't hate the video. I like doing this together, with you, but I don't feel like the physical sensations are building toward anything.\"\n\nIn the video the man pulled his dick up to the woman's opening, and then slowly pushed it inside.\n\n\"That's kind of beautiful,\" Anna said.\n\n\"It is,\" Jake agreed, thinking about Anna.\n\nThey watched together while the couple in the video had sex, the man thrusting faster and faster while the woman moaned in pleasure. Finally, he grunted, and his body jerked as he ejaculated inside of her, and the video ended.\n\n\"Oh,\" Anna said as she looked over at Jake. \"What about your orgasm? Did that video not do it for you?\"\n\n\"It's not that, exactly,\" Jake said while idly gripping his shaft. \"It's more that I wanted to go there with you.\"\n\n\"That is sweet of you, but I'm afraid my equipment might not really work. Honestly, I'm not feeling anything building. But it was very helpful for you to do this with me, because I didn't feel the shame this way.\"\n\n\"Are you sure you want to give up right away?\" Jake asked.\n\nAnna's face looked determined. She shook her head.\n\n\"No, I'm not giving up,\" Anna said. \"But, well... do you have another suggestion?\"\n\n\"Have you ever tried, um,\" Jake regretted his idea but didn't know how to back out now. \"Water? Like, the tub faucet or shower head?\"\n\nAnna laughed. \"You mean, like, shoot a stream of water into my vagina?\"\n\n\"Well, not so much 'into' as 'at.' I don't know, it was just a thought. I've heard some women enjoy it.\"\n\n\"Heard? From who?\"\n\n\"I guess what I should say is I've seen videos of women pleasuring themselves with the stream from tub faucets. It could be fake, I certainly don't know.\"\n\n\"Show me,\" she said, nodding toward the computer. Jake found an example. In the video a woman climbed into a bathtub, adjusted the water temperature, and arranged her body so her vulva was in the stream. After a few minutes she started to moan, and finally her body jerked as she orgasmed.\n\nAnna contemplated for a moment and nodded. \"Okay, sure, that seems worth a try. Why not? Come on.\" She got up and walked to the bathroom. Jake followed eagerly, his erection bouncing crazily as he watched her cute bottom lead the way.\n\nAnna turned on the tub faucet about halfway, just to a gentle stream, and sat on the edge waiting for the water to warm up. Satisfied with the temperature, she stepped into the tub and sat down. Lying on her back, she spread her legs and scooted her bottom down toward the tub spout's stream of water, stopping with her thigh in the stream with her knees bent sharply.\n\n\"Like this?\" Anna asked. Jake nodded. \"Oh, it's just a bit too hot. Can you please make it just a tiny bit cooler?\"\n\nJake gave the knob a small adjustment.\n\n\"Hmmm. Now just a little warmer?\"\n\nJake put two hands on the knob and twisted it the smallest possible amount in the other direction.\n\nAnna let out a sigh. \"Okay, that's perfect.\" She rested her head against the bottom of the tub and closed her eyes. \"I feel stupid, though. This is embarrassing.\"\n\nJake took her hand from the rim of the tub and held it. \"It's not stupid to work toward understanding yourself and your body better. You've nothing to be embarrassed about as far as I'm concerned. I don't know if, when you find something that feels good to you, it will be like it is for me. But if it's similar, I think it will have been worth the effort. Maybe this suggestion of mine is stupid, but if it doesn't work we'll just try something else. Yeah?\"\n\nAnna smiled. \"Yeah, okay.\" She looked down at the stream of water. \"Okay.\" She slowly moved her hips until the stream hit the target. Jake felt her fingers tighten on his hand. \"Oh! That is... that is interesting.\"\n\n\"Interesting in a good way?\" Jake asked.\n\n\"It's definitely not bad,\" Anna said, resting her head back against the bottom of the tub as she closed her eyes again and slowly moved her hips to try different targets for the stream.\n\nJake looked over Anna's naked body. The drain was open, so the tub wasn't filling, but the flow was strong enough water was pooling in the bottom and it wet her hair. Her breasts were somewhat flattened against her chest, but he couldn't tell by looking if her inverted nipples were at all hardening. Jake looked down her belly to her bare vulva. Pussy. He loved saying 'pussy' with her. Her pussy spread open wide, her inner lips fluttering in the random turbulence.\n\n\"Oh!\" Anna said, grimacing slightly with her eyes squeezed tight. \"Ohhhh, something is happening.\"\n\n\"Is it a good 'something'?\" Jake asked.\n\n\"Mmmmmmm... yes,\" Anna replied. \"It is good.\"\n\nJake watched her shift her hips a bit more, and it looked like the stream was focused directly on her pink clitoris. Her hand gripped his tighter. Anna smiled and Jake couldn't help smiling in return, even though her eyes were still closed. It was intensely arousing to see her enjoying herself. He gently squeezed her hand in return, savoring the beautiful sight.\n\nFor several minutes Anna lay there, often making small adjustments to her position as the warm water tumbled over her pussy. Finally, she let out a big sigh--frustration or disappointment he couldn't tell--and sat up, releasing his hand and pushing herself away from the tub spout as she stretched her legs out straight on the bottom of the tub.\n\n\"Oh, that's much better. I couldn't stand having my knees bent for even one more minute.\" She leaned forward in a stretch, rubbing her leg muscles.\n\n\"Another failure then?\" Jake asked.\n\n\"Definitely not!\" Anna said, turning off the water. The tub drain gurgled noisily. \"I've never felt anything like that. It was nice. But the good feelings plateaued, and my legs started to cramp, so I don't know how close I got to having an orgasm.\"\n\n\"I see,\" Jake said, disappointed. \"Sorry.\"\n\n\"Sorry? That was a great suggestion. Now I know I can feel these kinds of feelings. It just wasn't enough for taking me all the way to orgasm town, wherever that is.\"\n\nJake felt his heart warm with pride. She liked it! She was smiling at him. He smiled back.\n\n\"So, what other ideas do you have?\" Anna asked as she stood up in the tub and dried herself. \"I feel like we're on the right track, we just need to keep searching.\"\n\nJake's smile faltered when he realized he didn't know what to suggest next. He supposed a vibrator would do the trick, but they had none. Anna was vigorously toweling herself when she saw his face and paused.\n\n\"Only if you feel like it, of course,\" she said, a bit quietly. \"It's no big deal.\"\n\nUpon hearing this horrifying misunderstanding, Jake panicked. He couldn't ruin this!\n\n\"I could touch you,\" Jake blurted.\n\n\"What?\" Anna said.\n\nJake felt himself turning bright red. Had he really just said that? He hoped he hadn't ruined everything. He looked down at his feet.\n\n\"Sorry, that was a bad suggestion.\" Jake was speaking quickly in desperation. \"Please forget I said it. The truth is I'm happy you enjoyed the tub faucet, and I'm having a lot of fun joining you on this journey. I'm sorry.\"\n\n\"Whoa, slow down,\" Anna said. \"You would touch me, that way?\"\n\nJake looked her in the eyes, his face contorted in anguish. \"I'm so sorry. That was inappropriate of me. I'm having the best time with you, and I didn't mean to ruin it.\" Jake looked back at his feet. His ashamed dick had shrunk to a tiny nub.\n\nAnna held her eyes on his. \"You're serious. You're not joking.\" It was a statement, not a question. Jake nodded.\n\n\"I can't promise it would work, of course. I've never done this before. It was just a stupid suggestion.\" Jake looked away again.\n\n\"Well, if you're sure you're willing to, we could try it. But only on one condition: When it's too boring or tedious, you must promise to stop and tell me. No hard feelings! Okay?\"\n\nJake couldn't help but smile. \"Deal! And you have to be patient with me. I have no idea what I'm doing.\"\n\nAnna resumed drying herself. \"I have to admit I'm pretty excited. If you can make me feel even better than what I just experienced in the tub it will be... well, it will be wonderful.\" She thought for a moment. \"But am I being unfair to you, though? I still don't want to have sex.\"\n\nJake laughed. \"As long as you don't mind how much I may enjoy this.\"\n\nAnna hugged him, pressing her naked body against his. \"You're my best friend,\" she said. She took Jake's hand and led the way back to the couch. She sat in her usual spot, on her towel, and spread her legs apart. Jake knelt between her knees, looked at her pussy, and froze. She looked so lovely before him, the smooth outer lips framing inner lips extra pink, still gleaming, and a bit swollen from their treatment in the bathtub. More than anything he wanted to bring her ecstasy with his love. Instead he found himself paralyzed with fear of failure.\n\n\"It's okay if it's too weird! As I said, no hard feelings,\" Anna said, trying a little too hard to sound casual.\n\n\"It's not that. I'm just... intimidated.\" Jake closed his eyes and then looked at her again. \"It feels like a lot of responsibility, and I don't want to mess it up.\"\n\n\"Listen, Jake, take it easy. I appreciate you doing this for me. If it doesn't work, that just means we learned a bit more about how my body works. Either way it will all be okay. It's just me. Your friend, Anna,\" she said with a smile. \"Now I don't mean to be demanding, but right now I'm feeling rather impatient and I want to be touched on my PUSSY.\" With a laugh, she grabbed Jake's hand and pressed it flat against her. Jake felt the warmth emanating from her cleft and almost swooned.\n\nJake started slowly moving his palm in small circles. He was used to touching her when he shaved her, or simply to comfort her. The closest he came to stroking her before this is when he would apply moisturizer after shaving. While he knew she enjoyed that, probably more than she'd admit, this was completely different. This was not about intimacy or comfort. She was asking him to stimulate her sexually.\n\nJake knew he was in over his head. His knowledge about pleasing women sexually all came from porn, and he knew how unreliable that was. His only hope was paying close attention to her reactions like a game of \"hotter or colder\" where the hidden prize was his best friend's first orgasm.\n\nKeeping the gentle pressure on her pussy, Jake drew his other hand up her belly, dragging his fingers between her breasts, around them, and up over her flushed areolas. He was encouraged to feel some firmness beneath his fingers where her nipples hid. He spent a moment gently caressing her before dragging his hand down to join his other between her legs.\n\nRemembering something he saw in a video, he gently pinched her outer lips together so her clitoris was trapped within and then pulled them up and down to stroke it.\n\nAnna moaned softly.\n\nBringing his hands together, he ran his thumbs down and up her smoothly-shaved outer lips. The down strokes pulled against her clitoris, the up strokes spread her open revealing the pink entrance to her vagina and the delicate petals of her inner lips. Down and up his thumbs stroked her, each time moving his thumbs inside a bit more and picking up her growing slickness. When they were wet enough he gently pinched each outer lip between a thumb and forefinger and pulled them apart a bit. Pulling down and then pushing up, in this way his fingers stroked every part of her outer lips and gently tugged against her clitoris without direct contact.\n\n\"Ohhhhh that's good,\" Anna breathed.\n\nAfter several full strokes up and down her cleft, he felt his thumbs were wet enough to try touching her clitoris. He pushed them up against and over her bump, feeling its firmness. Anna gasped, and he looked up to her face. Her eyes were wide.\n\n\"Wow,\" she said quietly.\n\nEncouraged, Jake spent some time pushing his thumbs up and down over her clitoris, feeling it get even more erect under his touch. Anna's breathing got faster.\n\n\"Put a finger inside,\" she said.\n\n\"Are you sure?\"\n\nShe nodded decisively, but her face showed nervousness. \"I'm sure. I trust you. But just one finger, okay?\"\n\nJake nodded and turned his attention back between her legs. Keeping one thumb stroking her clitoris, he tenderly explored her opening with the forefinger of his other hand. Circling and teasing until he was sure his finger was lubricated enough, Jake watched her face as he pressed against her opening and his finger penetrated to the first knuckle. Anna's mouth jerked open in surprise.\n\n\"Are you okay?\" Jake asked.\n\nShe nodded again, biting her lip. Jake slowly pulled his finger out part way, and then pushed in a little deeper. While his other hand kept slowly stroking her clitoris, he worked his finger in, out a little, in deeper, out a little, until finally his finger was fully buried in her. Anna breaths became slightly ragged with excitement.\n\n\"How are you doing?\" Jake asked.\n\n\"Good,\" Anna said. \"Really good. Something is definitely building.\"\n\nJake smiled. He was doing it! Matching the rhythm of his thumb on her clitoris, he kept his finger straight and moved it out and in, out and in, out and in. The air was perfumed by the delicious scent of her arousal. Anna grabbed her breasts and squeezed them. Jake's erection throbbed to see her so excited.\n\nTrying to remember what he'd read about stimulating a woman's g-spot, he curved his finger up to stroke where he hoped it was.\n\nAnna gasped. \"Oh god. Oh fuck. Don't stop!\" Jake's hands were starting to tire, but he was determined to get her there. He increased the pace of the strokes on her clitoris. Anna's hips were moving in response to his touch.\n\n\"I think... I'm... close,\" Anna said in between breaths. \"Please... I need... just... something more.\"",
        "Jake was stumped. He didn't know what more he could do with his aching hands. He knew he had to think of something quickly. His judgment clouded by desperation and doubting whether this was for her or for his own selfish desires, he put his mouth on her clitoris.\n\n\"Oh!\" was all Anna managed to say.\n\nHaving spent so much time with her naked, he had experienced her scent in a subtle way often. He found it familiar and comforting. But the taste, the direct contact on his tongue, the profound intimacy with the woman he loved so deeply made for an impossibly intense experience.\n\nHoping to not lose the momentum, he gently sucked the hard center of her pleasure between his lips, against his tongue, in and out, and in and out, at increasing speed. He felt her hips match his fast rhythm, pushing herself against him.\n\n\"Fuck-fuck-fuck-fuck-fuck!\" Anna's head thrashed side to side as she was overwhelmed by sensation. Suddenly she cried out with a voice so deep he didn't recognize it. Everything seemed to get even wetter and then she pulled away from him and rolled over onto her side, hugging her knees and shuddering. Jake stared dumbfounded for a second before he realized what had happened. He scrambled up next to her on the couch and wrapped his arms around her, holding her tightly. Every few seconds she would cry out again as her body convulsed. Together they rode the waves of her pleasure as the spasms repeated again, and again, each a bit less intense, until finally it was over.\n\nWordlessly they lay there, Anna clutching his hand as he held her. Eventually her breathing returned to normal, and her grip softened. Jake realized he had his dick pressed against her bottom in their hug, but it had softened during the past few minutes. He felt proud of himself and his soft dick. Anna was the epitome of his sexual desires, but in this moment even his perpetually rude cock recognized this was not the time to make selfish demands. It felt nice snuggled up against her soft bottom.\n\nHis face resting on Anna's back, he couldn't help smiling. He had done it! He had most definitely given her something she'd never felt before.\n\nA small movement from Anna brought him out of his reverie, and he realized she was crying. In a single second his heart fell from impossible heights of blissful pride and satisfaction down into despair.\n\n\"Anna, are you okay?\" Jake asked, his voice small. \"Did I hurt you?\" For what felt like an eternity, there was no response at all. Then Anna's grip on his hand tightened, and she pulled it against her chest.\n\n\"Thank you,\" she said, her voice cracking. Holding his hand tight, she moved to sit up and he pulled back to give her space. She looked at him with cheeks wet with tears. \"I have no idea why I'm crying. No, you didn't hurt me. You made me feel more pleasure than I ever thought possible. I don't know where all this emotion is coming from.\" She leaned her head against his shoulder, and he put his free arm around her again. They sat in silence for a few minutes more. Jake's heart gradually recovered from its moment of terror, and he breathed easy again, the sweet scent of her hair in his nose.\n\nWith a deep breath Anna lifted her head and looked at Jake. Still feeling elated from his success, he started to grin. This in turn made Anna smile.\n\nMaking a goofy face, he said, \"Well?\"\n\nThey both burst out laughing. Jake felt elated at what he had accomplished, giddy with delight at what they had shared, at how close he felt to Anna.\n\nWhen the laughter died down, Anna's face grew thoughtful. \"What I just experienced... was that normal? Is that what everyone feels when they orgasm? Is that what you feel?\"\n\n\"I doubt I've ever experienced anything even a tenth as good as that,\" Jake said. \"That seemed to be in the earth-shattering category.\n\n\"It really was. My legs feel weak. I can't get over how good that felt. I honestly didn't know anything like that was possible. How did you know how to do that?\"\n\nHe thought about all the 'how to' videos about sex he had watched, all the guides to please a woman he had read, how he poured all his love and focus into doing the best he could for her. \"I think I just got lucky.\"\n\nAnna laughed. \"No, I'm the one who got lucky.\" She sat in silence for another moment looking at her toes.\n\n\"Jake?\"\n\n\"Yes?\"\n\n\"You kissed my pussy.\" It still caught him off guard when she used that word, but he liked it.\n\n\"Yes. I hope you don't mind. I knew you needed more and that was my only idea,\" Jake said.\n\n\"Was it... was it gross?\" Anna asked.\n\n\"Quite the opposite,\" Jake said. Of course, the truth was he was overflowing with affection for her. Confessing all that now seemed too much. He kept silent.\n\n\"Anna,\" Jake said quietly, \"Did I hurt you?\"\n\n\"What on earth are you talking about?\" she said.\n\n\"You know, when I... when I put my finger inside.\"\n\n\"Oh!\" she giggled. \"No, it didn't hurt at all. Quite the opposite. Completely different from the doctor.\"\n\n\"Oh good,\" Jake said, his finger remembering. Warm, snug, delicate. He felt his arousal start to grow and tried to think about something else instead.\n\nAfter a few minutes, Anna asked, \"How tired are you?\"\n\n\"Oh, I'm fine.\"\n\n\"But it took me ages to reach the climax. You must have been getting a little tired?\"\n\n\"A little,\" Jake admitted. \"But I'm fine now.\"\n\n\"All recovered?\"\n\n\"Yes, all recovered!\" Jake said, laughing at the interrogation.\n\n\"Good!\" Anna said, distractedly stroking the top of her thigh. \"Good, I'm glad. That was an incredible thing you did for me, just an incredible thing.\"\n\n\"Anna, please,\" Jake protested, turning his head to meet her eyes. \"I enjoyed it too, you know.\"\n\nAnna smiled but quickly looked away in embarrassment. \"Of course, now... now it's your turn.\" Anna was clearly getting nervous. \"I owe you some--\"\n\n\"No,\" Jake said a little too firmly, sitting up. \"No, listen. There's nothing owed. Nothing transactional here. If some day in the future you find yourself needing to touch me, truly deeply needing it, then nothing would be more welcome. Nothing. But I've been slapping this salami and having orgasms for years. I'm fine. What's important now is you've taken a huge risk with this first step, and it was a good experience. I think you should load up on good experiences before taking more risks.\"\n\n\"'Good experience' rather understates things,\" Anna said with a laugh.\n\n\"Here's what I think,\" Jake said. \"No offense, but you look a bit worn out. How about I get us a snack and we watch a movie to relax?\"\n\nAnna smiled. \"I do feel a bit drained. That would be nice.\"\n\nJake returned with some apple slices, cheese, and crackers. Anna cued up a movie and he realized he was feeling pretty drained himself.\n\n* * * * *\n\nSome time later he awoke to find Anna still sitting with him. The movie was over. It took him a moment to notice she was looking down at his crotch.\n\nJake must have moved a little because Anna startled, looked away, and began to get up.\n\n\"What's the matter?\" he asked.\n\n\"Sorry, I shouldn't have been staring while you were asleep.\"\n\nJake laughed. \"Are you joking? We've been naked with each other for weeks now. Why would I mind if you looked at my ugly wiener?\"\n\n\"I don't know,\" Anna said, settling back down on the couch beside him and leaning against him. \"It just felt like peeping or something.\" She smiled. \"I guess I was being silly.\" Jake nodded and put his arm around her again, feeling her shoulders rise and fall as she breathed, enjoying how her breasts moved.\n\n\"I don't think it's ugly,\" Anna said after a few minutes.\n\n\"Hmmm?\"\n\n\"Your penis. Your COCK,\" she added with a smile. \"I don't think it's ugly. It got super small while you slept. I thought it was cute.\"\n\nJake felt the topic of discussion begin to swell. He whispered, \"Uh oh, it knows you're talking about it.\"\n\nAnna bent down close to his dick and whispered to it, \"I think you're cute when you're all shrunk up small!\" Then she sat back up, giggling.\n\nHis dick jumped a little in response, and Anna laughed more.\n\n\"Can I tell you something stupid?\" Anna asked.\n\n\"Of course.\"\n\n\"This is embarrassing... but... when your cock gets really big...\" Anna looked down. In a quiet voice, she said, \"I feel a little bit scared of it.\"\n\nJake immediately began to shrink. He frightened her? He moved to cover himself with his hands.\n\n\"No wait,\" Anna said, grabbing his arm and pulling him back down. \"That's not what I meant. You didn't do anything wrong.\" She pulled his hands up so his crotch was exposed again. \"All I meant was it's intimidating when it gets big.\"\n\nJake thought for a moment. \"I have to be honest. It's hard to not be aroused when I'm with you. But I will try!\"\n\n\"No,\" Anna said. \"No, I don't want that. This doesn't make sense, but I also like when it gets big. I feel both excited and a little afraid.\" She looked down and then back into his eyes. \"I guess what I mean is I appreciate how patient you're being with me. I intend to return the generosity you've shown me, but... but I'm just not ready yet.\"\n\nJake let out the breath he didn't realize he was holding. \"Oh, well that's no problem. I thought we already settled this? You don't 'owe' me anything.\"\n\n\"I know,\" Anna said, \"I just--\"\n\n\"Listen,\" Jake interrupted. \"Believe me. I'm having a... profoundly good time. All I can think about is hoping you'll invite me back for another round.\"\n\n\"What does your schedule look like tomorrow evening?\" she asked.\n\nJake chuckled, and he felt his dick jump at the thought. \"I think I can fit you in,\" he said.\n\nAnna smiled, and leaned her head against his shoulder again.\n\n* * * * *\n\nAnna didn't like to directly ask for Jake to work his magic on her. Her face would occasionally get this hungry look that was extremely obvious, and Jake made sure to offer. As he practiced on her more and more, he became immensely proud of his growing expertise. He had learned to read her feelings, her body's reactions, and her needs. Sometimes it was clear she needed immediate relief, and he would give it to her. Other times, his favorite times, she enjoyed dragging it out. He would bring her right to the edge, and then back away, teasing her over and over until she couldn't stand it even one more second. When she reached that point, he would take her over the edge into an incredibly powerful orgasm that left both of them exhausted afterwards.\n\nShe wasn't ready to return the attention. Occasionally she would offer, though it clearly came from a sense of obligation. Jake wanted her to touch him out of desire, not guilt. At least he wasn't embarrassed about being erect around her anymore. Sometimes he got that \"blue balls\" ache, but not often. After she left every evening, he didn't even feel the need to masturbate anymore. He just missed her and tried to get to sleep quickly so the morning would bring her back.\n\nJake hated hiding his true feelings from her, but he feared ruining what they had. Maybe someday he would have to confront that. He wasn't ready.\n\n* * * * *\n\nIt had been a tiring Saturday, but fun. Hiking in the nearby foothills, taking countless photos, and talking about all kinds of things. She seemed so fond of him as they explored and laughed together, he could almost believe she loved him as much as he loved her. He hoped so, at least. Lost in his thoughts, he realized Anna was talking to him as she drove them home.\n\n\"It's funny,\" Anna said. \"I was talking with my mom the other day and she was acting all confused about us. Apparently, I talk about you all the time and she thinks we're actually dating. 'Mom!' I said, 'Jake doesn't think of me that way. We're just good friends.' I don't know why she won't let this go.\"\n\nJake felt his ears burning. HE doesn't feel about HER that way? Feeling exhausted from the hike, he was unable to slow the emotion building in his heart.\n\n\"That's bullshit,\" he said, more anger in his voice than he intended. He stared out the front window.\n\nAnna glanced at him with surprise. Jake didn't turn toward her. He knew Anna wasn't a malicious person, and he knew he was probably messing up everything, but it hurt.\n\n\"What do you mean?\" Anna asked quietly.\n\nJake knew his anger was out of control, but he spoke anyway. \"You always assume too much. Mostly I don't mind, but you don't get to make assumptions about my feelings, to lie to my face. It couldn't be more obvious how I feel about you, how I've felt about you from the very start. I don't expect you to love me back. You don't owe me anything. But it would be really fucking decent of you to at least be honest that YOU set the rules. You don't get to put words in my mouth.\"\n\nAnna didn't respond. Jake stared straight ahead. He heard some sniffling and saw her wiping her eyes. He wanted to comfort her. He hated to see her in pain, no matter the reason. But his angry heart felt better, even if he dreaded to think what he had done to their friendship.\n\nThe rest of the drive home was silent. They went to their separate apartments that evening. Jake showered by himself for the first time in weeks feeling lonely and sad. Fearing he had made the biggest mistake of his life, he made it as far as the couch before breaking down in tears and crying himself to sleep beneath the throw blanket.\n\nSometime later, Jake heard Anna's voice. Was it a dream? His head felt heavy with sleep. In the darkness, Anna was pulling his hand.\n\n\"Come on, sleepy-head, you'll be more comfortable in bed,\" she said.\n\nHer voice held no anger, only kindness. It must be a dream. He found himself in his bed. Anna climbed in beside him, her warm back snuggled up against him as she pulled his arm around her. He longed for it to be real, though he knew it couldn't be. Anna hated him now. It was over. Jake's mind drifted into blank despair again.\n\nAnna was smiling at him. Her face was the most beautiful thing in the world and her gaze felt like being bathed in warm sunshine. She leaned in to kiss him. In the dream logic, this wasn't a surprise. She loved him as he loved her, and kissing him was the most natural thing in the world. Her lips touched his and he felt his heart grow and expand until it consumed the universe with their love and joy. All they needed was each other, forever. Touching her face, he was the happiest man in the world. He called out her name.\n\n\"Jake,\" he heard Anna's voice, gentle and tender. \"Jake, are you okay?\" He felt a warm hand on his cheek.\n\nHe opened his eyes and saw the light of dawn, soft on Anna's face. What was she doing here? Genuine concern was in her eyes.\n\n\"Jake, you were having a dream. Are you okay?\"\n\nAs he woke up more, he realized his dick felt strange. Moving his hand, he found it was on Anna's hip, and her hip was wet. The sheets were wet. His crotch was wet. With horror he realized it had been a wet dream. The biggest, messiest wet dream of his life. And it was all over Anna.\n\nHis body involuntarily jerked in panic. Tears erupted from his eyes and he started gasping, unable to speak even if he knew what to say. What was she even doing here? He couldn't see clearly through the tears, but he had no trouble imagining the hateful look she must be giving him.\n\n\"Sorry!\" he blurted. \"Oh god, I'm so sorry.\" He started to pull back, to climb out of the bed and away from the mess, away from everything. But she gently pulled him back down beside her.\n\n\"Shhhh, don't talk,\" she said. \"Just look into my eyes and breathe.\"\n\nJake squeezed his eyes shut, too ashamed to look at her.\n\n\"Everything's okay, Jake,\" Anna continued. \"I'm here with you, and everything is okay.\"\n\nJake opened his mouth to apologize again but she put a finger over his lips before he could speak.\n\n\"There's nothing to say. Just breathe with me.\"\n\nHe opened his eyes and through the tears saw Anna's kind eyes looking into his. He inhaled, and his chest jerked with a suppressed sob.\n\n\"Everything's okay, Jake. Just breathe with me.\"\n\nJake took another breath, and he managed to make it a bit smoother. Anna smiled and stroked his temple. He focused on the warmth of her hand on his face and tried to forget the shameful wet mess between them on the sheets.\n\nEventually his breathing calmed down. Anna used her thumb to wipe the tears off his cheeks, and she smiled at him.\n\n\"Now we're going to do something silly,\" Anna said, \"And you're not going to argue with me. You're going to come with me to the shower, but first you're going to close your eyes. Do you trust me?\"\n\nJake was puzzled but he nodded and closed his eyes. He felt her pull the cold sticky sheet off them, and then she helped him stand up. Holding him from the side, she slowly guided him, and he realized she was doing this so he wouldn't look at the mess on the bed. He felt the shame lurch back into his heart, but at that very instant she put her hand on his chest, right over his heart, and he calmed back down.\n\nHe kept his eyes closed as his feet touched the cold tile of the bathroom. He heard Anna start the shower, and then she pulled them together into the hot water. She pressed the front of her body against the front of his and squeezed him close, her head on his shoulder with her face against his neck. Her breasts were soft and comforting. Her hips pushed against his and he felt his shrunken, ashamed dick press against her thighs. He put his arms around her and returned the hug. The hot water poured over them both and he felt his body relaxing.\n\nFor a few minutes they just held each other. Anna adjusted the water slightly hotter. The air filled with steam and their bodies seemed to blend as the water coursed over their shoulders. Anna sighed happily against his neck. She didn't hate him for ejaculating on her in his sleep. She wasn't repelled. She didn't find him revolting. Anna squeezed him tighter, then pulled back from her hug.\n\n\"You can open your eyes now.\" She was smiling at him. She put her finger to his lips and then grabbed the shampoo bottle. Her fingers massaged the shampoo into his scalp and his eyes rolled back in pleasure. She rubbed far longer than was needed to wash his hair, clearly enjoying his reaction. With a soapy wash cloth, she rubbed his shoulders. Her thumbs worked into his muscles as she washed down his back, down each arm, across his chest and down his belly.\n\nWithout hesitation she gently held his shrunken dick and stroked it carefully with the wash cloth. It wasn't sexual as she cleaned him, it was simply loving. She washed his bottom, his legs, and his feet, including scrubbing between each toe.\n\nShe pushed him back into the hot water to rinse and held a finger up to tell him to stay there. Then she carefully shampooed her own hair, and washed her own body, making sure he was watching. Finally, she joined him in the hot stream of water and hugged him as she rinsed.\n\nWhen Anna turned the water off she grabbed a fresh towel and dried him carefully over his whole body before drying herself while he watched. He laughed when she used the hair dryer on him, blowing warm air all over their bodies until they were fully dry before she got a brush and started drying his hair too. She had fun styling his hair to look ridiculous, and then quickly dried her own hair too.\n\nAnna wrapped them each in bath robes to stay warm, and walked him to the kitchen. She put him in a chair and he watched while she made coffee, toast, and eggs. She sat beside him while they ate in silence, watching each other and giggling now and then.\n\nWhen they finished eating, she held up her finger again to tell him to stay in his chair, and then went off to the bedroom. Anna was gone only a few minutes before returning and leading him by the hand back to the bed, which now had fresh sheets. She sat beside him on the bed and smiled at him.\n\n\"How are you feeling now?\" Anna asked. \"Better?\"",
        "Jake smiled. He was clean, warm, and fed. Also, he realized, he was loved. \"All better. One hundred percent better. One thousand percent better!\"\n\nAnna giggled. She couldn't seem to stop smiling.\n\n\"Remember when I first asked if I could show you my breasts?\"\n\nJake nodded. \"I'll never forget.\"\n\nAnna pulled her robe open. Jake happily looked down at her beautiful breasts, familiar now but no less appealing to him, with their tender little slits where her nipples hid. He was about to say some silly compliment about her breasts when she kissed him.\n\nIt was not Jake's first kiss. He had dated a few women and experienced some nice kisses. But this kiss was so impossibly more intense it may as well have been his first. Through her lips he felt Anna's warm affection for him. Her eager desire for him. Her boundless love for him. Too soon, she pulled back. She was still smiling.\n\n\"You're in love with me,\" she said. It wasn't a question. Jake nodded. \"You've been in love with me from the moment we met.\" Jake nodded again. \"You've been lovingly caring for me this whole time while I refused to believe you thought of me romantically. But you do.\" Jake nodded vehemently and leaned in to kiss her again.\n\nWhen their lips met for the second time they both had their mouths open and their tongues found each other. Anna pulled his robe open and pushed it off his shoulders, and then put his hands on her warm breasts. He lovingly squeezed them while she pulled her own robe off and then spread her legs and pulled his hand down between them. His fingers found her familiar cleft, but it all felt different to be kissing her at the same time. Through their kiss it was like he could sense how good his touches felt on her. Already her clitoris was firm beneath his finger as he stroked it. She was incredibly wet, far beyond what he had experienced before. Everything felt slick and warm and sensual as she moaned into their kiss.\n\nWithout breaking the kiss, she gently pushed him back on the bed and straddled him. He was already erect, but when her fingers wrapped around his shaft it grew even harder. She had touched him there often, but never with this eagerness and never when he was this hard. She stroked gently up and down his length briefly and then dragged the tip up and down the length of her cleft. He felt her heat, her wetness, her desire.\n\nStill kissing him, Anna guided him to her virgin opening and pushed down. They moaned together as he entered her. Jake had no idea his cock could experience so much pleasure, and then she pushed more, and it was even better. Relentlessly she pushed until he felt her hips against his and he was fully buried in Anna, in his love.\n\nShe refused to break off the kiss as her hips lifted and pushed back down with a cry. Jake realized he was far past the point of no return. She lifted her hips once more and pushed down just as he felt his hot eruption surge up the length of his shaft and deep into her. Jake's hips bucked wildly against her as an unending stream of pent-up affection poured into her. Never had an orgasm felt so right, so perfect.\n\nAfter what seemed like ages of pumping and straining to give her every last drop, his awareness fell back into their kiss. She did love him. She was in love with him just as much as he was with her. He could feel it. He knew it.\n\nSlowly, so slowly, Anna pulled her face up to look at him. The moment their eyes met, they said at the same time, \"I love you.\"\n\nAnna giggled and gave him another kiss.\n\n\"I noticed,\" she said.\n\nSuddenly reality came crashing back in on Jake's mind. \"Did I hurt you? I didn't mean to hurt you. I exploded so fast. I should have given you some pleasure first. That was selfish. I should have worn a--\"\n\nAnna stopped his talking with another kiss. Feeling her lips on his, he forgot what he had been saying.\n\n\"Stop talking nonsense,\" she said with a smile. \"Now let's see. No, I'm not hurt. It was uncomfortable at first, but then it felt wonderful. Absolutely wonderful. And you don't have a selfish bone in your body.\" She giggled. \"Or a selfish bone in my body, for that matter. That was perfect.\" She kissed him again. \"Absolutely perfect. I wouldn't change a thing. If I could do it all over again, I'd want my first time to be exactly the same.\" She kissed him yet again. \"Are you telling me you honestly have regrets?\"\n\nJake smiled and shook his head. He moved his hands down to her bottom, and felt himself slowly shrinking inside her. He wanted to stay inside her forever.\n\n\"And no,\" she continued, \"You should not have worn a condom. Is that what you were going to say?\" She shook her head and rolled her eyes while she smiled. \"First, I've been on the pill for years to help with period cramps. Second, we're going to be together forever and if that means babies then I welcome it.\" The love in her eyes shone intensely. \"Third, well, the truth is I wasn't thinking about any of that.\"\n\nAnna stroked the side of his head and took a deep breath. \"This morning I woke up in your arms feeling warm, secure, and loved, but all this time I had convinced myself you didn't love me 'that way.' That you weren't 'in love' with me. But you were having a dream. Such an intense dream. You kept mumbling 'I love you' over and over. And then you called out my name--you practically screamed it--and then I was covered, absolutely drenched with--\"\n\n\"I'm so sorry!\"\n\n\"NO! Let me finish. I was covered, absolutely drenched with... the truth of your love. And it felt magical. The realization hit me I've been an absolute idiot this whole time. You've been lavishing me with love and affection while I refused to accept the truth of your feelings for me. Only by getting a peak into your dreams did it finally get through my thick skull.\"\n\n\"I made a mess on you,\" Jake said.\n\n\"I loved it!\" Anna said. \"It was amazing. It was incredibly intimate. And honest. And pure. It was beautiful. And it smelled sweet too. Like a switch flipped, I was no longer intimidated by your penis, your cock. I was no longer afraid of it. All I could think was I needed you inside me as soon as possible, I just wanted to be filled with your love.\"\n\nShe thought his dick and what it did was... beautiful? Anna, the person he loved most in the world, his best and closest friend, the woman he wanted to spend the rest of his life with, she thought that? Jake's cock, feeling wanted, and desired, and loved, started to grow within her.\n\nAnna moaned happily. \"Oh, I feel that.\" Her hips started moving in circles, and soon he was fully hard again. \"Oh god, Jake it's just so good. I love your cock. Your beautiful, beautiful cock inside my happy pussy.\"\n\nAnna slowly brought her legs out and her knees up, careful to keep him inside her, and then sat upright on Jake's hips. She looked dazzlingly beautiful, smiling down at him from above. Jake stroked up and down her sides, admiring her.\n\n\"You're looking at me like you think I'm beautiful or something,\" Anna said with a giggle.\n\nJake nodded. She pulled his hands onto her breasts.\n\n\"You make me feel beautiful,\" she said, and then pulled him up toward her and kissed him. After some careful shifting to stay inside her, they were arranged upright and facing each other, with Anna sitting on his lap. Jake's face was halfway between her face and her breasts. Anna kissed him, and then looked down between them.\n\n\"It's beautiful to see where we're joined,\" she said. He looked down with her and saw her smooth outer lips wrapped around the base of his shaft. \"I love having you inside me.\" Anna held a breast up to his face.\n\n\"Kiss my beautiful nipples,\" she said.\n\nJake had done a lot of fun things with Anna, but he had not yet touched his mouth to her breasts. His cock jumped with excitement inside of her, and she giggled with delight.\n\n\"You like that idea, do you?\" she said with a smile.\n\nJake nodded and brought his lips down to the breast she offered him, softly kissing around it before kissing her inverted nipple directly. He could feel its firmness beneath his lips.\n\nAnna sighed. \"Suck it.\"\n\nHe surrounded her areola with his lips and swirled his tongue around it while gently sucking.\n\n\"Yes, that's it,\" Anna said softly. \"Harder.\"\n\nHe sucked harder and felt movement as her nipple emerged between his lips. After all this time feeling like her bare breasts brightened the room, her shy nipple seemed to taste like warm sunshine radiating into his mouth. Anna gasped in delight. He held it in his mouth and explored it with his tongue.\n\nAnna stroked his head. \"You found treasure there, didn't you, my love?\" she said. \"It's just for you. All for you. Now see if you can find the other one.\"\n\nJake gently released it and pulled his face back to see. For an instant her nipple stood out, larger than he had expected, and then it collapsed back inside to hide. He put his lips on her other nipple and found it just as easy to pull out. Lovingly he stroked its firmness with his tongue.\n\n\"That feels amazing,\" Anna said, her breathing getting faster as she stroked the back of his head. \"I've never felt anything like this before. They're so happy in your sweet mouth, my nipples that only come out for you.\"\n\nJake moved his hand down to where they joined. After stroking her outer lips to get his thumb nice and wet, he gently brought it against her firm clitoris. Anna gasped again. The angle was different from what he was used to, but he soon found the right way to touch her. He switched back to the first nipple and coaxed it out into his mouth again while Anna writhed and pulled on his head.\n\n\"Oh god, oh Jake, oh god,\" Anna cried out as her body jerked against him once, twice, three times. He could feel the pulsing pleasure flow through her as each spasm clenched around his shaft and then flowed up through her body. Slowly he released her nipple from his mouth and brought his hands up to hold her as she sagged into him.\n\nAfter a moment she sat up and pulled his face to hers with a kiss. He felt her wet tears on his face before she pulled back to look at him with a smile.\n\nWiping the tears away, she laughed softly. \"You made me feel so good. So... loved.\" Anna stroked his face. \"I didn't know my breasts could feel like that. You make me feel so beautiful. You make my breasts feel so beautiful. So special.\" She kissed him. \"My breasts are wonderful, aren't they?\"\n\nJake nodded. \"Absolute perfection! They radiate beauty and warmth to all who behold them!\"\n\nAnna giggled and hugged him, pressing her warm brilliant breasts against his chest.\n\n\"Jake,\" she whispered in his ear. \"Jake, I feel something wonderful inside of me. Do you have any idea what that could be?\"\n\n\"I hope it's the sure knowledge I love you with my whole heart,\" he said.\n\nAnna laughed again. \"It is! Though I can't help but notice it's a hard truth I'm feeling.\" Jake strained inside of her. \"A very hard truth. I wonder if what I really need is for you to drive the point home.\"\n\nAnna smiled and slowly fell backwards onto the bed. Jake regretfully pulled out of her so he could change positions, but quickly arranged himself on top of her and she guided him back in. Her hair stretched out on the bed behind her head forming an arc like blonde rays of sunshine emanating from her smiling face. Anna's hands on his hips pulled him into her and she sighed happily.\n\n\"Did your hard truth say something?\" she said. \"I couldn't quite hear. I think you need to push harder.\"\n\nJake pulled out part-way and pushed back into the warm embrace of her love.\n\n\"Harder, Jake, harder! I need to feel that truth deep inside me.\"\n\nHappily, Jake thrust hard into her. Anna's amazing breasts bounced crazily, her head turning side to side as she writhed in pleasure beneath him. He felt the delicious pressure building within him as he pumped furiously. With a final effort he pushed as deeply into her as he could and froze, straining, as all the muscles in his body squeezed as one. It felt like an ocean's worth of love coursed through his shaft, each droplet leaving a wake of joy on its journey of a thousand miles across his every nerve before flooding into Anna's boundless, loving embrace.\n\nWhen there was nothing left of him to give, Jake found himself collapsed on top of Anna. She was stroking his head, her warm breasts against his chest shining sunlight directly into his heart.\n\n\"I love you,\" Jake said.\n\n\"I heard you,\" Anna said. \"All the way inside me, I finally heard you.\"\n\nTHE END\n\n* * * * *\n\nThank you for reading. Please consider rating this story or providing a comment with your thoughts. I appreciate your feedback."
    ],
    "authorname": "darrenr",
    "tags": [
        "virgin",
        "exhibitionist",
        "shaving",
        "masturbation",
        "cunnilingus",
        "romantic",
        "inverted nipples"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/inverted-intimacy"
}