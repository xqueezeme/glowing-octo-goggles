{
    "title": "The Old King and the New Bride Ch. 05",
    "pages": [
        "Okay. I have good news and bad news. The good news it this chapter will finally take care of Leyna and Lilith and set things straight. The bad news is this is the last chapter. I'm sorry, but there's no way I can find to extend this series without making it campy and predictable. Michelle and Lucifer have gone through so much shit already, I think it's time we wrap this story up and let them be.\n\n Also, I apologize for taking so long to write this one. Final exams wiped all of my creativity, so I had to start working from the beginning to get my mind turning again. But I managed to finish it just before the angry mob broke down the door and demanded answers.\n\n Enjoy.\n\nChapter 5: Peace at Last (Mostly)\n\nLucifer steps forward, dragging Leyna with him as he approaches Michael. It takes the glorious un-fallen angel a second to actually register his brother's voice. His eyes narrow in confusion, not sure what to make of the situation. He'd come here to ravage me and haul me back to the mortal world, and yet his brother, previously hidden in the shadows, is slowly creeping up on him like the predator his is.\n\nStill frozen in place in front of Michael, I steal a glance at my husband. His warm amber eyes are focused, seeing nothing and no one but his meddling brother. His grip on Leyna's slender wrist would be enough to crack stone, yet he drags her along as if she's made of glass. I understand: if this trick is to go over well, it's best to leave the merchandise alone, lest he risk further damage to an already worthless piece.\n\nUgh, just kill her already...\n\nAs Michael turns to face his brother, I start to worry this plan might not end up being as triumphant as we need it to be. Both he and Leyna have tried to break up my marriage to Lucifer, although Leyna was far more successful. But even though Michael didn't do quite as much damage, he still tried to interfere with me and my husband. In my book that's a big no-no, so there's still a risk that he'll pussy out and race away.\n\nPanicking, I reach out and grab Michael's free arm, holding onto him with everything I've got so he won't fly away. He whips his head around to glare at me, recognizing the trap. I'm terrified, but I don't let go. I've suffered through too much shit at the hands of these two vermin, and I'm not about to back down and fail my husband now.\n\nMichael's eyes narrow at me in fury. \"You! You set me up! Little bitch!\" His arms pulls back and I can almost see crosshairs forming on my head.\n\nI take a tiny step back, trying to put another inch of distance between us, but my grip stays firm. I'm queen, damn it. I may be scared, but I'll stand my ground if it means getting back at the ones who fucked with me. And Michael majorly tried to fuck with me. Just as the archangel is about to swing, Lucifer's free hand shoots out and catches his brother by the wrist. Relieved to not have my head smacked off, I peek around Michael's hulking form to see my husband.\n\nMichael has picked a bad time to attack me. Standing so close to each other, I notice that not only is Lucifer the older sibling, he's also a good two inches taller than his brown-nosing brother. There's a fury in his eyes I've never seen before, but it's with good reason. Michael is a pain in his brother's ass, and even Lucifer can only take so much. Lashing out at his beloved queen was the straw that broke the demon's back.\n\nLucifer jerks Michael's hand down out of firing range, tightening his grip so I can actually hear the bones crack. Michael winces slightly, but remains glaring at his brother with all the anger he can muster. But the archangel's anger is nothing compared to my husband's. Lucifer cocks his head, a slow smile spreading across his lips as he holds his brother tight.\n\n\"Tucoric? Nama hisienthor ni sinaromac.\" The words flow from his mouth like silk, wrapping around my skin and making me shiver.\n\nIt's a tongue I've never heard before, much more delicate and fragile than the demonic language used here. It must be the old language he used back in Heaven; a softer, chime-like speech meant to show the gentleness and charm of Paradise.\n\nHuh. Sounds like Elvish.\n\nMichael's eyes widen, then narrow. \"This is what you want? A lying, manipulative whore who tricks angels with sex? This is your queen?!\"\n\nLucifer's perfect lips curl up into a soft, sinister smile. \"Yes. This is my queen. A woman who cares for me, who's honest with me, who listens to me. A woman who is beautiful, charming, intelligent and strong. Who does lie \u2013 at my behest \u2013 only to assist me in my punishment of those who tried to ruin us.\"\n\nDragging Michael's arm downward, Lucifer drags Leyna out from behind him and jerks her arm forward. He presses their palms together, and a soft sizzle begins to fill the room. Both Leyna and Michael wince at the sound, then panic and start to pull apart. It's a vain attempt; their hands have been welded together, fusing them into one person.\n\n\"Yes, brother,\" Lucifer sneers at Michael. \"This is my queen. And now, you have yours.\"\n\nStill struggling to free herself, Leyna turns to me and glares with everything she's got. She screams and lunges at me, one clawed hand slashing at the air as she takes off. But Michael's solid angelic form is still rooted in place, and she's yanked back to where she was before. I can't help my smile. I've taken back everything that's mine, and she can't even muster the strength to pull away and attack me. She's stuck, trapped with an angel she despises while I watch her struggle. \n\nAh, karma. How I love you.\n\nLucifer steps back, letting the demon and the angel continue struggling to separate for a moment, a wicked smile plastered to his face. He raises his own hands, claps the twice, then waits. A heartbeat later, a blinding beam of light erupts through the roof of our room and surrounds the two struggling immortals. I lift my arm to shield my eyes from the brilliant light, but my eyes start to tear anyway. Lucifer steps beside me and spreads one of his enormous black wings. He reaches out, wrapping his arm around my waist and pulling me against his chest, folding his wings around me until I'm surrounded by darkness.\n\n\"Father!\" he calls out. \"Here is your favored son. He has a guest with him. Take good care of them!\"\n\nThere's a loud explosion, then silence. Lucifer waits for a few seconds before unfurling his wing, taking the time to allow my eyes to adjust to the suddenly normal light. I pull away gently, looking around the empty room. Leyna and Michael are gone, leaving Lucifer and I completely alone.\n\n\"Where did you send them?\" I ask quietly.\n\nHis cool lips brush my hair in a gentle kiss. \"Home. They're both obnoxiously selfish and utterly infuriating, so I figured they'd make a great couple.\"\n\nI scoff playfully and slap his arm. \"You're awful.\"\n\nHe nuzzles my neck. \"You married me.\"\n\nI smile and tilt my head back so he can have more access to my neck. \"How long do you think it'll take form them to go nuts?\"\n\n\"If my father doesn't intervene? Maybe two days. If he does, they'll be separated and Leyna will be executed for crossing enemy lines.\" His hands drift up the front of my dress and cup my still-bare breasts.\n\n\"Poor baby,\" I purr as he starts to mold my breasts with his fingers.\n\nHis soft laughter is music to my ears, and his cold hands add fuel to my growing fire of need. Now that Leyna and Michael are gone, Lucifer and I can finally have some well-deserved alone time. And I need my alone time with my husband. After the huge mess Leyna threw me into, I'm dying for some attention and loving from my man-angel-thing.\n\n\"You know...\" I draw out the words seductively. \"I never got that bath I wanted.\"\n\nHe literally growls in my ear. \"You're right. You've been stuck inside Leyna's body all day.\" Moving smoothly, he scoops me into his arms and turns toward the doors that lead to the bathroom. \"Let's get you cleaned up.\"\n\nI giggle and kick my legs up so I can nestle in his grip. Looping my arms around his neck, I press my cheek against the icy skin of his chest, taking the time to revel in my husband's touch once again. It's lovely being back in my own body with my husband's arms holding me tight. So wonderful, really, I doubt Heaven could compare with this.\n\nHe laughs softly and kicks the bathroom door open. \"Good to have you back.\"\n\nI moan softly and nuzzle his chest. \"Good to be back.\"\n\nAs we enter the lavish bathroom, Lucifer gently softens his grip on me, letting me gently slide to the floor. I turn to face him, reaching up so I can pull him into a kiss. Instead, he smiles and grips my shoulders, spinning me around so I face the full, steaming tub.\n\n\"Not yet,\" he whispers in my ear. \"Let's get you bathed first. We have the rest of the day to destroy the room.\"\n\nStill slightly disappointed that I didn't get my kiss \u2013 one I think I deserve at this point \u2013 I stand quietly as he unlaces me from my dress. It comes off easily, gliding off my skin and pooling at my feet. The sudden rush of warm air makes goosebumps rise on my skin and make my nipples peak almost painfully. Icy hands press against my shoulders, urging me forward towards the bath.\n\n\"Come on, you. In.\"\n\nI laugh softly. \"Yes, sire.\"\n\nWe reach the bath quickly, although Lucifer's still pushing against my shoulders, trying to coax me in. Staring down at the steaming, crystal water, I really want to. It looks so good and inviting and perfect. But I also want Lucifer to join me. After our last adventure in this tub, bathing by myself seems lonely and painful and not nearly as fun.\n\nSpinning around, I successfully loop my arms around my husband's neck and pull him in for a kiss. Lucifer, while take aback slightly, smiles against my lips and kisses me back. I pull him tight against me, taking a step back so that the backs of my thighs press against the warm stone of the bath. His hands go everywhere, touching every inch of my skin in a slow, loving caress. It's delicious, almost addictive. \n\nI married this creature. Fucking score!\n\nI pull away just long enough to catch my breath. \"Join me?\"\n\nLucifer gives me a winning smile. \"You ask?\"\n\n\"Good.\" I give my own mischievous smile.\n\nI step back, pressing my legs hard against the smooth edge of the tub. It's enough to knock my body off balance, and the two of us collapse into the warm water below. We sink to the bottom of the tub, sending a tidal wave of water spilling onto the floor. I rise up, dragging a deep breath of cool air and laughing. Lucifer breaks the surface just inches away, sputtering and shaking his head to clear it.\n\nI swim to the far side of the tub, tipping my head over the edge and laughing so hard my belly starts to hurt. Out of the corner of my eye I see Lucifer is giving me a mix of annoyance and devilish glee. His wings are soaked, preventing him from taking off, so he's stuck here with me until we finish. The poor thing, although I don't think he'll mind all that much.\n\nSlowly, I regain my senses and reach out to him with my hands, begging him to come closer. He gives a wicked smile and launches himself from the other end of the tub, using his wings as breaks to slow down as he nears me. He glides toward me, stopping just inches away from my now heated skin. His wings, still soaking wet, lift and flare out over the tub, trying to dry themselves. Lucifer himself inches closer to me, stopping just short of pressing his icy body to mine.\n\nI pout and grab his shoulders, trying to pull him closer. He resists, holding so still it's almost like he's a statue. I pull my hands away and deepen my pout. I make my eyes as big and guileless as I can, hoping to play the sweet girl image enough that he'll finally give me some relief.\n\n\"What?\" I ask innocently.\n\nHis brilliant smile remains. \"That was a clever trick, Michelle. Almost cruel.\"\n\nI scoff playfully. \"I know. I'm so mean to you, aren't I?\" \n\nI lean forward, looping my arms around his neck and hauling myself up so my breasts are at his eye level. I can see the flicker of lust pass through those gorgeous amber orbs, and I decide to take full advantage of his weakness. I run my fingers through his soft, wet hair, pulling him closer so that his face is pressed against my breasts.\n\n\"You're right. That was very cruel of me,\" I purr. \"How can I ever make it up to you?\"\n\nHe's still for a moment, his face crushed against my breasts, his breathing shallow and his eyes closed. Finally he pulls away and rises up so he can look me in the eyes. I give yet another innocent smile as he creases his brow in concentration. His warm golden eyes flick to me, and a devilish smile crosses his lips.\n\n\"That last piercing you mentioned...\" he draws the words out torturously. \n\nI stop and think for a moment, my memory slowly coming back. \"On my clit? Yeah?\"\n\nHis smile widens an inch. \"After our bath.\"\n\nI pull back an inch, biting my lip in apprehension. I know that particular part of my body very well, and I know it can't take much of anything before it starts to hurt. The idea of having a slender ring of metal jammed through it isn't very appealing, but I did tell him about it as a means to solidify our bond. I've dug my own grave for this one.\n\nNice one, genius. Any more brilliant ideas you want to give him?\n\nI glance back to him. Lucifer is kneeling in the tub, staring at me with a mix of curiosity and worry. His wings have relaxed a bit, slightly folded against his back and soaking in the water. He looks honestly worried, but not surprised. I told him the first night we were married that I didn't like pain, so he knows how apprehensive I can be about things like this. Hell, it was hard enough for me to let him pierce me the first three times, so this will be extra difficult. \n\nI take a slow breath and stare at him. \"You promise to counteract the pain?\"\n\nHis smile returns with a vengeance. \"I promise. Your pick.\"\n\n\"My pick?\" I arch a brow at him, another smile replacing my nervous frown. \"I get to pick the way I've relieved?\"\n\nHe nods, his smile still plastered to his face. I mull my options over for a moment until I settle on the thing I want the most: my curiosity of being eaten out satisfied. I've never experienced it, though I've given more than enough bj's to have earned such an honor, so I'm dying to know what all the fuss is about. \n\n\"Fine, then.\" I straighten my spine and stare into his hypnotic eyes. \"You get to pierce my clit, and I get to have you devour me. Deal?\"\n\nHis smile nearly splits his face in half. \"Deal.\"\n\nGood.\" I hold my arms out a second time. \"Now come here. I've been stuck inside Leyna all day and I'm dying for you to tear me to pieces.\"\n\n\"My lady, I'm all yours,\" he croons. \n\nHe leans forward, pressing his chest against mine and forcing me back against the edge of the tub. I go willingly, almost hypnotized by the icy chill of his skin. I love it; it's cool and calming and oh-so-seductive. It's the physical version of cr\u00e8me Brule.\n\nMy back pressed against warm, smooth stone, I welcome his cold, loving embrace with abandon. It's wonderful to feel him against me again. His impossibly strong hands reach down and grip my hips, lifting my body off the bottom of the tub and suspending me in the water. I reach out and grip the edge of the tub for support. On land, I can flip, walk, run and kick ass. In water, I'm a rock.\n\nLucifer edges closer until his hips are directly under mine. He kneels in the tub and slowly brings my hips down to meet his. My ass rests on his legs while his cock presses against the cleft between my thighs. It's enough to make me shiver slightly, the anticipation inside me building into an inferno. My body is begging, nearly screaming for him; my mind is slowly losing itself. All for this fallen angel.\n\nDear god, what's happened to me?\n\nLucifer pulls my hips forward an inch, pressing his cock harder against me. I squirm and moan his name, begging him to stop his endless tortures and finally get down to business.\n\n\"I don't now, Michelle...\" his voice is low, playful and sinister at once. \"I'm still upset with you over that trick.\"\n\nI moan desperately. \"Lucifer! Please!\"\n\n\"Oh. Is my poor queen getting desperate?\" He laughs at my discomfort, pressing the head of his cock against my slit just to tease me. \"Perhaps you should have thought about this before dragging me underwater.\"\n\nAt this point, my body is so fired up I'm an inch away from spontaneously combusting. His teasing isn't helping much to quench the blaze. My mind is slowly beginning to unravel, steadily sending me into a lust-fueled haze of madness. I shake my head to clear it, glaring down at my impossibly beautiful husband. I scowl at him, part annoyance, part need. \n\nIf he can play games, so can I.\n\n\"Fuck me, or no more blowjobs. Ever.\" I growl.\n\nHis evil smile fades, replaced by a look of pained worry. I smile inside. I've hit his weak spot. As manipulative and cruel as he is, my bj's have the power to bring him to his knees. I'm fairly sure that going one week without me sucking him off will drive him nuts.\n\nHa! Gotcha.\n\nHe shakes his head, scowling. \"No ultimatums.\"\n\nI glare at him. \"Lucifer.\"\n\nHis eyes flick to me. \"None, got it? Or no sex for you. Ever.\"\n\n\"Come on!\" I groan, desperation starting to pool in my head.\n\nHe shakes his head. \"Promise me. No ultimatums.\"\n\nThe lust I'd been feeling seconds ago has been replaced by a severe case of annoyance. I love my husband and I still want him, but his attitude and games are getting under my skin. I've survived a night in Leyna's skin, dealt with Lilith and her shitty attitude and managed to claw my life back. And now, I'm stuck with a painfully seductive husband who's determined to play mind games for his own enjoyment.\n\nHonestly, I'm done for the night.\n\n\"Fine, then!\" I snap.\n\nI pull my hips back sharply, ripping them out of his grip. I glare at him and grab the sides of the tub and haul myself up. I swing my legs over the edge and hop off, landing gently on the slick tile. Cautiously, I spin around the tub and march towards the door, my body still starving but my mind completely fed up. \n\n\"Michelle!\" Lucifer calls after me, confusion and pain in his voice.\n\nI skid to a stop, glaring at him over my shoulder. \"No! I've been through ten tons of shit tonight. All I wanted was a bath, some good, hot sex and a quick piercing. And you can't even manage all of that without trying to fuck with me!\" \n\nHis eyes are a mix of confusion and irritation, as if I don't get his sense of humor. \"I was just having a little fun.\"\n\nI nearly explode. \"Then have fun with yourself! I'm going to bed!\" \n\nI resume my angered marching, my mind set on leaving him in that corner so he can think about what he's done. My body is still on fire, but my emotions are far too volatile to allow for any make-up sex. If Lucifer won't give me relief, I'll head to bed and do it myself.\n\n\"Michelle! Come on!\" He clambers out of the tub and starts to chase after me. \"Come back.\"\n\nHe closes in on me just as I pass through the door to the bedroom. On fury-fueled instinct, I spin around, grab the edge of the door and slam it closed. I watch as it comes within millimeters of smacking him in the face, but I'm too pissed to care. I spin again, storming towards the bed with new determination. My body is craving release, and I'm gong to have it with or without his help.\n\nI hear the door swing open behind me and smash against the wall. I do my best to ignore it, but a tiny spark of fear suddenly races up my spine. As angry as I am, Lucifer is an immortal with a legendary temperament. In a battle of pissed-off wills, he could crush me any day. That, and he's about fifteen times stronger than I am, so fighting back is a lost cause for me. I guess sex deprivation will have to do. ",
        "\"Michelle.\" His voice is low, threatening and deadly. \"Come here.\"\n\nI don't turn around, instead keeping my focus on the bed. \"Fuck you.\"\n\nOh, goody. Our first major fight.\n\n\"Michelle,\" he warns again.\n\n\"Stop it,\" I hiss back. \"I'm not in the mood.\"\n\n\"I don't give a fuck. Get back here.\"\n\nI don't give a fuck either.\n\nI make it to the bed, still furious. I flip the sheets back, hop into the cool bedding and yank them back up, rolling onto my side so I don't have to look at him. This is ridiculous \u2013 us fighting over sex and making ultimatums \u2013 but I've been through hell tonight and he doesn't seem to care. As hard as it is to admit, I can kind of see why God kicked him out of Heaven. He's gorgeous and intelligent and, at times, an amazingly loving person. But he's also got the attitude of a spoiled five-year-old mixed with an inch-long fuse. Not a good combination, and tonight I'm getting the full dose of Lucifer's tantrum.\n\nI smash my head into the pillow and glare at the wall. There's silence on his side of the room, so I close my eyes and try to force myself to sleep. It's always easier for me to deal with situations like this after a nap \u2013 it gives me a chance to cool off and regroup my thoughts \u2013 so maybe we can talk this out like adults after we've have a moment to breathe.\n\nI don't get my wish. My eyes still closed, I hear soft footsteps cross the room and stop at the edge of the bed. Seconds later, the sheets are pulled away and icy hands have grabbed my ankles. I cry out in surprise as I'm rolled onto my stomach and twisted so only my torso and head remain on the bed. My legs dangle over the sides, my feet barely able to graze the ground. Two loops of scorched black vines spring up from the floor and wrap around my wrists, pulling back so I'm held in place.\n\nI panic and struggle against my restraints, fear replacing any anger I once had. I knew pissing him off wouldn't be the best idea, but I never thought he'd actually punish me.\n\n\"Lucifer!\" I cry out, my voice filled with panic.\n\n\"You're queen now. It's time I taught you about respect.\" His voice is dark, almost malicious, tinged with an evil smile I never want to see.\n\nA heartbeat later, the palm of his hand comes down on one side of my ass, smacking me hard enough to go beyond the normal sting. I cry out, both in surprise and pain. I realize now that telling him I hated pain was a mistake. It's ammunition he can use against me if I get too far out of control. Or, if I don't do what he wants, it's a tool he has to get me back in line.\n\nA second smack, harder than the first, makes me cry out again. This isn't any playful punishment meant to tease me into submission. This is the real thing. He's pissed, and now he's got a way to take out his anger.\n\n\"Apologize,\" he growls.\n\nAnother smack, this time on the other side of my ass, catches me off guard before I can respond. My fingers dig into the sheets, still restrained by the vine-like restraints that hold them.\n\n\"I said apologize!\"\n\nAgain, before I can speak, he rains down two more hard smacks, one for either cheek. These are even harder, closer to abuse than punishment. Tears start to prick at my eyes, and I do my best to formulate the words in my mouth.\n\n\"Damn it, Michelle! Say it!\"\n\nAnother vicious smack causes my mind to short-circuit. I now realize his new game: he smacks me every time I try to say I'm sorry. In his fury-fueled mind, he doesn't actually want me to say it just yet. He wants to take out his frustration first, then we can start rebuilding out bond. He's probably so blinded by anger, he doesn't even realize how hard he's hitting me. Unfortunately, that doesn't make my situation any better, just more confusing.\n\nI'm starting to cry at this point, burying my face into the sheets to muffle my sobs. This hurts, and I start to question if our marriage will truly ever work. He's got a much more volatile temper than I do, and I'm probably the most insubordinate woman who's ever caught his eye. If this happens every time I mouth off, I may have to do the unthinkable and seek out a lawyer. On the bright side, I'm in hell, so finding one here should be insanely easy.\n\n\"Say it!\" He sends one more vicious smack and I break.\n\n\"I'M SORRY!\" I scream it into the air loud enough that people in Scotland are probably wondering who was yelling.\n\nI sink back into the bed, sobbing into the sheets. My ass is on fire from his brutal punishment, and I wonder if I'll even be able to sit down in the morning. I hear a sharp intake of breath and watch as the vines that had held me down free my hands and retreat into the floor. Released from my restraints, I roll onto my side and curl into a tight ball, still crying out my pain and fear. \n\nThe bed dips beside me and Lucifer's cold hand reaches out to stroke my shoulder. I flinch away involuntarily, still frightened that this might just be another series of tortures he's been waiting to dish out. Instead, his hand travels south, sliding around my waist and gently pulling me against him. When my shoulder blades touch his chiseled chest, his night-black wing swoops over and cloaks me in darkness again. The soft feathers tickle my skin, and his cool lips press into my hair.\n\n\"Oh, Michelle,\" he whispers, his voice hollow and cracking. \"I'm so sorry. I never meant to hurt you. I was just so angry that you didn't give me a chance to explain.\"\n\nWell, dumbass. Did you learn your lesson?\n\nI stay quiet, softly crying out the last of my tears. I know he never meant to harm me, but he did. I still love him with all my heart, but I've learned not to allow myself to be so angry at him. Walking away probably fired up his old fear of being abandoned, and my attitude probably set off his microscopic fuse because he thought I was challenging him. Stupid me. Justified, but stupid.\n\nWiping away any residual tears, I suck in a sharp breath and try to face him. \"I'm sorry.\"\n\nHe hugs me tighter, burying his face in my hair and stroking my arms. \"No, no, no, Michelle. I'm sorry. I should have never lost myself like that. I should have walked away like you did. I'm so sorry, Michelle. I just...you didn't deserve that. You never deserve anything like that. This was my fault. All my fault.\" \n\nWarm tears seep into my hair, calming my broken heart slightly. I sigh quietly in relief. He does care, and he does regret going after me like that. He just lost control, the fear and the anger overriding his reason and love. \n\n\"Forgive me,\" he pleads. \"Please.\"\n\nI nod, my heart mending itself quicker than expected. \"Yes.\"\n\n\"Thank God,\" he whispers. \"I swear to you on whatever soul I have left, I will never harm you again. I swear it.\"\n\nI manage a small smile. \"I promise. No more ultimatums.\"\n\nHe laughs into my hair, a sign of mutual relief and forgiveness. My heart has finally healed itself, allowing me to take a cleansing breath of sweet calmness. It's been one hell of a night \u2013 Leyna, Michael, this fight \u2013 but we've survived. I'm back home with my husband, Leyna and Michael are both gone, and the two of us have recovered from our first vicious fight. All in all, a successful day.\n\nStill lying in his arms, the chill of Lucifer's hands starts to rev my body up once again. That bonfire is back again, and my skin itches for a different type of sex: I want it slow and steady, something that will set me alight without breaking every bone I have. I want him again, a sure sign that I'm back to normal. \n\n\"I know how you can make this up to me...\" I whisper into the soft sheets.\n\nHe feverishly begins to kiss my hair. \"Yes, yes, of course! Anything.\"\n\nI smother my tiny laugh and gently take his cold hand in mine. I lead him down to my thighs, twisting his arm so his fingers slide between my legs and brush against my sex. It's just enough to make me twitch in yearning, and thankfully Lucifer is more than ready to play nice. He laughs into my hair again and takes the reigns, pressing his middle finger hard against my clit and spinning it delicious circles. I moan and close my eyes, savoring both the wonderful feeling of finally finding relief and of having my playful, loving husband back once more.\n\nI shiver against him, savoring the feeling of his finger twisting in and around my sex. His free hand reaches up to fondle my breast, making me bite my lip and arch my back. A hear another soft laugh and feel his cold hands start to work harder, his palm chilling my nipple to a solid point and two finger dipping inside my pussy. I moan softly and burying my face in the sheets and whispering his name. After his rough punishment, he's hell bent of proving himself to be a caring, dutiful lover again. \n\nHonestly, he's doing a great job proving his point.\n\n\"More,\" I whisper. \"Please more.\"\n\n\"As you wish.\"\n\nHis hands leave my skin for an instant, leaving me empty and begging for his comfort. His icy fingers return to my skin, gripping my hip to roll me over onto my stomach. I go willingly, anxiously waiting for him to render me breathless like he always does. He shift, kneeling behind me and grabbing my ass to pull me up and back, setting me in the same position that he'd used to claim my virginity.\n\nI'm nearly shaking out of excitement. He'd taken me this way on our wedding night, and it was fantastic. When he brushes against my ass, I can barely keep myself from screaming out my joy and rubbing against him. His cock brushes my thigh, ice cold and solid as granite. I bit my lip and anticipation. I lean back slightly, begging him silently to give me more, to tear me to pieces like I've been craving all night. He doesn't disappoint, laughing softly and pressing the tip of his cock against my sex, heartbeats away from ravaging me.\n\nSomething in my head clicks, snapping me out of my lust-fueled haze and turning the thinking part of my brain back on. My need is still bordering on desperation, but my body and my mind both want something more than just the basics I know. I want something different, something I'd never normally do.\n\n\"Wait,\" I plead, just in time to prevent him from bucking his hips and driving into me.\n\nHe stills, his hands lightly resting on my hips. \"What?\" His voice is soft, concerned that he may have done something wrong or that I'm having second thoughts.\n\nTruthfully, I am, but only in the way I want to do this. After that round of spanking, I'm craving my chance to be in control, to watch him squirm. I inch away and roll over onto my back, staring up at him with desire-hazy eyes as he watches my in inquisitive confusion. I smile and wrap my legs around his waist, pulling our bodies flush together even though we're still two separate beings for now.\n\nWith my legs locking me to him, I simultaneously arch my back forward and press my feet against the small of his back. The weight shift is enough to throw him off balance and he tumbles backward, falling into the bed as I'm hauled forward. I end up kneeling over him, straddling his hips and grinning down at him like a lunatic.\n\nHa! It worked!\n\nHe blinks up at me twice before a sly smile breaks onto his lips. His hands reach out and gently grip my hips, tracing my curves while holding me in place. I smile to myself and rise up enough to reach down and grab his cock in my hand. I help aim his body and ease myself down, savoring the sensation of him inside me again. This new position is wonderful, offering an entirely different way of feeling him as he slips inside. I close my eyes and bite my lip as I finally take the last inch of him inside me, settling down until my ass brushes against his thighs.\n\nI flick my eyes to his, watching his expression change from elated to fiery to expectant. He knows what I want \u2013 to have a tiny bit of control and to find my own pleasure - and he's more than willing to oblige. I lean forward and kiss him, jumping at the sensations of him rubbing me in completely new ways. I pull back a bit and smirk down at him, watching the flickers of lust dance in his eyes.\n\n\"My turn,\" I whisper. \"I'm going to ride you like a stallion.\"\n\nHe grins back, happier than a kid in a candy store. \"Ride away, cowgirl. Show me what you've got.\"\n\nI can't help my own smile. At last, some good, quality sexy-time with my husband. I brace my hands on his chest and push myself up. The movement makes his cock shift around inside of me, and I shiver. Damn it, that feels good! How I'm able to go an hour without dragging him into bed is a mystery.\n\nSitting back, I suddenly frown and stare at his sculpted chest. I've never ridden anything before, so I have no idea what I'm doing. My surprise may have been ballsy, but it's also screwed me into a corner. I stare at his golden flesh for a few more seconds until I finally close my eyes and give my mind a quick shake. \n\nBest guess, I suppose.\n\nTaking a deep breath, I rock my hips forward towards his chest, feeling his body brush against mine in a million different places. The action makes me quiver with delight, and I let out a shaky breath as I try to stabilize myself. I've figured out what to do; now I just need to find my rhythm. I sway backwards, feeling his cock move inside me again. Holy shit, this is fantastic! Even at a slow pace, I could get addicted to this.\n\nHaving figure out exactly what needed to be done, I start to rock my hips back and forth, finding a slow but steady rhythm that makes me groan and dig my nails into his chest. Lucifer reacts below me, moaning my name and closing his eyes as his back arches off the bed. I grin down at him like a fool despite my own rushes of pleasure. It's a small relief to finally have a few ounces of control. Not enough to dangle over him as a way to assert my tiny amount of authority, but it's enough to make me relax and show him that I'm strong in my own right.\n\nIf he'll tie me down and spank me on a bed, then I'll bring him to his knees.\n\nI toss my head back and close my eyes, letting my thoughts and rationality fly out the window. I'm tired, rattled and still a little upset \u2013 I'm ready to let loose and grab the bull by the horns. I'll worry about what happens to Lilith later. For right now, my body is craving release, and I'll be damned if that piece of shit will get in the way of me fucking my husband.\n\nOn instinct \u2013 and with my body screaming for more \u2013 I rock my hips faster, making small flickers of lightening race up my spine. It's wonderful, but I'm craving more. Taking a chance, I lean forward an inch, pressing the edge of my pussy against the base of Lucifer's cock. His flesh rubs against my clit, and I gasp in delicious surprise. It's the perfect amount of pressure, and exactly what I needed to wipe my mind clean of any stray Lilith thoughts.\n\nMy mind reeling, I barely register my husband's deep, resonating laugh. By the time my brain has recognized that he's laughing at me, his hands have already left my hips and are slowly working their way up my back. They press down slightly, slowly pulling me down against him. I push against his chest, tying to force myself back up, but his grip holds me down. I look up at him, his golden eyes shining in the light of the glow of the hellfire below us. \n\n\"Come here,\" he croons to me. \"You've made your point. Now relax and let me take over.\"\n\nI'm hesitant, bracing myself against his chest while my stomach brushes against his. My mind and body are warring inside my head, each trying to push the other's opinion aside and come out the victor. My mind wants me to reject his idea and continue riding him myself so I can solidify my stance as his queen and, more importantly, his equal. My body is begging me to collapse into his arms so Lucifer can take control and bring me to his usual mind-blowing climax.\n\nDecisions, decisions...\n\nLucifer rolls his eyes and gives a soft chuckle before pressing his hands against my shoulder blades and pulling me down. My hands seem to melt away and I'm pulled flush against him, my chest being crushed against his. He rolls his head to the side so I can nestle my cheek against his shoulder, and I fall into my childlike self as I nuzzle his cool skin. He laughs in my ear as his hands slide down my back to my thighs. The grip my legs and pull them forward, forcing me into a semi-hunched position with my torso flush against his and my legs pressing against the sides of his waist.\n\nLucifer presses his icy lips against my neck, making me shiver at the contact. \"Hold tight,\" he whispers against my skin.\n\nOnto what, exactly?\n\nI don't have time to ask. He bucks his hips upwards, driving his cock deep inside me with deadly precision. Unbeknownst to me, he'd pick this particular position not because it was a good transition from my earlier plan, but because it allowed him to grind against my clit and my sweet spot simultaneously. His motion renders me speechless, the pressure against both points nearly making my head explode. I let out a soft whimper and collapse against his chest, my bones melting under my skin.\n\nHe laughs in my ear again. \"There we go. That's not so bad now, is it?\"\n\nHe slams into me again, making me moan into his shoulder and grip the sheets hard enough to crack my knuckles. It's great, fantastic actually, and my body has no intention of letting this feeling pass. Involuntarily, my body clamps down on him, trapping him inside me so he can continue his delicious teasing.\n\nThankfully, he never stops. He resumes thrusting into me, the pressure making my head spin and my toes curl. His pace is achingly slow, but worth the wait. He gives me just enough time between bursts of pleasure to try to collect my thoughts, then slams into me again and destroys any progress I've made. It's meticulous, well-planned and debilitating. God, he's good.\n\nHis aim and determination render any rebellion on my part useless. I end up splayed out on his chest, my face buried against his neck as he continues to slowly but surely thrust into me. I whimper at every shove of his hips, my throat unable to allow anymore sound than a strangled gasp. He continues to laugh in my ear, reveling in his ability to take me from zero to sixty in half a second.\n\n\"Stop.\" I barely manage to whisper the word, my mind beyond hazy and my body on fire. \n\nHe freezes, giving my mind a desperately-needed moment of relief. I can think \u2013 and breathe correctly \u2013 again. I relax slightly, coming down off the high he'd created for me. My body is screaming at me, wondering why I would dare ask for him to stop that delicious pleasure, but I need to think. I need to breathe.\n\n\"Michelle,\" his hands tighten around me as he whispers my name.\n\nI catch my breath and swallow, clearing my throat. \"Please stop. No more teasing. I can't...\"\n\nHe chuckles again and crushes me against his chest, immobilizing me. \"Ah, I see. I'm driving you mad.\"\n\nYes, damn it. Now stop fucking around and finish me off!\n\n\"Alright. I'll let you go.\"\n\nStill pinning me against him, he bucks his hips hard against me, forcing a ragged cry from my throat. A stick of dynamite has gone off inside me, and I collapse against his chest again. He goes for gold this time, thrusting into me with the same amount of power but with far more speed. He's relentless, wanting to see me lose control like I always do.\n\n\"Dear sweet God,\" I whisper the words, my mind slowly melting away as my body takes the reigns.\n\n\"Not quite,\" he whispers back. \"I can lift you far higher.\"\n\nHe redoubles his efforts, slamming into me with the speed and force of a category five hurricane. I scream into his shoulder, the pressure building inside of me becoming too much to bear. Before I can prepare myself, my body erupts in a shower of sparks and gold. I scream again, digging my hands into the sheets as my body tenses and spasms involuntarily. Flames race up my spine as I collapse into him, my breathing ragged and my heart going fast enough to alert the CHP.",
        "Below me, Lucifer himself implodes himself. He's quiet through his eruption, but his hands digging into my skin give his weakness away. He groans finally and stiffens against me, unleashing a torrent of semen into me that leaks out of my body and soaks into the sheets. His body spasms below me, but we're both finally satisfied. I smile against his shoulder and stroke his biceps with my fingers. After all that effort, the man deserves a little relaxation.\n\nAfter several seconds, he stills below me, letting out a slow breath that devolves into a chuckle. \"Feel better?\"\n\nI nod against his shoulder. \"Much. You're very good at that.\"\n\n\"Glad you approve.\" He leans in and kisses my neck.\n\nKind of hard not to...\n\nI settle in against him, pressing my body flush to his and nuzzling his throat. It nice to feel him again and know that we've forgiven each other. As odd and blasphemous as it sounds, I feel more at home here than anywhere else. Honestly, though, he's exhausted me, and I feel my body slowly start to relax against his as my mind tries to switch into sleep mode.\n\n\"What now?\" I ask sleepily.\n\nHe sighs and stays quiet for a moment. As exhausted as I am, I secretly hope he'll suggest another round of furniture-smashing sex or a calming walk along the edges of the Styx that will let us clear our heads. Or a nice long nap.\n\nNap. Nap. Please say nap.\n\nHe sighs again. \"I suppose we deal with Lilith.\"\n\nFUCK!\n\nI scowl at the wall. Lilith is the last issue I want to work out right now. I've just had some great welcome-back make-up sex with my husband and recovered my crown from Leyna; I don't need superbitch ruining all my hard work. Without thinking, I let out an annoyed groan and squeeze my eyes shut, trying to block out the sound of her stupid laugh.\n\n\"I know.\" Lucifer whispers as he strokes my back faster. \"I'm not happy about it either. But it's something that has to be dealt with. She practically sacrificed you and turned her back on everyone here. That's an act that can't be forgiven or forgotten.\"\n\nI nod and give him a small kiss on his shoulder. He's right: the sooner we do this, the sooner she's out of the way. Still, she's got to know Lucifer's pissed at her, and I know she'll try to pull some sleight of hand to weasel her way out of her punishment. I just hope he can see through her tricks and put her in her place.\n\nBelow me, my husband stirs. He lifts his hips and slides his body free of mine, leaving me feeling suddenly empty and hollow. Groaning, Lucifer gently rolls me off of him, pushing himself upright and tapping my shoulder. I sigh and mirror him, now severely unhappy about being superheated from him and at the thought of dealing with Lilith. He runs his fingers up my spine and kisses my shoulder, then slips off the bed onto the floor, bending down to scoop up the heap of fabric that is my gown. He holds it out in front of him, grinning like a fool.\n\nI can't help but smile back. He's so childlike at times it's almost absurd. It's also very disarming, and it feels like his smile can break down any barrier I have and make me a thousand times more agreeable no matter how angry I am. \n\nI roll my eyes and slip off the bed, making my way over to him. He spins the dress around and holds it open for me. I grip his shoulders and step into the dress, spinning around so he can lace it up. As he pulls the velvet ribbons tight, I look down and rediscover that every last chain on the front of my dress is gone. The last two were pulled apart during my tempting of Michael, leaving every single inch of my cleavage open to view. The front panels still cover a good portion of my chest, but very little is left to the imagination now.\n\n\"Tarioc!\" Lucifer calls out as he laces me up.\n\nShit! Which one is that?\n\nI flip through my Rolodex of high-ranking demons, hoping that this one isn't high in the chain of command and that I haven't missed meeting him. I'd hate to make an ass out of myself now by forgetting to properly greet a powerful demon.\n\nTarioc. Wait a minute...\n\nI freeze, my breath catching in my throat and my heart screeching to a halt. Dear God, it's the creepy coachman! I almost collapse out of horror. That creature is living nightmare fuel, and Lucifer has just called him to our room. He'll be lucky to have me in the same room without cowering in the corner waiting for that fiend to leave.\n\nA quick succession of knocks snaps me out of my inner panic. Lucifer calls our guest forward, finally lacing up the last inch of my dress. The door swings open and Tarioc \u2013 in all his horrifying glory \u2013 strides into the room. He's still wearing his tattered top hat and formal coattail jacket, and his eyes are still that disgusting color of swamp water. He saunters forward, having an almost pimp-like swagger to his step. His eyes find mine, and he gives a regal nod and smiles gently.\n\nI barely keep myself from fainting.\n\nTarioc stops just feet away from Lucifer and I, executing a prefect bow and standing patiently for instructions. \"Sire?\"\n\n\"Tarioc, I need a favor,\" Lucifer's tone has switched from warm and loving to cold and commanding. \"Fetch Lilith and bring her here. If she asks why, tell her it's about her betrayal of our world and her disregard for the queen's well-being. If she tries escaping, take her down.\"\n\nTarioc nods again. \"Yes sir.\"\n\nLucifer places a hand on my shoulder. \"Be careful, Tarioc. You know her. She'll try anything and everything to get out of facing her punishment. Take her alive if you can.\"\n\nTarioc bows. \"Your will be done, sire.\" \n\nHe lifts his head and grins at me, showing two matching rows of rotten teeth and blackened gums. I fight the urge to vomit \u2013 this man is the living, breathing incarnation of meth-mouth. No wonder he's so highly respected here. He fits in perfectly.\n\nHis smile fades, then returns. He straightens and steps forward, reaching out so he can take my hand in his boil-covered hand. He lifts it to his mouth and places a gentle kiss on the back of my hand. On the outside, I look calm and compliant. On the inside, I'm screaming in revulsion.\n\nHe smiles softly at me. \"Your majesty. I know my appearance is unbecoming, but I promise you that neither my flesh nor my soul will do your harm. I look this way as a punishment for my own faults, but doing damage to one so kind and fair is not in my nature. I am here to protect and serve you, mistress, not harm you.\"\n\nIn the span of thirty seconds, I've gone from reviling this creature to actually liking him. He's the epitome of never judging people by their looks. Behind his horrid eyes and crumbling skin is the soul of a man suffering in eternal pain for his mistakes. He's loyal and honest, doing our dirty work without a single complaint or thought. I'm amazed by him, and I now understand why Lucifer holds him in such high regards.\n\nWell played, sir. I am impressed.\n\nI return his admission with a genuine smile. He grins back, showing more of his disgusting teeth. I respect him and like him now, yes, but he's still hideous.\n\nSatisfied, he pulls back and faces Lucifer again. \"The witch will be found, sire. I guarantee it.\"\n\nLucifer smiles and nods. \"Good. Be quick and harm her as little as possible. I want her alive to face her punishment.\"\n\n\"Sire.\" Tarioc bows again and steps back. An inky blackness bubbles up around his feet, forming a pool of liquid shadow. He sinks into it, his warm smile still plastered onto his face. Something about his smile makes the gears in my head start turning.\n\nIf he tells Lilith the truth, she'll never come.\n\n\"Tarioc! Wait!\" I step forward, hoping to catch him before he slips out of view.\n\nThe demon halts his descent, stopping just as the inky liquid reaches his waist. Hs smile has faded, replaced with a look of confused anticipation. \n\n\"Michelle,\" Lucifer croons in my ear. His arms wrap around me, holding me tight. \"He'll find her. Don't worry.\"\n\nI shake my head. \"I have an idea.\" I pull out of his embrace and race to the edge of the black pool that holds Tarioc. I gather the hem of my dress so I can kneel beside him, pulling the fabric back so whatever liquid he moves through doesn't stain my gown. I stare into his swamp-colored eyes, making sure I have his attention.\n\n\"Don't tell Lilith that she's being called back for punishment. She'll panic and make a run for it.\" I say, speaking loud enough for Lucifer to hear. \"Tell her that Lucifer didn't believe my story about Leyna switching bodies and killed me, but also killed Leyna out of confusion and anger. He's discovered his mistake and is inconsolable, and he needs someone to comfort him.\"\n\nTarioc's face has broken into an enormous grin. Out of the corner of my eye, I see my husband barely holding back his laughter. I'm glad they like my plan. It's a nasty trick I'm having them pull, but it's what Lilith deserves.\n\n\"Play up the fact that she continually warned him about me failing him. Feed her ego and make sure she knows that he needs someone to help him heal through this tragedy. She'll practically jump at any chance to take my place, so it shouldn't be hard to convince her too come with you.\"\n\nTarioc bursts out laughing and lifts a hand from the sticky liquid holding him. He grasps my hand again and kisses it a second time. \"An innocent beauty, but an intelligent one as well. Your majesty.\" He pulls his hand back and continues his descent into the pool of blackness. His top hat disappears beneath the surface, and the pool is drawn into the tile floor, vanishing with him.\n\nA split-second of silence follows, then Lucifer breaks into a round of breathless laughter. I turn around to see him splayed out on the floor, his wings flaring out around him, cackling hysterically.\n\n\"Is it really that funny?\" I ask, slightly nervous that he thinks my plan absurd.\n\nHe catches his breath and turns his head to gaze at me. A lunatic's grin is still plastered on his face. \"No, it's beautiful! It's just so perfect! She'll fall for it faster than a brick in the ocean.\"\n\nI blush shyly. \"Thanks.\" \n\nHe rolls onto his side and stares at me, a gleam of mischief n his warm amber eyes. \"Oh, Michelle. You never cease to amuse me. That mind of yours could destroy nations.\"\n\nOr bitchy women.\n\nI smile back at him, happy to know I've yet again solidified my place as a queen who can handle herself on and off the battlefield. If I can take out Leyna, then I can fight Lilith.\n\n\"Tell me about Tarioc,\" I speak without thinking.\n\nHis smile fades, switching to a look of thoughtfulness. \"What do you want to know?\"\n\nI hesitate, then shrug. \"How became the way he is. How he became your wingman.\" \n\nHe smiles and gives a soft laugh. \"Wingman.\" He rolls onto his back again and pats his chest, beckoning me over. \"Come here.\"\n\nLike a child about to have her bedtime story, I scramble over to him and curl my body up to his, resting my head on his chest. I'm honestly intrigued about our mysterious coachman. He's so dark and intimidating, and yet seems so broken and damaged. I want to know his story.\n\n\"Tarioc started out as a normal man, as most demons do. He wasn't an abuser of women or an alcoholic prone to bursts of rage. He was a living, breathing Don Juan.\"\n\nTarioc? A womanizer? Impossible!\n\n\"Even for Portugal in the eighteen thirties, he was quite the dashing young aristocrat. His hair was lighter then, and his teeth in far better condition. The son of a land-rich count, Adrian-\"\n\nAdrian?!\n\n\"-was known to be a bit of a womanizer and a gambler. He stayed away from alcohol, though. A nice, honest young man, but loose with his money and his cock. However, as many tragedies go, he happened to fall in love with the daughter of an inn-keeper. He was too far up on the societal ladder to ever consider marrying her, so he contacted me through a crooked monk and made a deal to have the courts change the romantic protocol of the day.\"\n\nI stay silent, listening intently. I'm stunned. Tarioc was the son of a count? And he lost it all because of a peasant girl? Honorable and romantic, but still stupid.\n\n\"I granted him his request and the engagement was made official, but the girl died before the wedding could be arranged. No, I didn't have anything to do with it. There was a nasty streak of cholera going around at the time and she happened to get hit. Blame Pestilence for that one.\"\n\nDamn. All that work and she dies on him. Poor thing.\n\n\"Anyway, with the reason behind his deal gone, I collected on his payment early. He was distraught after losing his fianc\u00e9, so he never resisted. All he asked was that I give him something to do while he whittled away the years here. He didn't mind going to Hell for making his deal, he simply didn't want to go mad out of boredom or desperation.\"\n\nI nod silently, my heart slowly starting to crack for this damaged, broken creature. He was never threatening or menacing. All he wanted was his poor girlfriend. My soul aches for him, and suddenly I'm no longer frightened of our dark traveler.\n\n\"It was one of the few times I felt pity for a human. He was so quiet and accepting of his fate. So kind and honest with me. It figured if he could be so calm now, he'd make a great servant later. He still had to hold up his end of the deal \u2013 he had to lose his dashing good looks that had captured and broken so many hearts \u2013 but other than that, he's got free reign here. He's proved himself indispensible a few times. He's an excellent tracker, and he can hunt down even the most grievous debtor within days. He's also very intelligent and a bit wise beyond his years. He managed to help us outsmart Gabriel and send him crying back to dad when he tried to steal a damned soul back. He's a good man, Michelle, and one of my few dear friends here.\"\n\nAww. That's sweet.\n\nI hadn't realized my husband \u2013 the bold, brash, unforgiving Lucifer \u2013 could be so sentimental. He'd memorized Tarioc's life story for all this time, and never once did he try to divert the subject when I asked. He seemed genuinely proud to know Tarioc. I turned my head and stared up at the delicately tiled ceiling, happy to know my husband does, in fact, have a soft spot somewhere.\n\nAs I stared up at the marble ceiling, my thoughts switched to our marriage. Honestly, I'd lost track of the time I'd been here. I was so busy kicking Leyna's ass and trying to be a good queen that I'd completely forgotten how long he and I have been legally bound together. It can't be more than a few weeks.\n\n\"Lucifer. How long have we been married?\" Maybe he's kept better track of the days.\n\n\"Five and a half months.\"\n\nWhat?\n\n\"That long?\" my voice betrays my shock.\n\n\"Yep.\"\n\nI'm stunned. We can't haven been married for five months! It barely feels like three weeks!\n\n\"But how?\" I turn to stare at him, begging for an answer.\n\nHe smiles down at me, running a hand through my hair. \"Time moves much faster down here. What feels like days to you is actually weeks. That's what makes the eternity part of punishment here so awful. One day will pass, yet the damned sense it as a month.\"\n\nI stare at him, dumbfounded. This place is more confusing that calculus, and yet he rules it as if it's the simplest form of equation. There's no stress for him here beyond traitorous succubae and escaping souls, so it should be easy for him. But for me, as an outsider, it's the most screwed up place in the world.\n\n\"Five small months,\" he grins down at me. \"Only an eternity left to go.\"\n\nI manage a small, honest smile. \"I don't think I'll mind that.\"\n\nA thunderous knock at the door snaps us out of our light mood. A quick succession of sharp knocks follows the first, indication that whoever is on the other side is annoyed and very impatient. Lucifer groans and gently pushes himself up, giving me time to haul myself to my feet before her rises to his full height. He reaches out with one arm and presses it against my stomach, forcing me back a few steps so I'm out of the way in case something goes wrong.\n\n\"Yes?\" His voice shifts from calm and soft to thunderous and unforgiving.\n\n\"Sire?\" Lilith's sickly-sweet voice comes wafting through the door, making my stomach turn and my blood boil. \"Tarioc sent me here. He said you weren't feeling well.\"\n\nA devilish smile crosses my husband's flawless lips. \"Excellent.\" \n\nHe turns to me and spins me around, gently shoving me towards the bathroom. I go willingly, knowing that for our plan to work I need to be hidden. We reach the doors quickly, and Lucifer opens it just enough that I can slide through. He closes it until only a crack remains, allowing me to stay hidden within the shadows while I watch.\n\n\"Stay here,\" he whispers. \"Not a sound until I beckon you.\"\n\nI nod and blow him a kiss. He grins and reaches out in the air to catch my invisible kiss, fisting his hand over his heart once he does. He spins around and heads toward the bed, spinning around once he reaches it and sits down on the edge. He takes a deep breath and cradles his head in his hands, his wings going limp against his shoulders.\n\n\"Master?\" Lilith calls out again.\n\n\"Yes.\" Lucifer answers, his voice shaky and broken as if he'd just been weeping.\n\nThe door cracks open a bit, and Lilith peeks around the door to scope out the scene, satisfied that I'm 'dead' and that Lucifer is heartbroken, she slips though the door and closes it behind her. There's a vicious smile on her lips, but it disappears after a heartbeat, replaced by a look of heartbroken empathy.\n\nIn true Lilith fashion, she's not dressed for the occasion. Supposedly I'm dead and this should be a sorrowful occasion, but she's all dressed up like she's going to a club. She's wearing a skin-tight floor-length ruby gown with braided fabric on the shoulders and an insanely deep neckline that stops at her bellybutton and shows way too much skin. There's a slit on one side of the bottom of the dress that reaches all the way to her hip. It shows every inch of her long legs and her ridiculously embellished six inch heels.\n\nFor Lucifer, this is a funeral. For Lilith, it's the Miss America pageant. \n\nLilith walks over to the bed, her heels clicking softly on the tile floor. She kneels down on the tile, placing a perfectly manicured hand on my husband's shoulder and giving him her best pouty-face. Lucifer keeps his face cradled in his hands, but his shaky breathing and cracking voice give the illusion of sorrow.\n\n\"Oh, master,\" Lilith purrs. \"I'm so sorry.\"\n\n\"I know.\" Lucifer responds, still sounding horrified and heartbroken.\n\n\"I warned you she'd be easy to lose.\" Her voice is soft, but there's a tiny hint of joy in it. \n\nLilith starts stroking Lucifer's back, an action that almost makes me go nuts and storm out of the bathroom. Somehow, I keep my anger and possessiveness down \u2013 great, now I'm the jealous one \u2013 and stay quiet, waiting for the moment Lucifer calls me in to join the show.\n\n\"Humans always are,\" Lilith continues to stroke his shoulders as she rubs my demise into him. \"They're fragile and uneducated about our world. It must have been painfully easy for Leyna to catch her. The bitch was always too ambitious for her own good.\"\n\n\"I killed her...\" Lucifer trails off, his tone heartbreaking and overwhelming.\n\n\"But not on purpose,\" Lilith counters. \"You were trying to protect her. She was simply in the wrong place at the wrong time. It was an accident.\"\n\nLucifer is silent for a moment, and I start to second-guess our game. Maybe he doesn't want to punish Lilith. Maybe he just wants to toy with her for a bit, then let her go. She is his favorite after all. My guts twists, hoping that isn't the case.\n\nFinally, Lucifer lifts his head from his hands. His cheeks are stained with dark rivers of wetness, the tears leaving black streaks on his skin as they roll down his face. His perfect lips tremble in pain as he stares aimlessly at the wall. My heart actually skips a beat in pain and pity. I know this is all an act, but my husband is doing a dead-on impression of a grieving husband.",
        "And the Oscar for Best Actor goes to...\n\nLucifer turns to look at Lilith, his expression still filled with pain. \"Kerion came to see me after I broke the news.\"\n\nLilith nods. \"As he should. He's a good friend of yours. Coming in your time of grieving is a good thing for him to do.\"\n\nLucifer nods and swallows. \"He told me he and Michelle had sought you out. They requested your help to deal with Leyna.\"\n\nLilith's face falls, her ocean-blue eyes slowly widening with shock. True, I actually told him what had happened, but hearing him say Kerion ratted her out is far more painful and believable. A slow smile crosses my face and I watch Lilith's charade slowly implode.\n\nLucifer is still staring at her with pained eyes. \"Why didn't you help her? She needed you. You could have saved her. You could have saved me.\"\n\nLilith's mouth drops open, and a soft, strangled sound escapes her throat. She knows her plan is falling to pieces, and I can almost see the gears in her head spinning as she tries to find a way to save her ass.\n\n\"Sire, I...\" she trails off, desperately seeking an escape.\n\nAlthough still sorrowful, Lucifer's expression shifts slightly to show his growing anger. \"You sacrificed all of us. You put everything we have in jeopardy. And for what? Because she was human? Because you hated her?\"\n\nLilith gives a nervous smile. \"Lucifer, please. She's just a human. She wasn't that important. The world still turns and people still sin. Just because she died doesn't mean we have to stop everything and grieve. We can all still move on and heal ourselves. And each other.\"\n\nDamn. This woman just doesn't give up.\n\nThe tears on my husbands face have dried and the dark marks have faded. His 'sorrow' has been replaced with anger, and he gives Lilith a wicked, malicious smile. \n\n\"Heal ourselves,\" he whispers. \"Oh, I know exactly how to heal myself.\"\n\nHe rises from the bed, standing at his full height as he glares down at Lilith. He flicks his fingers at her, beckoning her to stand. She does, swallowing loudly, as she rises to face my pissed-off husband. Lucifer smiles kindly at her, reaching out to cup her face in his hands. He forces her to make eye contact with him, his kind smile turning more malicious by the second.\n\n\"That kind of action \u2013 sacrificing the queen and our world...Oh, Lilith. It's not good. Not good at all. It's treasonous.\" He purrs the words at her, stroking her hair in his hands. \"There must be consequences for such deplorable actions.\"\n\nLilith is shaking in her skin, horrified that her betrayal has been revealed and that she's about to pay for it. Her lip trembles, and I almost hear see her mind nearly screaming for her to apologize and beg for mercy. But she won't. Her pride will never allow it.\n\n\"I have a surprise for you,\" Lucifer whispers. He turns his head towards me and nods, a warm, welcoming smile on his lips.\n\nI smile and nod, straightening my dress and making sure everything is in place. Gently, I push one of the doors open and step out into the bedroom, smiling triumphantly at Lilith. Her eyes go wide, absolute shock and horror crossing her beautiful face. She'd been banking on Leyna actually finishing me off, but here I was, her greatest enemy, standing just feet from her with a devilish smile plastered to my face.\n\nAh, karma. How I love you.\n\n\"No.\" She mouths the word, but no sound comes out. Her fear and anger have overcome her ability to speak, leaving her furiously mute.\n\nLucifer's fingers force her gaze back to him. His kind, warm smile still graces his lips, but there's a fire in his eyes that could melt stone.\n\n\"There must be consequences for turning against your own world and your masters,\" he croons, obviously taking pleasure in exacting revenge on my behalf. \n\n\"Sire...\" Lilith starts, making a last-ditch effort to save herself.\n\nHis smile never fades, and his fingers trail up her cheek, feeling her smoother, supple skin. \"I think we'll start by taking back what you treasure most.\"\n\nHis fingers press into her cheeks, leaving small dents in her skin. Slowly, faint trails of silver-tinged strands of black threads seep out of her skin and wrap around his fingers. They caress Lucifer's skin before sinking into his hands. As they crawl into him, I watch Lilith's face slowly become gaunt and pale. Her skin begins to shrivel and crack, her lovely face turning into a mask of old age and disgust as her youth and beauty are slowly sucked away.\n\nTake what you treasure most...\n\nOf course! Her beauty. She's a succubus, after all. She needs her hotness to seduce and kill men. Without it, she's out of a job. But that's not all my husband planned of when he thought of this punishment. Taking away her infamous good looks serves another purpose: her ego and self-worth depend on her being beautiful enough to corrupt the Pope himself. Without her beauty, Lilith will be reduced to a life of mockery and self-loathing.\n\nPoor thing...oh, wait...nevermind.\n\nAs much as I hate to see people suffering and in pain, Lilith deserves this. She's fucked me over and insulted me \u2013 and God knows how many other people - more times than I can count. She practically gave me the middle finger when I asked for her help to save Hell. And she tried to move in on my husband when she thought I was dead. The bitch had this coming from day one. It's hard to feel pity for a woman like that.\n\nLilith, for her part, just stands there and takes it. I don't know if it's because she's accepted responsibility and chose to take her punishment honorably \u2013 highly unlikely \u2013 or if she's too scared of pissing of my husband even more to try and break away. I'm almost convinced that it's option two. That's more her style.\n\nMoments later, Lucifer pulls his hands away from Lilith and steps away from her, a dark smile caressing his lips. Lilith crumples to the floor, her face and body now shriveled like a dried apple husk. Her eyes are large and hollow, her mouth thin and pale, her cheeks full of wrinkles and scabs. Her hair has lost its luster and hangs limply around her shoulders. The skin on her hands has receded to the point of showing her nail beds, her nails themselves chipped and yellowed. Her frame is now dangerously thin, the ruby gown pooling around her and hanging off her body. Her breasts are heavily veined and sagging. The once-smooth flesh of her arms and legs now hangs from her bony limbs in miles of folds and wrinkles.\n\nShe's hideous now \u2013 inside and out.\n\n\"There, now,\" Lucifer proclaims as he smiles down at her. \"That's the first part.\"\n\nLilith lifts her head to stare at him, fear, horror and despair swirling in her faded-blue eyes. \"Master?\"\n\nHis smile never fades. \"We still need to deal with your betrayal of my queen. You abandoned her \u2013 quite willingly, in fact \u2013 when she needed you most. Knowing you, Lil, you were probably begging for her death. You, from the very beginning, have never showed Michelle the respect she deserves. For that action, you will be stripped of you title as the succubus queen and will be placed into servitude for Michelle.\"\n\nLilith's eyes go wide. \"Servitude!\" She nearly spits the word, turning her hideous face to glare at me.\n\n\"Indeed. It's about damn time you learned your fucking place, little girl,\" Lucifer snaps right back.\n\nLilith looks at him again, confusion and panic marring her once-lovely face. \"But who will be the whore queen?!\"\n\nLucifer pauses for a moment, thinking. \"Mireena. She's intelligent, strong and can handle anything the girls could throw at her.\" He pauses again, spearing Lilith with his glare. \"She's also loyal and respects the queen. She's perfect for the job.\"\n\nLilith, her eyes nearly bursting out of her head, opens her mouth to protest. She stops, though, and pulls back, hanging her head and glaring at the floor. She knows that arguing with Lucifer any more will just get her into more trouble. She's already been sentenced to serve me, so her head must be ready to explode. Quietly, though very begrudgingly, she nods and accepts Lucifer's new plans for her.\n\nSmiling, Lucifer turns and strides towards me. I smile gently at him, happy he's put Lilith in her place but still pained to see anyone put in that position. Lucifer stops just inches away from me, staring down at me with a seductive smile on his lips. The chill of his skin makes me shiver and I reach up to loop my arms around his neck. He reciprocates by wrapping his hands around my waist and pressing his lips to mine. We kiss slowly but passionately, gently nibbling each other's mouths and tongues.\n\n\"Tarioc,\" he whispers against my lips.\n\n\"Sire?\" \n\nI peer over Lucifer's shoulder to see Tarioc standing in the middle of the room, top hat perfectly balanced on his head and a warm smile on his face. How did her get here so fast? More importantly, how did her hear my husband whispering his name?\n\n\"Escort Lilith to the Mitroria and have her changed into her servant's clothes,\" Lucifer commands between kisses. \"See to it that she's properly dressed and well informed of her new duties.\"\n\nTarioc smiles and bows. \"Sire. My lady.\" He spins and walks over to Lilith, placing a hand on her shoulder and squeezing it painfully. \"Let's go, Lili. Time for your first day at work.\"\n\nLilith doesn't move, though her eyes slide to me to give me one last withering glare. I stare back as Lucifer trails his lips down my neck, watching as the pool of shadow opens up around Tarioc and spreads to encompass Lilith's dress. The two of them slowly sink into the floor, finally disappearing with one last war smile from the coachman himself.\n\n\"Feel better?\" Lucifer straightens and grins down at me.\n\n\"Much,\" I answer honestly.\n\n\"Good.\" He pauses for a moment, his smile fading into a look of curious concern. \"You trust me?\"\n\nHis question takes me aback. After all the shit we've been through, after all the hurdles we've cleared, he asks if I trust him? Of course I do. He's funny and gentle and loving and more than willing to protect me. Besides the fact that he's Lucifer, why wouldn't I trust him?\n\nI nod. \"Yes.\"\n\nHis smile returns \"Good.\"\n\nHe pulls away and takes my hand in his, gently tugging me towards the door. I follow quietly, wondering what his sudden insecurity was all about and what he might have planned for me.\n\n\"Come with me,\" he whispers. \"I have someone I want you to meet.\"\n\nMy gut lurches forward. \"Who?\"\n\nHis grin widens an inch. \"You'll see.\"\n\nHe pulls me along, pausing only briefly to open the door to our room before resuming his quick pace. The door slams behind us as we make our way down the now-crowded hall. In the seconds before they see us, I catch hints of conversations passing between the demons.\n\n\"...yes, well she always was a brat. About time Lucifer...\"\n\n\"...Leyna? No! To the queen?\"\n\n\"I told you that bastard angel was trouble. Always trying to play with the master's toys....\"\n\nNews of Michael's arrival \u2013 along with Leyna punishment\u2013 has already made their way to the populous. It's only been a few minutes! God damn, news travels fast here. Still, there's no conversation about Lilith, so it can't travel that fast.\n\nA few demons look up and notice us, snapping to attention and nudging their friends to do the same. The hall, once filled with the sounds of gossip and laughter, is now deathly quiet as each demon bows to us. The silence is eerie, and I shiver slightly from being watched by so many eyes.\n\n\"Do they have to be silent?\" I ask quietly.\n\n\"No. they simply do it out of respect and fear.\" Lucifer looks over his shoulder at me. \"Why?\"\n\nI meet his gaze. \"It's unnerving.\"\n\nHe never stops walking, but his mind seems to pause for a moment. His eyes slide back and forth between the rows of demons surrounding us. He lifts his head, eyes facing forward, and straightens his wings.\n\n\"As you were,\" he announces to the crowd.\n\nThere's a deafening silence in the hallway, followed by a burst of noise. The demons resume their chatter once we've passed by them. They're all clearly relieved that they can talk freely again, as am I. The noise stops that horrifying silence from taking over.\n\nWe make our way down the hall, moving faster than usual. I manage to peek up at my husband and see a slight sly grin on his face. He's excited about something, though I can't imagine what. I run through the rolodex of demons in my head and can't come up with any powerful enough that he'd want me to meet. Mentally, I shrug and follow him closely, anxious to meet this mystery person he's so eager to drag me to.\n\nNear the end of the hallway, Lucifer takes a sharp left and pulls me down a pitch-black corridor. There's no candles, no sconces \u2013 nothing to light our way. But Lucifer seems to know exactly where he's going. He darts left and right, leading me through a black maze that I could never escape by myself. I grip his hand tighter, terrified of losing my grip and getting separated in this dark labyrinth. \n\n\"Lucifer,\" I gasp, frightened by the lack of light and sound.\n\n\"We're almost there,\" he whispers. I can hear the smile in his voice.\n\nWe make a final turn and pass through an enormous archway, spilling into the deepest, darkest part of Hell. We stand on a giant rock outcropping jutting out into the middle of the Fire Pits. The souls of countless sinners swirling around us at the flow along the flaming river Styx, screaming for a salvation that will never come. I stare down at them, pitying their fate but reminding myself that being here is their fault. There's nothing I can do to help them.\n\nAt the very edge of the ledge is a throne, made of twisted metal much like my own but far more sinister. The spikes are longer and sharper, the jewels encrusting the surface only black and red, the metal rusted and jagged-looking. Resting on one gilded armrest of the chair is a heavily muscled arm. The skin is the color of a starless sky and covered with thick veins that bulge and pulse. Long, talon-like claws stretch out from long fingers. They tap rhythmically on the metal chair, waiting for something.\n\nHoly shit! Who the hell is this?\n\n\"My brother,\" Lucifer calls out as he takes a step forward.\n\nBrother?\n\nThe talons freeze, the muscles in the arms tensing in anticipation.\n\n\"There is someone I want you to meet.\" Lucifer's smile has erupted into a wide, enthusiastic grin.\n\n\"Is that so?\" A deep, booming voice rumbles toward us, full of malice and intrigue. \"Who is it?\"\n\n\"Our queen, brother.\" Lucifer responds happily.\n\nThe voice lets out a deep, excited sigh. The arm shifts as the body attached to it rises from the chair. The chair itself is too tall for us to see the owner of the voice, so I wait anxiously for our guest to show his face.\n\nTruthfully, I'm not sure I want to meet this 'brother' of my husband. The voice alone has me scared to death, so I can only imagine what his actual form looks like. I take a tentative step behind my husband, using his immortal angelic body as a shield for my fragile human one. Quick, sharp steps echo across the rock, alerting us of our guest's appearance. He steps around the chair and turns to face us, a wicked smile crossing his lips.\n\nI nearly faint. This 'brother' of my husband is the actual physical embodiment of evil himself. Black-skinned, flame-eyed and all-around vicious-looking. His teeth are filed to razor points, making his smile a shark's grin. I'll admit he has a darkly handsome face, but it's much more sinister and malicious than my husband's. The flesh of his well-muscled body is covered in thick scars and striking designs of glowing gold. He wears a pair of plain black jeans and nothing else. His feet are covered in a sticky black substance that sizzles on the rock. The bright crimson of his eyes are offset by the darkness of his pupils, elongated and turned sideways like a goat's\n\nWell, I'm dead.\n\nOur dark guest strides toward us, the smile on his face widening. \"Ah, so this is our Michelle,\" his voice, deep and resonating, shakes me to the core. \"Prettier than I thought she'd be.\"\n\n\"You knew how she looked!\" Lucifer snaps playfully.\n\n\"Have a little patience with me. I'd forgotten how blessed she was,\" he snarls, his eyes sliding down to my very exposed chest.\n\nI take another step back, horrified that this is who Lucifer was so excited for me to meet. I don't like him staring at me. He's horrifying, certainly not the beautiful husband I'd come to love and cherish.\n\n\"Michelle.\" Lucifer notices my apprehension and reaches behind his back to grab my wrist. He pulls me around to stand in front of him, spinning me so that I'm facing his darker friend. His hands grip my shoulders and his lips brush against my ear. \"Meet my other half.\"\n\nI pause, becoming painfully confused. \"Other...half?\"\n\nHe nods. \"I'm a man created of many ideas. My father made me an almost identical copy of himself, but with free will and a mind of my own. I possess the qualities of both a kind, intelligent angel - \" \n\n\" - And a sadistic, playful demon,\" the other half finishes for him, giving me a wicked grin.\n\n\"A few centuries after dad kicked me out, the opposing sides of my personality split into two separate beings that shared one mind. The two of us-\" he motions to himself and his darker half, \"-are the physical incarnations of those sides. I'm the lighter angelic side; he's my darker, more malicious side.\"\n\nThe other half smiles proudly. \"Think of me as all your husband's evil thoughts and pent-up rage given form.\"\n\nI stare blankly at the darker half, still confused. So, technically I have one husband, but with two bodies? My mind stops turning for a moment, overheated from the amount of information passing through. Slowly, I manage to piece the puzzle together and my brain resumes its original movements.\n\n\"Michelle?\" Lucifer croons in my ear.\n\n\"Okayyy...\" I manage to breath again and respond too him. \"So...what do I call him?\"\n\nLucifer pauses for a moment. \"That's a good question.\"\n\nHis darker half shrugs. \"Just let her use it.\"\n\nLucifer snaps his head up to loom at him, curiosity in his eyes. \"You're sure?\"\n\n\"I don't really give a shit. With a rack like that, she can call me whatever she wants.\" He grins at me again.\n\nI shoot Lucifer a confused look. \"Call him what?\"\n\n\"Since the two of us are opposite sides of one person, we can't both be 'Lucifer'. He's the darker half, so you might as well call him Satan.\" He shrugs slightly. \"Normally, he hates that name \u2013 leaves a bad taste in his mouth. But apparently you've won him over.\"\n\nSadly, it fits him well...\n\n\"Oh.\" I turn to face Lucifer's darker half again. \"Alright then...Satan. It's a pleasure to finally meet you.\" I try to be cordial despite his obvious harshness, hoping I can start off on his good side.\n\nSatan smirks at me. \"Sweet. Maybe a bit too much. But very well.\" \n\nHe strides over to me, stopping just inches from my body. He takes my hand in his, raising it to his lips. Contrary to Lucifer's icy touch, Satan's flesh is red hot, almost uncomfortably warm. They really are opposites.\n\nSatan presses his lips to the back of my hand, his crimson eyes never leaving mine. \"It is a joy to make your acquaintance as well, my queen.\" \n\nWell, gotta give him points for trying.\n\nI give the warmest smile I can muster and curtsey slightly. His smirk widens an inch and he releases my hand. He steps away just as Lucifer pulls me back into his embrace. He holds me tight, standing completely still. I look up to see him staring off into space, a look of pure concentration on his beautiful face.\n\n\"Lucifer?\" I ask quietly, hoping to drag him out of his trance.\n\nHe remains silent for a moment, then inhales sharply. \"I think it would be good for the two of you to become better acquainted.\"",
        "Satan and I share a confused look, then turn back to Lucifer. Amazingly, he's managed to confound both his queen and the person he shares his mind with. I sigh to myself. Only my husband could do that.\n\n\"Meaning what?\" Satan asks, as curious as I am to know my husband's thoughts.\n\nLucifer snaps out of his trance and locks eyes with his darker half. \"You busy the rest of the night?\"\n\nSatan pauses for an instant. \"I have a meeting with Beelzebub in an hour, but nothing else after that.\"<br> My husband smiles softly. \"Good. Come by the room when you're done.\"\n\nA fresh look of confusion settles on Satan's face. \"What for?\"\n\nLucifer's smile widens, and he stares at his 'brother' intently. The bright gold of his eyes darkens to a deep burgundy and his pupils disappear completely. Concerned, I swing my head around to look at Satan. His eyes are the same dark red color and are also missing their pupils. I stare at them in panicked wonder.\n\nWhat the hell?\n\n...the opposite sides of my personality split into two separate beings that shared one mind...\n\nOh.\n\nThe answer finally clicks into place in my head. They must be sharing a thought. That's why their eyes are the same. I nearly smack myself for being so foolish. They share the same mind, but they must have the ability to pick and choose what thoughts the want to keep hidden. This clearly isn't one of those thoughts. Obviously, this is an image Lucifer wants to communicate.\n\nA few seconds later, I watch their eyes shift back their normal amber gold and crimson red. Apparently, they've finished sharing thoughts and have retreated back to their own minds. I'm slightly relieved. Seeing my husband go mentally blank like that makes me nervous, like I've lost him for a moment in time. I only hope he doesn't do it too often.\n\nContent, I turn to see Satan staring at his twin, a wicked smile crossing his face. It's menacing and hungry and excited all at once. And it's terrifying me.\n\n\"Oh, I like that.\" His smile widens another inch, turning hungrier by the second.\n\nLucifer smiles back, his grin decidedly less malicious. \"Glad you enjoyed it.\"\n\nStill grinning, Satan shifts his famished gaze to me. \"I may have to reschedule Beelzebub if that's what you're planning.\"\n\nLucifer shakes his head. \"Keep your appointment. Knowing Beelz, this is something that can't be missed. Join us after your meeting. We'll be waiting for you.\"\n\nA look of disappointment crosses Satan's face, but he recovers and nods quickly. He turns and makes his way back to his menacing throne. Lucifer loops his arm around my shoulder and leads me back towards the entrance to the main hall.\n\n\"Don't start without me!\" Satan calls after us.\n\nLucifer looks over his shoulder. \"Wouldn't dream of it.\"\n\nOn an instinct, I turn my head to see what's going on. Satan is standing beside his massive chair, looking back at us. His eyes flick down, then back up, giving me a quick once-over. He purses his lips for a moment, then turns and steps around to the front of his chair and settles into the hard surface.\n\n\"Undress her,\" he calls out. \"I want to get a good look at her.\"\n\n\"Will do.\" \n\nLucifer picks up his pace and we exit into the black maze we'd come through before. He takes his time going through the tunnels now, but he's just as assured of where's he's going. I cling to his arm, still terrified of losing him and getting lost in here.\n\n\"So...if you two are so closely connected, why do you live so far apart?\" I can't help my question. I'm seriously curious about this whole brothers-but-the-same-person thing.\n\n\"We have different talents that work in different areas,\" he answers. \"I'm a bit more diplomatic, he's more authoritative. Think of our world as one giant prison. I'm the guard you meet when you first come here and tells you how everything works. He's the warden that makes sure the punishments are carried out.\"\n\n\"Oh...Okay, that makes things a bit easier.\" He's got a point, though. Those two particular occupations fit their personalities perfectly.\n\nI hear his small laugh. \"I know. He's a bit more brash than I am, but I promise you he's just as loyal. You're his queen as much as you are mine, so there's nothing he won't do for you. He's just darker and a bit quieter than me. You'll get used to him.\"\n\nGod, I hope so. I'd hate for the two of us to have any major issues.\n\n\"How long have you two been split?\" I ask cautiously.\n\nHe thinks for a moment, calculating the number of light-years that have passed. \"A few millennia, at least. I can't remember exactly how long. Perhaps once man became 'man' and started to screw themselves over.\"\n\n\"Oh...\" I trail off, not sure how to respond.\n\nWe burst into the light-filled main hall, once again stuffed full of demons and succubae. I'm relieved to be out of that maze, and I'm honestly looking forward to hearing the endless chatter of the demons that surround us. It's almost a blessing compared to the deathly silence of that cavern.\n\n\"Come,\" Lucifer pulls me down the hall. \"I promised him we'd wait in our room.\"\n\nI'm gently dragged through a parting sea of demons, each bowing to us as we pass. They immediately resume their conversations once we're gone. Lucifer pulls my hand harder, anxious to speed me up so we can get back to our room.\n\n\"What exactly did you tell him?\" I ask, curious to know the thought they shared.\n\nMy husband grins over his shoulder at me. \"Something he'll love. I'll explain when we're back.\"\n\n\"Hey! But I-\" \n\nI'm cut off as Lucifer yanks on my arm, flying down the hallway with me trying desperately to keep up. I nearly lose my footing a few times, but I manage to regain my step before I end up being dragged across the floor behind him. I can't see anything out of place, but Lucifer is moving so fast I could swear there's a trail of fire behind us.\n\nWe reach the door to our room in record time. Lucifer pauses just long enough to haul the door open before dragging me into our bedroom and slamming the door behind him. I stumble slightly, trying to regain my balance after having to run so quickly. My husband's cold hands wrap themselves over my shoulders, holding me steady as I clear my head.\n\n\"You alright?\" His breath cascades down my back, making me shiver.\n\nI nod. \"Fine. I wish you wouldn't rush like that. It makes me dizzy.\"\n\n\"Ah, I'm sorry.\" He trails kisses along the back of my neck. \"I'm just excited.\"\n\n\"About what? You promised you'd tell me what the two of you were thinking.\"\n\nHe sighs. \"I thought it would be a good idea for him to explore you a bit.\"\n\nI spin on my feet, staring up at him with a mix of shock and confusion. \"Explore me how? What did you say?\"\n\nThere's a sly smile caressing his lips. \"A threesome would be nice, no?\"\n\nI'm stunned into silence. A threesome? With that thing? Even is Satan is technically his other half, I can't quite fathom sleeping with him. He's not my devilishly playful debonair husband, so any images of coupling with him make my stomach turn. I shiver inside myself at the thought of those clawed hands touching me. For Lucifer to suggest such a thing...if I had the guts to do it, I'd slap him.\n\nHis smile fades instantly. \"You don't like my idea?\"\n\nI shake my head. \"No.\"\n\nHis shoulders slump, and he looks almost hurt. \"Why not?\"\n\nReally? You have to ask?\n\n\"I just...\" I pause, trying to formulate my thoughts. \"He's so different from you. And we've just met. I'm not sure I'd be comfortable doing something so intimate with him this soon.\"\n\nIt's the most conservative I can keep it. As much as I'd like to scream that he's disgusting and scary and downright weird, I remind myself that dark creature is my husband's opposite half. Of course he knows how his other half looks, so yelling insults will only injure him. That, and I have to stay in queen mode. Losing my temper here and now will just make it worse.\n\nLucifer sighs and looks away for an instant. \"You don't like him, do you?\"\n\nI shake my head again. \"No. Not at all. I'm frightened of him. I can't tell if he'll be as playful and thoughtful as you are, or if he's just going to throw me onto the bed and do what he wants. I don't know if he'll accidentally hurt me. I've barely met him. I don't trust that side of you yet.\"\n\nI'm sorry, but I had to say it.\n\nI know what I've said probably hurts, but it's better than lying to him about it. At least now he knows my concerns. I won't have to dance around his questions or try and switch to another subject.\n\nHe sighs again and walks toward the bed, sitting down on the thick blankets and staring at the floor. \"I didn't know you were that uncertain of me.\"\n\nI'M SORRY! I'M SORRY! I'M REALLY SORRY! \n\nMy gut twists itself into a pretzel. Great, now I've wounded him. And just when the dust had settled and things were staring to get better. I chew my lip and shift on my feet, unsure of how I can fix this. A blowjob, while fabulous, wouldn't help anything. This is something that will have to be discussed.\n\n\"I didn't mean to hurt your feelings about this...\" It's the most honest start I can make right now.\n\nHe's silent for a moment, then looks up at me with a soft smile. \"I understand. He's a part of who I am on so many levels, but he's not me. You have every right to be concerned about his appearance or his behavior. He's the one giving me a bad reputation, so year concerns are completely reasonable.\"\n\nI take a cautious step forward. \"Lucifer...\"\n\nHe shakes his head. \"I told you, I understand. I know him. He won't be gentle or kind with you. You're as much his queen as you are mine, but he'll use and abuse you for as long as he can. I just thought it would be a good idea for you to get to know each other just once so you'd know who you were really dealing with.\"\n\nMy conscience and my heart are screaming at me to fall to my knees and apologize. Looking at him right now makes my soul crack a bit. This was incredibly important to him, and I've shot down any semblance of joy or hopefulness he has left. I scowl to myself. The devil isn't the only one who can wound people.\n\nNice work. Would you like to tell him he's an idiot and worthless, too?\n\nI sigh to myself and pick at my fingernails. I want to fix this, to make him smile again and know he's happy. But my fear and uncertainty are holding me back. Suddenly, my mind starts to race through all of the shitty things \u2013 Leyna, my mother selling me, Lilith \u2013 that I've survived here. I was afraid of everything, but I managed to pick myself up and kick some ass. My fear can get the better of me sometimes, but I'm not one to back down from something just because I'm afraid. Eventually, I'll psych myself up and charge at it with everything I've got.\n\nLike now?\n\nI take a long breath and walk over to him. Silently, I kneel down beside him on the floor, reaching out to hold his hands in mine. Lucifer swings his head around to stare down at me, a puzzled look on his beautiful face.\n\nI inhale quickly. \"I know this meant a lot to you, so I'm sorry if I did hurt you.\"\n\nHis smile returns for a moment. \"Michelle, its fine. I said-\"\n\n\"I'm willing to give him a shot,\" I cut him off before he can stop my change of heart.\n\nHe stars at me, shocked. \"You are.\"\n\nI nod shakily. \"I'm willing to give him a chance because it means so much to you. But I'm still scared of who he is and what he could do. I need you to promise me that you'll keep him in check once we start.\"\n\nIt's no longer a smile that graces his face, but a grin. \"He won't get too pushy, I promise. I'll keep him on a tight leash.\"\n\nI breathe a small sigh of relief. I've promised to give the unloved half of my husband a chance, mended his broken pride and managed to salvage his award-winning smile. Not a bad list for five minutes.\n\n\"So how long until we start?\" I ask quietly.\n\nLucifer shrugs. \"Not until his meeting with Beelzebub is finished. That could take hours.\"\n\nOkay, so I have time to breath and prep for this.\n\nAs relieved as I am that this won't start immediately, we still need something to do. Sex \u2013 at least until Satan arrives \u2013 is out of the question, and I'm hardly the type of person to sit around and stare at the wall for hours. I shift slightly, trying to get comfortable, the action causing the fabric of my dress to rub against my nipples.\n\nWait...\n\nOf course! How could I have forgotten? In an unparalleled bitchy move, Leyna removed my piercings while she still had control of my body. I have no idea where she could have hid them, and I'm desperate to get them back. They are mine, after all. That's what we could do!\n\nI stand quickly, excited to possibly find my mementos of bonding with my husband. I pull on Lucifer's hand, trying to urge him up off the bed. I'm not a hellion, so I can't imagine where Leyna could have tossed my rings. I'm going to need his help for this.\n\n\"Come on. I need your help.\" I pull his hand again.\n\nHe looks up at me, confused. \"With what?\"\n\nI scowl slightly. \"Leyna removed my piercings when she still had my body. We need to find them.\"\n\nHis eyes widen in recognition, and he rockets up from the bed. There's a look of excited thoughtfulness on his face, as if he's thrilled about finding my jewels but can't think of where to start.\n\nI let go of his hand and spin around, placing my hands on my hips as I survey the room. \"Okay, how do we do this?<br> Lucifer pauses for a moment. \"Leyna hated those piercings because they reminded her of you and your position. She wouldn't want us to find them, so she would have hid them somewhere we would never look.\"\n\nI chew my lip silently. \"So...maybe we start looking under things? Maybe she didn't really care about me not finding them as much as she cared about me never getting them back. If I can't reach them, I can't have them.\"\n\n\"It's worth a try,\" Lucifer sighs. \"I'll take the bed and the other heavier pieces.\"\n\nI nod. \"I'll start with the dresser.\"\n\nWe separate and head towards our respective hunting grounds. I start by flinging open the doors of the armoire and rummaging through the clothing. I pull out each piece, shaking then folding it and setting it aside so I know I've checked everything and don't lose my place. Behind me, Lucifer grunts as he shifts the bed to allow him better access. \n\nAn hour passes before I'm finished looking through the clothing. I've checked every single piece, even the sky-high stilettos that are shoved into my wardrobe, and I haven't found anything. I sigh and put everything back, double checking them one last time just in case I may have missed something.\n\n\"Anything?\" I call out as I hang an expertly embroidered corset.\n\n\"Nope,\" Lucifer growls, resetting the bed.\n\nI actually growl myself. I'm beyond annoyed that Leyna took out the few items that I can really consider mine, and now she's hidden them just to fuck with me. Damn that woman.\n\nI spin around and walk towards the bathroom doors, pushing them open and making a b-line for the tub. I take a quick glance inside the exquisite marble creation, disheartened hen I see that there's nothing but warm, clear water. I drop to my hands and knees and peer into the small space under the tub. Still nothing. I sigh and stand up again, my eyes scanning the entire bathroom. Besides the tub, there's only a beautifully carved sink and a solid porcelain toilet here. So unless Leyna flushed my rings, there's nowhere to hide them.\n\n\"Could she have dropped them down the sink?\" I ask, a bubble of anxiety starting to form in my gut.\n\n\"No,\" Lucifer yells back. \"If anything valuable or unusual gets dropped into the pipes, the demons in the Gluttony department would alert us immediately. It's been three days, so they must still be here.\"\n\nPhew. Crisis averted.\n\nI spin again, knowing that there's nowhere left to look here. I walk back out into the bedroom, my mind turning in ten directions, trying to find an answer. I see Lucifer standing at the edge of our bed, scowling at the floor in frustration. He's as annoyed as I am, but neither of us can think of any other place Leyna could have hidden my piercings. I copy him, glaring at the floor as I rack my brain for an answer.\n\nWait...the floor!\n\nMy head snaps up as an idea rushes into my mind. I spin and stare at my husband, hoping that my hunch is right. \"Lucifer, are there any false panels in the floor here?\"\n\nHe looks up at me, thinking for a moment before answering me. \"A few. One in each corner and one under the bed.\"\n\n\"Dou you think she could have hidden them under one of those?\" I ask excitedly.\n\nHis eyes start to light up. \"It's possible. She's a demon after all, so lifting one of the stone wouldn't be difficult for her.\"\n\nHopeful, I rush over towards him as he shifts the bed again. Pulling it away, he drops to his knees and digs his fingers into the thick grout lines between the block of marble. He grunts softly as he hauls the massive stone up and over. I stare silently at him, marveling at his strength and the way his muscles flex as he moves the rock.\n\nNo! Focus!\n\nLucifer heaves the rock to one side, and I kneel down beside the large hole. Moving quickly so my fear of the dark doesn't get to me first, I reach my hand down into the black abyss, feeling around the smooth rock for any sign of gold or gems. I can't find anything, but I feel around one last time before pulling my hand out, disappointed.\n\nLucifer's cool hand strokes my shoulder blades. \"We have four more to check. They're around here somewhere.\"\n\nI hope so...\n\nLucifer replaces the stone block in the floor, then stands up and offers his hand to me. I take it gratefully, letting him pull me up so we can continue on our quest. We move to the nearest corner and repeat the process again. Still, I find nothing. Lucifer replaces that stone and rubs my back, a look of apologetic ruefulness on his face. I give the best smile I can muster, happy to know he's trying to comfort me in this. Honestly though, I don't think I'll be content until we find my jewels.\n\nWe move on to the next corner. Lucifer lifts the rock out of the way again and I feel around in the darkness. Again, there's nothing inside, and I feel my confidence slowly slipping with each failed venture. I'm beginning to doubt my idea of Leyna hiding my piercings at all. Maybe she's jut destroyed them.\n\nA loud knock at the door pulls me out of my pity party. Lucifer looks up just as he drops the stone into place, a soft smile on his lips. His gaze shifts to me, his eyes warm and hopeful.\n\n\"We have company.\"\n\nUh oh.\n\n\"Come in,\" Lucifer calls out as he helps me to my feet.\n\nThe door swings open and Satan strides in, spinning around and slamming it behind him. He pounds the door once, setting the locks into place before turning to face us. His crimson eyes narrowing confusion as he watches Lucifer and I make our way to the next corner.\n\n\"What's going on?\" he ask, curious about or task.\n\n\"Leyna hid Michelle's piercings when they were switched. We're trying to find them.\" Lucifer lifts the next block as he speaks.\n\nSatan nods. \"Ah, yes. The bitch that started all the trouble. Her little stunt certainly got Beelzebub in a pissy mood.\"\n\n\"Really?\" Lucifer asks as he shoves the block aside. \"I didn't think the old man would get so emotional about it.\"\n\nSatan shrugs and makes his way toward us. \"Neither did I. Although, I'm not that surprised. The old codger despised that bitch, and he was practically singing praises of our queen.\"\n\nI reach in and search the hole as Lucifer turns to talk to his other half.\n\n\"I suppose that's a good thing.\" His hand strokes my back. \"Better you have him as a fan than a hater.\" \n\nI can't help my laugh. He's got a point. I may be queen now, but it's a good idea for me to keep Lucifer's head commanders on my side. Many kings have fallen because the people under them are upset. ",
        "I sigh and pull my arm out of the hole. Still nothing! I sit back and sulk, glaring at the floor. Where the fuck could Leyna have hid those damn things? We only have one last false panel to check. If my piercings aren't there, then I'm officially out of ideas.\n\nLucifer hauls the block back into place and helps me up. \"Damn it,\" he hisses.\n\nI sigh hopefully. \"One more.\"\n\nHe nods and heads toward the last corner. I follow sheepishly behind him, hoping with all my heart that my piercings are hidden under that block. If they aren't, I'll be heartbroken for having lost them and I'll have to go through that torture again.\n\nDear God, please be there.\n\nI kneel on the cold stone floor and watch as my husband lifts the block out of position. My heart pounding, I reach into the abyss and feel around the smooth rock of the hole. I gasp quietly and pull my hand back, a few tears starting to tell in my eyes.\n\nStrike five. We're out of options.\n\nI sit back on the floor, my tears escaping from behind my eyelids and dripping onto the floor. Lucifer sighs and replaces the block, a look of absolute heartbreak on his face. The last symbols of our devotion to each other are gone, hidden away in some unknown spot by an insane succubus with a grudge.\n\nMy tears fall freely now, and the tiles of the floor do their best to absorb them. Lucifer scoots over to me, looping an arm around my shoulders so he can pull me close. I lean into him, pressing my cheek against his chest as his cool hand strokes my hair.\n\n\"It's okay,\" he whispers. \"They're just rings. Nothing really important or damaging.\"\n\nI nod. \"I know. But still...\"\n\n\"Yes,\" he sighs. \"I know.\"\n\n\"I just...I just can't think of where else to look.\" I can barely force the words out through my tears.\n\nLucifer's hand never stops stroking my hair. \"Don't worry about it. We can replace them.\"\n\nAs apprehensive as I am to do that again, he's right. No one \u2013 besides Leyna \u2013 was hurt or injured because I lost my piercings, and we can always pick new ones to put in if we want. It sucks that they're gone since Lucifer took so much care in putting them in, but yes, they're just piercings.\n\nI wipe away a few of my tears and calm my breathing again. \"Yeah, it's just I can't think of - AH!\"\n\nI cry out and jump back an inch. Satan has magically teleported himself in front of me, kneeling only inches from my body. He leans in, his face so close to mine I can feel his hot breath on my skin. A sly smile graces his lips, and his goat's eyes are glinting with mischief. \n\nI swallow and steady myself against Lucifer. \"Hi.\"\n\nHis smile widens an inch and he reaches out, holding his closed fist in front of me. His clawed fingers unfurl to reveal three shining rings of gold and small black jewels resting in his palm.\n\nMy piercings!\n\nI'm stunned into silence. The fact that he's so close, holding my prized possessions just inches away from me, seems unreal. I almost think it's an illusion, but as I watch the gems sparkle in the light, I realize it's not. He's really holding my jewels!\n\nLucifer lets out a small cry of joy. \"Where did you steal those from?\"\n\nSatan gives a soft laugh. \"I managed to swipe them from Leyna's hiding place before any real harm could be done. She knew no one would check her body, so... \"\n\nAt this point, I'm so overjoyed to have my piercings back that I lose control. I launch myself from the floor, plowing into Satan and knocking him backwards onto the tile. In a rare moment of absolute joy, I kiss the darker half of my husband passionately, forgetting that I'm terrified of him long enough to express my gratitude. He tastes like exotic spices and leather - a nice combination, but not one I could get addicted to.\n\nI pull back after a few seconds, smiling proudly down at him. Satan grins up at me, reveling in his conquest on his twin's sheepish queen.\n\n\"That was for returning what was mine,\" I croon at him.\n\nHis grin widens, and according to the rock-hard lump pressing against my thigh, he's obviously imagining getting a good reward for being a good samaritan. Honestly, I think he does deserve a reward. Silently, I pull my hand back, hold my fingers steady, and swing as hard as I can. My smack echoes off the tile walls. Satan lies beneath me, his eyes wide and a glaring red mark slowly appearing on his face. Lucifer rests beside me, staring at me with a wild, frightened look in his eyes.\n\nI'm still grinning as I stand up, stepping away from Satan as I brush off my dress. \"That was for taking so damn long.\" \n\nI reach down and scoop my piercings from his hands, then straighten and make my way over to the bed. I pull down the bodice of my dress and begin to replace the rings back where they belong. It stings a little at first, but the knowledge that I have my prized possessions back makes the pain bearable. Behind me, I can hear Lucifer and Satan discussing my oh-so-brazen stunt.\n\n\"What the fuck-\"\n\n\"She has a point.\"\n\n\"She didn't have to slap me for it!\"\n\n\"Well...\"\n\nI smile slyly and shake my head. For two beings who are basically the separate personality traits of one person, they act more like distant cousins than twins. It's almost like listening to Michael and Lucifer duke it out. Really, it's hard to believe they're the same guy.\n\nI finally slip the last piercing into place and peer down at my newly-adorned body. The gold shines in the light, and the black gems sparkle and wink at me. I smile back. It's nice to have them in again. I feel whole now.\n\nSatisfied, I spin around to see both men on their feet. Lucifer is giving me a sly, you've-put-him-in-his-place-well-done smile, while Satan is refusing to look at me. I shake my head and laugh softly. They're almost like children sometimes.\n\nI mentally shake myself and swallow loudly. I know what the two of them were prepping themselves for, and the day of reckoning has to come sometime. It might as well be now. Id' rather get it over with than drag it out and have it hit me when I least expect it.\n\nAlright. Let's just do this so we can go to bed.\n\nI take one final deep breath and walk forward. As soon as I'm just inches away from both men, I reach out, take one hand from each, then spin and start dragging them towards the bed. They stumble at first, caught off guard by my sudden pulling, but then quickly gain their footing. The walk quietly behind me, holding onto me with their icy and fiery hands.\n\n\"Michelle?\" Lucifer asks curiously.\n\nI sigh again. \"Come on. We promised him a threesome.\"\n\nThere's silence behind me for a moment, then a rush of wind blows past me as Satan races forward and scoops me into his arms. My cheek is pressed against his scarred chest as he sprints towards the bed. Once we reach our bed, I'm unceremoniously dropped into the pile of blankets as Satan quickly strips himself of his pants. Lucifer is terrifyingly calm as he makes his way to the bed, smiling at me gently as he sits on the edge of the mattress. He leans in and kisses me on the cheek.\n\n\"I appreciate this. We both do.\"\n\n\"I know,\" I say, blushing. \n\n\"There!\" Satan tosses his pants aside, staring down at me as he rubs his hands together gleefully. \"Ready?\"\n\nNot really, but I'm stuck now.\n\nLucifer grips my arm and stand up, pulling me with him. He spins me around and carefully starts unlacing my dress. His warm breath spills down my shoulder as he peppers soft kisses along my neck. I close my eyes and lean my head back, making a true effort to avoid looking at my husband's darker half. I'm terrified of him, so I don't want to see his body. I really don't want to.\n\n\"Sex or piercing first?\" \n\nI swallow and try to calm my racing heart. \"Piercing. Let's do it now and get it over with.\"\n\nHe laughs against my ear. \"That's my brave girl.\"\n\nMy dress slips off my shoulders and pools at the ground. I blush furiously, aware that this is the first time my husband's darker half has seen me naked. As close as he is the Lucifer, I still feel slightly uncomfortable around him.\n\n\"Brother,\" Lucifer calls to his other half. \"The box of rings.\"\n\n\"Yes, sir,\" Satan sings and races off towards the wardrobe to retrieve the box.\n\n\"Come on,\" my husband whispers to me. \"This will only take a minute.\"\n\nI nod, though I'm still shaking from nervousness. Lucifer crawls onto the bed and beckons me forward. When I reach the edge of the mattress, he spins me around and pulls me onto the bed, holding me against his chest. His hands stroke and massage my shoulders, trying to calm me down. Fat chance of that. After experiencing the pain of my last piercings - and knowing just how sensitive the next target area is - I'm have second, third and fourth thoughts about doing this. \n\nI'm too late to back out now, though. Satan has found the box of piercings and is making his way back to us, a giant foolish grin on his face. I take one last hesitant breath and sigh. I'm stuck with doing this whether I like it or not. But as scared as I am, hopefully this will prove that I'm strong enough to take on any challenge Hell has to throw at me. If I can handle Lucifer's darker half, I can do anything. \n\nFinally, Satan reaches the edge of the bed and kneels down on the floor. He places the box of piercings beside him and looks up at me, still giving me that evil grin. Lucifer's cold hands slip between my tightly closed legs and gently force them apart. I whimper softly, frightened of how much pain might be coming, but acquiesce anyway. I've come too far to put up a fight now.\n\n\"Fuck,\" Satan whispers as he gets an eyeful of my body. \n\n\"I know,\" Lucifer smiles at him. \"Beautiful in every way.\"\n\nHis other half nods, taking one last long look at me before meeting my gaze. \"Which one should we use?\"\n\nI shrug and close my eyes. \"I don't care.\"\n\n\"Nothing outrageous,\" Lucifer chimes in. \"It's her first one there. Be gentle.\"\n\nSatan nods and opens the box of metal rings. He digs through it for a few moments, trying to find something that will adorn me well without being too painful. Finally, he seems satisfied with something and closes the box.\n\n\"This shouldn't do too much damage.\"\n\nI open my eyes and see him holding up his selection between his fingers. It's a thin curved barbell piercing with small blue glass beads at the end. I let out a relieved sigh. He's made a good choice with this one. It'll be enough to enhance any stimulation, but it's small enough that I won't have any permanent disfiguration. \n\nI take a sharp breath and nod. I decide that this is probably the best choice for him to have picked. If I deny him, he might choose something heavier and less discreet.\n\nSatan grins and shoves the box aside. Lucifer's hands holds my legs down, not forcefully or painfully but enough to make sure I don't escape. His darker half reaches down and picks up that damned silver needle, holding it close enough to my skin I can almost feel the heat radiating off it. I whimper again and jump back instinctively.\n\nLucifer rubs my shoulders again, kissing my neck to calm me down. \"It's alright. You'll be fine. It will only last a second.\" \n\nI nod and try to scoot back onto the bed. My body is still responding automatically, so I'm not in complete control. But I do my best to quell my nerves. I manage to stop my shaking and watch Satan with a semi-fascinated eye.\n\nThe demonic half of my husband smiles up at me, then refocuses on my body so he can work. He brings the needle close to my pussy, the heat from the metal warming my skin. I watch as he takes careful aim, tying to make sure he doesn't scar the most precious part of my anatomy. He holds the uncovered tip of the piercing next to my clit, waiting for the moment when he can slip it into place.\n\n\"Make sure you give her some relief after this,\" Lucifer chides his twin self. \"She's been through enough shit today and I've promised her a good introduction into cunnilingus.\"\n\n\"Have you now?\" Satan's smile widens into a grin. \"Perfect.\" \n\nHe takes one final breath to focus on his task, then flicks his crimson eyes up to meet mine. They're filled with hunger and elation and a tiny bit of malice. But mostly, they're filled with excitement.\n\n\"Deep breath, my queen.\"\n\nHe gives me half a second to inhale before ramming the needle into my skin. I scream and jerk my body back. Tears roll down my cheeks as my body burns in the worst way imaginable. This isn't the soft, sharp pain of my nipples or belly. He's hit the most nerve-packed part of my body and violated it mercilessly. Now it's crying out in pain and making me body betray my commands. Lucifer holds me tight, trying to calm me down with soothing words as my body aches uncontrollably.\n\nSatan moves quickly, removing the needle and inserting the piercing in one fluid motion. The cool metal takes some of the edge off, but it's nowhere near enough to bring me relief. I'm still crying as Satan pulls away, leaving my husband to deal with the aftermath. He picks up the box of metal and leaves to return it to the wardrobe.\n\nI slump into the bed, my tears falling onto the sheets. I'm incredibly relieved it's finished, but I can't quite get over the pain. It stings and burns and aches all at once. I really just want to curl into bed and cry myself to sleep, but I know there's far more to come than this. My usual defense mechanisms aren't an option right now.\n\nSoft, feather-light kisses tickle my shoulders and neck. Lucifer's hands stroke my thighs, trying to soothe an ache that's beyond his control.\n\n\"You did so well,\" he whispers against my back.\n\nI sniffle softly. \"Ow.\" It's all I can manage.\n\nHis hands leave my legs as he lops his arms around my waist. \"I know. I'm so proud of you. That's the last one, I promise.\"\n\nHe looks up as Satan returns to the bed, kneeling in front of me to inspect his work. He nudges my thighs apart so he can take a good look, making me feel like an insect under a microscope.\n\n\"No blood or any mess we should be concerned about,\" He says. \"Not a bad job for a first-timer.\"\n\n\"I told you to be gentle!\" Lucifer snaps at him.\n\nSatan whips his head up to glare at his other half. \"I can't help that. It's like getting punched in the balls. It's going to hurt no matter how slowly you do it.\"\n\nLucifer rolls his eyes and groans. \"At least soothe her a bit.\"\n\nSatan's scowl transforms back into his dark grin. \"With pleasure.\" \n\nBefore I have time to recover from my wounds, he moves. Within an instant, a soft, warm tongue is pressed against my sex, making me squeal and jump. It runs along my slit, causing my body to become traitorous despite my struggles. Again, Lucifer holds me tight, making sure I don't try to escape while I'm receiving my reward.\n\nAt this point, I'm not certain I want to flee. I've never been given any type of oral sex before, but I can see why so many of my girlfriends rave about it constantly. Once I've calmed down from the initial shock, that warm tongue starts to feel really good and my body responds automatically. I groan softly and inch my hips forward, trying to get a better angle. Satan chuckles quietly and obliges, pressing his tongue directly against my newly adorned clit.\n\nThe pressure makes me jump again, but this time it's out of pleasure, not shock or pain. His teeth gently pull at my new piercing and I moan. The alien pressure fades into a warm tingle that works its way up from my toes to my cheeks. It's beyond wonderful, and I wonder if I can have this exquisite torture put on my Christmas list for next year.\n\n\"Enough,\" Lucifer's voice breaks into my mind. \"Don't give her too much. We still have our own plans.\"\n\nWhat? So not fair!\n\nWith one last flick of his tongue, Satan pulls away and grins up at me triumphantly. I'm breathless and looking out into the world with hazy, unfocused eyes. My mind is still spinning from the events of the last few hours. First Leyna is shipped off to her death with Michael and Lilith's ass got tossed into the pits, then I meet my husband's darker half, and now I've just received my first genital piercing and oral session. What a day.\n\nI'm shifted suddenly as Lucifer slips out from underneath me and pulls me backwards until I'm laying across the bed with my feet hanging over the edge. My head leans over the opposite side of the mattress, leaving my body open and exposed.\n\nLucifer slips off the bed and kneels down beside my face, pulling my hair out from under my back so it spills onto the floor. He smiles at me, stroking my neck and cheek as me moves.\n\n\"You agreed to this.\"\n\nI nod and take a shaky breath. \"I know.\"\n\n\"Any preferences?\" His golden eyes shine as he asks.\n\nI give him my confused face, not understanding his question.\n\nAn embarrassed smile comes across his features. \"Oh, that's right. I didn't explain this to you. The two of us had planned for you to suck one of us off while the other takes your body.\"\n\n\"Oh,\" I whisper. \n\nHow romantic. Will there be rose petals and candlelight, too?\n\n\"Do you care which one of us does what?\"\n\nI pause for a moment, considering my options. Personally, I consider giving any type of oral sex more intimate than regular coupling. Even though he technically is my husband, I'm not comfortable enough with Satan to share something I feel is sacred.\n\nGod, it feels weird calling him that.\n\n\"I'll take you,\" I tell him.\n\nHis smile could melt the poles. \"You've made my day.\"\n\nI smile at him as he stands up. I'm left hanging for a moment, staring at his tattered jeans. I can only hear their conversation. He turns slightly, waiting to address his other half.\n\n\"She wants you there. I get her mouth.\"\n\n\"Perfect!\"\n\nLucifer steps around so the zipper of his jeans is level with my eyes. I swallow loudly, more afraid of what's going on at the other end of the bed since I can't see. My husband's cock doesn't frighten me at all. But I am worried that his darker half might not be so gentle or caring when it comes to my fragile human body.\n\nLucifer reaches down and unzips his jeans, freeing his engorged erection and letting it hang temptingly in front of my face. Below, I feel Satan's rough, clawed hands slip under my hips and raise my body off the bed. His own warm cock presses against my inner thigh, the tip brushing my still-sensitive clit. I flinch instinctively, my body reacting to my inability to see what's happening.\n\nLucifer slips his own hand under my head to support me, stroking my hair between his fingers. He smiles down at me, the excitement and elation obvious in his giant grin.\n\n\"You'll be fine. I'll make sure he doesn't go crazy.\"\n\nI nod, then look at him worriedly. \"You're okay with this?\"\n\nHis smile falls into a look of pure confusion. \"Yes. Why wouldn't I be?\"\n\nI swallow loudly. \"You're not going to consider this adultery or anything, are you?\"\n\nHe freezes, then bursts out laughing. \"Of course not! It's not cheating when it's with your own husband, no matter which half.\"\n\nI let out a relieved sigh. Thank God. I know Lucifer would never pull such a trick on me, but it's certainly not below him to do something similar to others in the waking world. He didn't get his reputation for being fair and honest.\n\n\"Just relax, will you?\" he chides gently. \"You're fine.\" \n\nHe looks up and nods to his twin. My body shifts again, and I feel the thick head of Satan's cock press against my entrance and slowly slip inside. I whimper one last time, the inhale deeply and close my eyes, trusting my husband to keep me safe. Lucifer leans forward, pressing his own cock against my lips. I block out what's happening at the other end of my body and open my mouth willingly, letting him slip inside. I'm comfortable with this, so maybe giving a blowjob will help take the edge off.\n\nHe tastes just a delicious and indescribable as always, and being in my comfort zone helps the rest of my body relax. A few second later, Satan has sheathed himself inside me, much thicker than the body I'm used to taking. He's heavily veined and almost ribbed along his entire length. It's not a bad feeling, just odd for my slim body to accommodate such a large intruder.",
        "Lucifer strokes my neck and shoulders as he smiles down at me. \"Just relax your body. We'll do all the work.\"\n\nI try to nod, but end up just staring at him and breathing heavily. I relax my jaw and close my eyes and his fingers slip around to cup my chin. He pulls his hips back slowly, giving me a chance to get used to the feeling of not being able to move. He pauses just long enough for me to breathe before sliding back in.\n\n\"You alright?\" he asks.\n\nI take a breath and try to mumble a response. Yes, I'm fine. A little uncomfortable and uneasy, but fine. He grins down at me, stroking my hair one last time.\n\n\"Good girl. Just stay calm and try not to bite me.\" He nods to his other half, signaling the start of my torture.\n\nTruthfully, it's amazing. The incredible taste of my husband \u2013 which, for some reason, turns me on every time without fail \u2013 mixed with the wonderfully rhythmic thrusting of Satan's cock makes for on hell of an experience. With every buck of his hips, my newly pierced clit gets rubbed and stroked with deadly precision, making my body spasm and jerk. Lucifer does his best to keep a slow, even pace so I can breathe freely. His balls swing freely, brushing against my nose with every push of his hips.\n\nHoping to ease my nerves, Lucifer's hands slide down my neck to my chest and start gently kneading my breasts. His cold hands cause my nipples to harden, which makes them rub deliciously against his palms. I moan, relaxing into the bed as he continues his wonderful teasing.\n\nMy first orgasm comes as a surprise. One rough stroke along my clit sends a bolt of lightening racing up my spine and causes fireworks to go off behind my eyes. I stiffen automatically, barely able to keep myself from clamping my teeth together. Both men pause as I climax, giving me a little time to enjoy myself. Ripples of pleasure roll through me as I lay back down, breathing heavily and my heart racing.\n\nLucifer laughs as he strokes my cheek. \"Easy, there. We're not even half way done with you.\"\n\nI force myself to swallow and relax my body again. Lucifer smiles and starts moving his hips again, again taking his time to make sure I don't choke. His twin starts moving too, resuming his delicious thrusting. My body reacts again, bucking and twitching with every wonderful motion. Lucifer's attention on my breasts resumes, making me actually start to enjoy this stupid game of theirs. \n\nAgain, it's wonderful...at first. The rhythm and pressure are exhilarating, and I honestly start to relish this unique coupling. If we did this on a weekly basis, I don't think I'd really mind it that much.\n\nUnfortunately, as I feared, Satan starts to lose control. His thrusts become more vicious and erratic, and the pleasure starts to morph into a dull ache. I'm still technically human despite my new immortality and position, so my body can only take so much of his demonic power. I groan softly, trying to voice my discomfort as best I can. Neither man hears it though, and the uncomfortable pressure continues.\n\nMy bad luck is bound to continue, especially with my clit being so sensitive now. Satan bucks a little too hard and fast, and I squeal again, trying to let Lucifer know I'm not happy. His darker half thrusts again, scraping his shaft roughly across my hypersensitive clit. It hurts, and I arch up off the bed as tears roll down my cheeks.\n\nThankfully, Lucifer notices this time and stops thrusting into my mouth. He leans forward and growls, and I hear a loud smack echo around the room. Satan stops moving as well, giving me some much-needed relief.\n\n\"I told you to be gentle!\" Lucifer hisses, his voice dark and angry. \"Damn it, she's still human!\"\n\nThere's a vicious growl at the other end of the bed, but neither man leaves his spot. I'm relieved, though. Although a little late, Lucifer did hold up on his word about keeping his other half under control. Now, if we can just keep things at an even pace, all three of us should be alright.\n\nA few second later, Lucifer leans back and looks down at me, a soft apologetic smile on his lips. I try to nod again, flicking my eyes down then back up at him, silently asking him to keep a close eye on his twin.\n\nHis smile lightens a bit. \"Don't worry. I'll keep him under control.\"\n\nI take another cleansing breath and close my eyes again, putting myself and my body's fate back in my husband's hands. There's a split-second pause \u2013 no doubt Lucifer giving his other half the evil eye \u2013 then the motions begin again. This time, Satan keeps his steady, gentle pace and Lucifer resumes his easy thrusting. I'm able to relax again, and I sink into the bed as waves of pleasure roll through me.\n\nOnce again, I'm assaulted by an unexpected orgasm. My back strains off the bed, and a fresh blast of fire rushes through my veins. Somewhere in the distance, I hear a low growl and feel Satan's clawed hands dig into my skin. His body bucks hard against mine, then he stills as he unloads his seed into my body. It's burning hot, but I take it begrudgingly, knowing that pleasing him will make Lucifer happy.\n\nFor his part, Lucifer is gentle even in the last few seconds of his assault. He moves fluidly but softly, giving me time to breathe and make myself comfortable. His fingers twist into my hair as he finds his own climax, thrusting deep into my throat as he groans and loses himself. His warm semen spills into my mouth and I drink it down as best I can. Thankfully, it's as inhumanly delicious as before, so I have no qualm about this part. \n\nSeconds later, he relaxes and slips free of my mouth. I swallow the last few drops of his seed and inhale deeply. All in all, that wasn't bad, but it's not something I'd ever want to do on a daily basis. If it wasn't for his twin's loss of control, I would be walking away from this much happier\n\nLucifer slips his hands under my shoulders and eases me up into a sitting position, letting me lean my head back against his chest as I recover. I moan softly and close my eyes, relaxing against him as the chill from his skin cools my exhausted body. I open my eyes again as see Satan leaning against one of the bed's wooden spires, breathing heavily with a giant grin on his face. His crimson eyes flick to me, narrowing in lust.\n\n\"Round two?\" he asks maliciously.\n\nOh dear God, no!\n\n\"No,\" Lucifer snaps, his fingers combing my hair again. \"You've had enough for today.\"\n\nSatan straightens his spine and glares at his twin half. \"What? So now you're rationing sex with our queen?\"\n\n\"Until you learn to control yourself around her, yes,\" Lucifer hisses back. \"When you've shown me that you can play with her without doing any harm or losing control, then I'll let you have free rides all you want. Until, then, you're done. Out.\"\n\nHis twin's eyes widen in outrage for an instant, then narrow again in anger. He doesn't argue, though he looks ready to launch himself at us. He inhales deeply, then glares at us one final time before turning and walking away. He storms towards the door, grabbing his pants from the floor before flinging it open.\n\n\"Don't expect any favors from me after this!\" he shouts.\n\nLucifer continues to stroke my hair. \"I never have.\"\n\nSatan growls in frustration and slams the door. The force shakes the ground and makes the bed rock a bit. Once he's gone, I let out a relieved sigh. Thank God he's finally gone. Between his attitude, his viciousness and his lack of control, I'm not sure if I could stand being near him for another minute. I'd be fine if I didn't see him against for a few years.\n\nCool lips press against my shoulder, bringing me back into the real world. \"I apologize for him. That part of me has never taken rejection well.\"\n\nI shrug. \"It's fine.\"\n\nHe laughs against my shoulder. \"I'm sorry. That didn't work out as well as I had imagined it.\"\n\nI give a soft laugh myself. \"No, not really.\"\n\n\"Are you alright?\" he asks, nuzzling my shoulder.\n\nI nod. \"A little stunned and sore, but I'm fine.\"\n\nHe sighs. \"I'm going to have to do something pretty amazing to make up for this.\"\n\nMoving slowly, I turn around to face him. His eyes are bright and playful, but his smile is broken and embarrassed. I reach out and cup his face in my hands, running my thumbs along his exquisite cheekbones.\n\n\"You don't owe me anything. You were just trying to experiment.\"\n\n\"Yes, but my experiment went horribly wrong.\" His eyes soften a bit. \"I feel the strange need to make it up to you.\"\n\nI can't help my grin. \"Awww. Is the great king of demons suddenly feeling a little guilt? Could it be that he does have a heart?\"\n\nA dark smile graces his lips. \"Careful.\"\n\nI shake my head and lean in to kiss him. \"You. Owe. Me. Nothing.\"\n\nHe accepts my kiss, but pulls away too soon and looks at me desperately. \"Please? I love you, Michelle, but this feeling of guilt is uncomfortable. I've never liked it. Let me try to make this up to you before my black heart shrivels up out of confusion and pain.\"\n\nI throw my head back and laugh. He's certainly got a way of explaining things. I collect myself and look at him again, nodding as I try to stifle my laughter. He grins, kissing me on the cheek before slipping off the bed and making his way towards the middle of the floor. I spin around and watch him carefully, crossing my legs on the mattress and leaning my elbows on my knees.\n\nWhat's he up to?\n\nHe stops, pausing as if thinking of something, then turns and walks back towards me, pulling me off the bed. \"We'd better get you dressed. The surprise I have for you might not enjoy seeing you naked.\"\n\nWhat's that supposed to mean?\n\nI nod and wait patiently as he crosses the room and picks up my dress. He carries it back and holds it out for me, letting me use him for support as I step inside. I spin and stand still as he laces me into my dress. The cool fabric rubs against my pierced nipples, making me feel more at home than I've felt in years. Once I'm tied in, Lucifer motions for me to sit on the bed. He waits until I've found a comfortable spot before turning around and walking back across the floor.\n\nLucifer stands in the middle of the room, his face turned upwards and his eyes closed. His hands hang at his sides, his fingers twirling in the air without reason or pattern. His lips move slowly, mouthing silent words in a language I can't begin to understand. Golden eyes flick open and stare at me, a soft, warm smile playing on his lips.\n\n\"I want to give you closure, if that's alright,\" he calls to me. \"A little something to redeem myself by.\"\n\nClosure?\n\nI stare at him, dumbfounded. What would I need closure for? Leyna's gone, Lilith's being tortured and mom's under my command. What could I possibly need a therapy session for?\n\nLucifer smiles at me again, then turns his head up towards the ceiling and continues his incantations. A circle of black fire appears in front of him suddenly, enclosing a small marble block in inky flames. As Lucifer continues chanting, the flames grown, reaching up to the sky until they're nearly seven feet tall. The flames are solid and pitch black, making it impossible for me to see what's behind them. With a final line of chants, Lucifer drops his head and steps back, watching with me as the flames disappear and reveal my gift.\n\nThe circle of fire sinks into the tile floor, leaving its occupant standing in its place. A tall man, with light brown hair, hazel eyes \u2013 my eyes - and a warm smile stares back at me. His jeans and flannel shirt and ripped to shreds, and there's huge smudges of clotted blood streaked across his face. His grease-streaked hands are shoved into his pockets, and he leans on one leg like a cowboy. His cheeks dimple with his grin, and his eyes shine in the light.\n\nMy jaw hits the floor and my throat closes up. Tears well in my eyes and my heart nearly stops. I lose my ability to breath for an instant, my brain shutting down completely as shock settles in. \n\nIt can't be...\n\n\"Dad?\" I whisper.\n\nThe man's grin widens. \"Hey there, 'chelly girl.\"\n\nI cry out and pull back, cupping my hand over my mouth. It is my father, the man I loved and adored and who was taken away from me so suddenly and violently. Tears flow down my cheeks, painful, heartbroken tears that render all my strength useless. I sink into the bedding, crying for reasons too painful to explain or understand.\n\nLucifer walks quietly over to me, looping his arm around my shoulders and pulling me against his chest. His cool hands rub my skin and run through my hair, calming my heart and soothing my soul a little.\n\n\"Your mother sacrificed him to gain power. She never gave you the chance to tell him anything,\" he croons in my ear. \"I called him down for you. I wanted to redeem myself to you and give you what your mother never could.\"\n\nI manage to calm my crying enough to look up at him. His glorious smile almost burns my eyes, and this rare act of kindness tears at my heartstrings. He's too beautiful and loving to be real, yet here he is. All glory and heart and love, despite what Michael may say.\n\nHe presses his palm against my back, slowly inching me off the bed. My lip trembles as I watch him, still stunned that a creature so dark and sadistic could be this generous.\n\nHe keeps nudging me forward. \"Go say goodbye.\"\n\nI nod and slip of the bed, trying to keep as much decorum and poise as I can. Unfortunately, once my feet touch the floor, my queenly strength dissolves as I rush towards my father, my tears flying behind me. I crash into him, knocking him back a few steps as I wrap my arms tightly around him. I bury my face into his shirt and weep, crying out all my pain and anger and sorrow.\n\nMy father laughs and strokes my hair, kissing the top of my head as he does. \"It's okay, kiddo. I'm right here. I've missed you, too.\"\n\n\"I'm sorry\" I cry into his shoulder. \"I'm sorry.\"\n\n\"For what? You're not the one who did this to me.\"\n\nI shake my head like a small child. \"I never got to say I loved you or goodbye or anything! I didn't stop mom! I didn't do anything!\"\n\nMy father pulls me tight against him, stroking my hair as gently as he can. \"Michelle, you were fifteen. You couldn't have done anything. Your mother may have set this up, but my death was still an accident. None of this falls on you.\"\n\nDad's reassurances can't stop my tears. Four years worth of fury, heartbreak and confusion are pouring out of me, and he's getting the full blast. Ever since my mother made that damn deal with Lucifer, I've blamed myself for never doing anything to save my father. I've wondered why she'd picked him and no one else. Why I didn't choose to go with him on that trip and die, too. Questions that were redundant and painful to ask, but spun through my head anyway. Accusations of myself that piled on unnecessary guilt for a crime I didn't commit. \n\nSlowly, I recover from my guilt trip and dry my tears. I pull away from my father, wiping my eyes and regaining control of my breathing. It still hurts to know I've lost him, but four years is time enough to sit down and forgive yourself. I didn't do anything to harm him, but it's still easy to carry the blame when you're a child. And at fifteen? Dear God, how was I able to stay sane? \n\nMy father's warm calloused hands cup my face and tilt my chin up. He smiles down at me, tall and imposing as always. But as big and bulky as my father was, he was always the kindest and warmest person in the room. This was the man who helped me with my homework, went prom dress shopping with me and taught me how to pitch. It was almost like dad was more of a mother than my mom was, and I adored him for it.\n\n\"Hey,\" he brushes a strand of hair from my face. \"You're fine, alright? You're the same smart, sweet, loving grill I raised, right?\"\n\nI nod, choking back the remainder of my tears.\n\nHe grins. \"Good. Now, let me see.\"\n\nHe releases my face and steps back, looking me over with curious eyes. The realization of what he's actually seeing \u2013 me with a very revealing dress and sex hair \u2013 washes over me and I blush furiously. This is definitely not what every father has envisioned for his daughter when she grows up, but he no doubt knows the situation I've been pushed into won't necessarily follow the straightest path.\n\nMy father clears his throat softly and gives me a strained smile. \"Well, it's not... what I was expecting.\"\n\nI flush deeper and give him a shy smile. \"Ditto.\"\n\nDad sighs and smiles wider. \"But you look beautiful either way.\"\n\nI giggle shyly. \"Thanks.\"\n\nDad steps forward again, cupping my cheek in his hand and grinning sorrowfully at me. My heart sinks. I knew he couldn't stay here forever. I sigh heavily but force a smile anyway.\n\n\"I have to go now, sweetheart.\" he whispers. \"I was wonderful to see you again.\"\n\nI launch myself forward and wrap my arms around his neck. \"I love you.\"\n\nHe hugs me back. \"I love you, too, 'chell. Take care of yourself. And watch your mother.\"\n\nI hold onto him for as long as I can before reluctantly letting him go. It would be selfish of me to keep him here just because I miss him, and he needs to move on as much as I do. Dad's eyes are as pained as mine, but we both recognize the need for him to go back to wherever Lucifer called him from.\n\nMy father's eyes flick up for an instant, narrowing when he spots my husband. \"And you.\"\n\nI turn to see Lucifer still sitting on the bed, his head snapping up to stare back at my father. His eyes are wide with surprise, obviously caught off guard by my father's stern voice. His spine straightens and his wings flutter slightly, waiting to be addressed.\n\n\"You take care of her,\" dad growls at him while placing his hands on my shoulders, his parental instincts going into overdrive. \"I swear, if any harm comes to her, I'll teleport myself back down here and tear your eyes out with my bare hands.\"\n\nLucifer smiles warmly and nods. \"Sir, she's in the best hands possible. I wouldn't dream of letting her get hurt.\"\n\nDad's mouth tightens, a warning light that he's about to say something that will put his opponent in his place. \"You didn't do so well protecting her from that succubus.\"\n\nOh! Burn!\n\nLucifer's smile fades, and a look of shocked wariness crosses his face. My gut tightens. Dad's stepped over the invisible line and challenged Lucifer on his most infamous fault with me. First I'm elated to see my father again, now I'm scared my husband will burn him to a crisp.\n\nLucifer takes a deep breath, a slow, dark smile crossing his lips. \"Touch\u00e9. I'll watch her more closely from now on.\"\n\nDad smiles proudly and nods. I release my breath, relieved that neither man has decided to go for the jugular and start a real fight. My dad's shown his spine and my husband's proven his self-control. Reason and rationality have overcome testosterone this round.\n\nWell played, you two. Now separate.\n\nSatisfied that he's made his point, dad spins me around and hugs me one last time. He whispers praises of love and respect and pride into my hair. For the last time, a few stray tears roll down my cheeks. I've forgiven myself and he's gotten then chance to see the woman his daughter has become. We're whole now, he and I, just like we should have been years ago. \n\n\"I love you, Michelle. I always will.\"\n\nWith my heart still aching, I give dad a quick squeeze goodbye and step back. He smiles at me, mouthing how proud he is as the circle of black flames erupts around him. The flames reach up towards the ceiling again, cutting off all contact. The fire remains blazing for a few seconds before retreating, revealing a plain slab of marble where my father had been standing only seconds before.\n\nA menagerie of emotions flicks through my head. I'm happy to see my father again, surprised that he had the audacity to challenge my husband, and sad to see him go. But the few minutes I had with him were more than enough. My heart has healed itself. Finally.",
        "I stand staring at the floor, smiling slightly, when I hear movement behind me. Seconds later, Lucifer's cool, strong arms wraparound my waist and pull me close against his chest. His lips press into my hair and warm breath spills down my back. I close my eyes and lean into him, reveling in his touch.\n\n\"I can see where you inherited your spine,\" he whispers into my hair.\n\nI laugh softly. \"Dad and I had to deal with mom on a daily basis. We didn't take shit from anyone.\"\n\n\"I know your pain,\" he laughs. \"Feel better?\"\n\nI nod. \"Much.\" I spin around and loop my arms around his neck. \"Thank you.\"\n\nHe leans forward and nuzzles my neck. \"Anything.\"\n\nAn idea slips into my mind, one filled with lust and joy and excitement. I smile and step forward, pressing my body against his. My breasts flatten slightly against his chest, bulging out of the generous cut in my dress. I lean back slightly so I can look at him, twisting my fingers into his soft hair.\n\n\"Anything?\" I ask playfully.\n\nA wicked smile appears on his face. \"Have something in mind, do you?\"\n\nI smile back at him. \"As nice as it was to see my father again \u2013 thank you again for that \u2013 I don't consider that a good enough payment for the pain and suffering you've put me through today.\"\n\nHis smile fades, a look of uneasy confusion crossing his features. \"Meaning what?\"\n\nMy smile doesn't fade. \"I've changed my mind. You do owe me for that failed sex experiment with your other half.\" I lean forward, pressing my breasts harder against his chest. \"Make it up to me.\"\n\nA winning smile flashes across his lips before he scoops me up and spins on his feet. \"Yes, ma'am!\"\n\nHe carries me back to our bed, cradling me against his chest. I sink into his embrace, a feeling of warmth and safety washing over me. This creature, dark and menacing as he may be, is my husband. He loves me, cares for me, is willing to fight and die for me. And I'm willing to do the same for him. After all the shit and turmoil we've been through, we've found ways to bond ourselves to each other and keep our hearts \u2013 and bodies - close. \n\nI giggle suddenly, laughing at the ironic happiness of the situation. A human girl and the demon king have successfully fallen in love with each other. The impossible has happened. God must be losing his mind.\n\nAs we near the bed, the gravity of this state of affairs settles over me. I am no longer a simple teenager or a human. I am the queen of the underworld. The damned souls and sadistic demons who live here follow my orders and pay their respects to me. As awkward as it may feel, I've taken on an entirely new set of responsibilities. I've sworn to uphold the duties of my crown and damn it, I will, even if that means going against my nature to keep this ship afloat. If that means sentencing a damned soul to keep the mechanism moving, so be it.\n\n\"I love you,\" I whisper softly to my eternal husband.\n\n\"I love you, too, Michelle.\" His voice is strong, confident. Honest.\n\n\"Do you think Lilith will finally accept me?\" I ask quietly.\n\n\"I don't really care. I accept you, and so does everyone else. You're queen, damn it, whether she likes it or not.\"\n\nI nod. \"How's my mom?\"\n\n\"Just fine. She'll be up in an hour or so to help you dress for the party.\"\n\nI look up at him. \"Party for what?\"\n\nHe grins down at me. \"Old Beelzebub has decided to get a bride for himself. We're celebrating the end of his celibacy.\"\n\nI throw my head back and laugh. \"Good for him. Who's the girl?\"\n\n\"No idea.\"\n\nI loop my arm around his neck again. \"Oh, Lucifer! We must help him pick!\"\n\nHis grin turns wicked. \"I agree. You and I will find someone worthy of being married to the old codger. Perhaps a lovely nun or a young schoolgirl.\"\n\nI nod. \"Yes, those sound like wonderful options.\"\n\nWe reach the bed finally, and Lucifer gently lowers me onto the soft blankets. He moves fluidly, crawling on top of me and straddling my hips. I reach up and pull him down, kissing him deeply as his fingers work my dress up my legs. My love and lust for him combine into one glorious feeling of heat the settles into my heart. It's filling and comforting and everything I could ever possibly want. And I'm never letting the go.\n\nI lean my head back and sigh as he peppers kisses along my throat. \"What would I do without you?\"\n\nHe chuckles against my skin. \"You'd go mad.\"\n\nSad but true.\n\n\"Don't ever leave me,\" I whisper into the air.\n\n\"Never.\" He rears up and grins down at me, hauling the edge of my dress over my bare hips. \"Shall we try that oral initiation again? I don't think you got a very thorough introduction.\"\n\nI smile up at him, still captivated by his impossible beauty. \"Please.\"\n\n\"With pleasure.\" \n\nHe slides down the bed as I watch. His cold hands slide under my hips and arch my body off the bed. I relax and let him move me freely, no longer caring if anyone should walk in and see us. If they do, then they'll get one hell of a show. \n\nI settle into the bed, waiting for the pleasure that's sure to come. My heart settles in, too, finally allowing me to accept my fate. I am queen. How and why I got here is no longer important. What is important are the people and things I've now sworn myself to. Lucifer is my husband. Hell is my home. The demons here are my family. \n\nAnd I won't let anyone try to take any of this from me again.\n\n* * *\n\nYay! We've reached the end! Yes, Lucifer and Michelle did get the happy ending they deserved, and we finally laid a lot of shit and pain to rest. Thanks so much for following this journey and taking the time to comment, fall in love with the story, and laugh along with my strange sense of humor.\n\nI love you all...mostly.\n\nOh, and a special thanks to my editor Matt for helping me the entire the way. "
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "hell",
        "threesome",
        "demon"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-old-king-and-the-new-bride-ch-05"
}