{
    "title": "Safe Room Ch. 01",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 1 - Prologue\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded reporterette at 7:00am, Wednesday May 3d, from in front of the State Office Building. \"Channel Two News has learned that the group 'Citizens For Police Accountability' is filing a lawsuit against State Governor Val Jared, citing the Governor's call to crack down upon Undocumented Workers! As part of the lawsuit, CFPA spokespersons Jay Swenson and Ken Eidex stated that the Governor is illegally mis-spending State funds to unlawfully persecute undocumented workers!\"\n\nBettina went on: \"As part of the Budget bill, the State Legislature assigned money to be used for non-specific law enforcement activities, and the Governor has broad discretion to allocate those funds. However, the budget does not go into effect until July 1st, and the CFPA is claiming that the Governor is using this year's budget money to crack down on immigrant families.\"\n\n\"And in other news,\" said Bettina, \"the same CFPA has filed a complaint with the Town & County Inspector General's Office and the State Office of Ethics and Review, demanding an investigation of the Richard Ferrell arrest. Police say they found Mr. Ferrell with his back broken, and Ferrell's partner Benny Brighton, who was arrested at the scene, stated that masked gunmen attacked them and injured Mr. Ferrell. But the CFPA is claiming that the Police intentionally injured Mr. Ferrell in retaliation for Mr. Ferrell's attack on SBI Crime Lab Director Tanya Perlman, whom the Police inducted into their Orange Order honorary last December. The CFPA wants a full and independent investigation of the incident.\"\n\n\"And finally,\" said Bettina, \"the musical trio of Jasmine Nix, Big Ice, and local resident T-Square have announced that their new collaborative album will be released in June, after several delays. Ms. Nix says the album is a musical anthem of protest against Police abuse of People of Color...\"\n\n* * * * * * * * * * * * * * * *\n\n\"I suppose we cannot talk about any of that, sir.\" said Theo Washington as we drank coffee and listened to Bettina's agenda-driven newscast.\n\n\"No.\" I said. \"What you say in private, while at lunch, off-duty, is your business. But while on duty and in on-duty settings, no more political discussions or stating of political opinions. I hate it, too, but that's the way it is, and has to be.\"\n\nBy now, word had gotten around about Commander Harlow's formal complaint, her attempt to pull rank to verbally attack Detective Parker, and the Chief's edict against further political discussions. The Detectives had also heard of Harlow's pressuring Janice Holloway to break up with Teddy, and there had been some whispered remarks of 'Brownlee's Bitch' behind Della's back... which Your Iron Crowbar took no measures to stop.\n\n\"I have a question, sir.\" said Sergeant Rudistan, most mischievously. \"Does discussion of the Police Boxing Matches come under the realm of politics?\" Laughter erupted.\n\n\"Depends upon the amount of money being bet.\" I replied with a grin, despite my mental pain at being unable to participate in said Matches.\n\n\"In a related question,\" said Cindy Ross, \"is it political to discuss how badly the Bulldogs are going to beat the Wildcats this Fall?\" That got her the 'Look of Iron' from my gray eyes.\n\n\"It's not political.\" I replied. \"But stating a premise like that borders upon 'stupid'.\" A chorus of 'ooooo's broke out.\n\n\"Vee shall seee.\" replied Cindy. \"You've lost your quarterback, your entire offensive line, half your defensive starters. If you didn't have Theo's cousin Jamaal, you'd look like State Tech's juvie team.\"\n\n\"Dayum, Captain.\" I said. \"What's that in your coffee cup? Prune juice?\" The room erupted into laughter. That was Iron Crowbar 1, Green Crowbar 0.\n\n\"She better start drinking prune juice.\" said a voice, which became Captain Teresa Croyle as she came into the room. \"Police Boxing Matches begin this weekend, and she's going to be puckering in fear as her name comes closer and closer... to mine.\"\n\n\"Dayum!\" I said. \"What is in this coffee? Who made the coffee this morning?\" \n\n\"You did, sir!\" said Joanne Warner. \"But some people chose to drink the kool-aid, instead, and will find that out when they face me in the ring!\"\n\n\"Bring. It. On.\" said Vice Detective Roy McGhillie. \n\nI just shook my head and said \"God! how I wish I could get into that ring and take you all down...\"\n\n* * * * * * * * * * * * * * * *\n\nAfter watching Priya Ajmani's broadcast at 8:00am, a carbon copy of Bettina's, but delivered by the extremely gorgeous Indian reporterette, we sat down in my office for the 'Angels' meeting.\n\n\"Okay,\" I said, \"is there anything going on Saturday?\" Teresa and Cindy both looked at me, knowing I was referring to the opening of the Police Boxing Matches.\n\n\"Nothing important, sir.\" said Teresa, catching on. \"Just Captain Ross's demise.\"\n\n\"Whatever you're smoking, keep on smoking it.\" Cindy replied. I was chuckling at them; they were both serious, though I knew their banter was more friendly than it looked.\n\n\"Okay, let's get down to business.\" I said. \"What's going on?\"\n\n\"No weekend training because of the Matches.\" said Teresa. \"But they've been training hard for a few months now, so the break will be welcome for them. Patrols have been pretty routine. Tickets are being issued at normal rates. That'll go down in the summer because all the students will go home. I've submitted a plan in the case of another big power failure; it's about the same as our general emergency plan, but we're going to make sure the Hospital gets any help we can give them, and we'll watch over potential criminal targets like banks.\"\n\n\"Nothing new in MCD nor Vice.\" said Cindy. \"Benny Brighton didn't have much at all on any drug operations into the County; I don't think he's a normal drug perp. Ferrell took the Fifth when we went to interview him in the Hospital. They transferred him to City Hospital yesterday.\"\n\n\"Ask 'Coldiron' to have his people contact their C.I.s and such,\" I said, \"and see if there are any rumors of unrest in the 'People of Color' districts. I've heard some rumors of groundwork being laid for that. I might also add that the announcement of this anti-Police album and it's projected June date are significant.\" Cindy nodded and made notes.\"\n\n\"By the way,\" I said. \"Let's talk morale. How are things with Teddy Parker?\"\n\n\"He's down, but okay.\" said Cindy. \"He has made no attempt to talk with Janice, nor she him, at least not here at the Station. I am hearing some talk the people are pissed off at Commander Harlow for pressuring Janice to break up with Teddy.\"\n\n\"Let me ask you guys, off the record...\" I said. \"Is Holloway so afraid of Harlow that she wouldn't stand up to her over a boyfriend? If the Chief or Malone or anyone had tried to make me break up with Laura while we were dating, I'd have ripped their heads off. And if I tried to tell you, Cindy, to not date Callie, or you, Teresa to not date Todd... you'd be getting plenty of practice for the Boxing Matches.\"\n\n\"And you would be in the Hospital next to Ferrell with a much more badly broken back.\" said Cindy. \"But we know you'd never do that to us.\"\n\n\"Sir, I get your point,\" said Teresa, \"that Janice should stand up to Harlow if she really wants to date Teddy. And Janice would stand up and push back... if she really wanted to. Ergo, I deduce Janice is taking the opportunity to break up with Teddy, and it would've happened anyway.\" I nodded at that brilliant piece of deduction.\n\nJust then my phone rang. \"Okay,\" I said, \"I'm being called to the Chief's Wednesday meeting.\"\n\n\"Gonna confront Harlow?\" asked Cindy.\n\n\"That's 'Commander' Harlow, Captain.\" I said, knowing that had to be said. \"Show respect, even if you're as pissed at her as I am. But to answer your question: I'm not planning to escalate this... yet.\"\n\nPart 2 - The Crime Scene\n\nThe Cabin, Promontory Point, and other houses such as Daniel and Melina Allgood's are on the west side of the ridgeline that is the western of two mountain fingers stretching to the south. The east side is much more steep, so virtually no houses are on the mountainside, but in the valley that borders Lake Reservoir below. The other finger is in Nextdoor County, forming the other half of the \"bowl\" that contains Lake Reservoir, formed by a meteorite hit eons ago. And on the other side of that ridgeline is where Millwakee Camp is, and the area west of the City begins.\n\nA road goes around both sides of Lake Reservoir, servicing neighborhoods of houses. The houses on my County's side are middle-class, nice three-bedroom homes with backyards on the Lake, and the land is pretty flat. On the Nextdoor County side, the houses are larger and multi-storied to take advantage of the more sloping ground, and those houses are more expensive and exclusive. Tom and Janet Riordan once had their home in that neighborhood.\n\nThe Lake is fed by springs as well as streams from the mountainsides, and at the very north point of the nearly perfectly circular lake a large, deep creek flows from a crevice between the mountain fingers and into the Lake. There is a bridge for the road, but the Nextdoor County side is blocked by a locked gate, with barriers to prevent crossing at nearby points. \n\nSome years ago, Nextdoor County and our County had some issues, and this was one of their reactions. Things are better now, especially as the NCPD's Vice Lieutenant is the TCPD's Captain of Detective's sister... and the mother of two of the TCPD Police Commander's male children. But the gate remains locked, mostly to keep would-be criminals from using it to sneak into the Nextdoor County side, then escaping back to our County, and I have no real objection to that.\n\nI thought of all this as I drove up Reservoir Road at 10:00am, past Chief Griswold's home and where Marine Gunnery Sergeant Guernica had been murdered and his small children tortured. Near the end of the road on my County's side was a large clearing, with picnic tables by the Lake. It was the gathering point for the swimming portion of the Independence Day Triathlon.\n\nAnd on the sloping hill above was a home, almost precariously perched on the hillside. A driveway curled up to the left side of the house, and a long flight of stairs snaked their way up to the front porch. The house was two stories tall, and the sides were composed of wood.\n\nI parked my car at the bottom of the hill, where most of the other TCPD cruisers were. Patrolman Culver got my name and badge number, then asked \"Sir, would you like me to call up and have someone drive you up?\"\n\n\"No thanks.\" I replied. \"I'll be okay taking the stairs, if slowly.\" Nevertheless, as I started up, Culver radioed that I was approaching, and Captain Ross came out and down the stairs.\"\n\n\"I'm fine, Captain.\" I said as I slowly climbed the stairs one by one. \"You can go on back up.\"\n\n\"I'll stay and babysit.\" she replied. \"Just in case you fall.\"\n\nI knew that was part concern, and part lighting a fire in me. As we got to the top, Sergeant Rudistan appeared at the front door, jovial and mischievous as usual.\n\n\"Good morning, Commander.\" he said jovially. \"Practicing to race me up those stairs? You'll probably win.\"\n\n\"If I do, Rudistan,\" I replied, knowing that Rudistan was in 'sneaky' good shape despite his 'pear shaped' body, \"I'll P.T. you to death every morning for the rest of your Police career.\"\n\n\"No worries, sir.\" said Rudistan. \"Morton and I are going to race in the Triathlon this year.\" I saw Cindy's face become wooden. Rudistan did not mean to remind her of her being prevented from running the Triathlon, but she still felt it, as I felt the pain of not being able to compete in the Police Boxing Matches.\n\n\"Good.\" I said to Rudistan as we went inside. \"It'll be tough to beat Todd Burke and Teddy Franklin, and I think Joanne and Seth Warner are running as a team. So, what's going on here?\"\n\n\"Missing person, sir.\" said Rudistan. \"Tim Burris, owner of this house.\"\n\n\"You know what my first question is going to be, Sergeant Rudistan.\" I said.\n\n\"Who called it in?\" Rudistan replied. I nodded, and he said \"Mr. Burris's best friend, one Jeffrey Burnham, sir. He just got back from a trip to England and France, on business. He called Tim Burris this past Sunday, but got no answer and the cellphone went to voicemail. He tried again yesterday, then came over this morning, and found the home had been broken into. He's on the back patio with Detective Warner.\"\n\nWe went into the front door. The greatroom was on the backside of the house and a living room was to the right. A small dining room was to the left, and the kitchen behind it. Similar to the Mountain Nest on the first floor, I thought.\n\nWhere it got different was the hallway went further to the right than my home. At the end of the hallway was a larger room, which could be a bedroom but had been converted to an office. A huge desk of rich, dark woods faced the front with the chair near the back wall, two windows looking out back on either side. A sofa and chair and TV were on the front side, with one window behind the sofa. A large bookcase, over six feet wide with shelves to the ceiling, was to the immediate left of the door, and to the desk's right if one was sitting in the chair. On the other side of it was a narrow hallway leading to the greatroom.\n\nThe room was a mess. Papers were strewn everywhere, books from the bookshelf thrown all about the room. All of the desk drawers had been pulled out and emptied of their contents, adding to the mess. \n\nThe rest of the house was in similar condition. The greatroom had no books or anything, but the sofa had been torn up and stuffing was everywhere. The kitchen had pretty much been destroyed. Cans of beans, corn, and tins of Spam were all over the place, and more were on the pantry shelves. Only the dining room escaped major damage.\n\n\"The bedrooms upstairs are torn up, as well.\" said Detective Teddy Parker as he came down the stairs. \"But it's a funny thing that none of the four televisions in the house were taken. Apparently only the computer was taken.\"\n\n\"How do you know there was a computer?\" asked Cindy.\n\n\"There's a router and an A.C. plug-in on the desk, ma'am.\" said Parker. \"But no computer.\" Cindy nodded.\n\n\"Did you try dialing Mr. Burris's cell phone?\" I asked. \"See if we can hear it?\"\n\n\"No sir.\" said Rudistan, dialing a number. \"I'll try that now. Mr. Burnham gave me the number.\"\n\nWe strained to hear anything, but we were not rewarded. No ringing. Rudistan reported that the call went straight to voicemail. \"That might mean there's no connection from any tower to the cellphone, sir.\"\n\n\"All right.\" I said. \"Get a Crime Lab team over here. They've got a lot of work to do. Okay, Ross, Parker... let's go talk to Mr. Burnham.\"\n\n* * * * * * * * * * * * * * * *\n\nI went down the narrow back hall towards the greatroom. And 'narrow' was definitely the impression I got of it as I went down the passageway. I know I'm broad-shouldered, but this hall was barely wider than my width. I peered at the walls, then went through the greatroom to the back patio. I noted that there was not much patio, and there was a retaining wall not far behind it. Behind that, the mountain climbed steeply upwards.\n\nSitting with Joanne Warner was a tall, slender, youngish looking man with a head of curly auburn-brown hair, a thin beard that reminded me of the criminal 'Skinny Beard' that I annihilated with my crowbar. Jeffrey Burnham had on basic black spectacles, a tie-dye tee-shirt, short pants, and flat sandals. I refrained from making a politically incorrect evaluation of him.\n\n\"Mr. Burnham,\" I said, coming up to him. \"I am Commander Don Troy, and this is Captain Cindy Ross. You've met Detectives Warner and Parker?\" He nodded and shook my hand somewhat perfunctorily. I sat down on one of the patio chairs, which was not made for people with bad backs.\n\n\"I'll apologize in advance if I ask questions my people have already asked,\" I said, \"and I'll ask your indulgence to answer them again. So what happened this morning?\"\n\n\"I had not been able to get in touch with Tim since I got back from my trip to Paris and London.\" said Jeffrey. \"So I came over this morning to see if everything was all right. I found the front door ajar. When I went inside, the house was a wreck. I looked all over but didn't see Tim anywhere, so I called the Police.\"\n\n\"I see.\" I said. \"So how long were you in Europe?\"\n\n\"A couple of weeks.\" said Jeffrey.\n\n\"And the last time you saw Tim before that?\" I asked.\n\n\"Uhhh... it was early April... maybe the Sunday after April Fools Day. We played pranks on each other that day like we always do, then we had lunch the next day, on Sunday. After that I was working and preparing for my trip... so yeah, April 2d was the last day I saw him.\"\n\n\"What is your occupation?\" I asked.\n\n\"Mine?\" said Jeffrey. I nodded and he said \"I work for the University Museum and History Department.\"\n\n\"And you traveled to Europe in connection with that?\" I asked.\n\n\"Yes.\" said Jeffrey, but he did not elaborate.\n\n\"And what was the purpose of this recent trip?\" I asked.\n\n\"Uh, I was making arrangements for student trips to Paris and London during the December holiday season, with visits to the museums there.\" said Jeffrey.\n\n\"And what does Tim do for a living?\" I asked.\n\n\"He was... 'between jobs', I guess.\" said Jeffrey. \"He waited tables at some of the restaurants on 'The Row'.\" By that, he meant the restaurants and bars along University Avenue, that serviced mostly University students. \"He's worked in some of the hotels here, too.\" I noted Cindy and Joanne looking up at the house, and suppressed a smile that they were seeing it, also.\n\n\"Is Tim married? Any kids?\"\n\n\"No kids. He was married, but his divorce was finalized this January.\" said Jeffrey. He did not elaborate further.\n\n\"What is her name?\" I asked.\n\n\"Melissa.\"\n\n\"Does she live here? In this house?\" I asked.\n\n\"No.\" said Jeffrey. \"She moved to Nextdoor County. She got a job with the Lakeside Inn & Suites.\"\n\n\"What did she do before that job?\" I asked.\n\n\"She worked at the University Hotel.\" said Jeffrey.\n\n\"In what capacity?\" I asked.\n\n\"Different ones.\" said Jeffrey. \"She was in charge of the restaurant, then was Assistant Night Manager.\"\n\n\"Okay.\" I said, willing the pain in my back to stop welling up. \"Captain Ross, why don't you get some people to go find Melissa Burris.\" Cindy got up and went back inside the house.\n\nI said \"Mr. Burnham, has Tim been prone to take unannounced trips in the past? Disappear for any length of time?\"\n\n\"No.\" said Jeffrey.\n\n\"Did he ever go on any trips out of town, overnight trips, that you did know about?\"\n\n\"Not really.\" said Jeffrey. \"He'd go to gun shows, but those often were for one day.\"\n\n\"Anything else you can tell me about him? Anything that can help us locate him? Any hobbies he had?\" I asked, peering at him.\n\n\"Not really.\" said Jeffrey Burnham. \"We played chess a good bit, but just recreationally. We also played disc golf at Ronald Reagan Park, but not very often.\"\n\n\"Was Tim a prepper, Mr. Burnham?\" I asked. \"Was he a survivalist type?\"",
        "\"Uhhh...\" said Burnham. \"Well, now that you mention it, he had some interest in that. Talked about things like water purification and food storage. But I don't think he was all that gung-ho about it.\"\n\n\"Oh really?\" I said, which made Joanne's eyes perk up. \"What about you, Jeffrey? Do you do any prepping, survival type stuff?\"\n\n\"I keep extra food on hand in case of a natural disaster.\" said Jeffrey. \"But again, nothing crazy like they show on TV.\"\n\n\"Okay, thank you.\" I said. \"Detectives? Do you have any questions for Mr. Burnham?\"\n\n\"Sir,\" asked Teddy Parker, \"did Mr. Burris get the house as part of the divorce?\"\n\n\"I guess so.\" said Jeffrey Burnham. \"She moved out... then again, she moved out several months before the divorce. Almost a year now, I guess.\"\n\n\"Are you friends with Mrs. Burris as well as Mr. Burris?\" asked Teddy. Again I suppressed a smile; that was a great question, and delivered in a strong and timely manner.\n\n\"I was... and still am... good friends with both of them.\" said Jeffrey.\n\n\"Is Mrs. Burris dating anyone else right now?\" asked Detective Parker.\n\n\"Uh, not that I know of.\" said Burnham.\n\n\"That's all I have, sir.\" said Parker. Joanne had already been talking to Burnham, and had no more questions.\n\n\"Okay, Mr. Burnham.\" I said. \"You can go back home, or to work or whatever. If you need to leave the County, much less the State or Nation, let the Police Department know.\"\n\nJeffrey Burnham exited as quickly as he could without seeming to be 'hasty'.\n\n\"Great questions, Teddy.\" I said. \"So what did you guys think of that?\"\n\n\"How does he own this house, sir?\" asked Joanne. \"After a divorce, with no steady income, it would seem?\"\n\n\"I'll bet... a trust fund.\" I said. \"Probably his parents left money and the house in trust, so that he could get a monthly stipend but can't touch the principle.\"\n\n\"I would agree, sir.\" said Teddy. \"But if I may ask, what led you to that conclusion?\"\n\n\"Well, it's a matter of divorce courts, which I pray to God neither of you ever have to deal with. My own divorce was amicable, and thank God for that, but that whole system is all but rigged for the wife, especially if there are children. And if the husband wins, it's usually because he had very good and therefore very expensive lawyers. Can Mr. Burris afford that? I... dunno.\"\n\nI continued: \"Ergo, for Mrs. Burris to not come away with the house suggests either a pre-nup, and one hell of a pre-nup at that, or she couldn't get the house because of some other legal obstacle. A trust suggests itself. Add to it that Tim Burris has only irregular work but has money for his prepper hobby... oh yes, that's obvious, is it not?... then a trust fund comes more strongly to mind. I guess Myron and Mary can settle our bet for us.\"\n\n\"No sir!\" said Joanne Warner with alacrity. \"I am not now betting against you, sir, and I never will.\"\n\n\"Very wise, Detective Warner.\" said Captain Ross. Cindy turned to me and said \"I called the Nextdoor County Police; I have a good contact in their Vice squad.\" That would be her sister Molly, of course. \"They're going to go talk to Mrs. Burris.\"\n\n\"Good.\" I said. \"Okay, guys, keep going. What did you think of that interview we just had?\"\n\n\"Ohhhh...\" said Joanne. \"I see what you're driving at. He seemed evasive.\"\n\n\"I get the feeling he does not like Police.\" said Parker. \"Didn't really answer the questions more than maximizing the minimum standard.\" I chuckled at the joke.\n\n\"True.\" I said. \"And that's part of it. But he also was on the borderline of lying to us. I'll guess that both he and Tim are preppers, and big-time preppers.\"\n\n* * * * * * * * * * * * * * * *\n\nFor the next 15 minutes, the TCPD, Crime Lab, and four Fire Department Firefighters that arrived in the truck I requested, had the experience of watching their Police Commander act in a strange manner.\n\nI went back to that narrow passageway and began tapping on walls. I then walked up and down the main hall doing the same thing. I opened the door to what was the coat closet, and noted how far down it was from the office/study room. There were no doors in the wall of the narrow passage.\n\nThen I began tapping, then banging on the floor of the hallways. I asked Rudistan and Morton to jump up and down on the floor, as my back did not permit me to do that myself.\n\n\"Oooh,\" said Rudistan as he jumped on the floor in the narrow hallway. \"This sounds a little different right here. Feels a little different too, like there's less 'give' in the floorboards.\"\n\n\"Exactly what I wanted to hear.\" I said. I walked into the study room, where the Crime Lab was at work.\n\n\"Okay, guys,\" I said loudly, \"anyone find a remote control, especially one that looks strange?\" No one had.\n\nI began looking at the bookcase, peering at it. I tapped on the back wall of it, looked closely at the edges. I began feeling all over it and the walls around it for any kind of 'knot' or anomaly.\n\n\"I take it you think there's something behind the bookcase, sir?\" asked Cindy.\n\n\"Yes. Yes I do.\" I said as I pulled at the end of the bookcase. Cindy helped, but it did not move, no matter how hard we pulled at it.\n\n\"Locked into place.\" I said. \"That in itself suggests it's not just an ordinary piece of furniture.\" The bottom portion had what looked like twelve drawers in a 4x3 matrix. There were also four sections in the top part. I pulled at the middle, and Cindy helped, but the bookcase refused to move.\n\n\"Okay, there's a very thin line in the middle here.\" I said as I closely examined the bookcase. I went over to the desk. \"Has this chair been dusted for prints?\" I asked.\n\n\"Yes sir.\" said Christina Cho. I had on latex gloves as I felt around the desk.\n\n\"Sir,\" said Christina. \"We looked. No buttons or anything.\"\n\n\"I believe you.\" I said. \"I'm searching for knots in the wood or for something concealed.\"\n\nAlas, I found nothing. I sat back, looking at the desk. The papers had been collected, leaving it clean and bare, save for the various smudges where fingerprints had been taken. The desk lamp was the only thing still on the desk, still sitting right in the middle.\n\nRight... in... the... middle. Unmoved.\n\nI tried to pick up the lamp. It did not budge. I felt around the edges but found nothing. There were two buttons on it, for 'on' and 'off'. I began pressing the buttons.\n\n\"Find something?\" Cindy asked.\n\n\"Maybe.\" I said. \"The 'off' button seems to be a bit more tactile than the 'on' button. I began pressing the 'off' button repeatedly. Then I held it down and counted to ten.\n\n\"WHOA!\" yelled someone as the bookcase began to move. The center was coming outwards, and two lab techs jumped out of the way.\n\n\"You found it, sir!\" Rudistan said happily. Everyone began clapping as we looked into the maw.\n\nA fluorescent light came on, revealing a small room. The walls were covered with tiles with raised round buttons. Stairs descended going to the right, below the narrow passageway and into the mountainside below and behind the house.\n\nI was about to go into the room, but felt a hand on my shoulder. I turned to see Rudistan right there.\n\n\"Sir, you don't really think we're going to let you go in front of us, do you sir?\" he said in his jovial voice, but with an underlying hint of absolute seriousness.\n\n\"I won't even try to argue.\" I said, stepping back.\n\n\"Hold on!\" Cindy ordered. \"Something's not right, here. I'm not feeling warm and fuzzy about any of you going down there.\" \n\n\"I agree with that.\" I said, feeling the edge of Cindy's vibe. \"So... before you go in there, Sergeant Rudistan, I want two things: first, secure these doors so that they cannot close. And second, let's get the Firemen in here with their air tanks and masks, to be on standby for us.\"\n\nThe power hinges on the doors were removed, and the doors were propped apart with triangular blocks on the floor and also a long iron bar across the top. \"Now that is a crowbar, Ms. Ross!\" I said happily as I pointed at it with my red crowbar.\n\n\"Sometimes crowbars can be too big, so other women tell me.\" Cindy replied. Christina Cho broke into laughter at that one. Most of the other Officers just looked at them funny. Meanwhile, I was looking at the tiles on the walls, the patterns of the raised dots on the metal squares. Something about that was nagging at me...\n\nRudistan and Morton went down the steps. \"There's a door down here, sir.\" said Rudistan. \"Looks like a hatch on a submarine, designed to seal tightly. It's locked.\"\n\nPart 3 - Unsafe Room\n\n\"Rudistan!\" I called down the stairs. \"Is there a black box next to the door?\"\n\n\"Yes sir.\" said Rudistan. \"No manufacturer name, though. The box won't open, sir.\"\n\n\"Is there a red glass panel on the top of the box?\" I asked.\n\n\"Yes sir.\" said Rudistan.\n\n\"Okay, press the lower left corner button.\" I said.\n\n\"It lit up with nine numbers, sir, not in order.\" said Rudistan. I called Rudistan to come up the stairs.\n\n\"Okay,\" I said when he got up to my side. \"When you get back down there, press that lower left button again. The numbers will come up in a different order. Just press the upper right corner button four times, no matter what number it is. Then press the bottom right hand corner button. That should open the box.\"\n\n\"Once in there,\" I continued, \"you'll see another keypad, with normal buttons. Press the '5' in the middle four times in a row. If a green light starts flashing, press 'zero' and the door should unlock. If a red light flashes, press the '1' button, then run back up these stairs as fast as you can before the bomb goes off.\"\n\n\"I hope you're kidding about that, sir.\" said Rudistan.\n\n\"We'll see if you're ready for the Triathlon, fer damn sure.\" I replied.\n\n* * * * * * * * * * * * * * * *\n\nIt worked. The door opened. A light came on inside the chamber.\n\n\"There's someone inside, sir.\" said Rudistan. He began going inside.\n\n\"Wait!\" I called out, but Rudistan and Morton were already inside.\n\n\"Cindy!\" I yelled. \"Get the firefighters! Have them put on their masks and get their asses down here! Move!\" Cindy moved, and quickly.\n\nFor a moment, I looked at the tiles on the wall. \"Johnson!\" I said to the Officer with the camera, \"get video of these walls for me.\" Johnson began taping.\n\nIt was then I realized something wasn't right... I didn't hear anything down below.\n\n\"Rudistan!\" I called out. \"What's going on in there?\" There was no response.\n\nSuddenly, we heard gasping. Morton was at the door, and trying to stagger up the steps. Officers rushed to help him. \n\n\"Rudistan passed out.\" said Morton, who was near that state himself.\n\n\"Firemen! Get in there and get him out!\" I ordered. The Firefighters, wearing masks and tanks, moved quickly. A moment later they were dragging out Rudistan, his arms over their shoulders. He was unconscious, his face a shade of blue that frightened me...\n\n* * * * * * * * * * * * * * * *\n\nA few minutes later, Rudistan opened his eyes. The firefighters had put a breathing mask on him to give him oxygen, and they'd gotten him to start breathing, first out out out, then in, then out out out, then in.\n\n\"I didn't smell anything.\" said Morton, who'd been given oxygen, also.\n\n\"You wouldn't.\" I said. \"Christina!\"\n\n\"Sir?\" asked Christina Cho. \u2028\"Do you guys have equipment to take air samples?\"\n\n\"We do in the lab, sir.\" said Christina. \"I'll call them to bring it.\"\n\n\"Tell them,\" I said, \"that we're going to take air samples, and also samples of gas from tanks that we will find down there, as well as the filtration system that we should find.\"\n\n\"Yes sir.\" said Christina. \"What was it? Carbon monoxide?\"\n\n\"More likely carbon di-oxide.\" I replied.\n\n* * * * * * * * * * * * * * * *\n\n\"I'm fine, sir, really!\" protested Rudistan after he'd sat back up.\n\n\"Good!\" I said. \"That means the doctors at the Hospital will find you that way when they check you out. Guys, take him there now.\"\n\n\"Sir------\" started Rudistan.\n\n\"That was an order, Sergeant.\" I said. \"And I will be checking with my boss to make sure you got there and checked out okay.\"\n\n\"The Chief, sir? But-------\" said Rudistan.\n\n\"No, not the Chief.\" I said. \"My real boss. The one on Staff at University Hospital.\"\n\n\"His wife, Sergeant.\" said Cindy, reinforcing me. \"Now go with these guys. Now.\" Rudistan gave up the protests and went with the Firefighters, as did Morton.\n\n* * * * * * * * * * * * * * * *\n\nI called Assistant Fire Chief Davies to requisition some air masks and tanks so we could go in, retrieve the body, and take some samples. While we waited for them, I told the gathered officers what happened:\n\n\"Okay guys,\" I said, \"some gases are heavier than air. Carbon dioxide is one of those gases. You can pour it from one beaker into another, though you can't see it pouring. It looks like that room was, and still is, full of pure carbon dioxide. It just sat there all this time instead of mixing with other air above it or rushing up the stairs like a more lightweight gas would do.\"\n\n\"So Rudistan and Morton were breathing air with no oxygen in it, and that's why Rudistan passed out?\" asked Teddy Parker.\n\n\"Yes.\" I said. \"And Morton was lucky to get out of the door, as well. Any more time in there, and this might've been an even worse tragedy than one death...\"\n\n* * * * * * * * * * * * * * * *\n\nJ.R. Barnes and Christina Cho volunteered to go in and take samples. Two techs from Tanya Perlman's State Crime Lab also volunteered to go in. The Fire Department people fitted them with oxygen masks and tanks, and told them they had no more than fifteen minutes. That wasn't really true, but the TCFD didn't want them staying very long in there, as they were already overlooking the lack of training by those using the equipment.\n\nThey also got the body out of there, and it was taken to the morgue. It would prove to be the unfortunate Tim Burris.\n\nWhile all this was going on, I continued to examine the tiles in the little alcove room of the house. There was a pattern to those raised dots, I thought to myself, but what is it?...\n\nPart 4 - Cause and Effect\n\nAt 3:00pm, Wednesday May 3d, a meeting occurred in Classroom 'J' at Police Headquarters. Present were: Sheriff Allgood, Chief Moynahan, Your Iron Crowbar (me), Deputy Chief Harlow, Captain Ross, Captain Croyle, Detectives Parker and Warner, Myron and Mary Milton, Sergeant Rudistan (who was deemed to be okay), J.R. Barnes, Christina Cho, and Martha the M.E.\n\nMartha went first, so she could leave after giving her report: \"He's been dead for several weeks. Maybe a month.\" said Martha. \"Asphyxiation. I believe the theory that the room was full of carbon dioxide is correct, and he died of the lack of oxygen. I can't tell the exact day and time of death, though.\"\n\n\"I might can help with that, sir.\" said Mary Mahoney Milton. \"Tim Burris paid his April bills through the sixth via digital means. But he did not pay the water bill that's due on the 7th, and he paid no bills for the beginning of May. I checked with the power company, and the power consumption after April 7th was static, pun not intended, meaning that the amount of electricity being used stayed absolutely constant. He ran no water after April 7th, either.\"\n\n\"Oh yeah, and the electric clocks in the house were not reset.\" said Joanne Warner.\n\n\"And the last power outage we had was that big sabotage on... what date?\" I asked.\n\n\"Ohhhhh, April 7th!\" Joanne almost squealed.\n\n\"Yes.\" I said. \"Do you believe in coincidences, Ms. Warner?\n\n\"We can have one, but never two.\" said Joanne. I gave her a 'thumbs up' signal.\n\n\"Sir,\" said J.R. Barnes, \"we found a notebook he was keeping while in that shelter. He wrote that when the power went out, he decided to do a 48-hour test of his shelter system. He was using the air filtration system and the generator that was in the utility room behind the garage. Tanks only go into effect if that system fails. And when the sensors picked up rising level of carbon dioxide, it released air from the tanks.\"\n\n\"What did you guys find in the gas tanks?\" I asked.\n\n\"If I may tell you this first, sir,\" said Christina Cho, \"we found mostly carbon dioxide in the air of the shelter. Some oxygen and nitrogen, but probably because we started going in and out of there. And that brings me to the tanks: the ones we found that were marked 'air' actually had pure C-O-2 in them. The oxygen tanks had oxygen. And the filtration system wasn't working properly when we tested it... the C-O-2 was not being converted to oxygen like it should've been.\"\n\n\"Nasty.\" I said. \"If it had converted all that C-O-2 to oxygen, Tim would've died from too much oxygen... or a spark would've incinerated him like the Apollo 1 capsule. J.R., anything else in that notebook?\"\n\n\"No sir.\" said J.R. \"It looks like he went to bed after getting the systems started. An alarm may have gone off, but he collapsed and died before he could get to the control panel.\"\n\n\"Anything else of interest?\" I asked. \"Contents of the house?\"\n\n\"We're still going through all that, sir,\" said Barnes, \"but we found that Tim only had two prescription medications in his home: high blood pressure medicine, and Viagra. The blood pressure medicine was in the bathroom that was part of the master bedroom suite. But he had Viagra in the shelter as well as that bathroom.\"\n\n\"Hmmf. Interesting.\" I said. \"\"Okay... Martha, thanks for the expedited autopsy. J.R., Christina, you guys did fantastic work to get us this data this quickly. You guys can go.\" The three of them left the room.\n\n\"Okay, Myron, Mary... whaddya got?\" I asked.\n\n\"Victim's name is Timothy Burris.\" said Myron. \"Twenty-eight years old. Got married four years ago to a Melissa Elberton, their divorce was finalized this past January. No children from the marriage.\n\n\"Tim's parents died eight years ago, when Tim was 20.\" continued Myron. \"They'd set up a trust with the house's title deed in it already, and when they died, their money went into that trust. It pays Tim a monthly stipend plus perpetual free use of the house for twenty more years, and then Tim owns it free and clear and can sell it.\n\n\"Tim's father, also a 'Timothy', but he went by his middle name of 'Thomas', was a doctor, but I've had trouble getting more data on him. Tim's mother, named 'Martha', had a degree in Political Science from the University of Virginia, and may have worked for various political campaigns, though again I'm struggling to find information very quickly.\"\n\n\"That's okay.\" I said. \"Keep at it, and you'll get something eventually. \"By the way, how did the parents die?\"\n\n\"They died at the same time.\" said Myron. \"But once again, I'm not coming up with much on exactly how. Nothing in the Lexis/Nexis searches, and no death certificate issued by this County or anywhere in this State.\"\n\n\"Ah.\" I said. \"That's starting to make sense. Tell you what, I'll personally handle getting that information through my good buddies in the FBI. So, what about Melissa Burris and Jeffrey Burnham?\"\n\n\"Melissa graduated from our fair University with a Management degree.\" said Myron. \"She is thirty years old. She filed for divorce, for 'irreconcilable differences', and stated in the complaint that her husband's sexual indifference was a large part of the problem. She couldn't get the house nor the money in the trust fund, so it was a pretty clean divorce process.\"\n\nMyron went on: \"She's had jobs in hotel management, and now works in Nextdoor County. She also lives there now. Her parents are still alive, and live over in Acropolis City. Her father runs a small metals fabrication business and her mother keeps books for it.\"\n\n\"Jeffrey Burnham works for the University Museum.\" said Myron. \"The only interesting thing about him is that he's almost completely off the grid. He pays all of his monthly bills in cash. Only uses a credit card for work-related things. He lives in an RV in the RV park southwest of Town and west of Junction Station, and he pays cash every month for his rent. And as of right now, sir, that's all we have.\"",
        "\"Okay, that's good work.\" I said. \"Anyone, any questions? Deep philosophical thoughts?\"\n\n\"Sir,\" said Rudistan, who was remarkably quiet and somber after his experience earlier in the day, \"how did you know how to work that keycode system?\"\n\n\"Ah, yes. That.\" I said. \"By sheer coincidence, or perhaps not, those are the exact systems the CIA wanted me to sell them when I was running my security devices business. I refused to sell them anything, of course. And I'll add that it is very frightening to me that they wanted systems that were so easily defeated.\"\n\n\"Wow.\" said Cindy.\n\n\"Okay.\" I said. \"Anyone have any other comments or questions before I start making assignments?\"\n\n\"Assignments?\" said Sheriff Allgood. \"This was just an unfortunate accident, wasn't it?\"\n\n\"No, Sheriff.\" I replied. \"This was first degree murder.\" There were several gasps in the room.\n\n\"O-kay.\" said the Sheriff. \"But how do you draw that conclusion?\"\n\n\"Tanks marked 'air' but filled with carbon dioxide are a start.\" I said. \"Sabotaged filtration system, also.\" I replied.\n\n\"But that could've just been an accident, putting the wrong gas in the tanks, couldn't it?\" asked the Sheriff.\n\n\"Detective Warner will be telling us that's two coincidences, and therefore none, Sheriff.\" I replied. \"But let me go further, and make this small suggestion: I believe that we now know the reason Ferrell sabotaged the Electric Company substation.\" More gasps.\n\nChief Moynahan cut in: \"Mr. Crowbar, are you saying they sabotaged the power station just to get that guy to go into his little prepper room, whereupon he was extinguished like a candle because he had no oxygen?\"\n\n\"Admirably good way of putting it, Chief. And Sergeant Rudistan almost met the same fate.\" I replied. \"Look, you Detectives were saying you did not accept the explanation of the FBI that the power station sabotage was a 'dry run'. We've spent a month wondering why that was done, and why then.\n\n\"Now,\" I went on, \"a month later, we find a dead guy in his safe room, with tanks marked air but filled with C-O-2. That alone could be manslaughter. But then the filtration system was screwed with. And on top of that, the house itself was trashed by criminals looking for something. So that suggests more.\"\n\n\"But... but...\" said Sheriff Allgood, at a loss for words, and thoughts, at the moment.\n\n\"I bee-lieeeeve,\" said Chief Moynahan, \"you were about to make some assignments, Mr. Crowbar?\"\n\n\"Captain Ross, who do you want leading this one?\" I asked my Captain of Detectives.\n\n\"Parker.\" Cindy said. \"And Jerome Davis helping with it.\"\n\n\"But ma'am, I'm Parker's partner.\" said Joanne.\n\n\"I know.\" Cindy said. \"And I'll talk to y'all later about that. Anyway... guys, feel free to make use of the Iron Crowbar's brain with lots of questions for it. With his bad back, he will not be exerting himself too much. I can personally guarantee that.\" I looked over at her, and got a very strong stare right back at me.\n\n\"Good!\" I said. \"I can get some extra practice in for the Police Boxing Matches.\"\n\n\"You'd better not!\" exclaimed the Chief. He'd been getting out of his chair; now he was pointing at me with a look of pure horror on his face. \"Do not even joke with me that you would even be thinking of that.\"\n\n\"I will be in the ring at some point in time, sir.\" I said with a grin. Just as I was about to get ripped a new one, Cindy stepped into save me.\n\n\"He'll be in the ring asking the final two people if they want a shot at the title.\" Cindy said to the Chief. \"Which means he'll be asking me that.\"\n\n\"Vee shall seeee.\" said Joanne. The ol' two fingers salute was exchanged between them. Sheriff Allgood chuckled.\n\nAnd in all this fun, none of us had really noticed that Deputy Chief Harlow had left the room without a word spoken.\n\nPart 5 - Bees and Wannabees\n\n\"What's this about?\" asked Melissa Burris as Lt. Molly Evans and Detective German of the Nextdoor County Police stood before her at the Lakeside Inn & Suites. \"You trying to get me fired?\"\n\n\"No.\" said Molly. \"We told your supervisor that we needed to talk to you, and he said it was fine.\" They were in the back part of the lobby of the hotel, where it was not easy to be heard. \"We need to ask you some questions about your former husband, Tim Burris.\"\n\n\"Oh. Him.\" said Melissa disdainfully. Melissa was an average looking woman with a decent body, not fit but not out of shape, dirty blonde hair that seemed stringy and unkempt. \"I'm not surprised he's in some kind of trouble.\"\n\n\"So I guess I'll ask now why you divorced him.\" Molly said.\n\n\"He was... worthless.\" said Melissa. \"And a little bit crazy. He wouldn't go find any kind of regular job. I know he had some money, but it was me keeping the bills paid every month. He was always going around selling survival stuff at gun shows, which may or may not have paid the rent for the tables at the event. And he was always going around talking about Government takeovers and a coming civil war, and telling people they needed to be preppers. He might've had better luck quoting Revelations and Jesus and the End Times.\"\n\n\"So he was a prepper?\" Detective German asked.\n\n\"Oh yes.\" said Melissa. \"I'm sure he had some kind of cave up on the mountain behind the house. He always had muddy jeans, which I had to wash, of course.\"\n\n\"He didn't track that in the house, did he?\" asked Molly.\n\n\"Oh, no, not really.\" said Melissa. \"And I never actually found him digging his cave, but I had night manager jobs or shifts, and he always slept a lot the day after, so I figured he was doing his prepper shit at night while I wasn't there.\"\n\n\"But you don't know for sure that he had a man-cave like that, or where it would be?\" asked Molly.\n\n\"No, I never knew for sure.\" Melissa admitted.\n\n\"And Jeffrey Burnham?\" asked Detective German. \"He's Tim's friend, isn't he? He's a prepper, too?\"\n\n\"I don't know.\" said Melissa. \"Jeffrey is a cool guy. I'm not sure why he was friends with Tim, but they were. Maybe it was through the prepping meetings Tim had with his crowd.\"\n\n\"So,\" Molly said, \"I know you two were divorced, but beyond that, how are you? Friends? Indifferent? Hate each other?\"\n\n\"Uhh...\" Melissa said. \"For me, it's 'indifferent'. I don't hate the guy, I just lost respect for him and didn't want to be married to him any longer. I think he was shocked when I told him I was divorcing him. He didn't want me to leave him, but he never was violent towards me over it.\"\n\n\"And Jeff and Tim?\" asked Detective German. \"They didn't have any falling out or arguments?\"\n\n\"Not that I know of.\" said Melissa. \"I think Jeffrey didn't think much of Tim, and like I said, I don't know why they're friends. So... what's this about?\"\n\n\"One more question before I answer.\" said Molly. \"When did you last see Tim, and for that matter when did you last see Jeff?\"\n\n\"I saw Jeff on Monday.\" said Melissa. \"He just got back from a trip to Europe. I haven't seen Tim since... February, maybe?\"\n\n\"Okay.\" said Molly. \"Melissa, I'm going to have to ask you to stay in the county, and if you leave the county to notify the NCPD. I'm sorry to tell you that Tim was found dead this morning.\"\n\nMelissa's eyes widened. \"Oh my God! How?\"\n\n\"We're still trying to find that out.\" said Molly. Melissa was already starting to cry, tears flowing down her cheeks...\n\n* * * * * * * * * * * * * * * *\n\nMeanwhile...\n\nAs the Detectives were starting up their whiteboards of the case, Cindy and I came into MCD. Cindy said \"Guys, let's break for a minute and have a talk. Pull up chairs.\"\n\nThey all brought out their chairs to the middle of the room. I also pulled one up, and we sat in a circle.\n\n\"Okay,\" Cindy said, \"I've got some news, and it affected my assignments for earlier today. I'm shuffling the partners around. Joanne, you and Theo are now partners. Teddy, you and Jerome are now partners.\"\n\n\"You are obviously committed to racial diversity, Captain.\" said Theo with a grin.\n\n\"All kidding aside,\" I said, my voice cutting through the air, \"that is one reason Captain Ross is doing this, and I agreed with her reasoning. We did not have you and Jerome as partners because you're both black, but people looking to start trouble might say that we did. By doing this now, we're trying to pre-empt any... 'political' problems that might arise.\" Everyone seemed to get my hint, and understood what was going on.\n\n\"They'll probably bitch about having no blacks in Vice, then.\" said Jerome Davis.\n\n\"We have a plan for that.\" said Cindy. \"You are right that it's too lily-white in Vice, and the Council has been screaming at us to have more Uniformed Officers in Detective roles. They may begin getting their wish with regard to the Vice Squad. The next round of promotions will likely see some Detective-1s in Vice coming out of Precinct 2.\" Jerome nodded, having come from Precinct 2 himself.\n\n\"Just between the six of us sitting here,\" I said, \"you guy are probably it for MCD in the near future. We're going to start building up Vice big-time. It's been a while, and we've been fortunate, but perps are starting to realize that with Raymond Westboro gone, there's a huge gap to fill in drugs, prostitution, and petty crimes.\"\n\n\"Good!\" Joanne said. \"That means we get to have all the fun solving murders and stuff!\"\n\n\"And not as many people shooting at us.\" said Teddy Parker.\n\n\"Well, if any of you think it's too boring here in MCD,\" I said with a grin, \"I'll be sure to get you some cross-training in Vice during the shootouts.\"\n\n\"Don't give 'em ideas, sir.\" said Cindy. \"I've got enough problems keeping Captain Croyle out of further trouble.\"\n\n\"Actually, that's my job; and yes, it's a handful.\" I replied. \"Okay, you guys are doing great, and I'm very happy with this MCD team.\" I said as I worked my way into a standing position. \"Y'all keep it up. Carry on.\" With that, I left the MCD room.\n\n* * * * * * * * * * * * * * * *\n\nIt was about 7:00pm when there was a knock on my door. Chief Moynahan poked his head in. \"Got a minute, Mr. Crowbar?\"\n\n\"For you, always, Chief.\" I said. \"Come on in. I'd stand up, but my back------\"\n\n\"Oh please, stay seated.\" said the Chief. \"I appreciate the gestures of respect, but you need to relax and let your back heal. Now what you can do is get into your medicinal drawer and pour us a shot each.\"\n\nI did so. Bourbon. The slugs packed a wallop.\n\n\"Ah, good stuff.\" said the Chief. \"But I came in to give you some news...\" After giving me the news, the Chief told me to go home. \"Do not pass 'Go'. Do not collect $200.\" was how he put it.\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, the kids are in bed.\" Laura said as she came down from upstairs. I was sitting in the rocking chair, working on my laptop. \"What's got you so interested, Darling?\" my wife asked as she sat down on the sofa next to me in the chair.\n\n\"Oh, this murder case.\" I said. \"The dead man, Tim Burris, inherited his parents' estate, but it's locked into a trust. I get the feeling they thought he was pretty much a bum, so they protected the money this way.\"\n\n\"Probably a good idea.\" said Laura. \"You know, I looked into something like that for us, should something happen to us while our kids are still small. But I liked your plan of guardianship under Cindy better.\"\n\n\"Hopefully that will never come to pass,\" I said, \"and we'll be here to watch our adult children have children. Anyway, Myron could not get information on the parents, including the manner of their deaths, so I'm seeing what I can find through the FBI's resources.\"\n\n\"Find anything?\" Laura said. \"I can probably get into even deeper resources, if need be.\"\n\n\"Thanks, but I think I've found what I was looking for.\" I said. \"Seems Dr. Burris was the traveling physician for 'Victory Christian Ministries'. That name ring a bell?\"\n\n\"How could it not?\" asked Laura. \"Westboro and Oldeeds were the principals behind that setup.\"\n\n\"Very true.\" I said. \"Now Mrs. Burris is also interesting. She was doing work in the Democrat Party... first with the Texas Democrats, then with our State and with the DNC. What does that tell you?\"\n\nLaura thought about it. \"Oh... Oldeeds again. He was in Texas, then was going to move up this way.\"\n\n\"That's Iron Crowbar thinking there.\" I said with a grin. \"All those looks, and brains too.\"\n\n\"And my reward is going to be your other crowbar, when you finish this up.\" Laura said. And yes, that was a 'hint'.\n\n\"Just a couple more minutes.\" I said. \"I have the clearance to look into these files. Says they officially died in a car accident. Their bodies were pulled out of the burned-out wreckage of their car on Interstate 29 north of Kansas City. Official cause of death was the impact o their car hitting a bridge support, as there was no smoke in their lungs.\"\n\n\"However...\" I went on, \"there's a classified note here that says the bodies did not burn sufficiently to hide that they were both badly beaten, and she was repeatedly raped both vaginally and anally. So they think they were both dead before even being placed in the car. Good forensic pathologists and coroners, if you ask me.\"\n\n\"So they were moles,\" Laura said, \"and were 'made'. And we know what the Oldeeds people do to moles and spies in their midst. I'm still wanting revenge for young Mike.\" (Author's Note: A Case of Revenge, Ch. 01.)\n\n\"Yes.\" I said. \"This definitely looks like either an Oldeeds or Westboro killing. And it explains why they set up the trust for their son: they knew they could possibly be found out and murdered, so they took that step.\"\n\n\"Could be.\" said Laura. She got up. \"I'll go make us a couple of drinks, then we can go to bed.\"\n\n\"I'm going to look up one more thing before we do.\" I said. \"I promised Joanne I'd look up something for her cold case. Jimmy and Jennifer Amberton were dismissed from BigAerospaceCorp.\" As Laura left the room for the kitchen, I began typing.\n\nThe screen came up red. Uh oh, I thought, this is going to be big. \n\nAnd it was. The message said \"Access Denied: Classified Information. Top Secret:\" and the codename.\n\n\"LAURA!\" I cried out. \"COME HERE!\"\n\n\"Honey are you okay?\" she said as she ran in, thinking I'd hurt myself or something.\n\n\"Oh... physically, I'm okay... but look at this!\" I said, showing her the screen.\n\n\"Oh my God.\" Laura said, her eyes practically bulging out of her head as she looked at the screen. \"That cannot be. It can not be.\" The code name on the screen was... \n\n'BEEKEEPER'\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/safe-room-ch-01"
}