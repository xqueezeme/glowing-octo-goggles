{
    "title": "Carly's WMAF Fantasy Pt. 21",
    "pages": [
        "As always, thanks for the wonderful feedback and continued kind words. I hope everyone likes this chapter as much as I enjoyed writing it.\n\n*****\n\nI stared at the picture on Louise's phone. Had Kyrsten come to visit? Kyrsten would have told me, right? Plus her cunt is always perfectly smooth. Who was Carly seducing for me, I wondered.\n\n\"Hello... Earth to Jay? Did I lose you?\"\n\n\"What? Uh... No... I just...\"\n\n\"Weren't expecting your date to show you a picture of your fiance shaving some random slut's cunt?\" she said. Her free hand was on her hip as if she was annoyed but the sappy grin across her face revealed her true attitude. \n\n\"I know my life is a little weird but I promise THIS,\" I said waving my hand vaguely at the phone, \"Is NOT normal... even for me...\" I said defensively. Louise stared at me, \"Fine... NORMALLY it's not normal,\" I said and we both laughed.\n\n\"Okay... okay... but aren't you curious? Right down there your fiance is prepping some girl for you... don't you want to know who it is?\"\n\n\"Part of me... sure... but part of me wants our date to continue. I'd like you to get a chance to talk to Carly and...\"\n\n\"Fuck that... let's go get you some pussy,\" she said and dragged me towards my condo. Who was I to argue with that logic? She laughed the whole way down the hall before reaching into my pockets for my keys.\n\n\"Hey!\" I protested but her rummaging through my pants also caused her to graze my cock which killed off any thought of being upset. Carly's text message was right, I did have some serious blue balls from lusting after Louise all night. \n\n\"Easy there, killer. You'll get some soon,\" she said before opening the door. Surprisingly, the scene in the room looked perfectly normal. Carly was lounging on the couch, her back to us as she read a book. She turned her head to me and the expression on her face wasn't at all what I expected. She was wild eyed and lust filled. We took a couple steps inside and I quickly realized why she looked like that.\n\nLouise gasped at the sight. Carly was sitting on the couch with her thighs spread obscenely wide. They were held there by ropes tied to the legs of the couch and her ankles. She had nipple clamps on her tits and, worshipping her cunt was a sexy redhead. Presumably the same one as the picture.\n\n\"I haven't cum... Mmm... Master,\" she whimpered. \"I'm a g... goo... good girl, Master. I prepped it just for y... y... y... you.\" She said, stuttering through all of it as the woman worked her tongue on my fiance's pink, swollen cunt.\n\nI studied the girl for the first time. Carly had, indeed, prepared her for me. She had on a choker and garter belt and stockings along with some high heels. Carly knew me well. \"Who's your friend?\" I asked.\n\nBefore Carly could respond, the woman pulled away from her raw cunt and looked at me. Carly whimpered. Whether in relief or disappointment I'm not really sure. I was too distracted by the woman kneeling at her feet. It was my neighbor, Maureen. I'd been flirting with her off and on the last couple weeks and she'd let me know that the noises she was hearing through our shared wall had intrigued her... or at least she wasn't upset by them.\n\nNevertheless, seeing her kneeling on the ground in front of me, obviously dressed specifically to please me was about the last thing I expected to see. Her tanned, freckled skin was smooth and her tits were still quite perky despite age and motherhood. She looked like she was a little taller than Louise and she was grinning from ear to ear.\n\n\"Maureen?\" I asked. She stared at me blankly, a slight grin on her face the only sign she even acknowledged me.\n\n\"It's a little... kinky... Master,\" Carly said as she caught her breath.\n\n\"Well of course. We can't have a vanilla girl in my harem,\" I said with all the sarcasm I could muster.\n\n\"Hey!\" Louise said, \"I'm pretty vanilla.\"\n\nI laughed, \"We'll see,\" I said with a wink and she punched me in the shoulder playfully. \"Okay... I'll bite... what's this one's kink, Carly?\"\n\n\"It likes to be treated like an object, Master. An actual object.\"\n\n\"What? Really? Why would she want that?\"\n\n\"Yes, Master. And not 'She'... 'It'... Uhmm... IT was very specific about that.\"\n\n\"Ohhhh... I get it,\" Louise said as if she'd figured out a particularly hard math problem in class. She sauntered in front of me and unzipped my slacks while I stood there, quite dumbfounded. Then she walked over and grabbed Maureen by the hair. She paused just enough for me to see the same twinkle in Maureen's eye that I'd seen in Starla's eyes right before I gave her what she needed the first time. Then Louise pulled her to me, forcing the MILF's eager mouth around my shaft. \n\n\"She's a very smart one, Master,\" said Carly as she watched the perverted tableau unfold. Louise was standing next to me, pumping the redhead's mouth up and down my cock with abandon while she kissed me gently. \"I definitely think you chose a good addition, Master. I hope you're pleased with mine?\" her voice was uncharacteristically needy. \n\nI broke the kiss with Louise and looked over at Carly. She was still seated on the couch, trapped and spread wide. Her cunt juices were oozing all over the couch and her pinched nipples looked red and ready to burst. \"You did very well, baby. Sh...\" I stopped and corrected myself, \"IT appears to at least be a good cocksucker. Hopefully its other fuckholes are just as good.\"\n\n\"I'm sure they will be, Master. It told me how it's been so needy and empty and how it likes to listen to the way you dominate your sluts. It particularly likes the one that pretends to not like it but desperately needs it.\"\n\nStarla. That's who she was talking about. Louise's roommate and friend from high school who had a rape fetish. Like I said... all my girls seemed to have their own special kinks.\n\n\"You did very well, Carly. And you're right, I think Louise is very special. I hope you two get along well,\" I said.\n\n\"I'm sure we will, Master. Any girl that wants to date you even with all that's going on is somebody worth getting to know.\"\n\nLouise kissed me again then smiled at Carly, \"Thank you. Sherry always brags about you and I knew I'd love to meet you.\"\n\n\"Really?\" both Carly and I asked. It actually momentarily distracted me from the masterful fellatio happening at my waist. Carly and Sherry had a pretty epic rivalry and I thought that her randomly praising Carly was pretty unlikely. \n\n\"Okay... fine... she complains about you all the time and calls you a frigid bitch... well... used to call you that... For SOME reason she stopped calling you that a couple months ago.\" Louise turned back to me and kissed me while also forcing Maureen's mouth all the way down my shaft. The woman coughed for just a moment before relaxing into it and keeping my cock buried in her throat. She massaged me with her tongue while I felt her throat grip my cock tightly. Louise pulled her off and went back to fucking my cock with the submissive redhead's face, controlling every motion as she slammed the women's mouth onto my cock repeatedly.\n\nLouise gave me a little wink as she guided my hand to the back of Maureen's head then sauntered over to where Carly was sitting on the couch, \"You know, Carly. I'm going to fuck your fiance soon.\"\n\nCarly's eyes grew wide and she bit her lip. \"I hope so,\" she whispered softly. Her voice was breathy and Louise laughed. \n\n\"I hope he likes me enough to keep me as his girlfriend. Do you think you'd be okay with that?\"\n\nCarly simply nodded as she wiggled in her seat from arousal, her legs still stuck spread wide and vulnerable. I watched my beautiful, sexy Asian fiance become as aroused as I'd ever seen her. Louise leaned in and gave her a very soft, almost chaste kiss on the lips and then whispered, \"I'll never take him from you... but I could if I wanted to.\"\n\nIt was too much for Carly, she lunged at Louise and kissed her fiercely, surprising the young, thin girl. Despite the abruptness, Louise kissed her back with fervor. Her hand dropped between Carly's legs and she instantly bucked her hips up to the college girl's questing fingers. Louise crawled up onto her knees on the couch, towering over Carly as they continued to make out. \"You like that, don't you slut? Would you like me to steal him from you?\"\n\nCarly shook her head fiercely from side to side, not trusting herself to say anything.\n\n\"But you like knowing that I could, don't you?\"\n\nCarly's eyes flicked over to me. I was standing there, absentmindedly skull fucking the redhead that Carly had brought me while my newest girlfriend... a girl I hadn't even slept with, fucked with Carly's mind. I could see in that instant what Carly wanted. She turned back to Louise and looked at her, nodding an almost imperceptible nod. \n\n\"Tell her what you want, Carly,\" I said encouragingly. \"Be honest.\"\n\n\"I... I... I want Jay to have whomever he wants. I want him to... to... love whoever he wants. But... but I want him to always love me.\"\n\n\"And what if he loves someone else more than you?\" Louise said. Her tone, previously hard and teasing was softer now. She genuinely wanted to know what Carly's kinks and limits were. It made me want her even more.\n\n\"I won't. I'll never love anyone more than Carly. I'm not wired that way. Either I love the girl or I don't. I love Kyrsten just as much as Carly already. No more... no less,\" I said. Maureen cooed on my cock but it barely registered. The scene before me was way hotter than anything I'd ever seen. \n\nCarly started softly crying at the words and Louise wiped them up, \"He's a good man, isn't he, slut?\" Carly nodded and looked up at Louise who was gently kissing her cheeks. \"You know... I was going to force you to eat me out... I'm so fucking horny from teasing your man all night. I was going to use you to get me off while he fucked his other new toy in front of us.\" Carly trembled as Louise kept talking, kissing her way down her neck and teasing her clamped nipples as she worked lower. \"But I think you don't need that tonight. I think you need to cum and cum hard.\"\n\n\"Oh, God,\" Carly said as Louise's tongue grazed her eager clit.\n\n\"Some of us aren't dumb little cum dumps who can't cum without permission. So I'll get myself off at home later. You just feel free to cum as hard as you want... once Mr. S gives you permission that is.\"\n\n\"Oh fuck,\" Carly said again as Louise lashed her tongue into her spread cunt and across her engorged clit.\n\n\"I'd forgotten how good pussy tastes,\" Louise said as she dove back in. Carly's eyes jumped over to me, pleading silently for permission to cum. \n\nI smiled at her, \"You can cum when I do, baby.\"\n\n\"Oh thank you, Master. Thank you so much. You're so much better than I deserve,\" she gushed as she bucked her hips up into Louise's hungry mouth. \"Please make him cum quick. I need it so bad,\" Carly called out desperately to Maureen. \n\nMaureen responded by sucking my cock harder and looking up at me with eyes that somehow conveyed innocence and lust simultaneously. As you know, I'm not averse to tormenting Carly. And on a different night, I might have dragged things out much longer. Two things kept me from that. The first was that Carly so obviously needed this. She had pushed herself pretty hard edging with Maureen while waiting for me and she looked frazzled and broken and beyond desperate. The second was that the whole scene was so fucking hot I couldn't have delayed things even if I'd wanted to. I gripped Maureen's hair in one hand and just started pounding. She started making the kinds of obscene gurgling noises you only hear in pornos. I'd honestly never heard a woman sound like that before and thought it was just one of those things that porn makes up. But Maureen just knelt there and took it. Every inch of my cock. \n\nI only lasted a couple minutes like that, my eyes locked with Carly's as we both received pleasure from two very different, but equally willing, hot women. I felt my orgasm approach and managed a, \"Now, my love,\" to Carly as I shot my load into and on the sexy redhead's mouth. \n\nCarly didn't need any more encouragement as she screamed a loud, high pitched shout of her own orgasm. \"Thank you,\" she shrieked as Louise devoured her spasming cunt, lapping up the juices pouring from her empty hole. Louise seemed to take perverse pleasure in licking her clit far longer than was comfortable, causing Carly to beg incoherently both to stop and to continue until a second orgasm overcame her. By that time, mindful of Maureen's little fetish, I'd wiped my cock off in her hair and left her sitting alone on the ground, makeup smeared and cum crusted.\n\nI walked over to Louise and tapped her shoulder, giving her a shake of the head to tell her to backoff. She happily did, standing up and straightening out her own clothes. I sat on the couch, naked and kissed Carly who was still recovering from the two powerful orgasms. I pulled the clamps gently off her tits, kissing them and licking them afterwards which caused her to twitch more with little orgasm aftershocks. \n\n\"I love you,\" I whispered. \n\n\"I know,\" she whispered back. It was a strangely intimate moment. Made all the stranger by the presence of two other women, neither of whom I'd ever fucked but both of whom I knew I would. Hopefully many times. I untied Carly's ankles and led her, on unsteady legs, to the bathroom to get cleaned up. When I came back, Louise and Maureen were chatting casually.\n\n\"So you really like... that?\" Louise was asking as I walked back in.\n\nMaureen's eyes glanced over to me as I heard her speak for the first time that night, \"Oh yeah. Nothing better than knowing that the use of your body is pleasing your man. Or A man in this case,\" she said, licking her lips slightly at the sight of my cock.\n\n\"I could never be like that. I mean... I don't need to be all dominant and stuff... but to be treated like an object... I mean... no offense...\"\n\n\"No... no... I totally understand and believe me, you shouldn't. Right girl and right guy only. That was my problem. I put my trust in someone that didn't deserve it. And I should have realized that he was good at treating me like an object because he literally viewed me like an object.\"\n\n\"Really? What happened... I mean... if you don't mind me asking.\"\n\n\"No... it's fine... He was my college boyfriend. It's almost cliche really. I dropped out of school to put him through med school. He pushed all my buttons and the sex was unbelievable. He knew just how to treat me to make me gush. He casually offered me up to his friends to settle bets... the whole nine yards.\"\n\n\"Seriously? Wow... I mean... I just...,\" Louise said. I sat down beside her, still naked, and kissed her cheek gently. \n\n\"I know... I know... I'm a freak. But I loved it. I loved being the free use slut at Super Bowl parties. Or the prize at a poker night. I loved being bossed around and told what to do. Even if it wasn't always sexual, it thrilled me.\"\n\n\"Sounds perfect,\" Louise said. Her hand which had rested on my thigh now slid up and found my cock. She started stroking me gently as it slowly hardened in her tiny hand. \"I mean perfect for you.\"\n\n\"It was... as long as he needed me to keep paying the bills. The problem was that he saw me as an actual object. It wasn't just limited to sex for him. It was everything. He graduated from med school and immediately started fucking some nurse at the hospital. And... truthfully... I'm a lot like Carly... I'd have been totally fine with that. But that bitch wasn't... and that's when the problem started. He told me...\" she paused, looking away for the first time as the emotion of her story hit her, \"That he loved her and she didn't want him to... to... fuck me anymore. We had two kids and this... bitch... didn't want her boyfriend to fuck his wife.\" The last words were filled with absolute venom.\n\n\"Dumbass,\" Louise said. Her hand slowly stroking my cock was driving me nuts but I wasn't going to stop the story.\n\n\"And you know how pathetic I was? I offered to wear a chastity belt and... and give her the key. I thought I could make it a sex game... you know... It wouldn't be me not getting fucked because he loved her more than he ever loved me. It would be him denying me because it made me hot.\" She gathered herself and finished, \"He laughed at me that night and I knew it was over. I realized how pathetic I was. I realized I'd let the kink take over my life and how absolutely blind I'd been. Lowest fucking point of my life.\"\n\n\"Wow,\" I said, though whether it was from the stroking Louise was giving me or the craziness of the story, I'm not sure I could honestly say. \n\n\"Yeah,\" she chuckled, eyes flicking down to my cock. \"But that's why I was so intrigued by you guys and it's fucking hot. I had to know. I had to find out. I kind of thought any guy who would entertain my kink would be either an asshole at best or a psycho at worst.\"\n\nCarly walked back in wearing a t-shirt and nothing else. She came and sat on the other side of me as we continued to listen to Maureen.\n\n\"I came over tonight and talked to Carly. She loves you so much, Jay,\" the redhead said, tears just barely pooling at the corners of her eyes. \"She told me the whole story. All the women... everything. She knew what I needed to hear. It kind of restored my faith in men, frankly.\"\n\nI was leaning back with my eyes closed, listening to this while Louise continued to play with my, once again hard, cock. \n\n\"But aren't you doing the thing you're counseling me not to do? Jumping in with Mr. S?\" Louise asked. Her hand gripped my cock firmly and I felt it twitch.\n\n\"Maybe... but not really. I knew enough from Carly... and from the thin walls... to know that Jay would be safe to scratch my itch. I still don't know if he's the right guy to take things further with... but I knew he'd give me what I needed... and then some, frankly. But you're dating him. And dating him knowing he already has a fiance and another girlfriend. So at least you're going in eyes wide open but... and pardon me for prying, I saw the way you looked at him tonight. I'm just saying that you're young and should be careful.\"\n\nLouise smirked, \"That's why I haven't fucked him yet.\"\n\nI sat up at that, \"Bullshit,\" I said as Maureen said, \"What?\"\n\n\"That's right... I haven't let him fuck me... I'm still a virgin.\"\n\nI laughed... \"Excuse me?\"\n\nLouise looked at me and then down at her hand, almost as if she just realized what she'd been doing. She looked slightly embarrassed but didn't release my cock. Instead, she said in a slightly mollified tone, \"Okay... fine... at first I didn't sleep with him... now he's not sleeping with me.\"\n\nMaureen laughed, \"That is so deliciously fucked up. I love it. Jay... you are definitely a stud I want to get to know better. I need to know what makes you tick. I've got to get back to my kids tonight... this was great and I 100% want to do it again. Carly has my number. Text me and, if I can, I'll be over right away,\" she said as she got up and put on a coat. She came over to me and whispered in my ear, \"And if I'm wet, don't even think of treating me any nicer than you did tonight... In fact... please be worse next time.\"\n\nThe beautiful, auburn haired MILF walked out, leaving me alone with the other two women. My mouth was still slack as I was dumbstruck by my continued good luck. Louise grabbed my chin and gave me a thorough kiss before breaking it and looking me in the eyes. Her gaze fell on me and she looked as if she was searching for something deep in my soul. Slowly, a smile crept across her lips and she turned my head around to look at Carly. Carly was sitting beside me, nervously biting her lip and watching us. I took Louise's hint and leaned over to kiss my fiance.\n\n\"I'm going to leave you two alone in a few minutes. I think you both need it. But I'm going to fuck him next time, Carly. I want it. I'm ready. And I know he wants it too. I'm going to fuck him and you're going to watch, Carly. And you'll see how much better he responds to my tight, white cunt.\"",
        "Carly moaned into my mouth in arousal at each word. Louise had her figured out and was expertly pushing her buttons. She's found that exact balance of cruel and compassionate that I'd struggled with.\n\n\"But first, I've got to get some of this glorious cock,\" she said. Suddenly, my rigid shaft was enveloped by a second new mouth in the same night. Carly's kisses became even more energetic as we made out like two long lost lovers while Louise worked me over. Not surprisingly, her technique was nowhere near as polished or... uhmm... accommodating as some of my other girls. She lovingly licked and stroked my cock, taking only a couple inches into her throat. What she lacked in technique, however, she more than made up for in enthusiasm and happiness. With Carly moaning in my mouth and Louise happily gurgling around my cock, I was in heaven.\n\n\"I love you,\" I whispered to Carly.\n\n\"I love you too, Master.\"\n\n\"I like both of you a lot,\" Louise said from below us and Carly and I giggled before resuming our kiss. At some point, a satisfied moan erupted from Carly's mouth and I glanced down to see Louise fingering my fiance's cunt while still sucking my cock. We continued like that for twenty minutes, Louise never letting up or showing fatigue. Her only change was to slide down to the floor to get a better angle on my dick. \n\nEventually, Carly stopped kissing me and whispered into my ear, \"Give her your cum, Master. Let her drink your beautiful white juice so she understands what she is.\"\n\nLouise moaned encouragingly and I took my shaft and started stroking as the young girl sat back and watched, mouth open, tongue out, literally begging for my jizz. \"Mr. S... I'll get better... I promise. I'll be able to take your whole cock down my throat just like your other girls. I want to be just as capable as all the dumb cunts you stick your cock into. Please give it to me, Mr. S. I want it so bad.\"\n\nCarly's tongue flicked across my ear, tracing the ridges before whispering huskily, \"Once she has your cum, Master. She'll never stop needing you. She's a slut just like us.\"\n\nThe combination of Louise begging at my feet and Carly talking dirty in my ear finally did it and I shot my cum. The first strand landed across Louise's lips but she quickly lunged forward to take the rest of my load down her throat. She murmured greedily as she licked and sucked my cum from my cock. \n\nWhen we all calmed down, Louise wiped her face and stood up. \"Thanks for the wonderful evening, Mr. S. It was great to talk to you again, Carly. I hope I'll be seeing so much more of both of you soon.\" Her face was bright and smiling, all innocence and bliss despite the debauchery that she'd been an active participant of tonight.\n\n\"Absolutely, Louise,\" I said and stood up to kiss her. My cum was still on her lips, cool and salty, but I didn't care. Our tongues danced together until we came apart, panting at each other. \"The doorman downstairs will get you a cab,\" I said and I handed her a $20 from my wallet. She smiled and tucked the money into her bra and I smacked her ass as she walked out.\n\nNow, with the place to ourselves, I went back to Carly. I scooped her lithe form up in my arms and carried her to bed, tossing her down with a laugh.\n\n\"So what do you think of her?\" I asked, flopping down beside my beautiful Asian lover.\n\n\"I think she's wonderful, Master.\" Carly kissed me sweetly and draped her arm and leg over me as she rested on my shoulder.\n\n\"Are you sure... I mean... I think... well...,\" I stammered, uncertain of the words to use.\n\n\"You want to keep her?\"\n\n\"I haven't even had her yet,\" I said.\n\n\"I mean you think she's something long term.\"\n\n\"Yes... I definitely think so.\"\n\n\"It's not just the mystery of her? The puzzle?\"\n\n\"I thought it was at first,\" I said truthfully, \"But tonight, watching her so effortlessly push your buttons... I mean... she did right?\"\n\nCarly affirmed dreamily, \"Oh hell yeah.\"\n\nI laughed, \"I thought so. When she decided to make you cum instead of the other way around... I knew she was special... I knew she got it.\"\n\nCarly nodded silently.\n\n\"And I want her. I feel that same possessiveness over her as I do over you and Kyrsten.\"\n\n\"I can't speak for Kyrsten but I want you to have her too, Master. She's wonderful. She's obviously great for you. You should see where this goes.\"\n\n\"So my fiance is saying it's okay to have a second girlfriend.\"\n\n\"You know I'd never tell you 'No', Master.\"\n\n\"Carly... it's important to me that on this issue, you tell me 'No' if you need to.\"\n\n\"Jay... I promise you I'll never deny you anything. But I also promise you I'll always be open and honest with you and will never lie. She's wonderful. I think Kyrsten will think she's wonderful too. And if our little threesome becomes a foursome, I think we'll all be very, very happy together.\"\n\nI looked at my wonderful fiance and melted, \"You're amazing,\" I said, \"Much better than I deserve.\"\n\n\"Well... that's because I was made for you, Master.\"\n\n\"I thought Asian sluts were bred for white cock?\" I asked with a smirk.\n\n\"They are, Master. That's why my mother and sister and roommates all submitted to you so easily. But I also know that you and I belong together in a different... better way,\" she said. She kissed me sweetly and slowly. \n\nI slowly kissed down her body until I found her moist cunt. She needed no guidance, swinging her legs wide as I found her gaping hole leaking cunt juice already.\n\n\"Tell me about Maureen,\" I said before diving back in.\n\n\"Ohhh,\" she moaned, \"I was on the couch like you found me edging like a good chink cunt, Master. My legs were wide and I was imagining you and Louise as I took myself over and over to the edge. Oh god... And then she knocked on the door and... umm... yessss,\" she said distractedly as I slid a finger into her cunt before resuming my tongue's work. \"I threw on a robe and ran to the door thinking it was you and your date. I was... oh fuck... so excited about the thought of watching you two fuck... I was disappointed when I saw her red hair and then heard her voice. She asked to come in and I let her, knowing that you'd be annoyed that I stopped edging. But then I thought you might whip me for it so it might be worth it.\"\n\nI sat up and playfully slapped Carly's thigh. She moaned and spread herself wider so I smacked her harder then harder again. \"Yesss, Master... hurt your little yellow pain slut,\" she said and she reached down to spread her cunt lips wide. I got the hint and quickly smacked her exposed clit causing her to buck and squirm before I descended to again lick her little nub.\n\n\"Thank you, Master. I love you so much, Master.\"\n\nI smacked her cunt harder and said, \"Keep telling the story, slut.\"\n\n\"Yes, Master. Thank you. I opened the door and I was so horny that just looking at her I knew I wanted her. And I wanted her for you. For us. She came in and I... oh yeah... offered her a seat and a drink. She didn't mince words. She started telling me what she'd seen and heard over the last month. MMMMMmmm... yes... She told me how much she liked it. How she thought it was amazing that I was okay with it... I told her all about you, Master. How wonderful and caring you are. But also how cruel you are when I need it,\" she said. I spread her cunt lips and flicked her clit three times in quick succession. Carly screamed and her hips lunged forward, eager for the torment. \"Like right now... so perfectly cruel, Master.\"\n\n\"Keep going, bitch,\" I said, giving her nipple a hard twist.\n\n\"Yesss... Master... thank you. She ate it all up, Master. I knew she was like me... I knew she was perfect for you. When she started to explain her kink, I knew how happy you'd be to have a free use cock socket right next door. She started talking about how much she loved hearing you with Starla especially and I just... oh, fuck... I just ordered her to strip... and she did. She didn't hesitate. She knew I understood. I told her to run down the hall naked and come back wearing a garter belt and choker... She didn't even look out in the hallway. It was so fucking hot, Master. I wish you'd... mmmm... I wish you'd been here. She'll do anything you tell her. And when I started calling her 'It' she was practically creaming herself the little slut.\"\n\n\"So you liked being the dominant one for a bit?\" I asked playfully. My fingers kept working on her cunt as I positioned my cock at her entrance. \n\nCarly smiled coyly at me, \"A good Asian wife knows that her white god has many perversions and she should be prepared to entertain all of them.\"\n\n\"Good girl,\" I said slamming into her and making her scream at the top of her lungs. I rolled onto my back, not disengaging from the warm cunt that was now wrapped around me. \"And then what, baby?\"\n\nCarly started grinding her hips on me, seeking to sink my cock into her cunt as fully as possible. \"It came back and we took that picture. It's cunt was all hairy and I knew you'd hate that. Then I made it tie my ankles and clamp my tits. And then I just made it eat my pussy until I made it stop. I repeated that over and over, never finding relief because I knew you'd want to see me broken and desperate... and I was, Master. I was so fucking broken and needed anything.\"\n\n\"I love you, Carly.\"\n\nShe fell forward onto her hand and smiled. Her hair fell around her head, enveloping my face and trapping us in our own little private world for a moment. \"I love you too, Jay.\" \n\n\"I know baby. And that's why I'm going to give you a chance to go to bed happy.\"\n\n\"A chance, Master?\" she said with a slight tremor in her voice.\n\n\"I've already cum twice tonight but I'd love to cum inside some nice tight yellow pussy. So you have 30 minutes to make me cum again. If you do, you can cum. If you can't, I'm going to gag you, cuff you and shove dildos in your cunt and ass and make you sleep like that.\"\n\nCarly shuddered and moaned, nodding her eager agreement with my harsh proposal. She tried... she really did. She milked my cock with her tight cunt. She talked dirty. She promised me increasingly decadent and depraved pleasures. But I just lay there as she did it, grinding into me with increased desperation.\n\n\"That's it... thirty minutes, slut.\"\n\nShe whimpered as she pulled off of me, her cunt lips distended and gaping. \"Yes, Master. I understand. I was an ineffective fuck hole tonight so please punish me.\"\n\n\"Punish you? Oh no, baby. This is the reward. You did such a good job trying to make me cum that you get to be frustrated all night. Doesn't that make you happy.\"\n\nShe grinned at me before playfully sticking her tongue out, \"As long as it makes you happy, Master.\"\n\nI got her tied up and ready quickly. She looked so hot squirming on the bed all bound up that I almost wanted to fuck her again. But I knew this would lead to amazing morning sex and i was willing to be patient. After she was all ready, I took a picture of her and sent it to Laurie and Maureen.\n\nMe: Thanks for the great night ladies. [Picture]<br>Maureen: I heard you guys for the last hour. I've been cumming over and over. LOL<br>Louise: I just finished my first orgasm. Now I'm going to jill off to this, Mr. S. Don't be too mean to the little Asian cunt. ;)\n\nI laughed and showed the messages to Carly, \"Maybe I should send that picture to your Mom and Dad too, slut? Would you like them to see what you've become. Maybe your Dad could use it as inspiration?\"\n\nThrough the gag she moaned out but I couldn't tell what she was saying. It wasn't clear whether she was happy about the thought or not. I thought about it for a moment.\n\n\"Do you want me to send this to your parents?\"\n\nShe shook her head 'No'.\n\n\"Because you don't want them to see you like this?\"\n\nShe nodded slowly, looking at me with wide, lust filled eyes.\n\n\"What if I think your father needs some inspiration though? Would you object to your mother being given what I think she needs?\"\n\nShe shook her head slowly in the negative.\n\nI typed out a message to her father.\n\nMe: I thought this might give you some inspiration for you and your wife tonight. [Picture]\n\nI then turned the phone to Carly and showed her the message, unsent. \"Okay you dumb, pathetic little chink fuck hole. You can decide. You can choose whether your pride is more important than your Mother's happiness.\"\n\nCarly thrashed valiantly against the restraints before looking at me with awe. She leaned forward slowly and tapped the \"Send\" button with her nose before flopping back in frustration and arousal. \n\n\"Good girl,\" I whispered to her sweetly as I laid down in bed and stroked my cock gently beside her. About fifteen minutes later, I got a reply from Carly's father. It was simply a picture but it said a lot. \"I think I'm going to fuck your mother again, baby.\" I turned the phone so Carly could see it. Her mother was tied up, legs spread. She had three white dildos in her. One in her cunt, one in her ass and another taped into her mouth. Her makeup was bright and gaudy and smeared. She had a wild eyed look to her that indicated she might be near her breaking point. Across her stomach were written the words, \"White breeding hole,\" with an arrow to her cunt. The text simply said, \"She has responded well to training.\"\n\nAs I showed the picture to Carly and she moaned in obvious arousal and happiness. \"I guess you were right about Asian women in your family. They really do crave white dominance. Now... try to get some sleep, slut.\"\n\nAnd with that, I drifted off to a wonderful, peaceful slumber while Carly enjoyed the most delicious night of torment of her life.\n\n--\n\nI was woken up at 6am by an absolutely desperate Carly. That in and of itself is unusual because normally Carly sleeps the sleep of the dead until noon. That morning, however, she'd been awake almost all night, drifting in and out of sexy dreams and erotic fantasies. \n\n\"Do you need something, dear?\" I asked with mock sweetness.\n\nShe nodded frantically yes, her eyes wild and her hair a mess. I rolled her on her stomach and pulled the dildo out of her ass, \"Such a good dumb cunt you are,\" I whispered as I sank my morning wood into her gaping ass. \n\nShe grunted and moaned as I pounded away. She kept trying to say, \"Thank you, Master\" but it simply came out \"Fmack oo athter,\" as the ball gag kept her from talking well. I fucked her harder and harder before finally depositing a load in her back door before leaving her there still unfulfilled. As I got dressed, I tormented her with my plans for the day, describing in detail all the pussy I was going to fuck. She squirmed and wiggled, making pleading noises with each declaration of mine.\n\nFinally, I whispered in her ear, \"Clean yourself up, whore,\" as I unclicked the cuffs behind her and smacked her ass. \n\nShe let out a little yelp as she rubbed her ass, \"Yes, Master. Thank you, Master.\" As I walked out, I saw her legs kick cutely in the bed. It was almost girlish and made me smile.\n\nIt was hard to keep my mind on things at work. So much had happened over the last few days. I was simultaneously smitten by Louise and desperately in love with Carly. Mixed in with that was that I was really starting to miss Kyrsten. It didn't help that my cock was actually slightly sore from all the action I'd been getting. And if all that wasn't enough, Victoria was looking particularly fetching this morning with a tastefully low-cut blouse and flouncy skirt that just barely hinted at the stockings underneath if you looked just right. And I admit, I looked just right... a couple of times.\n\nOn one of those occasions when I was stealing glances that Tabitha walked in. Tabitha, you may remember, was the sexy latina messenger girl I'd been lusting after from afar. She was the only girl Carly hadn't gotten a really good read on either. \n\nI happened to be standing at Victoria's desk making idle chat while she typed a memo. She kept inching her skirt up and leaning forward, giving me a great view of her massive cleavage and silk covered legs. My ogling was interrupted by the soft \"Ding\" of the elevator and I looked up. It was a pretty hot day and Tabitha was wearing short bike shorts and a white tank top and sports bra. It showed off her hard, brown body and got me thinking a pretty wild variety of thoughts. Her blonde hair was tied back in a pony tail and her bright white smile lit up a little extra when she saw Victoria and I.\n\n\"Tabitha!\" Victoria said loudly.\n\n\"Hey there... damn girl, you're looking pretty hot lately. New man?\"\n\nTo her credit, Victoria didn't look at me. She simply smiled a tight lipped smile and stage whispered, \"Maybe... okay... yes... and one hell of a man.\"\n\n\"I think this is where I'm supposed to say, 'Aye Papi' and then rattle off something risque in broken spanglish, right?\"\n\nBoth girls laughed as Victoria signed for the package. I watched her walk away, marveling at the tight ass and powerful legs. When the elevator door closed, I turned abruptly to Victoria, \"You know her?\"\n\n\"Tabitha? Sure... I mean she's been the delivery girl here for years. I think she was delivering before I started, actually.\"\n\n\"Huh... I never really noticed her much until recently.\"\n\nVictoria laughed, \"But now that you're juggling forty seven women you noticed her?\"\n\n\"It's not nearly that many,\" I told her, \"But yeah... I've been pretty hyper aware of beautiful women lately. Are you guys friends?\"\n\n\"Not really. She's asked me out for drinks a couple times... should I accept the offer, Mr. S?\"\n\n\"You definitely should. Get to know her. Find out if you think she might be... interested.\"\n\n\"Absolutely, Sir. Consider it done,\" Victoria said and made a simple, discrete note on a post-it before returning to her work as if what we were discussing was just another mundane work detail.\n\n\"Can you send over Daphne and Hideo. I need to discuss something with them.\"\n\n\"Yes, Sir. Should I lock the door when they arrive?\"\n\n\"That would be helpful, thank you,\" I said with a smile.\n\nFive minutes later, the door was being clicked quietly behind the two young employees as they sat down in my office. \n\n\"First, I want to say that the company is very happy with the work you've been doing. We hope both of you are happy here and will be with us for quite awhile?\"\n\nDaphne nodded then licked her lips at me in a very unprofessional manner. Hideo responded with a simple, \"Yes, Sir.\" \n\n\"Second, our whole situation is complicated and I wanted to make sure both of you are still okay with everything?\"\n\n\"Yes, Sir,\" Hideo repeated, this time a little more hesitantly.\n\n\"I've been very pleased, Sir. My situation has improved greatly over the last few weeks,\" she said and shot Hideo a snarky look. Her attitude was, as always, both grating and arousing. Something about the bitchiness and the knowledge that I could take her down a peg was super hot. I snapped my fingers and she looked at me, instantly her eyes shone with lust. I motioned her over to me and pushed her firmly to the floor where she wordlessly fished out my cock and started sucking. \n\n\"Hideo, are you still happy with Sherry?\" I asked him. The young man looked startled by the question. I guess it was a little non sequitur considering I just had Daphne suck my cock with a simple gesture.\n\n\"Uhmm... yes... yes sir, I am.\"\n\n\"Excellent... I think she's very happy with you too,\" I told him as I rested my hand on Daphne's head and slowly took control of the pace.\n\n\"She is? I mean... I hope she is, Sir. It's hard to tell with her.\"\n\n\"I understand. But you focus on doing what you're doing. She's very grateful for your support for nights like the other night. I hope you don't judge her too harshly,\" I said.\n\n\"Oh no, Sir. Not at all. I mean... I wish things were different but...\"\n\n\"Do you though?\" I asked him as I shoved Daphne down on my cock. She didn't squirm or resist, simply took me into the back of her throat without effort. \"I mean... if you wanted something different, I'm sure you could find a girl like her without all of this baggage.\"",
        "\"That's just it, Jay... er... Mr. Simpson?\"\n\n\"Jay is fine when we're alone.\"\n\n\"Uhmm... okay, Sir... Well... Sherry wouldn't be Sherry without all the other stuff. She'd be somebody else... and... Well... I don't want somebody else.\"\n\n\"Well said,\" I told Hideo. \"I just wanted you to know that I don't have plans of relinquishing control over her. I enjoy fucking her and I plan on continuing that.\"\n\nHideo squirmed, clearly both uncomfortable and a little turned on.\n\nI continued on, \"I might even knock her up someday,\" I said, testing the waters. He squirmed some more. \"Can you see yourself raising a child as your own that you knew wasn't yours?\"\n\nDaphne was now sucking hard and had reached under her dress to finger herself. I knew that being with me when I showed my dominance over Hideo turned her on. I didn't realize by how much. After several moments of silence, Hideo answered. \"It wouldn't be my first choice, Sir. But if that's what it takes.\"\n\n\"It's either that or become the man she needs you to be. Those are your choices if you want to be with her.\"\n\n\"I don't know if I could be like... this, Jay,\" he said, gesturing at Daphne.\n\n\"Maybe not... but then you need to be happy with me fucking, using, tormenting and breeding your cute little slut girlfriend.\"\n\nHideo gave it thought before finally standing and extending his hand, \"I appreciate the counsel, Mr. Simpson.\"\n\n\"No problem. Think about what I said. Now, if you could have Victoria come in here after you leave, that would be terrific.\"\n\nHis eyes got wide at the implication. I guess I'd kept my new office affair a secret up until now. I knew I could trust Hideo to keep a secret. 5 seconds after he slipped out, Victoria slipped in and locked the door behind her. \"Yes, Mr. S?\" she said as if the blonde girl sucking me off in front of her was the most normal thing in the world.\n\n\"Victoria, sit down,\" I told her as I leaned back. \"You wont a contest with this slut the other day and I think it's only fair to repeat the challenge. So Daphne, if you can get me off before Victoria cums, you can have a reward. If not, you owe me another favor. Deal?\"\n\nDaphne simply nodded while redoubling her efforts on my cock. Victoria's eyes smoldered as she immediately stripped out of her top, revealing her mammoth tits and new tattoos. She traced the letters with one hand while fingering herself with the other. As hot as that was, it was the look in her eyes that got me. Her mouth was hanging slightly open and her glassy eyes were wide as she stared at me. No... almost through me. It was like watching her brain switch off and she was being run only by her cunt. And then she started talking.\n\n\"Please, Mr. S... will you defile me with your cock. Use me any way you want. My body exists to serve you in whatever depraved, twisted way you want. It doesn't matter how awful or immoral I think it is... All that matters is that my body, mind and soul keeps you happy and gets you off. You own me... the words are right here to prove it.\"\n\nDespite the game being to race me to an orgasm, Victoria didn't want that. She simply wanted me to feel pleasure. The thought made my cock surge down Daphne's throat causing her to gag slightly. The blonde girl never stopped, however. She simply impaled herself harder and faster on my shaft. When I looked up, Victoria's legs were spread wide, one on each leg of the chair and she was plunging three fingers into her gaping cunt. I could see into her hot, pink hole every time her fingers came out. \"See, Mr. S. My empty pussy is a barren waste without your godlike cock. I need to worship your cock in this most sacred hole. I need your seed to spill into me. I need to know that I'm pleasing you,\" she said. \n\n\"Please me by cumming, Victoria,\" I whispered, gritting my teeth to hold back my own orgasm. I'd started this little game to torment Daphne and bring her down a peg. But I was quickly getting to a point of no return. \n\nVictoria winked at me then started strumming her cilt hard and fast. She shot off almost immediately twitch and spasming as her legs jerked wildly. That was enough for me and I came myself right after, shooting my thick load down Daphne's throat. I felt all my muscles relax as I sat back in my chair. Daphne also leaned back and looked up at me with a happy little smile. \"I hate losing but damn if this isn't fun,\" she said with a smile.\n\n\"Two favors you owe me now, baby?\" I said.\n\n\"I can't wait to repay them,\" she whispered huskily. She pulled a compact out and started fixing her makeup, wiping away the evidence of our philandering. Victoria also put her clothes back on and straightened herself up returning to normal secretary mode as if nothing unusual had just happened.\n\nWhen the two girls left, I checked my phone.\n\nLouise: Can we hurry up and get our third date done? I'm tired of playing games and waiting... Master. \ud83d\ude08\ud83c\udf46\ud83d\udc4c\ud83d\udca6\ud83d\udca6\ud83d\udca6 \ud83d\ude08\n\n--\n\nChapter 22\n\nTo say I rushed out after work would be an understatement. I practically sprinted out of the building and grabbed the first cab that vaguely looked at me. A generous tip and a hair raising ride through rush hour later I was standing at the door to the girl's room, grinning ear to ear. I knocked on the door and a soft, \"Come in,\" came from the room.\n\nI opened the door and saw Starla and Sherry sitting at the kitchen counter, deep in discussion. Sherry looked up at me and her beautiful smile spread across her face.\n\n\"Hello, Master,\" she said to me in a sultry tone.\n\n\"Slut,\" Starla said but without any venom. Sherry simply stuck her tongue out at her roommate before returning her attention to me.\n\n\"Hideo said you had a little talk with him today. He tried to lay down the law to me. It was so cute.\"\n\n\"Well I know you have certain needs,\" I said as I tried to subtly look into the bedroom for Louise.\n\n\"Master, I will fuck whoever you tell me to. But what I need is a big thick white cock and a dominant white owner,\" she was watching me, no smile, no emotion. Simply trying to judge my reaction.\n\nI stopped looking around and focused on her. \"Don't worry, Sherry. I am never going to give you away. I've been clear from the moment this started that if Hideo was able to TAKE you away, I wouldn't stop it. But if he's not...\" I paused meaningfully before walking up to her. I could see her breath quicken and her chest heave. The anticipation of what I was going to do or say, \"Then Carly won't be the only pregnant chink carrying a superior white baby.\"\n\nHer eyes fluttered and she moaned softly, \"Thank you, Master.\" \n\n\"Now... I want you to do me a favor tonight. To show me how truly submissive you are to me and not Hideo.\"\n\n\"Yes, Master?\"\n\n\"Go over to his place and make him eat you to as many orgasms as you can take.\"\n\n\"But... but... I'll be all bitchy like you hate?\" she said, confused.\n\n\"Exactly... take him out to dinner and show him how you are after you've been sated. Explain it all to him. Tell him everything. Tell him how being denied by my big white cock makes you feel. Tell him how he's only good for giving you orgasms so you can go back to being denied by a real man.\"\n\nSherry's eyes were wide and she nodded in understanding. \"Yes, Master.\" She hopped off her chair and ran into the bedroom. \n\n\"You really have all of them wrapped around your finger, don't you?\" Starla said.\n\nI looked at the busty girl. The girl that had begged Kyrsten to get me to force myself on her. In many ways, Starla was my kinkiest slut... though maybe Maureen was close... or Sherry... or... okay... well, they were all pretty kinky. \"I think it would be more accurate to say I have all of you wrapped around my cock.\"\n\nShe \"harumphed\" but didn't say anything, simply folded her arms across her chest and looked at me.\n\n\"Be honest, for once, Starla. You're wet right now thinking of being fucked and Sherry finding out your perverted little fetish, aren't you?\"\n\nHer mouth hung open and she tried to shake her head side to side, \"No,\" she whispered defensively. \"I... I... I don't want that...\"\n\n\"Then what do you want, Starla? Do you want to be my girlfriend? Is that what you imagine? Do you want to be girl number 4 in my life?\"\n\nShe thought about it for a moment before looking at me, \"Actually... no... I like you and all. But you're not really my type.\"\n\nI was a little taken aback, \"Not your type? Seriously?\"\n\n\"I kind of like the quiet nerdy types,\" she said with a wistful smile.\n\nThe irony of that statement wasn't lost on me. In high school, that would have described me pretty well. I'd done a lot over the years to outgrow that aspect of myself and the situation with Carly and all the other women had really brought me to another level of confidence. But eight years ago I would have been exactly what she described. Of course, eight years ago I wouldn't have had the confidence to take her and make her mine even through her mock protests. And that gave me the realization about why she was so frustrated, \"You're looking for a unicorn, aren't you Starla?\"\n\n\"What do you mean?\"\n\n\"You want a quiet, nerdy, introspective kind of guy. But you also want a guy who will take you and claim you and use you.\" I was trying to be matter of fact. I didn't want to fuck her right then. Half of my mind was still on Louise, after all.\n\n\"No... well... yeah... I guess. That's pretty much it.\"\n\n\"Tell you what, until you find your unicorn, you have fun dating all the guys you want and I'll just keep taking anything and everything I want from you whenever I feel like it.\"\n\nShe looked at me and the smoldering look was back. She leaned forward, letting her t-shirt fall open and revealing her beautiful, naked breasts. \"I think that would be a terrible idea. All those poor boys would be positively green with envy,\" she said, emphasizing our safeword, green. \n\n\"I'm sure,\" I said. I reached forward and grabbed her hard nipples through the t-shirt, twisting them roughly and leaving the shirt stretched out. Starla yelped and I kept doing it, pinching harder and twisting further until I heard the bedroom door open. I quickly released her nipples and she sat back down, practically panting. Sherry barely noticed either of us, however. She was applying her makeup and talking to Hideo on the phone, telling him that she'd be over in just a few minutes.\n\nI said my goodbyes to the girls and walked out, still unaware where Louise was. I pulled out my phone and typed a quick message.\n\nMe: Hey! Where are you?\n\nLouise: Carly took me shopping and is going to help me get ready. I'm at your place.\n\nMe:??\n\nLouise: Come on over, stud ;)\n\nI started to run downstairs and was suddenly stopped by a beautiful woman who was watching me with all the intensity of one of my girls and none of the lust. \"Sorry, I'm in a hurry... I need...\"\n\n\"Yeah... I know all about it. Off to another girl?\"\n\nI was a little taken aback. \"Yes... I'm sorry... who are you?\" I looked her up and down, it was the same Arabic girl I'd noticed a couple of times before. Her light caramel skin was smooth and her face was absolutely stunning. Any other day and I'd have been very interested in pursuing her. Just not today.\n\n\"I'm the RA for this floor.\"\n\n\"Oh... hi. I'm Jay. It's nice to meet you,\" I said extending my hand. She simply looked at it and shrugged.\n\n\"I'm not here to introduce myself. Look, I've been watching you...\"\n\n\"Really?\" I said, intrigued despite my rush.\n\n\"Not like that, dick. I've seen what's been going on with Sherry. You need to cool it.\"\n\n\"We aren't hurting anybody,\" I said defensively.\n\n\"Not right now... maybe. I'll be talking to Sherry and she may need to see a school psychologist.\"\n\n\"What? Why?\"\n\n\"She walked naked through the dorm after getting a whole bunch of fucked up tattoos.\"\n\nI sighed. When she put it like that it didn't sound so good. \"Look... it's complicated and personal.\"\n\n\"Personal but between you, her and a bunch of other girls?\"\n\n\"Yes. Exactly. Look, I'm really in a rush, Sherry's headed out tonight but I'm sure she'll talk to you. In fact, I'll text her and tell her it's okay. But don't jump to conclusions, please. Keep an open mind and actually listen to her. Okay?\"\n\n\"I don't owe you shit, asshole?\" she said.\n\n\"I know. But you do owe Sherry at least the benefit of the doubt. And for my part, we'll keep the wild stuff behind closed door, okay?\"\n\n\"Fine. But we're not done here, okay?\"\n\n\"I'll be around. Now, can I please go. I really am in a hurry.\"\n\nShe waved me on and I finished my rush downstairs and back to my apartment. 15 minute later I was opening the door, having fumbled and dropped the keys twice in my rush.\n\n\"Carly? Louise?\" I called opening the door. \n\n\"Master, what took you so long?\" Carly said, coming up to me and giving me a sweet welcome home kiss. She was wearing a short, thin t-shirt that barely covered her body.\n\nI laughed and hugged her, \"I got a little excited by Louise's text and went straight to her dorm after work.\"\n\n\"Pretty eager, aren't you Master?\"\n\n\"I guess I am... uhmm... is she here?\"\n\n\"Yes. She wanted my help in getting ready for tonight,\" Carly said. Something about the way she said it made it sound much less casual than that.\n\n\"What do you mean?\"\n\nSuddenly, Louise walked out completely nude. I'd seen little bits of her in her teasing over the last month but this was the first time seeing her completely and totally naked. Her dark hair hung across her shoulders, covering one of her small breasts but leaving the other completely exposed. I could see the rock hard nipple poking out, practically begging for attention. Her body was shiny, as if she'd just gotten out of the shower and her legs and pussy were perfectly smooth. \"Carly has already shaved me and rubbed some nice lotion onto my skin so it's as soft and smooth as possible for you, Mr. S.\"\n\nI swallowed hard as I stared at her and Carly gave me a peck on the cheek before whispering, \"I love you. You're welcome.\" She walked over to Louise and said, \"Now we just need to find you the perfect outfit for him.\"\n\n\"Yes,\" Louise said as she turned away and headed for the bedroom. \"Find me something that will make him more turned on than he's ever been before, will you? Something appropriate for his new white goddess.\"\n\n\"Of course,\" Carly said simply. She looked over her shoulder and her eyes sparkled with mischievous lust. I almost felt like I was along for the ride as I followed the perfect naked ass into my room. I dimly made a note of the cute little dimples in the small of her back and the nice tiny waist that would be perfect for holding onto. But those were simply background thoughts as I marveled at how effortlessly she'd slipped into the kink that Carly and I shared.\n\nLouise stood in front of the full length mirror in our room, looking at herself. \"You did a very good job getting me smooth, didn't she Mr. S?\"\n\n\"Very good,\" I said, somehow finding my voice. \n\n\"But now she needs to make me look perfect. Show our Master what you bought me today, Carly.\"\n\nCarly happily walked over and picked up two bags and then carefully laying out the various articles of clothing on the bed. It was a lot.\n\n\"I know Master wants you to wear stockings and a choker. I think these will be perfect,\" she said as she held up a leather collar and some fishnet stockings.\n\nI felt my cock twitch but Louise had other ideas, \"No... Those will be good for another night. A night only about fucking. But not tonight, I don't think. I'm a virgin, after all, you know. Not some pathetic trashy whore... at least not yet,\" she said winking at me. \"I think those would look better on you. You can wear them while you edge yourself and wait for him.\"\n\nCarly nodded, \"Then I think these might be best,\" she said, this time holding up a pair of white silk stockings that looked particularly expensive. They were accompanied by a lace garter belt.\n\nLouise nodded and Carly rushed to fit it around Louise's slim waist. Then she held the stockings so that Louise could step into them as she rolled them up and clipped them in place. It was a very erotic, almost ritualistic set of actions and I wondered if they'd rehearsed this. While she was stepping into the stockings, she reached down and held up two other chokers. One was a soft, fragile looking white lace choker while the other was a black velvet ribbon with a small pearl dangling down. \"Which do you like, Mr. S?\"\n\n\"I think the white one would be best for you... at least tonight.\"\n\n\"Mmmm... you want to be reminded how virginal and innocent I am?\"\n\n\"Something like that,\" I said with a smile. She tossed the other on the bed and slipped the chosen necklace on, watching me as she did it. \n\n\"Now... Carly offered to buy me some underwear but I didn't think that would be appropriate. So the only thing left is to choose a dress. Carly, show Mr. S the two dresses you bought me. I picked one of them and she picked the other. Don't tell him which...\" she said in warning as Carly grabbed two articles of clothing from the bed. \"If he picks mine, you don't get his cock for a week. If he picks yours, you get to drink his cum from me tonight,\" she said and Carly nodded.\n\n\"Don't I get a say in this?\" I asked with a smile.\n\n\"Of course, Mr. S. You get whatever you want. Those are just suggestions,\" Louise said with all the mock sincerity she could muster. She grinned at me and winked bawdily. \n\nI looked at the two dresses. One was a long, light blue dress with slits halfway up the thigh on either side and a sleeveless halter top with a large cutout that would amply show off my date's cleavage.\n\nThe other was a short red mini-dress, barely long enough to cover the stocking tops. There was a slit up one side that went all the way to the hip. It also had a loose, plunging top that would drop to the woman's belly button. I knew which one each of the girls had chosen. I knew that the more reserved, elegant one was the one that Louise had chosen. I knew that Carly would have chosen the other one. Heck, she had a dress very similar to it that she knew was my favorite.\n\n\"Louise,\" I said to the short, nearly naked woman. \"I think that the white, innocent undergarments will contrast very nicely with a particularly sexy dress. So I think the red one is what I'd like.\"\n\nLouise looked a little surprised but then smiled. Carly practically jumped for joy, clapping her hands girlishly. \"I hope you're just as happy when you're licking his cum from my freshly fucked cunt.\"\n\nCarly gave me a huge kiss and then stared into my eyes when she said, \"I'm happy to take Master's cum from any source. Any hole. Whatever he wants.\"\n\nI kissed her back, our tongue's dancing together briefly before I disentangled. \"Carly, you need to help my date with her shoes too,\" I said.\n\n\"Yes, Master,\" she whispered as she knelt down at Louise's feet. \n\n\"The black strappy ones,\" I said before either woman could ask. Truthfully, all three pairs of shoes the girls picked out were incredibly sexy. I was tempted to have Louise wear the thigh high boots that they'd found but they weren't super practical and it was a pretty warm night. The pair I chose were four or five inches high and I was sure would look very sexy on her.\n\nLouise watched me as she stepped into each shoe, allowing Carly to guide her foot sensually into place. Again there was that almost ritualistic pattern. Carly slowly slid Louise's foot into the show then snugly secured it with the thing straps before buckling the delicate latch into place and then repeating with the other foot. When the show was secured, Louise abruptly stepped forward and gave me a massive kiss, ignoring Carly.\n\n\"Now... I'm going to take your fiance out on a wonderful date, tease him until he's rock hard then come back here and fuck him right in front of you, slut. By the end of the night, he'll know which type of pussy he likes best.\" Louise said the words to Carly in a matter of fact way but that didn't stop Carly from being obviously aroused. \"And what are you going to do while you wait for us?\"",
        "\"I'm going to dress like a cheap, chink bitch and edge myself until I can't think anymore.\" Carly's smile was so broad you almost wouldn't believe the words coming from her mouth. \n\n\"Good girl,\" I said to Carly before giving her a little peck on her forehead and a pat on the ass. I grabbed Louise's hand and led her out, leaving Carly behind to do exactly as she promised. I had no doubt that we'd return home to find her a deliriously happy puddle of goo waiting for the final show.\n\n--\n\nLouise and I made out in the elevator... and the cab... and the waiting area at the restaurant. We got a lot of looks but neither one of us particularly cared. When we were finally seated, it was almost disappointing to have to keep ourselves at bay for the next half an hour. \n\nAs we waited for our appetizers, we made small talk, trying to pass the time.\n\n\"Okay... here's something I've got to know. How many people am I sleeping with?\" she asked me all of a sudden. The question took me aback.\n\n\"Uhmm... none?\"\n\n\"No... I mean... like they say that you're sleeping with all the people your SO is sleeping with... so if I jump into bed with you...\"\n\n\"If?\" I asked playfully, running my finger across her hand and eliciting a lovely giggle.\n\n\"Okay... when I sleep with you, stud... when,\" she said with some emphasis, \"How many people?\"\n\n\"Uhmm... Let's see... Carly and Sherry you already know about. Ditto Maureen that I haven't technically slept with...\"\n\n\"Oh you will... she was fucking hot,\" Louise said with a smile.\n\n\"Probably,\" I said trying to play it cool, \"But there's also Kyrsten and Rebeccah back in Orlando. And Alex and Natalie in Boston.\"\n\n\"Who are Alex and Natalie?\"\n\n\"Carly's old roommates,\" I told her, \"Kyrsten you met when she came to visit. The girl with the curly red hair,\" I said making vague gestures with my hand.\n\n\"Oh I remember. The girl with the sick curves. I was a little intimidated that day.\"\n\n\"Why?\"\n\n\"Well, you were already fucking Sherry and Starla has big ol titties too... and then you trot in this redheaded booblicious sexpot. I mean... I started to wonder.\"\n\n\"I'm sorry,\" I told her, not realizing that she might have thought I had a 'type'.\n\n\"It was fine. I asked Sherry and she showed me a picture of Carly... that encouraged me a lot,\" she said with a laugh. Carly's not small chested by any means. A solid B Cup and slightly bigger than Louise. But I could see how it dissuaded her that I was some kind of tittie chaser. \"Who's Rebeccah?\"\n\n\"Uhmm.. well... the girl I went down to Orlando to try to hookup with, Jennifer?\" I said and she nodded, remembering the story. \"Her little sister was friends with Sherry in school and she and I hooked up.\"\n\n\"Damn stud... nailing all your high school friends' sisters, huh?\"\n\n\"Just the two so far,\" I said with a smile.\n\n\"Okay, so that's what,\" she looked at her fingers that she'd been tracking with, \"seven, right?\"\n\nI nodded, \"Victoria and Daphne and work... oh... and Dave's wife Madison.\"\n\n\"Ten... Double digits in a couple months. Pretty impressive, Mr. S,\" she said as she cheekily bit her tongue between her teeth and smiled. \"I had a one night fling with Jackie... Carly's college... uhmm... girlfriend sort of?\"\n\n\"Girlfriend sort of... there's a story there but I'll get her to tell me, I guess,\" Louise said, letting me off the hook for that one. \"Is that all?\n\n\"Uh.. well... I'm not THAT far removed from Sasha, my ex. But I got tested after that given how it ended and I'm not sleeping with her again. Oh... and I kind of slept with Mrs. Young,\" I said slightly sheepishly.\n\n\"No shit... really? Do they know?\"\n\n\"Carly was there. She kind of encouraged it.\"\n\n\"Wow!\" Louise said, lost for words for once.\n\n\"But Sherry doesn't know so don't tell her.\"\n\n\"I can keep a secret... okay... so that's twelve, right?\"\n\n\"One more... but I don't think I can tell you about her.\"\n\n\"Wait... why not? Why all the secrecy now? You just told me you slept with your fiance's mother for crying out loud\" She looked at me, watching my face for a reaction. I knew I was toast. I realized my mistake too late and she'd figure it out any second. There was no reason to keep anyone secret except...\n\n\"Starla? No way. When?\"\n\n\"Shhh...,\" I said. It was kind of ridiculous but I was really uncomfortable talking so openly about it. I lowered my voice and Louise leaned in, \"the week Kyrsten was here.\"\n\n\"Wait... really? So like your first date she put out? That doesn't sound like her.\"\n\n\"Starla is... well, she's special. She has some pretty particular kinks.\"\n\n\"Like what?\"\n\n\"I'm not going to tell you that,\" I said.\n\n\"Does Kyrsten know?\"\n\n\"Yeah, she kind of convinced me it was okay.\"\n\n\"Does Carly know?\"\n\n\"Uhmm, yeah. I talked to her about it afterwards.\"\n\nLouise looked at me and considered me silently. I thought I knew what she was thinking. If I'd told my other two girlfriends and wasn't telling her, what did that mean about how I felt about her. \"You have to realize, Carly is the love of my life and I don't keep secrets from her. Ever. And Kyrsten was there when it happened and I've known her for forever. I trust her completely.\"\n\n\"No... I get it. I'm not worried about that, Jay,\" she said, surprising me.\n\n\"You're not?\"\n\n\"No... I'm just trying to figure out what it is that she's into. I mean, I thought our histories were kind of tied up together but apparently... ooh, I know. She likes to be peed on?\"\n\n\"What? Eww... no. Not that,\" I said and we both laughed, \"And stop guessing because I'm going to stop answering.\"\n\n\"Fine, but one of you is going to tell me eventually,\" she said, stabbing a fork into her salad. \"So somewhere between 12 and 14 girls depending on how you count. And like sixish steady, ongoing ones, right?\"\n\n\"Yeah,\" I said, eating a breadstick.\n\n\"That's a lot of women to compete with Mr. S,\" she said. She licked her tongue around the small tomato on the end of her fork before popping it in her mouth seductively. The way her soft, pink lips wrapped around the red vegetable left my mind momentarily blank.\n\n\"Uhmm... I'm sure you don't have anything to worry about.\"\n\n\"Seriously? Don't you understand women at all?\"\n\n\"What? Why?\"\n\n\"All those girls have wayyyy more experience than me, right?\"\n\nI thought for a second, \"Well... yeah.\"\n\n\"And I know that blowjob I gave you the other night wasn't the best you've ever had... don't lie to me,\" she said. She wasn't mad, just adamant.\n\n\"Look, Louise. Everyone worries about this their first time with someone. And it cuts both ways, right? I had to worry about how I compared to every guy they'd been with. But I know that sex with you is going to be absolutely amazing. Because you're sexy, open to try things and comfortable with your body. You're also obviously kinky as all fuck,\" I said winking at her. She blushed and ate some more of her salad before turning her gaze back to me. \"Trust me... Do what turns you on and tell me what feels good and everything will be fine.\"\n\n\"What turns me on is the idea of riding you for hours while your fiance watches without cumming.\"\n\nI felt my cock, already hard from all the teasing, get even harder. \"I'm sure Carly would like that.\"\n\n\"As for what feels good... I guess we'll have to try everything so that I can tell you.\"\n\nI smiled and leaned forward, giving her a kiss, \"And that's why I know you're going to be dynamite in bed.\"\n\n\"Damn straight,\" she said. \"OOhh... I know. I bet she likes for a girl to use a strap on on her?\"\n\nI laughed, \"Stop guessing.\" Louise gently 'humphed' at my admonition but didn't bring it up again. The dinner continued, both of us ordering relatively light food because neither of us wanted to leave dinner feeling stuffed full."
    ],
    "authorname": "Masterful_Husband",
    "tags": [
        "cuckquean",
        "free use",
        "interracial",
        "objectification",
        "slut",
        "submissive female",
        "teasing",
        "threesome",
        "virgin"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/carlys-wmaf-fantasy-pt-21"
}