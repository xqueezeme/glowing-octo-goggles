{
    "title": "Women's Studies Ch. 14",
    "pages": [
        "*** Lexi ***\n\n\"Skylar Lawson...\" Abigail's words hung in the air for a moment.\n\n\"Skylar?\" Kennedy asked shocked.\n\n\"Do you think she might be your sister?\" I asked.\n\n\"It makes sense, doesn't it?\" Abigail said excitedly. \"You were both put in the same room! Have any of you ever heard her talk about her father? Who is he?\"\n\n\"Slow down,\" Kennedy said sitting down on the bed heavily. \"We look nothing alike.\"\n\n\"That's the beauty of genetics, with two separate moms...there's no telling what either of you could look like,\" I said, thinking about it as I sat gingerly on the edge of the bed.\n\n\"You both can be very wild,\" Abigail mused. \"Maybe you both get that from daddy.\"\n\n\"Skylar? My sister?\" Kennedy asked, shaking her head. \"Now I'm glad I didn't try to sleep with her.\"\n\n\"Yeah, that would be a little weird...no offense Lexi,\" Abigail added quickly, giving me an apologetic look.\n\n\"None taken,\" I said. Before it had happened to me, I thought it was wrong too.\n\nWith this new revelation, Abigail and Kennedy were going back and forth trying to figure out what it meant. The evidence was clearly pointing to a connection between Skylar and Kennedy, and the most obvious one, the only one I could see, was that they were related. Why else would her father pay for both of them to attend Mayweather? The only question now seemed to be, who was Skylar's father?\n\nWhile the two of them talked, I found my thoughts being pulled in a different direction. Sitting there, gingerly on the edge of the bed, I could feel part of Decker seeping out of me and into my ruined underwear. That man...that pathetic, disgusting man came inside of me.\n\nI caught Kennedy's eyes nervously darting toward me a few times in silent apology, but she was almost lost in this new piece to her puzzle; equal parts denial and surety, that Skylar was the key to finding the truth she had waited so long for. I didn't blame her for her torn attention. I wholeheartedly wished she could forget what happened to me entirely.\n\nThe longer I sat there, the more sticky my underwear became, and the more dirty I felt. I was resigned to what happened, but the constant reminder of him wasn't setting well with me. Every little bit that seeped out sent my skin crawling all over again. I slowly rose to my feet, trying hard not to wince from the discomfort, and grabbed a few things for a shower.\n\n\"Is everything okay?\" Kennedy asked cutting off one of Abigail's questions as she stood quickly. Her eyes were wide with worry.\n\n\"Everything's fine,\" I said plainly, thankful that Abigail hadn't noticed how jumpy Kennedy was acting around me. \"I'm just going to take a shower before bed,\" I explained.\n\nI could tell that Kennedy was itching to come with me, but thankfully she stayed behind. She worried about me, but the last thing I wanted was for Abigail to look at me the same way that she did, like I was something precious that she had let be broken.\n\nThe showers were empty when I arrived, and I slipped into one of the stalls. Turning on the hot water, I began undressing. As much discomfort as I was feeling, I couldn't get my clothes off fast enough. When the last stitch was gone, I jumped under the spray, and began scrubbing away every last vestige that he might have left on me. Long after I was sure I was clean, I still sat under the warm water. It felt soothing to feel the powerful spray dancing across my skin.\n\nWhen I finally did return to our room, Kennedy and Abigail were both asleep, and the lights were off. I realized then why I had taken so long. Kennedy's hurt, pitying looks felt worse than what I'd had to endure. As quietly as I could, I slipped out of my towel and into some pajamas.\n\nI eased myself into bed, careful not to disturb my friends, and settled in to sleep. Just as my eyes closed, Kennedy grabbed my hand, and held onto it. I guess she hadn't been asleep after all.\n\n*** *** ***\n\nThe morning brought much welcomed distractions.\n\n\"So, Skylar didn't come back last night,\" Kennedy said, her voice quick and on edge, waking me as she slipped back into our room. \"I just went into her room to grab some of my stuff, and she wasn't there.\"\n\nI was still exhausted, and buried under the covers, hoping that there was a chance that I could fall back asleep for another couple of hours. I was sure it was already late just by the amount of light that was able to press through the blankets. By the way they talked, it seemed like they had been awake for a while already, and had consumed more than their fair share of coffee.\n\n\"She probably stayed at a guy's place,\" Abigail offered. \"She seems to find plenty of them. She'll be back sometime.\"\n\n\"Ugh!\" Kennedy sighed, sitting down hard on the edge of the bed. \"I have a slut for a sister, I guess.\"\n\n\"Isn't that the pot calling the kettle black?\" Abigail asked.\n\n\"Hey, I have sex with the two of you,\" Kennedy said, slightly offended. \"Very, very rarely anyone else. She seems to have a new guy every other night. It's totally different.\"\n\n\"Sorry,\" Abigail said sheepishly before quickly changing the subject. \"So, I've done every search I could think of and I haven't found a thing on Skylar,\" Abigail said, her fingers clacking on her laptop. I felt Kennedy get off the bed to join Abigail. \"Look, I even paid for a background check service to look up her records, and there is nothing. No Facebook, nor Friendster, not even a defunct Myspace account,\" Abigail continued. \"She doesn't even have a parking ticket! I swear, if we didn't see her every day, I wouldn't think she even existed! Maybe she's hiding something.\"\n\n\"It's not that weird, is it?\" Kennedy asked. \"I'm sure a lot of people don't use social media. Sometimes I wish I had never gotten that first MySpace account. Social media is like crack, you only need to do it once.\"\n\n\"It's weird,\" Abigail assured her, and I couldn't blame her. My old MySpace account was still hanging out in the ethereal planes of the interwebs.\n\n\"Really though?\" Kennedy asked skeptically after a pause. \"Not even a parking ticket?\"\n\n\"Not one,\" Abigail sighed.\n\n\"That's hardly strange!\" I grumbled, finally ripping away my covers, giving up on ever getting back to sleep. \"I don't have any tickets.\"\n\nThey both jumped slightly, realizing I wasn't as asleep as I seemed. Kennedy's eyes locked onto mine before darting away shamefully, but Abigail pulled herself together quite quickly and pressed her point.\n\n\"That may be so, but just for clarification, you are hiding something,\" Abigail said, a small smile tugging the corner of her lips as her eyes flickered below my waist. \"I think we need to learn more about her.\"\n\n\"We could follow her around and try to get close to her,\" Kennedy mused. \"Maybe I can get her to mention him in idle conversation.\"\n\n\"She's always out with some guy,\" Abigail thought. \"What if she's not sleeping around? What if she's going to see her dad? We could follow her for a little bit.\"\n\n\"Hold on, hold on!\" I cut in. They seemed way to eager and excited right now. I understood Kennedy's urgency to figure out who exactly Skylar was, but not Abigail's. \"You know you two sound like stalkers, right?\"\n\n\"Stalking is what creepy strangers with panel vans do. I'm just going to be her friend,\" Kennedy said taking a large sip from her coffee.\n\n\"Definitely not stalking,\" Abigail agreed quickly. \"We're just two curious citizens who wish to learn a little more about someone.\"\n\n\"Curious citizens?\" I asked. \"That's stalker rationalization right there. Any moment now one of you will suggest hiding in the bushes with a telephoto lens.\"\n\n\"Oh, it's harmless!\" Kennedy assured me, forgetting her dour mood around me for a moment.\n\n\"First things first, both of you are cut off,\" I informed them, finally rising from the bed to snatch the coffee cups from their hands. \"No more coffee for either of you. Both of you are in a crazy caffeine spiral and you're feeding off each other. Second, we are not stalking Skylar. We're just not.\"\n\nThey both looked to each other, and then down to their caffeine trembling hands. Even they couldn't deny that they had drank a little too much. By their faces, it seemed I had made an impression on them, but I wasn't sure how long that would last. I knew them too well, and for them, this was only a minor roadblock. Yeah, there was no way that this wouldn't end badly.\n\nWhether they were detoured or not, the Skylar subject had gone silent, at least around me. That afternoon, Kennedy took us both for pedicures and a movie, and afterward to get my favorite Jamba Juice. We usually spent the weekends hanging out, but this felt different. I had a feeling that Kennedy was trying to pamper me. Her eyes still held that haunted look though, no matter how much I smiled and joked with them; like she was seeing a beaten dog.\n\nI even got the impression that Abigail was feeling neglected. I could hardly walk two paces without Kennedy holding my hand or hooking her arm in mine protectively. Not wanting Abigail to feel left out, I made it a point to show her the affection she was lacking from Kennedy at the moment. As relaxing as this day was supposed to be, I was even more stressed out once we returned to our dorm.\n\nMost of the weekend passed without the mention of Skylar, and it was helped along by the fact that she still hadn't returned from whoever's bed she was occupying. Out of sight and out of mind, as the saying goes. Everything appeared to be nearly back to normal on that front until Abigail reintroduced the issue Sunday night.\n\nWe were lounging around in our room, waiting for our Chinese food to arrive. I was getting a head start on some of my assignments for the week while Kennedy sat on the floor at the foot of the bed flipping through her trusty Playboy. Abigail clicked away on her own laptop at her desk, stealing glances at the magazine every so often. She had resigned herself to the fact that Audrey was my sister, and accepted my unorthodox relationship with her, but incest wasn't an easy thing to get used to.\n\nThe room was silent, but not uncomfortably so. In fact, it was quite relaxing. There was something about them both just being near that was comforting, as if their presence was enough to soothe away any troubles.\n\n\"There really is nothing!\" Abigail exclaimed in frustration, breaking the silence and slamming her laptop shut.\n\n\"Wait, are you still looking?\" I asked, drawing a guilty blush from Abigail.\n\n\"I'm sorry, but there has to be something about Skylar,\" she pressed. \"For someone as wild as her, it would be impossible not to leave some trace of her existence.\"\n\n\"What happened to the whole no stalking thing?\" I asked.\n\n\"It was only a little internet searching,\" Kennedy defended her quietly. \"We couldn't help it. I just need to know...you know?\" she pleaded with downcast eyes. It physically grated to see Kennedy acting so meek. As long as I had known her, she had been a force of nature. It was understandable that she felt for what I went through, but as nice as it was to see how much she cared, it angered me that she felt guilt over it...that she had become something she wasn't because of what I had endured. Strangely enough, it also felt like, because of her guilt, she was stealing something from me. My choice.\n\nMy encounter with Decker, and the choices I had made, were my own. I knew the stakes even before we went in to steal Kennedy's file. I would have been expelled and arrested for being a boy at an all-girls school if I didn't sleep with him. Whatever I intended when we stormed the castle, so to speak, I knew my options. And when we were cornered and moments away from being caught breaking and entering, I knew my options then as well. I chose to take one for the team so Kennedy could get out unscathed with her file in hand. That pitying look in her eyes took something away from what I had considered a calculated but noble sacrifice for a friend.\n\nIt appeared I was going to have to have another talk with Kennedy, but for now, I stomped down my anger. She just didn't understand how I could be okay with it. Maybe okay was a strong word, but it fit. I didn't like it, but I could endure it...for now.\n\n\"It was pointless anyway,\" Abigail confessed. \"Great lot of help that was. She's practically a ghost!\"\n\nAn awkward silence settled in between us. By the looks on their faces, it had less to do with my disapproval, and more to do with their combined failure. Kennedy had moved passed her initial breakdown when she discovered that her father's name wasn't in the file. Now she seemed even more determined, if only to make what happened to me worth it in some way. Setting aside my thoughts about Kennedy and what she felt she owed me, I began to look at their Skylar problem objectively.\n\n\"Why not just ask her?\" I mused, taking a moment to think it through. \"You'll learn everything you need to know right away. If you ask her,\" I said, nodding to Kennedy. \"the truth will be all over her face. If she knows that you're related, she won't be able to hide her shock at being asked outright. If she just tells you who her father is, like it's no big deal, she might not know about you either, and you'll have a name. If that guy just happens to have money, then the odds are good that he's your dad.\" I was quite pleased with myself with its genius simplicity, and I couldn't help but smile.\n\n\"What if she doesn't react, and her dad isn't rich?\" Kennedy asked. \"Or what if she's in the same boat as me, and she doesn't know a thing about him?\"\n\n\"If she's in the same boat as you, then you've found a sister,\" I said. \"If it's the other...then you've learned that Skylar isn't the lead you thought she was. Whatever the outcome, you will learn something you didn't know before.\"\n\nIt was an easy solution to her problems, and as an added bonus, it didn't involve stalking. I could still see the anxiety in Kennedy though, and I wasn't sure if it was for my suggestion on direct confrontation, or because of what had happened to me. She still could barely meet my eyes without that look creeping into her face. When Abigail went downstairs to pick up the Chinese food, I finally snapped.\n\n\"Can you stop looking at me like that?\" I asked sharply, moments after Abigail stepped out to go downstairs for the food. \"You've been walking on eggshells like you're afraid I'll shatter ever since it happened.\"\n\n\"I-\" she began before I could cut her off.\n\n\"You haven't touched Abigail all weekend, and she's starting to think somethings up,\" I told her. \"That girl loves you, and you've been ignoring her because all you can think about is protecting me. Well, newsflash, while you've been protecting me, you've been hurting her. So, get your shit together.\"\n\n\"I'm sorry,\" Kennedy said, dropping her head in shame. \"It's just that...it's all my fault.\"\n\n\"Nothing is your fault, and you need to get that through your head,\" I said, jabbing my finger into her shoulder. \"I made a decision, and that's the end of it,\" I drilled my eyes into hers. \"My decision. My choice.\"\n\nKennedy looked well and truly chastised by the time I finished speaking, and I almost felt bad, but it had to be said.\n\n\"Now, when that girl gets back here, we are both going to show her how much we love and appreciate her,\" I said as I got to my feet and began pulling off my tight gray v neck and went to work on my jeans. \"I love that girl, and I want her to know it.\"\n\nDeep down, I knew it wasn't just for Abigail. I could still remember Decker's hands on me, and the things he had done. I needed to have the feel of my friends, their comforting and intimate touch, to remind me of something better.\n\nA slow smile fluttered onto Kennedy's face as I finished stripping down to my pink and black lingerie. I reached into a drawer in my closet and pulled out some black thigh high stockings and began to carefully work them up my legs. I wanted to look so sexy for Abigail that she didn't know what hit her.\n\n\"Well?\" I asked as I began sliding up the second stocking. \"Are you going to join me?\"\n\nKennedy seemed torn for a moment before she finally jumped up and began stripping down as well. By the time Abigail opened the door with the Chinese food, I looked sexy as hell with my hair slightly teased and wild looking. Kennedy was wearing only a pair of black split-back panties with ribbons and nothing else. Her perky breasts were seductively hidden by her flowing red hair as she knelt on the bed with her knees slightly spread, biting her finger teasingly.\n\nThe door sat wide open as Abigail paused, taking in the sight of Kennedy in her sexy pose. Before she could react, I blindsided her, pulling her roughly to me and planting a kiss on her that made our food spill onto the floor as she dropped the bag.\n\nI kissed her good and hard as I let my hands work up her body, pulling her shirt up along the way. When I finally kicked the door shut, I was sure our suitemates had gotten a very clear picture of what was about to happen.\n\n\"What the-\" Abigail cut off as I slammed her hard against the door and began working her over once again. My hands roamed over her supple body, and my lips melted into hers. Her tense shock evaporated, and she quickly gave into this unexpected assault. Seconds later, Kennedy appeared beside me, gently nudging me to the side so she could show Abigail just how much she meant to the both of us.\n\nWith both of us competing for space, I sank to my knees and began undoing the brass buttons on Abigail's jean skirt while Kennedy continued kissing her as she undid her blouse. Together we deftly undressed Abigail down to her pretty white panties.\n\nWith my face so close, I could smell her growing arousal. I breathed deep of her tantalizing musk as I slid my hands up her milky thighs. When I reached the thin strips of her thong, Abigail's legs buckled slightly in anticipation. Tugging slowly, I peeled them down her legs to her ankles.\n\nI was completely oblivious to what Kennedy was doing above me, but Abigail was already moaning pleasurably before I even made a move on her delicate flower. Hungry to taste her, I leaned in, and buried my tongue between her thighs, reaching in to graze her clit. At my touch, her legs parted wide, giving me access to her wet pussy. With more room to maneuver, I tilted my head back and let my tongue reach further, exploring and tasting her juicy petals.\n\nAbigail's moans grew in pitch, and before long, her knees trembled with pleasure. Her fingers tightened on a fistful of my hair as she pressed my face harder into her pussy and I let my tongue thrash her for all it was worth. When she finally quaked, her legs gave out, and she slid down the wall into a heap on the floor. Her hair was a tangled mess, and her pink lip gloss was smeared. There was also a very distinct bitemark on her right nipple from Kennedy.\n\n\"Where did that come from?\" Abigail asked, a smile painted on her lips as she caught her breath.\n\n\"What?\" I asked. \"Two girls can't show their friend how much they love her?\"\n\n\"I thought we were going to eat. I didn't think I was coming back here to get jumped before I even made it into the doorway,\" she mused through eyes glazed with pleasure.\n\n\"If you want us to stop, all you have to do is ask,\" Kennedy said, toying with the edges of her panties with her thumbs playfully as she stood above us.\n\n\"Not a chance,\" Abigail replied.\n\nWithout resistance, Abigail let us pull her to her feet and place her on the bed. Kennedy slipped off her panties before climbing up after her. She crawled up Abigail slowly, straddling first her legs and then her body as she worked her way to the head of the bed. Abigail was smiling ear to ear as Kennedy's candy-colored pussy came into view. The moment Kennedy was in range, Abigail reached her mouth forward and gave it an eager lick. Sure, this might have been all about Abigail, but if it was one thing we knew, Abigail loved the taste of Kennedy's pussy.",
        "As Kennedy lowered herself to sit over Abigail's face, I decided to get to work on a little something of my own. I carefully pulled off my stockings and then tugged on them to test their strength. They were surprisingly durable. While Kennedy kept her distracted, I worked a slipknot around one of her wrists and pulled it away from Kennedy's ass, quickly tying it to one of the bedposts.\n\nI didn't know what to expect; resistance, surprise? What I got was a pleased, muffled moan. Her other wrist removed itself from Kennedy and stretched itself toward the other bedpost. I smiled, amused by Abigail's eagerness, and gave her what she desired. Once both of her arms were secure, she gripped her restraints and tugged to test their strength.\n\n\"I think our little Abby likes it!\" I observed.\n\n\"Is that right?\" Kennedy asked raising up, holding her pussy just out of reach of Abigail. \"Do you like being all tied up and helpless?\" she teased.\n\n\"Yes,\" she nodded enthusiastically, trying to reach out and get her mouth back onto Kennedy's pussy.\n\nKennedy only laughed at her friend's eagerness and lowered her mound back into reach. While she slowly rode Abigail's mouth, I crawled onto the bed in their blind spot. Pulling my panties to the side, I freed my throbbing cock and scooted up between her open thighs. Teasingly, I traced her wet folds with the tip of my cock, enjoying the soft feel of her warm lips against me, as well as the squirming it produced.\n\nAbigail's hips undulated as she wiggled around, trying to line me up with her wanting hole. I continued my teasing, letting my tip barely press into her before pulling away to tease her yet again. Her hips became frantic, and I could see the tendons in her wrists as she pulled hard on her bindings in desperation. Finally, I thrust into her without warning, and without restraint. I plunged deep inside her pussy until my pelvis collided with hers. A muffled shout escaped her lips, but that only made Kennedy ride her sweet mouth faster.\n\nRelishing in her divine embrace, I held deep, savoring her before my assault. When I began to fuck her it was in long, hard thrusts. My pace was slow, but full of force; enough to make her body want to slide up the bed if Kennedy hadn't been sitting on top of her face.\n\nI continued my unrelenting pace straight through Abigail's climax. Her legs locked around my waist demanding for me to hold still, but I wasn't letting her call the shots. I pulled her ankles up, resting them against my shoulders and I continued to drive home. She squirmed and tried to stop it, but with her hands tied, and Kennedy cumming all over her sweet little mouth, she couldn't ease the overwhelming pleasure. Her pussy was a storm of convulsions, coaxing me faster and faster towards my own orgasm. I didn't even try to fight it as it closed in. Less than a minute later, I was spewing deep inside of her velvety folds. It wasn't until I was sure every drop had been deposited that I let myself slowly slip from her.\n\nAs Kennedy moved off Abigail's face, I crawled forward to replace her. My cock bobbed in front of me as it inched closer to Abigail's mouth.\n\n\"Open,\" I instructed, tapping my wet cock on her chin playfully.\n\nObediently, her lips parted wide, and I directed my cock between them. She eagerly began sucking, her tongue swirling as she cleaned off our combined fluids. Meanwhile, Kennedy retreated to the end of the bed to return Abigail's favor. I soon heard the sounds of wet slurping as she took her time licking my cum from Abigail's sodden cunt. Abigail came once more from Kennedy's attentions, and after that she became next to useless. Her eyes were lidded, and she seemed about ready to pass out. Her lips slipped from around my cock and her head fell back.\n\nSensing that she was spent, I crawled off of her and snuggled beside her. Kennedy joined me on the other side, leaning over Abigail to give me a kiss, her tongue still holding traces of my familiar cum. Together, we each took a breast and laid our heads down for a rest.\n\n\"Can you untie me now?\" Abigail mumbled drowsily.\n\n\"Not a chance!\" Kennedy said, playfully giving her nipple a suck. \"We'll let you catch your breath, but we're not done with you yet. I fully intend to wear that ass out,\" she smiled wickedly.\n\nIt took hours, but we eventually fucked ourselves into a small coma, not just Abigail. We had a lot of fun experimenting; tying her up in different ways, finding out what she liked the most. It appeared that bondage had been a long-time secret turn on for her...that, and being endlessly teased. In the end, she fell unconscious between us butt naked with her wrists tied securely together and a big smile on her face. At least I had a good idea what to get her for her birthday now.\n\n*** *** ***\n\nDespite the amazing night with my best friends, Monday still came. Part of me had hoped that Decker had gotten his fill the other night, but deep down I knew that once someone had their hooks in you, they wouldn't ever let go without a fight. I was leaving my Econ class when I received another yellow slip requesting my presence. Sighing, I took the piece of paper and trudged toward his office.\n\nI handed his secretary the slip, and she directed me straight in.\n\n\"Close the door behind you, would you Miss Allen?\" he said abnormally polite.\n\nAs soon as he heard the click of the latch, he shifted from sweet and innocent to lecherous and predatory.\n\n\"Well look at you!\" he cooed, standing from his chair to walk around his desk. \"Did you get all dolled up just for me?\" he mocked, slipping a hand underneath my sky-blue dress to cop a feel on my ass, pulling my body against his already hard cock. \"Answer me?\"\n\n\"No,\" I said stubbornly. \"I didn't dress like this for you.\" He might have been enjoying this, and for now it was what I had to endure, but I would make sure that he knew that the only thing holding this relationship together was his blackmail.\n\n\"That's the wrong answer,\" he said flatly, clearly disappointed, giving my ass a little smack. \"The correct answer is, yes Mr. Decker, I wore this just for you!'\" he said, using an excited and vapid sounding voice.\n\nAfter, he stared hard at me for a moment. It was well within his capabilities to force me to say it, and that wouldn't be pleasant. I had already made my point though, so I conceded.\n\n\"Of course, Mr. Decker,\" I said, with an obviously fake enthusiasm. \"I wore this just for you!\"\n\nFake enthusiasm or not, he seemed accepting of my response.\n\n\"Now get down there and undo my pants, darling. You've been a bad, bad girl and you need your punishment,\" he chuckled.\n\nI did what he required and thankfully, it was over shortly after it began. He even tried to play his premature ejaculation as my fault.\n\n\"You really wanted it didn't you?\" he asked, zipping up his pants. \"You were really working for it. I think you're one of those girls who secretly enjoys their punishments!\" he smiled, walking back around his desk to take his seat.\n\nThankfully, he didn't push me into agreeing. He just chuckled a bit more as I got to my feet and grabbed my bag.\n\n\"Is that all?\" I asked flatly.\n\n\"Yes, you're done for today,\" Decker smiled, leaning back in his chair. \"But take this,\" he added, holding out a slip of yellow paper.\n\nI took it before leaving and glanced at it outside his office. It was a call slip instructing me to come to his office the following day. It appeared that my fears were right, and this was going to be way more than a one-time thing. It was almost surreal. Was this going to be my life now? Being at this man's beck and call to be used? That thought made me shiver. Right now, I just needed to endure.\n\nOn my way out of the Admin Building, I made a quick stop to wash out my mouth before heading back to the dorm. I was glad that Kennedy was nowhere around when I was summoned. As far as she would know, it never happened. The one time in his office was the only time she would know about. She had just started acting somewhat normal around me again, and I didn't want to ruin it.\n\nAs I came upon our dorm building, I saw both Kennedy and Abigail sitting outside Evens Hall on a bench with a clear view of the entrance. They were both fidgeting nervously as they stole quick glances at the door every time it opened.\n\n\"What are you guys up to?\" I asked causing them both to give a little jump.\n\n\"Nothing, we're just sitting here,\" Abigail said innocently, quickly collecting herself.\n\n\"In this heat?\" I asked suspiciously.\n\n\"It's not that bad,\" Kennedy said, involuntarily wiping sweat from her brow.\n\n\"Come on,\" I said, seeing right through both of them. \"You guys are stalking Skylar right now, aren't you?\"\n\n\"Maybe,\" Kennedy said a little shyly.\n\nPutting these two together was dangerous. One of them would get an idea into their head, and then the other would feed into it until it got out of control. It seemed that neither one of them had a voice of reason when they were together.\n\n\"What happened to direct confrontation?\" I sighed.\n\n\"I was going to, but I couldn't do it,\" Kennedy said. \"My heart was racing, and my hands were shaking. I thought I might pass out.\"\n\n\"So instead of an easy answer, you're both sitting out here on the off chance she decides to go for a stroll?\" I asked.\n\n\"No, I caught a small bit of Skylar's conversation with Holly, and she said something about running some errands in a little bit if she needed anything,\" Abigail said, completely unashamed. \"Instead of following her all the way from our dorm room, I thought it would be less conspicuous if we just happened to be sitting out here when she came out'\" Abigail finished, looking a little smug with her craftiness.\n\n\"Do you know what the two of you look like right now?\" I asked, answering before they could. \"Two girls watching that door like hawks. You're barely blinking. Why didn't you just stake out her car in the parking lot?\" I suppressed a wince, realizing I wasn't any better; giving them accidental stalking advice.\n\n\"I didn't think of that,\" Abigail said thoughtfully. \"Oh oh oh! Here she comes. Act natural. Just act natural!\" she said excitedly.\n\nI was in it now. I may not have approved of this Delta-Level stalking status, but I wasn't going to blow it for them either. I acted as naturally as I could, avoiding looking in Skylar's direction.\n\n\"Shit, she's coming right over here!\" Kennedy whispered.\n\nI looked back, and sure enough, Skylar was striding towards us with purpose and a serious expression on her face. Shit, Kennedy and Abigail must have tipped her off somehow. There was no telling what the two of them had been getting up to when I wasn't around.\n\n\"Skylar!\" Abigail said, feigning surprise and happiness. \"How are you?\"\n\n\"I'm really sorry, Miss Lockwood,\" Skylar said solemnly, grabbing her arm and lifting her to her feet. \"Something's happened and you need to come with me.\"\n\n\"What are you doing?\" Abigail said in a slight panic. \"Let go of me right now!\"\n\nMy reflexes abandoning me, I watched as things seemed to unfold, and I missed the group of people gathering around us.\n\n\"Miss Lockwood, you and Kennedy need to come with us right now,\" Skylar said, her voice seeming to be both delicate and firm.\n\n\"Come with you?\" Abigail asked, still trying to tug her arm free. \"Kennedy? Who is us?\"\n\n\"Abigail,\" a tall man said soothingly, whom I just noticed was right next to us.\n\n\"Owen?\" Abigail asked, shocked.\n\n\"Something's happened,\" he said quietly and very carefully. \"Your dad's missing and you need to come with us per his instructions. You, and your sister.\"\n\n\"My sister?\" Abigail said, whipping her head first to me, and then to Kennedy on her other side.\n\nTheir eyes locked, and the same expression swept across their faces. Kennedy was Abigail's sister? Surprise quickly turned into panic as it must have dawned on them. They had been sleeping with their own sister this whole time. When their emotions finally settled, Kennedy was back to shock, and Abigail appeared slightly nauseous.\n\n\"Miss Lockwood!\" Skylar said, snapping her out of it. \"We have to go, now!\"\n\nI didn't know what to say. I was stunned speechless as Skylar and a group of at least ten other normal looking individuals surrounded the pair of them and ushered them away. Their movements were precise, and their eyes searching as they marched towards the edge of campus. What the hell just happened?\n\n*** *** ***\n\nSo...Mr. Lockwood was Kennedy's dad. Abigail and Kennedy were sisters.\n\nI had been sitting alone in our room for an hour, and that was as far as I had gotten. Who the hell was Skylar though? Gone was the fun, slutty, party girl, and in her place was a commanding woman who seemed sure of herself in a way that had nothing to do with her looks or sexuality.\n\nI had tried calling them, and texting, but they hadn't responded yet. That guy said that her father...their father was missing. Mr. Lockwood was Kennedy's dad! Every time I thought of that it was surprising all over again.\n\nOur room felt empty without them. Somehow, even more empty than when Kennedy and Abigail were just in class. They weren't just out for a little bit, they were not coming back. I hadn't felt alone in a long time. When I was at home for Christmas, I had my sister, and every other day since school started, I had Kennedy and Abby. Now I was alone, and I felt hollow, like I was somehow less without them. Like part of myself was missing as well.\n\nFeeling more bummed out by the minute, I ventured out into the common room. As soon as I opened the door, I worried that I'd made a mistake. Our common room was packed with chatting, gossiping girls. It was like someone was having a party in our suite and I was just finding out, and by the way everyone got quiet when they saw me, I was the guest of honor.\n\n\"Uh...What's up?\" I asked swallowing nervously.\n\n\"Have you not seen the news?\" Holly asked. \"It's been the only thing on for the last half hour. Abigail's dad is missing. He was in a private jet and they lost contact with them over the mountains in New Mexico. Someone is saying that a group of people came in and swept off with Abigail and Kennedy,\" she said looking at me expectantly.\n\n\"Yeah, I was there,\" I said awkwardly.\n\n\"Did you hear anything else?\" \"Do they think he's dead?\" \"Why did they take Kennedy?\" Questions came at me from every side.\n\n\"All I know is that people came, and they left with them both,\" I told them. \"They weren't exactly taking a press conference.\" I was sure, the last thing Abigail or Kennedy wanted right now was for everyone to find out that they were related. It would happen eventually. That high profile, the news was bound to break soon enough, but I wasn't going to be the one to do it. \"I'm going to get out of here for a bit,\" I said feeling uncomfortable with the kind of attention I was getting. Some of these girls seemed like they might go feral trying to find a scrap of juicy meat to devour.\n\n\"Hey Lexi? Wait up,\" Holly said catching me in the hall. \"I'm sorry about that in there. It's just...everyone is curious. Are you all right? It must be hard on you too. Something bad happens to your friend and then they get swept away, leaving you behind all alone to wonder if they're okay.\"\n\nShe seemed genuine, but I just didn't know if she was that good of an actor or not. She was right about how I was feeling, but whether she was looking for dirt, or not, I wasn't in the mood for company.\n\n\"I'll be all right,\" I said. \"I'm just going to get some fresh air.\"\n\nI wandered some of the quieter parts of the campus, but the fresh air was overrated. It was nearly a hundred degrees out. Instead of going back into the dorm, back to all those questions, I found myself sitting in my car in the parking lot with the AC on. Thoughts raced through my head about Kennedy and Abigail, and Mr. Lockwood too. He was Kennedy's dad! I even thought about my own situation, but only for moments before I returned to thoughts about my friends. Night crept down as I stared at the blank screen on my phone, waiting for word.\n\n*** Kennedy ***\n\nIt was as if the foundations of Kennedy's entire world were slowly crumbling. Abigail was her sister. And if Abigail was her sister then that meant Mr. Lockwood was her father; the man she had spent most of her life searching for. Her thoughts and emotions were a swirling jumble, as they had been since first learning of it.\n\nBesides the occasional words spoken by the security group accompanying them, the private jet was all too silent. Kennedy had caught Abigail's stunned eyes for a moment as they had been boarding, before she jerked them away. Kennedy should have felt hurt, but with everything else that was going on she understood. Both of their lives just got a whole lot more complicated.\n\nThey loved each other, more than any sisters should, done things that no sisters should, and now that they knew, it was over. Abigail had made her views on incest quite clear. She only endured Lexi's relationship with Audrey because it was Lexi.\n\nIt had already been hours since Kennedy and Abigail were ushered out of the school by plain-clothed bodyguards, and her mind was still scrambling for something solid to hold onto. Everything real seemed to be evaporating around her. From the way Abigail frowned into her hands two rows up and to the left, Kennedy was sure she was having as hard of a time as herself. There was also the possibility that there was more to her distance. Abigail was no longer the sole Lockwood heir. Did that matter to her? Or maybe her distance was because of the reason they were both on this plane.\n\nKennedy tried not to think of that. It was a failing effort though. So much had happened in such a short amount of time. In the same breath she had learned of her father's true identity, she had also learned that he was missing. From what she had caught through her state of shock, his plane had disappeared over some mountains in New Mexico. It was unclear what had happened, but the implication was clear that they assumed a crash.\n\nThose thoughts were numbing. If he was dead, she would never get a chance to meet the man. Over her life, the amount of questions she wanted to ask her father had grown at a steady pace, but there were two that she needed to know. Why did he hide who he was? And most importantly, what did she mean to him?\n\nWas I just a mistake to him, an embarrassment to hide away from the world? She felt guilty for the anger that was slowly rising inside of her. He was missing, and her best friend...her own sister must be worried sick about him.\n\nHer sister. It still sounded strange to her. Now that she knew, there were questions she wanted to ask Abigail, but there was a feeling of distance between them now. Since they sped off to the airport in Phoenix, they hadn't spoken a single word to each other, and on the plane, she had only given Kennedy a quick glance before choosing a seat away from her.\n\nThe private jet shuddered in its descent and Kennedy was finally able to pull herself back from the brink of her dour thoughts. They were landing at a private airstrip somewhere in Colorado. This was where the Lockwood summer estates were, if she remembered what Abigail had told her once.\n\nWith no luggage to speak of, their large party divided into three black SUV's before speeding off and away from the tarmac. By the landscape, they were far from any cities. Open grass fields and thick forests of pine and juniper filled her vision for as far as she could see.\n\nTwenty minutes brought them onto a gravel road that turned off the main stretch and into the trees. A minute later, the trees ended, opening up into a massive estate. A brick columned and rod iron fence sealed in enough land to contain the Mayweather campus several times over. On one end horses grazed or galloped in a large pen. There was a massive garden with delicately carved hedges as well as a tennis court and a helicopter sitting quietly on a helipad. Out buildings dotted the free space as well as other buildings that looked like guest houses.",
        "At the center of it, a massive Victorian style house overshadowed it all. It was three stories in some places, and two of the turrets reached up to a fourth. It appeared old, but impeccably cared for. A fountain with a woman holding two golden goblets in her outstretched hands spilled water into the basin right before the wide gray stone steps that rose up to the entrance.\n\nAbigail and the other attendants seemed unphased by the grandeur, but Kennedy was in awe. She knew how wealthy the Lockwood's were, but knowing and seeing were different things entirely. This is just their summer home?\n\n\"Are you okay?\" Skylar asked, startling her from her side. \"You've not spoken the whole way here.\"\n\n\"Yes,\" Kennedy replied automatically. Then after thought, \"No...I don't know.\"\n\nSkylar only nodded as if it was what she expected before placing a hand gently on her shoulder and guiding Kennedy up those steps and inside the manor.\n\nInside was no less spectacular than outside. The polished hardwood floors of the wide entryway and the delicately carved wood paneling on the walls depicting birds and flowers stretched deep into the house. Small tables and display cases lining the hall held small statues or trinkets, all made with the finest metals or stone. The whole house appeared to be the same way. Turn after turn Skylar led her deeper and deeper into the house and then up a flight of stairs.\n\n\"All of the bedrooms are on the second floor,\" she explained. \"The steps can be a hassle at times, but you should be used to it by now, what with that everyday climb back at Mayweather,\" she joked.\n\nIt was only a short walk from the staircase until Skylar opened a door, gesturing Kennedy inside. \"These are your rooms,\" she said, striding into a small room with a few small tables and cushioned chairs. \"This is your sitting room,\" she said casually, opening another door at the other end of the room and stepping through. \"And this is your bedroom. You also have your own full bathroom and walk-in closet. Some of the clothes might not fit, but there should be enough for you to manage.\"\n\nThe room itself was nearly as large as their dorm suite back at Mayweather, had the walls separating the rooms from the common space been knocked down. On one side a massive four poster bed sat against the wall complete with two end tables, and on another a sofa. There was also a small table with two more cushioned chairs by the window facing the garden.\n\nSkylar moved through the room with a nonchalant grace as if this sort of bedroom was nothing out of the ordinary...and in this house it probably wasn't. A quick glance at the bathroom and closet showed that no expense had been spared when they had been made.\n\nSkylar turned on Kennedy, hands casually on her hips \"If you need anything, all you have to do is ask and it will be seen to. You have free reign of the house and its amenities, but I would recommend not leaving the grounds at the time. If you must, I, or Owen if you prefer, can escort you.\"\n\n\"Do they all know?\" Kennedy asked before she even realized what she was saying. \"About Abigail and I. It wasn't like it was a secret around campus. We've been sleeping together. I've been sleeping with my sister,\" Kennedy sighed. It was a secret she wanted to keep, but Skylar already knew. She had walked in on all three of them in a tangle of naked bodies.\n\n\"Well, half-sister...if that helps,\" Skylar said, causing Kennedy to glare. She might not be ashamed of what her and Abigail had done, but it wasn't as if she wanted the whole world to know...or Mr. Lockwood. \"Only Owen and myself. Your father does not, nor will he. Not from us anyway,\" she added. \"Our jobs are only to make sure you are safe, not to report the details of your lives.\"\n\nSighing, Skylar leaned against one of the bedposts. \"That wasn't even something we considered when we made the arrangements for you to go to the same school,\" she said with a small shake of her head. \"The plan was for you two to have a chance to meet each other without being forced together. When I learned that it wasn't just you and Lexi, but all three of you mixing it up, it was too late to do anything to prevent it. The damage was already done. And I wasn't about to ask your father how I should go about stopping the sexual relationship between his daughters without exposing myself to the pair of you. He really loves you both, and I don't know what that revelation would have done to him.\"\n\n\"Don't call him that,\" Kennedy said flatly. \"He loves her. I was just a mistake he feels guilty about.\"\n\n\"I'm sorry you feel that way about it,\" Skylar said a little sadly. \"But he does love you.\"\n\nSkylar, feeling Kennedy's mood, stood up straight and moved for the door.\n\n\"You know you could have told me, right...about all of this,\" Kennedy said before she could leave. \"I thought we were friends. Maybe not the best of friends, but you could have told me.\"\n\n\"We are friends,\" Skylar turned her head to smile at her. \"And that is why I didn't stop you from looking for your answers,\" she said. \"You know, breaking into the Administration Building with your friends...or the three other times you went in without them.\" Skylar's grin widened as she pulled open the door to leave. \"Get some rest Kennedy. It's been a very eventful day.\"\n\nKennedy sat on the edge of her bed, mouth wide in surprise as the door clicked shut. Skylar knew what we were doing the whole time? Kennedy shook off her shock quickly and looked around the lavish room. All of this extravagance was for one person, and she didn't have the first clue what to do with it. It took her another moment to realize she was sitting on the bed. She hadn't even remembered sitting down.\n\nA yawn cracked her jaw unexpectedly, and she realized how right Skylar had been. This day certainly had been eventful, and she felt exhaustion rising over the swirl of questions and emotions that had her mind racing for the last several hours.\n\nKicking off her boots, Kennedy crawled farther up the bed. The thought of removing her jeans or top never crossed her mind as she pulled the rich comforter around her all the way to her eyes to block out the light. Skylar had kept their secrets. Maybe she is my friend, Kennedy thought as she slowly drifted off.\n\n \n\n*** Lexi ***\n\nIt was lonely sleeping in our large makeshift bed alone. It had taken half the night just to find a way to fall asleep without Kennedy or Abigail beside me. I had tried to call them several times over the last two nights while I sat in my car, avoiding the prying eyes and questions, but both of their phones were turned off. There hadn't even been a text message from them when I woke.\n\nI was worried about them, and about Mr. Lockwood...or George as he had insisted, but I was frustrated with the lack of information, and the empty bed. What was it going to be like when they finally came back? I doubted they would want to continue on as we had been, now that they knew they were sisters.\n\nSighing, I pulled myself from bed and set to get ready for my classes. As much as I wanted to wallow in bed all day, I couldn't. Kennedy's and Abigail's problems might be important, but I still had my own. I couldn't afford to go back on academic probation, and I definitely didn't want to give Decker any more ammunition. He was now a constant figure in my thoughts that not even the worry for my friends could blot out. I'd had another visit with him yesterday, and I was already on the books for another this afternoon. When my friends had been here, it had been easier to deal with, but not having them around made it worse somehow. I had nothing to look forward to while they were gone, and only my daily pilgrimage to Decker's Office of Humiliation to dread.\n\nLooking through my closet, I considered wearing tight jeans and boots, anything at all that would be difficult to remove. Part of me wanted to make it as hard as possible for Decker to get what he wanted. The other part, the more rational part of me, knew that it wouldn't matter how hard it was to get out of my clothes, Decker would get what he wanted either way. Instead, I picked out a simple summer dress made from black and white slashes and a pair of flats.\n\nI itched for my Louboutin heels. They would have looked amazing with this dress, but the last thing I wanted was for Decker to think that I was trying to dress sexy for him. As it was, I still thought this dress showed a bit too much cleavage. Well, whether he approved of my choice of attire or not was irrelevant. Whatever he demanded of me today, I would be able to get through it, and away from him as quickly as possible.\n\nAfter a quick application of makeup, I snatched my purse and bookbag before charging out of my room in a preemptive move to forestall any questions from the nosy girls in our dorm.\n\nI barely caught anything from any of my three classes. My phone still sat silent, waiting for word from Kennedy or Abigail. I knew I should be trying to figure a way out of my own mess, but forcing myself to think about my situation was less than appealing. Whispers from my classmates and darting glances followed me from class to class. Some tried to subtly dig for some scrap of gossip, but most saw my mood and thought better of it. The ones that did ask received short answers that left them shrugging away disappointed. There were even girls I had never spoken a word to before trying to be friendly in an innocent way, hoping to just get close enough so I would let something slip. Vultures.\n\nBefore I knew it, my day of classes was over and girls all around me were rising from their seats in the small auditorium and heading for the doors.\n\n\"Remember,\" Mrs. Holland called as they funneled themselves toward the exit. \"Friday is the last day to turn in your papers for full credit.\"\n\nNone of the other girls stopped or even looked back as the professor called out her reminder. Slowly pulling myself to my feet, I picked up my bookbag and started down the steps. It seemed like I had only just sat down. I couldn't even remember what the lecture had been about. All I could think about was that I was due in Decker's office in fifteen minutes.\n\n\"Is everything all right, Miss Allen?\" Professor Holland asked as I trudged down the last two steps in front of her desk and podium.\n\n\"What?\" I asked before composing myself. \"Oh, sorry. I'm fine.\" I put on a smile. \"I was just thinking of something else.\"\n\n\"That was quite the paper you wrote,\" she continued with the hint of a smile. \"I was worried about you at the beginning of the semester. Some girls burn themselves out quickly and never recover,\" she confided. \"I'm glad to see that you are not one of those,\" she said, this time her smile was full and motherly. \"See you again Friday?\"\n\n\"Yes, Friday,\" I said, with a nod before turning to leave.\n\nAt least some small part of my life was going well. My grades had never been better, but I was wondering if I had ever felt worse. No matter how bad things were before, I always had two things, my friends, and that warm feeling I got from being my true self, being Lexi. Now my friends were gone, and that warm glow was being overshadowed by the gaping pit in my stomach caused by the things I found myself doing. It had been much easier to put on the brave face for Kennedy, but now that she wasn't here, I found it harder and harder to convince myself that my subservience to Decker was for a good cause. I had been ready to go down with the ship before; let Decker expel me. What had changed? Kennedy wasn't in danger anymore. So, what was I doing?\n\nLost in my own thoughts, I didn't even hear my name being called. It wasn't until a man darted in front of me that I stopped.\n\n\"Danny!\" I exclaimed, unable to keep the shock from my voice as I looked around nervously. \"What are you doing here?\" Besides teachers and other staff that maintained the school, there were never any boys on campus. It wasn't a rule exactly. The only rule about boys involved them being in the dorms, but seeing a boy on campus at all was still an unnatural sight.\n\n\"I came to see you!\" he said smiling nervously. He was wearing dark blue jeans with black boots and a black button up shirt, untucked with the sleeves rolled up. He was also holding a long stem rose in his nervously twitching fingers. He was as handsome as I remembered. Don't even think that! I cursed myself, suppressing the smile that instinctively wanted to mount my lips. After the things he said to me he can burn for all I care!\n\nI only stared at him as he twiddled with the rose in his hands and he continued on, more of his anxiety showing.\n\n\"I haven't been able to stop thinking of you,\" he said, lowering his voice and taking a step closer to me. His eyes flickered to those walking by. There were some surprised looks at seeing a boy on campus, but none stopped, or were near enough to hear what was said. \"The things that I said...I was shocked, and confused,\" he said with a hopeful smile as he took my hand. \"I think I'm in love with you.\"\n\nThis close, his smell filled my senses, and I was unable to stop a flood of memories of the times we had spent together, and the feel of his lips on mine, our bodies pressed tightly, and his strong hands...Then memories of the things he had said to me on Valentine's Day filled my mind.\n\n\"You think you're in love with me?\" I asked incredulously. \"What about all of those things you said to me?\" I continued, lowering my voice. \"All that I'm not gay stuff? You called me a freak!\"\n\n\"I was confused,\" he pleaded. \"It all came so suddenly. I'm ashamed for what I said to you. It was not right. I've thought about calling you to apologize nearly every day since then. I'm here now though, and I want to try again. I can do better. I can get used to your...you know,\" he smiled nervously, eyes flickering to the skirts of my dress.\n\nHe had nearly had me until the last. Those sweet adorable brown eyes, and his cute nervous smile, not to mention surprising me like this in person. That last remark though; it set a fire burning inside of me.\n\n\"You can get used to it?\" I asked, my voice flat and quiet.\n\n\"Yes!\" he said, obviously missing my anger. \"I'm sure I can. I just want to be with you. I miss you.\"\n\n\"You shouldn't have to get used to anything!\" I said, a viperish tone entering my voice as I yanked my hand from his, taking a step back. \"You get used to the heat, or certain foods. You don't get used to who a person is. You either accept them completely, or not at all.\" I had Kennedy and Abigail to thank for that, and Trevor too. He didn't even bat an eye when I told him about me. He never even flinched when he saw my cock, or when it touched him in our love making. Knowing that there were men like that out in the world gave me hope.\n\n\"I didn't mean-\" Danny tried to cut in.\n\n\"Didn't mean what,\" I asked furious, and only barely able to contain the volume of my voice. \"to make me feel unnatural, like a freak? I like who I am, and I won't let a man like you make me feel less. Whatever you were after here, you can forget it,\" I said harshly, eyes flicking to the rose he still held.\n\n\"Please, Lexi,\" his voice sounded pleading. \"I love you. I don't think anyone will love you the way that I do!\"\n\n\"That's what I'm counting on,\" I told him firmly before walking away.\n\nI only made it a few steps before turning back to him. The hopeful smile on his face at seeing me walking back slipped from his face as soon as I reached him.\n\n\"And if you dare tell anyone about me, and I mean anyone, I will make sure they all know how hot you were to make out with a boy,\" I spat, threatening. I still had my secrets to keep, for now. \"And don't think there aren't any pictures floating around of the two of us. Kennedy and Abigail certainly had their phones handy when you had your hands all over me on the dance floor,\" I lied. Seeing the sickening cowed look on his face, I gave a sharp nod before walking away from him for good.\n\nMutually Assured Destruction. As much as he wanted to try and make a go of it with me, I knew he wouldn't want anyone knowing, and the look in his eyes at the end proved it. It was a powerful tool, but only if you were willing to let the world burn. In truth, I wasn't sure if I was or not.\n\nI was halfway to Evens Hall when my phone vibrated in my purse. Fury quickly diminished as I scrambled to find it among the clutter. It had to be Kennedy or Abigail. Alas, it was not. Reading the text sent my mood spinning back towards a fury.\n\n~You are late for your appointment, Miss Allen~\n\nIt was sent from an unknown number, but it could only be one person. Decker. Now there was another man who took me for nothing more than a boy in girl's clothing, and a sex object as well! Since finding myself under his thumb I had found myself fighting back a dour, forlorn feeling that I would spend the rest of my life either bent over, or on my knees for that creep.\n\nAll I wanted was a normal life. To be happy. To have people who truly cared about me. To be accepted for who I was. Nowhere in my dreams included being used by any man. If only I had something on him, I thought, thinking again of Mutually Assured Destruction.\n\nHis extortion of a student for sex didn't count. He had just as much hanging over me and more, and on my part, it would just be my word against his. I needed something damning to tip the scales if I was to play that card. Could I though? If he didn't cave, the world surely would burn...my world at least. As I quickened my step towards the Admin Building, I began maneuvering the pieces of my problem around in my head, trying to click them together into a plan. If the world did burn, I had to make sure I didn't burn with it.\n\nWhen I neared his office on the second floor, I tucked my phone back into my purse. Butterflies hammered my insides with nervousness. Not for whatever Decker had planned for me. I could endure that if I must. What had my insides doing summersaults was the determined thought that kept repeating itself in my head.\n\nThe secretary's desk sat empty in the outer office, and the inner door stood wide open, giving him a perfect view of my approach. That sickly creepy smile split his face as I entered.\n\n\"You're late,\" he admonished. \"Shut the door.\"\n\nI did as he asked, this time not even flinching at the loud click of the door closing me in with this disgusting man. Taking a deep breath, I continued repeating those words in my head, steeling myself. This will be the last time he ever touches me.\n\n*** Kennedy ***\n\nEven with so many people in the manor, it still felt empty. Assistants, advisors, and security professionals had all but taken up residence in the main house, mostly staying closeted in one of the parlors, or the grand dining hall that had been converted into a conference room. When she wasn't sleeping, Abigail was with them. Kennedy had hardly caught a glimpse of her in the two days they had been there. It wasn't surprising though. Kennedy spent most of her time shut away in her rooms, one of the maids had even taken to bringing her meals up on a silver tray.\n\nKennedy couldn't seem to get a grip on her emotions. One moment she was angry and the next sad, but most of all frustration filled her, just waiting to tip back to one of the others. The night before, she had finally called her mother in a rage, demanding to know why she never told her about Mr. Lockwood being her father. She had laid into her, ripping her up one side and back down the other, and a moment later she was sobbing incoherently. Rage wasn't an uncommon emotion, but Kennedy hardly ever let herself cry, and it was disconcerting how easily it had come on.",
        "When cooped up frustration drove her to leave her rooms, she would escape to the gardens. The corridors felt like a maze. With all the walls made of aged wood paneling, and the deep red carpet runners stretching over the dark hardwood, every corridor seemed to look alike, making it easy to get lost. Kennedy was sure she was heading the right way though.\n\nThe wide hallways were empty save for a few house staff going about their duties, somehow only seeming to intensify the empty feeling of the house. Sometimes, Kennedy would pass a door and hear the unintelligible murmurs of people talking on the other side, but for the most part that was the only sign that other people were actually there.\n\nKennedy tugged at the tight fitting bust of the dress she wore as she strode down the main hall towards one of the back doors that had a path to the gardens. Skylar had been right assuming that some of the clothes wouldn't fit. Out of most of the clothing she's sorted through, she was left with mostly dresses for options. The cherry blossoms on white was cute enough, but it was a bit loose in the waist, and too tight up top.\n\nUp ahead, a door sprung open. The once muted noise burst to life, filling the hall with the voices of several people talking over each other. Abigail exited flanked by two advisors, and even more trailing behind. Their eyes caught for a moment. Shock at seeing Kennedy smoothly turned into sadness, and Abigail lowered her eyes as she was ushered in the opposite direction. Kennedy caught snatches about the search efforts, but once they turned a corner, she was no longer able to hear.\n\n\"You could have gone with them you know,\" Skylar said making her jump. As if she hadn't noticed Kennedy's reaction, she went on. \"You're a Lockwood too, and you have every right to sit in on any meeting.\"\n\n\"I'm a Monroe,\" Kennedy sighed, eyes still gazing at the empty hall where Abigail disappeared. That sadness, the search for her father must have been going worse than Kennedy thought. \"Just a Monroe.\"\n\n\"Do you want to get out of here for a bit?\" Skylar asked. \"I'm going into town to pick up some things.\"\n\nKennedy was surprised at the offer, but quickly accepted. She needed to get out of this place, even if it was only for an hour. This house, and everything going on, felt so strange. It would be a relief to see anything close to normal.\n\nAs they headed to one of the black SUV's in front of the garage, Kennedy asked if they should bring some of the guards. It felt odd asking a question like that, but since learning that her father was Mr. Lockwood, she had begun to feel an itch between her shoulder blades as if someone was out there that might want to hurt her, or use her to get to one of the real Lockwood's. \"I should be more than enough,\" was Skylar's only reply, a small smirk on her lips.\n\nThe drive into town took nearly an hour by itself. It really was a town. It couldn't have been more than a few miles from end to end. The sun stood just down from its peak as they pulled into a parking spot in the center of a cluster of shops that lined either side of the main boulevard.\n\nKennedy followed quietly just behind Skylar as she worked her way through a few shops to pick up whatever it was she was looking for. Kennedy caught something about the other woman that she thought she had seen before but dismissed. She was still Skylar, but the way she walked and moved seemed different. Her eyes seemed sharper as well, as if she took in every single detail of her surroundings. The notorious party girl had vanished, and in her place stood something else...something dangerous. Kennedy shook her head at that thought. The only thing Skylar was dangerous to was a frat boy's stamina.\n\nThey were in a small clothing shop and Kennedy was browsing, trying to kill time while Skylar purchased socks and a new pair of boots. At first, Kennedy thought Skylar had made up a reason to get her out of the house for some fresh air, but after the number of things the girl had purchased, this little outing was at least as much for Skylar as it was for her. Come to think of it, Kennedy thought as she fingered a really nice leather jacket, Skylar left everything she had in the dorms at Mayweather, just as she had.\n\n\"That's a nice jacket,\" Skylar said, causing her to jump yet again. That woman was sneaky, hardly making a sound and never where you thought she was. \"Do you want it?\"\n\n\"Not for eight hundred dollars,\" Kennedy laughed. It was a nice jacket, and it was much cooler than in Arizona.\n\n\"While we're here, why don't we just get you a few things as well,\" Skylar said, pulling the coat off the rack. As much of a question as it was, her tone left no doubt that it was more than a suggestion. \"You may look pretty in that dress, but if I've learned anything about you from being your roommate, you would much prefer a good pair of jeans and boots, unless it's a girl's night, or sex is in the offing,\" she smirked knowingly.\n\nShe wouldn't have minded some new clothes, but the truth of it was she was broke, and she told Skylar as much.\n\n\"This one's on Mr. Lockwood,\" she said casually. \"He may have been generous with all those birthday cards he sent, but he never got the chance to spoil you properly. Let's just call this an advance,\" she smirked as she stepped to another rack, pulling off two pairs of dark jeans and holding them both up to Kennedy before choosing one.\n\nKennedy felt a little awkward using Mr. Lockwood's money. She was still angry with him, but with Skylar holding the reins, there wasn't much stopping it. The fact that it wasn't exactly him giving her the money, but Skylar swiping that black AmEx card, made it somehow acceptable. It took another two hours to work their way back through most of the shops, and by the time they were done, Kennedy hadn't a clue how much they had spent. The back of the SUV was filled with bags, including one with the dress she had been wearing. She now wore a tight-fitting pair of jeans and white t-shirt, with the black leather jacket over it and a comfortable but fashionable pair of boots that matched Skylar's new pair.\n\nThey both sat at a caf\u00e9 table outside a sandwich shop that looked to be nothing special until you tasted what they made.\n\n\"This is incredible!\" Kennedy said through a mouthful of provolone.\n\n\"Every time I come into town, I make sure to stop here. I've tried convincing old Edward that he needs to branch out, but he doesn't want the hassle. Besides, if it wasn't him making the sandwiches, I doubt they would taste half as good,\" she confessed.\n\nKennedy was halfway through her hoagie when she finally paused to ask Skylar a question that had been bugging her. \"Why did they send you to watch over us at Mayweather?\"\n\n\"You mean why did they send a girl?\" she smirked. \"Or why me specifically?\"\n\n\"Both I guess,\" Kennedy said, trying to hide her embarrassment. Skylar had hit the nail on the head on her first guess.\n\n\"Well, I wasn't the only one there. I was just the point man. And at an all-girls school, the point man had to be a girl as well,\" Skylar explained in a nonchalant way as she continued to pick at her basket of fries. \"There were about twenty of us rotating in and out, but I was the only one that ever made direct contact. Everyone else watched from a discreet distance or out of sight completely, only waiting to move in if they were needed. Your father nearly had a fit when you went to Cancun!\" she barked a laugh. \"There must have been fifty of us on that island, like a small army. That was the only way I could convince him to let you girls have your fun.\"\n\n\"You were there?\" Kennedy exclaimed.\n\n\"Yeah, I thought one of you might have caught a glimpse of me at one point and I had to spend the rest of the trip in my room.\"\n\n\"Abigail thought she saw you there!\" Kennedy laughed. \"We thought she was just seeing things.\"\n\n\"As for why me specifically,\" she said, shrugging the shoulder of her coat off and pulling up the short sleeve to reveal a tattoo, \"Staff Sergeant Skylar Rhoads, United States Marine Corps,\" she said with pride.\n\n\"You were a Marine?\" Kennedy said eyeing the woman over again, near disbelieving.\n\n\"I am a Marine,\" she corrected Kennedy, a fire lit in her eyes. \"Once a Marine, always a Marine.\" When she saw the understanding in Kennedy's eyes she continued. \"When I had gotten out, I was having a hard time finding work. I was a small thing of a woman and most couldn't see past my breasts. I never did take the military up on their college offer, so it was either bartending or joining a private military group. I wasn't going to be associated with the latter. A couple of guys working for Mr. Lockwood mentioned my name to him. They were army, and we only crossed paths a couple of times in Kandahar, but I guess I made an impression. I've been working for George ever since. Excuse me, Mr. Lockwood.\"\n\n\"How old are you?\" Kennedy asked. She had assumed that Skylar was her own age or at least close.\n\n\"Twenty-six,\" she said easily.\n\nShe didn't look a day over twenty.\n\n\"Wait, you never had a tattoo at school!\" Kennedy said.\n\n\"I had to air brush over the damn thing!\" She didn't sound thrilled about that. Skylar took a great deal of pride in being able to wear the eagle, globe, and anchor on her skin.\n\n\"If you're about done there, we should probably be getting back,\" Skylar said crumpling up the paper that once held her hoagie while glancing back at the sun just touching the horizon.\n\nTogether, both of them rose to leave. Edward, the shop owner strode out quickly to catch them, handing Skylar a heavy paper bag for her to take to go. She passed him a folded note, with a thanks for the delicious meal and the pair headed back to their car, and the Lockwood Estate. The bag was filled nearly to the brim with sandwiches wrapped in paper, and then cellophane to keep them fresh.\n\n\"I always like to take some back with me. Owen loves the things, and they make an easy snack when you don't have much time to spare,\" Skylar said when Kennedy had remarked on the number of sandwiches. \"You're welcome to some. I keep them in the small fridge in the second-floor kitchen.\"\n\nTheir day out had proven to be just what Kennedy needed. She still held those same emotions that troubled her before, but laughing with Skylar while they listened to music and talked about things that had happened while they were at Mayweather seemed to lift a weight from her shoulders, a weight that she hadn't realized was there. It was rather enlightening to hear of some of their exploits from Skylar's perspective. Like Skylar flirting with the night security guard so he wouldn't catch Kennedy sneaking into the Admin Building alone, or when Skylar had accidentally let herself get totally hammered during the Halloween scavenger hunt and had to call for someone to replace her from the other security personnel that were shadowing them.\n\n\"I tried to stick to mostly seltzer water and ginger ale, but that's not the kind of thing you find at a frat party. Before I knew it, I was already too drunk to handle any crisis that might have come. I was slurring my words like a first timer when I called Owen to send in reinforcements. He was laughing so hard, 'Ole' Battle Rhoads letting a few college girls out drink her!'\" she chuckled with a hand on Kennedy's shoulder as they both took the steps up to the big front doors of the manor.\n\nThe house was silent inside except for the faint murmur of voices coming from the parlor next to the first flight of stairs. Most likely it was Abigail discussing the search for her father. However mad she was at Mr. Lockwood, she felt for her friend. None of this could be easy for her. Her gaze lingered on the door as they walked quietly past.\n\n\"Why don't you just go on in and see what they're talking about?\" Skylar asked. \"Whether or not you're ready to admit it, you are a member of this family, and I'm sure Abigail would appreciate your presence.\"\n\n\"I don't know about that,\" Kennedy sighed. That was a whole other can of worms, and in a way, that one hurt worse than the other. Before Skylar could press it, Kennedy went on. \"I think I'm just going to head up to my room and lay down, if that's all right.\"\n\n\"Of course,\" Skylar said catching her mood. \"I'll have someone bring up your bags from the car in a bit.\"\n\nFor a moment, Kennedy had forgotten about all the shopping they had done. She paused, then gave Skylar a quick nod before striding deeper into the house for one of the back sets of stairs that led up to her rooms. It might have still been early yet, but a nap sounded nice.\n\nHer nap took her well into the night. When Kennedy woke, the clock by her bed showed just past one in the morning. Despite that lazy, comfortable feeling flowing through her from the rich comforter and the expensive mattress, she knew there was no way she would be falling back to sleep any time soon. Still, she planned to stay right where she was, until a short while later her stomach grumbled, and she remembered those hoagies they had brought back.\n\nWith her stomach leading her, she rolled out of bed. The hardwood was cool against her feet as she padded to the closet in only her underwear and tank top. The jeans she had discarded on the floor earlier were amazing, but she had no desire to try and squeeze into them again. They fit like a glove, showing off every little curve, but she didn't want to put in all that effort for a sandwich, no matter how good it tasted. Instead, she found a pink and purple pair of silk pajama pants hanging on one of the racks.\n\nSuitably covered, she padded out of her rooms and down the hall in search of the second-floor kitchens. She had not even known there was more than one kitchen until Skylar had mentioned it. Kennedy wandered the halls, worried that she might not even recognize the door to the kitchen if she saw it. It wasn't like there were signs. There should be signs. The last thing she wanted to do was open the wrong door to somebody's bedroom. That kind of thing could be awkward.\n\nFinally, she came across a door like no other. Instead of a handle, it had a brass bar stretching across the middle, and had a brass plate at the bottom of the door, worn with scuff marks from feet. Cautiously, she pushed it open, and it was indeed the kitchen. It was large, with stoves, ovens, and range tops lining the walls in a horseshoe and two long, narrow stainless-steel prep tables occupying the space between them. Two refrigerators stood in the corner on the opposite wall, one was massive and stainless-steel, but the other was white, and of a size you would find in an ordinary home. Figuring that was the small refrigerator, she padded over to it.\n\n\"Late night snack?\" Skylar asked, spooking Kennedy just as she opened the refrigerator.\n\n\"Shit!\" Kennedy exclaimed. She needed to get a grip on herself. This woman had her jumping out of her skin at every turn! Skylar was sitting in a corner off to the side of the door eating a bowl of cereal as if it was the most normal thing to be doing in the middle of the night. \"Can you wear a fucking bell or something?\" she asked, holding her hand to her thumping heart.\n\n\"Didn't mean to scare you,\" Skylar blushed. \"I'm just taking a midnight lunch.\"\n\n\"Do you guys ever stop working?\" Kennedy asked, feeling her heart beginning to calm down.\n\n\"We take shifts, but we're always on call,\" she explained. \"Couldn't keep away from the hoagies huh?\"\n\n\"Something like that. You don't mind, do you?\" Kennedy asked, holding up one of the sandwiches.\n\n\"Not at all, I offered. Have at them. I can always get more.\"\n\nKennedy closed the refrigerator, and not seeing a reason to leave, sat at the small table with Skylar while she ate. As talkative as they were earlier, silence engulfed the room only broken by the crinkle of paper from the sandwich, or a clink of a spoon on the bowl. It didn't feel awkward for Kennedy. In fact, it was quite relaxing. She was enjoying the other girl's company. It wasn't until she was finishing her sandwich that she noticed the look on Skylar's face. She seemed to want to say something.\n\n\"Is everything all right?\" Kennedy asked.\n\n\"What?\" Skylar said, jerking up her head. \"Yeah, I'm good,\" she said quickly. She stirred the milk in her bowl for a moment before continuing more slowly. \"I've just noticed that you haven't been in the best mood since you found out about your...about Mr. Lockwood,\" she amended carefully. \"After all the effort you three put into trying to find out, I thought you would have been at least a little pleased to finally know.\"\n\n\"I don't know what I am,\" Kennedy admitted with a sigh. She let her head fall into her hands, propped up by her elbows on the table. \"I thought I wanted to know, but now that I do, I can't stop feeling angry. It's like he swept me under the rug so no one would find out about me. Why couldn't he have just told me?\"\n\n\"Sometimes the world is more complicated than that, and sometimes the answers even more so,\" Skylar said kindly, letting her fingers touch Kennedy's arm soothingly. \"Sometimes we don't always get all the answers we want, and have to settle for what we can get. When we find your father maybe he can tell you.\"\n\nThere was a long pause before Skylar's hand pulled away and the scrape of a chair made her look up.\n\n\"Take a walk with me,\" Skylar said standing, half turned towards the door. \"There is much more of this house that you haven't seen. It'll be fun,\" she smiled holding out a hand.\n\nNot wanting to offend Skylar after all of her kindness, Kennedy followed. She had spent most of her time secluded in her rooms, or out in the gardens, she really hadn't seen most of the house. The second floor mostly contained bedrooms, more than she could imagine ever being used at one time, but besides the kitchen, there was a smaller parlor, a smoking room and a billiards room. The turrets that stretched up to the third story held a sitting room, a library, a room of records behind a stout locked door that contained the entire history of the family and its business endeavors, and one more that had the look of a play room that had always been set aside for Abigail, remodeled over and over again as she aged.\n\nShe was sure she knew what was held on the bottom floor, but Skylar showed her that anyway. Besides the two parlors, the kitchens (with the maids wing on the far side of it where they lived and slept), and the grand dining hall, there was a theater room that looked exactly like a movie theater, only with a slightly smaller screen and only four rows of red velvet seats. A ballroom took up the entire far back corner; big enough to match most hotels. After all of that, it was surprising how small the basement was, containing only a two-lane bowling alley and what appeared to be a speakeasy style bar.\n\nThere was one room that Skylar had seemingly skipped over on the first floor that she led Kennedy back to after returning from the basement. Without a word, Skylar opened the door and gestured her in as she turned on the light.\n\nThe room had two long bookcases along the adjoining walls filled with everything from law texts to Tom Sawyer. In the corner opposite sat an antique desk that was neatly organized with several picture frames. Even more pictures sat on the two remaining walls and some in empty spaces on the bookshelves.\n\n\"What is this place?\" Kennedy asked.\n\n\"It's your...Mr. Lockwood's study,\" Skylar said, guiding Kennedy inside with a note of familiarity. \"This is where he spends a lot of his time when he's here.\"\n\nWhile Skylar moved off to the side by one of the bookshelves, Kennedy took a closer look around. Every picture was of him and Abigail. Some of the older ones had a woman in them, which could only be Abigail's mother. All of the pictures were angled just so, so that whoever sat behind the desk could see each of them easily. It was as if his other daughter never existed.",
        "\"Ah-hem,\" Skylar cleared her throat, pulling Kennedy's attention.\n\nWhile Kennedy was looking around, she hadn't even noticed what Skylar was doing. Casual as could be, she was standing next to the bookshelf, but it was different now. Part of it was pulled out slightly exposing a room hidden on the other side. Part of the bookcase itself appeared to be fastened seamlessly to a door that was now cracked open.\n\n\"Well, my breaks over,\" Skylar said, peering into the secret room meaningfully. \"I'm going to go back to making the rounds. Have a good night Miss Monroe.\"\n\n\"Wait,\" Kennedy stopped her as she was leaving. \"What's in there?\"\n\n\"I have no idea what you're talking about,\" she smiled conspiratorially. \"I was never here.\" With that, she slipped out of the study, closing the door behind her.\n\nKennedy only paused for the click of the door closing behind Skylar before pulling the hidden door further open. It was dark inside, and she fumbled along the walls for a light switch. They seemed to be covered with pieces of paper. It wasn't until a cord brushed her shoulder that she realized there wasn't a wall switch and pulled on it.\n\nLight filled the dark room, and it took a moment to realize what she was seeing. The room was no bigger than her walk-in closet, and the walls were covered with pictures. There were so many of them. They were bunched together as tight as could be managed, sometimes overlapping, only holding one subject in focus. Her breath caught as she stepped closer, her fingers gently brushing against a photo that must have been taken at least fourteen years ago. It was her as a child. She recognized where it was taken too. It had been one of those indoor amusement parks for kids that had been popular back then. In the picture a tiny Kennedy was playing with another small girl with her dark brown hair in pigtails. In the background stood a man in slacks and a neat polo smiling...It was Mr. Lockwood! And from what she had seen of the other pictures in his office, that little girl was Abigail. It felt like her heart had stopped and her stomach had leapt into her chest.\n\nFinally, she was able to tear her eyes away from the photo to look at the others. Every single picture held her face. Some were of significant moments in her life, but most were just candid photos from her everyday life. T-Ball games when she was small, her eating with friends at a mall food court, her sitting at a bus stop flipping through songs on her iPod, completely random. There were others though, more of her birthdays, a picture of her at the fifth-grade science fair when she won second place. More and more of them popped up as she scanned the walls. She slowly moved around the room, trying to take them all in, when she came to a picture of her in her cap and gown from graduation a little less than a year ago. It had been a mad house with all the students and all of their family members. Behind her was a mass of people, but one person stood out sharply even with the ballcap on his head. Mr. Lockwood looked as if he was photo bombing her, just barely leaning into the frame with a ridiculous grin from ear to ear and two thumbs up on either side of his face.\n\nKennedy let out a choked laugh at the silliness and realized the she had been crying. Her cheeks were wet, and more tears were still flowing, but it was hard to care at that moment. Her entire life was on these walls. Maybe not every moment, but looking from picture to picture, it was as if she was watching herself grow up. There must have been at least a thousand photos...more. Plucking the picture from the wall, she sat down right on the floor.\n\nMy dad! The thought made the tears flow even harder. He looked so goofy in that picture, but also proud. Proud of her. Maybe she wasn't the embarrassing secret she had been worrying about. Glancing back up to peer at the walls again, Kennedy couldn't help but feel that he had been there, watching over her for her entire life.\n\nFlipping up the bottom of her shirt, she dabbed the tears from her face. Her heart was still all aflutter, and she didn't think it would stop any time soon, but for the first time in what felt like a long time she felt happiness, and she would not let her tears ruin it.\n\nShe sat staring for a long while until she finally convinced herself that she could always come back. Hesitating before turning out the light, she stared at the photo in her hand. She knew she should put it back, but she didn't want to let it go. He has so many of them, he won't miss just one, will he? In a snap decision, she shut out the light and left with the picture still in hand. If she changed her mind later, she could always put it back. She was sure she would be coming back to this room.\n\nKennedy carefully closed the bookcase, turned out the light to the study and left. She was so distracted, looking at the photograph that she became lost several times before she found the back staircase. The house was a maze as it was, and she wasn't sure she would be able to find her own rooms unless she came from that direction. She was walking down the second-floor hall, turning down the South Wing, when she ran headlong into Abigail in a red silk dressing robe, obviously headed for the kitchen.\n\nBouncing back from each other, Kennedy quickly hid the photo in her back pocket. It was startling finding anyone else walking these halls at this time of night, let alone Abigail. They had spent all of this time quietly avoiding one another over the past couple of days, and now they were standing face to face. Abigail's eyes were as wide as Kennedy's must have been, and filled with a worried shock.\n\nAn hour or so ago, Kennedy might have simply walked away from such an encounter, but after seeing her father's study, nothing could dampen her good mood. Without thinking, she pulled Abigail into a tight hug that startled both of them. A brief thought came that she should release her, but with Abigail's scent filling her senses, a soft vanilla and lavender, mixed with something else that was purely Abigail, she couldn't make herself. That scent felt like home.\n\nAbigail recovered from her shock, and slowly brought her hands up to return her embrace. Kennedy wasn't sure how long they stood holding each other, but the longer it went, the more she became aware of Abigail's body against hers. Her soft curves and hard body made a delightful combination, and she could even feel the body heat emanating from her through the flimsy robe. All of those sensations mixed together stirring up memories of times that felt like forever ago. Times when they were alone, or with Lexi, with nothing between them but their skin.\n\nShe was nearly lightheaded. After so long a depression, tonight she felt like she was floating. This close to Abigail again, she knew what she wanted, and it took only a moment to decide that it was worth the risk. Turning her head slightly, Kennedy planted a soft kiss on Abigail's neck, waiting with held breath for a reaction. When Abigail did nothing, she set another kiss on her smooth skin, then another. Abigail's hold on her never lessened, and the trail of kisses worked their way up until she was nibbling on the girl's ear.\n\nA soft gasp slipped through Abigail's lips, and instead of pulling away, she only held on tighter. Knowing that Abigail wasn't running from her, or trying to stop what was happening, she became bolder, quickly planting her lips on Abigail's. Abigail didn't even hesitate to return the kiss, reaching her tongue out to meet Kennedy's; each showing just as much passion.\n\nStumbling, but not letting their lips part, Kennedy turned them and shoved Abigail up against the wall, eliciting a sexy purr from the other girl. Eagerness getting the best of her, she pulled at the ties that held the silk robe together. Beneath it, Abigail wore only her underwear, the matching black lace panty set making her pale skin seem to shine in the dim light.\n\nKennedy's fingers touched that glowing skin, feeling the warmth coming off of her in waves. Her fingers trailed down slowly, over Abigail's breasts, swelling with every gasping breath, down over a smooth flat stomach, tracing the faint lines of her tensing muscles. When her fingertips reached the hem of Abigail's panties, her hips lurched forward expectantly. Kennedy's hand slipped beneath, a deep need blinding out anything that wasn't the two of them and this moment. Fingers teased as they slowly tickled soft flesh. A light brush over her clit as her finger slid lower to her wetness. A flood of arousal met her fingers, slicking them and dampening her own panties further.\n\nAbigail was slumped against the wall and her silk robe had fallen carelessly off her shoulders to gather at the elbow. Kennedy ran slow pleasurable circles around Abigail's clit, muffling the sound of her sister's moans with a kiss. Abigail's leg lifted of its own accord, giving her even better access, allowing Kennedy to slip a finger deep inside of her wet pussy, and then another. The way Abigail was undulating, fucking her fingers, Kennedy could tell that she was close. A light filled her eyes, and she increased her efforts. She loved watching the other girl cum.\n\nWait!\" Abigail gasped, unable to stop her voice from sounding like anything but a moan. \"No. Stop!\" she pleaded.\n\nKennedy knew she should listen, knew she should stop, but she couldn't. Abigail was still riding her fingers, helping plunge them as deep inside as they would go. She might have been thinking of stopping this, but Kennedy was sure she could convince her that this was right, sisters or not. She broke their kiss, hoping to soothe Abigail and convince her that this was okay, that it was right.\n\nBefore she could speak, Abigail pushed her away gasping. Her hands went quickly to her robe, resetting it on her shoulders and tying it back at the waist. Her eyes darted nervously down the hall.\n\nWe can't...\" she said, gulping down a breath. Kennedy's heart clutched, but before the sadness could overcome the lust that still filled her to bursting, Abigail steadied herself. \"Not here.\" With no other word, she grabbed Kennedy's hand and pulled her down the hall at a near run, their feet padding softly on the red carpet runners. Past her own rooms they went until Abigail opened a door at the end of the hall, pulling Kennedy in behind her.\n\nBefore the door could finish slamming shut, Abigail was already tearing off her robe and throwing it to the ground, and before Kennedy could react, she was slammed against the door. Abigail kissed her hard while her hands frantically tore at her tank top, nearly ripping it before it was over her head and free of her arms.\n\nThe cool air hit Kennedy's bare breasts making her nipples harden even more than her arousal could. The desperate passion in Abigail infected her, and she was just as eagerly snapping the clasp at her sister's bra and yanking those black panties down her hips.\n\nWith fingers gripped inside the waistband of Kennedy's pajamas, Abigail sunk to her knees pulling pants and panties alike to the floor. Not waiting for Kennedy's assent, her head dove between her thighs. A hand hooked under one of Kennedy's knees, pulling it up to rest on her shoulder. Kennedy could do nothing but sag against the door as Abigail thrashed her tongue across her clit and slurped the nectar from her dripping folds. Suddenly two fingers were inside of her stroking that sweet, sweet spot, driving her towards her climax at a fury. Uncontrollably, her hips were darting forward to meet each thrust of Abigail's fingers. When Abigail began to moan around her clit, she lost herself. Her entire body trembled, and her legs threatened to give out. If Abigail wasn't half supporting her, she would have fallen to the floor long ago.\n\nRising to her feet, Abigail pressed her wet lips to Kennedy, sharing the taste of her arousal. It was a sweet kiss, tongues gliding gently together as Kennedy caught her breath and bearings. When her eyes opened, Abigail was smiling at her, a pleased look to that slightly tilted gaze.\n\n\"I've missed you!\" Kennedy breathed happily.\n\n\"I missed you too,\" Abigail smiled. \"We've got some time to make up for.\" Her fingers tangled in Kennedy's tousled hair, she gave a slight but determined pull as she led the other girl from the sitting room into her bedroom. She pulled Kennedy all the way to the bed and then shoved her onto it before quickly climbing up to straddle her waist.\n\nThe dominance Abigail was showing was a little frightening, but it only excited Kennedy more. This girl was going to take from her what she wanted, and she couldn't see a world where she would not give it freely.\n\n\"I thought you might not have wanted...this,\" Kennedy said, immediately regretting bringing up the one topic that might bring Abigail out of this lust fueled encounter.\n\n\"I have to admit, I was afraid,\" Abigail confessed as she settled down on Kennedy's tummy. \"When I found out you were my sister, I was afraid that my feelings would change, that if you touched me again it would feel...wrong. When you kissed me, I felt this wave of relief,\" she sighed gratefully.\n\n\"So, this isn't weird for you?\" Kennedy asked hopefully. She could feel a wet spot forming on her skin from Abigail.\n\n\"Because you're my sister?\" Abigail asked. \"I've thought of you as a sister for a long time before we learned the truth, and we still loved each other.\" The way she undulated her hips slightly told Kennedy that the love she spoke of was anything but familial. \"Now that I know, it does...add a little something extra to it,\" she blushed. \"Now I understand Lexi and Audrey.\"\n\nKennedy just stared at her. Abigail had a shy smile on her lips, but her eyes never left Kennedy's.\n\n\"Now if you don't mind,\" Abigail said, inching her way up until her pussy hung just above Kennedy's lips, glistening from the moonlight seeping in from the window. \"I really want my sister to lick my pussy,\" she said with a wicked smile.\n\nWith both hands holding onto the headboard, she lowered her mound to Kennedy's lips, and had to tighten her grip as Kennedy assaulted her. Kennedy's hands roamed her body as she plied that tongue over her sister's sweet pussy. Abigail rode her face like a woman possessed, barely able to stifle her moans. When her orgasm finally came, it was with a muffled scream, both of her hands pressed to her mouth, trying to trap the sound.\n\n*** *** ***\n\n\"Hey!\" a sharp voice called through her dream. \"Hey! Wake up!\" the world lurched back and forth until her eyes finally snapped open to see Skylar shaking her.\n\nIt took only a second to realize that this wasn't her room, not with all the extra furnishings and odd paintings on the walls. Out of reflex, she pulled the white comforter up to her chin. A glance to her side showed how useless that gesture was. Abigail was just stirring awake as well, and not a single part of the comforter covered her beautifully naked body.\n\nWhen Abigail finally noticed Skylar, and realized her and Kennedy were naked together in bed, she scrambled to cover herself with what remained of the comforter while trying to not let it seem like she was crawling under the covers with her sister. Deep blushes stained her cheeks, and her mouth opened as if trying to explain.\n\n\"No time for that,\" Skylar said dismissing their embarrassment, as if this was the kind of scene she witnessed every day. \"There's been news from the search parties.\"\n\nThey both sat bolt upright, for a moment forgetting their scandalous situation.\n\n\"What news?\" they both said on top of each other.\n\n\"There was a signal from the transponder, but only for a second,\" she said, then with a little heat in her voice, \"Those so-called advisors are saying it's just a ghost blip, a random chirp from the machine. But I'm not so sure. You both need to get down there and get a handle on this,\" she continued. \"The signal is six miles outside the search area, and they plan to pretty much ignore it.\"\n\nWhy they would ignore it, even if it was a thin lead, she had no idea, but she trusted Skylar. Disregarding modesty, she hopped out of bed in search of her clothing, and Abigail wasn't far behind her.\n\n\"Before you two go hurrying downstairs, you might want to wash your...everything,\" Skylar finished giving them a smirking look. \"You both smell like pussy.\" Before they could even comment, she began heading out. \"I'll try to talk some sense into them while you get sorted, but don't drag your feet about it.\"\n\nWith a backwards wave, she shut the door behind her and both girls scrambled to the showers. Skylar was right, they smelled like the morning after a sorority sex party.\n\n \n\n*** Lexi ***\n\n \n\nI sat waiting nervously outside the Deans office. This was it. This was really happening. I had known that I needed to do something to get away from Decker and now it was really happening. I would most likely still never be allowed back at Mayweather, but that was a small price to pay, however much it would hurt. Not going to jail was the real victory. They had been in there for a while, and I couldn't help but smile at the thought of terror filling Decker's eyes as the charges were laid against him.\n\nYesterday, when I had gone to Decker's office, I had set the voice recorder on my phone before going in. It was a useful app to record lectures for Kennedy when she decided to skip a class that we shared, or to just go back and listen to them myself. The way he liked to talk, and rub it in how little of a choice I had in his little arrangement, it had been easy. The not-so-easy part was having someone else listen to it...to know what I was being forced to do, even if they couldn't see a thing.\n\nMrs. Holland was the only person on the faculty that I could trust to help me with my problem. She taught Gender Studies and had always been very outspoken about gender equality and gender rights. If anyone would understand my situation, being transgender, and at an all-girls college, she would.\n\nHer office hours were from 10am until noon on Thursdays, and I was standing outside waiting for her at 10am sharp. It had been a little hard to explain to her my situation, and a light had shown in her eyes when I came out to her, but that shine quickly faded when I told her how the Assistant Dean had found out and had been blackmailing me into having sex with him. By then she had a sad look on her face. It got even worse when I played the tape for her.\n\nDecker: You're late. Shut the door!\n\nThe click of a door then a long pause\n\nDecker: You should have been here fifteen minutes ago, and now I have to make a conference call.\n\nLexi: How long are you going to make me do this?\n\nDecker: Until I get bored of you. You wouldn't want that, now would you? To go to jail? For everyone to know what a perverted little girly-boy you are?\n\nLexi: No.\n\nDecker: Then quit your jabbering and get under the desk. This dick isn't going to suck itself!\n\nSounds of shuffling and then the distinct sound of a zipper being drawn...\n\nMrs. Holland listened to the whole twenty minutes of it while I tried not to exist. It wasn't possible though. Not with her sad damp eyes, barely holding back tears for me. The rest of the tape was a combination of slurping sounds and Decker's voice while he conducted his conference call. Letting her hear that tape felt even harder than what I had to endure on that recording. And now the Dean of the school had heard it too, and doubtless countless authorities would hear it before Decker was sent off to prison. That's where he would go, Mrs. Holland was sure of it. I hadn't thought about it much, but whether I consented or not, it was rape. His power and position at the school precluded any question of whether I was a willing participant, and if it did not, he was on tape, threatening me with jail and expulsion if I didn't do as he wanted.",
        "After Mrs. Holland listened to it, and she finally gathered herself enough to speak, she insisted that the only thing to do was take it to the Dean and make sure Decker got everything that was coming to him. The school would easily look the other way so long as Lexi unenrolled quietly. Anything to avoid a public scandal about a school official extorting a girl for sex. Surely Mayweather would do anything to avoid that.\n\nThe Dean had listened to it as well and asked for the full story of how this all had happened, not just what was on the tape. He listened to that as well, rocking slightly back in his chair, a grim look cast over his steepled fingers. When I finished my account, he sent Mrs. Holland and I to wait in some of the chairs outside in the waiting area while he called Decker up to his office.\n\nHe saw me as he passed, his eyes widening for a moment before settling back to an only slightly creepy smugness and closed the door behind him. They had both been in there for some time now. I began to wonder if they were listening to the whole recording again. Mrs. Holland held a comforting hand on my arm as the minutes ticked by.\n\nIt had been nearly an hour when two policemen arrived, striding casually down the hallway. I had never seen such a beautiful sight. I wished I still had my phone so I could take a picture of Decker in hand cuffs. Whatever else happened, I was free!\n\nThe door to the Deans office opened and Decker strode out followed by the Dean himself. There was a satisfied smile on Decker's face, and I was waiting for it to melt away when it hit him. Then the Dean pointed at me.\n\n\"That's him,\" he said.\n\nThat was all, nothing else, and one of the police officers lifted me up by the arm. \"Alexis Allen, you are under arrest for Fraud, Voyeurism, and Trespassing. Turn around.\"\n\nRough hands jerked me as I was spun away from them to face Decker. The smile on his face was chilling as he watched with satisfaction. I could barely hear the other officer reading me my rights, or Mrs. Holland's protests that Decker was the one that should have been getting arrested, and that I was the victim. I didn't hear anything, and I felt nothing. Nothing except the cold steel clamped tight around my wrists."
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "blackmail",
        "college",
        "dubious concent",
        "group sex",
        "incest",
        "lesbian",
        "secrets",
        "transsexual"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/womens-studies-ch-14"
}