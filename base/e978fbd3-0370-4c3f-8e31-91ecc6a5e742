{
    "title": "What You Wish For Pt. 04",
    "pages": [
        "Introduction.\n\nSorry, I've done it again. No sex in this chapter. Wait for the next chapter. There's sex in that one. This one, though, is really going to get all of you apprehensive. Oh no, you'll scream, is Tyler getting spineless? Are you really going to try shoving reconciliation down our throat? Wait and see. More importantly, let me know whether I've done anything to begin redeeming, and more fully fleshing out, the Kristin character. Remember, this is a personal exercise in creating better female characters, which can be awfully tough when you're a typically shallow male like myself.\n\nThe first chapter was posted today, the day I'm submitting this, and I'd like to thank all of you who have taken time to read and comment. And yes, the whole thing is written and being posted on consecutive days, so don't worry.\n\nAgain, thanks.\n\n*\n\n\"It's a simple question,\" I said to Allisyn.\n\nHer eyes wouldn't meet mine, though, and that gave me the answer.\n\n\"How long have you known?\"\n\nShe fidgeted.\n\n\"How long?\" I said, my voice getting louder.\n\n\"It became pretty obvious about six months ago,\" she mumbled.\n\n\"When was he born?\"\n\nAllie shot me a what-does-that-matter look.\n\n\"His birthdate,\" I said. \"When was it.\"\n\n\"August seventeenth last year,\" she said.\n\nI did the math in my head. Yeah, it was only too possible. Kristin had been visiting her folks for much of December that year--the last month of our marriage--and she'd probably been fucking Randy the whole time. Still, it was entirely too possible that the boy was mine.\n\n\"Why didn't you tell me any of this?\"\n\nA tear formed in Allie's eyes. \"I'm sorry,\" she whispered. \"I should've said something. I know I should've. But I was . . . I don't know . . . she's really scared you'll do something is all. And she's my cousin.\"\n\n\"Which makes me what? Your piece of ass that you don't owe any loyalty to? Just the stupid fucker you can keep in the dark?\"\n\n\"No,\" she cried. \"I love you, Tyler. I've always loved you. But she's my cousin. We're close. You know that.\"\n\nShe was right: They were close. But that didn't make any difference to me. If her loyalties were torn, she should've told me.\n\n\"Please say you forgive me,\" Allie pleaded, tears now streaming down her face as she reached over and tried to pull me to her.\n\nI held her off.\n\n\"What has Kristin told you?\" I demanded.\n\n\"She doesn't know,\" Allie said. \"She's afraid. Afraid you're the father and you'll find out and do something. Afraid Randy will find out and leave her.\"\n\n\"Why would he care? He knew the risk when he married her while she was pregnant with a kid that could've been mine.\"\n\n\"Because she can't have any more babies,\" Allie said, sniffling as her tears subsided and a sad look took over her features. \"There were complications. When Ben was born. She had to have her tubes tied. And Randy wanted kids. Two or three. If he finds out this one isn't even his, he'll . . . well, it wouldn't be good.\"\n\nI nodded. Kristin could be well and truly fucked. She could lose her newfound love over the mess she'd gotten all of us into.\n\nI stood and walked to the door.\n\n\"Please don't go, Tyler. Please.\"\n\nI stopped at the door, my hand on the doorknob.\n\n\"Please,\" she kept pleading, her sobbing getting louder and more urgent.\n\nI opened the door and left without looking back.\n\n* * * * *\n\nI flew to Florida early the next morning.\n\nSusan met me at the gate and gave me a big, crushing hug.\n\n\"I thought you'd look happier to see me,\" she whispered into my ear.\n\n\"Sorry,\" I said, forcing myself to smile. \"Something's come up.\"\n\nShe nodded. \"Marisa told me.\"\n\nMy eyes narrowed. \"Told you how much?\"\n\n\"Just that you may have a son you knew nothing about.\"\n\nI nodded. \"Let's go. We can talk in the car.\"\n\nShe smiled and took my hand, tugging me along behind her to the parking garage and her car.\n\n\"So what do I do?\" I finally said as we breezed along the road.\n\n\"About what?\"\n\n\"My son.\"\n\n\"What do you want to do?\"\n\nI thought about that. Such a deceptively simple question, but really the crux of the matter and a whole lot harder to answer than you'd think.\n\n\"I suppose I'd like to know if he's even mine.\"\n\n\"Good idea.\"\n\n\"So how do I do that?\"\n\n\"Well,\" she said, watching the road but biting her lip in thought, \"I suppose you file a paternity action up in Illinois. Or you register the Florida divorce case up there and re-open the case.\"\n\nI nodded.\n\n\"Not really my kind of thing,\" Susan continued. \"Never done a divorce or anything like that.\"\n\nI sighed, knowing what I'd be doing.\n\n\"I'll call around to some people we have up in Chicago,\" Susan said, reading my mind. \"See who they recommend for these things.\"\n\n\"Thanks,\" I said, staring at the scenery.\n\nWe drove in silence the rest of the way to Natalie's office.\n\n\"So this is the great Tyler Collins,\" a tiny, sixtyish woman with immaculate make-up, too much jewelry, flawless business suit, and a deep raspy voice boomed as I walked into the lobby with Susan.\n\n\"And you're Natalie,\" I said, extending my hand.\n\n\"Oh no, sugar,\" she said, pulling my hand toward her and enclosing me in a hug. \"I don't get to hug too many good looking men these days. Not letting this one go to waste.\"\n\nShe hugged me to her, and I could smell the smoke from a million cigarettes in her pores and clothing.\n\nI hugged back.\n\n\"You're just as handsome as Susan said you were,\" Natalie said, breaking the hug. \"Maybe even better.\"\n\nI smiled. It wasn't often I had a sixty-year old chick hitting on me in front of a former lover and a leggy, twenty-something receptionist with a rack from Playboy. The receptionist just ignored Natalie, though, apparently used to such displays of affection. Susan only laughed.\n\n\"Well,\" Natalie said after eyeing me up and down.\n\n\"The contracts?\" I prompted.\n\n\"Okay,\" she said, mock disappointment in her tone but nervous excitement throughout her body. Hell, she was practically rubbing her hands in glee at the thought of what we were about to sign.\n\nThe three of us went into a conference room. Natalie motioned me and Susan to adjacent chairs, and she sat across from us.\n\n\"Here we go,\" she said, opening a folder and pulling out thick documents with Sign Here tags stuck throughout. She slid them across the table to me.\n\n\"You've seen these?\" I said to Susan.\n\nShe nodded. \"They're fine.\"\n\n\"Okay,\" I said, and spent the next ten minutes flipping through the various documents while Susan explained the terms of the documents I was signing.\n\n\"Did you even listen to me?\" Susan said when I finished.\n\n\"Not really.\"\n\nShe frowned, and I turned to Natalie.\n\n\"These the terms you told me on the phone?\"\n\n\"Of course,\" Natalie said.\n\n\"And they're good terms for a first-time author?\"\n\n\"Great terms.\"\n\n\"Then what's to worry about?\" I said to Natalie. \"I've got the two of you covering my back, and I'm free to figure out how to give them another book.\"\n\n\"Within six months,\" Susan said.\n\nMy eyes opened wide. \"That's in there somewhere?\"\n\nShe threw up her arms in exasperation at my nonchalance.\n\n\"How far along are you?\" Natalie asked.\n\n\"Almost done with the outline.\"\n\nShe nodded. \"Shouldn't be a problem then, right?\"\n\nI smiled. \"No. I'll get it done.\"\n\nWe spent the next hour discussing other technical details I didn't really give a shit about. There was a book tour to discuss, the talk show circuit if it took off as expected, what authors to read the book up front and make nice comments for the dust jacket, the cover illustration, and all manner of arcane things associated with the book. I spent most of the time nodding and agreeing with Natalie's suggestions.\n\nThen, before I knew it, the meeting was over, and Susan and I were back in her car and heading somewhere for lunch.\n\n\"Okay,\" she finally said as the waitress took our drink orders and left us alone.\n\n\"Okay what?\" I said, my eyes staying on the endless ocean outside the windows.\n\n\"The way I see it, you can play this thing three ways.\"\n\n\"Play what thing three ways?\"\n\n\"You can do nothing,\" she said. \"Just always wonder if he's your son.\"\n\nI shot a look at her, not wanting to discuss what had been screaming through my mind since Marisa first suggested the possibility and Allie all but confirmed it.\n\n\"Or,\" Susan plodded on, ignoring my glare, \"you can file a lawsuit, get a paternity test, and, if he's your's, you can get visitation and pay child support. Child support, by the way, is gonna be a lot given all the papers you just signed.\"\n\nI started to protest that money didn't matter that much, but she got her last point out before I could squeak more than the first syllable.\n\n\"Or you can do the paternity test and, if he's your's, you can then do nothing. Maybe she'll just agree to it.\"\n\nI shook my head. \"That one's out for sure.\"\n\n\"Why?\"\n\n\"Because I can't know that I have a son out there and then just leave it at that. You know, just abandon him to her and that bastard.\"\n\nShe nodded. \"So what's it gonna be?\"\n\n\"It's not that simple,\" I said, my voice getting louder than I expected.\n\n\"Yes, it is,\" Susan said. \"It is that simple, Tyler. You either leave things as they are and always wonder or you find out and deal with it once you know. A or B. Which one do you choose?\"\n\nI thought about it, staring at the ocean and knowing she was right.\n\n\"Well?\" she said as the waitress brought the drinks.\n\n\"B,\" I said. \"It's B. I've got to know.\"\n\nShe nodded, smiling as she did so. \"Good boy.\"\n\nThen she flipped open her cell phone and called her office.\n\n\"Yeah, it's me,\" she said when the other side answered. \"Get on the phone to our Chicago office and get me some referrals in family law for . . . just a sec.\"\n\nShe covered the speaker and looked at me. \"What county you in?\"\n\n\"Lincoln.\"\n\n\"Lincoln County, Illinois,\" she said back into the phone. \"Try to hurry, and call me with names and phone numbers the second you've got them. Okay. Sure. Thanks.\"\n\nShe flipped the cell phone shut.\n\n\"Now,\" she said, spreading her napkin in her lap, \"can we relax and enjoy lunch?\"\n\nWe did, my mind settling now that something was being done.\n\nBy the time I was boarding my plane home three hours later, I had the names of three attorneys in my pocket and an appointment scheduled for the next afternoon with the only Grant City attorney on the list.\n\n\"You take care of yourself, Mr. Bestselling Author,\" Susan said, leaning in and giving me a chaste peck on the cheek.\n\n\"You, too, hotshot Florida legal eagle,\" I replied, hugging her tight and knowing our relationship would forever now be that of attorney and client.\n\n* * * * *\n\n\"So,\" James McNally said, looking up from my Florida Judgment of Dissolution of Marriage and fixing me with his gaze, \"you think this boy she now has with Walters may be yours?\"\n\nI nodded.\n\n\"Based on what?\"\n\n\"He was definitely conceived while we were still married,\" I said.\n\n\"Were you separated?\"\n\nI shook my head. \"That came about two or three weeks later.\"\n\nHe nodded. \"And you had . . . er . . . relations with her during this time?\"\n\n\"Once,\" I said.\n\n\"And Walters?\"\n\nI shrugged. \"Not a clue.\"\n\n\"Was there a chance they were together?\"\n\n\"I'd bet the farm on it. She was up here for a few weeks around that time.\"\n\n\"And they were married by the time the boy was born?\"\n\nI nodded.\n\n\"Was she showing when you saw her at the divorce hearing?\"\n\n\"I thought she had just put on some weight.\"\n\nHe nodded, staring at me while the gears in his mind whirred through whatever legal things needed to be considered.\n\n\"There more?\" he said.\n\n\"He looks like me,\" I said. \"Light skinned, blonde hair, blue eyes.\"\n\n\"And Randy's . . . .\"\n\n\"Yeah,\" I said. \"None of those. And neither is Kristin, except for the blue eyes. Her hair's from a bottle, and she's darker toned.\"\n\n\"Okay,\" he said, leaning forward. \"You thought this through?\"\n\n\"Completely.\"\n\n\"You understand that you could be paying a ton in child support? Especially now with this book thing coming up?\"\n\n\"I don't care,\" I said, getting angry that everyone seemed to think this was all about money.\n\n\"Settle down,\" he said. \"My job is to point out all aspects of the situation to you. You make the decision, but it's damned well going to be an informed one, okay?\"\n\n\"Okay. Just do it.\"\n\nHe smiled. It was a bright smile displaying perfect teeth and accentuating the dimpled chin. A movie star smile by a lawyer in his mid-forties still with movie star looks.\n\n\"You a shark?\" I said, not trusting just the good looks to get this done.\n\n\"When I need to be,\" he said.\n\n\"Meaning?\"\n\n\"Meaning you don't always need a shark. Sometimes you need a negotiator.\"\n\nI shook my head. \"Not with her. With Kristin, I need a shark.\"\n\n\"We'll see how it plays out and deal with it as it comes, okay?\"\n\nI wasn't sure, but he seemed confident.\n\n\"Let's find out if he's your son before we do anything else, okay?\"\n\nThat made sense, and I relaxed.\n\n\"Deal.\"\n\n\"Good,\" he said. We spent the next twenty minutes going over the terms of representation, anticipated costs, and getting together the information that he needed to file the lawsuit. When we were done, he looked up at me.\n\n\"Let's not sit on this,\" he said. \"I can have this ready tomorrow morning for you to sign. You swing by around eight and I'll get it filed when I go to court.\"\n\nMy look did little to hide my surprise, and he laughed at the reaction.\n\n\"It's really just a few simple documents to get it started,\" he said. \"The more intense stuff doesn't really come into play until we get them served with Summons and get them into court.\"\n\n\"Them?\" I said.\n\n\"Randy and Kristin,\" he said. \"They're both gonna have to be named as defendants because they're married, because the boy was born during the marriage, and because Randy's name is undoubtedly on the birth certificate.\"\n\nI hadn't realized that, but it certainly made sense. Still, it wasn't going to be any fun suing a local cop for paternity of the kid the cop thought was his own flesh and blood. No more going even a fraction over the speed limit until all of this was done.\n\n\"And you don't mind?\" I said. \"Suing a local cop and all?\"\n\nHe shrugged. \"Why should I mind? He's not gonna do anything to me. Or you, really. If he does, you let me know and I'll deal with it, okay?\"\n\n\"Fair enough.\"\n\n* * * * *\n\nThe next morning at five to eight, I swung by McNally's law office. It took all of three minutes to review the complaint and sign it.\n\nOn Sunday morning, two days later, the shit hit the fan when Kristin and Randy were served with the lawsuit.\n\n* * * * *\n\nIt was ten thirty, and I was in my room revising the completed outline to make it darker and more turbulent. After working for eleven days with Marisa, it was all coming faster than the first time around. Take my newfound learning in ratcheting up tension and combine it with the newest fucking crisis in my life--caused, once again, by Kristin, the goddamned love of my fucking life--and the outline was getting darker by the moment.\n\n\"You fucking bastard,\" I heard Kristin scream from somewhere outside. That was followed by pounding on the door and more obscenities.\n\nI saved my outline and backed it up, then went downstairs to answer the door.\n\nDad beat me to it.\n\n\"Will you settle down,\" he was saying to her.\n\nShe'd have none of it.\n\n\"He's trying to ruin me,\" she screamed. \"My marriage. Just because I left him for Randy. He's never gotten over it, and now he's trying to ruin me.\"\n\n\"Bullshit,\" Dad thundered, and she froze in fear. No one, especially her own father, had ever spoken to her like that, and she didn't know how to handle it. I paused at the top of the stairs to watch for a moment.\n\n\"He's trying to find out if you've stolen his son from him,\" Dad continued, trying to get his anger in check. \"My grandson. That's what he's trying to find out, and you goddamned well know it.\"\n\n\"But he's no right to-- \"\n\n\"The hell he doesn't,\" Dad thundered again, as mad as I've ever seen him. \"If that's his boy--if that's my grandson--he has every goddamned right in the world to know it. And to be a daddy to him.\"\n\nThe shock was now permanently plastered on Kristin's face. Her mouth was moving, but no words were coming out.\n\n\"And you, Kristin,\" Dad said, pointing his finger only inches from her face. \"You had no fucking right to keep this from him. You know that. So don't you come here bitching and screaming that Tyler's done anything wrong because we both know that's a load of shit. You're just pissed off that this perfect little world you've set up for yourself--a world based on lies and your own goddamned selfish little needs--you're just pissed off that that perfect world's about to explode on you.\"\n\nHer eyes found me at the top of the stairway, and her face was pleading with me to save her from Dad. I only raised my eyebrow in response.\n\n\"Is he wrong?\" I said, walking down the stairs. \"Are you sure that boy is Randy's?\"\n\nWhen she said nothing, I tore into her.\n\n\"You know goddamned well that Ben may be my son. You've already shared that with Allie.\"\n\nHer face turned to horror at the realization Allie had spilled the beans.\n\n\"Oh, don't worry,\" I said, sarcasm dripping with every word, \"your precious family didn't tattle on you until I forced Allie to fess up.\"\n\n\"But . . . but . . . Tyler . . . .\" she stammered, her head swiveling from Dad to me and back again, at a loss on how to deal with two men--not one, but two--talking to her in this manner.\n\n\"And you've suspected for more than six months,\" I continued. \"Six months, and you didn't say a goddamned word.\"\n\n\"But the doctor,\" she protested. \"He said that babies don't darken--their pigment doesn't really show up--for a year or more.\"\n\n\"And he's a year old now,\" I shot back. \"It hasn't darkened even one iota, has it?\"\n\nHer face told me the answer. It also told me she'd long ago realized the same thing. I wondered how many nights over the past year she'd laid in bed praying the next morning Ben would be just a shade darker, his hair turning from blonde to brown.\n\n\"So were you ever going to tell me?\"\n\n\"No,\" she whispered, her face dropping to the floor.\n\n\"Just hope and pray he'd never find out?\" Dad shot in, his disgust at the notion dripping from every word.\n\n\"Yes,\" she said, unable to look either of us in the eye.\n\n\"And now you're all pissed off he found out,\" Dad said, waving his hand in disgust, turning, and walking away. \"Haven't you done enough to him for one lifetime? You try to steal his son, too?\"\n\nI said nothing, just watched Dad go into the other room before turning back and looking at the fidgeting Kristin.\n\n\"Have a seat,\" I said, waving my arm at the sofa and love seat.\n\nShe shuffled over and sank into the sofa, staring into her lap and saying nothing.\n\n\"Can you tell me what I ever did that was so wrong?\" I said, sitting across from her and leaning over. \"I mean, I loved you more than life itself. And you. You repay that by leaving me without a word. Without even the courtesy of an explanation. Jesus, you blow me off, leave me, move back here, and you can't even tell me what the fuck I did that was so wrong? What did I ever do to deserve this shit?\"\n\n\"Nothing,\" she mumbled. \"It wasn't you.\"\n\n\"Then,\" I continued, on a roll now, \"then I find out from Mom and Dad that you're getting married before the ink on the divorce papers are even dry. And that you're pregnant. And that you've been fucking him all along. While we were still married. I deserved that? Your . . . what . . . your complete fucking contempt? Was I really that bad?\"\n\nShe started to speak, but I wouldn't let her.\n\n\"Then,\" I hissed, \"my editor has dinner with me to celebrate the completion of my first novel, and she's the one who has to point out to me that your son is probably mine and not Randy's? And then Allie confirms you've had the same thoughts for months, but you were afraid I'd find out?\"",
        "She looked at me, anguish twisting her face.\n\n\"What, Kristin? Tell me: What the fuck did I ever do to you? I never cheated on you. I busted my ass to give you everything you ever wanted. I-- \"\n\n\"You weren't there for me,\" she sobbed, the dam bursting and tears spilling down her cheeks. \"I was all alone, didn't know a soul, and you were always gone. That's what. I was lonely. And then, when I came home, I wasn't lonely anymore. And you wouldn't listen. You wouldn't cut back. You-- \"\n\n\"Bullshit,\" I thundered, causing her to shrink back and wrap in on herself. \"I just didn't kiss your ass every fucking time you demanded it. You knew how much I'd have to work before we moved there. You knew how much I'd have to keep earning when you wanted your perfect house. And your shopping sprees. And those goddamned designer purses for your mother and Cilla at Christmas and the golf clubs for your old man. You could've gotten a job or made friends or done anything to help us out, but you wanted it all without having to work for it. Without me having to work for it so I could always be there to dote on you. You wanted a million bucks to fall into my lap so you'd have all your shit and I could stay home and tell you how much I loved you and keep you company. Well grow the fuck up, Kristin. Life doesn't work like that.\"\n\nShe was crying openly now, and for some reason that made me feel better. I'd been in enough pain over her for God knows how long; now I wanted to heap some of that pain back onto her.\n\n\"So how's that working out for your, Kristin? Randy always there for you, or are the midnight shifts beginning to wear you down? And how's that crappy little two-bedroom condo holding out with your growing family?\"\n\nThe look on her face told me I'd struck a nerve. She'd fucked up and she knew it. Now she knew that I knew, too.\n\n\"Which is worse, Kristin?\" I said, leaning in. \"Never seeing your husband, but having all the shit you can afford or never seeing your husband and living in a crappy little apartment and shopping for clothes at the Salvation Army?\"\n\n\"At least I've got my family now,\" she yelled back. \"And my son.\"\n\n\"Not for long,\" I warned. \"And not if I have anything to do with it.\"\n\n\"You wouldn't,\" she gasped, horror stretching her features. \"You wouldn't take Ben from me. He doesn't even know you.\"\n\n\"And whose fault is that?\" I shot back. \"And how do you think a judge is going to view that? You hiding my own son from me?\"\n\n\"Don't you even think about it,\" she hissed. \"You'll never take my son-- \"\n\n\"And what about Randy?\" I piled on. \"How's he gonna take it when he finds out Ben isn't his? What, with you not being able to have any more children and all.\"\n\n\"Fuck you,\" she spat.\n\n\"Been there, done that,\" I said, standing and walking to the door. \"And now that I've done it with some others, you should know that it wasn't even that good.\"\n\nHer jaw flat out dropped, stunned that anyone would talk to her daddy's little princess like that. \n\nI opened the door and held it for her.\n\n\"See you in court, Kristin,\" I said. \"You and Randy both.\"\n\nShe whipped her purse over her shoulder and stormed past me without another word. She got in her car, slammed the door shut, and tore out of the driveway without a backward glance.\n\nI was suddenly happy that I'd been such a prick.\n\nAnd sad that she was going to do everything in her power to keep me from my son.\n\nThe turmoil churning in my guts was replicated in my updated outline, which was finished two days later.\n\nCHAPTER TWELVE\n\nFunny thing about writing: The more you write, the easier it becomes. You write faster and better with fewer mistakes and revisions. This was particularly the case on my second book in a series. Hell, I knew the main characters so well it was second nature to put the words in their mouths. Since this one took place just forty miles down the road from my own house--in Rockford, Illinois, a town I've been to a million times--it was also easier to envision the scenery and the mood, the weather and the beaten down, abandoned industrial buildings.\n\nIt also helped that I was devoting twelve hours a day to writing. I got up every morning at six, worked in the woodshop from seven to eleven, then wrote until I passed out from exhaustion at midnight or so. The pages just filled themselves in, and I was almost half done with the first draft by the time my first court date rolled around a month or so after Kristin confronted me and Dad.\n\nSitting in the busy courtroom, I was amazed anything ever got done in a court of law. The gallery benches were packed with angry, glaring people going through divorces. In the massive area in front of the judge's bench, a gaggle of attorneys were shuffling their papers, feverishly scribbling orders for the judge's signature, and making last ditch settlement efforts in hushed whispers.\n\nEvery three or four minutes, another pair of attorneys--the ones next in a long line waiting to approach--were motioned up by the judge. She was sixty or so, and the boredom of the whole thing was painted on her weary face and sluggish motions.\n\nAfter twenty minutes of sitting in the cramped gallery, I saw James McNally get to the front of the line, whispering to two other attorneys. When the case in front of them finished, he found me with his eyes and motioned me forward.\n\n\"Collins against Collins now known as Walters,\" Judge Gluth said as I approached.\n\n\"Good morning, Your Honor,\" McNally said. \"James McNally for the plaintiff, Mr. Collins, who is present and to my left.\"\n\n\"Sandra Petrowski for Mrs. Walters,\" a dowdy, frumpy looking little lady said. \"Mrs. Walters is approaching.\"\n\nI turned and watched Kristin squeeze her way between the people crowding the gallery, and I saw Randy glare at her as he started walking forward from the corner of the jury box where he'd been seated.\n\n\"And Robert Hall for Mr. Walters,\" a middle-aged, short attorney said.\n\n\"And what are we here for, ladies and gentlemen?\" Judge Gluth said.\n\nThe attorneys looked at each other, and the other two nodded at McNally.\n\n\"My client was married to Mrs. Walters,\" he said, speaking easily in a conversational tone. \"Their marriage was dissolved in Florida some eighteen months ago. We're moving now to enroll that judgment here and reopen the matter.\"\n\nJudge Gluth waved her hand telling him to get to the point.\n\n\"Well, Judge,\" he continued, \"Mrs. Walters gave birth to a son about a year ago.\"\n\n\"And you're just now getting around to setting child support?\" she said.\n\n\"Actually,\" McNally said, \"we're not even sure the child is my client's. So what we'd like to do is enroll the judgment and get an order for DNA testing to determine parentage.\"\n\nFucked up as the situation was, Judge Gluth reacted like she'd just heard McNally recite his shopping list. No reaction, and I mean none.\n\n\"Ms. Petrowski?\" she said, looking at Kristin's lawyer.\n\n\"Obviously we challenge their right to ask for any such paternity testing,\" Petrowski said.\n\n\"Obviously,\" the judge said. She turned to the remaining lawyer. \"Mr. Hall?\"\n\nHe shot a glance at Randy, who just nodded in return.\n\n\"Well, Your Honor,\" he said, turning back to the judge, \"my client agrees to the testing.\"\n\n\"Oh he does, does he?\" she said, catching the glare Kristin shot Randy before directing it at me then back at Randy.\n\nJudge Gluth pursed her lips, staring at the three of us in turn.\n\n\"Any reason I shouldn't grant the request?\" Judge Gluth said to Petrowski.\n\n\"Well,\" she started.\n\n\"Let me cut to the chase,\" the judge interrupted. \"Is there a scientific chance that Mr. Collins is the father of this child?\"\n\nPetrowski paused, then looked at Kristin, seeking some type of concession.\n\n\"Do you want me to ask your client in open court?\" Judge Gluth said, leaning over the bench and speaking lower. \"In more explicit terms, perhaps?\"\n\nKristin lowered her head.\n\n\"No, Your Honor,\" Petrowski said, seeing the defeat in Kristin's shoulders. \"We'll agree to enrolling the judgment and submitting mother and child to a DNA test.\"\n\n\"Good,\" Judge Gluth said, sitting back. \"Get me an order.\"\n\nWe all nodded and stepped away.\n\n\"What just happened up there?\" I asked McNally as we stood outside the courtroom.\n\n\"Randy's right pissed is what happened,\" McNally responded.\n\n\"You mean?\"\n\nHe nodded. \"She told him she hadn't had sex with you in months. No way it could be your child.\"\n\n\"And now that she's been forced to come clean,\" I started.\n\n\"Problems in Pleasantville,\" he concluded.\n\nI laughed.\n\n\"What's so fucking funny?\" Walters said from over my shoulder.\n\nI turned. He was standing there, fists clenched, anger seething from his clenched fists and jaw to the popped and pulsing veins above his temples.\n\n\"What's wrong, Randy? Surprised she lied? Surprised the wife--my wife--that you were sleeping with lied to you, too?\"\n\n\"Guys,\" Hall said, interjecting his body between us.\n\n\"Settle down,\" McNally added, his hand gripping my shoulder like a vice.\n\n\"And what're you gonna do if Ben's my son?\" I continued, leaning over Hall's shoulder and staring into Randy's face. \"You gonna leave her? The love of your life?\"\n\nHis jaws worked back and forth, and his eyes spewed pure venom, but he said nothing.\n\n\"Yeah, just what I thought,\" I said. \"Not a clue. Welcome to the fucking club.\"\n\nI turned back to McNally, nodded, and walked away.\n\n* * * * *\n\nSo just what the hell is so special about Kristin? What does she have that just turns men to mush, makes them shut up, put up with her bullshit, and beg her forgiveness when she gets pissed because she's called out on doing something wrong?\n\nWell, the smoking hot body sure as hell helps. Kristin, even at thirty and after a child, still has the body of a college cheerleader. Nice tits, toned legs, flat tummy, and tight ass.\n\nOr maybe it's the face from a cosmetics photo shoot. Sparkling eyes, slightly upturned nose, and lips that continuously express just the right mixture of playfulness and sexiness, all framed by beautiful, thick butterscotch blonde (from a bottle) hair.\n\nTake those looks alone and most men would be quivering wrecks, putty in her hands to mold and mess with as she pleases.\n\nShe has more, though. She can be flirtatious, pouty, a bundle of joy and love one moment and a bundle of pure sexual magnetism the next. And she has this way of looking at men, looking at us like we're the only one for her. I know. She'd fixed me with that look a million times; sometimes to bend my will, sometimes to avoid my anger, but sometimes just because she wanted to make me happy.\n\nThrow into the mix that she's smart and talkative and fun to be around and you have pretty much a complete package.\n\nHer only flaw is that she was a spoiled rotten child who grew into a willful, spoiled adult not used to being denied her way. If Kristin wants something, she'd damned well better get it or there will be hell to pay.\n\nYet, in all our years together, I never suspected for even a moment that she'd just plain drop me like a sack of potatoes to get her way.\n\nBut poor old Randy sure should've suspected that streak in her. After all, he was only three years older than us; he'd known us both all our lives, if only from a distance. He certainly knew she was married when she started flying back home and giving him the eye. And he knew she didn't hesitate to cheat and pout and do whatever she wanted to do. Oh no, he definitely knew all of that.\n\nFrankly, I felt for the poor bastard. Sure, he'd played a hand in ending my marriage. But Kristin had dealt the cards, not Randy. Kristin owed me honesty, loyalty, and all that other crap. Not Randy. And, frankly, had the roles been reversed, I'm not sure how I'd have handled it.\n\nLet's cut to the chase: We can all hold our heads high and talk about how properly we're going to act if the opportunity presents itself. It's another thing altogether when you're single, such an incredible beauty makes herself available, and that beauty's husband is a thousand miles away.\n\nThen again, I was still ecstatic that Randy was now going through just what I'd gone through. Hell, if anything he wasn't going through nearly enough. After all, they'd been shagging for only two years or so. Let her do this to you after twelve years. While you're the one married to her.\n\nI'd been with her since fucking forever and she'd dumped me with nary a thought.\n\nAnd I was way better looking, nicer, and made way more money than that little toad.\n\nSo take that, Randy.\n\nCHAPTER THIRTEEN\n\nDad and I were both at the rehab center. I'd been going three times a week for an hour or so each time, and Mom's progress was slow but sure. Dad had been there every day for five or six hours a day, helping with the therapy, and he was still impatient with her progress.\n\n\"She's ready to go home,\" the doctor said again.\n\n\"But she can barely speak,\" Dad protested again.\n\n\"That'll just take time and patience and a lot of practice,\" the doctor said.\n\n\"Her walking?\" I said. \"Will it improve?\"\n\nHe nodded. \"Listen,\" he said. \"It's not like we're gonna just send her home and that's it. She'll have physical therapy five days a week. They'll come to the house for an hour a day Monday through Friday. And she'll have a speech pathologist three days a week. The pathologist will work with all of you. Her to continue the improvement on her speech and with you two to practice with her and the like.\"\n\n\"Then why can't she just stay here?\" I said.\n\n\"Because the insurance company won't allow it,\" he said. \"She's reached the level where it's cheaper for this to happen in your home.\"\n\n\"Based on what?\" Dad argued. \"She won't get as much therapy at home.\"\n\n\"Actually, she will,\" the doctor said, pursing his lips as he tired of the conversation. \"She'll get just as much time per week with the therapist as she's currently getting. You've seen that, Mr. Collins. You're the one helping her with her exercises and such, not the therapist.\"\n\n\"But we don't have the stuff at home for this,\" Dad continued.\n\n\"The insurance will pay for it to all be rented and installed,\" the doctor explained. \"You'll have everything you need.\"\n\n\"What if I just paid for her to stay here?\" I said.\n\nThe doctor looked at me like I was crazy and didn't know what I was talking about.\n\n\"I've more than enough to pay for her stay,\" I said.\n\nHe just shook his head, though. \"You'd be wasting your money. Frankly, she should've been discharged back home a week ago.\"\n\n\"Why?\"\n\n\"The environment,\" the doctor soldiered on. \"She's more familiar, more comfortable in her own home. Once you get her there, her recovery rate will increase at a pretty steady clip. Faster than here. So long as the two of you do what the physical therapist and speech pathologist tell you to do. And I mean everything. If anything, do too much.\"\n\nI looked at Dad, who didn't seem convinced, then back to the doctor.\n\n\"And if her recovery goes backward?\"\n\n\"One of them will tell us here and we'll evaluate the best course of action,\" he said. He paused, looking at both of us. He sighed, but his face softened. He'd been through this with hundreds of unbelieving families before us.\n\n\"Listen,\" he said. \"Trust me. You'll see for yourselves. I know it's hard to believe, but she really has made rapid progress here. And we expect her to regain her speech almost fully and most of the use of her right side. There will be some residual paralysis that will never leave--mostly in the facial muscles and her grip strength--but she's really doing far better than any of us had reason to believe possible.\"\n\n\"All right,\" Dad said. \"We'll give it a shot.\"\n\n\"So when is she being discharged?\" I asked.\n\n\"Saturday,\" he said.\n\n\"But that's only-- \"\n\n\"Two days from now,\" Dad finished for me.\n\n\"We've already got the equipment you'll need lined up for delivery tomorrow. Can someone be there between nine and noon?\"\n\n\"I can,\" I said.\n\nHe nodded. \"Good. Then let's get it done.\"\n\n* * * * *\n\nThe doorbell rang at nine thirty the next morning.\n\n\"Mornin' Tyler,\" said the smiling, pudgy face of Denny Koss.\n\n\"Denny,\" I said, shaking his hand. \"What're you doin' here?\"\n\n\"Delivery,\" he said, looking over my shoulder and around the living room. \"And you're not ready for it, I can see that right now.\"\n\n\"How much is there?\" I said.\n\n\"A lot.\"\n\nHe pushed past me into the house.\n\n\"We're gonna have to clear a lot of this out,\" he said, then turned and his face lit up with a cherubic smile. \"How you doin', by the way?\"\n\n\"I'm good, Denny,\" I smiled back. \"It's good to see ya.\"\n\n\"Good to see you, too. You been back for awhile. I know. Seen ya around a couple times.\"\n\n\"Been busy, though,\" I explained.\n\n\"Yeah,\" he said, his face getting serious. \"Tough break with your mom. Great lady.\"\n\n\"Thanks.\"\n\nHe nodded, then spun and picked up one end of the coffee table and nodded for me to get the other end.\n\n\"Let's get all this stuff over to the side for now,\" he said. \"Once we get everything in and set up, we'll see what stays and what goes to the basement, okay?\"\n\n\"You always do this?\"\n\n\"Nope,\" he said, lifting his end of the solid walnut table like it was a feather. \"But you were my quarterback. Special bond, you know. Between a center and his quarterback. I mean, you felt me up how many times a game for how many games a season?\"\n\nHe winked, setting the table down. \"You learn to get attached to your quarterback.\"\n\nI laughed. \"Well, they were nice feels.\"\n\n\"Yeah,\" he said, grunting as he lifted his end of the couch. \"But you could've bought me dinner or somethin'. But no, just feel me and leave me.\"\n\nThe rest of the moving session went that way, laughing and talking about high school and what we'd done since then. I was amazed, and more than a bit ashamed, to learn that chubby little Denny Koss wasn't just a simple mover. Hell no, he owned the company. He'd insisted on this delivery when he saw the address. And he'd intentionally failed to bring along a helper on the hopes I'd be there to help him and we could bullshit about the old days.\n\n\"Why you never show up?\" he said as we took a seat and caught our breath upon moving all of the equipment from his truck to the house.\n\nI shrugged. \"Been busy, I guess. You know, living in Florida trying to make a go of things there and all.\"\n\n\"So did you?\" he asked. \"Make a go of it and all?\"\n\n\"Sure. And all it cost me was my marriage.\"\n\n\"So I guess you got what you wished for, and it bit you in the ass, huh?\"\n\n\"Hard,\" I agreed.\n\n\"Sucks.\"\n\n\"Yeah.\"\n\nWe spent the next half hour setting up the hospital bed and the gadgets and gizmos associated with physical therapy. Then another hour after that was spent re-arranging the living room furniture and carrying some of it to the basement.\n\n\"Well,\" Denny said, rubbing his hands against his jeans, \"this should do for now.\"\n\nI looked around the room, then nodded.\n\n\"Yep, this should do it.\"\n\n\"You know,\" he said, turning and fixing me with an even stare, \"a bunch of us get together on Friday nights. From high school and some people we're all friends with that live here now.\"\n\nI nodded.\n\n\"Anyways,\" he continued, seeing that I was listening with expectation, \"it's at our house tonight. About six thirty or seven. I know they'd all love to see you.\"\n\n\"Kristin ever there?\" I said.\n\n\"A few times,\" he nodded, his smile turning grim. \"Not much, but sometimes.\"\n\nI thought about it. We lived in the same town now, knew all the same people. I couldn't let her run me off.\n\n\"So what do I bring?\" I said.\n\nHe grinned. \"Appetizer and whatever you're gonna drink.\"\n\n\"Deal,\" I said, shaking his hand and trying to palm him a hundred in the process.\n\nHe shook back in an iron grip, then looked at his hand when the shake broke.\n\n\"Not a chance,\" he said, laying the bill on the hospital bed. \"I covered your ass in high school, I'm covering it now.\"",
        "\"Then take your wife and kids to dinner with it,\" I suggested. \"I mean, I owe you a lot of dinners, right?\"\n\nHe just laughed. \"Not a chance. You're not getting out of all those quick feels for a lousy hundo. I wanna be wined and dined.\"\n\nWe laughed together, and he took off.\n\n* * * * *\n\nI quit writing at six and started getting ready for the party at Denny's house. Forty-five minutes later, dressed in jeans and a long-sleeved white shirt, cuffs rolled to mid-forearm, I pulled into Denny's driveway in a newer subdivision on the edge of Grant City. There were already ten or so cars parked in the driveway and along the curbs, and I could hear the laughing and talking from around back as I grabbed a case of Lite and a tray of hummus and pita chips from the back seat.\n\nI was greeted with a chorus of Tylers, Hey Dudes, and Pardners as I turned the corner at the back of the house and walked toward the large deck on which everyone was gathered.\n\n\"Hey, Tyler,\" Denny's tiny little wife Dee Dee said, pecking me on the cheek before taking the tray of hummus from my hand. \"Beer goes in the coolers over there.\"\n\nI nodded. \"Thanks for having me.\"\n\n\"Thanks for coming,\" she said back, looking like she was genuinely pleased at my presence. She'd graduated three or four years behind us, and all I remembered of her was a tiny little kid with short, tomboyish features. She was still tiny--way tinier than Denny, that's for sure--but her features were cute in a pixieish way. She'd definitely grown into a beautiful lady.\n\n\"Keep your dick skinners off her,\" Denny guffawed from a group of guys, interrupting my observations.\n\nI waved him off with a chuckle and proceeded to empty my case of beer into a cooler of ice. Keeping one back and opening it, I took a gulp and went over to Denny and his group.\n\nIt was like a high school party, but then it wasn't. Amongst the thirty-five or so people there, some were guys and girls we'd gone to school with, but there were younger and older faces, too. Some I recognized, either by face or name, from growing up in Grant City; a few were from other parts of the country and now called Grant City their home.\n\nWe all shot the shit for awhile, getting to know each other again and learning who was married, divorced, had kids, owned businesses, worked for others, and so on. I was there maybe an hour when I heard a familiar voice behind me.\n\n\"Hello, Tyler.\"\n\nI tensed, knowing this was a possibility. Forcing a smile to my face, I turned around.\n\n\"Hello, Kristin.\"\n\nThe group I had been speaking with shied away from us and dropped their voices to hurried whispers and darting glances.\n\n\"You get to the clinic yet? Give 'em your DNA?\"\n\nI shook my head. \"Next Friday.\"\n\n\"He's your's,\" she said, her eyes sad.\n\nMy eyes narrowed, not sure what game she was playing now.\n\n\"Can we maybe talk for a few minutes?\" she said. \"Somewhere a little less, uh, public?\"\n\nAfter a moment, I nodded, then turned and walked into the house. We settled on a sofa in the den, closing the door behind us.\n\n\"I didn't know,\" she started, her voice low and her eyes on the floor.\n\n\"But you knew it was a possibility.\"\n\nShe nodded.\n\n\"And when you suspected, you didn't tell me.\"\n\nShe looked up at me, her stare vacant.\n\n\"You ever have dreams?\" she said, speaking almost to herself. \"Because I used to have them. All the time. And sometimes, if you're lucky, your dreams come true. But then . . . well, then you learn that those dreams aren't really all they're cracked up to be.\"\n\nShe turned and faced me, her eyes focusing in on mine.\n\n\"So what was your dream, Kristin? Because I can tell you what mine was.\"\n\n\"Same as your's,\" she said. \"To be with you forever and ever. To have a family. To never have to worry about money or bills or anything. To live in a big house and have a big family.\"\n\n\"Ward and June Cleaver,\" I said.\n\nShe nodded. \"Ward and June Cleaver,\" she agreed.\n\n\"And just when we almost had it,\" I said, \"you left me. For him.\"\n\nShe looked back at the floor and mumbled something.\n\n\"What?\" I said, leaning in closer.\n\n\"I said I didn't leave you for him. For Randy. I left you for my dream.\" She looked up, her eyes pleading with me to understand. \"I didn't think I was getting my dream with you. I didn't think we'd ever have the family and the . . . well, everything. I thought you'd just keep working a hundred hours a week and I'd be stuck all alone in that house.\"\n\n\"And when you started coming back here,\" I prompted.\n\n\"Cilla told me I didn't belong in Florida. That you were being selfish, keeping me cooped up in the house all day and holding off on starting a family.\"\n\nI nodded. I knew her sister had played a part in this.\n\n\"And my family,\" she continued. \"Mom and Dad. They told me how much they missed me and how much I needed to start giving them grandbabies and all. We needed to come back.\"\n\n\"You never once suggested we sell out down there and come back here,\" I said, fighting to keep my voice calm.\n\n\"I know. But would you have? Would you've done it?\"\n\nI shrugged. \"Guess we'll never know now.\"\n\nWe were silent for a few moments, and then I thought of something.\n\n\"You know,\" I said, half to myself, \"the second I found out my mom had a stroke and Dad needed help, I sold off and came up here in a flash. So I guess we do know, don't we? If you'd have come to me, I probably would've moved back up here.\"\n\nShe nodded. \"That's what I thought.\"\n\n\"Then why?\"\n\nShe thought for a moment before answering. \"I guess I just figured you didn't really love me anymore.\"\n\n\"Based on what?\"\n\n\"I don't know. You were working so much. You wouldn't listen to me as much, spend more time at home and things.\"\n\n\"And when you got up here,\" I said, \"Randy doted on your every word and movement.\"\n\nShe sighed, which was answer enough.\n\n\"And now?\" I asked.\n\n\"He's already filed for divorce. I got it yesterday.\"\n\n\"Why? I mean, that's jumping the gun a bit, don't you think?\"\n\n\"He says he feels humiliated. I lied to him. Let him think Ben was his and all. And he told everyone else, people he works with and his friends and family and all. And now he's got to tell them all that Ben's not his. That he's your's.\"\n\nAgain, we sat in silence for a few minutes. I could tell she wanted to say something, but she seemed pensive.\n\n\"Go ahead,\" I said softly. \"Ask whatever you want.\"\n\nShe shook her head, and I placed my hand on her's and squeezed.\n\n\"Why Allie?\" she said. \"Was it to get back at me?\"\n\nI gave an inward chuckle. \"No. Not everything's about you, Kristin.\" I paused, thinking about why I'd been with Allie. \"Well, I guess it's partly about you. 'Why?' you ask? Because she was available. And I was comfortable with her, and attracted to her. Partly, I suppose, because she reminded me a lot of you. But no, I didn't spend time with her to get back at you or hurt you. A year ago? Yeah, that would've been a definite possibility. Now? No.\"\n\n\"And are you going to give her another shot?\" she said, her face telling me she hoped not.\n\n\"No. I'm pretty sure that ship has sailed.\"\n\n\"Is it because of me? Because she kept my secret?\"\n\n\"Yes and no. No, it's not because of you. Yes because she should've told me. If she loved me like she said she did, she couldn't keep something like that from me. And I'm pretty sure she'd have taken it to her grave.\"\n\n\"It's not her fault,\" Kristin protested.\n\n\"Yes it is. She made her bed.\"\n\n\"Well?\"\n\n\"Well what?\"\n\n\"Can we ever be friends again, Tyler?\"\n\nI thought that over. \"I don't know.\"\n\n\"Can you ever forgive me?\"\n\nI paused, confused at the signals coming out.\n\n\"What are you looking for here, Kristin?\"\n\nShe looked me in the eyes, trying to smile and failing miserably.\n\n\"You thinking about getting back together?\"\n\nHer nod was so slight I almost missed it.\n\nMy eyes went wide, and I felt my jaw go slack with what she was proposing.\n\n\"We're back here,\" she said. \"Back home. And now we've got a little baby boy together. If you can forgive me . . . . Well, I'd listen better. Appreciate you the way I always should have appreciated you.\"\n\nI felt her hand now squeezing mine in return. The soft, warm skin so familiar on mine, the gentle caress.\n\n\"Say something,\" she whispered. \"At least say you'll think about it.\"\n\nI could only nod.\n\nOkay, timeout here to explain what's going through my addled fucking brain. Two years ago the love of my life ran off with no explanation. She married another guy--a guy she'd been screwing while still married to me--and has a baby. Now I find out, first, that the baby's probably (because I'm not taking her word for it yet) mine and, second, that hubby number two has bolted and she's available again. So now, come to find out she doesn't hate me; she hates herself for leaving, even if her self-hatred is still for only her own misery; and she may want to get back together again.\n\nSo what do you do? Do you tell her to fuck off? Easy for you to say is she hadn't been the love of your entire life. Even tougher if you add to that our (probable) child together and forced interaction one way or another for the next seventeen years and the desire to give little Ben a solid family life and proper upbringing.\n\nDo you say yes, I want to get back together? Great. Now I just have to wonder which dream she's going to leave me for next. And wonder, for that matter, if she wants me back because of me or because she's got no better alternatives.\n\n\"Tyler?\" she said into my ear, her hot breath arousing me and snapping me from my reverie.\n\n\"Okay,\" I mumbled, wanting to get away from her for awhile. \"Sure. I'll think about it, okay?\"\n\n\"Thanks,\" she said, her face relieved.\n\nThere was no triumph there, I noticed. The Kristin of old would've had a look of triumph, pleased with herself at getting her way yet again. That look was gone, though.\n\nWas she genuinely contrite?\n\n\"Let's go back out and meet some people I haven't seen in awhile, okay?\" I said.\n\nShe nodded, then pulled me to my feet and led me back to the deck.\n\nWhen we got there, I saw Allie talking with a group on the lawn. Our eyes met, then her eyes wandered and saw Kristin holding my hand. Her lips tightened, her eyes again finding mine. Then, in a flash, she turned to respond to something someone in the group said, a smile forcing itself onto her face.\n\nI spent the rest of the evening chatting with old friends and meeting new ones. Kristin didn't exactly hover over me, but she was usually at least nearby. At one point I saw her and Allie whispering back and forth as both shot me glances.\n\nJust what I needed in my life.\n\nDrama.\n\nCHAPTER FOURTEEN\n\nDad and I got Mom settled in the next day, both spending hours getting things set where she wanted them and doting over her like a couple of clueless clods, which we were.\n\nLike I said, I'd seen plenty of Mom since the stroke, but it all seemed just so sad now that she was back home. She was a small, frail pile of skin and bones, dressed in a baggy sweatsuit and sitting in her recliner. Fifty-eight years old, but she looked twenty years older now. Her hair was a mess and seemed more gray, her skin was pallid and shrunken, and she could only communicate with halting speech--some of the words slurred and barely recognizable--and pointing with her left hand. Her right arm still lay at her side all but useless.\n\n\"Come on,\" I said once everything was where we wanted it. I took her right arm in my hands and did the stretching, strength, and motor skills exercises we were instructed to do with her.\n\nAnd that's how the first day back went. The drudgery of exercise and speech practice while listening to the drone of a televised baseball game in the background.\n\nThere was one light moment, though, when Dad placed her dinner on the TV tray before her chair.\n\n\"What's this?\" she said, the words coming out woss thish.\n\n\"Dinner,\" he proclaimed, proud of his accomplishments in the kitchen while she'd been away. \"Pot roast with potatoes and carrots.\"\n\n\"Really,\" she said, coming out willy. The look on her half-paralyzed face told us she didn't believe him.\n\nHaving had Dad's pot roast at least once a week for the past few months, I had to agree with her assessment.\n\nSo Mom was clearly still sharp as a tack.\n\n* * * * *\n\nOn Sunday at eleven, the doorbell rang.\n\n\"Kristin?\" I said, looking at her standing there holding Ben in one arm and a basket in the other.\n\n\"Take him,\" she said, leaning the toddler into my arms before walking past me and into the house.\n\n\"What're you doing-- \" Dad started on seeing her.\n\n\"I'm sorry about the last time I was here,\" Kristin cut him off. \"Real sorry. And you were right about everything and I know that.\"\n\nHe nodded, shooting glances from her to little Ben squirming in my arms. I gently bounced my hips and held onto him for dear life.\n\n\"Anyways,\" Kristin continued, walking past Dad and into the dining room and through to the kitchen, calling over her shoulder as she went, \"they said at church this morning that Sally was getting home today, and I figured she shouldn't be subjected to bad cooking the first day out.\"\n\nMom snorted. \"Too late.\"\n\nDad frowned, staring from the kitchen to Mom to me. Then he focused in on the wriggling little boy in my arms and his features softened.\n\n\"Let him down,\" Dad said, crouching and holding out his arms.\n\nI set Ben down, and he waddled over to Dad.\n\n\"Is he?\" Mom said, her face going from me to Ben and back again, the look of expectant hope lighting up the left side of her face.\n\n\"Your grandson,\" Kristin confirmed from the doorway, leaning against the doorframe and taking in the scene. Her smile was apprehensive, her body tense waiting for the inevitable barrage of demanding questions.\n\nBut none came. Instead, Dad scooped Ben up and carried him to my mother, placing him in her lap. I swear to God, I never thought I'd see her this happy again. Those extra twenty years disappeared just like that.\n\nWhen I turned around, Kristin had disappeared back into the kitchen.\n\nShe froze when she heard my footsteps behind her.\n\n\"Thanks,\" I said. \"This is . . . .\"\n\nI let the words hang, but she got the picture. Her whole body relaxed and she continued fixing plates for lunch.\n\n\"I'm not hungry,\" I said when she grabbed another plate.\n\nShe turned to look at me.\n\n\"Really,\" I said, smiling. \"Just not hungry.\"\n\n\"Oh.\"\n\nShe seemed disappointed, like her first try at winning me back wasn't going as well as planned.\n\n\"I'll help you feed Ben, though,\" I said. \"After all, now that I've got a son and all, might as well learn how to care for him, right?\"\n\nShe smiled, pleased at my recovery.\n\nA few minutes later, Dad helped Mom to the dining room table and we all sat for lunch. Kristin sat next to Mom, chatting lightly about Ben and all manner of child rearing joys she'd experienced, occasionally using her napkin to dab at Mom's mouth. She looked like the Kristin I'd fallen in love with, the sweet, charming fifteen-year old who was everyone's favorite.\n\nDad was eating his fried chicken, mashed potatoes, and gravy, sharing every other forkful with a bouncing and very messy Ben, who was sitting on my lap getting half of the food offered him all over his shirt and my pants.\n\n\"Cute,\" Mom said, looking at Ben and me, her eyes aglow.\n\nKristin turned and looked at us, and at me trying to wipe smears of potatoes and gravy from my sleeves, and snorted.\n\n\"Welcome to fatherhood,\" she said. Then, with no reaction from anyone else, the laughter left her eyes and she looked sad.\n\nI only smiled in response. \"Looks like I've got some catching up to do, huh?\"\n\nShe tried to smile in response.\n\n\"Better late than never,\" Dad said, picking up his plate and taking it to the sink. \"You doin' okay, Ma?\"\n\nMom just nodded, her eyes locked on Ben while she slowly chewed her food.\n\n\"Kristin?\" he said.\n\n\"I'm fine,\" Kristin said. \"Let me get those for you.\"\n\nShe stood and went to the sink, rinsing off the plate and putting it in the dishwasher before tackling the rest of the leftovers. She'd brought enough for at least three meals, and she took her time putting it in the refrigerator and cleaning up the remnants on the counter.\n\nI spent the time wiping off Ben's mouth, then sliding over to the chair next to Mom and whispering in his ear. \"Grandma\" and \"chicken\" and \"table.\" Hell, I didn't really know what to say; I just knew Mom stayed bright with him around.\n\nWhen Kristin finished, she turned and froze. This was way harder for her than I thought it would be. It was written all over her face, there for everyone to see. Regret, sorrow, a mask begging forgiveness and wondering why she'd ever done what she'd done.\n\nShe tried to speak, but ended up clearing her throat.\n\n\"Gonna get some fresh air,\" she said, and dashed to the back door and outside.\n\nI looked at Mom and Dad.\n\n\"Come on,\" he said, holding his arms out. \"My turn.\"\n\nI passed Ben over the table and into Dad's massive arms. Standing, I made my way outside and around the house. Kristin was nowhere to be seen, but I smelled cigarette smoke from around the side of the woodshop.\n\n\"There you are,\" I said, turning the corner.\n\nShe was huddled in on herself, sucking hard on a cigarette and trying to keep from crying.\n\n\"When did you start this again?\" I said.\n\nShe looked at the cigarette in her hand.\n\n\"Sorry,\" she said, moving to toss the smoke away.\n\n\"No. Go ahead if it settles you down.\"\n\nShe nodded her head a few times, took a deep drag and held it, then started speaking as the smoke came out with her words.\n\n\"Just never thought it would all be this hard, ya know? You hadn't come back . . . I'd never have to really see you again, right? Would've made it all a lot easier.\"\n\n\"Never telling me about Ben?\"\n\nShe shook her head. \"No. Not that. Truth be told, I started realizing what a complete mess I made of things when his hair didn't get any darker and his eyes stayed blue. Six or seven months back.\"\n\nShe looked at me, trying to read my reaction. I gave none, preferring to listen. She turned back to stare at the woods abutting our property.\n\n\"I never should've done any of it, Tyler,\" she said, her voice listless. \"Any of it. Never should've listened to Mom or to Cilla. Never should've kept coming back up here and dreaming about what I could have. I should've concentrated on working with what I already had. What we already had.\"\n\nShe snorted.\n\n\"Something funny?\" I asked.\n\nShe looked back at me for a second, then back at the woods.\n\n\"I traded in loneliness for pure misery.\" She laughed again, but it was a bitter laugh. \"You worshiped the ground I walked on. Randy wanted to screw me. I mistook lust for love. Then, when he found out I was pregnant, he proposed. Still not sure he really loved me, but he certainly loved the idea of having me to come home to every night and having a son and . . . I don't know . . . .\"\n\n\"What? What don't you know?\" I prodded.\n\n\"He wasn't you, okay?\" she said, the tears she'd been holding back finally letting loose. \"He just wasn't you. And all I wanted was you. I'd have left him in a second if I thought there was a chance you'd take me back. I'd have crawled through a thousand miles of mud if I knew you'd take me in your arms when I got there. But it was all too late. I'd already ruined it all. Everything. So I just decided to settle with the dreamworld I'd made up here.\"\n\n\"So why now?\" I said. \"Is it just because Randy's left?\"\n\n\"He didn't leave,\" she said. \"I moved out. Me and Ben. The day after you served me with the papers.\"\n\nThat surprised me. \"So when you were in court?\"\n\n\"We'd been separated a month.\"\n\n\"Then why did you . . . what the fuck was that . . . . You contested the DNA testing.\"\n\n\"You're gonna try to take him away from me,\" she whispered.\n\nI felt my anger rising. \"Is that what this is all about now?\"",
        "\"No,\" she sobbed. \"That's what it was about in court. But not now, Tyler. That's not why I'm here now. That's not why I'm trying my hardest to show you I've changed.\"\n\nShe looked at me, her face tear streaked, some of her hair plastered to the waterworks on her cheeks.\n\n\"You see it, don't you? You know I'm telling you the truth, right?\"\n\n\"I see a scared little girl,\" I said. \"A scared little girl who's pissed away her life so far, and now she's worried about losing the last thing she's got.\"\n\nShe whipped her head back and forth. \"No, Tyler. That's not true. I want us to be friends. Even if you never take me back, I still don't want you to hate me. You can. You have every right to.\"\n\nI said nothing, kept my mouth clamped tighter than a tick.\n\n\"I know all about your book,\" she pleaded. \"I know you've got enough money to bury me in court. To probably take Ben away from me. I know that, Tyler. Allie told me. And she told me it's real good, too. The book. That they think you'll be famous. But I don't want that. I don't want any of it.\"\n\nShe turned away and tried to check her tears, wiping her face with her hands and hiccuping with the effort of controlling her emotions.\n\n\"Tyler, you let me keep Ben and I'll never deny you time with him. I don't want any of your money. I'll support him on my own. But I want him to know his father now. I know I was wrong. I know you have no reason to believe me. I know that. But I'm asking you to . . . to give me a chance here.\"\n\n\"And you're sure he's mine.\"\n\nKristin sat on the ground, her back against the workshop wall, and huddled her legs in on herself.\n\n\"When you moved back to town, I was afraid something like this would happen. So I went online, ordered a DNA kit. I got some of Randy's DNA while he was sleeping, and I took a swab of Ben's, too, and I mailed it in. There's no way Randy's the father.\" \n\nShe looked up at me, seeing the skepticism on my face.\n\n\"You'll understand if I don't trust you on this one,\" I said.\n\nShe just looked at me.\n\n\"Who else have you slept with?\" I said.\n\n\"No one,\" she replied. \"Just you and Randy. My whole life, just the two of you.\" She gave a sad smile. \"Probably why I wasn't so hot in bed like you said. Maybe I should've read more or rented some of those pay per views on the dirty channels, huh?\" \n\nI sat next to her. \"Well,\" I said, staring into the woods, \"I may have been exaggerating my case when I said that.\"\n\nShe elbowed me.\n\n\"What?\"\n\n\"Were you? Overstating your case?\"\n\n\"Well . . . .\"\n\nShe elbowed me again.\n\n\"Okay, maybe a little.\"\n\n\"A little?\" she said, turning to look at me.\n\nEven with her red, swollen eyes and tear stained face, that flirtatious tilt of her lips and twinkling in her eyes got me hard instantly.\n\nShe noticed, her eyes traveling to my crotch and back to my eyes, her right eyebrow raising a touch.\n\n\"Maybe more than a little,\" I said, adjusting my hard on to the side. \"A little more than a little.\"\n\n\"Shit head,\" she said, pushing me over to my side.\n\n\"Hey,\" I protested. But she just laughed and stood up.\n\n\"Come on,\" she said, walking back to the house, sashaying her ass from side to side as she did so. \"Time to get Ben down for a nap.\"\n\nBy the time we got back into the house, though, Ben was already fast asleep, curled on Mom's lap. She was gently stroking his hair while Dad watched from across the room.\n\nLeaving them alone, I went upstairs with Kristin and showed her the new book I was working on. She seemed impressed by the outline, and even more impressed by the story I'd thus far written. A touch of depression hit, though, when she realized the ex-wife character in the story was her.\n\n\"You think that's bad,\" I said, reaching into the box next to my desk and pulling out a manuscript of the first book, \"read this. \n\nWe spent the next few hours chatting about old times and laughing about people we knew and just enjoying each other's company.\n\nThere was that elephant in the room, though. The elephant I wasn't sure I could ignore."
    ],
    "authorname": "Rehnquist",
    "tags": [
        "divorce",
        "cheating",
        "courtroom",
        "lawyers"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/what-you-wish-for-pt-04"
}