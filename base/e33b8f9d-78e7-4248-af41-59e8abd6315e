{
    "title": "Surefoot 03: Field Trip Ch. 01",
    "pages": [
        "USS Surefoot, Deck 1, Mess Hall/Lounge, 0800 Hours:\n\nCommander T'Varik stood beside the display screen at the far end, her voice at a level that made no concession for any of the assembled cadets who might not have been giving the First Officer their full attention. \"We are currently in orbit around Planet L-802/4, designated as Luntanu by the original survey ship in this sector forty-two standard years ago. It is Class-M, possesses two small natural satellites aiding in tidal generation, and is currently uninhabited by indigenous intelligent lifeforms, but six years ago the Federation Archaeology Council established an ongoing research outpost here following the discovery of the ruins of an ancient civilisation.\"\n\nShe paused, before continuing. \"This is all you will be told; any onboard data about the planet has been encrypted. The rest, you must discover yourselves, during your first Away Mission. Each of the three cadet squads will employ one of the Surefoot's Type-6 shuttles to travel to pre-selected coordinates on Luntanu, set up individual base camps, and conduct initial scientific surveys. The depth and focus of these surveys will be at the discretion of your Squad Leaders, but I expect the final reports to adhere to the Academy standards as detailed in the acronym FACT: Factual, Accurate, Concise and True.\n\nYou will have 24 standard hours from the time of your launch to perform your mission, return and provide me with your completed reports. You will be responsible for selecting and requisitioning the supplies and equipment you will need for the duration of your mission; once you leave the Surefoot, you will not be permitted to request anything more.\"\n\nAt the front of the cadets, the three Squad Leaders - Sasha Hrelle, the human leader of Alpha Squad; Jared Miro, the Argelian leader of Beta Squad; and Falok, the Vulcan leader of Gamma Squad - shot glances at each other, but remained rapt to T'Varik's continued briefing.\n\n\"Although this is a primarily scientific Away Mission, the other contingents of your respective Squads - Command, Flight Control, Security, Medical and Engineering - will be expected to fully assist, as well as demonstrate proficiency in their respective fields. Are there any questions?\"\n\nSasha raised a hand. \"How much supervision will we be receiving?\"\n\n\"None, Ms Hrelle. You will operate without any intervention from your supervisors, or any access to the main computers of the Surefoot. I will be awake and available to receive scheduled status updates or respond to any emergency calls over the following 24 hours.\"\n\n\"Twenty-four hours, Commander?\" Jared asked with a teasing grin. He was tall, slim, dark, well-built, with drawn-black coal hair and full lips. \"Will you be living on coffee the whole time? That hardly seems per standard operating procedure.\"\n\nSitting beside T'Varik, Captain Hrelle was leaning back in his chair, absently stroking the fur on the tips of his leonine ears and allowing his second in command to control the proceedings. Now, the Caitian spoke up. \"Are you volunteering to remain behind and assist the Commander? Because I'm sure we can arrange that.\"\n\nJared paled and lost his slyness. \"No, Sir.\"\n\n\"Vulcans are capable of remaining at optimum efficiency for an indefinite number of days, Mr Miro,\" T'Varik proceeded dryly. \"And without the need for caffeine-based products. While I remain on standby for updates and emergencies from yourselves, the permanent crew of the Surefoot will be engaged in a number of other missions, including the retrieval and transport of archaeological relics from the outpost, delivery of supplies and communications, and running medical and diagnostic check-ups of the outpost's crew and their equipment.\"\n\nOn Sasha's left, Cadet Falok, a dark-skinned Vulcan male, straightened up slightly. \"When will our mission commence?\"\n\n\"Your Away Mission begins on Stardate 35257.77 - in 1.91 hour's time. You must have everything you need onboard your respective shuttles and be on your way by then.\"\n\nHe raised an eyebrow in response. \"Gamma Squad has only just completed their duty shift. As you have already stated, Vulcans can operate without sleep, but I am the only Vulcan. The schedule would appear to put my squad at a disadvantage.\"\n\nT'Varik raised her own eyebrow. \"It would be illogical to assume that all Starfleet missions would be subject to your work schedule, Mr Falok, unless of course you are requesting your Squad have less time for the exercise, in order to have a nap?\"\n\nAware of but ignoring the titters from the other cadets, Falok straightened further. \"That will not be necessary, Commander.\"\n\n\"Excuse me, Ma'am,\" Jared spoke up again. \"Is this a competition between the squads? I mean, will there be points and a prize and-\"\n\n\"I am aware of the components of a competition, Mr Miro,\" T'Varik noted archly. \"I had believed the pursuit of knowledge and experience would be a reward in and of itself. However, if making it a competition would be a further incentive, I will assess each squad's overall performance based on their adherence to Starfleet procedure, the completion of the objectives, the quality and quantity of the data gathered, and the final report compiled. As for a prize... Captain?\"\n\nHrelle folded his hands on his belly and raised his muzzle up, as if baring his furred throat to the group. Then he snapped back to stare at them with his dark bronze feline eyes. \"How about the winning squad gets an extra week's worth of replicator credits, to be used individually or as a group, for food, goods or a combination of both?\"\n\nT'Varik nodded. \"That would be acceptable.\"\n\n\"Oh, and we'll lift the restrictions on replicating intoxicants,\" he added.\n\nThe Vulcan ignored the cheers from the cadets. \"That will not be acceptable. Starfleet Academy Regulation 118: 'Cadets before their fourth year of study are forbidden from consuming legal intoxicants, either on or off Academy grounds, regardless of age or legal status, except in accepted situations involving cultural or religious activities.'\"\n\nHrelle looked to the cadets, shrugging. \"Sorry, kids.\"\n\nT'Varik returned to the group. \"Your mission begins in 1.86 hours. I would strongly advise you not to procrastinate. Dismissed.\"\n\nThe cadets became an excited mass of questions, declarations, boasts, promises and denials. Sasha's brain was moving at Warp Ten, as she began planning ahead, thinking about all those times she had practised for missions like this.\n\nIt would help if she wasn't distracted by the enticing Jared, who was smirking. \"Your Dad didn't try very hard to get the alcohol restrictions lifted, did he?\"\n\nSasha frowned; any criticism of her father immediately got under her skin, even from someone as... attractive as Jared. \"It's not his fault, T'Varik has final say over the cadets.\"\n\n\"I for one agree with the judgement,\" Falok noted, drawing closer to join his fellow Squad leaders. \"Intoxicants would be a waste of replicator credits.\"\n\nJared looked up at him. \"I bet your squad thinks differently. Don't Vulcans ever get drunk?\"\n\n\"Vulcans do possess potables to commemorate special occasions. However, the concept of intentionally ingesting consumables to deliberately lower judgement levels and promote loss of inhibition is highly illogical.\"\n\n\"Sounds like you're missing the point of getting drunk.\"\n\n\"Very possibly. I will however bask in such wilful ignorance.\" He nodded to each of them. \"I wish success for both of you.\"\n\nAs he left them, Jared smiled at Sasha. \"We have to find something to loosen him up a little, if only for the sake of his squad.\" Then he frowned. \"No point in talking to you, your head's already at the Quartermaster's Office. Good luck, Sash.\" Then he leaned in and whispered, \"I'll see you before we go.\"\n\nSasha caught a strong whiff of cologne from the cadet, and felt her temperature rise, before she was thankfully distracted by the approach of the rest of Alpha Squad. \n\nNeraxis slapped her boisterously on the back, the Bolian's blue face bright with excitement. \"Well, Boss, why are we standing around here? Shouldn't we be, I don't know, getting ready to leave?\"\n\n\"We already are,\" Sasha murmured, looking around to make sure none of the other squad members were nearby, as she formed her own into a circle, her voice low. \"Jonas, this week you were working on the diagnostics for the auxiliary sensor array in the secondary hull. You set up a link to your work PADD to continue in your off-duty time. Do you still have that link?\"\n\nEngineering cadet Jonas Ostrow, a short, slight human male with wide doe eyes and silvery hair, nodded. \"Yes, why?\"\n\nShe indicated Giles Arrington, standing on her right. \"If Giles heads down to the shuttlebay now to do the pre-flight checks, he can access the landing coordinates that have been programmed in. And if he passes them onto you, you can use the auxiliary sensors to scan that area and give us an idea of the terrain and climate to expect, so I can requisition appropriate equipment. Kit, you assist Jonas; you've been working on planetary models on the bridge science stations, so you can analyse the readings more efficiently.\"\n\nBeside Jonas, Kitirik, the Qarari Science cadet, nodded, his mottled, olive-drab reptilian skin flushing under his neck with anticipation as he nodded at her. \"Yes, Respected Squad Leader. We will be most informative.\"\n\n\"The rest of you, follow me, we're heading straight to the Quartermaster.\"\n\nEydiir, the tall, dark Capellan Medical cadet, eyed her with curiosity that could be mistaken for suspicion in anyone else. \"Shouldn't you prepare a formal requisitions list beforehand?\"\n\nSasha held her PADD in hand, but used it to tap the side of her own head. \"I've been preparing since I was ten, playing Away Mission with my Dad. I know the basics of what we need.\"\n\n\"Ten, huh?\" Neraxis quipped. \"That'll mean lots of ice cream and popcorn.\"\n\n\"You have a problem with that?\" Sasha countered with a smile.\n\n*\n\nDeck 3, Cargo Bay:\n\nThe Quartermaster's office and the adjacent cargo bays were pandemonium, as cadets moved here and there, lifting and dropping cases and crates of various sizes and shapes, while the Quartermaster herself, a short, squat Rigellian female named Zhastaan, took great delight in refusing every request for supplies from the Squad Leaders that wasn't completed to the most precise standards expected.\n\nSasha held back with her squad, typing furiously into her PADD, determined to go to Zhastaan the one time and the one time only, with every metaphorical T cross and every I dotted - though she wasn't quite sure how that old saying applied any more with all this smart technology. On the other hand, judging from the delays the other squads were having in getting their requisitions approved, it wasn't smart enough.\n\nThen Sasha's combadge chirped; she smacked it so hard she made her breast ache. \"Well?\"\n\n\"It's Jonas here. Giles has given us the coordinates in our shuttle, and Kit and I have-\"\n\n\"We're on a deadline, Jonas. Tell me about our base camp - and make it concise.\"\n\nNow Kit's voice responded. \"Respected Squad Leader, the coordinates are in an Arctic tundra, current temperature -10 Centigrade but expected to drop to -40 Centigrade at nightfall-\"\n\n\"Acknowledged. You two get down here and help with the carrying. Sasha out.\" She focused on her PADD. \"There, now we'll be equipped with cold weather gear, shelter reinforcements and heaters.\"\n\nEydiir raised her chin. \"Is this not cheating? Should we not face the challenges set before us with honour?\"\n\nSasha grunted. \"Your people live in an equatorial desert, you've never even seen snow or ice. Honour isn't going to keep our boobs and bits from catching frostbite. And it's not cheating, it's The Art of Being Sneaky.\" She ran a quick final check over the list, the authorisation codes, dates and references, and proceeded forward. Alpha Squad was going to win this. She'd make sure of that.\n\nShe took some delight in the reaction on the Quartermaster's face to a perfectly completed requisition order. Ten minutes later, they were carrying the required equipment by hand or via antigrav handles to the shuttlebay, as quickly and discreetly as possible so as not to alert the other squads about the nature of their specialised gear.\n\nThey were returning to their quarters for their personal gear when Sasha started at the appearance of Jared, just around the corner. \"Sash, the Squad Leaders have some final orders from T'Varik.\"\n\nSasha's pulse raced, but she kept her cool and nodded, looking to her Squad. \"I'll be along directly.\" She kept her pace quick beside Jared as they moved around the circular corridor until they were out of sight, before Jared entered, not any expected area, but the Laundry Recycler room.\n\nOnce inside, Jared pulled Sasha into a kiss, his hot, full lips grinding hard against her own, pressing Sasha against the wall behind her as his tongue entered. Sasha sent her own tongue in reply, her head spinning as much by the kiss and the feel of the man against her, as by their secretive relationship, one which had blossomed since their arrival on the Surefoot weeks ago.\n\nShe had met Jared in the weeks before their final acceptance in the AWE Program. The young man was Argelian, a humanoid species that was said to be devoted to love and hedonistic pleasure, to the point where they needed to outsource much of their legal and administrative work to off-worlders. But Jared proved as sharp as he was... charming. Once onboard the Surefoot, they would meet, ostensibly to discuss their new roles, and initially alongside Falok.\n\nThen they began meeting more privately, in the study rooms or the library when no one else was around. It was Jared who made the moves: taking her hand and squeezing it, stroking the borders of Sasha's hairline, kissing her, making Sasha's heart flutter in ways she never expected. She had feelings, of course, like anyone else, but until recently had been content to focus on her work; the regulations against sexual relations between cadets before their final year was also an exigent factor, even though Sasha and Jared were both legal adults under Federation law.\n\nAfter that, it was a task to keep their relationship a secret from the crew and their fellow cadets. But it was worth it.\n\nBut damn it, she couldn't be doing this! Not now! She pushed Jared back. \"We have to get going- both of us-\"\n\nThe Argelian smiled and licked his lips, looking as flushed as Sasha felt. \"I know. But I also know we might be setting up our bases near each other. Maybe we can meet down there alone?\" His hands reached up and took Sasha's in her own. \"A rendezvous under two moons... can you imagine it?\"\n\nSasha could, though she knew that if Jared' squad was near where Sasha knew they were going, and it did drop to -40 Centigrade at night, then their chances of getting undressed to do anything was going to be zero. Now she felt guilty about not mentioning the intelligence she had obtained - but quickly forced that guilt down. \"We'll see. We have to be careful down there.\"\n\nA sly glint shined in Jared' eyes. \"Not with T'Varik and everyone else staying onboard.\"\n\n\"Do you trust your squad not to say anything?\"\n\n\"Do you trust yours?\"\n\n\"Yes, of course - but I don't want to put them under the pressure of choosing between loyalty and the truth.\"\n\n\"How melodramatic,\" Jared teased, though there was recognition of the merit in Sasha's statement. \"Then you'd best get your gorgeous little rear end going.\"\n\nBut she still came in for a kiss goodbye, a kiss that lingered once more, especially as she felt him pressing against her down there, proof of his desire for her, a further galvanic charge to her own feelings.\n\nBack with her squad, Sasha could swear they all knew what she had really been up to. But their imminent mission quickly took precedence. \n\n*\n\nDeck 3, Shuttlebay, 0955 Hours:\n\nNeraxis swallowed as she looked around the interior of their shuttle. Such as it was: every space not taken up by seats was allocated to their equipment. \"How long will it take to get to base camp?\"\n\nIn the pilot's seat, Giles never looked up from his pre-flight checks. \"About forty minutes.\"\n\n\"I should probably go to the toilet again before we leave.\"\n\n\"We'd appreciate it.\"\n\nThe Bolian stepped out, almost running into Sasha and the others, carrying their personal belongings as well as the last of the equipment for the Away Mission. Sasha frowned. \"Where the hell are you going?\"\n\n\"Toilet, be right back, promise.\"\n\nNeraxis bolted, as Sasha called after her, \"We leave in five minutes, whether you're onboard or not! I swear to your Gods I'll do it!\"\n\n\"Harsh. Glad you're not my commander.\"\n\nSasha turned at the new voice to face Hrelle, standing nearby with a black satchel in one hand, and forced the exasperation and anger from her face. \"Dad- I mean, Captain, I mean- what's wrong? Is something wrong?\"\n\nHe approached her, smiling. \"Nothing's wrong, Runt of the Litter, calm down. I just wanted to say goodbye before you go off on your first Away Mission.\" He held up the satchel. \"And to give you this.\"\n\n\"What is it?\"\n\n\"A little something. Don't open it until you get settled in tonight.\"\n\n\"Okay, thanks.\" She reached for the bag, adjusting the ones she was already carrying. Now he drew in, pressing his muzzle against her forehead in the Caitian approximation of a parent-child kiss. \"Have fun, Sasha.\"\n\n\"Yeah, sure-\"\n\n\"Seriously... have fun. You'll always remember your first.\"\n\n\"I'm back,\" Neraxis called over to her, as she rushed into the shuttle.\n\nHrelle backed off. \"Now go, before I get verklempt.\"\n\nSasha nodded distractedly, starting to turn away - but then returned and gave him the best hug she could, what with all the things she was carrying. Then she drew back and entered the shuttle.\n\nAs the doors closed, he called in, \"And don't eat yellow snow!\"\n\n*\n\nThe shuttlebay doors opened out into space, the invisible forcefield in place allowing slow-moving vessels to seep in and out while retaining the atmosphere within. Alpha Squad's shuttle slipped out into the void and towards the orange-green planet spinning slowly before them.\n\nSasha sat in the copilot seat beside Giles as he hailed their mother ship. \"Surefoot, this is Shuttle One, we've passed through the atmospheric field and we're on our way.\" Sasha nodded absently to herself, appreciating that Giles seemed as good a pilot as he always claimed.\n\nBehind them, the other Squad members sat, surrounded by equipment that wasn't as securely fastened down as they should have been. Neraxis elbowed a heating unit that was getting overly familiar with her. \"Damn it, I hate the cold.\"\n\n\"I love it,\" Jonas confessed, playing with his engineering tricorder. \"Hyralin was pretty distant from its sun, so we always had long winters. Snowball fights, snowmen, skating, sledding, being out all day and coming home blue in the fa-\" He paled, looking at Neraxis, almost squeaking, \"Sorry.\"\n\nThe blue-skinned Bolian raised her middle finger at him, as Kit watched the exchange with curiosity. \"Friend Eydiir, I have witnessed many instances where that hand gesture has been used by humanoids. Is it always employed in an obscene manner?\"\n\n\"Yes, as a representation of the phallus, and an unspoken invitation for its penetration, usually in an excretory orifice,\" Eydiir replied absently, holding her kligat, a throwing weapon of her people. \"There are variations with two or more fingers, but the representation is the same.\"\n\n\"Is it meant to be taken literally?\"\n\n\"Most visual and verbal obscenities are not. Especially when delivered by someone such as Neraxis.\"\n\n\"You have a problem with me, girl?\" the Bolian challenged teasingly.\n\n\"Yes. You are far too facetious and immature for someone in such an important role as Security.\"",
        "Neraxis stuck out her tongue in reply and blew a raspberry.\n\nKit pointed at the display. \"A representation of flatulence, yes?\" He beamed. \"We do that too!\"\n\nAt the front of the shuttle, Giles started muttering, \"This is wrong.\"\n\n\"What is?\" Sasha asked.\n\n\"The coordinates I was looking at before... they've changed now.\"\n\n\"Changed? Are you sure?\"\n\n\"Yes! I've checked the flight recorder, the Surefoot just sent us new coordinates as we were departing! They want us to go to a new location!\"\n\n\"Where?\" Sasha didn't wait for an answer, calling up the coordinates herself and matching them with the sensors in the shuttle. \"It's on the planet's equator, in the middle of a jungle!\"\n\n\"Marvellous!\" Kit declared, listening from the rear. \"I had hoped to visit there during our stay! The temperatures can reach 50 degrees Centigrade!\"\n\nAngrily Sasha opened hailing frequencies. \"Shuttle One to Surefoot. Why have you changed our landing coordinates? Has something gone wrong?\"\n\nThe voice of her father filled the shuttle interior. \"No. We never intended to send you to the colder regions of this planet.\"\n\nShe frowned to herself. \"Then why-\"\n\n\"Because Sometimes the Universe Has Other Plans. And other times, it's your commanding officer. Did you really think we wouldn't detect you accessing the auxiliary sensors? Silly cubs. Have fun. Surefoot out.\"\n\nSasha sat there in silence.\n\nThen she let loose a string of particularly filthy proclamations.\n\nKit looked to Eydiir again. \"Did our Respected Squad Leader mean what she just said about her father?\"\n\nThe Capellan stared at her best friend. \"Best not to ask at this time.\"\n\nTO BE CONTINUED"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "science fiction",
        "space",
        "federation",
        "caitian",
        "starfleet"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-field-trip-ch-01"
}