{
    "title": "Medusa: Fate's Game Ch. 14",
    "pages": [
        "~~Darian~~\n\n\"... Bellerophontes.\"\n\nThe world stopped. The air petrified, the breeze ceased, and the crickets and birds faded away. The world died around him until it was as if sitting atop a stage, lifeless. Cold crept along his skin until he thought his tears might have frozen on his cheeks. They weren't, but every sense in his body told him they should have been\n\nThe mask was alive. Or at least something was talking through it.\n\n\"Bell...phontes...\" The voice sounded buried, like something speaking through rock and dirt, and it was a raspy voice too. Someone who hadn't had a drink in a long, long time.\n\n\"Who are you?\" He forced down his tears and sobs, and got to his feet. No sword or shield to defend himself, no helmet either. Just him, his armor, and a mask.\n\n\"My sisters... sent you on mission... knew what would happen.\"\n\nHis sisters? Darian took a step back and stared down at the slab of onyx.\n\n\"... the Fates?\"\n\n\"Yes. They... Athena... knew would kill Medusa... once Athena learned... your plan.\"\n\nDarian sighed and wiped away his tears. Wetness and salt. He'd never known them before, not from his eyes.\n\nHe walked over to the mask, and stared down at it. \"I asked you who you are.\"\n\n\"Yes...\"\n\n\"So tell me.\"\n\n\"... no.\"\n\nOf all the insufferable shit. He picked up the mask, and stared into it eyes, into the white glow of its mouth. A white glow he was all too familiar with.\n\n\"If your sisters are the Fates, I... I don't know who you would be, or how you can talk without a conduit.\" The mask wasn't strapped to a skull, no one had died to fuel it. How was it talking?\n\n\"Deep within... blackness... I speak.\" It laughed, a hushed sound, barely more than a whisper. \"Sisters... would prefer... lock me away.\"\n\nHe blinked at the mask, and held it out at eye level.\n\n\"... why do you speak to me?\"\n\n\"Because... it was to be... the Amazon. But the Fates... I was wrong. It... is you.\"\n\nDarian snarled and squeezed the mask. Whatever the material was, no strength he had was going to bend or hurt it, but as he choked down the wrenching muscles in his gut, he squeezed it anyway.\n\n\"What is me?\"\n\n\"... vessel.\"\n\nDarian dropped the mask with a jerk, and stepped back. \"I know what your kind do when a human wears them! I've talked to the Fates, I've seen the corpses they leave behind, the skulls.\"\n\nThe mask sank into the ground like a large slab of stone as it landed.\n\n\"You... not die... Bellerophontes. Fate's Child... survive.\"\n\nHe snarled, and started to pace in front of the mask, hands in fists at his side. \"I have no reason to trust you.\"\n\n\"No reason... to not... Help me... defeat sisters.\"\n\nDefeat sisters. Defeat the Fates? Kill, not kill? The mask grated on him with every vague word.\n\n\"They fear me... Bellerophontes. Sisters... gods... bow to me... I will... ruin them.\"\n\n\"So you're an all powerful entity? Big talk. I have no reason to trust you, no reason to wear you, no reason to listen to any of this shit.\"\n\n\"I... take you... to Medusa. Be... with Medusa.\"\n\nHe stopped, and stared. \"... at what cost?\"\n\n\"... your body... will belong... to me.\"\n\nSilence. Darian stared down at the mask, its soft glowing eyes, and his whole body winced. He looked up at the stars, breathed deep, and reached down to pick up the mask again.\n\n\"You want my life.\"\n\n\"Your soul... be with... Medusa.\"\n\nDarian sighed, and fell to his knees. A joke. A big, fat joke. The thing in the mask, a Moirai, wanted his body. Wanted an avatar. He supposed that was the difference between a god and the Moirai, gods could come down to the Earth and look like a regular human whenever they wanted, hide their golden masks. Like when Poseidon had raped Medusa.\n\nHe grit his teeth, and squeezed the mask again. Medusa. He wanted her. Gods he wanted her. The ache in his gut started to grow, wrench at his insides, and twist him until it felt like he would split in half for the pain.\n\nThe mask chuckled, bits of white mist spilling over its lips as it laughed at him.\n\n\"Can you... live... without her?\"\n\nHe looked away, down at the dirt around him. His arms shook with the strength he was putting into squeezing the mask, both hands gripping its edges, trying to break the damn thing in half. But it sat in his fingers, defiant, chuckling at his misery. The mask's words cut through him, seared him worse than the mark on his forehead, and flooded him with images of Medusa, of her smile, of her hugging coils, of her nuzzling snake hair, of her kiss. Of her corpse.\n\nHe couldn't live without her.\n\nPegasus would beat him senseless for being so pathetic, and so would Otrera, but they didn't matter. The clich\u00e9 of it all. Your woman dies, so you die too so you can be with her. Damn the consequences, damn the rest, damn the others who might need you, damn the world. Damn everything.\n\nHe gulped, closed his eyes, and put on the mask.\n\nThe hooks of its contours stabbed into the flesh of his head, shooting pain through his body and sending him onto his side.\n\n\"I am Moros,\" it said, and buried him in darkness.\n\n~~~~~~~~~~~~~~~~~~~~\n\nJust as he fell under heavy curtains of black, he awoke to it. He looked to his left, his right, up and down, but found nothing. Weight pulled him down, kept his feet grounded against something, but when he reached down to touch it, there was nothing. His fingers found that nothing was actually something, whatever his feet were standing on, but it had no texture, no temperature, and he could not see it in the dark.\n\n\"Poor, blind Bellerophontes. It has been so long since I've had visitors, in my corner of the realm.\"\n\nThe snap of fingers, and then an explosion of light. Darian raised his hand to cover his eyes as the blackness washed away and was replaced with a swirling green, then blue, then a maelstrom of crimson and purple. As his eyes adjusted, he stared at the colors, until they settled into rivers that flowed through the air, beneath him, around him, against an endless backdrop of black and stars.\n\nWell, at least he could see now. He looked down, and frowned; all he was wearing was his tunic. Whoever this Fate was, he couldn't see anyone nearby in the weird room of colors.\n\nRoom was the wrong word. As he looked around, he gasped and stepped back from one of the nearby streams. There were faces in it, bodies, like ghosts on the surface of the colored rivers. Some of the streams went up over his head, some below, and they looked as weightless as fog. All of them carried faces, wisps of mist with eyes closed and bodies relaxed as they flowed in the streams.\n\n\"Where am I?\"\n\n\"In the realm of destiny, where souls pass before they are reborn. Here, my family and I live.\"\n\nDarian looked around again, and started to walk. Walking did nothing, the stars remained unchanged, the streams did not move relative to him, and his feet stepped onto nothing to pull against nothing. Disorienting. He stared down at where his feet were standing on something, but the rest of the place didn't seem to care about it. He may as well have been floating in oblivion.\n\n\"Realm... of destiny? ... of fate?\"\n\n\"Indeed.\"\n\nDarian jumped back as a swirling black opened in front of him. Unlike the rivers of color, the charcoal mist seemed grounded, attached to the invisible surface as he was, and he stared at it as swaying waves of black and mist inched from its mass.\n\nMore of Moros stepped out from his hole, and as he did, Darian continued to take steps back. Tall, almost as tall as Chimera, but where Chimera was all flesh and muscle, Moros was black robes that hung from him like wet cloth. The entity had no arms, and more of the odd fog could be seen around his chest where his rob opened. He wore a hood, and where a face would be, there was the mask.\n\nMoros. Moirai of doom, brother of the sisters. Darian forced himself to look at the entity, but there was no mistaking the cold chill that worked through him as he did. He'd given his body to the death of everything.\n\nFucking. Idiot. Darian.\n\n\"It is not a place meant for humans. Destiny runs through these rivers, Bellerophontes.\" Moros, colossal in size compared to him, walked out toward the streams, and gestured to them as he started to wander. \"Your kind are colorful, are they not?\"\n\n\"Colorful?\" Darian jogged after the giant, black-robbed, strolling entity of doom itself, and fell into step beside him. \"These rivers, this is... I don't understand.\"\n\n\"And so you shall never. Your mind can only understand the simplest of this realm's aspects, such as the color of your souls. Its resonance.\"\n\nSouls. Darian looked out over the streams, and squinted to see more detail, but there was none to be had. Everything was hazy, and the bodies in the stream moved through each other like liquid.\n\n\"I... shouldn't be here,\" Darian said.\n\n\"Indeed you shouldn't. Your image now, your clothes, I have created these so you would feel more comfortable for the process.\"\n\n\"Process?\"\n\nMoros stopped walking away, and turned to face him. \"I was sure it would be Otrera, the first Fate's Child to ever feel her soul.\" He laughed, raspy voice bellowing in the oblivion that surrounded them. \"I misread the rivers. My sisters would be laughing at me.\" And he would too, apparently, as he chuckled once more.\n\n\"Feel my soul?\" He was getting sick of asking questions, but the bastard refused to answer him. And, much as he hated it, he had to know what was going to happen to him.\n\nLarge protrusions raised from the center of Moros's robes, sort of like arms, raising different sections of the heavy blackness that hung from him. Two, three, four limbs poked out with black-mist tips, and reached out further to touch the nearby streams. How they touched them Darian couldn't figure out, when he couldn't get close to them, but Moros touched the rivers and made them bend toward him.\n\n\"Would it interest you to know, Bellerophontes, that it was I who guided Andromeda's actions?\"\n\nDarian took a step back, and glared. \"What?\"\n\nThe cloaked figure stepped around, and pulled in one of the streams. This one was mostly blue, with streaks of red cutting through its center that the faces within swam around.\n\n\"I whispered things to her dreams, Bellerophontes. I told of her what I'd seen, of her fate to be sacrificed to the sea creature Cetus. Of her love Perseus. Of her destiny to be his wife.\" The cloaked entity reached for another stream, this one darker, larger, with dots of green running through its navy expanse, and he drew it up toward them from beneath. \"She thought it only a dream, until she stumbled upon the means to pursue answers. Dark magics, drops of the aether, ancient books that drifted into her hands.\"\n\nMoros was proving to be a verbose entity. From how he sounded talking through the mask back in the real world, Darian expected him to talk slowly. But Moros seemed intent on talking him to death.\n\n\"With but the tiniest thread, a tiny tug at fate, Andromeda threw herself into necromancy, and other magics old and forbidden. She learned to summon an extinct race, and soon after, to infuse life into the bones of the dead. Dabbling, experimenting, obsessed, she descended into the pit of vile magics, until she learned... well, you know what sorcery she learned.\"\n\n\"Why tell me this? Why... any of it?\" Darian said.\n\nMoros chuckled, and reached out with shadow limbs to grab a stream darker still, of almost pure black, with traces of white on its edges. He pulled it close, and close, until was only a few feet from them, and Darian could reach it if he wanted to.\n\nBut he didn't want to. He froze as the stream, from so close, displayed more than faces, but also places.\n\n\"It would appear I do not have the exact elegance of my sisters. For sure I thought it was to be the Amazon queen and I, here and now, but instead it is you. And you, Bellerophontes, are not Otrera. This conversation will be different than I imagined.\" More laughter. Moros reached out and, like tearing open a deer's belly, split the river of black down its length.\n\nColor poured from the stream, out and over the oblivion around them, washed away the other rivers until they were dots in the distance. Where the river had been black, streams of each color crashed into the nothingness Darian stood on, fell back on, and filled the area around them. Soon, for a good forty feet in all directions, the area was a scene out of the real world.\n\nGrass. The sun high. Gentle breeze. Two teenagers playing with wooden swords.\n\nMoros walked over to Darian, and stood beside him as he turned to face the two fighting children. \"I am sure you recognize these two.\"\n\n\"... me and my brother, a long time ago.\" The Fate was going to show him this? Now?\n\n\"You did not know it then, but I believe you have begun to suspect the commonality between Fate's Children now, now that you have met Perseus.\" The mask looked down to him, face blank, eyes and mouth glowing white. But Darian looked back to the two boys and said nothing. \"Then I will show you. Here, at its greatest moment in your life, when your power first emerged.\"\n\n\"Come on Bellerophon! You have to be willing to get in with your shoulder and close the distance. You don't have a spear, you can't just stay at a safe distance and hide behind your shield.\"\n\nThe older boy demonstrated, stepped in with his shoulder first between the younger boy's swing, and swung out. The wood hit the young boy in the ribs, and he fell back holding his chest.\n\nDarian got up, and stood on the grass of his memory, eyes wide as he looked around, and then at the two boys. He too clutched his chest, and looked down at his hand, then to the two teenagers as they resumed practicing.\n\n\"How? Why?\"\n\n\"Shh,\" Moros said, and he motioned with his mask toward the two.\n\nThe young Bellerophon tried again. And again. And again. But his brother wasn't letting him test the technique he'd just taught him. Lukas was laughing, and Bellerophon was too \u2014 at first.\n\n\"Lukas, I can't try it if you don't let me!\"\n\n\"Well if I just let you, you wouldn't learn how to set up! Come on, faster!\"\n\nAnd again, the two boys dueled. And again, Lukas refused to let Darian \u2014 Bellerophon \u2014 practice the technique. When it was too much, Bellerophon screamed, and the young man struck out with the sword and hit Lukas in the temple.\n\nHe knew what happened next. It was burned into his mind, every hit, every punch, everything except the face of his brother. He'd forgotten that, as he always did with the people he killed. But this memory playing out before him showed him his brother once more, the face of him clear as day.\n\nAnd every detail was perfect as Bellerophon jumped his older brother, and started beating his face in.\n\nThe vision spared nothing. The sound of crunching nose, breaking cheek bones and eye sockets, the screams and gargles, the shattering of the jaw and dislodging teeth. Moros brought the image closer, until the ruin of his brother's face was all they could see, lit by the glow of young Bellerophon's eyes.\n\n\"Stop,\" Darian said. He turned away and started to walk off, but walking got him nowhere. The ground slid underneath him with each step, until he gave up. Shoulders slumped, head down, he looked at the grass at his feet as he listened to the sounds of a fist cracking bone.\n\n\"A marvelous display of violence from one so young. And look, Bellerophontes. Your eyes glow white for the first time. The power of your blessing in your veins, bestowed upon you at birth. To give such a power so easily, I envy Clotho.\" Moros drifted around until he was in front of Darian, and chuckled. \"Do you not wish to watch?\"\n\nDarian stared at the dirt beneath him. He didn't need to watch, didn't need to relive that. He'd relived it only a day ago, with Patrius.\n\n\"Why do you show me this?\"\n\n\"Ah, because you need to understand, for the process to work, Bellerophontes. Come.\" And again the block robes reached out with several limbs, and the black fingers of mist grabbed at distant streams of color to pull them closer. The beautiful scenery, the disgusting display of gore, it all faded away, and was replaced with a home.\n\nLukas was there, younger looking. Darian's parents were there too, backed into a corner of their little home as a couple of thieves rummaged through what little they had.\n\n\"A Fate's Child is a strange thing indeed, Bellerophontes. You must have realized something about yourself, when you saved your family?\"\n\nBellerophon, just a kid, stepped in from the front door, quiet, comfortable. With his motions as smooth as liquid, he walked up toward the closer thief, and stabbed him in the back, deep. He didn't just stab either, but twisted the blade a little, and dug in to the side to make sure the knife cut through meat. And he did it all in a single second, as casually as breathing.\n\nThe thief fell over, screaming, gushing crimson. The other turned around, and this one the little boy jumped. No hesitation, no delay, the boy sank his knife into the man's chest, and started stabbing. And stabbing, until he was soaked in blood, and the thief was dead twice over.\n\nDarian looked over his shoulder to see his younger self drown in red. No glow to his eyes, just a calmness, comfortableness, with the butchery. His family looked on, and stared with wide eyes, shivering bodies huddled together in the corner. Lukas stepped out for him, but his father pulled him back.\n\nHis parents were afraid of him.\n\n\"I... didn't know why they were scared of the thieves. They were just thieves, stupid, easy to kill, if you're aggressive, quick.\"\n\n\"And there lies the problem for you, Bellerophontes.\" The scene froze, and Moros floated between the butchering boy and the petrified family. \"And it was the binding element of all the Fate's Children, until Otrera.\"\n\nThe scene grew around them, expanded, until the little home was gigantic, the people within colossal, and their faces wide against his vision. Darian couldn't look away, not this time, from the sight of his younger self sitting atop the second thief. Moros oriented the mess of it all so the display of the young boy, covered in blood, was the centerpiece of the scene.\n\nYoung Bellerophontes was smiling. Just a little, just a tiny thing, and not because of the slaughter. The young boy didn't care about the slaughter, he cared about having succeeded in his task. Simple as that.\n\n\"I know I... I know, ok, you sick fuck? I know I can't feel for the people I kill. The Fates\u2014\"\n\n\"Did nothing.\" Laughing louder, Moros drifted around the display, and stared at the young Bellerophon. \"Your power had not yet awakened here. Dormant. My sisters are a marvel indeed, and far more talented in reading the rivers than I. They knew this would become you.\"\n\n\"... they knew?\"\n\n\"Oh yes, Bellerophontes. You, Perseus, the others that have come before you, and the others in distant lands. You are all like this.\" Moros grew the scene yet again, and again, until all that could be seen from any direction was the young Bellerophontes's eyes. Cold, hungry eyes, with a hint of a satisfied smirk.\n\n\"I am not that child anymore!\" Darian swung out his arm. For a brief moment, he poured his rage and sadness into the simple motion, and as he did, his eyes glowed white. The stream tore apart, bled its colors into the oblivion around them, and faded away. He watched as his own face, the face of his brother, his terrified family, it all bled into the unending obsidian outside the rivers, until the rivers returned to their original shape.\n\nHe blinked, and looked down at his hand. The glow vanished just as quickly, and whatever his hand had done, he could not see.\n\nMoros hissed, a loud, raspy, grating sound that poured over Darian and forced him to wince. The entity drifted back toward him, looking down at him from his great height with his emotionless mask, and started circling him, like a waiting predator. \"Indeed, you are not that child.\"",
        "And again the Fate reached out, and pulled across the nether to rip and tear, bend and manipulate more of the streams, until the colors combined and buried Darian's sight in a blur of brightness. He closed his eyes, covering them with his wrist, and winced as his pupils dilated fast enough to hurt.\n\nOnce the brightness settled, Darian lowered his arm. Tiryns. A stitched together tapestry of moments from his life danced before his eyes in slow motion. The day he met Proetus, and later proved he was a capable soldier. The day he beat every soldier in dueling practice. Meeting Stheneboea. Scouting the woods with Patrius, sitting around a fire, drinking wine.\n\n\"You made friends, a life, a path many Fate's Children stumble upon. But, your black hearts inevitably destroy that life, ruined for the illusion it was.\"\n\nBlack heart. Darian grimaced, and forced himself to watch as Moros painted a new picture. He showed him his battles, his fight against Chimera, the Amazons near Lycia, and Iobates's pleasure when Bellerophon defeated them. He showed him Philonoe, the wife he did not want, but accepted for the position it gave him. Beautiful, vile, Moros showed him the woman riding him, nude, in the bliss of orgasm, where even then a dark grin marked her lips. He showed him many of the other quests he'd set off to do in the name of Athena, Lycia, and whatever reason suited Bellerophon's fancy.\n\nDarian fell to a knee when the scene put him high into the clouds, higher, and higher, until the ocean was a blur of navy below, and the clouds flowed around him. Vertigo tore through him, and he sucked in his breath to keep nausea at bay.\n\n\"Tell me Bellerophontes. Why did you challenge the gods so? I understand that, as your ego grew, so too did your desire to be free of gods and their rule.\"\n\nDarian forced in each breath. So high, and he was standing on air. It was all an illusion, he told himself, but the details he'd long forgotten, the streams of color had not. Lukas's face, a dusty haze in his mind, had been crisp and clear in the painted scenes. So if they were illusions, they were not based on his memory. They were based on reality.\n\nThe realm of the Fates. Destiny.\n\nThen he knew what scene Moros was reconstructing for him. The beat of Pegasus's wings came as no surprise, and as Darian forced himself to stand, he looked out to the sky around him.\n\nBellerophontes came from the clouds, dressed in beautiful armor gifted to him by the people of Lycia, by King Iobates. And Philonoe. Darian gulped down the wretched memory, and stared out at himself as Bellerophontes climbed higher, hands tight on Pegasus.\n\n\"I challenged them... because I thought... their power was a lie. That they are useless and meaningless without their worshipers.\"\n\n\"So you thought to help your fellow man, and free the sheep of their bonds?\"\n\nEven the ten-foot-tall mask-and-robes entity called them sheep. Medusa died for those sheep.\n\n\"... no. I wanted to free myself of their bonds, and if possible... obtain their power, their fame, for my own.\"\n\n\"Ah, and such is the mindless pursuit of many Fate's Children, of such damaged people.\"\n\n\"Damag\u2014\"\n\nHe stopped and looked to Pegasus, flying higher until a storm started to brew, until the clouds darkened and thunder could be heard in the distance. No warning was given, no argument, just a momentary glimmer of a man with a gold mask floating above him in the sky for a single moment. A flash of pure white blinded Darian, forced him to cover his eyes again, as lightning cracked the sky. Pegasus roared, the feathers of his wings scorched, and his fur singed from head to toe. And Bellerophontes fell.\n\nDarian watched himself fall, and gulped. His own body had been burned, but the burn wasn't the scary part. The scary part was the fall. Down Bellerophontes and Pegasus went, but as they fell, the windstorm grew, and over the ocean an updraft caught them. Not enough to spare them the broken limbs that came with hitting the water, but enough to spare them death. Normal creatures would have died on impact, but not the magical horse, and not Bellerophontes.\n\n\"And as many before you, you are struck down for your arrogance. That you did not die here, at Zeus's hand, was a stroke of luck indeed. Perhaps my sisters were at work? I do not know.\" Moros reached out and dashed the sky away. The clouds and winds, the lightning and thunder went with him, and again they stood among the streams of color and endless stars.\n\n\"You said I was damaged.\"\n\n\"Quiet, human. Patience.\" \n\nThe following scenes were a sad, sad tale. Darian looked on, unable to tear his eyes away from the horrible scene of his fall. His body washing ashore, limbs mangled. People bringing him to a temple, where the priests learned of what he did \u2014 he didn't know how. Maybe Zeus had given them a vision? Spoken to them through one of his statues? They said he was to be punished. They pinned him down while he was weak, and burned a slave mark into his forehead. But they knew about him, his demigod body, and they burned it in deep, a dozen times, until it stuck.\n\nThe next was him, in a quarry, with chains so thick he could not break them. For a year, he worked, stayed quiet, biding his time. No friends, confiding in no one. Just scheming for the day he'd get revenge on the gods for his torment.\n\nThe next, the boat. Him in a cell, shaking the bars, right before the sea creature attacked. Darian raised his hands to block the oncoming waves, but the illusion did nothing to him as it rushed him with sea water. Instead, he got to watch, and he winced as the men in the cell were crushed. The old man begged for help, and Darian left him to drown.\n\nMoros took a moment longer, lingering the painted memory upon the dying old man as rising water overtook him. \n\n\"Delectable,\" he said.\n\nDarian scowled. \"I had to. I would have drowned along with him.\"\n\n\"Yes, you'll get no argument from me.\" Again Moros laughed \u2014 really sickening sound at this point \u2014 and with a swipe of a few of his arms, the image of the ship and sea vanished. An island replaced it, with two giant statues at a dock, with snake bodies below the hip.\n\n\"... don't.\"\n\n\"But this is the focus of why you're here, is it not? The reason you and I are speaking.\" Moros pointed to the island, and as if they rode the wings of a bird, they flew in toward the temple, within its embrace, and into the room full of statues. Medusa was there, panicking, shaking, and a small, dirty warrior was dressing her wounds.\n\nDarian looked away. Ache started to creep up his body, and the tears of before forced their way into his eyes.\n\n\"You're... you're real.\"\n\n\"Of course I'm real. We'll need to wash these later, but for now...\"\n\n\"You can't be real. Your eyes... are you a ssspirit?\"\n\n\"I am no spirit. Flesh and blood, same as you.\"\n\nThe other Darian tended to Medusa's wounds, touched her, calmed her, and the terrified gorgon at last started to accept him.\n\nThe first time he'd ever talked with a monster. The first time he'd ever suddenly found himself wanting to help someone in pain.\n\nWhy? What was it about her that struck him so? He didn't know her then, just recognized the sound of a woman in distress. He'd heard it a million times, in cities, in the hands of monsters, everywhere. But her voice caught him differently.\n\nFrom the very moment he saw her, he wanted to be near her, talk to her, be with her. Such a beautiful woman, and her snake parts only made her more beautiful in a strange way he loved. And as the illusion carried on, his eyes fell back to it, no matter how hard he tried to look away. He wanted that back. Gods, he wanted that back.\n\n\"It is such a strange thing. The Fate's Children are chosen because they are damaged, Bellerophontes. Their minds are flawed. Empathy is something any human can feel, but a piece of it does not exist in you. Obsessive tenacity has replaced it; a valuable tool in creating tales for the telling.\" Moros drifted closer, and Darian took a step back. But moving away did nothing, and the huge entity grew closer until it reached out for him, and its shadowy fingers took his chin. \"You do not feel, not to the extent a proper human does. You were born a broken thing. But...\"\n\nDarian tried to pull away, but Moros's grip was absolute, and when he tried to shove him, his hands fell away from the monolith of darkness and ice, powerless. Moros chuckled, and with more arms, drew another scene from the color rivers.\n\nThe simplest scene in the world. Medusa coiled up, staring up at the night sky, and Darian sitting in her coils, leaning back against her. So comfortable, so perfect.\n\nDarian's tears tore at him, and he swung his arm again, this time with a scream. For a brief second, his eyes flashed, and Moros jumped away as a slash of white light cut through the space of Darian's hand. The entity snarled, but his blank mask only stared.\n\n\"Medusa said it herself, that she is your missing piece. Never in the history of the sisters has one of their chosen managed to discover that part of themselves. Most are like Perseus, and think they know empathy, think they know what it means to feel the language of the soul, even as they climb over the bodies of thousands to reach their goals. Fools, psychopaths. But you, you have finally managed to tap into that part of yourself.\" Moros chuckled, circled him, and with a swipe of his arms, destroyed the perfect image of Darian's lost happiness. \"And it took the love of your life's death to awaken it.\"\n\nDarian reached up to his face, and touched the tears there.\n\n\"Was this... all some sort of sick game to you?\"\n\n\"... yes.\" Moros hovered away, exposing the obsidian fog that made up the underneath of his robe. \"The Fate's game. A Fate's Child is the only one capable of hosting the power of a Moirai, after all. My sisters are content to play the game from their perches above, without touching the world of flesh. I prefer to get my hands dirty. It was such fun the last time.\"\n\nEvery time Moros chuckled, Darian grit his teeth until his jaw clicked. Sick, disgusting thing. Being near the Moirai was making Darian see white, and each word the abhorrent creature said sent searing fire into his skull.\n\n\"You said you'd show me Medusa, let me talk to her, let me be with her.\"\n\n\"You are here because we are making a deal. Made a deal. You wear the mask, and you are now mine. Your soul will go to where Medusa's is as promised, and you can be together.\"\n\nToo easy, too perfect. Darian frowned and started circling the giant mass of onyx, just as Moros started to circle him.\n\n\"And where is that?\"\n\nMore chuckles. \"The underworld.\"\n\n\"You say that as if it's a single place. I want to know where Medusa's soul went in that realm.\"\n\n\"I supposed as much. To know where your soul goes, that is the ultimate question is it not? And the purview of the gods and Fates, I\u2014\"\n\n\"Where is she!?\" Again Darian swept out one of his hands, and cut through the growing black that leaked from Moros. Obsidian mist and fog shattered like glass, and Moros stepped back as Darian stepped forward.\n\n\"... Athena has demanded her soul be dragged to Tartarus, to be tormented for a thousand years before it shall be released back into the aether for rebirth.\"\n\nDarian stopped, and raised a hand to his lips. The sudden information about reincarnation registered for only a moment before his mind caught onto the scary part. A thousand years? \n\n\"What? She... she can't do that, she\u2014\"\n\n\"Your limited understanding of the gods, and what those creatures do, their motivations, is not my concern, Bellerophontes. We have a deal, and now that you understand the gravity of your actions, your body is mine.\"\n\n\"You expect me to let you have my body now?\" He reached for his sword, and groaned. Realm of the Fates, whatever that was, wasn't solid like the real world. His armor was gone, he had no weapons, just a tunic and his hands.\n\nMoros floated higher, and waved out several of his arms, heavy robes draping over foggy limbs. \"You are just a human, Bellerophontes, but a Fate's Child as well. The only one of your kind who can feel the soul to its greatest depths; the Amazon could, perhaps, but fate has brought you and I together.\" He laughed with his joke. \"My avatar would be useless to me if I could not appreciate, feel, taste the doom, the death and destruction I will spread.\"\n\nSo that was it then? Because Medusa's death was tearing him apart, he suddenly fit the criteria for this entity's avatar? Darian snarled and tightened his fists. His eyes started to glow, and he circled the hovering monstrosity once more.\n\nAnd Medusa, she was being dragged to Tartarus by Athena. Tartarus, agony, pain and torment, burning flesh and misery. For a thousand years.\n\nHe shook his head, looked down, and squeezed his fists until his knuckles cracked. \"... no.\"\n\n\"Excuse me, little human? Unless I am mistaken, you just... denied me? You already wear the mask, idiot child. The lessons I have taught you here and now were a part of the process, not my attempts to convince or corrupt you. Only with full understanding can I rip the soul from your vessel, I\u2014\"\n\n\"Then come, and take it.\" He spit on the oblivion beneath him, and breathed deep the nothingness of the new arena.\n\nMedusa would not let him do this, not let him let this thing kill others because he was too weak to go on alone without her. And Athena, sending her to Tartarus? No, he would not allow this. Could not allow this. He growled as he stared up at Moros, as his eyes started to glow brighter, and the world of color rivers started to bend and quake around him.\n\nThe world responded to him. He noticed it earlier. And Moros noticed it too. Hard to read a mask, but as its mouth and eyes glowed with the same white as Darian's, the Fate's Child grinned and paced back and forth in front of the robed thing of mist and fog. Moros made a mistake, thinking his avatar was going to be Otrera, not him. And he'd made a mistake again, thinking Darian would just accept this absurdity.\n\nThen again, he was a Moirai. What can you do against that, Darian?\n\nFucking plenty.\n\nMoros raised his arms, and started to grow in size. The monolith of black mist and robes rose higher, and buried the world around Darian as its blackness crawled along the emptiness beneath his feet. Stars vanished from the void, one sparkle at a time. Devouring the world \u2014 or whatever it was \u2014 the black mist spread out, poured over the bottomless oblivion around them, and thickened until it was the creature's robes, not the black mist, that spread out as far as Darian could see. The mist rose along with Moros, until the rivers beyond them were hidden in the walls of onyx.\n\n\"... so be it.\"\n\n~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~\n\n~~Otrera~~\n\n\"You don't think he'll... do something rash, do you?\" Gallea said.\n\nOtrera shrugged, and continued to stroke Chimera's hand. She'd never seen the big guy take so long to heal. A dozen men and her own strength were required to set his bones, get joints back into their sockets, and move him to the empty area they were in. People had insisted on bringing him to the temple, but she knew he'd want to be touching the earth as he slept.\n\nSo she sat by his arm, and stroked her fingers along his massive knuckles. Scars, so many scars. He made her scarred skin look smooth in comparison.\n\nBut he was alive. She'd seen him crushed, but the bridge had been crushed along with him when the creature's hand hit the wood too. The sea creature must have driven him into the water, instead of flattening him into paste against the bridge. So very lucky. So very gods damn lucky.\n\nShe sniffled a little, and looked up and down the beast's huge body. Lying on the earth in their cozy area near the city outskirts by the main road, it was quiet, and the group of them could talk as Chimera healed.\n\nShe did her best to not look at Medusa's corpse, not too far away. They'd thrown several blankets over her \u2014 it \u2014 to cover it up, and they would wait until Darian gave the word before they buried her, or burned her, or however the man felt best to deal with her body.\n\nWhat would he do? Wasn't like he was going anywhere, stuck in Aethiopia until Gallea summoned Charon's ship, or until Pegasus healed; she couldn't see him leaving without Pegasus. And judging from how the horse was letting his wing hang, it'd be a while for the delicate limb to heal. Weeks maybe.\n\n\"I can't imagine what's going through his head,\" Pinna said. She and Gallea were both sitting near Otrera now, their little spat a memory gone. \"If you died, I'd... I don't know. You're a pain in my ass, but I think I'd have trouble living without you.\"\n\nGallea chuckled, but the weight in his voice ruined it. He set his head down against his wife's shoulder, and the two of them looked at the sleeping Chimera.\n\n\"How much of it did you see?\" Otrera said, and she glanced over her shoulder to Pinna before returning to Chimera.\n\n\"I... it was hard, not getting caught in the battle. But I saw everything. I saw what Patrius did.\"\n\n\"So... how's the story going to go then?\"\n\n\"I don't know. Gallea and I have to talk with the Fates. We can't just say whatever we want. We write the story, they revise it, and we tell it. It... I'll try everything I can to make sure Medusa is treated with respect.\"\n\nOtrera laughed and shook her head. \"You know she's going to be recast as a manipulator, deceiver, or straight up villain.\"\n\nGallea and Pinna looked at each other, and Otrera could feel them sigh, even as they did it silently. She knew she was right, and she shrugged as she ran her hand up and down Chimera's arm.\n\nPegasus walked over to her, and leaned down to nudge against her head. It wasn't the first time, and each time, she found herself choking on more sobs. What was it about his eyes that cut through her so easily? She'd owned horses before, but Pegasus was no simple horse. His dark eyes penetrated her, and when she met them, tears welled up. Her fingers stroked his head, underneath his chin, and back against his neck. A huge horse, with more to pet than she could reach.\n\nHe nudged her again, and looked to the road.\n\n\"Oh, Darian. He... he's had it bad since you were split up, Pegasus.\" But she wasn't a good storyteller, and she cast a glance to Pinna and Gallea.\n\n\"Bellerophontes became Darian, Pegasus, after he escaped from a prison quarry. He wanted to start a new life.\" Pinna got up, hopped over to the horse, and started to comb his mane. \"Didn't know what had happened to you or where you'd gone. But by chance, he landed on Medusa's island, and... the two fell in love. Really, really deep in love.\"\n\nPinna continued the story, and told the winged horse of all the things that had happened. Horses didn't have facial expressions, not the same humans did, but even Otrera could see the look of shock on Pegasus's face.\n\nOtrera tuned it out after a while, her eyes stuck on Chimera and his rising, falling chest. Even when she'd stabbed the giant in the back a dozen times, he hadn't gone unconscious. Now the giant was so injured, he wasn't waking up at all. Gods, if he didn't ever wake up, she didn't know what she'd do.\n\nYou've known the beast for barely more than a month, Otrera. You sound like a little girl, swooning.\n\nYeah well, she wasn't a little girl. She was a full grown woman, starting to get on in her years. She knew what she wanted, and she wanted the big guy lying next to her. Someone with a brain, even if he did have a habit of thinking too much. Someone with\u2014 \n\nA scream echoed through the air. Not human, but not the manticore or the undead either. A strange sound that boomed across the sky and shook the trees as it hit them, and all of them jumped up. Chimera remained unconscious, but the rest of them looked around in a panic.\n\nNothing came at them, nothing attacked, but the air came to a standstill. What sounds the nearby birds were making were gone, and the crowd in the city went silent. Otrera felt her body go cold, and her eyes dart around for her weaponry. She'd heard people die before, by the hundreds, and as the scream continued, all she could think of was the layered screams of many dying people, combined.",
        "She stood in the road, and stared up at the sky. The sun had finished setting, and where there should have been a night sky, a light was growing, white and powerful. It was coming from where Darian had gone.\n\n\"What's going on?\"\n\nSophia's voice. Otrera looked over her shoulder to the woman, and the oncoming crowd behind her. She looked terrified. Understandable, given they'd only just obtained their freedom, and the death screams filling the air sounded like something come to take it away.\n\n\"We don't know... it... Darian!\" Shit. Shit shit shit. The mask. She hadn't told him about the mask. When she'd retrieved it, it hadn't said a word, and after what happened to Medusa, she didn't want to bring it up. Better everyone just not know the mask could talk. Better that no one knew a Fate's Child could wear it.\n\nStupid stupid stupid.\n\n\"He... he didn't... Everyone, wait here.\" Sighing, wincing, Otrera sheathed her sword, put her shield on her back, and started walking toward the growing white light in the distance.\n\n\"Wait!\" Sophia came up behind her, and grabbed her wrist. \"Wait, what's going on? Where's Bellerophontes? What's that sound?\"\n\nTritus and his friends, even Hieremias came closer, and Rhea too. The crowd grew, and they all looked afraid.\n\n\"It's... just... just wait here. I'll go settle this.\" But she didn't get far before Pegasus was beside her. \"You really should stay here Pegasus, he\u2014\"\n\nThe horse swung his head and hit her in the side hard enough to knock her back a few feet. She blinked at the horse, and Pegasus stepped in closer, stomping his hooves.\n\n\"... alright, let's go.\"\n\n\"We're coming too.\"\n\nOtrera raised a brow at the two satyrs. Oh gods everyone was coming. Friends to the rescue? The death screams in the background destroyed any possibility of a chuckle.\n\n\"Fine. Everyone else, stay here, watch over Chimera. We'll go deal with this. We're not about to let shit go to Tartarus after all the lives lost to free the city,\" she said. The collective sigh of the crowd made her smile, and she offered them a nod and dismissing wave. They'd started looking at her differently since the battle, and more like her sisters did during her queenly years.\n\nThe thought made her a little sick to her stomach. A few days ago, she said she was ready to let the whole city die, for all she cared. And now she was going out of her way to help them again, even console them. Guess you just can't get away from who you are, Otrera.\n\nShe nodded at Pinna and Gallea, and started walking. Why didn't she say anything? Why didn't she tell anyone? That voice, rasp and ice buried, it cut through her when it spoke, and she'd never forget it. Stupid idea, to hope it wouldn't be an issue.\n\nLightning cracked the sky, and thunder ripped through the earth a moment later. Close enough, loud enough, it was like the battle on the mountain, and the lightning that marked Andromeda's summoning. It stopped Otrera in her tracks, and when the thunder rolled under her, she made a little jump.\n\nThe screaming only grew louder.\n\nShe gulped, and pressed on. The light ahead was on the road, still a ways away, but as they came closer, the light got brighter. The trees cast black shadows, the wind picked up until branches cracked against each other, and clouds of dirt caught in the wind ran over her feet. The closer they got, the more it turned into a windstorm, and the three of them had to raise an arm to block their eyes from the dirt. Poor Pegasus had no such option, and he lowered his head to keep it behind Gallea's back.\n\nShe wasn't sure what she was doing. She wanted to get to Darian, help him, and she had no idea why. The fuck happened to have her doing this, marching toward what was clearly a choir of death screams? She got what she wanted, revenge against Andromeda. And more besides that, she got a lover and some respect from a city too. Done. She was done.\n\nWell, if that was true, she wouldn't be walking toward the man who'd killed her, hoping to help him.\n\nAs they rounded the next turn in the road, they all stopped, and stared at the sight before them. Darian was on his knees, but leaning back with his arms dangling at his sides, face pointed up.\n\nHe was wearing the mask, and the death screams were coming from him. Glowing white surged from the mask, its eyes and mouth, and poured over the nearby trees.\n\n\"Shit! Shit, we have to get that off of him!\" Otrera ran forward, but an explosion of wind sent her flying backward, rolling over herself. Again lightning cracked, and struck the mask with an ear-splitting explosion of sound that had all of them on their knees, holding their ears with their hands.\n\nThe light coming from Darian's eyes, the masks eyes, erupted. A blazing wave of light cut through the sky, and what signs of night there once was vanished as the forest was bathed in light.\n\n\"You won't have me!\"\n\nDarian's voice, cut and mixed with banshee screams. His body wasn't moving, except for the occasional twitch of his muscles. Through the chaos, through lightning strikes that hit his mask, through the explosions of sound and thunder and wind, even as a crater started to grow around Darian's body, he didn't move. There were no clouds above, no rain, nothing to allow lightning to come from on high. And when Otrera, still on her stomach from getting flipped over, forced herself to watch with squinted eyes, she saw the lightning strike up and out from the mask, not to it.\n\nPinna and Gallea were hidden behind trees, far as she could tell, and Pegasus was low to the ground and doing his best to not get knocked over by the random blasts of wind. Any moment now, she expected people from the city to come rushing up the road and make things worse, but none came. They listened to her, thankfully.\n\nThe four of them stared at Darian, eyes wide, tears in their eyes from the cutting winds. What was happening? He put on the mask. He said 'you won't have me.' She slapped herself in the forehead. This was all her fault. Gods damn it.\n\nFingers against the dirt, she started to crawl forward. More lightning struck out from the mask, up against the sky where it tore the darkness in half, then spread out like veins. Another strike snapped out against the tallest trees, splitting one of them down to the trunk. White fire erupted, splashed over the nearby trees and road, and faded away. But the exploding bits of bark and nearby rocks forced Otrera to cover her face, and she winced as they dug into her arm.\n\nThe wind was only getting worse, and so were Darian's screams.\n\n\"What's going on?\" Gallea said. The little man was hiding behind a tree near his wife, a big one, as smaller trees were starting to bend and crack with the onslaught.\n\n\"I don't know! The mask has something inside it! Darian must have\u2014\" Otrera's jaw dropped as Pinna vanished. The satyr adjusted her horns a bit \u2014 or something near her horns Otrera couldn't see \u2014 and then went poof. Mental note: ask her about that later, and don't be nice.\n\nPegasus started to push forward. Otrera tried, digging at the ground, but every attempt to get up was met with tearing winds that cut her skin with rock and dirt. And the horse was getting cut too. He folded his wings tight to his body, including the damaged one, and pushed forward. Progress was slow, as each step was met with a powerful gust that pushed him back, but he kept at it. Step after step, the horse started to bleed across his shoulders, his back, and all along his white fur the crimson started to trickle and smear as Pegasus pushed himself toward the growing crater.\n\nLightning struck the sky, the trees, rained white fire onto them. If things got worse, they'd have a true forest fire on their hands. Thunder mixed with the shattering of rocks and splitting of trees, and the host of explosive noises joined Darian's cry.\n\n\"I won't let you!\" Darian's voice again, and each syllable shook the ground around them.\n\nBut Pegasus didn't stop. He pushed through the windstorm and the banshee screams, pushed through the flying rocks and shaking ground, and collapsed onto his knees against Darian.\n\nThe horse lay there, his neck against Darian's chest, and his wings forced away and open by the tide of unending force. Otrera tried to get closer, maybe use Pegasus as a barrier between her and Darian, but the energy pouring out of him had other ideas. Every attempt to get closer to him ended in failure, and she could see Pegasus getting torn apart.\n\nA final lightning crack shot up into the sky, loud enough to deafen Otrera. Her ears, ringing and aching, searched for other sounds, but found none. The wind died down, the lightning stopped, and the skin-splitting rocks ceased. She looked around, to Gallea, to Pegasus still sitting against Darian, and tapped herself on the ear. Ears still ringing, but they worked, and she got to her feet.\n\nNo more lightning, thank the gods. She looked up at the trees around them, and many of them were cracked and split. The crater around Darian had grown, wide and deep, with fissues spreading out into the nearby earth, into the woods, and further down the road.\n\nGroaning, Otrera got up and walked toward the two of them. But as she grew near, she smiled as the ringing in her ears faded, and was replaced with a gentle murmur.\n\n\"I'm... I'm ok,\" Darian said, and his hand stroked Pegasus's bloodied mane. \"I'm... I'm in control.\"\n\nShe'd heard that before. But, he did sound normal... ish. His voice, while Darian's once more, also carried a bit of echo and depth that made him sound large. And for a moment, looking down at the kneeling man, she thought of Chimera and his booming voice.\n\n\"You ok?\" she said, and hopped into the crater. \"You \u2014 oh! You're...\" Darian was still wearing the mask, and the small hooks on its edges were digging into his flesh. But no blood. A small, consistent glow of white came from his eyes, and when he spoke, white light came from his mouth. When he didn't speak, she couldn't see his lips through the mask, only an endless void.\n\n\"I'm fine. I... oh.\" He looked around, at the crater now some twenty feet wide, the cracked trees, some of them burning. He looked down at himself, the horse still leaning against him, the two of them on their knees, and the chaos of destruction the mask had caused. \"I could feel your warmth,\" he said, and he stroked Pegasus's mane. \"Thank you Pegasus. Thank... thank you. Moros, he\u2014\"\n\n\"Moros?\" Otrera jumped back, and stared at the masked man before her. \"Moros is in the mask? The Moros?\"\n\nDarian nodded, and stood up. Pegasus tried to stand as well, but a flurry of little cuts and along his fur, face, and wings had rendered him a bloody heap. Otrera and Darian both got underneath him and tried to help prop him up, but a horse wasn't an easy thing to carry.\n\nBut Pegasus pushed through it. He shook his head, drove his hooves into the ground, and got up. Wavering, bleeding, but up.\n\nDarian patted the white horse on the neck. He leaned in, but pulled away; probably realized he was wearing a mask.\n\n\"We'll get you back to the city. They'll treat your wounds. I had no idea what was going on outside, until... until your stubborn ass.\" Chuckling, the Fate's Child looked Otrera's way. \"You too?\"\n\n\"Yeah... me too.\" She shrugged. \"We heard a shit load of screaming, came running.\"\n\nHe looked around, eyes a consistent glow, breathing slow, and deep. Wearing his Fate-gifted armor, it was a perfect match for the black mask, and Otrera found herself unable to look away from him as he scanned the area. The mask was terrifying. \n\nHe shot out his arm, and grabbed something. Nothing there, just the air, but his hand squeezed around something anyway, and drew it near.\n\n\"Pinna,\" he said, \"you... oh. I see.\" His other hand reached out, and if he truly was holding Pinna and not just going insane, he grabbed where her horns would be.\n\nPinna turned visible, eyes so wide she looked like she was about to die of fright. Her hands held Darian by the wrist, and she struggled and kicked. But Otrera could see from how Darian was holding the now suddenly visible satyr that he wasn't choking her.\n\n\"What... what are you...\"\n\nIn his other hand, a cap appeared. Small skulls, no bigger than a fingernail, dangled from the edges of the black leather, and gold lines swirled across it in patterns not dissimilar to Darian's mask. He held it to the side, and looked at it through the glowing white eyes of his mask.\n\nThe mask's eyes glowed white, surged with light in a blinding flash, and the cap erupted into white fire. Otrera jumped away, and blinked down at the bits of burning leather.\n\n\"What was that?\" she said.\n\nDarian emitted a slow, deep rumble, a sound he should not have been able to make, and looked back to Pinna. She was still struggling to escape, and as Darian's other hand reached for her neck, she really started to panic.\n\n\"No! Don't! I\u2014\"\n\nWith a flick of his finger, Darian yanked something from her neck. Otrera heard it snap, and she stepped closer as a tiny thread became visible on Darian's fingertips, dangling. And then it too burned away in a snap of white fire.\n\nHe let go of Pinna's throat, and the little satyr fell away. She was shaking, and staring at Darian's fingers where the thread had been.\n\n\"You... you... I can't... I don't understand.\"\n\nDarian redirected the hand toward Gallea, and pointed at him. \"Come here. Now.\" Again, the deep rumble of his voice came from the glowing white of the mask's mouth.\n\nGallea, gulping so loud Otrera could hear it, hopped over to stand by his wife. Darian reached out, plucked something hidden from the satyr's neck, and as it snapped, the tiny thread flickered visible for only a moment before Darian incinerated it too.\n\n\"You are both free of the Fates. Do... do whatever you want.\"\n\nGallea fell down to his knees next to his wife, grabbed her hand, and stared up at Darian. \"You're... Moros?\"\n\nDarian shook his head, and patted Pegasus's neck when the horse nudged against him. \"You, stay here. Whatever Moros did, this place, you, look like you've been torn apart. I said stay here, now stay here with the people.\" He knelt down in front of Gallea, close, mask only a couple feet from the two satyrs' trembling faces. \"Gallea, I have a favor to ask.\"\n\n\"A-anything! You freed us, I... can't believe you freed us. If I can do it, I\u2014\"\n\n\"Summon Charon's ship, and once I've boarded, send it to the underworld.\"\n\n\"W-what? Why!? You don't want to go there Bell \u2014 Darian! The living can't go there! You'll be\u2014\"\n\n\"Let me worry about me, Gallea.\"\n\nPinna leaned in. \"But why? Why are you going there?\"\n\nDarian stood up, looked to the sky with his mask-covered face, and took a deep breath.\n\n\"I'm getting Medusa back.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ship obeyed Gallea's pan flute, and slowly but surely, emerged from the water. Huge, and with the veil that hid it gone, visible for all to see.\n\nAnd all was everyone. Much as Otrera had tried to insist the city people stay in the damn city, many of them had come down to the shore to see what was going on. A lot of them gasped when they saw Darian wearing the mask, and a lot more gasped when they saw what had happened to Pegasus. Poor horse was covered in a thousand cuts, many hidden in his coat. It'd take a lot of people to get him back to the city, and sit him next to Chimera. At least a horse's flesh wounds were easy to care for, compared to the giant.\n\nDarian had nearly killed his companion. Not Darian, Moros. Moros was inside the mask. The Moros. Otrera glanced Darian's way as they waited on the shore for the ship to arrive, and felt another shiver go up her spine. It happened every time she looked at the man, and the mask he wore. He was wearing the mask of Moros, the all-destroying Moirai, the bringer of death and ultimate end to everything. Bringer of doom.\n\nAnd yet, he was in control. Darian stood there, arms folded across his chest, patient, calm, while Charon's ship approached. Without its veil up, the people on the shore got to watch the mighty, massive ship near, and once it was as close as it could safely, a small boat rose from under the water next to it. The undead upon it, with their green glowing eyes, were visible to everyone, including the dangling green lanterns.\n\n\"The undead!\" Sophia said.\n\nGallea nodded, and squatted down by a fire they'd built on the shore. Middle of the night, after all.\n\n\"Charon's ship is how we got around Greece without people seeing us. And... I guess it's how Darian wants to get to the underworld.\"\n\nEvery damn time Gallea said the U word, the crowd gasped. Otrera rolled her eyes, but joke as she might to herself, going to the underworld was giving her just as much a chill as knowing she was doing it with Moros. And she was going, no matter what Darian might say.\n\n\"Bellerophontes, I... I feel I should apologize, about Patrius, I\u2014\" Tritus stopped when Darian raised a hand.\n\n\"You didn't know. He didn't even know. Just... just remember what happened truthfully, will you? Remember that Medusa gave everything to save a woman she didn't even know, and Athena killed her for... for nothing.\" The masked man lowered his head, and let out a long, slow sigh. When he did, white mist escaped from the mask's mouth before fading into the air. \"Think twice, before you mindlessly obey a god. They're not what you think they are.\"\n\nNot what they think. Otrera shivered again, and ran her hands along the white bow. No reason to not take it after all. She even had Perseus's sword \u2014 not the shield though. That thing was ridiculously massive, and while she could lift it, she couldn't wield it with her height. She'd brought Darian's shield instead. But where they were going, she doubted the magical weapons would do shit.\n\n\"You... want us to betray Athena?\" Sophia said, and she stepped up next to Tritus.\n\n\"I want you to use your damn heads.\" Darian turned around, and swept out his hand. A gush of wind poured out of his arm, crashed into the crowd, knocked many of them over, and silenced the crickets once more. The masked man sighed, bellowing voice coming out softer as the area grew still again while the crowd got back to their feet. \"I want you to stop being sheep. Use your heads. Think for yourselves. That's it.\" And like that, he turned around, and jumped up onto the small boat with the undead.\n\nOtrera jumped in after him.\n\n\"You really want to do this?\" Darian said.\n\n\"I... no, not really. And yet here I am.\" She shook her head, buried her face in her palm for a bit, and sat down near one of the mindless skeletons. \"Not sure why. Cause I'm a dumbass. Feel like I owe Medusa, maybe. Feel like... seeing this through, mostly.\" \n\n\"I can't guarantee your survival,\" he said, and he looked down to his hands, opened and closed them in front of himself, as if seeing his hands for the first time. \"I... I can feel it, Otrera.\"\n\n\"Feel what?\"\n\n\"... something greater than death, in my fingertips.\"\n\nShe gulped. Lot of that going around, gulping.\n\n\"... Darian, I\u2014\"\n\n\"I'm sorry, Otrera.\"\n\nShe blinked. His voice was heavy, and it wasn't the mask and the unnatural weight it gave his voice. No, his voice had a weight of its own, and he looked down over the edge of the boat as he talked.\n\n\"For what?\"\n\n\"For\u2014\"\n\n\"All set?\" Gallea hopped down the shore, wife beside him, and the two satyrs leaned over the edge of the small boat. \"They have their instructions. They'll take you to the gates of the underworld. But once you're on the river Styx, it'll...\"\n\nPinna reached out for Otrera's hand, and squeezed. \"It'll be dangerous for even a Fate's Child. The things there... the Erinyes alone will be unstoppable, and then there's Cerberus, and Charon himself, and\u2014\"\n\nDarian waved his hand, and discarded their worries. To dismiss the greatest fears of all humankind so easily made the satyrs blink and look to Otrera. But all she could do was shrug.",
        "\"Alright then, I guess... we um...\" Gallea scratched his head, his horns, and looked around. \"You freed us, Darian.\"\n\n\"We owe you everything.\" Pinna hopped a little in place, big smile on her face, hand on her husband's wrist where it rested on the boat. \"We couldn't tell you about the thread, or they'd know. And... and now, we can go wherever we want, do whatever we want, and they can't stop us!\"\n\n\"Not unless you do something to become indebted to them once more.\" Darian nodded, and tapped his finger on the edge of the other side of the boat, where he stared into the water. \"Stay out of trouble then, at least for a while, and... watch over Medusa's body while I'm gone. I'll need it.\"\n\nGallea and Pinna nodded, and the wife had a big smile on her face. \"You really going to Hades to get back Medusa's soul?\"\n\n\"Yes. And if someone tries to stop me... anyone... anything...\" Again he looked at his hands, and he squeezed the air while staring into his palms through the white, glowing eyes of his mask.\n\nThe boat started to move. Sophia, Tritus, and the satyrs waved from the shore, and so too did others. Rhea, Hieremias, Tritus's two companions, and many of the people who were near the front lines during the battle. Those that had survived the sea creature's attack through sheer luck. They waved goodbye, and some even had tears in their eyes.\n\nDarian turned to them, and gave a small wave in return.\n\nBefore long, it was just the two of them, waiting for the slow boat to reach Charon's ship.\n\n\"You were saying?\" Otrera said.\n\n\"Yes. I wanted to apologize for many things. But mostly, I wanted to apologize for when we fought during the war.\"\n\n\"You already\u2014\"\n\n\"No... no, I apologized before, but it... rang hollow. It didn't sink it, didn't really mean anything. Just words. But now, I... I remember them, Otrera. I remember the faces of your sisters as we fought.\"\n\n\"You didn't before?\" She got up from her spot near a skeleton, and came to sit beside him at the bow of the ship.\n\n\"No. Once they were dead, they were just meat, just a corpse.\" Again he squeezed the air in his lap, both palms toward him, and his fingers moved as if... as if combing hair. \"Now I... it's...\"\n\nNot a word to say, she watched the man who destroyed her world confess his remorse to her. But he was right, it wasn't the same, and she found some tears working their way into her eyes again. His voice grabbed her, cut into her, and dug up all the memories. Memories of her sisters, of her time as queen of her tribe, they tore her apart until she was sobbing again.\n\n\"I'm sorry,\" she said, \"I... I don't know what's wrong with me. Been crying on and off all day.\" She wiped her tears away, but more joined them, and she lowered her head to let her hair fall over her face.\n\nDarian turned around, and hugged her.\n\nShe froze, blinking, staring past him at the vessel they approached. He was hugging her. The mindless, rabid dog, was hugging her. Not only that, her old enemy was shaking too, the tiny little shakes you got when holding back your own tears.\n\n\"I never knew,\" he said, \"what it was like. I just... I didn't know. For you to... after everything I've done to you, to help me? I...\"\n\n\"Good gods, Darian, what happened to you when you put on the mask?\" She tried to laugh it off, and smile when she pushed him away a little so they could look at each other, but laughs turned into more sobs. She was really getting sick of crying, but it kept happening.\n\n\"It wasn't Moros. He challenged me. He didn't know what it was like... inside...\" The man held a hand to his chest, and pressed his fingers against his breastplate. \"The creature is just a parasite, feeding on humans, feeding on our emotions, our souls. He didn't know what it meant to get inside... a mind like mine.\"\n\n\"But you said\u2014\"\n\n\"It was Medusa. Moros just made me see... what Medusa...\" He took a long deep breath, a few more again, and as the boat pressed to the side of the large vessel, he started climbing the rope ladder up. \"I have to get her back.\"\n\n\"Yeah.\" She nodded, following after him, and hopped up onto the deck of the ship. No one around, nothing, just a big, huge, empty deck, and a bunch of rowing dead underneath them beneath the wood. \"Airhead needs saving, and I can't let her rot in Tartarus.\"\n\n\"Airhead?\"\n\n\"Ah... one of my sisters used to say that about... ah nevermind.\" A real smile broke through her tears, and she wiped the last of them away as she approached the bow of the much, much, much bigger boat. \"So, um... you have the power of Moros?\"\n\n\"It would appear.\" He came up to join her, and the two of them looked over the water as the giant vessel started to move. \"Moros is trapped. I can feel that worm, so called 'entity of doom' fighting to escape. Like ants biting at my toes.\"\n\n\"Sounds horrible.\"\n\nHe breathed deep, squeezed his hands, and looked to the water. \"He said the plan... that it was for you. You were supposed to be his chosen vessel. You're not damaged.\"\n\n\"He... what?\" She winced, and looked out to the water. Darian wasn't normal, she knew that. If Moros had planned to take her over, would she have been able to defeat Moros?\n\nNo. Darian was... different was too weak a word for what was different about him. Killed his brother, beat him to death, when he was only a kid? And that was only the most identifying mark on the man. Andromeda had told her many things about what Darian had done. Part of the reason she got nervous whenever she looked his way. Rabid dog.\n\nNot so rabid anymore.\n\nAs Darian explained Moros's plan, how he manipulated Andromeda, tried to obtain a vessel, she held up her hands.\n\n\"Wait wait. Why didn't he just create a Fate's Child from a regular human?\"\n\n\"I'm guessing only Clotho can do that, normally, or maybe because the other Moirai sort of trapped him. I don't think Moros gets along well with his sisters. Moros must have tricked Andromeda into creating you with the ritual and sacrifices, so he could... use you...\"\n\nShe shivered and rubbed her arms. \"She must have been tortured by the dreams he gave her. You think they were real? That her fate was real?\"\n\n\"Maybe... maybe. But it doesn't matter. I wear the mask, and I am going to tear the underworld apart, piece by piece, to free Medusa.\"\n\nThe vessel pointed down, and submerged.\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~Darian~~\n\nThe dark water rushed up to meet them. Otrera jumped back with a yelp, and Darian held out his hands. Didn't expect their new journey to start with them drowning.\n\nBut as the water poured over them, they didn't. He stared through the eyes of the mask, and readied himself to be lifted off the boat, but it never came. He looked down at his sandals; still rooted to the deck of the ship. He looked at Otrera, but her eyes were up and looking around at the new insanity that greeted them.\n\nThe water flowed over them, around them, but it did not affect them. He moved his hands through it, but it was as if the water wasn't there at all. Or he wasn't. The ship went deeper, cutting through the sea surface and waves, burying them in the darkness of water and the endless depths.\n\nGreen started to sparkle around them. Lanterns made of bone started to light themselves at various postings of the ship, a large one in particular at the nose. The green light offered little more than their ability to see the ship's deck; whatever lay beyond the blanket of darkness around the vessel was hidden.\n\nBut they could hear it. As they got deeper, and deeper into the black of the sea, rumbles, groans, started to fill the water and their bodies. Shadows against the green light, shadows so large they defied reality \u2014 not, not anymore, not after the sea creature. And Darian breathed deep as the black around them blurred with shapes and movements of things as large as the ship they rode.\n\n\"We're... in the sea,\" Otrera said. \"In it. Not on it. In it.\"\n\n\"I wondered how the ship would take us there, Gallea knew it could. I guess he and Pinna have taken this trip before.\"\n\n\"Those two, slaves of the Fates, but you freed them. Snapped your fingers and undid the work of the three sisters.\" Otrera put a hand on the railing and leaned out into the water. Things moved past them, things with long tendrils, things that lacked bodies. \"Thought you hated those two.\"\n\n\"I... I was just paranoid. Couldn't imagine anyone was telling me the truth about anything anymore.\" Darian stepped up to join her at the bow, and leaned over the other railing by the nose of the ship. The white glow of his eyes struck against the water, but managed only maybe ten feet before the denseness of the black around them blocked the light.\n\n\"Understandable.\" She reached out and touched his arm. \"And... well you should know, this is the first time I've felt like... talking with you was like talking to a human. Strange, right? You've got that mask on and everything.\"\n\nThey both laughed, and he reached up to run his fingers down the obsidian mask stuck to his face. He could feel him, Moros, crashing against the walls inside him. But the mask was the body of the entity, and it was Darian's now. Every breath, every glance, everything carried an edge of possibility to it it never did before. He could feel it in his breath, feel it in his fingertips.\n\nNo matter what it was, no matter who or where or why, if he wanted to destroy it, he could. What would Moros had done if he'd wandered the world wearing Darian's body, instead of the other way around?\n\n\"I... have to get her back.\" The only reason Otrera was talking to someone human now, was Medusa.\n\n\"I wanted to ask about that.\" Otrera came closer, put a hand on his shoulder, and turned him to face. She'd grown comfortable touching him. It was a nice change. \"You're going to save Medusa. What about others?\"\n\n\"I... I'm saving Medusa because she's being sent to Tartarus. Athena rigged the game, and I'm fixing it.\"\n\n\"So if Medusa was going to Elysium, you'd let her be?\"\n\nHe winced, and his gaze drifted down. \"I don't know. I like to think so? If she'd be happy, if she'd... if I could... If she was in Elysium, then with the power of this mask, I'd join her. But she's not. She deserves to be, but she's not. I have to do something.\" Dodged the question. If he had no way to join her, would he pull her out of Elysium to be with him? Athena killing her was unfair, but life was unfair. Why should Medusa get special treatment?\n\nThe Amazon nodded, and squeezed his hand. \"I get that. Just... I know if I was you, and I was suddenly given the power of Moros himself, I'd be sorely tempted to do a lot of things. Destroy the underworld? Take on the gods and Fates?\" Her gaze fell away as well, and her fingers tightened on his. \"And I know if I saw my sisters there, I'd be tempted to pull them out of the underworld, to try and somehow find bodies for them, to... do anything I could to have them back.\"\n\nHe squeezed her hand in return. \"Another reason I'm glad to have you with me, Otrera. Need someone to keep me from... ruining everything. No matter what we see, I... I could... ruin everything, for everyone, just to have her back. And Medusa... she\u2014\"\n\n\"She'd never speak to you again, if you broke the world.\" \n\nIf you broke the world. Darian looked at his free hand, and rubbed his fingertips together. It felt like he could.\n\n\"If you see me about to, make sure to stab me in the back.\"\n\nShe laughed. \"Will do.\" But, she didn't let go of his hand, and she offered it another squeeze as she looked back at him. \"I do kind of hope I can at least see my sisters again.\"\n\n\"I... don't want to go down that road. I don't want to see all the people I've...\"\n\nThe two turned to face the bow of the ship once more, holding hands. Otrera squeezed his fingers every so often, and glanced his way. He did as well. He tried to look confident, courageous, unstoppable, and with the mask blocking his face from view, he felt like it should have been easy. He was the harbinger of doom, after all.\n\nBut he was going into the underworld. The gods and Fates, the monstrous creatures, none of that worried him. Seeing the face of his brother, of his kills, of the people he'd let die, of Patrius? Chilled him to the bone.\n\nThe darkness ahead started to peel away as green dots looming in the distance grew larger and larger. It took time for the ship to get deep, an hour of its constant descent, and the things in the water grew thicker, larger, and more grotesque. At first it was just bits of dirt floating by, but soon it was the creatures floating by that ate them. Things that could be seen through, things that glowed, thing with ribs on their outsides, and things with parts dragging along behind them that looked like entrails.\n\nThe depths of the sea were not a pleasant place. But it all started to fade away, and the water grew clear once more as they approached the green lights. The blackness melted, and soon the two of them were buried in the light of tremendous, hanging braziers, lit with green fire. Pillars made of bone, enormous bones, shaped like ribs but taller than any temple lined a path along the sea. When Darian looked over the edge, he frowned at the sight beneath them: more bones, and nothing but bones, covered the sea floor. Human bones.\n\nThe ship moved between the giant bone pillars of white, and forward along the path laid out, not dissimilar to a snake's ribs protruding from the sea floor, if the snake were the size of a large island. Lower they fell, until all that was ahead was the path of giant ribs, dangling green fires, and red. Where the bones came out of the sea bottom, the endless floor of human bone, crimson liquid started to join the dead. The red kept to the bone path instead of spreading out into the water, and as the path of giant ribs went on, the red became a river.\n\nWith the gigantic green fires lighting the path ahead, they could see far. And yet, all they could see was the unending river of red, with the colossal rib bones acting as their guide.\n\n\"I guess this is Styx,\" Otrera said.\n\nThey weren't underwater anymore, or at least it didn't seem like it. Now they were riding a river, and as Charon's ship descended from the air into the stream of crimson, it sailed upon it. As if the water around them had ceased to exist, and instead, the ship was floating upon the river Styx. Under the sea, and yet not. The realm of the dead.\n\nOtrera squeezed his hand tighter when wailing cries started to emerge from the silence. They both looked over the railing, and drew back with a wince.\n\nBodies in the river, corpses. But not dead. With open mouths gargling on blood and crying out, corpses around the ship clawed at the wood as they drifted along the red river.\n\n\"Help us!\"\n\n\"Save us!\"\n\n\"Please, help us!\"\n\nOtrera squeezed Darian's hand again. \"What... what's going on?\"\n\n\"I imagine Charon felt these souls... deserve this.\"\n\n\"Gods. For how long? Should we he\u2014\"\n\n\"No. Otrera, we can't... we can't.\"\n\n\"I know! I know.\" The Amazon didn't sound so sure though. He looked her way, and the doubt was palpable. She glanced over the edge of the ship several more times, and winced openly with each crying wail the river of the dead made.\n\nIt went on, and on. The dead were no in rush to get anywhere, Darian supposed, but hearing the mournful wails, pained screams, the begging voices, started to wear on him. His other hand squeezed the ship railing tighter, until the wood started to bend with his grip. They'd only just arrived, and the sights of Hades were getting to them.\n\nWhile the air \u2014 or sea water \u2014 around them had become clear, the boundless sky above them was still black. Endless, constant black, without a star to be found, blocked by the sea above. The only light was the green fire of the lanterns on their ship, and the enormous braziers of green fire hanging from the bone pillars the vessel took them past. The amount of dead that clawed at the ship grew larger, but they couldn't get a grip, and the boat pushed through the river of red without slowing. He could hear the sound of the boat crushing bodies as it moved.\n\nAhead, another gigantic bone lay in their path, but this one was smooth, like a dome. As they approached, Otrera drew back a step at the sight of a human skull, stained red with cracked veins, blocking their path. It was as large as the ship, and the glow of the green lanterns cast titanic shadows across the crimson river.\n\nAs the boat drew near the giant skull, a hand fit to match its size forced its way out of the river of corpses. A hand as big as the sea creature's Medusa had killed. Bloody bones gripped the pillars of the river, and pulled against them to drag more of the skeleton up from the bodies that buried it. There should have been an earthquake, or vibrations, or something to match the movements of the enormous undead, but only the sound of crunching bodies was found. Blood dripped off its ribs, bodies fell and cracked against it as more of it's mass forced its way above the red, until the skeleton loomed over them.\n\nIt only managed to pull itself halfway up its ribcage before the skeleton ceased its ascent from the depths of the river, and it leaned in closer to them. Its eyes glowed with the same green of the undead that served on Charon's ship, and it moved with the same lifelessness.\n\n\"... Moros,\" it said. A dead voice, devoid of tone or depth. Instead, a rasp of a great wind mixed with banshee wails fell over them. The skull, with teeth bigger than Darian's whole body, came closer as it leaned over them. \"You... you stole my ship? You dare... The sisters will lock you away once again, and you will not see the soul rivers for ten thousand years.\" The ship stopped moving as the colossal entity moved near. Slaves to their master's will no doubt, the skeletons underneath Darian's feet had stopped rowing.\n\nOtrera had inched herself a little back, and a little closer to Darian, so his shoulder was between her and the skull the size of the enormous ship, let alone the rest of his body.\n\n\"You are Charon,\" Darian said.\n\n\"You... you are not Moros? Lachesis asked for a ship, for the next tale, for...\" The skeleton leaned in closer, and as the rain of blood dripped from its bones, several bodies from the river fell as well. The denizens of the river melted into blood upon landing on the deck, and they screamed as they did. \"You are Bellerophontes.\"\n\nThe skeleton squeezed the bone pillar, shifted its weight to adjust, and got closer to the boat's side. Each motion, colossal in scale, forced the river to move with him, for the bodies and blood to splash against the boat, and for the Amazon next to Darian to tremble; he did not blame her. Each word was a booming wind that hurt his ears, and the mix of rasp and wailing sounds in the voice put goosebumps on his skin. This is what ghost stories were made of. \n\nBut he wasn't afraid.\n\n\"Get out of my way, Charon.\"\n\n\"Ha!\" Charon leaned back, and coughed a death cry of a laugh into the endless black above. \"Truly, if the seat of Moros has been taken by a Fate's Child, then chaos reigns. Tell me, Fate's Children, why are you here?\"\n\n\"Athena has wrongfully killed, and wrongfully manipulated Medusa's soul to Tartarus. I have come to return her.\"\n\nCharon nodded, and rubbed his chin with his fingers. The motions were slow, his size making everything a laborious action.\n\n\"Yes, Athena was here. Medusa did not take one of my vessels, but instead, Athena took her soul herself.\"\n\nOtrera reached out with a shivering hand, grabbed Darian's shoulder, and inched herself forward until she was standing next to him again. \"Why?\"\n\n\"Why what, Fate's Child?\"\n\n\"Why... does Athena hate Medusa so much?\"\n\nThe river turned, shifted, and the bodies within cried out as they were lifted into the air. Another one of the skeleton's arms rose from the depths of crimson, and reached out to hold onto one of the pillars. If Charon tried, could he actually stand up? Darian looked around from the pillars, to his hands, to his skull, and at the splashing rivers of blood that crashed against the bone. Only his arms, his skull, and a portion of his torso had emerged, and he already dwarfed their enormous ship five times over.",
        "\"I am but a humble servant, Fate's Child. If you wish for answers, then ask Athena herself.\"\n\n\"Then you'll let us pass?\" she said.\n\nSlowly, Charon shook his head. \"No. You are not welcome here, Fate's Children. Only the dead, or beings of the soul rivers may enter. Your audacity and arrogance intrigues me, but you will not enter the underworld.\"\n\nDarian stepped forward toward the skull towering over him, and relaxed his arms at his sides.\n\n\"Then stop me.\"\n\nCharon looked down at him, the green glow of his skull eyes pouring over the deck until the little green lanterns their vessel sported may as well have not existed.\n\n\"You dare, Bellerophontes? You are\u2014\"\n\n\"Get out... of my way, Charon.\"\n\nThe undead released a slow breath. Odd for a skeleton, but it rumbled its displeasure nonetheless, and its rotten breath flowed over the two of them until Otrera started coughing.\n\n\"You risk the wrath of beings beyond your understanding, Fate's Child.\"\n\nDarian grit his teeth and tightened his hands into fists. \"Let the ship pass.\"\n\n\"... how much are you willing to sacrifice to bring back your loved one, Bellerophontes?\"\n\n\"You try my patience.\" Darian stepped toward the giant skull hovering near him, and it recoiled as he raised a hand. \"Athena has brought this upon you all. And if I have to destroy you, her, and the gates of the underworld to set things right, so be it.\"\n\nCharon lowered his head, and pulled away to look down upon them from further. \"You may find it comes to that, Fate's Child. Beware the power your wield, or you will bring doom upon us all. It is Moros's way. Worlds have fallen to him, and left the Moirai and the gods starving.\"\n\n\"Starving?\"\n\nCharon shook his head, let go of the pillars that supported his enormous size, and started to sink into the river of blood and corpses.\n\n\"I pray Moros's avatar is not the bringer of yet... another... apocalypse.\"\n\nOtrera and Darian both stepped toward the railing, and looked down at the river Styx as Charon sank into its depths once more. Slowly, the massive skeleton disappeared under the bodies, giant fingers drifting underneath and dragging the crying dead down with him.\n\n\"Is it just me,\" Otrera said, \"or... did he just suggest... there's been a world before ours? And that, umm... Moros destroyed it?\"\n\n\"He also said it left them starving.\"\n\n\"Yeah, why would Charon tell you that? Why would he give you that information?\"\n\nDarian took a deep breath and leaned out over the bow of the ship once more. \"Guessing he hopes I'll show mercy.\"\n\n\"Oh...\"\n\nMercy, for the gods. Mercy for Zeus, for casting him down. Mercy for the other Moirai for manipulating him. Mercy for Poseidon, for raping Medusa. Mercy for Athena, for ruining her life and her death.\n\nHe looked down at his hand again, and squeezed the fist before opening it. Mercy was in short supply.\n\nThe ship pressed on, down the river Styx, and the two Fate's Children looked to the bone pillars that lined it. The wailing cry of the endless corpses became white noise, the background of their journey. And as they grew closer to shining lights ahead, the cries of the river started to fade away.\n\n\"Be careful,\" the Amazon said at last. \"I know you want revenge, but killing a god, killing the Fates? You might\u2014\"\n\n\"Start something catastrophic.\" He nodded, and reached up to touch the mask hooked to his flesh. \"I know.\"\n\nAhead, the river of blood beneath them turned to blackness. No more corpses, no more blood, instead, a deep glow of blue, purple, navy, and red mixed together in flowing streaks. Like drops of oil in water. Darian looked down, and squeezed the railing tighter. Faces in the river.\n\nBefore them, the massive gates awaited. The endless black above and around became walls of solid rock, black, with dangling lanterns of bone. A running motif in the underworld, except these bore blue flames, some maroon, some red. But by far, oppressing navy washed away the green lights of their ship as the river took them between canyons of rock. A cave, size beyond understanding surrounded them, with jagged onyx jutting out of the black water.\n\nThe faces in the dark liquid had closed eyes, and they were drifting into the gate of Hades. The faces rose up above them, around them, bled into the colors, and the colors flowed with the non-existent wind. Like wisps of dandelions, the faces swirled around in the air, for miles and miles, until they poured down and into the gates before the two of them.\n\nThe gates of the underworld. Tall, metal, tipped with sharp barbs, and bars as thick as temple pillars. The wall of bars ran from one side of the cave's entrance to the other, and high enough that Charon would have had trouble climbing over the fence. The drifting faces \u2014 souls, Darian figured \u2014 drifted through the bars near the center of the great barrier, where the face of the gate stood.\n\nThe river of souls ceased, stopped against a dock of black stone, and the boat settled against it. No need for the smaller boat, the two Fate's Children tossed down the rope ladder, climbed down, and landed upon the black rock before the underworld.\n\n\"Gods,\" Otrera said. She held out her hand, and the drifting faces along the streams of color passed over it, around her fingers, over her shoulders, before moving onto the gate before them.\n\nThe gate of the great barrier stood as wide and tall as a city all its own, with three enormous faces carved of a metal he could not guess. Dog faces. High above them, the faces of Cerberus stared down at them, eyes alight with blue fire. Its mouths were open, the base of the gate made for its paws, and each claw was a sharp thing stabbing into the ground.\n\nBeyond the gate, was the underworld. In the distance, the cave's floor glowed with a host of colors, but again mostly the depressing navy that coated everything. Structures lay far off, too far for him to tell what they were, but unless his eyes were playing tricks on him \u2014 a real possibility given the locale \u2014 the structures looked like three giant people of black stone, with mountains growing out of them, and a beam of light standing vertical between them. Other structures stood by the three giants, but from so far, he could only barely make out more of the hanging blue flames, and what looked like temples.\n\n\"I um... don't think we'll be able to open this.\" Otrera stepped closer to the high gate, and stared up at the mighty dog beast, and its three heads of fangs. The faces didn't protrude so much as they were squashed against the tall gate bars, to fit the architecture of the great barrier. \"I guess Cerberus really does guard the entrance. We're not going to be able to get this gate open with its claws down. Not that we'd be able to push it open even if they weren't. Besides! Look at these bars, there's a good six feet between them.\"\n\nShe reached out for the empty space, but Darian snapped a hand out and grabbed her wrist.\n\n\"Don't.\" Shaking his head, he reached out, and touched the empty space between the bars.\n\nHis finger incinerated. A flash of pain, and he pulled his hand away to stare at the missing finger. But as the pain hit him, it fled as quickly. Bone, flesh, skin, they warped over themselves, extending from the removed digit, and rebuilt the finger in a matter of seconds.\n\nOtrera blinked at him. \"Whoa.\"\n\nThe souls continued to move through the gate, around where the metal-like material formed the giant dog's paws. She was right, they wouldn't be able to open the gate. As if it were taunting them, Cerberus's three mouths were open, fangs exposed, and the beast stared down at him with six eyes.\n\nThe Amazon stepped around him and looked around at the cave walls that surrounded them. Cave wasn't accurate; Athens, Sparta, Thebes, and other cities would have fit into the cavern twice over, together. The walls were far enough they were almost lost to darkness, but for the massive fires that dangled from their rocky curves. The ceiling too was high enough to be almost beyond visible, except for the thousands of hanging stalactites, each the size of Charon's ship, each holding a dangling arrangement of spiked hooks, holding braziers of the same blue flame.\n\nThe decorator needed to be fired.\n\n\"Surprised no one has come to greet us. Figured we'd be fighting Cerberus, and Eurynomos, and gods knows what else.\" Otrera walked back over to him and looked the colossal gateway up and down. \"And I guess this gate only blocks the living.\" Eyes drifted over the souls that floated past them.\n\n\"Someone will come, and when they do, I want you to stay out of it.\"\n\n\"Stay out of it? Are you serious?\"\n\n\"Yes. I let you come because I... I need someone to stop me if I... Just stay back when the fighting starts.\"\n\nWhen the fighting starts. He said it like he knew how that would go. But, as he looked down at his palms again, he knew it'd go his way.\n\nDeep breath. Let the mayhem begin. He stepped toward the gate until Cerberus's vast mouths hung directly over his head; if they could drool, he'd be covered in it. But the metal dog was silent, and Darian pointed his palms upward toward its jaws.\n\nHis hands started to shake. The eyes and mouth of his mask glowed brighter, buried the immediate surroundings in white, and forced Otrera to raise a hand to her forehead, blocking some of the brightness. She stepped back when the noises started, deep bellows that shook the ground around them, and then the gate, and then the cave itself. The soul water behind them started to churn, and splash black water up onto the stone.\n\nThe souls that drifted by stopped, and turned to him. Their eyes opened, wide, and many started to change color to a deep, dark blue, almost black, as they stared at him.\n\nAll dispersed when the gate smashed inward. From the top of the gate, hundreds and hundreds of feet above their heads, the bars bent in for a single moment before the effect tore down through the rest of the gate with explosive, cascading force. Crashing down from the top to the base where Cerberus's claws dug into the stone, the gate shredded the cavern floor and flew inward. Otrera jumped back and covered her ears, but Darian stared ahead at the onslaught, at the burst of force as the gates of the underworld exploded inward, and the mighty barrier slid across stone. Each of the grand pillars that comprised the gate, each a temple pillar in width, each hundreds of feet tall, flew across the air before crashing and tearing into the floor, unleashing a tearing sound of metal and impact.\n\nTo see such a massive structure crumble was something he'd never known. Just as Charon and the sea creature moved in slow, laborious movements, the bars of the gate, the bits of Cerberus's body, they all fell to the ground in what appeared to be a slowing of time. But as the bars finally landed, the erupting earthquake that shook the whole of the cavern proved time continued to pass normally. As bits of the gate crashed and bent, tore up more of the cavern floor, it took several long moments for the colossal array of metal to finally stop.\n\n\"Darian! Gods, I...\" Otrera got up, stood beside him, and covered her gaping mouth with her palm. The gate wasn't just opened, it was decimated. Hinges the size of homes, dozens of them, were ripped open. Cerberus, cracked in half, lay before them, claws torn from its paws, and pieces of its faces scattered over the stone floor. The gate had opened for a split moment, before its hinges had given way, and enough metal to crush a city lay destroyed.\n\nDarian squeezed his fist tighter, and looked at it as the glowing white of his eyes, of the mask's eyes, faded away. Such a small part, such a fraction of what the mask was doing to him, and it had rendered the gate of the underworld, Cerberus, nothing more than ruin.\n\nNo one was going to stop him.\n\n~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~\n\n~~Otrera~~\n\nShe had no idea how she'd be able to stop him.\n\nDarian, Bellerophontes, Moros, stepped into the underworld. Otrera followed behind, careful to avoid the ditches cut into the stone by Cerberus's claws. One of his paws was the size of a temple, but Darian had smashed the whole of the beast, and the gate all together, into pieces. What could she do to stop him, if she had to, like he'd asked? What could she possibly do?\n\nShe followed, the only thing she could do, and stayed behind him as the avatar of doom walked into Hades. Just yesterday, she was leading a mob of citizens against a vile sorceress, and she'd thought that'd been too ridiculous to be true. Now? She trembled with every step, and kept her bow ready. The bow might help, magical and all, but she doubted it.\n\nThe rivers of souls drifted down to run along the cavern floor, guided by waypoints of white flame lanterns. After a certain distance, the rivers of faces fell into canyons, and became proper rivers that poured through the cavern. They changed color sometimes, and sometimes some of them would crawl out of the river and back onto the flat cave floor.\n\n\"Living...\" One of the souls said, before it \u2014 he \u2014 fell back into the river.\n\n\"Alive. Alive.\"\n\n\"Still alive.\"\n\n\"Please... I want to be... alive.\"\n\n\"My son! Please, you have to find my son, tell him...\"\n\n\"My wife, tell her I\u2014\"\n\n\"I want life! Give me life!\"\n\nSouls splashed against the riverbanks, and the rivers ran parallel toward the three colossal stone statues in the distance, and the pillar of light they circled. A good long walk, with souls hounding them. Wonderful.\n\nBut Darian waved a hand, palm down, toward the rivers. The souls shrieked, and fled back into their waters.\n\n\"You um... you're taking to this avatar of doom thing pretty easily,\" she said.\n\n\"I know.\"\n\nHe knew. Well that was good. Made things easier if she had to start yelling at him for destroying everything and everyone.\n\nThe rivers of souls converged, far ahead of them, but in such number she could see what was happening from miles away. A vortex. A maelstrom? A tornado of some sort lay at the center of the place, made of the soul rivers that they followed. It changed colors as it went deeper into the cavern, into something beneath them, but also rose high, until the tornado of souls pierced the cavern ceiling. As they drew closer, they could see the cavern ceiling as its center was hollowed out, and a giant tunnel had been carved going upward. Souls of a brighter color went up, souls of a darker color went down.\n\nBefore Darian and Otrera, a great city came into view. Sort of a city. It was hard to understand what she was looking at, but enormous buildings, temples, and platforms were carved into the stalactites and stalagmites. Some seemed like they were added onto the titanic stone pillars, but that couldn't be possible. The temples, the domed roofs, the pillars within, they were all so much... bigger than needed. Not big enough for that Charon fellow, but big nonetheless. And many of the buildings and platforms were at different levels, with no bridge to connect them. Souls drifted around them, through them as they went up or down the tornado in a slow drift. It didn't seem like the souls got to stay in the weird city, but sort of pass through it as they either bled down into whatever was underneath the tornado, or went up above.\n\nAnd the three giant statues stood around the great vortex of souls, motionless. Each as big as Charon, the judges were as lifeless as Cerberus, but the souls changed color as they neared them, and altered their course in compliance.\n\nBig, bright lights circled the tornado, each a different color. They latched onto the tornado with tendril arms of light, and like an octopus, the odd things held on. They... sucked on the tornado, as far as Otrera could tell, as the souls drifted past them.\n\n\"W... what... what are those? I\u2014\"\n\nShrieks in the sky drew their eyes, and they both stopped as flapping wings started to emerge from behind the blue fire above. Women, beautiful, with great white wings started to descend over them, each armed with a sword and shield identical to Darian's. See-through white robes, and for a split moment, Otrera smiled at the sight of their figures.\n\nBut as they came closer, she frowned in disgust. Beautiful bodies, but horribly ugly, withered faces. And as they landed, beautiful ankles within glorious sandals of black and silver, she recoiled. They had snake hair like Medusa, but their snakes were dead.\n\nThere were twelve of them, and they were all frowning.\n\nThree of them stepped forward, with masks dangling from silver thread. Moirai masks, all similar to the one Darian was wearing. She was meeting the Fates.\n\nShe readied an arrow. Darian's advice be damned, she knew the bow was magical, Fate enchanted by a sorceress. Maybe it could take out one of these Erinyes. Maybe.\n\n\"Moros... how dare you... Only you could have released our two servants.\"\n\n\"You have found a vessel! How? Bellerophontes... should not be suitable!\"\n\nThey didn't know? They were the Fates, shouldn't they know everything? No wonder Chimera thought so lowly of these things.\n\nThe masks drifted free of the grip of the Erinyes, hovering. Black robes fell from their black masks, and carried the masks upward until they stood ten feet tall. Bits of black mist leaked from where the Fates walked, robes flowing over the rock beneath them as they moved. The Erinyes got to a knee, stabbed the tips of their swords into the ground, and held onto the grip as the Fates moved past them.\n\nOtrera nocked her arrow, and pointed it at the ancient entities of legend. They ignored her, and circled the two of them, ten-foot-tall robed things, with their lifeless masks staring at her, at Darian.\n\n\"Please brother, reconsider your madness! We will not survive another apocalypse. We will starve. You still starve!\"\n\nDarian growled, and swiped his hand to the side.\n\n\"I am not Moros.\"\n\nThe three entities jumped back, and hissed as serpents would. The Erinyes responded in kind, and the dozen of them leapt toward Darian.\n\nOtrera could still remember the horror stories her parents liked to scare her with, about the horrible things the Erinyes did to people who betrayed their parents. The sort of ghost stories to tell around a campfire. Everyone knew of the deadly power of the Erinyes.\n\nDarian waved a hand, and the dozen monsters, cthonic creatures of vengeance, exploded.\n\nFeathers fell around them, bloodied. Bits of snake and skull and robe landed next to them, and coated everything in blood. Something about blood, heavier, thicker than water, warm, made the contrast of the cold, dead underworld almost poetic. But the blood melted away, drawn into the stone where it faded and sank into the cracks of onyx.\n\n\"Bellerophontes!\" The Fates had a woman's voice, but layered with gargled rumbling. They backed away further, and their black, shadowy limbs raised from their heavy robes, many folds of the black fabric falling down over their arms as they waved them in what seemed like panic. Hard to tell, with the masks they wore showing no expression. But it did seem like they were cowering.\n\n\"You... you captured... Moros?\" one said.\n\n\"Impossible. A Fate's Child... just a human! A\u2014\"\n\n\"Sister, we did bestow him with the power.\"\n\n\"A fraction! Insignificant!\"\n\nOtrera blinked and looked at the man next to her. First Charon, now the Fates. These all powerful ancient entities were very verbose. Or did they just think humans were too stupid to extrapolate from a bit of information?\n\nDarian stepped toward them, over the feathers and bits of the Erinyes, and pointed his palm at the three sisters. \"You... you knew what Athena would do once she found out. You knew... you die.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "violence",
        "blood",
        "fantasy",
        "greek fantasy",
        "monster romance",
        "monster",
        "epic",
        "greek mythology",
        "mythology",
        "monster girl"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/medusa-fates-game-ch-14"
}