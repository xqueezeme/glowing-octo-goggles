{
    "title": "Quaranteam Ch. 35",
    "pages": [
        "Chapter 35\n\nWhen they sneaked back into the bedroom, Andy could hear the shower running, and he and Fiona stepped into the master bathroom, closing the door behind them. They each stripped and hopped into the running shower, where Niko was just finishing washing her hair. He leaned in and gave her a soft kiss before Fi moved to hug the smaller girl warmly.\n\n\"Thanks for being so welcoming, Niko,\" Fi said to her. \"You've really been the best at welcoming both me and Moira. Not that any of the girls have been bad, but you were there to talk with us the whole time the treatment was going on, and it means a lot to me that you were willing to answer all our silly questions.\"\n\nNiko smirked, leaning in and kissing Fi on the cheek. \"Not a problem,\" she said. \"I just wanted you both to feel as comfortable as possible here, and we all knew that if Andy invited you personally, you'd get along with everyone great. Which reminds me, Andy. I don't think anyone told you yet, but Moira will actually be passed out in the imprinting process for a significant amount longer than normal, but that's expected and nothing to worry about, so don't freak out when she sleeps through all of today, okay? That's exactly what's supposed to happen, and nothing's wrong.\"\n\nAndy tipped his head a little in curiosity. \"Why's the treatment taking to Moira differently?\"\n\n\"Unlike everyone else in the house, Moira actually had dengue fever during her time working for Doctors Without Borders, and while she's fully recovered from it, the antibodies for that complicate the serum so it takes longer to settle in and take hold. It's a minor flap, and it won't have any impact in the long run,\" Niko said, as she stepped out of the shower.\n\nFiona stepped out after her, grabbing a towel as well. \"She's lived a way more interesting life than the rest of us. You'll be astonished by some of her stories from when she was performing triage in warzones. It turns out people can be far more horrific than I ever imagined.\"\n\nAndy turned off the water and stepped out last, grabbing the one massive black towel that was his and exclusively his. Andy sometimes wondered if Nicolette always had laundry running, what with all the people in the household. He knew she had a system of some kind, and had yet to give any woman someone else's clothes, so the last thing he wanted to do was jinx it by asking for details, though he had complimented her on it several times, something that always made her smile.\n\n\"Oh, some people suck,\" Andy grumbled as the hot air from the fan blew down on him even as he was lightly caught in the backwash of Niko and Fiona's hair dryers. \"I've known that since I was a kid, and it's basically the backbone for the career of any writer. I'm sure we're going to hear a bunch more about that starting today, since we'll be adding an ex-spook to the family.\"\n\nNiko nodded, as she flipped off her hair dryer. \"She and Maya won't be showing up at the same time, either. Lexi will be here around lunchtime; Maya won't get here until late in the evening. People are passing through the base at such a high speed that we're just treating everyone as soon as they arrive rather than batching them like we used to.\"\n\nShe grabbed her clothes from the shelf and started tugging them on, clearly getting ready to head to the base. She'd been taking a lot of time off to meet new arrivals to the Rook family, but she was determined to get back into some sort of normal rhythm now.\n\n\"Lexi's a tough one to get a read on, but I think she'll warm up to you eventually,\" she said, giving him a firm hug. \"She's had a pretty rough go of it for the last several years, so try and be patient with her. I know you always are, but a little extra patience here wouldn't go amiss, if you know what I mean. This is quite the severe change for her.\"\n\nAndy nodded. \"Of course I'll be patient,\" he said before giving Niko a soft kiss. \"You liked her though? She seemed like a good person? You get to meet everyone before most of us do, so I trust your judgment on these kinds of things.\"\n\n\"She'll take care of you, and that's the most important part for a bodyguard. The rest we can figure out as we go.\"\n\nWhile Fiona finished getting her hair dried and shaped, Niko got dressed and headed out. They would see her again in the evening, but people needed to start getting back to work. Lauren was already changed into her workout clothes and heading down to the cars, as she was heading off to training camp, something that Andy had just heard about yesterday.\n\nKnowing full well there were going to be huge amounts of dead players, the NFL was preparing something truly unheard of. The following season would be the first co ed season played in the history of the league, and would be that way moving forward, so thousands of adjustments were being made, but the last thing the owners were going to allow to happen was the death of their livelihood because many of their players died.\n\nThe 49ers had asked Lauren to consider playing, but for the time being, she had insisted she only wanted to continue as a trainer for players. That just meant instead of training exclusively men, she was mostly training women with some men, mostly new incoming players from other countries.\n\nAndy couldn't even begin to imagine how much restructuring and revamping of the game itself going completely coed was going to result in, but he imagined it would be no slight shift. They had nearly a year before the scheduled 2021 season would start, with the 2020 season already fully canceled, but the amount of changes they were going to be making meant they needed to get a head start on them, particularly so they could figure out how to start recruiting women to play.\n\nIt had come as a bit of a surprise to him that they hadn't just started recruiting men from other countries, considering the rest of the world hadn't faced casualties anywhere near as badly as the US, but the last time he'd talked with Phil, Andy heard that DuoHalo was flaring up again in many other parts of the world, as piss poor world leaders had convinced themselves the dangers had passed, and that they could just \"endure\" through the resurgences.\n\nIt would likely take a few more million deaths overseas to prove them wrong.\n\nHe wondered if there was a collapsing of other American leagues, such as the NBA and the WNBA, into one league. For non-contact sports, the changes would be exceptionally minor, but the recruiting would be the biggest challenge, although he wondered if entrenched sexism would impact more international things like FIFA or the Olympics. He suspected it would have to, eventually.\n\nMost of the other girls were still either working from home or not working at all, so most people tended to be around the house for the majority of the day. Both Sheridan and Piper were getting up as Lauren left, however, the two getting ready to start their morning workout, although Andy suspected they might grab Hannah and Asha to join them. Andy had tried participating in their morning workout routine once, and had found himself unable to keep up with the girls, despite his best efforts. They were just in far better shape than he was. Lauren had also allowed Taylor to get dressed and had taken her to work, as she was training her partner to work with the 49ers with her.\n\nBy midday, most of the girls were up and tending to their own worlds, Sarah and Emily taking meetings with studio folks and their projects about upcoming agents, Ash working away on some project or another for Google, Hannah and Asha were both doing some coursework having enrolled in remote courses at Stanford until onsite learning could begin again. Tala and Jade wouldn't be up until late afternoon, so Andy spent the rest of the morning doing edits and rewrites on the draft of the newest Druid Gunslinger novel.\n\nEveryone met up for lunch, however, as they usually did, and just as they were finishing up, the doorbell rang and Nicolette hopped up to rush towards the door before Andy could even get up. \"Oh, let her have her moment,\" Sarah said to him with a smile.\n\nA minute or so later, Nicolette entered the dining room with Lexi in tow. While Andy had spoken to her a little bit on FaceTime, it was their first meeting in person. He smiled, rising up and walking over towards her. \"Hey Lexi, welcome to your new home,\" he said, extending a hand to her.\n\nLexi was an odd mishmash of styles, two differently contrasted vibes struggling for dominance in the woman's look. She had on tight blue jeans and a leather motorcycle jacket, but beneath the jacket she had on a pastel pink top that seemed a little frilly. The Latina woman's scars were more prominent in person, the right side of her face from the cheekbone downward warped and wrinkled, definite burn scars that had healed but had been severe enough that cosmetic surgery would prove difficult. He could see the scars covered almost half of her neck and disappeared down into the neckline of her shirt, so he assumed it spread over at least some of her torso. He knew it bothered her, but wanted to assure her that it didn't bother him at all.\n\nShe took his hand and shook it, certainly a different greeting than the other girls had gotten, but Andy wanted to give Lexi the space to settle in however she wanted. Their relationship hadn't been defined yet, and both Jenny and Katie had made it clear that they suspected it would blossom into something more than a professional relationship, but at first, that's what it would need to be.\n\n\"Let me introduce everyone. You know Katie and Jenny already, obviously, you met my fianc\u00e9 Niko on the base, and you met Nicolette at the door,\" he said. \"These are my other fianc\u00e9s Aisling, Sarah, Emily and Fiona, and these are my partners Piper, Sheridan, Hannah and Asha. This is the house IT tech Whitney. My partners Tala, Jade and Moira are all still recovering from the imprinting process, and my partners Lauren and Taylor are both off at work. I know, I know, it's a lot of names to remember all at once, so don't worry, everyone will be happy to remind you for a while.\"\n\nLexi tried to shake hands with all of them, but many of the girls insisted on hugs, something that seemed to take the Latina a little aback, although she didn't retreat from any of the contact. \"It's very nice to meet all of you,\" she said. \"Mr. Rook? Would you mind giving me a bit of a tour of the grounds, just so I can get my bearings?\"\n\n\"Not at all, Lexi, but please, you're welcome to call me Andy if you like.\"\n\nShe offered a brief tight lipped smile that appeared and was gone just as quickly. \"Let's stick to 'Mr. Rook' or 'sir' for now, and we'll see where that goes, okay?\"\n\nHe grinned, shrugging his shoulders. \"Play it where it lies. C'mon, I'll give you the tour.\"\n\nThe two walked out of the room, and once they were down the hallway a bit, he could see Lexi visibly relax a little. \"Sorry about that,\" she said to him. \"That was a lot of people all at once, and I know they're all your family, and that it's part of the gig, but it's a ton of information to take in all at once. The longer I stayed in there, the more worried Jenny was gonna get about me, and that's all I need, is her up my ass worrying that I'm going to have another episode.\"\n\n\"Episode?\" he said, as they walked out into the back yard. He figured he would give her a tour of the grounds first before doing the house, that way they would be a good distance from people, allowing her to have a bit of time to wrap her head around all of it, and to get to know him one on one before having to adapt to all the other people.\n\n\"We talked a little bit about this when we spoke earlier, but I do have PTSD, so from time to time, I can go through panic attacks, nightmares or even brief flashbacks, although nothing that should prevent me from doing my job, which is to keep you and your family safe,\" she said. There was a confidence to her walk, a sense of purposefulness, like she was always on task. \"And I do want to stress that while I'll do my best to keep all of your family safe, you will be the primary protectorate, and that means your health and well-being will always have the highest priority. You seem like a good guy, and that may take some getting used to, but if I'm going to do my job properly, it's a thing you're going to have to get your head around pretty fucking quickly, pardon my language.\"\n\n\"Okay, first thing's first,\" he said with a laugh. \"Never apologize for swearing around me. Ever. I happen to like women who swear, and while that may not be what you're used to, it's S.O.P. around here and you don't need to waste words on apologizing for things you don't need to.\"\n\nShe laughed a little, a genuine warm laugh, and that made Andy feel a little bit better. She'd been putting on a very cold exterior since her arrival, and Andy wanted to make sure she felt like she didn't need to be so guarded from the whole family. \"Fuckin' a, then,\" she said, nodding to him. \"But my point still stands. If it comes down to keeping you safe or keeping one of your women safe, I am always going to put your safety first. You don't have to like that, but you're gonna have to fucking accept it, because that is the way it's going to be. If you die, it sounds like there's a good chance that all of your partners die with you, and the protection business is about understanding the very basic math of it, which is that in a situation where I can let one of these women die or I can let all of these women die, I am going to protect you first, and will mourn the loss of the woman I couldn't save afterwards. I realize that may sound particularly cold, but I don't want you thinking about it like that. Trust me to do my job, and I will keep you safe with my last dying breath, if I have to.\"\n\n\"I can't imagine it'll ever come to that,\" he said, as they walked past the pool, heading out to walk into the large grassy field off to the side of it. \"I get everyone wanting to make sure that I'm safe, knowing that their health is dependent on mine, but I don't live a high risk life. I haven't pissed off arms dealers, drug dealers or crime bosses. There aren't any foreign governments trying to kill me. I'm not in the line of fire for anything or anyone.\"\n\n\"Can I speak plainly, sir?\"\n\n\"Always. In fact, you should never worry about saying something that will offend or anger me, Alexis. If we're out in public, maybe use some tact in conversations then, but when we're at home, and this is your home now, if you want it to be, just speak your mind.\"\n\nShe nodded a bit, walking along side him. \"Copy. That's horseshit, sir, about you not being in the line of fire for anything or anyone. I spoke with Niko some yesterday, and as one security person to another, she told me that I should consider this Covington to be a hostile operator, and that should extend to anyone in his family or household.\"\n\n\"Arthur?\" Andy said. \"Sure, I bet he's pissed at me, and that man has a lot of resources he could bring down to bear on me, but I wouldn't think he's the kind of guy to hire a hitman to rub me out or anything. That sounds a little too 'Goodfellas' and not enough 'Trading Places,' for his tastes. He's an asshole, but I doubt he's up to out and out murder.\"\n\n\"I have to keep reminding myself that despite this house and your large collection of beautiful women, you're extremely new to this lifestyle, sir,\" Lexi said to him. \"The ultrawealthy are almost exclusively assholes with no regard for human life or the well-being of anyone who isn't providing something of use to them. You may think Covington's harmless now, but at any moment, he could turn far more malevolent, and it's my job to ensure that he doesn't get to you.\"\n\n\"You know, I'm just going to trust your judgment on this, then. When I got an agent, I had to learn to let my agent to do all the things an agent should be doing. The same when we signed a five-book deal and I got an editor. I had to learn to trust the editor's judgment on what did and didn't belong in a story. So third time's a charm. If you take on the job here, then I'll defer to you in all things of this kind of nature, and if you tell me someone could be a threat, I'll consider them a threat.\"\n\n\"If I take the job here?\" she asked, stopping in her walk as they neared the fence at the edge of the property. \"I thought I'd already made it clear I accepted it.\"\n\n\"Well, you did, but up until you're imprinted, you can still change your mind,\" he said. \"And I always give everyone up until that moment to reconsider if they want to. Jenny said she thought you were looking for your Prince Charming, and if you take this job, if you get imprinted to me, that effectively ends that search for you for the foreseeable future. That's a huge step to take, and if you have any misgivings about it, you shouldn't commit to it, to me, to us, to this.\"\n\n\"Well, Jenny established pretty clearly that I am absolutely disinterested in intercourse with any of the women in the house, right?\"\n\n\"Absolutely. And if that's what you want, nobody's going to push. You and I can have our intimate time one on one without anyone else around, and if you like, I can even spend a night with you in your bed regularly. The key is that you're going to have to accept that I'm also attached to all these other women, and while I'm going to do my best to divvy up my time equally, I won't always be perfect at that.\"\n\n\"Anytime you go anywhere, I'll be by your side, so we will get plenty of time together, sir,\" she said with a little laugh. \"A better question is how good have you been at not comparing your partners? I'm sure someone's got to be the best, which means someone's also got to be the worst.\"\n\n\"No bests and no worsts,\" he said sternly. \"Everyone's different, and that's exactly how it should be. Hell, I think everyone's different enough that it makes comparisons nearly impossible anyway.\"\n\n\"Do the scars bother you?\" she asked him, turning to face him directly as they stood near the fence, a big metal monstrosity that was far enough from the house that its appearance was mostly masked by trees. \"At some point I could get cosmetic surgery, but up until recently, I've constantly been working, and there hasn't been any time for it.\"\n\n\"That's entirely up to you, Lexi,\" he told her. \"I don't mind the scars. I think they add character and personality.\"\n\n\"You haven't seen how far they go,\" she sighed.\n\n\"Not yet, anyway, but I will when you're ready to show me.\"\n\n\"They go down to my ribs, and my right boob is scarred up like my neck here. Not very sexy, I know, but it's what I got.\"\n\nHe took her hand for a moment, which made her jump a little bit at the sudden contact. \"Lexi, don't worry about it,\" he said emphatically. \"You're a beautiful woman, and I do not mind the scars. If you want to have them corrected at some point, you are welcome to do so, but you do not need to think you have to do so on my behalf, okay? I'm going to trust you so I need you to trust me on this.\"\n\nShe looked down, drew in a heavy breath then sighed it out. \"I got hit with a molotov cocktail in the jungles of Peru. The doctors there did everything they could to tend to the burns, but they were severe, and we were several hours away from a real hospital, so before I could get the best treatment, a lot of the damage had already been done. There's some nerve damage anywhere I'm scarred, so I have to be careful if I get into scraps, because I could be bleeding from there and not notice it. I also get phantom itches all the time, but I've mostly gotten the compulsive need to scratch under control at this point. Some people, a lot of people actually, have trouble seeing past the damage.\"\n\nAndy's other hand moved to brush along the underside of her chin, touching some of the scarred flesh for the first time, forcing her to look back up and at him. \"There's where they're going wrong,\" he said. \"You don't look past the damage. You learn to see that the damage is part of what you're seeing, and integrate that into the whole. Everyone's damaged, Lexi. Everyone. Some people, they just have an easier time hiding the scars. But you are a beautiful, sharp witted woman, and anyone who gets fixated on the scars is looking at the wrong thi--\"",
        "He didn't get a chance to finish his sentenced, because she leaned up and kissed him, shutting him up, her hand holding onto the back of his head. The kiss took him but surprise, but it wasn't unwelcome. Still, he let her set the tempo and intensity of it, their tongues remaining in their mouths, and the kiss only lasted a few seconds before she pulled back, lifting her free hand up to wipe a tear from her eye. \"That's... that's very sweet of you to say, sir. It's been a long time since anyone's looked at me with something other than sympathy.\"\n\n\"I can tell you've never read any of my books,\" he said with a soft laugh,\n\nShe blushed a little, frowning. \"I'm sorry sir, I haven't...\"\n\n\"Don't worry about it,\" he said, waving a hand. \"The reason I said that is because the main subtext of my books is that everyone has damage, and how they manage that damage is the important part, not the damage itself.\"\n\nShe laughed a little bit dismissively. \"You've got two world-renowned actresses and an Olympic hopeful athlete here. I somehow doubt they've got all that much damage to them.\"\n\n\"Well, Piper was imprisoned by Covington and left in a sexual frenzy locked in a room without clothes or a toilet for days, so maybe don't go implying around her that she does have any idea what damage looks like.\"\n\nThe laughing died immediately. \"Oh my god, that's horrible. I didn't even realize--\"\n\n\"As for Sarah and Emily, someone attempted to rape Sarah about six years ago, and while she got lucky and someone interrupted it, the person responsible was a studio mogul and still hasn't been really punished for it. Emily, on the other hand, has had stalkers for years, and had her home broken into a couple of times, once when she was even in it. She told me once the interview airs in a few days, announcing that she and Sarah are partners, but also that they're going to marry me, that we may get some hate mail and death threats, although she says they're generally just people venting. But I suppose you can add that to your list of possible threats against my life.\"\n\nShe nodded somberly. \"I expected that, although I did not know about Miss Washington's near rape, obviously. Powerful men are such bastards.\" She chuckled a moment. \"Present company excluded, clearly.\"\n\n\"Oh, I've probably been a bastard a couple of times in my life, of that I have no doubt.\" They started walking along the fence line, so that Lexi could see the outskirts of the property. \"But I draw the line at assaulting innocent women.\"\n\n\"But assaulting non-innocent women's cool then?\" she said with a slight smile.\n\n\"Look, if a woman's coming at me with a weapon in hand, all bets are off,\" he chuckled. \"And I think that's fair, don't you?\"\n\n\"Absolutely fair, sir.\" They walked along the fence for a minute or so in silence. \"Now that we've sized each other up a little, do you still think I'll be a good fit here, Mr. Rook?\"\n\n\"Oh, I knew you'd fit in here after our first conversation, Lexi, but that's not what's important right now. What's important is if you want to be here, and if you can stomach having to be sexually involved with me on the regular.\"\n\nThat made her giggle, a sound he was particularly pleased to draw from her. \"You make it sound like you're some oafish brute with a face not even a mother could love.\"\n\nHe smirked. \"I have no illusions about who I am, Lexi. I'm losing my hair. I have a bit of a belly. Hell, I've got hair on my back. On the best of days, after a good amount of prep work, I am a six, at best, and certainly not deserving of all the beautiful women I'm surrounded with. But I'm alive, and most of the men who were nines and tens aren't any more, so women are reevaluating their standards, I guess, and I'm the beneficiary of the new sliding scale. Is that fair? Oh fuck no, but that's where we find ourselves. But the social game is radically different than it was a year ago. No matter what you may think of yourself, I can assure you that you are well out of my league. But you have friends here, in that you know Jenny and Katie, and they'd both love to have you around the house. I know Jenny's worried about you, and all the girls are worried about my safety, so this seems like an easy two birds with one stone solution to me. But if you look at me and think 'God, I just can't see myself fucking this dude every week or so,' then I get that, and I'm not gonna be angry.\"\n\nShe smirked a little bit. \"I can see myself fucking you every week or so. I just don't know that I can see you wanted to fuck my scarred ass every week or so.\"\n\n\"The scars go down to your ass?\" he said with a grin. \"That's even sexier.\"\n\nThat set her off giggling again. \"No, they don't extend down to my ass, you jerk,\" she said, still smiling. \"But you know what I mean.\"\n\n\"No,\" he said, shaking his head. \"I really don't know what you mean. The scars are beautiful, they're a part of the beautiful woman that you are. Anyone who's been put off by that is a fucking idiot, and isn't worth your time.\"\n\n\"And my past isn't a dealbreaker?\"\n\nHe arched an eyebrow at her in surprise. \"You're kidding, right? I didn't want to say anything, but when Jenny showed me that photo of you holding an AK-47 in the jungle, looking like an utter badass, I got an immediate hard-on. How the fuck would that be a dealbreaker?\"\n\n\"Some people think hooking up with an ex-spy is risky.\"\n\n\"I accept you, Lexi,\" he said. \"I'll keep repeating that as long as it takes. The decision's really yours to make.\"\n\nThey were nearly back at the house again, approaching the small pool house first. \"It okay if I build a small gun range out here?\"\n\n\"I mean, as long as you set it up so there's minimal risk to us or the neighbors, although I guess if you point it that way,\" he said, gesturing off in one direction, \"there really isn't any risk, as any missed shots will just go into the hillside.\"\n\n\"And you know I'm going to have guns in the house?\"\n\n\"I sort of expected that, what with the whole body and guarding aspects of what you're going to be doing. I just ask that you make sure they're stowed safely, either on your person or in a case. My cats are assholes, but they won't open cases. That's all I'm really worried about.\"\n\n\"Well, and babies, eventually,\" she said to him.\n\n\"Oh you heard?\"\n\nShe nodded. \"Niko mentioned it yesterday, which was why she was grilling me so hard for my professional qualifications. She's remarkably competent for someone so young.\"\n\nAndy returned the nod. \"It's easy to forget she's barely old enough to drink, considering how much she runs around here. I think you'll learn that between her, Ash and Em, I really don't get to make all that many decisions in the house,\" he laughed. \"Not that I'm complaining.\"\n\n\"And any specific sexual kinks I can't practice on you?\"\n\nHe grinned. \"No poop, no pee, and my ass is exit only.\"\n\n\"Then is it fair of me to say mine is as well?\"\n\n\"Absolutely fair.\"\n\n\"And you're gonna be okay fucking in a bed with a gun on the nightstand?\"\n\n\"Are you kidding?\" he chuckled. \"That might make it hotter. Anyway, this is the pool house, which is going to get converted into Tala's bedroom and work space. You haven't met her yet, but she's both a wood worker and a musician, so giving her her own area where she can hammer away on oak, metal, guitar or drums whenever she wants to seemed to make sense.\"\n\n\"She won't be sleeping in the master bedroom regularly?\"\n\n\"Regularly, yes. Often, no. I expect her to be the main bedroom like once a week or so, but there won't be any kind of rigid schedule for that kind of thing. Jenny said you're the kind of person who likes to have schedules and follow them, but with this many people in the family, there's got to be some room for give. That going to be a problem?\"\n\n\"Nah,\" she said. \"Who you fuck when isn't any of my concern, as long as I'm getting my regular fix within my timeframe.\"\n\n\"So you're going to stay then?\"\n\n\"I think we both knew I was going to before I got here, but yeah, I feel comfortable saying I'm in now that I've had a chance to size you up a little more. I've heard about most of the girls here either from Jenny or from when I was talking with Niko yesterday, and while there may be the occasional personality clash here and there, I don't think it'll be anything we can't work out together.\"\n\n\"And I'm not too ugly for you?\" he teased.\n\n\"Look,\" she sighed with a hint of exasperation. \"If I'm not allowed to be bothered by my scars, then you can't call yourself ugly, deal? You're a handsome man, and I won't have you demeaning the man I'm going to be fucking on the reg, got it?\"\n\n\"Yes ma'am.\"\n\nThe tour of the house gave them a little bit more time to discuss the general routines people were in within the house, what times and days people were coming and going, and when people woke up and went to sleep. She seemed especially amused by the Needs board, tracking the last time each of the girls in the house had gotten their fix, and the point when they were going to start being mentally affected by not hooking up. \"You've got a few here you're gonna need to tend to soon,\" she said, tapping the schedule.\n\n\"Yeah, the last few days have been pretty busy, but I'll make sure I take care of them in the next couple of days. And we'll have to add your name up here on the board, assuming you're joining the household.\"\n\n\"Didn't I say I was going to?\"\n\n\"I mean, not explicitly, no.\" He shrugged slightly. \"You've been strongly hinting that you're going to, but you need to say it to finalize it.\"\n\nShe was quiet for a bit, as they walked away from the board, heading towards the stairs. \"Fine. Fine then. I'm in. I'll join this weird household you have and become part of your family, as well as taking on the job of your personal protection. Just don't ever ask me to be a play partner with any of your girls, or invite any of them into my bed.\"\n\nHe raised his hands as they walked up the stairs, heading into the hallway that lead down towards some of the individual bedrooms, finding Jenny and Katie standing down in front of one of the doors down near the end.\n\n\"Are you gonna do it?\" Jenny said, stepping forward to take Lexi's hands in her own.\n\n\"Yeah, I am,\" she said. \"It seems like you're right. He seems like a good guy, and finding those in this world's new layout is going to be a bitch in the best of circumstances. And if you say he's a good fuck, I have no reason not to trust you, Jen. Plus, the idea of having lots of people around... of having friends around... that sounds pretty fucking great to me. So what's next then?\" She turned to look back at Andy. \"You want to do it now or later?\"\n\n\"I mean, that's entirely up to you,\" Andy said. \"You can wait up to a couple of days if you want to, or we--\"\n\n\"I wanna fuck right now, if that's okay,\" she said, interrupting him, blushing a little bit. \"Not to be pushy or anything, but I haven't gotten laid in a couple of years, and even before the treatment, I was fidgeting more than a whore in Sunday School. So if it's alright with you, maybe we can go and do that right now?\"\n\nJenny leaned back and pushed the door open behind her, as Katie gestured to the open room. \"This'll be your bedroom, Lex,\" Katie said. \"It has its own attached bathroom, like most of the bedrooms do. You can decorate all of it however you want to, but Jen had one little touch that she wanted to throw up to make you feel more at home.\"\n\nLexi stepped into the bedroom and then began howling with laughter, reaching behind her to slap several times at Jenny's arms playfully. \"You! Utter! Bitch! Oh my fucking god! Where did you fucking find it?\"\n\nAndy moved closer to peek his head inside of the room and noticed that on one wall was a large poster of a shirtless Enrique Iglacias on the wall, like something from Teen Beat magazine back in the day. The image had to be at least ten or fifteen years old, and Andy suspected he had wandered into a private joke between the two women.\n\n\"I had to buy it off the internet, but when I talked to Andy about bringing you here, I ordered it so that if you came, you could have it up on your wall, just like you did in your bedroom at our old apartment.\"\n\n\"I can't tell if I want to rip it down immediately or leave it up forever!\"\n\n\"Well if you take it down, don't rip it up,\" Jenny teased, giving her friend a big hug, one that Katie joined in on.\n\n\"Good to have ya here, Lex,\" Katie said. \"Now we'll leave you two to it.\"\n\nThe two women excused themselves and headed back down the hallway, as Lexi stepped into her bedroom, Andy stepping in behind her, closing the door behind them. Lexi was glancing around the room, but still slid out of her leather jacket, tossing it on top of a dresser in the room. Beneath the jacket had been concealed a shoulder holster with a firearm in it, that she slowly slid off, placing next to her jacket on the dresser. \"I have some serious decorating to do in here, but I can make it work.\"\n\n\"Well, it's yours and yours alone,\" he said.\n\n\"No.\"\n\n\"No?\"\n\n\"No,\" she said, shaking her head. \"It's ours. I'm not sure I'm ready to say I want to be a partner yet, but this room is where you and I are intimate together, where we fuck. So it's our room, but I sleep here. So I want to make sure whatever I do to the room doesn't make you uncomfortable.\"\n\nHe laughed a little bit. \"The beefcake poster doesn't bother me one way or another.\"\n\nShe reached down and pulled that pastel pink top up and over her head, tossing it onto the dresser atop the jacket. He could see she was still wearing a sports bra, but much more of her brown skin had been exposed, and it was clear the scarring reached down to about the top of her hip. As he was looking at it, she reached down and pulled up the sports bra, revealing a pair of small, pert tits, one of which was mostly covered in scarred flesh, although the scarring seemed to have missed her nipple, the chocolate bud the same shape and color as the other.\n\n\"It looks like el diablo tried to paw one of my tits, I know,\" she said, \"but I'm learning to live with it.\" She kicked off her leather steel-toed workboots before reaching down to pull off her socks. \"You gonna make me strip entirely first, or are you going to join me?\"\n\n\"Oh you really did mean now now,\" he said with a laugh, walking over towards the bed, peeling off his Chapterhouse t-shirt, setting it on the nightstand, while kicking off his own shoes. Around the time he was starting to unbutton his jeans, she was doing the same, both them sliding them down at the same time, although Andy had hooked into his boxers with it, while she'd left her black satin panties on.\n\n\"I hope you aren't going to expect great panties like this all the time,\" she said to him, \"but I figured for the first time I should frilly it up a little.\"\n\n\"You could've shown up in a potato sack and a clown nose and you still would've been sexy.\"\n\n\"Please don't tell me you have a clown fetish.\"\n\n\"God no,\" he laughed, as he moved to sit down on the bed.\n\n\"Thank Christ for that,\" she said, slowly dragging her panties downwards before stepping out of them, leaving her fully exposed to his eyes. She had shaved her pussy entirely bare, and Andy made a mental note to tell her that if it was on his behalf, she didn't have to do it, knowing exactly how much work it was for some of his partners to maintain. \"So how do we want to do this?\"\n\nHe waited for her to come and sit down next to him on the bed, and he leaned in to kiss her once more. \"You tell me what you want, and then we do that. I want to make sure you enjoy this as much as possible, so whatever you want, that's what we're gonna do...\"\n\nShe smiled at him, pulling him to slide off the bed and stand up, standing up with him. He wasn't sure what she was doing, but then he saw her pulling the sheets back to open up the bed, before she crawled up onto it, moving to lay down on her back, extending her arms up to him. \"Call me a traditionalist, but for our first time, I think the old ways are best.\"\n\nHe nodded. \"Sure, we can do that.\" He moved one knee up onto the bed, then the other, scooting on them until he was between her legs, leaning forward until he was laying atop of her, feeling her thighs on his hips, as he pressed his lips against hers once more. One of his hands pressed against the bed to the right of her, trying to alleviate his weight off of her a bit, his other hand smoothing against her face, testing to see if touching her scars was good, bad or neither.\n\n\"Andy,\" she said in between kisses. \"I appreciate you taking this slow and gentle with me, but right now, whether it's the chemicals or the abstinence or whatfuckingever, I am horny as balls, and I need to be fucked. So quit dicking around and dick me.\"\n\n\"Okay,\" he said with a smirk, \"but you're not ready for this first step, 'cause it's a doozy.\"\n\n\"I'm not a goddamn virgin, Rook,\" she grumbled, \"I think I know how to taaaaaFUCK!\"\n\nAs soon as his cock slid inside of her, that precum oozing from the tip sinking into her vaginal walls to start the priming process, that initial orgasm hit her like a sonic boom, both of her legs wrapping around his waist, her heels digging in hard to the small of his back, to keep his thick dick trapped inside of her pussy as she spasmed maddeningly around him. \"Fuck fuck fuck I'm cumming I'm cumming holy fuck holy fucking fuck oh god dios mio fuck fuck I'm still fucking cumming what the fuck is this shit oh fuck fuuuuuuuuuuuuuuck!\"\n\nHer fingertips were practically sinking into the flesh of his back with a strength that almost hurt, even as she started to ease down from that Icarus plateau, panting feverishly into his face like she'd just run the Boston Marathon.\n\nHe kept his body perfectly still as she started to ease her breathing back towards normal, the time in between the breaths longer than usual, as her eyes struggled to draw back into focus, looking up at him, and finally she let out a giggle, dazed and mildly frantic. \"Oh my god, and it gets better than that?\"\n\n\"Yeah, the imprinting orgasm I think all of the girls have described as their most intense ever.\"\n\n\"Yeah, then you better gimme that shit quick,\" she growled at him with a wolfish smile. \"Because I wanna feel it.\"\n\n\"Yes ma'am.\" He tried to draw his hips back as much as she would let him, which wasn't very far, before thrusting forward and down again, curving himself into her cunt with smooth pushes, each one making her groan, her fingertips dragging hard against his skin.\n\n\"Deeper, faster, c'mon and fuck me already!\"\n\nHis hips tried to increase the tempo of the rhythm, but all he really ended up doing was grinding into her with more force, as her body writhed up against his, worming his cock in and out of her pussy, keeping him almost hilt deep as much as she could, his balls smacking against her ass, as he tipped her a little beneath him, letting him use the angle for a bit more leverage, thrusting more down that forward now, as she started to squeal more emphatically beneath him.\n\n\"Fuck yeah c'mon more more more give it to me fuck that pussy fill me up so fucking good god I think I'm gonna fuckin' cum again already... I never cum so fucking easily... oh shit... are you close? Please be close... I wanna feel you nutting inside me... I wanna feel your sticky cum marking your territory... I wanna feel you creampie me... gimme that hot jizz... it's gonna make me cum all over again... oh god... take me... fuck me... love me... use me... claim me... cream me... CREAM ME!\"\n\nWhen her orgasm started and she clamped her twat around his cock, he could feel those spasms trying to milk him, and he let loose the floodgates, firing a handful of thick ropy blobs against the back of her pussy, right against her cervix, and suddenly it was like her orgasm was kicked into overdrive, and the expression on her face was one of rapture, the whites of her eyes all that was visible, her pupils pointing at the inside of her skull, her eyes having rolled back so far.",
        "While he'd seen many woman go through this imprinting orgasm before, none of them seemed to take to it quite as strongly as Lexi had, her whole body still quivering and quaking as her lips began to mutter \"Im... imprint... imprint... imprinting... im... imprint... imprint... imprinting...\" as her legs went limp and slid off his sides, her arms dropping lethargically to the bed top.\n\nAs Andy slipped from between her legs, he pulled the sheets up and over her body, leaning in to hear her mumbling again, the word only stated fully about one in every four attempts. He moved over to his jeans and recorded the sound of her doing it into a voice memo on his phone. He knew that Phil didn't have his phone on him while he was on the base, but he did have email access, so he shot the voice memo over to his friend via email along with a short note that says \"This isn't how it usually sounds. Should I be worried?\"\n\nHe hoped like hell Phil was going to tell him he was just being paranoid."
    ],
    "authorname": "CorruptingPower",
    "tags": [
        "mf",
        "latina",
        "scars"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/quaranteam-ch-35"
}