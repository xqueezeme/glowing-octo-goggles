{
    "title": "Life after the Lottery Ch. 26",
    "pages": [
        "Another long chapter, but I just couldn't find a place to divide it. The beginning of the story leads up to a big time. Enjoy. \n\nChapter 26\n\nThe big party -- Dawn gets crazy\n\nThere was a knock at our bedroom door waking us up. It was late Friday morning, we had sleep late because we had been up late drinking and playing around.\n\n\"Are you two up?\"\n\nI heard Lieke on the other side of the door.\n\n\"Yes, come on in,\" I said as Dawn began to wake up.\n\nLieke came in carrying a tray with our breakfast on it. I was a little surprised that she was wearing a short red kimono.\n\n\"Since you two were sleeping in I thought I would bring you breakfast.\"\n\n\"Thanks, that's sweet of you,\" Dawn said as she sat up in bed naked.\n\nLieke placed the tray in Dawn's lap and then poured some coffee for us.\n\n\"What time is it?\" I asked.\n\n\"About 10:00, were you two up late last night?\" Lieke asked.\n\n\"We stayed up late drinking and watching porn in the media room,\" I told her.\n\n\"Sounds like you had a good time.\"\n\nWe chatted while Dawn and I ate breakfast. Dawn was asking more specifics about the wet t-shirt contest Saturday, her and Lieke were excited about entering it.\n\n\"Lieke, you said that the women had to be 18 to enter the contest and that you won it last year, how old are you?\"\n\n\"I turned 21 last month.\"\n\n\"Congratulations,\" I said.\n\n\"Thanks, I am perfectly legal now!\"\n\n\"I have to say, you look about 17,\" Dawn said.\n\n\"I know, I get carded all the time.\"\n\n\"I like your kimono,\" I told her.\n\n\"I had to put it on while I cooked, didn't want to get burned,\" Lieke said suggesting she didn't have anything on under it.\n\n\"Thanks for breakfast in bed,\" Dawn said. \"We need to take a shower, would you like to join us?\"\n\n\"I need to get started on cleaning up and the laundry...maybe next time,\" Lieke said with a shy smile as she picked up the tray and headed out of the bedroom.\n\nDawn and I got up and showered and went downstairs, Dawn had decided she wasn't going to wear any clothes around the house any more so we went naked. When we got downstairs I saw much to my delight that Lieke had taken off her robe and was wearing only a tiny bikini bottom.\n\n\"You look much more comfortable now Lieke,\" I said.\n\n\"I am, I am very comfortable now. Would you like some more coffee?\"\n\nWe stopped in the kitchen and Lieke poured us another cup of coffee, I paused to admire her young body a moment.\n\n\"What do you two have planned for today?\" Lieke asked.\n\n\"I thought we would go and visit some of the tourist shops and do some shopping,\" Dawn told her. \"What are your plans?\"\n\n\"After I finish with the house I need to go shopping for groceries for this weekend.\"\n\n\"Okay. James give her some cash so she can get what we need.\"\n\n\"We have accounts at the store so you don't need to do that.\"\n\n\"I would rather you just pay for everything. You may want to go someplace that you don't have an account.\"\n\n\"Okay.\"\n\nDawn and I went outside to sit in the sun while we finished our coffee, it was a little overcast and looked like it might rain.\n\n\"I hope it doesn't rain on us,\" I said.\n\n\"We have been lucky so far, it does rain a lot on this part of the island,\" Dawn replied.\n\nI heard a phone ring.\n\n\"Someone's cell phone is ringing!\" Lieke called out from in the house.\n\nDawn got up and ran inside. I wondered who was calling, I didn't think Amy would be calling Dawn's cell phone. I waited for Dawn while I finished my coffee while she was gone for about 10 minutes before she came back out.\n\n\"Was that Amy?\"\n\n\"No, it was Jill.\"\n\n\"I had forgotten about them,\" I said. \"What did she want?\"\n\n\"She wanted to know if we would like to join them for dinner tonight but I told her we had plans for the evening so she asked about tomorrow night and I told her about the wet t-shirt contest we were going to. Her and Mike want to come now. I told her we were going shopping today and she suggested we come to where they are because the shopping would be better.\"\n\n\"That sound good, let's get dressed.\"\n\nWe went back in and upstairs to put some clothes on, I was slipping on my underwear and shorts when I saw Dawn putting on a pair of tight white shorts with no underwear and a snug fitting white t-shirt with her college logo on the back.\n\n\"Is that all you are going to wear?\"\n\n\"Yes, I don't want to get hot.\"\n\nI put my shirt on and we headed downstairs. As I watched Dawn go down the stairs I realized how thin the white shorts were. When Lieke saw Dawn she smiled because it was obvious with her snug shirt she was not wearing a bra.\n\n\"Now you really fit in with the locals,\" Lieke said with a smile.\n\n\"We are going to meet some people we met on the plane for the day, can you tell us how to get to the hotel on Black Rock Point?\" I asked.\n\n\"Sure, get me your map and I will show you, it will take you a little while to get there.\"\n\nLieke showed me on the map how to get there and told us about some good places to shop. I gave Lieke a handful of cash for her to stock up on drinks and groceries for us and we left. We took our time driving to Jill and Mike's hotel, stopping occasionally to take some pictures. When we got to the hotel we had the front desk call up to their room. When the desk clerk hung up the phone he told us that they said to come up to the room. The clerk walked us to the elevator and stuck the card in to take us to the penthouse.\n\nWe knocked on the door of their room and Jill opened the door.\n\n\"Nice to see you two!\" Jill said. \"Come on in.\"\n\nThe penthouse they were in was fantastic, everything was marble and glass and they had an incredible view of the ocean from the top floor.\n\n\"This place looks great,\" Dawn said.\n\n\"We like it, we stay here every time we come, it is a real treat. We have a butler on call so I don't have to do anything but have fun.\"\n\n\"Sounds perfect,\" Dawn said.\n\n\"You two enjoying the house you rented?\" Jill said with a bit of sarcasm.\n\n\"It's great, you will have to come and visit,\" I returned.\n\nJill showed us around the huge penthouse trying to impress us a little. Mike had been outside on the balcony before he came inside. After some small talk the ladies decided it was time to go shopping. The first place they wanted to go to was some outdoor shops that were across from the hotel so we walked over there.\n\n\"There are some pretty good buys here if you negotiate,\" Jill told Dawn as they headed down the rows of shops.\n\nMike asked me what all we had been doing so far, I told him we had been driving around the island visiting some of the tourist spots.\n\n\"Have you two done the downhill biking yet?\"\n\n\"No, what is that?\"\n\n\"Oh, you have to do it, you go up to the top of the volcano and ride a bike all the way back down to the shore. It is about a 30 mile ride and you won't have to peddle much at all.\"\n\n\"That sounds like fun.\"\n\n\"We are going to do it Monday morning, why don't you join us,\" Mike said.\n\n\"I'll ask Dawn if she would like to do it.\"\n\nMike and I stopped at a juice stand to get something to drink. About that time I felt the first raindrops.\n\n\"Looks like it is going to rain,\" I said.\n\n\"It won't last long, it rains at least once a day on this part of the island, we just ignore it and get wet and keep going,\" Mike said.\n\nSuddenly it started raining harder, Mike and I huddled under the small overhang of the juice shop with the rest of the tourist. Several minutes went by and it continued to rain hard, we were starting to get wet from the water rolling off the roof and splashing on the ground in front of us.\n\n\"I wonder where the girls are?\" I said.\n\n\"Let's go find them, too many people crowding under here,\" Mike replied.\n\nWe ducked out from under the overhang and went looking for our wives. We had walked about 50 yards when I saw them heading toward us, they looked soaked. When they caught up with us I could tell they were soaked to their skin.\n\n\"It doesn't look like it is going to stop anytime soon, you all want to head back to the hotel?\" Jill asked.\n\nI looked around and saw some of the people making a break across the road back to the hotel.\n\n\"We are already wet, might as well stay,\" Dawn said.\n\n\"Okay then,\" Jill replied.\n\nWe did find a jewelry shop that had a roof on it so we ducked in there. Dawn was pulling her wet hair back when I noticed that her t-shirt was now transparent and revealing her breasts and nipples. Her white shorts were not in much better shape.\n\n\"You getting ready for the contest?\" I asked her.\n\nShe looked down at her nipples showing through the shirt.\n\n\"I don't know, what do you think?\" Dawn asked.\n\n\"I think you look good,\" Jill said with a big smile.\n\nDawn tried to pull the wet t-shirt away from her breasts but she wasn't having any luck because the shirt was so snug. She gave up and started looking around the shop at the jewelry. Jill followed her as she went.\n\n\"Your wife looks like a lot of fun,\" Mike said.\n\n\"She is, she really doesn't care if anyone sees her like that.\"\n\n\"It doesn't bother you?\" Mike asked.\n\n\"No, it stopped bothering me a long time ago.\"\n\n\"I wish Jill was more like that.\"\n\n\"Hey, she put on a pretty good show on the plane,\" I told Mike.\n\n\"That's different, she does that because she likes to be a little dangerous when we have sex, she is a little more reserved when there are a lot of people around.\"\n\n\"Maybe she will change, Dawn has over the last few years.\"\n\n\"Maybe, I think your wife is pretty hot walking around letting everyone see her tits through that shirt, if you don't mind me saying.\"\n\n\"No, go right ahead, tell Dawn if Jill will let you she would appreciate it.\"\n\n\"James come here!\" Dawn yelled at me.\n\nMike and I walked over to where the two girls were. Dawn had the bottom of her t-shirt rolled up and had a nice looking gold chain around her waist.\n\n\"What do you think?\" Dawn asked. \"This would look good tomorrow night wouldn't it?\"\n\nThe gold chain did look good around her waist lying on her dark tan.\n\n\"It does look good, but it needs something.\"\n\nThe man that had been helping said he had something. He got out a beautiful opal about the size of a nickel and bravely hooked it on the front of the chain. It had just enough weight to pull the chain down toward Dawn's crotch, the opal was hanging just over the front of her shorts.\n\n\"Now that looks better,\" I said. \"What do you think Mike?\"\n\nMike was staring at Dawn's wet shorts and checking her out.\n\n\"I think it looks good on her, it really accents her waist.\"\n\n\"What do you think Jill?\" Dawn ask as she turned toward Jill.\n\n\"It looks real nice, the shiny gold looks good against your tan.\"\n\n\"It looks very nice ma'am, I don't show the opal to everyone because they are expensive,\" the man said.\n\n\"Oh no, how expensive?\" Dawn said with her best southern accent.\n\n\"The chain is $300 and the opal is $500.\"\n\nThat was way over priced and Dawn knew it, she had a lot of jewelry and knew what things cost.\n\n\"Oh my, that's a lot, $800?\"\n\nDawn looked down at the opal while she pulled her shirt up a little further.\n\n\"That's a lot isn't honey, I don't think I can spend that much.\"\n\nDawn was going to play this guy. I looked at Jill and she had a smug look on her face.\n\n\"That is a lot honey, maybe you can get something cheaper,\" I said to go along with her.\n\n\"I guess so.\"\n\n\"I will make you a special deal, $700,\" the man said.\n\n\"Hmmm, I don't know, that is still a lot.\"\n\n\"Honey, do you think the opal hangs down to far, I don't want it down inside my shorts.\"\n\n\"What are you going to wear it with?\"\n\n\"I thought it would look good with my bikini, but I think it would hang down over the front and you wouldn't be able to see it.\"\n\n\"Just pull your shorts down and see,\" I said.\n\n\"I don't have my bikini on under my shorts,\" Dawn said looking up at me.\n\n\"Well that presents a problem,\" I said.\n\n\"I'll just unbutton my shorts and see how far it hangs down.\"\n\nDawn let go of her shirt and reached down and unbuttoned the front of her shorts and unzipped them all the way down and pulled them open. She then pulled her t-shirt back up so she could see, but when she pulled it up this time she pulled up far enough that I could see the bottom of her breast. Dawn leaned forward to look at the opal.\n\n\"Shit! I can't tell, when I lean forward it drops down and my damn shorts won't stay open.\"\n\nI looked at the salesman and he was cautiously trying to look at Dawn's breast and open shorts at the same time.\n\n\"Jill would you pull the front of my shorts open so I can see?\"\n\nJill looked up at me and smiled the she reached around Dawn's waist from behind and pulled Dawn's shorts open and down some. Dawn's shorts were pretty small to start with but now we could see everything but the top of her pussy lips. Dawn looked down to see.\n\n\"It does look nice, but that is still a lot of money.\"\n\n\"Just for you 650,\" the man said as he took another look at Dawn's breast.\n\n\"What do you think honey?\"\n\n\"I think it would look good when you are wearing your bikini, but that is still a lot of money.\"\n\n\"What do you think Jill?\"\n\n\"Let me look.\"\n\nJill moved around to Dawn's front then grabbed the opening of Dawn's shorts and pulled them open and down, down far enough I could now see the top of Dawn's slit.\n\n\"I think it looks pretty nice, what do you think Mike?\"\n\nMike leaned forward and took a look at down's exposed mound.\n\n\"Looks good to me.\"\n\n\"What do you think sir?\" Jill asked the salesman as she moved so he could see.\n\n\"I...I think it looks lovely.\"\n\n\"Oh...it's too bad it cost so much, do you have a smaller opal that doesn't cost as much,\" Dawn asked the salesman.\n\n\"That is the only one I have, I think it looks very good on you ma'am.\"\n\n\"I don't know, do you have a mirror?\"\n\n\"Yes ma'am.\"\n\nThe salesman produced a large square mirror and held it up.\n\n\"Oh good, now I can see,\" Dawn said.\n\nDawn stood up straight and pulled her top up some more so she could 'see'. I could almost see her nipples as she looked in the mirror.\n\n\"Tilt the mirror up some.\"\n\nThe man tilted the mirror up while he stared at Dawn's breast. The older man was really starting to take his time staring at Dawn.\n\n\"It is pretty isn't honey,\" Dawn said as she turned from side to side to look.\n\n\"Yes, but that is still a lot of money for something you are only going to wear with your bikini.\"\n\n\"Well okay, I won't get it,\" Dawn said with a pout.\n\nJill stood up with a smirk on her face and released her hold on Dawn's shorts.\n\n\"Sir would you unhook it please,\" Dawn said as she walked toward the poor man.\n\nI hadn't noticed but the hook was right next to the opal hanging down over Dawn's crotch.\n\n\"Are you sure ma'am?\"\n\n\"Yes, it's too much money.\"\n\n\"No, I mean do you want me to unhook it?\"\n\n\"Yes, go ahead,\" Dawn said casually with a pout again.\n\nThe guy reached down with his hands and started to reach for the hook as Dawn moved forward.\n\n\"I tell you what, just for you because you are out in this rain, 575.\" He said as he pulled his hands back.\n\nDawn turned to me and pleaded.\n\n\"Honey pleeeaasssee, I'll let you fuck me in the ass tonight!\"\n\n\"Okay then.\"\n\nDawn let go of her shirt and wrapped her arms around my neck and gave me a kiss.\n\n\"Thank you, thank you, thank you!\" Dawn exclaimed as she jumped up and down.\n\n\"Let me get you a box ma'am.\"\n\n\"That's okay, I'll just wear it.\"\n\n\"Okay.\"\n\nI turned away from the salesman and pulled out my money clip and peeled off 6 $100 bills and put my money clip back in my pocket and handed the money to the guy. He got my change and receipt. Dawn was buttoning up her shorts as we waited.\n\n\"Thank you sir, ma'am.\"\n\nWe went to leave and noticed the sun was back out and the rain had stopped.\n\n\"These showers never last long. I think your jewelry looks hot Dawn, I like the way you negotiated,\" Jill said.\n\nJill and Dawn laughed as we walked back in the sun. We walked through some more of the shops and looked around. Dawn found some trinkets she bought and stopped at another juice stand and got some pineapple juice.\n\n\"It is getting hot and steamy out here, these wet clothes are starting to stick to me,\" Dawn said as she stood in the hot sun and drank her juice. \"I need to find something to change into.\"\n\nDawn walked across to one of the many t-shirt shops. She looked through the t-shirts and found a blue one that said 'Maui' on the front and held it up to her chest. It was big and baggy and hung down to the tops of her thighs.\n\n\"What do you think,\" she said as she turned to me.\n\n\"A little big,\" I said.\n\n\"I'll take it, pay the lady.\"\n\nThe lady that had been helping Dawn said the shirt was $25. I gave her the change I had from the jewelry store.\n\n\"Thank you sir.\"\n\nDawn handed the bag she was carrying to Jill and then reached down and grabbed the bottom of her still wet t-shirt and began pulling it up. Since it was so tight it took her a minute to get it over her head.\n\n\"Ma'am!\" The lady I gave the money to said.\n\nDawn took the new shirt and held her arms up and put it on. I looked around the shop to see if anyone was watching and saw a young guy looking through some shirts watching.\n\n\"Damn Dawn,\" Jill said.\n\n\"It's wet and sticky, this is better.\"\n\nThen I watched as Dawn reached under the shirt and unbuttoned her shorts and pushed them down around her legs and stepped out of them. Mike was watching closely. Dawn took the wet shirt and shorts and asked the lady if she had a bag. The lady got her a bag and Dawn put her clothes in it.\n\n\"Thank you,\" she said to the lady.\n\n\"You are welcome.\"\n\n\"This is better, Jill you want to get out of your wet clothes?\"\n\n\"I'm okay.\"\n\n\"At least get out of that wet shirt and bikini top,\" Dawn egged her on.\n\n\"Yes, honey why don't you get out of that wet top,\" Mike prodded as he held a red shirt up to her.\n\n\"I can't.\"\n\n\"Nobody is watching, go ahead,\" Mike said.\n\nJill paused and looked around a moment, she noticed the young guy looking at us.\n\n\"Here, I'll help.\" Mike grabbed the bottom of Jill's shirt and began lifting it up.\n\nJill let him pull it off over her head. The bikini top Jill had on was pretty skimpy and showed a lot of her breasts.\n\n\"Okay, give me the shirt,\" Jill said.\n\n\"The wet top too,\" Mike said.\n\n\"Mike!\"\n\nMike stood there holding the shirt waiting.\n\nJill slowly reached behind her and untied the top then reached up and untied it from around her neck.\n\n\"Give me the shirt,\" she said as she held her top up with one hand.\n\nMike handed her the shirt, she tried to put it on with one hand while she held her top but it wasn't working.\n\n\"Oh hell!\" Jill said as she handed Mike her top and pulled the shirt over her head.\n\n\"You happy?\" Jill said as she looked at Mike.\n\n\"Very,\" Mike said with a laugh.\n\nMike paid for the shirt and Jill got a bag for her clothes and walked back out in the sun.\n\n\"Dawn, I can't believe that is all you are wearing,\" Jill said as we walked.\n\n\"I hope it doesn't rain again,\" Dawn said with a laugh. \"I'm hungry.\"\n\n\"There is a burger shop at the hotel by the pool,\" Mike told her.\n\n\"Let's go then,\" Dawn said.\n\nWe walked back down the road and back over to the hotel. As we entered the lobby and walked to the pool the concierge approached Mike and Jill.\n\n\"Ma'am are you stopping at the pool before you go to your room?\"\n\n\"Yes, we are going to grab some lunch,\" Jill told him.\n\n\"May I take your bags up to the room for you?\"\n\n\"Sure.\"\n\nJill handed him her bag and Dawn's and he walked away.\n\n\"Nice service,\" I said.\n\n\"That is what you get when the room is $3,000 a night,\" Mike said.\n\n\"It should come with something for that price,\" I told him.\n\nWe walked on out to the pool and found the burger place. We found a table with an umbrella and sat down. A waitress came out and we all ordered.\n\n\"Dawn, you are crazy!\" Jill said.",
        "\"What do you mean?\"\n\n\"Taking your clothes off in public like that!\"\n\n\"Hey, you were the one that got us to fuck on the airplane!\" Dawn exclaimed.\n\n\"There wasn't anyone around.\"\n\n\"We were there and the two girls behind us and the crew!\"\n\n\"That's different.\"\n\n\"How?\"\n\n\"It is. There weren't that many people around.\"\n\n\"I don't see how it is different, don't you like showing your body off? Mike do you like Jill showing her body off?\"\n\n\"Yes, I do, she has a great body and I wish she would show it off more,\" Mike said.\n\n\"Mike!\"\n\n\"Jill don't you get off letting other people watch you two fuck?\"\n\nI watched as Jill blushed slightly.\n\n\"Well...yes...but that is sort of a heat of the moment thing.\"\n\n\"But you get off on it right?\" Dawn asked.\n\nJill blushed a little more and didn't say anything.\n\n\"Mike do you like being watched or did you just want to look at me?\" Dawn said brashly.\n\nMike looked up at Dawn puzzled.\n\n\"It's fun to do I admit, but I did like looking at your body,\" Mike returned with a grin.\n\n\"Thanks. Do you two have sex in public often?\" Dawn asked.\n\n\"Oh no!\" Jill said.\n\n\"Well we sort of do it, we do have sex in different places but there are not people around,\" Mike said.\n\n\"So you two get turned on by the thought of getting caught?\" Dawn asked.\n\nThere was a long pause, Mike and Jill looked at each other for a minutes.\n\n\"I guess so,\" Jill said sheepishly.\n\n\"That is fun, but we enjoy knowing other people are watching,\" Dawn said.\n\n\"Really?\" Jill asked. \"Do you have sex in public a lot?\"\n\n\"Not in public, all the time, but we don't mind other people watching,\" Dawn said.\n\n\"Dawn gets really hot if she knows someone is watching or peeking,\" I told them.\n\n\"You two are crazy!\" Jill said about the time the waitress came with our food.\n\nAfter we finished eating Mike invited us up to the room for some wine. We went up and sat down in a couple of big sofas on each side of a table while Mike poured us some wine. \n\n\"Did you ask Dawn if she wanted to go on the bike ride?\" Mike asked me.\n\n\"What bike ride?\" Dawn asked.\n\nMike and Jill told them about the downhill bike ride they were going to go on Monday. Dawn said she wanted to go.\n\n\"I'll call and add you two to the list. They will pick us up at the hotel about 3:00 A.M., they take you to the top of the volcano early so you can watch the sun come up,\" Jill told us.\n\n\"Wow, that will be an early morning for us to get here by then,\" I said.\n\n\"Why don't you two just come Sunday night for dinner and stay here, there are several bedrooms,\" Mike said.\n\n\"That sounds like a good idea,\" Dawn told him.\n\n\"Good, I'll make reservations at the restaurant, they have excellent food.\"\n\n\"Did you decide if you want to go with us tomorrow night to the wet t-shirt contest?\" Dawn asked.\n\n\"I don't know,\" Mike said.\n\n\"Dawn is going to compete,\" I said.\n\n\"Really?\" Mike replied interested now.\n\n\"James is competing too,\" Dawn said.\n\n\"In a wet t-shirt contest?\" Jill asked.\n\n\"No, a best package contest.\"\n\n\"A what?\" Jill asked.\n\n\"They have a contest for men, they wear thongs and whoever gets the most money stuffed in there thong wins,\" Dawn told her.\n\n\"You can't be serious!\" Jill said.\n\n\"You guys should come, you can help stuff the ballot box,\" Dawn said with a giggle.\n\n\"You want to go Mike?\" Jill asked.\n\n\"Sure if you want to.\"\n\n\"Why don't you enter the wet t-shirt contest Jill?\" I asked.\n\n\"I couldn't do that!\"\n\n\"You have some nice tits, you might win.\" I said.\n\n\"I couldn't.\"\n\n\"Mike, would you get turned on watching Jill show off for 300 people?\" Dawn asked.\n\nMike looked at Jill and said, \"Why don't you do it honey.\"\n\n\"Mike, I couldn't do that!\"\n\n\"Think about it then.\" Dawn said.\n\n\"Where is it at?\" Mike asked.\n\n\"I'm not real sure, our housekeeper said it was an annual thing that mostly the locals come to. She said it was a big party and went on all night. I'm having a limo coming to pick us up and hang around and drive us back since there will probably be plenty of drinking.\"\n\n\"Sounds like a big time,\" Mike said.\n\n\"Why don't you two come to the house Saturday for lunch and just ride with us. You can stay at the house, there is no telling how late we will be.\"\n\n\"Okay, you want to do that Jill?\" Mike asked.\n\n\"Sure.\"\n\n\"Jill, bring a skimpy bikini and a white t-shirt...in case you change your mind.\" Dawn told her.\n\n\"You two want some more wine?\" Mike asked.\n\n\"I've had enough, I'm driving,\" I told him. \"Our housekeeper said you don't want to get stopped for DUI here.\"\n\nWe sat and talked for another hour, Dawn kept trying to talk Jill into the contest, Mike and I talked about his business. Dawn and Jill had had several more glasses of wine.\n\n\"This really is a nice room you guys,\" Dawn said as she leaned back on the sofa and drank her wine.\n\n\"We have stayed here a couple of times. The hotel is nice and we can go SCUBA diving off the point,\" Jill said.\n\n\"You two SCUBA dive?\" Dawn asked.\n\n\"Yes, it is beautiful here and the water is very warm and clear.\"\n\n\"I have always thought I would like to try that,\" Dawn said.\n\n\"They have a half day class here you can take and then go out with an instructor.\"\n\n\"Honey would you like to do that?\"\n\n\"Maybe, I'll think about it. That sounds like fun!\" Dawn said as she leaned back more into the sofa.\n\nDawn had downed about 4 glasses of wine and was starting to get giggly. She leaned forward on the edge of the sofa and poured herself another glass of wine. When she leaned back into the large sofa the shirt she was wearing had slipped up her thighs a lot. I saw Jill look down at her legs as she drank her wine.\n\n\"Mike, show me the balcony,\" I said.\n\nMike got up and we went out on the huge balcony, the view was great.\n\n\"You two had sex out her yet?\" I asked.\n\n\"No, but that sounds like a good idea.\"\n\n\"Dawn and I have been having sex down on the private beach at night.\"\n\n\"No one is around?\"\n\n\"No, the beach is part of the property for the house.\"\n\n\"That is convenient.\"\n\n\"Yes, it is a nice house.\"\n\n\"You have a housekeeper also?\"\n\n\"Yes, she is a young college girl, she keeps the place cleaned up, does the laundry and cooks for us if we want.\"\n\n\"That sounds nice.\"\n\n\"Yes, she is pretty sweet, she is a local girl.\"\n\n\"Is she nice looking?\"\n\n\"Yes, she is, she is competing in the wet t-shirt contest and plans on winning it.\"\n\n\"Sounds interesting.\"\n\nMike and I talked about SCUBA diving for a while, he wanted me and Dawn to come and go diving with them. He pointed out the black lava peninsula sticking out from the island and said that there was a lot of wildlife that lived in it and we would enjoy it. Mike asked me what I did for a living since I had told him I was semi-retired. I told him that I was a Psychologist and taught at the local university part-time, I didn't want him asking a lot of questions. He asked about Dawn's job and I told him what she did. Then we talked about all the places he and Jill had traveled around the world.\n\nWe went back inside to get out of the sun. When I walked in I noticed that Dawn had her shirt pulled up to where I could see her pussy and she had her legs spread. I looked at Jill and could see that she was looking closely. When I sat down beside Dawn she asked me to pour her another glass of wine.\n\n\"I think you have had enough, don't forget we have plans for tonight.\"\n\n\"Okay.\"\n\n\"What are you two doing tonight?\"\n\n\"Practicing for the contest,\" Dawn piped in giggly.\n\n\"You two are serious about this!\" Jill said.\n\n\"I'm going to win,\" Dawn said.\n\n\"Good luck!\" Mike said.\n\n\"We better get going guys, come on Dawn.\"\n\nI got up and pulled Dawn up, she was a little wobbly, I watched Mike pull Jill up and she was a little drunk too.\n\n\"We'll walk you down to the car,\" Mike said.\n\n\"We can find it, Jill doesn't look like she needs to try and walk anywhere,\" I laughed.\n\nJill and Dawn giggled as we headed toward the door.\n\n\"See you two tomorrow around lunch,\" I said.\n\n\"Don't forget your bikini and t-shirt,\" Dawn said to Jill.\n\nI walked Dawn to the car and we headed back with the top up and the A/C on.\n\n\"Did Jill enjoy looking at your pussy,\" I asked after we had been on the road a few minutes.\n\n\"Yes she did, she is into girls.\"\n\n\"How do you know?\"\n\n\"She told me. She said she has a girlfriend that comes over every few months.\"\n\n\"Does Mike know?\"\n\n\"Yes, he watches them sometimes and he knows that she comes over when Jill doesn't go with him out of town.\"\n\n\"She sounds like fun.\"\n\n\"She will be, but she has never had sex with another man with Mike watching.\"\n\n\"Don't push her then.\"\n\n\"I'm not.\"\n\nWe drove on to the house, Dawn had fallen asleep while I drove. I helped her out of the car and then we got to the house.\n\n\"Did you two have a good time with your friends?\" Lieke asked when we got inside.\n\n\"Yes, we went shopping,\" Dawn said.\n\n\"Lieke, why don't you fix some coffee,\" I told her.\n\nLieke headed for the kitchen and I followed Dawn to the living room. She sat down, pulled her shirt off and lay down on the sofa and curled up and went back to sleep.\n\n\"Never mind the coffee Lieke.\"\n\nLieke walked into the living room in a few minutes carrying a tray with a pitcher and some glasses. She was still wearing her kimono.\n\n\"Come sit here,\" I motioned for her to sit beside me on the other sofa.\n\nLieke sat down and poured me a glass of fruit punch.\n\n\"Is she tired?\"\n\n\"Drunk.\"\n\nLieke giggled.\n\n\"Our two friends are coming tomorrow about lunch and are going to ride with us to the contest and then stay here tomorrow night, is that okay?\"\n\n\"Of course. Would you like for me to fix a dinner for all of you?\n\n\"Yes that would be good.\"\n\n\"We are going to stay with them Sunday night, they are taking us on a downhill bike ride that starts at 3:00 A.M.\"\n\n\"You two will like that, I was going to tell you about it.\"\n\n\"We won't be back here until the afternoon Monday so you can take off if you want.\"\n\n\"Can I hang around here, I want to hang out on the beach after the gardeners are gone.\"\n\n\"You going to hang out nude?\"\n\n\"Yes, I'll have the beach to myself.\"\n\n\"Just hang out naked here all day then.\"\n\n\"I can't until after the gardeners leave, they work for Alanna.\"\n\n\"Okay.\"\n\nLieke and I sat and talked until about 6:30 while Dawn slept. Lieke started dinner and Dawn finally woke up.\n\n\"You awake?\"\n\n\"Oh...yes,\" Dawn said as she stretched.\n\n\"You sober?\"\n\n\"Yes, I was just tired, sorry. What have you been doing?\"\n\n\"Lieke and I have been sitting here talking and watching you sleep.\"\n\n\"Is that's all?\"\n\n\"Yes that is all.\"\n\n\"Too bad.\"\n\n\"You want some coffee?\"\n\n\"No, I'm fine. I am going to help Lieke cook.\"\n\nI relaxed while the two of them cooked, I heard the two of them giggling on and off. I wasn't sure what they were cooking but it smelled great. I got up and went to the wine cooler to see what wine was in the house. I found bottle of white I recognized and decided that it would be good with dinner.\n\n\"Dinner will be ready in about 15 minutes,\" Dawn said.\n\nI decided to go upstairs and rinse off and change clothes, the clothes I had on were still a little clammy. When I returned I only had on a short robe, Dawn and Lieke were putting the food on the table. I went and got the bottle of wine I had picked out and we all sat down to eat. Lieke had made something with pork and pineapple, it looked and smelled great.\n\n\"Lieke, this smells great,\" I said as I poured her a glass of wine.\n\n\"Thank you.\"\n\n\"Lieke still says she is going to win tomorrow,\" Dawn said.\n\n\"Did you tell her Jill might be entering?\"\n\n\"Yes.\"\n\n\"The more the better,\" Lieke said.\n\n\"Tell me more about the rules for the contest,\" I asked.\n\n\"It doesn't cost anything to enter, they get the prize money from the $50 cover charge. I know it sounds high but it's a long party and they have an all you can eat buffet that comes with the price.\"\n\n\"We will pay for yours,\" I told her.\n\n\"Thanks! The women's wet t-shirt contest is first, it will start around 11:00.\"\n\n\"What are the rules?\" Dawn asked.\n\n\"Remember you can't expose yourself.\"\n\n\"What is considered exposing yourself, I mean...\"\n\n\"You can't take your shirt off or expose your baretits...or your bottoms, they will disqualify you and you will get a ticket. All you have to do is dance and move to the music being as sexy as you can while they walk by and pour water on you.\"\n\n\"Can you touch yourself?\" Dawn asked.\n\n\"Yes, you can run your hands around on your body and rub your breasts, the more the better.\"\n\n\"But a thong is okay?\"\n\n\"Yes, almost all the women will be wearing one. If you have a white ass, you won't win. The crowd wants to see that you sunbath in the nude.\"\n\n\"How do they pick a winner?\"\n\n\"It's like a dance contest, the judges will come by and tap you out as the crowd cheers until it is down to just two women and then the crowd will pick the winner.\"\n\n\"How do you make sure you don't get tapped out?\" Dawn asked.\n\n\"The judges watch to see if the crowd is cheering for you. They will let everyone dance for about 20 minutes before they start knocking people out. There will probably be about 20 or 30 women on the big stage, try to get in the middle of the stage, as people are tapped out, move toward the middle if you get on the end.\"\n\n\"This sounds like fun!\" Dawn said.\n\nWe ate for a few minutes while Dawn and Lieke talked more strategy.\n\n\"What about the guys contest?\" I asked.\n\n\"There probably want be but about 20 guys, it is usually the same guys every year with maybe one or two new guys.\"\n\n\"What does it take to win it?\"\n\n\"You have what it takes to win it, trust me.\"\n\n\"No, what are the rules and what do the guys do.\"\n\n\"The only rule for the guys is you can't expose yourself.\"\n\n\"But what if a guy starts hanging out?\"\n\n\"I said YOU can't expose yourself, if things poke out you didn't do it. And...\"\n\nLieke paused.\n\n\"What?\"\n\n\"If someone pulls your thong down, it is okay.\"\n\n\"You are kidding?\" I asked.\n\n\"I have seen it happen, some of the women get pretty wild.\"\n\n\"They let them come up on stage?\"\n\n\"The guys start on stage and then move down to the front of the crowd so the women can stuff money in your thong.\"\n\n\"What is to keep people someone from taking the money out or if it starts falling out?\" I asked.\n\n\"You can pick someone to take the money out if you get a lot and hold it.\"\n\n\"I want you to do that then,\" I told Lieke.\n\n\"Okay....\"\n\n\"Anything else I should know?\"\n\n\"Don't be surprised if the women grab you and rub you while they are stuffing money in you thong.\"\n\n\"Dawn what have you talked me into?\"\n\n\"Oh James, it sounds like fun!\"\n\n\"Is that all of the contest,\" I asked.\n\n\"Except for the girls contest.\"\n\n\"What girls contest?\" Dawn asked.\n\n\"The last contest is a girls contest, they let pairs of women get up and show off.\"\n\n\"What do they do?\"\n\n\"It's for the lesbians, they get up and rub and kiss on each other and the couple the crowd likes the best wins $2,000. The guys love it.\"\n\nDawn looked over at me and smiled.\n\n\"Can you enter more than one contest?\" Dawn asked.\n\n\"Once you win, you can't compete the next week.\"\n\n\"No, can you enter more than one contest a night?\"\n\n\"I guess so, why?\"\n\n\"Why don't you and I enter the girls contest?\" Dawn asked Lieke.\n\n\"Are you kidding!?\"\n\n\"Haven't you ever made love to a woman Lieke?\"\n\n\"No...not really.\"\n\n\"We could do it, it would be fun.\"\n\n\"I couldn't do that Dawn.\"\n\n\"I bet you could do it just for fun.\"\n\n\"No way!\"\n\n\"You two ready to practice,\" I asked so Dawn would stop pressing.\n\n\"Are you ready big boy?\" Dawn asked.\n\n\"Ready if you are?\"\n\n\"Let's clean up the table and we can go and get changed,\" Dawn said as her and Lieke giggled.\n\nI help the two of them clear the table and put the dirty dishes in the dishwasher.\n\n\"You two go change, I'll put the rest of the food away,\" Lieke said.\n\nDawn ran through the house and up the stairs, I followed behind her at a slower rate. When I caught up with her in the bedroom she was pulling up the lacey see through suit that Lieke had her buy.\n\n\"Is that what you are going to wear?\"\n\n\"Don't you think it looks good?\"\n\n\"Oh yes, it looks good.\"\n\n\"Now put yours on,\" Dawn said with a giggle.\n\nI squeezed into the thong I had and adjusted everything so that it was inside. Dawn walked over and squeezed me through the pouch.\n\n\"You are going to win, I'm sure.\"\n\n\"Where is your t-shirt?\" I asked.\n\n\"Lieke said she had one of hers for me.\"\n\nWe headed back downstairs, we heard the stereo going loudly when we got to the bottom. When we entered the living room Lieke was swaying to the music practicing her dance. She had on the same bikini bottom Dawn had and had pulled on a very tight t-shirt. Her breasts were already straining through the material. She looked incredibly hot.\n\n\"I think you have some competition honey.\"\n\n\"We'll see.\"\n\nDawn ran into the living room and started dancing with Lieke. I watched the two of them dance and laugh for a few minutes.\n\n\"You two ready?\" I asked them.\n\nThey stopped dancing and Lieke picked up a t-shirt and handed it to Dawn. It took Dawn a minute to get into it because it was so tight. Her breasts were straining through the material, nipples poking out.\n\n\"You two look hot!\"\n\n\"You don't look so bad yourself,\" Lieke said with big smile.\n\n\"Let's go outside so I can water you down.\"\n\n\"We were just going to practice our dance,\" Dawn said.\n\n\"Nope, dress rehearsal, let's go.\"\n\nLieke ran over to the stereo and turned it up louder before she followed Dawn out on the patio. I pulled up a chair by the pool and sat down.\n\n\"Show me what you got!\"\n\nLieke dove into the pool and Dawn followed her. The two of them got out and started dancing in front of me. The t-shirts were transparent now, they both looked very hot as they danced. I watched the two of them dance, Dawn and Lieke both had some hot moves. I cheered them on as they got into some sexier moves. I watched as Dawn started sliding her hands up and down her sides, rubbing each breast as she did. Lieke saw what she was doing and began to rub her breasts.\n\nI watched the two of them try and outdo each other. Since both of them had long black wet hair, they would look like sisters from a distance. The only difference was that Dawn's tits were bigger and Lieke's hair was down to her ass. I watched the two of them pull down on the hem of the t-shirts making their nipples poke through the fabric. While they continued I got up and went to the kitchen and returned.\n\nWhen I sat down I motioned for Dawn to come over to me. She wiggled and danced her way over to me rubbing and squeezing her breasts as she did. When she was standing in front of me I grabbed the front of her t-shirt and stuck a kitchen knife through it about belly button high and then tore if off around her waist and cut it away. Dawn looked down at me and smiled.\n\nI motioned for Lieke to come over and I did the same to her t-shirt. Now that their stomach was exposed they begin to rub their stomach as they wiggle their hips back and forth. I watched as Dawn turned toward Lieke and ran her hands up under the front of her wet t-shirt and rubbed her tits. Lieke took the hint and did the same thing, now they looked really hot. They danced for me for about 15 more minutes before they stopped and started laughing.\n\n\"I think you two are winners!\" I said.\n\n\"Thanks for the idea of cutting of the t-shirt.\" Lieke said. \"There is nothing in the rules that says we can't do that and rub our tits.\"\n\nDawn laughed and then Lieke started laughing again.\n\n\"I think we have a good shot at winning!\" Lieke told Dawn. \"There will be plenty of women with big tits there but they usually don't win, the crowd likes sexy.\"\n\n\"Your turn now!\" Dawn said to me as her and Lieke pulled me from the chair.",
        "I was a little embarrassed but I danced to the music gyrating my hips giving them my best male dancer moves. Lieke and Dawn started whistling and howling as I kept it up. I walked over to where the girls were sitting and gyrated and thrust my hips at them. Dawn reached up and rubbed my cock making me start to get hard. I turned around and pushed my ass back and she ran her hands up and down the cheeks of my ass.\n\nI turned back around and placed my legs on each side of Lieke's in the chair and gyrated in front of her. She looked a little embarrassed for a moment than she took her hand and rubbed my cock through the leather. I was a little surprised but she started getting into it. I felt my cock growing as she kept rubbing, I looked down at Lieke and she was watching it grow. After several minutes the tip was pushing up against the tight waistband trying to get out. Dawn reached over and grabbed the front of the thong and pulled it down letting my erection poke out. Lieke stopped rubbing and started whistling.\n\nI stopped dancing after the two of them started howling and cheering.\n\n\"You are going to win James, no doubt. I can say the women have never seen anything like you before!\"\n\nI reached down and tried to see if I could get everything back in but I couldn't so I just pushed the tight thong down and took it off. Dawn and Lieke followed by pulling off their t-shirts.\n\n\"Let's go for a swim,\" I said as I turned and dove in the pool.\n\nWhen I came up I saw the two of them diving in, they had removed their bikini bottoms. Dawn came up out of the water and grabbed me around the neck and tackled me, when I got back up I grabbed her and picked her small body up and threw her about 10 feet. She came up laughing and screaming. I went after Lieke but she swam away. We played and swam in the pool until the sun went down.\n\n\"Lieke, Dawn and I are going to walk down the beach you want to come with us?\"\n\n\"Sure, let me go get some beach towels.\" Lieke hopped out of the pool and ran toward the house to get some towels.\n\n\"She is hot,\" Dawn said as we watched her bounce away. \"I need to change her opinion about women though.\"\n\n\"Don't push her, I don't want to run her off before I get to fuck her.\"\n\nDawn splashed me with water and hopped out of the pool before I could grab her. Lieke was running back toward the pool when I got out.\n\n\"Let's go, I got the towels.\"\n\nI followed Dawn and Lieke as they walked in front of me toward the beach, there was enough light left by the setting sun to enjoy their two perfect bodies as they walked. We walked down to the edge of the tide and spread out the towels and sat down on the warm sand.\n\n\"It doesn't get much better than this,\" I said.\n\n\"I want to thank you two again for letting me hang out here,\" Lieke said.\n\n\"We enjoy having you here with us. Will you reconsider entering the contest with me tomorrow night?\"\n\n\"I couldn't, I would be too embarrassed, I'm not like that.\"\n\n\"Like what?\" Dawn asked.\n\n\"Those women are lesbians.\"\n\n\"Not necessarily Lieke, they may just be having fun.\"\n\n\"But still...\"\n\n\"You said you let a woman make love to you before, do you consider yourself a lesbian?\"\n\n\"No!\"\n\n\"Did you enjoy it?\"\n\n\"Sort of, it was just that one time.\"\n\n\"Did you return the favor?\"\n\nLieke paused and look at Dawn.\n\n\"Just that once,\" Lieke said softly.\n\n\"That is not what you said before.\"\n\n\"I didn't want you to know.\"\n\n\"Did you enjoy that?\"\n\n\"...it was fun.\"\n\n\"Lieke, I like to make love to women, do you think I am a lesbian?\"\n\nLieke looked first at Dawn and then to me and back to Dawn.\n\n\"You do? What about James?\"\n\n\"He likes to watch, he lets me do what I want.\"\n\n\"You are kidding?\"\n\n\"No I am not, so do you think I am a lesbian?\"\n\n\"No...I don't guess so?\"\n\n\"Lieke, women really know how to please each other, you are not necessarily a lesbian if you enjoy it and it is just labels.\"\n\n\"Maybe you are right, but I still can't do the contest.\"\n\n\"Okay, but I want you to consider what I said.\"\n\n\"What do you mean?\"\n\n\"If you want to experiment, I would like to teach you.\"\n\nLieke looked at Dawn puzzled then looked at me. I winked at her and she smiled.\n\n\"Maybe,\" she said with a giggle.\n\n\"You want to try now?\" Dawn asked.\n\n\"Not now, let me think about it.\"\n\n\"Okay. James and I are going to fuck, you want to watch or join in.\"\n\n\"You guys are crazy, I'll leave you two alone.\"\n\n\"No, you stay, we like an audience. The offer still stands if you want to fuck James.\"\n\nLieke giggled.\n\n\"Can I watch?\"\n\n\"Yes you can and you can join in anytime if you wish.\"\n\nI lay down between the two beauties, Lieke sat and watched as Dawn rolled over and began sucking my cock. Dawn took her time getting me nice and hard, deep throating me over and over as Lieke watched. Dawn placed her mouth over the head of cock and began stroking me over and over. I looked over at Lieke and she was watching Dawn, I placed my hand on her thigh and she jumped.\n\n\"You want to help?\"\n\nI watched as Lieke bit her lower lip and looked at me.\n\n\"Come here Lieke,\" Dawn said.\n\nLieke leaned forward and Dawn grabbed her hand and wrapped it around my cock and helped her start stroking. Lieke got the idea and continued. Dawn placed her mouth back over the tip and sucked. I was stroked and sucked for several minutes before Dawn let go of the tip of my cock.\n\n\"Lieke, you want to suck his cock?\"\n\nLieke looked up at Dawn and then down at her hand stroking my cock then leaned forward slowly and slipped her lips around the head of my cock. I watched as this young thing was on her knees leaning over and sucking my cock. After about 30 seconds she started getting into it and began bobbing her head up and down. She went on like this getting more and more into her mouth after about 5 minutes.\n\nDawn reached up and rubbed the back of her head as she slipped her mouth up and down my cock while she stroked it. I felt Lieke pause a moment when Dawn started rubbing her hair. Lieke stopped stroking and started working her head up and down more, taking me a little further into her mouth. Dawn ran her hand down Lieke's back rubbing her dark skin. Lieke jumped a little when Dawn ran her hand across her ass. Lieke kept going while Dawn rubbed up and down her back.\n\nDawn took her hand and pulled all of that long black hair back over Lieke's shoulder, then I watched as she slid a hand around and touched Lieke's breast. Lieke sat up and took a deep breath pulling away from Dawn's hand.\n\n\"How do you get all that down in your mouth, he is huge?\"\n\n\"It takes a little practice, you want to try?\"\n\n\"I would choke.\"\n\n\"You don't know until you try.\"\n\n\"I have never had anything long enough to try,\" Lieke said and giggled.\n\nLieke looked at Dawn and then leaned forward again and placed her mouth back over my cock.\n\n\"Just relax and ease down,\" Dawn told her.\n\nI watched as Lieke slowly lowered her head down. She was doing a pretty good job when I felt the tip of my cock touch the back of her throat. She paused a moment but didn't choke then pushed down a little further and held it. I couldn't tell but I thought I felt my cock slip further into the back of her mouth. Lieke held it for a long time and then pulled off gasping for air.\n\n\"Very good, you didn't gag or choke,\" Dawn said.\n\n\"I don't have a gag reflex, never have.\"\n\nMy cock suddenly got harder.\n\n\"You will make some man happy someday,\" I told her laughing. \n\n\"Have you ever taken one of your boyfriends down your throat?\" Dawn asked.\n\n\"Never wanted to, they always tried to shove my head down on their cocks.\"\n\n\"That won't happen, you take it nice and slow.\"\n\n\"I don't think I can get him down my throat, he is too big.\"\n\n\"You would be surprised what you can do if you want to.\"\n\n\"If you want to try to may I suggest you straddle James' head in a 69, it will make it easier.\"\n\nLieke looked at me for a second.\n\n\"You sure?\"\n\n\"Yes I am.\"\n\nLieke look at me as she slowly moved her legs toward my head.\n\n\"Go ahead Lieke,\" Dawn said.\n\nLieke slowly lifted her legs and moved toward me, I grabbed her leg and pulled it on over and then grabbed her hips and moved her so I could get at her pussy. I felt her mouth cover my cock again and begin to slide down. I licked her slit from front to back.\n\n\"Oh my god!\" I heard Lieke scream. \"I can't do this if he is licking me.\"\n\n\"James stop,\" Dawn said.\n\nI lowered my head and just enjoyed the view while Lieke slipped her mouth back down on my cock. I felt the tip of my cock touch the back of her throat again, this time she went a little further, letting the tip of my cock slip into her throat. She held it there for a while and then came up for air. When she took her mouth off my cock for a second I licked her pussy again.\n\n\"Oh god!!\"\n\n\"James!\" I heard from Dawn.\n\nLieke stroked my cock a few times and then lowered her mouth down again, this time I felt several inches slide down her throat, she stroked my cock a few times before she pulled back up and bobbed her head up and down a few times then she went back down again. She pushed down aggressively and I felt my cock slip down her throat and her lips only and inch or so away from the base of my cock. Lieke had my attention now.\n\n\"Mmmmm,\" came from Lieke.\n\nDawn looked at me and winked, she took a chance and began rubbing Lieke's back again.\n\nAnother \"mmmmmm\" came from Lieke as she came up and sucked on my cock while she stroked it.\n\nShe shifted a little and then I felt my cock sliding down her throat, she pushed all the way and I felt her lips touching my groan. She was incredible. She pulled up to get some air then went down all the way again. She definitely had my attention now. I felt my cock slid out of her throat as she came up and then she went back down, this time moving her head up and down so the head of my cock slipped in and out of her throat.\n\n\"Mmmmm, mmmmm, mmmmm!\" I felt on my cock.\n\nLieke kept this up for a while before she came up for a rest.\n\n\"I didn't know I could do this,\" Lieke said while she stroked my cock.\n\n\"Lieke have you ever had a guy come in your mouth?\" Dawn asked.\n\n\"Once, I sucked on a guy about 30 seconds and he came in my mouth.\"\n\n\"Did you like it?\"\n\n\"I guess, he jerked his cock out of my mouth as soon as he did it.\"\n\n\"And that is the only time?'\n\n\"Yes, that was it.\"\n\n\"If you keep going down on James he is going to come.\"\n\n\"That's okay.\"\n\n\"When you feel him start to come go down all the way and let him come down your throat.\"\n\n\"Okay.\"\n\nLieke slipped her mouth back down on my cock and began stroking me real hard while she sucked on the tip. I was definitely going to come in her mouth if she kept this up. I felt Lieke's mouth slide down my cock and my cock slip back into her throat. She kept bobbing up and down letting my cock slid in and out of her throat. I felt everything begin to tighten up, Lieke was going at it hard now.\n\n\"Mmmmm!!\" Came from Lieke as my cock began to swell.\n\nI pushed up into her mouth with my hips as I felt my cum building. Lieke only went faster. I thrust against her mouth several time as everything built up inside me.\n\n\"I'm going to come!!\" I shouted.\n\nLieke shoved her mouth down as far as she could and I shot my first load down her throat.\n\n\"Oh god!!\" I moaned.\n\nThen I thrust up and shot two more loads down her throat. I felt her pull up and she began to stroke my shaft real hard and fast. I moaned loud and thrust up into her mouth again feeling another load go into her mouth.\n\n\"Mmmmm!!\" Came from Lieke as she pumped and sucked.\n\nI humped her mouth several more times before I stopped. Lieke kept stroking and sucking the remaining cum from my cock. Lieke was killing me. I reached up and wrapped my arms around her ass and pulled her pussy down to my face and drove my tongue in.\n\n\"Ohhh!!!\" Came from Lieke when she finally stopped sucking on me.\n\nHer little pussy was soaking wet. I pushed my tongue up into her as far as it would go. She screamed and pushed back against me. I tongued her little pussy and sucked in her lips until she began to squirm and moan. I pulled her back some and sucked her clit in my mouth.\n\n\"Oh my god!!!\" Lieke screamed over and over.\n\nI tongued her swollen clit while I sucked even harder. All I could hear was screams of pleasure before Lieke began to jerk against my mouth. I held on tight as she thrashed around trying to escape my grasp. She jerked several more times real hard.\n\n\"Ahhhhh!!!\" I heard her scream as I felt her juices flow into my mouth.\n\nLieke screamed several more times as I felt her orgasm over and over. I wanted to drive my tongue in her ass but she was trying to pull away too hard for me to let go of her. I drove my tongue back into her now tight pussy.\n\n\"Oh shit!!!\" Lieke screamed as she pushed back hard against my mouth.\n\nI drove my tongue in and out of her as fast as I could.\n\n\"I'm coming again!!!\" She screamed as I felt her jerk again.\n\nMore of Lieke's juices ran down my chin and neck as she screamed.\n\n\"Oh my god stop, please!!!\"\n\nI released my hold on her and she slid forward and collapsed on me. I looked over at Dawn and she was fingering herself while she squeezed one of her tits. I felt Lieke breathing hard as she lay on me. She was moaning as she gasped for air.\n\n\"Oh god!\" I heard come from Dawn.\n\nI looked up again and Dawn was rubbing her clit like mad as she came. Dawn was moaning as she got herself off a couple of times. Lieke looked up to see what Dawn was doing, she just watched as Dawn fingered herself over and over.\n\n\"Oh my god!!\" Came from Dawn as she brought herself to an orgasm.\n\nLieke and I watched Dawn as she got off and then focused on us.\n\n\"That was good, Lieke you are hot!\" I said.\n\nLieke moved herself from my head and turned to look at me.\n\n\"Did I do it right?\"\n\n\"Oh yes, you did everything exactly right!\"\n\n\"Goody, that is the first time I have tried that.\"\n\n\"You did excellent Lieke,\" Dawn said as she leaned over and gently rubbed my cock. \"Did you like it?\"\n\n\"Yes, that was fun, and I had several incredible orgasms!!\"\n\n\"Like I said, older men are better lovers, they know what a woman needs.\"\n\n\"It was wonderful, I hope I can find a man that is as good as James.\"\n\n\"Lieke, if you want me to do it again while we are here, just ask,\" I said.\n\nLieke looked at me and smiled real big.\n\n\"You mean it?\"\n\n\"Yes, I'll give you whatever you want to do, you deserve it,\" I told her.\n\nShe looked at me and Dawn and then sat up and said, \"okay!\"\n\nWe all talked while Dawn stroked my cock back to life. Lieke stayed and watched as Dawn and I fucked for a long time, I even looked over and saw her playing with herself lightly. Much later we all went back to the house and went to bed.\n\nWhen Dawn and I went down for breakfast the next morning Lieke was working in the kitchen with no clothes on preparing a big bowl of fruit for breakfast.\n\n\"Finally, you look at home!\" Dawn told Lieke.\n\nShe turned and laughed as she finished the fruit. We sat down at the table when Lieke brought the fruit over and had a nice breakfast. It was nice seeing these two beautiful women sitting around naked. After we finished breakfast Lieke cleaned the house while Dawn and I went for a swim in the pool and then sat in the hot tub. It had been about an hour when Lieke came out and joined us in the hot tub.\n\n\"What do you want me to fix for your friends for lunch?\" Lieke asked later.\n\n\"Nothing special, just some sandwiches and stuff,\" Dawn told her.\n\n\"Okay, I'll fix something light and then we can have a big dinner.\"\n\n\"That sounds good,\" Dawn replied.\n\n\"What time will they be here?\"\n\n\"About 1:00 I think,\" Dawn told her.\n\nThe three of us hung out around the house the rest of the morning, Lieke and Dawn talked more strategy about the contest. About noon Jill called and said they were on their way and wanted to know if they needed to stop to pick anything up.\n\n\"I better go put some clothes on,\" Lieke said after I hung the phone up.\n\n\"Just put on your bikini if you want,\" I told her. \"If you want to be a tease where the white one.\"\n\nLieke headed for the bedroom downstairs she was staying in.\n\n\"What are you going to wear?\" I asked Dawn.\n\n\"I think I will just wear a bikini and a t-shirt, I'm sure we will end up in the pool or on the beach.\"\n\nI followed Dawn upstairs and she put on her suit and a t-shirt, I put on some shorts and a shirt.\n\n\"I think I will see if Jill will enter the contest with me?\" Dawn said.\n\n\"You think she will?\"\n\n\"I think I can get her to do it, but I want to make sure she really gets into it so we can win.\"\n\n\"How are you going to do that?\"\n\n\"If she will do it I thought we could practice, if she does I'll make sure she is really hot before we leave.\"\n\n\"That sounds like fun, I'll bet Mike will really get into watching you two.\"\n\n\"All he is going to get to see for now is the two of us practicing our dance, he'll get to see more later.\"\n\nWe joined Lieke back downstairs, she was already working in the kitchen preparing lunch, she had on the see through white bikini. About 1:00 we heard Jill and Mike knocking on the door. Dawn and I went to let them in.\n\n\"Hi you two!\" Jill said when we opened the door.\n\n\"Come in, get out of the sun,\" Dawn said.\n\nMike and Jill came in to house, looking around as they entered.\n\n\"This is a really nice house,\" Jill said.\n\nDawn offered to show her and Mike around. It took about a half hour for them to tour the house and the garden before we all settled in the big room. Lieke came over and asked what everyone wanted to drink and then went to get the drinks.\n\n\"Cute housekeeper!\" Mike said as he watched Lieke walk off.\n\n\"She is pretty,\" Dawn said.\n\n\"Yes she is,\" Jill agreed. \"Does she usually wear just a bikini?\"\n\n\"We finally got her to loosen up some,\" I told her.\n\nLieke came back with beer and wine.\n\n\"Lieke you want to join us?\" I asked.\n\n\"I need to finish preparing lunch.\"\n\n\"Just let us know when it is ready,\" I told her.\n\nMike and Jill watched Lieke as she walked away.\n\n\"Jill did you decide if you want to enter the wet t-shirt contest with me?\" Dawn asked.\n\n\"I don't know I have never done anything like that in public.\"\n\n\"I think it will be a blast!\" Dawn said.\n\n\"James are you really going to enter the contest for men?\" Jill asked.\n\n\"I guess so, Dawn and Lieke talked me into it, I'll need you to help stuff the ballot box,\" I laughed.\n\nWe told Mike and Jill how the contest worked for the men and the women, Jill said she would have fun helping stuff my ballot box. Mike thought the whole thing sounded like a lot of fun. He was even still trying to talk Jill into entering.\n\n\"I couldn't get up on a stage and dance by myself,\" Jill said.\n\n\"You did a pretty good job of dancing with that hot chick in Germany last month,\" Mike told her.\n\n\"That was different.\"\n\n\"What did you do?\" Dawn asked.\n\n\"She was out on the dance floor at this club in Germany dancing with this really hot woman, she put on a good show then,\" Mike said.\n\n\"Jill, did you really do that?\" Dawn asked.\n\n\"Yes, we were having fun.\"\n\n\"Having fun, you had her so worked up by the time you two stopped she wanted to hop in bed with you,\" Mike told us.\n\n\"Did you she hop in bed with you?\" Dawn asked.\n\n\"Hell yes, we all spent the weekend together in bed!\" Mike said to us.\n\n\"That was what I had planned, that is why I did it.\"\n\nDawn looked over at me and smiled, she knew Jill must be planning on trying to seduce her. Dawn excused herself and headed to the bathroom. Several minutes later when I heard her come out she went to the kitchen and talked to Lieke for several minutes.\n\n\"What time are we leaving?\" Mike asked.\n\n\"The limo is going to pick us up at 7:00, they said it would take about an hour to get to the club,\" I told him. \"Lieke is going to fix us a nice dinner before we leave.\"",
        "Lieke and Dawn were heading toward us carrying food for lunch.\n\n\"Here we go,\" Dawn said as she and Lieke set down trays of sandwiches and other goodies.\n\nLieke returned with more food and drinks. I insisted she sit with us and eat lunch. Dawn got Lieke to tell Mike and Jill about the party at the club. Mike was looking at Lieke's see through bikini.\n\n\"Dawn said you won last year Lieke,\" Jill asked.\n\n\"Yes I did and I going to win this year.\"\n\n\"Not if I beat you,\" Dawn said with a laugh.\n\n\"I still say I'll win!\" Lieke came back.\n\n\"This should be a good contest!\" Mike said. \"Jill you should enter.\"\n\n\"I don't think I would have a chance, these two seem to have it sewn up.\"\n\n\"Maybe you could enter the other contest,\" Lieke said.\n\n\"What other contest?\" Jill asked.\n\n\"I heard you talking about dancing with another woman, they have a contest for two women to dance together, maybe you and Dawn could enter it.\" I said,\n\nAs staged as it was, it did sound like a good idea.\n\n\"Hey, we could do that!\" Dawn said. \"I wanted Lieke to enter with me but she doesn't want to.\"\n\n\"I don't know Dawn,\" Jill said.\n\n\"Mike would you like to watch me and Jill dance together in front of a large crowd?\"\n\n\"Hell yes, Jill do it!\"\n\nJill looked at Mike and smiled.\n\n\"Maybe if you are hot enough, you can get Dawn in bed,\" Mike said.\n\nJill slapped Mike on the leg, \"Mike!\"\n\n\"You said you wanted to!\"\n\nJill slapped Mike on the leg again.\n\n\"I think you two would look hot dancing with each other, but I don't know if you could turn on a crowd enough to win a contest,\" I thought I would fuel the situation.\n\n\"Jill, I bet you and I could do it, especially if you want to get me in bed.\" Dawn said seductively.\n\nJill turned and looked at Dawn looking to see if she was serious.\n\n\"You could do that in front of a crowd?\" Jill asked Dawn.\n\n\"I could do pretty much anything in front of a crowd for James. James would you like to see me and Jill perform?\"\n\n\"I think it would be pretty hot, but don't enter unless you think you can win.\"\n\nDawn looked over at Jill.\n\n\"Lieke, what are the rules for the two women?\"\n\n\"Almost anything goes, you just can't expose yourself.\"\n\n\"What can't we do?\"\n\n\"You can't get down on the floor and act like you are having sex, but pretty much anything else goes.\"\n\n\"I think we could do that Jill.\"\n\n\"It might be fun!\"\n\n\"And if we win, I'll let Mike watch us make love...if you want to do that.\"\n\nJill looked at Dawn with a big seductive smile.\n\n\"What if we don't win?\" Jill asked.\n\n\"I don't guess you get to.\"\n\n\"You better win Jill!\" Mike said with a big grin.\n\n\"Yes, you two better win, I want to watch you too,\" I added.\n\n\"If that is the only way I can get you in bed then let's do it!\" Jill exclaimed.\n\n\"Alright!\" Mike said.\n\nJill started laughing and then we were all laughing.\n\n\"Maybe you two should practice,\" Lieke added.\n\n\"We don't need to practice, Dawn you bring your best seduction game and I'll bring mine,\" Jill said.\n\n\"You got it!\" Dawn exclaimed. \"I hope you brought a hot bikini!\"\n\nJill stood up and pulled off her shirt revealing a very skimpy red bikini top. She had a nice set of breasts and the top was real small, straining to hold in her C tits. Jill had a light tan on her body but was still fair skinned. Jill then shoved her shorts down and showed us a matching thong.\n\n\"That should do,\" Dawn said.\n\n\"Let see your bikini,\" Jill asked.\n\nDawn pulled her top off exposing her breasts.\n\n\"This is not the one I will be wearing, I have another one that is pretty revealing.\"\n\n\"I like that one!\" Mike said.\n\n\"You two are crazy!\" Lieke added.\n\n\"Let's go out and get some sun Jill and plan,\" Dawn said as she stood.\n\nMike took notice of how good Dawn looked as she grabbed Jill's hand and the two of them headed out the door.\n\n\"This should be good James!\" Mike said.\n\n\"I know Dawn likes to show off for anyone that will watch, it should be interesting.\"\n\n\"You don't mind her showing off for other men?\"\n\n\"Dawn has a hot body and she really knows it turns me on when she lets other people see it.\"\n\n\"Jill likes to show off sometimes too.\"\n\n\"I hope they win, I better start working on dinner,\" Lieke said as she got up.\n\n\"You get to watch Jill with other women very often Mike?\"\n\n\"Not as often as I would like, what about your wife?\"\n\n\"Pretty much as often as I want.\"\n\n\"Really, wow.\"\n\nMike sat with a look of envy for a minute before he said anything else. He then asked me if we were looking forward to the bike ride Monday. We discussed that and talked for about an hour before deciding to join the girls outside. We went out and found them sunbathing with their tops off while they laughed and carried on.\n\n\"You two have a plan worked out for tonight?\" I asked.\n\n\"Yes we do, we are going to win tonight!\" Jill said enthusiastically.\n\n\"Too bad you two can't perform naked,\" I said.\n\n\"Maybe later,\" Jill replied.\n\nMike and I sat and watched our ladies sun, Lieke came out later bringing us more beer and wine. Lieke took her top off and we all sat around outside the rest of the afternoon until Lieke told us dinner was ready. Lieke had prepared some steaks and local vegetables for dinner. We had finished eating by about 6:00 when Jill and Dawn headed up to our bedroom to get ready. I helped Lieke cleanup so she could get ready.\n\nBy 6:45 all the ladies were gathered downstairs ready to go, they all were excited and talking and laughing. Their bikinis were now covered with t-shirts and shorts. Lieke and Dawn had on a t-shirt covering the t-shirts I had cut off for them to wear, they didn't want the competition to see what they had done. I had put on the thong I had to wear under my shorts, it was uncomfortable as hell and I hoped I could get out of it as soon as possible. The limo arrived at 7:00 and we all piled in and enjoyed the hour ride to the club.\n\nLieke had been right, the place was filling up with people when we arrived. Lieke told the driver about what time to pick us up and we all went inside. After shelling out the cover charge I gave the doorman enough incentive to find us a table near the stage. People were already out on the huge dance floor bumping and grinding to the loud music. There were a lot of people of all ages there and most were locals except for the college crowd.\n\nWe all ordered drinks and took turns dancing. I danced with Jill and Lieke on and off while Dawn and Mike danced. Jill and Dawn ended up dancing together for a while, if the show they were putting on was anything like they were going to do on stage we were in for a treat. Dawn even got Lieke to dance with her in a provocative manner. We were having a blast when they announced it was time for the wet t-shirt contest to hoops and cheers from the crowd. Everyone returned to their seats while the announcer asked for the contestants to come up on the stage.\n\nDawn and Lieke pulled their shirts and shorts off and headed for the stage. They were joined by about 30 other women. I surveyed the ladies and saw a couple of big busted ladies up on the stage, I felt like they would be the strongest competition but there were a lot of other nice looking women.\n\nThe announcer asked all of them their names and where they were from, there were cheers from the audience as each one took their turn answering. The announcer introduced Lieke as the previous year's winner and all the men roared and clapped for her as she took a bow.\n\nI hadn't noticed until Dawn got up on stage that she wasn't wearing the lacey bikini bottom she had told Lieke she was going to wear, she had on the tiny black metallic thong I had bought her. It was so small and sat so low on her mound it easily looked like a patch of black hair. Several other women had on some pretty daring bikini bottoms as well but Dawn and Lieke had the better looking tanned asses.\n\nDawn and Lieke were next to each other near the middle of the stage. The music started bumping real loud and all the women started dancing very seductively as the crowd cheered. Mike and I checked at all the women as they twisted and shimmied. They let them dance for about 5 minutes before a bunch of guys started at each end of the line and poured bucket after bucket of water on each of the women.\n\nThe entire crowd began to roar as the t-shirts became transparent in the bright spotlights. Several of the women appeared to be wearing skimpy bikini tops under their t-shirts as they danced. Only about half the women really had some seductive dance moves. Dawn and Lieke's cut off thin t-shirts looked really good, you could see that each of them had a nice set of tits with huge dark areolas.\n\nDawn and Lieke started to run their hands up their sides and stomachs, the gold chain with the opal Dawn had bought was blazing in the spotlight. Mike and I agreed that the two of them were really looking hot.\n\nThe women danced for 5 or ten more minutes as the crowd cheer and the guys poured more water on them. The water must have been cold because several of the women reacted when it was poured on them, it was making all the women's nipples stick out.\n\nThe announcer started walking up and down the line of women to see who he liked, every time he stopped to look at Dawn she would look at him real seductively and come on to him as she rubbed on herself. Eventually he started tapping ladies out. The first 4 women he tapped out were the ones wearing bikini tops under their t-shirts. Surprisingly the next woman he tapped out was this fair skinned bleach blonde that had enormous fake tits. They were so big that they really didn't look that good.\n\nHe walked up and down the line again for a few minutes then tapped out 5 more women, some to the boos of the crowd. Dawn and Lieke had moved closer to the middle of the stage as women left. The two of them started some new moves that made them look real hot. From the reaction of the crowd it appeared that they were drawing attention. Most of the other women remaining were doing the same moves over and over while Dawn and Lieke kept changing up to new things. By the time there were only 10 women left on the stage Dawn and Lieke were next to each other in the middle of the stage.\n\nLieke seemed to be a local favorite as she danced and moved. Dawn was next to her keeping pace with her. More water was dumped on the remaining ten women. The next time the announcer walked down the line and stopped in front of Dawn and Lieke the two of them started coming on to him at the same time, they were now suggestively rubbing their tits much to the crowd's pleasure. He moved on down the line and tapped out a couple of women leaving eight. Dawn and Lieke were still coming up with hotter and hotter moves, the crowd took noticed and started cheering for them.\n\nThe announcer let them all dance for 5 more minutes looking to see who the crowd was cheering for. It was obvious that Dawn and Lieke were favorites. He tapped out two more women leaving six, I thought Dawn or Lieke one was going to win for sure. With just the six women remaining the announcer had the women move up to the front of the stage. I watched as Dawn and Lieke moved up seductively. The crowd cheered and there were guys and women standing up next to the stage cheering and clapping.\n\nI saw Dawn and Lieke give each other a look for a second, then the two of them started turning around as they danced showing off their perfect asses in the thongs and not just their breasts. The crowd loved it as they dipped and twisted for several minutes, the other women noticed what they were doing and did the same thing but it was too late. Dawn and Lieke had practiced this move and they were hot. The announcer tapped out one more woman leaving five.\n\nThe music changed and the beat picked up, our ladies moved right along with it changing their moves again. You could see all of the women's breasts and nipples through the t-shirts, it appeared obvious that those that remained had wore especially thin t-shirts and skimpy bikini bottoms, but the bottoms Dawn and Lieke wore were especially revealing, especially Dawn's.\n\nThe announcer was walking behind each of the women and pausing letting the crowd cheer for each one, Dawn and Lieke were definitely doing well. He tapped out the girl that got the least amount of cheers to the boos of some in the crowd. That left one large breasted small blonde, a tall nice looking brunette and Dawn and Lieke. The other two women were putting on a good show. I watched as Dawn stood and danced while she began squeezing her breasts, the crowd cheered, Lieke began doing the same thing to roars of the crowd.\n\nThe big breasted girl began rubbing on her breasts and pushing them up together while the crowd roared. I watched as Dawn swiveled herself down to sit on her heels while she squeezed her tits together, then she spread her legs apart so everyone could see the tiny piece of material attempting to cover her pussy, Lieke followed right behind swiveling and grinding their hips as the crowd looked on and clapped and cheered. The other two women tried it but they were not as practiced as Dawn and Lieke and the crowd didn't seem to be impressed when the other women copied what someone else was doing.\n\nThe announcer walked behind the remaining four and let the crowd cheer, Dawn got a loud cheer and so did Lieke. I watched as the announcer walked behind the other two women again trying to determine who was getting the loudest cheer. He tapped out the tall brunette next. The crowd roared as the three left began to dance and move seductively again. Dawn and Lieke turned to each other and smiled real big.\n\nThe blonde was rubbing and mashing her large tits together over and over as the crowd focused on her and cheered, she was going to be tough to beat. As the music changed again Mike and I watched as Lieke and Dawn changed up their moves again. Dawn and Lieke turned and twisted and swiveled their hips as they sat down on their heels again, it looked like they were dancing without a bottom on because the thongs were just strings. They both placed their hands on the cheeks of their ass and rubbed them seductively as they looked back over their shoulders at the crowd. Everyone cheered like crazy.\n\nThey danced for several more minutes before the announcer started to walk behind them again, Dawn and Lieke were going to have to put on a show to beat the big tittied blonde. The announcer stopped first behind the blonde and everyone cheered loudly. Dawn and Lieke were standing and rubbing the sides of their breasts as everyone cheered for the blonde. As if on cue Dawn and Lieke each slid their hands up under their cut off t-shirts and began rubbing their tits. The crowd went crazy. They had their hands pushing up the fronts of their shirts as they squeezed their tits.\n\nWhen the announcer stopped behind Lieke the crowded roared and screamed. When he walked behind Dawn she swiveled back down on her heels and began twisting and pinching her nipples and throwing her head back like she was really getting off on it as she twisted. The crowd in front of her at the stage began jumping up and down and cheering and clapping. It was obvious Dawn and Lieke were the crowd favorites now. The announcer tapped out the blonde as the crowd cheered. It was down to Dawn and Lieke.\n\nAs the crowd screamed and cheered the two of them stepped back a little and began doing their own moves now. It appeared that any deal they had was off now and they were each out to win. The two of them had saved some real sexy moves for the end and were now putting on a show as they rubbed their tits and stomach and thighs. I watched Dawn as she placed her hands on the front of her thighs and moved them so that she slowly slid them up the inside of her thighs and then ran her fingers slowly up and over her pussy and on up over belly and over her breasts, cautiously pulling up the front of her shirt lifting it up to just expose the bottom of her breasts for a second.\n\nThe men in the crowd started screaming and cheering for her. Lieke countered by running her hands down from her head slowly and over her breast and down over her stomach. I watched as Lieke bravely slid her fingers inside the sheer bottom of her bikini. The crowd went crazy, this was going to be a real showdown between the two of them. The announcer let them continue to dance as they got more and more provocative.\n\nThe two of them looked at each other and smiled as they rubbed their pussy and tits. I watched as Dawn ran her hands back up to the front of her t-shirt and looked over and Lieke and smiled. Dawn's hands paused as she appeared to be grabbing the front of her shirt. Dawn pulled down hard on the wet t-shirt and it began ripping, separating right at the bottom of her breasts. She pulled it down hard and tore it away then ripped it apart and threw the piece of shirt into the crowd. With Dawn standing up on the stage everyone could clearly see the bottom of her exposed breasts. I didn't think Dawn was going to get away with it because with another half inch we would be able to see the edge of her dark areolas.\n\nThe crowd began screaming and clapping, Lieke looked over at Dawn and smiled, she obviously didn't know Dawn was going to do that. Dawn crossed her arms above her head and twisted and swiveled, the action of moving her arms over her head only pulled her t-shirt up a little further. I waited to see if the announcer disqualified her but he only clapped and cheered her on. Two guys walked up behind them and poured a bucket of water on each of them, now they were dripping water and sex. I wasn't sure how Lieke was going to counter this.\n\nWhile the crowd cheered I watched Lieke turn toward Dawn and swivel over to her rubbing her breast and pussy like she was coming on to Dawn. Dawn turned toward her and did the same thing, they were almost touching their tits together as they danced and seduced each other. The women in the crowd were now cheering and screaming as the two of them danced. The announcer cheered them on as they kept it up. Surprisingly Lieke was putting some real seductive moves and expressions on Dawn.\n\nThe announcer began to move toward the two of them and everyone started screaming. Dawn and Lieke turned toward the crowd putting on their best moves. Lieke ran her hands back down the front of her body and slipped her fingers inside her bikini bottom as the announcer stood behind her. The crowd was screaming and clapping so loud it was unbelievable. I looked at Dawn and she had slipped her hands way down inside the front of her suit at the same time Lieke had. Watching her it was obvious she was shoving her fingers in her pussy. When the announcer moved over behind Dawn the crowd kept screaming then I watched Dawn pull her fingers out of her suit and slide them up the front of her body. Right when the announcer walked behind her she slipped two fingers in her mouth and sucked on them. The roar was deafening, three hundred plus people jumping up and down and screaming as Dawn licked and sucked on her fingers.\n\nIt was going to be close but Dawn had really gotten the crowd screaming when she stuck her fingers in her mouth. The announcer reached around and grabbed the hand that Dawn had been sucking on and raised it over her head, pulling up one side of her t-shirt exposing a nipple. The crowd screamed even louder. Dawn jumped up and down causing her tits to bounce. Lieke ran over to her and gave her a big hug, Dawn leaned in and gave Lieke a big kiss and the crowd kept screaming.\n\nThe announcer announced Dawn's name again and handed her a big trophy and an envelope. Dawn turned so Lieke could grab the other side of the trophy and they raised it up to applause. This crowd didn't know it but hey had been setup by a couple of hot vixens. Dawn and Lieke walked off the stage and back to our table. The two of them were still hugging each other and laughing as the crowd applauded.",
        "\"You did it!!\" Lieke shouted.\n\n\"We did it!!\" Dawn shouted back as she hugged her again.\n\n\"I wasn't planning on you doing any of that!\" Lieke yelled at her over the crowd.\n\n\"I had to do something to beat you!\"\n\nWe all sat down as the music started playing again and the crowd moved back to the dance floor.\n\n\"You two are absolutely fucking crazy!\" Jill said. \"I'm glad I didn't go up against you!\"\n\n\"We had a blast!\" Lieke said.\n\nThe waiter brought Dawn and Lieke a big bottle of champagne and two towels. Several people in the crowd came over and shook Dawn and Lieke's hand saying that they had put on the best show they had ever seen. Dawn and Lieke dried their hair while they sipped champagne. I handed them their clothes but they just put them on the table. Dawn grabbed my hand and pulled me to the dance floor, I grabbed Lieke's hand as I was pulled up. The three of us moved to the dance floor, it wasn't long before the two of them were rubbing up and down me with their bodies as everyone watched and clapped.\n\nWe danced together for a long time as the crowd look on. We finally returned to the table and Dawn and Lieke finished off the champagne.\n\n\"Dawn I hope you saved some for our show.\" Jill said.\n\n\"You haven't seen anything yet!\" Dawn replied.\n\nWhile we were finishing our drinks the announcer came on and said it was time for the men to show their stuff. All the women started screaming and clapping as everyone returned to their seats.\n\n\"You're up!\" Dawn said.\n\nThe announcer called for all the men that were going to participate to come up on stage. Dawn stood and pulled me from my seat and grabbed my shirt and started pulling it over my head. Once she had it off she reached down and unsnapped my shorts and pulled them down. The people at several tables around us started cheering, it seemed Dawn had gained a fan club.\n\nI looked as other guys started walking toward the stage, several of the guys were body builders and looked huge, I wasn't embarrassed because I worked to stay in shape. Dawn smacked me on the ass.\n\n\"Go get em'!!\" She screamed.\n\nI made my way up to the stage, Lieke was right, there were about 20 guys on stage. By the time I got up there I was on the end of the line. The announcer started at the far end and moved down the line introducing all the guys, when he got to me and I told him my name cheers went up. It seemed that the women know I was with Dawn and had already started cheering. Since I had just had Dawn and Lieke rubbing up against me on the dance floor my cock was already about half hard.\n\nThe announcer made a joke about making sure no one had anything stuffed in their thongs and the crowd laughed and cheered. The music started to the cheers of the crowd and all the guys started dancing as the crowd clapped. I gave it my best moves going with the music, I couldn't help but look out of the corner of my eye at the competition. One of the body builders was next to me and I couldn't help but noticed he didn't have much in the way of a cock under his thong as he moved more to show off his muscles. I thought that he was showing off the wrong muscles for this contest.\n\nWe danced for about ten minutes as the women screamed and clapped. The announcer walked from one end of the line to the other several times noting the cheers of the women as he walked by. I seemed to be doing pretty good. He started tapping guys out every few minutes as he walked up and down the line, after about 15 minutes there were 10 of us left, both of the body builders were gone. I looked out at Dawn and she put her hands up behind her head and thrust her hips at me. I took the suggestion and did the same thing to the cheers of the women in front of me at the stage.\n\n\"Now for the warm up!!\" The announcer yelled into the microphone.\n\nI watched as 10 absolutely beautiful women with big tits and tiny bikinis came dancing out on the stage. Each one took up apposition next to a guy and began dancing and rubbing up against them. The woman that came up to me was about 5'10\" and was a gorgeous Hawaiian with long black hair. The crowd started cheering as the women performed for us while we danced. My girl was rubbing up against me so I turned and ground my cock into her as she moved. Apparently Lieke had forgotten to tell me about this part, the women were obviously out there to try and get the guys hard.\n\nAs I watched my lady pull her hair up with her hands and grind her pussy against my thigh I had a feeling it was going to work.\n\n\"Okay ladies, let's show them what you have got!!\" The announcer yelled.\n\nI watched the gorgeous woman beside me reach behind her back and untie her top and remove it and throw it in the crowd. These ladies must be the strippers that worked in the club. The crowd went crazy as the girls dropped their tops and began to rub their tits while they pressed up against the guys. I shoved my hips out toward the woman with me and she pushed her tits up against my chest and ground her crotch into me, she was doing her job, I could feel my cock starting to grow.\n\nWe danced and ground against each other for about 5 minutes when the announcer said \"It's almost time for the guys to collect their votes!!\"\n\nAbout that time I felt the woman's hand begin rubbing my growing erection, a crowd of women in front of me began whooping and hollering.\n\nThe hot woman that was rubbing up against me reached down and gave my cock a hard squeeze and the women down in front of me screamed and cheered while she held my hardening cock.\n\n\"You are going to win this thing!\" She yelled to me as she squeezed even harder. \"You just follow me!\"\n\nShe then rubbed her hand real hard up and down my cock. I could feel the tightness of the thong and the tip pushing at the waist band trying to escape. I looked at Dawn and her and Lieke and Jill were screaming and clapping. My lady moved around behind me still holding my cock and grabbed my hips and turned me so I was facing the crowd. I looked and all the women had done the same thing. I put my hands behind my head and thrust my crotch out toward the crowd. Then I felt two hands slide down inside the front of my thong and grab my cock.\n\nI jumped when she wrapped a hand around my cock and pulled up on it, I knew that she had to have the head or more out above the waistband. I looked at Dawn and her and Lieke were laughing and screaming watching what was going on. I wondered if there was going to be anything else that Lieke had not told me about. I felt her hands come out of my thong and felt the waist band of the thong pressing against my cock about two inches below the head. I knew I was sticking out because I could see a bunch of the women pointing and screaming.\n\n\"Ladies, take your man so the women can cast their votes!!\"\n\n\"Keep dancing and stick with me, I'll take care of you!!\" I heard the woman scream at me above the roar of the crowd.\n\nShe grabbed my hand and started pulling me toward the stairs going down to the floor. I saw the women in the crowd start lining up along the front of the stage waving money.\n\n\"Follow me!!\" She yelled above the crowd as we got to the floor.\n\nMy dancer slowly walked me down the front of the stage in front of the women actually holding up the other half of the men as they came off the stage. I started feeling hands stuffing money under the waistband of the thong as well as grabbing my cock and rubbing what was sticking out. As she pulled me on I felt hands running across my ass. When she got to the dance floor she screamed at me to work it.\n\nI gave it my best moves as all the other men collected on the dance floor. Women were running up to guys on the dance floor and shoving money in their thongs. My dancer was screaming at the ladies to come and check out the 'monster'. I felt hands sliding down inside my thong and grabbing my cock. Women were jumping up and down around me and screaming while they waited in line. More hands were grabbing my ass as my dancer pulled me across the dance floor. I looked down and my thong was stuff full of cash, everything from ones to twenties, it was overflowing. My lady stopped and started pulling some of the money out and holding it or stuffing it in her bikini bottom.\n\n\"You're doing good!\" She yelled at me.\n\n\"Ladies and gentlemen, cast your votes!!\" The announcer said over the sound system.\n\nI started hearing cries of 'over here' from the crowd. I was pulled around the dance floor while women groped me and stuffed more money in my thong. I looked around and the other guys were experiencing the same thing. I thought that the women were not voting as much as looking for a reason to grab some cock. The dancer pulled me toward the tables so she could work the crowd. When she got me to the tables women started standing up and dancing and rubbing up against me before they stuffed their 'votes' in my thong. As she had me turn and dance I could see the other guys were being lead around the tables.\n\nMy lady stopped a second and pulled handfuls of cash out of my thong so more could fit.\n\nI heard Dawn scream 'work it' as I was lead down a row of tables behind ours. The women sitting at the tables were much more aggressive, I was getting grabbed and held more. The women kept dancing and rubbing up against me. I heard several of them say 'I want that monsters cock.' Many of the women would reach in and grab my cock while they looked at their husbands and boyfriends. I was pulled toward several tables with only women standing around screaming and clapping. I saw the big tittied bleached blonde that had been in the contest with Dawn approach me gyrating her hips.\n\n\"Come here with that big cock!\" She screamed as I was pulled into the crowd of standing women.\n\nShe looked around and then reached down and yanked her t-shirt up over her tits and then swiveled down and rubbed her tits against the head of my cock sticking out. She had made sure only the crowd around us could see what she was doing. I felt her tits rubbing against my cock when I looked down and saw her mash her breast together against me. The women were screaming as she did this. I thrust my hips forward and pushed against her, she then leaned forward and kissed the tip of my cock. The women blocking the view roared. She pulled her shirt down and stood up and stuffed a wad of cash down the front of my thong. I was led around this crowd while the women grabbed me casting their votes. I watched as my escort pulled me toward another table while she was collecting the cash. I saw some of the guys stuffing money down the front of her bikini, I wondered if I got to count it.\n\nI was led around the tables and turned around and pulled around while I danced. I could see the same thing happening all around the floor but I could see women moving across the floor toward us. I was being led down a row of tables that would end at our table next to the dance floor. I saw Dawn standing in her chair screaming and clapping. As I was led down between the tables collecting votes I could see Lieke and Jill talking as I neared our table. Jill was screaming 'bring him here'.\n\nMy escort pulled me past our table and to the edge of the dance floor and turned me so I was facing our table. With a crowd gathered around us Jill approached me dancing, she pushed herself up against me and rubbed her body against my cock. She was gyrating her hips putting on a good show as the other women egged her on. She worked her way down so she was sitting on her heels with her face at my crotch and began rubbing my cock through the thong.\n\n\"Pull it out!!\" I heard Dawn scream.\n\nAll the women started chanting 'Pull it out'. Jill worked her fingers down inside the front of my thong and ran them up and down my shaft. 'Pull it out' the women chanted. I didn't believe it when Jill grabbed the front of my thong and pulled it down. The women screamed.\n\n\"Yes, yes yes!!!\" They all screamed.\n\nJill worked the front of my pouch down and hooked it under my balls. She then took her hand and stroked me a few times before stuffing money under the waist band. The women cheered and whistled as they took turns grabbing my cocking and giving money to my escort. I went with it and gave them my best stripper dance. Dawn was screaming as she watched. With the pouch hooked under my balls my cock was sticking straight out and growing harder each time a hand grabbed me.\n\nMy escort pulled me away and across the dance floor to the other side of the room. Lieke was right, this went on for about 30 minutes. I could see that all the guys were being pulled at and groped but my dancer kept screaming 'come see the monster cock' drawing attention to us as she led me around. By the time she had led me about half way across the other side of the room my thong had been pulled down to the top of my thighs, I danced as my escort collected money, I could see she had a huge handful of money. As I looked around I could see that most of the hundreds of women had moved toward the front of the room, the escorts had brought each of the men back to the dance floor so the women could get one last chance to vote. My escort worked me across the floor as the women screamed and whistled.\n\n\"Alright ladies, the voting is over. Ladies please bring your men back up on stage.\" The announcer yelled.\n\nAll the men were escorted back to the stage, almost all the men and had their thongs pulled down. The women were still stuffing cash in the guy's thongs as they walked to the stairs and back up on the stage. As we all paraded across the stage with their cocks sticking out the women screamed and cheered.\n\n\"Ladies help your men out!!\" Came from the announcer.\n\nThe escorts dropped the handfuls of cash they had next to each guy and then worked our thongs back up to the booing of the crowd.\n\n\"Give them a hand!!\" The announcer said as the women clapped and cheered one last time.\n\nI could see Dawn, Jill and Lieke whistling and cheering. I looked up and down the line of men, they all had various size piles of cash on the floor next to them.\n\n\"Ladies count up your man's votes please!!\"\n\nThe dancers sat on the floor and started counting up the cash. The music played while they counted. I looked at my escort as she counted, I heard her say 'damn' and look up at me several times. I didn't know how the other guys were doing but I saw a lot of twenties and at least one one-hundred dollar bill, I figured that was from Jill. My escort continued separating the money and counting while the other women did the same. Each of the strippers stood up as they finished counting.\n\nThe announcer began at the other end of the line announcing how much each guy had collected. The amounts ranged from $100 to $300 as he came up the line. About the middle of the line he announced that one guy had collected $530 dollars and a group of women in the back of the room cheered. He worked his way on down the line announcing amounts as groups of women cheered. When he got to the guy next to me he announced that he had 435 votes.\n\nThe announcer walked up to me and asked the girl how many votes I had.\n\nI was surprised when she said 836, the women in the crowed went crazy. The announcer held up my hand and proclaimed me the winner. Two more topless strippers came out with a big trophy and handed it to me plus the envelope with the prize money. My escort jumped up and down and cheered while the other guys were led off behind the stage. I was taken to the center of the stage while the announcer said that that was the most votes anyone had received.\n\n\"I believe you are the BIGGEST vote collector we have had!!\" He announced to the cheers of the crowd.\n\nThe music started playing again and my escort led me off behind the stage. The other guys were collecting their winnings and were returning back to their seats through the stage door. My escort handed me my votes and told me I got to keep that money also. I took the money and looked and saw to one hundred dollar bills on the top of the stack. I pulled the two hundred dollar bills from the top and gave them to my escort.\n\n\"Well thank you very much!\"\n\n\"You helped me win.\"\n\n\"You won all on your own, I enjoyed helping!\"\n\n\"Would you go get my wife from the table where the lady pulled my thong down?\"\n\n\"I would be more than happy to.\"\n\nShe went through the door and came back in a minute with Dawn. Dawn ran up to me and reached around my neck and kissed me. She was still wearing just the cut off t-shirt and her very skimpy bikini bottom. She had brought me my shorts knowing I wanted to get out of the thong.\n\n\"You won, I told you you would win!!\"\n\n\"You are the one that won the t-shirt contest!\" My escort said.\n\n\"I have got to get out of this thong!\" \n\nI pushed the tight thong down and got it off finally. My erection had just started going down.\n\n\"Damn, you are huge!\" The dancer said. \"Your wife is one lucky woman!\"\n\nDawn reached over and grabbed my cock before I could put my shorts on.\n\n\"Yes I am!\" She said as she stroked my cock several times.\n\nDawn pulled on my cock several times causing it to get hard again.\n\n\"That's the best looking cock I have seen in a long time, may I?\"\n\n\"Sure,\" Dawn said.\n\nThe topless dancer reached over and wrapped her hand around my cock and squeezed it then she stroked it several times.\n\n\"Wow, this is a handful!\"\n\n\"It's a pussy full also,\" Dawn said.\n\n\"I'll have to find me one like this!\" She said as she released her hold on my cock.\n\nI stepped into my shorts and pulled them up while Dawn collected the cash and put it in the envelope with the prize money. I grabbed my trophy and we went back out to our table. The women around our table cheered and clapped as we walked back. We now had two big trophies sitting on our table.\n\n\"Lieke, is there anything else you didn't tell me about?\"\n\nDawn and Lieke started giggling. Jill leaned forward and gave me a kiss on the cheek.\n\n\"Lieke told me to do it!\" Jill told me.\n\n\"Lieke, you and I are going to have to have a talk!\" I told her.\n\nShe continued giggling with Dawn. When she slowed down she said, \"I told you that you would win!\"\n\n\"Yes, but it is the stuff you didn't tell me about that I will get you for!\" I told her and she and Dawn started giggling again.\n\n\"Let's dance!\" Jill said to Mike as she pulled him to the dance floor.\n\nThe waiter came over with another bottle of champagne for us. The three of us sat and drank the champagne while we watched the people dance. It was about 1:00 in the morning and the party was still going strong. Dawn and Lieke went to the buffet to grab something to eat. They had no sooner left when the big breasted bleach blonde that had kissed my cock sat down.\n\n\"You put on a great show,\" she said. \"My name is Crystal.\"\n\n\"Hello, you put on a good show too.\"\n\n\"Would you and your lady friend like to come back to my place after the party?\"\n\n\"Crystal that sounds like a nice offer but we are here with some friends.\"\n\n\"They can come too!\"\n\n\"Maybe next time,\" I told her.\n\n\"Too bad, I would really like to fuck that big cock of yours.\"\n\nShe got up and left about the time Dawn and Lieke returned.\n\n\"What was that about?\" Dawn asked.\n\n\"She invited us to her place so she could fuck my big cock.\"\n\n\"Did you accept?\" Dawn asked.\n\nLieke started giggling again.\n\n\"I passed.\"\n\n\"Too bad,\" Dawn said as she sat down with a plate of food.\n\n\"Are you and Jill ready for your turn?\" I asked.\n\n\"Ready as we will ever be! Maybe we can take home all the trophies!\"\n\n\"I think you two will have to put on one hell of a show to walk off with a win!\"\n\n\"We plan on it!\"\n\n\"There will only be about 10 other pairs, but they will keep all the women going for about 30 minutes so the crowd will get worked up,\" Lieke said.\n\n\"That should be long enough!\"\n\n\"Remember the rules!\" Lieke told her.\n\nWe sat and snacked on the food and drank champagne until Jill and Mike came back. Jill knocked back several glasses of champagne while we waited for the contest to start. \"Are you ready for the last contest?!!\" The announcer came on and asked.",
        "The crowd started cheering and clapping. Everyone started leaving the dance floor and returning to their seats.\n\n\"Jill are you ready?\" Dawn asked.\n\n\"Hell yes! When we win I am going to make sweet love to you!\" Jill shouted.\n\n\"Everyone that is competing come to the stage!!\"\n\nWe saw several pairs of nice looking women approach the stage. Jill stood up and pulled her shirt off and shoved her shorts down. The people sitting at several tables around us started cheering and clapping when they saw Dawn and Jill get up.\n\n\"Hat trick, hat trick, hat trick!!\" They started chanting.\n\nDawn grabbed Jill's hand and they went to the stairs to go up on stage. By the time they were on stage there were a total of 11 couples on the stage. There were a lot of nice looking women on the stage, they were going to have their work cut out for them. The announcer went down the line as the women introduced themselves, there seemed to be a couple of crowd favorites. Dawn and Jill were 7th in the line. When Dawn introduced herself again there was a big cheer from the audience. Dawn waved as they cheered then turned and gave Jill a big kiss on the mouth. The crowded cheered again. Once everyone was introduced the music started playing.\n\n\"Let the good times begin!!\" Came from the announcer.\n\nAll the women started dancing for the crowd, they were all in skimpy bikinis. These women had some good moves as they danced. After they danced for the crowd for a few minutes we watched as they all turned toward each other and began dancing for each other. The crowd started cheering as the action got hotter. Slowly the women started rubbing up against each other as they danced.\n\nI watched as the pair in front of us started giggling as they rubbed up against each other. I looked at Dawn and Jill and Dawn had her ass turned toward Jill and she was rubbing her crotch against Dawn's ass. The crowd started cheering and clapping as more of the couples got into some serious moves. We watched as they all danced for about 10 minutes. The announcer started walking from one end of the line to the other listening to the cheers and whistles. The two girls that were in front of us giggling were the first to go.\n\nJill and Dawn were doing what her and Lieke had done, they changed up their moves every time the music changed. Not doing the same thing over and over like most of the other women. The announcer tapped out a couple of women that looked like biker chicks covered in tattoos. The crowd cheered as the group was thinned down to the best looking women that were really putting on a hot show. The group had been thinned down to 6 couples. Dawn and Jill had slipped toward the middle of the stage as the group settled in to put on a show.\n\nNext to Dawn were two hot blondes that were really putting on a show. They had begun rubbing their tits together as they danced, the crowd really liked the two of them. The announcer let all the women dance as they began to get more suggestive in their moves. I watched Dawn shimmy down behind Jill and rub Jill's bare ass, she slide her hands down Jill's legs and then slide them back up to her ass then leaned forward and begin kissing Jill's ass. The crowd started cheering. Several other pairs started touching and kissing. Dawn kissed up Jill's back until she was standing and then Jill turned and Dawn and Jill started kissing, leaving their lips apart so the crowd could see their tongues touching together.\n\nDawn brought her hands up and started squeezing Jill's breasts as they kissed. Dawn's fans started cheering and clapping. The announcer began walking up and down the line listening to the crowd cheer and scream. The women really started putting on a show grabbing and rubbing various parts of each other. The announcer paused behind each pair of girls as he walked. He tapped out a couple of local girls leaving five.\n\nThe music changed again and Dawn and Jill started some different moves as they danced. I watched as Jill moved behind Dawn and reached around and slid her hands up under Dawn's cut off t-shirt. Dawn put her hands on top of Jill's and really acted like she was getting off as Jill rubbed her breast. She had her head thrown back and after several minutes she slipped a hand down and began rubbing herself just below her belly. We could tell when the crowd was cheering for them. Dawn moved her hips to the music and ground her ass into Jill's crotch. I surveyed the other pairs and they were still doing the same rubbing and grinding they had been doing. As Jill continued to rub Dawn's breast Dawn lifted her arms up and began running her hands through her hair while she licked her lips. When Dawn lifted her arms the front of her shirt came up and what we saw was Jill's hand's covering Dawn's breasts as she held her and danced.\n\nI thought the two of them were really pushing the rules but all you could see was Jill's hands squeezing her tits. Dawn's fans were growing in number as they cheered and clapped. Once again the announcer walked up and down the line. There was no doubt that Dawn and Jill were getting the biggest cheers followed by the two hot blondes. After several minutes he tapped out the pair next to Dawn and Jill. Dawn continued to act like she was getting off on Jill's actions.\n\nDawn lowered her hands so her top came down and Jill slide her hands down to the top of Dawn's bikini and pulled her back against her as the two of them moved together to the music for several minutes. Dawn turned and she and Jill kissed again. Dawn ran her hands down the front of Jill's body, when her hands reached Jill's thighs she wiggled down in front of Jill and started kissing Jill's thighs as she swiveled her hips. After Dawn had kissed up and down each of Jill's thighs she ran her tongue up the inside of one leg slowly. I looked at the two hot blondes and one was kissing on the other's breasts as they danced. The contest was going to come down to Dawn and Jill and the two blondes. After several more music changes and the crowd cheering the announcer had eliminated the other two couples and Dawn and Jill were left with the two blondes. This was going to be good, Dawn's fan club had gathered at the front of the stage with the rest of the crowd.\n\nI watched as the two blondes moved to the edge of the stage and started running their hands over each other's bikini covered pussies while they missed the beat of the music. The seemed to be trying to appeal to the crowd and not keep up with the music. Jill had turned her and Dawn so that Dawn hand her back to the crowd blocking Jill. Jill ran her hands down Dawn's sides as the two of them swayed to the music then ran them over Dawn's ass while the crowd cheered. Jill and Dawn swiveled their hips to the music as Jill began to slide down to the sit on her heels. Jill pulled Dawn's ass forward, it looked from behind like Jill had her face buried up in Dawn's crotch as the two of them swayed together in unison. Dawn ran her hands up to her breasts as they continued.\n\nThe two blondes saw what was going on and one of them slipped down and began kissing the other just above her bikini as they tried to get back in sync with the music. The crowd was cheering the women on. Jill spread her legs wide apart while she kept her hold on Dawn's ass giving the guys something to look at. The guys cheered when she took one hand off Dawn's ass and slipped it down and stuck her fingers in her bikini. Jill had remembered that they guys were watching also and gave them something to cheer about. I watched as Dawn slid her hands down and grabbed Jill's head and pulled her in as she threw her head back letting all her long hair hang free.\n\nThe crowd started screaming and cheering. I watched as the blonde starting licking the top of the others mound just above her bikini as they got back in sync with the music. The crowd started clapping in time with the music as Jill worked her way back up turning the two of them to the side as she stood. Dawn placed her hands on the back of Jill's head and held her while she licked Jill's face and lips like she was licking her juices off Jill. The crowd cheered loudly.\n\nI watched the two blondes reach around each other and grabbed the other's ass and pulled their bodies together while they kissed and swayed to the music. They turned as the music played so the crowd could get a good look, the crowd cheered them on. The announcer walked behind each of them a couple of times as the crowd cheered for their favorites, it was hard to tell who was getting the loudest cheers. \n\n\"We have to pick a winner!!\" Came the announcement over the sound system.\n\nThe crowd cheered and screamed for more. The announcer walked over to the two blondes.\n\n\"You two ladies give us your best!!\"\n\nThey moved to the middle of the stage. The one with the biggest tits swivel down in front of the other as they kept time to the music. The blonde standing behind the other leaned forward and ran her hands under the others bikini top and squeezed the other's tits. The crowd cheered loudly for them. Mike poked me and said look at Dawn and Jill.\n\nDawn and Jill were standing off to the side, Dawn was in front of Jill and Jill had her hands around Dawn holding her as the two of them kept time with the music. Dawn had her head back with her eyes closed with one hand up pulling Jill's head down. Jill was kissing on Dawn's neck as the two of them purposefully ignored what the blondes were doing. They were not really putting on a show they were just drawing enough attention away to keep the crowd watching them.\n\nThe blonde getting her tits squeezed had spread her legs and was running her hand up between her legs and over her pussy. The announcer let them move and go for about 5 minutes as they moved into another position and moved to the music while they each stuck their hand down in the others bikini bottom. The crowd roared and cheered as they fingered each other.\n\n\"All right girls, now it's time to settle this.\" The announcer said as he pointed to Dawn and Jill.\n\nDawn and Jill were acting as if they were enjoying each other instead of watching the show.\n\n\"Ladies, show us what you've got!!\" He yelled as Dawn and Jill slowly and sensuously danced to the front of the stage.\n\n\"Here we go!\" Mike yelled over the cheering crowd.\n\nDawn and Jill turned to each other and gave each other one of the most sensuous kisses I have seen two women give each other for about 30 seconds as they swayed to the music. Dawn then began kissing her way down between Jill's breasts and on down her stomach until she stopped and kissed and licked Jill just above her bikini while she ran her hands over Jill's ass. She slowly started back up but this time dragging her tongue up as she went until she licked up under Jill's neck and finished with a kiss. Jill did the same thing, kissing slowly down Dawn's body until she reached the bare skin at the top of her tiny bikini. Jill went further down and kissed Dawn's pussy through her bikini. Jill slowly moved back up running her tongue up over her stomach as she went. Dawn had her head thrown back as Jill made her way up between her breasts and slowly licked up her throat. Jill being taller than Dawn stood and leaned over and kissed Dawn while her head was thorn back. Dawn grabbed Jill's head and pulled her into her lips.\n\nThe crowd was cheering, Jill and Dawn were acting like they were performing for each other and not the crowd. The two of them were ignoring the cheering of the crowd and the crowd was getting into it. Dawn released Jill's head and started kissing her way back down Jill's body, this time when she got to the top of Jill's bikini she pulled it out with her fingers and drove her tongue between the top and Jill's mound, edging the suit down as far as she dared while pushing her tongue further down. Jill took her hands and began squeezing her breast as the crowd cheered and whistled.\n\nDawn licked her way back up again after about a minute. The two of them stuck their tongues out and connected as the two of them kissed again. Jill ran her hands down the front of Dawn's body as she began working her way down. When Jill got to Dawn's barely covered pussy she licked and kissed the exposed skin of Dawn's mound. Then she ran her fingers inside of Dawn's bikini and leaned forward and stuck her tongue between the material and Dawn's mound. I thought that as small as Dawn's bikini was Jill must have been licking the top of Dawn's slit. Dawn had her hands under her t-shirt twisting and pinching her nipples. The crowd cheered and clapped.\n\nJill worked her way back up and kissed Dawn again. The crowd was cheering. Dawn and Jill were about out of time. I watched Dawn and Jill each run a hand down the other's stomach and down to the top of each other's bikini. I had a feeling they were going to win it or get disqualified. The each slipped their hand inside the other's bikini and fingered the other's pussy quickly before sliding their hands back up. I watched as they stuck their fingers deep into each other's mouth. The crowd erupted with cheers.\n\n\"All right ladies, it's time to pick a winner!!\"\n\nDawn turned and let Jill hold her like she had while they were waiting on the other two girls. She threw her head back and reached for Jill's head and pulled it down so Jill could kiss on her neck. The two blondes walked up to stand next to Dawn and Jill. The announcer walked over next to the blondes and the crowd cheered and clapped for a full minute. He turned to walk toward Dawn and Jill and it was blow out.\n\nThe men and women started cheering and screaming when the announcer stood beside them. There was no question that Dawn and Jill had won. The two of them continued holding each other and kissing as the crowd screamed.\n\n\"We have a winner!!\" The announcer said.\n\nDawn and Jill separated and started jumping up and down as they held each other. The two blondes walked over and hugged Dawn and Jill then clapped for them. The crowd continued cheering and clapping as Dawn and Jill hugged each other. Two of the strippers appeared with the last trophy. The crowd cheered as they took the trophy and held it up. When they turned to leave the stage the announcer called for another round of cheers.\n\nJill and Dawn returned to the table to add their trophy to the collection. Mike gave Jill a big kiss as I did Dawn. Dawn then hugged and kissed Lieke as the two of them started giggling as the music started again. Dawn and Jill hugged again and Jill gave Dawn a deep kiss. Dawn reached up and pulled Jill hard to her lips. Several people had walked over to the table to congratulate Dawn and Jill. After we sat down the waitress appeared with a third bottle of champagne. The people at the tables near us applauded when she sat it down.\n\nDawn leaned over and hugged Lieke again.\n\n\"Thanks for telling us about this, it has been a blast!\"\n\n\"I can't believe you two doing all that in front of all these people!\" Lieke said.\n\n\"It was fun!\" Dawn added.\n\nIt was about 2:30 in the morning, Lieke had told the limo driver to pick us up at 3:00. We spent the last 30 minutes finishing off the champagne and grabbing something to eat. Dawn and Jill did not put their clothes back on, they sat around in their bikinis while we drank and ate. By 3:00 the champagne was gone and we were headed out the door. The people around us clapped and cheered as we stood and picked up the trophies and headed for the door. Each of the ladies was carrying a trophy as we walked.\n\nWe walked outside into the warm night air, the limo was waiting for us. The driver got out and came around to open the door, he took the trophies and put them in the trunk while we got in. The driver got in and we left.\n\n\"You look like you had a good time,\" the driver said looking up in the mirror.\n\n\"We had a great time!\" Dawn replied.\n\n\"It will take about an hour or so to get back.\"\n\n\"No hurry,\" was Jill's reply.\n\nMike and Jill were sitting across from Dawn and I, Lieke was sitting on a seat on the side. Jill moved over and sat next to Dawn.\n\n\"Time to pay up Dawn,\" Jill said to Dawn.\n\nJill reached over and slipped her hands under Dawn's shirt and lifted it up then removed her top. She leaned forward and sucked one of Dawn's nipples in her mouth. Dawn pulled Jill's head into her. I moved from the seat next to Dawn to beside Lieke. Dawn turned in her seat and laid back and pulled Jill down on top of her. Jill got up on her knees and continued kissing and sucking on Dawn's nipple. Dawn reached behind Jill and untied her top and took it off and began massaging Jill's breast. I looked at Mike watching the two ladies intently. Jill began moving her way down toward Dawn's stomach.\n\nJill kissed on past Dawn's stomach and past her gold chain and kissed Dawn's pussy through her bikini. We watched as Jill began pulling Dawn's bikini off. Dawn lifted her ass up so Jill could pull her thong off. Jill slowly worked the tiny piece of material down Dawn's legs and off. Jill lifted one of Dawn's legs onto the seat and spread them apart as she began kissing between Dawn's thighs eventually working her way up to her pussy. Jill leaned into to Dawn and drove her tongue into Dawn's pussy. Dawn let out a moan and reached for Jill's head.\n\nJill lifted Dawn's leg and got down on the seat and started eating Dawn's pussy. Dawn gently pulled Jill into her as she moaned. Jill pushed Dawn's legs a part so she could get to her pussy better. Jill was doing a perfect job of sucking and licking Dawn's pussy. We all watched as Jill slipped two fingers into Dawn and began to work them in and out as she continued to lick and suck on Dawn. Dawn was squirming and groaning as Jill kept it up. Several minutes later Dawn was hit by her fist orgasm.\n\n\"Oh god, yes!!\" Dawn screamed over and over as she shook with waves of pleasure.\n\nJill removed her tongue from Dawn's pussy and began kissing her way up Dawn's body. Jill was making love to Dawn as she continued to work her fingers in and out of Dawn's pussy. Dawn moaned over and over in pleasure. After Jill kissed her way up to Dawn's mouth and kissed her for a long time she slowly kissed her way back down to Dawn's pussy. We watched as Jill spread Dawn's legs apart and pushed them up to her chest. She then leaned in and placed her mouth completely over Dawn's pussy and drove her tongue in and licked Dawn.\n\n\"Oh god yes, Jill eat my pussy!!\"\n\nJill was driving her tongue into Dawn now, pushing her harder and harder. Dawn was moaning very loudly, over and over. Dawn began to hump her pussy up and down against Jill's mouth. She was thrashing around in the seat as Jill kept driving her tongue in and out of Dawn.\n\n\"Ohhhh!! Oh my god!!\" Dawn screamed as she began to jerk.\n\n\"Mmmmmmm!!\" Came from Jill.\n\n\"Oh god, I'm coming!!\" Dawn screamed.\n\nI knew Dawn was going to explode. Jill moved her mouth up and over Dawn's clit.\n\n\"Oh shit!!!\" Dawn screamed as she shoved her hips up.\n\n\"Ahhhh!! Ahhhhh!! Ahhhh!!\" Dawn screamed with each contraction, I knew she was filling Jill's mouth with her juices.\n\n\"Oh god, oh god, oh god!!!\" Dawn screamed as she reached for Jill's head.\n\nJill removed her mouth from Dawn's pussy and looked up at her.\n\nAfter Dawn was rocked with her second orgasm she pulled Jill up and kissed her while the two of them sat up in the seat. Dawn turned Jill so that she was sitting and got down in the floor and reached for Jill's bikini bottom and worked it down her legs. Once she had it off Dawn spread Jill's legs apart. Dawn got on her knees and began tonguing Jill's pussy.\n\n\"That's pretty hot isn't it?\" I whispered to Lieke.\n\nLieke broke her gaze and turned and looked at me.\n\n\"Yes it is.\"\n\nI ran my hand over Lieke's thigh as she looked at me. Lieke leaned over and gave me a kiss and then returned to watching Dawn and Jill. Dawn grabbed Jill's ass and pulled her to the edge of the seat and then lifted Jill's legs up and spread them apart. Jill held her legs up as Dawn dove into her pussy.",
        "Jill threw her head back and let Dawn take her time eating her pussy. Dawn was working on Jill pretty good. I looked at Mike and he was just staring at Jill and Dawn, about 15 minutes later Jill was building to her first orgasm.\n\n\"Oh yes!! Suck my clit!!\" Jill let out.\n\nJill shoved her hips up against Dawn's mouth several times. Dawn removed her mouth from Jill's pussy and began to slowly lick and kiss the inside of Jill's thighs.\n\n\"Oh god Dawn!!\"\n\nI giggled under my breath, Lieke turned to look at me with a puzzled look.\n\nJill was panting now as Dawn licked nearer and nearer Jill's pussy.\n\n\"Oh yes!!\" Jill let out.\n\nDawn reached up and slid two fingers inside of Jill and worked them around.\n\n\"Ooohhhh yes!\" Came from Jill.\n\nDawn slowly worked her fingers in and out of Jill's pussy for a few minutes, just fast enough to keep Jill on the edge but not push her over.\n\n\"Oh yes Dawn!\"\n\nDawn pulled her fingers out of Jill's pussy and leaned forward and began to kiss and lick Jill's pussy lips. Jill inhaled sharply several times. Dawn kept kissing and licking just enough that it was frustrating Jill. Jill reached down and grabbed the back of Dawn's head and pulled her in hard, she was desperate. I could see that Dawn had stuck her tongue in and was licking Jill's clit slowly. Jill let go of Dawn's head thinking Dawn was finally going to get her off.\n\nAs soon as Jill let go of Dawn's head, Dawn leaned back and took her fingers and spread Jill's lips apart exposing her swollen clit, she leaned forward and licked it once.\n\n\"Oh god yes!!\" Jill screamed.\n\nAbout every 10 seconds Dawn would run her tongue up and over Jill's clit. Jill was twisting and moaning in frustration.\n\n\"Dawn, please!!!\" Jill screamed.\n\n\"We will be at the house in a few minutes,\" the driver announced.\n\n\"No!!!\" Jill screamed.\n\nDawn reached up and suddenly drove three or four fingers in Jill's pussy and worked them in and out hard as she sucked on Jill's clit.\n\n\"Ahhhhhhh!!\"\n\nHarder and harder Dawn jammed her fingers in and out, stretching Jill's pussy.\n\n\"Oh god, yes, yes, yes!!!\"\n\nJill began thrusting her hips up into Dawn's mouth over and over. Dawn had her mouth over Jill's clit sucking and licking as hard as she could.\n\n\"Ahhhhhhh!!!\" Jill screamed as she was hit with a huge orgasm.\n\nJill was jerking and twisting and screaming as Dawn pushed her over the edge.\n\n\"Yes!!!\"\n\nJill trust her hips up and held them as she jerked over and over, then she collapsed back into the seat. Dawn pulled her fingers out of Jill and tenderly kissed her pussy. Jill would jerk and moan each time Dawn kissed her.\n\nJill was breathing heavily as Dawn moved up and planted her mouth over hers and kissed Jill. Jill pulled Dawn's head to hers and they tongued and kissed for several minutes.\n\n\"We're home!\" I said as we pulled into the driveway.\n\n\"Oh my god, Dawn...you were terrible to me!\" Jill said.\n\nDawn laughed as she sat up in the seat next to Jill.\n\nThe car stopped in front of the house, the driver got out and opened the door then went to get everything out of the trunk. Jill slowly moved and got out of the car with Dawn. Mike and I looked at the two of them standing there naked in the moonlight.\n\n\"Did you enjoy Mike?\" I asked.\n\n\"Yes, very much, they were hot!\" Mike said.\n\n\"Lieke did you enjoy it?\" I asked.\n\n\"It was pretty hot,\" she said.\n\nWe all got out of the car, Jill and Dawn were already headed toward the door. I settled up with the driver and we grabbed the trophies and headed into the house. I opened the door and we all went in.\n\n\"Oh my god, I am exhausted,\" Jill said.\n\n\"I am too,\" Dawn replied.\n\n\"Would anyone like something to eat or drink?\" Lieke asked.\n\n\"I'm going to bed,\" Dawn said. \"Jill you want me to show you to your room?\"\n\n\"Please, come on Mike.\"\n\n\"You too James,\" Dawn said.\n\n\"I will be there in a few minutes,\" I told her, not that she heard me.\n\nLieke and I were left downstairs putting things away.\n\n\"Lieke, we had a really good time tonight, thanks for inviting us.\"\n\n\"It was fun.\"\n\n\"Did you have a good time?\"\n\n\"Yes I did.\"\n\n\"Did you have a good time watching Jill and Dawn?\"\n\nLieke looked up at me.\n\n\"Yes...I did.\"\n\n\"Are you going to bed now?\" I asked.\n\n\"I think I will, it is late.\"\n\n\"Lieke, are you going to go to bed and get yourself off from all the excitement? I bet you are pretty horny...and wet.\"\n\n\"Emmm...I...I guess I will,\" Lieke replied.\n\n\"Come with me then,\" I told Lieke as I took her by the hand and led her to her bedroom.\n\n\"What are doing?\"\n\n\"I'm going to take care of you,\"\n\n\"What do you mean?\"\n\n\"Just take your clothes off,\" I told Lieke as I got her to her room.\n\nShe stopped and looked at me and then started taking her clothes off. Once she was naked I pushed her down on the bed then crawled between her legs. When I spread her legs her pussy was dripping wet, she was really horny.\n\n\"James, what are you going to do?\"\n\n\"I thought I would eat that sweet little pussy of yours.\"\n\n\"Oh god!!\"\n\nI moved between Lieke's legs and kissed my way up her thighs until I reach her pussy, then I placed my mouth over her pussy and beginning working Lieke to a huge orgasm. She was a little shocked at first but relaxed and laid back while I went to work. Lieke tasted sweaty and sweet. I pushed my tongue in her pussy and she bean moaning immediately. She was really hot and I wanted to make sure she got to get off just like Dawn and Jill did.\n\nI worked Lieke over and over and drove her to a screaming orgasm after about 15 minutes. She was pulling my head into her pussy as I licked and sucked on her over and over. She eventually pulled my head away and asked me to stop. I kissed up her naked body and kissed her lips.\n\n\"Better now?\" I asked.\n\n\"Oh my god!! You are crazy!!\"\n\n\"I better get to bed, I just wanted to make sure you got what you needed. Don't worry about getting up early and fixing breakfast, I imagine everyone will be sleeping late.\"\n\nI kissed Lieke again.\n\n\"Good night.\"\n\n\"Good night to you.\"\n\nI left Lieke and went upstairs, Dawn had crashed, lying on the bed naked sound asleep. I got undressed and got in bed next to her. "
    ],
    "authorname": "drmac100",
    "tags": [
        "lottery",
        "james",
        "dawn",
        "lesbian",
        "hawaii",
        "strip"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/life-after-the-lottery-ch-26"
}