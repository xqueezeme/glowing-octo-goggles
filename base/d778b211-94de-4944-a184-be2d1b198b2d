{
    "title": "Katja Pt. 17",
    "pages": [
        "Author's Note:\n\nSorry it's took so long for this part. I'm coming to the end of this part of the story, more or less, so I'm trying to figure out how to end it so it flows into the next part of the story. I'll do another part so that it segues into the new one, and it'll more than likely be about the arrival of another species and/ or the other new town. However, I'm still working up the idea and plot for the new one and it might take a while.\n\nAlso, I pinched a nerve in my right elbow and about two-thirds of my right hand is numb. They fixed it, sort of, but I'm extremely right-handed, so I'm forced to hunt and peck my typing at the moment. LOL\n\nThanks for all the emails, and ideas that were sent.\n\nThis is a work of pure fantasy.\n\nThe story contains sexual activities and situations between a man and a humanoid cat-girl that are to be read only by readers above the legal age of consent. All characters having sexual relations are above the age of 18. Or whatever the legal age is on whatever planet they came from. All the character names, places are made up and not real.\n\nYes, the Ancient Alien people were right. This is Part 17 of a love story and more of a human male and humanoid cat-girl from another planet. \n\nAlso, for convenience and to keep the story moving, everything has been converted to English such as language, measurements and names, etc. etc.\n\nAs are most of the stories I've written and will write, if you're looking for story that goes, \"They met, they had wild sex, the end\" I would advise reading something else. \n\nI still consider myself an amateur writer, so please take that into consideration when you read it. I write for my enjoyment and for the people that like it. And remember, this is pure fiction and fantasy.\n\nIf you don't like how and what I write, oh well. Don't read it. My feelings won't be hurt.\n\nFor those of you that do like what I've posted so far, thank you and I hope you enjoy reading it as much as I did writing it.\n\n65rebel\n\n*****\n\nShe turned to Briast and smiled, \"So daughter, please look after and train Geoff well. The expanded mind speech was a good start and will help him later on as he grows into what he will become. This world does not need a Heracles or a Perseus now. It needs a teacher and peacemaker.\"\n\nBriast looked at her in surprise, finally understanding what she meant. She giggled, \"I will, and here I thought it was my training that made him able to pick things up so quick.\"\n\nBast looked at her, \"What is this sound you made?\"\n\nBriast smiled at her, \"I learned it from the children, they call it a... giggle. It indicates a small source of amusement. It seemed appropriate and useful.\"\n\nBrigit and Bast looked at one another, then both shook their heads, and were gone.\n\nBriast smiled to herself. \"They wanted a young Goddess, that's what they got.\" They would just have to learn to deal with what goes with it. Then another thought came to her, \"I wonder if the One would let me have a mate?\" She giggled once more, remembering what she had seen Erik and Katja do when they were alone. Once again, the giggle seemed appropriate. Then she was gone as well.\n\nPart 17\n\nSince the new ship landed, many things had occurred. Ariel and Katja's family's, plus others from the recent landing that were going to settle New Lyonn, had moved into the original ship's quarters. Erin and Nemo had moved in with each other and Erik had started training for them all. He had also traveled to Arizona a few times, to start the training there and teach the others so they could give the classes themselves. \n\nMuch like Erik had learned when he first came to the ship, Erin had been surprised on how easily she was accepted. No one treated her any different then one of their own. She did some training Celia had given her and since Nemo had to attend training, she also helped Helen with some things and Allie at the learning center. That was by far her favorite. The children were extremely smart and advanced as compared to human children of the same age. Granted, she still had to put up with occasional growl from little Gesa, if she paid to much attention to Geoff.\n\nTony and Ariel were getting close to moving day, they were going out a couple weeks earlier than Erik and Katja. They still had a little bit to do around the house and still had some things to get. Tony had joked with Erik, \"Just when I think we've got it covered, I remember something else I need to get.\"\n\nErik nodded, \"Yeah, it was the same when I moved in here. The one big thing I forgot was I needed things to do upkeep on the outside, lawn mower, edger and other things like that.\"\n\nTony had looked at him and sighed as he picked up the pad he had listed everything they still needed or had to do and wrote down, outside stuff. \"I forgot that too.\"\n\nAbout two weeks later.\n\nIt was moving day for Tony and Ariel. Erik and Nemo gave Tony a hand loading his bike, and the rest of the boxes in the trailer he rented. The girls were making lunch and showing Erin how to make one of the adapted Lyonness meals.\n\nThey were heading out after lunch and then a couple weeks or so later, Erik and his family would also move. They had hired a moving company for theirs and they would be there three days before to pack everything, accept what they were taking with them. Which was mainly personal items, fragile things and items they'd need before they moved into the house. \n\nAfter the company packed them up, they would come the next day and pick it all up for delivery. They had told them it would take a day to get everything to them as it wasn't that far. Since they had to be there for the packing up and loading, they had planned on staying at the ship and Katja's mom would look after the children while they were at the house. Once the company loaded everything, they'd drive out and stay in their old quarters at New Lyonn the night before and be at the new house to await the moving truck.\n\nAzlan, Helen, Nemo, Erin, uncle Geoff and Victoria, Katja's parents, Ariel's parents, along with Axel and his family would show up few weeks later, then the rest of the people would start moving a couple weeks after. Instead of everyone moving at once, they had decided it would be better to spread it out.\n\nErik had asked Julius to come out early since he had experience with fixing and upgrading housing, he would help Azlan, like Tony was helping him. Then Cassie and Lexi would be assisting Allie at the learning center setting it up, and Erin would give Helen and Allie a hand until Celia moved out to open the store and start her training for real and work at the store.\n\nJack and his family would be out in another couple months, he was just waiting on the closing for his house and office not far from where Erik and Katja's house was. This made Lucy and Jonny happy, they would be going to school together at New Lyonn at the learning center as were Brigette and Geoff. \n\nJack had talked to Erik and Allie about it. Lucy was so far advanced for her age, the public school in the town wouldn't be able to keep up with her, Geoff and Brigit were the same way. So, the best idea would be to have them attend school at the learning center. Allie had tested all three of them and found that Geoff and Brigette, even though they were about a year old, were really at the level of a four or five-year-old Lyonness child. Lucy was tested and Allie told Jack and Maria that she was on the same level as Jonny or a little higher really. What this meant was, that she was about the level of a human fifteen-year-old, if not older.\n\nThen Erik added, \"Plus, if you think about it, it would help her since her \"flock\" would be at New Lyonn and she should know more about them. Once she gets older, you'd probably want to test her again to see where she's at.\" He smiled, \"Actually, if I'm not wrong, you might also want to have her tested by Mensa International. I wouldn't be surprised to see her at a genius level when she's done.\"\n\nThey all had lunch together, then they walked Tony and Ariel out to the car. They said their goodbye's and Erik said they'd see them in a couple of weeks. Tony nodded, \"Okay, we'll see you when you get there. Give us a call and we'll meet you at the town.\"\n\nThey waved as they rode off, then Erin and Nemo said they were headed back to the ship. They said goodbye and they headed back into the house. Erik and Katja sat on the couch and Katja was curled up like normal. It was a little strange to be by themselves, everything was quiet. Or at least it was until the kids and cats started to play a game of tag. Or at least, Erik didn't know what else to call it. It seemed to involve a lot of giggling, meowing and purring as they chased each other around the room.\n\nKatja laughed as she watched Geoff sneak around a chair, then was surprised when Cleo licked him on the face as he put his face around the edge of the chair.\n\nErik laughed also, \"Well, we had a little bit of quiet.\" Then he laughed louder as he saw Cleo jump on Geoff's chest and licked at his face making him giggle.\n\nErik smiled, \"I'm not sure, but I think Cleo won.\" He watched as Geoff hugged Cleo to him as she rubbed her face against his.\n\nTony and Ariel rode along talking about what they still had to do and what they had to buy. \n\nAriel smiled, \"It such a beautiful day. It's always nice to start something new when it's nice out.\"\n\nTony nodded, \"I agree, it's to bad we weren't able to ride, it would have been perfect for that.\"\n\nAriel nodded her agreement, \"Well, I guess we'll have plenty of time to ride. Were you serious hon? About teaching me to ride when you teach Nemo, I mean?\"\n\nTony grinned, \"Sure, I don't see why not. We can get you your own bike and you can get your license.\"\n\nShe smiled, \"Great, that should be fun. It doesn't look to hard to learn.\"\n\nTony nodded, \"It isn't, its easy to learn. The hard part is learning all that goes along with it so you can learn to watch out for all the idiots on the road that don't pay attention to people on motorcycles.\"\n\nThey drove along a little more, then he said, \"We should get in around dinner time. I guess we should go out tonight, then go shopping in the morning to stock up on everything we'll need. I also think we should just relax tonight and start unpacking tomorrow.\"\n\nShe smiled, \"That sounds good to me, we really don't have that much to unpack.\"\n\nHe nodded, \"We can bring everything in tonight and put the bike in the garage. I think I'll hold on to the trailer for a few days. We still need to get some bigger stuff and it would be easier with the trailer.\"\n\nShe looked at him, \"I thought we got all the big stuff?\"\n\nTony grinned, \"I thought so to, until Erik reminded me of something I forgot, we still need the stuff for outside. Lawn mower and things like that.\"\n\nShe nodded and they went back to just relaxing and enjoying the ride. \n\nThey finally got to the house and Tony backed the trailer in up to the garage. They got out and opened up the house and walked in. Tony was happy as they walked around, the best thing Erik and him had done, was to hire the caretaker to keep an eye on things. He had called him and asked him to plug in the refrigerator and take care of a couple things for him. That way, it was all ready to move into once they got there.\n\nThey unloaded the trailer and brought the boxes and the rest into the house, then he moved the bike into the garage. Once done, they cleaned up, then headed out to dinner and once they got back, they checked over the list again to make they had everything on it. Satisfied, they went bed after relaxing for a while.\n\nThe next morning, they got up and dressed, then Tony kissed her. He smiled, \"You certainly smell good this morning.\" He felt himself get slightly hard. \n\nAriel grinned as she kissed him back and felt it. \"Didn't you get enough last night?\"\n\nHe laughed, \"I can't help it, you look and feel so good this morning. Maybe it's because we're in our own place.\"\n\nShe smiled back and stroked his face, \"I'm glad you like it. Now let's go eat, I'm really kind of hungry.\" He smiled and they went to breakfast.\n\nOnce finished, they headed to the grocery store. Since it was early, it wasn't too crowded and they went up and down the aisle's picking up various things. Since the town still wasn't very used to seeing Lyonness yet, they drew a little attention. But they were used to it, and it was mainly the children anyhow.\n\nAs they went to get into a checkout line, Ariel heard someone ask, \"Are you really part kitty?\"\n\nShe looked down and smiled, it was a cute little human boy. She gave him a smile and stooped down saying, \"Well, sort of, it's a little hard to explain. What's your name?\"\n\nHe had his mouth opened, a little stunned that she could talk. Then he smiled shyly, \"I'm Billy, what's yours?\"\n\nShe smiled, \"That's a very nice name, my name is Ariel. \"\n\nHe grinned at her, \"That's a pretty name, your very pretty too. And you have a tail.\"\n\nAriel laughed; they always liked the tail for some reason. \"Oh, you mean this?\" He giggled as she tickled him with it.\n\nHis mother smiled, \"Thank you for talking to him. He saw your people on TV, but never saw a real one of your people. He kind of though it might be made-up.\"\n\nAriel smiled, \"That's alright, we're used to it by now.\"\n\nHis mother grinned, \"I suppose you must be. Are you from the old base?\"\n\nAriel shook her head no, \"Not right now, but we will be working there. We live here in town; my mate and I brought a house here.\" She told her where.\n\nThe woman smiled, \"That's wonderful, that's not too far from where we live, a couple of blocks or so. I'm sure you'll like it here, we do.\" \n\nThen she asked, \"Your mate? That's like your husband, right?\"\n\nTony smiled, \"More or less, we're mated by Lyonness laws and customs, while not exactly the same, it's close.\" He grinned, \"Just a different set of papers really.\"\n\nAriel grinned and nodded, \"We're thinking about getting married, it would make it easier for a lot of things. They haven't gotten to the point where the government is recognizing our mating as legal yet. But I understand they are working on that.\"\n\nAriel smiled and added, \"The couple we were living with had gotten married, it was very nice ceremony.\"\n\nThe woman smiled, then said, \"By the way, my name is Cindy.\"\n\nAriel grinned, \"It's a pleasure to meet you, I'm Ariel and this is my mate Tony.\"\n\nIt was their turn to checkout and while Tony started to put things on the small conveyer belt, Ariel said to Cindy. \"I'm sure will see each other again, since your so close, maybe you can come over for dinner or something.\" Ariel rolled her eyes, \"If we ever get everything done and unpacked.\" \n\nCindy laughed, \"Yes, it does seem to take forever, doesn't it. But that's sounds really nice, I look forward to it.\"\n\nThey swapped phone numbers and Ariel started giving Tony a hand.\n\nOnce they were done, they pushed the cart out to the car and they loaded up the trunk and back seat with all they brought. Tony smiled and gave her kiss. \"Well, that should last us for a little while.\"\n\nAriel laughed and hugged him. She felt herself get warm as Tony held her and breathed in her scent saying, \"Umm, you really smell good today love.\" He found himself getting hard as he kissed her.\n\nAriel grinned as she felt it, \"Like I asked before, didn't get enough last night?\"\n\nTony licked her ear, \"Never enough of you love.\"\n\nAriel shivered, then it turned to a shudder as she felt herself get wet. She purred, \"Why don't we head home?\"\n\nTony nodded and opened the door for her. As she walked to the door, she saw a group of three woman talking and looking their way. Ariel frowned and shuddered again, then she found herself getting extremely angry that these women were staring at her Mate.\n\nShe shook her head and her eyes went wide. \"Tony, take me home now. Please hurry.\" She got into the car quickly.\n\nTony looked at her and asked worriedly as he got in, \"What's the matter kitten?\"\n\nAriel looked at him, eyes wide open and her breathing slightly faster. She shuddered again and said shortly, \"Nothing is the matter, just drive.\"\n\nTony was startled, but did as she asked, \"Are you going to tell me what's going on?\"\n\nShe reached over and took his hand. \"I'm sorry love, it's just we're going to get what we wanted my mate, I'm going into heat. It's not to bad yet, but seeing those women look at you started to set me off.\" \n\nShe smiled at him, \"That's why you love my scent so much and it got you so hard, it's letting you know I'm getting ready.\"\n\nTony smiled, \"Is there anything I can do?\"\n\nShe grinned at him and licked her lips, \"I'm sure you can think of something.\"\n\nHe laughed, \"Yeah, we've had a lot of practice at that.\"\n\nAriel grinned back at him, \"Just get me home. Luckily, I recognized it early, we won't have to go through what Kat and Erik did. It's a good thing we went shopping this morning, I won't be able to leave the house until sometime tomorrow or the next day.\"\n\nTony nodded, and once they got to the house, they quickly unloaded the car. \n\nThey put the stuff away, though it did take a while, as Ariel would stop and rub against him or kiss him, every time he came near her. Once they were done, she came up and hugged him, then kissed him as she rubbed their bodies together.\n\nTony felt himself get hard each time she did it, and her scent got stronger and sweeter each time she did. They started to unpack a few things and she started to get warmer and every time Tony came near her, she felt herself get wetter and wetter.\n\nThe next time they came together, she growled and grabbed him. She locked her lips on his and their tongues played together as she reached down and took hold of his cock, stroking it through his jeans.\n\nShe smiled, \"Maybe I'm a little farther along than I thought.\" She purred and pulled his shirt off, then buried her face in the junction of his shoulder and neck to lick, kiss and nip at him.\n\nTony groaned as he smelled her again, it was a lot stronger now. She reached down and fumbled with his belt, then unbuttoned his jeans. She reached in and took hold of him as she licked and nuzzled at his neck. She shuddered and lightly bit him, amazed that it was progressing this fast, then she said, \"It's time, now come with me.\" Still holding onto his cock, she pulled him towards the bedroom.\n\nTony was a bit surprised at her, she was getting very aggressive. Then he realized that had to be because of her condition, her system was telling her it was time to mate and that's what she was going to do no matter what.\n\nOnce they got into the bedroom, she stripped his clothes off and pushed him back on the bed. Then she looked at him with a feral look in her eyes as she licked her lips and started to rip her clothes off. Once she was naked, she stared at him again and started to massage one of her breasts as her other hand slid down to massage her pussy. \n\nTony watched her, his cock getting harder as he did. He wasn't sure what to do next, should he just let her take charge, or should he. He saw her pussy was shiny with her juices as she rubbed herself and as her scent wafted to him, he reached a hand out to her.\n\nAriel felt herself get very warm as she looked at her mate laying on the bed. A shudder went through her as she sensed his pheromones. She reached down and stroked herself, then he held out his hand to her. With low feral growl, she grinned as she slowly got on the bed and worked her way up to him, her tail flicking back and forth as she smelled her mate as she got closer. \n\nWith a growl, she pounced on him molding her body to his, she felt his wonderful hard cock against her pussy and she rubbed up and down on his member getting it wet with her juices as she nuzzled at her mates' neck once more. She purred loudly, then mewed like a kitten as she felt it rub against her clit. She bit at his shoulder once more as she shuddered.",
        "Tony was getting extremely worked up himself the minute she laid on top of him, her scent was very strong now and her wet pussy rubbing against his cock was driving him crazy. Then it was his turn to growl as his base instincts took over. \n\nHe held her and turned her around so he was on top. He kissed her, then slid down to lay between her spread legs to lick up some of her juices. Her taste and smell made his mind soar with his desire for her. He shuddered and kissed his way up her body, his cock laying between her pussy lips. Supporting himself with one hand, he reached down to take hold of his cock and rubbed it up and down her pussy getting it wet and slippery. He started the head in her and placed his hands on either side of her and leaned down to kiss her.\n\nAriel gasped as she felt her mates cock spread her pussy open, she growled with pleasure, then she looked at him and said with pure lust and want, \"Please my mate, let it be now, take me. I need to feel your cock sliding in and out of me until you fill me with your seed.\"\n\nTony slowly slid his cock into his mate, she was so wet that he just slid all the way in and Ariel shuddered in pleasure as she felt it bottom out, then she wrapped her legs around him holding him tightly in her.\n\nTony's mind was spinning with emotion and his senses were going crazy as he started to make long slow strokes in and out of his mate. The feeling was indescribable as he felt her pussy grip and massage his cock as he made love to her. He had thought from the moment her entered her, he wouldn't be able to last long, but he was so wrong. Their pleasure just built and built until it was almost painful. Then Ariel yowled and growled out, \"Now my love, fill me please.\"\n\nHe slid into her all the way and he started to climax, but this was like nothing he had ever experienced with her before in all the times they made love. His orgasm started and it felt like he would never stop cumming. His head spun from the feeling, he reached down and pulled his mate to him. As he climaxed, he said to her with a moan, \"I love you my mate, you are mine, I am yours. We are together always.\" \n\nWhen Tony pulled her up to him, his cock rubbed on her clit and made her climax with him. Then when she heard him repeat their mating vow again, her orgasm doubled in strength and both of their primitive sides broke loose.\n\nShe bit into his shoulder again, this time sinking her fangs into him as she clawed at his back with a feral growl, then Tony did the same to her, his teeth were nothing like her fangs, but it accomplished the same thing.\n\nAs they soared in pleasure, they felt the earth lurch and then they both felt themselves separate from their body's. Then they saw two figures and knew that they were the presence of the Goddess Bast and Odin All-Father. They smiled at their children and blessed them and their joining.\n\nThen they heard, \"Be well our children, and know that you are loved and blessed.\" \n\nThey felt the love of both the God and Goddess, then they felt them lovingly caress both of them, making Ariel's and Tony's hearts and minds soar with the love they felt for them.\n\nThen, a young Goddess appeared to them. \"I am Briast.\" They saw that she was breathtakingly beautiful, She had long wavy reddish-brown hair, Emerald green cats-eyes, and her skin was a pale bronze color. They had heard her voice, but had never really seen her clearly before. She smiled at them, \"Your children will begin the healing of this world, as the children of Katja and Erik will. Your son will be Brigette's mate when they come of age and they will be joined by others from other couples like yourself and then from their own young when their time comes. Know that you are loved and blessed.\" She caressed them, then all three were gone.\n\nThey finally came back to reality, holding each other and still joined. Once they were able to control themselves, they separated, and laid next to each other kissing and stroking one another.\n\nWith tears in her eyes, Ariel kissed Tony, \"I love you so much my mate. We will soon have our children and we will care for them, love them and teach them.\"\n\nShe kissed him and purred, \"My life is perfect, and it's all because of you dear one. When I volunteered to go with Katja and the others, I never once thought I'd find what I have now.\"\n\nWith tears in his eyes, Tony held his mate to him, \"So is mine my love. The best thing that I ever did was when I told Erik yes when he told me he had a girl for me to meet. I love you more than life itself Ariel.\"\n\nThey held each other for a while, then got up to get cleaned up and dressed, then decided to get something to eat and drink. Once finished, then went back to unpacking, thought they did have a hard time as they held one another and kissed every time they came close to one another. They spent the rest of the day unpacking and making love whenever the mood came on. Tony found that his cock stayed semi-hard most of the day as Ariel's scent was still strong and sweet. Ariel found the same with him, so they didn't get much unpacking done, but making love was better than that anyhow.\n\nThey got up the next morning and they were both a mess. They must have made love a half dozen times yesterday. Just when Tony thought he'd never be able to again, he smelled her and he was hard once again. But, they were both paying for it this morning.\n\nThey laid in bed and looked at each other with tired grins. Tony kissed her, she still smelled wonderful, \"I think we need to get up kitten. We're both a mess.\"\n\nAriel smiled and returned the kiss. \"I think your right; I can't believe how many times we made love.\" She giggled, \"I'm so sore, I guess I found out what my limit was\"\n\nTony grinned and licked his lips, \"If you want, I can kiss it and make it better.\"\n\nShe grinned back, \"No, I don't think so. That might start something neither has the strength for right now.\" Then she leered at him, \"But, keep in mind for later.\" \n\n\"Right now, I want to get clean and I need food. I think we burned up a week's worth of food yesterday.\"\n\nHe kissed her smiling, \"I'm in the same boat love, I think you wore mine down to nothing. How about I make you French Toast for breakfast?\"\n\nShe grinned, \"Umm, with bacon?\"\n\nHe grinned, \"Yes, with bacon.\"\n\nShe kissed him, \"Good, you go get cleaned up first, that way you can start while I'm getting cleaned and dressed.\"\n\nHe kissed her once again and smiled as he got out of bed. She watched him, then winced as she saw the claw marks all over his back. There was so many of them, they crisscrossed all over his back.\n\nShe called to him, and he turned, \"I'm sorry I clawed you up so bad love. Once you clean up, let me put some salve on them before you put your shirt on. It's in the case on the counter.\"\n\nTony's back stung in multiple places, but he ignored it knowing what it must be. \"I fine love, but if you insist, okay. But, it's not that bad.\"\n\nAriel rolled her eyes, then told him the same thing Katja had told Erik, \"Males are all alike. Your leg could fall off and you'd say it was a just a scratch.\"\n\nShe smiled, \"They may not hurt, but I don't want them to get infected.\"\n\nTony smiled and nodded at her, then went into the bathroom. He finished up and looked through the case and found the tube of salve, then came back out. He smiled as Ariel was still naked and stretching like a cat, she looked so sexy like that. \"Here's the salve hon.\" He smiled at her and handed the tube to her.\n\nAriel grinned at her naked mate. He looked and smelled so good, his cock was semi-hard and he stiffened as she looked at him.\n\nShe took the tube, \"Turn around.\" He did and she winced again as she saw all the claw marks on his back, and bite marks on both his shoulders. She dabbed the salve on, then turned him around, and she hugged him. Then looked at each other and she grinned as she sat down on the bed and lowered her head to kiss his cock, then suck it a couple times.\n\nTony moaned, not believing he was hard again after yesterday. She grinned up at him, \"Just checking to make sure your all clean in case I want to use you again a little later.\"\n\nShe grinned at him, \"Now, why don't you put some clothes on and make us breakfast.\"\n\nTony moaned and picked her up holding her to him, her feet dangling off the ground as he kissed her. Then he laid her back on the bed, then stood letting his hand slid down from her neck to her pussy. He grinned as he tickled her clit making her shiver and grin at him. \"Okay, you go get cleaned up while I make breakfast.\" \n\nThen he leered at her, \"And after breakfast, maybe I'll check you to see if your clean.\"\n\nTwo weeks later.\n\nErik, Katja and the children were driving towards their new house. The movers had packed everything, picked it up and their belongings were on the way. They joined uncle Geoff, Victoria, Helen, Azlan, Katja's parents, and Ariel's parents for dinner last night on the ship. Then in the morning, they went to the dining hall for breakfast, were all the repair techs doted on the children for their last day on the ship. \n\nGeoff and Brigette had so many adopted aunt's, uncle's, and grandparents among the crew it was impossible to keep track of them all. Most of them would also be moving in another month or so, but they still wanted to see them before they headed out.\n\nAs they drove, the children were constantly asking questions on what they saw through the car windows. Erik grinned at Katja as they drove through a rural area, and the children saw their first cows and horses. It was a constant supply of, mommy or daddy look at this or what is that. \n\nLike Tony had done, Erik had also rented a small trailer to carry all the things they had packed up. Cleo and Caesar were curled up together on the floor sleeping, neither of them cared for riding in the car, but they knew it was necessary. They had both been slightly put out, because they had lost their favorite spot and their house. Katja explained it to them, and their house was one of things in the trailer. The couch would have to wait until the moving truck showed up the next day.\n\nA couple of hours before dinner, they turned onto the road to the base, then drove up to the gate. Once everything had been completed, the gate and the fencing would more than likely come down. They hadn't wanted the town to turn into a gated place, they wanted to be no different than any other earth town. But with all the construction going on and would be going on, it just made sense to keep it for now.\n\nThe guard smiled and passed him through as soon as he saw who it was. Erik waved to him and then headed towards the main building complex and parked. He smiled and said to Katja, \"Tony and Ariel must be here, that's his car.\"\n\nKatja smiled, \"Ariel said they'd meet us here if they weren't too busy.\"\n\nThey opened the back doors and helped the children out of their car seats. She told Cleo and Caesar to wait here for a few minutes and they would be back for them.\n\nThey walked to the main building and into the dining hall. They smiled as they saw Ariel and Tony talking together. Before she could say anything, Geoff and Brigette said loudly, \"Uncle Tony, Aunt Ariel.\" \n\nThey looked up and smiled as they saw the kids running towards them laughing. Brigette had made a bee line to Ariel as Geoff did to Tony.\n\nErik and Katja grinned as they saw the children hug them laughing. The few other people in the hall stopped and watched also smiling.\n\nGeoff laughed, \"We missed you so much, we saw cows and horses on the way here.\"\n\nTony laughed, \"Did you now? You're so lucky. So, I guess you enjoyed the ride out.\"\n\nGeoff laughed and nodded, \"Yes we did. It was boring for a little, then we saw all the animals and other things.\"\n\nAriel grinned as Brigette hugged her and almost repeat the same thing. Brigette hugged her favorite aunt, \"We missed you so much. We haven't seen you in forever.\"\n\nAriel grinned, anything over two days was forever to her niece. \"I missed you to kitten.\"\n\nErik and Katja walked up and gave them both hugs, kisses and handshakes. Erik smiled, \"So, how's everything been?\"\n\nTony grinned, \"Very good really, we're all moved in and unpacked. We still need to get a few things, but nothing major.\"\n\nAriel nodded, \"We've been busy. But we do have some news.\"\n\nKatja smiled and asked, \"What's the news?\"\n\nAriel looked at Tony and he smiled, then she said, \"Well, our niece and nephew here are going to have some new playmates.\"\n\nKatja laughed and hugged her while Erik did the same with Tony, then they switched.\n\nKatja grinned, \"I'm so happy for you two, this is fantastic. Have you seen the doctor yet?\"\n\nAriel grinned, \"Well, we saw a doctor, but not the doctor, who's the expert. We're having a male and female, they'll more than likely be like your two.\"\n\nKatja grinned again, \"That's so wonderful Ariel.\" \n\nAriel grinned, \"I know, my big ape of mate here hasn't stopped grinning since we found out.\" She kissed Brigette, \"How about you kitten, you going to like having a cousin to play with?\"\n\nBrigette smiled and hugged her aunt. \"Yes I am, I think he'll be fun.\"\n\nAriel smiled, \"He'll be fun? \n\nBrigette nodded excitedly, \"The nice lady said we'd have fun together.\"\n\nAriel and Katja looked at each other, the Katja asked, \"The nice lady kitten? You mean Briast?\"\n\nBrigette smiled and nodded. \"Yes, she told me aunt Ariel's and uncle Tony's son was going to be my friend.\"\n\nThey shook their head's as they looked at each other. The Ariel asked, \"Well did She say anything about your female cousin?\"\n\nBrigette shook her head no, then she whispered to her aunt, \"But I think aunt Helens son will be her friend.\"\n\nKatja grinned and said to herself, \"Well, she said they were going to take a more direct hand. She felt warm flash and knew it was the truth.\n\nThen she asked, \"Do your parents know yet?\"\n\nAriel smiled, \"Not yet, nor Tony's. We only found for sure this morning. They're still setting up the med section, they had to wait for the equipment to come in. They're fine for day to day things, but pregnancy testing was not high on the list. So, we had to wait on this morning's shuttle.\"\n\nShe grinned, \"We'll call them after we go home. Speaking of home, you two are going to stay with us tonight instead of here.\"\n\nKatja smiled, \"It's only one day, we...\"\n\nAriel grinned, \"That wasn't a suggestion. It's better that way anyhow, we can watch the children and the cats, while you two oversee them moving everything in. That way they're not underfoot. Tony's telling Erik right now.\"\n\nKatja grinned and hugged her sister. Then she looked over and Erik was doing the same.\n\nErik grinned, \"I suppose your not taking no for an answer?\"\n\nTony grinned, \"Got it in one. Look bro, we can keep an eye on the kids and cats while you keep an eye on the movers. It only makes sense.\"\n\nErik nodded, \"Okay, your right. I tell you what, we'll follow you home, and we can drop the kids, cats and girls off. Then you can take a ride with me and I'll drop off the trailer at the house and we'll come back.\"\n\nTony nodded, \"Sounds like a plan.\"\n\nThey dropped the girls, kids and cats at their place, then Erik and Tony went to drop the trailer off and then headed back. They all had a nice time that night, Tony showed them all they did to the house and were still planning to do. Katja was giving Ariel advice on her pregnancy while she held Brigette. She smiled as she hugged her, \"Just getting in a little practice.\" \n\nGeoff was following his father and uncle around as they discussed various things left to do on the house. \n\nThey decided to treat Tony and Ariel to dinner and they took them to a diner they found. Then once they got back, they all relaxed. Tony asked, \"Did they say what time they'll deliver everything tomorrow?\"\n\nErik nodded, \"I got a message from the crew earlier, they're gonna be here about ten, baring complications. I figure they'll have everything offloaded by one or so. It took them like three hours to load it all on the truck.\"\n\n\"They really did a nice job packing everything up, so it should be a breeze to unpack everything. All the boxes are labeled with what's in them and what room it goes to.\"\n\nTony nodded, \"That should make it easier, no searching for stuff as you go. We'll give you a hand on Saturday with it.\" \n\nErik nodded, \"Thanks, I appreciate it.\" \n\nThen he laughed, \"I was very close to selling the house with all the furniture and things, then just buying new, so I wouldn't have to go through all that. But it shouldn't be too bad.\"\n\nTony grinned himself, \"It is a little easier, but a little rougher on the wallet. Speaking of selling, everything going good with that?\"\n\n\"Yeah, I contacted the guy I brought it from and he's taking care of everything. Granted we'll have to go back for the closing. If it goes for what he thinks it will, we'll make a nice profit even with everything I've put into it.\"\n\nThey finally all went to bed and the next morning, Erik smiled as he woke. Geoff and Brigette were curled up together between him and Katja. Then he saw that Cleo and Caesar were the same way by their feet. Luckily, it was big bed.\n\nHe leaned over and kissed Katja and she smiled at him and at the children. She stretched as much as she could, \"Morning love. Good thing this is a big bed.\"\n\nHe grinned back at her, \"I was just thinking the same myself.\" He smiled as Brigette woke, and stretched much her mother did. She smiled at her father and wiggled up till she was snuggled against him. She yawned, \"Morning daddy.\"\n\nHe kissed the top of her head and pulled her close to him. \"Morning kitten, did you sleep well?\"\n\nShe smiled and nodded, \"Yes I did, it was nice to snuggle up to someone since me and Geoff don't sleep together much anymore except for naps.\"\n\nThen Erik grinned as he heard Geoff say, \"But you had your tail in my ear, again.\"\n\nBrigette giggled, \"I know, I thought you missed it.\"\n\nHe yawned, and stretched himself. \"No, I didn't.\"\n\nKatja grinned as Geoff snuggled up to her like Brigette did to Erik. \"Morning mommy.\"\n\nKatja hugged him, \"Morning dear one.\" Geoff grinned as his mother hugged him to her. Mommy was always so soft and warm.\n\nThen the next thing they knew, Cleo and Caesar wiggled their way up to lay next to Geoff and Brigette. Erik laughed, \"Just one big happy family.\" He said it jokingly, but it was true. He had never been happier in his whole life.\n\nThey had breakfast, then Erik and Katja headed out to their house to wait on the truck to deliver all their things. Once there, they took a look around making sure there wasn't any problems. Erik was happy, as they found nothing wrong, the caretaker had kept up on the maintenance, so everything was in good shape outside. So, while they were waiting, they moved a few things from the trailer inside and into the garage. \n\nKatja smiled when he pulled out a couple of foldable camp chairs and table. They sat down and talked about what they were gonna do first and drank the coffee and tea they had brought with them. About nine-thirty, Erik got a phone call from the movers saying they were in the area and would be there shortly.\n\nThe truck got there and the lead mover asked them to show them were things would go. As they walked around, Erik was once again impressed. The mover carried a folder with him that contained signs for each type of room and as Erik told him, he'd tape up a sign so his people knew what room was which.\n\nAfter that, they started to move their things into the house, and the lead mover asked Erik and Katja to look at things after they brought them in to make sure nothing was damaged. So as soon as they off loaded a rooms items, Erik and Katja would take a look as they started on another room.\n\nAll in all, it only took them about two and half hours to bring everything in. They still needed some more furniture and small items, they had a lot more space and rooms now, but they figured they'd take care of that over the next few weeks.",
        "Erik thanked the movers and told the lead guy he would be sending the company a letter telling them how good and efficient they were. They thanked him, then they headed out. \n\nErik and Katja decided to go to lunch and then come back and do a little unpacking before heading back to Tony and Ariel's since it didn't take that long. They wanted to at least get some clothes and the food they brought with them put away, and set up the cats house. They still had to go to the store, all they brought with them was the boxed and canned food with them they had left, so they still needed everything for the refrigerator and freezer.\n\nThe next morning, they all headed to the house and started to unpack and move some things around. This took them all of Saturday and partially into Sunday, but they were finally unpacked and almost all the way set up. The rest was hanging things up, and putting more things away so they could use the bedrooms and kitchen. Erik would spend the next couple of days doing that along with getting the things they still needed.\n\nWednesday night, Erik flopped down on the couch were Katja was playing with the children to keep them amused and out their father's way. He leaned over and kissed her, \"Well, that's it, I think we're done.\" He grinned, \"Even up to hanging Geoff's picture.\" \n\nKatja leaned against him and kissed him back. \"You look tired love. I think you need to relax tonight and tomorrow.\"\n\nHe nodded, \"I think your right. But we still need to go out tomorrow and get some things we still need. I'd like to get everything done before I need to go into New Lyonn and take care of things there. We've only got another three or four weeks before people start showing up.\"\n\nShe stroked his face, \"I know, but you've been overworking yourself trying to get everything done. It'll get done when it's done.\"\n\nHe smiled and kissed her, \"I know kitten, I guess your right. I promise, after we get back tomorrow I will.\"\n\nThat weekend, they had Tony and Ariel over for dinner, then afterwards they all sat and relaxed like they did at the old house.\n\nAriel grinned, \"I missed this, and it's also nice to see our mates finally relaxing.\" Tony had been as bad as Katja said Erik was.\n\nTony smiled, \"It's a guy thing love, we really hate to stop in the middle of getting things done. If we do, we don't feel like starting again. So, we figure it's better to keep going.\"\n\nErik nodded, \"He's right, now that were done, it's one thing less to worry about.\"\n\nAriel and Katja looked at each other, \"Males.\"\n\nThree weeks later, Azlan, Helen, Nemo, Erin, uncle Geoff and Victoria, Katja's parents, Ariel's parents, and Axel and his family moved into the old base housing. Erik and his family, along with Tony and Ariel met them at the town to give them a hand. On Erik's advice, they had used the company he did to move all their things. Since it was only Helen and Azlan's things from their apartment and things Victoria had put in storage when she moved in with uncle Geoff, the company was able to use one truck to collect their things and add the small number of things the rest had. The crates that Ariel and Katja's parents had at the new site, had been forwarded by shuttle to New Lyonn, along with all the others that were coming there.\n\nThe original base housing they had gotten was nice, there were three types of housing, some were townhouse's and some were a ranch style. These were the normal married enlisted housing depending on the rank. Then there was the married officer housing which was all slightly bigger and fancier, again depending on the officer's rank. Then there was also an apartment complex that would be used for the single personnel or when it was just a husband and wife without a family. \n\nThe last two houses on the base were originally where the commanding office and the second in command lived, these were much bigger and nicer. One of these were being set aside for Uncle Geoff, who would be the temporary leader of the town until it was finished and a mayor and town council was chosen.\n\nThe old main building would be the \"townhall\" to use an earth term, it would have all the main offices along with the security force office and learning center. The few hangers they were keeping would be for the public works department, security force and fire department vehicles, a shuttle hanger and repair garage. \n\nAll this was slightly temporary at the moment until it was decided how the town was to be run. As of now, it would be run like the ship until the town was completed, but they really wanted it to be like any other earth town when it was all over.\n\nMore housing may be built depending on how many people moved to the area, as they had already been approached by humans that were interested in moving there and quite a few businesses had asked if they could also. A new, fully equipped learning center was also being done from one of the old office buildings, as the learning center they were using now wouldn't be big enough once the town was completed. And lastly, the old base medical center/ hospital was still in good shape, but would be improved and added to.\n\nAbout six weeks later.\n\nErik was moving to his new office in the main building, it was between Uncle Geoff's and the big office space that Azlan, Helen, Tony, Nemo, and the others that would assist in overseeing the all the work would move into. The ex-Navy guys that he and Tony had hired at uncle Geoff's request would be coming in by the end of the week. Luckily, like a lot of the other spaces, these were already equipped with all the office equipment and had been updated with new com and IT equipment. \n\nHe had brought in the small refrigerator and microwave a couple days ago and today was the rest of his things. Tony followed him with another box and gave him a hand, then Erik gave him one moving the things into his office space.\n\nThey took a break, then Tony asked, \"Did you hear from the other guys yet?\"\n\nErik nodded, \"Yeah, yesterday as a matter of fact. I got emails from the four of them, they'll be here Friday.\" \n\nThen he smiled, \"And they all asked the same thing, when could they meet some of the girls.\"\n\nTony grinned, \"You can take the boy out of the Navy, but you'll never take the Navy out of the boy.\"\n\nErik nodded chuckling, \"Well, you can't blame them. They've all seen what they look like.\"\n\nThen they got down to some business and Tony asked, \"When are Azlan, Nemo and the others getting moving their stuff in?\"\n\n\"In the next few days, they're still getting all settled in.\" Erik replied. \"I figure we can have a meeting on Tuesday, that will give the everyone a chance to get all settled in in the housing and the office. Until then, I'm going to be dividing up who I want to do what this week, I figure it would go easier if they all deal with the same contractors and people, one point of contact if there's any problems. Then Azlan said he liked the idea for our people also, so I'll give him a hand with that, if he needs it.\"\n\nTony nodded, \"That makes sense, it'll make our jobs easier to so we know who to go to and for updates.\"\n\nErik nodded, \"I think we should also have a status meeting once a week to start, we can change that once we see how everything is going. Mainly to keep everyone in the loop for now.\"\n\nTony agreed, \"That sounds like a plan to me. Once we see how the contractors are doing and if there's any major problems, we can change it.\"\n\nThey decided to take a drive around the different sites, so they walked outside and Erik grabbed one of the half dozen golf carts they had. He had recommended these to uncle Geoff so the people didn't have to walk all over. As they drove around inspecting things, they went over certain areas to make sure they knew what was going on. Tony had one of the Lyonness computer tablets and was checking things off as they rode around and made notes for both of them.\n\nThe one younger contractor they all got along with, had started taking down some of the buildings early so they could start putting up some of the new ones and the rest of things that went along with them, like roads and sewer systems. The new roads were laid out and just gravel covered right now, but all the new sewer and drainage systems were already roughed in. They had decided to let his company start early because they trusted him. The other, they wanted people around due to the problems they had with them in the beginning.\n\nThen they headed over to where that had planned some small farms to grow the things the Lyonness were used to. They had planned to start that after the town was done, but they were running utilities, along with access roads from the main part of town and a small hanger they left near for any of the farming equipment.\n\nAs they were riding around heading back, Erik asked, \"So, how's Ariel doing with her pregnancy? She seemed fine the last time we saw her.\"\n\nTony grinned, \"She's doing fine, I understand they don't start getting upset about things till the last month or so.\"\n\nErik nodded, \"Yeah, that's how it was with Katja, she warned me they could get a little short tempered then.\"\n\nTony grinned, \"Well, otherwise, she's got me redoing the kid's rooms as we go along and she finds things. She says it's so we don't have to try and do it all at once, but I think it's more that she's just excited.\"\n\nErik grinned at his best friend, \"And you're not??\"\n\nTony grinned and shrugged.\n\nKatja and Ariel were having a similar conversation in Katja's office. They were once again like they were before Katja had her children, she was running the whole maintenance and repair department, while Ariel was overseeing the day to day things like she had on the ship. They had just finished having a meeting with the others in the department and were now discussing Ariel's pregnancy. \n\n\"So, how's things going Ariel?\" Katja asked her.\n\nAriel smiled, \"Good, doctor Maya says everything is normal and I shouldn't have any problems.\"\n\nKatja nodded, \"I doubt you will, I know everything was fine with mine, even if was mixed-species. The biggest question was the length of time.\"\n\nThen she smiled, \"How's Tony taking it?\"\n\nAriel grinned, \"He was a little... clingy, I think they call it, at first. He kept wanting to do things for me, like I was going to break or something.\"\n\nKatja grinned, \"Erik was the same, I finally figured out it was a normal human thing after talking to Helen and Victoria.\"\n\nAriel nodded as she took a sip of her tea that Katja had made them, \"I talked to Helen about it, and she suggested giving him something to do. This way he'd feel like he was more involved with it. So, I had him start doing the children's rooms.\"\n\nShe grinned, \"It worked like a charm, he's busy and happy now.\" Then she asked, \"Speaking of children, how's my niece and nephew doing in classes?\"\n\nKatja smiled, \"Good, they're enjoying themselves a lot. Geoff gets to see and play with Gesa just about every day, and that makes them happy.\" Then she laughed, \"Gesa still growls at Erin if she thinks she's paying to much attention to Geoff, but it's not as bad as it was.\"\n\nAriel grinned, \"I still can't believe that she is jealous of Erin.\"\n\nKatja nodded grinning back, \"At least it's only her. Our people don't have any red hair.\"\n\nAriel grinned, then asked, \"And how's Brigette doing?\"\n\nKatja smiled, \"Well, thanks to you, she has a bunch of the little males doting over her.\"\n\nAriel laughed, \"That's my girl. I wonder if her and our son will know, like Gesa and Geoff, that they're supposed to be together?\"\n\nKatja nodded, \"I would imagine so from what Brigette said when she found out, I think it'll depend on how your son turns out. I guess we'll have to see how the species are mixed with them. Since you're only the second one, we really don't have a lot to go on. But I've got a feeling, they'll be like Geoff and Brigette, while Helens may be the opposite, her son will be like Azlan and her daughter will be like her.\" \n\nAriel nodded, \"Your more than likely right, I guess we'll know soon enough. Helen said her pregnancy will be closer to eight months than the nine she said it normally takes humans. So, we should have ours close to the same time, give or take a little.\"\n\nKatja parents, Julius and Cassie were settling into their new home. They were trying to get things all done before they both had to start working. Her at the learning center and Julius giving Erik and Azlan a hand with overseeing things. Cassie was impressed with the house they were assigned, while different then what they were used to on home world, it was close enough so it wasn't a drastic change. They had discussed what they were going to change and modify. It wasn't much, mainly painting and decorations, then Katja and Ariel had shown them how the different appliances worked. They really weren't all that much different, but they were enough that they needed to have some things explained.\n\nKatja and Ariel had also taught them on how to use the different food stuffs here and what would cross over from what they were normally used to. They would eventually have a store or two in town that sold things they were used to, mainly the things that could be grown on the area they would set up for that. \n\nThe ship that landed in Arizona, also had brought along some eggs, sperm, and genetic material from some of their food animals and had them in stasis for now. The were looking to see if they could be raised here on earth or maybe if some of the similar earth animals could be modified.\n\nSome of the human stores in the area would also start to carry some things they were going to grow, once they had a surplus, as quite a few of the foods had really appealed to the humans also. And of course, quite a few of the families would have their own plots to grow things once they settled in just like they and the humans normally did. \n\nAriel parents, Seamus and Lexi, were going through the same as Katja's parents were. Seamus would be helping out shuttle crews since they were being used quite a bit between New Lyonn, and the original and new landing sites. They hadn't picked out a name for the new one yet, or what they would be doing there. It was still a little early for that yet, they wanted to get New Lyonn mostly finished first so they could learn the best way to do it. And Lexi was giving Cassie and Allie a hand at the learning center working with the children.\n\nAzlan and Helen were also settling in to their new place. They had gotten one the ranch houses since Helen was pregnant and they had decided that they would more than likely just stay there. Helen was still working for uncle Geoff, but she was staying close to the office. Unlike the Lyonness, who didn't really show until the fourth month, she was already starting to look like she was preganant and she had found that she tired quickly. Doctor Maya had explained to her that was to be expected as the Lyonness children grew faster than the humans did. Also, since human children were normally bigger than the Lyonness, her system was compensating for it all. \n\nAzlan was working closely with Erik, his father, Tony and Nemo. For the past week, his father, Nemo, and himself had been going to each of the houses, townhouses, and the apartment complex making notes on everything to make sure they had a check list for each one. For now, they were going just to use what housing there already was there, and would see later on if any other would need to be erected. They had laid out sites for future housing complexes, and they would have the contractor prep them making sure utilities were at least run to the complex sites and they grounds prepped.\n\nNemo and Erin had moved into one of the townhouses for now, but they would eventually buy their own house closer to where Celia's and Erin's store would be, and they've been looking around when they had time. But for right now, it was easier to stay on the base. Nemo was working with Erik and his crew, plus taking training with his sister, Katja, and his father, while Erin helped out both Helen and Allie with the learning center. This also helped her out as she was able to learn more about the Lyonness so that when she became a priestess, she'd be able to help the various people.\n\nCelia and Jack would be moving out in a couple more months once they closed on their new house and office and the store. However, something else that was also occurring, was that more humans were relocating to the existing towns, which made the local population happy. The makeup of these humans was diverse, but the majority of them were Pagan's or followers of other older earth religions. They were drawn to the area due to the acceptance of the Lyonness there, since they were accepted, the people coming figured they would be also. \n\nThe people already there in the local towns didn't seem to mind this much, the new people coming in were on the whole a nice group of people. The majority of them were younger people and either brought empty house's or rented apartments. The local businesses were once again beginning to do well, and the new people coming were a breath of fresh air. There were slightly different, and the majority had a strong belief in taking care of the land and the people that were already there. \n\nEven the mainstream religions in the area, while at first were slightly leery of both them and the Lyonness, quickly learned while talking to some of them and the Lyonness, that what they believed in wasn't all that far off what they did in essence. Then sooner than it takes to tell about it, they were advising their own followers that these newcomers weren't some evil beings, but instead preached to their followers that they should accept them. \n\nThat's not to say all of them believed this, but it was such a small minority, that it didn't make a big difference. The majority of the people could see what was in front of their noses. When the base closed, a lot of the young people left the area to find work and the older people left in the towns were surprised when they were being helped by them. If they needed help with something because they were sick or just to old to be doing some things, one of these new people would be there to help them. The area around New Lyonness was quickly becoming a wonderful, comfortable place to live. Everyone started to look after one another, instead of ignoring each other. People, no matter the age, race, poor or well to do, or religion greeted one another, help each other out, and were friendly and outgoing. \n\nErik and some of the others knew why this was happening, the Gods and Goddesses had returned and took a more day to day guiding of all their people no matter who they were. The One had commanded it, and all the Gods and Goddesses had listened and passed it along to the people that followed them. It would take time, but it would be done.\n\nFive months later.\n\nEverything was going smoothly at New Lyonn, all the work that needed to be done, was started and on schedule. Uncle Geoff, Erik, Tony, Azlan and a few others were having a monthly update meeting in one of the conference rooms. Everyone was in a good mood as things were progressing like they should. The younger contractor's crew were slightly ahead of schedule and the other one was slightly behind, but that was not due to their fault, the holdup was mainly the availability of cleansing units and a few other things for upgrading the housing. Once they had them, the places were already prepped for the install and that would go quickly.\n\nUncle Geoff took a drink of tea and asked Azlan, \"Is there any update on the units yet nephew?\"\n\nThey had gone with Tony's father's company like he suggested and they were working on them, but it did take time to set everything up. Azlan nodded, \"Yes sir, Bryan called me this morning to let me know the status. They've got things set up and are making a couple of each style, the retrofit and the standard ones. Once their done, they'll bring or send them here for us to see and evaluate. They found the replacement parts for the ones they didn't make here and everything seems to work like it should. But, they want our okay on them before they start to mass produce them.\"",
        "Azlan took a sip of his coffee, then continued, \"We've got one of the smaller hangers we kept converted to a warehouse and office space for our company to sell and install them, so were all ready once we okay them. Jack also has all the paperwork done and back, so we'll have no problems there. Bryan said, once we okay them, we have the initial delivery about a month after we tell them to start. Since all the first ones will be for us right now, I recommend that all we order is the retrofit one's for now till we have a good supply of them. Then we can start on the others.\"\n\nUncle Geoff nodded, \"Good, let me know when they come in. Does anybody have anything else?\"\n\nThey all said no, and Geoff smiled, \"Well then, I'm glad everything's going so well. Erik, how's the contractors doing? I know you were still concerned about the one.\"\n\nErik smiled, \"It's all good. We must have made an impression after that original meeting.\"\n\nTony laughed, \"That and the fact the guys are keeping close tabs on them like we warned them.\"\n\nErik grinned, \"Well, there is that. But the lead guy they have is alright, nothing like that first one.\"\n\nThe meeting broke up and the talk became more casual as they finished their coffee and tea. Uncle Geoff smiled and asked, \"Tony, Azlan, how's your mate's doing? It should be close to the time for them to deliver.\"\n\nAzlan and Tony grinned, then Tony said, \"Ariel's fine, a little antsy, she's ready to have the kids.\"\n\nAzlan smiled, \"Helen's the same way, even if it's earlier than normal for a human.\"\n\nErik smiled remembering how Katja was, \"Well, it doesn't last long, or at least it didn't with Katja. Have you both decided were you'll have them?\"\n\nTony nodded, \"Were having ours at home, we have the midwife all lined up.\"\n\nThen Azlan added, \"Were going to the med center for ours. Doctor Maya suggested it since Helen is the first human. I understand that sometimes humans need more attention during the birth than Lyonness. So, she figured it would be safer this first time. She's been learning more about human's since you and Katja had yours. She also has a human doctor contact from the... hospital, I believe you call it, if there's any problems she can't handle. And I understand he's trying to learn about us.\"\n\nAzlan smiled, \"Plus, I think doctor Maya and him are interested in each other.\"\n\nErik nodded his understanding, \"Most of the time there's no problems, but better safe than sorry. It is quite different for humans than the Lyonness, mainly due to the size of the babies. Geoff and Brigette were like two-thirds or so of the size of a normal human baby.\"\n\nErik knew it was all up to the Goddess, that the children would be born at the correct time She decided on. He wasn't sure what constituted the \"right\" time, but he knew Briast wouldn't let anything happen to them.\n\nHe suddenly felt warm and heard Her voice say, \"Very good Erik, the time will be right in a few days.\" Then she giggled, \"But don't tell them, I want it to be a surprise.\"\n\nErik grinned to himself, Briast seemed to like the giggle, She used it often when she was in a playful mood he noticed. \"Yes Goddess, as you wish.\" He sent out.\n\nErik's heart and soul belonged to his Lady Brigit, but Briast always made him smile. He felt a familiar touch, then heard, \"Of course dear one, She is partly me also, as she is also partly Bast.\" She laughed, \"Just don't get to attached to Her, you'll always be mine dear one.\"\n\nErik smiled, \"I know my Goddess. I'm yours now and forever, and I will love you for as long as you let me my Lady.\"\n\nErik felt her caress and shivered from her touch. \"Remember what happen the last time you told me something like that dear one. Maybe I should remind you.\"\n\nErik felt her lips on his as she kissed him and his entire being was infused with her love. It felt so wonderful, like when he and Katja made love.\n\nThen he thought to her, \"My Goddess, you can do that any time you wish. I hope you didn't think I wouldn't like it.\"\n\nShe laughed in his mind, \"No, I knew you would. I enjoyed it as much as you did and as much as I did the first time I had you. Give our son Geoff my love dear one.\" Then she was gone and Erik wondered if she meant what he thought She meant.\n\nThen he heard Tony's voice calling him, confused and a bit flustered he replied, \"Excuse me, what did you say?\"\n\nTony grinned, \"What happened? You've got an unbelieving look on your face.\"\n\nAzlan smiled, \"Yes, you looked like you were a million miles away.\"\n\nHe quickly shook his head, \"No, I'm fine. I... I was just thinking about something. Excuse me for a moment.\" He got up and walked quickly out into the hallway.\n\nThe others in the room looked at each other in confusion as they watched him walk out.\n\nErik leaned against the wall to collect himself for a moment, then went into his office and took a bottle of water from the refrigerator. He sat on the couch in the room and took a drink and tried to collect his thoughts. Then he hesitantly sent out, \"My Lady, does what you said, mean what I think it means?\" \n\nErik felt the warmth of his Goddess and she replied to him, \"Yes dear one, it does. I took some of your being into me and gave it back to you enhanced, you in turn, gave it to your mate. Our son is the result. I could not do this like some of the others had, Zeus for example. We were told not to do that anymore, so we came up with another way. So, like before when it produced the hero's Heracles and Perseus, Geoff is also a Demi-God, I believe that's what you humans call it. However, this world does not need a hero like Heracles or Perseus now. It needs a teacher and peacemaker, especially one that is intelligent, good and loving like our son.\"\n\nShe paused for a moment, \"This does not mean that he can't be a hero if needed, just that he was not created for just that like others were.\"\n\nErik was stunned, this was the last thing he expected to hear today. Then he asked, \"Should my mate know of this my lady?\"\n\n\"There is no need dear one, this is not like the old days when we would physically mate with our chosen one to produce an off-spring. Our son is yours and your mates, he just has some of my attributes.\"\n\nErik was relieved to hear this, he loved Katja completely and he wouldn't want to have to explain this to her.\n\n\"Yes, dear one, that was why it was forbidden for us to do it the old way which many did.\"\n\n\"I must go now dear one.\" Erik felt her lips on his once again and he shuddered as he felt the Goddess once again caress is entire being. She sighed, \"Maybe it is just as well it was forbidden, you give me much pleasure this way, I don't want to think too hard on how pleasurable actually making love to you would be. \"\n\nThen She was gone and Erik shook from the ecstasy of Her touch and kiss. It felt like a night of making love to Katja in a few moments. \n\nHe stood on shaking legs and went into the bathroom to splash water on his face. Then went back to the conference room. \n\nUncle Geoff watch with some concern as Erik walked in. This was not his typical behavior, so he asked, \"Is everything alright Erik?\"\n\nErik smiled wanly at him, \"Yes sir, I... I felt a little dizzy and went to get some water. Maybe I'm coming down with something. The change in the weather maybe.\"\n\nHe sat down and slowly joined in the conversations as he collected himself. They finished up and were getting ready to leave when Tony asked, \"You alright bro?\"\n\nErik looked at him, then nodded, then said a sporadically, \"Yeah, I'm fine... Nothing to worry about... Look, I'll talk to you in a bit, I've got something I want take care of.\"\n\nTony reached out and squeezed his shoulder, \"Okay, but let me know if I can help. There's something bothering you, I know you too well.\"\n\nErik smiled, \"I'm fine, really. It's just something I found out today. It's just something I need to wrap my brain around.\" Then he walked out the door.\n\nUncle Geoff came over and asked, \"Anthony, is he alright?\"\n\nTony nodded, \"I think so, he's not acting normal, but he said it was just something he found out. And before you ask, no, he didn't say what it was.\"\n\nTony frowned for a moment, \"It can't be anything bad, he doesn't hold stuff in like that, especially with me. He said, he just needs to get his head wrapped around it, whatever it is.\"\n\nErik walked slowly down the passageway going over all he had found out. His son, a demi-god, now ain't that a kick in the ass, things like that don't happen anymore. Then the little voice said to him, \"You were told why it doesn't, She did it that way because that's the only way She could, and he needs to be one to do what he has to do. I don't know why this is bothering you so much.\"\n\nErik stopped in his tracks, I guess that's right. As he thought about it, he fully understood what the Goddess meant when she said it was forbidden for Them to do it the old way. He had read all the old myths on how Zeus and others would visit young woman and get them pregnant. Imagine how their husbands or lovers would feel, and how much it... well, not bothered him, he was not sure what he was feeling. But he loved Katja and he had no desire to be with anyone else. Nor did he want to hurt her, then again, it wasn't like he made love to the Goddess. All this happened on... another plane of existence.\n\nThen he felt warmth once again, but it didn't feel like it normally did. Then he felt a soft warm hand caress him and he knew it was Bast. He never had a lot of contact with Her, so it was a little strange. Then he heard, \"My son, your thoughts are good, you are an honorable human that takes his vows seriously. They are not just words to you; you know they are real. Do not think long on the situation, you've done nothing wrong.\"\n\nErik sighed, \"Yes Goddess, I understand. It's just that I don't like to keep things from my mate. Especially when it's this important.\"\n\nBast caressed him once again, \"You can tell her if you wish, she will understand. You must remember that this is not an isolated thing, many human's and others, have been like your son, ones that didn't even know it.\"\n\n\"It takes nothing away from what you and your mate have, or who your children are. Brigit told you, this world does not need a hero like the ones in the beginning. The hero it needs now, is a teacher and peacemaker, one who is intelligent, good and loving.\"\n\nErik sighed with relief, he had knew this in his heart, but it was good to know in his brain. He sensed that Bast smiled, then She said, \"He will be aided by others, much like you were. He and Ariel's son will be as you and his father are. Plus, many others will assist, guide him and look to him.\"\n\nErik felt her soft warm touch once more. \"So, do not worry, enjoy the peace and prosperity that will come from all this.\" She caressed him once more, then She was gone.\n\nErik felt slightly better as he pondered what Bast had told him. He started walking down the passage way once again and soon found himself by the doors to the learning center. He quietly opened the door and saw Allie teaching the younger children. Allie smiled as she saw him and Erik sat down in the back of the class room to listen. He looked around and smiled as he saw Geoff and Gesa sitting closely together as they listened to the lesson. He looked around some more and saw Brigette and another Lyonness girl sitting together. He also noticed that they were sort of surrounded by a few of the males. He grinned as he looked around again and saw some of the other children he knew, then his eyes wandered back to Geoff and Gesa. Their desk was by a window and as the sun shined through, he studied his son. He was a bit surprised to see that when the sun hit him right, he could see red highlights in his hair. A legacy from his other mother he supposed.\n\nHe sat there for a while; then Allie told the class it was time for a recess. Erik smiled as all the children cheered. It wasn't any different from when he was in school, they didn't mind learning, but recess was much nicer. Cassie and Lexi started to line the children up so they could go outside to play. Brigette, and the girl she was with came over smiling, \"Daddy! What are you doing here?\"\n\nErik grinned and gave his little girl a hug. \"I got tired of a boring meeting and wanted to see my kids. Who's your friend?\"\n\nBrigette grinned, \"This is Tari daddy. Tari this is my daddy.\"\n\nTari smiled shyly, \"Hello mister Erik.\"\n\nErik smiled, \"And hello to you to Tari. You both better go and join the others before your grandmothers go looking for you.\"\n\nBrigette smiled, \"Okay daddy, I'll see you later.\" She grabbed Tari's hand and they ran over to get in line.\n\nOnce they left, Geoff and Gesa came over and he was awarded with a hug from both of them. Little Gesa was his \"adopted\" daughter. Geoff asked, \"Why are you here? Are you teaching daddy?\"\n\nErik grinned, and shook his head no, \"I was in a boring meeting and I decide to take a walk. So, how's school? You both learning a lot?\"\n\nThey both grinned and nodded. \"Miss Allie and our grandmothers are teaching us a lot.\" Then Geoff grinned adding, \"But recess is more fun.\" Gesa grinned and nodded her agreement.\n\nErik looked around and motioned them to come closer. Then he whispered, \"I though it was to when I was in school.\" He put his finger to his lips and said, \"Ssh, don't tell them I said so.\"\n\nThey giggled and hugged him again and he shooed them over to join the others.\n\nOnce they were all outside, Allie came over and gave him a hug and kiss on the cheek. \"Erik, it's so good to see you. What brings you here?\"\n\nErik smiled, \"As I told the kids, I was in a boring meeting and I just needed to get out. It looks like things are going good here. How's the older ones doing?\"\n\nAllie smiled, \"Its going well, Cassie gave the older ones a free time. Then she comes here and helps with the younger one's recess. Erin keeps an eye on the older ones during the free time. She's doing well with them; she helps Cassie teaching them about earth.\" She grinned, \"Also, since she's not all that much older then them, they relate to her better.\"\n\nErik nodded, \"How's Lucy doing since she started here?\"\n\nAllie grinned, \"Great, she helps me with the earth teaching a bit. She's very smart, I mean really intelligent.\"\n\nErik grinned, \"Well, that's what comes from being taught by a Goddess I suppose.\"\n\nThat made him think, \"Let me ask you a question. I know you tested Geoff and found he was very advanced, but have you tested him since then?\"\n\nAllie shook her head, \"Not really, we've been busy with moving in and keeping the rest up to speed. Why do you ask?\"\n\nErik didn't want to tell her the real reason, so he said, \"Oh, I was talking to him and he seem even more advanced than before. I know he picks things up quickly, almost instantly, so it just piqued my interest. \"\n\nAllie nodded, \"Yes he does, more so than Brigette really. Do you think I should?\"\n\nErik shrugged, \"Might not be bad idea, once you have time that is.\"\n\nAllie nodded, \"Okay, when we have time, we will.\"\n\nErik nodded then stood, \"Well, I guess I better get back to my office before they come looking for me.\"\n\nAllie smiled and gave him a hug again, then he headed back. That night, Katja an him were relaxing on the couch watching TV. The kids were down for the night, and the house was quiet. He held Katja as she curled up to him and absently drank his coffee. He was trying to make a decision on whether to tell her about Geoff, or wait until he was older.\n\nKatja was totally relaxed, she was in her favorite spot, curled up to her mate with his arm around her. She was so happy now, everything was just so perfect, both at home and on the job. She gave thanks to Bast every day, for all the gifts she had. A loving mate, two perfect children, her family and everything else. She smiled to herself, to think I had to travel half across the galaxy to find this. The best day was when she agreed to be a settler.\n\nShe smiled as Erik leaned down and kissed her head, \"Have I told you I love tonight?\" He asked.\n\nShe grinned up at him and hugged his arm, \"Yes you have, but you can tell me again.\"\n\nHe grinned back, \"Okay, good. I love you.\"\n\nShe laughed and snuggled up to him. \"Is there anything you want to do this weekend?\"\n\nHe smiled, \"No, not really. I have a feeling we should keep it open for now.\" \n\nShe looked up at him curiously, \"What do you mean?\"\n\nHe grinned, \"Let's just say it's a surprise.\"\n\nShe grinned back, \"You're not going to tell me huh?\"\n\nHe leaned down and kissed her, \"Sorry love, I kind of promised I wouldn't.\"\n\nShe grinned, \"Well then, since you won't tell me, I think you need to do something special so I won't feel sad about it.\"\n\nHe grinned back, \"And what did you have in mind?\"\n\nShe worked her way up into his lap, then licked and bit at his neck, \"Oh, I guess you can think of something.\" She ground herself on his cock.\n\nErik stood up cradling her to him and kissed her as he walked to their bedroom, \"Is this what you had in mind?\"\n\nShe grinned back, \"See, I knew you'd figure it out.\"\n\nHe grinned as he closed the door with his foot and she locked it. He sat her on the bed and then she stood back up and wrapped her arms around him and took hold off his butt as she molded herself to him rubbing against him. She kissed him slipping her tongue between his lips, they kissed until she made his knees weak.\n\nShe broke the kiss and moved to lick his ear and said, \"I want your tongue on and in me right now.\"\n\nErik knelt down and nuzzled at her pussy, kissing it through the thin stretch pants she wore. He took a deep breath of her scent and felt his cock get harder, then he pulled her pants down and she pulled one foot, then the other out of them and kicked them to the side. \n\nErik grinned as kissed her pussy once more, but it was much better this time as nothing was in the way. Her lips were shiny with her juices as he licked them off, then he slipped his tongue between them making her shudder and reach down to take hold of his head.\n\nHe slowly licked her up and down until her clit protruded out, then he took it between his lips to suck and lick her. He heard her pull in a sharp breath, and felt her hands tighten on his head. He smiled to himself, the slowly stood, his tongue in contact with her until he reached her shirt. He took hold of it and pulled up over her head stopping when he had it almost all the way off. As her breasts were uncovered, he sucked and licked her nipples making them harder as she took a sharp breath once more. \n\nHe licked his way up and kissed her lips while her shirt still covered her eyes. The he pulled the shirt all the way off and tossed it to join her pants. She gave him a look of lust and want as she pulled him closer to kiss him. Licking his lips with the tip of her tongue, she said with a voice filled with lust, \"My turn.\"\n\nShe pulled his T-shirt off quickly, then nuzzled at his neck and throat lightly biting him lightly as her hands reached down to unbutton his jeans. Once she had them opened, she pulled them wide and slipped her hand in his pants and massaged his cock. She smiled as she felt her hand coated slightly with precum, and pulled her hand back out and licked it clean.\n\nErik shuddered as he watched her lick her hand clean, then she pulled his pants and shorts down until gravity took over and they pooled at his feet. It was his turn to kick them over to join hers, then they held each other, her breasts crushed against his chest and her nipples burning holes in it as she rubbed her pussy against his cock. Then he picked her up and laid her on the bed and climbed in to join her, he started kissing and licking her neck and worked his way down until he laid between her legs.\n\nHe nuzzled and licked her pussy occasionally teasing her clit making her shudder and jump until she moaned and panted, \"Please my mate, no more teasing, I need you to make me cum so bad.\"",
        "He smiled and went to work on her and he heard her sigh in pleasure as he took her clit between his lips to suck and lick on it. She reached down and took a hold of his head again as she pushed herself hard against his tongue.\n\nErik knew how to make her cum so well by now, her brain spun in pleasure and lust, \"Yes, love, just like that that, it feels so good. I'm so close.\"\n\nErik held her clit between his lips, and started to flick his tongue back and forth on her clit. He heard her moan again as she started to shudder. He knew she was very close as they knew each other's sign's better than they knew their own. His mouth and lips were being coated in her juices as she came closer and closer to cumming. Then he heard her moan loudly, her hands tightened on his head, and her back arched as she said loudly, \"Your making me cum love.\" She yowled as her orgasm hit her hard and she wrapped her legs around him as she filled his mouth with her juices. \n\nErik gladly lapped them all up, he could never get over how good she tasted when she climaxed. She finally fell back to the bed and he continued to lap up her juice as he prolonged her orgasm. Once he knew she was sated, he slowly kissed and licked his way up to lie next to her as his hand stroked her belly and flanks.\n\nKatja, sighed in pleasure as her mate continued to stroke her. She loved his hands stroking and petting her, she turned to face him and saw his face was shiny with her juices. She reached over to the night stand and grabbed a handful of tissues and wiped his face off. Once done, she leaned in and kissed him, \"I love you so much, that felt so good my love.\" \n\nErik kissed her back, \"I'm glad you like it, I know I certainly still love to do it.\"\n\nShe snuggled up closer to him and began to lick and kiss his face, \"It's my turn now.\" She reached down and took hold of him and stroked his cock up and down slowly.\n\nErik loved the feel of her hands on him, her hands were so soft and warm as she started to stroke him. There were times, when he couldn't decide what he like better, her hand, her lips, or her pussy. They all felt wonderful.\n\nShe pushed him to his back and started working her way down until her head was in his lap an she began to lick his cock as she held it. She loved to watch him shiver every time she touched him, no matter how she did it. She smiled up at him and wrapped her mouth around his cock, then slide down slowly, then she slid back up, then down again. She did this a few more times until he moaned her name and began to push up when she went down. She came off him and massaged his cock as she asked, \"Do you like that love?\"\n\nErik moaned, \"Yes, I think you know I do. I like everything we do together.\"\n\nShe grinned, \"Well then, I think you'll like this even more.\" She lowered her head and swallowed him all the way down, then she purred.\n\nErik moaned with pleasure as he felt her swallow him once more, then his head spun as she started purring, there was no way to accurately describe the feeling every time she did it to him. He moaned out her name and reached down to hold her head.\n\nShe sucked him off a few more times, then stopped, much to his displeasure. \"I don't want you cumming there. I want it where it belongs my love.\"\n\nShe kissed the head of his cock, and swiped her tongue around it. Then she moved up until she was straddling him. With a hand on either side of him, she leaned down and kissed him as her tail wrapped around his cock to hold it steady. She smiled as she watched his face as she slowly sat down on his cock. It felt so good sliding into her as his cock stretched her pussy open. They both moaned from the feeling, then she unwrapped her tail from his cock and wrapped it around his balls as she sat down farther. Then she started to raise and lower herself on him riding his cock as she moved her hands to lay on his chest.\n\nErik moaned her name, he'd never get tired of making love to her, it felt so damn good. He was always surprised he didn't cum the minute he entered her. Her pussy felt like warm oiled silk, and her scent as she got more excited, drove him crazy.\n\nKatja moaned and shuddered as she felt his cock stroke in and out of her, he was so hard and hot, also his cock was the perfect size, it stretched and filled her up perfectly. She knew neither of them was going to last long, she knew from the signs that he was very close and she wouldn't be far behind him. She started to ride him faster and he reached his hands down to hold an ass cheek in each hand. \n\nErik was going into pleasure overload, just as his mate was. He knew the sign's and he knew that both of them would let out their primitive sides, as Katja called it, to play soon. He could feel her start to speed up, a sure sign that she was getting very close. So, he started to push up into her every time she came down, he knew she loved this.\n\nAnd she did. She moaned her pleasure as each time she came down hard on him, he pushed up hard into her. This ground the base of his cock into her clit sending almost an electric shock of pleasure through her. The last time he did it, she felt her orgasm come closer and she squeezed his balls with her tail. She slid her hands under him and pulled him upright as she said, \"Oh dear Goddess, you're making me cum.\"\n\nHer pussy clamped down on his cock, and that was all that it took to send Erik over the top as he started to climax himself. He wrapped his arms around her pulling her closer and buried his face into her neck breathing in her scent and he shuddered as he said panting, \"So... am... I... love. I Love... you.\" The you came out with as a moan as he felt his cum boiling up and out of his cock to shoot deep in her.\n\nLike what normally happened when they got like this, she bit into his shoulder and raked his back with her claws. This made Erik moan in pleasure as he felt her claws drag across his back. She always kept her claws blunted, so he knew it wouldn't be any worse than normal, but the feeling of it was just something feral and indescribable.\n\nThey finally slowed to a gentle rocking to keep the pleasure going as they calmed down. That was almost better than when they climaxed. She used her tail to massage the rest of the cum out of him, while he sucked and licked at her neck where her scent glands were.\n\nStill slightly panting, they fell back on the bed with Katja laying on top of him, his cock still buried in her. They were both hot and sweaty, and the smell of both their pheromones permeated the room. She finally unwrapped her tail making him shudder as it curled around him as pulled it away. Then she sat up with her hands on his chest and lifted herself off him slowly.\n\nThis brought a shudder of pleasure from them both and as she came off him completely, she dropped back down on him and kissed him. His cock, balls, and her pussy was drenched in her juices and his cum and they slid against each other as they held one another and kissed.\n\nOnce they caught their breath, he kissed her once again, \"I wish we could do this more often, but it is nice that it builds up over the week.\"\n\nKatja nodded, they had gotten so used to making love when they felt like it, but with the children and work, they had to normally wait until the children were asleep and they had time. The children were still light sleepers, so that normally meant Fridays and Saturdays so they could wait until the children were really asleep.\n\nShe kissed him, \"I know love, but once they get older, it will get better.\"\n\nHe nodded his understanding, and smiled, \"I understand it's a problem all new parents go through. I don't mind really.\"\n\nShe kissed him back, \"I know you don't. Why don't we get cleaned up?\"\n\nUnbeknownst to them, they were being watched and more, but not by the children, Briast had watched as they made love. She found it fascinating, and it also raised an ancient feeling in her. She knew, that the older ones had laid with humans and other species for real, but it been banned by the One. She had touched Katja's mind as they made love knowing she would be focused on the love making and wouldn't notice the Her touch. She had sensed what they did, and was surprised by it, the feeling of love and pleasure was extraordinary. Then when they climaxed, she shared the feeling symbiotically with Katja, the feeling was wild, untamed and extremely pleasurable as it made even Her mind spin and Her body shudder.\n\nOnce they finished, she once again felt the love they had for each other and it made her smile and filled her being with joy. She thought She understood them a little better now, but still had some questions. I should ask Brigit, She thought, Bast was a little to proper.\n\nShe broke the contact, but the sense of what She had just experienced still permeated Her being.\n\nErik and Katja cleaned up, then went to the kitchen to raid the fridge. After they relaxed for a while, they finally went to bed. The next morning, Erik woke up first like normal, he stretched, then his foot hit something. He looked down and smiled, Geoff was curled up at the bottom of the bed. \n\nGeoff woke as soon as his father's foot accidentally hit him. He yawned and smiled at his father, then he sent to him, \"Good morning daddy.\"\n\nErik still had not gotten used to that. But he replied good morning back. Both Geoff and Brigette rarely used the mind speech anymore. But reverted to it when they were tired or first woke.\n\nGeoff wiggled up between Erik and Katja and gave his father a hug. Erik grinned, every time the kids hugged you, they sent out a message of love. He pulled him up closer and kissed his forehead. \n\nThen he asked quietly, \"Why did you sleep here last night?\"\n\nGeoff snuggled against Erik, \"I was lonely, I guess I still haven't got used to sleeping alone.\"\n\nErik grinned, \"Well, that sounds reasonable, but I would have figured you go to your sisters' room.\"\n\nGeoff grinned, \"Mommy's warmer than her, and I don't get a tail in my ear.\"\n\nErik grinned trying not to laugh aloud and wake Katja yet.\n\nBut Katja had wakened when she heard Geoff's voice, her motherly instincts taking over. She looked over her shoulder and smiled at Erik. Geoff was facing his father so he didn't see her. Then Erik saw her tail snake up and tickle her sons' ear. \n\nGeoff turned quickly and laughed. Then he hugged his mother as she kissed his forehead. Katja grinned at her son. \"Just in case you missed the tail.\"\n\nGeoff giggled and snuggled up to his mother's warm body. He giggled again when his father leaned over to kiss mother and squeezed him between them.\n\nThen Erik saw the door open slightly as Brigette came in and stood at the end of the bed pouting. \"Don't I get a hug too?\"\n\nErik grinned and opened his arms, Brigette smiled as she quickly climbed in to the bed and laid on top of Erik hugging him. Erik smiled as he held his little girl, there was so much love and joy in the room that he smiled widely. He had always been sort of grumpy in the morning, until Katja and the children came into his life.\n\nThen Brigette rolled over to Katja making Geoff complain because she was laying on top of him now as she hugged her mother. Erik grinned once more, \"Well, I need to get up and dressed so I can start the tea and coffee while you entertain the little ones.\" \n\nHe got up and bent over to kiss his mate good morning, then he went into the bathroom to get cleaned up and dressed. As he pulled off the sleep pants her had on, he grinned, \"That's something else I miss, we used to sleep naked.\" But with the kids, that was impractical, so he wore a pair of sleep pants and Katja wore a long sleep shirt. He smiled, the kids wore the same, only in kids' versions with the addition of a T-shirt for Geoff.\n\nHe put on a pair of jeans and a black T-shirt, then walk out slipping his feet into a pair of leather moccasins. He walked over and smiled, Katja had a kid in each arm and he leaned over and kissed her. \"I'm going to get the tea and coffee ready.\" \n\nShe smiled, \"Okay, we'll be out in a bit.\"\n\nThen Geoff asked, \"Can I help you make mommy's tea?\"\n\nHe smiled \"Sure kiddo, c'mon.\"\n\nGeoff grinned and stood as Erik picked him up and put a giggling son over his shoulder.\n\nBrigette giggled, \"That's what uncle Tony does to aunt Ariel.\"\n\nOnce they were in the kitchen, he put Geoff down on the floor and pulled over a kitchen chair and picked him back up to stand on the chair. Erik pushed the button on the coffee maker and the water kettle, then he got the jar of tea leaves and spoon and set them in front of Geoff. \n\nHe pulled the teapot closer and pulled off the lid and said to Geoff, \"Okay, now you use the measuring spoon and put four scoops in the pot.\" \n\nGeoff nodded and picked up the spoon and waited as his father opened up the jar. Erik placed it near him and Geoff filled the spoon four times and poured each of them carefully into the infuser in the top of the pot. Then he set the spoon on the counter.\n\nErik smiled, \"Very good Geoff, you did it perfect.\"\n\nGeoff smiled at his father's approval as Erik closed up the jar and set it back in the cabinet. The kettle and coffee maker were both good ones, so it didn't take long for the water to boil. The kettle shut off automatically, then Erik picked it up, \"Now, this is very hot, so I'll pour the water in so you don't get burned. But you watch and tell me when the water gets to this spot.\" He pointed to a line on the water level indictor on the teapot.\n\nGeoff nodded and watched intently as his father poured the water in, \"Almost there, stop daddy.\"\n\nErik grinned, \"Very good, it's perfect. Your really good at this.\"\n\nGeoff grinned ear to ear as Erik put the lid on the pot. \"Now, it has to sit for five minutes and then it will be done, then we can pour mommies tea and make it how she likes it.\"\n\nGeoff nodded and watched his father pour his coffee and the clock to see when five minutes had passed.\n\nHe smiled, \"It's time daddy.\"\n\nErik nodded and pulled a mug over, \"Ok, this is like the water, it's very hot so I'll pour it and you can put in the sugar and stir it.\"\n\nGeoff watched as Erik poured the tea into the mug. Then set the pot back on the counter away from the edge. He handed Geoff the teaspoon and opened up the sugar bowl for him. \"Now, use the spoon and put in two spoons of the sugar.\"\n\nGeoff nodded and carefully filled the spoon with sugar and pour it into the mug, then the other one. Then he put the spoon in and moved it in circle a few times.\n\nErik grinned, \"Perfect Geoff. Now, if we've timed this right, your mother and sister should be walking in... right... about... now.\"\n\nGeoff giggled as he saw his mother holding his sisters hand walking into the kitchen. \"I guess we did it right daddy.\"\n\nErik nodded, \"I think so.\" He placed Katja's tea mug on the table and waited for his kiss.\n\nBoth Brigette and Geoff giggled as their mother kissed their father like she did every morning when he made her tea.\n\nKatja smiled as she took a sip, \"Perfect like always.\"\n\nErik smiled and pointed to Geoff, \"You have to thank your son, he made it.\"\n\nKatja smiled and motioned Geoff over. She gave him a hug and kiss. \"It's perfect Geoff, thank you.\"\n\nErik fake pouted, \"Gee, all I get is a kiss.\"\n\nBrigette came over and hugged her fathers' leg, \"I'll hug you daddy.\"\n\nHe grinned and picked her up, \"I knew somebody would help me out.\"\n\nThe next thing he knew Geoff hugged his other leg and Katja grinned as she hugged him also.\n\nThey made breakfast and watched some cartoons the kids liked, they headed out to go shopping like they did every Saturday. Saturday was upkeep day for the most part, they went grocery shopping, did laundry, cleaned up the house and did anything outside if it needed it.\n\nSaturday was also pizza night and usually they were joined by Tony and Ariel, sometimes Helen and Azlan, or any or all the others. Tonight, is was going to be Tony, Ariel, Helen, Azlan, Axel and his family and last but not least, Jack and his family.\n\nErik would order the pizza and the others would bring drinks and desserts. Since it was still nice out, they would all gather on the patio to eat and talk. Erik, with Tony's help, had changed it around a little, upgraded the outdoor kitchen and added pull-down screens to use if needed. All in all, it was quite nice and they spent a lot of time out there eating, cooking and watching the kids play in the yard or on the swing and play set that Erik had gotten for them. It had some things to climb on, a fort, a slide and of course, the swings. The kids loved it and would spend all day on it if they let them.\n\nOnce everyone got there, like normal, they sort of split up in groups of male and female, with the kids splitting up their time between the swing set or with the adults. Since Jonny and Lucy got to see and be with each other in the learning center and during the day, they had also started to split up with Jonny listening to the guys, while Lucy listen and talked with the girls. Or they would play with and watch over Geoff, Gesa, Brigette helping them on the swings and slide until the pizza came.\n\nErik watched them as they took turns going down the slide, then when the younger ones asked them, they'd push them on the swings. He smiled when he saw Lucy and Jonny smile at each other, Jonny would normally alternate between pushing Geoff and his sister, while Lucy pushed Brigette as they giggled and laughed together.\n\nHe turned back to the conversation, and asked Tony and Azlan, \"So, how are you two holding up?\"\n\nAzlan smiled, \"Fairly well, Helen has been complaining she's fat and her feet hurt. I think she's ready for the kids to be born.\"\n\nTony grinned, \"About the same with me. I'm surprised she isn't over here; she hasn't left my side for days.\"\n\nErik, Axel, and Jack smiled at them, they had gone through the same, twice for Axel, as his kids had been born separately. Axel grinned, \"Yeah, it always like that and if Ariel is being clingy like that, she has to be close.\"\n\nErik nodded his agreement, \"He's right, Katja was the same. I'm sorry Azlan, since it's the first time for you two, I don't know. Though human couples Tony and I knew before, where sort of like that.\"\n\nHe smiled to himself, he knew they would be having the kids tomorrow.\n\nThe conversation was much the same with the girls, Katja asked them the same question Erik had. Ariel had frowned a little, \"Well, besides being... is bitchy the human word Helen?\"\n\nHelen grinned and nodded, \"Yes, that more or less the best word I can use.\"\n\nAriel grinned her thanks, \"Besides being bitchy, I really don't like getting to far away from him right now. And I wish they would pick a spot and not try to move together.\"\n\nKatja, Allie, and Maria all grinned, then Allie added, \"They never seem to, even when it's just one. I had it with both of them.\"\n\nMaria grinned, \"It wasn't much different for me either. But at least you don't have to go through it like a normal human, I was nine and a half months with Lucy.\"\n\nHelen nodded; she was going on eight. \n\nKatja smiled, \"You have been talking to them, haven't you?\"\n\nThey both nodded yes, so Katja called to Azlan and Tony. They came over with a look of curiosity. \n\nKatja smiled at them, \"Why don't you two help your mates, talk to your children and ask them to stop moving at the same time.\"\n\nThey both looked at her slightly confused. She shook here head, \"Just put your hand on them and ask them nicely not to move at the same time, this way they won't be bumping into things. It worked for Erik and me.\"\n\nTony went over first and kissed Ariel, then laid his hand on hers over the kids, he smiled as he felt them move, \"Ah... kids, do your mother a favor and try not to move at the same time, it's making her uncomfortable.\"\n\nAs soon as he said it, his eyes went wide as one stopped while the other moved, then vice versa. Ariel grinned as well and kissed him.",
        "Azlan smiled and did the same, as was rewarded with them listening to him as well. Helen grinned and kissed him also.\n\nKatja and the others smiled, then Katja said, \"See? I told you. They can understand you; they just didn't know.\"\n\nErik, Jack and Axel watched as Katja directed them and Erik smiled while the other's eye went as wide as Tony and Azlan's.\n\nThey looked at him, and he grinned, \"I didn't know what to say either, but when Katja told me to talk to them, I said the first thing that came to mind.\"\n\nHe looked at the others, \"It sort of makes sense, they'll be able to understand and do mind-speech from the time their born like Geoff and Brigette.\"\n\nHis phone rang, and he answered it. He smiled, as he said, \"Okay, I'll be right out.\" He ended the call, \"Pizza's here. Jonny, want to give me a hand?\"\n\nJonny grinned and nodded, then followed him around the house to the front. Erik smiled and greeted the delivery guy, \"Evening Joey.\"\n\nThe delivery guy smiled, he liked delivering to here. The tip was always good, and the people were nice. \"Hi Mr. Woodes, how have you all been?\"\n\nErik smiled, \"Good, busy though. You?\"\n\nJoey nodded, \"The same, everyone loves dad's pizza, so I'm busy all the time.\"\n\nErik nodded, \"That's what happens when you serve the best pizza for twenty miles around. How's school going? You're still taking the engineering classes, right?\"\n\nJoey smiled and nodded, \"Yep, school during the day, and delivering every other night and weekends so I can study and do the work.\"\n\nErik nodded, \"Good, engineering is a good line of work. You'll do well, when you look for your first job.\"\n\nHe handed him a tip, then added, \"Let me know if you need any contacts, I've got a few numbers I can give you. Nothing spectacular mind you, but good places to get your feet wet at first.\"\n\nJoey smiled, both at the tip and the offer of help. \"Thanks Mr. Woodes, I appreciate it.\"\n\nHe handed Jonny two boxes and Erik took the other four. \"You have a good night Mr. Woodes.\"\n\nErik smiled and nodded, \"You to Joey, tell your dad I said hi.\"\n\nAs he drove off, he and Jonny walked back around the house. Then Jonny asked, \"Mr. Erik, do you think I could learn that when I get older?\"\n\nErik smiled at him, \"Of course, there's nothing you can't do if you put you mind to it. You'd have to go to college after you come of age. But, that's no big deal.\" \n\nHe smiled once more at him, \"As long as that's what your interested in. I'll get you some info on it and talk to your mom and dad if you want.\"\n\nJonny smiled, \"Yes sir, I think I would. Thank you.\"\n\nErik grinned, \"No problem. Ah, what brought this up?\"\n\nJonny blushed a little, \"Well, I'm fourteen now, and Lucy's twelve. She's going to be busy learning how to be a priestess like Miss Celia and Erin. Then once we all finish; we'll want to get our own place and things. You know.\"\n\nErik smiled and nodded, \"Yes, I do know. I'm glad you've thought this through. Did you talk to Lucy about it?\"\n\n\"Sort of,\" He answered back. \"She was wondering about us, and what we'd be doing. Plus, we see all the rest of the people doing different things.\"\n\nErik nodded, \"Yes. I understand. We'll you do still have two years or so. I'll get that info for you, and then talk to your dad and mom, if you decide on it.\"\n\nThey turned the corner and Erik smiled at him, \"Don't worry, it'll all work out.\"\n\nThey set the pizzas down on the counter and opened them up. Erik grinned, the first ones to come over we're the kids of course. He helped them get what they wanted, then he grabbed a slice for himself. Then the others came up, and he got the kids drinks and sat down with Brigette next to him, then Geoff and Gesa sat between Katja and Allie.\n\nThey all talked some more as they ate and the conversation ranged all over. Finally, everyone was full and almost all the pizzas were gone. The last box held about three quarters of a pie made up of all the different types he'd ordered.\n\nAfter another hour of so, everyone decided to head home before it got too late, except Tony, Ariel, Helen and Azlan. They we're going to stay a while longer, then Tony was going to take Helen and Azlan home on the way back to theirs. Helen was to uncomfortable driving, and Azlan didn't have his license yet. He could drive, like most of the people, but they were told to wait until they moved to make it easier. Erik was having Uncle Geoff, check with the state to see if they could have someone come to New Lyonn and test everyone there since they had so many, instead of the going one by one to get tested.\n\nThe girls had taken all the leftovers inside and the guys were talking. Erik asked, \"You guys got anything going on tomorrow?\"\n\nAzlan shook his head no, \"We thought we'd hang out at home. Still got a couple things to finish.\"\n\nTony rocked his hand back and forth, \"Not sure, we were thinking about doing something, more to keep Ariel's mind off waiting. But we're not sure yet.\"\n\nErik nodded, \"Ah, it would probably be better to stay home Tony. She's awful close.\"\n\nTony looked at him, she really still had a couple weeks. \"You sure?\"\n\nErik nodded, \"Ours came early.\"\n\nTony looked at him, he knew that look very well. Sometimes he thought his friend was clairvoyant. So, he nodded okay, and the talk turned to other things. \n\nThey went home an hour later, and Erik and Katja were sitting relaxing. The kids were playing with the cats, and would be headed to bed soon. Katja was curled up next to him, with his arm around her gently stroking her arm. She smiled up at him, \"I'm glad we started this love, it's so nice to have the family over. I sort of miss living with Ariel and Tony.\"\n\nErik smiled, \"So do I, and I know the kids do also.\" He decided to tell her about the impending births. \"We'll have some more people over also, once the kids are born. I was told they'd be born tomorrow.\"\n\nKatja sat up, and looked at him, \"Who told you?\" \n\nErik smiled, \"Briast did. I've also found out something else, and I've been debating on telling you, but I don't like keeping things from you. So, as soon as the kids go to sleep, we need to talk.\"\n\nShe looked at him slightly worried, \"There's no problem is there?\"\n\nHe shook his head, \"No! Defiantly not. And it's nothing bad either, more of a surprise really. But it explains things.\"\n\nKatja trusted him, so she'd wait. \"Well that's wonderful, do they know?\n\nHe shook his head no, \"I was told not to tell them.\" He grinned, \"Briast giggled and said it was a surprise.\"\n\nKatja grinned, \"She acts almost like Lucy does when I talk with her now.\"\n\nErik grinned back, \"I think you'll find it's Lucy that acts like Her.\"\n\nKatja's eyes went wide, then giggled herself, \"I suppose your right. I guess I'm just so used to Bast.\"\n\nErik grinned again, and nodded, \"Yes, I'm Brigit's, heart and soul, but I look at Briast almost like a... sister, I guess. I like her a lot, she always makes me smile. Brigit told me, when She told me about the other thing, it's because She's a combination of Her, and Bast.\"\n\nKatja nodded back, \"That makes sense I guess.\" \n\nShe shook her head, \"You know, I still can't believe we're having this conversation, like it was the most normal thing in the universe.\"\n\nErik agreed, \"I know, it boggles the mind sometimes.\"\n\nAfter about an hour, they got the kids ready for bed. Both them and the cats, were worn out from playing. They went back into the living room after getting something to drink, then Erik started to tell her what else he found out, he knew it would be better for her to know.\n\n\"Well, after I talked to Briast, I was thinking to myself, She always makes me smile, like we were talking about before. Then I felt a familiar touch and heard, \"Of course dear one, She is partly me also, as she is also partly Bast.\" Then She laughed adding, \"Just don't get to attached to Her, you'll always be mine dear one.\"\n\nI smiled and said to Her, \"I know my Goddess. I'm yours now and forever, and I will love you for as long as you let me.\"\n\n\"She caressed me like She always did, then She said, \"Remember what happen the last time you told me something like that dear one. Maybe I should remind you.\"\n\nHe looked at Katja and blushed, \"It's kind of hard to explain what She did. It was on a metaphysical plane, and it was only a feeling.\"\n\nKatja took his hand, \"What do you mean love?\"\n\nHe looked at her, \"The only way I can explain it, my entire being was infused with her love. It felt so wonderful, like when you and me make love.\n\nHe looked at her pleadingly, hoping she'd understand, \"That's the only way I know to describe it.\"\n\n\"Then She said to me, \"I enjoyed it as much as I did the first time I had you. Give our son Geoff my love dear one.\"\n\nErik looked at his mate, \"I didn't understand Her meaning at first, my senses were a little scrambled, but it was the way She said it.\" \n\nHe blushed once more, \"She had done this to me once before, when we were trying to get Jack and Maria to let Lucy become a priestess. Remember how I sort of went dizzy?\"\n\nKatja thought back, then nodded, \"Yes, I remember. Then what happened?\"\n\nErik swallowed, \"Well, I was in a meeting during all this, and I lost track of what was going on and Tony called to me a few times. I finally came to and he asked what was wrong. I told him nothing, and excused myself and left the room.\"\n\nHe looked at Katja, \"Well, once I left and I got by myself, I thought on what she had said, \"Give our \"son\" Geoff my love dear one.\" The way She said it made me wonder.\"\n\n\"I called to Her and asked, \"My Lady, does what you said, mean what I think it means?\"\n\nThen She answered me, \"Yes dear one, it does. When I had you, I took some of your being into me and gave it back to you enhanced, then you gave it to your mate. Our son is the result.\"\n\n\"I could not do this like some of the others had, Zeus for example. We were told not to do that anymore, so we came up with another way. So, like before, when it produced the hero's Heracles and Perseus, Geoff is also a... Demi-God. However, this world does not need a hero like Heracles or Perseus now. It needs a teacher and peacemaker, especially one that is intelligent, good and loving like our son.\"\n\n\"Then she paused for a moment, then continued, \"This does not mean that he can't be a hero if needed, just that he was not created for just that like others were.\"\n\nErik looked at a stunned Katja, \"I was so stunned by this, it was the last thing I expected to hear, but all I could think of was you. So, I asked her, \"Should my mate know of this my lady?\"\n\n\"There is no need dear one, this is not like the old days when we would physically mate with our chosen one to produce an off-spring. Our son is yours and your mates, but he has some of my attributes.\"\n\nErik looked at Katja once again, \"I was sort of relieved to hear this, then I thought to myself. I loved you so completely and I wasn't sure how to explain it to you. The She said to me, \"Yes dear one, that was why it was forbidden for us to do it the old way. It caused too much trouble\"\n\nHe squeezed Katja's hand, \"After that, I went back to the meeting, everyone started asking me, \"Are you all right, what's the matter?\" \n\n\"Finally, I told them I needed to take care of something, and I walked out after assuring Uncle Geoff and Tony everything was alright. I told them \"I'm fine, really. It's just something I found out today. It'll be fine, it's just something I need to wrap my brain around.\" Then I walked out the door. I probably sounded like a babbling idiot.\"\n\nErik looked at Katja, she had a look of shock and wonderment of her face. He took a drink, then continued, \"Well, I walked slowly down the passageway, going over everything I found out. I'm thinking to myself, \"Our son, a demi-god, things like that don't happen anymore.\" Then the little voice I hear every now and then said, \"You were told why it doesn't, She did it that way because that's the only way She could, and he needs to be one, so he can do what he has to do. I don't know why this is bothering you so much.\"\n\n\"I stopped walking and though, \"I guess that's right.\" Then I understood what the Brigit meant when she said it was forbidden for Them to do it the old way. I've read all the old myths on how Zeus and others would visit young woman and get them pregnant. Just imagine how their husbands or lovers would feel, how much it... well, not bothered me so much, I wasn't sure what I was feeling at the moment.\"\n\nHe squeezed her hand and kissed her, \"But I love you, and I have no desire to be with anyone else, nor did I want to hurt you. Then again, it wasn't like I actually made love to the Goddess. All this happened on... another plane of existence, for lack of a better term.\"\n\n\"I'm standing there beating myself up, do I tell you? Or maybe I do what Brigit said, and not tell you everything.\"\n\nKatja kissed him back, and stroked his face. \"So, I guess the \"I'll tell her, won out?\"\n\nHe nodded, \"I was trying to make the decision, then I felt warmth once again, but it didn't feel like it normally did when Brigit contacts me. Then I felt a soft, warm hand caress me and I knew it was Bast. I've never had a lot of personal contact with Her, so it was a little strange.\"\n\n\"Then she said to me, \"My son, your thoughts are good, you are an honorable human that takes his vows seriously. They are not just words to you; you know they are real. Do not think long on the situation, you've done nothing wrong.\"\n\nSo, I said to Her, \"Yes Goddess, I understand. It's just that I don't like to keep things from my mate. Especially when it's this important.\"\n\n\"Bast caressed me, then said, \"You can tell her if you wish, she will understand. You must remember that this is not an isolated thing, many human's and others, have been like your son. It takes nothing away from what you and your mate have, or who your children are. Brigit told you this. He will also be aided by others, much like you were. And, he and Ariel's son will be as you and his father are and many others will also assist and guide him.\"\n\n\"Then I felt Her touch once more as She said, \"So, do not worry, enjoy the peace and prosperity that will come from all this.\" She caressed me once more, then She was gone.\"\n\n\"I felt slightly better as I thought about what Bast told me, then I just started walking down the passage way once again until I got to the doors to the learning center. I walked in, then sat down in the back of the classroom to listen to what was going on. I guess, I wanted to see if Geoff looked any different now that I knew.\"\n\nKatja smiled at him, which sort of relieved him, as she didn't seem upset, \"And did he?\"\n\nHe shook his head no, \"Not really, the only thing I noticed, when Geoff and Gesa were sitting together like normal and their desk was by a window. As the sun shined through it, and on them, I noticed that when the sun hit him right, I could see red highlights in his hair. A legacy from Brigit I suppose.\"\n\nKatja nodded, \"I love you, my Mate. Thank you for telling me all this, I know it wasn't easy for you. But I'm glad you did. We knew our children were going to be special.\" She grinned, \"But, I didn't realize just how much.\"\n\nErik felt relieved, \"So... you're not... upset?\"\n\nShe looked at him a moment and shook her head. Then she wrapped her warm soft arms around him and kissed him. It was one of special kisses that always made his mind soar and his hear beat like a drum. She broke the kiss, \"I love you and no, I'm not upset. You did nothing wrong my love. You didn't have a choice, your Goddess wanted the world to be a better place, and She's using our son to do that.\"\n\nThen she grinned, \"Now, if it was a physical thing, She may have a problem.\"\n\nThey both felt warmth and heard a laugh. \"And that's why the One says we can't do that anymore. Take care of our Mate dear one.\"\n\nKatja stood and took hold of Erik's hand and dragged him into the bedroom to do just that.\n\nSunday morning dawned and it seemed to be a perfect morning. Erik smiled as he remembered the night. Katja had did what Brigit said, very well. He kissed the nape of her neck and after her morning stretch, she wrapped her arms around him and kissed him. \"Good morning love.\"\n\nErik smiled, \"Good morning, I love you.\" Then he kissed her back.\n\nShe smiled as he kissed her. Last night was something to remember, they made love most of the night and they were both a little tired this morning. But it was worth it. \n\nThey were both surprised, when they felt the presence of Brigit as she joined them, and Erik knew he was making love to the both of them, one physically and the other metaphysically.\n\nShe grinned, \"Last night was sort of interesting. I still can't believe that happened.\"\n\nErik grinned back, \"Tell me about it. I don't know if I could take that to many times.\"\n\nKatja nodded as she snuggled up to him, \"I know.\" Then she grinned, \"I still don't know if I should feel honored or mad to share you though.\"\n\nHe knew she was joking, so he kissed her. \"Well, I guess I need to get up and dressed so I can get the tea and coffee going. It's going to be a busy day.\"\n\nKatja smiled and nodded grinning. He kissed her once more, then rolled out of bed. He got cleaned up and dressed, then unlocked the bedroom door. He opened it and the kids came running in to hug his legs. He laughed, and hugged them both back and gave them each a kiss. Then they climbed into the bed and greeted their mother. \n\nShe smiled, \"Did you two sleep well?\"\n\nThey both answered yes, then Geoff said, \"I love you, but I need to help daddy.\" Then he was climbing down and running through the door to help his dad. Then Katja smiled as Brigette snuggled up to her.\n\nGeoff caught up with Erik, \"Can I help again daddy?\"\n\nErik smiled as he picked him up, \"You trying to take my job?\"\n\nGeoff giggled as his father held him in one arm while Erik pulled a chair over, then lower him down to stand on it. Erik put all the tea things out and pushed the button on the water kettle and coffee maker. \n\nHe pulled the tea pot closer and watched as Geoff careful measured out the tea leaves and put them in the pot. As they waited, Erik grabbed two mugs and two small glasses for the kids' juice.\n\nThen he asked, \"So, did you have a good time yesterday?\"\n\nGeoff grinned and nodded, \"Yes, I did. I liked playing on the play set with Gesa, and having Jonny push us on the swings.\"\n\nErik nodded, \"Fun is important, are you enjoying the school with Miss Allie?\"\n\nHe smiled, \"Yes she's a good teacher.\" Then he grinned, \"Plus I get to be with Gesa.\"\n\nThen he looked up at his father, \"The only thing is, I wish we could learn more.\"\n\nErik looked down at him, \"What do you mean?\"\n\nGeoff shrugged, \"Well, once Miss Allie, teaches us things, I learn them, but some of the others don't learn them as fast. So, she has to go over it all again, but I know them and want to learn the next thing.\"\n\nErik nodded his understanding; this is what happens when you have part of you from a Goddess. \"Well, that's something you have to get used to, not everyone can learn things real fast. I can ask her tomorrow when we get to the town, and see if she can give you some more things to learn. If you want.\"\n\nGeoff smiled and nodded, \"Thanks daddy.\" Then he thought about what his father said, \"But, should I do that there? I don't want the others to think I'm smarter then they are, it would make them feel bad. Wouldn't it?\"\n\nErik nodded, \"It might, you never know. I tell you what, how about I ask her to give me some other lessons for you to do at home. Would you like that better?\"\n\nGeoff grinned from ear to ear, and nodded yes. \n\nErik grinned back, \"Okay, that's what I'll do.\" The kettle clicked off and he poured the water into the tea pot and set the timer on the microwave for five minutes and let Geoff turn it on. While he was waiting, he poured himself a mug of coffee and took a sip, then he got the juice out of the fridge. "
    ],
    "authorname": "65rebel",
    "tags": [
        "alien",
        "sci-fi",
        "fantasy",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/katja-pt-17"
}