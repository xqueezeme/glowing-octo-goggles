{
    "title": "A Perfect Match",
    "pages": [
        "I don't know how you did it, but you glorious readers managed for a moment to make A Shoulder to Cry On number one. Since I published that, two installments of this series have an award. \n\nI want to start by thanking Rodolphe for the editing. Not many people are willing to take up the task of editing a story this long. \n\nFor newcomers, this is the 5<sup>th</sup> installment of what I'm calling the Criminal Affair Series, which started with the ten-part Criminal Affair. Order of story for continuity is as follows. \n\nCriminal Affair (ten-part series) \n\nThe Sorority \n\nThe Irishman at the End of the Bar \n\nA Shoulder to Cry On \n\nA Perfect Match \n\n- \n\nFriday - May 8, 2026 \n\n-Chase Kramner- \n\nI unexpectedly received an invitation to a memorial service in Wisconsin last week. When it arrived in my mail, I believed it was spam before I read the return address more closely. The invitation was sent by Francine Hopkins, the mother of Amanda Hopkins. It was a memorial service for her daughter's birthday. I gave her a call and let her know I would attend. Lauren is concerned this could be a rough experience for me, but I am insistent this is something I need to do alone. \n\nLieutenant Eastland approves my leave on short notice, and I begin travel early on the seventh. I have a layover in Milwaukee, then board a flight to Eau Claire Wisconsin before driving my rental car approximately sixty miles to a town called Ladysmith. I check into my hotel and try to relax, but I am too restless. \n\nI return to my rental car and drive to the downtown area of Ladysmith. I park in front of a single-story building being renovated and across the street from a movie theatre. It's called the Miner Theatre, which is likely homage to either the street it is on being Miner Avenue, or the town's history in the mining industry. After I exit the rental car, I just walk. I try to put myself in the shoes of Amanda when these were her stomping grounds. Seeing movies on the weekends or Friday nights with her friends. Maybe she even once worked at one of these family stores before going to college. \n\nIt was an hour to darkness when I left the vehicle and it is well after dusk by the time I return. The few people I saw when I walked were polite enough, but overall it was quiet around town. Perhaps tomorrow would be a little different being Friday and all. \n\nI drive from the downtown area and travel to her high school. There is no security gate, so I roll straight in and park. I do not leave the car and just look at the school Amanda Hopkins went to. It is so normal and unremarkable from the outside. I know Amanda was in the culinary club but was going to college for business management. After she dropped out because of her rape, she went to culinary school after recovering for several years. What she had learned from business management likely aided in her later fiscal responsibility. \n\nWhen I look at the rental's clock, I see it is nearly eleven at night now. I finally decide to go back to the hotel. \n\n- \n\nI have been invited, but I feel like I do not belong in Amanda's home. As her family and friends talk to each other, I know some of them are looking at me, wondering why I am here. Some go to her mother and discretely point to me, and she explains it to each person. Francine had graciously greeted me when I arrived to her credit. \n\nI would excuse myself if I had someone to excuse myself to before going to the bathroom and locking the door. My hand is shaking so hard my shoulder is vibrating. I grip the edge of the sink to still it, but that nervous energy transfers itself to my foot which starts tapping. I take panicked breaths, then run water to rinse my face, but I am losing control of my body. I want to punch something. I have no way to release this tension. The anxiety spills over to my stomach, and I immediately push the toilet lid up and vomit. \n\nI heave until I'm dry and cough the rest out. My face is still wet from the rinse, and I slide over to the wall and lean against it while sitting on the ground. I think I got it all in the bowl, but I unravel some toilet paper and wipe my mouth with it. I take my still wet hand and swipe off the pieces of paper that broke off. \n\nI must look like a huge pile of useless shit right now. \n\nThe door knocks from the other side and the door jiggles. \"Detective, are you okay?\" I hear Francine say. \n\n\"I...\" I start, but my throat is sore, so I end up coughing. \"...I'm fine. Give me a minute.\" \n\nI force myself to my feet and flush the toilet. I rinse my mouth with water and spit it into the sink. The water runs until it's all down the drain. I dry my hands and face and then examine if I look as bad as I feel before leaving. Francine is still near the door when I close it. \n\n\"Detective...\" she begins. \n\n\"Please, ma'am, Chase,\" I say, and she smiles a little. \n\n\"As long as you call me Francine,\" she says, and smile back. \"Are you okay? You look very uncomfortable.\" \n\n\"Honestly ma...Francine, I am,\" I admit, and she puts her hand to my elbow. \n\n\"The people who murdered my daughter are gone. That is because of you,\" she says, and it takes every fiber of my being to not scream. \"You bled for her.\" \n\nI cannot think of a response, and I feel my hand involuntarily rub my stabbing scar. Francine sees how out of it I look, so turns my attention to a young boy looking at pictures of Amanda. A large cork board has been arrayed with several dozen pictures of Amanda from the time she was baby to her shortly before her murder. I am standing to his side, and he looks absolutely transfixed by her. \n\n\"Is he?\" I ask, and Francine nods. \n\n\"My grandson. Luke. His adoptive mother Gillian and I met a few months after her death. She told me he is nothing like his father. There is so much of her in him. Luke's smart, he figured out who Amanda was by himself,\" Francine explains as I look at Luke. \n\nLuke does resemble his biological father Travis Breckinridge. The man who raped Amanda with several others and stabbed me. The man I killed in self-defense in a dirty motel room. I do not see Travis in him; I only see Amanda. A girl who the first time I met her, was a corpse in a back-alley parking lot behind a bar. His hair is her hair, that perfect hue of milk chocolate brown I look at every time I open the folder in my desk drawer. \n\nFrancine gently encourages me to meet him, so I do. I approach him slowly, like a bird watcher trying to not startle his subject. I am finally close enough to touch him, but instead look at the pictures as well. \n\nAmanda was a joyful baby, a cute little girl, a moody teen, a beautiful young woman, and then a proud high school graduate in her gown and hat. Then nothing. It was like she stopped existing when she arrived at college. This gap is punctuated further when the pictures resume, and Luke is there. He looks maybe four or five years old in them. And she is smiling again. \n\nLuke brought her back, even though so many things about him should have destroyed her. Instead, it was like he gave her something back that she lost. Luke was the innocence that was taken from her. Amanda looked at someone that some in society would cast aside, and only saw his innocence. Luke did not do anything wrong, and he does not need to be burdened by the crimes of others. I cannot even comprehend the decisions she had to make, or how she arrived at their resolutions. \n\n\"Did you know her?\" Luke asks me, and I look down at him. Those brown eyes are hers. \n\n\"Not as much as I would have liked to,\" I say, and he looks at the pictures again. \n\n\"Me too,\" he says, and I feel like my gut was punched. \"She was my mom.\" \n\n\"I'm sorry,\" I say, and he nods. \n\n\"My other mom. Mom adopted me, because mom wasn't ready to have me,\" he says, and I admire how he does not put any distinction between them. \n\n\"Which one is your favorite?\" I ask, and he scans the pictures for nearly ten seconds before pointing at her in a prom dress. \n\n\"She is very pretty in this one,\" he says, and I grin. He then points to another one of her with a dog at maybe sixteen years old. \"She looks happy in this one.\" He then points to another, one with him. \"I like this one too, because I remember it. She visited and we went to a park to play. We went down the hill on sleds and built a snow man.\" \n\nAmanda and Luke were building a snowman, with the carrot for the nose and coal for the eyes. The top hat is on Luke's head. The picture caught them mid laugh, and I laugh a little myself. It looked like a near perfect day. \n\n\"What's your favorite?\" he asks, and I exhale a little and look. So much to choose from. I kind of feel creepy because she was younger than eighteen in most of them. After a moment of thought, I think I see my favorite. \n\nAmanda looks like the picture caught her off guard. Likely during a camping trip she took with her friends in high school. It was dark and the only light is the fire in front of her. She is sitting on a chair with a book light and one of those cheap romance novels she would still be reading in ten years. I like the picture because I already had a feeling that part of her had never changed. \n\n\"I like this one,\" I say, touching it with my index finger. \n\n\"She liked reading to me,\" Luke says, and I say I thought she might have. \n\n\"Luke,\" I hear a voice say. I turn to see who I assume is his adoptive mother Gillian. \"We're about to do a prayer, come on.\" \n\n\"Okay. Nice to meet you,\" he says, and offers me a handshake. \"I'm Luke.\" \n\n\"Chase,\" I say, and wrap my hand around the entirely of his. \"I'll be right in too.\" \n\n\"See you soon,\" he says, and runs off to his mother. That child is nothing short of a miracle. \n\nI am about to leave, but I want to take one last look at the pictures. I hover over a few and stop at the last one of her with Luke and the snowman. I smile at it, until I notice something. \n\nI remove the tack holding it to the cork board and look at it carefully. In the frame behind them, is a parking lot. My eye focus to one car. An orange mustang convertible parked with the driver side door facing the camera. The driver is still in the passenger seat, and I can see her clear as day as if she is standing in front of me. I know that car, and I know that person. \n\nMarlene. I told her I would find her mistake. I put the picture back on the board and leave for the prayer. I will be a detective as soon as I can, but for now, I am a guest. \n\nI enter the living room where the group is about to begin a prayer in the memory of Amanda Hopkins. Her family priest leads. \n\n\"Let us pray,\" the priest begins. \"Lord, watch over this family who has lost so much these last few years. Watch over the spirit of those who have departed and guide their souls to an eternal place of rest. May you bless this family and its friends with the strength to persevere through these trying times. We trust in your divine plan and trust in your judgement against the wicked who do harm to the innocent. For this we pray in Christ's name, amen.\" \n\nI remember a joke someone once told me. Or I saw it in a movie, I do not quite recall. Imagine a man is on a sinking boat, and he prays to God to save him. When the water is to his knees, another boat arrives and offers to save him. \n\n\"No, I'm waiting for God to save me,\" the man says, so the boat sails away. \n\nWhen the water is to his waist, another boat arrives, and another offer of salvation is given. He refuses, because he is waiting for God to save him. When the water is to his neck, a third boat arrives to save him, but he refuses again. The boat finishes sinking, then the man drowns, and dies. \n\nThe man goes to Heaven and is furious at the creator for not saving him. God replies, \"I sent you three boats.\" \n\nI have never been a particularly religious man, but I do not believe God works in mysterious ways. I think he works in plainly obvious ways. We are just so caught up in his grand design, we do not seize opportunities because we expect something greater than him merely sending a boat. Or a detective who knows who did it, but cannot prove it, finding a picture of his suspect at a place she has no reason to be. \n\n\"Amen.\" \n\n- \n\nFriday - May 15, 2026 \n\n-Lauren Hill- \n\nSince Chase got back from Wisconsin, when I wake up he is already out of bed. I pull my shirt off the ground next to the bed, and slip it over my body before leaving the room. Chase is at his computer in his office. His attention is consumed by his work, so he does not notice me as I walk across the doorway to the kitchen to start making coffee. At least he thought ahead of time about how occupied he could be, because a coffee mug is under the spout of the Keurig, with a note saying 'Just hit size, love you.' \n\nI lean on the counter as my coffee fills, and I take my phone from the charger on the counter. No new messages from my partner, and I check the time. It's six thirty, so I wonder when Chase woke up. \n\nI finally passed the detectives exam. Barely. You cannot even participate in the oral interview process unless you pass the written exam. Public speaking is the most common fear for a good reason. Three Lieutenants and a Captain pepper you with questions for nearly a half hour. For some reason the hardest part for me was my own introduction statement. Finding that fine line of brag and humility was nerve racking, and I found myself stumbling over my own statement. I thought it was over when I was asked to leave the room and come back in ten minutes after I shook myself off. \n\nI sat with my head in my hands for five minutes, trying not to cry in public, because nothing says a qualified, strong woman like checking the box of everything men hate about women in this career field. \n\n\"You okay?\" I heard a voice ask, and I looked up to see Jill Whitaker in her lab coat and a burrito wrapped in tinfoil from the food trucks outside. \n\n\"Hey, yeah, interviews for detective's exam are happening right now,\" I said, and she sat next to me. \n\n\"Waiting for your turn?\" Jill asked. \n\n\"My interview is ongoing,\" I said, and Jill looked at the door, then at me in confusion. \"Yeah.\" \n\n\"That bad?\" she asked. \n\n\"I was told to leave, calm down, and come back in ten minutes. It's been five,\" I said, and Jill giggled a little. \"I'm already not getting it.\" \n\n\"Stop,\" she said, and I looked at her. \n\n\"You had a perfect score. I can't even begin to stress how much credibility you gave women in the police,\" I said, and she shrugged. \"What makes you, you?\" I asked. \n\n\"Short answer? I don't give a fuck,\" she said, and I laughed. \"It's true, I don't. I don't care what other people think about me personally, except my family. I let my record speak for itself. I never once made it my goal to be an example for women. Quite frankly, there aren't many women I like. That number is probably single digits. In that room, they care about three things: Competence; commitment; credibility.\" \n\n\"Competence, commitment, credibility,\" I said back, nodding rapidly. \n\n\"Stand up,\" Jill said, standing up herself. I stand up, and Jill straightens my uniform a little for me. \"You get back in there. Don't start by apologizing for this, just get in, sit down, and start over. Do not talk about it if they don't. Smile a little,\" Jill said. Did Jill Whitaker just say I need to smile more? \"Don't take that the wrong way. If a guy went in there with a stick up his ass and resting dick face, he would be kicked to the curb too. Smile is polite, personable, and a display of confidence.\" \n\nI tried to smile a little, and her smile back made my smile real. \n\n\"Just like that. You don't need to act like a man to get this job. You're a woman, you bring something men just can't. Knock on the door, get in that chair, and get the job you deserve,\" Jill said, and I exhaled one last time before facing the door. For good measure, Jill gave me a solid slap on the ass which makes me laugh. \n\nI knocked on the door, came back into the room, and had a seat. \n\n\"Feel better Sergeant?\" the Captain asked, and I nodded, then said yes. \"Let's start over. We're going to give you a few minutes, to just, talk about Sergeant Hill.\" \n\n\"Thank you. Captain, Lieutenants, my name is Patrol Sergeant Lauren Hill...\" I begin with a renewed level of confidence and clarity. When I walked out twenty minutes later, I was a detective. \n\nWhile Chase was first assigned to Homicide, I have been assigned to Property Crimes to investigate identity theft, criminal fraud, and arson. I have mostly been doing larceny, but I am just happy to be there. \n\nMy coffee is filled, and I go back to the office and see Chase's intense focus has not faltered in the slightest. I just watch him work. I cannot even describe how sexy he looks when he works. Going from the computer to writing notes, then digging through a few things then resuming where he left off. I wonder what he is working on. \n\nI take a sip of my coffee loudly to alert him, and he looks up from his computer. \n\n\"Morning,\" he says, and all the energy he had exhausted in who knows how long hits him all at once, and he instantly looks tired. He yawns and covers his mouth, then stretches with his arms upward. \n\n\"Morning,\" I say, and he stands up from his computer chair and walks around his desk. He is wearing a pair of exercise shorts and a white t-shirt with a coffee stain near the collar. \"When did you get up?\" \n\n\"A few hours ago,\" he says, and kisses me before leaning back to his desk to grab his coffee cup. \"What time is it?\" \n\n\"Time to shower and go to work,\" I say, and I leave the doorframe so he can walk through. He puts his mug next to the Keurig then walks into his room. \"What are you working on? It obviously isn't that sensitive if you're working it at home.\" \n\n\"Doing some research,\" he says, and peer into his office to see how much stuff is on his desk. \n\n\"On what?\" I ask, and he walks out again with his towel he left on the floor and enters the bathroom. \"What case is it?\" \n\n\"I had a closed case last year, and I think I might be able to get it reopened,\" he says, then turns on the water for the shower. \n\n\"Homicide case?\" I ask, and he does not reply. I enter the bathroom where he is stripping down. \"A case from homicide?\" \n\n\"Yeah,\" he says. Chase sounds evasive right now. I have to repeat questions and he is pretending to be in a hurry. \n\n\"What case?\" I ask. \n\n\"An old case...\" \n\n\"...Victim's name,\" I interrupt. Chase pauses at the shower curtain, then steps in and slides them shut. \"Nope, uh uh,\" I say and yank the curtain open. \"What the fuck is going on? You've been acting weird since you got back from Wisconsin.\" \n\n\"I'm not acting weird...\" he starts. \n\n\"...what case, is it?\" I ask slowly. Chase sighs before finally telling me. \n\n\"Amanda Hopkins,\" he says, and I am at a loss of words. Chase had sworn to me he moved passed it. \n\n\"You promised,\" I say. \n\n\"I know, but...\" \n\n\"...but nothing. You promised me that case was over. That you just needed to accept she got away with it. Every cop has the fuckers who get away, and it eats them up inside too.\" \n\n\"I have a lead,\" Chase says. I slide the curtain back in anger and slam the bathroom door behind me. The water stops running and Chase comes out a few seconds later with his towel around his waist. \n\n\"We are not having this discussion. You fucking promised!\" I shout at him, and Chase takes a deep breath. \n\n\"Let me show you...\" \n\n\"...No. It's done...\" \n\n\"...just let me show you,\" Chase says, and I curl my fist into a ball, then release it. \n\n\"You have sixty seconds,\" I compromise and he walks to his office and shuffles some papers around then returns. \"Fifty seconds.\" ",
        "\"I saw this at Amanda's memorial,\" he says, and hands me a picture. It is a picture of who I will assume is Amanda Hopkins building a snowman with a little boy I also assume is her son. \n\n\"So what?\" I ask, and he points to the top of the picture in the background. \"What am I looking at?\" \n\n\"Marlene drove an orange mustang,\" he says, and I scoff. \n\n\"A lot of people drive orange mustangs. Forty seconds.\" \n\n\"Marlene is still in the car,\" he says, and I squint a little. He is really reaching here. \"Blonde Caucasian female. That is Marlene.\" \n\n\"Chase, you want it to be Marlene,\" I say, and he groans and goes back to his office. \"Chase.\" \n\n\"I still got thirty seconds,\" Chase says, and comes back with a few more pictures. \"These are stills I took from a video of them arriving at the park. The mustang pulls in a minute after they do but loiters before taking a parking space. Look at the license plate.\" \n\nChase got her license plate? Now I am curious so look at it. Even out of focus I can see it is a plate from this state. The numbers and letters are blurry, but if I had something to compare them to, I could take the leap. \n\n\"What's her license plate number?\" I ask. \n\n\"N-A-V-2-1-7,\" Chase says. I look at the blurry plate, and I see it too. I actually fucking see it. \"If you tell me right now, I'm seeing what I want to see, I will shred everything I have and...\" he says, before I interrupt him with a kiss. \n\n\"Get this fucking bitch,\" I say as my seal of permission. \n\n\"Thank you,\" Chase says and hugs me. I hold him tightly and feel his dick from behind the towel. \n\n\"Is it a murder case yet?\" I tease. \n\n\"Nope,\" Chase says, and picks me up to carry me into the shower with him. \n\nI am stripped naked in a heartbeat and I restart the water to get it hot again. Before we step in, I suck his dick for a minute to get it firm. When he is up, we step into the shower and he fucks me from behind with the water flowing down my back. His hands squeeze my hips to pull me into him. My hands are pressed to the wall to keep me from jutting forward. \n\nI wasn't expecting anything more than a quickie, and we really don't have the leisure to take our time. Sometimes though, a good hard fast fuck is all you need. The kind of sex where you don't even care if you orgasm. Chase pulls out at the last second, and he starts jerking himself onto my back. Before he releases, I drop down to finish him off with my mouth. I wait until he is finished, then resume sucking him, pushing his cum out and back onto his cock. \n\nTwenty minutes later I am dressed in work clothes like a professional, and not like a woman who just sucked the cum out of my boyfriend's dick. \n\n- \n\nMy inbox is already full when I arrive at my desk for the larceny cases of the day. Let's see what I have to deal with today. \n\nOne purse snatcher. Three burglaries. One report of Identity Fraud. \n\nI open the purse snatcher case and start with the woman's initial interview with the patrol officer she managed to flag down. Described a black male - she's elderly so her language was more colorful - with a shaved bald head in a white hoody. I'm sure we'll crack this case by lunch. Sarcasm. \n\nBurglary where a home entertainment system was reported stolen. Damage on the door suggests the suspects pried it open with a crowbar or similar object. No home security system. Neighbors on both sides were not home. There is a conspicuous boot print left on the carpet, but not much to go off. \n\n\"Morning Hill,\" I hear a voice say. Sergeant Frank Blanchard sits at his desk next to mine with a cup of coffee in his hand. \n\nSergeant Blanchard looks the part of a detective. Business casual wardrobe with long but presentable blond hair and some stubble. He's been on the force longer than anyone in the department, including the lieutenant. I am two inches taller than him without heels. \n\nLooking the part, is completely different than acting the part. He is a tired lifer who is coasting to retirement in a few months. Every chance he has to give me his work, he takes. He always has some important Sergeant stuff to do. I know he's full of shit, because I get to go home to a Sergeant who tells me how full of shit he is. And he's my partner and supervisor. Fuck my life. \n\n\"Morning,\" I say politely. \n\n\"Anything good?\" he asks. \n\n\"Nope. Normal stuff,\" I say. \n\n\"Let's have a look,\" he says and pulls a file off his desk. \"This guy done fucked up.\" What adult talks like that? \n\n\"How?\" I ask, though I really don't care. \n\n\"Numb nuts thought it would be a great idea to avoid a registration tag expiration by stealing someone else's license plate. That's a new one,\" he says, and I actually laugh a little. \"Turns out the guy he stole it from, had warrants out for parking tickets. Fucking morons.\" \n\n\"He in custody?\" I ask. \n\n\"Third precinct has him. You just came from three, right?\" he asks. \n\n\"Second,\" I reply. For the hundredth time. This guy never listens. \n\nThe city has four precincts and HQ that split the city into five zones. Division of Investigations is located at HQ, except a special drug task force of Narcotics at Precinct One. Word around had it Chief Whitaker is going to merge Violent Crime, Homicide, and Missing Persons all into a single entity and give them the entire sixth floor and move narcotics to the fifth. The other Precincts are patrol hubs and local lock ups. \n\n\"I'm going to head down and interview him. I got a feeling this guy is trying to hide more than just an expired tag,\" he says and stands up again. See what I mean about he has some Sergeant stuff to do? He will kick the can in three, two, one. \"If you got some spare time after your pile, you mind hitting mine?\" Called it. \n\n\"Sure thing,\" I say, and he leaves without another word. Fuck my life. \n\nI finish the second case on my desk and then look at his. Before I open the next one, an email dings in my inbox. Turning to the computer, I see it isn't my main work laptop. It's the other computer for fraud. \n\nWe have a separate system for fraud so if we're fishing a scammer, we don't compromise our servers. That email went off. I roll my chair over to it and see the possible scammer has replied. It is an IRS scammer I've been trying to get for the last week. I don't recall the IRS ever collecting taxes through gift cards and Western Union. I cannot believe anyone ever falls for this. \n\nI have said I would send the money through a Western Union near my location, then sent them an email with a link to the location. The link also traces their IP address if they're dumb enough to click on it. They usually are. I have done this dozens of times, and most of the scammers I get are from Nigeria or somewhere else in Africa. I then wrap this up into a report and submit it to the FBI, Secret Service, and IRS, who then do nothing with it. \n\n\"Blanchard?\" Lieutenant Paula Northam asks from her door. \"Where the fuck did he go?\" \n\nLieutenant Northam is the polar opposite of Blanchard. A female career fast tracker who was promoted to Lieutenant before he even made Sergeant. Has been on the force for seventeen years and is not slowing down. Tall and attractive, with a reputation of dating a few people, but no one assumes she slept her way up. \n\n\"Talk to a guy who got rolled up for stealing a license plate,\" I answer, and she doesn't know what to make of that. \n\n\"Why?\" Paula asks. \n\n\"Thinks he's hiding something else,\" I say, and she just slowly shakes her head. \n\n\"I'll deal with him later. You up for an Arson?\" she asks. You're damn right I am. \n\n\"Yes ma'am,\" I say, and she smiles with a nod. \n\n\"Start heading out. I'll text you the address by the time you get to your car,\" she says, and I send the email from the fraud laptop before grabbing my jacket off my chair. \n\nMy phone alerts me of a message when I leave the elevator at the parking garage. Looks like I'm going back to zone three as well. \n\n- \n\nFriday - May 15, 2026 \n\n-Shane Watts- \n\nIt's seven in the morning, and it is finally looking like we've gotten this fire out. We received the emergency call at about two in the morning and have been fighting it for five hours. It started on the first floor of a two-story duplex apartment complex with four units, two per floor. It burned out the entirety of the lower level, and the fire spread to the second level so fast it collapsed the ceiling within two hours. The couple upstairs evacuated before the collapse. We assume there is one fatality on the first floor. \n\nSitting on the bumper of the ambulance is a mother and her son. I haven't had any time to talk to them yet, but now that the fire is out, I can. I have a little time before a structural engineer can give us the green light to enter. \n\n\"Ma'am,\" I say, and she looks up at me. \"I'm Lieutenant Watts, I need to ask you a few questions.\" \n\n\"Okay,\" she says, and sniffs a little. Every time I looked over for the last few hours she had been crying. Her initial statement was that her grandmother was in the apartment and is likely dead. \n\n\"What is your name?\" I ask, and I see one of my firemen ready to transcribe the conversation. \n\n\"Kimberly Drew,\" she replies. \"My son is Jacob Drew.\" \n\nKimberly is cute and chubby with full cheeks and bobbed dark hair. Her son is similarly plump with blond hair. \n\n\"Was this building your residence?\" I ask. \n\n\"Yes,\" she replies. \"My grandmother rented it and we lived with her. I went through a nasty breakup and we moved in about a year ago.\" \n\n\"Was your grandmother in the apartment?\" I ask, and she nods, and starts crying again. The boy does not seem to be crying at all. He is emotionally vacant like he is in shock, or he simply does not understand what is going on. \n\n\"What was your grandmother's name?\" I ask. \n\n\"Micah Xavier,\" she replies. \n\n\"About what time did the fire start?\" I ask. \n\n\"I don't know, I was still asleep when it started. The fire had already consumed the entire living room and she was still on her chair. I could...fu...\" she starts to say then looks at her son. \"...freaking smell burnt flesh. It smelled like burnt hair.\" \n\n\"About what time?\" I ask. \n\n\"Two in the morning.\" \n\n\"How did you wake up?\" I ask. \n\n\"I heard a loud banging sound, almost like a gunshot or a small explosion,\" she explains. \n\n\"Is that when you called in the emergency?\" I ask. \n\n\"Not yet, I ran to see what it was and saw the fire in the living room. The heat was so intense I couldn't get through the hall. We had to escape through my son's window. I went to check on the neighbors, but Glenn was already outside because he was smoking. He then got his wife out while I called,\" she says. \n\n\"To confirm, Glenn is the neighbor upstairs?\" \n\n\"Yes, and his wife Marisa. Reynolds.\" \n\n\"What did the fire look like?\" I ask. \n\n\"It, looked like fire. I don't really understand the question.\" \n\n\"Fire has a behavior. Did different parts of the room look more engulfed than the others? Was the smoke black, white, or smokeless? Was the fire red, yellow, orange, blue, or some combination? Were there prominent smells?\" \n\nKimberly looks unsure of how to answer, but also like she is trying to remember. She likely just tried getting out of the apartment as fast as possible with her son. \n\n\"I don't really know. I wasn't gawking at it, I was just trying to get my son to safety,\" she explains, and I nod. \n\nI will not be able to poke holes in her story until after a walk through, and I will not be able to do that without a structural engineer's approval. That team is already hard at work, so I should be able to get a walk through within the hour. I give permission for the two of them to leave for the hospital. \n\nStanding near the ambulance with a separate blanket for both were a man and woman. The upstairs neighbors I assume. \n\nGlenn Reynolds is a solid foot over his wife Marisa, but instead of using his stature to support and comfort her, they're distant. Trouble at home perhaps? Marisa pushes his hand away or moves every time he tries to touch her. They're dressed completely opposite as well. Glenn is fully dressed like he was going somewhere, and Marisa is wearing an oversized t-shirt - likely her husband's - and shorts. \n\n\"You two the Reynolds?\" I ask, and they both nod. \"Could you answer a few questions?\" \n\n\"Really? Right now?\" Marisa asks, then scoffs and turns away from me. \n\n\"Yeah, sure,\" Glenn says, Marisa huffing at him. \n\n\"Where were you when the fire started?\" \n\n\"I was outside, smoking, just about to leave for work actually. I own a farm and...not important. I was about to leave when I saw the light illuminating from Kim's window. I thought it was a light at first, like, you know, a lamp. But then it was, like, flickering. Then I heard a pop, really loud, from inside.\" \n\n\"A pop?\" I ask. \n\n\"Yeah, like,\" he says, and claps his hands loudly and makes a similar sound with his mouth at the same time. \n\n\"What did the fire look like?\" I ask. \n\n\"It looked like fire,\" he says, though it sounded like a question. \n\n\"Was it bright? Was it more yellow, orange, red, blue,\" I explain. \n\n\"Yellowish orange, really bright,\" he says. \"I saw that and went to check on Kim and Jake. They climbed out of a window to escape. I then got my wife who was still sleeping.\" \n\n\"Lieutenant Watts?\" I hear a voice ask me, and I turn to see a woman with a detective's shied clipped to the front of her belt. She holsters her weapon on her right leg unlike the hip or shoulder holster I usually see. Dark hair with professional clothes and demeanor. Tight body and large bust, the top buttons of her blouse screaming for mercy. \n\n\"That's me,\" I say, and she offers a handshake. \n\n\"Detective Hill, Property Crimes. Any indication this is an arson?\" she asks, and I shake my head. \n\n\"Haven't done a walk through yet. The family who lived there just left via ambulance to the hospital,\" I say, and she turns to the building. \n\n\"That fire looks out,\" she says, almost confused as to why I have not entered yet. \n\n\"Still need the all clear from an engineer,\" I say, and she nods in understand. \n\n\"Sir,\" I finally hear our engineer say. \"Structure is clear for entry.\" \n\n\"Let's have a look. Detective, this is a potential crime scene, treat it like one. Protective gear, don't touch anything, you get it,\" I say to not insult her intelligence. \n\n\"How do we start?\" she asks. \n\n\"First, perimeter,\" I say, and start at the front of the building. I have one of the firemen follow us with a camera to record the initial investigation. We have one job right now, which is to determine if this is an arson. If we have evidence to believe it is an arson, we call the State Fire Deputy who sends an investigator. \n\n\"Lieutenant Shane Watts, fire station two, beginning initial evaluation of property fire at building one-three-one-five, Lakeview Street. Date, May Fifteenth of twenty-twenty-six. Time zero eight ten. Recording the walk through is Fireman Second Grade Parker Michaels. We are joined by Detective Hill from property crimes.\" \n\n\"Just Lauren,\" she says, and I smile at her. \n\n\"Examining the entrance of the structure. Two story apartment complex with four units, two per floor, top floor directly over bottom. Entrance is on the southern end of the structure. Living room window still intact, but there is visible warping of the glass although it is not consistent, suggesting different levels of temperature. Also, indications of fractures on the glass, possibly from the small explosion the resident claims to have heard. First indication of arson. Front door closed and no scorch marks or smoke damage. Heat was primarily focused in the living room and moving further into the apartment. Less consumable fuels likely cause, will evaluate after external investigation.\" \n\nI walk around the side of the building and address that I do not see any indications of fire and move to the back. A window is closed with no indications of damage. On the last side, there is an open window with minor smoke damage. The window is under the stairs that lead to the second-floor units. \n\n\"No scorching from the back windows, suggesting fire was focused in the living room. Continuing exterior walk.\" I walk around the other side and annotate no damage. I then go to the second floor and evaluate the upstairs neighbor's apartment exterior. \"Smoke above open door frame, no scorching. No warping on the window. Fire was primarily on first floor. Ruling out second floor as origin of the fire. Proceeding to enter first floor apartment from the southern and front entrance.\" \n\nI return to the first floor with Lauren. I ensure we are wearing masks, gloves, and over boots before we enter. I direct her on where she should not step. \n\n\"How do you investigate fires? We very briefly go over it on our end and are told to primarily rely on you guys,\" Lauren asks. \n\n\"Start from the least damaged parts, and work your way in toward the middle,\" I reply and step through the front door. There is a small wall to the right of the door between the living room and hallway. I cite this as a possible reason as to why the fire damage was minimal toward the door and no scorch marks. Much of the carpet in the hallway looks surprisingly intact, suggesting it did not spread that far and was mostly in the living room. It could be an electrical fire in the living room. \n\nI pass the wall and look toward the living room, and see it is completely gone. This room was so utterly destroyed it collapsed the ceiling to the second floor, so another massive pile of burnt junk is everywhere. The fire in here was intense, but it did not spread to the rest of the floor. The carpet alone was not adequate fuel. The first few feet beyond the hall is burnt, but nothing after that. The carpet might be fire retardant. \n\n\"Recommend determination if carpet has an aluminum hydroxide or similar fire-retardant solution. This additive could have prevented spread,\" I say and move further down the hall. Bathroom door was shut, and I see indications the smoke seeped under the door, but no burn damage. I see the same for the two rooms. Both doors were left open, but the door to the son's room indicates the window was open which allowed ventilation. This might be the only reason the fire did not die faster because it had a supply of oxygen. The son's room is on the west side of the apartment next to the bathroom, and the mother's is on the North. The mother's room has more smoke damage because her window was shut. \n\nI annotate the lack of fire damage for the rooms and then proceed with Lauren to the living room and kitchen area. The first few linoleum tiles of the kitchen had begun to curl and melt, but stopped two tiles in. The wood of the counters is burned only on the side facing the living room, and the char damage did not burn through the wood. All the plastic Tupperware in the cabinets had melted into their neatly stacked selves. Nothing in the kitchen suggests it started here either. \n\n\"All other areas of the structure do not have indications of origin, beginning evaluation of living space,\" I say and start looking at the living room with full attention. \n\n\"The fire was intense enough to cause structural instability of the upper floor which led to collapse. However, there is no apparent adequate fuel source within the living room. Carpet is likely fire retardant. Cabinets likely have a fire-retardant staining with material already having a high flash point,\" I say, and step around debris from the collapse. It looks like the living room from above fell in. I see normal living room furniture sprawled around and burned at different rates if at all. It looks like part of the fire could have even been smothered by the collapse. \n\n\"Fire was intense, but isolated,\" I say, and start trying to find the true floor of the room. I see clear indications of heavier scorching in certain areas of the room, and I can see residual scorching that looked crispy. Like someone took a sponge, covered it in soot and spackled it around the walls. This doesn't look like an explosion, more like a short-lived flash fire. If the ceiling did not collapse, it likely would have snuffed itself out. ",
        "I can also make out a faint smell even over my mask. It is almost fruity. Acetone? Ethyl Acetate? Not many flammable substances smell like this. \n\n\"Found the body,\" I hear Lauren say, and turn to see her in a crouched position looking through some debris. \"She didn't have a chance. It's like she melted into the chair,\" I hear her mumble under her mask. The protective goggles are magnifying her eyes, so she looks like an anime character. \n\n\"I've got enough to make the call, let's head outside,\" I say, and Lauren follows me out. We dress down our protective gear and I pull out my phone to call Chief Oleander. \n\n\"Sir, it's me,\" I say once he answers, and he asks the status. \"The fire is out, and the structure is sound for entry. Did the initial walk through, plenty of evidence suggesting arson,\" I explain, and he says he is calling the State Fire Marshal's office to send an investigator. \"How long till they arrive?\" About an hour I am told. \n\nI end the conversation and look at Detective Hill. \n\n\"A fire investigator is in route and they could be here in about an hour. We'll contain the scene for now. You gonna wait around?\" I ask, and she thinks for a moment. \n\n\"I think I'll start doing some interviews,\" Lauren says, and I nod in agreement. \n\n\"Okay, I'll keep things here tight until the investigator arrives. You got a card or something if I need to reach you?\" I ask, and sure enough she pulls out a business card with her information on it. \"I'll keep you informed.\" \n\n- \n\nFriday - May 15, 2026 \n\n-Chase Kramner- \n\nI ran through the information I obtained on Marlene and presented it to the assistant DA Daniel Huddleston. He looks through the documentation quietly for nearly thirty minutes, stopping to only ask an occasional question. \n\nDaniel Huddleston's office is not like most of the other DA offices I have been in and out of for nearly a decade. In those, you can see the clear evidence of someone overworked with piles of folders and boxes of legal files festooned throughout the space. While he certainly has a lot of files, his space is organized and deliberately easy to walk through. Against his wall under the windows are notes taped to the glass with words like violent crime, narcotics, sexual crime, and under those notes are those respective cases. \n\nBehind his desk and on it is memorabilia from his time in the Marine Corps as a JAG officer. His coffee mug has the words Semper Fi, Latin for Always Faithful, and the motto of the Corps. \n\nDaniel kept his Marine Corps high and tight haircut. He clearly shops at Men Big and Tall, but not for the reason most men who shop there do. He is big and bulky, slight gut from age, but not someone anyone in their right mind wants to get in a fight with. \n\nAfter Daniel looks over the documents, he removes his glass and places them on his desktop. \n\n\"It's weak,\" Daniel says to give me his initial assessment. \n\n\"You have to admit it's suspicious,\" I say, and he crosses his arms as he leans back into his chair. \n\n\"It is, don't get me wrong. You were on the legal track in college, right?\" he asks, and I nod. \"Tell me how this sounds to a jury. A police officer who is the ex-boyfriend of the accused found evidence, over a year later. The evidence itself, is not inculpatory, and purely circumstantial.\" \n\nHe is right of course. He has been doing this for twenty-two years in the Marines and for another fifteen years from that desk. I was only accepted to law school. \n\n\"That's not even including the fact we'd need to extradite her to this state. She will file a writ of habeas corpus, and there is no judge in this country who would dismiss it,\" he adds. He is right. \n\n\"Is it strong enough for a warrant, here?\" I ask, pointing down, referring to this jurisdiction. \n\n\"Depends on what judge you put it in front of. Rook will shoot it down. She's the most cooperative with police when the paperwork is good, but if you don't do your homework, she's a firm fourth amendment judge. So is Gilreath, unless it is narcotics related, he'll sign just about anything. You and I both know if you get shot down by one judge and go to another, you'll burn both. Judges don't like that mommy and daddy bullshit.\" \n\n\"What do we need to find to make this stronger?\" I ask. \n\n\"I'm not going to tell you what to find. You should already know. Find evidence,\" he says, and I feel my hand start to shake a little. \"Pull back open all of the evidence of the case. You have access to phone records from the accused and Ms. Hopkins. You have the court documents from the sexual criminal complaint in Indiana. Interview the cooperating witnesses again. At least the one who is still alive. Get statements from the other people in the video. Simply put, do your job.\" \n\nThis is what it feels like to have someone smarter than me tell me how to do something. I really need to be more conscious of my tone if I sound like this to people. Even if he is right, which he is. \n\n\"Most importantly, have someone else do it. Not your old partner, there isn't enough separation there. Someone else in homicide, namely someone who was not there when this case was being investigated. You recused yourself, remember that. One thing for sure, be ready to take the stand. We'll try our best to keep you off a witness list, but it's unlikely that will fly considering you found this evidence and your past relationship with the accused. Without you testifying, it's hearsay. How many times have you been in court?\" \n\n\"Seventeen,\" I say, and he thinks for a moment. \"I'm ready for a trial.\" \n\n\"Are you?\" he asks. \"This will not be remotely the same. The defense will poke and prod everything about you and your relationship to her. If you ever raised your voice to her. If you said something negative about her to a coworker. Your work performance. Every case you've ever handled will be scrutinized.\" \n\n\"I understand that,\" I say, and he puts his glasses back on. \n\n\"You got someone in homicide who can take this over?\" he asks. \"Not your former partner.\" \n\n\"The only person I know who wasn't there during this case is Midge Appletree,\" I reply, and he starts looking for her in his computer. \n\n\"This everything you have?\" he asks, gesturing toward the documents I gave him. I nod to confirm it is. \"You got copies?\" I nod. \"I'll keep these and have my aid make a copy for Detective Appletree and forward them to him.\" \n\n\"Her. Midge,\" I say, and he corrects himself. \n\n\"I thought you said Mitch, my bad. I'll get these to her. Step one is getting the case reopened. If we find more evidence, we get warrants. With those we can make the case for arrest and extradition to this state. We might put it in front of a Grand Jury to pad that order out. We might not even see her in front of a jury for a year. This will not be a fast process.\" \n\n\"I know that,\" I say, and he calls in his assistant to start making copies. \n\n\"You have one job right now, do you know what that is?\" \n\n\"Stay the hell out of the way?\" I ask, and he nods. \n\n\"Good,\" he says and starts repackaging the files. \"Go to work. You won't hear from me, keep your distance.\" \n\n\"Okay,\" I say and stand up from the chair. \"Thanks for hearing me out.\" \n\n\"Give me a case I can win,\" he says, and we shake hands before I leave. \n\n- \n\nFriday - May 15, 2026 \n\n-Sheryl House- \n\nI exit my vehicle a block down from a burned-out apartment complex where a group of firemen and police are still keeping the scene secure. At the edge of the tape an officer is keeping a crime scene log and I check myself in with my credentials. I don't like how many people are here, it increases the amount of scene contamination, but the Lieutenant on site does seem to be maintaining a cordon away from the primary scene. \n\nI was told my POC was Lieutenant Shane Watts. I ask the first person I see for him, and I am pointed in his direction. He is a tall, muscular man with short cropped hair with his fire jacket off but the overalls still on. Squared jaw with a cleft chin, and a shaven face. \n\n\"Lieutenant?\" I ask, and he confirms he is. \"Fire Investigator Sheryl House.\" \n\n\"Thanks for coming,\" he says, and I gesture toward the building. We start walking and I adjust my service weapon a little. Little known fact, State Fire Investigators are not much different from criminal investigators. We're just more specialized. Unlike a fireman, I have arrest authority, thus I have a gun and handcuffs. \n\n\"What evidence did you find on your walkthrough?\" I ask. \n\n\"Warping on the front window from the inside, uneven with a multiple V patterns. Uneven scorch patterns on the carpet, which appears fire resistant. Likely a clear burning accelerant. Parts smelled almost fruity,\" he says. \n\n\"Citrus like?\" \n\n\"More like a pear. I'm thinking acetone or ethyl acetate. Nail polish remover or a paint thinner,\" he says, and I concur. \n\n\"Fatalities?\" I ask. \n\n\"So far, just one. ME's office got the body about twenty minutes ago. All actions were recorded and documented,\" he says, and I ask to see that footage when we're done here. \n\n\"How many people have been in the building?\" I ask. \n\n\"A police detective, my recorder, two people from the ME's staff, and myself. That's it,\" he says, and I thank him for keeping it under control. \n\n\"How did the fire respond when you were putting it out?\" I ask. \n\n\"Normal procedure was ineffective. That made me assume a fire fueled by a chemical additive, so sprayed the exteriors to contain spread. It mostly burned itself out in a few hours,\" he replies. \n\n\"Quick, short lived accelerant?\" I ask and he nods. \"Intense heat. Consistent with acetone or ethyl acetate.\" \n\n\"The occupant said she heard a small explosion, but the windows held out if that was the case. I really doubt this building has windows that strong. Not in this neighborhood.\" \n\n\"Back draft?\" \n\n\"Not that we saw. It was strong enough to weaken the ceiling and collapse the second floor though,\" he says as we get to the door. \n\n\"Vents on ceiling for central air?\" \n\n\"Couldn't tell you, seeing how the ceiling is on the floor,\" he says, and I make mental note to get a schematic of the building. \n\n\"Points of origin?\" I ask. \n\n\"Waiting for your word to start clearing out the debris so we can focus on that. Burn pattern was inconsistent, but the most damage I saw when reviewing the footage waiting for you was directly above the chair where the body was. The heaviest scorching was on the part of the ceiling that didn't fall above it.\" \n\nI do my walkthrough and annotate everything while listening as he points things out. I'm surprised he isn't an investigator, because he knows his way around a fire scene. I open a few more cabinets and see several of the dishes and cups, but none of them had shattered from the concussion. I am beginning to think something sounded like an explosion but wasn't an explosion. There isn't nearly enough structural damage to assume that, and I can tell Shane is skeptical too. \n\nI see a curtain rod on the ground near the windows, warped and bent, and see anchor points on the sides of the window. The curtain is entirely burnt up, but I see a scorch pattern radiating from the chair to the window. I'll know more after we gut this place and tear up the carpet. I make a mental note to tear up a part of the carpet that was away from the fire for a baseline. \n\n\"Let's start clearing it out,\" I say to Shane after we leave. I remove my gear and adjust my hair to my shoulders again. \"Definite arson. ME will give us more insight on manslaughter or murder. Do you got a warehouse or a space for me to build a replica?\" \n\n\"How big do you need?\" he asks. \n\n\"A larger conference room will work, and maybe an outdoor workspace for controlled test fires,\" I add, and he nods. \n\n\"We don't, our station is pretty lived in. I got a friend in the police who should be able to find you a workspace. How many people do you need to help?\" he asks. \n\n\"Two or three. Does your police department have an organic CSI lab?\" \n\n\"Yes, and one of the best teams you'll see. I happen to have her card,\" he says and hands me a card after digging through his wallet a little. \"Jill Whitaker. Her staff will be glad to help.\" \n\n\"Good to know,\" I say, making a mental note to call this Jill Whitaker right after I'm done here. \"Who at the police do I call to get a space?\" \n\n\"Midge Appletree,\" he replies, and recalls her number from memory. Men only remember a number for one reason. They're an item, or they were. \"Detective.\" \n\n\"Thanks. Let's start clearing it out and I'll call Jill. Keep a log, photograph all items, you know what you're doing,\" I say and start walking away. I hear Shane start rallying his team and I dial Jill's number into my phone. I try her desk phone and receive an answer. \n\n\"CSI lab, Chief Whitaker,\" a woman replies. \n\n\"Hey Chief Whitaker, this is Sheryl House from the Fire Marshall's office, how are you doing today?\" I ask. \n\n\"This about that fire on Lakeview?\" Jill asks. She has likely already prepped her team to be on standby. My kind of woman. \n\n\"Nothing gets passed you, huh?\" I ask with a small laugh that she returns. \"Sure is. We could use a few extra hands and a lab. You got some people to spare?\" \n\n\"I told my girl Frankie to get some coffee a few blocks away and be ready, she's in spitting distance. She can be there in a few minutes,\" she explains. Goddamn I love this woman. Gives her staff a good long coffee break, but in position expecting our call. \n\n\"That would be great? You got HCA in that lab?\" \n\n\"I got HCA, LDA, chromatographic analysis. If there is a chemical there, we'll find it,\" Jill says, and I am beaming with excitement. A good lab is often too much to ask for. \n\n\"You or your staff got experience in building replicas?\" I ask. \n\n\"Not for a fire, but we're always up for learning something new,\" she says. \n\n\"Good to hear. Get ready to drink from a fire hose. No pun intended,\" I say, and she laughs, then lets me know Frankie would be on her way in just a few minutes. \n\n- \n\nSaturday - May 16, 2026 \n\n-Lauren Hill- \n\nThe ME report for the dead body at the fire from yesterday has interesting news this morning. There was no smoke in her lungs, so she did not die from smoke inhalation. In her nostrils, he found traces of burnt fabric. A synthetic blend of polyester and cotton, which can be found on a pillowcase. Some traces were in her mouth as well, better preserved. She was smothered to death before the fire started. This was an arson meant to hide a murder. \n\nI hand the case off to William Kaiser in homicide and give him my statement by lunch before I proceed back to my normal duties. Frank is already at his desk when I get back from my debriefing with Homicide. \n\nIn theory I should be off today as I'm off weekend rotation, but I came back to see if the scammer had replied to my email. Frank is digging through the files I couldn't get to because of the arson case and looks up at me when I enter the office.  \n\n\"How'd that arson go?\" he asks. \n\n\"Arson to cover up a murder, by the looks of it. Not our case anymore,\" I say and have a seat, booting up both of my computers. \"How'd that stolen license plate go?\" \n\n\"Gut instinct panned out. Got his vehicle searched and found about ten kilos hidden in the seats,\" he says, and I look over at him. \"What made me curious was that the license plate he stole, was from the same model of car, it shows some well-considered intent. Like your arson case, Narcotics has it.\" \n\n\"Damn,\" I say, truly impressed. Lazy, but his instincts are still solid. \n\n\"Why are you here? You're off, aren't you?\" he asks. \n\n\"Just wanted to check on something before I head home,\" I say and my computer finishes starting up. I log in and open my email, to see that the idiot had indeed hit the link. His IP address put him in...the city. \"Holy shit.\" \n\n\"What?\" \n\n\"This scammer I've been phishing, he's in the city,\" I say, and turn the computer to him. \"I did the IP retrace on him, and he's in the city.\" \n\n\"That's a first,\" he says, looking at it himself. \n\n\"What do we do now?\" I ask. I never imagined we'd get someone in the country let alone our own jurisdiction. \n\n\"Does he know you're in the city?\" he asks, and I nod. \"What kind of scam is he doing?\" \n\n\"IRS scam,\" I say, and he asks for particulars. \"Claims to be an IRS collections agent and that my social security number has been used to fraudulently open credit cards in several states, and I'm liable for roughly a few hundred thousand. My assets are frozen apparently unless I pay a fine of a few thousand.\" \n\n\"Amateur,\" he says shaking his head. \"That's not even a felony if it was true. IRS wouldn't give a flying fuck.\" \n\n\"I know that, but an elderly victim or someone ignorant wouldn't, that's who these things target. How do we reel this guy in?\" I ask. \n\n\"He clearly isn't using a VPN,\" he says, and I nod, \"Which means he likely isn't careful with masking the metadata of his emails. He's tech literate, but not tech savvy. Do your due diligence and confer with legal first, you'll likely need a warrant to really dig into that. While you're waiting for that, get him to agree to a change of payment method. See if a direct deposit is possible, a transaction we can actually trace. I doubt he'd go for it, but try anyway.\" \n\nFrank is lazy. Very lazy. He is an old, tired detective, just waiting to sign his retirement paperwork. But he is not stupid, his spark is still there. When he wants to be, he is still a detective. He just doesn't want to be one all that often. \n\n\"I'll send that email right now,\" I say and get to work. \n\n- \n\nSaturday - May 16, 2026 \n\n-William Kaiser- \n\nJust when I planned on enjoying a lovely weekend with Abigail and Ursula, I get a call that the arson yesterday was used to cover up a murder. Midge is wrapped up in a different case right now with Officer Graham, so I have to come into the office to do an official transfer of responsibility with Lauren. \n\nSeeing how hard she has worked to get her shield, it's nice to see her tackling a case like this. Granted she didn't have to do a whole lot because the fire department makes the arson call, but she gets to go out and acquire some case time. \n\nLauren and I meet in the conference room on the second floor so she can hand off her notes from her interview with me. She told me she forwarded via email the fire department's recording of their initial walkthrough and the ME report is already in my inbox. \n\n\"What was the disposition of...\" I ask Lauren while looking through her notes. \"Kimberly Drew when you interviewed her?\" \n\n\"Kind of in shock. Emotional,\" she says. \n\n\"Did it look like a put on?\" I ask and she shakes her head. \n\n\"No. Very shaky, stammering, hard for her to put thoughts to words. Almost erratic,\" she says, and I write that down. \n\n\"What about the kid?\" \n\n\"Distant, vacant, easily distracted. He spent most of our conversation on his mother's phone. I think he might be special needs, but I didn't broach it with the parent. Felt inappropriate,\" she says, and I tap my pen on the paper. \n\n\"Lauren,\" I say, and she looks at me intently. \"You believed the boy may have been special needs, but left the room without confirming that?\" She seems to understand that was a mistake, and she nods slowly. \"I understand you don't want to be aggressive to people after a tragedy, but there are tactful ways to ask the question. Ask to speak without the child present, use euphemisms.\" \n\n\"I should have thought about that, I'm sorry,\" she says. \n\n\"Don't apologize, just learn. You're still new, you can still use that as an alibi,\" I say with a smile that she returns. \n\n\"Thanks Will,\" she says. \n\n\"Smothered with a pillow is what the ME is saying. Arson to hide the murder. I think I got enough to work with on the material evidence side of this. Did you interview the upstairs neighbors?\" ",
        "\"I did, but no other neighbors were there. Unit one is vacant, and the other neighbor is on vacation, I already confirmed his whereabouts.\" \n\nI thank her again for the work she has already done, and she leaves to go back to her office. Now it's time to get to work. \n\nI watch the video of the fire department doing their initial walk through and take note of what they're saying. Ethyl acetate or acetone. I type both of those into a Google search and get an idea of what they are and their properties. Highly flammable and common additives in commercial products. Ethyl acetate is so common, it is used as a decaffeinating agent in some teas, but it wouldn't retain its flammability in that mixture. Both have a fruity smell which the fireman pointed out, and the only thing I can find that could have either is nail polish remover. \n\nI do a YouTube search to find a video of it burning. A test is conducted where nail polish remover is poured into a bowl then a lit candle is placed next to it. They are both placed into a box to act as an enclosed space and within minutes the candle ignites the vapor from the nail polish remover even though it never came into contact with the liquid itself. The fire was also short lived and lasted only about forty seconds before exhausting itself. \n\n\"Interesting,\" I say aloud to myself. \n\nThis fire was strong enough to collapse a ceiling, but the primary fuel source burns up extremely fast. Something else is at play here. It sounds more like shoddy craftmanship of the building itself. I need to coordinate investigation priorities with the fire investigator before I start so as to prevent redundant actions. \n\nLauren left me a number in her notes to call Sheryl House. I dial it into my phone and place it to my ear. \n\n\"House,\" a voice replies once it connects. \n\n\"This is Detective Kaiser with homicide,\" I say. \n\n\"I was wondering when I'd hear from you. Where are you right now?\" she asks. \n\n\"At my desk,\" I say. \n\n\"Great. I'm downstairs in your loading dock with Jill Whitaker lighting shit on fire,\" she says, and I laugh a little. \n\n\"I'll be right down,\" I say and hang up. I take the elevator to the first floor and head through the facilities room to go out back to our designated smoking area. The area seems more crowded than usual with uniformed onlookers watching in amusement at Jill and Sheryl starting controlled fires. \n\n\"Weather is perfect. No wind, less environmental variables. I'd much prefer an enclosed space, but it'll do,\" a woman I will assume is Sheryl says to Jill. \n\nSheryl looks to be in her early forties but has aged as well as Jill has. A little chubby, but in a cute minivan mom kind of way. She dresses similarly to Jill with charcoal colored 511 cargo pants and a short-sleeved button-up blouse. Her light brown hair is the only part of her that has aged with silver streaks she feels no obligation to dye. Truthfully speaking, it is a good look for her. \n\n\"What do you guys know so far?\" I ask as I approach. Sheryl turns and offers a handshake when I arrive. \"Detective Kaiser. Will.\" \n\n\"William Kaiser? How often do you get...\" she starts to ask before I let her know, all the damned time. \"I can't say shit. Sheryl House is basically Sherlock Holmes. I think my father was disappointed I wasn't a boy. He named my brother Mycroft.\" \n\n\"Wow, that's...weird,\" I say and she just kind of shrugs. \"What do we have so far?\" \n\n\"We did narrow down the accelerant to acetone from nail polish remover. We found melted plastic containers all around. Whoever it was likely thought they would burn up in the fire. Best thing, we can pull prints. I got Heath working it right now,\" Jill says, looking rather impressed with herself. \n\n\"You can pull prints off of something burned in a fire?\" I ask. \n\n\"It's delicate, but possible. Light smoke, and some of the fire was suppressed in the collapse which preserved a lot more evidence than we thought. With most of the bottles, this wasn't possible. One of them was in the corner of the room where the fire was least intense. Only the half exposed to the fire melted, the half against the floor didn't. I got a nice clean right-hand thumb print,\" Jill says, holding her hand out like she was holding something to demonstrate how it was likely held. \n\n\"Bottles?\" I ask, and they both nod. \n\n\"We found evidence of at least eleven,\" Sheryl says. \n\n\"Sounds like we have a lot to work with,\" I say. \n\n\"We'll run the database for prints. I just need a list of people to check them against, you'd be amazed how broad results can be. So, anyone who entered the house from the investigation side to rule out our own potential contamination and anyone who was a common or recent visitor,\" Jill says and I say I'll start my interview process. \n\nI call the hospital to check if the family is still there, but they have already been discharged and are staying with one of the mother's friends. I call the mother directly and ask if she could come in for an official statement, and she says she could be there within the hour. While I wait, I read over initial evidence that was found and do a quick background check on her as well. \n\nKimberly Drew, age twenty-seven. Never married, no convictions but not unfamiliar with the law. She has been arrested twice in the last five years, but the charges were dropped both times. One of those charges was for domestic assault of her then boyfriend Dean Hoffman, but the case was dismissed because he refused to testify. The other was a first-time drug possession charge was thrown out because the arresting officer didn't arrive at court. I then see the arresting officer was Helga Texada. The court likely didn't want to touch that with a ten foot pole. \n\nKimberly Drew has a son named Jacob Drew whose father is listed as Brent Pascal. Brent Pascal has a record as well, but his is a little more colorful. Aggravated assault, breaking and entering, trespassing, public intoxication, illegal possession of a firearm, a slew of unpaid parking tickets, and was released from county jail about ten months ago for that firearm charge. He's currently on parole. \n\nThe victim in the fire was Micah Xavier, the ninety-two-year-old grandmother of Kimberly and the great grandmother of Jacob. Disabled with limited mobility who was collecting social security checks since the moment she could. Micah was the paternal grandmother from Kimberly's father. Her parents divorced when she was twelve and she took her mother's maiden name of Drew after the divorce. \n\nI am going to submit a warrant for finances, looking for the usual things, like an insurance policy recently purchased. I open my shell document and keep scanning her background check as I type. I then notice something about her employment. Kimberly works at a beauty parlor called Nailed It. The home of a person who works at a nail salon, was burned down with nail polish remover. I don't know if I do, or do not, want her to be that stupid. \n\nI submit the warrant before she arrives, and we occupy one of the small offices for interviews. I have a stacked deck for this conversation, so if she is the perpetrator, it will be easy to get her to confess. I make sure the camera in the top corner of the room is recording before we begin. \n\n\"Is your son with your friend?\" I ask first. She nods and says yes after a moment. This woman is not collected or calm. She arrives emotional, her face still swollen from tears and her body aching from the effort of trying to restrain it. I come close to wanting to rule her out entirely, but that's not how my job works. \n\n\"Has anyone told you that your grandmother was found?\" I ask, and she shakes her head. \"I hate to be the first to let you know that she is indeed dead. She passed away in the fire,\" I say, hiding the fact I know she was already dead. \n\n\"I was too scared to believe that,\" she says, crying, and I move a box of tissues closer to her. \n\n\"I need you to walk me through that night. From the moment you woke up, to the moment emergency services arrived,\" I say, and she nods repeatedly, trying to pull herself together and start talking. \n\n\"Okay...umm...I heard a popping sound,\" she stammers out, and I want to pause here. \n\n\"In your initial statement, you described it more like an explosion or a gunshot,\" I say, and she freezes. \n\n\"I was startled from the sound, whatever it was,\" she says. I notice the retreat to vagueness. \"I left my room to see what it was, and I saw bright light coming from the living room. It was so hot the closer I got I couldn't get all the way to the living room. My instinct was to immediately get Jake out of the apartment,\" she says. \n\n\"Where was Jake?\" I ask. \n\n\"In his room. He was already awake, like the sound had woken him up as well,\" she says, and I wait for her to continue. \"We then got out through his window.\" \n\n\"Was the window already open, or did you open the window?\" I ask, and she tries to think. Is she remembering or trying to lie? \n\n\"I think it was already open,\" she says. Preset escape plan. Works at a nail salon. \n\n\"Is this when you called?\" I ask, and she nods. \"When did you grab your phone?\" \n\n\"What?\" \n\n\"Your phone. Did you grab your phone when you went to investigate the sound, or when you went back to get Jake out of the apartment?\" I ask, and she pauses again. \n\n\"I took the phone with me when I first left my room. I was using the flashlight on it,\" she says, and I want to roll my eyes. \n\n\"Why not just turn on the hallway light?\" I ask. \n\n\"The switch for the light is in the middle of the hallway next to the living room. I usually have to use my flashlight to find it when I go to the bathroom in the middle of the night,\" she says, and I pause this time. That makes a kind of sense. I'll have to look at the schematics of the house or do a walkthrough to determine if that is plausible. Glad I didn't roll my eyes. \n\n\"In your initial statement, you said you warned your neighbors upstairs, then called for help,\" I say, and she nods. \n\n\"Not quite. Glenn was already outside because he smokes, and then he went to get his wife out,\" she says to add detail. \n\n\"When did the fire trucks arrive?\" \n\n\"About five, maybe ten minutes later,\" she says. \n\nThe emergency call came in at 01:53 and first responders arrive at 02:07. Not quite five to ten minutes, but not exactly what I need to be pressing on. \n\n\"Do you know what started the fire?\" I ask, and she shakes her head. \n\n\"No, but, grandma smoked. Like, a lot,\" she says. \"Chain smoker. All she did was watch gameshows and smoke.\" \n\n\"Do you think she could have fallen asleep with a cigarette in her hand?\" I ask, and she shakes her head. \n\n\"No. Before I go to sleep, I make sure she has her oxygen mask on and move her cigarettes. I usually get woken up to put them back in range for her,\" she says, and I find that interesting. She didn't just jump right onto an alternative theory. \n\n\"Could she have gotten up and retrieved them herself?\" I ask. \n\n\"She's mobile enough to go to the bathroom by herself and check the mail, but I don't think she would have. Her oxygen tends to knock her right now,\" she says. That could have been the explosion she heard. The oxygen tank could have exploded. \n\n\"Had anyone been to the apartment recently?\" I ask. \n\n\"A couple of my friends from work. Grandma had a nurse stop by once a week, he would have been there on Wednesday,\" she explains. \n\n\"Names?\" I ask. \n\n\"My friends are Natasha, or Nat, and Ryan,\" she says. \n\n\"First and last.\" \n\n\"Natasha Silva, and Ryan Lopez,\" she adds. \n\n\"The nurse?\" \n\n\"Jerome Alberts,\" she says. \n\n\"Who does he work for?\" I ask. \n\n\"I don't know, her insurance covered him. I've only been there when he was there a few times,\" she explains, and I make notes to look into these people. \n\n\"Where do you all work?\" I ask. \n\n\"A nail salon. Nailed It! Stupid name, but the tips are, decent, I guess,\" she says without any hesitation. Now it's time to start dropping what I know. \n\n\"We have discovered some very concerning things about the fire,\" I begin, and she looks like she's bracing herself. \"It was very likely, an arson.\" It's time to lay on the adverbs thick. \n\n\"An arson? Who would do that?\" she asks. \n\n\"We found a very large concentration of acetone that was used as an accelerant. Do you know what acetone is?\" I ask. \n\n\"Yeah, it's used in nail polish remover,\" she says, and realizes what she just said. \"Am I a suspect?\" \n\n\"Nearly a dozen bottles of nail polish remover were found in the living room,\" I say, and she clams up. \"Our evidence lab has a clean print on one of them.\" \n\n\"I was asleep, I...I didn't do this,\" she says quickly. \n\n\"How many bottles of polish remover did you keep in the apartment?\" I ask. \n\n\"Do I have to talk to you?\" she asks. \n\n\"It helps you if you do,\" I say. \n\n\"Can I have a lawyer?\" she asks. Wow, her personality has changed. \n\n\"I never said you were a suspect, so why do you need a lawyer?\" I ask. \n\n\"What happens to me, if I try to walk out of this room?\" she asks, and I sigh. \n\n\"It's better if you stay.\" \n\n\"For you or for me? Am I in custody?\" she asks, and I finally have to relent, but only because she accidently asked the correct question. \n\n\"You're not in custody,\" I say. And just like that she's gone. I calmly stop the recording and take some notes. \n\nI call Glenn and Marisa Reynolds, the neighbors upstairs but receive an outgoing message after it rings. I leave a message with my information and ask to be called back. \n\n- \n\nI go back to the office and see that Midge is here on her day off with Graham going over some files on her desk. The look I give her must have asked what she was doing here. \n\n\"Working a case. I've been told specifically, to keep you in the cold on it. Sorry,\" she says and now I want to know even more. \"How's the arson?\" \n\n\"Fire was started using acetone-based nail polish remover as an accelerant. The granddaughter of the victim works at a nail salon,\" I say, and her face is incredulous. \n\n\"You gotta be shitting me?\" she asks, and I shake my head. \n\n\"During the interview she stormed off when I dropped that bit of info on her. We also have a clean fingerprint on one of the bottles. I didn't know you could pull prints from a fire,\" I say. \n\n\"I could have told you that. Unlike you, I've worked arsons in property. Also helps that my baby daddy is a fire lieutenant,\" she says with a grin. \n\n\"Did it take?\" I ask and she nods. \n\n\"First, fucking, try,\" she says triumphantly and pumps her hands in celebration. \"I found out this morning. Could be a false positive, but here's hoping.\" \n\n\"I'm looking forward to having a woman pregnant at home, and at work. It's going to be exhausting,\" I tease, and she laughs. \n\n\"On a side note, Graham and I are going to take a road trip. Going on official TDY for travel. Not a field trip though, it's for this investigation,\" Midge says and now I am more curious. A super-secret investigation that I can't know about with paid travel. \n\n\"Why can't I know about this case?\" I ask. \n\n\"You know better than to even ask,\" she says, and I just let it go. \n\n\"Waiting to hear from her lawyer at this point. She's taking the fifth from here out. That's always been suspicious to me,\" I say, and Midge's face transitions somewhat. She looks a little more serious. \n\n\"Why is taking the fifth, suspicious to you?\" she asks. \n\n\"You know why,\" I answer. \n\n\"No, I don't. If down the road Ursula is arrested for anything, guilty or not, I know for a fact you've told her one thing. Get a lawyer and say nothing. That's what I've told Wendy and the boys,\" Midge explains. \"There is a reason even a lawyer gets a lawyer.\" \n\n\"The fifth is a refuge for criminals.\" \n\n\"And the innocent.\" \n\n\"Innocent people don't need it.\" \n\n\"Tell that to the hundreds of proven false confessions. Innocent people have plenty to hide. Give me your cellphone and let me see your search history,\" Midge says, holding her hand out. \"I'm serious. Give me your phone.\" \n\n\"No,\" I say. \n\n\"Why not? You got nothing to hide, right? Nothing embarrassing? No pictures of you and Abigail doing the naughty? A Grindr profile?\" she asks, and I say nothing. \"Let me frame it this way. Is it weird if I call my representative or approach my government for a redress of my grievances? No, right? Because I'm constitutionally afforded that right. I can own a gun as afforded by the second. So why is exercising the fifth the only right you find suspicious?\" \n\nI don't have an articulate response to this. \n\n\"People say dumb things to police, all the time. Often in good faith, but dumb. They like to tell stories, to embellish a little. Doesn't make them guilty. You and I know most criminals are stupid anyway. In my opinion, smart people exercise their rights, because they're smart. Smart people get a lawyer, smart people don't tell people like you and me a thing. I don't find anything suspicious about that, because that's exactly what I would do.\" \n\n\"Do those people work at nail salons and have a house burned down with nail polish remover?\" I ask. \n\n\"Sounds like you don't need a confession if you have the evidence,\" she says, and I try to think. \n\n\"It helps.\" \n\n\"It helps you. Talking to you, doesn't help them,\" she says and stands up from her chair. \"I got bags to pack and travel to arrange. I'll see you when I get back next week. Don't burn the place down when I'm gone.\" \n\nMidge leaves the office and I start looking up Kimberly's co-workers at the nail salon. Natasha Silva, no priors. Ryan Lopez, no priors. I look up Jerome Alberts, parking tickets and prior civil court dismissals for fraud and forgery. Interesting. \n\nThankfully the documents were not sealed, and I start looking them over. You'd be amazed how easy it is to acquire court documents on nearly everything. \n\nJerome Alberts had a lawsuit filed against him for forging a doctor's signature on medication. They couldn't prove it, but the hospital still fired him, and he's been floating around ERs across the state for several years. He's been employed by seven in the past five years alone. \n\n\"Detective, finance warrant is through,\" I hear a voice say as someone from legal drops it into my inbox. I say thanks, and immediately start going through it. I want to know one thing in particular. Who is the beneficiary for the life insurance policy, because I have a feeling there will be one. \n\nMicah Xavier did indeed have a life insurance policy. That was amended two weeks ago, changing her primary beneficiary from her granddaughter Kimberly, to her nurse Jerome Alberts. You stupid mother fucker. \n\nI call down to CSI and get in touch with Heath. \n\n\"CSI, Heath speaking,\" he says. \n\n\"It's Detective Kaiser. You get a print off that bottle?\" I ask. \n\n\"Running the search now. Got about forty hits on it,\" he says. You can get that many hits from a fingerprint? \"I'd get more if I connected with the FBI.\" \n\n\"How do you get that many hits?\" I ask. \n\n\"Angle of touch, force of pressure, material it was left on, lot of factors. The search field finds similarities, not exact matches, because no print will ever fully match the controlled environment of the booking process. Once we have a suspect list, we can start examining certain people.\" \n\n\"Who have you checked?\" I ask. \n\n\"Kimberly Drew is a big no. Still waiting for a list from you.\" \n\n\"Is a Jerome Alberts on that list?\" I ask, and I hear him typing. \n\n\"No, but he has no prints on file. Let me try FBI...nope. US Marshalls...nope,\" he says. \"Is it an assumed name?\" \n\n\"Hold on,\" I say and start looking through his litigation again. \n\n'...the defendant, Jerome Alberts [Legal name at birth Walter Dwyer]...' \n\n\"Try Walter Dwyer,\" I say, and I hear typing. \n\n\"O-R?\" he asks, and I correct him. \"Walter Dwyer has an arrest record in Illinois for practicing nursing with forged documents. Fingerprints popping up now, comparing with those found at the fire, give the computer a sec.\" The next thirty seconds are agonizingly slow. \"He's a possible match, let me take a look myself...oh yeah, that's him.\" ",
        "\"You sure?\" I ask. \n\n\"It'll take me a minute to write it up, but it's him,\" Heath says, and I write that down. \n\n\"Did you guys find an oxygen tank?\" I ask. \n\n\"A small one, but it didn't rupture, it stayed intact in the fire. Frankie was running the inventory evidence portion all day yesterday. They're building a replica of the house on the first floor if you want to see it.\" \n\n\"Which room?\" I ask. \n\n\"Main conference room,\" he replies. I end the call and head downstairs and knock on the door before entering. \n\nThe table of the conference room is pushed up against the wall and the chairs are stacked on top of it. They have taped off dimensions of the home, to scale, with masking tape on the floor. Sheets of paper are on the floor with utilities written on it, with sticky notes labeling their condition after the fire. Labels like smoke damage, fire damage, and everything in between. \n\n\"Weird question,\" I say after Frankie looks up at me. She has two firemen helping her build it, who stop as well. \"Where are the light switches for the hallway?\" \n\n\"We weren't really concerned with that seeing how it wasn't an electrical fire,\" Frankie explains. \n\n\"Humor me,\" I say, and she starts looking at pictures of the home before the fire. \"Where did you get those?\" \n\n\"Open source Facebook posts,\" Frankie says, and I give her a look. \"That I should have forwarded you an hour go. Sorry. Why do you need to know where a light switch is?\" \n\n\"Corroborate a response in her statement,\" I say, and she starts looking. \n\n\"Can't tell, most of the pictures were of the living room,\" she says, and I look at her scrolling through pictures. Then I see something \n\n\"Wait, go back,\" I say, and she does. Then I point something out. \"That's a camera. You find a camera in the house?\" In the corner of the living room was a home security camera mounted to the wall. \n\n\"We're still trying to identify items found, but that's definitely a camera. I don't see a wire running off it, so battery powered,\" Frankie says after looking at it for thirty seconds, zooming in a little. \n\n\"How doesn't the battery drain itself?\" \n\n\"Camera like that is motion or noise activated. It starts recording for like fifteen seconds, maybe twenty. Sends an alert on a phone app that the owner can watch. You could watch it continuously, but that like you said, drains the battery quickly,\" Frankie explains to me. \n\n\"I need a phone warrant,\" I say and leave the model room. \n\n- \n\nSunday - May 17, 2026 \n\n-Shane Watts- \n\nMost of the guys at the station are loafing around, waiting for a call when I hear someone from down the pole say someone was here for me. I leave my office and slide down and am greeted by Sheryl House. \n\n\"Lieutenant,\" she says, holding a clip board and a file under her arm. \"Just coming to give you an update. I have an engineer looking over the materials found to determine if there was an issue with the building itself.\" \n\n\"That could give the police a lot to work with,\" I say, and she smiles. \n\n\"That's work, but I was going to get something to eat tonight, not sure where to go,\" Sheryl says with a grin, and I get her intent immediately. She wants to have dinner with me. \n\n\"I know a few places, want some company?\" I ask, and she nods. \n\n\"That would be great,\" she says, and I see Midge coming in through the bay doors behind her. \n\n\"What's up?\" I ask, and Sheryl turns around. \n\n\"I'm heading out of town for a while, so you don't need to worry about appointments next week,\" she says, and Sheryl looks like she's doing long division. \n\n\"You couldn't call?\" I ask, and she shakes her head with a grin. \n\n\"Wanted this part to be in person. First try!\" she shouts in glee. \n\n\"You serious?\" I ask. \n\n\"Yup, I am fertile as fuck,\" she says, and she hugs me. \"I'll keep you up to date. I'm setting some referrals out during travel.\" \n\n\"Cool, let me know,\" I say, and Midge damn near skips on her way out. I turn back to Sheryl, and she's looking at me like I'm a prick. \"What?\" \n\n\"Seriously?\" she asks. \n\n\"What?\" I ask, confused. \n\n\"Accepting a dinner date, your wife or whatever shows up with news that's she pregnant, and you just keep going like that didn't happen?\" \n\nI guess it did look like that. \n\n\"It's not what it sounded like,\" I try to explain. \n\n\"Is she pregnant with your kid?\" she asks. \n\n\"Yes, but...\" \n\n\"...so what am I missing? You have a ring for fucks sake,\" Sheryl says. \n\n\"What ring?\" I ask, showing her my hand. \n\n\"A lot of firemen wear their rings around their necks, what's on that chain?\" she asks, pointing to my necklace. \n\n\"A ring, but...\" \n\n\"...unbelievable,\" she says and starts walking away. \n\n\"It's not what it looks like,\" I say, jogging after her and getting in front of her. She curves around me and I let her walk without getting in her way. \"You can keep going with this for twenty minutes or give me twenty seconds to explain.\" \n\nSheryl stops, turns around, and stops right in front of me. \n\n\"Better be good,\" Sheryl says. \n\n\"Midge is not my wife, or my girlfriend, or anything like that. She's my best friend, who is in a committed, lesbian marriage with her wife,\" I say, and I see her figure it out on her own in real time. \n\n\"You're her sperm donor?\" she asks, and I nod. \"The ring?\" \n\n\"I was married. Ask why a man keeps a ring if he used to be married,\" I say, and she figures that out too. \n\n\"You're a widower,\" she says, and I nod again. \"I am so sorry. I understand if you don't want to have dinner anymore. I went straight woman logic there.\" \n\n\"It's fine, and I still want to,\" I say, and she slowly smiles. \"Where you staying?\" \n\n\"Holiday Inn downtown, room six-seventeen,\" she says. \n\n\"I'll pick you up at a little after seven,\" I say, and she agrees before leaving. \n\n- \n\nSunday - May 17, 2026 \n\n-Sheryl House- \n\nI have this awful tendency to sleep with men on a first date. One sure fire trick I have learned that helps me keep my will is to masturbate before the date. It calms me down and keeps me from getting too antsy during it. \n\nAt ten minutes to six, I shimmy out of my pants and panties, take off my blouse and remove my bra from under my shirt. I pull out my trusty vibrator and dildo and spread out on the hotel bed for a quick orgasm that should tide me over till the end of the date. My right hand is extended under my right knee, holding the dildo that I begin to slide in and out of my pussy. My left hand is over my left leg and holds the vibrator I place directly on my clit. \n\nI lose my breath as my orgasm comes close and gasp it out a minute later. I remove the dildo to focus on my clit and use my free hand to massage my breasts. The climax washes over my body, and I fall back to the pillow and close my eyes for a moment. A knock on the door wakes me up, and I turn to the alarm clock. I was out for nearly an hour, and it's ten minutes to seven. \n\n\"Give me a minute,\" I say, and start scrambling to get dressed. I feel like I need to explain it, so I pull on a pair of shorts and answer the door. \"Sorry, I kind of fell asleep.\" \n\n\"Not a problem, I'm early,\" Shane says, and I open the door. \n\n\"You can come in for a minute, I'll just change in the bathroom really quick,\" I say and walk to my suitcase to grab a few items. I turn around and see his eyes on the bed, then snap back to me in what looks like embarrassment. I turn to the bed myself and see my dildo and vibrator in full view. \n\n\"It's why I fell asleep,\" I say, and he laughs a little. I'm not even going to put them away. We're adults, fuck it. \n\n\"I get it, travel sucks,\" he says, and I enter the bathroom. \n\n\"I actually like the travel,\" I say, pushing the door nearly shut, but not all the way. I want to see if he peeks. When he doesn't, I don't know if I'm disappointed or happy he appears to be a gentleman. \"Where are you taking us?\" \n\n\"Do you like steak?\" he asks, and I inform him I do. \"A steakhouse I go to once in a while. They age the steaks on Himalayan salt.\" That sounds amazing. \n\nI didn't pack evening wear for this trip because I rarely go out on dates, but I have a feeling Shane doesn't date much either. He's wearing jeans and blazer, so I don't feel pressured to dress up for the night. I feel adequate in jeans and a blouse. I realize I didn't grab a bra, so ask him to grab one from my suitcase. He's not awkward or anything when he returns and hands it through the door to me. The one he grabbed is black with some lace. I don't wear it for the appearance, it just happens to hold my breasts up the best. It is however, the most risqu\u00e9 bra I own. \n\n\"You picked the lacey one I see,\" I say as clasp it behind my back. \n\n\"I got an eye for fashion,\" he says, and I chuckle a little. \n\n\"You got an eye for something, that's for sure,\" I say, and throw the blouse on over it. I leave the bathroom and place on my sandals while Shane is leaning against the wall waiting patiently. \"Ready.\" \n\n- \n\nThe steakhouse is as advertised. The steaks are excellent. It has a country vibe that I always appreciate with a few mounted long horns and the general smell of sawdust. \n\nWe spent the first twenty minutes talking about work. It worked to prime the conversation before we get into something I really want to talk about. Shane so far is professional at work, a gentleman when not at work, cleft chin handsome, genuinely charming, and can hold an intelligent conversation. I want to know more about him. I don't recall the last time I went on a date and I wanted more than a dick. \n\n\"So,\" I begin, preparing myself for the response. \"Earlier you said you were a widower.\" \n\n\"I am,\" he says, his demeanor visibly changing, but not to such a level I considering abandoning the discussion. \n\n\"How long ago?\" I ask. \n\n\"About seven years,\" he says. \n\n\"What was her name?\" I ask. \n\n\"Sierra,\" he says, and I smile. \n\n\"Beautiful name.\" \n\n\"Beautiful woman,\" he says with a smile. The smile fades a little just remembering her, but the smile holds out in the end. \n\n\"I'm sorry. How did she die?\" I ask. I almost didn't ask, but my instincts tell me he is emotionally strong enough to talk about it. \n\n\"Car crash,\" he says. \n\n\"Did you have any kids?\" I ask, and he shakes his head. Then I watch him choke up a little, and for the first time not answer a question verbally. Why that question? Why this reaction when he didn't have kids. Then I realize why. \"She was pregnant.\" \n\nShane nods, picks up a napkin to wipe his mouth, and tries to discretely dry his eyes, but I see everything. I'm an investigator, I notice things for a living. \n\n\"I'm sorry,\" I say for the second time in the last few minutes. \n\n\"Your lesbian friend? Is that for her, or for you?\" I ask. He laughs a little and tries to clean the tears the laughing forces out. \n\n\"Both,\" he says, and I smile. There is a history there, I know it. Not just best friends, there is something else. Something sexual. \n\n\"You two ever tried making a baby the old-fashioned way?\" I ask, and he blushes then awkwardly chuckles. I knew it. \"That's a yes.\" \n\n\"We've never had sex,\" he says, though a little too quick. \n\n\"Depends on what the definition of is, is?\" I ask with my worst Arkansas accent, and he relents. \n\n\"We've done...things,\" he says, and I laugh. He's cute when he's on the defensive. \n\n\"You might not want to let my imagination fill in the gaps,\" I say. \n\n\"We've gone down on each other, more than few times, after my wife died. She helped me through that, I helped her through some shit going on in her life. At one point, I guess it was possible, us being a thing, doing it the old-fashioned way. It just didn't happen that way,\" he says, and I can tell he wants to end that part of the conversation. I want to know the things he helped her get over, but that's not his business to share. I have an idea of what it could be though. \n\nThe table is stuffy for a second, and I'm worried I pressed too much, while giving too little. I need to even the scales out some. \n\n\"Seeing how I've picked apart your past, fair is fair,\" I say to give an invitation to tear into mine. \"What do you want to know?\" \n\n\"Ever married?\" he asks. \n\n\"No.\" \n\n\"Kids?\" \n\n\"Yes. One, but with an asterisk,\" I reply, and his eyebrows raise. \"Long story.\" \n\n\"We have time,\" he says. \"Boy or girl.\" \n\n\"Boy. Julian,\" I reply. \n\n\"How old is he?\" \n\n\"Twenty-two. He's a senior at Northwestern,\" I say, and he looks like he's doing math. I look my age, so he is subtracting twenty-two from it. \"I'm forty-two.\" \n\n\"You had him when you were twenty?\" \n\n\"Right before my sophomore year of college. I spent the back half of freshman year pregnant,\" I say, picking up my wine glass and taking a sip. \n\n\"The asterisk has me intrigued,\" he says, and I sigh into my drink. \n\n\"He's my son, in the sense I gave birth to him. I haven't had any contact with him since he was born,\" I say, and he's quiet. \"Hence the asterisk.\" \n\n\"What happened?\" he asks. \n\n\"I was nineteen. I was dating an older guy, twenty-four. Graduate student. Had his own apartment, his own car, we could fuck loud and anywhere. We fucked a little too much and he fucked a baby right into me. I wasn't ready to be a mother, not then. Not right in the middle of college. I was going to get an abortion, but his father begged me not to. When I say beg, I mean beg. Tears streaming down his face, on his knees, the whole nine yards. I relented, but with conditions. It wouldn't be my baby. It would be his. He was ready to be a dad, and he said he'd take full responsibility, and he did. He asked for nothing in return. I relinquished custody after he was born.\" \n\nShane is trying to process everything I just told him, and it is admittedly a lot to digest. In truth, Shane reminds me of Julian's father Cameron, and even twenty-two years later I hate how it ended. I loved Cameron, I really did. I just think we met each other at the wrong time in our lives. \n\n\"If you have no contact, why do you know where he is?\" I ask. \n\n\"Cameron. His father, for the first few years would send me a picture out of the blue, until I told him to stop. I didn't want to know. It was easier that way,\" I say, and he's too quiet in reply. \"A few years ago, though, I just couldn't not know anymore. I still haven't seen him, but I know how he's doing. He's a computer engineering student.\" \n\n\"It's never too late,\" he says, and I sigh again. \n\n\"It is,\" I say. \n\n\"No...\" \n\n\"...Yes. Twenty-two years is too long,\" I say, and he just blinks. I can't tell if he agrees or not. \"I don't even know how to start that conversation in a healthy way.\" \n\nWe both just look at each other. This conversation has left us stripped bare. There are no secrets, and I don't remember the last time anyone knew this much about me so soon. I can't tell if it's a relief or terrifying. \n\n\"You want to get out here?\" he asks. \n\n\"Depends on what you mean by get out of here,\" I reply. Yes, it is exactly what I think he means. \n\nA conversation like that tends to wind you up, and I am wound. My hand is on his leg as he's driving me back to the hotel and glides up the closer we get. Five minutes after leaving the restaurant, it's directly on his crotch, and five minutes after that it's in his jeans. Luckily the drive was ten minutes because if it had lasted another five minutes, I'd be giving him road head. So much for masturbating to relieve the tension. \n\nI start kissing him hot and heavy in the elevator, but we compose ourselves as it opens and proceed to my room. The door does not shut all the way before we resume where we left off. Only this time the removal of clothing is part of the fun. My blouse comes flying off, and I'm glad he picked the right bra for the occasion. His shirt hits the ground, then he reaches around my body to unhook my bra. The bra lands on the lamp shade as I fall back to the bed with his mouth alternating between my nipples. \n\nI love a man who takes his time. Works on the tits while undoing the belt and pants. Keeps the nipples firm while a hand works the pussy to start getting it moist. Kisses down my body, pulling off the rest and starts kissing the inner legs before going in with the tongue on the clit. Not a half assed tongue lashing either. Shane completely vanishes between my legs until I grunt an orgasm and tell him to come up for air. \n\nAs I lean up, I push him off the bed and to his feet. I undo his belt and his jeans and underwear hit the floor. I direct his dick straight into my mouth, and finger myself as I suck him. I want to finish him off, but I also don't want to take the chance of it ending here. I climb back up the bed and present myself to him. \n\nShane is ready to go and doesn't let a conversation about protection get in his way. He is a guy who knows how to maintain momentum. The only thing better than a long and hard dick, is when it's attached to a hard body. \n\nI don't remember the last time I got fucked this good. His dick has an upward curl to it that rubs the g spot with every thrust. I can't remember the last time I had an orgasm in missionary. After I come, we roll over, and I start riding him hard. He grunts a little, and I pause to see what's up. Shane then reaches under his back and pulls out my dildo. I laugh, and he reaches under again and pulls out the vibrator. \n\n\"I'll take that,\" I say, and start the vibrator on my clit as I grind him. I come again in less than a minute. While I'm exclaiming my satisfaction, he grips my ass cheeks, and rams his dick straight up into me as hard as he can. My body goes numb from his rhythm, and when he stops, I'm quaking. \n\n\"Too hard?\" he asks, and I shake my head. \n\n\"As hard as you want,\" I say. I can handle a dick. \"However you want.\" \n\nShane pulls me off his dick and props me against the side of the bed. He stands next to it, and starts railing me from behind. He when picks up my leg and uses my hips to drill me. I underestimated his mileage. I don't come again, but he flips me over, grabs my legs, and uses them to leverage the hardest fucking yet. I can't stop from screaming, and he stops, but I tell him not to. How long can he go? \n\n\"You getting close?\" I ask when stops to rest for a moment. \n\n\"Not even a tingle,\" he says, and I'm stunned. \n\n\"Maybe slow it down for a minute,\" I relent, and he crawls back into the bed with me. We return to missionary, and he starts kissing me. I don't usually like kissing during sex, but right now it helps the pace. It gives me time to handle the pussy trauma. \n\n\"Deep,\" I say, grabbing the pillow from behind my head, and push him off to slide it under my lower back. \"Give it to me deep.\" \n\nShane inserts himself back in, grabs me at the ankles, and sinks his dick so deep it feels like it's in my stomach. I don't think I can handle deep and hard, but I tell him to try. He's faster, but not the same level of pounding he was giving me earlier. The depth and the curl give me another orgasm. \n\n\"You getting there?\" I ask. \n\n\"I'm getting there,\" he says. \n\nShane is getting there, for another ten minutes and two more orgasms. I'm back on top when he finally says he's close. \n\n\"In me or on me?\" I ask, and he says he has no preference. \"Every man has a preference. You gave me plenty, you earned anything you want.\" \n\nShane hesitates his response, and I push my pussy down on his dick hard. \n\n\"What do you want?\" I ask again. \n\n\"Come inside. After it is all out, you suck me limp,\" he says, and my lips curl into a grin. That's it? \n\n\"I was hoping you would say that,\" I say, and start riding him harder, and when he comes, god damn do I feel it. His dick pulsates, pressing the spot hard, nearly making me come again. When the jizz shoots up, the warm fluid adds to the pleasure and I come once more. He thrusts up to milk himself with me, and the orgasm peaks higher with every spurt. \n\nWhen the pulsations stop, I climb off of him, and put his dick in my mouth. I suck him as he groans, squirms, and clenches. I don't feel his dick getting softer after a minute of sucking him. After another minute, I know his stiffness isn't going anywhere. ",
        "I climb back onto his dick, and resume right where I left off. \n\n\"Ready for a second round?\" I ask. He then rolls me to my back and starts hammering me. \n\nShane stops for a second to ask, \"Are you?\" \n\n- \n\nSunday - May 17, 2026 \n\n-Lauren Hill- \n\nThe scammer refused a direct deposit payment method - no surprise there - so we had to improvise. The Western Union payment will be wired to a different Western Union across town where Frank is posted in wait. I wire the funds and leave, sending a message to the scammer that the money was sent. I then send a message to Frank letting him know too. We had already prearranged with the management of the business that we would be here. You wouldn't know who we were, but we were there. They only asked we arrest the person somewhere else. \n\nI get into my car and get there as fast as I can. In route, Frank calls and says he's following the person who picked up the money. I reroute when he sends me an address. In park next to him and jump cars. \n\n\"What do we got?\" I ask. \n\n\"Adult male, appearing early twenties, dark complexion,\" he says. \n\n\"Is that code for black?\" I ask. \n\n\"Nope. Sounded Indian. India Indian. Accented English,\" he says and ask him to point out the building. \"That one.\" \n\nHe directs my attention to a two-story building, the first floor showing signs for an electronics repair shop. \n\n\"Run the plate?\" I ask, and he presses the space bar to wake up the computer. \"Yosh Patel. Legal resident alien, H1B1 visa that expired last year. You call ICE?\" \n\n\"About to,\" he says, and watches the building a little longer. \n\n\"We going in?\" I ask. \n\n\"Your bust, your call,\" he says. I can't tell if he's avoiding being held responsible for a fuck up, or is letting me take the lead for experience. \n\n\"We don't know how many people are in there. Let's get a few more units here, then we'll move,\" I say, and he nods. \n\n\"Good call. If you said we were marching in their alone I would have called you dumb,\" Frank says and calls in for any nearby units not on any other priority to come here. Sirens off so as not to spook them. Thirty seconds later three men leave, looking around suspiciously. \"Mother fuckers have a police scanner.\" \n\n\"We moving?\" I ask, and they make eye contact with us from across the street. Then they start running. \n\n\"White shirt! Fuck the rest of them!\" Frank says and exits the vehicle quickly. I get out fast and sprint down the street after them. \"Don't split up! Stay on target!\" \n\n\"Police, you are under arrest!\" I shout as we chase him. One of them cuts into an alley, hoping to split us up, but we stay on the white shirt. The third takes off across the street and plays frogger with traffic but we stay laser focused on our guy. \n\n\"You are under arrest!\" I shout again. He looks over his shoulder, and doesn't see an old lady on a scooter. She stops just in time, but he clips the front of her scooter and in the process of trying to stay on his feet, slams face first into a car waiting for a light. \n\n\"What the fuck?\" the driver says, leaning out of his window. The man wobbles to his feet, only for Frank who is much faster than he looks to tackle him onto the hood. \"Dude, what the fuck! I just washed this shit!\" \n\n\"Stay in your car sir!\" Frank shouts, pulling the man off the hood and pinning him to the street. Cell phones are out filming the interaction, and I just can't wait to be in the news later today. Sarcasm. \n\n\"Police brutality, let the man go,\" an onlooker says while approaching us. \n\n\"Sir, official police business, keep back,\" I say with my hand up, and he tries to slap it away. Oh fuck no. \"If you take another aggressive motion toward me, I will arrest you. I am only going to tell you one more time, stay back.\" \n\n\"What is he being arrested for?\" the man asks. Fucking hood lawyer. \n\n\"You are not involved in this incident. I do not need to disclose that to you. Keep your distance,\" I say. \n\n\"Yo man, film this shit. Cops busting a brown man for nothing!\" he shouts. \n\n\"Go ahead and film, that is your right, but you do it in a manner not obstructing with a lawful arrest,\" I say, but he keeps going. \n\n\"Look at this white bitch, telling me what to do. That badge make you feel powerful!?\" he screams to the crowd forming. \"Bitch, do something.\" He takes a step forward then puts his hands on me, so I taser him until he pisses himself. I cuff him on the ground and leave him there. \n\n\"Police brutality!\" he shouts from the ground. I'm not even touching him. \n\n\"I'll get the big guy,\" Blanchard says and pulls the asshole off the ground and starts escorting him to the car down the street. I get who I assume is Mr. Patel. \n\n\"This is unlawful,\" he says to me. \n\n\"I'm sure your IRS credentials will check out,\" I say, and he shuts right the fuck up. \n\nOther units have arrived by the time we do, and we tell them to stand by the business and give a general description of the other men who fled. We put the two men in separate cars, and I do an on the spot interview with Patel. \n\n\"Who owns the shop?\" I ask, and he remains silent. \"Fine, talk to ICE when they get here.\" \n\n\"Because I'm brown you're gonna call ICE?\" he asks. \n\n\"No. I'm going to call ICE, because your visa is expired, smartass. Go ahead and play little race fuck fuck games with me. Worked for him, didn't it?\" I say, gesturing toward the other car where he was still complaining that he pissed himself. \n\n\"I ain't talking without a lawyer,\" he says, and I walk away from the car and toward Frank. \n\n\"He talking?\" \n\n\"Probably not, and I expect an ACLU lawyer at the station later,\" I say, and he shakes his head. \n\n\"Good luck fuck wad,\" Frank says and looks at the building. \"The scope of our surveillance warrant is pretty broad. Includes structures we have reasonable suspicion of a crime being committed in.\" \n\n\"Good enough for me,\" I say, and rally a few officers to search the place. \n\nImmediately after the front door, it looks just like a basic electronics and repair store. Several stations for component level repair, several shelves with part and component inventory, and a door hallway through likely leading to the stairs. \n\n\"How much you wanna bet some of this shit is illegal?\" Frank asks. \n\n\"I guarantee it,\" I say and keep my head on a swivel. \"Why an IRS scam here?\" \n\n\"Second floor,\" Frank says and jiggles the doorknob. It is unlocked, and we start going up the stairs, but halfway up we hear movement. Frank stops and aims his gun up the stairs. \"Police! Anyone up there, identify yourself immediately!\" \n\n\"Don't shoot!\" a voice shouts back. \n\n\"How many people are up there!\" I shout. \n\n\"Myself, and four others!\" \n\n\"Go to the bottom of the stairs, face the entrance to keep your eyes on them. We're going to corral them out nice and slow,\" Frank says to me, and I nod to him and take position. \"I'm coming to the top of the stairs, back away from the door now! Do you understand this order?\" \n\n\"...Yes!\" \n\n\"I'm coming up!\" \n\nIn a tense few minutes the five people on the second floor all slowly vacate the building and are all handcuffed and placed on the curb. While Frank is running that scene, I search the second floor with another officer and see what looks like a makeshift call center. Two rows of three cubicles with phones and a laptop at each. I put a glove on my hand and wiggle a mouse to wake the computer up. On the screen is a word document with a script for an IRS scam that I received, only mine I received via an email phishing expedition. \n\n\"Frank,\" I say into my radio, and wait for his reply. \"It's a call center.\" \n\n\"One of them is talking,\" Frank says, and I let him know I'm going downstairs. \n\n\"Detective,\" one of the uniformed officers says to me when I get to the first floor. \n\n\"You got something?\" I ask. \n\n\"I know what some of this stuff is,\" he says. \n\n\"Well don't touch it,\" I say, and he says he hasn't. \"What is it?\" \n\n\"It's a skimmer,\" he says, and I walk over and look at it myself. Son of a bitch, this building is a goddamn goldmine. \"Look at this one, it's a shell you put over a card reader at like a, gas station, or a grocery store. Looks just like the real thing, only it's stealing your credit card info.\" \n\n\"I bet you one of these computers could tell us everywhere they have one of these things set up,\" I say, and he nods in agreement. \n\n\"Hill, get the hell out here,\" Frank says over the radio. \n\n\"Calm down, moving,\" I say, then look at the officer. \"Keep it secure, CSI will be here soon.\" \n\nI exit the building where the handcuffed men are starting to get sorted out. Frank has isolated the talker and I make sure the car with Yosh is gone before we start the interview. \n\n\"You had something to say?\" I ask the man with Frank. He is East-Asian, Indian or Pakistani, and appears young, late teens to early thirties. \"Let's start with name.\" \n\n\"Tedman Potuhera,\" he says. \n\n\"You go by Teddy?\" I ask, and he shrugs. \n\n\"Ted,\" he replies. \n\n\"Alright Ted, where you from?\" \n\n\"Here, but originally Sri Lanka,\" he replies. I was in the ballpark. His English is good. He has an accent, but not one I can't understand. \n\n\"You work here?\" I ask, pointing to the building. \n\n\"Depends on what you mean by work,\" he says. \n\n\"Ted, this is not the moment to be smart with me,\" I say, and he apologizes. \n\n\"They helped me immigrate here,\" he says, and I stop him. \n\n\"What do you mean by immigrate?\" I say. \n\n\"I have a visa, still valid. Just, they have it,\" he says, and I look at Frank, then back to Ted. \"Until I pay off the travel expense, they are withholding my visa from me.\" \n\n\"You do know, that's illegal?\" I say, and he nods. \n\n\"I do now, but I didn't know at the time. That's why I replied to you,\" he says. \n\n\"Wait, what?\" I ask. \"You replied to me?\" \n\n\"Yes. You sent the reply with a reverse IP tracer? Right?\" he asks, and I look at Frank again. \n\n\"You set it up, to get them busted?\" Frank ask, and he nods. \n\n\"Yes, I did. They lied to me, and are stealing money from people. What do you want to know?\" he asks, and Frank and look at each other again. Frank gestures for him to stay and for me to follow. \n\n\"Does this ever happen?\" I ask. \n\n\"Like, never. This is the property crime bust of the century, with a competent witness, who is a reforming victim. Prosecution will salivate,\" he says, and I look at Ted and walk back. \n\n\"What do you know about the skimmers?\" I ask point blank. \n\n\"Which kinds? They use three versions,\" he says, and I nearly faint. \n\n\"The check-out ones,\" I say. \n\n\"They placed them over the top of legitimate ones all over the city. At least twenty. They use the credit info to buy gift cards, they could then convert to crypto, then to cash. We called and emailed people all over the US and Canada off a call list they bought online,\" he explains. He's credible and articulate. \n\n\"The other ones?\" I ask. \n\n\"One of the other tricks is putting it on the inside of a gas station pump,\" he says. \n\n\"How do they get in?\" I ask. \n\n\"Oh, that's the easiest part. There's a master key that opens almost any of them,\" he says. \"They have about a dozen of those.\" \n\n\"We'll talk more at the station,\" I say, and Ted nods. Frank uncuffs him and put him into a squad car to get him back. He gives a word to the officer to be gentle and we stay behind to wait for CSI. \n\n- \n\nMonday - May 18, 2026 \n\n-William Kaiser- \n\nThe warrant for Kimberly's phone finally came through because I had to wait for the judge, who isn't in on Sundays. I was sure to add in the fine print legal language pertaining to home security surveillance applications. If you forget that detail, you'll get a vague record of calls and texts, and then tough shit. Judges don't like when you come back crying because you didn't file the paperwork correctly. \n\nWhile I was waiting, I did more homework and tried to find Jerome Alberts, but he's in the wind. His last listed address has a different family living there. What I can gleam from the evidence and his history is that he is a professional fraudster who likely just graduated to murder. I sent out a few requests for information to neighboring states to see if he was somehow rolled up by them. \n\nI'm not ruling out Kimberly as an accomplice, so I did my due diligence and visited her place of work with a search warrant of their chemical inventory. It all checked out. Nothing missing, and the nail polish remover they used was not acetone based. The killer didn't get the chemical from the salon. As far as I can tell, Kimberly is likely in the clear. I still want to see her security footage before she has more time to destroy evidence. I would put in a request with the company who manufactures the cameras, if we had anything other than a burned-up piece of plastic to go off. Even the one above the front door didn't survive. \n\nI've called the upstairs neighbors multiple times and haven't received a response yet. I would have sent Midge and Graham to go talk to them, but I can't. \n\n\"What do you have on the Xavier murder?\" I hear Leo say from his office. I look over my shoulder and see him standing at his office doorway. \n\n\"Lot of questions, not as many answers,\" I say, and spin my chair around to him. \"I could be farther if you didn't send my partner away on a case I can't know about.\" \n\n\"That came straight from Queen, don't look at me. I don't even know about it,\" Leo says with his hands up in his defense. \n\n\"Can I get a loaner?\" I ask. A term meaning a detective who isn't too busy to assist with ongoing cases in different departments. \n\n\"Who you got in mind?\" Leo asks. \n\n\"Chase?\" \n\n\"I can't touch SI unless it's his additional duty, you know that,\" he says. Worth a shot. \"And not your girlfriend, it has to be an equal grade swap.\" That narrows the field. \n\n\"Hill?\" \n\n\"She's balls deep in a big case,\" he says. Since when does property crime have big cases? \n\n\"Samson?\" I ask. He's in narcotics. \n\n\"On loan with the DEA,\" he replies. \n\n\"Well, I'll just go back to fucking myself,\" I say and turn to my desk. \n\n\"I'm not that busy, what do you need me to do?\" Leo asks. I haven't seen him not push paper for a good minute. \n\n\"I'm supposed to compare notes with the insurance investigator in about three hours,\" I say. \n\n\"Forward me the contact info, I'll take care of it,\" Leo says, and I say I will, and thank him for doing it. That's one less thing to worry about. My email pings, and I see it's a reply from the Illinois State Police. Mother fucker. \n\nJerome Alberts was arrest two days before the murder by Illinois state troopers. They pulled him over for changing lanes without a signal and took him into custody because he had an outstanding arrest warrant for a separate fraud. He is still in custody. \n\n\"You have to be shitting me,\" I say, and bang my head on my desk. \n\n\"What's up?\" Leo asks. \n\n\"My primary suspect just alibied,\" I say. \n\n\"Detective?\" I hear a voice say. \n\n\"Yup,\" I say, and turn my head to a visitor with a green visitor badge. It's a man, early forties in a suit and tie with a shiny bald head. \n\n\"I'm the attorney for Ms. Kimberly Drew,\" he says, and I swallow down a groan and put my game face on. \n\n\"Where is your client?\" I ask. \n\n\"I'm only here to drop off the information required from the warrant,\" he says, and placed a digital forensic examination of her phone, and lets me know he will send the video from her camera in a few hours. \"I'm also here to relay any questions you have to her. They will be typed and will be received with a written response if answerable,\" he says. You perjury proof cocksucker. \n\n\"Give me a few minutes to type them up, and I'll get you on your way,\" I say, and turn back to my computer. \n\n\"No rush,\" he says. Of course he'd say that, he bills by the hour. \n\nI make sure to ask about her security footage, and hand him the copy of the questions which he reads for a moment. \n\n\"Could you sign and date that document in blue pen?\" he asks. He's dealt with some shady cops who tried to claim they asked different questions in court. He's not leaving me any wiggle room. Blue pen is a good touch, shows it's the original document and not photocopied. I comply and hand it back. \n\n\"Thank you for your time, I will get this back to you, hopefully this time tomorrow,\" he says, and politely leaves. \n\n\"Damn, that guy is good,\" Leo says from his door. She got a good enough lawyer to leave me with nothing. \n\nI wasn't expecting anything of value today, but an hour after the lawyer left, my inbox alerted me of a new email. It was a series of videos provided from her security camera, with a message ensuring nothing was removed or left out going back two weeks as requested in the warrant. If this goes to trial, I'm sure discovery will prove that is bullshit. \n\nI click a few randomly and see the manner Frankie described them is accurate. They're short, fifteen second clips after a motion sensor is tripped. Boring, innocuous things like people getting water or going to the one bathroom in the middle of the night. There are two cameras in the house, one in the living room that captures the bathroom door and the kid's room. The other likely above the front door pointing straight down the hall. \n\nOne video shows Kimberly's door open and her using the flashlight on the phone to find the light switch at the end of the hall. She was telling the truth after all. She stops, talks to her grandmother a little, then kisses her on the top of her head before going back to bed. The grandmother occasionally wakes the camera up when she shifts in her sleep on the chair. I see the camera activation times are consistent, roughly ten at night. Every night. Deactivation is similarly consistent at roughly six in the morning. Sometimes she forgets but turns it off after the alert buzzes her phone. Except the night of the fire. It was deactivated around one thirty in the morning. Roughly fifteen minutes before the fire started. \n\n\"Okay, what's going on here?\" I ask myself and watch the final two videos. \n\nThe hallway and living room cameras are tripped by Jacob leaving his room and walking into his mothers. I lose him on the living room angle, but the hallway angle shows him enter his mother's room. Just before it cuts off, I watch him pick up his mother's phone. \n\n\"Oh my god,\" I say out loud. The kid turned off the cameras. How did he even know how to do that? How does he know his mother's code? I pull open the case file, and look at anything regarding Jacob, and look through the notes Lauren handed off to me. One part stood out. 'He spent the entire conversation on his mother's phone.' \n\nI call Lauren and when she answers I ask. \"Jacob Drew, did he know the passcode to his mother's phone?\" I ask, and she's initially confused. \"Did she need to unlock the phone before handing it to him, or did he know how?\" \n\n\"He knew,\" she replies. \"Why, what's up?\" \n\n\"Not sure yet, but that clears a few things up,\" I say, and we exchange a few polite words before I hand up again. The kid knew how to use her phone. It's plausible he knew how to turn off the cameras. Why? \n\n\"What would Chase look for?\" I ask and watch the video again. \"What's out of place?\" \n\nI watch the fifteen second videos so many times an hour goes by. I rub my eyes and decide to walk to the window to get some air. I just need to not sit at my desk anymore. Then it hits me. \n\n\"The window,\" I say, jogging back to my computer watching the living room angle again. I watch Jacob leave his room and leave his door open. I can see it clear as day. The window is shut. Kimberly said the window was open when she escaped. Fifteen minutes before the fire started, it was closed. \n\nDid someone come in through the window and forget to close it on their way out? Someone who could have left some fingerprints or distinguishing shoeprints? They could have torn a piece of fabric on accident during entry or departure. That isn't the most pressing detail. Before it happened, Jacob turned the cameras off for them. He had to have known this person to follow those instructions. Someone who already knew the house had cameras and how to disarm them. "
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "criminal affair",
        "chase kramner",
        "couple",
        "crime",
        "straight"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/a-perfect-match-6"
}