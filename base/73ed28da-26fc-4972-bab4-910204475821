{
    "title": "The Creators Ch. 17",
    "pages": [
        "Chapter Seventeen: Thunderhead on the Horizon\n\nPrelude: The Dimmest Star\n\nCORRUPTION \n\nI stood in the threshold of Diamond's gate, and looked out at the stars that shone over the vast astral jungle. There were billions of them, but a few hundred had shined the brightest when I first ventured out of my meld's realm. Now only ten of them remained. The other realms were now gone\u2014not destroyed, but coopted into the great wildlands I'd made of mankind's subconscious plane. Eight of the last stars would fall soon, but two of them would remain bright until Julia aided me. Hatred and Guilt. Oh, how I feared them. I touched my lips, and felt the scars of the nymph's kiss. I lingered there for a while, letting my terror simmer, then I rested my hand against my side. I would deal with Hatred and Guilt in time, but the other eight could be finished soon. Civility would be a fun one to take down, and I would greatly enjoy turning Honesty's hypocrisy back on himself. Afterwards would be Lust, which I imagined would be a very exotic venture, though I feared Preservation would be rather dull. Then there would be Diversity, which would at least be an interesting visit, and Serenity would be...\n\nI cocked my head as I looked up at the realm of Serenity. It was a very dim star, but it was undoubtedly a realm. A very young realm. The center had not yet been touched by Petranumen, and the occupant was gone. \n\n\"Angela...\" I muttered, narrowing my eyes. So, she still lived even if her brother did not. He must've bound with her before he passed. She was mortal now, which meant her realm would die when she did. It was a mild inconvenience, but one that would need to be attended to sooner rather than later. I could not deal with Angela directly, and my factors in the physical realm were becoming more unreliable by the second. \n\nI ran my tongue across my scarred lips, and looked back into Diamond's realm. There were ways I could persuade my mother to act at my will, but they were very vague, open to her interpretations. I could make her desire to seek out her mother, but I could not dictate the details of that desire. Diamond loved Julia deeply, but that love was a very dark thing. As I watched Diamond's thoughts grow in her mind, my anxiety began to grow with them. I only needed Julia's powers for a few more days, but I didn't know if I had that long. \n\nPart One: Disturbance\n\nJULIA \n\nI paged through the Maternal Path, and frowned. Corruption told me that the words of man were evil, but this was the word of God. I had followed it all my life, dutifully making every move in accordance with its precepts, and yet, it was such a vague story. I had always thought it was a book of love, but as I paged through it with my new perspective, I realized it was quite the opposite. The Holy Mother's words were gentle and forgiving, but I could not help but feel the underlying agony behind them. The Maternal Order always focused on the miracle of life being born from her womb, but never about its conception. She was raped. She was taken by a stranger in the dark, and forced to conceive his spawn. How many mothers in history had left their unwanted children upon the doorsteps of an orphanage? How many of those forlorn wildlings had I grown up with? Unruly, sadistic, savage little children, all of them needing to be tamed by the cane and switch just to make them civilized. That's who we were. Just the placenta-covered bastards of a woman who had been broken. That was why the world was what it was. The Holy Mother was virtuous enough to give us her lessons, but could not bear the idea of bringing us to her bosom. We were cast out in this world, and look at what we've made of it! No wonder she destined me with this purpose. Start over. Burn the old wood down, and from the ash, regrow as we were meant to be. The final pages of the Maternal Path told a story that was yet unfinished. A story of the harbingers in their white robes, the angels guiding from above, the banners billowing in the breeze of the resplendent horde behind the proud champion of God on the last battlefield. My Breytans wore robes of pure white. My army raised the banner of the crescent symbol. The seraph had given me her command. \n\n\"I am the rapture,\" I whispered to myself.\n\nDiamond rolled over in the bed she'd set up next to the sand I slept in, and smirked at me. \"I seem to remember something in that book regarding modesty?\" \n\nI looked up at her with maternal annoyance, and closed my book. \"There's also a few versus in there about the sin of incest.\" \n\n\"Some sins are irresistible, even for the Holy Mother's Rapture,\" Diamond yawned, and arched her slender body. There were scratch marks all across her back, red handprints on her olive-toned buttocks, and when she stretched her legs, I could see that her orifices were still slightly agape. \"Jeepers, you were rough last night!\" she exclaimed with a groan. \n\n\"I'm sorry, baby; I wasn't at my best.\" \n\nShe grinned at me behind a curtain of disheveled curly hair. \"I like it much better when you're at your worst. Do you suppose God was watching us?\"\n\n\"God is always watching.\" \n\nDiamond rolled off her bed, and nestled herself beside me in the sand, pressing her flaccid member against mine. \"What did God think when you pushed my face in the sand and screwed me in the butt?\" She drew her finger up my hardening shaft. \"What did she think when you drove your penis down my throat, and made me taste my own butthole as you came in my tummy? Were your baby-girl's insides tight enough for you?\"\n\n\"Why are you doing this?\" I hissed. \n\nDiamond grinned, wrapped her cool fingers around my cock, and slowly stroked me. \"What did God think when you got on your knees, and opened your cheeks for me? What did God think when I screwed your butthole, then plunged my filthy wiener between your boobies? What did God think when I\u2014\" \n\n\"Stop!\" I growled as my manhood grew. \n\nDiamond pressed a cruel thumb against my throbbing head, causing me to squirm. \"Sister Julia, God's favorite little nun,\" she giggled. \"In the morning, at least. Not at night, oh no, no, no. When the sun goes down, you take off the mask, but I see you.\" Her black eyes twinkled. \"I see right into you. There's nothing but darkness all the way down to your marrow. I can see your sadism, your masochism, your jealousy.\" Her lips hovered over mine, her breath expelling smoky gouts of Corruption. \"It's so attractive to me. I want to drown in it with you. Now tell me truthfully, dearest father of mine, what did God think of you last night?\" \n\nMy expression went cold. My eyes went dead. My heart beat steadily in my chest. I wrapped both hands around my daughter's throat, and squeezed. I squeezed until her face was purple, until her eyes were bulging, until the veins were thumping in her temples. My cock was so hard. So was hers. As our engorged organs combatted with throbbing rubs, I choked her until her eyes rolled back, and spittle dripped from her lax mouth. She slowly faded in my iron grip, but still she ground against me, rubbing her shaft alongside mine until hot cum was oozing from her pulsating urethra and greasing our rubbing members. When her heartrate slowed, and her face turned from purple to pale, I peeled my fingers away one by one. She gasped, and collapsed atop me, her breaths desperate and rapid as her masculine organ slowly belched volumes of her dying orgasm. I patted her back while she coughed, and sang an old hymnal gently in her ear. \n\n\"I'm sorry, baby, but only through pain can we heal,\" I whispered. \n\nDiamond wheezed against me. \"You still haven't answered my question.\" \n\n\"Why do you provoke me?\"\n\n\"Because I hate playing second-fiddle to a fairytale,\" she croaked. \"Now I'm third-chair, but at least Corruption is real.\" \n\nI smirked at her. \"And you call me jealous.\" \n\n\"I never said I wasn't.\" She searched my eyes. \"Do you love me at all?\" \n\n\"Of course.\" \n\n\"Then why didn't you bind with me?\" \n\nI loosened my grip on her hair, and kissed her lips. \"Because you are my daughter no matter what we do to each other. That kind of love isn't meant to bind.\" \n\n\"You don't even know the thing you're bound to.\" \n\n\"I know her intimately,\" I said. \"I've felt her in my soul. She courted me in her own way, flirting with my desires during the temptation game with Willowbud. Now she loves me. God's own angel.\"\n\n\"Yes, when you look back at history, it's very easy to make a narrative of it.\" \n\nI patted her cheek affectionately. \"We are all part of one story, Diamond. There has only ever been one.\" \n\nDiamond's lips curved sardonically. \"Maybe it's time for a sequel.\" \n\nJUSTINA \n\nIn my time, I had done things most people would call abhorrent. I sucked sperm out of my own mother's gaping asshole; I enslaved a virgin boy and made him fall in love with me just to fulfill a wholesome-teenager kink; I even once forgot to properly tip a waiter. Truly, I was an evil creature. But despite all of that evil, I had never once taken a life. Well, that wasn't exactly true; I'd swatted a few mosquitoes, but besides them, I'd always been scientifically faithful to the miracle of biological existence. So as I stared down the elk in the woodlands, and clumsily drew back my bow, I found that the fingers on my drawing hand were tighter than iron despite my soft muscles. \n\n\"You have the shot,\" Astrid whispered. \"He's not just going to stand there all day and wait for you.\" \n\n\"He's eating!\" I hissed backed. \"I'm letting him finish!\" \n\nAstrid gave me a bewildered look. \"You know you're about to kill him, right?\" \n\n\"That doesn't mean I have to be rude about it!\" \n\nDeja drew back her bow, and launched the arrow. So strong was her draw that the missile ran clean through the elk's eye and exited the back of his head with a confetto of pink brains. He collapsed like a puppet with severed strings. \n\n\"Damn fine shooting, Deja,\" Astrid said, her brows raised. \n\n\"Thank you, Bound One,\" Deja said, and drew her hunting knife. \n\n\"Why?!\" I exclaimed, utterly horrified.\n\nDeja shrugged. \"You were worried about the beast's suffering, so I showed you that death can be done mercifully. Haven't you dissected an animal in your numerous studies?\" \n\n\"Only dead ones, obviously!\" \n\n\"Well then,\" Deja handed me the hunting blade, \"I will show you how to skin an elk.\" \n\n\"That's not why we're here, Deja,\" Astrid said to my girlfriend/boyfriend. \"Justina needs to learn how to kill.\" \n\n\"Hey, I've killed before! I enslaved the Breytans and made them\u2014\" \n\n\"Deja, shoot that fox,\" Astrid said, and Deja nearly blew the poor canine's head off with the force of her arrow. \n\n\"WHY?!\" I screamed. \n\n\"Because it was very easy for me,\" Astrid said sternly. \"Telling someone to do something for you is the easiest thing in the world. It removes the responsibility to act, which I'm afraid is a crutch of yours.\" \n\nI glowered at her. \"You can lie now, you know. You no longer have an excuse to be a bitch.\" \n\n\"I never needed one.\" \n\nDeja tapped me on the shoulder, and pointed to a peregrine falcon in the tree beside us. \"Shoot that.\" \n\n\"I gotta be honest, Deja, this isn't what I had in mind when you promised to take me birdwatching.\" \n\n\"I would apologize for ruining our first date, but the Bound One insisted. Besides, she's right. You must learn to kill if you are going to be in a war.\" \n\n\"I'm not my mom, OK?\" \n\n\"Do you think killing came easily to Tera? Do you think it came easily to any of us?\" Astrid asked. \"When I killed my first deer, I wept for three nights thereafter, but killing must be done, Justina, so shoot that fucking bird, or I'm going to eat it alive in front of you.\"\n\nI glowered at Astrid, then took a deep breath, drew back my bow, and steadied my aim. \n\n\"Exhale slowly,\" Deja whispered. \"Shoot between heartbeats.\" \n\nShe put her hand on my back, and a strange calmness came over me. I let my breath go, and felt my heart slow to a crawl. Ba-boom, ba-boom, ba-boom; it beat in my ears, silencing the whistle of the wind and the calling of birds. Ba-boom, ba-boom, ba-boom. I loosed the arrow. The falcon shot backwards with the force of the blow, and flew out of sight. I let the last of my breath go. \n\n\"There,\" Astrid said, and put a hand on my shoulder, \"it's done.\" \n\n\"I'm a murderer,\" I whispered. \n\nDeja planted a kiss on my neck, and took me into her embrace. \"You're a killer, Justina, not a murderer.\" \n\nMy eyes caught a ball of black feathers at the base of the tree. The falcon was curled around the shaft that impaled it, almost as though embracing it. Its dead black eyes stared at me as a trickle of blood ran from its open beak. \n\n\"Not yet,\" I whispered. \n\nWILLOWBUD \n\nI picked up a ten-ton boulder, shaped it into an enormous frisbee, and hurled it as hard as I could. It skidded across the water, sliced through the air, and decapitated the stone statue of Julia I'd erected on the other side of the lake. \n\n\"Too wide a kill-zone,\" I muttered, and wiped the sweat from my brow. I erected another statue, and picked up another boulder. Shaping it into a missile, I launched it as hard as I could. It shot across the water with such speed that the shockwave disturbed the pristine surface, then it exploded ten feet to the left of my target. \n\n\"Fuck,\" I grunted, and set up a new target. \n\n\"I thought you said throwing a rock at her wouldn't work?\" a smarmy voice said behind me. \n\nI turned around, and struggled to meet Angela's gaze. She'd jettisoned her vampire form as a mere flavor-of-the-day costume for her brother to fuck, and was back in her strawberry blonde beauty, her blue eyes cutting right into me. Brandon had given me the shape-shifting ability early in the morning, but I didn't need to practice like the others; I'd been transforming all my life. \n\n\"Every good plan has a contingency,\" I said. \n\n\"So if you can't crush her with Droktin's Pass, your solution is the one you already said would fail? You're just a fucking genius, aren't you?\" \n\n\"This isn't a backup plan; it's a contingency,\" I grunted, and picked up another rock. Once more, I shaped it into a missile, and launched it as hard as I could. It shot across the lake, and burst into dust five feet to the right of my target. \n\n\"Nice shot,\" Angela sneered. \"I think the frisbee was more in your wheelhouse. I've seen better aim in a men's restroom.\" \n\n\"Frisbee won't work.\" \n\n\"Looked like it worked just fine. Why are you doing this anyway?\" \n\nI pushed my foot into the earth, and felt the hardpan. Across the lake, two statues flanked Julia. One was of Angela; the other was of Brandon. I formed a frisbee from a nearby boulder, and let it fly. It sliced across the lake, and decapitated all three statues. I turned around, and looked at Angela. She wasn't smiling anymore. \n\n\"You have to get closer,\" she said softly. \n\n\"I'm already way too close.\" \n\n\"She's three-hundred yards away.\" \n\nI shook my head, and tightened my fist to keep it from shaking. \"She's fifty miles away, and we are all way too close.\" \n\nBRANDON \n\nI laid my hand atop Ally Summerhammer's brow, and sent my energy into her. Her blue eyes ignited with power, the veins in her neck glowed, and her wings unfurled as if catching the wind. She tremored for a moment, then stood tall and proud in her Ionan splendor, opened her hand, and watched it as it transformed into a bear's paw. She looked back at her wings, and smiled with satisfaction when they became the membranous flites of a dragon. She glanced down at her feet, and actually giggled when they became the hooves of a horse. Then she transformed back into her normal self, bowed and thanked me, and went to the fighting ring to test her new abilities against the other Ionans. There, Bianca trained them with a gentle hand (as I had demanded that she do so), though I could tell by her impatient posture that she wanted to play the drill sergeant. Nona took on that role instead, hovering above the combatants with her enlarged hummingbird wings, shouting orders and making stern corrections to any woman who performed at lower than the impossibly-high Ionan standard. \n\nI turned away from the training ring, and set my eyes on the next Ionan. \n\n\"Helga Suncraper,\" I mused to the prostrating redhead. \"Why are you naked?\" \n\nShe shivered as she knelt before me, but she kept her steely blue eyes fixed on me. \"I wish to be blessed in the Ofanian method, Your Holiness.\" \n\nI sighed and rubbed my brow. It was at these times that I wished my omnipotence extended to my own dick.\n\n\"Look, Helga, you're a really pretty girl, and far be it for me to tell you what to do with your body, but the Ionan Codes\u2014\" \n\n\"Astrid doesn't follow the Ionan Codes any longer.\" Helga put on a stern face despite her embarrassment. \"She is the Bound One of our matron God, and a loyal friend of yours. What good are the codes if breaking them leads to all an Ionan could want?\" \n\nI looked at the line of Ionans waiting behind Helga. \"Your sisters are watching you.\" \n\n\"I... I don't care!\" she said, growling more to herself than to me. \"Let them see me! Even if I am ashamed of my nudity, I know there is no shame in it! The Ofanians flaunt theirs like it means nothing! Astrid doesn't wear any clothes but the strap for her sword. Even your own sister is naked more often than not, and all of them mate with each other like they're proud of their sin!\" Helga shook with frustration. \"I... I... I want to join them! I am a young woman, and I have desires!\" \n\n\"And we would love to help you fulfill them, Helga,\" Angela crooned as she draped her arm over my shoulder. \"But I'm afraid we don't have time. If Brandon fucks one of you, he's going to have to fuck all of you or it'll look like favoritism. Please feel free to resubmit your application to the orgy club after this is all over.\" \n\nHelga bowed her head in dejection, and I transformed her. Instead of immediately testing the new combative gifts at her disposal, she elected to increase her bust size, widen her hips, and fill her lips. She stood up, saluted me smartly, then took her sweet time walking over to the fighting ring. \n\n\"Dibs,\" Angela whispered. \n\n\"Be patient. It'll take a long time to integrate the Ionans into the fold.\" \n\n\"Oh, I'll be integrating into their folds alright,\" Angela snickered, then her smile faded. \"Have you heard the news yet?\"\n\n\"About Diamond? Yeah.\" \n\n\"Does it change anything?\" \n\nI chewed on my lip. \"Willowbud can get Diamond and Julia in one go.\" \n\n\"She's not so confident. Brandon, we should\u2014\" \n\n\"I believe in her,\" I said firmly.\n\nAngela ran her fingers through her hair, and sighed. \"When we infiltrate the horde, we will have two-thousand of the world's best killers within an arrow's distance of Diamond and Julia. Nona has asked me numerous times already if we can arm the Ionans with weapons like Astrid has. If Willowbud makes a few thousand arrowheads, we could end this thing with one lucky shot.\" \n\n\"Julia walks around naked. She's not worried about armor. If we reveal Willowbud too early, then everything goes to shit.\"\n\n\"What if\u2014\" \n\n\"There's no 'what if,' Angela,\" I said gravely. \"I'll talk to Willowbud about these contingencies she's planning. We cannot divert from our goal. When Julia and Diamond walk through the pass, that's it, game over. That is our one surefire way to win. There is no other guarantee.\" \n\nAngela chewed on her lip nervously. \"What if we get captured?\" she asked softly. \n\n\"Justina and I are making concentrated opium. We'll give everyone a capsule with a lethal dose.\" \n\n\"What if you die? Brandon, I'm telling you right now that you cannot go in there. It's not just for my selfishness; if you die, we lose all our powers.\" \n\n\"I can't help anyone from a distance. I'll be careful, Angela, I promise, but I have to be there.\" ",
        "\"I'll be right next to you the whole time.\" \n\nI smiled at her. \"Where the hell else would you be?\" \n\nShe didn't smile back. \"You remember what you told Bianca yesterday? Don't be a fucking martyr.\" \n\n\"You know I'm way too much of a pussy,\" I forced a laugh. \n\nAngela shook her head. \"You're not, Brandon. You're a good, brave man, and that's what terrifies me.\" She gave me a solemn frown, then walked away. \n\nThe next Ionan dropped to her knees before me, and bowed her head. \"I am Sia Swordcaller, and I await your blessing, Oh Holy One.\" \n\nDIAMOND \n\n\"I am Dejok Fen, and I await your blessing, Oh Holy One,\" the orc said, kneeling before me. Even on his knees, the big bastard was taller than me. \n\nI poked at his tusks, and frowned. \"When was the last time you brushed your teeth?\" \n\nHe blinked at me. \"I have never brushed my teeth.\" \n\n\"Great,\" I sighed, and looked out at the long line of orcs behind him. Jeez, I couldn't see the end of it! \"Hey everybody!\" I yelled. \"If I'm gonna kiss all of you, you better brush your fricken teeth, OK?! Someone find some darn toothpaste!\" I looked back at Dejok. \"Can you at least... I don't know, chew some mint or something?\" \n\nDejok fished through his pouch, and pulled out a tin of chewing tobacco. \"This is mint flavor.\" \n\nI rolled my eyes. \"Screw it; I ate Mom's butt for breakfast anyway.\" \n\nI took Dejok's massive head in my hands, and pressed my lips to his. His breath was foul, but mine was worse, for I summoned evil from my lungs. It flowed from my mouth into his, and he gasped with euphoria, becoming so languid that he nearly toppled over. I finished my exhalation, and the last whisps of blackness left my lips. Suddenly, the lassitude was gone from his muscles, and he seized me with his enormous hands. I looked into his blackening eyes, and saw right into his soul. His desires were plain to me. He grabbed me by the jaw, and I pressed my hand to his chest and sent every ounce of water in his body right to his heart. His chest cavity exploded, and he collapsed in front of me. I stepped back, and sighed. I was covered in black blood. It would only take a second for me to whisk it all off, but I got the feeling I'd be cleaning quite a bit of it off me today. \n\n\"Well, that didn't go so great,\" I mumbled, and smiled at the next orc. \"And what's your name?\" \n\nJULIA\n\nI walked with Jade along the crater of Droktinar, far away from the horde. I ruminated on the conundrum of Diamond. She had told me her tale of Xaya, Corruption, and an iron box she could not open. She told me about the journey she took to the astral plane, she told me about Wrath, Sorrow, Greed, Hatred and Joy, but she remembered nothing beyond that. I supposed encountering one of God's angels was something a mortal mind could not wholly comprehend; it made sense that such an event would cause amnesia. It was the only thing that made sense. The box, Xaya, and the nature of Diamond's relationship with the seraph were all so... strange. \n\nVitanimus. It was a name Honor had spoken. It was a name Corruption had vehemently claimed was a lie. Something about that disturbed me. I recognized the vehemence of that denial; that kind of denial was something I knew intimately. There was a war that was raging parallel to the one I was fighting. A war between angels and demons; demons so terrible that Corruption did not want me to even know of their existence. Demons even more terrible than the Sentients Corruption needed my help to destroy. The thought sent a chill down my spine. Who is Vitanimus?\n\n\"There are times when I feel so powerful,\" I mused to Jade. \"I feel like I can scorch the surface of the sun. Then there are times when I think upon the vastness of the unknown, and I realize that my power is barely that of an ant.\" \n\n\"The Holy Mother teaches humility above all things,\" Jade said in her dead voice. \n\n\"Indeed,\" I muttered, looking out at the crater I'd made of a city. \"What do you think about Diamond?\" \n\n\"She is your daughter.\" \n\n\"I mean... what do you think about her place in the pantheon of angels and prophets?\" \n\nJade stared coldly outward. \"I think that she carries a power that she does not understand, but it is also a power that you do not understand.\"\n\nI nodded. \"Yes, it is dangerous to wonder upon things that you should be ignorant of.\" I frowned. \"It is a lesson I should take to heart.\"\n\n\"False prophets are made by those who only see part of the plan, and claim to know the whole of it,\" Jade said, and looked down at me. \"True believers follow blindly.\" \n\n\"That is why it is called faith,\" I smiled up at her. \"You are an infinite source of wisdom, Jade.\" \n\nShe did not return my smile. \"It is easy for me to know the truth when it is burned upon my flesh.\" \n\nMy smile faded, and I drew my eyes down the black robe she wore. Though it covered her from neck to ankle, the burns on the backs of her hands were visible, the flesh raised and scarred, knotted so horrifically that it looked more like leather than skin. It aroused me to see what I had done to her, but the imminent swelling in my loins was killed when I remembered what she had done to herself. \n\n\"Do you regret it?\" I asked her softly. \"Putting that rod inside of you?\" \n\n\"No. It was the only way I could serve.\" \n\n\"I wish I had the strength to do that. Standing next to you makes me feel like a fraud.\" \n\n\"There is only one calling in my life, Sister Julia, and I will serve it to whatever end.\" Jade looked out at the vast crater. \"I knew what I had to do to serve that calling. I cannot presume to know what you have to.\" \n\nI studied her for a while. \"Jade, do you believe in the Holy Mother?\" \n\nJade offered me a thin and joyless smile. \"I am a devout servant of the Holy Mother.\" \n\nI ruminated on her answer, then returned my gaze to the ruins of Droktinar. Hundreds of orcs had traveled from the horde to sift through the wreckage. They pulled out shards of obsidian and loaded them onto scores of carts. \n\n\"What are they doing?\" I asked. \"Looking for a quick penny? There will be no place for money in the rapture.\" \n\n\"They are making weapons out of them,\" Jade said. \"Once you tempered the rock with your flame, it became keener and stronger than any metal that can be forged by man.\" \n\n\"And so God provides us with an armory for her horde,\" I shook my head, and laughed. \"Jade, how can anyone deny that we are on the righteous path when miracles literally pop out of the ground?\" \n\n\"Indeed, Sister,\" Jade replied. \n\nI glanced at the sword on her hip. \"Breyta made that?\" \n\nJade nodded. \n\n\"Give it to me.\" \n\nJade looked down at me, and expressed emotion for the first time since her sacrament. \"No,\" she said firmly. \n\nI blinked, taken aback. \"Jade, give me that sword. That's an order.\" \n\nJade stared down at me for a long time, then unsheathed the Blade of Breyta, and extended it to me. I took it, and melted the blade right off the handle. I selected a shard of obsidian from the ground, melted it, then molded it into the exact shape of the original blade. After sucking the heat from the metal, I secured it to the handle, and handed it back to her. \n\n\"My High Guard will not wield a weapon named after a heathen,\" I said. \"The old world must be burned to the ground. That means all of it.\"\n\nJade bowed her head ever so slightly. \"I understand,\" she whispered, and tried to hide the tear that rolled down her cheek. I chose to believe she was weeping in gratitude, and smiled in self-satisfaction. \n\n\"Wonderful. Well, I suppose while we're here, we might as well arm the rest of our priestesses.\" \n\nTERA \n\nA knock on my door disturbed my blissful morning slumber. My brow still throbbed with the pain of the disfiguring scar, but fortunately, it was small enough not to mar my beauty. I peeled myself off of the orc I'd fed from last night, and sighed. He was in his late teens, though now he looked like a mummified corpse. I suppose he was, as every drop of fluid within his body was gone. Still, he'd be a load to drag out. I opened my wagon door, rolled the orc corpse into the dust, and scowled at the ten Breytan white robes standing outside.\n\n\"Does Julia have you sluts working in shifts now?\" I growled at the Breytans. \n\n\"It is the Water Dancer who bid us to intercept you,\" Aiko said. \"She requests your presence.\"\n\n\"Do you work for Julia or Diamond?\" \n\n\"Sister Julia is not here right now.\" \n\nI narrowed my eyes at the valkyrie, then turned to my left. Shuffling alongside my caravan, were rows upon rows of red-robed Breytans. Well, they didn't really wear their red robes anymore. They wore nothing but the shackles that bound their wrists and ankles to heavy iron balls they dragged behind them. I ran my eyes down the line of broken sluts until I found who I was looking for. \n\n\"Alita!\" I called, \"Get your fat saggy ass over here!\"\n\nOne of the Breytans flapped her wings furiously, and managed to get airborne despite her burden. The beautiful middle-aged mother of Aiko dropped before me, and prostrated so that her cheeks opened before her daughter's gaze. \n\n\"Yes, Master?\" she inquired with a hopeful wiggle of her ass. \n\n\"You're the entertainment for the day. Get up on the roof and give the people a show.\" \n\n\"Thank you, Master!\" Alita practically sobbed, and flew atop my wagon's roof, where my ten bull-orcs were waiting. Her glugs, moans and shrieks sounded a few seconds later, and the cracking of whips and the rhythmic slapping of flesh accompanied it. I turned back to Aiko with a sneer on my lips, and enjoyed the quivering hatred in her eyes.\n\n\"Whenever you are ready, Sister Tera,\" she growled, \"the Water Dancer would seek your audience.\"\n\nI hopped off the wagon, walked into the flock of Breytans, and patted Aiko on the shoulder. \"Keep an eye on your mum while I'm gone, will ya?\" \n\nI expected things to be different with Diamond back, but the last thing I expected was for them to become more orderly. A long line had formed to the front of the caravan, and at its head, Diamond Gendian was making-out with a fat old man. \n\n\"I remember my old man fetish,\" I said as I approached her. \"Of course, I was well into my two-hundreds by the time that happened, but I understand some teenagers have a thing for grandaddies.\"\n\nDiamond glowered at me above her kiss, then released the old orc. A puff of black smoke billowed from his nostrils, and he collapsed in a fit of euphoria before hobbling to his feet, grabbing his cane, and cackling evilly as he made his way back into the caravan. \n\n\"Bla!\" Diamond wiped her lips. \"Maybe you age like wine, Tera, but these old farts age like milk.\" \n\n\"What are you doing?\" \n\nShe raised her arms to the endless line before her. \"Blessing the masses.\" \n\n\"Why?\" \n\n\"Because Corruption is making me want to do it, so I don't really have a choice in the matter.\" \n\n\"There are millions of orcs.\" \n\n\"Corruption doesn't care about the logistics. She just gives me urges, and I follow them.\" Diamond beckoned the next person to kneel. \n\nI glanced at the dozens of orc corpses surrounding the Water Dancer. \"Some of them apparently didn't take to it too well.\"\n\n\"About one in ten want to kill me. Nine in ten want to screw me, but only two in ten of them are willing to try to rape me.\" Diamond kissed the young orc male, and delivered her poison to his lungs. He went languid in her arms for a moment, then carefully put his hands on her shoulders. Diamond opened her black eyes, and stared into his. Then she closed them, and rotated her mouth about the axis of their kiss, her hands traversing his muscular back. She lingered on him for much longer than was needed, then parted his lips with a smile on hers. \"Oh, you're a keeper. What's your name?\"\n\n\"My name is\u2014\" \n\n\"Your name is 'Seventeen.'\" Diamond giggled, putting a finger to his mouth. \"Congratulations on becoming the seventeenth member of the Water Dancer's holy harem. The others are in that tent over there. We have refreshments and badges. Go introduce yourself.\" \n\nDiamond shooed Seventeen away with a smack on his muscular ass, and bit her lip as she watched him go. \n\n\"Why did you summon me?\" I asked her. \n\n\"I've got some questions for you,\" she said, and watched for my reaction. \n\nI didn't give one. \n\nShe studied me for an excruciating moment, then inclined her head toward her harem's tent. \"How about we have a little chat in private?\"\n\n\"I'm an assassin, Diamond. I know what chats in private mean.\" \n\nDiamond summoned the water from the air, and shot an arrow through the line of orcs. Twenty of them fell in an instant, their brains decorating the sand. Those behind them dove out of the way and covered their head with their hands, but Diamond paid them no heed. She hadn't once turned her gaze from me. \n\n\"Did I kill any sexy ones?\" she asked me. \n\nI looked over the line of corpses. \"None worth keeping.\" \n\n\"Good,\" she grinned. \"Maybe your motto was 'no witnesses, only widows,' but I always leave an audience. That tent is the safest place you'll ever be with me, but the spot you're standing on is becoming deadlier by the second.\" \n\nI gestured toward the tent. \"After you.\" \n\nThe corrupted dissidents of Diamond's harem were doing what harems do best. The young orcs had formed a ring of debauchery, and their moans and cries filled the air. Diamond maneuvered her way through the ruckus, then patted two males on the back. \n\n\"Ten and Fifteen; become chairs,\" she said, and without further beckoning, the two corrupted orcs sat cross legged on the floor. Diamond opened her legs and eased herself slowly down the shaft of Ten until the young bull was buried all the way inside her small slit. She cozied herself comfortably on his lap, moaning slightly as she was stretched from within. \"No thrusting,\" she commanded softly, and relaxed on his chest. She made an armchair out of his arms, then beckoned with a hand for me to sit in my chair. \n\nI spread my cheeks to open my anus, and squatted down, taking Fifteen's nine inches easily into me. I enslaved the bull, and he called me 'Master' when my ass pillowed into his crotch. \n\n\"You think I'd have someone else kill you?\" Diamond laughed, a pleasured blush glowing from her sparkled cheeks. \n\n\"Killing me does seem to be the topic of conversation.\"\n\n\"It's certainly not a boring conversation.\" \n\n\"Certainly not,\" I said, and beckoned another orc to intertwine his legs with Fifteen so that I could turn my chair into a loveseat. He pushed into my slit and rubbed felicitously against his brethren, filling me all the way. \"I must say, I appreciate your taste in furniture.\" \n\n\"Then you'll love my bathroom,\" Diamond snickered, and snapped her fingers. A beautiful young she-orc emerged from the pile of green flesh, knelt before her god, and began to sensually suck her cock. Diamond knitted her fingers in the teenager's dreadlocks, and groaned as she was consumed. \"Tera, this is Seven, my toilet. She'll clean up anything that comes out of me; won't you, Seven?\" \n\nSeven smiled adoringly up at her god, and nodded as she sucked. \n\n\"You're doing this whole god-thing a lot better than your mom,\" I noted. \n\nDiamond rolled her eyes. \"Please don't talk about Mom right now. We were having such an interesting conversation.\" \n\n\"Ah yes, about killing me.\" \n\n\"We'll get to that,\" Diamond shifted on her chair, and let out a girlish sigh. \"You're very good at hiding things. I suppose you've made a career out of it. You even managed to hide things from Willowbud when she had Corruption's perception to aid her.\" \n\n\"Willowbud always knew I was hiding things from her. She just chose to play along because she thought it was fun.\" \n\nDiamond cocked her head, and smiled. \"I suppose mysteries are fun, but if Willowbud knew the depth of your treachery, she would've ended the party early. I am not Willowbud. Even as I look into your eyes right now, I can see the lie you keep from me.\"\n\n\"Then speak it,\" I said, subtly looping my thumb through the pin of the terracotta bomb on my belt. \n\n\"Do you think that firecracker will save you?\" Diamond giggled. \n\nI smiled back. \"It's not meant to save me.\" \n\nDiamond narrowed her gaze, but her smile still played dangerously upon her lips. \"Maybe it is more fun to play this little game. Fine then. Your secret is worth your life, or at least, it's a secret you think will save you. From who? From Mom, of course, but I'm afraid your stock as a disciple of the Holy Mother is going down. Every pathetic orc I infect devalues you. How much time do you have before she decides you're nothing but a fraud?\" \n\n\"I smell a proposition.\" \n\n\"Your keen nose hasn't failed you,\" Diamond patted Ten on the thigh, and he began to thrust into her. \"I have a... oh yes, just like that... I have an opportunity for you, Tera.\" \n\nI patted my slaves, and they began to drive their organs into mine. \"I'm all ears.\" \n\n\"I really like this new apocalyptic turn Mom's taken, but I'll be darned if I'm going to be in the passenger's seat for it. I'm taking charge of this ride, and I'll need your help to make the transition.\" \n\n\"That sounds like a very dangerous position to be in.\" \n\n\"This is going to happen, so you might as well just agree.\" \n\nI frowned between my lusty breaths. \"What do I have to do?\" \n\n\"Nothing at all. Just meet me at the Trinity Uplift tomorrow morning. Alone.\" \n\n\"You must think I'm stupid.\" \n\n\"I'll protect you.\" \n\n\"You must think I'm really stupid.\" \n\n\"I think you don't have a choice,\" Diamond giggled, and oscillated her hips about the orcs pleasuring her, her slender belly flexing below her modest breasts. Her eyes rolled back in her head, and low guttural tones emanated from her lips as Seven worshipfully slurped from her cock. Realizing the conversation was over, I busied myself with draining my two bulls, but even as they thrusted into me with increasing ferocity, I kept my eyes fixed on Diamond. \n\nInterlude One: Her \n\nCORRUPTION\n\nI watched Xaya as she devoured a bunny. Her serpentine hair moved from her head like a medusa, and the little snakes took pieces off the squirming rodent bit by bit. She was sadistically fascinated by the animal's agony, much like how a housecat would torment a mouse. She observed it from every angle as her hair ripped it apart limb from limb, never taking enough to kill it quickly, always just enough to draw out its horror. Of course, the bunny wasn't real. It was an idea of a bunny, a piece of Diamond's old innocent mind. I drew my fingers along the scars on my lip, and ruminated upon some of Diamond's older memories. \n\nThere was an effigy of Passion. It was coiled with my thorned vines and blackened with my jagged bark, but still, it remained. As long as Diamond stayed untethered, that memory would be there. There was another bush\u2014this one shaped like Lucilla. Her eyes were alight and mischievous as her fingers played between her legs. Diamond's sexual awakening was a very potent memory, and though my dark leaves covered it, it was still very plain. I turned my gaze to another shrubbery. This one was of Julia. She was standing in the threshold of a doorway. The doorway had been disintegrated. The whole house had been disintegrated. There was a boy standing in the corner... he seemed familiar to me. Lucilla was clutching her wrist as though it had been injured, but it appeared to be perfectly fine. The leaves formed a translucent face right in front of Diamond, and I deduced that this was Angela. Her profile dominated the image with its closeness, making it difficult to see what was behind it. There was something every character in the image was staring at. I couldn't quite make out what it was. I leaned closer, and peered through the leafy ethereal face of Angela, trying to discern the subject of this memory. It was a lone figure standing at the end of a street. A nymph. ",
        "The nymph. \n\nI scrambled to my feet, and rushed over to the figure. The perspective from which it was viewed made it so that the nymph was barely five inches tall when I examined her closely. The little leaves of the bushes made up her features, and though they were basic, it was unmistakably her. Little vines sprouted out from her opened hands, creating balls of leaves that seemed to float from her sides. Rocks. Rocks torn right from the cobblestones of the street, and suspended in the air. \n\nI touched my scarred lips, and whispered a single name.\n\n\"Willowbud.\" \n\nPart Two: Disguise\n\nASTRID \n\nAll the warriors of Ofan and Iona were gathered in the stands of an amphitheater Willowbud had created. Nona, Bianca and I stood on the stage, though we were not the main attraction. Our two new and unwilling guests were the center of everyone's attention. Nona had swooped into the back of the horde late last night, and collected two straggling orcs. They were aptly named 'Stink' and 'Buttercup.' One was an enormous bruiser of a male that towered eight feet tall, and the other was a middle-aged female about half his size. The valkyries in the stands could not hide their collective disdain for the pair (and all orc-kind in general), and Nona and Bianca made no pretense of civility with their naked swords resting in their hands, but I stood before the pair without a weapon\u2014though I hardly needed one. There had been a time not too long ago that I wouldn't have willingly stepped within a hundred miles of an orc, but that time had passed. My days in Drastin had taught me much about different people, and while orcs could be as brutal and cruel as their reputation (especially in the bedroom), most were just... people. Perhaps Nona, Bianca and the rest of the valkyries saw nothing but two interlopers no better than cockroaches, but I saw two terrified individuals vainly trying to maintain their dignity before certain death. I admired their poise. \n\n\"Buttercup,\" I said to the enormous male, \"please demonstrate to all of us a common orc greeting.\" \n\n\"Suck my cock,\" the orc growled.\n\nThe valkyries collectively hissed from the crowd, but I held up my hand. \n\n\"That's a very interesting way of saying 'hello;' how do you say goodbye?\" \n\n\"Eat my ass!\" Stink snarled, and spit in my face. Nona and Bianca raised their swords, but again, I held up my hand. \n\n\"Suck my cock and eat my ass; fascinating,\" I chuckled, and wiped the saliva from my cheeks and nose. I smiled at the orc female. \"How do you ask for sex, I wonder?\" \n\n\"I'm not telling you cunts nothin'!\" Stink bellowed. \"Ya'll can feed my turds to your young'uns and drink my fine-aged piss!\" \n\n\"How about I feed you your heart?\" Nona snarled. \n\n\"Nona, please,\" I said, resting my hand on Nona's sword. \"That's no way to treat guests. We've invited these two esteemed representatives of Gratora into our home, and they should be treated with the dignity their station is owed.\" \n\n\"So I should throw them in the waste stream?\" Bianca barked, and the crowd roared their agreement.\n\n\"Bianca, you of all people should have learned by now that\u2014\" And Stink spit in my face again. Bianca punched the orc woman so hard that she flipped onto her back, and Buttercup came charging to his companion's defense only to be launched ten feet by a devastating kick delivered by Nona. The crowd cheered, and I had to scramble to keep my companions from decapitating our guests. \n\n\"Enough! Both of you!\" I yelled, pulling Bianca and Nona off Buttercup and Stink. \"If you can't control your damnable pride, then sit in the audience with the rest!\" \n\n\"Astrid, she\u2014\" \n\n\"She what? Spit in my face?!\" I snarled. \"How many times did you spit in mine last night, dearest friend? I've had much worse of your fluids on me than saliva, and I smiled with them dripping from my chin! Now if you can't control yourself, I am going to suck this orc's cock and make every stuck-up warrior watch until I'm done, and you know I like to take my time!\" \n\nNona eased away from Buttercup, and sheathed her sword. \"High Guard Blackwing, I do not believe that the Bound One is bluffing.\" \n\nBianca frowned, and backed away from Stink. \"Of course she's not.\" \n\nI pulled Buttercup and Stink to their feet, and dusted them off. \"Sorry about that,\" I smiled to them, \"cultural differences and all. You tell me to suck your cock; Nona kicks you in the chest; we all have unique ways of saying 'hello.' Shall we start again?\" \n\nThe orcs looked at each other, then looked at me. \"Did she just call you 'Bound One?'\" Buttercup asked.\n\nI opened my toga to reveal my patterned flesh, and winked.\n\n\"The Earth Former is alive?!\" Stink hissed.\n\n\"I guess you know by now that you'll be taking an extended vacation here at Ofan. Please make yourselves at home.\" \n\n\"Bound One...\" Bianca growled warningly. \n\nI rolled my eyes. \"This was your and Brandon's plan, Bianca. If you don't like it, take it up with\u2014\" \n\n\"The Life Giver is alive too?!\" Stink yelled. \n\n\"Yes, and I'm sure they'll be happy to meet you in good time, but right now we need some help from you two.\" I studied Stink for a moment, then transformed into an exact copy of her. She blinked stupidly, and I did my best to mimic it. Buttercup gawked at me with drool hanging from his tusks, and I turned to him so that I could better mirror his mannerisms. \n\n\"Ok, so we've got the expression of shock out of the way,\" I said. \"How about just a casual stance? Act like you're waiting for a carriage to arrive or something.\" \n\nButtercup continued to gawk at me, though he did also reflexively scratch his balls. I transformed myself into a replica of him, and also began scratching my balls. \n\n\"Am I doing this right?\" I asked him. \"Or does it seem too forced? Is there an angle of your wrist that emotes the casualness of the action, or is it more overt than that?\" I turned to Bianca. \"What do you think?\" \n\nBianca discarded her obvious scorn for dispassionate academia, transformed into Buttercup, and began scratching her balls. \"You know, I think it's up to individual taste,\" she mused. \"I prefer the pinch-and-roll method, so I'd probably stick with that. Anything but what feels natural would appear as an act.\" \n\n\"Pinch and roll?\" I queried, and attempted the maneuver. \"Oh wow, that does feel pleasant.\" \n\n\"I'm surprised you haven't tried it yet.\" \n\n\"Excuse me?!\" Nona yelled. \"Bound One, I believe we have more pressing matters!\" \n\nI glanced annoyedly at Nona. \"High Guard Cloudwhisper, why are you not gathering this invaluable intelligence from an enemy asset? We only have one day! Now scratch your balls!\" \n\nNona glared at me, then transformed into a statuesque muscular green beauty that looked more like a sculpture than a person. \"I will remain female in disguise.\" \n\nButtercup shook himself from his stupor, and sneered at Nona. \"You call that a disguise? You'll have every hot-blooded bull within ten miles sticking his nose up your ass.\" \n\n\"And half the females too!\" Stink added, and licked her tusks. \n\nNona glowered at the pair of them, then transformed into Stink. \"There,\" she growled at her female replica, \"now no man will even look at me.\" \n\n\"Oh shit, got 'em!\" Angela helpfully yelled from the audience, though I could only tell her by her voice, for she was in the form of an old male orc. \n\nI turned toward the stands, and looked out at the thousands of winged warriors. \"Well?\" I called to them. \"Are the fighters of Ofan and Iona now too lazy to properly train for battle? Transform yourselves!\" \n\nIt took a moment for them to get over their pride, but once they had, the field of white and gold-streaked wings turned into a small army of very confused orcs. I smiled, and turned back to Buttercup and Stink. \n\n\"Great. Now, I've got some situations I want to run by you. If a male orc from one clan and a male orc from a rival clan bump into each other, what is the proper display of aggression?\" \n\nANGELA \n\n\"How are you so good at this?\" I asked Justina as I lumbered awkwardly in my new orc body. \n\nJustina shrugged, though the mere act of shrugging her shoulders was a masterclass in thespianism, for there was none of her natural inquisitiveness in the motion; simply ignorance that belied the existential apathy that was pervasive in all orc-kind. \"I've fucked a lot of orcs; what can I say?\" \n\n\"Well I've fucked a lot of valkyries,\" I said, and transformed into an Ofanian, \"but if I take one awkward step, everyone will think I'm the retarded cousin they keep in the closet.\" \n\n\"You must adopt the character up here,\" Justina tapped her head. \"It's something I learned while studying the mating habits of the Western Highland Squirrel. If you don't believe in yourself, no one else will.\" \n\n\"Inspiring words,\" I grumbled, and transformed back into my own body. \"Willowbud and Astrid recognized me by just my eyes, and neither of them had ever seen me before.\"\n\n\"Julia mistook you for her own daughter.\" \n\n\"Yeah, well Julia's kind of fucking stupid. Her daughter on the other hand... I am so fucked if Diamond sees me. That bitch and I shared a brain once.\"\n\nJustina patted me on the shoulder. \"Angela, I believe you've solved your own problem.\" \n\n\"What?\" \n\n\"You will play my retarded cousin.\" \n\nI laughed, and then sighed when I looked out at the stadium of valkyries, all of whom would never be mistaken for anything but what they were. \"Maybe I can play a retard\u2014\" \n\n\"Not much of a stretch for you.\" \n\n\"Fuck off. As I was saying, maybe I can play a retard, but right now we have two-thousand spies who cannot physically lie. We are so boned. This plan was stupid.\" \n\n\"We're not spies; we're insurgents. We're not going to Gratora to glean information.\" Justina worked her bearded jaw for a second, her tusks seemingly bothering her. I could tell she was contemplating something, but with her underbite so pronounced, she couldn't bite her lip as she would. \n\n\"What is it?\" I asked. \n\n\"I killed something this morning,\" she said. \"It was just a falcon. I killed it for no other reason than to practice killing, and it made me sick to do it. I'm no killer, Angela.\" She looked at me, and there was fear in her eyes. \"My mother is a killer. She's one of the greatest there ever was. It doesn't matter how much magic your brother stuffs into me; you have to be a killer to face a killer.\" \n\n\"We're not going there to kill her.\" \n\n\"You don't understand!\" Justina growled. \"Mom is the linchpin of the whole plan! If we can't convince her to come to our side, she'll sell us out to Julia and Diamond!\" She clenched her fist in front of my face. It was quivering terribly. \"Corruption stole everything in Mom that cares about me! All she knows now is strength and weakness, so what do we have to offer her?!\" She dropped her fist to her side, and let out a shuddering breath. \"The plan isn't stupid; just one part of it is. Willowbud and Gloria are right.\" Justina looked up at me, and there was something between anger and admiration in her eyes. \"I know you better than anyone; better even than your brother knows you. I've been in your mind. I know what you can do.\" \n\n\"No,\" I said, and put a hand on Justina's broad shoulder. \"I won't.\" \n\n\"But you can,\" she hissed. \"You might not have killed, but you're a killer.\" \n\n\"Hey!\" I snapped. \"That's not going to fucking happen!\" \n\n\"You talked to me about Willowbud's contingencies. We would be stupid not to make our own.\" Justina grabbed my hand, and held it tightly. \"Promise me, Angela. Promise me you won't hesitate.\" \n\nI stared back into her eyes, and wished I could find some doubt in them to upend, but there was nothing but resolution. \"Brandon and I will make sure it never comes to that,\" I said, \"but if it does, I won't hesitate. I promise.\" \n\nJustina nodded, and blinked away a tear. \"Thank you.\" \n\nBRANDON \n\nI rubbed at my brow, and looked over the map of Gratora. According to Bianca's report, there was a great fire last night over the subterranean city of Droktinar, the smoke obfuscating everything for miles. She speculated that Julia had made good on her promise to light the ancient furnace, which meant the horde would likely stall before advancing to the pass. \n\n\"We could use the extra time to refine our plan,\" Willowbud suggested. She and I were sitting alone in my office, though to keep Angela happy, I'd left the window open for her to snoop on us. I didn't even have to glance out at the amphitheater to know her eyes were on me; she made it quite clear with her frequent telepathic interruptions. \n\n\"We could sit here forever and never come up with a perfect plan. We're not revising it, Willowbud.\" \n\nShe ran her hands through her white hair, and groaned. \"Go over it one more time.\" \n\n\"Angela says Tera's carriage rides about a half a mile from the front. Our entire force will infiltrate the horde from the back disguised as straggling orcs. The Ionans under Nona's leadership will disperse into the crowd, while Angela, Justina, the Ofanians and I move through the center toward Tera. Julia will be out in front, and Diamond is likely to be there as well. We should be able to avoid them.\" \n\n\"Assumptions aren't a great strategy when working with Corruption. How many times did I pop up at very inopportune moments?\" \n\nI smirked. \"You had an uncanny way of knowing exactly when I was jacking it.\" \n\n\"I just found it weird that you'd sneak off to rub one out in the middle of a whore house.\" \n\n\"Jacking it isn't about sex; it's about quality alone time with my penis. If you were a real man, you would've understood.\" \n\n\"Male-bonding was rather difficult when your cock was nine inches up my cunt.\" \n\nBrandon, if you keep letting your nine-inch best friend steer this conversation, I am going to have to separate the two of you, and I don't mean you and Willowbud, Angela growled in my head. \n\n\"Anyway...\" I said, diverting our attention back to the map, \"...Tera will smell all the gods and valkyries that just infiltrated the horde, and realize shit is about to hit the fan. Knowing she'd likely have to answer some very pointed questions if she were to run back to Julia, the gamble we're taking is that Tera will try to escape. Justina will track her down, and we'll extract her as fast as possible. Once we have her, the Ionans and Ofanians will launch their attack.\" I drew a path to the north of Droktinar. \"You and Astrid will position yourselves here, and shadow us from a distance. As the insurgent valkyries drive the battle toward Droktin's Pass, you will move with the horde until Julia and Diamond enter the mountains. Once they are a mile in, you slam it shut, and game over.\" \n\nWillowbud tapped her lips. \"What if Julia and Diamond don't go in at the same time?\" \n\n\"Julia's the priority. Diamond's the god of water in the middle of a desert; we can take her. I don't know if we can take Julia together even if Diamond is dead.\" \n\nWillowbud looked at me darkly. \"We can't.\" \n\nI swallowed the bit of fear that had risen in my throat, and looked down at the map just to break eye-contact. \"You will stay in constant telepathic contact with me. From this position here, you should have direct line of sight across the whole horde. I will not make my move until I hear confirmation that you're ready. If something unexpected occurs, I'll improvise to the best of my ability to accomplish our primary initial task, which is getting Tera out. If I cannot do this, then Angela, Justina and I will rendezvous with you outside of the horde and come up with a new strategy. Whatever happens, and I mean whatever, you cannot reveal yourself.\" Now I looked levelly at Willowbud. \"That is nonnegotiable. Angela told me you were planning contingencies.\" \n\n\"It would be stupid not to.\" \n\n\"It would be even stupider to reveal yourself for my sake. This is the world we're talking about.\" \n\nShe nodded, reached into her belt, and tossed a knife onto the table. \"Have you ever been tortured before?\" \n\n\"Only if you count the things Tera did to me.\" \n\n\"I've been tortured. I've also done a lot of torturing. I was very good at it.\" Willowbud picked up the knife, and grazed it across my fingers. \"I could break the bravest man in minutes. You made suicide capsules as a contingency, but a good torturer will always leave a glimmer of hope. They'll let you bargain and beg for a while; they'll take away pieces of you that you can rationalize living without. A finger, a toe, a nipple, an ear. You can still live a good life with one of those missing. Little by little, they'll raise the stakes until you're right at the brink. The pain is unbelievable, but it's the horror that's worse. The horror comes with the realization that one more missing finger won't let you play the lute anymore; one more missing toe won't let you dance anymore; one more missing eye will leave you blind. And you'll realize with that capsule in your mouth how much you love life now that it's slowly being taken away from you, so you won't bite down. You'll talk. It's only after you're done talking that the torturer will really have her fun with you. That's when you'll bite that capsule, Brandon.\" \n\nI gulped. \"Hello, Night Eyes, it's been a while.\" \n\nWillowbud didn't laugh. \"I trust the valkyries to do their duty and bite down; they've been trained to die for us since they could walk. We're not like them. Even when I hated myself\u2014and oh, have I hated myself\u2014I could never do it. That's why I'm making contingencies.\" \n\nJULIA \n\nIt was midafternoon when I got back to the horde. There seemed to be more hubbub than usual, no doubt due to the rapturous proclamation I'd made the night before. I did love how excitable my orcish followers were. I always thought the rapture would be a solemn passage in history, but I was pleasantly surprised to be wrong. Of course it should be a joyous occasion; we were finally enacting the last will of God! I knitted my fingers, and pondered from afar if I would join in the revelry. There would be ale and wine, dancing and singing, pork off the bone and great mounds of beef. And yes, there would be sinning. There would be gambling, sex, fighting rings, and drugs. I would be duty-bound to punish the aggravators, and put an end to the festivities. I smiled ruefully to myself. They could have this day and this night to themselves. After all they had done for God, surely even the Holy Mother could shake her head, and chuckle fondly upon the mischievousness of her loving children. So I turned away from the revelry, and walked toward the lone carriage resting before it all. \n\nSister Tera was sitting by herself, puffing on her pipe. All of her Breytan prisoners were gone, and the long conga of slaves she kept with her were nowhere to be seen. \n\n\"This is a strange place for my director of sin to be,\" I smirked at her from the doorway. \"Taking the day off?\" \n\nShe glanced at me, furrowing her brow to accentuate the fresh scar between them. \"After yesterday, I think I deserve one.\" \n\nI blushed, and played with my fingers. \"I'm... I'm sorry about how I treated you. I never should've doubted you. You've proven your worth tenfold.\" \n\n\"Yay for me,\" she muttered, and continued sucking on her pipe. \"It's a little early for your confession, Sister.\" \n\n\"I'm taking the day off too.\" \n\n\"Then I'll wash your sins away tomorrow,\" Sister Tera said, and returned her attention to her pipe. \n\nI swallowed the ball of anger that rose in my throat. \"Please, Sister,\" I asked softly. \n\nSister Tera donned a pair of reading glasses, pulled out a magazine with her hooked hand, and nonchalantly paged through it. \"I don't want to clean up the mess.\" \n\n\"You're punishing me.\" \n\n\"I'm doing quite the opposite.\" \n\nI chewed on my lip. \"What do you want?\" \n\n\"I thought it was pretty clear from the location of my carriage that I wanted some solitude.\" ",
        "I swallowed. \"I'll have sex with you. Vaginally.\" \n\nNow I had her attention. She regarded me from above her spectacles, scrutinizing me like Mother Septina used to when I was a child. \"Hypocrisy and religion are quite like peanut butter and jelly, aren't they? Men find it hard enough to be faithful to their wives, so I can't imagine the agony of those who have assigned their faith to a woman they can't even fuck. Should I dress as an altar boy for you?\" \n\nI burned from head to toe. \"Please don't ridicule me. I'm already ashamed enough.\" \n\n\"I won't indulge your fetish for humiliation,\" Sister Tera said, and returned her attention to the magazine. \"For once, I'd like to be seduced. I believe I've earned it.\" \n\nI shifted awkwardly. \"I'm not much of a charmer, I'm afraid.\" \n\n\"You don't say.\" \n\n\"I've never had to approach a woman before.\"\n\n\"You could try growing some balls.\" \n\nI fiddled with my hands for a moment longer, then walked with trepidation across the room, and sat across from Sister Tera. \"You're beautiful.\" I said. \n\n\"I know,\" she replied, and sucked on her pipe without looking. \n\nI squirmed in my chair. \"Um... you look like you could use a drink.\" \n\nWithout a word, she pulled the flask from her hip, took a swig, and continued reading her magazine. \n\nI scowled. \"You're uh... you're being really cold right now. I could... you know... warm you up.\" \n\nShe snorted. \"Holy shit.\" \n\n\"Please don't make fun of me,\" I grumbled, and shifted in my seat, resetting myself to the task at hand. I didn't know how men did this; it was excruciating! \"I... um... I... look... I've got a big fat penis.\" \n\nShe closed her magazine, and looked up at me from her glasses. \"And you have my attention. There, was that so hard?\"\n\nI gawked stupidly at her. \"There's no way that would work on anyone but you.\" \n\nShe smirked wickedly. \"You'd be surprised how far a big fat penis and some confidence will take you.\" \n\nShe was gentle with me that afternoon. After guiding me to the bed, she bid me to stand while she got to her knees. With her violet eyes alight, and her black sclera gleaming, she coiled her serpentine tongue around my shaft, and consumed me gluttonously, humming her moan behind her rotating lips, watching me with those evil eyes. Then, to my surprise, she got on her back. Her black hair curtained one side of her face, and she beckoned me with a leering finger to enter her dripping purple netherlips. I mounted her, and readied myself at her moist entrance. She drew her hands up my curves and framed my face with surprising tenderness; the fingers of one hand cupping my cheeks, the hook of the other drawing lasciviously up my throat. I kissed her delicate digits one by one, then turned my face to wrap my ruby lips around the dull point of her metal hook, and wet it with my saliva. When she was satisfied, she pulled from my mouth, slid a trail of spit down my back, parted my succulent buttocks, and pressed the dull tip of her metal hook to my hot winking aperture. I bit my lip with anticipation as she added the pressure, then gasped when my sphincter enveloped the dull point. She curved her wrist, digging inward until she pressed against my prostate, and my anus swallowed the last of the curve. I expected her cruelty, but she did not proceed with her torture. She simply held me static, and waited for me. For a moment, we just stared at each other, frozen at the last precipice of equanimity. My eyes fell upon her plush purple lips, inviting and parted, breathing her sweet breath evenly. Sister Tera had kissed me before\u2014usually to collect the nectar a man had deposited in my mouth\u2014but I had never initiated. Slowly, I lowered my lips, and pressed them to hers. Her snakelike tongue wrapped me, her plush lips drew from me, and with her one hand snaked in my crimson hair and her hook secured inside of me, she locked her legs around me and bid me to thrust. \n\nIt was near dusk by the time she was sated, and I was so spent that my penile flesh was spongey and swollen. She caressed it with her one hand and laid beside me, molding her warm body to mine as the desert day heat transitioned to the frosty arid night.  \n\nI ran my hand up the curve of her back, marveling at the softness of her flesh. \"What do you want from me?\" I asked her. \n\n\"What do you mean?\" she asked. \n\n\"A snake doesn't change her nature just because she's threatened; she just changes her tactics.\" \n\nShe frowned and rolled to her side, leaving the memory of her warmth to fade upon my flesh. \n\n\"I'm sorry,\" I muttered. \n\nShe didn't answer me, but reached toward the tabletop, and took her pipe off of it. After packing her bowl with opium, she rested against the cushioned alcove, and watched me through a plume of smoke. \"I needed to know you needed me,\" she said. \n\n\"Why?\" \n\nShe again ignored me, and instead busied herself with poking at the smoldering drug in her pipe. After she was satisfied, she extended the pipe to me.\n\n\"No,\" I said. \n\nShe scowled at me. \"God sent me to you so that your sins could be washed. No one else in the world can provide you with this cleaning release. When you're beneath my roof, you're in commune with God, and I am the only priestess here who counts. Smoke this; I can cure the addiction afterwards.\" \n\nI glanced anxiously at the presented pipe, then clasped my fingers around the stem, and brought it to my lips. I had never smoked before in my life, and so the sudden rush of heat in my lungs sent me into a fit of hacks, each expulsion punctuated by a billow of blue smoke. By the time I was done, a numbing euphoria had begun to creep into me. It suffused my limbs, warmed my flesh, and brought tears of joy to my eyes. I swayed on the bedding, then swooned onto Sister Tera's lap. Her thighs were heavenly pillows for my head, and her fingers through my hair were hypnotic, sending felicitous tendrils into my scalp. \n\n\"I can't feel my face,\" I tittered drowsily. \n\nSister Tera chuckled like a doting mother, secured her hook and hand into my armpits, and brought me snuggling to her bosom. Her purple nipple greeted me, and I was compelled by some primal comfort to suckle from it. She purred sensually as I nursed, and her wonderful fingers continued their dance in my mane, deepening the trance I was in. \n\n\"I am a snake, Sister Julia,\" she said softly in my hair, \"but I am a loyal snake. I needed to know you trust me as much as I trust you.\" \n\n\"Why?\" I whispered against her nipple, looking up into her black and violet eyes. \n\nShe parted her lips to say something, then paused for a long time. Finally, she said, \"your daughter plans to betray you.\" \n\nI blinked slowly up at her. \"What?\" \n\n\"She came to me this morning. She told me to meet her tomorrow at the Trinity Uplift. I don't know what her intentions are, but I know what her endgame is.\" \n\nI shook my head slowly, my thoughts moving like molasses in my mind. \"No...\" I muttered, \"...no, no... that doesn't make any sense. You're wrong.\" \n\n\"I'm not!\" Sister Tera hissed. \"Have you seen her since you left her this morning? What do you think she's been doing all day behind your back?\" \n\nI studied Sister Tera's face through the fog of my addled eyes, and sucked slowly from her nipple. \"Diamond is my flesh and blood,\" I whispered, \"she is the vessel of the seraph. She would never betray me.\" \n\n\"Diamond doesn't even believe in God. She thinks this whole thing is a joke. She wants to take over for no other reason than it amuses her to do so. Even as we speak, she is breathing the seraph's gift into your followers.\" \n\nI frowned. \"No... no, she can't do that. Only the worthy can be given the sight.\" \n\n\"She doesn't care!\" Sister Tera whispered urgently, clasping my face with her hook and hand. \"She will bless the entire horde if it means she gains control!\" \n\n\"The entire horde?\" I laughed tiredly. \"That would take years to do, Sister.\" I snuggled sleepily into her soft breast, and contented myself with nipple. \"Even if she is trying to subvert me, what can she do?\" I mused. \"My bond with the seraph is eternal, and my power infinitely exceeds her own. She is but the chalice, and I am the flame.\" Sleep began to take me. \"I could've been both,\" I muttered. \"I should've been both.\" \n\n\"Sister Julia!\" Sister Tera snapped, and pulled my head up before I could nod off. Though her pupils were so small, her eyes were urgent. \"Remember what I told you! Remember who to trust when it happens! I'm begging you to remember!\" \n\nI smiled drowsily back. \"You've proven your loyalty, Sister Tera. Whatever Diamond's juvenile ambitions are, they will pass, and no harm will come to you by my hand or hers. I swear it on the Holy Mother.\" \n\nShe let out a relieved sigh, and set my head back down on her breast. \"Thank you,\" she muttered. \n\n\"No, thank you,\" I mouthed around her nipple. \"You have been my rock throughout this tumultuous journey. I praise god every morning that she sent you to me.\" As the comforting darkness of slumber began to seep into my mind, a single thought held the tide at bay. \"Sister Tera?\" I inquired. \n\n\"Yes, Sister Julia?\" she asked gently, tickling the nape of my neck. \n\n\"When we went to the ruins of Hektinar, you scavenged the melted towers for treasure. Did you go to the old university?\" \n\n\"What was left of it, yes.\" \n\n\"Did you find any books?\" \n\n\"Just one Gloria wanted me to get. An old empire book called 'the Broken Bridge.' I figured it must be worth a pretty penny.\" \n\n\"What's it about?\" \n\n\"I don't know. It's encrypted.\" \n\n\"Oh,\" I said, disappointed for some reason. I resigned myself to blissful sleep when another thought nagged at me. \"Sister Tera, when you and the others were trying to find out about the seraph, did you ever hear the name 'Vitanimus?'\" \n\n\"No. Why?\" \n\n\"It's not important,\" I yawned, content with my ignorance for now. My cheek molded into Sister Tera's soft bosom, and the arms of slumber took me gently down into their depths. \n\nDIAMOND \n\n\"Bla!\" I exclaimed, and spat the taste of the orc's mouth into the sand. The big fat brute wobbled on his knees as Corruption's gift took him, then his black eyes clarified. He let out a jolly whoop, jumped to his feet, and began dancing with surprising agility into the horde of orcs, where he was immediately impaled and gutted by two other corrupted beasts. Darn, I liked him. \n\n\"Next!\" I yelled, and a young teenage she-orc came strutting toward me. This one would definitely be one for the harem. I placed my lips on the mouth of the woman who would soon be named 'One-Hundred-Thirty-Six,' and breathed my gift into her. She tensed as the euphoria took her, then went languid in my arms. After blinking her eyes back to clarity, she gazed up at me, and I saw her intentions clearly. I sighed, blew her brains out the back of her head, and tossed her corpse onto the mounting pile of my would-be murderers. \n\n\"Alright!\" I yelled to the line. \"If you are a member of a cannibalistic tribe, please take one step to the left!\" \n\nAbout thirty of the morons shuffled out of line, and I sent a water bullet through them, dropping their bodies into the sand.\n\n\"Jeepers-creepers, Aiko,\" I groaned to the stoic valkyrie beside me, and rubbed my brow. \"How many have I done so far?\" \n\nThe samurai checked her notes. \"Five-hundred and twenty, Water Dancer.\" \n\n\"That's it?!\" I exclaimed to the darkening sky. \"This is taking forever! I'm going back to the tent!\" \n\nAiko slapped me hard across the face, then returned to her neutral stance like she'd done nothing at all. \n\nI rubbed my cheek, and glowered at her. \"I suppose I told you to do that if I started procrastinating again.\" \n\nShe nodded. \"You did, Water Dancer, and I am very sorry.\" \n\nI grumbled to myself, and returned my attention to the long line of eager worshipers. Corruption was compelling me to spread her gift to them, but every time I did, I was left with a nagging feeling of dissatisfaction. What was I doing wrong?! I had infected all of Voda by using Xaya, but there was no omnipotent being here to make an easy shortcut. It also didn't help that my agenda for corrupting all of these orcs was out of line with Corruption's, and the seraph in her high castle wasn't too happy with the thoughts she saw sprouting in my mind. \n\nYou don't control me, I thought with a snarl. I own you! Remember that! \n\nThere was of course, no response; only that nagging feeling of dissatisfaction that I could never quell. No amount of lustful distraction in my tent would kill the feeling, nor murderous rampages through the horde. Only when I passed my gift to some mouth-breathing orc would I feel an iota of peace, but it ended the moment my lips parted from my victim. \n\n\"Next!\" \n\nWoman after woman, man after man, child after child. I blessed them until my lips were chapped, and had to pull moisture from the air to make them plush again. After five-hundred more, the pile of bodies beside me had grown to a veritable mound of gore, the ranks of my harem had swelled past two-hundred, and there was still an endless line of eager idiots stretched along the dunes and into the darkening horizon. \n\n\"What do you want?!\" I screamed to the sky. \"You want me to do every single one of them?! How about I just kill them all?! That would be much easier for me!\" I whirled on my heel, and marched straight for the tent. \"I need to go pee!\" I yelled before Aiko could slap me again. \"Go down the line and pick out the sexy ones for when I come back!\" \n\n\"I do not know what a sexy orc looks like.\" \n\n\"No oldies and no fatties!\" I growled back at her, and burst into my harem tent. My corrupted slaves were still going at it even after ten hours, and I had to dig through the pile of writhing orc flesh before I finally found Seven. I dragged her by the arm to my private room in the back, and flicked an astral gemstone that hung over the threshold, muting all the sounds outside. Seven tidied herself in the mirror to the best of her ability, then got on her knees before me, and opened her mouth with a wide and expectant smile. I levelled my cock, and let my bladder go with a relieved sigh. The stream of piss shot from my tip, and cascaded between her pretty teenage lips, filling the chalice of her mouth until it overflowed from her lips and nostrils and cascaded down her chin, throat, and breasts. She gurgled her moan of approval, her wide hips shimmying in delight of the debasement, her back arched to direct the path of overflowing urine so that it washed over her front. She touched herself all the while, joining her hands between her thick green thighs to toy with her salivating slit as my golden fluid ran down her belly, and to her crotch. I finished with a little shiver of satisfaction, and shook my penis of the last droplets, splattering her pretty nose and cheeks. I was about to tell her to flush when I paused. The nagging feeling was gone. I glanced down at Seven. I watched the golden pool spill from her open lips, and the revelation dawned on me. \n\n\"Oh, I get it,\" I whispered. \n\nSeven cocked her head questioningly, a small volume of my urine running down the corner of her lips. \n\n\"Flush,\" I commanded, and she turned her head to the ceiling, gurgled, and swallowed. With an excited little smile, she turned her head back to me, awaiting more abasement. Instead, I bowed to her level, took her proud jaw in my hands, and raised her lips to mine. I kissed her tenderly, and as her tongue came out to play, I poured Corruption into her already-blackened soul. She moaned in my mouth, tilting her head to receive me, breathing deeply to take the vile euphoria into the bottom of her lungs. It overflowed from her nostrils, poured from her eyes, beaded her sweat and darkened her saliva. I extracted myself from her plush consumption, and ran my thumb along her parted lips. She stared back at me with eyes so blackened that her irises were gone. \n\n\"Go, my diseased little toilet,\" I whispered lovingly to her, and pissed out the final volume of my bladder into her gaping black mouth, \"spread the word of God.\" \n\nSeven stood up without a word, and walked through the flap. A moment later, I collapsed onto the floor. \n\nInterlude Two: Message \n\nCORRUPTION\n\nI tore through Diamond's memories, looking for everything I could find about the Earth Former. Diamond's entire mission to the astral plane had been to extract me from her, but goddamn it, it wasn't me who had taken her! I couldn't remember a fucking thing about her! Diamond's memories of Willowbud were scarce at best; a confrontation in a Drastin dead-end, and a short meeting of gods that she'd left early. There was nothing else. Just little tidbits of hearsay she'd gotten from Angela as Diamond traversed between realms. Just enough for me to know how dangerous this Earth Former was. She had cast Petranumen out twice. She had formed a memory of Guilt in Petranumen's mind. She had inoculated herself of me. She was immune. The scars she'd left upon me were reason enough to be terrified of her, but what chilled me to the bone wasn't what she could do to me. With just a flick of her wrist, Willowbud could kill my beloved, and me with her.\n\n\"Stupid bitch!\" I snarled, and punched the ground. \n\nXaya looked up at me, confused at my outburst.\n\n\"Why?!\" I screamed at Xaya. \"Why must these mortals dally about with their meaningless sense of purpose?! Can't they see that life means nothing if death is always coming?! Why do they live at all?!\" \n\nXaya blinked at me for a moment, then recommenced lounging in the astral sun. \n\nI looked back at the visage of Willowbud. She was lounging on a boy's lap, smirking at Diamond from across a room. The leaves that made up her hair were lighter than the ones that made up her flesh, and the two flower buds that made up her eyes were obsidian, dotted with a green ovule. I pushed my hand into the dirt, and grew a plant of my own. The vines branched to form words, and those words read, 'Willowbud is alive.' I stepped back, and waited for my message to take root in her mind. It didn't. The vines lost their shape, grew past the constraints I'd put upon them, and became as wild as the rest of the foliage I'd seeded in this realm. I could send no message. This was not my mind. \n\n\"I need a messenger,\" I muttered. I looked to Xaya, then immediately looked elsewhere. The creature that had once been Wisdom couldn't form a single word any longer. Who could I contact?! I could wait for Julia to go to the Goblin Mines and tell her then, but...\n\n\"Droktin's Pass,\" I whispered, and felt a chill crawl through me. Where else would the Earth Former be waiting? Just a day's journey away. I scrambled to Diamond's entrance, flung the gate open, and stepped into the jungle beyond. Diamond appeared in a flash. Without hesitation, she sprinted right for the iron box, and Xaya nonchalantly tackled her. \n\n\"You wretch!\" Diamond screeched at me. \"I'll take her back from you! I'll leave you to rot alone if it kills me, I SWEAR IT!\" \n\n\"Willowbud is alive!\" I screamed back, but Diamond couldn't hear me. She just raged against Xaya and shrieked at me, tears running down her cheeks, pure hatred in her purple and green eyes. I stepped back into the realm, and she disappeared. Xaya looked around the empty space beneath her with confusion, then shrugged, and crawled back into the trees to lounge. \n\nI rested against the gate, and let out a shuddering breath. I could do nothing. I was trapped once more. I could only sit around and wait fatalistically for death to... for death to... hmm... \n\n\"Death isn't always the end,\" I mused to myself, and looked up at the stars. I stared at the dimmest light in the sky. \"Where are you, Angela?\" I asked the perpetual twilight. \"And who is with you?\" \n\nPart Three: Can't Sleep",
        "JUSTINA\n\nOfanians weren't birds, but they did nest. These nests weren't made of straw, but of large comfortable notches in the trees. The notches were cavernous enough to house a large bed and a chest for wares and clothing, though Ofanian clothing consisted of a few assortments of togas, hardly enough to fill the large chest each woman had in her nest. Some of the chest's volume was devoted to instruments of war, but at least half of each chest was devoted to instruments of... leisure. The winged warriors of Ofan had masturbation down to a science. \n\n\"This was one I precured from a dwarven vendor,\" Deja said, holding a stout dildo up for display. \"He told me it would best mimic the organ of a nymph male.\" \n\n\"Not the right curvature,\" I said. \"That's much more like a goblin.\" \n\n\"Oh?\" Deja mused, inspecting it. \"I never pleasured myself to a goblin fantasy before.\" \n\n\"You'd need about a dozen more for that; they like to team up.\" \n\n\"Fascinating,\" Deja said, looking at it from a different angle. \"They are such small creatures, yet they boast such impressive organs. You will have to take me to the Goblin Mines after this, so that I can test if your claim is true.\"\n\n\"That's a hell of a thing to hear from a valkyrie, even a sexually-liberated one.\" \n\n\"All in the name of science, of course,\" Deja smirked crookedly, and put the toy away to show off another one. \"This one I got from some of the mountain men to the north. They claimed it is used as a fertility tool for their females.\" \n\n\"That's a butt-plug.\" \n\n\"It is?\" Deja said, blinking at the item. \"I guess that makes sense. It wouldn't be a very good fertility tool if it was blocking the front entrance. I will have to see how effective it is. Now this one...\" Deja said grandly, and pulled out an oak box wrapped in satin cloth, \"...this is my most prized possession. It was handed down to me from my mother, and her mother, and her mother before her.\" \n\nI suspected a normal person would've guffawed at that statement, but at least in this regard, succubi and valkyries had something in common. Deja delicately unwrapped the satin cloth, and opened the oak box. She pulled out a bulbous instrument, a shaft with five pronounced bulges, each one larger than the last until the base was nearly the girth of my closed fist. Deja ran her eyes admiringly up the length of the tool, then glanced at me. \n\n\"I would very-much like to watch you use this,\" she said softly. \n\nI blushed all over. \"It would be an honor,\" I whispered, and reverently took the instrument from her hand. \n\nBRANDON\n\n\"Ok,\" I said, taking a deep breath, \"on the count of three, we open our eyes.\" \n\n\"One,\" Angela giggled. \n\n\"Two,\" I said. \n\n\"Three.\" \n\nI opened my eyes, and stared at... me. Well, it wasn't quite me. The nose was a little smaller, the chin a little sharper, and the eyes were set further apart. The man before me was a bit stockier than I was, and his hair had a few more curls. It was like looking at a more handsome version of me, and it pissed me off. \n\n\"You cheated!\" I growled. \n\n\"Did not!\" Angela tittered like a girl, but with a deep baritone voice that put mine to shame. \n\nI gave her a frank look, but she held her face resolutely. \n\n\"I did not cheat, Brandon! I was just born better than you in every way.\" She (he) looked at himself in the mirror. \"Fuck, I would've been drowning in it back home!\" He turned, and gave me a wicked smirk. \"And you would've been the town tunnel after every underclassman ran train on you. Come over here, Brenda.\" \n\nI glowered at my new twin brother, and stepped over to the mirror. The woman who looked back at me had strawberry-blonde hair that was a touch lighter than Angela's, a nose that was a bit bigger, and a jawline that was a little softer. My face was pretty, but not as dazzling as Angela's by any means, and I thanked God that the both of us weren't born female, or I would've spent my entire adolescence hating her guts. Shit, I probably would've pushed her in front of that ox cart myself. \n\n\"Well, you win this one,\" I grumbled. \n\n\"Obviously,\" Ang\u00e9l giggled, and put his muscled arm around me, \"but hey, your ass is still better than mine. You always did have the cutest bubble-butt, and no one can take that away from you.\" He kissed my cheek, and I actually blushed. \n\n\"Thanks,\" I grumbled bashfully, suddenly feeling hot all over.\n\nAng\u00e9l chuckled in my ear. \"Oh, Brenda, Brenda, Brenda... you would've been pregnant after your first period, you slut.\" \n\nI sneered back at him. \"And you would've been the father. Now manhandle me, you brawny stud-muffin.\" \n\nAng\u00e9l giggled in his masculine voice, picked me up in his strong arms, and threw me onto the bed. He apparently didn't know his strength, because I bounced right off the mattress, and summersaulted ass-over-chin into the headboard. My tits smacked me in the face, my legs flailed outward, and I flopped onto my back with a groan. Through my curtain of disheveled hair, I had an excellent view of my brother laughing uproariously at the foot of the bed. A swift kick in the balls sent him sprawling next to me, and we shared a moment of groaning in mutual pain. \n\n\"That was a bitch move,\" Ang\u00e9l growled. \n\n\"You would've done the same, dickhead,\" I grumbled, rubbing the back of my head. \"Now are you gonna eat my pussy, or not?\" \n\n\"You think I'm gonna ear your pussy after you kicked me in the...\" Ang\u00e9l trailed off, and frowned, \"...huh, I actually totally am going to still eat your pussy. What the fuck?\" \n\n\"And now you understand what being a man is really like,\" I sneered. \"Growing a dick and balls doesn't mean shit without the relentless need to plug every hole you can fit it in.\" \n\n\"Oh, I can't wait to leave you empty and unsatisfied,\" Ang\u00e9l growled, and rolled himself atop me. \"Then you'll get the real female experience.\" \n\nI smiled up at him. \"You won't disappoint me.\" \n\nHis expression softened. \"Are you ready to go to pound-town, sis?\" \n\n\"Take me there, bro.\" \n\nAng\u00e9l dipped down, and kissed me. His stubble grazed my cheeks, his lips opened mine, and his tongue extended to placate me. I accepted him with virgin submissiveness, kissing back with trepid movements, playing into the fantasy until it became true. He smiled confidently around our embrace, accepting his masculine role, kissing me fiercely and possessively until I was moaning desperately into his mouth. When my back was arching with need, he broke the kiss, and began pathing his mouth down my body. He licked my throat, and I bowed it to accentuate the vulnerable pleasure. He grasped my breasts, and I murmured my delight. I expected him to continue, but he stopped at my chest, seemingly enraptured by the things squished in his hands. \n\n\"Wow,\" he whispered, rubbing my nipples with his thumbs, \"I never really appreciated how awesome boobs are.\" \n\n\"They're pretty great,\" I giggled, and snaked my hands into his hair. \"Come on now, you've got a job to do.\" \n\nHe flicked one nipple, and glowered at it hungrily. \"I'll get back to you later.\" \n\nAs my brother pathed his tongue down my soft belly, I felt the heat growing between my thighs. It precluded a feeling of vacancy, something akin to a gnawing hunger that made my lower lips salivate. Ang\u00e9l knew very well the sensations I was feeling, for he took his sweet time teasing me. He caressed my inner-thighs back and forth, each stroke nearing my center before retreating back toward my knee. His tongue took a torturous path along my pelvis, his breath caressing the throbbing node of my clit, but never touching it. I moaned my sonorous feminine tones of need, shifted and undulated on the bed, but none of the tricks that would've worked on me worked on him. His blue eyes twinkled deviously up at me, and he continued his torture until I finally wrapped my legs around his head, and forced his face into my crotch. \n\nHis mouth smooshed into my petals, his lips formed a grin, and he parted them to extend his tongue. The tip touched my clit, and I froze, my breath catching. He upended the node with his tongue, teased it from its hood, and began drawing sensual patterns across it. I cried out. His fingers joined the party, running below his chin to caress my slit before forking my entrance open, and plunging the middle digit inside of me. I hissed, my neck striating with tension as I tried to contend with the alien pleasure radiating from my core. It was hopeless. Ang\u00e9l had me blubbering and squirming in mere minutes, all my equanimity thrown to the wind. He pressed his face hard into my pubis, and devoured me from the inside, watching me as I twisted and bent to his every whim until I was arching my back from the bed to expel the great surge of pleasure that had taken over me. It ballooned from my center, reached the tips of my fingers and toes, and then exploded. I exalted to the ceiling, and then collapsed onto the bed.  \n\nAng\u00e9l looked up at me, his mouth filmed with my lust, a sneer on his lips. \"Fucking easy.\" \n\n\"You're such a douchebag,\" I snickered, and flicked his nose. \"I don't know why I'm attracted to it. Fuck, this explains a lot about my teenage years.\" \n\n\"Nice guys finish last,\" he said, and pulled my thighs apart to admire his work. \"In your case, nice guys had to get a sex-change and fuck their brother to finish at all.\" \n\n\"Hmm, I liked your dirty-talk a lot better when you were speaking into me,\" I opened my legs wider, and beckoned him with a grin. \"If you want to continue this conversation, I suggest we do it inside.\" \n\nHe stroked his impressive organ, and laid it across my pelvis to show exactly how much of me he was going to wreck. It was almost touching my navel. \"Did you make yourself a virgin?\" he asked me. \n\nI nodded. \"I want the whole first-time experience.\" \n\n\"Like the first time in a romance novel, or the first time in a snuff piece?\" \n\n\"We'll start with the former, and work our way to the latter.\" \n\nHe beamed back at me. \"I fucking love you, sis.\" \n\n\"I love you too, bro.\" \n\nWILLOWBUD \n\nAstrid held me in her strong embrace, lovingly pinning my arms to my sides, tenderly grasping the fat of my ass and gently spreading my cheeks. Within the intimate feathery shell of her black wings, she dominated me with devotion, pressing me against her pillowing breasts, imprisoning my body with hers as she kissed me with such adoration. Her shaft was long and thick inside of me, pushing through my most vulnerable depths, invading me and conquering me with every powerful thrust. I whimpered and groaned atop her, wiggling to test the boundless strength of her hold, delighting in the way she would not let me have even an inch of power. I needed to feel that from her; my rock, my stalwart protector. Her fangs grazed against my lips as her tongue subdued me, her fingers molded into my fat as her thumbs fondled my winking anus, and her shaft slid slickly through my gripping slit, rubbing my engorged clit, forcing me to feel the surrendering pleasure. When I blubbered and pleaded in the throes of my ascension, her pace was not compelled to quicken by my squeals; she just held me firmly in my imprisonment of love, and drove with long, powerful, torpid thrusts, her balls swinging and slapping against my quaking taint, her weapon impaling me with its methodical rhythm, stringing me out until I was sobbing in her mouth as the ecstasy built, and built, and built. I exploded in her arms with a withering cry, and succumbed to the lassitude of my orgasmic master, growing limp and small as she drove, and drove, and drove.  \n\nWhen the sensations ebbed from me, Astrid unfurled her wings, revealing the last fading rays of sunlight behind the silhouette of Ofan's cratered ridge. They cast golden rays on her lustrous black hair and pale flesh, giving her an aura in congruence with her luminous patterns. Though she was gentle with me, her cock stayed hard and unsated inside my hot sheath, waiting and ready for more. \n\n\"It's not fair,\" I whispered.\n\n\"What?\" she smiled, her fangs showing. \n\n\"I've had a penis all my life, and you're so much more of a man than I ever was.\" \n\n\"You were quite the vicious brute when you were Night Eyes. I swore you might've even had a whisker or two back then.\"\n\n\"And now my balls are just for show.\" \n\n\"Is someone feeling emasculated?\" Astrid grinned wolfishly. \"I think I hear little pleas for validation.\"\n\n\"I was trying to maneuver my way into getting my nuts sucked, actually,\" I chuckled. \"I sometimes miss being able to just push your head into my lap.\" \n\n\"Who knows what could happen with a little confidence?\" she whispered, an inviting glint in her blue eyes. \n\nI blushed a little. \"I'm afraid I'm not that kind of man anymore, Astrid.\" \n\n\"Well,\" she inquired, her pupils turning dangerously reptilian, \"what kind of a man are you now?\" \n\nI wrinkled my nose. \"I knew it was only a matter of time before you asked me to do this.\" \n\nShe wrapped one strong hand around my throat, and squeezed until I was whimpering in delight. \"I don't remember asking you for a fucking thing.\" \n\n\"God, I love you!\" I squeaked. \n\nA moment later, I was lifted from my penetrative hold. I became male for her, my balls already tight with anticipation, my cock rigid and weeping as it slid down her belly with my descent. Her raging tip pressed to my aperture, and she held me there by the throat and thigh, watching me with her wicked slit eyes. Upon trembling legs, I slowly descended, opening my anus around her throbbing head, stretching myself to the beautiful point of pain. We both gasped when my resistance popped, and gravity compelled me ever downward, making me impale myself on her reaming girth, making me feel inch after excruciating inch until my ass pillowed around her crotch, and her soft balls pressed to my tailbone. \n\n\"So,\" Astrid breathed huskily against my gaping lips, \"this is what it feels like on the other end. Gods above, you're so tight!\" \n\n\"Oh, fuck,\" I hissed against her chest, every part of me tense. \"Oh fuck, oh, fuck, oh fuck...\" \n\n\"Willowbud?\" Astrid inquired softly, lifting my chin to catch my eyes. \"Does it hurt?\" \n\n\"Yes,\" I whimpered. \n\n\"In a good way?\" \n\n\"Yes!\" I sobbed. \n\nHer soft expression became hard and merciless, and my throbbing cock curved upward at the sight of it. She filled one of her strong hands with my left breast, and the other with my right buttock, and she squeezed until the delicious pain made a line with the torturous reaming of my rectum. \n\n\"Dance on my pole, you pathetic twink,\" she whispered. \n\nI did. As the last golden sunrays dazzled from my glistening bronze flesh, I gyrated and undulated, moving like a belly-dancer, pushing my ass into my beloved's crotch, drawing circular patterns of cum across her belly with my wobbling cock. I rose and fell, my anus sucking her with every ascension and plunging into me with every descent, the violated fleshy ring becoming a swollen puffy cuff that swallowed her whole. I sobbed and cried out with every impaling, growled and hissed with every twist of my hips, gasped and sputtered with every drive she delivered back to me. We moved in opposition, retracting slowly, colliding suddenly, grinding deeply. Her thick shaft stirred me, gaped me and outturned me, ruining me so beautifully, rubbing against my abused prostate and then moving deeper into my tightest reaches. I uncoiled around her, and she bored ever further, touching virgin flesh as she grew her organ to fill in the places she'd loosened, testing my elasticity until she was the biggest I'd ever had. \n\nI twisted my body around on her shaft, and let her have me from behind. She grasped my breasts with both hands and held me to her, pinning my body between her buxom pillows so that she could deliver powerful drives into my undefendable center. My ass jiggled with every collision, bouncing off her, the shocks of her penetration reverberating deep into my guts, sending the violent pleasure screaming through my synapses. Mindlessly, I fucked myself upon her pole, heedlessly doing damage, gurgling and groaning in surrendered tones of pure hedonism. She moved faster now, blasting into me from below, lifting me off her lap like a doll and burying herself. My cock bounced wildly from my crotch, spewing gouts of cum from my prostate, stringing it from my balls and then whipping it upward to splash against my belly, breasts and face. I couldn't stop coming. It was continuous, building and boiling with in me, sending spasms through my loins that left me gasping. My eyes rolled into my head, my head fell back, and I simply groaned stupidly as my beloved pumped the milk right from my ass, drawing the orgasm to new heights until she herself was taken by it, and she seized me about her midsection, slammed me into her crotch, and burst into my belly with a cathartic scream. \n\nWe stayed in stasis, breathing heavily, our hot bodies joined in a slick embrace. Astrid tenderly lifted me up by the armpits, and her thick organ exited me with a shlock. In my post-orgasmic trance, I could do nothing but mindlessly crawl on the ground between her thick thighs, and worship at the altar of my destroyer. The miasma of my rectum was thick on her gleaming shaft, but in my fugue state, it smelled decadent. She gave me an inquiring look as if she didn't expect me to do it, but I just smiled back up at her, and wrapped my lips around her head. I drew down as far as I could, taking her to the back of my throat, then slurping my way up. So thick was she that my lips were stretched thin around her girth, allowing my tongue to flatten completely against her underside, and lick every wonderful bump and ridge, tasting the delightfully foul concoction of flavors. She sighed pleasantly, and ran her hands through my white hair, doting on me as I did my best. I was getting better, but I was still very far from the skilled swallower of my paramour. To make up the difference, I cradled her heavy balls and pushed a finger into her tight pink aperture, and with my dexterous motions and sensual consumption, I victoriously compelled a torpid flow of lava from her apex. I churned it to froth in my mouth, then climbed the voluptuous mountain of her body, and kissed her deeply. She grinned around our joined mouths, then hoisted me up so that my legs draped over her shoulders. With my cock pressed helplessly against the huntress's face, she showed me her mastery with her lips, fangs, tongue and throat, and brought me to heaven once more. \n\nHours later, I nestled into her bosom, suckling upon her nipple as she shielded me from the world with her great black wings. Her patterns were brighter than normal this night, and strobed with a higher frequency, revealing my anxiety. \n\n\"You need to sleep,\" she muttered, stroking my hair. \n\n\"Thanks for the advice,\" I grumbled, and restlessly repositioned myself in her arms.\n\n\"I know what can help,\" she whispered, sliding her fingers through my crack. \n\n\"It won't help,\" I sighed. \"Every time I close my eyes, I'm wide awake again.\"\n\nShe kissed my brow. \"Worrying doesn't take the problems of tomorrow away; it takes away the strength of today.\" \n\n\"Oh, then I guess I'll just stop worrying then,\" I snarled, and rolled in her arms, trying to find a comfortable position. \"Fuck it, this is hopeless.\" \n\nI wrestled myself out of Astrid's cradling hold, and marched over to the lake. The waters of Ofan's caldera were pristine and still this late in the night, shimmering with the pale moon. I selected a rock from the shoreline, shaped it into a disk, and hurled it at an unseen target across the lake. Instead of striking the stone of Julia's effigy, the sound of a tree being felled echoed across the still waters. \n\n\"Willowbud\u2014\" \n\n\"Don't,\" I hissed, \"I'm not sleeping tonight. I'm gonna keep throwing these fucking rocks until I can hit her without seeing her.\" ",
        "\"What good will that do you?\" \n\n\"It'll keep me awake,\" I muttered, and shaped another rock. \"I can't go to sleep, Astrid; my head's a terrible place for me to be right now.\" \n\nShe was silent for a moment. \"You haven't had terrors for weeks.\" \n\n\"Well, let's just say she's on my mind right now,\" I said, and hurled another rock. It went wide by fifty feet, and exploded against a shale formation. I collected another stone from the shoreline, shaped it, and planted my foot. The sonic image of the surrounding miles filled my subconscious through my heel, and I saw a lone woman walking toward us. \n\n\"Shit,\" I growled, and turned to Astrid. \"Angela's coming. Make her go away.\" \n\nANGELA \n\nAfter tossing and turning for a few restless hours, I'd finally determined that sleep wasn't going to happen. Brandon had done his best to wear me out\u2014using both genders, a few different species, and a creative implementation of octopus tentacles\u2014but even deific-level sex couldn't silence my cluttered mind. I suspected I wasn't the only one, so I journeyed out into the Ofanian rainforest to find sympathy with other restless souls. \n\nI walked between the tall trees, and located Justina's baobab. When I got within fifty paces, I could hear the soft moans of pleasure emanating from the canopy. She was nesting with Deja, and I doubted I'd be welcome. I walked over to Bianca's tree, and heard similar soft sounds coming from the high branches. She and her daughter were enjoying their last peaceful night, and I would not disturb them. I walked past the Ionan encampment, where the thousands of valkyries nested in the treetops, folded in their white wings. I walked along the river until I reached the edge of the caldera lake. There, a dark figure stood in my path, her blue eyes split with reptilian pupils, her patterns thrumming from her pallid flesh. \n\n\"Can't sleep either?\" I asked Astrid. \n\n\"I don't need to sleep anymore,\" she replied. \"Sometimes I'll pretend to for Willowbud's sake.\" \n\n\"Sometimes I'll pretend to when Brandon's asking for anal,\" I snickered. \n\n\"I suspect you don't pretend for too long,\" Astrid snickered back. \n\n\"Oh, I make him work for it. Just because I want it, doesn't mean he's getting it for free.\" \n\n\"And then you bend him over and fuck him in the ass.\" \n\nI burst out laughing. \"Exactly!\" \n\n\"You're a trouble-child, Angela Sorensen,\" she said, and stepped into the moonlight. \"Why are you coming this way?\" \n\n\"I'm just wandering. Is Willowbud awake?\" \n\n\"She is.\" Astrid cornered her eyes to the left. \"She's watching us right now, and telepathically asking me to make you go away. You make her very uncomfortable.\" \n\n\"I don't mean to.\" \n\nAstrid snorted. \"Please, Angela.\" \n\nI smiled humorlessly back. \"How would you feel if I stole Willowbud from you, and had her fuck me in front of you while you sat in the corner and watched?\" \n\n\"Honestly, I'd probably get off to it.\" \n\n\"Not if you knew I was in love with her.\" \n\nAstrid's smile faded, and she nodded. \"That would not please me, no.\"\n\n\"So there doesn't really need to be anything else said.\" \n\nAstrid turned over her shoulder, and stared at the tree-line. Her eyes emoted the silent conversation she was having, and by her expression, it wasn't a pleasant one. Finally, she turned back to me. \n\n\"I think, Angela, that there are still some things that need to be said. Come with me. Now.\"\n\nI almost objected, but the absolution in Astrid's expression was hard to deny, and honestly, she scared me when she was like this. She offered me her hand, I closed my fingers with hers, and we walked into the darkness of the trees. Willowbud was standing by the lake, skipping stones across the water. I suspected she wanted to appear as though she'd been doing it for some time, but I hadn't heard any splashes. She shaped a rock into a thin disk, then launched it across the calm water, sending it skipping dozens of times before it clattered upon the far shore. When she reached for another stone, she acted as though she just realized we were there. \n\n\"Hey,\" she said. \n\n\"Hey,\" I replied. \n\n\"Can't sleep?\" \n\n\"Nope. You?\" \n\n\"Nope,\" she said, shuffling in place. \"How's... never mind.\" \n\n\"How's Brandon? Oh, he's fine. Sleeping like a baby without a care in the world. He thinks we're going to\u2014and I quote\u2014'kick so much ass that we'll be cleaning shit out of our toenails.' I guess ignorance really is bliss.\" \n\n\"Optimism isn't the same as stupidity.\" \n\n\"You and I know better.\" \n\nWillowbud shaped another rock into a disk, and inspected it. \"Astrid thinks that you and I will like each other if we have sex.\" \n\n\"Astrid's clearly never heard of hate-fucking.\" \n\n\"Oh, I'm well-versed in it,\" Astrid replied, stepping between us. \"Willowbud is being obtuse; I didn't ask her to have sex with you. I asked her to talk to you. This needs to happen before the sun rises tomorrow, and it's too late.\" \n\nI looked at the nymph behind Astrid's shoulder. \"I'd rather just fuck her.\" \n\n\"I'd rather be literally anywhere else in the world at this moment, but here we are,\" Willowbud said. \"So, let's talk.\" \n\n\"Fine then,\" I said, and stepped past Astrid toward Willowbud. When she became visually uncomfortable with our proximity, I stopped. \"Well, what do you have to say?\" \n\nShe tried to hide her anxiety with a cough. \"When I first saw you through Corruption's eyes, I knew you were in love with your brother long before he did; maybe before even you did. That's why I did everything I could to keep you from him. That's why you hate me, and I'm sorry.\" \n\n\"Cool,\" I said. \"So when this is all over, you can find literally anywhere else in the world to be. Stay away from Brandon, and you and I will never have to have this conversation again.\" \n\n\"Angela...\" Astrid growled behind us. \n\nI ignored her, and continued looking at Willowbud. \"I'd say that's fair.\" \n\nWillowbud nodded slowly. \"I'd say so too.\" \n\n\"Great,\" I smiled coldly, and turned around. \n\nAstrid grabbed me by the arm. \"Division is a greater foe than the enemy,\" she hissed.\n\n\"Don't mistake unity with harmony,\" I hissed back. \n\n\"You will regret walking away from this.\" \n\nI smiled balefully at her. \"What did you expect, Astrid?\" I pulled my arm away, and walked into the darkness of the trees. \n\nI walked past Deja and Justina's nest, then past Bianca and Arya's. The night still felt so young, but it was somehow over. I paced around Ofan, trying to find some distraction, some penultimate catharsis before I had to face tomorrow. \n\n\"I do so love to see stupid country girls walking alone at night,\" a husky voice said from the darkness, a pair of blazing red eyes staring at me. Gloria emerged from the shadows, naked and splattered in the blood of some fresh kill. \"Sometimes, I like to read the local papers the next day just to have a little giggle knowing they're skewered alive by meat-hooks in my basement.\" \n\nI shrugged my shoulders in a display of vulnerability. \"Can you help me, Miss? I'm lost.\" \n\nGloria chuckled, and sauntered over to me. \"The allure is gone now that I know how you taste,\" she took me by the chin, and elevated me to gaze at my throat. \"You never were innocent. You haven't been innocent since the day you died. You're a huntress, and like me, you're searching the night for something to squeak when you bite it.\" \n\n\"Maybe you can help me find it,\" I whispered. \n\nHer smoky eyes twinkled back. \"Vampires hunt alone; we're not too keen on sharing.\" She turned her gaze to the wildlands that surrounded the tropical peak. \"I spent far too long in Drastin whittling away my days playing a gangster. Civilization is domestication for a predator. I lost myself in those stone streets and alleys; I'll look to find myself once more in the heat of the jungle.\" She smiled at the moon. \"We build a shell around ourselves the longer we stay in a cage. We build it until it becomes the cage, and we self-identify with it. When you run through trees and crawl through mud, you wear away the calcified shield. When you smell blood and bite through flesh, you scrape away the last of the veneer. When you don't even know your own name, Angela, that is when you know who you truly are.\" \n\n\"What are you talking about?\" \n\nShe giggled almost girlishly. \"You will never understand, for you are no true vampire. You are no one without your brother, which is why you are so lost now. Go back to him, and find yourself before tomorrow.\" \n\nIn a flash, she disappeared into the night. I frowned, and shivered a little, though it was still quite balmy out. I looked over my shoulder to the baobab where Brandon slept, and walked to it. \n\nInterlude Three: Serenity \n\nCORRUPTION\n\nI stepped through Diamond's gate without looking back. I heard her shriek of rage, then I heard it be silenced by Xaya. Rocks floated from the vined floor of the jungle, pulling the roots and tendrils of the foliage up with it, upending the soil that had become so thick. I walked up the steps, and the forest floor rose with me. It became a hill beneath my stepping stones, rising from its previous position like a wave that crested at my pace. It followed me all the way up to the dimmest star, and to the gates of Serenity. \n\nAngela's realm was by far the most modest\u2014even more modest than Modesty's, who was ironically quite arrogant of her own humility. The realm of Serenity was only bordered by a short flagstone wall, and the gate was a charming wooden slab of picket on a well-oiled hinge. I opened it, and was presented with a scenery of pastoral simplicity. Quaint rolling hills, welcoming oak trees, a babbling stream twinkling in the yellow astral sun, disturbed only by the gentle creak of a mill's wheel that sat beside a darling cottage. I pushed my foot into the soil, and in an instant, everything was consumed with my jungle. The cottage was eaten from the inside out by a snarling tree, the stream was turned into a raging river, the hillsides and fields were ravaged with violent displays of flora and fauna. But I could not take this mind, not when the host was gone. Just as my great jungle did nothing to mankind's cognizance, this reimagining of Angela's realm was but a cosmetic change. Still, it did help me understand it better. It let me see her darkness, and Angela Sorensen was far from pure. \n\nI sat on the soil, and observed the memories around me. I sat for a very long time. Some of the revelations concerned me, some of them horrified me, but as I got closer and closer to the present, the fear slowly began to fade. My darkness touched many of Angela's memories, and the memories of one person were so blackened that they appeared to be burnt right out of the landscape. I touched the face of one memory, and a smile slowly broached my scarred lips. Indeed, unity and harmony are not the same thing, Angela.\n\nPart Four: Trinity Uplift \n\nDIAMOND \n\nJust as the dawn crested the Gratoran Wall, I floated to the top of the Trinity Uplift, and marveled at my work. Corruption had spread like a plague to her willing hosts, and had turned the already-disorderly ranks of orcs into chaos. The beauty of the epidemic was that there were no victims. Oh, several thousand people were already dead, and many more were maimed or outright destroyed, but even those unfortunates who were being pounded into the sand, raped, or even tortured for amusement\u2014all of them wore the same manic smile on their faces. One woman had donned her husband's head as a hat as she straddled two thrusting bulls. An old man was furiously stroking is uncooperative flaccid cock as he circumnavigated the chaos from a safe distance. I even saw a toddler wobbling around without any coordination just to stab people in the foot with a knife he'd found. The Breytans had tried to quell the madness, but they were too few. One by one, the white-robed warriors were consumed by the raging ocean, and one by one, they rose from the ranks with blackened eyes and terrible grins. These delightful little stories played out by the thousands for as far as the eye could see, and in the distance, I could see the chaos spreading like a wave, churning the black sea of bodies into a maelstrom. A few hundred feet below me, Jade Tao watched it all, her posture emoting nothing as she stood guard over a cart laden with black katanas.\n\nMom stood beside me atop the outcropping, and stared at the biblical end times with wide black eyes. \n\n\"Isn't it beautiful?\" I grinned. \n\nShe blinked. \"I... I am conflicted.\" \n\n\"This is what your seraph wanted. This is what God wanted. Didn't you say you were the rapture?\" \n\n\"This isn't what she meant,\" Mom shook her head. \"This can't be.\" \n\n\"What did you think the end of the world would look like?\" \n\n\"This is not the end!\" Mom snapped. \"It is the rebirth!\" \n\n\"Birth is a nasty, nasty business. Don't you remember mine?\" \n\nMom glared at me, then turned her hands to black jets of fire, and hovered over the outcropping. \"I am putting a stop to this.\" \n\n\"Doesn't that make you a blasphemer?\" \n\n\"Do not speak to me of blasphemy!\" she snarled. \"You, who besmirches God's name at will! You, who denies her very existence!\" \n\nI shrugged. \"I don't make the rules, Mom; I just play the game. You told me that Corruption wanted me to gift her chosen few.\" \n\n\"Her chosen few!\" Mom hissed. \"HER CHOSEN FEW! Look at what you have done by giving the unwashed masses the holy enlightenment! They have gone mad! They were not meant to bear it!\" \n\nA grin formed across my lips. \"Oh... I see what this is about.\" I drew my gaze across the dunes of bodies, then back to my mother. \"Your holy seraph sure gets around, doesn't she?\" \n\nMom burst into flame with such force that it melted the rock beneath my feet, but the heat only tickled me. I walked into her infernal radius, my sardonic grin shining in the roaring black. \n\n\"You thought you were special to her?\" I giggled. \"She would've bound to anyone, but you destroyed a whole city of candidates just to even your chances.\" \n\n\"You know nothing of her!\" \n\nI laughed harder. \"She lives in my head, MOM!\"\n\n\"YOU ARE NOT WORTHY TO BEAR HER!\" \n\n\"But she's mine! She's all mine!\" I cackled. \"I am the messenger! I am the interpreter of the divine!\"\n\n\"YOU ARE NOT THE INTERPRETER!\" Mom roared, then hissed, \"You are but the vessel!. An empty chalice fit to hold water! A slave fit to carry a weight!\" \n\nI stepped over the side of the outcropping, holding myself with the great tonnage of water that flitted in the dry desert air. \"I am the word of God,\" I whispered to her. \"You've spent your whole life listening for a voice that would never speak to you, but she speaks to me, Mother, and now she speaks through me, and you are not listening.\" \n\n\"You're the devil.\" \n\n\"Maybe I am,\" I grinned. \"Maybe you are. It's so hard to tell what is righteous and what is evil when the two are the same.\" \n\nMom thrusted her hand before me. \"Do you see those markings, Diamond? They are the script of God herself! She has marked me and bound me to her seraph, and no lies you speak will ever dissuade me from the truth I know! I am her chosen one! I am her deliverer!\" \n\nI took her hand in mine, and ran my fingers down the markings on her wrist. \"This love you feel will fracture at my whisper.\"\n\n\"You know nothing of love!\" she snarled. \"Not from anyone! Not from me! I killed the only woman who ever felt a thing for you!\" \n\nI just smiled, and stepped away from her. \"Sister Tera,\" I called over my shoulder, \"come over here.\" \n\nTERA \n\nI pulled the pin from the grenade, and cooked it in my hand. With my fingers gripping the handle, I stayed the volatile chemical reaction that would turn me into a splatter. I took a steeling breath, knowing for certain that it was one of my last, and I stepped from my cover. \n\nWhy the fuck did I come here? I thought to myself as I made each tortuous step toward the pair of gods. In what universe did I think walking into this situation gave me a better chance than making my escape and risking crossing blades with valkyries? Sweet god above, what an idiot I am! \n\nBoth deities had their gazes trained on me, but I only had eyes for one. I stared Julia down my whole journey, displaying my innocence with my posture. She didn't quell her aura of flame as I approached, but held it steadily, watching every step I took until I could feel her heat on my flesh. Her gaze was like a laser, scrutinizing me, distrusting me even after everything I'd told her. \n\n\"Remember what we talked about,\" I said carefully as I plodded ever forward. \n\n\"A snake doesn't change her nature,\" Julia replied coldly. \n\n\"I told you this would happen.\" \n\n\"But you never told me why you had to be here.\" \n\n\"I don't know what Diamond wants from me.\" \n\nDiamond didn't respond, but turned to her mother instead. \"Lower your flame, or your director of sin will burn.\" \n\nJulia just narrowed her eyes at me. \n\nI held my arms out to my sides. \"I have been with you since the beginning. You must see that I am one of the chosen few.\" \n\n\"My daughter has chosen many.\" \n\n\"Your daughter has chosen poorly,\" I said carefully, not daring to look at Diamond. \"You are bound to God's angel\u2014she is just the carrier of her word. She is the misguided voice, but you are the beating heart.\" \n\n\"You are a treacherous whore who spills lies like spittle.\" \n\nI bowed my head. \"I am what I am, but I have always been loyal to you. There is only one liar here.\" Now I dared a glance at Diamond, who was watching me with an amused smile. \"The seraph has chosen the wrong vessel before.\" \n\nDiamond giggled. \"Oh, you are a tenacious one.\" \n\nI looked back at Julia. \"The seraph has searched for her vessel since before they counted time. They call her the 'most ancient one.' Only God is perfect. Even angels make mistakes.\"\n\nNow Diamond's smile was fading. \"Get over here.\" \n\n\"Look at the patterns on your flesh!\" I growled to Julia. \"Corruption has taken countless minds, but has she ever left her mark upon them? No! The seraph chose you, but an interloper keeps her away. A blasphemer holds her hostage.\" I lowered my voice. \"Or maybe it's worse than that.\" \n\nDiamond's smile was gone. \n\nI got on my knees before Sister Julia. \"Who was the demon that held you hostage in the womb of Arbortus? Did she not defile you, deform you, rape you? No, no, no, she did far worse than just that. She stole your heart. She seduced you from God's very light! Who else could Passion have been but a servant of Satan set on your path to lead you from your destiny? Is that not what the devil does? But you were stronger than she was! And when you slew her with God's light, what rose from the ashes?\" I looked at Diamond. \"A far more insidious demon. A hell-spawn of your own flesh.\" \n\n\"I would stop now if I were you,\" Diamond growled at me. \n\n\"Let her speak,\" Julia said softly. The hot rage on her face was gone, as was the fire upon her flesh. She dropped to the outcropping, and stepped between me and Diamond. I groveled at her feet. \n\n\"The devil has been working against you your whole life!\" I hissed. \"He becomes more desperate with every step you take upon the Maternal Path! You must know that if you are the champion of God, then Satan has one of his own!\" I kissed Julia's toes. \"A new Creator was born at the eve of your triumph, stepping between you and God's angel before the final trumpet could be sounded! What else can Diamond be but the last card the devil could play before his hand was empty?!\" I looked up at my dark savior. \"He always saves the best for last.\" \n\nJulia looked down at me, her face impassive. Then she gave me an imperceptible nod. I felt her toes clench beneath my lips. She wheeled on Diamond with her fist closed, and struck the space her daughter had just been. Diamond spun easily beneath the strike and delivered a devastating kick to Julia's stomach. Julia crumpled around her daughter's heel, her eyes bulging, the veins showing clearly on her head. She fell beside me. ",
        "I had let go of my grenade seconds ago. I hugged it to my chest, and counted down the last second of my life before... before... before nothing. The bomb I held to my breast was soaked in water. I looked up. A pair of black eyes stared down at me from a girlish face maned with curly red locks. Diamond grabbed me by the hair, and yanked me to my knees. She grabbed her mother by the throat, and did the same. \n\n\"I didn't even want to be here,\" Diamond snarled to Julia, who was still gulping desperately for air. \"I wanted to be as far away from you as I could be, but Corruption makes me love you, and we all do stupid things for love.\" She grabbed Julia by the cheeks, and squished them open so that her desperate gulps for air made her look like a beached fish. \"Did you ever love me, Mother? Or was I ever just the guilty burden you carried? Well, you can't feel that guilt now, but I can still make you feel fear.\" \n\nDiamond forced her mother into a disgusting kiss. She parted with a gasp, and stared deeply into Julia's bulging eyes. \"Remember that,\" Diamond whispered, \"that was the last bit of love you'll ever feel in your miserable life. You think Corruption loves you?\" Diamond turned to me. \"That love belongs to me.\" \n\nShe pressed her mouth to mine, and kissed me. Her tongue searched my gums and teeth, and her lips formed a grin. She breathed in. Agony. Agony like I'd never known suffused every inch of me, leaving me paralyzed in Diamond's grasp. She held me lightly, barely embracing me at all, and yet she seemed to draw me out from the inside, pulling my organs through my throat, collapsing my lungs, imploding my heart. Through the torture, I was vaguely aware of heat passing between our mouths, and the taste of something terrible being sucked right from my esophagus. The pain seemed to be interminable, but it ended a second later. In its wake was a horrific vacancy, and within that hollow, flooded my guilt. Justina. Oh god, my daughter! I'd abandoned her! I'd left her to die atop the Gratoran Wall without even looking back! I had to find her! I had to bring her back to Towerhead and hold her in my arms until she knew it wasn't me! It was... it was... \n\nI blinked. I was staring at the black eyes of Julia Gendian. They were wide with horror. I knew what they saw. Diamond pulled her mouth away from me, and the last smoky tendrils of Corruption flowed into her nostrils. I swayed for a precarious moment, then fell to my chest, my body sapped of all energy. \n\n\"No,\" Julia mouthed, unable to speak the words. She whipped her head up to Diamond. \"No, no, no, no! Please, Diamond! I didn't mean it! I made a mistake!\" \n\nDiamond smiled coldly at her mother. \"It's far too late.\" \n\nJulia dropped into a low grovel, and sobbed upon her daughter's toes. \"Please, baby,\" she whimpered, \"don't take her away from me. Don't make me go back.\" \n\nDiamond watched her mother for a while, savoring the moment until she had her fill. When Julia's desperate pleas reached their crescendo, Diamond ran her fingers through Julia's red hair, and guided her gaze upward. \"Who's the voice of God?\" she whispered. \n\n\"You are,\" Julia blubbered. \n\n\"Who is God's chosen one?\" \n\nJulia looked up, her eyes streaming, her expression more woeful and despairing than one I'd ever seen. \"You are,\" she hissed. \n\nDiamond smiled without mirth, her sparkling teeth and girlish face so full of malice they seemed to darken the color of her eyes. \"That's very good, Mom,\" she said gently, then stood up, and walked away. She left a puddle of footprints in her wake, then floated from the top of the outcropping, and joined the melee below. Julia and I watched her go, then Julia looked back at me. There was nothing in her face but hatred. \n\nPostlude: Depthless Well\n\nCORRUPTION \n\nI was lying in a pool of my own sweat. Xaya was poking me in the side with a stick, seeming to wonder why I wasn't working right, but I was too exhausted to even lift a finger to stop her. I had used every skill of persuasion, every ounce of emotional manipulation, every power of the psyche I had at my disposal, and it had almost been too little. Diamond's love for her mother was a depthless well, but the darkness I'd put in it when I melded with her had spoiled the waters. All around me, memories had sprouted in her garden. Hateful memories. These memories were fleshed with my thorned bushes and dark flowers, and they created effigies of Passion and Lucilla. \n\n\"Murderer,\" the memories seemed to whisper. \"She killed them, and then she abandoned me.\" Another memory sprouted from the soil. This one was of me. In this memory, I was staring back at Diamond from the gate of her realm. \"She abandoned me for you, Corruption,\" the memory hissed. \"I know you can see this. I want you to know that I am going to take her away from you. She belongs to me. Just. Like. You.\" An image of Diamond emerged from the soil; her features black with venom. The thought stared at me, and grinned. \"I own you. You can't escape me. You're trapped in my head, and before this is all over, I am going to eat you alive.\" \n\nExcerpt from Dr. Siam's thesis, The Broken Bridge, page four-hundred-ninety-five:\n\nWhat are Creators? That question isn't very pertinent, and if you ask it, you're an idiot. There is a hierarchy of intelligence, and it is determined by what question you ask. \"What?\" is the last question a worm might ask of the alien shape of a descending boot. \"Who?\" is what owls fucking say; are you an owl? \"Where?\" now we're getting there, but we're not sure if we're going the right way. \"How?\" hello, aspiring engineer; what a fantastic question, but not the best. \"Why?\" perfection. \n\nWhy are Creators? Why do they exist at all? Why does the spiritual plane make them, and why do they come when they do? I've heard a theory that the spiritual plane simply fills up with dead people. That theory is a good one if you follow the conservation of energy, but it makes the assumption that the spiritual plane has a capacity limit, and must maintain equilibrium with the other two planes. There was a time when the first life appeared; was the spiritual plane's capacity limited to just one? What happens when there's a world-wide orgy and we quadruple the population in three years? If the spiritual plane is finite, then we shouldn't be able to do that, but with enough elbow grease and alcohol, we humanoids can do amazing things. \n\nThere is a reason why the Creators come back. There is a reason why they come back seemingly sporadically. The Creator cycle is not a cycle at all, for there have been times in history when generations of Creators appeared within the same lifetime. It is ancient history, but it is true. We in the present are slaves to a very small snapshot of our existence. Most people can't even name the Creators before Iona, Breyta and Ofan; that's not even twenty-thousand years ago. Humanoids have existed for millions of years. There have been civilizations far greater than what we see today. Swords and clubs; horses and carriages; we've done this before. We've done so much better. \n\nWhy do Creators come back? The answer is simple. While I cannot prove it explicitly yet, it is the only logical explanation. We've done this before. I am not the first to have discovered this. I will not be the last. These questions will be answered, and then they will be silenced. The world operates in cycles, but humanity operates on decisions. There is not a cycle. There is a decision."
    ],
    "authorname": "White_Walls",
    "tags": [
        "anal",
        "nymph",
        "valkyrie",
        "teen",
        "elf",
        "succubus",
        "gender bender",
        "futanari",
        "ass to mouth",
        "ass to pussy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-creators-ch-17"
}