{
    "title": "A Mother's Worry",
    "pages": [
        "I do not give permission to re-post or archive my stories. If you want to download my story for personal use, be my guest, but that's as far as my permissions go.\n\nOtherwise, have fun and enjoy.\n\nTagline: A protective mother will do anything to keep her son from making a mistake that could harm his future, and anything means anything.\n\nMom/Son - Incest - Taboo - Long Story - Buildup - Edging - Teasing - Slow Burn - Coercion - Guilt - Giving In - Love - Romance - Public Sex - Exhibitionism - Voyeurism - Straight Sex - Oral Sex - Hand Job - Dom/Sub/Switch - Rimming - Anal Sex - Lots of Sex - Virgin Girlfriend - Cherry Busting - First Time - Taking Pictures of Mom - Kinky Mom - Wild Mom - Sleeping Pills - Sleep Sex - Graphic Sex\n\n<p align=\"center\">* * * * *</p>\n\n<p align=\"center\">1</p>\n\n<p align=\"center\">My Eighteenth Birthday</p>\n\nI'm going to get right into it because this is still blowing my mind. It was summertime, and I had just turned eighteen with one more year of high school to go. So, now I'm an adult. I can do everything an adult can do but drink, so I get most of the benefits, but I also get all the blame. There are some serious consequences to my actions I had never thought about before, not really, and to tell you readers the truth, I don't give a shit about the unfair consequences that could befall me now. A jury would understand, right? I would. But just because I don't care, it doesn't mean that my mother doesn't. My mother cares. She cares a whole motherfucking lot.\n\nAs I've said, I'm eighteen years old, and so is my girlfriend, older than me by a month. I've known her for my entire life. She's my neighbor. You see, we've been together for a long time. A long time and we've had opportunities to really be together, but we've held off, and why? Because we're good people who do what our parents say--and that's a problem--but we promised to take things slow, and so we did. And now, we're both eighteen, and guess what? We can do whatever we want now, or so we had hoped.\n\nYou see, no one had had a problem with my relationship with Jenna--I'm Mark, by the way--not my mother, not my father, not Mr. and Mrs. Mason, not anyone, until Mr. Mason walked in on me with a mouth full of his daughter's hairless pussy right after I turned eighteen. That was her first birthday present to me. Could you blame me... or her? Jenna was fucking hot, and I--we--were both in need of some loving. How could we not be?\n\nWe're both teens, and porn was everywhere. Sex sells, and teens are supposed to resist their urges while under the onslaught of 13 Reasons Why, Euphoria, and Taylor Swift writing songs about every guy she's taken between her legs (Does she still do that? I don't know.) Then there's Miley Cyrus being a whore (or she was a whore at one time), and Ariana Grande once talked about dick size and how being big was good, and then there's social media oozing sex all the fucking time. You can't watch a teen drama without someone getting fucked. If people were fucking at my age before the invention of TV, then why the fuck wouldn't modern teens want to blow a load or two as often as possible? Sex is everywhere, and we like it. Hell, at eighteen, we need it.\n\nWhere was I? Oh, yeah, Jenna was fucking hot. There's more to her than hotness, but she was fucking hot. She has long blonde hair, tan skin, an oval face, bright blue eyes, and perfect teeth. Her tits are over a handful in size, and her stomach drops straight down with an almost six-pack look that ends at the cut in her hips leading into the smooth skin of her mound and the bare lips below. She doesn't like hair. She doesn't want any. It gets in the way of her sexy bikinis and her even hotter panties. While her pussy is heaven, she has one hell of an ass. She has a soccer chick's round butt, firm thighs, and long legs. You can't beat that for sexiness.\n\nDad used to say, \"She reminds me of your mother,\" before Jenna entered high school, and sports thickened her body.\n\nEarlier today, we were on her sofa, and she was wearing a black shirt with white trim, and printed across the front was the word EASY. She was also wearing a pink schoolgirl skirt that was way too short for school, and if a girl was going to wear that, she had better expect to be flashing her panties to the world. Lucky for me, Jenna doesn't mind one bit. She was wearing the skirt for me. We were on her couch, and her panties were lying on her coffee table, and that's when the lock on the front door rattled.\n\nWe parted in a hurry and went back to watching TV as her dad walked into the house. He greeted us--I could tell he was still pissed at me for eating his daughter's pussy at midnight--then he went to the kitchen, and then he came back, and that's when he grew silent. It was kind of freaky. We both looked at him, and we both noticed that his eyes were staring at the ultra-small, transparent panties his daughter had been wearing. This was right after he had caught me going down on his daughter and had told us both to knock it off until the real adults could discuss their children's new superpowers--the powers to fuck, I guess.\n\nSo... ah shit.\n\n\"Jenna,\" he said in a calm voice that was more unsettling than if he had yelled. \"Put your panties back on right now.\"\n\nJenna stood, grabbed them, and facing sideways to her father and me; she straightened her panties in her hands, then she lifted her right foot and put them through the strings of her leg hole, and then her left foot, and then she pulled them up her legs, fitting them into place. Her hips shuffled, and her skirt came up over her thighs, baring the sides of her hips to her father and me, along with a flash of her muff as her skirt flared when she adjusted the crotch against her softness.\n\nHer dad left the room after that. I left the house shortly after, walking to my house next door. That night, my parents talked with Jenna's dad, and Jenna's dad told them that if this continues, he will end our relationship himself. He said the entire \"I'm her father, she'll do as I say while she lives under my roof,\" spiel--what the fuck, right? Did he think his daughter didn't have an appetite for cock?\n\nFuck him.\n\nFuck him!\n\nThat's what Jenna and I said, but my parents agreed with his parents, especially my mother.\n\n\"Do you want to be like those teen parents on TV?\" Mom asked. \"They're the lucky ones. Do you know how many teen parents have to put their lives on hold because they got pregnant too early.\" She shook her head at me. \"You know what? It stops now. Get through college, and then you have all the sex you want. If you don't stop your behavior with Jenna\"--Mom lifted her right hand and spun her forefinger around--\"is gone. You'll have to get a job. You'll have to pay your fair share. No more free rides. Do you understand me?\"\n\nFuck my parents, too--not in a bad way--just their idea of going along with Mr. Mason.\n\nSo, Jenna and I decided that late on my eighteenth birthday, we were going to fuck just to fuck our parents over. In hindsight, it was stupid to think that way, but when you're young, you do stupid shit without thinking. Lucky for me, during the party, my mother had watched Jenna and me all night long.\n\nWe had the party at my house, nothing special, just a bunch of eighteen-year-olds running around in boardshorts and bikinis, grilling food, and drinking sugary liquids that we poured alcohol into on the sly. Mom watched us. First, from the outside, when the party had just started, then she went inside, and I could feel her green eyes on me from her upstairs bedroom. Jenna sat on my lap, and we kissed once, and Mom appeared outside less than a minute later to ask us if we needed anything.\n\nWe didn't.\n\nSeveral of my friends had told me to tell my mother to put on her bikini and join us, which led to me throwing them in the pool against their will, but that's life for you when your mother was a MILF, and she was a MILF. When I was younger, before I became aware of my mother as a woman, I always used to tell her how beautiful she was, which she loved to hear. She thought it was cute, and I'd never fail to remind her how beautiful she was compared to everyone else. Then I discovered masturbation... and flirting with my mother, as my father called it--without telling me what flirting meant--came to an end.\n\nMy mother was tall and willowy, with smooth, light golden skin and long, layered, sun-blonde hair--flaxen hair descended from her Norwegian blood--that almost glints white in the sunlight. She has elegant features and high cheekbones, the kind that any fantasy fanboy may have imagined a regal elven queen to bear. She's slender and tight, with a flowing body unobstructed by the cut of leanness that some CrossFit moms have going for them. Her breasts were just over a handful, while her butt was small, widening sideways from her hips like a pear. Her cheeks were round and as golden as the rest of her skin thanks to the sunbathing she did in her whale-tale, micro G-strings that I'm sure I'm not supposed to know about, but I did.\n\nI haven't seen her in them, but what kind of boy hasn't rummaged through his mother's panty drawer at least once in their lifetime? (A normal fucking boy, I'd guess.)\n\nSo, Mom left us once Jenna slid off my lap. The party continued until sundown when people started heading home. Jenna and I changed into shorts and shirts, then we watched a movie with my parents, cut some cake in a quiet ceremony around my dinner table with my loved ones, and then Jenna and I went up to my bedroom. Mom's eyes followed us, but mostly they followed me, and Dad called us over to tell the both of us what Jenna's father and my mother expected from us--A soldier-like dedication to their orders.\n\n\"You've waited eighteen years,\" Dad said, \"so what're another four?\" He lowered his voice to a whisper then. \"Do well in college, and I bet you'll only have to wait two more years.\"\n\nWe nodded our heads, and we went to my room to say, \"Fuck our parents,\" in the most physical way possible.\n\nI should have known that my mother wasn't about to let that happen.\n\n<p align=\"center\">2</p>\n\n<p align=\"center\">Mom's Nose in My Business</p>\n\nAs soon as my bedroom door closed, Jenna and I pressed our lips together as we tumbled toward my bed. Our mouths opened, our tongues came out, and I slid my slippery appendage into the warmth of Jenna's mouth. She uttered soft whimpers while our kisses melded together. I pushed her shirt above her tits and pulled her bra beneath them. My hands squeezed her breasts, maybe a bit hard, but she seemed to like it as she spread her legs for me on my bed, my cock pumping blood and plumping up to its full hardness just in time to spear the center groove between her legs. We dry humped each other, the cloth of my basketball shorts digging into the fuzziness of her cotton boy shorts and the softness beneath them.\n\n\"We have to be quiet,\" I whispered as Jenna panted and moaned with a desperate need for my touch.\n\n\"Turn your music on,\" she said.\n\n\"They'll know,\" I said. \"It's too obvious.\"\n\nI squeezed her tits against, then pinched her thick, peach-colored nipples between my thumbs and forefingers.\n\n\"Ooh,\" she gasped.\n\nI lowered my head, taking the right nub into my mouth and licking all around her areola. Jenna spread her knees wide and humped her hips up at me, sliding her cotton-covered muff against the head of my prick.\n\nI moaned around her tit.\n\nShe moaned, pushing my head against her breasts.\n\nI ground my cock into her muff meat as hard as I could.\n\n\"Shit,\" Jenna whispered. \"I'm so fucking wet for you, baby.\"\n\n\"Jenna--\"\n\nKnock, knock, knock, my door rattled, and then the doorknob turned, but not much because I had locked it. Then someone--Mom, I already knew--knocked harder on my door and turned my lock like a panicked woman running from a serial killer.\n\n\"Mark, open this door!\" Mom shouted. \"Now!\"\n\n\"Are you fucking kidding me,\" I said, rolling off Jenna and sitting up. My cock sprung upward, turning my shorts into a big top circus tent.\n\n\"Mark!\"\n\n\"Give me a second,\" I shouted back. \"Fuck!\"\n\n\"Mark!\"\n\n\"I'll open it,\" Jenna said, pulling her bra up and her shirt down. \"Here, baby, cover that dick.\"\n\nShe handed me a pillow that I placed over my lap, and for a moment, I thought there was a better way to hide my erection, but then I thought, Fuck it. Mom should know what she interrupted. Jenna skipped to the door as my mother banged on it again. She unlocked it, opened it, and Mom stormed in as if she could still catch us doing something illicit.\n\n\"What are you two doing?\" Mom asked, swinging her gaze from me, to Jenna, back to me, and my lap. \"Well?\"\n\n\"I was just leaving,\" Jenna said, leaving my room and calling over her shoulder, \"Call me later.\"\n\n\"Mark,\" Mom said, \"we need to talk.\"\n\nShe shut the door, and I sighed as she came to sit next to me on the bed.\n\nGreat, just fucking great.\n\nI was about to talk to my mother while sporting wood, and we both knew it.\n\nHow fucked up was that?\n\n<p align=\"center\">3</p>\n\n<p align=\"center\">Mom's Concern</p>\n\nThe first thing I noticed was that my mother had not changed out of her clothes from earlier: a pair of jeans and a white shirt. It wasn't so late that she needed to change, but it was Saturday night, and she wasn't going anywhere.\n\n\"I came here to tell you to leave your door open, and this is what I find,\" Mom said, shaking her head at me.\n\nI looked at her clothes and said, \"You were coming up here no matter what. You could have told us to leave the door open on our way upstairs, but you wanted to catch us doing something.\"\n\n\"I did not.\" Mom looked at me, sitting on the bed with a pillow over my lap, and she frowned, then her eyes widened, and she looked away. Sighing, she walked to the bed and sat down near the end, facing forward and keeping her eyes off of me and my erection. \"I came here hoping that you were doing as I had told you to do, but you weren't, were you?\"\n\n\"I'm eighteen.\"\n\n\"And that's still too young for today's world. You don't even know if you'll be together forever.\"\n\n\"We're adults now,\" I said, narrowing my brows. I hated it when my mother said something that made sense. I thought I'd be with Jenna forever, but did I know that for sure?\n\n\"That doesn't matter.\" Mom took a deep breath. \"You may not understand it now, but one in-the-moment mistake could cost you years of your life. You may have to put off college. You may decide not to return. A baby could change the entire trajectory of your life. You don't need to be sexual just because you've turned eighteen.\"\n\n\"We haven't had a chance to be sexual,\" I said.\n\n\"Sexual means everything up to and including sex,\" Mom said, turning a sideways glare on me. \"Everything you do tempts you to do more, so that means no kissing, no touching, no looking at each other naked, and no sexy text messages.\"\n\nI laughed.\n\n\"I mean it,\" Mom said. \"I know how teenagers are with their phones.\"\n\n\"Jenna's dad isn't serious,\" I said. \"She'd hate him for the rest of his life if he kept us apart. It's a dad thing. It'll pass.\" By now, my hard-on had softened some. I turned on the bed as my cock lay in a tube-like state over my sack. I slid the pillow off to the side and crossed my legs on the bed, the bulge in shorts no longer as obscene as it had been before Mom had knocked on my door. \"Trust me.\"\n\n\"No.\" Mom turned to me. \"You trust me. You don't want to be an eighteen-year-old dad.\"\n\nThat was true, but that wasn't going to happen. That only happened to irresponsible people, and Mr. Charles Mason--what an almost terrible name Jenna's dad had--was going to have to accept the fact his daughter was growing up, and she was eager to join the adult world.\n\n\"I'm eighteen years old,\" I said, and though I tried to mimic my father's stern tenor, my next words still trembled, and my heart still sped up as I added, \"I have needs, Mom.\"\n\nMom laughed without humor.\n\n\"Can't you go back to holding hands?\" Mom asked. She faced me, her regal features hanging low, the way a puppy might after its master had given it a stern yell. \"Waiting another four years is not that long when compared to the rest of your life.\"\n\nMy mother was right, but fuck that, I had a cock to satisfy, and Jenna wanted sex as much as I did.\n\nI shook my head.\n\n\"Can't you watch porn?\" Mom asked.\n\nI laughed a little and said, \"No,\" while still chuckling.\n\n\"Can't you,\" Mom said, cringing, \"just cheat on her?\"\n\n\"What?\"\n\n\"Just a little?\" Mom pressed her lips together, her face trembling. \"No one has to know. I'll help you find someone who Jenna will never meet. We'll find you an older woman who doesn't have to worry about pregnancy. I mean it, Mark: a mistake with Jenna could ruin your relationship, your friendship, and your lives.\"\n\n\"I'm not cheating on Jenna,\" I said, shaking my head. \"How can you ask me that? That's a crazy idea. Plus, I love--\"\n\n\"You don't even know what love is.\" Mom's eyes narrowed, and that sad kitty look took on a fearsome expression. \"You're doing this out of spite. We told you no, so you're going to show us that you don't have to listen to us anymore, aren't you?\"\n\n\"Mom--\"\n\n\"No,\" Mom said. \"I bet you would run off with the first woman who showed any interest in you.\"\n\n\"She'd have to be one beautiful woman,\" I said, laughing and trying to soften my words. Cheat on Jenna? Mom was crazy.\n\n\"How beautiful?\" Mom leaned forward, looking me in the eye.\n\n\"She'd have to be,\" I said, leaning forward and trying to keep my laughter in check, \"as beautiful as you.\"\n\nMom blinked.\n\nI let my laughter escape my lips as I turned away from my mother's gaze.\n\n\"And since there is no woman as beautiful as you,\" I said, \"I guess we're going to have to hope that Mr. Charles Mason--I'll call him Charles too now that I'm an adult--is bluffing about keeping us apart. He's going to ruin his relationship with Jenna if he does.\"\n\nMom stood, glaring at me, then she turned and headed for my door. I can't be sure, but I thought I heard her mumble, \"As beautiful as me.\"\n\nMy mother wasn't stupid.\n\nHow many blonde, sun-lit women with an inner glow and the regal bearing of a Lord of the Rings elf queen were walking around in the world within reach of us--that would also fuck me on a whim and couldn't get pregnant?\n\nNone but her--and she could still get pregnant--not that I meant that she'd fuck me, that thought had never entered my mind. But there was no one as beautiful as my mother anyway, and so she was shit-out-of-luck when it came to convincing me to cheat on my girlfriend--or so I had thought at the time.\n\n<p align=\"center\">4</p>\n\n<p align=\"center\">The Tipping Point</p>\n\nMom's words had reached me. I wasn't deaf or completely stupid. Later, while alone, in the middle of the night, when the world was pitch black, and the weight of the future loomed over everyone, the skin-shivering and bone-chilling fear of living life as an eighteen-year-old dad hollowed out my insides, making it difficult for me to fall asleep.\n\nIt had taken a while.\n\nMost of that fear had bled out of me by the time I had awakened. Later, the sight of Jenna in the afternoon and the feel of her lips helped me find my courage, but I still sat Jenna down to talk to her about my mother's concerns.\n\n\"Fine, we'll take it slow,\" Jenna said between planting soft kisses on my lips, \"but my pussy is getting fucked by you and that big dick of yours soon.\"\n\nMy cock jumped, and soon would have meant right then if my mother hadn't joined us in the living room. I didn't even know what we were watching. We had stopped in the middle of choosing something from a streaming site involving laser swords and half-naked alien women with tails on their heads when Mom had joined us. We chose a movie, and I'm sure both of us hoped that Mom would get up and go away.",
        "She didn't.\n\nThe living room in my house has a simple setup. There are floor-to-ceiling windows on the wall in line with the front door, with two sets of motorized, retractable curtains. The curtains closer to the window were white and transparent, while the second set were thick, blackout curtains for when Dad fires up his flat-screen TVs--yes, that's plural. He thinks he lives in a sports bar. Facing the TVs are three white couches set in a horseshoe pattern with a glass coffee table and other living room stuff that most homes have. Jenna and I cuddled together on one of the side couches while Mom sat on the long couch directly facing the TV, meaning we couldn't really see her unless we looked behind and to the side of us.\n\nWe didn't look at her.\n\nInstead, we watched the movie while Mom watched us. I don't know if Jenna could feel it, but I could feel Mom's green eyes cutting into me with the surgical precision of one of those laser swords on TV. (I know it's not called a laser sword. I don't care.) I cared about Mom's eyes, watching, and judging--perving on us like some almost forty-year-old nun eager to unsheathe her yardstick and slap the devil out of us. That thought conjured the image of an Italian nun--because all of the sexy nun pornos I've seen were Italian--bending Jenna over a table and spanking my girlfriend's butt until her cheeks turned red. That was a good thought. It was such a good thought that my cock sprung to life beneath my jeans, pushing into Jenna's ass. Jenna didn't hesitate to push back against my prick with my mother right there!\n\nDid Mom think her eyes were going to keep us from having our fun? At some point, people who believe that other people were watching them eventually go nuts. So, what would happen to someone who knew that someone was watching them? I didn't know, but I did know that I wouldn't let Mom embarrass or intimidate me into a life of abstinence. If she was going to invite herself into my world with Jenna, then I was going to let her watch.\n\nI had my arms around Jenna, but as these thoughts went through my head, and she pushed her butt against the growing concern in my pants, I raised my right hand--my top hand--and I placed it on my girlfriend's side and squeezed.\n\nJenna shifted, uttering a laugh that she had tried to contain, and my cock swelled to its full hardness. As I thought, Let Mom watch, my heart sped up, and a chill raced across my shoulders, riding my arms down to my wrists and leaving my insides buzzing with an energy that wanted to escape my body. I curled my fingertips over Jenna's side, caressing her, and without thinking, I pushed my cock into her butt while knowing that Mom was watching us.\n\nCould Mom see my minuscule movements?\n\nI pushed harder into Jenna, and she pushed harder against me. With Jenna cradled in my arms, I could see the profile of her face, and when I urged my prick into her ass, which was only covered by those cute cotton sweatpants that women like to wear, the corner of her lips pulled into a wide smile. I could see pink in her cheeks. As her smile widened, she pushed her butt harder against me, giving my member a soft grind, which sent an electric pulse through my pole from the tip of my dick down into my balls. I had to fight off a moan, but I tightened my ass cheeks and pushed my tented pants deeper into Jenna's crack, my skin warming and the pace of my heart's thumping increasing. What was Mom going to do about this?\n\n\"I'm cold,\" Jenna said, turning her head to look over her shoulder at me. \"Can you get a blanket?\"\n\n\"Yeah,\" I said.\n\nOn the living room's couches, a blanket lay draped over each of the backrests. I grabbed the one from our couch and slid it over our bodies. I thought I heard Mom make a noise, but Jenna's giggle as she wiggled her butt against the ache in my pants kept me from being sure.\n\nNow what, Mom?\n\n\"Jenna,\" Mom said in a quiet tone that shot from her to us in a straight line. \"It's time for you to go home.\"\n\nHoly fuck, had I asked that question aloud?\n\nJenna looked at my mother.\n\nI looked at my mother, but this wasn't my house. I could argue about some things, but I couldn't tell my mother what to do in her own home.\n\n\"Okay, Mrs. Hornsby.\" Jenna swung her left arm upward, pushing the blanket from her body and over mine, baring my front and the sideways pyramid my cock had turned my pants into. I covered myself as Jenna stood, turned, and bent at the waist as she pressed her lips to mine for a quick, barely-there kiss. \"I'll see you later.\"\n\n\"Now,\" Mom snapped.\n\nJenna's eyes widened, and she straightened her back and ducked her head as she quick-stepped it through the living room and out of my mother's house.\n\n\"Mom,\" I said, sitting up. \"What the hell?\"\n\nThere was so much I could have said, but that's what came out of my mouth. Mom, what the hell?\n\n\"Mark--\"\n\n\"It's going to happen,\" I said, my heart pumping hard as a white-hot fire raced through my veins, reddening my cheeks.\n\nI stood, not caring that I still had a hard-on as the blanket fell away from me. Mom's eyes darted to my crotch, widening, then she looked back at me with a strange defiance in her eyes.\n\n\"We're going to have sex soon.\" I licked my lips. \"There's nothing that you, Mr. Mason, or Dad can do about it. I mean it. And everyone is going to have to live with it.\"\n\nI walked out of the living room as Mom called, \"Mark! Mark, get back here! Mark!\"\n\nMy expression went from stern to glaring as I jogged upstairs, increasing my speed to get away from Mom's voice. I slammed my door once I was in my room. After a minute, I rubbed my hands over my face, and through my hair, then I looked at my door and then the doorknob, tempted to go back downstairs. My mother hadn't deserved that. All that she was doing was caring about me. But I didn't go, not until later in the night after my father had come into my room to tell me to make nice with my mother because between Mom and me, there was no question as to whose side he was going to take.\n\nAs he left my room, he said, \"Hey, I'm not going without sex, too, because of you.\"\n\nI shook my head and laughed at the casualness of his voice. Taking a deep breath, I smiled and went downstairs to make nice with my mother.\n\n<p align=\"center\">5</p>\n\n<p align=\"center\">Tipping Point</p>\n\nI came downstairs to see Dad lying on the couch that made up the right side of the horseshoe while Mom sat on the back couch. Dad had a blanket pulled over his body, his head on a pillow, and his remote in his hands. It looked like they were binge-watching an original series, foreign but not dubbed. The show had subtitles.\n\nI walked around the left side of the couch that made up the back of the horseshoe and sat down on the other side of my mother. Mom looked at me and smiled. I smiled back. Mom had changed into a pajama dress, which looked like an overgrown baby blue T-shirt with a cloud print. She sat staring at the TV and leaning against the couch's armrest. Her long legs were visible from the mid-thigh down thanks to the light from the TV, not that there was much light. Not that I was looking. Not really. I was looking at Mom so that I could mouth the words, I'm sorry, but my mother was my mother, and a person couldn't help but notice the smoothness of her swan-like limbs.\n\nSince Mom wasn't turning her head toward me, I concentrated on the movie, turning in her direction every couple of minutes to see if I could get her attention. I couldn't. Which kind of sucked since I didn't want to sit through a subtitle-laden TV show just so I could make nice, but since those damn subtitles held her focus, I sat, and I sat, waiting and hoping that the episode would come to an end.\n\nComing downstairs to apologize for something was not new to me. I was still in my jeans and shirt, and in my pocket, I had slipped my phone. I reached down into it, pulling it out and lighting up the screen as I nestled into the corner of the couch across from Mom. I swiped and swiped, and Dad said, \"That phone better be on mute,\" so I killed the volume as I looked up at him, but he wasn't looking back at me.\n\nI looked at Mom, who was looking at me, and I mouthed the words, \"I'm sorry.\" She smiled, but her eyes dropped to my phone, and her smile tightened.\n\nI shrugged.\n\nWhat had she expected?\n\nMom swung her gaze back to the TV, and I looked back at my phone. I texted Jenna, who returned my text, but we didn't have much of anything interesting to say. We fed each other live updates of our situations, and after sighing in silence, I decided to go back upstairs for some phone sex, and that's when I noticed something different about Mom.\n\nMom's left hand lay on her thigh, just beyond the hem of her sleeping dress. The hem no longer lay in the middle of her thigh. Her fingers, which were curling and uncurling in near slow motion, had pulled her dress up along her leg so that it now rested between the middle of her thigh and her hip. She kept scratching at her leg, and the hem continued to rise, but only on her left side, the side furthest from Dad. Not that he'd noticed, lying on the side couch as he was, on his back with his eyes glued to the subtitles flashing across the screen.\n\nI looked at the profile of Mom's face, watching as she stared straight ahead, and then I looked down, where her fingers continued to pull the hem of her pajama dress upward. She slid her hand to the side of her thigh, her long fingers inching beneath the hem while her fingertips slid across her skin, and the TV's whitish-blue, sometimes silver-gray light, flashed over her body.\n\nMy cheeks flushed.\n\nMom took a deep breath, and my eyes moved upward, traveling up her body and taking in her flaxen hair, so golden and bright that even in the near darkness, it shined like a beacon of light. My eyes shifted across her body, making the short, sideways journey to her breasts, where they rose and fell with her deep breaths. I saw, for the first time, the way her sleep-dress molded to her form. My cheeks grew hotter, almost burning, and my heartbeat rose as goosebumps sprouted across the surface of my arms. Below my waist, things warmed, causing my cock to stretch and my scrotum to tighten in a pre-hardening ritual that I quickly recognized.\n\nI was now looking at my mother's breasts and the way her cotton nightdress slid down the upper slopes of her tits and curved around, covering her nipples, which had grown stiff and hard sometime before I had laid my eyes on them. And they were stiff and hard, pointing outward like two solid eraser nubs that I couldn't remember sucking on as a newborn, but Mom had claimed that I had. What a weird thought. The dress continued downward, clinging to the round underside of her tits where they connected to her sternum and sides, the fabric shooting straight down her stomach and over her thighs.\n\nHad Mom always worn pajamas that outlined her body as though drawn to her skin? I didn't know, but I couldn't believe that I wouldn't have noticed this kind of sleepwear in the past. Mom's head twitched. I lowered my eyes to my phone, though that guilty look that crossed my face whenever I felt bad punched me right in the nose. I knew it was there, that caught-in-the-headlights look that screamed, I'm GUILTY of something.\n\nFuck.\n\nMom made a noise that sounded like a sigh with a shiver running through it. After a second, I looked at my mother again. The skirt of her nightdress lay beneath her butt, leaving her dress draped across her thigh at an angle. Mom shifted, first her shoulders, and the motion swung into her ribs and sides, then her hips. As she scratched at her thigh, still moving the hem of her dress, Mom looked at Dad, who had his eyes fastened to the TV, and then she lifted her butt and made a quick scratch of her cheek that pulled her hem behind her small, round, and pear-shaped butt.\n\nWhat the fuck was going on?\n\nMom's head twitched again while I was still thinking about my question. Mom saw me, and I saw her. My heart thumped hard against the underside of my chest, like a man bracing his weight against a door with one hand while delivering hammer blows against its face with the other. Mom smiled. It was a quick action before she looked back at the TV. My mouth went dry because when she had smiled, her eyes had flickered downward, and so had her chin, in such a way that she could only be saying, Have a look, without having to say it aloud.\n\nI'm not stupid.\n\nI'm not slow.\n\nBut was I imagining this?\n\nWhy would my mom do this?\n\nHow beautiful?\n\nAs beautiful as you.\n\nThat was a question she had asked, followed by the answer I had given. I stared at her naked thigh, with the hem of her dress pulled up to her waist as it curved in a sideways U around her butt. The silver-white light from the TV highlighted the side of her cheek, and my cock hardened so fast I released a groan from my lips.\n\nMom's lips kind of puckered, then parted, then closed. For a second, her profile had that caught-in-the-headlights look that I had worn minutes earlier, but then it was gone. I had to get out of there. I said nothing as I turned forward on the couch, then rose while tilting to my left and away from my mother and father, hiding my bulging jeans as I quickly walked out of the living room and into the connecting foyer and headed up the stairs.\n\n\"Goodnight,\" I called.\n\nDad mumbled something.\n\nMom said nothing.\n\nOnce in my room, my pants came off, but my boxer briefs stayed on. I had my phone in my hand, the lights were off, and I was sitting in my bed, texting Jenna and asking her to call me so I could hear her sexy voice.\n\nBefore she could text back or call, I didn't know what she was going to do, my door opened. I jumped, and I grabbed the pillow to my right and slammed it over my rock-hard cock, which made me grunt. Mom had stuck her head into my room, but she didn't bother turning on the light. I set my phone face down on the bed.\n\n\"Mark,\" Mom said, \"I'm not mad about earlier.\"\n\n\"I know,\" I said.\n\n\"I want you to think about what could happen to you if you do anything with Jenna.\" Mom paused, and I heard her take a deep breath. \"Try, for me, for one week, to abstain from becoming romantic with her. Just try for one week, and maybe some good karma will come your way.\"\n\n\"Good karma?\" I asked, unable to keep the laughter from my question.\n\n\"Yes,\" Mom whispered. \"Maybe you won't be fooling around with Jenna, but there has to be something in this house that can keep you distracted until you understand the responsibility that comes with having sex.\"\n\nA buzzing lightness rushed through my body, and I licked my lips, thankful for the darkness.\n\n\"Okay?\" Mom asked.\n\nI had to take a deep breath before saying, \"Okay, Mom,\" but I couldn't hide the tremor in my voice.\n\n\"Goodnight,\" Mom said. \"Love you.\"\n\n\"I love you too,\" I said as she closed the door.\n\nI looked at my phone, and it only took me a second to decide that phone sex and face time didn't fall under the category of romance.\n\nLess than five minutes later, one of the strongest orgasms of my life tore through my body, leaving me feeling weightless and boneless, my muscles made of jelly. I slept well that night.\n\n<p align=\"center\">6</p>\n\n<p align=\"center\">It wasn't My Imagination</p>\n\nI awoke the next morning earlier than I usually did that summer. I had worked my ass off during my first three years of high school, and I was going to coast through my senior year, which meant that this would be my first summer off in a long time. Thoughts of returning to my slumber came to me, but in the end, I rolled out of bed, put on my basketball shorts and a T-shirt, and headed to my hallway bathroom to finish waking up before I headed downstairs.\n\nThe downstairs has a wraparound floor plan, with the living room to the left, followed by the dining room, then the kitchen, then a hallway that leads to a laundry room, the garage, a great room, and then back to the foyer, staircase, and front door. The great room has a piano, a pool table, a bar, but I don't spend much time in there....\n\nI entered the kitchen at seven in the morning, with the sunlight shining onto the breakfast table through the white curtains hanging over the bay windows. Dad was still home. He wouldn't be leaving until about eight in the morning. Mom worked from home, using her advanced degrees in education to create specialized curriculums for private schools while also selling lesson plans that covered kindergarten through high school graduation to teachers over the internet. She did well enough that Dad often joked about retiring early, by about twenty years.\n\nIn the kitchen, I found Dad sitting at the table, reading his newspaper with his back to the window and the sunlight shining onto his paper. Mom was wearing a lavender robe made of silk with the belt looped once, and the two halves met at the center of her body. I noticed it dropped down to the middle of her thighs--something I wouldn't have noticed before last night. I would have seen it, but I wouldn't have noticed it.\n\n\"Good morning,\" Mom said, giving me a smile and even without makeup on her cheeks, and lipstick on her... lips... she still looked beautiful.\n\nDad's paper fluttered with that crunchy, flappy sound as he snapped it low enough to look at me. \"You're up early.\"\n\n\"Good morning.\" I shrugged and looked about the kitchen and breakfast nook as Dad lifted his paper. \"I'm just up.\"\n\n\"Sit,\" Mom said. \"I'll make you breakfast.\"\n\n\"Cereal is fine,\" I said, taking a seat.\n\n\"I said I'll make you breakfast,\" Mom said.\n\nI sat at the end of the table, to Dad's left. To the left of me was the kitchen island and Mom, who was cooking what smelled like French toast with her back to me and her lower body hidden by the kitchen island.\n\nI looked away from her, thinking, Last night was weird.\n\nWhen Mom turned around from the stove, she set my plate on the kitchen island and picked up the maple syrup. I looked at her, but she looked at Dad, and as she did, she seemed to become lost in thought. Her eyes never drifted in my direction. She held the syrup in her right hand while her left arm came up, and her fingers slid between her robe's lapels. Rubbing motions followed, almost caresses, and as she pulled her fingers out of her robe, she caught her lapel, pulling her robe open to the left. I had to work saliva back into my mouth as the golden-hued upper swell of my mother's left breast came into view.\n\nHoly shit.\n\nMom still hadn't looked at me. She stared at Dad's paper, and then she looked down long enough to pour the syrup onto my breakfast before raising her head and looking at Dad once more. She set the syrup down, then reached up with her right hand and slid her fingers beneath her left lapel and rubbed the top of her left breast, with her palm on the outer edge.\n\nHoly shit again.\n\nI watched in silence as her breast moved, not a lot, not even a jiggle, just back and forth with the motions of her fingers. Her hand came away, and her fingers curled around her right lapel, and she pulled that side open, creating a narrow V down the center of her cleavage. Mom shook her head as if ridding herself of whatever thoughts had been running through her mind, then she picked up my plate, walked around the far end of the island and toward me with a new gap in her robe that I had to struggle not to stare at--but wasn't staring the point?\n\nThis wasn't my imagination.\n\nMom was showing herself off to me.\n\nHoly, motherfucking-shit.\n\nDad read his paper, and I ate, glancing at Mom as much as I could without turning my head to stare at her. Maybe I was supposed to look, but she was still my mother, and I still had a girlfriend. Despite the warmth flowing through my heart and into my skin, turning it red due to my mother's good intentions, a little corner of my mind wanted to curl into a ball and close its eyes. I could hear it chanting, This is weird. This is wrong. This is weird. This is wrong. Lucky for me, the chanting's volume faded with time, as though someone was lowering the volume of a stereo with the unnaturally slow but continuous rotation of its dial.",
        "Mom spent some time preparing her breakfast at the kitchen island, cutting various fruits as her robe opened a little more, baring more of her breasts, but never as much as I hoped or feared. My heartbeat sped up with every flutter of her clothing, its thin silk sliding over her body, clinging here, gripping there, and rolling like waves with dips and rises as she continued with her task.\n\nShe never looked at me, only at Dad, and the one time his paper crinkled as he lowered it, Mom reached up with her left hand and pinched her robe shut. Dad didn't look at her, he was sipping his coffee and had happened to tilt his paper forward, but when it had come down, Mom had covered up. It was at this time my cock, already warm and relaxed, decided to have its first stretch of the morning.\n\nAs Dad's paper rose, Mom's robe came open. She finished cutting her fruit for her breakfast and came to the table, sitting across from Dad with an assortment of bite-sized bananas, berries, citruses to nibble on with a side of yogurt for dipping.\n\nShe ate. Dad ate. I ate, only I had a view of the inside of Mom's left breast, almost to her nipple. The soft swell of her chest mound made my mouth water for more than her French toast.\n\nAs I watched my mother, my cock tingled, and the head swelled, pushing the fabric of my boxer briefs and basketball shorts outward and upward. After teasing me, how did my mother think that I wasn't going to run off to the one girl who had already guaranteed me some pussy? How could Mom hope to keep me at home when what I really wanted was--\n\nThe shock of an electric spark zapping my brain put a stop to my thoughts, and when they came back, a new question had entered my mind. How far was my mother willing to go to keep me from being sexual with Jenna for the next four years?\n\nDid I want to know?\n\nMy mind stuttered, like an old film reel that had lost its tracking, and everything blurred. I didn't know if I wanted to know, but my dick, the nasty mother fucker, who wanted to spread open the little lips between my girlfriend's thighs, had no problem growing thick and hard and hell-bent on finding out.\n\nI needed to get out of the kitchen, but I had a hard-on, so I sat there, eating with a slow, deliberate gait as I willed my fucking chubby friend down to half-mast. It wasn't easy since I was sneaking glances at my mother's tit while wishing her robe would move a hair more to the left. I wanted to see the shade of her areola and maybe the size of her nub.\n\nThe size of her nub--her fucking nipple!\n\nI had been aware of her nipple--nipples--since the start of this, but it was her flesh that had stolen the attention of my eyes and other, darker thoughts had also kept my mind occupied, but I had been aware of my mother's nipples. What had started as smooth silk against the jutting swell of her breasts had developed small rises in their surface--rises that had pushed the fabric outward in a pair of points. Growing and growing, they thickened and hardened, my imagination witnessing the tight swirling and contracting of her flesh, seeming to swell while stretching outward as the little cracks in her nipple flesh constricted.\n\nShit--my balls hurt.\n\nAs soon as the last bite of French toast entered my mouth, I pushed my chair back and turned in my father's direction. He still had his newspaper raised. Who the fuck reads an entire newspaper? I'm glad he did because the left side of the paper kept his eyes away from my tented shorts. I should have slid from my chair in a half-crouch and slunk away with my back turned to my mother before standing, but I didn't do that. I don't know why, but instead, I pushed my chair back, and as I turned to my right, I stood, leaving no doubt about the effect my mother had on me. Even if she were looking forward, her peripherals wouldn't have failed to notice the hard-on that she had raised.\n\nI should have rushed upstairs to jerk off, but instead, I jumped onto the couch facing the TV, grabbed the remote, and looked for something to watch. I flipped through the channels, not paying attention, as I looked at the clock and waited for my father to leave the house. By the time he had left, my hard-on had gone down, but my leg had started to fidget.\n\nDad left just before eight in the morning, and I waited in the living room, unaware of what I expected or what Mom had planned. Jenna was always available after her half-day summer classes, and a little bit of teasing wasn't going to keep me away from her. But would a whole lot keep me away from her? No. Mom's teasing wouldn't keep me away from Jenna, that's for damn sure, so the question came to me again: How far was my mother willing to go to keep me away from Jenna for the next four years?\n\nGet your shit together, I thought. Did Mom really want to do this? Had I driven her insane? No way, she was a rational woman--educated, composed, experienced, and.... Mom walked into the living, just beyond my couch, stopping in front of me, but off to the side.\n\n\"Hey,\" I said, staring at her back and butt--mostly her butt--which her robe rested upon, with the cloth covering her center groove and dipping between her cheeks.\n\n\"Hey,\" Mom said, not turning around. \"I'm going to work for a little bit, but then I'm coming downstairs to do some housework.\"\n\n\"Okay,\" I said.\n\n\"It's going to be hot today.\" A tremor underscored Mom's voice. \"Don't go anywhere.\"\n\n\"Jenna doesn't get out of school until noon,\" I said. \"And her dad insists on picking her up now instead of me.\"\n\n\"Good,\" Mom said. \"I'll be back in a couple of hours to clean, okay.\"\n\n\"Okay.\"\n\nMom turned, and when she did, her robe lay open from her neck to below her breasts, her inside swells and cleavage visible. Her perky handfuls left some open space between her breasts that made my mouth water and tongue dance. Mom paused for a moment, standing still long enough not to make things obvious before she left the living room, leaving me alone with my thoughts.\n\nFuck me, but this was unexpected and strange, and yet it filled me with a kind of nervous yet excited energy that I needed to release. I waited until I was sure that Mom was in her room before I raced upstairs to my room to relieve myself of this adrenaline-like burden with hard pumps of my cock.\n\nPorno, stories, camgirls--I didn't spend money on them--and other kinds of options presented themselves to me. I was ready to take them, but instead, I found myself searching Reddit for real-life stories about moms coming onto their sons, or vice versa. I was sure that every one of them was bullshit, but even if just one were true, then maybe I'd have an idea of how to handle this new side of Mom.\n\nI mostly skimmed links to sex stories (many by Mr. Here/MrHereWriting) and actual website entries. Each one that captured my attention said the same thing: Be assertive. Don't let your golden opportunity go to waste. If your mother was coming onto you, then go after her. Don't let your mother run away from you, and don't let the guilt that was bound to set in once she offered herself to you take hold of her soul. Take hold of her soul! That was a bit dramatic--a little over the top--but it also made sense.\n\nYet, why would I want to test this out?\n\nMy cock knew why, but what did a dickhead know?\n\nMy fingers danced on my keyboard, not clicking any of the keys, just dancing over them with enough pressure to make the plastic caps rattle and shake. I should have got busy jerking off, but that's when I heard a knock on my bedroom door.\n\n\"Yeah,\" I called out as I minimized my porn windows, and my heart jumped to a jogging pace.\n\n\"I'm going to go downstairs to clean now,\" Mom said, speaking through my door. \"Just to let you know.\"\n\n\"Okay.\"\n\nHow often had I watched my mother clean? How often did she? Up until today, I had never noticed when Mom cleaned the house. I spent most of my time in my room, sleeping until eleven in the morning because this was my summer to relax.\n\nI looked at my clock.\n\nIt was ten in the morning.\n\nHoly shit, I had spent about two hours reading incest threads involving moms showing themselves off to their sons. Much of it sounded like bullshit, and I had decided that all of it was bullshit, but still, some of it had sounded like it could be true.\n\nBe assertive.\n\nMaybe I didn't know how far I was willing to push this, let alone Mom, but a soft voice in my head sang to me with words spun from honey and silk, crooning, Just have one more look at your mother. Why not? She's a head-turner.\n\n\"Why not,\" I said to my empty room, and I stood from my desk, having to place my palms on the arms of my chair to push myself up. My body weighed a ton, but up it went, and on legs heavier than I could remember them weighing, I walked downstairs as the tempo of my heart shifted into a higher gear, and then another.\n\nMom was in the living room, wearing an outfit that I'd never seen her in. Her clothes looked new, and they could have been. She could have bought them yesterday. It's not like we spent twenty-four hours a day together. She had gathered her long, flaxen hair into a bun, one of those where the hair swirls about itself with neither a beginning nor an ending. She had donned a gray cotton house shirt that hugged her body and molded to her breasts, emphasizing their softness and shape while detailing her small waist and long, graceful arms. While the shirt had caught my attention, it was her shorts that had made my heart shift into a higher gear yet again.\n\nThese were dance shorts, and I knew my mother had danced once upon a time, mainly from grade school through college, and then just for fun. They were black and small and high-tied along her sides so that they angled downward from her hips to her crotch and her ass. They had loose leg holes, and because of their smallness, I could see the hint of my mother's ass cheeks, their very bottoms. Just a line of them, but that was enough to get my pecker going.\n\nWow.\n\nFrom that line, her long legs, with a hint of muscle curving her thighs and hamstrings, descended into her calves and down into her tennis shoes, where I could see the white rims of her ankle socks. Her legs looked longer than normal--and they were already long--but that was because her shorts rode upward toward her hips. Fuck me, but my mother's swan-like body looked yummy.\n\nHow far was I willing to push this?\n\nI took a deep breath and said, \"Hey,\" before I left the stairway and walked into the living room.\n\n\"Hey,\" Mom said, smiling at me from where she stood by the living room windows, opening up the heavier curtains, but leaving the transparent curtains closed. \"I'm going to clean now, but you can just relax and watch TV. I won't bother you.\"\n\n\"Sure,\" I said, my cheeks reddening the moment I saw a light shade of pink blossom across my mother's face. It was like watching the sunrise, and I had to control the sound of my next breath as I filled my lungs with air. \"I'll just sit.\"\n\n\"Okay,\" Mom said and turned away from me to run one of those handheld, static dusters over the shelf on the left side of the TV.\n\nI crawled over the back of the couch, grabbed the remote that lay on the center cushion, and turned the TV on, flipping through channels right away. Mom kept her back to me. I took in the smoothness of her legs and the cusps of her cheek bottoms, where they joined the backs of her thighs. Could I see her cheeks, or was I just imagining it? When Mom pushed herself up to her toes, her shorts lifted just enough to give me that small glimpse of ass flesh my cock was tingling to see.\n\nI say my cock because my cock stiffened when I was positive that Mom was giving me glimpses of her cheeks. I moved on the couch, pushing myself into the corner between the armrest and the backrest, lifting my feet onto the cushions, and pulling my knees up to hide my bulging shorts.\n\nLet her see.\n\nI shook my head, and yet I had let her see me in the kitchen, but I had done that without much thought. Still, that let her see whisper gave me goosebumps, and Reddit had said to be aggressive.\n\nStop your fucking thinking, I thought.\n\nMom dusted the top shelves next to the TV and then the middle, then she backed up and started dusting the shelves and picture frames that were level with her thighs. She was dusting, but not really. Her arm moved, and so did her wrist and the duster, but the fibrous, Q-tip-like end only glided over the picture frames and various pieces of art that Mom had collected during her lifetime.\n\nMy heart sped up as she started to bend over--at the waist. Her legs stayed straight and parted, forming a triangle between her thighs that pointed straight to her muff. Mom had backed away from the shelves so far that she could now get her head below her waist while keeping her legs straight. What balance! Mom did enjoy her yoga. Her legs tightened, their firmness creating barely-there curves, but what made my heart speed up the most was action at the apex of Mom's thighs.\n\nHer small, black cotton shorts had pulled tight between her inner thighs, forming a thick but thin thong while the back leg holes had ridden upward, baring about a quarter of her firm butt. I could see this new arrangement of her shorts, but she had to have felt it, and even though I knew what she was doing, chills of adrenaline rolled through my shoulders and down my arms. I shivered, feeling the light prickling of excitement bouncing across my skin like water sizzling over a hot surface.\n\nWhat was Mom thinking?\n\nWas this turning her on too, or was this something that she was only doing out of necessity? How the fuck could a mother desire her son, no matter what the scumbags on Reddit claimed? (Was I one of those scumbags now?) Did she have any idea what her desperate attempt to keep me out of Jenna's pussy was doing to my mind? My thoughts? My desires? My cock?\n\nFucking hell, but there was no way my mother had thought this through.\n\nNo fucking way.\n\nBe aggressive.\n\nThe patch of cloth between her legs pulled inward as she widened her stance, baring her inner thighs to her outer labia and whatever kind of panties she was wearing beneath her shorts. A thong? She had to have been wearing a thong. I couldn't see her labia, but my sight caught the edges of her tender, outer folds.\n\nJust the fucking edges!\n\nJust give me half an inch more, I begged her shorts, but then she straightened her back, stepped to the side, and dusted around the TV. I found solace in her small butt, which wasn't flat, and not too round. Mom had a good butt. A wholesome butt that made my ball sack tingle. A mom's butt that made my knob throb--a throb from a mom who could surprise a son and his friends with her sexiness.\n\nHow long before Jenna returned home from school?\n\nToo long.\n\nI went back to watching Mom while doing my best to shut down my mind.\n\nMom finished with the TV, turning sideways to me as she walked to the next set of shelves, and my vision zoomed in on her breasts as they pushed against her gray cotton shirt. The under swells had a softness to them, while the upper portions sloped like a ski jump, ending with her thick nipples that had hardened to points half an inch long.\n\nJesus, they're just cutting right through her shirt, I thought.\n\nMy balls pulsed and through my cock shot a bead of precum that widened my shaft. My hips rolled on their own and out spat my wad of cream, wetting my boxer briefs enough that I could feel the wet stickiness against my crown.\n\nMom's head twitched as though she wanted to turn to look at me, but she never turned her head that far. Instead, she passed the TV and went to work on the shelves, standing straight and bending over, squatting, and pushing her butt outward. Sometimes she stood with her legs closed, and sometimes she opened them. She stretched upward, baring the bottom curves of her butt, and once she reached back with her left hand to scratch the top of her hamstring. Her elegant fingers pulled her shorts upward, exposing a solid quarter of her cheek, tanned to match the rest of her body, without a divot or blemish marring her smooth, angelic skin.\n\nAnother wad of cum left my balls, and I closed my thighs, pressing my knees together as a rolling cloud of sensitivity bundled itself around my knobs and tickled the tip of my cock. Fuck me, but I was going to come hard after this.\n\nAfter dusting, Mom grabbed the vacuum and gave the carpet in the living room a good twice over, maybe thrice, as she ran the machine over the same spot in back-and-forth motions that made her little-ish titties bounce. She didn't look at me as she cleaned, even as she faced me most of the time. I watched, never once looking at the TV as her beaded nipples drew my gaze with the strength of a tractor beam.\n\nEventually, Mom's cleaning had to come to an end, and when it did, she looked up at me, smiling, then said, \"One room a day. I hope I wasn't in your way.\"\n\nI shook my head, and my mother never dropped her eyes below my face. Not that I was flaunting my hard-on, but with my knees up and a pillow now in my lap, she had to have known what was going on below my waist.\n\n\"Well, I need to get back to work,\" Mom said. \"But, I'll see you here later, okay?\"\n\nI nodded my head, but I was already thinking of Jenna's juicy pussy in my hands. Mom went upstairs, and I went to my room, noticing the time. I had about an hour before Jenna would be home, so I spent the next forty-five minutes punishing my cock for its dirty thoughts about my mother. Twice I nutted, and twice it was to the kind of porn that I had never watched before. I had watched my share of daddy-daughter scenes and brother-sister scenes, but I was neither a father nor a brother, so the ickiness of those scenes had never entered my mind during those episodes of sensual fulfillment.\n\nAs noon approached, I jumped in the shower, cleaned the sweat from my body, freshened up, and as I exited the bathroom, my eyes widened at the sight of my mother in the hallway. I couldn't tell if she had been waiting for me or if she had been on the way to my room, but there she was, paused in mid-step. And there I was, with a towel around my waist with the rest of my upper body bare: shoulders, chest, arms, and abs. Mom's eyes looked down, then sprung back up to meet mine. The green in her irises had an inner glow that I had never noticed before.\n\n\"I'm going to go get some sun,\" Mom said. \"Would you like to join me?\"\n\nShe smiled.\n\nYes.\n\nBut what I said was, \"I'm going to go see Jenna.\"\n\nMom's smile straightened, and she gave me one of those looks before she said, \"I bought a new bikini that I could use an opinion on.\" She smiled again. \"Give me ten minutes of your time.\"\n\nA whisper of breath left my lungs, whistling through my lips as a bead of water dripped from a hair hanging over my forehead and fell downward through my vision. I could almost hear that tear-shaped bead of H2O burst apart as it landed on the carpet below me.\n\n\"Okay,\" I said.\n\nMom's smile widened, and she hopped forward so fast that I couldn't react before she pushed up to her tiptoes and pecked me on my cheek.\n\n\"Thanks,\" Mom said. \"I'll see you down there soon. Wear your suit.\"\n\nShe had bought a new bikini as though she hadn't owned bikinis that were small enough as it was. Fuck me, but I decided that Jenna could wait a few minutes, but only a few.\n\n<p align=\"center\">7</p>\n\n<p align=\"center\">Pushing it Poolside</p>\n\nWe had a big backyard, square, with landscaping and plenty of green, some trees, and a pool house next to a Roman-shaped pool and an elevated spa off to the side. White tile surrounded the pool, the edges, and the granite rock forced a backdrop around half of the pool with an outcropping of rocks where a decorative waterfall added a final touch of paradise.",
        "I stepped through the dining room's swinging glass doors and into the sun, the rays of light warming my skin on contact. No shirt covered my upper body, but a white towel hung over my left shoulder, and a pair of colorful boardshorts circled my waist. I had chosen the shorts that Jenna had bought me. They hung low enough on my hips that if I hadn't trimmed my pubic hairs, more than a few curls would have poked out over the waistband. Mom didn't like them--not when Jenna was around, and Jenna's fingers had a tendency to glide across my skin, but maybe that would change now that we were alone. If Mom could show off, then why couldn't I? (It had taken some effort to pull those shorts from their drawer and slide them up my legs.)\n\nNext to the pool, opposite the granite wall, there was a row of white-cushioned lounge chairs and small glass tables. That's where I found Mom. She lay on her back, with a white tennis visor on her head and sunglasses over her eyes. Her skin didn't shine with lotion, and my heartbeat did a double-thump as soon as I saw that. She wore a small, red bikini top over her breasts, the kind made of strings that wrapped around her back and hooked over her shoulders, around her neck. The cups were half-moons that cut an angle across her breasts, covering her nipples but leaving the inner swells and the sides of her tits exposed.\n\nI wanted to whistle. I had never seen my mother wear a top that exposed so much of her tit-flesh, and yet, I had to hide a sigh. I don't know why I had thought that Mom would have worn less, but I had hoped. Did she think a bikini would keep me from running off to Jenna after her teasing today? And as if she wanted me to run off to Jenna, around her waist, she was wearing a mid-thigh length, white, semi-transparent wraparound skirt. A skirt? Damn it!\n\n\"It took you long enough to get down here,\" Mom said. \"I was about to go inside after you.\"\n\n\"Ah, well,\" I said and shrugged. \"I was just picking out my suit.\"\n\n\"I see,\" Mom said. Behind her glasses, I couldn't tell where her eyes had fallen on my body.\n\nI walked over to her and dropped my towel on the chair next to hers. I was about to sit down when she said, \"How about a quick dip?\"\n\n\"Sure,\" I said as the hairs on my body reached skyward.\n\nMom removed her visor and stood, her butt toward me, and through the transparent mesh of her skirt, I caught glimpses of her cheeks and thighs. Before I could decipher whether she was wearing a G-string or a thong, she unwrapped her skirt, revealing a thick red thong running through the crack of her small, golden, and pear-shaped ass.\n\nGod damn it, but my father was a lucky man.\n\n\"No tan lines,\" I whispered aloud as though my mother wasn't four feet from me.\n\n\"No,\" Mom laughed. \"No tan lines.\" She turned around. \"So, do you like my new bikini?\"\n\nOh, dear lord, yes--yes, I did.\n\nThe thong riding my mother's crack swept outward at her lower back, just above her cheeks, leaving them bare. The strings were maybe a quarter-inch thick, biting into her skin a tad, giving her slenderness a faint bulge above and below her waistline. In front, they swept down the cut of her hips to the V of her crotch, where they connected to a red, triangular patch of cloth that didn't quite cover my mother's vanilla pie. A quarter-inch of labia lay exposed to the elements. I could see the impressions of what had to be a fluffy landing strip pushing against the front of her nylon panties--panties that rode so low on her mound that I could see several wispy, flaxen hairs poking above the nylon.\n\nMy cock thickened, the head expanding at a slow rate--slow enough that the stretching of my glans exploded through my nerve endings.\n\n\"Mark?\" Mom asked.\n\nI raised my eyes, devouring her long body and her apple-sized breasts, whose just-over-a-handful size looked smaller than they were due to her height. Her nipples stood out straight and hard, stretching the nylon fibers forward and sideways, threatening to rip the threads apart. When I reached my mother's face, I saw swirls of pink in her cheeks, but her sunglasses hid her eyes. An almost-smile ghosted the corners of her full lips.\n\n\"My bikini?\" Mom asked.\n\n\"It's breathtaking,\" I whispered.\n\n\"Thanks.\" Mom's smile widened. \"I'm glad you like it. I've bought more, too, for the rest of the summer.\" She breathed in, shivering, and then out, the sound trembling in the air. \"And if things go well, maybe you can help me pick out more?\"\n\nI nodded my head.\n\nMom lifted her left hand to her glasses, took the temple piece between her thumb and forefinger, and slid them from her face. There was a smile in her green eyes and something else that I could only call a victory. She tossed her glasses on her lounge chair and turned away, walking toward the pool with her butt cheeks rolling and her long legs slipping one in front of the other with each step. As I drooled over her ass, my eyes caught the heart-shaped gap at the top of her thighs and the tender bulge of her soft pussy meat as it created a hanging crescent in the gusset of her panties.\n\nOh my god! My cock sprang up so fast, and my balls tightened so hard that I had to clench my teeth to bite back my groan. Mom reached the edge of the pool and dove forward, as graceful as the swan she was. As her steepled hands parted the water, I raced forward and dove in as well. The water coating my body was a crystalline blanket of freshness. I made sure to rise above the water at a depth that kept my waistline and erection hidden beneath the swaying water's surface.\n\nLet Mom see, my cock yelled at me. Let her fucking see what she does to us!\n\nMaybe later, I mumbled to my perked-up soldier.\n\nMom came out of the water after I did, having swum to the opposite edge of the pool. Her head erupted through the water's surface, her hair whipping up and back and flinging globs of liquid through the air. She turned around, running her hand over her face as the water painted her nylon bra to her tits and more ran down her stomach and hips and back into the pool.\n\n\"That feels good,\" Mom said. \"Race you to the end!\"\n\nMom dove to her left, elongating her body as she started a sidestroke. I watched her for a moment, my eyes freezing to the gap between her thighs and the tight roll of nylon hammocking her muff. She had so much pussy meat for such a slender woman--so it looked in the water. My cock jerked, the head trying to rip through my shorts, creating a jolt of pleasure that ran along my shaft. Moaning, I followed my mother's body through the pool, wishing that I had worn a pair of goggles so that I could better appreciate the light glinting off my mother's body through the thickness of the oscillating water.\n\nShe touched the back wall and broke through the surface. I followed. She shook her head, made a wuh sound, and swam away from me. Once again, I watched her slip through the water, my eyes finding her thong as it cupped her crack, and then her gusset as it cradled her wet pussy. Jesus Christ, but Mom had to know that I wasn't going to just beat off after this when I had Jenna offering her juicy clam to me.\n\nI followed Mom back to the shallow end of the pool, my dick swinging in my shorts. Every kick of my feet and twist of my body sent a buzz through my cock. My dick wanted pussy. My mind wanted pussy. Fuck, my soul wanted pussy, and it wanted it right then.\n\n\"I think it's time for some sun,\" Mom said, standing in the shallow end with the water lapping around her thighs. I didn't hide my gaze this time, looking down her dripping wet body and focusing on the triangle of cloth that left the softness of her outer labia uncovered. \"Don't you?\"\n\n\"In a second,\" I said, hidden up to my waist beneath the water's surface. \"I just\"--my heart thumped, creating a hollow boom within my chest that I was aware of but too excited to feel--\"want to watch you get out of the pool.\"\n\nMom's eyes widened, and she seemed a little taken aback, but then she smiled with a kind of gotcha quality to her lips. She turned around and walked toward the steps, her ass and thigh gap holding my cock's attention. I just wanted to be between her thighs.\n\nEighteen-year-olds weren't meant to be virgins, not when women--adult, fucking women--who shined like my mother were teasing them.\n\nMom walked around the front of the pool, her body dripping and her hair plastered to her body, its light, bright color at odds with her golden skin. I loved it. The sides of her almost-little tits jiggled, bouncing just enough to make my blood pump. Her body was the picture of classically toned slenderness not influenced by today's Instagram-fit girls or the pre-woke, skinny-girl chic, runway models, and it made every nerve ending through my flesh buzz with adrenaline.\n\nMom grabbed her towel, drying herself off with long sweeps of the terry cloth. She dried her arms and legs with pushing motions, turning her body so that whatever side she was drying was turned away from me, giving my eyes the freedom to roam over her skin without shame. Mom finished, put on her sunglasses and visor, threading her hair through its headband, and she sat down on her lounge chair. She lay down as the sun beat down on her. She lay with her legs slightly spread and her bikini panties cupping the tender folds between her legs. I could see the faintest impression of them, and I oh-so-badly wanted to touch them.\n\nI walked to the edge of the pool--staring. After a minute of this, when Mom spread her legs further apart, I pressed my cock against the side of the pool, nearly coming. I wasn't about to hump the wall, but I wanted to. Instead, I bent my knees and dropped beneath the water, placing my hands on the lege and pushing myself underwater. I held my breath until a fire burned within my lungs and my throat convulsed--my heart speeding up for another reason. I did this until my erection softened enough not to hurt when I walked, and then I sprang out of the pool, no longer thinking about what I was doing as I walked to my lounge chair.\n\nMy towel found its way into my hands, and I dried myself off, taking my time as I stared down at my mother. Was she looking up at me through her sunglasses? She had the hint of a smile on her lips, and her breathing was far from mellow. Her slim stomach rolled downward and up, her breasts rising and falling with them, her nipples reaching heavenward with unashamed stiffness. Could she feel my eyes on her--even if she wasn't looking at me?\n\n\"Pass me my tanning oil,\" Mom whispered. \"I think I could use just a bit more color, don't you?\"\n\n\"Sure,\" I said, bending over and picking up the bottle of oil.\n\nMom didn't need more color. She had perfect skin, from its flawless complexion to the sun-cooked gold of her tan, but who was I to argue?\n\n\"Mom,\" I said, my voice shaking, \"I can put it on for you.\"\n\nMom's smile straightened, and I saw her swallow as time slowed. The movement of her throat seemed exaggerated, and it cascaded down her breast, her stomach lowering and rising as well.\n\n\"That's okay,\" Mom said. \"I can do it. Why don't you sit down and enjoy yourself.\"\n\nI licked my lips and said, \"I think I'm going to go see Jenna,\" in a quiet, almost guilty tone.\n\nTime stopped.\n\nI heard the wind and the static-like rustle of leaves blowing in the breeze. The sun moved, its rays growing hotter as it curved through the air, and then a chill hit me, and I shivered despite the heat.\n\n\"Okay,\" Mom whispered.\n\nOkay, what?\n\n\"Okay, what?\" I asked in a whisper of breath.\n\n\"Okay, you can put the oil on me,\" Mom said in a tone that matched mine. \"My back first.\"\n\nMy shorts moved outward as my cock grew, and Mom's chin tilted down, her eyes staring a straight line toward my growing bulge. She froze for a moment, her breathing heavy, and then she rolled to her right, away from my cock, and turned onto her stomach. She turned her head away from me, crossing her arms beneath her cheek, and she laid her head across her small forearms.\n\nI swallowed as my heart punched the underside of my chest hard enough to make my throat hurt. The world brightened, and I sat on the edge of Mom's chair as my vision swooned, moving left-to-right and left again, like a pendulum. I shivered again, and then I took a deep breath that sounded extra loud to my ears. I released it, then took another, and released that in a tunnel of wind through my lips.\n\n\"Are you okay?\" Mom asked.\n\n\"Yeah,\" I said as my prick hardened fully. \"I'm fine.\"\n\n\"Okay,\" Mom whispered.\n\nThe cap to the oil was one of those push-down on one side and spring-up on the other kind, and I depressed it with my thumb and then held the bottle over my mother's back. My eyes stared at the strings of her bikini bra, and I asked, \"No tan lines, right Mom?\" in a faraway voice.\n\nMom took a deep breath.\n\n\"Mom,\" I said with enough urgency in my voice to make my suggestion sound like a demand.\n\n\"Untie my bra for me,\" Mom said, \"and drop the strings to the sides.\" The sides, where I could already see the bottom flesh of her breasts, bulging outward as her upper body pushed their roundness into her cushioned chair.\n\nI reached down with my hand, fingers extended, the tips trembling, and I plucked one of the strings of her bra's bow on the first try. I pulled, watching as the string slid through the knot, and the bow shrank and shrank, snapping free and leaving a simple crossover knot. Pulling the string to the side and giving it a shake to loosen it from its partner, I tossed it to the side, and then I grabbed the other string, dropping it to Mom's left side, undressing her back. As the strings landed on the cushions, the cups of Mom's bra fell away, baring the side of her tits to my eyes. My cock jumped, and I pulled my hips back, trying to find room within my shorts for my aching erection.\n\nThere was no room.\n\nTilting the bottle of oil, I let a stream of the thick liquid spill from the cap's nozzle. The sunlight caught its burnished gold color, making it sparkle--reminding me of that album cover in my grandmother's collection where honey drops from the comb. The end bulb struck the center of Mom's back. Her spine moved as she reacted to the oil's touch, and I watched as a pool formed over her skin, then slipped to the side in thin rivulets of liquid sex.\n\nSex.\n\nI placed the bottle to the side, freeing my hands, and extended my fingers, bringing the tips down to my mother's back. They shook until they touched her skin and moved upward, my digits spreading as far apart as they could as I stroked my mother's skin. My adrenaline spiked, starting in my heart and radiating outward, finding the pathways through my shoulders and arms and down into my hands, where the energy passed through me and into my mother.\n\n\"Mm,\" Mom moaned, but it sounded like a low, muffled groan that she had tried to hold back. Her mouth never opened, and the sound was low and faint, but it was there. My heart raced, and I pushed harder into her skin, trying to get her to moan again. She didn't, but her lips twitched as I increased the pressure across her smooth skin.\n\nI reached Mom's neck, pushing my fingers into the slope running down to her shoulders. My mother had a firm body, but not too firm, her muscles lying beneath a single layer of feminine softness, giving her body all the hints of having curves while still appearing thin. She had a showgirl's body, a runner's body, a dancer's--the kind of body that deserved admiration, coupled with a beauty that could turn a strong man weak or a hard man soft.\n\nAll this from just touching her, I thought.\n\nI had never touched my mother before. Not like this. A hug, a kiss on the cheek, a tug on her arm or hand, but I had never stroked her in such a familiar way. There was no other way to rub oil on a person, whether they were a friend, a girlfriend, your mother, or a client at a spa. This was as intimate as two people could physically become, outside of sex.\n\nSex.\n\nI ran my hands down my mother's shoulders and over her arms, straightening each of her arms one at a time and having to tug the first one loose before she gave it up. I ran my hand down her arm, over her small bicep and forearm, my long fingers circling her limb completely. I reached her fingers, and I covered them with oil as well, taking time to stroke each one of her digits before making my way back to her shoulders, where I rowed my thumbs over her skin, warmed by the sun--and, I hoped, by me.\n\nThe more I touched my mother, the harder she breathed and the calmer I grew. I stayed hard, and my excitement rushed through me, pushing through my veins in thick pulses of light, but I remained calm.\n\nWhat was my mother feeling?\n\nI lowered my hands down her back with my thumbs meeting along her spine. Her skin moved before my fingertips as I fanned them outward, turning them sideways so that they faced my mother's ribs and the sides of her breasts. Oil glistened in the light, and the velvet texture of her flesh sent ripples of desire through my arms. My cock swelled, and out poured a hefty glob of precum that would have given me a thick droplet of dewy goo to add to the oil covering her back.\n\nIf only I could rub my precum on her....\n\nIf only I could.\n\nWhat a terrible, horrible, and thrilling thought. And like that, I had begun to free myself of every reservation that I had concerning how far I was willing to push my mother in her game of tease with me.\n\nFreeing myself--that final moment that pushed me across the line that Mom had drawn--didn't mean that I was without fear or anxiety. It took an effort to push my hands outward, the tips pointing left and right, and then curling over Mom's slick back toward the outer bulges of her breasts. Mom tensed as my fingers slid down her ribs, straight down toward the cushion, not backward toward her hips. Straight down, to her titties, almost reaching them, almost there, almost touching their softness until--\n\n\"Mark,\" Mom said in a whispered rush, \"your hands are slipping in the oil.\"\n\nThey aren't slipping, Mom.\n\nI swallowed to regain my composure. My cock ached and twitched, and after a pause, I moved my hands down her ribs to her sides. Touching her like this made her seem small. Her great Motherhood shrunken down to a normal woman, a sexy woman, who was letting me touch her in ways that she never had before. My cock jerked again, spitting up more precum, and I released a shaky breath as I moved my hands over her sides to the small of her back.\n\nMy thumbs pressed into my mother's spin, then rowed up and around, and I opened and closed my fingertips. This was no casual massage that I was giving my mother. I caressed her, opening my fingers wide and gliding my palms over her skin, watching as her flesh moved before my fingertips in a wave of visual stimulation.\n\nWhat was my mother feeling?\n\nHer breathing had deepened. She lay still, mostly, with her lips tight and her eyes unreadable behind her sunglasses. I moved my hands lower, then higher, then lower, nearing the quarter-inch-thick waistband of her thong bikini. Closer and closer and closer....\n\n\"Mark,\" Mom snapped when my oil-slick hands moved over her thong's waistband and right on her ass.\n\n\"I have to get all of you,\" I said, my voice heavy and low, the sound of my breathing exciting me in its perversion.\n\nDid it excite my mother?\n\nHer breathing had deepened.\n\n\"Jenna,\" I said as I pressed my palms into my mother's small, soft ass. Soft on the outside, firm on the inside, yet not as firm as a teenager's ass. That contrast between young tightness and mature firmness sent a sensual heat through my body that made the world spin. \"Jenna lets me do this whenever I want.\"\n\nMom hissed.\n\nI curled my fingers down her butt, then opened them, my thumbs riding the edges of her shallow crack and grazing the line of the thong running between her cheeks. I didn't try to go under her thong, but I wanted to. Fuck, I wanted to, and my cock, dripping precum, was more than enough proof of my desire for my mother.",
        "\"Hurry up,\" Mom whispered, her voice catching as I pressed the tips of my thumbs against the bottom of her ass cheeks. I followed the line of her hamstrings from the outside in, all the way to the inward curve down into the softness of her maternal muff. \"Do my legs. Now.\"\n\nI stopped with my thumbs outside of her pussy. They were so damn near the nylon of her panties that my fingers trembled from the heat between her legs. As I pulled them away, I pressed my thumbs harder into her tender flesh and pulled outward, spreading her open between her legs like the velvet curtains of a Broadway stage. Mom's pussy pulled outward, her outer lips slipping past the protection of her thong's covering and giving me a glimpse of her softer, fuller crescents.\n\n\"Mm,\" Mom moaned, the sound strained as she bit back the quiet, almost nonexistent sound.\n\nI stopped my thumbs' movement, holding my mother's pussy open from the outside pressure on her inner thighs. Staring at the center of her cunny beneath her panties, I watched as her crimson nylon stuck to her lips, outlining the long slit beneath their fabric. I saw her folds, outer and inner, and the opening between them, where the red of her panties had darkened, growing wetter and--\n\nHoly fuck, my mother was wet with pussy juice.\n\n\"I need to go back to work,\" Mom said, her words coming in a rush that was almost a pant. She pulled away from me, holding her right hand over her breasts as she stood, facing away from me. \"I expect you to stay at home while I work.\"\n\nHer voice had trembled as she spoke, though it carried it a hard edge, the edge that I was used to hearing whenever I managed to get myself into trouble.\n\n\"Okay,\" I said.\n\nMom walked away, leaving me with my hard-on, and when I was sure she was in her office--with windows that faced the backyard--I took out my cock and jerked off hard and fast in full view of her windows. I sprayed my cum onto my stomach before wiping it off with my towel. Satisfied, I jumped back into the pool to cool down.\n\nHad Mom watched me?\n\nI hoped so.\n\n<p align=\"center\">8</p>\n\n<p align=\"center\">An Agreement</p>\n\nI didn't see my mother again until after Dad had arrived home. She had changed from her bikini into a pleated white tennis skirt that barely reached the middle of her thighs. A tight, dark blue polo shirt with white trim and short-short sleeves covered her upper body. We didn't talk, and Mom made dinner, and we ate, her tits pushing against her top like two perky orbs outlined by the faintest impressions of a bra. It must have been a thin bra, maybe lace or something transparent, I didn't know, but my mind spent most of its time thinking about what kind of bra she could be wearing.\n\nJenna had some transparent bras that she liked to wear for me.\n\nDad said nothing about Mom's outfit. He was too busy mumbling, \"My sleepless nights are getting worse. Can you believe that? They just won't go away anymore.\"\n\nMy dad, as far as I knew, had bouts of acute insomnia, typically lasting for several weeks, then they'd dissipate for several weeks, then they'd come back in an endless cycle of hell for him. When he mentioned this, I saw my mother's face tighten, but my heartbeat sped up. Had the same thoughts gone through our heads at the same time? I didn't know, but I'd like to think that they did. Despite her reaction, I was eager for my father to start taking his pills again.\n\nEven though Mom was wearing a short tennis skirt that showed off her slender legs down to her little, bare feet with their perfect toes and elegant arches, it wasn't like this morning and afternoon. Dad was here, so when Mom noticed me looking for a little too long or a little too hard, she narrowed her eyes at me and sent a firm headshake--with only the slightest hints of movement--my way.\n\nNot long after dinner, I went upstairs, saying, \"I need to give Jenna a call before she thinks I'm ignoring her.\"\n\nMom, who had been reading a book on the couch while Dad watched TV, looked up at me as I headed upstairs and called out, \"Remember our deal.\"\n\nOur unspoken deal, I thought just as my father said, \"Yeah, remember it. I don't want to have to explain to my mother why her grandson had to drop out of high school to take care of his bastard.\"\n\n\"Jesus, Dad,\" I said as my dad laughed, and I continued upstairs.\n\nI talked to Jenna, but I was distracted. She could tell. I knew that she could, but I couldn't tell her why. My thoughts kept drifting back to my mother and the promise I had made her. Did I really make her a promise? Do unspoken promises count? I didn't think--so my cock said to me--but Jenna would be there for me in a week, while Mom might end her desperation tactic if she thought I wasn't keeping my word.\n\n\"Come on,\" Jenna was saying, \"tell me how hard your cock is for me.\"\n\n\"I can't,\" I said, licking my lips and continuing the lie I had told her at the start of our conversation. \"Mom keeps walking into my room.\"\n\n\"Fuck it,\" Jenna growled, \"let her hear how hard I make your cock. I'll let my dad hear if you let your mom hear.\" She made a tongue-clicking sound. \"Every time that my dad thinks that I'm being naughty with you, he gives me this look, and I just want to say, 'Mark makes my pussy wet, Daddy, deal with it.\"\n\n\"Daddy,\" I said, laughing.\n\n\"Well, Dad's my father,\" Jenna said, \"but you're my Daddy.\"\n\n\"Oh,\" I moan-groaned. \"That's so fucking hot.\"\n\n\"I know, right?\" Jenna giggled. \"The dirtier this gets, the jucier my pussy gets for your big, adult dick. Maybe my dad's just jealous of you getting my ass instead of....\"\n\nI groaned again as she trailed off, her voice slick, sly, and dangerously suggestive. My cock grew and grew. Maybe it was for the best if I put an end to Mom's teasing and went straight to Jenna. Why should we torture ourselves by waiting? We could fuck, tell her dad, and call his bluff. It had to be a bluff. Jenna's mom loved me!\n\n\"I've got to go, you nasty girl,\" I whispered. \"I can hear my mom outside of my door. I think she's pacing. I'll send you a picture later, okay?\"\n\n\"Okay,\" Jenna sighed. \"Our parents suck.\"\n\n\"Yes, they do,\" I whispered, hoping it was true in my mother's case.\n\n\"Love you,\" Jenna said, \"and don't forget that dick pick you owe me. I want to see cum and lots of it.\"\n\n\"I promise,\" I whispered as her bratty voice sent a tingle through my glans. \"Love you too.\"\n\nWould she be mad when I didn't send her a picture?\n\nProbably, but I'd think of something.\n\nI left my phone on my bed as I headed downstairs. I had talked to Jenna for an hour; what would Mom make of that? Was she antsy? Was she pissed? Should I pretend that something happened, even when it hadn't? There was danger in that; wasn't there, but how much?\n\nFuck, there were too many variables to digest, so I tried to slow down my thoughts as I descended from the top of the stairs into the TV-lit foyer and living room. Mom, sitting on the back couch with her back against the armrest, turned her head to the left and gave me a long look. I smiled, and she watched me as I walked around the couch and sat opposite her. She had her knees up and together, along with her calves and feet, creating a wall that hid her panties from my eyes.\n\nI leaned back against the couch's arm, bringing my feet onto the couch. Mom looked at me, watching as the soft light flashed across my body. Dad yawned.\n\n\"Did you already take your pill?\" I asked my dad.\n\n\"Yeah,\" he yawned again. \"I haven't had a good sleep in days.\"\n\nI hadn't noticed--what an asshole I was.\n\n\"Gonna go upstairs?\" I asked.\n\n\"You want the TV?\"\n\n\"No.\" I shook my head, though he was lying on his back with his head on a pillow, staring at the TV. \"Just making conversation.\"\n\n\"Make it when the show's over,\" he said. \"If I last that long.\"\n\nI nodded and turned back to Mom. She was still looking at me, and even though the living was dark, and I wouldn't have been able to see much had she spread her legs for me, I nodded at her knees anyway. Mom tilted her head, and I lifted my hands, placed my palms together, then spread my fingers open by tilting them away from each other. Mom widened her eyes, and then she looked toward the TV. I sighed without making a sound, extending my right foot and nudging her left toes. Mom brought her feet back, and when they ran out of the room, she turned on her cushion and lowered her feet to the floor.\n\nDamn it!\n\nWas it because of Dad?\n\nIt had to be.\n\nOr maybe she needed reassurance that I hadn't done anything with Jenna--over the phone. How was I going to do that? Fuck it, I was going to press my luck, and I could assure Mom later that her son had followed her rules, mostly. Was talking dirty to my willing eighteen-year-old girlfriend going to get her pregnant? No!\n\nI sighed again, a little louder this time. Mom didn't look at me, and neither did Dad. I lowered my back down the armrest to my shoulders, and I stretched out my legs, pulling short of touching Mom with my feet. Her skirt lay a tiny bit above the middle of her lap, both atop and along the sides, while the back lay bunched against the back of the couch. The pleats were perfect and rectangular, layered, her long legs illuminated by the bluish-silver of the TV light.\n\nLike moonlight.\n\nWhen was Mom going to pull her skirt up? She wasn't sitting on it, so it wasn't like her movement would disturb Dad. Not that he'd notice by the way he was lying.\n\nTime ticked by, the show went on, and Dad yawned.\n\nAny day now, I thought, throwing my silent words at my mother.\n\nWas she mad at me for touching her today? I had pushed it. Or, if not mad, was she having second thoughts? This game had barely started, so there was only one way to find out. I extended my right foot, the one closest to the back of the couch, with a slower-than-normal motion, making sure that my mother would notice me coming from the corner of her eyes. She did. Her lips twitched, but was she attempting to hide a smile, or had they tightened? She didn't look at me, so I continued forward.\n\nMy big toe touched the hem of her skirt along the side of her thigh. Mom took a deep breath, her apple-sized breasts moving up and down, the tightness of her shirt accentuating the buoyant under-curve of her breasts. I imagined how they'd give under my fingers caresses, and my cock sprung forward as if trying to have a better look as my mother's goods.\n\nI moved my foot toward the back of the couch, pulling Mom's skirt with me, baring her skin. Mom's head tilted to the left, her eyes down for a moment before looking forward again. I kept moving her skirt, back and back, back as far as the curve of her ass and exposing the naked side of her left cheek. She must have been wearing a thong or nothing. The thought made my balls warm as my thoughts went back to my mother's perfect cheek. When I ran my toe across my mother's skin, she brought her left hand down and pushed my foot away, but she didn't move her skirt back into place.\n\nGood.\n\nMy cock had stretched out during this time, filling with wall-throbbing strength and turning my skin slinky into a hungry flesh pipe. Oh, man, but I wasn't going to last a week away from Jenna at this rate. No fucking way.\n\nI extended my foot again, touching my Mom's thigh by her knee. She looked down as I slid my toe along her leg, her lips parting as she let out a long breath. Her head turned a little when I reached her butt cheek, and I saw her throat move in a swallowing motion when I brushed her flesh to the far curve of her ass. Her hand moved, but not before I traced the line of her soft backside upward.\n\n\"Does anyone want a drink?\" Mom said, a touch out of breath and standing quickly. Her skirt fell back into place. \"Rich? Mark?\n\n\"No, thanks,\" Dad mumbled.\n\n\"I'm okay,\" I said, studying my mother's profile and the hardened protrusion of her left nipple.\n\nMom walked to the right, her back to me as she left the living room and entered the dining room, then turned to the right, out of sight beyond the narrower entryway before heading into the kitchen.\n\nI waited a minute before I said, \"I think I could use a drink.\"\n\nDad mumbled something as I rose and turned to my left, hiding my semi-inflated sausage from his eyes in case he turned his head to watch me walk across the couch. Instead, I walked behind my couch, alongside the foyer, and down the narrow hallway along the stairs that cut across the living and dining rooms straight into the kitchen. I found Mom standing against the inside of the kitchen island, sipping on wine. I noticed that I could hear the faint sounds of the TV from where we stood.\n\n\"What are you doing?\" Mom asked, her voice stern, and her eyes narrowed in a glare that I could only call petulant.\n\n\"What am I doing?\" I asked, keeping my voice low though I probably didn't have to. \"What are you doing?\"\n\n\"Mark--\"\n\n\"I know what you're doing. You're--\"\n\n\"Don't say it--don't say it--don't say it,\" Mom said like a jackrabbit thumbing its food and shaking her head as her glare deepened.\n\nI kept my mouth shut. We stared at each other. Mom's expression softened as I did my best to remain neutral. I didn't want to blow this.\n\nShe sipped her wine.\n\nI watched, then I asked, \"Can I have a sip?\"\n\nMom, who had never allowed me a drink before, handed me her half-full glass. I took a long drink, not enjoying the spicy flavor, but I drank it anyway, then handed the nearly empty glass back to her. She refilled it, and we stood there, staring at each other in silence.\n\n\"Mom,\" I finally said, \"You can't keep doing this to me.\"\n\nMom flinched.\n\n\"I know you think it's for the best, but look at me.\" I looked at my semi-hard cock that was already coming back to life as my mother dropped her gaze downward. \"Is this what you wanted? To give me a--\"\n\n\"Don't say it,\" Mom said, her eyes lingering before returning to my face. \"Don't say anything. Just\"--she licked her lips, her face tight, almost frowning--\"just accept it.\"\n\n\"I can't just accept it,\" I said, frowning. \"It's driving me crazy. I need to see Jenna more than ever now because of you.\"\n\n\"Mark,\" Mom said, letting my name hang in the air.\n\n\"Look what you do to me!\" It was a harsh whisper that I gave her--an accusation. \"Look.\"\n\nMom looked down again to where my cock had hardened fully. Her eyes widened a bit, and her cheeks reddened. She moved her head backward. When her eyes returned to my face, I said, \"I know you mean well, but this isn't enough. I'm seeing Jenna tomorrow.\" I shrugged, knowing that a helpless, I'm sorry, expression shimmered across my face. \"I have to.\"\n\nI turned to leave.\n\n\"Mark,\" Mom said, her voice sharp. \"Wait.\"\n\nI turned around, facing her again, and watched as she finished her refill of wine. She set her glass on the island's marble top, and then she lowered her hands to her skirt. My heart stuttered, then jumped into a sprint. She grabbed the hem of her tennis skirt and inched it upward, taking her time, the tops of her thighs brightened by the light.\n\nMy vision narrowed, focusing on my mother below her waist.\n\nShe stopped just below the bottom of her muff, only for a second before continuing upward and showing me a pair of small, white panties. They were nothing more than a tiny triangle covering her inner lips and mound, leaving so much of her tender labia exposed that I sighed aloud. Her sun blonde pubic hairs reached above the low-slung waistband and sprouted from beneath the sides of her small strip of panties. I didn't fail to notice the darker shade of dampness below the outline of her clit.\n\n\"I have more,\" Mom whispered. \"Lots more. Panties that your father has never seen me wear. I can wear them for you, and only for you, if you don't fool around with Jenna.\"\n\n\"Mom,\" I whispered, my insides deflating as I stared at her muff.\n\n\"I mean it.\" Mom swallowed, her voice trembling and her tits rising and falling as though she were sprinting. \"I can wear them and a shirt for you every day while your father is out of the house.\"\n\n\"Mom--\"\n\n\"You can take pictures and videos, for when you're alone,\" Mom said, panting. \"Just don't fool around with Jenna. Please!\"\n\nJesus, I thought she was about to cry.\n\n\"Whenever Dad is out of the house?\" I asked, my throat tight. \"You promise?\"\n\n\"Yes,\" Mom whispered.\n\nIt took forever before my lips moved, but I managed to croak out the word, \"Okay,\" before Mom could say anything else to convince me to agree to her demands.\n\n\"Okay,\" Mom said, her voice trembling.\n\n\"Mom,\" I said, \"I don't know how long I can hold out. I mean\"--I swallowed, and my voice started to tremble--\"you're not a normal-looking woman. You're\"--I shook my head--\"perfect.\"\n\nMom lowered her skirt.\n\nWe stood in silence, and I realized that she wasn't going to speak. I nodded before leaving, and I went up to my room, where I took my dick out and came, then came again, then came one more time before going to bed without sending Jenna a picture of my cock. I had honestly forgotten to send her one.\n\n<p align=\"center\">9</p>\n\n<p align=\"center\">Panties and a Shirt</p>\n\nI woke early the next morning, but I stayed in my room, watching the clock on my phone strike eight, then a minute after, then another, until five minutes had passed, then another five and then another five. During that time, the mechanical growl of the garage opening told me my father was leaving for work, but still, my mother was going to be in her panties and a shirt for me--all day long. I couldn't wait, yet my nerves hit me, and they hit me hard.\n\nThe beating of my heart went from calm, unfelt throbs to a rapid, skipping pace, like a cymbal's rounded edge vibrating after receiving the battering of a drumstick. Goosebumps sprouted across my forearms while my small hairs stood on end, bringing with them a chill that caused my shoulders to dance. Little pinpoints of fuzzy lightness danced over my skin, making my palms and the soles of my feet sweat. Disgusting. My breathing rose, every inhale whistling through my nostrils and thickening in my ears, forming a gelatinous cushion between my eardrums and the outside world.\n\nHoly shit.\n\nI needed to get in the moment.\n\nThe first thing I did was leave my room, speed-walk to the restroom, and turn on the cold water to full blast. Breathing hard and anticipating the chill, I jump in, the water hitting the outermost edges of my body before the rest of me followed, stepping under its jetting streams and tightening up as the freezing liquid constricted my nerve endings.\n\nHoly shit!\n\nThat was dumb, but it did the trick.\n\nBy the time I had dried off and dressed in a T-shirt and basketball shorts--basketball shorts minus my boxer briefs, and that had been a tremor inducing decision with my mind screaming, Choose something! as I stood there as still as an asshole during a snowstorm. Eventually, I settled down enough to walk downstairs without suffering a panic attack. I was going to enjoy my mother today, no matter what.\n\nEvery step out of my room was another step up a mountain, and the tingling had returned to my palms, along with the sweat--palms only. Jesus, but my mother had a strange effect on me. I didn't see her at the top of the stairs, so I hurried down at a jog, my feet rumbling down the steps. I turned right and walked straight through the hallway, cutting into the kitchen, and that's where I found my mother, dressed for me exactly as she had promised to dress for me.\n\nGod damn, but I was one lucky son of a bitch.\n\nMom had chosen a simple combination of clothes, but my cock still rose at the sight of her. She sat at the breakfast nook with her profile to me. A white T-shirt made of thin cotton clung to her body, molding to her breasts, their sides and undersides, and her already rock-hard nipples. The shirt pushed right up to where the underside of her breasts met her chest and then slid straight down, stopping above her belly button and leaving her slim stomach bare, her little belly bottom shallow and kissable to my mind's eye. A white, lacy, elastic band circled her waist, about a quarter-inch thick, and that was all that I could see from her profile, meaning the rest of her panties lay snuggled between her ass cheeks in some kind of thong or G-string. I hoped she was wearing a G-string.",
        "I had stopped as soon as I had entered the kitchen, and my eyes slid from Mom to the table, where her striped pajama pants lay neatly folded atop her pajama shirt, along with a white, half-cup bra made of transparent threads. My cock thickened. The swelling was so tangible that I felt every blood vessel in my shaft expand until my thickness throbbed from root to tip.\n\n\"Morning,\" Mom said, not looking up from her coffee and paper.\n\n\"Morning,\" I said, my voice breaking like a kid's going through puberty.\n\nMom laughed, almost spilling her coffee, but she still didn't look at me. This was supposed to be business as usual, and I understood that, so I told myself.\n\nWhile I did understand our arrangement, that didn't mean I was only going to take my glances as they came. I made myself some cereal and stood on the inside half of the island, leaning against the marble top with my vision in line with Mom's profile. I stared at her naked thigh, her hip, the outer half of her ass cheek, and her bare midriff. It was too bad she had her chair pulled in close to the table; otherwise, I'd at least get to see her back and her cheeks down to the chair's seat, but she'd have to stand soon enough.\n\nMom read her paper, and she let me watch as she sipped her coffee, taking her time and pretending as if I wasn't there, perving on her in ways a good son never would. I spent time admiring her breasts. Her shirt was so thin and tight that I could see how her nipples created a darker shade of color against the fabric. Her areoles looked small and beaded with goosebumps, but it was her nipples that stole the show.\n\nThey had been hard when I had entered the kitchen, but I swear I watched them thicken further, becoming larger at their peak while tightening near their base. God, if only I could talk my mother into walking around in her bra and panties, or better still, nothing at all. Shoveling a mouthful of cornflakes into my mouth to hide a moan, I pressed my cock against the island and enjoyed the pressure running through my shaft.\n\nMom placed her paper down and pushed her coffee aside. She lifted her arms above her head, her long fingers interlaced, and she arched her back as she stretched upward. Her little titties reached upward, the morning light from the patio creating a halo of sunshine around her body, and then she exhaled and pushed her chair away from the table.\n\n\"I need to get to work,\" Mom said, turning to look at me for the first time that morning. \"You'll be around when I take my first break?\"\n\nI nodded my head. Fuck, I should have gone downstairs sooner. Now I had nothing but my memory to preserve this moment. You can take pictures and videos for when you're alone. Fuck me, but Mom had spoken those words last night. Why'd I leave my phone in my room?\n\nMom stood, pausing as she faced forward, her head tilting to the left as if she were deciding what side of her body to reveal to me first. Was she? Maybe, I don't know, but I was eager to see both sides of her, front and back, at the same time. We needed a mirror for her to face. After another second, Mom turned away, giving me a shot of her perfect, pear-shaped backside.\n\nIt's one thing to describe what a floss-like band of nylon running through your mother's crack looks like, and it's another to see it live and in person when she wants you to see it. It's like she's naked, but not. The string lying between her cheeks hid the most vulnerable spots on her body, like her butthole, yet it presented my vision with the illusions of her crinkly spokes, and that's what I saw: The illusion of her nakedness.\n\nMom continued her turn, walking around her chair and facing me. My eyes dropped to the front of her panties, where lacy flowers covered the transparent patch of cloth and formed a triangle over her mound. It was a small triangle, like last night, about an inch of her sunny-hued landing strip visible above the waistline, as the rest of her mound, hips, and thighs lay smooth and exposed to my eyes. The triangle narrowed, almost forming a point as it cupped the tender bulge of her pussy, hiding only her clit and inner lips but leaving the curved swell of her outer labia uncovered.\n\n\"Close your mouth, Mark,\" Mom whispered. \"It's not polite to chew with your mouth full.\"\n\nI shut my mouth, my teeth clicking together hard.\n\nMom laughed and walked out of the kitchen. It took me a moment to calm myself, but then I chased her down the hallway, watching as her ass rolled with her strides, her butt cheeks sliding against the G-string running through her crack. When she turned at the foyer and walked up the stairs, I followed, but I also waited for my mother to get five steps above me before I chased her up the stairs.\n\nI waited for a reason: Her pussy. I loved the way her small panties cradled the softness of her lips. It was like a hammock trying to contain too much weight. The way her pussy meat bulged and rolled, trapped in that tiny strip of cloth, had taken hold of my gaze and wouldn't let go. It had turned me into my mother's obedient boy until she reached the upstairs landing, turned, and hid her pussy from my eyes.\n\nSnapping out of my trance, I made a quick turn at the top of the stairs and darted to my room. I grabbed my phone and ran back to Mom--ran, not speed-walked, but ran--catching her office door a moment before it clicked shut.\n\nMom turned around, puckered her lips, but then she said, \"I need to work.\" She looked at me, first into my eyes, and then she glanced down at the hard-on poking against my pants. For a moment, her eyes widened, but then she saw my phone.\n\n\"I'll be downstairs in a couple of hours,\" sounding relieved.\n\nI nodded my head.\n\nShe looked relieved.\n\nWhat had she thought I had come here to do?\n\n\"I know,\" I said, doing my best not to think as I spoke, \"but I remembered what you said last night, about the pictures I could take, and I thought, 'I don't have enough pictures of you,' at the moment.\" I shrugged. \"Can a son have too many pictures of his mother?\"\n\nMom's face remained calm, so I couldn't tell if she regretted her words from last night, but finally, she said, \"Snap away, but be quick about it.\"\n\nI held my camera up, my eyes shifting from my mother to my screen to my mother, and then I said, \"Can you pose a little?\"\n\n\"Pose?\"\n\nI nodded.\n\n\"How?\" Mom asked, her eyes again flicking toward my hard-on.\n\nI had my eyes on my screen, but I saw the downward angle of her gaze.\n\n\"Smile,\" I said, adding, \"or stare, but how about crossing your arms under your\"--I swallowed to keep myself from saying tits--\"across the front of your stomach? And spread your legs a little.\"\n\nPink swirls of color backlit Mom's cheeks.\n\n\"Step your feet apart, I mean,\" I said in a rush of words as tiny beads of sweat pushed through my pores, causing a strained warmth to flow down my forehead and into my cheeks. \"Do whatever you want, but try not to be stiff about it.\" I stretched my neck to the right. \"Why is it so hot in your office?\"\n\nMom tried to hold in a laugh as her eyes darted down to my stiffness again. Fuck it. Let her see. I wanted her to see, and before her eyes could move away from my cock, I flexed my shaft, pulling it inward at the base and tightening the underside of my pole, forcing the head to pop upward.\n\nMom turned her head to the side, then, after a deep breath, she crossed her arms beneath her breasts and stepped her right foot sideways, spreading her legs. The point of her pussy stood out with her legs separated and her cunny lips spreading, finding room to breathe and looking much fuller than they had downstairs. I snapped a picture, and I lowered the phone, finding an angle that gave me the best shot of the inside swells of Mom's ass that I could see when looking between her thighs.\n\n\"Enough?\" Mom asked, her voice tight.\n\n\"Could you turn around,\" I said, making my question a statement. \"And grab onto something.\" I licked my lips. \"Lean forward, I mean.\"\n\nMom's jaw tightened, and the muscles in her neck rippled. She turned around, giving my eyes the freedom to roam over her ass. The closest thing for her to grab onto her was her chair. With her legs against the seat's edge, she leaned forward, her arms coming up and her hands resting on the headrest, the stance pushing her butt toward the camera.\n\n\"Spread your legs a little,\" I said, breathing hard.\n\nI felt like a pervert for making my mother do this, yet, I also felt a thrill lighten my body, making my shoulders dance and my breath shudder. How could something so wrong make my dick so hard?\n\nI loved it.\n\nI hated it.\n\nI didn't want it to end.\n\n\"Perfect,\" I whispered. \"Mom, that's the perfect pose.\"\n\nMom's legs had tightened, the curve of her hamstrings created a sensual rise and fall that partitioned her cheeks from her legs, giving the hint of athleticism to her otherwise slender body. The bottom of her cheeks had spread, creating the illusion of a curtained window focusing on the tight band of white cloth pressing into her slit, forming a from-behind cameltoe that made my mouth water. I saw dampness there, between her legs, spreading outward. Above, where her gusset narrowed into her G-string at her perineum, I saw the rounded edges of her asshole, leading downward into a hole covered by a thin string of nylon.\n\n\"Take the pictures,\" Mom said, her voice tight and her breathing measured.\n\nI snapped two pictures. I took the first one with a wide lens, keeping my mother's entire body in the frame, along with her chair and the window at the side of her desk. The next one, I zoomed in on the precious piece of meat between her legs, making sure to capture the dampness of her panties and the impression of her clit. After the second picture, Mom stood, turned around, and sat in her chair, crossing her right leg over her left.\n\n\"Run along now,\" she whispered as though I were a kid again. \"I have to work.\"\n\nI noticed fresh sparkles of sweat along her brow before I said, \"I'll see you soon.\" I left her room, my cock swinging as I turned my body around. I hoped her eyes flickered down to my crotch one more time. She had to know her teasing wasn't going to be enough to satisfy me. She had to know, and so the question was: How was I going to tell her that I needed more from her?\n\nI went back to my room to think about that, coming up with a scenario where I walked into her office with a speech in mind, to allowing her to catch me masturbating face to face, to--to weird, surreal fantasies that bordered on science fiction. In the end, I jerked off to Mom's pictures--making it last as long as I could--fisting several wads of cum into a towel, and then I went downstairs to wait for my mother's first break of the day.\n\nIt took forever, despite having edged myself for an hour to her photos. I filled the second hour with pacing, foot-tapping, regular jerks of my cock, and releasing the anxious waves of energy coursing through my body with push-ups, pull-ups, squats, and lunges. That last hour convinced me of one thing: I was going to put my mother's determination to keep me from the sex offender's list to the test as soon as I saw her again. I wasn't fucking around anymore. I needed pussy, and the pussy that I wanted answered to the title of Mom.\n\nIt was nearing noon when my mother came downstairs. She had changed from her T-Shirt into a small but loose, cropped, white tank top made of cotton. Her nipples were thick buds against the fabric. The hem of her shirt hung off her little breasts, baring her stomach from her sternum down and back to those tiny panties again. The whiteness of her outfit made her golden skin and hair shine, along with that small tuft of hair poking out above her G-string.\n\nI lay on the couch opposite the TV, on its left side, the side that allowed me to look up the stairs as my mother walked downward. She saw me watching her, but I'm positive what she saw was me waiting for her in that way I used to wait for my parents when I knew that they were taking me somewhere fun, with fast rides and cotton candy and every treat that a growing boy wanted to get his hands on. Now, though, the treat I wanted was my mother, and her cheeks reddened as my eyes locked onto the pouty pussy between her thighs. (Would teasing me always embarrass her?) The thought made my knob swell.\n\n\"Hey,\" I said, \"good to see you.\"\n\nMom rolled her eyes as she said, \"It's good to see you too.\"\n\nI looked down at my shorts and the growing tent, but I don't think that's what Mom meant. Hopefully, she looked as well because I gave her at least ten seconds to follow my eyes as my erection sprouted to its full hardness in front of her.\n\n\"Talk to me,\" Mom said when she reached the bottom of the stairs. \"Follow me around while I do things.\"\n\n\"Yeah,\" I said, standing and my cock bobbing as I walked around the couch and stopped in front of her. I topped her by a head while being twice as broad as her, and her smallness sent a tingle through my cock.\n\nIt was a strange thing to notice; our size difference, but while my mother was still Superwoman to me, she was also a woman. A very sexy and desirable woman, who now may have been attainable for me. The knowledge took away some of the fear I had for my mother's authority. When she was teasing me, she wasn't Superwoman; she was... pussy.\n\nI shivered.\n\n\"Walk with me,\" Mom said, walking toward the kitchen.\n\nI followed her to the kitchen island, talking to her as she made herself a snack of fruits cut down to bite-sized portions. Every slice of her knife made her titties shake. Mom knew I was looking at them because sometimes she'd say, \"Don't stand with your head hunched; it's bad for your posture.\" Then she'd go back to cutting with a smile on her face. When she had finished cutting her fruits, she pushed her plate to the right so that it lay between us, but I wasn't in the mood to snack on an array of neatly assorted fruits.\n\nI pulled out my camera, snapping more pictures of her, her cheeks filling with pink with every click of the button. She continued eating even as the digital shutter snapped away. We talked about my senior year of high school, about college, about the possibility of me getting a job to keep me busy.\n\nI laughed when she said that, but then I said, \"I think a job would be good for me, but I'm not going to let it ruin my social life.\" I smiled at her. \"I have commitments.\"\n\nMom's lips tightened, but then she put her hands together and stretched them over her head, inverting her palms and arching her back. Her breasts pushed toward me, her nipples hard and thick as they attempted to cut through her shirt. She stretched so high that she rose onto her tiptoes, and maybe she meant to, or maybe she didn't, but the barest hint of the bottom of her breasts came into view. I snapped a quick picture, and Mom relaxed and went back to eating.\n\nMeanwhile, I stared at her picture, my cock throbbing as I admired the bottom roundness of her tits. As Mom talked about something, college, I think, and that perhaps it would be best if I went to school somewhere out of the state so that I could get a taste of the real world on my own.\n\n\"Yeah, that's the reason I should go to school out of state,\" I said.\n\nMom continued talking, and I moved from where I was, walking around her. Mom's eyes followed me, and then she turned her head over her right shoulder as far as she could as I stopped several feet behind her and then backed up several feet more.\n\n\"Well....\" Mom said, still trying to look at me.\n\n\"Can you spread your legs a little,\" I said, making my question a statement the way I had upstairs in her office.\n\nMom continued standing straight up and down. She lowered her right hand to the fruits, plucking a strawberry from the plate. Her hand went up, and the strawberry disappeared as Mom brought it to her mouth. I pictured her full lips opening and the deep red of the strawberry touching the bed of her tongue, her fingers clutching the stem and holding the strawberry lightly as her teeth closed, slicing the fruit in half. Juices exploded in my mind's eye, and Mom's cheeks rippled, and her tongue bobbed as she chewed on her delicate, mid-morning treat.\n\n\"Your legs, Mom,\" I said as I stared down at her ass and the white string riding her crack. \"Spread them.\"\n\nMom chewed, creating a wet sound, and then she sighed as she stepped her feet apart, first the left and then the right, widening her stance. Her outer labia pulled to the sides, so smooth and tender, giving my camera the perfect view of that crescent cunny bulge between her legs.\n\n\"Lean forward,\" I whispered as I knelt. \"And stick your butt out.\" I didn't sound like myself in my own ears.\n\n\"Mark,\" Mom snapped. \"Don't talk to me like that. I'm still your mother.\"\n\n\"Stick it out, please.\" A pulse shot through my cock, dropping a thick load of sticky precum into my shorts. \"It's a great view, Mom. I don't think Jenna could look this good from here, but I'm willing to find out.\"\n\nMom released a long breath that sounded like exasperation. It was a sound I knew well. When I was younger, and Mom would take me to the park, she always made that sound about an hour after I had first begged her for just one more push on the swing, or one more slip down the slide or one more anything, and Mom would give--my mother really would do anything for me.\n\nMy cock throbbed again.\n\nMom bent forward, still holding her strawberry, and placed her elbows on the island's marble top. Her lower back arched, her spine barely visible, the little bumps pushing against her sensual skin, and her legs straightened, making her muscles go taut and adding a sexy firmness to the swan-like grace of her limbs.\n\n\"Yeah,\" I whispered, my voice not as shaky as it had been. \"Perfect.\"\n\nI needed to find out how far Mom was willing to go, and I needed to find out soon.\n\nI snapped a picture. Then I snapped another. Mom tried to stand, but I said, \"Not yet,\" in a low growl, and she made a wet, clicking noise with her tongue, but she leaned back onto her elbows. \"I need to video this.\"\n\n\"Mark,\" Mom said, almost pouting.\n\n\"You said I could video you.\"\n\nMom did pout this time, and more precum left my balls, making my sack tingle as my cock convulsed. She stood still, though, and even leaned farther forward, stretching her upper body along the counter. I heard the plate of fruit slide across the marble island as I hit my phone's video record button.\n\nI captured Mom's body, panning the camera down one leg, then up, then down the other, then up again. I moved the camera to the side and recorded my mother's small feet before bringing the camera back to that special bit of love between her thighs. I zoomed in on her pussy, first on the outer edges, moving the camera in so close that I could see the smoothness of her skin. The twin bulges of her labia made my balls ache, and they seemed to open and spread for me the longer I focused my camera on them--natural-born stars. The fabric of her panties pushed inward against her slit, turning a darker shade of white as her wetness dripped from her.\n\n\"Almost done?\" Mom asked, her voice breathy and shaky.\n\n\"Almost,\" I said and moved closer to her.\n\n\"Mark,\" Mom whispered.\n\n\"Almost.\"\n\nI stopped with the camera about six inches from her cunny. I took a deep breath, trying to calm my heartbeat, and that's when an intoxicating fragrance caressed my nostrils, inside and out, making them flare as threads of pink mists curled about them. Mom's pussy. Mom's pussy perfume. She smelled like flowers and sweetness, and her fragrance clung to the hollow of my nostrils, thickening and blooming with the promise of sex and the keen notes of her desire. Holy shit, this was that intoxicating scent that came from nowhere but instantly made a person think of fucking and nothing else."
    ],
    "authorname": "MrHereWriting",
    "tags": [
        "mom",
        "son",
        "milf",
        "slow burn",
        "all kinds of sex",
        "romance",
        "love",
        "sexual buildup",
        "switch mom",
        "mostly sub mom"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-mothers-worry"
}