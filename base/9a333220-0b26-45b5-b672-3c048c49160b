{
    "title": "The Twelve Zenati Pt. 01",
    "pages": [
        "Authors note: Hello everyone. As with the past series of the tables this story will be heavily based in the BDSM category and the themes found there. If that is not your kink, this won't be the series for you as the first few chapters carry the additional theme of reluctance. I would also like to thank David for coming on board to help with proofreading this series and Kate for her continued assistance. I hope you enjoy this series because of rather than despite its differences to the previous stories of the Twelve Tables, if you haven't read part one of the prologue if may be a good idea to do that before continuing with part two. ~ellie. \n\nThe Twelve Zenati: Prologue Part 2\n\nSerena.\n\nSerena was constantly startled when customers called her by her new name. The change from Olivia Gambaro to Serena Seabrook was still too new for her to be fully comfortable with it. Serena mixed her third signature cocktail of the hour and smiled at the customer. She had come so far in such a short time, thanks to the God of Pleasure, Remington Royce. Over the last two weeks, since the last time she had seen her home, her little boat, she had allowed herself be to believe that she could make a whole new life with the man who had saved her. She'd been unhappy and had felt trapped before. Now, however, she didn't know what she had done to deserve the good fortune and affection that coloured her life and made her smile constantly. A true mirror of her newfound happiness.\n\nShe turned to the mirrored wall behind her to pick up the garnish she needed and caught sight of herself in the mirror. Her blonde hair was softly gathered back into an artful chignon reminiscent of the stylised Suebian knot that she still wore around her throat, albeit on a much sturdier chain. She wore a crisp white cotton shirt above a thigh-length black pleated skirt. As far as bartender uniforms went, this one was far more up-market than any she had worn before, but then she had never worked in a bar like this before. She was different in so many ways since meeting Remy, her employer, her protector, her lover. He had rapidly become her world, and she knew that she was more than a little in love with him.\n\n\"Serena?\" Landon, the manager of the upmarket bar, R&R, approached her.\n\n\"Oh, me! Yes?\" Serena stuttered and blushed after a minute. She knew it would get easier to acknowledge her name over time, Remy had assured her of that. He had suggested the name in the same commanding but gentle way, explaining that to remain hidden from those that hunted her, it wasn't enough just to change her look; she would need a whole new identity, bank account and driver's licence. He had handled it all for her, explaining that it was much like being in the witness protection program. She would still be the same beautiful woman she had always been, just with different accessories, including a new identity.\n\n\"Mr Royce said that he would be running late and asked if you would meet him at his office. Kairos will be here to escort you at six thirty.\" Landon smiled as he delivered his message. He hadn't been happy when Remy had pressed the girl that he was currently fucking onto him, to babysit during the day while he was at work, but the girl had surprised him. She worked hard, and nothing was too much trouble for her, from restocking to cleaning up after over-indulgent parties. She had good bartending skills he discovered, and she was even good with the temperamental and demanding regulars. In truth, she didn't seem the type of girl who would be comfortable dating and socialising with the wealthy and elitist Remington Royce and his friends.\n\n\"Great, thanks, Landon,\" she said happily and checked her watch. She had another half hour of her shift to complete before Kairos would arrive, but the bar was getting busy. She knew the time would fly by. Less than five minutes later, however, Kairos walked in with a tall, serious-looking woman and nodded at her before going into Landon's office behind the bar. She did her hand-over to the next bartender between serving customers and cleaned her station before heading back to the office to clock off for the day and meet Kairos. She knocked before entering and waited for a beat, until she heard Landon's voice before opening the door. She had learned the hard way about the perils of interrupting people by barging into rooms. It was a lesson Remy had given her, with harsh punishment that she wouldn't forget. \n\n\"Good evening Serena, how was your day?\" Kairos inquired.\n\n\"Great, thank you,\" she smiled. \"Yours?\" she asked.\n\n\"A most productive day,\" he chuckled. \"This is Leila Miles.\" He introduced the woman with him, who uncoiled from her chair with athletic grace and turned to shake her hand with a small smile. She was much prettier when she smiled, Serena noted.\n\n\"It's nice to meet you,\" Leila said. \n\n\"You too,\" Serena smiled but wondered why the woman was here.\n\n\"Thanks, Landon,\" Kairos shook his hand, and after a series of farewells Serena left the bar, flanked by Kairos and Leila, to walk the short distance to Remy's offices. She could walk it on her own but, in his usual commanding way, Remy had insisted that she be escorted anytime he didn't pick her up from work himself. His personal assistant, Meghan, looked up as they walked in and seemed relieved with their arrival.\n\n\"Mr Royce has asked that you change from your work uniform as soon as you arrive. If you would follow me, please,\" Meghan said, in her brusque businesslike way. Serena followed the woman, curiously, to a spacious executive bathroom and pointed out a dress bag hanging on a hook close to the door. \"I believe everything you need is on the bench for you, and I have assigned the second drawer on the left for your personal items. Mr Royce would like you to have a permanent supply of cosmetics and personal care items here,\" she informed Serena.\n\n\"Thank you,\" Serena said quietly, a little overwhelmed, once again, by Remy's generosity in making space for her within his place of work. As soon as Meghan left her alone, she unzipped the bag to see the dress he had bought for her to wear this evening. She understood that this would probably need to be a quick change if he knew she was there and was waiting for her to appear. He had warned her that first night that he was used to people doing what he wanted, and she had been no different. Except maybe that she did it to see that smile of pleasure he gave her. She had baulked a few times or made mistakes and he had punished her, harshly, so that even when she was unsure, she followed his instructions. Time was always an issue, and he hated to be kept waiting, so she moved as quickly as she could. She redid her makeup with the colour of the dress in mind and then changed her clothes and adjusted her chignon, to ensure no stray strands had escaped during her quick change. Remy's favourite perfume was the final touch, and she was ready to go. \n\nSerena walked back to the reception area in front of Remy's office feeling refreshed and smiled as Meghan stood and knocked, before ushering her through the door to see Remy. Three other men all turned with him, their eyes scanning her and judging her, and she felt suddenly very self-conscious until she looked at Remy's smiling face, as he approached her and kissed her lightly, his arm snaking around her waist.\n\n\"Gentlemen, this is my girlfriend Serena,\" he introduced her. \"I'm afraid I will have to cut short our meeting as we have plans for this evening. You are welcome to join us if you are members of Hermione's,\" he offered, knowing very well that they weren't.\n\n\"I think we have said all that needs to be said on the matter,\" said one of the men, coming to his feet, and Serena had a flash of a memory of that voice and froze, turning rigid in Remy's hold. She felt his hand caress her back, as if trying to soothe her. He knew? How could he know? One of these men was a killer and was searching for her, to kill her as well! She was sure of it. Then doubt crept into her mind. If that was true, the killer hadn't reacted at all to the sight of her, had he? Did she miss something? Maybe she was wrong. Serena watched the men file out of the office and let go of the breath she had been holding.\n\n\"Meghan, give me five minutes then send in Kairos and Leila,\" Remy said, as the woman poked her head inside his door after the other men had left.\n\n\"I'm sorry, baby,\" Remy whispered and pulled her close. \"I had to know for sure, and you were the only one who heard them and saw them properly that night.\"\n\n\"You knew?\" she gasped wide-eyed, pulling back slightly, fear evident in her expression.\n\n\"I guessed but didn't know,\" he admitted. \"They are looking for a girl called Olivia with multi-coloured fuzzy hair, not the amazingly sexy Serena, who happens to be my girlfriend. They didn't recognise you. You are safe with me, Serena. I promise. Olivia is gone, and no one will ever find her again. There is only my Serena,\" he said huskily, and bent his head to kiss her, breathing the words, \"My Serena,\" possessively.\n\nSerena knew, without a shadow of a doubt, that what he said was true. Olivia was gone and, in her place, there was a woman that this man had created and owned, body and soul. She had been staggered at how much of her life she had given over to him in such a short amount of time and how quickly he had erased every vestige of who she had been. She was also staggered by the fact that, within two weeks of meeting him, she had fallen in love with Remington Royce and lived in a constant panic that he would realise that she had never been good enough to be with him and that he would send her away.\n\n\"Trust me, you are safe. They didn't recognise you, and I will deal with them now that I am sure,\" Remy soothed, breaking the kiss. \"To be sure, however, I have a surprise for you.\" he said, hearing the knock on the door and calling, \"Come in.\" Kairos and Leila entered the room and came to stand in front of the desk that Remy, and now Serena, stood behind.\n\n\"Have a seat,\" Remy invited, sitting in his chair and pulling Serena into his lap, caressing her hip and thigh as he waited for the two other people to comply.\n\n\"This is Leila. She is now part of your personal security team. She will partner with Kairos when we are together, but otherwise, she will accompany you everywhere you go. This will allow me to give you greater freedom, which I know you want, without having to worry that you are being kept safe. When you are at work she will be added to the bar security,\" Remy explained, quickly and succinctly. \"She is well aware of the men who just left my office and is well-trained to take any and all measures to protect you. Kairos, did I miss anything?\"\n\n\"Like myself, she will be invisible for the most part. She is not there to be your friend or give you advice. If she tells you to move, you move, no questions asked,\" he said, in his stern, gruff voice which he often used on her, when relaying Remy's instructions.\n\n\"I understand,\" Serena said, realising this was not a choice. Remy was merely informing her what was going to happen. \"Thank you.\" She turned her head up to kiss Remy, in gratitude for his love and care of her. \n\n\"Mm,\" Remy murmured into the kiss, \"And like Kairos, she is invisible, and we can act as if they aren't even there.\" He deepened the kiss, his hands caressing her up her legs, lifting the skirt of her dress and he felt happy at the lack of any resistance in her. Her training had been progressing beautifully and much quicker than he had expected, with the assistance of his pharmacist. A small pang of disappointment at not having to punish her for resisting his desires surfaced but tonight promised to be a lot of fun, as he tested her training within new social situations and boundaries.\n\n*****\n\nFor the last two weeks, Remy had insisted on a strict regime of exercise and diet for the woman he had named Serena. She had been his Siren as she had emerged from the waves and enticed him into the deep desire that had him seeking her out, and he had thought the name very fitting. Over the last two weeks, he had made Serena Seabrook the perfect woman through the use of specialised drugs and intensive behaviour-modification training, making her even more open to his commands, which masqueraded as suggestions, as well as the subliminal messages he gave her through their morning meditation and yoga routine. \n\nHe had been sceptical about the drugs that his chief pharmacist had explained were a breakthrough he found by accident but in his eagerness to completely own this woman he had agreed to a trial. The trial had yielded immediate results, and he felt that he could withdraw his tight control on her a little, as she proved time and time again that her desperate need to please him would make her endure things she might otherwise have baulked at. Her body was an unfettered playground for him now, and he wanted to take the next steps down the road of her true submission to him and show off his beautiful girl.\n\nHe was eager to take her to the club that he had once built for his and a select group of friends' personal enjoyment. He had barely been there since the betrayal of the last woman he had let himself care for. Serena, however, would never betray him or hurt him in the same way. He was making sure of that each and every day. She had no home of her own and all her belongings, aside from the clothes and handbag she had arrived with at his home, had been chosen specifically for her by him, or at least a personal shopper directed by him. She had turned her back on her family years before he had met her, and he knew that she had no wish to rekindle those connections and, due to circumstance, she had no friends to speak of. Eventually, he would provide her with friends, as he had provided everything else in her new life as his girl. Those friends, like everything else in her life, would be carefully chosen to protect the strength and integrity of her bond to him. \n\nShe had already been very grateful to him and suggestible, he admitted, and he may not have needed the drugs to further his purpose, but he could not brush aside their effectiveness in conjunction with the intensive training. Eventually, he would wean her off the drugs, but for now, they sped up a process that could have taken months, if not years, and he was beyond pleased with her progress and what she willingly allowed him to do and did of her own volition to please him. The meeting with the men this evening had been a test that she had passed quite easily. She accepted that she would have a permanent shadow now, just as easily as she had accepted everything else he asked of her. He wondered if taking her to Hermione's tonight might be pushing her too far, but his eagerness to show off his creation over-rode the risk.\n\n\"You look beautiful tonight,\" Remy said and smiled in the semi-darkness of the car interior. \"I think the dress would be better suited to being bra-less. Turn around and I will help you remove it,\" he commanded and was pleased when she didn't hesitate to do as he instructed. It had been almost a week since she had hesitated over something that he had asked her to do and he had very much enjoyed punishing her for that mistake. He folded the bra he had removed and placed it in the pocket of the door as they reached their destination.\n\n\"You look perfect now, sweet girl,\" Remy said, helping her from the car and pulling her against him, one hand gliding up the sapphire satin to cup her breast and thumb her nipple as he kissed her. Stepping back and looking down as the hardening bud pushed at the soft satin, he smiled. \"Yes perfect,\" he said huskily, making her blush.\n\n\"Thank you, the dress is beautiful, as always,\" she replied and smiled back at him. He had amazing taste when it came to cocktail dresses and gowns for her. \"This is a restaurant?\" she asked, frowning at the red brick facade that showed no signs of being anything other than a large residence in an exclusive neighbourhood. \n\n\"A club for a select group of people,\" he nodded, thinking that if she passed this test, he might take her to a similar but more public club for dominants, owned by people he considered his rivals. It would be risky, however, as the Zenati, being somehow related as distant cousins might recognise her. \"I am looking forward to showing it to you.\"\n\n\"Good Evening, Master Remington. It is a pleasure to see you again. Welcome home,\" said a young woman in a little black cocktail dress as she greeted them at the door. \n\n\"Thank you, Elaina, is the Mistress home tonight?\" he enquired\n\n\"Yes, Master Remington. She'll be very excited to see you here again,\" she smiled up at him as she replied and blushed slightly.\n\n\"I best go and tell her I am here then,\" he chuckled and guided Serena inside without bothering to introduce her. He walked down the small corridor to a large open room that had several lounging areas, as well as a dining section with several tables. Patrons, it seemed to Serena, would have the choice of eating casually on the comfort of the overstuffed chesterfields or in the more formal dining settings, much like a regular home but catering to a large number of people.\n\n\"Remy!\" A mature woman squealed in girlish delight that surprised and shocked Serena, who watched the softly-curvaceous woman approach them swiftly. \n\n\"Madeline,\" he smiled in return and embraced her one-armed, as he kept his other hand tightly clasped to Serena's. \"May I introduce my girlfriend, Serena?\" he asked.\n\n\"Girlfriend?\" Madeline raised a brow and eyed Serena suspiciously. \n\n\"Yes, girlfriend,\" Remy lifted their clasped hands. \"I have plans, of course, but it is early days yet,\" he chuckled, making Madeline smile and seem to relax visibly. \n\n\"For a moment, I was wondering if you had lost your mind, bringing her here,\" Madeline laughed. \n\n\"I believe that she will be quite happy here because I am happy here,\" he grinned, and Serena admitted that was true. If this place and the people in it made Remy happy then she was sure she would love it too.\n\n\"Hello, Serena, and welcome,\" Madeline said, reaching out to lightly run her fingers over Serena's cheek. \"She is quite lovely,\" she said to Remy. \"I can see why you are smitten.\"\n\n\"Smitten?\" Remy chuckled before Serena could speak to thank the woman for her welcome. \"What I feel for this woman is a little beyond smitten.\" He grinned at Serena and saw a warm rosy glow fill her cheeks.\n\n\"Come have a drink with me before you dine,\" she suggested, indicating a bar Serena hadn't noticed on her first scan of the room. \"Will your people require any specialised services?\" she asked of Kairos and Leila, who stood stoically at the entrance to the room.\n\n\"No, thank you, though I can ask them to wait in the outer rooms if you prefer,\" Remy offered.\n\n\"Perhaps that would be better. Some of our members prefer the privacy of just having vetted members in here,\" she said. apologetically.\n\n\"No problem,\" he turned and nodded at Kairos, making a small signal with his hand. Kairos and Leila disappeared through the doors into the corridor beyond. \"I think we will eat first. Serena doesn't like to eat late, and only a small meal for her at this time of the evening, please,\" Remy instructed.\n\n\"Of course. Please take your seats. I'll let the kitchen know. Serena isn't vegetarian, I hope,\" Madeline laughed lightly.\n\n\"No,\" Remy shook his head and guided Serena to a table where another couple already sat, waiting for their meals. \"There are no menus here. The kitchen cooks the best of what is available from the markets that morning. On the weekends there is sometimes a choice between red or white meat, or occasionally seafood but, tonight, I believe there is something we will both enjoy,\" he explained as they took their seats, planting the thought of his enjoyment of the food in her brain.",
        "\"You're late,\" the other man at the table accused, once they were seated.\n\n\"I'm early,\" Remy countered with a grin. \"Serena, this is a good friend of mine, Jay,and his girl, April.\"\n\n\"Hello. It's nice to meet you both,\" Serena said quietly, feeling Remy relax beside her and drape his arm over the back of her chair as the two men bantered with each other.\n\nThe food was beautiful, and the accompanying wine matched perfectly. It was like stepping back in time, Serena thought, as staff saw to their every need and they were served traditional foods. She had been glad that Remy had asked for only a small meal for her as there were three courses which was much more than she was used to eating in the evenings. Both she and April spoke little during the meal, allowing the conversation to flow between the men and those who joined them at the large table. \n\nThe other members, who arrived after them, all came to greet Remy as if he was some sort of celebrity. Serena supposed that it was because he was the owner, or at least part owner, of this club. He had called it his club when they arrived, although Madeline seemed to be the one in charge here. Maybe she had misunderstood the situation. Remy seemed content to sit and chat with the latecomers for a while after finishing dessert, and as much as she tried to pay attention, most of what was being said went far over her head. She began to feel uncomfortable with the need to pee but had no idea where the bathrooms were.\n\n\"Are you okay?\" Remy asked in a low murmur, leaning close to her ear and nuzzling her neck, his arm curling around her back so that his hand caressed the side of her breast, the fingers tips seeking out her nipple under the flimsy material, ensuring, as he had throughout the dinner, that her nipples remained clearly on display under the clinging fabric.\n\n\"I need to visit the bathroom, please,\" she whispered, almost inaudibly.\n\n\"Of course. I will take you,\" he smiled and raised his voice slightly for his friends to hear. \"I am going to give Serena a tour of the club. We'll be back for a drink before we leave,\" he said. Coming to his feet and taking Serena's hand, he walked towards the far end of the room where the restrooms were located and, rather than waiting outside, he entered the room with her. \"Unisex,\" he explained, as he locked the door behind them and nodded toward the second door in the room where she found a single toilet.\n\nShe could hear him use the urinal and wash his hands as she tried hard to pee quietly, emerging with the stain of her blush colouring her cheeks, to wash her hands and reapply her lipstick. It pleased Remy that, after all they had done together, she could still be shy and blush about this sort of intimacy, and once again he wondered if she was ready for a full tour of this club. He would, of course, eradicate that sense of shyness as he trained her to the degree of exhibitionism he enjoyed, but he had larger hurdles for her to overcome first.\n\n\"Come,\" he commanded, and held his hand out to her. \"I will show you around the club.\"\n\n\"Okay,\" she said tentatively. She knew this was a dominants club. She had grown up around alpha men and knew that many had what they called kept women who served as submissives and catered to a range of needs. She had never considered that she would be one of them. The thought settled heavily on her and made her a little reluctant to discover what lay on the top floor of this place, but she let him lead her up a set of stairs to the second floor.\n\n\"This club has facilities for its members to stay and play, either in the short term or overnight,\" he explained. They came to the small lobby at the top of the stairs, where a board was hung with half a dozen keys, all labelled with names as well as numbers. \"It's a chance for the members to role play some fantasies in purpose-built rooms,\" he said, keeping his tone light, sensing her unease and not understanding it. Using the guise of role play and fantasy to ease some of the confronting ideas he was about to show her, he guided her to the first door.\n\nSerena said nothing as she was shown a glimpse of the first four rooms, which were named for different eras in time and had d\u00e9cor and equipment to match the era. The Medieval room showed dungeon-like equipment in a dark dimly lit atmosphere. The Victorian room held a large four poster bed and fucking chair. The Wild West room smelled of leather and had rough-hewn wooden furniture. It was the industrial room that finally made her react. She had never seen anything like it before with its strange pipe works and electrical equipment. \n\n\"This is not a room I have ever used myself,\" he acknowledged.\n\n\"But you have used some of the other rooms here?\" she asked curiously, a small flash of jealousy running through her.\n\n\"Yes, I have had girlfriends before you, Serena,\" he admitted. \"You can hardly think I was living like a monk before you ran into my arms,\" he chuckled. \"I can tell you, however, that I have never felt as close to a woman in such a short amount of time as I do to you.\" He bent his head to kiss her and pull her close against his body. \"I don't share this part of my life lightly, Serena. I want you to share every facet of my life, and that includes this place and my friends downstairs. I will never push you into something that you truly don't want to do,\" he reassured her, wondering if he had finally pushed too far, too fast, and determined to talk to his pharmacist tomorrow about her medication dosage, in case it wasn't as effective as it had been after taking it for two weeks consistently.\n\n\"You are an Alpha? A dominant?\" she asked. \"And you want my submission?\"\n\n\"What I want is you. My girlfriend and partner who will, on occasion, play with me here and yes, take on the role of submissive when we come to this club,\" he spoke soothingly. He found it totally beguiling that she didn't realise that she was already submitting to him in every way that counted. He wanted more than just to play with her submission, but if she needed reassurance right now, he could give her that much. She had done everything else that he had asked of her up until this point. He knew that this would come in time, that she was perfect in every other way. He could wait for this because he knew he wouldn't have to wait long.\n\n\"Partner?\" Serena tilted her head. Submissives were never treated as partners, or even serious girlfriends for that matter. She hadn't thought beyond the fact that he was protecting her and they were acting on a mutual attraction while she was living in his home. She had tried hard not to read too much into his demanding ways, focusing more on his obvious care and concern for her, while rapidly falling in love with the man.\n\n\"Yes, partner,\" he murmured. \"You aren't happy being introduced as my girlfriend?\" He looked at her curiously, feigning disappointment and looking sad at the thought.\n\n\"I do! I really do! I guess I just thought partner had longer-term connotations than a girlfriend,\" she hedged, hating that she had disappointed him. \"I'm sorry,\" she apologised. \"I don't want to take anything you are doing for me for granted because of the position I ended up in with what happened and losing everything. You've given me so much and I just...\" she stopped short of questioning his motives beyond her protection and discovering who murdered his brother. \"I thought maybe that now you know who killed your brother, you might be asking me to leave so that you could go back to your life as you knew it. This life,\" she turned, indicating the club and all it contained.\n\n\"I can't imagine my life without you in it now,\" he murmured into her ear pulling her close. \"I don't want you to leave, and if you want the truth, I don't think I could let you go now. Not after all we have experienced and done over the last two weeks. It seems like so much longer, as if I have known you for years.\" He wasn't about to let her go. She was his now, and she needed to acknowledge that. The urge to punish her for even suggesting that she leave him was strong, and he wasn't sure that he could trust himself in one of these rooms with her feeling this way. \"Do you want to leave now that we know who the men who threatened your safety are? Is this... me showing you this side of my world and how it would make me happy to be able to bring you here more often, too much for you to consider?\" he growled, unable to settle his anger and frustration with her.\n\n\"No! I don't want to leave you! Never would I do that,\" she exclaimed. \"I'm sorry, you just caught me off guard, I just thought...\" she said remorsefully. \"I'm so sorry. Please forgive me.\"\n\n\"There's nothing to forgive,\" he said stiffly, letting her words mollify him slightly. \"I'm glad you told me how you were feeling and that we could clear that up. I meant what I said. I don't think I could let you go even if that was what you wanted now. It would hurt me too much if you left me,\" Remy said in a calculated move, enjoying her obvious contrition for upsetting him. She was far more submissive than she realised and he knew that if he asked her right then she would willingly serve him in any of these rooms as penance. He was tempted to press his advantage over her, but he had already accomplished what he wanted tonight. She knew this was part of the life she would have with him and that she would need to accept and embrace her submissive nature. If he had to cloak it in fantasy and role-playing for the time being, to ease her mind in acceptance, then so be it.\n\n\"I would never do anything to hurt you,\" Serena said adamantly and tilted her face up to him, showing the truth of her words by looking him the eye. \"I'm so sorry; I was just confused seeing those men in your office tonight. I would die if you sent me away now. Please forgive me.\"\n\n\"I won't let them hurt you, baby,\" he said and pulled her into his arms and smiled over the top of her head. \"You're safe with me. You're mine now, and no one will ever be able to touch you while you are with me.\" He wished he hadn't said they would be back for a drink before leaving. He wanted to leave with her right then and reinforce his possession her where she felt safest, and where he had the most influence on her, his home.\n\n\"I want to be with you,\" she whispered, her voice catching.\n\n\"Fuck,\" he groaned deeply and, picking her up, walked into a room, slamming the door behind him. \n\n\"Did you change your mind? About using these rooms tonight?\" she asked in a breathless whisper, as she gazed around the dimly lit dungeon.\n\n\"No,\" he said darkly, after a moment where he drew a deep breath and began to undo his belt. \"You are not ready for the full experience of this room. I will punish you here, however, not just because you upset me with talk of leaving me but also because it will bring great pleasure to us both.\"\n\n\"I...,\" she began to apologise and beg his forgiveness again. \n\n\"Later,\" he snapped, cutting her off. \"I need some relief now. Being here with you, tonight, has my cock hard and aching for your attention. Get on your knees,\" he commanded, with more force than usual. He watched her comply immediately as he fished his cock from his already-open pants. Eagerly she took him, sensing his urgency, and he fisted his hands into her hair. There was no licking, kissing and teasing of his cock this time and he looked down on his willing girl, a groan rolling from his diaphragm as she took him to the back of her throat, preparing to swallow him as she had been taught to do. This had been the first step in training her to his desires, and she knew exactly how he liked her to perform depending on his mood.\n\nCareful of her timing, Serena drew a deep breath and swallowed around the cock in her mouth, taking it deeper and feeling the familiar gag reflex making her swallow again against it and count to five, before releasing him to take another deep breath and repeat the cycle. As her throat relaxed, she was able to move faster and set the rhythm she knew he preferred, but as she came to that point his hands gripped her head and, holding it still, he began to fuck her mouth. This was new, and she struggled with the urgent, punishing pace he forced on her. Drool spilled from her mouth and tears started from her eyes, as she hunched her shoulders as much as she could in this position, to protect the satin of her dress.\n\n\"Fuck! Yes! You fucking cock-sucking slut!\" he growled out. \"My. Cock. Sucking. Slut. Mine!\" He punctuated each word with a hard, deep thrust, finally holding her head still and revelling in the feeling of her struggle, before letting her breathe again. She was his, completely and totally his. He thrust into her throat with force again, feeling his balls tighten and his cum about to explode into her. He withdrew to spray it over her tongue and fill her mouth. His hooded eyes looked down into hers as she tightened her lips around his cock and sucked, milking every last drop. With her hair and makeup ruined, she looked even more amazing to Remy. She was a sex goddess, a willing and sensual slut the likes of which he had only ever dreamed of. He knew some of her willingness was artificially enhanced, but he didn't care. This was what he wanted. This woman in this place, at his mercy and revelling in his dark desires with him.\n\nSerena felt inordinately pleased with herself when he pulled her up into his arms and stroked her cheek, giving her his smile that showed his pleasure. Holding her close, he led her to the hidden bathroom and helped her clean up her face and remove the pins from her hair, letting it fall in soft waves over her shoulders and down her back, rather than try and fix the style. He kissed her deeply before she reapplied her lipstick. Then stood behind her, stroking her neck and shoulders.\n\n\"Thank you, baby. You have made me very happy tonight,\" he murmured in her ear. \"You are a goddess, my goddess, and I cannot get enough of you.\"\n\nThe change, from the dirty-talking, abusive, sexual dominant to this tender, caring and kind lover never ceased to amaze Serena. Particularly when he was harsh with her or punishing her for a transgression against his rules. The fact that he wanted to punish her for his own pleasure here, in this club, leapt out from the back of her mind, where she had parked that information before giving him the relief he needed. She didn't mind the actual physical punishment because she knew that at the end of it came far greater pleasure. What she hated was disappointing him in any way which was why the punishments upset her. She could handle the pain, any pain, for him, if it weren't coupled with the fact that she had disappointed him in some way. She turned to tell him this, as she had started to before he cut her off and asked her to kneel but, once again he stymied her words.\n\n\"Come, we will go and say our goodbyes before I get carried away again,\" he instructed and led her out of the room and back downstairs.\n\n*****\n\nSix months later Serena had become more than a submissive. She was a complete and willing slave to his needs and desires. She willingly gave him whatever he desired from her, and he took it as his right, revelling in how much power and control he had over the beautiful woman. At home, and at his fetish clubs, she was the perfect sex slave. He had no desire to share her or let others touch her, but he was an exhibitionist of his absolute control over her mind and body. He often left the door open in the themed playrooms for his friends to watch them together and even enjoyed some tame and subdued use of her in the common areas of his private club.\n\nOutside of those places, they were the perfect couple. She had become the perfect, well-bred and well-mannered lady beside the former playboy, and it would seem to those who didn't know them personally that she had reformed him into a man who was a pillar of the community. She continued to work but had changed her job to become a daytime hostess at one of the restaurants and bars in the building where his office was located. In this way, he had full access to her when he wanted but she was also kept busy during the day and some evenings, so that he could run his empire and deal with his family business as well, without her knowing any of it.\n\nRemy woke feeling buoyant. Today was going to be a good day. Not that he had any bad days recently, but today was going to be a turning point within the organisation to which he had familial ties and a pivotal point in his life. He had chosen his men carefully and, if all went well, his reign as head of this branch of the Suebian tribes would be the most renowned in their modern history. The wealth, the power, the shadowy machinations to bring down their enemies were as none of his counterparts in this new country had ever experienced. Today wasn't just going to be a good day it was going to be glorious, he thought, and rolled over in bed to uncover his favourite possession, who was going to provide him with equally immense joy today.\n\nSerena stirred immediately, her eyes flying open, and turned her head to face him, hoping that she had not missed an instruction given before her consciousness returned. She saw his broad smile and said nothing, as his hands traced over the bruises and marks that marred the pale skin of her breasts. \n\n\"Good morning my sexy, insatiable, little slut,\" he murmured, leaning over to kiss her and pull her astride him knowing that, as always, she would be ready for him. He had almost weaned her off the mood-altering drugs that he had used to enhance her suggestibility and obedience. After the first month, he found they were suppressing her true personality too much, and she was becoming robotic. A nice side-effect of having taken such a heavy dosage during her initial training, however, was that she was now an insatiable nymphomaniac, who practically begged for his harsh use every moment they were together. The torture of making her wait was almost as satisfying as the physical punishment he rained on her for becoming so needy, even though he adored her even more for it and knew that she couldn't help it.\n\n\"Good morning, my love,\" she smiled softly and purred as he continued to stroke her body, setting her skin on fire and fuelling the need within her for him. \"How may I serve you this morning?\"\n\n\"By getting that gorgeous ass out onto the deck. I want to feel the sun on my skin as I fuck it this morning,\" he chuckled, his mood made even more buoyant by the woman he adored and who gave herself over to his dark desires without any reservation.\n\nEager to comply, she kissed him quickly and scrambled out of bed, sashaying to the door and giving a quick glance over her shoulder to ensure he was following. She walked through the house fully nude, uncaring of the staff who would be awake and tending to their morning duties. Opening the large glass door, she stepped out onto the deck facing the sea and drew a deep breath, raising her hands above her head and embracing the sun and the sea, as she knew Remy did.\n\nRemy's eyes followed her swinging hips as she walked before him. Her ass also held faded bruises and lines from his use of her. Anyone seeing this woman naked would have no illusions about the type of woman she was and how he enjoyed using her. He detoured to the bathroom and then retrieved the items he needed, before following her to the deck. He walked past her and leaned back on the railing, waiting for her to finish the display of her body as she went through the small yoga routine to greet the morning sun.\n\nSerena smiled softly and went to him then and, familiar with his desires, she sank to her knees and placed her hands on his thighs before leaning in to nuzzle and kiss his erect cock. Her tongue left a wet trail over his shaft as she bent to his balls, nuzzling and sucking gently as his cock lay along the side her cheek. Paying attention to his shaft again, she kissed and licked her way around it, moving slowly back to the head before taking him slowly into the warm cavern of her mouth.",
        "The rail felt cool beneath his fingers as he gripped it. There was no longer any need to guide the movements of his slut; she knew exactly what he wanted and expected from her. He allowed her to set her own pace, as he wrapped leather cuffs around each wrist, tightening them securely. He groaned as he gazed down, meeting her eyes as she swallowed his cock as if she was starving. He allowed her time to enjoy the taste and feel of him across her tongue, while she took him deeper and held him longer as she gagged and tears glistened in her eyes. Her submission and need to please him never failed to affect him deeply, even after being together for so many months now.\n\nThe cuffs felt soft and familiar as they encased her wrists, and Serena felt a thrill run up her spine as he secured them tightly and she sucked him deep, looking up into his face. When his hand threaded into her hair and jerked her from his cock, she remained open-mouthed and panting, showing her need for more.\n\n\"Lower your hands,\" he instructed. \"You may play with my needy cunt but be warned. Do not cum, or you will be punished severely.\" He stared into her eyes, ensuring that she understood just how real the threat was.\n\n\"Thank you, my love,\" she answered quickly. \"I understand,\" she added, as he continued to stare at her. She was pushed back onto his cock then, and for the first time in weeks, he took control of her head and fucked her mouth as if needing complete control of her and her sucking mouth.\n\nRemy lost himself in her submission and fucked her mouth and throat hard and fast. There was much he had to do today, not the least of which was to get her consent to the final act of his possession of her. Just the thought of owning her legally made him harder, and he came, roaring loudly as he splashed ribbons of cum over her lips and tongue and collapsed back against the rail again, gripping it as he took large, deep breaths and allowed her to milk all the cum she could and clean his cock.\n\n\"Up,\" he commanded, after long enjoyable moments while he recovered, reaching forward to grip her hair again and pull her to her feet. He knew that she was now familiar with what the cuffs meant on this deck and he barely had to guide her, as she moved automatically to her place and offered him her bound wrists.\n\nSerena whimpered softly at the pull of her hair but followed his instructions and automatically lifted her hands to him as she rose. He surprised her by guiding her to one of the outdoor chairs and sitting with her in his lap, straddling his thighs, so she faced him instead. He took her hands and secured her wrists together behind her back, making her pull her shoulders back and arch her breasts toward him. \n\n\"Today is a special day for us, my sweet girl,\" he said in a smooth voice and stroked her tear-lined cheek. \"You are mine, and I adore you. I cannot imagine my life without you in it,\" he declared and bent her to him to kiss her.\n\n\"Yes, my love. I am yours, body and soul. You possess my heart and mind completely,\" she said fervently, in words he had drummed into her mind every day of their lives together. \"I love you more than I can express,\" she gave a small smile.\n\n\"Then you shall be mine, legally as well, to bind us together forever. We will marry this afternoon. This is the engagement ring you will wear.\" He picked up a box from the small table next to the chair and opened it. \"You will wear it here,\" he said, and reached out to take her left nipple between his finger and thumb, squeezing it tightly. \"I have a woman coming to prepare you for our wedding, and she will see to your piercing,\" Remy stated, searching her eyes as she whimpered prettily for him. \"Do you accept your place at my side, forever?\" he asked, knowing she would no longer deny him anything he wanted from her.\n\nShe gazed at him adoringly, not believing how lucky she was to have run into his arms on that cold dark night, on the decrepit old dock. He had changed her life forever that night, taking her away from the miserable existence she had called a life. Now she had a good job, good friends, family and a man who adored her and treated her like a precious princess, even when using her with the harsh toys and equipment they both loved. He was always aware of her limits and comfort, and he never gave her more than she could endure, albeit there had been times she had not been able to go to work because she had needed a longer recovery time than usual. It had been a long time since she was punished for a transgression, however. Now the pain she received was all about the pleasure it brought them both. How could she not marry him when he gave her so much, including his love and affection every day,\n\n\"Yes, my love. It's so beautiful, thank you,\" she whispered, her eyes on the engagement ring that would pierce her left nipple. \"I would be honoured to be your wife,\" she said with tears in her eyes. She watched Remy's smile light his face, and he took her head in his hands and kissed her deeply. \n\n\"Mine, in every way possible, you are mine,\" he grinned. \"And I will love and cherish you until death do us part.\" His hands roamed over her body, sculpted and honed to perfection by the strict diet and exercise regime that he had forced upon her in those early days of her training. Helped by the situation, her natural subservience growing up in a family like hers, and the brainwashing drugs he had trialled on her, she had become the epitome of his perfect woman and partner. Now she would become the perfect wife and mother to the new generation of his family. She would bear his heirs, and he would bring them up as strong men in a new world where the Tables no longer interfered with their business. He would leave a legacy for future generations of Suebi that would not easily be forgotten.\n\nAfter today, his position within his combative family and the tribes that made up larger clans would be unassailable in this state. He would have complete control over all areas of his life. His enemies would be in total disarray after today, thanks to a national offensive, coordinated by the Sydney clan, that he intended to take full advantage of. Once they were married, he would tell her what the symbol she wore around her neck meant and his place, as well as hers, in the grand scheme of Suebian Tribes. Once he had become ruler of this kingdom in the north, he would deal with his brother's murderers once and for all. Part of him hoped they died in the suicide mission he was sending them on this afternoon while he was getting married and providing an airtight alibi for himself and all those loyal to him. Time would tell and, even if they returned alive, today would still be a great day.\n\n\"Kairos?\" Remy asked, as he heard a soft tap on the glass door. \n\n\"Miss Mary is here when you are ready for her,\" Kairos said, ignoring the couple's nudity and compromising position.\n\n\"Excellent! Once my girl has accepted her betrothal ring, we can start our day,\" Remy said and stood, lifting Serena into his arms. \"Tell Miss Mary to set up in my office. We will just be a few minutes.\" He carried her back to the bedroom. \n\nThey showered quickly, and he dressed with the same haste, instructing her to remain naked. Throughout the time it took to shower and dress, he continued to touch and tease her, keeping her on edge. He wanted this experience to be particularly memorable for her, and he wanted to test his absolute control over her. Once ready, they went to his office to greet Miss Mary. \n\n\"You have the ring?\" Mary asked abruptly, as they entered. \n\n\"Good morning Mary. Thank you for coming on such short notice,\" Remy chuckled. \"This is my fianc\u00e9e Serena. Serena, this is Scary Mary, and her reputation, as well as her name, are well deserved.\" Remy smirked at the woman.\n\n\"I don't have time for your flattery this morning. Sit there and hold the little slut still.\" Mary indicated a leather recliner and took the ring box from him. \"Traditional,\" she commented, taking the specially-made diamond solitaire from the box to sterilise it with alcohol and an antiseptic spray. \"You surprise me, Remington, considering where you wish her to wear this engagement ring.\"\n\n\"That's novel, I thought surprising you was impossible,\" he grinned and replied, and then took his seat, pulling Serena back and guiding her hands back and over his head to lock behind his neck. Tilting her head to one side to afford him a better view, he slowly thumbed her nipples, enjoying the catch of her breath as he did so. He hadn't let her orgasm yet this morning as he continued to keep her on edge with his teasing. He had felt her reaction to the keywords, 'little slut' when Mary had used them. It intrigued him that someone else could make her react with her trigger words, and he wondered if he should start the long process to change them to more obscure words. He knew she reacted to Kairos when he used them, and even to Aunty Bea, but Mary was a complete stranger. He pushed the worrying thought to the back of his mind and prepared to enjoy this moment with his prized possession.\n\n\"You surprise me a great deal,\" Mary said, bringing a small tray over to the table beside the chair where he sat with the girl on his lap. \"Playboy extraordinaire settles down to a traditional life with a meek and mild little pet like this? I thought you liked women with fire and ice in their veins.\"\n\n\"Women like that are more ambitious than I am and that makes them dangerous. I am ecstatic to have this girl's love and devotion. She makes me want to become a traditional family man with all that entails. Wife, kids, perhaps even a dog or two,\" he chuckled at how he sounded as Mary blinked at him. \"What can I say, I am in love,\" he admitted. He had kept the extent of his feelings for Serena a closely guarded secret, only sharing his feelings for her with his closest friends here at home or at Hermione's. Once he held absolute power and dealt with those that sought to bring him and his family down, however, the world would know, and that started today with this surprise wedding.\n\n\"You're losing your edge, Remington,\" she warned and scowled at his words.\n\n\"Quite the opposite. The need to protect her, and the life I want with her, has made me more dangerous, even ruthless now,\" he said, in such a way that once again Mary showed true surprise. She looked critically then at the girl lying passively in his arms, as he stroked her breasts and talked about her, and found sea green eyes looking back as if in a stupor that caused Mary concern.\n\nThe girl was certainly beautiful, there was no arguing that. While she seemed meek and mild in her dazed state, Mary got the impression that there was a strength of character behind those eyes that could make her a match for Remy if he allowed it to make them a force to be reckoned with as a couple. That strength, however, seemed tinged with a vulnerability that, if exposed, could weaken not only herself, but also make Remy vulnerable to their enemies. She kept her thoughts to herself, however, because as everyone knew, Remington Royce was not a man to be crossed. \n\n\"Try to restrain yourself and keep your hands away from her left breast,\" Mary admonished Remy. Despite his introduction, she had yet to even acknowledge the girl in his arms with more than a look. Now she reached out and drew a long-nailed finger over the breast, flicking the nipple and hearing the sharp intake of breath, she smiled. \"She's very responsive, isn't she?\" she commented. Seeing the dazed expression clear a little from her eyes.\n\n\"Extremely,\" Remy nodded in agreement. \"She is a constant delight to possess.\"\n\n\"Well, let's make it official, shall we?\" Mary laughed lightly and donned tight sterile gloves and began to bathe the breast in an antiseptic solution. Then she picked up the clamp, holding it for both Remy and the girl to inspect, as she tweaked and played with the nipple she was about to pierce. Lining up the holes in the clamp, she took her time, listening to the whimpers of the girl as she adjusted and readjusted the tight clamp to the perfect position. She rarely marked up a victim with a pen nor asked their opinion anymore, and she had no intention of insulting Remington by doing it today. \n\n\"This will hurt a great deal, but it will be fleeting. Take a deep breath,\" she said, holding the large ten-gauge needle. Then, with no further warning, she pushed the needle through the holes in the clamp, hearing the girl's breath hiss out and her whole body become rigid below her. \"Halfway there,\" she instructed, pulling the needle free and leaving the plastic cannula in place. Then she carefully and painfully removed the clamp, being careful of the cannula and making the girl cry out softly. \n\nSerena couldn't believe the intensity of the pain. She hadn't been expecting that, and she felt the tendrils of it flow out from her nipple and through her body. She tilted her head up and looked at Remy, who had his eyes glued to her nipple. The look of lust on his face only sent her higher in her neediness. \n\n\"Oh God, I need... Please, I need to...\" Serena stuttered, and Mary raised her eyebrows as Remy grinned and instructed the girl to cum, his own fingers tormenting the nipple of her other breast. Mary looked down the girl's body and saw the fingers of his other hand slowly stroking through her obviously-wet cunt.\n\n\"Cum, little slut. Show Mary how much you love and want to wear my ring,\" Remy crooned, as Serena arched up off him, her back bowing hard as she shook with violent tremors at his words. \n\n\"Almost done,\" Remy crooned into her ear. \"You can do this for me. You make me so very happy, you may cum without asking when the ring is put in place.\" He played with her other nipple almost absently, as he watched her calm again, and Mary prepared the ring that he had chosen to bind her to him, in all ways, for always. Once the healing had properly begun, he would have the ring permanently welded shut by the man who made it for him. The thought gave him pleasure, and he kissed her ear and murmured, \"Mine.\" When Mary held up the golden ring with the diamond solitaire at its peak and instructed her to take a deep breath and hold it again, his fingers began to move over her, knowing the intense pain she was feeling and needing her to associate it with pleasure. \"Mine forever and always,\" he crooned, as she hissed out her breath and stiffened in his arms again.\n\nThe intense pain was fleeting, as Mary had said, and it left little more than a dull ache in its wake, unlike the clips and clamps Remy used on her that left their painful message long after they had been removed. The intensity of the second orgasm that rolled through her ebbed away very slowly, and her body continued to tremble long after the ring was in place that she barely heard Mary's instructions. \n\n\"This is called second skin.\" Mary began her lecture of the couple. \"It is clear and waterproof and will allow you to see the ring, while keeping it protected. This must stay on for a minimum of four days. Do not be tempted to peel it off. You will be able to see the healing. The wound will become crusty; that is perfectly normal. After the second skin peels off, you must bath it twice a day in a natural sea-salt solution, for best results in the speed of the healing. It can, in some cases, take up to six months to heal completely. Let's hope that is not the case here. You can touch the surrounding skin of the breasts but leave her nipple alone for at least a month, longer if you can manage it. Three months would be my recommendation.\"\n\n\"I have another to torment while it heals,\" Remy chuckled. \"I want no complications, so I will do as you recommend. Thank you, Mary.\"\n\n\"This is an open wound,\" she instructed Serena directly for the first time. \"You must be vigilant in its care, do you understand little girl?\"\n\n\"Yes, Miss Mary,\" she answered automatically, making the woman eye her critically. \n\n\"Alright, my job here is done. I will see you both this evening,\" Mary said, rolling up the med-pack she had used and depositing it back in her leather satchel. With that, she stood and turned, walking out of the room. \n\nRemy's hands drifted down her body and pushed her thighs apart, dancing over her inner thighs to her pussy. She was so wet, not that he was surprised. He had not allowed her to come earlier that morning so he could enjoy her pain with her. He grinned and nipped at her earlobe, feeling the tremors that still assailed her body, as tightly strung as she was.\n\n\"Such a nasty little slut, turned on and so wet from Scary Mary mutilating your nipple for me,\" he murmured and raised his hand, spanking her pussy. \"Put your legs over the arm of the chair,\" he instructed, and lifted his hands to help her widen her position further as her head fell back against his shoulder. \"Perhaps you wanted Mary to pierce you here?\" He ran a finger over her clit, gripping the slippery oyster between the nails of his thumb and forefinger. \"Would you like that? Mary has already seen just what an insatiable little cum whore you are.\" He spanked her again. \"You want to come, just thinking about her piercing this clit, don't you?\" He squeezed, and she mewled, bucking her hips but kept her legs spread widely as he had instructed. \"Do you imagine it's her hand on you, instead of mine, right now?\" He let her clit go and spanked her again.\n\n\"No!\" Serena cried out. \"It's you. It's only ever you. Only you can touch me like this. Only you can make me feel this way. Only you!\" She cried out, as he spanked her pussy several times in succession. \"I am yours. Only you can make me feel this way. It was your hands, your body below me, your lips on my ear that made me so hot and horny. Please my love, fuck me,\" she begged in a breathless whimper, as he continued to spank her pussy.\n\n\"No,\" he murmured, biting her earlobe and enjoying her whine of despair. \"We both have a lot to do today and, if as you say, only I can make you feel this way then, in my absence you should have no problem controlling yourself.\" He smirked and gave one last hard spank to her pussy before closing her legs and pushing her from his lap to the floor. Coming to his feet, his stroked her cheek. \"I know you need it, baby, and I will give you the fucking you crave once we are man and wife.\" His eyes lowered with his hand, and he traced the outline of the second skin dressing over her nipple. \"You have never looked more beautiful than you do today.\"\n\n*****\n\nSerena had been poked, prodded, waxed, plucked, tinted, tanned and surrounded by the soft touches of men and women who prepared her for her wedding all day. After the torment of the morning without the heady release, Remy denied her body by not fucking her at all. She was wound tightly in her need for him by the time she arrived at the small chapel and was walked down the aisle by Kairos to stand before a priest and beside the man she loved. \n\nShe looked and felt like a princess in a fairy tale gown complete with a large sparkling tiara. She barely heard the words of the priest as she gazed at Remy, seeing the same heat and desire she felt mirrored back at her. She was truly happy. Her old life and the misery that she felt seemed like a distant memory, a dream even, and once again she thanked the fates for putting Remy in her path on that fateful night.\n\nHer voice cracked as she repeated the standard vows after the priest and slid a gold band onto Remy's finger. Before he could begin his vows, however, a commotion sounded in the back of the chapel making him growl low in his throat and turn his head. Serena followed his gaze and barely took in the scene before shots began to ring out, women screamed, and men shouted. All the while she stood rooted to the spot until Leila charged at her, knocking her to the ground. \n\nSerena cried out as pain lanced into her side. The woman knelt above her once the gunfire ceased and looked around, before seeming to make a decision. She picked Serena up bodily and ran to the side door of the church, with the woman draped over her shoulder, blood spreading down the back of her dress.",
        "\"Remy!\" Serena screamed and struggled against the woman who held her firmly. The gunfire had stopped but the scene before her was chaotic and she couldn't see Remy or Kairos in the press of bodies around the altar where she had been standing. \"Remy!\" she screamed again, as the door closed on the chaos. Leila broke into a jog, making pain lance into Serena's side once again. It was excruciating and her vision blurred as she tried in vain to struggle, her energy waning. \n\nLeila felt the moment when Serena passed out. She ran to one of the cars where the driver hadn't moved, as if totally ignorant of what was happening inside the chapel. She reefed open the door and bundled Serena inside, making him shout in alarm and pull earbuds from his ears. \n\n\"Hospital now!\" Leila shouted, pulling her own gun from its hidden holster and threatening the driver. Guns were rare in this part of the world, and being threatened with one, even in this organisation, was rarer still. The man gunned the engine and drove. Leila looked at the growing red stain on the white dress and fear gripped her. She had one job, keep this girl safe, and until she heard otherwise, that's what she was going to do. \n\n*****\n\nKairos looked down on the man he had loved and respected for most of his life. They'd been blindsided by an enemy within their own ranks, an enemy they had seriously underestimated. Even surrounding himself with men that he believed loyal to him on this day had not protected him enough. The girl was his weak spot, she had made him vulnerable. Kairos's mood darkened as he held his hands over the bullet wound in Remy's chest trying to staunch the blood. There was no way to avoid the hospital and the life-saving surgery he needed. They would have to deal with the fall-out of that once his life was saved. For now, though, he needed to gather those he knew he could trust and exact vengeance, before they made another move. \n\nJay was next in line in Remy's organisation, his kingdom, as he liked to refer to it. He would take the necessary steps to ensure Remy's survival and the survival of all he built. That meant working with Jay and ridding Remy of all of his vulnerabilities, the weak spots in his armour. Kairos watched as Leila grabbed the girl and ran. He had no idea whether she, too, had been hit or if it was just a precautionary measure. He hoped that the hail of bullets had taken care of that problem for him. Remy was his priority. Everything else would have to wait.\n\n\"If we wait for an ambulance he'll die. Let's get him out of here,\" Jay said at his elbow, and he nodded curtly. \n\n\"I'll need help,\" Kairos said through gritted teeth, holding back his rage and feelings of despair at Jay's words. \n\n\"We know,\" Jay said, gently pulling Kairos hands away, as another man with his shirt wadded into a ball took his place, placing the shirt over the wound and staunching the flow far better than Kairos had. \"Trust us. We will get him where he needs to be. You need to look to yourself. I need you now, and you are hurt too.\"\n\nThe following minutes were a blur in the nightmare that assailed Kairos, and it wasn't until Remy had been whisked away by doctors and surgeons at the hospital that his head began to clear. He looked at the men who had helped him get Remy this far, alive. They looked at him expectantly. While they all held key roles in the organisation, it was Kairos who knew every nuance of Remy's life and plans for the future. It was he that would have to ensure Jay's temporary leadership and permanent leadership if the worst happened. His stomach clenched at the thought of losing Remy, and he squashed it down, putting all the terrifying and weakening feelings in a box at the back of his mind. He straightened his shoulders. He knew what needed to be done and he would do it. This was his kingdom now, as Jay floundered in the wake of what had happened. Kairos directed two men to stay at the hospital for word of Remy and his surgery. The rest he directed to the compound where they could safely talk and plan retribution, and his own minor wounds could be seen to. The man had been aiming for Remy alone, everyone else was just collateral damage.\n\nHe took a few moments alone to call Leila and find out what had happened to Serena before the men asked him. She, too, had been injured, but not as bad, and was recovering in the hospital. Leila had been answering the questions, giving the least amount of information she could. They were at the wedding saying their vows when a madman came in shooting. She had no idea why or what happened to anyone else. She had just grabbed Serena and rushed her to the hospital. She was the maid of honour, after all, and the closest person to her. Satisfied that Serena would know little else apart from that story, Kairos had been content to leave her as she was while he dealt with the most pressing issues.\n\nIt seemed to Kairos that someone had forewarned the Zenati family that they had been targeted, and the hit had gone wrong from the moment the men arrived. Two of the team had been taken out immediately, while a third was injured. The other men had come looking for justice for their fallen comrades. Remy had sent men that he knew were working to undermine his authority, and they held him responsible. He'd sent the men who had killed his brother, and they had believed him when he said that he could trust no others to get the job done. They believed themselves, and those of their faction, better than him and his desire to lead the organisation's northern tribes with a soft touch rather than an iron fist. \n\nRemy's weakness, though, was Serena. He had taken his hand from the tiller, given others greater responsibility as he spent an inordinate amount of time brainwashing the stupid bimbo. Kairos sneered as he thought of Serena and the change that she had wrought in Remy. She had to go, but he had to do it in such a way that no finger of blame could ever be pointed at him. Having her killed was too messy, especially with Leila's almost obsessive watching-over her. Too many things could go wrong, too many mistakes could be made. \n\nIn the small hours of the morning, he got up and went to Remy's office and opened the safe. Just as he assumed, there was a file marked with her name in there. He took it out. He knew all of the information, or at least he thought he did, but in search of inspiration, he sat at the table and read every last detail, a plan forming in his mind. Then the phone rang, and another problem took priority.\n\n*****\n\nGenesis Zenati sat in the waterfront dive, drumming his fingers on the tabletop. His family were still recovering from the shock of a nationwide attack on the twelve Tables, including their own. If not for the few minutes of pre-warning they had received, they could have lost their heart and fire. He should be with his brothers, investigating every lead they had. Members of the mysterious Tatar Dynasty were due to arrive this evening to help with the investigation, and the federal police had already been in contact because the leaders of the Vitali were now being cared for by his family. Yet here he was, sitting and waiting in the most unpleasant dive that he had ever visited in this town, because his curiosity had gotten the better of him again.\n\nThe fact that the priest who contacted him with the lead for a story related to his family had wanted to meet here, of all places, had intrigued him even more than the small amount of information that the priest had given him. To say it was squalid was kind. The place needed to be condemned. He's ordered a beer. He could see bottles through the dirty glass of the refrigerator and refused the offer a glass. Taking a seat at one of less damaged tables, he had settled in to wait for his mysterious source.\n\nHe watched the flow of customers, not seeing anyone who looked particularly priest-like, and let his mind wander. He was an award-winning journalist. He had the respect of his colleagues and a commitment to his family Table now. He didn't need to be chasing leads like this anymore, but the hint that the story had something to do with his family kept him where he was, watching the door and waiting impatiently. \n\nOne of the bikers he'd seen come in earlier, dressed all in black leather, walked up to his table and stood for a moment. Genesis craned his neck to look at the tall, muscular guy and raised an eyebrow.\n\n\"Genesis Zenati?\" the big man questioned.\n\n\"Yeah, what of it?\" he returned with a shrug, prepared to show this guy that he was not intimidated by his size and demeanour.\n\n\"I'm Father Bob Rossi,\" he said, taking a seat and smirking at the surprise on the other man's face. Announcing his vocation often had that effect on people.\n\n\"Well, that's a surprise,\" Genesis chuckled, not hiding the fact that the man was not what he had been expecting.\n\n\"I get that a lot. Look, thanks for meeting here. It's not the greatest of places, but I'm hoping to confirm some of the information I was given for you, here,\" he said. \"Part of the story I found out for myself before calling you. I just can't get much further without assistance, and I was warned that the police would be no help, because of the people involved.\" \n\n\"You have my attention,\" Genesis said. \n\n\"Good, because I think a young woman is in great danger, and if we are going to save her we have to move fast, and I knew you would want proof. So here we are.\"\n\n\"Slow down and start from the beginning, shall we? Who is in danger and why are you all cloak-and-dagger about it? You're a priest, not a secret agent. Aren't you?\" Genesis asked and narrowed his eyes.\n\n\"Alright, here,\" an obviously angry man stepped up to their table and shoved a thin sheaf of papers at Bob. \"Go preach somewhere else, your holiness,\" he sneered. \"If you come back, I may not be so virtuous.\"\n\n\"God bless you, Toby. The church door is always open to the virtuous as well as the not-so-virtuous,\" he chuckled and turned to Genesis with a wink. \"Shall we walk for a while? I believe the air in here is more than a little stale.\"\n\n\"Sounds unbelievably good to me,\" Genesis chuckled, amused by the odd man who called himself a priest. Once outside, however, he demanded answers. \"Enough cloak-and-dagger bullshit, tell me why I am here.\"\n\n\"A man came into my confessional room. We have couches and talk face-to-face these days, but there's a screen for those who don't want to look at the confessor. The choice is theirs when they enter,\" Bob began, but could see the other man's jaw working in frustration. \"This man, who told me about the young woman, wanted the screen of anonymity before he told me that six months ago, a young woman was living down here on a broken-down old boat at the end of the docks. She had no friends or family and was quite alone in the world, like a lost lamb. She worked at that dive we were just in, as a bartender,\" he said and handed Genesis the employee records that he had wheedled from the owner after threatening to come each day and attempt to convert his customers. \n\n\"I see,\" Genesis glanced at the name and raised an eyebrow in acknowledgement.\n\n\"She came under the eye of a powerful man named Royce who took her, though I am not clear on the details of that. The man who told me said she went willingly in the beginning, but only because of something traumatic she had witnessed. Royce then systematically destroyed her old life and identity. The boat was apparently put into long-term storage here and is accessible, but I don't have that sort of clout in these parts. Maybe you do, if you need more proof of her real identity.\"\n\n\"Why would I need proof?\" Genesis was once again losing the thread of the story.\n\n\"Royce, as I said, systematically destroyed her old life. He created a new identity for her, and through the use of drugs, torture and other less savoury things, brainwashed her to believe that a new identity was who she truly was. She was about to marry him when she was injured,\" Bob explained.\n\n\"Less savoury than torture?\" Genesis asked, not even imagining what could be worse.\n\n\"I guess that depends on your point of view,\" he said with a sad smile. \n\n\"So, this girl went willingly with this guy and he abused her trust. She was living here in this cesspit, and he took her and gave her a brand-new, I am assuming better, Life. So why tell me? Just because her last name is the same as a well-known family, who happen to be my cousins? She might have run away from them for a reason. Or not be related at all. Trust me, I know that family and none of their daughters would willingly live here on a broken-down boat.\"\n\n\"You're an investigative reporter. You have done exposes to shut down drug rings and human trafficking. You aren't the least bit interested in saving a girl who was drugged, tortured, turned into a sex slave and now lies in the hospital with her chance of escaping that life slipping away from her as we speak?\" Bob challenged him. \"The only reason I even got those work files is that the miscreant that owned that bar planned to blackmail Royce with them and hid the copies when Royce's men came and destroyed any evidence that she once worked there. The dock manager too, seems scared, when asked about the girl or the boat she owned.\"\n\n\"So, this Royce, does he have a last name?\" Genesis asked. \n\n\"Royce was what the man who confessed used. That man was also the one who told me that I should contact you and tell you the story. I think he wants someone to help the girl get away. I went to the hospital. I couldn't get near her for the security around her, but I found out two things. Serena Seabrook, a.k.a. Olivia Gambaro, was about to marry Remington Royce. Remington Royce was also injured on his wedding day and is lying in a coma in the same hospital.\"\n\n\"Remington Royce,\" Genesis breathed. He had been trying to get some dirt on that man for years, but he was Teflon, nothing stuck to him. Each time he investigated a story Remington Royce was a name of interest. This time he may just be able to get the upper hand on the man and prove he was part of an organised crime family known as the Suebi. \"In that case, let me give you a lift to the hospital, and I will make sure you get to see her,\" he said, surprising Father Bob with his quick turnabout. \"I would very much like to meet the woman who could bring down Remington Royce's carefully-stacked house of cards. You are right to be concerned because he is the devil incarnate, and I truly believe he would have dragged that young woman into hell with him.\"\n\n*****\n\n\"I've already told you that the girl doesn't need a priest,\" Leila practically snarled as the two men approached the room where Serena lay.\n\n\"And I told you I would be back,\" Bob said amiably, in the face of her hostility.\n\n\"Pleasure to meet you,\" Genesis said in a congenial way and held out his hand. \"I am Genesis Zenati. My uncle is the hospital administrator, and he informs me that no paperwork has been filed to allow private security in this ward of the hospital., So, unless you would like me to have you arrested for any number of misdemeanours, I suggest you step aside and help us with our inquiries.\" \n\n\"Good to see you again, Mr Zenati,\" a nurse smiled as she entered the room as if on cue, making him smile. He could see the woman weigh up her loyalties as she considered whether being arrested was worth protecting her charge.\n\n\"Alright, but don't upset her in any way. Her fianc\u00e9 is very protective of her,\" Leila said, through gritted teeth, as if it pained her to give anyone but the few approved nurses and doctors access to the young woman. Leila knew the girl wouldn't respond to anyone without the keywords to make her understand that they were safe to deal with, but she hated the thought that she would be the one in trouble for allowing her to be disturbed so often.\n\n\"Father Bob Rossi is the name, in case you want to report my being here to your boss,\" Bob said cheerily as he walked into the room ahead of Genesis to meet the young woman he had worried about for the last twenty-four hours.\n\nGenesis said nothing as he followed Bob into the room. He couldn't see the girl around the nurse taking observations, and he moved toward the wall next to the bed to wait and observe Bob talk to her, before making any decisions about what he would do personally. This seemed to be Bob's show for now, and he was just along for the ride and to help him uncover the story as well as, hopefully, get some dirt on Remington Royce. He glanced around the room for a clue as to the personality of the woman. There were no flowers, no get-well cards, no personal items at all, and he frowned. Surely, the fianc\u00e9e of such a well-known and generous man, as Royce was reported to be, deserved some sort of cheerfulness as she recovered from her injuries.\n\nHis gaze went back to the bed, now that his view was unobstructed, and it was as if time froze. His heartbeat throbbed loudly in his ears and his gut twisted as if he'd been knifed. The pain travelled up his gut into his chest, and he lifted a hand to his heart feeling as if it was going to stop. The muscles of his heart contracted, sending out radiating pain as he gazed at her. Then she turned her head to look at him. When their eyes locked, he felt as if the pain would split him apart as the sea green eyes held his for long minutes before she turned her head back and stared straight up at the ceiling, ignoring both himself and Bob. \n\n\"She doesn't talk to anyone but the pit bull, Leila, who can sometimes get her to talk, but more often than not, it is merely to say that she needs the bathroom,\" the nurse said when Bob tried to cajole the girl into talking to him.\n\nGenesis remained silent, just watching the scene before him, his hand slowly dropping from where he had clutched it to his chest just moments before. He felt weak and shaken. The pain had subsided but he couldn't understand what had just happened to him. He could explain it if he believed in superstitions and gypsy magic like so many in his family, but he didn't. Did he? He moved closer to the bed and really looked at the petite, young woman lying there. She was beautiful, he acknowledged. Even here, with her hair tousled, no makeup and a hospital gown that slipped from her shoulders too easily, she was still one of the most attractive women he had seen. The golden glow of her hair and fine features made her beautiful in an ethereal way. She was, as Bob said, a lost lamb and he knew that he wanted to help her, had to help her, to find her way back from whatever hell Remington Royce had subjected her to. \n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "brainwashed",
        "dominant/submissive",
        "control",
        "wedding",
        "ambush",
        "piercing",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-02"
}