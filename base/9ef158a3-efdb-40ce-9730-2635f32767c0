{
    "title": "Mira Ch. 10",
    "pages": [
        "Chapter 10 as promised!\n\nPacing his room, Rillan simply couldn't put himself at ease. Each time he lay down and closed his eyes with the intent of sleep he heard the soft notes of Mira's silver whistle echoing down the hall. When he rose to see where the sound was coming from, there was nothing. It didn't surprise him that it was a dream. He had been adamantly clear about the druids sending a new girl and keeping Mira with them. They spent the last few centuries doing exactly as he told them. It would make no sense for them to go against his wishes now.\n\nA sudden wave of frustration coursed through him and he grabbed the corner of the nearest piece of furniture and threw it across the room. The heavy wooden desk crashed into the wall as if it were a toy. Parchment, pens, a few books, and various other items that he had randomly left on it, scattered haphazardly across the floor. Charging out of the room, he went to the large main chamber at the end of the hall.\n\nRillan stripped to his breeches, tearing fabric in his rage. Grabbing his sword from the rack where he left it, he began pummeling his practice dummy into submission. At great length he found himself tired, but no less frustrated than when he had begun.\n\nWith slightly more control than he had as he undressed, Rillan began gathering his clothes together. I'll take a bath. Maybe I'm tired enough to fall asleep finally. Or at least I should start considering the possibility that my existence may be in danger. If Mira's would-be rescuer was right then I'm about to become obsolete, or at least a bargaining chip. The way the druids work, it's hard to guess which that will be. \n\nAs Rillan gathered his tattered clothing and tried to force his brain to consider something other than Mira, a soft clatter followed by a rolling sound caught his attention. His eyes caught movement and he realized that the last time he had worn his now shredded tunic was when he assassinated Tiberius. The small black pearl he had found rolled to a stop in front of the fireplace. \n\nThoughts turned toward Mira again and Rillan plucked the pearl up from the hearth. A rush of inspiration took hold of him. Dropping his clothes, he hurried back to his room. Rillan ignored the splintered wood that had been his desk and shuffled through the mess on the floor to get to a chest at the foot of his bed. \n\nIt had been so long since he opened it that the latch was rusted shut. Even so, it didn't take much effort for him to force it open. Inside the chest, he sifted through treasures of a previous life: the tunic he wore when he was married, a dagger given to him by his father, a small wooden carving of a dog from his childhood, a pressed dry flower that his daughter had given him before she died\u2026 He had nearly forgotten what all he kept in the chest. Finally he found it. A small pewter rose pendant. His mother wore it on special occasions. \n\nTaking the pendant from the chest, he turned it over and over in his hands. Though heavily tarnished and needing a new chain, it would due. Smiling to himself he took it down the hall to the room he used when he needed to repair his armor. It wasn't a forge by any means, but it worked for small jobs. He had a few tools and an anvil. This would require more finesse however. He wanted to remove the small white pearl from the center and replace it with the black one he found.\n\nWhite pearls can be found anywhere. It's far too ordinary. \n\n* * * *\n\n\"Mira?\" Liam watched her squinting at the sky as if it bothered her that the sun was out. He tried for days to get her to leave her small room in the house the sacrifices were kept in. \n\nLooking a little dazed Mira turned to him. \"Did you say something Liam?\"\n\nThe expression on his face was more than a little hurt. \"Yes,\" he said softly. \"Did you really not hear me?\"\n\nSuddenly it sunk in. Mira stared at him for a long time before she spoke. \"No, I heard you. Are you serious?\"\n\nHis hurt expression worsened. \"Mira, I guess maybe I thought\u2026 I don't know what I thought. Never mind.\" Liam turned away from her and began walking. He didn't care where he was going as long as it was away from her.\n\nMira was overwhelmed with guilt. Guilt over Rillan. Now this was too much. Marry Liam? What else is there for me now? I thought I knew my purpose. I've been wrong about so many things. \"Liam,\" Mira called after him and ran to catch up. \n\nHe didn't know if he should stop or not. The last thing he wanted to do was discuss being ignored during a marriage proposal. \n\n\"Liam, I'll marry you,\" Mira announced to his back. \"I'm sorry I was distracted. I never expected to ever marry anyone. I'll marry you.\"\n\nTurning back around a small, uncertain smile touched his lips. \"I'll bring you back to us, Mira. I promise. You spent too much time in the dark. It got into your head. He7 got into your head. You'll see. It'll be alright.\" Liam pulled her into his arms and held Mira's tiny frame carefully. \"First we're going to get you something more to eat,\" he said gently.\n\nMira stared at the people passing by as Liam hugged her. She couldn't help feeling that this wasn't right. You just don't know what right is anymore, she told herself. Liam is a good man. He loves you. This will work.\n\n* * * *\n\nThe senate chamber at Noviodunum rumbled with uncertainty and conspiracy. No one knew who would replace Tiberius Caelius Novanus. There were several men in the running. None of whom were from the Novanus family.\n\n\"It's about time,\" a voice whispered.\n\n\"How long have they controlled the senate?\"\n\n\"Far too long.\"\n\n\"Perhaps the troops will be called home.\"\n\n\"I haven't seen my brother in over a decade.\"\n\n\"Who cares how it happened. Next time pay the druids to get rid of the tyrant sooner.\"\n\nThe hushed exchanges ended to the clacking of a ring on the arm of a large carved wooded chair at the head of the room. A short stout man in a long embroidered toga stood and called for order. \"Enough, enough,\" he voice carried over the room. \n\nOnce he was satisfied that all eyes were on his portly frame Senator Torum continued. \"Arrangements for the funeral pyre are to be handled at the discretion of the Novanus family. Further information, to be announced as needed. Over the next few days we will hear from the various men who believe they would be fit to fill the deceased's place in our forum. Elections to be held at the completion of the debates.\" \n\nSenator Torum continued to drone on at length covering all the daily business. He started with a movement to lower the taxes on an area of the empire that had recently been devastated by a storm and rescue efforts to move food into that region. All the while a weasely looking man in a tunic that didn't fall quite right on his frame, stood by impatiently. Each time Senator Torum brought an end to a mundane affair of state the weasely guy stood hopefully taller in his place and then slumped back again when the new topic wasn't what he was waiting for.\n\n\"Last order of business,\" Torum announced with finality and in a tone that told all in attendance that he was not happy with the upcoming information. \"We have with us a delegate from the druid settlements. I believe he has the backing of the Novanus representative?\" Torum looked to a teary eyed woman who nodded emphatically. Several young men who had the distinct Novanus jaw line glared at Torum. Smiling at the young men the senator turned back to the assemblage. It was obvious by his placement of the situation in the lineup of the day's business what his opinion of the next announcement would be.\n\nSenator Torum turned toward the eager man, \"Your name sir?\"\n\n\"Darius Jos. If it please the senate,\" he said with a bowed head. There was a soft rumble through the room as men shifted positions to get a look at the new speaker. \"I have come to the senate with disturbing news at the bequest of the Novanus family. I was sent to Noviodunum as a representative of my people with good intent. Over time I have come to see Noviodunum as more of a home to me than my own lands. Here the Novanus family took me in and conducted business in good faith with my people for several years. It disturbed me to find that the assassination called down on the mighty head of their family be at the hands of the very people who sent me here to befriend him.\" \n\nWith the announcement an amused murmur circulated amongst the crowd. \"What's the fool up to?\"\n\n\"Does he believe he brings us news?\"\n\n\"What does he want?\"\n\nDarius cleared his throat to call attention again. He had expected his words to have more impact than it appeared. Tiberius' sons growled impatiently. At least I have the family behind me.  \"I would ask that the Senate send me back to my people with the aid of the army. At that time I would bring to an end the Circle's satanic practices and bring the druidic peoples under empire protection.\"\n\nA soft chuckled circulated as the Senate realized what exactly Darius was up to. A balding man in a richly embroidered toga stepped forward. He was one of the men vying for Tiberius' recently vacant position. His mere presence brought a hush to the bemused crowd. \"Darius, is it? Did you not hear the list of concerns that were put forth by Senator Torum before you? The settlements you speak of have been a bane in our existence for over a century. The people there do not want empire rule and we are stretched to the limit of our resources to control what we have and contain the war that is coming from other borders. Why would we want to expend troops on attacking a border too far to be profitable and currently causing no trouble?\"\n\nOne of the young Novanus charged forward. \"What was my father to you, Gaius?\"\n\nThe well dressed senator glared down at the young man. \"Your father was a mighty general. He expanded our borders, as his father did before him. As, no doubt, you will too some day. If given the opportunity. However, even your father was aware of our current resources and our abilities.\" The senator turned away from the angry young man. \"The vote,\" he shouted into the assembly.\n\nMen all over the room echoed, \"The vote!\"\n\n\"Vote!\"\n\n\"Cast the vote!\"\n\n\"Send an army to follow the druid,\" Gaius called out.\n\nYoung men in plain white togas carrying richly embroidered red velvet bags circulated amongst the crowd. Men rooted in pockets producing chits that were dropped into the bags. Finally the bags were placed on a large table. Senator Torum approached each back and upended it with the tips of his fingers. Gold and purple chits spilled across the table. \"No count needed. At least 10 to 1 against,\" he announced.\n\nAn approving rumble enveloped the room.\n\nDarius Jos stepped forward, fuming with anger. \"You'll let the Circle assassinate a senator and face no repercussion?\"\n\n\"You're out of order druid,\" Gaius growled. \"The floor has not recognized you to speak.\"\n\nDarius knew the rules of the senate well enough that the tone in Gaius' voice caused him to back down.\n\nThe oldest of the Novanus boys stood forward. \"If the senate will not send the army then our house sends what troops we have. I would hope that those loyal to my father may seek to send aid as well. My family retires to our estate. We have plans to make.\"\n\nDarius followed the mourning family out of the senate chambers, his disappointment momentarily abated. Perhaps this will work out just as well. This way I won't owe any obligation to the senate. A child is easily manipulated.\n\n\"Fool child,\" someone said aloud.\n\n\"Let him send his house guard. His estates won't last long without adequate protection.\"\n\n\"Troops don't work for free.\"\n\n\"It will be a good lesson for the young Novanus to learn.\"\n\n* * * *\n\nLilith sighed heavily. \"And so it comes.\"\n\nThe runner who had brought the news waited patiently to be dismissed, as the Circle considered carefully the news he brought.\n\n\"A small army is still an army to a people who have none to speak of,\" added an old man who sat stroking his beard thoughtfully.\n\n\"Agreed,\" came another voice.\n\n\"But their number is relatively small. Send the vampire.\"\n\nThey had all been thinking it. Speaking the suggestion aloud was a different matter. \n\n\"You can go,\" Lilith said gently to the now frightened young messenger. \"Thank you. Speak to no one.\"\n\nThe messenger backed hurriedly from the room, nodding emphatically as he left. \n\n\"This is not what he was meant for,\" someone said as the door closed, returning to the topic at hand.\n\n\"Can Tiernay take an army?\"\n\n\"Is he really that strong?\"\n\"When was the last anyone save the girl saw him or spoke to him?\"\n\"From the looks of Mira, it's not a pleasant task.\"\n\n\"We have no choice.\"\n\n\"Darius brings an army. Small as it may be. We sit and allow him to take control of the Circle or we attempt to fight back.\"\n\n\"So we gather the men and arm ourselves.\"\n\n\"We're philosophers and farmers. They have armor and swords.\"\n\n\"Words don't shield from steel.\"\n\n\"We'll not know if Tiernay can handle it unless we ask him.\"\n\nLilith produced a small piece of parchment paper and began writing in her sweeping script. \"The elders alone will reconvene tomorrow eve at the entrance to the vampire's cave.\" From nowhere a young woman appeared at Lilith's side. She took the paper from the old woman's hand and rushed from the room. Rillan would find it that evening when he checked the basin where his notes were left."
    ],
    "authorname": "secretme",
    "tags": [
        "vampire",
        "druid",
        "sacrifice",
        "conspiracy"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mira-ch-10"
}