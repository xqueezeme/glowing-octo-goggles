{
    "title": "Love at Crow Creek",
    "pages": [
        "Love at Crow Creek\n\nBy: YodaandLumiere\n\n\"That's it, folks! It's a 90.25! Rhett Olsen wins it all again!\" The announcer's voice rang out over the fairgrounds, his excitement contagious to the capacity crowd under the lights.\n\nThat was the night my life changed in every way. I'd been bull riding since I was six years old. As little kids, we started doing mutton bustin' and then moved up to mini cows. Eventually you'd get on small bulls. But in the world of professional bull riding, you rode monsters.\n\nAnd I'd just qualified to move up to the big leagues. With that win under my belt, I'd gotten an invitation to attend the Top Pro Series Professional Bull Riding tour, which was an opportunity for me to score enough points to stay on tour.\n\nFive riders from around the country would get these coveted invites to come on tour for the first five events of the new season. If you did well enough to land yourself in the top 45, you stayed on tour. Staying on tour meant winning money and money is what makes the world go around.\n\nYou don't have to win an event to win money, you just have to have one of the best scores in one or more rounds. Obviously, if you win several rounds in the same event, you're winning more money. And if you can win the whole event, you walk away with at least $25K.\n\nThis was the dream of every bull rider in the world. In January, I'd start the tour with the Pro Series and I would have to earn my spot, just like everyone else. I was going to be an eighteen year old rookie out in the real world for the first time ever.\n\nMy name is Rhett Olsen. My daddy and his daddy were bull riders in high school, but neither ever went beyond the local level. The whole family pinned their hopes and dreams on me when I started winning everything several years before I qualified for the PBR.\n\nI had graduated high school in the summer and I rode that whole autumn until I'd won everything in the state and the region. My career was peaking at the exact right time.\n\nI was eighteen and on the small side for the average world, but perfectly sized for bull riding. I was five foot, seven inches tall and I weighed a lean 140.\n\nSmall, lightweight bull riders had less mass to control during the ride. The big guys had to muscle their way through the full eight seconds. I merely had to balance and hold on for dear life. It's definitely way more complicated than that, but that's the general idea anyway.\n\nSome of the giants of bull riding were five foot five inches and under. I'd dreamed of being one of those giants for as long as I could remember. I was equally excited and terrified about going on a national tour. I had worked so hard for it.\n\nAt the end of January in the new year, I boarded a plane for the first time in my life to head out on tour. My two best buddies drove me all the way into Billings to drop me off. Cody and Michael had been my constant companions my whole life.\n\nCody Waters lived on the ranch next to my grandparents ranch, which is where I'd lived most of my life. Michael Gomez had come to work with his dad, one of our farmhands, for the day when he was five or six. We hit it off and he came with his dad everyday in the summers after that.\n\nThe three of us went to school together and graduated together. We were always together. Leaving them behind was the hardest part of leaving.\n\nMichael was dating a girl from school and getting serious about her. It wasn't uncommon for kids my age to get married right out of high school where I'm from. We assumed Michael and Hailey would be married within a year.\n\nI hadn't really dated during high school. Between living and working on the family ranch and focusing on bull riding, I didn't have time for a social life outside my two buddies and going to school.\n\nCody worked his family's ranch, which was much larger than ours. He didn't really date much either, but the girls loved him. He could decide he wanted a girlfriend and he'd have ten to pick between, all lined up. It was almost too easy for him.\n\nI had landed in New York and taken a car to the hotel in the city. Checking in scared the shit out of me. Luckily another rider was checking in next to me and I was able to mimic him and I got through it and finally got a key card. I had expected an actual key for some reason. I felt so na\u00efve in the real world.\n\nThat first night, there was a meet and greet event in the hotel and I went mostly to make sure I didn't miss any important information. I felt like I was at a junior high school dance as I hugged the wall and stood alone in the shadows, watching everything with wide eyes.\n\n\"Hey, first time?\" A voice said from beside me, startling me out of my thoughts. I turned to look and saw another young guy right beside me.\n\n\"Yeah, first time. You?\" I asked.\n\n\"I was at three events last year as an alternate, but I'm ready to get on tour this year and stay on tour. I'm Bryan.\" He stuck out his hand.\n\n\"Hey, Bryan, I'm Rhett.\" I shook his hand.\n\n\"I'm from Oklahoma. I didn't know it was going to be this cold here.\" He said as he leaned back against the wall and looked out over the room.\n\n\"I'm from northern Montana. This seems pretty normal to me.\" I remarked about the weather.\n\n\"No wonder you don't look like you're uncomfortable. You can tell which guys are from the south just by looking at them. Look.\" He pointed to a group of guys standing around, laughing.\n\nHe was right. Some of them seemed relaxed and comfortable in the drafty room. And some stood with hunched shoulders and blue lips, with their hands shoved in their pockets. I nodded in agreement about his observation.\n\n\"Are you cold?\" I asked him.\n\n\"Why, are you going to warm me up?\" He replied calmly, still looking ahead.\n\nMy head snapped up at his reply. What did that mean? I wasn't going to fucking ask him though. Did he just come on to me? What the hell?\n\n\"I guess you can borrow my coat if you need it.\" I said, trying to act like nothing had happened.\n\n\"C'mon, let's walk around. I can introduce you to some of the guys.\" He stood away from the wall and looked at me expectantly.\n\nI followed him around the room, meeting a few of the other riders and some of the crew members. Everyone seemed really nice and the excitement of the first event of the new year saturated the whole room.\n\nThey fed us well and I eventually went back to my room to get some sleep. Bryan mentioned he needed a travel buddy to share a room with at future events. Everyone shared rooms to split the costs, he explained.\n\nIt all came out of our own pockets. Hotel rooms, plane tickets, any other travel expenses, event entry fees. It could easily cost over a thousand dollars to ride in each and every event. That's why winning, even a single round, was so important. I needed the money and the exposure to hopefully get more sponsors to help pay my way.\n\nGuys bankrupted themselves trying to make it in this sport. The odds were stacked against you, just like in most professional sports. But in bull riding, half your score is dependent on a mean, mad animal weighing up to 2,400 pounds! You could easily face a career ending injury every time you got on the back of a bull.\n\nI agreed to bunk with Bryan at the next event. I didn't mention that I didn't know how I was even getting back home after this event. If I didn't win some money, I might have to call home and borrow some from Cody and Michael, which I didn't want to do.\n\nLuckily I got a good score in the second round. It wasn't enough to get into the final round, but it was enough to get a check at the pay out window. It just covered my expenses for the weekend but there wasn't enough to buy a plane ticket.\n\nI was milling around the medical and dressing rooms as everyone was packing up to head home when I heard my name being called by a deep, familiar voice. I turned to look and I felt my heart warm immediately.\n\nThere was Cash Harding, one of my daddy's dearest friends and a world class stock contractor. He was like an uncle to me. He crossed the room and gripped my hand while pulling me into a crushing man hug.\n\n\"Rhett, my boy! You did great in round two from what I hear!\" He was his usual loud, jovial self.\n\n\"Yeah, I got a nice bull in that round. I got my first PBR check, though it's not quite enough to get home.\" I smiled as I chatted with him.\n\n\"You can catch a ride with Skip if you'd like. He's taking my bulls to the next event in Louisiana. It's not home, but it's where you'll need to be next weekend.\"\n\nSkip was his stepson and the man who drove his rig and kept his bulls in top condition while on tour. It was a job for a skilled and determined kind of person. Skip was that in spades.\n\nI did want to go home, but then I'd need to make those five hour trips back and forth to the airport and pay for another flight in just a few days. Maybe heading to Louisiana directly was my best bet.\n\n\"You think Skip won't mind if I tag along?\" I asked.\n\n\"Hell no! He'll be glad for the company and for some help. He will put you to work, you know that already.\" He beamed at me. He was what my grandpa called a good ol' boy.\n\n\"I don't mind earning my way. Or getting to know your bulls a little better. Maybe they'll teach me their tricks.\" I joked back with him.\n\n\"Not my bulls! They're a secretive bunch.\" He smiled as he waved his hand to catch someone across the room's attention. I looked at who he was signaling and I saw Skip heading our way.\n\n\"Hey Cash. Rhett, good to see you kiddo!\" He grabbed my hand and shook it hard.\n\n\"Rhett needs to get to Louisiana. He's going to ride with you. Make him earn his keep.\" Cash said and then walked away to chat up some of the others.\n\nSkip turned to look at me. \"You got your stuff packed up?\"\n\n\"Yep, I only have two small bags and they're all packed.\" I answered Skip as I pointed to the bags on the floor behind me.\n\n\"Let's drop them in the truck and join the guys for some dinner down the street.\" He said and walked away. I quickly picked up my stuff and caught up to him.\n\nI shoved my bags into the cab of the truck and followed Skip to a steakhouse tavern style restaurant that mimicked what we had back home as a regular restaurant, but with a New York city flair.\n\nWe sat at a big long table with a bunch of the riders and some other stock managers like Skip. I read the menu and nearly died when I saw the prices. You could feed a family of eight for a week back home for the price of one small steak!\n\nSensing my sticker shock, Skip leaned over and spoke close to my ear so no one else would hear. \"Cash pays for all our food, get whatever you want. It goes on my expense report.\"\n\nI nodded and smiled a silent thank you for not making me feel awkward in front of the more experienced guys. I decided on a steak that had better be good for that price. I wondered if the chef knew he had a table full of ranchers, cowboys and beef contractors to feed beef to.\n\nAfter the food, which was pretty amazing, I followed Skip back to the hotel and into the room of one of the older cowboys. He'd been on tour for years and had passed the million dollar mark in career earnings last season.\n\nThe room was full of guys that didn't have to fly out tonight. Everyone was drinking and laughing as some country music washed over the room. I found a quiet corner on one of the couches and nursed a beer.\n\nI was a lightweight, literally and figuratively. The last thing I needed to do was get trashed on three or four beers in front of the veterans. I was only eighteen and my mom was an alcoholic, so I didn't really drink. One beer would help me blend in and not cause me any issues.\n\nAn hour later a whole bunch of girls arrived and the hotel suite seemed bursting at the seams. The girls were bull riding groupies, or buckle bunnies, as many of the guys called them. They flirted and laughed too loudly while chatting up the more famous riders.\n\nI saw Skip talking to a pretty redhead in a tiny skirt. She was very well endowed. I wondered if she had fake tits. No one back home got those kinds of surgeries, so I wasn't sure what fake tits really looked like. But this girl's boobs were huge and seemed to defy gravity.\n\nBefore I knew it, she was heading my way and Skip was giving me the thumbs up from behind her. Oh no! I don't want to talk to her! If I felt awkward before, I'd feel like an alien if I had to chat up a hot city girl with big fake boobs!\n\n\"Hey, your friend over there said you needed to be initiated into the real cowboy lifestyle.\" She said as she sat on the edge of the couch and angled herself towards me.\n\n\"Naw, I'm alright. Thanks though.\" I said and nodded and tipped my beer bottle to her, trying to dismiss her.\n\n\"He said you'd say that. I'm Gina. Sit back and relax, cowboy.\" She purred the words as she reached for my belt buckle.\n\nMy first instinct was to bolt. What was she doing? Then I thought about making an impression on everyone around me. I wanted them to think I was experienced and comfortable with chicks, so I forced myself to relax.\n\nAs my buckle came undone and she popped the button on my Wranglers, I scanned the activity in the rest of the room. I mostly wanted to make sure no one was watching us. I noticed several other guys with girls in their laps, kissing and touching each other.\n\nOn the bed I saw a girl riding one of the crew members. They were both fully dressed, but she was in a skirt and was clearly on his dick! I'd never seen people fuck in real life and not in the same room as a bunch of other people, that's for sure.\n\nWhile I processed what I was seeing I realized Gina had gotten my zipper down and her hand was reaching for my cock. The whole situation with her and everything else going on in the room made me excited, so I was already quite hard.\n\nI was so uncomfortable with the whole experience but my eighteen year old body was responding to the sex cloud that had covered the whole room in the last hour since the girls had arrived. My brain was scared but my dick was ready to go.\n\nGina gripped my shaft and carefully pulled it out of my pants. Before I could worry if the other guys were looking at and judging my manhood, Gina sucked the whole thing into her mouth and throat.\n\nI'd never gotten a blow job before. I nearly screamed at the sensation of having my swollen cock in a hot, wet mouth and surrounded by her slick throat muscles. She started moving up and down, using her hands on my balls and the base of my hard-on.\n\nI pulled my hat low over my brow and closed my eyes to block out the rest of the room and to imagine she was someone else sucking my dick.\n\nI've had a poster of JB Mauney in my bedroom since I was ten. He was my favorite bull rider of all time. He was one of the very best riders and a two time World Champion. He was also gorgeous with the most seductive eyes I've ever seen.\n\nOn my poster they were so blue grey and heavily lidded, making him look sexy and ready to service me. I almost always imagined JB when I jerked off. He was my secret crush. No one knew that poster was my masturbation fodder. It was just an innocent picture of my favorite rider to the rest of the world.\n\nNo one knew I liked guys. No one. Not even Michael or Cody. I barely admitted to myself in the light of day. I gave into it when I was alone and I could take myself in hand and enter my fantasy life. But never any other time. Never ever.\n\nMy mind drifted back to reality and I felt my climax racing up to overtake me. I touched Gina's head and I told her I was close. She just grinned and sucked harder, moving her lips and hand on my shaft faster.\n\n\"Fuck!\" I ground out through gritted teeth as she brought me to orgasm. She swallowed every drop and kept sucking like she wanted even more.\n\nI finally shook my head to clear the haze of my first sexual experience and I pulled her away from my package. I tucked myself into my pants, but before I could zip up, she was on my lap and kissing me.\n\nShe tasted like my cum which I loved. I always tasted my jizz, imagining it was JB's or some other sexy cowboy's. It made kissing this girl easier, strangely. My mind never stopped thinking about the other people in the room and the impression I wanted to leave with them. I kissed her like I was into her. I wasn't.\n\nA while later, a rather drunk Skip found me and led me back to the truck. The cab had a big bed and a good amount of space on the floor. Skip flopped across the bed and was snoring before I could even get my boots off. I made up a comfy sleeping space on the soft carpeted floor and quickly followed him into the darkness of sleep.\n\nIn the morning Skip and I got on the road. Once we got out of the city traffic we stopped at a truck stop and took hot showers and had some late breakfast at the diner. He paid for the meal and the showers on the company card again. That seemed to be how it was going to go.\n\nThe next several days included shoveling manure and feeding and watering the bulls in the trailer. The trailer was state of the art and nicer than my daddy's place back home. The bulls had climate control and a sound system amongst many other luxuries.\n\nThe best bulls in the business are worth up to a half a million dollars, so the pampering makes total sense to everyone in the industry. Hell, their sperm is sold by the vial for thousands to ranchers who want those genetics.\n\nOne bull on tour wouldn't drink water when he was taken off the ranch to go to events. His hauler started bringing several giant tanks full of hundreds of gallons of water from the home on the road just for that animal. It's seriously big business.\n\nBesides the cowboy that wins a million dollars and the title of World Champion, the bull that has the best season also wins a title and a big fat bonus money check for a hundred thousand dollars. The bulls are world class athletes and they are treated as such.\n\nSkip was good company, even when he prodded me about getting my dick sucked at my very first event. He assured me I'd have my pick of the buckle bunnies at all upcoming events, too. I just joked that he was jealous and changed the subject.\n\nAs the next few events passed, his words proved to be true. I had no problem attracting willing women. I just didn't want them. Instead my problem was finding ways to turn them down without outing myself.\n\nI managed to get a bull ride at the second event and win a bit of money. Plus Skip gave me some cash, saying it was to pay for my extra hard work. It felt like a dad move though. He gave it to me as we checked into the hotel. He wanted me to be free to room with Bryan and go out with my peers without him and the company card. He and Cash, who was back in Montana, were very good to me.\n\nBryan and I did room together at the second and third events. We got along great, but we had different guys we hung out with. I'd made friends with a few other rookies and young guns, in their second and third seasons. Bryan and Skip hung out with some of the older cowboys, closer to their age.\n\nAt the fourth event I started rooming with another rookie, by the name of Nick Longleat. Bryan was cool about it and started sharing with one of his other buddies. Nick was friends with several people that worked behind the scenes on the medical team. We hung out with them all weekend.\n\nThere were several physical therapists and one trained medic in our crew that weekend. One of the therapists was a young lady that Nick was into. The other two were guys.\n\nThe medic was extremely hot and a new addition to my masturbation fantasies. His name was Keon and he was the first black guy I'd ever hung out with. There was one black family in my hometown, but the kids were way younger than me.\n\nKeon was tall and muscular and the color of dark iced tea. His skin looked delicious. I wanted to lick him from head to toe. I also couldn't stop myself from thinking about what he might have in his pants. Was it true what they said? I thought about his dick constantly.",
        "Nick and the girl went back to our room and he texted me to give him at least an hour before I came back. Keon sensed that I'd been booted from my place for the evening and he asked me to go get some food with him.\n\nAt the small diner we ate big juicy burgers and amazing onion rings while talking about a hundred different topics. He had started working on the tour just this year, so he didn't have much experience with cowboy culture yet and I was unfamiliar with his urban upbringing. We talked and laughed easily for several hours.\n\nWe walked into the lobby of the hotel and I stopped by a seating area to text Nick to see if the coast was clear yet. Before I could send a message, Keon stopped me with a hand on my arm.\n\n\"Why don't you just come back to my room?\"\n\n\"Sure, I guess I can give Nick some more time.\" I smiled, acting like I knew exactly what was happening in my room. I knew they were having sex, and I had seen porn, but I had no experiences myself other than my one blow job.\n\n\"Or maybe you can just stay the night. I have my own room.\" He said as he pushed the button in the elevator. The doors slid closed and I fought down my panic and excitement.\n\nI kept telling myself he was just being nice and had a second, unoccupied bed in his room that he would let me use so his friend and mine could have an undisturbed sex romp all night if they wanted.\n\nHe opened his room door and led me inside. The first thing I saw was the single queen sized bed. The second thing I noticed was Keon watching me process the situation. He had asked me to stay the night. Or offered really, not asked.\n\n\"Rhett, are you alright?\" Keon asked, bringing me out of my thoughts.\n\n\"Yeah. I'm good.\" I brushed it off and sat in the chair by the sliding glass door to the balcony.\n\nKeon sat on the corner of the bed. In this room, he looked massive. He was about six feet tall and broad. He had big, strong arms and thick legs. He had a little bit of a tummy that I thought made him look even hotter. He was all man. A big, solid, beautiful man.\n\n\"Have I read you wrong, Rhett?\" He asked as one of his hands ran over the blankets, almost like an invitation.\n\n\"What? What do you mean?\"\n\n\"Do you like men?\" Keon asked bluntly.\n\nMy eyes got wide and I felt panic rising in my blood as my heart pounded triple time. I tried to think what to say but I couldn't form words as my fears started to crash over me.\n\n\"Hey, Rhett, it's okay. I'm not going to do anything to you.\" He looked concerned as he leaned forward.\n\n\"I wasn't worried that you would.\" I managed to say. He seemed like an incredible guy and I didn't want him to think I was afraid of him. I was terrified by the situation, but I was comfortable with the man. It was an odd combination of feelings.\n\n\"Okay, good. You don't have to answer. I didn't mean to make you uncomfortable, I swear.\" He looked gentle and I wanted to hug him for some reason, but I sat frozen in my chair.\n\n\"I know. You must be used to people talking about those kinds of things. No one talks about it where I'm from.\" I mumbled it a bit as I looked at the carpet, trying to avoid his warm chocolate gaze.\n\n\"You're safe with me, you know? I'm sorry if I assumed something I shouldn't have. You can talk to me about anything if you want.\"\n\nI looked back up at him and I focused on his dark eyes. I wanted to tell him all the things that I'd never told anyone else. He felt safe somehow. I might have been delusional to think that, but I did.\n\nHe must have sensed me relaxing because he smiled at me and asked if I wanted a drink or anything. I asked for water and he handed me a bottle from the mini fridge.\n\n\"Did someone tell you that I liked......guys?\" I asked while staring at the bottle cap in my hand.\n\n\"No, no one told me anything. I just got a vibe from you. Especially at the diner. It kind of felt like a date.\"\n\nI looked back up at him. Had I been on my first date? What the fuck? \"What kind of vibe?\" I asked that instead of asking what I really wanted to know about our \"date\".\n\n\"You know, I thought you were gay. Are you?\" He was clearly trying to be cautious, but I'm sure he also just wanted a clear answer.\n\nMy mind raced with things to say but none of them would come out of my mouth as words. I watched his face and he seemed to beckon me forward without a word or movement. I found myself standing and stepping towards him.\n\nI stood between his large legs, which were spread over the corner of the bed. He looked at my face as I came to a stop.\n\n\"I want to touch you, Rhett. I want to make you feel so good.\" His words floated over my skin, making my body vibrate with nerves and need.\n\n\"Touch me, Keon. I want you to.\"\n\nHe raised one large hand and cupped my cheek. His eyes were tender and his skin was so warm. He smelled like spicy cologne and pure masculinity. It was intoxicating.\n\n\"Have you ever been worshipped by a man, Rhett?\" He asked softly as he ran his hand down my neck and into my long, shaggy blonde hair. He reached for my cowboy hat and lifted it off my head.\n\nI took my hat from him and set it down on the table behind me and turned back into him. He scooted closer to the edge so our bodies were just an inch apart. I shook my head no, answering his question.\n\n\"I want to be the first then. You are so fucking sexy, cowboy. Can I make you feel good?\" His voice was like velvet and my body reacted to him immediately.\n\nI nodded and in a flash his arms came around me and he stood, lifting me off the ground. I held onto his shoulders as he turned around and laid me back onto the bed. I couldn't help but smile at the action. I felt giddy with excited nerves.\n\nHe whispered words of praise and promises to pleasure me as he pulled my boots off. He reached for my belt and undid my pants and peeled them off my legs. I unbuttoned my shirt and pulled it off and then I laid back again in nothing but my boxers.\n\nHe stood up straight and looked down at my exposed body. He licked his lips like he was looking at a delicious dessert as he undressed himself.\n\nHe pulled his shirt over his head exposing his large broad chest, which had a sprinkling of black curly hair between his pecs. He undid his pants and let them fall to the floor. He climbed onto the bed and laid alongside me.\n\nHe ran his hand over my thin, pale, hairless chest until his big fingers brushed the waistband of my underwear. He leaned over me and kissed my right nipple and then the left one. He ran his tongue over my skin.\n\n\"That feels good.\"\n\n\"I want you to feel amazing.\" Keon said it as he leaned closer and started to kiss and suck at my neck. I let my head fall back, exposing my throat to him.\n\nHis big hands explored my lean body as he started to kiss my jawline. He pulled back and looked at me. \"Have you ever been kissed?\"\n\nI nodded my head. \"It was a girl though.\"\n\n\"So this is going to be your first real kiss, huh? Your lips have been driving me crazy since Nick introduced us. Are you ready? It's going to be life changing.\"\n\nI nodded to indicate I was ready even though I was nervous as hell. I was ready to be kissed and touched by this beautiful man. It had been seven years since I'd figured out I was into guys. And now I was going to kiss a man for the first time.\n\nHis lips softly touched mine at first. I let instinct lead me and I kissed him back. With that small encouragement, he started to kiss me harder, more passionately. His tongue ran along my bottom lip and then darted between my teeth to tangle with mine.\n\nI sucked his tongue which made him groan into my mouth. That sound made my body start to throb. As if he could read me, his hand found my erection still within my boxers. He ran his open palm over my shaft while we continued to tongue kiss.\n\nHe left my lips and kissed his way down my whole body until his mouth was hovering over my crotch. He made eye contact and I gave him my silent permission to proceed.\n\nHe sat up and pulled my boxers off and tossed them aside. My erection bobbed around and then settled on my abdomen, getting harder by the second.\n\n\"Damn, that's more than I was expecting.\" Keon said as he looked at my hard cock. His eyes came back to my face and he smiled at me in a way that made me nearly dizzy. He was so beautiful.\n\nHis hand lightly closed around me and I hissed out my breath that I didn't realize I'd been holding. I thought about how he looked at me with awe and his comment about my size. I was so glad he liked my dick.\n\nI was a small guy in general, but the last month on the road had given me a confidence I'd never had before. The bunnies loved me, which was odd and unwanted, but still encouraging.\n\nI was thin and shorter than average men and pale skinned. My shaggy blonde hair curled around my neck and my cowboy hat. My eyes were light brown with copper flecks. My smile was big and white and my lips were full. Girls always complimented my lips and wished they had them themselves.\n\nI had a thatch of blonde hair on my lower abs and a light fuzz on my balls and in my crack. But my best feature in my opinion was my extra thick meat. I was eight inches long and over seven inches in circumference.\n\nKeon gripped my fat shaft and pumped his big hand up and down several times, making my body quake with need. Then I felt the tip of his tongue exploring the hole and underside of my head. He closed his mouth around the whole knob and I thought I'd die, it was so amazing.\n\nHe started to suck my dick, occasionally pulling away to lick and suck my furry balls. It felt a billion times better than when that girl had sucked me off in New York. I tried to say something, anything, but I was too pleasured to think clearly.\n\n\"Roll over Rhett, I want to lick your asshole. On your knees.\" It was nearly a command and I loved it. I quickly rolled over and pushed up onto my hands and knees.\n\nKeon ran his big hands over my ass and up my lower back. He pushed my shoulders down, so my chest was on the mattress and my ass was in the air, spread wide. I felt his fingers trail down my crack, lightly brushing my sensitive skin.\n\n\"Oh god.\" I moaned into the blankets. I tried to spread myself open even further as he slowly stroked my taint up to my hole.\n\n\"You like that, cowboy?\" His voice sounded husky.\n\n\"Yes, Keon, it feels amazing.\" I answered him.\n\nI felt him moving on the bed, but I stayed in my exposed position. Soon I felt his hot breath on my ass cheek and then his tongue licked over the curve of my upper thigh where it met my glute. He licked my taint and fondled my erection and low hanging sack.\n\nHis tongue ran up from my taint and licked over my puckered hole one time. I heard myself moan when he didn't immediately do it a second time. Before I could beg him to continue, he was buried in my cheeks with his tongue flicking my hole and pushing against the tight ring.\n\n\"Keon!\" I yelled out, muffled by the pillow as he started to tongue fuck me with his wet, pointed tip. It felt like heaven.\n\n\"Can I finger your hole?\" He asked between his bursts of tongue flicks.\n\n\"Yes, god yes.\" My voice sounded oddly different as the words left my mouth but I didn't care. I wanted him to keep touching me in all the ways I'd imagined a man touching me.\n\nHe kept eating my ass and slowly stroking my cock and balls. When his mouth finally pulled away, I felt his large, strong hands on my ass cheeks again, spreading them wide. And then the tip of his index finger was pressed to my tight hole, with a constant, pleasurable pressure.\n\nHe spit on my crack right above my opening and used his finger to spread it around, making my hole even wetter than it had been from his mouth. With his finger covered in saliva, he pushed it in up to his first knuckle, just the tip inside me.\n\nIt felt weird, but exciting. It didn't hurt, so I relaxed my muscles and sunk back into the bedding. He read my body and pushed his thick finger deeper into my ass. Soon enough he was as deep as he could go. He started to pull his finger back out.\n\n\"No!\" I protested. I wanted more. I needed more.\n\n\"Don't worry, I'm not even close to being done back here. Once you're loosened up a bit more I'm going to add a second finger. Your pink hole is so fucking sexy. Fuck, I wish you could see it.\"\n\n\"Me too.\" I moaned it as he put his finger back inside me, pushing deeper in one steady move.\n\nHe used his finger on me until I thought I'd cum. It was incredible. Before long he had a second finger inside me, pumping both in and out of my hole at a pace that made me see stars.\n\n\"I want to suck your thick cock while I fuck your ass with my fingers. Crawl over here.\" He said it as he lay himself back on the pillows.\n\nI climbed over his chest until I was practically sitting on his pecs with my dick right in his face. He opened his mouth and pulled me close, swallowing my thick member down.\n\nWith my erection in his throat, he used his big hands to shift me up and forward so my ass was off his chest. He pushed his two thick fingers into me while he sucked my cock harder.\n\nHe fucked my ass with his fingers and sucked my hard erection while I thrashed above him, fighting for more contact and more pressure. I wanted more. I needed to cum badly. I gripped the headboard so tightly I thought I'd yank it off the wall.\n\nSoon I was spilling my seed in his hot mouth. He drank it down greedily while he continued to finger fuck my tight ass. I felt my hole gripping him in time with my spurts of semen shooting out, spraying his throat and tongue. My body trembled until I collapsed against him, completely limp.\n\nHis arms wrapped around me and he held me close, tightly enough to feel safe and wanted, but not trapped. I laid in his arms for several minutes until my body started to feel normal again.\n\nI rolled off him and slid down onto the bed, pressed along the side of his big body. His arm was around my shoulders, holding me tenderly. Our legs tangled together.\n\nAfter a while I sat up and looked at his face. He looked back at me, so sweetly. I bent towards him and kissed his soft lips. When I pulled back I spoke. \"I want to touch you. Let me make you cum.\"\n\nHis one eyebrow went up, but then he smirked. \"If you want to make me cum, I'm not going to stop you.\"\n\nI smiled and grabbed at his underwear. I pulled them down his thick legs and tried not to gawk when I saw how true that stereotype about black men was about Keon. He was longer than me, probably nine inches. He was thick, but maybe not quite as thick as me.\n\nI reached for him and touched him gently. I wrapped my hand around it and revelled in the silky smoothness of his hard length. His dark brown skin was even darker here and his head was a dark reddish, purple brown color that made him look even more virile somehow.\n\nI bent over him and licked his sticky little slit. His pre-cum was delicious and I lapped at him until I'd gotten every little bit. I sucked his head into my mouth and stroked his shaft with my hands.\n\nI realized as I started to find my rhythm that I had never touched a cock that wasn't mine before this. And now I had a certified BBC in my hands and mouth. The thought excited me and I moved faster.\n\n\"Rhett, that's so good. So fucking good.\" His eyes were closed and his hands were gripping the blankets on both sides of his body. His encouragement lit a hotter fire in me.\n\nI sucked harder, stroked faster and made it wetter. The sloppy sounds I was making as I sucked him and his soft, low moans combined and floated around the room.\n\n\"Rhett! I'm so close. If you don't want to swallow this load you better stop.\"\n\nI wanted his load. I didn't stop. I kept the pace and I sucked like my life depended on it. His hips bucked up off the bed as his orgasm overtook his whole body.\n\nI kept sucking and stroking as I felt his cum fill my mouth. I concentrated on swallowing so I didn't drown in his giant release. His body shuddered and he fell back into the pillows. I still sucked and stroked, just a little gentler now.\n\n\"Oh my god, cowboy. That feels so fucking good. Don't stop.\"\n\nI did as he requested. I didn't stop. He stayed hard in my mouth and hand. He was breathing hard again in a minute or two as his second climax started to build.\n\n\"Jesus, Rhett! I'm going to cum again. Holy fuck!\" And then his hips went rigid a second time and his seed filled my mouth yet again. It seemed as big as the first load, which also seemed impossible. I swallowed it down.\n\nAfter the second orgasm he was panting and he pulled me up into his arms, to lay on his chest. Neither of us said anything while he calmed down back to normal breathing.\n\n\"Thank you.\" I said it before I realized it.\n\n\"No. Thank you, Rhett. Thank you for letting me give you your first experience with a guy. And for that incredible blow job. Holy fuck that was amazing.\" He smiled and kissed the top of my head.\n\nSoon we both started to drift off to sleep, but I was freezing. My front was against Keon's body and was nice and warm. The rest of me was ice cold in my current state of nakedness covered in drying sweat.\n\nI rolled away to the edge of the bed and went into the bathroom. Before I finished pissing, I felt Keon's warmth come up behind me. He kissed the back of my neck as I finished. We traded places and he pissed into the toilet in the dark.\n\nWe went back to bed together and crawled under the blankets. I slept beside him all night. It was the most perfect night of my life up until that point. I was blissfully happy as I fell asleep.\n\nHe kissed me nearly senseless in the morning. I showered and got dressed in my own room and then I checked out and found Skip so we could get on the road, right on time.\n\nAt my fifth, and final invitational event, I had the best event of my career. I rode in both of the regular rounds and I qualified for the final go, where the top fifteen guys rode to win the whole event and the big purse.\n\nI drafted a fairly easy bull in the final go, which is all relative. Even the easiest bull in the last round is usually harder than the best bull in the first two rounds. And to my extreme delight, I made it to the buzzer! I got a score added to my total and I placed fourth at the event!\n\nI took home a big check and I moved into 30<sup>th</sup> place in the top 45, easily qualifying to stay on tour. I had officially turned pro. I had arrived. I had also had my first gay sexual experience and I was feeling more comfortable in my own skin. As JB Mauney often said, I felt eight feet tall.\n\nAll I could think about now was going home. The tour was going to keep trucking along for another month and half before we had a weekend off for Easter. I had money in my pocket now, so I flew home between my big fourth place finish at that event and the upcoming sixth event the next weekend.\n\nMonday afternoon I landed in Billings and found my mom and stepdad at the arrivals lane. They drove me home, chatting for the whole five hours. I couldn't wait to get to grandpa's ranch, climb in my old truck and ride around in silence for a while.\n\nMy daddy was at grandpa's when I got home. The two of them about crushed my ribs with their bear hugs. They were so proud of me for fulfilling my bull riding dreams that neither of them had managed to do for themselves.\n\nAfter they finally headed home or to bed, I texted Cody that I was free. He was going to meet me at our spot by the river. I drove down the familiar dirt roads, windows down, even in the cold late winter air. It smelled and felt like home.\n\nAt the old hunting cabin on the river, I found Cody building a fire in the rusty pot belly stove we'd dragged out here years ago. He jumped up and hugged me, clapping me on the back hard.\n\n\"Don't break me. I need to go back in a few days, you know.\"\n\n\"If you can ride Jailbird in the short round, you can handle my hug, asshole.\" He smiled at me as he pulled away. I knew he was just as proud of me as my family was. I always felt closer to Cody and Michael than any of my real family.",
        "\"Where's Michael? Hailey got him locked up?\" I asked as I sat down on a tree stump we used as a chair in the dilapidated abandoned cabin.\n\nCody sat on an overturned bucket. \"Yep. I haven't seen him in two weeks.\"\n\n\"Are you serious? Two weeks?\"\n\n\"Yes, and it sucks. You're gone and Michael is whipped all of a sudden. It's so fucking lonely in this run down piece of shit town.\"\n\n\"What the fuck is her problem? She knew who she was dating when this all started. Michael is part of us. We're a package deal.\"\n\n\"I guess she thinks pussy is a fair trade off for him.\"\n\n\"Like Michael Gomez couldn't get pussy from any girl in the whole fucking state and the southern half of Saskatchewan, if he wanted it. What's so special about Hailey's?\" I was getting angry.\n\n\"Nothing. What's so special about any pussy?\" Cody said.\n\n\"No pussy is worth ditching your best friends for. Imagine when they have a kid. She'll probably make him move to South Dakota.\"\n\n\"I don't even want to think about that. Let's talk about something else. Fuck Hailey and Michael. What about you? Are you getting any action on the road?\" Cody looked more apprehensive than curious when he asked that.\n\n\"A little. I've gotten a few blow jobs.\" I admitted. I was both ashamed and proud. I wanted to brag a little and tell him all about it. I wanted him to be happy for me.\n\nBut the best sexual encounter I'd had was with a large black man. That was something I wasn't ashamed of, but I felt like Cody would freak out if he knew I was gay. And that made me feel ashamed.\n\n\"Really? How many is a few?\" He seemed upset. Maybe he was jealous since he wasn't getting any.\n\n\"Two. Just two.\" I looked at the fire.\n\n\"From the same girl?\" Cody asked, now staring into the fire, too.\n\n\"No.\" I wanted to add more, but I bit my tongue instead.\n\n\"You found two different girls to suck your dick? In five weeks?\" It seemed like he didn't believe me. I was confused.\n\n\"Skip arranged the first one. It was like a welcoming gift or something. And the second time, it was almost like a real date, with dinner and stuff before we ended up in bed.\"\n\n\"Did you fuck her?\"\n\nI shook my head no. \"Just a blow job. Really.\" I left out the fact that the girl was actually a guy and he had finger fucked and eaten my ass and I had sucked his cock until he came two times. That was unnecessary detail.\n\n\"How was it?\" He seemed sad again. It must have been jealousy, and it made me feel bad. I never wanted to hurt Cody in any way.\n\n\"I can't lie, they were both good. The second one was better. Probably because I was more relaxed the second time.\" I offered in response.\n\nHe just nodded as he watched the fire. \"Have you met anyone?\" I finally asked, trying to get this conversation back on track.\n\n\"No. I still feel the same way about every person in this hell hole as I did before you left.\" He sounded bitter as he spat out the last few words......\"you left\".\n\n\"Are you angry with me?\" I asked bluntly.\n\n\"What? No. Why do you ask that?\"\n\n\"You seem mad or upset. What's going on with you, Cody? Talk to me.\"\n\n\"Nothing's going on with me, and maybe that's the problem. I didn't realize how much I hate this place until both of my best friends moved on with their lives.\" He huffed out a huge breath.\n\n\"I'm sorry, Cody. I didn't mean to abandon you. You know that.\" I wanted to say so much more but I felt lost.\n\n\"I know. I do know. I'm not mad at you. Especially not you. You're talented and you deserve everything you've earned. I'm just frustrated and lonely. I shouldn't take it out on you when we only have a few days.\"\n\nWe changed the subject and the conversation eventually got lighter and I told him stories about being on the road in the big bad modern world. He told me about the town gossip, which wasn't really different from before. Nothing happened in this place.\n\nWe headed home after dousing the fire for the night. Cody followed me in his own truck, as we made our way back to the neighboring family ranches. He honked and waved as I turned into my driveway and he continued down the road towards home.\n\nCody and I hung out on Tuesday and Wednesday after he was done with work each day. On Thursday, Cody took the day off and drove me to the airport. He had to drive back five hours alone and I hated that.\n\nMichael should have been there. I didn't get to see him while I was in town and Cody was almost more upset about it than I was. I understood why. I wanted to stay for Cody, but I had to go back. This was what I'd strived for my whole life.\n\nAt the sixth event, I broke my pinky and ring finger on my free hand when I got bucked off my first bull. I hit the metal gate with the side of my hand and busted them up pretty good.\n\nBack in the medical room, Keon was the one to bandage me up. He wanted to take me to the hospital for an x-ray, but I refused. I would miss the second round if I left to go to the emergency room. I'd go after the event, but not before. Keon got angry about it, but I didn't care.\n\nI heard his boss talking to him afterwards. He was explaining that bull riders were stubborn, gritty cowboys that wouldn't go to the hospital unless it was deemed medically necessary. And the head doctor of the medical team understood the sport and unless someone was in danger, he allowed riders to make their own choices, which was always to continue in the event.\n\nIf you don't ride, you don't win money and points and then you don't get to stay on tour. It was as simple as that.\n\nI rode in the second round with a big bandage on my free hand and I got a score. It wasn't enough to get into the short go, but I got a check and I stayed safely ensconced in the top 45.\n\nI tried to talk to Keon after the event but he didn't want anything to do with me. I had hoped he'd understand that before and after an event, I was Rhett Olsen, nice, shy guy. But during the event, I was a driven, stubborn jackass just like all the other riders. But he didn't understand at all. He wouldn't even try.\n\nKeon and I never hooked up or hung out again after that. I was sad about it because he was the only person I was out to. If I wanted to hook up with someone else, I had to go through all of that bullshit again. Keon would have been convenient, but sadly off the table now.\n\nI was at another hotel room party that night and some girls were there. I thought about letting one of them blow me, but since I'd finally been with a guy, I really couldn't stomach having any sexual encounters with girls.\n\nMy hand was painful. My mood was dark due to the fight with Keon. I was still thinking about Cody being upset at home alone. I was horny as hell with no one to help. And my free hand with two broken fingers also happened to be my masturbating hand. Damn it all.\n\nOnce I started considering drinking away my problems, I knew it was time to call it a night. I took some Tylenol and tossed and turned until dawn. I was actually happy to see Skip in the morning. He was going to get me out of here. Anywhere else had to be better than this.\n\nWe arrived at the next city just a few hours later, so there were several days to kill. I gave in and went to a walk-in clinic. They were shocked at my breaks and that I'd managed several days without pain meds.\n\nThey recommended surgery with pins in the bones, but I refused. They splint and cast them, but the bandaging was so heavy it was going to cause me to be off balance when I rode. I told them they needed to redo it, making it lighter or I'd take it off as soon as I left the clinic.\n\nThey did give me a smaller, lighter cast after several more arguments. And they wrote me a prescription for some pain killers. Once I got back to the truck, Skip had me take a pill and then lay down in the bed. I slept for hours. I felt better afterwards. My hand still hurt, but it was more stable now, so it was fine.\n\nFriday came and we were able to check into the hotel rooms. I caught up with Nick and a few of the other guys. We decided to go out that night since the event started tomorrow night, instead in the afternoon. We went to a honky tonk bar across from the hotel that wasn't checking IDs.\n\nLots of riders were there, clearly having had the same idea. We sat and watched the regular patrons try to ride the mechanical bull in the middle of the bar. It was funny as hell.\n\nNone of us cowboys got on that mechanical contraption. First, if you got bucked off, the guys would never let you live it down. And second, getting an injury on a bar amusement ride that could end your season would be the worst case scenario.\n\nNick was at the bar hitting on three girls at once when I got approached at our table where I was sitting alone. An older man, maybe Skip's age, walked up and asked how I'd hurt my hand.\n\n\"I got bucked off a bull.\" I said. His eyes glanced towards the mechanical bull as it spun and flung a drunk girl onto the mat. \"A real bull, not that thing.\"\n\n\"You're a rodeo rider?\" He asked, sliding onto one of the bar stools at my table.\n\n\"No, just a bull rider. Rodeo cowboys ride horses and do other events like roping and barrel racing and stuff.\"\n\nWe chatted for a few more minutes. I found out he was a businessman and he was in town for the night. Flynn was his name and he was 39. He invited me to go back to his hotel room.\n\nI was taken off guard. He was the second guy to just approach me and proposition me without me indicating that I was gay and looking for company. I didn't understand how that happened, but I didn't feel like asking this guy about it either.\n\nBut I did feel like going back to his room. I told Nick I was going back to the hotel, but I wouldn't be in the room until later. I met Flynn in front of the bar and we walked across the street to the hotel together.\n\nIn his room, Flynn seemed to relax and his smile was really beautiful when he wasn't forcing it, like he had been in public. He approached me and ran his hands down my arms. I felt nervous, but not nearly as nervous as I expected.\n\nWe kissed and pulled at each other's clothing until we were both down to our boxers. He pushed me back onto the bed. I watched him move around the room. He grabbed condoms and lube out of his bag.\n\nI noticed his wedding ring laying on the dresser. I nearly asked about it, but it didn't matter. This was a one night stand and nothing more. As long as we were safe, I didn't care what his life was outside of this room on this one particular night.\n\nFlynn climbed over me and kissed me hard. He pulled back and pulled my underwear off. His eyes got big when he saw my heavy, thick erection laying between my legs.\n\nHe pulled his own underwear off. He was small and flaccid, but I didn't care as his mouth closed over the head of my cock. He sucked me for a while.\n\n\"I want you to fuck me with your massive cock. How do you want me?\" Flynn looked at me expectantly.\n\nI quickly thought it through and I had him get on his hands and knees. I figured this way I didn't have to look at his face the whole time and it might be less obvious if I didn't quite know what I was doing. I had never fucked a guy. But I wanted to.\n\nFlynn got on all fours and spread his legs and got into a frog-like position. It made his ass the right height for me to fuck from behind while standing at the end of the bed.\n\nI stroked my erection as he backed up to the edge and spread his sexy frog legs for me. I slipped a condom on and then I pulled his hips back a little further, positioning him just right. I squirted lube on my cock and some in his hairy ass crack.\n\nI rubbed my fingers up and down his crack from above his little starfish all the way down to his big balls. His dick was still tiny and limp. Mine was raging and ready to go.\n\nI lined myself up and slowly pushed the wide head of my thick manhood into him. He gasped as his ring snapped tight around my shaft after the swollen head had passed through.\n\n\"Fuck! You're huge! Give me more!\" He was frantic and nearly screaming.\n\nI slowly pushed further in. He was so tight. It was tighter than I'd imagined. I'd never had any encounter with an actual ass hole until now, so it was all new to me. I pulled back out a little and squirted more lube where our bodies were joined.\n\nHis hole was so stretched with me inside him, it looked incredible and made my whole body react just looking at it. I needed to fuck him hard right now. I pushed forward. When I met resistance I stopped pushing. I felt him relax and then I pushed in further.\n\nWe repeated that process several times until I was nearly eight full inches inside him. He was moaning and groaning and he pushed his body back onto me as hard as he could. He was loving this. He took my whole huge cock and wanted more.\n\nI pulled halfway out and pushed back in, more forcefully than before and all in one thrust. He moaned out a long, drawn out \"yes\" once I stabbed into his guts with my big dick.\n\nI pulled out again, a bit further this time and then I thrust into him harder, burying my whole shaft in his gorgeously stretched hole. He babbled encouragement and random swear words and prayers to his god while I found a nice pace and started really fucking his ass good and hard.\n\nIt started to feel incredible as I went faster, chasing the sensations that shot through me, all emanating from my huge erection as I used it to destroy this married man's tight little entrance. I pounded into him, nearly mindless with the building pleasure.\n\n\"Fuck! Flynn, I'm going to cum. FUCK!\" I yelled it as I felt my balls tightening.\n\n\"Harder! Fuck me harder!\" Flynn screamed so loudly that I'm sure other hotel guests heard him. But I did what he asked me to. I fucked his poor abused hole even harder.\n\nI gripped his one hip with my unbroken hand as I became a wild animal, using his hot tightness for my own desires. It felt like I thrust into him about a hundred times a second.\n\n\"I'm coming!\" I pushed harder and faster and then I pushed him all the way down onto the bed. I fell forward and buried myself as deeply as possible while I filled the condom with my massive ejaculation.\n\nAs I lay on top of him panting and gasping for air, I felt him pushing back against me, lifting my whole body off the bed. I was basically back in a standing position when he pulled away and my cock slipped out of his gaping ass.\n\nHe spun around and dropped to his knees in front of me. He pulled the condom off and sucked my cum covered cock clean. He licked my whole crotch, sucking my cum, lube and sweat out of my blonde ball hair until I was spotless. He seemed to enjoy doing it as much as he enjoyed me destroying him from behind.\n\nI noticed he was still completely limp. I didn't know if I should try to do something about that, but he seemed content to get fucked and then suck me clean.\n\nI got dressed and headed back to my own room shortly after that. Between my release and a pain pill, I was able to sleep through the night and awake refreshed the next day.\n\nEverything went downhill from there. I didn't get a ride at this event and my rank slipped into the danger zone. I left the event in 43<sup>rd</sup> overall. Only the top 45 stayed on tour, so I needed to save myself or else.\n\nThat night I called Cody. I was so upset and he always knew how to talk me through it. Five minutes into the call I burst into tears and I couldn't stop crying for the longest time. By the time I stopped crying, Cody was crying. It was a weird call and I missed him more than ever.\n\n\"I can't wait for you to come home, Rhett. I'm so fucking lonely.\"\n\nHis words stuck in my head for days afterwards. I texted him everyday. I called him every few days. We both counted down the days until the Easter break.\n\nThe night before the last event until the break, I was out to eat with a huge group of cowboys and crew. I felt strange because I knew I'd miss them, even if it was just a few weeks before we'd be back on tour. But I missed Cody so much more.\n\nI felt torn that no matter where I was, I'd be missing the other part of my world. The two parts, home and the tour, were always going to be two separate things. They couldn't ever be one. The best it might get is if Cody could come to the event that was the closest to home and be in the stands to watch me, like he had my whole life before I went pro.\n\nOver the next few days the event rolled on and I got a ride in both rounds, but it still wasn't enough to crack the top 15 for the final round. I placed 17<sup>th</sup> at the event and I sat securely at 36<sup>th</sup> in the overall standings. And now I was finally going home to Cody.\n\nHe met me at the airport and we hugged on the curb longer and harder than ever before. We both had tears in our eyes by the time we got back into the truck and headed north towards the border. Five hours.\n\nMy flight was a late afternoon arrival and it was dark by the time we got about halfway home. We made the rest of the trip in the pitch black night of rural northern Montana. It was us and a trillion stars in our big sky.\n\nWe talked about everything in the dark. He told me that Hailey was pregnant. I could tell he was extremely upset about it. It was the final nail in the coffin of our group of three with Michael. He was now lost to us. That's how it felt. Poor Cody was stuck with it all the time where I at least got to leave it behind when I was on tour.\n\nCody asked if I'd gotten with any more girls since he'd last seen me. I told him I hadn't. I hadn't been with any girls. I'd been with Flynn but I couldn't tell him that. I could tell he didn't really want to hear the details, even if I avoided saying it was a guy, so I just didn't say anything.\n\nI did think about Flynn and his wedding ring though. I felt guilty. Not only had he most likely cheated on someone at home with me, but I felt like I had cheated too. I felt like I'd betrayed Cody somehow.\n\nI didn't need to avoid having a sex life just because my best friend wasn't having sex. That didn't even make sense. And yet I felt so bad. I felt like I cheated on him. It was confusing.\n\n\"Rhett.\"\n\n\"What?\"\n\n\"Where'd you go? I was talking to you for like thirty seconds and you didn't hear me.\"\n\n\"I'm sorry. I must be more tired than I thought. I'll snap out of it. I'm here now, I promise.\"\n\nI saw him shake his head and smile in the darkness. The last hour went by with easy conversation and laughter like normal. It felt nice. I felt really content. At least until we arrived at the family ranch.\n\nI didn't want to get out of his truck. I wanted him to come in with me. Or I could go home with him. I just wanted him to stay near me, even as I slept. My stomach twisted as we said goodnight. He seemed off as well. It was really strange.\n\nI unlocked the side door and waved at Cody as he pulled out of the driveway. I climbed the stairs to my room and flopped onto my bed. I finally got up and took a shower and climbed under the covers and tried to sleep.\n\nI was exhausted but I felt so out of sorts. I wanted to call Cody. I picked up my phone. It was two o'clock in the morning. I shouldn't bother him. He drove ten hours today. I'd just talk to him tomorrow. Or later today, actually.\n\nI still couldn't sleep. My hand found my soft dick and I glanced at my favorite poster. I thought about his blue grey eyes even though I couldn't see them in the dark. It was slow going, which is unusual for a teenage guy regardless of the situation. I couldn't get hard for JB Mauney and that made me even more unhappy and uncomfortable.\n\nI tried to think about Flynn. The first and only guy I'd physically fucked. But all that kept popping into my mind was his tiny limp, wrinkled skin flap that was supposed to be a dick. That definitely didn't help me get hard.\n\nI gave up and stopped trying to masturbate. I finally reached for the lamp and sat up. I looked around my room from my place in my bed. My room felt like home but it looked like a kids room to me now. It had only been a couple of months but I felt more grown up. Independent.",
        "I was never home but I wished I had my own place when I was home. I imagined coming home to my own empty house. Setting my bags down and stretching out on my own couch. Using my shower and going to bed in my own bed. With Cody by my side.\n\nWhat? Why had I had that thought? I was picturing being alone, in my own place. And Cody was my best friend, not my lover.\n\nI had never really thought about Cody like that. Okay, that's not true at all. I had a crush on him on and off my whole childhood. I never did anything about it and I always knew it wasn't worth losing my best friend over something that was impossible anyway.\n\nIn the last several years I had studiously avoided thinking about Cody and anything sexual at the same time. I also had the same rule about Michael. I didn't cross the line, in my mind, with my friends. I would stare at my poster and focus on JB.\n\nMy thoughts tonight must be mixed up by all the other stuff going on. Us missing each other. Michael and Hailey getting pregnant. Me being on the road. Being in the closet. Feeling the need for independence and companionship all at once. Being overly tired and overly emotional. Being horny but not able to get myself off. My painful fucking hand.\n\nI turned the light off and laid back down. I stared at the ceiling until my eyes were too heavy to keep open. I felt myself slipping into the fog but then Cody was back in my thoughts, invading my sleep bubble. What did he want from me right now? Why wouldn't he let me sleep?\n\nI tossed and turned a few more times. I considered turning the damn light back on. I just laid in the dark instead. I felt like crying all of a sudden. And then Cody crossed my mind again.\n\n\"Damn you Cody. What the fuck? Why can't I get you out of my thoughts for just an hour? I need to sleep. I need to get off. Unless you're planning on helping with that, get the fuck out of my head.\" I whispered my thoughts into the dark.\n\nMy hand found my penis again but now I was starting to get hard. I stroked it, pulling on my shaft, imagining a mouth sucking me in. A soft, warm, wet mouth.\n\n\"Don't have anything more to say, Cody? Is that my cock in your mouth?\" I growled my innermost thoughts into the night as I yanked on my completely rigid erection. The more I tried to fight the sexual thoughts about him the more persistent they got.\n\nI gave into the fantasy and started jerking off in earnest while imaging fucking Cody's mouth and his ass. I imagined him fucking my ass and his hard cock in my mouth. I pumped my shaft harder.\n\n\"Oh god, Cody. Yes, fuck yes.\" I started to cum thinking about fucking my best friend. I came hard and I kept stroking myself until I'd squeezed out every last drop for him.\n\nI woke to the sound of my daddy calling my name. I got up and headed down the stairs, thinking about that independence again. He informed me I would be working on the ranch during my time off. I reminded him about my injury and he told me I was getting soft.\n\nThe whole day pissed me off. I thought about moving out nearly every second. I did my childhood chores even though I'd been gone for three months and they'd gotten done without me during all that time. Cody was also working and I just really needed to see him. My mind raced thinking about what I'd done the night before.\n\nFinally it was evening and both Cody and I were done with our responsibilities for the day. He came and picked me up as soon as he could. We headed into town.\n\nEven after masterbating to my highly sexual thoughts of him last night, it wasn't weird when we were together, even in my own mind. I was just content by his side.\n\n\"I need to get out of my grandpa's house. My daddy was there this morning before dawn to harass me out of bed. It pissed me off so much I nearly broke my other damn hand.\"\n\n\"I'm dying to move out, too. I hate that Michael isn't with us, but part of me understands why the people around here get shacked up at such a young age. It seems to be the best way to get instant independence. Like being married or pregnant or both makes you an adult in everyone's eyes.\" Cody had obviously been thinking about this for a long time.\n\n\"I know! It's so dumb. You knock up another eighteen year old and that makes you an adult? It's actually a totally stupid and immature thing to do. I will never understand. I'm glad I don't have to think about....\" I stopped before I outed myself as gay in my angry rant.\n\nI let out my breath in my exasperation. We both stayed quiet for the rest of the trip into town. We got to town and drove up and down the main street, looking for something to do and being seen.\n\n\"You're famous, you know.\" Cody said.\n\n\"Because I got on the tour?\" I asked. That had happened months ago.\n\n\"Well that and the fact that you've been doing pretty good so they've been showing all your rides on the TV broadcasts. Even the people that don't really know you, all seem to know you now. They ask me about you all the time.\"\n\n\"Does that make you famous adjacent?\" I joked with him.\n\n\"Fuck off, Rhett.\" He chuckled.\n\nWe fell into a nice comfy space with each other and cruising around town was fun, like it used to be. We ran across some old friends at the drive up and we got black cherry milkshakes.\n\nEven as the town closed down for the night and all the lights turned off, we didn't head home. We drove around until we ended up way out at the county fairgrounds.\n\nIt was abandoned this time of year and there was no one else around for miles. We sat in Cody's truck and stared at the arena through the fairground fence. It was dark and lonely now. But this was where it had all begun for me. My first several years of riding took place on that patch of dirt.\n\nIt was the place where my first championship was claimed. And my second. And my third. And my fourth. And several more after that. I'd won my way to the PBR at the state fairgrounds, but I got there from here.\n\nCody always understood. He supported my dream from the first time I'd been thrown from a mean old goat in my first mutton bustin' event when I was knee high to a grasshopper, as Grandpa always said. Cody was my best friend, my best supporter. I now wanted him to be more.\n\nThe Easter break ended way too soon and I left Cody behind again without having told him about my true feelings. I hated leaving him. I hated that I wanted him sexually. I felt like a terrible excuse for a best friend.\n\nThe next few events went by quickly. I got enough rides to keep a bit of money coming in and I kept myself in the top 45. At the second event after the break, Skip hurt his back.\n\nI had to learn to drive the truck even though I didn't have a CDL. I also had to step it up and do more of Skip's physical tasks. He'd been such a strength to me the whole tour, it was my chance to repay those favors.\n\nHe was getting better but it was weeks of seeing chiropractors along our route to the next event and then the next one. I had a few chances to fly home but I couldn't leave Skip and Cash in a lurch, so I didn't get to go to Montana.\n\nCody understood why I hadn't been able to come visit, but he was disappointed. When I only had two weeks left on tour before the summer hiatus I could sense a huge change in Cody. He seemed happy and like my old best friend. I couldn't wait to get home to him.\n\nI had nearly three months off. Skip went home to fully recover and the bulls went out to pasture. I flew into Billings and found Cody and Michael there to drive me home. I couldn't believe my eyes. Maybe this had something to do with Cody's better state of mind.\n\nOn the long trip home, Michael drove and I rode bitch in the middle, since I was the shortest. I really didn't mind because I got to sit right up against Cody the whole time. He smelled like home and happiness to me.\n\nI found out that Michael and Hailey had called it quits because it wasn't his baby! She only wanted to get him to marry her to cover her sexual encounter with our math teacher! It was a huge scandal in town and it had just occurred two days before I got back.\n\nMichael said he was upset the first day, but by the second day he was relieved that he'd dodged a huge bullet. He didn't have to get married and raise a kid. He could just be a kid.\n\nWhen we stopped for gas and food on the trip home, I went to the bathroom and it occurred to me that Cody had been happy for a few weeks, but Michael had only been freed from his relationship prison two days ago. What was Cody so happy about? Was it just that I was coming home?\n\nWhen we got back home, the guys took me straight to the lake. When I asked what was going on, they both acted weird. Once we got out of the truck and made our way down to the shore, everyone started screaming at us. It was a surprise party for me.\n\nAll my school friends and riding buddies from the local events crowded around me and welcomed me home and cheered all my success. It struck me that I was the first person to leave my town and become minorly famous. I was on TV nearly every weekend, after all.\n\nIt was crazy and loud, but I felt amazing. Cody and Michael stuck by my side most of the night. I heard lots of people congratulating Michael for escaping Hailey's trap, too. It was a night to celebrate. And I was with my two best friends for the first time in ages. And Cody looked so gorgeous.\n\nCody was three inches taller than me at five feet, ten inches. He had tan skin from working outside all day. His brown hair always had natural gold highlights from the sun. His body was strong and nicely muscled.\n\nI always noticed the worn spot on his jeans right over his big bulge. That lighter area of denim drew my eye and my fingers yearned to touch him. He had a few pairs of Wranglers that really hugged his ass. I wanted that ass under me so badly.\n\nAt the party, Cody was smiling and his big blue eyes sparkled in the firelight. Michael had always been the best looking one amongst us, but right now, Cody was the most handsome man I'd ever seen. He was glowing with youth and budding masculinity.\n\nWe finally headed home in the wee hours of the morning. Michael dropped us both off at Cody's truck at his ranch. We said goodnight to Michael and then Cody and I climbed into his truck so he could drive me to Grandpa's.\n\n\"You must be so tired. I hope you're not mad that we dragged you to a giant party all night.\" Cody said as we pulled onto the main road.\n\n\"I had a blast! I wouldn't trade tonight for anything. It was so good to be with you and Michael. It felt like old times.\" I yawned loudly after I spoke.\n\n\"Well, it's not over yet. I have another surprise for you.\" He looked straight ahead at the road as he said it.\n\n\"What kind of surprise?\" My mind raced with possibilities, but most of them were so far fetched and sexual that they couldn't possibly be right.\n\n\"You'll see.\" He said it as we turned into my driveway. Seeing as he brought me home, it couldn't be anything like my fantasies. But before I could dwell on it, he drove right past the house.\n\n\"Where are we going?\" We were driving down the back road that led to Grandpa's pole barn where he stored all the farming equipment for the rough winters.\n\nThere were also several old wooden barns out at this end of the ranch. The original house had been over here, so there was a well and electrical that Daddy and I had updated a few years ago to upgrade the pole barn to a real working garage for the tractors and such.\n\n\"Close your eyes please.\" Cody said.\n\n\"Why?\"\n\n\"Just do it. I said please.\"\n\n\"Fine.\" I closed my eyes and put my hands over them for good measure. We bumped along the road further into the darkness.\n\nWe finally stopped and he turned off his truck. \"Wait right there and keep your eyes covered.\" His truck door squealed and klunked as he got out.\n\nHe came around and opened my door. He gently helped me out until I was standing. He angled me to face in a particular direction.\n\n\"Okay, open your eyes.\" Cody said, with a clear smile in his voice.\n\nI opened my eyes and my mouth fell open. \"Oh my god! Cody! Did you do this?\" I snapped my head around and looked at him.\n\n\"Yep. My dad helped me with the big stuff and your grandpa let me use his tools and any stuff I found on the ranch. Do you like it?\"\n\n\"Cody! It's amazing!\" I stepped up to him and hugged him tightly, trying not to cry.\n\n\"C'mon, let's go look at the inside.\" Cody said as we pulled away from our hug. I nodded and let him lead me to the door.\n\nWhen I was sixteen, I won my first big money purse at the junior events. I decided that I was going to buy myself an RV and fix it up to drive to all my competitions. I had a whole plan of going on the road. I would even use it when I went pro.\n\nI spent a thousand dollars on this 1967 Winnebago. It leaked and was half rusted out from sitting through countless Montana winters. The door was held closed with a bungee cord and it didn't run.\n\nMy daddy helped me haul it out here behind the pole barn so that we could work on it. I soon realized it was a bigger project than I could handle, especially while riding, working the ranch and going to school. And there it sat, abandoned behind the barn.\n\nBut now it looked totally different. There was sheet metal riveted along all the seams around the roof and edges. It was painted dark blue, the color I always talked about painting it.\n\nThe front windows had curtains in them and the door was replaced with a different one that actually closed securely. It looked completely livable. Cody opened the door and told me to go in.\n\nI stepped up and the first thing I noticed was the cold blast of air. We didn't have air conditioning in the house, we never had. This was amazing compared to the warm, slightly humid air outside.\n\n\"Air conditioning. I want to sleep in here.\" I said as I tried to comprehend what I was really looking at.\n\n\"That's the idea. It's your own place. It doesn't run and it won't move as it's hardwired into the barn's electrical and plumbing. You have a working bathroom back there, no tanks to empty.\"\n\nI turned back to Cody and I finally realized he'd given me one of my two biggest wishes. My independence here at home. My own place to sleep-in nice and late in the morning if I wanted. A place to have company, hopefully overnight company.\n\nI turned back to Cody and hugged him harder than before. This time I couldn't stop myself from crying. We stood between the kitchenette and the table that could be removed to make a convertible couch and bed area, just holding each other, with tears running down my face.\n\nIt felt like we clung to each other for hours. I finally pulled back and swiped away my tears. \"This is the most incredible thing anyone has ever done for me, Cody. I fucking love it.\"\n\n\"Good, I'm so glad. You deserve it. Check out the back.\" He pointed down the walkway.\n\nI opened the door to the shower and toilet combo and it was clean and bright with new faucets. I closed the door again and then I pulled back the curtain that hung in front of me. Behind it was a queen sized bed. It fit wall to wall and you climbed in from the foot of the mattress. It was bigger than what had been in here before.\n\n\"It's a brand new mattress. I bought that for you with my tax refund.\"\n\n\"Cody! You shouldn't spend your money on me. You crazy asshole.\" I was grinning as I sat down on the bed and looked at him still standing in the walkway. He stepped closer so that he was only a foot away from where I sat.\n\n\"I figured I'd probably crash here sometimes. You know, when you're gone. I can keep an eye on the place and get away from my parents at the same time.\" He seemed hopeful as he said it.\n\n\"Of course, it's more yours than mine anyway. I'm just happy if you let me crash here when I'm home.\" I joked, but I was completely serious about it.\n\n\"No, it's yours. I did this for you. I wanted to show you how much I care about you.\" He got quiet as he said it. His eyes looked innocent and beautiful when he looked at me. I wanted to kiss him so badly.\n\nI pushed myself back onto the bed and over to one side. I patted the space next to me. \"Come share it with me.\" It sounded huskier than expected as I said it. But he nodded and climbed into the bed.\n\n\"It is built for two.\" Cody said. My whole body reacted to that comment. Had he thought about that when he bought us this mattress? He had really bought it for us, not just me. That would be what I thought about every time I laid in this bed.\n\nWe lay side by side in the dim light in the bedroom area. The mattress was incredibly comfortable. Cody was so amazing. He was so important to me. I was in love with him, I finally admitted to myself. My heart twisted because I couldn't tell him.\n\n\"I should let you get some sleep, Rhett. I'll head home, but call me tomorrow and we'll go do something.\" He sat up and started scooting back towards the end of the bed and the walkway.\n\n\"Stay.\" It was the only word I could get out, but it was all I wanted. Stay with me Cody. Please!\n\nHe turned back to look at me. His eyes met mine and I felt sparks. Did he feel it? My eyes begged him to stay.\n\n\"I want to.\" He whispered it.\n\nI reached out and grabbed his hand. I wove our fingers together and pulled on his arm, beckoning him back up to the soft pillows. He crawled back to me, still holding my hand.\n\nHe laid down next to me and I rolled into him. Our arms were around each other and I rested my head in the hollow of his neck. We lay in each other's arms, not saying anything, just holding each other as close as possible.\n\nWe fell asleep like that and it was the best night of my whole life. Nothing happened, but I wanted to sleep like this, in his arms, every night for the rest of my life. I felt happy and safe and content.\n\nIn the morning, I woke first and I looked at Cody sleeping in my arms. I ran my fingers through his soft hair. I could smell his shampoo and his deodorant and cologne. It all mingled to make the scent of Cody that I craved whenever I wasn't with him.\n\nI was lost in my thoughts when his eyes opened and I didn't notice right away. He watched me as I raked his hair with my fingers gently, lovingly. I finally saw he was awake, but I didn't stop touching him.\n\nHe snuggled closer to me and closed his eyes again. \"That feels nice. You can do that all day.\" He whispered it into my shoulder.\n\n\"Okay, I will. You smell so good. Your hair is so soft.\" I leaned closer and kissed the crown of his head, taking a deep breath to inhale his scent even more.\n\nBefore I really realized how intimate our conversation was and that I'd kissed his head, he whispered words I never thought I'd hear him say.\n\n\"Kiss me, Rhett.\" He turned his head up to mine and I leaned right in and brought my lips down onto his.\n\nI felt the earth move beneath me. My stomach clenched and twisted with need and excitement. My mind felt blank and scared at the same time. But I pushed it all away and gently kissed Cody. He kissed me back.\n\nIt was soft and slow, both of us took our time and we didn't rush. We just savored each other's lips. His breath in my mouth felt like the thing I needed to live. His hands tightening around my torso, pulling me closer, thrilled me.\n\n\"I missed you so much.\" Cody said against my lips. It sounded desperate and like he might cry.\n\n\"I missed you, Cody. I need you.\" I answered him. It was true. I needed him in my life. In my bed. I needed our bodies to connect completely, but I wasn't going to move that fast. I didn't want him to freak out.\n\n\"Are you alright?\" Cody asked after we stopped kissing and just held each other close.\n\n\"I'm amazing. What about you? I'm more worried about you. Are you weirded out?\"\n\n\"No. What? Are you weirded out?\" He got a little tense in my arms.\n\n\"No, not at all. This is what I've wanted for a long time.\"\n\nHe pulled back so he could look at my face. \"You've wanted this? Since when?\"",
        "Oh shit. I guess it was time to officially come out to Cody. Which was weird since we'd been kissing for the last five minutes and we'd slept in each other's arms all night. It seemed backwards and kind of crazy.\n\n\"Umm, since forever. Cody, I'm into guys.\" I had a million other things to say but words failed me.\n\n\"Since when?\" He sounded so surprised, like kissing each other was totally normal for straight guys to do. It felt absurd and I nearly laughed due to my nerves.\n\n\"Since birth according to science. I realized it in junior high. I acted on it for the first time while I was away.\" I explained and I hoped he wouldn't be upset. I planned on being totally honest with him. About anything and everything.\n\n\"I had no idea. Who knew? Did you really hook up with girls then, or no?\" I could tell he was starting to overthink and get freaked out and I just wanted to kiss him again and go back to being silent and calm like before.\n\n\"I'll tell you everything, I promise. Please don't get upset, Cody. I really don't want to upset you, okay?\" He nodded and I felt him relax a little bit. Crisis momentarily averted.\n\n\"First of all, you are the first person I've come out to, other than my two hook ups on the road. I did get my first blow job from a girl, the one that Skip arranged that first weekend. I've had experiences with two guys. And now I've kissed three guys.\" I lifted my eyebrow at him. Again he nodded that he understood I meant him.\n\nHe didn't say anything for a while. I could tell he was processing everything I'd said and probably all the things he'd done with me.\n\nI was processing it all myself. I just came out to my very best friend, who I've recently realized I'm in love with and now I've had a whole kissing moment with him. Holy shit, now I felt like freaking out.\n\n\"I'm the first person you've told?\" Cody finally asked.\n\n\"Yes. The two guys I met on tour both just seemed to know. I only had to answer questions to the first guy. The other one didn't ask, he just assumed or knew somehow. So, you're actually the first person I've said the words to. You are they only one who knows me that knows I'm gay.\"\n\n\"I'm gay.\" I barely heard the words when Cody said it into my chest. He'd buried his head as he confessed his darkest secret to me.\n\n\"That's good since I'm so madly in love with you.\" I just laid it out. I knew he was scared out of his mind and I wanted him to know I was his if he wanted me. He had nothing to fear with me. I needed him to know.\n\nI felt his tears before I heard him crying. I gathered him as close as I could and I held him tight. I didn't know exactly why he cried but it didn't really matter. I was going to be there for him no matter what.\n\nI felt his body start to relax and his crying seemed to calm. He sniffled and pressed his wet face into my shirt. He let out a huge breath and melted into me. \"I love you.\" He said it clearly, making sure I heard it.\n\n\"You're all I've ever wanted. You are all I need. I love you and only you, Cody. I love you so damn much it makes me insane.\" I felt breathless as the words spilled out.\n\nWe murmured words of love to each other, still tightly embracing one another. We dozed off like that, both exhausted from the emotional release.\n\nIt was late morning when I woke up alone in the bed in my new place. I heard the toilet flush and I felt so relieved. He was still here. I sat up and waited until he emerged.\n\nWe grinned at each other and my heart thumped harder and my stomach fluttered. I was in love and it felt crazy amazing.\n\n\"Hey. Do you have to go to the ranch today?\" I asked, trying to make conversation in this new relationship between us. I was nervous and yet he was the person I was the most comfortable with in the whole world.\n\n\"Yes. But only for a few hours. I have two quick projects to take care of. I should be done by mid-afternoon. Should I come back here to meet up?\" He sounded normal but I felt his nerves under the regular words.\n\n\"Yeah, I'm going to be here all day. Can you give me a ride back to the house? I can grab my truck and some of my stuff. Plus I should see how Daddy and Grandpa are going to be about me moving out here.\"\n\n\"They should be fine with it. It's not like they didn't know what I was making for you out here. They let me hook everything up to the barn after all.\"\n\n\"I guess. I'm about to find out for sure.\" I stood and stepped closer to Cody.\n\nHe stared into my eyes for a moment. Then we were frantically kissing and clinging to one another.\n\n\"We better stop or you're never going to finish your projects. We have nothing but time later today.\" I smirked at him as I pulled away.\n\n\"Well then, get it the damn truck! I've got work to do.\" He smiled back at me as he marched to the door and exited the RV.\n\nI pulled the door closed behind me and climbed in Cody's truck. \"What should we call this place? I don't want it to be \"the RV\" or something lame like that.\"\n\n\"It's your place, you should name it.\"\n\n\"No, Cody. It's our place. I hope you'll stay here with me. I want you beside me.\" I felt shy saying it in the daylight, in the world outside the safe cocoon we'd shared last night and this morning.\n\n\"Okay, our place. We can't call it that though. I guess we can wait and see what evolves as we live in it.\" He glanced at me and smiled.\n\n\"So you'll move in there with me?\" I wanted to make sure I was clear about what I wanted.\n\n\"Yeah, Rhett. I want to live there with you. I imagined us living there together the whole time I worked on it. I didn't think it would ever actually happen though.\"\n\n\"It's happening alright.\" I chuckled as I said it.\n\nToo soon we pulled up to Grandpa's house. My daddy's truck was there, of course. We both sat and looked through the windshield at the building before us.\n\n\"I wish I could kiss you right now.\" I said.\n\n\"We shouldn't. Those noisy bastards are both probably watching us.\" Cody knew them as well as I did.\n\n\"This sucks. Fuck.\" I blew out a big breath and I turned to look right at him. \"I love you.\"\n\n\"I love you, too.\" He smiled at me and we both started grinning at each other like the fools in love that we were.\n\n\"Okay. Since I can't touch you right now, I'm going to get out. Just hurry back home as soon as you can.\" I stood in the driveway with the door still open.\n\n\"I will. I promise.\" He looked fucking beautiful to me.\n\n\"Holy shit. Just go before I change my mind.\" I stepped back and closed the door. I watched him drive away.\n\nIn the house, they both started talking to me as soon as I opened the door. Grandpa hugged me. Daddy frowned at me and then congratulated me. It was all weird, but that was probably just me.\n\nAfter the initial encounter with them ended, I excused myself. \"I'm going to pack up some of my stuff. Call me if you need me to come back to the house for anything.\" I stated it, I didn't ask. I turned and went up the stairs.\n\nAs Cody predicted, it wasn't a big deal which I still thought was odd. I realized Cody had done this for me, too. When he'd talked to them about fixing up the RV, he also prepared them ahead of time so they could process it before I even got home.\n\nWhether that was his intention or not, he'd still smoothed the way for me. I was going to make sure I gave him an extra thank you for that. Hopefully in the form of some sort of pleasurable, naked situation. My blood felt hot in my veins as I thought about it.\n\nI quickly gathered my things, got my truck and got the hell out of dodge. I wanted to jerk off and my pants were too fucking tight. I needed to take a cool shower and leave my dick alone. I wanted Cody to be the one that got me off.\n\nAt the RV, I took that cool shower and I felt a tiny bit better. I realized I didn't eat when I went to the house and I kicked myself. I was going to have to go back.\n\nI stopped and thought about it for a second. If I knew Cody, he hadn't neglected this detail. I opened the cabinet and sure enough there were canned goods and ramen packets. There was also a microwave in the cabinet!\n\nI opened the little fridge he'd installed, which looked as old as the rest of the RV. It was icy cold inside when I opened it so I didn't care what it looked like. It had soda and bottled water in the racks on the inside of the door. On the shelves I found lunch meat and hot dogs and all sorts of good stuff.\n\nI realized what time it was and I figured Cody might be back soon. I should make him some lunch. I felt downright domestic. I texted him to see how soon he thought he'd be back.\n\n\"Less than an hour. I'm bringing you some lunch. See you soon.\"\n\nI laughed out loud at his text. He beat me to lunch. It was so typically Cody that it made my heart swell with the love I felt for him.\n\nShortly thereafter, he showed up with two huge plastic dishes of lasagna. His mom made this recipe with their premium beef and it was always amazing. I didn't know what made my mouth water more. The dish of delicious food or the breathtaking man that brought it to me.\n\nThe lunch was wonderful and we sat at the table and laughed while we ate. It felt perfect, just being here with him. In our place. Actually together.\n\nI washed the dishes in the sink in the barn while Cody hung a closet rod in the front of the RV. While we did our tasks, Michael pulled up and joined us inside the Winnebago. We easily acted normal as our old group reunited.\n\nCody finished a few more projects inside while I got Michael to help me set up a fire pit in front of the Winnebago.\n\nIt was basically the same as our set up at the river cabin, but this was our grown-up version. I arranged the plastic chairs we had right now, but we were going to build big Adirondack chairs for all three of us this summer.\n\n\"I'm going to go fetch firewood. I'll be back in about an hour.\" Michael called out as he hopped into his truck. I waved goodbye as I climbed the stairs into the RV.\n\n\"Michael's getting firewood. How's it going in here?\" I asked as I entered the RV.\n\n\"It's good. I'm nearly done with everything I wanted to do today.\" Cody was installing a shelf in the shower.\n\nI sat at the table and drank a cold Coke. \"What else did you want to do today?\" He was always ambitious with his projects. The RV was the perfect example.\n\nI heard him gathering his tools. Stepping out of the bathroom, he looked at me. He walked right to my side and then he bent and kissed me deeply.\n\nWhen he pulled back, I stood and pulled him into me. I crashed my lips into his as our bodies pressed closer. I felt his excitement and I ground into it. He moaned into my lips.\n\n\"I want you so bad.\" I said between kisses.\n\n\"We have bad timing.\" He smiled against my mouth. \"Michael will be back way too soon.\"\n\nI pulled back just enough to look up at him. \"I know. Our timing sucks.\" I huffed out my breath while we still stood with our arms around each other's waists. \"I hate that I can't touch you in front of him.\"\n\n\"Why can't you?\" Cody challenged, surprising me completely.\n\n\"What? You want me to kiss you in front of Michael?\" I leaned back against the counter, pulling him with me.\n\n\"I mean, no, not really. But also, yeah. He's going to figure it out, eventually. We should probably tell him before he figures it out. It'll be awkward, but he'll be fine. I'm sure of it. You know he won't out us.\"\n\n\"How long have you been thinking about this?\" I asked him once he finally stopped babbling.\n\n\"All day. It helped me not think about you. I was distracted and horny when I was only thinking about you.\"\n\nI smiled and shook my head in disbelief. Who was this guy in my arms? Cody had grown so bold. I was even more in love with him as each second passed. My god, he was incredible.\n\nHe bit his lower lip. The look on his face made my body throb. \"Are you surprised that you make me horny?\" He pouted as he said it.\n\nI couldn't help myself, I burst out laughing. The whole situation was so hilariously absurd. Before I could get it together, Cody was laughing too. We just stood there, holding each other close, laughing.\n\n\"What even is our life?\" I was still grinning and wiping tears from my eyes as I said it.\n\n\"Our life is amazing. And just beginning.\" Cody smiled at me, done laughing, but glowing with joy.\n\n\"I love you, Cody.\" I leaned in and kissed him tenderly. It grew heated quickly and his tongue was in my mouth. I sucked on it, making him groan.\n\nWe finally pulled away from each other to give ourselves a moment to cool off before Michael got back. I sat back down at the table and he sat across from me.\n\n\"You said you were in junior high when you realized you were gay. How did it happen?\"\n\nI looked at him and smiled. I was glad he wanted to talk about this. I'd never talked to anyone about it and my best friend was the person I wanted to tell the most.\n\n\"I think I was ten or eleven. I was touching myself and I kept thinking about JB Mauney. I looked at his poster. I soon realized it wasn't just JB. It was guys that I liked and I didn't like girls.\"\n\n\"Were you scared?\"\n\n\"Yeah. Really scared. My mom always talked about her cousin that was a dirty fag. I was sure I was that too.\"\n\n\"Oh no. That's terrible. I wish you could have told me, but I understand why you didn't.\" Cody looked so concerned. He reached over and took my hands in his.\n\n\"I got over it pretty quickly, luckily. Thank goodness for the internet. When did you figure it out?\"\n\n\"When you left.\" He said it quietly, but without breaking eye contact.\n\n\"When I left? On tour? In January?\" I tried to wrap my head around what he meant.\n\n\"Yeah. You left and I was alone, without you or Michael and I realized I'd been lying to myself about just being picky. I wasn't ever going to find the right girl for me.\" He stopped and looked down at the table.\n\nI just rubbed his hands in mine. I waited.\n\nHe lifted his head with a look of resolve on his handsome face. \"As soon as I spent three days away from you, I realized I was in love with you. I was angry. I'm not sure why.\"\n\n\"Anger seems normal. All the feelings are normal. I'm sorry I didn't know how you were feeling.\"\n\n\"Don't apologize, Rhett. Please. You're here with me. I never thought this was possible. Don't forget, I didn't know you were gay either. I was so upset because I couldn't ever have you.\"\n\nOur eyes met. I was mesmerized by the man he'd become in the last few days. He was spectacular. Handsome, loving and bold. He was mine.\n\nThe crunch of tires on gravel brought us back to the real world. We stood up and headed to the door.\n\n\"We need to always lock this door. It will be our early detection system for unwanted guests, if you know what I mean.\" Cody grinned as he opened the door, looking over his shoulder at me.\n\nI just shook my head and followed him out, smiling from ear to ear. I did know what he meant and I couldn't wait for it.\n\nWe unloaded the entire bed full of wood from Michael's truck. We stacked it and built a fire. Later we roasted hotdogs and ate while laughing into the night. It was just like old times. Almost.\n\nI was having so much fun but I also wanted Cody to myself. It had been less than twenty four hours since we'd come out to each other, but it felt like years. I wanted to touch him.\n\nIt got later and later and Michael showed no signs of wanting to leave and I couldn't blame him. He'd been locked down and we hadn't been together in six months. Cody seemed happy so I was as patient as I could be.\n\nThe three of us grew quiet and the fire burned low. Everyone was yawning but refused to be the first to give up.\n\nI finally stood and stretched my arms over my head, making my shoulders pop loudly. I looked at Cody and he was staring at my exposed abs and low riding jeans. I couldn't help but grin at him.\n\nMichael was kicking some sand on the last bits of the fire. The three of us were now standing looking at the smoke tendrils, but still not moving to go our separate ways.\n\n\"I guess we should head out.\" Michael said to Cody.\n\n\"I'm staying here, actually.\" He left it at that.\n\n\"Oh, can I stay, too?\" Michael was oblivious.\n\nCody looked at me. Of course it had to come from me. It was technically my place. Michael didn't know it was \"ours\" yet. What could I say?\n\n\"Sure, the table comes out and the seating folds down into a bed.\" I headed inside to get it set up for him.\n\n\"Where are you going to sleep, Cody?\" Michael asked him as they came in right behind me.\n\n\"On the bed. It's a queen size so there's lots of room.\" Cody sounded nervous.\n\n\"Did you stay here last night?\" He was starting to sound suspicious. Or maybe he was jealous we'd hung out without him.\n\n\"Yeah. I didn't plan to but it got late.\"\n\n\"I was afraid to let him drive home. Yesterday was a long day.\" I interjected, stepping between the two of them as I handed Michael some pillows and a blanket from the under bench storage.\n\nThat seemed to break up the conversation. Michael arranged his bedding as Cody stepped into the bathroom. I went into the back and closed the curtain. This wasn't how I saw tonight going.\n\nSoon enough the three of us had all finished our bedtime routines and the lights were off. Michael was tossing around, trying to find a comfy position. Cody and I lay in the bed, on our own sides, but facing each other.\n\nMy eyes adjusted to the dark and I could see Cody's beautiful face. He was watching me watch him. I smiled at him.\n\nHe scooted closer and so did I. I needed to touch him, even if I just held him close for a while.\n\n\"I wish I could kiss you.\" Cody whispered it right against my ear.\n\n\"Me too.\" I whispered back.\n\nI found his mouth and touched his lips with mine. It turned to kissing, of course. I tried to be silent but I could hear the kissing sounds.\n\nBefore I could help it, I was laughing. Cody just buried his head in my chest. I could hear Michael shifting around up front.\n\n\"Don't start.\" Michael said into the darkness.\n\n\"Sorry. I'm trying.\" I answered.\n\n\"And stop whispering. It's rude.\" Michael said, joking, but also serious.\n\n\"Sorry.\" I said again.\n\n\"What are you guys whispering about anyway?\"\n\n\"You don't want to know.\" I was honest about that.\n\n\"Okay? What's that mean?\" Michael persisted.\n\n\"I was telling Cody I wanted to kiss and touch him.\"\n\nCody gasped in my arms. Michael was silent.\n\n\"Yeah, right!\" Michael finally called out and then burst into laughter.\n\n\"Don't ask what you don't want to know.\" I said after he stopped chuckling.\n\n\"Fine, don't tell me.\" I could still hear the humor in Michael's voice.\n\n\"I tried.\" I said it quietly, but I know he heard.\n\nWe got quiet again and the next thing I remember was Michael ripping the curtain open to wake us in his usual obnoxious fashion early in the morning.\n\nHe was quite surprised by what he found. Cody and I were both shirtless with our arms wrapped around each other and my head on his shoulder. We both groggily looked up at him before we realized what was happening.\n\nMichael stood there with his mouth open and his eyes wide. I felt Cody shrink into himself, silent and scared.\n\nI decided to break the awkward silence. \"Remind me to install a door.\" I yawned and sat up, trying to block Cody who seemed terrified even though he's the one who originally suggested we tell Michael.\n\n\"What the hell?\"\n\n\"You don't have to be rude. Don't forget you're a guest, dipshit.\" I gave him a serious scowl.\n\nHe seemed to snap out of it. I saw understanding dawn on him. His eyes got wide again. He spun around and pulled the curtain closed, walking away.\n\nI crawled out of the bed and followed him. I sat on the edge of the pull out bed he'd slept on. It was hard as a rock. I looked at him and I could see the gears in his head spinning.\n\n\"Well. What do you have to say?\" I asked him calmly.\n\n\"Nothing. I have nothing to say.\"\n\n\"Liar. You always have something to say. Get it out now. I'm not letting you leave here until I know what you're thinking.\" All I could think about was Cody. I needed to protect him.",
        "\"You weren't kidding last night, were you?\" He was starting to put it all together.\n\n\"No, I wasn't.\" I reached into the fridge and grabbed a bottle of water. I walked it back to Cody and then came back to Michael.\n\n\"When did this start?\" He finally asked me.\n\n\"Just now. When I came home the night before last.\" I answered honestly.\n\n\"So that's why Cody stayed here. You guys did stuff........ together?\" He stopped himself before he spoke too many thoughts.\n\n\"It's not quite like that. We didn't do anything. We just slept and talked. And you were here last night, so we just slept and talked again.\"\n\nI watched him realize he'd cock blocked us last night. \"Oh, shit.\" He said as he looked down.\n\n\"Don't worry about it. Really. But I need to know what you're thinking. I need to know you won't tell anyone. If you out Cody, I'll ruin you.\"\n\n\"I would never!\" You know me better than that. And what about you? You don't care if you get outed? Aren't you both....\" He trailed off.\n\n\"Yes, we're both gay, if that's what you meant. And no, I don't care what happens to me. But I'll protect Cody with my life.\"\n\n\"Stop. You're the one with everything to lose, Rhett. Please don't out either of us.\" Cody came rushing out of the curtain, pulling his shirt on. He looked scared but determined as he looked at Michael.\n\n\"Both of you relax! I'm not going to out anybody. Jesus! What is happening here?\"\n\n\"Sorry.\" Cody was standing by the bathroom looking uncomfortable.\n\n\"Okay, time for tent talk.\" I announced and stood.\n\n\"We don't have a tent.\" Michael pointed out.\n\n\"I know. Let's all sit on the bed.\" I walked to the back, ushering Cody in front of me. Michael trailed behind.\n\nWhen we were little, the three of us would camp and share a tiny, two man tent. Our tent talks were always no holds barred. We talked about masturbation once. We talked about girls, which is bizarre to think about now.\n\nI wanted this figured out before anyone went anywhere. I didn't want Michael to have unanswered questions. I didn't want Cody to be worried all day. I wanted everything out in the open like Cody talked about yesterday.\n\nThe three of us sat cross legged on the bed. They both looked at their hands in their laps. I had to start this since they wouldn't.\n\n\"Okay. We need to really talk this out. What do you want to know, Michael?\"\n\n\"Okay, you're both gay? How did I not know this?\"\n\n\"I came out to Cody yesterday morning. He's the first person I've told.\" I left out the men on the road. \"I knew I was gay when I was ten or eleven.\"\n\n\"I came out to Rhett at the same time he came out to me. I only figured it out when he left for the PBR.\" Cody looked at me, his eyes still looked worried and it killed me.\n\n\"Wow, so this is all brand new for everyone, basically.\" I watched Michael process everything. \"So you guys told each other you're gay and then what?\" He addressed that question to me.\n\n\"I told him first. And when he told me, I told him I was glad because I'm in love with him.\" I reached out and touched Cody's hand. He grabbed it and held it tight.\n\n\"I love him, too.\" Cody said firmly, but still looking scared.\n\n\"And neither of you knew? That's fucked up!\"\n\nHis reaction wasn't what I'd expected. He was more surprised that we were both gay and didn't know it about each other. He didn't seem to be too phased by the fact that we were gay all that much.\n\n\"What else do you want to know?\" I tried to steer the conversation back to the matter at hand.\n\n\"You've kissed? Nothing else?\"\n\n\"Not that that's really your business, but in the spirit of tent talk, yes, we've kissed and that's all.\"\n\n\"I totally third wheeled myself last night, didn't I?\" He smiled his usual charming smile.\n\n\"You sure did.\" Cody shocked me when he answered. I couldn't help but laugh out loud again. The last few days were so fucking weird.\n\n\"Were you going to tell me?\" Michael asked, seeming to be more relaxed and normal now.\n\n\"That you'd cock blocked us? Or that we're gay and together?\" I joked. I knew what he meant but I couldn't help but make him slightly uncomfortable for my own amusement. He just gave me a look.\n\n\"Fine, fine. Yes, we were going to tell you. I kind of tried last night, but you thought I was joking.\" I offered as my reply to his look.\n\n\"Oh! You really were whispering about kissing and stuff? Oh man, I'd never have guessed.\"\n\n\"Obviously.\" Cody chimed in.\n\nMichael and I looked at him at the same time. The three of us all burst into laughter. The tension melted from the air. It felt like old times, really.\n\nThere wasn't a big secret between us. We'd reinstated tent talk and it got us back on track just like when we were kids. I felt content in a way I hadn't in a long time.\n\nThe conversation went back to normal after that and I could see Cody relax and I watched his fear fall away. It was all I needed to see.\n\nMichael finally left for home. He had an interview in the afternoon. He wanted to do something other than farming. He wanted to be a mechanic and he was damn good at it. We wished him luck as he drove away.\n\nCody and I went back into the RV and sat on the couch we'd folded up before Michael left. I reached over and took his hand, silently asking him to look at me.\n\nHe took my hint and his eyes met mine. \"Are you okay?\" I needed to make sure.\n\n\"Yeah. I am. That went better than expected, thanks to you. I would have freaked out if you weren't here.\"\n\n\"As long as you're alright, Cody, then I'm alright. All I want is to make you feel safe and happy.\" I told him honestly.\n\nHis eyes grew darker as he looked at me. It made my heart start to race in my chest. He leaned into me, his eyes on my mouth. Before we connected, he stopped and looked into my eyes again.\n\n\"You were so protective today. You threatened to ruin Michael. For me. It was so incredibly sexy I thought I'd swoon.\" He purred his words of praise to me.\n\n\"Swoon, huh? You liked that, did you?\" He was smiling back at me as I asked. My body grew tight.\n\n\"Yes. My man was defending me. I loved it.\" He was grinning wickedly now.\n\n\"I'd do anything for you, Cody. I love you more than anything.\" I said it seriously. I meant every word.\n\n\"I love you, Rhett. And I fucking need you.\" Before I could reply, he was kissing me.\n\nWhen he pulled back, I tried to think clearly for a second. \"Get in the bed. I'm going to lock the door.\"\n\nI went to the door and locked the knob and the deadbolt. When I turned back, Cody was gone, already behind the curtain. I quickly went to join him there.\n\nI stood at the foot of the bed and looked at Cody. He pulled his shirt back off. \"Take off your shorts.\" He ordered it as he looked at me.\n\nI quickly let my shorts and underwear fall to the floor. His eyes were glued to my naked body, specifically my large erection. I climbed into the bed and reached for him.\n\nHe laid back and pulled me over him. I bent down and kissed him hard. His hands ran down my shoulders and back. He brushed them over my waist and hips and then he took my ass in his hands and squeezed.\n\n\"You need to get those pants off.\" I sat back and pulled at his soft knit sleep pants. He helped me, pushing them down. His boxers followed quickly.\n\nI looked at his nudeness. He was exquisite and untouched, I couldn't help but think. I was barely tried, but he was completely pure.\n\nHis abs were defined and tight. His dick was larger than average, but not as thick or as long as mine. It was completely beautiful, the only cock I wanted to take inside me. The fingers and tongue that had been inside me were all forgotten now.\n\nI bent over him and sucked his erection into my mouth. He gasped. I knew he had never had a blow job. I gave him the best I could for being a novice.\n\nHis hand closed around my thick member. I heard him whisper \"holy fuck, it's huge!\" I felt his wet mouth closed over my leaking head. We were sucking each other and my mind was nearly blown.\n\nWe finally pulled away and climbed under the covers together, holding each other close, our bodies rubbing against the other, igniting fires in both of us.\n\nHe pushed me back into the pillows and crawled over me. He looked into my eyes and I lost my breath. I was overcome with love and desire for him. It shook me to my core.\n\n\"What do you want, Rhett? I want to give you everything you want.\"\n\n\"I just want you, Cody. Any way I can have you. I want to make you come for me. How can I make you come?\" I turned it on him. I didn't mean to deflect.\n\n\"I want you to dominate me. I get so turned on when you ride those big bulls. I always imagine that cowboy on the TV claiming me.\"\n\n\"Oh my fucking god, Cody.\" I was more turned on than I'd even been in my life. My whole body was granite hard and ready to claim him just like he asked.\n\nI rolled both of us until he was under me. I kissed him hard while I rubbed my erection over his. Our rigid shafts were both weeping pre-cum and it felt like lightning as they clashed.\n\n\"I want to be inside you. I'm afraid I'm going to hurt you though.\" I looked into his eyes as I confessed my fear.\n\n\"Do you have lubricant? I want you inside me, just go slow.\"\n\n\"I do have some. I'll go as slow as you need.\" I dug around in my stuff from my suitcase and I found my yet unopened bottle of lube. I'd bought it and condoms after that night with Keon.\n\n\"I've used a dildo.\" He said quietly as he looked at the ceiling.\n\n\"Oh? How was that?\" I honestly wanted to know. Again, I'd had fingers and a tongue in my ass, but nothing else. Not even a dildo.\n\n\"It was weird at first. But it felt good once I figured it out. I used to imagine it was you, but you're much, much bigger than my toy.\"\n\n\"Does that worry you?\"\n\n\"It should, right? But it doesn't. I'm excited about it. It looks massive and I can't wait to feel you.\"\n\nHis words made me feel drunk. I took a squirt of lube and rubbed it over my cock. I used that slippery hand to lube up his tight little hole. He moaned at the contact.\n\nI bent over him again and kissed him softly while I massaged his tight pucker with my fingertips. He let his legs fall open even further, inviting me to take him.\n\nI grabbed my shaft in my hand and pressed the head to his entrance. I kept my eyes on his. He looked needy and that nearly broke my control.\n\n\"Dominate me.\" He said breathlessly. It was the encouragement I needed.\n\nI pushed into him, his body stretching to take my rock hard thickness. His eyes were still on mine as I pushed deeper into him. His head fell back into the pillows and he groaned loudly.\n\n\"Are you alright? Am I hurting you?\" I stilled, desperate for more contact but insistent on not hurting him.\n\n\"It's so fucking big. Oh fuck, Rhett, it feels gigantic.\" He gasped the words out, fighting to breathe through the invasion occurring in his ass.\n\n\"I can stop.\" I offered and waited for him to reply.\n\nHis head snapped up and he looked at me with frantic eyes. \"Don't you fucking dare stop! I need you to fuck me. Claim me!\" He nearly shouted it.\n\n\"If it hurts, tell me. I don't want to hurt you.\" I inched myself forward as I said it.\n\n\"Yes!\" He squeezed his eyes shut as I invaded him further.\n\nHis lust filled words and reactions pushed me forward. Inch by inch. He squirmed as he adjusted to me. It felt unbelievable being inside of Cody. I was fucking Cody! Holy shit.\n\nI was about six inches in when I felt his body relax somewhat. He was still tighter than I could believe, but I felt the tension in his hips and thighs melt away. He was trying to take everything I had to give him.\n\n\"Cody, look at me.\"\n\nHis eyes met mine. I pushed into him until I was as deep as I could go. His mouth fell open and he rasped out one word. \"Fuuuuuck!\"\n\n\"I love you so much. Are you ready for me to claim you, Cody? I need you so fucking bad!\" My control was starting to slip. I was on the verge of pounding Cody into oblivion and I couldn't fucking wait much longer.\n\n\"Claim me! Claim my hole, Rhett. Fuck me hard, please. I don't care if it hurts.\" He was as desperate for me as I was for him.\n\n\"Fuck yes, Cody!\" I started to pull out, slowly. And then I pushed back in. His breath caught as I reentered him. But I could tell he wanted me to ravage him.\n\nMy hips started a steady pace, in and out. I watched his face as I plunged into and pulled out of him. He rolled his head back and forth, his eyes closed while making whimpering sounds that matched my movements.\n\nI needed to go faster. I started to pick up the tempo and soon the slapping sounds of my thighs meeting his ass cheeks, filled the air. I fucked him faster and faster.\n\n\"Oh god! Rhett!\" He screamed as I shifted positions so I could slam into him harder and faster. He felt so good, I couldn't think beyond the pleasure building inside me.\n\n\"Cody, fuck, I love you, I love you!\" I was nearly incoherent as I spiralled higher and tighter with Cody's perfect hole gripping at my manhood.\n\n\"Are you going to come for me?\" I asked him as I slammed into his tightness aggressively.\n\n\"Yes, Rhett, yes! Keep fucking me! I'm going to come!\" He was nearly begging and I was unable to deny him anything.\n\nI fucked him harder and harder. The slapping sounds were louder and coming back to back as we connected at breakneck speed.\n\nI started to grunt as my climax flew up to meet me. I wanted to keep going but I was on the verge of exploding. Cody felt like pure ecstasy.\n\n\"I'm coming!\" I forced the words through my gritted teeth.\n\n\"Fill me with your cum!\" I felt Cody's hands on my ass, pulling me into him harder. He wanted my seed inside him. That final thought broke through and my body started to spasm. I could feel my cock pulse inside him as I filled him with my semen.\n\n\"Cody!\" I shouted his name as the waves of intense pleasure crashed over me again and again.\n\nAs my body clenched down, squeezing my testicles nearly dry, I reached for him. I took his leaking and swollen length in my hand and I pumped him hard several times while trusting my hips.\n\nCody screamed as his orgasm ripped through him. I held him down as he thrashed beneath me. His body emptied itself and still he bucked wildly. His arms came up and grabbed at my neck.\n\nI let him pull me down until our mouths met. Through our heavy breathing and heaving chests, we clung together, kissing and touching even as our bodies remained connected.\n\nWe lay together like that for the longest time. Or bodies were sticky from our sweat and cum, but we didn't care. I kissed him tenderly and told him how much I loved him. He said the same to me. It was beautiful and overwhelming in the best ways.\n\nLater I went to take a shower. Just a few seconds after I closed the bathroom door, it opened again and Cody stepped into the water with me.\n\nWe kissed and hugged, our hands exploring each other, cleaning one another. He sat down on the closed toilet seat and took my penis in hand and sucked it into his mouth.\n\n\"Oh, fuck babe.\" I grew hard again with his attention focused on my crotch.\n\nBefore we knew it, I'd fucked Cody hard all over again as the water started to run cold in the shower.\n\nWe fell back into the bed and cuddled and kissed until we fell asleep. When we woke up, it was late in the afternoon.\n\n\"I want to be inside you.\" Cody had been awake longer than me and he'd been thinking about this.\n\nI smirked at him. \"How do you want me?\"\n\n\"Roll over.\" I had the feeling he'd been imagining this scenario. He seemed sure of every move he made.\n\nI lay on my stomach and pushed my butt up towards him. His hands slowly ran over my ass cheeks. I looked over my shoulder and the sight nearly undid me.\n\nCody was kneeling behind me, his strong, rough hands were on my bottom and he looked like a man starving. I wanted to feed him. I wanted him to feast on me.\n\nHe bent forward and kissed the round globes of my ass. He ran his fingers down my crack. Then I felt his tongue swipe over my sack. I cursed under my breath.\n\nHe ran his mouth and soft tongue over my whole bottom. He licked my balls and shaft. He kissed and sucked lightly on my taint. When his hot mouth finally connected with my hole, I called out his name.\n\nAfter a few seconds, he pulled away and lubed himself up. I watched him fist his hard-on and it made my ass hole feel fluttery. I wanted him inside me so badly.\n\nI felt lube drip onto my crack and run down over my tight pucker. Cody rubbed his slick, hot head over me, making me squirm.\n\n\"Are you ready?\" Cody sounded nervous when he asked.\n\nI propped myself on my elbows and twisted to look over my shoulder at him. He looked sexier than anyone or anything I'd ever seen. I smiled at him as butterflies filled my stomach.\n\n\"Yes, Cody. I'm ready for you. It's the first time for me, too. Go slow.\" I heard his words from earlier echo in my mind. He smiled at the familiar words, too. I think he also looked happy knowing he was my first.\n\nKeon's two big fingers had fucked my ass hard. It could count as my first time, I guess. But an aroused, erect cock attached to a raging, lustful man was different. I still felt like a virgin even after my fingering.\n\nI was giving my anal virginity to Cody. That was a fact. And I was ready for him. If it felt anywhere near as good as the fingers, I would be satisfied because this was my love. My man. My first would be my last.\n\nCody slowly entered me. It pinched at first and it burned. But those bits of discomfort were quickly eclipsed by the good sensations I was starting to feel.\n\n\"Oh, Rhett, this feels incredible. You feel perfect.\" He was starting to move faster now and I pushed back against him, trying to get every inch of him. I moaned into the pillow.\n\nCody grabbed my hips and yanked me up off the bed. I brought my hands up under myself to meet him in the doggy style position. It gave him more control and he used that advantage.\n\nWith his body blazing with pleasure, Cody started to rock into me pulling me back to get more contact. His thrusts got harder and harder and I had to brace myself so I wouldn't fall forward.\n\nIt felt amazing and my toes curled tightly as the pressure and pleasure built with his rhythm.\n\nCody reached forward and pulled me up by my shoulders so that I was kneeling in front of him, pressed back into him. His strong arms held my body tight to his.\n\nOne of his arms was around my waist and the other hand gripped my neck lightly. His hips bucked against my muscular ass, filling me with his perfect cock.\n\nI loved the new position. His body rocked into mine, rubbing against the most exquisite spots deep in my hole. My back was arched as he held me in place, forcing my erection to jut out in front of me and bounce to the tempo Cody created as he plundered me harder and faster.\n\nI moaned and begged and gasped for air. The pleasure was starting to consume me. My left hand clung to Cody's arm that wrapped around my neck. My right hand found my flopping erection and started to pump my length frantically.\n\n\"Come for me, just like that, yeah.\" Cody growled his encouragement into my ear as he kept fucking me from behind. My hand stuttered as my climax tore through my whole body.\n\nI felt Cody's arms tighten, holding me secure as I shook and spasmed with my release. He was fucking me faster than ever now. I was nearly screaming as the waves of my orgasm continued to crash over me from his movements within me.\n\nHe pushed me beyond my limits and I would never be the same. I was Cody's now. Fully and completely. My heart, body and soul were his. My whole being was vibrating as Cody claimed me forever.\n\nHis grip on my waist was nearly painful as he squeezed me closer, starting to come. He roared into my ear as he throbbed within my tunnel. I felt his hot jizz spray against my walls.\n\nHis arms loosened slightly and we both collapsed forward, his body covering mine. I never wanted to move from this position."
    ],
    "authorname": "YodaandLumiere",
    "tags": [
        "bull rider",
        "pro",
        "love story",
        "roamnce",
        "oral sex",
        "blowjob"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/love-at-crow-creek"
}