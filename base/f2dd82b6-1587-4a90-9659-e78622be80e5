{
    "title": "Management Skills",
    "pages": [
        "The air in the boardroom was warm, still and stuffy. Molly glanced out of the window longingly and admired the silver birch leaves fluttering in a gentle summer breeze. If only she could be out enjoying the warm sunshine, instead of stuck in this room, with twenty of her colleagues discussing...what was this meeting even about? Graphics rendering, if the PowerPoint slides being flashed up on the screen were to be believed. In order to engage her brain and prevent her eyes from slowly sliding closed, Molly sat up very straight, gave herself a mental shake and allowed her gaze to wander around the room.\n\nSitting opposite her, across the polished wooden table, was her great friend and ally Jules. With short, spiky hair and a wide grin that could make even the sternest Managing Director's face crack into a brief smile, she was definitely one of those people who made work bearable. Quickly catching Molly's line of sight, Jules cast her a fleeting grin before rolling her eyes dramatically. Moving her hand subtly up towards her ear, she made a gesture which suggested she was tightening a noose around her neck. She closed her eyes and opened her mouth slightly, as though strangulated. Molly forced herself to look away, biting the inside of her lip in a desperate attempt to hide her giggles.\n\nMoving along the table, Molly's amused gaze eventually came to rest on a tall, striking man with chiselled features and dark hair, whom she had never previously spoken with. Jake Hunter; the Head of I.T. Infrastructure. He had a wealth of experience in the field, a phenomenal intellect and was consequently extremely well-respected throughout the company. As though aware of her attention, Jake's concentration was momentarily distracted from the presentation. His glance swung around to observe Molly, a slight smile still playing across her lips from her previous encounter with Jules.\n\nAs Jake's azure-blue eyes met with hers, Molly felt her stomach swoop, as though the ground had momentarily fallen away from under her. Locked into his gaze, she was helpless, unable to do anything other than stare at Jake's expressionless face. Holding her breath, the moment seemed to spin out for an eternity, although in reality it probably only lasted a few seconds. A heavy pulse sounded in her ears and Molly could feel the heat rising in her neck and chest. The knowledge that she was blushing made her blush further still. Surely the rest of the room would soon become aware of the utter stillness of both of their bodies and the heat coursing between them if one of them didn't blink soon. If the tension between them could be translated into noise, there would have been a sonic boom emanating across the boardroom\n\n'Any questions?' said the speaker from the far end of the room.\n\n'Yeah,' said Jake's deep voice suddenly, breaking his gaze with Molly and turning to face the front of the room, causing her to jump. 'What calculations have been done to account for the additional server capacity required for this proposed functionality?'\n\nUnaware of the conversation now taking place around her, Molly slumped back into her chair. She consciously exhaled a long, slow breath, grappling to regain control of her shattered emotions. What the hell just happened there? Chancing a quick look back up at Jake, he was now totally immersed in a discussion, his long fingers playing with a pen on the table in front of him. For the remainder of the meeting, Molly concentrated hard on the far from fascinating subject of graphics rendering, in a hope that it would quell her overwhelming and entirely unexpected desires.\n\n*********** \n\n'We're all going out for a drink,' grinned Jules. 'You're not going to be a lightweight, are you? You are joining us?'\n\n'Sure. Is there an occasion?' asked a smiling Molly, looking up at her from behind the laptop screen.\n\n'Like you need that kind of an excuse,' teased Jules. 'But yes, as it happens. Jake Hunter's birthday. Apparently, the first round is on him! Problem?' added Jules as she watched a frown pass momentarily across her friend's face.\n\n'No,' replied Molly, shaking her long blonde hair. 'I suddenly thought I had something happening tonight, but I don't.' Jules seemed to accept this explanation, as she picked up Molly's coat and held it out for her.\n\n'Come on then! Chop chop!'\n\n'Right,' sighed Molly, saving her document, closing the lid of the laptop and grabbing her coat. Fastening the belt of her coat around her slender waist, she followed Jules out of the door. Molly knew she hadn't yet got her head around what had happened in the boardroom earlier that day. Given the intensity of what had passed between them, it felt like being within a hundred meters of Jake Hunter this evening was probably a really bad idea.\n\n***********\n\nMolly walked apprehensively into the packed bar, a few steps behind Jules. As she manoeuvred through a crowd of people her boss, Patrick, raised his arm to summon her over.\n\n'Hi,' smiled Molly. 'I didn't think your wife allowed you out on a school night.'\n\n'Damn cheek!' scoffed Patrick, good-naturedly. 'Actually, I'm making it up to her with extra gardening duties this weekend,' he grinned. 'Now, Jake. Do you know Molly Butler?' \n\nWith considerable trepidation, Molly swung around to find herself gazing up at the towering, athletic man whom she had last seen as she scuttled away from the boardroom, at the end of the meeting. As their eyes locked once more, a deep flush of remembered embarrassment began to permeate through Molly's body. \n\n'Only by reputation,' replied Jake, holding out his hand. 'I've heard nothing but praise for how you handled the contract issues with Datasoft a few weeks ago.' Against her better judgement, Molly took Jake's proffered hand. Upon the initial touch of his warm, soft palm and long fingers, Molly felt a jolt of electricity pass directly down her spine, straight to her core. It was difficult to tell whether the reaction she was experiencing was one-sided, although she thought she saw Jake's eyes momentarily widen and then crinkle at the corners.\n\n'Pleased to meet you properly,' she croaked, trying her best to ignore the fact that her nipples had tightened noticeably beneath her blouse. 'And happy birthday.'\n\n'Thank you, Molly,' replied Jake, squeezing and then releasing her hand.\n\n'How old are you then, you young whippersnapper?' chortled Patrick, oblivious to the undercurrent passing between them.\n\n'Forty-two,' replied Jake.\n\n'The answer to life, the universe and everything,' murmured Molly, as much to herself as anyone.\n\n'Well, that would be gratifying, wouldn't it?' Jake replied immediately, shooting a scorching glance towards Molly which she couldn't fail to misinterpret.\n\n'I'd better go and get a drink,' said Molly quickly, acknowledging to herself that it needed to be a very substantial one. Without daring to look back, she darted towards the bar.\n\n***********\n\nMolly wasn't quite sure where the time had gone, but it seemed to have turned very late very fast. Trying to match Jules drink for drink probably went a long way to explaining Molly's confusion though. Only a couple of hardcore drinking colleagues remained, most of them having disappeared home to their families, hours before.\n\n'Great evening,' slurred Simon, patting Jake on the back. 'But I must be off now.'\n\n'Me too,' smiled Jules, giving off surprisingly sober vibes. 'I don't want to miss the last train home.'\n\n'Good night,' said Jake. 'Thanks for joining me.' As they walked out of the door, Jake swung his full attention to Molly. 'And then there were two,' he murmured.\n\n'I ought to be getting back too,' said Molly half-heartedly, aware of how dangerous the situation could potentially be. This man seemed to have demonstrated some kind of power over her already. And her body continued to react in such a way which suggested she was keen for him to use that power again.\n\n'But you wouldn't leave me all alone, on my birthday, would you?' he said, a lazy grin playing across his lips.\n\n'Um. I guess not,' breathed Molly, concentrating on the buttons of his shirt, to prevent herself from looking him directly in the eye. Part way through the evening, Jake must have removed the jacket of his suit because now she could see the delicious shape of his broad chest and well-muscled shoulders through a linen shirt.\n\n'Thank you, Molly,' smiled Jake, as a bell rang behind the bar. 'Ah, last orders. Looks like you won't have to suffer my company for too much longer, after all. Can I get you another?' he asked.\n\n'I'm good, thanks,' murmured Molly, nodding towards her glass.\n\n'I'm pleased to hear it,' replied Jake, his eyes crinkling slightly. 'So, can I address the elephant in the room?' he asked mildly.\n\n'That's not a very nice way to refer to me,' said Molly, her eyes twinkling. Jake burst out laughing; a deep resonating laugh which made Molly's skin inexplicably tingle with pleasure.\n\n'You're well aware I wasn't referring to you. You are...' Glancing down at Molly's hourglass figure, he inhaled swiftly before continuing. 'About as far away from being an elephant as it is possible to be.' Molly giggled. Part of her was dying to tease him about his unique chat up line but she knew it would be totally inappropriate to do so.\n\n'Thank you, I think.'\n\n'You're welcome,' he replied, flashing her a grin. 'The elephant I was referring to took place in the boardroom today.'\n\n'Ah,' said Molly, her cheeks colouring as she shuffled uncomfortably in her chair.\n\n'Well?'\n\n'I was...' Molly felt she ought to choose her next words carefully, given Jake was a couple of grades her senior.\n\n'Enthralled by the subject matter? Bursting with enthusiasm to learn more? Struggling to stay awake?' suggested Jake, his face completely deadpan.\n\n'Yes, definitely one of those three options,' smiled Molly. 'A colleague had just made me laugh. I turned my head away from her and ended up grinning at you. I apologise,' she added.\n\n'Please don't,' murmured Jake, his voice a deep rumble. 'You greatly improved an otherwise extremely tedious meeting.'\n\n'In that case, you're very welcome,' smiled Molly. Jake maintained eye contact with her and Molly felt her heart rate pick up as heat began to gather in her core.\n\n'Are you happy in your current role?' queried Jake, the rapid change in conversation momentarily flooring her.\n\n'Um, yeah. I guess I'm content enough,' Molly nodded, feeling both uncomfortable and increasingly sexy from being in the spotlight of Jake's sole attention.\n\n'I've got a vacant role in my management team that I'm looking to fill. Would you consider it?' asked Jake. Molly swilled the last of the liquid around her glass as a silence began to envelope them. Exhaling slowly, Molly finished her drink.\n\n'I'm sorry, Jake, but I can't accept,' explained Molly as she slowly stood up. As she did so, Jake rose beside her, a questioning look on his face.\n\n'I'm going to head home now,' she added, shrugging on her coat.\n\n'Hang on,' instructed Jake. 'Is there a reason behind either your decision or your sudden need to disappear?'\n\n'Absolutely,' nodded Molly. 'But I think some things are best left unsaid.'\n\n'Actually, I've never found that to be the case,' replied Jake evenly. 'So, let's hear it.'\n\n'It's very simple, really,' said Molly, slowly raising her eyes to look directly into Jake's. 'A long time ago, I made it a policy of mine never to work for somebody I'm strongly attracted to.' The moment the words had left her lips, she knew she'd gone too far. As Jake's eyes opened a little wider and he straightened slightly in surprise, Molly cursed Jules for suggesting that final round of vodka shots, straight after the round of flaming Sambucas, which had clearly lowered her defences. \n\n'Goodnight, Jake,' she muttered before turning and fleeing from the bar, without a backwards glance.\n\n***********\n\nBack at work the following day, Molly kept a low profile and didn't mention her embarrassing conversation with Jake to anyone, not even Jules. By mid-morning, Molly was entirely engrossed in producing a budget report when a private instant messenger invitation flew up onto her screen. With a rush of adrenalin, she saw Jake's name and wondered, with some trepidation, why he was initiating contact with her. Having glanced around the office first to ensure nobody was looking over her shoulder, Molly entered the conversation.\n\n[JHunter]: You know relationships with co-workers are against company policy, don't you?\n\n[MButler]: I do.\n\n[JHunter]: So, if nothing can happen, why not consider joining my team?\n\n[MButler]: I don't think it's a good idea.\n\n[JHunter]: Surely, you can handle a little sexual tension?\n\n[MButler]: I'm sure I could handle a little sexual tension, yes. But that isn't what we're talking about here. \n\n[MButler]: At least, not for me anyway.\n\n[JHunter]: OK. Fair point. For me neither.\n\n[MButler]: Thank you.\n\n[JHunter]: I feel it only fair to warn you though. Confidentially. There are noises about a restructure and ultimately, we may not get a choice.\n\n[JHunter has left the conversation]\n\n***********\n\nMolly was walking leisurely along the riverbank on her way back from the shops to collect her car. The Canadian geese honked noisily from the water, as children ran past shouting. Having left work less than an hour earlier, Molly had done well to quickly dash around the stores she needed to visit before they closed. Not only had she picked up a pretty pair of half-price sandals but she'd also managed to find a birthday card and present for her mum, who she found notoriously difficult to buy for. \n\nSwitching her shopping bags into her left hand to give her right hand a rest, Molly was suddenly aware of an object passing right beside her at great speed. Before she knew it, she had been thrown to the floor by the force of a cyclist speeding past, knocking her body flat to the floor.\n\n'Oi!' shouted an angry man's voice, as Molly lay on the tarmac, hands outstretched, trying to understand why she was suddenly sprawled on the tarmac. \n\n'Little shit! Are you OK sweetheart?' Molly was aware of her scattered shopping bags being picked up from around where she lay. Looking up, Molly found herself looking into a pair of familiar, wickedly attractive eyes.\n\n'Jake?' she asked, struggling to register what was happening.\n\n'Hey Molly,' he said gently. 'Are you hurt?'\n\n'I don't think so,' she replied, although, upon looking at her bare legs, she could see blood running from her knee. Having picked up all of her shopping, Jake bent down.\n\n'Come on. Let's get you up,' he murmured. 'Put your arm around my shoulder, and we'll head for that park bench over there, OK?'\n\n'OK,' she breathed, as Jake leant in and sensory overload took over. Press up against his hard, muscled body, Jake took the majority of Molly's weight as she hobbled across the path on her painful leg. There was no doubt her body was shaking but whether that was from the effects of Jake's proximity or from being knocked over, she wasn't entirely sure. What she was sure about, however, was that Jake smelt divine. By the time they had reached the bench, Molly had identified an expensive lemon tang which she put down to his aftershave, the hint of a washing powder on his clothes quite different to the one she used, and an indescribably sexy masculine aroma, which she assumed was simply his natural scent.\n\n'That's it,' said Jake softly. 'Sit down here and then we'll fix you up.' Molly sat down heavily on the wooden bench and looked up at him, towering above her. As her befuddled brain cleared, it became obvious why she hadn't immediately recognised him. Jake was wearing a T-shirt, shorts and trainers; Molly had only ever seen him entirely concealed by his suit before today. Jake shrugged a small rucksack off his back whilst Molly looked down at his rock-hard, hairy calves and well-muscled knees. Unhelpfully, she felt her stomach roll over with the force of her attraction to him.\n\n'Lucky I'm always prepared,' smiled Jake, as he removed a first aid kit from his rucksack and began to unwrap an antiseptic wipe. 'Shall I sort this out for you?' he asked, nodding towards Molly's knee, still running with blood.\n\n'Um...OK,' said Molly. Looking down at her rounded knees, the lace hem of her sundress laying just above them, she watched in fascination as Jake dabbed at her wound with infinite care. Once he had used one wipe, he continued with a second and the bleeding was eventually stemmed.\n\n'We'll just let that dry for a moment,' said Jake, discarding the wipes in a nearby bin. 'And then you can have a plaster on it.'\n\n'Thank you,' breathed Molly, gazing up at him. 'You've been running?' she queried in a desperate attempt to make some kind of conversation. The alternative was that she just continued to stare adoringly up at him and she'd probably done quite enough of that already.\n\n'Not yet,' smiled Jake. 'I'm just waiting for my running partner. Which reminds me...' Jake grabbed his phone from his pocket and typed a quick text.\n\n'Don't let me delay you,' said Molly quickly. 'I'll be fine now, thank you.'\n\n'I'm sure you will, but I'd prefer to see you safely back to your car. Don't worry, Zach will be grateful that you've deferred the inevitable pain we are just about to put ourselves through.'\n\n'Or the inevitable pleasure,' said Molly, wishing she hadn't said it, the moment she'd opened her mouth.\n\n'Oh?' he smiled questioningly.\n\n'I mean...when I go running, I always feel good when I've finished. All those endorphins flying around my body and a sense of satisfaction. It's a natural high.'\n\n'So, you run too then?' he enquired.\n\n'Yes, just cross-country and certainly not at any great speed. I usually go out really early in the mornings when nobody else is about. It's the best time of day. I love the solitude. Just the owls and moonlight to accompany me.'\n\n'Sounds perfect,' smiled Jake. He paused thoughtfully before continuing. 'They say there's a thin line between pleasure and pain but I've never found that to be the case.' Not knowing how to respond, Molly sat gazing up at him, her pulse racing frantically within her body. 'Are you ready for the plaster now?' asked Jake.\n\n'Yes,' croaked Molly. 'Thank you.' As though looking down on the scene from another dimension, Molly watched as Jake unpackaged the plaster and dropped down to his knees. He then very carefully lined it up over her knee, sealed the plaster down onto her skin and ran both thumbs tenderly over the adhesive sections to fix it in place. Molly felt no pain. In fact, all she felt was pleasure, particularly when he looked up into her eyes. A moment of electricity passed between them, as it had previously done in the board room, as their eyes drank each other in. The moment was in danger of continuing indefinitely when Jake blinked his eyes, once, twice, and then his line of sight slid away. Removing his hands from her knee, he stood up. Picking up Molly's shopping, Jake held out his arm to offer support.\n\n'Let me accompany you to your car.'\n\n'Thank you,' said a flushed Molly, grabbing hold of his warm skin and hobbling beside him.\n\n'We ought to report that little bastard who ran into you and then just cycled off,' said Jake, a quilt of muscles in his jawline revealing his anger.\n\n'No harm done,' sighed Molly. 'Well, not much anyway. My car's just there,' she added, opening it remotely with her set of keys.\n\n'Hey Jake. Everything alright?' asked a deep voice behind them.\n\n'Yeah, some tosspot on a bike knocked Molly here to the floor,' replied Jake as they turned to face the newcomer. Molly took in the sight of a man of a similar height and build to Jake, almost, but not quite as attractive. 'Molly, this is Zach. Zach...Molly,' said Jake.\n\n'Nice to meet you Molly,' smiled Zach.\n\n'You too,' she grinned. 'Sorry if I've delayed your run.'",
        "'No problem,' smiled Zach, shaking his head. 'I'd rather not have to bother at all to be honest but we're trying to build up our stamina before September.' Molly raised an eyebrow and tried not to smirk.\n\n'We got pressured into doing the Great North Run,' added Jake in explanation. \n\n'If you hadn't got us pissed on that bottle of J.D., we'd have had the wherewithal to talk ourselves out of it,' grinned Zach.\n\n'True,' agreed Jake good naturedly. 'Anyway, so far our training sessions have all tended to finish very prematurely in the 'The Rising Sun' pub a couple of miles downriver.'\n\n'That sounds like a great workout,' chuckled Molly. 'Besides, there are no shortage of pubs and bars in Newcastle so you'll have the necessary stamina in that department, even if you're hopeless at running.' Both of the men laughed.\n\n'Right, well, are you going to be OK?' checked Jake, having placed Molly's shopping on her back seat.\n\n'I'll be fine now. Thanks for picking me up, Jake. I mean...for picking me up off the pavement,' she stuttered, managing to read double-entendres into every sentence.\n\n'No problem,' laughed Jake. 'I'll see you at work. Good evening.' And with that, the two men raised their hands and began to jog away, along the river.\n\n***********\n\nThe following morning, Molly found herself hobbling precariously into work, her leg having significantly stiffened overnight.\n\n'What the bloody hell happened to you?' asked Jules, as Molly slumped into her chair.\n\n'Never mind that,' breathed Molly. 'When did the Chelsea Flower Show decide to set up shop in our office? Gazing around her in amazement, a large number of the desks in the vicinity seemed to have beautiful posies of roses on them. The scent which filled the air was phenomenal and Molly breathed in pleasurably.\n\n'No idea. Apparently, it was like this when the first person got in this morning.'\n\n'Well, I think they're gorgeous,' said Molly, smiling widely. 'What a lovely thought.'\n\n'So, what did happen to you?' asked Jules.\n\n'I was out shopping yesterday evening and a cyclist hit me and sent me flying.'\n\n'Shit! You poor thing.'\n\n'Yeah, fortunately Jake appeared, picked me up and dusted me off,' said Molly lightly.\n\n'Jake, huh? That was kind,' said Jules meaningfully.\n\n'It was kind,' insisted Molly. 'He was out training.'\n\n'Training?'\n\n'Yeah, he's in training for the Great North Run in a couple of months.'\n\n'So, he's fit in more ways than one,' giggled Jules. 'He's like a vintage wine; just keeps on improving as time passes.'\n\n'Have you always been so inappropriate?' smiled Molly shaking her head.\n\n'Only since I hit my forties,' grinned Jules. 'Before then I was a very refined and modest character.' Molly guffawed.\n\n'I don't believe that for a moment.'\n\n'Morning you two,' smiled Jake, approaching their desks. 'So, who's got shares in Interflora then?'\n\n'That is such a boy thing to say!' said Jules, rolling her eyes.\n\n'Being a boy, I shall take that as a compliment,' grinned Jake.\n\n'I wouldn't,' retorted Jules playfully.\n\n'How are you doing, Molly?' enquired Jake, facing her.\n\n'I'm...good thanks. Bit stiff,' said Molly, regretting her choice of words immediately as she felt a blush rising across her neck and face. Jules giggled unhelpfully.\n\n'I'm...not surprised,' said Jake, his lips twitching with amusement. 'So, what do you reckon the meaning is behind all these flowers?' he asked, trying to save Molly the embarrassment of a long silence.\n\n'Who can explain the workings of an irrational mind,' smiled Jules.\n\n'Thoughtful and irrational are not the same thing,' complained Molly. Jules rolled her eyes in response.\n\n'Well, if we are looking for literal meaning, then yellow roses denote joy and happiness,' explained Jake.\n\n'Come again?' queried Jules.\n\n'Different coloured roses mean different things. Red for romance, white for innocence, etcetera, etcetera,' explained Jake.\n\n'Seriously?' asked Molly.\n\n'Yeah,' grinned Jake. 'You girls think we have it easy, but there are all sorts of pitfalls we have to navigate.' Jules sniggered loudly.\n\n'So, what do orange roses denote?' asked Jules, nodding towards Molly's desk. Molly slowly looked around the room. Most of the bunches seem to be pinks and yellows. Hers, however, were a rich orange.\n\n'I'm not sure,' said Jake. 'I never said I was an expert.' Smiling, he walked away.\n\n'Google will know,' said Jules, tapping her keyboard. 'It's never let me down yet. Here we are... Oh.'\n\n'What?' queried Molly.\n\n'Desire, energy and excitement,' said a grinning Jules.\n\n'Oh. Well, I'm sure the colours were just dished out randomly.'\n\n'Mmm, probably,' said Jules. 'You should definitely fall over more often, though, if it means Jake passes by our desks more regularly.'\n\n'I'm sure he didn't come and talk to us purposefully,' said Molly quietly.\n\n'Are you?' teased Jules. 'Well, I'm not. To make sure he keeps up his visits, I think I'll start pushing you over myself in the future!'\n\n***********\n\nBy the end of July, Jake's warning of a possible restructure had become a reality. The previous afternoon, Molly had received an official-looking email informing her that, as part of the redesigned organisation, she now reported directly to Jake Hunter with immediate effect. Molly hadn't yet had chance to speak to Jake about the development, although considering she seemed to embarrass herself whenever she was in his company, that was probably a blessing. But now, as the clock swung round to half past nine, she had no choice but to confront her new boss, as per the instructions in the email. Molly slowly rose from her chair, laptop in hand and made her way to Jake's office. Outside the door she stopped, exhaled slowly and knocked three times.\n\n'Come in,' Jake's voice rumbled from within the office. Summoning up her best professional mask, Molly grasped the door handle and entered the room. Jake was already standing.\n\n'Hi Jake,' she replied, carefully closing the door behind her.\n\n'Let's sit over here,' said Jake, motioning towards a round table and four chairs by the window.\n\nOnce Molly had settled herself down, Jake selected the chair directly opposite her and sat down, his long legs angled to one side.\n\n'Welcome to my team,' he began, a smile playing on his lips. 'I apologise if this isn't the direction you were looking to take your career in, but I can promise that you will be given the opportunity to lead some interesting and high-visibility projects.'\n\n'Thank you,' breathed Molly, so far out of her depth she wasn't sure which way was up. Despite this, as they discussed the detail behind her new role, Molly relaxed into Jake's charming company. She found him highly knowledgeable, but also refreshingly amusing and self-depreciating, when so often men of his intellect, talent and position could become vastly inflated with their own self-importance. By the end of their meeting, Molly felt optimistic about her new role and confident that she could maintain a professional and effective working relationship with Jake, despite her previous concerns.\n\n'Before you leave,' added Jake, linking his fingers together and leaning backwards in the chair. 'I need you to know that I didn't push for you to join my team. Quite the opposite, in fact, given our previous exchange.'\n\n'Right,' breathed Molly, her neck starting to flush.\n\n'But,' Jake continued. 'The powers that be decreed that you should move into my team, so here you are. It was a decision that took place above my head.'\n\n'I understand,' said Molly. 'And it's fine. I'm sure we can make it work perfectly.'\n\n'I'm confident we can too,' smiled Jake. 'And now, I'd better get on. I've got another meeting in a couple of minutes.'\n\n'Of course,' said Molly, standing up from her chair. 'Thanks for your time.' Slipping out of the room, she returned quickly to her desk.\n\n'Hey you!' grinned Jules, as Molly slumped back down into her chair, feeling as though she'd run several emotional marathons, back to back. 'How did it go?'\n\n'Fine. As you'd expect,' said Molly. She had never shared her feelings about Jake with anyone, except inexplicably, Jake himself and now she was enormously glad she hadn't.\n\n'You're so lucky, working for such a hottie!' grinned Jules, seemingly not bothered about keeping her voice down. 'My new boss is Patrick. I mean, he's nice, but nowhere near Jake Hunter's league.'\n\n'Sshhh,' giggled Molly. 'You're so unbelievably indiscrete!'\n\n'What you see is what you get,' grinned Jules. 'Anyway, apparently Jake's in a relationship so I guess we can ogle all we want, can't we. We aren't going to be sampling the goods...worst luck!'\n\n'Is he really?' queried Molly, a cold wave passing across her body, making her brain feel numb. 'How do you know?'\n\n'Sylvie from accounts made a major pass at him a couple of months back. Apparently, it was a complete car crash,' cackled Jules. 'Jake was very kind but explained he was already taken.'\n\n'God, how embarrassing,' sighed Molly. 'Especially that the whole office knows.'\n\n'You know what they say? Never dip your nib in the office ink!'\n\n'Thanks for the advice,' grinned Molly. 'I don't intend to. Although I think you probably would, given half a chance.'\n\n'I certainly wouldn't need as much as half a chance,' Jules immediately retorted. 'One eighth would probably be quite sufficient.'\n\n***********\n\nMolly picked up her new role quickly and confidently. She found the work intellectually challenging but very interesting and she found Jake a supportive and encouraging boss. Finding out early on that he was in a relationship did have the effect of allowing Molly to relax more in his company, in the knowledge that although she might have a major crush on him, her feelings were highly unlikely to be reciprocated. However, she did often mull over the comment in his early message, implying that he also felt a strong sense of sexual tension between the two of them. When they were in each other's company, there was really no doubt that a spark flickered between them. The trick was to not add any fuel, lest it be encouraged to turn into a fully-fledged forest fire.\n\nA few weeks into her new role, Molly had her head down at her computer one Friday morning when a message pinged up from Jake. Over the weeks, their light-hearted banter on instant messenger had been growing increasingly silly, but although slightly outside of strict professional boundaries, Molly enjoyed it. Their repartee made her giggle as well as helping the working day go faster. \n\n[JHunter]: May I request the pleasure of your delightful company?\n\n[MButler]: That is quite an imposition.\n\n[JHunter]: For which I can only apologise.\n\n[MButler]: As you're my boss, I'll make an exception.\n\n[JHunter]: You're too kind.\n\n[MButler]: When and where?\n\n[JHunter]: My office and now.\n\n[MButler]: I shall be there in a jiffy.\n\n[JHunter]: I await with breathless anticipation.\n\nMolly chuckled to herself as she closed her laptop and walked towards Jake's office. Entering the room, she caught his eye and smiled.\n\n'Morning!' she trilled, as the door snapped shut behind her.\n\n'Good morning, Molly. How are you today?' queried Jake, his eyes sparkling.\n\n'Oh, you know,' said Molly breezily. 'All the better for seeing you.' Jake laughed.\n\n'Grab a seat,' he said, motioning towards the chair facing his desk.\n\n'Is this going to be so bad that I need to sit down?' smiled Molly.\n\n'Possibly,' nodded Jake. 'I'm addressing a conference later today and I wanted to invite you to join me. It's on a subject closely aligned to the virtual reality project you're managing so I thought you might find it interesting.'\n\n'Thank you,' nodded Molly. 'That sounds great.'\n\n'OK. Well, I'm leaving the office just before lunch. It's a bit of a drive away so if you don't mind navigating, we can travel together.'\n\n'Great,' said Molly, trying to hide how exhilarated she was at the thought of spending most of the rest of the day, alone, with the alluring Jake. 'Please can you give me a shout when you're leaving?' Jake nodded. Standing up to exit, Molly reached for the door handle, only to find that Jake was already opening the door for her. As their hands slid against each other, Molly predictably gasped and leapt sideways into a potted Ficus tree. The door clicked back shut.\n\n'Sorry,' she mumbled, trying to straighten the shrub, not daring to look into Jake's wickedly glittering eyes. She was starting to learn to act normally when in close proximity to him but on the couple of occasions their hands had touched, Molly was utterly lost.\n\n'No problem,' he replied, a smile twitching around his lips. 'I have to say, Molly,' he continued. 'Your reaction has just made even me question whether we're having a hot, raging and thoroughly illicit affair. Why are you are acting so incredibly guilty?'\n\n'Sorry,' Molly repeated, her neck flushing unbecomingly, grateful that Jake couldn't tell the difference between guilt and her overpowering desire. 'I'll see you later,' she mumbled as she grabbed the door handle and shot out of the room.\n\n***********\n\nBy the time Jake had collected Molly from her desk and they had walked out to his car, she had got a handle on her emotions and tried to put the latest in a growing list of embarrassing incidents to the back of her mind.\n\n'Right, you're in charge of navigation and entertainment,' said Jake, starting up the throaty-sounding engine. Molly sank back into the luxurious suede seat of his expensive Jaguar, inhaling the sexy new car smell.\n\n'Entertainment?' she queried, glancing sideways at his rugged profile. 'You only mentioned navigation in your office earlier.'\n\n'Mmm,' he murmured, pulling out expertly into the fast-flowing traffic and accelerating towards their destination. 'You know. Music, conversation topics...consider it a promotion,' grinned Jake.\n\n'You may live to regret that rash decision,' smiled Molly. 'I don't always have mainstream musical tastes. Do you mind if I plug in my iPod?' she asked, pulling it out of her handbag.\n\n'Be my guest,' said Jake, merging onto a dual carriageway and accelerating into the fast lane. \n\n'What sort of mood are you in?' said Molly, a smile playing on her lips.\n\n'I'm sorry?' asked Jake, sounding slightly confused. \n\n'My playlists are constructed around different moods,' explained Molly. 'The music tracks I like to listen to when I'm happy, for example, are a lot different to those when I need a boost.'\n\n'Got it,' replied Jake. 'In that case, I'd have to say playful.'\n\n'Playful?' asked Molly uncertainly. That sounded way beyond perilous.\n\n'That's right. Mischievous, troublesome, playful? I'm currently in a playful mood,' repeated Jake, casting a glance across at Molly to note her reaction.\n\n'Ri-ight. I don't have a playlist for that,' said Molly. 'So, I'll just have to improvise.' After fiddling for a short while with the device, grinning widely, she turned up the volume and flooded the car with 'I am the one and only'.\n\n'Dear God!' chuckled Jake. 'Are you sure you haven't selected your \"suicide\" playlist by mistake? This is tragic. I'm already regretting my decision to put you in charge.'\n\n'This is the cheesy playlist. You could always console yourself with the fact that the length of the car journey is at least finite,' giggled Molly, reducing the volume to a more acceptable level. \n\n'If my mood alters to \"depressed\" during the course of the journey, does the playlist get changed too?' chuckled Jake.\n\n'Nice try, but no,' grinned Molly. 'You're obliged to stick with your original decision.' Smiling, she closed her eyes and inhaled deeply, contentment washing over her.\n\n'Oi! No snoozing over there,' murmured Jake shortly. 'You're in charge of music and conversation topics. And you've only provided the music so far...and somebody less charitable than myself might even question whether you've done that adequately,' he sighed, as 'Livin' La Vida Loca' rang out from his speakers.\n\n'It'll do your car good to have something other than Boring FM on the radio,' she teased.'\n\n'Cheeky,' breathed Jake, looking across at Molly suggestively, an eyebrow raised. \n\n'So, you want music and conversation?' asked Molly, trying her best to ignore how hot being the subject of his gaze made her feel. 'You don't ask for much, do you?'\n\n'I'm very demanding. What can I say?' grinned Jake, casting a further brief look at Molly which seemed to scorch through her body and made her heart rate soar.\n\n'Fine,' she breathed. 'Are you nervous about your presentation?'\n\n'I can't possibly talk about work when I'm driving,' said Jake, looking totally relaxed as he cruised along the motorway at just above the speed limit.\n\n'OK,' said Molly, slightly floored. Non-work topics weren't going to be so easy to traverse. She'd better think of an innocuous one. 'Do you have any pets?'\n\n'That's an extraordinarily safe subject,' he grinned. 'I know you can do much better than that.' Molly felt a buzz of excitement pass through her body. This conversation had the potential to move way beyond the boundaries of a professional chat with a colleague if she wasn't careful.\n\n'Do you have any holidays planned?' asked Molly.\n\n'Too safe.'\n\n'Favourite food?'\n\n'Ditto,' he smiled.\n\n'What you studied at university?'\n\n'Please refer to my previous answer.'\n\n'Huh!' breathed out Molly in frustration. This was infuriating. For a little while she sat quietly, forcing her brain to work. But perhaps he had a point. She had been rolling off standard, somewhat lazy conversational questions and pleasantries, rather than properly engaging with him. Suddenly, a smile passed across her lips and turning to face Jake, she murmured. 'What gives you your biggest thrill?'\n\n'Better,' grinned Jake, nodding approvingly. 'I think that one might warrant an answer.'\n\n'Hooray,' laughed Molly. 'Success at last!'\n\n'Something adrenaline-fuelled, I guess. I did a parachute jump a few years back. Never again, but that was pretty intense at the time,' replied Jake. 'You?'\n\n'God, I haven't done anything near that exciting,' replied Molly. Watching the countryside whizz by outside the window, she considered her own question. In all honesty, her life was pretty mundane and safe. She was struggling to think of anything thrilling, other than her body's recent reactions to the man sitting beside her.\n\n'I'm afraid I'm going to need an answer,' teased Jake.\n\n'Lust,' replied Molly, completely unexpectedly. Her brain hadn't even been aware she was going to say it, until the word was half way out of her mouth. This was becoming a habit which she needed to break; surely, she should at least have control over her own voice? She stared forwards, not daring to look at Jake, as her neck began to flush.\n\n'I absolutely agree,' murmured Jake. 'Nothing beats it. Especially in the very early stages of a relationship, when you first find out that your feelings are actually reciprocated by the object of your desire.'\n\n'Yes,' croaked Molly, her eyes sliding shut, a heavy pulse now beating strongly between her legs.\n\n'The not knowing what the other person might do, what they like, what they need...' continued Jake in his quiet, deep, resonating voice. 'And then luxuriously taking the time to find out the answers. I agree. That's true adrenaline-fuelled stuff.'\n\nMolly didn't know either how to respond to him, or how to deal with the uncontrollable desire now racing through her body and so she did nothing. Instead, Jake's last comment was left sizzling in the air between them. As music tracks played, their silence continued as the car ate up the miles.\n\n'As you're also in charge of navigation,' murmured Jake at last, 'could you plug the postcode into the satnav please? I know the general location we're heading for, but not the specifics. I've written it on that page there,' he added, pointing towards his notebook in the central console.",
        "'Of course,' agreed Molly, quickly leaping at the chance to do something useful, as opposed to thinking about sex which was what she'd been doing for most of the journey. Quickly working through the intricacies of the satnav system, Molly completed her task and sank back down into the seat.\n\n'The conversation's dried up,' remarked Jake wryly.\n\n'Probably just as well,' grinned Molly.\n\n'Well, you're in charge of the conversation topics,' Jake reminded her. 'I'm in your capable hands.' If only that were true thought Molly, a shiver passing across her body at the thought of Jake physically being in her hands. The devil in her wanted to ask something outrageous like his favourite sexual position, or something equally inappropriate to ask your boss, just to stop his teasing. Molly sat thoughtfully for a while.\n\n'What's your favourite sense?' smiled Molly, feeling pleased to have come up with a seemingly innocent question which was unlikely to remain that way as the conversation progressed. The more she spoke to Jake, the more she wanted to be in the company of this teasing, edgy version of him.\n\n'Great question,' laughed Jake. 'You answer first this time.'\n\n'God! I don't know.'\n\n'Close your eyes,' he said gently. Casting a quick glance across at his profile, Molly did as she was told. 'Imagine you're lying on your back, your mouth slightly open, breathing steadily. All around you is warm, soft and dark.' Molly inhaled deeply, his hypnotic, sexy voice washing over her in waves of longing.\n\n'Imagine a man leaning over you. The object of your desire,' he continued. 'If you could have just one sense available to you at that moment, what would it be?'\n\n'Touch,' sighed Molly immediately, the image of Jake hovering over her naked body almost too much for her to comprehend.\n\n'Mmm, me too,' agreed Jake. 'But when touching one's hand is enough to send your pulse into orbit, just imagine what all five senses combined, across your entire body, would feel like.' Molly didn't require much imagination to know the answer to that question, nor to realise that Jake was referring to when their hands had accidentally touched in his office, earlier that day.\n\n'Just what are you trying to achieve here?' demanded Molly.\n\n'I'm testing your tolerance levels for sexual tension,' smiled Jake. \n\n'Well, you're so far outside of the acceptable range, it's outrageous,' Molly replied.\n\n'I wanted to gauge an understanding of how much you can handle. I did tell you I was in a playful mood. Would you like me to stop?'\n\n'Yes,' sighed Molly. She was supposed to be in work mode and all she could think about was what Jake would be like in bed. Her imagination had already come to the conclusion he'd be teasing, exciting and masterful before she had managed to shut down her thought processes on the subject.\n\n'Fair enough. I'll put my professional mask on, if you insist,' smiled Jake. 'But be warned, the authentic version of me might reappear on the journey home.'\n\n***********\n\nMolly had actually found the conference incredibly valuable although Jake had neglected to mention that he was actually the keynote speaker, presenting the final segment of the day. They had arrived during a refreshment break which allowed them to network with other conference delegates. The group had then shuffled back in to listen to the penultimate speaker explaining about the latest application of I.T. in policing. When Jake had taken to the stage to address the packed room, hearing him introduced as Doctor Jake Hunter made Molly feel a flash of satisfied pride, even though his achievements and qualifications were nothing to do with her. \n\nMolly had initially felt very nervous on Jake's behalf; had she been in his place, she had no doubt she would be a bag of nerves tripping over her words in front of hundreds of people and ultimately drying up completely. Her feelings of apprehension quickly fell away, however, as she watched a calm and professional Jake deliver an interesting, often humorous and very well communicated presentation. As his confident, well-spoken English accent filled the room, Molly closed her eyes and let the pleasurable sound roll over her. God, she could happily listen to his deep, sexy, unique voice for eternity. Jake rounded the event off by answering a set of challenging, sometimes downright difficult, questions posed by a very technical audience. By the close, as the entire room applauded enthusiastically, Molly inexplicably felt an overwhelming sense of pride.\n\nAs Jake left the podium, having shaken hands with the organisers, he caught Molly's eye and gestured that they could leave. Having made her way towards him, they exited the conference hall together and headed towards the car.\n\n'You were brilliant,' gushed Molly.\n\n'I thought I saw you drifting off?' teased Jake.\n\n'I was certainly not!' she argued. 'I was just...listening to your voice. I thought you did really well.'\n\n'It wasn't anything special,' said Jake. 'Just talking about work.'\n\n'Maybe. But you did it in a really engaging and interesting way,' she explained sincerely.\n\n'Thanks,' smiled Jake as he unlocked the car and held the door open for Molly to get in. Walking round to the driver's door, he shrugged off his suit jacket before sliding into his seat. Turning to face her, Jake studied Molly carefully as she put on her seatbelt and slowly raised her blue eyes to his. A jolt hit her stomach and she held her breath as adrenalin coursed through her body.\n\n'Would you like me to drop you back at the office or take you home?' asked Jake.\n\n'Whichever is easier for you.'\n\n'Have you left a car at work?' asked Jake. Molly shook her head. 'Then I'll take you straight home,' explained Jake. 'It'll be well past home time by the time we get back.'\n\n'OK, thanks,' breathed out Molly, as Jake started the engine and pulled away.\n\n'For the journey home, I think you should choose which music we have based on your mood,' suggested Jake. 'It only seems fair, as I chose on the way out.' Molly turned on her iPod and shuffled through to the appropriate playlist. 'Learning to fly' quickly filled the car.\n\n'Absolutely top track!' grinned Jake. 'I retract my previous statement about your music taste being tragic.'\n\n'You're too kind!' laughed Molly. 'Has complimenting people always been one of your key skills?'\n\n'Which mood playlist are we on?' chuckled Jake, enjoying her light-hearted comments.\n\n'Happy,' replied Molly, without missing a beat. Jake didn't need to be informed that this was actually her playlist for when she felt confident; sexy.\n\n'Do you want to do the honours and put your postcode in the satnav?' he queried, nodding towards the centre console. 'Just so I know where I'm heading.'\n\n'Sure,' agreed Molly, typing her home postcode into Jake's satnav and pressing enter.\n\n'Looks like we only live a few miles apart,' observed Jake. 'That's handy.' Not daring to ask what that was handy for, Molly settled back in her seat, happy to let the music wash over her.\n\n***********\n\nOne of the most frightening moments of Molly's life to date took place just a few miles away from her home. They were progressing along a straight, rural road when an oncoming car began to drift across the white lines and onto their side of the road, just in front of them. Realising what was about to happen, Molly yelped in horror as Jake took evasive action.\n\n'Fucking idiot!' growled Jake. As he swung sharply off the road to avoid the oncoming car, he slammed on the brakes as their car spun across the grass verge, narrowly avoiding an oak tree. Holding her breath, Molly grasped tightly onto her seat, her jaw firmly clamped shut in fear. The car eventually slid to a halt, leaving both parties breathing hard. Without bothering to ascertain if anyone had been hurt, the other car had simply readjusted its course and quickly driven away, no doubt aware of the very near miss which had just been avoided\n\nJake, who was sat clenching the steering wheel tightly with white knuckles, seemed to regain his senses first. Raising his head, he turned to look at Molly, her eyes bright with unshed tears, neck muscles taut with anxiety.\n\n'It's alright Sweetheart,' breathed Jake. Quickly removing his hands from the steering wheel, he unbuckled his seatbelt and moved in to comfort Molly. His initial reaction had been to provide a reassuring hug. However, as he leaned in close to her warm, sweet-smelling body, the primitive part of his brain took over control. Jake's hands tenderly slipped down either side of Molly's face as his lips dropped gently onto hers.\n\nThere were perhaps a couple of seconds delay, during which time a shocked Molly processed what had just happened. Moments later, her mouth naturally opened to Jake and she began to kiss him back hungrily. The feel of his urgent tongue sliding within her mouth was possibly the sexiest thing Molly could ever remember experiencing and as her hand slipped through his soft, dark hair and she pulled him closer towards her, a low, pained moan rose from his throat. Retracting himself, Jake leant his forehead against Molly's, both breathing noisily.\n\n'I'm sorry,' murmured Jake. 'That wasn't meant to happen.'\n\n'I'm not sorry,' whispered Molly. 'Not one bit. I understand though,' she added sadly.\n\n'You do?' queried Jake, moving back across to his side of the car.\n\n'Of course. You've got a girlfriend.'\n\n'I have?' asked Jake again, looking extremely confused.\n\n'That's what you told Sylvie,' explained Molly. 'From accounts? When she threw herself at you?'\n\n'Oh God,' sighed Jake, shaking his head. 'Is that office knowledge?'\n\n'Certainly seems to be,' agreed Molly. 'So?'\n\n'I was trying to be...kind? Tactful? Call it whatever you like,' explained Jake. 'I didn't want to tell her outright that I was single but I wasn't interested in her.'\n\n'So, you invented a girlfriend?'\n\n'It's worked before,' said Jake, slightly sheepishly. 'Sometimes a white lie is kinder.'\n\n'So, you don't have a girlfriend?' confirmed Molly. Jake shook his head. 'Why are you sorry then?'\n\n'Because I'm your manager. I have a duty of care towards you.'\n\n'And that was very caring,' sighed Molly, a wide smile on her face.\n\n'Molly, seriously...' began Jake.\n\n'Jake, seriously...' murmured Molly, leaning towards Jake's body, lifting her head towards his and brushing her lips against his mouth. Molly heard a rumble being emitted from deep within Jake's throat. After only a moment's hesitation, Jake reciprocated, his tongue darting enthusiastically across Molly's lips. As they opened their mouths against each other and sank into an incredibly sensual kiss, Molly's soft hand stroked slowly up Jake's firm, muscled thigh which she had previously caught a delicious glimpse of in his running shorts.\n\n'I want you,' she moaned into his mouth.\n\n'God, I want you too,' he replied. 'I've been dreaming of making love to you since my birthday.'\n\n'You'd better get us home then,' instructed Molly, pulling away from his body and sliding back into her seat, a massive smile on her face. \n\n'Seriously?' queried Jake. \n\n'God, yeah,' replied Molly, nodding emphatically. Breathing heavily, Jake started up the engine and carefully pulled back onto the road. \n\n'Talk to me,' he murmured, as they drove along the road, the evening sun dappling the road ahead.\n\n'About what?' Molly murmured, gazing at the towering, drop-dead gorgeous man sitting beside her, barely believing this was actually happening.\n\n'Where do you want to go? Yours or mine?'\n\n'I don't care,' sighed Molly. 'Whichever is closer.'\n\n'Mine's closer,' Jake murmured. 'A couple of minutes away. Look Molly are you sure about this? Please think carefully.'\n\n'Um, yes. I'm sure.'\n\n'Um, yes?' teased Jake. 'Yeah, that sounds like you're really confident!'\n\n'No,' argued Molly. 'What I mean is I'm sure I want this to happen. It's just my brain is trying to overthink things.'\n\n'What are you worried about?' asked Jake gently, as he pulled into a pretty village and adjusted his speed accordingly.\n\n'I guess I'm worried about how things might get screwed up at work.'\n\n'Yeah, it had crossed my mind. Very briefly,' added Jake. 'Much more fleetingly than it probably should have,' he sighed.\n\n'I'm also concerned about people finding out and changing the way they treat me.'\n\n'Not to mention both of us probably getting sacked.'\n\n'Oh, God. That hadn't even registered,' said Molly, shaking her head. 'Relationships between co-workers are against company policy, right? It does feel like there's rather a lot stacking up against us already, doesn't it?' smiled Molly. \n\n'Although, I have to say, it isn't putting me off at all,' said Jake wryly.\n\n'Me neither,' grimaced Molly. 'Quite the opposite.'\n\n'It doesn't have to get weird at work. We'll just have to ensure we aren't observed together being anything other than completely professional,' said Jake, indicating off the road and pulling down a long gravel drive.\n\n'But, of course, I do have some concerns about your stamina,' she added cheekily.\n\n'Just you let me worry about my stamina,' growled Jake. A red-hot flush of animalistic hunger raced across Molly's body at the very thought. She wanted this man more than she had ever wanted anything or anyone before in her entire life.\n\n'This is your place?' asked Molly in amazement, despite her swirling emotions. 'It's stunning.' Jake had cut the engine outside a beautiful thatched English cottage. It's exterior whitewashed walls gleamed in the evening sunlight, whilst honey bees flew laboriously between the large flowerbeds, brimming with cottage garden blooms. Green pastures surrounded them and there wasn't another neighbouring property in sight.\n\n'Thanks,' said Jake quietly. 'Molly?'\n\n'Uh-huh,' replied Molly, gazing into his exquisite blue eyes and almost losing herself in them once more.\n\n'I've got a feeling that once we close the front door behind us, they'll be no going back. So, if you aren't one hundred percent sure, stay in the car and I'll take you home.'\n\nMolly raised her eyebrows at him and then, opening the car door, stepped brazenly outside. Jake immediately followed suit. Making his way to her side, he confidently picked up Molly's hand and led her to his front door.\n\nMolly's body was buzzing by this stage, overwhelmed by the feeling of Jake's warm hand in hers, squeezing and stroking her fingers, already turning her body on. As he led her over the threshold, Molly had a moment to appreciate she was standing in a clean, bright and airy home. As the door closed behind her, Jake firmly locked the door, swiftly disarmed the burglar alarm and then turned to face her. Molly could see her barely contained desire reflected in his features.\n\n'You're not obliged to stick with your original decision,' he murmured.\n\n'But I so want to,' she breathed.\n\nIn one swift movement, Jake closed the distance between them. Cupping his hands around Molly's face, he dropped his lips down to cover hers as his body pushed her up against the wall and trapped her deliciously in position as his prisoner. Jake's overwhelming proximity meant that she became aware of the subtle lemon tang of his expensive aftershave which enveloped her senses. Molly's hands automatically moved across Jake's strong, muscled shoulders and into his hair, pulling him further towards her. As their tongues caressed each other's mouths, their breathing grew louder, unable to suppress the burning desire coursing through their entwined bodies.\n\nMolly's hands moved to Jake's neck, where she quickly dispatched with his tie and began to undo the buttons of his shirt. As she pushed herself further against him, she was super aware of his muscular, masculine body and heavy erection. Eventually, Jake broke their kiss, kicking off his shoes and panting heavily.\n\n'Follow me,' he ordered, as Molly slipped off her own shoes, took his hand and allowed herself to be led upstairs into the master bedroom. Once inside, Jake closed the curtains that faced the road, throwing open the windows which looked out onto the adjacent fields. He walked back to Molly who was standing in the middle of the room, watching his every move, whilst the sweet meadow air began to drift gently into the room. As he stood in front of her, Molly raised her hands back towards his body, but Jake caught her by the wrists and pushed her arms down until they hung back by her sides.\n\n'Stay there,' he growled. Gently, he unbuttoned Molly's jacket and allowed the clothing to fall to the floor, unwanted. Next, he moved his hands down to the waistband of her skirt, unbuttoning the item. With his hands on either side of her waist, he slowly helped the skirt to fall to the floor, following its progress, so that he was kneeling at Molly's feet by the time the skirt hit the floor.\n\nLooking down to see Jake kneeling directly in front of her body sent an intense pulse straight to Molly's core. She could barely continue to stand as his hands stroked over her hips and slowly caressed the front of her silk underwear. As his circling thumbs gradually made their way towards the centre of her body, she groaned with unsuppressed desire. \n\nJake moved his face adjacent to Molly's body and inhaled deeply, no doubt able to smell her arousal. He planted a soft kiss against the silk fabric and Molly felt herself sway, overcome with a previously unexploited desire coursing through her body. Slowly, Jake's fingers migrated to the base of her blouse where he undid the lowest button. Grazing his lips against her skin, he slowly kissed all the way up her body, unfastening the buttons of her blouse as he progressed. When, at last, her blouse was completely open, Molly's legs were shaking so much that she could barely remain standing. Standing in front of her once more, Jake then stroked the material over Molly's shoulders pushing her blouse down towards the floor where it joined her other discarded clothes.\n\n'You are stunning,' sighed Jake, drinking in the sight of Molly's soft, supple skin glowing in the orange light of the sunset, covered only by her black silk underwear. Bowing her head, Molly reached out for Jake's belt. Once she had contended with the buckle, she looked directly up into his eyes. His gaze didn't waver as she slowly loosened his trousers and they fell to the ground. Once she had unbuttoned and removed his shirt, Jake kicked away his trousers and socks and they fell together, as one, onto the bed\n\nJake's lips clashed urgently onto Molly's, needing, taking. When he manoeuvred his body so he was laying above her and his naked chest slid across her own soft skin, Molly thought she'd pass out from the adrenaline high. The weight of his solid body trapped her firmly in a position from which she never wanted to escape. Breathing sharply, Molly could make out the smell of clean bedsheets, washed in the same detergent as she had previously smelt on his clothing. Molly allowed her hands to roam through Jake's hair and across his muscular shoulders and back, all the while kissing him back with fervour. When her hands dropped further to stroke across his very well-muscled ass, still covered by a pair of cotton boxer shorts, a groan reverberated in his throat.\n\nBreaking apart, he placed butterfly kisses slowly down Molly's neck, across her collarbone and along the scooped line of her bra. Gasping for breath, Molly's eyes rolled back as Jake changed direction and headed across to place his mouth directly over Molly's nipple. Jake then brought his teeth into play, gently clamping them around Molly's sensitive flesh, still partially protected by her silk bra, until her body hardened satisfyingly beneath his touch.\n\n'Oh fuck,' groaned Molly as a strong pulse beat between her legs and a white spark of light seemed to flash across her retina, even though her eyes were closed. She felt ridiculously turned on and could feel liquid pooling between her swollen pussy lips. Almost imperceptibly, Jake's hand migrated behind Molly's back where he easily released the catch of her bra. Stroking the straps from her shoulders, Jake gently removed the offending article, allowing the warm air to caress Molly's naked breasts.",
        "'Mmmm,' murmured Jake as his lips wrapped gently around Molly's erect nipple and she felt an intense thrill pass through her body as his tongue darted firmly over her delicate skin. Ensuring the other nipple wasn't left out first, Jake then migrated further down her body. \n\n'I need you inside me. Please,' begged Molly.\n\n'So demanding,' murmured Jake, looking up at her from half way down her body, his tongue lazily circling around her tummy button. Hooking his thumbs inside the waistband of Molly's knickers, he slowly pulled them down her legs, eventually casting them aside, onto the floor. \n\n'You are incredibly sexy, Miss Butler,' sighed Jake as his lips dropped to Molly's neatly trimmed pubic hair and he inhaled deeply.\n\n'I'm also incredibly horny,' replied Molly, wriggling down the bed until her face was just below Jake's. Biting him softly on the shoulder, she pushed Jake gently back into the duvet. Molly's hands caressed their way down his body, over his taut stomach and down the line of soft, downy hair which eventually disappeared under his boxer shorts. Pulling his final garment of clothing gently down and away from his body, Molly was thrilled to uncover Jake's sizeable erection. Using the very tips of her fingers, she took her time, stroking up Jake's thighs and over his balls, revelling in the sharp intake of breath he made as her hand moved its way slowly up his thick, solid shaft. Molly couldn't help but close her eyes and moan softly at the feel of Jake's incredible cock which she began to stroke softly in the palm of her hand.\n\n'Aaah,' sighed Jake, the sound causing Molly's pussy to contract in anticipation. 'It's your decision,' groaned Jake, 'but if you're going to do that for more than five more seconds, I need you to move round here, onto your hands and knees, so I can touch you too.' Despite her pulse racing way beyond normal safe limits, Molly shuffled her body around and raised herself onto her hands and knees, as instructed, before returning back to stroking him.\n\n'Mmm, better,' smiled Jake. When he placed his hand on the inside of Molly's knee, she found her body jumping at his initial touch. This quickly turned into a gasp of severe anticipation as his large, warm hand encouraged her legs to move slightly further apart.\n\n'Mmm, much better,' he groaned, as Molly began to circle her wet thumb over the engorged head of his cock. With the lightest of touches, Jake began to run his fingers teasingly along Molly's inner thigh, fully aware of the desperate tension he was causing in her body. When he reached her swollen lips, he briefly brushed across them before allowing his hand to migrate down, and tenderly caress, the opposite thigh. By this time, Molly was panting nosily and her grip around him had tightened considerably.\n\nVery slowly, Jake gradually trailed his fingers towards the pool of liquid which had collected between Molly's swollen lips. As he gently pushed one finger forwards to break through the dam, Molly cried out with desperate need. He slowly slid his finger forwards, through her folds, until he reached the base of her clit. There, he held his finger, applying exquisite pressure, allowing the tension to build.\n\n'Fuck me,' exhaled Molly, through gritted teeth.\n\n'Expletive or request?' asked Jake.\n\n'Either. Both,' cried out Molly as, at the same time, Jake slowly added his thumb into the mix, which he positioned at the top of Molly's clit, almost imperceptibly making a small circular motion.\n\n'You ok to use a condom?' groaned Jake as Molly began a set of very slow strokes.\n\n'I'm on the pill,' gasped Molly as Jake slowly began to ramp up the pressure and she felt the early signs of an orgasm building inside her body. 'I need to feel you.'\n\n'OK. I had my annual work medical recently. I'm all clear.'\n\n'Me too,' groaned Molly as her internal muscles began to clench desperately and a wave of dangerous, burning need passed across her body.\n\nSuddenly, Jake's large hand clamped tightly around Molly's wrist, preventing her from stroking him any further. He quickly manoeuvred Molly back onto the bed, leaning down over her. As he dropped his mouth to hers, Molly automatically wound her legs around his waist, pulling him closer. Moving his hand between their bodies, he positioned himself accordingly, revelling in the slippery, warm feeling as he pushed marginally into the hot, liquid pool between Molly's legs. Leaving himself resting adjacent to her tight entrance, Jake replaced his hand down beside Molly's head.\n\nBreaking their kiss, he pulled his head slightly away and gazed deep into her eyes. Without a word, Jake began to slowly slide into Molly's tight, desperate, quivering body.\n\n'Oh...my...God,' groaned Molly as Jake's thick, heavy cock began to unforgivingly bury itself within her, every wonderful ridge and curve of him feeling gloriously magnified.\n\n'Look at me,' ordered Jake, as Molly's eyes threatened to flutter shut, overwhelmed with the intensity of what she was experiencing. 'I want to keep watching the raw hunger in your eyes.' Despite smiling tenderly at her, Jake continued to sink himself mercilessly into her tight, twitching body until he was buried to the hilt. Molly took a sharp breath, aware that she was currently being stretched further than her body had ever before experienced and loving every second of it. Rocking his hips, Jake pulled part way out of Molly, before pushing himself forwards once again.\n\n'Aaahhh!' groaned Molly as her internal muscles desperately clenched around Jake's solid mass. Once again, Jake retracted, pausing for a short time, before thrusting himself deep inside Molly's body once again. Molly cried out, a ferociously strong orgasm building threateningly inside her with ever stroke.\n\n'I can't wait to see you lose control,' breathed Jake, partly pulling out once more, forcing Molly to wait for the overwhelming sensation she knew she would feel when he ploughed himself back into her body. 'You,' said Jake, slamming himself into Molly and then pulling back again. 'Are...so...fuck...ing...sex...y,' he groaned, thrusting his hips with each syllable muttered.\n\n'Oh God! Please don't stop!' begged Molly, as she began to scale the heights of her climax. 'Please. Please.'\n\n'You like it hard, huh?' grunted Jake. With a pleading groan, Molly nodded, unable to find the words to respond. 'Hold tight, then.' Placing a hand out to brace himself, Jake hooked one of Molly's legs up so that her calf lay against his shoulder to open her body wide to him. He then began to thrust long and hard with a regular rhythm which made Molly cry out with desperate need and pushed her frenziedly towards the dizzy heights of her first terrifyingly all-consuming orgasm with Jake. Just before Molly's release, when her body was tense and set to explode, Jake sucked his thumb into his mouth and began to roll it gently around Molly's clit. At the same time, he speeded up his thrusting hips until Molly was pushed effortlessly into a noisy, violent orgasm. As pleasure crashed through her body, Jake lay still, enjoying the feeling of her internal muscles contracting in waves around his rock-hard cock. Just as it seemed she was starting to recover, Jake recommenced his circling thumb and rocking hips. \n\n'Oh no! No!' moaned Molly as Jake pushed her body immediately back towards a second climax. Showing no mercy, he continued to drive her body onwards, pushing her way beyond the boundaries of pleasure she had ever previously experienced. When Jake felt her beginning to tire, he dropped his mouth to her nipples and clamped his teeth down. Molly roared in response, the sensation acting like a jump start to her fatiguing body. A short while later, Jake began to thrust in a more random and much less controlled way.\n\n'I'm sorry, I'm gonna come,' he groaned and, despite her exhaustion, Molly could feel a corresponding change in the feel of Jake's thick cock within her and her body clenched even more tightly around him in response.\n\n'Oh God!' shrieked Molly as Jake slammed himself harder and harder within her and her muscles spasmed in one concluding climax. With a final thrust, Jake roared defiantly as he pumped his cum deep inside Molly's shattered body. As they collapsed back onto the bed, Jake dropped his lips to Molly's and kissed her tenderly, on and on. When at last they parted, Jake pulled a blanket half-heartedly over both of them and pulled Molly against his body.\n\n'Mmmm. Is it wrong that I already want you again?' Jake muttered, as they fell into an exhausted sleep.\n\n***********\n\nIt was dark when Molly woke up. Her first conscious thought was the thrilling realisation that she was waking up in Jake Hunter's bed and, even better, in his arms with their naked bodies tightly entwined. Her next thought revolved around how she might go about disentangling their bodies and finding the loo in the darkness of a strange house. Some food to quell her rumbling stomach wouldn't go amiss either. As she tried to shift slightly out of Jake's embrace, he began to tenderly stroke her hip.\n\n'You're awake?' he murmured.\n\n'Yeah. Do you mind if I grab something to eat?'\n\n'Course not,' Jake chuckled as he rolled over and turned on the bedside light. Molly felt her stomach churn with desire at the overwhelming sight of him; hair uncharacteristically messed up, pillow creases across his forehead and a light layer of stubble covering his handsome face. 'Sorry. It wasn't a very chivalrous thing of me to do was it? Drag you straight into bed? Our first date consisted of a rampant shag and no dinner.'\n\n'I don't think it could have been more perfect,' giggled Molly.\n\n'My dressing gown's hanging in the wardrobe,' said Jake. 'Help yourself.' Molly stood up, located the soft garment and shrugged it on. 'And the bathroom's behind that door,' grinned Jake, apparently reading her mind.\n\n'Thanks,' said Molly, darting into the room. By now, her thighs were tightly clamped together as she felt the remainder of Jake's cum starting to trickle out of her body under gravity.\n\nWhen Molly re-entered the bedroom, Jake had thrown on a pair of scuffed Levis and a white T-shirt. She was slightly taken aback to see Jake in casual clothes, as opposed to his suit, but not in the least surprised that he looked even sexier dressed-down than he did at work. Glancing at the clock, she saw it was almost midnight.\n\n'Would you prefer me to go home?' asked Molly, feeling it would be presumptuous to indirectly invite herself to stay the night at Jake's home.\n\n'Do you want to go home?' he queried.\n\n'Not particularly,' said Molly truthfully.\n\n'Good. Because there's no way I'm letting you escape from my charge tonight,' grinned Jake. 'Now, let's get you something to eat.'\n\n***********\n\nAfter a midnight snack consisting of a range of goodies from the fridge and a bottle of red wine, Molly's rumbling stomach had been silenced. It was strange how her relationship with Jake had changed over the past few hours. Molly felt much less shy of him, although still incredibly intimidated by how God damn sexy he was. But sitting on bar stools, leaning against the granite island, Molly was pleased to realise that aside from the phenomenal sexual element of their relationship, the conversation was great too. They just naturally clicked. From their working relationship, Molly was well aware that Jake was dangerously intelligent but it was becoming increasingly obvious that he was also kind, thoughtful, cheeky and very funny.\n\n'Would you like anything else to eat or drink?' asked Jake.\n\n'No, I'm good. Thanks,' smiled Molly.\n\n'You told me that once before, but you're not that good,' he grinned. 'If you were good, I'm not sure you'd be sitting here in my house, in the middle of the night, with only my dressing gown to protect your honour.'\n\n'You're probably right,' chuckled Molly.\n\n'Now, I know it's late,' murmured Jake, with a smile playing across his lips. 'And it's been a long day. But I have a desperate desire to have a shower with you.'\n\n'That sounds nice,' sighed Molly.\n\n'And then I want to go down on you,' murmured Jake, his eyes crinkling at the edges. 'Does that sound nice too?'\n\n'Oh!' said Molly, her stomach flipping over upon hearing his very direct suggestion. 'Yes. That sounds very nice.'\n\n'And then I need to make slow, tender love to you.'\n\n'Mmmm.'\n\n'Well?'\n\n'Yes to all of the above but I want to go down on you too,' she added, leaning towards him to stroke his hairy forearm.\n\n'I'm sure we can come to some kind of mutually beneficial arrangement,' grinned Jake, grabbing Molly's hand. 'Follow me.'\n\n***********\n\nUnder the steaming power shower, Molly and Jake spent some very pleasurable time sliding their bodies together and slithering their soapy hands across each other's slippery skin. Molly was fortunately pretty confident about her body which was relatively athletic from the cross-country running she'd been doing since she was a teenager. Equally, Jake had no reason not to be confident; he was divine with well-muscled thighs, a taut stomach and a strong upper body. The feel of her wet hands slipping their way across Jake's skin was sending Molly's pulse rate sky high.\n\n'Turn around,' murmured Jake. 'Let me soap your back.' Doing as she'd been requested, Molly turned away from Jake, leaning against the marble-effect wall of the large wet room. As Jake's firm, confident hands massaged across her shoulders, Molly moaned quietly at the intensity of sensations she was feeling. Slowly his hands migrated down her spine, eventually circling over her buttocks and making her pulse rate quicken yet further. As he slipped his fingers down the cleft of her bottom, Molly involuntarily opened her legs fractionally wider. Leaving her anticipation to build, Jake declined her unspoken offer.\n\nTaking a step forwards, he lay his chest against Molly's back. As Jake's hands slid across her stomach and gently over her breasts, Molly closed her eyes and pushed her weight back against him, wishing the moment could last forever. She could feel his thick erection pushing against her back and, with a thrill, knew that it would soon be sliding inside her tight pussy once more.\n\n'I reckon we're clean,' murmured Jake, shutting off the shower. Turning, Molly looked into his eyes as he gently wrapped her in a soft, white towel. His wet eyelashes were stuck together like starfish. 'Time to get dirty again?' he suggested. Throwing a second towel around his waist, he led Molly back into his bedroom.\n\n'When I was teenager,' explained Jake, removing Molly's towel from her body and tenderly patting her dry, 'sex was an utter mystery to me. I remember trying to piece together the snippets of information other kids had mentioned and eventually, once I was old enough to start getting some practice in myself, I got the general gist of it.' Not sure where he was going with this line of conversation, Molly said nothing as Jake finished drying her then eased her gently back onto the bed. \n\n'But the one thing I didn't understand for a long while was how oral sex worked. Embarrassingly, I thought you just licked, like a cat might lick a saucer of milk,' he grinned with a small, self-depreciating shrug. 'Let me show you what I mean.'\n\nGently, he lowered himself over Molly who automatically raised and opened her legs, a small moan stealing out of her throat as he settled himself between her legs, his large body forcing her to remain fully open to him. Molly had already been thoroughly turned on in the shower and, as she opened her legs, she became aware of the full extent of her arousal and the pool of liquid moving deliciously inside her. Jake hovered just over her swollen, wet lips, dragging out the moment. Molly could feel his breath against her body and groaning, she closed her eyes and arched her back in blissful anticipation of what would follow.\n\nWhen his tongue first slid gently against her slick lips, Molly cried out with a desperate need. With short, gentle strokes, Jake continued to lick around Molly's most intimate area, teasing his way around her tight entrance, but never once approaching her clit. After a short while, through her panting, Molly heard Jake's voice once more.\n\n'And I remember thinking,' he sighed, 'this can't be all there is to it. Maybe if I were to use long strokes with my tongue instead?' Dropping his head back down to her body, Jake slid his tongue the entire length of one of Molly's swollen lips, before repeating on the other side. Continuing to do this, he occasionally skimmed the very edge of her clit. When he did so, Molly groaned and her hips bucked, desperate to feel his mouth surrounding her and drawing her in. Once Jake felt he had teased her enough, he lifted his head once more.\n\n'But I still wasn't content,' he murmured. 'I didn't think I'd cracked what oral sex was about. And then I had a Eureka moment. I realised that tongues can do a lot more than lick, can't they?'\n\n'Ohhhh,' moaned Molly as Jake dropped his head back down to her body once more, but this time, he was using his long, rigid tongue to gently push inside her tight entrance. Sliding slowly in and out of her body, Molly threw her head back as her hands tightly grabbed the pillows on either side of her head.\n\n'Oh my God,' she groaned. 'Please don't stop.'\n\n'But I hadn't finished developing my idea,' grinned Jake, stopping. 'Because I realised I'd only been thinking about oral sex in terms of my tongue. Which was a mistake. I had much more to offer than just that. For a short while, I wondered if using my teeth would work, but I quickly rejected that idea.'\n\nDropping his head back to her body, Jake moved his mouth across Molly's most intimate area, closing his teeth randomly as he went. Feeling her sensitive lips grasped gently between Jake's teeth felt unusual, dangerous but highly sexy and Molly's gasps became louder and louder as he varied the pressure with which he held her.\n\n'Hmm,' smiled Jake, amused by the range of groans and cries Molly had made. 'Perhaps I rejected the use of my teeth a little too quickly. I might have to carry out some further research with you at another time. But by then, I'd realised I hadn't given any thought to lips and how they enabled me to introduce sucking into the equation.'\n\n'Oh fuck,' groaned Molly, as Jake hovered directly above her sensitive nub. He hadn't touched her clit so far and Molly knew that when his mouth eventually closed in on her, the feeling would be indescribable. Jake continued to linger, encouraging the pleasure of her anticipation to build. Eventually, instead of doing as she had expected, Jake dropped his lips to Molly's inner thighs, using his tongue, lips and teeth to show her exactly what he was capable of and how skilled his mouth had become.\n\n'Please,' cried Molly. 'Please.'\n\nSensing her desperation, Jake trailed his tongue back to Molly's core, pushing it through her velvet folds until it reached her tight entrance. He then, torturously slowly, pushed his tongue upwards, moving progressively closer to her rigid clit. When he eventually made contact and nudged his way over the highly sensitive site, Molly groaned loudly, the sound physically hurting her throat. Gently, Jake wrapped his lips around her clit, sucking it gently into his mouth, where he darted his tongue across the delicate skin until Molly noisily lost control underneath him. Jake continued to manipulate her swollen, over-sensitive body, revelling in the potent climaxes he was responsible for causing. Eventually, gasping for breath, he released her.\n\n'But I still didn't think I'd quite cracked it,' sighed Jake. Molly groaned, forcing Jake to chuckle. She had clearly assumed he would give her a chance to recover after orgasming so hard for so long, but that really wasn't Jake's style. 'I suddenly realised that even greater pleasure could be given if I incorporated my fingers at the same time.'",
        "'You utter bastard,' Molly groaned, as Jake's lips and tongue playfully encouraged her clit back into his mouth, whilst he edged two fingers slowly inside her. Molly's whole body seemed to tense as her muscles clamped down tightly onto Jake's fingers. As her muscles contracted in waves around him, she came loudly, over and over and over again. But Jake clearly hadn't finished with her yet. As Molly began to descend from the heights of pleasure he had been holding her at, Jake decided to push her straight back up and over the precipice once more. Sucking her clit firmly once more, he pushed a third lubricated finger into her tight ass.\n\n'No!' gasped Molly, as she realised what he had done. Moments later, Molly came louder and harder than she ever remembered doing in her life. Her desperate cries filled the room; a combination of pleading for leniency coupled with demanding that he should never, ever dare stop. There was such pressure in her head and behind her eyes that all she could hear was the noise of her heartbeat pulsing noisily in her ear drums. With a combination of his mouth and fingers, Jake held Molly at the brink of pure, ecstatic bliss for as long as he felt she could physically handle, before eventually retracting himself from her breathless, exhausted body. Wriggling his way back upwards, he lay alongside her. Molly couldn't even open her eyes. Pulling the covers over the both of them, Jake switched off the light. He could tell when somebody was completely and utterly spent and she was. On reflection, Jake grinned to himself in the darkness, he might have slightly overdone it but he knew it was an experience she'd struggle to forget for a long, long time to come.\n\n***********\n\nI hope you enjoyed this story. As always, I'd love to hear your feedback and/or voting scores. And special thanks to P for providing me with some incredibly constructive feedback on a previous story - I hope Jake measures up :-)"
    ],
    "authorname": "FenellaAshworth",
    "tags": [
        "boss",
        "desire",
        "hot sex",
        "orgasm",
        "anticipation",
        "lust",
        "oral sex"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/management-skills"
}