{
    "title": "How to Have Great Sex Over 50",
    "pages": [
        "5 myths about great sex for men over 50\n\nP.S.-show this to your husband or lover\n\nWe're all (hopefully) going to get there. No need to worry. You can keep your sex life crazy.\n\nI remember when I was approaching thirty. It seemed like a huge number to me. When I was 19, thirty was my definition of old. So as it approached I was understandably apprehensive. And what happened was...nothing. Still lifted, still ran; still partied as much as I wanted to. And I was smarter; had more money and a nicer car. Life was good.\n\nFast forward 9 years...\n\nForty approaching faster than I could have imagined. So busy with work, kids, house and life that the years went by in a blur. But there were differences. Some premature gray. Hairline heading south a bit. I still felt the same, though. My workouts were hard and consistent, my energy level good. What's the big deal about this aging thing, anyway? Except for people in their early twenties calling you sir.\n\nFast forward 9 years...\n\nHoly crap, shit is getting real! Where did these lines on my face come from? Is my cock going to fall off soon? This is unchartered water. Am I old now? Is my sex drive gone? Do I even need my dick anymore? Will I start talking about my health and stock portfolio soon instead of sex, drugs, and rock 'n' roll? \n\nDon't panic. You'll read and hear a lot about being over 50. Some of it is true. You should get checkups, etc. to keep small problems from becoming big ones. But the things you read about sex are largely unsubstantiated bullshit. Myths that can affect your confidence.\n\nI'm going to give your confidence back with a healthy dose of the truth (see what I did there?).\n\nThe 5 most disturbing myths...and the truth (as I see it)\n\n1. After 50 you just can't perform sex as well.\n\nThis is the most destructive myth there is and patently untrue.\n\nWe used to measure our sexual prowess by how many times we could cum in a night. \"We did it five times last night!\" you beamed at 19 years old, thinking that number made you a super stud to be desired by every woman, if they only knew.\n\nThink again.\n\nAs a young man, a lot of your feelings about sex are tied up in what's important at the time. Your ego, how you look (more on that in a moment), how many times you can cum in a night. How far you can shoot your cum (maybe that was just me). Sex is all about quantity. You really didn't know or care how a girl thought or felt. it's a confusing time. I remember.\n\nAs you get older, you learn that feelingand listening to what a woman wants put you on path to sexual prowess. That even something as simple as a kiss, when delivered passionately and softy, can make her feel like she's being fucked. \n\nTaking your time, worshiping her body, appreciating every inch of it, is something that simply doesn't occur to a slam-bam younger man (wow\u2014that rhymed!) \n\nThis is perhaps the primary reason younger women like older men. Older men are less into themselves and their possessions and much more into the pleasure of being with a good woman (and being good with a woman), and they know how to express it.\n\n\"I ain't as good as I once was, but I'm as good once as I ever was.\" \u2014Toby Keith\n\n2. After 50 sex just gets to be the same old, same old; nothing new\n\nNo, sir.\n\nThink about how much you've learned in your life. How you've had to creatively solve problems at work and at home. Overcome obstacles. Strive to be where you want to be.\n\nIf you apply that attitude to sex, you're a stud already and always will be.\n\nIt wasn't until I was older that I realized that what I thought were fetishes were actually normal. (Fetishes are, however, cool.) In fact, that there really was no \"normal.\" My normal and someone else's normal are worlds apart.\n\nWould you like a fast and easy way to change \"Same old\" into \"Yes, please!\" \n\nWrite down sexual scenarios in which you'd like to be involved. Write them on small pieces of paper and put them in a jar. Here are some thought starters:\n\n\u2022 You've been in prison for 2 years without sex and I'm the new prison guard coming to visit you at night. What do you want to do with me?\n\n\u2022 I'm a casting director and you want to be a star. What can you do to get that part?\n\n\u2022 You've always wanted to try bondage or a little rough sex and I'm new at it. Can you show me how to turn you on?\n\n\u2022 I'm just back from military duty and have 2 hours before I have to leave again. How do you want to spend it?\n\n\u2022 Will you pick out porn from the internet that turns you on and watch it with me?\n\nEnough about my fantasies. Whether or not these scenarios are appropriate for you is not for me to say. What matters is that you can get creative in your own way. And creativity keeps sex hot. Just so you know, your lover can do the same thing with her fantasies. There should be no winners or losers; no judgments. \n\nAs far as trying new things, it's not an age thing. I never thought I'd have a leather-wearing girl tied up and begging me to spank her ass\u2014the same ass I was fucking\u2014while I alternately shoved a vibrator in and out of her eager pussy. You know, a normal Friday night. There are so many new things I learned after 50 that I can't list them all. But they are all good. It just takes the right partner, a little imagination, and a healthy dose of being twisted. Just kidding. Sort of. \n\n3. After 50 you lose interest in sex.\n\nI expected that to happen. I waited for that to happen. I lost sleep over the prospect of that happening. \n\nIt never happened.\n\nI think that was passes for losing interest in sex is losing interest with having the exact same sex with your partner, or surrendering the fact that perhaps they've lost interest and so to keep your sanity and your family intact, you've managed to suppress your desires.\n\nThat sucks. It doesn't have to be that way. I personally don't believe you can have a good relationship without satisfying intimacy. No, it doesn't have to be four times a week (it doesn't not have to be, either). \n\nIf two people are willing to make the effort, their sex life can and should still rock. Maybe not every time, but often enough. This takes communication. This takes alcohol. This takes porn. Whatever it takes, do it. It's not your age, because you know what you'd be like with a new girlfriend (or boyfriend). It's your situation. Two people with strong sex drives should be having good sex to the grave.\n\n4. After 50 you turn into a fat old man that nobody is attracted to.\n\nOnly if you let that happen. The best way to stay in shape is not to get out of shape. I must say that most of my friends have let themselves go. Not all of them. My best friend is a second-degree black belt who, at 58, is in terrific shape. I work out six days a week for 30-40 minutes. That's all it takes. Eat clean and exercise. \n\nIf you think it doesn't matter, if you think nobody looks anyway so what's the difference, you're wrong. Women, even young women, will always admire a strong, toned physique. They do in my world. The young guys walk with no swagger when they're with me because they know I can work out as hard as they do or harder. What I get a lot is, \"Dude, I hope I'm in the shape you're in when I'm your age.\"\n\nIt's not the age, it's the effort. Your wife or partner will not mind seeing you in great shape, believe me. \n\nIf you want to get into better shape, you can go the all in \"Insanity\" or \"P-90X\" approach and bomb it, or just made steady, gradual changes in what and how much you eat, drink, and exercise. Losing a pound of fat a week equates to 50+ pounds a year and is not that hard.\n\n5. Women don't want to be \"dirty\" with a guy my age. The wild days are over.\n\nYou've been hanging out with the wrong women.\n\nListen, bud, plenty of women want to be just as wild and edgy as you do. It never surprises me when, after a breakup or divorce, a man or women finds a partner with whom sex is the wild adventure they'd always dreamed of. She lives to suck his cock. Not only is her ass not off limits, she loves it when he tongue-fucks it and shoves his cock in. He doesn't just talk during sex, he drives her wild by saying things at the right time in the right way that make her cum harder and harder. Or instead of being nearly silent, she screams his name and claws his back.\n\nIf you think you can tell by looking at someone whether or not the sex will be fun, hot, and life-affirming, you're sadly mistaken. The best sex -best intimacy\u2014I've ever had in my life was with someone who looked as prim and proper as I've ever seen. Talk about not judging a book by its cover; she was the best lover on earth.\n\nAnd yet, it's puzzling how it never happened with your previous partner. This, my friends, is called chemistry. And when you find it with someone, you are likely to have the best sex of your life. Trust me. When you find the ying to your yang, the sex and just overall intimacy can be earth shattering.\n\nBut what if the person you're with, a person you love and want to stay with, does not have that chemistry with you? \n\nI would be lying if I told you that you could just snap your fingers and make it happen with them. Sometimes there's just someone who does it for you, and they are not the person you're going to spend your life with. This is sad, yes, but there is actually\u2014no, it's true\u2014more to life than sex and may have a wonderful relationship in other ways.\n\nStill, barring illness, there should be nothing preventing open and honest communications about wants, needs and desires that lead to a more satisfying sex life. This starts with a conversation and taking action. And you have to keep it up and work on it; it's not one and done. Keep moving forward until a great sex life becomes the norm.\n\nConclusion\n\nIf you want a rocking sex life you can have it\u2014yes YOU\u2014if you're willing to throw away useless misconceptions and get to work. If you take one thing away from this article it should be this: if you are not having the sex life you want and need, it's not your age holding you back. It could be your partner; I hope not. It could also be your approach and your attitude. If I see you with a beaming smile at work tomorrow, I'll know you listened to my advice. I know who you are! I'm wishing you good luck with great sex."
    ],
    "authorname": "BatsandGlamour",
    "tags": [
        "sex over 50",
        "mature sex",
        "adult sex",
        "sexual fantasies",
        "great sex",
        "active sex",
        "fulfilling sex",
        "wild sex"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-have-great-sex-over-50"
}