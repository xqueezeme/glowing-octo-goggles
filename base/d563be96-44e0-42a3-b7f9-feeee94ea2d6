{
    "title": "The Twelve Vitali Ch. 16",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they mean the world to me and have brightened my days. I have particularly enjoyed the comments championing Cat character, thank you for those. While this chapter may dismay some but have a little faith that our heroine is and will very much remain the beautiful and flawed woman you all know and love. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n\"Come, Pet,\" Hella said, and took a seat in the only chair in the room. She watched as the young woman looked around and stood uncomfortably shifting from foot to foot as if she knew she needed to sit somewhere but didn't understand. \"There is a padded leather square for you to kneel on,\" she indicated a spot on the floor near her chair.\n\n\"Thank you,\" Cat whispered. Dealing with a rush of adrenaline and confused emotions, Cat followed the direction without thinking and knelt on the surprisingly soft leather square. Unsure of what to call the woman, she added, \"Mistress?\" as a question.\n\n\"In this room, you may call me Miss Hella,\" she said with a friendly smile, as Cat seemed to be trying to observe the few protocols she knew. \"I have been told that you have a limited understanding and little to no experience with the BDSM lifestyle. However, your past and Nero's observations have placed you here in my care. You have a lot to learn, and this interview will be longer and possibly more trying for you than the usual, because that collar on your neck tells me that someone is impatient to offer you a contract when you leave my care.\"\n\nCat said nothing as she looked up at the woman who spoke to her as if what she was doing was the most normal thing in the world.\n\n\"Have you been intimate with a woman before?\" Hella asked.\n\n\"No, Miss Hella,\" Cat said. \"I have never felt that sort of attraction or affection towards women.\"\n\n\"A simple no will suffice. If I want further information I will ask,\" Hella said brusquely. \"Since you bring it up, in your role as a submissive, what you are attracted to and who you feel affection for will have no value. You will obey whoever owns your contract. You may have a trial period to see if you are compatible, but make no mistake, there will be no love involved. Some Kept, after a renewed contract, can be held in high regard, but there is little room for affection or emotion in your role.\"\n\nThere was no question, so Cat remained silent, not wanting to anger the Mistress in this first interview, and she had been told once that if Hella wanted to know something she would ask.\n\n\"For many Dominants, the thrill is wrapped up in the power exchange, not the sex act itself. They crave the power you give them when you submit fully to whatever they wish, whenever they wish. It is, for this reason, you must insist on safe words and set limits on your use, or you may find yourself with permanent damage, not only to your lovely body but your mind as well,\" Hella lectured in a kind tone. \"The men who take your contracts will not know anything about you except what we tell them in your profile. It is important that you are unscrupulously honest about what it is you like, what you can endure but do not like, and acts that you find you cannot endure no matter what the enticement.\"\n\nCat nodded her understanding, even though she hadn't been asked if she understood. She watched as Hella picked up a clipboard and looked at it.\n\n\"This is a quite extensive list of sexual kinks and fetishes, and what I would like when I read out each one is to know if you love it, like it, endure it, are curious about it or find it is a limit. If it is a limit, we will explore if it is a hard or soft limit. Do you understand those terms?\"\n\n\"Yes, Miss Hella,\" Cat said softly.\n\n\"Good, we'll start with the more common ones and move on from there. It will also give me a good idea of your experience,\" Hella explained looking back at her list. \"Name calling?\" she asked.\n\n\"Depends on the names and if it's in the heat of the moment or if it is a constant occurrence,\" Cat answered honestly.\n\n\"Let's go through the options again, shall we? You will answer with love it, or like it, or endure it, or curious about it, or it is a limit. Do you understand those terms, Pet?\" Hella asked pointedly. \"I will mark name-calling as curious. In the future you will keep to the response options I have given you.\"\n\n\"Yes, Miss Hella,\" Cat answered with a frown.\n\n\"I am starting to see why Nero labelled you as a brat, this may take even longer than expected if I have to stop and spank you for not following simple instructions, little girl!\" Hella scolded her.\n\n\"Striptease?\" she asked.\n\n\"Like it,\" Cat responded, she didn't love it, but she didn't dislike it.\n\n\"Public nudity?\" she continued without missing a beat.\n\n\"Limit,\" she said uncertainly. She might like a nudist beach if she'd ever been to one. However, even as she considered changing her mind the next question was out, and she needed to answer that. The questions kept coming rapidly, and she had little time to think and often surprised herself with her answers as she said the first thing that popped into her mind. Anything she didn't understand or wasn't sure about she said limit, hoping that, as Hella had said, they would revisit those and find out if it was a soft or hard limit.\n\n\"This is ridiculous!\" Hella stopped asking questions. \"How am I supposed to train an innocent little girl who seems to have an entire list of limitations and very little curiosity?\"\n\n\"If it was a term I didn't understand, or I wasn't sure, I said limit, because you were going so fast I had no time to think,\" Cat explained honestly, thinking she had been asked a question rather than realising it was rhetorical.\n\n\"Hands behind your head!\" Hella barked. The girl frustrated her, and she knew that if she punished her now things might get out of hand. Instead, she gritted her teeth and counted backwards from ten. If this girl was going to make it as a Kept she needed to be broken and rebuilt the way they needed her. Her suspicion that there was more to this girl, along with the protection of the collar she wore, stayed her hand for now. Her cousin owed her some answers first, and she intended to get them.\n\n\"You will return to me tonight after dinner. Take note of the way you walk out, because I will not come to escort you. You will be expected here no later than seven thirty. If you are early, you will kneel on that square and wait for me if I am not already here. Do you understand those simple instructions, Jane?\" Hella said as if talking to a simpleton.\n\n\"Yes, Miss Hella,\" Cat said quietly, blushing slightly that she had not impressed the woman who would train her. She hadn't been sure about being intimate with a woman, but it seemed she hadn't even made it past the interview stage after promising Matteo she would try to accept a Mistress. She felt dreadful and hung her head.\n\n\"You can go and rest before dinner. I trust you can find your way back to your room at least,\" Hella sneered.\n\n\"Thank you, Miss Hella,\" Cat said, rising to her feet and turning to leave the room.\n\nHella watched her go. Jane had a tall, slender, leggy build, with breasts that sat perfectly on her frame without seeming overly large or small. The fact that she was just the sort of girl that Hella would normally be attracted to was not lost on her as she watched the slight sway of Jane's hips as she left the room. It could be quite easy to get carried away while breaking her bad habits and creating the perfect sex toy for her lucky new owner. First, though, she needed to discover why she wore that collar and why the three brothers were showing such an interest in her. After a minute or two of thought, she picked up her clipboard and followed Jane from the room in search of answers before Jane Bennet returned for her evening session.\n\n*****\n\nWhen Matteo and Ricco had arrived home, Jacobi waited for them and followed them into the penthouse. As usual, Lisa greeted them and took their coats before offering food and drinks.\n\n\"Have you eaten, Cobi?\" Mateo asked.\n\n\"No, but I'm good,\" he said, brushing off the offer.\n\n\"We'll have a platter, cheese, fruit that sort of thing,\" he told Lisa. \"Drinks?\" he asked his brothers. \"More wine or something stronger?\"\n\n\"Coffee would be good, strong and black. And could you throw something sweet on the platter too?\" Ricco spoke directly to Lisa rather than go through his brother. He lived here for the moment, after all.\n\n\"Coffee is good,\" Jacobi agreed.\n\n\"Make that three, we'll be out on the deck,\" Matteo said before walking into the apartment.\n\n\"Matt, can you give us a few minutes?\" Jacobi asked.\n\n\"No,\" he answered without explanation, and walked out onto the rooftop deck and flopped into a comfortable chair with a sigh. \"It's been a fucking long day, and I have shit I want to say to both of you myself.\"\n\nRicco shrugged when Jacobi gave him a questioning look, and the twins followed Matteo out to the deck choosing chairs close to his.\n\n\"Right, let's call it what it is,\" Matteo said in a tired voice. \"It's yet another bullshit game created to make us toe the family line. Stefano is sick, and we know the table will have to be announced soon. They're not going to put an eighteen-year-old in the chair, and, let's face it, Zion and Lucca's talents lay elsewhere so far, so we're it, the three of us. We're older, more settled and wiser, what choices they have come down to the three of us.\" He looked at his brothers as they took in what he was saying.\n\n\"I won't give up Cat, you won't give up Maryanne, so it's one of us along with Ricco,\" he spoke directly to Jacobi. \"Now here's where you fucked up that idea,\" Matteo said, being brutally honest. \"Saying that you will share your life with your brother is one thing, actually doing it is another. Tell me about Ricco and Maryanne's first date?\"\n\n\"Why would they date?\" Jacobi asked as if Matteo was an idiot for asking the question.\n\n\"So he could form his own relationship with Maryanne instead of living like a sequestered monk until he decided to start dating Cat,\" Matteo pointed out the obvious. \"Why would you think Papa would accept a triad where the Oracle had no relationship with the mother but one of sisterly affection? You fucked up big time, man, but it's not too late to fix it if he and Maryanne are willing.\"\n\n\"She's pregnant!\" Jacobi looked horrified.\n\n\"So? Then she'll be a new mother or breastfeeding or tired from dealing with the baby, and by the time you might consider letting him start a relationship with her she'll be pregnant again, and you'll be making the same arguments!\" Matteo was on a roll. \"In the meantime, he has no wife, no love, no family of his own, and he gets to fuck a Kept and play with his nieces and nephews. Sounds like everyone's perfect future, doesn't it?\"\n\n\"That's not how it would be!\" Jacobi spluttered. This was not what he had expected when he came here tonight.\n\n\"How would it be, Jacobi? Tell me. Make the whole situation make sense somehow, and I'll take off the watch and send Ricco home to start living the life he should have been for the last two years,\" Matteo challenged him. \"If you can't tell me how it would work out for Ricco, then you have to face the fact that he will be bound to me and not you, even if it's only by a watch.\"\n\n\"I'd be interested to know the answer to that too,\" Ricco said seriously, as Jacobi looked at him for help when Matteo finally stopped talking because Lisa had arrived with a platter of food for the men to share. \"You are a miracle worker, Lisa,\" Ricco smiled at the woman as he picked up a chocolate truffle from the platter and put it in his mouth. Lisa smiled indulgently and returned to the kitchen to finish preparing the coffee.\n\n\"No one took the chair from you, Cobi. Papa just wanted you to acknowledge the fact that Alessandro not only lived but saved your life. He didn't deserve to be ignored. They would have forgiven even that, but you have to know they were watching all of us closely after we returned from the Kimberley,\" Matteo said as if it was obvious. \"You blamed Ricco for the reprimand and then took off with your wife leaving him here alone, and that was your biggest fuck up. If you'd included him in your life, even just that once, I certainly wouldn't be sitting here with this fucking ugly watch on my wrist and hating what is happening to the woman I love as we speak.\"\n\n\"I tried to tell you,\" Ricco said. \"Look, I get it, you love Maryanne, and you wanted the honeymoon to last forever, but you can't have it both ways, and you know that. If anything, you should feel relieved, because if you continued to expect me to live without a real lover or family of my own, I would have resented you and probably ended up hating you. What you wanted and tried to do, not just to me, but to everyone, wasn't fair.\"\n\n\"Are you two finished?\" Jacobi snapped.\n\n\"Probably not, but you have the floor if you want to say something,\" Matteo shrugged. \"He's been a grouchy bastard since you left him to fend for himself, so I imagine he has a few things of his own to say.\"\n\n\"So, say you get the chair, and he is named Oracle,\" Jacobi said the obvious so he didn't have to face the accusations against himself. \"You're telling me you'd have a true triad, live in a m\u00e9nage trios?\"\n\n\"He's already slept with her, nothing I can do about that,\" Matteo shrugged, avoiding having to answer the question directly. \"Ricco and I are coming to terms with what these watches might mean, we haven't had the in-depth conversation about that yet though.\"\n\n\"You know that's what I've always wanted, so don't look at me. The fact that it's with Cat, who I already love, just makes the idea even more appealing,\" Ricco said honestly, picking up his coffee and taking a sip along with another truffle. \"The problem both of you have to come to terms with is what if they give me the chair? Would you put Maryanne aside to be Oracle? Matteo would leave the family rather than see me marry Cat instead of him. What would you do?\"\n\n\"Maryanne's a Donati; they'd never ask that of me. They wouldn't risk the wedge it could cause between the families,\" Jacobi shook his head disbelievingly.\n\n\"I guess Lucca could do the job if you both leave,\" Ricco said casually, trying not to laugh at their looks of shock.\n\n\"You think that's really an option for them?\" Jacobi asked.\n\n\"He's got as good a chance as us, if not better. Despite what I said earlier, Lucca has more than proven himself lately. The fact that you and I flaked out and left him running things after our family trip would weigh in his favour. He's always stepped up when one of us dropped the ball,\" Matteo gave his younger brother credit for always being the reliable one.\n\n\"You'd really leave the family?\" Jacobi was shocked by the information.\n\n\"If you'd asked me that this morning I would have assured you I was deadly serious. Now I'm more open to possibilities, but I doubt I could watch Cat marry anyone else. I couldn't be there if it happened that way. I'm not sure I could let it happen that way. I guess we won't know until it happens, if it happens,\" Matteo admitted, while the idea of it happening made him feel sick. The idea of her undergoing training as a Kept made him feel awful as well, and, as always when he thought of her, the image of her in a Kept dungeon rose in his mind. He was barely holding it together, and he groaned. \"Fuck the coffee, I need a real drink!\"\n\n*****\n\n\"This is a joke,\" Hella said, walking into Francesco's office and throwing her clipboard on the table. \"You better get those other two Muppets you call brothers down here and tell me what the fuck is going on!\"\n\n\"Hello, Hella, having a good day, are we?\" Francesco said banally as he put down his pen and sat back in his chair, picking up the clipboard.\n\n\"That girl is not ready for me, she is not ready for anyone in my team! You need to find her a nice gentle Daddy who will let her pretend play at BDSM for whoever put that protection collar around her neck!\" Hella spat angrily. She was still frustrated, both by her attraction to the girl and her obvious naivety.\n\n\"I assume when you say Muppets, you're talking about the future leaders of our family?\" Francesco smirked. He could sense the reasons for his cousin's frustrations. She was normally so even-keeled that her anger amused him, so he humoured her and called Nero. \"Hella says she's not up to the challenge we have set her,\" he chuckled into the phone, watching Hella and wondering if he could actually see steam coming out of her ears. \"Good, see you in ten minutes. Can you pick up Marcus on the way?\"\n\n\"You're a shit!\" Hella snarled as Francesco put his phone back down on his desk.\n\n\"That's true,\" he nodded. \"You love me, despite my faults, so stop pretending you're angry with me and tell me what happened with Jane.\"\n\n\"I'll tell you what will happen if you keep pretending she's a regular recruit!\" Hella fumed. \"I will break her! I will break her and rebuild her the way I want her, and whoever put that pretty collar around her neck will be more than a little disappointed in the lipstick lesbian I return to them, trust me!\"\n\n\"I don't know, I have always found that to be quite an appealing trait in any woman,\" Francesco smirked.\n\n\"She's a brat, not in the immature little girl way, but in her constant pushing of rules to suit her way of thinking. She can't answer a simple yes or no question without explanation, which always sounds like a compromise or negotiation. There are no automatic responses, and when pushed to make them practically shuts down. Some of the things she put limits on were ridiculous, and she admitted that if she didn't know or knew and wasn't sure she said limit rather than admit the first thing that came to mind!\" Hella said with her voice still raised with frustration.\n\n\"Did you tell her that you would discuss the difference between hard and soft limits after the interrogation? Maybe she was waiting for the discussion to ask questions and be sure,\" Francesco suggested. He had witnessed Hella's interrogations before, and the rapid-fire questions even got to him at times.\n\n\"Of course, I did,\" she rolled her eyes. \"How else would she know those limits would be tested? The fact remains, though, that she has no clue, and I do not see why she wasn't assigned to one of the gentler Dom's first to learn the basics, she obviously has issues, and would do well with a Daddy type who would patiently explain everything to her.\"\n\n\"You're right, I expect,\" Francesco acknowledged.\n\n\"Don't sit there and try to placate me,\" she warned. \"That girl will be back in my dungeon in two hours, and I am warning you...\"\n\nThe door behind her opened and Marcus walked in. \"Nero is on his way, I happened to still be in the building,\" he said as he closed the door and took a seat. \"It's me that you need to talk to anyway, Hella. I haven't briefed Francesco yet because the background story in her profile is true up until the last twelve months.\"\n\n\"Poverty-stricken childhood, drug-addicted mother, younger brother, absent, unknown father,\" Francesco said, opening the file on his desk and scanning over the information. \"Turned to a petty criminal at a young age who used and abused her but housed her and her brother when they had to leave the government housing after their mother died or be forced into the system. Did I miss any of the highlights?\"\n\n\"No addictions, herself, worked two to three jobs at any given time to provide for her younger brother, who was less than grateful and going down the same road as her boyfriend,\" Marcus added. \"Frankie Vitali's football program scooped up the brother in one of his street sweeps with the police engagement officer, and the kid got his act together slowly. The brother now works for Vitali developments on an internship.\"",
        "\"I don't care what the kid does or did! I care about the brat you dumped on me and that protection collar around her pretty little neck! She isn't ready for me, or anyone in my team! I won't let her pretend play at BDSM for whoever put that protection collar around her neck!\" Hella repeated what she said to Francesco. \"If you keep pretending she is something she's not, I will break her, and she will tell me herself! You know I am more than capable of doing it!\"\n\n\"I put the collar on the brat,\" Nero said, entering the room and pulling a chair up between his brothers. \"For your benefit, not hers, you do not want the consequences involved in breaking that girl's will.\"\n\n\"One of you three Muppets better tell me what the hell is going on or I'm out, plain and simple!\" Hella growled at them.\n\n\"Then you're out,\" Francesco said with a shrug. \"Thanks for playing,\" he tapped the clipboard. He loved Hella, but there was only so much of her temper he could bear, and no one gave him ultimatums. \"You don't want to do it, fine. We'll find someone else. No big deal, that's all you had to say, plain and simple. You're good, Hella, Probably the best Domme we've had in a decade, but you're not irreplaceable,\" he said as if it was no big deal.\n\n\"This must be big then, if you three are giving in so easily,\" she narrowed her eyes at them. \"Let's see... What sort of rumours can I begin about this girl? Another Peri Donati, perhaps? The fianc\u00e9 of a second sent here by an evil chair to learn her place within the scheme of things?\" She poked at the open wound she knew the three brothers still bore from the debacle three years ago.\n\n\"Peri Donati was quite a different girl. She was a natural submissive; she had some breeding and culture, as well as a good education. This girl is not like Peri Donati,\" Marcus said thoughtfully.\n\n\"She could be, of course, with the right training,\" Nero mused. \"A girl like this would have to be trained as a Kept to receive the etiquette and elocution needed to marry into one of the tables. It's interesting that she is so curious about the BDSM lifestyle, even though the owner of her collar would not be concerned if she wasn't.\"\n\n\"I expect that he is pleased that she is the one who wants that sort of education. I know him fairly well, and he's a control freak, just like Joshua Donati, but possibly hides it a bit better, like Dante,\" Marcus chuckled.\n\n\"You're shitting me, right?\" Hella furrowed her brow as she looked at the two men and then looked at Francesco.\n\n\"Don't look at me, I haven't been briefed. What do you care anyway, you just quit?\" Francesco smirked.\n\n\"Trying to get a straight answer out of you three is like trying to herd cats! Impossible!\" Hella snapped at them. \"Just tell me what the hell is going on so I can do my job properly, because that girl is a brat, and I will break her if I don't know what's happening here!\"\n\n\"That's my assessment too,\" Nero said casually. \"Though I am not sure she realises she's doing it or purposefully being bratty. I think she is looking for chinks in the armour. She has had everyone she has loved or trusted in her life let her down, so in order to trust anyone she feels the need to test them. Go too easy on her, and she won't respect you and do her best to top from the bottom, go too hard on her and you will, as you say, break her.\"\n\n\"It will be a delicate balance for anyone who takes on her training, and in any other circumstances I wouldn't have trusted anyone but Francesco himself,\" Marcus said, not pulling any punches. \"The man who owns that collar, though, asked for a female trainer. Only this morning Jane called him to say she didn't think she could be with a woman, and he asked her to try for him, and he agreed that if she tried and still felt the same way she could ask for a change to a male trainer. He would rather not take that option, but has conceded that it may be necessary.\"\n\n\"She wants the training that I can offer though?\" Hella asked carefully. \"I don't do gentle encounters, you know that,\" Hella said.\n\n\"She craves the pain, and I dare say a certain amount of humiliation, but she's still not sure it is normal to want what society sees as wrong or taboo. She talks about fifty shades of grey rather than the real erotica and porn she had viewed and read. Her current partner had only just started exploring this side of her nature with her and was making headway into making it a normal part of their sex life. Then time constraints and circumstances brought her here before either of them were ready for this trial,\" Nero said, having had long talks with Cat about her needs and feelings. \"The brattiness is more about her testing the boundaries of a new relationship until she trusts you completely.\"\n\n\"Her partner didn't give in, and because he has asked her to try, because it is important to him, she will do her best to get over her mental block about being with a woman. However, given your reaction to meeting her, perhaps Francesco would be the better trainer in this case,\" Marcus said.\n\n\"You're not fooling me, you need me,\" Hella pursed her lips as she surveyed the three brothers she knew so well. Had she been a boy she would have sat on the new table of the Battaglia with them, she knew. She had their love and respect, despite being a bitch to them all on occasion. \"Alright, I get it, but I want to know who she is and which table protects her.\"\n\n\"Tables,\" Marcus said. \"She is engaged to Matteo Vitali, and she is also a close personal friend to Peri Donati and knows the twelve men of the Donati table intimately. They have given her family status, despite being an outsider.\"\n\n\"I knew I recognised her! She's the artist!\" Francesco exclaimed in a eureka moment.\n\n\"Bruno want's her identity kept secret, as well as the fact that someone from the tables is at the facility for trial. If word of this gets out, or any harm comes to that girl through you, Hella, I will make sure you are part of Nero's experimental ward as a patient for the next year,\" Marcus threatened.\n\n\"Fuck, I may be the worst bitch you know, but I have a brain. I said I get it, alright! No need for threats, I just wanted to know the truth. Now I know!\" she snapped. \"Matteo wants a woman to be her trainer, but he's open to a man if she insists. Do I have that part right?\" she asked.\n\n\"True,\" Nero said.\n\n\"So, if I brought in an assistant, for instance, an older male who could sort out her issues without actually fucking her, which I assume is what Matteo was trying to avoid, that would be within the rules?\" She asked.\n\n\"I could clarify that for you, but I think that would be preferable to him than giving her training over to a Dom entirely,\" Marcus agreed.\n\n\"I'm fairly sure I know a man who fits your need who would volunteer happily to assist you with Jane. They've already built a strange relationship that works,\" Nero said with a small smile and wicked glint in his eye.\n\n\"Fine, send him to me tomorrow, I expect Marcus will have an answer for me by then. One last thing,\" she paused and considered them. \"What is her real name?\"\n\n\"Cat, it is short for Catriona, Catriona Leone,\" Marcus said.\n\n*****\n\n\"Okay, let's call it what it is,\" Jacobi said finally. \"I fucked up, and the two of you will lead.\"\n\n\"Nothing's been decided, as far I know,\" Matteo shrugged.\n\n\"It does seem the most likely outcome,\" Ricco rattled his wrist. \"Why else do this to us?\"\n\n\"Because I'm losing my shit, and they don't want me doing anything stupid, like interfering in Cat's trial,\" Matteo admitted. \"They made you my conscience.\"\n\n\"Isn't that what an Oracle does?\" Jacobi asked. \"He's been my conscience my whole life. It's part of the reason I left the way I did.\"\n\n\"Yeah, well, I don't think our fathers have ever been predictable in how they've handled anything. We can try to work all of this bullshit out logically, but we all know anything could happen between now and then. Particularly as it seems Papa is feeling better and making demands on everyone again.\" Matteo grumbled. \"It could be another decade before we find out, so just live your lives and we'll face whatever is decided when it's decided. We've all fucked up one way or another, if they hang on long enough, the babies could very well take the chair.\"\n\n\"You're right, you know,\" Jacobi nodded. \"I need to get home. But we're good? The three of us? We're all good?\"\n\n\"Yeah,\" Ricco nodded. \"Get your ass back to work tomorrow though. Today was bad, and tomorrow will be a shit storm with the fallout.\"\n\n\"The site managers have it under control, for now,\" Matteo ran his hand through his hair as if the weight of the accident was a heavy burden to bear. \"Lucca is at the hospital keeping me updated and talking to the next of kin, offering support, financial and otherwise.\"\n\n\"I'll get in early and catch up on the overnights. If the guy is okay, we'll minimise the accident as much as we can and get the site opened again,\" he reassured Matteo.\n\n\"We aren't at fault, but we need to look after the man and his family. We need his workmates to see us being proactive, workplace health and safety refresher courses, and that sort of stuff, as well as caring for the dumbass who didn't follow the site rules,\" Matteo said anxiously, despite the fact that he knew he couldn't be held accountable.\n\n\"Look after each other tonight, and I'll see you tomorrow,\" Jacobi said as he got to his feet. \"I'll swing by the hospital and check on Lucca. I won't do anything, but it's got to be tough on him, he's still pretty young to be dealing with this sort of shit.\" He turned and walked back through the apartment without waiting for an answer.\n\n\"How do you still look like you have energy to burn?\" Matteo groaned at Ricco and leaned back in his chair, rubbing both his hands over his face.\n\n\"Coffee and chocolate, plus I want an answer to my earlier question,\" he chuckled. \"So no falling asleep on me yet. Now let's pretend logic wins out and you get the chair, and I am named Oracle,\" Ricco said slowly. \"Would you allow me to pursue an intimate relationship, not just with Cat, but with you?\"\n\n\"What? Like a menage a trois?\" Matteo asked as he considered the question properly.\n\n\"In a manner of speaking, you're a good-looking guy, but I don't want to fuck you, if that's what you're thinking,\" Ricco laughed. \"I was thinking more along the lines of the three of us sharing the master suite, sleeping in the same bed and generally doing what we would normally do, but together. I don't like the idea of separate rooms and date nights, or Cat feeling like she was abandoning you to be with me, or vice-versa, although I doubt that would happen often. You can't tell me you'd be happy to spend half the week alone in bed.\"\n\n\"That's what you meant when you told Jacobi this was what you always wanted? A threesome with a brother?\" Matteo wasn't sure what he thought about what Ricco was saying, or if he understood it properly.\n\n\"When we were about seventeen I had a thing for one of Zio Salvatore's Kepts. I used to watch him with her and let him watch me as he mentored me as a Dominant and then a rope Master. I probably spent more time with him than either you or Jacobi, and I developed a real fascination for voyeurism, exhibitionism and sharing a woman. I can appreciate that you have a good physique, and can imagine being in a scene with you and Cat, in fact, it's rapidly becoming my go-to fantasy. That fantasy, however, is tied to the two of you, not just her. I don't want to take her from you, or have you separate me from the two of you, I want the 'us', that could be so great!\" Ricco spoke with the passion he felt for how he always believed his adult life would be and wanted it to be.\n\n\"You're a rope Master?\" Matteo asked.\n\n\"That's what you took out of what I just said?\" Ricco asked incredulously.\n\n\"I'm going to need time to digest the rest of it. I'm not sure I get it, but as for the living arrangements, I can see your point there about the sleeping arrangements. I'm not sure I'm ready for something like that, but I can see what you are saying,\" Matteo nodded. \"You're a rope Master?\" he asked again. \"That's incredible, I never had the patience for rope, it's so time-consuming when you just want to be doing the fun stuff.\"\n\n\"The rope stuff is the fun stuff for me. I guess it feeds my voyeurism kink on a certain level,\" Ricco shrugged.\n\n\"Alright, I need to sleep before I drink anymore,\" Matteo rubbed his hands over his face. \"You can come if you don't snore, and keep your boxers on,\" he said, getting to his feet and chuckling at the surprise on Ricco's face. \"I hate sleeping alone while she's gone,\" he shrugged and wandered toward his bedroom.\n\n\"Matt,\" Ricco said, following him into the darkened room.\n\n\"Mmhmm?\" Matteo mumbled as he stripped off his clothes and fell onto the bed.\n\n\"I don't think it's Stefano we need to be worried about,\" Ricco said softly.\n\n\"What do you mean?\" Matteo rolled onto his back and looked up at his brother as he, too, stripped for bed.\n\n\"I've had a gut feeling for a while now, but think about it... Oracles are replaced all the time without all this bullshit. They're getting ready to step down; we can all see that. But, why? Something about the whole thing isn't right, and Stefano's refusal at the hospital and his foul temper about getting home as soon as possible,\" Ricco tried to explain the bad feeling he had regarding Roberto.\n\n\"I reckon Papa will want to see us tomorrow after the accident today. It might be time to talk to him about that gut of yours,\" Mateo murmured. \"How long have you been thinking about this?\"\n\n\"Since we went to the Kimberly,\" Ricco admitted. \"Something has been off since just before Christmas though.\"\n\n\"Given everything that happened in the last year, you could be right, or you could just have a mild stomach flu that's lasted way too long,\" Matteo chuckled. \"We can deal with it tomorrow.\"\n\n\"Thanks, Matt, it's good to have someone listen to me, and take my gut seriously for a change,\" Ricco said yawning.\n\n*****\n\nCat was early as she stepped up to the door to Mistress Hella's room. She hadn't truly been able to take it in earlier as she knelt on the leather square and answered her questions, but it was more like the red room of pain from her imagination than Matteo's white room had been. She took a deep breath and knocked lightly on the closed door, listening carefully for an answer before entering and closing the door behind her.\n\nUnsure if she would be allowed to explore on her own, she padded over to the leather square and knelt to wait for the Mistress. She still wasn't sure if she wanted to have sex with a woman, but she had promised Matteo to try it, and she knew from his tone that he would be very disappointed in her if she didn't. Since she had finally given in to her feelings and begun to believe that his love for her was real, despite all of their differences, she rarely challenged him the way she once had, and she would hate to disappoint him and have him regret his love for her in any way.\n\n\"Lovely, you're early,\" Hella said as she entered the room. She had changed and walked across the room, her wrap around dress fluttering just above her knees as she walked. She took her seat and arranged her dress and fluffed her hair out before she settled back and turned her eyes to the girl in front of her. She'd had a little bit of time to think about how to approach training this girl. Her time would be limited, and she had to overcome her aversion to being with a woman sexually, as well as the unconscious brattiness as the girl tested her boundaries.\n\n\"Did you eat, or were you nervous about returning to me tonight?\" Hella asked.\n\n\"I ate a little, thank you, Miss Hella,\" Cat replied, trying not to give a long drawn out reply that would annoy the woman as she had done earlier that afternoon.\n\n\"I require you to eat properly at every opportunity. It is important to me that you remain healthy and happy during your time as my submissive. For you to be healthy and happy, you will need to ensure that you maintain a healthy diet that will give you the strength required by any girl who kneels at my feet. While you are here in this room, you will belong to me and me alone. In this room you will do what I want, when I want, and how I want. Do you understand?\"\n\n\"Yes, Miss Hella,\" Cat agreed.\n\n\"I will train you to be pleasing to both men and women alike. I may, on occasion, employ an assistant to help me with your training. The assistant will be nothing more than another piece of equipment with a working cock, as far as you are concerned, you will follow my commands only. Understood?\" Hella spoke in a lecturing tone. \"I believe you have great potential, and I find you intoxicating,\" she let her eyes rake over Cat as if mentally undressing her. \"I need your consent before we begin anything further. I understand you have given your consent before being sent to me, but I would like you to tell me yourself that you are here of your own free will to be trained as a submissive in the ways of pain and pleasure.\"\n\n\"I understand why I am here and agree with all you have said,\" Cat said softly, but looked directly into Hella's eyes to show the truth of her words. She was here for Matteo and she belonged to him, regardless of where she was but she wasn't going to argue that point with this woman right now.\n\n\"Some say I am a man-hater. This is untrue. But there is no denying I prefer to employ, socialise with, and make love to women. As my submissive, you will follow my lead. I know you have little experience, so I will show you how enjoyable it can be.\" She stroked Cat's hair and continued, \"I will teach you what it is to serve me; mentally, physically and sexually. To begin with, you will find some elements of your training painful and even humiliating at times, but I won't punish you more than is necessary, and you will find the pleasure you receive will far outweigh the pain I will inflict on your lovely body.\"\n\n\"Stand up, my pretty pet,\" Hella instructed. She simply could not resist the temptation of such a beautiful body any longer. She came to her feet and flicked at the loose catch that held Cat's camisk in place over one shoulder, allowing the material to fall, exposing her breasts and slithering down the girl's body to fall to the floor. \"I have never liked those silly dresses; you will remove it in the future when you enter this room and leave it by the door.\"\n\n\"Yes, Miss Hella,\" Cat whispered as the woman stepped closer to her, running her hands over her breasts and down her body. She tried not to cringe away from the touch. She could do this for Matteo, she took a deep breath, God knew she'd done worse in her past just to survive. She would just put on her mask and approach this like any other unpleasant moment she had to survive knowing that he would waiting for her when it was done. She pulled on a protective mask trying to mirror the self-confident lesbian bartender she had worked with before meeting Matteo and took a deep breath as the Mistress inspected her naked body.\n\nIt was strange to Hella that she had been fantasised over by men for most of her life, when all she really wanted was a pretty pet with a pretty pussy. Hella put her fingers through the sides of Cat's panties and slowly pulled them down to reveal a rounded bottom perfect for spanking. She came to her feet again and stood before the naked girl. Cat stood as if being naked was quite natural, there wasn't the cheapness of a whore from the wrong side of town, which could have very well have been her life had she not been discovered by the Vitali family.\n\nHella leant forward and gently kissed the girl. Cat responded naturally, as if they were old friends, no fake passion, just a tentative natural tenderness. Now was the time to have some fun and find out if Cat was trainable as a pain slut. Since their earlier meeting, Hella had thought and even fantasised about how she would punish the girl for the frustration she had felt, and she had already chosen her weapon of choice.",
        "\"Now, in this room we will be honest with each other. We must be honest to trust each other and move forward in your training,\" Hella said as she took a step back toward her chair and picked up what could be mistaken for a small wooden ruler, but had a handle and worked beautifully as a stinger. \"Tell me, Pet, what is your name?\"\n\n\"Jane, Jane Bennet,\" Cat said naming the mask she wore now. The woman surely knew the name she had to use while here at the facility. She squeaked as Hella's hand flashed out leaving a stinging blow on her breast. The impact was negligible, but the red mark came up immediately with a stinging pain that faded quickly.\n\n\"That is a name you chose on arrival here, and I need you to be honest with me, not continue with the lies meant to protect you out there beyond this room,\" she pointed at the door. \"Do I need to remind you that in this room you are mine and that I want your absolute obedience? Now, what is your name, pretty pet?\"\n\n\"Cat,\" she whispered softly, and was rewarded with a soft smile and another tender kiss from Hella.\n\n\"How appropriate that my new pet is a Cat,\" Hella gave a soft laugh. \"Thank you, now I shall be honest with you, pussycat, and tell you that I have spoken with Marcus and I know who you are.\" She let her fingers trail over the red line on her breast. Her hand lashed out toward the other breast, making Cat bite at her lip to stifle the squeak she let out. \"I know where you came from and why you are here,\" she punctuated each statement with a slap of the stinger, and then kissed Cat again to capture her trembling bottom lip between her own and nibble on it.\n\nHella placed her hands over Cat's breasts, playing with and squeezing the firm globes that stood proudly from her chest with high pale pink nipples. The girl was obviously aroused on some level by Hella and what she was doing, even if she had said she didn't want a Mistress. Now was the time for the girl to find out just how aroused she could be by a woman. She leant over and began to tongue Cat's nipples. As they became erect, she took them into her mouth and nibbled them with increasing pressure until they were small arrowheads pointing at her Mistress.\n\nCat groaned in a soft whisper that came out almost like a purr as she felt her nipples being sucked further into Hella's mouth, the pleasure merged with pain when Hella used her teeth, deeply arousing her. It felt wonderful, and wearing her mask of self-protection she could admit that she wanted more, but found that with her muffled groan Hella stopped.\n\n\"How perfectly intoxicating you are, you even purr like a little pussycat,\" Hella gloated as she heard Cat groan with pleasure. She decided that the girl would have to suffer a little more, just to see the effect on her. She took nipple clamps from the small chest near her chair, and before the surprised girl could properly react, she clipped them on her hard nipples. They were only tweezer clamps and would not give too much pain, but they had some small decorative weights attached, which swung so alluringly as Cat winced in discomfort when they were tightened. Although her hands were free and she was obviously in pain, Cat did not try to remove them or move away from Hella, who smiled and flicked the weights so they swung rhythmically from Cat's chest.\n\n\"Are we having fun yet?\" Hella asked, moving forward again and kissing Cat. \"I know I am, and it would be quite easy to get carried away with you.\"\n\n\"Yes, Miss Hella,\" Cat said in a breathless whisper.\n\n\"Oh, goody,\" Hella grinned. \"I know your owner, and I am sure he has introduced the traffic light system of safe words to you. So how are you feeling, Pussycat?\"\n\n\"Green,\" Cat responded immediately.\n\n\"Mm, lovely, he had started training you, I am pleased by that,\" Hella let her hand drift down Cat's body to cup her pussy. \"Not as pleased as I am by your obvious arousal,\" she let her fingers slide through the wet folds before bringing them up to Cat's face. \"Tell me, have you ever tasted yourself before?\"\n\n\"Yes, Miss Hella,\" Cat admitted. She watched Hella sucking on the fingers that had been pressed to her lips as Hella parted the skirt of the wrap around dress and played with her own pussy for a moment or two.\n\n\"You obviously enjoy it, as do I. In time you will learn to enjoy the taste of me too,\" she said as if this was a fact rather than a preference. Then she lifted her hand and smeared the warm, pungent moisture from her own pussy over Cat's lips, not expecting more from her than a token obedience. She was delightfully surprised when Cat's lips parted and her tongue snaked out to taste her Mistress from her fingers. Hella fed Cat her fingers as she returned her free hand to Cat's pussy to tease her and keep her arousal high.\n\nCat looked into Hella's blue eyes as her need for climax built. This woman had not been what she had expected by the term Mistress, and, despite herself, in this mask, she found she was oddly attracted to her cool, arrogant sense of entitlement. Her arousal and heat were genuine, and only built further with the strange mixture of pleasure and pain Hella seemed to give her so easily. She quivered as she felt Hella's nails rake over her clit again and let out a soft groaning purr around the fingers in her mouth.\n\nHella felt the tell-tale quiver of her new pet's body and took her fingers from her mouth, replacing it with her own as she pulled a clamp from Cat's nipple and swallowed the cry of pain that fed her own sadistic nature. Keeping her thumb on Cat's clit, she pushed two fingers into her and curled them as she fucked the girl with them as she ripped the second clamp from her body and quickly wrapped an arm around Cat's body as she shook uncontrollably and cried out again into the kiss.\n\nThe heady mix of being with a woman, the intense pain on her nipples, and the pleasure of Hella's fingers totally undid Cat, and her legs buckled as her orgasm ripped through her. She felt Hella helping her to sit on the floor with surprisingly strong arms, for which she was grateful, while she gasped and quivered as waves of pleasure rolled through her.\n\nHella sat back in her big comfortable chair. She widened her legs and, parting the skirt of the wrap around dress, exposed her pussy to the hazy-eyed stare of Cat. She smiled encouragingly but gave no direction, wondering what the girl would do and if she would act on her own or obediently wait to be invited to dine on her new Mistress.\n\nCat was nervous, there was the anticipation she always felt before sex but it mixed with the determination to show Mateo and this woman that she would try to do what they wanted. She couldn't deny that Hella was beautiful, and in a strange detached way could acknowledge her sexual abilities to bring her please which increased her attractiveness at that moment. She didn't know what to do to give another woman pleasure, however. Caught like a deer in the headlights, she knelt upon the leather pad she knew was her place and waited for instruction.\n\n\"Come, my pretty Pussycat, you liked the taste from my fingers, so come seek the source,\" Hella said with a voice heavy with lust as her fingers rubbed gently at her pussy. Cat crawled across the small space to kneel between Hella's thighs, which opened further as Cat glanced at her Mistress's face and her neatly trimmed pussy. \"This first time I will allow a small amount of exploration, but you will learn how to pleasure me the way I like,\" Hella said and leaned back, closing her eyes and pulling her hands away and giving Cat free access to her pussy for a time.\n\nCat tentatively reached out and started to gently, but insistently, rub Hella's pussy. It was already well lubricated. As Cat massaged the soft skin she let her fingers slide through the folds. Tentatively she inserted one of her fingers. She realised Hella was deeply aroused, so inserted a second and caressed her pussy with increasing urgency. Hella sighed with evident pleasure, her hand reaching out to stroke and pet Cat's hair. Encouraged and knowing she could do more, she leaned forward and began to lick Hella's pussy, all the while moving her fingers slowly in and out of her.\n\nCat eased the lips apart so her tongue could penetrate ever deeper into the warm wet hole. Trying to mirror the things she knew she enjoyed. Hella was shocked at the ardour of the girl, but any thoughts were silenced by a wave of pleasure. As Cat forced her tongue ever further into her pussy, Hella gasped with pleasure. This untrained pussycat was giving her exquisite, almost impossible pleasure. How could someone who looked and acted so na\u00efve and innocent be such a hungry slut at heart? Hella bit her lip hoping to prolong the pleasure as Cat ate her deliciously, but it was no use, she soon came with a long drawn out moan of pleasure.\n\nHella reached forward and clasped Cat's head tightly between her hands to still her movements on her sensitive clit. Cat turned her vivid blue eyes up to meet Hella's, her face shiny with cum, and Hella moaned softly at the sight. This girl definitely had potential, and Hella was glad she hadn't walked away after the first frustrating meeting.\n\n\"Today was merely a gentle introduction to each other. You should know I am a harsh Mistress who will push you to use those safe words and will not tolerate the disobedience or brattiness of our earlier meeting,\" she leaned forward and kissed Cat, biting her bottom lip sharply, making her gasp. \"Rest well, my pretty little pussycat, tomorrow we will begin exploring and pushing all those limits you named today, and I am looking forward to it,\" she gave an evil smile and her eyes lit up, making Cat quiver.\n\nOnce Cat had dressed and left the room, Hella stood and turned toward a mirror that ran at a head height along the side wall and bowed, knowing that the three pairs of eyes hidden there would have been watching her gentle the skittish girl.\n\n*****\n\n\"I've been waiting for a visit from you. How long have you suspected?\" Paolo Vitali looked directly at Ricco as two of his nephews took a seat in his office.\n\n\"Six months, give or take?\" Ricco shrugged slightly, confused by his uncle's easy acceptance of them being there.\n\n\"Wait. What do you mean 'you've been waiting for a visit from him'?\" Matteo asked guardedly. \"We haven't even told you why we're here yet.\"\n\n\"It's not hard to figure out. Ricco's always had good gut feelings about things, he just hasn't trusted them enough to talk to anyone before who would take him seriously,\" Paolo said easily. \"That's also why I never play poker with him, he can read most men like books. The boy had Oracle stamped on his head at birth, a fact none of you dumbasses seemed to notice or take advantage of,\" he chuckled. \"He's not the only one, of course. Even you have good intuition when your brain is above your waistline,\" Paolo addressed Matteo. \"Is Knox waiting outside for you?\"\n\nIt had taken several days to sort out the consequences of the accident at the building site and another few days to get their uncle to agree to meet with them away from the family home where Stefano had finally managed to convince the doctors he belonged. Now they sat stunned as questions they'd both planned to ask seemed irrelevant now.\n\n\"Yes, he's parked across the street,\" Matteo said warily.\n\n\"Good, then let's go,\" Paolo said, grabbing his phone and wallet from the top drawer of his desk.\n\n\"Where?\" he asked.\n\n\"To see Roberto. That is why you've come, isn't it? You're not sick, are you? You look a bit pale,\" Paolo smirked. It wasn't often he had the upper hand on any of his nephews, and he was enjoying the moment.\n\nPaolo spoke briefly to his receptionist, a pretty young woman with a sparkling collar around her neck, and left the surgery. He slid into the car, taking a seat in the front beside Knox, leaving his nephews to make themselves comfortable in the back seat. Despite being thrown off balance by Paolo's announcement, Matteo chaffed at the lack of control he had over the last few months of his life. He needed Cat back at home. He found that he needed his brother with him too now, but most of all he needed to know with some certainty what was happening in his family. He drew a deep breath, and whether Stefano was still unwell or not he planned to get answers from his fathers' today.\n\nArriving home, they went directly to the library where the remaining members of the current table were gathered looking pensive. Saying nothing as Matteo and Ricco entered, they all moved to a bookcase door and moved into the Athenaeum.\n\n\"What the hell is going on?\" Matteo whispered to Ricco.\n\n\"I think we are about to find out the answers to all our questions,\" Ricco said seriously as they followed the older men through the door and took seats at the end of the table, mirroring their fathers', who were already in place before they had arrived. Both looked as they normally did without any sign that one had recent heart surgery and the other was hiding a serious illness.\n\n\"The future of this family has been pondered, discussed, and argued over greatly during the last six months,\" Cosimo broke the silence. \"While we have always tried to hold to the old ways, circumstances have not always allowed us that luxury, and in the last few years we have conspired to further our plans for the family in subtle ways to bring us to this point in time where a decision must be made and explained.\"\n\n\"You two clowns will lead,\" Frankie said, cutting off his brother. \"Cat told Roberto that she would accept Ricco into your relationship if you were given the chair, the only question we needed answered was if you would accept him.\"\n\n\"Not just accept him, but bond with him; listen to his counsel and try to understand his desires and match them with your own,\" Cosimo corrected.\n\n\"You've been listening to us with these.\" Ricco stated rather than asked.\n\n\"It gave us a more accurate picture, and we were all impressed by the way you both handled Jacobi's deflated ego,\" Cosimo nodded.\n\n\"This isn't why we came! This isn't why we are here today. Papa, tell us what is happening, we have the right to know,\" Matteo tried and failed to keep his voice even and steady. \"The truth this time, no more games or puzzles or trials, we need the truth if you want us to step up now before we can see what the younger brothers will make of their lives,\" he said.\n\n\"That is why you were chosen, even before Cat, which only made the choice easier for me,\" Roberto said gently. \"I am dying. I have been for some years now. I knew, given enough time, that you would find yourself again and love greatly, but time is running out now, I'm afraid. I've been in remission twice now, but, as they say, third times the charm,\" he gave his sons a crooked smile.\n\n\"How long?\" Matteo demanded, looking from Roberto to Paolo.\n\n\"Six months, maybe a year, if we are lucky and the cancer slows its growth, but it is an aggressive beast, and this time it has worked its way to his brain,\" Paolo said.\n\n\"You all forced him to try every avenue of treatment, I assume?\" Matteo was staring at the big man who had always seemed six-foot-tall and bulletproof to him.\n\n\"Theresa has been the worst of them, but it is time to let me rest now and enjoy my home and family. You will do this, Matteo, not just because I ask it of you, but for our family. Ricco will be your rock, as Stefano has always been mine. The two of you can and will do amazing things with the power you possess and the table that will be assembled to support you. Your uncles will stay as mentors for as long as needed, but at the family gathering, after announcing your engagement to the entire family, we will announce the table to the twelve who will populate it.\"\n\n\"Can we know before then? Can we know now which of our cousins will join us, at least if not who will sit in each chair?\" Ricco asked.\n\n\"What are you doing? We just found out Papa is dying!\" Matteo turned on his brother.\n\n\"That's true, but we also just found out that before he can step down and enjoy what little time he has left we need to step up and start taking some of the responsibility from him... From them both. There will be time to wallow in grief, but while they are alive is not that time,\" Ricco said with determination. \"Both of us have a business of our own to manage, on top of what is coming. It is better if we know who we will have to rely on to pick up the slack and who will be in the same position as we are now in a month's time. We need answers, and it looks like for once we are going to get them.\"\n\n\"You're right,\" Matteo acknowledged, and couldn't get his head around how cool, calm, and collected Ricco seemed after hearing such devastating news. \"Are you sure you chose correctly between us?\" He turned to the older men with a raised eyebrow and a smirk on his face. "
    ],
    "authorname": "xelliebabex",
    "tags": [
        "trial",
        "mistress",
        "lesbian",
        "family",
        "brothers"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-16"
}