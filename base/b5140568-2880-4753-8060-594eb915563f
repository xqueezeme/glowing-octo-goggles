{
    "title": "What Rough Beast",
    "pages": [
        "Yikes!! Randi wants Gothic and I'm most assuredly NOT Mary Shelley. Still, I've got Rick at rkv330. I took his usual clever idea, sprinkled on a few Goths, and this is the result. Naturally, none of this would happen without Randi's inspiration - so thanks as ever old friend -- please enjoy... DT \n\n* \n\nFirst there was blackness and peace. Then, there was dazzle and sound. I was born into an alien world. \n\nThere were loud voices all around me. The smell was horrible, a concoction of body odor, mold and rust. I was paralyzed by fear. \n\nI gradually opened my eyes. A hovering shadow snorted, \" He's awake mates!\" There were shouts of laughter. \n\nHe had the ugliest face; walleyed, broken nose, face pitted and scarred. His unshaven jaw had a malicious grin. \n\nI said weakly, \"Where am I?\" then surprised, \"WHO am I?\" My mind was blank. I had no idea where I was - WHO I was. I was newborn. I was terrified. \n\nThere were four of them. They laughed again. The biggest and nastiest said, \"That doesn't matter mate. You're OURS now.\" \n\nMy faculties were coming back. I was inside a confined space, surrounded by loud vibrations. I said confused, \"How did I get here?\" \n\nThat prompted more raucous laughter. The guy with the walleye said, \"We found you after we cast-off. We didn't have time to take you back to your mommy.\"\n\nI said panicked, \"Where am I?\"\n\nA skinny guy, shaven head, red beard down to his chest and a badly done tattoo-sleeve snorted and pointed to his left. He said, \"That's Yarmouth over there. You can go home if you swim sixty miles.\"\n\nI gestured, 'Where's THIS?\"\n\nThe tattooed guy said, sounding a little less amused, \"You're on a tramp.\" \n\nI sat up. But I was in a bunk. I cracked my head on the frame and flopped back to more guffaws. \n\nI was still groggy. However, I was becoming more alert. I rolled out of the bunk and put my feet on the metal floor. I said cautiously, \"What's a tramp?\" The room spun. I felt sick to my stomach.\n\nThat brought on more hilarity. Apparently, I was a very funny guy. \n\nThe bearded dude said, \"Tramp freighter, outbound from London with 20,000 tons of miscellaneous cargo. The first port is Reykjavik.\" He added, like he was talking to a child, \"We're a tramp because we carry anything we can scare up.\" \n\nMy entertainment value ceased the minute the crew informed me that I'd been shanghaied. So, everybody wandered off except the bearded guy. He was staring at me with blatant contempt. \n\nI sat gazing into space. My brain was starting to reboot. I knew stuff. But I couldn't remember who I was, or where I lived. It was like my entire life had been wiped. It was a strange empty feeling, frightening as hell. \n\nThe bearded guy cut my reverie short, \"Captain told me to bring you to him when you sobered up.\"\n\nHe headed toward the hatch. I sat frozen, heart hammering, gripping the thin mattress of the bunk, afraid to move. The guy stopped and gave me an angry glance. I took a deep breath and said, \"Coming!\"\n\nI stood. The room spun. I grabbed the top bunk and steadied myself, taking deep breaths. My guide grunted impatiently; walked back, turned me and shoved me. I stumbled forward and caught myself on the hatch coaming. I got the message.\n\nWe emerged into an overcast and blustery world. I was at the bow of a ship and there was a structure that was clearly the place where I was headed almost half-a-football-field away. \n\nIt was summer but the fierce wind off the bow made it bone chilling and hard to stand. The gusts reminded me that I was wearing a thoroughly trashed tuxedo, with vomit stains on the pants. I pulled up my collar to ward off the cold. \n\nThe guy accompanying me laughed maliciously. He was in a t-shirt and filthy jeans. He said with disdain, \"You won't last -- faggot.\" \n\nShock helps people cope. You disappear into your subconsciousness. I couldn't remember my name, or the name of any of my loved ones. I didn't know where I lived, or anything about my life. I was confused and frightened. Still, whoever I was, was slowly returning. \n\nOur footsteps rang on the tween-decks ladder. Not a word was said. We emerged into a compartment that had an unrestricted view. It was light and warm and not as noisy. The space was filled with unfathomable machinery and electronic gear. I was filled with apprehension.\n\nThere were a couple of older men with a younger guy. They appeared to be steering the ship. They turned to look at me. \n\nThere was another man standing behind the group. That fellow beckoned. I got the impression he was appraising me as we approached. \n\nHe was tall, with a seafarer's gaze. He looked kind. I instinctively liked him. He turned to the deckhand and said in an accent that sounded faintly Norwegian, \"That will be all Nobby. Now get back to work.\"\n\nThe deckhand started to walk away. The fellow, who was obviously the Captain, made an angry noise. Nobby waved a salute and said, \"Aye Cap'n. Then he slouched off obviously pissed. \n\nThe Captain watched the retreating deckhand, with distaste. He said, \"Nobby's a stupid animal, just like the rest of them. But he's the best we can get.\" \n\nThen he said, all-business, \"Let's go into the Mess and we can talk.\" There was a passageway behind the Bridge. It led to a larger room. This was clearly where the people who ran the ship ate. \n\nThe Captain said, \"We didn't discover you until we were underway and there's no turning around in the shipping business. Who are you and why did you stow-away?\"\n\nI said, trying to convey the bewilderment that overwhelmed me, \"I was hoping you'd tell me. I have no idea who I am, or why I'm here, or anything about my former life.\"\n\nThe Captain looked incredulous. He said, \"Come on now? do you think I'm an idiot??! Who are you? What are you running from?\"\n\nI said imploringly, \"I know it sounds crazy. But I really don't remember anything about myself. I can recall a lot of things. But I can't tell you my own name. I'm hoping that I can get the authorities to help me when we get to our destination.\"\n\nThe Captain stroked his goatee, lost in thought. Finally, he said, \"Well, you can't ride for free, that's for sure. But I suppose I can put you to work. What can you do to help-out?\"\n\nI thought for a minute. I said, \"I knew a lot about computers.\"\n\nThe Captain said, \"We only have one computer and it keeps all of our records. I wouldn't let you touch that. What else do you do?\"\n\nI drew a blank. The talents I could recall wouldn't help. Abilities like how to fly an airplane, or play an elegant game of snooker, or select the right suit for a business meeting, were clearly out of the question. I finally shrugged and said, \"I really don't have anything useful that I can do.\"\n\nThe Captain thought for a second. He was a decent guy. But he wasn't willing to transport me for free and it was obvious that he wasn't going to put a stowaway in any position of responsibility.\" He looked around the room deep in thought. Then he seemed to come to a head-smacking decision. \n\nHe said, \"Of course!! I know how we can use you. We have passengers on this leg. You can work your trip as a steward.\"\n\nThat sounded a lot better than shoveling coal below decks; if shoveling coal was what sailors did these days. I said, \"Well, I DO know how to serve people.\" Although my memory was of being served rather than doing the serving.\n\nHe said, \"Good, you can bunk and mess here. That will keep you away from the deck hands.\" He added by way of explanation, \"You wouldn't last long in the focsle. Let me introduce you to the cook.\" \n\nThat was a relief. The Captain believed me, as unlikely as my story sounded. He was a decent guy, smart and compassionate. He used his authority for the good of his ship. What happened later was a pity.\n\n*****\n\nThat was how I began my career as a waiter, busboy and general all-around manservant. \n\nThe cook was a character. I later found out that being two-bubbles-out-of-plumb was part of a shipboard cook's job description. He had been at sea since he was a kid. He was drunk most of the time and he wasn't cordon-bleu. I was surprised I knew what that term meant. But Cookie could feed a ship full of hungry sailors and any passengers who might be along for the ride. \n\nCookie was short and skinny, with a neck like a vulture. His head was completely bald, and he had a buzzard's beaky nose. His pipe-stem arms were covered in intricate tattoos. He even had a classic, \"Arrr Matey,\" seafaring voice - I kid you not. I suppose it's what you get after a lifetime of drinking and beating the fuck out of yourself. \n\nCookie looked like he was in his early sixties. He had no-doubt been whip-slim and agile in his younger days. But that was 30, or 40 years ago. Now he was frail and broken by years of hard work. But then again, you couldn't tell it from his attitude, which was eternally grumpy. \n\nThe captain told him that I was working my passage as a cabin steward. The cook looked like he was hoping the captain would suffer instant buyer's remorse. \n\nThe captain said by way of orders to me, \"We have guests on the leg to Reykjavik. I want you to make sure they are well cared for.\"\n\nHaving learned from what I'd seen earlier, I saluted smartly and said, \"Aye Captain, they'll get the royal treatment.\" \n\nThe captain looked at my trashed tuxedo, disgust all over his face. He said to the cook, \"We need to get him a proper steward's uniform. Take him to stowage and get him something to wear.\" Then he added like an afterthought, \"He can sleep in stowage too.\" \n\nIt turns out that stowage had nothing to do with my \"stowing away.\" It was a room attached to the galley. They stored things in it, like a big pantry. It was full of useful stuff, discarded clothes and all the paraphernalia for the mess. I could make a bed out of the linens. \n\nThe cook selected an all-white get-up, pants and tunic. I looked like the Stay-Puft Marshmallow Man. But at least I didn't stink of vomit. \n\nHe left, and I looked at my reflection in a porthole. I saw a tall, lean guy, three-day stubble, on a long face, pale, almost translucent skin, high cheekbones with a thick shock of brown hair and deep grey eyes. The face looked more intellectual than ass-kicker. I wondered who I was.\n\nI walked back to the galley. The cook glanced at me with scorn. That seemed to be every crew member's opinion of me. \n\nI said mildly, \"Look, I have no idea why I'm here and I'm scared to death. So, I just want to get off at the first stop. In the meantime, I would appreciate it if you would help me. I don't have a clue as to what I'm supposed to do.\"\n\nThe cook eyed me icily and said, \"You work hard, do what I tell you and don't question me. We won't have a problem if you follow them rules.\" \n\nSo, we had come to an understanding. It was a small start and my anxiety level dropped from just-about-to-stroke-out, to merely hypertensive. \n\n*****\n\nThat evening, I was wearing my all-white steward's uniform and looking very subservient. I was fretfully waiting to serve dinner. The nerves were understandable. I'd lost every aspect of my identity. \n\nI was wracking my brain as I laid out the dining service. But I couldn't remember anything about myself. The weird part was that I knew a lot. I just didn't KNOW that I knew it. That is, until I had to remember something. \n\nFor instance, I knew the utensil placement for a formal table setting and I knew why it was important. I also knew that my knowledge was something that I'd acquired during my upbringing. But I couldn't envisage parents, or family. \n\nI didn't know whether I was married or even how old I was. I looked like I was in my thirties but the life experiences that would tell me my actual age were as alien as the Bermuda Triangle. \n\nSnippets of songs popped in my head like earworms, and I had occasional flashes of movie scenes and the faces of TV stars. But I didn't know names, only faces. \n\nI was told to be unobtrusive. So, I was standing like a potted plant against the cabin wall when the eight passengers arrived. This wasn't a fancy cruise ship. Everybody ate together.\n\nThere were a couple of batty old English duffers. They appeared to be a \"couple\" if you catch my drift. There was a family, composed of a husband and wife and two well-behaved kids. I assumed they were Icelandic although they spoke excellent English. Then there was the priest and his daughter. \n\nI knew he was clergy by the collar. I assumed he was an Anglican rather than Catholic. Otherwise he was in big trouble with the Pope. \n\nThe daughter was a classic English rose. She was short, perhaps five-one and busty with a sheaf of long, thick shining blond hair and that perfect clear British complexion. Her lovely, round, innocent face featured the most amazing pair of expressive, cornflower-blue eyes. She glanced shyly at me. I tried to put on my best impassive servant's demeanor. \n\nI hustled back and forth between the galley and the mess with plates of the food. There was no ordering. This was a tramp freighter. I also refilled the drinks. I knew that the wine I was serving was cheap and I knew how to pour it with the proper little swirl. But I didn't know how I had gotten that knowledge. \n\nThe mess wasn't spacious, and I was a new feature. So, the passengers were mildly curious. I gave them deferential answers, just like the butlers I'd seen in the movies. Except I had no idea where, or when I'd seen those films.\n\nThe passengers treated me politely, like you would a good servant. I found to my surprise that I was motivated to be the best waiter I could be. The need to excel, even if it was in the servant role, seemed to be a basic part of my programming. I filed that tidbit to think about later. \n\nBy the third day at sea, I had the routine down-pat. I rose at three AM to have coffee and breakfast ready for the middle watch. Then Cookie and I got regular breakfast for the passengers and the guys going on the morning watch. Once we had cleaned up, we did lunch for the forenoon watch and anybody else who wanted it. We did dinner at the end of the first dog watch and I was tucked into my cozy closet by the start of the first watch.\n\n*****\n\nIt was the middle of the night and we were passing south of the Fair Isle light. I could see it in the distance. I was leaning on the ship's rail watching the water rush past. I couldn't sleep. \n\nI was bundled in a watch-coat and cap from the ships stores. I had scrounged-up a pair of old jeans from the discarded clothes bin and serviceable boots that didn't quite fit. I had a thick fisherman's knit sweater, that the captain had leant me. Still, the cold was threatening to seep into my bones. \n\nFor the first couple of days I'd lived from minute-to-minute. My only goal was survival. All thought and emotion went into adjusting to my status as a stranger-in-a-strange-land. Now, the routine was part of my new normal and it pushed me into a state of deep depression. \n\nI knew that I was going to be in my present circumstance for three more days. Then we would arrive in Reykjavik and I would have to leave my familiar surroundings to forge a life for myself; all without memory or prospects. I think anybody facing those odds would step over the side and get it over with. \n\nI was considering doing just that when a sweet English voice said, \"It's eerily beautiful isn't it?\" I almost fell overboard; notwithstanding my original musings. I turned and a huge pair of innocent blue eyes were gazing hopefully at me. \n\nThe four passenger cabins were clustered along the bridge deck right behind me. She must have glanced out the porthole, seen me standing there and come out to be sociable. The only thing I'd felt since waking up in the focsle was fear. Now, my little friend added another emotion, interest.\n\nI tried to sound friendly as I said, \"Night at sea is like nothing else. Look at those stars.\" The crystal-clear blackness of the sub-arctic sky was covered in cosmic diamonds. \n\nShe said shyly, \"You get a sense of how insignificant you are when you're on the ocean. It's really kind of intimidating. There's civilization around you when you're in London. Here, the forces of nature can swallow you in an instant.\" \n\nThat was profound. I took a better look at her. She was an odd contrast of innocence and sexuality. Her face was gorgeous in a classic English way, huge blue eyes, snub nose and full succulent lips over a cute little pointed chin. The long, thick shining blond hair only added to the impression of Alice in Wonderland. \n\nHer body seemed slightly chubby, curvy and round with oversized tits and sturdy hips. The thought crossed my mind, \"We used to call those birthing hips.\" Where did I get THAT from? \n\nI chuckled companionably and said, \"When you're on the open ocean, you understand why seafaring people believe in mystical powers.\" She looked at me like I'd surprised her. No shit! I'd surprised myself.\n\nShe said, \"I'm Danae. People call me Dani.\" \n\nI knew about the original Danae. She was the human woman Zeus impregnated with a golden shower. I didn't want to even THINK about what that symbolized. \n\nDanae's father set her adrift in a box after she'd birthed Perseus. It turned out alright in the end. But it was touch and go for a while. Yes! I know... The part of my upbringing that allowed me to dredge up that story was a mystery.\n\nI blurted out, \"Like in the myth, Perseus's mother.\"\n\nShe looked at me speculatively and said who ARE you? You certainly don't look, or act like a ship's steward?\" \n\nSeriously??!! Now there was a question for the ages. How was I going to tell her that I didn't know who I was? \n\nI said, \"I'm Nemo.\" I knew it was Latin for \"nobody.\" But she was so young she probably thought I was referring to a little lost clownfish. \n\nI added sincerely, \"I've been a ships steward my whole life,\" which was exactly four days at that point.\n\nShe looked skeptical and said, \"As in Captain Nemo?\" Well she knew her Jules Verne, and again I had no idea why I recognized that. I laughed and said, \"Nope, just plain Nemo.\"\n\nShe looked at me flirtatiously and said, \"Well pleased to meet you Nemo and I hope we see each other a lot on this voyage.\"\n\nI tried to maintain my impassive servant's face as I said, \"At your service madam.\" \n\n*****\n\nThe next night, I was awakened by a pounding on my stowage door. We were in the neighborhood of the Faeroes. \n\nMy visitor was the First Mate, Mr. Francis. I never knew whether that was his first name, or his last. He had rushed back from the bridge to order me to round up the passengers and get them into the lifeboat. \n\nSOLAS regulations require one designated crew member for every lifeboat. That dates back to the Titanic -- for good reason. Since our ship was extremely short staffed, they chose me. Nobody ever needs lifeboats in this wired age, and I couldn't do anything else except baby-sit the passengers. \n\nFrancis yelled, \"Ships on fire!! Take the passengers to the port aft lifeboat station and get them boarded.\" \n\nThat particular lifeboat was special. It was something that they called \"free-fall.\" Meaning it was launched using a slide, rather than winched down. That way you could get by in a pinch with only one crew member. They had given me a half-hour crash course on how to operate it. I discovered to my delight that I was a quick study.\n\nIt was 2:19 AM. I was still wearing a Rolex Oyster Perpetual. That wasn't because the crew was honest. They'd gotten everything else of value. But the catch had unclipped, and the watch was jammed so far up my arm that nobody noticed it. \n\nI went from cabin to cabin knocking on doors. I was trying to project calm. The last thing I needed was panic among the passengers. When each of them answered, I told them to dress warmly and meet me between the cabins and the aft railing of the bridge deck. I could smell the fire burning forward. ",
        "They were all quietly assembled, bundled up and carrying some hand luggage. I doled out the life vests and then I led them down the ladder from the bridge deck to the main deck. \n\nThe passenger lifeboat looked like a dayglow orange turtle, with a little dome, for a head. The boat had a hatch and a boarding ladder. It was well over twenty feet long, and completely enclosed. It had one of those pump-jet systems with a ducted propeller acting as an impeller. You steered the thing by changing the direction of the impeller. \n\nI helped each passenger up the ladder and into the boat. The Icelandic family went first because they had the kids, then the pair of old English queens and finally the priest and his daughter. She was looking at me with shining eyes, like I was doing something heroic. I didn't want to tell her that I was doing it because I was useless anywhere else.\n\nI had the last of them boarded and secured by belts. A gravity launched lifeboat is like a cork. It plunges down a slide and into the water. So, it was important that everybody be belted in when that happened. \n\nI was standing at the foot of the ladder waiting for somebody to tell me what to do. Mr. Francis came rushing back. He looked a little singed. He said in a distraught voice, \"We're abandoning ship. The crew's launching the offload boats. Get the passengers in the water now!\"\n\nI said incredulous, \"You mean you want me to do this by myself?\"\n\nI'm not sure he understood me. Because he said angrily, \"The hold is going to blow any minute. Get off this ship!!\" and he turned around and raced back forward. \n\nI wondered what we'd been carrying. I suppose tramp freighters can't be choosers.\n\nI made my way up the ladder, strapped myself in the bosun's seat and said, \"Hold on everybody. This is going to be a wild ride.\" \n\nI pulled the lever. The release activated. We shot down the rail and over the side. There was a bone-jarring impact and I could see through the dome's porthole that we were almost under water. Then the boat righted itself, which is what it was designed to do. \n\nI said shakily, \"Is everybody all right?\" Just then, there was a godawful explosion, a shockwave and a few seconds later a huge wave crashed over the boat. \n\nAll of the passengers screamed in fright. Hell, I was screaming. The boat righted itself once more. Suddenly there was nothing but silence, the sound of waves breaking, and people sobbing.\n\nFrankly I didn't know what had happened. All I cared about was that we were still okay. The lifeboat was fully enclosed and watertight. There was emergency lighting, so I counted heads.\n\nThe boat was twenty-six-feet-long and fourteen-feet-wide. It was a sealed container with deep benches along the side and storage at each end. There were portholes distributed along its length. I was sitting slightly higher than the rest, strapped into a little seat with the wheel and engine controls in front of it. That gave me a view out the cupola. \n\nThe only thing I could see outside were breaking waves and rain. There was a glow off in the distance that might have been the sinking ship. \n\nI was beginning to think that I must have really pissed-off some vengeful god. Because in less than seven days I had gone from the shock of losing my identity, to the shock of being shipwrecked. That had to be a Guinness record for the Jonas's of the world.\n\nI said, trying to sound optimistic, \"I'm sure they sent a distress signal. Somebody will find us. In the meantime, let's inventory our supplies.\" I didn't believe a word of what I'd just said. But I didn't want the passengers to fret.\n\nThe boat was designed for twenty people and we only had nine, two of whom were kids. So, there was a lot of room and abundant stores. The Icelandic man, who seemed like a stalwart son of the Vikings, rose and moved to the forward locker. His wife was comforting the children who were holding up pretty well. \n\nThe Priest and the two ancient British queens were in the front griping about the quality of the trip and how vigorously they planned to complain. At least the old farts weren't bugging me. \n\nI went to the aft locker and was joined by Dani. She gave me a steadfast look and said, \"How can I help?\" Great, She wasn't going to go all girly on me. \n\nI said, \"We need to find out what supplies we have.\" She nodded and started rummaging and stacking contents like an industrious little chipmunk.\n\nOnce we went through the lockers, we found water and emergency rations. We also found some sleeping bags and thermal blankets. Those would come in handy, because the inside temperature had dropped into the upper 40s. There were flashlights, a flare gun and loads of flares. There was also a hand-held radio. We could use that to contact our rescuers. \n\nFinally, there were some utilitarian things, a shovel, a couple of wicked looking knives and an axe. There was also an old Colt 1911 .45 caliber automatic pistol. The clip was full, and one was in the pipe. \n\nAs the authorized \"ship's officer\" I confiscated the Colt. I had no idea why I was so naturally proficient with guns. But I was getting used to knowing odd things. \n\nThen, we settled down to wait. The lifeboat was being bounced around by the wind and high waves and the ride made it hard to sleep. But the kids and the three old people managed. The Icelandic couple just sat quietly on the bench holding each other\n\nI was trying to keep us headed into the waves and out of the troughs. The wheel at the conning position was linked to the impeller. I was running the propulsion system on the battery. I didn't want to use up our precious diesel fuel. The gauge said we were about ten percent through the charge. \n\nDani was sitting with me, engaging in small talk. She was clearly trying to help me pass the time. I learned a lot about her; besides the fact that she was fiercely loyal. She was twenty-seven and just finishing her studies at London Southbank University. \n\nHer father had a living in Southwark and the two of them were on some kind of cooperative agreement mission with the Lutherans in Iceland. She had come along on the trip just to take care of him. \n\nShe had been doing that her entire life. Dani's mother had left when she was nine. Dani was forgiving. She said stoically, \"My father can be difficult at times.\" That was an understatement. \n\nI asked her what she planned to do when they got back. She said that she had a teaching license and she was going to work at an infant-school in Reading. \n\nI got the impression that she wanted to find a husband and have kids. But that she had postponed her life because she was devoted to her dad. I thought to myself, \"This girl is like a character out of a Jane Austen novel,\" which of course made me wonder where I got THAT analogy. \n\nDani appeared to be innocent to a fault. She didn't outright say that she was a virgin. But she dressed and acted like a righteous church-girl and I got the impression she had led a sheltered life in the rectory. \n\nI wasn't having carnal thoughts. You have to have a sense-of-self in order to generate sexual energy. In my case, every emotion except fear and anxiety had been wiped from my consciousness. Hence, there was no steam in the boiler - so to speak. \n\nDani kept trying to get my story. She said, \"You're an American, right? I can tell it from your accent.\" Now that was news. I put it in the pile of things I'd recently discovered.\n\nShe wouldn't let up. So, I spun her a yarn about how I was an orphan, gone to sea to escape foster care. I told her that I read a lot and that's the reason why I sounded like I was well educated. That might be true. But it was more likely a plot from a Kathleen Woodiwiss novel. \n\nDani was easy to fool. She was an inexperienced girl and I had no point of reference to contradict myself. So, I convinced both of us.\n\nOur conversation went on in that vein for several hours. I finally began to discern the wolf-light before dawn. The waves had settled-down and I could see where we were going. I started the little diesel to give us better headway and charge the battery. \n\nWe meandered along for most of the next day. If other lifeboats had launched, we never encountered them. Finally, I saw an island in the distance. I knew we had been quite close to the Faroes when we had been shipwrecked. This might be one of them.\n\nWe were lucky. Dry land was a better proposition than bobbing in a lifeboat and we could build a fire. When I got near the island, I could see that it was small and rocky, with steep cliffs that ran down to a narrow stony beach. \n\nThe sky was slate grey and it was foggy. There were gulls and puffins circling the foreboding crags. There also seemed to be a glow inland. Damn!! that was ominous. I thought, \"God! I hope it's not a volcano!\" \n\nThen, it was like we crossed an invisible line and the day, which had been overcast and gloomy, turned almost as dark as night. I flicked on the boat's forward-facing lamp and there was a vicious snow squall blowing around us. I guess that explained the sudden dark.\n\nI threw on full power as we entered the little cove. The shingle was covered with small round stones which actually helped when I beached us. \n\nI ran the lifeboat as far as I could get on shore. That would give us a stable home base until somebody rescued us. We were hard aground. But I planned to pull the boat further up tomorrow. There was plenty of rope and the underlying stones would aid in the pulling. \n\nWe bedded down for our second night shipwrecked. There were four sleeping bags. The old queens were crammed together in one, as were the Icelandic mom and dad. The priest had his own and Dani had given her sleeping bag to the children. The two of us had nothing but thermal blankets and it was getting cold. \n\nI was lying on the stern bench, near the steering position. Dani came back to where I was and said bashfully, \"Could we sleep under these blankets together? We're fully clothed so it isn't like we would be violating any rules of propriety. We'd just be conserving body heat.\" \n\nHow quaint, but it was an excellent idea. The two of us huddled together actually produced enough warmth that the night was tolerable if not exactly comfortable. \n\nWe fell asleep back to back. But Dani was sprawled half on me when I awoke, head on my chest big tits squashed between us and I had a hand holding her at the small of her back.\" Her light snores sounded like she was purring.\n\nI let her sleep while I toyed with a memory. Our position evoked the sense that I had done this before with somebody I loved. It was a bittersweet recollection given that I was lying with a virginal church girl, aground in a lifeboat, in the middle of a blizzard, on a mysterious island, somewhere in what I assumed was the Faroe chain. \n\nI also noticed something. I gently moved Dani off me and got into the conning position. I could see that we were back afloat. Drat!! I hadn't accounted for the tides. We had apparently come in at low tide then refloated in the flood. I realized that I could use that to move us the rest of the way up the beach. \n\nIt was full daylight now and everybody had slept long enough. They could go back to sleep if they hadn't. I backed off a little distance and put the impeller on full speed ahead. The jolt woke everybody up, as we ran far enough up the beach to make it permanent. \n\nThe old folks complained and went back to sleep. As did the kids. The Icelandic couple joined Dani and me for a freeze-dried breakfast cooked over the little propane stove.\n\nThey were a couple of Vikings, or at least what I imagined a Viking ought to be. Iceland didn't have an indigenous population until the Norse showed up, and after that their communities didn't intermix with the rest of Europe. Hence, Icelanders more-or-less look like the original lot. \n\nBack in the Viking days, Iceland was as far from Europe as you could get and still be within sailing range. Even today, it is the most sparsely populated country in Europe and its language is closer to old Norse than any other spoken. So, when I said that our new castaway friends were Vikings, I meant it. \n\nThe man was taller and a lot more muscular than I was. Dark blond with classic square forehead, Nordic features and a neat well-trimmed beard. The woman, whose name was Birgit, had very abundant dark red hair. That reminded me that the Vikings also brought Irish slaves. Don't bother to ask -- I still didn't know where my knowledge came from. \n\nUnlike Dani, Birgit was handsome rather than beautiful; strong body, with an oval face, high cheekbones and Scandinavian features with intelligent green eyes. We discussed the situation over breakfast and the man, whose name was Ivar, and I decided to do a little scout around. \n\nBoth women insisted on coming. I was sure that Birgit would hold up. She was almost six feet tall, and both the Icelanders were dressed in anoraks. \n\nDani was another matter. She was much smaller than the rest of us and she was clearly a rectory cat, not a wilderness one. Also, Dani had on a heavy wool coat. But it wasn't designed for wet weather like my watch coat. \n\nI reminded her that the kids would need looking after. Her eyes softened, and she said, \"Then I'll stay here and do that.\" She clearly loved kids. \n\nWe opened the hatch and dropped to the ground. The tide was out, and I could see that the boat was permanently beached. But we needed a place to stay on dry land. \n\nThe lifeboat had a decent pair of binoculars, which Ivar was carrying. He said, \"This looks a lot like the area around Isafjordur. That is one of the most desolate areas of our very difficult island.\" \n\nHe did a scan along the cliffs, stopped and rescanned. He said excitedly, \"I see something.\"\n\nBoth his wife and I said, \"What?!! Do you see any sign of civilization??\" I had visions of remote weather stations stocked with gallons of hot coffee.\n\nHe turned toward us and said puzzled, \"No, but I DO see the mouth of a large cave with a path leading up from the beach.\" That was disappointing.\n\nWe walked down the rocky shore, to the winding dirt trail. It appeared to have been created by generations of people tramping up to the cave. It was narrow but serviceable. We got to a big semi-circle of flat ground, in front of the cave mouth. Ivar stopped short and stared. \n\nHe said stunned, \"My God!!!\" \n\nBoth his wife and I said simultaneously, \"WHAT??\"\n\nHe was gazing at some scratching on the rock at the cave entrance. He said under his breath, \"It's Futhorc.\" \n\nI looked puzzled. He collected himself and said, \"Those are runes. They say \"Gnipahellir.\" That is the name of the cave to Hel.\"\n\nThat didn't enlighten me. His wife said by way of clarification, \"Icelandic heritage and culture is Ivar's passion. He's studied it since he's been a boy. Runes are the ancient letter script used by the Norse people.\"\n\nIvar added, \"And somebody has written the name of the legendary cave to the Norse underworld next to this entrance. In the sagas it is guarded by Garmr the hellhound. It leads to the region that the Vikings called Hel.\"\n\nI looked incredulous and said, \"Like Hell? Eternal damnation? Devils with pitchforks? Lots of fire? That kind of Hell?\" \n\nIvar gave me a grim smile and said, \"Same word, entirely different concept. For the old Norse, Hel isn't a reward for good behavior or punishment for wickedness. It's a continuation of life somewhere else. It's just a place where people eat, drink, fight, work and so forth.\"\n\nOkay, that made sense. But it didn't solve our current problem. I said, \"We need a protected place to wait for our rescue. Is there anything in Norse mythology what would prevent us from bedding down in this particular cave?\"\n\nHe laughed and said, \"Well supposedly it's the residence of a gigantic bloodstained wolf named Garmr. But he doesn't appear to be living here at present. So, by all means let's explore.\"\n\nThe cave mouth was perhaps twelve feet round. It was solid rock with a flat, well worn bottom. An image of a \"lava tube\" flashed through my mind. I knew that those things were created by volcanic activity. \n\nThen I remembered the red glow. I was even more convinced that there was something volcanic going on further inland.\" I lit one of the hand flares and held it over my head. We walked into the cave accompanied by garish red light.\n\nWe walked down the smooth rock passage perhaps a quarter mile. The temperature went from freezing to almost unbearably hot. We were clearly approaching some kind of magmatic activity. There were no rumblings. But we heard the sound of rushing water. There was evidently an underground river ahead.\n\nWe had passed through a temperate zone just after we entered the cave. There was no need for our coats in that region. So, we took them off. Standing there in my jeans and fisherman's sweater I realized that this was an ideal place to settle-in for the duration. We didn't even need a fire. \n\nFinding the cave actually gave me an unwarranted sense of security. We were protected and warm, and we could wait out any period required to rescue us. We had plenty of food and some useful technology. We had a radio and a GPS signal. We were going to make it. \n\nI was starting to forget that I was a nameless blob, a nobody without a past and with a very uncertain future. I had survived so far by living in the moment and perhaps that was the secret. \n\nI had friends around me and a woman who piqued my interest. I thought to myself, \"Sometimes you can worry too much about the indefinite future.\" I decided that it was time to let the winds of fate blow me to whatever destination I was meant to reach. \n\nSo, we returned to the lifeboat and moved our little group up to the cave. Nobody could be expected to foresee, or even believe what happened next.\n\n**** \n\nWe settled into our warm and cozy new home. We had enough water and freeze-dried food to last a couple of months and Ivar told me that puffin eggs were an excellent way to supplement that diet. We had an emergency locator that broadcast GPS coordinates. I was confident that somebody would hear the signal and respond sooner-or-later. \n\nIt went back to blizzard conditions as night fell. We considered ourselves incredibly lucky. Living on the lifeboat in the cold and winds would have been unadulterated hell. The group bedded down and tried to get comfortable on the rock floor. I planned to explore to the back of the cave the next day. \n\nThere was plenty of driftwood and even a few dead trees. So, we built a protective fire at the cave's mouth. It was a stone-age measure to keep away unwanted visitors. \n\nBut somebody had to tend the fire. I wasn't able to sleep, which seemed like my normal state. So, the decent thing was to sit up in the darkest hours of the night. \n\nI was doing that, when I saw the faint glow. It was probably just radioactivity in the rocks. But it was weird enough to warrant checking out. I rose, brushed off my jeans and crept in that direction. I was using one of the flashlights to avoid stepping on sleeping forms.\n\nI extinguished the light once I passed our people. I was wary, because in a place like this anything out of the ordinary could be a threat. Especially if it was in a cave called Gnipahellir. \n\nIt was clear that the light was real, and it was becoming progressively brighter. There was a slight bend in the cave. I plastered myself against the wall and peeked around the corner. \n\nThat's when I saw the apparition. It was substantial, not a ghost. But it was emitting a bluish glow, like a spirit might. \n\nThere was something innately vile about the thing. It looked cruel and cunning, handsome in a nefarious sort of way, like the classic devil character complete with a Van Dyke beard. Except this guy wasn't red and sporting a tail and a pitchfork. He was dressed like a Viking warrior. ",
        "I made a startled sound. It was a natural reaction. It's the way you would respond if you'd suddenly stumbled on a mortal threat, like a coiled rattler. The specter looked in my direction and I heard a high-pitched mocking laugh. It dripped with arrogance and scorn. \n\nThen he did something with his hand, like a magician casting a spell, and it was the first light of morning. I was resting in the spot where I had been tending the fire. \n\nI must have fallen asleep and dreamed it. But it seemed so real and my heart was frantically hammering. I looked up the tunnel. But of course, there was nobody there. The Icelanders were starting to rouse, as was Dani. \n\nI tossed a pile of driftwood on the fire and walked back to the chests. We'd hauled them up from the boat the prior day. I wanted to make sure our stuff hadn't been disturbed.\n\nEverything seemed normal. I was relieved. I'd had a bad dream.\n\nDani joined me. She was wearing the same kind of fisherman's sweater. But HER sweater was stuffed full of boobs. It occurred to me that this was the first time I'd thought of her that way. \n\nMy prior lack of response was understandable. Dani might be gorgeous, but she radiated naivety, which is exactly the way you would expect an Anglican cleric's daughter to be. But then again, with a face and body like hers I'm sure other guys had been tempted. It would be impossible to spend any time with a woman who looked like Dani and not at least try. \n\nShe smiled and said a cheerful, \"Good morning.\" \n\nSeriously??!! Her cheeks even had two cute little dimples. She had been shipwrecked for over two days and yet her long sheaf of shining blond hair looked like she had just brushed it smooth. \n\nI muttered a distracted, \"Good morning to you too.\" \n\nI was busy digging out breakfast. There was no need to use the water from the boat. There was plenty of snow outside courtesy of last night's blizzard. In fact, the first thing we did after breakfast was gather more wood and replenish the water supply.\n\nWhile we were doing that, I pumped Ivar for more information. I didn't want to bring up what I'd seen, since I was convinced it was a dream. But I wanted to get a better handle on the sort of bizarre things that might have prompted it.\n\nI said casually, \"So you're an expert on Norse mythology?\" \n\nHe laughed and said, \"It's my hobby. I'm a hydroelectric engineer in my day job. Iceland sits on the crack between two tectonic plates. Thus, it is among the most volcanically active places on the planet.\"\n\nHe added, \"That's both a blessing and a curse. It's a curse because our volcanoes occasionally erupt. But it's a blessing in the sense that we have infinite amounts of steam to power everything from our electric grid to our hot water heaters.\" \n\nI gestured around and said, \"This is a lava tube - right?\"\n\nHe said, \"It looks like one. There are a string of islands off the Icelandic coast, the Faroes being the largest. They have the same issues with vulcanism as our island nation has.\"\n\nI said, \"Do you think there's a volcano at the end of the passage?\"\n\nHe grimaced and said, \"I imagine there is. The heat has to come from somewhere. It would make geologic sense. But, it's highly unlikely that we would have an eruption in the short time we're here.\"\n\nI said conversationally, hoping that he would interpret my questions as idle curiosity, \"So what about the hellhound who lives in our cave probably has a master - right?\" \n\nHe laughed and said, \"He's Hel's pet. That's the woman, not the location. She's the daughter of Loki and if the runes are correct this is the entrance to their place of residence.\"\n\nI said, still trying to sound only mildly interested, \"So who is this Loki fellow anyhow?\" \n\nIvar laughed again and said, \"Every religion has to have its bad boy. For the Christians and Jews, it's Lucifer. For the Norse it was Loki. He was the son who constantly embarrassed the family, always in some kind of trouble.\"\n\nIvar added, warming to the story, \"Loki isn't a prototypical Viking warrior like Thor. In fact, he's jealous of Thor, sort of like the classic little brother.\"\n\nHe added, \"Loki's portrayed in the Norse sagas as devious and cowardly. He only does the things that serve his own purposes, never anybody else's. His sole aim is self-preservation and his own shallow pleasures. He's playful at times. But he's also arrogant and a complete anarchist.\" \n\nIvar was making the Viking sagas sound more like a modern soap-opera. He said, \"Loki isn't really one of the Asgard gods. He's a Jotunn. The Norse Eddas aren't exactly clear what a Jotunn is. They have god-like abilities. But they also have human characteristics. Loki's equivalent is somebody like the Greek's Hercules, sort of a demi-god.\" \n\nIvar smiled grimly and said, \"Loki is the clever one, a trickster, a shape shifter. He can assume many forms. His tricks are more malicious than truly evil. But he eventually went too far and got his brother Baldur killed. So, the other gods chained him to a rock until Ragnar\u00f6k.\"\n\nI asked the obvious question, \"What's Ragnar\u00f6k?\" \n\nHe said, \"That's the battle that ends the Norse world. Ragnar\u00f6k destroys the Viking universe in fire and conflict. The Gods fight the evil creatures that inhabit the Norse cosmos, like Fenrir, the all devouring wolf and Jormungand the venomous Midgard Serpent.\"\n\nI said, \"Sort of like the Book of Revelations but with Viking overtones.\"\n\nIvar brightened and said, \"Yes, just like that -- except Loki fights on the side of chaos, not order. \n\nI recalled something. I said surprised, \"I know some names. Odin is their chief god -- right? And Thor does thunder and lightning. What does Loki do?\"\n\nIvar laughed again and said, \"He's in charge of fire, earthquakes and volcanos,\" \n\nWe were both carrying a load of firewood. I nearly dropped mine. I looked at the cave and thought, \"Shit! Fire and volcanoes!! It couldn't be.\"\n\nI got one more revelation on our trek back up the cave. Dani insisted on coming along. So, the two of us were walking side-by-side. She's almost a foot shorter. So, when I looked down all I could see was her shining helmet of golden hair, her pert nose and two large swaying protuberances -- welcome back sexuality. \n\nOf course, Dani chattered away like a little bird, totally oblivious to what she was doing to me.\n\nWe explored well past the point where I had seen the apparition and it got progressively hotter. We pressed on and came to a monstrous cavern that contained a huge underground river. The cavern was so vast that we couldn't see the ceiling, only blackness.\n\nThere was a stone bridge over the river gorge. It didn't look like a natural formation. There were some runes. Ivar looked at it and gasped, \"It says Bifrost. That's the bridge to Asgard.\" \n\nOkay, this was getting really weird. I said exasperated, \"Do you mean to tell me that the Norse version of heaven is on the other side of that bridge?\" I'd had enough of the folk tales.\n\nIvar said, \"I'm telling you nothing more than what the runes say. My guess is that the volcanic caldera is somewhere right over there. That would fit with the myths. They say that Asgard was destroyed by fire.\"\n\nThat was enough. I said apologetically, \"I'm sorry Ivar. It's just that this has nothing to do with our rescue. It doesn't look like there's anything helpful up ahead and it's getting unbearably hot. We should just go back.\"\n\nEverybody agreed. So, we turned around and trooped back. We decided to tell the others that we'd found nothing. Mentioning the Bifrost bridge and Asgard would just cause needless speculation.\n\nThe rest of our day passed without incident. We gathered more firewood and checked the distress signal. I ran the diesel for a while to fill up the battery and we bedded down for the night. \n\nThere is something about night and caves that connects with the primeval part of your brain. It brews nameless fears and a shadowy sense of dread. We had one old .45 caliber pistol and I knew how to use it. How did I know that? I still had no idea. But I laid it next to me for company in the dark of the night.\n\nThe long hours of any watch wear on your psyche. You have time to contemplate and all I could think about was how much deep shit I was in. I was sure that they would take us to a hospital after they picked us up. I was hoping that I could talk to somebody there. Maybe there was some kind of treatment that would help me get my memory back?\n\nThen there was a tingling in the air, like static electricity. Time was frozen. I couldn't move. I looked up and there was a different entity in front of me. I thought, \"That confirms it!! I'm nuts!!\"\n\nHowever, this apparition was bigger and older than last night's. His most striking feature was his single, piercing eye. His other eye socket was empty. He had the look of royalty and he wasn't carrying a war-hammer. So, my guess was \"Odin.\" \n\nLast night's ghostly presence had scared the shit out of me. My reaction to this one was unmitigated awe. He was the boss god, the guy whose only purpose was to acquire and spread knowledge. If you took Oxford University and packed it into a single body -- that's what it would look like. \n\nI heard a deep portentous voice say, \"You can only kill that which is not him.\" What the fuck did THAT mean??!!\n\nThen it was morning again. Whether it was minutes or hours was immaterial. My hallucinations were getting to be a serious concern. Maybe the loss of memory was related to those dreams. Perhaps it all tied together. Maybe I had a brain tumor?\n\nA blood curdling cry blasted me out of my self-involved reverie. It came from Wilfred. Both he and his partner Charles were sleeping the furthest back in the cave. They were elderly and the cold bothered them. \n\nI jumped to my feet and rushed back to see what had happened. The source of the concern was obvious, Charles was lying unconscious and there was blood everywhere. I rushed over to him. He wasn't dead. I could see him breathing. \n\nI shouted, \"Get me some water!\"\n\nWilfred hustled up with one of the water jugs. I soaked a cloth, squatted down and daubed the blood. Charles started to come around. He had a big cut across his forehead and his nose was smashed. \n\nIt looked like he might have fallen against the side of the cave. There was blood on the wall. But the splotch was too far up. He opened his eyes. I could see horror in them. He said in an anguished tone, \"I tried to stop him!!\" \n\nI said, \"Who? Stop Who??!!\" \n\nHe gestured toward where the rest of us had been sleeping and said, \"The man who took them.\" \n\nI looked in the direction he indicated. My spine turned to ice. Both women were missing as was the priest. There were only six of us now -- Ivar, Charles, Wilfred, the two kids and myself!! \n\nAccording to Charles, the two women had been kidnapped by a man dressed like a dark-ages barbarian. I'd seen that dude before. It was Loki!!\n\nCharles told us that Loki had tucked the two women under his arm and casually walked off in the direction of the cavern. He said shaken, \"It was like he was picking up a pair of sleeping children. He must have done something to them. Neither stirred\" \n\nThen, when Charles tried to intervene, the man had grabbed him and smashed him against the wall. I said, \"What happened to the priest?\"\n\nCharles said, \"I don't know. He was sleeping nearby. He might have wakened like me. Maybe he ran after them.\"\n\nI looked at Ivar. He was understandably distressed. I said, \"We're going to have to go back into that cave. Are you coming? Charles and Wilfred can watch the kids.\"\n\nIvar gave me a forlorn look and said, \"We have no choice my friend. I would die without my wife.\" Sadly, he had no idea.\n\n***** \n\nThere was a brief, harried period of gathering weapons. I had one of the knives and the gun. Ivar had the other knife and the axe. It was a proper weapon for a proto-Viking. Ivar solemnly hugged his kids. They were trying to be brave. But, the little one burst into tears crying, \"I want mommy?\"\n\nWilfred scooped him up and said soothingly, \"Hush - that's what your daddy is going to do my little chap. They'll all be back tickety-boo.\" I didn't speak ancient British. But I assumed that was meant to be comforting. \n\nI understood what \"dark as a grave\" meant as soon as we got out of the daylight from the entrance. I recall thinking, \"Enclosed space, earthy smell -- yep! It feels about right.\" I hoped that wasn't an omen.\n\nThere is something unnerving about walking in total blackness. We chose to only use pen flashlights, not a flare. Loki was a Jotunn not an Asgard god. He hadn't been aware of my presence until I made a startled sound. So, maybe he had normal hearing and eyesight. Perhaps we could sneak up on him; maybe catch him asleep or something?? Right??!! \n\nDon't bother saying it - I knew I was kidding myself. You can call me stupid if you want. I kept muttering that word under my breath as we crept along in the dark. But my sense of who I was, the part that was hidden from me, wouldn't let me turn back. \n\nI told Ivar about my earlier brush with Loki. He said angrily, \"Why didn't you tell me this before?!\" \n\nOkay, that was a little harsh. But I knew where it was coming from. I was just as worried about the fate of my little friend Dani. She was such a sweet and innocent soul. \n\nI said, \"Look man, think about it. How would you feel if I'd told you that I'd run into the Norse God Loki? Would your first thought be that your wife was going to be kidnapped, or that I was crazy?\"\n\nIvar said grimly, \"If you told me that I would have advised all of us to leave immediately. There have been far too many indications that this place is supernatural. All the signs were marked by my ancestors. We just didn't pay attention to them.\" \n\nPersonally, I would have gone with the \"crazy\" option. But I guess belief in mythological characters was a Viking thing. I was about to apologize, when we splashed through a puddle on the cave floor. \n\nWe both pointed our lights down. I found to my absolute horror that we were standing in a pool of rapidly congealing blood!! That deserved a flare!! \n\nThe flare lit the cave in a dazzling red glow. The red was appropriate. There were two pieces of human body totally separated; intestines were strewn in between. It was the source of all the blood. I dropped the flare in horror and revulsion.\n\nIt was the priest. He was lying face up with his lower body turned in the opposite direction. It was like an unruly kid had twisted a doll in half. The priest's mouth was a rictus of fear and pain. \n\nI threw-up on one side of the cave, Ivar puked on the other. \n\nIt was appalling and disgusting. But it was also terrifying. That grisly sight meant that we were facing a creature who was unspeakably cruel and inhumanly strong. An old .45 and two knives weren't going to do much against a guy like that. Ivar and I had to talk.\n\nI rinsed my mouth from our water bottle and glanced at Ivar. He looked as green as I felt. I nodded at the mess on the floor, it was scarcely human, and said dispassionately, \"We're going to get the same treatment if we catch this guy.\" \n\nIvar looked unhappy. He'd obviously been thinking the same thing. But he didn't have a choice. Loki had kidnapped his wife. Running away would be an insufferable act of cowardice. I, on the other hand, didn't have a dog in the fight. At least that was what I'd thought.\n\nThen I remembered Dani's sweet face, her devotion to me, her kind, gentle, loving disposition and the underlying current of smoldering sexuality. I had to go after her, even though we'd only just met. \n\nA random thought flashed through my mind. I knew that this was something I was uniquely suited to do. It was part of my past.\n\nWe were resting in the dying light of the flare, butts propped against the cave wall, hands on knees, still getting over the gruesome thing we'd just seen. I said, \"Tell me everything you know about this Loki. What are his strengths and weaknesses?\"\n\nIvar said, \"He's superhumanly strong, but not like Thor, or Tyr. He's crafty, but not as clever as Odin. Shape-shifting is his only unique ability and that's mainly to deceive.\"\n\nIt looked like an idea struck him. Ivar said excitedly, \"When Loki shape-shifts he has the same vulnerabilities as the creature he has changed into. THAT's his fatal flaw!!\"\n\nOdin had alluded to that. I said, \"For the sake of full disclosure, Odin paid me a visit last night. He was in the process of telling me the same thing when the kidnap happened.\" I had the passing thought, \"Maybe Odin knew what Loki was doing?\"\n\nOkay, that sounded weird -- even to me. I'd just been advised by the king of the gods about the best way to handle one of his errant subjects. \n\nIvar took me totally seriously. He nodded and said, \"The gods can be injured and even killed. It's part of the Norse mentality. To the Vikings, dominance is determined by who's the best fighter and fighters have to be susceptible, otherwise there wouldn't be a point to the contest.\" \n\nHe added, \"A wound means somebody has defeated you. So, if a warrior is wounded, he loses status and reputation. It's a central aspect of their very harsh culture -- it's survival of the fittest. That also applies to the Viking gods. At Ragnar\u00f6k the various gods kill each other in mortal combat.\" \n\nI said, just to clarify, \"So, we can take Loki out, if we can get him to shape-shift into something that we can hurt, like an animal, or another human??\"\n\nIvar nodded eagerly and said, \"It's the only chance we have.\" \n\nWe had a plan. But, the sense of unspeakable dread remained.\n\nBoth of us had our reasons for continuing up that cave. Ivar's motives were simple. Loki had stolen his wife. We both knew why Loki kidnapped the two women. The Vikings liked to rape just as much as they liked to pillage. So, Ivar had to man-up or lose everything.\n\nMy motives were a bit more complex. To be honest, doing the right thing was a rationalization. It wasn't the actual reason. The fact was, Dani's loyal and loving soul had worked its way deep into my heart \n\nFearless just means you don't understand the odds. It takes real courage to press on when you're shitting yourself. I was pretty sure that we were going to end up like the priest. But I was still willing to fight a legendary Norse bad-guy, armed with nothing but an ancient pistol and a carving knife; all for the sake of my little rectory cat. \n\nOnce we got to the cavern, we didn't need the flashlights. We could see clearly in the ambient orange glow. The problem was that we could be seen by anybody on the other side while we crossed the bridge. So, we hustled over it as fast as we could. \n\nThe other side was a revelation. Ivar had told me that Asgard was the Norse version of heaven. But it looked more like the Christian hell. The space was perhaps 200 yards wide and it was the lip of an active volcano, which curved off into the unseen distance. \n\nThere was the sound of an unspeakable force brewing in the huge caldera below. The glow was brighter there. It lit everything in an eerie orange light. Ivar had alluded to an end-of-the-world scenario. Maybe this was it. \n\nBut where was the heat? We should be burning to death. After all, we were standing next to an active volcano. Instead, it was like a nice spring day in Copenhagen; meaning it was cool and pleasant. \n\nOf course, they were gods. So, I suppose they could make their weather whatever they wanted it to be. And perhaps there hadn't been a volcano next door before Ragnar\u00f6k. \n\nStill, what caught my attention was the enormous Viking mead-hall hulking at the end of the wide, brick path. From the sound of it, they were having a lot of fun in there. \n\nIvar said awed, \"Valhalla.\"\n\nValhalla was the place where Viking warriors ended-up, if they were heroic enough in battle. My heart sank. I thought to myself, \"The guy who we're after is in there with an all-star cast of Viking berserkers. We can't just walk in and yell, Stick 'em up!!\"",
        "The building was perhaps thirty feet tall and heavily thatched. Ornate Norse carvings stuck out from the eaves, like longship prows. There was a plume of cooking smoke coming out of a hole in the roof.\n\nThe walls themselves were perhaps 15 feet high. It looked like big logs had been jammed into the ground, just like the stockade of an old-west fort. The space in between each log was caulked with mud to make it weather tight. But there were a few places where the mud had been dislodged. We crept up to the nearest hole to sneak a peek. \n\nThe hall was brightly lit by torches. A big fire was burning in the middle of the room. There were maybe twenty-five burly Vikings sitting around a huge table, all in various states of drunkenness. Those must have been Loki's posse. The air was heavy with smoke from the torches and the fire.\n\nLoki himself was sprawled in a huge elaborately carved chair, which had been elevated on a raised dais. He was holding a hefty drinking horn and smiling condescendingly down at the group in front of him. \n\nI only peripherally noticed the rest of the scene, because I had spotted Dani reclining submissively at Loki's feet. She was being displayed like a trophy, lying on her side on a bear-skin rug, round hip jutting. \n\nShe was totally nude, as were all the women moving around the table serving the men. One of those was Birgit. \n\nAs I watched, Loki reached down and raised Dani to her feet. My first thought was, \"She had THAT body underneath all those church-lady clothes??!! \" She was a Viking raider's dream; a goddess.\n\nShe wasn't even remotely chubby. It was her loose hanging clothing that created that impression. The clothes masked her narrow waist. Her taut round hips and big boobs. \n\nI knew that her breasts were huge. But that much mass should have hung down, not just jutted out like a couple of ripe melons. Her stomach was flat; soft round and bountifully inviting. \n\nLike the innocent girl that she was, she hadn't done anything about her bush. It was full and proud topping the finest pair of sleek, well-muscled legs I had ever seen. \n\nMy reverie was interrupted by two things. First, Loki turned Dani to face him. She shifted her stance to one of erotic invitation, legs spread slightly, and her hips thrust forward. She reached out and dangled her arms over Loki's shoulder, presenting her body to him. The ferocious heaving of her chest made her big tits bobble tantalizingly. \n\nShe stared deeply into Loki's eyes and her face morphed into a mask of pure lust. Loki brought his lips down to hers and she opened wide to receive him. \n\nThe two of them explored each other's mouths. Then Loki grabbed Dani's delicious round ass and plastered her naked crotch against his no-doubt raging hard-on. He reached between them and fumbled for a second. Dani's head rocked back, and her explosive shriek of sexual pleasure could be heard above all the laughing and talking. \n\nLoki seized the two exquisite globes of Dani's butt and hoisted her completely off the ground. She got a death-grip on his neck, wrapped her long gorgeous legs around his waist and began making rhythmic Ungh! Ungh! Ungh! Ohhh!! sounds. \n\nThat was a painfully erotic sight. But the fellow who really got the ball rolling was one of the warriors. Birgit was as naked as Dani and her body was almost as sensually alluring. She was pouring mead out of a jug into a warrior's cup. That cup had formerly been somebody's skull. \n\nThe Viking was idly fondling her dangling tits as she poured the mead. Rather than breaking the jug over his head, Birgit moaned with lust. That motivated the guy to grab one boob and suck on the thick, hugely erect nipple. She moaned much louder and dropped the jug.\n\nThe guy stood, and Birgit laid herself seductively on the reed floor. It was a provocation, not romance. Then she spread and elevated her legs and looked invitingly at him. \n\nThe dude dropped eagerly to his knees pulled the string on his baggy drawers and drew out an imposing weapon, which he inserted without hesitation. That produced an ungodly grunt on Birgit's part, as she took the Viking to the hilt. The Viking pushed Birgit's legs back even further, until her knees were touching her big meaty tits. \n\nMeanwhile, Loki had laid Dani down on the bearskin and re-entered her. Dani was holding her legs insanely wide to encourage maximum access; feet pointed almost straight out, toes curled. Her head was thrown back in ecstasy and her mouth was wide-open in a silent scream. \n\nI could see Loki's godlike member coated with Dani's juices slowly pistoning in and out of her. Her hips rose to meet each powerful thrust. The loud wet slapping noises were like shots. \n\nThe sound of their fucking was accompanied by Dani's deep rhythmic moans, which were becoming so loud that they carried to where I crouched outside the Mead-Hall. \n\nIvar took off the instant he saw his wife getting fucked. It was an understandable reaction. After what I had witnessed, I was just as ready to face a hall full of berserkers. But given that we were outnumbered thirteen to one, and one of those guys was a demi-god, it was perhaps NOT the smartest thing we could have done at the time.\n\nNonetheless, Ivar came crashing through the door, axe in hand; me in hot pursuit. I mean, what the fuck ELSE could I do!!?? \n\nNobody noticed Ivar at first. The Vikings were all standing around watching the outlandish sex that was happening on the floor. \n\nMeanwhile, Loki was sucking one of Dani's luscious nipples, while he pounded energetically between her legs. She was bent in half, knees over his shoulders, legs waving above them. Her arms were around Loki's head plastering his face to her big tits, her eyes were staring sightlessly at the ceiling. Her sleek hips heaved like ocean waves; taking Loki deeply with each thrust. She groaned with blatant longing every time he withdrew. \n\nGiven the intensity of the moment, it was perfectly understandable that the Vikings hadn't noticed our arrival. That changed when Ivar strode the fifteen feet from the door to the place where his wife was winding up to a monster orgasm. He then proceeded to bury the axe in the back of her lover's head. \n\nTHAT got us noticed. Blood flew everywhere. The huge inert body collapsed across Birgit. She wasn't aware of what had happened, because she was going through a series of prolonged writhing and shrieking contortions. \n\nIt had all happened so fast that everybody just stopped and stared, open mouthed. That is, everyone except Loki and Dani who were experiencing what sounded like their own life-extinguishing orgasm up there on the dais. \n\nOne of the Vikings growled and turned toward Ivar. Enraged, he drew a longsword and shouted something. I didn't speak old Norse. But I got the drift, \"That was my brother!!!\" \n\nI was in no mood to mess around. The moans and grunts from the direction of the dais guaranteed that. So, I shot the guy in the head. Again, I had absolutely no idea how I was able to do that so efficiently and accurately. But it was like second nature. \n\nMore blood splattered. That stopped everybody. They probably thought that I was some kind of demi-god too, since .45 caliber Colt automatics were a rarity in the Dark Ages. The problem was that I was now facing two dozen thoroughly pissed off Vikings, with six rounds left in the clip. \n\nAt that moment, there was high-pitched, scornful laughter from the direction of the dais. Loki said in a taunting voice, \"Have you come to get your woman, human? I'm sorry but she's mine now. She won't want you anyhow, now that she's experienced ME.\" \n\nHe raised Dani to her feet. She was looking dazed and glassy-eyed, chest heaving from the fucking she'd just gotten. Loki stepped off the dais and walked toward me. He was holding Dani's hand and laughing with utter contempt. \n\nDani swayed along next to him naked and absolutely compliant. It was clear that she was very-much under Loki's spell. She was like a living wet-dream, her full tit's bobbling as she struggled to get her breath back. \n\nThe sight drove me wild with rage. I said, \"Then fight me for her asshole!!\" I was really getting into the Viking thing. That was the way they settled stuff back then. \n\nI was counting on that. Because, an idea was starting to form. Loki was with his boys. He wouldn't dare back-down from a challenge. \n\nI said, taunting him, \"Just you and me you gutless piece of shit, fight me like a man!! I can kick your ass, even if you use one of your limp-dick tricks.\" I had to goad him into shape-shifting. \n\nI didn't know whether the gambit was going to work. But I was counting on Loki overreaching. That was the plan anyhow. There was no going back. \n\nLoki laughed derisively and said, \"You want tricks. How about J\u00f6rmungandr?\" \n\nI'd gotten to him! Or maybe it was Dani. He was clearly showing off for somebody. J\u00f6rmungandr was the Midgard Serpent. \n\nJ\u00f6rmungandr coiled, ready to strike. Its mouth was open, poisonous fangs dripping. Its head was as high as the ceiling. \n\nI REALLY HATE SNAKES. This one was infinitely more horrifying; since, it spewed venom so potent that it killed Thor. I emptied the clip rapid fire, three in each of J\u00f6rmungandr's obsidian eyes. Those were the only vulnerable parts of its armored head. \n\nThe Colt's ancient. But its hitting power is legendary. The heavy, 230 grain ACP slugs just obliterated the snake's eyeballs. There was an ungodly scream of pain and Loki reappeared, writhing in agony on the floor and gouging at his face, blood ran between his fingers. \n\nI'd just fought a demi-god and won!! The entire group was frozen in astonishment. \n\nDani was my woman now. So, I grabbed her by the hand and tugged. She looked confused and hesitated momentarily. Then she seemed to recognize me, and we ran together. \n\nIvar was already crossing the bridge, carrying his wife. I was surprised that a horde of angry Vikings weren't bellowing for our blood. Ivar said by way of explanation, \"We're safe from them. They can't leave Valhalla.\"\n\nThen he added agitatedly, \"But the other gods will come after us. You just blinded one of their kin. It's a Viking blood vendetta now. We have to get everybody on the boat and get off this island immediately.\" \n\nHe set Birgit down. She looked like she was coming back from a dream. I recognized that look. It was the same one I'd had a mere ten days ago. Then she realized that she was naked. She gasped and did the thing that women do with her arms across her breasts, one hand covering her dripping pussy. \n\nI heard a yelp behind me, and Dani was crouched into a little ball, trying to cover herself. She said anguished, \"Where am I, what happened??\" The erotic seductress was gone, and the innocent church girl had returned. She was one profoundly embarrassed woman.\n\nBy that point, we had gotten far enough into the cave that nobody could see much of anything. I said as delicately as I could, \"We'll keep the lights aimed at the floor to preserve your modesty.\" But I still couldn't get Dani's fantastic body and her electrifying sexuality out of my mind. \n\nWe had another complication. I didn't want either of them to see the priest's remains, especially Dani. Given her devotion to her father, I knew that she wouldn't survive the vision of him torn to shreds. Later on, I'd tell her how heroic he had been, without getting into the gory details. She certainly didn't need to see the evidence. \n\nI said, using my most persuasive tone of voice, \"There are some glass shards and sharp rocks ahead. We'll have to carry you, or you are going to cut your bare feet.\"\n\nI picked Dani up. Even though her body looked substantial, she was light as a feather, perhaps 100 pounds. I sensed that she was extremely self-conscious, naked in my arms. But she trusted me. She held my neck tightly. \n\nThat reminded me of the way she had held Loki. I got a flash of insane jealousy. I had absolutely no reason to feel that way. She wasn't hugging Loki by her own free-will. \n\nI imagined that Ivar was experiencing the same thing. It wasn't like Birgit had been forced. She was the aggressor and she clearly enjoyed every second of her intense fucking. If I was married to her, THAT would give me pause. \n\nBut we both knew that Birgit was in the thrall of a supernatural being. The same was true with Dani. Dani had taken Loki's big cock like a pro. Worse, I had heard her loudly begging for more. That alone was proof that both of them were under some kind of spell. \n\nA woman has to totally abandon herself to act like that. But Birgit was a wife and mother and Dani was a chaste and modest girl. At least she'd been a virgin before Loki kidnapped her. So, logically, it would take supernatural intervention to cause both of them to act so totally out of character. \n\nAnimals mate. That's a natural selection imperative. So, the capacity to enjoy sex is an innate part of our programming.\n\nAt the same time, humans survived because they worked together, and indiscriminate sex acts can seriously fuck-up group dynamics. Just drop by a redneck bar on any given Saturday night if you want to see what I'm talking about. \n\nHence, civilization had to create rules about who you could fuck and when. Call those religion, or morality, or whatever you like. But their sole purpose is to prevent us from reverting to our animal selves. And, there's no telling how wild a virginal church girl might get if they are ever eliminated.\n\nDani clearly wasn't herself while Loki was fucking her, and she didn't remember anything about her remarkable descent into slutdom. That was evident in everything she said and did afterwards. The woman I was holding in my arms was sweet and gentle and still a virgin in her own mind.\n\nI could easily accept that Dani and Birgit remembered nothing. Since, I couldn't recall my OWN name. That fact alone, convinced me that Dani's actions weren't anything she could control, or even recollect. \n\nIt was pitch black in the cave. So, I couldn't actually see Dani as I carried her. But my other senses were working overtime. She had been fucked long and hard. So, I smelled the sweat of her exertion and the musky aroma of sex. I could feel her still-aroused swollen boobs crushed against me. I even felt the hardness of her nipples \n\nAmazingly, that gorgeous and still turned-on female body worked a miracle. I developed a giant hard-on. I wanted this woman more than I wanted my memory back, more than anything else in the world. \n\nUnfortunately, there were a few practical considerations. Like, the rest of the party was waiting for us and Birgit and Dani couldn't just reappear stark naked and looking well-fucked. So, I left my three companions and went ahead to gather some clothes. \n\nI told the two old gay guys that I needed warm outfits for the women. They looked puzzled. There were a lot of questions. I just walked over to where we had the luggage stacked and began rummaging through everybody's stuff. \n\nThe priest's bag produced a couple of thick wool sweaters. That was good. The guy wouldn't need them anymore. I got two spare pairs of jeans and some sturdy shoes from Dani's and Birgit's luggage and Charles actually produced two pair of women's underwear. I didn't ask. \n\nI found my companions lurking back in the darkness thirty yards up the cave. We were trying to respect the woman's modesty. So, we kept the light to a minimum. But I caught a reflected glimpse of Dani's perfect round ass as she bent to pull up her panties... stunning!!\n\nWe would join the rest after the women got decent. But there was still one unavoidable chore and I wanted to get it out of the way. That was to tell Dani about her father.\n\nDani would have noticed that her dad was missing, and we would have to tell her why. I wanted to give her some privacy when she got the news. So, I said in a respectful voice, \"Dani, can we talk for a minute.\"\n\nShe looked at me with hope in her eyes and said brightly, \"What?\"\n\nThis was going to get very awkward. I opened my arms and said, \"Come here please.\" She came unhesitatingly into my arms. But it was like a child, not a woman of incredible sexual talent.\n\nI encircled her with a hug. She looked up eagerly, like she expected a kiss. Instead, I said, \"How much do you remember of what just happened?\" \n\nShe looked disappointed. She wanted more. She said puzzled, \"I recall falling asleep last night and awakening back in the cave with you holding my hand. I know something happened. But I don't remember anything.\" \n\nThen she looked perplexed and said hopefully, \"Did we have sex? I feel funny down there.\"\n\nWhat a wonderfully ingenuous thing to say. I'm not a woman so I don't actually know what Dani was feeling. But absent any prior experience with sex, I imagine that her first thoughts weren't, \"I just fucked a Demi-God,\" even if there was a clear evidence that she had. \n\nI chuckled and said, \"I want you to know that you are the most precious thing in the world to me.\" She sighed and relaxed against me. \n\nI soldiered on with, \"But the thing I have to tell you is disturbing. I want to hold you when you hear it.\" \n\nShe leaned back, eyes glistening with love. I had a flash of her opening her body to Loki in the same manner. The rational part of my brain smacked me on the back of the head and snarled, \"Grow up!!\" \n\nI braced myself and said, \"Your father is dead. He died this morning. I'm very sorry.\" \n\nShe looked momentarily disbelieving. She searched my face and saw that I was serious. A curtain of devastation slammed down over her eyes and she gasped, \"When??!! How??!!\"\n\nI said, \"I will answer any questions you have. But please let me share that with you later. Suffice it to say that he proved his devotion to you to the last measure.\" \n\nShe wailed in anguish and buried her head in my chest, sobbing with a broken heart. \n\nI was painfully aware of her hard, little body and soft-pillow tits. I was running through the starting lineup of the Washington Nationals thinking, \"God!! Please don't let me spring something inappropriate!!\" And how did I know who the Washington Nationals were?\n\nI let her sob for a couple of minutes, stroking her hair and mumbling over-and-over, \"It's going to be all-right my love. I'm here with you.\" \n\nShe eventually pulled herself together. She might be sweet and gentle. But she was also a considerate and tough-minded woman. She knew that prolonged grieving was selfish. So, she forced herself to stop and turned a tear stained face up to me. I lowered my lips to hers. It was like fighting the pull of gravity. \n\nDani gave me the same kind of hot, steamy kiss that she had given Loki; lithe body avidly plastered against me, lips frantically moving and nipping at mine. It was sensational. It was also obvious that her body remembered everything it had done even if her memory was a blank.\n\nShe groaned with desire then she snapped her head back and looked frightened. She said anguished, \"What's happening to me? What am I doing? I've kissed a few men. But never like THAT!! What must you think of me?\"\n\nThat particular statement raised a few interesting points to ponder. But they had to be saved for later. I laughed and deflected with, \"Well if that's the case then I want several more just like it. But we are in mortal danger right now and we have to get off this island.\"\n\nShe looked at me uncomprehendingly. I added, \"It has to do with your father's death. I'll explain it after we're rescued. But for now, we need to get packed and back to the boat.\" \n\nI placed my arm around her delicate shoulders and started to walk toward our friends. That was when I saw a gleaming metal object. The group had seen Dani coming and they were waving at her, encouraging her to join them. So, she walked on in their direction. I stopped to pick up the object. \n\nIt was a heavy, pure silver, link necklace. It had a large token on it that looked like an axe with a very short handle, or perhaps a hammer. I heard a voice in my head. The voice was Odin's. It said, \"You prevailed. This is your reward. It will grant a wish, if it is truly worthy.\" ",
        "I put it around my neck, thoroughly mystified. Ivar was holding both of his kids. He spotted my new-found bauble. He said questioningly, \"Where did you get that?!! That's Thor's hammer!!\"\n\nI hesitated to tell him that Odin had given it to me personally. He'd think I was hallucinating. So, I said as casually as I could, \"Oh this?? I just found it on the floor of the cave.\"\n\nIvar said enviously, \"Be careful with it. It might be historically significant. Viking warriors wore Thor's Hammer to protect themselves. It was like the Christian cross.\" \n\nSo, I was wearing something that the king of the Norse Gods had given me. I'd think about what that meant later. My only focus right now, was on getting off the island. \n\nLuckily, it was high tide and with all of us pushing we were able to get back afloat. We had loaded the boat with everything that we'd brought from the cave, including the melt-water and puffin eggs. \n\nDani wouldn't leave my side. I understood why she was so obsessed. She'd lost her father and she needed to be close to the man she loved. \n\nI didn't care because I couldn't get enough of her. I might be a man with no name. But I had to live up to her childlike faith in me. Her cheerful attitude her obvious love and her simple innocent trust. It all made me into a much stronger person. \n\nI backed us into the deeper part of the little cove turned and set course 45 degrees north of the setting sun. Iceland was out there somewhere and if I missed that we would certainly hit Greenland. \n\nThe only question was how far we would have to travel before we ran into somebody. We had been in a transatlantic shipping lane prior to the explosion. There had to be ships out there somewhere.\n\nA couple of hours passed. We had gone perhaps 10 miles. The wind was blowing snow at an alarming rate. But the island was still visible through the looming fog. \n\nEverybody was quiet. It had been a long night. Birgit was cuddling her kids and Dani was sleeping with her head on my shoulder. Neither woman remembered anything about their earlier exploits. I guess that was a blessing. The two old guys were also both asleep. They had done their duty. \n\nIvar and I had some thinking to do. It's easy to go with the flow when you're in the middle of a fight. It's only AFTER the adrenaline wears off that you reflect on what it all meant, and we had plenty of new information to wrap our minds around. \n\nWe had witnessed the supernatural. We knew that the legends were true. Of course, the women could never find out. It would be pointlessly cruel and self-indulgent on our part to tell them. I was certain that I was mentally tough enough to handle that secret. I hoped Ivar was. \n\nBut reason had to arm-wrestle with ego. Specifically, I had to come to grips with the fact that Dani was no longer innocent. \n\nIt blew my mind to watch the love of my life in the throes of ecstasy. But honestly, I knew that I couldn't judge her. It should have been two-thousand degrees Fahrenheit on the other side of that bridge. Instead it was a perfect Scandinavian day. \n\nI mean seriously! The dude could control the weather. If he could manufacture his own climate, then how hard would it be to turn a virginal church girl into a wanton slut?\n\nHowever, Loki was behind us now and every aspect of Dani's bedrock values and moral integrity was still intact. It was evident in everything she did and said. Nobody is that good an actor. So, I was truly confident that it'd just been a nightmare aberration. \n\nThe question left to answer though, was whether Dani still had the extraordinary sexual abilities that she'd exhibited in the mead-hall. I decided that would be an enjoyable subject to research.\n\nA weird thing happened as I was thinking about that. It was semi-blizzarding outside. Then it was as if we drove through a curtain. Suddenly the waves and wind stopped, and it was a bright sunny day. I looked out the rear porthole and there was a thick bank of pea-soup fog behind us. The island was nowhere to be seen. \n\nI was still trying to figure out what had happened, when an airplane rocketed past at wavetop level. It was a small, all-white, twin engine airliner with a blue stripe and the Icelandic flag on the tail. It banked left and made another pass. \n\nI had the radio sitting next to me. It squawked into life and a tinny voice said, \"This is India-Charlie-Golf Tango-Foxtrot Sif. Identify yourself.\" \n\n*****\n\nThe ICG-TF Frigate Thor picked us up. We were only thirty miles off the south coast of Iceland. Nobody knew how we'd gotten there. We just appeared out of the blue on Sif's radar. \n\nI had my suspicions. Our island had a mysterious cave called Hel, at least two Norse gods, the bridge to Asgard, and Valhalla. That isn't ordinary terrain. \n\nSo, it was probably not a feature on Google Earth. Still, I had bigger worries than speculating about whether we had visited another dimension. The absence of the priest would have to be explained. \n\nWe might have raised a bit of suspicion if we had told the authorities that the Priest had been killed by the Norse god Loki. So, instead we agreed to tell them that he had gone down with the sinking ship. It was the easiest explanation.\n\nThe Thor took us to the Icelandic Coast Guard headquarters. It was a nice building, right next to the Reykjavik airport. They split us up to interview. I knew that was an interrogation tactic. \n\nI got an older Icelandic guy. He didn't look like he was a member of the Coast Guard. He was with a blond woman. She was just as \"official\" looking; and the personification of icy beauty. \n\nThey both spoke English better than I did. Which I later learned is true of everybody in Iceland, including most of the Kindergarteners. \n\nThe dude started out by asking me a routine question. He said, \"What is your name.\" \n\nDamn!!! Let's get right to it. I said shamefaced, \"Well, that's the problem. I don't know my name.\"\n\nHe got the bored look that every veteran interrogator gets when he has a wise-guy in front of him. He said, \"And why won't you tell us your name? What do you have to hide?\"\n\nI thought, \"Here we go again!!\" \n\nI put on my most sincere face and said, \"I just woke up on that ship. I have no idea how I got there, who I am, or anything about my past.\" Both of them looked at their watches. It was like they were trying to decide how long it would take to beat the truth out of me. \n\nI said pleadingly, \"Look, I'll do anything to find out who I am. But right now, I am a man without a past. I don't care if I turn out to be an axe murderer. I just want to get on with my life.\"\n\nI added miserably, \"I had the same conversation with Captain Sorensen, after I was found unconscious on his ship. He believed me.\"\n\nI said, \"He put me to work as a steward to pay my passage. He was a decent guy.\"\n\nThen it struck me, \"Do you know what happened to that ship?\" They both shook their heads no. \n\nThe woman said, \"We heard a distress message. But the ship's transponder is not broadcasting.\"\n\nI said, trying to be helpful, \"We heard a big explosion just after I launched the lifeboat.\"\n\nThe older guy pounced on that. He said, \"Why were you entrusted to run a lifeboat when you were such a mysterious individual?\" It was as if I'd just proved that I was lying by being put in charge of a lifeboat. \n\nI said matter of fact, \"They were very short staffed. So, they used me. They trusted me to carry out a simple task. Even a trained monkey can pull a lever.\"\n\nI added exasperated, \"Look, it's clear that you don't believe me, and I have no place to stay. Can't you at least get me to a hospital? Maybe the doctors can find out what's wrong with me and it will answer your questions\" \n\nIt looked like they'd already decided that was what they were going to do. They may have even believed me. Or maybe they wanted to move on to more important matters. The older guy said, \"We'll do that. But we want a complete set of finger prints.\" \n\nThe woman produced a scanner. It was a little bigger and thicker than an iPad. They took my fingerprints, thumb prints and hand prints. Then she said, \"We are going to run this against every Interpol data base and also your FBI. You're an American, right?\"\n\nI said mildly, \"I have no idea. My little friend tells me that I am. As far as I know I could be from the planet Mars.\" She looked a little frustrated. I realized that I'd just dodged a trap. \n\nLandspitali University Hospital was so close to the Headquarters building that we walked there. My two newfound companions went along with me. I didn't get the impression that I was under arrest. But I DID get the impression that I was under deep suspicion. \n\nIceland has universal health care, so the admitting process was quick and easy. They found me a room and a neurologist to examine my head. They also added a psychiatrist. I understood. I would have done the same thing. \n\nWhat was surprising was the fact that they put me in a single patient room. That is, until I noticed the plainclothes policeman loitering in the hall. \n\nDani appeared the following day. I was sitting fully clothed on the bed, trying to figure out how the TV worked. It was like the sun came out on a dark and dingy afternoon. \n\nShe was absolutely pure fresh beauty. But the thing I liked the best was her look of unadulterated love. Without exchanging a single word, we understood how much we meant to each other. My heart soared.\n\nShe said brightly, \"I would have been here sooner, but they wouldn't let me see you. I had to ask the President of the Reykjavik Synod to intervene.\"\n\nThat was a first for me, \"Divine intervention.\"\n\nShe was wearing a much tighter pair of jeans, which clearly embarrassed her. She said contritely, \"I'm sorry about the way I'm dressed but I had to borrow clothing from the people who I'm staying with. This was all they had. Is it okay?\" \n\nShe was asking me whether she looked too hot and sexy??! In her eyes that was a bad thing. In my eyes she was a five-one package of erotic. \n\nDani's body was superb. The jeans showed off her full and perfectly shaped legs, and her tight round hips. But the part that was prominently displayed were her two round jutting buns. \n\nI smiled and said, \"You're beautiful.\" She turned bright red with embarrassment. Her reaction further reinforced the wisdom of not sharing what I'd witnessed during her time under Loki's thrall. \n\nShe walked over and sat down on the bed next to me. She took my hand. She looked concerned. She said, \"Why are you in the hospital? Did you hurt yourself.\" \n\nOkay, it was time for all-in. I sighed and said, \"I'm sorry but I haven't been entirely truthful with you. It's a crazy story and I didn't want you to think I'd lost my mind.\"\n\nShe looked both shocked and worried. I went on with, \"I know I told you a story about my origins. But the truth is that I don't know who I am, or where I came from. I woke up on that ship without any memory whatsoever.\" \n\nShe looked horror stricken. I hastened to add, \"I know a lot of things, but I have no personal memories.\"\n\nI smiled and said lovingly, \"I told you I was Nemo, a nobody, and it's true. I have no history. I know it's hard to believe. But that's the way it is.\" \n\nI added tentatively, \"I know I lied to you and I'm sorry. But I didn't know what else to do. I care for you very much and I want to make you mine.\" \n\nDani loved me. You could see it in the way her sweet face went from alarmed to protective. She said, her cute little pointed chin resolutely set, \"It doesn't matter what you didn't tell me, we're together now. I'll be your lover and take care of you no matter who you are.\"\n\nIn her mind she was a virginal church girl. So, I was assuming she was using the word \"lover\" in the figurative sense, not the literal one. I smiled and said, \"That's all I wanted to hear.\" \n\nAt which point - two men in black breezed in. They were a clich\u00e9, dark suits, polished shoes, spiffy hair-cuts, narrow faces and overbearing eyes. There was an old one and a young one. I assumed he was the apprentice asshole. \n\nThe older one said, in a voice that brooked no disagreement, \"You'll have to leave Miss!\" \n\nDani looked stricken. I was pissed. I said angrily, \"Who says you can come in here and order people around? Dani stays, and YOU go.\"\n\nThe younger one laughed. The older one said, \"Robert Parmentier, you are coming with us.\" \n\n*****\n\nIt was the fingerprints. Apparently, I was a person of universal interest. I started to protest but they each grabbed an arm and physically hustled me past Dani and out of the hospital. \n\nThey loaded me in a van. I said, \"Seriously??!! An unmarked white van??!! Are you guys for real??!!\" \n\nNeither of them as much as cracked a smile. I looked behind me and Dani was standing on the sidewalk her hands covering her face in anguish. I said, \"You have no right to treat me like this!!\"\n\nThe older asshole muttered, \"You gave us that right when you signed the oath Parmentier.\"\n\nI said, \"What oath? Who the fuck are you guys and what the fuck are you talking about?\"\n\nI got the basics on who Robert Parmentier was on the hour drive out to Keflavik. \n\nMy family had lived in Lewes Delaware since the 1700s and they had a history of military service dating back to the 1st Delaware Regiment of the Continental Army. So naturally, every male in the family-line wore the uniform - except me. That was because I had already been recruited. \n\nIt was a little unconventional. But there is a \"Company\" in Langley Virginia that recruits promising kids out of college for a very special business. They came to me, not the other way around. That's the way they do things.\n\nI was a standout student and lacrosse player at Johns Hopkins. I fit a number of their criteria for language and travel and my family was prominent in the military. Apparently, somebody noticed.\n\nI was twenty. So, after I graduated from Hopkins, I did the usual tradecraft course at Chantilly and the advanced course in Bethesda. Then they shipped me out to a special course at their North Carolina \"Farm.\" That was where the black-ops people learn the finer points of the business, the sort of tricks they aren't allowed to talk about. \n\nOf course, I remembered nothing of that, since my mind was still a total blank. I was particularly upset about how I had left Dani. I said, \"That woman is very important to me. You had better be good to her if you want me to cooperate.\"\n\nThe two of them looked at each other and the young guy laughed. He said, \"Did you clear that with your wife?\" \n\nHoly shit!!! I'd never thought of that!! My heart sank. \n\nRather than stopping at the terminal, we drove right through the tarmac gates and were waved over to a small private jet. I thought, \"Who are these guys?\" \n\nThe pilots were starting the engines as the three of us went up the boarding ramp. I said, \"Where are we going?\"\n\nThey laughed and said, \"Where do you think we're going?\" I didn't have a clue. I got a better clue when, we landed at London City airport, three hours of total silence later. \n\nA car took us along the Thames and across the Vauxhall Bridge to a building that looked like a giant Lego Block. Not a word was said the whole trip.\n\nI was hustled through security at the U.S. Embassy and up to a conference room. There were three people in the room. Two of them were senior looking bureaucrats and the third was absolutely gorgeous, tall, model slim, long raven hair, perfect oval face and huge expressive brown eyes. \n\nShe leapt to her feet and threw herself on me. I assumed this was the wife. She said, \"My God Robert!! We all thought you were dead!!\" Then she went off on a long soliloquy of weeping. \n\nI felt nothing. My mind's eye was picturing Dani standing on the sidewalk crying. My grief was inexpressible. The guy at the head of the table said imperiously, \"Sit down Robert, we need to talk.\"\n\nI took the nearest chair. My \"wife\" sat down next to me still holding my hand. I looked at her. She was a rare olive-skinned beauty; like the night compared to Dani's day. \n\nDani radiated happiness and sunshine. This woman was dark, mysterious, I could sense secrets. But right how she was looking at me with a predator's stare. It was an intimidatingly direct and sexual challenge. \n\nShe was exceptionally well-groomed and dressed in couture clothing. I knew what couture was, even though I still didn't know how I knew that. She was also wearing a lot of expensive jewelry. \n\nThere was evidently money involved. I didn't know whether it was hers or mine. All I could think of was the simple outfits that my little rectory cat wore. \n\nThen I realized that I didn't even know the woman's name. I turned to her and said, \"I know that you're my wife and this might be hurtful to you. So, I'm sorry for asking. But I don't know your name.\"\n\nShe took that statement a lot better than I would have. She said without changing expression, \"Vanessa.\" \n\nI gave her an embarrassed grin and said lightly, \"Pleased to meet you Vanessa.\" She gave me a forbidding smile in return.\n\nThe guy at the head of the table interrupted. He said, \"You two can renew old acquaintances after we hear what you have to say Robert. According to the Icelandic authorities you were picked up in a lifeboat off their coast. Is that correct?\"\n\nI said, \"Yes sir.\" I wasn't sure of my situation. So, I wasn't going to elaborate.\n\nHe waited, like he thought I would have more to say. Then he proceeded with, \"And you claim that you have no memory of your life prior to waking up on the vessel that lifeboat was launched from.\"\n\nI said, \"Yes sir.\" I wanted to keep the ball in his court.\n\nHe said, probing, \"Then you probably can't tell us what George has done with the one-time-pad SIMs - right?\"\n\nI knew what a SIM was. SIMs are tiny chip cards used in every mobile device in the modern world. They store stuff like network location and authorization data, or encryption and security keys. But I had no idea who George was, or what he might have done with their SIMs. \n\nI looked earnestly at both men and said, \"Gentlemen, I'm sorry. But my memory starts on the day I woke up on that ship. I don't know who George is, and I don't know why his SIMs are important.\"\n\nThe other man made an irritated noise and said, \"Listen Parmentier, those SIMs have the one-time pad encryption private key for every U.S. diplomatic mission in the world. If we lose them, we might as well publish our top-secret diplomacy and high-level military conversations in the local newspaper.\"\n\nThen he added incredulously, \"Do you mean to tell me that you don't know that Major General George Parmentier is your brother!!??\"\n\nHe said disgusted, \"We already know he took the SIMs. We've got him on camera doing it. So, you're not gaining anything by protecting him. But you ARE going to serve hard time if you don't give him up.\"\n\nThat was when Vanessa chose to add her two cents. She said, \"Just tell them where George is Baby. I know you two were together the night he vanished. I can't believe that you were involved in the theft. Your not daring enough. But George must have shared his plans with you.\" \n\nTalk about throwing your husband under the bus. It was a touching display of spousal loyalty. \n\nI grimaced and said, \"It's obvious that you don't believe me. So, do whatever you have to do to prove it; lie-detector, CAT scan, what?\"\n\nVanessa made an irritated noise and the two men just sat back angrily, arms folded across their chests. Finally, one of them said, \"This is too vital to national security. So, we are going to book you into the NHNN. They'll sort it out there. But we had better get good news.\"\n\nThe same white van transported me back across the Thames to Great Ormond Street and the National Hospital for Neurology and Neurosurgery. I had the identical type of private room as the one in Iceland, with my two \"companions\" posted-up outside the door. They must have gotten attached to me.",
        "My loving wife had business elsewhere, or perhaps they wouldn't let her visit me. I remember thinking that Dani had resorted to divine intervention. Maybe Vanessa didn't know anybody holy enough?\n\nAnyhow, that was a relief. I was getting some very bad vibes off that woman. \n\nThe next couple of days were busy. Each one featured testing, scanning and psychiatric interviews. The docs even tried hypnosis, which kicked me into a PTSD episode. They considered that \"progress.\"\n\nI couldn't remember anything meaningful. That is, if I consciously tried to do it. But I was starting to get flashes of explicit events. I told the docs what was happening, and they looked wise. \n\nApparently, there are a bunch of different kinds of memory and one of those is \"episodic memory.\" Those were the memories I'd lost. Episodic memory has subcomponents and one of those is \"emotional memory.\" That type of memory is very powerful, and it seemed to be tied to my PTSD event. \n\nI knew the PTSD episode wasn't real. But it had an authentic feel about it, which was what I told the docs. They began to focus on something in my brain called my amygdala. \n\nAlso, getting so much basic personal information was beginning to rewire my brain. I knew that I was thirty-nine years old and had spent almost seventeen years working for the CIA. I knew that I lived in Dulwich Village with my wife Vanessa. I knew I could afford the two-million uplift on the mortgage because I had family money. \n\nWe had chosen Dulwich because it was convenient to the Embassy and Vanessa coveted the Victorian mansion that we lived in. I worked at the Embassy as a \"Liaison Officer,\" which I knew was another word for Clandestine Service operative. By all accounts we were a perfect couple. \n\nMy brother George was older and more distinguished. At least that's what everybody in the family thought. He'd ridden the West Point, Afghanistan, Iraq merry-go-round to a high mucky-muck position on the strategic planning staff for US-EUCOM. \n\nHe was a confirmed bachelor and since he was stationed in Germany, he stayed with us on the holidays. Some of the returning flashes of memory were about him. I couldn't tease anything useful out of those moments. But my sense was that he was very dismissive of me as the younger brother. \n\nMy wife finally showed up late on the fourth day. She was made up to the nines and trailing a cloud of exotic perfume. It was like she had just come back from a date. \n\nShe was smiling brightly and full of cheerful concern. She laid a passionate kiss on me. Then she reached to fluff my pillows saying, \"I'm here dear and I won't leave your side until you have fully recovered.\" Her words made me think of Dani. \n\nDani's loss was eating me up. I hoped my little rectory cat had moved on without too much pain. My last sight was her shining hair. Her head was down, and she was holding her hands over her face as she cried. Every time that image appeared, a crippling pang of regret hit me.\n\nWe had never said it, and we had very little time together to cement it. But I loved her heart and soul. I also recognized that Vanessa's presence eliminated any hope of ever making Dani mine. \n\nMeanwhile Vanessa was settling in for the long-haul. The room had a small sleeping accommodation and she was laying out the contents of a roller-bag like she was moving into the Ritz. She said breezily, \"I'll sleep here my love.\"\n\nI tried to keep the disappointment off my face. I really didn't want Vanessa around. I didn't know whether it was because she continued to radiate condescension, or the fact that I was deeply in love with Dani. I said testily, \"Did anybody mention when I can get out?\" \n\nShe said, \"The doctors say you're making progress. They think that you were poisoned by something called,\" and she hesitated like she was trying to pronounce it, \"Phalloidin.\" \n\nShe added, \"They're trying an experimental treatment to flush it out, with a drug called,\" and her brow wrinkled again, \"... something-Actin.\" That explained the drip that I'd had in my arm for the past three days. \n\nI said, \"Parts of my memory ARE returning.\" \n\nShe got an intensely focused look on her gorgeous face and said tersely, \"How much do you remember.\"\n\nI said, \"I don't remember much so far. Maybe I never will. But there are flashes of scenes from my recent past.\"\n\nI added, \"I haven't been able to hold on to the memories long enough to make much sense of them. But I am definitely starting to recall happenings prior to my waking up on that ship.\"\n\nShe said idly, \"Does any of that include the SIMs? They'll let you out if you can remember what happened to them.\" \n\nI got the feeling she was pushing me, probing. I said, \"The memories are sliding-by too fast for me to hold on to. But the progression is starting to slow down. I'm sure I'll dredge up whatever they need sooner or later. In the meantime, tell us about our life together.\"\n\nVanessa was Irish, from Cork, and we had met in London at the Mahiki Mayfair. We had been married for seven years. It was a whirlwind courtship that led to a classic Irish country wedding. \n\nMy attraction to her wasn't hard to understand. Vanessa was a rare Celtic beauty, ideal facial features, a model's slim, supple body on a five-foot-seven frame. She also radiated the sort of primitive sexual hunger you'd normally associate with human sacrifices. \n\nShe told me that I'd said that I worked at the Embassy on HUMINT coordination for the countries that act as buffer states between NATO and the Russians. She said somewhat disdainfully, \"It was in an analyst's role, not a field agent.\" \n\nShe added that I HAD been on a number of trips to places like Estonia, Ukraine and Belarus to gather data. There was something in that part of her story that didn't ring true. Or, perhaps I'd told her that to cover-up my actual role.\n\nOur marriage only reinforced the idea that we were both too in love with ourselves to possibly love anybody else. As she described it, our life together one of decadence. I had inherited family money and we were industriously trying to spend every penny. \n\nBut it was my brother George who was the true Lord of the Manor. Apparently, he was larger than life. He was in the military, so he didn't spend as lavishly as we did. But he always brought extravagant gifts for Vanessa on his visits; and he visited often. \n\nAccording to Vanessa, I worshiped George as my older brother and he loved me. Perhaps that was true. But I had the impression that he treated me with contempt, probably because I wasn't in the military.\n\nVanessa was just wrapping up when the nurse arrived to give me my nightly sleeping medicine. It was some kind of heavy-duty horse-pill meant to drug me like an animal. The first time I took it, it put me in la-la land for nine full hours and I was hung over for half the next day. \n\nI told the nurse that I didn't want it. But Vanessa said, still focusing intently, \"Take it baby, it might help you get your memory back. I'll be here all the time.\" \n\nI didn't want to argue. So, I popped the pill under my tongue and took a big swig of water. Then, as I furtively palmed the pill and dropped it into the bedding I was thinking, \"I must have learned a few things down on the Farm.\" \n\nI was wakened shortly thereafter by a glowing cell phone. I heard Vanessa's whispered voice say, \"I had them give him Midazolam. He's out-cold.\"\n\nThere was conversation on the other end and she said, \"God, I miss you too baby. But we have to get those SIMs and he's the only one who knows where he hid them.\"\n\nThere was some more conversation and I heard my wife say in a flirty voice, \"Okay, I'll meet you in Queen Square Garden in twenty minutes. But it's going to have to be a quickie. I love you.\"\n\nShe looked in my direction. My eyes were closed. I was tracking her by sound not sight. \n\nVanessa rose and walked quietly out of the room. I could hear her heels clicking off down the hall. I jumped out of bed and rummaged around in the closet. My clothes were in there, neatly stored in a plastic bag.\n\nI stuck my head out. Neither Frick, nor Frack, was there. They probably went home once the hospital staff knocked me out for the night. I crept down the hall, waited until the nurse at the station had turned her back. Then I scampered down the stairs and out the door. \n\nVanessa was just disappearing into the lush foliage of Queen Square Garden, which was directly across the street. I crept after her. \n\nShe never noticed. Of course, why would she even look? Her clueless husband was lying drugged in a bed in the hospital behind her. \n\nVanessa walked past the statue of Queen Charlotte. Charlotte was George IIIs wife. Yep, he's the guy mentioned in the Declaration of Independence. George was off his rocker for a good part of his reign and the neurological hospital was built to treat him. Charlotte was the sponsor. Hence the statue. \n\nMy wife stopped in the open area. She was looking around excitedly when a shadowy figure emerged from behind the statue. He walked silently up behind her and put his arms around her. Vanessa sighed and melted back into him. Then she turned inside his grasp and they shared an ardent kiss. My damaged synapses began firing and I knew that the figure was my long-lost brother George. \n\nPerhaps it was the treatment kicking in, or maybe it was the sight of my brother and my wife locked in passionate embrace. But the dam broke and a cascade of memories poured out. I remembered EVERYTHING. \n\n*****\n\nI could see the sneer on George's face as he told me about the death-cap mushroom. Vanessa and I had been dining with him at his Thames-side pied-a-terre. He was stationed in Stuttgart. Only my wife and I knew about the London residence.\n\nVanessa was in a long revealing black silk gown. Her dusky skin was like satin. George and I were in formal attire. We weren't going to the opera. We dressed that way because we were pretentious assholes. \n\nGeorge said gleefully, \"Well little brother, I've finally gotten my hands on something that is going to put me where I rightfully belong.\" He had always had delusions of grandeur.\n\nHe reached into the inner pocket of his tuxedo jacket and produced a black ballistic nylon holder. It was like a big fat notebook, which was folded over itself several times. Then, he gleefully handed it to me. He loved to show-off.\n\nUnfolding it I discovered that it was full of dozens of neatly organized SIM cards; the kind that you put in cell-phones and tablets. I said, \"What's this bro?\" \n\nHe laughed and said, \"These are the keys for Sippernet's one-time-pad encryption.\"\n\nThat was stunning. Anybody who had those SIMs could decode any message sent on the U.S.'s most secure military network. I looked at him aghast and said, \"What are you doing with those??!!\"\n\nHe said condescendingly, \"I borrowed them from DISA. It's amazing how easy it is for a two-star to walk into-and-out of a military facility\"\n\nI said horrified, \"If they catch you with these, you're going to get life in Leavenworth.\"\n\nVanessa laughed scornfully and said, \"George is going to be one of the richest men in Russia. It's already arranged. But first we need to do something about you. \"\n\nThis was too much. I looked at her astounded. I said, \"You knew about this??!!\"\n\nShe laughed contemptuously and said, \"It was my idea you fool. I'm going to Russia with him. We've been lovers since the day we met.\" That was seven years ago at the wedding!!\n\nVanessa said sneering, \"George is just so much more of a man than you are.\" Then she added, with a twinkle in her eye, \"And I could never resist a man in uniform.\"\n\nShe looked at me with fond disdain and said, \"You had your uses. But I deserve so much more. Now I'm going to have it all.\" \n\nWhat do you say when your wife announces a betrayal of that magnitude? I should have guessed that Vanessa was behind George's blatant act of treachery. He wasn't smart enough. \n\nI just sat there open mouthed, unable to react. I finally stuttered, \"Why are you telling me this now?\" God!! I sounded like such a hopeless weenie.\n\nGeorge laughed scornfully and said, \"Because we need you as a distraction, old boy.\" My two-timing bitch wife tittered. Apparently, she found my ruination pretty funny.\n\nMy temper was getting the best of me. I looked at the adulterous pair. George might be the military man. But he was soft, from far too much time behind a desk. I had been a field agent for seventeen years and I knew I could take him down. \n\nI said teeth gritted, \"I'll kill both of you before I let that happen.\" That was the point where a tidal wave of agony broke over me. \n\nI must have cried out because George looked across the table and said placidly, \"That's a death-cap mushroom, old-boy. They've been using it to get rid of inconvenient people since Roman times.\" \n\nHe added, \"That's how the Emperor Claudius was removed from office.\" Then he laughed at his pedantic little joke. My brother really was a self-important d-bag.\n\nHe added, \"It was extra garnish on your steak. We added it just for you. When they break in looking for me, all they're going to find is you. You can try to explain where Vanessa and I are.\" \n\nThen he got a gleeful look and said, \"Oh wait... I forgot... you won't be able to remember your own name - if you manage to live. It will slow them down for a while.\"\n\nMy world narrowed to a pinprick and there was blackness. I awoke a short time later. I was lying on the kitchen floor in a big pool of vomit. The involuntary puking might have saved me. I got on my hands and knees and threw-up some more. I was confused. But I knew that I had to get out of there. \n\nWild fucking sounds were emanating from down the hall. I recognized the moans. The two of them must have decided to knock off a quick piece before they fled the country. London City Airport was just a few miles to the west and I'd wager there was a private jet waiting. \n\nI levered myself to my feet holding onto a chair. The black ballistic folder was right in front of me. I wasn't thinking clearly. But I still knew that it was the key to screwing over my brother. So, I grabbed it as I stumbled out the door.\n\nI knew the effects of the mushroom were going to get to me sooner than later, and I had no plan. But I saw a warehouse area with a lot of people directly across the street. The place was lit up like a circus and they seemed to be loading a big merchant ship. \n\nI needed help fast. So, I lurched across the street. Luckily there was no traffic at that hour. Once I got inside the warehouse, I grabbed the first person I saw and said desperately, \"Help me!!\" \n\nThe guy saw a drunken toff in a vomit stained tux. He said disgusted, \"Get your hands off me, mate!!\" He gave me a big shove and I staggered some distance.\n\nI fell at the foot of the boarding ramp. Maybe there was somebody on board the ship who'd be able to help me? All I could feel was intense pain. The poison was taking its malevolent toll. I stumbled up the gangplank, reeling so much that I almost went over the rail.\n\nI had just gotten into a passageway when the world started to spin. I lurched drunkenly sideways, fell through a hatch and into a dark compartment. I was unable to walk. But a ventilator shaft was poking out of the deck next to where I'd fallen. \n\nI fumbled the folder out of my tux coat, pulled out all of the SIMs and stuffed them down the ventilator shaft. I thought, \"Good luck finding THOSE George.\" \n\nI chuckled at the thought of the dismay chez-Parmentier when the two of them discovered that their ticket to Russia had disappeared. Then there was a roaring noise and nothing but blackness.\n\n***** \n\nI slipped back across the street and into the hospital. Vanessa and George were just beginning their pas-de-deux. She was using Queen Charlotte's statue as a prop. \n\nDid I feel anything seeing my wife getting rear-ended, while bracing her hands against the bronze feet of King George's wife? I did indeed. I felt liberated and happy beyond belief. \n\nNow, there was no barrier between me and Dani; except a quick divorce.\n\nFrack was standing outside my door now. The junior guy always gets the short end of the stick. He did a double-take when he saw me. Then he glanced inside the room. Frack wasn't the sharpest knife in the drawer. \n\nI said jovially, \"If you want George, he's across the street. But you'd better act fast. I can't guarantee his staying power.\" Talk about coitus interruptus.\n\nFrack was fumbling for his walkie-talkie as I breezed past with a cheerful, \"I'll be inside getting packed.\" I had a little lost rectory cat to find.\n\nMy overwhelming desire for Dani defied logic. It sure wasn't the sex. Up to that point the most carnal thing I had done with her was to carry her naked through a pitch-black cave. Okay - if you want to get technical, there was also that little show in the mead-hall. \n\nStill, I couldn't think of a single instance when my feelings for Vanessa were within light-years of the way I felt about Dani. I don't know if I EVER loved the bitch. I might have loved being fucked by her. That was another matter entirely. But Dani was my eternal destiny. \n\nThe blue lights of the London police were brightening my window as I exited the hospital room. I said in a newfound voice of authority, \"I know where the SIMs are and they're safe. Take me back to the Embassy and I'll connect the dots for you.\" \n\n*****\n\nTwo weeks later I was in Dulwich Village. I was sitting on our big brick terrace in the buttery English summer sun. Emotionally, I'd been to the penthouse, now I was back in the outhouse. \n\nFirst, I briefed my bosses. The CIA accepted that the SIMs were safe; two miles under the Atlantic. Of course, it took three polygraphs to convince them. \n\nThen I resigned. Life's too short to suffer assholes and I had a lifetime's-worth of money now that my brother was out of the will. \n\nSpeaking of said asshole. George dropped completely off the radar. I was sure that the treacherous bastard was enjoying the CIA's hospitality at some cozy little rendition site; where his black-ops jailers could share a few pertinent thoughts about the consequences of treason. \n\nMeanwhile, the whore, formerly-known-as my wife, had been desperately trying to get ahold of me. It seems that she had recently rediscovered her feelings for our marriage. Perhaps that passion was inspired by the circumstance of six London Bobbies witnessing her in an act of \"gross-public-indecency.\" \n\nI studiously avoided slutbreath until all the pieces hit the ground. I knew that I couldn't avoid her forever. But it took a while to get my ducks in marching order. \n\nI appeared on Vanessa's porch one bright English morning. The slut had been squatting at our house in Dulwich. She cracked the door, gave me a triumphant smile and said, \"I knew you'd finally come to your senses.\" \n\nThat made it easy. I stepped aside and let Frick and Frack do their thing. \n\nI had explained Vanessa's complicity to my former employers. To say the least, they were NOT amused. Naturally, there would be a trial. Ours is a civilized society. \n\nHowever, Vanessa would be enjoying the hospitality of the Federal government until then. I don't think the summer heat at their super-max in Texas would do good things for her complexion, or attitude. \n\nSo, the last time I saw my soon-to-be-ex-wife, she was being unceremoniously stuffed into one of those ubiquitous white vans. My goodness!! what a mouth on that girl!! \n\nNow, all that was left was to find Dani and propose. \n\n...And the Gods laughed... \n\nI had last seen Dani on the steps of Landspitali. That was almost a month ago. It should have been a simple matter of looking her up. Except, I didn't know her last name. It had been expedient to NOT get into last names, since I didn't have one at the time.\n\nFirst, I called the Lutheran Synod in Reykjavik and asked about the woman from the boat. The nice lady told me that Dani had left right after I was hustled out of Landspitali. The woman said, \"I don't know where she went. She was hysterical with grief. We were afraid she would harm herself. But we couldn't prevent her from leaving.\" ",
        "So, I was sitting there in my empty manse, one that I absolutely loathed, with no idea where the love of my life had gotten off to. It was summer, and I was wearing a Henley and a pair of boat shorts, topsiders on my feet. The thick silver chain with Thor's hammer was draped on my chest, just as it had been from the moment Odin gave it to me. \n\nThen I remembered his words, \"It will grant a wish if it is truly worthy.\" I couldn't think of anything worthier than reuniting me with my lost love. So, I gripped the hammer tightly, closed my eyes and wished as hard as I could; it was faintly reminiscent of the scene where Peter Pan heals Tinkerbell. \n\nI had a vision of a neat little English rectory surrounded by a beautifully manicured garden. There was a lovely young woman tending the daffodils. She looked hopelessly sad. \n\nA couple of hours later, my Audi TT RS was ripping up the M3 headed for Winchester and the south coast. I had a location. I had a name. \n\nThe surrounding village had the quaintness of a place that had been around since before the time of The Conqueror. The rectory was like something out of GK Chesterton. \n\nMy heart was in my throat as I made my way up the crushed gravel path. My whole world rested on one throw of the dice. The summer birds were singing, the sky was blue, the air was warm, and I was praying that Dani wouldn't set the hounds loose on me.\n\nThe rectory itself had an old-fashioned bell. I rang it. A kindly older woman answered. I knew who she was thanks to Thor's Hammer. She was the wife of Dani's, father's, brother. \n\nShe looked at me inquiringly. I said in my politest tone, \"Could I please speak to your niece, ma'am? I'm a friend of hers and I need just a moment to talk to her.\"\n\nThe older woman's face broke out in a beatific smile. It was like she had been expecting me all along. She said, \"Danae is out in the garden. She spends most of her time out there tending her flowers and waiting for you.\" My heart soared into the trees and joined the songbirds in a joyful chorus.\n\nShe pointed to an arched gate in a Victorian era wall. I could see the tops of hollyhocks, azaleas and black-eyed-Susans above the ivy-covered bricks. \n\nI said humbly, \"Thank you,\" and turned and headed down the path into the garden.\" \n\nDani's flowerbeds were a festival of English delights, neatly tended, with perfectly manicured leaves and a white crushed gravel path. \n\nThere was a golden headed vision sitting on the ground at the end of the path. She was wearing a light blue dress and a white apron, a wide-brimmed straw hat with a yellow ribbon was laid in the grass next to her. She had on green garden gloves and she was intently focused on trimming the lower leaves of a bed of hydrangeas.\n\nI walked a couple of steps up the path and said gently, \"Hello Dani.\" She raised her eyes disbelieving. Her face went from miserable, to hopeful, to overjoyed in an instant. She jumped to her feet spilling her garden tools as she did. \n\nShe looked puzzled, but radiantly beautiful in her dirty white apron. Then she put her hands over her face and began to cry -- women!!! \n\nI closed the distance between us and took her in my arms. I said, \"I know it's been horrible but it's all over now.\"\n\nShe continued to weep. I kissed the top of her head and said, \"There were some things that I had to get behind me. It wasn't a situation I could control. But everything's resolved now, and I can spend the rest of my life making it up to you.\"\n\nShe turned her tear-stained face up to me and I could see the answer in her eyes. What does a man really need in life besides one person who you love beyond yourself, and who loves you in the same way? Then you can face anything.\n\nI'd fought the Midgard Serpent for her. I'd even wrestled my own bureaucracy; which in many ways is far more powerful and dangerous. Death would be the only thing that would separate us now. \n\n***** \n\nDani and I were married in her Uncle's church. That event came exactly two days after the Degree Absolute. Her cousins and her aunt were the only witnesses. \n\nI watched my wife walk up the aisle blushing furiously. She was a humbly self-conscious little woman. Her eyes never left mine. They were infinite pools of love and loyalty. The promise of a happy life shone from them.\n\nDani was wearing a white linen dress and a pair of four-inch white heels. It had a square cut neckline and was fitted down to just above her knees. It wasn't a fancy wedding outfit. It was a simple, modest and sensible thing, just like the woman who wore it. \n\nThe heels were meant to put her closer to my height. That was one more of her more endearing foibles. Dani's very insecure about how small she is. The heels only made her slim muscular calves even more attractive and there was no disguising that fabulous body under the dress.\n\nDani's eyes never left mine as we said the words. She had insisted on a simple ring, not the jewel encrusted wonder that Vanessa had demanded. Vanessa's diamond would've sunk the Titanic. \n\nI slipped the ring on Dani's finger and we had a chaste kiss. After all, her aunt and uncle were standing there. I looked down at her face. Tears of happiness were streaming down her cheeks. We shared another sweet kiss. It promised a greater love than I could have ever hoped for.\n\nI'd gotten rid of the Dulwich mansion during the six months that we were waiting for the final decree. That benighted place was owned by a pretentious d-bag and his slut wife. All of that foolishness was behind me now. I was prepared to open the next chapter with a woman who truly loved me, and I was a much better man for it. \n\nI bought a beautiful thatched crofters' cottage on the cliffs near Lyme Regis. It was like something out of Thomas Hardy; ninety acres of scenic beauty, complete with sturdy well-maintained outbuildings, a pen full of sheep and tenants to take care of everything. \n\nThen I dropped another couple of hundred-thousand quid on making the place into a fairy tale. I had sold Vanessa's ghastly mansion for double what I had originally paid for it. So, in essence my first wife's taste for luxury was underwriting my little rectory cat's happy home.\n\nThe cottage itself was two-hundred years old. But the walls were thick whitewashed stone and the floors were hewn out of durable English oak. Everything inside was fully modernized, plumbing, electrical, heating and cooling. But we still opened the windows as often as we could, to feel the sea breeze and listen to the soothing sound of the endlessly breaking waves. \n\nOur first married night was a revelation. Dani wouldn't permit anything more than avid kissing and a little fondling until we had actually taken the vows. She said that she wanted to come to me as a virgin. It was a long six months of bright blue balls. But I never betrayed her secret. \n\nDani isn't an ostentatious frilly nighty sort of girl. On her wedding night, she tip-toed shyly out of our little en-suite completely naked. The ambient light from the full moon illuminated every plane and nuance of her incredible body. \n\nShe looked nervous but steadfast. It was like her love was a gift and she was determined to give it to me. \n\nI had seen her body before. But there'd been a few minor distractions; like a room full of drunken Vikings and a highly-possessive demi-god. Now I was seeing my new wife in her bountiful glory. It was a vision beyond reckoning.\n\nDani has a truly beautiful face, in a classic, round, high cheekboned, big eyed, fresh-country-girl way. But her succulent mouth is her most erotic feature. Her lips are like little pillows stuffed with sensuality. Their lushness hints at the sexual animal crouching below the surface. \n\nShe rushed giggling to the bed, running in that hippy female way. Her big firm breasts bounced in a hundred different directions as she slid under the covers. I could feel the heat radiating from her body. \n\nShe turned to face me with a big sigh of contentment; one huge boob draped over the other. Her luminous eyes were anxious. She said hesitantly, \"Is this what you expected -- what you want?\" \n\nThank God for female insecurities. I'm richer than the average guy, with a more \"interesting\" background. But an incandescent beauty like Dani's is a rarity. She was much more than I deserved, and I knew it. More importantly, I also knew that she was mine, and mine alone.\n\nI got up on one elbow and looked down the length of her body. She was the female contradiction; petite in some places, and bountiful in others, both soft and hard. The feeling of those big floating breasts smashed against my chest was like nothing I had ever experienced. \n\nI said, \"You are perfect. I love you in your youthful beauty and I will love you when you're a wrinkled old crone. That's because the spirit that lives in this body is forever.\"\n\nMy new wife made one of those inarticulate woman noises. It indicated that I'd either given her the right answer, or she couldn't wait any longer, or maybe both? \n\nAnyhow, she crooked a surprisingly strong arm behind my neck and dragged me down to her mouth. It was wide open and white hot. It told me that the woman I had seen in Loki's mead-hall was about to make an appearance. Only this incarnation wasn't summoned by enchantment. It was Dani's absolute desire to give herself to me body and soul. \n\nI've had an admittedly wide and checkered sexual history. But Dani's kisses are like no other woman's. Her lips are alive when she kisses you; constantly moving twisting turning, nipping. That phenomenon more than anything else, conveys her sexual hunger. \n\nWe kissed enthusiastically for a few minutes. But it was plain that Dani's motor was revving, and she was getting impatient. It was ironic really. I was the bon-vivant with the long string of wanton women and Dani was the alleged quasi-virgin. But I was the one who was hesitating. \n\nShe made an exasperated noise and transferred my free hand to one firm floating breast. The boob was a lot more than a mere handful. The big brown nipple was hot, and bright angry red. I tweaked it. Dani groaned with sensation and absolutely freaked-out.\n\nHer head rocked back, and her mouth opened in a scream that was so loud that it probably set off a stampede in the sheep pens. Then she began to frantically worm her body underneath me. It was pure mindless instinct on Dani's part. In fact, I remember thinking, \"A more sophisticated woman would have handled this a little less directly.\" \n\nThat was my last rational thought. Because I was suddenly lying on top of a wild woman. Dani might have been an inexperienced girl. But she knew what she wanted, and she knew exactly where to put it. That's instinct too.\n\nShe reached between us and jammed me into her boiling, highly lubricated inner self. Naturally there was no obstruction. She'd already lost that. \n\nI slid right to the top. It happened without hesitation, or pain. The look on her face was surprise -- for a second. Then it turned to sheer lust, as she felt a cock inside her for the first time; at least one that she could remember. \n\nShe gasped loudly. Her legs shot straight up in the air and then out to the side, in an outrageously wide \"V.\" She held me there at the very top, not moving, making a constant high-pitched whine of mindless physical sensation. \n\nThen she began to undulate. That was instinct too. She wanted to feel the movement inside herself. I started out with long slow strokes until she increased the pace, all-the-while emitting loud shrieks of mounting arousal. \n\nThe feeling of heat, the squishing sounds and the hormonal smells were getting both of us to the end of the line faster than I wanted. So, I slowed a bit. She opened her eyes questioningly. Then the first orgasm hit her like the proverbial freight train. \n\nHer eyes rolled back into her head. Her body bent into a bow, every muscle was rock hard with strain and she began a series of rhythmic moans of increasing intensity, finishing with a frantic scream. I could feel the matching contractions as she writhed out of control. \n\nWhen she finally stopped shivering, I moved to turn her over. She looked puzzled. I wasn't in a mood to wait so I grabbed her tight muscular flanks and impatiently flipped her face down on the pillow, her perfect round ass elevated high in the air. \n\nThat was something new. She made a loud, surprised grunt when I entered her, and her shining sheaf of blond hair flipped outward in a dense cloud, up and back over her shoulders. Her hips elevated even higher. She widened her stance and grabbed the rails of the brass bed for leverage. Then she began to actively push back, while rotating her hips to feel the new sensation. \n\nHer two big buns were perfect, round and so firm that they didn't ripple when I slammed into her. As the tempo increased her moans got even more agitated. Finally, I reached around to give her a finger to suck on. She was frantically sucking on the finger when the next orgasm hit, and I almost lost its tip. \n\nHer legs crumpled as her incredible apple shaped ass began to writhe in an ecstasy of erotic sensation. I'd reached the limit myself and I collapsed on top of my new wife, cumming like the Midnight Express. Then there was a short period where neither of us were rational. \n\nAs soon as I calmed down, I realized that I was crushing her. So, I rolled to one side. Dani was still on her front. She lay on her stomach quivering and moaning, still clutching the brass bars of the headboard. I was lying on my back on our trashed sheets, gasping and sweating. \n\nThere was a moment's hesitation. Then she popped her head up looking devastated. She'd just fucked our mutual brains out. What was this? \n\nShe said almost crying, \"I'm sooooo sorry. I have no idea what came over me. What must you think of me, acting so wanton?\" \n\nThat was just sooooo Dani!! I actually laughed out loud. She looked even more crushed. I was ashamed of myself. This was something that was important to her. \n\nI said with all the sincerity I could muster, \"That was the two of us connecting at the most fundamental level my love. The passion that we share is a physical reflection of the feelings that we have for each other. And those feelings are obviously very powerful\"\n\nI asked, \"Could you do that with anybody else?\" \n\nShe looked at me like I'd lost my mind and said angrily, \"Of course not. This body is yours, and only yours. I would never share it with another man. That would violate every tenet of my beliefs.\"\n\nI said, \"So your incomparable passion is your marriage gift to me?\"\n\nShe got it. She looked at me tenderly and said, \"As many times as you want it. For the rest of our lives; till death do we part.\"\n\nEPILOG\n\nDani really loved children. We had four. They were a handful. But they were also the joy of our lives. Each of them is successful now. Dani made that happen. She was the rock on which our happiness was founded. \n\nA woman's single-minded devotion to her family is vastly undervalued in our egocentric society. Still, the lives that Dani made better through her humble, unpretentious goodness, might convince the most self-involved asshole, among the politically-correct, that there's more to life than kicking ass and taking names.\n\nDani believed in the value of self-sacrifice and she took humble pleasure in making everybody else's life better. She could have been anything she wanted to be. But she wanted to be a wife and mother.\n\nShe worked harder at that job than any career driven diva and she didn't care whether anybody acknowledged her effort. All she cared about was that her husband and her children were happy. \n\nMost of the time she was gracious and unassuming. But she was never close to subservient. Especially, if any fool messed with her loved ones. Then my shy little rectory cat would transform into a rabid Bengal tiger with a thorn in its ass. \n\nDani never lost her exquisite beauty. It just aged, like fine wine. On social occasions, all conversation would stop when my wife entered the room. The attention embarrassed her. Especially since she'd done nothing special with her appearance. She was just that spectacularly gorgeous. \n\nMen would flock around her. But there was never a question who owned her heart. Dani didn't need to go out of her way to make that point. It was just so blatantly evident in every glance and gesture. A lot of men envied me. But I never took Dani's loyalty for granted. I worked very hard to let her know how much she was loved in return.\n\nDani also kept her legendary inner fire. I relished that gift until I was too decrepit to get the booster out to the pad. Still, even in our old age she'd manage to occasionally launch the antique thing. \n\n*****\n\nIt was sunset. The two of us were sitting on a Lutyens bench, surrounded by a dense arbor of boxwood and morning glories. The arbor's embrace was fragrant, private and peaceful. We were at the top of our property. From there, we could see the booming waves at the foot of the cliffs. \n\nIt was Dani's favorite spot. I had carried her up there wrapped in a blanket, even though it was a warm summer day. She was only seventy-seven and she would normally outlive me. But she'd been handed a dire diagnosis and she was too weak to walk now. \n\nI wasn't remotely afraid of death. I'd lived a long and rewarding life with one of God's kindest and most loving creatures. But I was absolutely terrified at the thought of losing her. \n\nSo, I took Odin's necklace from around my neck and pressed Thor's hammer into Dani's palm. Then I took her frail little hand and closed it inside mine. I said, \"This necklace grants a wish if you want it badly enough.\" \n\nDani looked at me intently. Her face reflected the shining beauty of the spirit that lived behind her eyes. She said, \"And what do you wish for my love?\"\n\nMy voice shook with emotion as I said, \"I want the two of us to leave this world together. I couldn't bear life without you.\" \n\nDani's gentle eyes misted with tears. She squeezed her hand around the talisman as she whispered, \"Me neither.\"\n\nAnd so, it came to pass. Two old people sat side-by-side in the fading light of a beautiful English evening. Their hands were lovingly clasped, and their eyes were tightly closed, as Odin granted them one last worthy and heartfelt wish."
    ],
    "authorname": "dtiverson",
    "tags": [
        "beyond the wall of sleep story",
        "big tits",
        "supernatural horror",
        "memory loss"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/what-rough-beast"
}