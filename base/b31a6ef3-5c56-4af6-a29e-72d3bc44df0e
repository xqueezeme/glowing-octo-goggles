{
    "title": "For Your Dining Pleasure",
    "pages": [
        "OK, call me a whore. If getting paid for sex makes you one, I guess I was, at least for the evening.\n\nBut this was... different.\n\n.\n\nI knew I had a winner with Tanner. We were deeply in love and optimistic about the future. Our relationship was solid as they come. \n\nFinancially however we were doing no better than average for an undergrad couple our age, which is to say not particularly well. Thankfully, neither of us were wasting our time with a degree in some worthless warm-fuzzy pseudo-subject; Tanner was studying to be an electrician and I was studying computer programming. \n\nWe'd be OK in a couple of years, but at that moment, yeah, money was always short. We had enough for a membership at the local Y, basic food, a tiny apartment and each other. It was -- almost -- enough. Part-time jobs never provided us quite enough to make ends meet and we were uncomfortably aware of our snowballing student loans. \n\nIt wasn't just money - we didn't have a lot of time to waste, either. Our days were spent in class, studying, in bed together or working out at the gym. \n\nOne November evening, I came home to find Tanner reading a short note which had been left in our mailbox.\n\n<center> \n\nDear Lisa and Tanner,\n\nYou have been recommended for a special employment opportunity. \n\nI think you will find the terms interesting \n\nand the pay very satisfactory. \n\nThe phone number is good for the next 36 hours. After that, \n\nit will be assumed that you are not interested and it will be disconnected.\n\nI look forward to hearing from you.\n\nJ.T.M.</center>\n\nThere was nothing else but a business card for a 'Joy Thea McMann', with no job title given. Professional-printed and expensive-looking, it bore the name and logo of something called 'Wildebrandt Enterprises', but with no address or further information beyond an out-of-country phone number.\n\nWe looked at each other and shrugged. Any chance to pull in some extra money was worth investigating. \n\n.\n\nWe met Joy McMann in due course at a small restaurant on the outskirts of town. She turned out to be a well-dressed, handsome woman in good shape for her age, which I judged to be perhaps late 50s. I sensed somebody with a will of iron, somebody who had been down a lot of rugged roads. Despite a somewhat severe appearance, she had a winning smile and greeted us both with hugs and a kiss. \n\nAfter ordering us all a drink, she got straight to business.\n\n\"I have a business proposition for you two,\" she said. \"It's rather... unusual in nature, but legal enough and pays quite well - $2,500 for an evening's work.\"\n\nTanner and I looked at each other. To us at that time it was a fortune.\n\n\"What does it involve?\" he asked, staring at her.\n\nShe sat back. \"There is a smallish group of men and women in the area who get together from time to time for a dinner and subsequent...\" she paused momentarily, something I was to soon realize was a strong habit, \"business discussions. I manage the meetings, including the meal, the facilities and the...\" she paused again, \"entertainment.\"\n\nShe looked from Tanner to me, looking for a response. Seeing none, she continued.\n\n\"It's become traditional to provide some sophisticated... diversions for our patrons over dinner.\"\n\nMy eyebrows went up, as did Tanner's.\n\n\"OK,\" she said. \"I'll cut to the chase. You two have impressed some people at The Circle. From what I've seen, you're pretty impressive together.\"\n\n\"The Circle?\" I asked. \"I'm not sure I've ever seen you at one of their events.\"\n\nTanner and I, while primarily monogamous, had become involved in a local swinger group, known to its members as The Circle. \n\n\"I hope you haven't seen me,\" she said evenly. \"We have an... arrangement with them and I tried very hard to be inconspicuous.\" She smiled. \"Given the circumstances, it wasn't all that difficult.\n\n\"My point is that, in a large room full of naked men and women in the midst of every possible sexual activity, you two were the ones all eyes were on all evening. You made men horny and women jealous.\"\n\nI was embarrassed, but not really surprised. Both of us had good figures to start off with. Tanner was only five feet, nine inches tall, but was lean, very handsome and buff as all heck. He had certainly grabbed my attention the first time I'd seen him the gym. I thought he would look good with a mustache, but he insisted on being clean-shaven.\n\nEverywhere. \n\nI found that pleasing.\n\nMyself, I was not quite 'short' at five feet four but had a figure which drew a fair bit of attention, a really cute face and long blonde hair. \n\nPut simply, we were miles ahead of the pack, appearance-wise.\n\n\"Lisa,' McMann said seriously. \"you've a truly sweet bod and Tanner, in addition to be a very good-looking chunk of man, is, shall we say, properly... equipped for the job. You're both limber, uninhibited and gorgeous. You're also clearly in love. I think you'd be... perfect for the r\u00f4le.\"\n\n\"Which is?\" Tanner asked, very softly. I was suddenly concerned he might lose his temper.\n\n\"Don't be coy, Tanner,\" she said soothingly. \"We all know that neither of you are shy and that you're quite prepared to have sex in front of strangers. All we want in this case is to pay you to do it.\"\n\nAfter a moment, he seemed to relax.\n\n\"Porn movies?\"\n\n\"No, there will be no recordings made of any kind. We're talking one live... performance.\"\n\nShe paused to let that sink in, a very long pause this time.\n\nI looked at Tanner and we gave each other a very small nod.\n\n\"We're willing to listen,\" he said.\n\n\"Let me show you something to make matters clearer,\" she said. \"Have you ever worn contact lenses?\" \n\n\"Both of us wear them on a regular basis,\" Tanner replied. \"Why?\"\n\n\"Good, that makes it easier.\" She brought out what looked like a normal lens case and opened it. Inside were what appeared to be ordinary contacts, but they were an odd, electric blue, totally unlike any real person's. She motioned us to pick one up. On doing so, we found that while they looked normal in one sense, the pupil was opaque, obviously designed to block all light. A person wearing them would be totally blind until they were removed.\n\n\"Part of the agreement,\" she said, \"is that you would each wear a pair of these. They're high quality and perfectly sterile; we have them made in a professional lab in Europe.\"\n\n\"But how would we be able to see?\" I asked, rather taken aback at the thin sapphire-colored disc in my hand.\n\n\"That's precisely the point,\" she said. \"You wouldn't. You would put them on before our... patrons arrive. One of the things they insist on is anonymity. With these in, you won't be able to see them; the color will allow them to see at a glance that they're... invisible to you.\"\n\nTanner and I exchanged glances. \"Erm, I guess so,\" I replied hesitatingly.\n\nMcMann smiled, replaced the lenses in their case. She then produced what looked like a pair of wireless ear-buds. \"Try these, one each,\" she said. \n\nThey fit well enough, although I could barely see the one in Tanner's ear. \n\nShe held one wrist to her mouth. For the first time, I noticed an inconspicuous microphone there. \n\n\"I'll be your director for the evening,\" her voice in my ear explained. \"When it's time to change positions or do something different, I'll be able to talk to you through these without disturbing the patrons.\"\n\nTanner shrugged. \"I'm not sure I'm into some blindfolded 'Eyes Wide Shut' scene.\"\n\nMcMann put her hand on his forearm, briefly, before holding up a printed form. \"This is our contract,\" she assured him. \"The patrons have all signed their own agreements, including both no-imagery and no-touching clauses. If any of them so much as lay a finger on either one of you, it's a six-figure penalty, bond already posted.\"\n\n\"Has that ever happened?\" I asked, pensively.\n\n\"To be honest, yes, it did happen, two times. The last time was eight years ago and the other one three years before that. The patrons in question each received a forfeit which shook even their peers. I don't think it's going to happen again.\"\n\n\"How long would the show last?\" I asked.\n\n\"It depends,\" she replied. \"Generally, between an hour and 90 minutes.\"\n\nTanner shrugged beside me. \"An hour and a half of straight...?\" He rolled his eyes. \"I don't think I can last that long, sorry.\"\n\nMcMann smiled reassuringly. \"Of course not, Tanner. No normal man could. But, first off, it wouldn't be continuous. There will be some breaks for you two. And the last event at The Circle went on all evening.\n\n\"Secondly, we have access to some pretty special, um, substances to help the man out. Or the woman, if it comes to that.\"\n\n\"Viagra?\" \n\n\"If you insist, but I doubt you'd need that, at least initially. Actually, we have some more effective things, ones still on the experimental list.\"\n\n\"So...?\" I asked.\n\n\"So, dear, the plan is merely for you two to enjoy each other as evening entertainment for our patrons. You yourself get to have as many orgasms as he can give you -- and don't worry about being quiet.\" She turned to my boy and laid a hand lightly on his arm, this time not briefly. \n\n\"You, Tanner,\" she smiled thinly, \"should aim for four.\"\n\n\"Four? In two hours?\" he exclaimed. \"You must have a lot of faith in me.\"\n\n\"How many did you have last week at The Circle?\"\n\nHe closed his eyes in thought. \"Um, three?\"\n\n\"Four!\" she retorted. \"Two with Lisa, one with the tall brunette and one with that little Asian girl, the one with the tattoos. Don't sell yourself short, Tanner -- you're young, full of vitamins and really fit.\" She smiled at him -- a knowing smile.\n\n\"Four would be nice, Tanner, but it really doesn't matter provided that the show is good.\"\n\nWe again looked at each other, nodded.\n\n\"Grooming,\" she said next. \"You are both well-kept, thankfully. The day before your engagement, you will both need to have a full body waxing. It's up to you but I would recommend this salon,\" she said, passing us a business card. \"They're used to... accommodating both sexes. Bring us the bill and we'll add the cost to your fee.\n\n\"You,\" she said, pointing at Tanner, \"need to get a haircut as well. Don't change your style, it's... darling, just trim up any loose ends.\"\n\nTurning to me, she smiled brightly. \"Dear, your hair is gorgeous as it is. Don't put it up or anything. We'll just leave it loose, OK?\"\n\nI nodded in agreement. I'd always thought my hair was one of my best features.\n\n\"Makeup,\" she said. \"Obviously you will need some, Lisa, but I will have an esthetician there before you go on. Don't bother to wear any that day or she'll just have to scrub it off.\"\n\nI nodded again.\n\n.\n\nThe contract she presented was short enough, committing us to provide our 'professional entertainment' services to 'Wildebrandt Enterprises', plus a total lifetime non-disclosure agreement. Oddly enough, it seemed to be written in plain English rather than incomprehensible legalese. Our fees were spelled out, although the exact nature of our duties was not. The penalty clause for breaking silence was surprisingly stiff and I got the impression that Wildebrandt had an entire cohort of flesh-eating lawyers waiting eagerly in the wings for that possibility. As she noted, we were indemnified against any actual contact with her 'patrons' or other Wildebrandt employees. \n\nTanner laid his hand on mine. \"You're sure?\"\n\nI looked at him and, turning to McMann, simply asked for a pen.\n\nBefore we finished, she handed me an envelope containing $500 in cash. \"An advance on expenses,\" she said. \"Keep your receipts.\"\n\nWith that, she left.\n\n.\n\nWe were to meet her in a local coffee shop on The Day - 23 December. We had been seated for no more than a couple of minutes when a very large, well-dressed, friendly-looking black man came up to our table and, smiling, said our names. \n\n\"My name's Jamie,\" he said. He extended his arm as if to shake hands, but instead his palm held small photos of Tanner, McMann and me at our initial meeting. \"Ms McMann sends her apologies but she is tied up and sent me to fetch you. I have a car outside.\"\n\nWe walked out of the shop and stood on the sidewalk. A grey limo, no less, pulled up and the passenger door opened. Jamie waved us in and followed. Only when the door closed behind us did we notice that the privacy screen in front of us was up and all the windows were blacked out. \n\nJamie noticed our obvious unease and reassured us. \"Just a matter of confidentiality,\" he said as the vehicle started off. \"Oh, I'll also need your phones if you brought them. More privacy stuff,\" he smiled.\n\nI remembered that had been mentioned in the contract. \n\nHe handed us a bag with a self-seal strip. Once we'd put our phones in it, he sealed it and handed us a pen to write our signatures on the security rectangle over the seam. \"You'll get them back afterward, no problem.\" \n\nHe then opened a small compartment which proved to be a built-in refrigerator. \"Coke? Ice tea? I'd offer you wine or beer, but not on production nights.\"\n\nWe pointed at our choices; he handed us each a bottle and selected a Perrier for himself before sitting back in his seat. \"Just relax,\" he said. \"It'll take about an hour to get there.\"\n\n\"And you're not saying where, are you?\" Tanner asked, his eyes fixed on Jamie.\n\n\"Nope,\" Jamie grinned, taking a sip of his water. \"That's all part of the game.\"\n\n\"Have you worked for Ms McMann very long?\" I asked, trying to make conversation.\n\n\"Long enough.\" \n\n\"What's Wildebrandt Enterprises do in the daylight? We couldn't find it on the net.\"\n\n\"Oh, it's a service company. Does lots of things, depending on the needs of the customers.\"\n\nIt was pretty obvious that Jamie was a past master in keeping his mouth shut. I noticed a modest TV screen at the front of the compartment. \"Does that work?\"\n\n\"Oh, yeah. Sorry, I should've asked.\" Reaching into a side pocket by his seat, he pulled out a standard-looking remote. The TV showed perhaps half a dozen major news networks - CNN, MSNBC, BNN and so forth. Nothing particularly interesting, but it was better than just sitting there, so I chose one and settled in. There was a small rack with current magazines and Tanner buried himself, typically, in 'Sports Illustrated'. \n\n.\n\nIt could have been half an hour; it could've been an hour and a half. The limo bumped here and there, made turns, sped up, slowed down. We could've been in Patagonia for all I knew. Eventually, it turned, slowed, turned, slowed still more, stopped. The engine shut down.\n\nJamie smiled again, opened the car door. \n\nPicture the shipping and receiving bay in any building in any one of a thousand cities -- a poured concrete floor sloping down to drain grids, painted cinder block walls, exposed pipes and vents under a high ceiling, windowless roll-down doors at either end, both closed. There were no signs, no posters, nothing to break the institutional sterility beyond a couple of brooms, a fire extinguisher and a trash can.\n\n\"We're here,\" he said. \"You two ready?\"\n\nWithout waiting for an answer, he led us through an unmarked fire door. Beyond it was a very ordinary hallway with white walls and an industrial tile floor. We followed him until he stopped, opened one unlabelled door among many others and motioned us through. \n\nIt looked like a higher-end staff lounge in any one of a million buildings - fairly nice furniture, a big screen TV and a coffee machine with an assortment of pods. Two doors were marked with international washroom symbols. We had the place to ourselves.\n\n\"Please sit down. Help yourself to coffee if you would like. Ms McMann will be along in a minute.\" With that, he left.\n\nI was making myself a tea when she strode in.\n\n\"Good to see you again!\" she said. \"Before we take you in for your... makeover, Lisa, why don't I show you two where you will be, um, performing?\" Falling in between us and holding each of us by the upper arm, she led us back into the hallway and through yet another unmarked door.\n\nThe room was large and open, opulently decorated and furnished. Wreaths had been hung here and there in celebration of the season.\n\nIn the centre was a circular table, capable of seating perhaps 20 diners. It looked to be made of some fine wood and was obviously custom-made, with matching chairs all around the outside. The table was set for dinner with multiple sets of tableware. A row of half a dozen crystal glasses rested in front of each place. Red, white and green candles were nestled in pine arrangements here and there.\n\nThe centre portion of the table was empty, so that the table made a large O-shape. A small gap to one side permitted entry.\n\nInside, in the very centre, was a round platform eight or ten feet across. The platform was covered with red leather and its top was perhaps knee-high; anyone seated at the table would have a perfect view. There was a collection of matching leather cushions, pillows and ottomans of various sizes and shapes scattered between the platform and the table. \n\nFour people were standing in one corner. Like Japanese kuroko, prop-movers, they were dressed in flat black from head to foot. Even their eyes were covered in black gauze. \n\nAll four were on the short side of average and slim to the point of being androgynous, but I got the impression that there were two women and two men. They stood with hands behind their backs, their posture impassive.\n\n\"They're your stage crew,\" Joy explained. \"They'll help you in and out of the room, assist you during scene changes and so forth. Just accept their guidance.\"\n\n\"Let's run through this,\" she said. \"Here are your ear buds. Let's get used to them.\"\n\nWe dutifully put them in our ears.\n\nI noticed that she was again wired, this time rigged with an inconspicuous wrist microphone on the inside of each wrist. As we watched, she lifted one to her mouth. The voice in my ear was loud and clear when she tested it.\n\nDropping her wrist, she continued.\n\n\"You two will disrobe in the change rooms. Don't worry about your belongings; they'll be fine. You'll get a three-minute warning, your last chance to pee if you need to. One of the handlers will help you with the contact lenses. They'll lead you in here and up onto the stage. \n\n\"The stage will begin rotating once you are on it, but quite slowly, you won't have any problems with balance. \n\n\"We'll start out with you standing in the centre of the platform, back to back. Lean back a little against each other if you want but be sure to reach back and hold each other's hands. Spread your legs a little. We'll give the patrons a couple of minutes to admire the two of you while I introduce you then, using stage names. Do you have any ones you want me to use?\"\n\nWe shook our heads. How could it matter?\n\nMcMann motioned us to take up our places on the stage. It was clear that we would be on full display, with everybody in the room being able to see everything. I found my heart beating in anticipation -- both excitement and nervousness. My nipples hardened just a little.\n\n\"Any questions so far?\" she asked.\n\nTanner shifted behind me. I could tell he was embarrassed. \"Erm, do I need to be hard when we come in?\" \n\n\"No. Actually, many of our female patrons like to watch a man getting erect.\" She grinned slightly. \"I know I do. Whatever works, dear.\n\n\"After a couple of minutes onstage, I'll give you your next instructions. \n\n\"When I tell you, turn, face each other and begin foreplay. You can do whatever turns you two on. I've seen you in action and you won't need any... guidance.\" She smiled again.\n\n\"Tanner, you asked earlier about this being a porn set. It isn't, but in general, I'd like you two to consider... positioning yourselves as if it were. Try to make sure that your audience can see the action.\"\n\nWe nodded, turned inwards. I saw his beautiful eyes looking at me and my heart leapt a little.",
        "\"We'll keep this up for a while, five or ten minutes before I call for a new... position,\" McMann's voice in our ears stated. \"The exact time will depend on how the patrons are enjoying themselves. We may have to do some improvisation, play things by ear.\"\n\nFor the next few minutes, McMann ran us through a series of changes. None of the positions were especially difficult, but I found it weird to be doing, fully clothed, what I would in a short while be doing naked and in front of a crowd of strangers.\n\nEventually, she recovered the earbuds and, handing them to one of the attendants, led us back to the lounge. Leaving Tanner there and warning him that we'd be a while, she took me towards the ladies' change room. Pausing by the door, she handed me a contact lens case. \"For you, dear, these start now. Oh, and you might as well leave your clothes here, too. Tanner can watch them for you.\"\n\nKnowing him, he'll eat them, I thought to myself, but it took me but a minute to strip down and insert the odd blue lenses. With them in, I was blind as a bat. Joy, taking me by the arm, led me through the door.\n\n\"Hold still for a second,\" she said, then sat me down in what felt like a typical salon chair. From the feeling under my thighs, it had a towel laid across it.\n\nAn attendant started off by washing, conditioning and drying my hair, leaving it quite straight, just as McMann has predicted. Then, for the next couple of hours, I had my nails done and makeup applied. The attendants (and sometimes there seemed to be at least two of them) were quiet and only spoke to give me directions - turn my head or raise my chin, that sort of thing. Accustomed to the usual beauty salon chattiness, I must confess that I found it a bit disconcerting.\n\nThe makeover was strange as well since it covered much more of me than usual. Like something out of The Story of O, my nipples and sex were made up and something (blusher, I thought) applied in my cleavage. Hands spread lotions and pleasant-smelling goos applied almost everywhere. My eyelids were colored, my lips painted repeatedly. Half the time, I had no idea what they were doing. Stones buffed, brushes brushed, pads patted. It was very pampering, but at the same time rather eerie.\n\nEventually, they simply stopped and walked away, leaving me in the chair. A few seconds later, Joy's voice said, \"They're gone. You can remove your contacts.\" Trying hard to avoid smearing my nails, I did so and gasped at the woman in the mirror in front of me.\n\nLook, in all modesty, I know that I'm a very good-looking girl; I might have modeled had it not been for being too short and too busty. But the image in front of me was spectacular. Whoever they had been, the beauticians had been experts - just world-class. It was definitely me, but somehow much more than me. He, she or they had amplified everything good about my features and minimized things I hadn't even noticed.\n\nI was ready for opening night. I was ready for the front cover of Vogue or Elle. I was ready for first-name chats at the Oscars with women I've only seen at check-out aisle magazine stands.\n\nI was so definitely ready for this. I smiled, suddenly full of confidence.\n\n\"Just relax a while and let your nails dry fully, dear,\" she said. \"I'll do your hair again.\" And she did, almost endlessly. My grandmother once advised me to take 100 strokes with a brush every morning. I never had but could now see why. My hair simply glowed.\n\nWhen she finished, she helped me to my feet and escorted me back into the lounge. Tanner was watching a basketball game when we entered, my clothes beside him on his couch. He turned his head, almost reluctantly, and his jaw dropped.\n\n\"She cleans up pretty well, don't you think?\" Joy asked, almost proudly.\n\nTanner could barely stammer. I noticed that he would not need the Viagra.\n\n \n\n\"Lastly, Joy said, \"it's costume time. Lisa, here's yours.\" \n\nIt was a black domino mask, but made of stiff, wide-mesh lace.\n\n\"What about the lenses?\" I asked, puzzled.\n\n\"It goes on top of the lenses, dear,\" Joy replied. \"Like I said, it's just a decoration. It goes with this,\" handing me a black choker neckband. A satin band the width of a finger was decorated with black lace matching the mask.\n\nI put them on in front of a mirror over the sink and was amazed. The mask made me look totally mysterious and the band... well, not slutty, but definitely sexy. OK, sexier. Joy obviously knew what she was doing.\n\nShe turned to Tanner. \"You, dear, will have yours simply painted on.\" \n\nShe motioned to one of the attendants, who produced a small spray can and a sheet of thin cardboard to mask the spray patterns. Walking up to where Tanner was seated, he (or she - I couldn't really tell) proceeded to spray on a black bandit mask covering his eyes and temples. It only took a couple of minutes and looked surprisingly bold, quite forceful, almost dominating. I tried to imagine the effect it would have and shivered in anticipation. There would be no doubt who was masculine and who was feminine in this duo.\n\n\"Aaaand we're good,\" Joy said. \"We've got about half an hour. Tanner, just keep your hands off of her; we don't want to smear anything, do we?\"\n\nWith that, she left. Just before pushing the door open, she stopped, turned and pointed at me. \"And keep your hands off him, too, missy. He's going to need that thing wide-awake tonight.\" \n\nWith that, she left.\n\nTanner started to say something, but I held him off.\n\n\"Yeah, I know. I'm pretty amazed myself, hon.\"\n\n\"I love you, Lisa. You...\"\n\n\"You, too, lover. Nervous?\"\n\n\"A little.\"\n\nIn the end, we simply sat next to each other, holding hands in the lounge. It seemed like an endless time, but the same time, time flew faster than I've ever felt it go before. Finally, two of the faceless attendants silently re-entered the lounge. They wordlessly held out their hands. In one hand was an ear bud, in the other was a contact lens case. \n\nA minute later, they had us by the arm and were leading us out of the lounge and down the hallway. At what felt like the right distance, they paused and gave a discrete knock. In a few seconds, the door opened and our guides led us forward. \n\nJoy's voice introducing us as 'Dwayne' and 'Suzanne', was drowned out by the rise of admiring voices, male and female, from all around us.\n\n\"Just follow their lead, kids,\" came Joy's voice in my ear.\n\nOur guides led us on what felt like a complete circle of the room. I could hear chairs shifting as people turned to watch. A couple of glasses clinked. Bizarrely, I could hear soft Christmas music in the background. \n\nAs we walked, I would make out individual voices. \"So handsome!\" \"Such an amazing figure!\" \"Is she your present for me, dear?\" The voices rose, blending together into a buzz of excited conversation.\n\n\"And into the middle.\" \n\nWe had to let go of each other's hands to pass through the gap in the table. My guide paused for a second.\n\n\"Lisa, there's a step right in front of you. Put out your right foot out. That's it. Two steps up onto the platform.\" Once on top, my guide led me a couple of places forward. In my ear, I could hear Joy giving similar instructions to Tanner behind me. A moment later, we were standing back to back, our hands firmly clenched together. \n\n\"Spread your legs a little bit, Lisa. Show them what you've got.\" \n\nThe motion of the platform was subtle when it started, but I could sense it as much by the voices in front of us shifting to one side as by its movement. The comments continued, changing slowly as the platform's rotation brought us in front of more people.\n\nI could feel Tanner's strong back against mine. On impulse, I leaned my bum back and rubbed it against his. There was a smattering of surprised applause.\n\n\"Nice one, Lisa!\"  came the voice in my ear. \"You can do that again if you like but keep your legs wide open.\" \n\nI did my best, giggling and wiggling my cheeks against his. His hands began to squeeze mine. \n\nI had had to lean forward a bit to bump bums and became aware how much my boobs were swaying beneath me when a basso chuckle came from in front of me.\n\nFrom behind me, in front of Tanner, I suddenly heard some feminine giggles, then enthusiastic applause, which seemed to follow him as the platform turned. I realized that he must be getting erect again and smiled. I liked to watch it, too.\n\n \"They love you guys!\"  came Joy's voice. \"Talk about crowd pleasers! Tanner, I wish you could see the girls drooling -- very impressive, hon!\n\n\"OK, get ready to shift position. Tanner, Lisa, I want a stand-up make-out session. Lisa, make sure you two don't stand directly in front of each other. They need to be able to see your boobs and Tanner's cock. Nod if you understand.\" \n\nWe both nodded.\n\n\"OK, switching to stand-up foreplay in three, two, one - Go!\" \n\nI stood up, turned towards Tanner and felt for his waist. His hand touched my shoulder and I leaned in towards him, lifting my face as I did so.\n\nHis lips came down on mine and, for long, long seconds, we merely kissed, at first gently, then more forcefully. His hands swept up my body and held my head. His strong thumbs caressed my ears as mine ran up and down his back. \n\nThe murmur of conversation around us paused. When Tanner's hands ran slowly back down my back to cup and fondle my bum, I heard a couple of female exclamations. They turned to giggles as I felt his manhood growing still more, brushing up along my side.\n\nI felt one of his hands leave my bum and glide up over my hip and waist to cuddle a breast. I became aware of a tautness in my groin, a glowing in my nipples before a thumb began to roll and play with one. How I loved this man! The fact that 20 total strangers were watching suddenly meant nothing. \n\nOr maybe it meant everything. Being able to show those unknown people just how much I loved my boy and how wonderfully he treated me was as sexually exciting as anything I had ever thought of.\n\nI tried to reciprocate with his own nipples, knowing how sensitive they were, but we were pressed so close together that I could only reach one. As I played with it, Tanner's kisses grew more forceful, more demanding. Obviously, I was hitting the right buttons.\n\nHe bent down, nuzzled first one boob and then the other. Remembering we were to be standing, I tried to reach him but could only grasp the very head of his cock. I massaged it as well as I could with my fingertips but was pretty distracted by the sensation of his tongue, teeth and lips on my nipples.\n\nTanner had always been good at this and it was a standing joke between us -- Foreplay? No, fiveplay! Right now, I felt like he was heading for six...\n\nHe stood up again and I could get a better grip on his cock. I slid my hand up and down its length before sliding it underneath to fondle and roll his balls. I heard him hiss and gently pulled on his sack, stretching it away from his body. \n\nA female voice from to one side whispered, no doubt to a man beside her, \"Would you like me to try that sometime, lover?\" \n\nHis reply, if he made one, was lost in my gasp as Tanner's strong fingers slid between my labia. The sensation was amazing and I turned in towards it as his other arm grasped me tightly by the waist, holding me in place as his fingers drove me higher and higher into arousal.\n\n\"OK, Lisa's looking pretty hot, guys. Get ready to switch. Tanner, stay where you are. Lisa -- some kneeling... oral on that young man, please. Nod if you understand. \n\nI nodded.\n\n\"In three, in two, in one -- Go!\" \n\nI slipped out of his arms and, without releasing my grasp of his hardness, knelt in front of him. I brought his head towards my face, began licking and kissing its head, running my lips over its taut but silky skin while I caressed his dangling sack and its precious contents.\n\nI felt Tanner's hands gently on my head as I took him further and further into my mouth. I began to suck on him when Joy's voice unexpectedly popped in my ear.\n\n\"Let's try something different, kids. Tanner, spread your legs a little, tighten up that delightful butt. Oh, and put your hands behind your head.\n\n\"Lisa, you too. No hands -- just put them behind your back. I don't want your arms blocking... the view. And spread your legs a bit more, please.\" \n\nOK. I could do that. I felt his tip against one cheek and turned to take it between my lips. I began to bob back and forth on it, quickly, quickly. The angle shifted each time my head came forward. I could feel my hard nipples against the skin of his muscular thighs.\n\nAfter a minute, I slowed down, took more languid strokes, sucked harder. I could hear Tanner groaning above me. Smiling to myself, I began to turn my head from side to side, rolling my lapping, teasing tongue around his length.\n\n \"He's getting close, Lisa.\" came the voice in my ear. \"Pull off of him for a minute, dear, give him time to relax a bit. Just tease him.\" \n\nObediently, I pulled my head back and felt Tanner's crown drop out of my lips onto my chin. Bending down, I kissed and nibbled lightly with my lips wherever I could reach him. In front of me, his male meat banged lightly here and there against my face.\n\nEven though I couldn't see him or he me, I kept looking up towards his face and did my best to give a happy smile -- if not for him, then at least for our audience.\n\nBending lower still, I lapped under his taut sack, feeling it shift and move on my nose. \n\n\"Damn!\" came a basso voice from a viewer in front of me. I felt oddly proud and appreciative at the one-word praise. I was the star.\n\n\"Perfect lips!\" replied a nearby feminine voice. \n\nSmiling at the audience for a moment, I started with slow, broad tongue strokes. More sensation for Tanner, but not as much as I could if I'd been holding him. His cock bounced around under my ministrations. I could smell his male scent; my pussy clenched in response.\n\n\"Good girl! OK, we're going to switch soon, team. Lisa -- still no hands for right now, but go as hard as you can.\" \n\nI took Tanner back into my mouth; my cheeks dented with suction. I felt his tip on the back of my throat and, fighting back a gag reflex, leaned forward, pressed him deeper. He slid into my throat and I lunged back and forth as fast as I could go. Again and again, my nose bumped into his pubic bone. Finally, gasping, I pulled back. I could feel his manhood flop down on my chin.\n\n\"Cut! OK, Tanner, here's your chance to shine, dear. It's missionary for the audience, kids.\" \n\nI was surprised at how quickly his strong hands lifted me to my feet. Without direction, still standing, his lips found mine in our blindness and we exchanged a hard, passionate kiss, our hands running powerfully over each other's skin.\n\n\"You're just awesome, Lise!\" Tanner whispered into my ear. \"You've got me so damned hard!\"\n\n\"I know,\" I grinned. \"Me, too!\"\n\nHis hands took me by the waist and we lowered ourselves to the platform. I was surprised to feel light hands guiding us slightly to one side and realized they must belong to our 'stage crew'. Not wanting to fall off the rotating platform, I let myself be guided onto my back. \n\nHappily spreading my knees, I felt Tanner's bulk against my thighs, then his chest came down on mine. Welcoming his weight, I reached around and between us to again clasp his stiffness.\n\nI rubbed it slowly up and down the length of my lower lips, three, four, five times. \n\nThe sounds of knives and forks had virtually stopped. The room was very quiet. I could hear breathing from all around us.\n\nI put his tip just inside my opening and pulled my hand back to hold him by the hips.\n\nTanner gave a long push and I squealed as his length slid its full length into me. My legs curled up around his waist. \n\nHe paused for a moment and there was a round of gentle applause from behind us. I heard whispers, but couldn't make out the words. It's not like I had a lot of attention to spare, anyway.\n\nTanner started to stroke in and out, slowly, as he always did when we were together. Nothing fancy, just good, old-fashioned loving - deep to almost-out, over and over. Missionary is popular for a lot of very good reasons and I was feeling almost all of them as the ridge of his cockhead slid against my lining, pushed against my G-spot. I could sense orgasm approaching. \n\nAnd Tanner was a gentleman, resting most of his weight on his elbows and leaving the rest to press on my pussy. \n\nStill stroking, he began to rotate his hips in a circular, horizontal motion. The feeling was constantly changing for me and I could feel a building in groin, breasts, lips -- OK, everywhere. I realized that the sounds of dining around us had been overtaken by my own gasps and groans as Tanner's substantial length stretched me over and over again.\n\n\"Slight variation coming up, kids. Tanner, see if you can stay inside Lisa, but kneel up between her legs. Lisa, lift your hips, dear. We'll get you some support under your bum.\" \n\nTanner's strong hands clasped my behind and I could feel him shift. As he changed position, I could feel his crown pressing directly on my G-spot and had a mini orgasm right there. I gave a cry and got more applause. \n\nSuddenly a cool leather pillow or something slid under my bum and Tanner, still stroking, let me down. My feet fell to the floor on either side of his. Even without his holding me up, our groins were at about the same height.\n\nHe leaned forward, caressed my boobs and, with that, I had a major orgasm. I roared with pleasure, continued to do so as Tanner continued to bang me without pause.\n\nThe entire room burst into applause. There was even one person, a man I think, who whistled. I could hear glasses clinking together.\n\n\"Good one, Lisa!\" came the voice in my ear. I smiled in ecstasy.\n\nTanner's body bent forward still more and I could feel his lips on mine. Never before had I wanted his kisses more; our tongues fought inside each other's lips. \n\n\"Good stuff, team! We're going to make a small change now. Tanner, I want you to lean back, but keep at it. Lisa, raise your legs to fit over his shoulders.\" \n\nWe shifted in accordance with her directions. It's always been one of my favorite positions; it allows an amazing amount of penetration. In this case, it felt like Tanner was going to hit my lungs. It was all pleasure - wave after wave of pleasure.\n\nTanner started to slow his strokes, which I knew meant he was close himself. Joy must have seen the same thing.\n\n\"Tanner, if you are coming, make sure it's a proper money shot. Pull out. Let them all see it.\" \n\nWith no further ado, he did so and I felt warmth spurting over my thighs. Tanner was absolutely rigid in his continuing orgasm and the room again broke into thunderous applause.\n\n\"Well done, team!\"  came Joy's voice. \"Stand up, both of you.\" \n\nWe allowed ourselves to be moved by the kuroko. I felt a warm cloth on my legs and groin, wiping off Tanner's semen. Some of it had splashed as far up as my boobs.\n\nMy hand was grasped, raised; a glass was placed in it. \n\n\"My! The Regent has sent you some champagne. That's quite rare. Enjoy for a moment. We'll be starting again soon.\" \n\nThe wine was chilled, precisely what Momma's little girl needed. I sipped it gratefully.\n\n\"OK, guys. Time to move on. It's going to be a standing 69 this time. Something unusual.\" \n\nFollowing McMann's directions, I let myself be guided onto some sort of knee-high dais. \n\n\"Lisa, keeping your knees straight, I want you to bend forward, all the way down until your chest touches your knees. Spread your legs a bit, too.\" \n\nObediently, I folded myself in half, wondering what was happening. Moving air cooled my damp pussy, open and exposed to all behind me. My hair cascaded down my back and over my neck to hang down below my head.",
        "The audience sounds slowly changed as the platform moved. I could feel a slight vibration from the turning. It was obvious that everybody around us would be able to see everything perfectly, at no more than a few feet distance.\n\nI felt Tanner being moved to stand right behind me. His loving hands moved to hold my hips. With him still on the ground and me standing so up high on the dais, his stomach was pressed against my calves. \n\n\"Tanner, her pussy is right in front of your mouth.\"  I felt his chin between my cheeks, moving down and around until his lips found my labia. His long tongue swept their length and I gasped in delight.\n\n\"Lisa, reach between your knees.\"  Tentatively, I reached out and discovered the head of his protruding cock.\n\nWhat an amazing position! Bent over and standing up high as I was, both our mouths were at the right height for each other's organs. \n\nWasting no time, I sucked his length into my mouth. The clapping and hoots of approval around us might have deafened me had I not been so focused on Tanner. Our mingled scents on his cock was exhilarating; I felt my arousal soaring again.\n\nThe angle was wrong for me to reach the supremely-sensitive underside of his head, but I my hands were free this time. Keeping one hand wrapped behind a knee to help me remain folded over, I ran the other up and down his shaft as far as I could reach. In response, he began to dart his tongue in and out of me, slowly at first, then faster. Even with my mouth full, my cries of pleasure began to echo through the room. I could hear somebody nearby laugh in response.\n\nUsing my free hand to pump his velvety skin, I popped his head in and out between my lips. That brought a few gasps from the spectators and a momentary pause from Tanner's efforts. I stopped each time it emerged to flick at his slit with the tip of my tongue, lightly but as fast as I could.\n\nA last drop of semen oozed into my mouth from his orgasm. I paused for a second as Tanner drove me closer and closer to my own. My nipples were throbbing as they pressed against my thighs and my head-down position seemed to amplify the sensation. I began to give wordless cries but tried to concentrate on his penis, sucking it as hard as I could while my tongue did its best on his crown. With my free hand I pulled gently on his ballsack, fingertips caressing the Boys inside.\n\nWithout warning, Tanner took one hand off my hips. A moment later, I felt a finger probing my rear entrance. With that, I exploded again into fireworks of pleasure, crying out loud in happiness. Sagging and almost boneless, if he hadn't held me up, I would have fallen. As it was, I dropped his cock and just wilted, panting.\n\nEnthusiastic applause from all sides showed we had impressed the 'patrons'.\n\n\"Excellent! They really like you guys!\"  came Joy's voice in my ear. \"Stand up now. Hold each other's hand, give a kiss and smile for the audience.\" \n\nI stood up and was guided down from whatever I'd been standing on. A gentle hand put my hand into Tanner's. He found my face and gave me a gentle, lingering kiss before we faced outwards. I did my best to smile brightly, but was still almost comatose after that last orgasm. \n\n\"OK, Lisa, from what I see, you need to rest. Tanner, this one is yours. Doggy, standing. Have at it, guys!\" \n\nGentle hands led me back to where I'd been standing, but the support was now much higher -- just below my waist-level. I was gently bent forward over it, my body almost melting into the soft leather. Its smell filled my nostrils and its smoothness cuddled my boobs.\n\nOne of Tanner's hands slid down my side to cup my butt cheek, the other followed. Sliding them along my flanks, he leaned over me, hugged me tightly and I smiled in contentment. The fact that 20 or more total strangers were watching Tanner and I in our display of love and desire had stopped being strange. On the contrary, the sense of pride within me was amazing -- pride at my body, pride at our skill, pride at my responsiveness to Tanner's loving touch. \n\n\"Stand up, Tanner, and spread your legs so everyone can see better. Time to start.\" \n\nA hand left my side as he stood up. In a moment, I felt his tip prodding between my legs and, a moment after that, his entering me in a long, loving push. I was wet enough that it felt almost effortless on his part.\n\nI felt him shift and he began a slow, full-length series of thrusts. I was too tired to do much of anything and was content to simply relax and let him do all the work.\n\nThe sounds of dining continued around us, cutlery rattling, liquids being poured. From time to time, a comment would be made from around the table, but McMann seemed content, giving us only minimal directions. I was more than happy, for I knew how much my boy liked doggie. The sensations building up in me were pretty good, too.\n\nAs I had expected, Tanner began to speed up, becoming more forceful. I lifted my body up off the platform on my elbows and felt my breasts beneath me brushing back and forth along the leather as Tanner plunged back and forth into me.\n\n\"Tanner, let's give them some more. Pull Lisa's head back a bit. Use her... hair.\" \n\nI felt his hands leave my body and collect my hair. One hand, holding it like a ponytail, pulled my head back; the other returned to stroking and kneading my ass. My body bent back up off the platform and knew my swinging boobs would now be visible to everyone. \n\n\"Excellent, Lisa! You've got the whole room staring at your tits. You guys are amazing!\" \n\nTanner was hammering, pounding into me now. I could hear his abdomen slapping against my ass, feel my skin rippling up my body at the impact. The smell of sex began to rise above that of food. I felt one of Tanner's hands reach around between my legs and a fingertip begin rotating over my clit. I gasped.\n\nJoy, perhaps sensing that the moment was approaching, spoke again. \"Last change before a rest, kids. Let go of her hair, Tanner.\" \n\nHe did and I sank back onto the platform in front of me, Tanner pounding harder than ever, his hand continuing to work my bud. I could feel yet another orgasm rapidly building within me. \n\n\"Lisa, reach your arms back to your hips. Tanner, take her hands in yours and pull her body back off the box. Don't stop doing her.\" \n\nI felt his hands grasp mine and my body arch back and upwards. His strong arms pulled me back hard against his stomach. His cock surged back and forth within my wetness as he lunged and I began to yelp with each stroke. Harder and harder, louder and louder, more and more shrill.\n\nTanner began to quiver within me for and instantly pulled out. I could feel his sperm jetting across my sex, bum and back. His cumming had launched my own and, even with my pussy now deserted, I felt a magnificent, round orgasm run from head to toes.\n\nThe applause was remarkable.\n\nJoy's voice came to me through the ear bud. \"Good one! Tanner, let her down. You can rest on her for a moment if you wish.\" \n\nHe did -- and I certainly wanted him to. In a second, we were resting on the box in front of me. I could feel his wet manhood pressing against one of my cheeks, slowly softening.\n\n\"Ladies and gentlemen, patrons all,\" McMann's voice announced to the room, \"our performers will now take a short break. Please enjoy the next course.\" \n\nGentle gloved hands lifted us, led us down off the platform and out into the hall. I could feel semen dripping off me as we walked. The sound of applause dropped off as the door closed behind us, but could still be heard as we were guided down the hall.\n\nThe lounge door closed behind us. \"You can take the lenses out now if you wish,\" Joy's voice came from beside me.\n\nNo sooner said than done - it had been a thoroughly exciting experience, but, still, an eerie one. And I had, in a way, been totally disconnected from my lover; I wanted, craved -- needed -- the reassurance of actually seeing him in person.\n\nHe was, of course, still Tanner once I could see again. His goofy grin was the first thing I saw and I moved in to hug him as tightly as I could.\n\n\"Still with me, Lise?\" he said, hugging back.\n\n\"More than ever, Tanner. More than ever. I love you so much!\" \n\nWe stood there in each other's arms, whispering the gentle post-coital cooings every couple knows. The handlers again sponged us off. After a moment, Joy handed us each a glass of sparkling water.\n\n\"You kids were great!\" she exclaimed. \"I think you're one of the best couples we've ever, um, presented.\n\n\"Now, you've got another...\" she looked at her wristwatch, \"nine minutes. Lisa, we'll touch up your makeup and brush your hair in a couple. Go pee if you need to.\"\n\nWhen I entered the Ladies', I was amazed at how I looked in the mirror. I paused, staring at my image. My hair was a mess and I was hardly surprised at that. My makeup was a bit smeared, but nothing major. What I found amazing was the expression on my face. \n\nI'd often read of the 'fresh-fucked' look women are supposed to be able to have, but I'd never really seen it before. Not even at The Circle, with its mass of writhing bodies. I'm not even sure how to describe it. \n\nMy eyes, I guess. My eyes glowed, with happiness, with satisfaction, with deep awareness of my powerful femininity. I saw eyes containing a very real female hunger, a willingness to satisfy and an almost predatory desire to be satisfied.\n\nMy smile, perhaps? It was a happy smile, in every way a contented smile. Even more, it was a knowing smile, the smile of a woman comfortable in her sex and comfortable in her having been used by her lover for ultimate pleasure. And - most certainly - one of having used her lover for her own carnal pleasure.\n\nI gave up thinking about it as Joy hurried in to fine-tune my appearance.\n\nBefore we left, Joy looked us over and nodded approvingly. \n\nHolding up a small, white, unlabelled spray bottle in front of Tanner, she said, \"Open your mouth, dear and lift your tongue.\" When he did so, she gave two short puffs of spray before handing it to one of the ever-present kuroko.  \"How's that?\"\n\nTanner's eyes opened, then opened wider as his organ began to grow and rise. \"Wow! What is that stuff?\" He looked down, amazed at his rigidity. Indeed, his cock was almost vibrating.\n\n\"A derivative of something else. One of our patrons is a biochemist. He hopes to have it on the market soon, after trials. In the meantime...\"\n\nThis time, her smile finished the sentence. \n\n.\n\nA minute later, clean, refreshed and with our contacts back in place, we were led back down the hall. The door opened to a murmur of dining-room noise and conversation, dying out instantly as we were led back inside. It was replaced by rising applause. Women's voices in particular giggled and made awed remarks at Tanners rampant manhood.\n\nOur handlers led us back up onto the platform and left us standing back-to-back again. \n\nI could sense the platform begin to turn. My excitement was no less now, but I was more sure of myself.\n\n\"We'll give the turntable another minute, guys, then I want you to go into some more standing foreplay. Whatever you two want. We'll do that for a minute, then move into a position. Nod if you understand.\" \n\nA minute later, we got the word. I started to turn towards my man, but his arms moved quickly to hold me around my waist and keep me still. Turning his body behind mine, I could feel his exposed length against the outside of one hip. His hands moved from my waist, sliding sensuously up my flanks to settle on my boobs.\n\n\"Ahh!\" a woman's voice remarked from one side. \"So sweet!\" She almost sounded jealous. I smiled, knowing she had much to be jealous of.\n\nTanner's hands swept over my stomach, grazed lightly over my sex before returning to my breasts. Strong fingers lifted, mounded and played with them, loving thumbs played with my nipples. \n\nI sighed, felt a loving, demanding warmth between my legs. I wrapped one hand backwards, around one of his ass cheeks. With the other, I reached down to fondle the head of his penis, at the same time putting my head back on his shoulder and turning and lifting it in hopes of a kiss.\n\nI was not disappointed. Tanner's lips locked onto mine. As our hands stimulated and teased each other, our kisses grew stronger, deeper. Wetness oozed onto my thighs and I felt a drop of wetness from his cock.\n\nI tried to alter my grip on him, but the angle just wasn't right, so I resorted to kneading his cockhead and felt his kisses grow more demanding.\n\nI became aware that the room was almost hushed and imagined that every pair of eyes was riveted to our bodies.\n\n\"OK, team, we're about to shift into cowgirl. In three, in two, in one, shift.\" \n\nI've always liked cowgirl because it gives me so much control; I didn't need to fake my smile as Tanner took me by the hand and led my downwards.\n\nMy hands traced along his body to his groin, found his cock. He was so stiff that I had to work to bend it down so I could mount him. Holding him upright, I knelt on either side and sank down onto him. After all that had happened, he still felt amazing. I felt so privileged to be so filled in every way.\n\nTanner and I both gave a deep sigh, almost as if we had rehearsed it. I felt his hands move from my waist up to my chest to grasp my boobs. I leaned forward and, supporting my weight on hands resting on his chest, began to roll my hips on his cock.\n\nI heard an uncharacteristic, \"Go, girl!\" from an audience voice in front of me. I couldn't tell if it were a man or a woman -- alto or tenor, you call it. Beneath me I could feel Tanner begin to buck upwards with his hips and tried to sync our movements.\n\nHe tweaked my nipples with his fingers and I gave a surprised squeal, which brought more applause.\n\nI adjusted my movements to bring more attention to my G-spot and increased the pace. I was beginning to feel a looming tension building within me. My hair was hanging down over my head and shoulders. \n\n\"Lisa, dear,\"  came Joy's voice in my ear, \"you kids are just amazing, but your hair is hiding the view. Sit 'way back on him and swing your legs forward. Rest your bum on his pelvis.\" \n\nIt seemed odd, but it made sense once I'd shifted my feet around to rest under his arms. His hands held my bum and I could support my body on my arms behind my back. \n\nI was in effect almost sitting backwards. My hair, out of the way now, cascaded backwards and my head naturally tilted back, my face aimed at the ceiling. As I bounced up and down on Tanner, my boobs bounced along in the same rhythm. It brought a low round of cheers from our audience.\n\nTanner was in no position to thrust very hard, but he kept moving his hips in tune with my motions. I was near to cumming when I again heard Joy.\n\n\"OK, time for a change. Straight stand-up sex, kids. When I call it, I want you to stand up... facing each other. Tanner, put your arms under her arms and lift her up. Lisa, it's up to you to find him and get him inside you. Nod if that. makes sense.\" \n\nI nodded.\n\n\"Good. Once he's in you, Lisa, I want you to hold him around the neck. Tanner, you hold Lisa under the armpits, above the waist. \n\n\"Lisa, listen carefully. Once that's all done, I want you to hook your knees over Tanner's arms. Nod if you understand.\" \n\nI nodded again.\n\n\"OK. In 3, in 2, in 1 -- shift!\" \n\nI got to my feet and helped Tanner regain his. When I pulled him against me, I could feel his hardness between us.\n\nI put my arms around his neck and gave a little jump, pulling my legs as high up around his torso as I could. After a bit of strain, I could feel his forearms under my knees and his hands on my back. I knew I was secure with him supporting my weight.\n\nLetting go with one hand, I was able to reach down and find his cock. Lowering myself down, I let him slide inside me. It was an amazing feeling. \n\nThe position was one we could not hold for long, even as strong as Tanner was. That said, the tension was amazing -- every muscle in both our bodies had to be focused on holding me in place and sliding me up and down on his cock. Like bondage, the strain boosted our arousal. Well, it certainly did mine.\n\nI leaned backwards and continued to bob up and down along his length, my hair swaying behind me. I could feel it brush against my bum over and over. Leaning back, my boobs shifted from side to side with each bounce.\n\nTanner shifted from time to time to maintain his balance. Blind as he was, it couldn't have been easy, but he never came close to fumbling or dropping me. Even when I felt a small gloved hand steady me once, the boy never stopped shifting his hips and lifting me up and down with his arms.\n\nI realized that I'd been crying out, sobs of wordless arousal. Tanner gave a stage whisper, \"Hold my neck!\" and I tightened my grip. Knowing I was secure, I felt him lift me even higher, high enough that he could lean forward and reach my breasts with his mouth.\n\nOne gentle nip with his teeth was all it took. I came like fireworks, screaming my happiness.\n\nAgain, applause echoed through the room.\n\n\"Excellent, guys! Let her down, Tanner.\" \n\nWhen he let me down, I was almost unconscious. There was to be no rest however, as McMann's next instructions hissed in my ear.\n\n\"Tanner, you did that so well that I think we should try something similar. Nod if you're up for some more stand-up loving.\" \n\nHe must have nodded, for she continued. \"Wheelbarrow time, troops.\" \n\nI heard our handling team shifting something to in front of me.\n\n\"Lisa, bend forward onto the box in front of you.\" \n\nLeaning forward, I found it with my hands and bending from the waist, rested on my elbows and head. \n\nWithout waiting for further direction, I felt Tanner grasp my hips, pause for a moment and enter me. There was a shiver and applause and low remarks from our audience.\n\n\"Tanner, if you can, lower your hands to half-way down her thighs. I want you to lift Lisa up off the ground, but do it so her legs are pointing up towards the ceiling. Most of her weight will be on her arms.\" \n\nThere was a momentary pause while my boy digested this, then his loving hands slid down to grip me just above my knees. When he lifted, my legs naturally came up off the ground and my entire body from ankles to head was in a straight line, with my heels actually touching his shoulders. \n\nThe applause surged suddenly. I knew it would be tough on Tanner, but he had the back and shoulders for it and much of my weight was being supported on my elbows. For me, there was little enough to do but enjoy. Indeed, I would have been hard-put to do anything but wiggle my toes up by his head.\n\nWhich I did. Several people laughed. One woman in particular seemed to almost choke with her amusement. \n\nTanner, under no such constraints, began to thrust into me with long, strong, steady strokes. My boobs swayed back and forth below me each time our hips met. \n\nI doubted he would cum with this, but, especially with my head down again, I knew I would. I could feel it building in my clit.\n\n\"Tanner, if you can dear, spread your legs a little wider. I want the patrons behind you to get a better view.\" \n\nI could feel him shift, still pounding me, and it must have worked, for applause followed us around behind him as the platform slowly turned.\n\nFor some reason, I felt absolutely liberated. Even blindfolded, even knowing I was being watched by dozens of people just feet away, I still felt amazing. Never before had so many people admired me. That they were appreciating perhaps the most intimate thing in my life was, for a reason I couldn't quite understand, enormously exhilarating.\n\nJoy must have been listening to my increasingly-louder grunts and shriller cries, for she again spoke in my ear.",
        "\"You two are awesome! Look, dinner is almost finished. Lisa, when you are about to have your orgasm, I want you to reach back and grab Tanner's wrists. \n\n\"Tanner, when she does that, you grab her wrists and lift her body off the box in front of her. You'll probably have to lean back and maybe squat just a little, but the idea is to have you holding Lisa's entire weight off the ground. \n\n\"Lisa, keep your legs straight in line with your body, like you're a superhero flying through the air. Tanner can hold you. Just enjoy yourself.\" \n\nI nodded, then concentrated on the fire in my body being stoked by Tanner's pulsing cock moving in and out of my pussy. I let my voice get louder and louder. Finally, with a super orgasm growing within me, I reached back, found his wrists. \n\nInstantly, his hands locked onto my own and I felt him pulling my body back and up. A small scraping sound told me that the box was gone and that we two were now the completely-visible centerpiece for the entire room.\n\nTanner's pulling me back locked us firmly together. I shouted, almost whinnied as a burning orgasm -- my sixth? I couldn't count anymore -- boomed through my entire body. It was deeper, more all-encompassing than anything I'd ever felt before. My boobs were on fire. My thighs were shouting their enjoyment. My bloody eyelids were having an orgasm.\n\n\"Lisa, love, lift your head. I want you to look forward.\" \n\nDespite the orgasm washing around me, I did my best. I simply couldn't open my eyes however. Below me, Tanner's trembling efforts to support us both in a rigid position caused my breasts to shake just a little, adding to both my orgasm and the applause surrounding us. I could feel my hair slip and flow around my head, leaving my gloriously happy face exposed again. \n\nIt was ectasy.\n\n\n\n\"Try to hold that position for another full turn, kids. If you can't, OK, but try.\" \n\nI certainly wasn't going anywhere. It was an amazing orgasm - one of the best I could remember. Had Tanner not been holding me so strongly, I would have collapsed around his feet.\n\nI could tell the platform was moving by the steady change in the applause around us. One person was banging their palm loudly onto the table. Several were clinking wine glasses with spoons or something. There was no doubt that they were well-pleased.\n\n\n\n\"OK, Tanner -- help Lisa stand up. Hold hands and smile for the patrons, kids.\" \n\nI felt my legs falling and my head rising. In a second, I was standing as upright as I could. \n\nThe applause was still rising.\n\n\"Wait.\"  Joy's voice surprised me. \"Tanner, did you cum?\"\n\nThere was short pause.\n\n\"No? OK, team -- an encore. We'll make it easy for Tanner this time. Tanner, lie down on your back. Lisa, I know you're tired, dear, but we need a quick blowjob.\"\n\nI was dead tired, so very tired, but nodded.\n\n\"Lisa, Tanner is on a box right in front of you, thigh-high on you, high enough that everybody will be able to see you working that magnificent thing of his. Don't be subtle about this -- just fire that cannon as quick as you can.\" \n\nI nodded in agreement. Soft hands guided me down. I reached out and felt Tanner's knees with my hands and knelt between his knees.\n\nI slid my hands up his thighs, back and forth, then moved higher to find his cock.\n\n\"Spread your legs, Lisa.\"  \n\nJoy's voice was kind, but direct. I figured she must have had experience in the porn industry.\n\nWell, there was nothing fancy about this one. Guided by my hands, I leaned forward and gave a broad lick from his Lisa-flavored base to his cum-flavored rim. And again. And again.\n\nThere was a polite but enthusiastic round of applause from our unseen audience just feet away.\n\nI switched to licking under his sack, then drew one ball at a time into my mouth as my hand stroked and lightly pumped his shaft. There was a masculine grunt- approval? amusement? -- from one side. Tanner tensed under me. His thigh muscled grew harder and I heard him moan with pleasure.\n\n\"Pull your hair out of the way, dear. Over your back and shoulders if you can.\"\n\nI let go of his shaft with the one hand while still rolling his balls with the other. I flicked my hair back and resumed my attention to The Boys.\n\nI reached down between my legs with one hand and wiped my fingers on my pussy for lube. Continuing to work his sack, I brought the hand up to smear the slickness on Tanner's head. I began massaging the spongy crown with my thumb, around and around. \n\nTanner's bum lifted off the box and I heard a couple of women laughing. Several in the audience applauded.\n\nRemembering Joy's instructions, I turned to giving Tanner what he wanted and deserved so much. I took as much of him into my mouth as I could and twirled my tongue around its head, meanwhile pumping the skin on his shaft as quickly as I could. \n\nIn a minute or so, I could feel him tensing up. His bum rising off the box again in front of me. Pulling back, I began the fastest handjob I could manage with one hand. I licked the forefinger of the other hand to get it good and wet before reaching down and sliding it into his rosebud.\n\nThe angle was wrong and I couldn't reach his prostate. It hardly mattered. \n\nEven after all he had been through, the jets of semen rocketing out of his cock must have been amazing. The crowd broke out into loud applause. Joy's voice in my ear was full of praise.\n\nShe let us relax for a minute, then directed us to stand up, holding hands. I could feel warm, damp cloths cleaning Tanner's spunk off my hands and forearms.\n\n\"Ladies and gentlemen, patrons all, please show your appreciation for Suzanne and Dwayne.\"\n\nThe applause bounced up to a level loud enough that it was hard to hear Joy's directions as we were led of the room. All the way down the hall, we could hear it continue.\n\nI heard Tanner remark in a low voice,\" Not sure I'm up for an encore, Lise.\" I hugged him as we walked.\n\nSeconds later we were back in the lounge. We took our lenses and earpieces out and handed them to the black-clad handlers. They bowed - so formal! - and left.\n\nDown the hall, we could still hear muted applause.\n\nSeconds later, McMann entered through the same door. \n\n\"You kids were great! The patrons... are thrilled. Are you two OK? Would you like something to eat? Something to drink?\"\n\nWe were both too tired to eat much, but agreed on a bottle of wine and some nibblies. Joy told us to clean up if we wanted to and that she would see to it, along with our payment.\n\nIt was pretty clear that we would have the place to ourselves, so I led Tanner into the female change room. There was makeup remover and we both needed it, helping each other get clean. Once that was done, we went into the shower room, big enough for six. \n\nWe weren't up for more sex by then. Heck, I could barely walk. But it was a loving time, standing in each other's arms under the warm water. From time to time, he kissed my neck and I ran a slow hand up and down his back.\n\nTanner eventually helped me dry my hair, something I have always treasured. When we finally emerged, Jamie was sitting in front of the television screen. He barely glanced at our nudity.\n\n\"I'll tell Ms McMann you're out,\" he said.\n\nThere was a bottle of good red wine on the table now and a large cheese tray. We nibbled as we dressed. From time to time, we just looked at each other in amazement. Had this all really happened?\n\nIt wasn't long before Joy came in, holding a thick envelope. When she handed it to me, it turned out to hold a lot more than the $2,500 we'd signed on for. \n\n\"There are your expenses,\" she smiled. \"And I am authorized to pay a bonus if the... performers do a good job, which you two certainly did.\n\n\"Also,\" she grinned, \"the Regent was sufficiently impressed that she asked for donations from the patrons -- call it a Christmas present.\"\n\nIt turned out to be over $8,000. To say we were thrilled would be an understatement.\n\n\"It's been fun, kids,\" she said as she got to her feet. \"I have a feeling you two are going to do well in life.\"\n\nWith that, she simply turned and walked out. \n\nAn hour later, Jamie dropped us off at the same coffee shop. It was 'way late and he offered to take us somewhere else, but we lived close by.\n\nWe never saw he or Joy McMann again. \n\n.\n\nSo, you tell me.\n\nI got paid a lot of cash for wild sex. In public. For an invisible audience, people we never saw, couldn't identify and, for all I know, live next door to us today, people who point us out to each other as we pass.\n\nIt's been years since that Christmas performance and I still wonder...\n\nAre porn actors still whores if they're screwing somebody they love?\n\nAre exhibitionists still perverts if those seeing them want to watch?\n\nAre it still kink to be a voyeur if the couple knows you are watching?\n\n.\n\nAll I know is that it was a truly unique experience.\n\nAnd, yeah, I didn't walk straight for a week."
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "blindfold",
        "public",
        "public sex",
        "public nudity",
        "performance",
        "audience"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/for-your-dining-pleasure-1"
}