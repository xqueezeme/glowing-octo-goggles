{
    "title": "Goin' Back Home Again",
    "pages": [
        "Here we go, another submission in the LW category. I truly appreciate all of the thoughtful comments to my last posting here, and I decided to give it one more try. I am warning all of you now, though, that this story is woefully deficient in several categories. First, there's almost no sex here. Second, no wives are going to die in the writing of this story, so don't look for some sort of retribution. Third, there's almost nothing here about the wife's infidelity. Finally, this is another long story. (I would've broken it up into two chapters, but all I envisioned was being skewered on one chapter or another, and I'd rather suffer the humiliation of negative comments all at once, thank you.)\n\nThis story is an attempt at telling about how a famous person goes through a ton of shit at the same time, all of it beginning with learning about his wife's infidelity. The tone is neither serious nor overly analytical. Rather, while not funny, it is at least lighthearted. Some will say the husband is a wimp, but I think his reactions are honest and realistic. And unfortunately, there's going to be a happy ending here, but probably not one you'll see coming until about half way through. Even there, I think you'll still be surprised by how things play out. In short, there's something here for everyone and nothing here for everyone all at the same time. Just another attempt to stay fresh and original in this category.\n\nThus, HarryinVa will hate it, but I'd still appreciate his, and everyone else's, thoughts.\n\nCHAPTER ONE\n\nSwear to God, I'll never again hear \"Long Cool Woman in a Black Dress\" without thinking about that rocking chair. Songs do that to people: We associate certain songs with certain times in our past. You know, like how every time I hear Oasis belt out \"Wonderwall\" in their nasally, terribly British accents, I think about Jenny Leyden and her wonderful, perky tits. Why? Because \"Wonderwall\" was the theme song of our Junior Prom, Jenny was my date, and she did more for that slinky, low-cut little number than any other girl in the gym. And when the DJ played \"Wonderwall,\" she mashed them eighth and ninth wonders of the world against my chest, and all I could think about was getting my hands and lips on them later in the evening. I didn't, but I still think about them every time I hear that song.\n\nBut back to the rocking chair. You see, it was a Maloof, made by old Sam Maloof before he died, and it set my old man back twenty grand more than twenty years ago. For a rocking chair, you say? Hell yes. But it's more than a rocking chair; it's a goddamned, full-blown work of art in claro walnut, all hand sculpted with flowing joinery and comfortable as hell to sit in. Oh, and it was about the only thing worth a shit that rotten bastard of a father left me, but I still liked it.\n\nSo anyway, I walked into my Brentwood mansion and heard the stereo blasting. The chiming, echo-laden guitar arpeggios at the beginning switched to pulsing power chords that led into the vocals. Great arrangement, which is more difficult than most people realize. Not exactly my cup of tea, mind you, but still a great arrangement. I paused and listened to the lead vocals, heavy reverb on the voice making it hard to make out the lyrics.\n\nSaturday night I was downtown/Workin' for the FBI\n\nI followed the music, tossing my jacket across the back of the sofa before turning into the family room at the back. It had been a long day in the agent's office trying to negotiate the terms of the new record deal, and all I wanted was to sit in my chair, drink a beer, and maybe see if Tara was in the mood for a change. She always got bitchy just before it was time to start shooting the new season, and we hadn't made the two-backed monster in almost two weeks.\n\nI strolled into the family room and froze. Tara was in the mood, all right. And there she was, in my Maloof rocking chair. Naked. Doing the dirty. And under her was my band mate Carl, who was both in the Maloof rocker and in Tara. He was in my favorite chair and my formerly-favorite wife, and I wasn't sure which pissed me off more.\n\nA streaming barrage of thoughts pounded my brain. Why's she fucking him? Holy shit, he's fucking her to the pulse of the song; thank God it's not gangster rap or he'd blow out his back. And he's using the low-slung, ergonomically-designed seat and lower lumbar support to brace his feet on the floor and his back against the chair to give him more leverage.\n\nThen, I'll admit, my thoughts got a little goofy. Why had I never thought of this? I wonder if old Sam Maloof ever tested his chairs like this? Finally, if they break that fucking chair\u2013excuse the pun\u2013I'll break their goddamned necks.\n\nI must've stood there for about a minute and a half, because The Hollies were in the middle of the instrumental break when Carl finally turned his glazed eyes to me. He froze and tried to scramble out of the chair. I just stood there while he tried to extricate himself from the chair and from Tara. I was frozen and had no clue what to do.\n\nI mean really, what do you do? I suppose I could've gone after them, but that would've just landed us all on the covers of every newspaper, tabloid, and crappy magazine for the next year. Also, I couldn't afford to hurt my hands\u2013or Carl, for that matter\u2013or the band would be shit out of luck in the middle of our new record negotiations.\n\nSo I did nothing. Just turned and walked away toward the bedroom at the far end of the hallway.\n\nI was buttoning a fresh shirt when I saw Tara's reflection in the mirror.\n\n\"Where you going?\" she said, her eyes avoiding mine.\n\nI tried to smile, but failed. Instead, I just stared at her for a minute.\n\nTara Boyd, teen idol now turned glamorous and beautiful star of one of the highest rated shows in television history. My wife, my life. Now, apparently, neither.\n\n\"We didn't mean for it to happen,\" she said, sitting on the bed and watching me rummage through my cavernous closet.\n\nI finally located a big duffel bag and started stuffing it with shoes, jeans, slacks, and shirts. Once I had enough, I dragged the duffel back into the bedroom and to my dresser, where I started scooping my underwear and socks into the little remaining room left.\n\n\"That's it?\" Tara said. \"You're not even going to say anything?\"\n\nI ignored her. I'd never given much thought about how I would feel if something like this happened to me, but the few times I had thought about it I was sure I'd blow a gasket. Strangely, though, I didn't. To the contrary, I just felt tired, beaten down. The wind had left my sails, and I was suddenly and inexplicably adrift.\n\n\"Goddammit, Nick, say something,\" she said, yelling at me now.\n\n\"What the fuck do you want me to say?\" I fumed, pushing the duffel bag to the floor and turning on her. \"Is there a handbook somewhere on how to deal with finding out\u2013totally out of fucking left field\u2013that one of your oldest friends and your wife are banging each other behind your back, Tara? Huh? I mean, what should I say? What do you want me to say? Christ, you could've left some hints that this was going on, gotten me at least a little prepared to walk in on it, ya know?\"\n\nAnd that was it, all of my energy was gone again and I just wanted to crawl off somewhere and die. So I dragged my duffel bag past Tara and down the hall, stopping in the bathroom to gather a toothbrush and some shaving gear and other such crap. All packed, I toted the bag to the garage, threw it in my Escalade, and returned to the house.\n\nCarl was sitting in the rocking chair lacing his shoes when I walked in.\n\n\"Look, Nick,\" he started, but I didn't want to hear it.\n\n\"I just want my chair,\" I said. He jumped from it, scrambling out of my way. I picked up the chair and nodded toward nine Grammy awards and a stack of framed platinum, multi-platinum, and diamond albums resting in a display case. \"You and Tara get my stuff boxed up, okay?\"\n\n\"Where you going?\" he said. \"Nick, you're the point man on the negotiations, man. You're not taking off, are you?\"\n\n\"Have it all shipped to my mom's house,\" I continued, ignoring him. \"I'll make the arrangements from there.\"\n\nI trudged the chair to the Escalade, laid it in the back next to a couple of guitars already stacked there from a few days before, and went to get in the vehicle.\n\n\"Nick,\" Carl pleaded, \"please man, let me explain.\"\n\nI dropped my head, counting to ten.\n\n\"We didn't mean for this to happen,\" he plodded on. \"I mean, you were supposed to be in negotiations all day, man.\"\n\nI glared at this. \"So what was it you didn't mean to happen? You fucking her or me catching you?\"\n\nI didn't wait for his answer, preferring to hop in my ride and get the hell out of there as quickly as possible.\n\nCHAPTER TWO\n\nI was now three hours, and more than two hundred fifty miles, west of the City of Angels. May the whole rotten shit hole fall into the ocean. Okay, not all of it, just Brentwood.\n\n\"Where we going?\" he said. His voice was gruff, the product of forty years of a three-pack-a-day habit.\n\n\"Home,\" I said, not bothering to look at him.\n\n\"Home in Brentwood?\"\n\n\"Home in home,\" I said. \"Home in Grant City.\"\n\n\"But you don't live there anymore,\" he said.\n\n\"Yeah, well, shit happens,\" I said. \"Things change.\"\n\n\"So that's it?\" he chuckled. \"Just gonna cut and run? Give up on her?\"\n\nI didn't say anything, and neither did he for another thirty miles or so.\n\n\"They're all like that, you know,\" he finally intoned.\n\n\"Not all of them,\" I replied.\n\n\"No,\" he agreed, \"just the ones you pick out.\"\n\nI nodded. He was right. \"Why do you suppose that's so?\"\n\nHe laughed. It was a deep, raspy laugh that ended in a rattling cough. \"Because you're a shallow prick is why.\"\n\n\"Well congratulations,\" I said. \"Looks like the apple didn't fall far from the tree.\"\n\n\"Fuck you.\"\n\nI sighed. This was getting us nowhere, and I knew it would soon lead to another fight and he'd disappear. Strangely, I wanted his company for awhile.\n\nWe were silent for another ten miles or so before I turned to look at him. He looked the same as always. Thick gray hair with a thick beard, all of it slightly, but just slightly, in need of a trim and a comb; thick, heavy features; big chest and arms bulging the sleeves of his flannel shirt. I could almost reach over and touch him, but I knew my hand would only pass through. Still, I could always catch a faint whiff of him, a mixture of cigarette smoke and Lagerfeld cologne.\n\n\"Y'know,\" he finally said, \"you should've kicked his ass.\"\n\n\"And what would that have accomplished?\"\n\n\"He'd know not to do it again.\"\n\n\"Oh for Chrissake, Walter,\" I said. \"He knew not to do it in the first place. And so did she. But it didn't stop either of them, did it?\"\n\nWalter shrugged. \"Yeah, I guess so. But you'd feel better about it instead of just driving off with your tail between your legs.\"\n\n\"Yeah,\" I shot back. \"Then I'd have hands too goddamned swollen to play, probably spend the night with a bunch of cross dressers from West Hollywood, the tabloids would be crawlin' up our ass, and they'd have still fucked each other silly in my goddamned chair.\"\n\n\"My chair,\" he said. \"I bought it.\"\n\n\"Yeah, but you're dead now,\" I said. \"So now it's mine.\"\n\nHe turned and looked out the window, watching the nighttime desert pass us by at eighty miles an hour.\n\n\"Guess you're right,\" he said. \"Still, I'd have kicked his ass.\"\n\nCHAPTER THREE\n\nWe were coming up on the merge from Interstate 15 onto Interstate 70 when my cell phone rang. It was almost eleven, and I'd been on the road for almost eight hours. The cell phone stirred me from the monotony, and I realized I was getting tired.\n\nGlancing at the display, I decided to answer.\n\n\"Hello, John,\" I said to our lead guitarist.\n\n\"Nick, where the fuck are you?\" he said. He was shouting, and I could hear the loud din of some nightclub in the background.\n\n\"Utah,\" I said.\n\n\"What the fuck are you doing in Utah?\"\n\n\"I'm driving.\"\n\nI heard John shouting to someone else, then he was back on the phone. \"Nick, you need to get back here. You're our point man, dude, and we're close to a major deal here.\"\n\n\"Let Ethan handle it,\" I replied. Ethan Rose was our manager, and he sure as hell made enough\u2013and had a big enough stake in the outcome\u2013to take care of this without our help.\n\n\"Dude,\" John whined, \"you know he can't do it without you. They want to know what we've got coming up, what's in the hopper. Ethan can't take care of that. Only you can, man.\"\n\n\"Let me think about it,\" I said, and flipped the phone closed before turning it off.\n\nWe'd formed LeadFoot when I was a Sophomore at Grant City Community High School. There were four of us: Teddy Cooper on lead guitar, Carl Simpson on bass, Vince Diamond on drums, and me on rhythm guitar and lead vocals. The other three harmonized, and we had kind of an Eagles sound.\n\nHalf way through our Junior year, Teddy discovered alternative country-rock. I'll never forget the day I dropped by his place and walked into his bedroom. Twin vocal harmonies were singing over a strumming acoustic guitar and twangy, country-like slide leads.\n\n\"Who's this?\" I said, loving it the moment I heard it.\n\n\"Jayhawks,\" he said, his eyes never leaving the liner notes.\n\n\"This is awesome,\" I commented. He just nodded. For the next three hours we listened to Hollywood Town Hall over and over again. To this day, I think of that afternoon every time I hear \"Two Angels.\"\n\nThe very next day, Teddy and I started writing our first song. It came surprisingly fast\u2013at least the music did. The lyrics weren't so easy. Then Teddy decided to start reading more serious shit, poetry and Shakespeare and The Bible and all manner of crap. It inspired him, he said, and he was right. Pretty soon we were churning out lyrics left and right and the music to go with it. Then I started reading all of that stuff, too. Pretty soon, Teddy went back to concentrating on the music and only occasionally helping out with the lyrics.\n\nThe summer after high school graduation, LeadFoot won the talent contest at the Lincoln County Fair, which got us a trip to the Illinois State Fair competition. Down there, we were surrounded by ballet dancers and jugglers and magicians and a few fledgling musicians, and we jammed three songs with tight harmonies.\n\nWhen it was all over, there was no doubt the crowd was on our side. Let's get something straight: When fifty year-old farmers and their wives are stomping to the tunes of a bunch of teenagers, you're onto something. There were audible boos throughout the crowd when our second-place finish was announced behind some cutesy little tap-dancing Shirley Temple wannabe.\n\nIn any event, after the show we were approached by some thirty something dude in slacks, hair mousse, and glittering jewelry. His name was Ethan Rose, and he was a talent scout for Harmony Records. They were looking for something different, he said, and wondered if we'd be interested in meeting with some people. We were, and the next three weeks before our college classes started were spent auditioning in Nashville and Memphis. A month later, well into our first semesters at our various colleges, we were contacted by Ethan with a record deal.\n\nThat's when the problems started. Teddy decided he didn't want to stay in the band. He figured we'd be whores for the record industry, sell out for the money. I told him that was bullshit, which it was. Teddy was really just afraid of failure on the road, and he didn't want to risk the good thing he had going. He was always the smartest of the lot, and he was on full academic scholarship. He didn't want to be a superstar, he wanted to be a teacher. So he quit, and Ethan set about finding us a replacement on lead guitar.\n\nOver Christmas Break, Carl, Vince, and I flew into Memphis to start practicing and to audition a new lead guitarist. With Ethan's help\u2013and the record company's prodding\u2013we settled on the first choice, which was John Bouma.\n\nJohn was four years older than the rest of us, but boy could he play guitar. He'd been a studio musician for the past three years, some kind of teenage prodigy looking for a good fit, and the record company thought he'd slide right into the LeadFoot sound. They were right. It helped that he also had a nice tenor voice and could help me with the songwriting chores. He sucked in the lyrics department, though, which fell completely on my shoulders. Carl and Vince were happy to just play their instruments and sing when told.\n\nYou know the rest. Our first album, Somewhere Down Highway 66, went multi-platinum. Then we beat the sophomore jinx with Plains States, our first and, to date, only diamond platinum album with more than thirteen million copies sold. A few since have come close, but we've basically been riding the wave of our first two efforts for the past six years.\n\nSo now we're in the middle of negotiating our new record deal. Harmony had long since sold our contract, and Columbia wanted a five-record deal. We were bankable, but they wanted some guarantees that we weren't going to fizzle out on them halfway through the deal. That's where I came in as point man. The band needed to prove we had a solid stockpile of songs laying around that would keep us going for awhile, and I was the logical choice to make that point.\n\nThe problem was that we didn't have much of a stockpile of good songs. Sure, we had a bunch of throwaways out there, and just putting our name on them would probably sell a few million copies for at least the first few albums. We were going stale, though, and I knew it.\n\nThe rest of the guys, Ethan included, didn't want to hear this, though. Oh no, they all chirped, just sell them on it. We cash in on this one and we're all set big time. Unfortunately, Columbia saw the stockpile for what it was, and they were driving a harder bargain than any of us had anticipated.\n\nSo there I was, trying to save the band, get them all more bags of cash, and keep them surrounded by their adoring fans who blew them before, during, and after shows. And what kind of thanks do I get for my efforts? I get them constantly harping on my ass and Carl shagging my wife.\n\nSome thanks.\n\nCHAPTER FOUR\n\nBy two o'clock Wednesday afternoon, I had been on the road for nearly twenty-two hours, and the always exciting Nebraska scenery had me nodding off behind the wheel. (Bruce Springsteen wrote a whole goddamned album named after this God forsaken sea of flatness? I always knew he was amazing, but this, my first drive through Nebraska, convinced me he should be canonized.) Not wanting to risk any more, I pulled off the interstate in Grand Island and checked into a Holiday Inn.\n\nAfter checking into the hotel, I dragged my duffel to my room, plugged in my phone to recharge, cranked up the air conditioning, and crashed onto the bed. I'm sure I was asleep before my head hit the pillow, and my dreams were long and troubled. They all featured Tara in various roles, few of them good.\n\nIn the most vivid dream, Tara and I were in our honeymoon suite in Nice, the Mediterranean a glittering sea of azure outside our windows. She was on top, riding me frantically, bucking in orgasms and screaming my praises. Then she leaned into me and sucked on my earlobe. \"Surprise,\" she said.\n\nThen I felt the bed shift and heard her grunt, and I felt hairy legs outside of mine.\n\n\"Oh my God,\" she groaned. \"I'm so full, Nick.\"\n\nI tried to look over her shoulder and see who was behind her, but she kept my shoulders pinned to the mattress and started bucking with the new thrusting.\n\n\"Don't quit on me,\" she pleaded as my peter started to soften inside her.\n\n\"Over here,\" a voice said from the side, and she turned her head and took another cock into her mouth. I couldn't see around her head or the huge rod pistoning back and forth into her mouth, but I recognized the voice as Vince.",
        "\"C'mon, man,\" I heard John say in the background. \"You gotta keep it going, Nick. Plough her, dude. You get the job done or I will.\"\n\n\"Yeah, man,\" I heard Carl say from behind her, \"don't let us down again.\"\n\nTara's face was a mask of lust, and she popped the cock out of her mouth and reached for her ringing cell phone. \"Ethan,\" she squealed in delight.\n\nThen she turned to face me as she continued. \"Yeah, you might as well come over. Nick's not as into it as we thought he'd be, and I have a hole that's going to be open pretty soon.\"\n\nShe clicked the phone shut, but it began ringing again. And again and again and again.\n\nThat's where I woke up. I was shivering as the air conditioner cooled the sweat drenching my face and shirt. Shaking the cobwebs, and the still vivid images, from my head, I reached for the cell phone and looked at the read out.\n\n\"Hello, Ethan,\" I said.\n\n\"Jesus H. Christ,\" he said, \"where the fuck are you, Nick?\"\n\nI wasn't in the mood for anymore of this shit. \"I'm not coming back for awhile, Ethan,\" I said. \"You're going to have to take care of this on your own. I'll read it when I get time.\"\n\n\"But we can't do this without you. You know that.\"\n\n\"Just don't sign anything until I read it, okay?\" I continued.\n\nHe was silent for a minute.\n\n\"Nick,\" he said, speaking slowly, \"you saying what I think you're saying?\"\n\nI said nothing.\n\n\"Jesus, Nick, please tell me you're not really thinkin' about . . . you know . . . doing a runner on us.\"\n\n\"Just don't sign anything, Ethan. Got it?\"\n\n\"Come on, Nick, we'll get rid of the bastard before we risk losing you,\" he said. \"Bass players are a dime a dozen. Even those as good as Carl.\"\n\nShit, I thought. The cat was out of the bag already. No doubt this would be hitting the wires within days rather than weeks.\n\n\"We'll talk later,\" I said. \"Do the best you can, but don't sign anything unless I give the go ahead.\"\n\nI flipped the phone shut before he could say anything more.\n\nIt was dark outside now, and the bedside clock told me it was almost ten. I'd slept enough, so I decided to shower and clean up, get into some clean clothes, and get back on the road.\n\nBetween the landscape, the nightmares, and the phone call with Ethan, I couldn't get the hell out of Nebraska fast enough.\n\nCHAPTER FIVE\n\nThree and a half hours later, I was in Iowa.\n\n\"So you going to quit it all?\" Walter said. \"The band, the broads, the big bucks?\"\n\n\"I don't know,\" I said. And I didn't.\n\n\"But you're thinking about it.\"\n\nI nodded.\n\n\"Ethan was right, you know,\" he continued, staring straight ahead at the occasional pair of oncoming headlights. \"If you're too chickenshit to beat the hell out of him, let the band get rid of him. Why should you be the one running away? Then you'll have your band, your money, your fame, and, best of all, your revenge on Carl. I mean, where the hell's he going to go without you?\"\n\n\"Maybe I was going to quit anyway,\" I offered.\n\nHe snorted.\n\n\"Fuck you, Walter,\" I said. \"You remember what it was like, I know you do. You remember being on top of the world after those first few books, then letting it all slide as you got all caught up in the fame and glory of being famous and glorious.\"\n\nOoh, I thought, good lyrics. I filed the phrase away in my memory bank of throwaway lines.\n\nWalter was silent for an hour or so, and I was content to let him be and just concentrate on driving. Iowa was little better than Nebraska, but there was at least some roll to the land, which was getting more pronounced as we neared the Mississippi River.\n\n\"I got it back, you know,\" Walter said, interrupting my thoughts.\n\n\"I remember,\" I said. \"All too well.\"\n\n\"That wasn't why I left, Nick.\"\n\nI said nothing.\n\n\"It was already over long before I finally took off.\"\n\n\"I guess . . . what was her name? Trudy?\" He nodded, and I continued. \"Yeah, I guess Trudy just made it a little easier, huh?\"\n\n\"You're right,\" he said, staring at me. \"I was shit. Everyone knew it. I was like that little piss ant Capote. Wrote a few good things; became a celebrity; decided I liked being a celebrity more than I liked writing. But it was the celebrity that ruined it all, not Trudy.\"\n\n\"I don't really want to relive all of this, if you don't mind.\"\n\n\"That's not the point,\" Walter said. \"The point is, I got it back. My last three books were some of my best work ever, if not the absolute best.\"\n\n\"And all you had to do was abandon your family.\"\n\n\"Goddamnit!\" he thundered. \"I didn't abandon my family. Your mother and I were already done. And I never was much of a father to you, even when we were together.\"\n\nI laughed. \"You can say that again.\"\n\n\"Don't you see?\" he said. \"The celebrity, all them fancy dinners and Hollywood starlets and cameras and interviews, they ruined me. I lost my focus, and didn't even realize I'd lost it until my third book in a row missed the bestseller lists. I couldn't stay in Podunk, Nowheresville with you and your mom, and she sure as hell wasn't leaving. And by then I hadn't been much of a husband\u2013or a father, I'll give you that\u2013for too long to remember. Trudy grounded me again. She took me to the mountains, and I got it all back.\"\n\n\"So what're you saying? Dump my wife, move to the mountains, meditate a few hours a day and it'll all come back?\"\n\nHe sighed. \"You should dump your wife because she's a self-centered little tramp, not just to refocus your energies. And I warned you about her before you married her, remember?\"\n\nThat was our last conversation before he'd died in a rock climbing accident. And that was exactly what he'd said about her, too. I had slammed down the phone in disgust and not spoken to him again. He was dead a year later.\n\n\"Anyway,\" he continued, \"dumping her just sheds excess baggage, so it's more of a bonus that it allows you to refocus your energies.\"\n\n\"Is that what we were to you? Me and Mom? Excess baggage?\" My voice was low, but I've no doubt he heard the menace in my whisper.\n\n\"No, you dumbass. I was the baggage. You just ask her when you see her. Ask Carol. She'll confirm it. And I needed to do it for her\u2013and for you, believe it or not. Afterwards, wallowing in my misery, I promised not to let it all be for naught. I swore I'd become what I'd once been, and I shook the booze and the smokes and the women. Well, except Trudy . . . and then Susan. I settled into that cabin on the lake and started writing again, and it all came back. Not real fast at first, mind you, but I couldn't believe how soon I got it all back.\"\n\nHe was telling the truth. I knew that because I'd read all of his books, even the crappy ones. The first one after he and Mom divorced was about the disintegration of a family. Mom was the hero of the book, and the little boy\u2013presumably me\u2013was the sympathetic figure. The husband was the prick, and Walter had painted himself unflinchingly well. The fault had all been his in the book, and he'd painted only enough flaws into Mom and me to make us seem believable without being at all to blame.\n\n\"Okay,\" I said. \"So I dump the excess baggage. Get rid of Tara. You think that'll help? I mean, it's not as if the boys in the band are helping matters any, are they?\"\n\n\"So Ethan was right,\" he observed. \"You're thinking of quitting altogether, aren't you?\"\n\n\"I haven't decided,\" I said. \"It's just no fun anymore, you know?\"\n\nHe nodded.\n\n\"Here's your free advice from your old man,\" he said. \"You've got enough money, and God knows you've been busting your ass nonstop for the past ten years. You're lucky. Most people bust their asses for forty or fifty years and never get where you are. But you got lucky. So enjoy the luck.\"\n\n\"How do I do that?\"\n\n\"Simple,\" he said. \"You want to quit, then quit.\"\n\nI nodded.\n\n\"Just one thing, though,\" he continued. \"Make sure you have something to do with all of your spare time. Take it from someone who knows, okay? You get bored and you'll be hitting the Truman Capote circuit just like I did. And Nick?\"\n\nI turned and looked at him, waiting.\n\n\"There's nothing more tedious than some old has been telling everybody about how great they used to be. Even if they were great.\"\n\nCHAPTER SIX\n\nI was finally into Illinois, which I'll grant you is no more exciting than Iowa and only slightly more exciting than Nebraska, when my cell phone rang. I looked at the number and hesitated before flipping it open.\n\n\"Nick?\" she said. \"You there, baby?\"\n\nI sighed.\n\n\"Nick, please talk to me,\" she said.\n\n\"How long has it been going on, Tara?\" I said. Might as well make the first pitch a fastball.\n\n\"Let's not talk about that now,\" she said. Her voice was pouty. You know the sound, little girl whiney mixed with how dare you talk about anything but how wonderful I am.\n\n\"You wanted to talk, Tara,\" I said, \"and that's what I want to talk about.\"\n\n\"I don't want to talk about it over the phone,\" she said. \"I want to sit down, together, in the same room. Then we'll talk about it.\"\n\n\"But I don't want to sit down with you right now,\" I said.\n\n\"Where are you, Nick? I could come to you.\"\n\n\"I'm in Illinois,\" I replied.\n\n\"Your Mom's place?\"\n\nI looked at my GPS. \"I'll be there in a few hours.\"\n\n\"Jesus, Nick, that's . . . well, that's a long ways. Have you slept at all since you left?\" It was hard to tell if she actually gave a shit. After all, she was a pretty good actress, and she had two Emmys to show for it.\n\nI ignored her concern. \"I don't want you to come here,\" I said. \"I need some time to think things through.\"\n\n\"You can't take a break now, baby. You're in the middle of your new record deal. Carl and the guys are really worried.\"\n\n\"For fuck sake,\" I yelled into the phone. \"I catch you and Carl fucking and all you want to talk about is my obligations to the band? What about your fucking obligations to me? Can we talk about that for a second, Tara?\"\n\n\"Fuck you,\" she shot back. \"Grow the hell up, Nick. Jesus, you bang your groupies every chance you get, so what the hell is so wrong with me getting a little action on the side? It's not like you don't get me all you want.\"\n\n\"That's bullshit and you know it,\" I said. \"I haven't banged a groupie since our first tour. I didn't even know you then. And I haven't screwed anyone else, for that matter. Not since we first got together. Jesus, Tara, how many times do I have to tell you this?\"\n\n\"Well what about Tracy then?\" she accused, dropping the name of her slightly younger but still legal co-star. \"You remember those photos last year in the Enquirer, I know you do. You going to deny that now, too?\"\n\nI held my breath, trying to keep from blowing a vein then and there. \"We've been over that a hundred times,\" I said. \"Nothing happened. We ran into each other at a club, she was drunk, and some guys were harassing her. I just gave her a lift home. That's all.\"\n\n\"And I'll tell you for the hundredth time,\" she said. \"That's a goddamned lie, and you know it. She was falling all over you.\"\n\n\"She was falling down drunk,\" I said. \"You saw her legs buckling.\"\n\n\"Goddammit, Nick, just get the hell back here,\" she pleaded. She was crying now, and the tears sounded real. Crying on demand was her sole acting weakness.\n\n\"I'm sorry,\" I said. \"I can't do that right now. We'll talk later, okay?\"\n\n\"Don't hang up on me,\" she cried out. I did anyway, powering off the cell phone after I did so.\n\nWe met backstage at the We The People Festival. LeadFoot was the second to last act of the Festival, leading into about the nineteenth Eagles swear-to-God-this-is-our-last-reunion tour, and Tara was the celebrity du jour tasked with introducing us. That was five years ago, and we were both at the top of our games.\n\nA childhood star, Tara had landed a small role in Campus Life. She turned the bit role of Nikki, the cute undergrad, into a complex leading role in the series. She could act, no doubt about it, and she had the girl next door looks to go with it. The flat-chested little brown-haired tomboy from the childhood series had blossomed into a beautiful young woman, and everyone loved her.\n\nIn return, Tara seemed hell bent on loving everyone else. Before the Festival, she had regularly been seen on the arms of every Hollywood young hunk, and some of the photos were a tad bit compromising. The good girl on screen was a bit of a wild child in real life. Still, she didn't do drugs, which is rare, and she rarely drank, which is rarer still. So all told, the tabloids pooh poohed her flings with the meat of the week club, and America stayed glued to their screens every Tuesday night.\n\nAn hour and a half into our set at the Festival, we took a fifteen-minute intermission. Time to chug water and catch our breaths before going back out and really killing them. We were tight that night, and the crowd was great. To this day, we all agreed we'd never been better. Of course, we'd been paid three million to put on the show, so we had plenty of incentive to give it our all. I was standing in front of a huge fan, cooling off and drinking my third bottled water in five minutes, when I felt a soft hand glide over my belly.\n\n\"Wanna go out after the show?\"\n\nI looked down and into the eyes of America's sweetheart. She was gorgeous in tight blue jeans accentuating her bubbly ass, a western shirt cinched at the waist showing just enough belly to know it was taut and just enough cleavage to let you know she had some nice melons. Her soft brown hair was pulled back into a long ponytail, accentuating her square jawline, full lips, and button nose. And those soft brown eyes with thick, long lashes? Sweet Jesus! don't get me started.\n\n\"Sure,\" I muttered.\n\nShe pinched my nipple, giving me an innocent smile as she did so. \"I'll be waiting,\" she said.\n\nInspired, no doubt, by a throbbing erection that just wouldn't quit, we killed them in the second set, ending in a blistering version of \"Sausalito City Limits,\" our recent number one. The crowd went wild, thundering their applause for a full fifteen minutes after we left the stage. By then, though, I was in the backseat of a limo with Tara Boyd, every young man's wet dream, petting heavily and trying to talk her out of skipping the nightclub and settling for drinks at my hotel room.\n\nShe wasn't too difficult to convince, and we disappeared into Suite 4101 for three days. From there, we hopped a plane to Fiji and roamed the beaches, hand in hand, for ten more days. I think I fell in love with her on day three, when she showed me how to drink beer through my nose. We were married a year later, and I never suspected a problem until a day and a half ago.\n\nSure, we'd had arguments. Hell, you try working sixteen-hour days, seven days a week for half the year filming your television series, then spend the other half of the year on the road doing publicity and charity events, talk shows, and movies. Then take your husband, give him the same hours and travel schedule. Mix into all of this the endless joy of people throwing themselves at you twenty-four hours a day, seven days a week, buying you drinks, offering you drugs, trying to get a piece of you, and\u2013almost every day away from each other\u2013offering a piece of ass to you. It's hectic to say the least.\n\nI'm not saying my life sucks or anything. Beats the shit out of a nine-to-five at the iron foundry, that's for sure. Still, understand what it's like and the different stresses it puts you under. Try going out to dinner with your wife without getting mobbed by photographers and fans, enjoy your vacations with helicopters of paparazzi hovering over you. Between the endless hoopla and the extended absences, it's a wonder anyone's marriage manages to stay together in either of our professions.\n\nStill, I thought we were doing really well. Better than most, to tell you the truth.\n\nUntil a day and a half ago, when my little bubble was burst.\n\nCHAPTER SEVEN\n\n\"Mom,\" I called, dragging my duffel bag through the front door. No one locked their doors in Grant City, so my easy entry was not really a sign that anyone was home.\n\nHearing no response, I leaned my duffel bag against the wall and looked around the living room. I hadn't been here in nearly seven years, since right after the first album hit it big, but it was still the same. I guess a few pieces of furniture had been moved around, and the sofa was definitely new since my last visit. Still, it was comforting to be back home.\n\n\"Hello,\" I heard her call from the top of the stairs.\n\n\"Hey, Mom,\" I called back. \"It's Nick.\"\n\n\"Nick?\" I heard some shuffling around from the top of the stairs. My eyes went wide and a grin started spreading my cheeks. She wasn't alone, I realized.\n\n\"Nick, what're you doing here?\" she said, wrapping a robe around herself as she walked down the stairs.\n\n\"Catch you at a bad time, Mom?\"\n\n\"Wipe that smile off your face, young man,\" she said, knotting the sash before throwing her arms around me and squeezing me tight.\n\nI hugged her back. It had been too long. This was our first hug since I'd dropped her off at the airport more than eighteen months before. She'd spent the week with us in Brentwood, and we'd hugged just like this when I saw her last.\n\nShe broke the hug and stood back, eyeing me up and down. \"You look like shit, honey.\"\n\n\"Am I interrupting something, Mom? If so, I can get a room at the motel for the night. You know, let you get on with things.\"\n\n\"Bob,\" she called to the top of the stairs, \"get dressed and get on down here. My boy's come to visit his dear old Mama.\"\n\n\"Bob?\" I said, raising my eyebrows. \"As in Dr. Bob? The chiropractor?\"\n\nShe smiled.\n\n\"But Mom,\" I said, not knowing whether to be proud of her or embarrassed, \"he's fifteen years younger than you.\"\n\nShe nodded. \"And thank God he is,\" she said, \"or he wouldn't be able to keep up with me.\"\n\n\"Hey, Nick,\" Dr. Bob called to me, tucking his shirt in at the top of the stairs. \"This is a pleasant surprise.\"\n\nI looked from him to her then back to him again. \"Sorry for the interruption,\" I said. \"Guess I should have called first.\"\n\nHe bounded down the stairs. \"Nonsense,\" he said. \"It's great to see you again.\"\n\n\"And besides,\" Mom cut in, \"we were done anyway.\"\n\nHe blushed, but the look he gave her was genuine affection, no doubt about it.\n\n\"Come on,\" Mom said, turning and walking toward the kitchen. \"Let me fix you boys something to eat. You look like you could use it, Nick.\"\n\nThe grumble in my stomach told me she was right. Over forty hours since leaving California, and I'd made due with a few candy bars, some bottled water, and a convenience store pre-made turkey sandwich.\n\nBob and I chatted, catching up on the news in Grant City, while Mom busied herself making grilled cheese and tomato soup. My favorite meal since childhood, no one did it better than Mom. The key was homemade tomato soup, which she always kept in tupperware containers in the freezer.\n\n\"So how's Tara?\" Bob asked after we were all seated around the small table in the kitchen.\n\nI tried to smile, but failed miserably.\n\n\"Problems?\" Mom said.\n\n\"Her or you?\" Bob said. When my look told him I didn't understand, he clarified, \"Which one of you's cheating? Her or you? Or both of you, I guess.\" He laughed. \"After all, you're in California now.\"\n\n\"Her,\" I said. \"With Carl.\"\n\n\"Carl Simpson?\" Mom said.\n\nI nodded.\n\n\"He always was a dickwad,\" she said, taking a bite from her sandwich.\n\nBob choked at her characterization, nearly spitting his soup across the table at me.\n\nMom was always like that. If anyone could be more blunt than Walter, that someone was Mom. I'm pretty sure that's why he loved her so much. That's also why her students loved her: She called a spade a spade, and her literary criticisms fell for none of the tried and true bullshit. She thought Moby Dick sucked, and she'd preach it to all who would hear. Thaddeus Thibodeaux, President of Chadwick College, rarely appreciated her candor, but he found it exceedingly difficult to get rid of a tenured professor so popular with the students and alumni and so well-recognized and respected in the national academic community. All in all, she was a real coup for such a backwater as Chadwick, to Thibodeaux's everlasting regret.",
        "\"Carol,\" Bob finally managed to croak.\n\n\"Well he was, Bob,\" she said. \"Little Eddie Haskell-acting twerp from day one. 'You look beautiful today, Mrs. Harlan,' and 'Are you doing something different with your hair, Mrs. Harlan?' Pathetic, even when he was little.\"\n\nI smiled. She was right, but most of the parents ate that crap up. Carl was always the best-behaved, the most polite, and the first to offer to help take out the garbage. But when the parents weren't around, he was also the first to blaze up a joint, pull out a bottle of vodka he'd pilfered when someone wasn't looking, and bad mouth pretty much everyone and everything. All in all, he'd been fun and wild and reckless.\n\n\"So what're you going to do?\" Bob said.\n\nI shrugged, chewing on the last bite of my sandwich. \"Don't know,\" I said with a mouthful of food. Swallowing, I continued. \"If it's all right, I'd like to stay here awhile, Mom. Just relax and think. It's hard to think in LA, you know?\"\n\nShe looked at me, pursing her lips and thinking for a minute before nodding. \"Well,\" she said, \"I guess it's okay with me if it's okay with Bob.\"\n\nMy eyes went wide. \"Bob?\"\n\n\"We live together now,\" she said, reaching her arm across the table and taking his hand in hers.\n\n\"You're kidding me, right?\" I looked at Bob, and he looked a little uncomfortable. \"What about Elaine, Bob?\"\n\n\"She left me,\" he said. \"Couple of years ago. Your mother and I have been living together for the past eight months.\"\n\n\"And you didn't think to tell me this?\" I said to Mom.\n\n\"No,\" she said. \"It's none of your goddamned business. And if you cared so much, you'd have called me, Nick. But you haven't. Not once in the eight months we've lived together.\"\n\n\"Yes I did,\" I argued. \"I called you at Christmas.\"\n\n\"It was New Year's Day,\" Bob said. \"That's when we woke up together, and your mom asked if I'd stay for awhile. I figured she meant for a few hours, but she meant awhile longer than that.\"\n\nI laughed. It was all so clear suddenly. Bob and Mom went out on New Year's Eve, got all liquored up, and ended up in bed together. Frankly, it was a good move for Bob. Though fifteen years younger than Mom, she still looked around his age. Don't mistake me for Oedipus Rex, but I freely admit that Mom's a hottie, and God knows she's the life of every party she attends. So yeah, this wasn't nearly as strange as it looked.\n\n\"What's so funny?\" she said, getting her dander up.\n\nI ignored her. \"So, Bob, what do you say? Can I stay here? I'll try to stay out of your way.\"\n\nHe saw my grin and grinned back at me, then his face got all serious and he placed a hand on my shoulder. \"Well son,\" he said.\n\nI lost it, and the milk I'd just taken a chug of came out of my nose as I convulsed in laughter at the whole merry-go-round that was suddenly my life.\n\nCHAPTER EIGHT\n\nI went to bed immediately after lunch and crashed for seven hours. After waking up, I showered and brushed my teeth, dressed, and went downstairs.\n\nThe note on the refrigerator said it all. \"I'm teaching a class tonight, and Bob's at the office. You're on your own for dinner. Love, C.\"\n\nI didn't feel like spending the evening alone in front of a television. To the contrary, the past two days with just me and Walter and the flat plains of the American heartland left me needing a crowd.\n\nTen minutes later, I pulled into the parking lot at The Hitching Rail. I'd worked there, first as a busboy then a cook, while in high school, and the food was easily the best in town. Think Chili's or TGI Friday's, but with homemade food instead of pre-packaged, tasteless, overpriced crap. Judging by the full parking lot at seven thirty on a Thursday night, they were still knocking them dead.\n\nSeeing the dining room full, I made a beeline to the bar and ordered a beer.\n\n\"Nicky,\" someone called out behind me, and I turned. Victoria was striding toward me, her arms held out for the impending full-body squeeze.\n\n\"Hey, Vic,\" I gasped as my body was crushed to her big frame.\n\n\"They said it was you, Nicky,\" she said, now holding my shoulders and standing back to take a look at me. \"I didn't believe them, but . . . well . . . I'll be damned.\"\n\nThen she hugged me again.\n\nVictoria Wentworth and her husband Ron owned The Hitching Rail and had for more than thirty years. Ron ran the kitchen, Victoria ran the dining room. They were both stern taskmasters\u2013I learned early on that perfectionism in all things is the only way to succeed in the bar and grill business\u2013but the high schoolers they hired to fill out their staff became members of a family, and they treated us all like the kids they'd never had. Presents on our birthdays, cards with cash at graduation, and severe tongue lashings for the slightest miscue at work. And they were the only people who ever called me Nicky.\n\n\"It's been too long, Nick,\" she said.\n\n\"Four years, I think. You're right, too. That's way too long.\"\n\nI looked around the place, recognizing most of the customers. A few of them nodded to me, and I nodded back and smiled.\n\n\"Looks like nothing much has changed, Vic,\" I said.\n\nShe beamed. \"Nope, still the best damned burger in town.\" She grabbed my arm and pulled me along. \"Come on, you've got to drop in and say hey to Ron. He's a little busy now, but I know he'll be glad to see you.\"\n\nSure enough, there was Ron in the kitchen, his white shirt and faded jeans somehow spotless amidst the grease and smoke and sauces being prepped, plated, and pushed onto the counter in a well-oiled routine. Barking orders like a drill sergeant, it took him a minute to notice us. He started to yell something to Victoria, then stopped, his mouth agape.\n\n\"Nicky?\"\n\nI nodded. A big grin split his face, showing the two teeth he'd lost in a bar fight in Singapore, and he strode around the steam tables. Bowling the two line cooks aside, he swept me into a hug that would've put a boa constrictor\u2013and Victoria\u2013to shame.\n\n\"Goddamn, son,\" he whispered fiercely, \"it's good to see you again.\"\n\nThen he, too, held me off at arm's length and eyed me up and down.\n\n\"You look like shit,\" he said. \"Too gaunt. And when's the last time you slept?\"\n\nI tried to laugh it off. \"The California lifestyle, Pops,\" I said. \"Too many salads, not enough steaks.\"\n\nHe laughed at that, a bellowing laugh from deep in his billowing belly.\n\n\"Fuckin' pussies, eatin' a bunch of shit not fit for human consumption. Well we'll fix you right up,\" he said. \"Won't we sweetie?\"\n\nVictoria nodded, grabbed my arm, and ushered me out the door.\n\n\"Gimme a half-pound cheeseburger with extra bacon,\" he shouted to the cooks as I left.\n\n\"I've got a surprise for you,\" Victoria said, patting my forearm as she led me to a small table far in the back.\n\n\"What's that?\" I said.\n\nShe nodded toward the waitress station, and I turned. Some long-legged redhead with a great ass was filling a tray full of sodas. My eyes went wide when I guessed who it was.\n\n\"Is that . . .?\"\n\n\"It sure is, Nicky,\" she said. \"Just started back a couple months ago.\"\n\nI said nothing more except my thanks as Victoria dropped me off at my table before turning back and hovering over the other tables.\n\nJust as in the bar, I recognized quite a few of the people in the dining room. It was neat seeing some of those I'd gone to school with trying to feed their kids between bites of their own food, and the whole room looked just like any other thriving diner in middle America, which is to say everyone looked happy at the end of a long day and content to eat a good meal with friends and family.\n\nA throat cleared beside me and I turned and looked into the most beautiful blue eyes God ever created. Aimee Standish, in the flesh, and she had changed very little in the past ten years. Same long, thick red hair, high cheekbones, and tiny dimple on her chin.\n\n\"Hey, Aimee,\" I stammered. \n\n\"Hey,\" she said, looking around the room at her other tables before turning back to look at me. \"Vicky says you've already got a burger coming, so I just need your drink order.\"\n\nNo smile, no recognition, no nothing. Just impatience to get my order, get it back to me, and get back to her other tables.\n\n\"Please,\" I said, holding up my nearly-empty of Miller Lite.\n\nShe nodded, jotted it down on her pad, and left. I watched her stalk away, then watched her weave back to my table, put down a fresh beer and yank away the empty, then set down bottles of ketchup and mustard. \"Burger'll be up in a minute,\" she said, then was gone.\n\nAh, Aimee Standish, my unrequited high school love. She'd been in my class, and I'd long tried to get her to recognize my existence. She never had, going so far as to look at me like I was crazy when I fumbled my way through inviting her to the Homecoming Dance.\n\nDon't get me wrong, it's not like she was a snob or anything like that. Lord knows we had enough of those in school, the ones that settled only for the quarterbacks and track stars, the wrestling champions and the star outfielders. There was no way a middle-of-the-road nobody like me was going to get noticed by any of them regardless of my bloodline and my father's latest appearance on The Tonight Show.\n\nNo, Aimee wasn't one of them at all. Rather, she'd been the class brain, the valedictorian who held herself aloof from nearly everyone. Sometimes you'd see her chatting with a group of the other brainiacs, probably sorting through some geometry proof or discussing chemical reactions, but she usually just strode to and from class with occasional stops at her locker in between, eyes straight ahead, rarely recognizing anyone around her.\n\nWe were Seniors, and I was a cook at The Hitching Rail by the time she hired on as a waitress. I'd stand in the kitchen during down times, watching her shuttle to and fro between the tables, the kitchen, and the waitress stand. She rarely said a word to anyone unless it was absolutely necessary to clarify an order or answer a direct question. She'd keep a faint smile on her lips, nod a lot, then hustle her ass off.\n\nNoticing my fascination one night, Ron had told me, \"Nothing ventured, nothing gained.\"\n\nThat, of course, led to the Homecoming rejection, and I went back to tell Ron about it. He just nodded and turned around without a word. Thinking he found me as pathetic as Aimee had made me feel, I put it out of my mind.\n\nA week later, though, Ron came up behind me as I again stood at the kitchen door and watched Aimee. \"Victoria says she's shy,\" he told me. \"That's why you almost never hear her say anything. Says her parents forced her to get this job to overcome it\u2013her shyness, that is\u2013and Vic thinks she's coming around.\"\n\nI nodded. At this rate, there was no doubt I'd be collecting Social Security by the time I managed to engage her in a full conversation.\n\nThe conversation never came, though. Ten months later, the weekend before we both took off for our first semester of college, I managed to get a \"Hello, Nick\" from her. That was the first and last time she'd ever said my name, and I still remember my unbridled joy at thinking she knew my name.\n\nAnd truth be told, through the years I'd occasionally flash back at the smile on her face when she spoke to me\u2013and just me\u2013that one time. My heart still flutters thinking about it.\n\nCHAPTER NINE\n\n\"So what's the story with Aimee?\" I said to Jimmy Schultz. We were sitting at a table in the bar now, drinking beer and catching up on high school. Jimmy had been the star running back in high school and was now an insurance salesman in Grant City, working out of his father's office on the main drag.\n\n\"Still got the hots for her, huh?\" he said. Without waiting for a reply, he turned and followed her with his eyes. \"Yeah, who wouldn't.\"\n\nWe both watched her for a minute before Jimmy spoke again. She was tall, about five eight, with long, slim legs, slightly flaring hips, flat tummy, and breasts on the smaller side. All around, a very alluring package.\n\n\"Met someone in college,\" he said. \"Engineer, I think. Only met him once, tell you the truth. They were having lunch here 'bout three years back. Anyways, he was a lot like her, only more so. All quiet, wouldn't say 'boo' to anyone about anything.\" He took a long pull on his beer.\n\n\"Guess they got married right out of college,\" Jimmy continued. \"Had a little boy. They lived somewhere in New York or something. She was teaching, I guess, and he was engineering. Then, 'bout a year ago, she's back in town with her little boy in tow. Don't remember his name, but he's a cute little shit. The wedding ring was gone, and apparently so was Albert. Word was he took off with a co-worker. A male co-worker, if you know what I mean.\"\n\nHe was looking at me when he said the last, but I'm pretty sure my poker face hid my thoughts. \"Guess that doesn't surprise you so much, living in California now and all,\" Jimmy said, snickering.\n\n\"So what's she doing now?\" I asked, trying to get this conversation back on track.\n\nJimmy laughed at this. \"Well,\" he said, drawing it out, \"she's an English teacher at the high school. Then she works here Thursdays and Fridays. I think her folks watch the young 'un.\"\n\n\"She seeing anyone?\" I asked.\n\n\"Whoa, boy,\" Jimmy said, turning and looking at me full. \"You're married to one of the sweetest babes in the world. Save some for the rest of us, would ya?\"\n\nI smiled, which apparently reassured him. He turned back and watched Aimee, speaking as his eyes followed her. \"Anyways, the answer is no, she's not seeing anyone. God knows we've all tried. Hell, she's shot me down more times than I can count.\"\n\n\"Then why do you keep asking?\" I said.\n\n\"Just tryin' to wear her down,\" he sighed.\n\nWe both finished our beers, and I went to the bar to get us another. No such thing as cocktail waitresses in Grant City, Illinois. Never had been, never would be.\n\n\"You see Teddy at all?\" I asked, setting a new bottle in front of Jimmy.\n\n\"Sure,\" he said, finishing off the dregs of his last bottle before gripping the new one. \"All the time.\"\n\n\"Where's he living?\"\n\n\"Foster Road,\" Jimmy said, \"nice place just north of the Jenkins farm.\"\n\n\"What's he doing with himself nowadays?\"\n\nJimmy looked at me, disbelief on his face. \"Jesus, Nick, when's the last time you talked to him?\"\n\nI avoided his eyes as I answered. \"Six years ago. At the Grammys. We had a couple of beers together after we collected for song of the year.\"\n\nJimmy put his bottle down firmly and stared at me, mouth agape. \"What the fuck, you two were closer than ticks all throughout. You tellin' me you haven't even seen him in six years?\"\n\nI nodded. \"It just . . . I don't know . . . he didn't really have much to say the last time,\" I explained. \"Then we got so busy\u2013you know, life and all.\"\n\nHe nodded, but his eyes told me he couldn't believe it.\n\n\"Well,\" Jimmy said, \"them royalty checks he got and keeps on getting have set him up. Nothing fancy, mind, but he's got a real nice place now. He's married, too.\"\n\nMy raised eyebrows told me this was a surprise. Jimmy grinned.\n\n\"Jenny Leyden,\" he said. \"They got a couple of little girls, both the spittin' image of Jenny. He's teaching at the high school, too. Also English, just like Aimee. I think they're pretty good friends. You always see them chatting when he's around here.\"\n\n\"So he drops by here sometimes?\" I said, looking around to see if Teddy was there now. He wasn't.\n\nJimmy's head jerked toward a poster on the wall. I read it. Mustang Ranch/Friday July 17/Live from 9:00 to 1:00. Teddy's face was at the center of the band photo in the middle of the poster.\n\nI laughed. \"That fuckin' prick,\" I said. \"He quits LeadFoot because he didn't want to do it, and here he is in all his free time playing in some bar band.\"\n\nJimmy just shrugged. \"Maybe he's just happier this way.\"\n\nIt took me a minute to realize that Jimmy had hit the nail right on the head. Teddy had never wanted fame and all the attendant issues that fame created. No, Teddy just wanted to teach somewhere and maybe, if he had some free time, play some music for the fun of playing music. Then I remember the last time we'd seen each other, drinking beers at Spago, shouting other over the noisy crowd trying to hear each other, Teddy fidgeting nervously the whole time in the crush of bodies seeing and being seen. He'd been a fish out of water in a situation I'd long since gotten used to.\n\nSo there it was. Teddy just wanted a normal life, a life like his Mom and Dad before him with a wife and kids and a satisfying job with a little bit of music on the side for some fun. He knew what fame would bring, knew it before any of us, and he wanted no part of it.\n\nThen came my first\u2013and long overdue\u2013realization: Teddy had it better than I did. Way better. Plus, he's the one that finally got to play with Jenny Leyden's perfectly perky titties.\n\nCHAPTER TEN\n\n\"You look like someone hit you in the face with a shovel,\" Walter said as we strolled back home in the silent darkness.\n\n\"Just got a lot to think about suddenly is all,\" I said.\n\n\"Don't tell me Jimmy Schultz finally had something intelligent to say,\" he said.\n\n\"No,\" I replied, \"it's not that. Wasn't really that intelligent, truth be told. Just common sense, which I seem to have pretty much lost lately.\"\n\nI turned halfway down the block and faced Walter. \"Mom was from around here,\" I said.\n\n\"Sure,\" Walter agreed. \"Tyler, fifteen miles down the road.\"\n\n\"And you were from Chicago.\"\n\n\"Oak Brook,\" he corrected.\n\n\"Close enough,\" I said. \"Chicago, ritzy suburb. No difference. But she was also . . . I mean her parents, they were just small town folk. A pharmacist and a housewife.\"\n\nHe nodded. \"So?\"\n\n\"But your dad was an editor at the Tribune. And your mom was a socialite. Came from old packing house money if the stories you told are to be believed.\"\n\n\"They are,\" he defended. \"Still, your point?\"\n\nI started walking again before answering. \"My point,\" I said, \"is that you two were doomed from the start. She's a small-town girl from a typical small-town family. You're a big-city boy from a rich, influential family. You spent your whole life around people who were famous and glamorous; Mom spent her time at soda fountains and necking with her boyfriends at the Bijou.\"\n\nHe nodded, catching on. \"So we were doomed from the start.\"\n\n\"Well,\" I said, \"your behavior didn't exactly help things. I mean, it's bad enough to have so little in common. You seem to have exacerbated things by sleeping with every starlet you laid eyes on.\"\n\n\"Jimmy came up with all of this?\" Walter said.\n\n\"No. I did. It's just what Jimmy said led me to thinking.\"\n\n\"So what did he say?\"\n\nI shook my head. \"It's not what he said. It's that I didn't think of it first.\"\n\n\"And that is?\"\n\n\"What he said was that Teddy had exactly what he wanted. He had the small town dream. And I damned near choked on my beer at such a stupid thought, at such small dreams, until I realized that I was looking at it from the Hollywood point of view. From the superstar point of view.\"\n\nI stopped again and looked at Walter. \"Walter,\" I said, \"I've forgotten all about those dreams. Teddy's got money from the royalties, but he's happier about his family and his career and his little bar band than I am with my superstar wife, my mansion, ten times more money than him, and no family.\" I snorted. \"Hell, my best friend's a fucking ghost that I didn't even like when he was alive.\"\n\nWalter had been following me intently until the last. Then a hurt look came over his face and, before I could apologize, he was gone.\n\nHe did that sometimes, disappeared in a flash when I said something that pissed him off. He always came back though, his feathers all ruffled and looking for an apology, which I usually gave early on.\n\nWalter had first appeared to me after a show in Dallas about a year after he'd been killed. I thought someone had spiked my water bottle when I turned and saw him sitting there, watching me with that glint of humor in his eyes. I'd dropped some acid in the band's early years of fame, though, and this was like no trip I'd ever taken before. For one thing, he was too realistic, and the conversation that had ensued was too rational.",
        "So I'd spent the next three months talking to Walter when no one else was around. That's the only time he appears, by the way: When I'm alone. Then the whole thing got too creepy for me. Despite Walter's repeated protests that I wasn't crazy, I decided to see a doctor.\n\nThe first few, assuming all that tabloid bullshit was true, told me to lay off the drugs and sauce. When I told them that was in my past, they told me it was probably residual effects.\n\nStill unhappy, and still seeing a protesting Walter a couple of times a week, I finally found someone to give me the full battery of tests. Thank God I wasn't schizophrenic, but Dr. Salomon still couldn't find anything wrong with me. Four months of therapy followed, all explained away to Tara as just needing someone to help me deal with stress. (Little did I know she saw nothing unusual in seeing a therapist, which was all too commonplace among the whole acting crowd and, if anything, a sign of true sensitivity and self-realization.) At the end of the therapy, Dr. Salomon flipped his notebook shut, got out from behind his desk, and sat in the chair beside me.\n\n\"I'm going to tell you what I think it is,\" he said, a bemused grin on his face.\n\n\"And what's that, Doc?\"\n\n\"Nick,\" he said, \"I think you're being visited by a ghost.\"\n\nAt the look of surprise on my face, he rushed to continue. \"Maybe not a real ghost, but a ghost of your past. You need someone to talk to, someone who understands you. It helps you deal with the pressures. It's how your mind copes with everything. Your best friends, the ones that know you best, they're also your fellow band members, and they're part of what's putting all of the extra demands on you. So they're not part of the solution to helping you cope. Instead, they're part of the problem you need to cope with. No, Nick, you know who knows you best and can best help you deal with all of this?\"\n\n\"Walter?\" I guessed.\n\nHe smiled and shook his head. \"No, Nick. It's you. You're the one who can best help you deal with your problems.\"\n\n\"So I'm . . . Walter's a . . . it's just me seeing things?\"\n\nHe shrugged. \"I'll admit, this is quite rare, and the images rarely persist for such a duration. Still, I think you've got a lot of unresolved issues with your father, and I think you always wanted him to help you while you were growing up. Now, though, when you really need the help, he's gone. So yes, I think your subconscious creates an image with whom you can work out your own problems. And, since your father was the one you always most wanted to be that person, I think the image your self-conscious created was Walter.\"\n\nI nodded. Made sense.\n\n\"So is there anything to worry about?\"\n\nDr. Salomon smiled. \"No, Nick. Frankly, though unusual, I think it's a very healthy way of dealing with the stresses you're under. And I think that once this has all sunk in, you'll start seeing less and less of Walter and just have these little conversations inside your head free of the images.\"\n\nI felt better until Walter appeared the next afternoon while I was struggling over some lyrics.\n\n\"Have you ever heard such a bunch of bullshit in your entire life?\" he said.\n\n\"I'm not listening to me right now,\" I said, my eyes staying on the lyrics.\n\n\"I'm not you, you dumbass,\" he said. \"I'm me, your dad, and I'll prove it to you.\"\n\nI looked up, skepticism written all over my face.\n\n\"I'm going to tell you something you don't know,\" he said. \"Something you've never known and something no one else ever knew, either. Will that do the trick?\"\n\nI laughed at him, and he proceeded to make Dr. Salomon look like a blithering idiot.\n\nWalter's final, long lost manuscript\u2013the one hidden in a fake log in the cabin I'd never been in\u2013was published a eight months later to great fanfare.\n\nCHAPTER ELEVEN\n\nA few beers, good conversation, and a late night walk\u2013oh, and a bacon cheeseburger the size of a black bear's ass that I'd barely managed to finish half of\u2013made for a great night of sleep. When I awoke on Friday morning, the sun had long been up and the house was silent. The clock beside my bed told me it was almost nine, and I stretched lazily as a smile came over my face.\n\nHoly shit, I thought, looking at my cheery face in the mirror while shaving, where the hell have you been? Where's the normally cheery Nick been hiding lately? If this was all it took, I should've come home to re-charge ages ago. Not even the twenty-three voice mail messages on my cell phone\u2013all of which I deleted on sight\u2013took the smile away.\n\nHopping down the steps, I grabbed a yogurt from the refrigerator and chowed down. Then I made a fresh pot of coffee (only bad thing about Grant City so far was no Starbucks) and, while it brewed, went out to the driveway and brought my guitars and the rocking chair in from the Escalade. For the first time in a year, I was really in the mood to write some music, and I wasn't going to let this opportunity pass.\n\nAnd write I did, for almost eleven hours. Bob dropped by at lunchtime, but I declined anything and kept plugging away. I was in a zone I hadn't been in for a couple of years, the zone when fresh ideas come hot and heavy, and I filled half of my notebook with interesting chord progressions and notes on tempo, melody line, and other basic thoughts.\n\nI read somewhere about Lennon and McCartney writing \"Hard Day's Night.\" The story went that Ringo, on the set while filming the movie, suggested the movie's title based on one of his pithy lines. The director liked the title, but noted there was no song to go with it. No problem there. Lennon and McCartney went to work that night and, by the next morning, had the whole song\u2013chords, melody, lyrics, and tempo\u2013all written out. That's the zone, and it comes and goes. Unless, of course, you're Lennon and McCartney; those dickheads stayed in the zone for decades.\n\nWhen Mom and Bob left to go out for fish fry, I declined and finished up the basic melody line of a second song. It wasn't quite there, but I knew it was close. I also knew my energy was flagging, and further efforts would only end up being changed on the morrow. Ergo, time to quit, get some food in my belly, and see if Teddy's band was worth a shit.\n\nIt took me longer to get ready than I thought, and the walk from Mom's house to the bar took another twenty minutes. By the time I got to The Hitching Rail, the music had already started. When I walked in, the bar was wall to wall people, and the dining room was packed. The band, unseen somewhere in the far corner, was in the middle of the old Ernest Tubb number \"Walking the Floor Over You,\" and they were doing a pretty good job of it. They were putting a nice, upbeat spin on an old classic, and the song was being driven by a really catchy piano line.\n\n\"You came back,\" Victoria whispered in my ear from behind.\n\nI turned, smiled at her, and looked over her shoulder into the dining room. \"How long you figure for a table, dear?\"\n\nShe just laughed, grabbed my arm, and pulled me along and into the kitchen.\n\n\"Guess who's back?\" Victoria shouted as she pushed through the door and into the kitchen.\n\nI saw Ron and Aimee talking, but their conversation stopped and Aimee turned away when I peeked out from behind Victoria.\n\n\"Ron,\" she ordered, \"make Nicky something to eat, will you?\"\n\nHe smiled. \"Too crowded out there?\" he asked, not waiting for an answer before asking me what I wanted. I ordered a grilled chicken breast sandwich and some fruit.\n\n\"California pussies,\" he muttered. \"They've gone and ruined a perfectly normal boy.\"\n\nI grinned, then turned to look at Aimee. When our eyes met, she blushed and again turned away.\n\n\"Aimee, dear,\" Victoria said, \"could you please fetch Nicky a beer from the bar?\"\n\nAimee nodded and muttered, \"Sure.\" Then she bolted out the door around me.\n\nHer body trailed a breeze of shampoo and a citrusy perfume, and my eyes followed her as she darted through the dining room and into the bar.\n\n\"Told you,\" Victoria said.\n\nI turned. They were both watching me, and now it was my turn to stammer.\n\n\"She's . . . ah . . . well, looking pretty good, don't you think?\"\n\nVictoria beamed, and Ron turned his eyes to the heavens and pleaded, \"Will you please help him grow a pair?\"\n\nI laughed.\n\nI ate my sandwich and fruit and drank my beer in the kitchen, bullshitting with Ron as he and the boys sent out a few last minute orders and appetizers while cleaning all of the equipment and dirty dishes.\n\nFinished with the meal, I left them to finish with their cleaning. Back at the bar, I noticed Jimmy Schultz leaning against a wall chatting with Jenny Cooper nee Leyden. She'd changed very little, maybe put on ten or fifteen pounds and had a few lines across her face. Otherwise, she looked much as she had when we went to the Prom. She was swaying to the music, her eyes on the stage and her ear taking in whatever Jimmy was saying.\n\n\"Buy you folks a drink?\" I said, approaching them as the song ended.\n\n\"Nick!\" Jenny screeched, jumping into me and hugging me. \"Jimmy said you were back.\"\n\nI looked at him over her shoulder and he nodded his greetings.\n\n\"I'll get the drinks,\" he said. \"You're gonna be busy.\"\n\n\"So when did you hear?\" I asked when she finally loosened her grip.\n\n\"While Teddy and the fellas were setting up,\" she said. Her eyes turned to the stage, and Teddy was watching us, a bemused look on his face. Then he raised his chin in greeting, and I raised by beer in return. \"Nick,\" Jenny said, \"he wants to know if you'll play a song with them. Three of the fellas are in college, and he says it would make their lives complete to play on the stage with you. Will you do it? For old time's sake?\"\n\nShe had those pleading puppy dog eyes. Between that and the memories of her beautiful breasts spilling out of that prom dress, which I now noticed had grown a little but still seemed to be pointing well upwards, I couldn't refuse.\n\n\"Sure, Jenny,\" I said, pecking her on the forehead, \"you tell him I'll play something with them whenever they're ready.\"\n\nBefore I could react, she'd spun out of my arms. \"He says he'll do it, Teddy!\"\n\nSuddenly, all eyes in the joint were on me.\n\n\"Well, ladies and gentlemen,\" Teddy said, \"you're all in for a real treat tonight.\"\n\nI looked around and took in the looks. Those who knew who I was, which seemed to be most of them, had a look of surprised anticipation on their faces.\n\n\"That's right,\" Teddy continued. \"An old wind has blown back into town, and he's here tonight.\"\n\nA few people whistled, and a couple of the women were clapping.\n\n\"I've heard told this . . . well, this fella can adequately handle a guitar,\" Teddy said, and I could hear the humor in his voice. \"Hell, some folks even think he knows how to sing, though I'm not one of them folks.\"\n\nThe crowd was laughing and clapping now.\n\n\"So maybe if we ask him real nice, we'll convince him to come up here and share a song or two.\" Teddy waved his arm over his guitar and toward me. \"What do you say, people? Anyone want to see if Nick Harlan can still play the old songs?\"\n\nThe crowd erupted, and I damned near broke into tears. It had been ten years since I'd played for any of these people, and, except for television appearances, nine years since I'd played before fewer than fifteen thousand shrieking fans. At that moment, I'd have given up every damned arena in the country for another standing ovation from these people I'd known my entire life.\n\n\"Now will you look at that,\" Teddy teased as I made my way to the stage, wiping a tear from my eyes. \"He's nervous.\"\n\nI hopped up onto the crowded little platform stage and leaned into Teddy. \"You prick,\" I said. Then I hugged him over his guitar, and he hugged me back with an energy that damned near burst my heart with shame. Why hadn't we spoken in so long?\n\nThe crowd started chanting for us to play something, and Teddy whispered, \"Maybe we should drop this little lovefest for awhile before they tar and feather us.\"\n\nI laughed, broke the hug, and picked up an acoustic guitar. Looking around for the patch chord, the bass player rushed over to help me. \"Here you are, Mr. Harlan,\" he said, looking nervous as hell and excited at the same time.\n\nI smiled. \"It's Nick,\" I said, plugging the chord into the guitar. \"Mixing board balanced for this?\" I said to Teddy.\n\nHe nodded. \"Had a feeling when we heard you were back that we'd better be prepared for another instrument. So what you in the mood for?\"\n\nI smiled. \"'Two Angels.'\"\n\nTeddy's smile went ear to ear, and I wonder if he had the same memory of it I had. \"You heard him, boys,\" he shouted, then turned to me and said, \"Piano's going to lead us into it.\" And it did, joined soon by my strumming rhythm, and, simultaneously, the drums, bass, and Teddy's mournful slide guitar line. Once the vocals started, Teddy and I shared a microphone the whole time, keeping our guitars out of the way of each other. Then we took off on an extended instrumental that, in a new twist on the arrangement, showed off the kid on piano to great effect.\n\nBy the end of the song, listening to the crowd whooping and hollering for more, it was like we'd never been apart. Teddy was, if anything, better than ever on lead, and his voice had far more range than I remembered. Suddenly, I wanted to see just how good these guys were, see if this was really Teddy's hobby or if was still his passion.\n\nWhen the cheering died down, Teddy waved his arm at me. \"Ladies and gentlemen, please help me thank Nick Harlan for coming on up here.\"\n\nI bowed in response to the clapping, then turned to Teddy. \"I'd like to stay up here for awhile if it's okay with you,\" I whispered.\n\nTeddy gave me a lazy smile. \"I think I'd like that.\" He turned to the rest of the band. \"Think you can keep up with us?\"\n\nThey all nodded, and Teddy turned back to me. \"So what's next?\"\n\nSo we tore into Bob Dylan's much-maligned \"Lily, Rosemary, and the Jack of Hearts.\" It was a nine-minute number, and we\u2013they, really\u2013improvised the backing arrangement. The drummer, bassist, and I all kept the basic rhythm going, but Teddy improvised some neat little licks throughout, and that kid on piano was outstanding. By the time we finished, people were streaming through the door, and there was little room left in the dance area.\n\nI stayed up there for the rest of the show, sitting with the band during breaks and signing autographs for anyone who asked. We did mostly country-rock covers, \"Return of the Grievous Angel\" by Gram Parsons, \"Angel is the Devil\" by Steve Earle, quite a bit of John Hiatt and Jayhawks, and \"Dead Flowers\" by the Rolling Stones. We only did two LeadFoot songs, both of which Teddy and I had written together. By the last hour of the show, word had gotten out and cars were lining the street for blocks and you couldn't move in the entire building. At one twenty, we finished with a tight, sweet, 4-part harmony version of the old Poco classic \"Keep on Tryin'.\" The crowd went nuts, and we'd have played longer, but that song pretty much finished our voices for the night.\n\nI helped the band tear down and lug shit out to their cars and vans, accepting free beers from the crowd and tons of claps on the back. By the time we finished, the bar was closed and the bartenders were sweeping up and wiping up spilt beer from floor and tables.\n\nA few of us were sitting around the bar, drinking one last beer in the dim barroom. There was Ron, Victoria, Jenny, Teddy, the remainder of the band, and me, and Ron was telling us that we needed to do this a little more often so he could retire one of these days.\n\nThen I heard a quiet yet clear voice behind me. \"Now I guess I understand what all the fuss is about.\"\n\nI turned. It was Aimee, and her eyes met mine and held there. I was speechless.\n\n\"Cat got your tongue, Nick?\" Jenny teased.\n\nI heard a few snickers, also, but I was speechless. My eyes locked with hers and stayed there, lost in those deep blue seas. Her face betrayed no emotion, but she didn't break the eye contact, either. We just stared at each other for what seemed forever but was probably only thirty seconds or so.\n\n\"California pussy,\" Ron muttered loud enough for everyone to hear.\n\nThat broke it, and Aimee gave a brief smile before saying, \"Anyway, you were really good up there.\" Looking at Teddy, she added, \"Both of you.\"\n\nShe walked out the door before I could respond.\n\n\"Still got a thing for her, don't you?\" Teddy said.\n\n\"Of course he does,\" Victoria answered.\n\n\"Just too 'fraid to do anything about it,\" Ron said. \"California's gone and ruined him.\"\n\nI just smiled. \"You know,\" I said, \"that's the most she's ever said to me. Ever.\"\n\n\"Yeah,\" Teddy said. \"Let me tell you, though. You get to know her, she's a friggin' magpie. Just takes awhile to get to know her is all.\"\n\n\"But you really shouldn't,\" Jenny said. \"You're married, and we don't want to see her getting too close to . . . .\"\n\nTeddy finished the thought. \"We don't want to see her get hurt. She's been through enough.\"\n\nVictoria was staring at me. I had tried to hide it, but I know I winced at least a little at the mention of my marriage, and Victoria had seen it.\n\nShe whispered something to her husband, and Ron just nodded. He'd seen the look, too. I'm pretty sure he'd already figured out I had problems, so the wince undoubtedly only served to confirm his suspicions.\n\n\"What're you doing tomorrow?\" Teddy asked.\n\nI shrugged. \"Probably just writing,\" I said. \"I'm in the zone and don't want to waste it.\"\n\nHe nodded, understanding what I was talking about. Then he turned to Jenny and raised his eyebrows.\n\nShe saw the look and turned to me. \"We want you to come out to the house for a cookout,\" she said. \"About one. We've got about thirty people coming over, and the band's going to practice for their entertainment. Why don't you grab a guitar and join in?\"\n\nWhen I didn't answer immediately, Jenny leaned over and put her hand atop mine. \"We really want you to meet our little girls,\" she said. \"And Aimee will be there with her little boy, too.\"\n\nThat sold it, and the smile I tried to hide told them all I'd be there.\n\nStanding to leave, Teddy said, \"Do you some good to hang out with some normal folks for a change. Enjoy just another typical, small-town get together.\"\n\nIf only we'd all known at the time just how wrong Teddy was. The next day would prove to be anything but typical in Grant City, Illinois.\n\nCHAPTER TWELVE\n\nI slept in until nearly eleven on Saturday. I'd have slept in later, and probably have been late to the cookout, except Mom's voice was carrying loud and through over the din of the crowd outside.\n\n\"Get the hell off my lawn,\" she was yelling. \"You hurt those roses and I'll hurt your hides.\"\n\nI lay there, frozen. I'd been in this situation a million times before, and I knew what that din was she was shouting over. A quick peek out the window confirmed my suspicions.\n\n\"There he is,\" an astute cameraman shouted, and I ducked back.\n\nMy body now went into full-blown automatic. I quickly shaved, showered, brushed my teeth, and got dressed in some casual yet stylish clothes. Show up in front of the press looking any less than a star and they'd crucify you. Your doting fans never pictured you with bed head. If they and the press actually saw you looking like the normal joe you were, then\u2013GASP!\u2013you must be on a drug binge or something.\n\nFifteen minutes later, I trotted down the stairs, out the door, and stood next to Mom on the front porch.\n\n\"I'll handle this,\" I said, smiling at her before turning my face to the twelve or so reporters and cameramen.\n\n\"All right, ladies and gentlemen,\" I said. \"Get off the lawn and onto the sidewalk. Then come on up here and we'll have this little interview, okay?\"\n\nThey obeyed as I knew they would. If they wanted an interview, they'd have to play ball to at least some degree.",
        "When they were all gathered on the porch, I set the ground rules. \"All right, we're going to go with ladies first, then we'll go from my left to right. Sound fair?\"\n\nThey agreed it did, and some young hottie from Entertainment Tonight started out.\n\n\"Nick, the YouTube videos of you and Teddy Cooper are currently exceeding ten million hits, and they've been posted for less than eight hours. Are you leaving LeadFoot and looking to form a new band?\"\n\nOh shit, I thought. Goddamned internet age.\n\nI kept the smile plastered on, though, and answered. \"I have no plans to leave LeadFoot,\" I said. \"I'm back home visiting with family and friends, and Teddy asked me to join them on stage last night. As you know, we're old friends from way back, and he was a founding member of LeadFoot. I couldn't refuse, and we had a lot of fun together.\"\n\n\"But you've left in the middle of your record negotiations,\" the lady said, this one in her mid-thirties, her hair locked in place by a bottle of spray, and her navy blue suit immaculate on this steamy Saturday morning. \"The rumor in LA is that you're fed up and leaving, that you don't want a new record deal for LeadFoot. Any truth to that rumor?\"\n\nI shook my head. \"No. We have a very capable manager, Ethan Rose, who's in charge of the negotiations. I just needed a break, and here I am.\"\n\n\"What about the rumor that you and Tara Boyd are having problems?\" said one of the men.\n\n\"And that she's now seeing your bandmate Carl Simpson?\" another said right after him.\n\nI smiled and tried to avoid the questions. \"Ladies and gentlemen, Tara and I love each other very much,\" I said. \"She's busy getting ready for her new season, and I just decided that now was a good time to take a break. That's all it is.\"\n\nThey spent another half hour trying to get me to clarify my answers, but I managed to dodge them all and kept with my basic story. Seeing it going nowhere quick, they all thanked me for my time, apologized to Mom for any damage they'd done, and wandered back to their vans to edit the interviews for the evening news.\n\nI apologized to Mom, then told her I was going to Teddy's house for a cookout. She said she'd been invited a few weeks back, and she and Bob would probably be dropping by when he got back from the office. Then I packed my two guitars back into the Escalade and took off early. I took the long way down back country roads to make sure none of the news hounds were on my trail, and pulled into Teddy's driveway at half past twelve.\n\n\"Back here,\" I heard Teddy call as I got out of my vehicle.\n\nI followed the sound of his voice and the smell of barbecued pork shoulder around the back of the house. He was on the deck smoking a lot of pork shoulder in an humongous smoker. Just off the deck, three tots, two girls and a boy, were splashing around in shallow side of the in-ground pool.\n\n\"Pretty exciting morning, huh?\" he said, looking at me while he took a drink of iced tea.\n\n\"They were here, too?\" I said.\n\nHe nodded, seeming none too pleased with the development.\n\n\"What did you do?\"\n\nHe smiled. \"Told them to get off my land or I'd call the cops and have them all arrested for trespassing.\"\n\nI laughed. \"Wish I could do that.\"\n\nI grabbed a can of Diet Pepsi from a nearby cooler and sat on one of the lawn chairs, watching him mop the pork shoulders with something before shutting the lid and sitting down next to me. We spent the next twenty minutes chatting about anything and everything, watching the children in the pool the entire time.\n\nIt started pretty serious with me apologizing for having so little contact the past six years. He waved it off, though, genuinely understanding. \"That's why I never wanted that life,\" he said. \"But you did, and I know how busy it keeps you.\" That was his final word on the matter; apology apparently accepted. Then he told me who else was married, had children, and working where before he he got serious on me.\n\n\"Why are you back?\" he said.\n\nI didn't answer, preferring to stare at a copse of oak trees in the distance.\n\n\"You can talk to me, you know,\" he said, his voice going low.\n\nI said nothing for a minute, but then turned and looked at him.\n\n\"Teddy, are you happy?\"\n\nHe got a quizzical look. \"Sure I'm happy. Aren't you?\"\n\nI sighed. \"I don't think so.\"\n\nTeddy said nothing.\n\n\"It's not what I thought it would be,\" I continued. \"Oh, I guess it is, but I'm beginning to realize that it's not what I want anymore. It's too much.\"\n\n\"Then get out,\" he said. Simple as that, just get out. Walter had said the same thing, but it had far more impact coming from Teddy.\n\n\"Not that easy,\" I countered. \"I've got obligations. There's the guys in the band; they're all counting on me. And I've got a wife. Hell, she'd never move here.\"\n\nHe nodded. \"Rumor true?\"\n\nMy eyes narrowed as I looked at him.\n\n\"The reporters were calling out questions before they finally took off,\" he explained. \"One of them said Carl was sleeping with Tara.\"\n\nHe saw the look on my face and nodded.\n\n\"He tried that with Jenny once,\" Teddy said. \"Few years back when his folks had that big anniversary party and he was back in town for a few days. He tried talking Jenny into joining him in his hotel room.\"\n\n\"And?\"\n\nTeddy smiled. \"She threw a drink in his face. Doused his fires pretty quick.\"\n\nI laughed. \"Well,\" I said, \"Tara seems to have stoked the fires.\"\n\n\"So what're you going to do?\"\n\nI shrugged. \"I don't know, Teddy. Honest to God, I love her. I love being around her. She's fun and funny and cute and adorable. Outstanding in the sack, I guess. I'm comfortable around her, I guess. The thought of changing all of that really scares me.\"\n\n\"Hold that thought,\" Teddy said, rising from his chair and going into the house. He returned a minute later with two beers and handed me one.\n\n\"So you talk to her about it yet?\" he said.\n\nI shook my head. \"Tried, but she won't do it unless we're face to face. And I'm afraid to do it face to face right now. I'm afraid I'll just take her back and it'll all happen again.\"\n\nHe nodded. \"Well, pardner, let me offer my two cents worth.\" He took a pull from the beer before continuing. \"You need to find out why she did it. Don't worry about the fact that she did it\u2013that's all over and done with. It's the why that'll tell you if she'll do it again.\" He grinned broadly, then said, \"Unless, of course, that California's changed you so much that you don't mind sharing her. I'm told you famous types get off on shit like that.\"\n\nI laughed. \"No,\" I confirmed, \"it hasn't changed me that much.\"\n\n\"Anyway, some people are just wired that way, guys and gals both,\" Teddy said. \"They don't see it as such a big deal. Either the way they were raised or the way they're wired, I don't really know. But if you find out the why, you'll find out if it was just a one-time mistake or the first of many more to come. Then you need to ask yourself if you can live with it if it happens again. I know you say you're not into that, but what if it's five years from now? Will you then give her yet another shot, wondering how long until it happens again?\"\n\nI nodded, mulling over what he'd said. Walter hadn't put it quite this way, but, then again, he'd never liked her from day one.\n\n\"So you could forgive Jenny if you walked in on something like this?\"\n\n\"I'd like to think so,\" he replied. \"But again, that really depends on the why.\"\n\nHe leaned forward. \"Let me tell you something,\" he said. \"I'm not going to use any names here, but let's just say you know them. Anyway, he walked in on her and a boyfriend doing the dirty. It was the first time ever\u2013and he's pretty sure she told the truth about that part of it\u2013but the underlying reason is why he left her.\"\n\n\"Which was?\" I prodded.\n\n\"Which was she didn't love him anymore.\" He looked me dead in the eye. \"Some people can't stand the thought of being alone, so they lasso in the new horse before they cut the old one from the herd. I'm not saying it's right, but it happens a lot. And that's what she was doing. She found someone she thought she could move out of their home and into his and she was kind of taking him for a test drive.\"\n\nI thought this over. \"So if Tara was just caught in a bad situation, maybe didn't really fight the temptation as much as she should have for whatever reason . . . .\"\n\n\"Like you guys are going through a rocky patch or something,\" he offered.\n\n\"Okay, then you're saying that I should just forget it?\"\n\n\"No, I'm not saying you should forget it. I am saying, though, that you should consider it when making the decision about what to do with your marriage.\"\n\nHe leaned back. \"Nick, everyone's different. But if you really and truly love her, and you're convinced she really and truly loves you back, then you may want to consider trying to fix the lawnmower before you throw it away and go buy a new one. Unless, of course, the evidence indicates that the lawnmower's too damned broken to be fixed.\"\n\nI spit my mouthful of beer halfway across the deck.\n\n\"Did you just compare me to a lawnmower?\" Jenny shouted out from the kitchen window.\n\n\"No, dear,\" Teddy yelled back. Then he leaned in close. \"Only you can make these decisions, Nick. You know that, don't you? Only you'll ever really know whether you can salvage a good marriage from this. All I can tell you is that this shit\u2013no matter how wrong; and it is wrong\u2013happens to marriages all the time, and people get over it and wind up happily married for fifty years.\"\n\nI nodded, and we shifted the conversation to other topics as people started showing up.\n\nAbout fifteen minutes after our little conversation, it was my turn to get the beers. Into the kitchen I went, and froze when I saw Jenny and Aimee whispering near the sink as they stirred big bowls of cole slaw and potato salad.\n\nThey froze when they noticed my presence, and Jenny tried to pass it off with a quick hug and peck on the cheek. Aimee, though, couldn't look me in the eye, and she barely managed to mumble a hello in response to my greeting. They'd been talking about me, and I was worried they'd heard too much of my conversation with Teddy.\n\nTrudging back out to the deck with an armful of beers and sodas, I passed them around.\n\n\"Something wrong?\" Teddy asked.\n\nI shook my head and tried to get back into my conversation with the Will, the piano player from the night before, about who was better, Warren Zevon or Ray Charles. After much discussion and too much input from the others, we agreed that it was too much like comparing apples to oranges, though Ray Charles was certainly a better jazz player and Warren Zevon a more versatile songwriter.\n\nAfter thirty-five or so people were gathered, we all decided that now was a good time to play some music. Best get the entertainment out of the way before we were too drunk and got pork grease all over our instruments. Everyone gathered in the pole barn, the inside of which was finished out enough to permit for full-scale sound on a small scale, and I carried my guitars in from my vehicle and plugged them into the spare amplifiers that were sitting around.\n\nAbout a forty-five minutes into it, Teddy begged me to do \"Time to Start Again,\" a hugely successful ballad from our first album and one of the first songs Teddy and I had ever penned. It was about a painful breakup, and the singer was trying to convince the spurned lover that he should give love another shot. The best arrangement consisted only of lead vocal with minimal harmonies accompanied by fingerstyle guitar and a soft piano line. I agreed, and sat on a stool behind the lead vocal microphone, starting the guitar line and waiting for the piano to begin.\n\nWhen the piano line came in, I looked around the crowd and saw Aimee standing at the back, slowly swaying to the music. Her eyes were locked on me, and mine again locked on hers, which is where they stayed through the whole song. For whatever reason (and fuck you, I'm well aware of the reason), I poured my heart and soul into it, turning an already sad song into a real emotional roller coaster. By the end, when the spurned lover answers that he just doesn't know if he's ready and the instruments die out, you could've heard a pin drop. Then I felt a slap on my arm and looked away from Aimee. Everyone in the room was watching us, back and forth. Aimee, too, noticed, and she turned a bright red as I tried to concentrate on something else.\n\n\"I think it's time to take a little break here, don't you fellas?\" Will suggested from the piano.\n\nEveryone agreed, and everyone started filing out of the pole barn in search of cold beers and lemonade. In little more than a minute, the barn was empty except for Aimee and me, me still on the stool and her still standing thirty feet away.\n\n\"I heard the whole conversation earlier,\" she said after a moment. \"You and Teddy, on the deck.\"\n\nI tried to smile, but failed. \"Yeah, well . . . .\"\n\n\"I'm sorry,\" she said. \"I know what it's like, and I have some idea what you're going through.\"\n\n\"Thanks,\" I finally managed to say. What the hell was wrong with me? She'd spoken more to me in the past twenty-four hours than in the previous twenty-four years combined. In response, I'd now managed a whopping three syllables.\n\n\"Did you like it?\" I tried. \"The song?\"\n\nShe sniffled a few times. \"It was beautiful,\" she said. Then she tried to laugh. \"I swear, Nick, if I go out there right now I'm going to bust out crying.\"\n\nI smiled. Then I slid the capo down the neck of the guitar to the second fret and started playing another number. \"Maybe this will cheer you up then,\" I said. I started singing \"If I Only Had A Brain\" from The Wizard of Oz.\n\nSome tears had welled up in the corners of her eyes, but she started wiping them away and laughing, her lips occasionally syncing the lyrics. Toward the end, I heard her faint soprano voice join in for the encore.\n\nFinished, I patted the seat of the stool beside me. \"C'mon,\" I encouraged, \"let's sing another.\"\n\nShe looked over her shoulder, hesitant. \"Don't make me beg anymore,\" I said, maybe a little too serious. Either way, she was soon seated next to me.\n\n\"So I take it that was your little boy in the pool when I got here?\" I started, plucking some notes while I spoke.\n\nHer face lit up. \"Brighton,\" she said.\n\n\"Adorable,\" I noted.\n\n\"Thanks.\"\n\nI fiddled around on the guitar for a few minutes, snatching the occasional glance at her and smiling when our eyes met. She was less shy, I noticed, and I decided to just say what Ron had been after me to say for a decade.\n\nI stopped playing and folded my arms over the top of the guitar. \"I've wanted to say something to you for a very long time,\" I started. Her face got serious, maybe a tinge of fear in her eyes. \"I don't want this to come out wrong, and I'm not really\u2013\"\n\n\"Me, too,\" she jumped in, putting a hand on top of my forearm and stroking it lightly. \"Since you asked me to Homecoming.\"\n\nThe look of utter disbelief on my face was hard to mask, and she looked into her lap as she continued. \"I blew it. I wanted you to ask me, but when you did I was terrified. I wanted you to try again, but knew you wouldn't.\"\n\nShe looked back into my eyes. \"I've wondered these past years, especially the last three years since my divorce, how much everything would've been different if I'd just managed to say yes.\"\n\nI still had that look on my face, and it must have been getting more incredulous.\n\n\"Say something, Nick.\"\n\n\"Well fuck me,\" I whispered. \"Didn't see that one coming.\"\n\nShe giggled, then laughed, and soon we were both laughing at the ridiculousness of it all.\n\nThen she got a serious look on her face. \"But that doesn't do either of us any good right now,\" she said. \"I'm not going to seduce you, and you'd damned well better not seduce me. You're married, Nick, and I'm not going to play the other woman in that little drama.\"\n\nI leaned my head down and rested my cheek on top of her palm, enjoying her smooth, cool skin. \"After ten years, I'm just glad we're both able to manage complete sentences around each other, Aimee. Tell the truth, I'm not really looking to inflict my baggage on anyone right now.\" I lifted my head and looked back into her eyes. \"Especially someone I care so much about. Okay?\"\n\nShe nodded. \"And don't you think I'm gonna be there for you if you decide to leave her,\" Aimee continued. \"I want to make it clear, Nick Harlan. I'm fond of you, but we don't know each other any more. So you'd best not be thinking you can just go get a divorce and hop right into my bed, got it? I'm not a part of that equation. This is between you and your wife. Teddy's right: You need to decide what you want. I just want you to know that if you think you want me more than you want her, don't be relying on that, understand?\"\n\nI nodded, more than a little sad. Tell you the truth, our sudden conversation had dear old Tara damned near out the door until the last little part of the conversation. Aimee was right, though. No sense moving from one wet dream to an old high school dream with someone I barely knew. My pecker had done enough thinking for me to last a few lifetimes, and it seemed high time to really start getting my shit together.\n\nThus, it comes as no surprise that we then heard a helicopter whup whup whupping into a landing nearby, and a whole new mess of shit was about to be dumped into my lap.\n\nCHAPTER THIRTEEN\n\nAimee and I stood outside the doors of the pole barn and watched the rotors of the helicopter come to a stop a couple of hundred feet away. Then the side door opened, and I watched Teddy's little girls tear off with open arms, screaming \"Uncle Ethan!\" I was surprised they knew Ethan, particularly well enough to call him Uncle Ethan. I, on the other hand, was a total stranger to them, and my guilt returned at having not stayed closer with Teddy.\n\nEthan hopped out of the copter and turned, holding his hand out and helping an older gentleman get out after him. I swore under my breath when I recognized him\u2013Monty Evans, the exec at Columbia in charge of negotiating our contract.\n\n\"You know him?\" Aimee asked.\n\n\"Yep.\"\n\nI walked toward them, soon joined by Teddy as we strode across the lawn. Teddy seemed pleased to see Ethan and puzzled by the obvious anger on my face.\n\n\"Hey, fellas,\" Ethan said with a broad grin. \"Mind if we crash your party?\"\n\n\"Of course not,\" Teddy replied, shaking Ethan's outstretched hand before introducing himself to Monty.\n\nI, on the other hand, ignored both outstretched hands, preferring to glare.\n\n\"Come on, Nick,\" Ethan pleaded. \"Don't be that way.\"\n\n\"What're you doing here?\" I said to Monty.\n\nHe fidgeted in response. \"Well, perhaps this isn't the most, uh, conventional way of doing this.\"\n\n\"I'm on vacation,\" I shot back. Turning to Ethan, I continued, \"I thought that point was made crystal clear.\"\n\nEthan ignored my anger and went back to smiling. \"Shit happens,\" he said. Then he took off toward the house, speaking along the way. \"The newest shit is the video of you guys last night pasted all over the internet.\"\n\n\"Sorry, Nick,\" Monty said. \"You, too, Mr. Cooper. This is becoming huge, though, and we can't wait any longer or it'll get a whole lot worse. I don't suppose you can get the rest of that band out here, can you? The ones you were playing with last night?\"\n\n\"They're up at the house,\" Teddy said, his voice getting wary.\n\n\"Can you both spare maybe fifteen minutes of your time here?\" Ethan said. \"With the other guys from last night?\"\n\n\"No,\" I said. \"We're having a cookout. This is neither the\u2013\"\n\n\"Nick, will you please just humor me on this?\" Monty pleaded. \"You really don't understand. The shit's hitting the fan over the video and the rumors about you and Tara and Carl.\"\n\nEthan stopped and wheeled on me. \"Goddamnit, Nick, you don't understand,\" he said. \"Monty's bosses now have the whole story. Hell, all of LA has the whole story, and it'll be all over the papers, the news, the fuckin' internet within twenty-four hours. And his bosses are understandably hesitant to even continue talks with LeadFoot at this point. The whole thing's too explosive for them, and they don't want to spend millions to be left with their dicks in their hands if Carl's little escapades have caused, or can still cause, a major rift. Understand now? You may be in the unemployment line\u2013your career on some serious skids\u2013unless we get this dealt with before the shit hits the fan.\"",
        "I let it all sink in. My first thought was, So what? I was thinking about quitting anyway. Still, Walter's little ditty about making sure I had something else to do came to the front, and I decided I didn't want to so severely limit my options.\n\nMonty interrupted my thoughts. \"Yeah, it was looking real bad last night. But that all changed when those videos started showing up on the internet this morning.\"\n\nTeddy smiled. \"How so?\"\n\nEthan's smile was enigmatic. \"Let's wait until we have the whole band together, okay?\"\n\nSo we walked the rest the last hundred feet in silence. I guided Ethan and Monty to the pole barn while Teddy went out to gather up Will, bassist Rob, and drummer Jimbo.\n\nI watched them stroll into the cavernous room, all but Teddy a mix of nervous excitement. Will was tall and gangly with an unkempt shock of brown hair, intense, brooding manner, and classic pianist's hands, which is to say his fingers were long as hell. Rob was hidden behind Will, but stepped around him to present a crew cut of blonde hair, clear blue eyes, and a wrestler's physique of muscular arms and broad shoulders tapering to narrow hips and bandy legs. Jimbo had an aw shucks quality about him, maybe five ten, neither skinny nor fat in the way farm boys are usually built around Grant City, short brown hair parted on the side, and an open face incapable of hiding emotion. All three fidgeted as the introductions were made by Teddy.\n\nSurprisingly, Teddy seemed amused. I had a feeling I knew where this was headed, and I'm sure Teddy knew, as well. I expected him to be impatient or aloof, but he just had a quiet smile that betrayed nothing.\n\n\"Boys,\" Monty started, looking at the three college students, \"I'm sure you're all well aware that your little show from last night has created quite a bit of . . . shall we say interest?\"\n\nTheir grinning looks between each other told me they were well aware of their YouTube success.\n\n\"That was all well and good,\" Monty continued, \"but my boss got a call this morning, and he now shares that interest.\"\n\n\"Go ahead,\" Ethan prodded. \"Tell them who called.\"\n\nMonty looked at all three of them, then his eyes settled on Teddy. \"Bob Dylan, if you can believe it. He loved your version of 'Lily, Rosemary and the Jack of Hearts.' Said he'd never heard it done better. Singing, arrangement, the whole thing.\"\n\nTeddy nodded as if this was everyday shit for him. I, on the other hand, didn't bother hiding my surprise, and I appreciated the high five between Will and Jimbo, who were obviously tickled pink. I don't give a good Goddamn whether you like Dylan's music or not; in the industry, he's a certifiable fucking genius. When Bob Dylan speaks, which is seldom, record executives listen, particularly since he reinvented himself about ten years back and proved once again his ability to create.\n\n\"Teddy, I'm not saying we liked everything we saw and heard, mind you,\" Monty continued. \"I spent half the morning watching the other videos from the show. They weren't the best quality, tell you the truth. Still, we want to see what you've got, if you don't mind.\"\n\nTeddy just nodded. \"Now?\"\n\nMonty nodded in response. \"If you don't mind.\"\n\nTeddy looked at the boys, then to me. \"All of us?\"\n\nI understood what this meant, and so did everyone else. My eyes lit on Ethan and stayed there.\n\nAfter a moment, he nodded. \"All of you,\" he said.\n\nTeddy looked at me and shrugged, the smile beginning to disappear. \"I suppose I'm game,\" he said. He was looking unsure now.\n\n\"Me, too,\" I said.\n\nTeddy let go a long breath. \"Okay,\" he said. \"You guys get it all turned back on and I'll go get everyone back in here.\"\n\n\"Wait,\" Monty said. \"We'd rather just see you without any interruption if you don't mind.\"\n\nTeddy just ignored him, and Ethan and Monty both turned to me for help.\n\n\"Don't look at me, boys,\" I said. \"Might as well get used to it now if this is what you really think you want.\"\n\nSo we did it. We played four more numbers, two rollicking tunes, one ballad, and one medium tempo. Monty recorded everything on a hand held camcorder to show later to the suits back in LA. Granted, the sound would still suck, but it would still beat a cell phone video uplinked to YouTube.\n\nWhen we were done, Monty thanked us and passed on the invitation to stay for the food. Instead, he promised to call the next day sometime, hopped back into the chopper, and was gone.\n\nEthan, on the other hand, stuck around for the festivities. I was amazed, and my guilt at being gone so long compounded further, when I noticed that nearly everyone knew Ethan on a first-name basis.\n\nWithin an hour of the show, I was helping Teddy haul the pork shoulders out of the smoker.\n\n\"You really interested in this?\" I asked.\n\nHe smiled. \"We'll talk away from prying eyes.\"\n\nWe let the shoulders rest under a massive tent of aluminum foil. Meanwhile, I made the rounds, chatting for awhile with Mom and Dr. Bob and Will, all of whom knew each other. Mom dropped a bomb on me when she informed me she had helped Teddy recruit Will, Rob, and Jimbo from Chadwick College.\n\n\"Easy enough,\" she said. \"Just ask the music professors who was worth a damn, then put 'em in touch with Teddy. He took it all from there.\"\n\nAfter a half hour, Teddy called me into the kitchen to help him shred the pork shoulders for sandwiches. He handed me two plastic gizmos he called bear claws and showed me how to use them. Then we each speared a shoulder and got to work shredding fifty pounds of fatty pork into pure barbecue goodness.\n\nTeddy allowed me to get the hang of it before he spoke.\n\n\"All right,\" he said. \"The answer is yes, I'm giving this some serious thought.\"\n\nI said nothing, not really knowing what to say.\n\nAfter a few minutes, I noticed Teddy was no longer shredding and I looked up. He was staring at me. \"Say something.\"\n\n\"Okay,\" I replied. \"Do you have any idea what you're getting yourself into? What you're getting your family into?\"\n\nHe smiled that lazy smile. \"I know exactly what I'm getting myself into,\" he said. \"This has been a long time coming, and we've prepared very carefully for this day.\"\n\nNow it was I who stopped, waiting for clarification.\n\nThe clarification came in with Ethan breezing through the kitchen door. He took in both of us and said, \"You're not telling him now, are you?\"\n\n\"Yep,\" Teddy said. \"Might as well get it over with.\"\n\n\"Telling me what?\" I said, a feeling of dread washing over my limbs.\n\nEthan ignored the question and rummaged through a drawer until he found yet another pair of bear claws. Then he joined us and started tearing into the pork. Not only does he seem to know everyone, I realized, but Ethan Rose, the Jewish kid from Jersey, knew how to shred pork\u2013not that I'd ever known him to give a shit about keeping a kosher table\u2013and even knew where the kitchen utensils were stored. This was a set up, I now knew, and I went back to work waiting for the explanation to come out.\n\nEthan finally broke the silence.\n\n\"Truth be told,\" he said, \"LeadFoot hasn't really been worth a shit since the second album. You're a great songwriter, but all of your best stuff was when you combined with Teddy.\"\n\nI nodded. He was right, of course. We'd been riding the wave of our initial popularity since then, though it had still been good enough to sell millions of albums and sell out hundreds of arenas.\n\n\"So five years ago,\" Ethan continued, \"maybe ten months after the Grammy when you guys swept 'em, I flew in to see Teddy. I saw a small decline in the songwriting even then, and I wanted to get Teddy's take on it. So he shows me all the stuff he was still writing.\"\n\nI looked up at that. I had no clue Teddy was still writing. We sure as hell hadn't played any of it the night before.\n\n\"It sucks,\" Teddy said.\n\n\"Good enough for album filler,\" Ethan continued, \"but not a hit in the lot of it.\"\n\n\"You always were the better songwriter, Nick,\" Teddy continued. \"Ethan's spent the past five years, then, trying to talk me into getting back together with you.\"\n\n\"So why not just call?\" I asked. \"We could've collaborated. You could've stayed out of the rest of it.\"\n\n\"I was going to,\" Teddy said. \"About a year and a half ago, I got ahold of Ethan and told him to approach you.\"\n\n\"But that was in the middle of studio sessions for Cactus Rose,\" Ethan said, naming our most recent album. \"All the songs were already written, and you were burned out from the studio sessions. The time wasn't right, and we were at the end of the record deal.\"\n\n\"So why didn't you just wait awhile and then tell me?\" I said.\n\nNeither of them would meet my eyes on that one, and I waited for an answer. After a minute, I put down the bear claws and put my hands on the counter, leaning into it.\n\n\"Fess up, fellas,\" I said, more than a hint of growing anger coming through.\n\nTeddy looked up first. \"About five months ago you gave Ethan the next batch of songs. You'd just come off the American tour, and you'd spent most of the time writing. He shot them along to me for comments, and I went over them. Re-worked most of them, actually.\"\n\nThis was a pleasant surprise, and I had no idea what was so wrong with this. \"Okay, good, then they're better than I thought.\"\n\nMy smile soon disappeared, though.\n\n\"Ethan, the songs we've been negotiating with are mine. Teddy's never been near them.\"\n\n\"Aw shit,\" Ethan said. \"Nick, I got the songs back about two months ago, just before the negotiations started. They're better. Way better, actually. Not quite there yet, but close.\"\n\n\"Then why aren't we using them?\"\n\n\"Because Ethan learned about Carl and Tara about a week before he got my re-writes,\" Teddy said.\n\nI felt the anger boiling, my jaw all tense and my hands now balls of fury I struggled to keep locked on the counter before me.\n\n\"You've know about this for two months and you didn't fucking tell me?\" I said to Ethan. \"And you,\" I said to Teddy, \"you just told me a few hours ago to find out the why before I made a decision? You knew, too?\"\n\nThey looked to each other, then back to me.\n\n\"My advice remains unchanged,\" Teddy said. \"Neither of us has a clue how long it's been going on or how many times they've gotten together or, most importantly, why it even happened in the first place.\"\n\n\"But Jesus, Teddy, you should've fuckin' told me.\"\n\nNow he threw down the bear claws. \"When, Nick? Huh? You wanna answer me that? When the fuck what I gonna tell you? You haven't said shit to me in six years. Think about that. Six fucking years. You didn't even know I was married, did you?\"\n\nMy anger at him was now mixed with shame. He was right, of course.\n\n\"I sent you a friggin' invitation to the wedding, Nick. You blew it off, not even a fuckin' card. So you wanna tell me when I should've told you? Or better still, why the hell I'd have even bothered?\"\n\n\"Theodore Cooper!\" Jenny yelled from the door. We all looked at her, and the look on her face was enough to put fear in the hearts of greater souls than ours. \"You have guests outside,\" she hissed. \"I don't think they need to hear this . . . this . . . this bullshit. Do you?\"\n\nWe all hung our heads, mumbled our apologies, and went back to shredding the pork. She turned, slammed the door behind her, and we soon heard her cheery voice telling everyone it was just boys being boys.\n\n\"I never saw the invitation, Teddy,\" I said. \"I'm really sorry. Tell you the truth, I've felt like shit since first seeing you. You've been real good, and I have no right to expect it.\"\n\n\"And what I said stands,\" he said. \"You still need to find out more. Hell, if they've only screwed a few times, and if you can live with the reason . . . . I'm not saying I'd forgive her and try to keep it together. Still, I'm not you, and I think you really need to see it through.\"\n\nI nodded. Then I looked at Ethan. \"You, though,\" I said, keeping my voice down. \"It's just the money, isn't it? You were afraid to tell me because you're afraid it'll kill the band and your cash cow gets killed, right?\"\n\n\"No, Nick,\" he said. \"It's not just the money. You're like a brother to me. You're the only one I've ever gotten on with\u2013well, you and Teddy. I just didn't want to see you out in the wilderness. You quit LeadFoot without a backup plan and . . . well, I'm not sure. I just know I didn't want to see you disappear, okay?\"\n\n\"And he did tell you,\" Teddy said.\n\n\"No he didn't,\" I shot back. \"I walked in on them Teddy.\"\n\n\"You walked in on them because I ended the negotiations three hours early that day,\" Ethan said.\n\n\"You knew they would be together?\"\n\nHe nodded. \"I had someone keeping an eye on Carl. When he pulled into your driveway, I got a text message right as we started. Remember how I got all pissed off early on and stormed out, ending the session?\"\n\n\"Why didn't you just tell me?\"\n\n\"Would you have believed me? Me over Tara? Or even Carl for that matter?\"\n\nI snickered. \"Well, over Carl for sure. He's a pussyhound.\"\n\nBut he was right, and I knew it. I'd have been pissed at him for even suggesting Tara was cheating on me.\n\n\"Why try to get me back for the negotiations then?\"\n\n\"He didn't think you'd do a runner,\" Teddy said. \"He thought you'd go straight to him and either demand Carl be booted\u2013\"\n\n\"Which I immediately suggested,\" Carl interjected.\n\n\"Or just quit LeadFoot altogether,\" Teddy finished.\n\n\"At which time I was going to show you the re-writes from Teddy, get the record deal, and keep your career intact,\" Ethan added. \"Oh, and help you find a new bass player.\"\n\n\"And you helped him on this?\" I said to Teddy.\n\nHis lack of denial told me he had.\n\nThis was a lot to take in all of a sudden. Truth be told, I was pretty pissed. Still, why be pissed at either of them? I doubted very much I'd have played it any differently. Sure, Ethan was looking out for his wallet, but he was really looking out for me. And for LeadFoot, too, which we paid him bundles of money to do. Then it occurred to me.\n\n\"Okay, if all of this was to keep LeadFoot together and Teddy back on board helping with the songs, then what was this afternoon about?\"\n\n\"No one at Columbia's ever seen anything like it,\" Ethan said. \"Those YouTube scenes? They're dynamite. Sure, you're in 'em, and that's going to guarantee some big interest. These are way bigger than that, though. Hell, they're like that British chick on that show. Susan Boyle, I think? Anyway, this is bigger even than that. The word of mouth went over the net like wildfire. Monty check before we landed here and it's already had over twenty million hits on three of the seven videos, and the other four are over fifteen million.\"\n\n\"And I suppose you don't just ignore Bob Dylan, do you?\" Teddy said, his lazy smile back.\n\n\"Not if you want to keep your job at Columbia you don't,\" Ethan confirmed. \"So they wanted to see if there's a way to cash in on this. Right after Dylan called, Monty called me and asked if this was something that I thought could work. The two of you getting back together. I drove right over to his place and showed him the re-writes. He looks through them and just drops the whole folder of songs on the floor.\"\n\nEthan smiled. \"If I'd shown him those songs from the get go, we'd have already gotten the contract and now be in the position of kicking Carl out of the band in the middle of it.\"\n\nAt that, my anger vanished, and it was hard to contain my grin. \"So he's really pretty much fucked now, isn't he?\"\n\n\"Worse than you think,\" Ethan said, relieved I was no longer angry. \"He's damned near broke.\"\n\n\"Really?\" Teddy said.\n\nEthan nodded. \"He spends the shit faster than he makes it. And unlike you two, he doesn't have song royalties coming in. He gets some proceeds on album sales, but they can't finance his champaign and caviar lifestyle. Nick, you own\u2013with Tara, by the way\u2013a really nice place in Brentwood. But you've seen Carl's places, right? His goddamned ski lodge in Aspen, condo in the Big Apple, mansion in Malibu. Hell, I think he just got a place in London.\"\n\n\"What the fuck's he gonna do in London?\" I asked, laughing.\n\n\"Chase London chicks,\" Teddy suggested, which evoked knowing laughter all around.\n\nWe finished shredding the pork and piled it into serving trays. I held back as Ethan carried the first tray out the kitchen door.\n\n\"Teddy?\" I said, and he paused. \"I really am sorry, man.\"\n\nHe turned. \"I may have come across a bit more harsh than I meant to,\" he said.\n\nI shook my head. \"No, you were right. I've been a no show. And I can't believe I never saw the wedding invitation.\"\n\nHe got the lazy smile. \"I may have been laying it on a bit thick there,\" he said. \"I intentionally sent it to your home in the middle of your worldwide tour knowing you'd never get it in time. Sorry, old buddy, but I just wanted a normal wedding. Having the members of LeadFoot there would have made for anything but normal.\"\n\n\"Prick,\" I said.\n\n\"Jag off,\" he said back.\n\nWe carried our trays onto the deck and laid them next to the buns on the serving tables.\n\nAs I turned back to the crowd, I caught Aimee watching me, a pensive look on her face. Teddy walked over to her, kissed her forehead, then whispered something. She turned back to me and her face relaxed. I smiled, and she smiled back. Then a pang hit as I wished I had been the one kissing her forehead and whispering soothing explanations into her ear.\n\nI grabbed a beer and stood off in the corner, alone with my thoughts. I realized now that Tara had been cheating on me more than just that once, and it sounded like it had been going on for some time. There was little doubt that I'd never get over it, and I was sure my marriage had officially gone the way of the dodo bird. Nevertheless, I decided to take Teddy's advice and at least hear her out. After five years together, I really wanted to know the full extent of what she had done\u2013or at least as much of it as she was willing to share.\n\nI felt a hand on my shoulder and turned. \"Penny for your thoughts,\" Aimee said softly.\n\n\"Just thinking of something my father used to say,\" I said. \"'Some days you're the pigeon, and some days you're the statue.'\"\n\nShe laughed, and her face lit up with her laughter. I'd never heard her laugh before, and I'd never seen such a look of pure joy on her face. I was suddenly giddy at having given her that look, that uninhibited laughter.\n\n\"So which are you?\" she asked. \"The pigeon or the statute?\"\n\nI shrugged and smiled wide. \"Don't know yet,\" I said. \"But things sure are looking up.\"\n\nLittle did I know what the morrow held in store.\n\nCHAPTER FOURTEEN\n\n\"You'd better get up,\" Walter grumbled in my ear.\n\nI turned, surprised to see him this early. The bedside clock told me it was a little after nine, and I'd slept enough.\n\n\"What's the problem?\" I asked him.\n\nHe looked outside, then back to me. \"The little tramp didn't bother waiting,\" he said. \"She's been on the morning shows spilling the beans, telling everyone she's leaving you because you're a womanizer.\"\n\nI smiled. This sure was one weird dream. I thought he'd just said\u2013\n\n\"I said get the hell out of bed,\" he thundered. The blankets flew off of my as if torn by an unseen hand.\n\nI froze. He'd never done anything like that before, and I didn't even know he had the ability to move things.\n\n\"Yeah,\" he said, \"just like a real ghost. Now get your ass out of bed and get ready. The press will be swarming down there any minute now.\"\n\nHe was right, and I scrambled to get cleaned up as quickly as possible.\n\nFifteen minutes later, I was in the kitchen looking at a fidgeting Dr. Bob and a pissed off Carol.\n\n\"You've heard already?\" Carol demanded.\n\nI nodded, and she didn't bother asking how I knew.\n\n\"Is it true?\" she barked.\n\nI shook my head. \"Not even once,\" I said.\n\n\"Told you so,\" Bob said, patting my shoulder.\n\nOur home phone rang. Carol picked it up, said hello, then handed it to me. \"It's Ethan,\" she said.",
        "\"Good morning,\" I said into the phone.\n\n\"Not yet,\" he replied, sounding more chipper than I thought he would. \"But it's going to be a real good morning real soon.\"\n\n\"What's going on?\" I asked.\n\n\"Looks like they jumped the gun,\" he said. \"Tara's agent and publicist have decided you're not coming back, and it looks like they've gone on the offensive to protect her image and make her look like the scorned spouse here.\"\n\nI nodded. Jesus H. Christ, why did she do this without talking to me? I'd have kept quiet. Shit like this was the last thing either of us needed.\n\n\"How you thinking about playing this?\" I said.\n\n\"I'll tell you when you get here,\" he replied.\n\n\"Get where?\"\n\n\"Teddy's house,\" he said. \"Wait until the first of the media show up, then get in your vehicle and get out here.\"\n\n\"Why wait?\" I said.\n\n\"So they'll follow you out here. No sense in putting your mother through this shit on a Sunday morning.\"\n\n\"But what about Teddy's family? There's no\u2013\"\n\n\"We're fine,\" Teddy said on another line.\n\nA half hour later, I pulled into Teddy's driveway, a trail of news vans close behind. They must have learned their lesson from the day before, though, because they all parked on the shoulder of the road and none of them came onto Teddy's property.\n\n\"So what happened?\" I asked once inside Teddy's living room.\n\n\"This,\" Teddy said. He clicked his Tivo and the talk show came on.\n\nI watched.\n\n\"Tara,\" the interviewer said, her voice dripping in false sincerity, \"there are rumors that your marriage is in trouble. Any truth to that?\"\n\nTara tried to smile, but failed. A great act, I recognized; I'd seen her do this a million times before.\n\nGetting no response, the interviewer smelled blood in the water and drew her knives. \"I'm sorry if this is uncomfortable for you, but the word in Hollywood is that you've started seeing Carl Simpson, your husband's fellow band member in LeadFoot. Is that true?\"\n\nTara started out softly, and the camera zoomed in on her feigned pain. \"Carl and I are friends,\" she said. \"I admit that we've been seen together, but he's there solely as a friend to help me through this extremely painful time in my life.\"\n\nThe interviewer struggled to contain her glee. \"And what painful things are happening in your life right now?\"\n\nTara looked directly at the interviewer and switched to a look of fierce determination. \"Nick has been conducting a series of affairs,\" she said. \"Carl was the one who shared this information with me. I didn't believe him at first, but my agent, who's also one of my oldest and dearest friends, insisted I try to verify the tales of Nick's infidelities. We have confirmed that Carl was telling the truth.\"\n\n\"How many women has Nick been seeing?\" the interviewer asked, not believing her good fortune.\n\n\"I'd rather not discuss that,\" Tara said. \"Suffice it to say I confronted him with my discoveries last Wednesday, and he stormed out and I haven't seen him since.\"\n\nTeddy clicked the television off and turned to me. He tried to keep that lazy smile on his face, but he managed only to look upset about the whole thing.\n\nEthan, on the other hand, was smiling. \"Well,\" he said, \"looks like events have overtaken us.\"\n\nI nodded. Guess Tara and I wouldn't be having that little talk after all. She'd forced my hand, and I now decided to play the cards I'd been dealt\u2013the cards she'd dealt me, actually, from the bottom of the deck\u2013and get her out of my life.\n\n\"The choice is now yours,\" Ethan continued. \"We can either let her get away with this, or we can bury her.\"\n\nMy eyebrows rose at this, and I looked at him waiting for him to continue.\n\n\"I've documented her little tryst from the moment I learned,\" Ethan said. \"We've got photos, videos, and affidavits. After our little discussion yesterday, I also got on the line back to LA and got some people onto digging some more. I've already heard back from them this morning, and we may have quite a bit more coming out soon.\"\n\nMy jaw dropped. \"There's more?\" I said.\n\n\"Yep,\" Ethan replied. \"Seems she's slept with a few of her co-stars. Half the cast and most of the crew know all about it, and a few are willing to share in the sordid details.\"\n\nI went cold all over. This was standard bullshit for Hollywood, but I'd never suspected my marriage\u2013or my loving wife\u2013were the norm. The past few days had shown, though, that I was apparently just another part of the perfect facade of America's Sweetheart. She was bright, bubbly, charming, and a loving wife. Not!\n\n\"So what'll it be?\" Ethan asked.\n\nI looked to Teddy. He stared straight back at me, his jaws nervously clenching and unclenching.\n\n\"Bury the bitch,\" Jenny shouted from the kitchen.\n\nI giggled. \"You?\" I said to Teddy.\n\nHe nodded. \"Talking won't do you any good, partner. I think you now have all the answers you need to know where your marriage is.\"\n\n\"So let's talk about the options,\" I said to Ethan. \"If we do nothing?\"\n\n\"Do nothing and it's your career that takes a beating. Makes any new record negotiations for Mustang Ranch problematic at best.\"\n\n\"Come on,\" I said. \"This shit happens all the time. Never hurt Mick Jagger, did it?\"\n\nEthan laughed. \"No,\" he agreed. \"Then again, Mick Jagger's whole image was always the bad boy. Your's, on the other hand, has always been the quiet, thoughtful poet. The good boy, in other words. Let this go unchallenged and you risk destroying the image. From Columbia's point of view, they risk untold millions on a sudden unknown. Remember, Nick, you've got tremendous crossover appeal, both the country and the rock markets. The rock fans won't carry, but old Marge in Fucksville, Mississippi\u2013who goes to church every Sunday and drags her husband along\u2013she's going to have a problem with you.\"\n\nI looked out the picture window at the gaggle of vans lined up and down the road, then I turned back to Ethan. \"All right,\" I said, \"tell me how to play it.\"\n\nHis grin went ear to ear, and he clicked open his briefcase.\n\nTwenty minutes later, Teddy had the press all set up in the pole barn. They were ready when I stepped in and strode to the front.\n\n\"Nick,\" they shouted in unison, then a flurry of questions shot my way in a cacophony of sound.\n\nWhen they finally quieted down, I started. \"Same rules as yesterday, folks,\" I said. \"We'll start with the ladies, then go from my left to right with the men.\" I looked at the young cutie that had started the day before. \"Sorry, but you went first yesterday,\" I said, then turned to the smartly dressed professional who had gone second the day before.\n\n\"Mr. Harlan,\" she started. Her tone was condescending, and her eyes were ablaze with anger. She was either pissed at my evasions from the day before or furious that I could so blatantly cheat on poor Tara Boyd. Ethan suspected she'd be the ideal first choice, and her tone told me this was going to go down as planned.\n\n\"Ms. Lockhart?\" I responded, trying to keep an innocent look of pain on my face.\n\n\"Mr. Harlan, your wife this morning told Valerie Plymouth that you have ruined your marriage with a long series of affairs. Is there any truth to her allegations?\"\n\nI took a deep breath, turning to make eye contact with the gathered reporters before turning back to the minx who thought she had me dead to rights.\n\n\"I very much regret to say that Tara was at least partially correct,\" I started. At this, a dozen lightbulbs flashed and temporarily blinded me. This helped me keep the grimace of pain on my face as I continued. \"Tara was correct in that our marriage is most definitely over. She was incorrect, though, in alleging that I was ever unfaithful to her or to our marriage.\"\n\nAt that, I pulled the contents from the manila envelope in my hand. Then I turned to the young cutie from Entertainment Tonight.\n\n\"Your turn, Ms. Miller,\" I said.\n\n\"So you're saying you've never cheated on your wife?\"\n\n\"Not once,\" I said. \"If she has any proof to the contrary, which she claimed this morning, then I'd sure like to see it. Because I'll tell all of you right now: Until Wednesday afternoon, when I walked in on my wife and one of my oldest friends in the world having sex in our house, I thought I had the perfect marriage. Now, however, I know that is not the case.\"\n\n\"You're saying she was the one cheating?\" the first male in line said as the lightbulbs started exploding in my face and the cameras and microphones moved in closer.\n\n\"Unfortunately,\" I said, \"that is exactly what I'm saying.\"\n\n\"Do you have any proof of this?\" the original cougar demanded, her disbelief evident.\n\n\"Your turn,\" I said to the next man, ignoring her.\n\nHe looked at the cougar and smiled. \"Do you have any proof to back up your allegations?\" he said.\n\n\"This report was prepared by A & R Investigations of Malibu, California,\" I said, holding the papers aloft for all to see. \"As you will all soon see, my wife was somewhat less than truthful this morning, and this report will bear that out.\"\n\n\"In what ways was she untruthful?\" the next reporter asked.\n\n\"She has been having an . . . intensely physical relationship with Carl Simpson for at least the past two months,\" I said, my voice shaking at the end. I took a minute to compose myself, damned near pissing my pants with inner glee as I played the part of scorned husband to the hilt.\n\n\"This report contains dates, times, photographs, and more,\" I continued after a minute. \"And what's more, I've been informed that this was apparently not the first time something like this happened in our marriage.\"\n\n\"Do you know the identities of any others?\" someone shouted.\n\n\"I really don't want to go into any greater detail on any of this,\" I said, stuffing the report back into the envelope. \"My manager will make a redacted version of this report available to all of you shortly. Until then, I just want to make it real clear to all of you. I loved my wife with all of my heart, and I thought she loved me in return. I have been faithful to my marriage and to Tara from the day we met, and I would never have done anything to jeopardize our marriage. I have never cheated on her, and I would have gone to the grave without doing so. I regret to say, though, that it has been a dreadful shock to learn that Tara did not feel the same way and act the same way.\"\n\nQuestions were again being shouted out in a wall of frantic sound. I ignored them, holding up my hands for silence.\n\n\"Ladies and gentlemen,\" I said, \"I know you all want to ask many more questions. However, I ask that you now respect my wishes\u2013my need\u2013to deal with this whole mess privately with the few family and friends that have offered me their support since I learned of all of this a few short days ago.\"\n\nWith that, I turned and exited the pole barn leaving Ethan to deal with the rest of it all.\n\n\"How'd it go?\" Teddy asked.\n\nI was drained. It had been fun for awhile, but now that it was over, it finally all hit me. My marriage was dead; my wife had betrayed me repeatedly and I'd never suspected a thing; and now the whole goddamned world was going to be following this for quite some time.\n\nJenny hugged me, tears streaming down her face. \"You really deserved better, Nick,\" she kept saying. All I could do was hug her back and try to keep the tears at bay. I managed, but barely so.\n\nCHAPTER FIFTEEN\n\nBy noon, the press had all departed and the boys from the band pulled into the driveway.\n\n\"Any word yet?\" Jimbo asked for all of them.\n\n\"He'll be here in about an hour,\" Ethan said.\n\nThis was the first I'd heard of this.\n\nSeeing my look, Teddy spoke. \"Nothing's decided yet,\" he said. \"Let's see what they say, then we'll talk amongst ourselves, okay?\"\n\nI shrugged. Wouldn't hurt to listen, but I was surprised that Teddy seemed to actually be considering this.\n\nForty-five minutes later, Monty drove down the driveway in a Lexus SUV. Once we were all seated around the living room, Monty started.\n\n\"Columbia wants to sign you all to a recording contract,\" he said.\n\nRob and Jimbo exchanged high fives, and Will pumped his fist in excitement.\n\n\"Terms?\" Teddy asked.\n\nMonty laid them out. They weren't great up front, but there were incentives built in if record sales matched or exceeded expectations. All told, it was almost as good as they'd been offering for LeadFoot, which was surprising given LeadFoot's proven durability and popularity. Still, they recognized that my participation was essential to this deal, and Monty made that crystal clear from the outset.\n\n\"So LeadFoot's dead?\" I asked.\n\nHe nodded. \"Tara's little antics this morning guaranteed that,\" he said. \"Your response, while great for your, kills the band, though. They're not interested in re-signing LeadFoot just as the turmoil is hitting.\"\n\n\"What if we get rid of Carl?\" Ethan posed.\n\nMonty shook his head. \"Doesn't matter. Then we've got to deal with an unknown\u2013a new band member and whether the fit is any good\u2013at the beginning of a new contract. Then, of course, there's the songwriting.\"\n\nMonty turned to Teddy. \"It's not just Nick they insist on,\" Month said. \"It's the songs, too. And you. They think there's great chemistry\u2013between all of you.\" He looked around at all of the band members, making sure they understood. \"We want all five of you or nothing. Frankly, fellas, they think they could make a go of it with just Teddy and Nick, but I convinced them otherwise. You guys put up a really different sound, something we're not hearing much of and would like to explore a little more. Still, there's a risk, one that record companies don't often take. That's why they have the terms they do. They don't think they can lose on this with Teddy and Nick's involvement, but I'm convinced the payoff is going to come from what all five of you do.\"\n\nMonty waited patiently while we all took that in.\n\n\"I'd have some condition,\" Teddy said. Then looking at the rest of us, he added, \"Assuming you guys want to do this, that is.\"\n\nI watched Will, Rob, and Jimbo nod enthusiastically. Teddy's eyes then bored into mine, waiting for a reaction.\n\n\"I'm interested,\" I said. \"Doesn't look like I'll have anything else to do, does it?\"\n\nThat seemed good enough for Teddy, and he continued. \"I have a family,\" he said. \"They're going to come first. Always.\"\n\nI smiled, liking where this was going. Monty seemed unsure, though.\n\n\"So I'm going to give this two years and two albums,\" Teddy continued. \"I'll take a leave of absence from teaching. But if I'm not happy with this in two years\u2013if this is hurting my family\u2013then I want an option out of the third album.\"\n\n\"Anyone have a problem with that?\" Ethan asked.\n\nWe all shook our heads except Monty. \"That may change some of the terms,\" he said.\n\n\"The terms don't change,\" Teddy said. \"All that changes is we can opt out of the third album if I want to quit and if they\u2013or you\u2013don't want to do it without me.\"\n\n\"What do we get in return?\" Monty said.\n\nTeddy smiled, and I knew he'd already planned this out well in advance.\n\n\"If we stay together, you get an automatic option for the fourth album on the same terms as the third,\" he said. \"And I won't have the right to withdraw and not participate in the fourth album.\"\n\nMonty thought about this for a moment, then spoke. \"I think I can sell that,\" he said. \"When do you think you can get me an answer on the rest?\"\n\n\"Give us a couple of hours, Monty,\" Ethan said. \"Go get yourself some lunch and come back here at, say, three. See if you can confirm that the terms are good on your end, and we'll let you know in a couple of hours.\"\n\nJenny walked into the room as Monty walked out.\n\n\"So?\" she said.\n\n\"They're offering us a real sweet deal,\" Teddy told her.\n\nShe nodded, biting her lip and turning to me. \"Are you going to take care of him for me?\" she asked.\n\nI looked from her to Teddy then to Ethan, Rob, Will, and Jimbo. They were holding their collective breath, waiting to know whether I was in or out.\n\nThen I saw Aimee standing in the kitchen door, her son on her hip and a look I couldn't read on her face.\n\n\"Well?\" Ethan prompted.\n\nHere I was, a few hours after learning my marriage had disintegrated. Then, to top it off, I learn the band that had been the rest of my life for the past ten years was now no more. And oh, did I mention that I now had two hours to decide whether to start this whole thing all over again with an old friend I hadn't until recently seen in years and three virtual strangers?\n\nWithout a word, I walked out the front door to get some air.\n\nTen minutes later, my thoughts were broken by a quiet presence behind me.\n\n\"I think Teddy really wants a shot at this now,\" Aimee said. \"It's all he's talked about these past few years. He's regretted leaving the band. That's why he got all of those songs to Ethan. He wanted back in.\"\n\nI turned to face her. \"It's all just too much suddenly, you know?\"\n\nShe nodded, empathy painting her face.\n\n\"I mean . . . oh fuck, I just wanted some time to think, to take this all in,\" I said. \"Now that's gone.\"\n\nShe put her hand on my shoulder. \"I don't think it is,\" she said. \"Teddy and Jenny care about you. They'll be here for you. The band . . . well, that'll give you something to do to take your mind off things, right?\"\n\nShe was right, of course. Actually, I couldn't think of a better group of people to be stuck with during the sudden shit storm that seemed to be increasing in intensity.\n\n\"What about you, though?\" I said.\n\nShe was surprised at this. \"What about me?\"\n\n\"If I do this, go back on the road and into the studio and keep at this, how would you feel about that?\"\n\nShe didn't flinch; she'd seen this coming even if I had only just then thought about it. \"How I feel about it doesn't matter.\"\n\nShe took my hand in hers and pulled me along the grass toward the trees at the back of the property.\n\n\"Nick,\" she said, \"there is no us right now. There's you and there's me, but there's no we, okay?\"\n\nI said nothing, and she seemed content to spell it out over my silence.\n\n\"Yes, I like you,\" she said. \"From what I've seen, that is. But we're not the same people we once were, and we never even really knew each other back then. I'm nothing but a vision from your past, someone you think you'll feel comfortable with given all that's happened to you.\" She stopped and turned to me. \"All that is happening to you right now, Nick. You see that, right?\"\n\nFine, she was right. I had my head up my ass and was now enjoying visions long since forgotten.\n\n\"But maybe I want to get to know you better now,\" I said.\n\n\"That's fine,\" she whispered. \"Then that's what we'll do, okay? We'll get to know each other. But I'm not going to go running off into your bed, Nick. Now now. Not with your marriage just now crumbling. I don't need that, and my son sure doesn't need me going through anything like that again in the near future.\"\n\nI listened, staring into her eyes. Sure, I'd heard her. And deep inside I knew she was absolutely right. Still, I leaned in and kissed her. Her lips were pillow soft, her breath minty, her eyes open in horror at first then closed as she started kissing me back. Then, as I gently pulled her into me for more, she broke free.\n\n\"Goddamnit, Nick,\" she said, anger and embarrassment flushing her face and making her eyes sparkle. \"Didn't you listen to a thing I just said?\"\n\n\"Thanks,\" I whispered in response. \"You've at least given me some good dreams for a change. And something to look forward to down the road.\"\n\nHer anger dissipated and she pulled me in, hugging me tightly. I hugged her back, enjoying the feeling of her body against mine.\n\n\"Enjoy this,\" she murmured, \"it's all you're getting from me for quite some time.\"\n\nI enjoyed it and, yet again, she was right: That was the limit of our contact for some time to come.\n\nBack in the house, all were gathered in the living room. I could hear the low conversation as Aimee and I walked through the kitchen door, but their conversation stopped and all eyes turned to me when we entered the front room. Aimee sat on the love seat, leaving room for me next to her. I sat, looked at her, then looked at everyone else.",
        "\"All right,\" I said, \"I've made some decisions here, and I've got some demands of my own.\"\n\nAt that, Rob and Jimbo again exchanged high fives and Will again pumped his fist. I smiled at their excitement and hoped they were ready for what they were getting themselves into.\n\n\"What are your demands?\" Teddy said.\n\n\"I'm not running this band,\" I said.\n\n\"Of course not, Nick,\" Teddy said. \"It's a partnership. We'll all make the decisions together.\"\n\nI shook my head. \"Doesn't work that way, Teddy,\" I said. \"You guys make the decisions and run them by me. But that's it. I don't want to have to make the decisions anymore.\"\n\nI turned to Ethan. \"That's been the problem with LeadFoot for way too long. I felt like the weight of the world was on my shoulders and mine alone. Like I was babysitting a bunch of two-year olds. Now it's time for someone to babysit me, okay?\"\n\nEthan looked at Teddy, who turned to me and spoke. \"But you want the power to veto everything?\"\n\nI nodded. \"It's not like I'm being undemocratic here. You guys just make the decisions then come to me to make sure I'm okay with them, y'know? Gives me a chance to hear what you're thinking and where we're going, a chance to maybe change things if it's a bad idea. And I only mean the major decisions, Teddy. I don't give a shit what we have for dinner or where we stay or, within reason, who we hire. Ethan already knows all of that crap anyway.\"\n\nI looked at all four of them and leaned forward. \"There's no majority rules here, guys. Trust me on this, if three of us start ganging up on the other two, we're not going to make it. So everyone has to agree to all major decisions anyway. But I don't want to have to make the decisions or even be a part of the process anymore, okay? Think of it more as just you keeping me informed after you've made the decision yourselves.\"\n\nTeddy looked at the other guys, and they all either shrugged or nodded.\n\n\"Guys,\" I said, \"I'm in no condition to make these decisions right now. My head's too far up my ass with everything else. So if you want me, these are my terms. Otherwise, we're standard and equal partners on everything. Songwriting's separate, of course, but you'll all have your own chances at that if you want them.\"\n\n\"Works for me,\" Will said.\n\nRob looked at Jimbo, got his assent, then said, \"Us too.\"\n\nI looked at Teddy. \"Well, partner, you wanted this and now you've got it. You okay with it?\"\n\nTeddy looked at Jenny, who gave a pensive nod of her head.\n\n\"Suppose so,\" he said, his eyes staying on Jenny.\n\nWhen Monty returned, he had basic agreements drawn up for Ethan to get to our attorneys for review. Columbia had agreed to Teddy's terms, though, and they didn't need to know about my conditions. That was just between Ethan and my fellow band members.\n\nIn any event, in the past five days, I'd left one of the biggest acts in rock music and one of the most famous and beautiful wives in the world. Now, without time to pause for a breath, I was embarking on a whole new band with a whole new cast of characters.\n\nAll the while, the only two thoughts running through my mind were why Tara had betrayed me so horribly\u2013and apparently for so long\u2013and would I ever be able to make a go of it again with someone new, someone like Aimee?\n\nCHAPTER SIXTEEN\n\nMy first question was answered around noon the following day. Teddy and I had huddled together late into Sunday night working out the kinks on two songs, two songs of mine he'd re-worked and that now needed final polishing. Around eleven on Monday, Will, Rob, and Jimbo joined Teddy and I in the pole barn and started working on arrangements for the first song, \"When I Get Back.\" Will was a pleasant surprise in the arrangement department; he repeatedly offered fresh takes on tempos and arrangements, taking a slow ballad and turning it into a rockabilly number with dual lead vocals and shimmering background underlaid by a pulsing guitar sound, driving bass, solid drums, and complementary piano line. I'd never envisioned the song being played that way. Then again, I'd never had a piano in LeadFoot\u2013unless it was some studio musician brought in for a song here and there\u2013and the new arrangement worked far better with this new lineup.\n\nTeddy was the first to see her. My back was to the door of the pole barn, watching Jimbo on drums and strumming the rhythm on acoustic guitar, when Teddy's lead line ended in a screech. I turned to him with a laugh when my eyes followed his and the joy left my heart.\n\n\"Hello, Nick,\" Tara said.\n\nShe looked like hell. I knew from Ethan last night before he left and Jenny again this morning that the press was having a field day at her expense. It seems the private investigator's report had been confirmed, and now additional affairs were leaking out nearly by the hour.\n\n\"What do you want?\" I said, my voice sounding harsh.\n\n\"Fellas,\" Teddy interrupted, \"why don't we go up to the house for awhile?\"\n\nThey couldn't get out of there fast enough, Rob and Jimbo ogling Tara as they walked past. Play your cards right and you'll have her, I thought.\n\nWhen we were alone, I sat on one of the stools and waited her out. I didn't bother to hide my anger or contempt for her, and she was hesitant to move from the entry of the pole barn.\n\nThen she whispered something, and I couldn't make out what she'd said.\n\n\"What?\" I said.\n\n\"I asked if you could call the dogs off now,\" she said, tears streaming down her face. This was real, I thought, remembering her inability to cry on demand. \"Just tell them to stop. You've made your point.\"\n\n\"I didn't pick this fight,\" I said, my voice rising. \"And now you\u2013who told everyone that I was the wandering spouse\u2013you have the fucking nerve to stand there and ask me to do what you didn't have the decency to do for me?\"\n\n\"It wasn't my idea. It was Janice,\" she pleaded, confirming my thought that her manager was behind this. \"She said you would ruin me unless I was proactive.\"\n\n\"Bullshit,\" I thundered. \"She said you could turn goose shit into goose liver pate is what happened, didn't she?\"\n\nTara didn't bother denying it. \"You were leaving me,\" she said.\n\n\"You were fucking around on me,\" I countered.\n\nAnger flashed through her tears. \"Oh grow the fuck up,\" she hissed. \"You knew about it.\"\n\nI was flabbergasted. \"How the hell can you think that?\"\n\n\"Didn't you ever read the tabloids?\" she said. \"Christ, they printed nearly every hook up rumor there was.\"\n\n\"But you denied them all,\" I countered. \"I quit asking after awhile figuring it was just the usual bullshit.\"\n\nShe said nothing, brushing the tears from her face and keeping her eyes low.\n\n\"Jesus, Tara, with Carl? You had to know I had no fucking clue, didn't you?\"\n\nShe nodded.\n\n\"So what made you think I knew about any of the others? You knew I'd be pissed. That's why you kept it secret. So you also knew I'd be pissed about the others, right?\"\n\nShe nodded again, no longer bothering to play this off with the Nick-didn't-give-a-damn scenario.\n\n\"So how many of them were there?\" I said.\n\n\"Does it matter?\" she asked, afraid of being forced to answer. \"Most of them you now know about. Or at least Ethan does.\"\n\n\"So they're all true?\"\n\nShe nodded.\n\n\"And that's not even all of them? That's just 'most of them?'\"\n\nHer look told me she realized now that she'd said too much.\n\n\"Can't we get past this, Nick? If I stop, can we get past this?\"\n\nI laughed, and her pouty look turned to indignation at being rejected.\n\n\"Let me ask you something, Tara. Let's say you find out every time someone's been coming to your house they've stolen something. Not just a one time thing, but a couple of dozen times. You find out about it, you gonna invite them back?\"\n\n\"This isn't our houseguests, Nick,\" she screamed. \"This is our goddamned marriage.\"\n\n\"That's right. You stole something way more important than silverware, Tara. You stole my fucking self-respect. You gutted something I thought was perfect. Now I wonder if we ever even had a marriage. I wonder if you ever even loved me or if you just needed me as some new publicity stunt.\"\n\nThis brought forth a whole new round of tears. \"You were never a publicity stunt,\" she cried. \"I've loved you since the first time we met. More than I've ever loved anyone, Nick. You've got to believe that.\"\n\n\"That's because you're wrong,\" I shot back. \"You've always loved you more than you've loved me.\"\n\nHer look told me I'd struck a chord with that one.\n\n\"So what you told me before,\" she said, \"on the phone? It's true, isn't it?\"\n\n\"Yeah, Tara,\" I said, knowing what she was talking about. \"I've been faithful to you since day one.\"\n\nShe nodded, again wiping tears from her face and sniffling. \"You're right,\" she finally said. \"I'm not good enough for you.\" She laughed. \"Hell, I wouldn't stay married to me.\"\n\nShe walked over and touched my face with her fingertips. \"Please, Nick, for old time's sake? Can you have Ethan call the dogs off?\"\n\n\"And the divorce will go through on the prenups?\" I asked. \"No protracted legal bullshit? No more attacking me in the press?\"\n\nShe smiled and nodded. \"Cross my heart.\"\n\n\"And my stuff from the house?\" I said.\n\n\"In my car,\" she replied, nodding her head toward the driveway.\n\nI nodded, thinking about it. What the hell? I thought. This would get it over with quickly and with no hassles. I wouldn't have to go back to LA, and I'd be done with her with a few strokes of the pen. Best of all, I realized, the last day's events had already tarred her image as much as it would be tarred, and Carl was now a voice from my past and nothing more. So yeah, was I going easy on her? Maybe a little. But the immediate end of hostilities and an opportunity to move on with my life seemed a small price to pay.\n\n\"Okay,\" I said. \"The divorce gets filed immediately. Irreconcilable differences. And I see the proposed settlement documents by next Monday and it all sails through. Think you can do that?\"\n\nShe hugged me in response. \"I promise,\" she said.\n\n\"You get it done, and I'll call off the dogs.\"\n\nShe broke the hug. \"You think you can call them off now?\"\n\n\"The sooner I have the paperwork, the sooner I get Ethan off your ass,\" I said.\n\nShe wasn't happy, but her look told me she'd gotten better than expected.\n\n\"Thanks, Nick,\" she whispered. She leaned in and kissed me on the cheek. \"And Nick?\"\n\nI looked at her for the last time as my wife. \"Yes, Tara?\"\n\n\"I really am sorry,\" she said, tears again welling up in her eyes. \"About everything. I didn't mean to hurt you, and I still love you.\"\n\n\"I'm sorry, too,\" I said, deciding to call off the dogs now and just re-start the whole sordid mess if she broke her word.\n\nShe was good for her word on this one, though. The settlement documents were delivered by personal courier the next morning.\n\nCHAPTER SEVENTEEN\n\nSo there you have it, the complete true story of those crazy five days.\n\nYou all know the rest of the story by now. Carl went bankrupt about eighteen months ago. They forced him to sell all of those fancy houses of his, and he's living in a smaller house in Malibu. He's playing some studio sessions and you still see him occasionally on the arms of some starlet or another.\n\nVince, our drummer in LeadFoot, quit music altogether. He'd made a series of great investments and wouldn't have to work another day for the rest of his life so long as he kept an eye on things. He's somewhere in Scotland now, painting landscapes and golfing. We speak every couple of months, and he's expressed some interest in maybe working with us on an upcoming album\u2013Will's got some great ideas on dual percussion like the old Allman Brothers Band used to have.\n\nJohn Bouma, the guitar virtuoso for LeadFoot, is actually our producer now. He's still solid, and he works well with Teddy and Will in arranging what sales have shown to be some great tunes. He's producing other acts, too, both in Nashville and in Los Angeles. Like Vince, he was tired of the road, and this has all worked out well for him.\n\nTara, of course, was released from her show when the ratings plummeted in the wake of her divorce. Sure, the divorce sailed through quickly and, sure, I called the dogs off immediately. The damage had already been done, though, and the press took in on themselves to keep digging up the dirt. She appears in the occasional bit part, but her credentials have been seriously tarnished and it will be a long time before she is again America's Sweetheart. Funny thing is, Rob finally hooked up with her. He told me about it before I read about it somewhere, all shame faced and worried I'd be pissed. I just laughed, though, particularly when he told me they'd spent the entire evening in bed with her asking about me and talking about me. Even when they were flopping around in the throes of passion, she'd call out my name now and again. Rob admitted he'd have lost his boner if she hadn't been so friggin' beautiful and energetic. Poor Tara.\n\nThe Mustang Ranch, the whorehouse in Nevada somewhere, tried to rape us over the use of their copyrighted name, and we decided we wouldn't take such a fucking, even if they were professionals at it. Will kept bringing his basset hound around to practice, and he was named General Beauregard. We all agreed that would be a great name for a band. (I don't care what they say below the Mason Dixon; we aren't named after the Confederate general, though maybe the dog was.)\n\nFive months later, General Beauregard's first album was released to universally glowing reviews. That album, Another Happy Face, featuring the real General Beauregard on the cover, eventually sold eight million copies and produced two number one singles on the rock charts and three top tens on the country charts. Our next album, Saturday Night Drive In, released in conjunction with the start of our first major tour, outsold the first and went diamond, selling eleven million copies in little more than a year. The concert tour sold out before we even played our first show, and the reviews of that were, if anything, better than the album reviews.\n\nTeddy seems to be handling everything pretty well. He brings Jenny and the girls along on the tours, and they travel in their own bus. I join them sometimes so we can work on songs, but we rarely get anything done that way with the racket all of the kids put up.\n\nThe kids? Well, you've got Teddy's little girls, plus you've got to count Brighton and Walter. Walter, you all know from the huge cover photo in People was born ten months ago to Nick and Aimee Harlan, the hometown boy made good and his beautiful high school sweetheart. That's how they printed it up, anyways, but now you know that was just a bunch of crap Ethan and the guys in publicity came up with.\n\nThe real story was a little more drawn out. It was actually almost eight months after that weekend before Aimee agreed to a date, and it was a few months more before she finally accepted the proposal I'd made on that first date and every date thereafter. She accepted by proving to me that what you hear about the quiet and reserved girls is all too true, and she's spent almost every free moment since then trying to screw me into an early grave. I'm not terminal yet, though, and I hope she keeps coming up with new tricks to keep my off balance.\n\nWe live in a house just down the road from Teddy and Jenny and the girls. We've managed to keep a close semblance of normalcy in Grant City where everyone has known us both most of our lives and don't really care if we make a lot of money.\n\nAnd Walter? Well, I'll save all of that for another day and another story. Just suffice it to say that he forgave me and sends you all his regards.\n\nThe End "
    ],
    "authorname": "Rehnquist",
    "tags": [
        "infidelity",
        "divorce"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/goin-back-home-again"
}