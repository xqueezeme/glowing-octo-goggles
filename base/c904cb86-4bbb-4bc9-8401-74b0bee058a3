{
    "title": "The Cherry Poppers Ch. 21",
    "pages": [
        "****\n\nFolks, I'm between editors, so rather than keep you waiting I'll go ahead and post this anyway at the risk of some mistakes. Hope you don't mind that but I'm trying to progress for you. As always, feedback welcome. BlewWater69\n\n****\n\nJason drove them back to campus. Casey was more talkative on the ride back to school. Her manner was that of an excited little girl. \n\n\"Wow, I didn't know it could be like that,\" she said.\n\n\"It's the best feeling ever.\" Jason exclaimed.\n\n\"Thank you, Jason, for showing me,\" Casey stated.\n\n\"I'm the one that should be thanking you for letting me be your first.\" He then thought, 'Mark was right that most of these women were thankful to the guy that popped their cherry.'\n\n\"I'm glad you were first even though I know you have other girls like Kira and Tessa.\"\n\n'If she only knew,' Jason thought. \"Yeah.\"\n\n\"I don't care. I'm glad you and I did it,\" Casey said, but then she started to cry.\n\n\"Casey, don't!\" Jason exclaimed.\n\n\"Don't worry,\" Casey said through her sobs. \"It's not about you. It's my Daddy.\"\n\n\"Don't tell him.\"\n\n\"Jason, it's not that easy. You don't understand.\"\n\n\"Tell me.\"\n\n\"Some other time. Right now I'd rather remember the joy and pleasure of being with you. Thanks.\"\n\nJason dropped her at the dorm and kissed her goodbye. He promised to see her again soon despite knowing the difficulty of that statement. After she got out, he drove back to the frat and proceeded to take a shower. In the strong light of the shower stall, before he got under the warming water, he could see a telltale pinkish residue on his cock. The sight of it reminded him of the guilty he felt for possibly taking advantage of Casey. Even though she said differently, he somehow still felt guilty of taking her in her vulnerable state. He scrubbed himself clean as if washing away his sins. \n\nBack in the room, he finally remembered to make his notations in the log. He listed Sheila and Casey as thirteen and fourteen. He had six more virgins to go. He was far \n\nahead of any of the other brothers. If he had the full four years, no telling how many cherries he could pop. Unfortunately, time was running out on him sooner than even Mark had thought. Jason called his Big Brother after putting the book away again.\n\n\"Hey, Little,\" Mark said upon picking up.\n\n\"Big, how's it going?\"\n\n\"Fine, just fucking busy with work is all. Stay in school and fuck virgins as long as you can,\" Mark recommended.\n\n\"I'd like that but I'm afraid you were right about this change in the guard with Dr. Jenny leaving.\"\n\n\"Oh?\"\n\n\"The new doctor, Dr. Amanda Clark, is going to computerize the patient records. At this point, there's no telling if she intends to keep the same procedures from the cards Dr. Jenny used. I'm afraid she won't and I'll lose the only verification process for the virgins.\"\n\n\"I see,\" his Big Brother said. \"Not good.\"\n\n\"No. And I'm so close too.\"\n\n\"You are? Last I talked with you I think you were on number nine or something.\"\n\n\"Well, I'm up to fourteen now. Just got number fourteen tonight\" Jason said.\n\n\"Wow, you are the stud of studs. The king of virgin slayers. Twenty should be no problem for you, that is if you can get them before the system changes.\"\n\n\"Right. I have one or two more names but I don't think I have six. Plus, chasing only select women will be infinitely harder than nailing every virgin I can find and meet that's in the infirmary records.\" \n\nJason couldn't believe the callousness of his own words these days. This contest had changed him and not in a good way. \n\n\"True. I'll inform Douglass Caulfield of your dilemma, but I don't think he'll be willing to change the terms of the contest at this late date. Personally, I think he is glad it will finally be over. He's not well I hear.\" \n\n\"I continue to have girlfriend problems too, like I told you last time,\" Jason mentioned.\n\n\"Oh, yeah? How's that hot redhead you talked about?\"\n\n\"Great, but making me very guilty for my extracurricular activities. She rightly expects me to be with her and her alone. I'm taking her and two other virgins I fucked to see the Thunder game tomorrow. She wasn't too happy to be going with them.\"\n\n\"The speed at which you've nailed these virgins has been remarkable and contributed to your dilemma,\" Mark said. \"The rest of us had more time for breakups than you. You're amassing virgin lovers faster than anyone in history.\"\n\n\"Tell me about it. I just fucked this girl, Casey. She can't wait to do it again and I'd like to oblige her but I'm covered up already for the whole weekend. Chad would love to have my problem but it's getting tiring.\"\n\n\"Hang in there, Little. You're almost there. Then you can settle down with Beth or whoever else strikes your fancy with at least a cool million dollars.\"\n\n\"I can't wait for that. I really like Beth and don't want to lose her. Somehow I have to find a way to fuck six more virgins and keep her too.\"\n\n\"Good luck. Wish I had your problems.\"\n\n\"What's the matter? Not getting enough?\"\n\n\"No. I've been working so hard I haven't had time to pursue any ladies,\" Mark professed.\n\n\"What're you doing Saturday night?\" Jason asked, thinking out loud.\n\n\"Nothing ... why?\n\n\"If you can come down for the night I'll get you laid, guaranteed.\"\n\n\"You will?\"\n\n\"Yeah. And not just one but two great lays.\"\n\n\"Really. That would definitely be worth the trip. Count me in.\"\n\n\"Great. You'll like these two. They're very hot for sex,\" Jason claimed.\n\n\"What're they like?\"\n\n\"Stephanie has fabulous, huge tits and is a great fuck. Pam is tall with smaller breasts but incredible nipples. They both suck a mean dick too,\" Jason explained.\n\n\"Sounds great. Count me in,\" Mark said.\n\nJason started studying when he hung up with Mark. He still had an hour or two before he needed to get to bed. Chad came in after about an hour. \n\n\"Things set for Saturday night?\" Chad asked.\n\n\"Yes, and my Big, Mark, is coming now for the night.\"\n\n\"Where're we going to put him up?\"\n\n\"Don't we have a spare mattress in that storage room?\"\n\n\"Yeah, I think so. It should be there anyway.\"\n\n\"Let's drag that down Saturday morning and set it up on the floor. Mark can sleep there after all the fun,\" Jason concluded. \n\n\"Did you think about inviting anyone else?\"\n\n\"Yeah. I think I'm going to ask Brad from the swim team. He might like to get laid too.\"\n\n\"Three enough for those two hot sluts,\" Chad asked.\n\n\"Probably not, but I plan on coming back that night or the following morning. I don't want too many bodies to fight over to get to bed or them,\" Jason said joking. \"Keep everyone off my bed too, Chad, okay? No cum stains that aren't my own.\"\n\n\"Alright. Thanks for arranging this by the way.\"\n\n\"No problem. Pam and Stef were hot for it.\"\n\nJason woke Friday wondering how the day would go. It should be a simple affair. Take three girls, one his supposed girlfriend, to a baseball game. Drop two of them back home and spend the night with Beth. Leave her fairly early the next morning to come back to the room for Pam and Stef. Sounded simple enough but somehow he knew it wouldn't be. All sorts of things could go wrong. \n\nBefore he left for class, he called the stadium and ordered two more tickets with the Cherry Popper's contest credit card. He felt somewhat guilty charging the credit card for dates not related to virgins even though all three of these women were numbers in his log. He reasoned it was all part of the plan though. He couldn't be expected to just fuck and leave them. He doubted any of the past brothers had done that either. The tickets would be waiting for him at will call. \n\nJason made his way to practice. He was there a little early and got a bunch of laps in before Brad showed. When he saw Brad beside the pool talking to the coach, he swam over. As soon as Brad was done talking to the coach, he joined Jason in the pool. \n\n\"Hey, man,\" Jason said.\n\n\"What's up, dude,\" Brad said.\n\n\"What're you up to Saturday night?\"\n\n\"You're asking me out on a date?\" Brad asked jokingly.\n\n\"Right. I'm planning the best day of your life though,\" Jason intoned.\n\n\"Really?\"\n\n\"Feel like joining in on a gangbang of two hot chicks in my room? I won't be there until morning though.\"\n\n\"No shit! That redhead from the other day one of them?\"\n\n\"Fuck you! That's my girlfriend, asshole. No, these are two hot babes I nailed a while back. They love group sessions with multiple guys. My roommate and Big Brother, Mark, from last year will be there. I thought you might like to come too. No pun intended.\"\n\n\"Sweet. I haven't met any hot chicks yet. My balls are itchin' for action,\" Brad mused.\n\n\"Be there before eight,\" Jason said laughing. \"You can thank me later.\"\n\nJason beat Brad by at least six lengths that day. Brad's excuse was he had a hardon thinking about Saturday and it slowed him down with the huge drag. They laughed and joked about the whole thing until they parted for classes. \n\nJason ran into Jillian as he was nearing Carlisle Hall for economics. She looked great. Her complexion was far better, almost completely healed. She looked thinner too.\n\n\"Hi, Jillian,\" Jason said.\n\n\"Hi, Jason.\"\n\n\"You're looking great, girl.\"\n\n\"Thanks. I have you to thank for everything. I owe you.\"\n\n\"Nonsense,\" Jason said, but liked the thought.\n\n\"No really. Look how my face has cleared from the chlorine and the new medication Dr. Jenny gave me. I've also dropped close to ten pounds. All thanks to you. Kira and Tessa have even asked me to join them for dinner every night from now on.\"\n\n\"That's great!\" Jason effused.\n\n\"I feel like I want to pay you back somehow,\" Jillian proposed.\n\n\"How, What?\"\n\n\"I don't know but I'm open.\"\n\nJason thought for a second. Could he be as crass as to take advantage of Jillian's proposal? Surely, she knew what she was saying; she just couldn't bring herself to say the rest. Was she hot for him because he helped her? Maybe? She was a virgin and one of the few he knew for sure remaining. Maybe this was his chance to change that. He might not get another chance. Now that she looked so much better, it wouldn't be long before guys like Brad were hitting on her and asking for dates. His chances would surely fade away if she had a boyfriend. \n\n\"Okay, meet me outside by the big oak after class,\" Jason said.\n\n\"Really?\" Jillian said, acting surprised now like she hadn't intended for him to take her up on it. \"By the oak tree?\"\n\n'Maybe I'm being terrible,' Jason thought, but continued none-the-less. \"Yeah, we can go somewhere from there for lunch. You free for lunch?\"\n\n\"Yes,\" Jillian said, acting somewhat relieved that maybe all he was talking about was lunch.\n\nIt's not that she didn't want to have sex with him, she did. Bad! She was just nervous about it. She had promised to buy lunch the next time they got together anyway. So maybe that's all it was. She'd used that as an excuse to see her handsome benefactor again anyway. Now, he was just taking her up on it. That's all. She sort of felt relieved but then again not really. \n\nJason finally got to economics on time. The teacher noticed but didn't say anything. Connie and Sophie noticed too and both gave him big smiles. After class he said hi to both of them but excused himself saying he had to meet someone. He found Jillian waiting by the big oak tree not far from the building entrance just as he said.\n\n\"Hey,\" Jason said upon walking up.\n\n\"Hi.\"\n\n\"Ready? We can walk to the frat for lunch.\"\n\n\"What ... oh ... I thought we were going somewhere where I could pay?\" Jillian said.\n\n\"No need for that unless you want to,\" Jason declared. \"We can get a free meal there.\"\n\n\"Okay,\" Jillian answered.\n\nThey talked about Jillian's improving swimming skills as they walked along. She was up to ten laps for each work out session when she couldn't even do four a short while ago. Not only had she dropped weight but she was feeling more toned than she could remember in a long time. Her energy levels were better and she felt more positive about everything. Technically, she'd only lost ten pounds but she felt stronger and looked like she'd lost a lot more.\n\n\"You know, you saved me from quitting school,\" Jillian proclaimed.\n\n\"Thanks, but all you needed was a helping hand, you did the rest.\"\n\n\"Even so, I couldn't have done it without you.\"\n\nBeing it was Friday, the frat was serving fried fish for lunch with French fries and apple sauce. They filled their plates and took seats away from the prying eyes of the other watching brothers. \n\n\"This is not part of my diet,\" Jillian said jokingly. \"I'll have to swim a few more laps for this and to clean my skin of the grease.\"\n\n\"Yeah, definitely off the diet for me too,\" Jason conceded and laughed with her. \n\nThey talked about the baseball game he was taking Tessa, Kira, and Beth to that night. Jillian had brought it up as she had learned of it from Tessa and Kira. \n\n\"Three women ... quite a handful even for you, Jason,\" Jillian chided.\n\n\"I know. Did Tessa and Kira tell you the whole story?\"\n\n\"Yeah. Don't be mad at them for telling me, please.\"\n\n\"No ... no ... that's fine, I don't care. Hopefully, everyone will have fun,\" Jason concluded. \n\n\"Hopefully,\" Jillian agreed. \"I think Kira and Tessa understand about Beth.\"\n\n\"What do you mean?\"\n\n\"That she's your real girlfriend I mean.\"\n\n\"Yeah.\"\n\n\"It'll all work out.\"\n\n\"Thanks. I think so. Want to go to my room?\" Jason suggested when they were done.\n\n\"Is a girl safe in there?\" Jillian mused.\n\n\"If she wants to be,\" Jason said joking back.\n\n\"Okay,\" Jillian said somewhat hesitantly. \n\nJillian's mind raced with the thoughts of what could or might happen once in a sophomore fraternity guy's bedroom. This was something that most college girls only did if they trusted the guy. She told herself, 'I trust Jason, but do I trust myself.'\n\nJason unlocked the door and showed her in. Once inside, he asked if she wanted a drink or something. Having just eaten and had a large glass of milk, Jillian declined. They sat down on the bed as Jason turned on the TV with the remote.\n\n\"You like to watch TV during the day?\" Jason asked.\n\n\"Days of Our Lives,\" Jillian replied.\n\n\"A soap?\"\n\n\"Yeah, my mom got me into it a long time ago,\" Jillian confessed.\n\nHer smile was cute and Jason found himself looking into her grey eyes. They were warm and friendly as she was. She had allowed her strawberry blonde hair to grow out since they met and Jason liked the new longer length to her shoulders. The small smattering of faint freckles on her nose and cheeks were more evident on her face now that the acne was nearly gone. \n\n\"What channel?\" Jason asked.\n\n\"It's not 1:00 yet. You can watch whatever you want.\"\n\n\"I like to check out the sports scores if you don't mind.\"\n\n\"No, not at all,\" Jillian said, beginning to wonder what she was doing there.\n\nNot that she minded at all being with Jason. In many ways, she wished he had meant to take her up on her pay back to him sexually, instead of some other way. She found Jason extremely handsome. It bothered her some that he already had so many women in his life. She wished she could garner his full attention and keep it for herself. She'd even begun to get more interested looks from some of the other guys on campus but it was Jason that appealed to her the most. He had been there for her when it counted and she had been attracted to him from the first moment they met. \n\nJason propped up some pillows against the headboard of his bed and leaned back. Jillian felt a little silly just sitting there, so she leaned back too. They were lying side by side on his bed as he watched the posted scores. Jillian watched for a while but finally had to lean over towards him with her head on her raised hand. \n\n\"Jason ... I thought you were going to let me pay you back?\" \n\n\"Well, I decided why make you pay when we could come here for free.\"\n\n\"Oh, so it was always just lunch?\"\n\n\"What did you think?\"\n\n\"I ahh ... I mean ... I was thinking ...\"\n\n\"Jillian, what are you trying to say?\"\n\n\"It's just that I thought you really wanted a pay back.\"\n\n\"Like what?\" Jason questioned, amused by her obvious dilemma. \n\nShe caught his slight grin, \"You're just playing with me.\"\n\n\"Tell me what you want,\" Jason said chuckling.\n\n\"You're playing with me. Are you just teasing me or are you mocking me?\" Jillian now asked somewhat annoyed.\n\n\"No, not mocking you. I'm just trying to get you to say it.\"\n\n\"Why ... What, you want me to beg?\"\n\n\"No, not that either. I just wanted to hear you ask, but forget it if you're going to get upset about it.\"\n\n\"Jason ...\"\n\n\"What?\"\n\nJillian looked at him and then leaned in quickly and kissed him. Jason was a little surprised at first but kissed her back until Jillian broke the kiss. She looked into his blue eyes for what seemed a long time but then kissed him again. That kiss led to several more until they were both out of breath. \n\n\"Wow,\" Jason said when he leaned back against the pillow. \n\n\"What?\" Jillian now asked.\n\n\"Nice.\"\n\n\"Really?\"\n\n\"Really.\"\n\nJillian leaned on top of him now. Her firm breasts pressing into his chest. She kissed him several more times, at least as intensely as before. Jason's hand came up to caress the side of her face as they kissed. Jillian stopped kissing him on the lips but kissed the palm of his caressing hand instead. Jason used his other hand to brush her pretty hair from blocking the complete side view of her face. She has a cute, small nose he noticed, as if for the first time. Everything about her seemed to look enticing now. He felt his cock stir in his pants.\n\nJillian stopped kissing his one hand and looked down at Jason. Her eyes scanned over his face as if reading a computer screen or searching for something. The look on her face was intense, yet inviting. Jason watched her with interest as to what she would do next.\n\n\"Jason.\"\n\n\"Yes.\"\n\n\"I'll say it now.\"\n\n\"Okay.\"\n\n\"Take me.\"\n\n\"What?\"\n\n\"I want you to take me. Take me if you want.\"\n\n\"Jillian, you don't...\"\n\n\"I want to. I want to more than anything. Not just to pay you back, but because I ...\"\n\n\"What?\"\n\nJillian's eyes kept scanning his face as if looking for a sign or a weakness or an opportunity. She stammered a little as she continued.\n\n\"I know you have plenty of prettier girls than me but I don't care. I don't care if you're doing it with Kira and Tessa. I don't care if Beth is your true girlfriend. I don't care about anyone else. I just want to be with you.\"\n\n\"Jillian, you're beautiful, but ... I can't ... I can't commit to anyone else ...\"\n\nJason stammered now as he tried to convey his own feeling. He had approached her paying him back casually up till now, the way their relationship had started from the beginning, but now he felt the same intensity she did. He couldn't deny being attracted to Jillian. He was conflicted again. Fuck her and fulfill his desire and continue the contest or tell her she didn't want to do this. She didn't want to do it with him. She should save herself for someone more worthy. \n\n\"I don't care!\" Jillian exclaimed. \"I was nervous before about doing it but now I want to.\"\n\n\"No you don't. You're just saying that out of a sense of owing me.\"\n\n\"No ... I do ... I do want to do it with you and not just because you helped me.\"\n\n\"Jillian ...\"\n\nShe cut off Jason's words with a kiss. She kissed him deeply and started unbuttoning his shirt. He thought about pushing her off for her own good but the other side of him took over now. He held her hips and kissed her back passionately. Jillian moaned into their kisses as she pulled his shirt open. She kissed down his neck with tender loving kisses. Her hands ran over the muscles of his bare chest as she worked her way lower. \n\nJason tried to open the buttons on Jillian's shirt but she kept moving around. He got the tops ones open enough to see her white bra encasing her ample breasts. He had admired those breasts a couple times when they were in the pool. Her nipples were already poking indentations in the bra. He wanted to touch them but Jillian moved down too far. Her hands opened his belt.",
        "\"Jason ... you'll have to help me. I'm not sure what to do.\"\n\nJason helped her open his pants and pull them down. His cock was glad to be free of the tight confines and immediately tented his boxers. Once his pants were on the floor, Jillian pulled at the waistband of his underwear. Jason helped her again by lifting up so she could pull them down. His cock pulled down with Jillian's inexperience but bounced back up once his cock freed. It nearly hit Jillian in the chin as she pushed down his underwear. \n\n\"Oh, my!\" Jillian exclaimed upon seeing Jason's cock for the first time. \n\nHe sat up and opened a few more buttons until her shirt was open. Jillian just stared at his cock as it quivered with desire. Her eyes were mesmerized by the sight and movement of it. She barely felt Jason removing her shirt despite helping him by moving her arms as he needed. Soon, she was naked on top except for her bra. Jason tried to reach around behind her to get at the clasps but she was pretty far down on the bed. Jillian realized what he wanted and removed the bra for him. Now it was Jason's turn to stare in awe.\n\n\"Fuck! Their incredible,\" Jason gasped, reaching for her breasts. \n\nAs his hands touched her firm, yet subtle skin, she finally looked up at him. He kneaded her tits and fingered the fantastic nipples. Stephanie's tits were a little bigger, Claire's more perfectly shaped, but these were two absolute beauties. The aureoles were magnificent, pink, and the size of huge marshmallows, and just as puffy. They looked like the most suckable nipples he had ever seen and they curved upwards. They were better even than Pam's brown Hersey's kisses. His fingers pinched the soft tips in an effort to further stiffen the half inch nipples already at attention. \n\n\"God, Jillian!\" Jason declared as he continued to knead and pull on her wonderful nipples. \n\n\"Mmm ... that feels good,\" Jillian moaned as her hands managed to encircle Jason's cock. \n\nJason's hands pulled hard enough on her tits to force Jillian to lean up a little closer to him. As soon as she was close enough he fastened his mouth over one of the puffy marshmallows and sucked it into his mouth.\n\n\"Oh, god,\" it was Jillian's turn to say now.\n\nShe had played out this very scene in her mind the last week or two since meeting Jason. In her bed at night, when she was sure her roommate was asleep, she had touched herself pretending it was him. She had yearned for his touch, but her own hands couldn't equal the real feelings she had now. \n\n\"Ahh ... Mmm,\" Jillian sighed. \"Keep doing that, Jason. That feels so good.\"\n\nJason switched back and forth between her breasts. They were handfuls even for his long fingers. 'What magnificent tits,' he thought.\n\nJillian's hands worked up and down Jason's cock. Her hungry eyes were back on the huge head of his cock and watched as a clear drop of fluid oozed from the tip and ran down one side to meet her moving hands. Jillian smeared the slick liquid on the shaft of his dick. Wanting more, her fingers teased around the little hole at the tip, soon to be rewarded with another glistening drop. This one she captured between her fingers to feel its smooth texture and slipperiness. She naughtily touched her finger to her lower lip and ran it across. It wet the surface and allowed her tongue to flick out for a taste. \n\nJillian lacked experience but she wasn't unaware either. She knew some of what she needed to do with his cock from talks she'd had with an older cousin years before. Her cousin had described to her the things she did with her first boyfriend's dick. She hadn't gone all the way but the other bases were covered many times. Jillian had been with two boys in high school but neither lasted long or got beyond a kiss and feel. Jason was her first bare cock to touch.\n\nWhen Jason took a little break from sucking her tits, Jillian leaned back like before. She looked into his eyes as she settled over his towering organ. Another drop of pre-cum had already pooled in the little hole and threatened to run down one side of the large helmet like head. Jillian inspected the impressive dick in her hands, drinking in every aspect.\n\n\"Go ahead,\" Jason urged.\n\n\"What?\"\n\n\"Kiss it,\" Jason said as if a mild command. \n\nJillian slowly lowered her head. She knew what he wanted. Her cousin had described every part of a guy's cock and how to give a proper blowjob. She'd learned from other girls at school too and an older friend. Now her moment was finally here. Everything she had tried to remember from her cousin came rushing back at once clouding her mind. She tried to separate the thoughts into what to do next. Jillian remembered one thing that her cousin had stressed. The area under the head was particularly sensitive. It was here she first decided to touch him with the tip of her tongue.\n\n\"Urgh,\" Jason moaned with the first tickle of her tongue tip.\n\nShe teased along the rim of the head and part way down the bulging part on the underside. Jason's continued groans told her what she was doing was pleasing him. Her tongue wet the surface of his cock as she tasted his male scent. Jillian concentrated on Jason's actions as she continued working his cock. When his hands kneaded her hair and pressed her mouth down harder, she complied. When his grip pulled her back to the tip and smeared a drop of pre-cum over her lips, she could feel the pressure he applied to get her to open. She did, taking the head of his big cock into her mouth for the first time. \n\n\"Oh, babe,\" Jason's growled. \"That feels so good.\"\n\nJillian had heard that girls were supposed to take the guy as deep as they could. She bobbed on Jason's cock, going a little deeper each time. Jason's reactions spurred her on until she felt herself gag a little. Her throat didn't want to accept the huge intruder. She tried a few more times just to prove to herself that she couldn't go further. \n\n\"Mmm,\" Jason muttered. \n\nJillian's mouth was filling with saliva and her jaw began to hurt a little. She'd never had anything this big in her mouth for this long. She backed off to swallow and looked up at Jason. Her eyes were watering a little with tears.\n\n\"Nice,\" Jason complimented.\n\n\"Thanks.\"\n\n\"You went pretty deep,\" he observed.\n\n\"I couldn't go further,\" Jillian lamented.\n\n\"That's okay. Come here.\"\n\nJillian moved up Jason's body on all fours. His dick ran between her breasts and along her belly as she moved. He kissed her when she got above him. Jason's hands played with her nipples as they kissed making Jillian moan into them. Jason's cock nudged between her legs and the wet head tangled in her cute blonde muff. After a while Jillian's arms tired and she lean to one side, Jason follower her to suck on her nipples again. \n\n\"Oh, Jason. That feels wonderful,\" Jillian whispered. \n\nHe sucked her breasts and lightly bit her nipples for a while longer before moving over her on the bed. His cock persisted in probing around her pussy. Jillian thought he would move to take her next but instead he slipped further down the bed, kissing her tummy, licking her bellybutton, and nuzzling his face into her blonde bush. Normally, Jason preferred a woman shaved but something about Jillian's cute muff attracted him. He didn't know if it was the strong musky scent of her, the blonde hair, or the way her pubic hair tufted above her slit, but only a slight amount trailed down either side of her sex. It framed her sweet mound like a golden mane. \n\n\"Oh god, Jason. What are you ... Ahh,\" Jillian growled as Jason kissed her mound.\n\nHaving never been eaten, Jillian had no idea what to expect. Her older friend had told her about a lover that had eaten her and how fantastic it was but Jillian had little else for reference. It soon didn't matter.\n\n\"Oh, shit,\" Jillian growled as Jason moved from kissing to licking.\n\nJason used his fingers to part her moist tunnel. Jillian had been incredibly aroused since they started. Her cunt was a veritable full well as Jason lapped around the hole like a thirsty animal seeking her delicious nectar. When he dipped his tongue tip into her core, Jillian went rigid. Her body felt tight as a bowstring as Jason played her strings.\n\n\"Jason, please ... don't stop ... ahh ... more ... touch me ... ahh!\" Jillian howled her need.\n\nShe had never felt anything this good. The pleasure he had given her nipples before was like a distant memory. This was tenfold better and growing. Her back arched off the bed and her hands played in his short hair. She pressed him to her sex and squeezed her legs around his head as if worried he would go away too soon. It wouldn't be long though.\n\n\"Fuck!\" Jillian wailed.\n\nJason had purposely not touched her clit at all yet. His fingers pushed higher forcing the hood to open and expose the tiny little conjuncture of nerves. He chewed lightly on her lips and worked his way very slowly towards it. Jillian started cumming in a series of mini-bursts, like sparks going off in her brain. Her legs squeezed his head threatening to cut off his air.\n\n\"Urgh!\" Jillian roared. \n\nJason had eaten his share of pussies but Jillian's was sweet and her reactions were incredible. He had driven women crazy before with his tongue but Jillian was like a rocket about to explode. She squirmed on the bed and bucked against his face as the bliss washed over her. Each new burst of pleasure was more intense than the last, yet she could feel them building towards something even more mind-blowing. \n\nFlicking his tongue in numerous spots around her little clit was driving Jillian nuts. She had never felt anything close to this good. When Jason finally licked across her hyper-sensitive bud, Jillian roared. \n\n\"Ahh! Oh, god! Fuck!\"\n\nJillian shook like her body was receiving massive electrical charges. Her legs clamped Jason's head so hard, he couldn't breathe and threatened to break his neck as she thrashed on the bed. Jillian's mind was numb with the pleasure. Jason didn't let up either. Despite fighting for air he managed to maintain the assault on her clit until she pushed him away. He didn't move far though and instead lapped up her sweet liquids leaking from her pussy like juice from a ripe fruit. \n\nHe stopped not long after Jillian went limp and dropped her hands and legs flat on the bed. Jason looked up at her and smiled. His face was coated in her wetness from nose to chin. He wiped his face with the back of his hand as he moved up on the bed. He looked at her cute pussy as he went. It was wet and ready for him. He noticed his aroused dick too, solid as steel and leaking pre-cum at the thought of fucking that wonderful virgin pussy and popping her cherry.\n\nOnce again, he had a brief moment of, 'I shouldn't do this to her before I make sure she definitely wants to.' However, his new, more callous psyche flushed that idea from his mind as soon as it appeared. He couldn't have stopped himself now if he wanted to. Short of Jillian pushing him off her, he was going to fuck that beautiful cunt. \n\nIn the past, he had asked most of the virgin women before fucking them, were they sure. With Jillian he just lined up his cockhead into the nook of her sex. He did look into her eyes though, and saw only worry, but no denial. He took that for her acceptance of her new fate, to be a woman soon.\n\nAs with everyone else, Jason attempted to take the woman's mind off the pending pain. He started passionately kissing Jillian, drawing mews of contentment and fervor from her. He kissed her and forced his tongue deep into her mouth. Jillian had never kissed like this with anyone and it drove her wild with obsession for him to keep on. Her tongue battled back with his and her hands held his head tight to her mouth as she ardently kissed him back. Mews of delight escaping her lips as they kissed.\n\nJason waited long enough to be sure her immediate attention was somewhat redirected from his throbbing cockhead poised at the entrance to her womb. He used one hand to make sure he was seated right, aligned to crash through her cherry, and bury his cock up her never used channel.\n\nJillian was truly caught up in his kisses and returning them, the stab of pain caught her by surprise. The stab was followed by a rush of pain that made her scream.\n\n\"Oww! Oh, shit!\" Jillian cried. \n\nHe had broken through on the first thrust. The wetness of her pussy had aided his entrance. Jason held still, letting Jillian get used to the pain, and give it time to lessen. When he felt her death grip to his hips with her hands diminish, he pushed a little deeper causing a modest reaction from Jillian.\n\n\"Jason, it hurts.\"\n\n\"Just wait, babe. Give it a minute. It will go away and turn to only an ache.\"\n\n\"How can you be so sure?\"\n\n\"It was the same for Kira and Tessa,\" Jason affirmed.\n\n\"Oh, god ... go slowly, please ... it's a little better now.\"\n\nJason lowered himself into Jillian a centimeter at a time it seemed. She was as tight as expected. His big cock forced the tight tube to open and accept its new role. No longer was it protected by its barrier. No longer was it inaccessible to a cock wanting in. Jillian was a girl no longer as Jason reached deep inside her.\n\n\"How does it feel now?\"\n\n\"Better,\" Jillian replied. \"Oh, god, I feel you deep inside me. You're fuckin' huge.\"\n\n\"I am big for your first but you'll like it more very soon.\"\n\n\"Still go slow please.\"\n\n\"I will,\" Jason said, moving a little to extract his cock from far inside Jillian's clenching vaginal muscles.\n\nJillian moaned a little when she felt Jason's cock withdraw and reenter her. It was hard to determine if it was a pained moan or a pleasure one but Jason kept going in measured time. He gave her moments to adjust to the steady pace of his cock stretching her open and then leaving her feeling empty and wanting more. The feelings started to change as Jason said they would.\n\n\"Oh, Jason. It feels incredible. Keep going.\"\n\nHe sped up a little but distracted her further from the dull ache in her sweet cavity by sucking on her magnificent tits. The nipples were distended and felt delightful in his mouth. He teased the little buds with his tongue and pushed the tip into the end of each one as he trapped it in his sucking lips. Jillian groaned her approval. \n\nIt seemed to both of them to have been hours until Jason was able to move inside her without a negative effect from her. Actually, it was only minutes before the results of his pumping hips now produced positive sighs from Jillian. His attentions to her sensitive nipples helped too.\n\n\"Nice ... so nice. Oh, keep going ... more ...more\"\n\nAs Jason picked up speed, the nails of Jillian fingers once again poked the sides of his bare hips. He was sure she had drawn blood from the dull ache he now felt there too. This pressure to his hips was from pleasure now, not pain. \n\n\"Do me, baby. Fuck me good,\" Jillian implored. \n\nJason was a little surprised by Jillian's words. He had expected her to be the quiet type, responsive, but silent in her enjoyment. He was a little shocked to hear profanity now and nasty talk coming from her lips as he fucked her deep. \n\nHe sped up and could feel heat building between their tightly clenching bodies as Jillian held him to her on each inward thrust. Her hips had started intuitively responding, pushing up into his downward thrusts, causing him to go even deeper. Her pussy was like wet silk on his cock. It gripped tight but with a velvety touch that made his balls contract with the wonderful sensations.\n\n\"Fuck me, Jason,\" Jillian howled so loud someone right outside Jason's frat room would have heard. \n\n\"Shh,\" Jason gasped with a laugh. \"The cook will hear down the hall.\"\n\n\"Oh, it's so good ... so good though ... keep fucking me, please.\"\n\nJason started really pounding into her. He rose up on his arms to watch her beautiful tits sway and shake as he pumped hard into her newly open womb. He could feel the head of his cock burrowing deep inside Jillian. Her pussy was fantastic and he could drive all eight plus inches of his fat cock deep inside her. Not many women he knew could take so much of him without some pain. Ariel had let him pound her tiny pussy but if he went to deep she grimaced in pain. Jillian took him and wanted more.\n\n\"Damn, what a great pussy you have,\" Jason roared. \n\n\"Gimme that big cock, baby,\" Jillian shot back. \n\n'Shit, she's almost as dirty talking as Tessa,' Jason mused to himself.\n\nJason hammered Jillian as if she were a seasoned whore. Gone was any semblance of pain it seemed. Jillian encouraged him for more no matter how hard he fucked her. She could take it and wanted more. Sweat began to form on their bodies and drip off Jason's forehead. Their bodies slapped together like wet rags. The room was full of the sounds of their fucking. The bed creaked loudly and the scent of sex filled the air. \n\n\"Oh, Jason ... I'm going to ... I'm going to cum.\"\n\nJason knew it wasn't long for him either. This surprising sex machine was driving his cock delirious with pleasure. His balls were tight as a fist against his cock as he buried himself completely in her velvety snatch again. \n\n\"Me too,\" Jason gasped, remembering they hadn't discussed him cumming in her. \n\nFortunately, Jason lasted longer than Jillian. He fucked her until she shrieked and sunk her nails deeper into his sides than before. Her world seemed to melt into her pussy as it seemed to draw pleasure from every pore of her body.\n\n\"Fuck Me!\" Jillian screamed, once again too loud.\n\nHer cunt clamped down on his cock like a vise. He could barely move she held him so tight. Waves of bliss coursed over her body like ripples through the water after a stone strike. Jason watched the intense pleasure grip her pretty face in a tight clench. She even looked like she wasn't breathing, as he felt his own climax simmering. \n\nWhen Jillian went limp, Jason quickly extracted his cock from buried deep inside her. It was coated with Jillian's fluids as he grabbed it furiously and started pumping himself off. Jillian opened her eyes to see him on one knee, with his other leg spread over her and across the bed, aiming his cock at her tits and belly. \n\n\"What should I do?\" Jillian asked hurriedly.\n\n\"Rub my balls, babe.\"\n\nJillian's hands had barely touched his tight testicles when Jason growled and his cockhead expanded. Jillian watched mesmerized for the first time as she saw a cock ejaculate. The first shot surprised them both and ricocheted off the inside of her left breast and smacked her in the neck below her chin. She shrieked and pulled back a little but couldn't take her eyes from the discharging cock. The next two volleys of cum were huge and completely saturated her right breast in hot milky sperm. It looked like icing on a cherry covered cupcake as it ran down into the valley of her tits. \n\n\"Oh, my,\" Jillian gasped.\n\n\"Argh,\" Jason roared, as several more smaller shots left a white trail down her chest and into her bellybutton. \n\nThe last drops further saturated her already wet pussy hair. The blonde muff was darker now and painted with streaks of white. Jillian kept watching transfixed to the head of Jason's cock as one last drop hung suspended from the tip. She thought she had never seen anything so wild before as the sight of Jason's cock firing bolts of white male seed. \n\n\"God,\" Jillian panted, still recovering from her own mind-blowing orgasm. \n\n\"I'm afraid I've made a mess of you,\" Jason apologized. \"Let me get you a towel.\"\n\n\"Wait,\" Jillian said before he could move. \n\n\"What?\"\n\nHer hands had never left his balls. She had felt them spasming as they coated her with their pent up cum. She now saw a streak of white across her left forearm and some on her hand. Her fingers grabbed his still rigid cock and pulled him towards her. Her eyes implored him and he gather what she wanted, if only a bit surprised again by her aggression. He moved up so she could.",
        "Jillian looked into Jason's eyes for a second for any kind of hesitation on his part. Seeing none, she moved up on one elbow and held his cock before her mouth. Her tongue flashed out and captured the suspended drop of cum off his cockhead like a toad catching a fly. She brought it back into her mouth as she once again looked up into Jason's face. Her cousin had told her many things. One was to try it for herself. \n\n\"You're amazing,\" Jason said.\n\nJillian just smiled back as the droplet smoothed out over the taste buds of her tongue. 'Salty,' she thought. 'Interesting.'\n\nJason was about to pull away again to get the towel but Jillian gripped him harder and leaned back in to suck the head of his cock into her mouth. I little applied suction and she felt another rewarding drop caress her taste buds. She agreed with her cousin, not bad, not bad at all.\n\nSweaty and a little disheveled they pulled themselves together quickly. Jason gave Jillian a towel to clean herself off with but there was no time for a shower. They both had one afternoon class starting in twenty minutes. It would take most of that to walk there. \n\nJason noticed scratches and bright red marks on his sides but she had failed to draw blood apparently. He pointed these out to Jillian and she apologized but laughed too as they dressed. They scurried out the door of Jason's room only to see the cook down the hall. He waved and smiled from the dining room as they waved back and exited to the front door. \n\n\"You think he knew?\" Jillian asked a little mortified. \n\n\"Not sure,\" Jason said smiling back.\n\n\"Oh, my god,\" Jillian fretted. \"He must think me a slut or something.\"\n\n\"Nonsense,\" Jason proclaimed as they cross the road in front of Theta Chi and headed towards the education buildings. \n\n\"You, he probably thinks a stud, but me a slut,\" she added.\n\n\"Who cares what he thinks. He's a dirty old man anyway?\"\n\n\"I guess you're right,\" Jillian agreed, feeling better and grinning a little.\n\n\"Of course I am.\"\n\n\"Well, thanks, Jason. I feel a little better then.\"\n\n\"No, I'm the one that should be thanking you.\"\n\n\"Not really. I know you have plenty of girls to choose from. It's me that is once again in your debt. I wanted you to do it,\" Jillian claimed. \"I was a little afraid but I wanted you to.\"\n\n\"Thanks anyway.\"\n\n\"You're welcome. I enjoyed it. Oh, not the pain part but the rest was incredible. You're wonderful you know.\"\n\n\"So are you.\"\n\n\"Really?\"\n\nAbsolutely!\"\n\n\"Jason?\"\n\n\"Yes?\"\n\n\"Could we do it again soon?\"\n\n\"Jillian, I'd love to ...\"\n\n\"But you can't, right?\"\n\n\"It's just that I'm quite busy and involved in several relationships already as you know.\"\n\n\"I understand,\" Jillian said sadly.\n\n\"I'll try, Jillian.\"\n\n\"Thanks,\" she replied with a little smile.\n\n\"Hey, come back to my room tomorrow morning, around 11:00.\"\n\n\"Really?\"\n\n\"Sure, I'll have another friend or two there but we should get some time together if that's okay with you?\" Jason asked.\n\n\"Okay,\" Jillian agreed, just happy to have a chance back with him so soon.\n\nThey kissed goodbye when they had to part.\n\n\"You better shower before the game,\" Jillian said giggling.\n\n\"Yeah?\"\n\n\"Your face smells like me,\" Jillian claimed and then walked away laughing."
    ],
    "authorname": "BlewWater69",
    "tags": [
        "female virgin",
        "cherries",
        "frats",
        "college"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-cherry-poppers-ch-21"
}