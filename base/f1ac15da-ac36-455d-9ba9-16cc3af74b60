{
    "title": "Always Ch. 03",
    "pages": [
        "This is the third installment following charter air pilot Raph Savage and eventual Barrett Oil heiress Riley Barrett.\n\nThis has been a blast to write thus far and may continue or this could be it, mostly depending on reader interest. I hope you all enjoy reading it as much as I've enjoyed writing it. Raph, Riley, Steve, Maria, and many others will always be great friends of mine as the characters of my first multichapter writing attempt.\n\nKeep the comments and feedback coming. I read each and every one of them and have taken several suggestions from comments left on previous chapters.\n\nAs always, I can't say enough good things about the editing done by RandyD1369. He's a marvel as an editor and his ability to make not only a single story makes sense, but he actually draws parallels between different chapters to make sure I stay true to the characters and story.\n\nDISCLAIMER: All characters are fictional and any that engage in sexual situations are 18 years old or older.\n\n*****\n\n\"Five minutes, Miss Barrett,\" Janice said from the doorway of Riley's office.\n\n\"Almost there,\" Riley said, making a last-minute change to a PowerPoint presentation. Satisfied, she saved the file to the corporate file server so she could access it from anywhere in the building where she was logged in.\n\nJanice held out a water bottle as Riley walked quickly by on her way to the executive conference room.\n\n\"Thank you,\" Riley said, taking the bottle like a running back taking a hand-off. \n\nRiley was preparing to present the offer she and Steve had received from the Anderson brothers to the Barrett Oil Directors and Vice-Presidents. Steve and Riley had gone over it and decided the best way to proceed. Now she would present it to the upper management for final approval.\n\n\"Believe in what you're selling. Be passionate but factual. Never downplay the risks. Explain how it benefits everyone. Be willing to listen to counsel, but make a decision that doesn't compromise who you are,\" Steve had told her recently.\n\nShe took several quick drinks as she walked. As she approached the door of the conference room she looked at her watch. One minute to spare. She closed her eyes and took a deep breath. \"In through the nose; out through the mouth.\" she thought to herself. She exhaled, opened her eyes, and pulled open the glass conference room door.\n\n\"Ladies and gentlemen, if I could have your attention,\" she said, walking directly to the presentation station, opening the laptop already there. \"If everyone's ready, let's get started...\"\n\n*****\n\nRaph was just coming from Bed Bath and Beyond, in the Westgate Mall. He wasn't flying today and since Riley was at work, he was running some errands. He looked around to see if there were any of the other stores he needed to go to. Nothing jumped out at him except for the Chick-fil-A. He suddenly realized he was hungry. He walked toward the food-court, his large shopping bag swinging beside him.\n\nHe ordered the classic chicken sandwich meal and sat at one of the tables to eat, placing his shopping bag in one of the empty chairs. \n\n\"Raph?\" a female voice asked from behind and to his left.\n\n\"Maria,\" he said, turning to look back over his shoulder and trying to choke down the bite of chicken sandwich.\n\n\"I thought that was you,\" she smiled.\n\n\"Would you care to sit down?\" he asked.\n\n\"You're sure you don't mind?\" she confirmed.\n\n\"Not at all. Would you like something to eat?\"\n\n\"I just finished\", she said, shaking the fountain drink cup she was holding. She slid back the chair across from Raph and sat down, setting the small sack she was carrying in the other empty chair.\n\n\"I thought you and Riley usually ate lunch together,\" Raph said.\n\n\"We do most days. I had some, uh, shopping to do today so I just ate here before I head back to work.\"\n\nRaph glanced at the chair where Maria had set her purchases. He saw a pink and white striped bag with Victoria's Secret written on the side in elegant script.\n\n\"So, Riley tells me that you and uh,...\"\n\n\"Hunter?\" she asked when Raph seemed to be trying to remember a name. Hunter Maxwell was the man she'd recently started seeing. He worked in IT at the Heart Hospital of Northwest Texas. Maria also worked there in the accounting department and her father was a hospital administrator.\n\n\"Hunter, yes, sorry, I'm terrible with names,\" Raph continued. \"Riley says you and Hunter are getting on well.\"\n\nA little color showed in her face but she nodded.\n\n\"Yes, we are. He's very sweet but also very shy. Riley keeps saying that we should all get together, you know, like a double date, but...\"\n\n\"He's intimidated by me?\" Raph asked, nodding knowingly, trying not to smile.\n\n\"Exactly,\" Maria said, straight-faced. That lasted for about three seconds before they both laughed. \"He just can't get over that I'm friends with Riley. He's terrified to meet her, afraid he won't know how to act around her,\" she said, shaking her head.\n\n\"If you can ever get them together in the same place, she'll cure him quickly. I can't imagine anyone meeting her and feeling uncomfortable. That's her superpower. It allows her to relate to anybody,\" he said.\n\n\"Oh, believe me, I know. You forget, I've known her since we were like nine,\" Maria reminded him.\n\n\"Tell me about her,\" Raph said, \"What was she like back then?\"\n\n\"Riley has always been the sweetest thing. When my family first moved here, it was right before I started 6th grade. I didn't know anyone and on the very first day I was sitting alone at a table in the lunchroom and Riley walked up and asked if she could sit down. I told her yes and she sat down, introduced herself, and just started talking. By the end of that lunch, we were talking like old friends. She made sure she included me with her other friends and she sat by me in class. We became inseparable. \n\n\"This was all before her dad became a millionaire. He was on his way but at that time they were just a normal family. The summer between 6th and 7th grade was when the divorce happened. Riley was devastated when her mother left. It was like it tore her heart out. She was still Riley; sweet, kind, courageous, but I think a lot of it was a facade. She put on a happy face for her dad, her friends, teachers, but there were times when she thought no one was looking and I could see the sadness coming through. She would spend the night at our house sometimes. I had two beds in my room so I slept in one and Riley in the other. Mom would tuck us in at bedtime and she would tell us a story and then she would kiss each of us on the forehead before turning out the light. After mom would leave, I could hear Riley crying softly. She doesn't know that I know so please, keep my secret?\" she asked.\n\n\"Of course,\" he said quietly.\n\n\"In junior high, we started noticing boys, or I did anyway. Riley would lay with me on the floor as I flipped through the newest teen magazine and talk about the newest heartthrob, or who was cute at school. Riley was always popular. Not head cheerleader or clique popular, she was popular with everybody from the jocks to the AV guys. She never played high school class warfare. Boys asked her out, but she never dated anybody. Word eventually got around that she didn't date so people kind of stopped asking. She graduated first in our class and every single person in our class loved her.\n\n\"When she went to college, she became like this unicorn or something. The perfect trifecta of beautiful, smart, and rich. The college guys didn't take the hint like the boys in high school so she was relentlessly pursued. She put her head down and dove into her studies. She finished her degree a year early. I'm no psychologist or relationship guru but I think, after her mother, Riley was just afraid to have a close relationship with anybody else, besides me I guess, and I think there were parts of herself that she kept hidden, even from me.\n\n\"That's why I was so surprised that she took up with you as quickly and completely as she did. No offense. Take it from her closest friend, she loves you. Hell, I love you. Riley is happier than I've seen her in years. Her face just lights up when you call or text her, and when the two of you are together, y'all are so adorable. It's sickening,\" she laughed.\n\n\"Sorry, not sorry,\" he chuckled.\n\n\"So, anyway, that's our story or at least the abridged version,\" she said.\n\n\"Well, thank you for sharing,\" he said genuinely.\n\n\"So what are you shopping for today?\" she asked.\n\n\"I decided it was time for new sheets and comforter,\" he said. \"The old ones were getting a little threadbare.\"\n\n\"Oh, can I see?\" she asked excitedly, pulling the sack over, looking inside. \"Oh, I love the pastel purple sheets, and 1500 thread count, nice. The darker purple comforter is beautiful too.\"\n\n\"Do you think Riley will, uh, do you think she will like them?\" he asked a little hesitantly.\n\n\"She'll love them,\" Maria said, smiling at him. \"Let's be honest, Raph. You could have bought Sponge Bob sheets and she would love them.\"\n\n\"You think?\" he said, raising his eyebrows. \"I still have the receipt. I could take these back and run to Walmart,\" he joked.\n\n\"Don't you dare,\" she said, wagging a finger at him and giving him \"the eye\" before laughing.\n\n\"So what were you shopping for today?\" he asked, a smirk on his face.\n\n\"Oh, wow, I didn't realize what time it was. I need to get back to work,\" she said quickly, her face blushing. She tried to nonchalantly slide the Victoria's Secret bag off the chair as she stood up.\n\n\"Hang on and I'll walk you out,\" Raph said, a grin playing at the corners of his mouth. He picked his tray and trash up and dumped his trash in the barrel before setting the tray on the top.\n\n\"Okay, thank you,\" she replied.\n\n\"Where are you parked?\" he asked, picking up his shopping bag.\n\n\"In the south parking lot, just outside of Bealls,\" she said, as she pointed toward the department store. \n\n\"Me too, lead the way,\" he said, following along behind.\n\n\"So you do remember what a week from Saturday is, right?\" she asked as they walked.\n\n\"Vernal equinox?\" he replied, straight-faced. \"Ow!\" he said in faux pain as she slapped him on the arm. \"What is with the girls today? So violent.\"\n\n\"I'll show you violence if you forget Riley's birthday!\" she threatened.\n\n\"Trust me, I haven't,\" he said, suddenly serious. \"What in the world am I supposed to get her, Maria?\"\n\n\"I used to feel just like you're feeling right now, but I'm going to spare you what I went through and just tell you the secret. Riley doesn't want or need you to buy her any expensive gifts. She just wants something from the heart,\" she said simply.\n\n\"Thanks, Maria,\" he said. He knew she was right. Riley wouldn't care what he gave her, as long it was something that touched her heart.\n\n\"This is me,\" Maria said, stopping beside a silver Toyota Avalon. \"Where are you parked?\"\n\n\"Just right over there,\" he said, nodding his head as she climbed in the car.\n\n\"I can't wait to tell Riley who I had lunch with today,\" Maria said, putting on her seat-belt.\n\n\"She'll be sorry she missed it,\" he agreed. \"Drive carefully.\"\n\n\"You too,\" she said, pulling her door closed. She backed away and waved.\n\nRaph ambled between the rows of cars as she drove away. When she had traveled far enough that he doubted she could see him, he turned and headed back toward the mall so he could cut through to the north parking lot where he'd left his truck.\n\n*****\n\n\"Well done,\" Steve Barrett said, leaning back in his chair at the head of the conference table. He watched Riley close out the laptop she'd used for her presentation. \"Now that we have everyone here on board and a plan, we'll leave tomorrow for Las Vegas and present our decision to the Andersons.\"\n\n\"Thank you,\" she said, finally relaxing. \"We should take Dalton and Randy so that they can set up and demo the software and hardware there onsite. It might help contract negotiations go smoother,\" she suggested.\n\n\"Excellent idea. I'll have my assistant advise them we'll need them ready to go in the morning,\" he said, getting up from his chair.\n\nRiley's cell phone buzzed in her jacket pocket.\n\nRaph: Hey you. Hope your meeting is going well. Are you coming by after work?\n\nRiley: Hey you. It went great and yes, I'll be by probably around 5:30.\n\n\"Well I wonder who that could be,\" Steve said, smiling at Riley.\n\n\"It could be anybody,\" she said innocently.\n\n\"There's only one person who makes you smile like that,\" he said knowingly.\n\nShe blushed slightly but didn't deny it.\n\n\"Go home, Honey,\" he said in that fatherly tone.\n\n\"I can't,\" she protested. \"If we're going to be going to Las Vegas tomorrow there are things I will need Janice to do, and I will have to reschedule some meetings.\"\n\n\"Well, don't stay late,\" he said, walking with her out of the conference room.\n\n\"I won't,\" she said. Steve turned toward his office and Riley toward hers.\n\nRiley looked back down at her phone as she walked down the hallway.\n\nRaph: Great! Can't wait to see you. Love you.\n\nRiley: Me too. Love you too.\n\n\"Janice, could you come in here for a few minutes?\" she asked her assistant as she dropped her phone back into her jacket pocket.\n\n\"Yes ma'am,\" Janice said. She forwarded her phone to one of the other assistants, grabbed her tablet, and followed Riley into the office, closing the clear glass door behind her.\n\n*****\n\nRaph had just taken the pan of chicken breasts out of the oven when he heard the front door open and close. He knew it had to be Riley. He had given her his spare key when he'd had to leave for an early flight one morning and she was still in the bed. He'd told her to keep it, just in case.\n\n\"Mmm, something smells good,\" he heard her call from the small foyer. She slipped her heels off at the door and came barefoot into the kitchen. Raph had just turned from setting the pan on the counter as she advanced and wrapped her arms around his waist, rising to kiss him on the lips. \n\nRaph reached his long arms around her, the oven mitts still on his hands. He slid his hands down her back until they settled on her firm round behind. He gave her butt a firm squeeze which caused a combination of a contented sigh and a sensual moan to escape her throat.\n\nWhen they finally broke their passionate kiss, she leaned back to look up into his steel-gray eyes. His hands had moved from her butt to her elbows. She felt the texture on her bare arms and looked down.\n\n\"Did you just squeeze my butt with oven mitts on?\" she asked with a crooked grin and a raised eyebrow.\n\n\"Yes, yes I did,\" he said simply.\n\n\"Do it again,\" she challenged, moving closer again to press her lips to his.\n\nRaph reached down, cupping her firm buttocks with his mitted hands and gave them another firm squeeze.\n\n\"Oh!\" she exclaimed as he lifted her free of the floor. She wrapped her legs around his waist as he turned and carried her to the bedroom, closing the door with his foot.\n\n*****\n\n\"Did you get new sheets?\" she asked, a little out of breath as she laid naked beside him, her head resting on his chest.\n\n\"I did,\" he panted. \"New comforter too,\" he said, pointing in the direction he last saw it going before it wound up completely on the floor.\n\nRiley raised her head enough to see part of the comforter over the side of the bed.\n\n\"That's pretty,\" she said, laying her head back down on his chest.\n\n\"Do you like them?\" he asked.\n\nShe raised her head again, this time to look up into his flushed face.\n\n\"You don't need my approval for sheets for your bed, Love. You get what you like and I'll love them, I'm sure. You could have bought Sponge Bob sheets and I would still love them.\"\n\n\"Have you been talking to Maria?\" he asked.\n\n\"I talked to her on the way here from work. She said she had lunch with a handsome stranger today at the mall,\" she said, smiling up at him.\n\n\"That must have been before I saw her,\" he joked. \"Did she talk to you about the sheets?\"\n\n\"No, sheets never came up, why?\"\n\n\"Just wondering,\" he said. It was funny that they had both referenced Sponge Bob sheets. \"And I know that I don't need your approval to pick out or buy new sheets, but I do think of you when I make those kinds of decisions. I will never be able to look at this bed without seeing you here in it, with me,\" he said, as he lightly ran his fingers down her bare back to the sensual rise of her buttocks and then back up, causing her to shiver slightly.\n\n\"I can live with that,\" she beamed at him. \"I do love them. They feel so nice and smooth and cool. I love the color too.\"\n\n\"Good,\" he said, lowering his face to kiss her soft supple lips.\n\n*****\n\nRaph and Riley had just finished cleaning up after their reheated supper. She folded a dish towel and placed it on the counter next to the sink as Raph put the now clean roasting pan back in the cabinet.\n\n\"So, tell me about your meeting today. I know you were excited about it and I'm happy to hear it went well,\" Raph said, wrapping his arms around her from behind and nuzzling her neck through her delightfully fragrant hair.\n\n\"Well, the management group agreed with our assessment and voted to go forward with our plan as presented,\" she said, leaning her head back on his shoulder and wrapping one hand around the back of his neck.\n\n\"Well I'm happy it all worked out,\" he mumbled into her neck.\n\n\"You may not be so happy with the rest of the story,\" she said cautiously.\n\n\"How so?\" he asked softly.\n\n\"I have to fly to Las Vegas with Dad and two engineers in the morning to present the proposal to the Anderson brothers.\"\n\n\"Hey, I jump in a plane and take off several times every week. It's my job and you understand that. This is your job, and I understand that being an oil company executive is going to require you to travel from time to time. I will miss you terribly while you're gone, but I would never ask you not to do what you need to do,\" he said, almost directly into her ear.\n\nRiley lowered her hand and turned inside his arms until they were looking directly into each other's eyes. She wrapped both her arms around his neck.\n\n\"Have I told you lately that I love you?\" she asked softly.\n\n\"I believe so, but I will never tire of hearing you say it, and I love you too,\" he said, bowing his head to kiss her lips.\n\nBefore the kiss could reignite their previous passion, he pulled away.\n\n\"So, you had better get home and get packed,\" he said.\n\n\"I want to stay,\" she said longingly, \"but you're right, I need to go.\"\n\nHe released her from his embrace and walked, hand-in-hand, with her to the front door. He held her hand for balance as she slipped her heels back on. Raph opened the front door and walked with her to her truck.\n\n\"Drive carefully and text me when you get home,\" he said, holding the door open as she climbed into the driver's seat.\n\n\"I will,\" she said, leaning out to kiss him again.\n\nRaph closed her door and walked back up onto the sidewalk where he turned and watched her until her taillights disappeared around the corner.\n\nHe walked back to his apartment, closed and locked the door, and started walking through the apartment, turning out lights as he went. He arrived in the bedroom where he sat on the edge of the bed. Riley had helped him remake the bed after their lovemaking had made it look like a tornado had touched down on it. He stripped down to his boxers and went to the bathroom to brush his teeth and pee before turning in.\n\nOnce back in the bedroom, he plugged his phone in to charge, turned down the bed, and climbed in. The sheets and pillowcases still retained faint traces of Riley's perfume. He laid with his eyes closed, breathing in the floral scent when his phone chimed. \n\nRiley: Hey you.\n\nRaph: Hey you.\n\nRiley: Made it home and putting a couple of bags together before I go to bed.\n\nRaph: Thanks for letting me know. I wish I had known you had to fly out in the morning, I wouldn't have kept you so late tonight.",
        "Riley: I know, that's why I waited to tell you. I wanted to spend this evening with you. Thank you for supper and - everything else.\n\nRaph: It was my pleasure. The supper and everything else.\n\nAfter a brief time, his phone chimed again.\n\nRiley: OK, I think I'm ready to go and ready for bed.\n\nRaph: OK. Have a good, safe trip tomorrow and sleep well tonight. I love you.\n\nRiley: I will and I would sleep better if you were here. I love you too.\n\nRaph: Goodnight.\n\nRiley: Goodnight.\n\n*****\n\nThe next morning found Raph and Riley both airborne but flying off in opposite directions. Riley to Las Vegas, Nevada, and Raph to Pensacola, Florida. Riley was flying at 40,000 feet in the Barrett Oil Cessna Citation Latitude business jet at 430 knots, while Raph was cruising at 31,000 feet going 300 knots in the TBM-850. Raph hadn't had the chance to see Riley before they took off. The Barrett Oil Hangar was at a different location on the airfield but they did wind up taking off within 10 minutes of each other.\n\nRaph had departed first with three passengers. His flight plan called for an 865-mile flight taking 2:50. Riley's flight onboard the Cessna was four passengers and a two-man flight crew. Their flight plan was for a 667-mile flight with a flight time of 1:45.\n\nAs the distance between them grew by 14 miles every minute, their minds were focused on their jobs, but in that private space, reserved in each of their minds, they thought of each other - connected across distance and time, as if each could feel the other in their minds.\n\n*****\n\nThe sun was bright in the sky when Raph landed in Pensacola. He quickly deplaned his passengers and came back out to the tarmac. He took his phone from his pocket.\n\nRaph: Hey you.\n\nInstead of a text, his phone rang. It was Riley's number.\n\n\"Hey you,\" he said when he answered.\n\n\"I'm sorry, I just wanted to hear your voice,\" she said quietly.\n\n\"Don't apologize, I'm thrilled you called. How was your flight?\"\n\n\"Uneventful, which I've learned from you is good. We're in the car now, headed to the Anderson & Anderson offices. I wasn't sure when I'd get a chance to call you so I wanted to call you now. I've been waiting for your text since we landed.\"\n\n\"Well, I had further to go and a slower plane,\" he laughed.\n\n\"I'm just glad I was able to talk to you before tonight. So what are your plans for today?\"\n\n\"I'll hang around close. I think there's a Bonefish Grill just outside the airport that I may hit for lunch, but other than that, I'll just be hanging around here.\"\n\n\"How close are you to the ocean?\"\n\n\"Pretty close. I can see the Pensacola Bay from here. It's an inlet off of the Gulf. My arrival procedure took me about eight miles out over the Gulf before I turned back inland and landed on three-five.\"\n\n\"I love to look at the ocean and hear the waves, but I don't like to get in the ocean. I much prefer a good old Texas lake. Is that weird?\"\n\n\"Only in so much as that's exactly how I feel. I don't want to swim where there are things that I know can eat me.\"\n\n\"My thought precisely,\" she laughed softly. \"Well, it looks like we're pulling in so I better go. If I don't get to talk or text with you before you take off this afternoon, be careful, and I love you.\"\n\n\"Always, and I love you too,\" he said, punching the call-end button and placing the phone in his pocket.\n\n*****\n\nSteve, Riley, Dalton, and Randy walked into the lobby of Anderson & Anderson. It was a stark contrast to the offices of Barrett Oil. \n\nSteve had insisted when the Barrett Oil Corporate Offices were built that the concept was open, simplistic, and inviting. He wanted the space to promote collaboration and the open exchange of ideas and information. He wanted diverse teams to mingle and communicate and all employees to feel like no secrets or hidden things were going on behind their backs. \n\nThere were open-door policies that encouraged employees to take concerns up the chain of command if their direct supervisors were not addressing them. Management offices all had glass doors to project openness and accessibility of management. Anyone in the company could walk into Steve Barrett's office if they had a concern they felt required his attention. Steve had read Sam Walton, the founder of Walmart, who had a very people-first approach to building and operating a business.\n\nThe offices of Anderson & Anderson were on the opposite end of the spectrum. Everything here said money, extravagance, and exclusivity. There was a long, ornately carved reception desk that was so high you could only see the tops of the receptionist's heads unless you were standing directly in front of the counter. Large intricately carved frames held pictures of the Anderson Brothers. Their gaze seemed to look down upon all who entered. Both literally and figuratively. \n\nA second wrap-around desk was the security station with room for three security guards. There were multiple security monitors, radios, buttons, and switches. \n\nThe floors were polished marble. A bank of elevators was behind the reception area. \n\nA well dressed middle-aged man approached them as they entered.\n\n\"Mr. and Miss Barrett, my name is William Meggars. I am Mr. Anderson's assistant. If you will please follow me,\" he said, turning and leading them to the security desk. Four security badges were laid out on the counter. Everyone in the Barrett party took one before following Meggars toward the elevators. Once in the elevator, he placed his security badge against a card reader on the elevator panel until it turned green. He then pressed an unnumbered button and the elevator doors closed.\n\nThe doors opened to a large reception area. In the center of the space sat another beautifully carved wooden desk. The woman sitting behind the desk was young, blonde, and stunning. Two sets of wooden double doors, behind and at 45-degree angles to the large desk, stood large and intimidating like the impenetrable gates of the keep. The doors each had a polished gold placard. On each of the left doors, the placard read Anderson & Anderson. The right door placards said Will and Max Anderson, respectively, left to right.\n\nThe statuesque blonde rose as soon as they stepped out of the elevator.\n\n\"Mr. and Miss Barrett,\" she said, smiling sweetly. \"I'm Jennifer. Mr. Anderson is waiting for you,\" she said, turning and walking toward the set of double doors to her left. She wore a white blouse that fit her curvaceous figure perfectly. Her black pencil skirt clung to her shapely hips and descended to long athletic legs. She wore heels and walked with one foot directly in front of the other, giving her hips a hypnotic roll and sway as she walked. She grabbed both polished brass doorknobs, twisting in opposite directions before pushing both doors open and announcing the Barrett's like nobles who had just entered the king's court.\n\n\"Mr. and Miss Barrett,\" she proclaimed as she stepped to the side, holding to one massive door, and sweeping her arm elegantly from the Barrett party toward the now standing Will Anderson.\n\n\"Steve, Riley,\" Will Anderson said, coming around the corner of yet another ornate wooden desk that seemed to cover more floor space than a midsize car. Randy and Dalton had resigned themselves to being completely invisible by this point.\n\n\"Will,\" Steve said, reaching out to take the offered hand. \"Good to see you again.\"\n\n\"Mr. Anderson,\" Riley said, also reaching to shake his hand. \"Let me introduce Randy Lyles and Dalton Stevens. Randy is our Well Products Engineer and Dalton is our Systems Software Engineer.\" Both men stepped forward, exchanging handshakes with Anderson. \n\nA single door adjacent to the large double doors opened and Max Anderson entered, presumably from his office next door. Handshakes and greetings were once again exchanged.\n\n\"Max, please take these gentlemen to our R&D department so they can set up their respective demos while Steve, Riley, and I discuss the contract details,\" Will asked of his brother.\n\n\"Of course. Gentlemen, if you will follow me,\" Max said, leading Randy and Dalton out the double doors. Jennifer was there and quick to pull the doors closed behind her as she exited.\n\n\"May I offer either of you something to drink?\" Will asked.\n\n\"A water, while we're working,\" Steve said, sitting in one of the plush chairs in front of Will's desk.\n\n\"For me as well,\" Riley added, sitting down in the other chair and removing her satchel from her shoulder.\n\nRiley removed the proposal and contract documents from her satchel and started sorting them out on top of the large desk. She had come up with the idea to lease the technology to Anderson & Anderson instead of selling it to them outright. This allowed Barrett to have a steady income stream from the lease but also allowed them to maintain proprietary and creative control of the software and hardware. As she started explaining everything to the attentive Will Anderson, Steve sat back in his chair and looked on, proudly.\n\nWhat was it Raph had said to him, about watching Riley talk business following the original meeting they'd had with the Andersons? - \"It was like watching a sleek and powerful tigress in her natural habitat. It was beautiful.\" - Well, he was correct. It was beautiful.\n\n*****\n\nRaph had gotten back to Amarillo just before 4:00 in the afternoon. He'd finished his paperwork, got the TBM into the hangar, and was now headed home to his apartment. He stopped at Ruby's for some takeout barbecue. He parked at his apartment and went inside. He stripped out of his work clothes and put on a pair of loose shorts and a tee-shirt before sitting down with his supper and a glass of sweet tea from the refrigerator. He decided to eat half of the jumbo pulled pork sandwich and half of his potato salad and save the rest for later.\n\nAfter eating and cleaning up, he did a few tasks around the house. He thought about going for a run this evening but finally decided to try to read the new book he'd bought and never started. He went into the bedroom and had just pulled the book from his nightstand drawer when his phone chimed.\n\nRiley: Hey you.\n\nRaph: Hey you.\n\nRiley: It's been a long day. We stayed late, working on the contract details but we got them all done and it will be going to their legal department in the morning. Dad and I went and got checked into our hotel, and are now on the way for a late supper with the Andersons. Just wanted to touch base and tell you I miss you, and I love you.\n\nRaph: I'm glad it's going well. My day was pretty uneventful. Supper from Ruby's and some chores. Was about to crack that new book I bought. I miss you and love you too.\n\nRaph put his phone on the charger and laid back on the bed, opening his book.\n\n*****\n\nRaph didn't sleep well. He couldn't quite put his finger on why. It was almost like an impending sense of dread. He'd tossed and turned all night in his new sheets. Finally, at 5:30 he gave up and got up. He grabbed a clean pair of boxers and headed to the bathroom where he peed, brushed his teeth, and jumped in the shower. \n\nAfter his shower, he thought seriously about having the other half of his barbecue for breakfast but instead decided on a bowl of cereal. He poured the cereal and milk, grabbed a spoon, and headed to the love seat. He turned on the TV and was channel surfing when he saw a familiar face. It was one of those financial news channels and the picture behind the reporter was of Steve Barrett and Will Anderson, presumably in an upscale restaurant. Riley was seated next to Steve, and beside her was none other than Archibald Anderson. As the video was made full screen and started playing, he could see Steve and Will talking and eating as the now unseen reporter continued to speculate about what kind of business deals were being crafted by a billionaire Texas oilman, Steve Barrett, and Las Vegas millionaire Will Anderson. No mention was made of Riley or Archibald, but as he watched, Archibald leaned in and seemed to whisper something in Riley's ear. Riley smiled and turned her head toward Archibald, her face close to his, and her hand nearest to him dropped underneath the table just as the video ended.\n\nRaph sat, bowl in his left hand, spoon in his right, a bite of cereal now suspended halfway between his open mouth and the bowl. Milk dripped from the spoon down onto his bare leg just below his shorts. His mind trying frantically to reconcile what his eyes had seen. Archibald had had a snide smile on his face as he leaned in to whisper something in Riley's ear. He had seen her face, had been laser-focused on it. He'd seen the flash of a reaction before she smiled and leaned toward him. She began speaking to him, Raph could see her jawline move ever so slightly. His peripheral vision had registered her hand, dropping from the table between them, and then the screen had changed to a full-screen view of the news anchor. He finally sat the bowl on the coffee table and dropped the spoon in it. He absently wiped at the wet spot on his thigh from the dripping milk.\n\nHe wanted to call her, text her, something. What would he say? \"Hey, Baby, how's it going, is Archibald giving you the hard sell?\" His mind was moving a thousand miles an hour in a spiraling nosedive. He could see the metaphorical ground rushing up at him and he couldn't pull up. \n\nRaph rose from the love seat like a zombie. He left the half-eaten bowl of cereal on the coffee table and walked to his bedroom as if in a trance. He sat on the edge of the bed and looked over at the phone sitting on his nightstand. The time was 6:15 in the morning. It would be 4:15 in Las Vegas. He leaned over and grabbed his running shoes from his closet and put them on as if on autopilot. Once he had them on, he stood up, grabbed his keys from the top of his dresser, and looked back at his phone. He stood for several seconds before turning and walking out the bedroom door. He went straight to the front door, let himself out, and locked the door. \n\nNormally he would spend several minutes stretching before going for a run. Today, he just turned away from his door and started to run. It wasn't a slow steady pace or a build-up. He immediately broke into a sprint as if running from some macabre fate worse than death. He wanted the wind, the speed, the pain to wipe the images from his memories, the thoughts from his mind, and the fears from his heart.\n\n*****\n\nSteve and Riley arrived at the MGM Grand Hotel. The valets met them at the entrance and escorted them inside to the namesake restaurant owned by Jo\u00ebl Robuchon. They were led into an entryway with black and white checkered flooring, a grand chandelier, and French-themed decoration. Inside the dining room black tables with white cloth drapes were lined by white linen armchairs. On the other side of the table was a full-length plush blue bench or couch style seat which served four tables. They were seated at a table and their water glasses filled.\n\n\"Mr. Anderson will be with you shortly,\" the waiter said.\n\n\"Thank you,\" Steve said.\n\n\"This is really...\"\n\n\"Pretentious?\" Steve offered quickly.\n\n\"I was going to say, elegant,\" Riley smiled at her father.\n\n\"Sorry we're late,\" Will said as he approached their table.\n\n\"No problem,\" Steve said diplomatically.\n\nRiley looked up to see Will Anderson and right behind him was Archibald, trying to peer around his father's shoulder to look at Riley. Her ire was immediately up as she remembered the conversation he had with Raph, asking him - no essentially telling him he needed to step aside as Riley's love interest so that Archibald could step in.\n\nWill sat at the table, across from Steve, but Archibald stayed on their side, pulling out the chair next to Riley.\n\n\"It's good to see you both again,\" Archibald said in his customary nasally voice.\n\n\"Archibald,\" Steve said, nodding down the table to the younger man.\n\n\"Likewise,\" Riley said simply, not turning to look at the man head-on, giving him a sideways look instead.\n\n\"I hope you like French cuisine,\" Will said, picking up his menu. This is the finest French food this side of Paris.\"\n\nSteve and Riley looked at their menus, with Riley making quiet suggestions on what she thought he might like to eat. Steve was a meat and potatoes man.\n\nFor first-service, she ordered L'Avocat, a Cannelloni of avocado and Scottish salmon with delicate cream. For Steve, she ordered Le Homard du Maine, a Maine lobster in a thinly sliced turnip with sweet and sour dressing. \n\nSecond-service, Riley ordered the La Cuisse de Grenouille, a frog leg kadaif fritter with red miso and Espelette pepper, for both of them.\n\nFor third-service, she ordered La Langoustine, which was truffled langoustine ravioli in a foie gras sauce with simmered green cabbage for herself, and for Steve, L'Oursin, a delicate flan of sea urchin on potato puree topped with Arabica coffee foam. He took one look, and one bite of this and left the rest untouched as they talked.\n\nFor fourth-service, they both had Le Saint-Pierre, John Dory fish fillet with tempura of shiso leaf on delicate squid ink risotto.\n\nRiley had done all the ordering, for herself and Steve, in French. Will's French was also impressive. Archibald had attempted to show his skills as well, but Will had to make corrections when the waiter looked at him questioningly when Archibald would use an incorrect word, phrase, or tense. Riley nearly had to bite her cheek to keep from smiling at his butchering of the French language.\n\nRiley noticed a film crew standing just outside of the dining room. She could tell that her father was the subject of the camera. She tapped his arm discreetly, and when he looked down at her hand, she pointed her finger toward the door, tapping her finger absently on the table. Steve had looked up slowly, moving only his eyes past Will's shoulder. He spied the cameraman and knew instantly what Riley was telling him. He tapped her foot with his gently, acknowledging her warning.\n\nRiley sat back in her chair and at that moment, Archibald leaned over and placed his hand on Riley's thigh, about midway between her knee and her hip. At the same moment, he leaned over and whispered in Riley's ear.\n\n\"I'm glad to see you decided to leave your pet at home this time,\" he said quietly. He inhaled deeply, breathing in the fragrance of her hair.\n\nRiley felt her body react in revulsion for a hundredth of a second before she regained her composure. She smiled. A practiced smile that she had put on for many years, even when she didn't feel like smiling. When she felt like doing anything in the world but smiling. Right now she didn't feel like smiling, but she smiled. She turned to Archibald and leaned toward him, the beautiful smile still playing on her face. If Archibald had been looking, he would have seen that the smile did not reach her eyes. They were the raptor eyes of her father. Simultaneously, her hand dropped from the edge of the table and grasped the index finger of the hand on her thigh.\n\n\"If you ever, and I mean ever, touch me again I will make you regret it for the rest of your miserable life,\" she said, starting to bend his finger backward for emphasis. \"If you ever again speak ill of the man I love, I will ruin you. If you don't believe me, just look over my shoulder toward the lobby. Do you see the man with the camera? He's with a news crew, here filming my dad. If you do not get up slowly and politely, excuse yourself, and leave this very minute, I will stand up and tell everyone in this room that you're groping me under the table. If my dad doesn't kill you before I get a chance to explain, you will be ruined. A spoiled little rich kid who can't keep his lecherous hands off young women.\n\n\"Do you understand what I'm telling you?\" she asked, still smiling at him sweetly as sweat beaded on his forehead.\n\n\"Yes,\" he hissed.",
        "\"Good, go, now,\" she said, releasing his finger. He jerked his hand from her leg as if it were scalding hot.\n\n\"If you will excuse me,\" Archibald said, as he stood quickly, his voice croaky as if he were about to cry. \n\n\"Are you alright, son? You look a little peaked,\" Steve said.\n\n\"Fine,\" he snapped quickly, \"I'm fine, just feeling a bit unwell.\"\n\n\"Okay,\" Will said, \"have James take you home. I'll call for another car.\"\n\nArchibald turned, nearly knocking the approaching waiter over and hurried from the dining room.\n\nSteve cut his eyes to Riley who smiled sweetly and innocently at him. His brow furrowed. There was more going on here than he knew, for now anyway.\n\n*****\n\nRaph had run blindly, on pure instinct, until he couldn't run anymore. He saw a small park and veered over, under an old oak tree, and just collapsed onto the ground. He rolled onto his back and looked up through the canopy of limbs and leaves. The sun fell through the foliage like hundreds of light spears, stretching down to the soft turf beneath. His chest burned with every heaving breath. His legs ached and his arms lay useless beside him, devoid of feeling or life.\n\nThe battle that raged in his head was faith versus insecurity. He felt like he had complete faith in Riley but his insecurity sometimes reared its ugly head, and right now, it was a Cerberus, a three-headed hell-hound with gnashing razor-sharp teeth, ripping and tearing at his faith.\n\nHe lay, staring up and seeing nothing for half an hour, unsure if he was even conscious or not. His labored breathing had finally settled. His sweat-soaked tee-shirt clung to his body and the early morning breeze was starting to give him a chill. He sat up finally, his head hanging as though the weight of his thoughts threatened to topple him over.\n\nAfter what seemed an eternity, he forced himself back to his feet. He looked around and realized he had no idea where he was. He had run blindly, unseeing, for as long as his pain would carry him. He turned in a circle, picked a direction, and with his head hanging and legs that felt like lead, he started walking.\n\n*****\n\nRiley had come clean after they had returned to the hotel. Steve had a nose for knowing when something wasn't quite right. He had asked her about it and she had told him what had happened.\n\n\"Why that little bastard,\" Steve had said immediately. \"I will teach him to have some manors and respect for a lady.\"\n\n\"You will do no such thing,\" she said calmly. More calmly than she felt. \"I handled it. It's over. If I'm going to do this job and someday run this company, you have to let me figure things out for myself. I don't believe we will have any more problems out of Archibald so let's focus on why we're here and get the job done.\"\n\n\"For his sake, I hope you're right,\" was Steve's version of an agreement to her speech.\n\n\"Now, let's get a good night's sleep and tomorrow we get this wrapped up,\" she said.\n\nSteve's raptor eyes finally softened as he placed his hands gently on either side of her head. He bent and gently kissed her on top of the head before turning her face up to his.\n\n\"How'd you get so damn smart?\" he smiled down at her.\n\n\"I had a great teacher,\" she said, wrapping her arms around his waist and hugging him.\n\n*****\n\n\"I hope he's alright,\" Riley said as they drove back to Anderson & Anderson the following morning.\n\n\"I'm sorry, Honey, What?\" Steve asked, turning from the tinted window of the Lincoln to look at Riley sitting next to him in the leather rear seat.\n\n\"I said I hope Raph's alright,\" she repeated, looking down at her phone. \"I've been texting him since this morning and even tried to call, but it went straight to voicemail.\"\n\n\"Oh, I'm sure he's fine. Probably just forgot to charge his phone or something,\" he assured her.\n\n\"Maybe I should call Maria, to check on him?\" Riley was saying.\n\n\"I can send someone from corporate security back at the office if you're that worried,\" Steve offered.\n\n\"No, that's okay,\" she said quickly. She didn't want a truckload of security officers showing up at Raph's doorstep because he forgot to charge his phone.\n\nRiley: Hey girl, what are you up to?\n\nMaria: Hey, just getting ready to head to work. Are you still in LV?\n\nRiley: Yeah, hope to wrap up today and head home. Could you do me a favor?\n\nMaria: Sure, what do you need?\n\nRiley: I know this is going to sound silly but I haven't been able to reach Raph today. I don't think he's flying today but I can't get any response to text or call. Calls just go straight to VM.\n\nMaria: You want me to run by and check on him?\n\nRiley: If you wouldn't mind? I would appreciate it.\n\nMaria: No problem. Text me his address and I'll text you as soon as I know something.\n\nRiley sent the address and put her phone back in her satchel. She was still worried when they pulled into the parking lot at A & A but it was time to get her head in the game.\n\n*****\n\nMaria followed the directions given by her phone's GPS. When it had just called out \"You are one mile from your destination.\" she saw Raph, walking along the sidewalk. His gait reminded her of someone who'd had too much to drink. She quickly looked for a place to pull over.\n\n\"Raph?\" she said, walking back toward him after she parked the car.\n\nRaph kept coming toward her, eyes down, same drunken or zombie-like walk, as if his shoes were weighted and it took great effort to swing them forward for the next step.\n\n\"Raph?\" she said a little louder as she neared him.\n\nHis head came up and his eyes tried to focus on her face. He stopped, shoulders drooping, arms hanging loosely at his side.\n\n\"Are you okay?\" she asked as she reached him.\n\n\"No,\" he said hoarsely. His steel-gray eyes looked haunted. \n\n\"Come on,\" she said, reaching out and taking his arm, \"let's get you home.\"\n\nRaph allowed himself to be led to Maria's car. His body still screamed in exhaustion but his mind was indifferent to his body's protests. He fell into the passenger seat and stared straight ahead as Maria closed the door and quickly came around and got in.\n\n\"What happened?\" she asked as she started the car's engine.\n\n\"I saw Riley, on TV, with Archie,\" he said simply.\n\nMaria didn't understand what he was talking about. Had he had a stroke or some sort of psychological break? \n\n\"Riley was on TV?\" she asked as she drove the final mile to his apartment.\n\n\"Some cable financial news channel. They were talking about her dad, having dinner with Will Anderson in Las Vegas, but Riley was there with him, and Archie was sitting right there beside her, leaning over and whispering in her ear. She was smiling at him and leaning in close to his face. I thought she was going to kiss him,\" he finished in an anguished whisper.\n\nMaria was confused. That did not sound like Riley. Riley had told her what Archibald Anderson had said to Raph when the Andersons had visited Amarillo. Riley had been mad at Archibald's attitude toward her and especially toward Raph.\n\n\"There's got to be more to the story,\" Maria said. \"She had no interest in Archibald Anderson. She even said the guy creeped her out which is saying a lot for Riley because she just doesn't talk bad about people.\"\n\n\"I should have known,\" Raph said. \"I knew I had nothing to offer her. I deluded myself into thinking that love was enough to bridge the gap between our worlds, but let's be honest. I can't compete with a millionaire heir to an even bigger fortune, even if he is a dumb-ass.\"\n\nMaria pulled into Raph's apartment complex, saw his truck, and pulled up and parked beside it. She turned off the engine and turned to Raph.\n\n\"If you think that, then you don't know Riley at all,\" Maria said simply. \"She doesn't care about how much money you have. She's been chased and hounded relentlessly since she was 18 years old by people much richer and much better looking than Archibald Anderson. She was never looking for someone to add to her wealth, she just wanted someone to love her for her. Not because she's rich, or because she can elevate their social status, but just for her. She has that with you Raph. She talks about it all the time. \n\n\"She has been all over the world. She's seen exotic places. She has stories that would blow the mind, but the stories that she tells, when it 's just me and her, are the simple things that she does with you. Your walk around New Orleans, eating ice cream cones on a park bench, sitting with you on her patio, looking at the stars, cooking for you, you cooking for her, and something about a 10' tall road runner from your hometown. These are the things that mean the most to Riley. \n\n\"Look, I get it. I've been her best friend for a long time. I know how it feels to have that huge gap between our financial worlds. For a long time, I felt like she would outgrow me. Move on from me and into her new world. It took me a long time to realize that our friendship was really important to her because we'd been friends before she had money. I was her friend because I loved her, not her wealth. She truly cares for me, and you.\n\n\"Did you think it was some cosmic coincidence that I found you today? No, Riley texted me from Las Vegas because she was worried that she couldn't get in touch with you. She asked me to check on you. You owe her enough to listen to her side of the story. Right now, I'm going to get you inside. You're going to take a shower and then a nap. You look exhausted. I'm going to text Riley and tell her I found you, but neither you nor I are going to start accusing her of something over the phone or in text messages. She said they're trying to wrap up today so I expect her to be home tonight or tomorrow at the latest. When she gets home, you can ask your questions but you will give her the chance to explain. I am 99.9% sure that she's going to have an explanation that will make all this make sense so buck up,\" she finally concluded.\n\nMaria got out of the car and went around to help Raph out. He unlocked the door to the apartment and Maria helped him inside. He went to his room and got some clothes and disappeared into the bathroom. When she heard the water running she sat down on the love seat and took out her phone.\n\nMaria: Hey girl. Just wanted to let you know that I found Raph. He had gotten up early this morning to go for a run. He was listening to music on his phone and he dropped it and broke it. He said he would get a new one today or tomorrow. In the meantime, if you need me to pass along any messages, I'll be glad to. \n\nMaria did not expect a quick response since she knew Riley was working. She felt like a little white lie about Raph breaking his phone was better than upsetting her when she was working and over 600 miles away. She would beg for forgiveness later.\n\nAfter a few minutes, Maria heard the shower cut off. She checked her watch, needing to get going soon to get to work, even though she was going to be late. Raph came out of the bathroom and sat beside her on the love seat.\n\n\"Feel any better?\" she asked.\n\n\"A little, maybe. My legs feel like jello and my arms, like lead. My chest aches and for some reason my butt cheeks hurt.\" he said, just stating facts.\n\n\"Well, I texted Riley and told her you dropped your phone and broke it. Neither of us is going to bother her while she's working. This trip is important to her. She should be back tonight so you can talk to her then. In the meantime, are you going to be OK?\"\n\n\"Yes,\" he said. \"Maria, I'm sorry I'm so faithless or insecure or whatever you want to label it. Riley is lucky to have a friend such as you who truly has her back. I'm lucky too, to have a friend like you.\"\n\n\"You've been good for Riley and I am your friend, but don't make me have to choose between the two of you. You will lose every time. Riley has been my friend through thick and thin, even when she didn't have to be, and even when I didn't deserve it. You're a good guy, Raph. You make her happy. You're not some phase or rebellious fling. Just talk to her. Let her explain. Trust in the Riley you fell in love with. I promise you, you'll be glad you did.\"\n\n\"Thanks, Maria, for everything,\" he said tiredly.\n\n\"Go lay down, get some rest. I have to work but if you need anything, call me,\" she said, picking up a pad from the coffee table and writing her number down on it. She stood up and Raph stood with her. He hugged her.\n\n\"Again, thank you,\" he said quietly when they parted.\n\n\"You're welcome,\" she said, turning and walking toward the door. Raph stood still until he heard the front door open and close. \n\nHe turned and walked to the bedroom where he fell across the bed. He was out before his head touched the pillow.\n\n*****\n\nSteve and Riley had been in meetings with the Anderson brothers, corporate lawyers, and engineers. By noon, they had done all they could do, on-site, until the contracts were thoroughly vetted by the A&A attorneys. This process would probably take several more days, if not weeks, at which time there will be final meetings with lawyers from both parties before the deal was finally struck.\n\n\"Steve, Riley, thank you both for making the trip. I feel like this is going to benefit both our respective businesses and become the beginning of a wonderful partnership,\" Will said as Steve, Riley, Dalton, and Randy prepared to leave.\n\n\"Thank you,\" Steve said, shaking his hand. \"We look for good things from this.\"\n\nEveryone shook hands all around. Right on cue, the large wooden double doors opened and William Meggars stood ready to escort them back to the elevators and out. At the security-desk, everyone returned their security badges. \n\n\"Take us somewhere we can get a good steak,\" Steve Barrett said to the driver as soon as they were in the car. He'd been starving since last night's French restaurant visit where Steve found the portions either too small to be filling or too disgusting to eat.\n\nRiley pulled her phone from her satchel to check her messages.\n\nMaria: Hey girl. Just wanted to let you know that I found Raph. He had gotten up early this morning to go for a run. He was listening to music on his phone and he dropped it and broke it. He said he would get a new one today or tomorrow. In the meantime, if you need me to pass along any messages, I'll be glad to.\n\nRiley: Hey. Thanks for checking on him. I hate to hear about his phone. I miss talking and texting with him. We're going to eat lunch and then head back so I should be home by early evening.\n\nMaria: Great! Hope it all went well. We can't wait to see you. Be careful. Love you girl!\n\nRiley: Love you too. Talk to you tonight.\n\nMaria: Call me as soon as you get home. Before you go to Raph's, OK?\n\nRiley: Uh, OK. Do I need to call you now?\n\nMaria: No, it can wait. Have a good flight home.\n\nRiley: OK. Talk to you soon.\n\nRiley put her phone down, her brow furrowed as she stared, unseeing, out the car's dark window. \"Why do I need to talk to Maria before I see Raph?\" she wondered. Was something wrong and they just weren't telling her?\n\n\"Everything okay, Honey?\" Steve asked, breaking her train of thought.\n\n\"Huh, oh, yeah. Just thinking,\" she said.\n\n\"About that Archibald idiot?\"\n\n\"What, no. That's over and done. He's not worth wasting any more brainpower on.\"\n\n\"So Raph then,\" he said, nodding.\n\n\"Yeah, Raph,\" she said quietly.\n\n\"Still haven't heard from him?\"\n\n\"Maria said she'd talked to him. Said he went running and dropped his phone and it broke.\"\n\n\"And you don't believe that?\"\n\n\"It's not that I don't believe them, it just feels like there's more to it.\"\n\n\"Hit a drive-thru somewhere between here and the airport,\" Steve called out to the driver. \"We'll get on home and you can get to the bottom of this,\" Steve said in the tone that let her know it wasn't up for discussion.\n\n\"Yes Sir,\" the driver said.\n\n*****\n\n\"Hello,\" Maria answered on her car's Bluetooth connection.\n\n\"Maria?\" Riley's voice came over the speakers. \"I'm home and in my truck, now what is up?\"\n\n\"Where are you?\" Maria asked.\n\n\"Just leaving the airport.\"\n\n\"Can you meet me at the Whataburger?\"\n\n\"I'm on my way,\" Riley said, ending the call.\n\n*****\n\nRiley slid into the booth opposite Maria at the Whataburger.\n\n\"Spill it,\" she said immediately.\n\n\"Hey,\" Maria smiled nervously.\n\n\"Maria, for God's sake, what is going on?\"\n\n\"Okay,\" Maria took a long sip from her fountain drink and a deep breath, \"I'm just going to run through this so don't interrupt me, okay?\"\n\nRiley nodded.\n\n\"Raph woke up early this morning. Like 5:30 early. He said he'd had a bad night, not able to sleep, like a feeling of dread or something. He got up, fixed some breakfast, and was sitting on the couch channel surfing when he went by some cable financial news station. What caught his eye was the video queued up in the corner of the screen. It was your dad, and you, and - Archibald Anderson.\"\n\nRiley's head dropped. She could see where this was going and although she hadn't seen the video in question, she knew how it must have looked. Her father had preached to her before she went to college about the dangers of people with video cameras. \"Lives have been ruined, fortunes lost, businesses bankrupted, governments upended over something perceived in a video.\" he'd said. In her attempt to not cause a scene and embarrass herself, her father, or Will Anderson, she had \"played up\" her conversation to Archibald as just a private friendly exchange. She never thought about how it might look to her boyfriend, her lover, her true love.\n\n\"Now I'm not asking you to justify yourself,\" Maria continued. \"You're a big girl and what you do and who you do it with is your business...\"\n\n\"No!\" Riley interrupted, loud enough that people from nearby booths and tables turned their heads to see what the commotion was. \"No, it's not what it looks like,\" she said, quieter.\n\n\"Archibald dared to put his hand on my thigh, under the table. He leaned over and whispered in my ear how he was happy that I'd 'left my pet at home this time'. I had already seen the news camera in the doorway so I knew we were being filmed, so instead of making a scene, I smiled. I smiled and I leaned close to him so only he could hear and - I threatened him. I told him I'd ruin him and I'd stand up right there in that pretentious French restaurant and scream bloody murder. At the same time, I was verbally threatening him, I had reached under the table and grabbed his finger and bent it backward, holding it there the entire time I talked to him. He left immediately as soon as I let him go and I didn't see him again,\" Riley explained.\n\n\"I knew it was going to turn out to be something like that,\" Maria said, feeling vindicated for having defended her friend. \"Unfortunately, the video clip ended with you smiling and seemingly whispering sweet nothings to Archibald, and your hand slipping beneath the table.\"\n\nRiley tried to imagine the scene as described, viewed without context, from hundreds of miles away. Raph must think her disloyal. He had never acted outwardly jealous, but then again neither had she, but deep down, in the places she didn't want to acknowledge, even to herself, she had seen other girls look at Raph and felt that quick rise of possessive anger. \n\nWhen she'd first met Raph, on the flight to Austin to see her mother, her friend Peyton had flirted with Raph before Riley and Raph had done more than chat and have coffee. Riley had been jealous. She had no idea how she would feel if she woke up and saw Raph and Peyton sitting at a table in a fine French restaurant, whispering in each other's ears while smiling pleasantly. She instantly knew it would have torn her heart out. She knew that Raph had his insecurities when it came to their financial disparity. He worried that he didn't have the financial means to keep her, to make her happy. None of that mattered to her, but she knew it would be hard to ever completely dispel his fears. Riley had her insecurities as well. With all her wealth, could a man ever love her - completely love her - just for her?",
        "\"...and so I was driving to his house,\" Riley heard Maria saying when she pulled herself out of her head, \"and there he was, walking down the sidewalk. I thought he was drunk at first.\"\n\n\"What? Wait, what?\" Riley knew she'd missed something.\n\n\"I was telling you about when I went to check on him this morning, after you texted me,\" Maria said, confused.\n\n\"Oh, yeah, why was he walking? Was he drunk?\" \n\n\"No, I'm getting to that. So anyway, I stop and call out to him. He looked terrible. There was no color in his face and he looked like he'd been lost in the desert for a week. I got him into the car and he started telling me what happened. He said he was watching the TV and saw, well, what I already told you. When it was over, he said he couldn't make his brain work. He couldn't think what to do so he just ran. Physically ran. He said he took off and ran until his body gave out. He passed out under a tree for a while and when he woke up, he didn't even know where he was. He said he just picked a direction and started walking. That had to have been three hours or more before I found him and he was still just over a mile from home.\n\n\"I got him back to his apartment, made him take a shower, and you can just un-squint those eyes girl, I pointed him toward the bathroom, and told him to take a shower. I didn't help. I stayed, on the couch, until he came out and then I told him you would be home tonight and y'all could talk it out. I gave him my number in case he needed anything, but I haven't heard from him.\"\n\n\"So his phone's not broken? He just really didn't want to talk to me.\"\n\n\"First off, I'm sorry I lied about that. I just didn't want to upset you while you were working, and 600 miles away. Secondly, I don't think it was that he didn't want to talk to you. He just took off and forgot to take his phone. He wasn't thinking, he was just running on pure adrenaline.\"\n\n\"I've got to go see him, explain everything,\" Riley said, starting to get up.\n\n\"Want me to come with?\" Maria asked.\n\n\"Thank you for everything but no. I need to take care of this myself,\" Riley said, putting her hand on Maria's on the table.\n\n\"Call me if you need me, girl,\" Maria said.\n\n\"I will. Love you,\" Riley said, turning toward the door.\n\n\"Love you too,\" Maria called after her. \"Heaven help you, Hunter Maxwell, if I ever love you as much as she loves that man,\" she said softly, reaching for her fountain drink cup.\n\n*****\n\nConsciousness came slowly to Raph. The room was dark but he could still see. His whole body hurt from the ends of his toes to the tips of his hair. \"How the hell does my hair hurt?\" he wondered. As he tried to reboot his brain to clear it of the mental chaos that had overloaded it, he felt a presence in the dark. A light floral scent hovered in the air. Something warm and firm pressed against his shoulder and hip. He felt the lightest touch, stroking his hair and a warm breath moved over the back of his neck. He was still lying on his stomach, just as he'd fallen. He hadn't moved an inch in however long he'd laid here. He felt a warm wetness on his cheek where he imagined he'd drooled, or cried, or maybe both.\n\nThe light stroking touch left his head and moved downward, down his back, until it reached his lower back before it snaked around his torso, cupping his ribs lightly and squeezing possessively. He mustered his strength and ignoring the accompanying pain, lifted his head, and turned it the opposite direction before his strength played out and his head dropped back to the bed. In the instant, before his head fell, he saw the haunted, sad hazel eyes, framed by straight, light-brown hair. Perfect supple lips that told no tale one way or the other. His last thought was he was glad Riley was home, before a tidal wave of blackness swept over him, consuming him, drawing him back out into the ever-darkening depths.\n\n****\n\nWhen Raph next awoke, it was completely dark. He was under the covers, laying on his side. His recent memories flickered through his mind like an old 8mm Christmas video, projected onto a white sheet held to the wall with thumbtacks. Could it all have been a bad dream? He reached for the nightstand to retrieve his phone. His arm felt odd, stiff, sore, like after a hard workout when the lactic acid builds up in the muscles. He managed to pick his phone up and bring the screen into his view.\n\nIt was 3:28 in the morning. There were 8 missed texts and 4 missed calls. Opening the phone he saw all the calls and texts were from Riley and they were many hours old. How long had he slept?\n\nA soft sigh and slight movement caused him to freeze in place. A slender hand snaked up, over his rib-cage, and around his waist. It came to rest on his bare chest as a warm body pressed against his back.\n\n\"Raph?\" came the softly whispered question, close enough that he felt the warm breath on his neck and ear.\n\nRaph scooted over so that he could lay on his back and look beside him. Riley was laying on the bed beside him. She propped herself up on her elbow as she looked uncertainly down into his eyes. The light from the cell phone creating odd shadows and highlights. She had one of his tee-shirts on which was pulled sideways, exposing one bare shoulder.\n\n\"Hey you,\" he whispered.\n\n\"Hey you,\" she smiled at him as a single tear rolled from the corner of her eye.\n\nRaph reached his hand up, wiping the tear away with his thumb before cupping her face in his hand.\n\n\"I'm sorry,\" he whispered.\n\n\"You're sorry?\" her quivering voice asked.\n\n\"I'm sorry that either I left the room in your heart for another to enter, or I'm sorry that I was so faithless to believe that you might have done what my mind thought you had done. Either way, I'm sorry.\"\n\n\"Oh, Raph,\" she cried as she grabbed him, hugging him close, lovingly, possessively. \"You have nothing to be sorry for. We're all human. I know that I trust you, but I'm still jealous. Maria told me what happened, and in your shoes, and if I'm being honest with myself, I might think the same thing. I will tell you all of it, I promise, but for tonight just know that you are my only love and you've left no room, whatsoever, for anyone else in my heart.\"\n\nRaph wrapped his arms around her tightly, burying his face in her shoulder. His mind struggled between relief and guilt. How could he let himself go there? Why did that have to be his first reaction? His insecurities were a destructive time-bomb. If he was ever to have a life with this beautiful creature, he would have to allow himself to trust her completely until such time that he was presented with cold, hard, unimpeachable evidence to the contrary.\n\nRiley was kissing his neck and nibbling on his ears. The pent up emotions she'd had since arriving and finding him near comatose in the bed flooded out of her in a torrent. She cried. She laughed. She loved, and she realized, had become very excited. Laying on top of him she could feel that his body was responding to her as well. She reached down, pulling the oversize shirt up enough to push her satin panties down so that she could worm them off with her legs. She then pulled the tee shirt up and over her head, throwing it on the floor.\n\nRaph was quick to realize when Riley pulled her shirt off and laid down, skin on skin, on his chest. He felt the hard nubs of her erect nipples. He moved his hands down her bare sides and found no panties when his hands reached her hips. He placed his hands directly atop both her firm rounded butt cheeks and gave a firm squeeze. Riley's moan and the grinding of her hips against his now fully erect member were his rewards.\n\nRiley raised her head and found his waiting lips. She crushed her lips to his, immediately assaulting his lips with her tongue. It was a battle quickly yielded as Raph opened his mouth to welcome the victor. She raised her hips when she felt him trying to relieve himself of his boxers and soon, she was laying directly on his steel-hard erection. As she rocked her hips, her now wet, engorged lips rubbed along the length of his shaft, coating him with her natural lubrication. She continued to kiss him passionately as she scooted her hips up onto his body just far enough to feel his now free erection spring up to lay softly on her butt. She reached back, taking hold of him and positioned him at her entrance. As the head found its target, she pushed herself down, taking half his length with her first push. She changed direction, pulling up before going back down again. Three strokes later he was fully encased in her soft, wet, warmth. \n\nRaph continued to kiss her shoulders as he moved his hands between them to gently squeeze her high firm breasts. She sat up to give him better access as she continued the steady up and down rhythm. He rubbed his thumbs around the outside edges of her nipples as she arched her back and pressed her body forward, aching for the contact she desired. Finally, he captured both nipples between his thumbs and middle fingers and gave them a light squeeze and twist. Her reaction was immediate. Her pace quickened and her breath became more ragged. Before she could reach her climax, Raph rolled them both over. He looked down into her hazel eyes, saw the passion and the love. She brought her legs up and Raph hooked his arms under her knees, bringing her long sensual legs higher, altering the angle of his entry. \n\nRiley was surprised when Raph flipped her over on the bed. Although they had made love several times in the past few weeks, he had, for the most part, let her control their lovemaking. She loved being on top, watching his face as he filled her deliciously. She could rock her hips and rub her clit against his pelvic bone which gave her intense sensations. Now, however, he had rolled her over and raised her legs high. The new angle caused his velvety head to directly stimulate a hidden place within her. With every thrust it was like lightning traveling throughout her body, making every nerve hypersensitive. Suddenly the point where his large hands held her calves, became an erogenous zone. The feel of his thighs, cradling her butt caused an erotic sensation. He was claiming her on a primal level. She was his, she would be his, now and forever. This realization was as stimulating as his touch and her orgasm was building quickly.\n\n\"Yes - please - take me,\" she begged, breathlessly.\n\nHis hips thrust strongly, sweat beaded on his face, a sheen covered his chest. The look of concentration on his face told her he was fighting back his orgasm in hopes of her finishing first. Even as he claimed her as his own, he still considered her pleasure, her release, her satisfaction. \n\n\"I'm coming!\" Riley yelled as the wave crashed over her. Raph maintained his hammering rhythm for a few more seconds before burying himself deeply, erupting again and again as she held tightly to his wrists as her orgasm finally began to subside.\n\nRaph stilled. His sore, recovering body shook with the exertion. He pulled each of her legs to him, kissing her shapely ankles in turn before moving them gently to the side and laying them on the bed. He leaned down to kiss her, gently, a bead of sweat falling from the end of his nose onto her cheek. \n\n\"Stay here,\" he whispered, \"I'll get you a washcloth and towel.\"\n\nHe got up, a little unsteadily, and walked naked to the bathroom. He returned with a warm wet washcloth and a towel. He helped her clean up before helping her up out of the bed. While she went to the bathroom, he got them both some clean shorts and shirts.\n\nHe dressed and went to the kitchen where he took two bottles of Gatorade from the refrigerator. He drank nearly all of one on the way back to the bedroom. The second he handed to Riley who had come back from the bathroom and found the clothes on the bed. She had put the shirt on, but the shorts were still laying on the bed.\n\n\"Thank you,\" she said, taking the bottle from him. \"For everything.\"\n\n\"No, thank you for not calling me out for being the idiot I was,\" he smiled at her. \"Do you want to get up now or go back to sleep?\"\n\n\"I think I could sleep a little more,\" she said, yawning.\n\n\"Okay,\" he said as she climbed back into the bed.\n\nRaph climbed in beside her and laid back on the pillow. She snuggled up and laid her head on his chest and her arm across his body.\n\n\"I love you,\" she said, sleepily.\n\n\"I love you too, Riley,\" he said, kissing the top of her head before reaching over and turning out the light.\n\n*****\n\nRaph awoke with a start. He was on his back, alone in the bed. His fragmented thoughts raced to align themselves into some sense of order and the details of the past 24 hours began to come into focus. A wave of guilt washed over him, like cold black water, crashing violently on top of him, taking his breath, drawing him down into the depths. How could he have had the thoughts, the suspicions he'd had? Had he so little faith in the bond between Riley and himself? The next wave, realization that there had been no transgression, was more subtle, giving him buoyancy, helping to propel him toward the surface and the light. The final wave, forgiveness received from Riley for his lapse in faith, was a brilliant blue warm force that lifted him to the surface and propelled him gently to the shore, to safety. A single tear of relief, joy, blessedness rolled from the corner of his eye.\n\nRaph sat up on the side of the bed, a new resolve to be worthy of the love given him. He rubbed his face with his hands and got up. His body cried in protest as his sore aching muscles all tried to check in at once. Ignoring the roll call, he opened the bedroom door. The smell of bacon and eggs assaulted his senses. He saw Riley standing at the stove, still wearing his tee-shirt. She was bare-legged and barefoot. Her hair was in a ponytail and he could hear her humming that little tune she hummed when she's happy. No painter or sculptor could have ever captured the stunning beauty of this scene, not even his namesake Raphael. He could have stood like this forever and never tired of the view. Some inner sense must have alerted Riley to his presence because she was already smiling brightly when she turned to look over her shoulder at him.\n\n\"Hey you,\" she said softly.\n\n\"Hey you,\" he replied, his voice hoarse and his throat tight.\n\n\"Come, sit down,\" she beckoned. \"Breakfast will be ready in a minute.\"\n\n\"It smells wonderful,\" he said, walking, or more accurately, limping to the small dining table.\n\n\"Thank you,\" she beamed. She opened the refrigerator and removed a carton of orange juice, poured a glass, and sat it on the table before him. She also handed him two ibuprophen. \"Drink that and take these. After your run yesterday and - last night - you're probably still dehydrated and I can see that you're still hurting.\"\n\nRaph took the offered glass of orange juice and after the first sip did feel his body scream for more. By the time she set the plate of eggs and bacon in front of him, he'd already drained the glass. She refilled it before sitting down with her plate and glass.\n\n\"So, are you ready for the whole sordid tale?\" she asked.\n\n\"You don't have to tell me anything, Riley. I acted a fool. I should have known that I could trust you and I'm sorry that faith faltered in the face of my insecurities.\"\n\n\"It's OK, Raph. Honestly, if you weren't at least a little jealous, I think my feelings might be hurt. I want you to love me to the point that you're scared to lose me. I know I feel that way about you. Yesterday may have been a bit more of a reaction than what is healthy, but I think it's a learning opportunity for both of us. We're in this together and if I can say it without scaring you to death, for better or worse. We're going to have hurdles and misunderstandings. It's all part of two people trying to mesh their lives, personalities, and yes, insecurities into one cohesive life together.\"\n\n\"I don't deserve you,\" he said.\n\n\"Do you deserve the circus that is my life, my issues, my insecurities, no, you don't, but too bad, you're stuck with them as long as you're stuck with me,\" she said, reaching over to take his hand.\n\n\"I'll do better. I'll be better,\" he said, squeezing her hand gently. \n\n\"We both will,\" she said lovingly. \"Now, let me tell you all about my trip.\"\n\n*****\n\nRaph and Riley started their healing that morning at the table. A milestone had been reached in their relationship. They'd both had to deal with some deep-seated feelings and emotions. They'd had to do some deep soul searching, identifying their weaknesses, recognizing them for what they were, resolving to make them better.\n\nRaph set up a lunch with Steve shortly after. Just the two of them. He laid out everything that had happened. He intended to simply explain himself and to assure Steve that he would work daily to be worthy of Riley's love. As it turned out, Steve provided counsel, bared his soul on love, marriage, pain, and forgiveness. Steve stepped in and helped fill the cavernous hole left by the death of both of Raph's parents. He spoke to Raph as a father to a son, not the overprotective father to his daughter's boyfriend, although that facet remained as well. Raph knew that Steve would do whatever was necessary to protect his little girl, but he shared parts of himself with Raph as well, making him feel like family, like he had someone in his corner. Something Raph had craved in recent years.\n\n*****\n\n\"Raph, Riley, this is Hunter,\" Maria said as she and the nervous-looking young man stood at the front door of Riley's house.\n\nRaph extended his hand, which Hunter shook. Raph noted the sweaty palms and truly felt sorry for Hunter's almost crippling shyness.\n\n\"Good to meet you, man. Maria speaks highly of you, and I think highly of Maria,\" Raph said, winking at Maria who blushed slightly.\n\n\"Yeah, uh, you too and same here.\" he stammered.\n\nRiley, well, was Riley. She stepped forward, embracing Hunter in a hug, kissing him on the cheek before stepping back, dropping her arms to clasp both his hands with hers.\n\n\"Hunter, it is so nice to finally meet you,\" she smiled her beautiful smile at him. \"I have heard so much about you that I feel like I already know you. As you know, Maria is my oldest and dearest friend. If she loves you, I love you and you are family. Welcome to our home,\" she said sweetly.\n\nHunter had a moment when he looked like he might bolt, but he raised his eyes, meeting her soft hazel eyes. He licked his parched lips and swallowed visibly.\n\n\"Thank you he said, and uh, happy birthday,\" he managed to say.\n\n\"Thank you, Hunter,\" she beamed. \"Now y'all come in and let's get this party started!\" she said happily. She released one of Hunter's hands and grabbed Maria's, pulling them both into the house and down the hall. \n\nRaph smiled, closing the heavy wooden door. She truly had a superpower to make even the timidest spirit feel special. He turned and headed down the hallway, following the excited voices.\n\nThe \"party\" was just the four of them. Raph had brought up a table from the barn and set it up on the patio. He'd grilled burgers, hot dogs, and a couple of pork tenderloins that had been on the smoker since early morning. Maria and Riley had brought out trays of vegetables and condiments. A large pitcher of iced tea provided the drinks.\n\nThey sat around the table and got acquainted. Hunter slowly but surely began to come out of his shell. Riley made sure to include him and little by little his nervousness began to melt away. He went from only answering direct questions to joining the conversation and asking questions of his own. Riley promised to give him the lowdown on Maria. Maria threatened her, in jest. It was a great time had by all. \n\nMaria gave Riley a large gift bag with colored tissue stuffed in the top. When Riley removed the tissue and reached inside, she pulled another smaller sack from inside. Raph immediately recognized the pink and white striped bag. Riley looked inside, then at Raph, her face blushed bright red. ",
        "\"I think this might be a gift for you,\" Riley said to Raph, lifting out a purple lace bra and panty set. The fabric was practically see-through.\n\n\"Hey, they match our new sheets,\" Raph laughed, \"and I'll look wonderful in them.\" They all laughed. He couldn't wait to see her wear them.\n\n\"I thought that the day I saw you in the mall - that they matched the sheets\" Maria added. \"But I wasn't about to show them to you right there in the middle of the food court.\"\n\n\"Probably a good idea,\" he agreed.\n\n\"I love them,\" Riley said, putting them back in the sack before hugging Maria tightly.\n\nRaph handed Riley a smaller sack. \n\nShe reached inside and took out a framed 5x7 photo. It was her and Raph, smiling, arms around each other, in front of the statue of the 11' road runner, Paisano Pete, who stood atop the \"Welcome to Fort Stockton\" sign. The photo, taken by a stranger at Riley's request, was during Raph's attempt to cheer her up after a particularly upsetting visit with her mother. It represented his commitment to her happiness.\n\nRiley held the photo for several long moments, a look of loving admiration in her hazel eyes. Finally, she lifted her head and looked into Raph's steel-gray eyes.\n\n\"My mission in life is to make sure you're always as happy as you were at that moment,\" he whispered.\n\nRiley moved slowly toward Raph, never taking her eyes from his until their lips met. Maria, Hunter, the world and everything in it disappeared until it was just the two of them. Time stopped or sped ahead nearing eternity, neither knew nor cared. At that moment, they were truly bonded deep in their souls, destined to be each other's future. \n\n\"What the heck was that picture of?\" they all heard Hunter whisper, followed by a slap on the leg from Maria. \n\n\"What was it with girls these days? Such violence.\" Raph thought.\n\nRaph felt Riley smile on his lips and the spell was broken, but not the bond. That remained, stronger than ever.\n\n\"Thank you, Babe,\" she whispered as she pulled back from his lips. \"I love it.\"\n\n*****\n\nLife began to take on a rhythm. Raph and Riley both continued to work. Raph flying here and there as necessary, Riley working diligently at Barrett Oil, continuing to impress at many levels. When they weren't working, they spent their time together. They would spend days, and nights, at Raph's apartment, or at times they would stay at Barrett Manor. They rode horses, they played, they laughed, and they loved. Raph would wake sometimes, alone in Riley's bed. He would dress and go downstairs to find her standing on the patio, a painting easel set up, a brush in her hand as her eyes looked at the sunrise coming up over the rolling hills. No matter how quiet he was, she always seemed to sense his presence, turning to smile at him as he stood in rapt silence, watching her look upon something that moved her soul.\n\nHe knew, more than he'd known anything his entire life, that she was his destiny, his love, his life - always."
    ],
    "authorname": "LKilkenny",
    "tags": [
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/always-ch-03-1"
}