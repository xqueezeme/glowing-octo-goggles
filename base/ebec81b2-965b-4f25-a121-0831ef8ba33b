{
    "title": "Succubus Summoning 109",
    "pages": [
        "Phil was lying naked in bed and wondering how the hell he was going to get out of his current predicament when he heard the chanting. It caught his attention immediately because the voice was male and the chanting sounded a lot like the spells he used to hear at Wargsnouts College for Warlocks.\n\n'How the hell' was quite appropriate considering Phil was currently trapped in Hell. Rosa and Verd\u00e9, a pair of succubi, had spirited him here after he and a friend had botched a summoning ritual.\n\nOn the surface most men would have wondered what he was so worried about. Phil was currently lying on a gigantic bed, beneath opulent silk hangings, in a room that looked more as though it belonged in an exclusive brothel than the netherworld. On top of that he was forced to have regular sex with incredibly hot babes. This was most men's idea of heaven. Why would anyone be so keen to escape that?\n\nPhil knew the truth though. To Rosa and Verd\u00e9 he was just a plaything. At some point they'd get bored of him and then they'd suck out his soul and life force with no more thought than raiding the fridge for a night time snack. They were succubi -- daemonic sexual vampires -- it's what they did.\n\nThere were far worse ways to die than expiring in one final, mind-shattering, erotic explosion, but Phil was only eighteen. A good death was still a death nonetheless and Phil would rather that end was put off by... ooh... say ninety years or so. So this was why, when he heard the chanting, his ears immediately pricked up.\n\nPhil got off the bed and rushed to the window. The sounds were faint, but they were definitely coming from somewhere inside the castle.\n\nAnother warlock, or rather a real warlock -- Phil was only a student and a fairly mediocre one at that -- was somewhere else in the castle. Hope flared in Phil. If the warlock knew how to get here then he must know how to get back to Earth. This was his chance to escape!\n\nHe leaned out of the window and tried to pinpoint where the voice was coming from. He ignored the wargen snuffling around in the darkness below.\n\nYes, there it was. Below him and to the left.\n\nPhil rushed to the door and stopped.\n\nHe hadn't actually wandered around the castle unaccompanied before. He thought of the wargen, Verd\u00e9's plants, the bathroom nymphs... What other dangers lay in wait for him?\n\nIf you stay here you're going to die anyway, he thought. It would be a sweet death but it would still be a death.\n\nPhil pushed the door open and crept out into the corridor. He wished he had something to wear so he didn't feel so completely naked, even if it was only a dressing gown. He padded down the corridor past the other closed doors. Briefly he wondered what might be behind them before deciding he probably didn't want to know.\n\nHe couldn't hear the chanting anymore. The castle wasn't that large though. He should be able to rely on his sense of direction to take him to where the sounds were coming from.\n\nEasier said than done in a realm where topology seemed more like general guidelines than a concrete set of rules.\n\nPhil crept down the same staircase Rosa and Verd\u00e9 had led him down on the way to the baths. At the bottom he turned right instead of left. Briefly he wondered where the kitchens were or if they even existed. Food was prepared for him and left outside his door, but he'd never seen any serving staff.\n\nSomehow, he didn't imagine Rosa slaving away over a hot stove.\n\nHe made his way through the lower corridors. The d\u00e9cor in the castle had a strong sexual theme, but in this section there was also a strong sadomasochistic theme as well. The paintings on the walls depicted kinky sex scenes that got steadily worse as Phil walked down the corridor until he was no longer sure whether he was looking at sex or torture.\n\nThe change was also reflected in the fixtures. Soft organic curves in gold were replaced by spiky twists of black metal. Phil wasn't sure whether he wanted to go on. The corridor was completely silent, but his ears conjured up sounds of whips cracking, chains clanking and voices raised in screams. Whether it was his imagination or ghostly echoes of what had once been, he couldn't tell.\n\nIt wasn't quite complete silence, he realised.\n\nWas that... yes it was.\n\nHe could hear the chanting again. It was coming from up ahead. Steeling himself, Phil followed the sounds until the corridor terminated in an ominous, black metal door. An arcane symbol of even darker metal was inlaid into the surface.\n\nNot. Exactly. Promising.\n\nIt was where the chanting was coming from though. With some degree of trepidation He approached the door. The metal surface was warm to the touch, but not hot enough to be uncomfortable or dangerous. Phil put his ear against it to try and make out the sounds more clearly.\n\nGiggling from behind him made him aware he was being watched. He turned and saw a girl standing at the corner of the corridor. Her hair was short, spiky and a vivid bright blue. She wore a little silk dress of the same colour.\n\n\"Um... hi?\" Phil said.\n\nThe girl looked younger and more innocent than the other succubi, but she was still a succubus. An elaborate pair of horns, also blue, curled round behind her ears. Her eyes were deep red and glittered like precious rubies.\n\n\"Are you sure you want to go through there?\" the girl asked, her eyes twinkling as she smiled.\n\nPhil looked back at the jet-black door.\n\n\"Why? Is it not safe?\" he asked.\n\nThe girl put a hand to her mouth and giggled. She turned and ran round the corner.\n\n\"Wait,\" Phil said. He ran up to the bend in the corridor, but there was no sign of the girl anywhere.\n\nWho was she?\n\nYet another mystery, he thought.\n\nHe returned his attentions to the door. Carefully, he opened it a crack and slipped through.\n\nThe room on the other side was gigantic, far larger than Phil was expecting. He was standing in an enormous hall, like the nave of a large church or cathedral. He doubted any gods were worshipped here though. The floor was polished black obsidian and pillars of the same material marched alongside a wide, central aisle. Low red flames flickered in brackets of twisted black metal.\n\nThe door was a side entrance. The central aisle ran perpendicular to him from the main entrance: an impressive pair of double doors at the far end of the hall. The source of the chanting stood in the centre of the aisle, lit in a beam of red light emanating from a high point at the other end of the hall.\n\nIt was another warlock, Phil saw, his features hidden within long, tatty black robes. The warlock stood in the centre of a protective circle. Low purple flames flickered around the circumference.\n\nThis could be his freedom, Phil thought. He moved cautiously around a pillar, wondering how he should approach the other man.\n\nWhat was the warlock doing here?\n\nPhil looked down the hallway and saw...\n\nN\u00ffte!\n\nPhil quickly ducked back behind the pillar, his heart beating in his throat.\n\nThe warlock was here for N\u00ffte.\n\nPhil peeked out from behind the pillar. He was lucky; he didn't think she'd seen him. N\u00ffte sat on a black metal throne surrounded by a pile of human skulls. She was absolutely terrifying -- the archetypal demon. Her black eyes absorbed all light, like a pair of black holes. Leathery black wings were folded behind her. She wore a baroque basque and thigh length black leather boots. She sat casually on the throne while projecting the authority of a monarch.\n\nDespite her intimidating appearance, Phil couldn't deny she was also intensely alluring. She had a perfect hourglass figure that swelled out into a pair of sizeable breasts. Her face was flawless, its beauty matched only by its cruelty. And of course her black leather bondage outfit was more than a little kinky.\n\nPhil hoped the other warlock knew what he was doing. The cruel smile on N\u00ffte's lips didn't exactly fill him with confidence. She regarded the chanting man with casual amusement, as if he was on the same level as a court jester or funny little animal. If cats had human faces Phil imagined this was the expression they'd wear while playing with their prey.\n\nThe warlock finished his mystical incantations and switched back to conventional English. His real voice was less imposing. It was a little reedy and prone to trembling up into higher octaves.\n\n\"I bind thee to me, demon,\" the warlock said. \"I am your master. You will obey and serve me.\"\n\nN\u00ffte simply smiled.\n\n\"And what is your pleasure... master?\" she spoke in a voice like liquid honey.\n\nShe leant forward, displaying the soft curves of her cleavage. Her already ample breasts were accentuated by a tight bodice that both squeezed them together and pushed them up. The effect was... quite impressive.\n\nPhil didn't realise he was walking forward until he was almost out from behind the pillar. He blanched and hurried back into cover. How could something so obviously deadly also be so alluring at the same time.\n\nThe warlock in the aisle was hit by the full force. He visibly gulped.\n\nPhil didn't rate his chances of escape very highly.\n\n\"I desire carnal knowledge of your body, succubus,\" the warlock said, his voice trembling out of his control. \"You will show me pleasures other mere mortals can only dream of.\"\n\nN\u00ffte licked plush black lips.\n\n\"As you command... master,\" she replied, her voice dripping with the promise of forbidden delights. She slowly got to her feet and walked towards the warlock, her black eyes fixed on his as her hips swayed with seductive grace. She was wanton carnality distilled into physical form.\n\nThe warlock could barely contain himself in his excitement. His body trembled with need and his hands strayed down to his crotch, as if eager to pull out his cock right away and start stroking.\n\nHe doesn't stand a chance, Phil thought.\n\nN\u00ffte stepped into the protective circle with no more thought than stepping over a crack in the pavement. She stared intently into the warlock's eyes and slowly pulled down his cowl.\n\nThe man revealed had a face that was gaunt and riddled with blotchy red acne. Phil was surprised at how young he was. Why, he was barely older than Phil himself. He could have been a fellow student at Wargsnouts although Phil couldn't remember ever seeing him there.\n\nPhil kissed goodbye to any thoughts of escape.\n\nThe succubus folded her midnight black wings around the warlock and pulled him close for a passionate kiss. The man's eyes widened as her soft lips crushed against his.\n\nThe kiss didn't last very long.\n\nBlack corruption ran out across the man's face in a wave. His skin blistered, blackened and finally disintegrated into ash. In a matter of moments N\u00ffte was left holding a human skull as the rest of the warlock's body withered and collapsed into a pile of fine black dust. Still she lingered over the kiss, murmuring with pleasure as she smooched cold white bone while the warlock's empty robes slowly fluttered down to the floor.\n\nShe ended the kiss and smiled as she stared into the skull's empty eye sockets. She turned her trophy over in her hands, examining it before dismissively tossing it over her shoulder and onto the pile with all the others.\n\nJesus, Phil thought, a cold shiver travelling down his spine. She hadn't even given the poor bastard the pleasure of a final fuck.\n\nN\u00ffte turned and stared directly at Phil with her cold black eyes.\n\n\"Did you enjoy that little show, fledgling?\" she chuckled.\n\nPhil's blood froze in his veins.\n\nFuck.\n\nSmiling, N\u00ffte reached down to her waist and grasped the handle of a black bullwhip. She threw back her arm and the long whip uncoiled with a loud crack.\n\nFuck.\n\nPhil turned to run, but even as he was turning the whip cracked again and the end formed a noose around his ankles, sending him toppling to the floor. He barely had time to put his hands up to prevent his face smashing into the hard obsidian floor.\n\nFuck fuck fuck.\n\nPhil's hands scrabbled, but he couldn't get any purchase on the smooth black floor as he slid backwards. Try as he might, he couldn't stop N\u00ffte reeling him in like an angler with a prize catch.\n\nHer perfume enfolded him first, sweet like poison. A clawed hand grabbed him by the shoulder and spun him onto his back. He looked up at N\u00ffte as she stood astride him. Competing emotions crashed in Phil's mind. He'd seen how deadly she was, he knew he needed to get away from her as fast as possible, but, oh god, what he'd give to have those finely toned thighs wrapped around him.\n\nN\u00ffte put a hand around his throat and lifted him up off the floor.\n\nAll the way up off the floor.\n\nPhil's toes dangled, barely brushing the smooth obsidian surface.\n\n\"I've been waiting for you to come visit me, fledgling,\" N\u00ffte said. \"Rosa and Verd\u00e9 have been greedy keeping you all to themselves.\"\n\nPhil gasped and spluttered. Her hand felt like an iron collar around his neck. Behind her he saw a black robe lying on a pitiful pile of black ash, the remains of the other warlock.\n\nN\u00ffte saw him looking and flashed him a smile that showed off her sharp, pointed fangs.\n\n\"Are you frightened, little fledgling?\" she asked.\n\nShe lowered him until her cold black eyes were level with his.\n\n\"That makes me so wet,\" she hissed.\n\nPhil didn't need to be told. He could both smell and see her arousal. A little wet dribble ran down the inside of N\u00ffte's thigh.\n\nShe pouted her deadly lips for a kiss and brought them closer, closer, close enough to brush his, even as he thrashed desperately to escape. She let them touch, the briefest of pecks, before pulling away with an evil little smile.\n\n\"Don't worry little fledgling,\" she whispered. \"I have far more interesting plans for you.\"\n\nShe swung him around and slammed him into the metal throne with enough force to knock the air from his body. While Phil was winded she snapped metal cuffs into place around his wrists and ankles. He was strapped in just like a convict in an electric chair. N\u00ffte stepped back and watched his fruitless struggles with amusement.\n\n\"This is going to be fun,\" she purred.\n\nShe put a hand down between her legs and ran a long black fingernail between the plush folds of her labia. The air became thick with the overpowering scent of her arousal.\n\n\"For me anyway,\" she smiled.\n\nPhil thought back to the pictures he'd seen on the walls in this part of the castle. The demoness in them had looked remarkably similar to N\u00ffte. And what she was doing to the victims...\n\nPhil blanched. It wasn't a good idea to dwell on that.\n\nBeads of ice-cold perspiration formed on Phil's brow. N\u00ffte sat on the arm of the throne and put her legs across him. She wiped a hand across his forehead and then licked her fingers, savouring the taste.\n\n\"Mmm, you really are terrified aren't you, little fledgling,\" N\u00ffte said.\n\nShe kicked off a leather boot and pushed her naked foot against Phil's cock. He gasped in surprise at the sudden arousal as she teasingly played with his growing erection. She drew a small whip from her belt and casually spun the fronds.\n\n\"What are you going to do to me?\" Phil asked.\n\nThe whip lashed across the side of his face with a loud crack, leaving a sharp sting in its wake. He hadn't even seen her move.\n\n\"Hurt you,\" N\u00ffte pouted.\n\nHer foot rubbed against his cock.\n\n\"Pleasure you.\"\n\nThe short leather whip cracked against Phil's other cheek, bringing tears to his eyes.\n\n\"Hurt you.\"\n\nShe frigged herself with her other hand.\n\n\"Maybe fuck you... if you're still alive\"\n\nShe continued to manipulate his cock with her foot. Her technique was masterful as she stroked her toes up and down his growing erection. Phil didn't have long to enjoy the pleasure before two sharp cracks jerked his head first one way and then another. His cheeks felt like they'd caught fire.\n\nHe yelped in pain. \n\nN\u00ffte leaned closer, lying against his side. Her soft breasts pressed against his chest.\n\n\"Did that hurt?\" she asked, her voice comforting. A long fingernail playfully circled his nipple. \"Let me kiss it better.\"\n\nHer soft lips pressed against his cheek. The stinging sensation was quenched as if by a soothing balm. At first it was a blissful relief, but then the coldness deepened. Phil felt the warmth and life in his tissues leach into her, leaving numbness in its wake. When she broke away Phil could no longer feel his cheek. It felt like being injected with local anaesthetic at a dentist's.\n\n\"Mmm, delicious,\" N\u00ffte said, running a tongue around her bruise-black lips.\n\nShe stopped playing with his cock and swung her leg over him until she straddled his lap. He felt her moistness on his inner thigh. She reached round behind the chair and came back with some objects that rattled with metallic clanks.\n\n\"This will hurt,\" N\u00ffte said. She clamped one of the metal objects around Phil's nipple and screwed it tight, first squeezing and then crushing.\n\nIt hurt. A lot.\n\nPhil grimaced and thrashed in the seat. The pain was a white-hot brand pressed against his chest. No matter how he squirmed he couldn't get away from it. The beginnings of a scream welled up from his lungs and nudged against the back of his gritted teeth.\n\nN\u00ffte put an elegant finger on his lips and shushed him.\n\n\"Pain and pleasure are just sensation,\" she said. \"If you cry out I'll take the pain away, but only by removing sensation. Do you know what a body is without sensation?\"\n\n\"Dead,\" Phil mumbled in reply.\n\nN\u00ffte smiled, showing off her fangs again. \n\n\"Good, I'm so glad we understand each other.\" She attached the second clamp to his other nipple and screwed it tight.\n\nFuck. This was not fun. Not fun at all.\n\nShe shifted in his lap, pushing the lips of her pussy up against his erection. Teasingly she rubbed up and down him, smearing her warm juices against his shaft. Phil wasn't really in a position to fully appreciate it, on account of his nipples currently being in a state of crushed agony.\n\n\"Scream for me,\" N\u00ffte breathed in his ear. \"Scream for me and I'll take the pain away.\"\n\nPhil wanted to, he really did, but he knew what the consequences of that weakness would be. She'd consume him, a piece at a time. He gritted his teeth and tried to ignore the constant throbbing agony emanating from his chest.\n\nHis pain was getting her more aroused. Her juices dribbled down his shaft and pooled beneath his balls.\n\nN\u00ffte chuckled darkly in his ear and then gave one of the clamps a savage twist. Phil felt like he'd been hit in the chest by a cattle prod on maximum voltage.\n\nHe didn't cry out.\n\nHe blacked out instead.\n\nPhil recovered consciousness to find N\u00ffte fucking him. Her head was thrown back in abandon, her wings folded behind her as she thrust up and down. Inside she was exquisitely tight and deliciously moist. Her sumptuous flesh pressed snugly all around his cock. The sudden change from throbbing agony to blissful pleasure left Phil's mind dislocated.\n\n\"You like this don't you,\" N\u00ffte said, looking down at him with her deep black eyes. She looped her arms behind his neck as she rose up and down.\n\nFuck, yes! Phil thought. Her pussy felt like a warm sheath around him. He felt muscles contract around his shaft with teasing little squeezes. Her vagina sucked at his cock with the same dexterity as a mouth.\n\n\"I think you like it too much,\" N\u00ffte whispered in his ear. \"Pleasure is your mistress.\"\n\nShe slowly twisted in his lap and the sensation of her soft inner walls sliding around his cock nearly blew his mind.\n\n\"You dally too often with Rosa and Verd\u00e9. Keep on this path and soon they will suck out all your life and consume your soul.\"\n\n\"I don't exactly have a choice,\" Phil rasped.\n\nN\u00ffte paused. She arched a pencil-thin black eyebrow.\n\n\"Is that what you believe?\" she said, her face cryptic. \"How curious.\"\n\nHer vaginal muscles began to squeeze around his cock, but this time the pressure grew and grew, becoming first uncomfortable, then painful, then agonizing.",
        "\"Pleasure and pain are only sensation,\" N\u00ffte said. \"To master pleasure you must first master pain.\"\n\nHer vaginal muscles were unbelievably powerful. In a matter of moments her pussy had changed from a sumptuously soft sheath to a hard unyielding vice. The tightest grip was around the base of his shaft, preventing his blood from escaping his erection.\n\nFuck. Her vagina was crushing his cock.\n\nPhil thrashed and squirmed as the pressure became unbearable.\n\nN\u00ffte stared at him, her black eyes wide and bright. Her lips were turned upwards in a broad smile.\n\n\"Oh yes,\" she sighed. \"I love the feeling of crushing a pathetic human's cock inside me. I... oh...\"\n\nHer pale cheeks flushed as her body quivered with an orgasm. Phil's cock was flooded in her juices. Her vaginal muscles tightened to iron-hard ridges biting into his vulnerable flesh.\n\nToo much. Too much.\n\nPhil rapped his hands against the arms of the throne. His body trembled as it was wracked with unbearable pain. A cry forced its way up out of his lungs and prepared to take flight from his mouth.\n\n\"Ngh.\" Phil bit down on it.\n\n\"We're having such a beautiful moment together. I would hate for you to ruin it by screaming,\" N\u00ffte whispered, her voice laden with menace.\n\nShe placed a single black nail against Phil's chest. His skin blistered and blackened where she touched him.\n\n\"Ngh.\" The tendons on Phil's neck popped out like cords as he struggled to contain the cry welling up inside him.\n\nN\u00ffte leant close to whisper in his ear.\n\n\"If you scream my pussy will suck out all your life force before you get a chance to finish.\"\n\nHer vagina grew steadily colder around Phil's cock. He felt the coldness seep into his flesh and spread as she leached away his warmth.\n\nNo no no no!\n\nI will not scream.\n\nHe let his breath out slowly through his nostrils.\n\nN\u00ffte twisted in his lap, the hard ridges in her vagina wrenching his cock. A firecracker of pain exploded in Phil's crotch.\n\nI will not...\n\nHe blacked out again. \n\nPhil opened his eyes on velvet darkness. He felt soft lips against his. He remembered what had happened to the other warlock and a cold shiver crackled through him.\n\nHe didn't feel like the life was being sucked out of him though. Her lips felt soft and warm. A teasing little tongue wriggled between his lips and tickled the end of his tongue. His cock was once again surrounded by the sumptuous soft sheath of her vagina. She pumped up and down with slow liquid strokes, her pussy sucking hungrily against his cock.\n\nShe finished the kiss and unfurled the black wings she'd folded around them. Her black eyes were unreadable.\n\n\"So much fear,\" she said, wiping a hand across Phil's forehead. \"So delicious.\" She ran a tongue up Phil's cheek. \"But now I'm thirsty for other fluids.\"\n\nHer pussy went soft around him. Really soft. Heavenly soft. Gentle sucking motions undulated up his shaft. N\u00ffte put her hands on the back of the chair and slowly thrust up and down. The creamy crevice of her cleavage rose and fell before him. She stared down at him and ran her tongue over her plush black lips.\n\nIn the arts of pleasure she was an expert, maybe even more than either Rosa or Verd\u00e9. She sensed exactly when he was about to come and teased out the moment, letting her flesh quiver around the head of his cock.\n\nPhil melted in the chair. He felt his balls tighten as the orgasm rose in him. Oh fuck, he was going to...\n\n\"Still the slave,\" N\u00ffte chuckled. \"Oh so eager to give.\"\n\nShe plucked off both nipple clamps in one smooth movement. Blood flooded back into the compressed tissues and sensation returned with a flare burst of pain.\n\nPhil was already past the point of orgasm though. The fireworks of agony overlapped with the fireworks of ecstasy and his mind exploded in a vivid starburst of sensation. Muscles clenched and convulsed violently all across his body as it tried to work out if it was supposed to be enjoying or suffering this.\n\nPhil tensed and then his hips jerked violently upwards as his balls blasted a shot of cum into her tight flesh.\n\nN\u00ffte smiled as her body quivered with another orgasm. Her vaginal muscles wrapped tightly around Phil's cock, squeezing and sucking it with soft, slow pulsations. The first orgasm hadn't even subsided before Phil's body was wracked by a second, and then a third.\n\nN\u00ffte pulled down her bodice and leant forward so her soft, naked breasts pressed against Phil's throbbing nipples. The twin sensations of pain and pleasure sent Phil's mind spinning like a Catherine wheel. Her pussy continued to milk Phil's cock with slow pulsations, gently draining his life.\n\n\"I won't take all of you... this time,\" N\u00ffte said.\n\nHer black wings extended behind her, blocking out the light. She wrapped her arms around him and pressed her body against him in a tight embrace. Her pussy squeezed his cock and he responded with a powerful spurt of semen. Soporific weakness spread through his body.\n\n\"When we play again it's your turn to hurt me,\" she murmured in his ear.\n\nN\u00ffte wrapped her wings around the chair like a black shroud. Within the intimate darkness her hot lips found his for a luxurious kiss. Her pussy continued its soft pulsations around his cock, milking ejaculation after ejaculation from Phil's body until it became one continuous stream. She sucked orgasm after orgasm from Phil's body until he finally passed out and slid into the welcoming darkness of N\u00ffte's embrace.\n\n*****\n\nPhil woke up to aches all over his body. There was a wrenching pain in both of his shoulders and he realised that was because he was currently chained to a wall.\n\nThis sucks, he thought. But at least he was still alive.\n\nSeveral hours later he was wondering for how long.\n\nHad they forgotten about him? Was he going to be left here until he starved to death and nothing was left but his dry bones?\n\nHis shoulders and arms also really fucking hurt.\n\nAfter what seemed like an eternity Rosa and Verd\u00e9 walked by. They saw him chained to the wall and doubled over in fits of giggles.\n\n\"Um, this is really rather painful,\" he said.\n\n\"Oh dear, we did warn you about her,\" Verd\u00e9 said.\n\n\"You're lucky she likes you,\" Rosa said.\n\n\"Likes me?\" Phil said.\n\nShe'd tortured him, nearly fucked him to death and then left him chained to a wall.\n\n\"Oh yes,\" Rosa smiled. \"She usually breaks their arms before leaving them chained to the wall.\"\n\n/**\n\nAUTHOR'S NOTE\n\nApologies for the long delay in getting this chapter out. Yep, that real life thing again.\n\nI'm hoping to once again try and get this series back to a sensible schedule.\n\nThanks for the patience (if you're still out there)\n\n*/"
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "demon",
        "summoning",
        "magic",
        "warlock",
        "nipple clamps",
        "femdom",
        "dominatrix"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-109"
}