{
    "title": "Edge of Breaking Ch. 03",
    "pages": [
        "*Author's Note: Any and all persons engaging in any sexual activity are at least eighteen years of age.\n\nDisclaimers: This story has been edited by myself, utilizing Microsoft Spell-check. You have been forewarned; expect to find mistakes.\n\n*.*\n\nAfter her friend, her girlfriend's rejection, Gracie sat in her car and stared blankly at the rear door of the store where Nancy worked. Truthfully, Gracie knew that Nancy had not rejected, rebuffed her. But there was a ware in her head all the same.\n\n\"That kiss she gave you. That was not a 'go away' kiss,\" Gracie finally whispered to herself.\n\nGracie called her mother. Her first instinct had been to call Dr. Leblanc, but she called Lisa instead.\n\nNancy had said that her family was Episcopalian; 'Whiskey-palian' she had called it. Lisa agreed to meet Gracie at Babbage's Department Store for a little Christmas shopping.\n\n\"Okay, Sweetheart, what are we getting? And for who?\" Lisa asked as she got out of her Range Rover. \"Because I know you; you already did all your shopping on-line.\"\n\n\"My uh, my girlfriend,\" Gracie admitted.\n\n\"Oh? Do I know this girl?\" Lisa asked, showing no surprise or shock, showing no rejection or judgement.\n\n\"I uh, no, I mean, I went to school with her and...\" Gracie said as they bustled to get into the store and out of the biting wind.\n\n\"The one who lost her house?\" Lisa asked as they made it into the store, stepping into the slightly organized chaos of Christmas shoppers.\n\n\"Yeah!\" Gracie said, surprised at her mother's intuition.\n\n\"Sweetheart, I do listen when you talk,\" Lisa smiled. \"And I did notice how you blushed when you talked about, about, damn it, Mandy?\"\n\n\"Nancy,\" Gracie admitted.\n\n\"Okay, so what are we getting Nancy?\" Lisa asked.\n\n\"A cross. She lost hers,\" Gracie said.\n\n\"Nice. Gold? Silver?\" Lisa asked, steering them toward the jewelry counter.\n\n\"Silver. One she lost was silver,\" Gracie said. \"And since she's Episcopalian, it's got to be a cross, not a crucifix.\"\n\n\"Epis... Oh no! Gracie! We're Catholic,\" Lisa teased. \"You know we're not supposed play with those Episcopalians. They're not praying right.\"\n\n\"Mother,\" Gracie giggled.\n\n\"Thank you,\" Gracie whispered as they looked at the displays, waiting for the harried salesgirl to finish with her current customer.\n\n\"For...\" Lisa asked.\n\n\"For, uh, for not getting all weird when I...\" Gracie whispered.\n\n\"Gracie, you are my daughter, my beautiful, smart, wonderful daughter,\" Lisa said warmly. \"I love you. Plain and simple. I love you.\"\n\nGracie bought a silver cross with a sapphire in the center, along with a twenty inch box chain. She took the box and the receipt to the second floor, to have the package gift-wrapped. Along the way, she saw a five pound box of chocolate in the shape of Santa Claus and bought that as well.\n\nThe Santa Claus on duty smiled at the mother and daughter, so Lisa steered them toward the rotund man. She shrugged her coat off, straightened her outfit, then draped herself on the man's lap.\n\n\"And have you been a good girl this year?\" the store Santa asked Lisa.\n\n\"You tell me,\" Lisa smiled cheekily. \"None of the men or women I fucked this year were married. That being good?\"\n\n\"That's not just being good, but good at it,\" the man laughed. \"And lady? Think you going shock me? Believe me, I've heard it all.\"\n\nThen Lisa made Gracie shrug out of her coat and go sit on Santa's lap. Gracie smiled as the man grinned.\n\n\"And have you been a good girl this year?\" the man asked.\n\n\"Yes I have,\" Gracie said truthfully.\n\n\"Okay, we want six of each,\" Lisa told the girl operating the camera.\n\n\"Six?\" Gracie asked as she struggled back into her coat.\n\n\"Grandma, your uncle Antny, your Aunts Barbara and Cindy, me, and your girlfriend, right?\" Lisa said.\n\n\"But not...\" Gracie hastened to demand.\n\n\"Your Uncle Jimmy does not get one,\" Lisa said tightly.\n\nGracie hugged her mother tightly before they left the store. At her car, Gracie again hugged her mother, then hurried to get into her car.\n\nMrs. Hebert stared suspiciously at the blonde girl, but opened the door. She pointed at the Christmas tree in the corner of the living room and watched as Gracie took the two packages and one envelope out of a Babbage's bag.\n\n\"Think that's going fool anyone?\" Mrs. Hebert almost asked the girl. \"Honey, we've all bought couple them bags and stuffed our Wal-Mart shit in them.\"\n\n\"Thank you,\" Gracie whispered and left the house.\n\n\"Uh huh,\" was Mrs. Hebert's response.\n\nThat night, Nancy almost called Gracie when it was time to clock out. Nancy called the home phone; neither her father nor mother saw any need for a cell phone when their land line still worked just fine. But they did make sure their three children had cell phones, in case of emergencies.\n\nNancy called the home phone, her father answered, then just hung up on her. Twenty three minutes later, Nancy's mother was sitting out front. Out front, rather than drive around to the rear of the store so Nancy could minimize her time in the cruel wind blowing in from the Atchafalaya.\n\n\"That little bitch, shit don't stink come by,\" Mrs. Hebert greeted Nancy.\n\n\"Going have narrow it down a bit, Mother,\" Nancy said tightly.\n\n\"One you been running around with all week,\" Mrs. Hebert snapped.\n\n\"Gracie?\" Nancy asked.\n\n\"Uh huh, put couple presents under the tree,\" her mother agreed. \"And get this, get this, had them in a Babbage's bag. Almost told her ain't no one fooled by that shit.\"\n\nNancy wanted to tell her mother that Gracie did not know about that trick. If the bag was a Babbage's bag, then the gifts came from the exclusive store.\n\n\"God, it was so hot in there today,\" Nancy said, changing the subject.\n\n\"Uh huh, remember that,\" Mrs. Hebert said, almost genially. \"Sweat like a pig all four times was preggers.\"\n\n\"Four?\" Nancy asked. \"I, you were, four?\"\n\n\"God, Nancy, don't tell me you don't remember Brad,\" Mrs. Hebert said, a catch in her voice.\n\n\"Brad?\" Nancy asked.\n\n\"I mean, yeah, you wasn't quite two when he got sick, but really?\" the woman said.\n\n\"Brad? I had another brother?\" Nancy asked.\n\n\"Was three when you come along. Boy, he loved being a big brother, wanted hold you minute we brung you home,\" Mrs. Hebert said.\n\nNancy searched her memory, but finally had to shake her head no. She did not remember having an older brother. She vaguely remembered staying with her Nana and Paw-Paw and then having a baby brother the next day. Three years later, she was so relieved when she had a baby sister, another girl to play with.\n\nAt her parents' house, Nancy looked at the two packages and one envelope stacked underneath the tree. She did wonder how hard Gracie had tried to align the packages precisely, the smaller box almost dead center on top of the larger box, the envelope safely tucked between the two boxes.\n\n\"Who's Gracie?\" Michael asked, nodding toward the packages.\n\n\"My best friend,\" Nancy said tersely.\n\n\"Your, aw, what about that Megan, huh?\" Michael asked.\n\nMichael checked to see that their mother was not paying any attention. He then cupped his hands in front of his chest.\n\n\"Need be best friends with her; bring her around, huh?\" Michael leered.\n\n\"Uh, yeah, like she'd be so interested in you, can't even get out of the eleventh grade,\" Nancy sneered.\n\n\"Hey!\" Michael snapped, angered that Nancy would bring up his being held back to repeat the eleventh grade. \"Least I'm not a stupid slut gets knocked up by some loser, huh?\"\n\n\"Michael, that's enough,\" their father growled.\n\nSeeing that dinner was at least twenty minutes from being finished, Nancy decided to take a shower. Her first act was to strip and send Gracie the daily snapshot of her belly.\n\n\"Miss you,\" Nancy sent.\n\n\"Miss you too,\" Gracie responded.\n\n\"Getting ready take a shower. What are you doing?\" Nancy sent.\n\n\"Just finished eating,\" Gracie replied.\n\n\"I'll call you later, to tell you good night,\" Nancy promised, then hurried to take a quick shower, with hot water.\n\nAt her home, Gracie finished her can of St. Elizabeth Rice Beer, then checked the doors and windows. Satisfied, Gracie closed and locked her bedroom door, checked the windows, overlapped the curtains, then turned off the light. She turned on her bedside lamp and got down on the floor. She reached around and managed to dig the foam pillow from underneath the bed. \n\nGracie did curse slightly; she always put the pillow too far underneath the bed and had to lay almost flat on her belly to reach it. It would not have occurred to her to just go to the other side of the bed; this was the side it had to be retrieved from. And it would not have occurred to Gracie to not push it so far. The pillow had to be out of sight from the casual observer.\n\nGracie placed the pillow onto the bed, then went into her bathroom. She wiggled out of clothing, putting each item into the hamper. Making sure the lid of the hamper was securely shut, Gracie opened her linen closet and fetched the enema bag.\n\n\"Ugh, God, hate this part,\" Gracie actually spoke out loud as she jammed the nozzle into her rectum.\n\n\"Ugh! Ooh,\" Gracie grunted as she felt the warm, soapy water filling her.\n\nShe grimaced, holding the water, then finally released. She then repeated the process.\n\n\"Okay,\" Gracie murmured, scampering nude from her bathroom.\n\nGracie cinched the strap-on around the foam pillow. Nancy had taken the time to lubricate Gracie's anus, her rectum, took the time to loosen Gracie up with fingers before penetration. Gracie did not waste time; just coated the phallus then knelt, straddling the pillow.\n\nGracie reached between her legs and aligned the cock with her anus.\n\n\"Ugh! Oh God,\" Gracie cried out as she allowed her own weight to force the intruder into her bowels.\n\nSlowly, inch by inch, Gracie allowed the dong to push up into her. When her buttocks rested firmly on her heels, she shuddered, then switched both base and cock vibrators on.\n\n\"Ugh, God yes,\" Gracie whimpered as she raised herself again.\n\nOne hand grasped, pinched her nipples almost cruelly. Gracie's other hand pressed against her pubic mound. Then she used her thumb and middle finger to part her swollen pussy lips. Her index finger sought out her clitoris.\n\n\"Ugh, yyeess,\" Gracie grunted then hissed as she sank down again onto the merrily buzzing toy.\n\nGracie bucked when her orgasm rippled through her. She sat, cock firmly imbedded in her anus as she shuddered through her orgasm. She then raised herself again and started the process again.\n\nRealizing that the cock had been facing the other way when Nancy had used it to fuck her, Gracie swiveled her legs around, twisting to face the other way. Her pretty eyes opened wide as she performed this maneuver; the sensations the movement caused within her struggling bowels had been painfully wonderful.\n\n\"Ugh! Yyeess! Ugh, oh God,\" Gracie cried out in orgasm, allowing her weight to shove the dong into her again.\n\nShe shrieked when her phone chimed. Gracie hurriedly switched off the buzzing toy, then wiggled herself off of the pillow mounted cock. She winced as the phone chimed again, hurrying to pull her robe on over her naked body.\n\n\"Hey!\" she finally said, answering her phone.\n\n\"Hey, what you doing?\" Nancy asked.\n\n\"Just sitting here,\" Gracie said, then giggled.\n\nA moment earlier, she'd been sitting, with eight inches of thick latex buried in her rectum. Gracie giggled at her own private joke.\n\n\"God, Gracie, should have come home with you,\" Nancy admitted. \"God, dinner was, oh! And thank you, I don't know what you got me, but I'm sure I'll love whatever it is.\"\n\n\"Need get that envelope; you can open that now,\" Gracie said.\n\n\"Okay,\" Nancy said and Gracie heard a door open.\n\n\"I mean, it's just something silly, me and my mom were at Babbage's and, well, you'll see,\" Gracie said, turning so she did not have to look at the pillow mounted toy.\n\n\"Gracie!\" Nancy giggled. \"Aw, that's just so cute!\"\n\n\"Hey, trying watch this here, huh?\" Gracie heard a man's gruff voice bark out angrily.\n\n\"Sorry,\" Gracie heard Nancy bark in reply.\n\nGracie became overwhelmed with depression as Christmas loomed ever closer and had to schedule a few extra visits with Dr. Leblanc. She also had obligations to attend 'Holiday' functions at Whitehead-Taylor Recycling in the Kimble and the Baylor Lake facilities. Nicole Banks and Polly Chastaine, Nicole's paralegal acted as the hosts of the two functions, merely introducing Gracie as 'a client.'\n\nWhitehead Generators likewise had a 'Holiday' celebration. Marcus Whitehead had left his oldest grandchild one thousand shares, roughly three percent of his holdings in his namesake company. As a shareholder, Lisa and Susan, Gracie's grandmother informed Gracie she must attend the function.\n\nHer Uncle Jimmy was at the function. The man nodded in greeting, but did not approach his sister's daughter. Right before Gracie was about to bolt from the ballroom of the Hardington Acres Country Club, James Whitehead made his excuses and left the Holiday party. Even so, Lisa and Susan accompanied Gracie to her car, both checked the car thoroughly before Gracie drove away.\n\nEach time Gracie asked Nancy to accompany her to a party, Nancy regretfully was scheduled to work.\n\nBut when Gracie did get to see Nancy one afternoon, bringing Nancy a hot ham and cheese sandwich and a thermos of ten bean soup, Nancy gave Gracie an envelope.\n\n\"I'm sorry. It's all I could afford,\" Nancy apologized.\n\n\"If it's from you? Then it's perfect,\" Gracie promised.\n\n\"Uh, ahem,\" Douglas cleared his throat as he entered the stockroom.\n\n\"Oh, hey Douglas,\" Nancy smiled, pulling her lips from Gracie's lips. \"This is my girlfriend Gracie.\"\n\n\"Hey, nice meet you,\" Douglas said, locating, then grabbing a box of boots from a shelf.\n\n\"Nice to meet you too,\" Gracie stammered, face bright red.\n\n\"We're closing, hello,\" Ms. Callie said, barging into the stockroom.\n\n\"Miss Callie? This is Gracie Taylor, my girlfriend,\" Nancy did the introductions.\n\n\"Oh! One sent you that song?\" the woman smiled.\n\n\"Oh yeah!\" Nancy said and found the link to the Ohio Express song on her phone.\n\n\"That's the one!\" Callie said as Nancy danced around the stockroom.\n\n\"Did that, out on the sales floor when she got that silly little song,\" Callie smiled as Gracie watched Nancy's antics.\n\n\"But like I was saying, closing at three Christmas Eve,\" Callie smiled when the song ended.\n\n\"I'll be here get you,\" Gracie promised.\n\n\"But my family's going insist I need be with them,\" Nancy said sadly.\n\n\"So? Five minutes with you's better than nothing,\" Gracie said.\n\n\"And that's why I love you,\" Nancy declared and hugged Gracie.\n\nInside of the envelope was a picture of Nancy on Santa's lap. Gracie squealed happily looking at Nancy's beautiful smile.\n\nOnce home, Gracie almost forgot to go through her ritual of checking that she still had all of her lunch containers, making sure that all containers were stacked appropriately into the dishwasher. She sat on the comfortable couch and looked at the photograph. Then, after placing a gentle kiss onto the photograph, Gracie arranged the Christmas cards on her counter. The photograph was given the space directly after her mother's, then her grandmother's cards. But Nancy's photograph came before Uncle Antny's card.\n\nGracie did pick Nancy up on Christmas Eve. She drove slowly, listening as Nancy described her work day. They had a late lunch-early supper at Benito's and dawdled over their meal. Finally seeing that their waitress was clearly waiting for them to leave, Gracie paid, tipping the girl well, then drove Nancy to her parents' home.\n\nWatching Nancy walk into the house, Gracie felt a black cloud of depression descend. For a long moment, she sat, hoping, praying that the door would open and Nancy would run back out, run to the car.\n\n\"Five pounds of chocolate?\" Nancy shrilled into the phone Christmas morning. \"FIVE POUNDS? I'm going be as big as a house!\"\n\n\"No one says you have to eat it all,\" Gracie giggled into her phone.\n\n\"Well, I can't let it go to waste, huh?\" Nancy defended.\n\nNancy also thanked Gracie for the beautiful cross and chain. She complained that it was too expensive, that Gracie shouldn't have spent all that money on her, but at no time did Nancy say she would return the gift.\n\nAfter they whispered words of love to each other, Gracie ended the call. She then returned to helping her grandmother prepare their Christmas breakfast.\n\n\"Gracie, you always make the absolute best biscuits,\" Susan Whitehead smiled as Gracie slowly dribbled the buttermilk into the bowl of dry ingredients.\n\n\"Because she'd be suicidal if she didn't,\" Cindy Whitehead whispered to her twin sister Barbara Whitehead.\n\n\"Shush,\" Barbara said, in a rare act of disapproval of her twin.\n\n\"Really, mother? We really have to wait 'til after breakfast?\" Anthony Whitehead playfully complained, a complaint he'd voiced nearly every Christmas for the past forty one years.\n\n\"It's not going kill you,\" which had been Susan's response for nearly every Christmas for the past forty one years.\n\n\"Yeah, Lisa Whitehead said, looking up from the sausage gravy.\n\n\"Well, can I take a peek?\" Anthony asked, picking his mother up in a hug.\n\n\"No!\" all the women in the kitchen shouted.\n\n\"Then can I have some coffee?\" Anthony asked, already pouring himself a large mug.\n\n\"And, whew! That's hot,\" Gracie said, sliding the tray of biscuits into the hot oven.\n\n\"Perfect timing; this gravy's just about done,\" Lisa hugged her daughter.\n\n\"And the bacon,\" Cindy agreed.\n\nJames Whitehead also fulfilled a Christmas tradition of waiting until everyone was seated before making an appearance. He sat at the far corner, silently picking up his napkin and putting it into his lap.\n\n\"New family tradition,\" Anthony declared. \"We have to wait 'til Jimmy finishes cleaning everything.\"\n\n\"I'm right here, I'm right here,\" Lisa whispered to Gracie, squeezing Gracie's hand.\n\n\"Look at that, huh? Look at that. Biscuits? Perfect. Bacon? Perfect. Eggs? Perfect. Gravy? Well, the biscuits and bacon and eggs are perfect,\" Cindy said.\n\n\"Uh, Cindy? Bite me,\" Lisa said.\n\n\"Lumps of coal for the both of you,\" Susan threatened.\n\nGracie ate her meal, smiling at the playful bickering around her. To her right, her mother sat. To her left was her Grandmother. She could feel the warm sunshine as it spilled through the bay window onto her back. The food was wonderful, filling, made by family, made with love.\n\n\"Nancy, I hope you're family is loving you,\" Gracie thought to herself.\n\nAfter breakfast, another family tradition was observed; they crowded into the living room. They offered up a prayer for those that were not fortunate enough to have family, for those that were not fortunate enough to have food, for those that were unfortunate enough to not know the wonders of the Christ child.\n\nThen the gifts were passed out. Susan did smile at the Santa photograph of her granddaughter and her daughter. Aunt Cindy rolled her eyes and reminded Lisa and Gracie that Santa was not real.\n\nThen, bone weary from going to Midnight Mass with her family, then getting up early to prepare breakfast, then sitting in close proximity to her Uncle Jimmy, Gracie yawned. She thanked her aunts and Uncle Anthony for her gifts. She thanked her Grandmother for her gifts. Then Lisa walked her daughter to her car.\n\n\"Love you,\" Lisa smiled.\n\n\"Love you too,\" Gracie said and yawned again.\n\n\"Goodness! Think you can stay awake long enough make it home?\" Lisa teased.\n\n\"Hope so,\" Gracie smiled.\n\nThe day after Christmas, Nancy was scheduled to work the morning shift. She did dread this day; it was a day when much of their Christmas sales would be returned or exchanged. Gracie drove Nancy to work, listening as Nancy complained about all the commission she would not get.",
        "\"And I'll be here at lunch, okay?\" Gracie smiled.\n\n\"Oh! Oh, look!\" Nancy insisted as Gracie parked behind Cal's Western Wear.\n\nNancy unbuttoned her blouse and showed Gracie that the cross was nestled between her breasts.\n\n\"It's so beautiful,\" Nancy said, pointing to the cross.\n\n\"Yes it is,\" Gracie agreed.\n\nFor lunch, Gracie brought a thermos of chili and a container of cornbread. She had smaller containers with chopped chives, shredded cheese and sour cream. Another salesgirl complained playfully that she didn't have a friend like Gracie.\n\n\"Nope; she is one of a kind,\" Nancy said.\n\nGracie beamed under Nancy's praise. Then she packed the containers into her canvas bag. She checked that she had all of her containers, had her silverware.\n\n\"Love you,\" Nancy said, giving Gracie a kiss at the back door.\n\nAt three fifteen, Gracie tore her eyes away from her computer when her phone chimed. She saved the work on her spreadsheet, then backed out of the program.\n\n\"I need you,\" Nancy had texted.\n\n\"Be right there,\" Gracie responded.\n\nGracie drove seven miles above the speed limit, praying that no police would be out. She had a thousand different scenarios running through her head as she hurried; why did Nancy need her? Had anything happened to the baby?\n\n\"End of this week? I'm back to part time,\" Nancy sobbed when Gracie hurried into the store.\n\n\"Oh, Sweetheart,\" Gracie said, hugging Nancy.\n\n\"Now I won't get on the insurance,\" Nancy wailed.\n\n\"Go on. Take her home,\" Miss Callie said gently.\n\n\"That's a good idea,\" Gracie agreed, squeezing Nancy. \"Go on, clock out; I'll drive around the back, okay?\"\n\n\"I mean, shit, only reason I was busting my butt, my dad's a roofer; any idea how much work roofers get during the winter?\" Nancy babbled as Gracie drove toward 417 Cross Circle. \"Not on his insurance; dropped me minute I moved in with Eddy.\"\n\nFrom Gracie's home, Nancy did call and talk with her mother. Her mother was unsympathetic, just gave one of her heavy sighs.\n\n\"Gracie, where are you?\" Nancy called out. \"Really could use a hug about now.\"\n\n\"Be right there,\" Gracie called back, quickly finishing her email to Nicole Banks, instructing Nicole to terminate the employment of Alexis Smith, the manager of the Baylor Lake Whitehead-Taylor Recycling Facility in Baylor Lake.\n\n\"Theft from an employee is not to be tolerated. Theft by a manager is not only intolerable, but should be followed up at once by criminal prosecution,\" Gracie typed rapidly, then concluded her message.\n\n\"Here I am,\" Gracie smiled, sinking onto the couch next to Nancy.\n\nLike a child, Nancy held up her arms. Gracie enveloped Nancy in a hug and kissed Nancy's cheek.\n\n\"Gracie, I just, I just don't know what I'm going to do,\" Nancy murmured after a few moments. \"I mean, shit, I try and try, but it just never looks like I'm ever going to catch up.\"\n\n\"Can't give up now,\" Gracie soothed.\n\n\"That big old tub; can we take a bubble bath?\" Nancy murmured after a few more moments of silence.\n\n\"You sure can,\" Gracie smiled.\n\n\"No. We. Can we take a bubble bath?\" Nancy murmured.\n\n\"Yeah, let me go get it ready,\" Gracie said after a long moment of silence.\n\nGracie turned on the heated floor as well as the room's heater. Then she grabbed two big fluffy robes from her own linen closet. She made sure to grab her own slippers and a pair of loose fuzzy socks.\n\nThen, as the tub slowly filled with hot water, Gracie went through her ritual of checking all doors and windows.\n\n\"And, lavender, sea breeze, cool cucumber melon or green apple?\" Gracie asked as Nancy started to strip out of that day's clothing.\n\n\"Cool cucumber melon,\" Nancy decided, standing nude next to the tub.\n\n\"God, every time I see you, it just reminds me just how beautiful you are,\" Gracie sighed as she poured a palmful of the suds into the tub.\n\nAs the tub now filled with the aromatic bubbles, Gracie also stripped. She stood, nude in front of Nancy. Then, steeling herself, she turned, exposing her backside to Nancy, and turned off the water.\n\n\"Okay, you get in first,\" Nancy ordered.\n\nGracie stepped over the tall rim of the tub, then sat in the slightly too hot water. Then Nancy climbed over the rim.\n\nAs Nancy cocked her left leg up, Gracie could see Nancy's pussy lips peeking out of her thatch of brown hairs. Then as Nancy pulled her right leg into the hot water, Gracie admired Nancy's beautiful buttocks.\n\n\"Ooh, hot, hot, hot,\" Nancy chanted as she eased herself into the tub.\n\n\"It's too hot?\" Gracie worried.\n\n\"No, just need get used to it,\" Nancy said, easing herself into the suds.\n\nNancy then leaned back against Gracie. She pulled Gracie's arms around herself and sighed.\n\n\"Should have spent my Christmas with you,\" Nancy murmured. \"At least you love me.\"\n\n\"I do,\" Gracie admitted. \"And I did miss you.\"\n\n\"Missed you too,\" Nancy admitted.\n\nThey sat, just allowing the water to soothe them. They sat, occasionally blowing a tuft of bubbles\n\n\"Water's getting cold,\" Nancy sleepily said after a long while had passed.\n\n\"Yeah,\" Gracie sleepily agreed.\n\n\"Bet we're all pruned up,\" Nancy observed.\n\n\"Uh huh,\" Gracie agreed.\n\n\"You make the best pillow ever,\" Nancy said as Gracie used her toe to begin draining the tub.\n\n\"And you make the best teddy bear,\" Gracie giggled. \"I could just hold you forever, I swear.\"\n\nGracie reluctantly let go of Nancy and Nancy climbed out of the tub. She dried herself with the large fluffy towel and Gracie sat for a long moment, admiring Nancy's movements, admiring Nancy's beauty.\n\nWhen Nancy shrugged on one of the robes, Gracie climbed out of the large tub and dried herself. She then grabbed a beach towel from the hutch and herded Nancy toward the bedroom.\n\n\"And you said you don't go in until one, right?\" Gracie again verified, snapping the towel and laying it onto the bed.\n\n\"Uh huh,\" Nancy said, watching Gracie's movements.\n\nWith a soft kiss to Nancy's lips, Gracie eased the robe from Nancy's body. She then pulled Nancy to lie on the beach towel, face down.\n\n\"And...\" Gracie said, and Nancy heard the odd sound of something popping.\n\n\"Nuh uh,\" Nancy murmured when she felt the bed sag. \"You going make me lay here all naked? Then you got be naked too.\"\n\n\"But...\" Gracie protested.\n\n\"But nothing, Miss Gracie Taylor,\" Nancy playfully ordered.\n\nNancy heard rustling. She then felt Gracie's nude body pressing against her back.\n\n\"You sure are bossy, know that?\" Gracie giggled and planted a soft kiss to Nancy's shoulder.\n\nThen Gracie slowly began to rub the lotion into Nancy's damp skin. Her fingers were strong, firm as she kneaded Nancy's skin. Nancy rested her forehead against her forearms.\n\n\"Mm,\" Nancy murmured.\n\n\"Isn't this, oh,\" Gracie sighed as she worked the lotion into Nancy's shoulders and upper arms.\n\n\"Gracie, where'd you learn do this?\" Nancy asked, knowing Gracie had very few people she could call friends, would have had almost no opportunities to practice massage.\n\n\"Internet,\" Gracie admitted. \"There's all kind of videos on how do this.\"\n\n\"I'll bet,\" Nancy giggled. \"Any of them show happy endings?\"\n\nNancy came to, dressed in a soft flannel shift that ended just below her buttocks. The tap pants were also a soft flannel. She could feel Gracie's arms wrapped around her, could feel Gracie's breath against her bare neck.\n\n\"'Bout pop here,\" Nancy mumbled, feeling her quite full bladder threatening disaster.\n\n\"Mm?\" Gracie roused slightly.\n\n\"Need tinkle,\" Nancy murmured.\n\nGracie wiggled out of the bed and helped Nancy out of the bed. She guided Nancy toward the master bathroom, but left Nancy alone in the bathroom.\n\nNancy relieved herself. As she sighed in relief, she realized, Gracie had allowed her to use the toilet in her private bathroom. Gracie had allowed Nancy to violate the sanctity of her small world.\n\nThe pajama set was cute and she smiled at her reflection as she washed her hands. She also thoroughly dried her hands before leaving the bathroom.\n\n\"Aw no, you're not checking all the doors again, are you?\" Nancy asked herself as she stepped out into an empty bedroom.\n\n\"You hungry? You got to be starving; you know it's eleven thirty already? I've got the last of the ten bean soup heating up and there's the ham and cheese; want a sandwich go with the soup?\" Gracie asked, bustling into the bedroom.\n\n\"God yes, I am starving,\" Nancy agreed.\n\n\"Hate taking my meds on an empty stomach, Gracie babbled as Nancy pulled the fuzzy socks on her feet. \"We're going have get you some slippers for here, huh?\"\n\n\"Gracie, you didn't take your meds?\" Nancy asked as she followed Gracie down the hall.\n\n\"Well, no, I mean, you wanted me hold you and...\" Gracie said as she checked the pot of soup.\n\n\"Milk? Gracie, I hate milk,\" Nancy lightly complained when Gracie poured them each a glass of the liquid. \"I'll just have a beer.\"\n\n\"No ma'am,\" Gracie said quite forcefully. \"You've already had a beer today. Alcohol's not good for the baby.\"\n\nNancy almost argued that she was the one carrying the baby, not Gracie. But she had a momentary flash of insight; no one else that knew about the baby seemed to care about the baby. Her mother and father did not seem to care about the baby, just seemed to care that Nancy was embarrassing them. Michael, her brother seemed to delight in calling her names and pointing out that she was pregnant. Her sister didn't even seem to care; barely even acknowledged Nancy's presence in the house. \n\n\"But milk?\" Nancy asked, taking a seat.\n\n\"It's good for you,\" Gracie enthused, bending over the back of the chair and hugging Nancy.\n\nAfter their meal, Nancy and Gracie cleaned up the kitchen and dining room Then, Nancy watched Gracie go through her ritual of checking each door, each window. She followed Gracie down the hall as Gracie dashed into the first bedroom, which was actually her office, the bathroom, then the second bedroom. Nancy entered the large bedroom right ahead of Gracie. Gracie shut and locked the door, even tugged on the knob to make sure the door was firmly shut. Nancy slipped out of her pajamas as Gracie checked the windows, then overlapped the curtains.\n\n\"All right, now that that's done,\" Nancy husked, pulling Gracie in for an embrace.\n\n\"I need to brush my teeth,\" Gracie protested.\n\n\"No, no you don't Gracie,\" Nancy ordered, pushing the bulky robe from Gracie's shoulders.\n\nGracie protested again but Nancy silenced her with a kiss. Then Gracie did allow Nancy to pull her into the bed.\n\n\"I want to...\" Nancy said and kissed Gracie's lips. \n\nNancy sucked on Gracie's bottom lip for a moment, then trailed her lips down to Gracie's throat. Gracie shuddered as Nancy's lips kissed along her throat.\n\nNancy remembered that Gracie liked her nipples treated fairly roughly and did so, lightly gnawing on each hard point. Each time Gracie gasped, grunted or groaned, Nancy would kiss Gracie's lips before returning her mouth to Gracie's nipples.\n\n\"Ooh!\" Gracie moaned as Nancy nibbled along the slight undersides of Gracie's small breasts.\n\nNancy wiggled down and lightly kissed down Gracie's belly. Her fingers danced along Gracie's ribs to waist to slightly wide hips. Nancy could smell Gracie's excitement as she neared Gracie's bald slit.\n\n\"Ooh!\" Gracie again moaned as Nancy blew warm breath over Gracie's puffy pussy lips.\n\nNancy rubbed her hands over Gracie's thick thighs, then brought both hands up the insides of Gracie's thighs. She used her fingers to spread Gracie's pussy open, then delved her tongue into Gracie's drooling pussy.\n\n\"Ooh, oh Nancy,\" Gracie sighed.\n\nNancy reached two fingers into Gracie's pussy as she lapped at Gracie's excitement. She twisted and scissored her fingers inside of Gracie, causing an almost continuous moan from Gracie.\n\nNancy flattened her tongue and lapped from her own fingers upward to the top of Gracie's pubic mound. Then she sought out Gracie's clitoris.\n\n\"Aieegh!\" Gracie cried out in orgasm.\n\nNancy sucked and licked, trying to get as much of Gracie's essences as she could. When Gracie quit shuddering and shaking in orgasm, Nancy again began to suckle on Gracie's clitoris.\n\n\"AAieegh!\" Gracie cried out again.\n\nNancy pulled her thrusting fingers from Gracie's pussy. She traced her fingernails along the space between pussy and anus, causing Gracie to shudder and moan.\n\nGracie glued her mouth over Gracie's pussy as she jammed her two fingers into Gracie's winking anus.\n\n\"Ugh, agh, oh God!\" Gracie cried out and shuddered.\n\nGracie finally weakly pushed Nancy's mouth away and Nancy crawled forward. She lay on top of Gracie, pinning Gracie against the mattress. Nancy's furry pussy ground against Gracie's smooth mound.\n\n\"I love you, Gracie,\" Nancy murmured and kissed the still gasping Girl.\n\n\"I. Love. You too,\" Gracie grunted.\n\nRemembering that Gracie was prone to panic if she was pinned down, Nancy rolled off of Gracie, but pulled Gracie to lie on her right side. Nancy gently cupped Gracie's face.\n\n\"I really do love you,\" she said aloud.\n\n\"I love you too. I really love you too,\" Gracie agreed.\n\n\"I mean, when Miss Callie told me she was going have cut our hours? First thing I said was, 'I got call Gracie.' And just like that? You're on your way,\" Nancy murmured, softly stroking Gracie's face.\n\n\"I'm here for you, Nancy. You ever need me? I'm right here for you,\" Gracie promised.\n\nAgain, it was the smells of morning that roused Nancy from her slumber. Coffee, bacon frying. She sluggishly rolled over and wiggled out of bed. Gathering the flannel sleepwear and the fuzzy socks, Nancy made her way to the bathroom and dressed while using the toilet.\n\n\"Oatmeal,\" Gracie announced when Nancy made her way to the kitchen.\n\n\"Ew! Oh God, Gracie, I hate oatmeal,\" Nancy said.\n\n\"Do you really?\" Gracie asked.\n\n\"Yeah, I kind of do,\" Nancy admitted.\n\n\"Well, just eat a little, okay? I put pecans and honey and apples and cinnamon in it; it's so good on a cold morning, believe it or not? Its twenty six degrees out there,\" Gracie cajoled.\n\nWith the bacon crumbled up in it, the oatmeal wasn't the worst thing Nancy had ever eaten. She had two bowls; Gracie had made too much bacon.\n\nAfter breakfast, the two girls cleaned the kitchen, then made the bed. In the shower, Gracie got a little aggressive with Nancy and pinned her, struggling weakly, against the wall.\n\n\"EW, oh Gracie, that's nasty,\" Nancy complained as Gracie used both hands to pull Nancy's buttocks apart.\n\n\"Mm-hmm,\" Gracie agreed as she tongued Nancy's anus.\n\nGracie used one hand on Nancy's anus, driving two, then three fingers into the tight hole, and used the fingers of the other hand to finger Nancy's pussy. Pinned against the wall, Nancy screamed and shuddered in orgasm.\n\n\"I'll get you for that,\" Nancy mumbled.\n\n\"Ooh, I'm so scared,\" Gracie said, kissing Nancy's shoulder.\n\nStepping out of the shower, both girls tried to dry the other girl, which started a mild tussle. Then, giggling, Nancy told Gracie they should dry themselves.\n\nStepping into the bedroom, Gracie heard her phone gave a small buzz and chime. She looked at the phone, then hit her passcode.\n\n\"Ooh! Nancy, you're not working New Year's Eve, huh?\" Gracie excitedly asked, putting the phone down.\n\n\"Mm, uh, yeah, until five, but I'm willing bet we close like at three or four; why?\" Nancy asked, wiggling into her clothing from the previous day's work.\n\n\"Want go with me to the New Year's party at the Country Club?\" Gracie begged, brown eyes alive.\n\n\"To the Country, Gracie, they got a dress code, right? I wouldn't have jack wear to that,\" Nancy protested.\n\n\"We'll go to Babbage's; don't worry, I'll pay for it,\" Gracie said.\n\n\"Gracie, no,\" Nancy protested.\n\n\"Aw, please?\" Gracie begged. \"Pretty please? My whole family's going be there, I have to go, and every year, I go, and I'm the only one not there with a date, please?\"\n\n\"I, I'd be your date?\" Nancy asked, linking fingers with Gracie.\n\n\"Uh huh, I mean, I've already told my mom and she was totally cool with it, and Dr. Leblanc, oh! You were there, you remember when I did that,\" Gracie said.\n\n\"Okay,\" Nancy agreed.\n\nGracie squealed excitedly and hugged Nancy in a fierce hug. Nancy gripped Gracie's head and gave Gracie a kiss.\n\n\"You are squishing me,\" Nancy finally complained.\n\nAt Babbage's, Gracie clung to Nancy. There were few shoppers in the store; it had opened its doors just as Gracie pulled into the parking lot. Still Gracie seemed incapable of proceeding forward without Nancy's help.\n\nFor her part, Nancy was looking around in awe. She'd seen the store's exterior nearly every day as she was ferried to and from Cal's Western Wear. She'd been inside the store a few times with her mother. Those incidents generally lasted long enough for her mother to pick something up, look at the price, and declare that the store had to be crazy.\n\n\"Dresses are this way,\" Gracie whispered, guiding Nancy.\n\n\"Gracie! Eleven hundred bucks?\" Nancy hissed, seeing the price tag on a little black dress.\n\n\"Nancy, don't look at the prices, look at the dress,\" Gracie hissed in reply.\n\nThey found a little black strapless number that had three buttons up the front. The third button was just over Nancy's crotch, so she had to be careful of how she stepped, to avoid flashing small glimpses of her panties.\n\n\"You don't wear panties with that,\" Gracie whispered. \"Just stockings.\"\n\n\"Pantyhose?\" Nancy asked, admiring the dress in the mirror.\n\n\"No, stockings,\" Gracie affirmed.\n\n\"Oh wow, that one does look nice on you, ma'am,\" the salesgirl said.\n\n\"She'll take it,\" Gracie decided.\n\nGracie also bought Nancy three pairs of stockings; nude, smoky black with lines up the backs, and micro-fishnet in black. The shoes were another sticking point; Nancy could not believe that anyone would pay four hundred dollars for a pair of sandals.\n\n\"But they're so cute on you and they match the dress perfectly,\" Gracie said. \"And this clutch?\"\n\n\"Gracie, even with my commission, I didn't make that much all last year,\" Nancy argued as they stepped out into the bitter cold.\n\n\"Uh huh, we're in the green Mustang,\" Gracie told the shivering sales associate that was following them with Nancy's bags.\n\n\"Thank God,\" the girl said. \"Last night? Was like three degrees out here? With the wind chill? And this woman was parked clear on the other side of the lot. Tells me, she parked that far away so no one would scratch her paint. I was a popsicle by time I got back inside.\"\n\n\"Thank you. I know we can't tip you, but I do want you to know, I really appreciate your help,\" Gracie told the girl.\n\n\"It is Babbage's pleasure to serve our customers,\" the girl recited what had been hammered into her head from her first day of employment at the exclusive store.\n\nGracie then drove Nancy to her parents' house so that Nancy could dress for her work day ahead. Before getting out of the car, Nancy ordered Gracie to leave the bags in the trunk.\n\n\"I'll get dressed at your house. Bring that stuff in here? My mother will just throw a fit. Then my dad will get all bent out of shape, and God damn, I just do not need this shit,\" Nancy said.\n\n\"Okay; I know exactly where I'll hang it,\" Gracie agreed.\n\n\"If you think you eating here, got another thing coming; I didn't make anything for lunch,\" Mrs. Hebert snapped.\n\n\"That's fine, mother,\" Nancy sniped.\n\n\"Hello,\" Gracie said quietly.\n\n\"Uh huh,\" was Mrs. Hebert's response to Nancy's friend.\n\n\"Tommy's? Love their shrimp po-boy,\" Nancy asked Gracie a moment later.\n\n\"I haven't had one in I don't know how long,\" Gracie agreed.\n\n\"Coming home after work?\" Mrs. Hebert snapped.\n\n\"No,\" Nancy said after verifying this with Gracie.\n\n\"That's the same clothes you had on earlier,\" Gracie noted when they got into her car.\n\n\"I'll change in the car,\" Nancy said.\n\nShe put a hand on Gracie's arm.",
        "\"I just, I couldn't leave you out there on your own with my mother,\" Nancy admitted.\n\nAfter eating their lunch, Gracie pulled around and parked behind Cal's Western Wear. To Gracie's horror, and utter delight, Nancy stripped down to just bra and socks and wiggled into a blouse. She sat, legs spread as she buttoned the blouse closed, then wiggled into her blue jeans. Her final act was to wiggle her boots and belt on.\n\n\"And remember, I'm not wearing aannyy panties,\" Nancy husked then kissed Gracie.\n\n\"Oh! What time's supper?\" Gracie asked just as Nancy prepared to shut the door.\n\n\"Five,\" Nancy decided.\n\nAt five, Nancy again reminded Gracie that she was sans panties and even unzipped her jeans so that Gracie could stick her hand in and verify the truth of Nancy's statement.\n\n\"See you at nine thirty, Sweetheart,\" Nancy giggled at Gracie's heavy blush.\n\n\"Okay,\" Gracie agreed.\n\nNew Year's Eve was dead in the store. At three o'clock that afternoon, Miss Callie said they'd close so everyone could go get their partying started early.\n\n\"Out back,\" Gracie responded to Nancy's text.\n\n\"And Charlene and Marlene will be at the house at six,\" Gracie babbled as she drove along Highway 52.\n\n\"Who?\" Nancy asked.\n\n\"These twins; they used work at T. Dayton's Hair Salon. Know? I never can get out of them why they no longer work there. You ever been to T. Dayton's?\" Gracie babbled.\n\n\"You are so super excited 'bout this, huh?\" Nancy giggled.\n\n\"Yeah, why?\" Gracie asked as she backed into her garage.\n\n\"I mean, Gracie, you're bouncing off the walls and you're never bouncing off the walls,\" Nancy laughed.\n\n\"Well, every year, I go, and Stacie's always got this boyfriend or that one, Aunt Cindy too, and of course Penny's married to Duncan and finally? This year? I'm there with my girlfriend. Let them beat that, huh?\" Gracie enthused.\n\nEven though there would be finger food all evening at the country club, Gracie still prepared a large dinner salad. They were just finishing the meal when the doorbell gave off a booming chime.\n\n\"Yes?\" Gracie asked into an intercom.\n\n\"Charlene and Marlene Falgout? Here to see uh, Gracie and Nancy?\" a disembodied voice called out.\n\n\"ID?\" Gracie asked. \"Please show it to the speaker, right there on your left.\"\n\n\"You are kidding me,\" they heard a second voice say.\n\n\"Thank you,\" Gracie said as both women did show their identifications to the camera.\n\nShe punched a code on the panel beneath the speaker and the front door swung open.\n\n\"Hi! Wow, this is beautiful! Hi, I'm Charlene,\" one slim brunette enthused as they entered the foyer.\n\n\"And I'm Marlene. We're identical twins, but you'll be able tell us apart soon enough,\" the other twin said, pushing her twin out of the way.\n\n\"Yes, I'm the smarter one,\" Charlene said smugly.\n\n\"And I'm the prettier one,\" Marlene followed. \"So, where are we working today, ladies?\"\n\nCharlene and Marlene made appropriate noises as Gracie led them to her private bathroom. Nancy saw that there were now two vanity chairs in the large bathroom. \n\n\"Ladies? Just a moment, please?\" Nancy ordered as Charlene began barking orders.\n\nNancy ushered both strangers from the bathroom. Nancy quickly helped Gracie strip nude, then pulled a thick robe tightly around Gracie. Nancy then called out for the twins again as she stripped out of her own clothing.\n\n\"Sorry; sometimes I kind of get a little bossy,\" Charlene mumbled.\n\nThe twins worked quickly, efficiently, methodically. Before an hour had passed, they had both Gracie and Nancy expertly made up, hair styled in loose curls, fingernails and toenails brightly shaped and painted.\n\n\"All righty,\" Marlene finally said, stepping out of the way so that Gracie could see her reflection. \"Like our work? Leave us a positive review, okay?\"\n\n\"And...\" Gracie said, masking a button on her phone. \"There's a hundred dollar tip for you as well.\"\n\n\"Oh! Well, thank you,\" Charlene said brightly.\n\nGracie made sure her robe was tightly cinched around her waist. She walked Charlene and Marlene to the door, thanked them again, then locked the door behind them. She then had to check all other doors as well as windows before scampering back to the bedroom.\n\n\"And now...\" Gracie said, flinging the closet open.\n\nGracie took charge this time, stripping Nancy of the terry cloth robe and sitting the nude woman on the lip of the bed.\n\n\"The ones with the lines, okay?\" Gracie asked, selecting the stockings.\n\n\"Okay,\" Nancy agreed.\n\nGracie rolled the stockings up Nancy's smooth legs. She then insisted on a photograph of Nancy in only thigh high stockings.\n\nThe dress was wiggled into, then the sandals were cinched on Nancy's pretty little feet. Nancy gave the finished product a look in the full length mirror and approved. Gracie had to have a photograph of that as well.\n\n\"And with that cross? Perfect,\" Gracie enthused as Nancy again looked at herself in the mirror.\n\n\"God, Gracie!\" Nancy exclaimed, seeing Gracie's elegant dress.\n\nGracie thought her face would melt from the blush, though, when Nancy insisted on a cell phone photograph of Gracie in only her thigh high smoke gray stockings.\n\n\"But Nancy, you can see my, my,\" Gracie protested.\n\n\"Pretty little pussy? Nice little boobies? Yeah, I know,\" Nancy agreed.\n\nThen, fully dressed, fully made up, hair perfectly coiled, Nancy and Gracie had an hour and a half to kill before leaving for the Hardington Acres Country Club. Gracie decided to check on her profit & losses projections for the fourth quarter, even though she'd checked them earlier that day.\n\n\"What you doing?\" Nancy asked, bored with the insipid television shows, bored with the endless Times Square celebration coverage.\n\n\"Just piddling,\" Gracie lied, quickly exiting out of her work.\n\n\"Gracie!\" Nancy protested. \"Look at you; looking like I just caught you looking at porn. Now, seriously, what you doing?\"\n\n\"Nancy, I, do you love me?\" Gracie asked, heart caught in her throat.\n\n\"Well, yeah,\" Nancy said.\n\n\"I mean, love me. Me. Not my big old house, or my car. Love me?\" Gracie clarified, fighting to breathe.\n\n\"Gracie, the house is nice, and the car's nice, but lights are off? And it's just me and you, lying in bed? Holding each other? That's all that matters to me,\" Nancy agreed.\n\nGracie closed her eyes tightly, reminding herself to breathe in, breathe out. She then opened her eyes and studied Nancy's face for a long moment. Gracie nodded and brought up her accounting program again. Nancy stepped closer and looked over Gracie's shoulder at the numbers.\n\n\"And?\" Nancy finally asked, not fully comprehending what she was being shown.\n\n\"I'm, I'm a millionaire,\" Gracie whispered. \"My grandfather left me a bunch of money and I've just about tripled it.\"\n\n\"Okay?\" Nancy said. \"So, why wouldn't I love you?\"\n\n\"I, Nan, I, I don't, I don't want you to just love me for my money,\" Gracie stammered, close to tears.\n\nNancy gasped as if she'd been slapped. The feeling in the pit of her stomach was very close to that; as if she'd been slapped. Abruptly, she turned on her heel and left the home office.\n\n\"Nancy, I'm sorry,\" Gracie cried out.\n\n\"Gracie, right now? Leave me alone, okay? Please, just leave me alone,\" Nancy snapped, slamming the door of the hall bathroom.\n\nEven though she knew it would affect her, Gracie had to take one of her anti-anxiety pills. She resisted the urge to take two. She resisted the urge to take all twenty three of the small tablets, washing then all down with the St. Elizabeth's Rum she had in her small liquor cabinet.\n\n\"I'm sorry,\" Nancy said, almost forty minutes later.\n\n\"No, I'm sorry,\" Gracie said listlessly.\n\n\"Oh, Gracie! Did you, how many did you take?\" Nancy cried out, recognizing the slack expression on her friend's face.\n\n\"Just one,\" Gracie said, holding out one finger.\n\n\"Oh God, you are such a mess,\" Nancy said, hugging Gracie tightly.\n\n\"You hate me?\" Gracie asked.\n\n\"No, Gracie, I don't hate you. If anything, I love you more right this minute than I've ever loved anyone in my life,\" Nancy whispered into Gracie's ear.\n\n\"Need go,\" Gracie said, looking at the clock.\n\n\"Give me the keys; you are not driving like that,\" Nancy demanded.\n\n\"Of course, now I suppose you're going to sell the car and get you a new one, huh?\" Nancy lightly joked as she helped Gracie shrug her coat on.\n\n\"You, you know about that?\" Gracie asked, ashamed.\n\n\"See a gold Jeep, see a gold Jeep, drive the gold Jeep, then don't see it no more?\" Nancy asked, showing Gracie that she was punching the alarm code into the panel.\n\n\"Did you check the back door?\" Gracie suddenly thought to ask as they stepped into the chilly garage.\n\n\"Yes Gracie, and the front door. I'm locking the garage door right now,\" Nancy agreed.\n\nEven though the Mustang was just a V6, it still gave a good throaty rumble. Nancy hit the garage door remote, let the garage door come all the way up, then checked all around before putting the car in drive and rolling out of the garage. She hit the remote again and looked over her shoulder to make sure that the door went all the way down before again checking all around the car.\n\n\"That's pretty nice,\" Nancy complimented. \"Always thought that was kind of a pain in the butt, way you back into your garage like that. But man! Can just pull right out and go, huh?\"\n\n\"Uh huh, and if anyone's in the garage? Even if the door's down? Just floor it and go,\" Gracie agreed.\n\nNancy drove to a convenience store and left Gracie in the car, doors securely locked. She bout a small cup of coffee, doctored it the way Gracie liked it, and also bought some breath mints. Gracie hit the door lock for Nancy and Nancy handed her the cup of coffee.\n\n\"Here, drink this,\" Nancy ordered. \"And after? Suck on two of these; you're not kissing me with coffee breath.\"\n\n\"You're bossy,\" Gracie smiled, sipping the scalding hot coffee.\n\n\"And bitchy,\" Nancy agreed.\n\n\"By the way,\" Nancy giggled. \"Every step I take in this dress? Feels like I'm about to flash my pussy.\"\n\n\"Huh! But it looks gorgeous on you,\" Gracie said as they chewed up the miles to the Hardington Acres Country Club.\n\n\"Feeling better?\" Nancy asked as they pulled in line behind a Bentley.\n\n\"Oh! I think that's my Uncle Antny's car!\" Gracie said, pointing at the Bentley.\n\n\"It's pretty,\" Nancy agreed. \"I'm serious, suck on two them mints.\"\n\n\"Bossy,\" Gracie teased, popping two mints into her mouth.\n\n\"Good evening, ma'am,\" a man in a valet's jacket smiled, opening the door for Gracie. \"And Happy New Year.\"\n\n\"Thank you; happy New Year to you,\" Gracie smiled.\n\nThe valet was slightly surprised that the driver was also a woman. But years of working at the country club had taught him the importance of keeping an blankly smiling face.\n\n\"I thought that was you behind me,\" Anthony Whitehead smiled, approaching his eldest niece. \"But who's this driving it, huh?\"\n\n\"Uncle Antny? This is my girlfriend Nancy,\" Gracie said, holding out her hand for Nancy.\n\n\"Nancy Hebert,\" Nancy said, holding out her right hand to Anthony. \"By the way, love your car.\"\n\n\"Yeah, gets me from point a to point b,\" Anthony smiled, warmly shaking Nancy's hand. \"Now, I know, rude as hell of me to ask, but when you say 'girlfriend' do you mean...\"\n\n\"We're together,\" Nancy answered for the two of them.\n\n\"Good,\" was Uncle Anthony's response. \"Come on, it's too damned cold out here.\"\n\nHe herded the two women through the doors, out of the cruel wind. Gracie clung onto Nancy's arm as they approached the grand ballroom.\n\n\"Check your coats here, Nancy,\" Anthony said, pointing toward a small window. \"So, how did you two meet?\"\n\n\"We went to high school together,\" Gracie answered.\n\n\"And I had the biggest crush on her, but just didn't have the guts to tell her, Nancy said, affectionately rubbing Gracie's arm.\n\n\"Can understand why,\" Anthony agreed, waiting his turn at the coat check behind Gracie and Nancy. \"My niece is beautiful, smart...\"\n\n\"See? SEE? I'm not only one thinks you're beautiful,\" Nancy said, unbuttoning Gracie's coat.\n\nAnthony watched as Nancy helped Gracie take her coat off. He watched as Nancy took both coats to the young girl at the counter, then retrieve both tickets. He watched Nancy give Gracie a reassuring smile and then take Gracie's hand.\n\n\"Thank you, God,\" Anthony muttered. \"Someone to take care of her.\"\n\n\"Wait up; I want to make a grand entrance,\" Anthony said to Gracie and Nancy. \"An old guy like me with not one, but two gorgeous women, huh?\"\n\n\"Uncle Antny, you're not old,\" Gracie protested.\n\n\"And that. That's why you're my favorite niece,\" Anthony smiled, taking his claim check from the young girl.\n\nOnly fifty or sixty of the expected three to four hundred guests had arrived. Entering the grand ballroom, Anthony immediately saw his mother, Susan Whitehead, chatting with Barney and Joanna Siegel. Thankfully, he did not see their fat ass daughter, Barbara Peters, or her two annoying children He didn't really find Josette or Barney Peters to be annoying, but any time he saw them, their overbearing mother was hovering right over them. \n\nAs if she sensed someone looking for her, Barbara waddled over to where her parents stood. Anthony rolled his eyes.\n\n\"By the way, beautiful dresses you two have,\" Anthony complimented both women.\n\n\"Aw!\" both Nancy and Gracie sighed.\n\n\"Mother, where's your walker?\" Anthony teased his mother.\n\n\"Anthony Marcus Whitehead!\" Susan screeched. \"I am not that old!\"\n\n\"Some children never learn respect, hmm?\" Joanna smiled as Anthony hugged his mother.\n\n\"Hi Anthony,\" Barbara preened.\n\n\"Hey, uh, Betty, right?\" Anthony said.\n\n\"Barbara,\" Barbara snapped, puffy face darkening.\n\n\"Gracie! And who's this beautiful young woman with you?\" Susan asked.\n\nLisa had already informed Susan that Gracie was dating a woman so Nancy's appearance was no surprise to Susan. Susan's first response had been shock, then she decided, as long as Gracie was happy, then she could be happy for her granddaughter.\n\n\"Grandmother? This is Nancy, my girlfriend,\" Gracie said.\n\n\"Nancy Hebert,\" Nancy said, holding out her hand.\n\n\"Susan Whitehead, but you can call me Grandmother,\" Susan said, enveloping Nancy in a hug. \"Of all the names I've been called? Grandmother's still my favorite.\"\n\n\"Well, yes ma'am,\" Nancy smiled.\n\n\"Mother, I am so proud of you,\" Anthony beamed as Gracie pulled Nancy toward Lisa Whitehead.\n\n\"Uh huh, I'm still not forgiving you. Where's my walker indeed,\" Susan chuckled.\n\nShe looked over her left shoulder. Then she nudged Anthony.\n\n\"And, uh, don't look now, but your ex-wife's here,\" Susan warned, looking at Cheyenne Whitehead.\n\n\"Oh boy! I hope she's got another tattoo to show me!\" Anthony said.\n\n\"Just what did you ever see in her?\" Susan asked as Cheyenne walked toward them, already well into the champagne.\n\n\"Saw a lot of myself in her,\" Anthony smirked.\n\n\"Incorrigible. You are simply incorrigible,\" Susan snapped, walking toward Lisa and Gracie and Nancy.\n\n\"Mother, have you met...\" Lisa started.\n\n\"Yes, Grandmother and I have already met,\" Nancy said, smiling.\n\nJimmy Whitehead stood with his date, Morgan Wolfe. He and the young woman had met at a Narcotics Anonymous meeting. Other than being clean and sober, the two had little in common, but Jimmy had needed a date for the party and Morgan had never been to the country club, so agreed to go with him.\n\n\"Evening, Jimmy, Morgan, John Burke, one of the waiters smiled, holding up a tray of champagne flutes.\n\n\"John, my man! What up? Where's the coffee?\" Jimmy asked the fellow member of NA.\n\n\"Left of the swinging doors, but give the doors plenty of room, huh?\" John smiled. \"Kitchen? Mad house.\"\n\n\"I'll bet,\" Jimmy smiled. \"Morgan? Coffee?\"\n\nA five piece band played music in a corner of the large room. The music was loud enough to be heard, but not so loud as to intrude on conversation. Two octogenarians held onto one another, swaying to the lively tempo music.\n\n\"Happy New Year!\" the singer, an emaciated looking woman smiled. \"This next one's a favorite of ours.\"\n\nThe band started to play 'Tumbling Dice' by the Rolling Stones. With a shrug, the older couple continued \n\nTo dance. They were joined by a few other couples.\n\n\"Want to dance?\" Nancy asked Gracie.\n\nThey did draw some looks as they strolled onto the dance floor. As there were two other same sex couples in attendance, though, the looks were soon averted to other more interesting things to look at.\n\n\"Going do it?\" Morgan asked Jimmy as they watched Gracie and Nancy dancing.\n\n\"Going try,\" Jimmy affirmed.\n\n\"Trying is dying,\" Morgan said. \"Now, going do it?\"\n\nJimmy walked over to where his sister stood, chatting with Joseph Gaudet, her date for the evening. Lisa regarded her younger brother coolly.\n\n\"Listen, I uh, I'd really like to talk with Gracie,\" Jimmy mumbled. \"I, see, there's this ninth step? Making amends and...\"\n\n\"And there are some things you just can't make amends for, Jimmy,\" Lisa spat.\n\n\"God damn, Lisa, huh?\" Jimmy spat. \"Shit happened what? Almost sixteen years ago, huh? I was high on crack! But I been clean and sober coming up on thirteen years now, huh?\"\n\n\"Let me ask you something, Jimmy,\" Lisa snarled, fury sparking from her eyes. \"You get an invitation to Gracie's high school graduation?\"\n\n\"You know I didn't,\" Jimmy yelled.\n\n\"Neither did I, Jimmy! Know why? Even though she was the salutorian? She didn't go to her graduation. Get an invitation to her college graduation? No? Know why? Even though she had a perfect four point oh, she didn't go to her graduation. I'm glad you got the help you need, Jimmy. I really am. But my daughter? My daughter is still getting help,\" Lisa screamed.\n\nLisa punched Jimmy in his chest with all her might. The punch knocked him to the floor.\n\n\"My daughter! My precious baby girl! I trusted you with my life, Jimmy!\" Lisa screamed. \"And you shit all over it. YOU! You did it, you did it. You can blame crack all you want, but you, you're the one who took a sweet, innocent girl and turned her into a God damned psychotic mess.\"\n\n\"I'm here. I am right here, I'm right here with you,\" Nancy murmured to Gracie as they stood and watched the spectacle.\n\n\"I can't, I can't...\" Gracie whimpered.\n\n\"No, no, I'm right here. Gracie, I am right here. I will never ever let anything or anyone hurt you,\" Nancy soothed, hugging Gracie tightly.\n\n\"Jimmy, maybe you should leave,\" Susan said quietly, firmly.\n\n\"\"No! God damn it! I'm tired of always being the one has to leave,\" Jimmy yelled.\n\n\"Come on, Jimmy,\" Morgan said, kneeling to help her date up. \"Need call your sponsor, hear?\"\n\n\"Fuck you, all right? Fuck you,\" Jimmy snarled at Lisa, at his mother, at Morgan.\n\n\"Shit. How much you think cab's going cost from here?\" Morgan asked John Burke as they watched Jimmy storm from the ballroom.\n\n\"I get off about two,\" John offered.\n\n\"Know what? Yeah. He's already paid for my ticket,\" Morgan smiled.\n\nThe singer, wanting to get the attention back onto the band, walked up to the old couple.\n\n\"So, how long have you two been married?\" she asked, then held the microphone out.\n\n\"Me?\" the old man said. \"Uh, fifty eight, no, no, fifty nine years.\"\n\n\"Sixty three years,\" the old woman said in a thin voice.\n\n\"Oh! I uh, so y'all aren't uh...\" the singer stammered.\n\n\"No, we just get together to fuck,\" the old man said.\n\n\"Been what, Henry? Fifty years now?\" the old woman asked.\n\n\"\"bout that,\" Henry agreed. \"See, my Louise? Bitch is a dried up old hag, pure-d missionary sex, lights all off, hurry up get it over with.\"\n\n\"And Harold's got about an inch, maybe inch and a half,\" the old woman said.\n\n\"Oh. Kay,\" the singer said, backing away from the two octogenarians.\n\n\"Maybe we should take a quick smoke break,\" the bass player suggested, face red from laughing.\n\n\"Know what?\" Anthony said to Gracie and Nancy as they sat at his table. \"Two of you looked so good out there, I'm jealous.\"",
        "\"Jealous?\" Gracie stammered, trying to catch her breath.\n\n\"Breathe in. Breathe out,\" Nancy instructed. \"Jealous?\"\n\n\"Yeah, y'all really look good together. Wish I had someone like you two have,\" Anthony said.\n\n\"Uncle Antny, you going meet someone,\" Gracie struggled to say.\n\n\"Breathe, Gracie, breathe,\" Nancy said. \"Yeah, Uncle Antny, you'll find someone.\"\n\n\"Are you okay, Sweetheart?\" Lisa asked her daughter.\n\n\"Yeah, yeah, I'm, I'm,\" Gracie wheezed.\n\n\"Need anything?\" Lisa asked.\n\n\"Miss Lisa, we get some water?\" Nancy asked.\n\n\"On it,\" Joe Gaudet said. \"Water for everybody.\"\n\n\"Not. Funny, Joe,\" Lisa smiled.\n\n\"Hmm?\" Anthony asked.\n\n\"Joe's the CEO of St. Elizabeth Water and Sewage,\" Lisa smiled, gently rubbing her daughter's back.\n\nJoe returned with two cups of water. Nancy grabbed one of the cups and held it out to Gracie. Watching, Lisa felt a twinge of sadness, of happiness. This girl was replacing her in her daughter's life.\n\n\"Thank you for, for standing up,\" Gracie gasped out to her mother.\n\n\"Well, I had to,\" Lisa said lightly. \"God only knows what would have happened if Nancy had gotten a hold of your Uncle Jimmy.\"\n\n\"He'd be dog meat,\" Nancy stated firmly.\n\n\"I believe it,\" Anthony said.\n\nThe band returned and launched into 'All Day And All Of The Night' by The Kinks. From there they went to 'I Want To Hold Your Hand' by The Beatles.\n\n\"Ready dance again?\" Nancy asked Gracie.\n\nGracie looked up. She was still trying to regulate her breathing, still trying to calm her hammering heart. She couldn't help but smile at her lover, though.\n\n\"Yeah, let's dance,\" Gracie said, gulping down the last of her water.\n\n\"Yeah, let's dance,\" Joe said to Lisa, guiding her to follow the two girls.\n\n\"Twist and shout!\" Nancy screamed at the band as the notes of the previous song died down.\n\n\"You heard the lady, boys,\" the singer said and the band launched into 'Twist And Shout' by The Beatles.\n\nWhen the band took another break, Nancy and Gracie also took a break from dancing. They grabbed finger foods from the nearby table and again joined Anthony and Susan, and the rest of the Whitehead clan.\n\nNancy met Aunt Cindy and Aunt Cindy's daughters Penny and Stacie. Upon meeting Aunt Barbara, Nancy saw that, even though Cindy and Barbara were identical twins, she'd not have any problem telling them apart. Aunt Barbara had a softness, a gentleness to her that Aunt Cindy did not have.\n\nAunt Barbara's husband Dennis, and their son Dwight both flirted clumsily with Nancy, much to Barbara's amusement. Penny was civil, coolly polite to Nancy, her husband smiled, but kept his distance. Stacie drunkenly asked Gracie who was the man in their relationship. Her date looked shocked, disgusted with Stacie.\n\n\"Stacie, that is none of our business,\" Aunt Cindy snapped. \"Do you think maybe you've had enough of the champagne?\"\n\nAt eleven thirty, Nancy and Gracie went out onto the covered porch to watch the fireworks display the Country Club was putting on. Gracie clutched on to Nancy's hand as the sky lighted and the glass shook from the deafening booms.\n\n\"Every year, I'd stay out here and watch this,\" Gracie whispered. \"And every year, I'd be out here all by myself.\"\n\nNancy didn't know what to say to that statement. So she turned her face away from the streaming flashes and gently kissed Gracie's lips.\n\n\"I love you,\" Nancy murmured into Gracie's throat.\n\nAt five minutes before midnight, the PA system crackled with the news that it was five minutes until midnight. Nancy and Gracie hurried back inside. They located the Whitehead clan and wiggled to stand between Lisa and Susan Whitehead.\n\n\"Three! Two! One, Happy New Year!\" they all screamed and tossed handsful of confetti into the air. Outside, the sky lighted with a barrage of fireworks and the thunderous booms could be heard inside.\n\n\"Happy New Year, Sweetheart,\" Nancy said to Gracie and they kissed.\n\n\"Happy New Year,\" Gracie agreed.\n\nThey turned and hugged each member of the Whitehead clan. Nancy smirked when Cousin Dwight did give her butt a squeeze.\n\n\"Lucky its New Year's, kid,\" Nancy said, messing up the boy's hair.\n\n\"That's my boy!\" Dennis hugged his son.\n\n\"Uncle Dennis! That's not nice,\" Nancy said.\n\nOne by one, they began to depart. Stacie was the first, by now so drunk she could hardly walk. Her date wrestled the keys from her and poured her into her coat. Aunt Barbara and Uncle Dennis were next. Dwight tried to get another hug from Nancy but she held up a fist.\n\n\"Nuh uh, Quick Hands. You're not getting anywhere near my butt again,\" she declared.\n\n\"Dwight,\" Barbara chided, trying to hide her smile.\n\nSusan and Anthony were the last of the Whiteheads to leave. Anthony helped his mother put her coat on, then hugged her tightly.\n\n\"Love you, boy,\" Susan said.\n\n\"You too, Momma. Be careful, hear? I know how you old people have all kind of trouble seeing at night; it's so dark out there,\" Anthony teased.\n\n\"Boy! I swear!\" Susan protested.\n\n\"Seriously, Mother, be careful. Bunch of drunks out there right now,\" Anthony cautioned.\n\nHe then fished his claim check out. The girl gave a tight smile and retrieved his coat.\n\nAnthony looked at the girl. Earlier that evening, the attractive blonde had worn a brilliant smile, even displaying one crooked upper tooth. Her puffy lips had stretched wide, the smile had even reached her large brown eyes. But now, it was a tight, closed mouth smile.\n\n\"Problem?\" Anthony asked the girl.\n\n\"I'm supposed get off in twenty minutes and my stupid boyfriend's not answering his phone,\" she snapped.\n\n\"Hmm?\" Anthony asked.\n\n\"Yeah, he's got my car and he went to Trevor's party and I know Charlie's going be there and he's going be all like 'Aw, hey, look it ain't but a thing, know what I'm saying?' but I'm one stuck here, knew I should have told him 'no, you can't use the wheels just 'cause I'm working,'\" the girl said in a rush of words.\n\n\"Here, call him from my phone,\" Anthony said. \"He's probably ignoring calls coming from yours.\"\n\nThe girl smiled and punched in the number. She was puzzled, but handed the phone back to Anthony when he held out his hand.\n\n\"Yeah? Who's this?\" a drunken voice demanded angrily.\n\n\"Yo, yo, yo, dog! What up!\" Anthony said cheerfully. \"Uh, listen, don't worry 'bout coming get your girl, know what I'm saying? Yeah, me and my crew? We handle up on her, know what I'm saying? Peace out, bitches.\"\n\n\"Uh!\" the girl said, eyes wide.\n\n\"By the way? Sounded drunk off his ass. So, even if he does come for you? I wouldn't get into any car with him,\" Anthony said, sending his ringing telephone to voice mail. \"Where do you live?\"\n\n\"Know where the Spanish Armada is?\" the girl asked, ignoring her now ringing telephone.\n\n\"Hmm? Oh! Right there on Barcelona! Yeah, yeah, that's right on my way home,\" Anthony said. \"Tell you what, I'll just hang out until you're done and I'll run you on home, okay?\"\n\n\"Mister, you sure?\" the girl asked. \"I mean, I could be another twenty, thirty minutes here.\"\n\n\"Yes I'm sure. Like I said, he sounded drunk off his ass, and I haven't had anything to drink,\" Anthony said. \"Meet you by the front door, okay?\"\n\nTwenty eight minutes later, the girl came, pulling a threadbare coat on over her uniform. Anthony had already retrieved his car from the valet, tipped the man, and wished him a happy new year.\n\n\"By the way, my name is Anthony Whitehead,\" Anthony said as he put his hand on the small of the girl's back, guiding her toward his Bentley.\n\n\"Huh? Oh! And I'm Nessie, Nessie Breaux,\" the girl said.\n\n\"Nessie?\" Anthony asked, opening the passenger door for her.\n\n\"Yeah, it's really Vanessa, but no one calls me Vanessa,\" the girl said. \"This is nice; what kind car this is?\"\n\n\"It's a Bentley,\" Anthony said. \"Gets me from point a to point b.\"\n\n\"Said you live by the Armada? Where you live?\" Nessie asked.\n\n\"So, Vanessa, how long you been working at the Country Club?\" Anthony asked, ignoring her question.\n\n\"Just for the Holidays. Since I turned eighteen last week? Hoping get hired on full time there. I love it,\" Nessie said.\n\n\"Yes, it is nice,\" Anthony agreed. \"Just turned eighteen huh? Well, happy birthday.\"\n\n\"Thanks. Kind of sucks though. Since my birthday's on the twenty sixth? Lots of people try giving me just one present, saying it's both a Christmas present AND a birthday present all in one,\" Nessie said. \"Man! This car is really nice!\"\n\n\"Mm-hmm,\" Anthony agreed. \"So, Vanessa, where do you go to school? One of my nieces just graduated from U.L.D last month.\"\n\n\"Mr. Anthony, no one calls me Vanessa,\" Nessie said. \"And I don't. Dropped out of Elgee; got my DED last year.\"\n\n\"And no one calls me Mr. Anthony,\" Anthony smiled.\n\n\"So, where you live?\" Nessie asked as he turned the luxury automobile onto Barcelona Way in Pinoak, Louisiana.\n\n\"On Pennington. About three miles away from the country club,\" Anthony admitted, pulling into the parking lot of the Spanish Armada apartment complex.\n\n\"Huh?\" Nessie gasped. \"Mister! You drove all the way out here? And you live all the way back there?\"\n\n\"Mm-hmm. And Vanessa, if I had said I live on Pennington Drive, would you have let me drive you home?\" Anthony asked.\n\n\"Well, no,\" Nessie said.\n\n\"And would still be sitting there, waiting. And would have had to call a cab, or hope another worker there could drive you home,\" Anthony said. \"This way? I got to drive you home. I got to spend some time with a beautiful young lady.\"\n\n\"Well, at least let me pay for your gas,\" Nessie insisted, grabbing her worn purse.\n\n\"Ab. So. Lute. Ly not,\" Anthony said. \"Happy new year, get out.\"\n\n\"Give me your phone,\" Nessie demanded.\n\n\"Hmm? Why?\" Anthony asked, smiling. \"Your boyfriend's already got my number.\"\n\n\"Not my boyfriend; he can have that Charlie Menendez skank,\" Nessie snapped.\n\nAnthony gave Nessie his phone and watched as she rapidly punched in her phone number.\n\n\"Save it under Vanessa,\" Anthony stated firmly.\n\n\"I did,\" Nessie agreed.\n\nThen she leaned up and gave Anthony a kiss that had his cock straining to burst his trousers.\n\n\"Night, Anthony,\" she breathed.\n\n\"Good night, Vanessa,\" he said.\n\nAnthony sat and watched as the girl hurried through the cold night then scampered up a flight of steps to a second floor apartment. She turned and gave him a brilliant smile before disappearing from sight. Anthony gave a quick bleat with his horn, then backed out of the parking lot.\n\nOn the way home, he passed a St. Ann Parish police cruiser that had a nondescript subcompact car pulled over. He could see an angry, drunk looking young man sitting in the rear of the cruiser. A slightly attractive girl seemed quite animated as she talked with the police officer. Anthony wondered if this might have been Vanessa's boyfriend, and the unfortunate Charlie Menendez.\n\n\"Not no more,\" Anthony smiled. \"He can have that Charlie Menendez skank.\"\n\nWhile Anthony was punching in the code for the gated community's rear gates, Nancy and Gracie were already snuggled in bed, both snoring lightly. Nancy had one arm around Gracie's middle, had her right leg entwined between Gracie's legs.\n\nWhile Anthony was undressing, while Nancy and Gracie were sleeping, Lisa was thanking Joe Gaudet for being her date with an expert blow job.\n\nWhile Anthony was brushing his teeth, while Gracie and Nancy were sleeping peacefully, while Lisa was showing Joe a mouthful of sperm, Trey Edmonton was glumly posing for his mug shot.\n\nWhile Anthony was stretching out on his bed, cock still hard from thoughts of Vanessa Breaux, while Nancy and Gracie were peacefully sleeping, while Joe was showing Lisa that he knew a few oral tricks of his own, while Trey was trying to think of whom to call from the Pinoak Lockup, Jimmy and his NA sponsor were sitting in the Waffle House on Highway 52, each geeing the other clean and sober. Jimmy was still resentful at his sister for not allowing him to make the amends he desperately wanted to make. Jimmy was still resentful at his mother for making him leave the country club's celebration.\n\n\"Jimmy, man, look, some amends, you just can't make, man,\" Big Bird said. \"Man, 'except when to do so would injure them or others,' huh?\"\n\n\"Yeah, but fuck, man! Shit! Been, what? Fifteen? Sixteen years now?\" Jimmy snapped.\n\n\"Man, you don't get to determine how much someone else's been hurt by your actions,\" Big Bird said. \"You don't get to say how deep the cut is, man.\"\n\nNew Year's Day began with a pale sun trying to warm a frozen earth. Gracie's outdoor thermometer showed a reading of twenty four degrees. Although Nancy claimed to not like oatmeal, she insisted that they have a big steaming bowl of it, with bacon crumbled up in it.\n\n\"God, eat like you pregnant, huh?\" Gracie teased. \"Bacon? In oatmeal?\"\n\n\"Mm-hmm,\" Nancy enthused. \"Oh. And I AM pregnant.\"\n\n\"And Mommy needs something yummy for her tummy,\" Gracie smiled as she drizzled honey into the bubbling mash.\n\nAfter eating the sweet, savory breakfast, they cleaned up the kitchen. Then Nancy checked all the windows while Gracie checked all the doors. They giggled as they raced to beat one another into the master bedroom, to be the one to check the bedroom windows.\n\n\"You check that one, I'll get this,\" Nancy said as Gracie locked the bedroom door.\n\nThen she overlapped the curtains, just like Gracie. Turning from the task, Nancy shrugged out of the bulky terry cloth robe, displaying her nude body.\n\n\"God, Nancy, every time I see you? You're more beautiful than ever,\" Gracie sighed.\n\nNancy helped Gracie shrug out of her robe. Then she helped Gracie out of the short flannel top, the loose flannel pants.\n\nAt first, they lay, Gracie on her right side, Nancy on her left and kissed. Their hands gently traced up and down each other's spines. Gracie was the first to move her hand down to her partner's buttocks, cupping and squeezing the delectable mounds.\n\nNancy took that moment to start sucking on Gracie's hard nipples. As Gracie moaned approval, she also worked a hand around to cup Nancy's pussy.\n\n\"Mm-hmm, oh Gracie my love,\" Nancy moaned as Gracie began to slide a finger into Nancy's wet pussy.\n\nNancy wiggled around, putting her feet toward the head of the bed, her head toward the foot of the bed. The two had found this position more amenable than fighting over who gets to be the one on top during sixty nine. Nancy lifted her left thigh and sighed as she felt Gracie's warm breath at her pussy.\n\nGracie lifted her left thigh and shivered as she felt Nancy's fingers at her wet slit.\n\nNancy slowly, languidly licked and sucked at Gracie's puffy inner lips, savoring the womanly taste of her lover. She fingered Gracie's pussy with two, then three fingers. Just as her own orgasm was threatening to burst, Nancy lightly bit down on Gracie's clitoris. Both lovers shuddered and grunted through their orgasm.\n\n\"Get the strap-on,\" Nancy ordered as she felt Gracie's tongue lapping around her anus. \"Mommy wants her ass done. Now.\"\n\nJanuary second, Gracie drove Nancy to Nancy's parents' house. She met Nancy's father for the first time. The man's anger made Gracie shrink inside of herself, numbly following Nancy to her room.\n\nInside of Nancy's room, Nancy had Gracie hold open the garbage bag while she dumped clothing into the bag. When that bag was full, Gracie held open the second bag. Then the two girls left the Hebert house.\n\n\"And don't think you just going waltz in here when you two get evicted whatever trailer park y'all living in, hear?\" Mr. Hebert snarled bitterly.\n\nMichael smirked, Carrie actually let a tear roll down her pretty face as she watched her big sister leave their house.\n\n\"Yeah,\" Mrs. Hebert echoed her husband's sentiment.\n\n\"Breathe, Gracie, breathe,\" Nancy ordered as they dumped the two garbage bags into the trunk of the car. \"Here, give me the keys; you can't drive like that.\"\n\nArriving home again, Gracie still numbly followed Nancy from garage to bedroom, dragging one of the garbage bags. She and Nancy filled the large closet with Nancy's things.\n\nWhen space became a priority, Gracie took a few of her own clothing from the closet and carried them into the home office, using the closet in that room.\n\nNancy finished the task, then looked around for Gracie. She saw that it was close to noon and figured that Gracie was probably starting on their lunch.\n\nAfter filling one drawer with her bras and panties and a second drawer with her socks, Nancy realized that there were no smells of cooking.\n\nShe found Gracie sitting at her desk, staring at the black monitor screen. Nancy quietly entered, came up behind Gracie and put her hands on Gracie's shoulders.\n\n\"What's wrong?\" Nancy asked quietly.\n\n\"It's all changing, isn't it?\" Gracie asked softly.\n\n\"Yeah. Yeah it is,\" Nancy said. \"And that's a good thing.\"\n\n\"Good?\" Gracie asked.\n\n\"Yes. Change is good, Gracie. You're changing. You're changing into a beautiful woman,\" Nancy started.\n\n\"I'm not beautiful,\" Gracie denied.\n\n\"That is tired of being alone. A beautiful woman that has had enough of being lonely and is opening her heart and letting someone else in,\" Nancy continued.\n\nNancy gently turned Gracie's office chair on its swivel. She bent to look into Gracie's bewildered eyes.\n\n\"And I am so grateful that I get to be that someone. Gracie Ann Taylor? I love you with all of my heart,\" Nancy said. \"And I am just so damned lucky that you love me too.\"\n\nGracie wrapped her arms around Nancy's waist and snuggled her head against Nancy's belly. Nancy combed her fingers through Gracie's soft blonde locks.\n\n\"Someone's tummy need something yummy?\" Gracie asked.\n\n\"Chinese. Hop Kim's?\" Nancy asked.\n\n\"Okay,\" Gracie agreed. \"Let me shut...huh! I didn't, I didn't even turn it on?\"\n\n\"Don't look like it,\" Nancy agreed, looking at the blank computer screen. \"Come on. Let's go.\"\n\nJanuary third, after dropping Nancy off at Cal's Western Wear for a four hour shift, Gracie again met her mother at Babbage's. The two women hugged, then scampered for the doors.\n\n\"I will be so glad when summer's here,\" Lisa exclaimed when they entered the store.\n\n\"Uh huh, and then be all like 'oh, man! It's so hot!'\" another shopper said, smiling.\n\n\"Oh, but of course,\" Lisa laughed.\n\n\"You bringing Mr. Joe to my birthday?\" Gracie asked her mother as they again approached the jewelry counter.\n\n\"Yeah,\" Lisa smiled. \"Said watching me put your Uncle Jimmy on his ass convinced him I was the woman for him.\"\n\n\"La Scalia's, right?\" Gracie confirmed.\n\n\"Said yes yesterday, said yes this morning, Gracie, yes. We've rented the back room at La Scalia's,\" Lisa gently chastised her daughter. \"Now, why are we doing this?\"\n\n\"Nancy moved in yesterday,\" Gracie confessed.\n\nWhen her mother did not flinch, or grimace, just looked at Gracie, waiting, Gracie continued.\n\n\"And of course, I got all overwhelmed,\" Gracie said, now looking at the display through the glass.\n\n\"Too much?\" Lisa guessed.\n\n\"Uh huh, and Nancy came and found me,\" Gracie said, then pointed. \"That one. Right there. Look. It's got one two three, three sapphires; it's perfect.\"\n\n\"Well, where were you hiding?\" Lisa asked.\n\n\"No, Momma. She came and she found me inside of me,\" Gracie clarified. \"I'm in my office, all shut down and Nancy came and pulled me out of my head. She came in and she got me.\"\n\n\"Then, let's get those. They're perfect,\" Lisa agreed, eyes shining with her tears.\n\nA mild argument ensued when mother and daughter insisted that they would be the one to pay. The salesgirl stood, waiting until Lisa won the battle.\n\n\"Gracie, you'll have plenty other stuff pay for,\" Lisa cajoled.\n\n\"Saladelights?\" Gracie asked as they again stepped into the winter sun.\n\n\"Absolutely. You ever have their Turkey Cranberry?\" Lisa asked.\n\n\"Tastes just like Thanksgiving,\" Gracie agreed.\n\nWhen Gracie returned to pick Nancy up, Nancy smiled as she got into the car.",
        "\"Miss Callie? Said only way she'll let me have Saturday off is if she's invited too; she's never eaten at La Scalia's,\" Nancy giggled.\n\n\"Oh! Well, then go invite her,\" Gracie agreed.\n\n\"Gracie, she's kidding,\" Nancy assured Gracie.\n\n\"Now, what is Mommy hungry for? I had lunch with my mother; we went to Saladelights; don't get their Oriental Shrimp; stuff was so salty I had to drink three bottles of their water. Two dollars a bottle! Can you believe that?\" Gracie enthused.\n\n\"Know what I want? What I really want? An omelet,\" Nancy said.\n\n\"Where we get an omelet? Oh! At Dusty's?\" Gracie asked.\n\n\"No, I was thinking at four seventeen Cross Circle,\" Nancy said.\n\n\"I'm on it,\" Gracie said.\n\nGracie's birthday was actually Friday, the fifth. Nancy managed to be the first one awake. She managed to be in the kitchen, coffee already made, oven pre-heated, and counter liberally coated as she rolled out a thick slab of cinnamon dough. \n\n\"You, what? What are you doing?\" Gracie whispered.\n\n\"Happy birthday to you!\" Nancy sang out loud, off-key.\n\nNancy rolled up the dough, cut six large, thick cinnamon rolls and placed them onto a greased baking sheet. Then, while the rolls baked, Nancy quickly whisked a cream cheese frosting for the rolls.\n\n\"Nancy, this is too much,\" Gracie complimented as they sat, chewing through the gooey rolls.\n\n\"Gracie, I got nothing else to give,\" Nancy admitted. \"I mean, what you buy for someone can afford whatever they want? You know I ain't making gum drops at Cal's. So...happy birthday, Sweetheart.\"\n\n\"Oh, Nancy, this is perfect,\" Gracie said. \"But my birthday isn't until tomorrow.\"\n\n\"What? No it isn't. Your birthday's the fifth. Today's the fifth,\" Nancy spluttered.\n\n\"No, it's the sixth. Oh, and come to think of it? It's also the seventh too, so I guess you going have make cinnamon rolls again,\" Gracie giggled, licking her fingers clean.\n\nAfter cleaning the kitchen, Nancy showed Gracie that she'd made just a little too much of the delicious frosting. Gracie looked at Nancy's finger, coated in frosting. Then she looked into Nancy's sparkling eyes and slowly sucked the finger into her mouth.\n\n\"So, I was thinking, since it's Friday, and you wash the sheets on Friday...\" Nancy suggested.\n\nSomehow, the comforter and the coverlets for the decorative pillows, and one of the pillows also had to be washed. Gracie started to get upset at the extent of their destruction but Nancy hugged her, giggling.\n\nSoon, Gracie couldn't help but giggle as well. But both agreed, after fighting to get the sodden comforter from washer to dryer, they'd not be quick to repeat that little activity.\n\n\"You ever miss him?\" Gracie blurted out suddenly.\n\n\"Miss him? Miss who?\" Nancy asked, now putting the detergent in with the sheets.\n\n\"The baby, Eddy?\" Gracie managed to whisper.\n\n\"If I didn't have you? If I was having to go through this all alone? Maybe. Do I miss him? God, I don't know, I mean, Gracie, we were together like five, no, six years. But then all of a sudden, shit started falling apart and he's blaming me for it, then I get pregnant and really? I thought he was going hit me,\" Nancy said, her words barely heard over the 'whup whup' of the dryer and the water filling the washer.\n\n\"Hit you?\" Gracie said, horrified.\n\n\"Yeah, well, he didn't, but remember how big he was?\" Nancy admitted.\n\nAt eleven thirty on Saturday morning, Nancy and Gracie were the second ones to arrive at La Scalia's Italian restaurant. The ma\u00eetre-d escorted the women to the small banquet room.\n\n\"There she is! Hey Birthday Girl!\" Joe Gaudet greeted Gracie.\n\n\"Hi Mr. Joe. You remember my girlfriend Nancy?\" Gracie asked.\n\n\"Damn, met her what, six days ago? Just how old and senile you think I am?\" Joe teased the girl.\n\n\"Hi Miss Lisa, hi Mr. Joe,\" Nancy cheerfully called out.\n\n\"There she is, my birthday girl,\" Susan said, entering the room.\n\n\"Grandmother!\" both Gracie and Nancy cheerfully called out.\n\n\"Grandmother!\" Joe called out.\n\n\"Mr. Gaudet, that is not funny,\" Susan tried to look stern and failed.\n\n\"Then why you laughing?\" the man asked, giving the woman a quick hug.\n\nDwight again tried to give Nancy a hug. Nancy again threatened the boy with grievous bodily harm if he came anywhere near her butt.\n\n\"Same goes for you too, Uncle Dennis,\" Nancy threatened.\n\n\"Don't worry, wouldn't dream of it,\" Penny said snidely.\n\n\"What? Got pay for my own drinks?\" Stacie shrilled.\n\nAnthony was the last to arrive and had a happy, but slightly nervous Vanessa Breaux with him.\n\nNancy and Gracie cornered the girl and they spoke in excited whispers and squeals.\n\n\"See, Uncle Antny? Told you you'd meet someone,\" Gracie said happily.\n\n\"Uh huh, and now that you all psychic and stuff, how's the stock market going do today?\" Anthony teased.\n\n\"Uh, terrible. Closed today, remember?\" Gracie crowed.\n\n\"Yes, yes, that's it,\" Lisa informed the waiter assigned to their room. \"You may start serving now.\"\n\n\"Really? Got pay for my own drinks?\" Stacie again complained.\n\n\"Yes, Stacie, we're serious, Stacie, you have to pay for your own drinks, Stacie,\" Aunt Cindy snapped. \"It really won't kill you go an hour without, will it?\"\n\nFor the majority of the people in attendance, the food was good, the conversation lively. There was much laughter as family members remembered past birthday fiascos, past birthday surprises.\n\n\"And this one, this one, knowing I'm allergic to dogs, has his buddy's dog, tells me that's my birthday present,\" Susan told Vanessa, affectionately slapping her oldest son's head.\n\n\"Should have seen her, trying act all happy, trying not get mad at me or poor Buster,\" Anthony laughed.\n\n\"Tony! That's terrible!\" Vanessa squealed, laughing.\n\n\"Tony?\" seven women gasped loudly. \"TONY?\"\n\n\"He'd kill us any of us ever called him Tony!\" Lisa proclaimed.\n\n\"Still will,\" Anthony smiled.\n\n\"Bit of advice,\" Susan said, hugging Anthony. \"Going have children? Have the bad ones first. Toughens you up for the ones come afterward.\"\n\n\"Good to know,\" Nancy said and Gracie giggled, patting Nancy's belly.\n\nAfter the dinner plates were cleared away, the waiter brought in the birthday cake, with twenty one candles glowing brightly. The celebrants sang 'Happy Birthday' with each trying to sing louder, and more off-key than any of the others.\n\n\"So? What'd you wish for?\" Vanessa asked, when Gracie did manage, barely, to blow out all the candles.\n\nLisa slipped her daughter the small box.\n\n\"I wished for Nancy Faye Hebert to be my wife,\" Gracie said, turning and showing Nancy the small box.\n\n\"Gracie?\" Nancy asked, shock etched on her beautiful face.\n\n\"Sweetheart? Will you? Will you marry me, be my wife?\" Gracie asked, losing her happy smile.\n\n\"Gracie? Are you, this is real?\" Nancy asked, not looking at the beautiful ring, just looking in Gracie's eyes.\n\n\"This is real,\" Gracie said, trying to catch her breath.\n\n\"As beautiful as, Gracie, you want to marry me?\" Nancy stammered.\n\n\"I'm not beautiful,\" Gracie wheezed.\n\n\"God damn it, yes, yes you are and I don't know why you'd even want me, but yes, Gracie, yes I will marry you,\" Nancy whispered, cupping Gracie's face.\n\n\"EW, yuck,\" Stacie said as the two women kissed. \"I just vomited in my mouth.\"\n\n\"And you can leave now,\" Aunt Cindy snapped. \"That is your cousin. Gay or not, she is still your cousin.\"\n\n\"Now. NOW we have something to really celebrate,\" Uncle Anthony proclaimed.\n\n\"It fits! How, how'd you know what ring size get me?\" Nancy squealed, trying on the ring.\n\n\"Remember? Had you try on my college ring?\" Gracie giggled, finally able to catch her breath again.\n\n\"Uncle Antny! You walk me up the aisle?\" Gracie asked, eyes sparkling.\n\n\"No, Gracie,\" Uncle Anthony said, smiling. \"But I will happily watch as your mother walks you up the aisle.\"\n\n\"Momma!\" Gracie gasped, horrified that she might have hurt Lisa's feelings.\n\n\"Yes, Sweetheart, I will walk you up the aisle,\" Lisa said, wiping her tears away.\n\n\"There's three...\" Nancy observed, looking at the ring.\n\n\"See, there's you? And me? And the baby,\" Gracie explained, counting out the sapphires.\n\n*.*.*.*.*.*\n\nJudge Kaitlin Monroe-Paice performed the union of Grace Ann Taylor and Nancy Faye Hebert on a beautiful April Saturday afternoon. The Hardington Acres Country Club rented the gazebo overlooking the fourth tee for the ceremony.\n\nAs Mr. Hebert and Mrs. Hebert denounced and disowned their daughter and her disgusting hedonistic sinful lifestyle, they did not attend the ceremony. They did not see their oldest child, looking beautiful in a pale blue gown as she happily clung onto Uncle Anthony's arm. Her baby bump was quite noticeable in the beautiful garment.\n\n\"That what happened?\" Uncle Anthony teased Nancy. \"Huh? Had trick you into marrying her?\"\n\n\"Uncle Antny!\" Nancy giggled.\n\n\"And who gives this woman to be wed?\" Kaitlin asked, smiling as Anthony and Nancy approached Gracie and Lisa.\n\n\"Our family gives this woman to be wed,\" Uncle Anthony said as a tear trickled down his smiling face.\n\n\"Friends, family, honored guests,\" Kaitlin announced at the end of the ceremony. \"Mrs. Grace Ann Taylor and Mrs. Nancy Faye Taylor.\"\n\nThe two beaming women were enveloped by the Whitehead family, hugging and kissing.\n\n\"Ow!\" Dwight giggled, rubbing his arm where Nancy punched him.\n\n\"Next one's your nose, boy,\" Nancy said, fist balled up.\n\n\"Dwight, we had a little talk about respecting women,\" Aunt Barbara said, not laughing now.\n\n\"That's my boy,\" Uncle Dennis whispered, hugging his son around his shoulders.\n\nUncle Jimmy got up slowly and approached the throng. Lisa moved, but not as quickly as Nancy, to stand in front of Gracie.\n\n\"I just wanted to say, I am very proud of you,\" Uncle Jimmy said in a clear, strong voice. \"And I'm very happy for the two of you. May you have a long, happy life together.\"\n\n\"Thank you, Uncle Jimmy,\" Gracie wheezed, hand on her heart.\n\n\"Thank you,\" Nancy said, voice an unwelcoming bark.\n\n\"Thank you. And welcome to the family, Nancy,\" Jimmy smiled sadly and turned to leave the gazebo.\n\n\"Call your sponsor,\" John Burke said, standing with two other waiters.\n\n\"Hey y'all? This first song? We had look this one up,\" the singer of the five piece band announced. \"I'd never even heard of this one before.\"\n\n\"Nancy!\" Gracie giggled as the band began to play 'Yummy Yummy Yummy' by Ohio Express.\n\n*.*.*.*.*.*\n\nBradley Marcus Taylor was born on June eleventh, at seven forty seven in the morning. As Nancy cried, whimpered, and screamed through the birth, Gracie wanted to shut down. Gracie wanted to go inside of herself, wanted to hide. But her wife needed her. Her loving, sweet wife needed her. Gracie clung on to that tiny thread of sanity; someone else needed her.\n\n\"Oh. My. God, Gracie,\" Nancy groaned. \"I would never be able do this without you.\"\n\n\"I love you so much,\" Gracie sobbed as Nancy's sweaty face morphed into another grimace of Agony.\n\n\"Love you too,\" Nancy screamed out and gave a final push.\n\n\"And, it's a boy!\" Dr. Ellen Sweetman declared.\n\n\"It's a boy, Bradley Marcus Taylor, Lisa told Joe Daudet.\n\n\"It's a boy, Bradley Taylor,\" Anthony told Vanessa.\n\n\"Oh boy! Come on; need get Brad a Saints jersey,\" Vanessa said.\n\n\"Your daughter just had a boy,\" Mrs. Hebert snapped at her husband. \"Bradley Marcus Taylor.\"\n\n\"Br... She named him Bradley?\" Mr. Hebert choked out, allowing a tear to slide down his ruddy face.\n\nTHE END of the 'Edge Of Breaking' series.\n\n**Author's Note: I write these stories for my pleasure. I post them here for your enjoyment. I thank you sincerely for reading my stories.\n\nI especially thank those that take the time to leave comments, good and bad. As well as those that take the time to rate my stories.\n\nAnita Lopez and Antoinette 'Toni' Delacroix are characters from the 'Wealth' series in Lesbian Sex and Mature categories.\n\nJohn Burke, the Hardington Acres Country Club waiter, is a character from 'John's Lament' in the Loving Wives category.\n\nJoe Gaudet is a character from 'Garden By The Front Door' in the Loving Wives category.\n\nMorgan Wolfe is a character from 'Popcorn, Extra Butter' in the Mature category.\n\nJudge Kaitlin Monroe-Paice is a character from 'Acquisition' in the Loving Wives category, as well as the 'Men In Blue' series in the Lesbian Sex category. She is also featured in 'The Broussard Sisters' series in Group Sex, as well as the Yearbook 2005 series in the Novels and Novellas category.\n\nDr. Melanie Leblanc is a character in 'Yapping Mongrels' in the Loving Wives category.\n\nNicole Banks, the attorney is a character from 'Vanity' in the Loving Wives category, as well as 'Eyes Like The Ocean' in the Anal Sex category.\n\nCharlene and Marlene Falgout, the hairdressers/makeup artists were featured in the 'Explanation Of Love' series in the Lesbian Sex category.\n\nBarney Siegel, Joanna Siegel, and Barbara Peters were characters in 'Nothing To Offer' in the Loving Wives category.\n\nAnd, the Whitehead family was mentioned, but not introduced in the 'Killer Blonde' series in both Incest/Taboo and Loving Wives categories. Marcus Whitehead was the patriarch, now deceased, Susan his wife. Anthony has assumed the reins as Chief Operating Officer, Lisa has assumed the title of Chief Financial Officer, and Susan wields the most power as the Chief Executive Officer, as well as majority shareholder, and chairperson of the board of shareholders.\n\nHave a most luxurious day."
    ],
    "authorname": "JimBob44",
    "tags": [
        "lesbian romance",
        "lesbian sex",
        "masturbation",
        "strap-on vibrator",
        "christmas",
        "new year's eve",
        "psychosis",
        "pregnancy",
        "small town",
        "louisiana"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/edge-of-breaking-ch-03"
}