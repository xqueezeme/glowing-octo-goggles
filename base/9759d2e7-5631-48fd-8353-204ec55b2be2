{
    "title": "Tied Up in Knotts Ch. 18",
    "pages": [
        "Holy smokes his room was huge. It was only marginally smaller than the bunk room I was sharing with a dozen guys. I felt slightly less guilty as I took the room in. Penn stood at the end of his bed and looked around the room, at the floor, where he was trying to find the best place for me to sleep.\n\n\"I think there's an extra mattress in the garage.\"\n\n\"Oh no,\" I said, feeling stupid for standing there like an idiot instead of doing something productive like not making things more awkward then they were. \"Mine's in the hall.\"\n\nPenn grabbed the mattress that was leaning against the wall in the hall while I scooped up the bedding that had fallen on the floor. He paused by the bed, looked around, then walked to the other side of the room and set the mattress under the window.\n\n\"It's kind of like a cove over here and I know storms make you sleep,\" he reasoned.\n\nWe set my bed up at the absolute furthest point from Penn's bed\u2014both physically and emotionally. That was fine. I was fine with that. I got it. Point taken.\n\n\"Well\u2014\" Penn and I stood there, neither of us knowing what to say. He looked at me for a long moment then looked away. \"Goodnight.\"\n\nI watched as he went to his bed. I wanted to talk about what had happened but I was already overstepping by coming to his room. I turned away because watching him as I undressed down to my underwear didn't seem like the best idea. That didn't stop me from watching his shadowed figure once I was in bed. Despite the tension between us, I felt like a weight had been lifted. Just being in the same room, even if I was in the timeout corner, was curative. I couldn't even convince myself it was a bad idea because somehow, I knew it wasn't.\n\nI was far from sleep, too much on my mind, when I heard Penn say something. \"What?\" I asked.\n\n\"I said, thank you,\" he half shouted. I knew he did it to make me laugh and it totally worked.\n\n\"Of course, it's my pleasure. Anytime you need someone to sleep on the floor of your room, I'm your man,\" I responded. Penn said something but, again, I couldn't hear and had to ask him to repeat himself.\n\n\"Not for sleeping in here,\" he said loudly, and I could tell he was smiling. \"For tonight.\"\n\n\"I know,\" I laughed. \"And I only said what needed to be said\u2014seriously?\" I yelled when I heard Penn say something under his breath. \"Now you're doing it on purpose.\"\n\n\"I've never seen my family so stunned. I don't think anyone ever put them in their place like that. You came close a while back, but, tonight\u2014tonight was\u2014\"\n\n\"Tonight needed to be said,\" I finished. \"I don't know if they thought it was funny or what they hoped to achieve, but it was wrong.\"\n\nPenn said something, I could hear him but I couldn't fully understand what he was saying. I got up and dragged my mattress until it was next to his bed. \"If we're going to talk, I can't be over there in the back forty next to the window that's being beat to an inch of its life.\"\n\nPenn smiled and propped himself up on one arm. I sat, crisscross with my shoulder against his bed, facing him. His bed was high enough that I could easily rest my head against the top of the mattress as we talked. But now that I was right there, it seemed neither of us had anything to say.\n\n\"Were they always like this and I just didn't see it?\" I finally asked.\n\n\"They've always been like this, yes.\"\n\n\"And I didn't see it?\"\n\nPenn stared at me then shrugged. \"It's not that big of a deal. I'm the little brother. I get picked on.\"\n\n\"When I was a child, I spoke like a child, I thought like a child, I reasoned like a child. When I became a man, I put the ways of childhood behind me,\" I quoted the good book. \"You don't have to excuse them. I think the way you always silently support your family by going along with whatever they do is honorable. I think there's value in having that role. But it loses value when you don't honor yourself. And Penn, you're not honoring yourself.\"\n\nPenn watched but didn't respond, so I continued. \"In your family Ryan is the Alpha, Logan's the Beta, and you're the Omega. And honestly, I don't know if I got that right, I don't follow the hierarchy of ware-culture all that closely, but you get my point. I think it's interesting that your nieces and nephews picked the swim-shorts they did, calling you the Alpha of your own pack. It's fitting and I think it's a call to order.\"\n\n\"You know how stupid you sound right now,\" Penn said, trying not to laugh.\n\n\"Probably real stupid,\" I laughed. \"But I'm not wrong.\"\n\nPenn didn't argue, instead he adjusted himself until his head lay on the edge of the mattress. When he finished getting comfortable, he watched me. I rested my head on the mattress and watched him. It wasn't a terrible view. At this distance I could see his face even in the darkened room. I could even see emotion in those dark eyes. He was nervous, like me. But he was also relieved, like me.\n\n\"I'm kind of dreading tomorrow,\" I said.\n\n\"Why?\"\n\n\"It's going to be so awkward facing your family after tonight.\"\n\nPenn sighed. \"Yeah, me too.\"\n\n\"How do you think they'll react?\"\n\n\"Ryan and Lo will wake up early so they can make breakfast before we get up. They'll look like wounded puppies and they'll be really nice. They won't apologize right away, maybe not even while we're here.\"\n\n\"Maybe not ever?\" I asked.\n\n\"They'll apologize in their own way.\"\n\n\"Do you think that's part of the problem?\" I asked. \"Have they ever been held accountable for the things they've said and done. Not just to you, but to anyone?\"\n\n\"No.\"\n\n\"Do you think breakfast and a couple puppy dog eyes will benefit anyone in the long run?\"\n\n\"I get what you're saying, I really do, but you have to understand that this isn't the way we've ever dealt with things. You're not the only ones who are dreading tomorrow. As much as they want to wake up and pretend like tonight never happened, so do I. I don't know what you expect me to do.\"\n\nI sat up and looked at him. \"I don't expect anything from you. If you want to wake up and go eat their breakfast and guilt and immaturity, I'll be at that table eating that burnt offering right beside you. But I think you can do better. I think you deserve better. But I'll do whatever you want, no questions asked.\"\n\nPenn looked at me, disbelieving.\n\n\"Okay,\" I admitted. \"I'd probably have something to say. But I'd still support you.\"\n\n\"What would I even say?\" he asked. \"How would I bring it up.\"\n\n\"You could tell them in advance that you want to talk, get them good and freaked out, or you could corner them, whatever works for you. Then tell them why what they did wasn't kosher. Tell them how it's made you feel. If this isn't an isolated incident, which I don't think it is, give a few other examples. The whole conversation doesn't have to be about what they did wrong. You can use it to let them know how you're feeling because, honestly, I don't think they know.\"\n\n\"That's a lot.\"\n\n\"Then start with a little conversation.\"\n\n\"And do this more than once?\" he scoffed. \"Yeah right.\"\n\n\"Hey,\" I said firmly. \"You know what?\"\n\n\"What...\"\n\n\"It's time to be the Alpha.\"\n\n\"Stop,\" he laughed. \"I can't take you seriously when you say that.\"\n\nI smiled. \"But I'm not wrong.\"\n\n\"Of course,\" he said with a twang of sarcasm. \"Nash Cushman is never wrong.\"\n\n\"Oh, I've been wrong.\"\n\n\"Yeah? Name one time.\"\n\n\"Okay,\" I readied myself. \"I was wrong when I lied to you today.\"\n\n\"What?\" he asked. \"When?\"\n\n\"The kids weren't dead asleep tonight. I didn't come here to catch up on zzz's. Well, I'll definitely catch up on some sleep but that's not why I came.\"\n\n\"Why'd you come then?\"\n\n\"I don't know,\" I said truthfully. \"To see how you were doing.\"\n\n\"Why didn't you say that?\"\n\n\"Ehh,\" I shrugged. \"I know I'm not your favorite person.\"\n\n\"Well,\" he grinned. \"You're not my least favorite either.\"\n\nI squared my shoulders. \"And I'll be riding this high for the rest of vacation.\"\n\nWe both laughed and ended up talking for another hour. It wasn't until we were both yawning that I called it a night. I didn't move my bed back to the other side of the room, so when Penn leaned over the mattress, I had no issues hearing what he said.\n\n\"I'm not ready to face them tomorrow.\"\n\n\"Me too.\"\n\n\"So what?\" he asked. \"Just stay in the bedroom all day?\"\n\n\"No, I have a better idea.\"\n\n****\n\nThe lava tour started at 4am which meant I had to wake up seconds after falling asleep. Penn groaned and turned away from me when I tried to wake him and twice, he tried to hit me.\n\nWhile Penn got dressed, I snuck into the kitchen and got the van keys. It was a twenty-minute drive and Penn yawned the whole way. He was really struggling to stay awake.\n\n\"Staying in the bedroom doesn't seem like such a terrible idea anymore,\" he said, yawning before he could finish. He looked so cute frowning in the passenger seat with his dark sleepy eyes and snuggly hoodie. All he was missing was his signature hat, which was on the floor by his feet, but I much preferred the bedhead. \"If I wanted to spend the day outside in the rain, I would've stayed home,\" he continued.\n\n\"You think your family will let you stay in your room all day?\" I asked. \"But by all means, if you want to have the conversation now, I'll turn around.\" I smiled to myself when he sulked in his seat and stared out the window.\n\nWe stopped and got coffee to help get us through the day then went to see what active lava looked like. I was shocked to learn he'd never been there before in all his annual Hawaii vacations.\n\nNeither of us were prepared. It was amazing. Penn went from grouchy, hibernating bear to a kid on Christmas in no time. The tour went on for miles. It included lava fields that glowed red hot and a lava river that was slightly terrifying because Penn pretended to push me in before pulling me back to safety. I did not find that funny at all. He did.\n\nBecause of the rain, the boat tour had a few cancellations, so we signed up for that. We got to see what looked like a lava waterfall and a lava geyser. Every new encounter seemed better than the last. It was difficult to surrender to the sheer power of what we were witnessing. We'd been staying twenty minutes away the entire week and it never occurred to us that there was active lava right under our feet. It was insanely energizing to know that the fire that was right below the surface at the house was breaking the surface a few miles down the road.\n\nWe left the tour on one hell of a high and went straight for food. We found a small, local place with covered outdoor seating. They didn't seem bothered that we were disheveled and water logged. The nice thing about Hawaii, that differed from Oregon, was that even though it was raining, it was warm.\n\n\"I have to admit,\" Penn said as we ate our food. \"That was an okay reason to wake up early.\"\n\n\"Yeah, it was just alright,\" I teased.\n\n\"There are better reasons to wake up early, but I'd do this again.\"\n\nI looked at Penn in shock. \"Did you just make a sex joke?\"\n\n\"A joke would imply I wasn't being serious,\" he smirked. Penn couldn't even look at me so I moved to the side until he was forced to look me in my eyes. \"What?\" he said, trying not to laugh.\n\n\"How dare you.\"\n\n\"I didn't do anything.\"\n\n\"I didn't do anything,\" I mocked. \"Is Jason to blame for this kind of corruption?\"\n\n\"It's probably your fault. I was innocent until you came along.\"\n\n\"Ohhh,\" I said, leaning back in my chair, taking it all in. \"This is how it's going to be?\"\n\n\"I'm just calling it like I see it.\"\n\nWe kept meeting each other's eyes as we ate in silence. Always with a look of some sort; suggestive, teasing, judging\u2014whatever it took to keep the joke going.\n\nWe still had the majority of the day to waste so after brunch we stopped at one of those stands that had brochures for all the different touristy activities the island had to offer. I tried to talk Penn into a hand tapped tattoo but for some reason he was against it.\n\nThe rest of the day was nonstop. We found this awesome canopy tour that had a zipline and ended in an innertube canal ride. Then we went on a snorkeling expedition. I think it was geared towards kids but we didn't have time for the big one. It was fun nonetheless. We were so tired of being wet by that point that we stopped at a Walmart and got the best duds money could buy. We got matching outfits only because we shopped the clearance section and there wasn't much to choose from. I had to admit, the Hawaiian print joggers and lime green hoodie with the hang loose hang on the front was pretty snazzy considering we paid thirteen dollars each.\n\nWe looked like a pair of Marys' as we shopped the local farmers' market. I found the perfect item for later. It took some effort to purchase it without Penn seeing. He tried his hardest to find out what it was, but I was sneaky. I guess that bad posture finally paid off.\n\nWe hit a pineapple museum so Penn could brush up on his facts and then found a restaurant for dinner. We got a lot of looks from the locals, probably because of our clothes, but we were having too much fun to care\u2014and a bit delirious from lack of sleep.\n\nIt really started pouring as we finished dinner. The van was parked on the far side of the parking lot so we took off running. We were both out of breath by the time we were safe inside. I looked at the roof then at Penn. We both laughed.\n\n\"Holy shit,\" he said, smiling and glancing above. The rain was coming down so hard I wondered if the roof was about the collapse. \"Are we in the middle of a hurricane?\"\n\n\"Not technically but damn it feels like it.\"\n\n\"It's not that different then a good Oregon storm, if you think about it.\"\n\nI nodded. He wasn't wrong. Oregon had some crazy storms, storms so bad if they were in Florida, they'd make the news, while in Oregon, it was just another Wednesday in January.\n\nWe sat in our seats; me in the driver's seat and Penn on the passenger side with his feet on the dash. We had planned to keep going, to find things to do until it was late enough to sneak back without being seen. But now that we had full bellies, motivation had plummeted. The van was running so it wouldn't fog up while we listened to the rain and watched as people ran to and from the restaurant.\n\nPenn rolled his head and looked at me. \"How'd things end between you and Lee?\"\n\n\"In divorce.\"\n\nPenn laughed easily and shook his head at me. I smiled. \"Do you still talk?\" He clarified. \"Were you able to reach a mutual settlement? A friendship? Or have you decided to be mortal enemies? Who will not rest until the other has been truly defeated?\"\n\n\"Mortal enemies? That's aggressive,\" I laughed. \"We were not able to salvage a friendship but I don't wish him ill and I have no intentions of spending the rest of my life plotting his demise. I can't say the same for him. I reached a point where I just wanted to be done. He genuinely thought I walked away with everything when I didn't even take half. I haven't seen or talked to him since I moved to Portland. I think that was the last straw for him, me moving. He was angry, felt like I owed him permission or something.\"\n\nPenn looked out the window and I cringed. If I owed anyone a conversation before moving it would've been Penn and I think we both knew it. But I don't think there was much left to say on the subject.\n\n\"Any luck on the job front?\" he asked after an awkward minute of silence. \"Yevo?\"\n\n\"It's discouraging,\" I said. \"I thought I'd be back on staff by now but it must not be my timing. It seems like a few things started to manifest but, in the end, nothing took.\"\n\n\"You like Costco?\"\n\n\"Honestly, yeah,\" I admitted. \"I don't know that I want to work there forever but they have good benefits and I'm making double what I was before\u2014not that I was making much before.\" We both laughed.\n\n\"So, you're bringing home walnuts instead of peanuts?\"\n\n\"Pretty much,\" I laughed. \"Walnuts,\" I looked at Penn, \"that's funny.\" He seemed proud of himself, for the joke or for how things were going between us, I wasn't sure. I didn't care.\n\nThe rain came and went but we stayed in the van as the sky darkened. The silence was mostly okay if a little tense at times. We had come a long way and made a lot of progress but we weren't back to where we used to be.\n\n\"Tell me about Jason,\" I asked after a long bout of nothing. I was curious and that curiosity had finally hit the roof. I had so little info on him, them. His name rarely came up and when it did, I wasn't sure if they were together or not. I wasn't going to push Penn too far but I definitely wanted to corral him in the direction of a possible future if he wasn't totally opposed.\n\nBut I'd do no such things if he was in a serious relationship.\n\n\"You want to know about Jason?\"\n\n\"I'm curious,\" I admitted. Penn studied me for a really long time. So long in fact I didn't think he wanted to say anything at all. \"I'm sorry, I shouldn't have asked.\"\n\nPenn exhaled. \"I just don't know what you want to know. You know we met in California on a job. His family is from Eugene. He travels a lot for work. He's funny, kind, and laid back.\"\n\n\"And you guys are\u2014\" insert awkward hand gesture since I couldn't come out and ask what I wanted to ask.\n\n\"Having sex? Yes,\" Penn offered. I stilled. It wasn't what I was getting at. I was asking if they were dating. But there you have it, friends.\n\n\"Sex, sex?\" I asked like a moron.\n\n\"What other kind is there?\" he frowned. \"Non sex, sex?\"\n\nI fingered my hair. \"You and I had sex, but not sex.\"\n\n\"Then Jason and I are having sex, sex.\"\n\n\"Oh,\" I said, trying to keep my face neutral. Good for him. Cool. Right on. High-five. Fist bump. Raise the roof or whatever else people did to celebrate this kind of thing. \"Must be serious between you two.\"\n\n\"When we first hooked up it wasn't because it was serious between us. It was because I was in my forties and really needed to pull the plug on certain things in my life.\"\n\n\"Sex.\"\n\n\"Pretty much.\" Penn looked out the window and continued. \"When things were going well between us, I had no problem waiting a little longer because you and I were the best possible outcome I could imagine\u2014at the time. I felt like I was proving a point, that it's worth waiting for the right guy. But then it didn't work out. I wondered who the right guy was and when would he show up? Being a forty-year-old virgin isn't all it's cracked up to be. Jason was a means to and end for me. I figured that when our jobs were done, we'd never see each other again. That didn't end up being the case.\"\n\nI picked at the steering wheel as I listened to him talk. It didn't feel good hearing any of that. It was the same feeling I had when I found out he only ran because of me. He was basically saying I ruined everything. The worst part was, he wasn't saying it to be mean. It's just how it was for him.\n\nNash, the ruiner of dreams.\n\nI wanted to apologize but it seemed like the wrong time. He was sharing about his time with Jason. Plus, I had apologized, genuinely. I was so very sorry. I desperately wanted to move forward with Penn. It was looking more like a friendzone situation but I wasn't complaining. I'd take what I could get. But apologizing every time I felt guilty was not going to propel us anywhere.\n\n\"Can I ask you something personal?\" That I didn't really want to know the answer to but I wanted to work on our friendship.\n\n\"I thought that's what we were doing?\"\n\nI rolled my eyes. \"Yeah, but you don't have to answer this. After last night, I'm not sure if it's appropriate.\"\n\n\"Well, now you have to ask.\"\n\n\"How would you have answered Ryan's question?\" I asked, fisting my hands anxiously in my lap.\n\n\"You want to know who's a better lay? You or Jason?\"\n\n\"Sure,\" I said. \"I'm curious what your answer is. I thought we were\u2014very compatible. I had only ever been with Lee before. Now you've been with Jason, so, yeah, I'm curious.\"",
        "\"I've only had sex with Jason, so, I would've said Jason.\"\n\n\"But they said it was all sexual stuff,\" I pressed. \"That includes me.\"\n\n\"And Cam.\"\n\n\"Well, I'd rather not know if sex with a woman was better than sex with me.\"\n\nPenn laughed and a bit of the tension dissipated. \"Then I'll leave Cam out of it.\"\n\n\"Wait,\" I turned to Penn. \"Are you serious? Was Cam better than me?\"\n\n\"So, between you and Jason,\" he continued, smirking like an asshole. \"It's hard to compare.\"\n\n\"Why? Because Cam was better than both of us?\" I asked. I was half joking but three-quarters concerned that a woman was better at gay sex than me.\n\n\"I probably would've picked Jason. Sex is incredibly easy and fun with him.\"\n\nI full on gaped. I didn't even try to hide it. My chin hit the ground. I was offended, and hurt. I had asked the question, that was on me, but had not expected this answer. Common decency says you sugar coat the truth, at least a little.\n\n\"Wow.\" I put my hands on the steering wheel, still balking. \"Okay.\"\n\n\"Calm down,\" Penn laughed. \"I said it was hard to compare.\"\n\n\"Cleary. One of us was fun and easy, the other was not.\"\n\n\"Oh stop.\" Penn was still laughing, clearly having fun at my expense. He was probably doing it on purpose\u2014revenge\u2014except I don't think he'd ever do that. \"I was nervous with you. You were Nash Cushman. I was so fucking in love with you. So, no, sex was not fun and easy. The premise of my relationship with Jason was fun\u2014a fling\u2014the definition of fun and easy. That wasn't what you and I had.\"\n\n\"At least throw me a bone and tell me I was better than Cam.\"\n\n\"You were better than Cam.\"\n\n\"OH C'MON,\" I laughed. At this point, it was funny\u2014humor at my expense\u2014but it was funny. \"At least make it believable!\"\n\n\"You know you were better than Cam!\" Penn laughed. He was sitting facing me. Watching me make a big deal of this whole situation. \"I barely finished when I was with her and most times, I was drunk.\"\n\n\"Which explains why you barely finished.\"\n\n\"Oooh,\" Penn cup hollered. \"Look who's back in the game. Now you can share yours.\"\n\n\"It's so hard to compare,\" I mocked then held my hands out so I could weigh my options. \"On one hand I have my cheating ex and on the other hand I have sex that was neither easy nor fun.\"\n\n\"You're never going to let this down, are you?\"\n\n\"I have a lot of mileage to go.\"\n\nPenn was still smiling when he let out a big yawn. \"We should probably head back. I want to shower and put on my own clothes.\"\n\n\"Ready to face the music?\"\n\nPenn shrugged. \"Hopefully not tonight, but I will if I have to.\"\n\n\"Okay then, let's go.\"\n\n****\n\nThere were still lights on which means there's no way they missed our headlights when he pulled into the driveway.\n\n\"We could sneak in,\" I offered when Penn made no effort to get out.\n\n\"That will make it more awkward later.\"\n\nHe was right but he still made no attempt to move, neither did I. Ten minutes passed and we were still sitting there.\n\n\"They're watching us.\"\n\n\"How do you know?\" I asked, looking at the windows, trying to spot the peeping toms.\n\n\"Because it's how they work. Trust me.\" He unbuckled, took a breath, and opened his door. I followed.\n\nWhen we opened the front door, I could hear the sound of people scattering and doors closing upstairs. Penn heard it, too, and rolled his eyes. The main room was quiet and I thought maybe everyone else had chickened out and went to their rooms to avoid us, giving us one more day.\n\nThen I saw Logan and Ryan standing in the kitchen. They were both leaning against the counter waiting for their brother. Both brothers looked anxious and remorseful and incredibly terrified. I looked at Penn and he had the same look minus the remorse. I squeezed his arm.\n\n\"I'm going to\u2014\" you know, not be here while you guys hash it out, also, good luck and say what's on your mind. This is your opportunity to let it out. Penn gave a tight smile and nodded. I looked at Ryan and Logan again, nodded my greeting/eulogy and left the room.\n\nEven though I had slept in Penn's room the previous night, all my stuff was still in the dorm room so that's where I went. When I tried to open the door, it jammed and I heard a yelp followed by quiet laughing. Then the door opened. Everyone was crowded around the door and JJ was holding his face.\n\nI looked at them with skepticism. \"What's going on here?\"\n\n\"You tell us,\" Kayde crossed his arms. \"Something happened last night and now Penn's mad at everyone? You guys were gone all day. It's been a shit show. You guys came home and we were banished to the room and it's not even 9pm.\"\n\n\"And you're listening through the door because?\"\n\n\"Because we want to hear what's happening,\" Kayla said with an eye roll.\n\n\"Do you think that's appropriate\u2014\"\n\n\"Shh\" they shushed in unison, using their hands to emphasize the importance. Then they shut the lights off and crowded the door, pushing me into the hall.\n\nI could hear voices but I couldn't make out what they were saying. It sounded like regular conversation. I was torn between being the adult and forcing the kids, who were constantly left in the dark, back into their rooms or letting them eavesdrop, which meant I was eavesdropping. It wasn't something I normally did, but I wanted to know how Penn was doing and I wanted to silently be his cheerleader, so against my better judgement, I stayed in the hall.\n\nThe group pushed forward to get closer, pushing me forward with them. Before I knew it, we were just out of sight but well within hearing range.\n\n\"I don't get how asking me in front of Jason and Nash was funny.\"\n\n\"I guess it wasn't funny,\" Logan said. \"But I don't think it was intended to be hurtful either.\"\n\n\"I don't think you ever mean to be hurtful but you are.\"\n\n\"What?\" Ryan asked, shocked. \"What have we done that's hurtful? We're close, we do everything together, we'd do anything for you.\"\n\n\"You do, but you do it all without thinking of me. Just so you know, most of what you do, while done with the best intentions, makes me feel alienated.\"\n\n\"Like what? When?\"\n\nThere was a beat of silence and then Penn spoke. \"Everything it feels like. You treat me like, since I'm in my forties and not married, it means I don't have my life together.\"\n\n\"We don't think that.\"\n\n\"Maybe, but it's how I feel, \" Penn said. \"I'm successful. I own multiple businesses, I make good money, I own property, and I have assets. Yet, you guys pay for everything. When we go out to lunch or dinner, you throw your card around. Even if everyone's paying separately, someone always pays for me\u2014without asking. You paid for my plane ticket and I paid for a lesser share of this house, in fact, I barely paid anything. I'm forty, I can pay for myself.\"\n\n\"Because there's one of you, it's easier\u2014\"\n\nI looked at the kids and they were in various stages of cringing. Even they saw the error.\n\n\"Oh,\" Logan said. \"That wasn't our intention.\"\n\n\"And then there's Nash,\" Penn continued.\n\n\"Hey,\" Ryan defended. \"Everything we did was for you.\"\n\nPenn sighed loud enough for us to hear and I felt it in my soul. I felt his frustration. \"I wish you would've left it alone when I asked you to. I wish you guys would've left it alone.\"\n\n\"We love you, Penn, but sometimes you need a push. Nothing would've ever happened between you two if it wasn't for us. We know you.\" Logan's voice was soft and encouraging. \"We know how you are.\"\n\n\"Despite what you think, I know myself, too. And you're right, nothing would've happened between us because nothing should have ever happened between us.\"\n\n\"That's not true,\" Ryan defended. \"It's just been bad timing.\"\n\n\"Or, maybe, it was never meant to happen.\"\n\n\"I don't believe that. You were depressed before Nash.\"\n\n\"I wasn't. I might've felt bad for myself because my life didn't look like yours, because that's how you made me feel. But I wasn't depressed until after Nash. And what timing did you expect us to have when you pushed us together\u2014a) while he was married, which made us all look like fucking assholes, or b) after his husband cheated on him? Where I was never going to be more than a rebound\u2014you paddled me out into the ocean and made me ride in on the wake of a tsunami. Do you know what it looks like to follow a tsunami? Total destruction, that's what. That's what I got. So, thank you both, for that. And it's not just you two, it's everyone. It's Cam for going behind my back and talking to Penn. It's Abby for gossiping. It's every single one of you. And you,\" I imagined Penn facing Ryan, giving him all his pent-up attention. \"You decided that you needed to be best friends with him despite my heartbreak and actual, certifiable, depression that followed Nash leaving. And inviting him here\u2014\"\n\nI could feel everyone's eyes on me. But it was nothing compared to the pain in my heart, realizing the pain Penn had experienced. Pain from his family and pain from me. The pain he experienced ran deep and I wondered if I'd been chasing a pipe dream thinking we could ever reconcile.\n\n\"I wanted to give you guys a chance,\" Ryan said, still defending himself and his actions. \"I want you to be happy.\"\n\n\"I'm not happy!\" Penn shouted and I could feel the quake of emotion in his voice, so much so that my eyes started watering. \"I'm so unhappy that I'm moving away. I'm selling my house and I'm leaving. I don't want to be here anymore. I'm tired of feeling like I'm drowning all the time and feeling like you guys are tossing me bricks instead of a life preserver.\"\n\nIt took a second for his brothers to absorb what was happening and then it was a flurry of 'What? Where? Why? When? Why? Why? Why?'. I knew they were shocked and devastated by the news, I could hear in their voice.\n\nThey weren't the only ones affected, his nieces and nephews--even those who weren't related but grew up in their village--they were all broke. A mix of hearing the pain Penn's was going through and the news that he was leaving.\n\n\"California?\" Ryan asked, confused and unable to grasp what was happening. \"Are you moving with Jason?\"\n\n\"What?\" Penn asked. \"No, he doesn't live in California. He lives in Eugene, kind of.\"\n\n\"Then why would you move to California if Jason doesn't live there?\" Ryan asked. \"I mean, I didn't think you guys were serious or anything but\u2014\"\n\n\"We're not. Which is part of the reason I need to leave. I like Jason. He's awesome and fun and when we're together I feel like a million bucks.\"\n\n\"What's the problem?\"\n\n\"There's no future. Even Jason doesn't want to be with me. We're friends, we text, we hangout, we have sex\u2014but that's it. I'm not a no-strings kind of guy. I keep trying but I can't do it.\" He was crying, I hear it. I was crying. I was pretty sure his brothers were, too. \"I go with the flow,\" he continued, softer this time. \"I do whatever you guys want me to do, without question. I did whatever Nash wanted to do, without question. Jason, too. But I'm done. I can't be around you guys and all your good intentions. I can't live in the house that Nash helped build--or the same state for that matter.\"\n\n\"I seemed like you guys were hitting it off again,\" Ryan said, treading lightly on the hot topic.\n\n\"I honestly don't know. I think it's been going well but what does that even mean? I thought it was going well last time. I cannot trust myself to decipher the truth when it comes to Nash. I think he's here so we can be friends again. And I thought I could do that but I can't. I'm already getting my hopes up and I cannot do that again. I won't survive it.\"\n\n\"Fuck. I'm sorry, I'm so sorry,\" Ryan pleaded. I could hear the telltale signs of them hugging it out followed by soft conversation only they could hear.\n\nI turned and scooted everyone back in the room. I wasn't sure how long they'd be out there but we'd heard enough. I made everyone get ready for bed. My mattress was in Penn's room but I wasn't about to cross the kitchen to get it, so I laid on the ground and waited. An hour later the light under the door turned off. I held off for as long as I could but finally, I got up and made my way out. No one was up so I padded to Penn's room.\n\nI wasn't even sure what I was going to do. I wanted to see if he was okay, if there was anything I could do, but after hearing him talk, I wasn't sure I was the person he needed. Except I knew I was.\n\nI raised my hand to knock then paused. I could hear voices in his room. For a second, I thought he was on the phone, probably with Jason, but then I realized it was his brothers. They were still going at it, which I hoped was good. I grabbed some extra blankets and a pillow from the closet and spent another sleepless night on the floor in the bunk room.\n\n****\n\nI was terrified to get up the next morning. I wasn't sure how the night went for the Knott brothers, I wasn't sure how Penn was doing, and I wasn't sure what I should do. He said he wanted space from me, he made that clear. I personally thought that was the wrong call, but if I said as much, then I was no better than his brothers. But if I gave him space, then I'd be making a different mistake.\n\nI did the only thing I knew to do. Run. It also happened to be the perfect excuse. If I went out there in my running attire then I could leave when I needed, be gone as long as I wanted, and when I finished, I could shower.\n\nI was usually one of the first up in the morning but that wasn't the case this time. Penn sat at the big table with a brother on either side. They looked exhausted, tense, but relieved. It was like they were glad it was over but not sure what to do now. Jane and Abby were in the kitchen pouring coffee for everyone. The emotion in the room was palpable and the floor was definitely eggshells. I thought Cam would be here but maybe she and the rest of the house were giving them space.\n\n\"'Morning Nash,\" Jane smiled. \"Coffee?\"\n\n\"Nah, I'm going for a run but I'll grab some when I get back.\"\n\nEveryone stopped what they were doing and stared at me like I'd lost my head. \"In this weather?\" she asked. \"I feel like that's unsafe.\"\n\nI looked outside and watched my perfect plan crumble. I had completely forgotten about the storm outside. \"Looks like I'll be taking that coffee.\"\n\nShe got my coffee but I didn't go to my usual spot, I stayed in the kitchen with Jane and Abby. The brothers, three in their numbers, sat at the large table alone, yet there wasn't a seat available. The way they sat hunched together and talking quietly told me all I needed to know. They weren't done. I turned my back to them, facing the girls, and breathed in the aroma wafting from my mug. \"Is everything ok with them?\"\n\nJane tried not to look at her husband. \"I don't know. We think they slept with Penn last night and they've been sitting there since we've been up. We haven't gotten more than a 'good morning',\" Jane whispered behind her mug.\n\nAbby also hid behind her mug. \"They look beat,\" she added quietly. \"I heard a bit last night. What? I can't help it that the whole house was silent except them. Evidently, it's easy to listen in when there's not two dozen people talking at the same time.\" Jane didn't say anything but it was obvious she also heard bits in pieces. I'd like to think I did a better job hiding my transgressions though I knew it was doubtful.\n\nAny chance of picking up part of the conversation was dashed when the others filtered in. There was usually a big breakfast but this morning was a fend-for-yourself situation. Everyone eyed the brothers but not a single soul dared to go near them. Most ate standing in the kitchen or huddled on the far side of the other table, away from the drama. It was clear most of the house had a general idea of what was going down.\n\n\"They're talking about you,\" Kayde said, hiding behind his hot chocolate mug the way his mom and aunt had done an hour ago. I filed that way. It seemed a common thing the family did when they were trying to be sneaky. We were both sanding by the glass door that overlooked the pool and, by proxy, the storm that was still putting a major damper on the vacation, especially now that everyone wanted to be anywhere but inside. I glanced behind me, I couldn't help it. Logan and Ryan, who were watching me, quickly looked away.\n\nI looked at Kayde who smirked the classic Knott see, I'm right smirk. \"Mind your own,\" I said but I knew he was right. I had felt them watching me all morning and it was making me more than a little nervous.\n\n\"I am minding my own,\" he defended. \"I can't help that every time I mind my own, one or two or all three of them looking at you, whispering.\" Kayde twinkled his fingers like it was voodoo magic.\n\n\"Well,\" I sighed. \"I think we all know I'm a sore subject at this point. Pair that with the fact your dad and uncle have a few things to apologize for and I can see why they're looking at me.\"\n\n\"And what about you?\"\n\n\"What about me?\" I asked.\n\n\"Are you going to apologize?\"\n\nI looked at him, brow raised quizzically. \"What exactly am I apologizing for?\" Of course, I could name a few, but I was curious what he thought.\n\nKayde straightened up, pulling his shoulders back. He wanted to prove he was worthy of being included in grown up conversations and I had nothing but respect for that. \"For your terrible communication skills.\"\n\n\"Yeah?\"\n\nHe nodded. \"Yeah. You left without saying a word and then you came here without saying a word. You owe him some words.\"\n\n\"I think I owe him space.\" Kayde looked torn,. He thought he was right but maybe I was, too. \"You don't think I owe him space?\"\n\n\"I think everyone owes him space,\" he said, staring outside.\n\n\"He made it very clear he wanted space,\" I added. I could tell something was eating at Kayde. \"But?\" I queried.\n\n\"I don't know,\" he chewed his lip. \"Maybe he wants space but doesn't want space, you know?\"\n\n\"No, I honestly don't,\" I laughed.\n\n\"Like\u2014\" he groaned, frustrated that he couldn't find the words. \"He said he was alone and he was tired of being alone but he's with us all the time. And if he's tired of being alone then why would he want more space?\"\n\n\"Then what do you think he wants?\"\n\n\"Respect.\"\n\nI looked at Kayde, confused. I wasn't sure what respect had to do with needing space.\n\nKayde shrugged. \"It's clear he doesn't feel like anyone respects him. How long has he felt that way? Years? That has to be a lonely place to live. We put him there, my dad put him there, Uncle Logan put him there, I put him there, and you put him there.\"\n\n\"I have nothing but respect for Penn.\"\n\n\"Maybe,\" Penn shrugged. \"Talking is a sign of respect.\"\n\n\"And I didn't talk to him before I left him and I didn't talk to him before I came here,\" I reiterated his entire point. I shook my head. Sneaky bastard.\n\nKayde tried to hide his smug smile but failed. \"The student becomes the masta.\"\n\n\"Slow down there, grasshopper,\" I laughed. \"Your theory has good merit but I think it applies to his brothers more than it applies to me. He needs your dad and uncle to be there for him. But we both heard him last night, it's really difficult for Penn to have me be around and, that sucks, but I get it. If it was up to me then things would be different but I'm going to respect Penn's wishes and I'm going to give him space.\"\n\nGrasshopper crossed his arms and frowned. I thought he was going to say something but then he turned and walked away. He straight up left without saying a word. I stood there, mouth agape. I'd just been ditched by a teenager. I shook it off and continued to watch the weather. It was calming in its own way. It kind of balanced things. Stormy outside, stormy inside.\n\nThe rest of the day was uneventful. Penn spent most of the time with his brothers, talking, though as the day went on, they included others. I kept my distance, respectfully. They moved around the house; from the table, to the living room, to the pool table, to the counter sectional. I tried not to catch them watching me but it was hard. At lunch, Penn sat at the table while everyone else made sandwiches. He watched as I walked by, sitting at the nook we usually shared for breakfast. I glanced up to see Logan and Ryan watching me also.",
        "It was frustrating because I couldn't tell what was going on. At one point, I ended up alone with Ryan. When I asked what was going on, he said it was fine. But it wasn't fine.\n\n\"Am I doing something wrong?\" I asked.\n\n\"Do you think you're doing something wrong?\"\n\n\"I don't know!\" I was exasperated. \"You tell me.\"\n\n\"Oh no,\" he shook his head. \"Nope, nope, nope.\"\n\n\"Now you're minding your own?\"\n\nRyan nodded. \"Yep.\"\n\n\"You're not going to give me anything?\"\n\nRyan shook his head.\n\nAfter lunch I had all the kids at one table, showing them a card trick. I had Lukas pick a card, then I had him mess the deck up, then I explained in depth how the moon affects the tides and all that jazz while I shuffled the deck back together. Some of them were listening to me talk while others were watching the cards. I'd done this several times already and it was driving the older kids nuts trying to figure out how I was pulling it off. I split the deck, seconds away from revealing Lucas' card, when I heard my name.\n\nThe whole table froze and I turned to see Penn standing there. His expression, unreadable. \"A minute?\" he nodded toward the hall.\n\nI nodded quickly, like a child, then looked at the group with wide eyes. Grasshopper caught my eye and smiled knowingly then patronizingly shooed me away. \"Go talk.\" I set the cards down without revealing Lukas' pick.\n\nPenn turned and walked away. I followed. To his bedroom. He shut the door behind me and motioned for me to take a seat on his bed. I did. Penn stared at me for a long time without saying a word then pushed off the wall and paced the room. \"Why haven't you said a single word to me today? You threw me to the lions last night and then today, nothing. You don't even care how it went?\"\n\n\"What? Of course I care. I very much care. I went to your room last night to see how you were but they were with you. Then, they were with you all day. I didn't want to impose.\" I also didn't want to overstep.\n\n\"I waited all day for you to talk to me. I needed to decompress. But, even when I sat alone at lunch, you stayed away.\"\n\n\"I didn't think you wanted me around, in fact, I was sure of it. So, I gave you space. I thought that's what you wanted.\"\n\n\"Why would you think that?\"\n\n\"Well,\" I hesitated. \"Because I heard you last night. I know you're upset that I'm here. I made a mistake by accepting Ryan's invitation without talking to you. It was selfish. So I spent the day backtracking. I'm sorry.\"\n\n\"I'm not upset that you're here, I'm upset about the process in which you came. You don't talk to me. You make decisions without me.\"\n\n\"I know, that's why I was trying to give you space.\"\n\n\"But this is what I'm talking about. You didn't talk to me about that. You decided that I wanted space and then made a decision to give it to me. You never talk to me about anything. You wanted me to talk to my brothers and air my grievances. Well I did. And now I want to talk to you and air those grievances.\"\n\nI can honestly say that never, in my life, had anyone come to me with grievances, plural, to air. Part of my legacy was the lack of grievances, plural, against me. But Penn had grievances, plural, and he was about to air them, and I didn't like it at all. But I would sit there and be his wind tunnel.\n\nI nodded. \"Okay.\"\n\nPenn looked a little shocked. He'd been building up to this, and now that I was sitting there, waiting for him to yell at me, he was faltering. He took a second and collected himself. \"\n\nYou don't talk to me.\"\n\n\"I talk to you a lot, more than anyone else,\" I said, giving him a little pushback in case he needed it to keep his sails full.\n\nHe puffed up. \"Not when it matters. Not when you thought I was Penny's dad, not when you moved away, not when you dropped in on my golf match, not when you came to Hawaii.\"\n\n\"You're right. I really screwed up, a lot,\" I admitted. \"I will always talk to you first\u2014about everything.\" Penn nodded, proud that the issue was resolved. \"What's next?\" I asked.\n\nHe glanced at me, eyes a little wild. I could see a little panic there but he pulled it together. \"It's irritating that you always make decisions without me.\"\n\n\"Like when I decided to leave you, decided to move away, decided to drop in on your golf match, or when I decided to come to Hawaii?\" I asked. I tried not to laugh because, you know, po-tay-to/po-tah-to.\n\n\"Exactly,\" he said. It was almost like he was surprised I was catching on.\n\n\"Okay. I will always talk to you first and I will not make decisions without you,\" I reiterated. \"What else.\"\n\nPenn looked confused that he had to keep going but he was also on a roll and wasn't about to stop.\n\n\"Stop running with your shirt off.\"\n\n\"It's hot out.\"\n\n\"I don't care.\"\n\n\"Okay,\" I conceded. \"I will always wear a shirt when I run.\"\n\nPenn nodded, again, it was going well for him but it was also clear he didn't have anything left. Which is why the next words surprised me.\n\n\"Why are you here?\"\n\n\"You.\"\n\n\"For a friendship?\" he asked.\n\nI shook my head.\n\nHe seemed surprised. \"No?\"\n\n\"If that's what I get, then great. But if I'm being honest, that's not why I came.\" Penn gestured for me to keep going. \"I made a mistake when I walked out a year ago. I still believe good things came from that decision but it was innately not a great choice. The more time that passed and the healthier I became after the divorce, the more I realized the error of my ways. The more I missed you.\"\n\nPenn stood still as a rabbit cornered though he hid his fear well. He was playing it cool. \"Tell me exactly what you want. Be clear. I don't want any more assumptions.\"\n\n\"Okay.\" I could feel my heart trying to beat out of my chest. I adjusted myself on the bed and took a breath. I owed him the truth and if anything was ever going to happen between us, it would only come from the truth. And respect. \"I'm still very much\u2014smitten with you,\" I said, because I couldn't tell him I was still in love with him, that would be crazy and a little disrespectful since I had never said it to him in the first place, even if it was true. \"I would like to get to know you again, to date you, properly, to\u2014do all that, stuff.\"\n\n\"You want to date, me?\" Penn still stood, plastered against the wall.\n\n\"Yeah, a lot.\"\n\n\"Date me a lot?\"\n\n\"Yes,\" I smiled. \"I'd like to date the shit out of you.\"\n\nPenn smiled. \"Okay.\"\n\n\"Okay?\" I asked, trying not to laugh.\n\n\"Okay.\"\n\n\"That's it? No more grievances?\"\n\n\"No.\"\n\n\"Do you want to talk about last night?\" I asked. \"Decompress?\"\n\n\"Maybe later.\"\n\n\"Okay.\" I stood up, awkwardly. \"So, that's it?\"\n\n\"Yes.\" Penn was still against the wall.\n\n\"I'm free to leave?\" Penn nodded so I walked to the door, he followed, then I paused. When I turned around Penn took a few steps back. \"Just to be clear, so there's no confusion, I have your explicit consent to date?\" I pointed between us. \"That's where we're at?\"\n\n\"You have my explicit consent to date the shit out of me.\"\n\n\"Okay,\" I laughed. \"I'm going to do it.\"\n\n\"Okay.\"\n\n\"Bye,\" I said, making things even more awkward between us.\n\n\"Bye,\" Penn replied though he followed me out the door and into the living room where we both looked like awkward buffoons.\n\nRyan and Logan were sitting on a sectional together, watching us intently as we walked into the room. They looked at Penn, who must have done something like a thumbs up because they both smiled and high fived each other. Penn left me joined them on the couch where they went back to their little huddle. Suddenly I had an idea of what their earlier conversations might've been like and I smiled. It was kind of adorable knowing they were encouraging Penn to approach me instead of doing it for him. I imagine it's what Penn had wanted all along. A hype crew. Brothers who pushed him to get his own without stepping on his toes or going behind his back. Sitting on the couch together like high schoolers, gossiping about the people they liked.\n\nThe rest of the day was, in a word, the most awkward and giddy of my life. Penn and I were 'dating' but we weren't really talking. He sat by me at dinner, said hi, but that was it. Then we had a big game night afterward. Penn and I shared approximately ten thousand looks but not a single touch and barely a full conversation. I swear to God that Penn was trying to relive a proper high school experience. That and he was obviously wanting to take things slow, which I understood wholeheartedly after everything that had happened. I was more than happy to oblige. I'd date the shit out of him but in the slowest most respectful manner ever. I was going to court him the way he deserved.\n\nThat's what I thought about all evening, every time we glanced at each other, or brushed against each other, I thought about all the ways I could do right by him. Things might've gotten more tense between us but not in a bad way, instead, it was a really cute way that I loved. Things were also better between him and his brotehrs. They seemed to enjoy each other's presence in a whole new way.\n\nPenn looked happy.\n\n****\n\nEveryone but the kids were calling it a night. The day had been exhausting for everyone, even those not directly involved. Which was no one since this village was all-inclusive regarding private matters. I was helping Cam clean up the kitchen. Whatever weird thing had always been between us was now intensified. If I had to guess, she was feeling guilty about intruding in Penn's love life. The more I thought about it, the more I noticed that everyone was walking on eggshells for that same reason.\n\nPenn came in and watched Cam and I as we finished up. I glanced at him a few times then smiled at him for being kind of creepy. He smiled back. I finished wiping the counter and leaned against it, watching Penn while Cam put the leftovers away.\n\n\"Mind if I grab my mattress out of your room?\" I asked.\n\nPenn frowned. \"You're going to sleep in the bunkroom?\"\n\nCam faltered in the fridge then froze. Penn looked in her direction and rolled his eyes because she would choose now to pretend to be discreet and uninterested in his business.\n\n\"I assumed\u2014\"\n\n\"Ahh,\" Penn crossed his arms. \"You assumed.\"\n\nI glanced at Cam who was still standing in the fridge probably wishing she wasn't there though Penn didn't seem to care.\n\n\"If you want me to sleep in your room, all you have to do is ask.\"\n\nPenn scoffed. \"Do what you wish.\"\n\n\"Okay. I'll just grab my stuff from the bunk room then.\"\n\n\"Okay.\"\n\n\"Okay.\"\n\nThe fridge started beeping, alerting us that Cam was still standing there. I took that as my cue and walked out. Cam patiently waited for me to leave so she could squeal at Penn. Which she did, when I was still in earshot.\n\nI shoved my clothes in my bag and grabbed everything from the bathroom. I was nervous to stay in his room now that we were dating, or whatever was happening between us, which was about as clear as mud based on how much distance he left between us all day.\n\nHe was waiting at the door when I arrived. I took a breath and pretended it like it was any other time that we'd stayed together. I set my stuff against the wall and took my toiletries to the bathroom. He joined me and we got ready for bed together, brushing our teeth side by side at the single sink. When we were done, I went to my mattress which had been pushed away, probably when his brothers stayed over.\n\nBarely any words were exchanged but I could feel Penn watching me as I settled on my stupid, tiny mattress.\n\n\"Do you want me to hit the lights?\" I asked before I got too comfortable.\n\n\"If you want.\" There was a bite in his tone and I wasn't sure why. I got up, turned the light off, then laid back in bed. I tossed and turned a few times but couldn't get comfortable. The air was getting heavier by the minute. Penn's annoyance was brewing. I waited and waited for him to say something but he never did. Finally, I broke.\n\n\"Whatever's wrong, spill it.\" Penn mumbled something but I couldn't understand him since I was so far away. \"What?\" I asked. He mumbled again, a little louder but still not enough for me to catch on. I smiled, dramatically tossed my covers off and pulled the mattress next to Penn's bed. I sat on the bed and leaned my head against the mattress like I'd done the other night.\n\nIt was dark but I could still see that Penn's eyes were a matrix of emotion as he watched me. I didn't need to ask because it was all there. If I had taken two seconds to think of things through, I would've been able to piece it together sooner. Penn had been, maybe still was, in love with me. I broke him when I left. He tried to put himself back together. I think he did the best he could. I came back without a word and now he was confused about my intentions and scared I'd leave him again. He'd been bold with his brothers but I think he needed something different from me.\n\nI got on my knees and faced him. I was taller like this\u2014able to look down at him. He was on his back, watching me, waiting. I slipped my hand under the blanket and spayed my fingers across his stomach. My touch was soft. I could feel his heart thundering through his stomach. God, he was so nervous. I gently brushed my fingers across his skin, from his navel to his boxers, along the band, up the sides, and around.\n\n\"I was nervous today,\" I told him, my voice low and soft. \"This entire situation has me confused. I have this unbridled confidence because at one point I knew you couldn't deny me. It made me feel like I had some control in this situation. I thought I could come here and you'd take me back without questions. But I also felt guilty for leaving you the way I did. Then I felt guilty for coming back\u2014thinking I could get what I wanted without repercussions. Then I felt an indescribable gut punch when I realized how much you were hurting. I didn't know what to do. I didn't know what you needed\u2014wanted. Space? For me to suffocate you with affection? To be a friend? I still don't know. I'm still scared. Because I want you, but I don't want to mess this up. I want to do right by you, to do what is best for you. To treat you like you deserve. I want you to feel and to know exactly what you mean to me.\"\n\nPenn opened his legs when I moved my hand down his thigh. I hadn't forgotten how great his legs were, thick and strong. He twitched when I brushed his inner thigh, always a little ticklish. I smiled and continued to his knee, where I circled around before moving back up his body. Feeling him under my fingers was driving me crazy. I wanted all of him and I wanted it right that second. But I wanted to be respectful.\n\nI wasn't lying when I told him I was confused. Conflicted.\n\nI wanted to ask him what he wanted but I knew he needed me to be bold. If I did anything he wasn't ready for, he'd tell me. I had to trust that.\n\nI hooked my fingers under the waistband of his boxers and paused. When Penn lifted his hips, I pulled them off his body. I kept one hand on his stomach because I wasn't ready to stop touching him and used the others to push my own clothes to the ground. I could still feel Penn's heart pumping like crazy but it was nothing compared to mine. I had so much to lose and so much to gain.\n\nI also had Penn completely naked.\n\nHe grabbed the blanket and lifted it. I crawled in and settled between his legs. Feeling his body against mine for the first time in what felt like forever was enough to make me die a happy man. I sat up on my knees with his legs over my thighs. And, wow, what a view. I ran my hands down his thighs and squeezed his hips, grinding myself to him. Then he arched his back and moaned and I was gone. I fell forward, bringing his hips forward as I went and buried my face in his neck.\n\nWe stayed, tangled up in the bed. Touching and smelling and familiarizing ourselves\u2014acclimating after so long apart. But nothing prepared me for the kiss.\n\nIt's stupid when people say a kiss tasted like home. It's so clich\u00e9 it hurts. I wanted to cringe every time I heard it. Yet, that's exactly what kissing Penn tasted like. Home, future, safety, forgiveness.\n\nAnd so fucking sexy I couldn't stop myself from rubbing on him.\n\n\"You're going to make me cum so fast,\" I told him as we became frantic.\n\n\"Do you have lube? Condom?\" He asked.\n\nI shook my head. \"No, because I was being respectful. I didn't want to assume anything.\"\n\nPenn growled and pulled my hips tight against him. \"I wish you'd stop assuming. And stop being so fucking respectful.\" I looked down at where my cock was pressed against his ass. He couldn't possibly mean\u2014 \"As much as I want you to fuck me right now, there's other ways to take what you want.\"\n\nPenn pushed me off him then pulled me up until I was standing. He then slid down my body until he was on his knees. He looked up at me with those dark brown eyes, daring me to defy him. I pushed my hips forward until the tip of my leaking cock breached his lips. He was the most tempting thing I ever had. Even when we were in Thailand, he never got on his knees like this. The blowjobs were as G rated as blowjobs could get.\n\nHe held my hips and encouraged me to fuck him. I didn't go crazy, I wasn't into that, but I held his hair and watched as I slid in and out of his mouth. A couple times I went deep, deep enough I know he felt it. Just watching him take me the way he did was enough to end me embarrassingly fast. When I came, he took everything I had to give.\n\nI barely had time to open my eyes before he pulled me on top of him on the bed, pushing me down until my face was where he wanted it. I swallowed him down and sucked him fervently until his back was arched so high, I thought he might break. A little drool made its way down his crack. I didn't even get a chance to penetrate him before he came, shouting, in my mouth.\n\nI was already hard again. My ability to go multiple rounds was something Lee hated. Penn simply smiled and pulled me up until I was settled between his legs again.\n\nWe made out, slower and less frantic this time. For a while anyway, until we were both worked up. We spilled between us and it was the most content I'd been in over a year. After we cleaned up, we laid back in bed, still tangled together. Neither of us wanted space, we'd had enough of that. Penn felt relaxed, more relaxed then he ever felt, even when we were in Thailand, even when things had been the best between us.\n\n\"We're going to the corner store tomorrow,\" he said as we laid there letting our hands wander.\n\n\"Is that right?\"\n\n\"Yes.\"\n\nI smiled. Okay then. I had no reservations. Whatever Penn wanted, I'd give freely. A few minutes later I could tell he was almost asleep.\n\n\"Did you just fart?\u2014\"\n\n\"What? No.\"\n\n\"No, wait, I wasn't done.\" I laughed. \"Did you just fart? Because you just blew me away.\"\n\nPenn groaned.\n\n\"You know what would look good on you?\" I asked. \"Me. Do you have a map? 'Cause I'm lost in your eyes.\"\n\n\"What are you doing?\" he asked, laughing.\n\n\"Jason's not the only one who can be fun,\" I said. \"If you were a transformer, you'd be OptimusFine.\"\n\n\"Nash...\"\n\n\"If you were words on a page, you'd be fine print.\"\n\n\"Are you really doing this right now?\" he asked, though he was smiling.\n\n\"Did you just come out of the oven? Because you're hot.\"\n\nPenn covered my mouth with his hand. \"I like your shirt fabric, it must be made of boyfriend material,\" he said, then kept going. \"Life without you is like a broken pencil...pointless.\"\n\nI opened my mouth but I had no words, I knew what he was saying. Jason was fun. But I was more. I breathed in, savoring Penn and all he was.\n\n\"I'm learning about important dates in history. Wanna be one of them?\" I asked.\n\n\"Absolutely.\""
    ],
    "authorname": "Mrsgnomie",
    "tags": [
        "romance",
        "drama",
        "gay romance",
        "gay drama"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/tied-up-in-knotts-ch-18"
}