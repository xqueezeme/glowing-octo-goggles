{
    "title": "My Exception is You Ch. 06",
    "pages": [
        "***All characters are 18+ years old***\n\nChapter seven is a special one. It's amazing and probably my current favorite! I hope all of you following Clay and Bruno really enjoy this one. And in a crazy little twist I wanted to experiment with, it's from Clay's perspective...\n\nLove you all, thank you for sticking around. This has been so fun for me and this chapter feels like a big thank you, like a special treat from me to you.\n\n==========================================================================\n\nI was sitting on Bruno's bed, my foot shaking as Jake sat on his bed across the room. He had his arms and legs crossed, leaning back on the wall he studied me. It felt suffocating. \"You ok man?\" he asked and I flinched, hesitating as my eyes took him in. He looked pissed.\n\n\"Uh, besides the fact that you've been glaring at me for the past five minutes?\" I glanced at my wrist as if I had a watch on, hoping Bruno would come back from the bathroom soon. We had showered but he insisted on showering again. I guess he really wanted to put effort in for this date. I appreciated it, but having to sit here in front of Jake was complete torture.\n\n\"So are you two magically better now?\" he demanded and I sighed, rubbing my hands together as I glared at the floor.\n\n\"I don't expect you to understand,\" I muttered, hating this gut churning feeling. It always happened, ever since I was a kid. Confrontation never sat well with me, and upsetting people was even harder.\n\n\"You didn't see Bruno messed up over this,\" he snapped and I pressed my hands to my forehead, glaring at the floor. \"He's a good fucking guy. Anyone would be happy to have him as a boyfriend, and lucky. Most people don't deserve someone like Bruno,\" he continued and I pressed my lips together. I couldn't disagree with that.\n\n\"I know. Even when he gets upset or frustrated it's usually for good reason. He's been really patient with me, and understanding. More than I feel like I deserve,\" I muttered, glancing at Jake. That seemed to shock him. We stared at one another in uncomfortable silence again until he cleared his throat.\n\n\"So what the hell is the problem?\" he demanded and I felt my forehead wrinkle as I glared at him. I tried to compose myself but my anger was getting the best of me.\n\n\"You want to know the fucking problem?\" I snapped, his eyes going wide momentarily before he composed himself. \"I was a kid raised in a family of high expectations and even greater prejudices. My father is a well respected minister of his church, my family active parishioners that do volunteer work in our community. Our family was oriented around serving others over ourselves, being kind without fault, and proving to everyone that we were the best. My parents had a warped sense of purpose and belonging. I was not worthy of their love or respect if I didn't earn it. I had to be the best I could be at all times. No temperament, no fights, no bad grades. I could only be happy and excel! Being bad, being average wasn't an option. And being gay? Fucking forget about it!\" I blew up, seething as I clenched my hands into fists. The sound of the door latch made me gasp, looking over to see a shocked Bruno studying Jake and I.\n\n\"What the fuck Jake? I told you to be nice!\" he barked, crossing his arms as Jake could only shrug.\n\n\"How can I be nice to someone who hurt you?\" he challenged and I scoffed, rolling my eyes as I rubbed my face.\n\n\"Who said he hurt me?!\" Bruno raised his voice and I took a deep breath, pushing up from the bed. His eyes darted to me, looking uneasy as he pursed his lips. \"Are you leaving?\" he asked pitifully and I shoved my hands into my pockets, shaking my head.\n\n\"You can't tell me he didn't hurt you!\" Jake pushed up then, glaring at me before turning to Bruno. \"I've known you since we were in middle school. I know when you're bent out of shape and fucked up over something. You try to put a brave face on, try to downplay your emotions Bruno. You always have! You never think you're in the right,\" he continued and I hesitated, studying the two of them. So they've known each other that long? Maybe Jake could be helpful, give me advice on how to stop fucking up. I glanced at Jake, curious now as that thought crossed my mind.\n\n\"Well whatever! I can handle my own damn problems Jake!\" Bruno insisted. This situation reminded me of the few times I ever got to hear my parents argue. They tried to hide their problems, even from their own kids. Listening to these two bicker reminded me of the few times I'd heard my parents \"discussing\" something behind their bedroom door.\n\n\"You sure? Because last I knew you weren't the kind of person to forgive so easily,\" Jake started and Bruno shook his head.\n\n\"I told you-\"\n\n\"That this is different because of the situation? Is it though? Or are you lying to yourself?\" Jake pressed, glancing at me then. \"Is he really so great you can forgive him this easily?\"\n\n\"Yes,\" I was floored, Jake and I staring at Bruno in mirrored shock. But he stood with his arms crossed, nothing but conviction in his eyes as he glared at Jake. \"You don't know what it's like Jake. And I have only had a taste of it, but even my problems are bearable. I'm willing to accept what Clay is doing. Not because it doesn't hurt me, but because I know where he is coming from. What kind of person would I be if I gave up on someone I cared about just because I couldn't handle some of their problems?\" he demanded. Jake was speechless, but I was too.\n\nI couldn't help but admire him though, even as he and Jake bickered. This cute, sexy, fiery half-Cuban man was unbelievable. My chest felt warm and fuzzy as my eyes wandered along his body. He had on ripped jeans, high top sneakers, a slightly baggy tank top tucked into the front of his pants, and his shaggy hair pushed back and a bit wavy. His arms and shoulders looked toned, his body lean but muscular at the same time. Thinking about what was under those clothes was even better. His flat stomach, the cut of his hips, how firm and plump his ass was, and the few cute little moles on his body. Then of course there was his damn face. He had thick, dark eyebrows; warm chocolate eyes; soft, pouted lips; and a square but soft jaw. He was so cute, almost pretty in a way! And that fucking mole under his eye, it was so unique and adorable...\n\n\"Come on Clay,\" Bruno looked at me, pulling me out of my trance. I hesitated, glancing at Jake warily.\n\n\"I get it, believe me I do. If I were in your shoes I'd be pissed to,\" I muttered and Jake sighed, crossing his arms as he glared at me. \"No, I'm already pissed at myself to be honest,\" I corrected with a slight chuckle, shrugging as I glanced at Bruno. \"But I'm working on it. Is it selfish of me to ask Bruno to deal with me while I work through my own shit? Yes. Do I hate myself a bit for doing it to him? Of course. Can I give him up for his own sake?\" I glanced at him, pursing my lips before I sighed and shook my head. \"No, I can't. He's too amazing,\" I muttered and Jake actually smirked.\n\n\"Well, you hurt him again-\"\n\n\"Jake!\"\n\n\"I won't ask for another chance,\" I nodded, Jake looking a bit shocked. \"It's not fair to Bruno if I keep fucking up and asking for forgiveness. And I've already gotten my second chance,\" I mumbled, feeling a bit uncomfortable as I glanced at him. He rubbed his arm, blushing as he smiled back at me. Damn he was cute. I turned to Jake and cleared my throat. \"I'm only telling you this because you care about Bruno too. I don't normally explain myself to people,\" I grumbled, still feeling queasy and jittery.\n\n\"Noted. And for what it's worth,\" Jake hesitated, glancing at Bruno before he sighed and studied me. \"I hope you two work out. I can tell Bruno really likes you. He's never gotten like this with anyone else,\" he breathed.\n\n\"Alright we're leaving!\" Bruno exclaimed, grabbing my hand. I couldn't help but smile at the look of frustration and embarrassment on his face. His ears were even getting red as he pulled me to the door. I glanced at Jake, gripping Bruno's hand as I stopped us.\n\n\"We should get a drink and chat about Bruno sometime,\" I muttered, Jake grinning wickedly. Bruno sighed heavily, pulling me out of the room. He let my hand go almost immediately, shoving his hands into his pockets as he grumbled to himself. I bit my lip, amused with how cute he was being. \"Lighten up,\" I insisted, easing my arm over his shoulders as I pulled him closer to me.\n\n\"Whatever. I'm just tried of Jake and Devon acting like I need protection sometimes,\" he complained and I sighed, a weird pang in my gut at the mention of Devon's name. I hesitated around the thought and then sighed, squeezing his shoulder before adjusting my arm and taking a deep breath.\n\n\"Why are you and Devon so close?\" I demanded, both of us stopping as we got to the stairs. His eyebrows pulled together, wrinkling his nose and forehead cutely as he studied me.\n\n\"Because he's been a pretty good friend. I know you said you don't really like him, or can only handle him in small doses. But,\" he shrugged and smirked then. \"Jake and Devon are a lot alike. So I guess it just feels natural for me to get along with Devon?\" he offered and I pouted. He looked around quickly, before stretching up slightly to give me a soft kiss. I felt my face get hot, looking around as well.\n\nI pulled him closer, kissing him a bit more suggestively. My tongue brushed his lip and he cleared his throat, pushing away as he covered his lips. He looked around again, his face and ears blushing. \"You're too cute,\" I whispered and he smiled, nudging away from me and heading down the stairs.\n\n\"But don't be jealous of Devon or Jake. Neither of them are my type and they're both just really good friends. Almost more like brothers,\" he insisted as we got outside. We walked next to each other, our arms brushing occasionally. It was frustrating, this inner battle I had of wanting to hold his hand, to make everyone know he was my boyfriend and to hide all of that truth away for the sake of myself and my image. It was like I could hear my mom's voice telling me over and over again that my worth was in how people viewed me. That no matter what I thought was right or fair, it didn't matter because I wasn't in a position to make those judgments.\n\n\"So you really think I'm worth all this trouble?\" I asked suddenly, breaking the silence and he faltered, pausing as his head turned toward me. Before I could stop walking he continued, clearing his throat.\n\n\"Yes, for the most part. You're really nice, you've always seemed really kind,\" he started and I held back my own thoughts. If only he knew how cynical and selfish I really was. \"But it's more than that,\" he stopped then, grabbing my arm. I felt my eyes narrow as the look on his face made me uneasy. His eyes were boring into mine, a look of deep thought on his face as he studied me.\n\n\"Don't take this the wrong way, but I really hate when you look at me like that,\" I grumbled and he surprised me with a warm laugh, smiling brightly. It made my heart ache, my hand grabbing his instinctually. He bit his lip, looking at our hands as my fingers slid between his. \"What more is there?\" I pressed, turning to keep walking. I felt giddy and nervous, my heart racing as I tried to ignore the urge to see who all was around. I promised him I wouldn't hide this, and even though it was against my better judgment I wanted to make good on my promise. If it was for Bruno, to have him, it felt worth it.\n\n\"You're so volatile,\" he mused after a moment of thought and I scoffed. \"Oh please!\" he squeezed my hand, chuckling. \"Ok, I'll play along. Clay you're so perfect. You're always happy, always laughing and nice. You're never confrontational but that's because you just want to get along with everyone,\" he was being sarcastic, shaking his head with another light laugh.\n\n\"What?\" it irked me a bit that he was teasing me like this.\n\n\"Come on Clay, I already told you I know you're faking half of it,\" he stopped us then, turning me to look at him. That same, intense stare had my throat feeling dry and tight as I stared back at him. \"You can be nice, you can be happy, you can laugh and joke around just fine. But what you don't let most people see are the other parts of you,\" he continued, my stomach turning. Was he always this intuitive? Was this the reason I liked him so damn much?\n\n\"Explain,\" I insisted, dragging him along as we continued to walk toward the downtown area. There was a little movie theater I wanted to take him to, to catch a movie before I treated him to a nice lunch at a good restaurant.\n\n\"Well it's like I said before. You pick the parts of you that make you perfect or whatever,\" he shrugged, my eyes darting to study him again as he stared ahead of us. \"But the rest of it is just as enjoyable too. Like you have a very mischievous side to you. Especially, uh, in bed?\" he muttered, a cute smirk on his face. I squeezed his hand, smiling smugly as I looked ahead as well. \"I also like the complicated parts of you. Seeing your real emotional turmoil, experiencing your dilemmas, even seeing you lose your cool and almost flip your lid,\" he continued and I hesitated, shocked. \"Those parts are great too, because it means you're not just some emotionless drone, but that you really are human and imperfect too,\" he smiled at me then and I felt a bit choked up.\n\nI didn't have anything to say, and Bruno just walked along with me as I processed that. I think what I liked the most about Bruno is he never tried to fill the silence. More than that though, it always felt comfortable. Everything felt so natural and easy with him. I guess that's why he could understand me so easily though. He had a way of breaking my walls and pulling back my veil that no one else could.\n\nAs we got closer to the downtown area there were a lot more people on the street and I felt uneasy. His hand felt hotter and tighter all of a sudden. I knew it was just me being hyper aware of our display as people walked past but a panic was creeping in. What if one of these people knew who I was? What if I didn't see someone, but they saw me, and they told my parents? What if someone from the team, what if Zack-\n\n\"Hey,\" Bruno tugged on my hand, stopping us. I glanced at him, my heart racing and my hand feeling clammy. \"Do you want to stop holding hands?\" he asked gently, his eyes looking sincere and concerned.\n\n\"Why?\" I croaked, surprised at how dry my throat felt.\n\n\"Are you kidding me? Your hand is so sweaty and clammy and you've been looking around frantically for the past like five blocks?\" he chuckled, still seeming so calm and sweet. \"I told you this can be at your pace Clay,\" he reminded and I swallowed the lump in my throat, taking a deep breath to calm myself.\n\n\"No I want to hold your hand,\" I admitted and he smiled.\n\n\"Ok, but stop whenever you feel like it,\" he assured me and I nodded, taking his hand again. I focused on just walking toward the little theater, ignoring the paranoia screaming at me. We got to the building soon enough and I let his hand go, pulling the door open. \"Thanks,\" he smiled at me and my stomach flipped. I felt pathetically infatuated with him. I followed him to the ticket counter, admiring him the entire way. Without thinking about it, my arms wrapped around him pulling him back into me as we stopped in front of the register. The girl working the desk looked shocked for a moment, then smiled and cleared her throat.\n\n\"Can we do two tickets for,\" I hesitated, studying the listings. They were all older movies. I wasn't expecting that.\n\n\"The Birds,\" Bruno offered and I felt my forehead wrinkle as I nudged him. He looked at me with a smile. \"My cousin is a movie buff and says it's a classic thriller,\" he shrugged and I sighed, nodding. I stepped to the side, leaning on the counter as I looked at the snack options. Without putting too much thought into it my hand slipped into the back pocket of his jeans. He tensed slightly and I went to pull away when he leaned on the counter with me, his ass almost pushing into my hand.\n\n\"So two tickets for The Birds. The next show time is in half an hour, is that ok?\" she asked and I nodded, blushing a bit as Bruno slid his arm around my waist and pulled himself closer to me. \"Snacks? Popcorn? Drinks?\" she gestured to the menu board and I looked up, hesitating as I thought about popcorn size.\n\n\"I could sometimes eat a large tub on my own,\" Bruno nudged me and I chuckled.\n\n\"Save room for after though. Remember we're eating too,\" I insisted and he smiled cutely. He glanced past us and then stretched up, kissing my cheek. My body was on fire and tingling as I tried to stay calm. This man never ceases to surprise me. I glanced at the clerk who looked unphased as she smiled back at me.\n\n\"One large tub?\" she asked and I nodded with a soft sigh.\n\n\"I like M&M's with really buttery, salty popcorn,\" Bruno insisted and I shrugged.\n\n\"Whatever you want,\" I squeezed his ass gently and he didn't even flinch. I grabbed his ass a bit more firmly, pulling him tighter against my side. \"But remember you have to share,\" I muttered, pressing my lips to his forehead. He laughed, patting my chest gently.\n\n\"We'll get two bags of M&M's, and one big Coke to share,\" he decided and I sighed, closing my eyes as an unexpected happiness washed over me. He wasn't embarrassed or ashamed to be with me. In fact he seemed incredibly eager to show people that we were together. It was intoxicating, thrilling, and terrifying all at once.\n\n\"Alright that'll be $27.95,\" she breathed and I let him go, pulling my wallet out. I hesitated when he wrapped both his arms around me, hugging me as he rested his head on my chest. I cleared my throat, smiling and blushing as I pulled my card out and swiped to pay.\n\n\"Thanks babe,\" he grabbed the popcorn after she got it, grabbing a few pieces and popping them in his mouth. I grabbed the M&M's and our empty cup, sliding my wallet back into my pocket. Before I could turn he reached up and put a few pieces in my mouth. His fingers brushed my lips and tongue, my cheeks burning as I glanced at the girl at the register.\n\n\"You're ridiculous,\" I grumbled and he laughed, snatching the cup from me. I exhaled, feeling funny as I followed him to the soda fountain. He filled the cup with a bit of ice, grabbing one straw as he dispensed the Coke. I glanced at the straw and smiled. \"One straw?\" I asked and he nodded, tapping it on the counter to push it out of the wrapper.\n\n\"You've swallowed my cum, you can't tell me you're nervous about sharing a straw with me,\" he breathed loudly, my face hot as I looked around. Thankfully only that poor girl was around us. She stifled a giggle, glancing at me with pink cheeks before turning and disappearing into the back room.\n\n\"Jesus Bruno what's gotten into you?\" I demanded and he smiled, his tongue brushing against his teeth as he snickered. The look in his eyes was both devious and playful as he pushed the straw into the lid.\n\n\"You mean besides your dick?\" he muttered shamelessly and I put my hand on his mouth, my ears scorching as I glanced around frantically. He laughed, kissing my palm before rolling his eyes. \"Relax, it's just us. And that girl. But we're clearly a couple so is it that weird?\" he shrugged.\n\n\"Hugging and kissing is one thing. But I don't want you publicly announcing everything!\" I insisted under my breath, hurrying him toward the theater rooms. He laughed happily, walking along with a pep in his step.\n\n\"Fine. But you're really cute when you get all flustered,\" he teased and I couldn't help but smile. We handed our tickets over, an older guy gesturing us down a short hallway. We pushed into the theater room, not surprised to see it was empty. \"It's kind of a shame this theater isn't more popular. It's really cool. I like the idea of playing old movies,\" Bruno started as we walked toward our seats.",
        "\"I'm sure people appreciate it. It wouldn't be around if it wasn't making at least some money right?\" I offered and he shrugged. We got comfy, putting our feet up on the seats in front of us. We munched on the popcorn just chatting about random things as we waited for the movie to start. A few more people joined shortly before the show time, even a group of what appeared to be high schoolers.\n\nThe lights started to dim and Bruno adjusted, leaning closer to me. I hesitated before reaching over and wrapping my arm around him. I shifted, leaning into him as well as we got comfortable. The movie started, everyone quieting down. After some time I was surprised I was enjoying it as much as I was.\n\n\"What a shitty green screen effect,\" I whispered with a chuckle, Bruno dropping his hand onto my thigh. He squeezed it, smiling at me as he shrugged.\n\n\"Imagine how convincing it looked for the time though,\" he offered and I nodded slowly, glancing down at his hand as it slid up my thigh a bit. There was a loud explosion and I glanced at the screen, smirking at the green screen of birds attacking all the residents at the gas station. \"Scary right?\" Bruno teased and I bit my lip, sliding my hand up under his shirt. His skin was so soft and hot, his pants a bit loose. We stared at each other, my heart racing as I slid my hand into his briefs. I felt nervous and excited as my fingers and palm rested against his bare hip, my pinkie brushing against his thigh.\n\n\"Are you really scared?\" I whispered playfully, and he nodded once, his eyes glancing at my lips. Fuck he was too much for me. I leaned toward him, capturing his lips with mine. We shifted a bit, my hand sliding more toward his stomach. I could feel the stubble of his pubes, our lips falling apart as he sighed and trembled.\n\n\"I feel a little less scared,\" he muttered and I smirked, kissing him again. It felt amazing, his lips so soft and hot against mine. Our tongues brushed and I heard him moan. I pulled away, glancing around to see if anyone else heard. No one appeared to be looking at us. He chuckled, rubbing my leg as I looked at him again. \"You're a great boyfriend,\" he whispered and I sighed, kissing his temple.\n\n\"I can do better,\" I insisted and he shrugged, adjusting to lean into me more. It warmed my heart having him like this, my mind racing as I tried to watch the rest of the movie. My hand was mindlessly caressing his side, stomach, and into his pants as he'd rub my leg. It felt so foreign to me, but I had to admit it was also incredible. We got through the movie stealing a few more kisses here and there but it didn't feel sexy or lustful. It felt more innocent and flirtatious. Especially with him only teasing my leg and cuddling into me.\n\nWhen the movie ended he sat up, stretching and smiling at me. I threw our trash into the empty popcorn bucket, getting up as well. He adjusted his jeans and shirt, leading the way out. I tossed the trash, about to take his hand when he turned toward me. \"I have to hit the bathroom real quick,\" he turned away and I shoved my hands into my pockets, walking slowly toward the bathroom to lean on the wall.\n\n\"I told you they were kissing! They're gay, they have to be,\" I heard a voice. It sounded like she was trying to be quiet but it wasn't effective. I glanced over seeing the group of teens hanging out by the one arcade machine. It looked like they were waiting for a few people as well.\n\n\"Shh, he can hear you!\" another girl scolded, slapping the arm of the first one. I sighed, rolling my eyes as I smirked. Normally I'd be upset but the fact that I didn't know them mixed with how great the date was going made me feel like I couldn't be bothered. Someone walked past and I glanced, seeing a guy joining them. They whispered, gesturing to me and the kid glanced back and shrugged. I heard them laughing, getting more and more agitated as they talked quietly. I leaned on the wall, crossing my arms and closing my eyes as I waited.\n\n\"Hey sexy,\" Bruno breathed and my eyes flashed open, glancing at him. He slid his arms around my waist and I hesitated, glancing at the group of teens. They nudged each other, all of them glancing at us as I sighed.\n\n\"Not here,\" I went to grab his arms when they tightened. I glanced down, noticing a look of hurt and confusion on his face.\n\n\"Are you ashamed?\" he whispered quietly and I hesitated. Yes. I was. I couldn't handle the stares, the quiet murmurs, the judgmental glances. Even if those stupid teenagers weren't making fun of us I couldn't stop thinking that they were.\n\n\"Just don't like people staring,\" I offered and he looked frustrated until he composed himself and sighed, pulling away slowly. Fuck. I messed up again. \"Wait,\" I grabbed him and he looked shocked, his eyes wide as I pulled him toward me. \"Look it's hard for me to deal with people staring. Usually when that happens it means people are judging you, or making assumptions about you. I don't like caring about what people think, but I can't help it,\" I insisted quietly and he nodded once, hesitating before he smiled.\n\n\"Want to know what I'm thinking?\" he offered and I nodded, choosing to ignore anyone who was around now. It was easier to do that when I had Bruno to focus on. \"I'm thinking about how sexy and endearing it would be if you made out with me right now,\" he muttered and my stomach lurched.\n\n\"Bruno I-\"\n\n\"You told me you wanted me to help you out right? If this is going to work long term you have to get over the judgmental stares. They'll always be there, even if it's not because you're gay,\" he insisted quietly and I sighed heavily, hating this feeling in my gut as I glanced around warily. Some of the group was by the machine, others walking off toward the snack counter again.\n\n\"Why do you want me to make out with you?\" I whispered and he smirked.\n\n\"Because it's you making a statement. That you're gay, and you have a boyfriend, and that even if they'll judge you it won't stop you. Right?\" he offered and I shrugged, not sure his method was really effective. \"That and because after all of your teasing I'm really fucking horny and want your tongue on my mouth,\" he put his hands on my stomach, pushing me back into the wall. That caught my attention, my eyes meeting his as my dick twitched.\n\n\"Where the hell did you learn to say things like that?\" I grumbled, my ears hot as he smiled.\n\n\"So what'll it be?\" he pressed and I sighed, taking a deep breath. I reached my arms around him, gripping his ass. It felt so firm as I gripped it roughly. He gasped, falling into me as I pulled him close to my body.\n\n\"You keep saying shit like that and I'm going to want to skip the rest of our date,\" I muttered against his lips. He gripped my shirt, leaning into me. The feeling of his lips brushing against mine was mesmerizing. I sighed happily, kissing him then. He groaned and pressed his body against mine, my cock stirring as his tongue teased my lips. I hesitated, my eyes shut tight as I gave in and kissed him deeply. Our tongues brushed and swirled occasionally, his hips grinding against me slightly.\n\n\"So what was that about skipping the rest of our date?\" he gasped when I let him go, my hands sliding up into the back of his shirt. His back was hot, my fingers running along his spine as he smiled at me.\n\n\"No, I promised you a full date,\" I smiled as he pouted, my hands running down his back and sliding into his briefs. He gasped, tensing up and I chuckled. \"Relax, I just like teasing you,\" I muttered, ignoring the pain of his fingers as they clawed at my chest.\n\n\"You're a real fucking cock tease,\" he pushed away and I laughed, grabbing his hand. He sighed, letting his fingers slide between mine. We walked past the group, and they all hushed each other. It wasn't until we were a few steps away that I heard one of them giggle.\n\n\"It's so cute how confident they are together,\" that same girl's voice called out and I smiled, Bruno squeezing my hand. Why that made me feel a hundred times better I'll never fucking know. But as we walked to the restaurant I was on a new high.\n\nWe were seated at a table closer to the bar, the restaurant not too packed yet. Granted it was a weird time on a Sunday so I was a bit appreciative of the lighter crowd. Our server brought us waters and some dinner rolls while we looked at the menu. He and I discussed food options, minding our own business, when a loud party came in. I looked up, curious to see what the commotion was about. \"Are you fucking kidding me?\" I grumbled, glancing at Bruno. He looked over, sighing as he pressed his hands to his forehead.\n\n\"How is this fucking possible?\" he demanded quietly and I shrugged, my anger taking over as I studied the group. There were a few guys from the soccer team with a bunch of other people walking over to a long table that was pushed together.\n\n\"Birthday boy sits here!\" someone called out and Bruno and I watched on as one of the random people sat down at a chair in the middle of the table. They all sat down, being rowdy but thankfully none of them looked over to us.\n\n\"There goes the rest of our date,\" Bruno sighed and I glanced at him, my chest hurting and stomach tight as he fiddled with his drink. He looked really disappointed. Indecision consumed me as I glanced between the table and him. Fuck. Fuck, fuck, fuck! I wasn't ready to be in this predicament again. I studied the few players trying to remember how they felt about Bruno. Jason, Trevor, Chris, and TJ were the ones I could see. They were all juniors this year and hung out all the time from what I remembered. They always partied together and hung out with the baseball team and girls soccer team... Nothing was coming to my mind about any problems though.\n\nI turned to look at Bruno, my heart racing as a weird emotional paralysis consumed me. I could feel myself panicking and shutting down, hating how petrified I was of being outed. I talked such a big fucking game but I was still ashamed of being gay when it could really affect me. Our server came over and Bruno sighed, glancing at her.\n\n\"He has a headache, could we maybe get a table on the other side of the restaurant?\" he asked quietly and my heart dropped. Even upset with me he was still willing to make adjustments for me. What did he even see in me? Why was he like this? There was no way I deserved to be treated this nicely.\n\n\"Oh, uh, let me check and see,\" she went to leave and I cleared my throat.\n\n\"No, it's ok, it's just a mild headache. Thanks though,\" I looked at Bruno, his eyes narrowing as he studied me. \"We know what we want,\" I added, the girl looking confused but shrugged as she pulled her little notepad out. She took our order, disappearing to ring it in.\n\n\"The hell are you thinking? I want a normal date,\" he reminded me and I sighed, my hands shaking as I took a deep breath. My body was trembling, my heart racing. I felt so hot and cold all at once, a sweat breaking out on my back as I reached out and grabbed his hands.\n\n\"I'm keeping my promise,\" I whispered and his eyes went wide, darting over to the big table just across the small barrier of the bar area. \"Please pretend they're not here. It'll make it easier on me,\" I begged, panic and fear consuming me. His hands squeezed mine, his face full of worry as he realized how freaked out I was.\n\n\"Clay,\" he pulled his hands away, grabbing his drink instead. \"It's ok. Don't push yourself. Not moving tables is enough for me,\" he mused, smiling gently then and I sighed, slumping over as I held my head.\n\n\"I hate feeling like this,\" I muttered and he sighed, knocking on the table. I glanced up at him, feeling nauseous and on edge.\n\n\"If anyone asks I offered to take you out as a thank you for helping me with Zack, and continuing to be a great captain even in spite of everything,\" he mumbled and my stomach knotted uncomfortably, my chest tightening. He was so willing to lie for my sake, to make things so easy for me!\n\n\"I fucked up, I keep fucking up, why are you doing this?\" I demanded, feeling frustrated with him now. He sighed, sipping his water with a slight shrug.\n\n\"I think I'm in too deep at this point,\" he offered and I frowned. \"Besides I believe you when you say you want to figure out how to live the way you want to. I also can tell how hard all of this is for you. I feel nothing but sympathy for your situation,\" he shrugged and I sighed, feeling so dumbfounded and lucky.\n\n\"It was a hunch, when we first met, I knew you were a great person. You were one of the few people I felt comfortable around. Like no matter what you seemed to be a reliable and kind person. How do you keep surprising me with how amazing you really are?\" I demanded and he blushed, looking away as he pushed his hair back. He tried to play it off but I could see how happy he was.\n\n\"You say that like you're not amazing too. Just because you're troubled, struggling with this weird demon, doesn't mean you can't be just as amazing,\" he pressed and I sighed, shaking my head.\n\n\"That's way more credit than I deserve Bruno, and we both know it,\" I grumbled. He hesitated and then I felt his leg brush mine under the table.\n\n\"I've gotten the chance to get to know you very intimately Clay,\" he whispered and I felt my face get hot as I smirked, leaning onto my hand to hide myself from that party table. I didn't want them seeing me getting flustered like this. But as I looked up and saw Bruno smiling back at me with that coy ass smile I know he was pleased with my reaction.\n\n\"Have you?\" I challenged, both of us adjusting as our server brought onion rings and our drinks to the table. He grabbed one, taking a big bite and grinned.\n\n\"Yes, and I'm going to get to know all of you very soon,\" he mused and I coughed on my drink, my heart sinking as I remembered my promise to him. He grabbed another onion ring, smiling as he slid two fingers into it, wiggling them eagerly as he wagged his eyebrows at me. \"All of you,\" he breathed, before biting the onion ring in half.\n\n\"Have I told you how dangerous you are?\" I teased, my neck and face hot as my cock twitched.\n\n\"Maybe,\" he laughed, seeming even more pleased with himself. The rest of dinner felt so normal, the two of us chatting and laughing as we ate. I even forgot about the few guys at that table by the time I paid. We were getting up to leave when one of them called out to me.\n\n\"Clay is that you?!\" I hesitated, glancing over to see TJ flagging me down. I glanced at Bruno who stood with his arms crossed. I walked over, acting casual as my heart raced. \"Zack told me about the Title IX stuff. Is Bruno really going to report him?\" he demanded quietly and I hesitated, feeling irritated.\n\n\"Huh? Why would you think that?\" I pressed and he glanced at the table, some of the other guys looking at me as well.\n\n\"Well because we all know he is gay. It's like walking on egg shells since Zack told us,\" he insisted and I scoffed, laughing it off to play down my frustration. I took a deep breath and shoved my hands into my pockets. \"You're hanging out with him to make sure he's not going to report anyone, right?\" he pressed and I felt my body lock up as my mind raced. I could lie and agree with him. I could give a simple answer. But Bruno was bound to hear about it. I couldn't do that to him. I promised to do better. I glanced back at him, seeing him checking his phone as he waited by the door. He put it to his ear, stepping out and I sighed heavily.\n\n\"I'm not doing any of that. Also Bruno didn't even bring up Title IX to me, I brought it up myself to coach and Zack. The past few weeks have been bothering me with the way the team started acting. Most of you don't know but Bruno and I have been friends for some time. We've been training together, why do you think he's been getting better?\" I chuckled, TJ looking a bit floored.\n\n\"So it doesn't freak you out?!\" he pressed and I sighed.\n\n\"Well no because he doesn't make me uncomfortable. He acts like just another guy. I'm not sure why everyone is so freaked out by it,\" I admitted, glancing around the table. \"In fact his roommate even knows and they still hang out. Devon isn't bothered by it. Neither is Tyler for that matter. And a lot of the other guys apologized to him for not standing up against some of Zack's more blatant homophobia,\" I crossed my arms, shuffling uncomfortably as I swallowed some of my nerves.\n\n\"But like, he's gay!\" TJ pressed and I laughed then, shaking my head as I rubbed my forehead.\n\n\"Fuck you sound as stupid as Zack,\" I breathed, his eyes going wide before a confused and angry look crossed his face.\n\n\"The hell Clay? What's gotten into you man? Ever since the Bruno shit started you haven't been acting like yourself,\" TJ demanded and I took a deep breath, feeling my body tense with anger as I glanced around the table.\n\n\"Actually, I've been acting more like myself recently than I ever have. So let's get a few things straight. Bruno is bi, not gay. He also doesn't have a thing for any of you guys, so you have nothing to worry about. Maybe educate yourself before spreading rumors and making assumptions about someone. Last I checked the highest population of rapists and sexual harassers were straight men so maybe Bruno should be worried about you and Zack. Not the other way around,\" I shrugged, my agitation bubbling to the surface. I couldn't compose myself anymore. Not after hearing the stupid, inaccurate opinions of my bigoted teammates. And not after seeing how hurt Bruno was knowing they felt that way. And more so knowing Bruno was that hurt because he was worried I was hurt.\n\n\"The fuck does that mean?\" TJ pushed up, getting in my face. A few other guys got up, pulling us apart. My heart was racing, my hands trembling as the adrenaline from this confrontation was coursing through me. This wasn't what I was used to feeling. Usually I felt uncomfortable, a nervous wreck when someone challenged me. But all I could think about was Bruno, protecting him, and listening to these assholes badmouth him over and over again was really pissing me off.\n\n\"Bruno is an upstanding guy. His sexuality doesn't matter because he would never do anything to make anyone uncomfortable. You guys had no idea he wasn't straight until he admitted it. Your homophobia is disgusting and baseless. And I think Bruno was right when he said it to Zack. You homophobic fucks seem way too upset by his sexuality. Does it bother you because you can't help but want a piece of his ass knowing he might like it?\" I snapped, TJ's eyes going wide with rage. He lunged at me, a few of the guys holding him back.\n\n\"TJ chill out!\" Chris looked at me, confused and worried over the confrontation. \"Clay maybe you should leave?\" he offered and I shrugged.\n\n\"TJ brought me over here to talk and pissed me off. I'll leave, but I've been quiet for too long. I can't listen to these assholes talk shit when they don't know a damn thing. And I won't let it continue. Because Bruno doesn't deserve that. I don't-\" I hesitated, catching myself before I lumped myself in with him. He said I didn't have to come out and I really didn't want to. But I wanted to be on his side. I wanted people to know I cared about him and supported him.\n\n\"Alright, but this is a birthday party. We can continue this conversation after practice or something!\" Chris insisted and I sighed, shaking my head as I walked away.\n\n\"Does he suck your dick real good too? Or just Devon's? How many of you perverted fucks are enjoying his whore mouth? Is Tyler in on it? Is that why you all are obsessed with protecting him?\" TJ called out and I froze, glancing up to see Bruno staring at me in shock. He looked angry and hurt, his hands shoved into his pockets. How much had he heard?\n\n\"The fuck did you just say?\" I turned, glaring at TJ.\n\n\"Clay don't!\" Trevor stood up, pushing his hands into my chest as I stepped toward TJ. \"Coach will suspend both of you if you get into a fight!\" he insisted when I tried to push him off me.",
        "\"It's only a fight if he can land a swing back. Otherwise it's just me beating the fucking shit out of him!\" I snapped, pushing Trevor off me. I felt more arms around me, TJ looking a bit baffled as people held me back.\n\n\"It's just a stupid comment Clay,\" Bruno called out and I froze, glancing back at him. \"You shouldn't let it get to you,\" he insisted and I hesitated, glaring at TJ.\n\n\"But he's wrong!\" I nudged everyone off me, feeling torn. Bruno leaned on the wall, sighing as he glanced around. I noticed a lot of people in the restaurant staring the staff hurrying around. I saw a manager coming over and took a deep breath. \"Whatever,\" I pushed my way through the group, Bruno sliding off the wall and walking with me. We left before the manager could kick us out. We were maybe a block away when I felt Bruno's hand on my arm.\n\n\"You ok?\" he asked softly and I stopped, turning to him. I grabbed his face, kissing him desperately. He was frozen in shock but then his arms wrapped around me, pulling me closer as we kissed passionately. Adrenaline was still coursing through me, a high consuming me.\n\n\"It feels so fucking good to let go,\" I grumbled, about to kiss him again when he pushed on my chest.\n\n\"But are you ok?\" he demanded. I nodded, grabbing the back of his head and kissing him again. He didn't pull away this time, not until I did. \"Let's go,\" he grabbed my hand, hurrying back toward campus. I couldn't argue, knowing exactly what was on his mind. Because it was on my mind too.\n\n***\n\nHe pushed me onto my bed, crawling on top of me. I yanked his shirt off him, both of us panting as his lips crushed mine. I slid my hands down his back, pushing them into his jeans. His back curved deliciously, his hips grinding his crotch against mine as I groped his ass. \"Dammit Clay I want you,\" he panted and I groaned, sucking on his mouth again.\n\nWe both groaned as our tongues tangled. He unbuttoned my shirt frantically, ripping it open. He panted, looking down as he ran his hands up my stomach and over my chest. The look in his eyes had my blood burning, my cock throbbing as he gripped and massaged my pecs. He sucked on and nibbled at my lip, before we both hummed with another deep kiss. His tongue was scorching as it filled my mouth, his body giving away all of his excitement and need. It was overwhelming; other gay guys I've fucked never even got this into it.\n\n\"Can I ask you to do something for me?\" he panted and I nodded, running my hands along his back. He bit his lip, playing with the bit of hair on my chest before he sighed. \"Can you strip for me?\" he muttered, his cheeks red as he closed his eyes. He looked embarrassed.\n\n\"You want me to take my clothes off for you?\" I teased, gripping the back of his neck as my other hand slid down into his pants again. I groped his ass and he actually trembled, nodding eagerly. I kissed him, loving how plump his lips were as his body pressed into mine. \"Would you like a lap dance too?\" I joked and he sighed, laughing softly.\n\n\"Don't fucking tease me,\" he grumbled. I knocked him down onto the bed, pushing on top of him. I humped at his thigh, my cock aching as it throbbed and twitched with need. He clawed at my arms, his neck straining as he clenched his teeth. I could feel his cock through his jeans as he humped at my thigh, his own desires consuming him too.\n\nI kissed him tenderly before pushing off the bed. He sat up to lean back against the wall. I watched as he undid his pants, adjusting to let his bulge peek out from between his zipper. God he was sexy. I pulled my shirt out of my pants entirely, jutting my hips forward slightly as I slowly pulled my sleeves off my shoulders to let the shirt fall to the floor.\n\n\"Fuck you look so hot,\" he muttered and my back tingled at the sound of his voice. It sounded so desperate. I swayed my hips provocatively as I ran my hands from my chest down my stomach. I gripped the front of my shorts and briefs, pushing them down to show off my pubes. He groaned and I glanced at him, seeing him massaging his cock through his briefs. A thrill ran up my spine as I unbuttoned my shorts, easing the zipper down as I pushed them open. I slid my hand in the front, gripping my pulsing cock and heavy balls, groaning as I massaged and adjusted myself.\n\nHe gave me an appreciative moan and I licked my lip, feeling so sexy. I pushed my shorts off my hips and they fell to the floor, leaving me in my briefs. I groped my bulge, my other hand massaging my pec as I humped the air slowly.\n\n\"Shit,\" he hissed and I peeked again, licking my lip as I watched him jerk off. His dick looked swollen it was so hard, his hand yanking it violently as he panted. I bit my tongue, enjoying this feeling. He wanted me. This wasn't just for him to get a fix. This amazing guy wanted all of me. So bad he wanted everyone to know. And he was sitting on my bed, watching me play with myself, jerking off with desperation. Fuck I was so damn lucky.\n\nI walked toward the bed, his eyes running over my body as he bit his lip. His nose and forehead wrinkled occasionally, his hand slowing down as I crawled toward him. I straddled his legs, grabbing his hands and putting them on my chest. He massaged and groped me, letting me move his hands down my stomach. I rolled my hips slowly, letting my cock rub against his stomach. I could feel his dick brushing against my balls occasionally too, my mind foggy as lust consumed me.\n\n\"Goddamn,\" he shuddered when I let his hands go, pushing my briefs down. I didn't expose myself, but my hips and my pubes were showing, right to the base of my shaft. My cock was tucked to the right a bit, barely contained as it throbbed with need. He ran his hands over my crotch and along my thighs, then back to my ass. He pulled my briefs down, groping my ass as I moaned. I reached down between us, adjusting to press his cock against his stomach. \"What are you-hnnnng!\" he threw his head back when I adjusted, grinding my crotch against his cock.\n\nI held his head, closing my mouth around his. He groaned, his lips parting immediately. Our tongues tangled as I humped and rubbed up against his raging boner. We were both moaning and panting, my balls and cock on fire as I teased both of us. Then I felt his hand slide between my cheeks, my chest tightening. \"Have you ever fucked anyone in the ass?\" I gasped as he teased my asshole. He hesitated, shaking his head slowly. I took a deep breath and sighed, kissing him again.\n\n\"I'll take it slow and figure it out. Please just let me,\" he begged, sucking on my lips. His fingers were teasing and prodding at me, my dick painfully swollen.\n\n\"Ok,\" I agreed, sliding off him. He got up and walked to the bedside table, pulling out the lube and a few condoms. I pushed my briefs down, my heart racing as I laid on my back. He got completely naked, his dick almost up against his stomach. I couldn't stop staring as he crawled onto the bed. His legs were toned, his muscles bulging slightly with his movements. He had that skinny, buff look that was so damn hot it was maddening. He tore a condom open, sliding it onto his dick and I swallowed hard, reaching down to cover my ass.\n\n\"What?\" he looked worried and I hesitated, clearing my throat.\n\n\"Don't just put it in. It's, uh, it's been a while since anything was in me,\" I grumbled, feeling ashamed and embarrassed all at once. He smiled, grabbing my hand and kissing it before he leaned over me. He pushed my hand into the bed, kissing me tenderly.\n\n\"I told you I was going to take my time. I want you to see how I like to make my partner feel good,\" he whispered and I shuddered, nervous and excited all at once. He kissed me again before sighing and kissing down my body. His tongue ran along my stomach and I reached down, sliding my hand into his hair as the heat of his mouth burned my skin.\n\nIt was amazing, my body high and my head swimming as he started kissing and licking at my dick. I felt his tongue run along my shaft and around my tip, occasionally flicking that one spot that sent tingles through my back. He seemed to enjoy my reactions because he started sucking and teasing at that one area under my tip, his hand gently stroking my shaft. My breath was getting shallow, my body burning up as he continued to torture me. And then I felt his mouth around my tip, my hand gripping his hair as my head fell back into the pillow. \"Oh fuck Bruno!\" I groaned, my jaw taut as he took me all the way into his mouth. I could feel his throat stretching and pulsing as he gagged slightly. My whole body trembled, my balls pulsing eagerly as he bobbed his head up and down. He used his hand too, squeezing and pulling at my shaft as he sucked on it. His hand pressed against my pubes, his mouth taking me all the way in again and I groaned, grabbing the back of his head and lurching at his throat.\n\n\"Mmmm,\" he groaned, gagging slightly.\n\n\"So good!\" I insisted, not wanting to let go. He clawed at my hips and I sighed, letting him ease up. He gasped for air and I looked down, worried I upset him. But as I did he was already feeding my cock into his throat again. \"Oh shit Bruno!\" I reached both hands down, gripping his hair and the back of his head as he worked me into his throat over and over again. He held my hips, his head rolling and bobbing as he used his throat to massage my tip. \"Hoooo-fuuuuhckhnnng!\" I felt my chest tighten, my whole body on fire as my hips lunged desperately. \"Where the fuuuu, huuu,\" I inhaled sharply, my head falling back as my balls tensed up. \"Fuck Bruno, I'm gonna cum!\" I groaned. He moaned, his throat and tongue vibrating against my dick. I lunged my hips at his face, grunting and gasping as my balls exploded.\n\nHe pulled back slightly, licking and sucking at my shaft eagerly. I lost my breath, my eyes crossing as he sucked every drop from my balls. As soon as it stopped I collapsed to the bed, panting and sweating from how hot I was. \"That was a lot,\" he gasped and I laughed once, throwing my arm over my face as I closed my eyes.\n\n\"Who the fuck taught you how to suck dick like that?\" I demanded, amazed and a bit frustrated. What did he do this week when we weren't talking? Of course I was stupid to think he'd mess around with anyone else, but the jealous thought did occur to me.\n\n\"I watched a few videos,\" he muttered and I sighed, biting my lip as a giddy feeling washed over me. \"I want to make you happy Clay,\" he insisted and I dropped my hand to my chest, smiling down at him as he started rubbing my thighs.\n\n\"You do. So fucking much it's absurd,\" I breathed and he smiled.\n\n\"Good,\" he grabbed the lube, and I slid my legs up and back easily. If a video taught him how to deep throat, I was a bit eager to see how good he'd be at pleasing me through my ass. My mind wandered back to the first time I took a dick and how painful it was. I brushed that thought away as he poured the lube over my ass. He bit his lip, dropping the bottle before I felt his fingers. He was massaging my taint and hole, only teasing me. After a bit I felt my cock stirring again, the pleasure from my taint and ass taking over.\n\n\"That feels nice,\" I sighed, enjoying the gentle thrills coursing through my body as he'd hit a sweet spot or two.\n\n\"How about this?\" his voice heavy with desire again. I felt him push a finger in, gasping as I lost my breath for a moment. His other hand cupped my balls, massaging them gently. Soon enough he was working his finger in and out of my ass slowly, his thumb massaging my taint as his other hand teased my balls and cock. It was maddening, my body starting to tremble as I panted.\n\n\"Huuuuh, mmmm,\" I moaned, reaching down to grab my knees. I pulled my legs back slightly, my feet lifting off the bed.\n\n\"Oh fuck,\" he groaned and then I felt his hand pause before pushing deep into my ass. I inhaled sharply, wincing as the pain shot through me. But I breathed deeply, relaxing into it as he continued his gentle massage. His fingers pushed deeper and my hips lurched, my feet straining as I shuddered violently. \"Mmm, it's so fucking sexy seeing you moan and tremble like this,\" he breathed, sounding so horny himself.\n\n\"Fuck Bruno, that feels so good,\" I breathed, my voice breaking into a whimper and moan as his mouth captured my dick again. I looked down, my hands pulling my legs apart more. His eyes opened, looking up at me as his lips parted around my tip. I watched, my stomach heaving with my labored breaths as his tongue swirled around and across my tip. It was the sexiest fucking thing I had ever seen. He smirked and then closed his eyes, his mouth clamping around my tip and sliding down my shaft. I slid into his throat as his fingers pushed into my ass and I yanked my legs apart, crying out as I exploded unexpectedly. His tongue and throat milked my cocked as he massaged my prostate, my balls pulsing violently as I emptied myself a second time.\n\nHe pulled away and I felt spent, my arms falling to the bed. My feet almost hit the bed when I felt his hands slid up my thighs. He pushed my legs back and I glanced down, panting and shaking as pleasure consumed me. He had my ass up a bit, his dick resting against my hole and taint as he bit his lip. \"Is this too much, or can I keep going?\" he whispered. I laughed weakly, biting my lip as I reached my hands down to my ass.\n\n\"Take me,\" I exhaled, pulling my cheeks apart. His forehead wrinkled as adjusted quickly. I felt his dick slide against me and then push at my hole. I relaxed as best I could as he pushed in, my ass aching as it stretched around him. He gripped my legs tightly, panting and moaning as he eased himself inch by inch into my ass. His hips pushed against my ass, his thighs sliding up under me as he trembled.\n\n\"So fucking tight,\" he panted, his face contorted with pleasure. I reached up, grabbing his arm. Our eyes met and he moaned, letting me pull him close. We held onto each other, our lips locking as he held himself in me.\n\n\"Do you like my ass?\" I muttered, sucking and kissing at his lips as he panted and trembled.\n\n\"God yes,\" he exhaled, his tongue shoving into my mouth. We both groaned as he started thrusting into my ass. My hands ran all over his body, as we kissed. This was the most passionate a man has ever been with me. He was completely lost in this moment it was mesmerizing. I gripped his ass and encouraged him deeper, his lips falling off mine as he moaned and panted. \"I want to cum in your ass,\" he admitted breathlessly and I just grabbed the back of his head, kissing him desperately as I clawed at his ass.\n\nHe was gentle but relentless as he thrusted and rolled his body into mine. We were both moaning and panting, our bodies trembling and sweaty as he buried his cock inside of me. He started going faster, holding himself over me. I watched him, admired how hot he was, so deeply overcome with sexual depravity.\n\n\"I'm gonna cum,\" he panted and I felt my cock twitch, my body burning as I watched him please himself with my ass, my body.\n\n\"I'm gonna cum too,\" I insisted, reaching down to start jerking off. He looked down, slamming himself into me. We both groaned, his body pausing momentarily before he adjusted. He grabbed my legs, pushing them back and apart. I reached down, pulling my ass apart more as he thrusted into me. He threw his head back, groaning as he trembled and started going faster. Why was he so fucking sexy? I used both hands, abusing my cock desperately as he started pounding my ass. We were both groaning and grunting loudly, panting as pleasure consumed us.\n\n\"Oh, oooh god, hnnngh, ahhk, oh fuck!\" he started going faster, his body slapping against mine as he gripped my thighs for leverage. The angle and speed felt incredible, my ass spasming around his hot cock as my balls churned.\n\n\"B-Bruno! You're fucking, oh shit, gonna make me, hmmm, cum from my ass being fucked!\" I cried out and he groaned, his eyes flashing open as he looked down at me. We watched one another, my body rapidly climbing to climax as he fucked my ass desperately. \"Uhhh, hooo, oooohh!\" I tensed up, my head falling back as all my muscles went rigid. I came again, my cock throbbing and pulsing mind-numbingly as I shot cum all over my chest and stomach.\n\n\"Oh shit! Oh fuck Clay, so, hot!\" he clawed at my thighs, his head rolling back as his face wrinkled. He grunted and moaned, sounding primal as he became eratic. He slammed into me a few times, his body shaking as he gasped and panted with each thrust. He swallowed and gasped for air, holding himself deep as his head rolled back again. His mouth slowly turned up into an incredibly sexy and satisfied smile as he licked his teeth. He started chuckling, the sound deep and sexy as it rumbled through his chest. He looked at me then, his eyes burning. \"You might turn me into a full blown gay Clay, if you let me have this ass whenever I want,\" he muttered and my dick twitched, my ass clenching at his shaft. He smirked, glancing down as he thrusted into me playfully. \"Seems like your ass liked the sound of that,\" he teased and I blushed, covering my face.\n\n\"Who are you?\" I chuckled after he eased himself out of my ass, lying on the bed next to me.\n\n\"Someone who is determined to prove to you that this is worth all of the problems,\" he muttered. My heart thumped against my chest, my head snapping to the side. We were staring at one another, obvious tension and passion between us. Without a word we both rolled toward one another, tangling our bodies together as we kissed passionately.\n\n\"I can't go again,\" I panted as he groped and caressed me all over.\n\n\"I just want to fucking kiss you,\" he insisted and I moaned, shoving my tongue into his mouth. I was the luckiest fucking man alive. He deserved way better than a closeted man afraid to come out. Could I give him more? He pulled away slowly, both of us catching our breath as we held one another. His eyes were so warm and deep as they stared into mine. \"Clay I,\" he hesitated and I pursed my lips, worried as he buried his face into my chest.\n\n\"What?\" I insisted and he sighed, shaking his head. \"No tell me,\" I chuckled, trying to pull him back. He clung to me, taking a deep breath before pulling back and looking at me. It felt like he was staring into my soul, my heart pounding. This gaze, it was always suffocating, but it wasn't scary or unnerving. Just intense.\n\n\"If we continue like this I really think I could fall in love with you,\" he admitted finally. My heart stopped, my body rigid as I processed that. I obviously was quiet for too long, just watching his face slowly turn to panic and fear as I didn't say anything back. \"Sorry, I shouldn't have said that,\" he went to pull away but I gripped him to me, wrapping my body around his as best as I could.\n\n\"You deserve better than me Bruno. I want to be selfish, I want to fall madly in love with you and have you feel the same way. But I won't let that happen to us. Not until I can be the man you deserve,\" I whispered, clinging to him as fear and desperation consumed me. He held me tightly, sighing heavily.\n\n\"Why are you so stupid Clay?\" he muttered and I pouted when he pulled back from our embrace. \"The only problem is that you're not out yet. Everything else about you?\" he whispered, holding my face then. \"I love it,\" it sounded effortless. My body felt weak, my mind a mess. \"Are you crying?\" he laughed, astonished as I blinked, realizing I was.\n\n\"Sorry. The last time I felt like this was,\" I let the thought hang there and he nodded slowly, a gentle smile on his face. \"What did I do to get so lucky?\" I insisted and he laughed, shrugging as he bit his lip.\n\n\"So, when do you want to come out?\" he asked softly and I hesitated.\n\n\"I'm not sure,\" I admitted and he nodded, letting the topic go for now. We both seemed content just holding one another. But I knew I had my answer. I could give him everything he wanted. I would. It felt right, it felt worth it. If it was him, I would do anything. That I was sure of."
    ],
    "authorname": "CateredContentQueen",
    "tags": [],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/my-exception-is-you-ch-06"
}