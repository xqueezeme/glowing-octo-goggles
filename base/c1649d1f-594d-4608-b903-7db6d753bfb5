{
    "title": "Chinese Takeout Ch. 04",
    "pages": [
        "<p align=\"center\">Chinese Takeout Chapter 04 -- Baby Blue</p>\n\n<p align=\"center\">by Chloe Tzang</p>\n\n\u00a9 2016 Chloe Tzang. All rights reserved. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review.\n\nFirst: this is the fourth chapter in a multi-chapter story with quite a few more chapters to come. There's still no outright sex in this chapter, but there is more foreplay between Round Out and Jay-Lin. As always, I do hope you all enjoy and for those that have asked, I'm sorry Chapter Four has been such a long long long time coming. Trying to write this and \"Happy Birthday to Me\" as well as rewrite \"Hayley's Party\" and do \"Jeong Park's First Frosh Ball\" plus a couple of other short stand-alone stories and working full-time -- well, there aren't enough hours in the day but I love writing them all too much to stop and focus on one at a time. And I still want to write more \"Strawberry\" stories too... Oh well ...\n\nSecond, a BIG thanks to everyone whose taken the time to comment online or drop me those wonderfully supportive comments thru the Feedback form. You've almost all been so supportive and just plain nice about my attempts to write stories here (and not just \"Chinese Takeout\" either). So thanks yet again for reading my little tales and feeding me with those comments and feedback emails that provide me with the motivation to keep writing ... and for giving me the opportunity to improve my writing and story-telling skills, such as they are, on you all as I write... And while I'm yapping away boring you, thanks so much to everyone who took the time to vote for \"Sometimes Harder is Best\" for \"Best First Time Story\" in the 2015 Literotica Awards. Based on the number of votes, it came unofficially second in the end, and while of course I would have loved to have come first, coming second for a story I wrote only a few months after I started writing here is wonderful, especially given the competition! So thank you all so much again.\n\nThird: And, as always, now and for every chapter to come, Chinese Takeout is dedicated to the real Round Out, with my thanks and gratitude for the ongoing help with this (especially in this chapter, on strip bars, with which I have no experience at all...my education has, I confess, been sadly lacking, although my SO has promised to help) and with a disclaimer for any bikers reading this that any mistakes, biker and biker-culture related or not, are mine and mine alone, because there are bound to be a few and they're not Round Out's fault if that happens ... and now I'll stop boring you. On with the story... I hope you enjoy reading it as much as I did writing it ... and before you ask, by the time you actually read this I'll be well into Chapter 5, which is coming a lot quicker so you won't have so long to wait for the next installment...\n\nFourth and absolutely last, I promise: if you're going on to read this chapter and you haven't already read Chapters 1, 2 and 3, then I really do recommend you go back and read those in order, starting from Chapter 1. It'll all make a lot more sense that way...Chloe\n\n<p align=\"center\">Chinese Takeout - Chapter 04 -- Baby Blue </p>\n\n<p align=\"center\">...Thought you'd realize that I would know\nI would show the special love I have for you,\nMy baby blue\nWhat can I do, what can I say\nExcept I want you by my side\nHow can I show you, show me the way\nDon't you know the times I've tried?\nGuess that's all I have to say\nExcept the feeling just grows stronger every day...\"</p>\n<p align=\"right\"> \"Baby Blue\" - Badfinger</p>\n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\n\"Wake up Jay-Lin, you don't want to be late for the bus.\" Mom's voice floated up the stairs.\n\n\"Coming Mom.\" I was already wide awake, showered, my teeth thoroughly cleaned, my mouth now tasting of mouthwash and strawberry-flavored toothpaste rather than Keith's cum, a salty acridity that I'd woken up to and already missed. I was dressed, my gym bag and backpack ready to go. Only, I was sitting there on my bed holding yesterday's panties next to my face, inhaling. Deeply. God, that smell. Even with my panties now dry, the smell of Keith's cum lingered, doing shivery melting things to my insides. Making my mouth flood with saliva. All I could think of was that I wanted him more than ever. One last deep inhalation before I reluctantly buried those panties deep in my laundry basket, picked up my gym bag and my backpack and dashed downstairs.\n\nMom looked up, smiling. \"Breakfast's rea... OH MY GOD! What happened to your face Jay-Lin? Here, I need to look at that. Sit down. Hold still. What on earth happened to you?\" \n\nThat's the problem when you have parents who're both Doctors. Anything happens, they're all over you checking. I was hungry. I wanted to eat breakfast. I didn't need checking out. I was fine. A bit bruised and sore and a horrible blue-green-purple-yellow black eye, but otherwise fine. And happy. So truly happy. Keith loved me. He really really loved me. I couldn't stop smiling.\n\n\"Just a few bruises Mom.\" Well, that and a few aches but they weren't too bad. Who cared? Not me.\n\n\"What happened? Oh my god. That's awful...your eye... are you sure you're okay? How did you get this?\" \n\nTime to dodge the question. \"Mom, I signed up for a martial arts program yesterday, I'm going to be going after school every day Monday through Friday. And, uh, I didn't tell you but I started yesterday.\" Okay, that was a white lie. I did go to Quebec's gym. I wasn't going to tell her I'd got into a fight on the bus to school. She'd weird out on me. She knew the Chua bitch's Mom as well. She'd be on the phone right away. No, definitely not.\n\n\"Is that where those bruises and scrapes are from? No dear, definitely not if this sort of thing happens. Those bruises are bad. And that eye... Now keep still while I look at that eye.\"\n\n\"Mom!\"\n\n\"Keep still Jay-Lin! Now, look up... Look up... KEEP STILL JAY-LIN! ... Okay ... Okay... Okay ... You're eye's okay ... well, I guess that looks okay, just bruising thank goodness ... Now, tell me about this martial arts program you signed up for. What happened? Where did those bruises come from?\"\n\n\"Uh, I wasn't quick enough Mom, I got hit by accident.\" White lie number two. But all in a good cause. My Mom didn't need any unnecessary worries. And it wasn't going to happen again. That was why I was going to Quebec's after school today.\n\n\"And, uh, it's a tough martial arts school and I'm going to have to work hard at it, but I'm getting a ride there from school every day with one of the guys.\" White lie number three. Olaf WAS one of the guys. Just, not one of the guys my Mom was thinking of when I said that. Not my fault.\n\n\"And one of the guys that goes to the school is dropping me off home afterwards every day.\" Well, that was white lie number four. It was for my Mom's own good though. She worried too much, really, she did. It wasn't like I ever got into trouble.\n\n\"Well, sounds like you've got it all planned but where are these boys from, honey?\" \n\nThink fast Jay-Lin! \"I met them through Ginny.\" Not that THAT was a recommendation, not in my mind. But it would satisfy my Mom. And it was true, I did meet them through Ginny. If it hadn't been for Ginny I wouldn't have been at the Imperial Dragon when Keith rolled up on his Harley and rescued me. I had to smile at the memory.\n\n\"You like one of those boys don't you Jay-Lin? Is he why you joined?\" Uh-oh. Mom was far too quick to read that smile.\n\n\"Ah no, I decided I needed to know some self-defense. And yeah, he's a nice guy, yes, I like him.\" Well, I wasn't going to tell my Mom I loved him madly. Or that he loved me. Or anything about him at all. Not yet. Not for a considerable time. Not until I was sure the time was right and I'd done my preparation. I knew my parents. I'd lived with them for eighteen years. They were very predictable. Dangerously so in this case. To say they would not approve of Keith was like saying a tornado was a mild weather disturbance. \n\n\"Maybe he could take you to the Prom honey? If you like him that much of course? Unless you have someone else in mind already?\" God, she sounded so hopeful. I felt bad. I did. I hated disappointing my parents.\n\n\"Uhhh, Mom!\" I blushed. My Mom smiled. Hopefully. What WAS it with my Mom and Auntie Chrissie and the Prom? What was it about not interested that they didn't get? I tried to imagine the reactions if Keith turned up to take me to the Prom. No, not good. Not good at all. But I didn't feel bad about Keith. Quite the opposite.\n\n\"Auntie Chrissie and I are taking you shopping next weekend for a Prom dress, remember?\"\n\nOh shit! I'd forgotten about that. \"I can get it myself Mom. I'll go with Sally. Or Ginny.\" If Ginny and I were talking. \n\n\"Auntie Chrissie wants to buy it for you, she says it's the least she can do after you've babysat for her and Uncle Ernie for the last five years. They're going to miss you when you go away to College. Don't argue honey, she really wants to do this for you.\"\n\n\"Uhhh.\" Meeting Keith had driven every other thought from my mind. Including my College applications. I wasn't leaving Keith. Absolutely not. No way. Which meant I was staying here. Which meant I was going to have to rethink my College plans. Thank god I'd applied for the local College as well as all the other ones I'd sent in to. Our local College was really good, at least. The best in the State. I knew Mom and Dad would like it if I didn't move away for College even if it was something they hadn't expected. Which meant I was going to have to break that to my parents along with introducing Keith. Oh shit! Life was just getting too complicated. Maybe I should just run away from home and move in with Keith? I glowed at the thought. \n\nOnly that would bring a whole other set of complications. None of them good.\n\nJesus! All of a sudden my morning wasn't all sunshine and fluffy bunnies and chirping birds.\n\nPart of growing up Jay-Lin, I told myself firmly. What doesn't kill you makes you stronger. Yes! That was it! Except if my Dad found out about Keith by accident, he'd kill me. That wasn't going to make me stronger at all.\n\nI didn't usually swear to myself, but honestly, what the fuck was I going to do?\n\nMom passed me a bowl of congee along with a plate of fried bread sticks she'd nuked in the microwave. I wished she'd cook them in the oven or something. I hated that microwave. I'd tried throwing it out once but she'd brought it back in from the recycling. I absolutely never used that microwave. For anything. Ever. For all my parents were medical professionals, they really had no idea of the health hazards of feeding their sole progeny irradiated food. \n\nI ate those fried breadsticks anyhow. Nuked or not, they sure tasted great.\n\nDad breezed in. You'd never think he'd just pulled an eighteen hour day yesterday at the hospital, most of it doing procedures in the operating theatres. I guess if you love your work ... \"Morning Jay-Lin, how was ... WHAT HAPPENED TO YOUR FACE?\"\n\nOh God! I ended up going through the whole rigmarole again while I tried to eat. By the time I'd finished Dad was looking a bit less upset. Just a bit. Dad was far more concerned than Mom.\n\n\"I won't say no but make sure you don't get hit like that again, okay. That's not good.\"\n\n\"It was an accident Dad.\" Well, it was. I didn't plan on letting the Chua bitch get away with hitting me like that again. That's why I was going to Quebec's after all. I looked at the time. I was going to miss the bus if I didn't run.\n\n\"But you take money for a cab honey, and make sure you take your credit card, that's one of the reasons we got it for you, I don't want you stuck for a ride, okay.\"\n\n\"Okay Dad.\" \n\nIn the end I had to run to the bus pickup at the end of the street with my backpack and my gym bag thumping over my shoulder but I made it. Just.\n\nThe Chua bitch pointedly looked out the window. Her nose was swollen and bruised, more like a pug's than ever. Serve the bitch right. Ginny sat where we usually sat together, looking upset. The seat next to her was empty. I ignored both of them, plunking myself in beside a 9th grader at the front. She looked nervous. That was me, intimidating 9th Graders. Yeah, way to go Jay-Lin. Biker girl, terror of the 9th graders, that was me. I giggled. The 9th grader looked at me, wide-eyed. I giggled again. I couldn't help it. \n\nI think she thought I was nuts. She definitely looked scared. She didn't look at me again for the entire twenty five minutes it took to get to High School.\n\nWalking into school, I totally ignored Ginny, Marjorie, Chin-Chin and Ling. All four of them were looking as I stuffed my gym bag in my locker. I didn't speak to any of them. In fact, I pointedly turned my back on them and walked into our classroom alone. Where I took a seat on the far side from where Ginny and I usually sat. On my own.\n\nNobody said a thing. Not to me.\n\nThe rest of our class watched, twittering and whispering the way they always did when anything out of the ordinary happened.\n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\nI ignored Ginny, Marjorie, Chin-Chin and Ling all day. The Chua bitch pointedly avoided even looking at me. Made no difference to me. Honestly, I didn't care. I was miles away for most of the day, feeling more than a bit nervous about going to the gym, but I was also looking forward to Keith driving me home. Better still, tomorrow was Saturday. I was going to spend all Saturday with Keith. Our first anniversary. Tomorrow, I would have known Keith for a whole entire week. We were going for a ride on his Harley. Me and Keith. That brought a smile to my face. In fact I sat in class smiling happily all day.\n\nHigh School finished for the day at three on the dot, as it always did. At last! Still smiling, I filed out of the room along with my classmates. Taking my gym bag out of my locker, I locked it again, bouncing happily down the hallway towards the exit and the pickup lane, not even bothering to see what the others were up to. I didn't care. I wasn't interested. Ginny looked like she wanted to say something to me. I simply ignored her. Olaf was picking me up. I didn't want to hold him up. I wanted to be there on time. \n\nI knew Ginny was following me. Okay, maybe she wanted to say something else. She was probably going to get all pissy with me again. Forget it. I was still upset with her. Her and Marjorie and Chin-Chin and Ling. All of them.\n\nOutside, there was no white van. I wasn't worried. Keith trusted Olaf to pick me up. That was good enough for me. He'd be here. I waited, gym bag slung over one shoulder, backpack at my feet.\n\n\"Uhh, Jay-Lin.\" Ginny's voice sounded from behind me, small. Small and nervous.\n\n\"What?\" Mine was snappy.\n\n\"Uhhhh, I'm sorry Jay-Lin, about yesterday, really, I didn't mean what I said ...\"\n\nI saw a white van pulling in. Even at a distance, the driver was unmistakable. Olaf. I waved madly.\n\n\"Ginny.\" I interrupted her, not looking at her. Looking at the van. Olaf saw me, I saw him wave.\n\n\"Yeah?\"\n\nI made my voice softer. Forgiving. It was an effort. I didn't feel at all forgiving, but she was my best friend and I'd make the effort. Even if I was still mad with her. \"I gotta go. My ride's here, how about I call you tonight after I get home? Or tomorrow morning if I get home late. We can talk then.\" Now I looked at her.\n\n\"Uhhh .. you're not catching the bus?\" Her disappointment showed. \"Okay, but Jay-Lin...\" Her voice tailed away as the van pulled up beside us. She looked at it, blinking, looking a little like a freshly stunned tilapia. I smiled. Seeing Olaf for the first time had done that to me too. I turned to smile at Olaf, but it wasn't Olaf I saw first. It was the side of the van. \n\nYes, the van was white. \n\nI distinctly remembered Olaf saying the van was white. I swear I did.\n\nHe hadn't mentioned that it was decorated down its full length with an incredibly graphic full-color illustrated condom advertisement. A company name. \"Condom Vending Machine Services Inc.\" A phone number and web site address in foot high letters merely added some textual confirmation to the artwork. The very graphic artwork. Was that sort of illustration even legal? No, Olaf hadn't mentioned a thing about that. All he'd said was that the van was white. My face burned.\n\nI blinked. Ginny and I glanced at each other. I was sure my expression matched hers. Stunned. \n\nI'd never imagined being picked up from High School in a condom delivery van. Let alone one that was so ... graphically ... illustrated. Picked up from a Catholic Girls High School by a condom delivery van, no less. Oh well, it wasn't like there were cabs queuing up to give me a free ride. \n\nIf the van had been ...vivid, Olaf was more so. In the gym, in his tracksuit and with the padding and stuff they all wore for sparring, he'd looked very big and very scary. On the sidewalk outside my High School, in black jeans, black silk shirt, black Doc Marten combat boots, a black leather jacket and that shaved head with those white-seamed scars crisscrossing his face gleaming in the sun, he looked like Frankenstein's cousin. When he got out of the van and walked around towards me, every girl within twenty feet except Ginny and I backed up. The Chua bitch was no exception. Ginny shuffled closer to me.\n\n\"Hi Olaf.\" I gave him a little hug. Not that Olaf was a huggable guy, so that hug was just a quick one. The top of my head was maybe half way up his chest. Keith made me feel small. Olaf made me feel like a doll. I could actually hear the collective gasp when I hugged him.\n\n\"Hi Jay-Lin, this one of your friends?\" Olaf eyed Ginny speculatively, one of his hands resting on my shoulder for a moment. \"Or is this one of those ones from yesterday?\" In an instant his expression had turned from merely scary to downright terrifying, his voice icy, just the words a palpable threat, hanging in the air. Ginny paled. The Chua bitch must have heard, she turned white as a sheet. Even I was scared. And I knew Olaf was a brother of Keith's.\n\n\"Uhhh, Ginny's a friend of mine,\" I gulped. \"My best friend. Olaf, this is Ginny. Ginny, this is ...\" well, he wasn't my friend, he was Keith's brother ... \"...Olaf.\"\n\n\"Pleased to meet you, ... Olaf.\" Ginny sounded like she was on auto-pilot. Her hand was tiny in Olaf's. How come he'd shaken hands with her and not me, yesterday? Olaf winked at me, his expression not changing in the slightest. I got it. He knew he was freaking her out and he was enjoying it. Ginny looked quite pale, as if she was going to faint. Yup, Olaf did that to other people, not just to me.\n\n\"Likewise, ... Ginny.\" Olaf lips twitched into that terrifying non-smile. Ginny took a step backwards as his hand released hers. \"Ready to go, Jay-Lin?\" He was fast, he'd already taken my gym bag from me. My backpack was in his other hand. When had he picked that up? I hadn't even noticed.\n\n\"Uhh,\" I said, faintly, eyeing the van. And the artwork. I think you'd call it artwork. It was certainly ... artistic. Very. \"Uh, yeah, sure.\" My voice was still a little faint. \n\nOne of the teachers doing ride lane monitoring was looking at us. Horrified. Like, really totally freaked out horrified. She looked like she was going to come over, she even took a step towards us. Olaf must have caught the movement. His head snapped round in an instant, that seamed and scarred face directed towards her. I swear, that look could have stopped a freight train cold. It stopped that teacher in her tracks. She appeared to change her mind. Instantly. \n\nI gave her a weak smile.\n\n\"Uh, call you tonight or tomorrow morning Ginny.\" I started to climb in on the passenger side as Olaf held the door open for me, brushing a Burger King wrapper and a piece of wilted lettuce off the seat. I guess that'd been Olaf's lunch. There were a couple more wrappers on the floor. MacDonald's and Wendy's. Well, they said variety in your diet was good. The wrapper on the seat joined the ones already on the floor.",
        "\"Uh, yeah, sure Jay-Lin,\" I thought I heard Ginny say as Olaf shut my door.\n\nEveryone was looking at the van as we pulled away. I was sure everyone was looking at me too. I thought about the advertising on the side of the van and started to giggle, then to laugh. This was too funny. Embarrassing for sure, but also funny.\n\n\"What?\" Olaf asked as we pulled out into the traffic.\n\n\"The van,\" I giggled, \"you picked me up in a condom delivery van?\"\n\n\"Yeah,\" Olaf said, sounding puzzled. \"That's my day job, I stock condom vending machines.\"\n\n\"Yeah,\" I was almost crying, I was laughing so hard, \"but Olaf, it's a Girls High School, a Catholic Girl's High School. You know, catholic schoolgirls, condoms, birth control, the Pope...\" I couldn't talk anymore, I was howling. The look on that teacher's face. On Ginny's face. On the faces of the other girls and the parents as we drove away. God, I was going to be in the office again on Monday but for this, for this it was worth it. I thought about what my Mom and Dad would say if they found out but it was still funny. Oh shit!\n\n\"Oh,\" Olaf said, blankly, \"you think that might a problem?\"\n\n\"I ... I have no idea,\" I managed to gasp, wiping the tears from my cheeks. \"Guess I'll find out Monday but honestly, what can they say? Is ...is this what you drive every ... every day?\" I couldn't stop giggling.\n\n\"Yeah.\" Olaf wasn't chatty, that was for sure. But he was smiling. Sort of. I think. I just hoped I hadn't offended him. I really did not want to offend Olaf.\n\n\"Oh well, guess they'll get used to it.\" God, I hoped so. I wasn't sure that I was going to. And the gossip at school. The gossip about this was going to be something else. School? All those parents? My parents? What could possibly go wrong? I started giggling all over again. Oh shit! Monday was going to be ... interesting, to say the least.\n\n\"Yeah, guess so.\" Olaf really didn't give a fuck did he?\n\nWe turned off Truman after a few blocks. \"Where're we going?\"\n\n\"I gotta make a few deliveries on the way.\" Olaf actually sounded apologetic. \"Friday night coming up, busy night, gotta make sure all the machines are fully stocked. Picked you up on my way to save time, it'll only take a few minutes extra.\" He pulled the van over to the side of the road. I looked at the sign above the door beside us.\n\n\"Kitty Kat's Strip Bar,\" I read out loud.\n\n\"Yeah, they're a real big customer.\" Olaf was totally deadpan. I couldn't figure if he was serious, joking or teasing me. He glanced at me as he opened his door. \"You wanna wait here or come and give me a hand? Won't take as long if you help out.\"\n\nA very prominent sign beside the entrance said \"Steak Lunches\". Men came to strip clubs for lunch? Really? Wow. That was something new. Then again, wasn't that what places like Hooters were all about. Mind you, I'd never been to a Hooters either.\n\n\"Uhhh...\" I thought about helping Olaf out. Quickly. He was giving me a ride. Every day. The least I could do was help. And besides, I had no idea what a strip bar was like. I was curious. And it was only three forty five. Like, no way they were going to be busy. Lunch must have been done long ago. Everyone should still be working. Hey, why not? I was dying of curiosity now. What did the inside of a strip bar look like? \"Okay, sure.\"\n\nI jumped out of the van, joined Olaf by the side door that was already open. He was inside, doubled over, checking a list he held, pulling boxes off the racks that lined the inside of the rear. There was quite a pile. And hey, I knew what a condom looked like and how big they were and what they were for. I wasn't a total innocent. Ginny had given me a demonstration once on a cucumber we'd \"borrowed\" from her Mom's kitchen. So I knew those boxes held a lot. I could see what Olaf meant by this place being a big customer. \n\nMy brain made the connection. Yeech! That was a bit gross. But hey, different folks, different strokes. None of my business what other people did with their lives. Live and let live, that was me. Olaf jumped out.\n\nI took four boxes. \"Load me up,\" I said, \"just leave me enough room so I can see where I'm going.\"\n\nHe did. I ended up with a dozen large boxes that came all the way to my chin. They didn't weigh much, but then, I knew condoms didn't. Still, it was a lot of condoms. \n\n\"What's with the steak lunches?\" I asked, fascinated. Did guys really come here for a steak at lunchtime and watch strippers at the same time. It seemed a bit strange to me. But hey, what did I know. Guys! Their brains were hard-wired differently I guess. \n\nOlaf grinned at me as he pulled more boxes out. \"Oh yeah, not a bad steak either, not filet but it's not the latest nag that lost at Pimlico either. They make their margin on the drinks, charge low for the steak, high for the drinks and the girls work the customers for the big tips. Come on in, just follow me.\"\n\nWhat was Pimlico? What was a nag? Whatever. I'd ask Keith tonight. I was sure he'd know. Olaf picked up the stack of boxes, a couple of dozen, shut the van door and led the way in. The door opened for us. I saw another huge guy, almost as big as Olaf, shaved head, ripped and just about as mean looking. Just about. Nobody could possibly look as mean and scary as Olaf.\n\n\"Olaf.\" He nodded. When he saw me following Olaf, his eyebrows arched up. \"She eighteen? Can't come in if she ain't.\"\n\n\"Yeah, I'm eighteen,\" I chirped.\n\n\"I.D?\" he asked.\n\n\"Fuck off, Meek,\" Olaf said over his shoulder. \"Guess you ain't heard yet. This here's Baby Blue, Round Out's Old Lady.\"\n\nMeek looked at me. Mr. Mean and Tough looked astonished. \"Fuck me,\" he said blankly.\n\n\"Later tonight, sweetheart,\" Olaf chuckled. He actually chuckled like it was really funny and he was having a good time. \"Come on, Blue, we ain't got all afternoon to hang around and gossip.\"\n\nMe? Hang around outside a Strip Bar? In my school uniform? I giggled and blushed all at once.\n\n\"I can see where her handle comes from,\" Meek said to my back as I followed Olaf in. \n\nJesus, the music was loud. Loud and bouncy, catchy, underlain, or was it overridden, by a fast, pounding bass that had my heart speeding up to match the beat. My feet wanted to dance to that music. I wasn't the only one. I was shocked to find the inside of that strip bar was humming. At three forty five in the afternoon? Really? I couldn't hear a thing over that pounding bass but I could see the inside of the club quite clearly. \n\nThe stage was a large horseshoe in the center of the club, a bar area to both sides and all around the front of the stage. A couple of women were dancing on the stage, pole-dancing I assumed. Well, they were swinging around a couple of poles wearing next to nothing, not that I was an expert on pole dancing. I could see a couple of girls in bikini tops behind the bar, serving drinks to a dozen guys seated along that bar right in front of the stage, watching raptly. At least, it looked like they were rapt to me. Their eyes weren't looking anywhere else. \n\nI almost dropped my boxes as one of the dancers leapt onto the bar and sank to her knees right in front of one of those guys. I guess if you stretched it you could call what she was doing dancing, but really, his face was just about buried against her, you know, between her legs. I could just about feel my eyes doing that saucer thing. Wow! I blinked as that guy tucked some money in her g-string. Okay. I found myself imagining doing that for Keith. Now my heart really did pound. Would Keith like it if I did that for him? I wasn't sure but I very much thought so. I did know it would be exciting for me. With Keith. Only Keith. But really, I shouldn't stare, fascinating as it was to watch her.\n\nCircling the stage and filling the gap between the stage and the walls were tables. Lots and lots of tables, with a row of booths down the walls. They weren't empty. No, not at all. More than a few businessmen in suits in small groups, all drinking, a couple of them with girls at their tables. A large group of younger guys and a few girls, looked like college students or something to me, cheering on two of the guys who seemed to be having an impromptu drinking competition, egged on by a couple of the waitresses. A few small groups of guys in jeans and flannel work shirts, the kind old Mr. Purvis next door wore; glasses of beer in front of them, pitchers on the tables.\n\nNope, it wasn't exactly quiet, but fortunately for my state of mind none of them were looking in my direction. \n\nOlaf was easy to follow. The vending machines were easy to spot when we got there. A couple of monsters right outside the washrooms. Dimly lit, with red lights, but at least there was light. Guess that made sense. Had to be able to see to buy.\n\n\"Pile 'em on the floor,\" Olaf yelled over the music. I carefully stacked my boxes on top of his while he used a key to unlock the front of the first machine and swing it open. Jesus. The inside was just rack after rack of condoms, tray after tray on each rack. I guess Strip Bars really got guys going. Which made sense when you actually thought about it. Just, it was something I'd never thought about. I mean, I knew seeing me taking my clothes of got Keith going. I smiled at the memory. Olaf had already pulled one rack out, opened a couple of boxes and was busy filling them. I stood beside him, figuring out how the dispensing system worked. Fascinating.\n\n\"You gotta make sure you match up the make and type right,\" Olaf yelled, \"otherwise some dude selects a Trojan Bareback Lubricated and gets a Trojan Studded Unlubricated, he gets pissed off.\"\n\n\"Yeah, I can see that,\" I nodded, eyes wide. Yup, I could see that alright. The illustrations on the boxes were pretty graphic. Easy to match, anyhow. Examining those graphic illustrations, I knew that, yup, I'd definitely be a bit pissed if I got a Studded Unlubricated when I wanted a Bareback Lubricated. Yikes! Actually, after looking at the Trojan Studded Unlubricated graphic, I'd be a bit more than pissed. No way! There were girls that liked these things? Double yikes! But then, I didn't hang out in strip bars either, so what did I know?\n\nAlthough that did make me think of Keith and me. He was going to make love to me, I knew. I mean, last night and the night before, I'd as good as offered myself to him on a plate. I meant it as well. I was going to do the same thing tonight. I'd keep doing it until he got over whatever it was that was holding him back and made love to me. I wanted him to so much. I'd made up my mind completely back on Wednesday evening. I was totally meant for Keith. \n\nI wasn't going to tease him or play with him like my friends did with their boyfriends. Except for Ginny, of course, No, Keith wasn't a boy, he was totally a man with a man's expectations. I was going to give Keith whatever he wanted. That meant I should definitely do something about birth control. Fast. No way did I want to use condoms. I wanted Keith, au natural, everything, with nothing between me and him. Nothing at all. Just him and me. I wanted that so much. Right from the start.\n\nThere was a walk in-clinic near home, but the doctors there knew Mom and Dad. Maybe the one near school? They were used to girls from our High School going there. I could duck in there at lunchtime on Monday. Or maybe Keith could just stop for a minute tomorrow, or even tonight. But condoms? No, forget it. It wasn't like I was worried about STD's. And yes, my parents were doctors. My Mom had long ago had a far too detailed talk with me about stuff like that. But I trusted Keith. Completely. Silly? Maybe it was, but I did. As for me, I didn't plan to sleep with anyone but Keith. So yeah, forget condoms, interesting as this was.\n\n\"Here, you fill those ones,\" Olaf told me, pointing, passing me a box and pointing at the trays on the far end from him. I filled. I filled and I filled. I had no idea there were so many different types of condoms. I had no idea a strip bar vending machine used so many. It was one of those full-sized free standing vending machines. And there were two of them! What was this? Did they have orgies here or something?\n\n\"What's this for? A week?\" I yelled at Olaf as I retrieved another box in response to his pointing.\n\n\"Shit no.\" He was laughing. \"That's just from last night. You'll see what it's like on Monday when we come in after the weekend. Half the racks'll be empty.\" \n\n\"Really?\" I just about squealed. Jesus, that was a lot! And the Trojan Studded Unlubricated weren't the scariest looking ones either. And there were a lot of them. A LOT! My eyes felt like they were big and round, even if they weren't. Whoa!\n\n\"You'll see.\" Olaf was still chuckling as we finished the last racks and moved on to the second machine.\n\n\"Guess I will,\" I said, still wide-eyed. This was more of an education that I'd expected. I was kind-of glad I hadn't waited in the van. I'd learned more about condoms than I'd believed possible. And other things. Flavored condoms? FLAVORED? Did that mean you ... with a condom ... in your mouth? I mean, I understood blowjobs in theory. God knows the girls at school talked about them enough. And Ginny. But with a condom on? Huh. What was this? Lubricants? Aiiyaahhhh. I so was NOT going to ask. Mom had definitely left a few things out of that talk. But I was so definitely not asking. No way. Maybe I'd ask Ginny. When we were talking again. Anyhow, Olaf was fast, we were almost done.\n\nA couple of guys came out of the washroom, kind of staggering. Flannel shirts. Jeans. Kind of looking like they worked hard for their money, definitely not office workers. They both looked at me, eyes widening. Huh?\n\n\"Say, when're you on stage gorgeous?\" one of them slurred. \"I LOVE that outfit, wanna see you take that one off...\"\n\n\"Uhhh,\" I stuttered, shocked. They thought I was a stripper? ME? Did I look like one? REALLY? ME?\n\n\"Sorry guys,\" Olaf looked up, \"she's with me, not one of the working girls.\"\n\n\"Uhhh,\" that guy slurred, seeing Olaf. \"Shit, sorry Olaf, no offence man.\"\n\n\"None taken, Seth, none taken. This here's Round Out's new Old Lady, her handle's Baby Blue. Blue, meet Seth and Greg, they're hang-arounds with the SBC, ride with the brothers now and then.\"\n\n\"Good to meet ya, Blue. Round Out's a lucky fucking guy\" Greg was a bit less drunk than Seth. He grinned, punched Seth in the shoulder. \"Round Out ain't gonna be happy hearing you mistook his Old Lady for one of the fucking working girls here.\" \n\nI blinked at the swearing, then giggled. \"Hey guys, nothing to worry about, it's not like we were introduced first or anything.\" Guess I was going to have to get used to that sort of language. It's not like Keith was a bible class boy after all.\n\n\"Hey guys, I was missing ya.\" It was one of the girls that really worked in the bar. She eyed me curiously. \"Who're you, doll? What the fuck happened to your face?\"\n\n\"She's Round Out's Old Lady,\" Greg jumped in. \"Danielle, meet Baby Blue. Blue, this is Danielle.\" He made it sound like he'd known me all his life. \n\n\"Hi,\" I said, rather brightly, all things considered. \"I'm Jay-Lin.\"\n\n\"Fuck me,\" Danielle said blankly, looking me up and down. \"You're Round Out's Old Lady? Jeez, you look like you're still at High School? He didn't smack you round did he? I'll have his fuckin' balls if he did. Hey, you're not pulling my tit are ya Greg?\"\n\nOlaf looked up from where he was kneeling in front of the vending machine. Kneeling, his head was at my shoulder level so it wasn't like he was looking up much.\n\n\"No shit, Danielle, Blue here really is Round Out's Old Lady, told me so himself. And nah, those bruises, one of the girls at her school smacked her round coz she didn't like Blue here hanging around with Round Out.\"\n\n\"Fuck me sideways,\" Danielle said again, her face splitting into what looked like a genuinely amused grin. Why did everyone look like that when they met me? I mean, I wasn't an alien or anything. Was I? \"That's one for the fucking books. I gotta take you over to meet the rest of the girls, they're never gonna believe this.\"\n\nHuh? Keith knew all these girls? The ones that worked here? Did he come here too? Well, I knew I didn't know much about Keith, I guessed I'd find out more. It's not like I thought he was a saint or anything after all. And Danielle obviously knew him. Okay, actually, I DID want to know more.\n\n\"Next time, Danielle,\" Olaf looked up again. \"Taking Blue here to Quebec's.\"\n\nDanielle shrugged. \"'Kay Olaf, no problem.\" She grinned at me. \"Next time Blue, I really wanna here all 'bout this. How the fuck did you end up hooking Round Out? How the fuck did Round Out hook a girl like you? You're way too classy for that dude.\" She threw her head back and laughed. \"Come on guys, you want that table dance or not?\" She dragged Greg and Seth away, still laughing. \"See ya tonight, Olaf...,\" floated over her shoulder. \n\nI watched her for a second, watched her butt wiggle. How did she do that and look so sexy? How did she work in a place like this, taking her clothes off for guys, and look so cheerful and happy doing it? I tried to imagine dancing up on that stage, taking my clothes off with everyone watching. Nope. Me, I'd be embarrassed to death.\n\n\"See ya Danielle honey,\" Olaf called back. Then \"Locked and loaded,\" shutting and locking the front of the second machine. \"Gimme a minute here.\" He was using another key, opening a door on the side, pulling out a thick wad of notes, wrapping it in a bank bag and sliding it inside his jacket. \"Gotta clean out the cash too,\" he told me. \"Builds up real damn quick...\" He shut the door again. \"Right, we're done here, let's go.\"\n\nI wondered for a moment if it was safe to carry that much cash in your pocket. Then shook my head. I was being ridiculous. Olaf? Who was going to rob him? I followed Olaf towards the front, noticing as we left for the first time that the carpet outside the restrooms was tacky. My shoes were sticking to it. Gross! And the smell. Mostly stale beer and, my god, cigarette smoke. I could see a couple of people smoking openly. That was so bad. How could they? Inside as well? Oh well, none of my business. Olaf pulled the front door open for me. He really was quite the gentleman. I smiled as I walked out, almost colliding with a couple of extremely drunk guys my Dad's age in suits walking in. \n\n\"Hey, good lookin', love that outfit,\" one of them burbled at me, his arm going round my waist.\n\n\"Come on back in with us, honey,\" the other one leered at me. \"Buy you a drink.\" He tried to stuff a twenty dollar note down the front of my shirt.\n\nHonestly, my heart just about stood still. Twice in ten minutes. I was so not wearing my school uniform here on Monday. Nope, I was NOT.\n\nMeek was there in an instant. \"Hands off, gentlemen, she's not one of the girls that works here.\" His hand was already lifting the arm off of me.\n\nOlaf looked at them from beside me. He didn't say a word. He just looked. Not in a friendly way.\n\n\"Ahh, sorry Miss,\" the one with his arm around me withdrew it like it'd been burnt. \"No offense man,\" he burbled at Olaf, his face a little paler.\n\n\"Keep it Miss, buy yourself a drink,\" the no longer leering one abandoned the twenty dollar note, leaving it half down the front of my shirt. The two of them disappeared into the club like jackrabbits.\n\nMeek shrugged. \"They didn't mean anything Blue, that's how the girls here make their tips.\"\n\n\"Thanks Meek.\" I gingerly extracted the note and looking at it, more than slightly shocked. \"Wow, if it's like that now, what's it like by midnight?\"\n\nOlaf laughed. \"A fucking war zone.\" He shook his head. \"Pays the bills though, doesn't it Meek.\"\n\nMeek laughed. \"Yeah, it does that.\" He looked at me. \"Just a suggestion Blue, if you're gonna come here with Olaf every day, might wanna change before you get here. Avoid misunderstandings with the customers. They see that uniform, they're gonna think you're one of the girls every time.\"",
        "A couple of men in suits walking past us, into the club, looked at me. One grinned at me and whistled.\n\n\"I see what you mean,\" I blushed pink. Make that three times in ten minutes. I mean, I knew guys had this thing about schoolgirl uniforms and all but still.\n\nMeek and Olaf both laughed. \"Come on Blue, we gotta run, Quebec's gonna be wondering what I've been doing with you if we don't get there soon.\"\n\nMeek gave me a grin. \"See ya Monday, Baby Blue. And hey, tell Round Out me and Olaf here and a few of the brothers and some of the hang arounds are going for a run with our Old Ladies next weekend, Sunday, having a barbeque at the Church late afternoon. If Round Out's good for a run, maybe you'd like to come along with him, meet them.\" His grin widened. \"They're gonna love meeting you.\" He and Olaf looked at each other, then burst out laughing.\n\nChurch? They didn't look like the sort of guys that went to Church at all. I didn't see that meeting me was that funny but I smiled anyway. \"Thanks, I'll tell him,\" I said. I was still holding that twenty dollar note. I didn't want it. Yuck! I reached up and tucked it in Meek's pocket. \"You and Olaf have a drink on me tonight, okay.\"\n\nMeek grinned. \"Sure thing, Blue, and you have yourself a good time with Round Out.\" Him and Olaf looked at each other and laughed again. This time I really did blush. Bright red. Guys! Honestly!\n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\n\"How many more do we have to do?\" I asked as Olaf put the van into gear and pulled out.\n\n\"One more Club after this and then a couple of bars. Ten, maybe fifteen minutes for the Club, the bars are real quick. We'll be at Quebec's by four thirty, plenty of time.\"\n\n\"Can we stop and grab a coffee on the way?\" I asked, thinking of that old guy outside Quebec's. What was his name? Charlie. That was it, Charlie.\n\n\"Sure.\" Olaf shrugged without shrugging, if you know what I mean. \"There's a Dunkin' Donuts on the way, that good?\"\n\n\"Yeah, that's great. I told Charlie I'd bring him a coffee and some donuts.\"\n\n\"Who the fuck's Charlie?\"\n\n\"That old guy sits outside the front of Quebec's.\"\n\n\"Shit, that old geezer.\" Olaf didn't say anything else but I could tell he didn't really approve. Better not to say anything else, just leave it I guess. I left it.\n\n\"Do you do the same bars and clubs every day?\" I was definitely curious about that. Was this going to be every day?\n\n\"More or less, I got a regular run, get most of them done between midday and three, some of them are like once a week, twice a week, just these ones are the busy ones down this end of town, usually the last ones I do on my way to Quebec's.\" He grinned that scary grin. \"Train at Quebec's every day, then work back at Kitty Kat's Thursday through Saturday evenings.\"\n\n\"What do you do there?\" All I could think was he must be on the door, like Meek.\n\n\"Mostly sit out back and study,\" he said, surprising me. Olaf? Study? \"Come out when they have real problems that Meek and the other guys can't handle.\"\n\nI nodded, my eyes a bit wider. Yeah, Olaf definitely looked like the sort of guy you'd use to sort out problems the other guys couldn't handle. I wondered what he studied. I was so curious but it wouldn't be polite to ask.\n\n\"Nursing,\" he added, glancing at me and grinning. \"Don't want to stock vending machines for the rest of my life, studying part time at College, my lectures are mornings. Did my medic training in the Army, really enjoyed it.\"\n\n\"Oh,\" I said rather blankly. I mean, what else could I say? I couldn't think of a thing. Olaf didn't look like any idea I'd ever had of a Nursing student, but hey, I was at an all-girls High School. What did I know? But inside my head there was a lot of mental readjustment going on.\n\nI wasn't going to ask how bad the real problems at Kitty Kat's got either. If a guy that looked like Meek couldn't handle them, they must be pretty bad. I didn't like to think what sort of customers a guy like Meek couldn't handle. And Meek was a brother of Round Out's. Okay, that made me a little nervous. On the other hand, Jay-Lin, I reassured myself, if Keith had friends like that, there really wasn't a lot to worry about. Was there?\n\n\"Here we are,\" Olaf said, \"this is the other Club we gotta do.\"\n\nI looked out the side window as we pulled in to the cab stand outside the door. \"Kum Den Strip Bar\" it said, with a whole bunch of Chinese characters down the side. Very glitzy. All chrome and silver and gold. \"Any idea what the Chinese says?\" Olaf asked me.\n\nI had to shake my head. \"No, no idea, I can't read Chinese,\" I had to admit. Heck, I couldn't even speak it. Ginny could, she could read a bit to, she'd only come over here when she was about seven and she spoke Chinese at home. Me? My parents spoke English at home, they'd sent me to Chinese school on Saturday mornings but Chinese, it was impossible. I listened and listened and all I heard was \"wah wah wah ...\" Okay, that's an exaggeration. A really bad one, I know. Honestly, I did know a few words. I could order dim sum no problem. But anything else, forget it. And reading Chinese? Uh-uh. I remembered the characters for one, two and three and that was about it.\n\n\"Shame, I've always wanted to know,\" Olaf said, shaking his head. \"I mean, the name in English is kinda cool, but still...\"\n\nI looked at the english name blankly. Kum Den? Made no sense to me. Didn't sound like any Chinese I knew either. I shrugged and took a photo with my iPhone. I could ask Ginny later. I was jumping down out my side as Olaf climbed out his. Looked like a strip of Chinese bars, shops and restaurants. This was a part of town I'd never been to with my parents. Or without. It did look a bit seedy, not like the Chinese mall I went to with my parents or with Ginny. Olaf loaded me up with boxes of condoms. Same deal with the condoms. I guess it didn't matter whether the guys were gweilo's or Chinese, they were all ham-sup-lo's. That dick Peter Wong, he'd feel right at home here. I followed Olaf in. No doorman.\n\n\"Hey Song, she's with me.\" Okay, there was someone. Another tough guy, Chinese tough guy this time. Almost as big as Olaf, muscular arms, one of them with a braided wire tattoo, long hair braided into a pigtail. He looked at me without any expression at all. Nodded once. His lack of expression, the way his eyes followed me, I could tell he didn't like me. Chinese girl with a gweilo. Not only that; a Chinese girl with a gweilo who looked like Olaf. No, he didn't like that at all. His attitude was like an aura or something. It radiated.\n\nI could feel his eyes watching me as I followed Olaf in. Inside, this club was different. A lot more expensive looking than Kitty Kat's, cleaner, glitzier, all glass and chrome and wood panels, but it was empty. Nothing going on, the lights were all on, a couple of old women busy wiping down the tables.\n\nI nodded as I passed them. \"Lei ho ma Aunty.\"\n\nThey nodded back without looking up, mumbling something.\n\nOkay, the routine with the vending machines was the same. Open them up. Clean out the cash. Fill them up. I filled faster this time, knowing what I was doing. Olaf left me to work on the first machine while he did the second. I glanced around as I opened boxes. Yeah, the place was bright and it was clean, but when you took a close look, you could see the finish was done on the cheap, new paint just slapped on over the top of the old paint with odd patches missing or peeling, the wood paneling was cheap veneer, the silver was just cheap reflective plastic sheeting, screws were mismatched where I saw them, the tables chipped and scarred. It passed the five foot rule. It'd look good from a distance with the lights off as long as you didn't examine it closely, but with those bright lights on, it looked like what it was. Second rate and battered.\n\nWaiting for Olaf, I heard a door open down the short hallway behind us. The sudden sound of many voices, the clashing clatter of mahjong tiles. Looking around, I saw a pretty Chinese girl walk out. Okay, she was pretty but she had a pug nose and she dressed like some of those girls I saw every now and then when I went clubbing with Ginny and our other friends. Heels, short skirt, tight top, bright red lipstick, a bit too much makeup, you know the type. Maybe a couple of years older than me. She looked at me, blinked, looked surprised for a second, then ignored me as she talked happily to the middle-aged Chinese guy whose hand she was holding.\n\nI gulped. I knew that guy.\n\nGinny's Dad.\n\nI quickly turned my head to look back into the bowels of the vending machine. He was talking away to the younger guy walking with him. God, I hoped he hadn't noticed me. But he had to recognize the uniform. Ginny wore it to school every day, just like I did.\n\n\"Olaf.\" The younger guy nodded. In that quick glimpse, he'd looked like an older version of that asshole Peter Wong. Same face, same muscular build, same clothes, same ostentatious bling. He sounded like him to. \n\n\"Mr. Wong.\" Olaf nodded. Jesus, Olaf being deferential. This guy must be important. I buried my head deeper in the machine. I so did not want Ginny's Dad to recognize me. No way. I so did not want to see him holding hands with that girl either. She wasn't much older than Ginny and me. Old sleaze.\n\n\"Got a new helper there?\" Mr. Wong's voice. \"Looks like a hard worker.\"\n\nGinny's dad's voice chuckled. \"Nice ass on her too.\" He sounded like he'd been drinking. A lot. I could just about feel his eyes crawling over my ass and my legs. Yuck!\n\n\"Henry.\" That must be the girl he was with. \"Don't you like MY ass?\"\n\nI heard a light slap, followed by a giggle. \"I love your ass, honey.\"\n\n\"Why don't you take her upstairs Henry, she can wiggle her ass for you up there.\" Mr. Wong chuckled. \"Give Henry a nice workout, Chantal. He deserves it after losing like that on the tables. Give him a round the world to help drown those sorrows.\"\n\n\"Okay Mr. Wong, sure.\" Oh my god. I recognized that voice now, I placed the face. I did know her. Chantal Chua. The bitch's older sister. She'd been a senior at Saint Bernadette's when I was in my freshman year. Jesus, what was she doing here? Okay, well, I guess I already knew the answer to that one. I could hear her heels click-clicking away with Ginny's Dad. This was so not good. I was wishing I'd waited in the van. No way was I coming into this place again. I so wished I hadn't seen Ginny's Dad. How could I look her in the face again and not remember this? I wanted to floss my brain.\n\n\"Who's your helper, Olaf?\" Mr. Wong's voice was polite, but it also seemed it was a voice even Olaf didn't say no to.\n\n\"Friend of a friend's, she's helping me out today Mr. Wong.\" \n\n\"Well, if she's coming into my club, better introduce her. I don't like anyone in here outside of normal hours that I don't know.\" Mr. Wong's voice was a lot colder.\n\n\"Sorry about that Mr. Wong. Won't happen again. Blue, this here's Mr. Wong, owns the club.\"\n\nReluctantly, very reluctantly, I pulled my head out of the vending machine and turned around. I didn't proffer my hand. Mr. Wong didn't extend his. He just looked at me. Looked me up and down, coldly, undressing me with his eyes. \"Blue huh?\" He added something in Chinese. Sounded like wah-wah-wah to me.\n\n\"I'm sorry, I don't understand Chinese Mr. Wong.\" Not only that, he was speaking Mandarin, not Cantonese. The little Chinese I knew was Cantonese.\n\nHe shrugged. \"Banana huh.\" It was a statement, not a question. Normally, I'd be offended. Now, I was just a little scared. \"Not bad looking.\" He looked me up and down. \"Not bad at all. Once the bruises go, anyhow. If you ever need a job, look me up, we can always use another looker here. Especially one that doesn't mind a few bruises now and then.\" He handed me a business card from inside his jacket pocket, one handed, casually. Insultingly. As his jacket flipped open, I saw a large wad of cash there as well. Really large.\n\nI took that business card with one hand, the way it'd been offered. Gweilo style. If he was going to insult me, I'd at least return the favor. \"Thank you Mr. Wong.\" I didn't even look at it, it went straight into my school blazer's pocket. The outside one. No way in hell I'd be calling him. Ever.\n\nHe seemed to know what I was thinking. He smiled. That smile didn't touch his eyes at all. He looked me up and down one more time, nodded to Olaf, \"Olaf,\" turned and walked away. I watched him until he was out of sight.\n\n\"Jesus,\" I said. \"He's scary.\"\n\n\"Yeah, he is. Mr. Wong, he's one of them Chinese gang bosses, don't want to cross that guy,\" Olaf nodded. \"Sorry 'bout that Blue, he isn't usually around 'til later, haven't run into him for a while. Maybe best if you stay in the van when I come by here from now on.\" He gestured with his head, lowered his voice. \"Got an illegal casino out the back there, mostly Chinese customers, that's where the real money here comes from, the strip bar here, it's just a front for laundering the money.\" He looked around again. \"Sorry 'bout that Blue, really should have thought about that before I brought you in here. Let's finish up here and get out.\"\n\nI nodded, realizing how hard my heart was pounding. \"Yeah.\"\n\nMy hands were still shaking as we finished stocking the machines.\n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\nWhen we left, there were half a dozen girls and a single older Chinese guy outside the entrance, standing around on the sidewalk talking, puffing on cigarettes. \n\n\"Harry.\" Olaf nodded.\n\n\"Olaf.\" Harry nodded back. Neither of them were the chatty type.\n\nAt a guess, the girls were the strippers. A couple of Chinese girls, a couple of girls I thought were Filipina's, one black, one Hispanic. They stopped talking, their eyes following me as I walked past with Olaf. Those eyes weren't friendly. This was nothing like the Kitty Kat Club. I stayed very very close to Olaf until we were in the van again. I was shivering when I sat in the passenger seat.\n\n\"Sorry 'bout that Blue,\" Olaf said again. He really sounded apologetic. \n\n\"That's okay.\" I took a deep breath. \"What've we got to do to finish.\"\n\n\"Two bars,\" he replied, \"they're quick. You stay in the van. I'll do them.\"\n\nHe did. Fifteen minutes later we were done. \"Quick stop to get that coffee,\" Olaf said, \"we'll be at Quebec's in fifteen minutes.\"\n\nAt Dunkin' Donuts, I picked up a large coffee, double cream, double sugar, along with half a dozen donuts. The big Boston Cream ones with loads of chocolate on top. Pure poison, nothing but fat, sugar, artificial additives and petroleum byproducts. Mind you, from the look of what Charlie had been drinking, anything that diluted that stuff and didn't have alcohol in it would be good for him. Who knew, the preservatives in those donuts might actually help him.\n\nOlaf shook his head as I climbed back into the van. He didn't say anything though, not even when we stopped outside Quebec's and I jumped out. Charlie was there, sitting up against the wall on the corner of the building.\n\n\"Here you go, Charlie.\" I walked over to him, handed him the coffee and the donut box. He put the coffee on the filthy pavement beside him, opened the donut box, looked at them, looked up at me. There were tears in his eyes. \n\n\"Thank you ma'am.\" His voice sounded shaky, slurring. I could smell the booze on his breath from three feet away. I hoped he didn't smoke as well as drink. His lungs'd catch fire. \"Bless you.\"\n\n\"You enjoy them Charlie, bring you some more on Monday, okay.\"\n\n\"Bless you,\" he muttered. \"Bless you.\" He was already jamming the first donut into his mouth as I walked back to Olaf, waiting for me with my gym bag and my backpack.\n\n\"Sorry Olaf,\" I said apologetically, \"didn't mean to keep you waiting.\"\n\nOlaf had a strange look on his face. \"No problem, Blue.\" He hit the buzzer above the door. \"Olaf.\" The lock released, Olaf swung the door open, ushering me inside. The same sounds as yesterday greeted me. Voices, crashes, yelling, thumps, and shouts. Suddenly, I was nervous.\n\n\"Oh, by the way,\" Olaf said, and now he was grinning, \"saw you checking out the boxes, so I put a few samples in your backpack for you, so's you can check out the product. If you're gonna be filling the machines with me, gotta be familiar with the product. Don't want any mistakes. Round Out can help explain if you've got any questions.\" He winked, then chuckled as I took my backpack from him, turning bright red.\n\nWe stepped into the cavernous gym. The noise redoubled as the door closed behind us. I breathed in that same scent of sweat, testosterone and male aggression that had seemed so strong yesterday. It hadn't changed. Quebec saw us and waved. My nervousness redoubled as he strode towards me. I forgot all about those condoms.\n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\n\"Hi Jay-Lin, got your workout gear? Good. Come on, you can get changed in here.\" Quebec led the way down the side of the gym, through a door, through another room and into an office. A very cluttered office, an old wooden desk, filing cabinets, a couple of storage racks filled with boxes contained god alone knew what, an old couch that looked even more beaten up than the desk. It wasn't anything like as pristine as the gym outside, although it smelled the same.\n\n\"I'll wait for you outside. Leave your bags on the couch, nobody'll touch 'em.\" The door closed behind him. I was alone.\n\nI changed as fast as I could. My school shoes went into a plastic bag inside my gym bag, my school uniform neatly folded on top. I swapped my bra for a sports bra, threw on my t-shirt, stepped into my tracksuit pants, got rid of my ribbon and tied my hair up in a tight bun instead of its usual ponytail. Gym shoes on, sweatband on, I was as ready as I was ever going to be. Heart in my mouth, wondering what I'd let myself in for, I found myself walking out of Quebec's office and into that sweat and testosterone-loaded cavern.\n\nQuebec nodded as soon as I walked out. \"Kay, now what we're gonna do Jay-Lin, I'm going to walk you round the gym, explain what you're going to be doing and the whole philosophy around training here while we warm up. You gotta understand as well, this is a private gym, we don't take just anyone that walks in. We're not like Anytime Fitness or Golds Gym or any of those guys. What I do here, I support and train guys and a few women who want to train for fighting. We're a fight preparation gym, that's what I specialize in, some of the guys train for MMA, some for street fighting, there's a few guys from the military here, depends what they want so now, you gotta understand this completely, you're totally unusual here.\" He grinned.\n\n\"Everyone else that trains here, they know what I do, what's expected, they asked to join, they understood what we do before they asked to join, I'm pretty choosy about who gets in. You're in here coz Round Out asked me to train you and I can see you got the right attitude and you got motivation but you've got no idea what we're about, so I'm gonna explain that to you while we warm up\" He gestured at a running machine. \"Let's do a few stretches, then you can jump on that, we can jog while I explain.\"\n\nFor the next fifteen minutes I was stretched like I'd never been stretched in my life. I was sweating and sore just from the stretching. A minute after that I was on the machine, running slowly, Quebec on the machine next to me.\n\n\"Now, what we're about, Jay-Lin, understand this, we're totally a fight gym, we're dedicated to that and anyone who trains here, they're expected to push themselves as hard as they can every day and keep on pushing. We all encourage each other, but the push, that has to come from inside, it's something you have to want, we can reinforce your own self-discipline but we can't give you discipline if you don't already have it, if it's not inside you.\"",
        "He laughed. \"You want to learn to fight, that's what we teach. But the fighting's only a skill, what's important is your mindset, that you want this badly enough to feel the pain every day. Coz here, we're totally dedicated to The Art of Pain.\" And yeah, you could hear the capitals. \"It probably sounds a bit philosophical, but here, we, you know, we make a real art out of hurting. Like now.\" He reached over and dialed my running machine up a notch. Shit! I was already sweating, now I was panting as well, my legs starting to burn as I pushed myself to keep running fast enough to stay on the treadmill.\n\n\"Hurting a bit, Jay-Lin?\"\n\n\"Yeah,\" I panted, \"I'm not, like, that fit.\"\n\nQuebec chuckled. \"Nope, you're not, and you're on the fat side too.\"\n\n\"Huh?\" Fat? FAT? I had NEVER been called fat in my life. NEVER. I didn't, like, exercise much, but I was NOT fat. No way.\n\n\"You'll see the difference in a month.\" He grinned. I panted. \"In a month you won't believe what you can do. Lean mean fighting machine, that'll be you. Last that first month and you'll want to keep going. Make it to three and you won't want to quit. But for now, just take it one day at a time. Don't think about the next training session, just focus in on getting through this one, let tomorrow take care of itself, coz it will as long as you keep coming back. All you're gonna need to do is motivate yourself to walk in through that door every afternoon, and as long as you do, we'll be here with you.\"\n\n\"Now, what we're gonna do for the first month, we're going to work on some real basic fight moves. The other guys here, they've been doing this for years mostly, they fight competitively or they fight on the street, where it counts, they know what they're doing, what's it's all about. Now you, first up we're training you to fight a girl that knows shit about fighting so we can be real focused. We're gonna concentrate on the absolute basics and as far as fighting goes, we're gonna drill you on a very small number of basic techniques. We're gonna drill those into you until they're muscle memory, you're gonna be doing them in your sleep, okay.\"\n\n\"Okay.\" I had no idea about any of this, I was just going to do what Quebec told me to do.\n\n\"Right,\" Quebec grinned. \"In a month this'll start making more sense. Right now, we're going to combine a few different things, basic fitness is one, flexibility, that's another. Nutrition, food's really important here, eating right. Strength and speed, we're really going to work on building that strength up as fast as we can, and we're gonna do some basic fight training, a bit of blocking, some striking, one or two kicks, some real basic takedowns and holds and some very basic groundwork. All real simple and straightforward stuff that'll work real well against that bitch on your bus. You're going to do these again and again until you can do them in your sleep and it's going to hurt, but as long as you keep working and hurting, you'll get there.\"\n\n\"There's no magic to this, it's just hard work, pain, suffering, constant repetition and commitment by you to keep going, every day, until I tell you to stop for the day. That's it. Now you're gonna think I'm tough, you're gonna think I'm nasty and unfair, you're gonna think I'm a bastard.\"\n\nHe turned and bellowed at the top of his voice, \"AM I A BASTARD?\" I nearly jumped out of my skin.\n\n\"YOU'RE A BASTARD.\" Thirty voices roared that bellow back.\n\n\"Okay, I got it, you're a bastard,\" I panted. I didn't believe that though.\n\n\"Oh, you're going to believe it,\" Quebec grinned like he was reading my mind, \"you just gotta remember, I'm not here to make friends and be liked, I'm here to train you. Now to these guys, I'm a complete bastard, to you, we gotta build you up to this Jay-Lin, build your mind up as well as your body, so I'm gonna be a lot nicer to you than I am to them. But you're still gonna think I'm a bastard, okay.\"\n\n\"Okay,\" I panted, sweat dripping of my face. My legs! My legs were burning, my t-shirt was starting to show big wet patches, sticking to my skin. I could smell myself, all sweaty. I'd only been running for ten minutes and my legs, god, my legs. Maybe Quebec was right.\n\n\"Good, you're pretty much warmed up now so we're going to go through a light workout next. Just so's you know, there's not gonna be any structured workout here, me or one of the other guys, we'll take you through a workout every day and every day it's gonna be different. The whole point here is, we're going to work on your all round fitness, flexibility, strength and speed. We're gonna be using a range of movement and motions you need to fight, so we focus on athleticism as well as your physical capabilities, what I want is to give you a balanced foundation to fight from. \"\n\n\"It's going to train your mind too, you're going to realize you're capable of far more than you think, you'll understand you can take a lot more than you think you can and keep going and that'll make your mind stronger too, you'll come out of this with a total different mindset. Probably help you at High School too, thinking about it. Whatever, what you gotta know, Blue, is here I don't accept any excuses. You walk in that door over there, you shut up, you lace up, you buck up and you'll do just fine. Better than you expect you will.\"\n\n\"Now the good thing is, you've got an objective, you came in here with that last night, you gotta keep focused on that objective, that's what you're here to train for, you're training here for the real thing, taking on that little bitch on the bus and beating the crap outa her next time she takes a swing at you. Just keep that right up front. That's your goal, beat the crap outa that bitch next time she starts something. You hear me.\"\n\n\"Yeah,\" I gasped. \"I hear you.\"\n\n\"I wanna hear you yell it Jay-Lin, I wanna hear you yell it out so that everyone here can hear you, that you're gonna beat the crap outa that bitch, let me hear it.\"\n\n\"I'M GONNA BEAT THE CRAP OUTA THAT BITCH!\" I screamed. I actually screamed. I heard that scream echo around the gym.\n\n\"HOOO-YAAAHHHH!\" The entire gym surprised me again. \n\n\"Okay, off you get, work out time starts now.\"\n\nWork-out time? Jesus, wasn't that what I'd been doing? I was already jelly. But I slowed the running machine down and staggered off, almost falling over, wiping the sweat from my eyes, wiping my hand on my tracksuit.\n\n\"Over here to the mat, we're gonna do a few rolls,\" Quebec said, going straight into a somersault. \"Like this.\"\n\nI followed. Slowly. Somersaults I could do.\n\n\"That's good Blue.\" Jesus, Quebec was calling me that now too. Guess I really had my handle. \"Now do these slow, make sure you don't take your weight on your neck, we're gonna do these for a while, so if you get disoriented, stop for a second and reorient yourself.\"\n\nWe kept doing those rolls, one after the other, roll and stand. Roll and Stand until I actually did have to stop and clear my head. Then we kept going. I had no idea just doing rolls could be so physically exhausting.\n\n\"Okay, diving shoulder rolls now, like this.\" Quebec leaned forward, tucked his right shoulder in and rolled through, using his momentum to come to his feet. I followed again, surprised at how easy it was. Almost these rolls were relaxing after the running. \"Now rolling like this,\" Quebec added, \"this improves your balance, coordination, and core strength.\" \n\nWe went on and on. Rolls. Pushups. Planks. Shrimping. Jumping lunges. Jumping in and out of a box. Burpees. Tuck jumps. Situps. More pushups. Sprints backwards and forwards across the gym. Quebec did everything with me, showing me, correcting me, encouraging me. Until I could barely move. \n\n\"Good,\" Quebec nodded, \"now that you're warmed up, we're going push that flexibility, do a few more stretches.\" And we went right through all those stretches again while I got my breath back, feeling like I was in a wet t-shirt competition. Jeez. I actually looked like I was in a wet t-shirt competition. I was glad I'd worn that sports bra. \"See,\" he added as he stretched one of my legs, stretched until my foot rested in his shoulder, \"you were pretty flexible to start with, you can stretch a hell of a lot more when you're really warmed up.\"\n\nHe was right. I could. I could feel those muscles stretching. Yoooowwwww. Really stretching.\n\n\"Now,\" Quebec said once we'd inflicted sufficient additional pain on me, sounding satisfied, \"now you're going to work on some real basic punches. Over here.\" He was leading me off to one side, slipping on some padding, fastening it behind himself. \"There's a few things you gotta know Blue,\" he continued after a moment, \"I'm not training you like you'd learn if you went to Karate or Tae Kwon Do or any of the martial arts schools. They have all sorts of rules and for a fight on the school bus or on the street, you're not going to need any of that. Fighting for real, that's totally different to martial arts fighting.\"\n\n\"In Karate or Tae Kwon Do say, you're going to be wearing padding to reduce the impact and you wear gloves and wraps to protect your wrists and hands and feet. In a real fight, nobody wears padding or gloves and when you get hit, it can hurt like fuck, a fist gets you and it's like being hit by a rock. You punch someone with a bare fist and no wraps, you're likely going to sprain your wrists or even break them.\"\n\nI nodded, glad to be standing still for a moment. \"Yeah, when I hit that bitch my wrist hurt real bad.\"\n\n\"Probably a good hit but still, you coulda broken your wrist,\" Quebec nodded. \n\nI liked him talking. I was slowly getting my breath back. I could feel the sweat pouring off me though. I kept having to wipe it away from my eyes. Quebec could see it too, he passed me a clean sweat rag and a water bottle. God, I was dying and the bastard wasn't even sweating. I wiped sweat from my face with one hand, took the bottle with the other. I didn't even wipe the neck. I just poured that water into my mouth, absorbed it like a sponge.\n\n\"Now if I get you hitting one of those punch bags with bare knuckles, odds are you're going to jam your wrist and skin your knuckles and if you're in a fight and you hit someone's elbows, knees, shoulders or worse, the upper head, and don't get it right, you're gonna seriously fuck up your hand. So in a real fight, your fist has a four to five hit shelf life before it goes numb or hurts too much to use. So you got maybe five good hits from each fist and you gotta win the fight in that time. And that means the only way to win a fight is you gotta do enough damage in that time so they can't hit you anymore.\"\n\nQuebec grinned. \"You got that?\"\n\n\"Yeah, five hits from each hand and then I'm in trouble.\"\n\n\"Not quite, you got your elbows, knees and feet as well, and you can use the side of your hand for a strike, and then there's head butts but we'll get into that next week.\" He chuckled. \"But you're getting it. So you don't wanna waste those five hits, 'kay. You gotta know the right target areas to hit, not just whack away at whatever you can reach. So you got three possible target zones. First, you got your opponent's head and the vulnerable targets there, those're eyes, temples, nose, chin.\" Quebec pointed to each in turn.\n\n\"Then you got the second group, neck, torso, groin and anything related to breathing, like the throat, the solar plexus, ribs, and groin. Last you got the legs and feet, anything that'll restrict your opponent's mobility and that's basically thighs, knees, shins, instep and toes. For those, you use your feet or your knees, and we're not even gonna think about those today. Just very basic blocks and strikes, that's all we're gonna do, okay?\"\n\n\"Okay,\" I nodded again.\n\n\"So here, I'm gonna put these on you.\" He picked up a couple of packets from the bench behind him, opened them, pulled out some glove-looking things. \"These here are quick wraps, they help with impact energy and they're gonna protect your knuckles during training as well as do wrist support.\"\n\nI managed to get them on after a bit of a struggle. They fitted tightly alright. They felt good on though. \n\n\"Okay, good, now bring both fists up by your face in guard like this ... always guard your head ... yeah, that's right ... hold your shoulders and core in tight... Yeah, that's good Blue ... now we're gonna work on your stance first, the way you stand ... now, for fighting, you should have a basic understanding of the center line theory ... so the center line, that's an imaginary vertical line that divides your body in half...\"\n\n\"...along this line you got some real vital targets that you gotta protect in a fight...\" Quebec was pointing now, working down. \"Eyes, nose, chin, throat, solar plexus and groin.\" He grinned again. \"And yeah, that works just about as well on girls as on guys so don't hesitate if you can kick her or knee her between the legs, go for it ... so what you gotta do Blue is, you gotta take a fighting stance that positions those targets away from direct hits, you gotta always always always remember that... so you gotta angle yourself to offset your center line like this ... Yeah, a bit more ... that's it... good work Blue.\"\n\n\"Now you gotta keep your chin slightly angled down when you're in any type of fighting stance. Getting your chin down lowers your head and chin, makes it harder to hit your eyes, nose, jaw, chin and throat... Yeah .. no, not to far ... That's good ... now you're in your stance, you gotta work on your weight distribution, keep your weight balanced on both feet equally, that's gonna help you move in any direction fast, makes it easier for you to defend yourself...\"\n\n\"Next thing is keep both your hands up, you gotta stay in guard when you're not punching, you gotta stop yourself from lowering your hands ... you do, your wide open ... now, watch me, keep your left hand by your face, punch with your right like this ... watch me do it slow ... now, extend your arm until it's straight but without locking your elbow... okay, now I wanna see you do it ... hit me here ... not hard yet, just get the movement right, keep your wrist straight ... now bring your right hand back ... bounce on your feet while you punch out ... keep bouncing ... that's it Blue ... good ... keep going ... take your time, we're not going for speed here, we wanna get the technique right first ... good ... that's good...\"\n\n\"When you punch, keep your other hand up ...guard ... guard ... that's it ... yeah, good one Blue.\"\n\nAfter a couple of minutes Quebec had me swapping hands, punching with my left, correcting my stance, keeping me bouncing. I was pouring sweat again, my legs burning, ankles burning, arms burning, lungs burning. Jesus, it hurt but I wasn't stopping, not until he told me to. Or I died. I was probably gonna die.\n\nQuebec knew. \"The art of pain Blue, you're beginning to get it now.\" He grinned. \"Okay, now we're gonna do a series together, some light sparring, do a left-right-left, right-left-right series of punches using a 1-2-3 count. Punch as quickly as you can, hit me right here, I'll do the count, we're gonna do three sets of three minutes each with a breather in between.\"\n\nFifteen minutes later I could barely raise my arms, my bounce had gone. I'd been wet before. Now? Now I felt like I'd been caught in a rainstorm. Light sparring? Is that what he'd said? Jesus. If that was light, I was a frigging unicorn.\n\n\"... and now we're gonna do some basic blocking, nothing fancy, just blocking the types of strikes that bitch was using on you... so first you show me again how she hit you, then I'm gonna show you a couple of blocks and we're gonna work on those...\"\n\nFifteen minutes later the rest of me could barely move. Looking at the clock on the wall, I'd been going for an hour and a half. I was sweat soaked panting jelly. I'd never felt this exhausted in my life.\n\n\"Stretches,\" Quebec chuckled. We did. Stretches. Slow stretches. By the time we'd finished I could barely stand. Everything hurt. Everything. \"Hydrate first, then lie down on the mat and breathe,\" Quebec grinned. \"You've done real good for your first day, Blue, now I'm gonna talk and your gonna listen. Just take in what you can coz you're gonna hear this again and again, okay.\"\n\nI nodded. I didn't even have the breath to say okay. I drank and then I was sitting on the mat, then lying, just lying there and breathing, letting my muscles relax, feeling the slow burn. It felt so good to just lie there, not moving. Bliss.\n\nQuebec squatted down beside me. He'd paced me the whole time and he wasn't even sweating. Bastard! \"That was good Blue, a real good start. Now when you're in a fight, like on your school bus, things happen real quick, you get totally jacked on adrenaline, you're not thinking, you just react, so what we're doing, we're training you to react the right way. We want to get those motor patterns in your head so when someone tries to hit you, you react the way we're practicing. The more we practice, the easier it is to react the right way.\"\n\n\"The other thing we gotta do is train you to throw counter punches when you're being hit, you defend and attack at the same time. ... In a real fight, you're gonna be under a lot of stress. When you tense up from stress, you hold your breath, so we also gotta work on your breathing. You breath properly, you're gonna relax, your cardio-respiratory system, it'll recover faster that way. The other thing you gotta remember is hit first, hit fast and hard and keep the pressure on whoever you're fighting, keep them off balance and attack.\"\n\n\"Now there's a whole bunch of other stuff but that's what we're gonna work on for the next month. Just the absolute basics, nothing fancy. So like I said when we started, fitness, flexibility, power, speed and some real basic techniques. So Monday when you come in, we're gonna work on power. You gotta build up some good explosive strength so Monday we'll be doing Push Presses, Deadlifts, Squats, Chest Presses, High Pulls, Cleans, Snatches and a few variations along with some light punching and blocking drills, then Tuesday we'll do some groundwork ...\"\n\n...\n\n\"Wake-up Jay-Lin.\" Keith's voice snapped my eyes open. I was still flat on my back on the mat but now Quebec and Keith were standing there looking down at me. Keith was smiling. I smiled back. If my heart hadn't still been pounding, it would have been pounding. \n\n\"Okay Blue, you can call it an evening, well done.\" Quebec was smiling. He grinned at Keith. \"She really worked, muscles gonna be sore, best give her a good massage.\"\n\nKeith nodded, smiling down at me. \"Looking good Jay-Lin.\"\n\nHuh. Looking good? Me? I didn't think so! I felt like a dishrag. Everything I wore was soaked through with sweat. I stank. Stank? I could smell myself without even trying. I reeked of sweat. My tracksuit pants, my sports bra, my t-shirt were soaked through. I was dripping sweat, wiping it from my eyes. Even my hair was wet, except maybe the very tip of my ponytail. I didn't even have the strength left to swear. I needed every bit of strength I had to sit up. I had to use my hands to push myself up from the floor and that hurt too. When I stood I felt dizzy. \n\n\"Bend over, put your hands on your knees, just breath.\" Quebec knelt, wiped my face with a towel.\n\nI did. I could barely stand. My legs had turned to jelly. All of me was jelly. Jelly that hurt. Jesus, if I had to do this for an entire month I was going to die. Being beaten up by the Chua bitch might actually be a less painful way to go.\n\n\"Let's get you home Jay-Lin,\" Keith was smiling, his arm around me as I straightened up. God, I was so messy, I didn't want to get his clothes mucked up. I didn't have the energy to protest though. I was wiped. Completely wiped.\n\n\"Please,\" I said. God, I so needed that shower. I just wasn't sure I'd be able to stand in it by myself though. I might need some help. I looked at Keith. I smiled. ",
        "Keith saw my smile. He looked at me for a moment, then grinned. It was like he was reading my mind, I was sure. I felt my nipples tightening just from that look.\n\n\"See you Monday Blue, you did real good today girl.\" Quebec was looking from Keith to me and back again, grinning. \"You guys have yourselves a good weekend.\"\n\n\"Thanks Quebec,\" I said. \n\n\"You too Quebec,\" Keith said, \"and thanks bro.\"\n\n\"Never a problem for a brother Round Out.\" Quebec was still smiling as I staggered away, Keith's arm around me, my gym bag and my rucksack in his other hand. \n\n\"You go, Baby Blue. Doing real good there girl.\" One of the guys training on the weight machines gave me a grin as I staggered past.\n\nI gave him a weak grimace that was meant to be a smile back. He grinned through the sheen of sweat on his face. Good. I wasn't the only one sweating. On the far side of the gym, Olaf and another guy were sparring. Kicking and punching. They were wearing padding, lots of padding, but the sheer violence, the speed and the power of those kicks and punches was terrifying. They reminded me of my cousin Hayley that last time she'd come to stay. I'd gone with her to watch her compete in a Tae Kwon Do tournament. Watching her fight had been scary, the way she could kick and strike so quickly, so hard, so viciously.\n\nWatching Olaf was like that, except scarier still. If one of those kicks or punches hit me, it'd rip me in half. I watched the dust fly of off Olaf as a kick hit home. Just for a second, hearing the noise and seeing the power of the impact, thinking what would happen to me if a kick like that hit me, I wanted to curl up in sheer terror. \n\nKeith must have noticed. He patted my shoulder. \"Don't even think about it Jay-Lin, there's not a woman in the world could take on a guy like Olaf, not even Ronda Rousey.\"\n\n\"Ronda who?\"\n\n\"Ohhhhhkay.\" Keith was smiling at me. \"I can see we've got some videos to watch together.\"\n\n\"Okay.\" My mind was a blank. Pure exhaustion.\n\nThe silence after the gym door shut behind us was heaven. The coolness of the air in that hallway as we walked towards the outside door was bliss.\n\n\"What time do you have to be home?\" Keith asked me. We were outside, walking down the pavement towards his truck. The evening air was a welcome breeze, doing its best to cool me. Failing miserably.\n\n\"Anytime really,\" I said, enjoying his arm around me. \"I can call Mom and Dad and tell them I'll be home later. As long as I call them and tell them, they won't worry.\"\n\n\"Want to come to my place and take a shower? We can go grab something to eat and then I can drive you home.\"\n\nGo to Keith's place. Oh yes please. I was so curious. I wanted to see where Keith lived. Apartment? House? \"I'd love to.\"\n\n\"Okay, call your parents once we're in the truck.\" He glanced at his watch. \"Tell them I'll drop you home about ten, okay.\"\n\n\"Great.\" He was already opening the door, flipping a towel out to cover the seat, helping me in.\n\nCharlie was there, lying on the pavement with some sheets of cardboard underneath him, his head on a pile of newspaper, a tattered old coat over him. Asleep or unconscious. An empty bottle in one hand. Okay, probably unconscious. The donut box was there, empty. \n\nI pulled my phone out, calling my Mom's number as soon as I was sitting down. She didn't answer. I left her a message, then did the same with my Dad, then called our home phone, leaving another message. Keith grinned at me. Done, I tucked my phone away, sitting back, limp. Keith started the truck, pulled out. \n\nMy eyes closed. I was exhausted. I'd never been so exhausted in my life.\n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\nI woke up, still in the cab, feeling hot and sticky and dirty, smelling myself. I reeked but at least I seemed to have stopped sweating and my breathing was back to normal. The towel Keith had covered the seat with beneath me was soaked.\n\n\"Almost there,\" Keith said as we pulled away from some lights, passing me a cool wet wipe.\n\nIt felt so good to wipe my face and forehead. I had no idea where we were. Keith hadn't actually told me where he lived. \"Where's there?\" I asked.\n\nHe grinned. \"Of off Courtenay Drive. ... Here, drink some of this.\" He handed me a large container of low fat chocolate milk and a straw. \"Chocolate Milk. Believe it or not, it's just as good as all the expensive recovery drinks,\" he said as I drank. \n\nAnd drank. And drank. Feeling myself coming back to life. It worked for me. While drinking, I looked out the window. Now that he'd given me a clue, I recognized where we were. Bars. Restaurants. Coffee shops. Trendy stores. Clubs. Courtenay Drive was the hub of the entertainment district. A one mile long strip of nightlife. I'd been there clubbing with Ginny and our other friends a few times. I'd been there for dinner a few times with my parents and their friends as well. There were some nice restaurants. I recognized the Darjeeling Polo Club as we drove past. They did these divine roasted pork hocks to die for.\n\nMy stomach realized what my eyes were looking at and said \"hungry\" rather too loudly. Keith glanced at me, grinning. God, had it been that loud? Now I was embarrassed. Mind you, I was so flushed that you couldn't have told that I was blushing.\n\n\"Shower at my place, then food.\" He was smiling at me.\n\nI smiled back, still too tired to talk although I felt a lot better after that nap and the chocolate milk. That sounded like a plan. Except I'd add in something else after the food. I smiled. The truck slowed, turned right at some lights, drove slowly down a side street right at the middle of Courtenay Drive. Of either side and down to the river, the whole area had once been old warehouses, small low-rise factories and office buildings, often a combination of all three uses, three and four story brick buildings from the nineteenth century. They weren't industrial anymore.\n\nThe whole area had been gentrified over the last ten to fifteen years. Was still being gentrified as a matter of fact, slowly spreading outwards. Now it was a mix of trendy downtown loft conversions, small businesses, new and old businesses that liked to look trendy even if they weren't, all mixed in with the bars, restaurants, cafes and shops that were spreading beyond the confines of Courtenay Drive itself. I liked this part of town. Did Keith live here? He didn't look like the sort of person that would live in the center of downtown yuppiedom; but then, I found it hard to imagine where I thought Keith might live. He didn't look like a house in the suburbs sort of guy either.\n\nIf I'd had to come up with something, I'd have said one of those working class subdivisions with the smaller houses, those old houses from the twenties and thirties or maybe immediately post-world war two, that kind of place. Looked like I would've been wrong. I guess I'd see. Mind you, he had said something about working for himself when we'd been talking last weekend. I wondered what he actually did. One of these days I'd ask.\n\nThat side-street that we'd turned into was humming. It was one of those wide old streets made for trucks and warehouses. Now, with no trucks, there were wide tree-lined sidewalks, raised flowerbeds, ornate cast-iron lampposts, bench seats here and there, angle parking, all lined by bars, restaurants, caf\u00e9s with patios on the sidewalks and trendy looking shops. All the sorts of things yuppies liked to go with their Sumatran cat-poop lattes. And no, I wasn't a Sumatran cat-poop latte sort of girl. More a bubble-tea girl, really. I glanced at Keith. Nope, he wasn't a Sumatran cat-poop latte sort of guy. He was grinning that mischievous shit-eating grin of his that I already knew meant some kind of a surprise for me.\n\nI waited. Waiting was easy, requiring no expenditure of energy. Right now, I liked waiting.\n\nWe slowed. The indicator started flashing. Turning left into a cobblestone-paved alleyway, brick walls rose high on either side, a narrow brick canyon, cars parked tight against the walls down one side. The truck juddered its way past them. Keith hit the garage door opener clipped to the visor above me. To our left, a large steel gate on rollers whispered open. Keith nosed the truck round and through, into what looked like a large cobblestone-paved courtyard surrounded by high brick walls topped with barbed wire. The door whispered closed behind us. We were at the rear of one of those old industrial buildings, an old factory loading bay ran down the back of the building, there was a large garage, double doored, on my side. Keith parked in next to the garage.\n\n\"We're here,\" seemed rather unnecessary, given he'd turned the engine off. I opened my door, went to slide out, found myself groaning, barely able to lift my legs. God, I was so stiff and sore. My muscles hurt. All of them. Muscles I didn't even know I had hurt. I'd never felt like this, not even in my first year at High School when I'd been on the swim team. Our coach had been a real bitch, I'd given it a pass after the first year. Now, after Quebec, that coach actually seemed rather nice.\n\n\"Stay there Jay-Lin, I'll come and help you out.\"\n\nSounded like a great idea to me. Keith didn't just help me. He slung my backpack over his shoulder, hung my gym bag over the top, lifting me out as if I was a feather. It felt so nice to be carried like a baby. His baby. Keith's baby.\n\n\"Jay-Lin,\" he said, kissing my sweaty forehead, \"welcome to my ever so humble home.\" I squealed when he licked my neck as well. \"Mmmmm, tasty.\" Squealed and giggled. But I didn't wriggle. I tilted my head so he could lick me some more. He did, sending little shivers down my spine. He didn't put me down right away either. He kicked the truck door shut, carried me across the courtyard and up a concrete ramp, stopping outside a roller door with a steel door to one side. \"I have to put you down to open the door,\" he sounded apologetic, lowering me to my feet, but only after he'd kissed me again. He didn't seem to mind that I was all sweaty.\n\nStanding was okay. It was only moving that really hurt. That steel door was heavy, I could tell. Even Keith had to exert a bit of effort to open it. Taking my hand, he led me inside, the lights coming on automatically. We were in what looked like a large triple-garage sized workshop, bigger than my parent's garage. Way bigger. I recognized Keith's Harley sitting just inside the roller door. An old couch and a large fridge sat at the rear against a brick wall. \n\nThe room was lined with an assortment of industrial furniture. Workbenches covered in what I guessed must be motorcycle parts, what looked like a partly disassembled engine on one, more parts strewn around it, tools hanging on the walls, big steel work cabinets, machine tools of one kind or another, a couple of stands with motorcycles on them, partly stripped down. Motorcycle magazines scattered around. The whole room smelled of oil and paint and metal and machines.\n\n\"I'm rebuilding a couple of Harley's,\" he said, answering my look. \"There's a couple of old bikes over there I fixed up that I don't ride much anymore, maybe get round to selling them one of these days.\" He pointed, \"And that one's an old 1965 AJS 650, got her two years ago, fixing her up but parts, man, they're hard to get. She's a bit of a museum piece. Like that old Norton Commando over there.\" He looked at me and grinned. \"Come on, I can show you all this tomorrow, let's get you into the shower.\"\n\nI wondered if Keith lived here, with his motorcycles. It looked pretty industrial. Concrete floor mostly covered with that grey diamond tread stuff. The same stuff Dad had put down on our garage floor which was the only reason I knew what it was. I'd had to help. Brick walls. Concrete pillars. I mean, my heart sank a little but really, I wouldn't mind if he had a room off the workshop or anything, although it wasn't quite what I'd envisaged. But if this was where Keith lived, I'd do my best to accept it. I knew not everyone lived like my parents.\n\n\"Okay,\" was all I said. I really wanted that shower. I just hoped his shower was clean.\n\nHe took my hand and led me across the workshop. \"Sorry about this, we're coming in the back door,\" he said apologetically, leading me to another big steel door, unlocking it, swinging it open.\n\nMy first reaction was surprise. Then curiosity. I wasn't seeing what I'd expected to see. Keith led me through the door into a beautiful marble-floored, wooden-paneled foyer lit by a chandelier hanging from a white plastered ceiling lined with these beautiful old cornices. While he shut the door behind us, I looked around, fascinated. \n\nNo, this was not at all what I expected. It certainly wasn't industrial. Okay, I read too many of those Georgette Heyer regency romances. This was almost like what I imagined the foyer to one of those old English manor houses to be. Except it was in the middle of downtown in an old industrial building. Somebody had done an amazing renovation.\n\nThere were a couple of large paintings on the walls that in some strange way fitted the decor, motorcycle art of some sort. I looked closer. David Mann? Never heard of him. A couple of solid looking chairs with a small table separating them. Opposite me was what looked like a large walk-in closet or a small cloakroom, through the open door of which I could see coats, boots, a couple of helmets, assorted clothing that looked to me like stuff you'd wear on a motorcycle. Was this Keith's? I could see a washroom there too. At the rear were wide wooden stairs leading upwards, those stairs you get in large old nineteenth century houses and office buildings. Wide, with big landings, hand-carved balustrades and wooden paneling. Against the far wall and opening towards where the front of the building must be was another large wooden door.\n\n\"That's my front door,\" Keith said helpfully. Soreness almost forgotten in a wave of curiosity, I followed him over, looking out past him when he opened it. A wide tile-floored hallway led towards the street, I could see stairs and, almost beside the door we were looking out from, one of those old old elevators, the ones where the doors were a steel grill that you had to pull shut by hand.\n\n\"Wow!\" was all I could say as Keith shut the door, cutting of the noise immediately. \"But where do you live?\"\n\n\"I'm upstairs,\" Keith locked the door as he spoke. He looked at me. \"I'll carry you up.\" He didn't wait for me to say yes or no. He swept me off my feet as if I was a feather. \"It's my private stairwell,\" he told me as we climbed. Well, he climbed, I just lay back in his arms, my head resting wetly on his shoulder. \"There's another stairwell and that elevator at the front for the tenants we can use as well but we're going up MY private stairs.\"\n\nKeith had a private stairwell? This was his private stairs? Tenants? Huh? No, this was certainly NOT what I'd expected. No way.\n\n\"What's in the building?\" I asked, \"Besides your apartment.\" I wondered what sort of apartment he had. I'd never been in any apartment's downtown but I'd seen the advertisements for some of those loft conversions they were doing down around here. The apartments they carved out were either tiny, meant for either one person or for a professional couple, or larger and priced extortionately high in my opinion, but I was no real estate expert. I guessed if Keith lived here by himself, his apartment wasn't that big but wow, that foyer and these stairs, they weren't pokey. \n\nThese must be the original stairs, wide, polished wood, beautifully carved balustrades, wood paneled walls. Large windows on each landing, looking out over the courtyard and the alleyway below I assumed. The location was nice too. But what was it with this private stairwell? Was that just Keith's? He'd said it was. And how come his motorcycle stuff was down there in that huge workshop? That sort of space down here in this part of town would cost a fortune to rent.\n\n\"There's a twenty four hour gym in the basement and a bar and grill on the ground floor,\" Keith said. God, he was so strong, carrying me up the stairs effortlessly, talking conversationally at the same time. I didn't mind. Not at all. Lying in Keith's arms all sweaty and tired was where I wanted to be. Just, I'd rather I was sweaty and tired from making out with Keith, not working out with Quebec. There was a difference. \"Restaurant on the first floor, second, third and fourth floors are professional offices, I live on the fifth floor.\"\n\nWe were already on the second floor landing with no slowing of pace. \"We'll go downstairs to the restaurant for dinner, the guy that runs it, Jean-Paul, he's this French guy, great chef, we get on. Great menu. He does these amazing flamb\u00e9s right at your table. I called him while you were sleeping, asked him to hold a table for us.\"\n\n\"Flamb\u00e9? Sounds like my Mom barbequing,\" I giggled. Mom could cook on a stove, just, but give her a barbeque and she'd set fire to everything in seconds flat. Dad and I refused to let her near ours.\n\n\"Here we are.\" Keith set me down on a gleaming white-with-flecks-of-grey marble-floored landing outside an arched wooden double-door entrance. I looked around. The only other door was on the outside wall, marked \"Fire Escape.\" Opening those ornate double doors wide, he smiled. \"Come in, Jay-Lin.\"\n\nI stepped inside. Immediately I felt silly all over again. I'd more or less been expecting a small or maybe a mid-sized urban loft. Something modern and urban; like in the advertisements. All white paint and modern furniture and not that big. I'd been expecting wrong. Totally. Again. \n\nHis home was as rugged and beautiful as Keith himself. My first impression was of gleaming hardwood floors colored dark honey stretching into the distance. The floor was completely open, from the back of the building all the way to the front, from one side to the other. From where we were standing near the rear, you could see all the way to the front of the building where huge old paned-glass windows ran from waist height almost to the ceiling thirty feet up, looking out over the street. There were more windows beside where we stood, stretching across the width of the rear wall, just as big. The entire floor was one huge open plan area, stripped down to show the old brick walls and the thick supporting pillars at regular intervals. \n\nThere was even a large brick fireplace against one sidewall, the one that faced out onto the alleyway. If there'd been a ceiling, it was long gone, revealing a high-pitched timber-lined roof along with the old wooden rafters and supporting beams, hugely thick rough-hewn beams dark with age, supporting what must surely be the roof. Down one side if the roof were skylight windows. The floor itself was all old wooden planks, polished to a glowing dark-honey. The entire loft seemed to be all old wood, brick, glass, open space, gorgeous rugs, dark leather and wood furniture broken only by a modernistic kitchen. Keith took my hand, led me inside, shutting the doors behind us.\n\nOkay, I stared. I just stared. This was Keith's apartment? Wow! This was a glimpse into Keith's soul, into the Keith I was so desperate to know better -- and it was stunning. Like him.\n\n\"Like it?\" Keith smiled. He sounded a little anxious.\n\n\"Wow!\" I had to say it. \"Just, wow Keith. This is amazing.\"\n\nIt was. \n\n\"How ... How big is this place?\" I gasped, wide-eyed, looking around, taking in the kitchen in one corner. \"It's all yours? The whole floor?\"\n\n\"'Bout a hundred forty feet deep, sixty wide,\" Keith said. \"And yup, this floor's mine.\" He grinned, leading me by the hand out into the center of the floor. \"Bedroom's up there.\" He turned me and pointed. \"Mezzanine.\"\n\nI hadn't even noticed it before. It'd been above where we were standing, by those doors he'd led me in through. The ceiling in the main area was about thirty feet up, but back where we'd come in, a mezzanine floor had been built in right across the rear, with wide wooden stairs leading up to it on one side. ",
        "\"And my bathroom,\" he added.\n\nI felt a little faint. \"Is ... is the building yours or something?\" I asked. Or was Keith a secret billionaire, like in all the worst hot romance novels I read. He couldn't be? Could he? The thought made me feel a little sick. No, please god, no. That'd be awful.\n\nKeith smiled. \"Yeah, well, the building's mine. Bought it about ten years ago for a song after I got out, they were just about giving these buildings away back then to anybody that wanted to take them off the City's hands. Most of them the City picked up from tax foreclosures, nobody wanted them back then. So I scraped together every dollar I could, borrowed some more, got the biggest mortgage I could and it was just enough to buy this one. Did most of the renovations myself over the first few years, hired a few guys now and then, did it floor by floor. Paying off now though. The income's already paid of the mortgage, I pretty much work for fun now.\"\n\nOh thank god. I was SO relieved. Okay, Keith was well off, well off like my parents but not, like, super rich. My heart, which had been racing, slowed. \n\n\"It's...\" I looked around, then looked at Keith. \"Can I have that shower first and then you can show me round? I want to see everything, but I want to see it without dripping sweat everywhere.\" And yeah, I was still soaked. Completely. I felt like I'd been in a rainstorm.\n\n\"Come on then sweetheart.\" Sweetheart? He'd called me sweetheart? I glowed as he took my hand, led me up the stairs to the mezzanine. The first thing I saw was his bed. This huge bed, immense pieces of dark wood with slatted wooden head and foot boards that completely dominated the room. The other furniture in that room matched the bed, darkly glowing wood with thick rugs here and there. I looked at them, recognized the design from one of my books on textiles. Were those real Aubusson rugs? Or reproductions? I so was not going to ask but they were perfect for the room and the furniture. \n\nI looked back at his bed, at linen the color of soft cream, at him, then at the bed again. I wanted to be on that bed. I wanted to lie on that bed naked with Keith looking down at me with that look of desire in his eyes. I wanted to lie there and know that he wanted me, that he knew I was his, all his. I wanted him to kiss me everywhere. I wanted him to do anything he wanted to me on that bed. I looked back at him, my eyes wide, panting. Bedroom eyes. My nipples were swollen and hard just thinking about it, I was wet inside now, as well as out. Just from looking at his bed while he held my hand. \n\nWhen my eyes met his, I knew he knew what I was thinking. He knew that I knew that he knew. That slow smile lit up his face. Glancing down, I saw that bulge inside his jeans growing, swelling. Now I smiled, I blushed, my heartbeat quickening, knowing he wanted me. Knowing that just looking at me excited him. Just like looking at him excited me. Made me want him so much.\n\n\"Bathroom's over here.\" Keith was looking at me, grinning. \"Come and take that shower.\" His hand still held mine. \"First,\" he added. I followed him across the mezzanine floor, the polished wood silkily smooth under my feet. I wanted to look at everything in his bedroom, in his apartment, every single thing. I wanted to wander around it with Keith while he showed me everything here. But first I was going to shower and scrub myself clean.\n\nThe bathroom he led me into was a sybarite's dream. Well, my dream anyhow. It was everything I'd ever thought a bathroom should be combined into one huge room.\n\n\"Wow,\" I said, trying to take everything in yet again. \"Keith, this is ... it's just ... wow!\"\n\nIt was. I had to just stand there and look for a minute. Like the rest of his loft, the bathroom was all old brick and stone and glowing dark-honey timber with beautiful slate tiles warm beneath my feet. A gigantic tub sat squarely in front of those large windows that here, on the mezzanine, ran up from the floor. There was even a fireplace beside the shower, a gas fire this time. \n\n\"Shower's here,\" Keith pointed out the obvious. \"Leave your clothes on the floor, I'll put them in the washer, I'll get you some more towels.\" He vanished back out the door.\n\nMy sodden clothes peeled off reluctantly, clinging wetly. I dropped them where I stood, stepping into the huge glass-walled shower. When I turned the taps, water flooded out from four monsoon shower heads, beautifully warm and relaxing, even better when I adjusted them to pummel me all over. Bliss. I found Keith's shampoo, looked at the bottle. He used L'Or\u00e9al Men? Hmmm. I lathered it into my hair, rinsed, repeated, feeling the sweat and oil and dirt washing out. Another rinse, my face raised to the shower head, eyes closed, water pouring over me as I found the bar of soap and lathered it over my body, feeling the sweat and the dirt scrubbing away.\n\nIt felt so good to soap myself down, to wash myself clean. Standing naked in Keith's shower instead of my own, I was somehow far more aware of my body, of its shape and its curves and the way it felt to touch myself. Knowing Keith was out there, waiting for me, remembering what we'd done together only yesterday evening, that made showering entirely different. Washing between my legs, I felt a sudden surge of excitement, a knotting in the pit of my stomach as I thought about Keith licking me there as I lay before him. As I thought about his bed.\n\nI'd seen the way he'd looked at me just now too, the expression on his face, the excitement. Had just looking at me like that excited him? I knew it had excited me. I soaped herself some more, feeling my clitoris swelling and aching as she touched herself gently. My fingertips moved over myself, feeling my own wet excitement, exploring, rubbing my clitoris slowly with my fingertips. But I didn't want my own fingers on me, my own touch. I wanted Keith's.\n\nOpening my eyes, I rinsed myself down, turning and twisting under that warm flood, soaping myself again, rinsing myself down one last time. Now I felt spotlessly clean. Clean, refreshed, relaxed and happy. Turning off the taps, stepping out of the shower, I found myself standing in front of that fireplace, but now it was on. The warmth was pure bliss as I took one of the towels Keith had put out for me. Big white fluffy towels. Warm towels. Wow. And he'd left a hairdryer and hairbrush out for me on the granite surfaced vanity. If I'd had any bounce left, I'd have been dancing around that bathroom as I dried myself, then dried and brushed out my hair. Okay, time to dress. \n\nDress?\n\nI hadn't bought any clothes other than my school uniform and my workout clothes. I'd expected to go home after Quebec's, not go to Keith's. My sweat-soaked workout clothes that I'd left in a wet and sweaty pile on the floor had vanished. My school uniform was in my bag by Keith's back door -- and those were all I had to wear. I wrapped myself in one of those wonderful warm fluffy towels and stepped out of the bathroom. Keith wasn't in his bedroom but he must have heard the bathroom door.\n\n\"Clothes are on the bed,\" his voice came from downstairs.\n\n\"Okay,\" I called back, walking all the way across the room to the bed. Yup, clothes. Not mine. They were girl's clothes though. A little black dress and little black panties. Panties? I blinked. He'd bought clothes for me? I giggled, thinking of Keith shopping for girl's clothes. My clothes. He must have been thinking about me coming here earlier than tonight. I picked up those little panties of black lace, examined them. Kiki de Montparnasse? Wow! Just, wow! I'd never owned such sexy little panties. Not just that, they were sexy little designer panties. I'd been to the Kiki de Montparnasse website of course, examined their catalog, along with Victoria's Secret and a few more. I'd dreamt of myself in lingerie like this. What teenage girl didn't? \n\nBut where had Keith learned about Kiki de Montparnasse? Not that it mattered, it was enough that he'd bought them for me. More than enough. \n\nWith a happy little wriggle, I dropped the towel. I slipped into those panties, admired myself in his dresser mirror. Just seeing myself in them sent those little ripples of excitement racing through me. I was in my panties in Keith's bedroom, right next to his bed. Tiny little black Kiki de Montparnasse panties. I turned, my back to the mirror, looking over my shoulder, checking out my butt. I hoped Keith liked that view. I did.\n\n\"Didn't know your bra size,\" Keith called out.\n\n\"No problem,\" I called back. I could get away without a bra. It wasn't like I really needed one. The problem was, I didn't want to get dressed. I wanted Keith to see me in my new Kiki de Montparnasse panties. I wanted him to want me so much. I mean, I was hungry, I was starving, but there were more important things than eating.\n\nLike teasing Keith. \n\nLike exciting Keith.\n\nLike satisfying Keith's desires.\n\nI smiled, picking up that little black dress. I looked at it. Holding it in one hand, my heart pounding, that tight clenching feeling knotting up my insides, dressed only in those little black panties Keith had bought for me to wear, I walked down the stairs from the mezzanine to the main floor of his loft.\n\n\"Did you like the ...\" Keith was in his kitchen, his back to me. He turned around as he spoke, holding two empty champagne glasses. \"...dress? ...\" His voice tailed away. His eyes widened. He looked at me. He looked at me and, very slowly, he smiled.\n\n\"Mmmmm.\" I paused, standing still, enjoying his eyes on me. \"I do. But I need some help putting the dress on.\" I smiled. \"Maybe you could ... help?\" \n\nMy heart was pounding now. Beating like a birds, fast and fluttery as he placed those champagne glasses on the counter before walking towards me. My nipples seemed to swell. Swell and ache with the need for his touch, wanting his hands and his mouth on me. \n\n\"Maybe I couldn't,\" he breathed, taking me into his arms so that my body was pressed against his. I dropped that little black dress on the floor, my arms going around his neck, my breasts pressing against the material of his shirt, his hands on my butt, pulling me hard against him. I could feel how hard he was beneath his jeans, that hard bulge that pressed against me so that I squirmed under his hands, rubbing myself against him, feeling myself melt, feeling myself so hot and wet. Feeling his hands on my butt, already under my panties, cupping me, holding me, his fingers pressing into me, lifting me just a little; pressing me so firmly against him.\n\nI looked up at his face, looked up into those sky-blue eyes. Melting. \"I'm so wet,\" I gasped, unable to believe just how wet I was. How excited I was. \n\n\"I should check that out.\" His voice whispered in my ear.\n\n\"Please,\" I breathed, my heart doing a wild little dance, my sex doing a wet little dance.\n\nHis hands on my butt held me, lifted me upwards so that my feet left the floor; pressed me against him, against his erection. My arms clung around his neck while he walked me towards one of those big black leather couches, kissing me, kissing me so possessively. My mouth opened wide, opened to him, moaning into his mouth as his tongue delved deeply, taking possession of my mouth, his kiss so exquisitely what I wanted. What I needed.\n\nHe lowered me to the couch as I clung to him, lowered me onto my back, the black leather deliciously cool and soft against my skin. Propped up on one elbow beside me, his hand large and firm on my stomach, he looked down at me, his expression so serious, so intent. One of my hands reached up, stroking his cheek, running my fingers down that strong jawline, touching him as my eyes soaked in the rugged masculine beauty of his face, the desire for me that shone in his eyes, in the way that he looked at me.\n\nI said the first thing that came into my head. \"I love you, Keith.\"\n\nHis hand circled slowly on my stomach, his fingers on my skin, pressing lightly into me, sending shockwaves of pleasure jolting through me. His nose touched mind, his eyes looked into mine, holding me, captivating me. \"Jay-Lin, I love you.\" His lips brushed mine. \"I love you so much.\" I felt him shudder against me. Press against me. His erection so hard against my thigh. \"I want you so much my little darling.\"\n\n\"Take me then,\" I whispered, my hand moving from his cheek to the hand that now kneaded my stomach. Forgetting all about those aches and pains from Quebec's workout, I took his hand and pushed it downwards, down to my panties. Those little black lace Kiki de Montparnasse panties that he'd bought for me. That were his to take off me.\n\n\"Feel how much I want you.\" My voice was a gasp, my cheeks burned. My body burned, hot and so alive, aches and pains forgotten. Nothing mattered except Keith. Nothing. I wanted him so much. \"Touch me\". \n\nHis hand slipped down inside my panties, his fingertips sliding downwards over my skin, anticipation sending ripples of excitement through me as my knees fell apart. Fingertips brushed my labia, found me so slippery wet and ready. Meltingly ready. One fingertip probed gently inwards, slipping easily between my labia, finding my entrance, pausing there for a moment.\n\n\"Ohhhhhhhhhh.\" My moan was one long breath of exquisite longing and surrender and love as I felt his fingertip exactly where I wanted it.\n\n\"Uuughhhh.\" His fingertip pushed, my back arched just a little at that intimate and still unfamiliar pressure, so new and so exciting. I felt myself open, there was that heart-stopping moment of surrender as I felt his finger slide through my entrance, slide up inside me, pushing, penetrating, not stopping until the full length of his finger was inside me, his other fingers pressed up against my slippery swollen labia. I lay before him, looking up at him, feeling his finger inside me, feeling my inner walls clasping him, feeling his hand cupping my sex inside my panties. Feeling everything. I was his, I knew that. I wanted to be completely his, completely Keith's. I wanted to give him everything I had to offer, my body, my soul, my love. Everything.\n\nI wanted to tell him that. I wanted to share that with him. I wanted to tell him I loved him. I wanted to hear him tell me he loved me. I wanted him to breathe my name. I wanted him to take me and make me his. I wanted Keith to make love to me. I wanted him inside me. I wanted to tell him that. I opened my mouth.\n\n\"OOOOOHHHH.\" His finger moved inside me. My words fled. Fled like startled birds, those thoughts vanishing in an instant. All that was left was the sheer physical pleasure of his finger moving inside my sex, the exquisite sensations as his finger slid outwards between my labia, then inwards again, feeling his finger moving inside me, slipping into me, pressing against my inner walls, his hand stroking and pressing against my labia, feeling myself so wet everywhere he touched me.\n\n\"Keith ... ohhhh Keith...\" My hips bucked upwards, pushing against his hand, his finger, wanting more. I twisted in his arms, turning towards him, one hand sliding behind the back of his head, pulling his head down towards me as my mouth searched for blindly his. It was his mouth that found mine, his lips tenderly meeting mine, sealing to them as my mouth opened wide, as I sucked at his tongue, as my tongue danced intimately with his, tasting him, savoring him, wanting him, wanting his tongue in my mouth just as his finger was in me. Wanting him to possess me.\n\nHis hand pushed my hips down, grinding against the swollen sensitivity of my clitoris as his finger twisted exquisitely inside me. One of my hands frantically worked at his jeans, undoing his belt, unzipping him, slipping inside, working my fingers under his boxers, finding what I was looking for so eagerly. I held his cock in one hand, feeling him so rigid, so hard. Wanting him so much. So very much. His cock was big, yes. My heart pounded as I felt the girth of him, the length. So big. So hard. I was scared, what girl wouldn't be? I'd never done this before. Keith was so big compared to me, his cock felt so big, but I knew I wanted it. I wanted his cock where his finger was. I wanted it badly. \n\n\"Keith,\" I whispered, my hand stroking him slowly. I felt him tense as my hand moved, saw his face move, his expression change. Yes! \"You can do it to me if you want to.\" His finger twisted inside me, pressed against me inside. \"Ohhhhhhhh ... I want you Keith ... I want you to take me... please...\" I squirmed on his finger, my hips lifting, pushing against his hand, not embarrassed at all at the wet noises I heard myself making. \"I want you in me Keith...\"\n\nMy hand stroked him with jerky excitement. I did. I almost had him, I knew. Any moment now he was going to remove my panties and then ... \n\n\"Jay-Lin... Jesus Jay-Lin ... you've got no idea what you're doing to me, girl.\"\n\nI did. I had every idea. I smiled up at him, my fingers teasing him, feeling him shudder, seeing the desire flare across his face as I squeezed his finger with my sex, shuddering with delight myself. \"I don't know,\" I gasped, \"but I hope you know what you're doing to me coz I want you Keith ... I want you so much.\"\n\nMy hand tugged lightly at him just as he removed his finger from me, eased his hand out from inside my panties. His finger moved on my skin, he was going to take my panties off, I knew he was. I wanted his finger back inside me but I wanted my panties taken from me even more. The emptiness where his finger had been warred against the heated anticipation as I waited, my hand slowly stroking him.\n\nHis cellphone rang. His hand, which had been about to remove my panties, I knew, removed his cellphone from the back of his jeans instead. He glanced at the cellphone, looked back at me, breathing hard. \"Our table's ready Jay-Lin.\"\n\nI looked up at him, my heart beating like a drum. \"Keith ...\" I didn't want to stop. I was hungry, I wanted food. But I wanted Keith more. So much more.\n\n\"Dinner first, Jay-Lin,\" Keith said, very firmly, his eyes looking down into mine, his hand, the finger still wetly glistening from inside me, brushing my hair back from my forehead even as I twisted and pressed myself up against him. He smiled. \"After that workout at Quebec's, you need to eat. Let's get you dressed sweetheart, we'll have plenty of time afterwards.\"\n\nOkay, I was starving. I did need food, I knew that. \"Kiss me first?\" I pleaded.\n\nHe smiled, his mouth closed on mine, his lips brushed mine, his tongue slipped delicately into my wide open mouth.\n\n\"Clothes,\" he said after a long long kiss. \"Now, girl.\" His hand slapped my butt lightly.\n\n\"Yes Keith,\" I said demurely. Obediently.\n\nHe laughed, sliding of the couch to his feet, his cock jutting stiffly outwards and upwards. The sight of it made my heart dance, my insides tighten hotly. I watched greedily as he tucked himself away, smiling as he struggled to fit himself back inside his jeans. When he was done, I stood, my hands adjusting my panties as he watched. \n\n\"I'll get your dress,\" he said, his eyes running over me.\n\n\"Thanks.\" I wanted his hands to run over me.\n\nThey did, but only as he slid the dress down over my head, adjusting it on me, zipping it at the back. I loved it. I'd never had a little black dress before. It fitted perfectly. How had he know the size? Or had he just guessed well? It didn't matter, it was perfect, little, black, demure and sexy at one and the same time. Short enough to show off my legs without being too short.\n\n\"Like it?\" Keith asked. He looked unsure, a little nervous.\n\nI flung myself at him, my arms around his neck, peppering him with little kisses. \"It's awesome Keith, it's the most awesome dress ever.\" It was, I mean, I had lots of clothes, it wasn't like my parents didn't give me a decent allowance or anything. Heck, I had my own credit card for shopping. But I'd never bought a little black dress for myself and I loved it. That Keith had bought it for me was just icing on the cake. \"It's so beautiful. I love it.\""
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "chinese",
        "virgin",
        "18 year old",
        "blowjob",
        "oral sex",
        "foreplay",
        "biker",
        "romance",
        "chloe tzang"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/chinese-takeout-ch-04"
}