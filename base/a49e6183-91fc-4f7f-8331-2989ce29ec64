{
    "title": "CvsN 08: Virgin No More",
    "pages": [
        "A previously unpublished chapter in the story of Jack, and the home he shares with three lovelies.\n\n* * * * \n\nKaren finally moves in and she finds a way to reward the help.\n\n* * * *\n\nSaturday morning I woke to the smell of bacon frying, and the sound of laughter. The sun was streaming in through the bay window and the sky was clear and blue as Debbie's eyes. I hopped into the shower for a quick rinse, passing on the shave, and headed out to the kitchen.\n\nJim had showed up a little after 8:00 that morning. He was showing up more and more often around meal-time. Made sense since he lived alone, had no girlfriend, and had no prospects at the moment. We didn't begrudge him the occasional meal since he was always a great contributor around the house, and had done so much to get the electrical working during the rebuild.\n\nJim had a small problem. He was horrible with women. I'd set him up on dates three different times, and watched him self-destruct on two of those when we double-dated. Once a girl was out of reach though, like when they were married, or involved with people he knew, he stopped trying so hard, and could be likable. Debbie and Beth seemed to be finally warming up to him, and Karen had been teasing him for ages. His virginity was no office secret, and any efforts on his part to change that status had been completely fruitless so far. \n\nFortified by Debbie's breakfast, we grabbed our moving gear, and were on the road by 9:00. Jim's truck was hauling an open trailer, and I figured it shouldn't take us more than two trips. Many of the things had been moved piece-meal over the last few weeks, and Karen had spent the last several days packing, with frequent help from Debbie.\n\nFive minutes later we were at Karen's. The door was propped open with a couple of phone books, and the view into the living room was nothing but stacked boxes. Karen met us just inside the threshold. She looked hot and sweaty, and my guess was that she'd already been at work for a couple of hours. Her hair was disheveled, and her shirt was sticking to her. \n\n\"Ah, my handsome knights, here to rescue this poor damsel in distress.\" She stepped forward and took each of our arms in hers, as if we were her escort. \"Or are you planning on kidnapping me and taking me back to your fortress where I'm to be your play thing? You know Jack, I've never really forgiven you for doing exactly that back during the Crusades, you brute.\" That earned me a poke in the ribs.\n\nJim looked at me quizzically, and I just laughed. Sometimes I wasn't even sure if she was joking or if she really believed all this past life drivel she spouted.\n\nWe took a quick tour of the premises and I was pleased to find that everything was packed and almost completely ready for moving.\n\nUnder Karen's able and unceasing direction we started emptying the house from the front to the back. She was certainly in a touchy-feely mood, as she didn't miss an opportunity to place a hand on a shoulder, around a waist, or anywhere else she could reach. She also seemed to be making a point of rubbing against us in every tight spot when we were moving the bigger items. Of course we were doing a bit of rubbing back ourselves.\n\nTwo hours later we'd completed our first load and had emptied eighty percent of the place. We were dripping sweat. The sun was beating down, and it turned out that Karen had closed out her phone and electric the day before. It must have been 95 degrees outside, and not much cooler inside.\n\nDebbie took a break from making crafts with the kids, and offered us lunch when we got back to the house, but we begged off until we'd finished the move. We did accept the offer of fresh squeezed lemonade, and a couple of cookies fresh out of the oven for energy. It was refreshing to be in the cool house, and I was tempted to take a quick shower, but I knew I'd just get dirty again. Unloading took a lot less time then loading had, and we were back on the road less than an hour later. \n\nGetting out of the air-conditioned pickup and walking back into that townhouse was like walking into a sauna. Just a few minutes after arriving I stripped off my sweat-soaked t-shirt and finished the packing in just my shorts and shoes. Jim followed suit shortly after.\n\n\"No fair!\" Karen cried when she came out of the kitchen and saw our state of dishabille. Her white button-up sleeveless blouse had started out tucked in, then tied across her waist, and finally had been tied up in a tiny halter, and it was obvious she wasn't wearing a bra underneath it. She was as hot as us, and her shirt was soaked through. Her nipples showed dark and erect against the flimsy wet material.\n\n\"No one's stopping you, you know,\" Jim laughed.\n\n\"Oh, I bet you'd like that,\" she answered, throwing a bunched up sheet of wrapping paper at him. \n\n\"You know I would!\" he called back hauling another box out to the truck.\n\nShe walked up behind me where I was sealing some of the last boxes. I could feel her hands sliding down my slick back. \n\n\"The sight of you hunks is getting me hot,\" she whispered to me. \"I've been thinking of ways to pay you off this weekend, and I can't wait to get started.\"\n\n\"I can hardly wait myself. Let's get this stuff loaded and get out of here.\" I lifted the box I was working on to my shoulder and took it out to the truck. As I walked away her hands ran down and lingered on my ass with a final squeeze.\n\nReturning to finish up the loading, I was surprised to see Karen had risen to the challenge, and had removed her own shirt. We were all bare-chested, but it certainly looked a lot better on her. Her breasts were really her nicest feature. Not very big, but very pert, and perfectly shaped. Her nipples were hard as diamonds, and Jim was straining himself avoiding looking at them, his face even redder than the heat warranted.\n\nAs soon as he was out the door with the next box, she burst out laughing, holding her breasts towards me and tweaking her nipples. \"I guess you're not afraid to look at me.\" \n\n\"Behave yourself, shameless, or I'll do a lot more than look!\"\n\n\"Promises, promises...\" she muttered, as she headed up the stairs to make sure we hadn't overlooked anything. \n\nAs far as I could tell, we had cleared the place out except for the few boxes and some odd shaped and fragile items left in the living room. \n\nJim came in as Karen disappeared around the top of the stairs, and I finished my visual inventory. \n\nHe scanned the room and looked like a baby who'd had his candy stolen, when he couldn't spot Karen.\n\n\"Jim, I think we're about done here. We're not going to clean the place now, the girls will take care of that tomorrow. I'm going to call ahead and let Debbie know we're just about on our way. I think I'll have her start lunch. Any preference?\"\n\nHe never even slowed, grabbing a TV that we were going to put in Karen's front seat. \"Nope, I'm sure anything Debbie make's'll be fine.\" \n\nI headed up the stairs to see if Karen had any preferences, and caught her in the master-bedroom walk-in closet, checking behind the door. \n\n\"I'm about to call Debbie and tell her we're on her way. Any preferences for lunch?\" \n\nShe brazenly walked up to me, pressed her breasts against my chest, placed her hand on the growing lump in my pants, and answered.\n\n\"Sausage.\" \n\nShe punctuated the request with a long lingering lick across my chest.\n\nEnough was enough. I stepped back, and pulled my shorts off in a flash. I was wearing loose, knit shorts and no underwear, and the whole act took about two seconds.\n\n\"Funny, sausage is the special of the day. No waiting.\" I told her, and reaching out with my hand behind her neck I pulled her down to her knees.\n\n\"What if Jim comes up here?\" She said, reaching out and taking my cock in her hand.\n\n\"Well, he'll just have to wait his turn.\" I told her, and winding my fingers in her hair, pulled her face to my crotch.\n\nShe must have been as turned on as me. She looked up to me, her eyes locked to mine, and with a long lascivious lick, dragged her tongue from the bottom of my balls, to the crest of my head, where she ran the tip of her tongue all over my purple helmet. A second lick ended with her taking my cock in her mouth and slowly pressing her face down as far as she could take it.\n\n\"God that feels good, Karen. I think this is going to be a great weekend.\" I murmured.\n\n\"MmmmHmmm\" she answered as best she could, with her mouth full.\n\nShe worked her hand up and down my cock as she sucked away on the head. After a few minutes of this delightful treatment, I pulled my cock out of her mouth, and stood her up. I turned her around so she was facing away from me, her head out the closet door, and pulled her shorts down to her ankles. Her soaked white undies followed suit.\n\n\"Jack...\" she said, reproachfully, but still stepped out of her shorts and panties, kicking them out of the way.\n\nI placed one hand on her left hip, and with the other, pushed her down just behind her neck, until her upper body was parallel with the ground. I spread her cheeks with my thumbs, grasping her hips, looking down at her wet pussy. She was bent over even farther now, almost jackknifed, one elbow on her knee, the other hand opening herself, presenting herself to me.\n\nI took my cock in hand, and placed the head at her opening. I could feel her fingers guide me in the first inch or so, after which I grabbed her hips and pulled back hard, impaling her on my stiff prick.\n\n\"Ooh!\" she gasped in surprise, at the sudden intrusion, and then gasped again.\n\n\"Feels good, doesn't it?\" I laughed, pulling out a little, and pushing back hard.\n\nShe tried to pull away for a second, but I was having none of that and thrust up inside her, moving my hips side to side, but keeping my cock buried.\n\n\"Oh, shit,\" she hissed, and dropped her head down between her knees. \n\nThat was when I saw that Jim had entered the room, and could see her pretty well. I was still mostly hidden behind the door. Our shorts scattered just outside the door, and the bouncing of her body left little doubt what was going on, even if he didn't have a great view of the action.\n\nI saw him turn half away. \"Sorry to walk in on you. I just was wondering where you'd gone, and I need help with that mirror. Everything else is loaded.\" He turned partially, the temptation too much, and watched us out of the corner of his eye.\n\n\"Sorry Jim. This little tart has been teasing me, and I couldn't help myself.\" The exhibitionist in me reared his head, and I stroked myself in and out of Karen's dripping pussy, using full long strokes, while I spoke to him.\n\n\"ME! You were the ones teasing me, with your hot sweaty bodies, brushing up against me, showing off. With two half-naked hunks hanging around, how's a girl supposed to behave?\" She was looking back and forth between us, and she was pushing back onto my cock with each stroke. Clearly she was enjoying the show we were putting on as well. Her arms were folded across her chest, but careful observation revealed her hands were also squeezing her own tits.\n\n\"Well,\" Jim answered meekly, \"I guess I'll wait down stairs.\"\n\n\"Jim.\" I told him sharply. \"This is why you're still a virgin at 26. When opportunity presents itself, you've got to take your best shot.\"\n\n\"Jack! I can't believe you said that. What kind of opportunity are you talking about.\" Karen snapped at me.\n\n\"I'm just saying, here's a pretty woman, naked, in front of him, and he's talking about walking away. Look Jim, she's said you're hot, and that you've been getting her horny. She took her shirt off downstairs to tease you. Her nipples were so hard I could barely resist gobbling them myself. The crack of her ass and crotch of her pants have been soaked through all morning. You could have made an effort to see if there was more to the sexual tension then just teasing. You should have at least tried to press the issue.\"\n\n\"Jack! I can't believe you're saying this.\" Karen was certainly acting just a little offended. Yet she never stopped thrusting back, and she was playing with her own breasts, right in front of Jim.\n\nShe looked at Jim. \"Jim is too much of a gentleman to behave like you, you beast.\" She then let her head drop, and bent almost completely in two, her hands holding behind her ankles and her head between her knees. She was deliciously flexible.\n\nHer ass was taught as a drum, and I couldn't resist pressing my thumb into her highly available butthole. \n\n\"Oh God, Jack,\" she moaned, followed by continued little moans of 'oh'.\n\n\"Fine. What should I have done, Jack?\" Jim asked, just a little bit angry. I guess he didn't like my blurting out the bit about being a virgin. \"I guess I should have been hitting on your girlfriend.\"\n\n\"What I would have done in your shoes, I would have walked right up to just in front of her, placed my hands on her back, my cock inches from her face, and said, \"God, that looks great.\" Then see what kind of response I got. Try it.\" I was slowly screwing her now, and matching the movements of my hips with the thumb stretching out her ass.\n\n\"God, Jack! What are you doing? I hope you're not listening to him Jim, he's a pig!\" Karen's cries were getting more exasperated, and she straightened out some, looking between Jim and I.\n\nJim thought about it a second, and then did as I'd suggested. He walked up until he was facing me from about four feet away. He placed his hands on her back, just behind her shoulders, and he rubbed his hands down her spine to her waist, across the top of her ass, across the swell of her hips, and back up her sides. I felt her shiver under his caress. As his hands glided back across her sweaty back, he almost whispered, \"That looks great.\" You could hear the nervous catch in his voice, as he held his breath. He inched forward, and allowed his hands to reach a little under Karen around the sides, stroking the edges of her breast, his crotch now brushing against her shoulder.\n\nI looked down at Karen, who was twisted sideways, looking up at me quizzically. I couldn't identify the expression, but I was going to hit the ball back in her court. I stopped my motion for a moment, pulled my thumb out of her ass, placed my hands on her shoulders, and slid them down to her biceps. Pulling them slowly straight rearwards, had her arching her back. Her breasts were fully exposed to his view, and her face was up and looking at him.\n\nThey stared at each other for several seconds, his hands resting on her shoulders.\n\n\"Now, I, personally would figure that if I wasn't kicked out, things were looking pretty good. Those breasts look incredible. The nipples are begging to be touched. She's quivering in anticipation. It doesn't look like I'm gonna kick your ass. What are you going to do?\" I made a point of giving her a couple of long strokes of my cock as I spoke, at the end of each pushing up hard until she raised up on her toes, her jiggling tits an almost irresistible invitation.\n\n\"Oh, Charles. Not your plaything again...\" Karen breathed, in little more than a whisper.\n\nCharles? Not back to that Crusades thing again - she was a nut.\n\nI picked up the pace with which I'd been pounding her, still holding her arms behind her, and using them for leverage. Her whole body was shaking with each penetration. I crossed her wrists behind her, holding the two at the small of her back, and grabbing her shoulder with my other hand, pulling up and back, thrusting her breasts even further out.\n\nI saw his hands slowly reach forward, until they were lost from my view. Karen tossed her head back and to the side, moaning, her eyes closed. Jim was clearly enjoying her breasts.\n\n\"K..K..Karen... I...I love your sweet tits. Can I kiss them?\"\n\n\"Jim. Jim. Jim.\" I admonished. \"Never ask. She's dying for you to take her nipples in her mouth. Just do it.\"\n\nNot a peep from her this time.\n\nHe dropped to his knees and started licking her breasts. He was concentrating on the right breast, and appeared to be suckling like a baby, trying to take half her breast in his mouth.\n\nI slid my hand from her shoulder up to her mouth, sticking a finger in her mouth which she sucked and licked with abandon. \n\nJim took up camp, shifting and applying his oral efforts to the opposite tit. \n\nI was getting tired from keeping my legs bent for so long, and I'm sure Karen must have been tired as well. I pulled out of her, moved to her side, reached out, and pushed Jim off her tit. \n\n\"I'm sorry,\" he said, as he backed off looking abashed.\n\nI scooped Karen up in my arms, and carried her out to the middle of the bedroom floor.\n\n\"Christ, Jim, don't apologize! I'm just changing position.\" I told him as I relocated myself between her legs. She was watching him intently, strangely quiet for Karen, as I re-entered her.\n\nOnce my cock was deeply ensconced again, Karen slowly closed her eyes, arching her neck, and breathed out deeply. Jim looked to me for approval, but I just rolled my eyes at his ineptness. He dropped beside her, and took her breasts in his two hands, squeezing and twisting.\n\nIt seemed like this broke some kind of dam in Karen. Her eyes snapped open, and her hands reached out and grabbed his, stopping them. \"Jim, you need to listen to your friend Jack here. He's pretty cocky, and a little irritating, but he is keeping three girls happy. Let's see, what would Jack do in your place now? Jack?\"\n\nI smiled, lifting her legs high and wide, screwing her with great finesse. \"By now, I'd have my pants off, and I'd be offering my cock to her mouth. That's what I'd be doing.\" \n\n\"Thank you very much. Exactly. Now come over here Jimbo, and let's see what you've got in those shorts.\" Finally. Now that was the Karen I knew and loved. Or at least lusted.\n\nJim stood up, undid his belt, and pulled his shorts down. A short thick cock was sticking straight out from his body. He stood there above her, his dick at attention, awaiting instructions.\n\n\"This is your last chance Jim. Be a man. Don't make me ask for it.\" She sounded a little cross.\n\nJim finally got the message, and dropped to his knees beside her head, his cock within reach. Karen leaned over and took his entire cock in her mouth, and held it there for several long seconds, while he moaned desperately. \n\nShe pulled back off his cock, and looked back to me. \"More than a mouthful is wasted anyway.\" She grinned evilly. \"I feel so slutty. I can't believe you're making me do this.\"\n\nOf course I wasn't making her do anything. But hey, what the heck, if that's what she wanted to believe, why not.\n\nShe turned back to his cock, and stroked it with her hand. She was leaning forward to put it back in her mouth when he cried out. Hunched over, he came hard, shooting cum down the side of her face and into her hair, and then pulling away from her and coming all over the place, shooting streams of spunk all around.\n\nI'm sorry to say I laughed as hard as her, and may have hurt his feelings a bit, but still, that's a pretty small price to pay for a first blow-job.\n\nKaren tried to put a good face on it. \"I'm sorry Jim. I didn't mean to laugh, but I didn't think you'd come that quick. Do you think you might be able to get your little soldier to rise to the occasion again?\" She laughed again, but clearly with no malintent.\n\n\"I'm sure he's had no lack of experience getting himself hard.\" I quipped.\n\n\"Come her sweety, let Karen help you.\" She reached out for his slick cock.\n\n\"Just a second Karen, let's make this a little easier for you,\" I told her. I pulled out and rolled over on my back. \"Hop aboard.\" She didn't need a second invitation and she straddled me. She raised up on her knees a bit, giving me room to thrust up into her, and then turned to Jim again.\n\n\"C'mon Jimbo, bring that sweet thing to mama.\" She told him, rocking back and forth on my thrusting cock. \n\nI reached up and played with her breasts, as Jim approached her. He was already getting hard again and within a few moments she had him back in her mouth. With her improved position, she was fucking his cock aggressively with her mouth. It's shorter length let her take it all the way to the back of throat, when she pressed her face into his pubes. I figure he couldn't have been five inches long, but he was pretty damn thick around, at least as wide as me.",
        "Jim was looking up at the ceiling, his hips thrusting forward, his hands gingerly holding the sides of her head. \n\n\"Damn, Karen. You look so hot gobbling his whole cock like that. I thought you didn't like to suck cock that much?\"\n\nShe pulled away and stroked him while she responded. \"I didn't like to suck Craig's cock. A sweet innocent cock like this one is kind of fun.\" She licked the member in question, sucked it a couple of times, and then pulled off again. \"And of course yours is D-double E-licious. Anyway, what choice do I have?\"\n\nShe hesitated for a second. \"If your back gets too sore on the carpet Jack, I could get on my hands and knees. I could still take you both that way if you wanted\" She looked to me hopefully, rocking slowly back and forth, and stroking Jim's cock with her hand in perfect rhythm with her hips action.\n\n\"I was thinking the very same thoughts myself. I hope you don't mind, but I'm afraid I have to insist.\" I told her, playing along with her apparent need to feel out of control. \"We're going to fuck you at both ends, Karen, cramming you full of cock at the same time in your pussy and in your hot little mouth.\"\n\nShe climbed off and positioned herself on all fours. I pulled her ass up nice and high, and slipped my cock back in. Jim took up his position in front of her, his cock in front of her face. She hesitated for just a moment.\n\n\"Open up and take it.\" I ordered.\n\nShe leaned forward obediently and took his cock between her lips.\n\n\"Ok Jim. Match my pace.\" I told him. I exaggerated my movements as I slowly pushed forward. He did the same. Then I slowly pulled all the way out, and he pulled completely out of her mouth.\n\n\"Good.\" I told him. \"Again. Keep up.\"\n\nI pressed forward the same as last time, and slowly pulled out to just the edge. I hesitated, then slid in again, a little faster. I grabbed her ass cheeks, kneading them with my hands, as I fucked in and out nice and steady. In response he grabbed her head on each side, and matched my movements. After a minute or so I picked up the pace and we really fucked her hard for a while. Every now and then he'd push especially hard, and she'd gag a bit, but she kept taking us on gamely.\n\n\"Hold it.\" I told him, coming to a stop. \"Now stay still and we'll let her do the work.\" I pulled her back onto my cock, until his cock was fully exposed, and then I pushed her forward on her ass, off my cock, and back onto his. \n\n\"You heard me, now fuck us with your steaming snatch and nasty mouth.\" I slapped her across the ass, not too hard, just as encouragement.\n\nShe pushed back against me, grinding her dripping slot against my pubic bone, and then slowly rocked forward, sliding half-off my cock, and taking Jim to the root in her mouth. Then back again, still moving slowly and deliberately, and back forward. \n\nKaren developed a rhythm, and was soon wildly thrusting herself back and forth on our cocks. I could hear moans escaping her lips and she was quivering as I helped her, holding her by the hips and thrusting back and forth. Jim got into the feel of the action, and with his hands in her hair, he was thrusting her back and forth.\n\nSuddenly she tore her face off his dick, and screamed out, then grasped Jim around the hips and hung on as she exploded in a huge orgasm. I slammed my cock in and out of her as she came, crying out, biting Jim on the hip. She reached up and grabbed his cock, and he came again, this time all over her tits.\n\nShe cried out, \"Fuck me, you bastards! Fuck!\" \n\nI was getting close, so I continued screwing her hard and fast. She hung onto Jim, her head against his side, her fingers digging into him. I grabbed her cheeks farther in, my thumbs almost meeting at her asshole. I pulled her cheeks apart, opening the little brown eye just a bit, as I thrust deep inside her.\n\n\"I'm there Karen, I'm coming.\"\n\n\"Go ahead - fill me with your hot juice. Fuck me. Come in me. Do it. Do it. Do it.\"\n\n\"Aaaaaahhhh!\" I screamed burying myself in her, then pulling almost completely out before impaling her as hard and deep as possible, and again, and again.\n\n\"Jack!\" She cried out my name as her pussy clutched my cock greedily and she came with me.\n\nAfter several long moments, I pulled out and she let go of Jim and rolled over onto her back.\n\n\"God. That was incredible. I can't believe you guys used me like that. I was completely helpless, you could have done anything to me. I felt like I was a porn star, and the cameras were rolling. One cock filling my mouth and throat, and the other so deep inside my pussy. Wow.\"\n\nKaren looked up at Jim. \"Thanks baby. That was really sweet.\" She reached out and gently stroked his receding cock. \"I don't want you to think this is something were going to be doing all the time now. I got lost in the moment, and I did feel I owed you for helping. I'm not saying we'll never do anything again, but if we ever do, well, I'll let you know when. I don't do things like this. I've never been with two men. Not in over 300 years.\"\n\n\"Well,\" I spoke up, \"we still have to finish moving the mirror, and we have to unload at the other end. Are you going to thank him for that?\" I was sitting beside her now, my hand caressing her belly, waist, and down to her thighs. I let my hand wander down to her still burning pussy, and slid two fingers into her, slowly massaging her tunnel.\n\n\"I'll have to think about that.\" Her words escaped in small gasps, as she closed her eyes, and pushed up against my probing fingers. With her hands she was rubbing Jim's cum into her breasts. Jim was seated on her other side, looking down at her with puppy-dog eyes, and softly stroking her hair. He was clearly infatuated, hers if she wanted. I wondered how it would turn out.\n\n\"Another,\" she whispered huskily, and I slid a third finger inside her, pumping in and out. I took my other hand, and softly massage her clit, which brought a sob to her lips.\n\nJim was staring at her writhing on the floor, and I was just a little surprised when he took the initiative to drop down and take her nipple in his mouth. He licked and sucked on it, and I continued my rubbing.\n\n\"I've never seen you so hot,\" I told Karen. \"You are like a firecracker. I may have to fuck you again.\" I thrust my fingers in her roughly. I switched my hands, pressing the heel of my left hand against her mons, slipping two fingers back in her pussy, and using my other hand I eased my middle finger into her ass.\n\nThe penetration pushed her over the top and she arched her back, crying out, her hips twitching against my hand. She stayed taut for several long seconds, like a bow pulled tight. Slowly she breathed again, lowering herself back to the floor, and closing her legs. I pulled my hands free, slowly caressing her hips.\n\n\"That was beautiful.\" I told her.\n\n\"I can't believe it.\" Jim added.\n\n\"Wow.\" Karen breathed. \"Let's finish the moving. This rug is tearing up my back and knees. I want to go home, eat, shower, and get my brains fucked out.\"\n\nI stood, reaching down and pulling her to her feet. \n\n\"You're wish is our command.\"\n\nJim nodded his agreement.\n\n* * * *\n\nNinety minutes later we were back at the homestead sitting down to our late lunch.\n\nDebbie didn't have to be very astute to see the way that Jim was looking at Karen. He was hanging on her every word, and leaping to help her with anything she needed. \n\nAfter we'd finished moving and lunch, I offered Jim a t-shirt and gym shorts, and the use of the upstairs bath for a quick shower. Karen retired to her own bathroom for her own cleaning up.\n\nThe kids were working in their rooms, getting settled in, under Debbie's direction. She got them going and came down and joined me in my room. When she saw I was getting ready to clean-up she disrobed with me as I stripped down for my shower.\n\nShe led me to the shower, soap in hand, and started to lather me down. \n\n\"Tell me. What happened. What'd she do?\" She finally broke down and asked.\n\nI told her about the teasing that had been going on, the rubbing and joking, and how after Jim and I took off our shirts Karen did the same.\n\n\"I can't believe she did that. I could never do that. Not in front of Jim.\" She was lathering me all over and made certain that nothing below the waist was missed. By this time she was soaping up a full erection.\n\n\"Yeah, well, when we were just about done, I was upstairs with her, and she jokingly told me she wanted my dick for lunch. I couldn't help myself and I dropped my shorts and let her suck me right there, just for a moment, while Jim was tying down the stuff in the trailer.\"\n\n\"You didn't!\"\n\n\"Yep, and after a few seconds, I thought I'd just poke her quick, and I bent her over, and just as I got inside her, well, who shows up in the doorway but Jim.\"\n\n\"Oh my God! So...\"\n\nI explained to Debbie how Jim had behaved, and how I gave him a hard time, and convinced him to take some initiative and see where it would take him. She seemed shocked that Karen would allow this, since she was so dominating, and had never mentioned wanting to do anything like that. I gave her the whole story. Some while in the shower, some more while getting dried off, and finishing up while she laid out some clothes for me to wear. She was still standing there delightfully naked while my erection from the initial lathering hadn't subsided.\n\nI walked to her with my hands outstretched, and she recognized my desire, and came into my arms. Laying back on the bed, I watched as she straddled me, taking my cock inside her and lowering herself onto my body. \n\nI caressed her back, as I gently worked my way in and out of her warm, tight pussy.\n\nWe were quiet for a while, until I took up the tale again. \"Yeah. She said at first, that was the one and only time. Then a few minutes later she was recanting, saying she wanted to get the move done with, get cleaned up, get fed, and, quote, get her brains fucked out, un-quote.\"\n\n\"Maybe she just meant you.\" Debbie offered, pulling her lips off my neck for a second.\n\n\"Do you think so?\"\n\n\"No.\"\n\nI reached down and grabbed her ass cheeks in my hand, as I thrust more urgently into her.\n\nShe whispered into my ear. \"Fuck me baby. Fuck me. I love your cock in me. Make me come on your hard cock. Fuck me, Jack.\"\n\nI knew what she wanted. Her favorite position had to be flat on her back, her legs wrapped around my back, her pelvis tilted up, and me screwing her hard.\n\nI rolled her over, and drove my cock back inside her, while she clutched me with her arms and legs. My mouth covered hers and we shared our breath, as I thrust into her hard and steadily. My tongue invaded her mouth, deeply, while my cock conquered her. Her fingers dug into my back, and her heels pulled me deep into her on each stroke.\n\nAnd then she was there, her eyes rolling back in her head, her nails tearing at me, her legs scissoring, squeezing me hard, her mouth limp. Her breathing stopped as it sometimes did when she came really hard. \n\nI grabbed her head in my hands, and slammed my cock down into her as hard and fast as I could, until she gasped. Within moments I was coming myself, and that was enough to push her over the edge again. We writhed in our embrace, the perfect embodiment of the two-backed beast. I finally rolled off, gasping for breath.\n\nJust as my breathing was nearing normal she spoke.\n\n\"Do...do you want me to go with you Karen and Jim?\"\n\n\"What do you want to do?\"\n\n\"Whatever you want me to do.\" She responded automatically.\n\n\"No. I know that's what you will do. I want to know what you want to do.\"\n\n\"I don't think I want to be with Jim.\" She said hesitantly, quickly adding, \"unless you want me to.\"\n\n\"No. I don't want you to. I don't think I'm going to either, maybe we should just let them play together.\"\n\nSpeak of the devil, at that moment, Karen walked in on us. \n\n\"Hey! None of that this weekend, unless I'm involved! Should I invite Jim down here, or do we go up to my room?\" \n\nWell, now we know what Karen wanted.\n\n\"How about if we just let you two play.\" I answered. \"I don't think Debbie is into this, and I think the three of us can play together later. The kids are still active anyway, maybe after they're put to bed, we can get together. But you two can have some fun time now.\"\n\n\"Oh Jack. Please. I don't know. If it's just me and him he might get the wrong idea. With you there, clearly you're just sharing. But if it's just the two of us, then it's my decision and then I have to turn him away after.\"\n\n\"You don't have to turn him away after.\" I pointed out.\n\n\"Well, I know he's not a bad guy, but I wouldn't want it to start like this. Please, one quick roll, then we boot him out the door, and we have the rest of the weekend for just the three of us. It'll be fun. I promise. You know I'll be helpless for you. You can do whatever you want. Anywhere you want. You can use me however you want, together.\" \n\n\"Go on, Jack. I don't mind. I told Beth I'd be heading over for a while anyway. Remember? And I'll be taking the girls, so you guys should have a little privacy.\"\n\nShit. I'd forgotten. It had turned out nobody in the last two weeks had let Karen know about Beth. I had found out that Debbie had told her about Cathy, and they'd had a good laugh over that. But soon I was going to have to give her the low-down on Beth. Debbie was subtly reminding me that Beth was expecting to spend the night that night. I had better get Jim out of there and get some explaining out of the way.\n\nI turned and gave Debbie a kiss. \"Thanks, baby.\" I stood and took Karen by the hand, leading her back out the door. \"Let's break in this new boy right. I'm gonna show him things he never dreamed of.\" I told her, giving her hand a small squeeze.\n\n\"Don't get too carried away, ok?\" She asked, almost pleading.\n\n\"Whatever I want. Anywhere I want. However I want. Remember?\" I teased.\n\n\"Yes. Just don't be mean or scare him off. Please.\"\n\n\"Don't worry. I'm sure you'll both enjoy this.\" \n\n* * * *\n\nIt started out very calm. The three of us naked, Karen on the bed between us, and my playing the part of a teacher.\n\n\"Ok, Jim, for the next hour or so, you get a crash course on how to be the great lover. I'll share what I know, and Karen will guide us, and we'll see if we can't make a Don Juan out of you yet.\"\n\nHe was certainly willing. We talked with Karen and she instructed us on the fine points of foreplay, much of it non-erotic to start. Soon she was working with us on the proper and preferred ways of paying attention to a ladies breasts. Each of us attached to a tit, we performed as she directed, kissing, licking, nibbling, tasting. \n\n\"They may not tell you so, but sometimes they like to be handled rough, Jim. I don't mean hurt them. But bite a little harder, twist a bit. Go ahead try.\" \n\nKaren looked down at me, a hint of concern showing, as I demonstrated what I meant. I squeezed her nipple tight, and pulled out, stretching her breast. I then dropped down and took her nibble in my teeth and pulled. Her breath gasped, and her whole body jerked.\n\n\"Karen. I don't want to hurt you. You can tell me to stop.\" I said, cupping her breast, and squeezing her nipple tight between thumb and forefinger.\n\nShe chewed on her lip, nose flared, and just looked at me intently.\n\n\"Go on, now.\" I told Jim.\n\nJim, pulled lightly, then nibbled on her breast. He didn't tease her nearly as hard as I had, but it wasn't bad.\n\nI finally released her nipple, and gently massaged her breast with my hand, then added my tongue. Jim was copying my actions.\n\nWe continued our play, which soon had Jim working his way to that delightful V at the top of her legs. \"Do whatever comes naturally,\" I told him, when his mouth was directly over her pussy.\n\nI then laid down next to Karen, my arm under her head, my hand toying with her reddened tits, and told her to tell me everything he did.\n\nFor several minutes I got a running commentary on his actions. \n\n\"Now,\" I told her, \"tell him what he SHOULD be doing.\"\n\nShe did, instructing him on how to pleasure her, getting him off her clit, and getting his tongue out of her pussy, and varying his actions to her pace and needs. \n\n\"I want you to tell him how to bring you off. I want to watch you come on his tongue. Go on now, tell him.\"\n\nShe continued the instructions, more sporadically as he got the hang of it, until she was finally coming, her legs clenched around poor Jim's head, her hands pulling his head hard into her spasming honeypot.\n\n\"That was beautiful Jim, and now I think it's time she returned the favor. Are you Ok or are you about to come?\"\n\n\"I...I think I'm going to come pretty soon.\" He confessed.\n\n\"Good. Karen. I want to see how long it takes you to make him come. Impress me.\"\n\nShe smiled, and laying Jim back, she lapped at his angry red cock, then took his meat in her mouth while massaging his balls. She pistoned her head over his shaft, and I could see she was stroking the perineum between his balls and his ass. Within seconds he was thrusting his hips eagerly upwards, and as she drove her finger into his butt he grunted and sprayed his load into her mouth. It couldn't have been 30 seconds from start to finish.\n\n\"Great, now you've finally come inside a woman. Now it's my turn. She's going to work on me, and I want you back down there, pleasuring her while she does. Ok?\"\n\nThis was a pretty quiet crowd. Especially considering that Karen was part of it. I leaned back and she climbed between my legs, then spread her own legs to give Jim access to her pussy.\n\nI let her blow me for about five minutes before asking Jim how he was doing.\n\n\"Jim, you hard again?\"\n\n\"Sort of,\" was his muffled answer from between her thighs.\n\n\"Baby, make him hard.\" I told her.\n\nShe did as I asked, and I played with her ass and pussy, as she used her mouth to get his dick hard one more time.\n\n\"Perfect. And now for the piece-de-resistance. Jim loses his virginity. Jim, please lay down in the middle of the bed.\"\n\nKaren backed away, and Jim lay back, his short thick cock sticking straight up.\n\n\"Karen, I don't think you need any direction here.\"\n\n\"No. I think I can handle this one. Jim, today is your lucky day.\" She straddled him, and halted with her pussy just above his cock. \"Now don't move, let me handle this,\" she instructed him.\n\nShe lowered herself a fraction, positioning his cock at her entrance. \"Can you feel that lover? Your fat cock is touching my pussy, seconds away from being inside. How does it feel?\" She was leaning over, her hands resting on his chest, looking down into his face. \n\n\"God, I can't believe this is happening. I can't believe you sucked me off three times and I'm about to be inside your pussy. Please, do it.\" He reeked sincereness and need.\n\n\"All in good time baby. All in good time.\" I watched her settle back a hair, his cock head disappearing. \"There, I've got you now. You're cock is in my pussy lover. At least part of it.\"\n\n\"God, don't tease me - please.\" He thrust his hips upward trying to get deeper.\n\nShe pulled completely off. \"No - no - no. Do that again, and I'll stop. Now stay still, I promise you'll love this.\"\n\nHe was whimpering, but held himself perfectly still.\n\n\"Good. Now where were we? Oh yeah.\" She held his cock and lowered herself back down over the head.\n\n\"Now, I know that has to feel great, but we're just starting. Are you ready for me Jim?\"\n\n\"Oh, yes, please.\"\n\n\"Ok, here it goes.\" She lowered herself agonizingly slowly down his cock. Finally she was all the way down. \n\n\"Damn, your thick cock feels great Jim. How does it feel to you?\"\n\n\"Oh God, I can't believe I'm inside you. Oh God Karen, you are incredible. You are so beautiful, your pussy tastes so great, I can't believe how tight you are. God, I love this.\" His eyes were like saucers and he was almost babbling.\n\nShe pulled up a little bit, reached down with her hands and pulled her pussy lips apart, settling down even further on his cock.",
        "\"Ah, that's better, I've got you about as far inside me as you're going to get. Are you ready to get fucked, Jim? Ready to come inside my hot little pussy?\" She was bent over her face inches from his.\n\n\"Yes, please, yes, please...\" he gasped.\n\nI watched as she rocked forward slowly and then eased her way back on his cock. She squeezed a long moan out of him.\n\n\"Now tell me before you get too close, I don't want you to shoot too early. You understand?\" She stopped at the top of the stroke, his cock head barely inside her.\n\n\"Yes, yes, I'll tell you.\" He promised.\n\nI think they'd almost forgotten about me. Karen rocked back and forth on his cock speeding up, and then slowing down, keeping it changing. He was thrusting a little now, and she was allowing him, enjoying her power.\n\nI watched her stop and then she slowly raised up. He gasped, and asked her, \"What...what are you doing, what was that?\"\n\nShe smiled, and answered, \"Muscle control, baby, muscle control.\" She repeated the slow stroke twice more.\n\n\"Stop!\" He cried out. \"Don't move, I'm really close.\" She stopped dead. She waited about 30 seconds, then asked if it was better. \n\n\"A little, I think.\" He answered.\n\n\"Stay still,\" I spoke up, and I think they both jumped a bit remembering that I was there.\n\nI climbed up behind Karen and spread her ass cheeks to my gaze. \n\n\"You know Karen, you were fucked by two men at the same time earlier today, and I think it's time we fucked you together again.\" \n\n\"What are you thinking...\" she started.\n\n\"I'm thinking a different opening this time.\"\n\n\"Oh, Jack, I don't know if I can,\" she pleaded.\n\n\"Well I'll let you choose.\"\n\n\"Oh thank you, Jack.\" She blurted effusively.\n\n\"Either we share your pussy, or I use your ass, which will it be?\" I licked all around her butthole, then dipped the tip of my tongue into the center of her ass.\n\n\"Share my pussy?\" \n\n\"Ok, if that's what you want.\" I reached down, and slipped my finger into the edge of her pussy above Jim's cock.\n\n\"No! I mean, what? How can you share my pussy? Taking turns?\" She sounded frantic.\n\nI was sliding my finger back and forth, and managed to slide it almost completely in. \"No, I mean at the same time.\" I was now working a second digit into her pussy stretched tight as a virgin. I think my message was clear.\n\n\"God, Jack, your fingers are almost splitting me open now, I couldn't take your cock in there, not now, not with Jim too.\"\n\n\"Sure you could. It's your choice. Decide or I will.\" I pulled my fingers out and pushed my cock down on top of Jim's, pushing at her pussy.\n\n\"No! Jack, stick it in my butt. Please. Not down there.\" She pulled away from my pressure, and almost pulled off Jim. He just groaned.\n\nI grabbed her hips, and pulled back, settling her back onto Jim's cock. I positioned myself, and worked on her ass with my tongue for a minute, then used my fingers to open her up. \n\n\"Ask me again, nicely,\" I told her, as I moved my two fingers all around in her ass, slowly stretching her open.\n\n\"Please, Jack. Fuck me in the butt. Stick your cock in my butt.\"\n\nI think she actually meant it.\n\nIt was time. I pulled my fingers out, and placed my cockhead at her ass entrance. With a little help from my thumb, I pushed the head of my cock into her ass. \n\n\"Oh, Jack.\" She moaned.\n\nJim moaned sympathetically.\n\n\"Spread your cheeks for me.\" I told her.\n\nShe reached behind her and pulled her cheeks wide apart. The sight of my hard cock entering her ass was mesmerizing. I pushed hard, and entered her half-way.\n\n\"Christ!\" She cried out, and then was gasping heavily.\n\n\"This looks so beautiful. You look great being filled in both holes. You are so hot Karen.\" I pulled out and started working myself back and forth, slowly gaining ground.\n\n\"You are so fucking huge in my ass. I can't believe you were going to try to fuck my pussy when Jim's cock was already in there.\"\n\n\"Believe it, baby. I may still do it yet.\"\n\n\"Oh, no, God, just fuck my ass, please.\"\n\n\"I will sweet cheeks, I will.\"\n\nJim was trying to lay very still, low groans occasionally escaping his lips.\n\nWith a final thrust I was buried to the balls in her ass. She collapsed on Jim with a grunt.\n\n\"Is...is that it?\" she gasped\n\n\"Yep,\" I told her, \"you've got the whole thing. Both our cocks are buried in you. You know you'd look beautiful with one more cock filling your mouth right now.\"\n\n\"You are so bad. You'd make me do that too, wouldn't you?\" she asked\n\n\"Of course.\" I started stroking in and our of her ass, and soon she and Jim were moaning together.\n\n\"God, Karen,\" Jim moaned, \"you are so beautiful, I have to come, I have to.\"\n\n\"Come for me, baby, come in me,\" she whispered to him, kissing him tenderly.\n\nHe cried out and came. I stopped for the moment, and could feel his cock coming. \n\n\"Oh, Karen, oh, I love you, I love you.\" He moaned clutching her tightly as he emptied his virgin balls in his first pussy.\n\n\"I know baby, I know.\" She answered, tenderly.\n\nHis cock still inside her, I returned to fucking that sweet skinny butt. She thrust her hips upward, pulling off Jim's cock and pushing back against me. \n\n\"Go ahead, fuck my ass you beast. Fuck me hard, with that big cock. Fuck me, come in my ass,\" she growled.\n\n\"Oh, I will, trust me. In just a moment. Jim, rest time's over. You need to turn around.\"\n\n\"What?\" he asked.\n\n\"You need to help her. I'm going to really tear up her ass now. What you need to do is crawl between her legs and lick her clit and pussy while I fuck her in the butt. We'll make her come so hard we may have to rebuild this place.\"\n\n\"Uh, Ok, I guess,\" he answered, and rotated in place.\n\n\"And you Karen, let's see if you can get him hard again.\"\n\nOnce they'd settled down, Karen took Jim's soft slimy cock in her mouth and held it there using her tongue and bobbing her head to first clean him, and then attempt to bring him back again.\n\nI looked down and could see Jim sucking on Karen's clit, licking up into her pussy. His eyes were looking up at my cock where it entered her ass.\n\nI fucked her. I fucked her ass hard. I pistoned in and out of her tight ass like a machine, pumping her. She was moaning again, but she was clearly excited again, breathing hard, gasping, and talking to both Jim and I.\n\n\"Lick me, lick my slit, go ahead, lick it. Fuck my ass, lick me, fuck me, yes, yes...\" she was gasping. \n\nI slowed down, now fucking her with long full strokes, watching as the entire length of my cock, swollen to huge dimensions, pulled completely out of her ass, and then smoothly buried itself to the hilt.\n\n\"Gaaaaaaaawwwwddd!\" she screamed, coming from the combination ass-reaming, twat-licking.\n\nJust a couple more strokes and I was joining her. I pulled out and shot off into her slowly closing asshole, then all over her ass, pussy, and even on poor Jim. Jim was a pretty good sport and didn't seem to mind.\n\nWe all collapsed on the bed, arms and legs akimbo, and waited for our pulses to drop back below 100.\n\n\"Jim, you going to stay for dinner?\" I asked.\n\nJim sat bolt upright. \"Oh, no! I mean, I have to be at dance practice in, uh, where is my watch, in, oh - eighteen minutes. Can I use your bathroom?\"\n\n\"Go ahead,\" I laughed as he was already halfway out the door, grabbing his clothing on the way.\n\nKaren turned and looked at me.\n\n\"I can't believe you,\" she whispered.\n\n\"Believe it.\" I answered back with a smile.\n\n\"I'm gonna get you.\" She said only half-jokingly.\n\n\"Probably, but you know what, it was worth it.\"\n\n\"I bet it was.\"\n\n\"You know it was.\" A few moment later I added, \"Karen, we need to talk...\"\n\n* * * * End of CvsN Chapter 8 Virgin No More * * * * \n\nI never expected Jim to really show up anywhere in this relationship, he was so hapless around women. But he proved me wrong. Chapter 9, Threepeat is a fun chapter, before things get complicated in Chapter 10. Watch for it soon, on Literotica, the best erotic literature site on the net.\n\n* * * *\n\nI know you're reading these stories. They are read in the 10's of thousands. Won't you take a few seconds to vote (I prefer that little '5' at the bottom). I'd appreciate it, and you'll be rewarded by more antics of \"Jack\", that's me, when I had more stamina then good sense, and a bizarre opportunity thrust on me. God I hope my Mom doesn't read this. She still thinks I just had boarders. Any questions, comments? Go ahead and email me. Thanks."
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "virgin"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/cvsn-08-virgin-no-more"
}