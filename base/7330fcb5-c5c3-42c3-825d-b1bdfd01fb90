{
    "title": "The Sultanah Ch. 12",
    "pages": [
        "Dear Reader, thank you so much for reading this story. It has taken nearly a year of my writing life to get the whole thing finished. This is Chapter 12 of 14 chapters and the total is over 250,000 words. It is my Dirk Diggler/Jack Horner act of hubris: my attempt to write an erotic adventure story that pulls you in with a story you want to read, even when there isn't any sex going on (though there is a lot of sex. Crazy, weird, fun sex). It is the most ambitious piece of erotic fiction I have ever attempted. So I hope you enjoy it.\n\nWith that said, this book is not for everyone. It will be too long for many people (no shame in that, it is a big time investment). Some of the sex scenes are intense and include themes like hermaphroditism, non-consensual activity, incest, etc. For some people, that will likely be the appeal. In fact, while this story is definitely not for everyone, I think for a select group of people this story will essentially have everything you could ever ask for. So if that is you, congratulations, you found that thing you have been searching for. You can skip ahead to the sex and I won't be offended, but I think this story is more than the sum of its parts. If you read this whole story, you will not be disappointed. \n\nIn Chapter 1, our main character, Princess Varis, finds that her father has died and that, by virtue of the fact that she is a hermaphrodite and can father a child, she is now the Sultanah. In Chapter 2, Varis unearthed a conspiracy to destroy her Empire led by Rahip, the Cardinal of the \"New Religion\" and later she received her coronation. In Chapter 3, Varis humiliated the New Religion and raised the morale of her besieged people. In Chapter 4, Varis lifted the siege through a daring midnight raid. In Chapter 5, Varis survived an assassination attempt and visited her harem. In Chapter 6, Varis faced a challenge to her authority and seduced a noblewoman to maintain it. In Chapter 7, Varis defeats the raiders and comforts a peasant girl. In Chapter 8, Varis is briefly engaged and kills her fianc\u00e9 for betraying her. In Chapter 9, Varis slept with a member of the harem, her half-sister, while her aunt watched. In Chapter 10, Varis wed her sister and consummated the marriage. In Chapter 11, Varis sleeps with two new hermaphrodite members of the harem.\n\nSome recurring characters you might want by name are Varis (the Sultanah and narrator), Cin (the head priestess of Gunes), Arkadas (Varis' friend and servant), Kardes (Varis' older sister), Nislani (Varis' younger sister), Rahip (a Cardinal of the 'new religion'), Duke Hain (an important lord opposing Varis), Lord Sadik (a minor lord who has spoken in support of Varis); King Sican (the leader of Dusman, a rival kingdom), Prince Lider (Sican's son); King K\u00f6yl\u00fc (the leader of Temsilci, a rival kingdom); Agiz and Got (Subordinate Sun Priestesses); Saygili (Varis' guard); Soyguncu (a pickpocket and spy for Varis); Tutuklu (the head concubine of the harem); Kukla (a noblewoman). Further, Gunes is the name of the Sun God, Tanri is the name of the 'new god.' The city where the story is set is \u015eehir in the country of \u00dclke and the Empire of B\u00fct\u00fcn D\u00fcnya. If you need more...reread the earlier chapters.\n\nPlease, please, please, please, please tell me what you think after you read this. I put an embarrassing amount of work into this and I want to know what you think. Especially if it is good things.\n\n*****\n\nChapter 12: Connections Cemented\n\n\"If you didn't want to come you could have just said so,\" I said angrily. Kardes, sitting next to me, jumped slightly, then turned to look at me. Her eyes grew narrow.\n\n\"What?\" she asked in a whisper. She looked around the reception room to see if anyone heard me speaking to her. We were, after all, technically prisoners. But I was not concerned about that. The Republic of Anaerki was a strange land, but it was not completely without social convention (Cin assured me). The worst case scenario was that we would be released without any other issue. We were waiting, shackled, in the reception room of the M\u00fcrebbiye of Anaerki, the elected head of government. Only the M\u00fcrebbiye could set us free or, I hoped, cement a deal. But the door to the throne room (or whatever a Republican leader elected for life calls a throne room) I had bigger things to worry about at this time.\n\n\"If you didn't want to come on this trip, you didn't have to. Just say you don't want to go, you don't have to be passive aggressive the entire trip,\" I shot back, not bothering to whisper. Perhaps that was not a great idea, but at this point my nerves were shot. Kardes had been giving them quite a workout over the last few days and I had reached my wits end.\n\nIt had started before we had set out for Anaerki. I had thought I was doing something nice for my older sister, but it seemed that I was wrong. Worse, I had no idea why I was wrong. In fact, as I thought of it, I realized she had essentially invited herself along.\n\nThe day after my experience with K\u0131vrak and Peri I had been in my room, going over some of my maps with Saygili. Kardes and Cin were present, talking to one another, and not really paying attention. Saygili and I were discussing the defense of a new trade route, having agreed to a deal with Prince Aptallar Alt\u0131n of Ada (and no, Nislani had not let me hear the end of how beneficial the deal was). While looking at the map, I noticed a small gray area blocked out on the map that ran through some mountains just to the North of the Empire's current borders. The new trade route would not be affected by this area, nonetheless, I pointed to it.\n\n\"What is this?\" I asked. Saygili shook his head and began talking about the trade route again, but I interrupted him, \"Cin, come here, what is this?\" I asked. Cin stopped speaking to Kardes and walked over to the table. My sister followed her. Cin gazed at the map a second.\n\n\"Anaerki,\" she said, then turned and started to speak to Kardes again. I snorted.\n\n\"Yes, and this is the land of milk and honey just to its left. There to the right, dogs are kings and the streets are paved in silver,\" I said dryly. Everyone knew the stories of the Anaerki. A mysterious land in the North with bizarre, savage practices. It was a fantasy land invented by adults to tell their children during long winter nights with nothing else to do. Saygili laughed slightly at my joke.\n\n\"The only country with a dog for a king is this one,\" Cin shot back, \"That is the Republic of Anaerki,\" she said.\n\n\"That is a myth, really, what is that place?\" I said.\n\n\"It is not a myth, Cin said, her voice growing somewhat annoyed. If this was a joke of some sort, she was really committing to it, \"The Republic of Anaerki is a small patch of ground with a relatively small, warrior population. Their remote location and savage ways ensured that the Empire, in its hay day, enveloped rather than conquered it. The Anaerkis would, occasionally, raid into the Empire. Other times they were hired as mercenaries. That is how they got their fearsome reputation. But they have never left. They stay in the mountains and maintain their independence and neutrality,\" she said. I looked at her face, seeking some indication of a smile. But there was none. Cin was, apparently, telling the truth. I couldn't believe it. The stories I had heard since I was child...Some of it was true. But how much?\n\n\"Do they boil their enemies and eat them?\" I asked, thinking about one story in particular that had given me nightmares as a small child.\n\n\"Many of the stories told of them are exaggerations,\" Cin explained, \"But don't believe that it is all just stories. Their reputation is earned.\" Cin said. She saw me looking at her intently, still waiting for a straight answer, \"Boil? Sometimes. Eat? Never,\" she responded. I felt so strange, like we had uncovered a strange new civilization just outside our borders. A legend come to life.\n\n\"If they used to act as our mercenaries, why have they ceased to serve us? Why have they faded into legend?\" I asked. Cin smiled now, realizing I was taking her seriously.\n\n\"The Anaerkis do not worship Gunes. In the old days, given that they were outside of the Empire's direct jurisdiction, the Emperors did not press the point. They were allowed to worship their own, private goddesses. But Tanri was not as tolerant. The Anaerki refused to convert and the relationship faded,\" Cin explained. Yet another corrosion of the Empire that could be laid at Tanri's door. But Cin's story piqued my interest nonetheless.\n\n\"Are they still as war-like as they were in those days?\" I asked now. Cin shrugged.\n\n\"My experience with Anaerki is extremely limited. They were always very traditional. I doubt they have changed much,\" she said.\n\n\"I am going. I am going to ask their King...\"\n\n\"Their M\u00fcrebbiye,\" Cin corrected.\n\n\"Their...whatever, if what was once a profitable relationship can be salvaged all these years later,\" I said. I spoke with iron conviction. I don't know where it came from. But the sense of anticipation was rising in me with each word that Cin spoke about the ancient, mountain people. It was some sort of hunch, a realization that this was what I was supposed to do.\n\n\"I doubt it,\" Cin said without affect.\n\n\"Why? Is it dangerous? You know that does not bother me,\" I said, moving away from the table and joining Cin and Kardes.\n\n\"Unfortunately that is true. You don't know that there is a difference between bravery and recklessness. You are lucky that Gunes protects you,\" she said wryly, \"No, I don't doubt you would go. But I don't think you would have much success.\" I ignored her chiding and pressed on.\n\n\"Why not? If the bone of contention was Tanri...Well that is gone. I am in no position to dictate to outsiders. The God of the Empire is Gunes. But our allies can worship whatever they want,\" I said, warming to the prospect. Here it was, exactly what I had been looking for. A different kind of alliance, one that no one else would court. One that would be difficult to procure. Isn't that what Cin had been implying that I should look for? It seemed like a perfect opportunity.\n\n\"I think that it is unlikely that they have forgiven the rebuke offered by the earlier followers of Tanri,\" Cin explained, \"They are a very proud people.\"\n\n\"What is more humbling that the Sultanah herself, coming in person to apologize and ask for forgiveness? We simply explain that we made a mistake in the past, turned our back on an ally...a valued ally at that, and that we want to make amends\" The more I talked, the more I warmed to the idea. It seemed like an excellent strategy to me. But as finished speaking, Kardes snorted. I turned to look at her, she looked annoyed. \"What?\" I asked.\n\n\"You think that will be enough?\" she asked, \"A partnership of several hundred years, discarded over what you will now admit is a passing fad, and you think you can just say you are sorry? What right do you have to expect them to come crawling back to us?\" Kardes sounded bitter as she spoke, like she could sense enormity of the harm apparently felt by the Anaerkis. Cin remained quiet, looking at my sister.\n\n\"I am not responsible for the circumstances that gave rise to the breach,\" I said, \"I won't lean on that fact, it is unbecoming. But certainly they will be aware. I will simply say that as soon as the situation came to my attention, I decided to rectify it.\" Once again, I believed I had a perfectly satisfactory explanation.\n\n\"So their concerns did not come to your attention until several months into your reign? How will that fly?\" Kardes shot back.\n\n\"I have been a little busy defending my country and preventing it from being overrun,\" I said back, now feeling hot myself. Why was Kardes fighting me so hard on this? \n\n\"There are still issues closer to home,\" Cin said and then she looked over at my sister, making it clear she was lending support there. I had expected both my sister and Cin to think this was an excellent idea. But they both seemed reluctant.\n\n\"There are always going to be issues at home!\" I shot back, \"This is a chance to do...to do what you suggested Cin, and you know it. I am seeking new connections on my own terms. What is the source of your reticence?\" \n\n\"I never told you to jeopardize your existing strength in the search for something new. What are you doing to protect your current network?\" Cin said and I instantly furrowed my brow. \n\n\"What are you talking about? I don't have a 'network' that is the entirety of the problem!\" I said. I had no idea what my priestess was getting at. I was about to continue along this line of questioning, when Kardes cut in.\n\n\"You are going no matter what we say aren't you?\" she asked.\n\n\"It is my right. And I think it is best,\" I said.\n\n\"And you always do what you think is best. No need ask anyone else what they think or consider other options?\" She spat back.\n\n\"That is what I am doing right now. I just haven't heard anything that dissuades me,\" I explained.\n\n\"If you are going, then I am going to,\" Kardes said suddenly, \"I am going to make sure that you don't do anything rash. That you don't act without thinking.\" I was blindsided by all of this. When had Kardes ever questioned my wisdom in the past? When had I ever acted impulsively in a way that jeopardized my position? I sometimes acted quickly, but only when the situation dictated it. I shrugged my shoulders and stared at my sister.\n\n\"We are going to be riding though the mountains, it won't be an easy trip. But you are welcome to come if you want,\" I said. I usually enjoyed my sister's company and I knew that it was going to be a boring trek. I didn't see any reason not to allow her to come.\n\n\"Excellent,\" said Cin, suddenly sounding brighter, \"If that is the case, then I will make the preparations for your departure.\" It seemed that Cin's mood had done a 180 degree turn. Suddenly, she was not only on board with the trip, but willing to put everything in motion. I stared at her, confused, but she refused to make an indication of the sudden, seemingly impulsive change in her attitude. Why had my sister's decision to go with me made such a sudden and dramatic difference?\n\n\"I will make my own preparations. If you believe it is important, we should leave tomorrow morning. Dawn,\" My sister said. Then she turned and walked out the door. I watched her leave, my brow furrowed deeper and my body felt tense. \n\n\"Alright,\" said Cin, \"Let's plan this out!\" And then she jumped into the planning of my mission with great enthusiasm, all previous concerns suddenly set aside. Anytime I alluded to this change, she simply brushed me off. Instead she focused on providing me with all of the information she had on Anaerki, which was more than she had initially let on.\n\nWe had set out the next day at dawn, just as Kardes had suggested. As with my last trip to search for allies, I took my small legion with me. Saygili was in command and Soyguncu was there with a small, new contingent of cavalry to act as scouts. Cin stayed behind to manage affairs in my absence. \n\nI had hoped that whatever problem had caused my sister to be so disagreeable the previous night had faded. But it seemed as we left that she was just as angry, if not more so, than the day before. As we traveled I tried, in vain, to start conversations on a variety of topics. I did my best to choose things that I believed my older sister cared about. But Kardes refused to commit to any conversation. She would answer my questions in a monotone 'yes' or 'no' and then speak no further. After a few hours of nervous pestering I stopped.\n\nAs we traveled north from \u015eehir, things did not change. Well, the scenery changed. The army traveled over grassland, forded streams, and passed nearly single file through narrow forest paths. But all the while, Kardes stewed in her silence, leaving me questioning all my actions. I tried to think back over all of my encounters with Kardes over the previous few months, but I could find nothing that would explain this hostility. Eventually I gave up even trying to find out, I ignored Kardes as she ignored me. But within, I could feel a gnawing anxiety, an unease about the source of this sudden breach.\n\nThe army seemed to take on our somber, silent mood and we traveled for several days in near silence. Morale was somewhat low as the weather turned. As we made our way through forests in the foothills outside of Anaerki, it began to rain. It was an icy cold rain that fell lazily but persistently. It lasted for days, sinking into our bones and making everyone ache. \n\nBut we pushed on. The forest grew denser as we began to climb higher into the mountains. These were not white-peaked alps, but instead old, worn, green mountains that looked like nothing more than hills from a distance but became progressively more difficult to climb the farther we went. The men's calves ached and our horses grew exhausted climbing up and down the winding paths, heading toward the center of the gray spot on our maps. We didn't really know where, exactly, we were going. We were planning on being intercepted by the Anaerkis.\n\nAbout a week after we set out, this finally happened and in a particularly embarrassing and terrifying manner. We were travel on a twisting mountain pass. To our right was dense forest trending upwards towards the peak of the mountain. The trees were exceptionally dense and it was hard to see more than a few feet into the gloom. The top of the mountain was not visible. To our left was a precipitous drop off, at least twenty feet high but in some places much higher, leading to a small valley below. The path was only wide enough for two soldiers to walk abreast and we were moving slowly. Everyone leaned in towards the wooded side, trying to ensure that they did not fall off the path and into the valley below.\n\nSaygili, Soyguncu, Kardes, and I were in the front of the pack, leading the way. We'd been navigating the treacherous pass for well over half a day, wondering when we could possible stop to eat, when it happened. We made a sharp right turn, following the path. As we turned, I felt a sudden jolt of fear and excitement. On the road, directly in front of us, were two well-armored warriors blocking the way. They stood motionless just a few dozen yards ahead of us. They were armed with long swords and they had bows strung over their back. Their bronze helmets were plumed with red feathers, giving them a particularly fearsome appearance. They matched perfectly with the legends. They were the Anaerki.\n\n\"Hail!\" I said, raising my hand in a non-threatening manner. We had no desire to trespass.\n\n\"Stop, you have no idea what you're doing!\" Kardes said. I realized I had acted a little impulsively after being surprised and delighted by the sudden appearance, but I was in no mood to concede that Kardes was right about anything.\n\n\"You need to relax, let me handle this,\" I said to her before turning back to look at the warriors on the road. As I looked, I saw one of the warriors, the one on the right, raise a hand up in the air, locked in a fist. I heard a slight rustling to my right and turned to look. I jumped on my horse and nearly pulled it over the edge of the precipice. Just inches from my face, poking out from the woods, was a heavily armored head! I glance back behind me instinctively. All along the length of our lines, soldiers had suddenly popped out of the woods. The slightest shove delivered in unison could send my entire army tumbling over the cliff.\n\n\"I told you!\" Kardes said.\n\n\"It was too late anyway,\" I said, my heart thrumming in my chest. I turned and looked at the helmeted face again, I could see cool eyes in the open slit. I could feel the warrior's breath sour on my face. We were in extreme danger. There was really only one choice, \"Legion...This is your Sultanah. Keep your weapons in your scabbards. Raise your hands over your head!\" I called out loudly. I saw the warrior to my side startle slightly and I grew very nervous. But I quickly placed my hands over my heads. I could hear armor clinking behind me as my soldiers followed suit. The two warriors in front of us hand moved closer now, closing the distance between us rapidly. They stopped in front of me, taking the reins of my horse.",
        "\"We have not been told to expect foreigners,\" a high voice said, I was surprised to find, in the common tongue (though heavily accented), \"You are now prisoners of the M\u00fcrebbiye of Anaerki.\"\n\n\"We accept the situation for what it is and we will not resist. We meant no disrespect,\" I said, trying to sound calm. I could still feel the person at my side staring at me, \"We only sought an audience with the M\u00fcrebbiye.\" I noticed that the warriors seemed to relax. I knew they must've been following us for some time, wondering about our intentions. They had waited until they got us in a vulnerable position and then materialized out of the trees. I was not surprised to find we outnumbered them greatly. \n\n\"Well, we will be taking you to the M\u00fcrebbiye's official residence. If the M\u00fcrebbiye decides to grant an audience, there are few places more convenient,\" the warrior responded. Then, both warriors turned, whistled, and started to walk forward. The warriors poured out of the woods and began to intersperse in our lines, clutching their weapons tightly. Another, large group came up behind our soldiers, capping the end of our line. We started marching together, everyone quiet in the rain. Everyone, that is, except Kardes.\n\n\"This is your fault,\" she hissed at me as we began to move. I did not respond. In fact, I didn't know how to respond. Her hostility seemed to grow during the trip and now she was 'blaming' me for doing exactly what we wanted: finding someone to taking us to the M\u00fcrebbiye. \n\nPerhaps I was anxious about the meeting but I did not want to think about it. That is actually quite likely. But instead of focusing on the unknown (namely what would happen to us now that we were prisoners), I focused my anger and my anxiety on my sister. And, as our guides led us through the forest and through small, seemingly abandoned mountain villages, I stewed. This situation was tough enough as it was, I did not need members of my Inner Council, my sister for Gunes sake, second guessing me and growing angry with me.\n\nWe were not as close as I had expected to the M\u00fcrebbiye's residence. I don't know why I had believed that we would reach the conclusion of our mission in the center of the Anaerki. Regardless, it had been a mistake. The warriors walked us up and down the mountains, never pausing or flagged. My men, still hungry, were essentially jogging to keep up with the pace. The whole while, we moved higher and higher in the mountains and the air grew thinner. Evening was beginning to come on and I wondered if they were going to make us walk all night or if we would sleep in the elements. I considered asking one of the warriors, perhaps the one who had spoken to me earlier. But they all remained totally silent, not even their armor clinking as they walked. They moved more like specters than humans. The feeling made me uneasy and kept my mouth closed. And kept my mind stewing silently on my problems. \n\nBy the time we reached the M\u00fcrebbiye's residence, I was enraged with Kardes; if anything, the discomfort and the problems on this trip were her fault. I was so upset that I barely noticed the majesty of the M\u00fcrebbiye's compound. Calling it a castle would be giving it too much credit. It was a circular palisade wall surrounding a small village consisting mostly of hovels. There was a large residence in the very center of the building, a two story wooden structure with a slate, rather than thatched, roof. \n\nWhile this hardly sounds majestic, it was the location of the residence that gave it some splendor. The palisades encapsulated a small, hanging valley near the highest part of the mountain range. From the village, it was possible to see out over the green-topped mountains stretching off in every direction. I could see a massive river at the bottom of the mountain, in a narrow valley. I knew from my maps that this was the source of the Kuzey River, wich eventually led to \u015eehir. The rain had stopped shortly before we arrived and the sky was a pure, cloudless blue just beginning to grow dark in the far east and I could see rainbows in the distance. In short, it was a breathtaking place. Beautiful enough to allow me to forget about my sister for a moment.\n\nOnce in the center of the village we saw several women and warriors walking around. They purposefully took no notice of us, though I caught a few glancing at us out of the corners of their eyes. Once we were all within the palisade, the warriors closed the door behind us. The warriors fanned out along the perimeter of the palisade, turning their weapons towards us. The women moved into their homes, recognizing that the village was now a prison. They did not seem particularly concerned, more that they were trying to stay out of the way than that they feared trouble. The warrior who had first taken us prisoner indicated to me (and to my chagrin Kardes) that we should enter the M\u00fcrebbiye's residence and wait on our audience. I looked at my soldiers, anxious and silent and nodded to them encouragingly. I, of course, was slightly nervous now (despite the details of my plan) but I tried to convey calm. I was not sure if it worked, but nonetheless I turned from them. Kardes and I entered the residence and were led quickly to the reception hall. There we waited for the M\u00fcrebbiye and eventually we began to fight. \n\n\"This is neither the time nor the place to discuss this,\" Kardes said in response to my attempts to get her to explain the nature of her complaint. She scooted away from me on the bench we were seated upon.\n\n\"All we have is time. Who knows when the M\u00fcrebbiye will see us?\" I responded sharply.\n\n\"Please think about what you are doing! You are picking a fight in the middle of a diplomatic mission. Think of how this looks!\" Kardes whispered back.\n\n\"This is a fight you chose to have. You are angry at me for some reason and you won't say why,\" I shot back.\n\n\"Please just stop it now, control yourself,\" Kardes pled.\n\n\"You have the power to stop this, just tell me why you are upset so that I can understand it,\" I replied, feeling heated. I saw a few warrior heads turn towards us.\n\n\"Varis, please...\" Kardes said, her eyes growing wide and her voice starting to shake. She was getting angry now. She no longer bothered whispering.\n\n\"Just tell me,\" I interrupted. Kardes' lips pursed and her face was red. She was shaking with anger now.\n\n\"You want to know Varis? You want to know why I am upset with you?\"\n\n\"That is what I have been saying all along!\" I responded, exasperated.\n\n\"Why Nislani?\" She said and I saw tears welling in her eyes. I barely understood the meaning of her words. Nislani? What did she have to do with this, \"You decided you had to marry your sister. There were only two present. There was a spoiled brat who hated you and always tried to ruin everything in your life. And then there was your older sister, who was loyal to you, who gave you guidance before anyone else, who stood by your side when the world was trying to crash down around you. And what? You chose the brat! Is it because she is younger and prettier than me? Fine, I guess if that is important. But you didn't even discuss it with me. You just went and did it without even asking my opinion. And then, to make matters worse, you make me preside over it! You make me watch while you and Nislani consummate your marriage. And now you aren't getting along with her. Ha! I could've told you that was going to happen. But you didn't ask.\"\n\nI sputtered, completely thrown off balance by this sudden harangue. Whatever I had thought was the problem, it certainly wasn't this. I tried to say something, anything. Feebly, I noted, \"You were the one who told me to be nice to her...\"\n\n\"I told you to ignore her because her petty concerns because they were beneath you. I didn't tell you marry and then fuck her!\" Kardes responded. I was simply growing more confused. I felt like my body and mind were moving through molasses. What was Kardes saying? What did she want?\n\n\"So... you wanted...me to marry you instead of Nislani?\" I couldn't believe she meant that. \n\n\"I wanted you to think of me first! I have been loyal to you since the beginning. I know how politics works and I would be an asset. I was in the room when you came up with your brilliant little marriage idea, but you didn't even think of me. It was Nislani from the first instant. This is what I always get for the work I do for people...\" she trailed off.\n\n\"You know what Nislani and I had to do...have to keep doing. You saw it. You wanted that with me?\" I asked, still not sure she was fully understanding what she was asking for.\n\n\"There was a time when I would've done anything for you Varis. I believed in you as Sultanah. I loved you and would make any sacrifice to make sure that you succeeded.\"\n\n\"Loved?\" I asked, noting the past tense and feeling a coldness in the pit of my stomach.\n\n\"You may enter now,\" A voice said, causing me to jump. Kardes had not had a chance to respond and now she turned, her eyes welling with tears, towards the door of the throne room. A guard was present, beckoning us inside.\n\n\"Go Varis. You didn't need me in this decision either, so go do what you want,\" she said, no longer bothering to whisper. I rose mechanically and started towards the door. The guards were looking at us and I wondered how much they understood about what was going on. Maybe more than I did. I felt dizzy and my stomach was knotted up as I walked through the door. I heard Kardes walking behind me, moving lighter, like she was glad to have her troubles off her chest.\n\nI barely remembered why I was entering the room. My mind was now completely consumed with thoughts of Kardes. I tried to remember everything that had happened in the run up to my marriage. It was true, I had never thought of Kardes. I was listening to Nislani complain and then it struck me that there was a solution to both of our problems. Was it just age? Kardes was 38 and it was less likely that she would produce an heir than Nislani. Besides, as a widow there was no actual need for her to be married. She was not like Nislani, who needed to be wed for the sake of appearances. Speaking of appearance, that was certainly not it. Kardes was older than Nislani, but she was still an attractive woman. And I hardly chose Nislani because of sexual attraction. It had been a necessity.\n\nWhile I felt my reasons were quite clear, I had to admit to myself that these were more rationalizations than anything else. I had never even thought of Kardes. She already had a place in my life, as one of my trusted advisors. Nislani, on the other hand, had been a hanging problem. My only thought had been neutralizing her. Kardes had not even really figured into the equation.\n\nBut now that I thought of it, it became clear that Kardes had felt, at the very least, uncomfortable about the situation. When I had first made my announcement, Cin had been demonstrably in favor of the marriage. But I did not recall Kardes saying anything. Kardes did not, as usual, take command of the planning of the social aspects of the wedding, allowing Cin to do everything. Further, when she presided over the consummation, she had seemed intensely uncomfortable. I had just assumed she was uncomfortable because I was and Nislani was, but it was now clear that there was more to it than that.\n\nWhile I now understood that Kardes was upset, I still could not honestly figure out why. She seemed to blow off the implication that she was attracted to me. Then was marriage to me a reward for her loyalty? I truly respect Kardes and loved her deeply; I would have done anything to prove my appreciation for her steadfastness and her support. She had become a pillar in my life in such a short period of time, filling any gaps I'd lost when the men in my family were killed. Doing more than that in fact. I just never dreamed that becoming my consort was the sort of reward she would have wanted. In fact, I had never thought about any reward for Kardes or anyone else. I gave things to people like Kukla and Nislani, those I needed to convince. I always assumed my success and the success of the Empire was reward for Kardes. I had been wrong.\n\nAnd the more I thought about it, the more sense it made. Not, so much, that Kardes wanted to marry me. But what it was she believed the marriage would represent. I remembered Kardes story about her marriage to a man far distant from power. Her attempts to manipulate the situation to gain a seat at the table. The miserable failure of that attempt with the death of her husband. I thought about her knowledge of the court and the personalities at play there. Kardes was an important part of my success and she wanted a role that reflected her contribution, something that made her exercise of power legitimate. The story of Kardes life was a story of thwarted ambition, the role of most intelligent women in the Empire. Kukla was a similar story, a similar illustration. And when I had one place for a woman to gain some modicum of power, I had given to Nislani. I had never realized that, because I had neglected to think about it. \n\nAs I made my way into the M\u00fcrebbiye gloomy throne room, I was overcome with shame. I barely noticed the dirt floor, the roughhewn benches, the thatch roof. I was thinking of Kardes. Now all of her anger made sense. It even explained Cin's initial refusal to support the plan and the subsequent change of heart. She had understood what I didn't, that as important as it was for me to forge my new connections, it was equally important that I cultivate the loyalty of those dedicated to me already. \n\nBut, in truth, all of these thoughts were more of a jumbled set of impulses than the fully formed ideas laid out above. I instinctively knew all this to be the case, but I couldn't have put it so succinctly. And there was no time either. Because within a few minutes, Kardes and I had been led through the throne room, out a back door, and into the M\u00fcrebbiye's private chambers. Regardless of the importance I now placed on Kardes concerns, I had to focus now on the purpose of my visit.\n\nIn a daze, I came to terms with my surroundings. I was in a small room, around the size of the largest privy in my own palace. There were windows on one side of the room and they let a thin, pale white stream of lights into the dark room. It was dark because the walls were made entirely of some sort blackish wood. It was sparsely furnished, simply a bed, a chair, and a desk scattered with papers. One guard followed us into the room, closing the door afterward. There was only one person in the room. The M\u00fcrebbiye was seat at the desk, leaning over several papers. Unlike all of the other warriors we saw, the M\u00fcrebbiye was not wearing any armor. In fact, she was wearing very little at all.\n\nThe M\u00fcrebbiye of Anaerki, as all leaders of the Republic since its founding centuries earlier, was a woman. Those rumors, at least, had been true. Cin had told me as much during my briefing before I left. The Empire had always been unnerved by this fact, but the warriors of Anaerki were so potent, that the Sultans ignored the unorthodox nature of their government. I had been expecting as much when I arrived. What I was not expecting, however, was for the M\u00fcrebbiye to be such an attractive woman.\n\nShe was younger than I expected, mid to late thirties I believed, but in prime physical shape due to her status as a warrior-leader. A M\u00fcrebbiye, if successful, was elected for life. But she could be impeached if she was unsuccessful for battle. This particular M\u00fcrebbiye looked as though she would never lose a fight in her life. She was wearing only a loose skirt tied around her waist and a black, brassiere-like top that left little the imagination. As a result, I received an unimpeded view of her body. \n\nShe was quite tall, around 5'9 and had a trim, powerful build. She had slender legs with smooth, golden-brown skin with sleek muscles just below the surface. She had a muscular bottom and somewhat wide hips, especially given her height. Her stomach was flat and toned (though not overly muscled in any sort of masculine way). Her breasts were small and high on her chest, though they looked larger crammed into her small top. Her arms looked powerful without being overly muscular and she had a long, elegant neck. Her face was fiercely beautiful with a pointed chin, full lips, small nose, and large round eyes that were dark and intelligent. She had long reddish-brown hair that was tied behind her back in a long, tightly braided ponytail. In short, she looked like a beautiful athlete with skin tanned evenly from the sun and body toned expertly by daily practice.\n\nShe let us stand awkwardly for inside of the room for several minutes while she pored over documents on her desk. I did my best to maintain my Imperial dignity, looking off into the distance and ignoring the fact that she ignored me. I had plenty to think about, my sister's concerns still fresh in my mind. But, after a time, the M\u00fcrebbiye spoke without looking up.\n\n\"Why are you trespassing in Anaerki?\" she asked, her voice sounding annoyed even though it was almost as thickly accented as the warrior we had first encountered. The sound of her voice focused my attention on the matter at hand and my concerns about my sister shifted into the back of my mind. I had to answer this question. Without an adequate explanation of my arrest, I decided to change the subject.\n\n\"Greetings M\u00fcrebbiye, I am Sultanah Varis I of B\u00fct\u00fcn D\u00fcnya, I have arrived on a diplomatic mission from \u015eehir...\" I was going to speak further, but the M\u00fcrebbiye interrupted me.\n\n\"Why is the Sultan sending his wife on diplomatic missions? Does he think that will impress me? What does Tanri think of allowing women to work in politics?\" the M\u00fcrebbiye spat. It seemed that she was at least as ignorant of the Empire as I was of Anaerki. I decided to disabuse her of her misunderstandings gently.\n\n\"There is no Sultan in \u015eehir. And there is no Tanri either. There is only me. And Gunes,\" I said solemnly. Finally, this seemed to get the M\u00fcrebbiye's attention and she quickly turned from her papers, looking me over now with increased interest. I was now able to see her more clearly and was stunned by her youthful beauty.\n\n\"The heresy has passed? And a woman sits on the throne in \u00dclke? There are new things under the sun after all,\" she said, sounding amused. She stood now, her statuesque body rising to full height. I decided to follow the strand of her words, trying to lay the charm on somewhat thickly.\n\n\"We have had great reason and ample opportunity to consider the mistakes of the Empire's recent past,\" I explained, \"In a way, it is why I am here.\" I tried to sound as humble as possible and I bowed slightly as I spoke. I was really playing down my dignity as the Sultanah and I hoped that the M\u00fcrebbiye appreciated it.\n\n\"In that case, you are at least welcome to my quarters. We do not stand on ceremony in Anaerki, please excuse my informality.\" Her tone was much more inviting now. She walked gracefully around the bed and then stopped and sat down on the edge, facing us.\n\n\"Thank you,\" I responded, \"It is a pleasure to make your acquaintance M\u00fcrebbiye...\"\n\n\"Please, my first name, Mader\u015fahi, will be fine\" she insisted, \"As I said, we are informal here.\" I nodded, unwilling to grant equal access to her. I was going to humble myself, not give away everything.\n\n\"Well Mader\u015fahi,\" I said, the strange name catching slightly on my tongue, \"I wish to apologize on behalf of the Empire for our previous behavior. As you noted, we were in the grips of heresy. We followed a false God that taught of the inherent subservience of women. Whatever offense our actions cause, I hope that we can put them behind us.\" Mader\u015fahi looked at me quizzically. She glanced over my shoulder at the guard and then shrugged.\n\n\"Everyone makes mistakes. Clearly your ascension indicates that the Empire has recognized its past misogyny and has put it aside. I see no reason to hold a grudge. The apology is accepted,\" Mader\u015fahi said and I felt shocked. Diplomatically apologies, even one offered as freely and easily as mine, were not generally just 'accepted' like a private affair. This was an opportunity for negotiation, an opening into a talk on more weighty issues. Mader\u015fahi had simply shoved all that aside. She had not been lying about her informality. But it left me sputtering. Where was I to go from here?",
        "\"Your generosity is appreciated,\" I heard a voice to my left saying. I turned and saw Kardes speaking. Clearly she had seen my confusion and, as usual, she rescued me, \"We have grown up hearing stories about the ferocity of Anaerki arms. Tales of your mercy were less accurate.\" I felt relieved. Kardes had known exactly what to say, Mader\u015fahi smiled broadly and spoke to the \n\n\"Do you hear that, K\u0131z? The Empire has not seen us in battle in hundreds of years and yet our reputation precedes us,\" Mader\u015fahi said to the guard behind us. Her voice sounded amused (and a bit proud). I stayed quiet, letting Kardes take the wheel. Even if she was angry at me, she still recognized the interests of our family and our Empire. That was why she had decided to come with me. She said she no longer loved me, but she wanted to protect the Empire and, incidentally, me. She seemed focused.\n\n\"Well it is not merely legend. We had a demonstration of the Anaerki skill at arms today,\" Kardes stated and then described the way in which our forces were silently ambushed and taken prisoner during the day. Kardes played up the nature of our surprise. Mader\u015fahi took great joy in Kardes' recounting of her nation's military prowess.\n\n\"But mercy also,\" I added suddenly, \"Your warriors did not merely toss us over the ravine, the leader, he...\"\n\n\"He?\" Mader\u015fahi asked, furrowing her brow. And then laughing slightly, \"I don't know K\u0131z, should you be offended?\" she asked. I turned and looked at the guard standing at the door. I heard a good-natured laugh emanating from the helmet. Quickly the guard reached up and grabbed the plume on the helmet, pulling it off. I had been expecting a gruff face man with weather-beaten skin, someone like Saygili. Instead, I saw the smiling, youthful face of a woman. A woman who looked remarkably like a younger version of Mader\u015fahi was staring back at me. K\u0131z was, apparently, a beautiful woman.\n\n\"I apologize again,\" my face turned red, \"I just assumed...\"\n\n\"An assumption that many have made when facing our forces in battle,\" Mader\u015fahi explained, \"But all of our forces are women. Men are not permitted in our legions.\" My eyes grew wide. I knew that Anaerki was led by women. I assumed a council of old, wizened crones who were consulted by the military elite. Cin had not been certain, but had stated my assumption seemed likely. I had never expected a society that felt...inverted. Mader\u015fahi laughed at my confusion, \"It seems that the legends have neglected certain aspects. It does not surprise me that Imperial legions failed to tell their wives that they were whipped or saved by armed women.\"\n\n\"I guess not,\" I said, sounding as awestruck as I felt. Mader\u015fahi seemed to sense that I needed greater explanation and did not wait for me to ask.\n\n\"We live in a totally bifurcated society,\" Mader\u015fahi explained. \"The women control the military and the government and stay here, in the Keep, and on patrol, for most of the year. The men live far below in the valley with the children and any women who are pregnant or nursing. Each year we meet for a several weeks with our husbands. Did you notice the empty villages along your path on the way in? Those are communal family units used at that time. There we re-unite with our children briefly and mate with our husbands. When a woman reaches 18 years of age, she is sent here to the Keep to begin her military training. Men, upon coming of age, run farms and act as merchants.\"\n\n\"Why?\" I asked as she finished. It was not a diplomatic question, but I was simply curious. I could barely conceive of this organization for society. It seemed alien and unnatural. I needed to know more.\n\n\"Why what?\" She asked, \"Why women soldiers? That is easy enough. We are smaller and we eat less, making us more mobile and ideal for irregular cavalry units. We are more flexible, stealther, and we tend to live longer. Our senses are sharper. We go to war with light bows and small spears. When mounted and firing, brute force is not exactly an issue. Women also fight harder. We know when we lose that we will be raped and made slaves. We fight to the last. Further, we strike fear in the hearts of our enemies. At some of it is as simple as the fact that we are different, other soldiers do not know how to handle us.\" I could understand the logic in everything she said. In fact, I found it quite compelling. But that did not change the strangeness of it.\n\n\"Of course, we once had male soldiers as well. And female merchants for that matter,\" Mader\u015fahi continued quickly, \"But we found that the men, when armed, had a hard time accepting female leaders. When a female M\u00fcrebbiye was elected (which was rare) she often faced opposition to her policies,\" she explained.\n\n\"That sounds familiar,\" I said without thinking and I saw Mader\u015fahi smile. But it was true; it was the story of my Peers if I ever heard it.\n\n\"Well many years ago, the women of Anaerki faced this dilemma and they made a choice. They could have accepted subservience. Instead, they chose resistance. They rebelled. They eliminated the most prominent males (their husbands, in some cases) and disarmed the rest of the men. We have been in charge ever since. We keep the men as far from as possible most of the time. They are busy with their duties. We are not tempted to grant them additional rewards. Our older daughters act as spies to keep them in their place but, in all honesty, they have accepted the situation at this point,\" Mader\u015fahi said, with considerable, earned, pride. \n\nThat such a thing was even possible was beyond my comprehension. But Mader\u015fahi spoke with such conviction and with such ease that there was no doubt that what she said was true. I had seen the 'abandoned' villages with my own eyes. And I had not actually seen any men, just warriors with face-covering helmets. I had seen no children either. And, despite my absolute shock, I was more certain than ever that I was in the right place, seeking the right kind of alliance. What better partner for a Sultanah than an army of women? I felt like Mader\u015fahi had given me the perfect opening. I found my tongue and spoke.\n\n\"It is true what they say,\" I explained, \"history repeats itself. I will be frank as you have been frank. I confide that I have sat on my throne for only a brief time and I have not sat easily. There are many within my Empire that doubt my legitimacy. More importantly, the rest of the world denies my legitimacy. Not because of any defect in my parentage, I am my father's daughter, but because of my gender.\"\n\n\"This is a sanctuary in a hostile world,\" Mader\u015fahi agreed.\n\n\"I now ask you to be more than that,\" I said and Mader\u015fahi furrowed her brow, \"I did not come here merely to apologize. Though, if that is all I accomplish I will consider this trip a success. But, my most important mission was to renew an agreement that once existed. Or even to extend it. There used to be a tacit agreement between Anaerki and the Empire. Your nation provided force of arms and the Empire provided you with stability and support. I will to, at least, renew that agreement. But more importantly, I would like to sign a formal alliance with Anaerki on behalf of B\u00fct\u00fcn D\u00fcnya. This will help you to draw on the resources of the Empire. And it will help me sit more firmly on my throne, throwing the men who oppose me back on their heels. There are only two nations in the world, that I know of, led by women. It is imperative that we stick together.\" \n\nI had not intended to lay all of my cards out so quickly, but the situation had felt right. I had taken a risk, but I hoped that my directness and candor would pay off. Mader\u015fahi leaned back slightly on her bed and she rubbed her chin carefully with her thumb and forefinger. I saw her once briefly glance over my shoulder at K\u0131z.\n\n\"You need not answer immediately,\" Kardes said, trying to backtrack my impulsiveness, \"We merely wanted to give you the information to make a decision. We can be patient. Feel free to discuss this with...anyone who should be consulted\"\n\n\"I appreciate that, but I was elected for my decisiveness in battle and in diplomacy. The women expect me to lead and they expect to follow. I would no sooner ask their opinion on this than I would on my choice of husband,\" Mader\u015fahi explained coolly.  \n\nThen she sat for a while in silence. It was clear she was thinking deeply about the proposal. My nerves began to grow unbearable. It was almost worse not know that to receive a definitive rejection. My heart was pounding and the blood was coursing through my veins at lightning speed. Finally, Mader\u015fahi leaned forward on the bed and opened her eyes. She smiled, but sadly and shrugged slightly.\n\n\"I am sorry, I cannot,\" was all she said, and she held her hands up as if to show she meant no harm. My jaw dropped open. Despite my nerves, I had honestly not expected that. A flat 'no.' I croaked for a second, trying to make noise before my voice finally cooperated.\n\n\"No? Why not? Surely you understand that the situation has changed...I apologized...\"\n\n\"And I sincerely accepted the apology. There is no grudge here; a small country cannot afford grudges. But it cannot afford to take on the world based on some misplaced notion of female solidarity,\" Mader\u015fahi explained patiently, \"My heart, Sultanah, is with you. I want you to defeat your enemies at home and abroad if for no other reason to show the men in my country the folly of attempting to upset the balance of things here. But I have studied the decay of the Empire. I have monitored it to the best of my ability. It sounds to me like things have only gotten worse. I cannot commit my country to destruction.\" I felt like I had been punched in the gut. Her bluntness was no longer refreshing. She expected the Empire, and me, to fail. I was livid.\n\n\"I am not asking you to commit to destruction; I am asking you to take part in a glorious victory. You said yourself that your warriors are feared,\" I tried.\n\n\"That is because we know when to fight and when not to fight. We do not place ourselves in situations that we cannot win and thereby maintain our aura of invincibility,\" Mader\u015fahi stated. The fact that she exposed her strategic vision told me a lot about how long she figured I would survive, \"I am truly sorry Sultanah. I will not hold you prisoner, but I will not let you hold me prisoner either. I thank you for your visit and your apology, but it is time that we part.\" With that Mader\u015fahi rose and then turned to walk back towards her desk.\n\nI knew that I was now supposed to turn and exit the room. More than that, I was supposed to turn and exit the country. But everything had happened so fast. Once second, we were bonding over our shared struggles as women in power and the next I was being dismissed. Everything here was so abrupt and so off-putting. There was no chance for persuasion, not diplomatic dance. She made her decision, she stated it coldly, and then we were done. I was standing, sputtering, and trying to think of what I was supposed to do. This had not gone at all like I expected...\n\n\"What is that?\" Kardes' voice suddenly interrupted my internal meltdown. I turned and looked at her and saw that she looked calm, unmoved. Her arm was extended and she was pointing towards the wall. I followed her finger and I saw, in the bright spot on the wall splashed by the bright sun light, a small wall-hanging. It showed some sort of scene and was very crudely rendered. I wondered where Kardes' sudden interest in primitive art had come from. I felt like her voice had unstuck me from my stupor. Now I was ready to turn and to leave. But Mader\u015fahi stopped moving and turned to face the direction of Kardes' finger. For a moment, she simply gazed at the hanging, and then she smiled indulgently.\n\n\"Oh, the Tapestry of Goblen? Yes, it is quite unbecoming isn't it?\" she asked. \"But it is an ancient prophecy.\"\n\n\"Who is Goblen?\" Kardes asked interestedly.\n\n\"The Sun God, of course,\" Mader\u015fahi stated and my ears pricked up. The Anaerki worshipped the Sun God as well. My head, which had been bowed in defeated, shot up and I leaned forward slightly, trying to get a better look at the tapestry. The figures were quite small, but I could see that there were two panels to the tapestry. On the left were four human figures, little better than stick drawings, in a room together. They were lumped together closely, though I could not make out what they were doing. On the right, was a giant battle depicted with rivers of blood and clouds of fire.\n\n\"What is the prophecy, if you do not mind me asking, I know you are quite busy,\" Kardes said evenly. Mader\u015fahi laughed indulgently.\n\n\"Certainly not, it is one of the prized possessions of the M\u00fcrebbiye's house,\" she bragged, \"anyone is sure of its origin. Many say that Goblen herself stitched it with threats from a midnight sun in the far North. In the same way, no one knows how it came to be here. It has simply been here for as long as anyone can remember, going back to our earliest written records. Regardless, every Priestess who has viewed it has interpreted it in the same way,\" As she spoke, Mader\u015fahi walked closer to the tapestry. She gazed at it for a few moments before turning back towards us.\n\n\"According to that interpretation, this prophecy predicts that Goblen, or her representative, will come to this world in human form. A mixture of the spiritual and the physical. Goblen will bind herself to Anaerki and then, in a great battle, she will defeat the enemies of light and usher in a new era of human existence,\" Each word that Mader\u015fahi said made my ears prick and my skin tingle. My mouth went dry. I thought back to my coronation with Cin. This prophecy was so familiar. A Sun Goddess. A spiritual return. A new era. I looked at the tapestry glowing under the light of the Sun. I had never doubted the existence of Gunes before, but I would never doubt her absolute power again. I was too spellbound to speak.\n\n\"What are the people on the left panel doing? Who are they?\" Kardes asked. I strained now to look at the tapestry, to make out the details that she saw. Mader\u015fahi shrugged.\n\n\"No one is entirely certain. But the most common interpretation is that they are sealing an agreement in the manner wedding contracts are sealed in Anaerki,\" Mader\u015fahi responded.\n\n\"How is that done?\" Kardes asked, sounding genuinely curious.\n\n\"The female relatives of the marrying couple bind themselves together with a sexual act. Usually it is the mothers of the marrying couple, but it can be any two relatives,\" she said matter-of-factly, as though this were a common ceremony the world over. But it did not seem that strange once I thought about it. These women were alone together throughout most of the year; certainly they had sexual needs during that time. As for sealing an agreement with sex, I could hardly act as an impartial moral judge.\n\n\"They are having sex in the tapestry?\" Kardes asked, keeping at it. Mader\u015fahi did not seem to mind that we were not leaving, she was clearly enjoying the conversation.\n\n\"That is what they say,\" Mader\u015fahi responded, then she suddenly grew more animated, \"But the strangest thing, and the detail that the priestesses argue about the most is this character,\" she pointed to one of the stick figures, the only one stitched in red string, \"This one character is interpreted to be Goblen or her representative. You can see the large loops and two dots that make the primitive drawing of her breasts. But there, down between her legs...\"\n\n\"A cock?\" Kardes asked and I could feel her eyes turn towards me.\n\n\"Exactly!\" Mader\u015fahi, \"It is so strange. No one can tell what it means. But it is easily the most mysterious aspect of the entire tapestry.\"\n\n\"I believe,\" I said taking a step towards the center of the room. My body moved on its own and my words came without conscious thought. I was swept away by the magic of this moment, the utter impossibility that this could have happened without some divine plan, \"That I can explain the tapestry and eliminate all of the mysteries.\" I heard K\u0131z snort behind me, but Mader\u015fahi stared at me intently.\n\n\"What do you mean?\" She asked. I could not have spoken then if I had wanted it. But all of my intelligence had drained from my tongue and pooled in my fingertips. I did not explain anything; instead, my hands began to reach for my clothes. I could hear the confused sounds of Mader\u015fahi and K\u0131z asking me what I was doing, but I did not so much ignore them as I lacked the ability to heed them. I felt my armored chest plate fall from my body, my helmet then clanked on top of it. My boots, greaves, leather pants, gloves, and bracers soon followed them. I lifted my rough cotton shirt over my head quickly after that, exposing my breasts to the assembled women. Now I was wearing nothing but my bloomers\n\n\"Oh my! What is going on?\" K\u0131z said behind me, sounding confused. I hooked my fingers into waist band of my bloomers\n\n\"You are living in the prophetic moment, it will be fulfilled,\" I said and with that I quickly shoved my bloomers down, letting them pool at my ankles. I looked down briefly, seeing my limp cock lying between my thighs. I heard a gasp and realized that the others had seen it as well.\n\n\"Goblen be praised!\" Mader\u015fahi said and instinctively dropped to her knees. I heard K\u0131z drop as well. I looked at Kardes and she only looked slightly less stunned than I. I could heard the two Anaerkis asking a thousand questions at once, now it was there turn not to know what to do.\n\n\"I was born until two falling stars, like the two in window in the tapestry,\" I said, pointing to the wall-hanging. In the first picture there was a window on the room with the figures, two white streaks were there in a blue field, \"My birth fulfilled the 50th prophecy of Gunes. I also fulfill the prophecy of Goblen, the Sun Goddess. Goblen and Gunes are one and the same.\" The voice that came from my throat did not sound like my own. They filled the room and carried unmistakable authority.\n\n\"It cannot be,\" K\u0131z said in a manner that indicated she was trying to convince herself. Mader\u015fahi showed no such incredulity.\n\n\"It has finally happened. I never believed it would occur while I was in office. I have not noticed the signs, but they are so obvious now. The whole world is in turmoil. It is time for a change, the dawning of a new era,\" she said from her knees. I beckoned for her to get up.\n\n\"Are you...Goblen? Gunes?\" she asked nervously as she rose. I shook my head.\n\n\"I do not believe so,\" I said honestly, \"I am a representative, as you said before, and my path is often unclear to me. I simply know that I am on a path and that I must continue to go forward.\" Wonder filled the eyes of the women in the room. We all felt the power of the moment, we knew that we were on the precipice of something...incredible.\n\n\"What...What are we to do now?\" Mader\u015fahi said, suddenly deferring to my authority. The voice that had possessed me before was silent. I needed to find my own way now.\n\n\"Well...it is clear that we are to conclude an alliance,\" I said. This seemed natural. I had arrived to do that and the fortuitous discovery of the tapestry, just as I was about to leave, seemed to indicate that we needed to reverse course. Perhaps more importantly, I could feel electricity in the air. Something was happening here, something beyond the visible world. I could tell that something big had to happen and it had to happen now.\n\n\"The situation has changed entirely. I can no longer say no,\" Mader\u015fahi stated. I could see a feverish excitement in her eyes and there was no longer any hesitation.\n\n\"Then it is agreed, a full military alliance?\" I asked, shocked once again by how quickly the situation had changed. It was as if Gunes had changed the hearts of every person in the room. Mader\u015fahi quickly took my hand, shaking it firmly. Her eyes occasionally darted, nervous and confused, to my cock, but then would return to my eyes.",
        "\"Of course, it is agreed. I wish that there were greater words that I could use,\" she said. And then we felt...nothing. We both stood for a moment, our hands shaking. \n\n\"I thought...I thought something was going to happen,\" Mader\u015fahi said after an awkward moment. We had both been waiting for some sort of sign. Something momentous that would show we were moving in the right direction, to prove that the prophecy would be fulfilled. Now we both felt sheepish, the magic of the moment seeming to fade. We dropped our hands to our sides.\n\n\"Is this it?\" K\u0131z asked nervously, now she too had risen from her knees and walked around so that she was standing next to Mader\u015fahi. I shrugged my shoulders.\n\n\"You have not completed the proper motions,\" Kardes suddenly said from my side, \"Have you already forgotten about the tapestry,\" she said, pointing to it. The figures in the room. The sexual bond.\n\n\"We need to seal the agreement,\" Mader\u015fahi realized, then she turned back to me, smiling nervously. I felt a thrill run up my back. I had forgotten in the excitement. Now a new form of excitement gripped me. Something I always associated with Gunes.\n\n\"We have made an agreement,\" I said, feeling my cock twitch slightly. Mader\u015fahi looked down at it and smiled nervously.\n\n\"It has been a long time since I have had a cock...\" she said. That seemed to settle it. We both knew what we were going to do. It was just a matter of starting. Once again, we paused awkwardly for some time.\n\n\"How exactly is this done?\" I asked, \"Is there some ritual to it?\" I asked. I looked at Mader\u015fahi's tight body and wondered what it would feel like. But I did not feel right just suddenly grabbing it. Things still did not feel rights.\n\n\"Usually...Well there is no usually, you just sort of do it after you made an agreement,\" Mader\u015fahi said. Something still was not right. The room became darker as the sun slipped behind a passing cloud. We didn't feel like we could just jump right in. There was nothing that should have held us back, but there was some invisible force in the room, telling us that we were wrong. The same pregnant feeling of incompleteness hung in the air around us. My cock remained limp, the passions stirred once again resumed their normal course. Finally, someone spoke.\n\n\"M\u00fcrebbiye, I think that we are once again mistaking the message of the tapestry. We are not dealing with a normal agreement,\" K\u0131z said after moment, \"the tapestry does show the customary two people. There are four.\" All eyes once again returned to the tapestry. I felt a lump in my throat. The guard was right. Just thinking about it, made my blood warm and I felt my heart beating faster. It felt like we were on the right track. \n\n\"We are not binding two families together in a commercial or political transaction,\" I suddenly stated, my voice taking on the strange, mechanical aspect that had unnerved me before, \"Yes, we are binding the physical. But we are binding the spiritual as well. \u00dclke with Anaerki. Gunes with Goblen. The additional significance requires additional celebrants.\" And with that the idea closed from my mind, but the inherent logic of it remained compelling. We all soaked in the meaning of the tapestry when coupled with my words.\n\n\"Who are the other two?\" Mader\u015fahi asked, though everyone was thinking the same thing.\n\n\"I can't imagine the prophecy was for four people to discover the truth, then for two to leave, and then for two more to arrive,\" K\u0131z said, though it sounded like she was desperate to believe something different.\n\n\"But it can't be the four of us\" Mader\u015fahi said quickly, clearly waiting for someone to say exactly what her guard had said so that she could push back. She sounded almost panic as she turned from looking at K\u0131z and appealed to me, \"K\u0131z is my daughter,\" Suddenly, their strikingly similar appearance made perfect sense to me. It also made sense that the younger woman would serve as her mother's bodyguard. Who could she trust more implicitly, especially considering there was no hereditary leader? But the implication of what that meant hung heavy in the air. It seemed to get to the M\u00fcrebbiye and Mader\u015fahi continued her thoughts:\n\n\"I did not raise her, it is true. Her father did, as is the custom. I barely knew her, just a few weeks a year, until five years ago when she became a woman. But it is nonetheless inappropriate. There must be some other way,\" But even as she spoke, the air in the room seemed to grow colder. She ignored it, \"I can see the family resemblance here, who is this Kardes to you, Sultanah?\" I turned and looked at Kardes.\n\nI was about to answer quickly, but as I looked at Kardes, her eyes turned to me. I saw her pupils clearly, her kind eyes. I thought the important place she held, unofficially, in the administration of my Empire. She had taught me to behave in a regal manner. She had discovered the means to control the Executive Assembly. She had prevented me from leaving this place impulsively when I was first dismissed. She had found the tapestry and understood its importance. I thought of her loyalty to me and to the Empire. I thought of the ways in which I had failed to reward her and had harmed her pride. I thought of times when I should have at least considered her advice, but did not even think to ask. The quick answer I was about to give no longer seemed to make any sense. I smiled at Kardes for a moment, and then I turned back to Mader\u015fahi.\n\n\"This is Kardes Hanedan. She is a member of my Inner Council, an invaluable counselor, and the first woman in the history of the Empire to hold the title Minister of State as our chief diplomat. If any person should be involved in the sealing of an alliance, it is her,\" I said slowly and I could hear Kardes breath in sharply as I announced (impulsively perhaps) her new title, \"She also happens to be my older sister.\" I finished. I turned and looked at my sister after I spoke. She looked completely taken aback. I reached over and took her hand. Squeezing it tightly I whispered into her ear, \"You've earned it.\"\n\n\"You are... in favor of your sister being present for this. With participating?\" K\u0131z asked.\n\n\"This sister? Yes,\" I responded without hesitation. K\u0131z looked over at her mother and shrugged. An impish smile formed on her face. We could all feel the energy rising in the room. This felt right. The normal rules clearly did not apply. Whatever we had been searching around for, it made sense.\n\n\"It is often said in Anaerki that agreements should be sealed in blood. I have never seen it done this way,\" Mader\u015fahi said, then her face split into a smile, \"But damned if it does not seem right, right now,\" she said. \n\n\"Do you think we can actually do this?\" I asked, trying not to look at my sister out of the corner of the eye. I knew I could. I had done it before. But could everyone else?\n\n\"How can we not?\" Mader\u015fahi asked, \"It is clearly willed by the Sun God.\" She did not speak as though trapped by fate. In fact, she seemed to welcome it.\n\n\"My mother has always been my ideal of beauty and strength. I have admired her from a far since childhood and my admiration has only grown since I have come to know her as an adult. I cannot say I have ever thought that this would happen. Why would I? But it would be an honor,\" K\u0131z said and her cheeks grew red. Her mother also looked slightly embarrassed, obviously quite flattered.\n\n\"I would do anything for you,\" Kardes said to me and I felt my heart swell. I had let Kardes know that I loved her still and that I respected her. Her affection as returned to me and I realized its importance by my brief experience of is loss. There were no doubts now. \n\nBut, once again, we stood silently in the room, looking at one another. I could feel excitement rising inside of me, I knew something interesting was going to happen. But no one wanted to make the first move. No one knew what that move would be. The tension just kept growing and growing in the room, making the air feel thick, heavy.\n\nFinally, Mader\u015fahi was the first to crack, \"Let's forget who we are now. We exist to fulfill the prophecy, our relationships begin and end with that. We can worry about the rest later. Let's just get passed the start and the discomfort will melt away,\" she said. Without further word, she turned quickly to face her daughter. Her hand slipped behind K\u0131z's neck, pulling her slightly to the side. Mader\u015fahi tilted her head to the side. I watched as their lips pressed together, mother and daughter. At first, their lips simply linked gently, their bodies staying distant. Eventually, K\u0131z seemed to melt into her mother's kiss, pressing her body against Mader\u015fahi. Their lips parted and I watched as their tongues began to explore one another's mouths. The electricity in the room grew more intense. I felt my cock stirring between my legs. \n\nI felt a sudden compulsion to turn towards Kardes. I saw her looking at me already. Her nipples were sticking out hard through her shirt and her lips were slightly parted. The slight wrinkles that lines her face seemed to have smoothed, she looked younger than I could ever remember seeing her. Her bright, emerald eyes shone with excitement. We felt the same impulses that had pulled Mader\u015fahi and K\u0131z together playing on our bodies. There was no will to resist. We didn't bother.\n\nMy hands seemed to move on their own and they quickly found their way to Kardes' hips. I felt the warm, roundness of her body alluring and my hands moved to the narrowest area of her waist. Kardes reached up around my neck, hooking her elbows around the back of my neck. I felt my sister's large breasts press into my own, I felt my cock brushing against her leg. Kardes closed her eyes now and tilted her head to the side. I followed suit. In a moment, I felt my sister's soft lips brush against my own. My lips tingled and my cock felt thick against my sister's leg. I could smell her skin, fresh as the morning rain. I moaned slightly, opening my mouth. Kardes exploited the breach and soon I felt her tongue tumble into my own. Her tongue was thick and cool, and she moved the rough surface against my gums and then drug it sensuously over my teeth. I spread my lips farther, letting her slip deeper inside of me. I probed out with my own tongue, tasting her.\n\nIt felt so natural then. I cannot explain it. Just an hour earlier this was the last thing I ever would have expected to happen. Even before I had offended Kardes, I would not have thought of doing this. She was my older sister and she was beautiful (she looked so much like an older, kinder Nislani after all) but my incestuous experiences in the past had largely been the result of necessity. But somehow, this did not feel like incest. We were cloaked in the rays of the sun, we fulfilled the prophecy, we acted out our roles, and it felt lovely. Something else was in control of the situation. It could only have been Gunes, protecting me. She made the prophecy come true, she brought me new alliances, and she allowed me to honor my older, more important alliances, all in one moment. There was no room to second guess. Everything just came as it came.\n\nApparently Mader\u015fahi and K\u0131z felt the same way. While Kardes and I kissed and our bodies pressed ever more closely together, I became aware of a strange sound next to us. At first I could not make out the nature of the sound. Eventually, I heard a strange clanking noise. I opened one eye and looked over towards the other two women and I saw that K\u0131z's chest plate had dropped to the floor. I saw her mother's hands working all over her, loosening ties and buckles, removing her clothes. K\u0131z was attempting to do the same, though much more quietly. I saw her hands on the blanket around her mother's waist, pulling at it and trying to loosen it.\n\nMy eyes closed once again. But as my focus returned fully to Kardes, I was slightly surprised to find that my hands were already occupied. Like Mader\u015fahi and K\u0131z, my hands were flying over my partner's body, pulling clothing loose and dropping items onto the floor. Kardes offered no resistance. On the contrary, as I pulled on fabric or adjusted belts, Kardes moved to assist me. In just a few minutes, Kardes was naked before me; our lips still pressed together, my cock now sliding half-hard against Kardes' smooth thigh. \n\nI heard a slapping sound as a shirt fell onto the floor next to me and I knew without looking that Mader\u015fahi and K\u0131z were naked as well. With difficulty, I was able to open my eyes and break my kiss with Kardes. I heard her whimper slightly as her eyes fluttered back open. She smiled at me dreamily and allowed me to turn and face Mader\u015fahi and K\u0131z (she gasped as my cock slipped from her thigh). Mader\u015fahi and K\u0131z had also stopped kissing and they turned to face me. \n\nThe bodies of the three women surrounding me were exquisite in their nude state. As I pulled away slightly, I was shocked by the degree to which Kardes' body looked like Nislani's, if a little more mature. Her breasts were the same shape as my wife's, but they were much larger. Despite that, they were not saggy or droopy, instead sitting up on her chest, her dark nipples pointing straight out. Her stomach was a little fuller than Nislani's but by no means chubby. Similarly, her hips were wider and her ass more generous. Her cunny was shaved bare in the courtly fashion and her cunny lips were dark, perhaps a bit larger than Nisani's. But in general, she looked like Nislani (or me for that matter). A slightly bottom-heavy hourglass shape with sweeping curves and delicate limbs. \n\nAs Mader\u015fahi and K\u0131z, their bodies were just as tight and athletic naked as they had appeared when clothed. K\u0131z looked remarkably like her mother. They had the same faces, the same small breasts, the same flat stomachs, the same muscular asses, and the same runner's legs. I could see that both women had small, puffy red nipples, full red pussy lips, and small triangular patches of well-kempt pubic hair. The only difference was that Mader\u015fahi's face was slightly lined and a bit more severe while K\u0131z was slightly rounder. I attributed this to the stresses of the job. That would also explain the handful of gray hairs that topped Mader\u015fahi's head but not that of her young daughter. \n\nI looked up at the tapestry, the four naked figures standing together in a tight formation. I realized we had reached that exact moment, the predicted event. My body trembled and my cock grew harder as I realized that we had done everything right. I could almost feel a red glow, like the one emanating from the primary figure in the tapestry. The other women were looking at me, waiting for me to take my place in the lead. Somehow, I knew exactly what I wanted.\n\n\"Mader\u015fahi,\" I said, \"I need you to lay on your back on the bed. Spread your legs.\" I ordered softly, there was no force in my command. It was like I knew what she wanted and was giving her permission. Mader\u015fahi responded with alacrity. Without speaking, she lay back on the bed, her legs pulling apart widely. She was laying across the width of the bed, her feet towards me and her head right on the edge of the bed on the other side. The reddish lips of her cunny spread open and I could see her glistening in the sunlight. The red nub of her clitoris stood out hard at the top of her cunny. Her breasts spread out on her ribcage and her lips were pulled apart, smiling. Her eyes looked feverish. Like she was desperate for me to begin. I wanted to oblige. But an urge came over me, an understanding of what was needed next.\n\n\"Kardes,\" I said and turned to look at her, rubbing her elbow with my hand, \"My beautiful sister. I need you to go and straddle Mader\u015fahi's face. Face me on your knees,\" I said. Kardes bit her lip and nodded. Then she quickly walked around to the other side of the bed. She stood and faced me when her hips were directly behind Mader\u015fahi's head. She looked down at Mader\u015fahi and smiled. I watched as my sister ran her hand over Mader\u015fahi's hair for a moment and she may have whispered something. I saw Mader\u015fahi nod and then my sister stepped up onto the bed.\n\nKardes placed her knees on the bed, lifting herself up easily over Mader\u015fahi's face. She placed her hands down on either side of Mader\u015fahi's hips as she adjusted her knees. Then Kardes sat back until she was kneeling over Mader\u015fahi's lips, her large ass spread out of the M\u00fcrebbiye's face. Kardes let out a strange cooing sound and I saw her sink down farther onto Mader\u015fahi's face. It was hard to see from my angle, but I could tell that Mader\u015fahi's tongue was already moving around on Karde's cunny and sucking at her clit. Kardes moaned loudly. Mader\u015fahi's hands quickly rose up to her own chest, finding her nipples with her fingers. I watched she began to play with her breasts, her hips moving slightly on the fabric of the bed. Her cunny grew wetter and the scent of it began to fill the air.\n\nWhatever force was compelling me told me that it was my turn to move next. I did not speak, I just let the impulses move me as they wood. I stepped forward towards Mader\u015fahi, my body vibrating with excitement. I was not breathing. My hands lowered and dropped down onto Mader\u015fahi's knees and I felt her trembling as I pushed them farther apart. Her musky scent rose higher, filling my nose and actually coating my tongue. I looked down between my legs now, I saw my cock was fully hard now, my body ready and willing. Mader\u015fahi's hips were shaking on the bed and it was clear that she was ready as well. \n\nI heard Kardes gasp and I looked up. Her body was rigid and she was smiling, her hands on her own hips, holding tightly. I wanted some of what she had. I took a step forward, pulling Mader\u015fahi's legs around me. I moved my right hand down, wrapping it around the base of my hard cock. I looked up at Mader\u015fahi's tight body and I pushed my cock down. I felt the tip of my cock tap Mader\u015fahi's clit and then slide down between her cunny lips. She felt wet and incredibly smooth. I heard Mader\u015fahi moan, muffled by my sister's cunny on her face. She writhed more wildly on the bed. \n\nI reached my free hand forward and grabbed Mader\u015fahi's hip, rubbing her skin gently with my palm. The tip of my cock was now pressed against the opening of Mader\u015fahi's cunny. In fact, it was buried within the folds of her lips, wetting the tip of my cock and preparing it. I felt the heat of her body surging through me. I wanted more. \n\nCarefully, I started to press my hips in towards Mader\u015fahi's body. I heard the woman groan as her cunny split open, making room for my hard cock. The slick walls of Mader\u015fahi's cunny wrapped tightly around me. But I could feel her body pulling me in harder, desperate for more. Inch after inch of my cock slipped into Mader\u015fahi's cunny. She became tighter and tighter as each second passed. My body tingled all over and I started to breath in ragged breaths. Finally, I felt my balls press against Mader\u015fahi's asscheeks and I felt my hips lock into hers. \n\nI looked down and saw the root of my cock pressed against the Mader\u015fahi's stretched red cunny lips. Her hard clit sat up, aching for attention. Mader\u015fahi was writhing on the bed, shoving her hips down, driving to drive my cock deeper into her body. Her wet body was wrapped tightly around my cock and it felt like it was milking me, trying to pull the salty seed out of my balls. I groaned and pitched forward. My right hand now landed on the bed next to Mader\u015fahi's breast and I could feel her rubbing against the inside of my elbow. My cock drove deeper into Mader\u015fahi's body and now our stomachs were pressed together and I could feel her trembling. \n\nI could also hear her moaning into my sister' cunny more clearly. I looked up slightly. I saw Kardes looking down at me. Both of her hands were on her breasts now, playing with her nipples and sinking her fingers into her flesh. She was smiling at me and her muscles seemed rigid and tense. She was panting and occasionally her eyes would close and she would let out a satisfied moan.",
        "Almost everything was in place now. But I suddenly became aware of a loose end. Or, more accurately, whatever force was controlling the proceedings finally indicated a role for our final participant. I did not think about what I was going to say. In fact, I had no idea what I would say until the words were suddenly flowing out of me, \"K\u0131z, get down on your knees behind me. Eat my ass!\"\n\nOnce again, there was no hesitation on the part of my remaining companion. She was standing to my side (looking nervous that she would be left out) when I spoke. At my words she essentially jumped up and then ran around behind me. For a few seconds, I felt her carefully dropping herself down onto the ground behind me. Her knees settled between my calves and I felt her breasts press against the backs of my thighs. \n\nI felt her warm breath against my ass and then, after a brief moment, her fingers were sinking into the flesh of my asscheeks. She carefully spread them apart and the air felt cool against my exposed anus. But not for long, K\u0131z was desperate to get involved. I felt her face press warmly against my spread asscheeks. Her breathing became warmer, more concentrated on my asshole. Then I felt her lips press gently against the crinkled rosebud of my anus. I arched my back (shoving my cock harder into Mader\u015fahi's body) and gasped. I felt her lips part and her warm, wet tongue slipped from her mouth and drug along the rough surface of my asshole. The taste buds on her tongue raked over me, sending jolts of sensation through my body, making my nipples ache. K\u0131z moaned now, sending a vibration through my body and then she grew more adventurous, sticking her tongue out further and lapping wantonly at my asshole.\n\nWe were all in the correct position now, everything felt right. Kardes was on her knees, her back arrow straight and her muscles tense. She made a low croaking sound on occasion. Her eyes were closed and her mouth was open. She was rocking slightly and her hands were clasped on her ample breasts, squeezing them and playing with her nipples. I think she had already cum several times. Her ass was sitting flat on Mader\u015fahi's face. Her asshole was perched on Mader\u015fahi's nose and her warm red cunny was sitting directly on Mader\u015fahi's lips. \n\nI could sometimes see Mader\u015fahi's tongue, slipping out from her mouth and running along my sister's cunny lips, focusing on her hard clitoris. Other times, her tongue was pulled back, actually shoved inside of my sister's cunny, tasting her slippery juices. Her chin was dripping with saliva and cunny juices. The whole time, Mader\u015fahi was moaning loaning, sending vibrations through my sister's body. Mader\u015fahi's body was laid out across the bed and it was writhing in ecstasy. One of her hands remained on her breasts, but it was simply grasping it, as though it was keeping Mader\u015fahi in place. Her other hand was on the bed, pulling desperately at the sheets. Her legs were spread and her knees were pushed back far, so far that her limber body was almost completely pushed back with her thighs on the covers. \n\nI lay into between Mader\u015fahi legs, my stomach lying across her's and my head hung down, draping my hair over her breasts. My cock was pushed into her sopping wet pussy, which was leaving a damp spot on the covers beneath her ass. I was supporting myself with my hand and focused entirely on pulling my cock in and out of Mader\u015fahi's body. Her cunny, still almost unbearably tight, was so wet that I could slip in and out easily. But I each time I went back in, I seemed to sink deeper and deeper inside of her. I groaned as Mader\u015fahi's body seemed to suck and pull on my cock.\n\nK\u0131z was behind me on her knees. I could not see what she was doing, but I could feel it her so clearly that it felt like seeing. She had spread my asscheeks wider and wider, getting more and more access to my asshole. I did not know if she'd ever done anything like this in the past, but she took to it with gusto. Her tongue, soft and flat, lapped at my anus passionately, coating it with spit and massaging my sensitive nerves. Occasionally, she would make her tongue rigid, poking her tongue into me furtively, tasting the depths of my asshole. She moved her neck to the rhythm of my thrusting cock, keeping her tongue close. My cunny dripped down on my balls, making them wet. Each time I swung back, my balls smack damply into her chin. She was close enough to smell the musky scent of her mother's cunt while I fucked it. I could hear her panting wildly as she licked.\n\nThe power of our movements was too much. Whatever force was controlling the events had no interest in allowing me to hold one. After several minutes of moving together in a writhing mass, I shoved my cock hard into Mader\u015fahi's body, my body rubbing hard against her clit. This seemed to push Mader\u015fahi's over the edge. Her shaking stopped and her body became incredibly rigid. I felt her cunny, already so tight, squeeze hard around my cock, milking it wildly. At the same time, K\u0131z's tongue plunged hard and rigid into my asshole. The attack on my nerves was too much. \n\nInstinctively, my eyes closed and my muscles tensed up. I heard myself groan loudly and I tried to shove my cock harder into Mader\u015fahi's contracting cunny. My anus tightened around K\u0131z's tongue, locking her inside of me. My body trembled and my breath caught in my throat. I felt like the world was standing still, waiting for everything to break loose. Finally, the tension released in a wave of icy warmth that emanated out from my cock, spreading all over my body and soothing my raging mind. I felt my cock contracting inside of Mader\u015fahi's taut body, shooting big gobs of milky white liquid into her waiting cunny. The room was filled with the sounds of wet bodies moving together and the passionate moans of women in the midst of climax. \n\nFinally, the noise began to die down. The last of my seed deposited in my lover's cunny and my anus loosened on K\u0131z's tongue. Even Mader\u015fahi's cunny, filled to the overflow with seed, relaxed, and my cock slipped out of her, still hard. Seed poured from Mader\u015fahi's cunny, pooling in a pearly puddle next to her ass. Kardes, apparently overwhelmed by a series of orgasms, collapsed onto her side on the bed. Mader\u015fahi's glistening face remained looking at the ceiling. Even K\u0131z dropped back on her ass on the floor, catching her breath. The room was silent except for the sound of panting.\n\nBut I could tell that the events were not over yet. Not by a long shot. My body was still tired, my brain still recovering from the fog and fuzz of my orgasm, when the imperative to act once again came upon me. I rose up quickly from the bed, pulling out from between Mader\u015fahi's legs. I felt wobbly and lightheaded on my feet. I was short on oxygen and would not have moved absent the external impulse that drove me. As I moved, the other tired women looked at me, their eyes confused and surprised at my rapid movements around to the far side of the bed. In a moment, I found myself standing at Mader\u015fahi's desk chair. I turned it around, away from the desk and sat down, relieved. I spread my legs wide. My cock was still hard and it stuck up straight in the air, glistening with Mader\u015fahi's juices and topped with a singly bead of pearly seed. I put my arms on the armrests and took have a second to catch my breath. But I already knew what I needed to do next.\n\n\"K\u0131z,\" I said, \"come over here and sit on my cock, facing out.\" K\u0131z rose quickly on the far side of the bed, looking around a little surprised that she had heard her name. Her face was slick with her saliva and I knew the taste of my ass was still on her recently-squeezed tongue. I was glad that I could help her now, she had been the odd-woman out the first time around. She was apparently excited as well and no longer thought of her fatigue. Instead, she rushed quickly around the bed.\n\nIt was almost like K\u0131z had the same vision in her mind that I had. Because as soon as she was standing in front of me on the chair, she turned around quickly and placed both of her hands on the armrests. I looked at her taut back and smelled the sweet scent of her tightly braided hair. Her muscular ass stuck out towards me and my mouth watered to look at it. I was no longer tired. I was just as ravenous as I had been before I'd cum the last time. I wanted more. \n\nK\u0131z lifted herself up with her arms on the chair while she started to spread her legs. She pushed her hips back as she lifted and I shuddered deliciously when her thigh rubbed against my erect cock. K\u0131z locked her elbows out now and she was essentially floating above me, her cunny levitating a few inches above my cock. K\u0131z then slowly started to lower herself down on top of me. I moved one of my hands down, grasping the silky steel of my cock and holding it in place. After a few moments, K\u0131z had lowered herself down onto my cock.\n\nI felt the kiss of K\u0131z's cunny lips against the raging tip of my cock at the same moment I heard her let out a loud, triumphant sigh. K\u0131z's cunny lips split apart as she lowered herself still further, impaling herself on my hard cock. She was unbelievably wet, like I had punched inside of her and found a reservoir of liquid passion. Her juices dripped down the shaft of my cock as she pushed herself further and down onto me. K\u0131z was unbelievably tight, even tight than her mother. If it had not been for her extreme wetness, I doubt I could have fit inside of her. I could feel ever ridge, ever variation on the inside of her cunny and they all caressed my throbbing cock. \n\nAfter a few careful moments of lowering herself down, K\u0131z's ass settled down onto my laps, warm and heavy and she let out a soft moan. My cock was buried deep in her body and stretching her lips, causing her clitoris to protrude. As K\u0131z settled, she swept her legs back, allowing them to slide back in the chair on either side of my hips. She arched her back as she did so, sinking deeper into my lap and pushed her round ass into my stomach. She took her hands on the armrests and her cunny to wrap more tightly around my cock. I reached my arms up around K\u0131z's body, under her arms. I grasped at her breasts to hold her up, my hands felt her perky flesh and my fingers toyed at her nipples. Her body felt simultaneously hard and soft against me and I could feel her muscles and silky skin all around. K\u0131z began to bounce gently on my cock, moving it in and out of her body. I clamped my elbows at her sides, holding her tightly and helping her to bounced, pulling her up and down.\n\n\"Mader\u015fahi,\" I said, my voice coming out before I even realized I desired to speak, \"Get on your knees in front of the chair. I need you to lick us!\" I moaned as K\u0131z's cunny squeezed and milked on my cock.\n\nMader\u015fahi had been watching our movements unfold from her position on the bed, her eyes wide as my cock (so recently inside of her) sunk deep into her daughter's warm cunny. Now she rolled quickly off of the bed and dropped onto the floor. She landed on her knees and quickly crawled the distance that separated her from the chair. She kept her eyes on us as she moved and they flittered between watching my hands caress her daughter's breasts to watching my cock gently work in and out of her daughter's cunny.\n\nAfter a few moments, Mader\u015fahi was on her hands and knees on the floor in front of us. Mader\u015fahi was close enough now to smell her daughter's cunny and to hear the sound of my balls as they smacked into her ass. There was no hesitation now, no question about what to do. Mader\u015fahi made an alluring cooing noise in her throat and then leaned in. I felt her ponytail tickle the inside of my thigh and then I felt her breath against my balls. I could no longer see her now, her daughter blocked the view. But after a short time, I felt her. \n\nI felt the wet warmth of her tongue as it pressed into my scrotum. Her tongue grew broad and soft as she lapped at my balls. They were wet from her daughter's juices and she sucked them into her mouth. Her tongue then traveled up from the base of my balls, up the small piece of my shaft that was not inside of K\u0131z's cunny. Mader\u015fahi tickled this spot with her tongue, teasing it. Then I no longer felt Mader\u015fahi's tongue, but I heard K\u0131z moan more forcefully than before and I knew that her mother was licking her throbbing clit. After a few moments, Mader\u015fahi's tongue returned to cock and balls and she continued to give both of us attention, alternating and keeping up with the steady increase of speed as I began to thrust harder and harder into K\u0131z's cunny.\n\n\"Kardes,\" I said without knowing what I was going to say next, \"Get behind Mader\u015fahi. I want you fingers in both of her holes!\" I pleaded. Mader\u015fahi let out a whimpering noise but her tongue stayed where it was, lapping at the spot where my cock and K\u0131z's cunny lips came together.\n\nKardes was even quicker into position than Mader\u015fahi was, she had been given more time to catch her breath. In an instant she was on her knees behind Mader\u015fahi's ass. I could barely see her around K\u0131z's body but as I gazed around the young woman's breast, I saw Kardes dip all four of her fingers on her right hand into her mouth. Then I saw them drop down quickly between Mader\u015fahi's legs. I heard Mader\u015fahi gasp while she licked on my balls and I knew that Kardes was touching her wet cunny. I could not see what happened next, but I could feel without looking that Kardes slipped fingers tightly into Mader\u015fahi wet, seed-filled hole; her middle finger, ring finger, and her pinkie finger. Her index finger, now dripping wet from Kardes' mouth and Mader\u015fahi cunny slipped easily into Mader\u015fahi's tight asshole. I could hear Mader\u015fahi moaning while Kardes pushed her fingers in and out of Mader\u015fahi's tight body.\n\nOnce again, we stayed in these positions for some time, exploring the pleasure it gave us. I sat on the chair with my legs spread and my hands grasping at K\u0131z's breasts. K\u0131z was wrapped around my body with her back arched, facing away from me. I could heard groaning and her hips bounced up and down manically. My cock bounced in and out of her tight cunny, stretching her tight lips and shoving her clit into her mother's face. Mader\u015fahi was on her hands and knees, her tongue working wildly to lick at my cock and balls and also suck on her daughter's cunny lips and to lap at her daughter's clit. Her body was shaking and she was moaning into our bodies because Kardes was behind her, fucking her roughly and mercilessly with her fingers.\n\nWe did not stay like this long. We were all still far too excited by the events to last for very long. I admit that this time, I set things off. K\u0131z's cunny was gripping me so tightly and her breasts felt so good in my hands. Perhaps most importantly, her back was now pressing against my breasts and her ass was shoved back hard into my stomach. The feel of her delicious body against me was more than I could take. \n\nThe feeling just sort of snuck up on me. One moment, I was thrusting into K\u0131z's cunny, breathing raggedly and curling my toes on the floor. The next, the entire world had melted away and was replaced by flashing lights in my eyes and a euphoric sense of pleasure all over my body. If anything, this orgasm was more intense than the first, leaving my limbs feeling cold and my mouth trembling. I squeezed hard on K\u0131z's breasts and I heard myself moaning loudly against her back. And I sensed that my seed was filling up her body. I heard her groaning as it stretched her out.\n\nIf anything, I produced more seed this time than I had the first. The pressure on the vein on the underside of my cock was so great, I felt like I was spraying inside of K\u0131z's cunny. My seed rapidly overwhelmed the young woman's tight body and I could feel it dripping out of her cunny, sliding down the length of my shaft even as my orgasm was just subsiding. \n\nOf course, that meant that the seed was rapidly coming into contact with Mader\u015fahi. It dribbled out of K\u0131z's in long, white strands. At first, I felt Mader\u015fahi's tongue stop as she tried to figure out the source of this sudden change in flavor. She rapidly came to understand the exact cause of the flow and her tongue returned, only now with more force and excitement. She focused on the source of the seed, keeping her tongue right where my cock exited her daughter's body, lapping it up. This meant that her tongue was pressed hard against K\u0131z's aching clit. \n\nAlready nearing the end of her limit, K\u0131z count not withstand this renewed assault. As her mother's tongue began to lick and suck the seed off of her clit, K\u0131z's body went rigid. I could feel the muscles in her back and her ass contracting against me. I heard a loud screech emanate from her throat. I felt her go completely stiff and heard a croaking sound in throat. Finally, I heard a deep sigh well from inside of her and I felt her go limp against me. She was breathing rapidly, her orgasm stealing her wits. \n\nK\u0131z was so limp that, as I moved my hands from her breasts, she pitched forward towards the ground. Mader\u015fahi, recognizing the danger, moved her tongue away from my cock and sat back on her heels. Kardes could not keep up and her fingers slipped from Mader\u015fahi's body. K\u0131z reached her arms out forward and Mader\u015fahi caught her in her arms. I gasped as K\u0131z's cunny slipped wetly off of my cock. Mother and daughter collapsed, panting onto the floor.\n\nOnce again, there was no thought of waiting. Despite my two orgasms, I was more desperate than ever. If anything, I needed to cum more now that I had when we started. I was still breathing heavily, my cock still cool in the air after losing K\u0131z's warm body, when I began to issue my next set of instructions.\n\n\"Kardes,\" I ordered, \"Get on your hands and knees on the floor.\" Kardes quickly licked all four of her fingers (stopping for just an instant to savor the flavor) and then fell onto her knees on the rough surface beneath our feet. She turned away from me a few feet in front of my chair and away from the panting pile of Mader\u015fahi and K\u0131z. Kardes then sat her hands on the floor and put her ass up into the air. She turned and looked over her shoulder at me. Her eyes glistening and her lip caught between her teeth.\n\nIt is hard to describe what I was feeling at that time. Mostly because the overwhelming majority of my conscious mind seemed to be controlled by some sort of outside force and pushed me along and affected my thoughts. But beside those feelings I had my own thoughts still, I knew what I thought even if I was compelled to act. And in that moment, looking at my sister's round ass sticking in the air and seeing her large breasts hanging down under her body, I knew I would do the same thing even if I did not feel compelled. My sister...she was beautiful. I loved her. I needed her. There really wasn't anything else to it. \n\nI slipped quickly off the chair, watching where I stepped so that I would not land on top of Mader\u015fahi or K\u0131z. They watched me as I stepped over them, I saw their eyes watching my bouncing cock and my hard nipples. I could feel their eyes were still glassy and their bodies were still taut. Just like me, they were not done yet. And I already knew what we needed to do to close this out. I moved behind Kardes and she continued to stare and me as I moved. I dropped down on my knees between her feet and put my hand down softly on her ass. My fingers suck into her soft flesh and my palms felt warmed. I scooted my hips in towards Kardes body and my cock flopped side to side. I felt the tip rub against Kardes' thigh and I heard her moan.\n\nNow I reached down and found my cock with my right hand. Karde' hips were somewhat low and I pulled them up with my left. Her knees pulled together out and she grew higher. The smell of her cunny was intense now, I could feel it emanating with heat off of her. Her scent actually reminded me of my own and it seemed that our musky, salty essence mixed together and filled my nose. It pulled me in towards her. With my right hand I carefully began to guide the tip of my cock into my sister's dripping cunny. Kardes' cunny was spread as wide as it would go and looked red, ready. ",
        "I felt hot, electric feeling of her cunny lips as my cock began to slip into it. My cock was still wet and Kardes' body accepted me easily. I was surprised by how easily I entered her, a gentle push and she sucked me right up. Despite that she was quite tight and her muscles rippled around my hard cock. She gasped as I made my way inside of her and giggled as my hips pressed against hers. My balls rocked forward and slapped her red clit a moment later and she groaned, her shoulders trembling. But we weren't done yet.\n\n\"K\u0131z,\" I said, \"slide underneath of my sister. You need to lick her cunny.\" K\u0131z quickly disentangled herself from her mother's body and rose. She moved over towards me, running her hand along my back as she made her way around me. She stopped when she was standing a few feet in from of Kardes. Then she turned so that her gorgeous back was to me. She sat down efficiently and then lay down on her back. The back of her head was now on the floor, just below Kardes' face. \n\nK\u0131z put her hands up over her head on the floor, locking her fingers together underneath of Kardes' breasts. Then she pushed herself forward on the ground. Her slim body easily slipped between Kardes' arms and she continued to move along the floor. Kardes' large breasts ran over K\u0131z's face and then over her breasts as K\u0131z slipped into position. Finally, Kiz's head slipped between Kardes' knees. Her hands released one another and she wrapped her arms back around behind Kardes' thighs, holding her tightly. A moment later I felt the familiar sensation of K\u0131z's tongue on my body. I felt her tongue running up and down the length of my shaft as I moved my cock in and out of my sister's body slowly. I also few Kardes' body trembling and I heard her moaning. I knew that meant that K\u0131z was licking Kardes' cunny too. Kardes dropped her head, panting at the sensation. That just wouldn't do.\n\n\"Kardes, keep your head up,\" I said, \"Mader\u015fahi, get in front of my sister. She is going to eat your cunny.\" I added. Kardes instantly perked her head up. This arched her back and pushed her cunny down onto K\u0131z's face. It also tightened her cunny delightfully around my cock as I began to stroke slower, but more forcefully. \n\nMader\u015fahi had been watching her daughter lick my cock and Kardes' cunny but at my order she quickly rose. She walked quickly around our wriggling bodies and moved to stand in front of Kardes. She walked carefully in closer to Kardes' face so that she did not step on her daughter's legs. Kardes was moaning on the floor arching her back so that she was getting in the right position. Mader\u015fahi put her hands on her hips and arched her back forward. She happened to be just perfectly positions and I heard her moan as her wet cunny pressed into my sister's face. I could feel Kardes trembling as she began to lap at Mader\u015fahi's cunny. K\u0131z seemed to sense the increased excitement as well and her tongue began to move more frantically.\n\nNow we were all in our roles and we locked into place. I continued to rock my hips forcefully but very slowly, letting my cock languidly draw in and out of my sister's cunny. Her body squeezed me, trying to pull my seed out. K\u0131z was directly below my cock, running her wet, rough tongue up and down my shaft as is it slipped in and out of my sister. She spent a good deal of time focusing on my sister's cunny as well, flicking her clit with her tongue. Sometimes, K\u0131z would rock back slightly and lap at my balls. Kardes rocked her hips back and forth, slamming herself into my cock and rubbing her wet cunny all over K\u0131z's face. At the same time, Kardes kept her lips wrapped around Mader\u015fahi's clit, moving her tongue around it madly. \n\nThe room was filled with the sounds of moans, groans, flesh slapping against flesh, and the wet sounds of tongues moving on wet surfaces. The room was humid and smelled thickly of female arousal. It was overwhelming. Our bodies were already exhausted from our exertions. Only the will to feel more pleasure kept me going. My body ached and my head was swimming. The other women seemed to feel the same, their passionate moans possessing a hint of exhaustion. In that state we could not last long.\n\nKardes was the first to cum. I heard her moan loudly into Mader\u015fahi's cunny and I felt her body shaking wildly underneath of me. K\u0131z sensed it as well and she focused more squarely on Kardes, her tongue lapping wildly at my sister's clit. As Kardes began to cum, her cunny contracted, squeezing my cock hard and pulling on it. I had barely been holding on already and this sent me to the edge. I felt head fly back, my mouth shoot open, and I heard my scream as if it came from someone outside of me. My tired, inflamed cock felt like it expanded inside of my sister. I felt the seed begin to pour out of me, falling heavily into my sister's sopping cunny. The pleasure was so overpowering that it seemed to exist in layers on top of itself, folding over and doubling in strength. If I could have lived in that moment forever I would have.\n\nWhen I returned to my senses, I was lying on my back, leaning slightly against the chair behind me. I was panting wildly. I looked up and saw Mader\u015fahi leaning heavily against the wall, her body slick with slate, her countenance sated. Both Kardes and K\u0131z lay on the floor, catching their breath and smiling contentedly. Whatever force had pushed us past the point of endurance seemed to have left us. The smell of our sex still hung heavily in the room, but the energy was gone. We no longer craved sexual contact with all of our beings. Instead, we felt totally and completely at peace. \n\nWe stayed that way for a long time, gaining our bearings. One by one we rose from our places on the floor, feeling our heads and looking at each other awestruck. We all sat down on the corners of the bed, facing in. We did not speak, it just seemed like the right thing to do. No one moved to get dressed. What was the point? It felt natural and right to be naked. I felt no self-consciousness as my limp cock lay exposed against my thigh as I sat with my legs folded. Finally, perhaps half an hour after we stopped, I finally felt able to speak again.\n\n\"I believe that settles the matter, the first half of the prophecy has been fulfilled,\" I said. The other women laughed easily.\n\n\"I would say this matches the depiction on the tapestry,\" Mader\u015fahi replied, \"And I must admit that felt...Well I cannot say that I am disappointed or in any way in doubt. Whatever happened here...I am certain that we are in the presence of the predictive power.\" She seemed to struggle to convey the correct meaning. But we all knew what she meant and nodded accordingly.\n\n\"An alliance then, between the Empire and Anaerki?\" I asked.\n\n\"Bonded in blood, solemnized, and irrevocable,\" Mader\u015fahi agreed.\n\n\"If you need assistance, send for me and I will arrive at all deliberate speed,\" I responded.\n\n\"And the same to you. We await the second half of the prophecy, to fight glorious and attain divine victory by your side,\" Mader\u015fahi stated. And with that, the spell seemed to be broken. We felt slightly awkward now and we all moved from the bed, finding our clothes and re-dressing. But despite the change in atmosphere, the connection remained real. Finally, at long last, I had formed an alliance on behalf of the Empire. \n\nAt one point, while we searched on the floor for our clothes, I found myself standing very close to my half-naked sister. It felt strange now, to see her in this way. Though, neither of us felt regretted what had happened. We accepted it for what it was. Nonetheless, Kardes looked out the corner of her eye at me nervously. Finally she spoke.\n\n\"Thank you...for the title,\" she said. I shrugged and shook my head.\n\n\"You have earned that and more. I was remiss in failing to do so earlier. I focused so much on new allies, on appeasing my internal enemies, and fighting my external enemies... I don't know, I made a mistake. I hope you forgive me,\" I said, pulling my puts on my feet.\n\n\"I apologize,\" Kardes responded instantly, \"I was out of line. I... I do not begrudge you your marriage. I had no right to say the things I said. I did not meant to hurt you.\" I could see tears in the corner of Kardes eyes, though she quickly wiped them away. I smiled at her and shrugged. \n\n\"A wise person once told me that Sultanahs should not be scared of widowed princesses,\" I said and Kardes laughed easily, the tension seeming to break inside of her.\n\n\"A valid point,\" she responded, \"You should let that person get away. She should be in government.\"\n\n\"It took me awhile, but I figured that out,\" I responded and dressed, we went out to find the army so that we could return home.\n\nEnd Chapter 12\n\n*****\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. Especially on a massive project like this, it took a year to write and could take longer to edit. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks.\n\nYKN"
    ],
    "authorname": "YKN4949",
    "tags": [
        "epic",
        "medieval",
        "serial",
        "orgy",
        "hermaphrodite",
        "incest",
        "tranny on female",
        "shemale on female",
        "group",
        "analingus"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-sultanah-ch-12"
}