{
    "title": "Zasha's Capture Ch. 02",
    "pages": [
        "If you are under 18 years of age, this is not for you.\n\nIf you are offended by male/male relationships, then do not read this work. \n\nAll characters in this story are over 18 years of age.\n\nAll characters appearing in this work are fictitious. Any resemblance to real persons, living or dead, is purely coincidental.\n\nThis is a copyrighted work of fiction. All right reserved.\n\nI would like to thank my new editor, Anstice. I look forward to working with you on this series. I truly appreciate the time you sacrificed to fix my stray commas and run away pronouns. I hope you continue to help me reign them all in. \n\nI would also like to thank my beta reader SVBLIX for generously donating time to make sure nothing is missed.\n\nTo my fans, thank you for being patient with me and continuing to support me. I always appreciate feedback and comments, they are like my paycheck for writing. I hope you enjoy this installment. \n\n\n\n\n\nInside the Queen's private dressing room, Cora and her handmaidens scurried to and fro all around Zasha. He had been scrubbed clean of all the dirt and blood from yesterday and they were preparing him for the coming marriage ceremony. He watched them as if through a thick pane of glass, distorted and surreal. All around him the world was moving; it seemed he was the only one trapped inside a bubble of nothingness. \n\nThe memory of yesterday rolled through his mind.\n\nThe Garkian forces had somehow ported themselves past the warding stones and into the middle of the encampment. With surprise on their side, they had easily gained the upper hand over the ranks. The atrocious balls of flame had helped them quite a bit, too. It was still unknown how they had conjured such a massive force in such a short time. Zasha suspected it was one of their cursed goddess's gifts. Truly, how they did it was of no importance, the thing that mattered was what they had accomplished. Most of the more powerful healers were taken. Aside from Zasha, only five had escaped the assault. The enemy had left as soon as they arrived; only they departed with something very precious. \n\nZasha did not wish to think of what the captives might be enduring.\n\nThe loss of the healers was the loss of the lifeblood of the Faer army. The precarious balance no longer existed and without help, Faer would fall. Cora had revealed that they had a way of securing allies; allies she assured him would seal the victory for their people. \n\nOf course, there had been a price.\n\nYesterday, it seemed that he had been faced with an impossible choice, when actually, there really had been no choice for him at all. It was a sacrifice of either his people for himself, or himself for his people. He chose the latter. \n\nAside from the moment of pure anguish he felt as he thought of his beloved, once the decision was made he had felt nothing. It was opposite of his twin, Cora, who had cried for hours last night. For him, there was no overwhelming despair or anger, no weeping or cursing his fate. He was numb. Instead of the despair he should be swimming in, it was as if he were moving in a fog so thick it blocked out his senses. He was devoid of emotion. Empty. He felt as if he were merely observing the happenings around him, not a part of them. \n\nToday was his wedding day. It had been arranged in all haste as soon as Zasha had made the inevitable choice. Instructions had been given by his sister because he did not wish to deal with it. All the arrangements had been placed in her hands.\n\nZasha sat silently as the finishing touches were put on him for the ceremony. He didn't recognize the person that was looking back at him from the surface of the polished silver. He hadn't been this clean in a very long time. He studied himself for a moment. While all the dirt and blood from the battlefield was gone, he still looked startlingly different from what he remembered. His eyes had a sunken appearance, and while his face retained its softness, he looked older, a result of the stress of being near the battlefield. His hair, the one item of vanity he had refused to rid himself of, was a bit longer. \n\nOn Cora's instruction, his head was bare, if one could call it that. For the ceremony, his head would be unadorned. His sister had insisted his hair would be more beautiful than any crown or circlet. Sensing the need she had to prepare him, he had allowed her to do what she wished. \n\nHis head was indeed lacking a crown of any sort, but his locks had been painstakingly arranged with a network of tiny braids. They started individually, evenly spaced on his forehead. From there, they connected and divided over and over, thanks to the nimble fingers of Cora's handmaidens. They formed a net that kept his hair away from his face, the braids weaving together and separating again to create a delicate tapestry. A single golden thread was wound into each braid, catching the light as he moved. These also wove in and out of the delicate coiffure. The tiny braids molded together at the base of his skull, forming a single complex braid made up of all the braids woven together.\n\nZasha wondered how in the world he was going to get it down.\n\nAs he sat, allowing himself to be readied, his mind wandered to that fateful day so long ago. The day he had met, and been torn from his heart's desire. He knew he had no choice if he wanted his people to survive, but he could not shake the weight in his heart at his betrayal. Long ago he had made a promise that he intended to keep, no matter what. But it seemed that fate was testing the limits of his endurance. For many cycles he had waited, slowly losing hope, wondering if he had been mistaken to love so blindly. Wondering if he had been used like a fool. \n\nAfter having to leave Gowron, he had returned to the castle with Cora. His hands were still covered in the blood from Gowron's wound. Luckily, he had been able to use his own injury from his fall as a reason for the blood's presence, as he had forgotten to heal it amid the strange events. He had spent the next several days dreading the news that Gowron might be discovered, captured, or worse, killed. When enough time had passed, he had finally calmed, sure that Gowron had managed to escape. \n\nOther than himself, only a handful of soldiers had seen Gowron, and that had been at a distance. Zasha had listened as each had given an account of what they had seen to the King and Queen. None were very accurate. His parents had ordered all to be ready, in case of another situation, but none ever came. Zasha had been filled with relief, but he had also been left ignorant to the reason for Gowron's being on Faer, or where he was from. He did research, but was unable to find any race that resembled Gowron. It didn't help that he was unable to ask the historians without sounding suspicious, since he had never before shown interest in the archives.\n\nHe had thought countless time over these past fifty three cycles that his attachment to Gowron was inexplicable. He knew this in his head, but his heart called out to the one his Goddess had chosen to bind him to. He loved him heedless of any other pull.  \n\nHe fought the despair that was edging in as he remembered the past. He preferred to stay inside the fog that was protecting him. He could not afford to fall apart at this point. There was no other choice left to him; either he could bind allies by marriage, or he could watch his people slaughtered. \n\nHis happiness was a small price to pay for the survival of his people. \n\nHe knew Cora would have stepped into his place in a moment if she could, but she was bound to another already. It seemed even his niece and nephew had offered to take his place, but had been refused because neither was next in line for the throne. That place was Zasha's. That was the reason he was put in the position to marry a total stranger.\n\nWhen he had asked Cora why the past offers for alliance had never been discussed with him, she said she had refused the offers due to Zasha's own words in the past. The offers for alliance had been going on for ten cycles, each one refused by the Faerian Queen. Only at the direst moment had she told him of the offer. She had not wanted Zasha to sacrifice himself. Now, they were left with no choice.\n\nAfter he had realized that Faer would be taken unless they had outside help, Zasha had told Cora to contact the emissary to accept the offer. He had only spoken to him long enough to tell him that he did indeed accept. \n\nHe hadn't even peered into the scrying bowl for more than the moment it took him to speak the words, \"I accept.\" \n\nThat had sealed the arrangement.\n\nAn arranged marriage. His sister had told him the emissary had been adamant that the marriage be observed according to each of the spouses' traditions. There would be witnesses from both sides, and Cora would be the witness for him. \n\nWith each adhering to the ceremony dictated by their race, there was no doubt that the marriage would be binding. It had also been made clear that Zasha would be expected to consummate it. He would be really and truly tied to this person. \n\nHe wondered fleetingly just who he would be betraying more, himself, Gowron, the person he would marry, or his Goddess. It did not matter. He would do what he must to ensure the survival of his people. \n\nCora came behind him and placed her hands on his shoulders, drawing him from his grim reverie. He looked up at the mirror, locking eyes with her reflection. They were full of sadness. Without speaking, the attendants that had been readying Zasha left the room.\n\n\"Come. I will help you get dressed myself.\"\n\nZasha allowed Cora to draw him to his feet. He faced the wall of polished silver, watching his reflection as she removed his robe and brought out a sumptuous garment. He obediently allowed her to slide it on, moving his arms back to ease the process. \n\nIt was the finest clothing he had ever worn in his life, and as the Prince of Faer, that was saying something. It was the barest hint of yellow, made to complement his lilac skin perfectly. All around the edges it was embroidered with golden thread. There were hundreds of tiny golden flowers skirting the hem, which fell to the middle of his calf. The garment was split up the sides to his hip bones. It closed over his chest with catches that were made of pure gold. When they were fastened, the buttons formed tiny delicate flowers that matched the ones embroidered on the edges. The bottoms of the sleeves were decorated with golden lace that fanned out over his hands, obscuring all but his fingertips from view. The matching yellow bottoms were the final touch. They fit loose, flowing fluidly down his legs, leaving only his toes peeking out from where the fabric touched the floor. \n\nHis feet would remain bare, according to the traditions of marriage they had been informed of by the emissary.\n\n\"You should not have put so much into this, Cora. This could feed an entire village for a cycle.\"\n\n\"The cost of this is nothing compared to what it encases. If you must do this, then you will do it wearing something befitting the Prince you are.\"\n\nZasha didn't respond. He looked at the reflection staring back at him. There was no doubt that person was royalty. He was dressed in wedding finery that was even more opulent than what Cora had worn for her own ceremony. He wondered how it had been accomplished so fast.\n\nHe felt strangely detached from the person looking back at him from in the wall of polished silver. No doubt this person had value beyond compare. No doubt this person possessed assurance of their abilities. No doubt the person looking back at him was not himself.\n\nHe took a deep breath. Today he would be the person he saw looking back at him. He would be the Prince he saw in the reflection. He lifted his chin, squared his shoulders, and ignored the numbness that washed over him. He took one last look at the stranger in the mirror.\n\n\"I am ready.\" \n\nCora followed him out of the room as they began the trek to the temple to begin the ceremony. Zasha had declined Cora's suggestion for an introduction before the wedding.\n\nIt wouldn't matter either way, because Zasha was in no position to refuse and time was of the essence. \n\nHe felt Cora's hand on his shoulder and he turned to look at her questioningly. She silently steered him to exit through the main entrance of the palace. He followed her as she motioned for the doors to be opened. Zasha was blinded briefly as the sun poured into the open foyer. \n\nHe blinked as his eyes adjusted, watching the light glint off the golden thread woven through his clothes. He finally was able to raise his head to face the sun. When he did, he froze at the sight before him. \n\nThe path that lead out of the castle gates was lined with people. As Zasha stood, Cora stepped out in front and to the side of him. She spoke with the authority of the Queen she was, \"Zasha, Prince of Faerian, Blessed by Areala, Beloved Brother, I thank you for your sacrifice to your people. Please accept this as evidence of our gratitude.\" \n\nWhen she had finished speaking, Cora descended to the bottom of the stairs, where the polished stone met the earth. She knelt and removed the robe that announced her as the Ruler of Faer. It shimmered in the sunlight, its appearance never announcing the years it had been passed down in the royal family. For millennia it had graced the shoulders of Kings and Queens, adorning them with its flowing grace and beauty. \n\nShe lay it on the ground, spreading it out to protect Zasha's feet from touching the path. \n\nZasha watched as every person lining the path mimicked Cora, kneeling and laying a piece of clothing on the ground. Zasha felt a break in the fog that encased him as a tear rolled down his cheek. He understood the significance of Cora's actions, and though the garments of the commoners were nowhere near as fine as hers, they touched him just the same. \n\nHe walked with his head held high, his feet never coming into contact with the bare ground all the way to the temple. He walked the path lined with the garments of his people. With each step that his feet were protected from the open ground, he felt the reason for his sacrifice all the more. Unending words of thanks followed him all the way to the steps of the temple. He turned and faced the crowd that gathered in his wake, many of them weeping. He placed his hands over his heart and dipped his head to his chest, the sign of utmost respect, before he turned to enter the doors of the temple. Cora was beside him, once more wearing her cloak. Calls of his name followed him until the doors to the temple closed behind them, their magical seal closing out the sounds. \n\nHe took a deep breath and moved inwards, past the entrance of the temple to stand in front of the carved statue of Areala. In one hand she held a healing herb, the flower clasped gently between her thumb and forefinger. Her other hand had been enchanted and it had a swirling orb of light that radiated from her outturned palm. One signified the blessing of herb lore and the other the blessing of healing by divine touch. Zasha studied the statue for a long moment, thinking that while it was remarkably accurate, it did no justice to the true Areala. \n\nHe reached out to touch the hand that held the enchanted orb, cold stone met his flesh, causing a small shiver to run up his spine. He knelt, bending his head as he prayed for forgiveness, hoping that his goddess would understand his actions of betrayal. He heard no voice in his head. He felt no weight off his shoulders. He had no divine intervention to save him from his impending fate. For a moment he allowed a sliver of despair to emerge. With it came a few silent tears. He steeled himself once more, wiping the tears from his eyes as he turned to move into the main part of the temple, where the ceremony would take place. \n\n\"Does your future union dismay you so?\" \n\nThe masculine voice brought his head snapping up. He stood, staring wide eyed at the man who had spoken. \n\nHe was enormous. Zasha's head barely reached the bottom of his exposed chest. The first thing Zasha took note of were his eyes, there was no discernible pupil or iris. Instead, the whites of his eyes housed a solid black pool that only left a small portion of the white visible. The impression that he was left with was immense depth, as if he were staring into an unending well. \n\nThe skin was no less startling. It was the grayish blue of a storm clouded sky, and covered in whorl upon whorl of tattoos. They snaked up his neck, the stark black of the patterns flowing fluidly up the left side of his face, to curve gently around the edge of his eye and down his cheekbone. The markings were all connected, almost as if they were part of his skin instead of ink underneath it. His hair was pulled to one side, tied with a leather thong, and hung over the front of his shoulder. Both his hair and eyes held the same stark black hue as the swirling markings.\n\nHis clothing appeared to be of fine material. The design was devoid of any unneeded embellishment. It would have been considered plain if the shirt hadn't been a vivid red. \n\nZasha disliked the color; it was exactly the shade of fresh blood on white bandages.\n\nBaine's shirt was loose fitting and open to his navel, exposing more black swirls that disappeared into the band of deep mahogany leather breeches.\u00ac Even his naked feet did not escape the black swirling patterns. A wide leather belt was slung low on his hips, and there were several empty weapon sheaths hanging from it. Weapons were not allowed in the temple. The empty sheaths reminded Zasha that he was marrying into a warrior race. \n\nThe man leaned down, placing his hands on his knees for support, as he put himself on the same level as Zasha, looking straight into his eyes. Those black eyes were very disconcerting. \n\n\"Such beauty...I did not know. Please, weep not. You will be treasured.\" \n\nA warm hand reached to wipe the last tear from Zasha's cheek. Far from being comforted, the soft touch put Zasha ill at ease. The numbing fog began to retreat, leaving him feeling very close to losing his composure completely. He gulped in air as the huge man stroked his cheek again, using the back side of his large fingers. The man seemed to mistake Zasha's being overwhelmed for fear, and he removed his hand and stood to full height before stepping back. \n\nZasha could sense Cora hovering at his shoulder, unsure of what to do. He closed his eyes for a moment, forcing himself to breathe deeply. He was angry that he had shown such weakness. He would stop making a fool of himself and his people. He opened his eyes and looked up, locking eyes with the enormous man before him.\n\n\"Forgive me. I was merely overwhelmed for a moment. Allow me to present myself. I am Zasha Oetra Aralane, Prince of Faerian, future King of Faerian. I hope to serve you in our alliance. Hopefully, you are not disappointed.\"\n\n\"Impossible.\" Zasha watched as the man knelt, carefully taking Zasha's hands in his own. \"I am Baine A'tera, and I am greatly pleased to know you will become my King.\" When he had finished speaking he stood, not releasing Zasha's hands. \"Are you prepared?\"\n\n\"Yes,\" Zasha answered. \"Let us begin the ceremony.\" \n\nBaine nodded and released Zasha's hands, dwarfed by his own. Zasha gasped when he was scooped up into Baine's arms without any warning. He felt a blush creep up his face as Baine smiled down at him. He felt like a child. Baine turned to the inner sanctum of the temple and his face became serious. Zasha felt awkward, unsure of what to do with his hands. He did not wish to put his arm around Baine's neck, so he folded them across his chest as he was carried to the front of the temple where the altar stood. \n\nHe looked forward, spotting the High Priestess as she stood waiting for the advancing pair. There were flowers everywhere, obscuring the polished stone altar from view. He was shocked at the amount; he had never seen so many before. ",
        "Flowers were the offering made for a pair being married. Family and friends would often pay homage to the Goddess in the days before the wedding, leaving flowers on the altar as evidence of the good will towards the pair. Tears threatened to fall again as he thought of all the people who must have paid homage to Areala with thanks and prayers for the coming union. \n\nBaine's long strides brought them to the altar quickly, and Zasha was soon being lowered gently to the floor. Once he was standing on his own, the priestess stepped towards him and took his hand, bringing him close to the altar. \n\nIt was custom for one of the pair to choose something from the altar to hold. This was done as a symbol of carrying the blessing of others and the Goddess with you. The flowers were preserved and kept by the mated pair, often divided in half and buried with each one at death. Zasha looked at the vast amount of flowers, not wanting to arbitrarily choose one. Though this marriage was not of his heart's desire, he would not shun the gift that others had offered in its wake. He walked around the altar slowly, trying to choose from the burgeoning mass before him. \n\nFaer was a fertile planet and flowers of all sorts were constantly in bloom, despite the season. Reds, blues, purples, yellows, oranges, iridescent and every other color imaginable spilled all around him. Loose petals released sweet fragrances as he bruised them with his bare feet as he moved as close as possible to the altar. None of the offering truly called to him. When he had almost decided to just grab one, he spotted something familiar from the corner of his eye, almost completely obscured by mountains of colorful blooms. He reached out, standing on his tiptoes as he pushed aside an enormous bouquet of deep purple orchids. \n\nA tiny clump of prickly leaves emerged as he withdrew his hand. It was a bundle of healing herbs. They gave off a crisp smell as he grasped them, carefully avoiding the thorny leaves. A single flower was perched delicately among the scratchy foliage, the same flower that the statue of Areala held. \n\nIt was fitting.\n\nHe turned to the priestess, taking her offered hand. He clutched the bundle in his other hand, thankful that someone had known his purpose here was to heal the blight on his land.\n\nBundle in hand, he was lead to take his place before the altar once more. Cora took up her place behind him. \n\nDone with the traditional choosing of a bouquet, he awaited the next step in sealing him to the strange man before him. Zasha found himself unable to meet Baine's eyes as he thought of what was about to happen. The words that Cora had passed to him from the emissary began to echo in his mind. \n\nHe was expected to consummate the marriage. \n\nConsummate, consummate, consummate. \n\nThe word pounded in his head, over and over. \n\nHe had never been with anyone. Aside from his first experience with the soldiers, and his brief moments with Gowron, he had never been touched by another. His heart had yearned only for his beloved, leaving no room or desire for intimacy with another.\n\nHe would have to be intimate with this stranger. The large male had given him no evidence of cruelty to come, but he still had the sudden urge to flee the temple, his people be damned. The thought of those huge blue gray fingers touching and stroking him filled him with a cold fear. His heart reacted to the mental picture of his body being invaded by the tattooed behemoth, pounding in his chest so fast he began to feel a bit dizzy. A sense of wrongness filled him as he felt the panic he had been holding at bay roll over him. \n\nBaine, who stood opposite Cora, mirroring her placement on the other side of the High Priestess, spoke. His voice was strong as it filled the temple.\n\n\"To the Ruler of the Tsa'tsay, I present your Tsar'sen. As the Second, I have found him lacking in nothing. Come and claim your Tsar'sen.\"\n\nZasha did not understand. He heard Cora gasp and turned to follow her gaze. \n\nFrom the front of the temple a figure emerged. It was one that had haunted Zasha in his dreams for fifty three long, lonely cycles. \n\nAnd yet it was different. His form was larger, both in height and breadth. The sinewy tentacles he remembered undulated around the approaching form. Black leather breeches hugged the muscular legs, and a flowing golden shirt exposed a naked chest. The sleeves flowed loosely, stopping at powerful forearms, where they disappeared underneath the lacings of black leather gauntlets which covered the rest of the arm to the wrist. \n\nHis panic dissipated, completely forgotten. Zasha knew nothing but the man approaching him. Shock coursed through him, freezing him in place. \n\nGowron continued his trek towards him and he watched him motionless as he stared into gold-flecked eyes. The right one was marred with a scar from his forehead to his cheek. \n\n\"Zasha.\" \n\nSo many questions, and yet he could not find his tongue. He could only stare in disbelief as Gowron came to take the place opposite of him. Emotions rolled through him.\n\nHe opened his mouth, but the only thing that came out was, \"Gowron.\"\n\n* * * *\n\nThe other half of his heart was waiting on him, staring with those huge purple eyes. Gowron had longed for this moment for so long, and now that it was here he could only speak one word.\n\n\"Zasha.\"\n\nBeautiful. That was all Gowron could think of as he walked towards his beloved. The one he had been fighting to get back to for these long cycles. The one he had forsaken all other desires for. Those enormous purple eyes opened wide as they watched him approach. So very beautiful, and yet he was different than he remembered. It had been a long time.\n\n\"Gowron.\" \n\nAh. That voice. Once he had been more than happy to let it sooth him as he lie dying. How he had yearned for it. It washed over him, pulling out his need to claim Zasha as his once and for all.\n\nHe could see the questions rolling through Zasha's eyes. Questions he longed to answer as soon as they were alone. The fight to get back to his beloved had been a hard one. For fifty three cycles he had thought of nothing but returning for his mate. However, it felt as if the universe had conspired against him, preventing him from being reunited with the other half of his heart.\n\nNo more. He was here now and nothing and no one would stand between him and Zasha. He had returned despite the odds stacked against him. It was time to solidify their union in the eyes of all others. Soon, none could deny the bond between them. \n\nHe allowed himself a moment to take in Zasha, in all his glory. His clothing complemented his unique skin and hugged his small, soft form pleasingly. His hair was a beautiful weaving of sparkling braids. A testament to their coming union, toes peeked out from the silken leggings.\n\nAccording to Tsa'tsay tradition, the pair to be married always came to the place of joining with bare feet. Once they reached the place where they would become one, the dirt gathered on the journey was washed away by the other. They would each wash the others feet as a symbol that they no longer walked on separate paths. It served as a tangible reminder that from that moment on, the path they took was traveled together. Unlike the pair being joined, the feet of those standing as witnesses would be unwashed. This was to show that they would continue to walk beside the pair, supporting them on their new path as they had the old one, carrying past memories and being there to create new ones as well.\n\nGowron knelt before Zasha, it was the signal the Priestess had been told to look for. She had been informed of the ritual that Gowron's people followed during their unions. He glanced at the Priestess as she bent, reaching beneath the altar to pull out a bowl filled with water, along with a soft cloth. As she turned back towards them, Gowron looked up at Zasha from his kneeling position on the temple floor. \n\nHe nearly lost his balance as Zasha launched himself into his arms, catching him by surprise. The serene silence of the temple was broken as the tiny frame shook, sobbing in his arms. Zasha clung to him, burying his face in his neck as he wept. Gowron's heart constricted, aching in his chest with indefinable emotion.\n\nHe cradled the small form in his arms, gently encasing him with his own body, using his tentacles to wrap around them and afford them some tiny measure of privacy. He held Zasha and rocked him gently back and forth as he stroked his braided hair, feeling the feathery antennae that were laid back and quivering. This being was so precious to him, he wished there was no one else here to witness this moment. \n\nHe soothed Zasha with soft shushes and caresses, despairing the weight that his beloved must have carried all these cycles. Slowly, after a few minutes, Zasha seemed to become calmer. He tried to set him back on his feet, but the grip around his neck tightened and Zasha made a small noise of denial. For a moment he thought Zasha had scratched him, only to realize that it was from the bundle Zasha was holding.\n\nThe Queen moved towards her twin, reaching out to try and pull Zasha from his arms. Gowron loosened his grip, prepared to allow her to try and coax Zasha from his arms. The moment her hands touched Zasha's shoulders, he frantically tightened his grip, shouting, \"No!\" into Gowron's neck. \n\nA look of pained shock crossed the female's face, but Gowron was more concerned with Zasha. If Zasha did not wish to be moved, then he would simply have to adjust to Zasha's needs. He shifted Zasha slightly, keeping their bodies close, but moving so that Zasha was sitting on his thigh. This way Zasha could still hold on to him as he washed his feet. \n\nHe looked towards the Priestess, signaling her to bring the bowl and cloth that she was still holding. When she set it down, he noticed that there was a rainbow of petals floating in the water. Gowron steadied Zasha, holding him in place with one arm, as he lifted the flowing leg of Zasha's pants with the help of his tentacles. Baine knelt wordlessly beside Gowron, helping him to lift the bowl of water as he submerged the first of Zasha's feet. Gowron gently cleansed and dried it before moving to the next one. They were surprisingly clean. After he had finished drying them, Baine set the bowl down and took up his position opposite Cora once more.\n\nWhen Gowron had begun washing Zasha's feet, he felt the grip on his neck loosen a bit. Now, Zasha was peeking from underneath Gowron's shifting tentacles. Despite the seriousness of the situation, the gesture was so sweet that Gowron could not help but smile. He turned his head to kiss the lilac lips gently. \n\n\"Zasha, do you think you can do that for me?\"\n\nAfter a moment of waiting, he felt a tiny nod. Slowly, Zasha disengaged from his embrace and sank to the floor. Not wanting to stand over him, Gowron moved to where he was sitting directly on the floor, his legs bent at the knee with his feet in front of him. \n\nZasha looked up at him for assurance before pulling the bowl of water closer. He lay down the small bouquet he was holding and pushed up Gowron's pant leg so that he could wash off his feet. He washed them both and then dried them, a small smile on his lips as he plucked off a few stray petals that clung stubbornly to scaled skin. Gowron watched as antennae twitched back and forth, glad to see they were no longer laid back against Zasha's head. Once the task was accomplished, they perked forward as Zasha looked up at him questioningly.\n\nGowron stood, reaching to take Zasha's hand. Zasha picked up his small bundle and then reached for the outstretched hand. After helping him stand, he wound his fingers together with Zasha's much smaller ones and they turned to face the High Priestess. Gowron was sure there was a smile lurking on her lips, but it vanished in an instant as she straightened her shoulders and prepared to speak.\n\n\"You have come today to become united as one being, seeking to join your lives together despite your differences. I have observed you today, and though there is much I do not understand, this I do: you are already bound together. When, how, and why I do not know, but I know that Areala smiles upon this union. Where there is love, Areala dwells, and it is obvious to any here who have borne your witness that you indeed have love. I sense that the path you must travel will be wrought with many hardships. She wishes it were not so, but it seems that tapestry is beyond Her ability to weave.\"\n\nShe paused, and for a moment it seemed she was listening to something. She nodded to herself and returned her attention back to Gowron and Zasha. Gowron locked eyes with her, he was shocked when he felt a whisper along his consciousness, \"Tonight. You have been granted peace for tonight.\"\n\nOnly he had heard her voice. He understood what the message meant. Soon he would have to keep his end of the bargain, saving Zasha's people from the threat they faced, but tonight would be their own. \n\nThe High Priestess spoke again, this time her words were for everyone to hear.\n\n\"You stand before those you deemed worthy to serve as your witnesses. You stand in a holy place, observing traditions from each side that differ from your own. You stand together, now until the end of your lives.\" \n\nShe paused for a moment looking between the pair before turning to Zasha.\n\n\"Prince of Faer, do you choose to bind yourself to this man?\"\n\n\"From now until the end of my life.\" Zasha's voice was strong, no hint of uncertainty. \n\n\"And you, First of the Tsa'tsay, do you choose to bind yourself to this man?\"\n\nGowron turned to Zasha, still holding his hand, he knelt before him. \n\n\"As I have been bound since the moment I met him, so I will continue to be. For the rest of my days, I will love him as he deserves. Never again will I allow him to be separate from me.\"\n\nHe stood and faced the High Priestess once more. There was a definite smile on her lips this time. She stretched out her arms, palms up, \"Before the Goddess and your witnesses, you have made your oath. From this moment, you are joined together as one. Go. Go and walk the path before you, knowing you do not walk it alone.\"\n\nIt was the moment he had been waiting for, since the moment they were separated so long ago. Fifty three cycles of struggling to secure his position as First, and fighting to bring his people together under a new way of life, all of his efforts had come down to this. The journey to be reunited with his Tsar'sen was over.\n\nFinally, Zasha was his to claim as his own. \n\n\"Come,\" the feminine voice belonged to the Queen, \"You will pass your first night at the palace.\" \n\nGowron did not miss the pained glace that was directed at Zasha, however Zasha himself was unaware. Her eyes turned away from him and without another word, she began to move towards the entrance to the temple. Once there, a temple attendant brought out Gowron and Baine's boots that had been prepared for after the ceremony. They quickly donned them as the Queen paused, waiting for them to finish. \n\nTaking Zasha's hand in his own, Gowron turned to follow her, Baine close behind them. Once they reached the entrance, the doors opened, revealing a host of Faerian waiting for the ceremony to be over. A collective gasp was heard as the four stepped into full view. Those nearest to the entrance shrank back, fear apparent in their eyes at the sight of himself and his Second. The silence quickly was replaced by clamoring voices, slowly increasing in volume. Gowron could sense anger born of fear in the voices. His warrior instincts went on full alert as the voices became increasingly agitated.\n\nCora moved to address the crowd, but Zasha stepped forward first, pulling Gowron with him, their fingers linked together. It felt strange being pulled behind the smaller man, but Gowron allowed himself to be propelled forward by the gentle tug. \n\nZasha descended the few polished steps, Gowron in tow, until he halted on the very last one. The crowd had grown silent once more. He suspected it was due to the sight of him being pulled along by Zasha. Their size difference was startling, and his appearance was alien to them. He suspected these vast differences accentuated his willingness to let Zasha lead him. \n\nHe watched as Zasha looked out over the crowd before turning to look up at him. Zasha held his eyes as he spoke, his voice carrying over the crowd. \"This is the path I choose by my own will.\" \n\nThe purple orbs turned to take in the gathered multitude once more. \"Will any speak against the choice I have made of my own accord?\"\n\nWhispers once again moved through the crowd, only this time they fell silent after only a few moments. All eyes turned back to the temple entrance, this time resting fully on the newly bound pair. Gowron felt a small squeeze from Zasha's fingers before his mate moved to step down onto the earth with his bare feet. \n\nGowron moved, scooping Zasha into his arms before he had a chance to step onto the uncovered path. He felt the small arms go around his neck as Zasha snuggled into him, resting his head comfortably on Gowron's shoulder. The familiarity of the gesture soothed the crawling nerves the reaction from the crowd had frayed. This was right. He stepped down, waiting for the Queen to lead the way back to the palace. \n\nSoon, Zasha would be fully his. \n\n* * * *\n\nZasha had abandoned all hope. He had been standing before the altar of his beloved Goddess, fighting panic as it sank in that he would be married to a stranger. The rising panic had been broken by the appearance of the man he had been waiting for, for fifty three cycles.\n\nIn the time they had been separate, Zasha had watched his sister find her mate and start a family. He had lost his parents and watched his nation be pulled into war with a merciless enemy. Amidst war, he had defied his own sister and Queen to stand in the place he was most needed and do what he had been blessed to do: heal. He had stood on the battlefield as enemy forces bypassed the strongest enchantments and rained mayhem into the heart of the encampment that housed the most powerful healers. He had watched as men died and those blessed by Areala were taken captive. But all of those things had failed to shock him as badly as seeing Gowron come to stand before him.\n\nHow many times had restless dreams caused him to toss and turn in his sleep, only to wake alone and watch the suns rise from his window? How many times had he wept alone in his room, hiding his sorrow from anyone else? Watched Cora, Dafa, Mora, and Naban frolic together while his heart constricted with jealousy? \n\nEndless questions filled his mind, but all of them were pushed aside by the realization that he was finally reunited with Gowron. All the pain, the loneliness, the crushing realization that yet another cycle had passed without his return, were gone. As Gowron knelt before him, it was if his body moved of its own accord, launching him towards his heart's desire. All tight control he had held over his emotions dissolved in an instant, the thick fog dissipating in the light of his love's golden eyes. \n\nHe gave no heed to any other that was present, all of his being focused on the man before him, finally being able to touch and be touched. When he felt hands trying to pull him from Gowron's embrace, he reacted, refusing to be moved from the arms he had longed for since the moment he had been forced to abandon them. This time, no one would separate him from this treasured embrace.\n\nIt felt as if he had floated through the rest of the ceremony. He had listened to the words of the High Priestess, but even more so to Gowron's declaration.\n\nThe trek back to the palace had started off badly; the crowd did not react well to the strangers in their midst. Zasha knew that many of them felt he was being sacrificed, which in truth he was, but not to whom he thought. He would have gone willingly at any moment if he had known who was seeking him. ",
        "He wanted this union, and his words as he addressed his people were heartfelt and genuine. They had parted to let the group pass. This time no garments were cast down to shield them from the earth, Dafa had been waiting outside the temple and had brought Cora shoes to wear. Zasha had no need of them from the safety of his perch.\n\nIt took very little time for them to reach the palace. Once they were inside, Gowron had lowered Zasha to the floor as attendants came forward. Cora and Dafa left the room. \n\nAs soon as Zasha's feet touched the polished stone, he was nearly mauled as his niece and nephew launched themselves at him. Running into the room, they seemed to be oblivious to the two new additions that were presently watching the trio. \n\nIt never ceased to amaze him how much Mora and Naban favored each other, despite being opposite sex. He loved them very much, and he had watched them grow and blossom, always inseparable. They were very different from him, their skin several shades deeper and their frames built more along the tall, willowy forms common among their people. Zasha was a full head shorter than the two of them. They jostled him back and forth between them as they crushed him in an embrace from each side, catching him in the middle. \n\n\"Are you married now?\"\n\n\"What was the High Priestess like?\"\n\n\"Were there many flowers?\"\n\nBefore he had a chance to answer any of the whispered questions, Naban let out a loud, \"Aha! Look Mora!\"\n\nThat was the one thing that truly announced their differences. Naban's voice was rich, full of a beautiful luster and cadence that was all his own. The pair was renowned for their knowledge of herb lore past their years, but those closest to them knew of another talent they shared. The pair could sing as if the Goddess herself had shaped their voices. The rich baritone bounced off the walls, drawing both Gowron's and Baine's heads up.\n\nIn his hand Naban was clutching the small bundle of herbs that Zasha had chosen from the heaps of flowers on the altar. Mora and Naban joined hands, Zasha still between them, and began to dance around in a circle, laughing and smiling. \n\n\"He chose ours!\"\n\n\"Did Mother or Father tell you?\"\n\n\"They wouldn't have. It's a secret who the flowers are from.\"\n\n\"I knew you would find ours!\"\n\n\"I bet it was buried in a mountain of others.\"\n\n\"We knew that this would be more loved than any other fair Faer blooms!\"\n\n\"It is the fairest of the fair Faer blooms!\"\n\n\"Yes! Far more fair than any fair Faer flower!\" \n\n\"The fairest of fair Faer's fair flowers!\"\n\nThey spun around him, chittering about the small bundle. They latched onto the silly words, trying to outdo each other with the next ridiculous wording. Zasha did something he had not truly done in a very long time: he laughed. It wasn't an amused chuckle, or an expression of some small happiness, it was a moment born of pure joy. He was home, surrounded by those he loved, and he was finally reunited with the one he loved most. \n\n\"Yes, yes. You are both very clever.\" Zasha put his hands on them, stopping their dancing as he smiled at them. \"I did not know who left it, only that it was someone who must have understood me very well. I should have guessed.\" The pair beamed down at him, the traces of mirth were still there, but a bit of seriousness had taken over the place of silliness.\n\n\"We should know you best Uncle Zasha,\" Mora said. \"After all, we seek to bind what has been broken, too.\" \n\nThey all looked down at the bundle in Naban's hands. Zasha reached out to take it from him, holding it gently. \"Yes, and I hope that soon our need for such herbs are greatly diminished.\" All traces of levity were gone as Mora and Naban exchanged a glance. \n\nIt was Naban who spoke now, reminding Zasha of the war that they still faced. He turned his eyes to the foreign presence in the room. \"We should make arrangements for our new allies to be treated so that they cannot be drained.\"\n\nZasha turned to Gowron, the reality of the situation intruding. He had no desire to speak of war tonight, but it was necessary. Without the special barrier, they would not be safe from the life draining touch of the cursed Death Walkers. \n\nZasha moved towards Gowron, \"It is true what Naban says. Plans need to be made to protect your fighters, especially now that our healers are separated from us.\"\n\n\"That is so, but that is why my Second is here,\" Gowron looked at Baine. \"Do what must be done, I take my leave. And my Tsar'sen.\"\n\nZasha found himself being swept into Gowron's arms once more. He looked up into those molten eyes. A low voice whispered right next to his antennae, making him shiver.\n\n\"Now, where are your rooms?\"\n\nHe felt himself grow warmer as he pointed wordlessly the direction Gowron should go.\n\n* * * *\n\nThe door closed behind them as they entered Zasha's quarters. It was a strange moment for Gowron, stepping into the area that his mate called his own. Everywhere were little pieces that mirrored Zasha's interests and everyday life. \n\nThe main room appeared to be a study area and was strewn with books, dried plants, and other odds and ends that he did not recognize. It was warm and inviting, the walls a shade of burnt orange and the room a mixture of warm reds, and browns. A small table and set of three mismatched chairs was placed near doors that opened to a small balcony. The doors to it were closed, but generous glimpses of foliage were visible from the outside garden. There were several different chairs in a group in one corner of the room. Though they were of obvious quality, they were also mismatched and appeared well used. The left wall was covered from floor to ceiling with shelves full of books. The right wall mirrored the left, only the bookshelves were interrupted by a door in the center. \n\nA platter of cheeses, meats, and fruits was placed on a small table in the main room, along with a pitcher that was dripping with accumulated moisture. The room was lit with numerous small orbs hanging from tiny silver chains. He remembered that he had seen such a thing before, during his first encounter with Zasha. The orbs hung quite low to the floor, low enough that he would have to navigate around them. He supposed they must be that low so that Zasha would be able to reach them in order to activate them. \n\nDodging the hanging lights, he walked towards the small table that contained the food. He carefully placed Zasha in one of the chairs before choosing the largest for himself. Zasha looked at him quizzically. In answer, he reached out and selected a slice of meat for himself, watching as Zasha did the same with a piece of fruit. Gowron watched as Zasha lifted the pitcher, carefully pouring the liquid into two glasses. \n\nHe had a strong suspicion that this was why the Queen had disappeared so quickly. He also suspected that Zasha had taken no nourishment that day. He watched as Zasha ate, his desire on hold for the moment.\n\nThey continued to eat in silence, Gowron watching his mate all the while. Zasha would look at him and then glance away nervously, his antennae twitching erratically. When Gowron had drained his glass, Zasha reached out to refill it. Once he had set the pitcher back down, Gowron reached for the small hand, catching it by the wrist and bringing it to his mouth. He slowly kissed each fingertip, the sweetness of fruit and the tartness of the cheese mingling on his tongue as he licked at the small digits. When he sucked on the soft flesh between the thumb and forefinger, he could hear Zasha's breath quicken. When he nipped it, there was an audible gasp.\n\nA familiar sweet scent, remembered from long ago, filled the room. \n\nHe stood, taking the small hand in his own before pulling Zasha to his feet. He looked at Zasha, the question in his eyes clear. Zasha nodded towards the door on the left wall.\n\nThe room was dimly lit by the same low hanging orbs, but even so the difference from the other room caused him to pause for a moment. The main room was obviously meant to be shared with others; this room was arranged for solitude. The color of the room was quite different from the warmth of the other room also. All the fabrics were deep blues, with splashes of silver and black. The scheme gave Gowron the impression of coolness, and perhaps a touch of sadness, too. \n\nEverything seemed to have its place in this room, no books or odds and ends strewn about here. A large desk sat in a corner with a set of ink, paper, and writing instruments, and a tidy stack of books. Under it was the only chair in the room. There was a huge window on the same side as the garden. It arched out, offering a panoramic view and allowing room for a cushioned seat along the edge. He could easily picture Zasha sitting there and staring out on the view it offered. Black curtains, currently tied back with silver ribbon, fell from the ceiling to the floor, offering a way to shut out the light. A few pillows were placed on the seat in a perfect arrangement. On the opposite wall was another door, he suspected it lead to a private bath, but at the moment he was more interested in another area of Zasha's quarters.\n\nAcross the room was the bed. It was enormous, considering Zasha's size. It also had the same black curtains hanging from the ceiling on each corner. A single orb hung down near the center of it, currently it was inactive, the light from the window lighting the room. The bed was turned down, offering a glimpse of sumptuous deep blue linens. However, the item that drew the most attention was the heavily embroidered cover. It was deep black velvet, and on it was a mass of silver lines swirling and branching in impossibly intricate patterns. As he looked at it, it seemed to shift and shimmer, morphing into visions of plants and animals depending upon where he rested his eyes. Another marvel of Faer embroidery. He was anxious to see Zasha spread across the sheets underneath it. \n\nHe turned to pull Zasha into his arms once more, before moving towards his goal.\n\n* * * *\n\nIt was strange, sitting and eating in his rooms with Gowron as if it were a normal part of his everyday life. He hardly had time to consider this as he ate, constantly aware of his mate's presence. He was nervous, waiting for the moment he knew was coming soon. When Gowron captured his hand, he realized the moment had come. \n\nHe was barely able to stop himself from squirming in his seat as Gowron licked and nibbled. He had never thought of hands as being able to receive such a sensual touch, but he was discovering this now. With every lick and bite, new nerves were being awakened. His palm, the webbing of his fingers, even the soft meat below his thumb was not immune.\n\nHow many times had he felt the power within him flow through those very same hands that were now receiving an intimate caress? \n\nHis hand was abandoned suddenly, only to be wrapped in Gowron's own as he pulled them towards the bedroom. Zasha followed behind him, his heart fluttering in his chest. He stood behind him for a moment as Gowron paused in the doorway, before he was swept into his arms and taken towards the bed.\n\nHow long had he prayed for this moment? Dreaming and wishing for it? But now that it was upon him, he was filled not only with desire, but also nervousness verging on fear. He was no longer as na\u00efve as he had been when they had first met. He knew the manner in which men made love, and he would have to be blind not to notice the difference in size between himself and his mate. He had no doubt in Gowron, but he also had no experience other than their first encounter, and what he had been brave enough to try himself. He realized he was trembling as he was lowered to the bed. Gowron carefully removed his boots, setting them near the edge of the bed. His leather bracers and empty weapon belt following them. Golden eyes turned to regard Zasha with burning intensity.\n\n\"Gowron,\" he failed to hide the tremor in his voice.\n\n\"Shh. Trust me, I promise to be gentle. I will not do anything you do not wish. You are my Tsar'sen, I would never harm you.\" Zasha found his smaller body being framed between Gowron's arms as he climbed onto the bed.\n\nA gentle kiss silenced anymore fears he had. \n\nAh Goddess, it had been so long. So many tears. So many cycles of loneliness. They melted away as Gowron lips caressed his own. The serpentine tongue he remembered sought out his own, invading his mouth to tease and tempt his tongue out to play. It flickered just past his open lips, tickling and licking at him. He wrapped his arms around Gowron's neck, sliding them underneath wriggling tentacles. His embrace was answered, not only by muscular arms, but also by all those extra limbs, curling and stroking him. \n\nWith each passing moment the kiss became more intense. His tongue was captured by the suction of Gowron's mouth, and he felt the gentle bite of teeth. The feeling of his tongue being nipped and squeezed sent pulses of sensation through him. He moaned and pressed his body upwards, needing something more than just this passionate kiss. In answer, strong fingers tangled in his intricate braids, pulling his head back to bare his neck. He shifted his legs, opening them so that Gowron could lie between them. He failed to stop his shocked moan as a hand and several tentacles wound their way up his tunic, pressing warm scaled flesh along his skin. \n\nThe curve of his neck was being thoroughly lathed with a flickering tongue. The shivers of fear from before were now replaced with quivering moans. Embarrassed by the sounds he was making, he covered his mouth with his hand, biting his fingers to quiet the unbidden noise. \n\nA tentacle wrapped around his wrist, pulling the hand away. Gowron hissed against his antennae. The true snake-like sound was accompanied by a vibrating tongue. It drew the loudest moan yet from him.\n\n\"Do you dare to deny me the sounds of pleasure I pull from you?\" The voice was deep and right against his sensitive antennae. When the agile tongue encircled the base of one and slowly slid up it, temporarily capturing the tiny featherlike receptors along the spine, he was unable to suppress the deep shudder that ran through him. Deep in his groin, he felt a liquid heat begin to spread.\n\n\"Nooo!\" It came out as a breathy moan. The sensitized appendage was released, only to be caressed by a single word.\n\n\"Good.\" \n\nHe was suddenly pulled up as Gowron sat back on his heels, the arm and tentacles on Zasha's back supporting his weight. His legs were still spread over Gowron's own, the hard thighs pressing against him. The silken fabric of the ensemble he wore slid over the leather of Gowron's breeches, making sensual sounds as they shifted on the bed. The hand not supporting his back was free to pluck at the golden catches on the front, opening them slowly and deliberately to reveal the pale violet flesh beneath. Thick tentacles coiled around his abdomen, looping him in ropes of muscle. When one grazed a newly bared nipple, he felt his body jerk with the sensation. \n\nBefore Zasha could react further, he was dipped backwards, his back forced into an arch as his nipple was caught between teeth. He gripped desperately at thick forearms as his nipple was nipped and sucked aggressively, sending steady jolts to his cock. All thought of modesty left him as he bucked his hips, seeking to relieve some pressure as he rubbed against his larger mate. He was barely conscious of the cries he made.\n\nOne nipple was abandoned so the other could receive its own deserved attention. Seeking better leverage, Zasha wrapped his legs around the thick torso, barely able to lock his ankles together as he thrust his hips against Gowron. Jolt after electric jolt bolted from his chest to his groin, but still it was not enough.\n\n\"Gowron! Ahh...Please!\" He didn't know what he was begging for, but he knew he needed it just the same.\n\nWith a hiss, he was released from Gowron's grasp. A mewl of frustration left his lips. Hands and tentacles, he wasn't sure which, moved quickly to divest him of his clothes, removing them carefully but quickly. \n\nThe sight of his own naked body, including his weeping erection, brought him a bit out of his wanton pleas. He snapped his legs closed, seeking to hide the evidence of his arousal as he turned his body away.\n\nCreeping tendrils embraced him once more, pulling his naked body to the edge of the bed. \n\n\"You cannot hide from me.\" The voice was rough, spoken as Gowron knelt on the floor next to the bed.\n\n\"Wha-!\"\n\nHis thighs were encased in those living ropes and steadily wrenched apart. All his strength was no match for those cords of muscle. His arms shot out, trying to cover himself, but they were also bound. He felt his face flush with embarrassment as his most intimate secrets were opened to Gowron's hot gaze.\n\nSilence filled the room as Zasha struggled fruitlessly. \n\n\"TSSssssssss.\"\n\nThe sound of Gowron's long hiss drew Zasha's eyes to his face, but Gowron was too entranced to notice. Zasha only had time to gulp in air before he watched his entire shaft be engulfed. \n\n\"Nngh!\" \n\nIt was a shock. Zasha felt his body arch of its own accord, drawing his head off the bed. He was unable to tear his eyes away from the unspeakably erotic sight of Gowron's lips wrapped around him. One of Gowron's large hands was wrapped around Zasha's thigh, his fingers sunk into the soft flesh. The other was sliding around the base of his shaft, sometimes squeezing, and sometimes stroking the small, soft tuft of hair that grew just above it. The grip on his legs and arms had loosened, now that the goal had been achieved. \n\nZasha found himself with his hands sliding onto his lover's head, his fingers slipping between writhing tentacles. The head in his hands rose and fell in a steady rhythm, a wicked tongue flickering and then twirling. His head fell back onto the bed, as endless moans escaped his lips. \n\nA lone tentacle crept up his body, sliding past his navel, up the center of his chest, slithering along the edge of his jaw and wrapping around the base of one of his antennae. It began a slow ascent, sending waves of intense sensation through his body. By the time it had finished its upward stroke, the pressure in his groin reached its bursting point. With a shout of Gowron's name, his cock emptied itself into the hot mouth that encased it, his body jerking in time with each pulse of his cum. \n\nOnly after the waves of pleasure ceased was his sated member released. He lie on the bed, his thighs trembling as he gasped for air. Never had he felt or imagined such pleasure. Not giving him any time to think on this, his mate began to lick and nip his way up Zasha's prone body. Along the angle of his hip, up the soft curve of his belly, up to his pert nipple, tickling along his collarbone, tracing along his jaw, only to stop once it reached his open lips.\n\nZasha opened his mouth willingly, allowing Gowron to thrust deeply and sensuously. He could taste himself in the kiss, and it made him flush slightly with embarrassment, embarrassment and desire. \n\nHe was once again wrapped in tentacles; they secured his body to Gowron's own as he turned over. Now Zasha was lying on top of his much larger husband, wrapped in him completely and flush against his body, his legs caught between Gowron's own. His mouth was still being slowly devoured. \n\nLying like this, he could feel the length of Gowron's own need pressed against him. Still encased in the leather breeches, it rubbed along Zasha's captive thighs. Tentacles slithered, and he felt the breeches slipping lower. The press of leather was replaced by the press of skin. More tentacles wrapped around his thighs, winding into the soft junction, they squeezed firmly to allow space for the thick shaft to slide between them.\n\nGowron continued his invading kiss as his cock invaded the soft apex of Zasha's thighs, sliding wetly between them. The tentacles slid away, now wrapping around the outside of his thighs to prevent Zasha from releasing the pressure on the cock between his legs. Hands slid to his hips, and he found himself being slid along the expanse of muscled abs and chest, the silken shirt helping him to glide. With each slide, Gowron's cock rubbed along the sensitive sac and seam between Zasha's legs. The open shirt allowed him to be caressed by scaled skin.",
        "The feel of that skin was like nothing he had ever experienced. It felt smooth and soft to the touch, but with hardened muscle underneath. He longed to lick and taste it, to run his hands over it and test its sensitivity. Remembering the pleasure when his own nipples had been toyed with, he slid his hands down, slipping them inside the shirt Gowron still wore. It was difficult, fighting the weight of his own body, but he finally slid his hand across the expanse of hardened muscle. \n\nZasha moved his hand around, squeezing and massaging in his quest to find the sensitive nubs, but to no avail. After a few moments, Gowron released Zasha's mouth and lifted him up, momentarily halting the movement between his legs. Finally free from his own weight, Zasha opened Gowron's shirt, only to realize that the chest hidden beneath it was completely smooth. \n\nCompletely smooth...\n\n\"I'm reptilian. You won't find what you are looking for.\"\n\nHe could hear the amusement in Gowron's voice. He supposed he should have realized, but he had never even considered such a thing. He could not deny that he had imagined all sorts of things over their long separation, but that had never occurred to him. He was suddenly filled with a desire to explore the man beneath him, to find out what other secrets he had only been able to dream about.\n\n\"I want to look at you.\"\n\nA pause, and then he was released. Tentacles slowly unwound, gently caressing him now instead of binding him. His legs were released and the thick cock between them slipped out. \n\nGowron laid his arms at his sides, allowing Zasha to take control. Zasha sat back, not sure what to make of this compliance. He had a strong feeling that this was not something that would be granted to anyone else. This willingness to relinquish control was precious and granted to him alone. \n\nReaching for the already open shirt, he pushed it up over Gowron's shoulders. Gowron raised himself a little, making it easier for Zasha to pull it off. Once it was removed, the large male lay back down, resuming the passive position. Aware of his own nakedness, Zasha ignored the naked chest for the moment, wanting them to be in equal states of undress. Blushing, he hooked his fingers in the top of Gowron's leather breeches, ignoring the pulsing mast that had recently been freed from them. With a bit of effort, he managed to pull the tight leather off Gowron's legs. \n\nStill near the edge of the bed, Gowron placed one foot flat on the mattress, his leg crooked at the knee, while he left the other to dangle. He moved his arms behind his head, looking down the length of his body at Zasha standing between his legs. One corner of his mouth was turned up, but it was not a look of amusement, rather it made Zasha feel like a mouse in the gaze of a playful hawk...Or in this case a serpent. Golden slashed eyes regarded him from under an arched scaled brow. A long forked tongue darted out flickering as if savoring something in the air. \n\n\"Well?\" His mate may be passive, but that voice held more than a touch of heat.\n\nLooking at the full spectacle of the huge body lying back in the bed, fully erect cock on display, and his body surrounded by a sea of roiling and shifting tentacles, Zasha wondered if he had invited some evil god into his bed to feast on him. He had the image of himself as the innocent virgin, offered to a wicked god of wild places to pacify him. \n\nHe decided if it were this particular evil god, he would go willingly.\n\nThe bed dipped with the slight shift of weight as Zasha climbed up, crawling to lay his hands on the tempting chest that now lay bare. Throwing his leg over the thick torso, he straddled rippling abs. \n\nHe stared at the patterns of gold, black, and tan that graced the skin underneath him. His hands reached for it, tentatively stroking it, testing the texture. It had a slight give to it, but hardness underneath, like sculpted marble that was covered with soft leather. It was smooth, the scales connecting seamlessly, except for various scars where they had failed to heal back to their perfect shape. He traced the ones he could find. One there across the right breast, one along the left ribcage, another crossing the stomach to disappear under Zasha's thigh. \n\nThey were each nearly indiscernible; he only noticed them from his close perspective. Gently, he ran his fingers across each one, his experience as a healer told him which were older and which were more recent. He wished he could erase them, but they had already healed naturally. His power could do nothing to them now. \n\nHe laid his palms flat, letting his hands explore each dip and swell of muscle. Slowly, he moved them upward, allowing himself time to take in the body of his long awaited beloved, committing him to memory. By the time he had reached the dip of Gowron's collarbone, the golden eyes were barely open and the slash of black pupils were much wider than they had been. The sea of tentacles around them were doing a tranquil, hypnotic dance. \n\nZasha laid his body along Gowron's. Still astride, he traced the scar over Gowron's eye, a perfect mirror of his own phantom scar he had received the day he became an uncle. This one was the most recent scar.\n\n\"When?\" \n\nGolden eyes opened languidly, taking him in. A few blinks answered him as Gowron came out of his trance. \n\n\"Hmm? The scar?\"\n\nZasha nodded. He waited a few more moments as Gowron thought.\n\n\"Near to twenty two cycles. Why?\"\n\nHis suspicion was confirmed. That was the age of Mora and Naban, the day they were born he had been assaulted with a phantom injury that had baffled even the most skilled healers. The fact that it matched their age meant that he had felt that injury across his and Gowron's bond. He wondered why he had felt none of the other scars. \n\n\"I felt it.\" \n\n\"I know.\" \n\nThat was not the answer he had expected. Gowron's eyes looked past him, lost in a distant memory.\n\n\"I had a glimpse of you when I received it. You were happy. I felt it. When the blow was struck, it was if I could feel the pain traveling over that link.\" Gowron regarded him with an unwavering gaze, \"I am sorry to have harmed you, but each time it ached, I could feel you through the silver thread that ties us.\"\n\nWhat a strange thing, pain connecting them. He wondered why he had not caught a glimpse of Gowron as he had of him. Only the pain had been shared with Zasha.\n\nSuch things did not matter now. To feel one another, they only needed to extend a hand. He leaned down, planting kisses along the length of the scar. He moved his mouth to Gowron's lips which opened to allow him inside to explore. He licked inside, feeling the hot velvet past the lips. \n\nStartled, he pulled back. There was a sharp point there that he was sure had not been there before. He got close, peering past the slightly parted lips. Unmistakably, there were two fangs that had not been there before. \n\n\"Don't worry, they only descended because I became so relaxed. I can control them.\"\n\nTrue to his words, Zasha watched as the fangs disappeared, folding back inside Gowron's mouth. He looked at Gowron askance, \"Are they dangerous?\"\n\n\"They can be, if I wish. I am able to release venom. Depending on the amount, the effect can cause slight muscle relaxation or full paralysis. Do they bother you?\"\n\nHe thought for a moment, even though he suspected others would find them terrifying, they did not bother him at all. He answered honestly.\n\n\"No. I trust you.\"\n\nHis answer was the slide of tentacles along his legs. Gowron moved his hands from behind his head, tracing Zasha's back gently. He was lifted, as Gowron moved them further onto the bed. Though he was being caressed, Zasha realized that his partner was still remaining passive. With a last gentle kiss to the marred scales over the golden eye, Zasha moved off of Gowron's chest, tentacles scurrying out of his way as he shuffled further down the bed. \n\nKneeling beside Gowron, he ran his hand over the firmness of Gowron's thigh. The erection that had relaxed began to pulse and lengthen again as Zasha resumed his slow exploration. \n\nHe trailed his fingers over the thick thigh nearest him, letting his hands dip inwards to stroke the inside. He turned his body slightly, so that he could lean over Gowron's body. With his weight half on Gowron's stomach and half on the bed, his hands were free to explore more intimate areas. He traced the head of the awakening shaft, surprised to find the texture was much different than the rest of his skin. \n\nThe patterns that covered the other parts of his body faded to a deeper shade here, disappearing at the base of his cock and sac. The head was a deep golden color, darkening down the length until the base, where it blended back into the patterns of Gowron's skin. At first, he thought it was un-scaled, but upon closer inspection, he saw that at the base the scales shifted into miniscule versions of what covered the rest of his body. They were so tiny at the head, that he had trouble discerning them. \n\nWrapping both hands around the base, he gave an experimental upward stroke. The cock in his hands twitched and Gowron gave a low moan. It was incredible, the way the thick organ felt in his hands. It was smooth, more slick and slippery than he would have guessed. The fluid leaking from the tip helped him slide his hands up and down the length as it pulsed hotly in his grasp. \n\nHe wanted to taste it, to feel it on his tongue, to grant a little of the pleasure he had been given. Grasping firmly, he pulled the hard organ closer to his mouth, lightly licking the head. The taste surprised him, salty and some hint of a foreign spice he could not place. Still slightly unsure, Zasha went on instinct, allowing his own desire to drive his actions. He was rewarded with a soft hiss. He licked again, firmer this time as he began to slide the head into his mouth. Smooth and firm, with a bit of yielding softness. It felt good on his tongue.\n\nHe rose to his knees, still resting some of his weight across Gowron. He lowered his mouth, pulling the full head into it. The member was large enough to cause him some difficulty as he accustomed himself to its size. Even so, soon he was able to fit more and more in his mouth. It was slick, smooth on his tongue as he swirled it over the fat tip. Underneath him muscles rippled and jumped in time with his caresses. \n\nSoft hisses and groans filled the room. \n\nEncouraged, Zasha gripped the shaft more firmly, having to use both hands to encircle it. He began to pump his hands up and down, as he slowly worked more of the length into his mouth. Soon, he was able to feel the tip brushing the back of his throat. Saliva ran down the shaft, streaming over his fingers and slicking his grip further. His mouth was filled with a slight spiciness as fluid leaked from the head of Gowron's cock. He pulled away, licking the drops from the head before sliding it back in his mouth. He continued to stroke and suck in time, listening to Gowron's sounds of pleasure and feeling the effects he had on Gowron's body. Zasha's own member had fully recovered and it throbbed, aroused by the feel of the cock in his mouth and hands. Hisses and moans grew in intensity when he became more aggressive in his ministrations. \n\nCoils wound in Zasha's hair, tangling in his braids as he was forcibly pulled from the thick cock. It seemed Gowron reached the end of his passivity. Zasha returned to his kneeling position. He was only there for a moment before strong arms turned him, facing him away from Gowron, who now kneeled behind him. He was pushed forward onto his hands and knees, his braided hair falling to one side as he looked back at his mate. \n\nA shiver ran through him as he saw Gowron behind him, towering over his small and vulnerable body. He watched as tentacles slid along the sheets, crawling and circling his wrists. His eyes locked onto one thick tentacle that moved towards him, watching it as it traced up his forearm, a living bracelet that teased and caressed as it wound its way up his flesh. More were doing the same to his calves, along with others slipping around his chest and belly. A large, hot palm lay on the center of his back, slowly sliding down the curve of his spine to trace the swell of his ass. His arms, still wrapped in tentacles, gave way. \n\nHe lay there, open and trembling, his ass in the air, his hands gripping sheets and stray tentacles. A finger slid down the cleft of his cheeks, slowly descending to trace the tight circle of his entrance. \n\nBeneath his fevered haze, a thought occurred to him, \"Look beneath the mattress...\" A pause. A particularly thick tentacle unwound from his middle, slipping off the side of the bed to rummage for a moment. It returned with its prize, a small bottle of a special ointment that Zasha had been gifted by his sister yesterday. She had handed it to him wordlessly, and Gowron retrieved it the same way. \n\nThe vial was now in Gowron's hand and the thick tentacle slipped back to its place around Zasha's chest. Zasha could not see what was happening behind him, so the slick touch of a finger caused him to jump. The finger circled his entrance once more, this time coated with the slippery substance from the vial. He felt his nerves firing with each brush of that thick digit as it pushed more firmly against him.\n\nIt slid in, pushing past the tight circle, and Zasha cried out at the sensation. The sheets and tentacles in his hands were suddenly clenched in a death grip. The pain he had been expecting lasted only for a moment, the contents of the vial taking effect. He was shocked, feeling his body open easily to the invading presence. Gowron's finger slid and out, shallowly stroking the very edge of his entrance as he moaned, burying his face in the mattress. The finger slid in deeply, igniting every nerve along the way, only to reverse its path and tease him further. Another thrust and retreat. The third time, the finger grazed something inside him, sending his back into an arch and forcing a loud, \"AHhhh!\" from his lungs. \n\nThe finger was removed completely, only to be joined by a second. They pushed in, slipping past the relaxed guardian ring to stroke and tease the spot they had found. Exquisite pleasure flooded Zasha as they rubbed and stroked that spot. He could feel his cock pulsing and he peered beneath him to see it leaking steadily on the bed. A third finger pushed in, stretching him and giving him a feeling of fullness. They pumped inside him on a steady rhythm, driving his need higher. He no longer cared about the sounds that filled the room as he gasped and moaned. Needing more, he thrust his hips back, begging wordlessly for fulfillment. A hiss filled the room as the fingers disappeared.\n\nThe world shifted.\n\nThe coils around him tightened, lifting him from the bed and pulling his back flush with Gowron's chest. Gowron was sitting back on his heels, and Zasha found his own thighs sliding beside the thick thighs of his lover. The tops of his feet touched the bed, but all his weight was supported by his husband. Slowly, he was lowered, his back sliding on the scaled chest as he was impaled by Gowron. \n\nHis body shook and his head was forced to turn with a large hand, his cry swallowed by a fervent kiss as the tip breached him. Hot and slippery, he felt himself being opened even more as his own weight was used to push the thick shaft into him. There had to be something in the tincture they had used, the waves of pleasure were near overwhelming. He screamed over and over from the intensity of sensation as he was invaded, each cry muffled by Gowron's mouth. On and on the intense slide went, his body held in a seemingly endless penetration. Finally, he felt his thighs connect with much larger ones as he took the entire length into his body. \n\nThe kiss was broken off and Zasha threw his right arm back to catch behind his lover's neck, helping him to balance. He panted heavily, trying to catch his breath as Gowron rained soft kisses all over his face. \n\nThe coils around him readjusted, temporarily void of the weight they had helped to support. When one began to caress his nipple, Zasha found himself squeezing the thick corded neck beneath his hands. Large fingers trailed over an antenna, only to trace down his arm and find the ignored nipple. It was soon being rolled and pinched along with the caresses of the other. The other hand slid over his hip, grazing soft skin and slipping into the soft fur above his erection. It slid down further, the large hand fully encasing his cock in its grip. Gowron's finger and thumb pinched Zasha's leaking tip, sending out shocks of pleasure. \n\nTentacles tightened, sinking into his flesh again as they took on his weight once more. He felt the ripples of muscle along his back as he was lifted, the fullness inside him retreating. The caresses on his nipples and cock continued as he was held in place, nerves reawakened before he was again lowered and breached with that same excruciating slowness. \n\n\"MMMmnnn.\" A low moan left him as his head fell back, resting on a muscled shoulder. Gowron's labored breath skirted across the skin on his neck.\n\nAgain he was lifted and lowered. Again he moaned. Each time, there was a pause as he was fully filled, his weight rested fully along Gowron's thighs. Each time, he could feel the muscles at his back rippling and the rise and fall of breath on his neck. The hand on his cock squeezed and stroked in a maddeningly slow pace. Gripping Gowron's neck, he arched his back, seeking to give himself more of the sensations from before. \n\nUnder him muscles jerked and a hiss filled the air. The grip on his shaft tightened, and so did the tentacles around him, sinking into his softness. A hand tweaked his nipple harshly. All these caused him to squirm even more, pushing his hips back in hunger. The tentacles around him constricted even more, forcing some of the air from his lungs.\n\n\"Tssssss. Stop that! I barely have control as it issssss!\" The last syllable had disappeared into a heavy hiss. The warning was accentuated with a scrape of teeth along his shoulder. Zasha felt fangs. \n\nHeady with desire, Zasha reached the end of his patience. He was finally in the embrace of the man he had yearned for, wept for, prayed for. He wanted to be taken, and he wanted to take. He grasped an errant tentacle in his free hand, bringing it to his mouth. He kissed the tapered end of it before sucking it into his mouth. \n\n\"Do it,\" his voice rasped out, rough with unfulfilled need. \"Do it. You told me to wait, and I have waited. So long I have waited and despaired. How much longer do you intend to deny me?\" He caressed the twitching tentacle, bringing it to his mouth and brushing it with his lips as he whispered it again. \"Do it...\" He bit down, nipping hard enough to hurt.\n\nHe was jerked upwards, his nerves exploding as Gowron rose to his knees, taking on Zasha's weight completely. Over and over he was pistoned up and down, helpless to the frenzy of lust he had released. Each slide set off waves of ecstasy as it grazed that spot inside of him. The hand on his cock had slipped lower, finger splaying alongside the cock pumping into him. They caressed his sensitive rim, pushing him closer to the edge.\n\n\"Ah, goddess! Gowron, I can't...NO!\"\n\nA tendril wrapped around the base of his cock circling it before sliding to do the same around his sac. It tightened, pulling him back from the brink.\n\n\"TSsss! Not yet!\"\n\nImpossible, it was impossible to feel this much and not be able to come. And yet here he was, trapped in a place of agony and pleasure, pushed to teeter on the edge of climax but unable to topple over. Higher and higher he was driven, his screams ravaging his throat as he himself was ravaged. Finally, Gowron began to make his own hoarse cries, speaking in a language Zasha could not understand. The grip on his cock and sac was released.",
        "\"Zasha, NOW!\" \n\nHe came. Ropes of hot cum splattered on his stomach, Gowron's hand and tentacles, and dribbled down his thighs. Euphoric pleasure he had never known washed over him. A rushing heat enveloped his body as the coils around him constricted dramatically, squeezing the air from his lungs as he screamed Gowron's name. They held him there, breathless and helpless as he felt the cock inside him swell and pulse its own dance of ecstasy. The intensity of Zasha's orgasm coupled with the constriction of tentacles proved too much. His body ceased to obey him and he went limp in the grip of his mate. He could still feel waves of pleasure coursing through him as his mind swam in a warm haze. \n\nHe felt himself floating down to the bed, the squeeze of tentacles loosening enough for him to breathe once they had safely lowered his limp form to the bed. He felt Gowron disengage from him, the feeling of fullness leaving his body in a wet slide as cum leaked from his relaxed channel. \n\nHe turned to look at Gowron, who still knelt over him looking down on him. He lie there, his body open and covered with sweat and cum, the evidence of Gowron's own orgasm seeping from him slowly. As he watched, scaled fingers were licked clean of Zasha's cum by a forked tongue. Zasha's body was framed by strong arms as he was licked clean, soft moans escaping him with each sweep of that agile tongue. Lower and lower it went, reaching his sensitized head to gently lick it clean, too. Little shocks reverberated through him as he was softly lathed. \n\nA glimmer in the air caught his eye. Still in the grip of the post orgasmic haze, he reached out his hand, watching the glimmer swirl around as he waved it in the air. The shimmer danced in the light, caught in the disturbance he created with his waving hand. \n\nHis mind began to start working again and he blinked, realizing the shimmer was still there. Gowron came to rest beside him, stoking his hair gently. His fingers grazed an antenna.\n\nThe hand stroking his hair pulled away suddenly as Gowron became strangely still.\n\n\"What's wrong?\" \n\n\"What is this?\" The large fingers were covered with what looked like a shimmering lilac powder. Zasha ran his own hand over one antenna, pulling it away to find the same substance on his own hand. He stared at. \n\n\"I don't know...\"\n\nHe watched as Gowron's tongue slithered out, vibrating in the air. His eyes widened in what appeared to be recognition.\n\n\"Your scent. Hmm. So that is what causes it.\" \n\n\"What do you mean, my scent?\" Zasha sniffed the air, searching for any distinct odor that his mate might be referring to. The only smell that greeted him was a slight aroma of their lovemaking. He looked at Gowron with a quizzical expression.\n\n\"I can smell you when you become aroused.\" Golden eyes squinted, recalling something, \"Now that I think about it, it was much stronger when you came.\"\n\nZasha felt himself flush. What in the five moons was that supposed to mean!? \n\nGowron continued speaking as if he were talking to himself, his voice was low. \n\n\"It smells sweet. It makes me...\" he trailed off, turning back to face Zasha as if he just remembered he was there. The expression in his eyes chased away Zasha's humiliation, but it made him embarrassed for other reasons. \n\n\"I have never heard of such a thing before.\" It was true. If such a thing existed in his race, he had no knowledge of it. The thought that Gowron would be able to tell when he was aroused seemed somehow unfair.\n\n\"It's common among my race, attracting a mate with scent. Even so, I have never heard of someone being affected as much as you do me. I assumed it was something unique to your people, but perhaps it is unique to me and you.\"\n\nZasha thought for a moment, remembering when they had been pulled into the realm of the Goddess. They were destined for each other; that was undeniable. Tied together by a silver thread from the tresses of Areala, they were certainly unique. Joy and pain had already been shared across that thread. How many more surprises did this bond hold for them? \n\nThey lie in silence, fulfilled and content to be tangled together. Zasha felt at peace as he lay in a knot of tentacles and limbs, watching the curious glimmer in the air which he now knew was from himself. His eyes grew heavy, and soon he was lost in a dreamless sleep, the first time he had slept so deeply in many cycles.\n\n* * * *\n\nGowron continued to softly caress Zasha even after he had fallen asleep. Filled with the scent of his mate, the room became darker as the waning sun slipped lower. The warning he had received from the Priestess filled his mind as he watched the shimmer settle around them. Next to him Zasha shifted in his sleep, turning to lay his hand across his chest and throwing a small thigh over his stomach. \n\nHe looked over the small figure, etching the precious moment into his memory. Zasha brought out a side of gentleness that he had never known existed inside him. Known for his fierceness and prowess in battle, he had never been so relaxed with another being. As First, he could show no weakness, no vulnerability to the people he led. Looking down at his mate, he knew that he would do anything to protect him, sacrifice anything to keep him safe, and strike down any who sought to harm him. Soon, he would be doing just that. \n\nHe had desired to set in as soon as word had reached him of the war for Faer, but as a race of mercenaries, his people had needed a reason to support the attack. He had proposed a daring and different path than what they had been following for as long as the Tsa'tsay had been freed: joining themselves to another nation and ending their days of selling themselves for other's wars. \n\nThis time, they would be tied to the race they would be fighting alongside. It had allowed him a way to bind Zasha to himself and turn his people from the path they had walked since ancient history. He had been unable to approach Zasha during all that time, afraid of the repercussions it might have on him if he revealed himself. Forced to offer a bond through marriage and refused by the ruling Queen, he wondered if Zasha had even known. \n\nHis suspicions had been confirmed the moment he had revealed himself and Zasha had faced him with complete shock. \n\nThe room fell completely dark as the last sun finally finished its cycle for the day. He moved on the bed, stirring Zasha from his sleep as he lifted him to take him through the door that led to a bathing chamber.\n\nDark blue stone greeted him as he stepped into the opulent room. A huge bath was sunk into the stone floor. It was a deep cream color and also made of solid stone, marbling swirling in the natural stone. One end was continually filling with steaming water that bubbled from the floor while the other end continually emptied, the water disappearing to presumable run somewhere under the floor. Steps led down into the water and various vials of oil and soaps and large fluffy towels lay within reaching distance from the raised lip of the stone tub. \n\nIn his arms, Zasha stirred, waking up from his cradled position as Gowron began his careful decent into the steaming water. One end of the tub had a rounded bench submerged into the water. He moved to sit on it, still holding his precious cargo. Large violet eyes watched him, half lidded as they sank into the water. Gowron shifted in the water, holding his small lover on his lap as he sank his tentacles into the relaxing warmth. They sat there, relaxing in the soothing heat in silence. \n\nHe watched as Zasha began to work on the complex arrangement of his hair, slowly taking it down one braid at a time. He helped, working on the complicated braids with the help of his deft tentacles and fingers. One by one, the braids slowly were unwound, the single golden thread in each one put to the side as it was free. Soon, the water was filled with flowing purple tresses tangling with his tentacles. He watched them winding together, loving the way the long hair shifted and rippled as the shimmering dust rinsed out of it, making patterns in the water. \n\nGowron regarded his small husband, allowing himself to study Zasha and noting the differences from his memory. The length of Zasha's hair was much longer than he remembered; it was more noticeable now that it was unrestrained. His flesh still had the delicate softness that he found so delicious to sink his fingers and coils into. The antennae he had found to be so sensitive were larger and more full. Zasha's face also had changed. It wasn't that he had aged, but it was more mature, the large eyes full of the things they had borne witness to over the passing cycles. \n\nHe reached for one of the vials, pouring it into his open palm before beginning to massage it into Zasha's scalp. Taking his time, he slowly and thoroughly washed him as they lounged in the water. He gently stroked each antenna, fascinated by the delicate feel of them between his fingers. Even as he rinsed the shimmering suds from them, more of the powder seemed to take its place. Zasha's scent filled the air, alerting Gowron to his arousal. He smiled to himself, thinking that it was quite a convenient thing. He continued to wash Zasha, slipping his hands and tentacles below the water to stroke along the soft lilac skin.\n\nHe was glad that Zasha was so accepting of his extra appendages, they often shocked those who were unfamiliar with his kind. Zasha seemed to have no reservations about touching and being touched by them. He felt his fangs descend as he remembered how Zasha had gone so far as to suck and bite one of them earlier that evening. He had been unable to control himself after that, and he had even allowed himself to constrict around Zasha with abandon as he had reached climax. Even in such a strong and unforgiving grip, Zasha had given his body over with full trust. Gowron had been driven by instinct in that moment, only realizing the strength he had used when Zasha had gone limp in his arms.\n\nHe wanted to feel that again, to wind around that tiny, trusting body and squeeze him while they came together. Laying his hands flat against Zasha, he stroked him from collarbone to belly. He moved his hands slowly, wanting to take his time and make love to Zasha leisurely, savoring him. The water splashed gently as his lover turned to face him. Gowron continued to stroke him with the flat of his hands, only this time he moved from the delicate shoulders to the curve of his buttocks. The scent became stronger and he felt his own erection rubbing Zasha's much smaller one. \n\nHe watched Zasha's face flush as he rubbed their cocks together gently. Small arms wound around his neck as Zasha's head fell back, baring the soft curve of his throat. Gowron accepted the offering, licking and nibbling along it. He let his fingers slip into the cleft of Zasha's ass to rub the tight ring concealed there. He slipped in easily, the muscle relaxing to allow his invading finger. \n\nHe began a slow rhythm, pumping in and out as he tasted any skin he could reach with his mouth and tongue. Winding around Zasha's thighs, he was able to use the buoyancy granted by the water to bend him back further, putting the darker lilac nipples in his reach. Under the water, their shafts rubbed together in time to his thrusting finger as he sucked a hardening nipple into his mouth. He wound one of his thinner, more dexterous tentacles to the other nipple, mimicking the caresses of his mouth. \n\nSoft, so soft. He loved the way the skin felt, such a contrast to his own. He fought the desire to sink his fingers, teeth, and tentacles into it. How he craved to test it, pushing the limits of its giving malleability. He supposed it came from his serpentine instinct, the desire to wrap and constrict the body of his beloved. \n\nHe worked in another finger, feeling the muscle contract with each pull of his mouth. Switching to slurp the other nipple, he added yet another finger, pushing in far enough to brush the special spot inside of Zasha. The reaction was immediate. Behind his head, fingers gripped harder as he felt his fingers gripped spasmodically. Continuing the pace he had already set, he made sure to brush along the gland that granted Zasha so much pleasure. Soon, Zasha was moving on his own, complementing the pumping fingers. \n\nReleasing Zasha's nipples, Gowron lowered him back down, replacing his fingers with the head of his cock. He pushed inside of him in one long, unhurried slide. Zasha sighed in his arms, his head rolling forward to rest on Gowron's shoulder. The arms around him relaxed, holding him loosely as they sat immobile for several long moments. The water around them rippled as he placed his hands on small hips, lifting them slowly before lowering them at the same pace. Water sloshed softly as Zasha made soft cries with each deliberate movement. \n\nGowron caressed Zasha's entire body, using hands, tentacles, lips and tongue. Setting a leisurely pace, he pulled back to watch Zasha's face as he made love to him. Against his stomach, he could feel the cock that rubbed against him. He kept his pace slow, wanting to creep to the edge. \n\nWhen Zasha began to chant his name breathlessly, his eyes almost closed, he had to fight for control. On and on he went, pushing them in that measured rhythm as he struggled to be gentle. Closer and closer the waves crept, lapping but not quite cresting as they neared the edge. After what seemed like hours of this agonizing build, he felt the unmistakable heat in his groin, and the air became heavily saturated with Zasha's scent. \n\nHe let himself go, his caressing tentacles instantly transforming into a crushing embrace as he constricted. Zasha had thrown his head back, and Gowron was assaulted with that crushing scent even as he crushed the body with his own coiling grip. A long hiss escaped Gowron as he felt and watched Zasha reach completion even as the air was pushed from his lungs on a strangled cry. He could feel the cock trapped between them twitch as it emptied into the water. Simultaneously, he emptied his own essence into the channel that rippled around him. They rode out their orgasms together, long moments passing until he felt the body in his grip relax. He lowered him, carefully rinsing them both before carrying him back out of the water. \n\nHe could see imprints of his tentacles where he had pressed into Zasha's skin. Guilt filled him; he had wanted to be gentle. Using one of the offending limbs, he lifted a towel, bringing it into reach of his hands so he could dry off his mate. He traced over the indentations.\n\n\"I'm sorry. I did not mean to handle you so roughly.\" \n\nIn his arms, Zasha slowly opened his eyes regarding him with a questioning look. His antennae twitched forward as he roused. \"Hmm? How do you mean?\"\n\n\"I put marks on your skin.\"\n\nLooking down along his body, Zasha blinked. He traced a finger across his marked belly. Gowron was a bit surprised at the tiny smile that lifted one corner of the soft lips.\n\n\"You should not be sorry. I...\" Zasha looked away, a flush creeping up his face.\n\n\"What? Tell me.\" Using the towel, Gowron began to dry the flowing hair that had been freed from the confining braids. \"I want to know.\"\n\n\"I don't dislike it. When you...squeeze me.\" \n\nHeat ran through him as he watched Zasha's blushing face. Well, he would remember that from now on. He dried them off, careful to blot as much water from Zasha's hair as possible. He set Zasha down onto the floor and very gently dried the sensitive antennae. Once he had finished, Zasha moved into the other room, taking a brush from a drawer on the desk. He sat on the edge of the bed as he began to run it through his damp hair. The brush glowed faintly and soon the hair was dried by some bit of sorcery woven into the brush. Gowron lie behind him on the bed observing him, fascinated by the tiny details being shared with him. \n\nGowron watched as Zasha replaced the brush and came to join him on the bed. He reached to tap the orb that hung over the bed and the room shifted into darkness. Gowron let his eyes shift to infrared, watching as Zasha moved to lie next to him. He cradled him against his own body, allowing himself to relax completely. Almost immediately he could hear the even breathing as his mate fell asleep. He followed him almost as quickly.\n\n* * * *\n\nA loud banging jolted him awake, and he sprung up on the bed, immediately shifting into a defensive position. The barest hint of light seeped through the window facing the garden. Behind him, Zasha sat up in the bed, awoken by the loud knocking on the door. The voice shouting was his Second.\n\n\"First! Our scouts reported movement! The enemy is advancing even as we speak!\"\n\nAlready his time was up. He turned to look into Zasha's eyes, knowing the promised time had reached its end. Gowron pulled him close, \"It's time.\"\n\nHe disengaged from his most precious one, quickly stepping to open the door. \n\nBaine was already in full battle dress. He stepped inside the chamber, holding out Gowron's armor and weapons. He dressed in mere seconds as Baine waited. Prepared and in his battle dress, he looked up to see Baine staring over his shoulder. He turned, following Baine's eyes to see Zasha standing on the floor with nothing but a deep blue sheet wrapped loosely around him. \n\nEven in this situation, he was filled with a quick anger that Baine was seeing such an intimate image. \n\nCompletely ignoring the other man in the room, Zasha moved to stand before him. The arm that wasn't holding the sheet reached out. Gowron leaned down without a thought, crushing his tiny husband in his arms for a passionate kiss. He felt Baine leave the room.\n\nThe kiss ended and he pulled away. The delicate arm released him and he was left looking into somber purple eyes.\n\n\"I love you.\" That was all Zasha said.\n\n\"I love you, my Tsar'sen.\" A small hand squeezed his own.\n\nGowron turned and left the room, having something he truly wished to fight to protect for the first time in his life. \n\n* * * *\n\nZasha watched as Gowron left the room. He waited for only moments before dressing himself in a rush, putting his hair up in a quick braid.\n\nIf the war was coming to its head, then he would be there doing what he could. Knowing that he had to move quickly, he slipped from the castle quietly, carefully avoiding anyone he knew would try to stop him.\n\nIf there was going to be battle, then he would be needed. Somehow, he sensed that he was absolutely necessary to turn the tide of this war. Today would be the last battle for Faer, he knew this with every fiber of his being.\n\nPraying to Areala, he made his way to where the army was gathering. \n\nIt was time to put his healing skills to use once more. \n\nThe words that the Priestess had spoken only to him ran in his mind.\n\n\"Take your happiness this night, for tomorrow a new war begins.\""
    ],
    "authorname": "RomancebyFaye",
    "tags": [
        "romance",
        "love at first sight",
        "height difference",
        "healer",
        "warrior",
        "fantasy adventure",
        "gay fantasy adventure",
        "magic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/zashas-capture-ch-02"
}