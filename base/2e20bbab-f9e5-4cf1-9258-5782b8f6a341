{
    "title": "The Songbird",
    "pages": [
        "A warning to those readers who have not read my stories. I do not write graphic sex scenes. I suggest the scenario and leave it to the reader to use their imagination.\n\n*****\n\nCHAPTER ONE\n\nThe day had been tiring and my mind was pleasantly contemplating a cup of tea, a shower and an evening meal as I drove the last few miles to the hotel. My usual hotel could not accommodate me on this trip so perforce I had to book another, slightly more expensive hotel. I drove a lot in my work, covering some thirty-five to forty thousand miles a year; and had done so for the last fifteen years without accident. Therefore, without boasting too much I considered myself a reasonably good driver. It was either that or my being very lucky. My eyes were never fixed solely ahead, but flicked in a routine from ahead to side mirrors and then to the rear view mirror regularly. However as I arrived at the hotel I must have relaxed just a little too much. \n\nI slowed and indicated my left turn and had started the turn when a limousine coming the other way turned right without indicating, across my bows into the hotel entrance. My right foot hit the brake, narrowly avoiding a collision. With muttered imprecations aimed at the driver of the limousine, I followed and parked. The Mercedes 'S' class limousine had swept imperiously up to the front door and stopped. The driver got out and ran round to open the rear door. The woman who glided out of the limousine reminded me of someone, but for the life of me, I could not place her. I got out of my car and she briefly looked my way. It was not someone I knew personally, but someone of whom I had seen pictures or perhaps on television. Whoever she was, she vanished into the hotel and the porter came out and retrieved her baggage from the boot. The limousine driver looked towards me as I stood by my car and raised his hand in a gesture of apology. He obviously considered that sufficient as he got into the limousine and drove away.\n\nI pulled my case from the boot and went in to register. There was no sign of the woman; presumably, she had been fast-tracked through reception. All the while I went through the procedures of registering and in the lift up to my top-floor room; I searched my memory to put a name to the face. It is aggravating when you try to drag something from your memory and get zilch; yet when you turn your mind off it suddenly comes to you. I was in the shower when her name came to me. Kat Lacey! Then I understood why I had recognized her but couldn't put a name to the face. It was the hair. Kat Lacey had long, straight very dark brown hair that hung to her waist. The newspapers called her the British answer to Crystal Gayle; which in my humble opinion was absolute rubbish. Why would we need an answer? The same papers twenty years before had labelled Kathy Kirby as Britain's answer to Marilyn Monroe as if we were so insecure that we needed to match them. Crystal and Marilyn were unique as were Kat and Kathy. The comparison was odious in any case. Marilyn was an actress who sang a little. Kathy was pure songbird and as far as I knew had never acted in her life. I had long been of the opinion that all papers have a tendency to print inanities designed to foster controversy; that headlines were more important than actual news. In this case they suggested a rivalry that didn't exist. The woman who got out of that car did not have the long tresses that I remembered, the hair was quite short and medium brown with blonde highlights, but it was Kat Lacey, I had no doubt. \n\nThe hotel I usually stayed at would not turn a hair at guests taking dinner wearing jeans and a sweatshirt. However, this hotel with an extra star may have frowned, so I dressed in slacks and a long sleeve shirt. I usually took a drink and read the paper before going into the dining room so I found my way to the bar taking a brief look at the restaurant as I passed. Neither was busy, which to me is not a good sign. If the bar isn't busy by half past seven in the evening then there is something wrong. I ordered my usual early evening tipple, a Kronenbourg, sat down and opened my paper. I had barely tasted my lager and read just a few headlines when I felt a presence. Looking up I saw Kat Lacey. \"I must apologise for my driver cutting you up like that. We were not quite sure where this hotel was and he only saw the sign at the last minute. I am sorry.\"\n\nI stood. \"Please don't worry about it, Miss Lacey. I am neither bruised nor injured and I vented my anger in the car with a few choice words.\"\n\n\"I'll bet.\" She grinned. \"You recognise me?\" She sounded quite surprised.\n\n\"Well not at first, although felt sure I knew you from somewhere. It was the hair, or rather lack of hair that fooled me.\"\n\n\"Wow. If you remember that you must be very old.\" \n\n\"You shouldn't say that, Miss Lacey. After all the papers were full of you at one time and I know when you were born. Actually we are the same age.\" I remembered my manners. \"Would you like to sit down and can I get you a drink?\"\n\n\"Thank you. Could I have a Vodka and tonic?\"\n\nShe sat as I took the few steps to the bar. The barman who was not busy had overheard our conversation and was already holding the glass to the optic. I returned with her drink. I knew when she was born and where, as I was born just a few miles away. \"I'm Jack Weston by the way. How's Sarfend, these days?\" I used the dialect called Estuary English; sometimes incomprehensible to any who didn't grow up either side of the Thames estuary. \n\nShe giggled. \"God! I haven't heard it called that for many a year. Moreover, you said it as if you were born to it. Are you from the area?\"\n\n\"Yes. I was born in Upminster. I grew up speaking Estuary English. I knew Southend quite well. I had many a day trip there.\"\n\n\"I haven't been back to Sarfend for years.\" She used the local dialect. \"The last time was when I played the Cliffs Pavilion at Westcliff.\" She lifted her glass to me. \"Cheers.\" I did the same. \"You obviously remember the long hair. I had it cut years ago. It took hours to keep it in good condition. So when I perform now, it is a wig.\" She laughed. \"Please keep that secret.\" I crossed my heart but didn't hope to die. \"What do you remember about Southend?\"\n\nI thought for a moment. \"Lots of things really. The pier of course.\" Southend boasted that its pier was the longest in the world, or was it just the longest in Britain. I can never remember. \"And that vast expanse of sticky grey mud when the tide went out. I always thought that calling it Southend on Sea was a little bit of adventurous advertising. It's really the Thames estuary. Everyone remembers the Kursall and that big Dipper. What did they call it?\" Miss Lacey was just about to remind me when it came to me. We said together. \"The Scenic Railway.\" She laughed and I grinned and then went on. \"I particularly remember that racing track just to the east of the pier. The cars never went faster than fifteen miles an hour, but to an eight year old that was fast. I loved them. I always thought I was so good that I could easily be a racing driver. Huh! The dreams of childhood. What else do I remember? Oh yes. My first kiss with a girl was at the halfway shelter on the pier. It should be emblazoned on my memory, but I can't even remember her name now.\n\nMiss Lacey laughed delightedly. \"Snap! So was my first kiss with a boy. In the halfway shelter and I can't remember his name either. Wouldn't it be funny if it was us and neither of us can remember?\" She examined my face closely. \"Nope. I don't think it was you.\"\n\n\"If it was I am sure I would have remembered. Miss Lacey, I am going to eat in the restaurant, would you care to join me?\"\n\nShe took a moment to think about it. \"Yes. I think I would like that, so long as you call me Kat.\"\n\n\"Ok. Kat. Shall we go now?\"\n\nThe headwaiter seemed to have little to do. There were only a dozen or so diners, in a restaurant that could easily accommodate more than six times that number. He led us to a table in the window looking over the gardens. Her first question after we sat down was understandable. \"Are you a married man, Jack?\"\n\n\"I was. I am divorced.\"\n\n\"Were you naughty?\"\n\n\"No. She walked out one day and never came back. Her parents knew where she was, but would not reveal her location. I suspected at the time she was living with another man. Sometime later a friend confirmed my suspicion. The divorce after two years was quite simple. The papers had been sent to her parent's house, and three days later they were back with my solicitor signed without comment. We had a daughter and she stayed with her mother. My work, being frequently away from home does not lend itself to being a good parent.\"\n\n\"In that case you had it easy. Not like mine.\" I knew about Kat's divorce, after all as a celebrity it was front-page news for a while. \"What with that and my so-called manager, I think I shall have to work until I'm ninety if I live that long.\" Again, her bust up with her manager had been front-page news. He had been helping himself to large amounts of her earnings. Evidently, he had managed to conceal from her the true value of her contracts.\n\n\"Yes. I read about that.\"\n\n\"I can imagine.\" She said sardonically. \"The red tops had a field day with that. Then the Inland Revenue who had been paid based upon my supposed earnings didn't want to give me a rebate until I could prove that I hadn't got the money. Do you know how difficult it is to prove that you don't have money?\"\n\n\"You don't mind talking about it?\"\n\n\"Why not Jack? It was all in the papers anyway.\"\n\n\"I would hate that.\" I remarked. \"Everything you do, everyone you see is there for the world to see and comment upon.\"\n\n\"It's life.\" She replied sadly. \"Become a celebrity and you become public property. I didn't want to be a celebrity. I just wanted to sing and make people happy.\"\n\n\"Well you did that. I can remember 'I Follow'. So full of love and hope for the future.\"\n\n\"I would bet that you can't remember all the others, Jack.\" She remarked. \"Many of them were very forgettable.\"\n\n\"Sorry. I of course knew about you and did hear some of your recordings, but your music, wasn't my cup of tea.\"\n\n\"You didn't like Rock?\" She smiled and pretended shock. \"What do you like?\"\n\n\"Swing. The big bands of the forties, music you could dance to and lyrics you could actually understand.\"\n\nKat was laughing as I told her. \"Did you say you were born in the same year as me? I reckon you were fibbing, probably twenty years before if you ask me.\"\n\nThe waiter had brought the menus as we were talking. Neither of us had picked them up, as our conversation was for that moment more important. There were quite a variety of dishes on offer, but my frequent stays in hotels had taught me that choosing the more exotic dishes would result in a long wait for your meal and disappointment when it finally arrived. I would ignore the a la Carte menu and stick with the Table d'h\u00f4te. I opted for safe and simple, the baked cod with saut\u00e9 potatoes and salad. Kat chose a four-ounce sirloin steak, rare to medium with salad. She was surprised at my choice.\n\n\"I would have thought you would choose a big steak. Wouldn't most men choose that?\"\n\n\"Possibly, but I am not most men.\" \n\n\"I can see that.\" She grinned. \"Doesn't like Rock, listens to music from the Ark, doesn't go for steak. Boy! You are unusual.\"\n\n\"You are being too harsh in your judgement. It's not that I don't like Rock; I prefer other music, good music that happens to be from a time not too distant relatively. I do like steak. I also like fish. Should you eat the same dish for every meal, it would soon become boring and then dislike would set in. In terms of being unusual I would prefer to call myself independent.\"\n\n\"I was teasing you, Jack. However, I agree about independent. I wish I could have been, and then I wouldn't be singing in the same style and the same songs all the time. You know 'I Follow' was the only time I recorded a ballad. I would have liked to do more, but my manager reckoned that Rock was better for me.\"\n\n\"I have always thought that your voice was better than many others. Some of the cover versions couldn't hit those notes so clearly and with perfect tone as you did, Kate.\"\n\n\"Why, thank you, Jack. That's good to know.\" She smiled a secret smile. \"You were almost correct on my name as well.\"\n\n\"Oh! I'm sorry I called you Kate not Kat.\"\n\n\"Actually you were closer to the truth than you thought. My real name is Caitlin, Caitlin Laine. My family and my friends called me Cate, with a 'C', when I was growing up. I was persuaded to change my name to Kat when I started recording. The thieving rat bag of a manager I had, thought it was more hip and catchy for a Rock performer and he thought Lacey would suggest racy. I liked Cate though, and as it seems we are becoming friends, please do carry on calling me Cate. Jake.\" She emphasised 'Jake'. She giggled and I laughed.\n\n\"Touch\u00e9.\"\n\nOur meals arrived and for a while our conversation became stilted as we turned our attention to eating. The meal was all that I had expected. The baked cod was dry and the saut\u00e9 potatoes quite oily. The salad was the best thing on the plate. Cate pushed the steak around her plate and eventually left the majority on the side. \"Overdone.\" She snarled. We sat back with coffee, probably the highlight of the meal.\n\n\"So what do you do for a living, Jack?\"\n\n\"I'm a textile agent. I represent a number of continental mills and offer their fabrics to manufacturers in this country. I also get involved in Court cases as an expert witness.\"\n\n\"What sort of fabrics?\"\n\n\"Upholstery fabrics.\"\n\n\"How do you get to be an expert witness?\"\n\n\"A lifetime spent in the trade. When I started my employer at the time sent me to visit mills in this country and on the continent to learn. I also took college courses on textile technology. Being a witness came about by accident. I helped a customer in the small claims court. The stipendiary magistrate was also a barrister. He remembered me and asked me to appear in a case he was defending. My evidence seemed to help and he put other barristers in touch. It only happens about three times a year on average.\"\n\n\"You get paid for it?\"\n\n\"Yes. It is quite remunerative.\"\n\n\"Your employer lets you keep that?\"\n\n\"I am self-employed so I keep it. Apart from the Inland Revenue of course.\"\n\n\"Of course. They are always there to dip into your pocket. And are you happy with your life, Jack\"\n\nI thought for a moment. \"Content is the word I would use.\"\n\n\"But not happy?\"\n\n\"Being content does not automatically exclude happiness. Happiness is not a constant, it is a tide ebbing and flowing.\"\n\n\"So what would you need for happiness to be constant.\"\n\n\"I don't know. When it visits me I shall recognize it.\" \n\nShe laughed. \"Well when you do recognize it, would you tell me.\"\n\nWe left the table and walked slowly still chatting to the reception area. \"Would you like another drink, Cate?\" I asked.\n\n\"I would, but I have to get some shut-eye. I have got to be at the Theatre early tomorrow for sound checks and rehearsal so I would be wise to say thank you, but no thank you.\" She took a couple of steps up the stairs then turned to me. \"Will you here tomorrow evening, Jack?\"\n\n\"Yes.\"\n\n\"Will you come to the show tomorrow night. I may be able to change your view of Rock music.\"\n\n\"I will enjoy that, well at least the challenge.\"\n\n\"Go to the box office. I'll arrange a complimentary ticket for you.\"\n\n\"Ok, Cate.\"\n\n\"Thank you for the evening, Jack. It's a long time since I had a good conversation with a man, without fending off seemingly ten hands. Thanks for being a gentleman. Good night.\"\n\nI had enjoyed the evening with Cate. She was easy to talk with beside the obvious fact that she was a lovely woman. The pictures of her in her early stardom inspired lust in all young men and presumably some women. She had matured well. The bone structure was still there but life and troubles had added a line or two to her face, which enhanced rather than detracted from her beauty. She had managed to keep the wonderful figure of her youth; that spoke of either good genes or frequent exercise. When you see those stick-thin, anorexic models in the fashion pages, Cate would remind you of how a real woman should look. The right weight for her height, curvy in the right places and definitely huggable.\n\nThe theatre had evolved from the large single auditorium style of the forties. It had adapted to offer two auditoriums, one used almost exclusively for Bingo. The other, smaller, was a venue for live music. My complimentary ticket courtesy of Cate was a very comfortable seat quite close to the stage. The stage itself was not high, being more like a platform raised some two and half feet off the floor. The auditorium ascended from front to back ensuring that the audience, wherever they sat could hear well and had a good view . I liked it, as it brought the performer and the audience into a more intimate encounter. Cate seemed to like it as well. She performed enthusiastically, the long dark hair swishing around as her act was quite energetic and betweens sets she would chat with the audience. She looked, found me, and waved. I of course blushed at being singled out in such a fashion. I enjoyed the evening; after all live music was always exhilarating although the style was not to my taste. The band was good, as the musicians would use different instruments to suit the style of the song with equal facility. Cate sang her most popular songs and finished the evening singing 'I Follow'. \n\nI left the theatre having spent a good evening. Finding my car in the car park I opted to wait patiently as the other cars queued to get out. It was, I supposed it was serendipity that as I eventually left the car park I found the reason for the long wait. There had been a collision and one of the cars was the Mercedes that Cate used. The damage to the car's front was quite extensive and being a Mercedes, I would imagine quite expensive as well. The driver was standing forlornly, presumably contemplating the trouble that was coming his way from his employer. I was driving slowly past when I noticed Cate still sitting in the back. I stopped, uncaring that I was now the cause of another hold-up. I spoke to her driver. \"How is Miss Lacey getting back to her hotel?\"\n\n\"They are trying to find another car for her, but it's going to take some time.\"\n\n\"I'm staying at the Leasowe Hotel. Could I take her?\" He looked dubious; after all, I could be anyone. Nonetheless, he opened the door and spoke to Cate. She looked across and recognised me. Her smile was instantaneous and she shuffled across and got out. The driver opened the passenger door on my car and she slid in.\n\n\"Thanks for this, Jack. They reckoned there wouldn't be another car for at least an hour.\"\n\n\"Not a problem, after all we are both going to the same place.\"\n\n\"I owe you, Jack.\"\n\n\"Not at all, you arranged for a good seat for me, one good turn deserves another.\"\n\nShe turned sideways in the seat and looked at me. \"Ok. Here's the big question. Did you enjoy the show and have I converted you to Rock?\"\n\n\"Yes and no. Yes, I enjoyed the show, but conversion. Sorry I don't think so. However, I will go back to something I said yesterday evening. Your voice is brilliant. Your range is fantastic and I think you could sing so many different styles. I would love to hear you singing Cole Porter's song 'You do something to me'.\"\n\n\"If I asked my musicians to play that, they would walk out on me.\"\n\n\"If they were the band you had on stage with you tonight, they wouldn't. They were good.\"\n\n\"I agree with you there. I was lucky here. Sometime you get groups who cannot even read music properly! Why did you pick 'You do something to me'?\"\n\n\"It's needs quite a range. It can be interpreted as earthy, plaintive, or just happy. I think that with your voice you could cover all of those easily.\"",
        "\"You seem to have a better opinion of my voice than many of the so-called professionals.\"\n\n\"The only true critic of a song and the singer is the listener. If what I hear encourages emotion and pleasure then the music has done its job. The professional critics don't seem to understand that simple fact.\"\n\n\"Wow! Don't let them hear you say that.\"\n\nWhen we arrived back at the hotel, Cate thanked me again for the lift. \"May I buy you a drink?\" She asked.\n\n\"Go on then. You have twisted my arm.\" We walked into the bar. There were no more customers tonight than yesterday evening. The bartender was still not busy and attended to us immediately.\n\n\"Let me guess.\" He suggested. \"A Kronenbourg and a Vodka and tonic?\" I looked at Cate who nodded.\n\n\"Spot on.\" I told him. \n\nCate showed him her room key. \"Charge to my room please.\"\n\nWe sat down and raised our glasses to each other.\n\n\"I enjoyed the evening.\" I complimented Cate. \"Thank you.\"\n\n\"You're welcome, but I am disappointed that I haven't converted you to Rock.\"\n\nI shook my head. \"I don't need to be converted. I never said that I disliked Rock; it's just that my taste takes me in a different direction. Music is about how it affects our emotions. My emotions are stirred by soothing sounds, gentle melodies and a softer beat. Rock is in your face, it doesn't allow contemplation, it's demanding. There are times when my mood requires Rock, so I'll listen to it. Most of the time my mood requires Swing or the complete opposite of Rock, Classic. It's not a case that liking one style of music automatically excludes another style, they complement each other.\" I stopped speaking suddenly. I felt foolish for saying these things to a professional. \"I'm sorry. That diatribe was a little impudent.\"\n\nCate was wearing a big grin. \"No, no. No need for apology. I am pleased to know that you can get emotional about music.\" Her grin faded as she went on. \"I was emotional about music when I started singing. That was knocked out of me when my manager, the agents and the A. and R. men got involved. For them it was all about success and plays. The more plays on the radio the more the disc would sell. They didn't look at it from the emotional pull of a song; they saw money! If the music that you like can inspire that depth of emotion, I will have to listen to some.\" She looked at her watch. \"Shit do you know the time? I need to get some sleep. Are you here tomorrow as well?\"\n\n\"No. Unfortunately I'm moving on in the morning.\"\n\n\"Would I be impertinent in asking you, Jack? Would you give me your phone number?\"\n\n\"It's not impertinent.\" I fished out my wallet and gave her one of my cards. It had phone numbers, work and personal and my home address.\"\n\nShe read it carefully. \"Where the hell is Hulland Ward?\"\n\n\"It's between Derby and Ashborne. There is a village but Hulland Ward defines an area. I live about three miles from the village.\"\n\n\"Have you got another card?\" I gave her another card, she turned it over and wrote on the back and gave it back.\n\n\"This is my private number and my mobile. No one but my closest friends have these numbers. You understand what I am saying?\" I nodded. \"I will probably call you as I am all over the place at the moment and you won't get me on either number until I'm home. Will you mind me calling you?\"\n\n\"I would love to hear from you.\"\n\n\"Good!\" She leaned over and gave me a kiss on my cheek.\n\n\"Good night, Jack. Talk soon.\"\n\nCHAPTER TWO\n\nCate\n\nThings had changed for me. The time on the road hadn't changed; it was always this way except when I started it was for a week or three to four nights at the same venue. Now I was lucky if I got two nights. I didn't bemoan my situation; I was still doing the thing I loved, singing. When I was young and fresh there would be small presents in my dressing room with offers to dine or to supply me with something that would relax me. Well you can imagine what they thought would happen after. It didn't. I was a Rock chick that didn't do the drugs and sex scene. Doesn't sound possible does it? It's true though. I saw early on what happened to the girls who went that way, the media trashed them, unlike the guys who, it seemed enhanced their profile with every spliff they smoked and every teenybopper who dropped their knickers for them, especially when the girls seemed to be under-age. It's a man's world and despite the efforts of the woman's lib crowd, it still is. I became cautious of any entanglement. Oh, I did have some relationships, but my relationships worked themselves out over a period of months rather than hours. \n\nWhen I married, it was to a guy in my backing group. I married for life; he married for security, believing that there would always be a place for him in whatever backing group I used. The problem with him was that he still thought of himself as freelance. He was free with his lance, and he had a Bill Clinton zipper. Getting divorced was not easy. The legal bit was a piece of cake, but the publicity was horrible. The tabloids could not believe that he would cheat on the beautiful, shapely girl he married without cause. So the rumours started, there was something wrong with me, I was frigid or perhaps I was a lesbian. He was guilty. Yet I was the one who was tarred.\n\nMy manager, the little shit, had guided me all through my career until two years ago. I was young and naive when I signed up. He moulded my appearance, introduced me to the right A and R men, chose what songs I would sing, looked over the contracts and showed me the dotted line where I signed. After twenty years in the business, I learned a thing or two and asked some pertinent questions of him. I read the music papers and was astounded at how much I was presumed to be earning, yet I didn't have anything like that sort of money in my accounts. The answers he gave me were so evasive; I knew there was something wrong. Therefore, I went looking and found an unbiased accountant who specialized in investigating money trails. He delved for a couple of months and then laid it all out for me. Money was being siphoned off from all my contracts and was split between my manager and whatever agent was involved in the deal of that time. The returns to the Inland Revenue that my manager's chosen accountant filed on my behalf were nothing like the value of the contracts. The Revenue came sniffing looking to recover tax unpaid from me. It was only after the Court case that they backed off, understanding that I had been the victim and that I had never received the full amount of my contracts. If my manager had revealed where he had stashed the money he stole from me, his sentence would have been lighter, but for reasons unknowable he stayed tight-lipped.\n\nAfter all these bumps in the road, I had made it a rule that I would never make a quick decision. I would look at things and then think. Then I would think some more. So becoming friends with Jack so quickly was well out of character for me. Most men would have been incandescent at being cut up like that, but Jack just sort of shrugged his shoulders and offered me a drink. Usually I would make an excuse and leave at that point, but Jack had this aura of non-threatening composure. Therefore, I sat down. Then when he asked me about 'Sarfend', I relaxed totally. It was great talking about our pasts as if we were old friends. Later when we moved on to music, I was in there battling for my style. He didn't get upset when I as near as dammit called him an old fogey, he smiled and countered my words. He didn't demolish my arguments he just got me to view music in a slightly different way. When he talked about what music meant to him I felt ashamed of myself. He was describing how I felt about music when I was in my teens. Somewhere along the way, I had lost that ideal. Could I ever get it back? As we talked, I got this impression of a genuine, self-contained man. A guy who would accept people for what they were and find interest in their ideas and ambitions. He didn't have to throw his weight around or brag of his success to impress people, in fact I believed that he didn't care if people thought him successful or not. He was what he was. Others may view wealth as the criteria of a man. Jack didn't. His criteria lay elsewhere.\n\nI was disappointed when I found that Jack was leaving the next morning as I was looking forward to another evening of talking with him. It would be talking, somehow I knew that he wouldn't be making any moves on me until I gave him the signal that it would be acceptable. He was intuitive, one of the few men who could recognize the signal, one of many gestures that women used to indicate their interest in a man. Jack would not assume, he would wait for a signal, even then he wouldn't pounce, instead he would take it gently. Why did I think that? He came across to me as one who didn't play around, a gentleman who would always respect my limits. That was why I asked for his number, just because it would be great to talk with him again and for no other reason. When guys asked me for my number I would usually tell them there was little point as I was so rarely there, so I would ask for their number and if they wouldn't give me a home number it was probably because there was a wife who could answer the phone. It was a simple test, but effective. Jack had no problem about giving me his home number, my vibes told me he wouldn't. Strangely, as we said goodnight I had a moment of sadness. I wanted to go on talking with this man, something that had rarely happened to me. \n\nJack\n\nThe next few days were very busy for me. I travelled from the South West, where I had met Cate, to High Wycombe and then northwards to Long Eaton. Long Eaton was the happy hunting ground for me as there were more manufacturers of quality upholstery in that place within three or four miles of each other than anywhere else in the United Kingdom. If that wasn't enough, it was close enough to my home that I didn't have to suffer the dubious delights of hotel accommodation. I could drive there from my home in forty minutes. \n\nI wondered if I would ever hear from Cate. There were so many reasons for her not calling. The disparity of our lives for one. We both travelled a lot, in fact, I spent just as much time away from home as actually living there. Cate, from what I knew would rarely be at her home. She was probably more of an itinerant that I. Moreover, she worked mostly in the evenings. I knew enough about the music industry to know that her days would be busy as well. There would be promotions, guest appearances on TV chat shows, rehearsals, sound checks, enough to keep anyone busy during the day apart from performing in the evening. There would also be a lot of time spent in the recording studio, although I cannot recall, now that I think about it, of her releasing much of late. As the days passed, I began to believe that I would never hear from her. \n\nA week at home beckoned me ten days later. Not a holiday, although I would get some time to relax. I needed to get my accounts in order for the annual audit by my accountant, prior to sending in my income tax return. This was the time when panic could set in as I searched for invoices, commission advices, receipts for items claimable and other documentation the Inland Revenue deemed necessary. I had found most of these and they were arranged in neat piles on my desk in date order when the phone rang. I picked up expecting to hear from one of my customers. \"Jack Weston.\"\n\n\"Hello, Jack. I'm surprised to find you at home. I would have thought you were out selling your fabrics.\" The voice was instantaneously recognisable.\n\n\"Cate! How nice to hear from you. This is a paperwork day. It's great spring morning so as soon as I have finished I can go out and enjoy the air.\"\n\n\"I bet you were thinking that I would never call.\"\n\nI laughed. \"Well something like that had gone through my mind. I mean you are so busy.\"\n\n\"So busy I would forget a friend?\"\n\n\"Eh. I don't know.\"\n\nShe was giggling. \"Well you should know. I wouldn't forget the guy who needs to be taught about Rock, would I?\"\n\n\"If that is the case I need to teach this famous Rock singer about Swing.\"\n\n\"Oh we do have a lot to talk about then.\" She became serious. \n\n\"Jack I have got a three night gig at the Assembly Rooms in Derby. Is that close to you?\"\n\n\"Yes. I live about ten miles from Derby. When is it?\"\n\n\"Three weeks time. I can get you a comp ticket, but more importantly, I really would like to pick up on our chat before. I will be in Derby for five days. Would you have dinner with me one of days I am not singing?\"\n\n\"I would love to.\"\n\n\"Good. I will call nearer the time and we can get things arranged. I am stuck in my flat in London trying to sort out the mess my manager has left me. It does look like a nice day, but I doubt that I will get to see anything of it. Oh, by the way, I looked for Hulland Ward on the map; it's almost non-existent. You must live way out in the country?\"\n\n\"Yes it is. I have an un-interrupted view of rolling hills dropping gradually down to the valley of the River Dove.\"\n\n\"You're a sadist, Jack. Telling me of your idyllic situation. It does sound nice. The only view I have is of roofs of other buildings and occasional glimpses of the sky.\"\n\nI got up and walked to the window. \"Yes I like it. It was just what I needed after the trauma of the divorce.\" \n\nWithout thought, I opened the window. The breeze blew in and carried away those piles of neatly sorted papers on my desk. \"Bugger! The wind has just blown away my paperwork. It's taken me two hours to sort and now I shall have to do it all over again.\"\n\nCate was laughing. \"It's comeuppance for you. Teasing me with the description of your home. I have no sympathy for you. A bit of envy, possibly. I shall have to come up and see it sometime.\"\n\n\"You would be welcome.\"\n\n\"Must go, Jack. The other phone is ringing. Talk soon. Bye.\"\n\n\"Bye, Cate.\" I wearily picked up those papers and started to sort them again. The call was interesting. I had thought that she would never call, or that if she did it would be merely a telephone conversation. The surprise was that first, she wanted me to be at her concert and second that Cate wanted to continue our conversation. The comment about her coming up and seeing the cottage was possibly a throwaway remark, or maybe an indication of more interest than I had thought. I had never been one for building castles in the air, so the throwaway remark was the more likely and I thought no more about it.\n\nTwo weeks later Cate phoned again. This time in the evening. This was not the hurried conversation of out last phone call. I could tell that Cate was relaxed and apart from making our arrangements for the Derby concert, we talked of other things. Music to start off then our chat morphed into other topics. She was quite interested in the cottage. \"You were kidding me when you said that you could see rolling hills descending into the river valley, weren't you?\"\n\n\"Honestly, Cate it's true. The cottage was originally a farm labourer's cottage. I bought it from the farmer, Harry Gill. I had it modernized and extended.\"\n\n\"So you get water out of a tap, rather than pumping it up by hand?\" There was laughter in her voice.\n\n\"You've got it. Of course, it's difficult to fill the tin bath. I have to boil a lot of kettles to get enough hot water for that. Then there is the little wooden outhouse for personal things. But apart from that I am quite sophisticated.\"\n\nCate was giggling nicely as she asked. \"And I suppose you take your bath in front of the fire?\"\n\n\"No. I go outside on the terrace. It's easy to empty it then, straight onto a flower bed.\"\n\n\"That I would love to see.\"\n\n\"No way! A man's got his right to privacy when he's taking his bath.\"\n\n\"Taking a bath outside is not exactly private, anyone could see you.\"\n\n\"Not much chance of that, the nearest place is two miles away.\"\n\n\"Two miles?\"\n\n\"Yes. I'm in the back of beyond here. It also means I can play my music as loud as I like. There's no one to complain.\"\n\n\"That's fantastic. I really must see this place of yours someday.\" Somehow, I was not averse to that. When you meet someone and are able to talk to him or her easily and without having to watch what you say you know there is something more there. What that was I didn't know, but I was looking forward to exploring.\n\n\"Well give me plenty of notice and I'll dust and vacuum. That's if I can find the vacuum cleaner. I know it's around somewhere, I am sure I saw it about six months ago.\"\n\nCate laughed uninhibitedly. \"That's cheered me up, Jack, to know that you are useless at something. You should get a cleaning lady in.\"\n\n\"I did. But she kept getting lost on the way here, so I gave up in the end.\"\n\n\"Is it that difficult to find then?\"\n\n\"Not really. I make a joke about it. The lanes around here are not named and there are few signposts, so unless you know where you are going it's quite easy to lose your way. It suits me as I don't get those irritating people doing surveys for this that and the other, nor do I get the canvassers for the energy companies.\"\n\n\"I don't get those either, but in my case it's because they can't get past the porter in the entrance lobby.\"\n\n\"Intimidating, is he?\"\n\n\"I should say so. Six foot four of ex-Royal Marine. He's lovely really but the canvassers who come through the door get his 'I don't take crap from anybody' look, turn round and leave quickly.\"\n\n\"The sign at my gate usually deters people.\"\n\n\"A sign?\" Cate asked.\n\n\"Yes. It says 'Beware of the Bull'.\"\n\n\"Is the bull dangerous. She asked through her laughter. \"Or is that some kind of self-advertisement?\"\n\n\"There isn't a bull. Harry Gill put it up for me. He does have a bull, but it's never in my field.\" I hesitated for a moment but then it was Cate who had brought innuendo into the conversation. \"I don't advertise. I am very select and selective.\" \n\nI could hear Cate giggling. \"Well that's a change. Nothing like my ex-husband I am pleased to say.\"\n\nOur chat finished soon after that. We agreed that I would see her for dinner at the Ramada on the Wednesday night. Her gig was for Thursday through to Saturday evening. The comp ticket she had arranged was for Saturday evening.\n\nCHAPTER THREE\n\nI met Cate in the bar of the Hub restaurant at the Ramada. The smile of welcome as she saw me was flattering, as was the kiss she gave me. From what I had heard, air kissing either side of the cheek was 'de rigueur' for celebrities. Not so for Cate, her lips actually made contact with my cheek. \"It's so good to see you Jack. I feel as if it has been a long time since we met in Devon.\"\n\n\"It's good to see you too, Cate.\" I replied. \"How do you like Derby?\"\n\n\"I haven't seen any of it. The car met me at Derby station and the next moment I was here. I could have walked it in five minutes. This whole area seems to be new.\"\n\n\"It has been derelict for years. Many years ago it was the Midland Railway steam locomotive works. Now it is all new development. The Derby County football stadium is just down the road.\"\n\n\"Ouch stadiums, thank God I am not playing that. I remember playing at Wembley once. I was support for a rock band that had three hits, played Wembley then vanished into obscurity. Their sound system was rubbish. You get echoes in a stadium and my last phrase was coming back to me as I sang the next. The group got confused and at one point I was singing with no accompaniment. What a night that was. Never again!\"\n\nI went to the bar and ordered some drinks, we sat down in the rather over-large club chairs and toasted each other. \"Have you been busy since we met?\" I asked Cate.\n\n\"So, so.\" She answered. \"I have done gigs in Newcastle, Edinburgh, Glasgow, and then back down to Bristol, Reading and Guildford. Have you been busy?\"\n\n\"Yes. Funnily I was up in Newcastle for a couple of days. Then I had a week in Belgium going through new product with the Mills I represent. During the summer months I am not so busy, come September I will have quite a lot of new designs to show as the manufacturers get ready for the Furniture Show.\"",
        "A waiter came over and asked us if we would like to move into the dining room. It was the right time as the bar was becoming crowded and I could see people looking at Cate with querulous expressions. I knew what was going through their minds. Was she who they thought she could be? Alternatively, was it someone who looked like her a lot. Cate ignored the looks, I supposed she was used to it. We followed the waiter and he showed us to the table Cate had booked. We sat down and he placed a menu before each of us and hovered with the wine list before placing it in front of me. She then startled me. \"It's the hair that does it. They are not sure. Getting my hair cut short was the best disguise I could have used.\" She looked at me accusingly. \"But it didn't fool you.\"\n\n\"That's because I'm an Essex boy. Essex boys have got nous.\" I said putting on my Estuary English accent.\n\nSmiling broadly Cate replied. \"Well I'm an Essex Girl, and you know what they say about them?\"\n\n\"A much undeserved reputation. Any way you aren't wearing white stilettos.\"\n\n\"I did when I started out. I must have looked a sight. All that long hair, make-up plastered on with Dusty Springfield eyes and white stilettos. Ugh!\"\n\n\"You could sing though, and that made a difference. Dusty was fantastic and when you came along you had much that reminded people of Dusty.\"\n\n\"In what way?\"\n\n\"It was the delivery. She sang and people would believe that she was singing with personal experience. However she had an aura of being untouchable and unavailable. You had that same delivery but you could have easily been the girl next door.\"\n\n\"Well in your case I was almost the girl next door.\"\n\n\"If you can ignore the sixteen miles between Southend and Upminster.\"\n\nThe waiter returned and I ordered a bottle of Pinot Noir. We were both having the Roast of beef.\n\n\"If you liked Dusty and Kat Lacey, you must have been into Rock at one time.\" Cate was delving.\n\n\"All I know of Dusty is video from her best years. What were we at that time, seventeen, or eighteen? If you wanted to find a girlfriend then you had to go where music was playing, so yes, I did listen a lot to Rock.\"\n\n\"Were you successful?\" She smiled as she asked.\n\n\"Here and there, from time to time.\"\n\n\"You're not going to tell me, are you?\"\n\n\"Like most lads of the time I enjoyed the company of girls; unlike most lads how much I did and with whom I did it must remain confidential between the girl and me.\"\n\n\"If you didn't boast, you must have been even more successful. Girls like a guy who doesn't tell everyone what they got up to.\"\n\n\"Exactly.\"\n\n\"So where did your interest in Swing come from.\"\n\n\"As I said I heard a lot of Rock then, for the reasons I mentioned, but I didn't buy Rock music. I bought Classical. You know Tchaikovsky, Rachmaninov, and Beethoven. Stuff like that.\"\n\n\"I am sure you didn't boast about that. That would be a complete ugh, as far as girls were concerned.\"\n\nI laughed. \"Yes you are right. I got some very funny looks when I mentioned it.\"\n\nThe waiter arrived with the wine and of course wanted to go through the ceremony of offering a little taste for me to agree it was drinkable. He filled our glasses upon my giving the ok. Then I carried on with my musical history. \"It was when I was about twenty-one that I started listening to swing. That film 'The Glenn Miller Story' was on television one afternoon. I was home recovering from a broken leg. Normally I wouldn't have watched such a film, but that was the days before remote controls and I couldn't get up to switch the channel, so I had to endure it as I thought. Endure didn't come into it when I heard his music. That was it, I was hooked.\"\n\n\"And the rest is history.\" Cate laughed.\n\n\"Yes, it was literally history. I was blown away by music of the nineteen thirties and forties. It's a disease, you know. Incurable, but no bad side-effects.\"\n\n\"So what exactly is the appeal?\"\n\nI had to take some time to formulate an answer. \"It's emotional for me. I am not being nostalgic about the music being played when the whole world was at war; but I can understand why many people who lived through that could relate to swing with a nostalgic emotion. I suppose it could be the way that twenty or thirty musicians could play different parts of one melody at the same time; you know, melody, harmonics and counterpoint blending into one homogenous sound. A sound that would get you swaying, moving your feet and feeling happy.\" I shook my head. \"That is a very simplistic explanation and I don't even think that I have got to the core of it. Whatever the reasons, the sound makes me happy.\"\n\n\"Twenty or thirty musicians?\" Cate was shocked. \"How could they get that many together?\"\n\nThat was an easy one. \"Back in the thirties, jobs were scarce, here and in the States. Music and dancing was one way to allow people to forget for a moment the struggle of low income and the lack of jobs. Becoming a musician was almost a guarantee of regular work as there were so many dance bands touring the USA, so learning to play an instrument properly was sensible. At that time pretty well all of them could pick up a music score and play the music almost immediately.\"\n\nThat plucked a chord with Cate. She nodded her head sagely. \"We still have musicians like that and they are in constant demand for recording. They make a good living too. Some of the groups I have toured with were useless. It was their tour because they had made a smash hit or three. Acts like me were booked as the group needed help. They play their half a dozen hits and that's it, they're done. The audience had paid for an evening's entertainment and the group could only fill about an hour of the evening. Therefore, people like me were carried along to fill out the Bill. That's when you find out that the smash hit was made in a studio with professional session musicians. I know of a few who acted as if they were playing, but in actuality were lip-synching to their own recording. Their guitars were not even plugged in to the amplifiers!\"\n\n\"You're talking about manufactured groups.\"\n\n\"Yes. They sling the guitars around their necks, act like they know what they are doing, but in essence it's a big con.\"\n\n\"Well I can say one thing. Swing Orchestras played it for real, and as I have heard you sing live, I can say the same for you.\"\n\n\"Thank you kind sir.\" Cate grinned widely.\n\nI didn't taste too much of the meal, the conversation was far more stimulating. As I was leaving, Cate came out with me to the hotel entrance. I turned to thank her for the meal and the interesting evening, and then impulsively asked her when she was leaving Derby.\n\n\"Not until Monday.\" She told me.\n\n\"What are you doing Sunday?\"\n\n\"Nothing is organised.\"\n\n\"Would you like me to pick you up here; I can show you some of the Derbyshire Dales and take you to see my primitive hovel?\"\n\nCate smiled broadly. \"I would like that. Yes please.\"\n\n\"I'll pick you up at ten, if that's ok.\"\n\nShe nodded. \"Ten will be fine.\" Her hand went up and picked at the shoulder of my jacket. \"Just some fluff.\" She said in explanation. She then leaned forward and gave me a kiss on the cheek. \"See you Sunday.\"\n\n\"Well, I'll see you Saturday evening, but you won't probably be able to see me.\"\n\n\"I'll know you are there, anyway.\"\n\nCHAPTER FOUR\n\nCate\n\nIt was good for me in Derby. The Thursday gig was a little down on numbers but Friday and Saturday made up for that. Saturday evening went really well and I sang my heart out. It could have been because Jack was in the audience, I don't know, but I really gave it everything. The audience responded; their clapping and shouting for more went on for a long time. I came off stage, happy, wet with perspiration and quivering with the excitement of the gig. It was almost like the old days. I took a much-needed shower and dressed in my usual jeans and a sweatshirt. The wig was packed carefully along with my stage clothes. The dress I had worn that evening would go for dry-cleaning and the whole lot would magically appear at the next venue, thanks to my assistant, Jacqui who had been with me for years. I intended to walk to the hotel, but the stage door manager shook his head. \"Not a good idea, Miss Lacey. Best I get you a taxi.\" I understood why when travelling in the taxi. There were quite a few groups of young men along the way, carrying bottles of booze with them, shouting and yelling. \n\nBack at the hotel, I went straight to my room, poured three fingers of Vodka, added Tonic and lay down on the bed. My mind turned to the morrow, I was looking forward to the day, a day of not being Kat Lacey, but being Caitlin Laine for a day with a rather nice guy, whose company I really enjoyed. I blushed as I remembered picking a small piece of fluff from his jacket. There wasn't any fluff there; it was just me telling Jack that I would like to get closer. I wondered if he caught the signal. I surprised myself when I did that, it just came unexpectedly. Afterwards I realized that I wanted to give Jack a signal. It didn't mean that I wanted to jump into bed with him, well not yet, it was more my saying let's keep this going, I like you and I think you like me, let's see where it goes.\n\nAs usual after a gig, it took me some time to wind down and finally sleep. I awoke at eight feeling refreshed. I phoned Room service for coffee and scrambled eggs then took a shower. Clothes for the day were easy and comfortable and I was dressed when breakfast arrived. I didn't bother with the full make up, just a little foundation and some lippy to emphasise my lips. The sun was shining but there seemed to be a little bit of a breeze so I got out a woollen wrap just in case. Nine fifty-five found me out in front of the hotel enjoying the fresh air and waiting for Jack certain that he would turn up on time. I was right, he was that sort of man, and he drove up on the dot of ten. I smiled and waited, knowing that he would want to come round and open the door for me. Bingo! He did just that. I brushed my lips on his cheek as I got in the car and we were off.\n\nJack\n\n\"You were fantastic, last night.\" I told Cate the moment we drove off. \n\n\"Thank you, Jack. I could feel a buzz when I came out on stage and that pushed me to give it everything I had. The group felt it as well and backed me brilliantly.\"\n\n\"The highlight for me was when you did the Diana Ross number 'Chain Reaction'. That was brilliant.\"\n\n\"I've always loved that song. My agent wanted me to cover that, but there were all sorts of copyright issues. The Bee Gees wrote it with Diana in mind so I suspect they would be upset as well. They knew I wanted to do it and Barry contacted me years ago saying that I could do it on stage, but not record it.\"\n\n\"That was nice of them.\" I replied drily. \"What gob-smacked me was how you managed to sound like Diana as well. I know I said you had a good range, but I didn't think it extended that far.\"\n\n\"So I can add mimic to my C.V.?\" replied Cate laughing. \"I suppose I shall have to work on copying Dusty now to please you.\"\n\n\"No, Cate. You please me enough as it is.\" I said those words to mean musically, but there was another, unintended meaning. As I thought about it, I decided that I would let it stand and Cate could take it either way. My left hand was resting on the automatic selector, and Cate put her hand over mine, just for a moment. I understood how she had taken my comment and felt quite happy about it.\n\nCate\n\nI heard Jack's words and I felt warmth inside me. Men don't show their emotions with little touches and signals as women do, and they are quite reticent about declaring feelings. His words, although capable of another interpretation told me that he understood the signal I sent him and he in his way was telling me that we should go on and find out where this would lead us. Whatever the day would bring, for me it was a good day already.\n\nJack\n\nI took the A6 out of Derby and shortly after we passed through Belper we were in the Derwent Valley heading into the Peak District. The hills at first were soft and gentle. Agriculture had claimed much of them, but as we came nearer to Crich and Matlock Bath they took on their true nature, tall crags intersected by steep-sided valleys, the road becoming a switchback with frequent bends. Matlock Bath was interesting as it nestled into a gorge cut by the river. The cable cars taking tourists up to the heights swung in the breeze funnelled by the steep sides of the gorge. I asked Cate if she wanted to stop and look around.\n\n\"I don't think so, Jack. I have a hankering for wild moorland and vistas.\"\n\n\"Ok. We will have to turn round and go back to Cromford.\" I replied. I did so and retraced just a mile or so to Cromford, Passing Masson Mill on our left.\n\n\"That's impressive.\" Cate remarked.\n\n\"It was built by Richard Arkwright the man who developed volume production of cotton yarn.\" I turned right at the traffic lights and we entered Cromford village. \"Look to the left.\" I told her. She did. \"That's North Street, also built by Richard Arkwright, but for his workers.\"\n\n\"I am sure I have seen that on television!\" She exclaimed.\n\n\"You will have done. It's been used by a few production companies in their historical dramas.\" We started climbing the steep hill out of Cromford. Cate had noticed the road sign for Via Gellia.\n\n\"That's an odd name!\"\n\n\"It's a road not a place. Named after the family that built the road. They owned lead mines around Wirksworth and built the road to bring the ore down for smelting at Cromford. Their name was Gell and they claimed to be of Roman descent, so Via Gellia was a little bit of pomposity. There was another mill in that area, W. Hollins and Company. They produced a fabric of mixed cotton and merino wool. They called it Viyella after Via Gellia.\"\n\n\"How the hell do you know all this?\" Cate laughed. \"Am I travelling with the Brain of Britain?\"\n\n\"Not at all. I live in this area and you just pick up things. I have an enquiring mind.\"\n\nWe crested the hill and I took a right turn. We were quite high and the vista to our right was quite spectacular. Cate craned her neck this way and that trying to take in the views. \"It gets better in a while.\" I told her.\n\n\"Better?\" She queried. \"How can it beat this?\"\n\n\"You'll see.\" I made another right turn and shortly we joined the A 5012. I could have taken this road in Cromford village, but wanted to show Cate North Street on the way. The road twisted and turned gradually climbing until we came out near Grangemill and took the first view of the Moor. The vistas were stunning, extending for miles, just occasionally punctuated by a hilly crag where harder rock had resisted the wind and rain that had smoothed the limestone. There was little traffic so I slowed down, giving Cate as much time as she needed to take in the picture. Even so we soon came to the junction with the A 515, the main road from Buxton down to Ashbourne. \"Which way do you want to go, Cate?\" I asked. \"North to Buxton or south to Ashbourne?\"\n\n\"I've played Buxton, so south to Ashbourne please, that's nearer to your hovel isn't it?\" I grinned and turned left. The 515 is a good road, long straights with sweeping bends. In time past I would drive the road like the devil, timing myself from Buxton to Ashbourne, cursing the quarry Lorries that impeded my speeding. With hindsight I know that I took too many risks to achieve a better time. The impetuosity of youth has cut short many a promising life. Now the Derbyshire council has imposed a fifty mile per hour speed limit on the whole section. Today I didn't mind as I listened to Cate exclamations of delight as yet another vista presented itself for her appreciation. Suddenly her head whipped round.\n\n\"Was that a Railway?\" She was astounded.\n\n\"Yes it was. It was closed years ago, and the authority has gravelled the path for walkers. Its thirteen miles long. Do you want to walk a little?\"\n\n\"I would love to, but.\" She looked down at her shoes, flat but lightweight. \"I don't think I am actually dressed for that.\" She paused and took a deep breath. \"Could we do it some other time, Jack? I know I am making a big assumption, that there will be another time, so I suppose I am asking if we are going to see each other again.\"\n\n\"The answer is yes and I was hoping that we would.\" Cate relaxed back into her seat. I looked over quickly and she had a happy smile on her face.\n\n\"Good.\" She relapsed into silence and returned to the scenery. A little later she spoke as if she was talking to herself. \"In all these years I have never been able to do this. I was always Kat Lacey, but today I am Caitlin Laine, just an ordinary woman on a day's outing with a good friend.\" She turned with a smile on her face. \"A really good friend and I would like to see a lot more of him.\" She paused, then giggled. \"And you can take that anyway you want.\"\n\nIn next to no time we were in Ashbourne and I took the road to Hulland. Two miles short of Hulland I turned right into a lane that was unsigned. \"How do people find their way round here without signs?\" Cate sounded shocked.\n\n\"Well the locals know their way and it deters others if they don't have a good map. We locals are quite happy about that.\"\n\n\"Obviously!\" She laughed. \"I can see why you have a Range Rover, these lanes must become treacherous when it snows.\" The lane was quite narrow and I didn't drive quickly even though I knew the lane like the back of my hand. There are others who don't know the lane, who drive too fast for safety. I took another right into a lane, which if possible was even narrower than the first. This lane meandered quite a lot and it would be easy to lose your bearings with its twists and turns. After a mile or so I made another right and rumbled over a cattle grid. Cate saw the sign 'Beware of the Bull'.\n\n\"Is this it?\" \n\n\"Yes. I swept the sheep droppings out this morning so it is quite presentable.\" The gravelled path veered to the left and then a long right curve, which took us round a granite outcrop. As it straightened out you could see the tiled roof of my cottage. As Cate looked to her left, she saw the view I had described to her, rolling acres of pasture and arable fields all gently falling away into the distance. The gravel gave way to rough hewn slabs and I brought the car to a stop just alongside the sidewall. I got out and walked round to open Cates' door. \"Welcome to the hovel.\"\n\nCHAPTER FIVE\n\nAuthors note: Harwich used to be the main cross-channel port for northern Europe before cheap air travel and the Channel Tunnel.\n\nHer face showed her disbelief. We walked round to the front of the cottage. I had stretched the truth a little when I said it was a farm labourers' cottage. It was at one time, but originally it had been the farmhouse. As such it had outbuildings and a barn. When I bought the property they were very dilapidated, but were still standing, which was important as I could rebuild them as part of the cottage living space. The old barn was high enough to incorporate a first floor, which became a bedroom and a bathroom, the ground floor became a large lounge, complete with hardwood floor and two large double glazed patio windows. The actual cottage had a kitchen cum living room, bathroom and one bedroom, which was modernized. Damp proofing had been installed in all the walls. The connection from the barn to the cottage was through one of the other outbuildings, which was slightly extended to contain a mudroom as well as the walk from one side of the building to the other. The local planning authority looked askance at my re-building ideas as I was stretching the planning laws a little beyond the norm, but agreed to my plans when Harry Gill's brother who was the local Council representative put in a word for me.\n\nCate looked at the place then at me. \"Hovel.\" She said in a derisory tone. \"Hovel! You need to take your tongue out of your cheek before you bite it off.\" She laughed at my expression of hurt. \"Come on, Jack. Show me around this...this hovel. Oh and point me to the bathroom on the way.\" I did as she said and told her I would get some coffee on the go. She joined me later in the kitchen.",
        "\"I thought I may have to use an earth closet, but you do seem to have found the twentieth century. Ooh coffee! I need. Make it strong Jack I need caffeine.\" I made the coffee and carried it through to the lounge. Cate took over pouring two mugs.\n\n\"How do you like your coffee, Jack?\"\n\n\"Two sugars and very little milk, please.\" \n\nShe gave me a mug and picking up her mug wandered to the windows. \"That view is fantastic. I could stand here all day and just look at it.\" She turned to me. \"I have always thought that you had got yourself sorted, by that I mean at peace with yourself. Now I know why, living here you can't help but feel at peace.\"\n\n\"Yes it does that for you.\"\n\n\"Play some music, Jack. Anything but Rock. Rock would somehow be out of place here.\" I nodded and switched on the music system, selecting a disk from a large collection.\n\n\"Ok. Now you will hear my music.\" There was only one choice really, I hit the play button and the strains of Glenn Millers 'Moonlight Serenade' filled the room. Cate almost without thinking started to sway. That's what it does to you. She turned from the window with a frown on her face.\n\n\"I've heard that before, but it seems...flat.\"\n\n\"That's because it's the original recording. It's not in stereo, I'll play another recording which is.\" I waited until the final chords flowed away and ejected the disk. I then found the other recording and slotted that in. \n\nCate started swaying again and smiled. \"That's better. This has got fullness and colour. Why did they record it twice?\"\n\n\"Glenn Miller didn't. The second version was made in the early nineties by a revivalist swing band.\"\n\n\"But it's perfect!\"\n\n\"Well yes. You can still buy the score, and good musicians can reproduce Miller's sound perfectly.\"\n\nCate gestured to me to replay the track. She danced around the room humming the refrain as she did. \"Are there lyrics?\"\n\n\"Not originally. Miller recorded it as an instrumental, however it was so successful that a guy named Mitchell Parrish wrote some lyrics for it.\" I was at my computer as I spoke. \"It's been recorded often, Frank Sinatra for one, Carly Simon and many, many more. Ah! Here it is.\". I clicked on print and within a minute I handed them to Cate. \n\nShe studied them. \"Play it again.\"\n\nI saluted. \"Yes Ma'am, and you should say Sam after that instruction.\" \n\nCate looked at me with a querulous expression and then laughed. \"So it's old films as well as old music.\" She curtsied. \"I'm sorry Sir.. Would you play it again, please?\"\n\n\"Of course.\" \n\nCate went through it a couple of times stopping when she got the phrasing wrong. Finally on the third attempt she sang a very creditable version. I could not believe what I heard. I know I had said she had a great range, but she seemed to have the knack of changing her tone and style to suit. The loud performer singing at the top of her range for Rock, suddenly became feline, her voice purring over the lyrics injecting so much sex appeal into the words and the music. What is more she was singing here in my lounge, singing just for me. \n\nThe song finished. Cate looked at me with sparkling eyes. \"I love it. I wanna record it. It's fabulous.\" Then her face fell. \"But where am I going to get an orchestra to sing with?\"\n\nI went back to the computer and googled 'swing bands uk' Even I was surprised at the result. I showed Cate the results. \"I doubt that all of them are suitable, but I am certain that some of them could do the job you need.\"\n\nShe clicked on a few rejecting most, then suddenly came alive. \"I know him.\" She pointed to a name. \"He does sessions and he is good. I didn't know he was part of a swing orchestra. I can phone him when I get home, I've got his number somewhere.\" \n\nCate's enthusiasm was infectious and I hated to bring her down to earth. \"So what other tracks will you do?\"\n\nThe enlivened face vanished. \"You're right. If I am going to hire a band and a studio, I need much more than one song.\" She glared at me. \"Ok, Mister. You're the one who started this, find me some more songs.\"\n\nI sat back down at the computer and opened 'my music'. I began creating a play list from songs I thought she would like and sing well. \"Shall I make some more coffee while you are doing that?\"\n\n\"That would be good, I am sure you will find everything.\"\n\n\"I'm sure, and it will give me an opportunity to have a good snoop in your kitchen.\" She winked cheekily.\n\nTen minutes later she came back with the coffee just as I finished what turned out to be quite a long list. I checked it again and deleted a few and then clicked on 'play list'. The first song was 'Moonlight Serenade', this time with lyrics sung by Frank Sinatra. Cate pulled a face when she heard his voice. I understood why. Sinatra was a superlative singer, but a horrible man. However she listened carefully to his phrasing, which wasn't too different to hers. Then came 'Perfidia' and the list rolled on. I was writing down the titles of those she like best and added some that I thought would suit her voice well. I wasn't surprised that we ended with a good list of standards and some showstoppers. I was pleased when she gave the nod to 'After you've gone', and 'You made me love you', also 'You do something to me'. At the end I sprang a surprise on her.\n\n\"This wasn't on the playlist, but I believe you could really do justice to this.\" I played 'Stardust'. It has a very slow beat, but done well could be a showstopper.\n\nAfter she listened to it she sat down. \"Jack, you seem to have far more confidence in my abilities than I. How could I sing that?\"\n\n\"Cate, you took to 'Moonlight' as if you were born to it. I'll print the lyrics and play an instrumental version of 'Stardust'. Humour me, I think you can do it.\" I found the lyrics and printed them. I searched 'my music' again and found the instrumental version of 'Stardust' and played it. \"I'll leave you to get used to it. Just click on 'play again' when you need to. In the meantime I will go and get some lunch.\"\n\n\"It's cold salmon, potato salad and a green salad.\" She told me. \"I sneaked a look in your fridge.\" She grinned cheekily. \"I told you I would have a good look around.\" \n\nI could hear the music and Cate's faltering attempts to get the phrasing right from where I was in the kitchen. 'And now the purple dusk of twilight time', the opening line doesn't seem to fit with the music at first. It's lingering on some words and passing quickly on others, which works. Cate kept playing again and again that first phrase until suddenly she got it. Having mastered that she went on. It wasn't easy but gradually she got through it. When I returned to the lounge carrying our lunch she was doing well. She stopped when I came back and eyed me. \"You bugger! This is the most difficult song I have ever had.\"\n\n\"Exactly why so few singers will ever attempt it. However from what I heard you are getting it. When you are ready I will play Nat King Coles version. He was adjudged one of the masters at phrasing. Now come and eat while it's cold. Oh do you fancy a glass of Chardonnay?\"\n\n\"Yes please. I noticed that in the fridge as well and wondered when you were going to offer me a glass.\" \n\n\"I couldn't be too eager with wine, you may have thought I was trying to seduce you.\"\n\n\"No problem. I would only scream a little.\" She grinned.\n\nWe ate the meal companionably, talking between bites and drinking the wine. The sun made its appearance about two o' clock. Up till then the sky had been high overcast but warm. With the Sun warming the terrace I opened the large windows. Having finished the food, we wandered out with our replenished glasses and enjoyed the warmth and light.\n\nCate\n\nI could not think of a day that I had enjoyed so much for years. We reacted together as good friends, something that I hadn't known in a long, long time. Being in my business you soon got used to the idea that 'friends' were only there as long as you were regularly getting to the top of the charts. Slip a little and your 'friends' started making excuses as to why they could not see you. It was comfortable to be with Jack, non- threatening. Apart from that little crack about seduction, he had never strayed into that area we both knew was on the horizon. I knew deep down that we would get there and the idea of sharing a bed with him was a warm tingle deep inside me. I also knew that if that happened it would be permanent for both of us. Now that was a happy thought. I had been single for a few years and I didn't like being single. When I married it was with hopes of having that solid foundation I needed after going on the road. You travel with lots of people but still you are lonely. I needed that secure environment of home, loving arms to hold me; and for a moment enjoy the normality of a home before I had to go again, off to the mad life I led. It hadn't worked out that way, perhaps marrying someone in the business was a mistake.\n\nJack could be that. He was so secure in himself that he didn't need to keep proving it to others. The other thing I liked about him was his view of me, that I was better than just the Rock Chick I had been all these years. Listening to his music I had to admit that he had a point. It was good, but I wouldn't admit that to him for some time. Trying out the songs was a challenge, especially 'Stardust' and funnily enough I found some of that buzz and emotion for music that got me started in the first place. Songs and music to which my grandparents had danced. Jack had said they were timeless and he was right. When we wandered out onto the terrace I imagined myself living here. It was a happy picture. I watched him as he strolled to the edge of the terrace and picked a weed from a pot. Even that simple task he did with control and deliberation. Yes he would be the man I could come home to, shelter in his arms and become 'normal' for a while. I debated offering to stay tonight, but decided against. This relationship was going in the right direction, I didn't need to force it, it would happen and when it did, I was sure it would be one of the best things in my life, and I would make sure I was the best thing in his life.\n\nJack\n\nCate decided after lunch that she wanted to have another attempt at 'Stardust'. She was doing better with it but was still a little laboured in places. I made more coffee and we sat down to relax.\n\n\"You said you had a daughter.\" Cate remarked. \"Do you see her regularly?\"\n\n\"Yes. As I said the divorce was easy and it was obvious that Ellen would stay with her mother. My work, being often away from home wouldn't be right for my parenting her. There were no problems about visiting rights, I suppose my wife felt guilt and decided to be as accommodating as she could. Especially as I was reasonable about the split.\"\n\n\"Your daughter's name is Ellen? That's not a usual name these days.\"\n\nI grinned in memory of the rows we had about the name. \"She was named after my grandmother. I thought it wrong but my wife insisted. I suspect the idea that my grandmother who was quite well off would look kindly on us in her Will. She did, but by that time we were divorced, so for my wife it was all for nothing.\"\n\n\"Your grandmother did look kindly on you then?\"\n\n\"Yes. This place is the evidence for that. I couldn't have afforded the re-building without her legacy.\"\n\nCate was smirking as she said. \"Oh, and I thought you did it all with your own hands.\"\n\n\"Huh!\" I laughed. \"Not likely. I can wire a plug, but that is about the limit of my handy-man expertise.\"\n\nCate returned to the topic of Ellen. \"How old is your daughter now?\"\n\n\"Ellen is nineteen. She's at Durham University, studying for her B.A.\" \n\n\"Will I meet her sometime?\"\n\nI was not so stupid to understand what Cate was really asking. \"I hope you will, and many times. I am sure you will like her, and her, you. Hopefully when you are next here, she may pay a flying visit.\" I noticed the small smile on Cate's face, as she understood my words.\n\n\"Flying visit?\"\n\n\"Yeah. She's a nineteen year old. There is so much she has to do, you know, parties, clubbing, hanging out with her mates. You know the score. She comes to see her old dad for a fleeting visit, to justify the car I bought her.\"\n\nCate laughed happily. \"I know what that's about. I loved my mum's Steak and Kidney pie. Whenever I got home between tours, she would make me one, just to remind me of the sense in getting home often. \"\n\n\"So you still go home occasionally?\"\n\n\"Yes. Mum and dad don't live in Southend anymore. When dad retired they moved to Frinton on Sea.\"\n\n\"Ooh. Very posh.\"\n\n\"Not so much as it was. I think they have a take-away Chinese now.\"\n\nThat amused me. The main road into Frinton had a level crossing with the railway on the outskirts of the town. The story, most likely apocryphal, was that should anything like a coach party approach, the level crossing gates would be closed until the coach party gave up and drove off to nearby Clacton. The town council years ago would not give planning permission for take-away restaurants. It was probably untrue, but those were the stories at the time. There was a time when Frinton was known for its aging population, and using the advertising of the time giving birth to the quip, 'Harwich for the Continent, Frinton for the incontinent'. \n\nCate finished her coffee and got up. \"I shall go and freshen up and could you take me back to the hotel, please. Or call a taxi.\"\n\nI looked at my watch. I hadn't realised how the time was going. Just goes to show how time flies when you are having a good time. \"No problem, of course I will take you back to the hotel.\" Cate smiled her thanks and went off to the bathroom. I cleared the plates and took them to the kitchen. I returned to the lounge and closed the big windows. I turned and found Cate standing behind me. She took a step closer and I opened my arms. She flowed into me. With her head on my chest I heard her. \"Jack, this has been a great day, thank you. If you can put up with me I would like to do this again sometime.\"\n\n\"I would like that, sometime soon I hope.\"\n\nI felt her nod. \"Yes, soon.\" She looked up at me. \"Perhaps I could even stay?\" \n\n\"I would like that as well.\" She smiled and stretched her head upwards, I lowered my face and our lips joined, tentatively at first then pressing harder. Her mouth opened a little and my tongue slipped in seeking her tongue that actively sought mine. Her hand came up behind my head and held me in place to prolong the kiss. She pulled away with a smile, which became a cheeky grin. \"You certainly know how to kiss a girl, what else do you know?\"\n\n\"We will have to explore that together, sometime.\" I grinned.\n\n\"Soon.\" Cate replied. \"Now get me back to the hotel before I forget myself.\"\n\nCHAPTER SIX\n\nJack\n\nWe spoke on the phone quite regularly. When she left Derby she had a two-night show in Bristol and then she was back home. There was nothing in her diary for the next three weeks so she contacted Steve Brackley, the guy she knew who had organised the Swing orchestra. They met and discussed her plans. Steve was just as excited as she. Evidently whilst they got regular bookings, they tended to be for corporate events, and they were asked to play a mixed programme of music, not just swing. Steve thought that the opportunity to collaborate with a 'name' such as Kat Lacey would give them a real chance of becoming not exactly headliners but certainly a much higher profile. He discussed the idea with the other members of the orchestra and they were quite happy to give the idea a chance, especially as Kat was looking to put together an album, funding it herself. They offered their services on the basis of taking a percentage of sales. All of this was related to me over a series of phone calls. Then came the day when Cate told me they had got a date for the recording studio. \"Jack, we're recording on the eighteenth and nineteenth. The guys are going to lay down the tracks first and then I shall dub in the vocals. Steve's reinforced the Saxes and brought in a very good Clarinettist. He reckons it's the closest to Glenn Miller he's ever heard.\"\n\n\"Sounds great, Cate. I can't wait to hear the final version.\"\n\n\"I'm so excited about it. I'm sorry we had to drop 'Stardust', I just couldn't get it right, but Steve re-arranged 'I Follow' to a swing version and that is fantastic.\"\n\n\"Don't worry about 'Stardust'. You'll get there one day.\"\n\n\"I'm sure. Steve says that if the disk sells and we get some tour dates, he suggests that we tour as 'Kat Lacey and the Stela Swing band'. What do you think?\"\n\n\"It's different. Where does Stela come from?\"\n\n\"It's a combination of Steve and Lacey.\"\n\n\"Hmm, that should work. You know that the vocalist travelling with a band normally didn't get a mention.\"\n\n\"Yes, Steve mentioned that. He reckons that my name is essential to bring the audience in.\"\n\n\"Well, from my perspective he's right. But you could say I am not impartial.\"\n\nShe giggled. \"I'm not impartial either, in fact I am quite partial to you. When this is put to bed, can I come up and see you and perhaps you could put me to bed?\"\n\nI caught my breath and stuttered. \"I...I th...th..think I would find that a pleasure.\"\n\nHer voice was very soft as she replied. \"I am sure that I will.\"\n\nCate\n\nThe rehearsals were done. It's not often that I looked forward to rehearsing, but this was special. First of all I had a band behind me of really good professional musicians many of whom I knew from sessions in the studio. I was not too surprised to see three females in the band. One played keyboards, another blew both alto and tenor sax, the last, a girl who could not have been older than twenty-one who played both clarinet and tenor sax. I found it easy to keep my lyrics in time, as I was so close to the band that the swing beat literally throbbed in my body. Steve was smiling all the time, running out of superlatives to describe the sound we were producing. Now we were in the studio. I sat with the technicians with headphones on as Steve and the band laid down the tracks. I said they were all professionals and they were. None of them were strangers to the recording studio as most of them worked as session musicians anyway, now coming together to play the music that they liked. They went about their job and laid down fifteen tracks easily within the first day. Each track was close to eight minutes in length, although my lyrics would only last for four. A CD would allow for the extra length. \n\nSteve came in the next day when I had to record the lyrics. He actually conducted me, bringing me in when he wanted me to sing and giving me the timing, although I had sung these songs so frequently in rehearsal that I was pretty well spot on, but having him there was an encouragement. It would be good to say that I got it down right first time, I didn't. A couple of times I sang the wrong words, the other times it was because of a technical hitch. My microphone was not balanced to the band's recording on a couple of occasions and the other was when the microphone gave up the ghost half way through. No one jumped up and down screaming angrily, this was par for the course in recording studios. I was completely wiped out when we finished. I was wearing a sweatshirt and jeans. The sweatshirt had a deep vee of perspiration down the front and the back and my bra felt like my breasts were sitting in pools of rapidly cooling water. Despite the discomfort I was hyper when we finished. We had got something good in the bag.\n\nSteve had listened to some of the completed tracks and was jumping with joy. We had laid down fifteen tracks believing that we would have to drop one or maybe two. When I joined Steve and the sound engineer in his booth they were talking about it. The engineer turned to me and said. \"I would not like to suggest what track should be shelved, they're all great. If it was me, I would press them all.\" Steve agreed and that was it, decision made. In the following days the engineer played all the tracks and balanced them for tone and volume, only when he was satisfied with that would he make the master and that again was thoroughly checked for imperfections. There actually were two masters, one was kept safely and the other was sent off to a company that specialized in disk production. I had ordered a first run of five thousand, so a glass master was made from the studio master and it was the glass master that was used in the imprinting. Their in-house graphic designer produced the sleeve and with Steve and my agreement they were printed. ",
        "Three weeks later the CD's were ready. Nearly five hundred of the first pressing was sent off to broadcasters all over the country. Apart from the national broadcasters there were many small local stations and all received a copy of the disk. We couldn't keep track if they were played or when, however when the phone rang and I was asked to do a phone interview, I knew that interest had stirred. I was listening to Radio 2 one morning when the presenter announced.\n\n\"Here we have one of our favourite Rock Stars singing golden oldies that our grandparents listened to. The album is called 'Kat Lacey Swings' and wow! This is Kat in a very different mood and how well she does it. Here's a track that everybody will know.\" The strains of 'Moonlight Serenade' filled my room. I phoned Jack and held the phone close to the speaker. When it finished I spoke to him.\n\n\"As far as I know that the first airing on Radio two. If they play it is almost bound to start selling. Jack! I am so excited. I have already done a phone interview with a station in the Midlands so they must have played it.\" \n\n\"That sounded great, Cate.\"\n\n\"I am bubbling, Jack and it's all down to you.\"\n\n\"I don't think that you can say that, Cate.\"\n\n\"Yes I do. You got me hooked and I can see a whole new career opening in front of me. I've got to phone Steve he may have had some feedback by now.\"\n\n\"I'll let you go. Talk soon, I really want to see you again.\"\n\nMy heartbeat quickened with those words. \"I want to see you again, Jack. I would like to experience the peace and quiet of your home again.\" There were other things I wanted to experience as well, however I didn't say that.\n\n\"Let me know when you want to come up. I'll take a few days off.\"\n\n\"I promise Jack. Soon.\"\n\n'Soon' was put on the back burner as interest in our CD grew. The music papers started asking for interviews, I did more phone interviews on air with stations all over the country. However what was more important the company handling the production of the disk was getting orders. Ok, they were orders for ten or twenty to start, but they were orders. They asked if I would want another pressing. So far I had invested quite a lot of money in this, and I would have liked to see bigger orders before committing to another pressing. I stalled on that and told them I would get back to them. The next day I almost phoned and told them to press another five thousand after I got a call from a booking agent for me to do three nights in Leeds. It hit the buffers when he told me he had a good group lined up who could back me with my new sound.\n\n\"Sorry. Mr. Firlow. I will only work with the Stela Swing Band.\" I had already discussed this possibility with Steve and we had agreed that the package was all of us or none.\n\n\"I see, Kat.\" He sounded a little upset. \"And what sort of money would you be asking?\" I prepared for the rejection. He wanted his group who were possibly under contract to him. I quoted the rate and heard the gasp.\n\n\"You are joking.\"\n\n\"No, Mr. Firlow. You get eighteen of the best musicians in the land and you get me. We will give you two and a half hours plus intermission. You won't have to book supporting acts. We will need twenty rooms at a nearby hotel, at least three star quality for five nights and we will need the venue for the day before the first performance for rehearsal and sound checks.\"\n\n\"You're quite free with your demands.\"\n\n\"Mr. Firlow, the disk is being played on national and many local stations. There will be a sales stand as well, and I'll offer you a percentage of the sales. Your audience will get an evening of first class music and entertainment. If you need to think it over do so, but I will tell you that our diary is filling quite well.\"\n\n\"I'll get back to you in twenty-four.\"\n\nOf course I was busking. We didn't have any dates and I had no way of knowing if the disk was getting plays as much as I suggested, but I did know agents who from personal experience were quite happy to rip off anyone inexperienced and uncertain. This may be something new in style, but I had been around long enough to know which side was up. I didn't know it when I spoke to Mr. Firlow but we did have a date. Steve phoned me that evening. \"Kat. The band has a date for next week. It's a corporate do, one night in Basildon. I thought it may be a good opportunity to start building an act if you came along. The fee is reasonable so we will share with you if you decide it's worthwhile.\"\n\n\"I like the idea, Steve, we should be working up an act. I've just put the phone down on a booking agent who could have three nights in Leeds. I think he had a heart attack when I told him what we wanted. He's going to get back to me. Yes I would like to come along. I don't want anything, you guys have been good enough to me already, let's just call it rehearsal.\"\n\n\"Ok, I won't tell them you are coming along, it will be a surprise for them. They booked us under our old name, so it will also be a surprise when they get the Stela Swing Band.\"\n\n\"Should we bring some disks? I know it's a corporate event, but some may want to buy something to remember the evening.\"\n\n\"Yeah. We'll do that. I don't think they will mind, particularly if you will autograph them.\"\n\nI phoned the distributor and placed an order for another five thousand, asking them at the same time to send me five hundred of the original batch. Then I phoned Jack.\n\nJack\n\nI was both pleased and disappointed when Cate told me that she would be busy for the next two weeks. Pleased of course that her venture would appear to be taking off. The disappointment needed no explanation. As we passed from June into July it was the start of my slack time. The furniture manufacturers were not busy, allowing staff to take their holidays and few were looking for new product. Having said that I would have no new product until September. So at this time of year I allowed myself to slow down a little and take things easy. Usually I would take off for a couple of weeks in the Canary Islands, but I had put that aside hoping that Cate and I could do something together. In many ways this was a strange relationship. Apart from one kiss it could not be called an intimate relationship although both she and I had said enough to indicate that was where it would go. I was very attached to a certain Caitlin Laine, who also happened to be Kate Lacey. Now Kat Lacey was in constant demand and it looked like that pressure was going to increase, leaving little time for Caitlin Laine to emerge. Much as I was happy for Kat Lacey and wished her success I wouldn't have been human if that wish wasn't tainted with a little bit of selfish bad humour for denying me Caitlin. I was somewhat mollified when I found in my post box a small packet. It was the CD that Cate had made. She had autographed it as Kat Lacey, and then added a little note, 'Thanks for showing me a new direction', she signed that 'With love Cate'. \n\nCate\n\nThe booking in Basildon went well. This wasn't a concert as such. The corporate event was a dinner with speeches. The band was there principally to provide music for dancing after the diners had finished their meal. The nice thing about it was that the caterers ensured that we were fed as well. Steve suggested that they would begin the first set and towards the end of the first rendition of the melody he would announce me. I would come on stage and the band would reprise the melody and I would sing. I agreed to this and waited nervously in the wing as the curtains drew back to reveal the band. They immediately went into 'Moonlight Serenade'. Glenn Miller had adopted that as his signature music and as Steve said, \"if it was good enough for Glenn it is more than good enough for the Stela Band.\" As they arrived towards the end of the refrain, Steve picked up the radio mike and announced.\n\n\"Ladies and Gentlemen, Please welcome Kat Lacey.\"\n\nI was surprised at the warmth of the reception as I walked on stage. I wore a full-skirted long dress with a tight bodice in shimmering turquoise. I doubted that the short skirts or tight-fitting leather trousers would be suitable for this audience and the new Kate Lacey; nor did I wear the long hair wig. I had allowed the blonde dye to wash out and my hair was now dark and cut in a style reminiscent of Liza Minelli. Steve handed me the mike and almost immediately the band repeated the melody and I sang the first stanza of the lyrics.\n\nI Stand at your gate,\n\nAnd the song that I sing is of you Love.\n\nI stand and I wait, \n\nFor the touch of your hand, and of you Love.\n\nAfter all these years I shouldn't have been nervous, but I was. However the nerves faded as I got into the song and soon I was enjoying myself. It was years since I had really enjoyed singing, the years of doing the same old thing had dulled my passion for music, now I was finding once again the thrill that brought me into this business in the first place. I sang for three numbers and then went off stage as Steve fulfilled his booking by playing dance music. I re-appeared to sing another three songs having changed my dress in the meanwhile. A stray thought went through my mind, if this took off I would be carrying around a lot of dresses. The costumiers I hired from would be very busy altering dresses to suit me. I finished the evening with our last number, 'Smoke gets in your Eyes'. The reception was superb. Yes there were some glitches but I doubt that the revellers knew about them. It appeared not, judging by their applause. The first hurdle had been overcome. There were more rehearsals to come to perfect the act, but I was confident that we had some good times before us. Steve agreed. As we left he told me that we had been booked for their Christmas dinner for a very good fee and they wanted the whole package.\n\nCHAPTER SEVEN\n\nCate\n\nGradually over the next few weeks bookings came in and time became a precious commodity. Steve and his musicians were in demand for studio sessions, I was still getting bookings for Rock concerts and we had to get together to rehearse and refine our performance as Kat Lacey and the Stela Swing band. The visit I had promised Jack was put back time and again. He was golden about it. Constantly re-assuring me when I yet again phoned him to put off our few days together, that it was o.k. with him and that I had to make the most of the phenomenon while it lasted. That he was so understanding confirmed my opinion that here was the man I could build a good relationship with, although whether he viewed me in the same way after so many postponements was something else.\n\nAt long last I found a weekend when I would be free. It would be early September. I phoned Jack eagerly. \"Jack, I am so sorry that I haven't been to see you, but it has been manic for weeks.\"\n\n\"I know Cate. I have been hearing tracks from your CD on the radio quite frequently. You have obviously struck a chord with the public. I am really pleased for you.\"\n\n\"It's all down to you, Jack. Who would have thought that an aging Rock Chick could find another career singing Swing. I didn't but you did. I really need to thank you properly. I've got a free weekend the first weekend in September, please tell me I can come up and see you?\"\n\n\"I will argue the description 'aging' at another time. You said the first weekend in September?\"\n\n\"Yes.\"\n\n\"Damn! I shall be in Belgium and Northern France for the week before that weekend, and I shall be flying to Turkey over the weekend to visit some mills there. There are lots of new designs for me to view and I can't miss out else I shall be too late for the Furniture Show.\" \n\n\"Are you holidaying in Turkey then?\"\n\n\"No Cate. There are mills in Turkey starting to produce good stuff and I need to get in as their agent in the U.K.\"\n\nMy heart fell. My first reaction was that he had got fed up with waiting for me and this was merely an excuse. Then logic kicked in. This was Jack's job, this was how he made his living, even so I felt kicked in the stomach. Dejection must have been in my voice when I asked. \"Jack. Have I messed it up?\"\n\n\"Messed it up? No Cate. Look at the reality. We are both busy people. You have something happening that is good and you have to pursue it whilst it is happening. You more than I know how fickle the music industry is, if you missed this chance it will be a regret for years to come. When you have the time we will get together, it is just bad luck that that weekend I will not be here. Any other weekend I will be, and when you have to time to come you will be welcomed with open arms.\" \n\nI felt a little better. I had got emotional and saw disaster, Jack just pointed out our situation, putting it into perspective. \"Thanks, Jack. You are right of course, this could be a seven day wonder. I was so looking forward to the tranquillity of your home and just kicking back with you as a balm against the frantic life I seem to lead. If I go through my diary and clear another weekend in September may I come up to see you?\"\n\n\"Of course you can, I would love to see you. But if you have that first weekend clear don't start filling your diary instead. You can come up anyway and spend some time here if you felt like it. I am really sorry that I won't be here, but you're welcome to my home anytime.\"\n\n\"You would allow me to stay in your home without you?\" I was aghast.\n\n\"Yes of course.\"\n\n\"You're crazy. Can I leave my toothbrush in the holder?\" I was joking actually but Jack was equal to the humour..\n\n\"By all means, but you need to leave some panties on the bed as well.\"\n\nI giggled at that, then picked up. \"Worn or clean?\"\n\n\"Worn preferably, then at least I will be able fantasize about the woman who used my bed when unfortunately I wasn't in it.\"\n\n\"You needn't fantasize. She will be there with you very soon.\"\n\nI was very tempted to go and Jack told me how to find the spare key, hidden in the flower bed if I decided that I would go. The idea of a weekend in his comfortable and peaceful home, away from the noise and bustle of London was very appealing. With that in mind I gave thought to hiring a car. I had learned to drive when I was twenty and my earnings were bringing me some independence. However, I never actually bought a car, it was easier and less hassle to fly to bookings or use the train. The promoters would always pay for taxis when I needed them. Having a car available when I was at Jack's made sense as it was quite remote. He faxed me a map having highlighted the route from the main road which would take me to his cottage. I felt much better after our conversation. His offer for me to borrow his home for a weekend was quite indicative of how he viewed me, and the comment about the panties actually produced some moisture in my nether regions. It would appear that he believed we were moving towards something good as I did. That gave me a really nice, warm feeling.\n\nJack\n\nThe offer for Cate to have the cottage for the weekend was a spur of the moment thing, yet having made it I was quite content. At any other time of the year I would have postponed my trip, but this was very important. The product I would be viewing, and the selection I made would be the deciding factor of my next year's income. If I could pick up some agencies from the Turkish Mills I would be in a good position for years to come. The comment about the panties was tongue in cheek, but Cates reaction to it told me that they would be there for me when I returned from Turkey. I had never had a fetish about panties but it would be significant to our relationship that something so intimate should grace my bed. I looked forward to the time when Kat graced my bed herself.\n\nI was busy making the arrangements for my trip and was very pleased with the reception I got from the Mills I contacted in Turkey. They had a long established weaving industry and their designs had become more acceptable for the European market. The best selling factor was that in general their product was priced very competitively compared to the European producers. This was why I had to make these visits. I left little post-it notes around the cottage for Kat, telling her where switches were for equipment she may wish to use and encouraging her to use the cottage as if it were her own. Usually I was quite excited when I left for this trip, looking forward to the new designs and deciding how I would sell them and to whom I would sell them. However as I drove away from the cottage en-route to East Midlands airport I was down. If Cate did come up I would miss her.\n\nCate\n\nMy mind was made up. I was going. With that decision made I arranged to rent a car at Derby station and packed what I would need for the weekend. The choice was simple really, should Jack be there the choice would be given greater thought for greater impact. However one item did need consideration. I know that Jack had made that reference to panties in a humorous context, I intended to take the humour a little further and set up a signpost for hopefully a future. A quick trip to the West End and Agent Provocateur. A big hit on my credit card bought me a scrap of silk and lace which would have fitted into a small envelope. These panties were never intended for utility, nor were they intended to be worn for long.\n\nI had printed off his directions and having picked up my hire car at Derby station I set off. There was no problem until I reached Hulland and turned off the main road. With one eye on his directions and the other on the road I literally crawled slowly through the maze of small lanes. I was certain that I had gone wrong somewhere when with elation I saw the sign 'Beware of the Bull'. The car rumbled over the cattle grid and soon I was pulling up outside the cottage. The key was exactly where Jack had described. \n\nIt's curious feeling to enter someone else's home and I looked around cautiously as I crossed the threshold until I saw the 'post it' notes stuck in prominent positions. The first said 'Cate, welcome to my cottage. Make yourself at home'. I walked through to the kitchen. Again there were notes stuck all over. The one on the kettle said, 'Tea and coffee are in cupboard overhead. Drink me!', the sticker on the freezer told me 'I'm full of food. Eat me!' I opened the fridge immediately seeing the bottles of white wine, they too had a sticker. 'Drink me!'. I filled the kettle to make coffee. While I waited for the kettle to boil I wandered back into the lounge and picked up my bag to take it up to the bedroom. On the bed head another sticker lured me to read. 'Sleep well'. Into the bathroom next and yes the inevitable stickers caught my eye. One, stuck to a packet containing a new shower cap just gave me instructions on how to turn on the electric shower, the other was more intimate saying that as the shower was big enough for two, perhaps I could suggest how it could be employed at sometime. I blushed. Me...I blushed after all these years in the business. I blushed not with embarrassment but from the mental picture that sprang readily into my head.\n\nAs I walked back into the kitchen I fanned my face to cool the heat that my naughty mind picture had generated. Just as I was stirring the coffee a car drew up outside and a young girl got out. She seemed perturbed that the door wasn't locked and entered cautiously. I was here with Jack's permission yet I still felt guilty as I walked through to meet her. \"Hello.\" I called. \n\nThe girl reacted to my call with anger. \"Who the hell are you and what are you doing in my dad's house?\"\n\n\"You must be Ellen. I'm a friend of your dad. I'm Cate.\"\n\n\"How do I know you are telling the truth and where's dad anyway?\"\n\n\"Well he's been in Belgium all this last week, and he's probably flying to Turkey at this moment.\" The anger vanished from her face immediately and one of embarrassment took its place.\n\n\"Oh shit. I forgot that.\" The embarrassment vanished and she stiffened. \"In that case if you knew that why are you here anyway?\"",
        "\"Your dad and I have been trying to get a weekend together for some time. I managed to get this weekend free and unfortunately it clashed with his trip. Jack said to come up anyway and as I needed to get some 'me' time I did.\" \n\n\"A weekend together? So you and dad are very good friends?\"\n\n\"Good friends I would say, but I'm hoping to add the very part quite soon.\" I paused as Ellen took that in then went on. \"I have just made some coffee, fancy a mug?\"\n\n\"I could murder a coffee, I've been driving for what seems hours.\"\n\n\"All the way from Durham?\"\n\nI could see her relax and she smiled. \"You know too much to be anything but a friend of dad's. Let's get the coffee and then I will subject you to interrogation.\"\n\nI got the coffee and brought the cafetiere, milk, sugar and mugs into the lounge. Ellen was browsing through Jack's music CD's and picked up my CD. \"I've heard some tracks off this on the radio, I'm surprised that Dad's got this already.\" She turned it over and read my message. She froze then turned to me. She held up the disc with my picture on it and looked at me. \"Shit! You're Kat Lacey.\" Ellen stood there with a bemused expression on her face then she blurted. \"Bloody hell, my dad has pulled a Rock Star.\"\n\nI nodded as I poured the coffee. \"How do you like your coffee, Ellen?\"\n\nShe came over and sat by me. \"Just a little milk and two sugars please. Oh! My friends call me Ellie.\"\n\n\"And I am Cate to my friends. I see you like your coffee just like your dad.\" I pointed to the disk. \"They played that on Radio 2, I am surprised that you listen to that.\"\n\nEllie laughed. \"It's not so surprising when you listen to Radio 1. They treat their audience as if none of them are over fourteen and that they are nearly brain-dead. At least on '2' you get some relevant news and current affairs.\" We sat sipping our drinks, I could feel the excitement in Ellie, bursting with questions and wondering which to ask first, so I started.\n\n\"I met your dad down in Devon. He was working and I was doing a show in Exeter. My driver cut him up as we turned into the hotel entrance so when I saw Jack sitting in the bar later I went over and apologised. We got talking and found out we had both come from Essex. I invited him to come to my show the next night and later back at the hotel we discussed our likes and dislikes in music.\"\n\n\"And dad rammed swing down your throat?\" Ellie interjected.\n\n\"Not exactly. It was more me trying to get him into Rock. We exchanged numbers and when I was doing a gig in Derby we went for a meal and he showed me around Derbyshire. Then he brought me here.\"\n\n\"You know you are very privileged. \" Ellie was grinning. \"Dad is choosy about who comes here.\"\n\n\"Well I must have said the right thing.\" I laughed. \"On the way I got a dissertation of Derbyshire history, and when we came back here I was introduced to Swing. Your dad played me some of his music and I got into it. He put the play list together on that CD. Later he took me back to my hotel and for the last few months I have been trying to worm my way back here. I had commitments though, particularly as I had to promote this CD and we could never get it together.\n\n\"So dad invited you to come up here for the weekend?\"\n\n\"Yes but I am pissed off that he isn't here. Work prevented me from getting here before and now work prevents him from being here. Sometimes, Ellie Life sucks.\"\n\n\"Well if he had been here, my turning up would put a damper on things.\"\n\n\"Possibly, but in any case I am really happy to meet you.\"\n\n\"You mean you have to get the daughter's permission before you get down and dirty with the father.\"\n\n\"Something like that.\" I grinned at Ellie and she returned the grin.\n\nCHAPTER EIGHT\n\nCate\n\nI got on well with Ellie, she had much of her dad about her. As we talked it became clear to me how much she loved Jack. It was little comments at first but when she talked about her mum it became clear. \"I love my mum.\" She told me. \"But the way she split with dad was evil. I was just a baby of course when it happened so didn't understand what was going on. As I \n\ngrew older I started to understand.\"\n\n\"Has your dad talked about it?\"\n\nShe shook her head. \"No. He doesn't. But I have pieced it together from things that Mum and Roger have said...\"\n\n\"Excuse me. Who is Roger?\"\n\n\"My step-father.\"\n\n\"Ah!\"\n\n\"Dad was always working at the time, usually away somewhere on business, so it was easy for Roger to work on mum. I think she had post-natal depression, so she was vulnerable. Dad knew nothing about it until he came home one day and she had gone taking me. I didn't know until much later that she didn't even leave a note. I think that was Roger manipulating her. He likes to be the mover and shaker; Mum goes along with it but sometimes when he is particularly nasty about dad she shuts him up. He gloats quite a lot that he took mum away from dad.\" \n\n\"That isn't nice.\" I suggested.\n\n\"No. I think Dad knows but has never said anything, although he never calls Roger by name. If he has to mention him it is always 'your step-father' or 'Ellen's step-father'. The best thing about it was that mum never made a problem about my seeing dad.\"\n\n\"You love your dad a lot, don't you?\"\n\n\"Yes. He's a funny kind of father. All my friends have fathers who tell them how to live their life. Roger tries to do that as well; not that it does him any good. Dad talks to me as an equal. If I have some idea in my head for whatever, telling mum or Roger will get me a lecture on being silly or worse. Dad sits down and discusses it with me. He doesn't say yes to the idea or no. We just talk it through and he makes me understand the positives and the pitfalls. Then he gets up and leaves me to think about it and make a decision. If I do whatever it was and it drops me in the mire he never says 'I told you so'. He sits with me again and we work out a plan to put things right. He doesn't get angry but I would know that I had disappointed him and that made me feel worse than if he had shouted at me. I heard a maxim once. 'A Father is someone who lifts you up and holds you there forever'. For me that said it all.\"\n\n\"A bit like my dad. He wasn't keen on my singing career and I knew he was really concerned about the whole show-biz reputation. You know the sort of thing, what's going to happen to my little girl? He kept his worries to himself though and I admire him for that.\"\n\nEllie nodded. \"Yes that's dad all over. I'm lucky and you have been lucky. Now doubly lucky if you hook up with my dad.\"\n\n\"No jealousy?\"\n\n\"Nope! I quite like the idea. You wouldn't be a step-mum, more a girly friend I could talk to.\"\n\nEllie went up to the loo, using the bathroom that was ensuite with Jack's bedroom. I blushed as I realized that I hadn't taken down the post-it notes that he had left for me. I waited on tenterhooks until Ellie came down giggling. \"Wow!\" She cried. \"My dad the lover. He is naughty isn't he?\"\n\nI decided to brazen it out. \"No, not really. I like his ideas but he doesn't go far enough for me.\" \n\nThe look on Ellie's face was priceless. She thought and went to say something and then shook her head. \"Nope. I can't have this conversation. It's my dad we're talking about. We all know that our parents don't do sex.\" I nodded understanding what she meant, after all whilst on a practical level you know your parents must have done 'it'. Emotionally you denied that they had the same urges as you. I took the conversation into safer territory.\n\n\"Are you hungry Ellie?\" I asked.\n\n\"Famished.\"\n\n\"Ok. Let's rummage through the freezer. I am sure we can find something to put together quickly. Thank heavens for a microwave.\"\n\n\"Great!\"\n\nThe freezer was packed full and just as I would think knowing Jack's character every packet was neatly labelled with what was in the packet and the date it was frozen. A fleeting thought came to me was I getting involved with a pedantic perfectionist?\n\nEllie smashed that idea when she said. \"At last I have got through to dad. He is useless at labelling things in the freezer. I know of many times he has come back from a trip and forgotten what he has put in here. Believe me he has eaten some very strange combinations after he had de-frosted the wrong meal.\" She rummaged some more and came up with a dish. \"Now this is good.\" She looked up at me from her kneeling position. \"Do you like fish?\"\n\n\"Yes, I do.\"\n\n\"Good you'll like this. Its Haddock with sliced potato layered with leek in a cheese sauce.\"\n\n\"Sounds good. It looks as if it's home-made.\"\n\n\"It is. Dad likes to play around a little with easy to de-frost stuff. He made this once before when I was here and I loved it.\n\nEllie was right. It was very good. I went on a search and found a bottle of chardonnay and that went down very well with the food. So later we relaxed in the lounge with a glass of wine each. Sipping and talking, then sipping and talking more soon finished the bottle. I opened another and we segued into a slightly tipsy but very good mood. With sufficient wine to let loose a little Ellie became more open.\n\n\"I'll tell you now that you will get it on with dad, oops! I mean get on with dad.\"\n\n\"What makes you say that? Whatever you meant.\"\n\n\"You're here.\" She sipped her wine. \"As far as I know, no other woman has been here, certainly not for a weekend. Taking into account that he was happy for you to be here without him tells me that he sees you as someone special. Judging from those messages he left he is quite keen on being very rude with you.\"\n\n\"I don't know if this is a conversation we should have. but if your dad wants to be very rude with me he will not find me arguing about it. Indeed I look forward to it.\"\n\nA somewhat bleary-eyed Ellie lifted her head and looked at me curiously. \"I don't get it, I mean you are a celebrity, a famous singer. You must be surrounded by loads of very fit, gorgeous men. What's my dad got?\"\n\n\"Loads of very fit gorgeous men who want to get between the sheets with me and then tell the newspapers to enhance their profile. No thank you. What your dad has got is far better than any of these gorgeous men. Jack likes Caitlin Laine, not Kat Lacey. I like your dad because he doesn't fawn over me, because he talks with me, argues with me if he has to, He treats me like a woman not as a Rock-star. I like your dad because he made me see what I had forgotten, the emotion of music and opened up a new experience for me. I like your dad because I know if we got together he would never tell tales to the press, would never be disloyal and would bring the love into my life that I have missed so much. Now possibly I am drunk because I have said too much.\"\n\n\"Who's Caitlin Laine?\"\n\n\"Me. The real me.\"\n\n\"Oh!\" Ellie lapsed into silence. I thought she had fallen asleep, much as I was about to do when after a while she muttered. \"If my dad loves Caitlin Laine, then I will love her too.\"\n\n\"That's nice.\" Ellie didn't reply, although it may have been that I didn't hear her as I slipped into a wine induced slumber at that moment.\n\nJack\n\nIstanbul was hot. Very hot. I checked into my hotel having dressed that morning for a Brussels late Summer, warm but not too warm and stepped out of the air-conditioned plane into a fiery furnace. My sensible choice of clothes for Brussels were almost immediately irritatingly clinging. The hotel room was supposedly air-conditioned but the system was waging a losing battle with the late afternoon Sun. What is more the air that it cooled and pumped into the room seemed to have come via the garbage area. Reluctantly I shut off the air-con and opened the windows. I sighed with relief as hot dry air wafted into my room, relief that it no longer smelled of rotting vegetables. I got rid of the jacket, tie, shoes and socks accustoming myself to the heat and sat out on the balcony with a bottle of chilled mineral water to observes the bustle in the streets below. \n\nI had collected messages from the reception desk, left for me by the weavers who I proposed to meet. It appeared that they would come to the hotel on Monday with samples of their products. I appreciated their courtesy at the same time wondering if this was because they didn't want me to see their operation. I had no illusions that they would be the same very professional and streamlined operations that the northern Europeans presented. I imagined a very different system here just one step up from a cottage industry, but in the social strata where most of these products would sell, that in itself would be a plus. \n\nMy thoughts turned to Cate, wondering if she had taken up my invitation. I hoped so. Despite my work which involved being outgoing and friendly I was actually quite a private person. My home was my hideaway from the world and apart from Ellie who would turn up unannounced at odd times I rarely had visitors. My spontaneous invitation to Cate was completely against my character. Why? I asked myself. The answer was quite simple. Ignoring her celebrity I felt an attraction, a strong attraction to this lovely, in my eyes, woman. I suppose that our common background had something to do with that but it was more than that, it was character. We clicked in many ways. I was finding with her a empathy that I had never found with a woman, not even my wife. After all these years of being contentedly single I was contemplating life with a partner. I didn't know if Cate was contemplating that, although her comments expressed a wish to take our friendship to another level. If that was the case I would be very happy and I could hope that she wanted even more than just a casual relationship.\n\nSleep for me that night was fitful. The temperature even after the sun set was almost as high as the day. The buildings and pavements absorbed the heat and once the sun had gone down released the stored energy. I suspect it was close on five a.m. when it had cooled sufficiently for me to sleep properly. It did my temper little good when my mobile phone rang a few minutes after nine. Groggily I found the damn thing on the bedside table, noticing as I did that the call originated from my home number. \"Jack Weston.\"\n\n\"Daddy! I'm at home and I have met this great lady who you seemed to want to keep secret and we are already the best of friends and get on like a house on fire and she's really nice and if you don't take care of Cate I will never speak to you again.\" The one sentence came without breath or pause.\n\n\"Hello Ellie my dear daughter. How are you? Now I am sure that you were going to ask me how I was so I'll tell you now. I have only managed four hours sleep in this heat and I am tired and ratty so thank you for calling me. I notice your using my home phone so this call is going to cost me. I assume from your garble that Cate is there.\"\n\n\"Daddy. Don't be so grumpy. You know you love me and are absolutely thrilled to hear from me and yes, Cate is here so I suppose you want to speak to her instead of me.\"\n\n\"Yes please. I'll talk to you in a minute.\" I heard the phone being passed over and then Cate asking Ellie if she would make some coffee. I heard my daughter whinging and Cate telling her that she had something to say that would not be fit for Ellie's ears.\n\n\"Hello Jack.\"\n\n\"Good morning Cate. I didn't know that Ellie was going to be there this weekend.\"\n\n\"Not a problem, Jack. She's adorable. I do miss you though. I have slept alone for quite a few years and when I got into your bed last night I suddenly felt lonely. I knew the linen was freshly washed but the pillows still smelt of you. So I am going to be very forward and tell you I want to share your bed with you, and share everything that goes with that.\"\n\n\"Well all I can say is that is my wish coming true.\"\n\n\"Good. Now I can hear Ellie coming back so I can't say the things I want to say. When we next talk I will burn your ears.\"\n\n\"Cate I am gutted that I had to go away this weekend. There is nothing I want more than holding you close and waking up with you.\" I heard Ellie's footsteps and Cate asking her what she was doing. I suddenly heard the echo when the speaker feature was turned on and then Ellie's laughter as she said.\n\n\"I want to hear what my dad is saying to you.\" She raised her voice. \"Dad! Cate is blushing. What did you say to her?\"\n\n\"None of your business.\" I replied. \"And I thought you were making coffee.\"\n\n\"Yes. But this is much more interesting.\"\n\nI laughed with her and replied. \"Well you know what curiosity did to the cat.\"\n\n\"It's not curiosity dad, it's educational. This Kat doesn't seem in the least curious. Actually from her expression I would say she liked what you said.\"\n\n\"Cheeky girl. Now go and make the coffee.\"\n\n\"Spoilsport!\" I heard her footsteps walking away.\n\n\"She's gone.\" Cate told me and at the same time pressed the button to cut off the speaker. \"I heard what you said and I liked the thoughts. I cannot understand how this thing has got so intense without us actually spending much time together. All I know is that I like you very much and when you kissed me that time I knew it was something important.\"\n\n\"I thought you kissed me.\" I teased her.\n\n\"Ok, ok. Let's say we had the same idea at the same time. when are you back?\"\n\n\"It depends. The itinerary seems to have changed a little. Two of the mills are coming to the hotel tomorrow to talk and I haven't heard back from the other mill I spoke to. So to a certain extent I am clueless. I could be flying home on Tuesday or it may be later this week.\"\n\n\"You will be back next weekend?\"\n\n\"Definitely.\"\n\n\"Good. I am going back to London tomorrow, and Ellie's coming to stay with me for two or three days. Let us know when you are back because Ellie wants to see you before term starts.\"\n\n\"That's kind of you..\"\n\n\"It's not being kind, I like Ellie. She loves you and in my book anyone that loves you is my friend. Any way we have some shopping to do.\" She said the word shopping with that inflexion that women have which means everything to another woman and leaves the male of the species nonplussed. From what I can gather it's not about actually buying things, although that could happen. It is more about looking, communicating and constructing plots. \"Here's Ellie with the coffee, I'll hand you over to her for a few words.\" The phone went down and then I heard the rattle as Ellie picked up.\n\n\"Dad?\"\n\n\"Yes Ellie.\"\n\n\"You won't mind if I go to London with Cate.\"\n\n\"Of course not. I am pleased you get on together. I understand you are going shopping, It's a good job I paid off your credit card last month.\"\n\n\"Oh I doubt that I will buy anything, unless I see a dress that's to die for.\"\n\n\"Well behave yourself and have a good time.\"\n\n\"I'll phone when I am coming back. Will you pick me up at Derby station as I shall be leaving my car here?\"\n\n\"Yes. No problem.\"\n\n\"I'll say goodbye then and hand you over to Cate so that you can blow kisses at each other.\" The phone rattled as they changed hands.\n\n\"Jack! I am not blowing kisses. I want the real thing.\" I heard Ellie scream 'ooh'.\n\n\"So do I. We'll get together soon.\"\n\n\"Yes, definitely. Would you like to come to London and spend a few days with me?\"\n\n\"I would prefer to come to London and spend a few nights with you.\"\n\n\"I was thinking the same, but with Ellie listening to my every word decided not to say that.\"\n\n\"Probably best. My daughter has the habit of making mountains out of molehills.\"\n\nCate laughed. \"Yes I have found that out. See you soon.\"\n\n\"Yeah, Cate. See you soon.\" \n\nCHAPTER NINE\n\nJack\n\nMy business in Turkey was finished on the Monday afternoon. Representatives of two mills had visited me at my hotel and showed me samples of their current production and their library of designs. The first arrived at eight in the morning and the other at twelve. I could not fault the quality, nor their prices which I knew would please my customers in the U.K. However their designs and colourings reflected their ethnicity and would be difficult to sell in a northern European market. They were very interested in getting a slice of our market and assured me they would do everything they could to come up with designs and colours that would suit the market I worked in. That was good for me and I looked forward to seeing what they could do. I mentioned to both my visitors of my conversation with the other mill who had not continued my contact. The expressions that they showed spoke volumes. Their comments were also similar. Do not deal with these people, they promise the world but rarely do their promises become reality. Was that truth or commercial rivalry? Before they left we signed letters of intent for me to represent them in the U.K. ",
        "Before I left Istanbul I telephone the Turkish Commercial Bureau, and eventually spoke to someone who had English. He confirmed my contacts opinion. When I arrived home I would be having a rather heated conversation with the people in the Department of Trade, who had suggested that I contact that particular mill. Their information was sadly unreliable.\n\nI landed at East Midlands airport and having retrieved my luggage and car drove home to Hulland Ward. It was good to be home and breathe the cool air of Derbyshire. The first thing I met when I went upstairs to pack was a pair of very frilly, very minimal, lilac panties laying on my bed. Cate had used my post-it note pad, leaving a message for me. 'Next time I shall wear them and you can take them off'. Having just delighted in the cool air, I was very warm again.\n\nAs my trip to Turkey had been far more abbreviated than I thought I had some free time for the remainder of the week. Having made certain that I would have the samples of new product from the mills in northern France and Belgium I could now start making appointments to show the new designs to my customers. This took very little time as they were as keen to see the designs as I was to show them. My travels around England were starting again. On Thursday I picked up Ellie from Derby station. She started talking about her time spent with Cate in London the moment she got in the car and didn't stop until we got back to the cottage, when she asked. \"Are you serious about Cate, Dad?\"\n\nI had been thinking about this for some time now and really my answer should be yes. But I really needed to know how Cate felt. We had bantered about our relationship, but I was not someone who could get into and out of a relationship at the drop of a hat. I equivocated by replying to Ellie. \"I am very fond of her.\" \n\nI could tell by Ellie's expression that this was not enough for her, but thankfully she did not press me on this point. However I was certain that she would re-visit the topic later. Ellie was a woman after all! I was right. Later that evening she was telling me how she was accosted by some Hooray-Henry after she had gone out to a club. \"This idiot jumped into the taxi I had flagged just after I had got in. He coolly told the cabbie to take the young lady to wherever she wanted and then said he could take him on to where he wanted to go. He turned to me and said that he would pay the fare and was sure that I wouldn't mind. Dad I was flabbergasted. The cabbie had started away so I sat there clutching my handbag as if it were the crown jewels. This floppy-haired chancer was chatting away as if this was nothing extraordinary. We got to the block of flats where Cate lived and he got out of the cab after me. I asked him what he was doing and he said that as he was paying my fare the least I could do was to invite him up for a while. Suddenly Paul the porter was there. Cate had introduced me to Paul when we first got there. He asked me if I was alright and did I need any help. The Hooray-Henry answered before I could and said that I had invited him in. Paul looked at me and I shook my head telling him that I hadn't. Paul seemed to be about six foot six and from that height he glowered down at the Hooray-Henry and told him to leave 'NOW'. The Henry went white jumped straight back into the cab and off it went. I hope he had a big fare to pay.\"\n\nI was smiling at her story although I was a little concerned that she took such a chance. Ellie went on. \"Do you know about Paul. Dad?\"\n\n\"Cate did say once that he is intimidating.\"\n\n\"Intimidating? Dad he's built like the proverbial brick s...\"\n\n\"Ellie!\"\n\n\"Sorry dad, but you know what I meant. He's huge. An ex-sergeant in the Royal Marines and he can give you a look that would stop cows giving milk. The Hooray-Henry would have lost his ardour after the look that Paul gave him.\"\n\n\"Well I am pleased that he did, but Ellie you shouldn't have gone out to a club on your own.\"\n\n\"I didn't dad. Jacqui, one of the other students at Durham lives in London and I had phoned her when Cate invited me down for a few days. She phoned and asked if we could get together at this club. She hooked up with this bloke whilst we were there so I decided to go back to Cate's when she disappeared with him. Anyway Cate is much better company than Jacqui.\" She paused for a moment and I knew she was going to return to her conversation of earlier. \"I really like her, dad. It would be great if you and she got together. It's not as if I want a step-mother, but she is so much more attuned to my ideas and likes than mum or Roger. Beside that you have been on your own for too long. I worry about you, dad. I want to see you happy and with someone who loves you as much as I do. Cate does love you, you know.\"\n\n\"You deduce that from what four or five days with her?\"\n\n\"I don't have to deduce that. Cate as good as told me.\" \n\nNow that startled me. Putting aside that my daughter, like many women will read far more into things people say that was actually intended. I doubted that Cate would have said such as plainly as Ellie suggested. I decided that I needed to put a cap on this train of thought. \"Ellie. Whatever happens between Cate and me, let us make the decisions. I'm saying that I am really fond of Cate, and we could become a couple if we both feel that way. However that is our decision to make in time when we feel it is right. Your eloquence will not persuade me one way or the other.\"\n\n\"You're right, dad. I shouldn't interfere. Just make sure you make the right decision.\"\n\n\"I suppose that the right decision is the one you advocate?\"\n\n\"Of course, dad.\" She smiled sweetly at me. \n\nCate\n\nEllie was fun and the expression on her face when I left those panties on Jack's bed was priceless. She picked them up and looked at the label. \"Bloody hell. Agent Provocateur, they cost a fortune and you're leaving them here?\"\n\nI smiled. \"Just a little message for your dad.\"\n\nEllie replaced the panties saying. \"That's not a little message, it's a come and get me and take me to bed message\"\n\n\"Exactly!\" I rejoined. \n\nShe was like a kid with a new toy when we got to my flat. First of all it was London, which was a magnet for pretty well all young people, secondly it was in Chelsea, which according to the grapevine at Durham was where everything happened and thirdly a penthouse flat in Chelsea was the dream of many. Having lived there for many years I did not subscribe to those feelings but could enjoy Ellie's exuberance. Yet all that week I was on tenterhooks waiting for Jack to get back. I knew he would fly in to East Midlands so there was little chance of his calling in to the flat, but just knowing he was back in the country gave me a sense of security. It was only when I understood that feeling that I realized how far my feelings for Jack had gone. It was silly, we hadn't met that much although we had talked a lot on the phone, yet I had this emotional attachment to him, more than any I had felt before for any man. By coincidence the evening Ellie opted to go out and meet her friend, Jack phoned.\n\n\"How was Turkey?\" I asked him.\n\n\"Hot, uncomfortable and in the end a waste of time. I hardly slept at all. However I liked Turkish cuisine and their coffee is on a par with the French.\"\n\n\"Don't let them hear you say that.\" I laughed with him.\n\n\"I didn't get to see the mills, their representatives came to me. I suspect they didn't want me to see their operation, probably thinking that I would regard it as very primitive. Business was conducted in a very leisurely way. Lots of coffee and enquiries about health and family. They were quite concerned that I wasn't married and seemed to be making arrangements for me to meet one or two of their female relatives. At that point I had to tell them that I was promised to someone. They seemed disappointed at that. I think they wanted to foist off one of their unmarried sisters or cousins.\"\n\nI giggled as I asked Jack to whom he was supposed to be promised. The answer made my heart jump. \"Well I was thinking of you.\" I couldn't say anything and he went on. \"I am pissed off as I could have been back for the weekend and seeing you, which would have been far superior to Istanbul.\"\n\nI could hear the frustration in his voice. \"Well now I understand that your trip was superfluous I am pissed off too. Ellie was great company, but not the company that I would have wished.\"\n\n\"Well we will have to arrange another time soon. How are you fixed for the weekend after this?\"\n\n\"I don't care if I have anything, I shall cancel and I will be there with you. I have decided that we are more important than anything else at this time.\"\n\n\"I think you are right. Same arrangements as before?\"\n\n\"Yes, except that I don't want to sleep alone.\"\n\n\"I don't think that I was going to offer you a choice.\"\n\nI caught my breath and had another of those nether region moistening. I tried to keep my voice level as we continued to talk but it was difficult. After we had finished chatting I sat back and thought. I decided that I had to stop fluttering around this thing with Jack. I knew how I felt and from what Jack was saying I felt quite sure how he felt. One of us would have to garner the courage to make that declaration. I hoped it would be Jack. However I would if Jack didn't.\n\nMy new career seemed to be getting into stride. I had signed up with a new agent who was recommended as being honest and straight. There's not many of those in this business. Steve was happy with him as well and the agent had got us one or two good bookings. He phoned me the day after Ellie had gone back to Derby. \"Kat. How are you and Steve situated for the Saturday the 17th. Of November? I know that I haven't booked anything for you, but you may have without letting me know.\"\n\n\"Well I am free, but I'm not sure about Steve. Why? Have you got something for us?\"\n\n\"Possibly. That's the Saturday that 'Strictly Come Dancing' does the show at the Tower Ballroom in Blackpool. They are asking if you and the band could do the interval spot. It's recorded and then shown during the results programme.\" \n\nI was bowled over. That booking could really get us going. \"Dave, I am sure that we can do it. Hell if we had a booking I'd cancel to get there. I'll call Steve and get back to you today.\"\n\n\"Make it quick, Kat.\" I would like to confirm within the next twenty-four hours. You haven't even asked about the money. It's a good job you have me to look after things. It's at the top end of your rate, so no problems there.\"\n\n\"I'll be back to you as soon as I can.\"\n\nSteve was bursting when I told him, although it put him in a spin. He had to contact his musicians to make sure they were available. The guys and girls in the band all had other work doing session work in the studios, however it would seem that a weekend in Blackpool and a chance to sparkle on this spot was worth a lot more than the money they would earn. Steve came back with a positive and I phoned Dave to confirm that we would be there. Steve had also suggested that we needed some backing singers. I was a little uncertain about this, but when Steve said that we needed the extra voices to fill and create the right sound I had to agree. He was one of the best musicians around and if he thought it was right I wasn't going to argue. He said he had worked with a combo of three, two girls and a guy. \"They are good, Kat; they know what they are doing.\" Our travel and hotel costs were rising with every booking and our asking price was going up as well. I hope we could satisfy the audiences.\n\nIt took Dave a couple of days to get back to us with confirmation of the booking. I phoned Jack to tell him. \"Cate that is the most marvellous news. I shall make sure I watch that. It would be so good to see you and the band doing your stuff.\"\n\nI suddenly realised that Jack had never seen nor heard us live. I immediately felt guilty. Jack had inspired this whole re-emergence of my career and without meaning to, I had cut him out of the excitement. \"If I can get you a ticket, could you come up to Blackpool for the show?\"\n\n\"I would love to Cate. However I doubt that you could get me a ticket. I think that show is over subscribed. Try if you wish by all means. If it is a 'no go' let's try for another venue, I am certain that you will be getting more bookings after you have done 'Strictly'.\"\n\nSteve, the band and I got together for rehearsal the following week. We tried various numbers and eventually settled on 'I know why and so do you'. Another Glenn Miller number. Steve was right. The backing singers filled in very well and also gave a contrast to my voice. One of the programme assistants at the B.B.C phoned to ask what we would be playing. I told her what we had decided on and she immediately asked what tempo. We were in the rehearsal studio at the time and I asked Steve. He shouted back to me 'Slow Foxtrot'. The girl heard him and said that would be fine, as they would get one of the professional pairs to dance at the same time. There would be more rehearsals before we were ready, however we weren't being rushed as we had four weeks to get it right. With this booking Kat Lacey and the Stela Swing band could really take off. Now I had another reason to thank Jack for giving me a signpost to a new career.\n\nCHAPTER TEN\n\nCate\n\nI got to Derby station late on the Friday evening. I was tired after a hectic day and a little bit grumpy as the train was crowded. I had booked my seat, but some guy was sitting there when I got on. He refused to move, saying that he had paid for his ticket and that guaranteed a seat. Eventually the ticket inspector came along and asked him to move. \"Or else, Sir, I shall have to ask the railway police to remove you from the train.\" The man remained obdurate. The ticket inspector then asked me for my ticket and proclaimed loudly enough for the occupant of my seat to hear that he was upgrading my ticket to first class. The look on the interlopers face was priceless, if he had been co-operative it could well have been him who was upgraded to first class. The inspector picked up my case and led me through to the more luxurious seating and seated me comfortably at a window. \n\nI was so pleased to see Jack waiting for me and more so as he folded me into his arms and kissed me. \"Now that's how a girl likes to be greeted.\" I told him with a smile.\n\n\"Is that just at stations or can it be used at other times?\"\n\n\"About every five minutes or so will do fine.\"\n\nAs the evening moved on and it got closer to the time we would go to bed I was overcome with shyness. I was amazed that I should feel that way, the emotions of a young virgin anticipating her first man. Jack would not be my first, nor would I be his first woman, yet the thought of our encounter instilled fluttering in my stomach and symptoms akin to hyperventilating. We were sitting closely together on the couch, snuggling his arm around me and my head resting on his chest. I was so pleased when Jack took my hand in his and confessed the same symptoms. \"It's stupid, I know. After all we have bantered about our sleeping together and now it is becoming reality I am getting scared...Scared that I will not be good enough for you.\"\n\nI shook my head. \"I was having the exact same fears. I don't view you as a one night stand. I am hoping that whatever we have going for us will be for the rest of our lives. If all we do tonight is sleep in each other's arms that will be good enough for me. We have a long time ahead of us to get it right.\"\n\nHe smiled lasciviously. \"Oh I doubt that you will remain unsullied. I love you Cate and I want this to be for the rest of our lives also.\"\n\n\"Good.\" I smiled. \"I love you too, Jack.\"\n\nHappy was the word. Happy that we had cleared that up. Happy that Jack loved me as I loved him and happy that he anticipated many years together. I reached up and kissed him. \"Give me ten minutes. A girl needs to make herself ready.\"\n\n\"So do us blokes Cate. Would you like some Champagne?\"\n\n\"Oh quite the experienced seducer?\"\n\n\"Not exactly. Isn't champagne the drink for any important moment in our lives?\n\n\"In that case, yes please, champagne is perfect.\"\n\nJack and I went very well together. Actually we went perfectly together because there was more emotion than I could have believed possible. Jack had given me slightly more than the ten minutes I asked for and I was thankful for that as I changed my mind about what I should wear for him. Eventually I slipped on a silk pyjama top, just closing one button. I didn't bother with the bottoms as they may have been too fiddly to remove. I waited for him in his bed. He had obviously thought ahead as when he came into the bedroom he was wearing a short silk dressing gown so he must have taken that down with him earlier. He carried two flute glasses and the bottle of Piper Heidsieck. I remained tremulous until the moment Jack got into bed beside me and took me in his arms. At that moment all the fluttering anticipation vanished. It felt so right to be here with him and in his arms.\n\nI awoke the next morning happily still in Jacks arms, except I was naked the pyjama top discarded. I smiled ruefully to myself. I bought the pyjamas especially for this occasion and they were quite expensive. I think I wore them for about twenty minutes in all, but they performed their purpose. A woman loves the feeling of her lover removing her covering, she loves his expression as he sees her body, bending down to kiss where a woman loves to be kissed. Jack was a considerate lover taking his time to arouse me and allowing me to climb that hill to ecstasy on more than one occasion, then he became demanding of me and I willingly submitted to him, not unselfishly as when he cried his pleasure I cried with him.\n\nI lay there thinking back over the night and squirmed with the memories of the pleasure he had given me. I felt him stirring and his hand closed over my breast. This was how I wanted to wake up every morning. \"Good morning, Cate. If I didn't say it too many times last night, I love you.\"\n\n\"You can say it as often as you want, my darling. I shall never get tired of hearing you say that. I love you, and this bed of yours. It is very comfortable and I slept very well. That may have been because I was very, very satisfied.\"\n\n\"Our bed, Cate. Our bed as often and whenever you want to be here.\"\n\n\"I think that will be often, Jack. No one has given me more pleasure than you. You know that us girls have a name for guys like you.\"\n\n\"No.\"\n\n\"Yes. You are a lady pleaser. However I shall keep that my secret, as I don't want another woman encroaching on my man.\"\n\n\"I thought that women dislike the appellation 'lady' now.\"\n\nI giggled and hugged him. \"I'm going to let you into a little secret. These bumps on my front pressing into your chest are sometimes referred to as my girls and that place that you kissed and where you and I joined so pleasurably is known as my little lady. So when I said lady-pleaser you know what part of me you pleased.\"\n\n\"Ah! I get it now. Well if I am it has something to do with how I feel about you. Have I told you this morning that I love you?\"\n\n\"Yes you have. However if you want to say it again and again I shall not stop you. I could hear that all the time and never get bored.\" \n\nJack leaned over and kissed me gently. \"I have to go to the bathroom, I'll not be long.\"\n\n\"Oh and I thought that was my doing.\"\n\nHe grinned. \"Wait till I get back.\"\n\nWhile Jack was in the bathroom I kicked the duvet away and posed seductively. The sound of the flush warned me of his imminent return. He saw me and smiled. \"God Cate. You are so beautiful.\" Those words thrilled me, but even more thrilling was the physical evidence as magically his desire grew from slumber into tumescence. As I watched I caught my breath, so flattered that that just the sight of me could create that reaction. I sat up and reached for him. ",
        "\"Now! That is your doing. You are so lovely.\" He reminded me as he joined me on the bed, pulling me to him and enveloping me in his arms. \n\n\"Put that where it belongs.\" I croaked. I lay back opening and lifting my knees to open myself then guiding him to fill me. What a lovely way to start the day.\n\nBreakfast was rather late that morning as our starting the day turned into a very pleasurable experience, again. I was not complaining, but eventually empty stomachs drove us reluctantly from our delightful loving. Croissants, apricot preserve and coffee resolved the other hunger. It was then that slightly depressing thoughts came to me. Jack must have seen my change of expression.\"Is there something wrong?\"\n\nI looked up at him and my eyes moistened. \"It was just one of those silly thoughts, Jack. Where do we go from here? I mean much as I would like we cannot be together all the time and I would like to be with you all the time. Your work takes you all over the country and mine is unpredictable. I know we could get some weekends together, but I have the feeling that that will not be enough for me.\" I could see his mind working and he got up and sat next to me, putting his arm around my shoulders.\n\n\"What we have, Cate, is very precious. I didn't say silly things and I doubt that you said silly things when we said that this is for the rest of our lives. That is a long time and in the future we will have together there should be no room for regrets or ideas of missed opportunities. Your career is important, to me as well as you. You know as well as I that fame in the entertainment business is ephemeral. Something good is happening for you and you must see it through. Should the public interest fade away then we should talk. I could sell my agency and retire. That takes one wild card out of the pack. I would be here whenever you want to come or if you wished I could be in London whenever you were there.\"\n\nI shook my head. \"No Jack. If this bubble bursts I would retire from the music business. If you were thinking of retiring then I would rent my flat in London and come here to be with you. What do you think?\"\n\n\"Would you be happy in my rural retreat?\" He had a smile on his face as he asked that.\n\n\"Happy? I would be delirious. I was just thinking how much I would save on clothes. I think I would not bother to get dressed at all.\"\n\n\"Well in that case you would have to be prepared for frequent assaults of a sexual nature.\"\n\n\"As long as they were loving sexual assaults I would only scream quietly. Damn! I've got wet just thinking about it.\"\n\n\"Do we go up to bed?\" He was already taking off his dressing gown. Mine came off just as quickly. \"Forget bed, here on the couch, now! Love me Jack!\"\n\nJack\n\nCate appropriated one of my shirts secured with one button at her waist which was all she wore for the rest of the weekend, well most of the weekend because I kept taking it off her, something she seemed to enjoy and indeed encouraged. She told me that if the weather was warmer she would probably not bother with clothes at all. \"I must have a latent naturist inclination, Jack.\" She told me. \"But only for you. I love the expression on your face when you see me like this. It's full of love and desire. If you were nude as well I would be insatiable. I keep wanting to make love with you anywhere anytime. I think I would like to make love with you al-fresco. After all, you have all this lovely countryside to explore and exploring me while exploring the countryside sounds pretty good to me.\"\n\n\"Well, if you want to be an exhibitionist, I'll get the old tin bath out for you on the terrace.\" I should have kept my mouth shut as Cate declined to take that as a joke. The gleam in her eye told me she was taking it seriously.\n\nLater that day Cate brought up the subject of my divorce. \"Ellie told me about her mum and how she left you. I have to say that was despicable. Did you have thoughts of revenge?\"\n\n\"The thought came to me, but first I had no idea where they were living; her parents wouldn't tell me either. Second I found out he was a Police Sergeant, so even if I had thoughts of getting some revenge I would have finished being arrested. Later...Well my anger had subsided. I read somewhere that the best revenge is a life lived well. My work has been profitable; most years my income is such that I can invest reasonable sums. Then of course my grandmother's legacy paid for the cottage. She also left me her investment portfolio. Ellie's step-father is still a sergeant and there is little chance of his being promoted. So in comparison you could say that my life is lived well and that could be my revenge.\n\n\"Ellis told me about his nasty remarks, and that could well be the reason.\"\n\n\"Possibly. I have been lucky and now it seems that I have hooked up with this super gorgeous woman whose presence thrills me.\"\n\n\"Well if we are talking thrilling shall we..?\"\n\n\"Oh yeah!\" \n\nAfter all the months when career pressures took their toll I was so relieved that we had arrived at this point. In my heart I knew that there were times when disappointment urged me to give up with Cate. Times when I was selfishly angry, only to be ashamed later. Cate was not in control of her work pattern as I was. When bookings presented themselves she had to fulfil them or get the reputation of being unreliable. I was in no doubt about my feelings for her, and her response indicated that she had the same depth of feeling as I. She had voiced the problem we faced, that of the disparate work patterns. Although I travelled a great deal there was a pattern to my travelling. I could tell you quite accurately where I would be a week from now or even three months from now. Cates' pattern was dictated by what bookings she would get either as Kat Lacey or with the Stela Swing Band. My character tended to the positive rather than negative side, yet even so I knew that relationships rarely survived with long absences. Finding the opportunities to be together in the immediate future was very important. However at this point in time i was fully occupied with planning my attack on the furniture business with my new ranges.\n\nOver the next few days the parcel carrier delivered quite frequently, bringing me the samples promised from the mills in Belgium and Northern France. With that ammunition I was able to start making appointments with my customers, who were eager to see the new ranges. There was always a problem as furniture manufacturers wanted an exclusive range to launch at the Furniture Show which took place in January. I needed to get the greatest exposure of my ranges to ensure my income for the next year. Their needs and mine were not coincidental. Over the years I had developed a plan. For the show I agreed to exclusivity. After the show all ranges were open to all manufactures to put in their ranges. Therefore my best customer got the pick. That design came out of the offer and the second best customer got their pick and so on. I got some moans, but at the end of the day most of my customers understood this was the only way I could arrange this. Having made my appointments I was off on my travels. I would be calling in Long Eaton for two weeks so I would be working from home. After that I was off, first to Yorkshire, then South Wales and later down to London. Cate knew that I would be coming to London and told me firmly that I would be staying at her flat. Bookings apart she would be there with me. I looked forward to that. \n\nCHAPTER ELEVEN\n\nJack\n\nThe new designs were going very well and by the time I had finished my travelling in South Wales I was assured that I would get at least ten designs in the show. There were many manufacturers of quality upholstery in the London area, but only a few that were worth my calling on. Although I hated taking my car to the metropolis I had little choice as the number and weight of my samples was too much to carry by hand. Cate had told me that I could use her parking space in the basement of her block and had alerted Paul giving him my car registration number. I was relieved when having arrived at the barrier it lifted. I let the car drift down the slope and was confronted by a huge man who waved me to the right and then left indicating where I should park. As I got out of the car this man mountain held the door. \"Mr. Weston?\" He enquired.\n\n\"Yes. And you will be Paul?\"\n\n\"Indeed Sir. Miss Lacey told me that you will be in and out every day. If you would park in this space whenever you return your car will be safe.\"\n\n\"Thank you, Paul\"\n\n\"No problem, Sir.\" He took a few steps and waited by the boot. \"Do you need help with your suitcase?\"\n\n\"That's alright. over the years of travelling I have got used to packing and with being economic with my clothes. So it's a relatively small case.\" I got my case out of the boot and he led me to the lift.\n\n\"You need floor five and it's apartment 'B'.\"\n\n\"Thanks, Paul.\" The lift stopped at the ground floor and Paul exited. Just as the doors were closing he put his hand over the leading edge and the doors stopped.\n\n\"Umm.\" He coughed. \"Miss Lacey is a very nice lady, Sir. I would be unhappy if she was messed around.\"\n\nI wondered what his definition of 'unhappy' was and how it would be demonstrated. \"Paul, Miss Lacey is a very nice lady and I also would be unhappy if she was messed around.\"\n\nThe grim visage softened and morphed into something that could be viewed as a smile. \"I am glad we see things the same way, Sir.\" He withdrew his hand and the doors closed.\n\nI pressed the button for floor five, noting that it was also the top floor. The lift rose quietly and smoothly betokening good service. It was little trouble to find apartment 'B'. There were just two apartments on floor five. The door to 'B' stood open and Cate was standing at the door with a great smile on her face. I dropped my case and took her into my arms, our lips met and stayed that way for some time. Eventually our lips were back in our own possession but only after a few encores, shorter than the first but nonetheless enjoyable. \"After that greeting I don't know if I should feed you, Jack or take you straight to bed.\" Cate was happily smiling, as she led me into her apartment.\n\n\"Can I help in making that decision?\" I asked.\n\n\"No I think not. Anyway I know what you would say. I'll do the wife thing welcoming her husband home after a hard day's work letting him kick off his shoes, loosen his tie and I'll make him a cup of tea.\"\n\n\"Ah the bliss of married life.\"\n\nCate giggled. \"Not the married life I experienced.\"\n\n\"Nor me.\"\n\n\"Perhaps we could do...\" Cate closed her mouth abruptly, embarrassed.\n\n\"Better? \"I suggested. \"It's ok. That's where my thoughts were going.\"\n\nCate was surprised. \"You're joking.\"\n\n\"No. I love you, Cate. I have believed that I was in love before, now I know what real love is, so why should it be a surprise that my thoughts were of marriage.\"\n\n\"Is this a proposal?\"\n\n\"No. Just regard it as a statement of intent that I intend to propose someday soon.\"\n\n\"How soon?\"\n\n\"Ah! That would be telling. It would not be a surprise if I answered that question. Anyway it all depends on your tea-making expertise.\"\n\nCate came up to me and wrapped her arms around my back. \"You're a bugger, Jack. But you're my bugger and I love you.\" She lifted her head and kissed me. \"Now I shall go and practice making tea for my very demanding man.\" She let me go and made her way to the kitchen. She had nearly left the room when she turned, smiling. \"And I hope you are going to be very demanding later on.\"\n\nI could hear the rattle of the kettle and cups being prepared. Cate peered around the door and told me to put my bag in the bedroom. \"Have a look around. Our bedroom is the first door down the passage and the bathroom is ensuite.\" The apartment was quite large and from its design and the shape of the windows I concluded it was built sometime in the twenties or early thirties. I didn't have to snoop as all the doors were open and I noticed three bedrooms, two with an ensuite bathroom and another, smaller bathroom at the end of the hallway. I suspected that it was designed when a single man or woman would have a manservant or maid. Cates' bedroom was not how I imagined. Most men would imagine a women's bedroom to be shades of pink, pale blue or any of the dusty colours, frilly decorations with knick-knacks crowding the table tops and shelves. Not so Cate. Her bedroom was almost Spartan. White predominated, walls, bed coverings, dresser and cupboards, all white almost institutional, apart from the cushions scattered on the bed, their colours of strong vibrant colours of red, blue, black and turquoise positively alive set against the dead of the white. Cate came in behind me. \"I know the decor doesn't have much imagination. I have been telling myself for years that I should get something done about it, but I seem to be away somewhere all the time and I'm only reminded when I get back.\" She opened a drawer in the chest. \"I've cleared this drawer for you and there is space in the wardrobe to hang your suits. The bathroom is through that door there.\" She pointed to the door in the corner of the bedroom. \"Get settled and the tea will be ready for you.\" She brushed past me as she was leaving.\n\nI grabbed her and pulled her to me. \"Come here lovely lady.\" I encircled her with my arms.\n\nShe looked up at me her eyes twinkling. \"Now I explained about my lady.\"\n\n\"I know. and I am going re-acquaint with her. I just wanted to hug and kiss you for now.\"\n\n\"That's always acceptable.\" She raised her lips to mine for a kiss. \"Are you going to undress me now or after you have your tea?\"\n\n\"How about we bring the tea in here and we'll undress each other?\"\n\nCates' eyes clouded with desire. \"Now that is a very good idea.\"\n\nAs I had done at my home, Cate made certain that I should regard her apartment as my home as well. I came and went as I wished and made my calls, some positive and some not so positive. I was intending to return to Hulland on the Thursday until Cate informed me that she was rehearsing with the band on Friday. \"Sometimes it's difficult to get all of us together, and to find somewhere we can rehearse. It's a last minute kind of thing but we can all get together on Friday and Steve has managed to get somewhere in Shepherds Bush. Would you like to come along?\"\n\nIt was a superfluous question as far as I was concerned. Of course I would. The venue turned out to be a Salvation Army hall. Parking as usual for anywhere in London was a nightmare, but I found a spot in a side street demanding much reversing and going forward with lock to lock manoeuvring. The caretaker of the hall let us in. He was quite a character of approximately eighty years of age wearing the remnants of a pin-striped suite, the trousers held up by a broad leather belt and the waistcoat over a striped granddad collar shirt open at the neck. He explained that the wiring had 'gorn funny' but the electrician had been in and 'it's all Sir Garnet now.' I had heard the expression before and looked it up. It referred to Sir Garnet Wolseley a General in Queen Victoria's reign. He was renowned for his attention to detail which enabled his forces in many actions in India, Africa and the Crimea to overcome opposition quickly with a minimum of casualties. This led to the phrase 'All Sir Garnet' meaning everything was all right. I was surprised and amused that it was still used.\n\nThe band were setting up and Cate introduced me to many of them as and when they had a moment. Steve Brackley arrived and I was introduced.\n\n\"Right, the man who knows everything about Swing.\" He jested as he shook my hand.\n\n\"You reckon? You actually play it so I think it's you who should answer the questions.\"\n\n\"Whatever. From what Kat says you introduced her to Swing and her voice is perfect for it. So thank you. Kat says you have a lot of original recordings from the thirties and forties.\"\n\n\"A few.\"\n\n\"Could you give us copies? We try to get an authentic sound, but without hearing the originals it's difficult.\"\n\n\"I can do that. I'll put them on a CD for you.\"\n\n\"Fantastic!\"\n\nOnce everyone was set up and tuned Kat became involved with Steve, leafing through reams of paper she had brought with her. Although they had decided on what they would play in Blackpool, they were rehearsing a couple of other numbers, just in case the BBC changed their mind. At first they played just a few bars as Steve and Kat tried out slightly different phrasing. Finally they were set, the girl on keyboards played a descending ripple and the Saxes and Trombones started with the melody. Kat didn't come in immediately but waited until the band had gone through the refrain. It was then that she came in with the opening line of the lyric.\n\nWhy do Robins sing in December\n\nLong before the spring time is due\n\nI was sitting on a chair at the back of the hall, as close to the centre as I could get, I was disturbed by the door creeping open. It was the caretaker and he was listening with a small smile on his face and tears running down his cheeks. When they finished the song, Kat and Steve went into a huddle with the lead saxophonist. I turned to the caretaker. \"You enjoyed that?\"\n\nHe nodded and wiped his eyes with his sleeve. \"Yes Guv. Took me right back, that did. My old Ma loved that song. She was always singing it as she was washing up at the scullery sink. I just got the picture in me mind. Gave me a bit of a turn, I can tell you. I didn't know anyone was playing that stuff now.\"\n\n\"Grab a chair. They will playing other titles, you'll probably remember them as well.\" \n\nWe sat companionably enjoying the music as it came. As this was rehearsal and not a performance the music would be halted often as Steve would ask for a different rendition of a passage trying for that elusive original sound. In between times my elderly companion would talk. It was his history in many ways evoked from the sound of his past. Something struck home, he had said that this music had helped morale when the world was in turmoil. \"All those men away from their families and everything they loved dearly. Didn't matter if they were English, Scottish, Irish, French, American even the Krauts listened to this music. These sounds brought them together.\" He stopped for a moment and then went on. \"You know many people hated the behaviour of the Yanks over here. Look at it differently though. They came over here from a place that had never been bombed, where the lights were always on, where you could get anything you wanted. They came here to blackout, rations and austerity. They saw the bomb sites and realized what War looked like. They came thinking that they would whop Hitler's arse in a few weeks and then go home to parades, medals and their grateful girls. Now they saw the reality that the fighting would be bloody and there was a good chance they would never go back to the U.S.A... They were young fit men, it was no wonder they tried to seduce anything in a skirt. After all, a man who reckons he's likely to die doesn't want to die without ever having a woman.\" Now that put a different slant on the bitterness of our troops whose women it was that the Yanks were seducing. \n\nMy old companion went on. \"The Yanks were quite generous. For us kids it was because they had plenty of Candy to give away. I was ten in forty-five but some of the younger kids had never tasted chocolate. The Yanks couldn't believe it, but as I said they had never lived through wholesale bombing of a civilian population\" He sat quietly for a while remembering a past that for most was history. Then he muttered quietly. \"It was this music though, the greatest gift that America had ever given the world.\" I would remember those words.\n\nI left early that afternoon in a futile attempt to avoid the traffic congestion that Friday afternoons inevitably creates on the M1 motorway. Cate had extracted a promise from me to return a week later for the weekend. ",
        "CHAPTER 12\n\nCate\n\nMy life had changed so dramatically and Jack was the catalyst. I had a new slant on my singing career and with him I had found the love that I had craved ever since I was a teenager. As I thought about it I was slowly coming to the conclusion that if the one was to flourish then the other had to be abandoned. I could not give myself one hundred percent to both. There was no contest. If I continued singing and all the travel that incurred, my relationship with Jack would be put under strain and I wasn't going to allow that to happen. This thing with the Stela Swing Band was an episode and like all episodes there would be an end to it. I decided that when that happened I would retire from singing completely and make my life with Jack.\n\nWe went up to Blackpool two days before the show. Much as I tried I couldn't get a ticket for Jack. They were reserved for relatives of the celebrity dancers and those who had applied for tickets months in advance and had been lucky in the draw.\n\nA programme assistant explained how we would fit in. Dave Arch and his musicians played for the actual dancing and exhibitions and took a break when the results were scrutinized. That's when we came on. Our performance was recorded and shown during the results show. It was panic as we set up and got everything in place as we didn't have too much time. However the staff at the BBC seemed to know what they were doing so it all happened. When the recording was shown it would appear seamless. We were given some rehearsal time. The dancers needed that time as well to choreograph their routine. I was very impressed by the couple, Anton Du Beke and Erin Boag. I was told by someone there that if you wanted a foxtrot exhibition then this was the couple who you chose.\n\nJack\n\nI did not usually tune in to 'Strictly Come Dancing'. My usual routine for a Saturday evening was listening to music and reading. Although Cate was performing her spot on the show would not be broadcast until Sunday evening. So I settled for my usual evening, being rudely interrupted by the phone at eleven p.m. It was Cate, bubbling with excitement for their spot and the dancing. She was about to tell me who had been eliminated from the show when suddenly she stopped. \"Oh! I can't tell you. It's a secret until Sunday evening.\" She went on to describe how it all went together, and that whilst their rendition of 'Why do Robins sing in December' would be the only recording broadcast, they had in fact performed three songs, the third being 'You do something to me' when Dave Arch and his band had jammed with them. Then she took breath. \"Now for the best news, Jack. The Tower wants to book us for a regular spot, three nights every month. They reckon that with Strictly, there will be an upsurge of people dancing and they want a competent band for people to dance to.\"\n\n\"Sounds great. Perhaps I can get there and we can dance together.\"\n\n\"I can't dance this stuff, Jack.\"\n\n\"Neither can I.\"\n\n\"I don't believe you. You can do everything.\"\n\n\"Good of you to recognise my talents, but that isn't one of them.\"\n\n\"I know of one that is very satisfactory.\"\n\n\"Possibly, but I do need help for that.\"\n\n\"I'm the helper and don't you forget it.\" She hesitated for a moment. \"Jack. I have four days free from Monday. Any chance I...\"\n\n\"Come. I'll pick you up at Derby station and I'll re-arrange my appointments. Just let me know what time you get to Derby.\"\n\n\"Brilliant! I'll call you with the times.\"\n\nI watched the programme when it was broadcast on the Sunday evening. It seems silly really as almost everyone knows that the result show is recorded on the Saturday evening, yet everyone involved goes to great lengths to support the fiction that the results are not known until the Sunday evening. I wasn't interested in what couples would be through to the next stage, I wanted to see Cate performing. I set my recorder up so that I would have a permanent record. Of course I had watched the rehearsals; yet the performance with Cate wearing a lovely cream full length dress was something else. If I had any doubts why she had segued from Rock Chick to an accomplished balladeer that programme was all the proof that anyone would need. Of course some would say that I was biased. I wouldn't argue, of course I am biased.\n\nI managed to clear Monday, Wednesday and Thursday. The Tuesday I had one appointment I couldn't get out of. Luckily it was in Long Eaton, so it would only take a morning to complete. It always surprised me that some celebrities could walk through a crowded place without being recognized. Cate had that ability. The glamorous woman I had seen on the TV just the day before was unrecognizable in jeans, sweat-shirt and a brown leather jacket amongst the bustle of a busy train station. That is until she saw me waiting, then her smile flashed and she ran to me. She dropped her hold-all, jumped into my arms and immediately our mouths and tongues connected. She talked continuously on the journey back to Hulland recounting the show and snippets of gossip from and about the celebrities and the professional dancers until I drove over the cattle grid, then there was silence. I looked over and she wore a small peaceful smile and a visage of peace and contentment. Once inside she seemed to relax completely. \"How does it happen, Jack? The first time I came here I had this feeling of peace and welcome. It happens every time.\"\n\n\"Because you are welcome. Anytime and for as long as you want.\"\n\nShe nodded. \"Yes, I get that feeling. It seems to enfold me as soon as I enter. It happened the first time I came here, just walking in I could feel the house saying, 'hello, I have been waiting for you'.\" Cate grinned slyly. \"I decided then that I would have to seduce you, so that I could get visiting rights anytime.\"\n\n\"I see. So it's not me it's the house you want.\"\n\n\"Now what gave you that impression?\" She pulled her sweat shirt over her head.\"I am going for a shower.\" Cate then flipped the waist button on her jeans as she climbed the stair. \"If someone would like to help me, like washing my back...and my front...and anything else he wishes to, I would be very grateful.\" She stopped, pulled off the jeans and threw them at me. \"Coming?\"\n\n\"Try and stop me.\" I kicked off my loafers and started up the stair. \n\nThe action started in the shower and when our fingers were wrinkled from the water, we transferred to the bed where the action started all over again.\n\nLater after we had leisurely taken a lunch, we relaxed downstairs. With music playing we watched the sky darken as night encroached. I could feel that Cate had something on her mind and waited patiently till she felt it needed airing. \"I have been thinking, Jack. My bookings for Rock are few and far between now. The band has quite a few bookings for late November and December but the new year apart from one booking in Birmingham and the Tower Ballroom, there is nothing else on the horizon. There will be bookings I know, but they will be for the Swing band. So I have decided not to accept any bookings but with the Swing Band. So in many ways I shall be semi-retired.\" She stopped and took a deep breath, more like a gulp. \"Do you think...\"\n\n\"Yes.\"\n\n\"You don't know what I was going to ask?\"\n\n\"I thought, perhaps, that you wanted to come and spend more time here.\"\n\n\"Well that was the gist of it. You don't mind?\"\n\n\"Not at all. In fact I positively encourage the idea. You should know by now that you are welcome, whether I am here or not.\" I had picked up on the Birmingham booking. \"This booking in Birmingham. Where is it?\"\n\n\"It's the Hippodrome, just the one night, but it's a good venue.\"\n\n\"Any possibility of my getting a ticket?\"\n\n\"Of course. I was going to suggest it anyway. I'll get you a comp.\"\n\nThe four days that week were good. We seemed to move together around the cottage, preparing meals together, talking, listening to music and later being very much in sync when we went to bed. \n\nI was not one to make too much of Christmas apart from spending too much on presents for Ellen and now Cate. I had always believed that many of the Christmas shows were pre-recorded with celebrities offering fulsome Christmas greetings to all and sundry long before the actual day. However I found that entertainers such as Cate and the band were so busy leading up to that time of year that the actual day came in a blur. Our greetings on Christmas day was made by telephone, with a very tired Cate in her flat and me at the cottage describing to her the countryside crisp with frost. We agreed that we would celebrate the festival early in January. New Years Eve was the same. Revellers, revelled, Cate and the band worked! We got together early in the New Year and just enjoyed being together, relaxing and talking.\n\nI was very busy in January as the Furniture Show loomed; making sure that my customers had the fabrics they had ordered and that they also had swatches of the new fabrics. With the experience of past years I had booked a hotel room close to the National Exhibition Centre well in advance. The four days of the Show was hectic. I wandered around the displays keeping an eye out for any designs that could become best-sellers and fending off manufacturers who wanted to know why I hadn't offered them designs that their competitors were showing. I was very interested in two Turkish gentlemen who were visiting the furniture manufacturers with samples of their production. One of my good customers' spoke to me about them, asking why I wasn't representing them. It turned out that these gentlemen were from the Mill that had missed the appointment with me when I was in Turkey. It was with some glee that I passed on the advice from the Turkish Commercial Bureau about the unreliability of this Mill.\n\nNo sooner had the Furniture Show finished that I had just a few days to prepare for Cates' show at the Hippodrome. Ellen was not returning to Durham until the last days of January so I asked Cate if she could get a ticket for Ellen as well. She was delighted that Ellen would like to come and promised the comp. Tickets would be in the post that day. I booked a room at the hotel where Cate was staying for Ellen, as Cate had told me without argument that I was staying in her room. With that settled I had to go shopping in Derby.\n\nEllen and I were surprised when we arrived at the Hippodrome. Our comp tickets gave us a front row seat next to the central aisle. We were literally just five feet from the stage! I was very happy to see the auditorium filling up. The Hippodrome can seat just under two thousand and to my eyes it looked as if would be a full house. I had to admit my stomach was rolling over hoping that everything would go to plan. Cate had given me a run-down of the show and I knew that it could be a really good evening. Close to eight o' clock the audience chatter softened and died away completely as the lights dimmed. Then the first strains of 'Moonlight Serenade' filled the air and the curtains drew back to reveal the Stela Swing Band. Many of the audience clapped to welcome them. As the last few notes of the first refrain were heard Steve lifted the radio mike. \"Ladies and Gentlemen. Please welcome Kat Lacey!\" Cate came on from the right, wearing a full skirted long dress in pale green. The audience clapped again over the first line of the song but died quickly as Cate sang the first line.\n\nThe programme was varied, it wasn't just Glenn Miller, nor was it all swing. The band had been augmented with extra trumpets and trombones, using mutes to give the softer sound that Miller sought. After the first three numbers Kat left the stage and the band played Artie Shaw's 'Tangerine' and then 'Pennsylvania 65000'. Kat came back in Rock mood singing 'Chain Reaction' and a superb rendition of Hazel O'Connors 'Will you', complete with the sax solo which brought the house down. Kat paid tribute to Sally Watts, who played the tenor sax and the audience gave her prolonged applause. Then she went into the swing version of 'I Follow' which personally I believed to be better than the recorded version. \n\nThe last segment of the show started with the band playing a fantastic version of 'Perfidia' and then Kat came back with 'I know why and so do you'. Kat had always worked the audience and this time was little different, apart from introducing the members of the band. She then went on. \"Many music fans wondered why I have changed my style to Swing. Well I met this bloke. He's here, but I won't point him out. Girls! You know how embarrassed they get. Well this bloke was into swing and once he had played some of his music for me, I was in it too. Then as I got to know him, I guess I kind of liked him. Actually it's far more than like. I think this one is a keeper.\" \n\nI had intended to propose to Cate once we were back in the hotel but this seemed the perfect time for me. I took the little box out of my pocket and got up, walking the short distance to the apron. Cate noticed me and watched warily. My stomach was rolling over and over, even so I opened the box and proffered it to Cate. Her eyes were wide and glistening as she came over to where I stood and knelt. She looked at me and with the biggest smile said. \"Is this what I think it is?\"\n\n\"Yes.\"\n\nShe took the ring and slipped onto her finger. \"Yes. Definitely.\" And blew me a kiss. She got up and went back to centre stage. She held her hand up and cried. \"Hey, look Girls. I've just got engaged.\" The auditorium erupted and I sat down quickly blushing profusely..\n\nEllen grabbed my arm. \"Good move, Dad.\"\n\nCate went to Steve and whispered, he then sent a message to the band and they moved their scores around. When they were ready Steve tapped the time and they went into the opening of 'Night and Day'.\n\nLike the beat beat beat of the tom-tom\n\nWhen the jungle shadows fall\n\nLike the tick tick tock of the stately clock\n\nAs it stands against the wall\n\nAmidst the cheers of the audience , Cate walked over to where I was sitting and sang,\n\n'Night and day, you are the one' \n\n'Only you beneath the moon and under the Sun.'\n\nA week before we married we had driven up to Frinton so that I could meet her parents. When her father, \"call me Ed,\" found out that I had no connection with the music business he seemed pleased. His comment on the music business was succinct, \"never trusted any of those buggers.\" As Cate had forecast her mum, Enid had prepared a meal, Steak and Kidney pie! It was delicious.\n\nCate lived in Chelsea and we married at the Chelsea registry office, which was the scene for many celebrity marriages. It was no surprise that when we came out of the registry office there were Press. I doubted they were there especially for us, I think it was a happy hunting ground for them. I had never been in the situation of having flashes firing at me from many cameras and to me it was daunting. Cate had no problem fending off the personal questions that the press seemingly thought was their right to know. One reporter wanted to know if Rick, her first husband knew that she was getting married again. Cate replied curtly. \"Why should he?\" Another asked her where she was going to live. \"Somewhere in the country.\" She said abruptly\n\n\"Whereabouts.\"\n\n\"Somewhere.\" With Cates' terse replies that gave little information sufficient for an article the questions dried up and we got into the taxi which was waiting for us and we were driven quickly to a Italian restaurant where the reception was being held. We entered to the strains of 'Love is the Sweetest Thing' played by the Stela Swing Band in the style of Al Bowlly. I asked Steve later if he was an archaeologist.\n\n\"No.\" He answered bemused. \"What makes you think that?\"\n\n\"That Al Bowlly number. You must have dug deep to get that one.\"\n\nSteve laughed. \"Ah. I was thinking that Kat may like to make a follow-up C.D. I thought that 'Love is the Sweetest Thing' would be a good number for her.\"\n\nI thought about that and I made a suggestion. \"How about 'A Nightingale sang in Berkeley Square' and 'A Foggy day In London Town'.\"\n\nHe thought for a moment and understood my thinking. \"I like that. Make it British-themed throughout. Possibly some of the Vera Lynn classics as well.\"\n\n\"I think that would work.\"\n\nHe nodded. \"Perhaps you could talk to Kat about it. She will listen to you.\"\n\n\"Later. Let us go on Honeymoon first.\"\n\nEllie had stood as my witness and she was with us as we arrived at the Italian restaurant. During the meal she revealed that she had told her mother that I was getting married again. Roger, Ellen's step-father maliciously suggested that at my age I had found some desperate granny to look after me. Ellie then related the conversation telling Roger that she didn't think that Caitlin could be described that way.\n\n\"Caitlin?\" He had asked. \"Not many women called that. Is she Irish by any chance?\"\n\n\"No.\" Replied Ellen. \"Amongst her friends and family she is called Cate but many people know her as Kat.\"\n\n\"Kat!\" He was surprised.\n\n\"Yeah.\" Ellen had kept the best bit until last. \"You may have heard of her, Kat Lacey.\" Ellie took great delight in relating how Roger, who had always been dismissive of me, sat open-mouthed upon hearing who I was marrying.\n\n\"Kat Lacey? The singer?\"\n\n\"Yeah!\" Ellen had told him with relish. Cate and I laughed as Ellie went on. \"Dad I have never seen Roger lost for words, and the look on his face was priceless.\"\n\nCate had an idea. \"Perhaps we should send them a copy of our wedding photo?\"\n\n\"That.\" I said laughing, \"would be evil, wouldn't you say?\"\n\n\"Just deserts.\" Opined Ellie.\n\nThe End."
    ],
    "authorname": "Kezza67",
    "tags": [
        "romance",
        "glenn miller",
        "swing"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-songbird"
}