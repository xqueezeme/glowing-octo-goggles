{
    "title": "Wealth Pt. 02",
    "pages": [
        "Author's Note: Any and all persons engaging in any sexual activity are at least eighteen years of age.\n\nAuthor's Note: Wealth 01 is in the 'Lesbian Sex' category. Most would find it helpful to read Wealth 01 before reading Wealth 02.\n\n*****\n\nChapter 11\n\n\"Hey Daddy,\" Toni sang out as she approached Barry's office.\n\n\"Yeah?\" Barry looked up as Toni and Anita stood in the doorway of his home office.\n\n\"We're like off to see the Green Queen; anything you like want me to tell her?\" Toni asked.\n\nStacy pursed her lips as she examined a smudge on one of her expensive deck shoes. She did not care for Barry's daughter and thought that the little Mexican charity case Toni drug around with her was probably nothing but a user.\n\n\"Hmm? Oh, oh, yeah, tell her and Mister Save the Universe that I have seen the error of my ways and none of the cars I sell run on fossil fuels any longer,\" Barry smiled and got to his feet, rolling up the chart of the Gulf of Mexico.\n\nToni stood, waiting for the punch line.\n\n\"Nope; they all run on little puppy dogs,\" Barry concluded and gave Toni a kiss, hesitated for a split second, then gave Anita a chaste kiss as well.\n\n\"Whatever,\" Toni said, rolling her eyes.\n\n\"Bye, Mr. Barry, bye Miss Stacy,\" Anita said, following Toni, who was already dashing out the front door.\n\nMrs. Alvarez smiled and waved as Anita waved to her.\n\nAnita got into the car and turned to say something to Toni but saw that Toni was already slipping into the depression that sometimes overwhelmed her when she visited her mother.\n\n\"It'll be all right,\" Anita said quietly and touched Toni's hand.\n\n\"I like don't know what I'd do without you,\" Toni said flatly.\n\n\"Probably have to take your medication,\" Anita almost said but bit the words back.\n\nAnita had heard Alexis, Susan, and Jenee say that Toni needed to be on medication. Only Caitlin seemed to know that Toni Delacroix had actually been prescribed medication by a doctor.\n\nBut after Toni's rage-filled attack on Anita, screaming and accusing Anita of wanting Miss Terry Dayton's affections, Anita was stunned when, the very next school day, Toni greeted her with a quick kiss and hug, as if nothing had ever happened.\n\n\"Told you,\" Susan said. \"Bitch is psycho.\"\n\n\"Susan!\" Alexis chided her friend.\n\nTo Anita, Alexis smiled sympathetically.\n\n\"She gets happy, she gets sad then she gets happy again,\" Alexis said.\n\n\"Sad! She goes fucking nuts,\" Jenee corrected.\n\n\"Hates her meds,\" Caitlin had said. \"Makes her feel stupid.\"\n\n\"Feel stupid?\" Susan hooted. \"She is...\"\n\n\"Shut up, Susan,\" Caitlin snapped.\n\nThey all shut up when Toni returned from an impromptu chat with Sister Lucy.\n\nNow, almost two months after that tirade, Anita and Toni had gone through a few blow-ups, a few tears, but nothing like that one screaming fit.\n\nTheir business was flourishing; quite often the soaps were being plucked out of their hands as they attempted to put it onto the shelves at T. Dayton's Salon.\n\n\"Ooh, is that the Raw Milk and Honey? Don't even bother taking it out of the box; I'll take them all,\" Daphne Baggett demanded.\n\n\"Pumpkin and Spice? Give me three bars of that,\" another customer demanded. \"No, no, give me five; my sister's coming to town and I know she'll steal a couple of them.\"\n\nAnita's first official purchase with her income from A And A Soaps had been a cell phone. That was the day she learned that there was a difference between advertisement and information\n\n\"I'm getting the LG; that one they keep showing on TV,\" Anita said excitedly as Toni drove them to the PC Nation\n\nStore in DeGarde.\n\n\"Why?\" Toni asked.\n\n\"Because it gets four Gs and you can...\" Anita parroted the commercial.\n\n\"What's a G?\" Toni asked as they parked.\n\n\"It's a, it's a, you need it to do downloads and...\" Anita had stammered.\n\n\"Baby, we like don't even get four Gs out here; three Gs is like the best you're going to do,\" Toni smiled. \"Why not just get one like I got?\"\n\n\"Because the LG is free,\" Anita said.\n\n\"Uh huh, if you sign up for a two year contract with AT&T, which piggy-backs off of PC Nation's towers here,\" Toni said as she opened the door to the store. \"You'll just be paying an extra forty dollars more a month for two years; do the math.\"\n\n\"That's nine hundred and sixty dollars!\" Anita said.\n\n\"Yep; like on top of PC Nation's forty nine a month too. Now, this one? Two ninety nine and forty nine dollar month to month, no contract,\" Toni said, picking up a sleek phone.\n\n\"And the new screen's a lot bigger than the old one,\" a sales person offered.\n\nToni did show Anita the LG that was advertised. When held up against the phone that Toni had, the one that Toni showed to her, the two were nearly identical.\n\n\"Take it,\" Anita nodded to the girl.\n\nIn the car, Toni screamed with laughter when she was the very first person Anita called. All the way to Anita's trailer, they talked with each other on their cell phones, as if they were not sitting right next to each other.\n\nWhen Anita showed Marco her new phone, Marco sneered.\n\n\"You threw away two hundred and ninety nine dollars? On that? The LG is free,\" he laughed derisively.\n\n\"Uh huh, free, with a two year contract with is eighty nine dollars a month. and if you cancel, you pay for the phone, oh, which is, by the way, four hundred bucks, smart guy,\" Anita sneered. \"Do the math.\"\n\nNow, Anita pulled her cell phone out and typed out a message.\n\n'ILY 1000X' and hit 'Send.'\n\nToni looked down briefly as her cell phone chimed, then smiled.\n\n\"And I like love you a thousand times a thousand,\" she responded and turned onto the dirt road that would lead them to her mother's home.\n\nAt the Delacroix house, Stacy waited while Barry put the coordinates into his GPS system. She did a quick check of her makeup while she waited. Finally, he nodded, indicating\n\nthat he was ready.\n\n\"Now, is that little red headed freak really going sailing with us?\" Stacy snapped, letting her anger bubble out as Barry closed the door to his office.\n\n\"Little... Yes, Caitlin's really going sailing with us,\" Barry said easily as he waved goodbye to Miss Alvarez.\n\n\"For Heaven's Sake, why?\" Stacy snapped as she decided it was still too warm for her windbreaker.\n\n\"Hang on to that; it might get cold out there,\" Barry cautioned.\n\n\"Answer me,\" Stacy demanded.\n\n\"What?\" Barry asked as he started the car.\n\n\"Why, is a nineteen year old bony red headed slut going sailing with us,\" Stacy said through gritted teeth.\n\n\"Oh,\" Barry smiled, actually enjoying Stacy's discomfort.\n\nStacy had finally admitted that she would like to take their relationship up to the next level that she did possibly see Barry as Husband number three. She had been embarrassed and angered when Barry asked which husband she was forgetting, one, two or three?\n\nHe had been completely honest with her; he did not see her as Wife number Two, just did not see himself ever getting married again. If she stayed, she would stay with that understanding. If she left, he would miss her, but he would wish her well.\n\nSince that day Stacy had been doing her best to fuck him into changing his mind. It galled her, and crushed her to think that she had wasted all that time on Barry Delacroix, and angered her to no end that she would have nothing to show for her time and investment into Barry Delacroix.\n\n\"Well?\" Stacy shrilled.\n\n\"Well, she was there when Henry and I were talking about taking the schooner out; I invited Dr. Wilson along since he was standing there; he brought his Lamborghini in for an oil change and she said she wanted to go,\" Barry calmly said, turning onto the road that would take them to the Jazz Beach marina. \n\n\"What was I supposed to do; tell her 'no'?\" Barry asked, accelerating.\n\n\"Yes!\" Stacy shrilled. \"That's exactly what you should have told her! And what's the little bitch doing hanging around your showroom for anyway?\"\n\nHe said nothing, simply smiled at her, which infuriated her into a stony silence.\n\nBarry smiled as he saw Caitlin's small Saturn just ahead of them.\n\nHe whipped around the small car, horn bleating, then laughed as he could see Caitlin' sticking her tongue out at them.\n\nStacy glared white hot hatred at the interloper when Caitlin pulled up and parked next to them at the marina.\n\n\"Hi Barry,\" Caitlin shrilled when Barry got out of the car. \"Hi Miss Stacy.\"\n\n\"Hey,\" Barry responded.\n\n\"Mr. Henry says it's slip number forty two,\" Caitlin informed Stacy.\n\n\"I have been on the boat before,\" Stacy spat at the girl.\n\nIf Stacy's anger affected Caitlin in any way, the red head did not let it show, just grabbed a bag from her car, locked the car, and skipped ahead.\n\n\"Next one,\" Barry called out before Caitlin dashed down a wooden walkway.\n\n\"Oh, okay, thanks,\" Caitlin cheerfully called back and raced ahead.\n\n\"And that's what a bony red headed slut is doing going sailing with us,\" Barry wanted to tell Stacy. \"She's happy, excited to be going sailing, instead of acting like it's a chore, and having to dress up like she's going on some kind of photo shoots.\"\n\n\"That?\" Caitlin gasped when she spotted the two masted boat. \"That's your boat?\"\n\n\"Yeah, got the slip fees and the insurance to prove it,\" Barry smiled as Caitlin gawked at the Pretty Antoinette.\n\n\"I changed my mind,\" Caitlin said to Barry as she scrambled onto the boat.\n\n\"Oh yeah?\" Barry asked as he unlocked the cabin.\n\n\"Yeah, I don't want that car no more,\" Caitlin said.\n\n\"Oh, good thing; you weren't getting that car anyway,\" Barry smiled.\n\n\"No, I want this boat,\" Caitlin said. \"Now, show me my new boat.\"\n\n\"My boyfriend, all right?\" Stacy did scream at the girl when Caitlin clutched onto Barry's arm. \"Get your fucking hands off him!\"\n\n\" Stacy!\" Barry barked at her.\n\n\" Fuck you; I'm going home,\" Stacy spat, whirling and climbing back onto the wooden walkway.\n\n\"Long walk home,\" Barry spat.\n\n\"Keys, now,\" Stacy snarled, hand extended.\n\n\"Got two choices,\" Barry snapped back. \"You can get on this boat or you can go wait in the office.\"\n\nStacy whirled on her heel and stomped off to the Marina's Office.\n\nBarry showed Caitlin the small galley, the two states rooms and the small bunk room underneath the cockpit of the boat.\n\n\"Oh, that is so cute!\" Caitlin shrilled.\n\nShe reached into her bag and grabbed a tube of sun block. She liberally covered herself, making sure to get ears, neck and shoulders.\n\n\"Get my back?\" Caitlin cooed, batting her eyes at him as she raised the hem of her pink tee shirt.\n\nShe pulled her long carrot orange hair out of the way, still smiling over her shoulder at him. He smirked; it was blatantly obvious that Caitlin was just having him apply the lotion so that he could see that she wore no bra underneath the thin pink tee shirt, that her small breasts were bouncing freely.\n\n\"Uh huh,\" he smiled but did smear a good amount of sun block on the freckled back.\n\n\" Ahoy there,\" Henry called out.\n\n\"Hi, welcome to the Pretty Antoinette,\" Caitlin said, immediately assuming the role of hostess. \"We have life jackets right there. I have sun block in case you need it and we have...\"\n\n\"Honey, we've been on the boat before,\" Shirley St. Martin, Henry's wife said, patting the girl on the arm.\n\n\"Oh,\" Caitlin said, feeling slightly foolish.\n\n\"But I don't think we've met; I'm Shirley St. Martin,\" the older woman smiled warmly.\n\n\"Oh, hi! I'm Caitlin Weinstein,\" Caitlin said, shaking the woman's hand.\n\n\"Are you one of Toni's friends?\" Shirley asked. \"Barry, is Toni joining us?\"\n\n\"No, well, yeah, I am one of Toni's friends, but no, Toni's not here. I'm...\" Caitlin said.\n\n\"She's...\" Barry said, coming out of the galley.\n\n\"...Barry's next wife,\" Caitlin said with all the confidence of a nineteen year old girl.\n\n\"What? Well, good, it's about time someone managed to land this boy,\" Shirley laughed and greeted Barry with a kiss.\n\n\"What?\" Stacy yelped.\n\nIt had taken Stacy only a few minutes in the dank, fishy smelling and unbearably warm office to realize just how foolish she was being. Leaving her man alone with a nineteen year old girl that had made absolutely no secret of the fact that she was very attracted to her man was romantic suicide.\n\nStacy had stomped her way back to the Pretty Antoinette, prepared to eat crow.\n\n\"Hi, Miss Stacy,\" Caitlin said calmly. \"Life jackets are...\"\n\n\"I know where the life jackets are,\" Stacy yelled, made her way to the front states room and slid the door shut with a bang.\n\n\"Oh,\" Caitlin said, all the fun out of being a hostess wearing thin.\n\n\"But Honey, has Barry showed you where he keeps the Bloody Mary mix?\" Shirley asked graciously.\n\n\"Well, yes he has!\" Caitlin said happily, bounding into the galley.\n\n\"Ahoy there,\" Dr. William Wilson said.\n\n\"Ahoy, welcome to the Pretty Antoinette, hope you brought a windbreaker; it can get cold out there on the open water,\" Caitlin said, bounding into the role of hostess. \"We have life jackets right here and...\"\n\n\"Bloody Marys if you're interested,\" Shirley said.\n\n\"Hey Cher,\" Milt Duhon smiled as he approached the boat.\n\n\"Hey! I know you!\" Caitlin squealed.\n\nShe looked right past Milt Duhon at Chelsea Guidry, Channel 12 news reporter and Milt Duhon's girlfriend. \"You're Chelsea Guidry! You're the reporter asked that really cute cop if he was single!\" Caitlin squealed.\n\n\"Oh my God!\" Chelsea laughed an embarrassed laugh. \"That was like over a year ago!\"\n\n\"Cute as he was?\" Caitlin said. \"Girl! I would have asked him the same thing!\"\n\n\"And I'm...\" Milt Duhon said.\n\n\"Yeah, yeah, you're the reason my Momma keeps messing up her diet,\" Caitlin said dismissively. \"You're that chef guy.\"\n\nHenry couldn't help but laugh at Milt's stunned expression. After a moment, the local celebrity shrugged and smiled as Caitlin showed them the life jackets, the sun block she'd brought, and cautioned them about being exposed too long to the sun's harmful rays.\n\n\"Anyone else, Honey?\" Caitlin called out to Barry as he was unwrapping the tarp from the sails.\n\n\"When I become 'Honey'?\" Barry asked.\n\n\"Two more; oops, see them,\" Milt said and waved to two blonde girls that were dressed in bikinis that were barely more than postage stamps.\n\n\"Hi, welcome to the Pretty Antoinette,\" Caitlin grumbled to the two interns from Channel 12 as they boarded the sailboat.\n\n\"Didn't show them where the life jackets are,\" Henry commented.\n\n\"Hope they fall overboard,\" Caitlin grumbled to him.\n\n\"Caitlin Sweetie, Barry have any lemons?\" Shirley asked.\n\n\"Oh, yes ma'am,\" Caitlin said brightly. \"Right here.\"\n\n\"Now, help me make some spritzers?\" Shirley asked.\n\nOutside of Ed and Darlene's rusted shack in Jack's Creek, Anita tried to avoid breathing through her nose as Ed Byrd, Darlene's boyfriend, prattled on and on about the evil King Sanitation, whose toxic dump site was less than five miles, away from them. The stench of his unwashed body was overwhelming. Unfortunately, as Anita tried to move away from him, Ed Byrd moved closer to her.\n\n\"Reduce, recycle, reuse,\" Ed intoned. \"Do they do any of that?\"\n\n\"I don't know,\" Anita said wearily.\n\n\"And like, I don't care,\" Toni snapped, earning herself a glare from her mother.\n\n\"Well you better care!\" Ed said, really warming up to his topic.\n\n\"Hey, Ed, we're like going now, okay, like great to see you,\" Toni said, grabbing Anita's hand.\n\n\"But you just got here; y'all don't want no lunch?\" Darlene whined.\n\n\"Is it like cooked?\" Toni retorted.\n\n\" And what kind of question is that?\" Darlene asked, perturbed.\n\n\"Like a normal one,\" Toni said.\n\nin the car, Anita let out her breath.\n\n\"Hungry?\" Toni asked.\n\n\"Good God no!\" Anita complained. \"How can you even think of eating? Their smell was...\"\n\n\"Get used to it,\" Toni said flatly, pulling into Cowboy's BBQ parking lot. \"Ever eaten here?\"\n\n\"No,\" Anita admitted.\n\n\"Baby back ribs are the best,\" Toni said, getting out of the car.\n\n\"Better than Back Yard's?\" Anita said.\n\n\"Yeah, they do a wet rub here,\" Toni said, opening the door of the dilapidated building.\n\nThe hostess pointed to the restrooms and Toni and Anita used the facilities.\n\n\"I love your hair back like that,\" Toni said, playfully tugging on Anita's pony-tail.\n\n\"Yeah?\" Anita asked, looking at herself in the mirror.\n\n\"Yeah, shows off your pretty face,\" Toni said.\n\n\"Toni, my face's not pretty,\" Anita said, looking at herself, but not really seeing herself.\n\nAnita did not see that using better quality soap and not using large amounts of bargain brand cosmetics had cleared up her skin. Anita did not see that eating better, getting more exercise, and just generally being happier had brought a healthy glow to her.\n\nShe playfully splashed a little water on Toni.\n\n\"Bitch!\" Toni laughed and prepared to return the favor.\n\nAn extremely obese woman waddled in, ending their horse play.\n\nThe hostess showed Toni and Anita to a booth and nodded when the girls ordered unsweet iced tea.\n\n\"And see, they got like sweet, tangy, spicy, oh, and here's the one I like always get,\" Toni said, pulling out the 'Sweet Heat' bottle of sauce.\n\n\"This on one or two checks?\" a bored looking waitress asked.\n\n\"One,\" Toni said. \"I want like a half rack of baby back ribs.\"\n\n\"Sides?\" the girl asked.\n\n\"Fries, and um, y'all still got them like fried jalapenos?\" Toni asked.\n\n\"Yes ma'am, you?\" the waitress asked Anita.\n\n\"Same,\" Anita decided.\n\nOn the Pretty Antoinette, Caitlin pulled Sierra, one of the interns into the galley, out of the sun, and applied a cool compress to the girl's beet red face.\n\n\"Sweetheart, you really should have put some sun block on,\" Caitlin crooned to the slightly older girl.\n\n\"But I NEVER burn,\" Sierra whined.\n\n\"Honey, we're out on the open water, there's no protection out here; it bounces off the water too,\" Caitlin said.\n\nShe stuck her head out the boat's cabin.\n\n\"Honey? We got a first aid kit?\" Caitlin called out.\n\n\"Under the sink and quit calling me 'Honey',\" Barry called back.\n\n\"Call you whatever I want to,\" Caitlin called back, smiling widely as Shirley laughed out loud at her cheekiness.\n\nCaitlin found the sunburn spray, made Sierra close her eyes and liberally sprayed her.\n\n\"Here, drink this; no, no more alcohol for you,\" Caitlin ordered, pressing a glass of 7-Up into the girl's hand.\n\n\"\"Cathy, come see,\" Caitlin ordered, sticking her head out the galley.\n\n\"Whew,\" Cathy, the other intern complained as she stepped into the cooler interior of the sailboat.\n\n\"Okay, let's see, okay, you're not as bad as Sierra, but you're still getting pretty burnt out there,\" Caitlin fussed and also sprayed Cathy with the spray.\n\n\"Barry, she's a keeper,\" Shirley commented.\n\nStacy felt the bile rise up in her throat and she glared at the gray haired woman.\n\n\"She's a child,\" Stacy snapped.\n\nA moment later, Caitlin came back out, followed by two girls that were now covered by the miniscule wraps they'd brought with them\n\n\"We're going to need some more of that sunburn spray; used almost the whole thing on them,\" Caitlin said, playfully nudging Barry away from the tiller. \"My turn; how you do this thing?\"\n\nOutside of the restaurant, Anita laughed as Toni let out a huge belch.\n\n\"Thank you for lunch and thank you for doing that before you got in the car,\" she laughed.\n\n\"Welcome,\" Toni smiled.\n\n\"Now, you like want to go home or...\" Toni asked, trailing a finger up the inside of Anita's shorts.\n\n\"Or,\" Anita admitted.\n\n\"Good,\" Toni smiled at her, then started the car.\n\nMiss Alvarez greeted the two girls when they came into the house and asked if Miss Anita was staying for dinner.\n\n\"She's like spending the night,\" Toni said.\n\n\"I am?\" Anita playfully teased as they closed the door to Toni's bedroom.\n\n\"Yes,\" Toni said and kissed Anita.\n\nShe softly pinned Anita against the door and pressed herself against Anita.",
        "\"Like not letting you go, either,\" she whispered and thrust her tongue into Anita's mouth.\n\n\"Going to have to; I got to pee,\" Anita smiled as she pushed against Toni.\n\n\"Oh, oh, come on!\" Toni enthused, pulling Anita toward the bathroom. \"Like there's this thing I been like really wanting to try!\"\n\n\"Toni, I got to like really pee here,\" Anita whined.\n\n\"Wait,\" Toni ordered, pushing Anita's shorts down her legs.\n\nShe pushed Anita onto the commode and knelt down on the tile floor.\n\n\"Toni, what are you...\" Anita hissed.\n\nToni put her hand on Anita's crotch and began slowly rubbing up and down Anita's hairless mound\n\n\"Damn it, Toni, I really got...\" Anita hissed.\n\n\"Wait, hold it,\" Toni ordered.\n\n\"Toni, please let me...\" Anita whined as Toni's fingers dipped into her pussy.\n\nToni located Anita's fat clitoris and began stroking it like it was a small penis.\n\n\"Oh shit, Toni, please don't,\" Anita whined, eyes clamped shut.\n\n\"You like whine too much,\" Toni teased.\n\nShe pinched down on the nub and Anita gasped and shuddered.\n\n\"Now!\" Toni ordered and Anita gasped as she let loose with a hot stream of urine.\n\n\"Was that like wild?\" Toni asked as Anita sat, trying to catch her breath after such an intense orgasm.\n\n\"Bitch,\" Anita said weakly as Toni washed her hands.\n\n\"Uh huh, and you like love it,\" Toni said.\n\nOn the Pretty Antoinette, Caitlin hopped around, helping Barry tie the ship to the dock, helped the passengers disembark and thanked each of their guests for coming.\n\n\"Thank you; we really enjoyed being on your boat,\" Cathy said, hugging Caitlin.\n\nBarry smiled; it was his boat.\n\n\"Well, the next time we go out, we'll have to invite you,\" Caitlin said.\n\nShe waggled a finger at the still bright red Sierra.\n\n\"But next time, you better have sun block, you hear?\" Caitlin said.\n\n\"It's not your boat!\" Stacy snarled at Caitlin. \n\nCaitlin ignored Stacy which angered the woman even more; the girl helped Barry gather up the garbage and dropped the lemon wedges into the water and separating the recyclable from the non-recyclable items.\n\n\"Honey, we're having our annual Cider Press, not this Saturday but next, the first one in November,\" Shirley said as Caitlin, Barry, and a fuming Stacy finally joined them on the wooden walkway of the marina.\n\nStacy wanted to scream, wanted to hit Shirley St. Martin. For the past three years, she had been kissing the woman's wrinkled old ass, hoping for an invitation to any of the St. Martins' activities. The opportunity to meet potential customers at any of Mrs. St. Martin's functions was priceless.\n\n\"Oh! Can we?\" Caitlin gasped, turning to ask Barry.\n\n\"Oh, no, no, Honey!\" Shirley laughed. \"It's for us girls only! These boring old men would just get in the way.\" \"Bye, Barry, bye Miss Stacy,\" Caitlin called out as she and Shirley walked to the St. Martins' Rolls-Royce.\n\nCaitlin was completely unaware of the grandeur and sheer opulence of the automobile as she and Shirley exchanged phone numbers.\n\n\"Bye,\" Caitlin called out again and got into her shabby little car.\n\n\"I absolutely adore her,\" Shirley declared to Barry, ignoring the tomato red Stacy Falgout.\n\n\"See you at work tomorrow, Henry said, starting up the automobile.\n\nBarry enjoyed the silence; normally after a short jaunt on the open waters, Stacy was full of complaints; it was too hot, it was too rough, the food was too salty, the other passengers were boring, or ill-mannered.\n\n\"Tell your daughter to move her car; I want to go home,\" was the only thing Stacy said when they pulled up to the Delacroix house.\n\nBarry was only slightly disappointed; he'd had hoped for some hot and sweaty and nasty fucking. Seeing Sierra and Cathy and Chelsea in their nearly obscene bikinis had given him an almost painful erection. Caitlin had looked at the cloudless sky and had decided to keep her tee shirt, windbreaker, and Capri pants on.\n\n\"I'll move it,\" Barry smiled, infuriating Stacy even further.\n\nStacy was going to leave anyway, but at least he could act a little upset. She could see the lump in his khaki shorts, knew he had an erection . The least he could do was ask her to stay, ask her to take care of that erection for him. She would have refused, told him to take care of it himself.\n\nBarry located the spare key on his ring, backed his daughter's car far enough for Stacy to get her Jaguar out, waved as she sped away, then parked Toni's car again.\n\n\"Hi Daddy; have fun?\" Toni mumbled around a thick piece of banana bread.\n\n\"Yeah; should have been there,\" Barry said, looking at the stack of mail.\n\n\"Ooh, I've never been on a boat,\" Anita said to Toni.\n\n\"Oh, Sweetheart! I'm sorry,\" Barry said sincerely. \"Why didn't you say something? I would have loved for you to come with us.\"\n\nMiss Alvarez rewarded Barry with a beaming smile as she put a slice of banana bread and a glass of soy milk on the table for him.\n\n\"Next time,\" Barry promised, touched the girl's shoulder lightly, then wolfed down his warm snack far too fast.\n\nChapter 12\n\nThanksgiving Day was cold, cloudy, and dreary.\n\n\"Man, I could swear I was wearing shorts like just yesterday,\" Toni complained.\n\n\"Like you like were like wearing like shorts like yesterday, like for sure,\" BJ, her oldest brother teased his baby sister.\n\n\"Like shut up!\" she shrilled at him.\n\n\" Honey, you know where Miss Alvarez keeps that, oh, what the hell is it called, that thing, you know, you squeeze the bulb and...\" Barry called out from the kitchen.\n\n\"Like the turkey baster?\" Toni asked, entering what was usually Miss Alvarez's domain.\n\n\"Yes!\" Barry agreed. \"That's it!\"\n\n\"Like her junk drawer is right...\" Toni said, pulling the drawer open and immediately locating the baster.\n\n\"Wow, you a pretty fart smeller, I mean, a pretty smart feller,\" Michael, the middle boy of the family teased.\n\n\"Like I am so glad Thanksgiving is like only once a year,\" she snapped at him.\n\nHe playfully tugged her hair as she walked past.\n\n\"Like your hair like that; it's pretty,\" he complimented.\n\n\"You're still like this big old butt hole,\" she groused.\n\n\"Boys, I really wish y'all would leave your baby sister alone,\" Barry said as he and Stacy hustled around in the kitchen.\n\n\"Uh huh, then she'd never know we were here,\" Patrick, the youngest of the boys, three years Toni's senior commented.\n\n\"And I don't know that she'd really miss y'all all that much,\" Barry said and basted the turkey.\n\nToni went up the stairs to her room, closed and locked the door and flopped down on her bed.\n\nPumpkin came out from under the desk, looked around, then hid back under the desk again. From her spot on the bed, Toni could see Boopsie stick her head out of the closet, then decide she was happy where she was.\n\nToni dug her cell phone out of her purse and quickly sent Anita a text message, telling her good morning and she missed her.\n\nThe two girls had stayed up late last night, texting each other and sending each other pictures of themselves. At first, these had been silly little selfies; making faces at their phones. Then Toni had playfully taken a selfie of herself with her top off. Then Anita had taken one of herself topless as well.\n\nThe next selfie showed Toni nude, and Anita responded in kind.\n\nThe two eighteen year old girls had then masturbated for their phones, texting each other what they were doing and what they'd love to do to the other if she were there.\n\nThe last text to come across was Anita's 'ILY 1000X.'\n\nAt her trailer, Anita was very quickly developing a headache. Dillard was out doing something to his car, which meant that he had to have his stereo thumping.\n\nInside, Luther and Louisa were arguing; that was nothing new, they argued almost non-stop. But now they were arguing about how to cook a pre-cooked turkey breast.\n\n\"The fucking thing's smoked; it's already cooked! All you got to do is heat the fucking thing! Jesus fucking Christ, how hard can that be?\" Louisa shrilled.\n\n\"It's not cooked! It just has smoke flavor added! You trying give us fucking food poisoning here?\" Luther screamed back.\n\nThey also had frozen macaroni and cheese and canned yams; Luther and Louisa were bound and determined that they would have the traditional Thanksgiving feast.\n\nMarco stuck his head in her bedroom.\n\n\"Marco, say one stupid thing and I'll fucking kill you,\" Anita worned.\n\n\"Casa Ole's open; want to have lunch there?\" he suggested.\n\n\"Uh, and let me guess,\" Anita sneered. \"Aw, girl, I uh, aw believe this shit? Left my wallet at home, feel me? But let me hold a twenty I catch you, feel me? That's all right Marco, I don't think I'll buy you lunch today, but hey, thanks for asking; you have a nice day.\"\n\nHer cell phone dinged and she smiled softly as her girlfriend's text popped up.\n\n'ILY 1000x1000x1000x1000' she replied and sent it. Her phone dinged and a picture of Toni's blonde pubic mound popped up. A second later, another ding and another picture, this one of Toni's fingers spreading her lips apart.\n\n'Yum yum,' Anita responded, pushing Marco aside so she could lock herself in the bathroom.\n\n\"See? Right fucking here, read it! 'Heat And Serve' it says it right here,\" Anita could hear Louisa scream from the kitchen.\n\nAnita turned on the small stereo she'd bought, put in 'Fading Shades,' a CD that Jenee had turned her on to from a German singer named Sandra, and took a selfie of herself getting ready to take a bath.\n\nShe turned the music up a little louder, to drown out any moans and gasps she might let out. She took another selfie of her bending over to turn the water on.\n\nin her bedroom, Toni masturbated as Anita sent her a series of photos of herself taking a bath, pleasuring herself in the hot water.\n\n\"Hey, Ann Snot Yet!\" Patrick called out from the other side of Toni's bedroom door, calling her by the hated nickname of her childhood. \"Dad and Miss Stacy say they've finished burning the food!\"\n\n\"Like be right there,\" Toni called back, pulling her jeans up.\n\nShe sent Anita a quick text of 'ILY 1000x1000x1000x1000x1000x1000' and dashed into her bathroom.\n\nShe studiously washed her hands; Miss Stacy had embarrassed her to no end a few weeks ago by pointedly sniffing the air when Toni had come down after a very satisfying masturbation session. She then sprayed a little of her perfume on herself, then checked her hair and make up.\n\n\"Damn it!\" she giggled as she left the bathroom, realizing that she had to pee.\n\nDownstairs, Barry sighed impatiently, not bothering to hide his annoyance as Patrick's girlfriend, Debbie 'Don't Touch Me' Peterson shrilled that she could find her seat without help.\n\n\"I'm sure you can, but in the meantime, you're cane is whacking the Hell out of my chair and table legs,\" Barry said, a little more sharply than he had intended, but not as sharply as he would like to.\n\nPatrick, a little more familiar with the layout of the room, had already put his own cane in the corner.\n\n\"Here, Debbie, why don't we sit here?\" he asked gently, taking her hand and putting it on the back of a chair.\n\n\"Thanks,\" she snarled, dropped her long white cane to the floor and shoved it underneath the table.\n\n\"Debbie, listen, so no one trips over that, why don't I put it...\" Stacy tried to suggest.\n\n\"It's fine where it is,\" the blind woman barked.\n\n\"Okay,\" Stacy said.\n\n\"And as soon as like Toni like gets like here, we'll like say like Grace; you did tell her dinner, right Patrick?\" Michael said.\n\n\"Yeah I did,\" Patrick agreed.\n\n\"About time; we're dying here,\" BJ, the oldest boy said when Toni skipped into the dining room.\n\n\"And that's for like that Ann Snot Yet thing,\" Toni said, flicking Patrick in the back of his head as she walked past.\n\n\"Ow, fart face!\" Patrick laughed, rubbing the back of his head.\n\n\"Rub a dub dub, thanks for the grub, yay God,\" Toni said, taking her seat to her father's left.\n\n\"That might have been cute when you were four,\" Barry shook his head. \"But at eighteen?\"\n\n\"And it wasn't that cute when you were four,\" BJ said.\n\n\"Heavenly Father, we thank you for this food, we thank you for our family, we thank you for the many blessings you have bestowed upon us. Please let this food nourish our bodies as you nourish our souls, Amen,\" Barry said.\n\n\"And God bless the cook!\" Toni exclaimed.\n\n\"Cooks,\" Stacy corrected, taking her seat to Barry's right.\n\nAt her house, Caitlin studiously read her grandmother's notes, determined that the oyster dressing was about as good as it was going to be, and checked on the broccoli and cheese.\n\n\"How's it coming?\" Theresa Weinstein ,her mother asked from the doorway of the kitchen.\n\n\"Okay, I think,\" Caitlin admitted.\n\n\"Need help?\" Theresa asked.\n\n\"No, no, I got it,\" Caitlin forcefully insisted.\n\n\"Honey, our first Thanksgiving? We all need help,\" the older woman said.\n\n\"That's right,\" Grandmother called out from the living room. \"And your mother needed a lot of help.\"\n\n\"Quiet, horrible woman or I'll double your medication,\" Theresa threatened.\n\n\"You wouldn't dare,\" Grandmother said.\n\n\"No, no, I got it,\" Caitlin said.\n\n\"Smells good, Honey; you're doing fine,\" Grandmother called out then started coughing again.\n\n\"And what about the rolls?\" Theresa asked.\n\n\"Oh shit!\" Caitlin shrilled.\n\n\"Uh huh,\" Teresa said, pulled the prepared tray out of the refrigerator and started putting dabs of butter on the raw dough.\n\n\"God damn it, I can't do nothing right,\" Caitlin burst into sobs.\n\n\"No, no, no, it's all right, it's all right,\" Briah, Caitlin's younger sister assured her sister, hugging her tightly. \"No, no, you're doing great!\"\n\n\"Sweetheart, it's just rolls,\" Teresa assured the girl.\n\n\"No, it's not!\" Caitlin wailed. \"It's this and that and it's all got to be done at the same time and it's just too much!\"\n\n\"Which is why we all need a little help from time to time,\" Theresa said, nudging the two girls out of the way so she could put the rolls into the oven.\n\nOutside of Superior Motors, a college boy and his girlfriend stood peering into the showroom and dreaming of the day they could actually afford one of the sleek automobiles. \n\nThey had both laughed at the note that someone had taped to the glass door on the inside of the showroom.\n\n\"It's Thanksgiving.\n\nGo Home And Be With Your Family.\n\nYou Can Get Your New Car Tomorrow.'\n\n\"I wish!\" the young man said, kissed the girl softly, then opened the door to his truck for her to climb up into the cab.\n\n\"One day,\" she assured him.\n\n\"Uh huh, Honey, you got any idea what they pay teachers?\" the boy smiled and closed her door.\n\nAt her trailer, Anita stuffed the unappetizing food into her mouth, swallowing it as quickly as possible.\n\n\"Not bad,\" Luther declared, enjoying the dried out turkey breast\n\n\"Fucking dry as a bone,\" Louisa grumbled.\n\n\"What they make gravy for,\" Luther said.\n\n\"Uh huh,\" Louisa said.\n\nAnita wished she had a car. Then she could have driven herself to Casa Ole, or even over to Toni's house. Toni, and Mr. Barry had invited her to their house for Thanksgiving, but Louisa had thrown a fit, declaring that Thanksgiving was for family. \n\n\"Never even see you anymore,\" Louisa had complained bitterly. \"And when I do see you, you got your face in that damned phone of yours, texting and all that.\"\n\n\"This?\" Anita wanted to scream at her mother. \"You made me stay home for this? I could have been at Toni's house, eating food that actually has some taste. But no! You had to throw a hissy fit.\"\n\nAt the Delacroix house, Toni gritted her teeth as Debbie insisted on serving herself and managed to get gravy onto the linen placemat, instead of her turkey.\n\n\"God, if she would just like let someone help her,\" she whispered to BJ.\n\n\"Uh huh, hey Dad, the giblet gravy is awesome,\" BJ agreed.\n\n\"Thank you, but Miss Stacy's one that made that,\" Barry agreed.\n\n\"Finished getting the table with that gravy there, Debbie? I'd like some of it, if you don't mind,\" Michael said, tired of Debbie and her attitude, and certainly in no mood to be polite any longer.\n\nBarry glared at his middle son, but everyone else, except for Debbie snickered at Michael's comment.\n\n\"Glad you like the gravy,\" Stacy said, trying to be the very picture of grace and hospitality.\n\nShe was trying desperately to show Barry that she could be a homemaker, that she could be the glue that held his family together.\n\nBarry knew what Stacy was attempting to do and knew he should feel more than just a little guilty for using her as he did. But he had been perfectly honest with her from Day One; he was not looking for wife number two. He had been perfectly honest with her when she said she was looking at him as Husband material; he did not see her as Wife material.\n\nHe had been perfectly honest last night when she was performing oral sex on him; no matter how many times she sucked his cock, how many gallons of his sperm she swallowed, he did not foresee marriage in their future.\n\nBut she insisted on staying, on performing oral sex on him, on getting up at five o'clock to start baking the turkey, insisted on fixing a nice breakfast for him and for Toni.\n\nHe looked at Stacy, and did feel a little guilty.\n\nAt Grandmother's house, Theresa picked up Bobby, her eleven year old son by one of his ears and snarled, \"One word, you hear me? One word telling your sister ANYTHING but how much you liking her food and so help me God, it will be the last thing you ever say, you hear me?\"\n\n\"Yes ma'am,\" Bobby whined, believing her.\n\n\"And here we go,\" Briah said, carrying the plate of rolls to the table. \"Caitlin's fixing Grandmother's plate and then we can eat!\"\n\n\"Here you go, Grandmother,\" Caitlin said, carrying the plate of finely chopped food to the hospital bed where her grandmother lay.\n\n\"You a sweet girl, Baby,\" Grandmother smiled. \"One day, some man's going to look at you and realize you'll be the perfect wife.\"\n\n\"He can get past this red hair and all these freckles,\" Caitlin agreed.\n\n\"Baby, what you talking about? You're beautiful,\" Grandmother said, pulled the mask away from her face and prepared to take a bite of her food.\n\n\"Mother, we need to say Grace,\" Theresa snapped.\n\n\"Grace,\" Grandmother said and stuffed the fork into her mouth.\n\n\"Well, I guess that's about as good as we're going to get out of you,\" Theresa snapped.\n\nAt the Delacroix house, Michael waited until three o'clock until he could politely make his escape. He offered Patrick and Debbie a ride; Patrick accepted but Debbie snapped that they could get a cab.\n\n\"Okay, Debbie, I'm going that way anyway, Debbie, but I can see you think you just got to make a point Debbie, y'all are so independent Debbie but do you think you could just put that militant attitude in your back pocket for a second Debbie and use some common sense?\" Michael snapped, earning him a harsh glare from their father. \"Seriously, I'm going that way, if you wait on Rapid Cab, it'll be at least an hour, and then he's going to charge y'all seven bucks to go less than one flipping mile; why not just accept a ride, huh?\"\n\n\"Fine,\" Debbie snapped.\n\n\"Love you, Dad,\" Michael said and whispered in his ear, \"I know you're mad at me, but I just couldn't help it; she's being a bitch for nothing.\"\n\n\"I know, love you, hard headed boy,\" Barry smiled tightly, kissed his son on the lips, patted his back, and then hugged Patrick tightly.\n\n\"Love you, boy, Damn, you're getting big, huh?\" Barry said and also kissed his youngest son on the lips.\n\n\"Bye Dad, bye Miss Stacy, see you BJ, Ann Snot Yet.,\" Patrick cheerfully said.\n\n\"Shut up!\" Toni said, but kissed her two brothers good bye. \"Love you.\"\n\n\"Love you too, Baby Sister,\" Michael smiled tightly as Debbie insisted she could put her own coat on, even though it was giving her trouble. (The right sleeve was pulled inside out, probably from when she took it off.)\n\nBJ left afterward, and Toni beat a hasty retreat to her room.",
        "She sent Anita a text; Anita must have had her phone in her hand; the reply was immediate.\n\n\"Bye Daddy, bye Miss Stacy, like getting Anita, all right?\" Toni called out as she sprinted down the stairs.\n\nBarry pursed his lips tightly as Stacy's smirk.\n\nIt had been Stacy that had pointed out to him that his daughter and Anita were lovers. They had just finished a rather energetic lovemaking when Stacy waved at Barry to be quiet.\n\n\"What, I don't hear...\" Barry said and she waved even harder for him to be quiet.\n\nA moment later, he heard a low moan.\n\n\"What do you think...\" he asked, genuinely puzzled.\n\n\"Uh, what do you think that is?' she smirked. \"Uh, had me doing that just ten seconds ago, huh?\"\n\nHe heard a small gasp and giggle coming from Toni's room and grabbed his remote control and turned on his bedroom television, pushing the volume button hard.\n\nNow he looked at Stacy's knowing little smirk and turned away to wipe the kitchen counter even though he had just wiped it down a second earlier.\n\n\"And that's another reason there ain't no ring on that finger; you're a arrogant little bitch,\" Barry thought to himself.\n\nAt the trailer, Louisa looked up from the television set and glared as Anita pulled on her coat.\n\n\"Uh, excuse me, where you think you going?\" she barked.\n\n\"I'm going to work, that all right? We got another order for more soap,\" Anita lied.\n\n\"No it ain't all right!\" Louisa shrilled. \"God damn! Can't even take one day! One day be with your family?\"\n\n\"What 'be with my family?' You and Luther watching football! I don't want to watch football. Marco's in his room sleeping; I don't want to be with him! I been with y'all all day and now I need to go make some soap for Saturday delivery! God!\" Anita screamed.\n\n\"Fine, fine, selfish bitch!\" Louisa screamed.\n\n\"What? Going doing some work is selfish? How?\" Anita asked.\n\n\"Rather be doing that than just spend some time...\" Louisa shrilled.\n\n\"By Mother; I spent all day with y'all,\" Anita snapped, opened the door, which let a chill blast of air in, stepped outside, and slammed the door closed.\n\n\"God damn, break the fucking door why don't you?\" Luther bellowed angrily.\n\nFortunately for Anita, Toni was there in only a few minutes so she didn't have time to feel the bitter cold.\n\n\"Hey,\" Toni said and the two kissed quickly.\n\n\"Hey; just get me the fuck out of here, all right?\" Anita said, buckling up.\n\n\"Luther? Marco?\" Toni asked sympathetically.\n\n\"Mother; she's all like 'why you can't be with your family' and I'm like 'Why? Y'all are fucking useless' and...\" Anita complained.\n\n\"Uh huh, and now you like know how I feel when I'm with my mom and her loser boyfriend,\" Toni said.\n\nToni gritted her teeth when she pulled up to her home; Miss Stacy's Jaguar was still in the driveway.\n\n\"Oh, and how was your Thanksgiving? Did Martha Sewage, I mean, Martha Stewart just make the like best Thanksgiving ever?\" Anita asked snidely.\n\n\"Like fuck you, okay?\" Toni giggled. \"Honestly, it like wasn't that bad. Food was real good; she like even made that spinach artichoke dressing stuff there.\"\n\n\"Lucky bitch; we had frozen macaroni and cheese, canned yams, and this pre-cooked turkey and that's it,\" Anita groused.\n\n\"Ew!\" Toni said as they entered the ice cold garage.\n\nTwo hours later, Toni declared an end to their work day.\n\n\"Take me back home, I guess,\" Anita said somberly. \"I need to make up with my mother.\"\n\n\"Oh,\" Toni said, cuddling up to Anita. \"I kind of um, like hoped you'd um, you'd like spend the night.\"\n\n\"Tomorrow night,\" Anita promised. \"Remember? We got them dates?\"\n\n\"Oh God, Boyd and Brett,\" Toni grimaced.\n\n\"Gee, I hope they'll talk about football,\" Anita said as she pulled her coat back on.\n\n\"You think?\" Toni said. \"Like I bet they don't! I bet they like talk about you know, like quantum physics and stuff.\"\n\n\"Like Brett could even spell Quantum Physics,\" Anita giggled as they hustled to Toni's car.\n\nChapter 13\n\nJust as she had done from the time she could read the tags on the gifts under the Christmas tree, Toni crawled around, gathering up all the presents and distributed them.\n\n\"And like here's another one for BJ; like think you got enough?\" Toni announced.\n\n\"Like I like see like she like hasn't like learned any like new like words yet,\" Michael said to their oldest brother.\n\n\"Like bite me,\" Toni said and pushed one last package over toward Barry.\n\n\"Oh, no, this is Caitlin's she like said she wants to be here when you open it,\" Toni said and pushed it back under the tree.\n\nBarry fought down his smirk; Stacy had thrown a major fit when she spotted the large gaily wrapped present underneath the tree and saw the tag.\n\n\"What is it?\" she had demanded of Barry.\n\n\"Beats me; came by the other day, dropped it off,\" Barry had shrugged.\n\nNow, perched on the couch next to him in their living room, Stacy Falgout was doing her very best to demonstrate her matronly skills as she organized the chaos of gift unwrapping.\n\n\"Swear to God, pussy must be gold plated,\" Michael whispered to BJ as they rolled their eyes at Stacy's pathetic performance.\n\n\"You ever had gold-plated pussy?\" BJ asked.\n\n\"Monique,\" Michael responded immediately.\n\n\"Aw, your ass!\" BJ laughed out loud and gave his brother a slug on the arm.\n\nWhen they had been younger and needed a baby sitter, Monique Breaux had been the sitter of choice. BJ had harbored a major crush on the shapely girl. A few years later, he had been crushed when she abruptly moved away and neither her mother or father would tell him where she went.\n\nTwelve years after Monique's abrupt disappearance, Michael had seen Monique as she was coming out of a supermarket in Vicksburg, Mississippi. The only reason he recognized the obese woman with the lifeless strands of brunette and the sunken eyes was because of the girl next to her. The young girl was the spitting image of what Monique had been. There were four other children following behind the large woman that also resembled Monique's former beauty.\n\nBut Michael, a burgeoning writer, embellished the incident, creating an elaborate afternoon of wild and kinky sex for BJ's benefit.\n\nBJ knew Michael was lying, but still smiled whenever Michael brought it up.\n\n\"Now, BJ, it's your turn,\" Stacy said, forcing herself to sound cheerful.\n\n\"Oh, hey, nice,\" BJ said after unwrapping a Saints football jersey emblazoned with the number 8 and Manning on the back. \"He is still the best quarterback we ever had.\"\n\n\"Damned shame he never had anyone throw to,\" Barry agreed.\n\n\"I thought Drew Brees was...\" Stacy said.\n\n\"Archie puts Drew Brees to shame,\" Barry, Michael, BJ and Toni all said.\n\n\"Now, how would y'all know?\" Stacy demanded. \"None of y'all are even old enough to remember when Archie played football. Really!\"\n\n\"Got like two boys playing, both of them like got them\n\nSuper bowl rings,\" Toni said. \"They didn't just like lick that off the wall.\"\n\n\"You have been around Michael too much,\" Barry laughed at his daughter.\n\n\"And now Michael...\" Stacy intoned.\n\nWhile Michael unwrapped a heavy box, Stacy turned to Barry.\n\n\"Now, why couldn't Patrick be here?\" she asked peevishly.\n\n\"Because he and Debbie Don't Touch Me are at her parents' house, making them miserable,\" BJ answered.\n\n\"They spent Thanksgiving with us so it's only fair that they spend Christmas in Jackson,\" Barry said, perturbed with Stacy.\n\nThey'd had this conversation last night as they lay in his bed. She insisted on spending the night, even though he would have been fine without her there. She came out of his bathroom, dressed in only strategically placed bows, asking him if he'd like to 'unwrap' his Christmas gift early.\n\nShe was still trying to fuck him into changing his mind, still trying to fuck him into marriage.\n\nRather than being enjoyable, an intimacy to be shared, sex was becoming a chore for Barry.\n\nAt her trailer, Anita Lopez forced herself to smile at the cheap, gaudy baubles her mother and Luther had wasted their money on, thanking them for the gifts.\n\n\"Oh no you didn't?\" Marco whooped when he pulled out the black suede tennis shoes.\n\n\"Those are the ones you wanted, right?\" Anita asked him as he quickly bent to lace them up.\n\n\"You kidding?\" he said.\n\n\"Well, how about that?\" Luther said, pulling out the fifth of Johnny Walker blue label.\n\n\"Mr. Barry says that's his favorite and he's like an expert,\" Anita said.\n\n\"Well, I'm willing to bet it'll be my favorite real quick,\" Luther agreed.\n\n\"Hey, hey, hey!\" Louisa chirped as she unwrapped the three cast iron skillets, each just a little larger than the last.\n\n\"The two larger ones also have lids,\" Anita pointed out. \"You know how you always watching that Cast Iron Skillet show and saying if you had you a cast iron skillet? Well now you do.\"\n\n\"No, think I'll use them keep my man in line,\" Louisa said, playfully threatening Luther with the largest skillet.\n\nAnita brought the cheap trinkets to her bedroom, put them on the rickety chest of drawers and flopped on her bed.\n\nSuddenly she remembered that she had homework that needed to be done over the Christmas break and slid open her closet door to retrieve her book bag.\n\nShe saw the little black dress, smelled the smells of the Christmas party still in its fibers and smiled.\n\nShe and Toni had lugged the three boxes of soaps into the salon then stared at each other.\n\n\"You got the heavier coat,\" Anita finally pointed out.\n\n\"Here,\" Toni said, shrugged out of it and held the heavy coat to Anita.\n\n\"I hate you,\" Anita said, grabbed the car keys out of Toni's hand and braced against the cold December wind that howled off of the Atchafalaya Basin.\n\nShe grabbed the heavy box out of the trunk and scurried back into the salon. With a shudder, she handed the box to Toni.\n\n\"Miss Selena, this is gift baskets,\" Anita said, pulling one out of the box and showing her the cellophane wrapped basket. \"See, it's got like three bar, the peppermint, gingerbread, and hot chocolate and...\"\n\n\"And it's like got sample size bars of all our other soaps,\" Toni chimed in.\n\n\"And a peppermint candle,\" Anita said, proudly pointing to the slender candle. \"All organic.\"\n\n\"Yeah,\" Toni said, giving Anita an affectionate squeeze; the candle had been Anita's idea and Anita was the one that had looked up how to make them and had spend her spare time developing the process.\n\n\"How much?\" Selena asked.\n\n\"What you think? Like fifty...\" Toni said.\n\n\"Wow, eighty nine ninety nine? Hope you brought us plenty of them!\" Selena said out loud.\n\n\"Miss Terry here?\" Anita asked Selena.\n\n\"Yes ma'am, like that's what we said, eighty nine ninety nine; there's like twenty of them,\" Toni agreed as Selena pushed the button to silently page Terry Dayton.\n\n\"Oh, I am so glad to see you; wait right there,\" Terry said, then turned and dashed back to her work station.\n\n\"Miss Terry, this is for you,\" Anita said, holding out an gift wrapped basket.\n\n\"Well, thank you so much,\" Terry smiled accepting the gift. \n\n\"And these are for you two; Paula and I are having a little Christmas get-together next Saturday night; please tell me you can make it,\" Terry said, handing Anita the two invitation envelopes.\n\n\"Put on your favorite little black dress,\" Selena said as Terry strode away, Anita still staring transfixed at the gilded invitation in her hand.\n\nSelena leaned forward.\n\n\"And that chef guy does that Cast Iron Skillet show; he's doing all the cooking,\" Selena confided.\n\n\"Like let me guess,\" Toni smiled once they were back in her car, waiting for the heater to chase away the bitter chill. \"You like really really really want to go.\"\n\n\"Oh please, can we?\" Anita begged.\n\n\"Got a little black dress?\" Toni asked, pulling out of the parking lot.\n\n\"Um, no,\" Anita admitted.\n\n\"Babbage's,\" Toni announced and drove toward the exclusive department store in Bender, Louisiana.\n\n\"Toni! Are you crazy? I can't...\" Anita started.\n\nA moment later, Toni looked over and saw Anita staring straight ahead.\n\n\"What? What's wrong?\" Toni asked her.\n\n\"Toni, I can afford Babbage's,\" Anita whispered.\n\nNow, Anita touched the simple, elegant garment and smelled the evening's festivities on it. The tag said 'Dry Clean Only' but Anita didn't know where a dry cleaner's was. She resolved to look one up on her cell phone.\n\nThe party had been at Paula Lambert's condominium and it had been Paula that opened the door. The strawberry blonde smiled and ushered them in. She wore a red Santa dress that ended just below her crotch and everyone kept complimenting her on all the weight she'd lost.\n\nTerry, dressed in floor length dark green velvet gown that had slits up to her waist to allow movement, came, and kissed Anita and Toni on their lips, put her arm around their waists, and personally introduced the pair to each person at the party.\n\n\"This is Cindy Broussard-Robichaux and her husband, Paul Robichaux; Cindy just won that election; she's our next parish president, and Paul, as you know, is a very successful contractor,\" Terry said. Paul, Cindy, this is Anita Lopez and Toni Delacroix; keep your eye on them; they're going to be our next millionaires.\"\n\n\"Chelsea! Chelsea Guidry, this is Anita and Toni; believe me, you want to interview them; they are the next big thing to hit Louisiana,\" Terry introduced them to the Channel 12 reporter.\n\nPaula took her place at the head of the elegant table, Terry sitting to Paula's right. Anita wanted to swoon; Terry insisted that she and Toni sit next to her at the table.\n\nSophia Coutre, Paula's attorney, and now Anita and Toni's attorney as well, offered a simple blessing.\n\nBefore Toni could stop herself, she loudly announced \"And God bless the cook!\"\n\n\"Amen!\" everyone at the table laughed and Milt Duhon beamed at the now furiously blushing teenager.\n\n\"Amen,\" Paula agreed, smiling at the girl. \"Sometimes, I get so caught up in my own little world, I just take for\n\ngranted all the hard work others put into it. God Bless the cook.\"\n\nAnita watched the elegance and grace which Terry conducted herself and blurted out, \"Were you a model before you became a hair stylist?\"\n\nTerry looked startled and for a split second, Anita saw a little girl. Then Terry smiled and grabbed Anita's hand, giving it an affectionate squeeze.\n\n\"No Sweetheart; I was a car hop at Clark's Drive-In,\" she quietly told the girl. \"I lived in Section Eight housing with my aunt, didn't ever see any way out of it, then Paula said to me, 'If you could do anything, anything at all in the world, what would you want to do?' and I told her 'I want to open my own hair salon' and so she paid for me to go to school,\" Terry started her tale.\n\n\"One day, this beautiful girl was dragged into my salon by her best friend, and they said 'we want to sell soap' and I said 'okay then, sell soap,'\" Terry smiled and used her knife to cut more of the goose breast. \"And in three or four years, you'll say to some young lady 'if you could do anything, anything in the world, what would it be?' and you're going to help her do it. Yes, God bless the cook, and the hair stylist, and the soap maker and the candle maker.\"\n\nNow, a week after that party, Anita smelled the dress and forgot about looking for a dry cleaner.\n\nAt the Delacroix house, they were slowly gathering the wrapping papers and making sure to not accidentally grab any gifts hidden in the papers.\n\n\"Caitlin's like on her way,\" Toni announced, much to Stacy's annoyance.\n\n\"Thank you so much,\" Stacy fawned to Barry, holding out her wrist, which now displayed a Rolex watch.\n\n\"Welcome; said that Seiko of yours would cost more to fix than it was worth, right?\" Barry said, wishing Stacy would go brush her teeth.\n\n\"Heeeeey!\" Caitlin drawled out, hugging Michael when he opened the door for her.\n\n\"Hey, Toothpick,\" Michael agreed, calling her by her hated nickname.\n\n\"Shut up! Was going to tell you 'Merry Christmas' but you can just forget it now!\" Caitlin screeched.\n\n\"Don't worry,\" BJ said, hugging the girl. \"I won't call you 'Tooth Pick' all right?\"\n\n\"Well Merry Christmas to you,\" Caitlin said.\n\n\"Even though you are,\" BJ finished, then laughed when a surly Caitlin slapped him on his arm.\n\n\"Did you open it yet?\" Caitlin asked Barry as she skipped into the living room.\n\n\"No, I was told under no circumstances was I to open that box until you got here,\" Barry smiled and held out two small boxes to her.\n\n\"Oh, Barry, you didn't have to get me anything!\" Caitlin protested; her protest being genuine.\n\nStacy ground her teeth and busied herself with finding those small scraps of paper that fall to the floor when gifts are unwrapped.\n\n\"Go ahead, open it,\" Caitlin urged, taking the seat next to Barry.\n\n\"Okay,\" Barry said, using a crystal letter opener to cut through the paper.\n\n\"What is it?\" BJ asked.\n\n\"Oh my God, where in the world did you ever find this?\" Barry asked, stunned.\n\n\"Mister Henry helped me,\" Caitlin admitted.\n\n\"What is it?\" BJ asked again.\n\n\"It's a Service Manual for a Nineteen Sixty Five T Series Bentley,\" Barry said, carefully undoing the leather strap and buckle that held it closed.\n\nStacy actually felt nauseous; her gifts of leather attach\u00e9 case and two silk ties paled in comparison to the girl's\n\ngift.\n\n\"That's the car you got out there, right?\" Caitlin asked as Barry carefully turned the brittle pages.\n\n\"Yes it is,\" Barry said, still amazed at what he held in his hands.\n\n\"You little fucking cunt!\" Stacy screamed, launching herself at Caitlin.\n\nBarry stood, putting himself in between Stacy and Caitlin. \n\nMichael grabbed Stacy around the waist, holding her back.\n\n\"Stacy! Really! It is Christmas!\" Barry said.\n\nStacy glared white hot hatred at Caitlin, who just looked back with complete unconcern. Stacy whirled and dashed up the stairs.\n\n\"Got any guns up there, Dad?\" BJ asked.\n\n\"Not yet,\" Barry said.\n\n\"Like, go ahead, I want to see what he got you,\" Toni finally said after a few moments had elapsed.\n\n\"Oh!\" Caitlin gasped, looking at the St. Thomas Aquinas class ring.\n\n\"Toni said you didn't have one,\" Barry offered.\n\n\"Couldn't afford one,\" Caitlin admitted.\n\n\"But you could afford...\" Barry asked, indicating his treasure.\n\n\"That's different,\" Caitlin said, looking into his blue eyes. \"That's for you.\"\n\n\"Oh wow,\" BJ said, sharing a look with Michael.\n\nNow dressed in her long coat, Stacy barged down the stairs and out the front door.\n\n\"Hey!\" Toni protested; Stacy did not bother closing the door and the bitter December wind blew into the house.\n\nMichael closed the door, shaking his head.\n\nOutside, in her car, Stacy wanted to scream with rage; BJ and Michael's cars had her blocked. But rather than go back into the house and ask them to kindly come move their cars, rather than have to face any of them, she decided to cut across the lawn.\n\n\"Are you believing this shit?\" BJ asked Michael as they watched the Jaguar become bogged down in the soft earth of Barry's meticulously arranged tulip garden.\n\n\"Hey, Dad, how much them tulips cost you?\" Michael called out\n\n\"I don't know, about a thousand, why?\" Barry asked, coming into the foyer.\n\n\"What in the world?\" he asked as he watched Stacy's tires thrash through his garden.\n\n\"My car!\" Caitlin cried out as Stacy's car finally gained traction and catapulted forward, smashing into Caitlin's\n\ncar.\n\n\"I am sincerely sorry about this; I'll get you a loaner,\" Barry promised.\n\n\"Can I have that Maserati?\" Caitlin asked, watching as Stacy sped away.\n\n\"In your dreams, kid, in your dreams,\" Barry shook his head as he called 911.\n\nChapter 14\n\nSadie had greeted Mommy with yelping barks and whines; she'd been cooped up in the condo's small laundry room all night.\n\n\"Not now, Sadie,\" Stacy demanded, dropping car keys on the counter.\n\nSadie responded with more yelping whines.",
        "\"God damn it, not now!\" Stacy screamed.\n\nSadie relieved herself; thoroughly soaking her small pillow.\n\n\"Should have grabbed that letter opener,\" Stacy muttered to herself, picturing in her mind's eye the crystal letter opener that Barry had used to open that damned present. \n\nIn her mind's eye she could envision herself slamming the blade into that bony red head's skull, killing the little slut. She could picture driving it into the throat of that like little like tramp like daughter of like Barry's, could actually picture the girl's horrified look as her life slipped away.\n\nSadie continued to yelp and whine and paw incessantly at the door of the laundry room as Stacy fixed herself a drink. She poured herself a healthy amount of the Johnny Walker blue label. Normally she left this bottle untouched; this was Barry's bottle. \n\n\"Fuck him,\" she said bitterly and coughed as the amber liquid burned it's way down her throat.\n\nShe stripped out of her clothing and pulled on her old, familiar robe, then ground her teeth in frustration. Barry had given her a very nice, warm robe that even had a hood on it to keep her head warm when she had a wet head from the shower. Of course, she had left it at his house, to wear when she spent the night. She wished she'd had the foresight to grab it before she left his house.\n\n\"At least I have...\" she thought and looked at her expensive watch.\n\nAt the Delacroix house, Sergeant Darren Richards and his partner, Officer Ray Gonzales took the statements of everyone. Darren wrote out the accident report for Caitlin, who was on her cell phone with Young Insurance.\n\n\"I'm sorry, hate to call you, I mean, I know it's Christmas,\" she sniffled into her phone.\n\n\"Don't be ridiculous,\" Julie Chamblee assured the girl. \"I'm just glad you weren't hurt when it happened.\"\n\n\"I wasn't even in it when it happened,\" Caitlin said.\n\n\"Well, thank God,\" Julie said.\n\n\"And then she slammed into my daughter's friend's car and drove... You can see the tire marks right there,\" Barry pointed out to Officer Gonzales.\n\n\"Daughter's friend?\" Caitlin asked Barry when the police officers left the house.\n\n\"Well, yeah, what was I supposed to...\" he asked.\n\n\"Uh, your girlfriend? Your next wife?\" Caitlin said.\n\n\"Caitlin, come on, you're being ridiculous,\" he protested.\n\n\"Why?\" she asked, staring into his eyes.\n\n\"Because, you have any idea; Caitlin, I'm almost fifty. Fifty!\" Barry exclaimed.\n\n\"And? I'm almost twenty. Twenty! What's that got to do with...\" Caitlin asked, putting her hand on his forearm, still looking deeply into his eyes.\n\n\"Caitlin, I've got kids older than you!\" Barry pointed out.\n\n\"So?\" she asked. \"I won't ask them to call me 'Mom.'\"\n\nHe laughed at that. She stepped up and kissed him, then stepped back again, still looking intently into his eyes.\n\n\"Barry, all I'm asking, all I want is a chance,\" she said. \"All I want is to prove to you I do love you.\"\n\n\"Caitlin,\" he argued weakly.\n\n\"A chance?\" she begged. \"Please, just give me a chance?\"\n\nHe drew in a deep breath, then sighed. She squealed happily and wrapped her arms around his neck.\n\n\"Love you,\" she enthused and kissed him clumsily.\n\n\"I must, no, no, I know I'm losing my mind,\" Barry laughed as he returned the bone thin girl's hug.\n\nHe grew serious and looked into her warm brown eyes.\n\n\"But no secrets, you hear? No running around behind anyone's back. I'm going to talk with your mother and your father, all right?\" he said sternly.\n\n\"Okay,\" Caitlin said with more confidence than she actually felt.\n\nHer mother, she knew, would not like it one bit but Grandmother would quickly put a stop to Theresa's objections by pointing out that the man that Theresa left Caitlin's father for, the man that fathered Briah, had been sixty three years old when Theresa became involved with him.\n\nBut Edmund, Caitlin's father, Caitlin was not sure of what Edmund's reaction would be. In his eyes, Caitlin was still the nine year old girl that had been run over by a drunk driver that swerved onto the sidewalk, putting her into a body cast, forcing her to miss nearly two years of school.\n\nAnd in her eyes, her Daddy was the single most wonderful man in the world; the man that not only came to get her every other weekend, but also took her little sister with them, even though it was blatantly obvious that Briah was not his daughter. Briah did call Edmund Weinstein 'Daddy' because Briah's own father disavowed any knowledge of her, even though he still sent the five hundred and fifty dollar child support check each month.\n\nIf Edmund Weinstein had any resentment toward Briah, or had any prejudice because Briah was half African American, he never displayed it.\n\nAnd even though she was now nineteen, almost twenty years old, and Briah was almost eighteen, they still spent every other weekend with him; he still rented a two bedroom apartment so that they could have their own bedroom, their own bed.\n\n\"Okay,\" Caitlin agreed again and kissed Barry again.\n\nAt the condominium, Sadie's pawing had ceased, now the dog was hurling herself at the door of the laundry room.\n\n\"Fine, fine, God damn it,\" Stacy yelled at the toy poodle, the flung the back door open. Sadie ran outside, did what little business she had and ran back inside.\n\n\" Bad! Bad dog!\" Stacy shrilled, discovering the wet pillow.\n\nSadie cowered down and whimpered.\n\nStacy drank a third glass of Barry's scotch and dropped the soaked pillow into the washing machine, along with the towel she'd used to mob up the excess urine.\n\nA hard knock sounded at her door, prompting Sadie to start her shrill barking.\n\n\"Yes?\" Stacy snarled , flinging the door open.\n\n\"Afternoon, ma'am,\" Sergeant Darren Richards intoned, almost smiling at the little dog that hid behind her owner, yapping at the two strangers. \"Understand you're not having yourself a very Merry Christmas?\"\n\n\"Oh go fuck yourself,\" Stacy snarled and moved to slam the door in the police officers' faces.\n\n\"Wouldn't do that, ma'am,\" Officer Ray Gonzales said.\n\nAt her trailer, Anita finished scribbling out her homework and sighed. Since their little blow up on Thanksgiving, Anita knew better than calling Toni and telling Toni to come get her. It would just prompt a fight between mother and daughter.\n\nMarco had gone out to show his buddies his new tennis shoes., Louisa was playing with a electronic gadget Luther had given her and Luther was snoring on the couch, having consumed nearly all of the fifth of scotch.\n\n\"Man, they give y'all a lot of homework at that school, huh?\" Louisa asked, causing the floor of the trailer to sag when she lumbered into the kitchen.\n\n\"Yeah,\" Anita agreed.\n\n\"But you learning a lot, huh?\" Louisa said, attempting conversation.\n\n\"Yes ma'am,\" Anita agreed.\n\nLouisa grabbed a can of beer, squinted at the clock and decided to make herself a sandwich with some of the leftover turkey breast from their Christmas lunch.\n\n\"Want a sandwich? I've fixing me one, you want one?\" Louisa asked.\n\n\"Sounds great,\" Anita said, trying to make herself sound cheerful. \"I help?\"\n\nAt the Delacroix house, Barry watched as BJ, then Michael left. Toni was already upstairs in her bedroom, downloading software onto her new laptop computer. Caitlin watched as Barry put on his coat then cleared her throat and looked at her own coat hanging on the coat rack. She smiled as he assisted her in putting her coat on, then leaned back into his big arms. She gave a little sigh of happiness when she felt him kiss the back of her head softly.\n\nBarry got his cell phone out and tapped the screen. He opened Caitlin's car door, then closed it. He walked briskly around his car and got in.\n\n\"Hey, Henry, that BMW, the Two thousand four; you got any problem I let Caitlin borrow it for a bit?\" Barry asked when Henry answered his telephone.\n\nHe smiled as Caitlin buckled herself into the passenger seat, then rested her head on his shoulder.\n\n\"Uh huh, Merry Christmas to you too; now, that car?\" Barry asked and backed out of the driveway.\n\n\"Well, seems Miss Stacy decided to drive through my tulips, yes the ones right in front, yeah, drove right through them, will you stop talking so I can talk?\" Barry said as he drove toward Superior Motors.\n\n\"Anyway, pulled out of them and slammed right into Caitlin's car; yes that little Saturn of her's; yeah, I agree, it's an improvement, but still the girl needs a, what? Tell Shirley call her on her own phone,\" Barry said as he pulled onto Highway 52.\n\n\"That Shirley? Give me the phone,\" Caitlin demanded.\n\n\"The BMW? Oh, okay, all right, here,\" Barry said and gave the phone to Caitlin.\n\nCaitlin was still squealing and laughing into his phone when Barry pulled up to the shop. He left her in the car while he went to get the keys for the gate, and the BMW Z4.\n\nAt the St. Martin home, Gary St. Martin, the oldest of their four sons screwed up his face in confusion as his usually quite stoic mother squealed and chattered on the telephone like a teenager.\n\n\"Who's Mom talking to?\" he asked.\n\nHenry smiled as he glanced toward the kitchen where Shirley paced back and forth, talking animatedly.\n\n\"Caitlin; she's your Mom's best girlfriend,\" Henry said.\n\n\"Caitlin; that little red head that was at the cider press?\" Mattie, Frank St. Martin's wife asked.\n\n\"Who's Caitlin?\" Frank asked.\n\n\"This little red head, can't be more than twenty one, twenty two years old,\" Mattie sniffed dismissively.\n\n\"And showed your mother how to get 'Candy Crush' on her phone,\" Henry smiled as Shirley rejoined them.\n\nCaitlin had pulled Henry aside at the showroom while Barry was showing a potential customer a Ferrari and whispered to him what she was looking for.\n\nHenry pulled up the London Auction House web site and almost immediately, they found the service manual.\n\n\"Here; I got ninety eight bucks,\" Caitlin whispered, sliding the money over to Henry.\n\nHenry had called Shirley laughing.\n\n\"Ninety eight bucks! That won't even cover the shipping!\" he'd hooted.\n\n\"Get it,\" Shirley had ordered. \"Get it and tell that girl her ninety eight bucks covered it exactly.\"\n\n\"Honey, last bid was six hundred and twelve pounds,\" Henry had protested. \"In American dollars that's...\"\n\n\"I don't care, you get that girl that book,\" Shirley had said.\n\nHenry would not call his wife a cheapskate but she certainly did not throw away money frivolously or on whims. Their four boys, when growing up, were denied nothing that they\n\nneeded, but had to present a convincing argument to get anything that they wanted.\n\n\"Uh, duh,\" Jack Landry had laughed when Henry made mention of Shirley's demand. \"Caitlin's the daughter she never had.\"\n\nFortunately, for Henry, he did get the book, at a cost of seven hundred pounds. Shirley had just smiled and shrugged when Henry told her how much it cost them.\n\nAt the showroom, Caitlin scrambled out of the Astin Martin and yanked on the heavy glass door of the showroom.\n\n\"Shirley says 'Merry Christmas' and she's so glad you like your Christmas present,\" Caitlin called out as she entered the darkened interior of the showroom.\n\n\"She knows about...\" Barry asked as he came out of the small office next to Bob Robichaux's garage.\n\n\"Yeah, Mister Henry helped me, remember?\" Caitlin said. \"Now, I'm getting that Maserati, right?\" \n\n\"No ma'am,\" Barry laughed and pointed through the side door toward the 2004 lipstick red Z4.\n\n\"That? That's a used car!\" Caitlin protested.\n\n\"Uh, excuse me? And so is your Saturn,\" Barry said.\n\n\"I will get that car,\" Caitlin promised, thumping him on his chest.\n\n\"And pigs will fly out of my ass too,\" Barry promised.\n\n\"Then we'll have free pork chops but I will get that car,\" Caitlin said, kissing him on his lips.\n\n\"Thought you wanted the boat,\" Barry reminded her.\n\n\"Now? Ooh, it's too cold for that!\" Caitlin exclaimed.\n\n\"Caitlin Weinstein, you are a mess,\" Barry laughed as he locked the front door of the showroom and ushered her through the side door.\n\n\"Let me get the gate open and you can just drive it on out of here,\" Barry said, unlocking the gate of the pre-owned car lot attached to the showroom.\n\nShe pulled out and sat, waiting for him while he closed and locked the gate, then went to his own car.\n\n\"My, damn it; you got my phone!\" he called out as she drove away.\n\nBy the time he got into his car, started it, and drove away, she was already out of sight.\n\n\"Oh, thank goodness,\" Barry said when he saw the red Z4 in his driveway.\n\n\"Forgot your phone, you know that?\" Caitlin asked as she got out of the car. \n\n\"How you supposed to text me if you don't have your phone?\" she asked, kissing him.\n\n\"Told you, I do not text, I will not text, I will never ever in a million years text you,\" he smiled as she wormed her arms around him, hugging him tightly, right in his driveway, right out in the open, for everyone to see.\n\nAt the Bender jail, Stacy Falgout glared in raw bitterness as Sergeant Elise Richards pulled on the vinyl gloves.\n\n\"Oh for God's sake is this really necessary?\" she screamed.\n\n\"Yes ma'am, it is,\" Elise said calmly.\n\n\"And I suppose you get off on this, fucking dyke,\" she hissed at the uniformed officer.\n\n\"Ma'am, my son and daughter are at home, playing with their new pogo sticks, two of my nieces are having their very first Christmas ever,\" Elise said. \"My baby sister is playing with the very first puppy she's ever had in her whole life and I'm missing it because you decided you'd take a swing at my husband.\"\n\nShe leaned close to Stacy.\n\n\"So, we can do this the easy way; you cooperate and it'll be over in a minute,\" Elise said. \"Or you can continue to piss me off and make this really hard on yourself; which will it be?\"\n\nStacy gritted her teeth and the body cavity search was over in a matter of seconds.\n\n\"Thank you; you can put that uniform on; unless you'd like to put your robe back on,\" Elise said, throwing the gloves into the wastebasket.\n\n\"Thank you,\" Stacy said grudgingly, slipping into the orange jumpsuit.\n\n\"You're welcome, ma'am,\" Elise said, the picture of professionalism.\n\nAt her trailer, Anita took the bread out of her mother's hands and quickly slathered on mayonnaise, brown mustard and then sprinkled a small amount of red pepper flakes onto the bread.\n\nMiss Alvarez made her own mayonnaise with egg whites and olive oil, squeezed in a little lemon juice and then took the pepper mill and put some fresh cracked black pepper in the emollient.\n\nNow, eating the store brand cheap spread, Anita tried to 'dress it up' a little, make it more palatable.\n\n\"And,\" Anita said, layering the turkey onto the bread, spooning a little of the gravy on and sliding it into the oven open faced.\n\n\"They teach you that at that school?\" Louisa asked, watching with real interest as Anita dug out a can of fruit cocktail and quickly divided the can into two bowls.\n\n\"No ma'am,\" Anita said and pulled the now warm sandwiches from the oven.\n\nShe knew her mother would be hurt to find out that a complete stranger was teaching her how to cook, how to eat healthier foods. She knew her mother would be hurt to find out that a complete stranger was washing her clothes, making those small repairs.\n\n\"Saw it on that cooking show, one comes on after that Rodney Prejean show,\" Anita lied.\n\n\"What, oh oh yeah, that,\" Louisa agreed. \"That Rodney's a real piece of work, huh?\" \n\n\"Oh, I can't stand watch him!\" Anita said. \"I mean, last week, when he had on that what was it, Gay Uncles That Turn Their Nephews? I wanted to vomit!\"\n\n\"Yeah, the last one was the worst,\" Louisa agreed and took a giant bite of the sandwich. \"The nephew said his parents left him with his uncle while they went on some trip they won to Cancun; left him there for two weeks! And KNEW the uncle was gay!\"\n\nShe swallowed the bite.\n\n\"Oh, man! That red pepper there kind of sneaks up on you, don't it,\" Louisa said and gulped her beer.\n\nAt her Brand mother's house, Caitlin talked with Grandmother, telling her about Barry.\n\n\"Leave your momma to me,\" Grandmother wheezed.\n\n\"Thanks, Grandmother,\" Caitlin said.\n\n\"Uh huh,\" Grandmother said. \"You sure, though? Forty eight? Ain't he kind of young?\"\n\n\"Kind of... What?\" Caitlin asked, mouth open. \n\n\"Oh. Oh, you meant he's YOUR boyfriend; thought you'd picked him out for me,\" Grandmother smiled. \n\nCaitlin giggled and squeezed the old woman's hand.\n\n\"You giving me a ride in that bad ass beamer, feel me girl?\" Briah demanded from the doorway.\n\n\"Oh, whatever, girl, and quit being all ghetto; you double Caucasian and you know it,\" Caitlin said, but did grab her coat. \"Now, come on; we still got to go see Daddy.\"\n\n\"\"Let me grab his...\" Briah said and dashed to grab Edmund's gift from under the tree.\n\n\"Tell that man I said 'Merry Christmas,'\" Grandmother said.\n\nAt an apartment building that had seen better days, Edmund Weinstein, a thirty seven year old man with bright red hair and a pale face with a plethora of freckles smiled as he looked at the four presents underneath his tiny Christmas tree. Caitlin and her sister had just called, said they were on their way over.\n\nHe remembered Theresa's haughty announcement that she and her boss had fallen in love and her demand for a divorce.\n\nAt first he'd thought to fight it, until his father took him out for a beer and asked him, \"You really want to hold onto a girl drop her drawers for the first rich man says 'let's screw?' No, no, let him be the one find out what kind of girl he's dealing with, eh?\"\n\nTheresa's boss had not wanted a nineteen year old girl with a baby; he had just wanted to fuck a nineteen year old white girl with big tits. Her announcement that she was pregnant nearly caused his forty two year marriage to come to an end; his wife agreed to stay married if Zackary Fielder agreed to fire the 'white slut' and he did so. Caitlin had not understood why, when all of her friends had a mommy and daddy that lived together, why didn't she? And she had not understood why people stared at her and her mommy as they pushed her baby sister around in the stroller. She did understand, though, she was a very lucky little girl; most of her friends only had one birthday party; she had two. Most little girls only had one Christmas tree; she had two.\n\n\"Daddy,\" Caitlin very sadly told her father one day. \"Briah doesn't have a birthday party like me.\"\n\n\"What do you mean?\" Ed had asked his now six year old girl.\n\n\"My birthday, I went to Chucky Cheese and got to play all the games and everything,\" Caitlin said. \"And Briah's now four years old and she didn't get nothing.\"\n\n\"She didn't even have cake? And ice cream?\" Ed asked.\n\n\"Well yeah, and Momma and Grandmother and me sang but that's it,\" Caitlin said sadly.\n\nThat night, as Caitlin played in her bath, Ed called Theresa.\n\n\"You want to what?\" Teresa asked.\n\n\"Tell Briah I am so sorry I forgot it's her birthday and take her and Caitlin to Chucky Cheese,\" Ed repeated.\n\n\"And you threw that away,\" Grandmother said, lighting yet another cigarette.\n\nBut now Briah knew she was a lucky little girl; most little girls only had one birthday party, she had two. And she and Caitlin even had another bed they could sleep in, and they played Indians when Daddy put the blanket on the floor and put a broom, a mop, and a rake in there and made them a teepee.\n\n\"And you threw that away?\" Grandmother asked Theresa when Briah and Caitlin told her all about Briah's birthday party at Chucky Cheese and playing Indians and now Briah had a Daddy too and there's a swimming pool and Daddy said he'd teach Briah how to swim and...\n\nChapter 15\n\nBarry sat with his back to the small stage at the Dead End bar, much to the consternation of the dancer who could tell that the man's suit was an expensive one. She could tell that the trench coat he had laid over the other chair to his left was an expensive coat. But how was he supposed to tip her if his back was to her?",
        "There were other patrons and she smiled sweetly as they came up and dropped tips into the jar at the lip of the stage, five here, the occasional ten dollars there, but mostly one dollar bills.\n\nBrooke Robertson smiled vacantly as she again approached the customer; he'd been sitting in her section and waiting for nearly twenty minutes, said he had a friend joining him for lunch.\n\nBarry smiled widely and stood up.\n\n\"Mr. Weinstein, over here,\" he said loudly and waved.\n\nEd squinted through the smoke and saw a well dressed man, , about his age, waving. He frowned and approached the table.\n\n\"Barry Delacroix, Mr. Weinstein; you are Caitlin's father, right?\" Barry said, giving Ed a firm handshake.\n\n\"Uh yeah, yeah, you said this is about Caitlin?\" Ed said, also giving a firm grip.\n\n\"Yes, Mr. Weinstein, go on, have a seat; you want anything? They've got the absolute best iced tea anywhere,\" Barry said, suddenly very nervous.\n\nHe routinely made sales that netted Superior Motors tens of thousands of dollars in commissions, brokered deals with European markets that resulted in thousands of dollars in savings, brokered other deals with South American markets that usually garnered him several hundreds of thousands of dollars. And sometimes even lost him just as much. But none of those deals were as important as dealing with a nineteen year old girl's father.\n\nHe sat and wondered what his reaction would be if this man would come to him and tell him \"I'm dating Toni.\"\n\nHe knew he would not be happy at all. But would he let Toni make her own decisions? She was only eighteen years old, and Barry had to admit, had been very sheltered by him and by her three older brothers.\n\nAt the same time, though, Toni did occasionally did display maturity, did display some level headedness. At least she told that Boyd Eastman to take a hike. And she and her best friend, Anita, had an extremely\n\nsuccessful business going.\n\nBut dating a man nearly thirty years older than herself?\n\n\"Uh, yeah, yeah, give me the iced tea,\" Ed agreed and then watched Brooke's rear end as the waitress walked away, the bottom of her cheeks very visible in the very short shorts she wore.\n\n\"Chicken fried steak is their special today; it's extremely good, comes with skillet gravy, mashed potatoes and green beans,\" Barry said as Ed's attention was now riveted to the girl that gyrated on stage to Dokken's 'Breaking The Chains.' \"Ever been in here before, Mr. Weinstein?\"\n\n\"No, no, I mean, it used to be that biker bar; hell I was afraid come in here,\" Ed admitted, blushing in embarrassment. \"But, uh, call me Ed, huh?\"\n\n\"Gentlemen, need a little more time?\" Brooke asked, smiling as she leaned over to put Ed's drink down, a maneuver that caused her half shirt to gape open.\n\n\"Uh, yeah, yeah, that country fried steak does sound good,\" Ed agreed. \n\n\"Same for me,\" Barry said.\n\n\"Great,\" Brooke smiled.\n\nEd admired the girl's belly, squinting at the rose tattoo that peeked out of her low rider shorts and her navel ring.\n\n\"When I was a kid, only ones had tattoos was bikers or sailors; and never even heard of anyone putting an earring anywhere but in their ear, am I right?\" Barry commented and Ed nodded in agreement.\n\nBarry sipped his iced tea, stalling for time.\n\n\"Got to say, you walked in, I knew right off the bat you were Caitlin's dad, explains where she gets the red hair and freckles,\" Barry blurted. \"But never ever in a million years would I look at you and say 'that guy looks like a Weinstein.'\"\n\n\"I'm what happens when a rebellious Irish Catholic girl meets a smooth talking Jew on the campus of L.S.U.,\" Ed smiled, then lost the smile. \"Yeah, yeah, you said this was about Caitlin?\"\n\n\"Might as well get it over with, Barry thought to himself, forcing his face to relax.\n\n\"Ed, I've been sitting here wondering how I would react if you told me you were dating my daughter and I've got to admit, I really don't think I'd like it one bit,\" Barry said.\n\n\"You're what?\" Ed said loudly.\n\n\"But I do think I'd listen to what you had to say,\" Barry went on.\n\n\"You're dating my...\" Ed said, getting to his feet.\n\nBarry also stood, ready to back up. Ed's handshake had told Barry that Ed worked with his hands, might be wiry, but had strength. A punch from him would hurt. Barry could probably be the victor in the fight, but at a considerable cost.\n\n\"Gentlemen, there a problem?\" Officer Mike Stevens asked, walking up behind Ed Weinstein.\n\n\"No sir,\" Barry said.\n\n\"Damned right there's a problem!\" Ed yelled.\n\n\"Y'all need to keep it down, y'all are getting too loud,\" Brooke said, gently pushing Ed back into his chair.\n\n\"You, you're what?\" Ed snarled at Barry who slowly got back into his own seat. \"you got to be at least thirty, huh?\n\n\"Forty eight,\" Barry admitted.\n\n\"Forty eight!\" Ed yelled.\n\n\"What'd I tell y'all? Y'all are getting too loud,\" Brooke said, putting the two plates down on the table.\n\n\"He's forty eight,\" Ed snapped at her. \"And he's dating my nineteen year old daughter!\"\n\n\"Older men are sexy as shit,\" Brooke smiled her vacant smile.\n\n\"Listen, believe me, I do understand, I'd be upset too,\" Barry said.\n\n\"Listen, y'all are adults, huh?\" Brooke whispered attempting to placate Ed. \"Talk it out like adults, all right? I been here since ten thirty this morning and it's already been a long day for me; last thing I need is a fist fight in my section, all right?\"\n\nEd glared at her and she smiled a hopeful smile at him. Slowly, he lost his glare, then nodded his head.\n\n\"Thanks,\" Brooke smiled a genuine smile, then turned to check on another customer.\n\n\"You, start talking,\" Ed demanded and cut a too large chunk of the tender steak.\n\n\"That's too big,\" Barry said, cutting a more manageable piece of meat.\n\n\"I'm thirty seven years old; I don't need you telling me how to eat,\" Ed snapped.\n\n\"Toni and Caitlin have been friends since the, I want to say the fifth grade?\" Barry said. \"Said she had this girl had been in the hospital, someone tried to run her over and she was so cool because she had real long red hair and could she get red hair and anyway, Caitlin came to Toni's tenth birthday party and right away puts BJ, Michael, and Patrick, those are Toni's older brothers, puts them in their place; see they're running around trying to be disruptive, you know how boys are and Caitlin tells them they need to behave or they won't get any cake and from that day on, we all respect the hell out of her.\"\n\n\"You're Toni Delacroix's dad?\" Ed said, still chewing the large chunk of meat.\n\n\"Yep, that's me,\" Barry smiled.\n\nBarry cut another chunk of the meat and dipped it into the bowl of gravy.\n\n\"Anyway, they've been friends and Caitlin's always been coming around, personally I love it; she's there and she keeps everyone else in line and when Darlene; that was my wife, when Darlene announced she's leaving me, Caitlin called, told me she was real sorry Miss Darlene was leaving me and came and got Toni and Toni went and...\" Barry chewed the morsel fully before swallowing.\n\n\"And brought her over to my house,\" Ed said and dumped the bowl of gravy on the rest of his steak and the mashed potatoes, also getting the green beans with the gravy. \"I remember that.\"\n\n\"Toni does too,\" Barry smiled sadly. She's thirteen years old, her whole world's falling apart, and this man made a teepee in the middle of the living room and they were Indians for the whole weekend. It was so silly it was fun.\"\n\nBarry blew his nose.\n\n\"I'm sorry Ed; I never did tell you thank you for that. What could have been the absolute worst weekend of my little girl's life was an okay weekend; she got to be an Indian and be a kid while her mother and I screamed and cursed and threw things at each other,\" Barry said.\n\n\"Welcome,\" Ed mumbled, slightly embarrassed at seeing another man get teary eyed.\n\n\"Everything all right here?\" Brooke asked, putting a hand on Ed's shoulder.\n\n\"Yeah, yeah, gravy's the best,\" Ed said.\n\n\"More iced tea?\" Barry asked.\n\n\"Got it, Sugar,\" Brooke said and gave Ed another genuine smile before walking away.\n\nBarry smiled slightly; the talk was going a little better than he'd hoped. Ed's eyes were firmly on Brooke's figure and not glaring at him.\n\n\"Anyway, Darlene and I get divorced and your Caitlin's there, being a friend to Toni, being a help to me, good God, even came over and helped us pack when we sold that house and moved where we are now,\" Barry remembered. \"Anyway, last year, year before? Starts asking me out on dates. At first I'm like 'what is she talking about? I'm a hundred years old; she's a beautiful young lady, I mean, good God is she headstrong, huh? And...'\"\n\n\"You been sleeping with her, huh?\" Ed suddenly demanded, slamming his hand on the table angrily.\n\n\"What? No! No, of course not!\" Barry denied loudly.\n\n\"And here you are; y'all are getting too loud again,\" Brooke said, putting the two fresh glasses of tea down on the table.\n\n\"If I find out you are...\" Ed threatened Barry.\n\n\"Ed, I give you my word, one man to another, I am not,\" Barry said, holding up a hand.\n\nAfter a moment's stare off, Ed resumed shoveling his food down.\n\n\"If you're interested, they got a chocolate pie, a caramel pie, and a lemon cheesecake must weigh five pounds,\" Barry said. \"And their coffee is fresh ground when you order it; I'm having the chocolate pie.\"\n\n\"I can't tell you the last time I had cheesecake,\" Ed said as he scraped the last of the potatoes into his mouth.\n\n\"So when you got to be back?\" Barry asked Ed as he nodded with his head to Brooke.\n\n\"When I get there,\" Ed said, a little boastfully.\n\n\"Two coffees, Ed, you do want coffee, right? And a cheesecake for him and a chocolate pie for me, please,\" Barry smiled as Brooke quickly gathered their empty plates.\n\n\"Well, I can see y'all hated the dinner,\" she joked. \"Hopefully y'all like the dessert.\"\n\n\"I'll try to choke it down,\" Ed joked back.\n\nOver coffee and dessert, which Ed again ate too quickly, Barry listened as Ed talked about his job as an appliance repairman for Johnson's Furniture and Appliances. Barry could tell that Ed rarely got to talk about his job, so listened patiently, even though he was bored to tears. \n\nWhen he finished talking about his job, Ed switched to talking about his courtship of Caitlin's mother.\n\n\"Yeah, Theresa Chastaine? Grew up right down the street from me, tells me when we're eight years old we're going to get married and I'm like girls are so yucky,\" Ed prattled on and whistled as he scalded his upper lip on the hot coffee.\n\n\"Anyway, I'm going to join the Marines and so I'm not about to get married, then ten years later, right before we graduate from high school, she comes up and says 'guess what, Daddy' and there goes my plans join the Marines,\" Ed said, this time blowing on the coffee before sipping it.\n\n\"Any idea how that happened?\" Barry asked, smiling wryly.\n\n\"No, not really, Ed returned the wry smile. \"So I go to Vo-Tech at night, working my ass of at Domino's Pizza during the day and Theresa's working at First DeGarde Bank and we're doing all right, you know?\"\n\n\"Anyway, couple of months later, along comes our Caitlin; named her after my Mom,\" Ed said. \"Six months later, rather than go back to work at the bank, Theresa gets a job as the personal assistant for some big shot lawyer, Zachary Fielder and next thing I know, she's telling me she's in love and see you later, loser.\"\n\n\"Pretty much same words Darlene tells me,\" Barry said. \"Later, loser.\"\n\n\"Guess they think that's cute, huh?\" Ed shook his head and gulped the last of his coffee.\n\n\"Anything else, Gentlemen?\" Brooke asked as Barry finished his pie.\n\n\"Think that'll do it,\" Barry smiled and handed Brooke his American Express card.\n\n\"Uh, what's my half?\" Ed asked, digging out a very well beaten up wallet.\n\n\"I'm one asked you to join me, it's on me, Ed,\" Barry smiled. \"But you've been sitting there with your eyes glued to that girl dancing; why not give her a five or something?\"\n\n\"I can do that,\" Ed agreed and walked over to drop the five into the tip jar.\n\n\"Hope y'all come back and see me, hear?\" Brooke smiled vacantly as she slid the charge slip over to Barry.\n\n\"Keep making that pie like that, I know I will,\" Barry promised.\n\n\"And that cheesecake,\" Ed agreed.\n\nEd shrugged on his weathered old coat and Barry pulled on his long coat.\n\n\"Thanks again, Ed,\" Barry said, shaking the man's hand.\n\nOutside, Barry walked toward his Astin Martin Db5 and Ed's eyes opened wide.\n\n\"I seen that when I pulled up!\" he said as he stood next to his beat up old Silverado pick up truck. \"That's one of them James Bond cars, right?\"\n\n\"It is,\" Barry agreed, holding up the keys. \"Want to drive it?\"\n\n\"Yeah, right,\" Ed laughed. \"You're just trying to sell me one!\"\n\n\"Hey Ed, no offense, but I KNOW you'd never buy one; it's not your kind of car,\" Barry smiled.\n\n\"What's that mean?\" Ed asked, offended.\n\n\"It's so completely impractical; this car serves absolutely no purpose whatsoever, other than to go fast and look good,\" Barry said and pointed to Ed's truck. \"That? That's not very pretty, but it's practical. You can use it to go to the store, to the football game, or to move your best friend over the weekend, take it to the beach and don't worry if it gets a little salt water on it; it'll be fine.\"\n\n\"Yep, and it's paid for,\" Ed said, slapping the side of his truck.\n\n\"And you've probably had it for ten, fifteen years, huh?\" Barry agreed, still dangling the keys to his car. \"But, come on, let's go for a ride. When's the last time you were able to tell your girlfriend you drove a James Bond car?\"\n\n\"Fine, fine, Graham Johnson can handle the store on his own,\" Ed agreed.\n\n\"All right, take this north, cut over on nineteen and when we get other side of Elgee, right when we cross Norman road?\" Barry said, getting into the passenger seat.\n\n\"Weinstein, Ed Weinstein,\" Ed said, flexing his hands on the steering wheel of the small sports car.\n\nHe kept a tight rein on the car all the way through Elgee, enjoying the looks others gave the sleek automobile. When they crossed over Norman's Road, Barry nudged Ed.\n\n\"Go ahead, let her have it,\" he encouraged.\n\nIt frightened Ed somewhat, how quickly the car responded and how they were traveling along at a conservative forty five miles an hour and then suddenly screaming down the highway at a hundred and nineteen miles an hour, if the digital display was to be believed.\n\n\"What's the top speed in this?\" Ed asked, hands tense on the steering wheel.\n\nDon't know, never got that high,\" Barry said calmly. \"Highest I've gone is one thirty one.\"\n\nEd let up on the accelerator and took the next turn to return to DeGarde.\n\n\"This thing is unbelievable,\" Ed said, slightly awed.\n\n\"But serves no purpose whatsoever, other than to look good and go fast,\" Barry agreed.\n\n\"And it does do that,\" Ed agreed.\n\nAt Grandmother's house, Caitlin tried to do her homework, tried to concentrate, but just couldn't.\n\nSuppose Daddy didn't like Barry? Suppose Daddy forbade her from seeing Barry? Barry was quite a bit older than her. It would break her heart to go against her Daddy's wishes,\n\nbut hopefully, in time, Daddy would forgive her.\n\nMom wasn't happy about it, but tightened her face when Grandmother smirked and pointed at Briah and then Bobby.\n\n\"How old was Briah's Daddy?\" Grandmother asked, taking the mask away from her face long enough to wheeze. \"Oh, and what about Bobby's Daddy, huh? A nice young fifty two, right?\"\n\n\"Okay, Mother, you've made your point Mother, thank you Mother, you can shut up now, Mother, I'll be putting a pillow over your face while you sleep tonight, Mother,\" Theresa had snapped, stomping away.\n\n\"Please God,\" Caitlin murmured. \"Please let him like Barry.\"\n\nShe yelped when her cell phone rang.\n\n\"Hello?\" she asked, holding her breath.\n\n\"Didn't like it, but said you are a grown woman and can make your own decisions,\" Barry said and pulled the phone away from his ear as Caitlin screamed.\n\n\"Oh, you're kidding, oh my God, oh that's so great, oh I love you, Oh! I have to call Shirley! Love you, bye!\" Caitlin screamed.\n\nBarry shook his head as Caitlin disconnected the call.\n\n\"Hmm,\" Henry said, squinting at Barry when Barry strolled into the showroom. \"No bruises, no blood.\"\n\n\"No bullet holes,\" Jack said.\n\n\"Must have gone all right, huh?\" Bob Robichaux said.\n\n\"It went all right,\" Barry agreed and watched a Mercedes-Benz pull into the parking lot.\n\n\"Oh, I have to call Shirley,\" Henry mimicked a feminine squeal.\n\n\"Oh, Caitlin's already on the phone with her,\" Barry squealed back. \"But here comes a customer, let's try to act professional, all right?\"\n\nChapter 16\n\nAnita grimaced as she chased down the last bite of her peanut butter granola bar with the strawberry protein drink. The combination was not very pleasant.\n\nBut when she had brought home a box of Oats n' Honey granola bars, that box had been emptied in less than two days.\n\n\"Look! Look! Right here! 'Anita' It has my name on it, right here!\" Anita had screamed at an uncaring Luther and Marco.\n\n\"What?\" an unsympathetic Louisa had demanded. \"You been eating our food; we can't eat yours, huh?\"\n\nThe Cinnamon and the Maple ones had fared no better. The peanut butter ones, however, were largely ignored. So she brought home the peanut butter granola bars.\n\nThe protein drinks had also suffered a similar fate. It had taken the ravenous trio only three days to drink all of her chocolate drinks. They didn't care as much for the vanilla ones; she'd actually managed to drink two of the twelve bottles before they emptied that case. But the strawberry ones had only lost five of the twelve. Anita did wonder which one of the trio had tried them and gave it two more tried before deciding they just didn't care for strawberry protein drinks.\n\nLouisa waddled into the kitchen, looked at Anita's outfit and asked, \"Where you going so early?\"\n\n\"It's almost eleven o'clock, Mom; it's not that early,\" Anita answered.\n\n\"On Saturday? Early enough,\" Louisa grumbled as she peered into the nearly empty refrigerator for something to eat.\n\nAnita used Louisa's distraction to make her escape.\n\nShortly after A AND A Soaps had begun to make a profit, just as soon as Anita began bringing cash into the house, Luther, Louisa, and Marco began with the 'let me borrow ten, let me borrow twenty' and never repaying these loans. Toni, and Miss Sophia, their lawyer, urged Anita to open her own checking account. That checking account came with a debit card and now Anita never had any cash on her, so the trio could not borrow any money.\n\nMarco still bore the scar on his forearm; he had tried to take Anita's debit card and found out that Anita was still quite handy with her blade and had absolutely no hesitation to use it.\n\n\"Ever catch you in my purse again,\" he hissed hatefully into his now quite frightened face, \"I will kill you.\"\n\nAnd he knew she meant it.\n\nLuther seemed to know he would get no such warning; she would simply gut him and leave him to die. SO he didn't even attempt to help himself to Anita's purse.\n\nAnita dashed into the bathroom, used her whitening mouthwash, noticing with a smirk that none of the others in the house liked it, dabbed on a little of her perfume, then prayed that Toni would be on time.\n\n\"Where you going?\" Luther demanded then turned to Louisa. \"Where's she going?\"\n\n\"Don't know, God, I hate them peanut butter bars; why's she get them, huh?\" Louisa complained.\n\nOutside, Anita smiled as Toni pulled up just as Anita shut the door of the trailer.\n\n\"Dropped off them soaps; believe this? They're like already out of them cherry ones,\" Toni said as Anita buckled up.\n\n\"The other ones are all right?\" Anita asked after a very brief hesitation.\n\nAnita had almost said she was tired of soaps, she was tired of candles, she was tired of bookkeeping. She was tired of every spare moment of their lives being wrapped up in A And A Soaps.",
        "Then she remembered; the tennis shoes on her feet cost more than the new television that Luther was so proud of. Anita remembered that she had a cell phone in her leather purse, a cell phone the government didn't give to her, in a real leather purse, not a cheap vinyl purse. Anita remembered that they were going shopping for a car; she had managed to save up nearly eight thousand, despite the quarterly Sales taxes they'd just paid, despite the purchase of an industrial mixer, despite the purchase of several candle molds, she had managed to save up a sizable amount of money.\n\nThey whizzed past one used car lot, then a second one. Anita looked at Toni.\n\n\"Where are we going? You just drove past...\" Anita asked.\n\n\"Uh, and like what does my Daddy do?\" Toni asked.\n\n\"Uh and like I can afford any...\" Anita said.\n\n\"Uh, and like you'll never know unless we ask?\" Toni said as she pulled up to Superior Motors.\n\nInside the showroom, Bob Robichaux looked up from wiping an imaginary spot from the gleaming black Maserati.\n\n\"Barry, your daughters are here,\" he called out.\n\n\"Remember when he only had one?\" Henry asked Jack.\n\n\"Uh, remember when you didn't have any?\" Jack asked.\n\n\"Oh shut up,\" Henry laughed.\n\n\"Uh, where's Shirley right now?\" Jack continued his assault.\n\n\"Baton Rouge, because Babbage's and Abdul's just didn't have any cute tops and Caitlin's size,\" Henry admitted, giving Jack a friendly shoulder punch.\n\n\"Hi Daddy,\" Toni called out as she entered the showroom. \"Anita like needs a car.\"\n\n\"She like does?\" Barry asked, giving Toni a kiss, then kissing Anita. \"Wow, like guess what? I like sell like cars.\"\n\n\"Like I told her that,\" Toni said, waving 'hi' to Mr. Jack, Mr. Henry, and Mr. Bob.\n\n\"Okay, so what are you looking to get?\" Barry asked, ushering them to the side lot where the pre-owned automobiles were.\n\n\"I don't know,\" Anita admitted.\n\n\"She only like has six thousand,\" Toni said.\n\n\"Hmm,\" Barry looked around.\n\n\"Toni, I can't...\" Anita said, also looking around at the automobiles.\n\nThey displayed tags of eighteen thousand, twenty thousand; there were a few that displayed thirty and fifty thousand dollar tags.\n\n\"Oh!\" Barry said. \"Well, here's a E365, very nice, only has seventy four thousand miles on it.\"\n\n\"But that's...\" Anita said, looking at the price tag on the driver's window.\n\n\"It has been in one accident,\" Barry admitted as Toni looked at the metallic green BMW.\n\n\"But y'all want...\" Anita argued.\n\n\"One accident?\" Barry said. \"And I say yes, but it was just a fender bender; you look closely you can tell where they replaced the rear quarter panel and you say but I don't want a car that's been in an accident and I say look, make me an offer .\"\n\n\"You can't even tell,\" Toni said, trying to tell which rear panel had been replaced.\n\n\"But Mr. Barry, this is...\" Anita stammered.\n\n\"And you say five thousand and I say five thousand are you crazy? And you say okay how about fifty five and I say are you kidding me? You must be kidding me; it's got a blue book value of and you say but it's already got seventy four thousand miles on it, it's been in an accident and I'll be the third owner of it and I say, all right listen, don't tell anyone, don't tell anyone, but six thousand, you pay all title and tax and you say let me drive it first and I say the keys are in it, let me get the gate, all right?\" Barry said.\n\n\"He got rid of that ugly ass BMW,\" Bob commented as he watched a tearful Anita hug Barry.\n\n\"That green one? Thank God; thing's been here for almost seven months,\" Jack said, blowing on his cup of coffee.\n\n\"God, she drives like an old woman,\" Henry commented as they watched Anita pull out onto Highway 52.\n\n\"Gentlemen, I'll give you the commission as if I sold it for the asking price,\" Barry promised.\n\n\"That's fine,\" Bob shrugged.\n\n\"Really, don't worry about it,\" Jack said. \"Want her in a good car.\"\n\n\"Oh, and I gave Toni our lunch order; y'all all right with Clark's?\" Barry said.\n\n\"Oh, I don't know,\" Henry sighed dramatically. \"Shirley's wanting me to cut back on them carbs.\"\n\n\"Sissy,\" Jack said.\n\n\"Uh huh, and who had to hide his jar of peanut butter cups when Melanie paid him a surprise visit?\" Barry asked.\n\nInside the car, Toni played with the electric buttons, adjusting the passenger seat to her liking.\n\n\"Toni, I can't take this car,\" Anita declared.\n\n\"What? Like why? I mean, yeah, that is like an ugly color but...\" Toni said.\n\n\"But Toni, Mr. Barry's going to lose...\" Anita said as she turned into Clark's parking lot, making sure to stay well away from the other cars.\n\n\"And if like you had it and I really like needed it, would you give it to me?\" Toni asked.\n\n\"Well yeah, but...\" Anita said and tried to figure out what button lowered the window.\n\n\"Anita, my daddy like really loves you,\" Toni said, grasping Anita's hand as Monica, a pretty blonde waitress skated up.\n\n\"And I like really love him too,\" Anita admitted.\n\nEven though Anita could not remember a time that Luther had not been a part of her life, Anita considered Mr. Barry to be more of a father than Luther had ever been.\n\n\"Then let him, please, like just let him,\" Toni begged. \"You don't always have to be so like, oh, I don't know, so like all tough and stuff.\"\n\n\"Hi, welcome to Clark's,\" Monica chirped.\n\n\"I'm not always so like tough and stuff,\" Anita protested.\n\n\"Hi, I want a chili burger, um, like add jalapenos and small fries, oh! Add cheese,\" Toni called out.\n\n\"Smokehouse, hold the tomatoes add grilled onions, small fries,\" Anita said.\n\n\"And these too,\" Toni said, handing Monica the piece of paper Barry had written their lunch orders on.\n\n\"I don't,\" Anita protested as Monica rapidly skated away.\n\n\"You do,\" Toni said quietly.\n\n\"When do you ever just like let me love you?\" Toni asked quietly, touching Anita's face. \"Huh? Who's always got to be like the one on top?\"\n\n\"I just, Toni, I just don't want you thinking I'm like using you,\" Anita admitted.\n\n\"Like I know you're not like just using me,\" Toni whispered.\n\nToni smirked when Anita proved her point by trying to insist on paying for the meal with her debit card.\n\n\"Here, like keep the change,\" Toni called out, handing Monica the fifty dollar bill Barry had given her.\n\n\"Thanks!\" Monica said brightly and skated away before Toni could change her mind about the seven dollar tip.\n\n\"I guess we'll take it,\" Toni gave a dramatic sigh when they entered the showroom.\n\n\"Thank you,\" Henry said when Barry handed him his double bacon cheeseburger.\n\n\"So, how much did she beat you down?\" Bob asked as he dug out his chicken sandwich and onion rings.\n\n\"Oh, I tell you, it was horrible,\" Barry sighed. \"Brutal! I was begging, I was pleading, I was on my knees saying 'please, this is all I have, I've got eight mouths to feed, please' but do you think she cared?\"\n\n\"No she did not,\" Jack mumbled around a mouthful of his smokehouse burger.\n\n\"Like eight mouths to fee?\" Toni asked, trying not to drip any of her chili cheeseburger on her jeans.\n\n\"Mr. Barry!\" Anita protested, unfolding a napkin.\n\n\"I was crying, tears running down my face; if you look, you can see where the tears ran down,\" Barry said and leaned forward, trying not to get any of his chili cheeseburger on his suit.\n\n\"Here,\" Anita said, putting the unfolded napkin on Toni's lap.\n\n\"Ooh, glad I wasn't here; I hate seeing a grown man cry,\" Bob said and groaned as he got a big dollop of mayonnaise on his tie.\n\n\"Thanks,\" Toni smiled.\n\n\"Oh, well, at least you still have your dignity,\" Henry said.\n\n\"Yeah, sounds like he's got a lot of that left,\" Jack said, stuffing some onion rings in his mouth.\n\n\"Shut up, Mr. Peanut Butter Cups,\" Barry smiled.\n\nThey ate quickly while Barry and Anita filled out the paperwork.\n\n\"I like your hair longer like that,\" Henry told Toni as she gathered up all the sandwich wrappers.\n\n\"Oh thank you!\" Toni said, touching her blonde curls.\n\n\"Thank you again, Mr. Barry,\" Anita said, hugging the man.\n\n\"You're welcome; I love you,\" Barry said.\n\n\"Love you too,\" Anita mumbled into his chest.\n\n\"Sorry, Bob; that one's going to the dry cleaner's,\" Jack said, looking at Bob's soiled tie. \"Barry, I don't know how much of a discount you gave her but looks like it was worth it.\"\n\n\"Yep,\" Barry smiled as Toni's Lexus and Anita's BMW pulled out of the parking lot.\n\nThey drove to Toni's house, dropped off the Lexus, then went to Young Insurance, where Julie Chamblee, a pretty blonde agent helped them get insurance for the car.\n\n\"Really? It's your first car? And it's a BMW?\" Julie laughed. \"My first car was a beat up old Toyota.\"\n\nFrom there, they went to Early's, picked up more ingredients for more soaps and candles, then drove back to Toni's house.\n\nSo it was six o'clock before Anita finally drove home to the trailer park.\n\nOnce there, both Luther and Marco sneered and claimed that they could have gotten a better car at a better price, as well as getting her better insurance.\n\nLouisa glared at her daughter, then yanked her, almost savagely, into the kitchen.\n\n\"Uh, hey Missy, uh, you got you all kind of money be buying you some fancy ass clothes and shit and now a new car? Uh, you ever think maybe you need to give us something letting you live here?\" Louisa demanded.\n\n\"What?\" Anita asked, shocked.\n\n\"I mean, shit, think this place is like free?\" Louisa asked, indicating the trailer with a wave of her hand.\n\n\"You are joking, right?\" Anita asked, anger rising.\n\n\"No I am not joking!\" Louisa shrilled. \"Think this place is free?\"\n\n\"It is for you!\" Anita yelled. \"Who gets her a fat ass check every month supposed to be all handicapped and shit,\" Anita screamed.\n\n\"You got all kind of money, think you need pay your fair share,\" Louisa demanded.\n\n\"Fine, Mother, tell you what, I'll pay what Marco pays, how about that?\" Anita sneered.\n\n\"Marco ain't...\" Louisa said.\n\n\"That's right, Mother, Marco don't pay shit! But because I'm only one around here works, I got to pay? Bull fucking shit too!\" Anita screamed.\n\nLouisa moved to slap her impertinent daughter. She was too fat and too slow; Anita very easily blocked the slap and flipped open her blade.\n\n\"Don't. Even. Try. It, Mother,\" Anita hissed hatefully.\n\n\"Think you need to just get your shit and get on out of here,\" Louisa snarled.\n\n\"Fine; you and those other parasites have fun living in this shit hole,\" Anita laughed derisively.\n\n\"Not cool,\" Marco declared from her doorway as Anita hurriedly packed.\n\n\"I really think you owe us an apology, calling us parasites,\" Luther demanded.\n\n\"Fine, I'm sorry I called you parasites. How about Losers. Like that better? How about leeches? That better?\" Anita laughed and made sure all of her schoolbooks were in her backpack before very forcefully shoving him out of her way.\n\n\"Hey!\" he complained.\n\n\"Later, losers,\" Anita called out as she slammed the door of the trailer shut.\n\nAt the showroom, Barry was showing the black Maserati, the one that Caitlin claimed was hers, to a potential customer when his cell phone chirped.\n\n\"Daddy, like Anita had this really big fight with her Mom and it like all right she stays here?\" Toni begged.\n\n\"I need her mother's phone number,\" Barry demanded.\n\nThe customer was flexing his hands on the steering wheel, looking at the sleek dashboard so Barry called Louisa's number.\n\n\"Hi, Ms. Lopez? Hi, this is Barry Delacroix, Toni's Dad?\" Barry said pleasantly into the phone while the customer closed his eyes, resting his hand on the stick shift.\n\nBarry pursed his lips tightly as Louisa Lopez let loose with a string of profanities.\n\n\"Ms. Lopez, Ms. Lopez,\" he interrupted her. \"Ma'am? I was simply calling to let you know that Anita will be staying with us until this all blows over, all right? You have my number; you ever just want to talk, give me a call, okay?\"\n\nHe hung up while Louisa was telling him where Anita could go and called his daughter's cell phone.\n\n\"Hello?\" a nervous Toni answered.\n\n\"Anita is welcome to stay as long as she wants,\" Barry said and immediately pulled the phone away from his ear as Toni screamed happily.\n\nIn Toni's bedroom, Anita was still bitterly complaining about her mother.\n\n\"And believe this shit? Tells me I need to pay my fair share,\" Anita said.\n\n\"Oh my God, like no she didn't!\" Toni gasped.\n\n\"Yeah, believe that shit?\" Anita asked. \"I mean, what's that all about? Huh?\"\n\n\"Hmm, the rich like need to pay their fair share, hmm, now like who does that sound like?\" Toni giggled and kissed Anita.\n\n\"Huh?\" Anita said, not comprehending.\n\n\"Coach Dumas' class, like first day you're there, tell me the rich need to pay their fair share?\" Toni reminded her.\n\n\"Oh shut up,\" Anita said.\n\n\"But...\" Toni said, pushed Anita into a sitting position on the bed and straddled her, kneeling on the bed.\n\n\"Now that you're like in MY room, you need to like listen up, hear?\" Toni said\n\n\"What?\" Anita asked.\n\n\"Yeah, like no more of this being like all tough and stuff,\" Toni demanded, sitting on Anita's thighs.\n\n\"Toni I am not...\" Anita protested.\n\n\"You like need to let me, let me love you and like take care of you,\" Toni whispered, softly touching Anita's face.\n\nAnita opened her mouth to protest and Toni stuffed her tongue into Anita's open mouth.\n\n\"Now, first thing, I'm like starving; you?\" Toni said, bounding off the bed.\n\nToni might think she was the one in charge, but it was Anita that fixed their sandwiches, their drinks, and a fruit salad, then cleaned up after their light meal.\n\nChapter 17\n\n\"Ah, give me a bite,\" Caitlin ordered, mouth open wide.\n\n\"Ah, eat your own, huh?\" Barry said but did scoop up some of his Veal Corleone and gently feed it to her.\n\n\"Well?\" Shirley St. Martin asked as Caitlin finished chewing the tender veal.\n\n\"Ooh, that's good; I'm getting that next time we come here,\" Caitlin said.\n\nShe held out a fork of her Shrimp Scampi.\n\n\"Honey, you want to try mine?\" she asked.\n\n\"Sure,\" Barry smiled and accepted the bite of her food.\n\n\"Like mine just a little bit better,\" he conceded.\n\nThe door of the lounge at La Scalia's Italian Restaurant in Bender, Louisiana opened and the live music spilled out.\n\n\"Caitlin, do you dance?\" Shirley asked, sipping her glass of red wine.\n\nHenry St. Martin smiled; whenever Shirley drank red wine, he could count on her feeling a little amorous. Tonight, she had already drank two glasses so he could count on her being quite amorous.\n\n\"Why, Mrs. St. Martin!\" Caitlin gasped, fluttering her eyelashes. \"Are you asking me to dance? And you, a married woman!\"\n\n\"Caitlin, you kook!\" Shirley hooted as Caitlin grinned.\n\n\"Sweetheart, can you dance?\" Barry asked, smiling at Caitlin's mischievous grin.\n\n\"Yes I can; you?\" Caitlin asked.\n\n\"Little bit,\" Barry shrugged.\n\nAfter their meal, the two couples entered the lounge and Barry took Caitlin into his arms and guided her through a lively foxtrot.\n\n\"Show off,\" Henry playfully groused as he and Shirley joined them on the dance floor.\n\nThe band switched to a waltz and Barry pulled Caitlin in tightly.\n\n\"Love you,\" he murmured into her hair.\n\n\"Wait what?\" Caitlin asked, pulling her head back and looking into his pale blue eyes.\n\n\"Said love you,\" he smiled and twirled her again.\n\n\"You do?\" she asked, feeling her eyes begin to fill with tears.\n\nShe'd told him from the very first that she loved him. On Christmas Day, she'd begged him for a chance, just a chance to show him that she loved him.\n\nBut this was the first time he'd ever said it to her.\n\n\"Yes,\" he said and again twirled her around.\n\n\"I'm sorry if I haven't said it before,\" he said as the band announced that they were going on a ten minute break.\n\n\"Caitlin, seriously, do you know, do you have any idea how scary this is?\" he asked as he ordered a cup of coffee from the waiter.\n\n\"Coffee for me too,\" Caitlin told the waiter. \"Baby, why's it scary?\"\n\n\"Sweetheart, look at you!\" Barry smiled as she clutched his hand in her small hand. \"You're young, you're beautiful, you're sexy; I mean what's to keep...\"\n\n\"And look at you,\" Caitlin interjected. \"You're young, you're beautiful, you're sexy; what chance does a girl like me have with a guy like you, huh?\"\n\n\"I'd say a pretty damned good one,\" Shirley said. \"We're going; you two have fun.\"\n\n\"Think just as soon as our coffee gets here, we're going too,\" Barry smiled, shook Henry's hand and kissed Shirley's offered cheek.\n\n\"Call me,\" Shirley mouthed over Barry's shoulder and Caitlin nodded her head yes.\n\n\"Call me,\" Henry mouthed and Caitlin burst into giggles as Shirley slapped Henry's arm.\n\n\"What?\" Henry laughed as he helped Shirley put her coat on. \"You can say that but I can't?\"\n\nIf the waiter minded that the patrons paid for the coffee and left, he didn't show it.\n\nThe cook, however, asked what had been wrong with his coffee.\n\n\"They said it looked like you'd put your hairy nut sack in it,\" the waiter shrugged. \"Said they didn't want it.\"\n\nIn his car, just before he turned onto her street, Caitlin softly touched Barry's arm.\n\n\"Say it again,\" she begged.\n\n\"Say what again? That I love you?\" he asked and pulled up behind her old Saturn.\n\n\"Yeah, say it again,\" she asked.\n\n\"Caitlin Weinstein, I love you,\" he said and kissed her.\n\n\"And Barry Delacroix, I love you,\" she giggled happily.\n\nEver the gentleman, Barry walked around, opened her car door, and walked with her to her front door.\n\n\"Oops, Momma's up,\" Caitlin said when the porch light flashed on.\n\n\"Uh huh,\" Barry smiled and waved to the unseen Theresa.\n\nThe two kissed a few times, then Caitlin let herself in and Barry walked back to his car.\n\nThe drive home was quick; they only lived a few streets apart. In his driveway, he smiled, seeing that both Toni's and Anita's cars were in the driveway.\n\nBarry had offered Miss Alvarez an additional fifty dollars a week since she would now be cooking and cleaning and shopping for two girls instead of just the one. She had shrugged her shoulders and smiled.\n\n\"Ees not trouble,\" she said. \"But you want geeve me more money? I say okay.\"\n\nWalking into his house, he could hear the two girls in the kitchen, chattering and laughing. One of Toni's insipid CDs played; he wondered where his daughter got such bad taste in music.\n\nGive him some good old country music any day of the week, some Merle Haggard, Jerry Jeff Walker, Johnny Cash, and Loretta Lynn. Thankfully, Caitlin leaned more toward Classic Rock and he could definitely tolerate that. BJ also agreed with Dad; some Conway Twitty, some George Jones, a little bit of Tammy Wynnette. Michael and Patrick had gone horribly wrong; those two loved them some heavy metal tunes\n\nBut Toni, his baby girl listened to the schlock they called country music today.\n\n\"Oh my God; that's nothing but bubble gum pop with a twang,\" he complained whenever Toni would put on a Taylor Swift CD. \"That is NOT Country!\"\n\nRight now, the two girls were dancing around the kitchen to a Kasey Chambers CD.\n\n\"Hi Daddy!\" Toni cheerfully called out as 'Luka' came to an end.\n\n\"Hi Mr. Barry,\" Anita echoed, putting the finishing touches on the banana splits she was preparing for them. \"You want a banana split?\"\n\n\"Thanks, but no; ate way too much already. Good night,\" he smiled and beat a retreat before the next intolerable song began. \"Oh, girls? Nine thirty mass tomorrow, all right?\"\n\n\"Ah,\" Toni said, opening her mouth wide.\n\nShe shrieked in laughter as Anita playfully squirted her in the face with the can of whipped cream.\n\n\"Here,\" Anita fed Toni a spoonful of the frozen treat.\n\n\"Ah,\" Toni said, holding out her own spoon of the dessert.\n\n\"Toni, eat your own,\" Anita laughed as Toni again opened her mouth wide.\n\n\"Ah,\" Toni insisted.\n\nAt the St. Martin home, Shirley squealed as Henry chased her up the stairs to their bedroom."
    ],
    "authorname": "JimBob44",
    "tags": [
        "older man",
        "younger woman",
        "romance",
        "red head",
        "lesbian romance",
        "rich girl/poor girl",
        "latin",
        "small town",
        "louisiana",
        "watersports"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/wealth-pt-02"
}