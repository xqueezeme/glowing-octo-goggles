{
    "title": "Falling for the Law Ch. 08-10",
    "pages": [
        "CHAPTER EIGHT\n\nAllie woke early that following morning, Marley still nestled in her arms as she stared over at her beautiful face. The blonde beauty looked almost angelic, her blonde tresses spread out against the gray pillowcase, her chest rising and falling almost imperceptibly as Marley peacefully slept. Allie wanted desperately to kiss her again as she'd seemingly done a hundred times the previous night. But instead, she let her sleep, sliding carefully out of bed and gathering her things.\n\nAllie didn't typically work on Sundays, but Ted had asked for the morning off so that he could attend his infant son's christening.\n\nQuietly closing Marley's bedroom door, Allie made her way to the living area, where she quietly dressed; that task completed, she searched for a pen and a piece of paper, finding both in a kitchen junk drawer.\n\nScribbling a note, she then grabbed a tape dispenser from the drawer and tore off a piece, taping the message to the front door. Standing there, she read it one more time, wondering if she was going too far in revealing her feelings. At last, though, Allie decided that she had to be honest, hoping against hope that she knew Marley's heart too.\n\nMarley,\n\nSorry, I had to leave you this morning; it wasn't what I wanted. But I had to work a few hours this morning to cover for one of my officers. I hope we can get together later, though, but I'll wait to hear from you on that.\n\nLast night was, well, it was the single best night of my life. You are witty, intelligent, brave, and stunningly beautiful. And I hope that you've guessed by now that I'm falling for you. No woman has ever made me feel the way that you do.\n\nLove, Allie\n\n<p align=\"center\">~~~~~~~~~~~~~~~~~~~~</p>\n\nAllie walked into the police station just a few minutes later than she usually arrived, a veritable bounce in her step as she greeted the dispatcher.\n\nOnce she had her coffee, Allie retreated to her office and settled into her desk, her mind going back to the night before.\n\nShe'd expected Marley to be tentative and unsure of herself, and perhaps she had been at first. But after her first climax, Marley had been anything but shy, the sexy blonde confidently setting aside her past sexuality and embracing her future. Marley had worshiped Allie's body the way only a woman could. No, that wasn't quite right. She'd done it in a way that only a woman with deep feelings for you could accomplish.\n\nWhen Marley had slowly made her way down Allie's body, her intent dawning on the auburn-haired beauty, Allie had tried to assure her that it wasn't necessary. In response, Marley had merely smiled up at her seconds before sinking her tongue between Allie's silky folds and dragging it up to dance delightfully against her clit.\n\nAllie had blissfully relaxed then, her concerns for Marley forgotten as she'd relished the feel of the sexy blonde's tongue dancing against her turgid clit. After only minutes, Allie had come with a boisterous shout as her feminine juices had coated Marley's face, the beautiful author writing an erotic sonnet with her tongue as Allie's core convulsed in sheer delight.\n\nThe pair had finished their first session of lovemaking with Allie flipping Marley over onto her back and mounting her, their legs interlocking as their groins came together. Allie had begun to rock back and forth, her well-lubricated pussy grinding against Marley's in a display of sensual friction. They'd come within seconds of each other, both women keening an erotic duet of delight before Allie had collapsed down next to her lover and lovingly wrapped her into an embrace.\n\nJust the memory of it sparked a heat between Allie's legs, her heart aching to call it a day and race back to Marley's place and resume her position against the sexy blondes, warm and nude body.\n\nHer sense of duty stopped her, though. Marley had her job, as did Allie, and neither of them could afford to get so caught up in the feeling of something new that they allowed it to affect their everyday lives. Still, Allie struggled to keep her mind off the nude blonde beauty she'd left behind not so long ago.\n\nStanding, Allie made her way back to the break room, where she stood refilling her coffee cup as naughty thoughts passed through her head.\n\n\"Somebody looks like they're in a good mood this morning.\"\n\nTurning, Allie found Molly Turner, the station's receptionist and secretary. She was the one who fielded all of the incoming calls, acting as a buffer for Allie and the other busy officers she employed. Allie considered Molly worth her weight in gold, which was a substantial amount because Mrs. Molly Turner was a heavy girl. More than that, Molly was also Allie's best friend and closest confidant. It had been Molly who'd helped Allie pick up the pieces of her life after Stacey Bennett had broken her heart.\n\n\"Why do you say that?\" Allie asked coyly while trying to maintain a straight face.\n\n\"Well, partly because you're standing there grinning at a cup of coffee like a blithering idiot, but mainly because a little bird told me that you were out at the old Johnson place last night with, and I quote, \"some hot little blonde number.\"\n\nAllie couldn't help the grin that came to her face, the memory dancing with Marley coming to her mind. She'd by far been the most beautiful woman there, all of the men present ogling her like starving men waiting in line at an all-you-can-eat buffet.\n\n\"Alright, Gardner, spill it and don't you dare leave anything out.\"\n\nKnowing Molly wouldn't let her get by without sharing and seeing she had little choice, Allie told her all about Marley. She left out the intimate details of what had happened after the dance, but the implications of her current mood were suggestive enough.\n\n\"You slut! You got laid last night, didn't you!\" Molly said in a low voice, her eyes going big as she wagged a finger in Allie's direction. \"I can't believe you've had this going on and haven't shared it with me.\"\n\nHolding both hands up in a gesture of supplication, Allie said, \"I didn't want to say anything because I wasn't sure that it was real.\"\n\n\"And now?\" Molly asked excitedly, her voice full of hope.\n\n\"I think it is,\" Allie replied, nodding her head as she did, the tone of her voice almost matching Molly's sudden exuberance.\n\n\"I'm so happy for you!\" Molly squealed, wrapping her arms around Allie and pulling her in for a hug. The typically reserved police chief went with it, knowing that it was futile to resist Molly once she was worked up over something.\n\n\"When are you going to see her again? Ooo, when do I get to meet her? Can you get her to sign her book for me if I buy it? Is she really as pretty as they say?\" Molly asked in rapid succession.\n\nLaughing, Allie said, \"Let's see, in order, hopefully later today, not yet; I still want her all to myself right now, yes, and she's the most beautiful thing I've ever laid eyes on.\"\n\n\"Prettier than, Stacey?\" Molly asked, her tone low and conspiratorial.\n\n\"If Stacey was a painting you had done by a good artist, then Marley is an exquisite Rembrandt.\"\n\n\"Wow,\" Molly said with a grin, \"you really do have it bad.\"\n\n\"You have no idea.\"\n\n<p align=\"center\">~~~~~~~~~~~~~~~~~~~~</p>\n\nAllie's phone sounded just after ten that morning, signaling an incoming text. Pulling over on the side of the road, she looked at her phone.\n\nMarley: I was so disappointed when I woke up, and you were gone, but I understand that your work is essential. Yes! Yes! Yes! I definitely want to see you once you're free. Call me when you get a chance, and we'll figure it out.\n\nDialing Marley's number, Allie waited patiently for the cell call to connect.\n\n\"Hey, you!\" came the sound of Marley's voice.\n\n\"Good morning,\"\n\n\"It is,\" Marley replied sweetly. \"The only thing that could have made it better would have been waking up next to you.\"\n\n\"That would have been nice,\" Allie said with regret. \"Unfortunately, it couldn't be avoided.\"\n\n\"I understand. What time do you get off?\" Marley asked.\n\n\"I should be done by one.\"\n\n\"Good,\" Marley said. \"Let's get lunch at the diner, and then maybe you can show me your place.\"\n\n\"Lunch sounds great, but my place isn't much to look at.\"\n\n\"That's okay,\" Marley said seductively. \"I really only want to see your bed.\"\n\n\"Why's that?\" Allie asked coyly.\n\n\"Well, I've always heard that women prefer the home-field advantage when it comes to sex, and I want to see if you can fuck me even better in your bed.\"\n\n\"Then my bed it is!\"\n\n<p align=\"center\">~~~~~~~~~~~~~~~~~~~~</p>\n\nMarley was waiting in a booth for Allie when she arrived, the sexy blonde's face lighting up when Allie walked through the door. Marley scooted over and patted the bench next to her, signaling that she wanted Allie to sit next to her. The auburn-haired police chief sat down next to her, Marley instantly hooking her left arm in Allie's right and laying her head on her shoulder. Allie's heart swelled at the thought this woman would be so open about her sexuality after such a short time.\n\n\"Officer,\" Marley said in greeting as she lifted her head slightly and leaned in to kiss Marley, their lips coming together softly three times.\n\n\"Hey, baby,\" Marley said softly as their waitress Tammy made her way to the table. She had a broad smile on her face, winking at Marley as she reached the table.\n\n\"Well, I see that you two finally figured it out.\" Tammy replied, tapping her pen against her ticket book.\n\n\"What?\" Marley asked, feeling a little confused.\n\n\"You're together, like a couple,\" Tammy said, rolling her eyes as if it was the most obvious thing in the world. \"I thought that first night you two met in here that there was something there. But I knew for sure the second time you guys came in here.\"\n\n\"Well, you were right!\" Marley said brightly as she seemed to snuggle in a little closer against Allie.\n\nThe two placed their order and then went on talking, Marley telling Allie about the latest chapter in the young author's book. Allie listened intently as she stared at the beautiful blonde, marveling that she had this woman in her life.\n\nWhen Marley was done, Allie said in a low voice, \"You seem awfully at ease over all of this.\"\n\nMarley gave her a shrug and said, \"For years, I dated boys but never really felt the giddiness of attraction that many of my friends described. Oh, I faked it when they asked, but it was never really there, even with my husband.\"\n\n\"And with me?\"\n\n\"With you, I have trouble sitting still. I can't stop thinking about you and the things we do together. But it's more than just the physical aspects. I don't feel as though I have to put on an act with you. I can be myself, and you accept that; heck, you seem to like it.\"\n\n\"I love it,\" Allie said, leaning over and kissing Marley lightly, causing the sexy blonde to flush.\n\n\"Back to your point, though, I have had sex with a small handful of men, and each time we were though, I was like, \"meh,\" Marley stated with a shrug. \"It was stimulating but never to the point that I was close to coming. But with you, I felt ready to explode the moment you pushed me against my door. You just read my body in a way that no man has ever come close to doing, and I loved the way you kept pushing me to the edge again and again. That constant buildup made my climax so intense that I thought I might lose my mind.\"\n\nMarley paused as if to let that sink in. Her face then reddened as she leaned in and quietly said, \"Plus, going down on you was so hot. I think I'm addicted.\"\n\nThat got a laugh from Marley, just as Tammy returned with their food, sitting it down in front of them and leaving the check. But before they could start eating, Allie's cell began to ring.\n\nLooking at her called ID, Allie said, \"It's the DA, I have to take this.\"\n\nConnecting the call, Allie said, \"What do you have for me, Marge?\"\n\n\"Bad news, I'm afraid,\" the DA said. \"I just talked to Judge Davis's clerk, and he's going to rule against us on the Lucas petition. Apparently, his lawyer raised a royal stink and threatened to appeal any decision that went against Lucas. The clerk told me that Davis doesn't want to take a chance on his decision getting reversed.\"\n\n\"Gutless wonder,\" Allie groused. \"How's he going to feel when one of our residents overdoses because Lucas sold them drugs, not to mention how violent the asshole can be.\"\n\n\"I know, believe me when I tell you that I gave his clerk an earful.\"\n\nOnce Allison had ended the call, Marley apparently saw the look of concern on the police chief's face and said, \"What's wrong?\"\n\nTurning to her and seeing the worry on Marley's face, Allison reached out to caress the blonde's pretty face and said, \"Nothing for you to worry about.\"\n\nThat seemed to pacify Marley. But beneath her facade, Allie was worried.\n\nVery worried.\n\nCHAPTER NINE\n\nMarley followed Allie to her house, the couple parking on the street just outside the chief's two-bedroom bungalow. The dwelling was set on a quiet street with many similar homes. It was charming in its own way, the small lot well-manicured and the house's exterior well maintained. The pair held hands as they walked up the cobblestone path, Allie holding the door for Marley as they entered the house.\n\n\"What were you talking about earlier? This is nice,\" Marley declared, and she truly meant it. The main entrance opened to the living room, the open floor-plan revealing a kitchen beyond it. A small bar separated the two.\n\n\"It's quaint,\" Allie said, \"And it suits my needs. I don't spend a great deal of time here except to sleep.\n\n\"Ooo,\" Marley cooed, \"I want to see where that happens.\n\nAllie led Marley to her bedroom, the door opening to reveal a queen-sized bed, the remainder of the room sparsely furnished with a mixture of secondhand furniture. An armoire sat opposite Allie's bed, twin nightstands flanking the pillows on each side. Marley couldn't help but smile at the sight of the nightstand on the near side. A lamp sat on its surface and lying next to it, a pair of reading glasses resting atop a copy of Marley's lone published novel.\n\n\"You've been reading it?\" Marley asked, picking up the book as she sat down on the edge of Allie's bed.\n\n\"Of course, I have,\" Allie said as she stood before Marley and took the book from her grasp, opening it to where her bookmark rested. \"I've got a vested interest in the author.\"\n\n\"And what do you think, so far?\" Marley asked as she stared up expectantly at Allie.\n\n\"I've really enjoyed it,\" Allie replied, setting the book back down on its resting place on the nightstand. \"I've been really impressed with the attention to detail you've included as far as the investigation, particularly considering it's a period piece.\"\n\nMarley could help but smile at Allie's praise, the police chief's endorsement of her craft carrying extra weight. The rookie novelist had spent countless hours interviewing retired police detectives from that period in an effort to make her story read as authentic as possible. In the process, Allie had become quite versed in the investigative techniques of the old-timers, filling multiple notebooks with their thoughts and stories.\n\nSetting aside the pride she felt at Allie's praise and remembering her true purpose for coming here, Marley reclined back on the mattress, propping herself up on her elbows while attempting to affect as seductive a look as she possibly could.\n\n\"Well, since you're enjoying it so much, what would you think about fucking the author?\" Marley asked, biting at her bottom lip as she stared up at Allie, drinking in the sight of the sexy law officer.\n\n\"Just like that, huh?\" Allie asked as she settled her knees between Marley's legs and lowered herself down on top of the blonde goddess, their lips coming together in a fiery crash as their tongues found each others, twisting and tangling in an erotic knotting of flesh inside Marley's mouth.\n\n\"Do you always hook up with your readers?\" Allie teased her lover as she began to kiss her way down Marley's long and regal neck.\n\n\"Just you,\" Marley replied with a moan as her hands settled on Allie's firm backside, pulling her in against the ever-present throbbing between her legs. \"Think of yourself as a specially chosen focus group of one.\"\n\nNot saying a word, Allie raised up and began undoing the buttons to her shirt. Marley matched her intent, reaching down and grabbing the hem of her top, pulling it up and over her head before unhooking the lacy bra she wore and freeing her breasts. Allie had barely been given a chance to do the same before Marley had sat up beneath her, the sexy young writer's mouth laying claim to her left nipple and enveloping it in moist warmth as her tongue pancaked against the turgid nub, sucking hard as her hand grasped Allie's other breast and begin to knead the supple flesh.\n\n\"Fuck, baby,\" Allie cooed to Marley as the blonde felt her lover's hands knot themselves in her curls, pulling her mouth in tighter as she wantonly fed on her nipple. In response, Marley bit down lightly on the swollen nub, tugging at it as Allie praised her efforts by thrusting out her chest to give her lover better access.\n\n\"I need to taste you again,\" Marley admitted as she released her hold on Allie's breast and stared up into the sexy officer's eyes, seeing them darkened with the same lust that she felt coursing through her own body. Not saying a word, Allie gripped Marley's shoulders and pushed her down onto the bed before standing and quickly undoing her belt and allowing it to drop to the floor as she unbuttoned her pants and shucked them down over her shapely hips, freeing her panties along with them.\n\nCrawling back up on the mattress, Allie straddled Marley's legs and began to duckwalk up her body. Marley felt her own eyes go big as she realized Allie's intent, her mouth beginning to water even as she felt her pussy begin to leak fresh juices between her thighs. Allie finally came to rest with her knees situated just above Marley's shoulders, a scant few inches lying between the auburn-haired beauty's wet cleft and Marley's waiting lips. She then watched as Allie grabbed a pillow, cupping the back of Marley's neck and tucking it underneath the blonde's long wavy tresses.\n\nMarley breathed in deeply, bathing herself in Allie's fragrant arousal and feeling herself go lightheaded as she basked in its glory. Hooking her hands on the outer flesh of Allie's thighs, she pulled down, drawing the chestnut-haired beauty's sex down to her lips and burying her tongue into Allie's abundant wetness, the heady flavors coating her tongue and causing Marley to moan as she began to suck lasciviously at Allie's ripe peach.\n\n\"Fuck, yes,\" Allie proclaimed as she began to gently rock back and forth against Marley's thrusting tongue. Marley stared up at her in awe, feeling her own arousal grow as she watched Allie's hands cup her large breasts and begin to tug at her prominent nipples, stretching the gumdrop-shaped bundles of nerves away from her body. \"Eat me, baby,\" Allie begged as she continued to grind against Marley's mouth. \"Let me come on the sexy face of yours!\"\n\nMarley redoubled her efforts, wanting that as well. Finding Allie's opening, she stuffed her tongue up inside her lover's honeypot and began to suck at the gooey goodness she found there. Hooking her right arm over Allie's left thigh and positioning her hand against the auburn-haired beauty's clitoris, she dragged her thumb through Allie's wet furrow before bringing its pad to rest against her lover's turgid button, pressing against it and beginning to stimulate it in tight circles.\n\nThe dual stimulation gradually seemed to push Allie towards her release, her moans becoming a constant wail as her thighs clamped down against the sides of Marley's skull, her right hand cupping the back of the blonde's head and pulling her mouth into firmer contact against her sex. The chestnut-haired beauty came loudly, her feminine essence flooding Marley's face as Allie's thighs quivered in apparent convulsions of delight, Marley struggling to breathe even as she continued to lick and sup at Allie's quivering pussy.",
        "Finally seeming to go limp, Allie collapsed down onto the bed on her side, her chest rising and falling deeply as she lay there with her eyes closed, a well-satiated smile gracing her expression. Marley rolled to her side and neatly tucked both hands beneath her chin, lovingly staring across at the raging beauty beside her and feeling a burgeoning sense of awe at the recent changes in her life. Allie had been like a welcomed bolt out of the blue for Marley, the changes she'd brought to the writer's days a welcoming breath of fresh air, each new facet of their young relationship like a neverending series of epiphanies for Marley, each one making her new life seem that much more fulfilling.\n\n\"Are you sure that you're new to this lesbian stuff?\" Allie asked, opening her eyes and returning Marley's loving gaze. \"Because it's okay if you're not. I just want to know if I have a prodigy on my hands.\"\n\nThat got a laugh from Marley, who blushed and said, \"I am very much a neophyte at the skill, but I'm hoping to do a lot of practicing at it in the months to come.\"\n\n\"Prodigy it is, then,\" Allie declared as she sat up, sliding her nude form off the bed and walking over to where the armoire stood against the far wall. Marley admired her physique, the sight of the chestnut-haired beauty's firm haunches and long legs driving Marley to lower her right hand down between her legs to cup her needy sex.\n\n\"Leaving me so soon?\" Marley asked playfully as she watched Allie open the doors on the armoire and bend down to slide open the bottom drawer.\n\n\"Hardly,\" Allie replied as she rummaged through the drawer. \"You mentioned something earlier about wanting to know if I could possibly fuck you better on my home turf, so now we're going to find out.\"\n\nMarley watched as Allie stood holding something in her hand. Turning, she produced the item, holding it out for Marley to see, the blonde's eyes going large at the sight as her fingers found her clit.\n\nMarley had never seen a strapon before but instantly knew what it was as she watched Allie saunter back her way seductively, the look on the pretty police chief's face one of purposeful need as she stared hungrily back at Marley. The fair-haired young writer felt her pussy clench involuntarily at the sight of the large purple phallus that dangled freely from the harness as Allie bent at her waist and slipped her feet through the contraption, wiggling her hips suggestively as she worked the harness up and over their pliable flesh.\n\n\"Oh, my,\" was all that Marley could think to say as she took in the alluring sight, unconsciously opening her legs in welcome as Allie cinched the harness tight against her hips before climbing back up onto the bed and settling in between Marley's legs.\n\n\"Oh my, indeed,\" Allie said with a smile as she lowered her mouth to Marley's sex, her tongue sliding between the blonde's slick folds and beginning to flutter lightly against her clit. Marley sighed loudly, her hands coming up and finding her sensitive nipples as she gave herself entirely to Allie, losing herself to the experienced lesbian's highly skilled tongue. She began to pant, moaning loudly as she pinched her nipples, Allie sucking away at her love button as if trying to consume all it had to offer.\n\nThe thought that this was what sex was truly meant to be rifled through Marley's mind. All her illicit yet unsatisfying fumblings with men in college and her ex-husband had been watered down imitations in comparison. The intense feelings she felt for Allie tied to the woman's skill as a lover only served to magnify the superiority of making love to Allie compared to being with the men in her past.\n\nMarley quickly felt her release building like a dragster barreling down a straightaway straight for her. But rather than move to avoid it, Marley twisted her sensitive nubs just as Allie began to thrash her head side to side, the blonde's climax running her down.\n\nMarley shook, sensual shockwaves reverberating throughout her body as her orgasm overtook her, Allie masterfully continuing to manipulate her sex with her oral appendage. Cataclysmic tremors coursed through Marley's body as she writhed against Allie's sheets, her voice keening a loud cry of ecstasy.\n\nNearly shot and feeling weak, the young writer was not expecting more, having already forgotten the gel phallus dangling between her lover's legs. Marley only became conscious again of the strapon as she felt something thick and firm begin to probe through her wetness, her labia parting as if willingly granting admittance to this foreign invader. Marley opened her eyes to find a game-looking Allie kneeling between her legs, one hand wrapped around the base of her faux-cock.\n\n\"Is my baby ready to get fucked?\" Allie demanded to know, thumping the firm purple head of the thick dildo against Marley's clit. \"Are you ready for me to show you once and for all why boys are a waste of time?\"\n\n\"Oh, God yes!\" Marley moaned, putting her hands behind her knees and pulling her legs back to fully blossom her feminine flower in anticipation of what was about to happen.\n\nAllie placed the head of the cock at Marley's opening and began to press, the bulbous crown breaching her womanhood and stretching Mallory's vaginal walls wide. The sexy blond arched her neck, pressing her head firmly into the mattress as Allie sank another two inches of industrial-made but female-driven cock inside her. Allie skillfully worked the strapon, withdrawing her hips just enough to leave the thick head inside her lover before plunging forward and stretching Marley's depths more with each passing inch.\n\nAllie slowly fed Marley's ripe peach the gel member until she had its full seven inches wholly sheathed inside the snug confines of Marley's pussy. The sexy law officer then began to fuck her lover, the squelching sounds of Marley's wetness as Allie pistoned in and out of her filling the room. Marley's boisterous cries of pleasure joined the chorus of delightful sounds as Allie fucked her, the sexy blonde reaching down with her right hand and rubbing her clitoris.\n\nMarley was lost in the experience, her mind nearly misplaced as it slipped away into a sexual state of nirvana. Never before had she been fucked so thoroughly, the feel of Allie's efforts reconfirming to Marley what she'd come to realize since meeting Allie. No one else she'd ever met could make her feel the things the auburn-haired beauty was capable of producing in her body.\n\n\"Ooh, yes!\" Marley proclaimed as Allie repeatedly stuffed her tight pussy. \"Fuck me! Fuck me! Fuck me!\"\n\nMarley once again felt herself edging towards the precipice of sexual oblivion, her second orgasm seeming to swell inside her as Allie pummeled her sex over and over. The chestnut-haired goddess above her began alternating long strokes with a short jabbing motion, the variation finally sending Marley tumbling over the edge.\n\n\"I'm coming!\" Marley announced loudly as she clawed at the sheets, Allie continuing to pound her as the walls of her pussy grabbed stingily at the thick purple dildo. Marley screamed out her release, her nubile young thighs trembling and shaking as Allie collapsed down on top of her, the sexy officer's lips claiming Marley's possessively.\n\n\"God...you are just too much,\" Marley said as her chest heaved, her breaths coming quick and shallow. \"I swear sex with you gets better every single time!\"\n\nThat got a laugh from Allie, who simply pulled Marley in closer and hugged her tightly, her lips gently caressing the sexy blonde's forehead. The two women just lay there holding one another as they did their best to catch their breath, Allie's left hand gently caressing Marley's right shoulder.\n\nThey snuggled together tightly for the next fifteen minutes, neither woman speaking, the way their naked bodies clung to one another speaking volumes. At last, though, Marley broke the silence, her words catching Allie by surprise.\n\n\"I think I'm in love with you, and it's not just because of the fantastic sex,\" Marley stated passionately as she glided her right index finger over Allie's chest, allowing the digit to trace an infinity symbol on the sexy officer's skin. \"I'd still feel the same way if you asked me just after I'd awakened.\"\n\nMarley bravely allowed the words to escape her lips without knowing how they would be received. The pretty blonde knew that she was rushing things, the pair only having known each other for less than a month. But Marley was confident of her feelings, the love she felt for Allie far more potent than any emotions she'd ever felt in the past, including those she'd had for her husband. The auburn-haired beauty would either return her feelings or not, but it wouldn't change the way Marley felt.\n\n\"I love you, too,\" Allie replied, her voice cracking as she squeezed Marley even tighter. \"It's something that I swore I'd never let myself feel again, but with you, I just can't deny myself.\"\n\nNothing else was said for several minutes, the two women simply basking in the revelation of their feelings. For Marley, it simply wasn't something she'd expected to feel again so soon after the collapse of her marriage. And the fact that it was so much stronger than what she'd felt for Sean only made it that much more unlikely.\n\nAnd that much sweeter.\n\n<p align=\"center\">~~~~~~~~~~~~~~~~~~~~</p>\n\n\"Hey, Mom,\" Marley said into her cell phone as she stood looking out the window of her writing studio and down onto the small town below.\n\n\"Hi, Marley. It's about time you called your mom.\"\n\nMarley rolled her eyes as she watched a doe pick along the edge of the mountain bluff, its shiny brown coat glistening in the early morning sun. It had only been six days since she'd last spoken to her mother, but Jane Anderson had never been the type to let facts stand in the way of her making a point.\n\n\"Sorry, Mom, but I've been really busy this past week,\" Marley replied as she thought back at the past week, a smile coming to her lips at the thought of all the time she'd spent with Allie. The pair had gotten together nearly every night once the sexy police chief had gone off duty and had slept in the same bed every night but one.\n\n\"What could be so important that you couldn't find the time to call your mother?\" Jane Anderson asked.\n\n\"Well, I've been really busy on the latest chapters of my book,\" Marley replied, taking a deep breath and slowly exhaling it before adding, \"And I've kind of been seeing someone.\"\n\n\"Seeing someone?\" her mother asked as if the prospect was utterly preposterous. \"What kind of men could you possibly find to date in the north Georgia mountains? Please tell me you're not dating some hillbilly pig farmer.\"\n\nMarley pinched the pressure point between her eyes to stave off the beginning twinges of a headache, the kind that only her mother could bring on.\n\n\"No pig farmers, Mom,\" Marley replied, feeling more than a little perturbed at her mother's uppity attitude. \"And no men either, I've been seeing a woman.\"\n\nThe line went quiet, the sudden silence making the dull ache in Marley's sinuses only that much more prominent. The pretty blonde could almost picture her mother's face squinched up in disgust at her revelation, the older woman already worrying about what her friends at the country club might think when they found out.\n\nMarley had always been made to feel a disappointment to her mother, Jane Anderson constantly struggling to hide her dissatisfaction with her youngest daughter's achievements in life. Marley had never quite lived up to her mother's expectations; those lofty goals consistently elevated just out of Marley's reach. The Anderson matriarch had always held up her two eldest children as examples for Marley to emulate, the pretty blonde striving but always coming up short of the mark.\n\nAnd though it was Sean who'd cheated on Marley, her mother hadn't hidden the fact she laid the blame for the marriage's failure at Marley's feet. Her youngest child had failed Sean to hear Jane Anderson tell things, leading him to wander elsewhere for love and support.\n\n\"God, Marley, I know it's typical of today's teens to tinker with their sexuality, but you're old enough to know better. Please tell me this is just a case of you rebounding from your divorce into an experimental phase.\"\n\nStruggling to keep the bile from rising in her throat, Marley said, \"No, I really care for this woman, Mom. I think this relationship is serious.\"\n\n\"And what precisely am I supposed to do with this information, Marley?\"\n\n\"Well, I would hope you could be happy for me, Mom,\" Marley replied, though she knew the chances of that happening were slim.\n\n\"This is going to kill your father.\"\n\nHer voice hardening, Marley said, \"No, I think daddy will be happy for me. After Sean betrayed me, Daddy told me not to let one failed marriage stop me from finding love, and whether you want to hear it or not, that's what I've done.\"\n\nJane Anderson balked at the notion again, Marley finally informing her mother that when the older woman was prepared to be happy for her, Marley would be glad to take her call. But until then, she had no desire to speak to her.\n\nMarley disconnected the phone call and sighed deeply. It had gone about as bad as the young writer had expected, her mother's distaste for Marley's relationship with Allie about par for the course. But the pretty blonde had no intention of allowing her mother's negative attitude to stunt the joy she felt at having found Allie. She hoped that her mother would eventually come around. But if she didn't, Marley felt strongly that she could depend on her father to intervene on her behalf. She'd forever been daddy's little girl, Thomas Anderson always taking Marley's side whenever his wife was being unreasonable. And almost certainly, a call from his little girl could help him see that was the case in this situation.\n\nBringing up her list of contacts, Marley dialed her father's number.\n\nCHAPTER TEN\n\n\"You've got a visitor in your office, Chief,\" Molly said as she nodded her head in the direction of Allie's door. \"It's Tracey Stallworth. She wouldn't tell me what it was that she wanted.\"\n\nAllison smiled back at her friend as she read the aggravation on Molly's countenance. Of her many good and endearing qualities, being a busy body wasn't one of them, and Molly took it as a personal affront anytime she was denied information she felt she was due.\n\nTurning her attention back to the woman waiting in her office, Allie tried to recall what she could remember about Anna Marie Stallworth's mother. Allie could recall meeting the older woman on several occasions in the hospital; Anna Marie's mother's face had been full of worry and anger at the time. Allie's memories brought up the image of a woman's face that was full of lines, the early forties matriarch of the Stallworth clan prematurely aged by a hard life and far too many cigarettes. If Allie could recall correctly, Tracey had been widowed as a young woman, her husband dying due to a farm accident when the tractor he was driving flipped over on top of him, crushing his body beneath its weight.\n\nBut rather than allow her family to fall apart at his passing, Tracey had seized control of the reigns and ruled over her kids with an iron fist, using the strong backs of her three sons to eventually surpass anything her late husband had ever been able to accomplish during his time running things.\n\nTracey's one failure, though, had been her youngest child. Anna Marie was her lone daughter and her pride and joy, Tracey doting on the girl in a way she would have never considered doing for her sons. As a result, Anna Marie had grown up spoiled and entitled, feeling as though she could rule over everyone she met, that is until she met Travis Lucas at a pasture party during her junior year of high school.\n\nThe typically dominant Anna Marie had quickly been smitten by the older and handsome young man, and the fact that he'd had money hadn't hurt matters either. Adding to all of that was the fact that being his girl had allowed Anna Marie the freedom to escape her mother's firm hand, the teen quickly going wild once she'd dropped out of school and moved in with Travis.\n\nThe two dominant figures in Anna Marie's life had quickly become adversaries, the devious young woman soon figuring out that she could play them off one another to get her way. And from the stories she'd picked up, Allie thought the teen beauty had been very successful at doing so.\n\nAt least she had right up until the time that Anna Marie had shown the poor judgment to steal his money.\n\n\"Mrs. Stallworth,\" Allison said as she entered her office, \"what can I do for you today?\"\n\n\"You can help me find my daughter, that's what,\" Tracey Stallworth spat back at Allison as she sat down behind her desk.\n\n\"Wait, Anna Marie is missing?\" Allison said, grabbing up a pen and notepad to take notes with. \"When did this happen?\"\n\nTracey went on to explain how her daughter had disappeared the night before. According to their mother, Tracey had been at church and charged her sons with Anna Marie's care, something the three fully grown men should have had no problems handling.\n\n\"So what happened?\" Allison asked as she scribbled in her notebook.\n\n\"My oldest son Jesse said they noticed light coming from the direction of our lower pastures and quickly figured out that the barn located there was on fire. That's where our sows and their piglets are housed, so the three idiots rushed out of the house leaving their poor sister alone after telling her to call the fire department.\"\n\nAllison quickly made a note to contact the local fire chief and get his take on the source of the fire.\n\n\"The fire broke out around eight with the barn being a complete loss, though thankfully my boys were able to save most of the livestock in question. I got word about the fire a little after nine and hurried home, but Anna Marie was gone by then.\"\n\n\"And your sons,\" Allison asked, \"they saw nothing? No cars, headlights, or strange figures during that time?\"\n\nAllison thought it unlikely that they had, but being the competent investigator she was, she felt she had to ask the question.\n\n\"No, those three nitwits were far too occupied to see anything but the blaze in front of them. The only vehicles they saw were the firetrucks that arrived to help keep the fire from spreading into the fields,\" Tracey reported, her voice full of disgust that seemed misplaced to Allison. She was familiar with the Stallworth farm, and if she remembered correctly, nearly forty acres lay between that lower barn and the main house.\n\n\"And who was it that first noticed your daughter was missing?\"\n\n\"Well, me, of course,\" Tracey replied as if it was a stupid question on Allison's part. \"I got home around nine and went into the house first to change my clothes. It was empty when I got there, so I figured that my late husband's three dumbass sons must have had the common sense to take Anna Marie with them. It wasn't until I found them that we figured out she was gone.\"\n\n\"And yet you waited until this morning to report her missing despite the violent threats Travis Lucas has made towards Anna Marie?\" Allison asked incredulously.\n\n\"Fuck you, chief,\" the devout Baptist woman replied. \"Me and my boys spent the entire night looking everywhere you and your three officers would have. And I'll guarandamntee you that the folks we talked to are a damn good bit more scared of me than they are of the law.\"\n\nAllison almost laughed at that, knowing it was likely the truth.\n\n\"Still, now my officers and I have to double back on all of those same people nearly twelve hours after your daughter went missing. So between then and now, anybody that did have something pertinent to hide has had plenty of time to get their stories straight,\" Allison explained, tossing a pen and a spare notepad across the desk to the older woman. \"Write down the name of everybody you or your sons spoke to and everywhere you went making sure not to leave anybody out.\"",
        "And with that, Allison stood up from her desk and went over to her filing cabinet, where she retrieved the nine-millimeter she kept stored there while she was in the office.\n\n\"And what are you planning on doing?\" Tracey Stallworth asked as she watched Allison holster the weapon.\n\n\"I'm going to go and pay Travis Lucas a visit.\"\n\n<p align=\"center\">~~~~~~~~~~~~~~~~~~~~</p>\n\nAllison pulled her police cruiser down the narrow path leading back to the old Lucas farm. She checked in her rearview mirror to once again make sure that her two officers trailed behind her in their SUVs, the show of force less about intimidating the man she was about to question and more about keeping Allison herself safe.\n\nBreaking through the wooded path, the track led the three cars out into open farmland. What once had been fields of corn, green beans, and field peas were now grown over with weeds as far as the eye could see. As far as Allison could tell, the only crops currently being tended to were the neatly kept rows of apple and peach trees bordering the yard leading up to Travis Lucas's home.\n\nFour men sat out upon Travis's front porch, lazing about in Adirondack chairs, cans of beer scattered out about their feet. One of them rose once he spotted the train of law enforcement vehicles, quickly disappearing behind the screen door leading into the house's front.\n\nAllison strategically parked at the bottom of the steep hill leading up to the house and waited for her fellow officers' vehicles to come to a slow stop behind her before exiting her vehicle. She watched as Ted Olsen dismounted his SUV, noting as he unsnapped the holster on his weapon, resting his hand on the forty-five caliber Smith and Wesson Allison knew he favored. Behind him, Alex Carruthers walked up, the rookie officer's eyes looking big as saucers as he stared Allison's way, apparently seeking some type of reassurance.\n\nWaving them over, Allison said, \"Alright, we're here to do our due diligence regarding the disappearance of Anna Marie Stallworth. Do I think he has her stashed here? No, Travis Lucas is a lot of things, but dumb isn't one of them. Still, keep your eyes peeled for anything that might give us an indication of where he's got her.\"\n\n\"You don't think he kept her alive, do you?\" Ted asked, his jaws grinding together tensely as he stared up the hill towards the house where Travis Lucas was now standing on the front porch and looking down their way.\n\n\"No,\" Allison admitted, the regret in her voice clearly evident. \"But until we have a body, we're going to operate on the premise she's still alive. Maybe we'll get a lucky break, and whatever shitty purpose he had for grabbing Anna Marie will extend beyond simply killing her. If that's the case, it's our job to find her and bring her home safe to her family.\"\n\nLooking directly at Ted, Allison said, \"And keep that weapon holstered. The last thing we need to do is antagonize a bunch of already jumpy meth addicts and end up in a shootout.\"\n\nStarting up the hill, Allison added, \"Let me do the talking and don't react when they try to piss you off because I can promise you they will.\"\n\n\"You the welcome home committee?\" Travis Lucas asked with a smarmy smile as Allison, her fellow officers in tow, reached the top of the hill and came to a stop at the foot of the steps leading up onto the front porch.\n\n\"Come on, Travis, you know the good people of Camden have never been very welcoming to you,\" Allison replied, doing precisely the opposite of what she'd told her officers. \"But they'll line up to be the one that gladly closes the door to your jail cell once I finally send you back to where you belong.\"\n\n\"That sounded like a threat, boys,\" Travis said to the nervous-looking lot sitting behind him. \"And here I was wondering if our sexy chief of police had spent as much time thinking about me as I did her while I was locked up.\"\n\n\"So I've been on your mind?\" Allison said as her eyes scanned the length of the house, noting the cars present and in runnable condition and discounting the two up on blocks over by the barn. There were four, including two older four-wheel-drive pickups, one a pathfinder and the second an older model Chevy. The other two vehicles were typical redneck muscle cars, one a nineteen-seventy Chevelle SS and the other, a sixty-nine Camaro with a high gloss paint job that shimmered against the early afternoon sun. Though he wasn't listed as actually owning a vehicle, it was the Camaro that Lucas was frequently spotted in around town. Though it was registered with the state as being owned by Lucas's lieutenant Jeffery Parker, Allison had long suspected the high-performance vehicle belonged to Lucas.\n\n\"Oh, I thought about you damn near every day while I was lying there in that cell. Thoughts of you and Anna Marie were great material for the old spank bank during those lonely hours after lights out.\"\n\n\"Well, that's not creepy at all,\" Allison retorted casually as her eyes scanned the men sitting up on the porch. Jeffery Parker refused to meet her glare as he leaned against the frame of the front door, suddenly finding something interesting down by his feet. Then there was the Otis brothers, Derrick and Isley. They'd both been arrested for possession several times, with Derrick doing a short stint in prison for a robbery he'd taken part in to fund his drug habit. Neither of them could meet Allison's eyes either, Isley staring down into his beer while Derrick seemed focused on the crows that had settled on the fence lines that bordered the fields leading up the house.\n\nBut then there was the fourth man if you could call him that. He really wasn't much more than a grown boy, his long greasy hair hanging down to his shoulders and across his face as his eyes peaked out towards Allison, a somewhat haunted look on his face. Allison wasn't sure of his name but remembered occasionally seeing him milling about around town.\n\n\"If you say so, lady law. Now, what is it I can do for you today?\"\n\nFor the first time, Allison turned her attention to Travis Lucas. He was a handsome enough-looking man, Allison supposed. At least, that is, if you went for that bad boy look with an abundance of tattoos covering his lean frame. He wore a sleeveless concert t-shirt that had seen better days and a pair of ripped blue jeans that were capped off by a type of footwear that Allison's dad had always referred to as \"shit kickers.\" The police chief studied the dark footwear for signs of blood, wondering if the steel-toed boots had recently been used to stomp a particular dark-haired beauty.\n\n\"It's funny that you mentioned Anna Marie and your preoccupation with her. It seems she came up missing last night, and I was wondering if you might know where she is?\"\n\nThe smile on Travis's face hardened just a bit, his eyes going cold as he met Allison's gaze sending a cold shiver down her spine. She could see no humanity there, nothing that indicated Travis Lucas was capable of having empathy for his fellow man. It was the glare of an apex predator, a wolf that was as apt to kill for pleasure as he was to feed himself.\n\n\"I haven't seen that cunt since she testified against me at my trial, though I surely wouldn't mind spending a little quality time with her,\" Travis quipped, his tongue sliding out and running the length of his lips as if to further emphasize how delicious he found the idea.\n\n\"Well, then you wouldn't mind my officers checking your house and property,\" Allison replied as she held Lucas's cold glare. \"You know, just to be sure.\"\n\n\"Why the fuck should I let you do that?\" Travis replied quickly, the relaxed nature he'd been attempting to affect suddenly disappearing as his body stiffened. \"I've already told you that I haven't seen the cunt.\"\n\n\"It's not like I'm really asking, Travis,\" Allison came back at him, a smile blossoming on her lips that didn't match the coldness in her voice. \"We're going to search the house and property, and you're going to be a good little boy and sit and watch while we do. You see, I don't need your goddamned permission. That crack pipe hanging out of Isley's back pocket is enough to give me reasonable suspicion. And even if it wasn't there, you're a parolee, so I can show up here every day and turn this shithole upside down if I want, and there isn't a fucking thing you can do about it.\"\n\nAllison watched as Travis's jaw tightened and saw murder in his eyes. It was clear to her that he wasn't used to being talked to in such a manner. She was doing the exact opposite of what she'd instructed Ted and Alex to do, but Allison couldn't help pushing Lucas's buttons now that she was here. It was like poking an angry badger with a stick, but Allison felt a sudden curiosity at the reactions she could get out of him.\n\nTurning her attention to the men sitting on the porch, Allison said, \"You four need to produce some form of identification and have it ready for me to check.\"\n\n\"What the fuck for? They haven't done anything besides drinking a few beers,\" Travis barked, his chest bowing out in defiance of Allison's words.\n\n\"Well,\" Allison said in a tone that sounded as if she was talking to a small child, \"you're a parolee now, so we have to monitor who your playmates are. You can't be associating with any known felons, so Derrick, even being present here, could be considered a violation.\"\n\nLucas's eyes went to the men seated behind him, his glare causing the Otis brothers to shift nervously in their seats in a way that made Allison suspect they would eventually catch hell from Travis at a later time.\n\nMounting the first two steps to Lucas's porch, Allison said, \"Step aside like a good little boy, Travis and have a seat with your cronies while my boys have a look around.\"\n\nTravis Lucas stared down at Allison, the hatred he felt for her clearly radiating off him in waves. And for a moment, Allison thought he might lunge at her, her hand going to the nine-millimeter that rested on her hip. But at last, he seemed to relent, his shoulders slumping in defeat. Turning to where his friends sat, he pointed at Isley Otis and said, \"Get the fuck up, you dumbass.\"\n\n<p align=\"center\">~~~~~~~~~~~~~~~~~~~~</p>\n\nAs Allison expected, there was no sign of Anna Marie present in or around Lucas's property. But she did make a note of two gas cans sitting in the back of the Pathfinder, taking pictures of them before collecting them as evidence and making a mental note once again to check with the fire chief about possible accelerants being used on the Stallworth fire.\n\nNeither of the Isley brothers carried an ID, and both were found to be in possession of minor amounts of crystal meth, Ted cuffing both and leading them down the steps to the waiting patrol cars. Although Allison noted how his eyes kept fluttering down the steps to where she'd left the gas cans sitting, Jeffery Parker was clean.\n\nAnd that left the fifth man. He produced an ID that labeled him as Jackson Perry, nineteen years of age, with a town address that Allison expected was the small trailer park on the southside of town. He was soft-spoken, considering the crew he was currently running around with, and seemed almost timid. It was a fact that Allison was sure a man like Travis Lucas took full advantage of. Allison treated him no differently in her questioning, though she couldn't help but feel a small amount of pity for the young man. He was clearly in over his head, the look of an animal caught in a trap coming to Allison's mind. But she could tell the young man was fully aware he was being watched, his answers to Allison's questions being non-committal at best.\n\nBefore leaving, Allison picked up the gas cans and lied, saying, \"Somebody set one of the Stallworth's barns on fire last night and used the resulting confusion to snap up Anna Marie. And wouldn't you know it, when the fire chief took specimens of the burn patterns, he got good samples of the accelerant used to start the fire. And most unleaded types of gasoline have markers in them that make it easy to approximate them to a batch. I sure do hope that when we take samples of what's left in these, they don't match. Because if they do, then we'll have a real problem.\"\n\n\"You ladies have a nice day,\" Allison said as she turned to walk away, Ted and Alex following behind her.\n\nReaching the bottom of the hill, Ted began to laugh lightly to make sure the sound didn't carry up the up to the men still present on the front porch. Allison turned to her senior officer, surprised at his sudden display of levity.\n\n\"What?\" Allison asked, cocking an eyebrow as she looked Ted's way.\n\n\"You ladies have a nice day?\" Ted asked, his typically deep voice mimicking Allison's. \"Jesus, boss, I sure am glad you didn't want to antagonize that asshole.\"\n\n\"Shut up,\" Allison said with a grin. \"There's something about that piece of excrement that brings out the worst in me.\"\n\nBut as she drove away, Allison couldn't help but feel as if she'd stirred a hornet's nest.\n\n<p align=\"center\">~~~~~~~~~~~~~~~~~~~~</p>\n\nThe remainder of Allison's next forty-eight hours were spent questioning the people on the list Stacey Stallworth had left behind. And while they all seemed to have their own suspicions as to what had happened to Anna Marie, none of them seemed to have any actionable knowledge regarding her disappearance.\n\nAllison also ran a background check on Jackson Perry, the older teen present at Lucas's home. Other than a traffic ticket and two minor possession charges for less than an ounce of marijuana, Jackson had thus far escaped the notice of law enforcement. Allison couldn't help but wonder how much longer that would last if Jackson continued to associate with the likes of Travis Lucas. She also couldn't quite shake the haunted look in the teen's eyes. Something there bore further questioning, Allison making a mental note to visit the young man in the next day or two.\n\nAllison's off hours were spent with Marley, the two women making love in nearly every room of the blonde's house on the bluff. And while Allison hadn't entirely moved in with her new love interest, she was keeping her spare uniforms there in Marley's closet along with a few assorted casual outfits. It only made sense since Allison was sleeping at Marley's place almost every night, the two lovers' naked bodies intertwined as they fell asleep each night.\n\nAnd Molly had finally won out, convincing Allison to bring Marley to dinner at her place. But the chief had only done so after obtaining a promise from Molly not to touch on such taboo subjects such as current investigations or Allison's failed engagement to her ex Stacey. She didn't want to put Marley in the uncomfortable situation of having to listen on as Molly trashed Stacey Bennett for all the hurt she'd caused her friend. And Allison also didn't want Marley exposed to the ugliness that was the Anna Marie Stallworth/Travis Lucas affair. Desperately wanting to keep her private and law enforcement lives two separate things.\n\nTheir evening had actually gone quite well, Molly's husband Thomas doing all the cooking while the three women talked, Molly, getting to know Marley. Of course, ever bubbly Molly had taken the opportunity to tell a series of stories that proved ever-increasingly embarrassing for Allison and had Marley rolling in laughter. By the time dinner was ready, the pair were already best friends, Molly promising Marley that she would keep an eye on Allison around the office.\n\nThe following day, Allison finally got around to following up on Jackson Perry. She drove over to the south side of Camden, noting how the area began to look more depressed the further south she went. Allison found the trailer park on a gravel road, though calling it a park might have been generous. It consisted of five single-wide trailers forming a horseshoe configuration, each one of the domiciles looking a little sadder than the next. Allison pulled up outside lot three, noticing a wheelchair ramp leading up to the front door. Stepping out of her vehicle, Allison took note of fluttering curtains on two separate trailers, undoubtedly nosy neighbors wondering what Allison was up to.\n\nAllison climbed the ramp, noticing how someone had taken great care in putting down friction tape at regular intervals. Allison assumed it had likely been done to give the wheels on a wheelchair better purchase on the otherwise slick plywood surface.\n\nReaching the front door, Allison knocked and sat waiting, listening for sounds behind the door. When none were apparent, the chief began to suspect that no one was home. She'd just started to back away from the front door when the curtains on the window to her left fluttered. Adjusting her eyes through the glare coming off the window, Allison could just make out the shape of a tired-looking woman in a wheelchair with oxygen tubes feeding into her nose. The older woman held up a finger, signaling that Allison should wait before disappearing behind the closing curtain.\n\n\"Yes?\" came the weak sound of the woman's voice as she slowly opened the door, backing the chair away so that she could get it fully open.\n\n\"Hi, Ma'am,\" Allison said with a smile, \"I'm Chief Gardner, and I'd like to speak to your son Jackson. Is he here?\"\n\n\"No,\" the sickly-looking woman responded worriedly. \"I'm his mother, Agnes, and he's not here; he rarely is these days. What's this about?\"\n\n\"I'm investigating the disappearance of a local girl, and I believe that Jackson might have some information that can help me locate her.\"\n\n\"Oh, dear,\" Jackson's mother remarked, bringing a hand up to cover her mouth. \"Why do you think that?\"\n\nShrugging, Allison said, \"At a recent meeting I had with the man I expect to have something to do with her disappearance; Jackson was present and apparently employed by that individual. I got the feeling from Jackson that he knew something but was afraid to say.\"\n\n\"You mean Mr. Lucas?\"\n\n\"Precisely,\" Allison replied, \"have you met him?\"\n\n\"No,\" Agnes replied as she took a deep breath in through her nose, slowly allowing the breath to release through her lips. \"I knew that was the name of the man Jackson was working for. Jackson hasn't really been very forthcoming with information about his job, and believe me when I say that I've asked him. He just says it's something he has to do because we need the money. I suffer from Eisenmenger syndrome, and even with my disability insurance, the cost of my medications is through the roof. I'm not sure that we could make it without the money that Jackson brings in.\"\n\n\"Even if what he's doing might end up putting him at serious legal risk?\"\n\nAllison watched as the older woman's face paled at the prospect. She opened her mouth once, twice, three times before finally closing it, evidently unsure of how to respond. Allison felt a heaviness on her chest as pity washed over her for Agnes Perry and the unenviable position she found herself in. The police chief couldn't help but wonder if there wasn't something the community could do to help the sickly mother's family.\n\n\"I'll take your silence as a no,\" Allison said as she allowed her eyes to wash over the interior of the trailer that was visible through the open door. The place had clearly seen better days, the carpet worn, and the walls cracked in places. But the visible portions of the domicile were perfectly clean, neat, and tidy.\n\n\"It doesn't really seem to matter what I think, anyway,\" Agnes Perry replied. \"Jackson's dad left when he was not much more than a toddler, and that fact forced him to grow up really fast. He was working odd jobs and doing people's landscaping before he was a teen, so he's always had an independent streak a mile wide. That's only gotten worse the older he's become.\"\n\nWith a sigh, Allison said, \"Well, regardless, I need him to get into contact with me. Here's my card; he can call me at any time on my office phone at the precinct or on my cell.\"",
        "Agnes Perry took the card, studying the numbers as she held it in her hand, concern and worry written all over her countenance.\n\n\"But it's also crucial that you tell Jackson that my good graces are only going to be offered for as long as it takes me to figure out what happened to Anna Marie. Once that happens, if I have even the tiniest grain of belief that Jackson knew what was going on and didn't report it, I'll charge him as an accessory in her disappearance, and lock him up,\" Allison announced, her voice steady but firm.\n\nAnd with that, Allison excused herself and left the older woman to ponder her words. As she walked away, the auburn-haired beauty couldn't help but wonder if her threat would bear fruit...\n\nIn the conclusion to our story, Marley and Allison come face to face with Travis Lucas, Allison learns the truth of Anna Marie's fate, and the full power of the storm brewing between Allison and Lucas is unleashed on the small community of Camden."
    ],
    "authorname": "Karipet",
    "tags": [
        "strap-on",
        "lesbian",
        "lesbian love",
        "cunnilingus",
        "tribbing",
        "romance",
        "fucking",
        "face sitting"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/falling-for-the-law-ch-08-10"
}