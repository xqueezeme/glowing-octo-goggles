{
    "title": "Could She Really be a Cougar? Ch. 01",
    "pages": [
        "Most days seems the same. Today was different. She had no idea how different it would be. \n\nDede was scheduled for another 12 hour shift in the ER, when the VP of medical services decided that volume was so low that she could go home at noon. She didn't care because she was salaried, but the VP could reduce expenses by letting the extra hourly staff go and not have to pay them.\n\nSo, with the top down, Dede drove home with thoughts of an afternoon lounging by the pool, a pile of books by her side, an iced drink nearby and lots of sun to soak up. As she turned onto her street, her dreams of a pleasant afternoon vanished.\n\nThere were several cars parked around the house. She sighed. Her daughters must be having company over. Oh well, she could still maybe get a quick swim in and then retreat to her bedroom. She thought about relaxing in a particularly naughty way and her thighs pushed together. As a single mom, time for passionate pursuits fell far behind keeping twin teenagers in line, seeing patients in the ER, keeping up with medical journals, continuing education credits and running a household. So, an afternoon in her room with a favorite toy would be a most welcome diversion.\n\nShe pulled into the garage and entered the house through the mudroom. Music blared from the backyard. Walking into the kitchen, she noticed the door to the large refrigerator was open. She was about to say something when it closed. Her daughter, Alexis, and a young man were standing there. They each had their hands full of bottles of beer. They each were totally nude.\n\n\"Mom, what the heck are you doing home?\"\n\nDede thinks that's what she said. She admitted her mind was fogged by the vision of the naked young man. He was tall with long black hair that nearly touched his wide shoulders. His upper torso was all well-defined muscle. With two sparkling blue eyes and a pair of deep dimples on each stubble-covered cheek, he was beyond handsome. But, the thing that really threw her for a loop was the most attractive penis she'd ever seen. \n\n\"I got out early,\" she finally said. \"Guess you weren't expecting me.\"\n\n\"God, Mom, this is so embarrassing. Can't you go away?\"\n\n\"Alexis, no, this is my house. I will not be the one going away. I assume the rest of your friends are most likely in the same state of attire. Please go outside and tell them I will be coming out. I expect to see lots of clothes when I get there.\"\n\nAlexis opened her mouth to protest, but finally let out an exasperated gasp, put the beers on the counter and stormed out. The naked young man also put down his beers. \n\n\"Hi, Doctor Adams, my name is Cody. I don't believe we've met.\" He walked toward her. She tried to keep eye contact, but could not help but notice how his penis bounced with every step. He kept coming closer and she thought his penis might actually touch her. He was mostly flaccid or it would have. She almost smiled thinking that he was acting cocky. With what was between his legs, she thought he's entitled to be so.\n\nHe extended his hand. Slowly she put hers out and felt his strong grip. \"I apologize for causing any embarrassment. We all were just having some fun skinny-dipping.\"\n\n\"And drinking. I'm not sure about you, but my girls are 19.\"\n\nA flash of a brilliant smile. \"I get it, Doctor. Probably not a wise choice, but we weren't getting out of control. By the way, I'm twenty-two, so at least I'm legal.\"\n\nShe couldn't believe she's having a relatively normal conversation with a naked man. And, he was so self-assured despite his nudity.\n\n\"That's all well and good, Cody, but the girls are still underage and I'm responsible for what goes on in my house.\" She thought she handled that well until she realized she had used his name like they were old friends.\n\n\"Understood,\" he said. He looked over his shoulder and, peering at the backyard, said he'd go out and help clean up. As he was looking toward the back, she let her gaze drop to below his waist. She was ogling her daughter's friend's penis. She wanted to shift away but there was something about it that held her.\n\n\"I don't mind if you look,\" he said.\n\nShe snapped her head up to find him smiling.\n\n\"I, uh, assure you I was not, uh,...\"\n\n\"Yes, you were. It's cool. We're all curious and I'm flattered you like looking at me. I'm going out now, unless there was something else you wanted to talk about.\"\n\n\"What? No. But, ask Alexis and Brianna to come in please. And, I was not looking.\"\n\n\"Sure thing. Nice meeting you.\" He shook her hand, turned and walked to the slider. He paused and looked back over his shoulder. She was marveling at the rock hard ass as he moved. \"Doc, yes, you were.\" He closed the slider behind him.\n\nIn a few minutes Alexis and Brianna appeared. They had their bikini bottoms on but remained topless.\n\n\"I thought I said to get dressed.\"\n\n\"We didn't have our tops with us,\" said Brianna. \"They're upstairs.\"\n\n\"What the hell is going on?\"\n\n\"Chill, mom,\" said Brianna with a bit of attitude.\n\nDede's temper started to rise. \"Do not tell me to chill when I come home to find a house full of naked people and a bunch of under-aged kids drinking. I am way far from chilling.\"\n\n\"Mom,\" said Alexis. \"It's no biggie. Yeah, some kids stopped by and we decided to skinny-dip. It's not like you haven't done that. The three of us do it all the time.\"\n\n\"Not all the time, and please do not compare my actions as an adult with what you're doing. Besides, there are boys and girls here. Don't you have any modesty?\"\n\n\"Jeez, mom, like you and the Foleys go skinny-dipping. Uncle Jack is a guy, so what's the big deal with us?\" argued Brianna.\n\n-- \n\nDede recalled the night Jack and Mae Foley were over and they decided to go swimming. It was fun until the girls appeared at poolside. The twins giggled and could hardly contain themselves after catching the obviously naked trio in the water. After Dede shooed them away, they all had a good laugh. The girls' appearance had quite an effect on Jack as he was hard as a rock when they climbed out of the pool. This was the first time she had seen her friend with an erection. Mae kidded him mercilessly. Mae said maybe Dede should do something to help him out. They laughed, and Dede told him he was perfectly capable of handling things by himself. \n\n\"Wanna watch?\" Mae asked.\n\nJack Foley is a good looking guy. At fifty, a few years older than both Mae and Dede, he still is in decent shape. Since her sex life bordered on non-existent, she toyed with the idea that it would be fun to see him masturbate for them. Her interest level spiked as he began to stroke his hard-on. \n\n\"I don't know if this is a good idea,\" she said, but could not infuse any conviction in her statement.\n\nMae said. \"I think it's sexy.\"\n\nJack kept stroking and Mae and Dede sat in their chairs watching. Dede finished her margarita and poured another from the pitcher on the table. Jack began breathing hard and sweat formed on his body.\n\n\"Touch him, Dede.\" \n\nShe shook her head and whispered, \"I shouldn't.\" \n\n\"Give me your hand,\" Mae said. She took Dede's hand and placed it on her husband's erection. Together they moved up and down.\n\n\"That's really nice. You both feel so good, but I'm close,\" Jack said as he removed his hand to allow the two women to do the work.\n\n\"Come on our tits,\" Mae commanded.\n\nShe pulled Dede close, they leaned forward and with one final stroke, Jack exploded. His hot liquid coated one of Dede's breasts and ran down to collect at her hard nipple. Mae pointed his dick at her own nearly flat chest and a couple spurts covered her. She pushed his tip back toward her friend and she rubbed it against Dede's nipple, letting the final drops fall there. Dede groaned as his tip teased her sensitive nipple.\n\nJack sat down heavily in a chair.\n\n\"Clean up time,\" Mae said with a broad smile. She bent and began licking her husband's orgasm from Dede's breast. They had never crossed that line before. Dede wanted to stop her, but was too excited and the tongue on her nipple felt so good. When Mae finished, she turned her chest toward Dede, but she couldn't return the favor.\n\n\"No problem, sweetie,\" she said. She called Jack over and he knelt before her cleaning his own cum from her tiny tits. \"Honey, I think I missed a spot on Dede,\" she said and let her finger move around her friend's nipple that still had some clear liquid. She smeared the nipple. Dede breathed through her mouth as her friend's fingers teased her hard bud. Jack took Dede's breast in his mouth and sucked it clean. She tried to disguise her orgasm, but was pretty sure both of them knew she came.\n\nDede dove back in the pool to cool down. Mae joined her. As they held onto the side of the pool, she said, \"Don't freaking over-analyze this, Dede. It was just a spot of spontaneous fun. Besides, I think you need some outlet. You must be horny all the time. You have no man in your life.\" She wiped some water from Dede's cheeks. \"Nor, a woman.\" Her hand cupped Dede's breast.\n\nDede looked at her and Mae smiled. Dede climbed out of the deep end.\n\n-- \n\n\"Mom, like check in.\"\n\nDede shook her head to again focus on her half-naked daughters standing there.\n\n\"Let me be clear, girls. I want no more drinking, especially when I'm not here and there are people I don't know. Also, I want you\u2014and your friends\u2014to keep your clothes on. I do not need to have parents calling me and asking what the hell I let my children do. Since I'm the only single mom in the neighborhood, and one of the few with a full-time career, I think the other moms already think I'm wacked. So, please, do what I ask.\"\n\nThey exchanged a glance and then agreed. \n\n\"So, you're not like going to come out and read everyone the riot act?\" Alexis said. \"Whatever the fuck a riot act is.\"\n\n\"Watch your language, young lady. Maybe I should come out and talk with them.\"\n\n\"Please, no, mom,\" pleaded Brianna. \"We promise we'll not screw it up.\"\n\nDede let the silence build and slowly nodded. \"But if I find out...\"\n\n\"There will be nothing to find out about,\" said Alexis. \"So, what are you going to do now?\"\n\n\"Well, I was going to take a swim. Since I'm banished from my own backyard, I think I'll take a ride over to Aunt Mae's and swim there. Please promise me I can trust you.\"\n\n\"We promise, Mom,\" said Brianna and hugged her. \n\n\"You're the best,\" added Alexis and gave her another hug.\n\n\"Let's go upstairs. I'm going to change and you girls can cover up your boobs.\"\n\nMinutes later, they popped their heads back in Dede's room as she was standing in bra and panties. She saw they had put on their tops.\n\n\"I'll be out of here in two minutes. Remember what I said.\"\n\nThey again promised to be good and ran downstairs. Dede could hear a cheer go up when they must have delivered the news that the party was not over, just that the rules had changed.\n\nDede popped her bra off and looked in the mirror. \"Not bad for a broad of forty-five,\" she said as her hands ran over her full breasts. She was surprised at how sensitive they felt.\n\nNot getting dressed right away, she called Mae. Although she referred to them as \"Aunt Mae and Uncle Jack,\" they were just friends. The kids, however, thought of them as part of the family. Mae was home since her office was regularly closed on Wednesday afternoons and encouraged Dede to come over. Dede teased her friend by saying she had a really good story for her. Mae tried to worm it out of Dede, but she said she'd have to wait. \n\nSitting on her bed she once again regarded her image in the mirror, she thought about Cody and how sexy he looked in the kitchen. Dede let her finger glide against a nipple. The shiver it sent down her body also sent a signal to her pussy. She thought if she acted quickly, she could achieve some release before leaving for Mae's.\n\nDede lay back on her bed and retrieved the little silver bullet from the nightstand. It was a fortieth birthday gift from Mae. She closed her eyes and played back the scene of Cody naked in the kitchen. In her mind she focused on his dick, no longer thinking of it as a penis. Playing with her nipples got her engine humming. She slipped a hand under the band of her undies and found a damp welcome. She moaned as her fingertip grazed the nub. She let a finger slide between her lips and then enter inside. It felt beyond good. With one hand on a nipple and now two fingers inside, she was moving quickly to the release she sought. \n\nPulling her hand from her nipple, she took the bullet and rubbed it along her pussy until it was slick. She turned it on and slid it inside her vagina. The soft vibrations made her canal contract against the hard metal. She pulled out the vibe and moved it along her butt until it touched her small rosebud. The shock gave her a mini-orgasm. Dede rubbed the head around, spreading the juice, until she felt it was ready. She pushed it inside and let out a yelp. God, it felt so good as it hummed in her butt. She pulled her panty aside and stuffed three fingers inside her vagina. She was pumping with both hands and the big release she was dreaming about earlier was now clearly within reach.\n\n\"Oh, sorry.\"\n\nDede's eyes flashed open to see Cody standing in the doorway. She stopped pumping her fingers into her pussy, but it was too late. The vibrating in her ass pushed her over the cliff. She grunted and tried to hold back, but couldn't. She bucked her hips a couple times and the warmth flowed over her body as the orgasm crested and liquid ran down her thighs.\n\nCody had now come in and closed the door behind him.\n\n\"What the fuck are you doing here?\" she said, her voice raspy with passion. Telling him to leave crossed her mind, but she didn't find the strength to go there.\n\n\"Alexis sent me up to get the aloe from your bathroom. She said you'd be long gone. I'm sorry, Doctor Adams.\"\n\n\"At least turn away,\" she said as she pulled her hands from her pussy and finally readjusted the panty to cover up her exposure. The vibe, still lodged in her ass, seemed to be the loudest sound she'd ever heard. The humming filled the entire room. In exasperation, she put both hands behind her and grabbed the vibe, and pulled it out and turned it off. She set it next to her thigh.\n\nCody watched in silence.\n\n\"Don't be upset, Dede,\" he said. \"We all do it.\"\n\nShe thought she should cover her boobs, but she was so flustered she just sat up on the bed.\n\n\"Right. But usually not in front of an audience.\" Dede could now see the outline of a large erection in his bathing suit.\n\n\"You're so beautiful, Dede.\"\n\n\"Doctor Adams,\" she corrected.\n\nLaughing, he said, \"If you insist, but I just saw a beautiful woman have a mighty orgasm. I think we might be beyond the 'Doctor Adams' stage.\"\n\n\"I didn't have an orgasm,\" she lied.\n\n\"Yeah, you did. It was awesome. I also like that you're not afraid to use your butt.\"\n\nHis eyes fell to the silver bullet on the bed.\n\n\"I was not doing anything to my butt,\" she protested.\n\n\"Sure you were,\" Cody said. \"I love to have mine played with, too.\"\n\n\"Great,\" thought Dede, \"Now we're comparing sexual preferences.\"\n\n\"God, this is really awkward, Cody,\" Dede said after banishing the thought of using her vibe on his tight butt.\n\n\"Not really,\" he said and his dimples deepened, as his blue eyes shone. \"Lick your fingers.\"\n\n\"What?\"\n\n\"Your fingers,\" he said. \"I can see they are still covered with your cum. Lick them.\"\n\nShe couldn't believe that this man, hardly more than a child, was telling her to do something like that.\n\n\"If you don't want to, I will.\"\n\nHe walked over and sat on the edge of the bed. Gently he raised her hand to his mouth. He sucked her index and middle finger, one at a time. His eyes never left hers. When he cleaned them, he directed her ring finger to her lips. Dede resisted for a second, then opened and he guided it in. She sucked it clean. Her heart was racing at the intimacy of what the two of them were doing.\n\nHe grinned. \"Tasty. Don't you think?\" She nodded as her heart raced. \n\nHe picked up the bullet. Dede tried to take it from him, but he pushed her hand away. He looked at it and then moved it to his nose. Breathing deeply, he inhaled whatever scent remained as he smiled. In shock, Dede watched him enjoy this wicked act.\n\nHe got up and took the bullet to the bathroom. She could hear the water running. In a few moments he returned and placed the clean vibe back on the bed. He also carried the bottle of aloe.\n\n\"Dede, you are beautiful. Now, I want you to think about how good it will be when we get together.\"\n\n\"Together?\"\n\n\"Oh, yes,\" he said coolly. \"We are going to fuck. I promise you it will be a great fuck. I know you will satisfy me and I swear I will make you feel like you've never been fucked before. Trust me, it will be that good.\"\n\n\"Cody, I don't think so.\"\n\n\"Yes, you do, Dede. You want to do it now.\" He placed his hand on her mound, thinly covered by the panty. He rubbed his finger along the damp material, forcing the thin fabric between her lips. Involuntarily, she gasped. \n\n\"But, with everyone downstairs, now is not a good time,\" he said. \"You're hot and wet. You want me and I want you. Think about when it will be.\" He looked around the room and saw her cell on the dresser. He gave it to her and asked her to enter the security code. Taking the now unlocked phone, he made a new contact and saved it. He stood and turned his back to her. He pulled his trunks down to his knees. As she marveled at the tight, hard buns, Dede heard the camera go off. Easing his trunks up, he turned back and handed her the phone. She opened the camera function and scrolled to the pictures.\n\nHis erect cock filled the screen. With a big cap and thick shaft, it made her insides churn. She wondered how it would feel inside her. \n\n\"Think about it, Dede. You liked looking at it downstairs. It will be great inside you. And, I can last a long time after the first cum. Think what it would be like to spend a whole day in bed just fucking each other senseless,\" he said and kissed her. His lips were warm and softer than she would have thought a young man could offer. She tried to pull back, but his hand behind her head kept her lips pressed to his.\n\n\"Cody, nothing will ever happen,\" Dede said, trying to catch her breath. \"But, I have to know, did you and my daughters...\"\n\nHe laughed. \"No, never. I'm a friend of one of their friends. We never did anything together. As far as I know, they are both still virgins. This is the first time I've seen them naked.\"\n\n\"Cody, nothing will...\"\n\n\"Just think about it, Dede. Think.\"\n\nHe kissed her again, running his tongue along her lips. In spite of her unease, she kissed him back. When he offered his tongue, she surprised herself by granting it entry. As he explored her mouth, her panties got wetter. He moved back and licked his lips. \"I'm telling the truth about Alexis and Brianna. I must say, though, that I can see where they get their beauty and their awesome tits.\" He touched her right breast, his finger lingering on the hard nipple. Dede felt another orgasm on the threshold, but pushed it back down. He pinched her nipple. She gasped and he pinched harder. The orgasm that was lurking burst forth. Her breath came in short bursts and her hips rose off the bed. \n\nHe walked to the door. \"Dede, that was just a taste of what it will be like between us. Also, I will never tell anyone about what I saw. I promise I will not tell anyone about us fucking. That will be between the two of us. Call me when you're ready.\" He smiled, the two dimples deepening on his cheeks. \"And, I will take your ass like it's never been taken before.\"\n\nDede could hardly breathe thinking about the raw sexuality of her encounter with the young man. Dressing quickly, she was in her car and heading toward Mae's as her mind churned. She had just added another level to the story she intended to tell her. ",
        "-- \n\nCody tossed the aloe to Brianna.\n\n\"Took you long enough,\" she said.\n\n\"Had to use the facilities,\" he said.\n\n\"Hey, Carly, come over here.\"\n\nThe young woman came to where they were standing. \"I don't know how you let your tits get burned. Use sunscreen, girl.\"\n\nCarly shrugged. She was wearing a tee shirt over her bikini bottoms. \"Will that help? My boobs are hurting.\"\n\nAlexis appeared behind her. \"Take your top off and we'll put some on.\" Carly looked at Cody and Brianna, smiled and pulled off her top. \"I thought your mom said we had to keep our clothes on.\"\n\n\"Medical emergency,\" said Brianna.\n\nAlexis took the aloe and squirted a glob in her palm. Reaching around Carly, she began softly working it onto the red breast. Carly opened her mouth, but said nothing. Brianna also put some lotion in her hand and began rubbing the other breast.\n\n\"Guys, you're like turning me on.\"\n\nIgnoring her, Alexis said to Cody. \"Do you think they're covered enough?\"\n\nHe laughed. \"I think you two are better equipped to answer that.\"\n\nBrianna looked at his bathing suit and noticed the tent. She wasn't sure it was like that when he came out of the house, but it sure was there now.\n\n\"Well, it's obvious you don't mind looking,\" she said. Cody glanced at his tent and shrugged.\n\nAlexis was now pinching Carly's nipple. \"Oh, Alexis, that feels awesome. God, I think I might...\"\n\nBrianna pinched her other nipple and Carly squealed. Alexis rubbed the front of Carly's bikini bottom. As Alexis pushed the fabric of the suit between her sex lips and pushed hard against the redhead's clit, Carly closed her eyes and the twins and Cody watched her cum.\n\n\"I think that covers it,\" said Brianna. She turned to Cody and wiped her hands on his chest, enjoying the smooth skin covering the tight muscles. She moved her hand to his waistband and pulled it out. His erection was almost popping out. As she started to move her hand to the hard member, he guided her wrist away.\n\n\"Spoilsport,\" she said.\n\n\"I think we'd better keep it to looking and not touching,\" he said.\n\n\"But I've never seen it hard before.\" \n\n\"Me neither,\" chirped Alexis. She moved next to her sister and looking where Brianna had pulled Cody's suit away saw the large cock sticking straight up. \n\n\"Cody, that is freaking awesome. Can't we have a little feel?\" Carly joined the other two in looking at the erection.\n\n\"I don't want you touching me. Nothing against you girls, but I think that I'd don't want to get sexually involved with you or the others. You are definitely hot, but it's just the way I want to be.\"\n\nBrianna said, \"I like seeing it. Thank god my mother didn't see it like this. I'm sure it was enough that she saw it soft.\"\n\n\"Def,\" said Alexis. \"Mom must be like super horny. God, she'd love something like this.\"\n\nCody smiled.\n\n-- \n\nMae was out by her pool when Dede arrived. It was d\u00e9j\u00e0 vu, since she was basking in the sun totally nude. \"Is no one wearing clothes today?\" Dede asked herself. \n\n\"Jesus, Mae, what if it were someone else besides me coming back here?\"\n\n\"Guess they'd see me nude,\" she said and stood. They hugged and kissed.\n\n\"Drink?\"\n\n\"God, yes.\"\n\nMae's tight little butt hardly shook as she walked over to the outdoors bar Jack had installed. \"Beer, wine or the hard stuff?\"\n\n\"Beer for now,\" Dede answered. Mae headed back toward her with a beer in each hand. Her small breasts jiggled slightly.\n\n-- \n\nDede's mind slipped back to the first time they met, when they were interns at General Hospital. Dede already had planned on emergency medicine and Mae was headed toward surgery. Mae ended up in hand and plastic surgery. She was incredibly gifted in putting smashed hands back together. Few people realized how complicated a hand is. Mae gave people their lives back. Although hands were her specialty, boobs, unwanted body fat and wrinkles paid the bills. Mae would often say that there wasn't a tit in town that she hadn't seen, lifted or created.\n\nHaving just finished orientation for new interns, they were having a cup of coffee in the cafeteria of the hospital. They had been told to expect little rest for the time they would be there. \n\n\"I think I should drop out now,\" said Dede.\n\n\"Why?\"\n\n\"I've got twin girls at home, nearly a year old. I thought getting through med school and being pregnant was hard, but thinking about all the time I'll be spending here makes that experience look easy. My husband just finished his residency in Dermatology. He is taking six months before beginning his practice with his father. He's watching the girls, but I still have to be their mother. Plus, I'm breast-feeding.\"\n\n\"Wow, you look fabulous for a woman who just had twins.\"\n\nDede blushed and thanked her. \"Still have a few pounds to lose, but if I stay, I'm sure that will take care of itself.\"\n\n\"Hope you don't lose them in your boobs,\" said Mae.\n\n\"Huh?\"\n\n\"It looks like you've got great boobs. Don't freak out, it's just I happen to notice boobs.\" Mae cupped her scrubs top and said, \"Especially since I have none. I guess it's a case of boob envy.\"\n\nDede felt she should say something complimentary to her new friend.\n\n\"You look great. Very sexy.\" She couldn't believe she added the sexy part, although Dede wondered what the small breasts looked like. \n\nAs they moved through their internships, the two women became fast friends. When they both decided, after residency, to work in the same city in New England, their friendship became rock solid.\n\nAs a tall woman, Mae's long and lean body looks good. With just the two tiny mounds on her chest always showing in her customary knit tops, Dede used to wonder if she ever considered giving herself what made so many of her patients happy. After getting up the courage to ask her, Mae told her that she was happy the way she was. \n\n\"I've got a great man who loves the shit out of me. I've had some really fantastic sex before we met with people who loved my body. I still catch people checking me out. So, no, I'll stick with what God gave me. It's worked well for me so far.\"\n\nDede knew she was telling the truth about her ability to turn heads. The hospital is a cesspool of sex and gossip. The most frequent description of Mae, expressed by both men and women, was that she was hot and sexy. Mae always dressed in tailored clothes, kept her blond hair cropped close and her lack of a chest only seemed to make her more attractive. Dede wondered what many of those people would think if they saw the dark landing strip compared to the light blond hairdo. It seems Mae made some concessions to vanity.\n\n-- \n\n\"Here's your beer and why, may I ask, are you staring at my boobs?\"\n\n\"Sorry,\" said Dede, \"I didn't think it was obvious. I was daydreaming. Anyway, I think they're sweet.\"\n\n\"They are, dear. And, any time you want to confirm how sweet, just let me know.\"\n\nFor as long as they've known each other, Mae has teased Dede about hooking up. Dede knew Mae had gone to bed with a number of women when they were interns together. She also knew of several other times that Mae was involved with a woman. It was no secret because Mae would give her detailed descriptions of what Mae referred to as her \"lady fucks.\" Dede also was aware that Mae also indulged in some girl-to-girl action after marriage. The list of these liaisons included a couple of ladies Dede knew and whom she never suspected would be into sex with women. One woman was the twins' English teacher in high school. The woman would probably die of embarrassment if she knew that Mae described how she could make the teacher squirt and that the language she used was not what was found in classic literature.\n\nDede understood that Jack knew about Mae's \"lady fucks\" and maybe participated in some three-ways. Mae explained that although she and Jack had a great sex life, they both understood that the desire for novelty didn't die with marriage. Jack knew that Mae enjoyed sex with women and never objected. Dede had asked if he had the same freedom. \n\n\"Jack has had some flings,\" Mae said. \"As long as he uses protection, doesn't embarrass us publically and doesn't lie to me, he is free to act on his fantasies.\"\n\n\"Does this understanding mean you can be with a man in addition to being with women?\" Dede once asked her.\n\n\"Same rules\u2014protection and discretion. Up to this point, however, it's just been women. And, I am certainly not complaining. I even have room on my dance card for you.\"\n\nDede always politely refused the subtle and not-so-subtle offers Mae floated out there, but that didn't mean she wasn't tempted from time to time. \n\n\"So, what's the big story you have?\" Mae asked as she leaned back in her lounger, draping her legs on either side and opening her neat, little pussy to her friend.\n\n\"God, Mae, close the freaking door. I can't concentrate while watching your pussy wink at me.\"\n\nMae laughed and brought her legs up on the lounger and crossed them at the ankle. \"Better?\"\n\n\"A little more decent,\" said Dede, \"but just a little.\" She began to tell Mae of her earlier experience. \n\n\"Well, I got home today to find Alexis naked in the kitchen.\"\n\nMae lowered her sunglasses to look at her friend. \"Interesting. I assume there's more?\"\n\n\"Oh, yeah. She was standing next to this freaking gorgeous guy with the best looking penis I have ever seen.\"\n\n\"Well, darling, now you have my attention. And, if you are going to tell me a hot story, for the love of god, do not call it a penis.\"\n\nDede described the incident in the kitchen and how at ease Cody was. \"It was like he knew I enjoyed looking at him and didn't mind that a bit.\"\n\n\"Well, did you like looking at him?\"\n\n\"Hell, yes,\" Dede said and the two women laughed. \"It's an amazing...cock.\"\n\nDede hesitated about telling her friend the rest of the story. She then figured that if anyone could appreciate it, Mae would. Also, it would help to be able to talk through her mixed feelings.\n\n\"That's not all that happened,\" teased Dede.\n\n\"More? I love more. But, honey, take some clothes off and relax. You're making me sweat looking at you all bundled up.\"\n\n\"I'm hardly bundled. All I have are shorts, tee shirt and underwear.\"\n\n\"At least three pieces too many,\" said Mae as she stood to replenish their drinks. When she returned, Dede had stripped to just her bikini panties.\n\n\"Ah, now doesn't that feel better?\" Mae asked as she handed Dede a beer and motioned to the sunscreen on the table. Dede applied a coat to her exposed skin and paid extra attention to her white breasts.\n\n\"God, if anyone comes in I'll die. Which, by the way, is a great segue to the rest of the story.\"\n\n\"Do tell.\" Mae ran her hand over her own breasts and pulled on each nipple. The buds now stood at full attention. As Dede described how Cody interrupted her masturbation session, Mae continued to play with her nipples.\n\n\"Christ, Dede, that is freaking hot. Let me see the picture he took.\"\n\n\"I don't know if you could handle it,\" she teased.\n\n\"Show me the fucking picture or I'll tickle you 'til you pee.\"\n\nMae knew how ticklish Dede was. Dede must be feeling hyper-sexed because the thought of her friend's naked body writhing all over hers, while she tickled her, made Dede very damp. Thank god her panties were black.\n\nDede pulled her phone out and opened it to the photo gallery. She handed it to Mae.\n\n\"Sweet Jesus, that is one handsome dick. God, Dede, you have to go after it. Just thinking how that would feel in my cunt drives me crazy.\"\n\n\"Yeah, it is a piece of work,\" Dede agreed. \"But I can't go to bed with a kid\u2014and a friend of my daughters. That's trashy romance-novel-cougar shit.\"\n\n\"Fuck that,\" Mae said. \"And, didn't you tell me he's twenty-two. That's hardly a kid. If he is as gorgeous as you say and he has this kind of cock, you should be calling to set a date now.\"\n\n\"Hmm, that's an idea,\" said Dede.\n\nShe took the phone back and began a text. Grinning at Mae, she pushed send.\n\n\"What did you do?\"\n\n\"Asked for a selfie, so you could see what the rest of him looks like.\"\n\n\"Did you tell him that I might see it?\"\n\n\"I told him I needed to show my friend how handsome he is.\"\n\n\"See, you are thinking about going to bed with him,\" Mae said.\n\n\"Not really. Just sorta kidding around.\"\n\nHer phone buzzed. Dede opened the text. She put her hand to her mouth and stopped breathing.\n\n\"What?\" screamed Mae.\n\n\"I don't think I should show this to you.\"\n\n\"Well, you'd better, bitch.\"\n\nSmiling, Dede handed over the phone. She watched Mae's eyes go wide as she looked at a picture of Cody reflected in a full length mirror. He was once again naked and aroused. Dede recognized the mirror as the one in her master bathroom. He must have gone up there to take the picture when he got her text.\n\n\"He is simply fucking awesome,\" she said. \"What a body and cute enough to die for.\"\n\nThe phone buzzed and Dede took it back.\n\nshe like?\n\nDede smiled as she replied, \"more than liked\".\n\nIn a few seconds her screen read, \"send me her pic\".\n\n\"He wants a picture of you.\"\n\n\"Oh, god, really?\" Mae thought for a moment. \"Sure, what the fuck.\"\n\n\"You mean with you sitting there like that?\"\n\nMae grinned, \"Of course not.\" She got up and grabbed her wide-brimmed hat from the table. Placing it at an angle on her head, she covered most of her face. Sitting back down she let her knees fall apart and smiled for the camera. Dede could just make out Mae's open mouth with the tip of her tongue visible. She imagined this view would get to Cody, because it was getting to her.\n\n\"You can't be serious, Mae. You're showing everything.\"\n\n\"Take the damn picture.\"\n\nDede snapped the picture. \"Should I really send it?\"\n\n\"Yep.\"\n\nDede sent it.\n\nAbout a minute later Dede looked at her screen. She opened the text. There was another picture of Cody. This time he his hand was wrapped around his hard dick. The text read, \"we'd make a tasty club sandwich\". The two women stared at the image on the phone, each lost in her own erotic reverie.\n\n\"Dede, seriously, if you do not fuck him, you're crazy. And, if you don't, then I will.\"\n\n\"I think he was implying that he'd want both of us.\"\n\n\"That could be nice,\" Mae said and slid a finger along her slit. \"That way I might finally get you in bed with me.\"\n\n\"Mae, don't do that,\" pleaded Dede as she watched Mae play with herself. \"I'm horny enough.\"\n\n\"Then, I say, we do something to ease that horniness.\" This time Mae slid a finger deep inside her. \"Oh, this feels good.\"\n\nDede couldn't believe\u2014well, since it was Mae, she could believe\u2014that she was masturbating in front of her.\n\n\"Mae...\"\n\n\"Don't be such a pussy,\" she said winking. \"Get those panties off and we'll do it together.\"\n\n\"I've never done that before.\"\n\n\"So? There's always a first time.\"\n\nDede watched as her friend now used two fingers to stimulate herself and pulled on a nipple with her other hand. Her own need was great. Slowly, Dede peeled her underwear off. Sitting facing Mae, she ran her fingers along her sex. She was shocked at how wet she was.\n\n\"You have such a pretty pussy,\" Mae said. \"It's a perfect complement to your awesome tits.\"\n\n\"Thanks,\" Dede answered as she dared to insert a finger. A low moan escaped her mouth.\n\n\"Feels good, right?\" asked Mae.\n\nDede nodded and closed her eyes.\n\n\"No, keep them open. I want you to watch me as I watch you. That makes it twice as hot.\"\n\nThey watched each other. The heat they felt was not solely the result of the sun on their naked bodies. Mae began to get vocal as she let three fingers move in and out. Her other hand was exclusively servicing her clit, which looked painfully swollen extending beyond its hood.\n\nDede had long passed the embarrassment stage and was aching for release. With her legs wide apart, she was twisting two fingers in her canal and strumming her clit. She wished she had her bullet to insert behind. Playing with her butt was a time-tested way to send her way over the top.\n\n\"I'm close,\" said Mae. \"Let's try to cum together.\" Dede nodded in agreement.\n\nDede added another finger and took hold of her clit. She watched as Mae used all four fingers inside and was now slapping her hard clit. \n\n\"I'm there,\" Dede grunted. \n\n\"OK, almost there. Wait for me.\" \n\nDede could hold back no longer and let the orgasm take her. She at first closed her eyes, but then forced them open to watch her friend bounce on the chaise lounge as she came. Both women were vocal as they reached the peak. Mae said she loved watching Dede's fingers slide in and out. \n\n\"I could do so much with your cunt,\" Mae said. \"My tongue would be so far up you that you'd be choking on it. I want you sitting on my face. I want you cumming all over my face.\" Mae let out one last gasp and her orgasm peaked.\n\nMae slid down to the end of her chaise lounge and was now just two feet from Dede's chair. \"Give me your fingers,\" she said still breathing heavily.\n\nAt first Dede was confused, but realized that her friend wanted the fingers that were buried in her cunt. \"You wouldn't,\" Dede said. \n\n\"Oh, yes I will,\" Mae replied.\n\nSlowly Dede pulled her fingers free and extended her hand to Mae. Her friend guided the damp digits to her lips and then into her mouth. As she sucked them clean, Dede had a small orgasm. This was the second time today someone sucked her juice from her fingers.\n\n\"God, you're freaking delicious,\" Mae said. She held up her four fingers, still glistening with her wetness. Dede looked at them. After a several long seconds, she nodded and Mae placed them at Dede's lips.\n\nAs her tongue touched them for the first time, her mind reacted with shock. She was tasting another woman. She liked it. Mae pushed and Dede opened her mouth, which was immediately filled with the fingers covered with Mae's sexual essence. She licked and sucked and didn't stop until no taste remained.\n\n\"Let's get wet,\" Mae said and rose to head to the pool.\n\nDede grinned at the double meaning and joined her friend. As she stood next to Mae at the edge, her friend turned and kissed her. They had kissed before, usually after a night of drinking with their husbands, but this kiss was different. A chill ran through Dede as the soft lips pressed to her mouth.\n\nMae stepped back and looked into Dede's eyes. Sensing no anger, she grabbed her hand and they jumped into the pool. The water was refreshing and helped to lower both Dede's body temperature and her libido. Mae grabbed two pool noodles and the women floated in the deep end.\n\n\"That was nice,\" Mae said. \"I'm glad you joined me.\"\n\n\"Still can't believe I did that in front of you,\" Dede admitted. \"You are a very bad influence on me. Plus, you kissed me.\"\n\nMae smiled. \"Was it a bad kiss?\"\n\n\"No, it was nice.\" \n\n\"I also licked your fingers. Did you like the way I tasted? I loved yours.\" \n\n\"Yes. But, I think you are corrupting me.\"\n\nMae ran her foot up Dede's leg. \"On the contrary, honey, I think I may be just what the doctor ordered. And, I am a doctor.\"\n\nThey laughed. \"So, when are you going to call Cody?\" Mae asked.\n\n\"I can't do that, Mae. Really. It's so wrong on so many levels.\"\n\n\"You said that he swore he never touched your girls, right?\"\n\nDede agreed.\n\n\"So, I see no problems. He's younger, but so what? He's an adult and definitely doesn't sound like a virgin. You won't be corrupting him. Besides the younger they are, the longer they last. And, he promised to take your ass. And from the looks of what I just saw, I'd guess that's something you'd like.\"\n\nDede hesitated and then slowly nodded.\n\n\"Give that stud a call,\" urged Mae.\n\n\"It just feels yucky,\" said Dede.\n\n\"What should feel yucky is that you haven't gotten laid in what, two years?\"\n\n\"Two and a half,\" Dede said.\n\n\"That's criminal. A beautiful woman withering away because her husband left? Sorry, not acceptable.\"\n\n\"Mae, you know the divorce was mutual. We drifted apart, that's all.\"",
        "\"Yeah, he drifted right into bed with that hot little nurse in his office.\"\n\n\"After we divorced,\" Dede said.\n\n\"Give me a break, Dede. You don't think he was warming his pecker long before the ink was dry on your decree? Gerry's not a bad guy, but he was looking for fresh pussy.\"\n\n\"Are you saying my pussy is stale?\" Dede said trying to get her friend to back off her negative rant.\n\n\"Well, it looked plenty fresh a few minutes ago. Of course, if you want me to be sure, I'd have to taste it. What say you?\"\n\nDede splashed Mae. \"You're terrible. Someday, I just might call your bluff. Then what would you do?\"\n\n\"Eat you till you passed out,\" answered Mae. Dede's face burned with the thought. \"Anyway, we're talking about breaking the screwing drought. Cody's perfect. He's not looking for any deep relationship. He's already seen the goods and still is hot for you. And, he looks like he could fuck all night. What more do you want?\"\n\nDede thought about what Mae said. Her friend was right. She didn't want anything more out of a physical relationship. She wondered what her daughters would think. Should she tell them? She answered that right away\u2014never in a million years.\n\nMae climbed out and was sprawled on the pool's apron letting the sun dry her. Dede regarded her long, lithe body and wondered what it would be like to drop her guard and see how sex with a woman could be. Dede suspected with Mae it would be wild and hot sex.\n\n\"Penny for your dirty thoughts,\" Mae said.\n\nDede realized she had spaced out again. This was the third or fourth time today her mind wandered to think about sex. Mae was right about one thing, she needed to get laid.\n\n\"How would I do it?\" she asked Mae as she lay beside her on her towel.\n\n\"Usually, spread your legs...\"\n\n\"Stop it,\" said Dede. \"You know what I mean. Do I just call him? Try to meet with him? What do I do?\"\n\n\"So, you've made up your mind?\"\n\n\"Well, I think I could make a decision if I can put it into concrete steps that I would take.\"\n\n\"OK,\" said Mae as she rolled on her side to face Dede. \"The first question is 'where?' You probably don't want to take your boy-toy to your bedroom in case the girls find out.\"\n\n\"Boy-toy! You're not being helpful.\"\n\nMae grinned. \"So, I also doubt that you would want to go to his place. You have no clue what his living situation is. Does he room with a bunch of other guys? Do any of them know your daughters? Does he even have a bed? God, who knows what's living on his sheets.\"\n\n\"Mae, are you trying to talk me out of it?\"\n\n\"Sorry. OK, let's concentrate on the positives. You could get a motel. Of course, you'd probably have to book it and pay for it. But, after the dirty deed, you each go your separate ways. Nice and neat.\"\n\n\"That sounds so trashy,\" Dede said. \"Renting a motel room knowing you're going to have sex. I would die of embarrassment thinking the clerk knows why I'm there.\"\n\n\"Dede, I'm sure you would not be the first woman to rent a room to fuck in. Anyway, that's only one possibility.\"\n\n\"What's another?\"\n\nMae let her eyes roll up toward her house.\n\n\"You can't be serious. Bring him here? No way. What if Jack found out?\"\n\n\"Jack is going away this weekend on his annual fishing trip, translation, a week of hard drinking and farting with the guys up in the mountains, while watching some raunchy porn. So, no chance he'll find out. Well, anyway not until I give him all the details when he returns. God, he will explode just imagining it.\"\n\n\"Will you be here?\"\n\n\"Someone has to be the hostess.\"\n\n\"Hostess?\"\n\n\"Yeah, put out drinks, have some snacks ready, lick his cock clean\u2014all the usual hostess duties.\"\n\nDede laughed at her friend. \"Mae, you crack me up.\"\n\n\"Dede, this would be the perfect option. It's totally safe. I will be here in case something goes wrong, which will not happen, of course. Call Cody and tell him to be here on Saturday by noon. In the meantime, I'll go buy a gross of condoms. Unless you think I should get two gross.\"\n\nLaughing, Dede said, \"You are 'too gross' already.\"\n\nMae got up and handed Dede her phone. \"Do it.\"\n\n\"Now? While you're here?\"\n\nMae nodded.\n\nThinking she had completely lost her mind, Dede hit Cody's number in her contacts.\n\n\"Hey,\" said the low voice on the other end.\n\n\"Some picture you sent,\" she said. She could hear laughter in the background and assumed he was still at her house. She hoped he was somewhere that others couldn't hear his side of the conversation. He told her to hold on. She heard a door slide open and close, and then the background noises disappeared.\n\n\"Wanted to impress your friend, who is hot. Of course, not as hot as you.\"\n\n\"Why do you want an old lady like me?\" Dede asked.\n\nMae was pantomiming putting a gun to her head and pulling the trigger.\n\n\"First, I don't consider you old.\"\n\n\"Let's be frank, Cody. I am almost twice your age.\"\n\n\"Actually, you are twice my age-plus.\"\n\n\"Thanks, that made me feel so much better.\"\n\n\"No, the point is, Dede, that shit means nothing to me. You are an attractive and sexy woman. To be honest, you have a killer body. Plus, I know you're smart. And, I don't think you are seeing anyone right now. At least, that's what Alexis and Brianna say.\"\n\n\"Cody, one thing we need to get straight. Never mention my daughters again. Not when we are talking about getting together.\"\n\n\"Deal,\" he said. \"So, we are talking about getting together. Great.\"\n\n\"I didn't say that.\"\n\n\"Dede, why else would you have called? I get it that you're nervous. I know the age thing has you a little freaked. But, believe me when I say, all those things will disappear real fast. We would be so awesome together.\"\n\n\"I'm not sure I can go to bed with someone who says 'awesome.'\"\n\nDede heard the genuine laughter. \n\n\"See, that's what I mean. You are like the perfect woman-hot and funny. We would be just the best in bed.\"\n\nDede's mind was racing at supersonic speed. Was she really going to go ahead with this insane idea?\n\n\"Listen, I have two twelve hour shifts tomorrow and Friday. I'll need to sleep in a bit on Saturday. How about you come over to my friend's house around two on Saturday afternoon and we can discuss this in person.\"\n\n\"Your friend like the hot blond in the photo?\"\n\n\"Yeah.\"\n\n\"Aweso...I mean, wonderful.\"\n\nIt was Dede's turn to laugh. \n\n\"I'll text you the address and directions. Remember we're just agreeing to talk.\"\n\n\"OK,\" he said. \"But, Dede?\"\n\n\"Yes.\"\n\n\"I am going to bring my toothbrush.\"\n\nDede paused and breathed in deeply. \"Do that.\"\n\nShe hung up with a wide grin.\n\nMae pounced on her. \"You slut,\" she screamed. \"Now all I have to figure out is how to rig up a camera in the guest room.\" Dede was trapped under Mae as she straddled her. She tried to buck her off, but her friend's long legs kept her pinned.\n\n\"Listen,\" Dede said as she put her hands on her friend's small boobs. \"Remember what he said about a club sandwich. Maybe you won't need a camera.\" Mae groaned at both the thought of being in bed with both of them and the feeling of Dede's hands on her boobs. She moved her bottom back and forth. \n\n\"Don't tease me like that,\" Mae said.\n\n\"Like you don't tease me?\"\n\n\"Fair enough. But, that doesn't mean I can't dream about it for the next couple days.\"\n\n\"I bet you will,\" said Dede. \"Now, can you get off me and hand me a towel. Your pussy is making a puddle on my tummy.\"\n\nMae ground harder against her. \"I can make it do more than leave a little puddle.\"\n\n\"Not today, sweetie, not today.\"\n\nMae dropped her head and kissed Dede. This time Dede kissed back. When Mae offered her tongue, Dede accepted it. As they kissed, Mae ground her pussy against her friend's. She moved a hand to take Dede's breast.\n\n\"Uh, I think that's enough,\" Dede said and rolled over to push Mae off.\n\n\"Cock tease,\" said Mae.\n\n\"Don't have a cock.\"\n\n\"Cunt tease, then,\" said Mae and kissed her once more.\n\n\"Mae, I can't do this,\" said Dede. \"Not now anyway.\"\n\n\"You mean there's hope?\"\n\n\"I mean I can't do this now. But, just so you know, you're an awesome kisser.\"\n\n\"If you think that's awesome\u2014which by the way is the word you told Cody-the-Cock not to use\u2014just think what it would be like to have me between your legs. That, my darling, would be awesome kissing.\"\n\nDede felt her pussy contract with the thought. \n\nThe rest of the week was thankfully busy and Dede didn't have time to think about her rash decision to meet with Cody. She did, however, have time to talk with her daughters. She arrived home at seven-thirty one night to find them eating a pizza at the kitchen counter. Dede grabbed a piece and sat across the breakfast bar from them.\n\n\"Girls, about the other day...\"\n\n\"Mom,\" whined Alexis, \"do we have to like beat this to death?\"\n\n\"Alexis, this is the first time I've brought it up since I found you naked in the kitchen.\"\n\n\"Like, I get it,\" she said. \"You don't want us to have any fun and you're happy you've ruined our lives. Message received, Mom.\"\n\nDede kept her cool. Alexis always over-dramatized every situation.\n\n\"Girls, I'm your mother, so yes, I am concerned. And, yes, I will talk about things that are important. Finding you naked with a man does concern me.\"\n\n\"God, mom, it's not like we were fucking or anything,\" said Alexis.\n\n\"Do you have to use that language? And I never accused you of that.\"\n\n\"What? Accused me of what?\" shot back Alexis.\n\n\"Fucking,\" Dede said and then smiled.\n\nThe girls giggled and the tension in the room dropped to normal teenaged angst level.\n\n\"Alexis, it's just that I don't even know anything about this Cody,\" Dede said, convincing herself that that statement is true now, but not for long.\n\n\"Well, let's see,\" said Alexis. \"He's twenty-two, a friend of Sean's, going to be a senior at State in the fall, works in his father's insurance agency for the summer, was on the swim team for three years, but is not doing it senior year, made dean's list all three years, is six feet two and has the most beautiful cock I've ever seen.\"\n\nDede spit out the mouthful of diet soda she was drinking. \"Alexis, really!\"\n\n\"Like you weren't checking it out, Mom?\"\n\n\"I most certainly was not. Did he say that?\" Dede asked, wondering if maybe Cody was not as discreet as he promised.\n\n\"No, but I saw you look at him,\" Alexis said.\n\n\"Looked, as in totally shocked to find a naked man in my kitchen. Yes, I did.\"\n\n\"Mom, it's no big deal,\" said Brianna. \"All the girls think he is like nuclear hot. So what if you think so too.\"\n\n\"Girls, I assure you...Oh, forget it. This is a ridiculous conversation. I'm just worried that you might, you know, get in over your heads.\"\n\nAlexis and Brianna shared a look.\n\nBrianna spoke up. \"Even though this is like the lamest talk we've ever had, we swear we are both still virgins. And, yes, we are on birth control, as you know, to control our periods. And, yes, we still promise that if we do have sex with a guy that we will make him wear a condom so we don't get any disease. So, how about we don't have to talk about this anymore?\"\n\nDede nodded.\n\nAlexis then asked, \"But, seriously, don't you think he has a fabulous cock?\"\n\nDede looked at her daughters. She realized they were growing up. \n\n\"Well,\" Dede said, \"strictly speaking as a physician...\"\n\nHer daughters groaned.\n\nDede laughed. \"Speaking as a physician, I would have to say...it's an awesome cock.\"\n\nThe three women burst out laughing. \n\n\"So, just how many naked men have you girls seen to be able to put Cody's at the top of the list?\"\n\n\"It's not like we've seen that many,\" said Brianna. Dede could tell the girls were relaxing and enjoying the ability to talk frankly with their mom. \"But, we have had a couple skinny-dipping parties and all our friends were there.\"\n\n\"And, there have been a few games of 'Truth or Dare,\" added Alexis.\n\nDede recalled her teen years and how her sexual education was aided by Truth or Dare.\n\n\"My god, I'm raising sex addicts,\" said Dede as she pulled three beers out of the fridge.\n\nThe girls' eyes widened as their mother passed them each a bottle.\n\n\"It's mostly looking, Mom. You know, curiosity. And, what's with letting us drink. Not that we're complaining,\" said Alexis.\n\n\"Look, you're almost twenty. I know you drink. I just don't want a bunch of kids here drinking when I'm not around. Seriously, I could get into trouble. Like being arrested trouble. It could cost me my job and really screw us up big time.\"\n\nThe girls nodded and Dede felt she was getting through to them.\n\n\"So, have all these skinny-dipping parties been here?\"\n\nAgain her daughters shared a look. \"Not all, but a bunch of them.\"\n\n\"A bunch?\"\n\n\"Well, not like a big bunch,\" Brianna said trying to smooth over her sister's comment.\n\n\"And, you girls are not embarrassed to have your guy friends see you naked?\"\n\n\"At first, it was weird,\" said Brianna. \"But, after a while, we kinda got used to it. Plus, we got to see them naked.\"\n\n\"And, you're not having sex?\"\n\nAgain, the shared look.\n\n\"What?\"\n\n\"God, Mom, now this is totally embarrassing,\" said Alexis.\n\n\"Hey, we've come this far,\" Dede said. \"Tell me the truth.\"\n\n\"Well, Alexis and I don't have sex with the guys. Honest, mom.\"\n\n\"OK, then what's the story?\"\n\nAlexis took a drink of her beer. \"Well, sometimes we have like dumb contests.\"\n\n\"Uh-huh. And?\"\n\n\"Well, god, mom, do you really want to know?\" asked Brianna.\n\n\"No, but I think I should,\" answered Dede.\n\n\"OK, like a couple times there was like a blow job contest.\"\n\nDede was happy she was sitting on a stool. Otherwise, she feared she would have fallen flat on her ass. She had always spoken frankly with her girls. If they asked a question, she'd try her best to answer it. Maybe it was her training as a physician, but Dede thought being able to talk openly about sex might help the girls develop a healthy and normal attitude about it. Maybe if they didn't see it as some hidden mystery, they might not think that they had to sneak around and experiment. Up to this very second, Dede was convinced it was the right way to deal with sex. They had great conversations. At this very second, however, Dede was seriously reconsidering her approach.\n\n\"Blow job contest?\"\n\n\"Yeah, you know, see who can make the guy come the soonest.\"\n\n\"And, you girls...Let's see. OK. Did you girls ever win?\"\n\nBrianna shook her head and Alexis turned scarlet and couldn't meet her mother's gaze.\n\n\"Ah, I see.\"\n\n\"Mom, it's no biggie,\" said Alexis. \"God, it's just a blow job. I'm not going to get pregnant or anything.\"\n\n\"So, blow jobs aren't a big deal?\" Dede asked, while wondering if things had changed that much since she was a teen. She also thought she had not said \"blow job\" this many times in her life. \"Aren't you concerned about your reputation?\"\n\n\"Not really,\" said Alexis. \"It's like a hand job - everyone does it.\"\n\n\"Everyone?\"\n\n\"Well, all the kids we hang around with,\" said Brianna.\n\n\"You mean Marcy Evans gives blow jobs?\" Dede asked. Marcy was the quietest and most shy girl in their group. Dede could not imagine her participating in such public displays of sexuality.\n\nHer daughters laughed. \"Mom, she is like the BJ queen,\" said Alexis.\n\n\"God, I'm feeling old.\"\n\n\"Relax, Mom. We're not going to turn into some sex demons. Actually, Brianna and I and some of the other girls have talked about it. We think it helps keep things from getting crazy since we can sorta release tensions.\"\n\n\"What do you girls get out of giving blow jobs?\" asked Dede.\n\n\"Well, it's cool to see the guys when they, you know, come,\" admitted Brianna. \"And, it's way cool to see them naked and with hard-ons.\"\n\n\"Yes, and...\" prompted Dede.\n\n\"OK, we let the guys feel us up,\" said Alexis.\n\nThis time it was Dede's heart that threatened to flop to the floor.\n\n\"Girls, are you sure this isn't going too far, because I certainly think this is over the line?\"\n\n\"Mom, would you rather have us fucking each other? Seriously, this is a lot better,\" said Alexis.\n\n\"I'd rather have you both locked in your rooms and never see a man until you're thirty, but I guess that's not going to happen.\"\n\nBrianna said, \"Right now it's just kinda fun. I know we can control it.\"\n\nDede nodded and then said, \"But, blow job contests! I don't know.\"\n\n\"Like you've never given a blow job,\" Alexis said.\n\nDede was taken back. All day long she was daydreaming about sucking Cody's cock. Recalling her dreams now made her blush.\n\n\"Again, we're not talking about my sex life,\" she said and then laughed. \"Believe me, right now that would not take more than a couple seconds.\"\n\nLooking at her daughters' expressions, Dede said, \"Sorry, girls, TMI. You don't need to hear that kind of talk from your Mother.\"\n\n\"Hey, Mom, we like have eyes. Haven't seen any guys sneaking out of here in the morning with big grins on their faces,\" offered Brianna.\n\nThe three laughed. \"You're oh so right,\" said Dede.\n\n\"That's why we think it's cool that you can take care of things yourself,\" said Alexis with a grin.\n\n\"What?\"\n\n\"Mom, these aren't stone walls between our bedrooms. News flash, sound like carries, you know.\"\n\n\"Now, I am truly embarrassed and mortified,\" said Dede. She got up and pulled three more beers out.\n\n\"Mom, remember when you gave us our first 'sex talk?' You said that masturbation was natural and we should not be ashamed. Well, we're not. We do it all the time. So, if you do it too, it's just part of getting on with life.\"\n\nDede shook her head. \"How did this little talk spin around to getting sex advice from my daughters?\" She laughed and drank some of her beer.\n\n\"Hardly advice, Mom. Just saying that without a guy, we understand that you have needs. You are a beautiful woman, who, according to all the scientific information like on-line and Wikipedia, is at the peak of her sexual drive. We say go for it. We can tolerate the buzzing and the screams.\"\n\nDede looked at the two smiling girls across from her. \"You heard the buzzing?\"\n\n\"Oh, yeah,\" said Brianna.\n\n\"Mos' def,\" added Alexis. \"And, by the sounds you're making I think you owe it to your daughters to tell us what kind of vibe you have. That would be totally useful data.\"\n\nThe three shared a laugh.\n\n\"Girls, seriously, be careful. STDs are no small thing. Some of them can stay with you for life. Be careful and use your heads.\"\n\nThe moment the words left her mouth, Dede regretted them.\n\nThe girls both laughed, and Alexis said, \"Already doing that, Mom.\"\n\nDede joined them. She then picked up the empties and told them she was going up to shower and change.\n\nAs she was about to leave the kitchen, Alexis said, \"Mom, like, if you know, meet a guy. It won't scar us for life if he like stayed over, or anything.\"\n\nDede smiled and left the kitchen. \"Great, now I'm getting permission from my children to fuck,\" she thought.\n\nDede wanted to sleep in on Saturday morning after two long shifts in a row, but her anxiety forced her up early. The day was already hot. Knowing her daughters never woke this early, she slipped on a summer robe and went out to the pool. She dropped her robe and dove in. She had committed herself to doing twenty laps every day. Ever since she agreed to meet Cody, she'd been eating salads and not much else. She never was fat, but she didn't want to take a chance of putting on an extra ounce.\n\nMaking the turn at the far end, she told herself to stop kidding herself. She was not going to go to bed with some twenty-two year old boy. If her body was in shape or not, it didn't make any difference. She resolved to call Cody the second she stopped her exercises and tell him not to show up. She was forty-five years old, a physician, a mother of two nineteen year old girls, no way was she going to have sex with him. As her arms pounded and her legs kicked, she continued to mentally tally the reasons why this liaison was not going to happen.",
        "He knew her daughters. She was a responsible member of the community. She served on the library board of directors. Hell, she belonged to a book club. People who are old enough to belong to a book club don't fuck young boys. Taking a deep breath on her rotation, she thought that she was saying \"fuck\" a lot these days.\n\nOn lap fourteen, she tried to come up with other reasons why she would not be spreading her legs for Cody. She was shocked to think she imagined her legs parting and watching what was approaching her cunt. Jesus, she thought, when did she start calling it a cunt?\n\nLap sixteen brought her mind to the picture of Cody's erection. It was huge-long, thick and strong. What more could you ask from a cock? Cock! She really needed to watch her language. As she made the turn to start lap seventeen, she thought that no one could hear what was in her mind, so she would call it a cock. Wasn't that what Alexis called it? Shit, her daughter liked the cock she wanted to fuck. How did she get herself into this mess?\n\nLaps eighteen and nineteen were all about firming her resolve to call Cody and cancel. She had to stop this foolishness now.\n\nOn lap twenty, she recalled his promise to take her ass. She imagined that long, thick cock, all covered with her cunt juice, sliding up her ass. Who talks like that? Fuck it, she said to herself, I guess I do now. Recalling how good her silver bullet felt in her butt, she almost blacked out thinking about that cock working its way in her back door.\n\nShe touched and grabbed onto the side of the pool, gasping for breath. Her clit was aching for relief. She needed sex. She needed a man. She needed Cody.\n\n*****\n\nMy thanks to Prof Davros, HsytLit and Gary13 (https://www.literotica.com/stories/memberpage.php?uid=873051&page=bio) for their support and editing. These guys are the greatest and saved me from so many errors. As always any remaining mistakes are all mine. Chapter Two will be posted soon. I'd love to know what you think of this story. You can leave a comment here or write to me at my personal email, which you can find in the Contact section at my home page on Literotica. I respond to every email I receive. Thank you for reading my story. Take care, Althea."
    ],
    "authorname": "AltheaRose",
    "tags": [
        "exhibitionist",
        "exhibitionism",
        "voyeur",
        "voyeurism",
        "masturbation"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/could-she-really-be-a-cougar-ch-01"
}