{
    "title": "Armistice Day",
    "pages": [
        "\u00a9 2021 Thefireflies, for Literotica\n\n~0~\n\nDarkness is our friend. So is dead ground, like the shell hole we now find ourselves hiding in. It's full of water, stinks like Anzac soup, the rot of corpses, but darkness also hides any dead sharing our cover. We can barely see one another's faces as we listen to rifle shots and machinegun bursts coming from all sides, bullets sporadically thumping into the crater lip.\n\nI glance at Will, marvelling he's still with us because only minutes ago I was sure I'd seen him take an enemy bayonet to his chest. But here he is, alive and well, rifle slung over his shoulder and training his Webley Revolver on our two remaining prisoners. Of the other three prisoners, one's back in the trench with his head caved in, the other two managed to get themselves killed running through the cross-fire.\n\nWill's whispering an order to young Archie and when the bullets eventually cease Archie checks if the coast is clear, signalling for us to follow, and we scramble up the crater and across no-mans-land, our two prisoners protesting, someone nudging them with the muzzle of their rifle, hissing at them to, \"Shut it.\"\n\nArchie leads us straight to our lines, identifying ourselves to the sentries as the team of body snatchers, the nightly raiders of death to the enemy who think they're safe in their trenches, and the sentries mercifully do not open up on us with their Vickers, letting us jump into their trench.\n\nIt's lighter now and we catch our breaths; Will's over there examining his respirator which has a shattered eye piece where the sharp steel of the enemy bayonet caught on the metal rim, slicing clean through the rubber hose. Someone whistles, another calling him a lucky bastard because the blade must have stopped less than an inch from his heart. Archie takes the useless mask from Will for further examination and Will pats the young man on the back, thanking him for saving his life. Archie grins, teeth flashing white in early dawn's darkness.\n\n\"Better find a new one,\" I tell Will.\n\n\"Nah,\" Will says with a wink, \"I'll keep this as a souvenir to show little Jack when he's older.\"\n\nI know he's joking, sure he'll see the quartermaster, but still add another two pence. \"Just get a new one, mate.\"\n\n\"Yes, Papa,\" he says, grinning, but he pats my shoulder and I'm confident he'll replace his respirator.\n\nPerhaps it's later when the sky lightens with a new day, when Will's returned from interrogating the prisoners and debriefing with the brass, and somewhere in the distance the Hun artillery, the daily hate, opens up, shells whistling overhead, landing close behind our lines, the cacophony of explosions deafening. In morning's pale light a yellowish green fog approaches, about to envelop us and Will yells, \"Gas, lads, get your masks on now!\"\n\nMen fumble to put on our respirators and Will's yelling for everyone to check their seals, but I'm begging Will to put his mask on. He holds his useless mask, a look of acceptance in his eyes, saying, \"Tell Mary I love her when you get back, won't you, and make sure she and Jack are provided for.\"\n\nHe says these words so calmly.\n\nBut we're both choking and retching, falling, his voice is now harsh and eyes pleading, desperate, demanding, \"Shoot me, Alfie, please shoot me!\"\n\nSuddenly I'm swaying in mid-air in the dark heat of hell, heartbeat pounding like horses in full gallop threatening to burst from my chest, sweat pouring off me. It takes a few moments to orient myself, the soothing vibrations and low throb of the ship's engines interrupted by a snuffle from a cabin mate, another calling out in his sleep, I think crying out for his mother. I've seen and heard even the toughest men on all sides of this war plead for their mothers.\n\nFuck the dreams, the nightmares, will they never cease?\n\nWill didn't call for his mother; he looked me in the eyes and asked me to shoot him. He also asked me to tell his Mary he loves her, and make sure their boy, Jack, is well looked after. Sometimes he yells at me to put on my mask, and sometimes all three. But mostly he begs me to end his misery.\n\nWill said all these things in the moments before he died.\n\nI'm not the only one awake, for few of us sleep well. Some men cry, often calling for their mothers or sweethearts and wives, while other's call their long-dead cobber's names, or lay silent in their swinging hammocks, all of us sweating, the heat below decks oppressive. Thus, many of us make our way top-side to sit by the rail, as I do now. I can tell the ship has changed direction since yesterday, for the night sky is lighter off the port side now betraying dawn's sun hiding somewhere below the horizon, rather than off the ship's bow like it was the previous morning when we sailed east.\n\nI hear myself whisper, \"Heading south again.\"\n\nFor so long I didn't think I'd see another dawn. And still, every dawn could be our last. A few have slipped over the rail in the night, the ocean taking their pain and suffering in her cold watery bosom. I shudder to think and gaze to my right, towards the bow. There's a figure several feet away, and though I can't make out his features in the dark, I can see the unlit pipe hanging from his mouth. Smoking is banned above decks between dusk and dawn, lest the glow from a cigarette or pipe gives away our position to any enemy vessel such as a raider or U-boat, as unlikely as the possibility sounds so far from Europe.\n\nThe man takes a deep breath, the sound of his inhalation matching the hissing water streaming by the hull below us, then proclaims, \"I can smell her, maybe a day or two away.\"\n\nI inhale lightly, but my lungs burn, a searing pain sending me into a hacking coughing fit. Yet there she is among the salt laden air filling my nostrils! Barely perceptible, but the smell we all grew up with, a smell we took for granted all our lives is unmistakable, the smell we've long missed; the scent of the Australian bush, heavy with Eucalyptus oil.\n\nI'm coughing again, gripping the rail, gasping for breath, lungs on fire.\n\n\"You alright there, cobber,\" the man with the pipe asks.\n\n\"Chlorine gas,\" I choke out between coughs, \"Place called Passchendaele.\"\n\n\"Ah, you unlucky bastard.\" In the dark I can tell he's nodding, then turns to face me, a crutch I'd not noticed holding him up where he's missing his right leg below the knee. \"I copped it at Messines.\"\n\n\"I was there too, cunt of a stoush.\"\n\n\"As they all were. Me leg's still there with some of me cobbers, feeding the worms.\"\n\nThey must be some of the best fed worms on Earth, and it's all we need to say before turning to face the new dawn as more men appear at the rail; men missing arms and legs, or have terribly scarred skin, or like me, their lungs are damaged, some damaged in more ways than one. All of us have minds and souls damaged too, with unspeakable horrors still visiting us, even after all our time away from the front, even this close to home.\n\n~0~\n\nWe put into Fremantle and the West Australians among us prepare to leave the ship.\n\n\"I'll have a drink for yer all at the first pub I come ta,\" says Cec Morgan, a sheep farmer from somewhere here in the west. \"Reckon I'll be pissed in about half an hour.\"\n\n\"I hear ya can't hold ya liquor any more, cobber,\" I say with a straight face, holding out my right hand to his missing right hand.\n\nEveryone laughs, especially Cec, and he places his stump in my palm and shakes it up and down, and laughs. \"I'll have to learn to use me left, but got other uses for me, ah, extra-large short arm here. The girls are gonna love it, it's the right shape and all. Tried it out on a pommy nursing sister back at the convalescent home.\"\n\n\"And she loved every inch of it, or so we heard a thousand times or more,\" Dennis Burke says in a mocking tone, which is what I'm sure we're all thinking, and Malcolm Byrne grins and winks, saying, \"You'll need that thing since Jerry shot your middle leg away.\"\n\nAll of us are laughing, and our cabin-mate Cec grins and gropes at the bulge in the front of his trousers and shakes his head. \"Jerry's a lousy shot and only took me left nut.\"\n\nWe slap him on the back and someone shoves a lit cigarette between his lips, and he grins again, hoists his kit bag, turns and heads towards the line of men waiting at the top of the gangway. A man with no legs is lifted over the side in a bosun's chair, and as he swings by I can see the look in his eyes; the vacant stare, and no one's laughing anymore. Someone does call out, \"Good luck, Digger,\" and he doesn't even turn.\n\nThe rest of us remain aboard, unable to disembark for the short duration of the ship's stay, and I spend a great deal of time with my own vacant stare, gazing out across the tops of the dock's timber warehouses between us and the town beyond, the roofs of houses being the first hint of civilisation we've seen for a long time. It's home, but not home as I know it because it's much too dry and flat, and I'm not paying too much attention anyhow.\n\nOur ship leaves in the morning and we don't make landfall again for several days, skirting the south-west corner, then heading east across the rough seas of the Great Australian Bight, swinging in our hammocks at night, for there isn't enough fixed berths for all of us, and later the morning sun rises off our bow again.\n\nDuring a fit-full sleep several nights later, one of the boys starts banging on cabin doors, yelling, \"We've turned north into Port Phillip Bay, lads!\"\n\nNoticeably, our ship is no longer rising and dipping and rolling, and mighty cheers go up, and a few curses too, telling the man to. \"Bugger off,\" and for the cheerers to, \"Shut the fuck up,\" because some people are still hoping for sleep, but we're all heartened by the news. Some men light up a cigarette despite the rules, and some of us cough terribly and head top-side.\n\nThere's a faint shoreline out there in the dark, the tops of trees betrayed by the silver moonlight and a scattering of shore lights. And there, dead ahead off the bow, are more lights; the lights of Melbourne.\n\n~0~\n\n\"Where the fuck's St Kilda?\" one of the blokes, Pete, asks.\n\n\"And to think you were one of them fancy pilot officers,\" another quips. \"Dunno ya left from right.\"\n\n\"They didn't teach us much map reading in the Flying Corp, Digger,\" Pete laughs, \"We simply pointed our aircraft to the east, shot down any German bastards we saw, then flew back west and hoped we'd find a flat patch of turf to land, then pray to the Lord almighty.\"\n\nI only know Pete the Flying Corps Lieutenant by his first name, and most of us know under the bandages on his head are livid weeping burn scars from his hairline at his left temple, down his now mangled mess of fleshy tissue that was his ear, neck and shoulders.\n\nWe know his story well because he loves to tell it, how his Sopwith Camel caught fire after an epic dogfight with several Hun fighters, at least two of which he shot down, his own aeroplane burning as he flew back to our lines where he crashed in a muddy field. Despite his ordeal he's one of the most jovial and upbeat fellows we sailed home with, but among more laughter Pete scratches at his bandage and the remains of his ear, and I see him grimace from time to time.\n\nSoon a young Lieutenant approaches, looking fresh as a daisy and who we recognise as a brass hat who'd not yet left these shores. Everyone's milling about the dock under the greying sky and no one snaps to attention like we might have back in the camps, having lost many military formalities in the trenches, and the young officer appears a trifle agitated.\n\n\"May I have your attention please,\" he yells, and I suppose his voice carries enough authority because we all stand as ridged as possible, which is not overly ridged for many, especially those with crutches or in wheelchairs. \"Thank you. I am Leftenant Turpie and ...\"\n\n\"Leftenant Twerpie,\" someone whispers, resulting in muffled laughter.\n\nThe young officer's face glows red, but he carries on. \"...And I am instructed to lead the Queenslanders among you to the hospital. There your wounds and general fitness will be examined and an assessment on your further repatriation will be made. This process may take some time and therefore you will be billeted with families who have volunteered a bed in their houses for the duration of your stay. Are there any questions?\"\n\n\"Will there be nurses there?\" someone asks without raising their hand, and before the officer can answer, someone else calls out, \"You wouldn't know what to do with a nurse, Morrie.\"\n\n\"Can we go via the pub on the way?\"\n\n\"Do you know if there's somewhere we can meet girls?\"\n\n\"I haven't seen a girl since London, can't remember what they look like, but I can imagine this handsome Leftenant Twatie looking pretty in a dress.\"\n\nAmid roars of laughter, the Lieutenant loses his temper, yelling, \"Attention, men! Fall in line, now!\"\n\nEventually the racket settles and we slovenly stand to, and soon a Major arrives and we straighten up quick-smart, and he orders us to, \"Hurry now, men, you don't want to be standing about all day.\"\n\nWe hoist our canvass kit-bags and begin marching from the docks, where men who can't walk are carried in the back of carts, the horses lazily clip-clopping down the road. The rest of us follow behind in columns two abreast, some pushing other men in wheel chairs, others hobbling along with the aid of crutches, all of us dodging horse's dung.\n\nPeople watch our slow procession from the porches and verandas of their terraces and cottages; men leaning against railings with pipes or cigarettes in mouths, some tipping their hats, and women in rocking chairs, many with the look of pity etched on their faces.\n\nThe march is perhaps a mile, or maybe less, but my lungs burn like fire, causing me to hack towards the end.\n\n\"You alright there, Dig?\" Pete asks me. \"Not gonna die on us are you?\"\n\n\"Don't think so, sir,\" I reply, managing a smile. \"Jerry didn't kill me in France or Belgium and he sure ain't gonna kill me here.\"\n\nThe man slaps me on the back. \"Glad to hear it, lad, and dispense with the sir, I'm not a wanker brass hat like these fellas leading us.\"\n\nI laugh and cough terribly some more, my lungs on fire.\n\nArriving at the hospital, we wait until called up. Typical army life; hurry up and wait.\n\n\"Corporal Alfred Graham?\" I look up and the pretty young nurse is searching the room with her vibrant blue eyes. Her eyes remind me of Will's, and I try to block him from the forefront of my mind, his face contorted as he screams at me, Put your fucking mask on now, Alfie! And the yellow-green cloud swirls in over us...\n\n\"That's me,\" I say, standing.\n\nShe smiles and waits patiently for me to cross the room, ignoring the other men's attention, ever asking her to meet with them when they are discharged, offering to take her to a dance or the theatre, and they whistle and yell at me too, making innuendo about where she's taking me and what I'll get to do with her. They carry on exactly like this for each and every nurse who enters the room and every soldier the nurses call away.\n\n\"This way, Corporal, quick now, follow me please.\" Her voice is sweet and polite, and she's the prettiest girl I've seen in a long time, and thus for a moment I consider asking her to a dance or the theatre, but I'd be useless to her, coughing and spluttering all over the place. Anyhow, I'm sure she's seeing one of the physicians or fancy officers and not interested in the unruly damaged Diggers she has to deal with on a daily basis.\n\n\"Please wait here.\" We are in a small waiting room and she gestures to a chair. \"The doctor will see you shortly.\"\n\n\"Thank you, sister.\"\n\nHurry, wait...\n\nShe's left me again and soon a door opens and Pete the pilot officer from earlier exits clutching some papers, a fresh bandage wrapped around his wounds. He smiles when he sees me. \"They won't let me go for at least another few months. Bastards don't think our doctors up in Queensland are as good as their fancy Victorian ones.\"\n\nI smile, because the doctor, a middle-aged man in a suit, is immediately behind Pete and of course he's heard every word the pilot speaks. Pete winks and walks off down the corridor, and the doctor motions for me to enter, mumbling something about Queenslanders.\n\nHe closes the door behind me and we go through the routine I've been through in hospitals since London. Except this physician is concerned my cough might be tuberculosis, despite my protests and explanation chlorine gas scarred my lungs. He looks me in the eye and tells me, \"We can't be too careful.\"\n\nAnd he's overly concerned with examining my privates, asking if I'd visited brothels or met with loose women in either France or England. I lie, of course, and I've been checked for venereal disease by several military doctors, all who are obsessed with the ailment. And I'm not going to mention how we'd come to procure Miss Ettie Rout's preventative kits and thus were protected when we did visit such establishments. The mere mention of Ettie's name has a tendency to cause disgust among the powers that be.\n\nEventually the man is satisfied I don't have TB or a VD and he tells me what every doctor tells me. \"You need plenty of rest and recuperation. I'd like to examine you again in a month, so please stick around.\"\n\nI know this is an order, for I am still in the army, and we must not leave until formally discharged. I thank the man, who hardly looks up from his note writing, then he sends me out and ushers the next bloke in.\n\nAnother nurse, a large woman with orange hair spilling from the edges of her white veil and a no-nonsense demeanour on her freckled face, instructs me to follow her, taking me to another station in the rabbit warren of corridors, where a corporal hands me a set of papers. \"This is the address and a letter of introduction for your billeting family where you will be quartered for your time in Melbourne. Remember, you're a guest, so please be on your best behaviour.\"\n\nThe man shares the same rank as me and his uniform is crisp and never seen battle. If I were to guess, I'd say he's in his thirties, and he wears a wedding ring on his left hand. He looks up, because I'm staring, his brown eyes meeting mine. \"Yes, do you have a question?\"\n\n\"War's been comfortable for you, hasn't it?\"\n\n\"Excuse me?\"\n\n\"Sitting here, safe in Melbourne...\"\n\nSomeone lays a hand on my shoulder and when I turn it's the nurse, the fierce looking one with the orange hair. Unkindly, her face makes me think of a bulldog, and by the looks of her I wonder how she's so well fed in these hard times, but when she speaks her voice is soft and understanding and full of care. \"Come, please, Corporal Graham.\"\n\nWithout giving the administrative corporal another glance, I follow the nurse out. At the front of the hospital she turns and faces me, her face softening with big green eyes falling on mine. \"Don't mind the corporal back there, he's just doing his job. Not all the returning soldiers are being polite with the locals, especially in respect to women, so he's under instruction to inform you all to behave nicely. And, just so you know, by all accounts he joined up with the intention to fight, like you did, but because he suffered polio as a child his fitness wasn't deemed up to standard to be posted overseas. Which he's probably lucky for too. I lost my own dear brother at Gallipoli and would give anything for him to have not left our shore.\"\n\nI see pain in her eyes, breaching the gap between us, lodging deep into my soul, leaving me ashamed. \"Sorry for your loss, sister.\"\n\nShe smiles. \"He was like you probably were, young and eager, wanting to fight. Here, show me your papers, I'll send you in the right direction.\"",
        "\"Thank you,\" I offer, and for a moment I'm lost in her eyes and want to sooth her pain, take it from her and make her world right again. But we all carry the pain and scars and I dare say she takes on our pain too.\n\nI even consider asking if I could offer her company later, seeing pools of green stare back with sympathy; pools of green, the colour of the clouds of chlorine. Shuddering, I break into a coughing fit, bending over with burning lungs, and I feel I'm going to pass out, and she helps me steady on my feet. I feel ashamed and useless and there's the niggling worry I'll not be fit as a husband for any woman, especially one so robust or stout as this young nurse.\n\n\"You're going to be fine,\" she says. \"Time should hopefully heel your lungs. Rest them.\"\n\nEvery doctor and nurse tells me this, yet I'm not sure if it's true. Hope is all I have. Though, my coughing fits aren't as common as when I was in London, back when I wished I'd died rather than suffer the constant debilitating hacking, burning and breathlessness.\n\nI'm steady again and she smiles, handing me back the papers. \"The tram-stop is out there on the road. Take yourself into town and you'll be able to catch either a train of tram to Richmond where you will find your billet at Mrs McCotter's. And don't lose those papers, there's information on how to apply for pensions and even soldier settlement blocks, if you're interested.\"\n\nShe's nice, healthy, plump and buxom, and again I'm tempted by her, gathering my courage, but before I speak she leaves me standing out front, on my own for the first time in what feels like forever.\n\n~0~\n\nMelbourne is bustling; not quite like Paris or London, but I watch the locals going about their business from my tram, noting how motorcars are more prevalent here than what I'd seen in Brisbane before I left for the war. With the exception of the odd sailor or soldier among the crowds it's hard to believe there's even a war on.\n\nTwo young women sit across from me, whispering, glancing in my direction every time I cough. Down the back there is a young man in a sailor's uniform, chatting loudly with a young lady, and there's another Digger sitting on his own down front, staring absently out the window. Men and women get on and off along the way, and eventually the conductor calls out, informing all we're in Richmond.\n\nThe row of cream-coloured brick terrace houses are three-stories tall, where each individual house is maybe twenty feet across and joined to its neighbours on both sides by a common wall. They remind me of houses in London, all packed in tight together.\n\nDoubt threatens to overcome me, so I double check the house number matches the one on my papers, then take a breath, open the wrought iron lattice-work gate between a head-height well-trimmed hedge, stepping into the tiny courtyard, up the three steps to the porch, then turn the handle on the bell, hearing it ring somewhere in the house. I feel like I'm intruding, like I shouldn't be here. Instead I should be on a train to Brisbane, then another train westwards to the valley I'd known as home until I joined the Army.\n\nLooking back, there's a wagon hitched to two brown horses passing by on the street, laden down with produce of some sort in hessian sacks. The driver looks in my direction, then pays no more heed, his attention back on his horses.\n\nThe tiny courtyard indicates the house owner likes order by the way the plants are neatly trimmed, where in addition to the hedge around the border against the iron fence, there are lilies of some sort around the base of a small tree which is as tall as me, laden with large pink blossoms; whoever Mrs Carmel McCotter is, she takes pride in her garden, much more pride than many of her neighbours do with their weedy yards.\n\nThere is movement in the house, footsteps perceptible through the front door, a key in the lock, and the door opens a fraction. I see her eyes in the gap, and she asks, her voice almost quivering, \"Yes, may I help you?\"\n\nI'm nervous, I'm intruding, and she doesn't appear to know why I'm here. Holding up my papers to the door, I greet her with trepidation. \"Good afternoon, Mrs McCotter. I'm Corporal Graham. Alfred Graham. They sent me here from the hospital. Apparently you're giving me a room for a while, until they discharge me.\"\n\nHer hand slips through the gap and she takes the letter from me, presumably reads it, then opens the door. Her voice loses the quiver, her tone sounding relieved when she speaks. \"Please, Alfred, I'm sorry, I...I worried you were a messenger come to tell me about my boys. They're over in France and I haven't heard news from either in a while. Please, do come in.\"\n\n\"Thank you.\" She holds the door open and I enter, noting she's medium height, shorter than me by more than a head, roundish in every way, not plump like the nurse back at the hospital, but perhaps stocky or big boned, as my mother would say, naturally large. Her chest is enormous, pushing her apron out over a large pocket like a kangaroo's pouch, filled with a cloth of sorts. Her hair is a bob of grey and she watches me with warm light brown eyes, smiling a pretty smile.\n\n\"Come through to the kitchen, please,\" she says, closing the door behind me, leading me down the narrow hall past a small lounge room on the right and flight of stairs on the left, the house smells of cooking. \"You're the second soldier who's arrived here unannounced. I asked the Army to at least give me warning when they send someone, but my request must have fallen on deaf ears.\"\n\n\"I'm sorry, I didn't realise. I hope I'm not intruding.\"\n\n\"No, don't be silly. I volunteered my spare rooms for boys like you. Like I said, my sons are fighting and the last letter I received from them suggested they were billeted with French civilians, so I thought it right, my duty even, to help where I can. And the Army does pay me an allowance when one of you boys is allocated, I just wish they'd give me a day or two's notice to I can prepare, that's all. If you don't mind, how long do they want you to stay?\"\n\n\"The doctor said to see him in a month.\" I wonder if she's regretting her decision to take on a wounded soldier, but she nods.\n\n\"I suspect a month is what they tell every soldier.\"\n\n\"I can help you around the house or in the yard. Otherwise, you'll hardly know I'm here.\"\n\nShe nods again. \"We'll see. Last fella didn't lift a finger around here. Mind you, he rarely slept here, so I didn't have to pretend he wasn't around, and when he was here he wasn't the neatest lad. Wasn't brought up well, I suspect, his mother did him no favours.\"\n\n\"I'll help out, I promise.\" I wonder about her sons, genuinely hoping they're alive, knowing how unlikely they were to be billeted in a nice warm room. If they weren't in a sodden stinking trench on the lines they'd be in a canvas tent, or if they were lucky, a barn or wooden hut somewhere, or maybe a drafty church. No matter where they were, they'd be cold and damp and uncomfortable.\n\n\"Please, have a seat,\" she says, gesturing towards the small table in the dark kitchen at the rear of the house. At the end of the room is a bench and a cast iron stove with a pot boiling away, the room smelling of corned beef like when my mother made it. Mrs McCotter bends down to a stack of small logs, picking one and placing it into the glowing coals behind the little door of the stove. \"I assume you would like some tea, Alfred?\"\n\n\"Thank you, yes please.\" I'd not even thought of tea but the smells in this room make me hungry.\n\nMrs McCotter places a kettle on the range, then leans her backside against the bench, her hands in the pocket of her apron. \"I suppose you're hungry too? I have some vegetables I can boil or bake, and later when this silverside is ready we'll have some meat, but you must realise meat's always in short supply lately so we'll have to ration it out. I do apologise, but I'll try to buy some more in the next day or two.\"\n\n\"Please, don't go to any trouble for me, I'm grateful to have somewhere to sleep.\"\n\nShe smiles and I wonder how old she is, having two sons in the war. Mid-forties, I reckon. Watching me, she says, \"You, er, came from the hospital. The last fella who stayed was missing his left leg, from his knee down. Didn't stop him going out and wasting his pay on two-up and alcohol and I assume women too. But you appear whole.\"\n\nTapping my head, I say, \"None of us are whole anymore, Mrs McCotter. Bad dreams and my lungs are scarred, keeping me up at night. The cough is the worst because it comes on when the air is cool in the evening, irritating my airways.\"\n\n\"Yes, quite,\" she whispers. \"I heard you through the house after you rang the bell.\"\n\n\"I didn't notice I'd been coughing, Mrs McCotter.\"\n\nShe smiles again. \"Please, Alfred, call me Carmel. It is my name, after all.\"\n\nLaughing even a little sends me into a coughing fit and Carmel comes over, rubbing my back, making soothing sounds, telling me, \"I'm sorry, Alfred, I'm so sorry.\"\n\n\"Not your fault,\" I gasp, breathing shallow to sooth my damaged lungs.\n\n\"How did this happen to you?\"\n\n\"A gas called chlorine. Burnt my airways. Could've been worse though...\"\n\nI'm about to say, Could've been mustard gas that burns everything it touches, or phosgene which takes hours or days to suffocate a man, or mercifully the gas could and probably should have ended in my death, but Carmel's watching me with wide eyes, reminding me her sons are still over there, and I have no need to say anymore.\n\n\"Those Germans,\" she whisperers, \"Such a ghastly race of...\"\n\nI shake my head. \"We gassed them too and they gassed us. We're all as bad as each other.\"\n\nShe nods, then changes the subject. \"Do you have any spare clothes in your bag and would you like me to wash your uniform? If need be we can see if Henry or George's clothes fit you for the time being. For now, if you'd like to wash up there's hot water in the copper through the door there in the scullery. Draw the water into the bath if you wish, but first I'll also show you your room, and whip up some supper.\"\n\n\"You're too kind, Mrs McCotter.\"\n\n\"Carmel.\"\n\nI smile. \"Carmel McCotter. I have another pair of drawers, a shirt and pair of socks, plus my great-coat, but this uniform could do with a wash if I can borrow some trousers.\"\n\nShe smiles then stands. \"Follow me.\"\n\nThe climb up the first flight of stairs leaves me breathless and coughing on the landing, but Carmel is patient, tut-tutting and cooing sympathetically. Any other time in my life I'd be embarrassed by her mothering, but I've never felt so low or so tired and I'm having to accept this is my life now.\n\nAt each end of the landing is a door, one open through which I can barely make out a double bed and dresser, which I presume is Carmel's room, and the door at the other end of the landing is closed, with another flight of stairs between. When I've recovered from my coughing, Carmel leads me to the attic, where she tells me, \"This is Henry and George's room.\"\n\nWe stand in the dimness directly under the rafters of the sloping roof iron. At one end is a small window, where Carmel draws the curtains open, revealing the street below. Despite the brightness outside, the window only lets in a little light, thus the room remains dim, but it's easier to see the two beds, plus a wardrobe from which Carmel pulls an assortment of trousers for me to try. I look around the space, wondering how they ever managed to bring the beds and wardrobes up the narrow stairs.\n\n\"Here, try these but they might be a little short on such a tall boy like you. Meanwhile, I'll fix supper.\"\n\nThe pair of trousers are short for my long legs, but they'll do me fine for now, and I take them down stairs to the room Carmel calls the scullery, a small room immediately behind the kitchen at the rear of the house, with corrugated iron walls and roof. In the corner there's a large copper with small fire underneath, heating water, a cast iron tub next to it, a bench along the wall, and a cast iron bath along the other wall. I have a bird-bath with barely bucketful of water, pouring it over me in the bath, the first decent wash I've experienced since I can't remember.\n\nEventually I'm at the table with Carmel, eating her corned beef, baked potatoes, pumpkins, carrots, and blanched beans. \"This is hands down the best meal I've eaten since...since I left home.\"\n\nWith a smile, she looks into my eyes. \"Where is home for you?\"\n\n\"Queensland. Fassifern Valley west of Brisbane.\"\n\n\"I've never heard of it.\"\n\n\"Not many have, Mrs Mc...\"\n\n\"Carmel.\"\n\n\"Sorry...Carmel.\"\n\nShe smiles and we finish the meal in silence. Later, I cough again as the cooler night air begins to tickle my lungs, and Carmel lights a small fire in the tiny lounge room hearth at the front of the terrace.\n\n\"Sit here a while,\" she offers, gesturing to a single ornate timber chair beside the fire. There is a small table next to the chair and she places the kerosene lamp upon it, adding to the light of the fire and another kerosene lamp on the mantel next to the clock which recently chimed once for half-past-seven, its pendulum swinging back and forth in a timber and glass case. She draws close the thick curtains in the bay window facing the street. The fire's flue works well and the room isn't smoky like some barracks where I've stayed, so I stand in front of the fire for a while, and soon the air is warming my lungs.\n\nWhile I stand there, I examine several photographs adorning the fire's mantel, one of a young gentleman with a fine beard and shorter lady in wedding attire; Carmel and her husband I reckon. I wonder about her husband, where he is and is this his chair she offered to me? There is a photo of the man and woman standing in front of a little girl who holds a baby, and two younger boys stand at her side. In this photo I can see the woman is indeed Carmel, a younger version of herself, and I guess the two boys are Henry and George, who are now soldiers in Europe.\n\nPoor lads, I think, young fellas like myself going off to fight someone else's war. My father would tell me it's always the way, old men sending young men to fight pointless battles over real estate.\n\nExamining the man at Carmel's side, her husband, I see he is handsome and tall, proud and healthy. And the girl in front holding the baby, a pretty young thing in a dress and long dark hair. I guess the girl is Carmel's daughter, and the baby she holds is likely Carmel's youngest child as well. She must have four children.\n\nThere is a photo of the girl when she's older, a young woman now, tall like her father but definitely Carmel's daughter with some nice curves. Her hair is pinned up and she's smiling on the arm of an older gentleman in a suit. This photo is another wedding, and the older man must be the daughter's husband.\n\nAnother photo draws my eye, two stocky strong boys, Carmel's sons, in fresh Army uniforms. They remind me of how Mick and Francis and Will and I decided to have group and individual photographs taken, dressed in our new uniforms right before we shipped out, fresh faced and na\u00efve, ready to take on the world.\n\nAnd like the four of us, these boys are alive when the photo was taken. I hope they still are.\n\n\"They're my sons, Henry and George,\" Carmel tells me, and I glance around to face her, semi reclining on the double ended chaise opposite the single chair she'd offered me. She's like her furniture, I think, plain and practical with a certain elegance, even beauty. There is a piano against the wall and two paintings hanging nearby, thus clearly she has some money, but not flashy with it. This is a working-class neighbourhood, after all. Nodding at the photographs, she continues, \"I urged them not to join up, but they were desperate to get into the fight. Poor Henry and George were big kids for their age and received white cockatoo's feathers in the war's first year, back when they were still only seventeen and sixteen. Henry begged me to sign permission to allow him to join up when he was eighteen and I thought if he could wait till his brother was eighteen the war might be over, so I finally relented on George's eighteenth birthday, letting them both join. It's my biggest regret.\"\n\n\"My father didn't want me to join. He was hypocrite, because he served as a Light Horseman under Harry Chauvel in the Boer War.\"\n\n\"Your father probably knew the horrors,\" she whispers.\n\nI agree, nodding. \"I know this now. But back then, all my mates were joining. I begged Dad to write a letter too. He's our district police sergeant and threatened to lock me up if I thought of joining, but he knew he wouldn't stop me so signed anyway.\"\n\n\"Must have been a tough decision, sending his son to war,\" she sighs. \"Sit, please. Would you like a night cap? A brandy or Scotch whisky?\"\n\nI shake my head. \"No thank you. I don't mean to be rude, but I might hit the...I'll go to bed.\"\n\nAnd she smiles. \"Good night, Alfred.\"\n\n\"Please, call me Alfie.\"\n\n\"Night, night, Alfie.\"\n\n\"G'night, Mrs McCotter.\"\n\n\"Carmel,\" she says, smiling again.\n\n~0~\n\nNo man's land is a muddy, bloody, stinking, deadly, lonely place. Much like the entire Western Front. One-hundred yards between our lines and theirs. One Jerry is snoring loudly, making me think perhaps all thirteen of us can simply manage to stroll up to their position undetected. Or maybe the snorer's keeping his comrades awake and alert?\n\nWill crouches in the shadows with Archie and I glance in their direction, then back to my field of fire, watching intently for enemy. Signalling for us to move with a wave of his hand, Will slowly chooses a path. There could be mines here, there probably are. We sometimes lift them at night, but leave them for now, moving under a crescent moon.\n\nNot for the first time I think my state-of-the-art Lewis machine gun isn't the most ideal weapon for trench raiding, but I'm rather fond of her, and four of us carry them, which is three-to-four more than allocated to the average infantry section in our army. Mug-gunners they call us, short for machine gunner, which is a mugs job. We practice firing our weapons from the hip and shoulder, advancing into combat or covering a withdrawal, and if we end up in a scrap we can bring considerable firepower to bear. They've saved us more than once.\n\nJerry doesn't hear us, the snoring man we've dubbed The Pig covering our approach, and we drop among the bastards, but my gun is a long-range weapon, heavy and cumbersome, so I watch as the boys brandish their rifles and trench clubs, Will caving in the skull of The Pig who was awake on his bench and reaching for his pistol, the rest becoming prisoners. I'm staring at the dead man and Will points to the end of the trench and I go there to stand sentry. Four Jerrys, and the boys round them up, tying them by the wrist and a rag through their mouths to keep them silent.\n\nWill approaches me and he brings Archie too, one of the fellas, an Aboriginal stockman from Cunnamulla way. He's a blackfella to everyone else, but to us he's our mate, become like a brother, proving himself on each occasion he path-finds our way through to the enemy's defences, and he grins in the moonlight, whispering, \"The boss wants me to keep you safe, Alf.\"\n\nI nod and with my gun pointed low I check around the corner of the trench. Dirt explodes near my face, covering me with soil, the loud rifle-shot instantaneous and close, harsh yelling and movement from only feet away, rush of boots, an enemy charging at me as I bring my heavy weapon up, Archie stepping in to parry the man's rifle and bayonet which is aimed at my side. The man deflects Archie's weapon and lunges at Will, so I yell his name at the top of my voice, and Will tries to dodge but I see the cold steel at the end of the enemy's rifle slice into the hessian respirator bag on Will's chest.",
        "What a horrifying sight, the blade sinking into my cobber, but strangely Will appears super human and uses his own rifle to brace against the man, grunting and pushing him back, then Archie fires from less than a foot away, the enemy dropping in the darkness, warm blood spraying from the mess, adding to the mud.\n\nThe whole incident took a second or two and the soldier falls at my side where I crouch, but there's no time to contemplate his fate because my machinegun's at my shoulder, my finger firing bursts into the men charging after their dead comrade, tat-tat-tat-tat, the gun loud in my ear and jerking in my hands, answered with shouts and screams and more bullets thumping around me, and I'm dropping to the trench floor to fire another burst.\n\nAbove all this, Will taps me on the shoulder, his voice calmly telling me, \"It's time to go...\"\n\nThere are more gunshots, loud and close, and artillery bursting somewhere close too, and I'm sweating, laying in darkness.\n\nIt's not gunshots, but heavy rain pattering hard on the iron roof above me, cooling the air. The occasional thunder-crack is similar to an artillery barrage, and I sit up, realising I'm in a bed, a strange bed.\n\nAnd then I start coughing.\n\n~0~\n\n\"I heard you coughing last night.\"\n\n\"I'm sorry, I hope I didn't keep you awake.\"\n\n\"You're no trouble. The storm woke me before I heard you coughing.\"\n\n\"The storm woke me too. When the night air is cold, it tickles my airways.\"\n\n\"The doctor can fix it?\"\n\n\"No, only time.\"\n\n\"One month, you say?\"\n\n\"The doctor wants to see me in a month, yes. It's been over a year, time's not going to fix it in another month.\"\n\n\"Oh.\" Carmel rests her arms on the table opposite me, our breakfast of egg and bread barely touched.\n\nLater I follow her to the back garden, into a small paved courtyard with a wrought iron table and chairs, then beyond down a neat stone path passing between rows of vegetable beds to the dunny by the back fence. A gate there leads to what I presume is a laneway beyond.\n\nThe sun is bright, the garden sparkling with light reflecting off thousands of rain drops where they lay on the foliage of spinach, silver beet, broccoli, beans, pumpkins, carrots and the like. The garden is at least forty to fifty feet from the rear of the rear of the house to the back fence, and like the house, about twenty feet wide, a six foot high timber paling fence enclosing the yard. Along the fence are roses in bloom; reds, pinks and whites, looking splendid with more than a few bees flying in and out of their yellow centres. Carmel leads the way, wearing a white blouse and simple beige dress falling to near her ankles, and she crouches, picking something off the path, tossing it into the lane beyond.\n\nAt first I think it's a rock, but then she utters, \"Snails are coming back to eat my greens.\"\n\nSurprising myself, I'm horrified she'd tossed the creature over the fence without second thought. I've hunted rabbits, roos, wild pigs, killed livestock, chickens and ducks, and more than a few snakes too, but all before the war. In Europe I hunted men and I've seen and caused enough death to last several lifetimes. Something triggers in me, watching a creature as small and innocent as a snail being sent to its death, wondering if it had time to think about its last moments.\n\nCarmel doesn't see my horror, of course, and she crouches down at her leafy broccolis, plucking a tiny green caterpillar from a leaf, then holding it up to me. \"These are cabbage moth caterpillars. You can pluck them off and I usually toss them into the lane like the snail. Birds will eat them. See these holes in the leaves? They'll strip whole plants if you let them, causing the flower heads to become disfigured and stunted.\"\n\nShe's asking me to do a simple task and owe her my gratitude, but I find the idea of killing anything difficult. Carmel leaves me be and after a short search I locate a tin bucket from near the out-house, and I begin collecting the caterpillars. Counting as I pluck them, I find over sixty of the tiny things, a mass of writhing green at the bottom of the bucket, to which I add a few snails.\n\nThere is indeed a lane through the gate, with a cobble-stone surface, a few weedy bushes against Carmel's neighbour's fences, and also some species of vine covering a brick fence across the lane. Spreading the caterpillars and snails among the various foliage here, I whisper, \"I won't tell anyone you're hiding out here if you don't tell anyone I've gone soft.\"\n\nDeep down I know the caterpillars will likely not survive, because the leaves of their new homes are thicker than the juicy broccoli leaves, and I'm uncomfortable with this knowledge but pretend everything will be alright. The snails stand a better chance, I'm sure of it.\n\nI switch to weeding and later Carmel arrives at the backdoor wearing her apron and a simple white wide-brimmed hat upon her head. She's carrying a jar of water with a lemon in the bottom, remarking, \"Splendid job you're doing, Alfie. Already you've helped out a million times more than the last soldier they sent me. Join me for a drink?\"\n\nWiping my sleeve across my brow, I smile and nod, \"Thank you,\" and I join her at the wrought iron table.\n\nAs she pours the lemon water, she speaks. \"My husband Edward and I bought this place back when we were newly married in ninety-three. I was twenty-three at the time with grand ideas for this garden, but Eddie was a practical man and thought we should produce our own vegetables to save money. I've found tending to the garden to be quite therapeutic over the years and perhaps working in the sunshine will help you too.\"\n\nShe passes me a full glass and again I say, \"Thank you,\" taking the glass, waiting for Carmel to fill her own. She does and we clink them together and I relish the taste of the cool water flowing down my parched throat. The tickle of cold near my lungs is there, but mercifully I don't cough, placing my glass back on the table. \"May I ask what happened to your husband?\"\n\n\"Passed away ten years ago,\" she tells me, her tone matter-of-fact. \"Horse riding accident, or misadventure as the coroner said. He worked for the railways as a surveyor and was with a party mapping the route for a proposed line to the farming districts north-east of Melbourne. Some of the men decided to race their horses against some local lads and poor Eddie's horse stumbled in a hole and he fell hard. Silly fool.\"\n\n\"I'm sorry, Mrs Mc...\"\n\n\"Carmel,\" she says, shaking her head.\n\n\"Sorry, a habit.\"\n\n\"A habit you need to break, young man. I'm Mrs McCotter to so many people, but I'll tell you something about my husband, Edward McCotter. He had a mistress, a younger woman who lived in Toorak. I took his name and he took liberties with another woman. Daughter of a banker he was dealing with on some investments. And the funny thing is, though it's not really funny, her cousin became my son-in-law! Married my daughter, and sadly it's not really funny because the fool managed to get himself killed in one of those new-fangled aeroplanes over in Europe, making my daughter a widow too. It's a strange, strange world, Alfie.\"\n\n\"It certainly is,\" I say, taking another sip of water, remembering how brave we thought those fliers were going up in their flimsy death traps.\n\n\"Unbelievable is what I call it, but what can one do? My Eddie was an adulterer and what I've learnt is most men are. Yet I loved him and was none the wiser at the time. After all, he always came back home to me each night.\" She stops, smiles, shakes her head, then looks me in the eye. \"I'm sorry, Alfie, but I do get a bit worked up about what happened.\"\n\n\"No need to be sorry. With all due respect, I think your husband must have had a few roos loose in the top paddock to be unfaithful to you. I can't imagine a kinder woman, so I dare say he regretted his choices. Or at least, he should have.\"\n\nI mean what I say and Carmel smiles. \"You're very kind, Alfie, but no, I don't think Eddie regretted his decision. He kept it from me for several years and I only found out after he died. Fifteen years of marriage...anyway, I don't regret it either because I had four children. Though we lost poor Stanley to pertussis when he was two.\"\n\n\"I'm sorry to hear...\"\n\nShe nods and sighs. \"Sometimes I wonder if Stanley's death is what sparked Eddie off on his adultering ways. Anyhow, enough about me. Do you have a girl waiting for you at home?\"\n\nSuddenly I think of Mary. I'm not sure why, but I feel responsible for her, because Will asked me. I think of Will's sister, Ava, who rejected my advances, and of Ethel Wilson who lived up to her reputation of never rejecting any boy. Shaking my head I answer, \"No, I don't have a girl waiting for me, but my cobber...um, my friend asked me to tell his wife he loves her.\"\n\n\"Your friend didn't make it back, did he?\"\n\n\"No...we joined up together. We've known each other since we were little kids and we played cricket for the district together before we joined the Army. He was vice-captain of the team.\"\n\nI'm looking at my empty glass now, thinking of Will and of Mary and their son, Jack, who wasn't even one year old when Will left for the war. And I think of the O'Riordan twins, Michael and Francis, stocky dairy farmers and our opening batsmen, poor Francis killed by an artillery round at a place called Messines, and Michael severely wounded by the same blast, stretchered off the field wailing his brother's name, and I have no idea if he lived or died.\n\nThere was Arthur Coleman, our wicket keeper and middle order batsman, an older fella who joined up in the first weeks of the war, inspiring us to follow his footsteps, killed at Gallipoli before we even shipped out.\n\nI'd heard Walter Forsyth, a talented tailender and our medium pacer, took a machinegun position almost single handed in the battle for Messines, accurately throwing Mills bomb grenades thirty or so yards straight through the gun embrasure while his platoon was pinned down, killing the gun crew, only to be shot dead by a wounded soldier when they stormed the trench.\n\nThere were others from our district, and I know many homes are missing sons, brothers, husbands, fathers, and even more from across the nation. Thousands of dead and missing.\n\n\"I'm sorry,\" Carmel whispers.\n\n\"Yeah, I'm...\"\n\nSpeechless.\n\nWe sit in silence for a while, the sun beating upon me, burning the back of my neck. Then Carmel speaks again. \"I saw you save all those caterpillars. I imagine you put them in the bushes in the lane. May I suggest giving them a fighting chance by tossing them over the fence three doors down that way, into Charles Franklin's vegie patch. He's a grumpy bastard if there ever was one, and I don't like the way he speaks to me at times. Quite a strange and rude man, if you ask me. Indeed, his garden can have the snails too!\"\n\nI look up and Carmel has a smirk upon her lips. I can't help but smile in return.\n\n~0~\n\nThe room is stuffy and hot, having warmed significantly under the late-spring sun through the day, and the iron roof contracts, loudly cracking nothing like rifle fire, but the sound leaves me on edge. I can't sleep, thus I lie in this strange bed, either Carmel's son Henry's or George's, she hasn't told me whose, and I wonder about these boys of hers who are still in Europe.\n\nSilly kids, I think. Just like me and thousands of other lads, of course. One could join up with no issue at twenty-one years of age, but those who were eighteen, nineteen or twenty required a parent's permission. Of course, many letters and signatures were forged, and many of those were by lads younger than eighteen, eager to fight. For King and Country, or something equally as stupid.\n\nTurning eighteen in late nineteen-fourteen, I was eager, but my father was reluctant to let me join. But he saw my cobbers were going to join and so he relented. I can't help but think how this parallels the stories of so many diggers I've known, and how Carmel told me she forbade her two boys to join up, but both boys were fit and strong and eager to fight and she reluctantly wrote permission letters on George's eighteenth birthday, committing both her sons to the slaughter.\n\nMy mother was straight up opposed to the war. \"Let the British fight their own damn battles,\" she'd say, sounding almost like her Irish Mother and Father, my Grandparents of course.\n\nDad was ex-light horse, fighting the Boers in South Africa. He'd seen horrors and certainly never spoke of them, where throughout my childhood he'd only told me once of a mounted charge, but shared plenty of funny anecdotes of army life and silly things he and his mates did. To me it sounded like a great adventure. Yet he and Mum argued even as he wrote my permission letter; Mum's voice raised, telling all who could hear how Dad still woke sometimes through the night, the faces of enemies and comrades haunting his dreams.\n\nDad signed the letter anyway, because I was the stupid fella who wanted to join his mates on the adventure of a lifetime.\n\nNow it's me who re-lives my adventures almost every night when I fall asleep. The mud, the fear, the bullets, the explosions, the raids, the gas.\n\nAnd the death.\n\nThe artillery falls behind the lines and the gas begins to swirl, heavier than air so it sinks to the lowest points of the battlefield, which are our trenches. Will, my best mate and bravest man I ever met, who we all look up to, is calling, \"Gas, lads, get your masks on now!\"\n\nArchie fumbles and Will helps calm the lad. Others fumble too despite our constant drills, but mine's on quicker than a flash. It's a matter of life and death. I help a young lad with his respirator mask and notice Will finish with Archie, then standing there, making sure the boys have masked up correctly.\n\n\"Check your seals,\" he bellows.\n\n\"Get your nose bag on Will,\" I tell him, wondering why he hasn't done so.\n\nFor a moment he ignores me.\n\n\"Get your bloody mask on, mate!\" Urgency now. I'm a corporal and he's a sergeant, but rank be damned, Will's me closest cobber.\n\n\"Get your mask on, please!\"\n\nWill turns to me, pulls his mask from its canvas bag, holding it up to me. Its glass eye socket remains shattered and the rubber hose is still sliced cleanly through, like when he'd shown me earlier. An hour or two ago, I can't remember, but his eyes say it all; he hasn't had time to replace it. He speaks, voice matter of fact, \"Tell Mary I love her when you get back, won't you, and make sure she and Jack are provided for.\"\n\nRipping my mask off, thrusting it in his direction, I say, \"You'll make it back to them and tell her yourself.\"\n\n\"Don't be a fool, get your mask back on.\"\n\n\"Take it.\"\n\n\"That's an order, Alfie.\"\n\n\"Take my bloody respirator.\"\n\nThe yellowy green is swirling, we can smell it, men with defective masks that weren't sealed properly or are still fumbling begin coughing, retching, and I get a lungful and I think my lungs and stomach want to escape my body, the nausea rising quicker than lighting, and Will's eyes are wide and blue, and he screams at me, \"Put your fucking mask on now, Alfie!\"\n\nHe collapses and so do I, fumbling despite practiced hands, mask on quickly but lungs burning, charcoal beginning to absorb deadly chlorine, but too little too late, and Will's on his hands and knees in the mud covering the timber duckboards at the floor of the trench, retching his guts up, arching his back like he'll turn inside out, making an ungodly noise, like a demon is spawning from his soul and trying to escape his body.\n\nMy hands sink into the mud between boards and I'm retching too, my body doing all it can to expel the poison, a hand grabs my arm, gripping like a vice, Will's unmasked eyes, once bright and blue but now bloodshot and desperate lock with mine.\n\n\"Shoot me, Alfie, please shoot me!\"\n\n~0~\n\n\"Alfred, wake up, you're dreaming.\"\n\nThere's someone grabbing me in the dark, maybe it's Will or Archie trying to pull me to safety.\n\n\"Wilhelm!\"\n\n\"Alfie, it's me, Carmel, please, it's just a dream, you're safe.\"\n\nA woman, Carmel, yes. On the edge of the bed, gently shaking my arm. After a brief coughing fit, I sit upright. \"Sorry, sorry, did I wake you?\"\n\n\"It's fine, it's you I'm worried for. You were...calling out for William.\"\n\n\"Wilhelm, not William.\" My face is wet and I wipe with my sleeve, hoping she hasn't noticed.\n\n\"Sorry?\"\n\n\"Will's parents were Germans but he was Australian. Born and bred in the same valley as me, but his name was Wilhelm all the same.\"\n\n\"Oh, I see,\" she says, unconvincingly.\n\n\"Sorry if I woke you.\"\n\n\"No,\" she whispers, cupping my face. I place my hand on hers and she pulls me in, holding me against her soft bosom.\n\nOh dear, I can't control the unexpected swelling of my manhood, which is fully erect in my army-issue cotton drawers before I realise.\n\nShe brushes me where I wish she hadn't, but also glad she did, sending a shot of pleasure surging through my body. Her face is close to mine when I look up and without thinking my lips are against hers.\n\nShe pulls back and I'm pulling away too, letting her go. \"Oh, my, I'm so sorry, Carmel. I didn't...\"\n\n\"Shhh...hush,\" she whispers, placing her hand on mine. \"Shhh...\"\n\n~0~\n\n\"Cat got your tongue?\" she asks, placing my breakfast of eggs on toast in front of me.\n\n\"Thank you.\"\n\n\"Is that all you're going to say?\" She has a little smirk on her lips when she sits opposite me.\n\n\"I'm sorry about last night.\"\n\n\"Don't be. I'm a woman and well versed in young men's desire. Eddie was not my first, believe it or not, because young women have desires for love and romance too.\"\n\n\"I shouldn't have kissed you, I'm really very sorry I did.\"\n\n\"Let me give you advice for free. Always ask a lady for a kiss, because far too many men take liberties and it's often unwanted.\" She smiles and takes my hand across the table. \"But between you and me, Alfie, you're a handsome and fine young man who I enjoy the company of very much, and if I were maybe ten or fifteen years younger I may have even let you kiss me some more last night.\"\n\nSqueezing her hand and looking into her eyes, I tell her, \"You wouldn't need to be ten of fifteen years younger, if you change your mind.\"\n\nShe laughs, winks, and tells me, \"Eat up and get better and maybe we can go for a stroll along the river later.\"\n\n~0~\n\nOver the course of the following week neither of us speak about the night I kissed her, like it never happened. One day Carmel receives a telegram from her sons Henry and George. They are safe and staying in a barn somewhere in the French country side, behind the lines. She dances down the hall, sharing her news with me in the most cheery voice, and there are rumours the Germans are on the ropes. There's always rumours but I share her elation.\n\nMy days are often spent tending Carmel's garden and on many afternoons the back-lane becomes a cricket pitch for local kids, and I sometimes join them. There's Billy the ringleader, red haired with a face full of freckles, who's fifteen and hopes the war doesn't finish before he's old enough to join up like his older brother did; Warren, short and stocky with a tufts of bond hair, a plucky leg-spinner whose father and older brother joined up together, both dying somewhere on a Middle Eastern battlefield, making Warren curse the Turks and the fact he's too young to have at them; Harry, a little fella with the build of a jockey, handy with the bat, striking the ball in the centre even when the ball bounces randomly off the cobble-stones, who tells me his father's a sailor in the Navy; and there's siblings Jeremy and Grace, both with curly black hair in which I'm sure I've seen a louse or three crawling about, and dirty faces too, looking everything like street urchins. Jeremy talks constantly of their older brother who returned from France without his left arm, while younger Grace is anything but lady-like, swearing like a trooper as the rest of them do and can hold her own against any of the boys, bowling them out on many occasions and regularly hitting the ball far down the lane.",
        "When they found out I was a soldier back from the war they ask me how many Germans I've killed, to which I replied, \"A few.\" My answer satisfies them enough because they don't ask again.\n\n\"Hey, mister Graham,\" Billy calls out. \"See how fast you can bowl?\"\n\nBack in my valley my teammates called me Flash, our opening bowler, fast as a flash of lightning and guaranteed to take wickets and keep runs to a minimum. I've been going easy on the kids, sending down slow balls aimed at the rubbish can they use for wickets. However, Flash wants to show his stuff, rising to Billy's challenge when I walk back to my mark at the end of the lane, steaming in, ball at my side, other kids fielding along the lane, approaching the crease now, arm over, index and middle finger either side of the seam of the tired old ball, sending it down, line and length and pace, a tad short of a yorker, past Billy's bat and smashing a dint in the centre of the bin with a loud crash, knocking it over.\n\n\"Woah!\" The kids say, but I've doubled over, coughing my lungs up, crouching, one hand on the cobbles, fighting for breath.\n\n\"Are you alright, Mister Graham?\" When I look up it's Grace, the wild girl of the group. Her eyes are piercing blue and in some ways she reminds me of Gisela, Will's youngest sister who is a tomboy if there ever was one, and who Will always said was like the little brother he never had, teaching her to bat and bowl and ride horses and fish and hunt, often taking her with him where ever he went, little Gisela rarely leaving Will's side. Everything reminds me of Will in some way or other, and when I do think of him I also I think of his other sisters too, Anna, Ava and Martha, and his mother and father, Frieda and Ludwig.\n\nMost of all I think of his wife Mary and son Jack.\n\nCoughing more, I get to my feet, the kids crowding around me in excitement, Billy telling the others, \"It's the gas, those bloody Germans and their gas. If I get my fucking hands on those bastards, I'll make them pay, for you Mister Graham, and for Waz's Dad and brother, and Jeremy and Grace's brother too.\"\n\n\"And for the King,\" Jeremy says.\n\n\"And for country,\" Grace and Harry laugh.\n\nI'm not sure whether to laugh or cry, but I do neither, smiling, shaking my head.\n\n~0~\n\nOn a Monday I tell Carmel I'd like to go into town, draw some money from the bank and buy some civilian clothes. She offers to show me about if I'd like and I accept, not knowing Melbourne or anyone else here, all my cobbers from the ship having dispersed for the time being. Carmel takes her time, looking smart in a white dress and hat, and I dress in my army uniform. It's a little tatty, but clean and pressed so I'll look smart.\n\nWe ride the tram, the city full of men in suits, women in dresses and hats similar to Carmel's, sailors and soldiers of all ranks here and there. I visit the bank, then a menswear store with a tailor, while Carmel peruses the windows of women's stores.\n\n\"How do I look?\" I say, spinning around in my new clobber, the fanciest suit and trousers and matching hat I could afford.\n\n\"You look fine,\" she says. \"Impressive. The women will be swooning!\"\n\nWe laugh and I hold up two bulging cotton bags. \"I've saved my pennies, so I bought a casual outfit too, something more practical for when I'm helping out around the house and garden. And if you'll allow me, I'm going to buy you lunch.\"\n\nShe smiles, tries to refuse, but I don't take no for an answer, so we dine in a nice restaurant. Outside we see an increasing number of people gathering in the street. A gentleman walks into the restaurant and another man asks what's happening out there.\n\n\"There's a rumour going around that the war is over.\"\n\nCarmel looks to me across the table, asking, \"Do you think it's true?\"\n\nI shrug, barely stopping cutting into my roast lamb sitting among a sea of boiled carrots, potatoes and peas. \"I bloody hope so.\"\n\nShe grits her teeth, but is grinning all the same. \"Shhh, keep your swearing down.\"\n\n\"Sorry,\" I say, but we're both grinning now.\n\nIn the afternoon we follow the crowd to where it gathers out the front of various newspaper offices, people saying an expected announcement will soon be made and speculation is rife it's about the signing of an armistice in Europe.\n\nPeople are singing and dancing, others cheering, many people waving flags, and we know the war is over before the newspapers confirm it. The crowd is thick around the front of the news building and someone has put up a board in the ground floor window for everyone to see, large black lettering stating -- ARMISTICE SIGNED!\n\nCarmel laughs and impulsively hugs me, pulling me against her ample breast. \"It's true! Oh, Alfie, the war is over!\"\n\nI can't describe the feeling coming over me, elation mixed with sorrow, but it's hard to feel sorrow with the mood of the crowd lifting each other up, and I take Carmel's hand, leading her into a dance in the street, not caring if anyone is watching. Other men and women are dancing and a few kiss immodestly, and I look down into Carmel's face and consider kissing her too. She's smiling, so happy, and I smile back, looking into her eyes, wanting to kiss her, deciding not to ruin the moment.\n\nIt's late in the afternoon and men pour into pubs for the six o'clock swill as last drinks have become known since restricted trading hours were introduce two years previously.\n\nSeveral strangers slap me on the shoulder, a girl or two smiling as they dance by, and a small group of soldiers enters a pub in front of us. Carmel asks, \"Do you want to have a drink with your mates?\"\n\n\"Nah, I don't know any of them. I'd rather enjoy this moment with you.\"\n\nJust as well too, because people are getting drunk and rowdy, and a fight breaks out among two men in suits, swearing and fisticuffs, the crowd cheering both on and someone admonishing them for behaving like schoolboys, and I take Carmel's hand, leading her away.\n\n\"Let's walk by the river,\" she says, sliding her arm through mine. It's pretty down here, even if the river is brown, and there are less crowds. Although we've strolled together along the river twice before there was always distance between us, never walking arm in arm. I confess it's lovely to have a woman on my arm, even one more than twice my age.\n\n\"I suppose you'll head back to Queensland soon?\"\n\n\"I can't leave till the doctor discharges me,\" I answer, \"He doesn't want to see me for another two weeks. But I do need to see my family first. And I need to see Mary to tell her Will loved her and make sure she's safe and provided for like he asked.\"\n\nCarmel nods. \"Yes, your friend Will's wife. Do you think...?\"\n\nShe doesn't finish her sentence, so I ask, \"Do I think what?\"\n\n\"Oh, never mind, I was...my mind was wandering.\"\n\n\"Do tell?\"\n\n\"I was going to ask if you think you expect to marry her. You'd previously told me she has a young son, so I suppose she will need support and if there's the prospect of a handsome husband...\"\n\n\"I haven't thought about it.\" I lie, of course. I've thought about Mary on many occasions. Like most of the boys in our valley, when I'd first laid eyes on Mary Hamilton I immediately thought perhaps she was the most beautiful girl in the world, with golden curls and clear blue eyes and a smile like heaven. She smiled at us all, making our hearts beat faster, but Will was the boy who made her blush and look shy, and he was the man who courted her, making the rest of us wish we were in his shoes. We knew we didn't stand a chance and I'm ashamed I've thought many a terribly guilty thought, of returning to our valley where poor widowed Mary will offer me her gratitude when I deliver Will's final message, and perhaps she'll accept me into her life to look after her and Jack, and maybe if things go a certain way...\n\nI shake the thought, feeling terribly guilty, for Will was my cobber and I shouldn't even think I can come close to filling his shoes. Not even if my lungs were pure and healthy, which they aren't.\n\n\"It was rude of me to ask, sorry,\" Carmel says. \"I shouldn't have misspoken.\"\n\n\"Don't be sorry. Anyway, I don't think I'll make much of a husband for anyone. With lungs like mine physical work like I used to do is out of the question. And what woman will put up with my nightly coughing?\"\n\n\"You sell yourself short there, Alfred. There will be plenty of work going with so many young men lost...oh, dear, such a terrible thought, but I suppose it's an unavoidable truth.\"\n\n\"But my lungs will prevent me from doing anything too demanding and all I've known is farm work and timber working.\"\n\n\"There are plenty of non-physical jobs. For example, you could work for the newspaper, perhaps, like those men we saw today among the crowd with cameras and note pads, asking questions. And someone has to set the printers up or maintain them.\" Carmel tightens her grip on my arm, but her voice is cheeky now. \"And as for a woman to be your wife, I imagine many young lassies would feel lucky to be on your arm. I saw several ladies glance in your direction today.\"\n\n\"Sure,\" I say, thinking she's joking. I try and think of something to say, smiling. \"Mary kissed my cheek when Will and I were about to ship out to Europe. She kissed all our cheeks. She said it was for good luck, but I don't know why, perhaps she was caught up in our jubilation, even if she shed a few tears with Will...I never told anyone but I think it was the first time anyone kissed me.\"\n\n\"A young man kissed me recently and it wasn't entirely unpleasant. Missed my cheek altogether and landed his lips on mine! I've even thought about the moment once or twice since, thinking it was the first time I'd been kissed in years.\"\n\nI laugh and so does she, but then I'm coughing and she's apologising, rubbing my back. \"And then he coughed.\"\n\nShe laughs again. \"I'm sure you'll be fine, young Alfie. Women will swoon and overlook the cough.\"\n\nThe night air is warm and pleasant, so we walk all the way back to Carmel's house, where we drink whisky and eat cheese and crackers in her front lounge room. I play the piano, some songs I'd learnt from my mother, but most I learnt in England during my convalescence. I've kept a music book I bought in London, stashed in my kit-bag, where I'd picked up British songs like Keep the Home Fires Burning and It's a Long Way to Tipperary, the French La Madelon, and an American song, Over There. Carmel asks me to sing and I oblige even if my voice isn't much chop, while she dances around the room behind me, humming along even if she's unfamiliar with these songs.\n\n\"Dance with me,\" she whispers, and I stand, taking her hand in mine, the other around her waist, and she continues to hum. She holds my gaze and says, \"You will do perfectly fine when you return.\"\n\nWe dance slowly now, our bodies close, and I'm sure she's not at all oblivious to the swelling in my trousers. She ignores it but I can't and eventually pull away, asking, \"Another drink?\"\n\n\"I thought you'd never ask.\" Clinking glasses, we make toasts, and soon she tells me, \"I'm about done for the night.\"\n\n\"Yeah, same,\" and we each carry a lamp up the stairs. Reaching the landing, I turn to Carmel as she stands outside the door to her bedroom. \"Good night, Carmel.\"\n\n\"It truly has been a good day and good night,\" she says, smiling. When I turn to climb the next flight of stairs to my room in the attic, she quietly calls out, \"Um, Alfred...\"\n\nTurning, she's standing in her doorway, suddenly unsure in the dim light. I think I know what she's asking and take a step towards her, asking to be sure. \"Yes, Carmel?\"\n\n\"Young women are not dissimilar to young men in their needs and desires. And older women like to think they're still young at heart.\" I reach my free hand out and she takes it. \"It doesn't bother you I'm old...\"\n\n\"You're wonderful.\"\n\n\"You're wonderful,\" she whispers, pulling me through her doorway, smiling, seemingly on the verge of giggling. \"And I'm a little tipsy.\"\n\nOur eyes don't leave each other when we place the lamps on her bedside table, then she sits on the bed and pats the sheets beside her, so I join her, holding her hand. \"Are you sure?\"\n\n\"Yes,\" she whispers. \"I know it will only be fleeting and you will leave, but I'm sure.\"\n\n\"I could stay...\"\n\nShe laughs, softly. \"No, you will go, because you've spoken about nothing more. And you should, but now we should stop talking.\"\n\nGently placing my fingers on her chin, drawing her face to mine, our lips touch, softly. Opening my lips over Carmel's, softly nibbling, tongue probing, where at first Carmel keeps her lips closed, but when she opens them, ever-so-slightly, my top lip fills the space, my tongue running along her bottom lip. She tastes of whisky, her tongue caressing my lip, our mouths opening some more, tongues meeting with the gentlest touch.\n\nShe pulls back slightly, and I can see her eyes on mine in the dim lamp light, a smile on her lips. \"No one has ever kissed me like this before.\"\n\n\"Did you like it?\"\n\n\"Very much so, yes.\"\n\n\"It's how the girls in Paris kiss.\"\n\n\"I don't need to know details of how you learnt to kiss a woman, Alfie,\" she whispers, then we kiss again. My hand finds hers, our fingers entwining, then after a while our lips part. Carmel's sigh is heavy, eyes on mine, and she says, \"However, those Parisian girls taught you well. Did they teach you how to help a lady out of her dress?\"\n\n\"Um, I um, have some experience.\"\n\nShe laughs softly. \"Oh, Alfie, you naughty boy. I hope you're clean.\"\n\n\"Very clean, I assure you. The doctors are obsessed with it and check us out all the time.\"\n\n\"So they should! All these virile young men out and about on the streets of Paris.\"\n\n\"And London.\"\n\n\"And London! Very naughty man of the world indeed!\"\n\n\"If it worries you, a lass from New Zealand named Miss Ettie Rout ensured we troops were supplied with protection to keep us clean.\"\n\nHer smile is coy. \"I'm sure you were a very naughty but clean boy, Alfie.\"\n\nWe undress, where I help remove her dress before removing my own clothes, taking in her beauty in the lamp light. Carmel's not a small woman by any means, but everything about her appears perfectly proportioned, her body a treasure of magnificent curves, big and beautiful and soft, her breasts well rounded if a touch saggy, but more than pleasing to my eyes, her nipples perfectly hard.\n\nShe wriggles up the bed and beckons me with a smile. \"What are you waiting for, handsome, a gilded invitation?\"\n\n\"You're very beautiful,\" I whisper, meaning it.\n\n\"Oh, you...come on, before I change my mind.\"\n\nCarmel's smiling and I climb onto the bed where she spreads her legs, and I'm crawling between them, kissing her body with relish, lips all over her lovely soft breasts, sucking and tonguing nipples, all of which makes her gasp and sigh. My shaft feels hard as it can be, her hands on my shoulders then back, more gasps from her lips, my hardness against her wet opening, our mouths crashing together as my length slides past her hairs, finding her most intimate place, pushing inside her without hesitation, feeling our bodies merge as one when she pulls me against her, skin against skin and both of us squeezing each other desperately tight.\n\nRocking together, we find a rhythm, but alas, I must've pushed too fast, because Carmel whispers, \"Why the hurry?\"\n\nAlmost stopping, I whisper, \"You want me to slow down?\"\n\n\"I think it would be sweeter, don't you?\"\n\n\"Sorry.\"\n\n\"Don't be.\" She kisses me and we pace ourselves, our bodies squishing against one another and joined in the most intimate manner possible, her breasts massive, soft and lovely against my chest, my mind going crazy, and despite our change in pace to a gentle slowness, the build-up is intense and before I can help it I climax, pulsating and emptying everything into her.\n\n\"Not slow enough,\" I whisper, drained of my seed.\n\n\"Perfectly slow, you needed to get it out of your system.\" We're kissing again, holding one another tight, but I roll off, falling from her, a sticky mess where we disconnect. \"Don't go far.\"\n\n\"I'm not going anywhere, not tonight, anyway.\"\n\n\"If you want another...\"\n\n\"You want to?\"\n\n\"It would be nice. If we take our time I think you might last longer a second time, and believe me, many a woman appreciates a man taking his time if he gives her the right attention.\"\n\n\"Give me a moment.\"\n\n\"In the meantime, please kiss me like before. Your lips are delicious.\"\n\nWe're kissing again, lips and tongues, and my hand strokes her creamy thighs, between them, the products of our lovemaking dripping from her. She takes my hand, guiding my fingers to her vulva, slowly rubbing me against her, and soon she gasps and I'm hard and I ask, \"Are you ready?\"\n\nThe look in her eye is an intensity I've not seen in a woman. \"Never felt more ready in my life.\"\n\nWe make love again, our bodies joining with a slow and steady rhythm, staring into one another's eyes in the lamp light, holding each other tight, kissing softly, and occasionally she whispers my name, and I whisper hers.\n\nMy lips find her neck and she gasps again, and my manhood touches a part of her deep within, causing her to gasp even louder, moving under me but pulling me deeper, more gasps when I hit the spot again, and a groan when I kiss her ear and whisper, \"You're beautiful.\"\n\n\"Oh, you're perfect my young handsome lover,\" she replies, her voice breathy, and my hands are in her hair, her hands on my back, our rhythm increasing, the sensations of pleasure and love building, but slowly, a journey to be cherished.\n\nCarmel's breathing hard now, her gasps deeper, she's moaning more and more, unlike any of the girls in Paris or London ever did, our rhythm's tempo rising. Lips crash together with great passion and she squeezes me tighter, our bodies sweaty, the smell of our love making conspicuous, and soon she's whimpering every time I push into her.\n\n\"Oh, Alfie,\" she gasps, but she's still meeting my thrusts, both of us seemingly trying to push our bodies through one another, her eyes on mine, her lips apart, gasping, finger nails in my back, pain and pleasure, tingles of wonder building, and I know I can't last long now.\n\nOur climax happens, simultaneously, Carmel gripping me, our eyes never leaving each other as she moans, my everything pumping into her, and she moans again. It's forever before we begin to relax, holding one another, still joined, kissing, cuddling, whispering, and then I'm coughing.\n\n\"Oh, Alfie,\" she whispers as I roll off her, and she rubs my back. \"Sweetie.\"\n\n\"I'm sorry...\" I say between coughs.\n\n\"Don't be, my sweet. Don't be.\"\n\nEventually my coughing subsides, Carmel soothing me, her whispers and arms are warm and sweet. Lying in one another's arms, we fall asleep.\n\n~0~\n\nThough the Armistice has been signed, the horrors of war return to me in the early hours. This time I see the face of a German soldier, a boy who appears to be around my own age and who visits me often, whom I may have been mates with if we'd met under very different circumstances. His expression betrays surprise and fear, real fear, because he intends to kill me but can't get his rifle around quick enough, and my Lewis gun is trained on him only a few feet away, my finger on the trigger.\n\nI'm awake again, trying to wipe the image burnt into my conscious and subconscious, listening to Carmel's light snoring, the blanket covering her rising and falling in the moonlight. Laying there, I use the memory of our lovemaking to drown out the horrors, but later I'm coughing again, and she's awake, soothing me, and of course I'm apologising, but she won't have it, saying not to worry.\n\n~0~\n\nThis morning I fix breakfast; bacon, eggs, spinach from the garden and buttered toast. Carmel sits at the kitchen table, watching me cook. \"You'll make a fine husband to some lucky girl.\"",
        "I turn and smile, thinking about our intimate relations the previous evening, but shake my head. \"Any girl would have to put up with sleepless nights with me waking and coughing.\"\n\n\"I think you'd wear one another out in other ways first.\"\n\nShe's grinning and considering our rapport, for a moment I think Carmel would make a wonderful companion to spend life with. But she's more than twice my age, and when I think of it like this I realise our affair is crazy. Still, last night was out of this world and I'm more than a little tempted to stay around these parts for a bit longer.\n\n\"I hope we get to wear each other out again.\"\n\nShe laughs. \"Plenty of work around the house and garden to wear us out.\"\n\n\"You'd make a fine wife for some lucky bloke,\" I say, grinning. \"I'm tempted to stick about.\"\n\n\"I know you're joking, but if I were a much younger woman, I'd contemplate going north with you.\"\n\n\"If you want to, I won't say no.\"\n\nShe laughs. \"I know you'd be chasing girls your own age in no time.\"\n\n\"But I'd come home to you each evening,\" I say with a wink.\n\n\"Typical man,\" she laughs, \"Out playing elsewhere when you should be playing at home.\"\n\n\"I don't think I'd have any reason to play elsewhere.\"\n\n\"You would and I'd not blame you either.\" Her grin is cheeky, accentuating crow's feet lines around her eyes. \"I'm forty-eight years old and won't be this good looking for much longer.\"\n\n\"I suspect you will be beautiful forever.\"\n\nShe laughs again, a woman full of joy and laughter. \"That's why you must go, so your memories are of me as I am now and not in a few years when I look like a dried prune.\"\n\nI'm laughing too, placing our breakfast on the table as I sit opposite. We eat with smiles each time our feet touch under the table with a gentle caress, and also we smile when our eyes meet, which is most of the time.\n\nAfter breakfast Carmel takes our plates and cutlery to the scullery behind the kitchen where the copper's fire is warming the room considerably this early in the morning. I follow, watching her from where I stand at the door, her back to me and bending over the tub as she washes the cooking utensils and our plates and cutlery.\n\nThe sight of her big bottom stirs memories of last night, stirring my manhood, and I walk to her, placing hands on her hips and she straightens, my lips gently kissing her neck, then I whisper, \"A fella would be lucky to be your husband, even down the track when you're a dried prune.\"\n\n\"Oh, dear,\" she gasps, letting a plate slide back into the water, and when I reach my arms around her, pressing my body against hers, she places her wet hands over mine, pressing herself back into me. \"Oh, my, I sense you're rather happy to see me.\"\n\n\"Very happy to see you, Mrs McCotter,\" I whisper, gently kissing her ear.\n\n\"I have house work to do, young man,\" she whispers back, waggling her bottom against my engorgement.\n\n\"Nothing that can't wait and I promise to help you later.\"\n\n\"After I help you now, right?\"\n\n\"After we help each other.\"\n\nCarmel giggles and turns her head, our lips meeting in a soft kiss before parting again. Squeezing my hands in hers and rocking ever so slightly in my arms, she whispers, \"You have no idea how much I like this.\"\n\n\"I think I have some idea.\" We kiss again, my hands breaking free, rubbing up and down her arms, taking her hands again, guiding them to the edge of the trough. \"May I?\"\n\n\"I, um, I suppose...yes.\" Her voice is breathy, a little flustered perhaps, but she bends over the tub, gripping the rim, pushing her big bottom into me. \"Gentle.\"\n\nRubbing my hands over her dress, down her sides, over the curve of her bottom, squeezing, she gasps over the steamy tub, and I lift her dress' hem, lowering her undergarments, fumbling with my belt, trousers falling to my feet, then cotton drawers too, my shaft hard and ready, aiming for the special part of her she's willing to share with me, feeling her course hair on my penis when touching her intimate woman parts, feeling her wetness, slowly entering Carmel, pushing into her as she pushes back around me, listening to her breathing, a gasp, her head dropping between her arms, my groin skin against her buttocks and still trying to push together when I'm as far inside her as I can possibly get.\n\n\"My Lord,\" she gasps. \"This is new.\"\n\nWith one hand on her pelvis, pulling her into me, I place my other hand on her back, caressing her, over her shoulder, down her arm, and we rock slowly together.\n\n\"I could get used to this.\"\n\n\"Oh, Alfie, if I were younger...oh, my...there's a spot where you...yes, that's it!\" Our grind is nice and slow, our bodies pushing into one another but barely moving, seemingly as if time stands still. Carmel lets out a gasp or moan each time we push extra hard, her head still between her arms. Eventually she gasps and whispers, \"What you're doing to me feels marvellous, but I don't think my arms and legs are going to hold on too much longer.\"\n\n\"Would you like us to stop?\"\n\n\"No! No, not stop, let's try finish, but maybe be a bit quicker.\"\n\nI push a little harder. \"You'll be able to handle it?\"\n\nShe gasps when I thrust. \"Ahh, yes, please.\"\n\nShe feels amazing, her wet cranny wrapped around my manhood, sharing ourselves with each other, our grind increasingly vigorous, her gasps louder, and soon I'm grunting too.\n\nWe're still taking forever, with synchronised thrusts and gasps and grunts, she feels so wonderful, but presently the doorbell rings and Carmel gasps, \"Shit, I'm so close, whoever it is will have to go away!\"\n\nIgnoring the bell we push each other onward, but the bell rings again and I feel we're so close, but there's a muffled voice calling from the front porch, then Carmel pushes back hard into my thrust, whispering, \"Oh my Lord...why does this have to happen now...don't you dare stop.\"\n\nWe don't stop and we do make it, together, the sensations of tingles making my legs all wobbly, spurting my seed deep into Carmel as she twitches and gasps and lets out a moan, and moments later the sound of the front door opening brings on a new urgency, where she pushes me back much harder than our thrusting, causing me to slide from her with a string of our sticky mess falling between us to the floor, and she scrambles for her undergarments.\n\n\"Mum,\" the woman's voice echoes through the house, \"Are you home?\"\n\n\"Put your thing away, quick,\" Carmel hisses as she adjusts her dress, and I'm already halfway there.\n\nThere's a scratching sound on the timber floor and the woman's voice calls again, \"Mum?\"\n\n\"In the scullery, love,\" Carmel calls out, and she picks up a log with her right hand and feeds it into the small fire under the copper while adjusting her dress with her left. A small brown and black terrier with pointed muzzle and huge pointy ears scrambles around the corner from the hall, surveying the situation as I tuck my shirt into my trousers. The dog and I lock eyes and without further hesitation it yaps a high pitch raspy bark, directed at me.\n\n\"Mabel, heel, now!\" A woman has stepped into the kitchen, tall and beautiful, with dark brown hair pinned upon her head and holding a large hat in her hand, wearing an elegant black dress. The dog, Mabel, does not heel, still barking at me.\n\n\"Shhhh, Mabel,\" Carmel coos.\n\n\"Hey there,\" I say, bending down, holding out my hand, and the dogs stops barking, coming over to sniff the unfamiliar stranger. Satisfied, she lets me scratch behind her ear. \"Good girl, Mabel, good girl.\"\n\nThe woman stands in the kitchen, observing me and her dog interacting, then she turns to Carmel and says, \"I didn't realise you had company, Mum.\"\n\nCarmel steps through to the kitchen and I can see her face is red with beads of moisture upon her forehead. \"Susannah, this is Alfred. He's one of the boys I've volunteered to house while he waits for the army to tell him where he's to go next. Alfred, this is my daughter Susannah.\"\n\n\"It's a pleasure,\" I say, standing and stepping out of the scullery towards her, holding out my hand.\n\n\"Oh, yes, Alfred, it sure is a pleasure.\" Susannah takes my hand and we manage an awkward shake.\n\nSusannah's taller than Carmel, her figure less rounded than her mother, but she has fine curves beneath her black dress all the same and she has her mother's face, however her eyes are a greenish hazel rather than Carmel's brown, meeting mine.\n\nCarmel says, \"Alfred was washing up the dishes from breakfast, he's quite handy to have around.\"\n\n\"Didn't you hear the bell?\" Susannah asks.\n\n\"Oh, I know you have a key and was preoccupied.\"\n\n\"And did you have a late breakfast? It's after nine.\"\n\n\"Oh, I hadn't paid much attention to the time, like I said, I was preoccupied preparing the copper for more water so I could wash some clothing.\"\n\nSusannah looks at me, seemingly accepting all was as her mother stated. \"Have you heard the news? The war is over!\"\n\n\"Yes,\" Carmel says, smiling now. \"Alfred and I were in town yesterday, I was helping him shop and showing him about when we heard.\"\n\nSusannah's still scrutinising me. \"You're a solider. I imagine you're glad the war is over.\"\n\n\"Very glad, madam. Like we all are. But I'm sorry to hear you lost your husband.\"\n\n\"Yes, well, he was...foolish, I suppose.\" Her eyes are down cast. \"Cornelius said war was a young man's game, but despite being in his thirties he joined up anyway.\"\n\nCarmel is watching us and she nods. \"Very sad, indeed. He was a...gentleman.\"\n\nSusannah flashes Carmel a look and I'm uncertain of the dynamic between the two, but I act oblivious, changing focus. \"Your mother's told me about your two brothers, so hopefully they'll be home sometime soon.\"\n\nSusannah's eyes brighten. \"That's why I came, to share the news of the armistice with Mum. I wasn't sure if she'd heard. Henry and George will be coming home!\"\n\nMother and daughter hug and I give them room to talk by heading out to the garden. Mabel the terrier joins me there, sniffing everything and attacking some of Carmel's vegetables. Eventually it's lunchtime and I join the women in the kitchen, thinking about how only hours before I bent Carmel over the scullery tub, filling her, and now here we were sitting with her daughter as if nothing happened. In a moment of inattention, I smile at Carmel and she raises her eyebrows in reply, shaking her head in warning.\n\n\"You will go back to Queensland then?\" Susannah asks, drawing my attention back to her.\n\n\"Yes, I think so. I visit the doctor again in a couple of weeks and I hope I'll be discharged and allowed to travel home.\"\n\n\"Oh, you must come and visit me before you go. We have a...,\" she pauses, looks down at her empty plate, then looks back at me. \"Cornelius' family own a bathing box down at Brighton Beach and they still allow me to use it. By allow, I mean none of them ever do so anymore and I still have my husband's key. There are sea baths nearby if you like to swim. I'm heading down there this Thursday if you'd accompany me. Do you swim?\"\n\n\"I swim, but never in the ocean. Where I grew up there are dams and many swimming holes in the creeks.\"\n\n\"The bay is gentle and calm unless there's a storm, in which case we wouldn't swim. What do you say?\"\n\nI look to Carmel. \"It sounds inviting, perhaps we could all go?\"\n\nCarmel shakes her head. \"I don't swim, sorry.\"\n\n\"Mum, you don't need to swim, you can lounge on the beach with a book, you know.\" Susannah then turns to me. \"Mum never liked Cornelius or his family and wants nothing to do with their bathing box.\"\n\n\"I'm right here, you know,\" Carmel says, indignant. \"It's not that I didn't like Cornelius. It's the way he took advantage of you.\"\n\nSusannah looks down again. \"He loved me and I loved him.\"\n\n\"Anyway, we shouldn't involve Alfred with these shenanigans.\"\n\nTo be perfectly frank I'm embarrassed and thus glad when the conversation ends. Carmel has filled me in on some detail, where Cornelius was the cousin and solicitor of the lover of her husband Edward, and Cornelius died in France the previous year like so many young Australians, and yet a resentment or animosity between mother and daughter remained.\n\nLater Susannah has left and Carmel slumps into the lounge in the front room. \"Would you share a dram of whisky with me?\"\n\n\"Of course, why not.\" I pour two and hand over her glass, clinking them, me sitting beside her on the double ended chaise.\n\n\"I never drink this much but this is becoming a habit since you arrived, you must think I'm a lush.\"\n\n\"Not at all.\"\n\n\"The whisky was Edward's and I never even opened it till the other night with you.\" She contemplates me for a moment, then says, \"I think it would do you and your lungs well to take a trip to the seaside.\"\n\n\"You...don't mind?\"\n\nShe laughs. \"I encourage you. Go and swim with Susannah at the beach. Last year they legalised mixed bathing. Stupid idea to segregate men and women in the first place, it's unnatural.\"\n\n\"Are you sure you wouldn't want to come?\"\n\n\"I can't swim and I don't...\" Carmel pauses and takes another sip of her whisky. \"Susannah was eighteen when she met Cornelius and he was thirty. Like I've told you, he was the solicitor who represented his cousin who was my Edward's lover, when she contested Edward's will. They failed, of course, because I was Edwards wife, but it didn't stop them trying. When he met Susannah years later he knew very well she was Edward's daughter and he never disclosed his connection to the family of her father's lover, and well, it's all history now. But they're another class, the wealthy elite having made money off miners in the gold rush days apparently, yet Cornelius is dead and my daughter is a widow at twenty-four. A somewhat wealthy widow, though the family tried to get their house back from Susannah. Greed runs in their blood, but Susannah's not as na\u00efve as she makes out, and come to think of it, perhaps you should get to know her better. I saw the way you and she looked at one another.\"\n\n\"I was looking at you.\"\n\nCarmel laughs again, shaking her head. \"You couldn't take your eyes of Susannah and I don't blame you. She's a darn sight better looking than I ever was.\"\n\n\"Now that's not true.\"\n\n\"Oh, fooey, she's beautiful and she's a catch if there ever was one.\"\n\n\"Are you trying to set me up with your daughter?\"\n\n\"Maybe...\" Carmel has a cheeky little smile on her lips. \"Just this morning you did say something about maybe staying around these parts.\"\n\n\"Just this morning I was conscious of a wet spot in my drawers for an hour or so after my liaison with the scullery maid.\"\n\n\"Oh you cheeky devil, scullery maid indeed! And by gosh you were leaking out of me all morning. We were almost caught red handed. Susannah would've disowned me altogether!\"\n\nI reach out and place my hand on her thigh. \"So if you still want me to get to know your daughter does it mean you'd no longer like to continue getting to know each other?\"\n\n\"You should get to know her,\" she says, picking my hand from her thigh and placing back on my stomach.\n\n\"But it would be complicated,\" I say, reaching out to her again. \"I'd always be looking at another woman.\"\n\n\"Typical man.\" She doesn't remove my hand this time, so I lean across and she accepts my tender kiss. We break away and she looks into my eyes. \"It would be complicated.\"\n\n\"I have to return to Queensland,\" I whisper. \"So unless you or she would like to join me, I will be leaving.\"\n\n\"For Mary?\"\n\n\"For my family, and yes, for Will's family, which is Mary and his son Jack too.\"\n\n\"Of course.\" She stands and takes my hand. \"Come on, let's turn in.\"\n\nOur loving this night is gentle, taking considerable time, and afterwards we fall asleep together in each other's arms.\n\n~0~\n\nStepping from the tram on Chapel Street, I can see she's standing where we've agreed to meet.\n\n\"Good morning, Susannah.\"\n\nSusannah turns and smiles, reminding me of Carmel. Except she's at least a head taller than her mother, with brown hair pinned under her broad floppy hat. She carries a canvas bag under her arm and I see Mabel's head sticking out, looking around at everything going on in the busy street. \"Morning, Mr Graham.\"\n\n\"Please, call me Alfie.\"\n\nHer smile is cheeky, like her mother's. \"Morning, Mr Alfie.\"\n\nThe tram ride to Brighton is pleasant and so is the company. Occasionally Mabel barks her raucous yapping bark and a few people give us looks of disdain, but Susannah ignores them. The conductor rebukes her as we leave, yet Susannah wins him over with a cheeky smile, telling him, \"Oh, I didn't know my doggy wasn't allowed on the tram. No one said anything when we boarded.\"\n\n\"It's quite alright this one time, madam, but don't bring it on again.\"\n\n\"Oh, I'll make sure I won't.\" The tram's bell dings twice and it rolls away from us. Susannah laughs, \"They never see her in the bag until I'm almost at my destination.\"\n\n\"What happens if you run into the same conductor again?\"\n\n\"I'll flash him a smile and they usually allow Mabel on with a whisper to make sure she stays quiet. Amazing what a man will do if a girl smiles at him, don't you agree?\"\n\nI laugh and she smiles and I agree, for right now I think I'd be tempted to her will. I can't help but wonder if she seduced Cornelius rather than the other way round.\n\nThe sky is blue with a scatter of white fluffy clouds, and beyond the scrappy coastal bushes the great expanse of Port Phillip Bay reflects the sky above, extending before us to beyond the horizon. A few ships steam out in the channel and closer in shore several boats sail. I've previously only seen Port Phillip from the ship I arrived on, early in the morning darkness as we steamed towards Melbourne Town.\n\nThrough the bushes and down the dune is a stretch of beach with a long row of small huts lined up, dozens of them on the sand only a dozen yards from the water's edge. Some huts are brightly coloured, others are plain timber, some well-kept, others ramshackle and falling into disrepair. Most have a pitched roof and all have a door at the front, facing the water, many even having a small platform, like a mini veranda or porch.\n\n\"We're not far along here,\" Susannah tells me, placing Mabel on the sand to run ahead. The little terrier bolts off and I fear we won't see her again, but there she is, jumping onto the timber platform of a bright red hut. \"We come here at least once a week. I find it therapeutic to swim in the bay, and to be honest, Cornelius' family never come even if they own the bathing box, so I'm never bothered by anyone.\"\n\n\"Don't you get lonely?\"\n\n\"Mabel keeps me company.\"\n\nSo she does, the little dog scrambling inside when Susannah unlocks and opens the door. Down the left side is a long bench-seat, a book-case on the rear wall with a few books, bottles of whisky, brandy and gin, a neat stack of plates and a few other knick-knacks. Two folded deck chairs rest against the right hand wall and there is a small table in the corner with several towels folded on top.\n\n\"Do you mind waiting outside while I change into my bathers?\"\n\n\"No, of course not.\"\n\nMabel and I sit on the front deck, watching the bay, and eventually Susannah joins us, wearing a fashionable blue and white striped bathing suit falling to her knees like a skirt, and dare I say, reveals her curves nicely, while her chestnut hair falls about her shoulders and down her back.\n\n\"Your turn,\" she says, catching me staring, so I act innocent, heading into the small hut to change into the togs I've borrowed from one of her brothers.\n\n\"Race you to the water,\" she laughs when I'm suitably dressed for swimming, and she takes off, running to the water's edge before I've left the little platform, Mabel running at her heals, yapping away with excitement. I chase and soon we're splashing about, Mabel running up and down the water's edge, barking. The water is cool against my skin, salty too, invigorating.",
        "Despite the bathing box huts, the beach stays deserted, like it's our own private oasis. I'm floating on my back, closing my eyes to the glare, feeling the water surround my skin, trying to think of nothing in particular. My efforts are in vain because I think of Will and Mary and Jack, and my family too, and now I think of Carmel, and then wonder about Susannah, who I know is floating about somewhere nearby.\n\n\"Alfie, do you think you might stay a little while longer?\"\n\nHer voice startles me, despite me knowing she's there, maybe because I was thinking of her this very moment. Without opening my eyes, I ask, \"Stay? In Melbourne?\"\n\n\"Yes, here in Melbourne.\"\n\n\"I do enjoy it here but I have family back in Queensland. And I made a promise to my mate to see his wife and tell her...his dying words.\"\n\n\"His dying words?\"\n\n\"Yes, he...wanted me to tell his wife he loves her and to make sure she and their son are provided for.\" I can hear Will's voice in my head when I say the words and see his face.\n\nSusannah nods. \"Must be a difficult burden to carry. I wish someone from Cornelius' unit came and visited. Even to tell me he was...I don't know, tell me his death...counted.\"\n\n\"He did his duty,\" I say because I can't think of anything else comforting.\n\n\"Yes, I suppose he did.\" She's quiet for a moment, then says, \"Mum tells me your lungs are damaged from German gas.\"\n\n\"They are.\"\n\n\"Sea air from the bay here should sooth them.\"\n\n\"Are you a doctor?\" I say, opening my eyes, bobbing in the water not too far from Susannah, giving her a grin.\n\n\"No, but I've read the sea has many therapeutic qualities.\"\n\n\"So does lunch,\" I laugh, swimming towards the shore without saying another word, and she follows.\n\nWe eat jam sandwiches and scones and I produce a bottle of red wine, a French drop I found for a hefty price, while Mabel chews on a meaty bone and dozes in the sun beside us. Susannah talks about everything and nothing at the same time. At some point, she says, \"I've started writing a book.\"\n\n\"A book? About what?\"\n\n\"A novel based on Cornelius' letters. I'll make it fiction but it'll be our story. He was fresh out of training and they sent him straight into action. He never came back. I don't know any other details except apparently they were never able to retrieve his body.\"\n\n\"I'm sorry to hear,\" I say, gently as possible. \"It wasn't uncommon over there, unfortunately.\"\n\nShe looks down, pensive, swishing wine around her glass like a whirlpool, then looks me in the eye. \"Would you mind helping me, Alfie?\"\n\n\"Helping you? With your book?\"\n\n\"Yes. You could help me flesh out some details of what it was like over in the war, to make it authentic.\"\n\n\"I wasn't a pilot,\" I say, shaking my head. \"Their experiences were different to us diggers.\"\n\n\"But surely you saw aeroplanes battling above you and experienced what it was like on the ground over there. Maybe Cornelius landed and tried to get back to the trenches?\"\n\nWith a gentle smile, I say, \"Maybe.\"\n\n\"Would you help me by telling me about the war?\"\n\n\"I'd like to but I'm not sure it's anything you want to publish. It wasn't much fun and not the adventure we thought it might be when we volunteered.\"\n\nShe's looking at me again, her stare intense like she's trying to read my mind. \"Why did you volunteer, Alfie?\"\n\n\"Dunno. Adventure. Stupidity, perhaps.\" In my mind's eye I can see Will, Michael and Francis, their smiling faces and loud banter as I hand them each a bottle of beer I'd retrieved from where we'd placed them in the creek to cool one Sunday afternoon back in September of Nineteen-Fourteen. \"Some mates and I heard another mate of ours, Arthur Coleman from our cricket team, was training with the Fifth Light Horse in Brisbane and over several rounds of drinks we agreed to join up together, hoping it might not be too late to train with Arthur. He shipped out before we arrived and was killed at Gallipoli.\"\n\nSusannah shivers involuntarily when I mention of Gallipoli, the infamous battle scaring the national psyche more than all the battles on the Western Front, perhaps because it was our first real bloodletting of the war.\n\nShe takes time to recompose herself. \"Cornelius mostly joined because he heard he could learn to fly. It was a passion he wanted dearly, often telling anyone about the time he'd witnessed the demonstration of an aeroplane at the Bendigo racecourse years before. His letters were full of excitement when he arrived in Europe, telling me about all the aircraft.\"\n\n\"Where I grew up,\" I begin to say, then stop. My mind is still with my mates, my eyes lost for a reference point, staring somewhere across the bay around the horizon, and when Susannah doesn't say anything, I glance to her, and she's staring into the distance too.\n\nShe meets my eye. \"Go on.\"\n\n\"I live in a valley far from the big smoke. It's green and full of dairy cattle and sheep and tall forests of fine timber, and we're about as far from the rest of the world as you can imagine. We have a railway-line but I'd never seen a motorcar until I was signing up with my mates in Brisbane. And there was only a handful of those things about anyhow and I'd never even heard of an aeroplane. Before we knew it we were in the thick of the big stoush in France and Belgium where the machines were everywhere and all I could think about was either getting home or dying.\"\n\nI say nothing more and neither does she for a while, then breaks the spell, perhaps searching for something to say. \"Do you have a girl back home?\"\n\n\"A girl?\" I shake my head, avoiding her eyes. \"No, not me. Only family.\"\n\n\"What about your friend's wife?\"\n\n\"Mary's not family. She's a ring-in, came to the valley in nineteen-twelve with her family. Most boys wanted her but Will was the first and last fella she accepted a dance with.\"\n\n\"You were sweet on her?\"\n\nWith a smile, I shake my head. \"Not quite. I guess we were all sweet on her to begin with, but Will was me cobber and I never thought anyone more worthy of Mary. Most of us boys looked up to Will so his shoes are too big for any man to fill. So, tell me, since we're asking personal questions, what is it about Cornelius' family?\"\n\nShe smiles. \"You've been talking to Mum, haven't you? Cornelius' family despise me because I'm from the working classes and they think they should inherit his estate. Keep it in the family, that sort of thing.\"\n\n\"Why don't you sell and move back in with your mother? Or invite her to live with you?\"\n\n\"Oh, no, we'd be at one another's throats. She never approved of Cornelius on account of who his family is either.\" She falls silent again, looking across the bay, then after a while she looks at me, saying, \"Stay in Melbourne for a while, Alfie.\"\n\n\"I'm sorely tempted, but no, I can't...\"\n\n\"We'll see,\" she says, cryptically. We sit for a while, looking to the horizon and beyond in silence, eventually packing our picnic, and she stands, holding out her hand. \"Will you join me?\"\n\nTaking her hand, I too stand. \"Join you? What do you mean?\"\n\nShe smiles, tugging me a little closer towards the door of the hut. \"Oh, Alfie, you're not na\u00efve, are you?\"\n\nSusannah's beautiful and I'm so damn tempted. \"Oh...um, this is not a good idea.\"\n\n\"You're not a prude, are you?\"\n\n\"I think we should go for another swim instead.\"\n\nWith a shake of her head and a sigh, she smiles, lets my hand go and says, \"You go, Alfie. I'll be waiting when you return.\"\n\n~0~\n\n\"Did you enjoy the picnic?\" Carmel asks.\n\n\"Yes, it was quite a lovely spot down at the beach.\"\n\n\"And the company was nice?\"\n\nI give her a smile. \"Susannah's a lovely girl.\"\n\n\"She could use some company, if you were inclined to stay.\"\n\n\"I'm tempted.\"\n\n\"But...\"\n\n\"But, I think I'd rather your company.\"\n\n\"Oh, no you don't, you cheeky joker. You want to go back to your family and your mate's wife.\"\n\n\"I need to see Mary but I don't think...,\" I falter, the guilty feelings overwhelming me when I think of Mary as anything other than my mate's widow. \"Anyway, I'm going to the hospital in a couple of weeks and if I'm discharged I'll probably leave as quick as I can. Sorry.\"\n\n\"Don't be sorry, I completely understand. But maybe you'll be back one day?\"\n\n\"I'd come back for you,\" I say with a grin.\n\n\"Don't be silly, Alfie. But if you found yourself considering courting Susannah, I'd encourage you. Take her to Queensland and get her away from the grubby hands of Cornelius' family.\"\n\n\"I barely know her but she's a city girl. She doesn't strike me as the kind of woman who'd last long in the country.\"\n\n\"She's tougher than you think, give her a chance.\"\n\n\"If I were to court her I'd be wanting to spend my nights in your bed.\"\n\n\"No you wouldn't because you'd have a vivacious young woman to share your bed with instead and I wouldn't entertain the thought of allowing you back in my bed.\"\n\n\"And there's the other reason I've not considered courting her.\"\n\n\"You are a cheeky lad,\" she says, shaking her head.\n\nLater our discussion is forgotten when Carmel and I fall into one another's arms. Yet I'm so exhausted by the day's activity we don't make love, simply holding one another, falling asleep before I know it. It's only in the early hours of the morning when the war invades my dreams, giving me the eternal nightmare, and when I wake I'm coughing again, gasping for breath with fire in my lungs. Carmel's soothing me while I wonder if I'll ever sleep through the night again.\n\n~0~\n\nSusannah visits almost every day now where previously she'd hardly visited her mother's house more than once a month. While she's about Carmel smirks at me and busies herself in the scullery or garden, making herself scarce. Susannah and I share endless cups of tea while she asks questions about the war, taking notes when I offer something she may or may not use.\n\nI can't help feeling sorry for her because she's a widow at twenty-four, a childless widow too, and fears she may never marry again and have children. Overtime she tells me her husband was desperate to have an heir, a son, but they'd never succeeded, and not through lack of trying.\n\nHowever, I suspect Melbourne will be flooded with returning soldiers and sailors in the coming year and I have no doubt Susannah will attract the attention of more than a few men willing to offer their company, for she is without question an attractive woman. And a considerably wealthy woman too.\n\nSometimes my mind wanders, thinking it'd make a great deal of sense to let Susannah deeper into my life, perhaps asking if she'd come north with me, or even remaining here in Melbourne. Yet it's Carmel who draws my attention each time and I wonder why. Perhaps because deep down I know I don't have to commit to Carmel.\n\nMeanwhile, despite Carmel's hints for me to court her daughter, she's not forcing the issue either and perhaps she hopes nature will take its course. We've not made love since the picnic either and somewhat amusingly my mind often wanders to thoughts of making love with Carmel whenever I'm speaking with Susannah, resulting in a growing erection.\n\nOne evening I find Carmel sitting on the double ended chaise in the front room, as she usually does. The air is warm this late in spring and thus the fire remains unlit. I cross to the piano, sitting on the stool facing Carmel instead of the instrument.\n\n\"Is something up, Alfie?\"\n\n\"Kind of is, yes,\" I say.\n\nShe shifts in the seat. \"What's the matter?\"\n\n\"I, ah, have a, um, a problem.\"\n\n\"Do you want to tell me about it?\"\n\nI nod. \"I'm not sure if I should bring it up, but I don't seem to be able to contain it. It's a growing issue.\"\n\nShe looks at me with a confused expression. \"You're going to have to let it out.\"\n\n\"Yeah, I think so.\" I begin to unbutton my trousers. \"This happens when I think about you.\"\n\n\"Gosh, Alife,\" Carmel gasps, \"Don't get your thing out here! The curtains aren't even closed properly!\"\n\n\"I'll fix them,\" I say, standing, my penis jutting out, stiff like a pole.\n\nWith a horrified expression, Carmel hisses, \"Sit back down and put your thing away before the neighbours see.\"\n\nStuffing my rod uncomfortably into my trousers, I grin and whisper, \"Opps, I'm sorry.\"\n\nCarmel's now closing the curtains and blinds, then comes over to me. \"Please don't ever display that thing of yours in my front window.\"\n\n\"Those neighbours will start their rumours.\"\n\n\"Yes they will, and old Mrs Curtis across the road might have a heart attack because she's always asking about you with great interest when I see her.\" Looking down, she's smiling again. \"But I guess you've genuinely resisted my daughter's charms.\"\n\n\"Susannah is a charming lass.\"\n\n\"You sure you're not interested?\"\n\n\"If things were a little different I might be, but no, it won't work unless she wanted to leave Melbourne, which she doesn't. The thing is, I miss our...evenings together.\"\n\n\"I miss them too,\" she whispers, sitting next to me on the long stool. \"Now where'd you hide the lovely hard penis I told you to not to put on display?\"\n\n\"Down here.\" And soon we're kissing and embracing, falling to the sheepskin rug and squeezing one another tight. Everything about Carmel feels glorious, her body taking mine, and we slowly build our rhythm where she's whimpering in pleasure, and I'm groaning, sweetly whispering into her ear, and not before long we're exploding with the lovely sensations we've given one another.\n\nEventually the clock chimes nine and we head to bed, making love again, hearing the clock striking ten before we're finished with one another on this second occasion.\n\n~0~\n\nA little over a week later I'm back in my uniform, at the hospital, surrounded by other soldiers, many are missing limbs, others coughing, and there's always men harassing the pretty young nurses, and even the older and not so attractive ones get plenty of attention.\n\n\"Corporal Graham?\"\n\n\"Yes, I'm Corporal Graham,\" I say to the middle-aged nurse, giving her a smile. She's roundish and reminds me a little of Carmel, except this woman wears a no-nonsense expression and doesn't return my smile.\n\n\"Follow me, please.\"\n\nThe experience is like every other hospital check-up, the doctor inspecting me, including an extra-long examination of my privates as per usual, asking questions and making a handful of notes. He listens to my lungs, then abruptly tells me, \"Your lungs are healing, but it will take quite some time. I'm going to discharge you from care, Corporal, because I suspect you may heal quicker in the warmer climate of your native Queensland. But take it easy with physical exertion.\"\n\n\"What about the nightmares, sir?\"\n\n\"Yes, you will have to get used to those, I'm afraid. Not much I can do about them.\"\n\nAnd with a signature, I'm free to go.\n\nThe strangest sensation comes over me when I leave the hospital. I feel like I've been released from chains, but also I don't know what to do with myself. For the past four years the Army's told me what to do every moment of every day and now in an instant I'm apparently free.\n\n\"G'day, Dig,\" someone says, clamping a hand on my shoulder, and I turn to face Pete the pilot, the man with the horrid burns down the left side of his face. \"You look lost, like you don't know if you're coming or going.\"\n\nI laugh, holding up my discharge papers. \"I kinda am lost, the doc's discharged me.\"\n\n\"Fan-bloody-tastic!\" Pete says with a huge grin. \"At least one bastard's gonna get out of this place alive. Doc tells me to come back and see him in another month. Bloody be alright if I could meet a girl who'd put up with this battered and burnt head of mine.\"\n\n\"Mate, with a head like yours I can't believe girls aren't lining up for you, war hero and all!\"\n\n\"Yeah, sheila's love battle wounds, or so they say.\" He laughs at our shared sarcasm before becoming serious. \"No word of a lie, before the war I couldn't keep the girls at bay, but my love life's about as dry as a Pommy's bath towel these days. Not even the whores would touch me without a blindfold!\"\n\nI put my hand on his shoulder. \"Tell me, are you coming or going?\"\n\n\"Going, back to frosty manor. A little convalescent hospital run by a nice family wanting to help and keep us walking wounded from sin, with their airs and graces, bloody bible thumping wowsers. What about you, where you headed?\"\n\n\"Train station. Gonna buy a ticket to Queensland.\"\n\n\"Half your fucking luck, cobber!\"\n\n\"Shout you a beer, mate, if you want to join me for a drink?\"\n\n\"Fucking ripper,\" he says, hand on my shoulder again. \"Best offer I've had since...fucking nineteen-sixteen when some captain asked if I was scared of heights and would I consider joining the Flying Corps.\"\n\nWandering off, the city is brimming with ladies and gentlemen, horses with carts and several motorcars here and there. A helpful lad points us in the direction of the railway station where I buy my ticket north. After examining the cardboard stub for a moment, I slip it into my leather wallet and we walk back into the sunshine gracing the front steps as more people push by.\n\nClose to the entrance there's a man propped up against the station's fa\u00e7ade who I'd not noticed when entering the building, and he holds out a tin to passers-by, who mostly ignore him. The poor bastard has no legs and despite his scrappy beard he couldn't be much older than me.\n\nWe approach and he looks down at the ground, not meeting our eyes, but holding his tin out all the same.\n\n\"Hard times, eh, son,\" Pete says.\n\n\"Yes, sir, sorry, sir,\" the man replies, straightening a little perhaps because Pete is a Lieutenant and wearing his uniform and the man on the ground was clearly once used to following orders in the not-too-distant past like the rest of us. He smells, not too good either, but we don't shy away.\n\n\"Don't be sorry, Digger.\"\n\nThe man looks up with the look in his eyes; the look we all know too well, of shell shock and pain. \"Turk mine took me legs in Palestine while some bastard back here took me misuses and kids...\"\n\n\"The dirty bastard...\" I whisper and the man looks away again. We drop a generous number of coins into his tin and I say, \"We're looking for somewhere to drink, do you want to join us?\"\n\nBloke shakes his head, looking down. When Pete talks, however, the man instinctively straightens his shoulders. \"Can you point us in the direction of a good watering hole then?\"\n\n\"Over there is as good as any.\" The man points to a stone building across the road, a sign over the entrance declaring it the Young and Jackson Hotel.\n\n\"Thanks, cobber, we'll get you something to drink.\"\n\nThe place is bustling and because we're both in our uniform several gentlemen offer to buy our first drinks, but first Pete and I buy a bottle each, running them back to the legless digger at the station. He thanks us and though Pete has indicated he's against his religious hosts, he kneels down and offers the man a prayer and writes the address of the convalescent hospital he's staying at on note paper from his wallet, handing it to the man, and we each give him several more shillings.\n\nBack in the bar we clink our beer glasses together and say, \"Bottoms up,\" before sinking them quick as you like.\n\nAn oil painting of a nude woman hangs on a wall. She's standing, body facing us, leaning with left hand on a rock which is covered in her blue dress, her right arm crooked with fist resting on her waist, and she's looking to her left, seemingly distracted. An inscription on the bottom of the painting's frame tells us her name is Chloe, and I can't help but see a passing resemblance to Susannah, however, from what I could tell by her swimming togs and being intimately familiar with her mother, Susannah's breasts are significantly larger than the girl's in the painting.\n\n\"Chloe's French,\" a gentleman says, nodding towards the painting with a leering grin, blowing smoke from a cigar. \"You boys aren't the first soldiers to be beguiled by her charms. Fellas like you have written letters to her for the past four years, promising they'll come back to her.\"",
        "Another man says, \"I'd wager you boys met a few Chloe's in your time over in France.\"\n\n\"I once knew a girl exactly like her back in Paris,\" Pete says, nodding at the image, smiling. \"Reckon she was the very model in the picture.\"\n\n\"Bet you knew more than a few,\" another bloke laughs, offering Pete a cigarette.\n\nAnother man places fresh beers in front of us and says to me, \"What about you, son, did you meet a girl like Chloe over there?\"\n\n\"I met an Antoinette...and a Clementine, a Marguerite...\"\n\n\"Jesus, you're supposed to fuck them, not learn their names!\" The man laughs, perhaps at his own attempt at humour, a great cloud of cigarette smoke blowing over me and he slaps me on the back with force, pushing me forward and making me cough, but he doesn't care. \"I bet they were grand young lasses, you should have invited them all back here to Melbourne, like our Chloe here.\"\n\nI'm hacking up my lungs and Pete says, \"Go easy on Alfred, the poor bastard was gassed by the Huns and his lungs are fucked.\"\n\n\"Sorry, cobber,\" the man says. \"Nothing a few more beers and tobacco won't cure.\"\n\nSomeone else asks Pete to, \"Tell us about how you got them hideous scars?\"\n\nPete shrugs and neither of us pay for a single drink. A crowd gathers to listen, enthralled as Pete regales them with stories of aerial combat over the trenches, waving his hands about as if they're Sopwith Camels tangling with German Fokkers up the endless blue. Can't see how those fellas did it because it always looked confusing when we looked up to watch them fools fighting hundreds of feet above our heads, more often than not ending with several falling in a smoking wreck from a great height.\n\nI've heard Pete's stories enough on the voyage back home, but still content to listen because I can't stand being the centre of attention with these rowdy gentlemen who want to live the war vicariously through younger men. Pete's experience of the war was nothing like my own, where he almost makes it sound romantic up until the point his aeroplane caught a bullet through the fuel tank, the resulting fire spreading quickly, and Pete's heroic effort to get to the ground before he burnt to death. The men lap the details up and some tell us they have sons over there too, mostly infantry like I was and I don't want to share my tales of endless mud and sneaking across no-mans-land and artillery and gas and imminent death in the trenches.\n\nLater the men have left and when last drinks are called we're drinking alone. Pete looks at Chloe, and tells me, \"I knew plenty of girls like her, but now they're repulsed by the sight of my scarred head. What I'd do to go back to Paris and look up this one lass who taught me a thing or two.\"\n\n\"Taught you what?\"\n\nHe grins. \"Ever kiss a woman's firebox?\"\n\nWith a snort I almost spit my beer across the bar, but swallow it instead and laugh. \"Firebox!\"\n\n\"Or cunt.\"\n\n\"Girl in London called it her cranny.\"\n\nWe both laugh, then Pete takes another pull of his lager, setting his now half full glass down again. \"We had a doc who taught us how to check the girls out to see if they were clean or not. Some would get offended, but they were taking our money anyway so most thought nothing of me having a sticky beak before sticking my todger in. I was checking out this one girl with the finest fairest hair you ever did see, my head between her legs as she lay on the bed, and she says in her cute accent, while you're down there how about you give me a special kiss. I thought to me self, she looks clean so why not. I went in, tongue and all like they kissed us on our mouths over there, and she starts directing me as if instructing me to fly a plane, telling me to keep my tongue flat over her clitoris. Moments later she's moaning and quivering, her juices everywhere on my face and in my mouth, and she offers to return the favour, sucking me off like a lollipop! Best quid I spent and I returned several times till we were moved to the front. Her name was Marie and she asked me to come and see her again, then one day I was gone. She probably wouldn't want to see me now.\"\n\nPete's scars are terrible and I pat his back. \"Looks like you almost learnt your lesson about getting too close to her firebox when she's going off, mate.\"\n\nHis laugh is hearty and despite his wounds he's a positive fellow. \"If I made it back to her she wouldn't have to look at my head anyway, I'd keep it between her legs!\"\n\nWe laugh some more and swill our drinks as the publican tells us he's closing up, and I take one more look at Chloe. \"She reminds me a lot of the daughter of the woman I'm billeting with.\"\n\n\"You sly bastard, tell me you're poking her, c'mon, spill the details!\"\n\nI shake my head. \"I'm not telling you nothing because I ain't pokin' her. But actually, her husband was a pilot. Did you know a bloke named Cornelius Atkinson?\"\n\n\"Can't say I did.\"\n\n\"Bastard got himself killed on his first mission straight out of training. Hardly even got to the war.\"\n\n\"Half his fucking luck, that's how most left the war, right out of training before it could properly fuck with them.\" Pete downs the dregs of his beer as the publican again motions for us to finish and leave. In no time we're on the street and my head is swimming. Evidently, so is Pete's as he sways and leans against me. \"I'm gonna get the book thrown at me when I arrive at my billet. The Bible with a lecture about thou shall not drink or some shit.\"\n\n\"Come back to mine, Carmel won't mind.\"\n\n\"Carmel? She the widowed daughter?\"\n\n\"Nah, Carmel's my host and Susannah's the daughter. Maybe Susannah will drop by in the morning and I'll introduce ya.\"\n\n\"She'll take one look at me and say, yes, he is the man of my dreams, even if half his face is melted off. Anyway, what's wrong with her?\"\n\n\"Nothin's wrong with her.\"\n\n\"Why ain't you poking her then?\"\n\nI smile, propping him up when he almost falls onto the road. \"I'm heading back home so don't want to get too involved.\"\n\nHe shakes his head which looks like it might fall off. Eventually we're on a tram and Pete falls asleep, snoring, his head on my shoulder. I can hardly keep my eyes open either and people glance our way, respectable people I suppose, all of them looking tired from a long day's work. Arriving in Richmond, I manage to haul Pete off and we eventually find ourselves at Carmel's front door.\n\n\"Oh, gawd, you've come home drunk and you've brought yer mate,\" she says, but with a smile. \"Men are all the same.\"\n\n\"This is Pete,\" I slur, knocking into my companion who's almost asleep on his feet. \"Do you mind if he stays the night?\"\n\n\"If you can get him up the stairs, sure, but I don't want any trouble or mess.\"\n\n\"You're a true goddess my lovely Carmel.\"\n\n\"And you're drunk, my friend.\"\n\nIt's a struggle, but eventually Pete is in the bed in the attic, snoring his head off. Despite the grog I can't sleep and wander down stairs, knocking on Carmel's door.\n\n\"For Pete's sake, go away,\" she hisses, not opening her door.\n\n\"Nah, Pete's sound asleep, a Jerry shell could go off next to his head and he'd not wake.\"\n\nI think she's laughing, or at least I hope so, but she's adamant. \"Go back upstairs, Alfie. We'll talk tomorrow when you're sober.\"\n\n\"Oh...sorry, Carmel. I wanted you to know the doctor discharged me.\"\n\nTurning, I make my way back to the stairs, swaying and bracing against the wall. The door opens behind me and Carmel whispers, \"Discharged? Do you mean from the Army?\"\n\n\"The doctor said I could go home.\" I haven't turned around, still bracing against the wall, the world spinning around my feet.\n\n\"And you're going?\"\n\n\"Not tonight.\"\n\n\"Tomorrow?\"\n\n\"Not tomorrow. Thursday.\"\n\nA floor board creaks, Carmel's footsteps behind me, and she slips her arms around my waist, lowering me to the stairs, where I sit. Her voice is quiet. \"I knew this day would come, but now I don't know what to say.\"\n\nWhen I look into Carmel's eyes, I know my smile is drunken and I realise there's no chance at spending the night in her arms. \"Sorry I'm drunk.\"\n\nShe sits at my side on the stair. \"I'm sorry you're leaving.\"\n\n\"Not tomorrow.\"\n\n\"And you have to go.\" After a long pause, she tells me, \"Get a good night's sleep and I'll fix you and your friend breakfast in the morning.\"\n\n\"That'll be fantastic, Carmel. My Melbourne angel.\"\n\nShe gives me a squeeze, kisses my cheek, then stands. \"G'night, Alfie.\"\n\nEventually I stagger up the stairs and crash on the bed, listening to Pete snore away across the room.\n\n~0~\n\nPete's groan wakes me and for a moment I lay there marvelling how I slept through for the first time in I don't know how long. It's the beers, but I'm not sure if the price is worth it with the thumping drum in my head trying to split me at the temples, my guts feeling like they want out, and my full bladder about to burst.\n\n\"Oi, Alfie me old mate,\" Pete groans again, \"Where's the dunny can?\"\n\n\"Chamber pot over there in the corner.\"\n\n\"Yep, I filled it with vomit last night.\"\n\n\"Did ya? Back garden then, I'll join ya.\"\n\n\"I fuckin' need it more.\"\n\n\"Race ya.\"\n\nWe stumble down two flights of stairs, pushing and shoving, racing down the hall and through the back door, Pete pushing me off the path at the last moment and claiming the outhouse. I'm laughing, then have to sit by the roses so I don't fall and don't vomit. Awful noises are coming from Pete on the dunny and I look about trying to think about anything else, feeling the sun warm on my face, too bright for my sore eyes and splitting head and painful bladder.\n\n\"Might need your gas mask in there, cobber,\" Pete says when he steps out, face as straight as a ruler. \"Otherwise what I've done might finish your lungs off, old boy.\"\n\nGingerly, I step into the toilet where the stench hits me. \"Phew, we could've used you on the front, fill you up with grog and waited for the wind to blow towards the Huns before letting you rip.\"\n\nPete's laughing. Eventually we wander back up the path where Pete and I sit at the wrought iron table in the courtyard at the back door. \"Bloody lovely, you hit the jackpot with your billet here.\"\n\n\"Goes alright.\"\n\n\"Fucking goes alright he says. Look around, it's bloody paradise! My people harangue me about this and that and ask us all to join in with their prayers and go to church on Sunday. Almost wished I'd burnt up completely back in France. Think I'll have to move in here after you've left.\"\n\nI'm laughing, my head splitting, then we sit in silence, both with our eyes shut to the bright sunlight.\n\n\"Didn't you hear me call you to breakfast?\"\n\nAlmost losing my balance when I turn, I look up at Carmel standing at the back door. She's grinning, holding a plate of freshly baked English muffins with a jar of jam and a small jug of whipped cream, bringing it to us, setting them on the table.\n\nPete jumps to his feet. \"Good morning Mrs...\"\n\n\"Carmel. And you're Pete. Alfie introduced us last night.\"\n\n\"Sorry,\" Pete says with a sheepish grin, \"I don't remember much.\"\n\n\"You're not the first boy to come home drunk, I once had a husband and still have two cheeky sons.\"\n\nPete thanks Carmel over and over for letting him stay, but she brushes it off, then gives me a little smile. \"I'll make you boys some tea, I'm sure you need a pot or two.\"\n\nWe're still eating when Susannah arrives with Mabel, who barks at Pete. \"Oh, you have a friend over.\"\n\n\"We're the walking wounded, Miss,\" Pete says, standing and taking Susannah's hand. \"Pleasure to make your acquaintance, I'm Pete and you must be the lovely...\"\n\nAfter a pause, she says, \"Susannah.\"\n\n\"That's right,\" Pete replies. \"And to think I almost called you Chloe.\"\n\nSusannah is clearly confused and I try hard to contain my laugh. Holding Pete's outstretched hand, she asks, \"Who's Chloe?\"\n\nI'm still trying not to laugh but not hiding it too well, patting Mabel to settle her. \"A French sheila we met at the pub last night.\"\n\nShe gives me a look of confusion, probably trying to read my own expression. \"But we women can't drink at public bars...not respectable ones...no, don't tell me...\"\n\n\"Pretty as a picture, this Chloe was,\" Pete says with a wink. \"Our friend Alfie here said she looked very much like you, and my dear Susannah, he's right, but you're a damn sight prettier.\"\n\n\"I don't understand, was she a...\"\n\n\"Not a whore, if that's what you're thinking, but like I said, pretty as a picture.\"\n\nLaughing without holding back, but seeing the confusion and possible anguish on Susannah's face, I say, \"Chloe is a picture, a painting. On the wall of the pub we drank at.\"\n\n\"You men and your...pubs!\" Susannah's visibly annoyed, making Pete and I laugh some more. But Pete's all charm and soon Susannah's joining us at the table.\n\nCarmel barely pops her head out the door, telling us, \"Alfie's leaving us tomorrow and I have to buy something to roast for his farewell dinner. You will stay with us, won't you, dear?\"\n\nSusannah turns to me, her face betraying shock. \"You're leaving? So soon?\"\n\n\"Heading back home. Bought a ticket and all.\"\n\n\"No...you mustn't leave yet...\" She whispers it, her hand at her mouth.\n\nPete gives me a wink across the table and Carmel calls out again, \"So you're staying for Alfie's farewell?\"\n\n\"Yes, of course.\"\n\n\"Excellent, you too, Peter, I insist.\"\n\n\"I wouldn't dream of saying no the company of two beautiful women,\" Pete replies with a smile.\n\nCarmel flashes me a raised eyebrow look and funny grin I can't decipher before disappearing into the house, and for a moment I want to chase her. I can't explain it; here is Susannah, beautiful and young, and there goes her Mum, older, wrinklier, with grey hair and saggier bosoms, yet we've shared the comforts of one another's bodies on many occasions now and I know in my heart she's the first woman I've genuinely connected with.\n\nSometimes I wonder if my growing feelings of attachment to Carmel are love.\n\nSusannah and Pete are conversing and I realise my mind has wandered, my manhood beginning to rise. Not something I want right now, so I listen to Pete telling Susannah he was a pilot, explaining his injury, where she's visibly upset by his story. Then she's asking if he knew her husband and he lets her down gently. Susannah asks more details about the war and what it's like to fly, presumably for her book.\n\nI've heard all Pete's stories before, but they've done the trick and my erection's disappeared, so I excuse myself and find Carmel at the kitchen bench, scribbling out a shopping list. Placing my hands on her waist when she's standing at the bench, I ask, \"Would you like me to come to the shops and help you?\"\n\nShe brushes my hands away, avoiding my lips when I try to kiss her cheek, whispering, \"No, Alfie, not now. And no, I won't need your help, the shops are only a mile down the road so it won't take me too long. Stay and entertain Susannah and your friend Pete.\"\n\nWhen I laugh she frowns. I can see Pete and Susannah out the window but it's unlikely they can see in on account of the bright day outside and dimness inside. \"But look at those two, hitting it off. Might want to give them some room.\"\n\nCarmel shakes her head. \"Poor fellow, your friend Peter. His head's terribly scarred and I'm not sure if Susannah is...anyway, I rather hoped she was interested in someone else.\"\n\nI shake my head. \"Give them a chance and we'll see.\"\n\nLater Pete and Susannah leave the heat of the day for the front lounge room and when Carmel leaves for the shop I make my way upstairs to pack my few belongings, ready for the early trip to the station at five tomorrow morning. I'm heading back down when I run into Susannah on the landing outside Carmel's room.\n\nShe meets my eyes, saying, \"Your friend Pete has fallen asleep in the front room. Exhausted after talking about himself all morning I imagine.\"\n\nI smile at her quip. \"You appeared to enjoy his company.\"\n\n\"He's certainly experienced some interesting adventures. Poor man, burning up in his aeroplane like he did.\"\n\n\"He wouldn't have much to talk about if he hadn't.\"\n\n\"Don't be unfair.\"\n\n\"I was being sarcastic.\" I shake my head, the joke going over hers. \"Anyway, he can help you with your book.\"\n\n\"Yes, I believe he can.\" She looks at me for a moment, our eyes catching. \"I can't believe you're leaving so soon.\"\n\n\"I have to go. I have family and friends back home who're waiting for me.\"\n\nShe nods, stands there for a moment, turns and opens the door at the far end of the landing, opposite her mother's door. \"This was my room.\"\n\nCurious, I follow. It's musty and dusty inside and I try hard not to cough. She opens the curtain and window, light streaming in, illuminating a dolls house, books on shelves, a dresser with mirror, a wardrobe and neatly made bed. \"It looks like a girl's room.\"\n\nShe snorts, quietly, picking up a rag doll from the pillow. \"This is Esther. Looks like she's waited faithfully for six years for me to return and here I am.\"\n\n\"You left when you were eighteen, right?\"\n\n\"Yes...do you think you will return?\"\n\n\"Pardon?\"\n\nShe places Esther on the dusty bed-side table. \"If you'd consider returning to Melbourne after seeing your family, I'd very much...well, I'd wait like Esther here has waited for me.\"\n\nMy heart dips a little, confused because she's young and beautiful and I'd be a fool not to accept her offer. Never look a gift horse in the mouth is what my mother always said, but I'm sleeping with Susannah's mother who I know I've developed feelings for, even if she's much older. Our loving is fun, but I also know I'm going home, and even if I miss Carmel and Susannah I think it unlikely I'll come back. Then again, Susannah is beautiful and tempting.\n\n\"Would you move to the country with me?\"\n\nShe approaches, shakes her head and continues walking past, closing the door quietly, turning the key in the lock, returning with a smile, then shoves me onto the bed.\n\nI'm falling back, shocked, landing on the soft covers. \"What are you...?\"\n\n\"Shhh,\" she tells me, finger at her lips, approaching me and fingering the buttons on my trousers. \"Mum's out for at least an hour and Pete's asleep.\"\n\n\"Susannah, what are you doing?\"\n\n\"I don't wish to live in the country, I belong in Melbourne. So I'm giving you a taste of things to come if you come back to me. Think of this as an incentive.\" She pulls my trousers down and I confess I'm not at all resisting. After all, I'm a man, young and dumb and my penis is already excited. Susannah looks at me there, a wild look in her eyes, reaching out, gently stroking me with the lightest touch. Pleasure shoots through me and I'm stiffer than a board. \"Delicious...\"\n\n\"This is not a good idea.\"\n\nShe smiles and pulls her dress off, dumping it on a chair in the corner, then her undergarments, pins from her hair, rich chestnut brown locks cascading around her pale shoulders and beautiful breasts, and she's standing beside the bed, naked, her sex completely hairless. Her smile is cheeky. \"You can't hide the fact your eyes and penis want me.\"\n\n\"What if your mother finds out?\"\n\nSusannah's laugh is rich and mocking. \"I'm twenty-four, it's none of Mum's business what I get up to.\"\n\n\"And what do you think you're getting up to?\"\n\n\"The same thing you're getting up to,\" she giggles, stroking my hardness, then straddling me. \"I like you, you're good company, you choose nice wine, and you look at me with desire, I can tell.\"\n\nWhat's not to desire, because Susannah is beautiful, curvy in the most delicious manner, big round breasts like her mother, but younger, firmer, hard nipples sticking out, her eyes twinkling with cheek, her smile inviting, and for a moment I think she may be the most beautiful woman I've ever laid eyes on.\n\nIndeed, I suspect she is.\n\nI thought Mary to be the most beautiful woman I'd ever seen with her golden hair and sparkling eyes of blue, and in my mind's eye I see Will in the moments before he died, telling me to tell Mary he loves her and to ensure she and their son Jack are provided for.",
        "\"I can't stay, Susannah. I'm going back to Queensland as soon as I'm discharged. I have obligations.\" Despite my words to the contrary, I reach out to her without thinking, resting my hand on her hip.\n\nShe smiles, caressing my manhood, shuffling forward on her knees either side of me, till my tip is almost touching her sex. \"I encourage you to return here and I promise you my world.\"\n\nOur eyes are locked, Susannah's hand gently stroking me, mine caressing her thighs and I'm in no position to argue. \"You don't take no for an answer, do you.\"\n\n\"I didn't with my husband when I met him, rest his soul.\" She shifts forward, the end of my todger contacting her soft skin folds, slippery with wetness. \"And now I'm not going to take no from you.\"\n\nWith no more thought I'm pulling her forward with the slightest touch on her waist, she's moving too, slipping around me, my length sliding inside her, lowering her onto me, our groins coming to rest against one another, our eyes never breaking contact.\n\nThere's no going back so I begin to thrust, gently at first, and she pushes down, matching my rhythm, smiling all the while. My hand is up her flank, on her mighty breast, squeezing, groping, feeling her nipple's hardness, and she's leaning into me now, gasping, our lips crashing together.\n\nSlow and steady becomes fast and steady, our bodily gyrations harmonious, Susannah's hair luxuriant and falling forward when she leans onto me, my hand among her locks at the back of her head, our lips so close, her mouth opening, squeaking gasps escaping between her lips, her eyes closed now, breasts against my chest, and always my fat manhood pushing into her juicy vagina.\n\nWith pleasure rising, my mind is wandering; thoughts of moving down here to Melbourne after I've travelled home, of settling with Susannah, but of course I think of Carmel and how on some level I'm betraying her trust by making love to her daughter. No, she's the one who encouraged me to court Susannah, so here we are fucking like rabbits.\n\n\"Alfie...\" she whisper-gasps, \"My dear, Alfie, keep it there, yes, right there, oh...my...Lord...\"\n\nThe feelings come on all at once, my body, her body, our pleasure, exploding, and we're kissing hungrily through it all before she collapses on my heaving chest.\n\nThen I begin to cough, holding it in as best I can, but needing to scratch the itch in my lungs which are aroused by our exertions, where my convulsions cause me to move within her, still hard, touching her in all the right places, and she whispers, \"Are you all right...oh...gawd you still feel amazing...I'm so sorry...\"\n\nI'm coughing more and Susannah rides another wave of pleasure, but soon she's climbing off, so I sit hunched over, my shaft slick with our sex juices, dripping on the blankets. Without a word she cleans up and dresses, as do I, my coughing fit subsiding.\n\nCatching her eye, I say, \"Unfortunately I'm damaged.\"\n\n\"Only your lungs, not your face like your friend Peter.\"\n\n\"You should get to know him.\"\n\n\"He's an...interesting man. Charming and crass at the same time.\"\n\n\"He'll help you with your book.\"\n\n\"But you're coming back, aren't you?\"\n\nShe's pinning her hair now, looking into the mirror over the dressing table, looking into the eyes of my reflection as I stand behind her. \"You've definitely given me something to think about.\"\n\nHer reflected eyes are furious and when she turns to face me a lock of unpinned hair whips around, her voice low. \"I've shared myself with you, Alfie, so stop being so damn cagey. You're coming back to me, you have to.\"\n\n\"I've told you I have to go home a number of times. I need to see Mary for my cobber Will's sake, and I don't know what my plans are afterwards.\"\n\nShe takes her loose strand of hair, resetting it and composing herself at the same time. \"I implore you to make plans to return, for my sake.\"\n\nWalking to the door without looking at me further, she unlocks and opens it and leaves without another word.\n\nDownstairs Pete's still sleeping on the double ended chaise, while Susannah tends to Mabel who's sleeping in the sunshine. When Carmel arrives home I feel a pang of guilt when she cheerily greets me with a smile.\n\nI really must leave here, I think.\n\nThe afternoon goes by, Susannah helping Carmel with the roast leg of mutton. Pete and I hang about at the table in the courtyard, discussing nothing in particular, then when the neighbour kids start up the cricket in the back lane, we join them.\n\n\"What happened to your face, Mister,\" Harry asks Pete.\n\nPete tells his story to a new and enthralled audience. They're excited to meet a real pilot who is an officer too, and Billy tells Pete, matter of fact, \"I'm pissed off the stoush is over, I never got my chance to get at the Germans.\"\n\nWarren spits a gob of slag against the fence, saying, \"Hopefully there'll be another war and we'll get our chance.\"\n\nAll the kids are raring to go into battle to avenge their fathers and brothers and cobbers, even Grace, who tells us, \"I wish I was a boy so I could fight the bastards.\"\n\nPete laughs in his jovial manner, shaking his head all the same. \"I'm afraid this was the war to end all wars, my friends. No one will fight like we did for a very long time.\"\n\nThe kids protest and I add, \"For your sakes I hope he's right and there's not another war in your lifetimes.\"\n\nWe play cricket for an hour and at the end all the kids farewell me, wishing me good luck. Pete and I are back in the yard again, laughing at all the kid's pluckiness in regards to the war.\n\n\"They remind me of me,\" Pete says.\n\n\"I've thought the same on many occasions. Like me and me cobber's getting all excited to join, thinking it was a big adventure.\"\n\nPete lays his hand on my shoulder. \"Life is a big adventure, old mate. Now tell me, speaking of adventure, I've been meaning to ask you, is there anything between you and Susannah? She's quite literally the most stunning woman.\"\n\n\"I'm certain she's keen on me,\" I tell him, honestly.\n\n\"And you're not keen? Are you mad or homosexual?\"\n\nI'm laughing at his suggestion. \"None of those but I know I'd be a fool not to stay but I have to get back home. She's a city girl and doesn't appear too interested in leaving for a little country town in the middle of nowhere and I don't think the big smoke's for me.\"\n\n\"Even if she's keen on you? The question remains.\"\n\nI'm shaking my head. \"I suspect she's lonely and looking for a husband, but not lonely enough to leave her comfortable life here for one in the country.\"\n\n\"And you aren't coming back for her? Lord have mercy, are you soft in the head? A few roos loose in your top paddock?\"\n\nPete's grinning when he says these things, and I grin too. \"Yeah, the Jerry's knocked any sense out of me the Army hadn't already got to.\"\n\nPete laughs. \"A beautiful sheila wants to nab herself a husband and you're going to walk away from her. Do you think you could do any better?\"\n\n\"Probably not,\" I say, laughing, thinking of Carmel and Susannah, knowing I've done well enough during my time in Melbourne. But it's time to split. \"If you're keen, you should get to know her better.\"\n\nPete makes a clicking sound from the side of his mouth. \"I intend to, old boy. I can see myself settling in Melbourne if a girl will put up with this scarred head of mine.\"\n\n\"Good luck, cobber, go for it.\"\n\nHis laughter is hearty and he clamps his hand on my shoulder. \"You're a good bloke, Alfie. A damn fine fellow indeed.\"\n\nThe sun is behind the house, casting a growing shadow over the yard, and mosquitos begin to bite so we move inside. The house is full of the smells of roast meat and vegetables, Carmel in the kitchen turning and smiling. \"Right on time, I'm about to pull dinner from the oven.\"\n\nPete and I set the table and Susannah helps her mother serve dinner.\n\n\"Before we eat I want to raise a glass to Alfie,\" Carmel says, raising her glass of wine. \"I couldn't have asked for a better lodger.\"\n\n\"Here, here,\" Pete adds, and Susannah meets my eyes and smiles, her glass raised too.\n\nDinner is delicious, roast mutton with gravy made from pan drippings, baked potato, pumpkin and carrots from the garden, and afterwards Carmel produces a cake for dessert.\n\nBefore it gets too late in the evening Pete agrees to escort Susannah home. With a strong grip, we shake hands and he winks when he says, \"Good luck, cobber. Tell all those Queensland girls I'm on my way as soon as I can be. Unless I find a reason to stay here.\"\n\nWe laugh because he glanced at Susannah, but she simply smiles and looks to me. She kisses my cheek, whispering in my ear, \"Good luck, Alfie. Please do think about what we've discussed. I'll wait, I promise.\"\n\n\"Thank you, Susannah, it has been a true pleasure.\" I say nothing more and she waits expectantly, then nods, turns and leaves.\n\nCarmel closes the door, locking it, turning to me, and we're alone again. I guess it's instinct when I hold my hands out to her and she takes them. Looking me in the eye, she says, \"You're not coming back for her, are you?\"\n\nShaking my head, I tell her, \"I don't think so.\"\n\n\"You know so,\" Carmel sighs and we're still standing an arm's length apart. \"I don't know why, but part of me wishes you were and the other part is glad you're not. What I do know without a doubt is how much I'm going to miss you, Alfie.\"\n\n\"I already miss you and I haven't even left yet.\"\n\n\"You have the opportunity to come back but refuse to take it.\"\n\n\"I'd return for you.\"\n\nShe smiles and shakes her head. \"No you won't.\"\n\n\"I guess I'll have to miss you then.\"\n\nShe nods and I draw her in but she resists, shaking her head. \"I think it's best if you sleep upstairs and get a good rest tonight. You'll be leaving in the early hours.\"\n\n\"Five o'clock to make it to the station for the half-past-six train.\"\n\nStill holding hands, we look at one another, a tear making its way down Carmel's cheek. She purses her lips, then whispers, \"Part of me is tempted to help you miss your train. But I'll lend you my alarm clock.\"\n\nNodding my agreement, I catch her tear with my finger, and she smiles again.\n\n~0~\n\nThe dug out is only feet away, but my lungs burn and my body is forcibly trying to expel my insides, the rancid yellow green mist swirling about, I can't move. More incoming shells, whistling overhead, these ones high explosives, landing close, SHHHCRACK, SHHHCRACK, SHHHCRACK, shrapnel and dirt falling about. A machine gun opens up with a burst somewhere nearby, tat-tat-tat-tat-tat-tat-tat-tat-tat, a Vickers, and my instinct is to ensure I still have my Lewis Gun lest the enemy pour over the top into our trench any second now. The absurd thing is, I can't move, coughing and spluttering in the mud.\n\nBut I can see Will, he's at my side, arm reaching out but no longer gripping me, looking at me with vacant eyes and frothy blood around his mouth and he no longer moves a muscle.\n\nSomeone's grabbing me, pulling, screaming, \"Get up, Corporal! Get to cover!\"\n\nArchie, bless him. He's rough as guts but pulls me into the dugout. It's full of bodies, many coughing, retching, some dying. Shells are falling on the trench now, Earth shattering explosions beyond description, dirt and shrapnel flying about, and maybe the dugout will take a direct hit to finish us all.\n\nAnd in the mayhem I look out the door into the haze, I can Will is there, standing among a company of dead, ready to cross no man's land to strike fear in the enemy's hearts like we did every single night prior to this moment.\n\nHe turns and sees me, calling out, \"You make it home, Alfie, tell my Mary I love her when you get back, won't you, and make sure she and Jack are provided for.\"\n\nHe disappears but I know he's there, standing among the swirling gas cloud, awaiting my answer.\n\n\"Yes, Will, I promise, I will not to rest until I see Mary and Jack and they will know for the rest of their lives how much you love them...\"\n\nThe gas makes me cough and I'm awake, keeping my promise to Will, never, ever resting.\n\n\"Alfie, my dear, oh, my poor Alfie.\" Carmel has come and rubs my back.\n\n\"I'm sorry for waking you,\" I say between coughs.\n\n\"No, no, like I've told you, it's fine, you poor fellow.\"\n\nMy lungs hurt, but they always hurt. After my coughing settles, I ask, \"Do you know what the time is?\"\n\n\"No,\" she whispers, still rubbing my back, next to me in the darkness.\n\nThe moonlight scarcely makes it through the window, however I pick the alarm clock off the bed-side table, holding it to my face, listening to it tick, and can barely make out the hands. Ten-past-three.\n\n\"C'mon,\" Carmel whispers, taking my hand, \"You'll be more comfortable with me.\"\n\nShe can't see it but I'm smiling in the darkness, letting her lead me back down to her room. She lights the kerosene lamp on the bedside table and I place the clock next to it. \"Less than two hours till I leave.\"\n\n\"Shhh, plenty of time,\" she whispers, leaning her face to mine, our lips gently kissing. Our tongues begin to play, lightly, little caresses, becoming rougher and increasingly urgent. My hands are urgent too, lifting her nightie over her head, and she paws at my night shirt, rubbing her hand down my naked chest. With her hand resting over my beating heart, she sighs, and I place my hand over hers.\n\n\"I think I love you,\" I whisper.\n\n\"Shhh,\" she tells me, shaking her head but smiling in the light of the lamp, \"It's lust you feel and we'll make good use of it too.\" We kiss again, my hand in hers, both of us naked, my lips on her shoulder, down her ample breasts, suckling her nipples, down her stomach.\n\nA thought comes to mind. \"Have you ever allowed a man to kiss you down here?\"\n\nWith a giggle, she says, \"What, on my belly?\"\n\n\"Further down.\"\n\n\"No, I don't think it's something...\"\n\nI move my lips closer, recalling Pete's story of a girl in Paris. Not even the girls of Paris or London taught me this trick, those girls being paid for their services, and we were mostly na\u00efve so generally only attended to our own immediate and desperate needs. But this is different. Carmel's sex scent is potent and she hasn't resisted.\n\n\"It would be like playing with yourself,\" I whisper. \"Except I'll give you pleasure with my tongue.\"\n\n\"Do you think...it's safe?\"\n\n\"Perfectly.\"\n\n\"If you...yes, please.\"\n\nWhen I touch my mouth to her, she tastes like sex. First a lick along her folds, then a kiss, she gasps, shifting, reclining against her pillows, another slight gasp from her lips, and when I flatten my tongue, she moans. \"Yes...lovely...\"\n\nI'm new at this but endeavour to concentrate on Carmel's pleasure, listening to her breathe, her gasps and moans, her movements, my hands grabbing her thighs, her wetness on my chin, and she lifts her bottom off the bed, mashing her cranny into my face, taking the sides of my head in her hands, and she cries out, not too loud but more than a whimper, and then she's shuddering, and I'm lapping her juices.\n\nWhen Carmel relaxes I lift my head, gazing up her naked body in the light of the lamp, marvelling at her beautiful breasts, nipples erect, her lips apart, eyes closed and a smile on her lips.\n\nI'm harder than hard and move up her, and she welcomes me, the tip of my penis finding her sex all wet and wonderful, our eyes on one another in the lamp light at the very moment I enter her, sliding inside her, touching her with the greatest intimacy, making her gasp. With her bodily juices upon my lips we kiss with excessive vigour, tongues tangling, our bodies moving in time.\n\n\"Slowly,\" I whisper, \"I want to last as long as I can with you.\"\n\nCarmel's smiling, looking into my eyes and she whispers, \"You've come a long way, my lovely.\"\n\nOur kisses are gentle and rhythm slowing, her arms around me, mine propping me up on the bed with hands in her hair under her head. After a drawn out kiss, she whispers, \"You're a real sweet heart, Alfie.\"\n\n\"You're beautiful, Carmel. I'll never forget you. Come with me...\"\n\n\"Shhh,\" she whispers again. Our lovemaking slows till we're hardly moving, slight movements but pushing hard into one another, the feeling intense. \"Oh...you're so wonderful...\"\n\n\"Beautiful...\"\n\n\"Shhh...\"\n\n\"No...because it's true...\"\n\nShe giggles, her breasts heaving against my chest, soft and squishy. Slowly but steadily our rhythm increases again, the feelings building, my body tingling, our kisses vigorous, tongues all over each other, then Carmel moans, and all the wonderful sensations explode through us at the same time, my fat hard penis unloading my seed into Carmel, who's moaning and whispering my name.\n\nThe alarm clock rings, startling us both as we come down from our great heights of pleasure. Damn, five in the morning. Carmel sighs and I kiss her over and over, holding her tight and she holds me tight for another five minutes before releasing me.\n\n\"You better get going,\" she whispers, and I nod.\n\n\"I should.\"\n\n\"Yes, you should.\"\n\nWe kiss again before I pull myself from her body and arms. \"Sorry.\"\n\n\"Don't be. Take my lamp.\"\n\nI do, heading upstairs with my night clothes in my other hand, stuffing them into my Army kit-bag, throwing on the fresh civilian shirt, jacket and trousers I intend to wear home, take one more look around the room to ensure I haven't forgotten anything, then rush down the stairs back to Carmel's room.\n\nShe's no longer in bed and I assume she's down stairs, so I head down to the hall where I find Carmel by the front door, wearing her nightie again.\n\n\"I thought I was prepared for this moment,\" she whispers, wiping her hand across her cheek.\n\n\"I'm going to miss you.\"\n\nShe nods, smiling. \"If I were a younger woman, I'd definitely go with you.\"\n\n\"Come with me, we'll get a nice place near home...\"\n\n\"I'm not the younger woman I wish I was, so no. Sorry, Alfie, but you must understand. But please consider coming back because I think Susannah would appreciate it.\"\n\n\"And you...\"\n\nCarmel smiles some more, reaching out and taking my hands. \"Come on, you'll miss your train.\"\n\n\"I'll miss you.\"\n\n\"Always.\"\n\nWe embrace and share a lingering kiss goodbye and I go, looking back as I reach the front gate, waving at Carmel who waves from her front door. She smiles, blows a kiss, I catch it, turn and walk down the street.\n\n~0~\n\nAuthor's Note:\n\nI've spent a great deal of time self-editing my story, however if there were any mistakes, I do apologise. No matter how careful I read and re-read, some errors inevitably make it past me. However, early on in the story when Alfred and his fellow soldiers arrive in Melbourne, you may have noticed I've spelt Lieutenant correctly, but when soldiers are speaking I've written the word as Leftenant - this follows British and Australian Army customs of pronouncing the rank as Leftenant.\n\nThe term Digger is Australian and New Zealand military slang meaning soldier, and along with Dig, the word was sometimes used in place of cobber or mate. The origin of digger is somewhat contested but it was used widely in the First World War, likely because infantrymen found themselves digging defensive trenches on a regular basis. To this day Australian soldiers are still occasionally referred to as Diggers.\n\n416,809 Australians enlisted in the First World War, which was a significant amount for a country with a population of 4.9 million. Conscription was never introduced and therefore all were volunteers. Enlistment age for the army was 21, however one could join at 18 with permission of a parent. Of course many young men lied about their age and were 'boy soldiers'.\n\nThe Third Battle of Ypres ('Wipers', as the Brits and Aussies called it), known commonly as the Battle of Passchendaele, occurred from 31st July to 10th November 1917. Casualty reports on both sides are varied, but appear to be in the vicinity of a quarter of a million men each.",
        "The Germans used gas widely throughout the battle, where Alfred in this tale was wounded. During the war up to 12% of casualties among Australian soldiers resulted from gas attacks. The anti-war poem Dulce et Decorum est by British soldier Wilfed Owen partly inspired my story Armistice Day, describing a bombardment of gas-shells and the \"...ecstasy of fumbling...\" by soldiers to fit helmets and I presume respirators, where poem's narrator sees a man caught in the green gas cloud and feels helpless as the man is \"...guttering, choking, drowning.\"\n\nWounded survivors were sent to convalescent hospitals in Britain, often set up in manor houses, then either returned to operational units or sent back to Australia for further treatment and discharge from the military. I am unsure if soldiers were billeted with civilians while being treated, so I've taken a fair amount of artistic licence here and not based it on historical accounts. However, I have read accounts of soldiers in The First World War billeting with French families when away from the front, often entire units being put up in barns, and I've also read accounts of individual soldiers billeting with families in Australia during the Second World War. Thus Alfred's stay with Carmel is not beyond possibility.\n\nAs for Chlo\u00e9, the oil painting hanging on the wall of Melbourne's Young and Jackson Hotel, she's real. Painted by French artist Jules Joseph Lefebvre, she has graced the pub since 1908 where she has enchanted several generations of servicemen who have written to her from the battlefields of WW1, WW2, Korea and Vietnam.\n\nAlfred has a one-track mind, getting home to Queensland to find his mate Will's wife and child, and thus, his story will continue in a stand-alone sequel I hope to publish soon, titled Prussian Blue."
    ],
    "authorname": "Thefireflies",
    "tags": [
        "older woman",
        "sex",
        "big breasts",
        "war",
        "ww1",
        "historical fiction",
        "drama",
        "australia",
        "younger man"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/armistice-day"
}