{
    "title": "A Kinky Engineers Romance",
    "pages": [
        "Week 0\n\n[Suzie]\n\nThe same as all my engineering classes, the room was filled with men. And, somehow, they always forgot about me when they talked to each other. I was the only girl in the room, but come on, I wasn't invisible. They just thought of me as another one of the guys, I guessed.\n\nI wasn't sure how that had happened. I knew I was attractive to men, I certainly dated enough of them, just never any of the guys in college. At 5'7\" tall, with pale skin and freckles and blazing red hair I didn't exactly blend in. Shit, I had nice D-cup boobs, and a cute bubble butt.\n\nYet still, these enginerds talked as if I wasn't there.\n\n\"Ugh,\" Brad whined, \"why can't I find a woman who likes suck cock. This girl this weekend acted like it was a real chore.\"\n\nI rolled my eyes.\n\n\"What's that for?\" Brad asked me pointedly, somehow piercing that invisible wall I had come to count on while listening to their man gossip.\n\n\"Brad, turn a girl on, and she'll do anything. If the girl your with doesn't want to suck your cock, it's because you haven't turned her on.\" I told him, exasperated by listening to his constant complaining.\n\nBrad flexed his bicep and kissed it, giving me the side eye, \"Come on, Suzie, I'm hot. Women practically follow me around, panting like bitches in heat. Of course, I turn them on.\"\n\nIt was no use. Brad had his head so far up his own ass he'd never understand that arousal for women wasn't all about appearance. I just shook my head at him.\n\nBrad ignored me and turned back to his monologue directed at his fanboys who also admired his body. Sure, Brad was fucking hot, but he had no personality. I bet he was all pump and dump in the bedroom, no creativity, no foreplay, and apparently, no decent blow jobs.\n\n\"Suzie?\" A tentative voice called my attention.\n\n\"Yeah, Nick?\" I answered.\n\n\"Is that true, what you said? That if you just turn a woman on, she'll do anything?\"\n\n\"Absofuckinglutely.\" I replied, \"well, at least for me anyway.\" My conscience made me add the qualifier. I was sure there were women in the world who could control themselves when aroused, but I'd never been one of them.\n\nNick considered me, thoughtfully. \"What turns you on, Suzie?\"\n\nWell, that question, for one, got a little heat going in my pussy. Nick certainly wasn't hot. He'd never get women by simply walking around in their vicinity like Brad did. He was a bit chubby, had pasty white skin, mousy brown hair, unremarkable brown eyes, and an unfortunate height of just 5'5\", a bit shorter than me.\n\nStill, when he looked at me with that intense, intelligent gaze and asked what turned me on in deadly earnest, it was hot. Did I admit that? Hell, no. I had an inkling that Nick could be a lot of fun, and I wanted to see just how determined he was.\n\n\"Well, Nick... If I told you, that would be cheating. Think of it like a science experiment. Do your research, make a hypothesis, and then run some tests.\"\n\n\"Hmm... And you'd be my test subject?\" Nick asked, thoughtfully.\n\nI was about to reply when Professor Chaban walked in. All of us went quiet. While the boys didn't hesitate to talk about their sex lives in front of me, they had more respect for their teacher. Figures.\n\nThere was no room in my brain to think about Nick once class started. The professor was this stern Russian guy who was in love with math and turned everything into a finite difference analysis problem.\n\nI was smart, I loved math, excelled in it, but even I struggled to follow this mad professor's thoughts as he instructed. At least his thick Russian accent made it slightly entertaining.\n\nIt would be another long night in the computer lab working on this assignment, I sensed. It had become a regular thing, among those of us who'd opted to take Professor Chaban's classes, to stay up until the early morning hours working on his heinous assignments.\n\nI knew I was a glutton for punishment because while the boys would work together until one of them figured out a solution, then they would all copy it - fudging a little to make it look like their own work, I stubbornly refused to finish the assignment until I understood it. Still, I was fucking smart, so I often got done as fast as them.\n\nTonight, was just not my night. I was still staring at the numbers on my screen at 2 am, willing them to make sense when I heard the group of boys whooping and hollering as they left.\n\n\"Suzie?\"\n\nI screamed like a little girl.\n\n\"Sorry, I didn't mean to startle you.\"\n\n\"What the hell, Nick? I thought you all left?\" I squeaked.\n\n\"I wanted to finish our conversation, from before class?\" Nick replied, studying me.\n\nHeat flushed through my body again.\n\n\"Oh.\" I said, eloquently.\n\n\"I would like to do a research experiment, like you said.\" Nick spelled it out for me, my own words used against me.\n\n\"Oh.\" I replied. Somehow, I could say anything to the group of guys, but with just Nick it was personal and real.\n\n\"I was thinking of a multi-phase study. First, of course as you said, research. I will need a couple days to do that, I suppose. Then, I think I'll need to interview you, or give you a survey so I know what things you don't want to do.\n\n\"I mean, if the goal is to prove that you'll do anything once aroused, I'll need a way to measure the results. That can be done by testing if you'll do something from your list. I was thinking that, every week for the rest of this semester, I can try to turn you on using techniques that are not on your \"no\" list. Hmmm... Yes, that would make a good study, don't you think?\"\n\nI stared at Nick. \"I think that sounds very well thought out, very scientifically sound.\" Nick was becoming more attractive before my very eyes, his brown eyes became alluring, mysterious even. Did I say he was pudgy before? No, he was just solid, cuddly, that was it surely.\n\n\"How about we meet next Saturday? I think I'll have a good list to ask you about by then, to set our baseline.\" Nick prompted me.\n\n\"Ok.\" I agreed. Little did Nick know that I was already proving his hypothesis. He'd turned me on with all his talk of methodical, experimental, sex, and now I was agreeing to anything he wanted. Damn!\n\n\"I have a roommate, do you?\" Nick asked.\n\n\"No, I have a studio apartment, just off campus,\" I replied.\n\n\"I think it would be best to start there then, with privacy. Will you text me the address?\"\n\n\"Ok.\" I replied, entering Nick's number into my phone as he told me the digits.\n\nAfter Nick left, I just sat and stared at my computer screen, wondering what I'd just done. It was no use. I could not get focused on math again. I was going to get a crap grade on this assignment.\n\nAnd some little back part of my brain was thinking, but it's worth it!\n\nNick was not the type of guy I usually went for. Most of my ex-boyfriends were rebel types, bad boys who wouldn't know a responsible career choice if it grabbed them by the balls. They were fun, though. I wondered if Nick would be uninhibited enough to try some of the things that really got me going. I hoped his pudgy underwhelming appearance was hiding the mind of a sexual genius.\n\nA girl could hope.\n\n[Nick]\n\nWell, I had done it, had asked Suzie out. Kind of. I breathed slowly, calmly. What had I been thinking, planning a sexual experiment with her? I was a fucking virgin, for fucks sake!\n\nSomething had just come over me, when Suzie had said that a girl, her specifically, would do anything if aroused. I wanted to be the one to arouse her.\n\nWe'd been in this same class for a month, and while Suzie seemed to ignore all of us guys, I could never ignore her. Her brilliant mind was obvious, for starters. The way that she looked when she focused, it was oddly erotic to me.\n\nLike tonight, I should have been working on math, and instead I'd watched Suzie focus on the assignment, oblivious to the guys' conversation as it flowed around her. And, all the while, I couldn't get our conversation out of my head.\n\nSo, when our classmates had left, I'd brought it up again, made that asinine proposal. I was on the hook now. The problem was, I had absolutely no idea how to turn a woman on.\n\nSure, I'd watched plenty of porn, but even I could tell half of that was fake. I had a lot of research to do this week if I was going to capitalize on this once in a lifetime opportunity to make Suzie mine.\n\nAs soon as I got home, I went to my room and powered up my laptop.\n\n\"How to arouse a woman\" I typed into the Google search.\n\nMy screen flooded with pseudo-helpful advice. Peppered throughout were links to porn sites that would probably infest my system with malware if I so much as glanced in their direction. Cautiously, I pored through the data.\n\nResearch, at least, I could do.\n\nKnock. Knock. Knock.\n\n\"Yes?\" I called through the door of my room. I glanced at the clock, it was 7am, I'd been reading all night!\n\n\"Breakfast, Nikolai!\" My uncle called to me.\n\nI stretched and groaned. I didn't have to be anywhere until noon, but it was pointless to try to skip breakfast. My uncle was a man of his routine.\n\n\"Morning, dyadya.\" I said as I sat down at the table.\n\n\"Morning.\" He replied gruffly, eyeing me over the top of his newspaper. \"Nikolai, I concerned about you. You arrre studying too harrd. I know you vere up all night vorrrking on your computerr again.\"\n\n\"I'm fine.\" I replied.\n\n\"It is not good, for young man to be so studious. Yourr motherrr vould have vanted you to have fun, not be serious, yes?\"\n\nI thought of exactly what I'd been studying all night and held in a grin. \"I have a date this Saturday,\" I said.\n\nMy uncle's bushy eyebrows rose so fast they nearly shot off his forehead. \"Zis is good. You vill take herrr somewhere nice, yes?\"\n\n\"Of course, uncle.\" I lied. Somehow, I didn't think my uncle would quite understand what I had in mind for my first date.\n\nAt twenty-one I knew I was well beyond the age when I should have dated, but my life hadn't exactly gone normal. After my mother had died when I was thirteen, I'd moved from Russia to the USA to live my uncle. Between grief, learning a new language and a new culture, dating had never topped my priorities list.\n\nThen, I'd decided to take up engineering, and had been busy with schoolwork ever since. Ironically, the math heavy class that was beating everyone else's asses was a breeze for me. After all, Professor Chaban was my uncle, and so expert tutoring was free and always available - not to mention he'd taught me most of this stuff in high school already.\n\nIt would certainly help to have that bit of breathing room as I considered the task before me. I had eight weeks of the semester remaining to explore Suzie's sexuality. If I did well, maybe I would get longer.\n\nBut, if my research last night has shown me anything, it was that eight weeks wasn't nearly long enough to try every sexual activity, not at a rate of one meeting a week. I had to be extremely discerning and intentional.\n\nI just hoped I'd be able to get over the nerves and actually enjoy myself.\n\nWeek 1\n\n[Suzie]\n\nThe following Saturday I was useless to get anything done, waiting for Nick. My stomach was fluttering and I couldn't stop fidgeting. I paced my little apartment, which meant about ten steps and then I had to turn around. I realized, around noon, that Nick hadn't mentioned what time he'd show up.\n\nIn fact, Nick hadn't brought up our deal one time in the preceding week. Maybe he'd changed his mind? God, I hoped not.\n\nIt was 3pm when my phone buzzed.\n\nI'm here. Nick's text read.\n\nNervously, I skipped down the steps and opened the building door for him.\n\n\"Hi,\" I said.\n\n\"Hey,\" Nick replied, a serious expression on his face.\n\n\"Um, well, my apartment is on the third floor,\" I said, then turned and walked up the stairs.\n\nNick followed me into my place. He had a stack of papers that he set down on my small coffee table, the only table that there was room for in this place, so it also served as a kitchen table and a desk.\n\nI sat down on my couch, and Nick sat next to me.\n\n\"So...\" I said.\n\n\"So,\" Nick said, \"I have prepared a survey for you. I would like you to answer these questions honestly. If you are not honest, then the experiment will not work.\"\n\nI glanced at the pile of papers. It was a lot.\n\n\"Also, I have scheduled an STD test for us for next Wednesday,\" Nick continued. \"Are you on birth control?\"\n\nHe was so professional about this. I was kind of impressed despite myself. All the other guys I'd dated were so busy trying to get my tits out, that planning ahead wasn't even in the realm of possibilities. An STD test wasn't necessary, though, I tested myself after every sexual partner. Before would have been better, but we've established I have low self-control when aroused.\n\nIt was nice to be planning ahead, for once. And it would be good for Nick to be sure I wasn't going to give him anything.\n\n\"I'm on the shot,\" I told Nick, answering his birth control question.\n\n\"Ok, good.\" He said.\n\nThen, he pulled out a book from inside his jacket and opened it up. \"If you don't mind, I will read while you work.\"\n\nThis was so unlike my previous dates, it was surreal. \"Sure, go ahead,\" I told Nick as I picked up a pen and bent over the pile of papers he'd brought.\n\nI skimmed the sheets. He had been extremely thorough. Every sex act I could imagine was listed and described, I guess in case I didn't know the word. Nick needn't have worried about that. I was pretty well versed in sex and various fetishes.\n\nMy first task was to rank all of his list on a sliding scale from \"tried and hated / did not like\" to \"tried and loved / liked\" with variations of \"not tried and do / do not want to try\" in between.\n\nLet's see... kissing, vaginal intercourse, BDSM, electric play, exhibition, piercings, humping, masturbation, wax play... tried and loved.\n\nAnal, fellatio, titty fucking, voyeur, fingering, hand jobs, food play... tried and meh.\n\nCunningulus, pegging, furry, edging, fisting, rubber/latex, breath play... not tried but want to try.\n\nWatersports, age/role play, forced abstinence... not tried and do not want to try.\n\nSpanking, tickling, feet ... tried and did not like.\n\nAnd, in each category, there were a variety of sub-categories to rate. Vaginal intercourse, for example, included a list of common positions: missionary, reverse missionary, doggy style, cowgirl, reverse cowgirl, standing, sitting... There was a little diagram of each.\n\nPutting this together must have taken all week! I thought.\n\nAs I sat back and looked over my answers, I was sorely tempted to move some of the things I liked into the \"no\" category and some of the \"no's\" to yesses. I wasn't actually sure I could be aroused enough to try watersports. But that would be cheating, and I didn't do that.\n\nI bit my lip thoughtfully, then turned to the next part of the survey.\n\nThere was a diagram of a female body, and I was supposed to mark it with checks to indicate my erogenous zones and x's to indicate areas I didn't like to be touched.\n\n\"Hey,\" I said as a thought suddenly occurred to me, \"why aren't you filling these out too?\"\n\nNick looked at me over the top of his book, \"you're the experimental subject, not me.\"\n\nI huffed. \"Well, you're going to end up knowing a lot more about me than I do about you, this way.\"\n\nNick raised an eyebrow, \"yes, that's true.\"\n\nIt was like he was daring me to push the matter. I sighed. I guessed I would find out what he liked when we started actually doing things.\n\nIt took two hours to finish all the paperwork. When I was finally done, I stood and stretched, working out my muscles from being still for so long. Also, I was very horny. I was ready to get started with the action.\n\n\"So, now that's done, what are we starting with, Nick?\" I asked as I bent my arms behind my head and leaned back. I knew this made my boobs perk right up. Usually, the result would be that the guy I was dating couldn't help but grope me.\n\nNick just carefully marked his place in his book and closed it up.\n\n\"Now, I will review your answers and make a plan for next Saturday.\" He told me, coolly.\n\nI eyed him. How could he resist the boobs and yet want to run a sex experiment on me? Was he into me, or just into science? I frowned, thoughtfully.\n\nMaybe it didn't matter, I liked the idea of this experiment. I would see it through no matter what, I decided.\n\n[Nick]\n\nIt was difficult to look at Suzie's perky boobs and not give into the urge to reach out and touch one. They were right there, eminently touchable. Yet, this wasn't the right time.\n\nIf I did that, then where would it stop? And, I had a lot to learn still before I was ready to start trying things on my live subject. It had been exhausting enough just trying to organize all of human sexuality into a moderately long survey.\n\nSo, I held back.\n\nI couldn't help but be thankful I had, as I went through Suzie's survey, later. She was a lot more experienced than I had suspected.\n\nDerr' mo.\n\nThere was no way I was going to be able to disguise the fact that I had no idea what I was doing. There was no way I was backing out though. I just had to hope that she'd give me several chances. I figured I could get the hang of it after a couple tries.\n\nIn the meantime, there was research. I watched hundreds of instructional videos and tried to formulate a plan for the following Saturday. I wished I had an advisor, someone knowledgeable who I could discuss my experimental plan with. Unfortunately, my choices were my uncle - who I suspected had been quite a player as a youth although he never married, and possibly Brad - who I wouldn't trust with any secret. That guy gossiped more than a babushka.\n\nNope, I was on my own here.\n\nI chewed the end of my pencil thoughtfully as I studied Suzie's erogenous zones chart. Ears, neck, breasts, clitoris were checked. Stomach was crossed out.\n\nNo stomach touching? I frowned. That was an odd place to not want to be touched. Well, that would be my test. I would try to arouse her by working on her ears, neck, and breasts, then test her stomach. I would leave the clitoris for another day. Cunningulus seems frighteningly challenging to become good at, I wanted more time before I tried it. At least, I eyed Suzie's survey, she wasn't experienced in that particular act either so maybe it would be something I could try on her without her knowing just how naive I was in general.\n\nOn Wednesday, I met Suzie at the clinic to get our tests. Of course, it wasn't necessary for me, but I wanted Suzie to feel comfortable knowing that I was clean. And while I had not been worried about her results before, I was a bit anxious after seeing her breadth of experience on the survey. I was relieved when her results came back clean as well.\n\nWeek 2\n\n[Nick]\n\nSuzie met me at her door the next Saturday at 3pm. I tried to project an image of calm confidence as I followed her up to her apartment and inside.\n\nThe studio apartment had just enough room for a tiny kitchen, a twin bed, and a small couch and TV. Suzie's computer sat on the coffee table and a stack of homework was piled on top. I wondered how she was doing in her class work, because I'd been neglecting it the past two weeks.\n\nSuzie was standing next to her bed, looking nervous. That was one of the things I enjoyed about her, she showed all her emotions on her face, plain as day.\n\n\"Take off your shirt and bra.\" I told her, trying to seem in control of the situation.\n\nSuzie's cheeks turned red as she pulled her shirt over her head. Her bra was plain and utilitarian. An engineer's bra, I thought. Her skin was freckled down her cleavage, but her stomach was pale and white.\n\nSuzie pulled down each bra strap from her shoulders, slowly. I couldn't tell if she was doing it to tease me, but it was agonizing to watch. She reached behind her back and unhooked the bra, then let it fall to the floor releasing her boobs.",
        "The freckling continued down nearly to her nipples, which were pale pink and hard. Suzie's breasts were full and round and bounced gently as she breathed. It was hypnotic. These naked breasts were the first I'd ever seen in real life before, and they were perfect.\n\nI exhaled slowly, savoring the moment.\n\nHaving read that it is crucial to build slowly with a woman, I did not touch those perfect boobs. Instead, I reached out and ran my hand lightly from Suzie's ear lobe down and around the back of her neck. Pulling her gently towards me, I touched my lips to hers.\n\nA thrill coursed me at the contact. My penis, half hard already at the sight of those perfect boobs rose to full attention.\n\nSuzie flicked her tongue against my lips, and I opened my mouth. This was dangerous territory for me. All my research indicated that French kissing was a matter of intense personal tastes that varied greatly. It was suggested that, with practice, one could get the hang of figuring out how a woman wanted to be kissed. I was a long way from that level of skill.\n\nSo, I only let the kiss linger for seconds before I moved my mouth to Suzie's ear. I pulled her ear lobe into my mouth and gently nibbled it. I was rewarded with a low moan from Suzie. Excited by this early success, I lingered on her ear, but more moans were not forthcoming.\n\nConcerned that I had overstayed my welcome in that area, I moved to Suzie's neck. Again, sounds of pleasure greeted my efforts. But, again, it was not sustained.\n\nWhat was I doing wrong? Or was I reading too much into the cessation of moaning?\n\nMaybe I need to stimulate multiple erogenous zones at the same time?\n\nI reached up a hand and tentatively closed it over one of Suzie's luscious breasts. It felt warm and heavy and soft in my hand. A bit of pre-cum pulsed from my penis. I moaned.\n\n[Suzie]\n\nNick reached up and lightly put his hand over one of my breasts, barely even touching it. My fleeting arousal died away at the contact. I nearly cried in frustration.\n\nThere had been so much build-up to this day, and it had started pretty good. I was turned on when Nick told me to take off my top and bra. The ear and neck nibbles were good, as far as they went.\n\nBut this was too soft, too hesitant. It nearly tickled, as lightly as he was touching me. I wanted to be fondled, bit, not grazed by touch and tongue like I might break under too much stimulation.\n\nI wanted to just tell Nick, more, harder. But I had been the one to set up the rules. No hints, I'd said. This just wasn't working though.\n\nNick touched my nipple, so gently I almost missed the contact. Frustrated, I arched my back and pressed my chest into him. Yes, it was a hint. I couldn't help it.\n\nHe may have started slow, but the man could take a hint. Nick squeezed my breast harder and pinched my nipple roughly. I moaned.\n\nFeeling much better, I ran one hand through Nick's hair and the other down to his butt. Had I thought he was pudgy? I had been too harsh. Nick was clearly perfectly sized for making out. His mousy hair was soft and long enough to grab. I wondered if a little hair pulling would be something Nick was into. It was too bad I couldn't convince him to fill out one of those forms he'd given me.\n\nNick took his hand off my boob and his mouth off my neck. Gently, but firmly he pressed my hand on his butt away from him.\n\n\"No, no. I touch, you feel. That is how it works today.\"\n\nHeat pooled in my pussy as I dropped my hands and let Nick go back to what he was doing. It turned me on when he got bossy. Was that part of his experiment?\n\nNick changed sides so that the other ear and breast could get some attention. He had started out licking my whole ear rim from the top to the bottom, but now he was focusing on the lobe, with occasional forays down my neck.\n\nWith one hand he tugged my head around by my ponytail according to where he wanted it. With the other, he alternated between my tweaking both my nipples and massaging my breasts.\n\nI really, really wanted to touch him now. I wondered which of my limits he was planning to test today? I should have listed hand jobs under dislike. Maybe then I'd get to play with his penis tonight. But no, I'd stuck to the rules of the game, and it was a damn shame.\n\nWhen Nick moved his hand working my breast lower and touched my stomach, it felt right and good. I pressed myself into him, but he pulled back, keeping the distance between us. He ran his hand across my stomach and then gently grabbed a bit of my stomach fat.\n\nI jerked back, surprised at that unwelcome sensation, but then Nick's mouth was on my breast, sucking at my nipple and I didn't care anymore if he pinched my stomach fat a little.\n\n[Nick]\n\nI pinched Suzie's stomach again, just to be thorough. She really didn't seem to mind.\n\nI supposed that having fulfilled my goal of the day I could stop sucking on her boobs, but I really didn't want to. There was something delicious about the way her nipple hardened in my mouth as I flicked my tongue over the tip of it that I'd caught between my teeth.\n\nMy penis throbbed with pleasure, and then Suzie pressed her pelvis against mine. Oh god, I was going to cum.\n\nI pushed her back gently, but there was nothing I could do to stop it now. I felt the hot, thick, cum pulse out of me and drip down my cock and balls. I bet it had left a big obvious wet spot in front too.\n\nDamn.\n\nIt would completely ruin the image I was trying to project if Suzie saw that. Holding her close to me, but not touching, I stopped sucking on her.\n\n\"Well, I guess that was a point in favor of the hypothesis,\" I said.\n\n\"What?\" Suzie said, a little unfocused.\n\n\"Well, I aroused you using the erogenous zones you indicated were pleasurable, then touched your stomach, a no-go zone on your chart.\" I explained.\n\n\"Oh yeah.\" Suzie replied.\n\n\"So, I'll mark that result and I'll see you next Saturday,\" I told her, turning and heading towards the door so she wouldn't see the front of my jeans.\n\n\"Um, ok?\" She sounded unsure and disappointed as I left.\n\nI was disappointed too. Lesson learned, next time I would jack off before I met Suzie. But I had not expected to cum just from making out.\n\nI would have felt more pathetic, except for the fact that I had successfully aroused her, and I still had a date for next Saturday.\n\nI managed to get in my room and change my pants before my uncle saw me, thankfully. I did not want to have to explain to him why I had a giant cum stain on my crotch.\n\nI looked at Suzie's list of \"no-go's.\" It was rather short compared to the list of \"tried and liked.\" Several of the items were things that I wasn't sure I was comfortable trying. Watersports, for one, I wasn't sure I could do that.\n\nWeek 3\n\n[Suzie]\n\nAfter Nick had left on Saturday, I had broken out my vibrator and used it on my throbbing clit. It was not fair of him to leave me all aroused, like that.\n\nBut, wow, I was turned on. And, if I was being honest, the way he'd stopped and been all analytical at the end had really done it for me. I was used to guys who were only out for their own pleasure, who wouldn't be satisfied until they cum. It was kind of nice to leave things with some mystery, to be continued next Saturday.\n\nI wondered what Nick would explore next?\n\nI spent all of the following week imagining various scenarios for my masturbatory pleasure. By the end of a week of these self-imposed fantasies, the only things on my \"no go\" list that I was still really not interested in was watersports. Everything else, I was aroused enough to try. At this point, it would probably be harder for Nick to turn me off than on.\n\nDid he know he was messing with my mind like this?\n\nFriday night he sent me a text, and all is said was '5pm.' I spent a half hour trying to work out if I should reply or not before deciding not to.\n\nSaturday at 4:45pm, I was waiting at the door to my building, trying to look like I was just hanging out there, not that I was desperately needing sex. I had a book and was reading on the steps when Nick walked up at 4:58pm.\n\n\"Hey, Suzie.\"\n\n\"Hi, Nick.\" The words came out low and gravely. I cleared my throat. \"Wanna go on up?\"\n\nNick shook his head, \"not today. I am taking you out.\"\n\n\"Oh.\" I blinked.\n\n\"Are you OK if I drive?\" Nick asked, like a gentleman.\n\n\"Yeah, sure.\" It was really nice that he was concerned with my comfort like that. There were absolutely some guys I wouldn't let drive me anywhere. None of those types would have bothered to ask about whether I was OK with them driving.\n\nI sat in Nick's beat-up twenty-year-old Toyota sedan. It was in slightly better condition than my own rusting Nissan. The windows were down because his A/C didn't work. I always loved to feel the warm breeze on a drive, so it was fine with me.\n\nNick turned the radio on and Chaka Khan's version of \"I Put a Spell on You\" started playing. I couldn't help but sing along. I'd grown up to listening to CCR's version with my grandpa, but I loved Chaka Khan's spin on it that was a bit more faithful to Screamin' Jay Hawkins original.\n\nNick glanced at me, \"you like this music?\"\n\n\"Yeah,\" I nodded. I liked all kinds of music, but I didn't explain that now. He could have put on anything from rap to heavy metal to country and I would have been happy. My tastes in music were as eclectic as my tastes in sex, I smiled at the thought.\n\nNick was quiet as he drove. He was always quiet, I realized. It had surprised me when he'd spoken with me, ignoring Brad's proselytizing. It was even more surprising when he'd followed up with me later, and now...\n\nI wanted to ask him about why he'd wanted to do this, really. But I figured he'd give some vague unhelpful answer, so I just enjoyed the wind instead.\n\nNick pulled into the parking lot of a non-descript industrial building. I eyed the building skeptically, long enough for Nick to jump out, come all the way around to my side and open my door. I flushed at this gentlemanly gesture. Part of me felt like I didn't really deserve to be treated so nicely.\n\nI followed Nick to the building and finally saw where we must be heading. One of the doors boasted a small sign that read \"School of the Art of Sensual Massage.\" Oh, this was going to be fun. My nipples hardened just reading the sign. I'd never explored erotic massage before, and if there was one thing that really aroused me, it was trying new things.\n\nInside was a large room with massage chairs and privacy screens dispersed artistically throughout. There were already some other couples standing next to some of the tables.\n\nA middle-aged woman greeted us with a huge smile, \"Welcome! Are you here for the couple's massage class?\"\n\nNick nodded. \"Reservation under Nick Balakin.\"\n\nThe lady looked at a list she had in her hand, running one long elegant finger down the page. Her expression brightened as she found Nick's name.\n\n\"Ah there you are! Follow me.\" She led us to one of the tables. \"You'll be here, then. Just get settled in and class will begin at 5:30, or so. There's a variety of oils you can use, I suggest that whoever will be receiving the massage today pick out a couple that appeal. You can wear clothes or not, use the privacy screens or not, whatever makes you comfortable.\"\n\nThe woman walked away to greet another couple just arriving. I noticed that some of the couples were arranging privacy screens, but a couple people were just undressing in the open. I looked at Nick, waiting for his instructions. He was in charge of this, after all.\n\nNoticing my expectant look, Nick raised his eyebrow and glanced at the oils. I went over and examined the bottles. There was a range of fragrances from floral to fruity to musky to sweet. I picked vanilla rose, oleander, and finally settled on cinnamon for my last choice. I wondered if it would have a bit of a sting if applied to the right place?\n\n\"Undress.\" Nick said, after I'd selected my oils.\n\nHe had not moved any of the privacy screens to block us from view. I approved of the choice, even as I felt vulnerable and exposed undressing. I carefully folded my clothes and set them in the cubby space provided for that purpose.\n\n\"Alright everyone!\" The woman who'd greeted us called. \"It's time to get started.\"\n\nI lay face down on the table, the faux leather feeling indecent on my bare pussy and breasts. I tuned out the instructor's voice and concentrated on the gentle feel of Nick's fingertips as he ran his hands through my hair. He worked my scalp with a firm, but not rough touch, moving from the front to the base of my neck. Then he rubbed my ears and my neck.\n\nThe smell of oleander wafted to my nose as Nick massaged my neck and shoulders. I sagged into the table, feeling incredibly relaxed, and lucky. Nick ran his warm, slick, hands down one of my arms and back up again to begin softly kneading it as he worked his way down again. He moved slowly, inexorably out to my fingertips, massaging each individual one. I shivered when I felt his soft lips plant a dry kiss on each oiled fingertip. Then, he did the same with my other arm.\n\nNick pressed the base of his palms into my back and made small circles as he worked my shoulder blades. Incrementally, he moved the circles down, lower, and lower. Then, he was rubbing my ass cheeks. Heat pulsed through my vagina when he pressed a thumb against my asshole and rubbed slowly over it. I was so glad I'd showered thoroughly just before Nick's scheduled arrival time.\n\nNick let his thumb stroke downwards to where my labia ended. He paused there, teasing, then began working on my thighs. One thigh, then the other. One calf, then the other. Then feet? No.\n\nI didn't generally like my feet being touched, but right now I wouldn't have cared if he sucked on a toe. I was too far gone. Nick had conquered me.\n\n\"Roll over.\" Nick whispered in my ear.\n\nI gasped. We were only halfway done, I realized. Would I even be able to walk after this? To think? Did I care? No, I didn't care. My world was in Nick's hands, literally.\n\nNick ghosted his hands over my body, from my temple, over my eyes, down my neck and over my breasts. He floated his hands over my stomach, lightly grazed over my vagina, and down my legs. My whole body tingled with the memory of that barely there touch. I craved, needed, more.\n\nNick started with my chest, just above my boobs. Now I smelled vanilla rose. Nick leaned over me and sucked one nipple into his mouth, quickly, then the other. My nipples hardened as the air hit the newly wet nubs. Nick pressed his hands into my soft breast, cupping them and squeezing softly.\n\nI watched his face as he concentrated on his work. His lank brown hair hung unruly, and one lock fell over his eye. Nick blew it out of his face, unwilling to pause his ministrations to fix the errant piece of hair. Suddenly he looked incredibly sexy to me. I sucked in a breath and Nick raised his gaze to mine.\n\nHis hands stilled on my breasts as we locked eyes. Nick slowly lowered his head, holding my gaze, until his lips just brushed mine. I flicked out my tongue and licked him, reveling in the taste of his soft plump mouth. Nick's lips parted and I darted my tongue into his, touching my tongue to his. He flicked mine gently, then slowly stood up straight again, looked at his hands, and returned to the massage.\n\n[Nick]\n\nIt was a very good thing that I had masturbated in the shower before going to pick up Suzie. Even with that preparation, my penis throbbed, hard and ready, in my pants. I gently pressed my hands into Suzie's stomach, then her hips.\n\nNow, to work on her pelvis area, or go on down to her feet first and leave her vagina for last? I let my hands continue down her body to her feet, sensing that I best leave her craving more while I worked on her feet. Otherwise, she might cum and then not be sufficiently aroused for this part anymore.\n\nI took one of her feet in my hand and held it with my fingers holding the tops and my thumbs pressing into the arches. Suzie's feet were clean and smelled of soap, she must have showered right before this too. Her toenails were neatly trimmed and unpainted. They were cute feet and I found myself wanting to suck her big toe, so I did. That was, after all, the purpose of this experiment today, wasn't it?\n\nI worked on the first foot for a bit longer, sucking each toe in turn. Then, I repeated the process with her other foot. I really wanted to press her feet into my penis, but I thought that might be too far, and I still had her labia to massage. I counted the experiment as passed already. And, per the rules of Suzie's game, I could stop now. But Suzie's rules weren't mine.\n\nI wanted her. I wanted more than just these eight weeks I'd bargained for. And if I wanted more, then I had to show her that she wanted me too. She did, already, but it was a fleeting desire. She didn't look at me with those same lust filled eyes when we had class during the week, and I wanted her to. I wanted her to not be able to forget me.\n\nI moved my hands up Suzie's legs, slowly. I opened the last of Suzie's oils, the cinnamon. I had watched as her hand had lingered over the choice, considering. I could almost hear her wonder how it would feel, in her most sensitive spot. If I had learned anything from that survey I'd given her, it was that Suzie liked a bit of spice with her pleasure.\n\nI rubbed the cinnamon oil into my hands, warming it. Then, I pressed my palms over Suzie's lower stomach. The instructor had warned that this oil could be harsh when she'd seen we'd selected it. I watched Suzie's skin for signs of reddening. When there was no color change, I began rubbing the oil into Suzie's pelvis. Her pubic hair had been trimmed short, not shaved and the bright orange matched the hair on her head nicely. I rubbed the oil into her soft short curls and then pressed my fingers into the crevasses between Suzie's labia and her thighs.\n\nI massaged each labia as carefully as I'd massaged her ears. Pinching them and circling my fingers. I worked them from the top near her clit to the bottom near her anus and back up again. Only then, I pressed a finger into the folds that I knew (had researched thoroughly), protected her clitoris. The most sensitive part of a woman's body and the one place that was responsible for the most female orgasms.\n\nI rubbed my thumb into the area feeling for the rigid mound that I'd be promised would be here. Was that it? I flicked my thumb over it and Suzie jerked. Yes, that must be it.\n\nI rubbed over the nub, back and forth. Suzie's nipples hardened again. I glanced around the room and saw the teacher had her back turned, focusing on a couple on the other side of the room. Other couples were just as intent as I was on the front sides of their lovers. No one was watching us.\n\nSuzie moved her hips gently into my hand, but she was quiet, biting her lips. I kept my pace with my thumb as I ran my other hand over Suzie's body, from her pelvis up to her chest and back down again. I also had to pay attention to the location of the teacher. I wasn't sure if actually bringing my partner to orgasm was strictly allowed here, and I really didn't want to have the mood ruined by being reprimanded or kicked out.\n\nMy thumb was beginning to tire when I felt Suzie spasm under my thumb and a bit of fluid spurted over my hand. She squirted? That was supposed to be uncommon, I'd read. Suzie let out a long shuddering gasp as her body relaxed. Her face looked more relaxed and happier than I'd ever seen it, beautiful.\n\nI looked up and around again, and right into the eyes of the teacher. She caught my gaze and smiled a little, nodding at me, seemingly with approval. I nodded back at her. I had the idea that this was the sort of attention that would cause Suzie to flush red, but I never had been easily embarrassed.\n\nI removed my hand from Suzie's clit and smelled it. Unsurprisingly, my fingers smelled of cinnamon. I'd have to find out what her own scent was some other day, I supposed. I wiped my hand on a paper towel to dry off Suzie's cum.",
        "I looked down at her face and met her eyes. She twitched her lips in a small smile.\n\n\"I don't even know what we were testing today, but was it a success?\"\n\n\"Yes, tonight we added more supporting evidence to your hypothesis.\"\n\nSuzie raised her eyebrows questioningly.\n\n\"Feet.\" I clarified.\n\n\"Ah, I had forgotten I cared,\" Suzie replied.\n\n\"Time to get dressed,\" I told her. I almost felt guilty at ending her pleasant relaxation, but more than half the couples had already packed up and left, and soon we'd be kicked out as well. It would be better coming from me, than the teacher.\n\nSuzie seemed to gather her resolve, then pushed herself up and off the table. Slowly, languidly, sexily, she dressed. My throbbing penis was pulsing and hard. I was just thankful it hadn't made a telling wet mark tonight.\n\nAt some point Suzie became mesmerized, staring at my crotch. She watched it the whole while she dressed. She only tore her eyes away when she slipped her feet into her sandals.\n\nOn the way out I made sure to stop and thank the teacher for her time and expertise.\n\nSuzie was quiet as I drove her back to her apartment, but it was a peaceful silence, not awkward. I appreciated that she could be quiet with me, because I didn't know if I would like her as much if she had turned out to be a woman who talked all the time.\n\nWhen I pulled up in front of her building, Suzi hesitated after unbuckling her seat belt.\n\n\"Nick, are you attracted to me?\" She asked.\n\n\"Yes.\" I told her, honestly.\n\n\"I know we said this was an experiment, but I want to do something as nice for you as you did for me. Will you come up?\" She nodded her head in the direction of her apartment.\n\nMy penis, which had softened on the drive hardened instantly again. Yes, I wanted very much to \"come up\" and see what exactly she was offering. But I wasn't ready yet. I wasn't ready to let her have control of this, and she would if I joined her now.\n\n\"Not yet.\" I said, gently. \"There will be time for that, if you still want it, later.\"\n\nSuzie tilted her head as she considered me. \"Alright, Nick. But I want you to know that I had a really great time tonight. I've never felt anything like it. I would have done much more than just let you suck my toes for that, you know? So, thank you.\"\n\nMy penis throbbed and heat and tingling spread through me from my groin. I closed my eyes and took a deep, steadying, breath.\n\n\"You're welcome, Suzie. See you in class.\" I said evenly.\n\nI watched as Suzie walked into her building. She didn't look back. She was gorgeous, I'd thought so since the first time I'd seen her in one of my uncle's classes last year. I'd gone to talk to him and there she'd been, a bright, vibrant, woman with eyes that locked onto my uncle intently as he taught. The others in the class occasionally looked at her, clearly admiring her figure, but she never noticed.\n\nI'd never thought, then, that she would still be single a year later. That none of those guys, and they very much outnumbered her, would ask her out. But after being in class with them this semester, I realized they were intimidated by her.\n\nI was pretty sure that Suzie didn't realize that. She was incredibly smart, but she seemed a bit clueless about people. I shook my head ruefully as I headed back home. Next week, I had to up my game, and I had a lot of work to do to figure out how.\n\n[Suzie]\n\nI flopped down on my bed and just breathed. What had just happened? Last week had been sweet and nice, but a bit underwhelming. This week Nick had been incredible.\n\n\"I put a spell on you...\n\nCos' you're mine!\n\nAnd I love you,\n\nI love you anyhow...\n\nAnd I don't care if you don't want me, baby.\n\nCos' I'm yours right now.\"\n\nI sang to myself softly the song that had started this night. I couldn't help but feel it was speaking straight to my soul. So what if Nick didn't want me? I was his right now.\n\nI slept really well that night. And I spent all Sunday working on homework. It was always so much easier to focus on work after a particularly intense sexual adventure. It was like all the nervous energy had been worked out of my body. Usually, I got this feeling from my weekly trips to the Odd Place, a local club for goths that also had a small BDSM stage.\n\nI was a Friday regular on the stage, and that is where I'd picked up most of my boyfriends. Nick was the first fellow college student I'd ever dated. He was proving much more adventurous than I'd expected.\n\nIn class that week, Nick nodded at me when he came in, then ignored me completely. I couldn't figure him out. I shook my head to clear it of pointless speculation and focused on the insane math of the day.\n\nBy Friday, my head was full of math and science, and I had a full weekend of homework ahead of me. I considered skipping my weekly visit to the Odd Place, but my friends there would miss me if I didn't show up. When I finally decided to go I was late, walking in at 10pm.\n\nAs always, the atmosphere perked me right up. Here were all the other weirdos, a wild array of personal styles dotted the place. I headed over to my regular booth. It was empty, but the stuff piled on it showed that my friends were there, probably dancing. Any other club and you couldn't leave your table unattended with your stuff on it, but here people would respect that and leave it alone. Besides, the regulars all knew each other and would notice is some random person came in and started messing with stuff that wasn't theirs.\n\nI sat down and leaned back into the booth, just enjoying the thumping beat of the goth music that emanated from the dance floor.\n\n\"Suzie!\" Tess squealed as she plopped down next to me and gave me a hug.\n\n\"Hey,\" I grinned at her. Tess was in her late thirties, but she had nothing against being friends with a college student. Her boyfriend, who was in his fifties settled in across from us. He largely ignored me, which was fine.\n\n\"You're late!\" Tess pouted.\n\n\"I almost didn't come,\" I admitted.\n\n\"What? Are you feeling OK?\" Tess gasped.\n\n\"Yeah,\" I laughed, \"I'm fine. It's just been a busy week at school, and I have plans tomorrow afternoon, so I have less time than normal for homework.\"\n\n\"Plans? Spill.\"\n\n\"It's a date.\" I said, blushing. How I could still blush so easily when I regularly got undressed in front of a crowd, I wasn't sure. I guess it wasn't something that could be fixed merely by pushing boundaries.\n\n\"Ooooh... Do we know him?\" Tess asked, including her boyfriend in the conversation, although he wasn't even looking at us.\n\n\"No, I met him at school.\"\n\n\"Really? Is he a nerd?\" Tess grinned.\n\n\"Yes, a nerd like me.\" I said, smiling.\n\n\"If he's a nerd like you, then I expect you to bring him here.\" Tess teased me.\n\n\"Well... I'm not exactly planning our dates...\" I hedged. I wasn't sure how to explain just what I was doing with Nick. But, if anyone would understand, Tess would, I suspected.\n\n\"Mmm? He's a dom then?\"\n\n\"Err... Kind of?\"\n\n\"Well, you know you wouldn't be happy with a dom, dear. You're a bit masochistic, but not submissive at all.\" Tess advised me.\n\n\"I know. So far, it's been really nice letting him take charge. We're kind of, playing a game.\" I tried to explain.\n\n\"Oh, a power exchange game? Well, as long as your both playing by the same rules, that should be fun for you.\" Tess nodded at the stage, \"you going up tonight?\"\n\n\"I don't know, yet.\" It felt like that would be almost cheating on Nick. I hadn't hesitated the last couple weeks to continue my routine as normal, but something had shifted for me last weekend in how I felt about Nick. If I was starting to take him seriously, then could I let some other man mess with my body?\n\nOn the other hand, Nick hadn't really made any indication that he actually wanted more from me. He'd avoided every opportunity to move our relationship out of experimentation and into something more real. I didn't owe him my time except for Saturday afternoons.\n\nAn hour later I went and signed up for a turn on the stage. There were doms who worked the stage with a couple different specialties, from electric play to bondage to flogging. I noted down a request for my favorite dom, but he was pretty popular so there was a bit of a wait.\n\nFifteen minutes later I was called up. I pulled off my shirt and the assistant taped over my nipples. No nip slip in a club that serves alcohol, it's the law. Also, no full nudity, topless only here. I stepped onto the stage and let my usual dom strap my wrists above my head. I leaned back and took a deep breath, my nipples hardening as I anticipated what would come next.\n\nI felt the first pinch on my breast and exhaled, long and slow. The dom held a long string of wooden clothespins. He wound it around my breasts, clipping each one onto me. The delicious pain radiated through me, and my pussy got wet.\n\nWhen he ran out of clothespins, he used some silver clamps to pinch my nipples. He pulled on them and the clamps tightened, thrilling me with a sharp sting of pain. The dom played with my boobs a bit, letting the pain build.\n\nI pulled at the cuffs holding my wrists and writhed. I wanted him to remove the pins and clamps desperately, but I dreaded it too. The removal hurt the most, but the feeling after, ooh.\n\nWhen I thought I couldn't stand it anymore, the dom took off the nipple clamps. I let out a choked cry and my whole body jerked forward. Before I could acclimate to the feeling of relief, however, the dom tugged the rope of clothespins off in one swift stroke. The blood pulsed through my freed breasts warming them.\n\nTears leaked from my eyes as the dom rubbed my sore boobs with a pelt of fur. The softness was glorious on my sensitive skin, enforcing the dull ache with the pressure, but not detracting from it with new pain.\n\nAnd that was why this was my favorite dom. He knew exactly what I needed, what I craved. He released my arms, and I sank into myself. I peeled the tape from my nipples and pulled my shirt over my head, feeling loose and relaxed.\n\n\"Feel better?\" Tess asked when I returned to our table.\n\n\"Always,\" I sighed.\n\nI'd given up wondering why I liked this three years ago when I'd first discovered the Odd Place. Things I'd used to do myself in private, they did in the open here. Then I'd met Tess and she'd been like a second mom. My actual mom didn't understand this craving I had at all, and she probably wished I'd never told her about it.\n\nDaddy issues, I'd decided, that was probably it. My dad had been an asshole who'd abandoned my mom and I when I was twelve. Maybe all this was somehow based in a need to have an authority figure in my life. Honestly, though, when I'd found out I wasn't the only one, I'd stopped caring what made me this way.\n\n[Nick]\n\nI'd discovered this club on the internet when trying to figure out how I was going to address Suzie's need for more intense pleasure via pain. The Odd Place. It was a good name for it.\n\nI had arrived early, at 7pm when the doors opened. I grabbed a seat with a good view of the stage and settled in to see what I could learn about this BDSM stuff from watching.\n\nThree hours later I was beginning to actually like the club. No one had bothered me at all. Normally, people wouldn't let a person be alone in a club, assuming you must be there to talk. Sometimes I just wanted to be around people, though, without actually engaging in conversation. It seemed that this was a place I could do that. I might even come again just for that.\n\nThe activity on the stage was interesting. Most of the action was on the electric play side of the stage where fully clothed people were massaged with ultra-violet wands and sometimes stimulated with tens units. Less frequently, someone would be tied up and flogged on the other side of the stage. It wasn't very sexual, it seemed to me.\n\nI was mulling this over when I saw a head of bright orange hair enter the club. It was Suzie! She headed over to an empty booth I'd seen an older couple at earlier and sat there.\n\nI wondered if I should go talk to her or not. Before I could make up my mind, though, the couple returned, and Suzie started up an animated conversation with the female half. They looked like friends. I'd never seen Suzie look so comfortable and relaxed, well other than after she'd cum last Saturday, that is. In class, she was always hyper-focused.\n\nI felt a little uncomfortable about watching her, but it wasn't like I'd expected her to show up here. Thinking about it, though, maybe I should have. This was probably exactly the kind of place she'd hang out.\n\nI tried to focus on my research and ignore Suzie, but it wasn't easy. She was just so noticeable. At least I was pretty sure she wouldn't see me. I was sitting in a darker corner, and wearing a hat that shaded my face further.\n\nWhen Suzie went up to the stage, a pulse of anticipation shot through me. She nodded genially at several of the doms working. They obviously all knew her well. Instant irrational jealousy filled me. I clenched my fists and reminded myself that there was no reason to be jealous of these guys, they just worked here.\n\nMy calm left me when I saw what the dom did to Suzie on the stage. Unlike most of the other subjects, Suzie bared her chest to the crowd, not her back. I sucked in a breath as I saw the dom pick up a line of clothespins and begin clipping them to Suzie's beautiful creamy breasts.\n\nMy balls tightened with arousal even as I felt hot with jealousy as I watched Suzie's poor boobs get tortured. But the expressions on her face! I could see her anticipation, her need, then her anguish and tears, and finally, her release. This, at last, was the sexual element that had been missing from so many others on that stage, or maybe I just couldn't read the others the way I could Suzie. Or maybe it was the nipple clamps, I thought ruefully.\n\nAt any rate, I felt like he was beginning to understand why Suzie came here, why she liked these things.\n\nWeek 4\n\n[Suzie]\n\nI had no idea when Nick was planning to show up today. I hadn't got a text with a time, like last week. I could have texted him to ask, and I'm sure he would have told me, but I didn't want to admit that I was planning my weekend around him. No, it was better to just hang around home all day and anticipate some guy showing up whenever he felt like it.\n\nI rolled my eyes at myself. I was ridiculous sometimes. I probably would have texted Nick, if there was anywhere I wanted to go, but I enjoyed spending my weekends at my apartment after my week in classes and my Friday night expeditions, a quiet weekend was perfect for me.\n\nI opened up my old record player and put on a Nat King Cole album. Some music was just made to listen to on record. The scratchy, slightly off tune, soft feel of the needle bumping along made the blues so much sadder. I turned it up loud enough to block out all the sounds of the street outside and my neighbors TV and settled in to do some serious homework.\n\nHours later my phone chimed, a new text.\n\nNick: Here.\n\nI laughed at the terse text. Nick said so little it was almost like he was afraid of anyone knowing him. Like if he used a whole sentence, he might give too much away of his thoughts. I kind of liked the mystery, though. I was still grinning when I opened the building door for him.\n\nNick looked at me and I thought I almost saw a smile. The corners of his mouth twitched just a little.\n\n\"You can smile,\" I told him. \"It won't hurt.\"\n\nNick shook his head and followed me in, expression turning serious. He had a shoulder bag with him, and I wondered what was inside. Were we playing with toys today?\n\n\"I want you naked.\" Nick told me once we were in my apartment.\n\n\"Ok.\" I agreed. I wasn't about to make it easy by just getting undressed though. If he wanted me naked, he could undress me himself, or he could give more specific instructions. Let's see how much control he really had, I thought.\n\nNick stared at me and waited. I stared back.\n\nHe dropped his bag on the floor and started towards me. I couldn't recall why I had ever thought he wasn't sexy. The way he moved with such confidence and determination, his wild unruly deep brown hair, his mysterious dark eyes, his long thick black eyelashes and bold eyebrows, his angular face gently softened by a thin layer of fat... Yes, it was sexy.\n\nNick moved until he was just inches from me. Then, still staring into my eyes, he put his hands under the hem of my shirt and pushed it up over my head, his hands skimming my breasts as he did it. My shirt fell to the floor. Nick pulled the straps of my bra off my shoulders and pushed it down to my stomach. He never broke eye contact as he then unbuttoned my jeans and pushed them and my panties off my hips, letting them gently sag towards the floor.\n\nNick brought his hands up and palmed my breasts, thumbing over my nipples until they hardened nicely. He leaned his face close to mine and I tilted my head down to accommodate his slightly shorter height. Our lips almost touched, but he didn't close the distance.\n\n\"Take off the rest of your clothes yourself, Suzie.\" He said and then took two steps away from me.\n\nOohhh. Nick did not disappoint. I'd challenged him, and he'd delivered. I kept my eyes on him as I reached behind my back to unclasp my bra. Then, I wiggled my hips and let my jeans and panties fall to the floor before stepping out of them, bringing myself forward into Nick's space again.\n\n\"Turn around.\" Nick said, quietly.\n\nI turned.\n\nI heard Nick open his bag and then he ran a hand down each of my arms, pulling my wrists behind my back. I felt him tighten a leather cuff onto each wrist, then he clipped them together. With my hands bound like this, my breasts jutted forward.\n\nNick put a foot between mine and kicked my feet apart, spreading my legs wide. He ran a hand through my pussy, feeling how wet I was, which was a lot. He reached around to my front and fondled one of my breasts, tweaking my nipple. Then, he put a hand between my shoulder blades and pushed me forward, bending me over until my face pressed into my bed.\n\nSmack!\n\nNick's hand slammed into my ass. I gasped and bit back a cry. I hated getting spanked. One of my previous boyfriends had done it to me once and it had been all pain and no pleasure. For whatever reason, my butt was very sensitive, and spanking felt worse than breast torture.\n\n\"No.\" I said. \"Please Nick, choose something else.\" I begged.\n\n[Nick]\n\nI had been about to slap Suzie's butt again when she begged me not to. Suzie begging sent a wave of heat through me. All of me screamed with the need to hit her again, to make her beg more. To make her cry, not those elegant tears I'd seen at the club last night, but really cry.\n\nWhy do I want that? I held my hand in the air, still not spanking my woman. I took a deep breath. I wanted Suzie to beg, yes. But I wanted her to beg for me to do more, not less. That's what this game was about, right?\n\nAngry at myself for pushing Suzie too fast, I rubbed the red spot I'd just hit. I had been angry at her, that was why I'd done it. I was angry at her for letting some other guy play with her breasts last night, and for defying me today. Some primal part of me wanted Suzie to submit to me, and only me. Where had that feeling come from?\n\nMy original plan had been to stimulate Suzie orally, before trying anything else. But I let myself forget my plan when I'd seen her perfect bare ass, so pale and white. And now it was red.\n\n\"Please, Nick.\" Suzie said again, her voice muffled by her bed.\n\nAnother feeling came over me, one I was more used to with Suzie. I wanted to serve her, to please her. How could one woman make me feel so many different ways, so conflicted? To dominate her, or serve her? What did I want?\n\nI let out a low groan and sunk to my knees behind Suzie. My face was level with her ass and I kissed the red mark I'd made. Suzie shivered at the touch.",
        "I spread her butt cheeks and stared at her wrinkly pink asshole. I wanted to lick it, oddly. I didn't question the urge; I just went for it. Suzie moaned as I lapped my tongue along her ass.\n\nI recalled that I'd read this was called a rim job. I hadn't thought much of it when I'd read about it. It hadn't seemed like something I would ever want to do. But here, now, looking at Suzie's ass, somehow it felt right.\n\nShe'd obviously cleaned her ass well, it even smelled like soap. But, I couldn't spend all my time on her butt and ignore what was now just below it. Her labia were bared in this position as well. I ran my tongue down into them. I found her vagina and stuck my tongue into it. I couldn't reach her clit very well though, this way.\n\nI stood up.\n\n\"Get on the bed, face up.\" I commanded Suzie.\n\nShe obeyed quickly, this time. No longer defiant. Was it just because she didn't want her butt sticking up where it might get slapped again?\n\nI didn't care, right then. Whoever was in charge of this relationship, I was in charge right now. That was enough.\n\nI climbed onto the bed between Suzie's legs and pushed her legs apart. According to Suzie's survey, she'd never been given oral sex before. Based on how many other things she'd done, that was rather incredible to consider, but I had no reason to doubt that she'd been honest in her survey. So, today she was going to get her clit sucked.\n\nSince she had no experience with it, she would not be able to tell that I didn't either. It was perfect for me. A new experience to share together.\n\nI buried my tongue in between Suzie's labia and licked upwards. Suzie cried out and thrust her hips upwards. I used my arms to press her thighs down and open on the bed.\n\n\"Stay still.\" I told her.\n\n\"Yes, Nick.\" Suzie agreed, her body tensing to keep from moving.\n\nThat was better, I thought. Better than letting my jealousy ruin my plans for Suzie. But, that didn't mean I'd have to let her do anything she wanted. I was going to settle that today once she'd orgasmed and was more receptive. I'd planned to explore spanking today, but now I had messed that up. I was still going to get something out of today, though. A \"do not want to try\" on Suzie's list.\n\nI found Suzie's clitoris with my tongue. Well, I thought so anyway. For this to work, I needed to be sure, I needed her to cum.\n\n\"Tell me if I'm in the wrong spot.\" I told Suzie.\n\n\"A little left,\" she said.\n\nI moved a little left and was rewarded with a low moan. I licked harder, enjoying the feel of Suzie's soft skin on my tongue. Up, down, up, down. I tried to keep a rhythmic even pace.\n\nSuzie's legs tensed and she pushed her hips up and sighed deeply. I kept licking. I was pretty sure she was orgasming, but that didn't mean it was time to stop. According to the internet, a woman could have several orgasms in a row if continually stimulated.\n\n\"Stop, stop!\" Suzie said as she pressed her thighs against my arms and writhed.\n\nWell, that meant it was time to stop.\n\n[Suzie]\n\nNick stopped. Well, he stopped licking my clit. He lapped at my labia and the creases of my thighs. It felt amazing. I wanted him inside me, though.\n\n\"Fuck me.\" I said, \"please.\"\n\n\"Next time, if you do something for me.\" Nick replied.\n\nI moaned and rubbed my pelvis into Nick's face. \"Anything.\" I told him. What could he want? I would suck his dick, lick his balls, peg him... What could he want that I wouldn't give him right now?\n\n\"I want you to be abstinent for me.\" Nick said.\n\n\"Huh?\" I was confused.\n\n\"I don't want you to orgasm unless I make you cum. I don't want you to touch yourself. I don't want you to let anyone else touch you. Promise me, Suzie.\"\n\n\"No masturbation?\" It was a whine when the question came out of my mouth. I usually masturbated at least once a day. And he was asking me not to do it for a whole week?\n\n\"But, why?\"\n\n\"Because,\" Nick paused to lick my clit again, sending shivers through me, \"you're aroused. Forced abstinence, it's on your \"no\" list, Suzie. But I want it. I want you to be desperate to cum when I fuck you next Saturday.\"\n\nWhether it was the idea of him finally fucking me or the way he explained why he wanted it, I suddenly wanted it too. I was so turned on, I thought that I could go for another orgasm already, and it usually took me longer to recover.\n\nI wished my hands were free so that I could run them through his hair and push his face into me. All I could do, though, was grind against him.\n\n\"Ok, I promise.\" I said, nothing in my mind but desire for Nick's dick.\n\n\"Good.\" Nick said.\n\nHe licked me a little while longer, but he didn't revisit my clit. Then, he flipped me over on my stomach and unclipped my wrists, leaving the cuffs in place. I nearly cried when he got up then. I was so horny!\n\n\"This is already torture, Nick.\" I complained, rubbing my pussy into the bed a couple times before giving up.\n\nNick was looking at me when I rolled over and sat up. He hadn't even undressed. How could he be so in control? How could he do this to me, and apparently not be filled with any need? Was he fucking some other woman, was I just his side piece now?\n\nThe thought made me feel unexpectedly angry. Nick hadn't promised me exclusivity. He hadn't led me on with any kind of emotional promises. This was, and had always been, just about sex. If it was all one way, to my benefit, why did that make me feel so unfulfilled?\n\nNick's eyes dropped from mine and passed over my naked body. I could see he was hard, his pants bulged with it. But he didn't act on that clear desire.\n\n\"See you next Saturday, Suzie.\" He said, and then he was out the door, leaving me with an intense need and an extracted promise that I wouldn't do anything about it.\n\n\"Fuck me.\" I said, this time it wasn't a request, it was a lament.\n\nWeek 5\n\n[Suzie]\n\nThe week had dragged by slowly, uncomfortably. I hadn't even gone out to the Odd Place, because by Friday I didn't think I had the self-control to show up and not go on stage. I needed an orgasm, desperately.\n\nI felt alternatively pissed off at Nick for getting me to promise him this, pissed off at myself for sticking to a promise extracted under duress, and too horny to be pissed at anyone. It was miserable, the longest week of my life. Honestly, I hadn't gone this long without masturbating since I'd discovered how to do it nearly ten years ago.\n\nFuck Nick. I thought.\n\nNo, fuck me. I corrected myself.\n\nSaturday morning at 11am I got a text.\n\nNick: Come to Professor Chaban's classroom at 1pm. I've left clothes for you at the door to your building. Wear them.\n\nHe was here? He'd come all the way here, dropped off clothes, then left? I ran down the stairs and yanked open the door, looking to see if Nick was there, watching. There was no sign of him. There was, however, a gift bag waiting for me.\n\nThe bag was black with my name printed in silver sharpie on the side. I grabbed it and hurried back upstairs. Inside, wrapped in tissue paper, was a schoolgirl uniform. I laughed out loud.\n\nOf course, nothing would be simple with Nick, would it? It wasn't just going to be sex today; it would be pushing my boundaries in a new way.\n\nI had never done role play, and the entire idea made me incredibly nervous. I wasn't good at pretending. I hoped that sex wasn't contingent on my performance, because if it was, I might never get laid.\n\nShaking my head ruefully at how I was letting Nick run this relationship, I put on the outfit. I looked at myself in the mirror. From bottom up I was wearing black Mary Jane's, thigh high lace topped white socks, an indecently short plaid skirt, a button up white blouse, a fitted navy-blue blazer, and a black choker. There had not been any underwear in the bag, so I didn't wear any. Deciding to embrace the look, I braided my hair into pigtails and put a big bow at the end of each braid.\n\nI admired myself. I looked really sexy like this, not going to lie. Nick had gotten everything exactly in my size, not too small. So, it didn't look like I was wearing a costume, and that made it hotter, in my opinion.\n\nI took the bus down to campus, enjoying the feel of the cool Autumn breeze on my naked pussy. My nipples hardened when I sat down and felt my bare ass on the bus seat. It was probably disgusting to do this, but I was so horny I didn't care.\n\nIt was a ten-minute walk from the bus to the engineering building where Professor Chaban's class was. By the time I got there I was dripping wet with arousal. Nick had said he wanted me desperate, and I was.\n\n[Nick]\n\nI had borrowed the classroom key from my uncle and some of his clothes too. I was now dressed as a fifty-something-year-old engineering professor with brown corduroys, a button up plaid flannel shirt, and a tweed blazer with leather elbow pads. I'd even picked up some prescription-less glasses with thick black frames to wear. And I'd topped off the nerdy academic look with a pocket protector and pens in my shirt breast pocket.\n\nI was going to do it today. I was going to have sex, for the first time. I had spent a lot of time the last few weeks trying to work out why I was so reluctant to fuck Suzie. And the conclusions I'd come to weren't pretty. I had a problem with control, as in wanting to have it all the time.\n\nIt seemed likely, now that I was self-analyzing, that this was why I'd never dated. It wasn't because I'd been too busy, that was just the excuse I used to not have to try. No, it was because I didn't want to be vulnerable.\n\nWell, Suzie had let me have all the control, she'd been vulnerable to me in every way. She was the most open, free, person I'd ever met. If I'd lusted for her and admired her before we started this, I was in so much deeper now. And if I was going to make this a real relationship, I needed to get over my control issues.\n\nHaving sex was a good first step, I figured. And, just to ease into it, I'd do it in the persona of my uncle. It would be easier to let go, I thought, if I was playing a role. And, if it didn't work, well I could play it off as just exploring another of Suzie's limits.\n\nI'd promised to fuck her today, it was happening. I wanted to fuck her so badly that my balls hurt.\n\nThe sound of footsteps jolted me from my thoughts. I sat behind the desk and organized my props nervously.\n\nWhen the door opened, I didn't look up.\n\n\"Miss Belmont?\" I asked, slipping into a Russian accent, channeling my uncle. Since I'd come to America at 13, I spoke English with an American accent. No one would ever be able to tell I wasn't born here. When I wanted to, however, I could use a thick Russian accent and all the idiosyncratic speech patterns that went with it.\n\n'Yes, professor?\" Suzie asked, timidly.\n\nI looked up then and eyed her over the top of my glasses. She was incredible. Her vibrant orange hair was done up in two long pigtails that hung over her shoulders. Her full breasts strained gently against her white blouse. I sucked in a breath as she moved, and her blazer opened a little revealing the impression of a hard nipple. She wasn't wearing a bra, did that also mean no panties?\n\n\"Velcome to detention,\" I said as dryly as I could manage. \"Sit,\" I pointed at a chair in the front of the room.\n\nSuzie sat, obediently. I caught a glimpse of naked butt cheek as she settled her skirt over her chair.\n\n\"You have your assignment, yes?\" I asked.\n\n\"No, Professor Balakin.\"\n\n\"This is unacceptable!\" I stood up and walked to stand next to her desk, deliberately placing my groin in her direct line of sight.\n\n\"I'm sorry, Professor.\" Suzie said quietly.\n\n\"You vill be sorrry.\" I told her, gently rolling the r's in sorry. \"You vill make good apology.\"\n\n\"I deeply apologize for my transgression,\" Suzie tried.\n\n\"Niet!\" I slapped a wooden ruler on the desk in front of her. Suzie jumped.\n\n\"Russians do not apologize with vorrds. You must make apology with action!\" I enthused. My uncle would have rolled his eyes to see me over-acting like this, but it was actually fun. I hoped that Suzie was enjoying it a little as well.\n\nSuzie raised her eyes from the desk to my groin that was in front of her face, level with her breasts. She licked her lips.\n\nI took her hand and put it on my pants where my hard cock bulged underneath.\n\n\"You feel?\" I asked.\n\n\"Yes, professor.\"\n\n\"Your failurrre makes me frrrustrrrated. You fix now!\" I was standing in front of the desk opening so Suzie couldn't get up. I was so close to her that I could feel her breath on my stomach.\n\nSuzie unbuttoned my pants slowly, agonizingly slow. I had debated with myself whether to fully commit to the role and wear white grandpa tighty whities or my usual spandex boxer briefs, or to go without. In the end, I'd decided on the unfashionable and ugly. Suzie didn't comment on my choice as she freed my cock from the white cotton underwear.\n\nShe stroked it with her hand and my penis throbbed. She lowered her head to it, but I pushed her away. I was sure that if she sucked my cock, I would cum, and I had promised to fuck her. So, no blow jobs today.\n\nSuzie frowned, then began unbuttoning her blouse with one hand while she stroked me with the other. When her boobs were free, she leaned forward and pressed them around my cock, then moved them up and down over me.\n\nI groaned.\n\n\"Verrry good, Miss Belmont.\"\n\n\"Professor?\"\n\n\"Yes?\"\n\n\"It would be fixed faster if you put your cock in my pussy.\"\n\n\"Is good idea. You arrre good apologizer.\"\n\nI stepped back and pulled Suzie to her feet, then to the front of the room. I pushed her chest first into the desk. I flipped up her skirt and confirmed what I'd suspected, no panties.\n\n[Suzie]\n\nNick slid his cock into my vagina, finally!\n\nHe pumped it out slowly, then back in, just as slow. I pushed back into him as he pushed forward, deepening the thrust.\n\nNick grabbed my hips and shoved them into the desk.\n\n\"Not to move!\" He groaned.\n\nUnbelievable. He was still trying to torture me. I bit my cheek and tried not to move. With every slow thrust the front of my pussy ground into the desk. At least that felt good, especially with the full feeling inside me. But it would take forever to cum if he was intent on being this slow.\n\nI supposed that was fine, we didn't have any reason to rush. I tried to enjoy the slow build.\n\nIn. Grinding into the desk. Pressure inside. Out. Release. Don't move. Wait. In.\n\n\"Ty takaya krasivaya\" Nick growled something in Russian.\n\nDid he actually speak Russian?\n\n\"Ya ne govoryu po russki,\" I said the only thing that came to mind. It meant \"I don't speak Russian.\" The phrase had been handy when my grandfather had been contracted to Moscow for a few months and had flown me out for a visit.\n\nNick groaned and ground into me harder and faster. He pounded me, rubbing my pussy back and forth over the desk, the pressure building in my clit and inside my vagina too.\n\n\"Spasibo, Professor!\" I broke out another Russian word I remembered, thank you.\n\nThank you for fucking me, Nick. I thought.\n\nThe pressure continued to build as Nick fucked me. Almost there... There! My whole body tensed as I rode the wave of an orgasm that had been building for a week. My vagina pulsed around Nick's cock, and then he stopped moving and just pushed into me. I could feel his thick penis pulsing inside of me as he came too.\n\nThen, he moved slowly again, milking our orgasms for as much extra pleasure as he could. It felt so good. I actually shed a tear.\n\n\"Spasibo, Nick.\" I groaned as he gently ran his hands over my back, hips, and ass.\n\n\"Spasibo, Suzie.\" He replied, his voice thick and throaty.\n\nThen he pulled out and helped me stand up. He turned me around and pushed me back until I was sitting on the desk, his cum puddling out of me on to the laminated surface. Nick kissed me gently on the neck, then up my jaw and around to my mouth.\n\nIt was a passionate open kiss. Nick grabbed my ass with one hand and a boob with the other as he pressed into me and kissed me. I reached down and played with his half-hard cock and with my other hand I held the back of his head close to mine.\n\nHis penis was the first one I'd had that was uncircumcised, and I loved the feeling of his soft loose skin that made it easy to glide my hand up and down his cock while grasping it firmly.\n\nI think I'm falling in love.\n\nNo, that was a stupid thought. I knew almost nothing about Nick, other than that he was definitely an uninhibited, creative, and confident lover. Was that enough?\n\nYes. The primal part of my brain said firmly.\n\nNo. My practical side replied. No one could keep up this pace of sexual adventure forever. Eventually he'd run out of ideas, and then it would just be repetitive, unless there was something else to bind us.\n\nFuck. Don't think about that now.\n\nNick was getting hard again in my hand, and I was getting hot too. I let go of unwelcome thoughts and gave myself over to feeling the pleasure of Nick's attention.\n\nNick pushed his pelvis forward and I helpfully guided it into my vagina. At this angle, Nick's pelvis hit mine with every thrust and his balls slapped into my asshole. This time, Nick didn't start slow.\n\nThe entire desk shook as Nick rammed into me, thrusting quickly. I rocked my hips and wrapped my legs around his back. Nick broke off kissing me to nibble on my ear. I bent my head back and he licked and nibbled my neck too.\n\nThen, I pulled his head back by his hair and sucked on his neck and ear lobe in return. Nick pinched my nipple, and I bit a little harder and sucked a little more on his neck.\n\n\"Is it Ok if I leave a hickey?\" I paused to ask, completely forgetting to roleplay.\n\n\"Da.\" Nick responded, apparently still in his role. At least I knew that \"da\" meant \"yes.\" I began working on creating a hickey, marking my territory. Thinking about leaving a claim on Nick sent a thrill of excitement through me and I ground harder into him.\n\nNick increased his speed, then stilled as he pumped his cum into me, again. I ground into him. I knew I wasn't going to get another orgasm out of this, but it still felt really good. And I loved the feeling of Nick cumming inside me. It felt powerful, to bring him to that climax twice.\n\nWhen his body relaxed, Nick pulled away from me and I let go of his neck with a pop. I stared up into his dark brown eyes, wondering what he was thinking.\n\n[Nick]\n\nI think I'm falling in love.\n\nI barely even knew this woman, but she was just so amazing. She was up for anything, it seemed - well except spanking. And that had been my fault, pushing too quickly. I bet that if I managed it right, she would enjoy that too.\n\nFucking her today, though. I'd never felt anything so good before. Why had I waited so long to do this? It had always seemed like it would be more trouble than it was worth, to have a girlfriend. But this was fun, this whatever we were doing.\n\nI pulled Suzie off the desk and held her in my arms briefly before buttoning her blouse back up and straightening her clothes. Then I fixed my clothes again too, closing up my pants.\n\nI looked at the desk, there was a puddle of cum, and now that I thought about it, cum was dripping down Suzie's legs as well.\n\n\"Did you take the bus here?\" I asked her, back to my normal accent.\n\nSuzie nodded.\n\nWell, I couldn't let her take the bus home like that, with cum dripping out and no panties.\n\n\"I'm going to clean up our mess, then I'll drive you home. I'll pick you up in front of the building.\" I told her.\n\n\"Ok.\" Suzie agreed.\n\nI had borrowed my uncle's faculty parking pass to park in the attached garage, but I wasn't ready for Suzie to know that Professor Chaban was my uncle yet, so I didn't want her to walk with me to my car.\n\nSuzie was sitting on the building steps when I pulled up, her legs crossed high and her skirt falling to reveal and indecent amount of pale white thigh. If she wore these kinds of clothes regularly, I bet that the guys in our class would get over their intimidation and ask her out. It was a good thing for me that she was usually into more comfortable and practical clothes, or else I'd never have a chance, I was pretty sure.",
        "Suzie was quiet as I drove her back to her apartment. So was I. We were both lost in our thoughts. It was strange to feel so close to her, and yet still so separate.\n\n\"Abstinence is over.\" I said.\n\n\"Mmm...\" Suzie replied thoughtfully.\n\nI was afraid, suddenly. Afraid that if I didn't keep satisfying her sexual desires, that this would all be over. I would be alone again, only now I would know what I was missing, and that would be so much worse.\n\nBut not yet, it wasn't over yet. I had three weeks left in our \"experiment.\" The problem was that I'd run out of things that Suzie didn't like that I wanted to try. I'd decided I wasn't going to experiment with watersports, and I didn't want to try spanking again.\n\nNo, I had three weeks left to show Suzie that I could satisfy her without pushing her limits. I had to show her that I could give her what she needed. That was easy, I could do that.\n\nBut I would have to be even more vulnerable with her too. I would have to let her in, let her know me for who I really was. I knew she would tell me everything about herself if I gave her the opening. The way she'd worked on that survey I'd given her has showed me that she was an open book. It was me who was keeping secrets, and I couldn't do that if I wanted more than just these eight weeks of sex.\n\n\"See you next week?\" Suzie asked as I pulled up in front of her apartment building.\n\n\"Yes,\" I agreed. Then, she was gone.\n\nI already knew was I was doing with Suzie for our next date. I had a lot of work to do to be ready, though. After I dropped off Suzie, I went home and cleaned up. I had a couple hours to spare so I worked on homework.\n\nAt 6pm, I left for my training. I pulled into the Odd Place parking lot. This early, there were only a few other cars around. Last Saturday I'd come back and talked to the doms about getting some lessons. They'd told me to come early Friday (last) night and Saturday night, then stay all night to learn.\n\nI'd learned a lot last night, but I'd just been watching. Tonight, they were going to let me serve some of the customers. All the doms here were volunteers. Getting paid to do this was walking a thin line with prostitution, and none of the guys who did this really wanted money anyway. The Odd Place was the only club in this little city for people interested in BDSM, and the guys who ran the stage enjoyed their work.\n\nNew volunteers were welcomed as long as they were mature enough to listen to instructions from the more experienced doms. I appreciated how serious they were about their work, and I'd managed to not hate the dom that had worked on Suzie. He was a pretty chill guy, even if he did look exactly like a Viking.\n\n\"David,\" I nodded at him as I walked over to the stage. I started cleaning all the toys, something that was done every night before they opened, and after every use, and when they closed. Couldn't be too clean, was the rule.\n\n\"Nick,\" he nodded back.\n\nThere were four guys besides me who were going to be working that night. I had asked, last night, why there weren't any women doms.\n\n\"Girls that want to dom don't have to work for free to find subs.\" David had shrugged. \"We usually get a couple a year, train them, they work a couple weeks, then they go off and enjoy their harem.\"\n\nI supposed it made sense. It was basically all I wanted to, just to learn, then move on. I didn't want to volunteer my nights here long term. I'd been up front about that, and they'd seemed to appreciate the honesty.\n\n\"David,\" I decided to open up about why I was doing this, \"I'm here because the girl I'm seeing likes this and I want to learn how to do it for her. She's a regular here, Suzie Belmont.\"\n\n\"You're with Suzie?\" David said, sounding incredulous.\n\n\"For the moment,\" I confirmed. \"Anyway, I saw you worked on her last week and it seems like you know what she likes, so I was hoping you could give me some pointers.\"\n\nDavid looked me up and down, \"I suppose Suzie does have questionable taste in men,\" he finally said.\n\nI rolled my eyes, \"I know that I got lucky. I would like to stay that way. So will you help?\"\n\nDavid blew out his breath, \"yeah, I guess. But I'm warning you, man. If I hear you aren't treating her well, I will strap you up by your wrists and hang on you until your arms pop out of your shoulder sockets. I won't be alone either.\n\n\"Suzie's well liked here, she's one of ours. And she's had bad luck with men. I don't want to have to beat the heart break out of her again. It's not pretty.\"\n\n\"That's fair.\" I agreed. I certainly didn't want to be the reason that Suzie needed David for anything.\n\n\"So, it's like this, Suzie is a masochist, but she's not a sub. What I mean is, she enjoys pain, even a little degradation, but she isn't going to do what she's told unless she likes what you're telling her to do. You may not see this right away, because she's pretty open and agreeable, but don't push her if she resists, or you'll lose her.\"\n\nI nodded. So far, she'd only really resisted getting spanked. Would I have lost her if I'd kept going when she begged me to stop? Yeah, it seemed likely.\n\n\"Last week, you used nipple clamps and clothespins on her breasts.\" I said.\n\nDavid nodded, \"she likes to have her breasts worked on, but that's not the only thing. She likes getting flogged when she's feeling less horny and more just generally tense. She likes the violet wand when she's in a good mood.\" David paused and looked at my speculatively. \"No butt stuff!\" He added, glowering at me.\n\n\"Yeah, I know. What do I need to know about how to do these other things? Will I be able to operate the violet wand, and do some flogging, and breast torture stuff tonight?\"\n\n\"Flogging and wand play, no problem. Boob torture? I don't know. Not too many girls go for that, we don't always get one every night. But if we do, I'll bring you over and make sure you know what to do.\"\n\n\"Ok, thanks\" I said, still cleaning the various toys.\n\nWeek 6\n\n[Suzie]\n\nI went out to the Odd Place on Friday night. I'd been back to masturbating all week, but I was still wound up by Friday. Since abstinence week was over, I wanted to play.\n\nNick had ignored me all week, as normal, and it made me anxious. I guess part of me had thought that once he took his pleasure with me, he'd be a bit more invested in this, whatever we were doing. That we might move our relationship out of sex only and build a more genuine connection.\n\nOf course, I was fooling myself, no one ever turned fuck buddies into a long-term healthy relationship. The socially approved method for building one of those was to avoid having sex for as long as possible, not to start with it. When had I ever done relationships the right way, though?\n\nI got to the club early, at 8pm. The parking lot was only half full and I spotted a car that looked a lot like Nick's. But what would he be doing here? I dismissed it. I just had Nick on my mind.\n\nInside, I settled into my regular booth. Tess and her boyfriend weren't there yet so I leaned my back against the wall and stretched my feet out on the seat to watch the room. I couldn't see the stage from here, but I could see the dance floor. Only a couple people were dancing this early in the evening.\n\nI let the music's heavy beat soothe me. By 10 pm it seemed like Tess wasn't showing tonight. I sighed. I had really wanted to talk to her about Nick. At 11pm, I was feeling pretty relaxed, and it was time.\n\nI went over to the stage and signed in. I scanned the doms, checking for David and my eyes landed on a shorter guy with messy brown hair.\n\nNo, it couldn't be.\n\nThe guy turned around and I met his eyes. Nick.\n\nHe tilted his head at me and walked over.\n\n\"What are you in the mood for, Suzie?\" He asked.\n\nI couldn't say. I was too surprised to speak. Nick looked down at the sign in sheet where I'd written in my request.\n\n\"Flogging?\"\n\nI nodded.\n\nNick reached out his hand to me, \"well, come on then.\"\n\n\"Nick...\" I finally found my voice. \"You have to be vetted before you can work the stage, they don't just let anyone use it.\"\n\nNick nodded, \"I know. This is my third night, and David is letting me do some flogging. I'll do yours if you'll let me?\"\n\nI opened my mouth, but no words came out.\n\n\"Or,\" Nick shrugged as if he didn't care, \"I can let David handle you.\"\n\n\"No.\" I blurted. I wanted Nick to flog me. I wanted to know if he had it in him. Several of my exes hadn't been able to do it properly, either too gentle or too violent. If Nick could do this...\n\nI stared into his eyes and took off my shirt. He put some tape over my nipples, as professional as any of the doms here. I shivered. For the thousandth time, I wished I knew what he was thinking.\n\n\"Front or back?\" Nick asked me.\n\n\"Back.\" I said. I didn't want to look at Nick while he did this. I didn't want it to be sexual, not this time. This was about something deeper, to me. Did Nick know? Did he have any idea how it felt to be flogged, what I got from it? Well, maybe someday we'd talk about it. Not today though.\n\nI stepped up to the bondage frame and grabbed the bar next to the wrist restraints. Nick buckled them on. I could see nothing but the blank wall in front of me. I couldn't hear Nick moving, not over the music.\n\nThe first hit of the flog fell heavy on my back. I shuddered. The hit had landed on my left shoulder blade. He was using my favorite one, it was buffalo hide, thick and heavy. The hard pieces of cut leather thudded into my back, giving both blunt and sharp pain. First, there was the feel of each individual strap hitting, then the heavy thump of all of them together. It was like a base note and a high note in a song, the two feelings working in harmony.\n\nThump. The second hit landed on my right shoulder. It was perfect timing, perfect placement. Nick started a slow rhythm then, spacing the hits around my back. A couple hits missed the mark, getting me on the sides or too high or too low. But, as a whole, it was beautiful and calming.\n\nI lost myself in the feeling. This was just what I needed to release my pent-up anxiety about Nick. And Nick was giving me this!\n\nI can't ever let him go. I realized.\n\nIt didn't matter that I knew next to nothing about him. It didn't matter that he barely ever spoke. It didn't' matter that he ignored me all week. I would take all of that, if he would just keep meeting me, massaging me, fucking me, and now, beating me.\n\nI had no idea why, but I started crying. Quiet, gentle crying.\n\n\"Do you want me to stop?\" Nick asked tenderly in my ear.\n\nI shook my head, no. \"Never stop.\" I whispered.\n\nThe gentle thud of hits resumed until my entire back was on fire and each new hit sent me cringing into the wall in front of me. And then it was done.\n\n\"That's all for tonight, Suzie.\" Nick said as he rubbed a piece of fur over my raw skin.\n\nNick kissed me on the cheek.\n\n\"I love you.\" I whispered.\n\n[Nick]\n\nHad I heard her correctly? I took a deep breath, steadying myself. Those were the last words I'd expected to hear after I'd just turned her beautiful pale back into an angry red rash.\n\nThere is something deeply wrong with this woman. I thought, but at the same time I knew that there was something deeply wrong with me too. Somehow, we fit together, at least so far.\n\nHow could a woman as smart, as capable, as beautiful, as kind, as Suzie, want to be treated this way? For that matter, how could she want to keep meeting with me just for weekly sex sessions? Didn't she deserve more?\n\nI un-buckled Suzie's wrists and she sagged into me. I held her for a moment, feeling some deep protective urge swell inside me. Then I gently stood her up, un-taped her nipples, and put her shirt back on.\n\n\"I'm taking a break,\" I told David, who'd been watching me minutely while I'd worked on Suzie, pointing out every area that needed more attention.\n\nDavid nodded at me. Was it my imagination, or did he seem slightly more friendly towards me now?\n\nI shook my head. I couldn't help but feel that this entire club was an alternate universe where up was down and left was right. Everyone in here was some kind of crazy, and now that meant me too.\n\nI held my arm around Suzie's lower back and led her to her favorite booth. I sat her down, then I scooched in next to her.\n\n\"Thank you,\" Suzie said as she leaned back into the booth, wincing as her back hit the seat.\n\n\"I... I want to give you what you need, Suzie.\" I said, opening up more than I ever had before about my real feelings for her. She had said she loved me, though. Had she really meant it?\n\n\"It was really nice,\" Suzie said. \"Most are too gentle, or too rough, but that was perfect.\"\n\nI had David to thank for that. He'd spent quite a while working with me last Saturday to get my technique just right. And he'd met up with me last night as well and had me practice for several hours. My arms were exhausted, but for this moment, it had been worth it.\n\n\"Nick?\"\n\n\"Yes.\"\n\n\"Tell me something about yourself. I barely know you, but I feel so close to you after these six weeks.\"\n\n\"Well, here's the highlights. I'm an only child. My dad drank himself to death when I was six and my mom raised me until she got cancer when I was eleven. She died when I was thirteen and I moved form Russia to the US to live with my uncle.\"\n\n\"I'm so sorry,\" Suzie said, real sympathy in her voice. Everything I'd just done to her, and she was feeling bad for me?\n\n\"It was a long time ago,\" I told her. \"Tell me something about you.\"\n\n\"My highlights...\" She laughed. \"also an only child. My dad was an asshole who took off when I was twelve, and my mom moved us back here, where her family is from. I have a lot of family here, but I was closest with my grandpa until he died two years ago.\"\n\nI squeezed her arm. \"I'm sorry.\"\n\nSuzie shook her head, \"Why'd you go into engineering?\" She changed the subject, dismissing our mutual crappy family stories.\n\n\"My uncle was an engineer. When I moved in with him, he decided that what I needed, as a distraction from grief, was math - lots and lots of math. It seemed like I shouldn't waste all that math, so I picked a career that would make use of it and make money too. What about you?\"\n\n\"Oh, I just showed up at college with no idea what I wanted, and they told me that if I joined engineering, I could build a robot as a freshman. That seemed fun so I went for it. Then I went and picked the program with the absolute fewest women.\" Suzie laughed.\n\n\"Well, what we lack in quantity, you make up for in quality.\" I told her, meaning it.\n\n\"Nick, where are we going with this? With us?\"\n\n\"Anywhere you want, Suzie. As far as you want to go.\"\n\n\"And if I want you to myself? If I want to be your real girlfriend?\"\n\n\"Are you asking me out?\" I teased.\n\n\"No, I'm asking you for a commitment.\" Suzie said seriously.\n\n\"I'm committed to you.\" I told her. \"Whatever you want to call it.\"\n\n\"Why? Why me? Is it really just because I made a silly comment in class to Brad?\" Suzie asked.\n\n\"I liked you before that. That just gave me a good opening.\"\n\n\"Then why did you wait so long to fuck me, Nick? Why do you ignore me in class? Why won't you let me suck your dick?\" Suzie sounded exhausted as she rattled off her questions.\n\n\"Well, I've never had a girlfriend, Suzie. I didn't want you to know, at the beginning. I thought you would have found that odd, maybe you wouldn't have looked at me the same.\"\n\nIt was hard to say this, to be this vulnerable. But it was like we were in a magic place, here in Suzie's Odd Place. Here, I could share my secrets and hope to not be judged unworthy.\n\n\"Hmmm... Well, you're doing pretty well then, for your first time.\" Suzie glanced up at me sharply and sat up a little. \"Do you mean that last weekend was your first-time having sex?\"\n\nI nodded.\n\n\"You were that good your first time?\" Suzie said, incredulously.\n\n\"Was it good?\" I asked, hopefully.\n\n\"Yes, Nick.\" Suzie blinked at me. \"It was very nice. How did you do that?\"\n\n\"I've been doing a lot of research this semester, and not for school. I've actually not been doing very well at school right now.\"\n\n\"Yeah, me neither,\" Suzie laughed. \"Alright, where do we go from here?\"\n\n\"Well,\" I said, \"I do have two weeks left of our original agreement, and I have plans. Would you like to know what they are, or would you like to be surprised?\"\n\n\"God, Nick. You have been doing amazing at this so far. Surprise me. I can't wait to find out what your devious mind thinks up next.\"\n\n\"Alright, then.\"\n\nWeek 7\n\n[Suzie]\n\nAfter we talked for a while on Friday night, I went home with my heart full and a sore back. I didn't see Nick on Saturday, and he continued to ignore me in class.\n\nOn Tuesday, we were taking our class road trip to an engineering conference in San Francisco. The department had hired a bus to carry all the juniors and seniors. That meant, there were going to be a whole four girls, and forty-seven guys.\n\nI sat with the girls, all juniors, while I was a senior. We chatted about school, gossiped about professors, and I listened to them talk about their normal relationships with normal guys.\n\n\"So, Tommy, he's a runner, right? And he wants me to run too. And I'm like, yeah right! No way I'm getting up at 5am to go running.\"\n\n\"Oh yeah, I totally know what you mean. Jake is always wanting me to go to the gym with him, but I have to study. He's an English major, he just doesn't understand how much work we have to do.\"\n\n\"Your boyfriends must at least be fun in bed. My boyfriend Ron's an engineer, and he's so boring. Nothing but missionary sex, three times a week, on a schedule. He's cute though, and he's nice, so I don't mind.\"\n\n\"Oh, poor you! Tommy is so passionate. He even goes down on me sometimes, if you know what I mean.\"\n\n\"Wow, I wish that Jake would do that. At least he's got a massive dick and he really pounds me though. That's fun.\"\n\n\"What about you?\" The girls all looked at me.\n\nI opened my mouth, but how would they even begin to understand? Judging by this conversation they were all painfully vanilla.\n\n\"Sorry, I'm not dating.\" I kind of lied. Well, Nick and I weren't really dating. Who knows what we were doing?\n\n\"Aw, don't worry, you'll find someone.\" They comforted me.\n\n\"I'm good.\" I assured them. It's not like my life had really been missing a man in it. I'd established a comfortable routine before Nick showed up. After several miserable failures at relationships, I hadn't been looking for anything.\n\nI turned and looked towards the back of the bus, where Nick was sitting. He was reading a book, but he looked up and met my eyes. Then, he looked at his book again and the moment was broken.\n\nThe bus ride was endless and boring and only emphasized how little I could relate to my peers when it came to relationships. When we arrived, Nick disappeared without even a nod in my direction. The man was so frustrating.\n\nThe conference was Wednesday through Friday, and we were driving back on Sunday. Would Nick do something on Saturday, while we were here? I hadn't even brought my vibrator on this trip, because using it while sharing a hotel room with three girls seemed rude. So, I'd be really ready by Saturday.\n\nI glanced at my phone, no texts from Nick. I wondered if any of these other girls would be Ok with a boyfriend who never texted, barely ever spoke, and ignored them on all but one day of the week? But, that one day...\n\nAnd obviously he'd thought about me during the week. He made elaborate plans, scheduled classes, bought clothes, took lessons. I guess I could text him, but what if he didn't respond? I would feel like a fool.\n\nAt the conference I dived into the technical presentations. The more technical the topic, the better. Anything to distract me from Nick. I staffed the college's booth on the conference floor for my mandatory hours, chatting with prospective employers and students. I checked my phone obsessively, looking for any hint of a place and a time for Saturday.",
        "Friday night, I lay awake in the hotel bed. There had been no text. He would probably send something tomorrow, I told myself. It's not like I was in danger of not being here. None of us were going anywhere until Sunday. Still, I'd avoided committing to any of the other girls Saturday plans, keeping my time free.\n\nI jerked awake Saturday morning when my phone dinged.\n\nNick: Front entrance. 1:15. Wear a skirt.\n\nI glanced at the time; it was 10am. I must have finally got to sleep around 3am, 7 hours of sleep was pretty good I supposed. Two of the girls were gone and third was laying in bed playing on her phone.\n\n\"Morning sleepy head.\" She said to me cheerily.\n\n\"Morning.\" I replied, groggily. \"Hey, do you have a skirt I could borrow?\"\n\n\"Sorry, no. But I think there's a mall a couple blocks over if you need one.\"\n\nThree hours later I had showered, bought a knee-length skirt, changed, and eaten. I spent fifteen minutes pacing around the hotel restlessly, then went to the front entrance.\n\nMy phone dinged.\n\nNick: Blue Honda, License: 8DMA910\n\nI looked up and spotted the car. I got in and sat next to Nick in the backseat.\n\n\"Hi.\" I said.\n\n\"Hi.\" He replied.\n\nI decided not to ask where we were going and just settled back and enjoyed watching the city as we rode. The car must have been an uber or a Lyft, I supposed.\n\nWe ended up at a pier on the ocean front. I followed Nick as he walked down the pier. The early December air was a bit chilly, and my legs were cold as the wind blew under my skirt.\n\nNick walked up to a boat and held up his phone for his ticket to be scanned. The sign next to the gangplank read \"Alcatraz Tours.\"\n\n\"You're taking me to see Alcatraz?\" I asked, surprised.\n\nNick nodded.\n\n\"I've always wanted to see it,\" I admitted.\n\n\"Me too. I hoped you would like to go.\"\n\nNick led me up to the top deck of the boat. Because of the cool weather, there weren't many other people outside up here. Although I was wearing a warm jacket and a scarf, my legs were cold. I shivered.\n\nNick stood behind me and put his arms around me. His body kept the back of my skirt in place, and I leaned against the rail which kept the front down. It was not exactly a good idea to wear a skirt on the top deck of a boat, I thought.\n\nNick rubbed his hands over my stomach, unzipping my jacket to reach inside, then upwards to grope my breasts. I glanced around anxiously, but no one was looking at us. He ground himself into my back and kissed my neck. I popped my hips back and rubbed my ass into him, moaning a little.\n\nNick moved his hand down over my hips and over the back of my ass, then pressed his fingers into my vagina, testing its wetness. He slid my panties to the side, opening up access. And then his dick was in me.\n\nI gasped. He was going to fuck me, right here in the middle of the boat where anyone could see? Yes, he was. My pussy was wet and my nipples hard. I wanted this.\n\nNick barely moved, he just fondled and kissed me, while his penis jutted into me under my skirt. It had definitely been worth the effort to buy one that morning. My vagina and clit throbbed with arousal.\n\nAs we got out further from land, the boat started picking up speed and bouncing gently across the water. Every bounce pushed me into Nick's cock, and then out again.\n\nIt felt so wrong to be doing this in public, and so good. I'd flirted the line of public indecency before, but this was the most blatant I'd ever been. I loved that Nick was up for this.\n\nIt was a shame that the boat ride was only 15 minutes. By the time we arrived at Alcatraz, neither Nick nor I had cum. I shifted my thighs uncomfortably was we walked.\n\nGradually, however, my interest in the island distracted me from my horniness. I was really impressed with Nick for taking me on something almost like a normal date. He was just as fascinated by the history of the place as I was. We talked about Al Capone and the other famous prisoners, whether the one escape attempt had ended in drowning or success, and what it must have been like to be a guard here.\n\nI loved seeing how Nick's mind worked, outside of how creative and bold he was sexually. Where would we be when this semester ended? Would he ghost me, or was he in this for the long haul?\n\n[Nick]\n\nAs we toured the prison island, I kept an eye out for places for a quickie. Unfortunately, there were people everywhere, even on this cold winter day. I eyed the public restrooms speculatively. No, still too crowded I decided.\n\nEventually we headed outside to explore the rest of the island beside the prison. I steered us towards the less populated paths until we seemed to be alone. I checked my phone, 4pm and the last boat left at 4:30. Fifteen minutes to walk back... This would have to be quick.\n\nI paused, and Suzie paused next to me. I held her arms and kissed her, turning and pushing her against a wall. I unzipped my pants and slipped her panties aside and thrust my cock into her. She was so warm and wet. The feeling was incredible.\n\nI had no idea what I was missing for so many years, jacking off by hand. The past two weeks had been agonizing as I'd waited to be able to fuck Suzie again. I suppose I could have called her anytime, and she probably would have been up for sex. But I had been nervous. What if she got bored of me, if I saw her more often and our sex was more casual?\n\nSo, I'd waited. And now, I had these 15 minutes. I pumped her as hard as I could. I came in 5 minutes, but I kept pumping, rocking my pelvis into her clit. I reached under her shirt and fondled her boob, pinching her nipple as I sucked on her ear.\n\nWhen my dick softened I dropped to my knees and flipped Suzie's skirt up and pressed my mouth into her pussy. I dug my tongue into her vagina, tasting my own cum. Then I licked her clit furiously. There wasn't much time left.\n\nMy phone alarm sounded.\n\nGroaning in disappointment I stood up.\n\n\"We have to head back, or we'll miss the last boat.\" I told Suzie.\n\nHad she cum? Had she enjoyed it?\n\nSuzie kissed me again, then straightened her underwear and skirt.\n\n\"Ok Nick. Thank you.\"\n\nI resisted the urge to ask her inanely if she'd cum. There was nothing I could do about it now if she hadn't and if she had I didn't want to take her out of that head space.\n\nOn the boat ride back, I watched for signs that she was still horny, but she seemed satisfied. Anyway, she could work out her frustrations later tonight if she still had some.\n\n\"Hungry?\" I asked Suzie as we took the boat back to San Francisco.\n\n\"Yes!\" Suzie said enthusiastically.\n\n\"What do you like to eat?\"\n\n\"Mmm... Honestly, pizza sounds really good right now.\"\n\n\"Pizza it is.\" I searched on my phone for pizza near the pier. My budget was a bit too stretched to get an Uber or a nice restaurant, so I was glad that she picked something easy and cheap. I would have maxed my card if she'd wanted something fancy, though. I was smitten.\n\nWe walked twenty minutes to find pizza, then ate leisurely for an hour, talking about inconsequential things.\n\nAfter eating, we walked along the coast to Golden Gate bridge. The pizza place had been on the way, but it was still an hour walk to get to the bridge. We stared at the iconic red structure.\n\n\"Beautiful.\" Suzie said.\n\n\"Yes,\" I agreed, looking at her.\n\nI checked my phone, 7:30pm. I booked an Uber.\n\n\"Come on, we have somewhere to be, but first let's stop by the hotel. I need a shower and a change before our next appointment.\"\n\n\"Hmm... I suppose I should shower too, then?\" Suzie asked.\n\nI shrugged, \"that's up to you.\"\n\nI hoped she would like what I had planned next. This was going to be a lot different than what we'd done so far.\n\nAn hour later, our Uber pulled up in front of a plain looking building. I'd come to check this place out last night, though, so I knew we were in the right place. I led Suzie to the door and rang the doorbell, looking up at the camera I knew was there.\n\nThe door buzzed and we went in. We went up the stairs and entered a small room. The room was dimly lit with thick burgundy carpet and gold and black wallpaper. Erotic bondage art lined the walls.\n\nI walked over to an old-fashioned desk that looked like it had come out of a 1940's hotel.\n\n\"Good evening sir and ma'am.\" An older man, who also looked like he'd come out of a 1940's hotel, greeted us from behind the desk. \"Please read the posted rules, then you can sign in.\" He gestured at a massive sign behind him that was lettered in bold, but elegant, script. It was the same guy who'd been here last night, but he gave no sign that he recognized me. That must have been due to discretion, because I'd spent a good ten minutes talking to him.\n\nI had read the rules thoroughly on my visit last night, so I already knew what they said. I watched Suzie as she read them, trying to judge her mood.\n\n\"Seems reasonable.\" Suzie nodded as she finished reading the sign. Apparently, she was not fazed by being brought to a private sex club with rules like \"No ejaculation in carpeted areas.\"\n\nSuzie signed the legal form that released the club form legal responsibility and confirmed her understanding of the rules. The receptionist, a volunteer I knew from my visit the night before, opened the doors for us graciously. All the people who \"worked\" here were volunteers. Because of all the legal mess around sex, there was nothing for sale anywhere in the club. Apparently, some rich deviant had donated the space, and anyone who could follow the rules was welcome.\n\nI followed Suzie inside. This area was a large room with old wooden floors that were polished and glossy. Along a wall near the entrance was a long glass topped table with a variety of sex toys laid out under it and a lot more hanging on the wall behind it.\n\n\"Those toys were donated for people who can't bring their own. They can be borrowed by one person a night and are cleaned thoroughly every night.\" I told Suzie.\n\n\"You came here last night?\" She asked.\n\nI nodded.\n\n\"Suzie, tonight you are in charge. I want to be as vulnerable to you as you have been with me. I want you to have the control. Do you want that?\"\n\n[Suzie]\n\nDid I want to be in control?\n\nI looked at Nick. He was always stoic, but I thought I saw some nervousness in his eyes. I looked around at the lovely room with all it's lovely toys. I considered the club rules that I'd agreed to, and Nick's offer.\n\n\"Yes.\" I said. \"But you never told me what you like.\"\n\n\"I don't know what I like, Suzie. I promise I'll tell you if I don't like something.\"\n\n\"Some people like to protest, to say 'stop', but don't really want to stop. Do you think you'd like that?\" I asked him.\n\nNick shrugged, \"I don't know.\"\n\n\"Well, I don't think we'll try that tonight. If you say 'stop,' or 'no,' or even look unhappy, I'll stop and ask if you want to continue, deal?\"\n\nNick nodded.\n\n\"Well, let's see what's on offer.\" I led Nick over to the display of toys. It was odd to be the one in charge, the one leading. But as Nick followed me, I knew I would enjoy it.\n\n\"How do you feel about anal?\" I asked Nick.\n\n\"I would try it.\" Nick said hesitantly.\n\n\"Caning?\" I asked, pointing at the long thin rods. I imagined whipping one into Nick's ass and realized I'd never actually seen his ass. I'd never seen him completely nude. Well, we'd have to fix that oversight tonight.\n\n\"It sounds painful, but I don't know. Maybe I'd like it?\"\n\n\"And what if I told you to take off all your clothes and follow me around nude like my little puppy for the rest of the night?\" I said.\n\n\"I... I think I might like that.\" Nick admitted, sounding uncharacteristically nervous.\n\nI grinned. This was going to be fun. \"Ok, then do that.\" I commanded.\n\nNick slowly stripped for me. First, he took off his shoes, then his socks, tucking them tidily into his shoes. He then slid off his jacket and folded it carefully and put it on top of his shoes. He pulled his t-shirt off and folded it too, putting it on the pile. He slowly unbuttoned his jeans and unzipped them, then slid them down and off.\n\nI was a bit disappointed to see fashionable boxer briefs instead of the ugly white underwear I'd last seen him wearing. That would have been a delicious embarrassment for him. But then he was taking off his boxers and his half-hard cock swung out, free. He folded the underwear and placed it carefully on his pile.\n\nI examined him. He was pale, and his stomach was flabby. He had no muscles that I could see. But his cock was beautifully colored, a bit darker than his pale skin, and decently sized. Maybe slightly above average, based on what I'd personally encountered anyway. I never trusted what I saw in porn, those guys were all abnormal, I was sure.\n\nI walked around Nick and examined his back and butt. Flabby white ass. No tattoos, no piercings, I noted disappointingly. I came around to his front again. No flush of embarrassment. No redness at all on his face. I wondered what it would take to embarrass Nick.\n\nHe had a little hair, thin patches of it covering the space between his nipples and down a line to his cock. He'd obviously trimmed his bush, but it wasn't shaved. I approved. Shaved genitals always looked pre-pubescent to me and rather off-putting.\n\nI turned to the person behind the toy display.\n\n\"Is there somewhere we can stow these clothes for the night?\"\n\nThe older woman nodded, \"Yes, I can keep them behind the case here, there's some cubbies for people's stuff.\"\n\n\"Hand her your clothes,\" I told Nick. \"Thank you!\" I told the woman brightly. I was already having a lot of fun.\n\nShe nodded, \"not a problem. Just let me know when you've decided what you'd like to borrow. The anal plugs and dildoes are 3D printed or silicone cast by local hobbyists. If you take one, it's yours to keep. You can choose to donate for the supplies to make more, same for the candles.\"\n\nI scanned the assortment and considered Nick. He wasn't technically a virgin anymore, and he clearly had an appreciation for kink, but he was still very new to all this. I wanted him to enjoy it, mostly, so I would stick to the lighter toys.\n\nI picked out a light suede flog, much less aggressive than the heavy leather one that Nick had used on me last week. I also picked out a collar and leash, a small silicone anal plug, and a feather duster. There were some sample packets of lube, and I took one. I wanted something a bit more, though, something where Nick could get a bit of a taste for whether he enjoyed the pain. I finally settled on a wax candle.\n\n\"If you want to play with that, you go to the fire room. The guy in there will light it for you and supervise.\" The woman pointed at a door with a sign that said 'FIRE' in bold letters.\n\n\"Great, thanks!\" I said. I wished there was a place like this in our city. This was awesome. I put twenty dollars in the tip jar for the plug and candle. It was my emergency money because I hardly ever went anywhere that didn't take credit.\n\n\"Put on your collar, Nick. And you can carry all the rest of that stuff.\"\n\nI took the leash and headed out across the room to explore, my puppy following behind, his hands full of toys. There were a few other couples and groups set up on various pieces of equipment, but the place could easily accommodate twice as many as were here.\n\nThere were several smaller rooms as well. Each one appeared to have a different theme. There were so many choices! I finally settled on a smaller room with just an A-frame in it. I sprayed down the frame and the cuffs that hung from it with the disinfectant that was on a small table by the door. There were also paper towels and a trash can. A helpful sign instructed that people who didn't clean up after themselves would be barred from ever coming back.\n\n\"Put those on the table here, Nick.\"\n\n\"Yes ma'am.\" Nick agreed and put his toys down carefully on the table.\n\nHe was good at getting into a role. I remembered how he'd been as a professor. I had like that, and I liked how he called me ma'am now.\n\nI buckled Nick's hands to the frame and pushed his legs apart, so he was standing spread-eagle. I picked up the light flog and flicked my wrist, landing a blow on Nick's back. I frowned. Did he even feel that?\n\n\"How does that feel?\" I asked.\n\n\"Ok.\" Nick said.\n\nIt had been a while since I'd flogged someone. Still, I was able to get into the rhythm of it fairly quickly. I worked his back until it was light pink, and he began to flinch just a little. Then, I moved on to his ass and upper thighs until I got the same result.\n\nI rand the feather duster all up and down his back and butt and along his balls as they hung between his legs. Nick shuddered at the gentle touch on his lightly flushed skin. I squeezed his balls with my hand, rolling them gently inside their skin sac.\n\nI kissed Nick's back, then down a line to his ass, then down and kissed his balls. I sucked one soft lump into my mouth and swirled my tongue over it. Then I did the other.\n\nNick groaned.\n\nI opened up his ass cheeks and examine his butt hole. It was pink and wrinkly. Not very cute, to me, but Nick had actually licked mine a couple weeks ago. I declined to return that favor.\n\nInstead, I opened the packet of lube and spread it over his asshole and the butt plug. Then, I aimed it at his puckered hole and gently, slowly, pushed it in.\n\n\"Relax,\" I said as I eased it in.\n\nNick's tensed butt cheeks relaxed, and the plug slipped inside.\n\n\"Don't let it come out.\" I instructed.\n\nThen, I picked up the flogger and worked Nick's ass until the gentle pink flush was back. Then, I went around to Nick's front and flogged him from his nipples down to his pelvis, slowly. Nick's penis was hard and pulsing, cum dripping out of it.\n\nI ran the feather duster over Nick's chest, but not his penis. \"No bodily fluids on the borrowed toys.\" Was one of the rules. Although it was unlikely that we'd ever be back here, I didn't want to be rude.\n\nI released the cuffs and Nick sagged and jiggled his arms, working out the soreness from being bound for so long.\n\n\"Clean up yourself and the floor,\" I told him, nodding at the paper towels and disinfectant.\n\nWhen he got on his knees to clean the floor, I flogged his butt and back. He spent rather longer than necessary cleaning.\n\n[Nick]\n\nI couldn't believe how arousing it was, to be naked and kneeling before Suzie while she flogged me. If I had been turned on when I was ordering her around, imagining how turned on she must be with the roles reversed made this even hotter for me.\n\nAnd the plug in my butt. Wow! I had never put anything in my ass before. It was like a constant little tease reminding me that all this was about sex.\n\nWhen I couldn't pretend to be cleaning anymore, I got up and threw the used paper towels in the trash.\n\n\"Hold your toys,\" Suzie told me, then she sprayed everything with disinfectant.\n\nSuzie led me by the leash across the room. I felt so exposed like this, nude, collared, a plug sticking out of my ass, and holding a feather duster, a flog, and a candle carefully to avoid any of them touching my cock. While I'd just cleaned it, there was still some new cum pushing out and I didn't want to get the toys dirty.\n\nI followed Suzie to the 'Fire' room, guided by the gentle pull on my neck. Inside, there was a metal table and an old man wearing chaps, and nothing else. His limp cock hung out of his bushy gray pubes. I was pretty sure this sight would have disgusted me normally, but in my current mood, it didn't bother me at all.\n\nSuzie walked over and talked to the guy quietly, apparently completely nonplussed by his exposed cock. I couldn't make out any of what they said.\n\n\"Lay on the table, face down.\" Suzie said.\n\nI obeyed. It was actually relaxing to not have to think or plan. All I had to do was do what I was told.\n\n\"This will hurt,\" Suzie said. \"Tell me if it's too much.\"\n",
        "A hot, stinging sensation bloomed from the middle of my back. But it was over quickly, leaving a pleasant warmth. I sighed.\n\nAnother jolt of pain, and then the warmth, followed. Spot after spot of pain and pleasure across my back and then my butt. I clenched my cheeks and the pressure on the butt plug increased. My cock twitched in response to the varied sensations.\n\n\"Do you think you can take it on you balls?\" Suzie asked.\n\n\"Yes.\" I said.\n\nI cried out as the hot wax plopped onto my balls. God, that was intense.\n\n\"Again?\" Suzie asked.\n\n\"Yes.\" I said, my brain stuck in some sort of adrenalin high refused to be reasonable about this. I didn't even know if I was enjoying it. I just, wanted to feel that burn again.\n\nAnother hot plop and I shuddered and groaned, and another drop on my balls. I tensed and writhed a little.\n\n\"Don't close your legs,\" Suzie instructed.\n\nI opened my legs, obediently. Was she going to do this more? How much could my balls take? Three more drops and I felt tears prickling at my eyes.\n\nAnd then a new sensation started at the top of my back. Suzie was peeling the wax off of me. Fresh new waves of pain emanated as she ripped out hairs. Fear swept through me as I realized what this meant for my balls.\n\nIt was both not as bad as I'd imagined, and somehow worse when Suzie ripped the last of the wax away. I screamed a little. But it was a manly scream, absolutely.\n\nSuzie dropped her scarf over my eyes and tied it behind my head.\n\n\"Turn over,\" she said.\n\nThe smooth metal felt cold on my raw back. It was disorienting to not be able to see where Suzie was or what she was doing. But, also, it was exciting.\n\n\"Don't move.\" Suzie told me.\n\nThen, I felt her getting on top of me, mounting me. She began rocking her hips, riding my cock. I yearned to thrust into her, to grab her hips, to feel her breasts, to tear off her scarf and watch her boobs bounce and to look in her eyes. But I resisted doing any of those things. Her instructions had been clear, and I struggled to abandon myself to the total loss of control.\n\nI tensed, I was almost there, about to cum. A plop of hot wax dropped onto my chest. It disrupted my burgeoning orgasm and I flinched. Was Suzie holding a candle while she rode me?\n\nNo, I suddenly understood what was happening. Suzie was riding me, and the old guy was using the candle. And I didn't think the timing was an accident, either. Between the wonderful feeling of Suzie's vagina and the burn of the candle, I would stay hard, and I wouldn't be able to cum, not if the old guy did his job right.\n\nOh, this was clever. I very nearly smiled as I realized Suzie's plan.\n\nI had no idea how long it lasted, being kept on the edge of orgasm, Suzie fucking me. The plug in my ass and the cold hard table beneath my burning raw back and butt also adding to my overall sensory overload. I had never felt anything like this.\n\nThe first time I almost came despite the hot wax, a second glob landed on one of my nipples. I hissed and flinched. But now, the pain was all mixed up in the pleasure and I almost craved the hot sting that landed on my other nipple a couple minutes later.\n\nI guess my chest was too well covered, then, because the next thing I felt was a mass of wax being yanked off my chest. I shuddered and jerked, and I came. Suzie rode me as I pumped her full of my semen.\n\nI was completely drained when it was over. I laid there, insensible as Suzie got off me. Then I felt a cool wet paper towel wiping away the cum on my cock. I groaned.\n\n\"Can you get up?\" Suzie asked.\n\nI laughed. I couldn't even remember the last time I'd laughed. All my stress I'd carried for so long, all my restraint and control, it was just gone. How long would this amazing feeling last?\n\nI gathered my will and swung my feet over the edge of the table and pushed myself up to a sitting position. I felt Suzie wrap her hands behind my head and untie her scarf. She kissed me, then pulled the scarf away.\n\nI looked at her in wonder. \"That was incredible. I feel amazing. Thank you.\"\n\nSuzie smiled at me joyously. \"I'm so glad you enjoyed it. I did too.\"\n\nI glanced at the old guy, his dick was no longer flaccid, but was sticking out proud. I laughed again.\n\n\"Thank you too!\" I said. I had no idea why I felt so happy, but I wasn't sure I cared why either. Was this what Suzie had felt after I'd flogged her last week? She had seemed very relaxed.\n\nI hopped off the table and stumbled a little. Whoa. Suzie wrapped her arm around me.\n\n\"Take it easy, there.\" She said.\n\n\"I'll clean up, you take him out to sit down.\" The old guy told her.\n\n\"Thank you,\" she flashed him her brilliant smile.\n\nA strange warm feeling spread through my chest at that smile. It felt like love, I thought. I had thought I really liked her before, but now I was having all sorts of more intense feelings.\n\nSuzie sat me down on a vinyl chair in the main area.\n\n\"How are you feeling?\" She asked.\n\n\"I feel, light? Like, really good. Is it always like this?\" I asked.\n\n\"Not always, no. But you seem to always do that to me, so I'm glad that I could return the favor.\" Suzie said.\n\n\"I make you feel like this?\" I asked.\n\nSuzie smiled at me mischievously, \"what if I asked you to bend over my knee right now so I could spank you?\"\n\nI stared at her. \"Ok,\" I agreed, staring to lay over her lap.\n\nSuzie laughed, \"Yeah, that's what you do to me. No, stop, I wasn't serious.\"\n\n\"Oh. How long does this last?\"\n\nSuzie shrugged.\n\n\"Next week, I want you to suck my cock in front of the class,\" I said, suddenly feeling like sharing.\n\n\"What?\" Suzie asked, surprised.\n\n\"Yeah, because it's like, all this started because Brad said he couldn't find a woman to suck his cock, or like sucking it or whatever. And he just ignored your comment. And I thought it would be really poetic to end this with showing him how wrong that was, to ignore you I mean. And you like pushing limits, and you like exhibition, and I want you to like me, so much, you know. So, I thought, if you sucked my cock in class, it would turn you on enough to agree to dating me exclusively. I want to be your boyfriend, Suzie.\" I ended, lamely.\n\nSome part of the back of my brain was telling me to shut up, stop talking! But wherever my inhibitions were, they weren't present right now.\n\n\"Nick...\" Suzie said softly. \"I want to be your girlfriend. But I'm not sure it's a good idea to give you a blow job in front of the whole class. We could get in serious trouble.\"\n\n\"No, I got that all figured out, Suzie. We won't get in trouble.\"\n\nSuzie just shook her head at me, grinning wryly. \"I love your crazy mind, Nick.\"\n\n\"I love you too.\" I said. I only realized after the words came out of my mouth that that wasn't exactly what she'd said.\n\nSuzie kissed me gently. \"We had better get back to the hotel, we have to be up early to get on the bus home.\"\n\nWeek 8\n\n[Suzie]\n\nNick had told me more about his feelings last night than he had in the previous eight weeks, and I was still reeling. But part of me didn't trust it. He had been in a heady state when he'd said all those things, and I wasn't sure he really meant it.\n\nHe'd said he loved me.\n\nI had said I loved him too, in much the same circumstances.\n\nBut could we really love each other? Or were we just overcome by lust. And did it even matter, really?\n\nI shook my head as I stared out the window, ignoring the chatter of the other girls for the entire bus ride. Nick was back to ignoring me too, not that I'd actually tried to talk to him as we gathered on the bus.\n\nWas Nick serious about wanting me to suck him off in front of the class? The idea did turn me on, I admitted. But how could Nick guarantee that we wouldn't get in trouble? I believed our classmates wouldn't make trouble, but Professor Chaban absolutely would. A professor couldn't just ignore people having sex in the classroom.\n\nUnless... I put together the facts in my head, a suspicion beginning to form.\n\nNick Balakin, born in Russia, moved to America to live with his uncle, his mother's brother, at 13. An uncle who thought the best way to deal with grief was math.\n\nProfessor Chaban, Russian guy, right age to be uncle to a college student, obsessed with math.\n\nNick, who had role-played as a Russian professor in Professor Chaban's own classroom. And weren't the classrooms usually locked on weekends?\n\nI narrowed my eyes as the facts fell into place. Nick was Professor Chaban's nephew. That was how he knew we wouldn't get in trouble, he had was family. Did that mean he meant for the professor to watch us too? Or did he have some plan to keep his uncle away?\n\nHonestly, old guys were kind of hot. That old man at the club last night had definitely added to my general arousal, especially when he got hard watching my boobs bounce as I fucked Nick. I imagined Professor Chaban watching me suck his nephew's cock. My clit twitched at the idea.\n\nStill, it was risky.\n\nI really wanted to do it.\n\nOn Monday and Wednesday, Nick ignored me in class. On Friday, when I got to class, I met Nick's eyes. He nodded, slightly.\n\nToday.\n\nIt was the last day of class of the semester. It would have to be today. I sat down, nerves making my body tingle with anticipation.\n\nThe minutes ticked by. What was Nick waiting for? Finally, five minutes before class time Nick got up. My phone pinged.\n\nNick: Trust me.\n\nIt was probably stupid, but I did trust him. He was thoughtful, meticulous, and possibly the most controlled person I'd ever met. I trusted him absolutely.\n\n\"Hey Brad,\" Nick said as he reached the front of the room. \"Did you ever find a woman to suck your dick?\"\n\n\"If I had, I would have told all of you about it,\" Brad sulked.\n\n\"Thought so. I found a woman to suck my cock though.\" Nick began unbuttoning his pants as she spoke. \"In fact, she's coming here, to suck my cock in front of you all, just to show you how it's done.\"\n\n\"You are fucking delusional,\" Brad laughed at Nick.\n\nNick stared at Brad as he pulled out his penis. It was half-hard and not looking quite as impressive as it could.\n\nNick never once looked in my direction. He was leaving the final choice up to me, but he was showing me he was all in. He would sit up there, his dick hanging out, and he wouldn't even be mad at me if I just left him there looking like a fool.\n\n\"God, Nick. No one wants to see your pathetic cock. What woman would want to even date a pasty, chubby, wimp like you anyway?\"\n\nBrad was such an asshole. My face flamed red with anger listening to him talk like that to Nick, who was a way better man than Brad could ever aspire to me.\n\nI hopped out of the desk chair a bit violently, making enough noise that everyone's eyes turned in my direction.\n\n\"Haha, your pathetic cock has made Suzie want to vomit,\" Brad laughed. \"Can you make it to the bathroom Suzie?\" He asked with mock concern.\n\nThe rest of the class hooted with laughter. I strode to the front of the room and stopped in front of Nick, holding his gaze. His expression was as calm and inscrutable as ever. Even a whole room of guys laughing at his penis couldn't embarrass him. That confidence was so hot. The pounding of my blood through my ears nearly drowned out the chatter of the guys behind me. But I heard when they went silent.\n\nI dropped to my knees; eyes still locked with Nick's. When my knees hit the floor I dropped my gaze to his cock, now full hard and no longer a laughing matter. I grabbed it with one hand and held his balls with my other hand.\n\nThen, I slowly slid my mouth over Nick's penis. I rolled my tongue around his foreskin. It was soft and perfect, really. I suddenly felt sorry for every circumcised guy I'd ever known. This foreskin stuff was great!\n\n[Nick}\n\nI raised my eyes from Suzie's to meet Brad's shocked gaze. I smirked at him. I knew that Brad's big mouth would piss Suzie off, and nothing excited her like a little anger and public nudity. Brad had practically delivered Suzie to me, from the first.\n\nHe was too arrogant and self-centered to ever realize that, though.\n\nI broke eye contact with Brad and swept my gaze across the room. Twenty guys, and none of them had the balls to ask Suzie out. All of them were watching now as she sucked my cock enthusiastically. I doubted that any of them could even imagine what we'd been doing this semester.\n\nI could barely believe it, and I'd been there. None of us had any clue about the treasure we'd had in our class, this woman.\n\nI watched the clock. I'd asked my uncle to show up 15 minutes late today. I knew he was probably waiting outside the door, watching through the crack. He wouldn't interfere, though, not after he'd been so worried about my lack of having fun.\n\nSuzie sucked my penis in and out, keeping rhythm with her hand. He other hand gently fondled my balls. I closed my eyes and focused on the feeling of Suzie's mouth on my cock.\n\n\"I'm coming,\" I warned her.\n\nSuzie grabbed my ass with both her hands and pushed her mouth even farther on to my cock. I groaned and tensed as I came into her mouth. She swallowed my whole load and kept her mouth on me until the last twitch of my penis.\n\nThen, she stood up and kissed me, opening her mouth so that I could taste my own cum on her tongue. I squeezed her ass and pulled her close. I broke off the kiss and whispered in her ear.\n\n\"You are magnificent.\"\n\nThen I let her go and closed up my pants. I led Suzie to her desk, blocking her view of the rest of the class. I didn't want her to feel any embarrassment right now. I wanted her to able to bask in the joy of her boldness. I kissed her again after she sat, then I went to my desk, further back in the room.\n\nThirty seconds later, just as the other boys' mood was beginning to turn from shocked to inquisitive, my uncle entered the room. Yep, he'd definitely been watching.\n\n\"Gentlemen,\" My uncle said to the room, \"Lady,\" he nodded at Suzie genially, \"I apologize lateness of me. I hope you weren't borrred waiting for me, yes?\"\n\n\"No...\" Brad said when no one else spoke.\n\n\"Good. Now, we have little time today, and much to learrrn.\" And then he launched into a complicated math problem that would have challenged the boys in the class even had they not been completely unable to focus.\n\nI glanced at Suzie and marveled. She appeared to be completely absorbed in the lesson. She didn't even notice how all the boys kept looking at her every half a minute. I didn't like the look that Brad was giving her though, he was speculative. He wouldn't get anywhere with her, though, I was pretty sure.\n\nI frowned. Maybe it had been a mistake to show her off like that. Well, it was too late now. Whatever came of it, I would take care of it. Somehow.\n\n[Suzie]\n\nAfter class, I was deliberately slow gathering my notes, putting them in my shoulder bag, and getting ready to leave class. I wanted to leave plenty of time for everyone to clear out. I had managed to focus on class, but now I couldn't believe I had done that, sucking Nick's cock in front of everyone.\n\nIt was one thing to go on stage at the Odd Place, where it was expected. It was another thing entirely to bring my kinks to school. I could have put my whole future, my whole career, in jeopardy, just because one guy dared me to, and another pissed me off. What was wrong with me?\n\nI took a deep breath and left the classroom. At least I wouldn't have to see any of these guys again until after winter break. I was sure I wouldn't hear from Nick; he'd gotten what he wanted out of me. I was a fool if I thought I meant anything more to him than sex. I'd been through this before, great sex did not a relationship make, but I always went for it anyway. A slave to my libido.\n\n\"Suzie.\"\n\nI jumped. I had been so wrapped up in my self-criticisms that I hadn't noticed anyone was in the hall when I walked out. I looked up.\n\n\"Nick?\" I asked, surprised he was still here. I could feel my face turn red. How was it that I, who regularly exposed myself, found what we did today so embarrassing, and he - a total noob, didn't?\n\n\"May I walk with you?\" Nick asked.\n\n\"Sure.\" I said, feeling confused. Why did he want to be with me now? He'd disappeared on me at every opportunity before.\n\nNick slid his arm around my waist as we walked. I tingled at his casual gesture of ownership. I wanted to belong to him. I wanted him to belong to me. I just, didn't really believe he meant any of the things he'd said after I'd fucked him in San Francisco.\n\n\"What now, Nick?\" I asked him, after we'd walked for a while.\n\n\"I'd like to be with you, walk with you to wherever your going.\" Nick said, taking my question literally.\n\n\"No, not 'now,' not like that. I mean, where do we, you and I, go from here? What are we?\"\n\nNick stopped and looked at me, frowning.\n\n\"We talked about this, last weekend. I want you to be my girlfriend, and you said you wanted it too? No?\"\n\n\"Yes, but well. Men say all sorts of things they don't mean after sex.\" I said hesitantly. Like I love you, I didn't add.\n\nNick wrapped his arms around me and kissed me, deeply. He ran his hands up and down my back, then down over my ass, squeezing a butt cheek.\n\n\"I meant everything I said that night, Suzie.\" Nick said, his breath tickling my ear as he whispered into it.\n\n\"You said, you loved me.\" I reminded him; in case he'd forgotten that part.\n\n\"Yes.\" Nick released me and stepped back, looking into my eyes seriously. \"I love you, Suzie. Please don't doubt that.\"\n\nA tension I didn't know I'd been holding on to eased inside me, but I still couldn't quite accept what he was telling me.\n\n\"You barely know me.\" I protested.\n\n\"Not true,\" Nick replied. \"I know you are freakishly smart, honest to a fault, brave, stubborn, and adventurous. You have been so open, so vulnerable with me, how could I not know you, Suzie?\"\n\n\"I... I am not sure I know you,\" I said, slowly.\n\nNick was quiet for a moment. \"That's my fault,\" he said. \"I haven't been vulnerable with you, not until last week. I am trying, though. Will you give me a chance, or are you done with me now? Now that are agreement is over?\"\n\nI studied Nick's face. I couldn't read him at all. Thinking back, I'd only seen him smile once since I'd known him, last week. I'd never seen him cry, or turn red with embarrassment, or even be angry. But he'd done so much for me. He'd spend the last two months planning our every weekend for my pleasure. He'd never pushed me beyond what I was willing to accept.\n\nDid I really need to read his emotions on his face, to know what was in his heart?\n\n\"I think I love you, too.\" I said, finally. \"I want to see if we can have a real relationship, one that's more than just sex, more than just once a week.\"\n\n\"Thank you,\" Nick breathed softly.\n\nI kissed him, his soft lips, his warm tongue, his arms enfolding me, I didn't want it to end. And for the first time, I was beginning to believe that maybe it didn't have to."
    ],
    "authorname": "JuanaSalsa",
    "tags": [
        "exhibition",
        "oral",
        "massage",
        "flogging",
        "wax",
        "anal",
        "role play",
        "college",
        "consensual"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/a-kinky-engineers-romance"
}