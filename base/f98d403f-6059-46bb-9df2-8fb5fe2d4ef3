{
    "title": "The Achen Enforcer Ch. 08-09",
    "pages": [
        "There's no sex in Chapter 8, but things heat up after that. Thanks for reading. -Harp\n\nCHAPTER 8\n\nIn the morning, Bode watched the exiles carrying food to the Achens on rolling carts. The Achens were noisy, Bode hearing it distantly from his cell. Devos brought Bode out in the morning, taking the recording device with a nod and putting it in his pocket. Bode's voice was still coming and going, but he thought whoever played it would understand the content.\n\nThe Achens had slept on the same sands on which he and the exiles now stood, clustered at the far end with a makeshift place for a toilet, nothing more than a corner of hanging cloth. The Achens were complaining and making demands. They flocked, congregating in shrill scolding clumps that swayed and bumped and followed any exile who approached.\n\nAnis was evidently the speaker this session. She didn't look pleased about it as she walked up the stairs to the raised platform from which the magistrates had given the reaping speech every year. When she arrived, Anis held up a slate. Bode saw Achens stare, watching her handling it. It was strange for an Achen to see an exile using advanced technology.\n\n\"I have a list here of thirty-six Achens who, when I call their names, will be taken over there.\" Anis pointed to a blocked-in area without looking at it, the place where the candidates used to be kept before they were displayed. \"To make things easier, we have these.\" Anis held up a thick handful of braided red cloths without looking up from the slate. \"If we call a name, and you see that person, be the first to tell us and we will give you a braid. Each braid is equal to an extra ration of food.\"\n\nShe looked up. The Achens had gone quiet, staring at her like they didn't understand.\n\nAnis looked down at the slate. \"Lita, Ninth Block,\" she said. She repeated herself. \"Lita, Ninth Block.\"\n\nThere was more silence. \"Here,\" a faint voice finally called. \"She's here!\"\n\nA small fisticuffs followed and a path opened for armed exiles to a woman who was trying to fade into the crowd. She turned and began to shove to get past people as the exiles moved in, but the other Achens repelled her, one of them demanding his braid, the exiles passing out several.\n\n\"What are you doing? You can't touch me,\" Lita said when the exiles got hold of her, dragging her to the front. \"Why me? I haven't done anything. Help!\" she cried to the other Achens, who didn't look at her. \"Help me! Somebody help!\"\n\n\"Meldis, Third Block,\" Anis said.\n\nBode watched. Now people's eyes were darting around, looking for specific members of the Achen community, anticipating the next name. Most Achens had ignored the exiles, benefitting from their labor without interacting with them directly much and treating them as invisible. But some had been more active.\n\nThe Achens saw the pattern right away. Lita had been the person to contact if you wanted to go down and have some time with the twenty exile fighters, kept in restraints, the night before they contended in the games.\n\nThe Achens immediately writhed in a local spot and produced Meldis, a friendly looking and handsome man currently crying out that it was a mistake, he was innocent. Meldis had enjoyed occasionally going out to the farms in a transport and choosing a woman to take--any woman he wanted and right where he found her.\n\nBode didn't make any sign when they called Em\u00ecl's name, seeing several exiles glance at him. Bode already knew Em\u00ecl wasn't here.\n\n\"We haven't seen him,\" Devos said, coming up on his side.\n\nBode's eyes swept the Achens. He hadn't seen Gram, either.\n\n\"You wouldn't know anything about that, would you?\" Devos said, looking at his face.\n\n\"You mean did I warn Em\u00ecl beforehand?\" Bode rasped.\n\n\"Yes.\"\n\n\"No.\"\n\n\"Is there going to be a problem if we find him and execute him?\" Devos said.\n\nBode grinned. \"No,\" he said.\n\nDevos eyed him. \"He's your brother.\"\n\n\"Half-brother,\" Bode said.\n\n#\n\nIt took time, but eventually all of the red braids were gone and the exiles had plucked the specific Achens they wanted from their midst. Besides Em\u00ecl, two other men whose names had been called were missing, until someone called out at the last moment, one of the men hiding. Another man they knew was already dead. Of the people the exiles wanted, only Em\u00ecl was missing.\n\nBode's eyes went to the exit, past which he could see the tall buildings of Achen. Em\u00ecl was still in the city somewhere. He and Gram had found a hiding place.\n\nAnis returned to the enhancer. She cleared her throat. \"Be quiet, please,\" she said. The Achens ignored her, their voices getting louder, all of them stirred by the drama.\n\n\"You can't tell us what to do, exile!\" an Achen yelled.\n\n\"You don't have any right to be up there!\" another Achen yelled, more Achens joining, all of them getting loud and beginning to push forward against the armed exiles who held them back.\n\nAnis leaned forward, her mouth tight. \"The next person who interrupts the speaker will be shot,\" she said, her voice amplified. There was sudden silence. When she spoke again, her voice was clear. \"People of Achen. A great deal of deliberation went into our decision. The Council of Ten considered killing you and taking the city of Achen for ourselves, but we don't want to become you. Yet if we don't execute you, what are we do with you?\"\n\n\"Free us, you stupid numb cunt!\" an Achen yelled.\n\nThis began another storm of complaints as other Achens took up this idea, but they got quiet as Certo and two other exiles dove into the crowd and hauled out the man who had yelled, people abandoning him all around. He looked shocked as they brought him to the front and out of the crowd, putting him on his knees. Certo shot the Achen in the back of the head, the report echoing through the arena, and he fell on his belly.\n\nAchens screamed, all of them surging back now. The silence in the arena was complete. Certo gestured, breathing fast, his mouth twisting, and two other exiles picked up the body. More exiles brought canvas. The Achen's body was dumped onto it, the Achens watching.\n\n\"Well. As I was saying, we don't like you,\" Anis continued to a more attentive audience. \"We don't want to become you. In fact, we don't want to have anything more to do with you. The Council of Ten has decided that, for crimes against the exiles, the Achens will stay inside the city walls. We will strip the city of technology beyond basic infrastructure. Then we will raise the storm shield. You will be trapped in here. Your sentence is seventy-five years, after which we will return to speak with you. If you are still here, we will see if we like you any better.\"\n\nWhatever they thought of their judgement, none of the Achens showed any more inclination to argue aloud with the speaker, the dead Achen's body a crumpled reminder, a pile of clothing to which their eyes were repeatedly drawn.\n\n\"When we go,\" Anis continued, \"we will be taking the Achen food stores, to be distributed to those who grew it. We will leave you with enough food for your population for one year, if you ration. You'll have to cooperate and work hard to clear somewhere to grow your crops for next spring. We're leaving you here with the means to survive and your own choices to make.\"\n\nAnis didn't sound optimistic. Bode saw Corine. She was standing in one of the front rows in a slinky dress, her hair lank around her face, staring at him, breathing fast. Bode held her eyes until she looked away.\n\n\"Children born of the companions will be returned to them. The Council of Ten extends an offer to the people of Achen Prison. If a guardian consents,\" Anis continued, \"we will take any Achen child fifteen years or under. We'll foster them, but that child will not be an Achen anymore. You have to the end of the executions to decide.\"\n\nAt the mention of executions, the noise now came from the holding area, those who had been pulled out just beginning to believe their fate. They panicked, exiles wading in.\n\nDevos turned to Bode. \"We're bringing you father out next. The council has given you the choice, to witness or not.\"\n\nBode laughed softly. \"I'll stay, thank you.\"\n\n\"One hundred and fifty years ago,\" Anis said, \"we were the Achen Colony, sent here on a ship that flew through the stars. Fifty years after our landing, there was a disaster. The colony lost the crops and a portion of its seed stores. Through a lottery, half of the colony were exiled outside the city, turned out to starve by a criminal who disbanded the rightful Council of Ten that administered it. We are that council, and we have returned from exile.\"\n\nThey brought Tibrus out. He was naked and otherwise appeared unharmed, marchettes on his wrists and ankles. He was gagged. He was brought to the punishment poles in the arena in front of the platform and secured there spread-eagled by an exile who had the punishment rod on his hip, in its holster. The exile stepped forward, depressing a hypo into the magistrate's arm, Tibrus looking at the exile like he couldn't believe the man had done it.\n\n\"Could I speak to my father before you begin?\" Bode said.\n\n\"We thought you might want to,\" Devos said, nodding. \"Come now, then.\"\n\n\"There is bitterness,\" Anis said into the enhancer as Bode walked across the arena sands toward the magistrate, the Achens watching him as well as the exiles. \"We of the council have tried not to answer savagery with savagery, but we are not perfect. From the Achens, we have learned the value of a public spectacle. Any exile who wishes it may punish the magistrate. He will remain here until he has witnessed the executions, and if he is not dead by then, we will execute him, too. And when these terrible deeds are done, may we all be freed from our hate.\"\n\nDevos went with him, as if Bode might plan some desperate last-moment rescue attempt. Tibrus saw him, his father's eyes widening and fixing on him as Bode approached. Tibrus was trying to say something.\n\n\"Do you want me to take off the gag?\" Devos said.\n\nBode shook his head, grinning. He walked to stand in front of the magistrate, Devos following. Bode knew what the magistrate cared about. And if there was one thing Bode knew, it was how to deal out pain. \"I did this,\" Bode told Tibrus. \"All of it. I want you to know that after you're dead, Father, the exiles are going to topple that statue, and then I'm going to go into the computer and erase all memory of you and every magistrate before you for the last four generations. It will be as if none of you ever existed. That's for my mother, you fucker.\"\n\nTibrus yelled from behind the gag, his head coming forward, going red. He was still yelling at Bode when Bode turned and walked away. Devos accompanied him, glancing at Bode several times.\n\nBy the time Bode was standing where he had been, three condemned Achens had been brought onto the stage struggling, Certo waiting. Certo went down the line, touching the rod to their chests and triggering it, each one falling, exiles coming to toss the bodies offstage for the next group to be brought up, exiles on the sands wrapping the bodies in canvas.\n\nAn exile approached Tibrus, who froze. The exile took the punishment rod when it was offered, approaching the magistrate. Tibrus stared at him blankly. \"This is for my daughter, Magistrate,\" the exile said, his mouth twisting, triggering it and touching the rod to the magistrate's chest. Bode imagined it was at its highest setting. It was what he would have chosen.\n\nTibrus first yelled around the gag, a cry of warning, an alert, because it took you time to process, to believe what you were feeling, to understand the degree of pain you were in. Then Tibrus began to scream, muffled.\n\nHe had the smallest respite before the next exile stepped up, a younger man who didn't say anything to Tibrus, his face twisting. Exiles waited around him. The rod touched the magistrate's balls and cock, caressing. Doing that was going to be popular, considering how Tibrus was reacting, his body dancing, his eyes bulging.\n\nThe Achen executions continued, the Achens brought onto the stage thrashing wildly and still claiming innocence. Bode watched his father, who lasted for almost eighteen minutes before finally succumbing as the last of the Achens were executed.\n\nWhen it was over, Bode found Devos standing next to him.\n\n\"I hope I never have to see anything like that again,\" Devos said. \"The council is waiting for you.\"\n\nBode nodded, turning away and following. Devos brought him into the dark arch and through the arena chambers in the back and out of the small door there, up the stairs.\n\nFrom there, they walked to the front gates, open, no guards for the first time in almost one hundred years. He and Devos left the city, a wide and worn road, deserted. Bode hadn't ever been out of the city during the day. He looked around. It was nice, with the fields and surrounding woodland. Cold.\n\n\"You haven't asked to see Lyric,\" Devos said.\n\n\"No,\" Bode whispered before his voice broke through.\n\n\"Do you not care?\" Devos said.\n\n\"You want her to witness?\" Bode said.\n\nDevos was quiet, walking beside him. \"No,\" he finally said.\n\nAfter that, they walked in silence, the fields in the distance, colorful in the evening light. Bode saw where Devos was taking him as they approached. The members of the Council of Ten were there, the same stone room where they'd always met him, in the same seats, a fire in the fireplace warming the room. Bode took the chair they indicated, the same he had sat in before.\n\nHame leaned forward when Bode was seated. \"I am the speaker this session, Bode. The council has convened to determine what we will do with you.\"\n\n\"All right,\" Bode said, a rasp. He had to project, his voice still going sometimes.\n\n\"We have questions we'd like you to answer, such as you can with your voice. Do you agree?\"\n\n\"No,\" Bode said.\n\nThey all looked surprised.\n\n\"We're here to determine the best judgment,\" Hame said.\n\n\"I am the Achen enforcer,\" Bode said. \"There is only one judgment.\"\n\n\"Are you saying that you believe you should be executed for what you have done?\" Reene said.\n\n\"That is a question,\" Bode said.\n\n\"Are you asking us to spare you?\" Reene pursued.\n\n\"Also a question, but no.\"\n\nReene put her hands out, palms up, looking at the rest of them. \"I don't see the issue. Even the enforcer believes he's guilty and deserves to die.\"\n\n\"Absolutely. We should just let you take him outside and kill him now, Renee,\" Conel said. \"Never mind that we haven't even said thank you yet for handing us our freedom.\"\n\n\"The speaker has the table,\" Hame said, Conel and Reene sitting back. \"This is the time we have for the Council of Ten to hear this man, and you will not take it up with bickering or debate before the fact.\"\n\n\"My apologies,\" Reene murmured.\n\nConel nodded. \"Mine, too. Why won't you allow us to make our own judgments, Bode?\" Conel asked, turning to him. \"Why wouldn't you want us to understand why you did this?\"\n\n\"Another question,\" Bode said, looking away.\n\n\"Will you not answer one question, at least, so we can understand why you won't answer questions, Bode?\" Hame said. \"We would appreciate it.\"\n\n\"All right,\" Bode said. \"The answers don't matter.\"\n\n\"They matter to us. We are the Council of Ten. We want to ask you questions so we know that we've judged well,\" Verle from Eftafarm said.\n\n\"You can't compel me to answer them.\"\n\n\"We're not interrogating you,\" Gallo said. \"Would it be so bad to give us some information before we just send you to your death? A decision like this is difficult. It weighs on the people who make it. We'd like to know we did everything we could to understand your motives.\"\n\nBode leaned back in his chair and rubbed his eyes. An end. He would like an end now. He exhaled, dropping his hands, his voice straining. \"I will answer your questions if it helps you to do this.\"\n\n\"Will you do so honestly and fully?\" Hame said.\n\n\"How the fuck would you know?\" Bode retorted. He looked away. He turned back, gesturing. \"Yes.\"\n\n\"Thank you,\" Hame said.\n\nGallo raised his finger, Hame nodding permission. Gallo turned to Bode. \"Why didn't you bargain for your safety before agreeing to help the exiles take Achen?\"\n\n\"I didn't expect to survive the interrogation,\" Bode answered right away.\n\n\"So you intended to sacrifice yourself for the exiles?\" Gallo said.\n\n\"Not for the exiles, no,\" Bode answered, his voice going out and coming back.\n\n\"Then why did you do it?\"\n\n\"There wasn't another way to get what I wanted.\"\n\n\"What did you want?\"\n\n\"Revenge,\" Bode said.\n\n\"Revenge for making you the enforcer when you were a child,\" Verle said. \"Would you have bargained for your safety if you believed you would survive?\"\n\n\"No.\"\n\n\"How many condemned exiles have you released in the last three years?\" Cot\u00e9 said.\n\n\"Twenty-three.\"\n\n\"How many did you execute?\"\n\n\"Nine.\"\n\n\"Why didn't you free them, as well?\"\n\n\"The magistrate attended their executions personally and confirmed death after.\"\n\n\"What would have happened to you if the magistrate had learned about what you were doing, Bode?\" Hame asked.\n\n\"He would have put me on the scaffold and had Stoor torture and kill me.\"\n\n\"Even though you were his son?\" Reene said, sounding like she didn't believe him.\n\n\"Yes,\" Bode answered.\n\n\"The magistrate tortured him for the code, Reene, and then ordered him executed. Devos was there. He only barely managed to stop Stoor,\" Conel said. \"How long were you under the punishment rod, Bode?\"\n\n\"It was not a single duration. It was stopped once,\" Bode answered.\n\n\"For how long was it stopped?\"\n\n\"Briefly.\"\n\n\"Besides this brief pause, how long?\"\n\n\"Nine minutes.\"\n\nThere was a silence, everyone sitting back, staring at him.\n\n\"At what setting?\" Anis said.\n\n\"The highest,\" Bode answered.\n\n\"So you were willing to suffer and die to free the exiles,\" Lami said. \"In fact, you built your torture and death into your plan and then executed that plan. Can you explain this to us, Bode? We don't understand why you would do this.\"\n\nBode gestured at them, his voice coming and going. \"Sure you do. You just also want to know whether I'm good or evil. I am both. If you kill me, you have executed a man who has done good things. If you free me, you have freed a man who has done evil things. I wanted revenge. To have it, I had to free the exiles. It is not more complicated than that. Being on Stoor's table was nothing compared to what was done in order to make me the Achen enforcer. I did not intend to hand you this difficulty. I didn't expect to live. You can't change what they made me. I can't. It was the price of it.\"\n\n\"And you're supposed to pay this price for all of us?\" Hame said.\n\n\"For my own reasons, nothing to do with you,\" Bode said, his voice going and then breaking through. \"Give me an end to it.\"\n\n\"But it's already done, Bode,\" Conel said, leaning forward. \"You don't have to be the enforcer anymore.\"\n\nBode made a face at him. \"That doesn't change what I did, what I became to do it, Conel,\" Bode rasped. \"The past doesn't vanish because you want it to.\"\n\n\"Well, he's convinced me,\" Reene commented.\n\n\"May I have some water?\" Bode said, his voice rasping again, looking at the sideboard where there was a pitcher and glasses.\n\n\"I'll get it,\" Devos said.\n\n\"Bode, I still don't understand,\" Anis said. \"If your only goal was revenge, why help condemned exiles to escape? Didn't this put your plans at risk?\"\u2028\n\n\"It was necessary. Doing so freed exiles to find alternatives to the plantlings, which I needed for my plan to work.\"\n\nThey all sat back, taking that in. Surely that would decide them. Devos set the water in front of Bode without comment.\n\n\"Thank you,\" Bode said.\n\nConel leaned forward. \"Why fake the torture?\" Conel said. \"What purpose did that serve in your plan?\"\n\nBode took the water up and sipped. He set the glass down.",
        "\"Bode?\" Hame said.\n\nBode looked away. \"Because I could.\"\n\n\"That's not an ans--\"\n\n\"Hello, Bode,\" a voice interrupted from the doorway.\n\nBode turned. They all did. Bode almost didn't recognize her at first. Em\u00ecl had always kept her in revealing dresses, her hair styled and face paint. This woman looked younger, a clean, pretty face, in an exile dress.\n\n\"Katya,\" Bode said, his voice breaking through briefly.\n\n\"I came because I heard you are to be judged,\" Katya said.\n\n\"Yes.\"\n\n\"Are you here to accuse the enforcer, Katya?\" Hame said.\n\n\"I want to ask him a question,\" Katya said, not quite looking at Bode. \"Will the council allow it?\"\n\nHame's eyes wandered, not seeing any objections. \"Go ahead, Katya,\" Hame said, nodding.\n\nKatya was still avoiding Bode's eyes. She had a soft voice, a little high. Bode hadn't really heard her speak much. \"Over a year ago, Em\u00ecl requisitioned a child from me. I learned this when he announced it at a dinner at the magistrate's. You were at that dinner, Bode. I thought I would go mad if I had to leave a child there with him. I would rather have died. The next week, I found contraceptives in my jacket pocket. After that, every three months, contraceptives would come through the chute, wrapped in something.\"\n\nThe members of the council were staring at her. Katya wasn't looking at anyone.\n\n\"What is your question to Bode, Katya?\" Hame said.\n\n\"Will you tell me what they were wrapped in?\" Katya asked him, finally looking at Bode.\n\nBode looked into her eyes and couldn't lie to her. \"Inside of a white cloth in the supply box you received, in the packaging for the soap,\" he said.\n\nKatya nodded. \"Thank you.\" She turned, going back out through the door.\n\nThere was a period of silence after she was gone.\n\n\"Why would you do that for her?\" Lami said. \"What purpose did that serve in your plan for revenge?\"\n\n\"It didn't serve any purpose,\" Bode said.\n\n\"Then why did you do it?\" Cot\u00e9 said.\n\nBode was quiet again. They waited. He gestured. \"The magistrate requisitioned my mother to have me and then forced her to stay in Achen.\"\n\n\"The mother of the Achen enforcer was a companion?\" Gallo said.\n\n\"When I took you to Tibrus in the arena,\" Devos said to him, \"You told the magistrate you'd done all this for your mother.\"\n\n\"I thought you were getting vengeance for the magistrate making you the enforcer as a child,\" Verle said. \"You weren't?\"\n\n\"No,\" Bode said. \"I wanted revenge against the men who had killed the only two people I'd ever loved.\"\n\n\"The two--?\" Cot\u00e9 said.\n\n\"I'm confused--\" Anis said at almost the same moment. Cot\u00e9 gestured to Anis, Anis continuing. \"A companion raised you. How did that happen? I thought that the children of companions were given to the wives.\"\n\n\"Why does this matter?\" Bode said.\n\n\"You've agreed to answer the questions, Bode,\" Hame said. \"And that you would be honest and answer fully.\"\n\nBode sat back. \"The magistrate requisitioned my birth. To keep my mother in Achen, he refused to acknowledge my status as an Achen citizen. I wasn't given to Fati, the magistrate's wife, to raise. My mother raised me in our rooms and I was educated by Maeter Ton, an exile teacher. After my mother was executed, the magistrate recognized my citizenship, but I was left in the rooms with Maeter Ton while I began my training as the enforcer.\"\n\n\"So you were raised by exiles?\" Conel said.\n\n\"Yes.\"\n\n\"What happened to your teacher?\" Anis said.\n\n\"Maeter Ton was murdered by Em\u00ecl.\"\n\n\"You mean Em\u00ecl, your brother,\" Reene said. \"How was your teacher murdered?\"\n\n\"Half-brother,\" Bode said. \"Maeter Ton was old. He had a turned leg and he couldn't walk well. By Achen tradition, he had to walk behind me. When I had just turned seventeen, Em\u00ecl and his friend Gram ran him down in a transport as we were crossing the Achen Square.\"\n\nThere was that silence again.\n\n\"You said that your vengeance was for two people you loved,\" Cot\u00e9 said. \"You've said one was your mother, an exile companion. Who was the other?\"\n\nBode gestured, obvious. \"Maeter Ton.\"\n\nSilence again.\n\n\"Will you tell us what happened to your mother?\" Conel said.\n\nBode shifted, his jaw clenching. \"She died badly.\"\n\n\"How?\" Lami said.\n\n\"She was executed in the Achen Square after being tortured,\" Bode answered.\n\n\"On what charges?\"\n\n\"Attempted escape.\"\n\n\"Was she guilty?\"\n\n\"No.\"\n\n\"Did you witness it?\"\n\n\"Yes.\"\n\n\"What were the circumstances of the execution?\" Gallo said.\n\n\"What do you mean?\" Bode said.\n\n\"We want you to elaborate, Bode,\" Hame said. \"We want to know what happened that day, for you to describe it.\"\n\n\"I was eleven when the magistrate came to our rooms with the Achen Guard to arrest my mother,\" Bode said, his voice toneless. \"It was morning. The magistrate told the guards to bring me along. I had just woken up. Before they took her up onto the scaffold, she told me not to watch, but I did. My father walked up the stairs and spoke to her. She was pleading with him. At the time, I thought it was for herself, but I learned later what was going to happen to me, that making me the Achen enforcer was a part of her punishment. I begged my father to tell Stoor to stop hurting her. By the time it was over, I was begging him to kill her.\" Bode was looking at his hand, resting on the table.\n\nThe silence returned.\n\n\"Who was your mother?\" Gallo finally said. \"What farm was she from?\"\n\n\"I don't remember what farm she was from,\" Bode said, rubbing his eyes. \"As I said, I was eleven.\"\n\n\"Thaya was from Okt\u00f3farm,\" Keli said, a council member from the eighth farm who had always been present, but who had never spoken in all the times Bode had met with the council. He was an intense-looking man with dark hair and a closed face. The exile's eyes were shadowed. \"She was my sister.\"\n\nBode looked at him. \"I'm sorry,\" Bode said. \"Achens don't keep records of exile relationships and my mother and I were monitored. She couldn't speak freely. I didn't know she still had family living.\"\n\n\"As do you. I am your uncle, and you have an aunt and four cousins.\" Keli said, waiting. When Bode didn't say anything, Keli continued, speaking to the members of the council. \"My family is pleased to have Thaya's son home from Achen. Any difficulties anyone has with my nephew will have to go through the Okt\u00f3farm Council of Three.\"\n\n\"You cannot subvert the authority of the Council of Ten,\" Reene objected. \"This man is a criminal.\"\n\n\"He is a member of my family and my farm, returned to us.\"\n\n\"Can Keli do that?\" Hame said, looking around.\n\nConel shrugged. \"It would take it out of the hands of the Council of Ten, if Bode shelters with his family in Okt\u00f3farm. It sounds like they are willing to claim him.\"\n\n\"We are,\" Keli said, nodding.\n\n\"Bode? Do you shelter with your family?\" Hame said.\n\n\"No.\"\n\n\"Why are you so stubborn?\" Conel demanded.\n\n\"Is that a question?\" Bode said.\n\n\"Everyone knows how the men in that family are,\" Reene said, gesturing at Keli and crossing her arms.\n\n\"You said that the past doesn't go away just because you want it to,\" Keli said to Bode. \"We are your past as well, Bode. Is it pride that makes you reject us? Because you are an Achen and we are exiles?\"\n\n\"Of course not,\" Bode said. \"It was just a lottery.\"\n\n\"My sister was taken from us,\" Keli said. \"From everything you describe, she suffered horribly under the magistrate, as her young son did. Whatever you were forced to do, it is over.\"\n\n\"It isn't over,\" Reene said, her hand coming down on the table. \"He was still the Achen enf--\"\n\nShe stopped when Keli stood up. Reene looked surprised, leaning back in her chair.\n\n\"Keli,\" Hame said, putting his hand out. \"Remember that we're peaceful. Say what you need to and then sit down.\"\n\n\"Because of Bode, my sons will never face the Achen games,\" Keli said, his eyes on Reene and then moving on to other people on the council. \"He made no secret of what he was doing or why. He told us last time he was here. If we truly believed it was too evil, then we shouldn't have accepted his offer of help in the first place. We should have put him out the door and told him we refused to be free. You want to condemn a man who has given us our freedom at the expense of his own. If only our deeds mattered, and not the intentions or the situation of those acts, then the members of this council are guilty of the murder of thirty-four people and should be judged with him.\"\n\nThe table was quiet. Keli sat down.\n\nHame looked around. He looked at Bode. \"Is there anything you'd like to say to this council, Bode?\"\n\n\"No.\"\n\n\"I call for this council to convene to deliberate,\" Hame said.\n\nDevos rose, gesturing to Bode. \"There's a room down the hall. You'll wait there.\"\n\nBode followed Devos to the door. Devos walked down the hall and opened another door to a room. It was simple, a narrow bed and a crude wood table, a box, and a pitcher with water in it. There was a bathroom. Bode went in and Devos shut the door, locking it. Bode sat.\n\nHe didn't expect it to take long. He waited. And then waited some more. He rose and looked in the box. Food. He ate. There was nothing to do in the room. Idling, he tried not to think too much, lying on the bed with his knee up. It would be dusk soon.\n\nBode heard the knock, sitting up when Devos opened the door. Devos stepped in and gestured. Bode drew his breath and released it. He followed Devos out and down the hall, but Devos kept going.\n\n\"Not in there,\" Devos said when they passed it, Bode glancing in. It was empty. \"The council is outside now.\"\n\nTo execute him. There would be other witnesses, he imagined. People he had hurt. Their families. Bode took steady breaths, following Devos up the short set of stairs.\n\nHe was right. Outside, the council and a small group of exiles were arranged in an arc in the concourse, some sitting on simple benches that had been placed there and some standing. Devos led Bode to a place in front of them, facing the exiles gathered.\n\nIt was late fall. The farms were cooler than in the city, fewer windbreaks, the space open and clean-smelling.\n\nLyric's father was still standing beside him. Bode turned and glanced at his weapon, Devos following his gaze. Devos was his guard, definitely. His executioner, probably. Bode didn't see Certos around. Maybe the older exile would just do it right here, but Bode didn't think so. He thought they'd make a spectacle of him to make it official. He faced forward.\n\nThe exiles were staring at him. Bode stared back at them, making his face neutral.\n\n\"Bode,\" Hame said, standing, on the end to the left. \"Are you ready to hear the decision of the council?\"\n\n\"Yes,\" Bode said.\n\n\"Sometimes the vote of this council is split,\" Hame said. \"In that case, we recognize that an issue has no true resolution and we must simply accept the will of the majority. That was not the case here.\"\n\n\"All right,\" Bode said, waiting.\n\n\"Bode, you are guilty of torture and murder,\" Hame said. \"You have not denied it.\"\n\n\"I am guilty, yes,\" Bode agreed. Finally, fuck. If this was how long it took for a council to deliberate something so obvious, no wonder his ancestor had been able to take control of the colony.\n\n\"Word had gotten around that the Council of Ten was deliberating the fate of the Achen enforcer,\" Hame said, \"and an exile from D\u00e9kafarm interrupted us and asked to speak to Tak. Tak told us what the exile said, and we sent people out to the ten farms to find others who might have a similar story. We asked them to come here, and they agreed. The people you see here, Bode, are the family members of the nine people you failed to save from being executed since you became the Achen enforcer three years ago. Do you have anything to say to them?\"\n\nBode knew he was breathing faster. His eyes ranged over them, exiles looking back at him. His witnesses. He forced himself to meet their eyes. \"No,\" he replied.\n\nThere was silence. Then an exile rose from her chair, a woman with gray hair. She pulled out a worn paper letter, the creases deep, her hand shaking, and began to read:\n\n\"To Getta of D\u00e9kafarm. As you will no doubt have heard, your son Matu was sentenced to death by the magistrate. I want you to know that he did not suffer. Matu asked me to tell you that he loves you and that he's not afraid.\" Tears were running down the woman's cheeks, but her voice was clear and strong. \"He asks you to give his love to Crista, his sister, and to Wen, whom he courted, and that he regrets he will not see her again. He also asks that you light a candle for him on his birthday and put it in the window so his spirit can find its way home from Achen.\"\n\nThe woman sat down. There was a period of silence, and then a man pulled a piece of paper out of his pocket. He stood, reading:\n\n\"To Tyren of D\u00edofarm. I imagine that you will have heard that your wife, Abi, was condemned by the magistrate and executed. I assure you that she did not suffer. She wanted me to tell you that she didn't commit the crime for which she was sentenced. Almost all of the exiles who are condemned in Achen are innocent. I say this because she worried that you would think she was at fault. I told her that I would tell you this in my letter to you, and she seemed relieved. She also told me to tell you to have patience with your son, who she said is sometimes impulsive, but that he has become a good man. She said to tell you that her life with you was very good and that...,\" the exile read, pausing for a long moment, the last coming out in a low rush, \"she's pleased you were the one sent to \u00c9xifarm to loan a dibber when theirs broke.\"\n\nThe man sat again. A third person rose, reading aloud. Bode watched them. He remembered all of the people he had murdered, matching them to faces here, seeing the family members about whom the exiles had spoken.\n\nWhen the last letter was read, everyone was quiet. Hame looked around at the exiles and then at Bode. \"These letters were unsigned. The people here ask you if you wrote them, Bode?\"\n\n\"I did,\" Bode said.\n\n\"What did you mean, that my son didn't suffer, Enforcer?\" the woman who had first spoken said to her hands.\n\n\"I didn't mean physical suffering,\" Bode answered. \"The execution rod is quick and relatively painless. When I couldn't save someone who was condemned, I gave an injection. It calmed them and made it so that person didn't feel so afraid.\"\n\n\"Did it not occur to you to bring up these letters in your defense, Bode?\" Hame said.\n\n\"There is no defense,\" Bode said.\n\n\"Then this is the judgment of this council,\" Hame said. \"We have asked the exiles gathered here who lost members of their family to the Achen magistrate, and they have answered. The Council of Ten has heard them and we agree. Bode, we find you not guilty of crimes against the exiles. The Council of Ten forbids any retaliation against you as we would any exile found innocent by this council. This session is adjourned.\"\n\nBode's eyes were darting to individual faces. None of them were looking at him. He turned. Devos met his eyes, neutral, and then turned and stalked away.\n\nReene approached him from his right. \"Are you so surprised, Bode?\" Reene said, the woman's gray hair in two long braids, studying his face. \"You are. You didn't expect this at all.\"\n\n\"I didn't expect it, no. Why, Reene?\" Bode said.\n\n\"Because we could,\" she said, looping a long scarf around her neck.\n\nBode watched her go. Everyone was leaving. Two figures stayed behind.\n\nKeli. Then a pretty older woman Bode hadn't seen before stepped out a little from behind him. Bode went still, staring at her, his face impassive. He didn't move as she walked toward him, his eyes never leaving her face.\n\nShe stopped in front of him, studying him in return. \"My name is Anel, nephew,\" she said, her face tight, her lips compressed. \"Thaya was my older sister.\" She waited, her chin coming up.\n\nBode was still staring at her. He hadn't been able to remember his mother's face. He'd tried to hold on to it, but she had just faded in his mind. He could see her so clearly now. The moment stretched on. Bode reached out slowly and touched the woman's hair, wavy, dark gold just beginning to show gray. Yes, that color.\n\nThe woman's face softened. \"I'm sorry if it's a shock. We always did look alike.\"\n\nBode dropped his hand. \"You do look like her,\" he murmured.\n\n\"They said you were terribly handsome and they were right,\" Anel said, her face relaxing and her voice warmer. \"Keli says you're also stubborn like the men in our family and asked me to come along to try to coax you where he failed. So. Why can't you come and be with your family who want you? You're our flesh and bone. You belong home with us.\"\n\nHe forced himself to meet her eyes, so like his mother's. \"There's blood on my hands,\" Bode told her.\n\n\"I'm afraid you're stuck with the justice we've given you, Bode,\" Keli said, joining them, \"I know the burden can't be light, but the council won't execute you. You can't return to Achen. If you won't come back to live with us, then there's a cabin at Okt\u00f3farm near the wildlands, outside the village. It's not large, and it's definitely crude, but it's also not being used. You could stay there for now.\"\n\nBode's eyes shifted back to Anel. He looked away, his mouth tight. He turned back, nodding. \"All right,\" he said. \"Thank you.\"\n\n#\n\nCHAPTER 9\n\nIt was early afternoon and cold. Bode stood on a simple front porch. He was in thick trousers, boots, an undershirt, shirt, and jacket as exiles wore, as well as a hat and thick gloves. Keli had given him the clothing.\n\nSetting out from the cabin, he walked toward the main house. It had snowed, but the snow hadn't gathered, the path cold and wet. He saw Keli in the clearing not far from the house, chopping wood.\n\nBode veered in his direction and joined him, getting the second axe. Keli nodded his thanks. They worked together, the chill yielding to exertion, Bode peeling off layers. It had taken him time to learn how to do these things. His hands had roughened, blisters until they'd toughened with the labor.\n\n\"Good morning, Nephew,\" Keli said when they were done, burying the axe in the stump with a thud.\n\nBode nodded to him, putting his gloves back on and then his thicker shirt and jacket, his hat and scarf. They both turned toward the house. When Bode arrived, he took off his hat, putting it under his arm, his hair longer than it had been. Taking off his hat before he went into the house was expected.\n\n#\n\nHe had walked to Keli's house from the cabin the first morning after he'd been released by the council. It had been just light, Bode looking around, cold in the clothes he was wearing, not made for this weather. As he approached, he had thought he'd come too early, maybe, but then he heard noises from inside the exile house. It was a strange structure. Bode had sat on the stairs, freezing, until Nora, Keli's wife, had discovered him there.\n\nBode had scared her, Nora evidently not prepared to find an Achen on her front porch at dawn. The woman had given a small, piercing cry and disappeared, the door of the house protesting, a shriek of springs, and then banging closed.\n\nBode had stood up, going down the stairs and turning around, getting distance. He had still been standing there when two young exile men had come out, the door protesting a second time, the bang delayed this time by a second person passing through right behind the first,. Then it banged. The men were both dark-haired, both similar. Twins, he realized. These must be Keli's sons.\n\n\"Who the fuck are you, Achen?\" one of the exiles had said.\n\nHis brother had hit him on the shoulder. \"Don't be stupid. It's him, Fash,\" the second had said.\n\n\"You're our cousin?\" Fash had said, looking him over.\n\nThe door had, a third time, protested and then banged as Keli had come out. \"You've met, I see,\" Keli had said to his sons when he arrived.",
        "Keli had introduced everyone and then turned to him. \"Is there something you wanted, Bode?\"\n\n\"Do you have work I could do?\" Bode said.\n\n\"There's always work on a farm,\" Keli said, nodding. \"You'd have to come in and have breakfast first.\"\n\nNora came back out, the door neither protesting nor banging. \"I'm so sorry, Bode. What a way to greet you.\"\n\n\"You don't have any reason to be sorry,\" Bode said.\n\n\"He's freezing out here, waiting in the cold,\" Nora had scolded, turning around to go back in.\n\n\"Come in,\" Keli had said, nodding.\n\nAfter that, besides going into Achen once, Bode only left the cabin to go to Keli's house.\n\n#\n\nBode came and waited on the stairs every morning at dawn, although Nora protested. Keli would come out and get him.\n\nWhen Keli had brought the clothing, he'd shaken his head at Bode's glance. \"The work you do pays for what you take, Bode, even if you weren't family. You lighten it for the rest of us.\"\n\nHis cousins, Jase and Fash, were like their father, Keli, dark-haired and watchful. But after looking him over and watching him, they returned to what seemed to be their normal state, which was making jokes and laughing at them and being generally noisy.\n\nAnel lived there with Nora and Keli. She had two daughters, Emalie and Kauri, Bode's other cousins. Anel's husband was dead. Bode hadn't asked how. He tried not to, but he watched Anel, his eyes drawn to her. She would notice sometimes and smile a little and go back to what she was doing. The two girls shared Anel's dark golden hair. His mother's dark golden hair.\n\n\"Good morning, cousin,\" Kauri said to him, dimples when she smiled and sat down across from him.\n\nEmalie took a seat beside Kauri. Emalie was older and more reserved. \"Cousin Bode,\" she said, Bode nodding at them briefly.\n\n\"What are we doing today?\" Fash said to his father.\n\nKeli gestured in a direction. \"Rocks in the south field.\"\n\nJase grimaced. \"You're coming, right, Bode?\" he said, his eyes shifting.\n\n\"Yes,\" Bode said.\n\nBode stayed seated when he was done. They stayed at the table until all of them were finished and then they all got up at once. They never said anything when their adopted Achen savage did something they found strange. At least he wasn't illiterate. The magistrate had insisted his sons have a full education, which was how Bode had ended up with Maeter Ton.\n\nIn the afternoon, Bode would leave and go back to the cabin\n\nWhen the talk was done, Bode rose. \"Thank you for the food.\" He went out the front door, striking off in the direction Keli had indicated. He'd wait ahead. Bode had never quite figured out how to leave without being awkward. They seemed to talk their way to departure.\n\nAfter a time, he heard them. Keli came first, Bode falling into step with him.\n\n\"I'm almost finished with the blocks,\" Bode said.\n\n\"For the printing press?\" Keli said. \"The council is going to be interested if you can make it work.\"\n\n\"It'll work,\" Bode said. \"I thought you could distribute information about the local plants and post them in the villages, with illustrations, if someone can get me samples. I heard you say to Nora at breakfast that some people were eating plants they didn't know and getting sick.\"\n\nKeli's glance was interested. \"That would be useful, yes,\" he said. \"There are a few things it would be useful for.\" They walked in silence. \"I keep forgetting to ask. How old are you, Bode?\"\n\n\"Twenty,\" Bode answered.\n\nKeli slowed. \"What?\"\n\nBode slowed as well. \"Twenty,\" he repeated.\n\n\"I heard you,\" Keli said. \"I just thought you were older than that.\"\n\n\"No.\"\n\nRocks in the south field turned out to be finding all the big rocks and picking them up and taking them out of the field in which they were going to plant. Jase and Fash teased Bode when he set to work, although they both joined him before too long. They made it clear it was a miserable task. Bode didn't mind. He'd toil all day, as long he didn't have to fucking torture anyone.\n\nWhen it was time for lunch, Jase approached him. Bode stopped, releasing the rock he'd been lifting and straightening.\n\nBode followed Jase's gaze. Seeing who it was, he bent and lifted the rock again, carrying it to the pile and released it, his face impassive. He walked and squatted at the stream, washing his hands. When Bode returned, Mareta was speaking to Fash.\n\n\"I was visiting Nora. I told her I'd bring lunch to all of you,\" Mareta said. \"Hello, Bode.\"\n\nBode nodded to her.\n\nMareta came and handed him a bag with food. \"How are you today?\" she said, smiling at him.\n\n\"Fine.\"\n\n\"I was thinking I could come out to the cabin later, Bode, if you'd like, at suppertime,\" she persisted, and he didn't think she had missed his lack of interest, this time or the last time she had come to Keli's farm and offered herself to him. \"You could walk me back.\"\n\nBode's eyes cut to Jase and Fash, who were nudging one another. \"Thank you, no,\" Bode said, turning and walking to sit down on a boulder, opening the bag and pulling out food.\n\n\"Let me know if you change your mind, Bode,\" she said.\n\nBode watched her turn around and walk away, looking back at him once. Bode was guessing that Mareta was telling everyone at Okt\u00f3farm that she was being courted by the enforcer. Keli got up, picking up his canteen, walking toward the stream. Bode found Jase and Fash looking at him. His eyes shifted between them.\n\n\"First Leti making some kind of excuse to come here and look you over and now Mareta?\"\n\n\"Have you always had this problem with women, Bode?\" Jase followed with mock concern, he and his brother breaking into laughter.\n\nKeli returned, sitting next to Bode, drying his hands on his shirt. \"Are you making them laugh again, Bode?\" he said, taking up his bag of food.\n\nBode nodded. His cousins had decided he was harmless.\n\nIt was midday before Bode got back to the cabin. The first thing he did was to build a fire, that being his heat. It was one of the few things he missed about Achen, that the temperature had always been controlled inside. He sometimes felt like he'd been cold since he got here.\n\nHe would carve the blocks or sit on the steps and look up, thinking. He had always had plans he was working toward. But he hadn't had any plans for after. He hadn't thought there was going to be an after.\n\nHis gut relaxed once he was inside. There was a long bench in front of the fireplace, roomy and crude, made of trees with a long cushion on it. Inside the fireplace was a pot crane and grill for heating water and cooking. The living space in the cabin was one room, large enough, the headboard of his bed against the far wall. He went out and got wood, bringing it inside. He would need to chop some more.\n\nPulling his boots off, Bode set them aside. The fireplace didn't just heat his cabin. It also heated the water, an insert with a hydro exchange. The water was pumped and filled a cistern. Once he had the fire going and the water was heated, Bode went into a separate room, a closet with a dispersal spigot and a simple wood stool. The toilet was beyond that in another small room. He took a hot shower, which helped to warm him deeper, sitting on the stool with his back against the wall, the room filling with steam.\n\nBy then, the cabin was reasonably less cold. Dressing again, he combed his hair, which was longer, as exiles wore it. He got his knife and opened the chest, getting what he needed. He closed the chest and sat on it, bringing a box under himself to catch the shavings, and continued the relief block for printing he'd started the night before.\n\nThe printing press would have a cylinder around which movable type was placed. The small block in his hand was one of those movable elements. Bode's thoughts were on other things as he worked. He looked at the image on the block of wood, turning it in his hand, and then blew on it. He dug the knife in, shaving, blowing again, looking at it.\n\nThere was a knock at the door. Bode looked up, setting the block down and the knife Keli had given him into his belt. It would be Keli, he imagined, or Fash and Jase. Anis had visited him once. He rose and walked to the door, opening it.\n\nLyric.\n\nHer cheeks were flushed with cold, her nose red, her dark curls escaping from under a wool cap and around her face. \"Hello, Bode,\" she said. Her cheeks were flushed like when she was in a temper. \"I wanted to come by and see how you were doing--\"\n\nShe stopped as Bode stepped out, crowding her, turning her, Lyric's eyes wide. When her back was to the exterior wall of his cabin, he stepped into her, his body against hers. He bent and kissed her, gentle, grabbing her hat and dropping it, his hands going into her hair, that scent she had and the warmth of her.\n\nShe stiffened.\n\nBode belly was tense, his arm coming around her waist and his hand traveling down to cup her round ass over far too much clothing. He broke the kiss and straightened, pulling her against himself so she could feel him, Lyric squirming. His heart was pounding. \"Where have you been?\" he breathed.\n\nHer eyes dropped, long lashes, her cheeks flushing more. Beautiful. He had forgotten how good she smelled. She was still breathing quickly. He began pulling pins. Her hair fell down to her waist, so much of it, Bode shoving pins in his pocket.\n\n\"I thought the Achens had killed you, and then I thought the exiles had killed you. Then my father came home and told me everything that had happened, that you were alive and that the council had found you innocent and freed you. People said you were living with your family on Okt\u00f3farm. I thought you would come to see me. I waited for you, but you never came,\" she said, repeating herself. \"You didn't come.\"\n\n\"No,\" he agreed, taking off her scarf, his fingers going to the buttons of her jacket.\n\n\"Bode,\" she protested, trying to stop him.\n\nHe ignored her, stripping the jacket from her and dropping it, his fingers returning and going to the buttons of her dress, working fast. He surprised her, and he got several undone before she interfered. Her fingers tangled with his.\n\nBode moved fast and pinned her hands and then her body against the wall with his, holding her still.\n\nShe squirmed against him, trying to push him off. \"Don't--\" she said.\n\nBode dropped one of her hands, which started pushing against his chest, and now he put his hand over her mouth, bringing himself close. He looked into her liquor eyes, the fringe of dark lashes. His breathing was heavy, aware of her warmth so near to him, of how close he was.\n\nHe leaned in, nuzzling her, her body tense.\"These others don't, but you know me, dahlia,\" he said softly into a pretty ear. \"I don't think you've forgotten. And yet here you are, knocking on my door all alone. I was very fucking patient so you would come to me willing. But I'm trying to be less of an Achen savage, so I'll give you one chance, in case you're here to tell me you hate me or you've chosen another.\"\n\nHe released the hand over her mouth, leaning back, his lower body still trapping her, looking down. He was working on the rest of the buttons of her dress in the meantime. He glanced at her face. She was trying to say something, but nothing was coming out. He grinned. She had until he got to her tits. Good enough. He shoved the little undergarment away from her breast and then the other breast and he bent down, his mouth latching onto her nipple.\n\nHis free hand was reaching under her skirts, running over wool stockings and finding a bare silky thigh above that. She had little short pants on, some kind of undergarment. He tugged at the cloth impatiently, pushing it down over her knees and off her. Bode felt a surge, coming up and kissing her, deepening it, his hand going to his trousers. He was close to everything he wanted and moving fast.\n\nHooking his hand under her knee, he lifted her, finding her in all the cloth. There she fucking was, soft, already getting slick and hot. He pressed, getting her other knee and lifting her, his hands under her ass. When he penetrated her, she was tight, and then he was thrusting, pinning her to the wall. Her legs were clinging to his waist. \"Fuck,\" Bode said.\n\nHe let go of any control, all the nights he'd spent in this fucking cold cabin thinking about her. Using leverage, he got under her, watching her exposed tits jiggle. He kissed her again, his hips thrusting sharply, everything hot pleasure. He pulled back, his hand coming between them, wedging in and finding her. He had forgotten what she sounded like when he did this to her.\n\nStroking, he pulled back to watch her face, her eyes getting heavy, her body meeting his. His breathing was ragged. It was going to be fast.\n\nHe wanted her naked, but it was too cold. He'd have her again inside right away, he promised himself, and take his time. She was getting close, hitching. Watching her face, he saw it as she went still, her mouth opening. She voiced it, spasming around his cock. He thrust through it as she came, his own climax not far behind. Then it was on him. He concentrated on the pleasure, burying his face in her hair until it released him, Bode crying out, muffled.\n\nHe finally stilled, letting one of her knees drop, her foot finding the ground. He supported the other down, his heart pounding against her. Withdrawing, he put himself away, watching her. She was looking down, her hands flying to her undergarments, doing up all the small little parts of it, ribbons and frills, over her tits, and then the buttons, like he wasn't just going to take it all off again in a moment.\n\nMaking a noise, she spotted her little undergarment on the slats of the porch at their feet. She went down, grabbing the undergarment and her jacket and scarf. She straightened, shoving the undergarment into the pocket of her dress.\n\nHer face was flushed. She looked upset again, her lips red from the kissing. \"Are you going to invite me in, at least?\" she said.\n\n\"Yes,\" he said, taking her arm. \"I'll get your things tomorrow.\"\n\nShe blinked. \"What?\" she said as he pulled her, Lyric resisting. \"Stop, Bode.\"\n\nHe stopped, eyeing her. \"What?\"\n\n\"You want me to stay here?\" she said.\n\n\"Yes,\" Bode said, obvious.\n\n\"For how long?\" she said.\n\n\"What do you mean?\"\n\n\"When would you want me to leave?\" she said slowly, like he had difficulty hearing her. Her nose was flaring, her cheeks streaked with red. She was really pissed, he realized.\n\n\"Leave?\" he said, shaking his head. \"Why the fuck would you leave?\"\n\nShe stared at him, all the heat going from her. \"You want me to live here with you?\" she said.\n\n\"I promise I'll arrange better for you soon, dahlia.\"\n\n\"What about the ritual?\" she said.\n\n\"All right,\" he said, leaning down and kissing her. That was taken care of. But she didn't move. She still wanted to talk. It was cold out here. Bode released his breath. \"What is the tradition?\" he said.\n\n\"For you to ask me to perform the ritual with you,\" she said.\n\n\"But you already asked me.\"\n\n\"What?\"\n\n\"Just now. You asked me,\" Bode said.\n\n\"Asked you?\" she echoed, a sure tell. \"I did not.\"\n\nBode looked down at her and slowly smiled. \"You're lying.\"\n\n\"I am not!\" she said, and weren't her cheeks red.\n\nHe laughed. Pulling her with him, he brought her backward. He felt it, stopping. \"You walked too fast, dahlia,\" Bode said, sweeping her up and bringing her inside, finally, her hands coming around his neck.\n\n\"I didn't. My foot is always like this when it's cold,\" she said as he brought her in. \"I'm fine, Bode.\"\n\nBode put her in the chair in front of the fire. He squatted, pulling off her boots. She shivered and he went and got his blanket, bringing it back and putting it around her. He sat down on the floor, looking at her foot, black wool stockings for the cold. He slowly smiled, following the long stocking up and finding its edge on her upper thigh. He liked these. He pulled it down and off.\n\nHe took her bare foot in his hands. It was swollen. He warmed it first and then began rubbing, staying gentle. Looking up at her, he watched the fine lines of pain around her eyes ease.\n\n\"It did hurt,\" she admitted. \"Thank you.\"\n\nHe looked at her clothing. She was dressed as she'd been when he'd first met her in the library. She looked so sweet, in a dress like exile women wore, long sleeves, soft light brown wool, the hem falling below her knees. It had a scoop neck and buttons down the front that led to a trim waist, the skirt flaring from there, and wasn't that sexy.\n\nWhen he released her foot, she bent down and reached for her stocking, putting it back on. He let her, watching her reach with both hands under her dress to bring them high up on her thigh. He was going to leave those on, for sure.\n\n\"The bathroom is through that door,\" he said, gesturing.\n\nShe rose and walked to it, through the door, her limp improved.\n\nWhen she was gone, Bode rose and paced once. He returned, sitting on the bench again, his knee bouncing. Lyric. She'd made her choice and come to him willing.\n\nHe got up and went to his bed, finding an old spare shirt and tearing long strips of cloth. He went and put them on the bench. His stomach was tense. They weren't in Achen anymore, but he wasn't any less of a monster. He was still the same man who had been the Achen enforcer, and he was wondering if she remembered that. If not, she was about to.\n\nShe was more beautiful than ever. It made him want to do such things to her. Things he'd thought about. He wiped his palms on his trousers briefly, his cock stiffening. He could think of one thing he wanted to do right away, his hands going to his shirt, pulling it off.\n\nWhen she exited the bathroom, he grabbed her, always careful of her foot, dragging her to the bench. He was naked already. She cried out and then she was yelling at him and fighting him. Bode had selective hearing when it came to what people said when he tormented them. He'd heard it all. With Lyric, there was only one thing he listened for.\n\nHe enjoyed her struggles, her grunts of effort, the way her hair got all over them both. Putting her over his knee, he grabbed cloth. She'd put the ridiculous little undergarment back on. He grasped and ripped it, her shrieks indignant. Her butt emerged from all of it, creamy fat cheeks in the glow of the fire. He ran his hand over the roundness as she struggled and yelled, words in there somewhere. Looking between her legs, Bode felt a surge of possession that was almost painful. His hand came down.\n\nLyric shrieked, getting louder as he continued, her fat cheeks getting redder, his cock hard. It was a good thing his cabin was isolated. He didn't want to stop, but he didn't want to wait, either. Standing her up, he pulled her around to face him, fighting his way through her wild silky curls and her protests, his fingers going to the buttons of her dress. She resisted him, and she battered at him, and she tried to escape him, and she told him to stop, and she told him he was crazy and cruel and she called him an Achen savage and she said to take his hands off her.\n\nBut she never told him her foot hurt.\n\n\"If you don't want me to tear this fucking dress off and you have to go naked, which wouldn't bother me at all, you'll stop your squirming,\" he said.\n\nThat stopped her, her breath heaving, her hair wild, as he undid the buttons. Fuck, she was beautiful. He spread the material slowly, his eyes on her as he dropped it, the dress puddling at her feet. She was bare now except for her black stockings and the little soft undergarment across her shoulders, gathered at her tits and ending just above her waist. Her nipples were visible and jutting, a little ribbon tie he leaned forward and caught in his teeth, tugging. It loosened, Bode rubbing his cheek against a hard nipple.\n\nPulling the little garment off and dropping it, he reached his arm around her waist, pulling her closer, looking at her breasts, the tips, her hands pushing on his shoulders.",
        "Lyric had big, sensitive nipples, and he began there, licking. He moved between them, taking his time. He began to suck them, her hands going to his shoulders, pushing and also holding on. He was listening to her, Lyric's hips moving.\n\nHe started to get rougher, keeping his arm around her, trapping her, his cock pulsing, biting sometimes. She protested sharply, all folded into the pleasure. He would sometimes pay attention to what she said, listening for the dark pleasure of it.\n\n\"Bode. Don't, it hurts. Please. Please stop,\" she said, squirming. She hissed. Her nipples were hard and hot under his tongue, swollen. He tugged sharply with his teeth, Lyric yelping. Drawing back, he looked at them, the tips of her nipples red. But she was still offering her nipples to his mouth.\n\nThey were going to find out how deep this went, he suddenly decided, a general idea when he'd made the strips of cloth firming into fast plans and details developing as he went. Just like an interrogation, you had to improvise sometimes while you found the things that worked best.\n\nHe grabbed her, turning her around, facing away from him, pulling her hands behind her. He rose when she fought him. She was trying to prevent it, tugging and bending over, his eyes dropping to her ass. He smacked her, Lyric and going still. He tied her hands behind her with the long piece of cloth. Getting the other piece of cloth and tying it over her eyes, he blindfolded her and then pulled her to sit on his lap.\n\nHe turned her crosswise to him, straight down onto her back, laying her long-ways along the bench and over himself. Lyric was facing up. Her body was draped across his lap, her shoulders to his left, her legs to his right, and her belly directly below his chin, her waist extended.\n\nHe got her snug and brought his left arm down in a hold just above her tits, jutting because her arms were tied behind her. Throwing his right leg over hers, he trapped her near leg. The other was still free. He brought her free knee up, pulling her foot onto the bench, and pushed the knee wide, spreading her. Bending his left elbow allowed his fingers to come up and hang over her nipples.\n\nBode sat back a little, relaxing now that he had her, breathing heavily. He recognized that he was aroused. He often recognized he was aroused when he touched Lyric, but when it took him like this, he followed it.\n\nShe was fighting, but he had her body directly under his hands, her tits with his fingers dangling over them, her belly elongated. One of her legs was trapped under his, the other bent and spread, her pussy available and one of his hands free. It was no strain for him. She would exhaust herself soon.\n\nHe waited, being patient, reaching down to trace around her nipple with his left hand as his right landed on her belly, her hips moving sharply and her voice loud, protesting and struggling. He pinched her nipple to hurry it up and she shrieked. That was enough for him. Bode pushed her far knee down more, aimed, and spanked her pussy with his free hand. His cock moved under her, a deep, prolonged pulsing, a sinking in his gut, a wave going through him.\n\nLyric felt that. She stopped everything she was doing and went rigid, arching in his hold to the degree she could, her hips rocking, trying to get away from the pain. She writhed and then cried out, closing her legs.\n\nBode let her, waiting. He was not a grappler. They would talk. It would smooth everything out and help her to understand. \"It hurts, doesn't it?\" he said. He was in that place now, and so was she, all of it crawling through him. \"Can you listen to me?\" He waited, eyeing her squirming hips, her pussy. He'd give her another if she didn't answer him soon.\n\n\"Yes,\" she said, panting.\n\n\"Good,\" he said. \"I'm going to touch you. You can make all the noise you want, but if you move, I'll do that again, and it will only be the first one. And I've thought about doing it, Lyric. I'll spread you open and spank your cunt for my pleasure.\" He touched between her legs, pushing in with a finger to let her know where he meant, stroking. She had a beautiful, fat clit, currently bathed in slick, hard under his fingers.\n\nLyric did that thing that always sent him in two directions at once. Her body relaxed and her legs fell open, yielding completely, letting him do what he wanted with her. Trusting him. It aroused him so he wanted to do worse and it also satisfied something deep in him, made him careful with her.\n\nHe never did actually need to speak with Lyric. She had always heard and understood exactly what he was telling her with his hands, with his body, from the first time he'd brought her home and fucked her on his wall. But she was his again and she was here, and talking to her excited him. Bode had always spoken to his subjects. It made everything so much more intense.\n\n\"You're beautiful, dahlia,\" he breathed, rewarding her for submitting to him, feeling that deep sinking in his gut, light strokes on either side of the erect, slippery nub between her legs. \"I won't surprise you. I won't punish your pussy unless you move. Your body is mine for now. Just allow it to happen.\"\n\nShe shivered and went still. Wasn't the best restraint self-restraint, after all?\n\nHe tugged on her clit briefly. Lyric wanted to move when he touched her. She was a squirmer, and even on his wall, she had wiggled and twisted and arched just to make him crazy. He wasn't sure he wanted her to wear clothing at all, ever. He started his exploration in the valley between her breasts, his touch light, his gut humming. He traced the path of the punishment rod on her body, because that's where the nerves were. He would know. His cock pulsed.\n\nAs soon as he had gotten to her belly, which took some time--she had the prettiest breasts--the fingers of his left hand, dangling above her tits, brushed across her nipples. She came close to losing it right there. He kept his fingers gentle on the hard, taut buds, the lightest plucking, moving between them, but they'd already played there, and the nerves were alert.\n\nBode knew how to keep nerves alive. He was good at it. The best torments started slow and built from there. And Lyric was ill-equipped to deal with this. On the other hand, she also knew what she faced if she moved. He'd just demonstrated it. He was flexible. He'd be happy with either decision she made.\n\n\"Bode,\" she said from behind his left shoulder, sounding scared. \"I don't think I can stay still.\"\n\n\"I don't think you can either,\" he said, grinning, not stopping as he touched her nipples with his left hand, the journey with the fingers of his right hand continuing, tracing her navel. \"I can just give you your spanking now, if you'd like, pretty companion. Say yes and I'll release your leg. Then you can bring your knees up to your belly and spread your legs, if that's the choice you've made, and I'll punish your pussy.\"\n\nWhile he was speaking, he was going from one of her nipples to the other, tugging, small pinches. He moved her free leg gently and slow, spreading her, the other still trapped under his. He pulled the knee higher, getting what he wanted. His hand found her inner thigh, his fingers squeezing her nipple deeply, and Lyric shuddered. His hands stopped.\n\nShe went absolutely still. \"Please, Bode,\" she whispered.\n\nBode paused, considering her appeal. She was afraid of the punishment. He stroked her inner thigh idly, his eyes unfocused, feeling the slick gathered, twirling his fingers, touching her entrance, which pulsed. He stroked there, pressing. He'd already known what he would find, but it still sent a deep wave through him. She was just really wet. He wanted to make her come, but fair was fair.\n\nHis fingers became more insistent on her nipples. He cupped her pussy, wedging his middle finger inside her lips. Except for the once, she'd held still for him so far, but Lyric's whole body was crawling with moment-to-moment control, her breathing ragged.\n\n\"I'll stop before you come,\" he said. \"If you can get through this next part without moving, I won't punish your pussy tonight. We'll save it for another time.\"\n\nHe wasn't being entirely fair to begin with, actually. Fear and pain were deeply intertwined and confused. And pleasure, as he gathered her slick on his fingertips and swept it lightly just inside her lips the way she liked. She always fell apart around it.\n\nHis fingers had become more than insistent on her nipples, although he didn't think she realized. He was pinching and plucking actively, enjoying it very much. He was hurting her, yes, but she didn't feel pain because her body had shifted and everything was pleasure to her now. She lasted four strokes before she burst into tight squirming, her knee coming up, offering her pussy to him. He grinned. She had actually held out longer than he had thought she would. His hands stopped.\n\nLyric cried out, frustrated because she wanted her pleasure, and then she went still and seemed to remember who the fuck he was. \"Bode, please don't. It'll hurt too much,\" she said, breathing fast, her voice wavering.\n\nBode frowned lightly. He could feel her heart pounding. His hand left her pussy and went to her belly, spanning there. \"Don't fear, dahlia,\" Bode said.\n\nShe went absolutely still. Then her whole body relaxed and he felt her give herself over, a surge going through him. He could do what he wanted with her now. This was how deep it went between them. This was the bottom of it. He rewarded her, his hand returning between her legs, his breathing ragged. It was what he'd wanted since he could remember, and not something he had ever imagined he would get. The Achen enforcer. He felt that sinking he did. He was so fucking in love with her.\n\nLyric was lost in having her pussy pleasured, his fingers on her nipples now more than rough. She'd be sore tomorrow. It was all pleasure to her now, her body treating it that way. He'd gotten her here so he could do what he wanted, and what he wanted was to spank her pussy. It was what he had wanted since it had occurred to him about four seconds after getting her through the front door. He'd just needed an excuse to do it.\n\nLyric had forgotten this game, but he hadn't. Torment was all about making things clear. Communication.\n\nShe slipped into a rhythm, humping his fingers, so he pushed two into her. Lyric made that encouraging noise she did. She went still, just like she did right before she was going to come, and he stopped.\n\nHe couldn't see her face, but it didn't matter. Bode grinned, watching her body, so expressive.\n\n\"Bode,\" she said, breathing fast. Panting, really.\n\n\"I know you want your pleasure, but we have unfinished work. I still need to punish your pussy.\"\n\nShe released her breath, shaky, as he pressed on her clitoris, penetrating her with his fingers again. Fuck, she was swollen. He was going to enjoy fucking her after, his gut tensing with anticipation. He finger-fucked her faster and she went still, trembling. He stopped.\n\nShe was making a great deal of noise. He'd gagged her before. His fingers were pinching her nipples sharply and her clit was lively on the pads of his fingers. He rubbed roughly and then stopping, lifting. She cried out somewhere behind his left shoulder, her hips chasing his hand.\n\n\"Bring your knees to your chest and spread your legs, Lyric,\" he said, and then added, to help her to do it. \"Do it right now or it'll be much worse.\"\n\nShe was slightly tilted downward on his left side, where his arm was directly across her chest above her tits, making them jut, his fingers hanging above them. He straightened that arm to stabilize her as she did what he said right away, beautiful, bringing her knees up and opening for him. She offered her naked, spread pussy, holding there.\n\n\"You can move, but don't break your pose,\" he said softly.\n\nBode reached out, touching her between her legs. Lyric was always so touchable. He spread her with his fingers, exploring. A woman was so very sensitive there, much more than a man. Lyric's clit was slick and hard. He circled it like he had the women on his table with the punishment rod, their legs spread. He had stroked them, trial and error, finding what worked. Watching their pussies pulse. \"Get ready,\" he said. \"The first one will be the worst.\"\n\nHe raised his hand and smacked her pussy, his cock moving, a deep, long surge. He knew how he wanted to take her now. He had a moment when his thoughts went truly dark, his eyes on her nipples, shifting to her pussy, a pretty pink now.\n\nHis fingers returned between her legs, light strokes. She had cried out when he did it, but it wasn't like before. Bode had been willing to give her some time, but she was ready right away, trying to come on his fingers.\n\n\"Are you ready for the next one?\" he said.\n\n\"No,\" she said, but she'd gone still, and she sounded unsure.\n\nHe grinned, smacked her again, her puffy naked pussy and those pretty inner lips. Her clit. Lyric's cry of pain-anticipation died and turned into a deeply satisfied sound, Lyric trying to spread more.\n\nHis fingers came back, staying gentle. \"Did that hurt?\"\n\nShe was willing to talk. It was why he'd blindfold her. It didn't matter if he couldn't see her or she couldn't see him. Either would work fine for her.\n\n\"Yes,\" she said, going still. \"Are you going to do it again?\" she finally said, a little breathless.\n\n\"Do you want me to?\" he said, bringing her a breath away from coming and then stopping.\n\nThere was a long pause in which she processed the question, processed what was happening to her body. She writhed for a moment, torn. \"Yes,\" she said, her voice ragged.\n\nHe touched her clit, bringing her close and then smacked her wet pussy, his heart pounding, immediately returning to her, gentle strokes. Lyric curled up around it and turned around in mid-sensation. She went still and cried out in pleasure. He watched her pussy convulse, pulsing. She was going to remember this, remember how good it felt. That was another point in this exercise, besides the fucking pleasure of it for him, his cock aching under her.\n\n\"You did well, Lyric,\" Bode said, tugging on her clit, tapping, waking it up and slipping two fingers into her.\n\n\"Bode--\" she choked out.\n\n\"Fuck,\" he said, enjoying it, watching her body. She went rigid and then she arched and strained. He could have counted through it, she lived in pleasure so long, his eyes on her body as she writhed, crying out. She finally fucking released, spasming, coming all over his fingers. Her hips were jerking as she humped his hand. She strained again, whimpering with pleasure, and then her pussy clutched at his fingers, long pulses that went on, and then sharp and short, flutters.\n\nBode drew his hand away from between her legs and his left arm released her, coming around to support her, bringing her up. She cried out a little when he did it. Standing her up facing him, he held onto her, Lyric unsteady.\n\nBode came straight off the chair toward her and brought her down with him, putting her on her back, the firelight on her skin and her dark curls spilling all over the warm floorboards. He pushed her knees up and put her feet over his shoulders, found her and stabbed into her.\n\nShe cried out sharply, shaking her head as he rode her, spread as far as she could.\n\nBode thrust. She was tight and wet, and she was hot and swollen, too, and she'd just come, still pulsing a little and terribly sensitive. He grunted, climbing up. She tried to straighten, vocalizing, and he leaned into her, holding her still, getting even deeper. \"Stop your squirming. Hold still for it,\" Bode grunted. He could go very deep in this position, and he enjoyed it, letting go. \"Fuck.\"\n\nIt went on, Lyric curled under him, protesting. Bode took her harder, varying it, long strokes and then faster. He dropped his head back and closed his eyes, all his attention on the sensations in his cock. Lyric was jerking with his thrusts. Opening his eyes, he looked down at her tits jiggling, and then at her face.\n\nHe began to come, trying to get closer, releasing deep. He cried out through his teeth, digging his fingers into her hips and holding in her as he emptied, breathing in bursts. The fucking pleasure. He held in her again, the moment stretching on, pulsing, giving her more.\n\nBode stayed where he was, not able to move yet, large breaths. When he could, he straightened. He brought her legs down, supporting them, her knees going to her belly and then her heels landing. Coming over her, he pressed into her briefly for the sensation of it, still panting, and she shuddered.\n\nHe looked down at her, straightening again, on his knees between her legs. His hands landed, rounding her shoulders, shaping her torso, lifting, pulling while she was warmed. They moved down around her hips, starting over, keeping contact, his hands all over her. Fuck, it felt so good.\n\nLyric met his eyes, hers a little gone. He leaned down and kissed her, getting his arm around her. He came up on his knees, pulling her onto himself, straddling him. He was still kissing her, the tips of Lyric's breasts touching his chest. She shivered, the tips sensitive.\n\nWhen he was done kissing her, he pulled back. Lyric was limp in his hold, looking back at him.\n\nBode moved slowly, making sure he had her, Lyric unsteady. \"Come on,\" he said when she was on her feet, his arms around her, walking her to the shower.\n\nHe was going to get a bath of some kind for her, but the water would be hot, at least. She liked it, the room filling with steam as he inspected her, the light not what it could be, a small window. Red on her round bottom. No surprise there. He'd spank Lyric any fucking day. He turned her around. Yes, her nipples were going to be sore. His cock stirred.\n\n\"Sit,\" he said, his hand on her because he still didn't trust her balance. When she was sitting, leaning her back against the wall, he squatted in front of her, pushing on her knees.\n\nHer hands flew to his, Lyric coming into her eyes. \"What?\" she said. \"No.\"\n\nHe looked up at her, reaching to touch her cheek. \"I just need to see you.\"\n\nShe relaxed, leaning her head back again, drawing a stuttering breath in as he raised her knees, her back against the wall. When he reached with his thumbs, spreading her pussy gently, she looked away. He looked at her, taking his time. Her outer lips were pink, the inner lips less so.\n\nHer breath drew in when he touched her. She felt it now, but he thought any discomfort would be gone in the morning. He reached and touched her again, gentle, circling her passage, Lyric's breath stuttering. So pretty. His cock was stirring again.\n\nHe put her legs down slowly and straightened, raising her to her feet and pulling her under the hot water, grabbing soap and getting all of her, staying gentle where she was sore. When he was done, he dried her, Lyric sleepy. He brought her to the bed.\n\nGetting in with her on the other side, he pulled her to him, her back to his front, skin-on-skin. He had missed this. All of it, and they were alone as they'd never been before, not for long. She shivered against him and then she found a spot, and then she sighed.\n\nWhen they were warm, Bode got up on his elbow, brushing her hair from her face, running his fingers through it. Her hands were folded under her cheek. Next, it was the place under her ear, nuzzling her.\n\n\"Your hair is longer,\" she said, drowsy.\n\n\"Yes.\" He folded the blanket back, her delicate shoulder emerging and then the deep dip of her waist, her hip climbing after that, her skin warm under his hand and so soft. Lyric liked it when he touched her. He knew it from her slow movements, the encouraging sounds she made, from her nudging if he stopped for too long. \"Why didn't you tell me about your mother?\"\n\nLyric went still. When she finally spoke, she didn't sound so sleepy. \"She died when I was six. I don't really remember her. She was like a sad story my father would tell, and the Achen enforcer was this frightening, evil figure in that story. When I first met you in the library when I was fifteen, and I saw your badge, I thought I was going to see the face of the man who had killed her. And then I did, and I couldn't understand how you could be him, you were so young and handsome.\"",
        "\"You saw me that way,\" he said quietly, touching her.\n\n\"Yes. What are you building?\" she said. \"Everyone wants to know.\"\n\n\"What did you hear?\" he said.\n\n\"That the old Achen enforcer who freed the exiles lives at Okt\u00f3farm and is making a mysterious machine, and that he spends all day working on it. That he's terribly handsome and serious and that he's been walking with Mareta from Okt\u00f3farm.\" This last was said stiffly.\n\n\"It's gossip. I don't work on it all day. I go every morning to work at the farm. And I haven't taken Mareta walking. She's at Keli's now, I think.\"\n\n\"Now?\" she said, turning to him in profile, frowning a little.\n\n\"Yes. She doesn't interest me at all, Lyric.\" Evidently he needed to actually say that, because it seemed to reassure her.\n\n\"Are we going there tonight?\" she said.\n\n\"Not unless you want to,\" he said. \"I have some food here if we get hungry.\"\n\n\"I'll need my things soon,\" she said.\n\n\"I'll go and get them tomorrow.\"\n\n\"I'm not sure that's wise, with my father.\"\n\nDevos. \"Is there anything that you actually need?\" he said, playing with her hair. \"You could go naked. I'll get you a hairbrush.\"\n\nShe turned and laughed briefly, Bode's own face responding. \"What are you building?\" she said.\n\n\"A printing press. It's a rotary device that allows for placing the character blocks, which I've almost finished.\"\n\n\"To print books?\" she said.\n\n\"Not at first. Pamphlets, although I have been speaking with Anis, from T\u00e9serafarm, who stopped by, about the creation of bookbinding tools. I'll need space, once it's ready. The cabin won't be big enough.\"\n\n\"I guess we'll never see the books in the library in Achen again,\" she said.\n\nBode was caressing her bottom, which was turning him on, although he'd exhausted himself. \"No. But you're lying over a considerable number of them,\" he said, referring to the books stacked neatly under his bed. \"There are more in the basement, along with the paintings from my rooms.\"\n\n\"Really?\" she said. \"How many books did you bring?\"\n\n\"As many as I could get hold of and transport. They let me do it. The council. Once I have a printshop, we'll have real bookshelves, and we'll make a library for others to come.\"\n\n\"Does the council know about the printing press?\"\n\n\"Yes. I want them to give me a printshop,\" Bode said. \"I'm going to try to persuade them, and in return I'll make their pamphlets for the farms.\"\n\nThey were quiet, Bode exploring her, running his hands over the soft warm surface of her. He thought she might have fallen asleep, but then she spoke.\n\n\"I haven't bled since the games,\" she said, her voice very low. \"Do you know what they did?\"\n\nBode's hand stopped. Of course they hadn't told her. \"Your bleeding was stopped for a few years, and you won't get pregnant during that time, but it's not permanent.\" His fingers went to her cheek. Bode hadn't really thought about children. Children weren't anything he'd ever had a reason to think about. Certainly not with his plans in Achen.\n\nIt would be a few years, at least, before he had to worry about it. Exiles had access to effective, if more crude, contraceptives, but Lyric probably wanted a child. More than one, maybe.\n\nHis hand went to her belly. \"I had never been near a child or spoken to one before I met Kauri at Okt\u00f3farm,\" he said. \"She's twelve. I'd seen them, in Achen, in the square, or walking around the city.\"\n\nLyric was staring at him. \"You've never been around a child?\" she said.\n\nBode shrugged. \"I was raised by a companion and then an old exile. What reason would the enforcer have to spend time with a child?\"\n\nShe shivered when he said that, his eyes going to her nipples, which peaked.\n\n\"Are you still cold, dahlia?\" he said, his hand cupping her breast again.\n\nShe shook her head mutely."
    ],
    "authorname": "semiosis50",
    "tags": [
        "bdsm",
        "sci-fi",
        "forced",
        "noncon",
        "impact play",
        "maledom"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-achen-enforcer-ch-08-09"
}