{
    "title": "Escort Neighbour",
    "pages": [
        "I first met my next-door neighbour shortly after she moved in. The moving van showed up and blocked the street and I was unable to pull into my driveway. I parked on the street and got out of my vehicle. The house next door was a beehive of activity. Movers were lugging boxes and furniture down the truck ramp and into the house. I stood to the side and looked for someone in charge. I admit to being a little angry despite the need for the movers to do their business.\n\nI hovered and waited. Finally, a man appeared who I thought might be the supervisor. I waved to him and he came over to me looking like he was ready for an argument.\n\n\"Hi,\" I said. \"Sorry, but you're blocking the street with your truck.\" I looked at the truck, backed up into the driveway, but with the rest of the truck extended out into the street. \n\nThe man looked at his truck and then back at me. \"Sorry, buddy,\" he said. \"I've no choice. We shouldn't be much longer.\"\n\nI watched two movers walk down the ramp carrying a large couch. \"How long do you figure?\"\n\n\"A couple of hours, tops.\" \n\nI looked at my watch. I'm not sure why I did. I knew what time it was. I looked around the yard, littered with other boxes and packing paper. I scratched my head. There was nothing I could do or say. I shrugged. \"All right. Thanks.\"\n\nThe man just looked at me for a little and then moved off to enter the truck. I stood there helplessly. I was at their mercy and wondered what it was I thought I would accomplish. Movement caught my eye and I saw a young woman, red hair flashing in the sun, emerge out of the front door carrying a clipboard. She was looking at it and not watching what she was doing. She was walking toward me and marking something on the clipboard with a cheap pen. Her foot caught the edge of the lawn when she stepped off the walkway and she spilled forward, the clipboard and pen spinning away.\n\nI was only a couple of feet away and I lunged to catch her. I reached out and grabbed her and found myself holding her around the waist with one hand and the other grasping her right breast. She made a cry of alarm and I held her entire weight. She struggled to find her footing, and I righted her back on to her feet.\n\nMy hand lingered on her breast perhaps a little too long. I let go of her waist and then her breast. It had been a wonderful feeling. Her breast, probably a C cup, was braless. It had felt so soft and warm. \n\nShe let out a breath and started to apologise and thank me. She looked up at me and I lost my thoughts in her eyes. She was stunning. Freckles painted her face and I could see a touch of a sunburn on her cheeks and nose. She had bright green eyes and a smile that crinkled her eyes. She laughed and looked embarrassed.\n\n\"Thank you for catching me!\" she said.\n\n\"My pleasure,\" I finally managed to say. The feeling of her breast in my hand lingering on my mind. \"That was quite the trip! Sorry about the...\" I waved in the general direction of her breast.\n\n\"Ha! No issues. Thankfully, they're big enough to grab, eh? And you caught me so easily!\" she laughed.\n\nHer breast had felt wonderful. I couldn't help myself and I looked her over. She was easily a foot shorter than me. Thin and fit, large breasts for her frame, and a narrow waist. I couldn't see her ass, but from the front it looked full and round. She was gorgeous. A real knockout. And most likely my new next-door neighbour. I stuck out my hand. \"Hi, I'm Bill, your next-door neighbour.\"\n\nShe shook my hand warmly. Her grip small in my hand, but firm. She smiled up at me and her face seemed to light up. \"Oh! Nice to meet you! I'm Jennifer. Finally, I get to meet who's next door.\"\n\n\"Yeah, that's me over there.\" I pointed at my house. \"I'm not sure who lives next to you on the other side. The house is empty most of the time. Where are you moving from?\"\n\nShe named another area of the city. \"I used to rent an apartment. I finally saved enough to buy a house and I love the area, so when this house went on the market, I snatched it up.\"\n\n\"Oh, so you're from here?\"\n\n\"Whole life,\" she answered. \"I always wanted a house, so here I am.\"\n\nShe looked rather young to me. Maybe in her mid-twenties. It was quite a feat to put a down payment on a house at her age, especially in this area. The houses were expensive since the area was one of the more sought-after areas to live in. I said as much to her.\n\nIt surprised me when she blushed. \"Yeah, well. I had the means. So why not?\"\n\nI laughed to hide my embarrassment. I hadn't meant to pry. \"Are you married?\" I asked. That seemed like a safe question. She seemed uncomfortable right away, and I mentally kicked myself.\n\n\"No, just me. I never met the right guy.\"\n\nI mumbled something or other, feeling like a jackass.\n\n\"So what do you do?\" she asked.\n\nI almost heaved a sigh a relief at the change of topic. \"I'm an author,\" I said.\n\n\"Really? That's so cool! What do you write? Would I know any of your books?\"\n\nI wrote fantasy novels, but my real income came from writing erotic literature. Years of fighting for sales in my fantasy novels hadn't worked out for me. Years ago, I started writing erotic stories under a pseudonym and to my surprise it really took off. I was pulling in about 10K in sales a month. I had quit my regular job and became a full-time writer, realising my lifelong dream. The appetite for erotic fiction was massive. And thankfully my imagination was unlimited. But I couldn't tell my neighbour that. So, I fell back on my fantasy novels. It was always a safe bet. \"I write fantasy novels. I have two series published.\"\n\nShe looked impressed and asked for the titles. I told her and handed her a business card.\n\n\"The QR code on the back will give you my first novel for free.\"\n\nShe looked at the back of the card. \"Wow, cool. I must check it out.\" She looked at the front and read my name. \"Can I pick up your books in the bookstore?\"\n\nI shook my head. \"No, only online.\"\n\n\"Cool,\" she said. She looked me over. Openly and I must have squirmed a little because she laughed. \"Sorry, I'm not checking you out! Just trying to figure out how old you are.\"\n\nI told her and she looked surprised and then she smacked my arm.\n\n\"Get out!\" she said. \"No way! I would have said thirty-eight and I'm an excellent judge of a man's age!\"\n\nI shook my head and chuckled. \"I get that a lot. No really, I turned fifty last year.\"\n\nShe made a face and mouthed wow at me.\n\n\"So, what do you do?\" I asked, curious about how this vibrant young lady could afford to move into the neighbourhood. I figured an inheritance or something.\n\nShe looked away uncomfortable. I felt like an ass.\n\n\"Sorry, I didn't mean to pry.\"\n\n\"No, no, it's okay,\" she said. \"I have a degree in law and poly sci.\"\n\n\"Ah, okay,\" I replied and knew right away she hadn't answered me. She looked anywhere but at me and when she did, she looked a little guilty to me. I felt bad. \"No, really, sorry I asked. None of my business.\"\n\nShe bent over to pick up the clipboard. I spied her pen and bent over to pick it up. I glanced at her for a moment and saw the magnificent ass she carried. It was stunning. I'm an ass man and know a great ass when I see one. She had one. She caught me looking, and I straightened and handed the pen to her. I could feel the heat in my cheeks.\n\n\"Sorry,\" I said.\n\nShe smiled and touched my arm. \"It's fine. I'm used to it.\"\n\nI looked away, and she lowered her hand. I could feel where she had touched me and I wanted to rub it. \n\n\"So is there a missus?\" she asked.\n\n\"Um, yeah. She's at work. Her name is Nancy.\"\n\nI thought perhaps I saw a small look of disappointment in her face then she beamed at me. \"Bill and Nancy! Nice.\"\n\nThe head mover hovered nearby, and Jennifer noticed him when I did. \"Looks like it's back to moving in,\" I said.\n\nShe nodded. \"Looks like.\"\n\n\"Well, it's been great meeting you.\" I said and started to head home and then I stopped and turned back to her. \"Listen, tonight you should come over for supper. I'm a chef, of all things. Past life. I do all the cooking and well, you'll be up to your tits in boxes, so please, come on over.\" Oh my god, I said tits, and chastised myself.\n\nShe laughed. \"Yup, up to my tits. Nice. Um, maybe? I'm not sure?\"\n\nI sighed in relief when she didn't freak out and I nodded. \"No problem. You should though if you can. Meet my wife. Enjoy a home-cooked meal. My wife can tell you about all the neighbours. Supper's at seven.\"\n\nShe looked thoughtful and then nodded. \"Okay, sure. Do I need to bring anything?\"\n\nI shook my head. \"Nah, just yourself.\"\n\n\"Deal.\"\n\n* * *\n\nWhen my wife Nancy came home, I told her about meeting Jennifer. I told her everything except for grabbing her tit. My wife was immediately happy. She loved new neighbours and was talking excitedly about going for pedicures and hanging out. She was happy I had invited her over for supper. It was just the two of us, and company was rare.\n\n\"So, what does she do?\" she asked.\n\n\"You know, I have no idea,\" I said. \"I asked, but she only said she had a law and poly sci degree.\"\n\n\"Huh,\" said my wife. She come around the kitchen island where I was prepping supper. She stole a mushroom and popped it into her mouth.\n\n\"Hey!\" I said.\n\nShe stuck her tongue out at me. \"What's for supper?\"\n\n\"Flank steak with all the fixings. Plus, my famous salad.\"\n\n\"Ooh, yum.\"\n\nTime passed, and I had supper almost ready. I looked at the clock in the kitchen and it read five minutes past seven. Just then the doorbell rang. Nancy cried out she had it and I heard the front door open.\n\nI could hear the women chatting up a storm at the front door. Unlike me, my wife could carry on a conversation with anyone about anything. I focused on finishing the meal. I was a little nervous about seeing Jennifer again, especially with my wife present.\n\nThe grilled flank was resting on a cutting board under tinfoil. Everything else was ready and in serving dishes. Nancy had set the fancy dining room table with all the best china and crystal. She wanted to impress our neighbour. Me, I was happy to sit outside on the deck to eat. I had a lovely setup out there with a covered gazebo and sectional. I even had a propane fire pit. I sat out there and wrote from Spring to Fall. I drank coffee, wine, beer and smoked the occasional bit of pot with my vaporizer. I practically lived out there. The old neighbours where Jennifer now lived had rarely gone outside to their deck. I could see into theirs, which was odd for the area. Behind our backyards was a thick forest. My neighbour to the other side had a massive privacy fence. Jennifer would discover we almost shared a backyard, despite the low fence. She had an in-ground pool at least; which I envied. In the heat of summer, I used to stare at that pool but the old neighbours had kept to themselves.\n\nThe conversation between Nancy and Jennifer grew louder and then they entered the kitchen. I nearly dropped my carving knife. Jennifer was wearing a gorgeous summer dress. It hugged her figure and pushed her breasts up. She was stunning. She held out a bottle of red wine to me and I took it from her and thanked her. I glanced at the label and blinked. I knew this wine. Not that I'm a wine snob, but I know excellent wine when I see it. This wine was over a hundred dollars a bottle. \n\n\"This is too much!\" I said.\n\nJennifer smiled. \"Nonsense. It's wine. I wouldn't know one from another. Anyway, it's a re-gift. A client gave it to me.\"\n\n\"A client gave this to you?\" I asked.\n\n\"Yup,\" was all she said as she looked around the kitchen.\n\n\"The client must really appreciate you!\"\n\n\"You have no idea,\" she said. \"Your kitchen is the exact opposite of my house! The whole house is a mirror image!\"\n\nNancy laughed. \"True. Same model just reversed. Let me show you around.\"\n\n\"That would be lovely. It might give me ideas for my place.\"\n\n\"Hurry back,\" I said. \"Supper's ready.\"\n\nThe ladies went past me talking and to my surprise Jennifer touched my arm for a moment. I froze, and the women disappeared around the corner, talking. What the fuck? I thought.\n\nI opened the wine and decanted it. I carved the meat into thick slices and brought everything out to the table.\n\nThe evening went by in a blink. Before I knew it, the wine was gone, plus another one that paled in comparison. Nancy and Jennifer got along wonderfully despite the age gap. We found ourselves laughing like we had known each other for years, and the wine loosened up the conversation. Nancy tried to figure out what Jennifer did, but she remained elusive on the subject. Jennifer kept looking at me all evening and I admit I loved the attention. It's rare that a gorgeous young woman took any notice of me. Nancy seemed oblivious to it.\n\nLate in our evening, I apologised and headed outside for a smoke with my glass of wine. To my surprise Jennifer was on my heels. She smiled at me and pushed past and stopped looking at my sanctuary outside. It was dark out, but all my outside lights had automatically come on. \n\n\"Wow,\" she said. \"It's nice out here! Look at all the lights! It's beautiful!\"\n\n\"Thanks. I call it my fort. Nancy leaves me out here. It's where I write.\"\n\n\"Hmm. Nice,\" she took a sip from her wine. As near as I could tell, her and I had drank most of both bottles of wine. I was a little tipsy. \"Can I bum a smoke from you? I left mine at home. Didn't think you would be a smoker. We're so rare these days.\"\n\n\"Um, sure, no problem. Surprised you smoke. But I'm also gonna take a hit while I'm here.\"\n\nJennifer whirled on me and suddenly was standing really close to me. Closer than two people who had just met should stand. She slapped my chest and jostled her wine in her other hand. \"No fucking way! Yes! Share!\"\n\nI smiled down at her. Her face was glowing, and her smile was wide and real. Her teeth shone bright with the lights. The feel of her hand on my chest was sending jolts of electricity through me. I could see she was a little drunk. \"Sure. Come on.\"\n\n\"Doesn't your wife smoke?\"\n\n\"No,\" I said as I sat down on the sectional. Jennifer sat right next to me. There was plenty of room on the sectional, but she chose to sit right beside me, our thighs almost touching. My hands shook a little as I brought out my cigarettes and my stash. I handed her the smokes, and she took two out and put them both in her mouth. \"Nancy doesn't smoke. She hates it.\"\n\nJennifer lit both cigarettes and handed me one. She took a long draw and blew out a steady stream of smoke. \"Ah! So much better! Thank you, I was dying for a smoke.\"\n\nI chuckled and sat back and smoked my cigarette for a bit. We sat in silence and just enjoyed the smoke for a bit. I watched her thigh next to mine. It was so close to me. I could almost touch it. I laughed to myself as I realised this was more or less the setting of one of my erotic stories. Jennifer must have noticed my mirth.\n\n\"What's so funny?\"\n\n\"Nothing,\" I said and leaned forward and started getting out my vaporizer and grinder.\n\n\"You laughing at me?\" she asked.\n\nShe sounded half serious, and I looked back at her and raised an eyebrow. \"Nope.\"\n\nShe settled deeper into the sectional. \"Hmm. It's nice out here. I can see why you hang out.\"\n\nI filled the vaporizer and turned it out. It vibrated in my hand and made a slight buzzing noise.\n\n\"Ooh, a vibrator!\" she said and laughed at her own joke.\n\nI took a drag of my cigarette and blew the smoke out. \"Yup, pretty short vibration though. It would hardly give you a tickle.\"\n\n\"Hmm, I always need more than a tickle.\"\n\nI ignored her. I was very conscious of my wife inside the house loading the dishwasher. I felt exposed out here and worried I would say something wrong. And Jennifer was sitting so close to me, I couldn't help but be completely conscious of her presence.\n\n\"I wanna know what you were laughing at. Tell me,\" she demanded. \"I'm gonna think you were laughing at me.\"\n\n\"It's not you, just this...\" I waved my hands around the deck.\n\n\"Your deck? Why is that funny?\"\n\n\"It's not the deck. Just that this reminds me of my writing.\"\n\n\"Uh-huh. I looked you up by the way. Your novels are award-winning, but your sales don't seem very high.\"\n\nI was immediately annoyed. My vaporiser buzzed again indicating the chamber had reached temperature. I picked it up and drew a breath through it and held my breath. I handed the device to Jennifer who looked at it.\n\n\"What do I do?\"\n\nI exhaled and coughed a little. \"Just suck in.\"\n\n\"Ooh, I'm really good at that,\" she said and took a draw while I coughed in surprise at her.\n\nI glanced sideways and I could see the mischievous look in her eyes. She blew out and looked surprised.\n\n\"Where's the smoke?\"\n\n\"There really isn't any, except maybe a little. Much cleaner smoke that way.\"\n\n\"Neat. I have to get one of these. I roll with cigar wraps. I love the added flavour. So, your writing. How are you making a living writing when your books don't sell?\"\n\n\"How do you afford a house at your age with no apparent job?\"\n\nJennifer took another hit and passed it back to me. In a moment she exhaled. \"Fair. So you don't want to tell me what you write and I don't want to tell you what I do. That about it?\"\n\nI nodded holding my breath.\n\nI felt her hand on my back and she stroked it lightly. I coughed, and she patted my back. \"Fair enough, Bill. We each keep our secrets.\"\n\nI said nothing.\n\n\"How strong is this shit?\"\n\n\"Pretty strong. Wait a few minutes. This shit is the best. A really nice sour diesel.\"\n\n\"Nice.\"\n\nWe finished the vape and our wine. By then the pot was hitting and Jennifer was laughing pretty much nonstop. I brought her back inside and Nancy admonished me saying I was setting a bad example. Jennifer laughed and then said she had to go home. Nancy looked relived to me. She had to work early in the morning, and it was already late. We saw her to the door; she thanked us for a wonderful evening and sauntered home, holding her shoes in her hand.\n\nNancy and I just looked at each.\n\n\"She's nice,\" Nancy said. \"I think her and I are going to get along.\"\n\nI nodded and Nancy kissed me goodnight. I was a night owl. I would stay up for hours yet. I found the opened wine bottle and poured the last of it into my wineglass. In the kitchen the dishwasher was thrumming along. The kitchen was all clean and so I wandered back outside to my fort.\n\nI settled down and started to relax when I saw a light come on next door. Jennifer had entered her bedroom. I saw her red hair move past the window and realised she hadn't put up her drapes yet. Her window was fully exposed. I couldn't help myself. I kept my eyes glued to the window hoping for a glimpse. I didn't have to wait long. In moments, Jennifer walked past the window wearing nothing but a bra. I could only see her from the waist up. She stopped by the window and looked out across to the forest behind our yards. I could see her reach behind her back and undo her bra. She shrugged her shoulders and her breasts were revealed in all their glory.\n\nShe reached up and massaged them. I could see the relief in her expression having released her girls from captivity. She had tiny areolas but large nipples. She rubbed her breasts and then tweaked her nipples. I was in awe of them. With her tiny frame they appeared huge. Certainly more than a handful. She was stunning and I could no more look away than jump off a cliff.\n\nSlowly I could see her eyes shift and then she was looking right at me sitting on my deck with a glass of wine staring up at her. She held my gaze and smiled. She stood there with her breasts exposed and stared at me smiling. My cock lurched in my pants and I heard a roaring in my ears. The moment was so very erotic to me. She raised a hand and gave me a little wave and then turned and disappeared inside her bedroom. In moments her light turned off.",
        "I sat there for an hour thinking about what I had just seen. She was brazen. Clearly comfortable with her body. She was gorgeous and a little bit of a tease. I smiled to myself. I was really liking my new neighbour.\n\n* * *\n\nA couple of weeks went by. I would see Jennifer most days. We would talk briefly, laugh a little, and then go about our days. She would drive off every morning and return late in the afternoon. Working from home I got to see all this. It's hard not to notice the day-to-day activities of your neighbours. \n\nI wanted to bring up seeing her naked that night, but there was no way to casually bring it up. She said nothing and never even hinted at it. She did tell me the weed we had smoked was amazing, and she had bought some from the local store.\n\nSometimes we would smoke together and talk across the fence. It was always pleasant friendly conversations. I was comfortable around her and opened up a little more. She now knew me for the geek I was and even knew most of the recent and old scifi and fantasy movies. She traded movie quotes like a trooper and knew all the cult classics. To my surprise, she even knew my favourite movie of all time 'Scott Pilgrim versus The World'.\n\nWe were smoking a cigarette, talking across the fence between us. She took a drag and blew it out. \"So, who would you rather fuck, Knives Chau or Ramona Flowers? Or maybe Kim Pine?\"\n\nWe had progressed in our conversations that this question didn't even phase me. \"Trick question, Knives is underage.\"\n\n\"Okay, pretend she isn't jailbait. Which one?\"\n\nI thought for a moment. \"Knives.\"\n\n\"I think I know why.\"\n\n\"Why then, smartass?\"\n\n\"Ramona doesn't put out. She's actually kind of a bitch about it. Lures poor Scott into bed and then fucking changes her mind. Okay, I respect her choice, sure, but fuck that's cold.\"\n\n\"Uh-huh.\"\n\n\"Now Knives, she's hot and willing. She totally fights for Scott. A woman who is willing to fight for you will most likely also suck your dick.\"\n\n\"Uh-huh.\"\n\n\"When's the last time you had your dick sucked?\"\n\nI choked a little. She had obliterated our line of civility and created a whole new one much farther down the track. \"Um, what?\"\n\n\"Come on, old man. Spill. When was the last time Nancy sucked your dick?\"\n\nI debated whether I should answer. The truth was not pleasant. But Jennifer was fun, and I enjoyed these strange talks with her. \"Only once, just before we were married.\"\n\nJennifer gave me an incredible look. \"What. The. Fuck? Seriously?\"\n\nI nodded. \n\n\"That is totally fucked up. Seriously? Bill, that's not right. You eat her out?\"\n\nI nodded. \"Yeah, all the time.\"\n\n\"You any good at it?\"\n\n\"Um, I think so.\" Truth was I was pretty sure I was more than okay. I've had a few girlfriends over the years. Sex in my marriage was pretty much non-existent. I went through a painful time coming to terms with that. Even some depression if I could admit that to myself. The only way I could stay with my wife was to find sex elsewhere.\n\n\"Did you ever ask her why?\"\n\n\"Yes, she said she wasn't brought up that way.\"\n\n\"Okay, that is more fucked up. Did her parents bring her up and say, when you are married don't suck your husband's cock? No. Of course not. This is a personal choice on her part.\" Jennifer looked pensive. \"That's cruel. Does she like you eating her out?\" \n\n\"Yup. Pretty sure she does.\" I finished my cigarette and stubbed it out in a little sand filled ashtray. \n\nJennifer finished her own cigarette and then looked at me. \"Ever cheat?\"\n\nI looked at her for a long time. I didn't know if I could trust her. I barely knew her. But we had formed a friendship of sorts. And honestly, it felt good to talk about this with someone. \"Yeah, a bunch of times. I've had girlfriends on the side. A few.\" \n\nJennifer nodded. \"Good.\" She looked at her watch and a look of alarm crossed her face. \"Oops, I have to run. Ciao! Talk later, okay?\"\n\n\"You bet.\"\n\n\"Bye, hon!\" she said and ran off into her house.\n\nA little while later I was still outside working on my latest novel. As usual, I had an erection while writing my books. It was always an indicator on whether I was hitting the mark. My erotic novels are very, very dirty. It isn't vanilla sex. Its kink and very hard-core. It's how my mind thinks.\n\nPart of me had noticed that Jennifer hadn't left her house. In fact, she hadn't left for work in the morning for the past week. I found it a little odd. I noticed a movement and looked up to see Jennifer look out her bedroom window and then close the drapes. I had caught a flash of red but was certain she had been wearing a sky-blue dress outside with me. I shook my head and concentrated on my novel.\n\nI heard her doorbell ring and then silence. I could see between our houses and looked for a UPS truck or something. The street was empty. I lit up a smoke and looked up at her bedroom window. For a moment the drapes opened, and a strange man was looking out. He glanced down at me and then suddenly Jennifer was there closing the drapes. I caught her bare freckled shoulder for a moment before they disappeared.\n\nThat was decidedly odd, I thought and finished my smoke and went back to my writing.\n\nAlmost exactly an hour later I heard Jennifer's front door close. A minute after that a rather expensive BMW drove past our houses and away. I glimpsed the man behind the wheel. It was the same man I had seen in Jennifer's bedroom window.\n\nShe must have a boyfriend, I thought. But she said she didn't have one.\n\nI was puzzled. I noticed the drapes to Jennifer's window open and Jennifer looked out. Her long red hair was mussed up. Her make up a little smeared. She looked flushed. She looked like someone who had just had sex. She saw me looking up at her and I saw fright in her eyes for just a moment and she vanished inside.\n\nA half hour later Jennifer appeared back outside. She had fixed herself up. She lit a smoke and stood near the fence. I joined her. She looked long and hard at me. I could sense her trying to judge me.\n\n\"Boyfriend?\" I asked.\n\nJennifer hesitated and then nodded.\n\n\"Nice. He looked rich.\"\n\n\"He is. Very rich,\" she said and took a drag.\n\n\"Nice.\"\n\nJennifer gave me a long look sizing me up for a moment. I didn't know what was going on, but I truly didn't care what she was doing. I shrugged at her. She flashed me a smile and went back inside.\n\n* * *\n\nI'm not a stupid man, but sometimes I can't see the forest for the trees. It took me about two weeks to figure out what was going on. I think I knew earlier but couldn't believe it.\n\nA new man would appear at Jennifer's house almost every day. Sometimes it would be two men per day at different times. Some would stay for a few hours, but most would only be for an hour. Always precisely an hour. I watched from the front of the house. They would park a good distance away from her house and walk to her door. They always appeared nervous and would look around at the neighbourhood.\n\nThey were clients. Jennifer's clients. She was a service provider.\n\nIt took me a little digging on the internet, but I eventually found her. Her red hair was the critical tag I needed to locate her website and ads. She was a VIP escort and highly rated and in demand. Her website showed many pictures of her in varying stages of undress. Her face was either hidden or obscured, but I recognised her easily. \n\nHer pictures were amazing. She had them professionally done, and they were erotic and exposed everything. I stared at a picture of her open, wet pussy all the time. It was my favourite picture of her. I found it extremely erotic living next door to a high-priced escort. I couldn't afford her. She was a thousand dollars an hour. She catered to all tastes with a really strict vetting process.\n\nShe only accepted clients referred to her by those clients she respected and trusted. It was by word of mouth. Based on the quality of the cars leaving the area, her clients were very wealthy. The upper one percent for sure. In the past two weeks she had seen thirteen men. Based on her lowest rate that was at least thirty thousand dollars. At least. Her speciality was catering to hidden desires. And men paid for it. She offered a service to discover their hidden desires, and those sessions required a minimum of three hours. She guaranteed her work. Jennifer had seen four clients for an entire afternoon each. That was six thousand a session.\n\nNo wonder she could afford her house. I figured she was making well over half a million dollars a year. I was impressed. \n\nI said nothing to her. She would join me for a smoke. Sometimes we smoked some weed. We would talk about anything and everything but never about what she did for a living. I knew her well enough now that I knew she knew I knew.\n\nOne day I wrote out my pseudonym on a piece of paper. I passed it to her, and she looked puzzled.\n\n\"Look it up. That's my pseudonym. I know your secret, Jennifer. Now you will know mine. My wife doesn't even know.\"\n\nJennifer looked shocked and scared. That was the first time I had openly admitted I knew what she did. She looked a little ashamed and disappeared inside her house.\n\nAn hour later I heard my doorbell ring. I answered and found Jennifer on the other side. She was holding a bottle of wine in one hand and a MacBook in the other. She looked up at me and then pushed past me and into my house. I closed the door and found two wine glasses. I found her outside on my sectional. She wore workout clothes and even made them look sexy. Her shorts were cut pretty high and barely reached the top of her thighs. The material was pressed up against her vulva. They hid very little.\n\nShe twisted the neck of the bottle and removed the screw top. I thought perhaps it was a cheap bottle of wine and then saw it was a Penfolds Grange Bin 95. I'd heard of it. The bottle was easily worth $750.\n\nI opened my mouth to say something when she shushed me. She grabbed the glasses and poured a healthy amount in both glasses. She handed me mine and then gulped back half of hers. She saw my smokes on the table and grabbed one and lit it.\n\nThen she looked at me. It was a long hard look and I could see her sizing me up. She must have come to a decision. She took a drag and blew out the smoke.\n\n\"Do you have any weed?\" she asked.\n\nI nodded and then sipped the wine. I stared at my glass. Jesus this was good.\n\n\"Get it,\" she ordered. \n\nI had to move past her and stopped in front of her. She looked up at me. \"Move, I need to get past you.\"\n\nShe looked at me a moment and I wondered if she would ever move. Finally, she twisted her legs to the side. As I moved past her, I felt her hand brush my leg.\n\nI got my weed and came back past her again. As soon as I got close, she moved her legs to block me. She reached up and ran her hand up my thigh. I couldn't help it, my cock surged to life. She watched it and said nothing. I was dying of embarrassment. I was standing there with an erection in my pants inches from her face.\n\nShe moved her legs and waved her hand past her. I felt disappointment. Part of me, the dirty man who wrote erotic fiction wanted something more. The sane part of me moved past her and put down my weed on the table.\n\nJennifer grabbed it and filled my vaporizer from the grinder. She turned it on and held the vibrating pen in her hand. She smiled at me when it happened, and I felt myself relax. If she still found that funny then we were probably okay.\n\nShe patted the seat beside her. I sat, and she scooted closer to me. Our thighs almost touched. I felt enormously nervous. \n\nJennifer took a hit and handed my vape to me. I took a draw and then exhaled. We said nothing but smoked and drank wine. When the vape turned off she set it down.\n\n\"So, you write erotic fiction.\"\n\n\"Yup.\"\n\n\"You're a best seller.\"\n\n\"Yup.\"\n\n\"I've read some.\"\n\n\"What? In an hour?\"\n\n\"No, stupid. I read it about a year ago. And honestly, probably about five more of them. I would never have guessed it was you.\"\n\n\"I only have twelve published.\"\n\n\"They're really good. Really hot. I've used some of your scenes in my work.\"\n\nThat piqued my interest. \"Really?\"\n\n\"Yeah, I've acted them out with a couple with clients.\"\n\nI found that incredibly erotic. I wanted to ask which ones but decided not to. Later. \"So, VIP escort services.\"\n\n\"Yup.\"\n\n\"You're one of the top ones. Internationally.\"\n\n\"Yup.\"\n\n\"I've read your website. The reviews.\"\n\n\"Did you check out my gallery?\"\n\n\"Yeah.\"\n\nShe said nothing, and I worried I had crossed some strange line. \"Which one was your favourite?\"\n\nI swallowed. \"Um, the close-up of your pussy. That one was the one I liked the most. They're all good, truly. You're gorgeous. But you know that.\"\n\nJennifer grabbed her MacBook and opened up the browser. She was getting her own wifi signal from her house. With a couple of clicks she was on her website. She clicked the gallery and scrolled down quickly and then clicked the picture I mentioned. It filled the screen. Her shaved pussy lips were swollen and pulled apart. Her clit was extended and engorged. You could see into her vagina and all the bumps and crevices that made it so wonderful. Everything was covered in her juices. She was so wet in the picture. I adored it.\n\n\"This one?\"\n\nI looked up from the picture and nodded. My cock was getting stiff. It's not every day you sit next to a world-class escort and look at a picture of her pussy. She was looking at the picture but then she looked at me.\n\n\"I like it too,\" she said. \"My girlfriend at the time took it for me. Most of the wetness you see is her spit. She had just given me wonderful head. It's one of my favourites. It reminds me of her.\"\n\nI just nodded. My head felt a little light.\n\n\"Does it bother you?\"\n\nI knew what she meant. She wanted to know if living next to an escort bothered me. I shook my head. \"No. Not at all, actually.\"\n\n\"So what now?\" she asked.\n\nThe questioned surprised me and I shook my head. \"Nothing. We're good. There is no 'what now'.\"\n\nJennifer sat silently beside me. Then she moved slightly away. I looked at her and then dropped my jaw. She slid her shorts down and spread her legs in one smooth motion. Her pussy was right there in front of me. She spread the lips and showed me the inside of her pussy. It was just like the picture but real and right in front of me. \"Is this what you want, Bill?\"\n\nI licked my lips. My cock strained painfully in my pants. Her pussy was stunning. A little patch of red hair lay above her mound, but the rest was smooth. No razor marks or anything. This was waxed. I desperately wanted to eat her pussy. The hunger was overwhelming. Jennifer arched her eyebrows at me.\n\n\"She's right here. Take her. Taste her.\"\n\nI'm not sure where the strength came from. The weed was buzzing nicely, and I was horny as hell. I could smell her pussy now, dammit. I swallowed my spit and then grabbed my glass of wine. I took a sip and then toasted her pussy. \"It looks better in person, Jennifer. There is nothing more than I would like than to eat your pussy. For hours. But...\"\n\nJennifer looked surprised. \"But...?\"\n\n\"But I don't think you are offering it out of an appreciation of me. Look, I really like you. I admit I would fuck your brains out if given half a chance. But Jennifer, offering yourself to me like this? You don't need to buy me or whatever. Put your pants back on and let's drink this very, very expensive wine and enjoy this buzz.\"\n\nJennifer stared at me for a long time. I stole glances at her pussy. She might have looked hurt, but I had no idea how to judge her expression. After a moment she stood up and put her shorts back on. She sat back down and grabbed her wine and took a sip. \"How expensive?\"\n\n\"About $750 dollars a bottle.\"\n\n\"Jesus, Alan was good to me.\"\n\n\"Alan?\"\n\n\"Yeah, a regular in Australia. In Sydney. His house overlooks the bridge and opera house.\"\n\n\"Do you have a lot of rich clients?\"\n\n\"They all are. They can afford me. You're the first, by the way.\"\n\n\"The first what?\"\n\n\"To turn me down. Dude, I was sitting back with my pussy right in your face and you turned it down.\"\n\n\"Yeah, I did. Not that I didn't want it. I really fucking do. More than anything. Jesus.\"\n\n\"So why'd you say no?\"\n\n\"Cause that's not the way I would want it. It felt like a bribe.\"\n\n\"What?\"\n\n\"You were bribing me with it. I dunno. To keep my silence or something?\"\n\nJennifer said nothing for a while. \"I was, wasn't I?\"\n\nI nodded.\n\n\"I'm sorry, Bill. That wasn't nice of me.\"\n\n\"No, it wasn't. I've been staring at that picture of your pussy for weeks. Then there it is right in front of me. Goddamn.\"\n\n\"Weeks? How long have you known?\"\n\n\"A couple of weeks.\"\n\n\"You said nothing this whole time!\"\n\n\"Nope.\"\n\n\"Did you jerk off to my pictures?\"\n\nI sipped my wine. \"Yup. Bunch of times.\"\n\n\"Good. I like that. It's hot knowing men do that to my pictures.\" She said nothing for a bit. \"Want to know how I got in the business. Most men do.\"\n\n\"Yeah, I kind of do. I guess I'm most men.\"\n\n\"No, you're different, Bill. So here goes, fresh out of high school, just starting university, I was at a really expensive bar. A girlfriend dragged me there. We entered a back way and found ourselves in a special VIP room. She knew what it was about and had promised the clientele two girls. They wanted a redhead so wham, this chick pulled me into her world. The escort world. I was pretty high, but I recognised some men in the room. They were some of the rich and powerful. Top brass guys. Executives. But I learned something right away. I was talking to the CEO of a rather well-to-do corporation. I could see right away that he was desperate for attention. As a man. Not as a CEO. I can't explain it but something clicked with me right then and there. They were broken men.\n\n\"So, here I am, in a VIP escort champagne room, and I'm holding this poor man and telling him everything he needed to hear to boost him back up to feeling good about himself. He cried like a baby, with me cradling his head. He calmed down, then I blew him because I liked him. I even swallowed. An hour of my life, a quick blow job and swallow, and I walked out of there with $10K in my pocket. He apologised. It was all he had on him.\n\n\"I left him my details. I liked the guy. I was hoping he might want to text or chat or whatever. When he contacted me next it was to refer me to another CEO he knew. That's how it started. I would sit, talk, help them, blow them and leave. It might have been my tenth client before I spread my legs. I had earned close to $100k just blowing ten men. The first guy to fuck me paid me $50K. It made my university studies seem lame.\"\n\n\"You're kidding, right? No one pays that much.\"\n\n\"I'm not just anyone, Bill. I have a way of diving past all the bullshit that men surround themselves with, rip it away, and make the men feel like men again. It's a gift.\"\n\n\"You don't do that with me.\"\n\nJennifer got a funny look in her face. She got up and slid onto my lap, knees up against my ass. She looked into my eyes for a long moment then she kissed me. Not a chaste kiss, but the kiss between two lovers. She was so gentle, so sensual, so much woman. She tasted like wine and cigarettes, but I didn't care. I felt my passion soar and then, it was over. She broke the kiss and looked at me. \"That's because you aren't broken, Bill.\"\n\n\"Um, okay. If you say so.\"\n\n\"I do. Now. I want to do something for you, Bill the Neighbour.\"\n\n\"What's that?\"\n\n\"I want to blow you. Will you let me do that for you?\"\n\n\"What? Why?\"\n\n\"Because when you told me your wife doesn't do that for you, my heart broke a little. I thought to myself, if I was your wife, I would blow you every day. It's not hard. It's empowering. I have a man's penis in my mouth, and I have all the power. Pain, pleasure, release. It's all mine.\"",
        "\"Wow. I don't have $10K...\"\n\nJennifer slapped my shoulder and laughed. \"Bastard!\"\n\nI chuckled. \"Um, okay. How do we start this? Like this isn't awkward or anything.\"\n\nJennifer slipped off me and soon was working my belt buckle and pants off. She reached up and pulled my underwear off me and my cock, now hard, sprung forward. She pushed me back onto the sectional. She positioned herself between my legs, pulled my shirt out of the way and grabbed my cock gently with one hand. She licked her lips and gently stroked my cock.\n\nIt felt completely surreal to be sitting with my pants at my ankles and a gorgeous woman stroking my cock in my backyard. \"Sorry, it's just kind of average size.\"\n\nShe frowned up at me. \"Men are so sensitive about the size of their cocks. This is perfectly average which is perfectly fine. It's meant to be average because women's pussies are perfectly average. I won't lie, sometimes a really fat cock is great. But I'm destroyed afterward. Ask a guy with a really big cock what he wants. He'll say he wished he had a normal-sized cock. You can probably fuck a woman all night long with this, am I right?\"\n\nI nodded unable to speak. Her hand on my cock was feeling amazing, and I was focused on the pleasure.\n\n\"So, Bill the Neighbour, I adore cocks exactly like this. You're circumcised which I like. Uncut men don't clean themselves properly. I once threw up on a client. His cock smelt like rotten fucking cheese. Uncut cocks are never truly clean. But this, Bill. This is wonderful. I can smell your cock and it smells delicious. I've wanted to do this ever since that dinner over here. And now I'm going to. You ready, Bill?\"\n\nI nodded.\n\nJennifer smiled and lowered her mouth over my cock. Her mouth felt so wet and so warm. I was lost right away. Part of me was worried. I've never truly enjoyed blow jobs. I'd only met one woman who could bring me to orgasm with her mouth and I have no idea how she did it. One minute she was blowing me, the next I was coming. It wasn't until later that I asked where my cum went. She laughed and said she had swallowed it. I always felt I had missed out on something. \n\nJennifer was really good. I could tell at once. She wasn't going rough or hard. It was gentle and loving. Her tongue swirled in just the right places. And she never stopped. There was no licking the shaft or head or anything like that. That always distracted me. No. She used her mouth and tongue like a vagina. She made love to my cock with her mouth. She put it in as far as she could but never all the way to the back. She was comfortable and relaxed and so was I. I felt safe and warm and all my inhibitions fled. I wanted to cum for this woman. She wanted me to cum for her.\n\nAnd I did. My orgasm rushed up without hesitation. It filled me and made the hairs rise on my body. It felt like the orgasm of a much younger me. I watched as she took my orgasm and enjoyed my pleasure. I came into her mouth and she swallowed as naturally as can be. It was a magic moment. She kept me in her mouth until the spasms stopped and my breathing resumed.\n\nShe popped my cock out of her mouth and smiled up at me. \"How was that?\"\n\n\"Jesus, Jennifer. That was amazing. I've never felt anything like that!\"\n\n\"I'm good.\" She got up and sat next to me. She placed her hand on my cock and played with it. It stayed hard. It always did. \"It's still hard?\"\n\n\"Yeah, it'll stay that way if you keep near me or touching me.\"\n\n\"Wow. How long?\"\n\n\"All night? Part of the reason, I think, that my wife wants little to do with me sexually. I can go all night. I think she's fed up.\"\n\nJennifer made a strange sound. \"Nope. She's just fucking stupid.\" Jennifer looked startled. \"Oh my god, I'm sorry, I shouldn't have said that.\"\n\nI laughed. \"It's okay. I don't mind.\"\n\nJennifer played with my cock a little. I enjoyed it. I felt so close to her. I mean, how could I not? I was wondering what was going to happen next. Jennifer made a soft noise. \"When does your wife get home?\"\n\nI glanced at my watch. \"Not for another three hours.\"\n\nJennifer grinned and shuffled a little away from me. She shucked her shorts and spread her legs again. She ran her finger up through her pussy. She parted her lips and showed me the inside again. I licked my lips. \"This is not a bribe, Bill. I really want you to eat me. Please?\"\n\nI didn't need another invitation. I slid off the sectional and Jennifer positioned her ass at the edge of the cushion. I could smell her musk. It was heavenly. My cock strained painfully. I wanted nothing more than to plunge it inside her. But my hunger needed to taste her. I leaned forward and gently ran the tip of my tongue between the soft, swollen lips of her labia. She shuddered and made a soft sound. She pulled back on the top of her mound with her fingers and her clit was exposed from its hood. I licked again and circled around her clit, intentionally missing her clit. She sucked in a breath with a hiss. She tasted wonderful and I said so.\n\n\"Oh, Bill. Just eat me. No talk.\"\n\nAnd I did. I was very gentle. I licked her outer and inner labia all over. Sucking each lip into my mouth. I stayed away from her clit and I could tell it was driving her nuts. I pushed a stiff tongue a little deeper into her slit and swirled the opening to her vagina. I wondered for a moment just how clean she was but tossed that worry aside. She was clean. I knew it. And she was mine right now. I pushed my hunger down to keep it at bay. If I let it loose now, I wouldn't be able to stay gentle. I felt her fingers comb through my hair. As my tongue approached her clit, she tried to pull my mouth toward it, but I resisted. She swore at me in a very unladylike manner and I grinned against her pussy. \n\nShe was getting very wet. Clear delicious nectar flowed from her. I lapped it up. I broadened my tongue and made soft strokes up her slit. I moved my head back a little. I could see her pussy in all its glory and her little rosebud, perfect and puckered. I ignored it and licked upwards. Slowly and pulsing my tongue. I came closer to her clit and then with just the tip of my tongue I brushed it. Her hand on my head pushed down hard, but I resisted. She gasped loudly and made a little whine. I circled her clit gently with my tongue and then lapped upwards again. I probed her opening and then licked up her slit. I reached her clit and sucked it into my mouth with a little pressure. She thrust her groin into my face.\n\n\"Jesus, Bill. Eat my pussy. Lick my clit. Oh, fuck. You bastard. Eat me!\" she cried out. \n\nI continued my licking. From vagina to her lips to her clit. I felt her starting to grind my face. She was close. I put my lips around her swollen clit, her hard-little nub, and brushed my teeth against it. She cried out, and I abandoned my gentleness. I licked her hard, swirling my tongue all over her pussy, moving my tongue at random. Her smell filled my nostrils and my hunger rose. I attacked her clit and flicked my hard tongue across it and over it and under it. I kept up the attack and then took a finger and slowly inserted it into her vagina. She cried out and moaned. I slowly and gently moved my finger in and out of her vagina. I could feel her pussy contract around it. I maintained the pressure on her clit, and she cried out.\n\n\"Oh, oh, oh! I'm coming, Jesus fuck, I'm coming so hard! Oh God, so good. Never...\" Her back arched and her legs clamped onto the side of my head squeezing me. Her pussy clenched hard on my finger and she pushed my head into her groin with both hands. Muffled I heard her cry out and suddenly she was bucking hard against my face. She thrust her groin hard into my face again and again. I felt a flood of liquid around my finger and she continued to cum. Breathing was impossible. I was suffocating and loving it. I eased my attack on her clit and slowly she stopped bucking and then her legs swung free. I pulled back and breathed like a drowning man. I licked her slit gently, savouring her juices. I kept at it until she pushed my head away. \"Enough. Oh, Jesus. Enough.\"\n\nI lifted my head and smiled at her. She looked down at me with wonder and then grabbed my face and pulled me up to kiss me. Her tongue danced in my mouth. We kissed for a very long time, with me laying across her pelvis, feeling the heat of her pussy on my stomach. She made a little noise in my mouth and she pulled me up higher keeping her lips locked on mine.\n\nMy cock, hard and aching, rubbed up against her pussy and she moaned into my mouth. I felt her fumble with her hand and then she had my cock in her hand. She pushed the head of my cock to her opening and then thrust her hips up and impaled herself on my cock. I felt her heat surround my cock and her vice like grip. She was so wet. Everything in my being was focused on the feeling of her pussy around my cock. I was inside her. This gorgeous, sexy woman. \n\nMy body took charge. It knew what to do. I pulled back and felt her pussy lips clinging to my cock. I felt cum boil in my nuts. I wouldn't last long. I thrust inside and she cried out and broke the kiss. She held my head and looked into my eyes. Her green eyes were swimming in lust. I knew one thing: she wanted me, more than anything. This knowledge filled me and soon I was thrusting into her hard. My pelvis pounded into hers. We could hear how wet she was. Her pussy clenched my length and heightened my feelings of pleasure. She was enjoying this. And so was I.\n\nI gasped as I felt cum surge in my cock. \"I'm close. Oh, fuck, Jennifer, I'm close.\"\n\nShe growled. \"Don't you dare! Not yet. Hold on, baby!\" She thrust against me hard over and over meeting my strokes with fire. \"I'm close, but not yet. This feels so fucking good. I don't want it to end.\"\n\nI shook my head. \"I can't. I can't. It's too much.\"\n\n\"Cum in me, Bill! Cum in me!\" she yelled.\n\nAnd I came. Hard. I drove my cock deep inside her and my orgasm swept over me. Nothing existed but the feeling of her pussy around my cock and the spasm of my ejaculation. I felt young again. The orgasm unlike anything I had felt in a long, long time. As soon as my cock spewed the first jet of cum, Jennifer came too. She pulled my body against hers and wrapped her legs around me and squeezed me tight. She shuddered and cried out, almost a scream. Her pussy clenched hard around my cock. I could feel her milking me. She came for a long time. I was finished and lying there as she spasmed against me. I heard sobs come from her throat. She pressed her pelvis hard against me and I could feel the back of her vagina brush the tip of my cock.\n\nAfter a time, she just relaxed completely but still held me against her. I twitched my cock, and she clenched her pussy. We kept up this game for a little while. I could feel her smile on my neck.\n\nI pulled back my head and looked into her eyes. Her eyes darted around my face looking for something. Finally, she looked deep into my eyes and kissed me. We separated and lay beside each other on the sectional holding hands. I lifted her hand in mine and kissed the back of it.\n\nShe glanced down at my cock. It was still hard but lying against my stomach. \"That is one beautiful cock, Bill.\"\n\nI chuckled. \"I'm sure you say that to everyone.\" \n\nShe shook her head. \"I've had a lot of cock, Bill. I consider myself an expert. It's a wonder, and no, I am not inflating your ego. No cock has ever made me cum like that. And your pussy eating. Just. Wow. Dude. Your wife is an idiot. That was wonderful, Bill. The best sex I've ever had. Truly.\"\n\nI had nothing to say. I didn't truly believe her, but I was content. Every man wants to hear those words.\n\n\"So, wow,\" she said. \"You're home every day, aren't you?\"\n\nI nodded.\n\n\"Great. I'm going to visit you every day.\"\n\nI turned my head to look at her. I could see a tear running down her cheek. I rose up and wiped it away. \"Crying? Why?\"\n\n\"That was beautiful, Bill. I never felt so close before. That was simply the best.\"\n\nI felt the same and said so.\n\n\"I'll be back tomorrow.\"\n\nI smiled. \"Deal.\"\n\n\"I'll have to have you over to my house. There are some things I need to show you.\"\n\n\"Like what?\"\n\n\"You're the erotic writer. Everything in your books? I have that at home. Come over and play with me.\"\n\nI lay back smiling. \"I think this is the start of a beautiful relationship.\"\n\nJennifer let go of my hand and grabbed my cock. \"This thing ready to go?\""
    ],
    "authorname": "Estcher",
    "tags": [
        "coupling",
        "cuming",
        "cunnilingus",
        "escort",
        "fornication",
        "married",
        "straight"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/escort-neighbour"
}