{
    "title": "The Billionaire's Assistant",
    "pages": [
        "<p align=\"center\">Aubrey</p>\n\nMy heart was pounding as if I'd just completed a marathon and I urgently tried to get some much-needed moisture into my parched mouth before I had to speak. I couldn't believe it was actually happening. What have I done? my mind cried, deafening in the hushed air of the ceremony.\n\n\"Do you, Aubrey, take this man to be your lawfully wedded husband, in sickness and in health, to have and to hold, forsaking all others, until death do you part?\" the distinguished, grey haired minister asked, his voice soft, yet somehow full of verve and authority.\n\nThe man was dressed in his full regalia of black robe, white stole, and clergy collar. Like his voice, he appeared to be both authoritative and someone's kindly grandfather, a tiny smile on his lips, his eyes gentle behind his small spectacles as he waited for my answer. My legs were shaking so badly I was afraid I was going to fall. Thank God the elaborate wedding dress hid them from sight.\n\n\"I do,\" I said as loudly as I dared, proud and relieved my voice hadn't quivered.\n\nThe minister smiled and gave me a slight nod before he turned his attention to Dash. \"Do you, Daschle, take this woman to be your lawfully wedded wife, in sickness and in health, to have and to hold, forsaking all others, until death do you part?\"\n\nDash smiled down at me and my knees became even weaker. He was devastatingly handsome in his classic black and white tux, and I knew what was under there was just as delicious. I'd seen him in swim trunks more than once, and it'd been damned hard not to stare. His dark hair and eyes, strong cheekbones and chin, and a well-toned, muscular body that a five-thousand-dollar bespoke tuxedo couldn't completely hide, gave him a slightly dangerous vibe. He looked every bit like the type of man any sane person wouldn't want to trifle with, either in the boardroom or the back alley... until he smiled. His smile was quick, easy, open, and banished the darkness as if it had never been.\n\n\"I do,\" he said, his voice strong and full of confidence as his smile spread slightly.\n\nThe minister smiled and nodded at Dash as he had me. \"Then by the power vested in me by the state of Nevada, I pronounce you husband and wife. You may kiss the bride.\"\n\nDash slowly raised my intricate lace veil and slid his arm around behind my back as he took my lips in a slow kiss. I was thankful for the support as he pulled me in because I felt like I was in real danger of collapsing. I'd just married Daschle Callisto, heir to Callisto Holdings, one of the largest resort development companies in the world, and I was kissing him, really kissing him, for the first time. He released me, and I wobbled slightly. I felt dizzy and out of control, but I gathered myself and played my part. I turned to the gathered throng, took a deep breath as the wedding march began, and forced a beaming smile as he escorted me down the aisle.\n\nOur wedding was the social event of season. It took a lot to raise eyebrows in Las Vegas, but the most eligible man in town, and heir to a multibillion-dollar fortune, suddenly announcing he was marrying, and to an unknown like me, his personal assistant, had raised more than a few. Tongues were wagging that I was pregnant, that I was blackmailing him, that he'd lost his mind, but none of the gossip and speculation were true. He knew exactly what he was doing. I was the one who was unsure.\n\nWe spent the next three hours socializing with people far above my previous station in life. In the year that I'd worked for Dash, I'd become used to mixing with people who spent more on a single dress or suit than I had on my entire wardrobe, but I was still keenly aware of the differences in our social statuses. Before I'd been invisible to them, Dash's girl Friday, and I was given no more notice than his cell phone. That changed ninety days ago when he announced to the world our impending wedding.\n\nSuddenly I was on everyone's radar. I'd been mobbed by the nattering nabobs of the social set, eager to know my secret, wanting to understand how I'd nabbed the man every woman in the world wanted for herself. I had a secret alright, but I couldn't tell them. I could never tell anyone.\n\nThe ninety days had been a whirlwind. I was suddenly thrust into the moneyed elite. My wedding dress had cost more than my car, and I'd been appalled at the three-hundred-dollar a plate lunches and the fake smiles as people who had once thought of me as furniture suddenly wanted to be my friend. It'd been one thing when Dash was spending his money on lavish lunches and expensive gifts, but it was another thing entirely when it was me. I wasn't at all comfortable spending that kind of money, even when Dash had given me a Mastercard Black and basically said, 'Sky's the limit.' The only part of the whole affair I enjoyed was the envious glances some of the women couldn't quite hide. The same glances I was getting now.\n\n\"Congratulations, you two,\" Kaitlyn said as she slinked up, a crystal champagne flute in her hand.\n\n\"Thank you,\" I replied with a beaming smile, but she didn't fool me for a second.\n\nKaitlyn Tyree, great-granddaughter of Milton Tyree, founder of the Tyree Canning empire, had been after Dash for years. She had the money, the looks, and the ruthlessness to normally get what she wanted, but I'd snatched him from her claws. She was smiling now, but I knew she'd slit my throat in my sleep if she thought she could get away with it, just so she could be there to comfort Dash, and there were a couple dozen more women just like her. The list of women Dash had bedded regularly was long, and each of the women thought she was going to be the one to share his life, not some nameless assistant that nobody had ever heard of.\n\n\"Thanks, Kaitlyn,\" Dash replied, slipping his arm around me and pulling me in tight to his side. I smiled. I could get used to him doing that. \"I'm sure we're going to be very happy.\"\n\nMy smile flickered, but I forced it back to full power. I had my part to play. Kaitlyn would get her chance again... five years from today.\n\nWe did what people do during their wedding, eating cake, dancing, and sipping champagne. With a few exceptions, all female, everyone seemed genuinely happy for us. Dash's parents, William and Karen, had truly tried to make me feel part of the family, and I was thankful for their effort. They knew me, of course, as I was always at Dash's side, and while they'd always been friendly to me, I was certain they'd been horrified find out I was going to be their daughter-in-law. Much to my surprise and relief, after Dash had told them the news, they'd welcomed me, and over the next ninety days, had taken the place of my own parents, talking to me, encouraging me, calming my nerves, and striving to make me feel comfortable. Hurting them was going to be the most bitter pill of all to swallow.\n\nAfter the dancing and toasting were done, Dash led me to his meticulously restored, silver over black, 1952 Rolls Royce Silver Wraith. He had a collection of 32 cars, mostly European makes, by Ferrari, Bentley, Rolls Royce, Mercedes, and Jaguar. None were newer than 1959, nor older than 1939. I knew, because I was responsible for making sure the car he wanted was where he wanted it when he wanted it there. We climbed into the back of the Rolls and the driver shut the door.\n\n\"One more kiss, for a good show?\" he whispered as Terry, the driver, circled the car.\n\nI wouldn't mind being kissed again. \"We have to keep up appearances, right?\"\n\nAs he took my lips, Terry opened the front door and slid behind the wheel. Our lips slowly parted as the car rumbled to life with barely a whisper or shudder. Dash said nothing, watching my eyes a moment, before taking my lips again as Terry and the Rolls whisked us away in luxurious silence.\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">Dash</p>\n\nI smiled as Aubrey worked herself out of her wedding gown. We'd just gone wheels up in one of the Callisto jets on our way to Miami. Because it was just the two of us, we were taking the smallest of the three company planes, a Cessna Citation X. Since our flight was around five hours, I suggested that we make ourselves comfortable, and Aubrey had immediately stood and started struggling out of her wedding dress.\n\nI watched, enthralled as she appeared from under the mountain of white fabric, dressed only in lacy panties and bra. I'd always suspected there was more to the efficient Ms. Aubrey Madigan than met the eye, and seeing her barely clothed for the first time confirmed it.\n\nShe was stunning. Her strawberry blonde hair and fair complexion spoke to me at a deep level. She was so different than the women I normally had on my arm, and she had an honesty about her that I liked. She was her own person and didn't try to be who she thought I wanted her to be. She'd had her makeup professionally applied today, but she didn't look any different than she normally did, so light had been the touch. Her gaze spoke volumes, and I'd seen her green eyes dance with amusement and darken with disapproval. She'd seen me in more compromising situations than I'd care to admit, but she covered for my occasional indiscretions with aplomb.\n\nNow, for the first time I saw her for the truly beautiful woman she was. Not only were her eyes enchanting and her face lovely, but her body was perfect and without flaw.\n\n\"Don't look!\" she admonished as she covered herself.\n\nI chuckled. \"We're married. We might be sleeping in separate rooms, but you can't expect me not to see you.\"\n\nShe turned her back to me, lowered her arms, and pulled a pair of jeans out of her bag, shielding the carry-on with her body as if she didn't want me to see its contents. As she tugged her pants on I shook my head as my lips tightened in silent disapproval. We were going to have to do something about her wardrobe. She was far too lovely to hide behind off the rack jeans and shirts.\n\nShe shrugged in a blouse and then turned to face me. \"Just give me some time, okay? This is a big adjustment for me.\"\n\nI nodded. It was for me as well.\n\nTwo years ago, Tim, my best friend and loyal assistant, had been killed in a senseless car accident, and his death had rocked me back on my heels. I had grieved my loss, and in the process, had gone through several assistants. None had been able to fill Tim's position, either in my job or in my life. Two I simply didn't get along with, and the other three had complained bitterly about the long hours.\n\nAfter I'd let the latest assistant go, Aubrey had applied for the job. She was one of five applicants, but she'd impressed me with her intelligence, eagerness, and she had the skills I was looking for. When I'd offered her the position, I made it clear that if she worked for me, she had no life of her own. I expected her to be at my beck and call twenty-four hours a day, seven days a week, and most importantly, if she uttered a word about what she saw or heard, she would be instantly terminated. She hadn't even blinked.\n\nWhile she hadn't been able to replace Tim as my friend, she had more than filled his shoes as my assistant. Dad was the President and CEO of Callisto Holdings, but I was Vice-President of Development, and I was running the company day to day as he groomed me to take over when he retired.\n\nI had what every guy thought they wanted. Money. Power. Women. But I also had headaches, worries, and responsibilities. Development accounted for nearly eighty percent of Callisto Holdings revenue, with our construction division providing about fifteen percent, and the rest coming from Guest Services, the properties we were operating until we could find a buyer.\n\nAubrey, after we settled in, made my life so much easier. She was organized, responsible, discrete, and as reliable as the rising sun. After six months she was as necessary to me as breathing and eating. I'd even considered having her move into my house.\n\nThen Dad had dropped the bombshell on me. He'd reminded me of the stipulation of his retirement and of my future. I had to marry. He'd told me that as soon as I graduated college, but I'd thought he was kidding. It hadn't been mentioned in the eight years since, and I'd forgotten about it, but he hadn't been kidding.\n\nHe and Mom were old school. They'd married while in college and had built Callisto together, starting with a single, defunct motel on Lake Meade they'd bought, renovated, and then sold for a handsome profit. They believed the steadying influence of a spouse was a good thing, that it would teach me personal responsibility, and show me that I wasn't the only person in the world. In other words, they didn't want me to be the no-good, lay around, spoiled rich kid that didn't know how to do anything except spend money, and they thought having a family was the best way to achieve that.\n\nI'd laughed at the idea then, but I wasn't laughing now. Dad was serious. He wanted to retire, he wanted me to take over the company, but it wasn't going to happen unless I took a wife... and I had two years to do it. If I wasn't married by my thirty-fifth birthday, Dad said he was going to take the company public. If he did that, it would be up to the board of directors to decide if I took over the reins or they brought in outside talent. I'd protested, but it didn't take me long to realize no amount of arguing was going to change his mind, not with Mom backing the decision.\n\nI watched as Aubrey turned back to the bag and began extracting carefully folded pants and shirt. She placed the clothing on one of the small, highly polished wooden desks that fronted the cream-colored leather chairs. Finished with her task, she settled back into her chair with a sigh.\n\nShe'd again saved me from a potentially disastrous situation. After I realized I wasn't going to be able to talk Mom and Dad out of retiring, or taking the company public if I didn't marry, I spent the next two months evaluating my options.\n\nI had an almost unlimited number of women who might be willing to marry me. I'd made the cover of People magazine as the most eligible bachelor in America, for God's sake, and afterwards I'd been invited on Mornings with Emily, a nationally syndicated television talk show, for the same reason. The problem wasn't finding women. The problem was finding one I wanted to marry. I'd fucked more women than I could remember, but not one of them made me think they were for anything other than for my amusement and pleasure. I treated them well, but I had no intention or interest in falling in love with any of them.\n\nThank God for Aubrey. She'd become indispensable as my assistant, but she'd become my confidant as well. After three months of searching, I'd told Aubrey the truth. I told her what was happening, and though I could tell she was appalled that I was wife shopping, she'd said nothing and expressed sympathy for my plight. From that moment on, our relationship had become more than employee and employer, and had become much closer than it should have.\n\nShe'd started picking dates for me, subtly screening the women before suggesting them to me. I had to admit, she had much better taste in women than I did. The women she selected were all beautiful, kind, down to earth, and intelligent, but none of them clicked, not enough for me to think I wanted to marry them.\n\n\"Are you going to change?\" she asked.\n\nI smiled, shaking myself out of my memories. \"Only if you don't look,\" I teased.\n\nShe twittered out a laugh. \"Oh, no! If you got to look, that means I get to.\"\n\n\"Okay, you asked for it,\" I said as I rose.\n\nThe front portion of the Citation was configured with offset chairs that could be swiveled to form a conversation group, giving me enough room to gyrate around the cabin while beatboxing stripper music as I began opening buttons, zippers, and snaps, all accompanied with exaggerated hips thrusts. I liked the way she grinned at me as I performed for her. When I ripped my shirt open to show my chest, she stuck her two pinky fingers into her mouth and let loose a whistle so loud and shrill I thought my ears would bleed. I had to stop and laugh when the pilot came on the intercom to ask if everything was okay before starting again, slowly stripping down to my underwear as she laughed, catcalled, and cheered me on. This arrangement might not be so bad after all.\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">Aubrey</p>\n\nWe stepped into the huge suite and Dash tossed our one small bag onto a chair. Our luggage had been sent ahead and all our clothes were already pressed and hanging in the closet. That was standard procedure for Dash when he traveled. He had four complete wardrobes for each season. One was at his home, in Las Vegas, one where he was going, another was being cleaned and repacked from where he'd just been, and the fourth was on standby, just in case.\n\nWe were at Callisto #28, or as the sign on the dock said, Fisher Island Resort. This was my first visit to this location. Since the resort was operational, the facilities were the responsibility of the Guest Services division, and Dash had little to do with it.\n\nThe resort had opened only months before I began working for Dash, but I knew from being his assistant the resort had been an older, dilapidated golf resort on Fisher Island, overlooking Biscayne Bay on one side and the ocean with its sandy beaches on the other. Built in the nineteen sixties, the building and golf course had needed complete renovation. Callisto had purchased the property, and then expanded and renovated the entire resort. I tried hard not to be impressed but failed. When I traveled with Dash, the places we stayed were sometimes... tatty... as he investigated potential development opportunities. Fisher Island was anything but tatty.\n\nCallisto didn't own the entire island, but they controlled it, with every building and business on the island there to serve the resort and its guests. Spread around the main building, and taking up the bulk of the available land, was the resort grounds with its golf course, giant lagoon pool, spa, and various other guest services. With no cars on the island, wide golf cart paths wound across the rest of the island to deliver rich customers to businesses eager to take their money.\n\nWith access to the island only by ferry, Callisto had made Fisher island into an exclusive enclave for people who valued a slower pace and breathing room. All the shops and restaurants on the island were either owned by Callisto or operated under their observation. Now, after five years, and 526 million dollars of investment, Fisher Island had been transformed from drab relic of the past into a to a shining jewel. Callisto was still operating the property, building up its reputation, but it was scheduled to go on the market in 2022, and it would probably sell for deep nine figures.\n\nAs Dash's assistant, I went everywhere with him, but I didn't stay in the suites with him, or hadn't until now. I'd always had my own, much smaller room. This was the Diamond Suite, the best in the resort. It normally rented for fifty-five hundred dollars a night, and was far larger than my apartment. Even though I'd worked for Dash for a bit over thirteen months, I still had trouble getting my head around the amount of money he, and clients like him, had. People who rented this suite looked at fifty-five hundred dollars much like I looked at fifty-five cents.\n\nI grew up in Flagstaff, Arizona, the younger of two daughters. Dad was employed as a mechanic at one of the Ford dealerships, and Mom worked as a billing clerk at the city water department. We always had nice new cars, a roof over our head, and food on the table, but not much else. Kathleen, my older sister, married right out of high school, had a couple of kids by the time she was twenty-two, and now was a single parent. Kathy was five years older than me, and I knew I wanted something better than that, so I set my sights on college. My parents couldn't help much, so I scrimped and saved, worked two jobs, and put myself though school. I'd just started my sophomore year at the University of Arizona when Mom was diagnosed with breast cancer. Her cancer had been aggressive, and though they'd caught it early, it wasn't early enough, and she'd died before she saw me graduate with my MBA.",
        "As Mom began to lose her battle with cancer, Dad had started drinking to cope with his impending loss, and then had collapsed in on himself after Mom died. As Dad fell into the bottle, Kathy had moved in with them to help with Mom's care. Because of his drinking and grief, Dad became increasingly erratic, and after he took a swing at another tech when he'd thought the man had stolen one of his tools, he'd lost his job. Now they were living on the government's dime, unwilling or unable to get on their feet again. They hadn't even come to my graduation, and neither seemed to want to have anything to do with me anymore. Their banal rejection and snubbing had been hard for me, and I felt like they somehow blamed me for Mom's death. I'd offered to quit school and come home to help with Mom's care, but Mom wouldn't allow me. She wanted to see me graduate college. She never gave up and fought the disease to the bitter end, but it hadn't been enough, and she'd died during my final semester, just two months before my graduation.\n\nSmarting from losing my family, I'd thrown myself into my first job. I'd gone to work for a big developer in Phoenix, and I thought I was on a fast track for a career there, when my life went off the rails. I'd started falling for Craig Benson, one of the development managers, and I was falling hard. He was older than me by about ten years, but I didn't care. He gave me what I needed, validation that I was a good and worthy person. I'd been sleeping with him for about six weeks when someone pulled me aside and mentioned that he was married. Our affair had been quiet, but obviously some suspected. I was aghast and had confronted him.\n\nAt first, he'd denied the allegations. When I pressed, he admitted he was married, though separated, and then changed his story again and said he was going to leave his wife for me. I was having none of it. I felt betrayed and used, and when he wouldn't take 'no' for an answer, it got ugly. Really ugly. I finally went to Mr. Kenyon, the owner, to complain. Mr. Kenyon warned us to get our personal problems out of the office or he'd do it for us. Less than two weeks later, while making a pitch to a potential client with Mr. Keyon, Craig had drunkenly barged into the meeting and made a scene. He'd first begged, then threatened, and then we were both terminated on the spot.\n\nAfter his wife kicked Craig's ass out, the stalking got worse. Much worse. I called the cops on him a couple of times, but he kept harassing me and skirting the edge of the law. Every time I looked around, he was standing there, watching me. He was obsessed. He swore he loved me, wanted me forever, and would do anything for me. The more he tried to pull me back into his life, the creepier he got, and since I didn't have a job anyway, I finally fled for Las Vegas, hoping to make a clean start.\n\nI landed the job at Callisto, and it was just what I was looking for. I could throw myself into my job as I tried to recover from the train wreck that was my life. I'd gotten my foot in the door and I hoped I could work my way up from the assistant to the VP of Development to something with a little more responsibility. Working for Dash had allowed me to see and do more than I ever thought possible. The hours were long, and I sometimes had to clean up behind him, but he never made a pass at me, he treated me with respect, and I respected him for it in return.\n\nThere were some pretty good perks that came with the job, like getting to stay in resorts that were far out of reach on my salary, even if I did have to stay in lesser rooms than the one I was standing in now.\n\n\"Nice,\" I said as I looked around.\n\nNice didn't even begin to describe the room. Decorated in the muted pastels common to the area, the suite had a sitting room complete with overstuffed white leather furniture and a television that looked as big as a movie screen. One wall was made completely of glass, overlooking the city across the bay, and another glass wall opened onto a balcony that overlooked the ocean on the other side of the island. Beyond the sitting room were the two bedrooms with private balconies and their own baths. The bathroom alone was bigger than my bedroom, and the shower was larger than my closet.\n\n\"It'll do,\" he said, kicking his shoes off. I followed him into the first bedroom where he opened the closet doors. My clothes were neatly hung beside his. \"We really need to do something about your wardrobe.\"\n\nMy hackles rose. \"What's wrong with my wardrobe?\"\n\n\"Nothing, but they're not befitting my wife. You have to look the part, you know.\"\n\n\"They were fine before.\"\n\n\"That was before you were Mrs. Daschle Callisto.\"\n\nI bit back my annoyance. He was right. If I was going to play the part, I had to look the part. \"Okay,\" I finally murmured, though it galled me to have to admit he was right.\n\nHe smiled. \"Tomorrow we'll do something about that. But now, I'm starving.\"\n\n\"I'll call for room service,\" I said as I turned to leave the room.\n\n\"Aubrey.\"\n\n\"Yes, sir?\" He looked at me and I wilted under his stare. My response had been automatic, but I knew I'd fucked up.\n\n\"Yes, sir?\" he asked with a slight smile, holding my gaze for a moment before he continued. \"Look, you need to relax. You still look and act like my assistant.\" He crossed the room and placed his hands on my arms just below shoulders. \"We're married. We need to start acting like it or this isn't going to work.\"\n\nI slumped more. \"I'm trying, Dash. I really am.\"\n\nHe rubbed my arms softly and it felt nice. \"I know you are. I know I've put you in a bad spot, and I'll be forever thankful for what you're doing for me, but you're not my assistant anymore, remember?\"\n\n\"All I said was I'd call for room service.\"\n\nHe smiled. \"It's not what you did, it's how you did it. You said it like it was something you were expected to do. If you keep acting like this, Mom and Dad are going to get wise.\"\n\nI slumped even more. \"Sorry.\"\n\nHe put his finger under my chin and tipped my face up. \"Nothing to be sorry for. We'll get through this, but just, I don't know, relax or something. You're always so uptight.\"\n\nI forced a small smiled. \"I don't know how.\"\n\nHe chuckled. \"That's something else we're going to have to work on then.\" He released my arms, and I felt both relief and a bit of disappointment.\n\n\"Would you like me to call for room service, dear?\" I asked, pitching my voice like I imagined a dutiful wife would.\n\nHe chuckled. \"Thank you, dearest. That would be lovely.\"\n\nI looked over the menu and placed the order. I knew what Dash liked and what he didn't. I hung up the phone and blew out air from puffed cheeks. Being Mrs. Daschle Callisto was probably going to be the hardest job I'd ever have.\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">Dash</p>\n\nThe remains of our meal had been cleared away, and I was relaxing, enjoying another glass of a very nice red. It would soon be nine o'clock, local time, and Miami was ablaze with light in the distance. Aubrey was sitting to the side, busily working on her tablet. I sighed.\n\n\"Aubrey, come sit with me.\" She rose and joined me on the overstuffed couch. \"Closer,\" I added when she sat on the opposite side.\n\nShe swallowed hard and moved over next to me. I draped my arm around her shoulder and tugged her in close. She was stiff for a long moment, but then the tension drained from her body and she snuggled in.\n\n\"Would you like a glass?\" I offered, giving my glass a swirl.\n\nAubrey had cared for me as I puked up my shoes more than once, but I'd never seen her touch a drop. I was ashamed to admit that I had taken her for granted. In the last six months, I'd come to depend on her more and more. She had a keen eye for business and was underutilized as my assistant. I should have moved her to another position, someplace where she could use her full talents, but I was selfish. I didn't want to let her go because I valued her input and insights. I knew she sometimes disapproved of my actions, but she never said anything and was always there when I needed her. I could assign her a task, any task, and be confident it would be completed, often beyond my expectations.\n\n\"That would be nice... thank you.\"\n\nShe started to rise, but I pulled her gently back. \"Let me.\"\n\nI didn't know what was happening. I'd hired her as a tool, someone to make my life easier, but I now found I enjoyed her company. I filled her glass and topped off mine with the remainder of the bottle. I smiled at her as I returned to the couch, realizing for the first time what had changed. I'd hired her to replace Timothy as my assistant. She'd done that, and without me even realizing it, she'd also replaced him as my friend.\n\n\"Here you go,\" I said, handing her the glass.\n\n\"Thank you.\" She sipped and nodded. \"It's good.\"\n\nI chuckled. \"At two hundred a bottle, it better be.\" I paused, took her glass, and placed it on a side table, along with my own, before I turned to face her. \"Aubrey, I want you to know how much I owe you. I can't possibly thank you enough.\"\n\nShe watched my eyes a moment and smiled softly. I liked it when she smiled. \"You're welcome.\"\n\n\"I know you're doing this simply to help me, but I want you to know that, all money aside, I'm grateful beyond words. You didn't have to do this, but you did, and...\" I ground to a halt, totally at a loss for words to describe how grateful I was.\n\n\"It's okay, really,\" she murmured, a tiny smile on her lips.\n\nSomething in her words, how she said them, how she was always there ready to serve me without complaint stung. It stung badly. I'd asked too much from her this time, but she'd willingly given it to me anyway. I bounded to my feet.\n\n\"No, it's not okay! I mean, it is, but...\"\n\nI stomped around the room. She was giving up five years of her life for me, and for what? Because I asked her too? It had seemed so simple before. I'd had a little more than a year to go before the deadline, and despite Aubrey's valiant efforts, I'd been no closer to finding someone than I had when this entire clusterfuck started.\n\nThen I'd had the idea. I'd thought I was so smart, so clever. Aubrey and I would get married. Hell, she was at my side all the time anyway. It was perfect. We'd get married, wait out the five years mandated by my inheritance, then I'd let her go. The more I thought about it, the better I liked the idea.\n\nI'd approached her with my idea. In exchange for a million dollars cash, plus another two million in company stock, she'd pose as my wife for five years. It was the only time I could remember seeing her mad, and she'd told me in no uncertain terms that I could 'go fuck myself.'\n\nI'd thought she'd quit, but she hadn't, and it had taken four weeks of steady pressure before she would even consider the idea. Three months later, she'd finally agreed and we'd drawn up a contract. She'd stared at the document for a long time before she finally signed, and I felt like a great weight had been lifted from my shoulders.\n\nNow I was feeling the burden of what I'd done. Until the wedding I'd looked at the hoax like a game, like an elaborate prank on my parents, but now it was real. It wasn't just a tactic to get around my family's unreasonable expectations anymore. I felt like a shit. No, I was a shit. She'd said no, and for four month, she'd continued to say no, but I wouldn't accept her rejection. I'd kept pushing her until she'd given in. Why? Why had I done that? Why had she finally relented? And now that it was done, here she was, doing everything I asked of her and covering for my mistake, just like she always did.\n\n\"This is wrong, Aubrey. What you're doing... what you're giving up... it's not right.\"\n\nShe watched me for a long moment, her eyes unreadable. \"I didn't have to sign.\"\n\n\"But you did. Why?\"\n\nShe shrugged. \"I can use the money... and you needed me to.\"\n\nI felt sick. If she'd stopped at 'I can use the money' I could have lived with it. But she did it for me. Goddamn her! Why was she willing to give me so much and ask for so little?\n\n\"I can't do this!\"\n\n\"What?\" she squawked as she leapt to her feet. \"After all this, you're going to call it off? Why?\" she cried, her disbelief clear in her tone.\n\n\"It's not right, Aubrey! I thought I wanted this, but I've realized what I'm asking from you. I can't do it. I don't think I can live with myself.\" I began pacing, unable to stand still, my guilt pushing me into motion, but no matter how many steps I took, I couldn't run from what I'd done. \"You're not some stupid bitch who only wants me for what I can give her. You're my friend. Friends don't treat friends like this!\"\n\nShe watched me a moment, her face neutral and giving nothing away. \"It's not that much different than what we had before. You even joked once that you wanted me to move in with you. Well, now I have.\" She shrugged.\n\n\"That's not the point!\"\n\n\"What is the point?\"\n\n\"I don't know! I just know that now that it's done, it feels so wrong!\"\n\nShe walked to me. \"Dash, we'll get through this. It'll be okay. I won't interfere with your life. I just ask that you be discreet. I knew what I was signing. This is a business deal, nothing more, nothing less. Why the cold feet all of a sudden?\"\n\nI slumped. \"I don't know. You'll really allow me to take a lover?\"\n\nShe shrugged. \"I don't expect you to be celibate for the entire five years. All I ask is you keep it quiet. I don't want...\"\n\n\"What?\"\n\nShe took a deep breath. \"I don't want to have people looking at me with pity, okay? I can arrange everything so nobody will know you're... cheating on me. All I ask is for you to, please, not embarrass me.\"\n\n\"I'd never do that, but what about you?\"\n\n\"What about me?\"\n\n\"Will you take a lover?\"\n\nShe smiled, but it was slightly sad. \"I don't know. Maybe. If the right guy comes along. I won't humiliate you, Dash. You have my word.\"\n\nI nodded, the knife in my gut twisting. She was still covering for me. \"I know you won't.\" I held her gaze for a moment, trying to read her thoughts. \"Will you tell me something?\"\n\n\"If I can.\"\n\n\"Why are you doing it, really? Why have you given up so much for me?\"\n\n\"What do you mean?\"\n\n\"When was the last time you went on a date?\"\n\nI watched as her eyes clouded, and she looked down. \"A long time.\"\n\n\"Have you gone out since I hired you?\"\n\n\"No.\"\n\n\"Why, Aubrey? Why are you willing to give so much? I'm just now realizing how much you've given, how much more you're going to give, and how much I've taken you for granted.\"\n\nShe shrugged. \"All I have is work.\"\n\n\"Family?\"\n\nHer eyes welled with tears, but they didn't fall. \"No family. None that want to see me, anyway.\"\n\nI nodded and set my jaw. \"I'm giving you the out. I'll come clean with Mom and Dad. I'll give you fifty percent of the stock and tear up the contract if you want. Just say the word.\"\n\nShe studied me, her gaze steady and unflinching. \"Why? After all of this, why are you willing give up now? That's not like you.\"\n\n\"Because I feel like the world's biggest shit. No, I am the world's biggest shit. Look what I've done for money. Look what I've asked from you, all for money.\"\n\n\"It's not right, what your parents are doing.\"\n\n\"No, it's not. But two wrongs don't make a right.\"\n\nShe stepped in close. \"We'll get through this together. I won't make trouble for you.\"\n\n\"It's not you I'm worried about. It's me.\"\n\nShe smiled, a sweet soft smile. \"You remember the time when I had to bring you clothes after that woman rolled you and left you naked in the hotel room? Remember being on your knees without a stitch of clothing on, puking in the toilet as I wiped your face? Remember me warning you she was trouble?\"\n\nI grimaced and looked away, my face heating with shame. That wasn't one of my better moments. \"Yeah, I remember.\"\n\n\"How much worse than that can it get?\"\n\nI chuckled. She always, always, knew exactly what I needed, sometimes even before I did. \"I promise not to do that again.\"\n\n\"Then we can make this work.\"\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">Aubrey</p>\n\n\"What's that?\" Dash asked as I lifted the elaborate gift box from our bag.\n\n\"Something your mom slipped to me before the wedding,\" I murmured, unable to meet his gaze.\n\nAfter showing me what was inside, Karen had placed the box in the bag. I always did Dash's packing and had intended to remove the box before he saw his mother's gift. In the past he ignored me as I went about my duties, but tonight he seemed to want my companionship.\n\nHe held his hand out and, after a moment's hesitation, I passed him the container. He opened it and whistled softly as pulled the black nothingness from the box. It unfolded in his hands as he allowed it to fall open for his inspection. It was as ethereal as smoke and had probably cost more than one of my suits.\n\n\"My mom gave you this?\"\n\nI blushed. \"Yes.\"\n\n\"Wow! Are you going to put it on?\"\n\n\"I don't think that's a good idea, do you?\"\n\n\"Do you want me to have to lie to my mom when she asks if you wore it?\"\n\nThe corners of my lips quirked into a half smile. \"Would your mother actually ask you that?\"\n\nHe grinned. \"No, probably not... but what if she did? Maybe you should put it on, just in case.\"\n\nI sighed. Avoiding the elephant in the room as we pretended to be married was going to get complicated. Part of the agreement I signed, something I'd insisted on, was there was to be no sexual contact. I'd had enough of office romances, thank you very much. Now I was realizing how hard that might be to do. I didn't love Dash, and he didn't love me, though I was touched by his little speech earlier. I'd always suspected he was a good man despite is occasional lapses. When he'd approached me with his idea to secure his fortune, my opinion of him had dropped considerably. He'd won me over, reluctantly, but much of my faith in him had been restored this evening.\n\nI took the naughty nightie. \"This doesn't change anything,\" I said, my voice firm.\n\n\"Never thought it would.\"\n\nI stepped into the bathroom and slithered into the neglig\u00e9e. I let my hair down and brushed it until it glowed before taking stock of myself. At twenty-nine, I didn't think I looked bad. My hair was my best feature. Strawberry blonde, more strawberry than blonde, it was striking, and everyone remembered me because of it. Though I liked my hair, I thought I was too pale. No matter what I did, I didn't tan. Where I did tan a little, it left behind obvious tan lines that I hated. I also wished I didn't have the bridge of freckles across my nose. The rest of my freckles were hidden by my clothing, so they didn't bother me as much.\n\nThe dark nightie was stark against my skin and caressed my curves to make me look my best. I didn't consider myself ugly, but I'd never look like the women Dash normally dated, not with their perfect tans, perfect skin, and perfect bodies. I sighed.\n\nThe thought of Dash's kiss, the one in the Rolls, came back to me and I flooded with desire. It had been so long, almost twenty months, since I'd taken a lover.\n\nAfter the announcement of our wedding, he'd kissed me a few times in public to sell the idea we were in love. The kiss in the back of the car, and the one during the wedding, however, were not the little public smooches, but proper kisses. And goddamn, did he know how to kiss. He'd certainly had a lot more practice than I'd had. I shoved the thoughts aside. Better to just get this over with.\n\nI opened the door and stepped back into the bedroom. He was standing in the middle of the room, phone in hand as he read, dressed in a pair of black silk pajama bottoms and nothing else. He might be four years older than me, but he was fucking stunning, and I worried I was going to start dripping on the floor. Standing there I realized how bad an idea this was and started to retreat to the bathroom to change, but he looked up before I could move.",
        "\"Fuck...\" he breathed as his eyes opened wide.\n\nI flushed with the implied compliment. We stared at each other a moment, my heart pounding so hard I could feel it in my temples. I swallowed hard. I was being carried away by my desire. We were married, for fuck's sake! I swallowed hard again. Married couples fucked, and God, how I wanted him to fuck me.\n\n\"You like what you see?\" I asked, fishing for something, anything, wanting any hint to what he thought of me.\n\n\"Jesus, Aubrey. I had no idea. You're... stunning.\"\n\nI flushed again, wanting to laugh and cry at the same time. \"Thank you,\" I finally murmured as I looked at my feet. I paused for a long moment, waiting for something... though I wasn't sure what. \"I should change.\"\n\nHe nodded but didn't speak, and I didn't move. After another long moment, he crossed to me, took me into his arms, and took my lips for his own in a slow, gentle kiss. I almost swooned as my arms circled his neck and he pulled me tight. I melted into him as we kissed, and I felt his manhood stiffen, his rapidly hardening cock pressing against my stomach. He kissed me thoroughly before pulling back, releasing me as he did. He cleared his throat and swallowed hard.\n\n\"Okay. I can tell Mom you wore it.\"\n\nI stepped in close. \"What if she asks if you took it off me?\"\n\n\"Aubrey...\" he murmured, his tone almost begging.\n\n\"I want you,\" I whispered. He stared at me, and I could see the uncertainty in his eyes. He wanted me. I could see it, but he was trying to honor our agreement. My respect for him went up another notch. \"I want you,\" I repeated.\n\n\"I don't have any protection.\"\n\nI smiled and turned to my clutch. I opened it and plucked a condom from inside. I always carried two in my purse in case he needed them, though I never thought he'd be using his emergency stash on me. I held it up for him to see, my smile widening.\n\n\"You're sure?\"\n\n\"Yes.\"\n\nHe pulled me back in and kissed me like I'd never been kissed before. I tingled all the way to my toes as I became incandescent with desire. \"Ah... fuck!\" I gasped as his lips left mine and began to explore my neck.\n\nHe bit me softly on the shoulder before kissing away the sting, his gentle nip causing my desires to soar. Never had I wanted a man like I wanted him in that moment. His hands caressed my ass before pulling me strongly into him, his hard cock pressing firmly into my stomach. I was so worked up I began humping him as my hand tangled in his hair and pulled his lips harder into my neck.\n\nWith a growl he stepped back, swooped me up in his arms, handling me like I was as ethereal as my neglig\u00e9e, and tossed me onto the large bed. He followed me as I scooted back, his strong hands abruptly jerking my panties down and tossing them away, his slightly rough handling fanning the flames of my desire like a bellows. He dove between my leg, his lips and tongue busy, his breath hot on the petals of my flower as his hands slid up my body to caress my breasts, his fingers teasing their points to aching hardness. He devoured me, his lips and tongue caressing and kissing, teasing and pulling, as my head arched back and my spine curved in pleasure.\n\nI pressed down with my legs, my heels on his back as I levered my ass off the bed, my hands wadded in his hair and pulling him harder into me as I thrust at his face. I had to be hurting him, I had to be, but I couldn't help myself as my pleasure rose beyond anything I'd experienced before. He tugged at a string and the neglig\u00e9e parted, his fingers roaming and touching, caressing and pinching, driving me wild with pleasure. I began to writhe as I moaned softly, unable to contain the sounds of my rising pleasure. My movements and quiet groans seemed to drive him, and he redoubled his efforts.\n\nMy rapture rolled over me in a blinding supernova of bliss that seared me as it burned away any doubt or regret. I wanted to wail in pleasure as I shuddered through one of the hardest orgasms of my life, channeling the screams of ecstasy echoing in my mind into a long, soft moan, and still he pleasured me.\n\n\"Stop, stop, stop, stop!\" I begged softly, pushing and slapping at his head, desperate to escape the mind twisting pleasure threatening to rip me apart. Then he was gone. I groaned quietly as I rolled to my side, panting with my hands clasped between my legs, twitching and jerking occasionally as aftershocks of pleasure ricocheted through me. \"Fuck...\" I gasped as the last of my orgasm washed out of me to leave me swirling helplessly in the backwater eddies of my climax.\n\nI slowly rolled to my back to find him waiting for me. As he lowered his lips to mine, I lunged for him, my arms wrapping around his neck to pull him down onto me, as desperate to taste his kiss as I would a glass of water after a long trek through a desert. As our lips met, I drank deep from the well of his kiss, our tongues engaged in a slow, erotic dance as the long, deeply erotic caress of our lips reinvigorating me.\n\nI hadn't realized how badly I needed to get laid. As hard as my orgasm had been, it wasn't enough. Not nearly enough. I smiled and pushed at him, silently urging him to his back.\n\n\"Now you,\" I breathed.\n\nHe tumbled to the bed and assisted me in removing his pajamas, the silk sliding easily over his legs before I tossed them away without a second thought. Cooing and purring, I turned in the bed before I covered his shaft with the condom and then my lips, teasing him with butterfly kisses before I swallowed him, his soft groan my reward. His hands resting lightly on my head, he allowed me to pleasure him, my tongue flicking and caressing his rod for a long moment before he released my head, grabbed my ankle, and pulled me further around. As I continued to please him with slow licks and soft kisses, he gently stripped me of the remainder of nightie before lifting me by my hips and draping my knees over his shoulders. As he began to tease my most secret place with lips and tongue, the feel of his body moving under me was like an elixir, the caress of our flesh against each other ramping my pleasure up even higher.\n\nAfter my initial brain melting orgasm, I should have been done, or at least had the edge taken off, but as we pleased each other, our tongues and lips flicking and pulling, sucking and pinching, our quiet gasps and moans of pleasure made our erotic duel that much more intense. He was highly skilled at pleasing a woman with his lips and tongue, and he was steadily working me up to another climax. I wanted to make him come, I tried to make him come, but he had amazing stamina, and before I could finish him, I groaned and shivered my way through another swirling, seething maelstrom of pleasure.\n\nMy second orgasm wasn't nearly as hard as my first, but it was a damn good one, and I lay panting with his cock pressed against my cheek as I waited for my strength to return. As I came back to myself, I wanted to feel him inside me badly. I remained still a moment more, gathering my strength as he slowly kissed and nuzzled the inside of my thighs to give me a chance to recover.\n\nAfter I'd gathered my scattered wits, I rose and I turned before I centered myself over this manhood. I held him erect, wanting, needing to see his face as I lowered myself and took him into my womanly depths.\n\nI smiled as his moan joined mine and his face twisted with pleasure. So, he was human after all. I smiled down at him as I began to rock my hips. I liked the way he was looking at me, a soft smile on his lips, his eyes tender, as if he were seeing me for the first time.\n\n\"You are so beautiful... so sexy,\" he murmured as he played with my breasts, his touch gentle as he caressed my nipples to aching hardness.\n\nI couldn't help but smile, wondering how many women he'd said that to, but he was gorgeous, and having him say that to me filled me with warmth. I lowered myself over him, wanting to feel his flesh against my own.\n\n\"You're not so bad yourself,\" I whispered before taking his lips into a long, deep, caress.\n\nI was beginning to sweat from my efforts when he twisted his hips and dumped me to the bed. He ducked under my legs as he entered me again, driving his manhood deep, his face intense as he made me his. I whimpered in pleasure as I slowly stroked his arms, his face, or his chest, unable to remain still and needing the pleasure of touching him. Dash was the perfect size. Large enough to fill me completely, but not so large that he hurt. And he was so damned sexy!\n\nHe shook his head, his face twisting into an erotic sneer. \"Fuck!\" he snarled as he began driving into me with purpose. \"Fuck! You're going to make me come!\"\n\nHis words were like gasoline on a fire. I was awash in pleasure and with his words an orgasm began lurking. \"I'm going to come,\" I whispered. \"Make me come, please make me come.\"\n\nHis face hardened and became more intense as he pounded into me, trying to drive me though the bed with his battering hips. His hard, fast, pounding strokes was just what I wanted and needed.\n\nHe growled, low and deep, as he slipped out from under my legs and wrapped me up in his strong arms, holding me tight, his hot breath licking my neck and increasing my heat. I threw my arms around him with a moan and drew him down, wanting to feel his weight and closeness.\n\nHe pounded into me hard and fast for what felt like an eternity, my orgasm growing and surrounding me in its warm embrace with every powerful stroke. Just when I thought I could take no more, he grunted hard and deep as he began to shudder, gasping as he continued to thrust into me. It was the push I needed, and I fell into the raging turmoil of my climax. My orgasm wasn't as hard as my first or second, but it was incredibly, deeply, satisfying. I held him, unable to breath, as I was battered by pleasures I could scarcely contain.\n\nWe relaxed together, the breath from our soft sighs mingling in the air between us. I smiled as we panted into each other's neck. God, I needed that. And best of all, I still had another condom left. Before the night was over, he was going to need it.\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">Dash</p>\n\n\"Lucy... I'm home!\" I called in my best Desi Arnaz as I entered our house.\n\n\"In here!\"\n\nI smiled at the sound of Aubrey's voice. My fifty-two hundred square foot home had once belonged to the nineteen sixties mob boss 'Gentleman' Gentry Scapadino, and had all the style and pizazz that came from being built in the late fifties. I loved the houses, cars, and culture from the forties and fifties, and when I'd bought the home eight years ago, I'd poured almost a million dollars into the renovation to restore it to is former glory. When the renovation was complete, I'd thought the house was perfect, but I was wrong. Despite its slate floors, glass walls, low flat roof, mature palm trees in the desert landscaping, and large pool, it had been missing something. That something had been found, and I followed the sound of her voice.\n\nWe were a bit over five months into our marriage and our relationship was settling in nicely. Other than the slip during our honeymoon, we'd stuck to our agreement. We slept together when we had to, such as when we had guests, or were guests, but otherwise we slept in separate bedrooms. It was a good thing, too. When we slept together, it was absolute hell keeping my hands off her.\n\nWhen we were forced to sleep together, we did what we could to avoid temptation. I wore pajamas, something I normally didn't do, and she didn't wear anything sexy. We also didn't cuddle, and one time, in desperation, we placed two extra pillows between us on the bed. It was a totally ridiculous situation, like something out of an old screwball comedy, but I'd made an agreement and I was forcing myself to abide by it.\n\nThe interesting thing was, even though I still had the same urges, I hadn't acted on them. I hadn't taken a woman to bed since I'd slept with her, and I was certain she hadn't taken a lover either. I'd had ample opportunity, and I'd thought about it couple of times, but I couldn't bring myself to do it. Even though I had her blessing to take care of my needs, I'd asked so much from her already, and I wasn't willing to ask for anymore. I couldn't explain why I felt that way, but I did, and I'd resorted to taking matters into my own hands, so to speak.\n\nI'd hired a new assistant, a man this time, and while he was competent and efficient, he couldn't replace Aubrey. Where with Aubrey, I could assign her a task and forget about it, Michael always seemed to have questions about how or what he should do. Aubrey had found it endlessly amusing that I was considering hiring a second assistant to in order to get done what she'd been able to handle by herself.\n\nI found her sitting in the lounge, working on her laptop. I bent over and kissed her. We might not be sleeping together, but the greeting and departing kiss had become a routine that I looked forward to, especially the greeting one.\n\n\"What'cha working on?\"\n\nShe looked up at me. \"Sit down for a moment.\" I did with a smile. \"I'd like to ask a favor.\"\n\n\"Anything.\"\n\n\"I'm bored.\"\n\n\"So you've said. I don't know why you don't volunteer for something.\"\n\n\"That's what I want to talk to you about. Do you remember you gave me the option of taking the stock and... you know?\"\n\nWe were very careful to never mention our agreement if anyone else could possibly overhear. She hadn't spelled it out, but I knew what she was saying, and I felt a sinking in the pit of my stomach. \"Yes, why?\" I asked slowly. \"Have you decided to take me up on the offer?\"\n\nShe smiled. \"Sort of. I'd like to take the stock and start a foundation to do research into breast cancer. I have everything ready for you to sign, if you agree. It'll be a tax-deductible gift for Callisto, held in a 501(c)(3) trust that I'll administer.\"\n\n\"That's your money.\"\n\n\"This is how I want to spend it.\"\n\nI licked my lips. \"No.\" I watched as her face crumbled. \"No, that's your money. What I will do, though, is talk to Dad and see if Callisto would like to invest a million or so into this new charity. Will that be okay? What's the name of it?\"\n\nI thought she was going to cry. \"Pennies for Paula. Named after my mother. She died of breast cancer.\"\n\n\"I'll talk to him tomorrow.\"\n\nShe wiped a single tear as it rolled down her cheek. \"You don't have to do that. Just my stock will be enough.\"\n\n\"No,\" I repeated. \"After I give you the money, if you want to invest it in Pennies for Paula, that's fine. I won't try to stop you, but I want to do this. I know how hard it is for you to be estranged from your family.\"\n\nShe nodded and sniffed. \"I don't know why they won't let me help them.\"\n\n\"Pride... stubbornness... it doesn't matter. You've set up a scholarship for your niece and nephew. You've offered to help. If they won't take it, you can't make them.\"\n\nShe nodded. \"I know. Kathy would, but Dad is so damn stubborn!\"\n\nI chuckled. \"Don't I know it. I have one just like him.\"\n\nShe looked down. \"What if your dad doesn't agree?\"\n\n\"Are you kidding me?\" I cried as I rolled my eyes. \"Dad loves you. Hell, he'd sell the whole damned company if you asked him to!\" She had my dad wrapped tight around her little finger. She either didn't know it, or more likely, pretended not to know. \"If he won't do it, I'll sell some of my stock and we'll do it anyway. How's that?\"\n\n\"You don't have to do that. I guess I can wait if your dad won't go for it.\"\n\n\"Nope! It's already decided. Now--\"\n\n\"Mrs. Callisto, telephone for you,\" Maryanne said as she brought the phone to Aubrey. Maryanne had been with me for years as my cook and housekeeper. She, Terry my driver, and Diego, the groundskeeper and handyman, made up my domestic staff.\n\nAubrey took the phone. \"Hello?\" She paused a moment. \"Hello?\" she repeated more forcefully. \"Look, I don't know who you are, but stop calling here!\" She hung up.\n\n\"Who was that?\"\n\n\"Don't know. Someone keeps calling, asking for me, then not saying anything. It started about a month ago, but it's getting worse. Before they would call once a week or so, but this is the third call this week, the second today.\"\n\nI frowned. \"I'll put security on it.\"\n\nShe smiled in that way she had when she thought I was overreacting. \"No, don't do that. It's probably just some nut that gets his jollies out of hearing me bark. I'm going to start hanging up. One hello, and that's it.\"\n\n\"I'll still have Henry look into it. It's what we pay him for.\"\n\nShe waved her hand, her shorthand for giving in to what I wanted. She leaned over closer. \"Thank you for doing this for me.\"\n\nI smiled. \"I'm always willing to help out a good cause. I can't think of a charity that will be better run than Pennies for Paula.\"\n\nShe gave me a quick kiss. \"You're sweet.\"\n\n\"Dinner is ready, ma'am,\" Maryanne said from the door.\n\n\"Be right there.\"\n\n<p align=\"center\">-oOo-</p>\n\nWe were sitting by the pool, enjoying the misters that made the desert heat bearable. The staff was gone for the evening. That was another change she'd asked for as soon as we returned from our honeymoon. While she liked not having to clean and cook, she didn't want the staff around twenty-four seven. Now the staff worked ten to eight on staggered shifts and had the weekends off. Maryanne made sure there were meals prepared for the weekend, and then we took care of ourselves. Diego remained on call, but we'd only call him in an emergency.\n\nWhen Aubrey informed the staff of the change, Maryanne had cried and hugged us, almost groveling in her gratitude. Terry and Diego were more reserved, but as they shook our hands and thanked us, I'd never felt better about myself, or worse that it took Aubrey to point out how unfairly I'd treated my household staff.\n\nThe phone rang and Aubrey picked it up. \"Hello? Who is this?\" I could only hear her side of the conversation, but Aubrey went pale and stiff. \"How'd did you get this number? I don't give a shit! Stop calling me or I'm going to call the cops!\" She pushed the button on the phone and slammed it down on the table.\n\n\"Was that the caller? What'd he say?\"\n\nShe was quiet for a long moment. \"Yeah, I think so.\" She paused before she continued. \"It's Craig Benson,\" she said, her voice so soft I could barely hear her.\n\n\"Who's that?\"\n\nAt first she couldn't meet my eyes but finally looked up. \"Crazy ex-boyfriend.\"\n\nI could tell she was upset. \"You want to talk about it?\" I asked softly.\n\nShe pursed her lips and shook her head. I said nothing else but held my hand out. She took it, held it for a long moment, and then began to speak softly. \"I dated him for a while after I got out of college. When I found out he was married and had a couple of kids, I broke it off, and he went crazy. His wife kicked him out and he lost everything. He's the reason I left Phoenix. Apparently he's found me again.\"\n\nI pulled my cell phone and dialed. \"Henry, I want you to find a Craig Benson. He's harassing Aubrey, and I want it stopped. Make sure you have the right guy, then do what you have to.\"\n\n\"What have you got for me to go on?\" Henry asked.\n\nI looked at Aubrey. \"What can you tell me about him? Know where he's staying? Anything like that?\"\n\n\"No. He used to work at Kenyon Development. He's about forty. Lived in Phoenix last I knew. He used to drive a white BMW 3 series, but I don't know if he still has it.\"\n\nI repeated what Aubrey told me to Henry.\n\n\"I'll start with Kenyon Development. We'll handle it.\"\n\n\"Thanks, Henry.\" I hung up and looked at Aubrey. \"Don't worry about it. Henry's the best.\"\n\n\"What'll he do?\"\n\n\"I don't like to ask too many questions, if you know what I mean, but I think the first time he'll have a frank conversation with Mr. Benson about what will happen if he continues to harass you. What happens after that is really up to Craig.\"",
        "She smiled at me, but there was no humor in it, and she looked slightly sad. \"I hope he has better luck than I did with the police.\"\n\nI smiled back. \"Oh, you can count on it.\"\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">Aubrey</p>\n\nI was tossing and turning in the bed. Sleep was becoming more and more difficult, and some nights I couldn't drop off until I took care of certain... needs. Living in the same house with Dash, while a life of dreams in some ways, was a nightmare in others.\n\nHe'd been true to his word. After our tumble in Miami, he hadn't tried to seduce me. If he'd taken a lover, he'd been very discrete. He came home precisely on time nearly every day, and his hours were much shorter than when I was his assistant. When he had to travel, I went with him, not as his assistant but as his wife. If he was banging someone, he was doing it on the clock, and while I kept telling myself I wouldn't mind if he did, I would.\n\nI smiled in the darkness. I actually didn't think he was. I'd walked in on him while he was in the shower one night, intending to ask him a question about a party we were supposed to attend, and saw his reflection in the mirror as he took care of himself. I'd watched from the doorway until he grunted, then quietly withdrew before he saw me. I'd never mentioned what I'd seen, but my imagination had gone into overdrive. That night, and the next three, I'd had to bite my pillow to keep myself quiet as I worked off my pent-up desires.\n\nIf he was taking care of himself in the shower, I suspected he wasn't availing himself of women, and the realization had pleased me enormously, which made sticking to our no fucking policy that much more difficult. It was especially hard when we traveled and slept together. Having him hold me warm and close when in public was absolute torture, and seeing his erection in his pajamas at night only reminded me of my aching desire for him. By silent agreement we didn't touch each other after we went to bed, but I so badly wanted to fuck him until that wonderful cock of his was used up and hanging limp and useless. Every time we traveled I was thankful he had the strength not to tempt me because I knew that with one more slip, there'd be no turning back. During the whirlwind after our marriage, we'd put the genie back in the bottle, but now that I'd become more relaxed around him, I knew I wouldn't have the strength to do it a second time.\n\nI closed my eyes and tried to will myself to sleep. Would sleeping with him be so bad? Dash had changed in the last six months. He didn't chase women anymore, at least not overtly, and he hadn't become blotted even once since we became husband and wife. He was working less hours, seemed happy coming home to me, and I looked forward to his arrival each evening. When I was nothing more than his assistant he never went home unless he was fucking, showering, or changing clothes. Now, however, he was always here. I could almost set my watch by his seven o'clock arrival.\n\nMost of all, he seemed at peace. There was a calmness in the way he conducted himself that hadn't been there before. It was almost like he'd found something and had stopped looking for whatever it was he'd found.\n\nI tried to tell myself it was all an act and that in four years and six months we'd divorce, I'd take my new-found fortune, and we'd go our separate ways. But did I want to? I wasn't sure anymore. I wouldn't need Dash's money, I'd have my own, but I still wasn't sure I wanted to leave. I was becoming very comfortable in the role of Mrs. Daschle Callisto. I smiled. If I could just do something about always wanting to feel him between my thighs.\n\nI was drifting in the twilight of sleep, that magical state between sleep and wakefulness when everything seemed so clear. I was dreaming of Dash fucking me stupid, the memory of him taking me in Miami, the pleasure I'd felt with him inside me as we'd made love, imagining me wailing in pleasure as he fucked me hard and fast. I screamed in ecstasy, wanting the moment to never end, his cock pounding into me... but I couldn't hold the dream. I broke from sleep as if I were swimming from the depths of deep lake, the loud trill of the security alarm replacing my screams of pleasure. The sharp-edged crack followed by the crackling of breaking glass as something struck my window penetrated the fog of my half-sleep and snapped me to full wakefulness.\n\nI bolted upright in bed, terrified and uncertain, when the floor to ceiling window of my bedroom reverberated with another hard, sharp blow. I shrieked in fright and surprise as a large section of the window fell into the room, shattering into sand on the hard tile floor. Two men rushed in, one holding something in his hand. With a scream, I leapt from the bed and fled for the door.\n\nOne of the men grabbed for me, but with a twist more instinctual than conscious, I managed to slip his hold with the sound of my nightie ripping. I bolted through the door and careened around the corner, running for Dash's room, the impact of my shoulder bouncing off the hall wall not even registering. The light in the hall flicked on, the sudden brightness partially blinding me, but I didn't slow.\n\n\"What?\" Dash called as he appeared in the hall, wrapping me in his arms as I flung myself into his chest.\n\nBefore I could answer, the men appeared, stumbling to a stop through the door, one of the men carrying a wooden baseball bat. The two men were average height, though bat-man was heavier built with a bit of a gut. Both were dressed in dark sweat suits with their faces covered by ski masks.\n\n\"Take a look at this swinging dick here with his cock hanging out,\" bat-man growled.\n\n\"Take care of him. I'll get Aubrey,\" the other man said.\n\nI recognized the voice. \"Craig! Get the fuck out of here! You're fucking crazy!\"\n\nThe man began to lazily twirl the bat as he slowly approached, Dash shoving me behind him as he began backing away. \"The cops are on the way. If you run now, you might get away.\"\n\n\"We're not going anywhere without her,\" bat-man sneered. \"Let us take her and you won't get hurt.\"\n\n\"You're not touching her,\" Dash growled, his eyes fixed on the threat as we continued to slowly back down the hall, his hand behind him, silently urging me to stay back.\n\n\"What are you going to do to me?\" I squeaked, talking over Dash.\n\n\"I'm taking what's mine,\" Craig sneered. \"I gave up everything for you, and you throw me aside like I'm nothing? Not this time, bitch, not this time. Take him!\"\n\nBat-man came at Dash and swung the club, clearly intending to cave in his skull. I shrieked in panic and scrambled back as Dash ducked under the swing. The bat hit the wall, knocking a huge hole into the sheetrock. They were constrained by the narrowness of the hall, and as bat-man wrenched the club back and tried to reset to swing again, Dash charged into him with an animal like roar.\n\nBat-man was a big guy but he clearly wasn't as fit as Dash. The two men slammed into the wall, and I swear I felt the entire house shake. Dash grabbed the bat in both his hands and tried to wrench it away, but bat-man clung to it and refused to let it go. Dash and the other man stumbled and staggered, snarling and grunting, crashing into walls in their struggle, Dash's muscles bulging, twisting, and standing out in stark relief as he battled his opponent.\n\nI watched in horror, frozen in place with my hands at my mouth as the two men strained, Dash's muscles twisted with effort, both knowing to falter was to die. Craig rammed a shoulder into the back of his goon as he tried to pass, driving the two men toward me. The sudden backward shove caught Dash off guard and he stumbled as Craig bulled past. It was the break bat-man needed. With a roar, his legs pumping, bat-man drove forward. Unable to backpedal fast enough, Dash fell to the floor, bouncing of the wall as he dragged bat-man down with him. They landed with a crash, Dash roaring in pain, rage, and effort as bat-man leaned into the bat, trying to crush Dash's throat. I picked up the first thing I could put my hand on, a crystal vase, and took a step forward to smash it on bat-man's head, but Craig caught my arm before I could bring it down.\n\nI shrieked in rage and pain as he twisted my arm and wrenched the vase from my hand, throwing it violently away to shatter on the floor. He began dragging me away from the men as they writhed on the floor. With a roar of effort and pain, Dash twisted, dumping bat-man to the floor and jamming him against the wall so he couldn't get full leverage as they kicked and squirmed in a desperate fight for life. Screaming with fear and effort, I lunged, jerked, and strained for freedom, but Craig was much larger and stronger than me, and his grip was like steel.\n\nAs he dragged me into Dash's bedroom, I heard a roar and a thump, and I saw the men tumble. Now Dash was on top, his teeth bared in a feral snarl as he leaned on the bat, holding it across the man's throat. I slipped Craig's grip and tried to run, but he tackled me before I could escape. Picking me up, he bundled me to the patio door as I screamed and kicked. I managed to sink my teeth into his arm when he released me with one hand to open the door, his shriek of pain drowning out the thumps and roars of Dash and the other man as they battled in the hall. Craig ripped his arm free of my teeth and hit me hard in the head before dragging me out of the house. In desperation, I grabbed the door frame and held on as if my life depended on it. It took him only moments to break my grip, but not before I saw Dash stagger into the bedroom, the bat in his hand.\n\n\"Let her go,\" Dash growled as he followed us out of his bedroom and onto the patio that surrounded the pool, his voice deadly in its quietness as Craig tried to drag me away from the house.\n\nI was grabbing every chair and table I could get my hands on, digging in with my heels, and lunging and squirming in a frantic attempt to slow Craig down as much as possible.\n\nCraig stopped and held my back to his chest, his hand covering my throat. \"You're not taking her from me! She's mine! I gave up everything for her!\"\n\n\"You crazy fuck!\" I screamed. \"You cheated on your wife! You didn't give up shit! She threw you out!\"\n\n\"You're not taking her!\" Craig screamed, his voice almost deafening in my ear.\n\n\"Let her go and I won't kill you,\" Dash rumbled, standing barely a step way. He was cut and bleeding, but he didn't seem to notice. I'd never seen the rage in his eyes that I saw then, and the darkness that made him so damned attractive was now ugly and evil. He was death incarnate, and he scared me.\n\n\"What are you going to do? Huh? I tell you what you're going to do. You're going to let me--\"\n\nDash flipped the bat as he took a step forward, catching it by the thick end before he thrust it like a spear, the wood passing so close to my right ear I felt the breeze of its passage. Craig's blood splattered onto the side of my face as he stumbled back, pulling me down as he fell.\n\nHis grasp loosened when we hit the ground and I scrambled away, running to hide behind Dash as Craig tried to get to his feet, his face a bloody mess from his shattered mouth. Dash flipped the bat again, caught it by the handle this time, cocked the club behind his head, and waited until Craig was up before he brought it around in a whistling arc as if he were swinging for the fences. The bat connected with Craig's shoulder and I heard the bone snap in the instant before Craig shrieked in pain.\n\n\"That's for putting your dirty fucking hands on my wife,\" Dash snarled as he loaded up again, cocking his hip like he played for the MLB.\n\nThis time he swung the bat like a golf club, hitting Craig in the knee. Again, I heard bones snap, and Craig fell to the ground with an agonizing scream, the sight of his leg twisted to the side almost making me sick.\n\n\"That's for hurting her,\" he said as set up for another swing.\n\nOh fuck! He was going to kill him! I stepped up and grabbed the bat with one hand, holding it so he couldn't swing. \"No more! Dash! No more! He's done!\"\n\nHe looked at me, and the ugliness in his eyes vanished in an instant. He tossed the bat away and pulled me tightly against him as the faint wailing of distant sirens approached.\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">Dash</p>\n\nI closed the door as the last officer left, the morning sun just beginning to brighten the horizon. Before the first officer arrived, I'd quickly wiped the blood off myself and slipped into my pajamas. Having a man with a crushed throat in my house, and another badly injured man in my backyard trying to drag himself away with his one good arm and leg, had brought additional police, along with the coroner's van and an ambulance. As we waited for the backup to arrive, I'd taken Aubrey into my bathroom and carefully cleaned the blood from her face and neck.Because the police wouldn't allow her back into her room, she dressed in another pair of my pajamas. My sleepwear hung on her like a tent, but it was better than her ripped nightshirt.\n\nWhen the rest of the officers arrived, they'd separated Aubrey and me while technicians combed her bedroom, the hall, and the patio. They'd asked a lot of questions, and I had damned few answers, but by the time the officers left, I was confident my actions would be ruled self-defense. Later this morning I'd contact my lawyer to make sure they were.\n\nThe dead body in the hall had been removed, the bat taken into evidence, and Craig had been loaded onto a gurney and carted off to a hospital. Now it was just Aubrey and me.\n\nShe was past the shakes and tears, but she still looked haunted. \"Aubrey? You okay?\" I asked softly.\n\n\"No,\" she murmured.\n\nI sat down on the couch beside her and held her. She'd fought like a cornered wildcat, but now that the danger was past, she'd withdrawn into herself. With my arms around her, she began to shake as the tears came again.\n\n\"I was so afraid!\" she sniffled into my shoulder.\n\n\"I know, but you're safe now,\" I whispered as I slowly stroked her hair.\n\n\"I thought that guy was going to kill you!\"\n\n\"I was more worried about you.\"\n\nShe sobbed in my arms as I stroked her head and made shushing noises. I was starting to hurt from my fight with the goon, but that pain paled in comparison to the ache I felt of having her cry in my arms.\n\nAfter several long moments, her tears stopped and she sniffed. \"Do you have to go to work today?\"\n\n\"No.\"\n\n\"I'm so tired.\"\n\n\"Yeah, me too.\"\n\n\"Will you take me to bed and hold me?\"\n\nI held her for a long moment more, then gently extracted myself from her embrace. I smiled at her as I gently tugged her to her feet. I led her to my room and shut the door to block the view of the damaged hall. I'd worry about that after I woke up.\n\n\"What?\" I asked as she looked at me.\n\n\"I thought I was going to lose you.\"\n\n\"I'm not going anywhere.\" I smiled as I caressed her face. Something tugged at me from deep inside, something I'd never felt before.\n\nI realized I really didn't want to go anywhere. I had what I wanted right here. It might only last for another four and a half years, but I was going to enjoy it for as long as it lasted.\n\n\"We're really married, aren't we?\" she asked, her eyes soft.\n\nI nodded. \"By every legal definition.\"\n\nShe began to tear up again. \"Would you like to make love to your wife?\"\n\nI smiled as I took her face in my hands. \"What about our agreement?\"\n\nShe swallowed. \"I don't care about that anymore.\"\n\nI smiled as I softly caressed her face with my thumbs. \"I don't either.\"\n\n\"I want you,\" she whispered. \"You're my husband, and I want you.\"\n\n\"I want you more,\" I replied, my voice as soft and gentle as her own.\n\nShe melted into me as she tipped her face up, offering me her lips, an offer I gladly accepted. I kissed her deeply, passionately, not the kiss of a fuck, but the kiss of a lover. I hadn't realized there was a difference until now.\n\nI steered her to the bed and gently pushed her back. I wanted to please her, to make her writhe and squirm, to hear her soft gasps and moans of pleasure. I wanted to burn out the fear and pain of the evening with the searing heat of passion.\n\nI began to slowly kiss my way down her body, releasing the buttons on her top while chasing the opening with my lips. I intended to please her with my lips and tongue, but she tugged me to her.\n\n\"No, not tonight. I want to feel you next to me.\"\n\nI smiled, my heart pounding in my chest. She was perfect in every way. I loved the splatter of freckles across her nose, her beautiful hair, the curves of her breasts, the flawlessness of her skin, and the unlimited depths of her eyes. She was real, her beauty was real, and that made her so much more special.\n\nI unhurriedly worked her out of my pajamas, my lips never far or long removed from her flesh. As I slowly slid the pants down her legs, kissing along behind the waistband, I paused to spend a moment drinking in her beauty. Not only was she achingly beautiful, but she was also the sexiest woman I'd ever seen. There was something about the contrast of her skin between the lightly tanned areas and those which weren't that simply drove me wild with desire.\n\nShe smiled at me as I slithered out of my pajamas. There was a hunger in her eyes, a hunger that spoke to me like no woman ever had. I reached past her, stretching for the drawer holding my condoms. She took my hand and brought it to her lips, kissing my fingers as she gazed into my eyes.\n\n\"Do you trust me?\"\n\n\"What?\" I asked, unsure of what she was saying.\n\n\"I trust you. Do you trust me?\"\n\nI smiled, realizing what she was implying. I hadn't been with a woman without protection in years, and Aubrey had too much class for her to give me anything.\n\n\"Yes.\"\n\n\"Then I want to feel you inside me. I don't want anything between us.\"\n\nI rolled her to her back. I felt like a eighteen-year-old again and forced myself to slow down. Now was not the time to rush. I lightly draped myself across her, caressing her lips with mine as I gently probed until I found her opening. I slid into her with a sigh, the pleasure of my passage unlike anything I'd experienced in recent memory. I pushed in deep, her soft exhale as two became one the sexiest sound I'd ever heard.\n\nOnce again I marveled at her genuineness. So many women I'd been with tried to perform like porn stars, their loud cries of ecstasy fooling no one, but Aubrey's soft sigh touched me. It was the true sound of a woman in pleasure, and it amplified my own pleasure tenfold.\n\nShe opened her eyes and looked at me, her face soft as I held her, my arms close at her side, my thumbs gently caressing her face. There was a bruise forming on her left temple, and rage began rising within me over what that asshole had done to her. She touched my face, the caress of her fingers bringing my gaze to her amazing eyes. The rage began to subside as we gazed into each other's eyes, and I kissed the faint line of freckles across her nose, then down her cheek to take her lips. We drank our fill, the kiss, slow, deep, and luxurious, before I slowly pulled back. I began to thrust leisurely, soaking up the pleasure she gave me like a sponge. I simply couldn't tear my gaze from hers, and I lost myself in the infinite depths of her eyes.\n\n\"What?\" she whispered.\n\nI smiled. \"It's nothing,\" I whispered in return.\n\n\"Tell me.\"\n\nMy heart began to hammer in my chest and I stilled my hips. I wanted to say it, but I couldn't.\n\n\"Dash? What is it?\"\n\nI licked my lips. \"I...\" I began before I lost my nerve.\n\nHer face clouded in concern. \"Is something wrong?\"\n\nI smiled again, and I swear to God, I felt like crying, the feelings welling up almost overwhelming me with their intensity. \"No,\" I breathed as I began to thrust again, my passions taking me away. \"Everything couldn't be more right.\" I paused again as I summoned my courage. \"It's so right... because I'm falling in love with you.\"",
        "She stared at me, her shock clear on her face. I'd opened myself to her as I'd never opened myself to another woman. I'd given her my heart, I just hadn't realized it until tonight when I thought I might lose her. I held her, waiting for her response, promising myself I wouldn't react, no matter her answer.\n\nA single tear crawled down her cheek, then another. I felt like such a fool. Of course she didn't love me. I'd all but forced her into a sham of a marriage after I'd treated her like a possession, like I'd treated the rest of my staff until she'd shown me a better way.\n\n\"I'm--\" I began, intending to apologize. I should have comforted her, not pressured her. I was making the same mistakes all over again, thinking only of what I wanted, never what she wanted. One more mistake in a long list of mistakes.\n\nShe pulled me tight. \"Tonight, when you saved me, I realized what you mean to me!\" she whispered in my ear, speaking over me. \"I was terrified you were going to die. The man with the bat... I didn't know what you meant to me until...\" She whimpered. \"I think I've fallen in love with you, too.\"\n\nI forced myself up to look in her eyes. She smiled at me, and I couldn't stop the smile forming on my lips. She'd seen me at my worst, and she still accepted me. I kissed her, the kiss of lovers before paling in comparison to this one. Having spoken of my love aloud made it real. I was falling for her, and I was falling hard.\n\nI began to thrust again, driving into her, excited beyond measure. \"I love you, Aubrey Madigan.\"\n\n\"No... Aubrey Callisto,\" she whispered. \"I love you more.\"\n\nWith her words of love, her head slowly tipped back, her eyes crushed closed as she began keening softly, her rising passion washing over me like a great wave. I could feel my own rapture forming and I wanted nothing more than to experience the ecstasy of man and woman with her. I began to drive into her hard and fast.\n\n\"Yes...\" she breathed.\n\nHer quiet sigh sent my passions soaring. I wanted to please her, and keep pleasing her, until the end of time. I gasped as my own rapture began to press in against me.\n\nHer eyes snapped open. \"Come with me,\" she breathed. \"Please, I want you to come with me.\"\n\nI'd do anything for her. I kissed her, our tongues dancing as our pleasure surrounded us. Her womanhood clamped down on me just as she moaned, her arms going around my neck to hold me in the kiss. Her moan was my undoing, and I spilled into her with a ragged, shuddering groan of my own.\n\nShe released me from the kiss, and we sighed together as I nuzzled her neck before taking her lips in another gentle kiss. I needed to taste her lips, and keep tasting them, until my heart beat its last. She smiled and touched my face with her fingers. I returned her smile, unable to prevent it even if I'd wanted to.\n\n\"I love you,\" she whispered.\n\nI caressed her lips with mine, wise to the game. \"I love you more.\"\n\nShe smiled and pulled my lips to her neck. \"Hold me,\" she whispered as my lips began to explore.\n\nI held her as I tasted the sweetness of her skin. \"Until the end of time,\" I breathed.\n\nAs my lips continued to explore, she began to move under me. \"I want you again,\" she murmured as she twisted her head to offer me her lips.\n\nI was softening, but I was still hard enough, and began to thrust again, her soft moan reigniting the fire inside me, a fire we could only dampen but not extinguish.\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">Aubrey</p>\n\nIt had been nine weeks since the break-in. The damage to the house had been repaired, and being held in Dash's strong arms each night had prevented nightmares from forming.\n\nHe'd opened a new world of pleasure to me. He was a lover of exceptional skill, and he'd given me pleasures I hadn't imagined possible, but more, I'd fallen hopelessly, madly, impossibly in love with him. Having him open himself up to me as we made sweet, sweet, love had been like the first crack in the dam of my heart. The trickle had started out slow, but the torrent of feelings I had for him had quickly grown in size and power until the walls around my heart collapsed and were washed away. I felt renewed somehow, as if all my problems had evaporated until they were gone as if they'd never been. I'd never been happier than I was each day, and yet, somehow, each day seemed better than the one before.\n\nEven Dash's parents had noticed the change in us and had subtly asked questions about what had happened. We'd passed it off as the break-in had made us realize just how much we truly meant to each other. It was the truth and the explanation seemed to satisfy them.\n\nI hadn't returned to my room again except to have Dash make love to me there as part of our christening of every room in the house. I'd been reluctant to return to the room even after the window had been repaired because of the bad memories it held, but no more. Now the memories associated with the room were of him gently taking me against the glass wall as one of the rare thunderstorms pummeled the grounds beyond the glass.\n\nI was arranging the fresh flowers Dash had delivered every day when he walked through the door. He was home far too early and my brow furrowed in concern and confusion. \"Is everything okay?\"\n\n\"No. Maryanne!\"\n\n\"Yes, Mr. Callisto?\" Maryanne said as she hurried from somewhere in the back part of the house.\n\n\"You're excused for the rest of the day.\"\n\n\"Are you sure?\"\n\n\"Yes, please go.\"\n\n\"Have I done something wrong, Mr. Callisto?\" she asked, her face paling slightly.\n\nHe smiled at her. \"No. Everything's fine. You simply get the afternoon off. I have something to discuss with Aubrey in private.\"\n\n\"Right away, sir.\"\n\n\"Dash? What's wrong?\"\n\n\"We'll talk when we're alone.\"\n\nAfter Maryanne left, he escorted me into the lounge. \"Please, sit down,\" he said.\n\nI felt a cold lump forming in my chest. Nothing good was going to come of this, I was certain. He pulled papers from a leather portfolio and handed them to me.\n\n\"What are these?\" I asked as I took the forms. I glanced at them.\n\nOne was a check for one million dollars. Another was a transfer order, transferring 231,875 shares of preferred stock in Callisto Holdings from Dash to me. Current value, $2,000,018.38. The last form stated the previous contract between us had been satisfied. I looked into Dash's eyes as I felt a tear slide down my cheek.\n\n\"That's it?\" I asked, my voice quavering slightly.\n\n\"That's it.\"\n\n\"I thought we had something special.\"\n\n\"We do.\"\n\n\"Then why this?\"\n\n\"It's what we agreed to. All debts paid.\"\n\n\"So, we're back to business again?\" I asked as I brusquely wiped away the tear.\n\nI could feel my heart ripping in two, but I wouldn't give this asshole the satisfaction of seeing another tear.\n\n\"I can't live with this lie any more. I have to clear the air.\"\n\nI took a deep breath and hardened myself. \"Pen,\" I snapped as I held my hand out.\n\nHe handed me a pen and I quickly signed the form. I handed him the paper with a quick flick of my wrist. He tucked the form back into the portfolio.\n\n\"Wedding ring,\" he said, holding his hand out.\n\nI pursed my lips, fighting my tears as I slid both bands off my finger. I dropped them into his palm. He looked at them a moment while bouncing them in his hand. He stood and walked to the door, slid it open, then flung the two rings as far into the yard as he could. I watched, grinding my teeth so I wouldn't cry. The engagement ring was a two-carat flawless diamond, was worth more than fifty thousand dollars, and he'd thrown it away like it was nothing, like I was nothing. He turned back to me. I thought I saw two rings soar into the landscaping, but he was still holding the engagement ring, so he wasn't a complete idiot.\n\nHe crossed the room, stood for a moment, then dropped to one knee, holding the engagement ring out to me. \"Aubrey... will you marry me?\"\n\nI stared at him in confusion. \"What?\"\n\n\"You've fulfilled your obligation and I've paid my debit. You're free to leave, but I would like it very much if you'd stayed. I want you to stay and be my wife.\"\n\nI stared at him. \"I am your wife.\"\n\nHe shook his head. \"No. That was a sham. I'm asking you now, will you marry me?\"\n\nI whimpered, sniffed, and whimpered again as I smiled, touched by what he was doing, fighting to hold my tears and losing. \"Yes.\"\n\nHis face lit up as he took my hand and slid the ring back onto my finger where it belonged. That's when I noticed his wedding band was also missing. He stood, pulling me to my feet as he did. He reached into his pocket and pulled out two gold rings. He placed the larger in my right hand before taking my left.\n\n\"Aubrey Madigan, will you take my hand? Will you be my lawfully wedded wife? Will you have me, and hold me, and forsake all others, until death do us part?\"\n\nI whimpered, completely losing my battle with my tears. \"I will,\" I blubbered.\n\nHe carefully placed the band on my finger and slid it down until it nestled in against its mate.\n\nI took his hand, wiping my eyes as I took several deep breaths, trying to collect myself so I could do what had to be done, what I desperately wanted to do. I sniffed, still struggling not to cry, but with joy this time.\n\nI cleared my throat. \"Daschle Callisto, will you take my hand? Will you be my lawfully wedded husband? Will you have me, and hold me, and forsake all others, until death do us part?\"\n\n\"I will,\" he replied solemnly, and I slid his new wedding band into position on his finger.\n\nHe pulled me into a kiss. It wasn't our official wedding, that had already occurred, but this was our real wedding. I was giving him my heart this time, and he was giving me his. What the state of Nevada didn't know wouldn't hurt them.\n\nHe pulled slowly back from the kiss. \"I love you, Aubrey Callisto.\"\n\n\"I love you, Daschle Callisto.\"\n\nWe looked at each other a moment, and he smiled. \"We leave tomorrow for Italy for two weeks, but I don't want to wait that long to consummate our marriage.\"\n\nI smiled softly, my heart swelling with feeling as tears began to trickle down my cheeks again. We'd only had three days in Miami. \"I don't either.\" My slightly wet and soggy smile spread. \"You already had the trip to Italy booked? What if I hadn't said yes?\"\n\nHe looked at me as he caressed my face, his touch gossamer wings as he wiped away my tears. \"The trip would have been the least of my disappointments.\"\n\nI had to work hard to not sob. He took my hand and I started to follow him to our bedroom, but before I could complete a step, I tugged my hand free. There was one more thing I had to do.\n\nI opened the leather portfolio. Inside was the original contract, along with the document I'd just signed. I removed both and picked up the transfer order and the check. I aligned the edges and quickly ripped them into two. I stacked the halves and ripped them again. I returned the shreds to the portfolio.\n\n\"We don't need those anymore,\" I said as I took his hand.\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">.</p>\n\n<p align=\"center\">Dash</p>\n\nMom squealed in delight. \"Really?\"\n\nAubrey glowed as she smiled and nodded. Aubrey and I were finally breaking the news. \"Really,\" she said, her voice all but bubbling.\n\n\"I'm going to be a grandma? I'm so excited!\"\n\nWe were fourteen weeks back from Italy, and she'd gone off the pill while we were there. Considering we were still fucking like rabbits, sometimes going three or four times a day on weekends, I was surprised it'd taken this long.\n\nMom hugged Aubrey before turning to me, throwing her arms around me and squeezing so hard I thought I heard my ribs creak. After hugging Aubrey, Dad pulled me into a hug next, and then gripped my hand in a firm handshake.\n\n\"Congratulations,\" he added as he released my hand.\n\n\"Yeah, well, I guess I have you to thank for this.\"\n\n\"How do you mean?\"\n\n\"Well, you kind of pushed me into it. Had you not, I don't think I'd have ever noticed what was right there in front of me.\"\n\nDad broke into a broad smile. \"You really thought I wouldn't pass the company to you if you didn't get married?\"\n\nA chill raced through me. \"What?\"\n\n\"Dash, you're my son. I'd never do anything like that to you. But your mother and I agreed, you needed a little push. Something to get you to start thinking about your future and not just who was the next bimbo you were going to try to bed.\" He held up his hand. \"Yes, we knew what was going on. You really thought you were keeping that secret from us?\"\n\n\"So you set all this up so I would marry Aubrey?\"\n\nMom giggled. \"Of course not! We had no idea you two had fallen in love.\" She smiled at Aubrey. \"Though I'm glad you did. After she arrived, we knew she was covering up some of your... indiscretions... but we didn't know what they were.\" She smiled at Aubrey again. \"After a while, I knew you were in good hands.\"\n\n\"Then why?\"\n\n\"Because it was time to grow up,\" Dad said firmly. \"I wasn't kidding when I said I was ready to retire, but I didn't feel like I could leave until you were ready to take over the reins. You didn't seem to be making much progress on that by yourself, so, I gave you an incentive.\"\n\n\"You could have just told me,\" I growled.\n\n\"Would you have listened?\" Mom asked.\n\nI glared at my parents a moment then softened. \"No. Probably not. But what if I hadn't picked Aubrey?\"\n\n\"Dash... we weren't trying to pick a bride for you,\" Mom said, taking my hands. \"We just wanted you to settle down a little, to show some responsibility to someone other than yourself. But I think you've chosen well. I'm proud to call Aubrey my daughter.\"\n\nI saw Aubrey softly chew her bottom lip. Mom and Dad didn't know about her family problems, and I could tell Mom's words had touched her.\n\n\"Thank you,\" Aubrey said softly.\n\nMom nodded as she held her gaze. \"No... thank you. You've taken my baby and made him into a fine man.\"\n\n\"I think you give me too much credit.\"\n\n\"No, my dear. I don't think you give yourself enough. We tried to teach him, and deep down we knew he was a good man, but you're the one that brought that out of him. You showed him how a good man should act.\"\n\nAubrey looked down, one of the few times I'd seen her unsure of herself. \"Just like his father, then,\" she murmured.\n\nMom and Dad glanced at each other as they smiled, engaged in that telepathic link they seemed to share. Since I'd married Aubrey, really married her, I was starting to see Mom and Dad differently than I had before, and I wondered if Aubrey and I would become like them.\n\nI was a husband, and soon I'd be a father, but she still absolutely rocked my world when the bedroom door closed. I could no longer imagine life without her at my side. So much had happened since I'd hatched my ill-conceived, and as I now knew, unnecessary plan to secure my inheritance. What had started with the biggest mistake of my life had turned into the best thing to happen to me.\n\nI smiled as I pulled Aubrey into my side. I'd gone from cad to husband, and soon, to father. I smiled as I kissed her quickly on the lips, her kiss never failing to excite me.\n\nFather... the word echoed in my head. I smiled, Aubrey on my arm as I followed Mom and Dad into the kitchen. Two years ago, I couldn't conceive of having a child. Now, I was looking forward to the adventure."
    ],
    "authorname": "SanityCheck",
    "tags": [
        "billionaire",
        "fake wife",
        "inheritance",
        "marriage",
        "millionaire"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-billionaires-assistant"
}