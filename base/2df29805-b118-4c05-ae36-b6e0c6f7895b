{
    "title": "The Wicked Tower Pt. 12",
    "pages": [
        "All characters in sexual situations are 18 or older. Thanks for reading!\n\nThe night passed for Vel with little sleep. He stared out the window and the pink dawn rose outside. He rose, opened his door, and checked again. The two guards were still there. On high alert. They saluted him, but would not let him pass. He closed the door again and slumped in a chair. He stared at the door. Breakfast would arrive eventually. And he supposed his mother would visit again to fill him in on the terms of his imprisonment. He knew the guards would never let his sister pass, but it was a visit from Naevia that he desired above all else.\n\nA flash of blue light crept from under the door. There were two muffled thumps as if bodies fell to the corridor's stone floor. Vel shot up, his mind racing. Was he under attack? He picked up a heavy candelabra and opened the door.\n\nIn the corridor stood Naevia. Her hands were clasped behind her back and she had a look of concern on her face. She glanced up at her brother with guilt in her green eyes. \"I don't know how I did that, Vel. They wouldn't let me pass. I became frustrated. And... you see.\" She needlessly pointed at the unconscious men. Other than the frown on her face, she looked ready to meet the day, with her stola unblemished, and her copper hair shining in the lamplight.\n\n\"Did you kill them?\" Vel's mouth hung open as he surveyed the scene.\n\n\"I don't think so.\" Naevia stared at the guards with wide eyes. Her skin went paler than normal, making her freckles stand out all the more. Her shoulders clenched tight. What had she done? She could feel her nerves building to some terrible crescendo. \"I just wish they'd get up and walk away.\" A calm settled over her and another flash of azure light smothered everything in the corridor for a second.\n\nBoth men scrambled to their feet, looking quite shaky. Without so much as a salute, they turned and strode away from their place by their duke's door.\n\n\"Um... will they be okay?\" Vel watched them amble off. Soon the guards had disappeared around a corner. He put down the candelabra inside his door.\n\n\"I think so.\" A smile spread across her face as their situation struck her. She suddenly felt quite giddy and ready... to be close to Vel. \"Sorry about that fellas,\" she called after them. And then to Vel, she whispered, \"let me come inside.\" She slipped past him into the room. They had their hands all over each other before the door was even closed.\n\nWhen they were naked on Vel's bed, Naevia straddled him. \"I feel like we should go with the reverse saddle, since we were interrupted last time.\" Instead, she faced him as she maneuvered his cock inside her. \"But we need to... uuuuhhhhhhh... talk. Good gods, Vel, you're deep.\" She settled her slight weight on him, pushing him all the way inside.\n\n\"We're going to get caught again, aren't we?\" Vel had a moment of panic, but couldn't bring himself to lift her off him. Maybe their mother was right. They had gone insane.\n\n\"Don't... ugh... worry. I told the kitchen... to delay your breakfast.\" Naevia rocked her hips slowly. \"And I did something... naughty... to Bantia's wedding dress. Mother will be busy with that all morning.\" She leaned forward and winked at him. \"Now tell me how you... uh... uh... convinced mother to spare me the nunnery.\"\n\nVel told his beautiful sister as she slowly rode him. He tried to keep his eyes fixed to hers and not on her tits, but it was a difficult task. When he had finished his story, he watched her for a reaction. \"I only did it so she wouldn't send you away.\" Vel caressed the curve on each side where her waist rose out to her hips. \"And you said you wouldn't be jealous of other girls.\"\n\nNaevia giggled a bit before her face twisted in pleasure. \"I did not think at the time that girls meant our mother, Your Grace.\" She put a finger to his lips when she saw the worry in his eyes. \"But I am true to my word. I am not jealous.\" Her hips moved faster. \"To tell you the truth, I'm sorry I missed it. To see our sanctimonious mother, just an hour after giving me a tongue lashing, please you with that very same tongue. And she drank your stuff? That would have been... quite something to see.\" She rode him in silence for a time, thinking things over.\n\nVel lost himself in his own feelings. He watched her bouncing, freckled tits for a while. They looked magical in the flickering lamplight, with a fine line of daylight slipping through the curtains and running up the curve of her right breast. His gaze then dropped, and he watched her trim tummy bulge every time she pushed him to his deepest point. He would never grow tired of his sister.\n\n\"I have something to talk to you about.\" Naevia leaned forward and dug her nails into his chest. Her expression carried some form of mischief, twisted by her passion. \"But first you should cum. Breakfast isn't too far away.\" She leaned back, put her hands on his thighs, and humped him with long, powerful strokes. \"We can't have them find us... like this.\"\n\n\"Uuhhhhhh... Naevia... I'm going to cum... inside you... again.\" He reached up and grabbed handfuls of her heavy breasts. \"So... perfect... aaaahhhhhhhhhh.\" If the guards had still been outside his door, they would have certainly heard the siblings screaming out their dueling orgasms.\n\nA few minutes later, they lay on their backs side by side, tall and short, skinny and round, touching sweaty shoulders.\n\n\"And here... I thought... I wasn't going to see you... for a long time.\" Vel lazily reached over and outlined one of her pink, puffy nipples with is finger. \"It gets better and better doesn't it.\" Had he ever been so relaxed?\n\n\"Do you trust me, Vel?\" Naevia sat up in bed and crossed her legs, facing him. The bottoms of her breasts brushed against her thighs as she leaned toward him with a serious look.\n\n\"Of course.\" He felt too good to sit up, so he pulled the pillow under his head and stared at her loveliness.\n\n\"We can't have Mother locking you up and doing who knows what with us. We have to be in charge of our own destiny, Vel.\"\n\n\"Are you talking about the blue light? Because I don't have that, and anyway, I'm not about to knock out Mother with some sort of magic.\" It was odd that they hadn't yet explored the full meaning of what Naevia had done out on the veranda, and then in the corridor. Things were happening so quickly, and just about every moment seemed to contain something wondrously full and pressing. His train of thought brought him back to the feel of his mother on his lap, pleasuring him for all she was worth.\n\n\"I'm talking about your gift, Vel.\" She wasn't calling it a curse anymore. Her eyes trailed down his long body to where his cock stirred, coming back to life. \"We don't have time for sex right now. I have a plan to put us in charge of our own destiny. We only have a short time before your breakfast arrives. Listen closely.\"\n\n~~\n\n\"Welcome, again, Dellia.\" Cassia eyed her niece with some suspicion. After all, she had been with Vel and Naevia on their voyage and returned by the relic tower the same as them. Had she witnessed Vel's curse in action? \"And welcome, Spurrius.\" She forced a smile at Dellia's husband. He was a handsome man. But looks could hide duplicity. As they did in the case before her. \"I did not expect you two. What is the occasion?\"\n\nSpurrius gave a slight bow, his returned smile thin and fading.\n\n\"I should very much like to greet my cousins. Where can I find them?\" Dellia looked about her. The great eastern entry hall seemed dim and cavernous with only Cassia there. Cassia herself seemed somehow diminished from her usual brilliance. In the shadows high above, hung lifeless banners of various cephalopod incarnations. Iterations on the Tullius sigil. She glanced at her husband. Dellia was already wet between the legs. She would have to find a way to occupy Spurrius while she gave Vel a proper greeting.\n\n\"Oh, I'm sorry.\" Cassia's forced smile disappeared altogether. \"Bantia is in the conservatory of flowers, choosing wedding arrangements. Vel and Naevia have both taken ill and are confined to their rooms.\" Cassia turned from her unwanted guests, she had so many things pressing on her that day. Not the least of which was to figure out what to do with her eighteen and nineteen-year-old miscreants. \"The seneschal will set a room for you in the south tower. Splendid views of the harbor. Bantia will be thrilled to see her cousin.\" The south tower wasn't usually for family stays, but she wanted Dellia far away from Vel and Naevia. And she made a note to tell the seneschal to have someone keep an eye on Spurrius. \"I'll see you at supper.\"\n\n\"Goodbye, Your Grace.\" Dellia curtsied awkwardly.\n\n\"Your Grace.\" Spurrius bowed and waited for the duchess's round, scurrying bottom to disappear through a doorway. He leaned toward his wife. \"You were wise to bring us here. She's hiding something. I can feel it.\"\n\n\"Yes, indeed.\" Dellia thought things through. She didn't for a minute believe her cousins had both caught a chill. Something was afoot. And she saw the opportunity to relieve herself of her husband for a little while. \"Why don't you follow her about discreetly for a while. It's probably nothing, but Gallio might be trying to contact her.\"\n\n\"I hope for her sake that is not so.\" Spurrius thought on it and nodded. \"And where will you go?\"\n\n\"I will see about my poor, ill cousins.\" Dellia kissed him on the cheek. \"I'll see you at supper.\"\n\n\"At supper then.\" Spurrius smiled at her. Things were returning to normal with his wife. They were never more at home than when they were working together. He walked off in the direction Cassia had gone in an aimless manner that belied his true task.\n\nDellia sighed, and strode off toward Vel's chamber. Her undergarment was soaked through.\n\n~~\n\nA quick knock on the door was answered with a muffled, \"Mother?\"\n\n\"I am not your mother, Vel.\" Dellia tried the handle, but it was locked. A second later, the door opened from the inside. Vel and Naevia stood on the other side, smiling big idiot smiles. Dellia tried to control it, but she couldn't help but break out into her own grin.\n\n\"Come in, quick. A new guard should be here soon. They were supposed to change at midday.\" Naevia hurriedly beckoned her in.\n\n\"New guard? If they're changing, where is the old guard?\" She stepped inside and they closed and locked the door behind her.\n\n\"Naevia zapped them with magic,\" Vel tried to look serious, but it was too good to see Dellia after these many weeks. He moved to hug her, but she held him away with her well-muscled arms.\n\n\"Naevia did what now?\" Dellia could not have heard him correctly.\n\n\"Remember that blue light from the tower?\" Naevia said. \"I seem to have borrowed some of it.\"\n\nHer cousins brought Dellia up to speed on all that had happened in her absence. Although, they failed to mention Cassia lovingly coaxing a load from her son.\n\n\"And now, we have something planned for the afternoon. You must go.\" Naevia pushed her cousin toward the door. \"Are you staying the night? We'll catch up with you tomorrow.\"\n\n\"But wait.\" Dellia's olive cheeks grew darker as she was forced to say what she was hoping would happen naturally. \"I thought Vel and I could spend a little time together. I don't mind if you're here too, Naevia. It's just... I mean... I wouldn't need more than an hour or two.\" Her stomach flipped as the real possibility of leaving unsatisfied manifested in front of her.\n\n\"Hold on. Let me check for the guard.\" Vel stepped to the door and opened it. Two new soldiers stood outside his door. They saluted, and clearly had no intention of letting him pass. If they wondered what had happened to the shift they were replacing, they didn't ask their duke. Vel returned the salute and closed the door. \"You cannot leave now. The guard is right outside.\"\n\n\"Wonderful.\" Dellia moved to embrace Vel, but he held her off with his long arms.\n\n\"We can't do that now.\" Vel cursed the complexity of feelings that bound him. \"We expect my mother to visit soon. And if she finds you naked in my chamber her head may explode. We have to --\" He was interrupted by a key scraping at the iron lock. \"It's Mother,\" he whispered. \"Hide.\"\n\n\"You have to go through with it, Vel.\" Naevia guided Dellia toward the wardrobe, whispering back at her brother over her shoulder.\n\n\"But Dellia?\" Vel knotted his brows in consternation. Did she really expect Dellia to witness?\n\n\"Trust me, Vel. We must step out from under Mother's wing.\" Naevia pulled Dellia into the wardrobe with her, leaving the door open a crack.\n\n\"What are you two going to do?\" Dellia settled her butt against the back wall, the warmth of her cousin pressed on one side and the pleasant softness of Vel's fur coats on the other side.\n\n\"Shh. Just watch.\" Naevia tried to keep the giddiness out of her voice.\n\n~~\n\n\"Good afternoon, Vel.\" Cassia stood very straight, and closed the door behind her stiffly. Her stola was as formal as her manner. It was loose around her chest and trailed down to the floor. But that was just insurance, because no one could see past the blue, velvet mantle wrapped around her shoulders. Her body was covered doubly over. \"I've had time to reflect on what happened before. I haven't enquired of Brynhild or the sorcerer's guild. There are too many questions that might ignite.\" She stood in the middle of the room, hands clasped tight in front of her. Now that she was in the same space as Vel, she felt some of her resolve fading.\n\n\"Good afternoon, Mother.\" Vel sat on the side of his bed, trying to keep his trembling fingers still. Unless his mother gave him no choice, he wouldn't go through with it. How could he? His father was a hard, calculating man who had little patience for Vel's gentle ways. But Gallio didn't deserve to have his son take what was his. Heck, he had already taken his father's seat of power. He couldn't also take his wife.\n\n\"I am so sorry to tell you this, Vel. But you are to remain locked in here indefinitely.\" A tear ran down Cassia's cheek. \"I have seen the curse at work, and we cannot have its influence spread.\"\n\nVel's shoulders slumped. She would give him no choice then. \"And my sister?\"\n\n\"Naevia will be allowed out, but she will have a chaperone at all times.\"\n\n\"Are you watching her now?\" Vel stood up.\n\n\"I've sent a guard to her chamber just now.\" Cassia wanted to reach out and hug Vel. Her motherly instinct told her to caress him and tell him all would be fine in the end. But she held fast. She wasn't sure how his curse worked. \"This will be a lonely time for you until we sort this out. I have sent word to your father that you have taken ill and he is needed here. I pray he sends word back. Perhaps he can find a solution.\" She paused. Her brown hair caught the glow of the lamps about the room. \"You can never tell him about what happened yesterday. He would not... understand. Or about your sister.\"\n\n\"I would never tell him.\" It was true. He might steal his father's woman, but he would be a gentleman about it. Vel was nothing if he was not gentle, thoughtful, and civilized. \"But I cannot stay locked in my room. Naevia and I mean to understand the mystery of the blue light and the relic tower. And the queens regent are not all they seem. I'm looking into that.\"\n\n\"I'm sorry, Vel. You cannot leave your chamber.\" Cassia was caught off guard by his apparent confidence. She had expected him to take his sentence with resignation and tears. But as he stood, he looked almost brash.\n\n\"I'm sorry too, Mother.\" Vel quickly moved across the room and leaned down to take her into his arms. She was stiff as a board, with her lips shut tight. But he kissed her anyway. He slid his hands over the mantle, under her brown hair, and onto the bare skin at the back of her neck.\n\n\"Don't Vel... the curse,\" Cassia said through pressed lips. But she already felt the hollowness of her words. Heat spread from his touch on her lips and neck. It was delicious. The moment felt quite like returning home after a long time away.\n\nVel leaned his head back so he could look into her eyes, still gently massaging the back of her neck. \"I love you, Mother. But you cannot lock me up. I am the duke and you are my duchess. What gives you that power?\"\n\n\"I am your mother.\" She fully intended to seize that moment and push him away. It clearly was the opening she needed. But instead, she leaned up into him, pressing herself against his warmth, and kissed him with passion. What treason her body committed against her!\n\n\"Mmmmmppphhhhh.\" Surprised, Vel returned her insistent kiss. Her tongue darted into his mouth, and although this was going according to his sister's plan, he couldn't help wonder what Naevia thought as she watched from the wardrobe.\n\nTime was lost to mother and son as they kissed. Eventually the mantle fell to the floor, spread out around Cassia's ankles. His hands moved from her neck, down her back, and groped at her round butt. She carefully moved his hands to her hips, but then they traveled up and up and soon he had hold of her boobs. She kissed him and did not move his hands this time. Her whole body radiated with his heat. Something very large and hard pushed at the bottom of her boobs. She knew what it was.\n\nShe pulled her lips from his, but kept her body pressed against him. \"I know it's the curse that has broken the dam, but also...\" She bit her bottom lip as she thought of the right words. \"I feel that the river of feeling was inevitable. You and I were meant for this.\" She tugged his robes off him and lifted his tunic over his head. She was pleased that his hands returned to her breasts after he lifted his arms to disrobe. She looked down. He hadn't worn underwear. \"Oh, my, Vel. It's so beautiful.\" The head of his thing curved out quickly to its flange and was an intense, pinkish red. Clear fluid slowly leaked from the top. The shaft was long and thick, crisscrossed with purplish veins. She could see the whole penis move with Vel's heart. \"I'm going to take care of you.\" Her voice sounded girlish in her own ears. She didn't even know what she was saying.\n\n\"Okay,\" he said dumbly. He watched as she pulled her stola over her head and threw it behind her. She then discarded her chest band, letting her bare boobs rub up against him. She didn't seem to mind that his clear fluid smeared the undersides of her tits. From the wild look in her eye, the loose set of her jaw, and the flush in her cheeks, it seemed she wasn't minding much at the moment.\n\n\"I can't believe I'm going to do this.\" She pushed his hands away from her breasts and held them herself. She then moved each tit apart on either side of his long organ, and pressed them together around it. She had tried this with her husband on occasion when they were younger, but Vel's size made the act almost a completely different thing. Holding her breasts firmly, she moved them up and down.\n\n\"That's nice.\" Vel was captivated by how her tits looked warped and bulging around his cock. \"But it's too dry.\"\n\n\"Eh?\" She looked up at him. His father had never made this complaint. She hadn't the foggiest notion what to do about it.\n\n\"Spit, Mother. You have to spit on it.\" Vel had seen his sister do this more than once.\n\n\"Really?\" Cassia's eyebrows raised. Somehow spitting in his presence was more undignified than pleasuring him with her breasts. But she couldn't have him chaffing his most sensitive parts. She spit down on that crimson cockhead. It slid better. She spit again and continued moving her breasts.\n\n\"That's better. Maybe one more?\" Vel wondered at what Dellia must be thinking, watching the prim duchess stand in front of her son, working him with her large tits and spitting like a dockworker.\n\n\"Maybe I should just take you in my mouth like last time.\" But she spit again and worked him. A short while later she looked up from her work into his face and saw pure joy written there. It was clearly worth the indignity to see Vel so thoroughly pleased. Her heart welled with pride. It was as if her breasts were made for his penis. A perfect fit. No, she had made this penis to fit her breasts. Her vagina gushed at the thought. She pumped her breasts up and down faster, staring up into Vel's handsome face.",
        "~~\n\n\"Shit, shit, shit.\" Dellia whispered. \"She's really into it.\" She leaned forward to stare out the crack in the door, her cousin leaning just below her. The way they were situated, Dellia's breasts rested on Naevia's back. And Naevia's bent rump was pressed into Dellia's pelvis. The tangy scent of both women's excitement filled the wardrobe.\n\n\"Quiet.\" Naevia was over the moon watching the standing boobjob. She thought of all her mother's admonishments not to be a trollop in recent years. And her tirade the day before when she'd become convinced that Naevia was some kind of harlot. And now here her mother was, acting like she was turning some cheap trick. No, not a cheap trick. Naevia corrected herself. A very expensive one. Men would ransom kingdoms for what Vel had right then. Without thinking, she wiggled her butt back into her cousin.\n\nDellia was so caught up in witnessing the duke and duchess's lascivious behavior, that it took her a while to notice that her cousin was wriggling her butt back into her. And to her surprise, Dellia found that she rocked her own hips, grinding her pussy onto the firm roundness beneath. She reached down and took hold of Naevia's hips from behind and pulled her tightly back against her. She heard Naevia's sharp intake of breath as her cousin manhandled her. They both continued staring at the scene out in the room and ground against each other. She took the sleeve of a fur coat and bit down on it hard, letting out a muffled grunt.\n\n\"Quiet,\" Naevia hissed over her shoulder. To be discovered now would be catastrophic.\n\n~~\n\n\"What was that?\" Cassia paused her work on her son's penis to look around the room.\n\n\"I'm not sure.\" Vel was sure. It was his sister and cousin in the wardrobe. Didn't they know they had to be absolutely quiet? \"Maybe it was the guard?\"\n\n\"I thought it came from over there.\" Cassia dropped her breasts and wandered over toward her son's wardrobe. She was vaguely aware that her son's eyes were probably fixed to her butt, with only her thin underwear to hinder his view. But she was more worried there might be a spy with them. If a Vulpes asset had just seen what she was doing with her son, that would be very bad. Very bad indeed.\n\n\"It was the guard. Definitely the guard outside the door.\" Vel was frozen on the spot. They were dead when his mother found the hidden eavesdroppers. Just dead.\n\n~~\n\nInside the wardrobe, the cousins had stopped their rubbing. They were both rigid as boards. This was disaster. Cassia stepped nearer and nearer to them.\n\nDellia wished they were anywhere but the wardrobe. An azure light sprung from Dellia's skin and reached out to encompass both cousins. A thought popped into her mind. Where would you go? She answered herself silently. Anywhere. Naevia's bedroom. With a flash of light, the furs pressed against her were gone. She floated in the air. The azure faded to black, and then she fell into nothing.\n\nThump. Thump. Dellia and her cousin landed on a soft mattress. She looked around the room. It was Naevia's chamber.\n\n\"Did we...\" Naevia blinked as she took in the bright, familiar space. \"Did we escape?\"\n\n\"Yes. But how?\" Dellia needed to mate. The impulse overwhelmed her desire for an answer. A euphoria spread through her. She quickly pulled off her tunic, and dropped her underwear. She didn't bother to remove her chest band. \"And I am now in a... frenzy.\" She picked up Naevia from her sitting position and tossed her onto her back. She then pulled her cousins stola up past her waist and mounted her.\n\n\"Whoa, Cousin. We can share Vel, but I'm not sure I desire a woman's touch.\" Naevia tried to sit up, but was pushed back down by Dellia's rough touch. \"What happened in the wardrobe was just a little fun because we were watching Mother and Vel. I... ugh... I... you really are persistent.\" She felt her underwear get torn away and now Dellia's pussy was pressed against hers. Her cousin's hips rocked steadily. \"Oh... that does feel good. Oh... oh... oooohhhhhhhhhh. Where did you learn that?\" Their buttons rubbed perfectly together.\n\n\"From... fucking... my husband.\" It was true. Dellia's attempts to find pleasure with her husband's small penis over the past week had prepared her well for lesbian sex. \"You are such... a pretty... little... thing... Cousin.\" She tore at Naevia's stola, and at the chest band underneath, spilling her tits out into the open.\n\n\"Thank you... ugh... Dellia.\" Naevia quickly built toward a climax. Was this cheating on Vel? She thought it over as she watched the intensity twist her cousin's face. If she wasn't going to be jealous of Vel with their beauty of a mother, and his time with the very cousin mounting her at that moment, then he had no right to jealousy either. She would enjoy this. \"Faster... Dellia... faster... yes... right there... aaaahhhhhhh.\"\n\n~~\n\n\"That's strange... I could have sworn I heard someone. And then... a light from this wardrobe.\" She bent forward into the wardrobe, again giving Vel quite a view of her butt. But why should that matter when her breasts had just been pressed against his penis. Oh, gods, that magnificent penis. She straightened and turned around. \"There's nothing and no one there.\" Her passions had cooled on her little expedition across the room. Maybe now would be a good time to leave? But she had promised to take care of him. But that wasn't the sort of promise a mother should keep. She was so confused.\n\n\"No one?\" Vel could not understand what had happened. \"There's no one there?\"\n\n\"Perhaps it was the guard.\" Cassia tried to keep her eyes away from her son's great spear. She crossed the room quickly, picked up the mantle, and pulled it around her shoulders, not bothering with her other clothes. \"The guard,\" she mumbled. She moved to the door.\n\n\"Wait, Mother. Don't leave.\" Not only had he failed in his sister's plan, but he desperately wanted his mother to stay regardless. His desire for her had blossomed over the past two days. To have his own mother give herself over to him was a feeling little considered before, but now powerful and intoxicating. Despite all that, he stood rooted to the spot, fixed with indecision.\n\n\"Quiet, Vel.\" Cassia pulled the mantle tight around her. She did not care to give the guards a show. She unlocked and opened the door, stuck her head out, and nodded at the salute she received. \"We no longer need a guard at this door. Return to your other duties.\"\n\n\"Yes, Your Grace,\" said the nearer guard. They snapped to attention, saluted again, and then marched down the corridor.\n\nCassia closed the door and locked it again. She pushed her back up against it and then the mantle fell open, revealing to Vel an exposed gap between her breasts on down her body. \"If we can hear them, they might have heard us. Especially when you... um... get to the end. Now, let me finish you.\"\n\n\"Really?\" Vel still couldn't move. But he didn't have to. He watched her drop the mantle to the floor, quickly moved over to him, and then bent at the waist.\n\n\"It will probably go faster if I use my mouth.\" With shaking fingers, she grasped the spongy flesh of his penis with both hands. Her eyes quickly darted to Gallio's iron on her finger. Should she take it off? No, she didn't want to make a big deal of it in front of Vel. She lowered her face closer and closer. That strange heat moved up her arms and relaxed her to the core. The salty taste of his pre-seed hit her tongue. Soon, she had the head in her mouth just like the day before. Only this time, he wasn't playing with her vagina. She was loath to admit it to herself, but she really wished his fingers were exploring her again. But instead, they wound themselves into her hair, encouraging her to bob on his penis. Which is exactly what she did. She must have been quite the sight, bent over, with her breasts swinging under her. What had Venus done?\n\n\"Wow, Mother. You're gorgeous.\" Vel could just see the sides of her tits past her back as they swung from one side to the other. His eyes traveled down her spine, following the flare from her waist to her ass. She was not simply an older, darker copy of Naevia. She was maybe more womanly. Her curves more accentuated. With the hand that wasn't holding her hair, he took hold of her last, remaining undergarment, and pulled it down her legs. He then reached behind her and accessed her pussy with his fingers from the back. She was quite wet and ready.\n\n\"Uuuummpppphhhhhh.\" Cassia hadn't expected her son to come at her from the rear, but he had the reach. She nearly forgot to bounce her head as the pleasure of his warmth radiated out from her insides. She would have to finish him soon or there was no telling what her body would make her do. The need inside her grew.\n\nTwenty minutes later, they had not changed positions. The familiar sound of Cassia's wet slurping mouth and pussy filled the otherwise quiet room.\n\nIt was too much. Cassia spat his fat cockhead from her mouth and released him from her grip. \"This must be... what... insanity feels like,\" she panted. \"Stop... stop.\" She reached behind her and removed his fingers from her. She felt him spread a trail of her wetness up her left butt cheek. She shuddered. \"On the bed, now.\" She pushed his chest. \"Quickly, quickly, before I change my mind.\"\n\n\"Your Grace?\" It sounded so stupid coming from his mouth, but his confusion about the wardrobe was matched now as he tried to process her orders. Were they going to have sex?\n\n\"You're a smart lad, Vel.\" She pushed him again. \"On your back. On your bed.\" She watched him comply. Her whole body now shook with anticipation. It probably wouldn't fit. It certainly wouldn't fit. But she had to try.\n\n\"I'm not... um... far from finishing. Maybe we shouldn't do this.\" Vel considered the plan. His sister had said to make her want him. Keep her coming back for more. But she hadn't said anything about Vel making his own sibling. \"It isn't safe.\"\n\n\"I agree with you, Vel.\" Cassia climbed onto the bed and straddled him, aware that even now his eyes were on her breasts. She reached under her and took hold of his penis. It was still quite slick with her saliva. \"Your father and I do this when it's a dangerous time of month. We need no more children. You see?\" She settled back a little and then his beguiling heat spread from her butthole. And then the head of his penis spread her butthole. \"Oooooohhhhhhh. This was a bad idea. You're going to break me for sure.\" Her face contorted with pain, but she settled her weight down and... plop, the head went in.\n\nVel wanted to say something, but he was speechless. His mother wanted him up her butt, and he was slowly sinking in. He looked up from her wobbling tits to stare at the normally pretty face misshapen by grimace and wince. Finally, he found some words. \"We don't have to, Mother.\"\n\n\"Shh.\" She reached down and put a finger to his lips. Her nipples brushed against his chest. \"Just let me...\" By the gods, he was going to fit. She was going to take all of him. She had never wanted anything with such animal immediacy before. \"Oh... it's good. It's really... very... good. I...\" She hit bottom and squealed. \"Eeeeiiiiiieeeeee.\" Cassia spasmed and lights danced before her eyes. Her pleasure carried her away.\n\n\"Mother... Mother... Mother?\" Vel watched her as she leaned back and bounced on his cock. She wasn't responding to him. Her face looked beautiful again, with an expression that was half smile and half surprise.\n\nAfter a while, reality came back to Cassia. She was bouncing on Vel's lap, with her hands back on his thighs. The pleasures of the day before which had been such a moment of wonder for her, were now surpassed. This was a feeling she never wanted to end. But when she looked down into Vel's sweet face, she saw that they wouldn't go for much longer. He was about to release. \"Yes, Vel. Yes. Let it go... inside me... where it can... do no harm.\" When she'd entered his chamber a short while before, she would never have believed that soon she would take all of his tower up her tight ass. No, that wasn't right. She knew it wouldn't be tight for long. \"Go on... go on... Vel.\"\n\n\"Mother... I'm... uuuugggggghhhhhhhhhh.\" Vel bellowed and his mother screamed. It was very fortunate that the guards were no longer outside, because surely, they would have broken down the door in response to those primal sounds. Vel moved his hands to her hips and jammed her ass down on him again... and again... and again. He must have stuffed a small lake of cum deep into his mother's gut. When he was finished, he let go of her, and his weight pressed back into the bed. She fell forward and nuzzled her face and hair into his neck. \"Never... was there a mother... better than you.\" He circled his arms around her.\n\n\"Shh. Don't speak.\" Cassia's butt clenched and released at the fat intruder over and over. She had now experienced ecstasy that could only have been meant for the gods. She cursed Discordia under her breath. There was no going back from that feeling. If she had to be tied to anyone, she was at least grateful to Pax that her gentle son had been the one to show her this. He was still hard and his hips moved under her. Goodness, they were going to do it again."
    ],
    "authorname": "rawlyrawls",
    "tags": [
        "mom",
        "mother",
        "son",
        "cousin",
        "sister",
        "brother",
        "fantasy",
        "magic"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-wicked-tower-pt-12"
}