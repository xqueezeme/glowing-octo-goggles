{
    "title": "The Mountain Ch. 04",
    "pages": [
        "Thanks again for all your comments and encouragement. Please let me know what you think so I can keep improving the story! I'm not certain yet, but I'm thinking this story will be ten chapters with a possible sequel beyond that if I like where it ends up.\n\n--\n\nLucy tried to keep track of the days. It was difficult without windows. She counted the number of times she slept, but she knew that sometimes she got confused and lost track. The lights never went out and she wondered if that was the way they were designed, or if her captor was using them to add to her disorientation. By her best estimate, she had been inside the mountain for a week.\n\nShe didn't trust her calculations very much. It seemed like it had to have been longer.\n\nPersephone didn't come every day, but she came often enough and her hatred of Lucy was consistent. Food was delivered regularly, whether Persephone was there or not, and more of it than Lucy was used to. The persistent, background hum of permanent hunger that she had felt on the ground was replaced with the feeling of always being cold. After a few days, Warder gave her a pair of brown boots and socks that almost fit.\n\nIt helped, but she was still freezing.\n\nShe missed the jacket that Grace had given her. It was never returned. She was grateful, at least, that he usually allowed her to wear clothes despite his earlier threat. She suspected it was because she constantly shivered, although she couldn't quite credit him with caring. Some nights, he stripped her of her clothes without warning before bundling her into the bed. She was warm enough with his body next to hers, but she felt helpless and angry to be forced to endure it. He spoke to her very little and when she asked questions now, he usually ignored them.\n\nOnce, watching him work at his desk, she had stood up and screamed at him. \"I can't breathe in here! And I am going to freeze to death!\"\n\nHe blinked at her, clearly annoyed at being disturbed, and then he had picked her up and placed her on his lap, going back to work as if she didn't exist. He was warm and being so close to him, she could hear his own, easy breaths and the weight in her chest did let up a little. She hated him for it and held herself still, refusing to touch him more than was necessary.\n\nOn the eighth or ninth day, Persephone showed up again. After a few hours of careless housework, she tied a blindfold around Lucy's eyes and led her towards the bath. Lucy didn't really need to bathe so often--she spent most of her time sitting still. The stone walls did give off a kind of odd dust that collected in her hair and made her skin feel strange. But it didn't smell. Still, she was grateful for the distraction and she wondered if this was why the luxury was permitted. Again, she reasoned that Warder was trying to soothe her, to keep her calm and tended, like a pet. She questioned again the wisdom of staying small and meek. But even if she were to rebel, what would it accomplish? She had learned the path to the room where she bathed, but she still had no sense of the rest of the mountain.\n\nShe had never seen an exit, even if there must be one somewhere.\n\nShe was not stronger than Warder or even Persephone.\n\nShe had no plan.\n\nFeeling dejected, Lucy filled the tub with scalding hot water, aware of Persephone humming to herself in the other room. As she sank into the tub, she ran back over her calculations. Was it nine days? Maybe it had been ten. She did not know how long she had slept the first night. If it had even been a night. And--\n\nShe stopped. A horrible thought had just occurred to her. Her focus since being captured had been to stay calm and to keep from betraying the real reason she had been on the mountain. She had been so focused on this secret that she had forgotten that she had others.\n\nIf it had been ten days already, she had a week at most before she became sick.\n\nHer recurring sickness had started when she was twelve. She had woken up in the middle of the night, burning hot and screaming. Her mother had struggled to calm or to cool her, eventually calling for Miles' father, who acted as the doctor for the islanders. He had diagnosed her with a virus and promised the fever would wane in a day or so. It had lasted for three, never seeming to ebb and flow as fevers were supposed to. She was so hot for so long that she should have died, but she didn't. At the end of the third day, crying to her mother, she wished that she would.\n\nThen, as quickly as it had came, the sickness had receded. She was in low spirits for several days after, reluctant to leave the house or even her room. Things returned to normal and she tried not to think about the nightmares and the pain of the raging fever. Then, two months later, it had happened again in the same way. And again nine weeks after that.\n\nThe third time, her mother consulted with Gino as well as with the doctor. Gino had no medical training, but he was a talented historian. He considered himself a memory-keeper for the people trapped on the island, cataloguing stories of the world they could no longer access. He told stories about what electricity--television, lights, washing machines--had been like. He named Kings and Presidents and celebrated an endless stream of holidays. Lucy's mother asked him if he had heard of a sickness like this, a relentless fever that came and went, torturing the sufferer but receding with no apparent loss of function.\n\n\"He says it's nothing he's heard of,\" said her mother. \"Probably nothing to worry about. It could be a consequence of life on the island. Maybe it won't come back.\"\n\nThe fever had broken by then, but Lucy was still in bed. That afternoon, Gino came to see her. Her mother left to bring them both something to drink and Gino pulled up a chair and sat next to her bed, his long face etched with worry.\n\n\"Your mother told me what's been happening,\" he said. \"I'm sorry, Lucy.\"\n\n\"Doctor Linn said it might not come back this time. Maybe it's a virus or an allergy. He said I should start taking longer walks every day.\"\n\nGino darted a glance towards the door and then scooted his chair closer. \"It will come back, Lucy,\" he said quietly. \"I'm sorry, but it will. You have to endure it. In fact, you have to learn to hide it, even if it means pretending you're not in pain or locking yourself away. You can't tell anyone it's happening. Tell Dr. Linn that you're well.\"\n\n\"What? Why?\" Lucy had asked. His tone was serious and sad. He looked almost wild, clutching at her hand where it lay limp against the blanket.\n\n\"I have heard of this before,\" he told her. \"People were getting sick like you just before they took the island. It's survivable, but it recurs. I don't know for how long because everyone that got sick here is gone now.\"\n\n\"Gone, like, they left?\" Lucy asked.\n\n\"They were all among the taken,\" he said, referring to the islanders who had disappeared when the mountain dwellers first took over the island. \"Not everyone knows that detail. We kept it quiet. The governor at the time didn't want to incite panic over every ache or fever.\"\n\n\"What does it mean? Why is it happening? Am I going to die? Are they going to take me, too?\" The latter seemed worse than death.\n\nGino was always so cheerful and hopeful. He stared at her now with pity. His disquiet was more frightening than what he was saying.\n\n\"I think you'll be all right,\" he said unconvincingly. \"But you've got to hide it. And you should keep away from the mountain and anyone who sympathizes with them.\"\n\nDespite the general hatred for the mountain people, there were some who urged an alliance. The island leaders maintained that this wasn't truly possible--that they were virtual prisoners and the mountain dwellers had never shown any inclination to change their ways.\n\nLucy had been sufficiently frightened. The next time she fell ill, she tried to hide it from her mother. In the end, she thought her mother knew, but chose to pretend. Over time, she learned to manage the pain so that she could go out into the town even when she was trapped in the worst of it.\n\nHiding in plain sight.\n\nInside the mountain, there was no hope of pretending. She was already weak from fear and lack of sunlight and air. Warder knew her every move. He saw what she ate, when and how she slept. He touched her often, sometimes casually and other times thoroughly, as if he were learning each bit of her skin by memory. He would notice when her body grew hot. He would hear her call out the nightmares that she was used to muffling into her pillow.\n\nShe could not be inside the mountain when the sickness gripped her. At her worst estimate, that meant she had five days to plan and execute an escape. Five days, and currently she was lying exposed in the bath, with Persephone guarding the door and no idea where she was.\n\nHer predicament thus far had dulled to the point where she was agitated but mostly numb. This new revelation awakened a sharper kind of panic. With it came clarity. She had skills that Warder and his people didn't know about. This was a small advantage. And her behavior thus far had been mostly intentional. They did not suspect her to run. Even Warder had grown more careless. Where he used to swiftly lock the door, now he sometimes forgot for a time if he was in the room with her.\n\nShe would find a way to escape. She had to. Before her body betrayed her.\n\n#\n\nPersephone returned her to Warder's rooms and left her alone. Grateful for a moment to regroup, Lucy decided to start in one corner of the room and work her way through the entire place. There had to be something here that would help her. She rifled through the desk again, wishing desperately that she could read the warrior's strange language. She ran her fingers along the walls, lifted a chair and reached as far as she could into the dent at the top where the lights were recessed.\n\nUnder the bed, she found several pairs of socks that Persephone had missed and tossed them into the laundry bag hung over the door with exasperation. She stripped the bed, ran her fingers along the seams of the mattress, and wondered if she was losing touch with reality. What did she expect to find? A key and a map back to her side of the island? A gun with a set of instructions?\n\nIn the living area, she eyed the metal cabinet above her head. She had already examined it, standing on a chair, and found it locked. In the interest of being thorough, she dragged the chair over to it again and stood, tugging half-heartedly at the rusty metal door handle. It came open so easily that she almost lost her balance and fell.\n\nShe leaned back to allow the doors to swing wide and peered inside. There was a large, flat piece of metal inside and a tangle of thick, black metal string. After staring at everything for a while, it was as if the strange objects came into focus and she could really see them.\n\nThe black things were wires.\n\nElectricity.\n\nShe still hadn't figured out how it was that the inside of the mountain had electricity while the islanders did not. Many had long suspected that the warrior's interference with the electric system was more active than passive--the system had not simply been cut, but was actively being suppressed. So far, the most tangible evidence of the mountain people's electric system had been the lights shining along the top of every wall. Now, this box.\n\nWishing she had paid closer attention to Sheera's father and his obsessive lectures on technology, she considered it. Her training had been fairly comprehensive, but entirely theoretical. She had examined non-working appliances, but the real thing was about as familiar to her as a fairy tale.\n\nShe felt around the edges of the box for buttons. Almost certainly it was a \"screen\" but she wasn't sure what kind. She pressed each of the buttons in turn, but nothing happened. Hoping to get a better look at the entire system, fiddling with the cords. She tried the buttons again and suddenly, the screen flashed to life, giving off a cheerful chirping sound. Words scrolled along the screen in red.\n\nLevel Three. Level Three until further notice.\n\nThe same words as the voice she heard that seemed to come from nowhere. She realized then that it must be--what was the word--a microphone of some kind?\n\nShe tried more buttons. Twice, she turned the thing off by accident. Finally, the \"threat\" message disappeared and an actual moving video came on screen.\n\nA woman sat at a desk, talking into the camera. She was speaking in the strange warrior-language that Warder and Persephone used among themselves. There was a screen behind her and she gestured to it occasionally. She was teaching.\n\nLucy was so absorbed that she didn't hear Warder until he came up behind her.\n\n\"If you stand that close to the television, you'll ruin your eyes,\" he said.\n\nShe startled and turned to face him, wobbling as she almost upset the chair. \"My eyes?\"\n\nWarder steadied the chair.\n\n\"Something my mother used to say,\" he told her. \"How did you get it working?\"\n\nIt was odd to think of Warder having something so normal as a mother.\n\n\"It just...worked,\" said Lucy.\n\n\"Interesting,\" Warder said. He reached around her and touched one of the wires. \"It wasn't before.\" He eyed her carefully.\n\n\"I guess I got lucky.\"\n\nShe shouldn't have let him know that she had any familiarity with electronics. She shrugged and went to climb down from the chair. He caught her and lifted her down, setting her on the floor a few feet from the television. He turned it off and shut the cabinet, locking it.\n\n\"What did you see?\" he asked.\n\n\"Just that woman,\" she said, referring to the program that had been on when he came in.\n\n\"And the information screen when it turned on?\" he prompted.\n\nShe nodded. \"What do the 'threat levels' mean?\"\n\n\"You don't need to know,\" he said.\n\n\"I want to know.\"\n\nHe eyed her coolly. \"If you ever hear 'Level Seven,' the doors will unlock. Run. Fast. Follow the crowds. That's all you need to know.\"\n\nHe put the chair back where it belonged and sat at his desk. Disappointed that the television hadn't yielded anything more useful, she watched him, evaluating her next move.\n\n\"How long are you going to keep me here?\" she asked.\n\nHe ignored her.\n\n\"Why are you keeping me here?\" she persisted. \"For the crime of picking berries? We didn't hurt anyone. If you hadn't happened to be up there, you never would have known we were there.\"\n\n\"I am not in the mood to discuss it,\" he said.\n\nShe took a deep breath.\n\nThe status quo is not working. You are still as trapped as you were when you arrived. Try something else.\n\n\"I am not in the mood to be locked up here anymore with no answers and no one but you and the charming Persephone for company.\"\n\nFinally, he looked up from his work. \"You're not enjoying my company?\" He sounded bored, but she noticed the way his hand flexed against the edge of the desk.\n\n\"No,\" she said boldly. \"Let me leave. I won't ever come back. I won't tell anyone what I've seen--which, is virtually nothing because I've been locked up. You don't even want me here,\" she said. \"Let me go.\"\n\n\"If I didn't want you here, you'd be gone,\" he said. \"Go to sleep. You're obviously not feeling yourself.\"\n\nShe was exactly herself, but in a few days, when her sickness took hold, she wouldn't be.\n\n\"I can't breathe in here,\" she said, ignoring his instruction. \"I don't know how you survive it. Normal people need sun and fresh air. I live next to the ocean. I swim almost every day. I can hear the waves from my bed.\"\n\n\"You used to live there,\" he said. \"Seek to content yourself with your new situation.\"\n\n\"Am I to be locked up in this room forever? Leaving only to bathe?\"\n\n\"Not forever,\" he said. \"Things will change. But not, perhaps, as you would like them to.\"\n\nHe stood and walked over to her, reached out to place a hand on each of her shoulders. She knew that he meant to massage her, soothe her. She jerked away.\n\n\"No!\" she said. \"I can't stand it anymore. It's dark in here. And airless. And ugly. I want to go outside.\"\n\nHe considered her. \"You are not permitted to go outside,\" he said. \"Nor will you often be permitted to act this way.\"\n\n\"Are you going to hit me again?\"\n\n\"I have decided to allow you some latitude as you are unfamiliar with our ways.\"\n\n\"The more I learn about 'your ways,' the less I like them.\"\n\n\"I feel challenged to change your perspective,\" he said. He wrapped his arms around her without warning, holding her close. Her arms were trapped between them, but she tried to wriggle away by rocking her body from side to side. He pulled her closer, rubbing his hands up and down her arms. When she finally went still, he let her go abruptly and she stumbled back.\n\n\"My perspective is the same,\" she said. \"I don't like it when you touch me.\"\n\nHe ignored her and retrieved his jacket from the back of his chair. She was already wearing the jacket he had given her, but he replaced it with the similar one he had worn all day. The jacket smelled of him. Not unpleasant, but strong.\n\n\"What are you doing?\" she asked.\n\n\"Preparing for you to leave the room,\" he said. \"Where are your boots?\"\n\nHurriedly, she retrieved them, stuffing her feet inside without undoing the laces. \"Am I allowed to see where we're going?\" she asked.\n\n\"No,\" he said. He swept her up into his arms and turned her head into his chest. \"Don't look or we'll go back,\" he cautioned.\n\nPraying that this strange outing would lead her to a means of escape, she obeyed, squeezing her eyes shut.\n\n#\n\nFor the first time, she was aware of passing many people in the strange halls. A few times, Warder stopped to talk, speaking only in the strange warrior language. Lucy kept her eyes shut, wishing that doing so could make her disappear. She felt useless trapped with these people, dragged and carried around, like she was practically non-sentient.\n\nWhen Warder set her down, she waited before opening her eyes, trying to get her bearings. When she finally did open them, she wondered if she was asleep again. The room around her seemed like something from a dream.\n\nThere were stars.\n\nMore importantly, there was air. As her eyes adjusted to the light, she realized that they were still enclosed. The walls were stone--a giant cavern dug into the mountain. And the stars were flecks of pyrite and mica in the walls, glittering in the light of the large fixture set high up in the ceiling. The floor looked different than it had anywhere else inside. Lucy realized that in addition to being strewn with the same fancy rugs as the room she visited at the top of the mountain, the stone floors were painted. The design was black and white squares. Under the stars, the white glowed and the black almost disappeared, making the floor seem like as if it were glittering, too.\n\nTaken in, Lucy walked unsteadily into the center of the room. The darkness seemed to swallow her up and she sat down, craning her head back to look up. She felt when Warder came to stand next to her, keenly aware of his towering presence in the near-dark.\n\n\"Where are we?\" she asked.\n\n\"The Great Hall. It's our gathering place. Binding ceremonies, funerals. Everything that comes in between.\"\n\n\"We have a place like that,\" she said, thinking of the rec room in city hall. She swore that some of the sparkling stones were moving, streaking across the walls and ceilings, twinkling to an unheard tune. \"It's not nearly this beautiful, but you can hear the ocean.\"\n\nThey stood in silence and she was so used to being alone with him now that the silence felt almost comfortable.\n\nWhy did you bring me here?\" she asked, because being comfortable with their shared silence was decidedly uncomfortable.\n\n\"Always asking questions.\"\n\nShe shrugged.\n\n\"This is more than simply a gathering place,\" he said. \"The high ceilings and the light will ease your sense of confinement. In the early days, we all needed this place to keep from going insane.\"",
        "This was not what Lucy had expected. \"I thought this was how your people lived.\"\n\n\"Only here,\" said Warder. \"I remember living under the sky.\"\n\nThis was more than anyone on the island knew about the warriors. In the mythology of the island, they had few weaknesses. To think of the hard, angry creatures in the mountain as ever being claustrophobic was difficult. Warder especially seemed to command any space he was in.\n\n\"Why do you live here, then? Why did you come? Why do you stay?\"\n\nThey were dangerous questions. If the warriors left the mountain, where would they go? Would they take over the island as everyone always feared? Or, if the warriors did leave, would she be forced to go with them as their captive?\n\nWarder didn't answer.\n\n\"Why are you keeping me here?\"\n\n\"You trespassed on the mountain,\" said Warder. \"You defied the treaty. You were caught.\"\n\n\"You'll get tired of me,\" said Lucy, trying to make a joke. \"You should let me go before I become a problem. I was thinking today about rearranging the furniture.\"\n\n\"You don't like the furniture?\"\n\n\"I was joking,\" said Lucy. \"Mostly.\"\n\n\"You may be allowed to leave one day. To visit your family,\" he added. \"Not to stay.\"\n\n\"Why not now?\"\n\n\"There are things that have to happen first.\"\n\n\"Couldn't they happen faster?\" The thought of seeing her family made her ache. Beyond that, if she could convince him to let her visit the town, she could try to find some way to salvage her mission. Even if she was forced to return, at least the rest of them would have a chance.\n\n\"There is one way,\" said Warder. \"I do not expect you to welcome it.\"\n\n\"What is it?\"\n\nHe crossed the space between them in one step. \"Kiss me.\"\n\n\"What?\"\n\n\"I am beginning to wonder if you are hard of hearing.\"\n\n\"You want me to sleep with you,\" she said, backing several steps away from him in the dark room. \"I won't. And if you force me, I'll kill you.\"\n\n\"You will learn that I always say exactly what I mean,\" said Warder. \"I asked you to kiss me. And if I wanted to force myself on you, you wouldn't be able to stop me. I won't bed you until you ask me. Perhaps, until you beg.\"\n\n\"You're crazy,\" said Lucy. \"That will be never.\"\n\n\"You asked what you could do to hasten the opportunity to visit your family,\" he said. \"I've told you. I will not make you do it.\"\n\nEverything between them had been coerced. He chose what she wore and where she slept. He ordered her to eat breakfast. To bathe. To speak or be silent. It was infuriating and terrifying. It was also easier than this, standing in front of him and being forced to choose what came next.\n\n\"You're disgusting,\" she said.\n\n\"Do you think so?\"\n\nNormally, she wouldn't. If he weren't her captor, he would take her breath away. Maybe--maybe he did a little, anyways. But the thought of touching him in such an intimate way was terrifying.\n\n\"You would have to lean down,\" she said, leaving his question unanswered. \"You're too tall.\"\n\n\"Encourage me,\" he said.\n\nThe thought made her feel dizzy. Despite his caresses and intrusions, she had never touched him willingly. But she was determined not to let him know that she was afraid.\n\nShe hesitated, then placed one hand on his arm. She used it to balance and stand on tiptoe until she could reach his lips. Quickly, she brushed them with her own, making it clear that she was uninterested and unwilling.\n\nHe stood completely still. She thought he looked amused.\n\n\"You made it difficult.\"\n\n\"Maybe it would be easier if you closed your eyes.\"\n\n\"You want me to do it again?\"\n\n\"Not if you're going to do it the same way.\"\n\nHe was making her angry. She shouldn't care what he thought. She shouldn't indulge this game. Probably, he would never let her leave the mountain. She might never see her family again.\n\nBut if all he asked to hurry her reunion with her family and friends was a kiss...\n\nShe didn't want him to see that she was afraid. She leaned in again, grabbing hold of both of his arms. She pressed her lips to his, hard. He was immovable. She was touching him, kissing him, and she had the sense that he was ignoring her the same way he had been when she was shouting in his room. Determined to make him react, she darted her tongue against his lips. She stopped holding him and leaned against him instead, forcing him to steady her.\n\nWith a low growl, he responded. His arms went around her, stealing her breath. He raised one hand to her hair and threaded his fingers through it. Soon, she wasn't standing on her own accord at all. He was holding her so tightly her feet left the ground. She tried to pull away a moment too late to salvage her pride. He was the first to let go, and it made her want to die.\n\nHe pushed her away and turned his back. She could hear her own heavy breathing echoing in the great room. Embarrassed, she tried to steady herself. She closed her eyes and pretended that the pounding in her ears and chest was the calming sound of the ocean breaking in the distance. She breathed deeply and pretended she was outdoors, under real stars.\n\n\"You are very good at disappearing,\" he said. \"I can feel it when you go somewhere else.\"\n\n\"I'm still here,\" she said, keeping her eyes closed. \"Believe me.\"\n\n#\n\nHe went back to ignoring her. She went back to plotting an escape. Every time she was alone in the room, she tried to pick the lock. She lay on the bed and tried to recall each turn in the paths from Warder's room to the Great Hall and the room in the top of the mountain where she bathed. Eventually, there would have to be an opportunity. She thought that Persephone's visits might be her best chance. Persephone was careless and she didn't like Lucy. If she ran--fast--Persephone might not even follow her. She might be glad to see her gone.\n\nBy her most conservative estimate, she only had five days before she got sick. She could not allow it to happen inside the mountain.\n\nShe was colder than usual and she went back to Warder's dresser and retrieved an extra shirt. She would risk his anger later for not asking. She started to shut the drawer when annoyance at Persephone overtook her. The shirts were still tangled in a jumble. In one motion, she yanked the entire drawer out and dumped it upside down on the end of the bed. She began to fold, doing up buttons and smoothing each folded shirt into a neat packet.\n\nAs she worked, she didn't feel as cold. She shrugged off the extra shirt and began to fold that, too. When that was done, she retrieved the items squirreled away under the bed. Most of them, she tossed into the basket by the door waiting for Persephone.\n\nWhen she had folded all the clothes in the drawers, she started on Warder's desk, reasoning that he couldn't be angry because they both knew she couldn't read his writing. She tossed handfuls of empty pens and stubby pencils into the bathroom wastebasket. She used a cloth from the kitchen to wipe dust off the surface and placed the pens that were still working in the top desk drawer.\n\nStill not satisfied, she dumped out everything she had just organized in the drawer and began dusting inside that, too.\n\nThe cloth caught on something and she ran her hands along the inside of the door, thinking that there must be a splinter in the wood. Instead, she felt a nearly-invisible seam.\n\nTesting, she knocked against the bottom of the drawer.\n\nThere was a hollow compartment.\n\nGlancing guiltily towards the door, Lucy felt around the edges of the false bottom, searching for a way in. She managed to press her nail into the seam and slowly, reluctantly, the false bottom lifted away.\n\nUnderneath, she found yet another notebook. She didn't recognize the writing any more than she usually did, but she recognized the picture that fell out of the front cover. It was a picture of her and her parents, taken by Sheera with one of her father's refurbished film cameras.\n\nThe islanders had no way of replenishing their stores of film and the chemicals needed for developing it. The few photographs that families had were precious. This one--the only one of its kind--belonged in a frame in her parent's living room.\n\nHer stomach dropped. How had Warder obtained it? What if her parents--\n\nBut she couldn't allow herself to entertain the thought. Warder had said that one day she might be allowed to see her family again. Despite everything, he didn't seem to feel the need to lie.\n\nShe felt around in the drawer and pulled out a thin leather pouch that she didn't recognize. She set the notebook down on the table, reluctantly replacing the picture so that Warder wouldn't know it had been found. Then, she emptied the contents of the pouch onto the table.\n\nInside were the disconnected pieces of the antenna that she and Sheera had carried on to the mountain.\n\nMore questions swirled through Lucy's head. Did Warder know what it was? How long had he had it? This whole time, thinking that she might be able to somehow find the antenna where she had hidden it among the rocks and complete her mission had been the small ray of hope keeping Lucy somewhat sane. Perhaps it had always been in Warder's possession. Perhaps there had never been any hope at all.\n\nLucy allowed herself a few moments of self pity. Then, she reconsidered. Maybe Warder knew what the antenna was for. Maybe he didn't. But he didn't know that Lucy had found it. If she could find a way to hide it, she might be able to complete her mission after all, and Warder had just made it easier for her.\n\nShe examined the pencils and pens that she had already tossed into the wastebasket and chose several that were longer than the rest. Carefully, she packaged them into the leather pouch, trying to arrange them so that they had the same look and weight as the metal pieces of the antenna. Then, she picked up the jacket she usually wore from the bench by the door and started working at the stitching on the inside, trying to create a hole large enough to slip the pieces inside.\n\nShe was nearly done when the metal door gave its usual groan as someone pushed it open. She threw on the jacket and scampered across the room back to Warder's desk, shutting the drawer just as Persephone entered.\n\nHer eyes scanned the room and landed on Lucy, standing next to Warder's desk.\n\n\"What are you doing?\" she asked.\n\n\"Cleaning,\" said Lucy. Thank god that was what she had been doing before, because she couldn't come up with anything more believable. There wasn't much to do in the room that was essentially her prison.\n\n\"Cleaning?\" echoed Persephone. She set down her basket and shut the door behind her. \"I'm here to clean.\"\n\nLucy shrugged and backed away from the desk.\n\n\"He doesn't need you,\" said Persephone.\n\nLucy shrugged again. Of course, Warder didn't need her. But he wouldn't let her go, either. Why was that? Justice? Revenge?\n\nShe turned away from Persephone and examined the shelves on the wall, noting a thin layer of the odd dust that permeated the air inside the mountain. Probably, she would die from breathing it in.\n\n\"Do you have something to dust with?\" she asked, resisting the urge to pat the side of her jacket and check her handiwork. She hoped that her voice didn't sound as breathless as she felt.\n\n\"Get out of my way,\" said Persephone in answer, shouldering past Lucy and dropping a bag of supplies on to Warder's desk.\n\n\"You messed it up,\" said Lucy. The bag had set a neat pile of notebooks askew.\n\n\"Leave it alone!\" snarled Persephone, pushing Lucy as she tried to move towards the desk.\n\nThe violent shove made Lucy dizzy and she came to her senses, determined to get out of Persephone's way. She would lie down on the bed and pretend to nap, giving herself time to reason out the next step of her plan.\n\nExcept, the space between the desk and the bed seemed suddenly massive, more of a journey than a trip to the summit of the mountain.\n\nIt was too hot in the coat, but she refused to take it off. She took a step and stumbled, grabbing for the desk chair.\n\n\"What are you doing?\" said Persephone. \"Going through his desk?\"\n\n\"No,\" said Lucy. \"I'm not doing anything.\"\n\nHer own voice sounded like it was underwater.\n\nHow was it possible to dislike someone as much as she disliked Persephone? She had only known her for a few days. Persephone's obvious hatred hadn't bothered her at first. Now, it dragged at her every nerve. She hated Persephone. She hated her rudeness and her sneers and her insults. Persephone wasn't better than her. She wasn't trapped like Lucy was. She was petty and mean and Lucy wanted to hurt her.\n\nShe tried to change direction, heading for Persephone instead of the bed. She reached out her arms, noting, as she did, that they felt strange. Heavy. When she reached Persephone, she intended to hit her, knock her over and steal the key to the room and run away. Away from Persephone, definitely away from Warder. Back to the island and her real life. Maybe she'd go further. Do what no one else had done and find a way to leave the island, leave all of this behind her.\n\nShe believed in that moment that she could do it. She was that powerful. She had reclaimed some hope of completing her mission, and it had rekindled her hope of escape, too.\n\nBut somehow her lunge turned into a stumble and she fell at Persephone's feet with a low moan.\n\n\"What's wrong with you?\" asked Persephone.\n\nHot, Lucy thought. I'm too hot. Why is it so hot--\n\nThe truth hit her like a fist to the gut.\n\n\"Sick.\"\n\n\"What?\"\n\n\"I'm--I'm sick.\"\n\nShe shouldn't tell Persephone that, she realized. She needed to hide it like she always did. The way she had learned to do, to keep herself safe. But the sickness felt so much worse than it ever had before. It had never come on this strong. She hadn't even seen it coming. She willed her legs to move, begged her head to stop spinning. But despite her best efforts, all she could do was curl up at Persephone's feet, tears gathering in her eyes.\n\nPersephone knelt next to her. She pressed the back of her hand to Lucy's forehead and then the back of her neck. Her hands were cool and Lucy tried not to lean into them and beg for relief. \"Oh god,\" said Persephone. \"You're burning up.\"\n\n\"It's okay--\" said Lucy. \"I just need some--some water? I just need to lie down.\"\n\n\"Come on,\" Persephone's voice was kinder than it had ever been, soft and cajoling. \"We have an infirmary. I'll take you to the infirmary and everything will be okay.\"\n\nThis was what Lucy should want. It was a chance to complete her mission. A chance to escape. But the thought of leaving the room--Warder's room--filled her with an unexpected and all-consuming kind of panic.\n\n\"No,\" she said. She attempted to curl up into a tiny ball, but even that was too much effort. She moaned again and clutched her side.\n\nWhy is this happening? It's too soon.\n\nPersephone gave up on trying to get Lucy to walk of her own accord and dragged her to her feet, supporting her body against her side and carrying her towards the door. \"They'll be able to help you in the infirmary. Come on.\"\n\nPersephone leaned Lucy against the wall and unlocked the metal door. Lucy wanted to protest at being dragged around, but the stone wall felt blissfully cool against her cheek. Once the door was unlocked, Persephone started pulling at her again. \"Come on. Hurry up.\"\n\n\"No.\"\n\nWhy do I keep saying that?\n\nBecause it felt right to be in this room. Safe. Had it always felt that way?\n\n\"Get up!\" Persephone's voice lost its cajoling tone and she grasped Lucy's arm, dragging her to her feet. Lucy tried to protest, but Persephone was too strong. She stumbled along beside her as Persephone marched determinedly towards the door. Once they were out in the hall, Persephone leaned Lucy up against the stone and fumbled with the lock.\n\n\"I don't want to go to the infirmary,\" moaned Lucy.\n\n\"Shh,\" said Persephone. \"You'll feel better.\"\n\n\"No,\" said Lucy. \"I'm going to die. And for some reason, I want to die here. So just go away.\" She pushed at Persephone feebly, hating herself. So many years of hiding. So many years of pretending everything was okay, and here, when it truly counted, she fell to pieces.\n\nAlways, the sickness made her feel like she wanted to die. But she hadn't acted this way since she was a child. Once, the town council had held a kind of \"prom\" for the children, a fancy dance for everyone of school age. The sickness had come on the day before and Lucy had attended the dance anyways, gritting her teeth and laughing and smiling and moving along with everyone else. When she threw up at the end of the night, Sheera thought it was because she'd been sneaking the spiked punch.\n\nShe felt Persephone's arm go around her shoulders and the woman began dragging her down the hall, ignoring her pleas. Lucy's nerves felt like they were on fire. She moaned again and tried to swat Persephone away, leading them both to fall to the floor of the hallway in a tangle of limbs.\n\nOne moment, Persephone's hands were tangling in her own, trying to drag her back to her feet. The next, Persephone was gone and Warder was there, his huge body blocking out the light.\n\n\"Persephone?\" she heard him say. \"What the fuck is going on?\"\n\n\"She must have eaten something weird. I'm taking her to the infirmary--\"\n\nWarder slapped Persephone. The sound echoed in the hallway and it was Lucy who gasped, still lying prone on the floor.\n\n\"I told you not to interfere when this happened. To come for me,\" he said.\n\nPersephone clutched Warder's arm. \"Don't do this,\" she said. \"You're wrong. You're making a big mistake. Please, Warder. Please--\"\n\n\"Get out of my sight.\"\n\n\"Warder,\" Persephone cried brokenly. \"You don't want this. You're not thinking straight. She's weak. She's--\"\n\n\"Shut up.\" Warder cut her off, his voice terrifying. \"Go.\"\n\nLucy could hear Persephone crying as she ran away, her steps receding through corridors she still had no hope of navigating herself. She blinked up at Warder and he lowered himself to the floor, kneeling next to her. He brushed her hair off her face and despite herself, she leaned into his hand. When he touched her, she didn't hurt so badly.\n\n\"Little one,\" he said. \"I came as quickly as I could.\"\n\n\"I'm fine,\" she managed.\n\nCarefully, almost tenderly, Warder gathered her into his arms, carrying her back into the room that was her prison. He smelled so good. He was so warm. And strong.\n\nHe was beautiful.\n\nShe didn't like to think about it, how beautiful he was. But now, it seemed like the only thing that mattered in the world.\n\nHe set her gently on the bed, propping her up against the wall and then sat down next to her. Leaning towards her, he lifted her hair off her neck, combing away the tangles. He started to unbutton her shirt and she moved a hand to stop him, but let it fall away before they could touch.\n\nIt was so hot.\n\nWarder leaned closer, his eyes searching hers. Her gaze fell to her lips and she remembered kissing him under the stars. Pretending that it was a desire for freedom that led her to do it when really, she knew now, it was simply desire--strong and heady and consuming--for him.\n\n\"What do you want?\" Warder asked her. \"What do you feel?\"\n\nShe leaned into him, turned her head and kissed his neck, tracing a slow trail towards his lips. When her lips touched his, he reached for her and her small hands went to his shirt, tugging and tangling in the fabric. He helped her to undress him and she pressed her hands to his skin, searching every inch of him, wondering what it was that made him irresistible.\n\n\"What is this?\" she breathed.\n\n\"Real,\" said Warder. \"Everything.\"\n\n#\n\nShe couldn't find enough ways to touch him.\n\nShe trailed her fingers through his hair, down his chest.\n\nHow had they lived together for so many days and she had never touched him? His body was so strong, unfamiliar and infinitely interesting. He encouraged her, deftly undressing her as she explored him. When she hesitated, he guided her hand to the hardness between his legs. She looked at him while she touched him, smiled when her tentative caress caused him to take a sudden, sharp breath.",
        "\"Wait,\" he said, catching her hands. \"My turn.\"\n\nHe captured her wrists in one hand and used the other to explore. For a moment, the haze lifted and she was herself again. She remembered her first humiliating day inside the mountain, the way he had undressed her and probed her.\n\n\"Wait,\" she begged, trying to catch her breath.\n\nTo her surprise, his hand stilled. \"Do you want me to stop?\" he asked, his voice almost harsh.\n\n\"I--\"\n\n\"Lucy,\" he said. He lifted her chin with his hand, forcing her to look at him. \"Find the courage to tell me now if you want me to stop. I will if you ask me. But I won't ask again.\"\n\nA choice. Like the kiss. But somehow, she knew it wasn't real. She didn't have the ability to push him away. Deep down, in a part of herself she could barely feel, Lucy was blindingly angry at him for pretending that she had any choice at all. But the anger was hidden under a million more emotions, and any one of them was easier to grasp.\n\n\"I want you,\" Lucy said, almost crying. \"I don't know why.\"\n\nWarder groaned and rolled her over onto the bed, capturing her hands again and probing at her pussy with one huge finger. Embarrassed, she tried to close her legs and he growled at her. \"No,\" and pushed them open. He teased her clit, studying her reactions, changing the pressure as she jumped and shuddered beneath him.\n\nHe took his hand away suddenly and Lucy cried out in protest. But he tugged her roughly towards him and then he lowered his head, lapping at her soft bud with his tongue. Lucy nearly screamed at the sensation. She had never felt anything like it before. It was too much and she tried to move away, but he pressed a hand over her thighs, trapping her. She reached out and tugged at his arm, trying to get his attention, but he ignored her. She felt tears come to her eyes as the sensations went on and on. Then, slowly, her body relaxed into him and she didn't want him to stop anymore. She was wriggling beneath him, desperate for more.\n\nHe held one strong finger at her entrance again, probing gently. Then, without warning, he plunged the finger inside and then another, his tongue still moving at her clit. Lucy cried out as her body shattered into an orgasm that came in wave after wave of intense pleasure. Pleased, Warder gathered her against his chest, kissing her with the taste of her pussy on his lips while he waited for the sensations to quiet.\n\nInstinctively, she moved down his body, intending to take him in her mouth, to make him feel as she had felt. But he stopped her.\n\n\"I can't wait,\" he said. \"I need to be inside you.\"\n\nWait, she wanted to say. But the words wouldn't come. Instead, she urged him on, kneading his hips with her hands. \"Warder.\"\n\nShe had touched him there, but now as he rose over her, she saw his cock, erect, about to plunge into her body. It looked huge.\n\nWarder noticed her fearful gaze and he kissed her, forcing her to look away. At the same moment, he entered her in one, smooth stroke.\n\nLucy cried out against his lips. It hurt, but the feeling was secondary to a kind of fullness, a deep, aching fullness that radiated through her body. Warder began to move within her, and Lucy moaned as she struggled to accommodate his size. It hurt when he moved and she tried to tell him, tried to control him by holding his arms where they rested on either side of her head. He ignored her, moving faster, slamming into her so hard that she felt the bed shake beneath them.\n\nWarder didn't know when he stopped kissing her. He lost himself to the feeling of moving inside her. She was so small. So tight. Like velvet against his hard cock. And she had given herself to him. Perhaps, he had manufactured their closeness, forced her to be near him until estrous overtook her. But he had given her a chance to pull away and she had pulled him closer.\n\nHe knew that he should be gentle. She was a virgin. But the very thought urged him on. She was his and she would only ever be his. He pounded into her mercilessly, reveling in her mewls and shouts of pain and pleasure mingled so close together that she could barely tell the difference. When he was close to the edge, he took her lips again, forcing his tongue into her mouth as he let go, groaning in pleasure as his hot cum filled her. Hoping, praying that there was more yet to come.\n\nHe knew the moment that she felt his knot swelling within her. Watched her eyes go wide. She tried to buck him off, aware, somehow, of the significance of their joining even if she didn't really know what was happening. But it was impossible now.\n\nIt was done.\n\n\"Warder.\" She leaned against his chest for comfort, because who else would comfort her but her mate? \"What? What are you--\"\n\n\"Shh,\" he said, kissing the top of her head. \"It's all right. It's all right.\"\n\n\"But--\"\n\n\"This is how our men are made. Strong enough to claim you. It is my knot, swelling inside you, to bring us closer. To make it certain that I will breed on you. It is as it should be.\"\n\n\"It's not normal. It's too much. I--\"\n\nHe silenced her with a growl, thrusting against her as much as he could with his knot swelled between them. She bit back a scream and her head rolled back as another orgasm shattered through her, her body recognizing his claim even if her mind was, momentarily, determined to rebel.\n\n\"You will take it because I ask it of you. He growled as she came back to herself, unwilling in that moment to placate her.\n\nShe was his mate. He loved her. He would protect her. She would obey.\n\n#\n\nShe was afraid of him. Sore, inside and out. And she ached for him. She couldn't get close enough.\n\nWithin minutes of their first mating, he mounted her again and she moaned and writhed beneath him, urging him on. Coming briefly to her senses, she tried to leave the bed and he only caught her and forced her to the floor, taking her again from behind. As her knees scraped against the stone, she begged him, not knowing what she was asking for.\n\nAs the hours passed, the sickness faded, replaced by something else. An awareness of him. A need for him. A desire to have him touching her even if he forced himself on her. Even if it hurt.\n\n#\n\nShe felt him again. She was lying on her stomach, tangled in the sheets. The bed was hot--like bathwater on her skin. Her skin burned, something like fever coming in waves. His hands found her, and they were cool. She moaned at the feeling. Slowly, his body covered hers. The coolness fled and she felt the heat of him, heavy against her.\n\n\"Too hot,\" she whimpered. \"I'm burning up.\"\n\n\"Just once more,\" he said. He leaned in to nip her ear and she groaned. \"Before it's over.\"\n\n\"Over?\" she managed, confused.\n\n\"Please.\"\n\nIt was the only time he had asked her for anything, really. He had commanded, but he had never said \"please.\" So many times, she had begged him. First, to acknowledge her, to release her. Then, to be the thing that calmed the burning inside her, the only thing that could shatter the consuming sickness and make it alive, bright. So good.\n\nShe felt him enter her, pressing her body into the bed. He moved slowly and she was aware of every inch of him. He reached his arm under her and caressed her clit, and instantly she lit on fire. An orgasm racked through her body, and almost as soon as she screamed with the power of it, she felt the heat build again, curling in her chest and radiating out through her fingers and toes with the force of a firework.\n\nSatisfied that she had found her release, he picked up the pace, worried at once that he would break her small body beneath him and that she could never break. That he would never be able to see inside her, to know her as deeply as he wished.\n\n\"With me,\" he said, his voice low and hoarse. \"This time, come with me.\"\n\nThe found their release together. Lucy felt the warmth of his release in her belly. She felt his mouth at her neck and he bit her, locking his jaw. She felt no pain, only the heat and the perfect, consuming feeling of being so close to the body she craved. When the mark was finished, he was still not satisfied. He lifted her wrist and bit her half-moon scar, refusing to let go even as blood seeped sluggishly down her arm.\n\nIt was hot. So hot. But she had no desire to push him away. No ability to save herself. She felt him tending to her wounds as she drifted into a fitful sleep. There was no point. She felt certain that she had burned completely away. She was ash and all she could think of was being locked so close to him that she did not care to save herself. "
    ],
    "authorname": "MariLeigh",
    "tags": [
        "noncon",
        "reluctance",
        "mating",
        "breeding",
        "omegaverse",
        "first time",
        "alpha",
        "dominant",
        "forced",
        "first kiss"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-mountain-ch-04"
}