{
    "title": "Pool Boy Ch. 41",
    "pages": [
        "The Christmas festivities were over. The day hadn't gone anything like what we had thought. In the aftermath, Alexis and I sat on the sofa in our condo. My mind was still trying to wrap itself around my parents and their revelations. I avoided asking Alexis what she thought because I didn't want to put her on the spot. She had a different perspective than I.\n\nAlexis knew I was wrestling with things. She got up and moved into my lap and cuddled into me. I wrapped my arms around her. She stretched up and kissed me on the cheek. We both remained quiet. In spite of my mood, I couldn't ignore the view across the street in Fiona's condo. After Alexis had rebuffed Fi's request to come over, Fi had apparently decided to take care of matters on her own. She sat down in an over-stuffed chair and draped a leg over an arm. She pulled up her skirt and started masturbating with a small dildo. She was looking directly at us as she ran what was apparently a very small neon-pink plastic vibrating dildo across the entrance to her pussy from her clitoris to her anus.\n\nFi's chest began heaving up and down and her mouth dropped open. It was hard to be sure from the distance but I don't think she took her eyes off of us. I noticed that Alexis was watching Fi too and she joined in by pulling her skirt up to expose her naked sex and started fingering her already soaking wet pussy. Fi must have had a good enough view because she grinned and pulled her dildo up and pushed the tip into her mouth. She ran her tongue around the small, bulbous tip and touched it back to her clitoris as her chest heaved forward. She unbuttoned her shirt with her free hand and caressed her braless erect dark brown nipples.\n\nFi dragged the dildo up over her pubis to her stomach and then up to her nipples. She twirled the dildo around each one and then went back to her pussy. For several minutes we watched Fi grinding her hips around in her chair. When she stuck the bulbous head of the dildo into her anus she surged into an obvious orgasm. She gyrated everywhere in the chair. Her legs and arms straightened and then pulled back to her body. She had left the dildo in her anus. Her head tipped back on the chair and her mouth was open in what was probably a loud scream. \n\nFi's climax had a similar affect on Alexis. Her hips snapped forward and back as she sat in my lap. She kept finger-fucking her pussy until her orgasm had rolled through. She pulled her fingers out and stuck them in her mouth as she looked over at Fiona. Alexis' hip-pulses became random and she settled back into my lap. She ground her hips around to see if I was aroused. Incredibly, I wasn't. I thought, 'Fuck. I'm in a mood.' Alexis stretched up and kissed my lightly on the lips and whispered, \"Everything is going to be fine, Baby.\" I looked down at her and gave her a half-hearted smile. She kissed me again. \n\nAlexis waved over at Fi who returned the wave. \"Let's go to bed Baby. We have to get up early to drive back to campus.\" I nodded and lifted her and myself up and I carried her to the bedroom. We took a quick shower and slid under the sheets. \n\nI dropped into a dream of quick clips of Thia fucking Dad, Mom sucking my cock and me fucking her on the floor, Thia and me. It was very erotic and it all began looping in my dream. I woke with a start and came up on my elbows. Alexis was up on one elbow facing me. When she decided that I was awake she said, \"Baby, are you okay? You were moaning loudly. Your cock is harder than I've ever seen it. I felt her squeeze my cock. I looked at her trying to remember what I had been dreaming. It was disappearing quickly. Alexis leaned over and kissed me and said, \"Its okay. You were in a dream and what a dream it must have been. Holy shit. You're as hard as a steel rod.\"\n\nI fell back into my pillow and groaned with my arms across my forehead. I could feel the adrenaline dissipating. I became aware that I was breathing hard and I tried to consciously bring it into control with slow lung filling breathes and exhales through my nose. \n\nAlexis came over closer and rested her head on my shoulder looking at me in the illumination from the digital alarm clock on the nightstand. She had a concerned look on her face and I felt bad that I was putting her through this. I smiled at her and kissed her on the nose. She giggled. I pulled my arm off my forehead and draped it over Alexis shoulder and then down her spine. She trembled from my touch.\n\nAlexis still had my cock in her hand and occasionally squeezed it hard. She kissed me on the nipple and then dragged her thumb to the nerve bundle under my glans. She flicked her thumb on the spot and my cock grew even harder. Alexis mumbled, \"Unbelievable. I can't even get my fingers half way around it. Do you want me to take care of this?\"\n\nI was silent for a moment and then looked down at her and smiled. She grinned. Her ultra-white teeth were luminescent in the dim light. She slid down my body and pushed her lips up to the 'spot' and flicked her stiffened tongue on it. I groaned hard and she started jerking one hand up and down my shaft. The feeling of her hand and her tongue was amazing. \n\nI reached down and touched her face. She looked up to see why. I pulled on her shoulder indicating that I wanted her to come up to me. She held on tight to my cock but she pushed herself up on top of my body. She had to release my cock as I pulled her all the way up until her head was under my chin. My cock sprang up between her thighs and then slapped back on her ass before settling a few inches above. When my cock was hard, like it was then, it would settle a few inches above my stomach and bounce when I was lying on my back.\n\nAlexis was compressing my cock with her thighs. I whispered, \"Put it in.\" She didn't hesitate for a second. She reached back over her ass and found my bouncing cock and pushed herself up with her knees until she could guide my cock into her pussy. When she let her knees push back and my cock slid into her pussy she groaned, \"Oh fuck Baby. You're big.\"\n\nI put my hands on her butt-cheeks and pressed her down as I lifted my hips. We both groaned as she found bottom. Alexis started to lift her hips but I held them down. I flexed my cock manually and she groaned, \"Fuck. I don't know how you do that but, wow.\" She flexed her vaginal muscles and it was my turn to groan.\n\nI whispered, \"Just like that. I expand and you contract. The same muscles I guess.\" I flexed again and she responded again. She kissed my collar-bone. I could feel the firmness of her tits and erect nipples on my lower chest. Alexis shivered and just in case it was from the room temperature, I pulled the bed-covers over us. \n\nWe did the manual muscles flexes for ten minutes and I could feel my climax boiling in my balls. Alexis knew I was close and she clamped her vagina down hard and pulled back a couple inches to pull it out. Suddenly, Alexis went rigid as her breath caught in her lungs. She hung there for a few seconds and then her muscles released and she groaned air out, \"Jesus. Fuck. I'm cumming Baby.\" I heaved up my hips and fired many long ropes of cum into Alexis' pussy. She groaned hard with each one. I could feel her pussy reacting to her orgasm. I pulled her butt-cheeks hard to me and she screamed, \"JEEEESSSSUUUUSSSS. YESSSS.\" I smiled to myself, 'I love giving her an orgasm,\" I thought.\n\nWe apparently both fell asleep just as we were when we climaxed together. When I woke up my cock had softened but my glans was still engaged in Alexis' pussy. It probably hung up on the ridge. I could feel the cool sensation of cum and vaginal juices that had leaked out of Alexis' pussy and down my balls. I rolled toward Alexis' side of the bed and she rolled off my chest to the bed. My glans pulled out of her and she moaned before curling up in a fetal position, slurped saliva into her mouth, fluffed her pillow and fell back to a deep sleep.\n\nI looked at the alarm clock. There was only fifteen minutes before we planned to get up so I got out of bed and covered Alexis as I bent down and kissed her on the cheek. She mumbled something and pursed her lips in a kiss but she didn't wake.\n\nI did my bathroom stuff and then stepped into the shower. I was rinsing off when the glass door to the shower opened and a yawning Alexis' stepped in. She walked right into me and threw her arms around my waist. She rested her face on my chest. I put my arms around her shoulders and kissed her forehead. She bit my left nipple and giggled when I pulled back from her. She looked up at me and said, \"That was one weird fuck this morning, wasn't it?\" \n\nI nodded at her and said, \"It was nice.\" She grinned and nodded and laid her head back on my chest. I squeezed shower gel into my hand and lathered her up from her shoulders, down her back, over her ass and as far down her thighs as I could reach. She released me and turned her around so her soapy back and ass was pushed against me. I got some more gel and washed from her neck, down to her tits, to her stomach and down to her pubic mound. I pushed my fingers between her labia and she sucked air into her lungs and heaved her hips into my hands. I returned my hands to her tits and palmed her erect nipples. She groaned as she reached around behind her ass and found my erect cock poking into the small of her back.\n\nI kissed her on the neck and she groaned like always. I whispered, \"We don't have time for this. We have a plane to catch.\"\n\nAlexis released my cock and turned again to face me. She said, \"Well, you started it. Don't you think for one minute that we are going to make it back to 'the palace' before we get each other off.\" She grinned up at me. I bent down and kissed her passionately and moved us under the showerhead to rinse off.\n\nWe found some of the breakfast items left over from yesterday and threw the rest away. I grabbed the suitcases and Alexis dumped the trash bag in the trash chute. We locked the door and got in the elevator.\n\nOnce on the highway we had an hour and a half drive. We listened to the radio and as usual we sang along with the songs we knew. I stayed only about five miles/hour over the speed limit. I felt more like my old self today. The sun was bright. The temperature was mild. The traffic was light. I had figured that the traffic would be heavy as people went home after Christmas. I guess more people were staying put for a few days. I was travelling in the middle lane. I passed some people. More people passed me. \n\nAlexis looked over at me and she had that sultry look on her face. I smiled at her. I knew she would make her move pretty soon. We had an hour or so to our destination. Her hands went between her legs under her skirt. I shared my attention between the road and Alexis and when she shuddered in her seat and then glanced over at me with a glazed look in her eyes I knew she would do something. She was always so unpredictable I had no clue what she was thinking but I knew approximately how it would end.\n\nAnother two miles down the road and Alexis stood up between our seats and stripped off her tight sweater and pulled down her skirt. Other than her sneakers, she was naked. I eased over into the slow lane and reduced speed to the speed limit. Alexis pulled a yoga mat over between our seats and knelt on it as she scooched herself closer to me. She came up on her knees and unzipped my pants. My cock was at attention the second I saw her stripping and it surged forward into her waiting hand. She grinned up at me as she started jerking me off.\n\nI slowed further and was about to move into the breakdown lane when Alexis said, \"No. Don't stop. Keep driving.\" I did as she directed. I set the cruise-control at the speed limit and took my foot off the gas pedal. I checked the side-view mirrors and looked back down to watch Alexis stretch her lips over my knob. As she pushed her mouth down my shaft my head tipped back, my face scrunched into a grimace and I groaned, \"Jesus Christ.\" \n\nAlexis gave me an amazing blow-job followed by a quick throat-job. She didn't want me to cum in her mouth. I was suspicious that she wanted to do that thing like we did driving back from the beach on one of our early dates. It turns out that I was correct. Alexis slowly pulled my shaft out of her throat and then her mouth. She gathered a glob of saliva and slurped it into her mouth. \n\nBefore she could even ask, I slid the seat back the one click remaining and Alexis stood up and threw her left leg across my lap and slid up to sit on my stomach. She was pinned between my body and the steering wheel. Again, before she could ask, I tipped my seat back. She took the wheel in her hands and she was steering as I worked the brake and accelerator. It made me nervous driving seventy and not being able to see the road. I released the cruise control. I tried to look around Alexis' body but I couldn't see over the dashboard anyway.\n\nWith one hand on the wheel and one on my cock she slid her hips down and aligned my cock with her pussy and then pushed herself on. She groaned as she pushed all the way down. I rocked my hips up into her and she groaned again. I put my hands on her hips and pulled her down hard. She screamed from the extra penetration.\n\nCars were starting to wiz past us. Many were tooting their horns. I had apparently eased off the accelerator as I was totally engrossed in fucking Alexis' pussy. I felt the loud violent vibration of the lane markers so I knew Alexis was pulling over to the breakdown lane. I eased off the accelerator and coasted to a stop. I reached around Alexis and shifted the column mounted gear lever into park. \n\nAlexis was about to have her orgasm and she was losing control of her body. I was glad she had steered off the road. We were safe and I could concentrate on my climax too. Alexis leaned back against my chest and I cradled her tits in my hands. She was in a constant groan but she was still grinding her pussy around in my lap. \n\nAlexis' pussy was clamping on my shaft and I could feel my balls pulling in tight and then cum was blasting up my shaft. Alexis felt it coming and she let out a scream as the first salvo blew into her. She groaned, \"Yes,\" on each subsequent cum shot.\n\nWe were both done and we sat there with my hands on her tits and her hands on top of mine for a long time. The van shook from the air-stream of passing big-rigs. Alexis was stuck. She couldn't get off my cock because it was still hard. Her feet didn't touch the floor so she couldn't push herself back up my body. I could have just lifted her off but I liked her pinned to me like that. There was a way she could get herself off and I was curious to see if she would figure it out.\n\nIt didn't take her long to realize that she could put her feet on the dashboard and push herself up my body. I smiled to myself as she slid her ass back up on my stomach and my cock sprang from her pussy. She then lifted her left leg over the steering wheel and she stood between the seats again. She leaned down and kissed me and then pushed her lips over my glans and cleaned my shaft with her tongue. My pants were stained from the cocktail of cum and vaginal juices that had leaked out of her pussy.\n\nAlexis gave up trying to get my stiff cock back in my pants and left it out in the open air. I put my seat back in driving position and looked down at my cock. I tried to get it in my pants but for the moment, it was a lost cause. I put the van in gear and waited for a line of traffic to pass before I pulled out and got back up to speed. I set the cruise control.\n\nAlexis reached under my seat for my 'Cum-Towel'. She wiped her pussy and legs dry and stuffed the towel back under my seat. She pulled on her clothes and took her seat. She looked over at me and sent me an air-kiss and said, \"I love you Baby.\" I grinned and reached over and tapped her thigh once, then four times and then three times. She giggled as she got the message.\n\nWe dragged our suitcases to our master bedroom in the palace. We had to unpack and repack and take a quick shower so we wouldn't gross everyone out on the bus to the airport. We opted to just pull everything from our bags and leave it on the bed. We'd take care of it when we got home. We showered with no extra-curricular activities. We repacked for three days even though we would be staying at the hotel only two nights. Amongst Alexis' packed clothes was her \"SH5\" 'uniform' which was the original neon green tank top with the sparkly letters spelling \"Go Bull Dogs\" on the front and \"SH5\" on the back. I picked up a pair of neon yellow micro-hot pants like the Dallas Cowboy Cheerleaders have always worn. Alexis reminded me that the Dean had given her a budget to enhance their outfits. I was glad she wasn't going to put that outfit on now. There would be no way we'd make it to the field house in time.\n\nWe would be flying into Los Angeles and then get on buses to drive to our hotel near the stadium. We'd fly in today, play the game tomorrow night and then fly home the next day.\n\nThe team, Cheerleaders, SH5 and couching staffs all piled on the two buses for the drive to the airport. Everyone was pretty excited. It was early in the afternoon and we behaved ourselves. Alexis nudged me and nodded across the aisle. Josie and Dean were sucking face and groping each other. I had noticed Hannah making a big deal out of sitting with Cheerleader, Vanessa who smiled at me as I walked by. I told Alexis that 'Nessy' was Hannah's latest squeeze. She looked over and turned back to me and said, \"She's very pretty.\" She had a mischievous smile and I wondered what kind of trouble she was thinking about getting into. Alexis turned back to look at 'Nessy' again paying attention to Hannah's roving hands. Alexis smiled again and tipped her head back against the head rest and closed her eyes.\n\nI had to nudge Alexis awake when we got to the airport. She seemed confused about where she was for a moment but quickly recovered. Between the team, Cheerleaders, Couching Staffs and SH5 members, there were around eighty of us. We took up most of the plane. It was open seating so Alexis and I found ours in the last row beside a pair of rest rooms. We ignored everyone and leaned against each other and fell asleep. I didn't ever remember taking off.\n\nI woke to the low-pitched drown of the engines. Alexis was resting her head on the edge of my seat and my shoulder. She appeared to be asleep so I didn't wake her. One of the rest room door latches made a noise and a second or two later, the bi-folding door pushed out into the aisle. 'Nessy' eased through the opening and looked down at me. She grinned as she straightened her clothes and then stuck her head back into the rest room and said something before heading back up the aisle to her seat. Seconds later Hannah stuck her head out the same door and looked forward. Her face was flushed. She straightened her disheveled clothes and let the door close as she headed back to her seat. She didn't notice me sitting in the window seat to her left.\n\nSitting a few rows in front of me was Jerry, the Defensive Coordinator. I liked the guy but he was known to be a fifty year old 'hound-dog' always flirting with the female students. He was a good looking guy and I was pretty sure he was more than flirting with many of the girls. He was pivoting in his seat to get up when 'Nessy' walked by. He eyeballed her like she was a piece of meat to a starving dog. He sat back and watched her go by. He was about to get up again when Hannah pushed past him. Everyone knew about Hannah. He looked at her as she walked forward and then he looked back at the half-opened rest-room door. He noticed me watching him and he grinned as he approached the rest room. He said, \"It's not fair. Our Lesbian Cheerleader Coach gets all the good snatch.\" I smiled at his use of the word 'snatch'. I knew what it meant but I didn't use it and I hadn't heard it used in a long time. The rest room door closed and latched as the 'vacant' sign changed to 'occupied'.",
        "I must have nodded off again for a few minutes as the snap of the lock on the rest room door woke me. The door pushed open and Jerry was standing there holding a pair of women's sheer lace panties. It was impossible to know whether they belonged to 'Nessy' or Hannah. My guess was they were 'Nessy's'. The DC put them to his nose and inhaled deeply and then let it out with an, \"Oh Fuck yeah.\" The DC was a pig as well as a dog. He headed back to his seat twirling the lace panties on his index finger. He stuffed them in his sport coat pocket as he sat down.\n\nWe landed with a screech and a jolt followed by a rapidly building roar of the engines. The roar lasted only a few seconds and then we slowed as the brakes were gently applied several times. We turned off the runway and continued for what seemed like forever past buildings and parked aircraft. The engines would spool up and whine and then spool back down again. I felt like I wanted to ask the pilot to just let us off at our hotel. We finally coasted up to a gate and the engines shut down and a 'bong' sounded which is the universal signal to get out of your seats. Everyone stood at the same time. We would be last off the plane so we just sat there. Alexis was yawning and stretching. She had slept the whole flight. With my long legs jammed up into the seat in front of me, I can never sleep long on a plane.\n\nThe coaching staff corralled us all off to the side of the concourse to make sure everyone was there before heading to the buses. \n\nThe Hotel was very nice. It had seven floors. There was a gym, an indoor pool and a hot tub. I planned on getting some time in the gym to stretch and limber up my muscles after the cramped conditions on the plane. Alexis made arrangements to meet the other SH5 members at the pool. I told her I'd meet her there when I was done.\n\nAs usual, Dean and I were bunking together. Alexis was bunking with Josie so we had two options. Alexis and Josie could sleep in with Dean and I and we could find a way for the four of us to entertain ourselves or Dean could go sleep with Josie and Alexis could come to my room. I preferred that Alexis come here and Dean go there. I would have to see what Alexis wanted.\n\nI dressed in sneakers, gym-shorts and a tank-top and found my way to the 'Gym'. To call it a Gym was a stretch. It was a tiny closet of a room, smaller than a guest room. There was a four station Universal with hardly enough room to get from station to station. None the less, I got myself breathing hard and sweating profusely. I sat at one of the stations trying to get my breathing under control. I had lifted until my muscles failed. I toweled off my arms and forehead. The room was so small the water bubbler was outside the door in the hall.\n\nThere were signs in the hallway pointing the way to the pool. I followed them through a maze of hallways and I could hear the hollow hoots and yelling echoing off the tile walls from two turns away. I passed a huge glass window that looked onto the pool deck. The view through the window brought me up short. The Cheerleader squad apparently had the same idea and there were more than a dozen gorgeous women in various states of dress in the pool, lying on the pool deck or in lounge chairs. Alexis was sitting on the edge of the pool with her feet dangling in the water. She spotted me standing in the window looking in and she waved at me to come in.\n\nI couldn't tell what the hooting and hollering was all about from my vantage point so I walked past the window and pushed the door open. The yelling was much louder inside. Whatever was going on was in the pool so I walked over to Alexis who looked up at me as I got closer. She pointed to the walk out stairs. Nina was naked and fucking the shit out of an unknown naked guy in the cowgirl position while the others cheered her on. The guy's ass was on the first step under water. His elbows were braced on the first step down from the deck. Nina's tits were flailing up and down and side to side. She was trying to corral them with her arms as she drove her hips forward and back.\n\nI sat down beside Alexis and took off my sneakers. The cool water on my legs felt great. Alexis leaned over and said, \"This guy is the Hotel 'Pool Boy'\". She burst out laughing as she slapped me a high five. I laughed too. \"He already came twice. Nina got him back up pretty quickly and she's giving him quite a ride. He didn't last very long on the first two but he's doing well now.\"\n\nNina's face was scrunched up in a mask of sheer determination. She yelled out, \"Cum for me you fuck.\" I looked at Alexis and she looked at me and shrugged her shoulders. The guys head was thrashing from side to side and everyone was yelling, \"Go. Go. Go.\" Nina was inspired by the chants and she furiously drove her pussy on and off his cock. \n\nEveryone expected Nina to drive the guy to ejaculation again but instead, Nina's body seemed to scrunch up in a clench of muscles and then she released into a huge orgasm and screamed, \"FUCK. YES. I'M CUMMINNGGGG.\" She lost her rhythm and slowed her pace as she collapsed down on the guy's chest. He wrapped his arms around her back and held her as she groaned and panted and gasped. He was gasping for air too. She pulled forward off the guy's cock when she went down.\n\nIn a heartbeat, Mindy and 'Nessy' were grabbing for the guys bouncing cock. Both girls had bathing suits on and they were standing in water too deep to just climb on and take Nina's place. As Mindy was trying to figure out how to mount his cock, 'Nessy' pushed her lips over his glans and started giving him a blow-job/hand-job combination. She was taking most of his cock, which was of average size. Mindy hip-checked 'Nessy' into deeper water and took over doing the same thing. \n\nThe chants changed to, \"Mindy. Mindy. Mindy.\" With Nina lying on his chest, he couldn't see what was happening with his cock. His face scrunched up in a mask of pain or pleasure; they look the same under these circumstances. He came up on his elbows to see over Nina's back. Mindy smiled at him with his cock buried in her mouth and he let out a loud groan, \"YYYUUNNNNGGGG,\" as his hips launched up, forcing his cock deeper in Mindy's mouth than she wanted. She gagged and pulled off his cock and caught his first two cum shots right in the face.\n\n'Nessy' had made her way back into shallow water and she shoved her lips over the guy's cock but not before she caught the next salvo between her eyes. She took two shots without swallowing and then realized that he was going to give her more than she could handle. Her eyes went wide and her cheeks puffed out. She pulled her lips back to the 'eye'. She had to pull off and as if choreographed, Mindy slid her lips on as 'Nessy's' came off. Mindy took the last shot and swirled it around in the mouth and made a big show of swallowing it.\n\nThe guy's head collapsed back on the top step as he sucked in huge quantities of air trying to get his breathing back in control. Nina had recovered from her orgasm and she stepped off his chest into the water.\n\nTwo of the other cheerleaders jumped into the water and started sucking on the guy's softening cock. They took turns but after a few minutes with no progress, they gave up and left his flaccid cock floating over his hip bone. He just laid there with the biggest smile you could possibly get on a human face.\n\nIt was a feeding frenzy. Bathing suits were coming off and many of the girls were pairing up. Jan and Yu-Gin looked over at me. They both had sultry looks on their faces as they just stared at me. They grinned like jackals about to feed. I looked at Alexis hoping she would save me. The grin on her face told me she had no intention of saving me.\n\nJan and Yu-Gin stripped out of their bikinis and slipped over the edge of the pool and swam across to me. Jan surged up out of the water and grabbed my tank-top and pulled me into the water. While I was scrambling back to the surface, I felt my gym shorts being yanked down my legs. \n\nI couldn't believe that Yu-Gin was able to push her lips on to my glans while underwater. She grabbed my hips and pulled herself forward and drove my knob between her lips. She was out of air and she quickly released my cock and surged to the surface beside me. Alexis had slid over the side of the pool still in her bikini and joined the fray.\n\nThe Cheerleaders saw what was going on in the pool and they started chanting, \"SH5. SH5. SH5,\" as most of them came back to sit on the edge of the pool to watch the four of us. Alexis and Jan were swimming for the stairs, where the pool-boy had recovered enough to sit on the top step to watch the action. Just in case, Jan and Alexis started fondling his cock floating between his thighs. They figured two cocks would be better than one. \n\nYu-Gin was clinging to my neck coughing and gagging. I treaded water over to the ladder in the deep end. I pushed Yu-Gin against the ladder and she wrapped her legs around my hips. My cock was rock hard and ready as I grabbed the ladder and guided my hips to her sex. She had her ass on one of the rungs and she reached down and grabbed my cock and pulled it to the correct location. She grinned at me and pushed her hips off the rung and pulled with her legs and my cock drove into her. She screamed, \"JESSSSUSSSS. WWHHOOOAAA.\" I stopped pushing forward as she gritted her teeth and seethed air between them. I gave her a couple seconds to adjust to the size and then slowly rocked my hips forward and buried my cock in her. Her head fell forward to my shoulder as she continued to suck air between her clenched teeth. She threw both arms around my neck and hung on.\n\nI held on to the ladder to give me something to pull my hips forward against. Yu-Gin yelped from each full penetration into her depths. She bit my shoulder hard enough for me to pull away from her and she released me with a horrified look on her face. The look disappeared instantly as I drove my cock in hard again. She groaned, \"OH FUCK. OH FUCK. INCREDIBLE.\" I gritted my teeth and adjusted my grip on the ladder and fucked Yu-Gin hard. She cried out in pain and I slowed my attack. I could feel the cause of her pain; I could feel it too. Her lubrication was being washed away by the water. We were basically, sticking to each other. I stopped and climbed the ladder with Yu-Gin hanging on by arms and legs. I set her ass down on the deck and while standing on the bottom rung of the ladder I slowly ran my cock in and out until I could feel her lubrication again. She smiled at me and said, \"I was close. Fuck me. I was so close.\"\n\nI did as she asked but slowly at first until I was sure I wouldn't hurt her again. She pulled her legs out of the water and wrapped them around my waist and pulled me in hard. I smiled at her and started ramping up my pace. In another minute, Yu-Gin started a low pitch growl that built steadily to a high pitched screech that pulled all the attention to her. She yelled out, \"FUCK, I'MMM GOONNAAAA CUMMM. OH JESUSSSSSS.\" Her eyes went wide as her mouth dropped open. Her fingers clamped hard on the ladder, her legs flew out and snapped back. Then she screamed, \"AAAAAAIIIIIIIEEEEEEE,\" as her head shook from side to side. \n\nYu-Gin fell back away from me. One of the Cheerleaders caught her head so she wouldn't hurt herself. I kept fucking her pussy until Yu-Gin pulled away from me. Her shoulders were on the deck and she held her hips up in the air with her legs. Her pussy was clenching on air. She stuffed three fingers into her pussy. \n\nI stood on the ladder and watched as Morgan, one of the Cheerleaders, drilled her tongue into Yu-Gin's pussy and feverishly began tongue-fucking her. Yu-Gin launched into her growl to screech transition as another climax crushed her. Between her own fingers clawing at her clitoris and Morgan drilling her pussy with her tongue, Yu-Gin launched a solid stream of clear liquid squirt directly into Morgan's face. She pulled back quickly and the stream shot past her to the pool deck four feet away. Yu-Gin's face was screwed up tight as she grunted and screeched until the stream diminished and finally stopped.\n\nI felt a hand slithering up my leg to my hard cock as I stood on the bottom rung of the ladder watching Yu-Gin. I looked to see Jan treading water beside me. I smiled at her and dropped back into the water to tread water with Jan. She came into my arms and kissed me. She still had a hand on my cock. I looked over Jan's head and saw that Alexis was swimming toward us. Behind her two more of the Cheerleaders were attacking the Pool boy's cock hoping they could do better. I thought, 'If Alexis can't get the guy's cock up, none of them will.' I could see that he was thoroughly enjoying their attempts.\n\nI guided us toward Alexis and I was standing on the sloped bottom as Alexis joined us for a mutual hug and kiss. I carried them both in to shallow water until Alexis and Jan could stand comfortably. I released them and we all walked up the stairs with Cheerleaders parting as we went. The pool-boy looked at my stiff cock swinging as I walked by. He said, \"Holy Shit, Dude?\" Up close, I realized the 'pool-boy' was actually older than me. He was certainly in his mid to late twenties. \n\nI found a vacant lounge chair and lay on my back. Alexis maneuvered herself over my hips and Jan put her knees down on either side of my head and pushed her pussy over my lips. I was looking up to her anus as she bent forward to suck face with Alexis. My cock poked into Alexis' clitoris and she groaned as she reached down and guided it back to her pussy and sat down. She stopped, as usual, at the fattest part of my cock and let herself relax before letting gravity push her down until she was sitting on my balls. \n\nSomeone was running their fingers down my shaft as it was exposed when Alexis pushed herself up. Then my balls got sucked onto someone's lips. I didn't even try to see who it was. Alexis was in a steady rhythm and my balls were sucked into someone's mouth and a tongue pushed them around and popped them out. I was drilling my tongue into Jan's pussy, when I felt lips press to my shaft as Alexis drove herself up. Alexis drove those lips off as she dropped back down. My testicles were being sucked into two separate mouths. \n\nJan began humping her hips on my face and then Alexis screamed, \"Yes. Yes. Oh my gawwdddd.\" Her pussy clenched hard on my cock and she fell forward onto my chest. Her pussy pulled off my cock just as I felt my own orgasm boiling in my balls. Lips went on the glans immediately and maneuvered down my shaft and got about five blowjob cycles in before I exploded cum up my shaft to the waiting mouth. Whoever it was didn't stay there long. She pulled off when she was overwhelmed and another mouth took over. I groaned hard through many streams of cum.\n\nI kept up the attack on Jan's pussy and at some point during my orgasm, Jan rolled into her own. I was slurping her juices as fast as I could until Jan collapsed down on Alexi's back and then stepped off the chair and curled into a fetal position on the pool deck. Alexis had recovered from her orgasm and she sat up nearly sitting on someone's face trying to suck on my softening cock. I pushed myself up to my elbows and saw 'Nessy' and Mindy sharing their load of cum with Morgan and another Cheerleader I didn't know. Nina was licking her lips but couldn't reach the glob of cum on her chin with her tongue and she scooped it up with a finger and shoved it in her mouth.\n\nI swiveled around in the chair and smiled as I could see that the pool-boy had a woody again and two Cheerleaders were taking turns blowing him. I said to Alexis, \"Come on, we'd better get out of here. It's feeding time at the zoo.\" Alexis laughed and retrieved her bikini and brought me my wet clothes. I pulled them on and made a quick retreat before anyone knew I was gone. Jan, Nina and Yu-Gin did the same. \n\nI noted that Josie was missing and Nina piped in, \"Josie and Dean had other plans. Poor Dean, he doesn't own his balls anymore.\" The others giggled but offered no further comments. \n\nWe went to Alexis' and Josie's room first so she could get a change of clothes for tomorrow. We found Josie and Dean in bed fucking like rabbits. A man Dean's size had no right moving his ass that fast. I stood there in awe at the doorway. Dean was groaning and Josie was screeching. Alexis got into her suitcase and grabbed out an outfit and we left. I doubt they even knew we were there.\n\nWe went back to my room and took a shower. It was a bathtub with a shower curtain so there wasn't much room for extracurricular activities. We were both satisfied in that regard anyway. If it wasn't for the handicapped hand rails we would have fallen out twice trying to maneuver by each other to get under the showerhead. \n\nWe dressed and lay on the bed watching TV before going downstairs to the restaurant. I nodded and waved to my team mates who were all sitting four to a table. As usual, they gawked at Alexis as we walked by. She smiled, waved and fist pumped anyone who offered one. We found an empty table and sat down.\n\nBefore we could give our order to the waitress Dean and Josie walked in and sat down with us. They were freshly showered and Josie's hair was still damp. They ordered and then we talked about the sleeping arrangements. Dean spoke up that he wanted to go to Josie's room. It looked like Josie was more interested in a foursome for the night. Alexis and I stayed quiet and watched to see what would happen. \n\nIn the end, the depiction of a ball-less Dean proved to be overstated. They would be sleeping in Josie's room and Alexis and I would be alone in my room. That was fine with me and Alexis never revealed a preference either way. \n\nAlexis and I went back to my room and watched more TV before turning in for the night. We made slow, sensuous love to each other and kissed and cuddled until we fell asleep as I spooned against her back cradling her left breast. She held my flaccid cock in her left hand until she apparently dozed off and it slid out of her fingers. I came awake and kissed her on the back of the neck. She mumbled something but didn't wake. \n\nNow that I was awake again, my mind turned to the Bowl game tomorrow night. I played the offensive plays through over and over again and they became my dream after I fell asleep. My football dream looped over and over again in amazing clarity. I woke a couple times trying to clear the dream from my mind but I would go right back to it. I guess I could figure out what was on my mind.\n\nI was actually tired in the morning from playing football all night. It was still dark when I got out of bed. I did my bathroom stuff and pulled on the clothes I had deposited in the chair last night. Alexis was 'poofing' away. I eased the door open and closed it quietly behind me. I pushed the elevator button and waited for its arrival. I wasn't expecting to see anyone at this hour so I was surprised when the elevator door whooshed open and Coach Hanna and my Defensive Coordinator, Jerry, were crushed into a corner in a lip-lock with her right hand in his pants. They apparently didn't expect to see anyone either.\n\nI didn't know whether I should give them an \"Ahem\" and get on with them or step back and let the door shut. I opted for the latter. I don't think either of them noticed me. God only knows where they were coming from or going to. Both had separate rooms. His was on the next floor up while hers was one floor below. I waited for the next elevator thinking, 'Crap, Hannah sure does get around and her orbit apparently just collided with someone about as randy as she.' \n\nI rode the next elevator down to the lobby. The breakfast wasn't going yet but the coffee machine was what I was looking for. I made two cups and headed back to my room. I eased into my room hoping I wouldn't wake Alexis. She was in the bathroom. I handed her a cup and she smiled and kissed me. \"I love you today,\" she said and I grinned. She had beat me too it. Responding with 'I love you too' had always seemed prompted and coerced. I kissed her back. She looked back in the mirror pulling at a crease across her cheek from lying on her pillow. ",
        "The team had a meeting scheduled for nine o'clock in one of the Hotel's conference rooms. I was five minutes early because you didn't want to be even one minute late. There were several team members already there when I walked in. There was a rumble of excitement in the room and as soon as I sat down next to one of the starting Offensive Linemen I said, \"What's going on?\"\n\nHe leaned over and whispered, \"Coach caught Jerry fucking Coach Hannah in the elevator. He was going down to the lobby to get a cup of coffee and the elevator door opened and there they were. The story is that Jerry was fucking her in a standing doggy style against the back wall. No one knows what, if anything, Coach is going to do about it.\"\n\nI smiled and thought, 'Well it looks like Hannah is going to have to pony-up more than regular blow-jobs for the Athletic Director to keep her job now.' I kind of felt sorry for Hannah. She just seemed to be wearing an \"Open for business\" sign around her neck.\n\nThe Head Coach came in at the stroke of nine o'clock and locked the door. He asked one of his assistants to take attendance and he started the meeting. He talked about logistics and schedules, etc. and the meeting was over an hour or so later. He never mentioned the Jerry/Hannah thing, nor did I expect that he would. I caught Dean's attention and we left the meeting together. I asked him how things went last night and he laughed and said that they went to bed and fell asleep and woke up this morning. He chuckled as he said, \"I think we're turning into an old married couple.\"\n\nThe players were expected to be dressed in a tie and sport-coat for the bus ride to the stadium. The parking lot was nearly empty. We were arriving three hours before game time. Everyone was kind of somber, listening to their music to get themselves up for the game. I was as nervous as anyone. Anyone who said they weren't nervous was lying.\n\nThe equipment guy came in and passed out all new uniforms and helmets. My number was eighty-seven. I was already in my pads and shoes. I held up my new jersey. It was powder blue with black letters. Some of the guys got to laughing about the color and were holding their wrists limp with their pinky finger raised and speaking with an effeminate kind of a lisp. When they weren't getting the reaction they expected from the rest of us, they just shut up and pulled their jerseys and pants on. Head phones came back on as we sat and waited for the Head Coach to give his rah-rah speech.\n\nBy the time we were to go out on the field, the Coach had us so wound up and energized we would run through a wall to get out there. The excitement was palpable. The crowd of seventy thousand was roaring as we ran out on the field. I was in awe. I had never seen anything like this. At the bench area, I stood and did a three-sixty with my hands on the top of my helmet. A half hour was allowed for warming up and our guys were getting to it. The crowd went nuts again as the other team ran in along the opposite sidelines. I checked them out. They were big and they were favored to win by eight points. We knew they were bigger than us before but seeing them put an exclamation point on it. \n\nWe knew we couldn't win a smash mouth type of game. We figured that we were smaller and faster. Football is such an emotional game and our emotions were running high. I started my warm up routine. I did some sprints and then stood at mid-field and looked at the huge crowd looking for Alexis and the SH5. They were right where she said they'd be. Alexis was jumping up and down and waving her hands above her head. Their neon-green tops were easy to spot. The 'Jumbotron' camera spotted them about the same time as me and the crowd went nuts again. I lifted my arms as I looked at her. I swear I could hear her screaming above the rest of the crowd. I kissed my fingers and threw them at her. She did the same and that was caught on the 'Jumbotron'. \n\nIt was game time. I was anxious to get going and clear these nerves. One or two plays were all I needed. We kicked off and they marched right down the field and scored a touchdown. I wasn't on the field and I was standing on the sideline watching in agony.\n\nOur 'jitterbug' kickoff returner broke free for a seventy yard return and our team speed proved difficult for the other team as we tied the score. The game went like that through the first half which ended with us trailing by three points. There were no glum faces in our locker room and after another speech from Coach, we took the field in a sprint for the third quarter. Many of the guys on the other team were walking onto the field. None of them made any more of an effort more vigorous than a jog.\n\nThe coach gathered us on the sidelines and pointed out the other team's lethargy and we knew they were tired from trying to keep up with our speed. We took the second half kick-off and took it the length of the field on five plays with the final one being a fifty yard bomb to our fastest wide-receiver.\n\nThey stayed with their running game with their huge offensive line. They were bigger but we were gang-tackling and feeding off each other's energy. They had fourth and two from their forty two yard line and opted to go for it. I was playing middle linebacker, not my usual position. I watched them line up in an I-formation. Generally, they were going to hit the line with the full-back and then the ball carrier right behind him. My job was to plug the hole. Just before the ball was hiked, I noticed the quarterback getting jittery feet. I quickly stepped forward and swatted Dean on the rear to move him over to the middle a foot. I read Quarterback sneak and slammed the door on him as he took the ball and started up into the line. He was stopped a half-yard short. It turned into the defining play of the game.\n\nWe had the ball and the lead and we threw for another touchdown and they never got closer than ten points again. I had made minor contributions with four catches for fifty two yards as a tight end and another twenty-two yards running on a sweep play. I played a lot more on defense in the second half and stuffing their Quarterback on fourth and two was my biggest individual contribution. I stood on the sidelines as our offense wound down the clock taking three straight knees. The 'Jumbotron' had zoomed in on Alexis and the SH5 again and zoomed in some more to show Nina's huge tits bouncing all around in her tank-top. When the crowd around them saw that they were on camera too, they went nuts.\n\nMindy and the Cheerleaders and Alexis and the SH5 had done a fantastic job keeping our fans in the game. I let the warm feeling of this win wash over me. Our guys were jumping up and down and throwing their helmets in the air as the last second ticked off the clock. \n\nThe locker room was crazy. We had won a game we weren't supposed to on national television. The Coach stepped into the middle of the frenzy and everyone quieted down as he raised his hands. He told us how proud he was of all of us. He gave the game ball out to our fleet-footed wide receiver who had caught five bombs for one hundred and eighty seven years and three for touchdowns. \n\nIt was a long time before the celebrating slowed down in the locker room. I showered and dressed. Alexis and I had agreed that if she was ready before me, she would wait outside the guy's locker room for me. If not, I was to wait outside the Cheerleader's locker room for her. She wasn't there when I left the locker room so I walked around the corner and leaned against the wall to wait for her. \n\nSeveral of the Cheerleaders came out pumping their pom-poms and high-fived me. I had seen them many times but I didn't know any of their names. A few more Cheerleaders came out. They high-fived me too. I at least knew their names and said, \"Hi\" to each of them. They were squealing and giggling as they walked past me.\n\nI was wondering what was taking Alexis so long when Mindy and Morgan came out. Mindy said, \"Nice game Meat. Alexis asked me to tell you that you should come in.\" Morgan stood beside Mindy and had a big grin on her face. They turned and headed for the bus.\n\nWhat could be taking her so long? I had no idea how many girls could still be in there. Many Cheerleaders had come out. I had seen none of the SH5 group but they could have come out before me. I tentatively stepped to the locker room door and listened. Nothing. I pushed the door open and listened. I could hear a shower running in the distance but that was all. I checked the hall to see if anyone was watching the 'pervert stalking the girl's locker room'. No one was around.\n\nI stepped inside and let the door close behind me. I took a few steps in and said, \"Alexis?\" The only sound was the shower so I walked further into the locker room looking both ways. No one was around. I headed for the shower sounds and turned the corner of the three walled shower room. The ceiling, walls and floor were all tiled and the sound echoed. I stepped into the room and was descended upon by a naked Yu-Gin, Jan and Nina. Alexis was standing under a showerhead watching with a huge smile on her face.\n\nLittle Nina climbed me like a tree and had her pussy in my face before I even knew what she was doing. I wished that I had a picture of this: A naked Nina with her legs hanging down my back, sitting on my shoulders humping her pussy into my face with her thighs clamped along my cheeks and ears with her massive tits resting on the top of my head as she wrapped her arms around the back of my head to hang on. \n\nI gave her what she wanted as I drove my stiff tongue onto her clitoris, flicked it a few times to Nina's squeals and then started tongue-fucking her. Other than her feet, she wasn't wet so she had been laying in wait for me to round the corner. I felt a tug at my waist as my belt was unbuckled. Then my zipper came down and my cock flopped out into someone's hand. I kicked off my sneakers and then stepped out of my pants. I was naked from the waist down. I put my hands on Nina's plump ass-cheeks and held her tightly to my face.\n\nI felt someone jerking on my cock and then a pair of lips kissed my glans before forcing their way on. Whoever it was, either Jan or Yu-Gin, made several blow-job cycles and then pulled off and a different mouth took her place for several more cycles before she pulled off too. I was gently tugged toward the cascading water noise where I had seen Alexis smiling at me. I wished I could see what was going on but Nina had me wrapped up like a cocoon. I felt water splashing on my legs and then a different mouth pushed its way onto my cock. I smiled into Nina's pussy. I recognized this mouth on my cock. It was Alexis'. \n\nAlexis went straight down the shaft and pushed my glans into her throat and I let out a long groan into Nina's pussy. She giggled for a moment and then started rocking her hips hard into my face. She clutched my head tighter and moaned, \"Oh yes. Yes. Oh my God, it's coming on so easy. Oh Jesus. I'm gonna cum and it's amazing.\" Her hips fired hard once and Nina let out another sighing moan, \"Oh fuck, ladies. It's like being wrapped slowly in a warm, wet towel.\" She flinched and groaned as she clutched my head tighter. I kept up the attack on her pussy as Alexis kept up her throat-job on my cock. She was kind of just rocking the edge of her throat on and off my glans. The feeling was incredible. Then hands started roaming under my shirt pinching my nipples and caressing my pectorals and abs.\n\nAlexis pulled my cock back into her mouth and started a full length blow-job from tip to balls before pulling off and licking her tongue down the underside of my cock to my balls. She kissed each one and then kissed her way back up and over the head again.\n\nNina's pussy was clenching on my tongue, pushing it out as I pushed it back in. I gently flicked her clitoris, which I knew must be very sensitive. She surged her hips forward in response and then back away from me. She was muttering something unintelligible over and over again. I kept up my tongue attack until Nina started to relax and pulled her legs back to my front and I let her slide down my body to the floor, displacing Alexis as she went.\n\nNina got her feet on the floor but continued right down to curl up in a fetal position on the wet tiles. Jan pulled my shirt up over my head and started sucking on my nipples as she pushed her nipples against my ribs. Alexis maneuvered me under the shower and knelt in front of me and resumed her blow-job. Yu-Gin maneuvered between my legs and was licking and sucking on my balls. Jan was kissing me passionately on the mouth. I cradled her breasts and then palmed her nipples and she groaned hard. I worked my hands down Jan's fantastic body to her mons pubis and then inched my middle finger into her pussy. She started humping her hips onto my hand. She groaned again into my mouth and then pulled back and set her face on my chest as she lifted one leg high into my other hand.\n\nYu-Gin and Alexis swapped places for a few minutes and then we got down to some serious sex. Alexis pulled my cock toward the floor and I had to descend with it. I released Jan's leg and then abandoned her pussy and sat back on the wet tile and Alexis guided me onto my back.\n\nJan instantly straddled my head with her long slender legs and dropped her pussy down to my face. She screamed when I drilled my tongue into her. I felt my cock being pulled down and a pair of legs at my waist. I wondered if I could discern the difference between Alexis' and Yu-Gin's pussies on my cock.\n\nI knew the moment my cock pushed into the pussy pushing onto my cock that it was Alexis. Not necessarily from the sensation but from the motion and the way she fucked. Alexis knew her way around my cock and Yu-Gin was much more tentative. Probably because of the size of my cock and the fact that she was a small person in all regards.\n\nI could look up and see Jan's tits above me and I smiled as I saw Alexis' hands come into view and cradled Jan's tits and tweak her nipples. Jan's hands cradled Alexis' hands as she squirmed around on my face. Then I saw Yu-Gin step up to Jan and push her pussy into Jan's face. Jan grinned at Yu-Gin and promptly began eating her out.\n\nAlexis was riding my cock in her familiar manner. She was on her feet at my waist, lifting and dropping with her legs. I knew from experience that she loved that position but she would tire quickly and adjust her position so she was on her knees rocking her hips forward and back.\n\nI was looking up between Yu-Gin's legs and I couldn't resist running my hands up her legs and over her tiny but shapely ass and push my index finger into her anus. She knew what was coming as she reached back and spread her butt-cheeks to accommodate me. Still, she screamed when I pushed in to the first knuckle. Her hips surged forward into Jan's face as she tried to evade my finger.\n\nAlexis had moved to her secondary position and was ramping up her pace. She was taking long full penetration strokes all the way to her cervix. Then she changed to a completely different position with her feet back on the floor at my ribs and her hands on my thighs leaning back. This position forced my cock into an uncomfortable position angling down toward my feet. There was some pain but I knew what she wanted and I was all in.\n\nWith my finger fucking Yu-Gin's ass and Jan sucking her clitoris and tongue-fucking her pussy, Yu-Gin shuddered into an orgasm first. Her legs started vibrating and I gripped one with my free hand to steady her. As her climax grew, her pelvis snapped into Jan's face forcing her away. She stayed away as Yu-Gin's hips snapped back. I could see her pussy clenching on air as her hips pulsed and she dropped her body toward my face. She wound up sitting on my forehead with her arms wrapped around Jan as she rested her forehead against Jan's chest. She was gasping for air. After a minute or so she rolled off my head and settled onto the wet tiles flat on her back with her chest heaving in search of oxygen. Jan helped guide her down and then went back to grinding her pelvis on my face.\n\nAlexis was driving her pussy onto my cock so the roof of her vagina was dragging along the ridgeline of my glans. She was concentrating on grinding on her 'G-Spot'. This was the perfect spot for a 'squirt' and she was going for it. I was feeling that familiar tension in my balls but I was sure I could hold off my orgasm to accommodate Alexis'. I went back to concentrating on driving Jan over the edge. She was getting close as evidenced by her groans as she maneuvered herself around to find the perfect spot. When she found it, she yelled out, \"Oh God. Yes. Right there. Oh my gawwwddd. Yes. Yes. Yes. OOOOOHHHHHHHH FUCCCKKK. YES.\" Her pelvis slammed into my face. It hurt but I kept drilling her pussy with my tongue in the spot and angle that she indicated. Her hips were pulsing forward and back. When she found the 'spot' again she screamed hard, \"AAAAIIIIEEEEE,\" as her pussy clenched and pushed my tongue out and continued to do that a dozen times more until she started to come down.\n\nAlexis was aware of Jan's climax and it just pushed her even higher. I wasn't going to last much longer. Jan rolled off my face and curled up beside Yu-Gin who immediately spooned with Jan under the rain from the showerhead. I pushed myself up on my elbows and looked into Alexis' eyes. They were glassy with concentration. She acknowledged me with a smile before her mouth dropped open and a long blood curdling scream burst from her lungs. She pulled off my cock and a spray of 'squirt' launched from her pussy that covered me, Jan and Yu-Gin. I saw it coming but Yu-Gin and Jan never noticed the difference between the rain coming down from the showerhead and the rain being sprayed on them by Alexis. They never moved. Alexis' ass was on the floor between my thighs and she slowly dropped to her back and lifted her hips with her legs. The 'squirt' changed from a spray to a stream that shot over my head before it started to diminish and landed on my shoulder, then my stomach and then stopped. She screamed hard through the whole thing as she brought Jan and Yu-Gin up to a sitting position to watch.\n\nAlexis had caught me by surprise and I hadn't cum yet. My cock was bobbing in the air above my stomach. Nina was the first to get there as she sat herself down on my stomach facing Alexis and then slid down as she guided my cock into her pussy. She groaned and had to stop to adjust. She leaned forward and put her hands on my knees and started driving her pelvis forward and back driving her pussy on and off my cock. Nina didn't know if I had cum in Alexis and she didn't care. All she saw was a hard cock. When I started cumming hard into her pussy, she groaned as though she was disappointed. Then she groaned from the increased hardness. Her pace ramped up to a furious pace desperately trying to use my spent cock to get her off. I was trying to help her and as my cock started to soften she screamed out, \"Oh fuck yeah. I got it. I'm cumming again.\" Her hips were thrashing all over my pelvis. I knew her tits were going everywhere. I could see flashes of side-boob as they swung to each side.\n\nWe all lay there under the shower for another few minutes. There was no other movement other than our chests heaving in search of oxygen. There was suddenly a loud clapping noise from the entrance to the shower. We all turned to see what it was. It was Coach Hannah giving applause. God only knows how long she had been standing there watching. Her dress was hiked up between her legs so she was certainly frigging herself before she started clapping. She said, \"Come on ladies. The buses are waiting for you. She looked down at me and said, \"That includes you mister, if you can move after that performance.\" She clapped again but not as applause but as an indication that we needed to move pronto.",
        "We did as instructed. Hannah left once she was satisfied that my cock was down for the count. We dressed in a hurry and all ran out to the parking lot to the idling buses. Chants of, \"MEAT MEAT MEAT,\" erupted from the first bus and everyone in the second bus was laughing. Alexis and I got on the first bus and Jan, Nina and Yu-Gin got on the second. The bus driver glared at me and Alexis as we passed. Through the back window I could see Jan, Nina and Yu-Gin going down the aisle to a mass of high-fives. We hadn't even found a seat to sit in before the bus lurched forward in a grind of gears. Alexis buried her face in her hands as more chants of, \"MEAT MEAT,\" started up again.\n\nThere was a steady din of voices in conversation during the ride to the Hotel. Alexis and I were spent and sat with my right arm around her shoulders. Her left hand was on my right thigh. My cock was resting peacefully on my left thigh so she wasn't trying to initiate anything. I resisted draping my hand over her right breast. \n\nAt the Hotel, the lobby was jammed with players and Cheerleaders all hooting and hollering. I guess they didn't want to split up and head for the solitude of their rooms. This had been going on since the end of the game and it was getting kind of old now. Alexis and I were pushing through the mass of celebrating bodies when a bell-boy (again, the term was used loosely because he was older than me too) dressed in the classic uniform stepped in front of me and looked up. He was holding a sealed envelope with our names written in a neat script. He asked if we were Hunter and Alexis and I nodded. He thrust the letter forward and I took it with a confused look on my face. He said, \"An older lady, very classy, asked me to give this to you. She described you so I knew where to start.\"\n\nI took the envelope and opened it on our way to the elevator bank. Alexis was stretching over to look too. I pulled out the single sheet of paper and read, \"Please come to Suite 701.\" I looked at Alexis and she was a confused as I was. The seventh floor was the top floor and was all suites. To my knowledge, no one associated with the team had rooms up there. The use of the floors was laid out in a kind of hierarchy. The Cheerleaders and SH5 were on the fourth floor. The football players were on the fifth floor and the football coaching staff was on the sixth floor. We stepped into the elevator as the doors were about to close. Coach Hannah was already in the elevator and was pacing back and forth. She stopped her pacing when she saw Alexis and I step into the elevator. \n\nHannah knew the hierarchy and gave me a look when I pushed the button for floor seven. The sixth floor button was already lit, which I thought was odd because Hannah's room was on the fourth floor with her girls. We said nothing to each other and rode non-stop to the sixth floor. The door opened and Hannah stepped out and headed down the hall. The door lingered for a long time and I pushed the seventh floor button again. Just as the door was closing, we saw Hannah step back into view across the hall about to knock on the Head Football Coach's door. She was smoothing her skirt and lifting her tits higher in her bra. Her face went red when she saw that we saw her standing there. The elevator door whooshed shut and Alexis looked up at me with a sly little smile on her face. She said, \"I guess Hannah is going to pay her penance.\" I laughed and nodded.\n\nOn the seventh floor, the doors were arranged differently in the hall. There were only half as many too. We turned left and went down the hall to Room 701. There was actually a doorbell button beside the door and Alexis pushed it. We waited and then I knocked loudly. The door opened and Rachel was standing in the doorway dressed as elegantly as ever. She had a huge grin on her face as she stepped back to usher us inside. We stepped in to a very opulent suite with a fireplace, which was blazing away; two sofas faced each other on either side of the fireplace with a high wing-back chair facing the fireplace forming the fourth side of a box. It had a kitchen and a dining room in the main living area. There were three doors on the far end leading to two huge bedrooms with a huge bathroom between them. \n\nThe opulence was no match for her house or even our 'palace' but as hotel rooms went it was almost the equivalent of the suite we stayed in on our Las Vegas trip. I was shocked when Rachel threw herself into my arms and hugged and kissed me. I looked over her shoulder at Alexis, who was grinning at me. Rachel pulled back and said, \"The game was incredible. You were incredible.\" She turned to Alexis and pulled her in for a hug and kiss too. \"You, young lady, were the star of the show. You and your gang were on the 'Jumbotron' screen so many times I thought seventy thousand fans had congregated just to cheer for you.\" Alexis flushed red with embarrassment.\n\nRachel turned back to me and said, \"I'm not a big football fan and I didn't go to a single game all year but a Bowl game is a big deal. I couldn't miss it. No one else associated with the team knows I'm here, so I'm keeping a low profile around the hotel.\" She was buzzing with energy as she paced back and forth in front of Alexis and me. We didn't know what to say so we stayed quiet and watched the whirlwind move around the suite like the 'Tasmanian devil' cartoon character. \n\nWe hadn't got more than five feet into the suite and Rachel, who was moving into the living area, snapped a one-eighty and stepped back toward us and stepped up to me and kissed me again as she ran her hands over the front of my pants. It was now clear what Rachel wanted from us. She pulled back from the kiss and looked hopefully at Alexis. She smiled at Rachel and came over for a three-way hug and kiss.\n\nRachel stepped back one pace and took our hands. Her face was flushed red too but not from embarrassment. She said, \"I'm ready to explode waiting for you two. Too bad you're not in your uniforms. I've masturbated twice imaging you in your uniform and you in your skimpy little neon green tank-top and short shorts.\" She pushed my hand to her left breast. Her heart was pounding like a jackhammer.\n\nWe didn't even make it into one of the bedrooms before she started unbuttoning my shirt. She tugged it down my arms and threw it away behind her. She came in close and kissed my hardening nipples. I could see hers through her bra and her silk blouse. Alex stood back and watched as Rachel started on my pants. She was in a hurry and didn't dwell on any pretense of a sexy striptease. I assisted by kicking off my dress shoes and pulling off my socks by stepping on the toes with my heels. When my pants hit the floor, I stepped out of them and kicked them in the same direction my shirt went.\n\nMy cock was as hard as granite and Rachel cradled it in her hand as she pressed her body against mine. I wrapped my arms around her back and then slid them down the slope of her lower back and over the rise of her ass. She reacted to that by pushing her pelvis against mine.\n\nAlexis came around behind Rachel and unzipped her skirt and eased it over her hips to the floor. She was wearing a sexy garter-belt with nylons strapped in place. She wore no panties. I ran my hands over her ass and she trembled hard. I put my hands on her hips and eased her back so I could remove her blouse and bra. When her bra came off, I gently palmed her hard nipples and she groaned and trembled again. Alexis ran her hand up Rachel's inner thigh to her pussy and then showed me how wet she was. When Alexis dragged her fingertips through Rachel's pussy, I was certain she would cum right there. She was right, she was ready to explode.\n\nAlexis pulled her clothes off and pressed her hard nipples into Rachel's back. Rachel just stood there between Alexis and me. Her eyes were closed as her mouth hung open gasping for air. Her hands were on my waist and stomach as her fingers traced over my ripped six-pack abs and oblique muscles. She lowered her forehead to my chest as I pulled her ass, forcing her pelvis against mine.\n\nAlexis' hand traveled down Alexis spine to her ass and under to her pussy again. Air exploded from Rachel's lungs when Alexis touched her Clitoris. She parted her legs to grant further access. Rachel seemed to be content to do this right there in a standing position. She made no move toward a chair or the bedrooms. I thought it was kind of hot too.\n\nI bent down and grabbed her right thigh and lifted her leg. She offered zero resistance. I bent my knees and guided my cock to her pussy. Her eyes were still closed but she knew what was happening as she began vibrating with anticipation. Alexis looked up at me and said, \"God damn Baby. She's gushing.\" I rocked my hips forward and pushed my cock into her pussy. She bit her lip hard and yelped as I entered her. She opened her eyes briefly but she seemed to be subconsciously somewhere else. I held her leg up and she curled her heel around behind my leg. The leg she had all her weight on was starting to quake and I knew she wasn't going to last long in this position.\n\nI let my cock slowly push up into her and she wheezed air from her lungs as though I was forcing it out with my cock. Alexis pressed her naked body against Rachel's leg to help steady her as she move in from behind Rachel and pressed her nose against my cock and rimmed Rachel's anus. Rachel's eyes burst open from this unexpected attack and her hips fired forward driving her pussy harder onto my cock. She groaned at the double action and said, \"Jesus Christ. You're taking me to heaven.\" Her leg released and she almost went down. Her pussy was nailed on my cock so she couldn't actually fall.\n\nAlexis abandoned Rachel's anus and pushed herself further under us and flicked her tongue on my scrotum before scooping one testicle up with her tongue and pulling it into her mouth. The sensation along with Rachel's pussy sliding on and off my cock was driving me to an orgasm quickly.\n\nAlexis could certainly tell as my balls began pulling up tighter to my body as they prepared to deliver a load of cum. I didn't want to cum that quick so I stopped the fucking motion and stood up straight lifting Rachel, still hanging from my cock like a coat on a coat rack, and walked her over to the dining room table. I nudged a chair out of the way and set her ass down on the table. Her legs hung loosely over the edge. One of her high heels fell to the floor. \n\nRachel lifted her head up from the table and looked at me. She had the lustiest look on her face as she said, \"Fuck the shit out of me Hunter.\" I had to smile to myself because Rachel was a cultivated woman who never spoke like that. 'Lust can bring out the slut in any woman I guess,' I thought. I started fucking her again in long slow penetrating strokes that made her groan with every single one.\n\nAlexis wasn't about to be left out as she climbed up on the table and positioned her pussy on Rachel's lips facing me. Rachel reached up and fondled Alexis' tits as she started first with a flick of her tongue on Alexis' clitoris, which made her eyes go wide, and then started tongue-fucking her pussy. Alexis was grinding her pussy on Rachel's face as I was grinding my cock into her pussy.\n\nI changed up my penetration and pace and started piston-fucking Rachel with half of my cock and her groans changed as she squeeled into Alexis' pussy. My orgasm made itself known again.\n\nSuddenly, Rachel dropped her hands from Alexis' tits and drove them, palms down, to the table top and lifted her pelvis up hard. Her legs shot out parallel with the table top behind me and then dropped back down again before they rose again and locked tight around my ass. She held herself in that position as every muscle in her body seized tight. She stopped tongue-fucking Alexis but it didn't matter; Alexis' mouth dropped open in a silent scream and she went rigid too. I was watching both Alexis and Rachel bursting into their orgasms at the same time. I was close and I increased my pace and groaned out, \"UUNNNGGGGAAAAHHHHH,\" as cum blew up my shaft into a screaming Rachel. She screamed again and again as each shot exploded into her pussy. She was humping all over the table as her orgasm crushed her. I held tight to her hips as I drove my hips forward and back until I was spent.\n\nI looked at Alexis' face which was screwed into an intense mask of what looked like pain. She was mumbling, \"Oh my gawwwdddd. No. No. Not now. Please.\" She was holding herself as rigidly as I had ever seen her. It was like she was dangling on a precipice and was desperately trying not to fall off. Then her face went limp and she groaned, \"Oh Fuck. YEEESSSSS.\" \n\nAlexis nearly drowned Rachel with her 'squirt'. She furiously stroked her clit with her open fingers as her palm rested on her pelvis. Rachel was pinned under Alexis' and to my cock and her own orgasm had taken control of her body anyway. She wasn't going anywhere. She sputtered and coughed many times as Alexis' squirt seemed to go on forever. Near the peak of her squirt, she tipped her body back and rocked her hips up and a long stream of squirt shot between Rachel's tits and down her body to mine. I loved to watch Alexis squirt so I didn't move to avoid the stream. \n\nI finished my climax and left my softening cock in Rachel's pussy until she stopped clamping her pussy on it. Alexis' orgasm subsided as did the squirt and she pulled herself off Rachel's face and sat back in the middle of the table. Rachel sat up and looked down at herself. She was soaked. Alexis' juices were dripping off Rachel's nipples to her lap. Her pubic hair was saturated with Alexis' squirt and her own lubrication. Her body randomly pulsed with after-shocks of her orgasm. My cock was softening quickly and I slowly pulled it out as Rachel watched with a huge smile on her face. \"Jesus Christ that was intense,\" she said. Her hair was soaked. Her face was soaked. She was a mess. I hoped she didn't have any meetings tonight. It was getting pretty late so I didn't think that would be a problem.\n\nI stepped back and helped Rachel off the table. Alexis scrambled down and immediately hugged Rachel. She said, \"I'm sorry about the squirt. I never know when it's going to happen until it happens. Then, all that matters is riding it for all it's worth. Whewwww. What a ride that was.\" I went to the bathroom and came back with a couple towels and everyone dried off.\n\nWe dressed and Rachel pulled on a robe. She hugged and kissed us both at the door. Rachel stepped behind the door and we slipped into the hallway. In the elevator, Alexis pressed the 'five' button and the door shut. The elevator dropped and stopped too quickly to be our floor. I looked at the floor indicator above the door and it read six. 'It was kind of late for any of the coaches to be going out,' I thought. The door opened and there stood a completely bedraggled Hannah. Her hair was a tangled mess. Her lipstick was all over her face. Her clothes were askew and she was holding her panties and bra in her hand. She quickly put her hand behind her back and stepped onto the elevator and pressed the 'four' button. She reeked of sex but so did we. Hannah did everything she could not to look at us. Alexis looked up at me and grinned. I smiled back. Hannah turned to face the doors as they closed. She maneuvered her hand containing her bra and panties to her side to keep them out of sight. Hannah couldn't help being Hannah and she glanced over at us, scrunched up her nose and said, \"You two reek of sex.\"\n\nI was willing to let it go but Alexis - being the cat that she can be - didn't. She responded, \"So do you. Wasn't that the Head Coach's room you went to?\" Hannah stared daggers at Alexis but didn't say anything more and the elevator arrived at the fifth floor. Before the door opened, Alexis said, \"Hannah, you really should wipe the cum out of your hair before you run into someone else.\" Hannah immediately raised her free hand to her hair and wiped all around. She found the glob and wiped her hand on her skirt. The door opened and we stepped out.\n\nHannah held the door and said, \"Alexis. You're supposed to be on the fourth floor. There are rules you know.\"\n\nAlexis looked back at Hannah and said, \"Good night Hannah.\" The door whooshed shut and we continued down the hall to my room. It had been a long day. I was glad that it was over."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-41"
}