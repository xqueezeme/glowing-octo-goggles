{
    "title": "My BIG Dick",
    "pages": [
        "Some folks would say I am blessed, nothing could be farther from the truth.\n\nI am a normal looking man, just over 5'10\", in reasonable shape at 34. Bit of thinning of the hair on top, solid 175# with the beginnings of a middle aged spread.\n\nNice and normal...except.\n\nNature must have had a sense of humor, between my legs hangs a monstrous deformity. I measured one day just to know, the length isn't all that big of a deal, just over 9\" overall from the base to the tip when flaccid. Plus it ain't easy to measure, I had to lay the thing out on the kitchen table to do it.\n\n(Quit fucking laughing, this is serious shit!)\n\nGreat, you would think. Except the girth also measures just over 9\" around, also flaccid, about the same size as an average coffee cup. The head of my penis is even larger, and being uncircumsized makes it even worse.\n\nIn fact I got it stuck in one of Mom's 16 ounce drinking glasses back when I was about 14, (don't ask).\n\nHad to go get Mom to help me get loose, she stuck her finger in alongside with some cooking oil on it and it came right loose with a loud \"POP!\" sound. Mom never said a word, didn't even crack a smile.\n\n(I said quit laughing.)\n\nSo at age 34, I was still technically a virgin. Well, up until just recently, I will get to that part. Impossible? Why women would LOVE the idea of a prong like mine, right?\n\nThe truth is that in the few times when it became apparent that intimacy might be in the cards, without fail completing the act was impossible. \n\nOh, sure, there was the time Maggie Patterson and I were out in the barn, we got to horsing around and I got my hands in her panties, that was fun. Then I got her panties off and she was breathing all funny, I got my pants undone and down around my behind and she reached down and took ahold of me.\n\nWell, she started scooting backwards like a fucking Crab, I was poking away at her and she was scooting backwards. Dang near went off the edge of the haystack into the corral.\n\nFinally I sat up, she looked at me, both of her hands were on me and each one only reached about halfway around. Her eyes looked like saucers, then she let go and just shook her head no, her knees banged together so hard I was afraid Mom would come running to see what the noise was.\n\nNever ever got to feel around with her again after that. Everybody in school looked at me funny after that, too. I finally even quit gym class, they kept calling me \"Horsedick\" all the time.\n\nOdd that before that none of the guys really ever said much, once the girls started yapping it seemed picking on me was everybody's favorite pastime.\n\nI did get me a job one summer cutting grass for Mrs. Melrose. She and her fat husband owned about 5 acres down the road a piece, I mowed the whole thing a section at a time. Pretty good job, by the time I got the last chunk done the first chunk needed mowed, so I was up there maybe 3-4 times a week.\n\nI never saw much of anybody the first week, then I went up to the house to get paid. It was hotter than hell that day, I just had on a pair of baggy shorts and my tennies, like baggy shorts did much to keep me hidden.\n\nI didn't even think of that, I was tired and dirty and sweaty and I wanted my money. Mrs. Melrose must not have been expecting me, she was in the shower trying to cool off I guess, nobody in our neck of the woods had air conditioning.\n\nHer old man answered the door, turned and hollered, \"Sarah! Come and pay the lawn boy!\" then he wandered off, sucking on a can of beer.\n\nI didn't like Mr. Melrose much, he always looked at me like I was going to steal something or kick his fucking dog.\n\nMrs. Melrose came to the door wrapped in a towel, her hair wet, looking all fresh and sweet smelling. I saw her bare legs and about half of one tit that wasn't covered all the way and damned if I didn't start to get a fucking boner!\n\nSome guys can get a boner in baggy shorts and get away with it, in my case I end up with what looks like I have a damned overgrown Zuchinni stuffed in there, no way or place to hide.\n\nHer eyes got all big and funny looking, I turned every shade of red there is, I was trying to look down but hell she was fucking NAKED under that goddamned towel and my dick just got bigger and bigger.\n\nShe finally tore her eyes away, turned to go get me some money, giving me a nice view of her bare ass as she walked away clutching the towel to her front.\n\nOh, now THAT helped lots, now my cock was trying to climb up and out my goddamned pants leg, the situation was getting worse. Mrs. Melrose came back a few minutes later with my money, she managed to slip the fucking towel as she handed it to me, baring one big brown nipple.\n\n\"OOPS!\" she giggled like a schoolgirl, jerking the towel back up. \n\nI got the hell out of there.\n\nI barely made it home, slapped my cock out on the bathroom counter and began rubbing the top of it like crazy until she let fly all over the back of the sink, mirror, and wall. Finally it went back down, I wiped up the mess just as Mom started hollering that dinner was ready.\n\nThe next time I was up there mowing, Mrs. Melrose was out in the yard in a bikini sunning herself. I did my best to pretend I wasn't staring at her, it didn't help that she lay there on her back with her legs all spread out, the tiny bit of cloth barely hiding anything.\n\nI had put on a long shirt so if anything happened I was a little bit hidden. It was still hot as hell, by the third time I passed by where Mrs. Melrose was she had her top undone and was laying on her belly. Looked plumb naked, her bare butt just out there in the damn sun.\n\nNatch I started having trouble again. In less time than it takes to tell, my lawnmower must have looked like it had a trailor hitch on behind.\n\nA BIG trailor hitch!\n\nI was also being careful to do a very good job every time I got close to her, after all, she wasn't looking at me.\n\nThen as I came by again, she sat up, smiled. Titties bare to the world and me, too. I just about sprayed my shorts. Then she waved me over, nothing to do but shut my mower down and go over there, my face red as a Beet but my eyes locked on those fine brown bare boobies.\n\n\"You look hot. Want a cold beer?\"\n\nA cold anything sounded real good, but I was only 19. Besides, I had never had a beer before.\n\n\"Uhhhh..I am only ninetee....\"\n\n\"Oh, Poo! Sit down, relax.\"\n\nI sat down, she handed me a dark bottle of something with German writing on it, I took a sip, managed to not screw up my face too much.\n\n\"Yum! That's good!\" I said, wishing she would look away so I could spit the stuff out. She didn't, I swallowed.\n\n\"You sure have grown the last few years.\" She was looking at my crotch, the end of my cock was threatening to poke up and over my waistband.\n\n\"Take off your shirt, you look hot.\" she encouraged, as I leaned forward trying to hide the wad poking out of me.\n\n\"I..I...\" I stammered, turning even redder.\n\n\"Oh, don't be silly, I have seen men before.\"\n\nWell, she hadn't seen THIS \"man\" before, I had not intention at all of...\n\nShe just reached over and started unbuttoning my shirt, peeled it back and off me, no messing around. I was almost in shock, here she was, wearing what looked like a Violin string with a postage stamp on it, staring at my crotch like she planned on having it for dinner.\n\nI wanted to run but I didn't want to get up. I took another swig of whatever was in the bottle, that was a mistake. It hit my throat and bounced right back.\n\n\"Careful, that's cold.\"\n\nNo, it wasn't so cold, it just tasted like carbonated Pig piss. I set the bottle down, she was almost on top of me, then she WAS on top of me. Her hands were down the front of my shorts before I could try to push her away, my feelings were a mix of terrified, mortified, and lust at the sight of her bare breasts.\n\nWhich now were shoved up against my chest, by the way.\n\n\"Mrs. Melrose!\" I started to protest. She had my cock out of my shorts by now, both hands wrapped around it saying, \"Oh my God. Oh my God.\" Over and over.\n\nSomehow she pulled the string on that thing she wore and it was gone, she raised up, giving me my first real look at a bare pussy. I had always thought that they had hair down there, at least Maggie Patterson did, but Mrs. Melrose didn't have any.\n\nI thought that was funny, she had hair on her head, so why didn't she have hair on her...?\n\nThat thought left me because then she was wiggling and pushing, trying to shove me in her. It just would not go, she did everything she could, rubbing back and forth, getting me all slick as she could to no avail.\n\nI couldn't stop it, I blasted off like there would be no tomorrow, over and over as she held me with both hands and rubbed her pussy on the head of my cock.\n\nFrustrated, panting, she lay back and looked at me. She opened her mouth to say something when her old man yelled \"Sarah!\" from up toward the house.\n\nMrs. Melrose jumped up and ran towards the house, forgetting her suit if you could call it that in the process. I had a pretty good idea what was coming next, so I grabbed my mower and headed off down the street as fast as I could go, him yelling behind me.\n\n\"You little son of a bitch! You bastard cocksucker, you fucking MOTHERFUCKER, come around here again and I will SHOOT you!\"\n\nI was going as fast as I could, expecting bullets to come flying my way any second.\n\nAnyway, I didn't get to mow their grass anymore after that.\n\nI didn't get paid, either, which pissed me off.\n\nI am pretty sure Mom heard about what happened, enough of it anyway because she just smiled and told me to not worry about it when I explained I didn't have the job any more.\n\nIt was the next week Mom took me to see the first Doctor. She sat there in the room with us while the Doctor checked me over, but I wasn't that bashful around Mom anyway. They were talking about surgery to make me \"more normal\" and to be frank I didn't like the sound of that one damned bit.\n\nBut it was OK, the Doctor had no idea at all what to do, he admitted he had never seen anything quite like my penis before. Then he asked me about \"sexual function\" and other stuff right in front of Mom. I had no idea at all what \"sexual function\" even meant other than it does get hard, I told him that, too.\n\nWorse, he asked me if I had had any \"experiences\". Yea, right in front of Mom. So I had to tell him about the time with Maggie Patterson. Then Mom mentioned that there was an \"incident\" with a married woman up the street, Mom always was courteous and didn't say her name but now I knew for sure that she knew about Mrs. Melrose.\n\nThe Doctor just nodded, I was beginning to think EVERYBODY on the fucking planet now knew about that. Then he went off into a long description about how a woman's vagina can handle delivering a baby that has a head THIS big (He made a circle with his fingers like I didn't know how big a fucking baby's head was).\n\nRight in front of MOM, for Crist's sake!\n\nI wanted to say yea, fine but my fucking cock STILL won't go in one of them but I just sat there all pink and bashful and kept my mouth shut.\n\nThe Doctor left, telling me he would have the nurse come in to take some samples for tests. I was thinking needles stuck in my dick, but the nurse came in and got me and led me off to a tiny bathroom down the hall. I was trying to keep the open gap in the back of the little gown shut with one hand while I carried the tiny glass cup she gave me with the other.\n\nShe told me to put my sample in there, so I peed in the cup and finished peeing in the toilet. She came back in a few minutes, I handed her the cup and she got a funny look, then started laughing.\n\nI got pissed off, I had had about enough of being laughed at.\n\n\"What the fuck is so goddamned funny!..uhhh....m'am.\" I blurted.\n\nShe told me she needed a sperm sample, not a urine sample.\n\nSperm? Did she mean? \n\nOh.\n\nWell, I guess she did.\n\nShe gave me another cup, I laid myself out on the counter and started rubbing. Just as I finally came, I tried to catch some of it but it flew all over the counter and into the sink, I only got a couple of drops. Big as the fucking thing is you would think it would shoot straight, but it doesn't.\n\nThe nurse came back, I handed her the cup. She looked at the drop in the bottom with an odd expression.\n\n\"That's all?\"\n\n\"I spilled some.\"\n\n\"Oh, OK. But I need at least 3cc.\" \n\n\"Whatever the fuck 3cc is.\" I thought.\n\n\"I better help you, can you do it again?\"\n\n\"Sure, I think so.\"\n\nShe came in and closed the door, setting the cup on the counter. She lifted my gown, took one look and said, \"Oh my God!\"\n\nI was getting fucking sick and tired of hearing that when people saw my dick.\n\nBut she waded right in, held me up with the palm of one hand and rubbed the top with the other, there is no such thing as stroking when it comes to my penis.\n\n\"Oh my God it's getting bigger!\"\n\nShe just kept rubbing, I was building nicely.\n\nActually, it felt kinda nice.\n\nThe first shot hit her in the face but she grabbed the cup and got the next two spurts. Then she turned her back and I saw what she did, she wiped some of it off her face and put it in her mouth.\n\nI thought that was strange. \n\nI was wondering if she had hair on her pussy.\n\nI got dressed and Mom took me home. She was quiet except for one sentence.\n\n\"I only want you happy, honey.\"\n\nI just looked out the window, I wasn't very happy.\n\nThere was a long string of doctors after that, none of them did much but try to keep from laughing. I did get to give several \"samples\", I was beginning to wonder if that was how doctors did all their fucking testing.\n\nOne nurse was a big fat black woman, hair as white as snow, she talked funny, too. She looked down at my cock hanging halfway to my knees. She just grinned and said, \"Honeychile, you puts any nigga man I knows to shame.\"\n\nThen she was rubbing away at my dick, she laid it right over her bare knee to prop it up, rubbing with one hand while holding the little glass I was getting used to with the other.\n\nThat felt kinda good, actually. \n\nThen she reached down and got a little dab on her finger and stuck it in her mouth and smiled.\n\nI wondered why some women did that? It got me curious so later I rubbed some out and tasted it. It tasted terrible, I spit it out.\n\nWomen are strange.\n\nI went off to college, got a nice degree in business, found a nice job soon after. I got a place of my own, a car, even a boat. Doing pretty good.\n\nI even dated a few times, mostly when some gal would make it obvious they had an interest. Every time we got close to petting heavy and they got their hand on the front of my pants I would sense them freezing up and that would be it.\n\nI even tried once with Martha, a big 6' tall redheaded actress. She was one of those women who had no hair on her pussy, I was beginning to realize that some did and some didn't. We tried to fuck, man did we try. Several times in fact, it simply would not fit. We even got along with that, she would grab me with both hands and lick me, that felt good so I licked her back. She even learned the trick which was to lay my cock on something and rub the top of it, kinda like petting a dog I guess. Sure did make me come, though.\n\nAnother trick she did was to spread her legs and sit on my cock as she used herself to trap me against my leg. She would be rubbing back and forth, and she always came like a firecracker doing that.\n\nIt was kinda fun, actually.\n\nBut she ended up in the sack with the bouncer down at a local nightclub we had been going to, and we more or less just went different directions. He was a big bald headed goon type, and he knew he got Martha away from me. It really didn't bother me too much except for the way he smirked when I was around. One day he happened to be in the john the same time I was in there, he made some wisecrack about did I find a woman yet?\n\nI leaned back a bit from the urinal, knew damn good and well he got a look at my dick.\n\n\"No, but I won't have much trouble!\" I lied, grinning at him.\n\nThe look of shock on his face was priceless as I shook myself off and stuffed the thing back in my pants.\n\nHe didn't bug me much after that.\n\nThere was a long stretch where I didn't have any women around at all. Until I met Tina. She was at the library, she had on a mini-skirt that was just barely there and a halter top that didn't do the job, either. I was watching her, she seemed to know it and spent a lot of time bending over looking at books on the lower shelves.\n\nI admit I like to look and she was just fine stuff...except she was maybe 5' tall, not a bit more.\n\nWhen she came and sat down at my table I was surprised. I was even more surprised when she kept poking conversation at me. It was fun and it was interesting, we ended up dating.\n\nTina was probably wondering why I didn't really make any moves, the fact is, I liked her and if she ever found out about me and the way I am...Well. I liked being with her.\n\nThe whole thing came to a head (that's not a pun, quit laughing) one night when she was at my place. She plopped down on the couch and kissed me. Our first kiss, honest.\n\nNext she was rubbing my shoulders and somehow her top came unbuttoned, I had a nice view of a perfect tiny little breast. So she hopped in my lap, got a funny look on her face. My long shirts worn outside my pants did a good job of hiding me but with her sitting on my lap I had no place to go.\n\n\"Oh boy!\" is what she said... Not \"Oh my God!\"\n\nIn maybe 60 seconds she was naked in my lap and tugging at my clothes and I just went with it, knowing the probable outcome.\n\nI noticed she had hair on her pussy, too.\n\nTina grabbed my hand and more or less dragged me into the bedroom, shoved me down on my back. We poked and probed some but it wasn't going to go inside so she somehow wrapped her thighs around me and squeezed, the head of my cock rubbing right up against her entrance.\n\nIt was as close to actual sex as I had ever had. We were pumping away like crazy, her eyes fluttered and she then she went off, letting out a long squeal as I plastered her with my load.\n\nThen something funny happened, I was still hard and I felt something give. Tina's eyes popped open, she felt it, too. I actually went in a little. I looked down as she moved up on top of me and opened her legs wide.\n\nYES! I was inside, just the head but I was inside! I went off again in a shower of sparks like never before, then finally I faded and went limp.\n\nI had actually fucked! Sure, it was just a little bit, but it was a huge success to me.\n\nI held Tina and hugged her and laughed with joy, she hugged me back. I was now in love, and to top it off I had the cutest, nastiest, sex happy exhibitionist lady it was possible for a man to find.\n\nWe dated regularly after that with several repeat performances and a few times it just wouldn't quite fit, then one day Tina said she had a surprise.\n\nWe were in the living room, I was rubbing her fanny when i felt something, a buzzing and a big lump. I reached down, she had something stuffed inside herself, she smiled and pulled a big black thing that looked like a penis out. It was big, too, at least half as big as my own cock.\n\nThen she pulled out a tube of some kind of oil, rubbed it all over me, me getting bigger and bigger as she did it.\n\nThat felt kinda good, actually.\n\nTina lay back on the bed, I looked at her pussy, all the hair was gone, her lips were gaping, hanging wide open from wearing that big black thing all day.\n\nI slipped up into position, wondering. I pressed, felt resistance, pressed again. Tina took a deep breath, let it go, I felt her relax and I slipped inside. The head at first, then a bit more, then it was like a door opened, I felt myself slide in her more and more.\n\nI stopped pushing when she moaned, not wanting to cause her pain. She muttered, \"NONONO!\" but then groaned and pushed at me firmly.",
        "I was in. All the way in! I looked down, all that was left was the base of my penis, all I could see was my pubic hairs.\n\nThen she was pounding at me, screaming, it was quick, I came in a torrent. She seemed to relax even more at that, then she was orgasming herself, her head tossing back and forth.\n\nWe lay quietly for a long time, sensations I had only dreamed of pouring through me.\n\n\"Oh my GOD!\" she said.\n\nI didn't mind her saying that at all.\n\nMGM "
    ],
    "authorname": "magmaman",
    "tags": [],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/my-big-dick"
}