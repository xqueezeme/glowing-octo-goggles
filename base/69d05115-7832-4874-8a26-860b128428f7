{
    "title": "Surefoot 12: Caitian Holiday",
    "pages": [
        "Caitian Sector, Passenger Liner SS Rhapsody of the Stars, Deck 7, Passenger Quarters: \n\nAs interstellar cruises went, this one had all the fun of a warp core refit. \n\nThough as Kami sat on the balcony she shared with her husband, overlooking the Promenade below, where people shopped and drank and dined, she had to admit, it wasn't the fault of the ship or the crew, but who she was travelling with now. She listened to various conversations below, heard the cheery invites from the ship's crew about various events. \"Hey, they're having a sale on Caitian fashion in the boutique below.\" \n\nCaptain Esek Hrelle sat opposite, his own drink untouched, his body language stiff and uncomfortable, and his eyes not really staring at the holographic sky on the roof above, with its aquamarine overlayed with wisps of white cloud. \"Yeah, I heard.\" \n\n\"Maybe I should pop down and get something for the wedding?\" She grinned at him, her tail twitching playfully behind her. \"Or maybe something just for Captain's Eyes Only?\" \n\n\"Sounds good,\" he muttered. \n\nKami regarded him. As the liner drew nearer to Cait, she could sense the increasing anxiety in her husband, and understood already: it had been decades since he left for Starfleet Academy, against the wishes of his father, who had responded with the absolutely insane declaration of R'Nesikith: making him a Traitor on the Caitian Clan Registry. \n\nIt was something that was still technically done by clans, but only for extreme cases such as murderers, paedophiles and terrorists - not young cubs who choose a different path for their lives than what their fathers wanted for them. \n\nNow, he was returning, albeit to meet her own clan, and to attend the wedding of her cub from her first marriage - and Kami had convinced Esek that, after all he had been through in his life, maybe now was the time to at least try and rebuild something with his father. The old man couldn't still be holding a grudge after all these decades. Could he? \n\nAnd, as if wanting to imitate him, Sasha was wrapped in her own moping. The human stepdaughter from Esek's first marriage had been expecting her lover and fellow cadet Giles Arrington to join them on Cait, but at the last minute decided to return home to his family for his extended leave, rather than accompany her to Cait as originally planned. \n\nIt was a reasonable decision, at least to Kami, given the tumultuous events in his family of late. But it didn't keep Sasha from being disappointed. And she had spent the last four days of the journey from Starbase 154 to Cait mostly in her cabin, sending text and video messages to Giles, and generally soaking in disappointment like a cold bath and ignoring repeated offers to come out and partake of some of the ship's activities. \n\n\"How about some food?\" Kami suggested. \"We'll grab Sasha and head up to the Starjammer Cafe.\" \n\nHe grunted. \"Not really hungry.\" \n\n\"Right, that's it!\" She stood up, reached out and grabbed him by the ear. \"Get up!\" \n\nHrelle made a noise - but did get up, allowing his wife to drag him along to the door connecting their room to Sasha's; she opened it without knocking. \n\nThe enclosure stank of body odour, unwashed clothes, and the sickly-sweet remains of various cocktail drinks and snacks half-devoured in the midst of bouts of self-pity. Sasha had been sitting at the desk in front of the communicator, clad in nothing but underpants, but now sat up and grabbed a shirt to slip into. \"Shit, don't you knock?\" \n\n\"Not if I can help it.\" She guided Hrelle to an adjacent stool. \"Sit down.\" She glared at Sasha. \"You too.\" When the girl remained stubborn, she snapped, \"NOW!\" \n\nAs she complied, Kami started pacing, the pleats of her orange skirt a contrast to the dark brown fur on her limbs and tail. \"Now let's get something straight: tomorrow we'll be on Cait, on my Clanlands, where I haven't been since my husband died, where I'll see my family again and witness my beautiful baby cub getting married. It's going to be stressful. And glorious. Mostly glorious. So I don't need you two dispirited boob punches ruining things!\" \n\nHrelle looked to Sasha. \"Boob punches? Is that bad?\" \n\nSasha winced. \"They're not enjoyable.\" \n\nKami looked to Hrelle. \"Boob Punch Number One: you're a grown man, a Starfleet veteran, you've been through the Seven Hells and came out baring your teeth at those who tried to break you. You are the strongest, bravest, most wonderful man I have ever had the pleasure of knowing. \n\nYou can face your father. You're not the same soul who left home decades ago. Maybe he's not the same soul who shunned you for your decision? You will never know if you don't at least try to see him. And if you don't try, you'll regret it it later. You'll certainly regret not enjoying your time with my family. Especially my Dad and his husband - they like food even more than you.\" \n\nThen she turned to Sasha. \"Boob Punch Number Two: snap out of it. I know it's disappointing that Giles didn't accompany you, but it's not the end of the Universe. He's going to have enough to think about reconciling with his family, he doesn't want to think you're being miserable while you're separated. And a little distance between you two can be good, you've been inseparable since you first let him dock in your shuttlebay.\" \n\nSasha's face screwed up in disgust. \"Thanks.\" \n\nKami looked between the two of them. \"Now here's your choice: you two can either forget your troubles, come on and get happy about the next tenday, or you can continue to generate negative energy... and hurt me. I'm sure you don't want to hurt me.\"  \n\nHer expression changed, grew concerned, fearful. \"Unless... unless you do want to hurt me? You want to see break down?\" Her chin wobbled and her eyes widened with the growing realisation. \"You do, don't you? Oh... Great Mother, you do!\" She dropped to her knees, wailing, her face in her hands. \"P-Please- Please don't do this to me! I beg of you! I BEG OF YOU!\" \n\nHrelle and Sasha never moved, just glanced at each other, before Hrelle spoke over the sobs. \"Her father is a better actor.\" \n\nKami suddenly stopped sobbing, and started scowling. \"Fuck you! I'd have won a S'Ralcha for that performance!\" She returned to her feet, straightening out her blouse and skirt. \"I would have been nominated at least.\" She looked at each of them. \"Well? Do you agree, or do you need to go to Sickbay first to get the sticks removed from your asses?\" \n\nFather and daughter looked at each other again, before shrugging, Hrelle declaring, \"Okay. At the very least, I can go say a prayer at my mother's Marker. I'm a big boy, what's the worst that can happen if I see him?\" \n\n\"Exactly.\" Kami looked to Sasha expectantly. \n\nThe girl sighed. \"Okay. I mean, I've wanted to visit Cait a lot longer than I've known Giles. Be a shame to ruin it now. And he and I can always come back together, and I'll know all the great places to go.\" \n\nKami smiled. \"That's my girl.\" At a knock on the door, the Counselor turned and swished up, opening it. \"Rrori?\" \n\nThe cadet, the only other Surefoot crew to accompany them to Cait, stood there, wearing... nothing, just a plush red towel hanging like a snake around his shoulders, and a smile on his face. \"Hey, who wants to join me on the sundeck to get acclimated to the Caitian heat?\" \n\n\"Whoa,\" Sasha muttered, looking away. \"You're gonna get arrested for indecency, Meow.\" \n\nHrelle smirked. \"No, we're in Caitian space now.\" He glanced at his wife, and then shrugged - and stripped out of his own clothes. \"Okay, Mr Rrori, let's go.\" \n\nSasha's jaw dropped. \"Dad!\" \n\nHe looked over his shoulder, his tail wagging as he enjoyed her chagrin. \"What? Better get used to it, Runt of the Litter. I'll go get us some towels.\" \n\n\"He's right, Sasha,\" Rrori confirmed. \"Nudity is...\" But then the young cub was distracted as he looked down at Hrelle's groin. \"Um...\" \n\n\"Something wrong, Mr Rrori?\" Kami asked, amused. \n\n\"Hmm? No, not wrong, Counselor. I just didn't realise that the Captain was so... gifted.\" \n\n\"You have no idea.\" Kami began undressing herself. \"You're not feeling inadequate, are you? We don't judge on such things. Yours is... cute. Like a furry cocktail sausage.\" \n\n\"Oh my God, enough about their schlongs.\" Sasha shook her head and turned away. \"I'm putting on a bikini.\" \n\n\"You'll be overdressed,\" Hrelle informed her, carrying a towel for himself and his family. He noticed Rrori staring again. \"Are you coming, cub?\" \n\n\"Um, yes, sir.\" Rrori managed to discreetly slip his own towel off his shoulders and coincidentally carry it in front of him. \n\n* \n\nThe liner arrived on schedule in orbit around Cait, and the only real delay of note was at Customs, when there seemed to be a question between the Customs officials when Hrelle was identified. He clutched his shoulder bag strap anxiously as he watched their reactions, and knew what was causing it. \n\nKami, standing behind him, leaned in and put a hand on his forearm. \"Calm down, your tail is smacking Sash and me.\" \n\n\"Sorry,\" he muttered, feeling himself blush beneath his mahogany fur. It had been overwhelming at first, being back on his homeworld: the gravity, the atmosphere... and especially the collective scents of hundreds of his people together in the spaceport. Having grown sensitive over the years in their absence, it put him on edge. \n\nAnd now there was this... he knew it would be because the Clan Registry would have flashed up his Status, and now they were probably checking to make sure he wasn't a spy or a fugitive on the run or- \n\n\"Captain Hrelle,\" one of the young officers, a male with russet-brown fur and rounded ear tips, said, approaching. \"You're Captain Sherresek Hrelle?\" \n\n\"Yes,\" he snapped in reply. He was going to have to explain himself here, wasn't he? In front of all these people, he was going to have to explain what his status was all about. Damn you, Dad, for putting me through this shit- \n\nThe young cub drew up, his eyes filled with... adulation? \"Captain! Thank Mother I was on duty when you arrived! It is an honour to meet you, sir!\" \n\nHrelle blinked. \"Excuse me?\" \n\nThe cub was almost gushing with excitement. \"I can't wait to tell my father! He was a Second Engineer on the Calpurnia when the Orions attacked! They were almost destroyed, but you swooped in with the Furyk and saved all their lives! And you've been an inspiration to so many of us ever since!\" \n\nHrelle couldn't have been more stunned if he'd been hit with a phaser beam. He almost expected it to be some sort of elaborate prank being played on him - until he felt the buzz of excitement from the surrounding Caitian passengers and spaceport personnel as word of his identity spread. \"Oh, uh, it was my pleasure. I remember the Calpurnia, she was a tough ship, and crew. Hope your father got through it okay?\" \n\nThe cub nodded, beaming. \"Retired last season, but he still talks about it-\" His bronze eyes lit up. \"Can I get an image with you to send to him? It'll only take a second!\" \n\nFeeling self-conscious and embarrassed by the attention, he almost politely refused - but Kami beat him to it, leaning in and replying, \"He'd love to!\" \n\n* \n\nThe next fifteen minutes were spent near a colourful mural wall in the spaceport, as the cub was joined by others, Caitians of all ages, looking for images to take with him, or just to shake his hand. \n\nThe ones with the young cubs were the most irresistible, the little ones with the wide eyes wanting to be picked up and imaged with him by their proud parents. \n\nMeanwhile, Kami, Sasha and Rrori stood with their bags nearby, looking thoroughly amused. \n\nFinally he joined them, growling good-naturedly at his wife. \"Thanks for that.\" \n\n\"My pleasure.\" She smirked. \"Did I see one female get a clipping of your tail fur?\" \n\n\"Uh, yes.\" He coughed. \"I thought it'd have been rude to refuse her.\" \n\n\"Well I must say, that level of attention was most envious,\" Rrori noted. \"I hope to achieve something approaching that amount of admiration for something other than my remarkable good looks and sex appeal.\" \n\n\"I still don't get it,\" Hrelle admitted, bemused. \"Why such hero worship? I run a little cargo ship and train some cubs. My glory days are long past me.\" \n\n\"That's not the point, sir,\" Rrori pointed out, smiling. \"If I may be so bold. You're one of the few of us to make it to command a ship in Starfleet: you, M'ress, Sa'Rahn, Hnoaw. Representation matters. And speaking for myself... I count myself among the most fortunate ones to be serving under you.\" \n\nHrelle was in danger of getting overwhelmed by all the unexpected praise. \"Thank you, Mr Rrori.\" \n\nKami moved in and hugged the young cadet. \"Awwww, you're not just a pretty face, are you?\" \n\nRrori extricated himself, looking embarrassed by the show of affection. \"No, Counselor, I'm an exceptionally attractive one. And my subshuttle arrives in five minutes - if you all will excuse me, please?\" \n\nHrelle waved him off. \"Go on, cub, give our best to your clan! See you back here in a tenday!\" \n\nThey watched him depart, before Hrelle noticed Sasha standing there grinning. \"What's up with you, Runt of the Litter?\" \n\n\"It's good to see some of the rest of the Universe agree with what I always thought about you. Now, are we going by subshuttle or transporter?\" \n\nThey chose the latter; the lines for them were longer, but they wanted to arrive at their destination before nightfall, local time. As they waited their turn, Hrelle thinking internally how spoiled he was having a transporter at his disposal whenever he needed it onboard the Surefoot, Sasha asked, \"Dad... why did that Customs guy call you 'Sherresek'? Did he say it with an accent or something?\" \n\nHe shifted in place. \"No, 'Sherresek' was my birth name; it's probably still on the local Registry. I changed it to 'Esek' for the Starfleet records when I joined the Academy.\" \n\n\"I thought it was the diminutive,\" Kami noted. \"Why change it? 'Sherresek' is a lovely sounding name.\" \n\nHe bristled. \"It's also my father's name.\" \n\n\"Really? That's unusual for Caitians, causes too much confusion in the Registry.\" \n\n\"Yes. It was part of his overall desire for me to follow in his footsteps and take over the clan's shipping business. Let's forget about it; I've answered to Esek now for decades.\" He wanted to keep thoughts of his father out of his head for as long as he could. \n\n* \n\nHrelle didn't realise that though he'd been on Cait for an hour, he hadn't stepped outside until they beamed into the local transporter station in the Csirl Province in the Southern Hemisphere, where it was mid-afternoon, and they walked out for an autotaxi. Their sun was small and white but strong, burning bright as it began its descent into the southwestern horizon. The air was thin and dry, though not to Vulcan standards, and it made him pant, and wish once again that he could sweat like humanoids. \n\nHe glanced at Sasha, clad in baggy shorts, vest, boots, shades and a baseball cap. She wore a canteen at her side, and he knew she had taken a course of Nanites on the liner before disembarking, ones that would regulate her body's intake of UV, but still he had to ask, \"You okay, Sash?\" \n\nShe nodded, glancing around. \"This is lovely. Where does your clan live, Kami?\" \n\n\"Thirty minutes' ride from here, near the ocean; you think this is lovely, wait 'til you see it out there.\" \n\nHer boasts proved to have merit, as the autotaxi took them along a deserted road, the transparent bubble offering an unobstructed view of endless savannah, occasionally broken with trees, cultivated crops, rock croppings, and the main houses of other clans, while in the distant, craggy mountains hugged the horizon, looking more ephemeral than real. \n\nHrelle stared out in longing. He had forgotten how beautiful his homeworld was. He talked longingly about it for decades, but never once thought about returning even for a visit, knowing what awaited him up north, in the R'Trerah Archipelago- no, don't think about that now... \n\nKami's clan's house was large, sprawling, with smaller buildings flanking it, interspersed between large, elaborate gardens, colourful displays, fountains and an area set aside for the Clan's Memorial Garden, the place where the ashes of their dead were scattered and markers raised to honor them. He watched Caitians sitting or lying about, sunning themselves, eating, or playing in and out of the water sprays from the fountains - most naked or wearing just belts. \n\nA group of adults were sitting on the shaded veranda by the front door, but now rose and approached as the autotaxi pulled up and deposited its passengers. One of the adults, a tall, stout male with ash-grey hair and huge arms, quickened his pace, his tail swishing excitedly from under his lime-green kilt as he boomed, \"MY LITTLE NOVA! SHE'S HERE!\" \n\nKami dropped her bag and raced up to him, and Hrelle immediately recognised the man from years before, watching the actor fighting Ferasans (or at least, other Caitian actors in Ferasan makeup) in such popular action vivids as the Clawback series, before moving into more dramatic and comedic roles, and then retiring entirely. \n\nHe forced down his own hero worship as Kami squealed like a cub and cried out, \"Papa! Watch your heart!\" \n\nAnother grey-furred older male, less bulky but with a wicked glint in his eyes, followed up. \"She's right, you old cat, put her down, I'm your stunt double, remember? Besides,\" he added, holding out his own arms. \"She's my Little Nova, too.\" \n\nKami embraced him as well, beckoning Hrelle closer. \"Esek, this is my Papa Mi'Tree, and my other Papa, Bneea.\" \n\nThey all hugged, Mi'Tree lingering as he murmured to Hrelle, \"So... you're the one who's been defiling my sweet innocent daughter?\" \n\n\"As much as possible, yes, sir.\" \n\n\"Good, good! She deserves it!\" He patted Hrelle's muscular arms and asked, \"Now, which one was your favourite?\" \n\n\"Sir?\" \n\nThe older male winked knowingly at him. \"Come on, I've never met one your age who didn't have a favourite Clawback vivid.\" \n\nHrelle felt himself blush under his fur as he admitted, \"Clawback 5: Caitian Justice.\" \n\nMi'Tree chuckled. \"Good choice! An underrated entry in the series. It gave me a wonderful soliloquy towards the end-\" \n\n\"Before you start stroking yourself, Papa,\" Kami butted in, \"Maybe you'd like to meet Esek's daughter Sasha?\" \n\nMi'Tree stepped back, brightening as he turned towards the young human. \"Oh yes, indeed, I-\" Then he made a show of scrutinising her. \"Hmm, it's a good Caitian name, but she's rather furless - and very tailless too. Was she in some sort of accident?\" \n\nKami smirked, her arm still around Bneea as she explained to Sasha, \"That's his way of being funny, pretending he doesn't already know you're human.\" She nudged her other father. \"You still explaining his jokes?\" \n\n\"All the time.\" \n\nMi'Tree ignored them as he approached Sasha, extending his right hand. \"A pleasure to meet you, young lady.\" \n\nBut Sasha frowned and stared at it. \"Are you trying to insult me?\" \n\nHe dropped his arm again, confused. \"W-What? I don't understand-\" \n\nThen she rushed into his arms, laughing and hugging him tightly. \n\nHe looked over his shoulder at an amused Hrelle and Kami and chortled, \"Ooh, I like this one!\" Then he nodded past Kami. \"Shouldn't you say hello to your mother, Little Nova?\" \n\nKami brightened, turning along with Hrelle at the approach of a large-frame older female with ash-white spotted fur and the dark blue uniform of someone from the Caitian Planetary Navy. Kami raced into the woman's arms. \"Mama!\" \n\nThe females embraced, as Hrelle stared with a growing stupefaction. No. No, it couldn't be... As he drew closer, confirming the rank on the female's uniform, he realised that it was true. He knew the woman's name, but just assumed it was a coincidence. Wouldn't Kami have warned him beforehand that her mother was- ",
        "\"Ma'Sala,\" Kami announced, pulling back from her tall, sturdy-looking mother. \"This is Esek. Esek, this is-\" \n\n\"Fleet Captain Ma'Sala,\" he finished breathlessly, swallowing. Mother's Cubs, he was going to get his wife for not warning him! He held out a hand, suddenly understanding how all the people at the spaceport felt meeting him. \"This is an honour, Ma'am! Such an honour!\" \n\nShe never took his hand, just grunted, before looking back at her daughter again. \"Your cub is upstairs in his old room, rutting with his betrothed. Go interrupt them, they need to save some strength for the wedding.\" \n\n\"My cub!\" Kami beamed like a child on her birthday and rushed towards the door. \"MIROW! GET OFF THAT POOR GIRL, YOUR MOTHER'S HERE!\" \n\nHrelle chuckled - but then felt the temperature drop once more when he was alone with Ma'Sala, who bypassed him to stride up to Sasha, regarding the young girl. \"So... you are the one, the only human who reached the Fourth Tier in my people's fine martial art of K'Gresirr?\" \n\n\"Yes, Ma'am.\" \n\n\"And you kicked my daughter in the kussik when you two had an argument?\" \n\nSasha blushed. \"Um, yes, Ma'am. Though in my defence, she gets annoyingly smug when she's in the right.\" \n\nMa'Sala grunted - but put an arm around the girl. \"I know.\" \n\nHrelle watched them move away, as pleased at Sasha's reception from the female as he was bewildered by his own. He couldn't recall offending her. \n\nHe was startled by the big furred hand on his shoulder, as Mi'Tree drew up. \"Hmm, she likes you, my boy.\" \n\n\"She does?\" he muttered, still looking in the direction of his daughter and bond-mother as the latter introduced Sasha to a pack of very young cubs, who had been drawing silently closer throughout, fascinated by the presence of the human. \n\n\"Oh, yes.\" The retired actor paused and shrugged. \"Well, I might be exaggerating...\" \n\n\"What in the Seven Hells did I say or do?\" \n\nBneea joined them, looking sympathetic. \"She tends to keep her motivations to herself, but I suspect it's simply because... well, you're not Kami's first husband; Ma'Sala was very fond of Rmorra. We all were.\" \n\nHrelle growled, understanding but still frustrated. How in Mother's Name was he meant to compete with the memories of the dead? \n\nAs if reading his mind, Mi'Tree leaned in and advised, \"Don't let her walk all over you. Stand up to her. It might earn you a swipe on the snout, but she'll respect you more for it. Now come, my Bond-son, let us introduce you to the rest of the clan, and take our place preparing the evening meal, now that all the Shall clan has finally gathered.\" \n\n* \n\nThe cubs practically dragged Sasha through the gardens and towards a collection of trees, all the while barraging her with questions: Where's your fur? Why is your face so flat? How do you eat with flat teeth? How do you fight without claws? How can your Mama tell when you're sad without a tail? \n\nSasha, who remained curious as to the cool reaction her father got from Kami's mother, was nevertheless swept up with the collective enthusiasm of the young ones, who had adopted her completely and thoroughly as one of them. It also made her realise how few citizens of the Federation actually had a chance to meet people from other worlds - and how fortunate she was to encounter so many as a cadet in Starfleet. \n\nThoughts of Starfleet returned her to Giles. Damn, she didn't want to keep thinking about him, but she couldn't help herself. \n\n\"Are you okay?\" one of the cubs asked. \n\n\"Hmm? Oh yeah, I was just thinking of someone I wish was here.\" She took off her cap and ran her forearm across her brow; the humidity here was fierce. \n\n\"Your skin's crying!\" another cub declared with alarm. \"What's wrong?\" \n\n\"What? No, no, nothing's wrong, this is called sweating, it's what humans do when they get too hot and we have no fur to keep us cool.\" \n\n\"Let's go swimming then!\" the oldest of the cubs suggested. \n\nAs a pack they declared their enthused agreement to the idea - and Sasha had to admit it sounded good. \n\nThey led her through a grove of trees growing a sweet-smelling red-green fruit, to the edge of a wide blue ocean, lapping white-crested waves at a thin white ribbon of beach that stretched for kilometres in either direction. The crash of the waves was momentarily eclipsed by the squealing cubs as they raced up along a wooden dock and cannonballed in, more than one of them beckoning, \"Come on, Sasha!\" \n\nShe grinned, for a moment wishing she'd brought a bathing suit with her - then acknowledged that none of the cubs wore any clothes, let alone bathing suits, and she started stripping off, wondering about the questions they'd have when they saw a naked human. \n\nHer initial embarrassment was swept away by the rich coolness of the water as she went under - marvellous! She burst up through the water and laughed, before beginning to splash the cubs around her, making them squeal and splash back, before stretching her limbs and swimming a few metres out and back. She had stopped exercising in the past week since the argument with Giles, and between that neglect and the slightly higher gravity on Cait, she was feeling it now in her muscles. \n\nSuch was her distraction that she never noticed the adult figure sitting on the side of the dock, watching her approach, until Sasha was almost there. \"Oh, sorry!\" \n\n\"For what?\" It was a female, a little older than Sasha, with a remarkable coal-black fur but with a lighter patch circling her right eye. Her mane was also almost non-existent compared with most other Caitian females, just a tuft of fur on top of her head like a male's; with that and her muscular frame, only her breasts would distinguish her gender, at least to Sasha's eyes. \n\n\"I'm, uh, not sure.\" Sasha couldn't remember seeing a Caitian with such a dark colour before, but then she only ever saw a handful in her life before today. \n\nThe female shrugged. \"Well, I'll take the apology anyway, and save it for some time when it's deserved.\" Her clothes were piled beside her, and her feet only just reached the water; with a shift, she could kick at it, and did. \"Looks cold.\" \n\nSasha rose up, holding onto the edge of the dock, as the waves shoved rudely against her on their way to the beach. \"It's not so bad.\" \n\n\"Your nipples tell a different story. Unless you're just excited to see me?\" \n\nSasha glanced down, blushed and dipped just enough under the water to cover her breasts. \"I, ah, it's the water. Humans are-\" \n\nThe female smiled. \"I know about humans, I work with them all the time in Starfleet.\" \n\nSasha's interest perked. \"You're in Starfleet? So am I.\" \n\nThe female nodded now, adding with a smirk, \"I know all about you, Sasha Hrelle. Aunt Kami won't stop singing your praises to my Mama. I think our mothers have some sort of rivalry going on with us.\" \n\n\"Kami's not-\" Then Sasha stopped herself, smiling. \"Probably, yeah. But you haven't told me your name. You have the advantage of me.\" \n\n\"The name's C'Rash, officially Lieutenant C'Rash Shall, of the USS Vigilant.\" She looked down on the girl and winked. \"And you'll know when I have the advantage of you.\" \n\nSasha felt a strange reaction - was they flirting? - but shook it off. \"So, Lieutenant Shall, are you getting in the water, or are you just gonna sit there all day looking pretty?\" \n\nC'Rash regarded the human - before propelling herself off the side of the dock and diving into the water in a perfect pose - even her tail was absolutely straight behind her. \n\nThen she disappeared. \n\nSasha glanced around, expecting her to emerge any second now. Any second now. Any- oh God, did C'Rash misjudge the depth of the water and hit her head on something- \n\nShe felt the hands grab her ankles just before she was pulled under, managing to hold what breath she had in her lungs. \n\nSomeone was gonna get their ass kicked... \n\n* \n\nHrelle felt almost overwhelmed by the sheer numbers gathered in the main hall for evening meal, with the younger members of the clan happily sitting on the floor when all the places at all the tables had been taken by the older ones. The huge open areas let in the cooler night air, while sonic screens kept out the insects, and music played in the background. It was noisy, chaotic- and supremely happy. And a world away from the meals he remembered as a cub: his had been a small clan to begin with, scattered throughout Cait, rarely assembling except for sombre events such as his mother's death when he was six. \n\nHe looked across at Kami's firstborn Mirow: a handsome male with golden-brown fur and a charming glint in his eye as he made sure his partner-to-be Ptera of Clan Mroara-Lnee was cared for, the love between them evident. Nearby, Mi'Tree was regaling the table with an anecdote about meeting the First Minister at the premier of his final vivid, while Bneea rolled his eyes and corrected every seeming error in the telling of the tale; the two males had met when Bneea acted as Mi'Tree's stunt double, and had been inseparable for decades. \n\nPast them, Ma'Sala ate in silence, acknowledging people only as they passed by or offered another course of meats and delicacies. \n\nHe leaned in closer to Kami, who had somehow managed to stop hugging her son long enough to detach herself and devour an entire plate of fried shuris sticks on her own, a repast that would have earned a rebuke from her if it had been in front of him. He made sure his voice was as low as it could get. \"Why didn't you tell me your mother was who she was?\" \n\nShe licked her lips and tossed another bone to the edge of the plate. \"It was never important.\" \n\n\"Not important? She commands the Mother's Fury! She led our forces to victory in the last Ferasan War! She's a legend!\" \n\nKami shrugged. \"My Mama was the one who birthed me, suckled me, and would come home, bring me gifts and tell me stories of her adventures in space. That was all that was important. Still is.\" \n\n\"She doesn't like me.\" \n\nShe looked at him and smiled. \"She will.\" \n\n\"Your fathers think it's because she's comparing me to Rmorra.\" \n\nHer expression sobered at that. \"You want me to have a word with her?\" \n\n\"Mother's Cubs, no!\" He shook his head. \"Forget I said anything, she'll warm up to me.\" He looked away. \"I'm very charming.\" \n\nShe laughed at that, reached out, pulled him close and nipped his ear. \"Finish your tsurista, they're an aphrodisiac.\" \n\n\"Will I need it?\" he asked, sniffing the air, catching all the scents of arousal among the adults; it was a tradition to forgo using Seasonal suppressants during bonding ceremonies. It was... heady. \n\nHis attention turned to Sasha, sitting among the young adults, beside a black-furred female who was talking closely, indicating various dishes and features around the hall. \"Who's that with the Runt?\" \n\n\"My niece C'Rash. She's in Starfleet too. Security.\" \n\nHrelle nodded. \"I'm glad she's made a friend so quickly.\" \n\nKami looked up at him again. \"You think that's just friendship?\" \n\nHe stared at the cubs, frowning. \"You think it's more?\" \n\n\"It could be.\" \n\nHe grunted, not expecting this side of her. \"What about her and Giles?\" \n\n\"What about them?\" \n\n\"Come on! They're a couple! She shouldn't be sniffing around other people!\" \n\n\"Is that right, Counselor?\" Kami asked sarcastically. \"They're not married, not bonded.\" \n\n\"That's different, they're human, with different customs and attitudes about fidelity. Perhaps I should go talk to her-\" \n\nShe reached out and patted his hand. \"Perhaps you should just sit, eat, drink, and mind your own business? This is something Sasha needs to work out herself.\" \n\n* \n\nAt their own end of the room, Sasha was tucking into some tsuristas, a seafood delicacy that reminded her of Terran crabsticks. \"So, Ma'Sala, Mi'Tree and Bneea are all married? But Mi'Tree and Bneea are bonded? What's the difference?\" \n\nBeside her, C'Rash was pouring them both some more wine. \"There are multiple levels, both legal and chemical, depending on one's role in the clan and where ties may need strengthening; as Matriarch, Ma'Sala is married to a couple of others here as well, some she's had sex with on and off, including Mi'Tree and Bneea in order to get pregnant with Kami, after she persuaded them to join our clan. They were already a married couple for some years.\" \n\nSasha nodded at that, already seeing the multiple levels between her father and Kami, when they first chemically bonded, their pheromones adjusting to make them 'unavailable' to other Caitians, before they officially married in a Starfleet ceremony. \"And they have no problem with being a gay couple married to a female?\" \n\n\"Gay?\" \n\n\"Sorry, that's an old human term for being homosexual.\" \n\nOne of the older males sitting opposite her and listening laughed. \"What are you talking about?\" \n\nC'Rash leaned in close to a confused-looking Sasha. \"Caitians make no distinctions, and have no labels for, sexual preference or identity; most of us are what you might technically call bisexual, even if we end up bonded to one or more others.\" \n\n\"Oh. And which of them is Kami's actual Dad? Mi'Tree, or Bneea?\" \n\nC'Rash stared. \"Both.\" \n\n\"No, I mean- did they ever run a DNA test to see which one might be her biological father? Wasn't Kami or anyone else curious?\" \n\nThe female played with her wineglass as she regarded Sasha. \"Have you noticed how no one's questioned your presence as a human here? About your relationship with Esek Hrelle? Not even the cubs; though they're naturally curious about you being human, they haven't asked what you're doing here. \n\nIt's not because they already know. It's because they don't have to ask. When a Caitian enters a room with you and Esek in it, their senses tell them immediately who you two are: a father and his cub, bonded over many years. The details are generally not important if you're not keeping the Clan Registry, and don't need to be spoken aloud, any more than someone needs to comment that you, for instance, have blonde hair... and a gorgeous pair of breasts.\" She smiled. \"It's obvious.\" \n\nShe continued as Sasha blushed. \"Kami was raised by the two males as her fathers. She was also raised by Ma'Sala, and by my mother, and by other older males and females - just as I was. Depending on the circumstances, you can be a Kin-daughter, a Bond-cub, a Kith-sister, sometimes multiple roles to the same person... it gets complicated, and the language isn't always adequate.\" \n\n\"No shit.\" Sasha leaned back on her elbow, sinking into the cushion beneath her and somewhat ruining the effect she was trying to generate. \"And how would you describe the two of us?\" \n\nC'Rash's gaze narrowed. \"Desperately in need of going off with some of the other young ones drinking and dancing. What do you say?\" \n\nSasha grinned. \"Lead the way.\" \n\n* \n\nThere was an amazingly loose structure to the evening as much as the day, with the clan going to bed, staying up, singing, eating, talking and laughing and rutting as they pleased - where they pleased. No one minded, it was all a part of the celebration of family, love and life... in other words, a typical Caitian clan gathering. \n\nAnd it continued to remind Hrelle just how different his own upbringing had been, on the Archipelago. How lonely. Really, it was a wonder that he hadn't deserted sooner. \n\nAs the evening continued, he often excused himself to help carry some of the smaller sleeping cubs up to the rooms they were sharing, before returning to find himself in the midst of another conversation with another member of Kami's clan, and he'd often look across to make sure his wife was okay. He needn't have worried; she was still clinging close to her son, taking in his scent a thousand times, reinforcing her memory of him, as well as that of his bride-to-be. \n\nAnd then he'd find himself drifting off, thinking of the time when Sasha would move on with her life, and leave him behind. \n\nMother's Cubs, he told himself, you are a maudlin old son of a bitch . \n\nIt was dawn when the group began to die out, and even the most effusive personalities were flagging. Hrelle found Kami and gestured to her. \"Come on, Beloved. Good night, Mirow, Ptera.\" \n\n\"Morning, you mean.\" Mirow drew up and hugged him. \"And thank you.\" \n\n\"Thank me? For what?\" \n\nThe cub smiled. \"For saving Mama from a life of wearing out her bedside toys.\" \n\nHe dodged a smack from his laughing mother. \"Cheeky little shit!\" To Ptera she advised, \"Watch him, he thinks his charm and good looks will let him get away with anything!\" \n\n\"Yes.\" The young female laughed, her accent posh for a Caitian. \"He's probably right.\" She took Mirow by the arm. \"Come along, my handsome male...\" \n\nKami sided up to Hrelle and copied the gesture. \"Yes, come along, my handsome male...\" \n\nThey were on their way to their assigned rooms when they ran into a collection of older cubs ascending from an adjoining staircase - led by C'Rash and Sasha. They appeared very drunk, very dishevelled, and barely managing to keep quiet. A flushed-looking Sasha, wearing only a sarong and holding onto C'Rash, looked at Hrelle and Kami, her unfocused eyes widening. \"Oh shit, look out! It's Fat Cat and Lil' Kitten!\" \n\nThe cubs collapsed into titters as they swayed and held onto the sides of the hallway for support. Hrelle had never seen Sasha in such a state, and couldn't suppress his shock... and amusement. \"Care to explain yourself, young lady?\" \n\nSasha bit her lower lip, clearly and inadequately trying to control her giggling. \"I don't know if I can, Captain Dad, Sir. I'm a complicated young adult.\" \n\nOne of the young males behind her laughed. \"That's our Tailless Cousin! She downed a full pitcher of Rula punch herself, and she's still standing!\" \n\nC'Rash drew up, smiling and making shooing gestures at the older Caitians. \"Run along to bed, Fat Cat, we're only having fun.\" To Kami she added, \"See if you can work the tension out of him.\" She reached out and patted his stomach. \"Some of this too, while you're at it.\" \n\nHrelle glared at the young female now. \"Didn't the Academy teach you how to show respect to a superior officer?\" \n\nC'Rash chuckled. \"Claws in, Esek. This is a clan gathering; the only one who can pull rank here is our Matriarch.\" \n\nBut Sasha waved her back. \"Hold on, friend, I'll deal with this.\" She swayed a little as she drew up to her father, gathered up her remaining stability and said, in a childish voice with big wide eyes, \"I'm sorry, Daddy.\" \n\nHer friends broke down with laughter. She turned to them and snarled, \"Shut up! This always works with him!\" Then she returned to face him, eyes wide again as if he wouldn't have heard her. \"I'm very, very sorry.\" \n\nIt was all Hrelle could do to keep from laughing himself as he announced sternly, \"Good night, Sasha.\" \n\nWhen they were in their own quarters, Kami shucked off her skimpy clothes and approached him. \"You're not going to cause them any trouble, are you? My niece is right; only the Matriarch can pull rank at these occasions.\" \n\nHe embraced her, hugging her tightly. \"Don't worry, it was hilarious, and I'm in no mood to piss off your mother any more than I have somehow already done. Now... how about helping me with this tension?\" \n\n* \n\nIn their own sleeping quarters, Sasha was grateful for the salmon-pink morning illumination streaming in from the high, narrow windows, having learned in the dance clubs and bars they had visited in town that Caitian lighting was minimal compared to humans', allowing for superior Caitian vision. More than once, she had to hold onto C'Rash. \n\nWhich wasn't a bad thing. \n\nEveryone was stripping off what little they wore and collapsing onto the beds, in twos or more. Sasha was giggling as she practically fell backwards onto the mattresses after finally managing to undo a truculent sandal heel strap. She giggled, staring up at the stone ceiling. \"Oh, Dad's gonna kill me later.\" ",
        "C'Rash drew up onto the bed over her, her fine furred skin brushing against Sasha's own smooth, pale belly and breasts and making her gasp with how sensitive she felt. \"You're an adult. You even have - gasp! - sex. No Caitian our age would let our parents talk to us like that.\" \n\n\"Oh, he's not that bad.\" She made a sound. \"I'm buzzing. I don't wanna sleep.\" \n\nC'Rash leered over her, tail swishing playfully over her. \"I can think of other things we can do.\" \n\nSasha grinned. \"Whatever you say.\" \n\n\"'Whatever I say'. I like your philosophy.\" And then C'Rash bent down and began licking and nipping around Sasha's throat, and purring heavily between nips. \n\nSasha gasped, feeling... feeling... \n\nSleeping... \n\n* \n\nThoughts of visiting home had preyed on Hrelle almost from the moment he woke up the next day, and continued as he brought Kami and himself breakfast from the running buffet the house kept going through the day as people awoke and served themselves. There was activity; the younger cubs were out playing in the gardens, while many of the adults busied themselves for when members of Ptera's clan arrived throughout the day and evening, necessitating further shifts in accommodation and erections of shelters outside. \n\nStill, he found excuses to not go, until he discovered Kami and Mirow sitting on the floor of the cub's room, beside a large open crate. He saw the distracted, pensive look on Kami's face. \"What's wrong?\" \n\nShe held a framed photograph, never taking her eyes off of it. \"It's Rmorra's things. I had them shipped back here after he died. I haven't seen them in years.\" \n\nHrelle understood completely. He remembered what it was like being reunited with Hannah's possessions after they had been shipped back to Earth. He remembered weeping like a cub as he rediscovered and recalled some of the most mundane items that had been saved, sparking shards of memory to blossom. \n\nHe drew closer, looked over her shoulder at the image in the frame: an attractive n young male, looking remarkably like Mirow, but clad in the old-fashioned Starfleet uniform of brick-red jacket and black trousers, standing proudly beside a young Kami as she held an infant Mirow. \"Very handsome.\" \n\n\"Yes,\" she agreed, setting aside the photograph and reaching inside the crate. \"Yes, he was. With such broad shoulders, and...\" Her words trailed away as she produced a vacuum-sealed plasnene case, whose transparent skin revealed a carefully-folded man's maroon shirt. \"Mother's Cubs...\" \n\nHrelle understood what it was immediately: a Paraquary, a memento of a deceased loved one kept hermetically contained to retain their scent; preserved properly, it could trigger an intense scent-memory in a Caitian, even after many years, even more intense than seeing or hearing the deceased on a recording. And obviously someone had made a Paraquary for one of Rmorra's belongings. Sadly no one had thought to do the same for Hannah, and he could find nothing among her saved things that properly caught her scent. But then, no one knew he was alive. \n\nAnd as he looked, he could see that Kami was desperate to open it with her son and drink in Rmorra's scent - but she obviously wanted to do it alone with her cub, with Hrelle's own scent not getting in the way, though she was too polite to say anything. \n\n\"Listen,\" he said finally, \"I'm heading out, gonna go get that visit to my clanlands out of the way. I'll be back in a few hours, okay?\" \n\nShe looked up at him finally, if reluctantly. \"Are you sure you're okay going alone? You don't want me with you?\" \n\nHe smiled. \"Thank you, no. You carry on, I'll see you later.\" \n\nHe closed the door behind him on his way out. \n\nHe found Mi'Tree and Bneea in the study, looking over a map of the house and surrounding areas. \"Kami and Rmorra are going through Rmorra's things upstairs, I'm heading into town to get the transporter to visit my old stomping grounds. Can I borrow one of the cars?\" \n\nBneea smiled. \"Of course, your ID is keyed in, just tell it where you want to go and when you want picked up again.\" \n\n\"Can we expect you back tonight?\" Mi'Tree asked. \n\n\"Mmm? Yes, definitely. I'm just gonna say a prayer for my mother at her Marker in our Gardens. I promised her I'd do it the next time I was back. I won't be long.\" \n\n\"Really? But you haven't been home in decades! Kami told us you had some issues with your father, but I'm sure once he sees you again, you'll have trouble getting him to let you go again.\" \n\nHrelle smiled politely at the male's optimism, and didn't have the heart to explain the full extent of the rift between him and his clan, though he was glad Kami had kept it to herself; it would have just been another reason for Ma'Sala to hate him. \"To be honest, I don't think so. I'm frankly more than a bit intimidated by going.\" \n\n\"That doesn't surprise me,\" came a familiar female voice from the open balcony. \n\nThe males turned and watched as Ma'Sala entered, clad in an open dark-blue linen dressing gown and nothing else, and carrying a tall, thin glass with an orange-red sweet-smelling fruit juice. She glared at Hrelle with open contempt. \"That doesn't surprise me in the least.\" \n\n\"Give it a rest already, Ma'Sala,\" Bneea groused. \n\n\"Yes, dear girl,\" Mi'Tree agreed, unconsciously or not stepping between her and Hrelle. \"Captain Hrelle is our Little Nova's husband, and our guest-\" \n\nShe sipped at her drink and continued to glare at Hrelle. \"Well? Shouldn't you be going?\" \n\nStill confused by her attitude towards him - could it really just be his inability to measure up to Kami's first husband? - he looked to the males. \"Thank you... for your hospitality.\" \n\n* \n\nAs he departed the study, the males looked to her, Bneea frowning. \"Ma'Sala, you have to stop this. You're not being fair to Esek. He can't help not being Rmorra.\" \n\n\"Quite right, my dear,\" Mi'Tree agreed, stepping closer. \"Why has he raised your hackles so? Is it because Kami chose to take his surname when they married, instead of his more properly taking ours? I know it seems a bizarre custom-\" \n\n\"No.\" \n\n\"Well, then... he is our Bond-son now, our Little Nova's husband-\" \n\n\"He's a coward.\" \n\nThe males were stunned, Bneea gasping, \"What? How can you say that? He has such an impressive record-\" \n\nThe Matriarch drank from her glass and grimaced. \"He had such an impressive record, when he commanded the Furyk, fighting the Tholians, the Cardassians, the Gorn. That is a man I would welcome into our clan. Not some clown in a dilapidated supply ship running ice cream and mail to scientists in the Leonis Sector and playing with cadets.\" She finished her drink. \"The Bel-Zon broke him.\" \n\nMi'Tree frowned. \"He's no coward! It's obvious, you just have to talk to him!\" \n\n\"Well, as much as I appreciate your decades of experience playing a pretend hero and emptying buffet tables, I'll retain my own considered opinion.\" \n\n\"Ma'Sala,\" Bneea growled darkly. \"Kami loves him dearly. And his daughter is simply a delight - even you have to admit that. Can any male who produced a cub like that be that bad? Whatever failings you might find in him, I expect you to treat him cordially.\" \n\n\"Agreed,\" Mi'Tree added. \n\n\"Of course,\" she assured her husbands - in a tone that did anything but assure them. \n\n* \n\nSasha woke, her nose filled with musk, her limbs aching, her skin caked in sweat - and C'Rash clinging to her, snoring. \n\nShe lay there a while, staring up at the high stone ceiling, watching the white rays of the sun bridge the gap between the window and the opposite wall, as her mind desperately tried to piece together the memories of the night before. \n\nThe need to pee made her carefully, silently extricate herself from C'Rash's body, ignoring the bodies in the adjoining beds and padding her way out to the adjacent toilet, sitting there hunched over with her face in her hands. \n\nHoly shit, what had she almost done? \n\nShe never had a problem with hangovers or memory loss. It was all coming back to her: the drinking, the dancing, the laughing, the drinking, the flirting, the drinking... \n\nShe hadn't thought about Giles even once in the last 24 hours, or whatever passes for a Caitian day. She rubbed her eyes, smelling sweaty, and used the showers while they were unoccupied, appreciating the air blowers built into the surrounding walls, to more quickly dry a Caitian's furry body. \n\nThoughts of C'Rash returned, but she literally shook her head clear of them and returned for her clothes, not wanting to feel naked and vulnerable right now. \n\nMembers of Kami's clan were up and about, everyone politely greeting her, and she returned it, though she was damned if she could remember many of their names. It was easier being the only human here, she guessed; she was unforgettable. \n\nShe grabbed some fruit and bread from the buffet and made her way outside onto the veranda, hoping to be left alone in the shade for a while - too late finding someone already there, looking up and smiling, \"Afternoon, sweetheart.\" Kami patted the seat beside her. \"Beautiful morning, isn't it?\" \n\nSasha grunted as she planted herself down. \"I'll take your word for it.\" She tucked into the fruit, needing the food to settle the queasiness in her gut. \"Where's Dad?\" \n\n\"He went to his old clanlands up north, alone. I hope he can come to some understanding with his father.\" She looked at the girl. \"And how are you feeling?\" \n\nSasha grumbled. \n\nKami laughed. \"You must be the most miserable-looking person ever to have slept with a beautiful woman.\" \n\n\"We just slept!\" Sasha exclaimed, a little too forcefully. \"Literally just that!\" \n\nKami laughed again. \"I know different.\" \n\nSasha rolled her eyes. \"Oh, of course you know different. The amazing Caitian enhanced senses, that can track a mouse across the Alpha Quadrant, hear a microbe fart-\" \n\n\"You don't need enhanced senses to see the bite marks on your neck.\" \n\nSasha's hand shot up to clasp her neck, as if an artery had suddenly opened up. \"Shit! Then that's all that happened, nothing more!\" \n\nKami regarded her. \"Why does the notion of something more happening between you and C'Rash make you so anxious? She's a very desirable female, and to my knowledge has experience with humans as well as Caitians, male and female. And you're obviously attracted to her.\" \n\n\"I'm-\" But she bit back her further protest and looked away. \n\n\"Thank you for not denying it.\" \n\n\"I was drinking!\" \n\n\"True; Rula punch has a kick. And there's also the pheromones in the air at gatherings like this.\" \n\nSasha looked up. \"Pheromones? Seven Hells, of course.\" She remembered how she reacted when Rrori first came onboard the Surefoot while in the grip of a hormonal resurgence, and Sasha discovered her sensitivity to Caitian pheromones when she became attracted to him. \"That explains it anyway.\" \n\n\"What does?\" \n\n\"Between the Rula punch and the pheromones, I wasn't in control-\" \n\n\"That's a bucket of shit.\" \n\n\"What?\" \n\n\"You were attracted to C'Rash before you touched any alcohol or had been around us long enough to absorb our pheromones. It was obvious.\" She tapped her muzzle for emphasis. \"You say you didn't go any further than having C'Rash bite your neck. Why not? Did you have second thoughts? Guilt over Giles? Or...\" \n\nSasha looked away again. \"I... fell asleep.\" She blushed at Kami's laugh. \"I'm assuming C'Rash didn't take advantage of me.\" \n\n\"If she had, you probably wouldn't be walking straight.\" \n\nSasha stared at the wooden floor of the veranda. \"You knew all along what was happening... I can't believe you just let me-\" \n\n\"Let you what? Be an adult? Make your own decisions about your body and who you fuck? I wouldn't interfere in the decisions of the cub I grew in my belly. I'm not going to do that to the one I let into my heart.\" \n\nSasha smiled at her words, but her guilt wouldn't be shaken. \"I- I didn't think about Giles the whole time I was with her. It seemed so natural. And when we were out drinking and dancing, I just wanted to come back here and go to bed with her. What would Giles have said if he caught us?\" \n\n\"Ask to join in?\" \n\n\"I'm being serious!\" \n\n\"So am I. Remember, I know him almost as well as I know you.\" \n\nSasha looked to her again. \"Has he said something in one of his sessions with you?\" \n\nKami looked back. \"Are you really asking me to reveal confidential information? Even if he is your 'boyfriend', whatever that means.\" \n\n\"What are you saying?\" \n\n\"Define your relationship with him. You're friends, crewmates, lovers. Have you taken any vows of fidelity, exclusivity? Are you engaged?\" \n\n\"What? No! I mean, nothing formal has been declared! I...\" Sasha stared out at some large-winged insects diving towards the veranda, only to be repelled by the sonic field surrounding the house. \"I love him.\" \n\nShe was thankful that Kami didn't laugh at that, but instead assured her, \"I believe you. I also believe that you're intensely attracted to C'Rash, so much so that you forgot Giles, at least temporarily. We've both discussed your sexuality, and your desire to explore it - something you can't do while bound to Giles.\" \n\n\"So, you think I should let C'Rash-\" \n\n\"I think I'm your Counselor, not your morality coach. Your mental, emotional - and sexual - health and well-being is my purview. I think you love Giles - to a degree. Onboard the small, closed confines of the Surefoot, your relationship with him might seem larger, more important, than it really is. \n\nIf you decide to explore this side of you with C'Rash, or any other female, no one else will ever hear about it, not from me and not from your father. And none of us will judge you.\" She rose. \"Now, if you'll excuse me, I need some time with my future Bond-daughter to take in her scent.\" \n\nSasha nodded, but offered a, \"Thank you,\" to the departing female. \n\n* \n\nThe first thing Hrelle noticed on exiting the transporter station on the R'Trerah Archipelago's main island was how inappropriately he was dressed. The northern islands were on the other side of Cait, near the polar circle, and as the sun was beginning to set here, a bitter wind made his choice of shorts and T-shirt a bad one. No wonder the station operator gave him such a funny look. \n\nHe looked around. The town, after which the Archipelago was named, was the same as always: a collection of terraced stone cottages and shops stretched on along steep, winding streets matching the contours of this side of the island, and a smell of burning peat and drymoss hung in the airs from the surrounding chimneys. That smell... Mother's Cubs, he had forgotten was it was like! \n\nHe stood out and looked down at the large, rocky bay, expecting to see the great fishing vessels of the Archipelago clans, moored and ready to leave before dawn. Only now... there was nothing. Oh, there were sailing vessels, catamarans and small patrol ships. But it certainly didn't seem like the harbour he grew up looking at, watching his father set off. \n\nA wind raced up one leg of his shorts and made his balls ascend: not a good feeling. But he did find one place with its lights on, that might have what he needed. \n\nIt was one of those old shops that offered a little of everything - mostly for the benefit of tourists with more credits than sense. It was cluttered, his belly nearly knocking over a rotating stand filled with engraved souvenir seashells, and there was a pleasing scent of spiced sweets in the air. \n\n\"What do you want?\" barked a spindly, snow-furred male, motionless by a black iron stove with peat burning inside. \n\n\"Good afternoon,\" Hrelle offered in reply, certain he could remember the shopkeeper from his youth; if he was right, the male was immensely old even back then. \"I was wondering if you had any cloaks?\" He indicated his own clothes. \"I didn't exactly come prepared for the season.\" \n\nThe old male grunted and pointed to the far wall. \"Probably don't have any in your size, but you can look for yourself.\" \n\n\"Thank you.\" As he moved to a narrow rack of musty, pastel-coloured cloaks handwoven from local cardigrass, he decided to see if he could satisfy his curiosity. \"Tell me, where are all the fishing vessels? Is there a new port on R'Trerah for them?\" \n\n\"Fishing vessels? Where have you been in the last five years?\" \n\nHrelle passed over the cloaks that were obviously too small for him, but soon realised that the rest would be useless to him, too. \"Offworld. I haven't been home in decades. What's happened?\" \n\n\"Those officious bureaucratic tail-lickers in the First Cabinet decided we'd overfished, and declared a moratorium for ten years.\" \n\n\"What? They really did that?\" Hrelle gave up on the cloaks and returned to the old male. It was unthinkable; the Archipelago's fishing tradition had been in place for generations, and fed into the surrounding local industries. \"Well... I suppose everyone was suitably compensated-\" \n\nThe old male harrumphed. \"No amount of credits can compensate for the loss of our history!\" \n\nHrelle supposed that was true, though his experience with Starfleet helped him see the larger picture. \"What did the fishing clans do?\" \n\n\"Some moved to other regions. Some adapted their boats and took on contracts for buoy maintenance and repair. Others are running tours - Megafin Watching.\" \n\nHrelle nodded; it made sense. \"They adapted. Good.\" \n\n\"Traitors!\" the male declared, \"We are fisherfolk! Better to die than give up what we are!\" \n\nHrelle grunted; the old fart probably never set foot on a fishing boat in all his long, crochety life. \"Tell me... do you know what happened to the Hrelles?\" \n\n\"Hrelles? Now there's a cursed clan.\" \n\n\"What are you talking about?\" \n\n\"Poor old Sherresek... after he was disgraced by his firstborn, he gave over control of his business to his nephew Prelish, and when the ban came, Prelish sold their ship and services to a company on the Stoll Coast! They moved south, neat as you please!\" \n\nHrelle was stunned, almost as much by his cousin Prelish making such a decision, as by the notion that he could have convinced Papa to leave R'Trerah; the farthest his father had ever been from the island had been onboard their clan's vessel, and never for more than a day at most. \"They're all gone?\" \n\n\"All? No! Old Sherresek is still here! He refused to leave, refused to give up his clanlands! And he declared the R'Nesikith on them all!\" The old male chuckled, leaning closer to Hrelle confidentially. \"Just like he'd done to his miserable firstborn, an ungrateful whelp who'd left Cait-\" \n\n\"Decades ago,\" Hrelle finished, deadpan. \n\nThe shopowner looked up at him with recognition, and then righteous indignation. \"We don't serve Clan Traitors in here! Get out! \n\n\"Sure, no problem.\" Along the way, his belly managed to knock over the seashell stand. Purely accidentally. \n\nBack in the chill air of the outside, he considered his options: return inside to the transporter station, and back to his loved ones, an extended family who welcomed him (with one exception), hot weather and decent food. Or proceed to his father. \n\nHe couldn't believe what he was doing, as he ascended the hill towards the Hrelle Clanlands. Such as they were. \n\n* \n\nWhich was never much, and especially not much now. The house sat on a cliff overlooking the sea, and sheltered by trees - and to judge from the cracked, faded paint on the stone walls, was the victim of years of neglect. Weeds dominated nearly every square centimetre of ground, and the path from the road to the front door was barely recognisable; he felt like he was walking through a minefield as he approached. \n\nMemories flashed back to him from another lifetime: hunting and playing with his cousins in the gardens; lighting beacons during the memorials for those lost at sea; nights around the fire, learning knots and signals and the shadow shapes of different schools of fish- ",
        "\"Who are you?\" snapped a sharp, rusty voice. \n\nHrelle started, glancing to one side of the porch to see a skeletal figure leaning on a cane: ashen-furred but with an ugly bald patch on the pate, a rarity for Caitians. Clad in a heavy black sailor's coat, his tail hung limply, lifelessly from behind, and the eyes were black and beady as it focused on the visitor. \"Well? Who are you?\" \n\nHrelle swallowed. You've aged... \"Papa?\" \n\nHe never reacted, except to declare, \"I have no cub.\" \n\nHrelle's heart was racing now. It had been, what? Mother's Cubs, thirty seven years? \"Papa, it's Esek- Sherresek. Your cub-\" \n\nHe tapped the end of his cane four times on the porch, punctuating each word. \"I. Have. No. Cub.\" \n\nHrelle stepped up tentatively hands outstretched, and realised he was trembling from something other than the cold. \"Papa... please. I didn't come to fight with you. I wanted- I wanted to see you.\" He breathed out. \"So much has happened to me. And you.\" He looked around. \"I heard about Prelish moving the business-\" \n\n\"I don't discuss private matters with strangers.\" \n\nHrelle supposed he should have expected this reaction. He might have considered calling ahead, to warn the old man, but feared an outright refusal. \"Papa... things have happened to me since I left. I was married... and widowed. I have a stepdaughter. I've commanded starships, faced victories... defeats. Now I'm married again. And maybe someday I'll have a cub. You might be a grandfather-\" \n\nSuddenly Sherresek swung out his cane, smacking the side of the house and sending shards of paint flying. He reached out with his free hand to support himself, but found the strength to stab the cane in Hrelle's direction as he announced loudly, \"I have no interest in your private affairs! Leave my grounds!\" \n\nHrelle stared back, not expecting to want so much to reach some sort of accord between them before now. \"Stop it, Papa! I'm... I'm sorry. I'm sorry I hurt you so much by not staying, by not taking over the business. There were times...\" His voice dropped to a fragile whisper. \"There were plenty of times when I wished I hadn't left. I was... I was captured. Tortured. And all I thought about during those times was manning the boat and bringing in a catch of nightbacks or sleeks that would have made you proud-\" \n\n\"Cry me some tears, cub, the ocean's drying up.\" \n\nHrelle stared hard. He really wasn't budging, was he? Not even a micron. \"Papa, look at us. We're old. We're both old. Our time in this life is limited. I came here because I wanted to at least try and rebuild something between us-\"  \n\n\"Did your Starfleet teach you how to turn back time?\" \n\nThe question threw him, making him recall classified briefings on the Temporal Prime Directive, on slingshots and paradoxes. \"Um, no. No, they didn't.\" \n\n\"Then there's no point in coming here. Get off my property, and don't come back.\" \n\nThe sheer stubbornness on the part of the man was daunting. Hrelle's disappointment grew into resignation. \"I'm... I'm sorry you feel that way. I'll say my prayers at Mama's marker and-\" \n\n\"You most certainly will not.\" \n\n\"Excuse me?\" \n\nSherresek's face screwed up in contempt. \"This is the home of the Hrelle clan. Our Gardens are our own. Not for strangers.\" \n\n\"STOP IT! YOU KNOW WHO I AM!\" \n\nSherresek glared. \"I know who you were.\" \n\nHrelle stared - and gave up arguing. \"Fine, be like that. I'm going to pay respects to my mother's Marker anyway. If you don't like it, you can kiss my furry ass.\" \n\nAs he wandered around to the back of the house, his bare legs scratched and caught in weeds and tanglewood, he wondered why he was doing this. He wasn't religious; though he believed in the principles the Great Mother taught, he didn't believe in a literal Great Mother. But he wanted to do something positive, significant, while he was here - and if it pissed off his old kussik of a father, that was a bonus. \n\nThe clan's Memorial Garden was in a shocking dilapidated state; he couldn't see the Markers with all the overgrowth, and his fleeting memory was of little help. But he eventually found his mother's: a simple white knee-high pylon. Then he began clearing away the growth around it, as much as he could, and stood staring at it for a moment. There were many times as a cub when he came here, but he didn't think then that he properly grasped the significance of having these in a clan's Memorial Garden. \n\n\"Mama...\" His voice was lost in the wind whipping around the trees, making them rustle. He knelt and cleared his throat, feeling choked up. He tried to dredge up some distinct memory of her, but thought that the few he had were just fabricated by his need for them. \"Mama... I'm sorry. I'm sorry things didn't work out between Papa and me. I'm sorry you weren't around to help us patch things up. I'm sorry I haven't been by before now.\" He was clutching his hands now, ignoring the prickling of his skin beneath his fur at the cold gradually suffusing his body. \"I'm sorry you can't meet Sasha, and Kami. I like to think you three would get along-\" \n\n\"You! Get up from there!\" \n\nHrelle started; it wasn't his father's voice, but another, younger, and he turned to see two Caitians in the red-black uniform of Constabulary officers. \"What the-\" \n\nThey were approaching carefully, their hands never straying far from the stun pistols on their belts, the closer one to Hrelle taking the lead in the conversation. \"I said get up from there! Slowly!\" \n\nThe realisation of the situation struck Hrelle immediately. \"He called the police on me?\" Disbelief and rage made him stand up and look to the darkened house, roaring, \"YOU CALLED THE FUCKING POLICE? WHAT'S WRONG WITH YOU, YOU MISERABLE OLD BASTARD?\" \n\n\"Don't move, sir!\" the other officer, a cub who didn't look old enough to have had his first fur trim, told him. \"Just keep your hands raised where we can see them, and your claws in!\" \n\nHrelle forced himself to calm down. He didn't know why he should have been so surprised, really. \"It's okay, Constable-\" \n\n\"We'll be the judge of that, sir! We received an emergency call, a deranged male attacked Mr Hrelle and began vandalising his clan's Gardens-\" \n\n\"Are you fucking kidding me?\" But then he realised his outrage wasn't helping his case, and he calmed down again. \"Look, this is just a domestic dispute, a family squabble. I have a right to be here.\" \n\n\"We can get this cleared up quickly, then. Are you on the Clan Registry?\" the first one asked. \n\n\"I- ah..\" Seven Hells... \n\n* \n\nSasha had made her way alone to the beach, took off her clothes, threw down a towel and lay back, occasionally squinting up at a young cub and gently refusing their offer of playing, but promising to make it up to them later, preferring to be alone with her thoughts. Which were a mewling jumble, like a pack of kittens falling all over each other to get to their mother's milk. \n\nWas Kami right? Sasha didn't know why she even asked herself that; it was like asking if her Dad loved her. How was she going to handle this? \n\nA shadow blocked the sun. \"Hmm, look what washed up on shore. I claim salvage rights.\" \n\nSasha peered over her shades, both pleased and displeased by C'Rash's presence, like she was an emotional reinterpretation of Schroedinger's Cat. \"Didn't expect you up. And speaking to me.\" \n\nThe Caitian crouched down beside Sasha, her tail reaching out and teasing Sasha's thighs. \"Why wouldn't I be speaking to you, Tailless?\" \n\nSasha blushed. \"I, ah, fell asleep on you. When you... had other plans.\" \n\n\"Hmm, that's true.\" She reclined close to Sasha, facing her, one hand reaching up and lightly tracing an outline around one of Sasha's breasts. \"I'll let you make it up to me...\" \n\nSasha ignored the reaction from her breast and reluctantly reached up to stop the touch. \"C'Rash...\" \n\n\"Mother's Cubs, I know that tone.\" C'Rash sank back onto one elbow, but looking more amused than frustrated. \n\n\"C'Rash... I want you. I never, ever expected to want anyone like you - not another woman, not a Caitian. But I do. But I'm in a relationship with someone else right now, and though we're not Bonded, not married, we're... an item-\" \n\n\"Enough, Tailless.\" \n\nSasha's face burned. \"I hope we're still okay?\" \n\nC'Rash looked up and grinned. \"Very. But you and Aunt Kami are going to kill me.\" \n\n\"Kill you? What for?\" \n\nThe Caitian sighed. \"Well, you've left me needing a good hard fucking, but the only other one here I'm interested in is your father. He is gifted-\" \n\n\"Bitch!\" Sasha smacked her, initiating a play fight that led a chase into the water, triggering cheers from the younger cubs. \n\n* \n\nKami strode into the study, momentarily distracted by the unfamiliar scent in the room: a female Ma'Sala's age, with markings similar to her son's betrothed. She bit back her initial announcement as Mi'Tree rose and smiled. \"Kami, there you are! You can meet Jnill, sweet Ptera's mother, and Matriarch of the Mroara-Lnee Clan.\" \n\nThe other female rose and smiled politely; she had an accent from one of the more posh regions, near where Rrori was raised. \"A pleasure to finally meet Mirow's mother. I can see where he gets his beauty from.\" \n\n\"Thank you.\" Kami embraced her - immediately not liking her, though she reminded herself that her attitude was unfair, that she very much liked the female's daughter, and that what she was feeling now was most likely fed from the bad news she had just received. \"A pleasure to meet you too. Please forgive me, but...\" She looked to her fathers. \"I need to get to R'Trerah. Esek's been arrested.\" \n\nThe others who had been sitting in the room - Mi'Tree, Bneea, Ma'Sala, Mirow and Ptera - rose in shock, Mi'Tree booming, \"Arrested? What for?\" \n\nSuddenly Kami acknowledged too late that bringing up bad clan business in front of her son's betrothed and imminent Bond-mother a day before the wedding might not be the most sensible course of action. On the other hand, this was an emergency, and it wouldn't be a wedding without a crisis. \"His father had him arrested for assault and criminal trespass.\" \n\n\"What?\" Mirow exclaimed. \"Why would he do that?\" \n\n\"I told you they were estranged. Esek wanted to pay his respects to his Mother's marker, his father refused so he went anyway, and his father called the police.\" \n\n\"That's horrible!\" Bneea muttered. \"Who would do that to someone wanting to honour his mother?\" \n\n\"Excuse me,\" Jnill spoke up, her posh accent seemingly demanding attention. \"Who is this person we're speaking of?\" \n\nKami eyed her. \"My husband. My second husband.\" \n\nThe other female nodded in acknowledgement. \"So, not Mirow's kin-father?\" \n\n\"No. Why?\" \n\n\"No reason.\" But the female looked visibly relieved at the news. \n\nYeah, Kami decided. I really don't like you, bitch. \n\n\"This must be some misunderstanding,\" Mi'Tree declared, his baritone voice a soothing palliative. \"I'm sure his father will straighten out matters.\" \n\n\"I don't think so, Papa.\" She didn't want to say anything, especially with the others here, but... \"When Esek left for Starfleet, his father declared him R'Nesikith.\" \n\nIt was as if a thief had taken all the sound from the room. \n\n\"You're joking,\" her son finally murmured. \n\n\"I wish I was, Mirow.\" \n\n\"How could he do that to him?\" Ptera asked with genuine shock and sympathy, looking to her mother. \"Esek's a wonderful man!\" Her mother, however, looked dubious to her daughter's compliments. \n\n\"No, no, no,\" Mi'Tree was saying softly, shaking his head and smiling a little at Kami, as if his daughter was in error. \"You misheard. No parent would do that to their own cub. Not over an argument over career. That would be ludicrous.\" \n\nBut as he continued, as it visibly sank in for him, it began to sound more and more like he was trying to convince himself than her or the others. \"You don't- you don't disown your cub because they want to do something different with their lives! That's like disowning them because they prefer fried shuris to grilled, or because they desire someone of their own gender! It's absurd, it's- it's...\" Now the outrage overwhelmed him, making tears rise in his eyes. \"WHO DOES THAT TO THEIR OWN CUB?\" \n\nKami approached him. \"Calm down, Papa, your heart-\" \n\nBut he was fairly shaking with fury now. \"I've a good mind to beam up there right now and give that old fossil a piece of my mind!\" \n\n\"Think you can afford it?\" Ma'Sala quipped. \n\n\"Don't test me, woman! My Bond-son has been cruelly mistreated! This insult cannot go unchallenged!\" \n\nBut the Matriarch just grunted. \"Yeah, I can see you two old bastards circling each other for an hour or two, hissing and snapping and waiting for the first one to keel over from the cold.\" \n\n\"Mama! Papa!\" Kami snapped. \"This isn't helping Esek!\" \n\n\"No,\" Jnill agreed suddenly, unexpectedly, getting everyone's attention. \"But this will help us.\" \n\nThey looked to her, Bneea the first to ask, \"What do you mean?\" \n\nThe older female drew up, as if disbelieving their inability to see the obvious. \"Well, with Kami's second husband incarcerated on the other side of the world, this will avoid any awkward questions being raised as to why there's a Clan Traitor in your midst.\" \n\nKami stepped forward. \"Clan Traitor? Weren't you listening? His father did that to him because Esek wanted to join Starfleet instead of run his family's fishing business!\" \n\nJnill smirked condescendingly. \"Yes, I'm sure that's what he told you it was about, dear. But like the old saying goes, 'There's no scent without sweat'.\" Now she sneered. \"Those R'Trerah types are backward. More than likely he was caught abusing cubs-\" \n\nKami's hand, claws extended, shot out, clipping the Matriarch across her muzzle, smacking the sneer off her and sending her sprawling. \n\n\"Kami!\" Her fathers drew up and pulled her back, as Mirow stepped between the two females, shocked. \n\nPtera had moved to her mother, who clutched the side of her snout, blood dripping between her fingers, hazel eyes livid with choler. \"You bitch! You dare strike me? I'll kill you!\" \n\nKami bared her teeth along with her claws, fighting the hold her fathers had on her. \"Don't talk to me about killing! I've killed! It means nothing to me! And neither do you!\" \n\n\"Mom!\" Mirow pleaded. \n\n\"Enough.\" \n\nEveryone looked to Ma'Sala, a statue of calm command. Once she had their attention, she continued. \"Kami, Jnill is Matriarch of her clan, and a guest in our house. Apologise to her.\" \n\nKami almost defied her mother - almost. Relaxing her posture, letting her tail droop again, she offered a controlled, sincere, \"I... I am sorry. The news of my husband upset me, that's all.\" \n\nThe other female said nothing, just glared, leaving Ma'Sala to add, \"There, I am certain Jnill understands. Just as I am equally certain that she will now apologise to you for her words.\" \n\nJnill looked to her in shock. \"Me? I should apologise?\" \n\nMa'Sala stepped closer, her voice still measured and cool. \"Of course. Without any proof whatsoever, you openly accused a member of my clan, a decorated hero of Starfleet, of the Federation, of abusing cubs.\" Then her expression tightened dangerously. \"I take such accusations very seriously, as any Matriarch would. But I'm certain your words were spoken without considered thought. And you will retract them.\" She stepped even closer. \"Now.\" \n\nJnill helped herself back to her feet, her muzzle twitching, the scratches on one side red and ugly. She visibly mustered the necessary strength to respond with, \"I... am sorry for my words. I have no proof of what your husband has done to earn his dishonoured status.\" \n\nAs apologies go, it was pitiful. But Kami felt too sick to her stomach to argue further. \n\nMa'Sala resumed control. \"My kin-niece Isher is a doctor, she brought her kit with her and has been patching up the cubs' scraped knees and kinked tails all week; I'm sure she can repair those scratches before you're ready for the wedding vivids. And then my husbands can take you to the kitchens to sample some of the exquisite dishes being prepared for the wedding feast - as you can tell from their bellies, they have extensive experience in this field.\" \n\n\"Yes, indeed,\" Mi'Tree agreed, all charm as he and Bneea led Jnill and the cubs out. \"Along the way, I shall regale you with the story of how I performed for the Dolhman of Elas, a most formidable and beautiful woman, much like yourself...\" \n\nKami had started to follow - until her mother grabbed her by the elbow. \"No. You stay.\" When the door closed, she faced her daughter. \"It's bad form to try and kill the bride's mother, at least before the wedding.\" \n\nKami swallowed, unable to look up at her mother, sounding and feeling thoroughly ashamed of her actions. \"I know. Thank you for defending Esek.\" \n\nMa'Sala grunted. \"I could do nothing else. But I have to confess, if it had been me hearing that-\" \n\nKami spun angrily, snarling, \"Don't finish that sentence!\" \n\nHer mother remained unintimidated. \"You should have warned us about the R'Nesikith. If one of Jnill's arse-sniffing clan members had learned it from the Clan Registry, we could have been accused of hiding it from them.\" \n\n\"It doesn't matter. It's a medieval punishment.\" \n\n\"In case you hadn't noticed, your son is marrying into a clan that can trace their ancestry directly back to the First Landing, and act like they're still living in the days of Hroarash; at least Ptera seems worthwhile. But we don't wish to make it more difficult for my grandcub.\" After a pause, she asked, \"When did you kill?\" \n\nKami stiffened. It was the last thing she wanted to discuss now - especially with Esek in a jail on the other side of their planet. \"I didn't.\" \n\n\"Liar. Remember who you got your keen powers of perception from. I watched you as you declared it to Jnill, and it wasn't a bluff or bravado. It was the truth. But you said nothing about it to me or your fathers. So, I'll ask again... when did you kill?\" \n\n\"It-\" She started to deny, to divert, all the tricks her patients used to avoid facing the truth. She even told herself that she had dealt with the trauma of it after it happened, that it didn't matter anymore... which was simply more deception. \"A month ago.\" \n\n\"And who did you kill?\" \n\n\"A Ferasan.\" \n\nMa'Sala's face tightened, and her hackles raised, her feelings on their people's racial cousins - and ancient adversaries - quite clear. \"When did you ever run into a Ferasan?\" \n\n\"They ran into us. They approached the Surefoot because one of their high-ranking males wanted to make a name for himself by fighting Esek to the death. He refused, so they abducted Sasha and me and threatened us with rape and death if he didn't comply.\" \n\nHer mother scowled now. \"And did your husband finally bother to do his duty and fight?\" \n\nThe ire struck Kami - and she bounced it right back. \"Yes, in that he castrated his opponent and left him eternally dishonoured, before going off and leaving over a dozen others dead or broken in his efforts to save us! Is that duty enough for you?\" \n\nHer mother reacted to that, and Kami forced her breathing to slow down as she continued. \"In the meantime, Sasha and I managed to escape, but some guards caught up with us. One guard broke Sasha's arm. She screamed with such agony. And I... I saw red. I ripped into the throat of the guard holding me. Tore it open. I tasted blood... flesh... I- I-\" \n\nMa'Sala took her daughter in her arms, holding her tightly. \"The Great Mother is seen as gentle, merciful, loving; it is often forgotten those moments when her fury over her cubs being threatened or hurt can make her so formidable...\" She stroked Kami's mane. \"You knew it was the right thing to do... and you hope you never have to do it again. But next time, you tell your mother about such things. She understands, and she will never judge you.\" ",
        "Kami nodded against her mother's shoulder, letting her tears flow freely. But finally she pulled back and wiped her muzzle. \"I- I have to go get Esek-\" \n\n\"No.\" Ma'Sala strode to the desk and sat down, flicking her short, thick tail behind her. \"Computer: Open Emergency Channel to Governor Renthri Lessade.\" \n\nAs the desk screen came to life, Kami approached. \"Who?\" \n\n\"Governor of the Northern Circle, including the Archipelago. Met him two years ago at a security conference. He had the most impressive erection when he met me, and he clung to me like a cub on the teat throughout the conference, hoping to rut. Honestly, it was a wonder he could walk with all the blood diverted to his- Governor!\" \n\nThe screen filled with the image of a confused-looking middle-aged male with auburn fur and old-fashioned spectacles resting on his snout. \"Fleet Captain Shall! What a surprise! A pleasant one, of course, but-\" \n\n\"Forgive me, Governor, I won't be long. There is a Starfleet Captain, Esek Hrelle, have you heard of him?\" \n\n\"Hmm? Yes, I believe so, why?\" \n\n\"It seems he's been arrested on R'Trerah on some idiotic local charge - you know what they're like on the Archipelago.\" \n\n\"All too well, Fleet Captain.\" \n\n\"I need the charges dropped immediately, he's on special assignment and is needed here.\" \n\nThe Governor frowned. \"Released? Fleet Captain, that would be highly irregular, interfering with the local constabulary-\" \n\n\"Governor,\" Ma'Sala interrupted. \"Let's not tail dance here. I want that man released immediately, given an escort and priority clearance at the nearest transporter station. A Code 1001 has been declared that requires his participation.\" She drew in closer to the screen. \"Now, do I need to contact the First Minister and explain to her that my response to a Code 1001 has been delayed because of this?\" \n\nThe Governor drew back, as if Ma'Sala was ready to reach through and grab him. \"I'll tend to it immediately.\" \n\n\"Thank you. And Governor? It's good to see you again. Shall out.\" As the screen went black, she grunted, \"Better to see him than smell him. He had the musk of a curried fish left too long in the sun.\" \n\n\"Thank you, Mama,\" Kami said, hugging the female from behind. \"But won't you get into trouble for misusing a Code 1001?\" \n\n\"I might - if it existed.\" \n\nKami smiled. \"I'd best get going, and meet him at our station. Mama... can you promise to be nice to Esek, Mama? I know he's not Rmorra. He can never be. He's not meant to be.\" \n\nMa'Sala nodded. \"You should go.\" \n\nKami smiled. \"I'm waiting for that promise.\" \n\nHer mother growled, but then relented with, \"I promise to judge your husband on his own actions, and not compare him with Rmorra. There, happy?\" \n\n\"I will be, when I see you two hug.\" \n\nMa'Sala grunted. But just before Kami departed, she asked, \"Did he really do what you said he did to those Ferasans?\" \n\nKami stood at the open doorway. \"Yes. And he killed some Nausicaans who had taken Malurian children as slaves and had threatened the lives of our cadets, and he nearly died saving a baby from a disintegrating space station, and...\" She breathed out heavily. \"Each time he does something insane like that, I warn him. I warn him that if he keeps it up, I'll leave him. And each time, I never follow through with my threat. Some wife I am.\" \n\nMa'Sala looked up at her with regard. \"Go collect your husband...\" \n\n* \n\nHrelle exited into the far more welcome weather of Kami's province, finding his wife waiting for him. \"Sweetheart! I'm so sorry!\" She clasped him close to her. \"I should have come with you!\" \n\nHe chuckled. \"Then we would have both ended up in jail, and Papa Mi'Tree would have had to recreate his famous escape scene from Clawback 2: Maximum Sentence.\" \n\nShe drew back to look at him suspiciously. \"Are you okay, Esek?\" \n\nHe nodded back, smiling. \"I'm fine. Actually, the younger constables turned out to be sympathetic once they heard the full story - and once they found out who I was. I, ah, even took some images with them.\" \n\n\"Your father-\" \n\nHe shrugged now. \"It's over and done with. The past has passed.\" He slipped an arm around hers as they walked back to the clan's autocar. \"Now tell me, what's happened to the family during my time in prison? Have the cubs grown up? Are you a grandmother yet? Has Sasha married C'Rash?\" \n\nHe kept his spirits up as they returned to the house, and he helped with the cooking of the evening meal and the cleaning up, with greeting the visitors from Ptera's clan, who seemed friendly (except for their Matriarch, who seemed to share Ma'Sala's attitude towards him). He regaled people with tales of the Surefoot and the Furyk. And he drank, and laughed, and danced, and drank as he sang some old bawdy Caitian ballads that made the younger cubs giggle. \n\nMost everyone there wouldn't have thought there was anything wrong. \n\n* \n\nAround midnight he stepped out for some air, and a half-full bottle of Aldebaran whiskey, taking it to the main garden behind the house to have a couple of shots without his wife seeing and worrying about him unnecessarily. He was fine. He just wanted to relax. \n\nHe looked around at the furniture stacked here and there for the ceremony tomorrow; the air was cool and dry, the rough, dry grass felt good under his bare feet, and the star-studded sky was filled with the constant clacking of the chitterwings, their noise occasionally broken when a swoop would dive to make a snack of one or more of them- \n\n\"Naughty cub.\" \n\nHe nearly dropped the bottle as he spun in place, facing Ma'Sala. How in the Seven Hells did she sneak up on him like that? Was she that stealthy, or was he just that drunk? \"Shit-\" \n\nThe Matriarch strode up, clad in a simple brown linen dress that she somehow managed to wear like it was the gown of the First Female. \"Never drink alone. People always know, and they talk.\" She took the bottle from him - and swigged some for herself. \n\nHe cleared his throat, feeling guilty and uneasy in her presence. \"I, ah, didn't get to thank you earlier for arranging for my release.\" \n\nShe stared at him blankly, holding onto the bottle. \"Well... do it, then.\" \n\nHe blinked. \"Thank you.\" \n\nShe grunted at that. \"My daughter has enough on her mind now with the wedding. She doesn't need the distraction of her husband's incarceration - or his mewling self-pity.\" \n\nHe frowned. \"I'm not feeling self-pity. I'm fine.\" \n\n\"Really? You're fine with your father rejecting you? Having you arrested? You're either delusional or a liar. Which one is it?\" \n\nHe blanched at her brusqueness, but offered an insouciant shrug. \"I tried to mend things between us. He refused. His loss.\" \n\n\"It is. That doesn't make it hurt any less, cub.\" \n\nShe was getting on his nerves now. \"I'm not a cub. I'm fifty-two years old, a Starfleet-\" \n\nHe never saw the arm swing out, the hand smack the side of his head and send him hurtling into a stack of chairs, catching his tail and making him yelp. His head rang in pain made worse by the alcohol, but he helped himself back to his unsteady feet, staring in utter astonishment. \"Are you out of your mind?\" \n\nShe set the bottle down on an adjacent wall and approached. \"Yes, you're a cub. We're all cubs when we deal with our parents, no matter our ages. And you're hurting. That's understandable. You just haven't got the balls to admit it. Yet.\" \n\n\"Yes, I'm hurting! You just smacked me upside my head!\" \n\nShe chuckled. \"That's nothing for a practitioner of K'Gresirr.\" Then her eyes went wide with seeming admiration. \"Sasha says you're a Tier Five. Is that really true?\" \n\nHe straightened up, nodding and catching his breath. \"Y-Yes, though I-\" \n\nMa'Sala's leg kicked out at his belly, sending him backwards onto the rough, dry grass. She cracked her knuckles. \"Big deal. I'm Tier Seven, you little bitch. Come on, get up, we're not done yet.\" \n\nHe fought to control his breathing - and the urge to throw up - as he returned to his feet, his shirt and shorts hanging in tatters on him. He had to get back inside and tell Kami, Mi'Tree and the others, the old female had gone crazy. \"I'm- I'm not fighting you...\" \n\n\"Well, that'll make this easier.\" She pulled her dress up over her head and cast it aside, stretching her limbs in obvious preparation for a bout; even her tail was twitching with anticipation. \n\nIn the light from the house's, he could see the scars on her body, a reminder of what he once looked like, after his escape from the Bel-Zon. Did she really think that they were going to scrap? \"Ma'Sala, please, I know you don't like me, we don't have to go through this-\" \n\n\"You don't know a damn thing about me. But you're gonna learn.\" She extended her claws and bared her teeth. \"Come on, fucker, show me what you got! Or did the Bel-Zon neuter you when they had you?\" \n\nHrelle glared - and then pulled the remains of his clothes from him, discarding them as he extended his own claws. \n\nMa'Sala smirked as she glanced down. \"No, I can see that they didn't. My husbands said you were gifted. Well, that's not gonna help you now.\" \n\nHrelle shook his head. She was really going to put him through this, wasn't she? \"Fine. You wanna fight, let's-OOF!\" \n\nMother's Cubs, she was his father's age, but she moved as fast as a shark! She torpedoed into him, the pair of them tumbling over each other onto the grass, growling, snapping, striking - and she was Old School K'Gresirr too, no distant ceremonial kicks and swipes. She was an in-your-face, no-holds-barred, dirty bitch fighter. \n\nSo he punched her hard in the chest and reached for her tail - only to be caught himself she drove her knee up into his groin. A white bolt of pain erupted from his balls and shot into his brain, giving Ma'Sala an advantage, pinning him face down onto the grass, her weight on his lower back, his arm twisted behind him - and her mouth open, her fangs clamped onto his neck. \n\nHe instinctively froze. \n\nShe tightened her jaw's grip on him. \n\nHe knew what she expected. He made a mewling sound of surrender. \n\nThe Matriarch released her jaw, but she still held him down, even as she was struggling with her own breathing. \"That was- that was good, cub- better- better than the- the last sex I had.\" Her breathing slowed down more as she leaned in, her breasts against his shoulders, her mouth at his ear as if she were going to have his neck again. \"You're a coward. A liar and a coward. You never saw your father.\" \n\nHrelle ached all over, felt sick on many levels, but he still fought against her. \"I did- I did see him- you bitch-\" \n\n\"Don't hump me and call it dancing, cub. He rejected you! Again! And you're telling me that didn't hurt?\" \n\n\"I don't care about him! I hate his guts!\" \n\n\"Liar. You love him. Even after all he'd done to you-\" \n\nHe shook his head in denial. \"No! I hate him! I hate him!\" \n\n\"Liar.\" \n\n\"I LOVE HIM!\" \n\nHe was shaking with grief as much as pain and humiliation beneath her. \n\nDistantly he felt her release her hold on him and take her weight off, collapsing to the grass beside him. \"Go on. Continue.\" \n\n\"I love him,\" he repeated softly, fragilely, hanging his head low to hide his face from her, to hide the tears that dropped straight from his eyes to to the dirt between the blades of grass. \"I love him still. Even after all those years apart. And I tried- I tried to reach out- after all I'd been through, all I'd seen and done - and he still rejected me.\" \n\nHe looked up now, and saw her expression - and the similarity of it to her daughter, whenever she made him break through his self-denials and confront his own feelings, was uncanny. Did she just get him to open up the way Kami did? Like daughter, like mother... only with less brawling. Usually. \"W-Why would he do that? I- I needed him. Why would he do that? It- It's not fair-\" \n\n\"No. It's not.\" Beside him, Ma'Sala was helping herself back to her feet, before doing the same for Hrelle. Then she grabbed him by the shoulders and demanded, \"Why did you take your current assignment? A supply ship? You had a frigate. What happened? Did you lose your nerve, after all you've been through?\" \n\nHe stared in utter astonishment. Attacking him physically, and now taunting him with his past? \"What is wrong with you?\" \n\nShe glared defiantly. \"Answer me.\" \n\nHe gathered his anger, his pain, his heartache, and bared his teeth as he snarled, \"You really want to know why? Have you not have enough fun with me? Fine. I took it because it was only mission that Starfleet Academy would allow Sasha to serve on while she was still a cadet!\" \n\n\"What?\" That visibly took Ma'Sala by surprise. \n\n\"Yes!\" He let the tears continue unchecked now. \"I love that girl! Her, and her mother! The memory of them was the only thing keeping me going through all those years in the Seven Hells! And I swore if I got out alive, I would make up for all that time lost with them! But Hannah's dead, and Sasha's all grown up, she doesn't need me anymore, and- and-\" He shook now. \"Go on, you bitch, make fun of me some more for feeling this way! I fucking dare you!\" \n\nMa'Sala stared at him, drew in... and hugged him tightly. Her voice was soft, gentle... maternal. The very last thing he expected. \"I will do no such thing. You are a good man, a good father, a good husband. And your father was a fool, for refusing to see past his bitterness and embrace you. Just as I was foolish, for refusing to see past my suspicion and embrace you. Please... forgive me.\" \n\nHe didn't know how to react, except to continue to wallow in the need to hold onto this female. He never realised how much he might need a mother's touch, even at his age. He wanted to hold onto her forever. \n\nBut he knew that was impossible, especially as her heard the sounds of people leaving the house to step outside, obviously curious about the noises of the fight. But he waited to part from the embrace when he heard Kami exclaim loudly, \"What in the Seven Hells is going on?\" \n\nHe waved a hand at her. \"Hush, you'll wake the cubs upstairs. Everything is fine.\" \n\n\"Fine?\" Kami nearly shrieked, \"Are you fucking kidding me? I come out here and find my mother and my husband naked, covered in bites and claw marks, and you expect me to think everything is fine? I don't fucking think so! Mother's Cubs!\" \n\nHrelle looked to Ma'Sala, still clinging onto him, the pair of them supporting each other. \"I love your daughter... but she can be a shrill bitch at times.\" \n\nMa'Sala nodded, smiling. \"She was an angel until she had her first Season. Puberty ruins us.\" \n\nKami stared hard in reaction to the exchange, seemingly only discerning the change in mood between the two of them. \"What's going on?\" \n\n\"I can tell you.\" Jnill replied, standing surrounded by the members of her clan who had come tonight - though she remained noticeably distant from Kami - as she indicated Hrelle. \"It's a drunken brawl, no doubt instigated by this R'Trerahn Clan Traitor.\" \n\nA rumble ran through the Shall Clan, Mi'Tree stepping forward, pointing to Hrelle. \"Do you even know who this male is? What he has done for the Federation? What he means to so many of us?\" \n\n\"Oh, I'm certain he's most popular among the plebeian classes-\" \n\n\"THIS IS MY SON,\" Ma'Sala declared loudly, proudly. \n\nAnd when she had captured their attention, she continued. \"He is my Bond-son through marriage to my daughter. But before this night is over, I will update the Clan Registry to make him my Kin-son. It will be as if I bore him myself. And he will no longer be classed as R'Nesikith.\" She looked to him again. \"If you would accept.\" \n\nHe stood in wonder at the turn of events. It had been satisfying - if very painful - to have somehow finally made peace with Ma'Sala. To have her offer this... to be part of a clan again... he glanced at Kami, took in her shocked, approving face, before replying, feeling shocked himself, \"The honour is mine.\" \n\nMa'Sala looked to her counterpart with the other clan. \"Well? Will that be enough to extinguish your social outrage?\" \n\nJnill drew up her reserves of smugness - only for her daughter Ptera to step forward and declare, \"It does for me, Ma'Sala. We will be honoured to have your Kin-son in attendance at my wedding.\" \n\nHer mother scowled at her, but recovered and added, \"Yes.\" \n\nThe Shall clan assembled cheered at the response, before Ma'Sala looked to her husbands. \"And would either or both of you old cats care to be declared his Kin-fathers, or are you too busy licking each other's balls?\" \n\nThe males looked to each other, Mi'Tree responding with a dramatic, \"By the Great Mother and Her Cubs, to be named Kin-Father to such a distinguished and-\" \n\n\"He means Yes,\" Bneea interrupted. \n\n\"You scene-stealing swine!\" his husband bellowed. \n\nKami rushed up to her mother and husband, hugging them both tightly, ignoring their pained reactions until she pulled back and asked, \"What did you two do to each other?\" \n\n\"We talked,\" Hrelle offered. \"Nothing more.\" \n\n\"He punched me in the tits,\" Ma'Sala confessed. \n\nHe shrugged. \"She started it.\" \n\nKami rolled her eyes. \"Let's just get you two overgrown cubs inside and get patched up. Honestly...\" \n\nBut she was smiling as she led the way. \n\n* \n\nKami was cleaning a naked Mirow and grooming his fur, as was tradition on the morning of a wedding. \"Now, Esek and I have arranged for a portion of our pay to go to the clan account for you and Ptera-\" \n\n\"Mom,\" the cub chuckled, \"I work for a living, you don't have to- oww!\" \n\nShe was tugging at his tail fur. \"You should have trimmed back here. I'll get the cutters.\" \n\n\"Mom!\" \n\n\"I'd say stop fussing over him, but that would be futile.\" \n\nMother and son looked up at Hrelle standing in the doorway, arms folded, already clad in his best kilt and vest. Kami frowned. \"What are you doing here, Esek?\" \n\n\"Reminding you that your sister is waiting to cut your mane, giving you plenty of time to hate what she does with it.\" \n\n\"I'm dealing with my cub.\" \n\n\"Let me,\" Hrelle suggested. \n\nKami looked at him for a moment, before turning to Mirow. \"Is that okay?\" \n\nThe cub smiled. \"That'll be fine.\" \n\nAs Kami departed, Hrelle approached the younger male, looking through the grooming tools and selecting some trimmers. \"I never had my father to groom me when I married. Either time. I was probably a scruffy bastard. Fortunately, love blinds - but only to a degree. Remember that.\" \n\nMirow smiled. \"I'll keep that in mind.\" \n\nThe cub stood there as Hrelle stood or knelt, moving around him, looking him over and trimming where required, letting the soft hum of the trimmer fill the air, like an insect buzzing from flower to flower. \"Usually at these times, it's customary for the married one to offer advice to the groom. But I know that I'm just your mother's husband, I don't want you to think I'm trying to take your father's place-\" \n\n\"I would love to hear something,\" Mirow confessed with relief. \"Something practical, and distracting. I am a bundle of nerves right now.\" \n\nHrelle gently grabbed his tail, which was swishing about hitting him where he knelt. \"So I see.\" He smiled as he considered what to say, secretly pleased that the cub wanted to hear from him, and sounded genuine about it. \"Remember that every decision you make from here on isn't just about yourself, it's about both of you. Everything, from what you want for dinner, to what you want to do with the rest of your life, now involvs two people. After I fled Cait and joined Starfleet, I thought only of myself, for years. Then I had to expand my viewpoint. It took a while to get used to that - and to accept that I wasn't always going to get my way.\" \n\nHe rose to his feet, carefully snipping along the cub's biceps and chest. \"Remember the trivial things - or rather, what seem trivial. Does she hate having her neck touched? Does she like her shuris kebabs with Eastern or Western blood sauce? Is that impractical red dress in her wardrobe her favourite? Does she cry every time she hears one of Tchama's love songs on your player? Remember them, and show her in some way that you remember them.\" ",
        "He set aside the trimmer and began dressing the cub. \"It won't always be fun, or exciting, or smooth. It'll get bumpy, and boring, and when you fight the bit out, thoughts will scream into your head about what a mistake you made in marrying this bitch, and that you should just go.\" He looked into Mirow's eyes. \"It's natural to have those thoughts. That doesn't necessarily make them true.\" \n\nHe fitted the gold armlets on Mirow's forearms, and then his tripartite kilt. \"Little displays of love and consideration daily are worth more than big gestures, like keeping a fire lit by steadily feeding it kindling, rather than waiting a long time and then sticking a big stick of wood on it.\" He smiled. \"And speaking of wood, when all else fails and she still won't forgive you for whatever you've done or not done... always be willing to leave her with Fluttertail. That never fails.\" \n\n\"What's Fluttertail?\" \n\n\"You never heard of it?\" Hrelle smiled. He then proceeded to tell him in detail how to give a female Fluttertail. \n\nThe cub was shocked. And pleased. \"That's... amazing! Why haven't I heard of it?\" \n\n\"It's a secret known only to older males who aren't as flexible as they used to be, and have to compensate with ingenuity. The females who've experienced it know about it... but they're usually too busy grinning to talk about it.\" \n\nMirow laughed. \"I'll have to try that.\" More seriously, he added, \"Thank you for this. I... I barely remember my father, though it feels like I know more, just from what Mom says about him, and seeing and smelling his things. I'd- I'd like to think he was a lot like you.\" \n\nHrelle felt himself welling up now. \"Well, I've never had a son. And I probably never will, despite our efforts. But I'd like to think that if I did, he'd be a lot like you. And if you ever need anything, anything at all... call on me.\" \n\nMirow smiled. \"I will.\" \n\nThey hugged. \n\n* \n\nSasha wore a beautiful aquamarine sarong that Kami had helped her purchase on the liner, something she would not dare wear on the Surefoot, or anywhere else but Cait, and she stood on the grass with her father, with Kami, and the people of both clans - and C'Rash, who clung onto Sasha's arm. Though the female had made no sexual advances towards Sasha since their talk, she remained the most tactile person Sasha had ever known. And Sasha didn't mind one bit. \n\nMirow and Ptera stood together on a raised dais, with their respective M'Traals, their ceremonial protectors, at their sides, and the Priestess, a slim female with spotted oatmeal-coloured fur and a plain light-blue dress, at the centre. \n\nThen people began... singing. At first Sasha thought it was something they were doing to encourage the start of the ceremony, like she'd heard happen at sporting or entertainment venues when there was a delay. \n\nThen she realised that it was the start of the ceremony. There was nothing serious or hymn-like about it, but rather a joyous celebration, a celebration of life and love and unity. It was like an old-fashioned musical. \n\nShe grinned to herself; she should have known. Caitians couldn't be sombre if their lives depended on it. \n\nWhen the song ended, then the couple began singing together, their own song, a song of love and hope that made tears well up in Sasha's eyes - and made C'Rash silently chuckle at the human's reaction. \n\nNow the Priestess sang, and her song was one of praise to the Great Mother, and to the forces that brought this couple, and their clans, together on this blessed day. As she sang, she made a show of bringing the bride and groom's arms towards each other, entwining them, having them clasp each other - before drawing them even closer. \n\nThere was a final song from the congregation, a reminder to cherish life and all the precious people in it. Sasha reached out and took her father's hand in her own, squeezing tightly. He glanced down at her and smiled. \n\nAnd then it was done, and Sasha couldn't believe it had been so quick, considering the amount of preparation that had gone on to make it happen. \n\nWhen she told this to C'Rash as they were mingling with other people, the female laughed. \"We don't want to waste too much time on ceremony; there's food and drink and dancing and sex to be had!\" At Sasha's reaction, she amended, \"You don't have to worry about the last part-\" \n\nShe stopped when Sasha suddenly pulled her into an embrace, their breasts squashed together as the girl bit the Caitian's neck. \n\nC'Rash pulled back, gasping. \"Tailless, if you're not careful I might get the impression that you're in for some of the last part.\" \n\nSasha grinned slyly, clutching the Caitian's hips. \"If you're not careful, I might give you that impression-\" \n\n\"Runt of the Litter!\" her father called out from across the crowd. \"Stop groping that female and get your ass over here!\" \n\nSasha blushed beetroot and stormed over to him. \"Oh look, you two are not rolling around on top of each other; I hope someone has a camera ready to take a vivid, this is rarer than a supernova.\" \n\nKami chuckled, nudging her husband. \"She's been hanging around the older cubs too long.\" \n\n\"No, she was always a little smartass.\" Then he became more serious. \"Sasha, the offer for me to be fully adopted by the clan extends to you too - if you want it.\" \n\n\"Me?\" Sasha glanced around in disbelief. \"But I'm- I'm human-\" \n\nC'Rash snorted at the protest. \"Barely!\" \n\n\"Indeed,\" Ma'Sala agreed. \"But we will understand if you wish to refuse-\" \n\nHer further words were lost as Sasha rushed into the female's arms, hugging her tightly. Ma'Sala, after a moment of surprise, hugged her back. \n\nFinally Sasha broke free, adopted an expression of recollection, and then spoke in Old Caitian, not usually managed by the Universal Translator. \n\nBneea beamed. \"Well, that was unexpected! And impressive!\" \n\nHrelle smiled proudly. \"I didn't know you still remembered the lessons I gave you. But why are you taking her dinner from her?\" \n\nSasha's triumphant smiled dropped. \"What? I didn't say that. I said 'I will treasure your honoured gift'.\" \n\n\"No,\" Kami corrected, grinning. \"You said 'I will treasure your honoured dinner'. It makes no sense.\" \n\nHrelle chuckled. \"Well, it does if you've ever seen her in the Mess Hall. The other cadets and crew have to set up patrols to keep their meals safe from her.\" \n\n\"There's nothing wrong with my grandcub having a healthy appetite,\" Mi'Tree warned him jovially, watching a finger at him. \"And you're not looking very svelte yourself, my son. Some of us, of course, carry it better.\" \n\nSasha grinned. \"Well, looks like I've got new grandparents to back me up, so you'd better watch your ass, Fat Cat.\" \n\nHrelle shook his head. \"So much for respect.\" \n\n\"This is a Caitian clan gathering, Esek,\" his daughter reminded him, thoroughly pleased with the change of family dynamics in her favour. \"No one can pull rank here except the Matriarch.\" She turned back to Ma'Sala once more, and more seriously informed her, \"I will treasure this gift, Ma'am, and will always strive to be worthy of it.\" \n\n\"I am sure you will, cub. You can learn more about the clan, and your responsibilities and obligations within it, during the remainder of your stay.\" She nodded at C'Rash. \"Now will you go fuck her already? The tension between you two is annoying.\" \n\nSasha turned scarlet, as C'Rash grabbed her arm. \"Come on, orders are orders!\" \n\nKami laughed - and then something caught her eye: a strange Caitian female in a startling red ceremonial robe was speaking with an impressed-looking Jnill. \"Who's that?\" \n\nHrelle smiled. \"I called in a favour at the Consulate, and asked someone to drop by and impress the visiting Matriarch - and name drop me along the way.\" He watched with amusement as Jnill looked in his direction, visibly reassessing her opinion of him. He nodded and turned back to Kami. \"That should improve my standing with her.\" \n\n\"And me,\" she joked. \"I didn't know you had such influence, getting a genuine Consul here-\" \n\n\"Actually,\" he whispered to her, \"She works in their Facilities Management Department. I told her that if she could borrow a Consul's robe and get here on time, she could have all the food and drink she wanted.\" \n\nKami laughed. \"I never thought my brother would be so cunning.\" \n\n\"Your brother?\" \n\n\"Sure. We have the same mother and fathers, so technically we're siblings...\" \n\nHrelle cleared his throat. \"Well, there's an erection killer if I ever heard one.\" Then the band started up again, a raucous, joyous dance number that brought old and young up on the floor. He took his wife's hand. \"Come on, Sis...\" \n\n* \n\nIt was two days later when Hrelle heard about his father's death. \n\nMa'Sala had broken the news, when she was updating the Clan Registry to fully adopt Sasha and him. His heart had given out, a day after Hrelle had reunited with him - and fought with him. A cold grip of guilt twisted his insides at the thought that he had inadvertently triggered the cardiac arrest from the stress of their meeting. \n\n\"No,\" Ma'Sala assured him when he said as much. \"It was triggered from a lifetime of being an inflexible, insufferable, mean old kussik who pushed everyone out of his life, who literally disowned his entire family because he didn't get his way, and had no one there in the end when he needed help. It's amazing his heart lasted as long as it did, having to circulate all that vitriol.\" \n\nHrelle hated what she said - or rather, how much he agreed with it. \"He never got over Mama's death-\" \n\n\"He never chose to get over your mother's death,\" she corrected gently. \"I have had husbands and wives who have since gone to meet the Great Mother. And I loved them so much, and their deaths left a hurt that never heals - you understand this, too. \n\nBut you and I chose to not let this hurt be what makes up the rest of our lives. Your father chose to embrace the hurt. You have nothing to feel guilty about.\" \n\nWithout any registered kin anymore, the local government took over Hrelle clanlands; for a moment, he considered making a claim towards it - but he had a clan already, and was content. \n\nThe local government also arranged for Sherresek to be buried at sea, as was tradition. Hrelle and Kami managed an invitation to attend; they turned out to be the only mourners. \n\n\"This is... pathetic,\" he noted. \"That only we show up. Is this his legacy?\" \n\n\"No,\" Kami assured him. \"His legacy is you, his cub. Our parents guide us - but not always in ways they would expect, or like. In his case, he guided you to be a better father, a better husband, a better man, than he ever was.\" \n\nAs he watched the shrouded body be raised to slide into the wide, embracing ocean, he felt... the closure of this part of his past, a part that had always remained open for as long as he could remember, without it ever being any use to him, like a spare part remaining from an appliance long since discarded. \n\nHe watched the body float and bob on the unceasing waves, before sinking away. \n\n\"Goodbye, Papa...\" he whispered, heard only by Kami beside him, her arm around his. \n\n* \n\nFive Days Later: \n\nHrelle lay naked on the balcony stones, hands behind his head, eyes closed, basking in the growing heat from the sun rising over the trees, as swoops circled and cawed high overhead, and the smell of grilled shuris drifted up from the kitchens below. It was their last day here, and their parents - their parents! - were determined to have the remaining clan members celebrate the imminent departure of its Starfleet members. \n\nAnd he didn't want to go. For decades, he had considered just about anywhere else as a home: the Furyk, Salem Four, the Surefoot. Anywhere but his birthworld. Now, he had one again. That was a wonderful feeling - and bittersweet, knowing he would be leaving tomorrow. \n\nHe smiled as he heard his wife step out onto the balcony. \"Enjoying yourself, you lazy bastard?\" \n\n\"Yes,\" he replied unapologetically. \n\n\"You've put on a few extra kilos.\" \n\nHe shrugged, eyes still closed. \"I've been working out. Surfing.\" \n\nShe snorted. \"You tried it once, fell off the board after a minute, then gave it over to Sasha, who was brilliant at it!\" He felt her recline against him as she admitted, \"And how are you feeling now compared to when you arrived, Esek?\" \n\nHis smile became a grin. \"I couldn't be happier.\" \n\nShe made a sound. \"Bet you can.\" \n\nHe felt something tapping on his chest, and half-sat, opening his eyes to see Kami sitting against him, facing him, propping a medical tricorder on his belly. He cupped his hand over his eyes and squinted at the image on the display: a kidney-shaped organic structure, cherry-orange in colour, with a ribbed border and black dots here and there, all in front of a black background. \n\nHe was bemused - it was something that was just scanned only a few minutes ago - and he glanced at his wife. \"So... what am I supposed to be looking at here?\" \n\nShe smiled back with sheer elation. \"Your son...\" \n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... VECTORS"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fan fiction",
        "starfleet",
        "caitian",
        "federation",
        "fanfic"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-12-caitian-holiday"
}