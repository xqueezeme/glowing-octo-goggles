{
    "title": "A Week in Miami",
    "pages": [
        "MONDAY\n\nMy first night in Miami, and I was sitting in the hotel bar trying to decide whether I wanted dinner or not. I was reading a book, something I always do when I'm away from home - in fact something I always do, period - and thinking of nothing at all other than how hungry I felt.\n\nThe hotel was close to the beach, and considerably more up market than those I was used to staying, but this was being paid for by my client and they probably had a corporate account or some such.\n\nThe waitress had just placed a cold beer on my table when I became aware of something going on a few tables away. A tall, stunningly beautiful woman was trying to discourage a dark haired overweight man. I knew his type, saw them everywhere I went. He was almost certainly in sales, but if you asked what he sold you would be no wiser after he told you than before. Corporate bonds, derivatives, ground nut futures, eco electricity, something everyone had heard of and no one knew anything about - especially not the guy selling it.\n\nIt looked like the blonde was about to slap him, and he must have finally seen sense or, more likely, other prey. Crisis averted I turned away and returned to my book.\n\nI picked up my beer and took a long cold swallow, was just putting the glass back when I became aware of someone standing across from me, and a quiet voice with a not quite right accent said, \"Excuse me, but do you think I could ask you a favor?\"\n\nI lowered my book and turned to find the blonde standing by my table.\n\nI'm usually pretty good placing where people are from, but her accent threw me: faint, almost American, most people would probably not notice, but I had always had a good ear for intonation and often amused myself by trying to guess regions and even towns people came from.\n\n\"It depends what the favor is,\" I said. I was suspicious now. Gorgeous blonde in a hotel bar - I'd come across that situation before and was wary.\n\nShe smiled, showing bright, white, perfectly even teeth. \"Nothing unsavory, I assure you. It's just...\" she hesitated, glancing down at her hands. \"This might not sound quite like I mean it, and please don't take it wrongly, but you seem safe.\" \n\nI smiled at her. \"That's me,\" I said. I knew exactly what she meant. I had always been safe.\n\n\"You obviously cannot know this, but I tend to attract attention... usually the wrong kind of attention.\"\n\n\"Really? Why on earth would that be?\" I smiled, hoping she would recognize an ironic tone of voice. Luckily she smiled back. \"Please, sit down,\" I said.\n\nShe folded herself into the chair across from me, long, lean and unreal. I don't think I had ever seen anyone as stunning.\n\n\"What is it I can do for you?\" I asked.\n\n\"I was standing nearby when you checked in,\" she replied, \"and couldn't help notice that you are staying here all week?\"\n\nI nodded. \"Until Saturday. Then back home.\"\n\n\"I am here all week as well. And...\" she hesitated again, looking down. \"This is going to sound odd, I know, but I've come this far now... I wondered if you would mind me joining you in the bar, and for dinner?\"\n\nI looked back at her and couldn't think of anything to say.\n\n\" I have insulted you now?\" she asked.\n\nI shook my head quickly. \"No, not at all. But why?\"\n\n\"Because I am tired of being hit on all the time. If I sat over there,\" she lifted a long, elegant arm and pointed to a group of chairs across the room, \"I can guarantee within five minutes, almost certainly less, some big macho man would sit down and try to talk me into having sex with him.\"\n\n\"I saw,\" I said. I smiled. \"What is the world coming to?\"\n\n\"You're joking with me now,\" she said. \"But it's true. You must know it's true. Do you stay often in hotels?\"\n\nI laughed. \"All the time, I'm afraid.\"\n\n\"Then you know what I mean. A woman, on her own, will always attract attention.\"\n\n\"Particularly when they look like you,\" I said, then immediately held up my hand in apology. \"Sorry, that probably sounded like a come on. I didn't mean to do that. But you must know you are incredibly attractive. Can you blame these men?\"\n\nShe thought a moment and then shook her head. \"No, I cannot blame them. But that does not mean I want to be with them - and certainly does not mean I want to sleep with them. You are right,\" and she held her hands out to her sides as though to say, look at me, and continued, \"I do know how I look, but that is not an excuse for men to think I will sleep with them. The kind of men I mean, they do not know what No means, do they?\"\n\n\"Some people are like that, I guess. \"\n\n\"But not you?\"\n\n\"Me? No, I'm one of the safe ones.\"\n\nShe nodded, \"Yes. I think that's true - you are.\" She smiled that dazzling smile again.\n\nLike I said, story of my life. Here I was, a couple of months off fifty, married for twenty-eight of them, never strayed, never really been tempted, and never been the target of any attention, because I'm safe. It had always been this way. When I was in High School it would drive me mad. I knew dozens of girls, pretty girls, sexy girls, girls everyone wanted to be with, and they all liked me - just not in that way. I was the one they came and told their problems to, the one they could tell who they really liked and could I, you know, drop a hint? It was never me they liked, not in that way.\n\nThis woman, no doubt, was another one of those. Despite knowing that, I was not foolish enough to turn down the offer of her company.\n\n\"It would be my great pleasure if you would join me,\" I said. \"Can I order you something to drink?\"\n\nShe smiled, warming my heart, and I struggled to keep my face still. \n\n\"A cocktail. Something frivolous.\"\n\nI raised a hand for the waitress and she came across.\n\n\"What kind of cocktail?\" I asked the vision.\n\n\"You choose. I really don't know one from the other.\"\n\nI picked something at random and sat back in my chair.\n\n\"My name is Annie,\" she said, and offered her long, slim hand across the table.\n\n\"I'm Thomas,\" I said, and shook her hand. I was surprised. I had expected one of those limp handshakes that melt away to nothing. Instead her grip was cool, firm and sure.\n\n\"What are you doing here, Thomas? A holiday, perhaps?\"\n\nI laughed. \"Afraid not, Annie. I'm working.\"\n\n\"And what is your work?\"\n\nThe waitress brought her drink and Annie thanked her, took a sip of the cocktail and smiled. \"Very good choice, Thomas. I like it.\"\n\n\"Good. I'm not sure quite how to describe what I do. You might call me a trouble-shooter, but that sounds far too glamorous. I fix things, computer systems, for companies.\"\n\n\"And you like this work?\"\n\nI smiled. \"I'm not sure how to answer that. If I say yes it makes me sound very sad. If I say no that's probably even sadder.\"\n\n\"So which is it?\" She took another sip of her drink, staring at me over the rim of the glass.\n\n\"I guess I do enjoy it,\" I said. \"I've always liked solving puzzles, and my job is just that. I solve puzzles other people cannot.\"\n\n\"It pays well?\"\n\nI shrugged. \"Okay, I suppose. \"\n\n\"You are very good at your job,\" she said. It was a statement, not a question.\n\n\"I think I am.\"\n\nShe nodded firmly. \"I thought you would be. You have that look about you. You are self-contained and confident.\"\n\nI couldn't think of anything to say for a moment, and sipped at my beer.\n\n\"And what brings you to Miami, Annie?\"\n\n\"I am a model,\" she said. \n\nI laughed. \"That doesn't surprise me at all. What else could you be?\"\n\nShe laughed back. \"I am working here until Saturday also. Will you be my protector for the week, when I am back in the hotel? I know it is a lot to ask, but it would mean so much to me. And I am not difficult to get on with. I will not bother you if you want to read, just sit here and read as well. I will get myself a book.\"\n\n\"You don't have one?\" I asked.\n\n\"I don't read very much. But I'm sure they have books for sale here. I will get one.\"\n\nI thought for a moment she was going to get up and buy one there and then, but she relaxed and sat back in her chair, crossing her longs legs at the knee and sipping more of her cocktail.\n\n\"It would be my pleasure, Annie.\" I said, and I meant it. Apart from her beauty, I liked the person. She made me laugh, and she was easy to talk to. There was something innocent about her that I found enchanting.\n\n\"You are eating dinner here?\" she asked.\n\n\"I ordered a table when I came in. I was trying to decide if I was hungry or not.\"\n\n\"I can join you?\" She looked down again, suddenly shy.\n\n\"Of course,\" I said.\n\n\"I will pay the bill,\" she said firmly. \"I will pay all the bill, for both your meal and mine. And the wine.\"\n\n\"There's no need,\" I said. \"I think I can manage to cover a little food and drink.\"\n\n\"No,\" she shook her head, \"I will pay the bills for our dinners this week. I have a lot of money, Thomas. It is silly how much they pay me for nothing. For looking like this.\" She held her arms out again, framing her perfect figure.\n\n\"You should not underestimate yourself, Annie. You are a very beautiful woman. Whatever they pay you is almost certainly not enough.\"\n\nShe smiled, shy again. \"Thank you, Thomas. From you that is a real compliment.\"\n\nA waiter approached us. \"Mr. Harper, your table is ready.\"\n\n\"Thank you, Jerry.\" I always made a point of remembering the names of as many of the hotel staff as I could. Good manners cost nothing, and often made my stay more comfortable. I had noticed over the years that the majority of guests treated staff as though they did not exist. \"Would it be okay if Annie joined me?\"\n\nJerry looked at Annie and nodded. I could see in his eyes what he was thinking, but didn't care. Let him think what he liked.\n\n\"Of course, Mr. Harper. If you would come this way?\"\n\nI tried to keep the smile from my face as he led us past the table I had watched being made up, and took us through the dining room to the far side. He pulled a chair out at a large table set directly against the picture window looking over the beach. The sound of surf came faintly through the triple glazing.\n\nAnnie sat, and because Jerry appeared to be distracted, I pulled my own chair out. Jerry handed each of us a menu and made a discreet exit.\n\nAnnie put her menu down and turned to look out through the window; her face, reflected in the glass, showing a smile. \"I love the sea,\" she said in a soft voice. \"I was born and brought up in a small town by the sea.\"\n\n\"Where was that?\" I asked. \"Somewhere in Europe, I would guess.\"\n\nShe turned back to me, her smiled growing. \"Yes. But I thought I sounded like an American now.\"\n\n\"Almost. But accents are a kind of hobby of mine. \"\n\nShe clapped her hands. \"So where in Europe? If you guess right I will order a very good bottle of wine for us.\"\n\nNo pressure, I thought. Although it was true, I was good with accents, and nine times out of ten I could pin someone down to a county if not a town. But that applied to people born here, not in Europe. \n\n\"Speak to me, Annie. Tell me something about your town.\"\n\nShe laughed. \"Then you will know where it is!\"\n\n\"Tell me about something else then. Tell me about how you became a model. I need to hear your voice so I can pin it down.\"\n\nShe looked at me, and then began to speak.\n\n\"Okay Thomas. That is fair, I think. Well... where to start? \"\n\n\"How old were you?\"\n\n\"Oh, very young,\" she said. \"Seventeen. A woman came to our school play, and saw me on the stage. After we had finished she came and asked to speak with my parents. She said I was very beautiful, and she would like me to go to-\" She stopped suddenly. \"Oh, Thomas, you're cunning aren't you. I nearly gave myself away then.\"\n\n\"Go on,\" I said, my head resting on my hands, watching her. It wasn't difficult to watch her.\n\n\"She would like me to go to a large town,\" Annie smiled. \"To have some photographs taken. She believed I could be a model. She believed I could make a career and make a lot of money. It was the money, I think, that persuaded my parents.\n\n\"My mother took me on the train. I did not understand the process then, just that it seemed dull and not at all exciting as I had imagined. I had to pose, had to wear different clothes, clothes from famous makers. And then we went home again and heard nothing for a long time.\"\n\n\"How long? What happened then?\"\n\n\"It was probably three months. I know I had moved on to my final year at school. I letter came in the post, saying that an agency would like to take me on, would like more photographs. So I went again, for a week this time, and they sold the pictures and after that everything became mad. I never finished school. From that moment on I hardly ever returned home.\"\n\n\"And your parents? What did they think about this?\"\n\n\"They were happy for me. I made a lot of money, and I bought them a new house, a new car, new clothes. I never had to buy my own clothes because fashion houses always want me to wear their latest creations. This,\" she said, turning her upper body to show off her dress, \"This is Gaultier. You could not afford this if you had to buy it. In fact, I don't think you could buy it.\"\n\nAs she spoke about her teenage years and her family I watched, listening to the intonation of her voice, but also entranced by her beauty. It was easy to see what the scout had seen in the girl. Her hair was ice-white blonde, very straight, cut so well it looked as though it was not styled at all, but every hair fell in exactly the right place; it framed her face, cut level to her chin on one side, slightly longer on the other.\n\nHer cheekbones were pronounced, her eyes a brilliant blue, clear and sparkling. The eyebrows arched above them were perfectly styled, so pale as to barely show. Her nose was slim, perfectly formed to enhance the features of her face. Her mouth was wide, with full lips that might look sullen in repose, but at that moment held a faint smile that enhanced her beauty. Her bottom lip was slightly fuller than the top, and as she hesitated to think her perfect white teeth would catch at it. She may have worn wore makeup, but it was too subtle to tell, and I doubted she would need it in any case.\n\nFinally, she stopped speaking. \n\n\"Finland,\" I said.\n\nAnnie stared at me, and then smiled.\n\n\"And the town?\"\n\n\"Oh come on,\" I said, \"Give a guy a break! I thought it was pretty good to get Finland. It could have been Sweden, possibly Denmark. It is Finland, right?\"\n\nAnnie nodded.\n\n\"And it must be west coast,\" I said, because the north is too cold, and there's not much south coast so I'll guess west coast.\"\n\nShe grinned, eyes sparkling, playing the game.\n\n\"And it must have been pretty close to the capital.\"\n\nGeography was a passion of mine. As you already know, I'm a sad boring middle aged man. I know many men my age who would rather admit to reading pornography than an interest in Geography. Very sad.\n\nAnnie put on a neutral face, but the hint of a smile played on the edges of her beautiful lips.\n\n\"So, let's see...\" I hummed a moment. \"Merikarvia\"\n\nAnnie laughed out loud, making other guests turn and look at us.\n\nLook, I thought. Look at this vision of loveliness laughing with me. \n\n\"No!\" she said.\n\n\"Oh.\"\n\n\"It is Kristiinankaupunki. The next big town up the coast.\"\n\nI laughed at her. \"And your name - it's Niki, not Anni. Right? You were named Anniki, and in America you shortened it to Annie - but your parents call you Niki, right?\"\n\n\"Niki,\" she said, wistfully. \"Yes, I am Niki.\"\n\nI held my hand out across the table, \"Hello Niki, it's a pleasure to meet you. My name is Thomas.\"\n\nNiki took my hand and held it for a moment longer than necessary. \"It's a great pleasure to meet you, Thomas. And I think for that you deserve a very good wine indeed.\" \n\n\"And do they call you Niki at home? \"\n\n\"My mother calls me Anni, without at e. My Poppa calls me Niki.\"\n\n\"What do most people call you? What should I call you?\"\n\n\"In America most people call me Annie, with an e. But I would like you to call me Niki. Is that alright, Thomas?\"\n\n\"It will be my pleasure,\" I said. \"I don't think I've ever met anyone before who changed their name in the first thirty minutes after meeting.\"\n\nNiki laughed and picked up her menu, scanned it quickly then looked at me. \"What are you going to eat?\" she asked.\n\nI barely glanced down. \"Fish,\" I said, \"Some sort of fish.\"\n\n\"Not steak? I thought American men always ate steak.\"\n\n\"Not this one. I do eat steak, but not often. Given a choice I usually have fish, or even, God forbid, something vegetarian.\n\nNiki laughed. \"Yes,\" she said, \"Fish - I like fish too. White wine then. Pick a white wine, Thomas, and make it a good one. I don't know what is good and what is not. You pick, please.\"\n\nI opened the wine list. I know a little about wine in the same way as many people know about art - I know what I like. I wondered if she really meant for me to choose what I wanted.\n\nI studied the wine list, allowing my eyes to drift on beyond my usual price band, on into the serious wines, the $100 plus bottles and beyond. I decided to not push my luck and chose something a third of the way through the list.\n\n\"Muscadet,\" I said, \"I nice Loire Muscadet. Usually underrated, but one of my favorite whites.\"\n\n\"Good. I trust your judgment, Thomas.\" She looked across at me, her face losing its humor and becoming serious, \"I trust you, Thomas. I think I made a good choice talking to you in the bar. Thank you.\"\n\nI smiled, flustered, suddenly becoming aware for the first time that I was sitting across the table from someone who might be one of the ten most beautiful women in the world. It all felt unreal, and then Niki laughed.\n\n\"Your face has gone... funny, Thomas. Are you okay?\"\n\n\"I was just thinking how glad I was you came and spoke to me,\" I said.\n\nJerry appeared silently next to our table and hovered. \"Are you ready to order, Mr. Harper?\"\n\nWe had the Snapper. When Jerry brought the wine he tipped a little into my glass to try. I knew the routine, from many, many years in hotels. To show you know about wine you never taste, there is no need.\n\nI swirled the clear liquid around my glass, tilted it to watch the alcohol rise up the side, pushed my nose down inside the bowl and sniffed once. I put the glass down and nodded. \"Very nice, Jerry, thank you.\"\n\nJerry smiled. He knew the rules as well. He filled my glass half full, repeated this for Niki, then drifted away.\n\nI raised my glass to Niki. \"To a week as friends,\" I said.\n\nShe smiled. \"A week as friends. An excellent toast - Kippis.\"\n\n\"Kippis?\" \n\n\"It is Finish for 'cheers'.\"\n\n\"Kippis,\" I returned, and touched her glass. The wine was indeed very, very good, and I realized that there was sense in spending so much money on a single bottle. I had never tasted anything as good in my life.\n\nAs we ate Niki pumped me for more information, and I told her about growing up in the sixties and seventies. She was fascinated because she had been born in 1987 and knew nothing of the revolutionary times in the States, of Vietnam, draft dodging, hippies and the counter-culture. I told her my hair used to come down below my shoulders, and ruefully ran my hand over my much shorter locks, which were now more gray that brown.\n\n\"You are married?\" she said, glancing down at the ring on my left hand.\n\nInvoluntarily I looked down as well, lifted my hand from the table.\n\n\"I am. I was.\"\n\n\"You are no longer married? What happened, Thomas?\"\n\n\"Death happened, I'm afraid.\"\n\nNiki's face fell and she put a delicate hand to her mouth. \"Oh, Thomas, I am sorry. I did not mean to pry.\"\n\nI smiled across at her. \"It's okay, I don't mind. It was five years ago now. It doesn't hurt too much anymore.\"\n\n\"You miss your wife?\"\n\nI nodded. \"Not like I did in the beginning. Back then I honestly had no idea how I was going to get from one day to the next. But now it's just a dull ache somewhere and there are some days when I don't think about her at all.\"",
        "\"Time heals,\" she said. \"Sometimes a clich\u00e9 is true, despite being a clich\u00e9.\"\n\nI told her about my wife and our life together, and as I told the story it sounded more exciting than the reality, but I felt that was best. The story masked my true feelings, of which I made no mention - how, since Angie had gone my heart felt frozen in my chest, that emotion had become an artificial construct I erected for the rest of the world, but which failed to touch me. And the feelings puzzled me, because though Angie and I had loved each other at the start, that love had slowly had turned into something less passionate, less fulfilling.\n\nIt felt good to talk, to skirt around my old life and feelings. I had no illusions about Niki, none at all. She was simply and wonderfully way out of my league, and that removed all the pressure of even trying to flirt with her. I had not felt so relaxed in a woman's company in a long, long time, and it felt good.\n\nAfter dinner Niki insisted on paying. I argued and lost.\n\n\"Thomas, I am rich,\" she said. \"I have no idea how much money I have. I always have enough. I simply must pay for tonight, and for the rest of our nights together.\"\n\nJerry was not impressed that I was letting the lady pay, but screw him, I thought. The meal had been adequate, but in that smart hotel kind of way where everything tastes good, but nothing tastes fantastic.\n\nWe returned to the bar and Niki drank vodka and I good Scottish malt. The bar had an excellent range, and I decided on Laphroig, from Islay, a small island off the west coast of Scotland.\n\n\"What are you doing tomorrow, Niki?\" I asked. \"Where are you working?\"\n\n\"In Miami,\" she said. \"It is fashion week in Miami. You did not know this?\"\n\nI laughed and shook my head. \"Must have slipped my mind. And then? Where next week?\"\n\nShe laughed. \"I don't know.\"\n\nI must have looked puzzled, because she went on: \"I hardly ever know where I will be from week to week. And to tell you the truth, I don't really need or want to know. I will be wearing someone else's clothes, that is all I need to know. At the end of this week I will be told where I am going. On Saturday morning I will have a delivery containing airline tickets and an itinerary.\"\n\n\"And you don't mind?\"\n\n\"It is my life,\" she shrugged. \"It is all I know.\"\n\nSuddenly I felt sorry for her. \"Don't you get lonely?\"\n\n\"Of course. All the time. But the career of a model is not so very long. Ten years from now, maybe less, they will not call me up anymore, and then I will have money and can do whatever I want.\"\n\n\"That's enough? A future somewhere off in the distance? And I don't believe that in ten years you will no longer be beautiful.\"\n\n\"You're sweet,\" Niki said, \"But it is enough for me. I do not mind. It is my life, and it has compensations. I see many, many different places. I meet many new people, and a few of them are nice people, like you.\"\n\nI think I may have blushed; pushing fifty and I could still blush.\n\nNiki drained her glass and stood up. She was very tall, and when I stood she was at least three inches taller than me, which I guess made her almost six-two. I looked down and was relieved to see that her heels probably accounted for two inches of that. I was not completely sure why I found that so comforting, that she was in reality only an inch taller than I.\n\n\"Tomorrow night, at eight?\" Niki said.\n\n\"It's a date,\" I replied.\n\nShe laughed, and then ducked and kissed me softly on the cheek. \"Thank you Thomas, for a wonderful evening.\"\n\nI watched her walk out through the room. All the other men watched her as well. Tall, elegant, slim and stunning. After she had gone I mentally shook myself and sat back on the bar stool.\n\n\"Another malt?\" the barman asked.\n\n\"Thanks Mike, I think I need one.\"\n\nI felt a warmth spread outwards through my chest that was nothing to do with the whisky, and believed it might be my heart beginning to thaw. \n\nTUESDAY\n\nMy day with the client went well. They wanted me to analyze their network infrastructure and software needs and recommend whether any improvements could be made. As with most of my jobs, I would charge them $20,000 for the week, ask them to spend another $100,000 on upgrades and replacements, write them a report on improvements that could be made and save them $250,000 a year. It was why I was always busy. In year one my clients would be up over a hundred grand. By year two they were saving a quarter million or more. I never advertised, never needed to.\n\nOver lunch I had asked if anyone knew of a good seafood restaurant close to our hotel, preferably on the ocean. There were several suggestions, and then one of the older techs said that Marty's was the place to go. It didn't look smart, and there were no waiters in dark jackets, but it served the best seafood in Miami. I jotted down the address, googled it and saw it was less than a mile down the beach from the hotel. Perfect.\n\nI got back to my room just before seven, undressed and hung up my work suit with the two others in the wardrobe and showered. I usually only shaved in the morning, but this time I stood naked in front of the mirror and ran a blade over my face.\n\nI rinsed the shaving foam away and dried myself, stood looking in the mirror at my body. It was not a terribly exciting sight. I turned and posed side on, tried the other side but it was no better. I turned right around and peered over my shoulder. My ass looked okay, I thought.\n\nI had not put too much weight on over the years, but neither had I ever done much in the way of real exercise other than swim most mornings. I supposed many men my age would be grateful to have a body like mine - just not me. Not that I was likely to do much about it now anyway. I turned back and looked down. At least my dick was OK, I thought. It always had been. Even un-erect it hung five inches down between my thighs. It had been almost three decades since I had done what all men do and measured it. I think I had been twenty the last time, and it had topped out at just under eight inches. I had no reason to think it had grown since then, and reason to believe it had probably gotten shorter.\n\nAs attributes went, it was probably the one most men would have envied. I laughed at myself and gave my cock and balls a little lift with the palm of my hand. \"Come on, big boy,\" I muttered, and walked through to dress.\n\nI had picked out clean briefs, socks and a blue linen shirt when the telephone on the desk trilled. I picked it up and said, \"Hello?\"\n\n\"Thomas? That is you?\"\n\n\"Hello Niki,\" I said. She is calling me to make some excuse, I thought.\n\n\"It is you. Good. I was not sure I had the right room number. I saw your key last night and thought I had remembered it. Will you come and escort me down to dinner?\"\n\n\"I would love to,\" I said.\n\n\"I am in room 901.\"\n\n\"Ten minutes,\" I said.\n\n\"I'll be waiting.\"\n\nI put the phone down and stared into space. I looked down, aware of a feeling inside my briefs I was not as familiar with as I had once been. My cock had started to fill, and was forming a noticeable bulge in the black cotton.\n\nI smiled sadly to myself. \"Pull yourself together, Tom Harper. That is not going to be required.\"\n\nLaughing, I dressed and then, before going out, splashed a dab of cologne on my neck and wrists. Stupid old man, I thought.\n\nNiki's room was on the ninth and top floor. The elevator opened to a long corridor. There were only five rooms shown on the plaque on the wall. 902,903 pointed left. 904,905 pointed right. Above the corridor in front of me was just the number 901.\n\nI made my way down towards the door at the end and knocked.\n\nThere was no sound, so I knocked again.\n\nI was about to try for a third time when the door opened and Niki stood there in all her stunning beauty. She ducked at me and kissed my cheek. \"Thomas, come in, I'm almost ready. It is a girl's right to be late, yes?\"\n\n\"Of course,\" I said, and followed her in as she turned away and revealed a sight that took the breath from my lungs. She wore a knee length dress, no doubt by a famous designer, but had left the zip down. The silk material - it looked like silk, and I had no reason to believe it could be anything but silk - hung open over her back, the long muscular length displayed where the material ran down in a long V to stop just where the curve of her buttocks began to swell. The center of her back, along her spine, formed a deep valley from shoulder to waist. Her skin was completely flawless, pale and smooth. No bra strap broke the smooth expanse displayed.\n\n\"Do me up, Thomas,\" she said, glancing back over her shoulder, \"I can never reach.\" She laughed. \"I am spoiled, no? I usually have people to dress and undress me.\"\n\nI almost retorted by saying \"If there's ever a vacancy\" but stopped myself just before the words emerged.\n\nI took a step to close the gap between us and gripped the zipper in trembling fingers. I drew it up along her spine, taking great care to keep my hand away from her skin. As the material closed on her shoulders the back of my hand brushed her neck and she shook her head, dancing long blonde hair over my wrist.\n\n\"Thank you,\" she said.\n\nI would have said thank you back, but didn't trust myself to speak. Luckily I didn't need to. Niki was in a good mood and moved elegantly across the enormous room.\n\n\"Would you like a whisky before we go downstairs?\"\n\n\"Thanks, just a small one.\"\n\nShe poured dark peaty liquid into a large square cut glass. I noticed she had obtained a whole bottle of Laphroig from somewhere. She handed me the glass and picked up her own containing something clear and sparkling which she raised in a toast.\n\n\"Kippis,\" I said.\n\nNiki laughed and returned the toast.\n\nHer room sat at the very top of the hotel, with large picture windows leading onto a balcony. They stood open, letting the sound and scent of the ocean into the room. There was no sign of a bed, so I assumed it was a suite and the bedroom would be through one of the three doors that led from the main area.\n\nNiki made no move to sit, but went to the windows and stepped out onto the balcony. The breeze caught her hair and danced it back around from her shoulders, tugged at the hem of her dress and wrapped it against her legs. She turned and smiled at me, motioned me out, and my heart almost burst in my chest.\n\nYou're a safe pair of hands, Thomas Harper, I told myself, that's all. Pull yourself together.\n\nI stepped onto the balcony to stand beside her and she put her arm through mine and leaned her head against mine - should have been my shoulder, but she was too tall for that.\n\n\"Smell the ocean, Thomas,\" she said. \"There's nothing else like it.\"\n\n\"Do you get to see it often, Niki?\"\n\nShe shook her head, moving it against the top of mine. \"I go where my work sends me. Usually it is nowhere near the ocean. So when I get the chance I make the most of it.\n\n\"I hope you don't mind, \" I said, \" but I've booked us a table at a beach front restaurant. The place comes recommended, and I thought it would be good not to eat in the hotel.\" I realized I was nervous, as though we were on a first date, and told myself not to be so stupid.\n\nNiki laughed, \"I am yours to command, Thomas.\"\n\nDespite knowing full well she meant something different, my stomach gave all kinds of little flips. \"Good. Shall we go then?\"\n\nWe left the windows open and descended to the ground floor. A doorman waved a cab towards us and we were driven south along the beach to a small building built half on the sand. It looked un-prepossessing, with plain brick walls and a Spanish tile roof, but inside the lights were dim, the atmosphere warm and fragrant and we were led to a table on the ocean side, sitting out below a long porch, sand crunching under our shoes.\n\nNiki ordered the food and I ordered the wine. We ate and drank and talked about everything and very little.\n\nNiki told me that, unbelievably, she had always been considered an ugly duckling in school, too tall, too gangly, her mouth too wide, her cheekbones too prominent. As sometimes happens, that awkwardness had evolved into a stunning beauty. As she spoke I gazed at her, happy just to be in the company of this beautiful woman who was easy to be with as well as wonderful to look at. \n\nI was aware that people glanced our way, the men in admiration, the women in envy or hatred or wistfulness. Inwardly I was amused to wonder what they might be thinking of this middle-aged, plain looking man accompanied by such a vision of loveliness. Sugar daddy, maybe.\n\nNiki once again insisted on paying the bill, and I was mature enough not to fight her. That was a game played by younger men - at my age I had no false sense of pride, and it gave her pleasure to do this thing, and it was my pleasure to allow her.\n\nWe left the restaurant in full dark and Niki kicked off her shoes and looped them through her fingers. She grabbed my hand and pulled me out onto the sand. \"Walk with me, Thomas. Let's get our feet wet.\"\n\nI laughed and stopped, taking longer to untie my shoes. I removed my socks and tucked them into the shoes, rolled up my trousers to the knee. I looked completely and utterly ridiculous, and Niki burst out laughing and bent over.\n\nI straightened my back and walked past her to the waterline and after a moment she pulled herself together and ran to catch me up, once more hooking her arm through mine.\n\nWe walked for almost a mile along the sand, all the way back to our hotel. My trousers unrolled more than once and by the time we walked up off the sand to the lights of town they were damp and clinging to my legs.\n\nIt was obvious how good the hotel was by the way none of the staff even looked at us as we walked through the lobby, Niki in bare feet and wet legs, me in soaking trousers. In the elevator I punched in floor nine and also my own floor.\n\n\"You are coming up, Thomas?\"\n\nI looked down at myself. \"I think I'd better get changed,\" I said. \"And I've got an early start tomorrow. I'll see you tomorrow night?\"\n\n\"Are you sure?\" Niki said, and I thought she looked sad, but refused to read anything into that.\n\n\"I would love to, but we have all week yet. At my age I need my sleep.\"\n\nShe smiled. \"You are young, Thomas.\" She tapped her fingers against her chest. \"In here, where it matters, you are young.\" She reached across and put her hand against my chest, her palm flat. I could feel my heart beating against her palm. \"And you are not old in your body either. You have all your hair. You're face is not lined... \" she cocked her head and looked at me, \"Except around your eyes, and that looks good.\"\n\nThe elevator pinged and the doors opened on my floor. I held the button to keep the doors open. I waited, and finally Niki withdrew her hand and let it drop to her side.\n\n\"Goodnight Niki, sleep well.\"\n\n\"Goodnight Thomas. Until tomorrow.\" She bent slightly and kissed me on the cheek, then smiled and put her hands on my cheeks, turned my face and kissed me again on the lips. \"Thank you for tonight. I had a wonderful time.\"\n\nI released the button and stepped out, turned and watched her as the doors closed and the elevator ascended. I could feel a lightness in my chest, and a heaviness in my shorts, and shook my head. Foolish, foolish man.\n\nWEDNESDAY\n\nI surprised myself by sleeping well and woke before the alarm. I rolled out of bed naked and as I did whenever the opportunity was available I pulled on swimming trunks, wrapped a hotel robe around myself and took the elevator down to the basement and the hotel pool.\n\nIt was not yet seven and the water was empty and still; at this time of day it almost always was. I dropped the robe on a chair and dived in, pulling easily to begin with until I had loosened up, then digging into a strong crawl for ten lengths.\n\nI finished up with another slow ten lengths and then rested my arms on the edge of the pool and caught my breath.\n\nI heard the outer door from the lobby open, and then the inner door pushed wide and Niki stepped through. She was pulling her own robe over her shoulders and stopped when she saw me, startled, then recognizing who it was she grinned.\n\n\"Thomas, I didn't know you came swimming?\"\n\n\"Whenever I can,\" I said. \"Too many hotel meals is not a good idea at my age, not unless I do something to burn the calories off.\"\n\n\"You always pretend you are old, Thomas, and you are not.\" Niki pulled her robe all the way off and dropped it on the chair next to mine. She walked across to the pool edge and stood over me looking at the water.\n\nI took the opportunity to study her - it was a pleasant lesson. I had never seen anything quite so perfect in my life. Her skin could have been marble it was so smooth, pale and flawless. Her long legs stretched endlessly to her hips. Her swimsuit was one piece, pale blue and cut high at the sides, high also at the neck so that her full breasts were flattened by the tight material. My eyes strayed to the junction of her thighs, to the way her muscles hollowed as they neared that point, to the way the material stretched tight across her pubic mound, cupping the area between her legs, revealing a trace of plump labia and a shadowed line running between them.\n\nNiki pulled me from my trance by diving directly over my head and into the water with hardly a splash.\n\nShe pulled with long powerful strokes, performed a perfect rolling turn and came back to stop beside me.\n\n\"Are you going to race me, Thomas?\"\n\nI laughed. \"That would be no race, Niki, you'd demolish me. Beside, I'll be late for work.\"\n\n\"See you tonight?\" she said.\n\n\"Of course.\" I pulled myself from the pool and dried myself on my robe, standing for a moment to watch as Niki swam another two lengths. As she came back to me she stretched her arms out and drifted, looking up at me. I became aware I had grown semi-erect watching her, and fearing this would show I pulled the robe over myself and tied it around my waist. I waved and left the pool, heard Niki roll back into the water and the splash of her arms as she moved away.\n\nBack in my room I turned on the shower and stepped under the hot spray, washing the smell of the pool off me, hoping it might also wash away the emotions I was feeling about my beautiful friend. She had chosen me as a refuge from aggressive men, and here I was having those same thoughts about her. As I soaped myself my cock grew hard under my hand, hard and long and thick. \n\nI slid my soapy hand around it and began to rub myself. I had avoided doing this all week. As a single man I was no stranger to self relief, and brought myself to a climax at least a couple of times a week. This week I had abstained, feeling somehow that it would have been disloyal to Niki. I had waited too long.\n\nMy excitement was suddenly immense. I closed my eyes and pictured Niki just before she had dived into the pool. Her long, sculpted body standing above me, the shadow between her legs, the hint of her labia and slit, the smooth skin rising over her hips revealed by the high cut of her suit. I imagined her naked, the alabaster skin unblemished, her breasts firm and round, nipples erect; I imagined her sex, light blonde hair neatly trimmed, her labia parted and a glimpse inside of pinkness.\n\nI came hugely, my hips jerking, my knees going weak. I gasped and continued to rub myself hard, letting the warm seed explode from my cock and fall to the shower floor. I moaned and leaned one arm against the wall to hold myself up.\n\nSlowly my arousal faded, I slowed my hand, smearing my slick palm along the length of my cock as it became softer. \n\nI finished washing and stepped out, dried in one of the giant hotel towels. I felt guilt creeping into my mind now, and was uneasy and disturbed. There had been no way I could have stopped myself from jacking off then, and I felt slight regret, sorry more that I had not managed to think of someone other than Niki. I really liked her, and I was a man and would have been mad not to find her attractive, but I had hoped I was more mature than that and could have not thought of her simply as an object for sex.",
        "I sighed and started to dress. I had sent my shirts and underwear from earlier in the week to the hotel laundry and they lay clean and fresh in cellophane wrappers on the foot of my bed.\n\nThat day was long and hard, the client more demanding that usual and late in the afternoon I was beginning to wonder if this job had been a good idea. I finished late, returning to the hotel after seven. As I walked in through the lobby I was feeling better about myself. I had done nothing to indicate to Niki how attractive I found her - in fact she probably knew that, knew how all men must feel around her - but I had been civilized and mature and would continue to be so. The pleasure of her company was enough for me - more than enough.\n\nI was turning towards the elevators when I saw her standing at the reception desk. She had not noticed me, but the receptionist raised her eyes and said something and Niki turned and smiled, happy to see me. She waved me over to her and my heart began to flutter in my chest.\n\n\"Thomas, the man I wanted to see,\" she put her arm around me, pulled me against her and kissed my cheek. \"Come with me.\" She drew me towards the elevators and waited for the doors to open. We stepped inside and she pressed my floor and then hers. Once the doors closed she pulled out a key card.\n\n\"For you, Thomas, because you had to wait when you came last night. I asked the hotel for a spare card, because I was always leaving mine in the room, so this one is for you.\" She placed the thin plastic card into my hand.\n\n\"Are you sure, Niki? What if I turn out to be a serial killer obsessed with blonde Finnish models?\"\n\nShe laughed and clapped her hands together. \"Then I am screwed already, yes?\"\n\nThe elevator halted at my floor and the doors opened. I stepped out and Niki followed me, not yet ready to leave.\n\n\"You are the most trustworthy man I have met in a long, long time, Thomas. Tonight I thought we might go dancing. Do you dance, Thomas?\"\n\n\"Uh, some, I guess. A little.\"\n\n\"Good. Eight o'clock. Just come on in and we will go somewhere to dance. I will ask the hotel where is good.\" She pecked me again on the cheek and stepped back into the still open door.\n\nAfter she had gone I stood for a while in the corridor, looking down at the key card in my hand, shaking my head, wondering what the hell was going on and whether it was good, bad or insane. She could not possibly be flirting with me, but it felt just like that. I sighed and turned away to my room. I was reading the signals wrong, I knew, and would act on the assumption that I was wrong, and behave as I had been so far this week. But God, she was so beautiful...\n\nI showered, this time resisting the heaviness in my cock, splashed cologne on and dressed in loose fitting shirt and slacks. At two minutes before eight I left my room and took the elevator to the ninth floor.\n\nApproaching Niki's room I found my hand holding the key card was shaking. She had said to go straight in, so I slid the card in the lock, knocking at the same time, and pushed the door open.\n\n\"Niki! It's Thomas.\"\n\n\"Hi,\" she shouted from behind one of the doors. \"Help yourself to a drink, I'll be out in a minute.\"\n\nI poured a very small malt and added a lot of water. From behind one of the doors a hissing I had not been aware of stopped and I assumed Niki had turned off the shower. I went out onto the balcony and sipped my drink, watching the last of the light fade from the ocean.\n\nFive minutes passed and then the bathroom door opened. I turned as Niki stepped out, wrapping a towel around her hair, dressed in a short silk robe that covered less than half her thighs, the neck scooped to reveal the upper curve of her breasts.\n\n\"Pour me a Vodka, Thomas,\" she said, \"I am late, I'm afraid. I lay down after I came in and fell fast asleep. Sorry.\"\n\n\"Don't be,\" I said. \"Anything with this?\" I held up her glass.\n\n\"Some orange and soda. It's in the cooler over there.\" She pointed, pulling the hem of her robe up along her thighs and I looked away rapidly, already more disturbed than I should have been. I mixed her drink and turned back to her, but she had already gone through to the bedroom.\n\n\"Your drink, Niki!\" I called.\n\n\"Bring it through, Thomas.\"\n\nI swallowed and walked across the large room and into her bedroom. It was smaller than the main room, but not by much, with the biggest bed I had ever seen, and another window onto the balcony. Niki was sitting at a dressing table drying her hair, ice blond locks flying as she moved the dryer. \n\nI placed her drink on the dresser and stepped back, but not before my eyes had unconsciously dropped to look at the large area of pale skin exposed where her robe had pulled away from her breasts. I glimpsed their full upper curve, the shadowed valley between, the hint of a pink nipple before I looked away.\n\n\"I'll be on the balcony,\" I said.\n\n\"Oh... Okay. I won't be long.\"\n\nI went out and picked up my drink, poured more malt into it and swallowed it back, topped it up again.\n\nDid she know what she was doing, I wondered? She must. Surely she must know the signals she was giving out. But I could not believe it, not me, almost twice her age and no great catch even twenty years ago.\n\nI leaned against the balcony and looked back into the room. Niki's bedroom door was still open, but the dressing table was hidden. I watched the light falling on the wooden floor, saw a shadow cross it and then Niki walk across the gap completely naked, oblivious to my gaze, passing on to the other side of the room. For that brief moment I had seen her long legged, slim and perfectly formed, endless legs striding, tapering from toned thighs and the curve of her buttocks, her waist nipping in and then swooping up along her back. She had been half turned away and one breast had been partially revealed, not big, but rounded and perfectly shaped. Her sex had been hidden... but I could imagine... oh God I could imagine!\n\nI waited, watching the pale wooden floor but when she reappeared she was dressed. But how she was dressed! There was no repeat of the designer clothes of the previous two nights. Instead she had on a pair of black pants, tight from waist to ankle, almost as fine as tights except they hid what lay beneath even if they failed to disguise the contours of her hips and thighs and legs. Above the trousers she wore a black tee shirt, also tight, accentuating the narrowness of her waist and the bloom of her breasts.\n\n\"Is this okay, Thomas? If we're going to dance I need to be able to move.\"\n\n\"I'll be fighting them off,\" I said.\n\nShe laughed. \"Good. You are my knight in shining armor.\"\n\nNot so shining, if you knew what was on my mind, I thought.\n\nWe took a taxi along the beach to a place recommended by the hotel. It was Cuban, hot and smoky and loud with brass music and guitars. Niki laughed and jumped up, entranced.\n\nWe ordered beer and pressed through the crowd to find a space to dance. We started apart, Niki fitting into my arms and twisting and turning. As the evening wore on and more beer was consumed she moved closer. We danced, stopped to eat from tables piled with hot, spicy food, danced some more, drank more beer. \n\nBy ten the full length of Niki's body was pressed against mine, her head resting on my shoulder, which felt odd because of the difference in height - odd but good. Her breasts pressed against my chest, hardly disguised under the thin tee shirt, flattened softly against me. Her hips pressed into mine and I had to keep leaning outwards to remove the pressure, not because I wanted to but because I dreaded her feeling my obvious excitement and being disgusted.\n\nI rested my hand on her waist, tucked down against the angles of her hips, and let the smell of her hair fill my head.\n\nSometime between ten and eleven we took a break and sat at a table nursing two cold beers. The sweat was rolling down my sides like the moisture on the bottle. The room was even more crowded and noisy, the heat of all the bodies and our own exercise raising my temperature to almost fever level. \n\nBehind Niki's shoulder I saw people move aside, and a tall black man walked through the space as they parted for him. He stopped by our table and looked at me. I felt my insides give a little flip. What the fuck?\n\n\"Can I help you?\"\n\n\"Mr. Raul would like to see you,\" he said.\n\n\"I'm sorry?\"\n\n\"Mr. Raul, the owner of this club, would like you to join him at his table.\"\n\n\"We were about to leave,\" I said.\n\n\"He insists.\"\n\nI wondered whether we would have any chance of making it out before this giant stopped us. I glanced around, but the crowd was too dense, we would get nowhere.\n\n\"Niki?\" I asked.\n\nI don't know if she had picked up the same vibe as me, but she seemed unconcerned. Maybe that came from a life as protected as hers.\n\n\"Sure,\" she said, and stood. The man towered over her - something she was probably not used to.\n\nHe turned and led us through the parting crowd until we came to the back of the room where a large area was cordoned off. A small lean man sat at a table, two Hispanic women sitting with him. A bottle of champagne was open and chilling in a bucket.\n\nThe giant lifted the rope separating the area and we walked through into the lion's den.\n\nThe slim man rose and offered his hand. I shook it and felt a strong grip returned. For a moment he did the man thing and squeezed hard. I just returned the pressure until he nodded. It was the right move. Then he took Niki's hand and kissed the back of it.\n\n\"Please, sit and join me for a moment.\"\n\n\"We were about to leave,\" I said, \"but your friend insisted...\"\n\nThe man laughed. \"Jesus always does as I ask him, but he sometimes does not appreciate that tact is more effective than muscle. Forgive me. I did not mean to detain you. If you have to leave now then please go ahead, but it would be my pleasure if you joined me for a drink.\"\n\nNiki was already sitting, so I nodded and joined her. Jesus did the waiter thing, badly, and poured champagne for us both.\n\n\"I hope you do not think me too forward, but I have been watching you dancing and I was entranced. Such a wonderful couple. Such a beautiful creature,\" he said, and inclined his head towards Niki.\n\nShe smiled. \"Thank you.\"\n\n\"Un hombre de suerte,\" he said to me in Spanish.\n\n\"Yes,\" I replied, \"I am a very lucky man.\"\n\nRaul laughed. \"\u00bfHablas espa\u00f1ol?\"\n\n\"Si, yo hablo espanol.\" I said. \"But not enough for a conversation.\"\n\nRaul threw his head back and laughed. \"Then we will talk in English, okay?\"\n\nI sat back in my chair. The uneasiness I had felt was fading. Raul meant neither of us any harm, he was simply entranced, in the way of many men, at the presence of Niki's beauty. He did not want her for himself, and was perfectly happy she was mine. He simply wanted to catch a little of the envy that was being thrown my way by all the men in the room, and bask in some of my glory.\n\nWe talked about nothing at all with him, our conversation the very definition of small talk, and after half an hour, when I felt a polite moment had arrived I said we really needed to leave.\n\nRaul smiled and shook my hand again, hugged Niki and then had Jesus escort us through the crowd to the door. In the suddenly cool night air Niki slid her arm through mine and pulled me tight against her.\n\n\"Shall we walk back along the beach again?\" she asked. We were not quite a mile down from the hotel. I just hoped I would be alert enough tomorrow to work, but there was no way I was going to say no. Still arm in arm we walked out onto the sand and strolled along the surf line.\n\nInland, cars passed on the road. Restaurant, hotel and bar light glittered and the faint wash of conversation and laughter drifted across to us. On the other side the ocean murmured, deep and powerful, it's dark presence oblivious to the humanity clinging along its edge.\n\nWe reached the low fence marking off our hotel's private area of beach and stepped over it.\n\n\"Let's swim,\" Niki said, pulling me back towards the surf.\n\n\"Here?\"\n\n\"Let's go skinny dipping, Thomas. Right here!\"\n\n\"Uhm,\" I said.\n\nNiki looked at me, cocking her head to one side. \"You Americans,\" she laughed, \"So prudish. In Finland we always swim naked. It's the best way.\"\n\nShe turned away from me and took four quick steps, grasped her tee shirt and lifted it over her head. Beneath she was naked, no bra marked her flawless skin which glowed pale in the light reflected from the hotel. Then she pulled at her pants and slid them down over her hips. Here too nothing lay beneath and she bent to pull them off, the round globe of her ass outlined fully. She tossed the pants onto her tee shirt and looked back at me.\n\n\"Come on, American, get naked and we will go swimming.\"\n\nI couldn't think of any excuse to say no, and I didn't want to.\n\nIt took me longer to undress. I had shoes, socks, pants and briefs to negotiate. I unbuttoned my shirt and added it to the pile and straightened up, trying not to hunch over in the way many naked people do.\n\nNiki looked at me and grinned, grabbed my hand again. She muttered something I didn't catch and involuntarily I said, \"What?\"\n\n\"Big boy,\" she repeated, and laughed, let go of my hand and ran into the water, dived and rolled onto her back.\n\nI looked down. At least I wasn't hard, just slightly engorged. My cock swung down along my thigh, maybe seven inches long, my uncircumcised head still cloaking the glans. With luck the water would cause me to shrink. I followed Niki in.\n\nUnfortunately the water was at blood heat, and wrapped silky fingers all across my skin, making the situation worse. Niki did nothing to help when she swam up behind me and wrapped her arms around me, pulling her slippery wet body against my back. I could feel her breasts flatten and part against the muscles of my shoulders, her nipples poking small dents against my skin. Niki's pubic mound pressed against the cheeks of my ass and all I could feel was skin and warmth.\n\nThen, thankfully, she let go and stroked away. I turned and followed, keeping a distance between us.\n\n\"I love swimming in the ocean,\" she said, floating on her back, her arms and legs moving languorously. The ocean lapped at her breasts, rising and then falling, black water spilling down over the pale mounds. \"I love swimming naked too. Don't you?\"\n\n\"It has its charms,\" I said, and I must have been looking at her because she laughed and splashed me with spray.\n\n\"Behave yourself, Thomas. You are my guardian, remember.\"\n\n\"I'm trying,\" I said.\n\nNiki stopped swimming and trod water and I became aware we had drifted out from the shore. She looked at me seriously.\n\n\"I'm sorry, Thomas. Am I teasing you like this? I never thought what I was doing. I apologize.\"\n\n\"There's no need, Niki. You are a very beautiful woman, and I would be foolish to say I did not enjoy looking at you. But I can appreciate a thing of great beauty without having to own it.\"\n\nShe still looked serious. \"If you are sure, Thomas. I like you too much as a friend to upset you. Say if I am doing wrong and we can go back in.\"\n\n\"Act as you feel comfortable, Niki, and don't worry about me. I'll tell you if I think things are getting too much for me.\"\n\n\"Yes?\" She gazed at me.\n\n\"Yes,\" I nodded.\n\n\"Good.\" She darted towards me, put her hands on my shoulders and lifted herself up against me, pushing my head under water.\n\nI flailed, brushing against her stomach, then twisted away and tried to grab her back but she had darted away like a fish and when I surfaced she was three yards away. I dived and swam towards where I had last seen her, reaching out to grab her but when I got there she had gone again and I felt her slide against my back again, the whole length of her from stomach to knee slipping along the back of my thighs.\n\nI turned, lifting my head above the water to gasp down air, went down and grabbed her ankle as it slid past me. She felt my grip and tried to kick away but I had her firmly now and pulled her back, walking my two hands up her leg to her calf, her knee and then her thigh. I reached almost to the top of her thighs and felt her stop pulling and drift. I hesitated, then moved on to her waist, grabbing her with both hands, almost able to close my fingers around her. We were both out of our depth, but not by much and I could reach the sand with my feet and heaved her up with all my strength, throwing her into the air. Even underwater I heard her scream and then splash down nearby.\n\nI surfaced and pulled air into my lungs, turned to find her but she had gone. I twisted back to land, nothing there, back to the dark ocean and still nothing. I felt a flutter of panic start up in my stomach. Where the hell was she?\n\nThen I felt her, fingers on my ankle now, then walking up my leg. She must have been lying close to me as she rose because I could feel a tickle against my skin as her fine hair floated in the water and drifted across me.\n\nShe reached my thighs and came on, and I started to worry. My cock had grown fuller in the water and with our playing and she might not realize that-\n\nShe hadn't. Walking her hands up my thigh she could not know how hard I was, and I felt her hand brush against my cock. There was a hesitation and then she snatched her hand back and burst to the surface beside me.\n\n\"Thomas, I'm sorry, I didn't think...\"\n\n\"It's okay,\" I said. \"If we want to go skinny dipping there's bound to be something like that now and then.\"\n\nShe looked at me, her face crestfallen. \"I did not mean... I hope you don't think.... although you are an attractive man, I mean, not that I would... oh fuck!\"\n\nI laughed. \"Niki. Forget about it. Here,\" I lunged at her and brazenly grasped her breast in my hand, left it there for a moment and then let go. \"See - accidents happen.\"\n\nHer eyes widened and then she smiled. \"You are a good man.\" She drifted towards me and reached out, put her arms around my shoulders and pulled me towards her, face to face. I felt her body come across and touch mine, meeting in discrete parts, a breast against my shoulder, another against my chest, a thigh brushing my hip, her stomach meeting mine, her pubic mound pressing against my navel. She kept coming, pulling me into her arms and legs until I was imprisoned, then put her mouth gently against mine and kissed me.\n\nI felt myself fill suddenly and stiffen and my cock swam through the dark water between us and lodged between her thighs, sticking out between the cheeks of her ass.\n\nI saw her eyes open in surprise and I pushed and swam away from her. I tried to shrug but the water hid the movement.\n\n\"My turn to apologize, I think,\" I said.\n\n\"There is no need, Thomas. I think I would be more upset if I did not have that effect on you, don't you think?\"\n\nWe drifted like that, three feet apart, my cock still hard and burning and I moved my hands and legs to ensure I kept it away from her.\n\n\"Time to go in, I think,\" I said.\n\nNiki looked into my eyes, something clouded in hers, then nodded. \"Maybe so.\" She rolled and began to stroke towards the shore. I watched her go, fluorescent algae in the water sparkling around her limbs as she went. Then I swallowed hard and followed her at a distance.\n\nBy the time I walked out through the waves Niki was pulling on her tight pants, struggling to get them up over her wet legs. I turned away and started to dress myself.\n\nWhen we were both ready we walked up towards the hotel, me keeping a distance between us. Something felt as if it had changed, but whether for good or bad I could not be sure until I felt Niki's hand reach for mine again. I turned and smiled at her.\n\n\"Pool in the morning, Niki?\"\n\nShe smiled back. \"I'll come down earlier and race you.\"\n\nTHURSDAY\n\nFor some reason my client's attitude had changed overnight and we made huge progress, so much so that I was sure I would finish up early on the following day. I left their offices just before six, left with them happy, left with me happy that the job was being well done.",
        "I didn't see Niki anywhere when I came in, had not seen her since the morning when we had swum together in the pool. She had seemed her usual self, with no sign of any embarrassment about the night before.\n\nI went to my room and showered, shaved and dressed in my usual shirt and slacks, picked up her keycard and walked to the elevator. I glanced at my watch and saw I was ten minutes earlier than usual and smiled. I shouldn't try to look so keen.\n\nThe elevator doors opened on a single black woman standing in the corner. She was almost as tall as me, her skin burnished, dark and flawless. I nodded and smiled, stepped in and pressed nine. I noticed her glance briefly at me and then look away in the way people in elevators do, pretending to be fascinated by some small blemish on the wall.\n\nThe elevator rose quickly and pinged and the woman and I looked at each other again as we stepped out together and walked down the long corridor to 901. I pulled the key card out of my shirt pocket and held it ready.\n\n\"You must be Thomas,\" the woman said, her voice as dark and smooth as her skin.\n\nI stopped, the card held out towards Niki's door.\n\n\"I'm sorry?\"\n\n\"You are Annie's friend, Thomas, aren't you?\" She smiled, showing perfect white teeth.\n\n\"I'm Thomas Harper, yes,\" I said.\n\n\"I'm Desi,\" she said. \"I work with Annie. I've come to pick up some dresses.\" She grinned. \"God, she's been talking about you all week, and here you are!\" She looked at me, not unkindly, but maybe puzzling over what all the fuss had been about.\n\nI held out my hand, \"Pleased to meet you.\"\n\nShe stepped inside my hand and put her hands on my shoulders, kissed me on one cheek, then the other. \"You too,\" she said. \"Wow!\"\n\nHer skin was hot when she touched me, her scent spicy and musky, rising in waves from her.\n\nI pulled myself back to the present and opened Niki's door.\n\n\"Hi honey, he's home!\" Desi shouted, and I felt myself blush.\n\nNiki was nowhere to be seen but I could hear the shower running. A moment later the door opened and Niki looked out, a large white towel held against her body, water streaming down her face and shoulders.\n\n\"Oh, Hi Desi. That stuff's on the bed, through there,\" she pointed, then looked at me and gave me a dazzling smile. \"Hi Thomas.\"\n\n\"Hi.\"\n\nShe stood in the door, waiting, as Desi walked through to the bedroom, her hips swaying in that way only models have perfected.\n\n\"Finish your shower,\" I said, \"I'll fix us some drinks.\"\n\nNiki made no move from the door.\n\n\"What?\" I said.\n\n\"You haven't said hello to be properly yet. I'm waiting...,\" she said, putting a finger on her full lips.\n\nI sighed. It was a hard, hard world. I stepped across and kissed her on the cheek, but before I could turn away she grabbed my chin in one hand and turned me so she could kiss my mouth. Her other hand fumbled to keep the towel up.\n\nShe stepped back and looked at me and nodded. \"Better.\" Then she closed the door.\n\nDesi came back through with three dresses over her arm. \"I've taken them!\" she called through the door, then, \"'Bye Thomas. It was a pleasure.\" With a smirk she was gone, dragging her scent and heat after her.\n\nI mixed drinks and slumped back onto the couch, suddenly feeling exhausted by the waves of emotions that were running through me. Should I, could I, change the way I behaved with Niki? Or was I going to ruin what was starting to feel like a special relationship? Too many questions, too many repercussions if I got it wrong. I had done alright so far by behaving as a gentleman - I would continue in that manner and finish up the week with Niki still a friend. That, I decided, would feel pretty good.\n\nAs if my small decision was some turning point, I felt my shoulders relax and sank back into the soft cushions of the couch. The hissing of the shower stopped and I drank some more of the peaty whisky. Long after I swallowed the taste lingered in my mouth and nose, would linger, I knew, for hours. I got up and poured myself a second glass, mixed a drink for Niki, Vodka, some orange, ice and soda water, half filling a glass. I put it down on the coffee table next to mine and sank back into the cushions. \n\nI was daydreaming, my eyes growing lidded, when the bathroom door opened and let out a bloom of steam through which stepped Niki in the same small robe as last night, tied tight to accentuate the narrowness of her waist, clinging to her thighs and revealing her long, slim legs.\n\n\"Oh, a drink, good,\" she said and leaned forward to pick up her glass. My eyes followed the V of her robe as she bent towards me, could not have done anything else, and I saw the heaviness of her breasts shift and move beneath the thin material, glimpsed for a moment the shadowed valley of her cleavage. Then she stepped around the table and dropped onto the couch beside me.\n\n\"Thomas, do you mind if we stay here tonight? I've had a long day, and I have no energy left at all. We can order food.\" She looked at me and raised her eyebrows.\n\n\"Of course. If you're tired would you like me to go, you can get an early night.\"\n\nShe reached across and touched my arm with her long fingers. \"No, stay. I don't want you to go, but I just want to relax. What is it you Americans say? We can 'chill out', yes?\"\n\n\"We can certainly do that,\" I said. \"Although I'm not sure I'm of the chill out generation. I'm the tune in, turn, on, drop out age, remember?\"\n\nShe laughed. \"You are a child of the seventies, Thomas. You invented chilling out, you just called it something else.\"\n\n\"What do you want to eat?\" I asked.\n\n\"Something light. A salad, some chicken, a nice bottle of white wine. Can you call down and order - I trust your judgment.\"\n\n\"Sure.\" I got up and lifted the phone, expecting her to follow and go to get dressed, but she stayed where she was, lifted her long flawless legs and rested them on the coffee table. The silk of her robe draped, valleyed in between her thighs, caressing her skin like I wanted to.\n\nI called room service and ordered for us both, adding a bottle of good Chablis. It worried me a little that I had become so quickly used to spending Niki's money, but not enough to not do it.\n\nI returned to the couch. Niki lifted her legs and turned so they fell onto my lap. As she twisted around the robe pulled up along her thighs, almost revealing her most secret place.\n\n\"Thomas, my feet are sore. Today they made me wear really high heels and walk up and down and up and down all day long. Are you any good at foot rubs?\"\n\n\"I don't know,\" I said. \"I'll try.\"\n\nI placed both hands around her left foot and turned it slightly to give me better access to her heel, pushed my thumbs hard into the pad there. Niki grunted and her foot twitched away from me.\n\n\"Too hard - sorry,\"\n\n\"No, not too hard. Too good. Don't you dare stop.\"\n\nI smiled and continued.\n\n\"Did you do this for your wife? You're very good at it.\"\n\n\"She liked having her feet stroked,\" I said, thinking back to the way she would stretch out on her stomach as I started with her soles, worked to her ankles, her calves, spending more time on the back of her knees before continuing on along the naked length of her. I imagined what it would be like to see Niki like that, stretched naked in front of me while I worked my way up along her body.\n\nI dug my fingers into her sole again, feeling for knots of tension and ache and working them away. Her other foot lay in my lap and I was conscious of the way my cock had stiffened underneath the side of it. She must, surely, be able to feel that, but gave no indication.\n\nNiki sighed and stretched her long body, raising her arms above her head. The robe lifted further, lifted too far and she revealed the side of her hip, a curve of upper thigh, only shadow hiding her sex from my view. I turned my head and looked away. Niki noticed her exposure and lowered her arms, pulling the hem of her robe back down.\n\n\"I should get dressed, I suppose,\" she said lazily. \"But it feel so nice like this with you stroking my feet. Am I shocking you, Thomas?\"\n\n\"I don't get easily shocked these days,\" I laughed.\n\n\"Good,\" Niki said, nodding. \"Very good,\" and she stretched her legs out again so I could get at her other foot, rolled slightly to allow me access to her heel and when the robe slid up her thighs again she left it where it came to rest. Almost, but not quite, she had revealed herself to me. One side of the robe had fallen aside and a long expanse of hip and the side of her flat stomach lay bare. The other edge of the robe had fallen down between her thighs, barely covering her from my gaze.\n\nI decided not to look away this time. If Niki felt comfortable with what she was doing, then I would not deny myself the pleasure of looking at her.\n\nI worked on the knots in her other foot, then began to roll her ankles in my hands.\n\n\"Mmm,\" she sighed. \"You really are very good at this. I think I will employ you full time to do it whenever I am tired and aching. How much would you charge me, Thomas?\"\n\n\"Nothing at all,\" I said.\n\n\"But you must charge me lots of money for this; you are too good to offer yourself for free.\"\n\n\"Not free,\" I said. \"It gives me greater pleasure than I could describe to do this for you, Niki.\"\n\nShe smiled. \"You are so different from all the foolish young men that chase me, Thomas. It's very nice being with you.\"\n\n\"I'm glad,\" I said, but her words cut into me. It was my safety she loved, the sureness that what I was doing would lead to nothing more. I made an effort and smiled back at her, ran my hand along the smooth length of her flawless calf and she smiled back. If she felt safe, so be it, I could still take pleasure in the little I was being offered. \n\nHer skin was hot under my palm and I let my fingers drift around to the backs of her knees, the sensitive spot I knew all women loved having touched. She lifted her leg slightly to allow me greater access just as a knock sounded at the door.\n\n\"Dinner,\" I said.\n\n\"I was really enjoying that,\" she said. Niki pulled her legs back and placed them on the floor, stood and went through to her bedroom. \"Let them in, Thomas. I'll hide in here until they're gone. They might not approve of me dressing like this.\"\n\nSo she knew, I thought, she knew it was not wholly appropriate. But she didn't mind? Confusion swirled through my mind and I went to the door and let the waiter and waitress in. They fussed around, laying our food at the dining table set into an alcove near the balcony. The waiter uncorked the wine and I held up my hand as he went to offer me a taste.\n\n\"I'm sure it'll be fine,\" I said. \"You don't need to stay, we can sort ourselves out.\"\n\nThey smiled, tidied away their trolley and left the room. Our salad plates sat on the table, the wine chilling in a cooler.\n\n\"Ready,\" I called out.\n\nNiki came back through. I had expected her to have changed into something less revealing, but she continued to wear the blue silk robe. She had tied her hair back and caught it in a clasp to reveal her long slim neck. \n\nI pulled her chair out and slid it back in as she sat, went around to my side of the table. I poured wine into both of our glasses and we offered our now usual Finnish toast.\n\n\"Tell me more about your wife, Thomas,\" Niki asked. \"I only know you were married and lost her. Was it a good marriage?\"\n\nI looked at her for a while, pondering her question, weighing my options.\n\n\"The truth, Niki, or the public version?\"\n\nShe stopped her fork half way between her plate and her lips and looked at me. \"The truth, I think, don't you? Am I being wrong, or should it not always be the truth now between you and I?\"\n\nI felt a tightness in my throat. She was so beautiful and so open my breath became short and for a moment I wasn't sure how to proceed.\n\n\"I think,\" I said, \"that when we first married we were very much in love. But as time went on, we did not so much fall out of love as become bored. We had a son and a daughter. I don't think I told you that.\"\n\n\"You didn't. How could you forget your children, Thomas,\" she acolded. \"What are their names? How old are they?\"\n\n\"Lilly is my daughter, she's twenty-four now, almost your age. My son's name is John.\"\n\n\"John? What is he doing now?\"\n\n\"He always wanted to join the army. Angie and I didn't want it, but he was old enough and joined up anyway. He went to Iraq. Now he's in Afghanistan. I worry about him, I guess, but I know he's doing something he loves.\"\n\n\"Oh Thomas, it sounds like you miss him.\" Niki reached across and put her hand over mine, her face a mask of sympathy.\n\n\"I'm luckier than a lot of parents whose sons went over there and never came back.\"\n\n\"Tell me about something happy. Your daughter, where is she now, what does she do, is she pretty like her mother or ugly like you?\"\n\nI smiled. The worry over John would always remain, but he could never have done anything else.\n\n\"Lilly lives in Europe,\" I said. \"Yes, thank God, she is pretty. She studied languages in college and she works in France now, translating in the European parliament in Strasbourg.\"\n\n\"I know Strasbourg,\" Niki said. \"You must give me her number, I will call and see her and tell her how much you miss her and how wonderful her father is.\"\n\n\"I do miss her,\" I said, \"But I know she loves her job, and I go across at least once a year and we spend a couple of weeks traveling around. France, Germany, Italy, up into Denmark and Sweden two years ago. Spain once.\"\n\n\"And now you are alone?\"\n\n\"Just me.\"\n\n\"And are you lonely? Do you have women friends, someone who helps you sleep at night...?\"\n\n\"No one,\" I said.\n\n\"No one special, or no one?\"\n\n\"No one,\" I repeated.\n\n\"But a man like you has needs, no? \"\n\nI shrugged. I thought it would not be appropriate to explain how I took care of those needs myself.\n\n\"I've seen a few women,\" I said. \"But no one special. I enjoy my independence too much, I guess, to want to get involved again.\"\n\nNiki looked at me for a long time, then picked up her fork and started to eat again.\n\n\"What about you,\" I said, \"You must have boyfriends? Anyone serious?\"\n\nShe laughed. \"No one. Like you.\"\n\n\"But you must have had... I don't know, you're so beautiful, you must have had someone...\"\n\nShe shrugged. \"I have had lovers, of course. But men my age are so shallow. The men I tend to meet live in my world, not yours, they are self centered and think only of how handsome they are. And in fashion, many of the men like other men, not women. I don't really bother much anymore.\"\n\n\"But you are young, Niki,\" I said. \"If you think I have needs, then you must feel them even more, at your age.\"\n\nShe smiled. \"There are ways to satisfy those without involving anyone else,\" she said, putting into the open the thought I had not expressed. She had emptied her glass and I topped it up, ate some of my excellent salad.\n\nI raised my glass. \"Here's to independence,\" I said.\n\nShe clinked her glass to mine. \"Sometimes,\" she said. \"Sometimes not.\"\n\nWe finished our meal talking about less emotive subjects. I told her how I had started my own company, how I made a good living but it did mean one week in every two I was in a different city, but that was fine because there was nothing to really go home for anyway, and I enjoyed the life.\n\n\"And you?\" I asked as we finished eating. \"Do you like this existence, always living in hotels, always moving?\"\n\n\"It is what I do,\" she said. \"I have never really known anything else.\" She looked over my shoulder, thinking, her sharp blue eyes clouded for a moment. \"I do not mind my life.\"\n\nI emptied the last of the wine into our glasses and turned the bottle up into the cooler.\n\n\"I'll call and get this cleared away,\" I said, moving across to the phone.\n\n\"Ask them to bring another bottle. No, ask them to bring two. I feel lazy and sloppy tonight and I would like to get drunk.\"\n\nI laughed at her and called down. Niki drained her glass and then, when a knock at the door sounded, disappeared into her bedroom again.\n\nThe places were cleared, the wine opened and placed in a new cooler, the other bottle laid in the refrigerator. I tipped them both twenty dollars each and they wished me goodnight. Niki came out when she heard the door close.\n\nI poured wine for both of us and she lay back down on the couch, her long legs stretching the length of the cushions. I moved to sit in one of the armchairs across from her but she shook her head. \"More massage, Thomas, please.\"\n\n\"You're sure? \"\n\nShe nodded. \"I'm sure. I was enjoying it very much before dinner, and now I am more relaxed and believe I will enjoy it even more now.\" She lifted her legs and I slid beneath them and as soon as I sat she laid her feet back on my lap, back over the length of my cock which lay down inside the leg of my pants, responding to her touch. I was sure she must have felt it thicken and twitch, but showed no indication.\n\n\"I think you had reached my knees. Do you want to start again or carry on from there?\" She stared at me, openly expressing something I wanted to interpret as need.\n\nI placed my half empty glass on the table and slid a hand beneath her knee, began to stroke the smooth skin on the back of her leg. Niki laid her head back and closed her eyes, a smile widening her mouth.\n\n\"That is wonderful, Thomas. You must promise you won't stop.\"\n\n\"Promise,\" I said, stroking my hand further along the back of her thigh.\n\nNiki moved suddenly and rolled over, pushing herself down so her head was flat on the couch, her legs raised on the far arm. As she slid down the robe stayed where it had been and her body slid down through it. When she stopped the hem of the robe had moved to her waist and she lay with the alabaster white cheeks of her ass revealed. She was unbelievably perfect, sculpted and rounded, tapering from her waist to bloom and then fade, dipping down without flaw to her thighs. The deep cleft between her cheeks hide any hint of her opening from me, but even so I had never been as aroused by anything in my life.\n\n\"Now you can work properly,\" she said, and wriggled again.\n\nI lifted her legs and slid down from the couch, knelt beside it and turned back to her. I laid my hands on the back of her calves and began to sweep them in long strokes, occasionally digging in with more pressure and easing her muscles. Once or twice Niki grunted, but more often she sighed. \n\nAs I moved higher along her thighs the sighs became more frequent. I had taken the decision to interpret her action in the most obvious way. She may not want me, would not want my body, but that did not prevent me from satisfying her needs. I was going to try and make her cum in the most exquisite way I could manage. I believed it was what she wanted me to do.\n\nMy hands slid along her thighs, reaching close to the junction with her ass and as I approached that point Niki moaned and her legs parted, and then the leg closest to me slid off the couch and touched the floor, opening herself to my gaze.\n\nHer thighs were separated, and nestled between them I could see the outer lips of her labia, smooth and hairless and plump. I allowed my hands to slide upwards, drifting along the inside of her thighs and then, just before my fingers touched her sex I drew them aside and slid them on over the rounded perfect cheeks of her ass. \n\nNiki moaned again, and I felt her lift her hips and push back against my palms.\n\n\"OK?\" I whispered.\n\n\"Wonderful,\" she murmured. \"Thomas, would you mind if I took this off?\" She lifted herself onto her hands and pulled at the tie of her robe.\n\n\"Why on earth would I mind that?\" I replied.\n\nShe slid the robe down off her shoulders and then pulled it away from her body, discarded it on the floor.\n\n\"Thomas,\" she whispered as she lay back on her stomach. The long length of her naked back stretched from her waist. Along the center, directly over her spine, a deep valley ran between the muscles in her back, rising and disappearing into her slender neck.",
        "\"What is it, Niki?\"\n\n\"I want you to touch me wherever you want to.\"\n\n\"Are you sure?\"\n\nI saw her nod into the cushions. \"Not just sure, Thomas. I need you to touch me everywhere. I need that very badly.\"\n\n\"I would like that too, Niki,\" I said.\n\nShe sighed and I ran my hands up along her back, astounded at the silk smoothness of her skin, the unblemished surface hot to my touch. I spent five minutes stroking her back and neck, sliding down to the curve of her ass, cupped her round cheeks in my palms.\n\nFinally, when I could hold myself back no longer, I allowed my fingers to drift down, along the cleft between her cheeks. I touched very lightly the pucker of her asshole and felt her twitch as my fingers passed over it. Then I moved them down, stroking her inner thighs and she widened her legs for me to gain greater access.\n\nI stroked upwards, not moving aside now, and my fingers ran along the outer fold of her labia. I ran them up to her perineum and then back down, moving them inwards a fraction, repeating this, moving them in a little more each time until I had stroked the full width of her pussy lips and eventually came to my target. At last I ran a finger directly up over the closed slit of her pussy. Her fluids had filled her and leaked out and my fingertip was coated as I ran it along the slit. Niki moaned and lifted her hips backwards.\n\nI lowered my hand and stroked her again, pushing more firmly on each pass, parting her lips and probing inside, her wetness pouring out and onto my hand, pouring out and onto the cushions. I cupped my palm downwards over her pussy, one finger parting and inserting itself inside, two more fingers finding the hard nub of her clitoris and rolling it roughly. \n\nShe was completely hairless and smooth, no sign of stubble or razor burn, just soft smooth skin as though she had never had any hair down there in her life.\n\nNiki was breathing harder now and I began to rub more meaningfully at her dripping sex. My own cock was painfully hard and had slid out of my briefs and down along my leg. I knew how long it could grow, but this seemed more than I ever remembered. I desperately wanted to open myself and let it free but dared not spoil the pleasure I was giving to Niki. She wanted me to make her cum, she had made that clear, but that had not been an offer of anything else. I could be content with that, content with making this vision happy.\n\nNiki moved, swinging her legs around and off the couch, coming to rest kneeling before me. Her legs were parted and her wet sex glistened and drew my hand. Then she reached around and grabbed my wrist and pulled my hand aside. At the same time she pushed herself back towards me once, twice.\n\nI couldn't dream she wanted me to fuck her, not this angel, but there was more I could do. I lowered myself down, bringing my face close to her ass and kissed it, ran my tongue up along her crack to her back then back down, passing over her asshole and onwards until my tongue parted her pussy and I tasted for the first time her juices. She was tangy and sweet and the scent of her enclosed my face.\n\nI lifted her hips in my hands and pushed my tongue deep between her lips, savoring her moisture, playing with her engorged clitoris. Niki pushed back against me and grunted.\n\n\"Oh Thomas,\" she murmured, then again, \"Oh Thomas...\"\n\nI looped one arm around her and reached her from the front, massaging her clitoris with my fingers while my tongue pushed into her from behind. My face and chin were soaked as I worked hard to bring her close and then, just as I was sure she was going to climax I released the pressure and allowed her to drop back down.\n\nShe grunted again, pushed back at me, desperate for release now, but I held off, waiting until she had drawn back from the edge, then started to push my tongue into her again. I brought her to the edge a second time and as I felt her thighs begin to tremble pulled off again.\n\n\"Oh fuck Thomas,\" Niki groaned. \"Let me cum, please...\" She was shaking, hardly able to control herself. I knew, if I wanted to now, I could release my cock and push it inside her, but I made no move to do that.\n\nI lowered my head and licked her again, for a while applying myself to her asshole, letting my tongue circle it, occasionally allowing it to drift over and into the dip between her cheeks. Niki moaned more loudly and rocked her hips against my face.\n\n\"Make me cum Thomas... I need to cum so badly now... please make me cum!\"\n\nI moved back to her pussy, pushing my tongue deep inside, tasting the juices that flowed freely from her. My fingers rubbed her clitoris and she gasped and started to tremble again and this time I showed mercy and rather than withdraw again I pushed harder, reached deeper, rubbed roughly as pleasure grew and rolled through her.\n\nAs her thighs twitched and spasmed I pushed my tongue as far as it would go into her pussy, and she squealed and shook and I felt a new warm gush of fluid flood out of her and into my mouth. She was delicious, she was wanton, she was cumming hard. She cried out again and jerked, pulling away from me and then pushing hard back.\n\n\"oh fuck oh fuck oh fuck oh fuck!\" she cried.\n\nHer ecstasy peaked and I worked on her, extending it as long as possible, but finally it began to subside and I felt her loosen and relax beneath my mouth. I let her slump against the cushions, ran my tongue a final time along the slit of her pussy and up along her ass, then sat back and watched her slowly come to her senses, enjoying the sight of her body lying wasted in front of me.\n\nFinally she sighed deeply and rolled over. For the first time I saw the front of her naked body. She lay back with her head propped on a cushion, her legs parted around me, her flat stomach still heaving as she breathed. Her breasts were the most perfect things I had ever seen. They were not large, but their shape and texture and firmness were from another world. Her nipples were a light pink, not at all dark, but long and stiff.\n\nShe looked down over her body at me, unashamed, unembarrassed, and smiled deeply.\n\n\"I think you have done that before, Thomas. That was incredible. I have never cum like that in my life! Thank you.\"\n\n\"It was my pleasure,\" I said.\n\nShe placed her hand flat on her stomach. \"I can still feel it, in here,\" she said softly. Her eyes were heavy and I could see her lids begin to close. She smiled and shook her head. \"I'm sleepy now... sorry.\"\n\n\"Don't be.\"\n\n\"But what about you, Thomas? I want to do something for you...\"\n\n\"You already have,\" I said.\n\n\"Stay with me tonight. I don't want you to leave. Take me to my bed and stay with me.\"\n\n\"You're sure?\"\n\n\"More sure than anything ever before.\"\n\nI sat back on my heels and stood up, offered her my hand and when she took it pulled her up from the couch. She came into my arms and I enclosed her in mine, still not quite sure how to deal with her being an inch taller. She cuddled against me then pulled her face away and kissed me deeply on the mouth.\n\n\"I think I love you, Thomas.\"\n\nI smiled. I knew I was good at what I had just done to her, but I also knew it was her passion talking and not her heart.\n\n\"Let's go to bed,\" I said.\n\nI took her hand and walked her through and she pulled the sheets aside and slid into the large bed.\n\n\"Undress for me, Thomas. I think I want to see what you have been hiding from me.\"\n\nI looked down at the long bulge in my pants. I was still enormously hard, but I was no longer embarrassed. I unbuttoned my shirt and removed it. I unbuckled my belt, slid down my zip and pulled my trousers off. My cock was still forced sideways inside my briefs, a thick ridge pressed around to my hip. I slid my hands under the elastic waistband and slid them down and off. My cock jerked upwards. At my age it could no longer stand vertical as it had when I had been a teenager. Now it rose just above horizontal, veined and pale, jutting out from my pubic hair, the foreskin pulled back and the deep ridge around the head raised and purple.\n\nNiki was watching me with eyes that were barely open.\n\n\"Am I dreaming, Thomas?\" she whispered.\n\n\"Not yet,\" I said.\n\n\"That is huge... that is the biggest penis I have ever seen... Mmmm... come and hold me.\"\n\nI slid into the covers beside her and she turned around and wriggled her ass back towards me.\n\n\"Put that long penis between my legs, Thomas. Just rest it between my legs...\"\n\nShe parted her thighs and I scooted across on my side, slid my cock between her thighs and put my arms around her, cupping her breasts into my palms.\n\n\"Yes, like that,\" she said. She closed her thighs and they enclosed the base of my shaft tightly. The head jutted out in front of her. I could not see, but imagined it must look as though she had a cock as well.\n\n\"I'm sorry, Thomas, but I am just so tired... I will make it up to you tomorrow...\"\n\n\"You don't have to make anything up to me,\" I said. \"Sleep, my angel.\"\n\n\"Mmmm.\" She wriggled her ass against me and her hand dropped down and I felt it circle around my cock and grip me. She gently rubbed her hand twice along my length and sighed. \"So nice...\"\n\nGradually I felt her loosen against me as her breathing deepened into sleep. I lay there listening, feeling the smooth alabaster length of her back and thighs pressed against me, feeling the firm weight of her breast in my hand, and wondered if my cock would stay as hard as it was all night. Probably.\n\nFRIDAY\n\nWe had gone to bed just after ten. I was still awake at 2 am, but sometime after that I must have slept because the next thing I knew I was lying on my back and Niki woke me as she flushed the toilet and walked back into the bedroom, naked and unselfconscious.\n\n\"Sorry,\" she whispered as she slid back in beside me, \"I needed to pee. I didn't mean to wake you.\"\n\n\"S'okay,\" I said, and lifted my arm. She curled inside it and hugged against me, her breasts parting around my ribcage so that one flattened on my chest and the other pushed against my side. She kissed me on the cheek, then turned my head with her hand and kissed me on the mouth. Her lips opened and I felt her tongue flutter against mine. She lifted herself more fully across me and put both of her hands on my face and kissed me harder.\n\nI felt my cock begin to fill again, not sure how much it had ever deflated during the night. Niki's leg came across and covered my waist, and she released my face and moved a hand down across my chest, trailed over my stomach and then on down, finding the base of my cock and gripping it. I was fully erect now, and she slid her hand up along me, kept sliding until she reached my head and then enclosed it. I could feel her fingers rub the hole in the centre of my cock, drawing fluid out from it and slicking it over me.\n\nShe threw back the covers and pulled herself down, holding my cock and looking at it. I lay back and watched her watching me. She stared at it, fascinated, pushing it to one side and then another, gently pulling my foreskin back up to cover the ridge below my cock head and then drawing it back. She pulled herself further down and looked at my balls. They were large and heavy, covered in hair, and she cupped them, squeezed them gently.\n\n\"Why don't you shave your balls, Thomas?\" she asked. \"They are beautiful, and I could see them better if you did.\"\n\n\"I will do it as soon as I get up,\" I said.\n\nShe looked up at me. \"Really?\"\n\n\"Of course. You shave your pussy, so it seems only fair.\"\n\n\"Oh that,\" she said. \"I don't shave it. My agency paid for laser removal. It's better for my work, and I never need to worry about it again.\"\n\n\"You didn't mind?\"\n\n\"No, why? I like my pussy to be clean and smooth. Don't you?\"\n\n\"I certainly do,\" I said.\n\n\"I thought so last night.\" She wriggled down in the bed, getting closer to my cock. \"This is beautiful,\" she said, \"So beautiful.\" She leaned down and kissed the side of my cock. \"I want to make you cum now Thomas. Can I do that for you?\"\n\nI smiled. \"If it would make you happy.\"\n\nMy ironic tone was completely lost on her. \"It would make me very happy,\" she said.\n\nNiki kissed me again, planting tiny circles of wetness from the base to the head. Then she slid her tongue out and licked me all along my length, dropped down and licked my balls, wetting them all over. She lifted herself back up, her face against my stomach, her warm moist breath against the head of my cock and I felt her lips gently enclose me. Her tongue ran around my glans, felt under the ridge and then back up and probed inside the slit of my cock.\n\n\"I like the taste of you,\" she said, then enclosed me again, sliding me deeper into her mouth. I was much too big for her to get anywhere near taking my full length, but she made a good effort and three quarters of my cock slid inside. She opened her mouth wider and tried for more, starting to gag as I touched the top of her throat, fighting it off and continuing to swallow me.\n\n\"Niki,\" I moaned.\n\nShe made a small noise and continued to push me inside her. I had never had anyone take more than five inches of my length before, but already she had swallowed seven and was trying for the remaining inch. I felt her throat clench and then she pulled away and breathed deeply.\n\nI pulled her shoulders and she came up to me and kissed me deeply. I could taste my cock on her mouth and it made me even more excited and I ran my tongue all around in her mouth and lips.\n\n\"It's okay,\" I said. \"You don't have to do that.\"\n\n\"I want to,\" she said. \"I want all of it. Let me try again.\" She slid down over me and closed her lips over my cock again. I sat up against the pillows and watched as more and more of my cock disappeared between her lips. I watched as she adjusted her angle, turning around so I was sliding it over her chin and straight into her throat. I felt the fat head touch the top of her throat and heard her take a deep breath in through her nose.\n\nShe opened her throat and pressed down and I felt the tight muscles close around me. She twitched and then steadied herself, pushed down harder and I slid inside, down into the top of her gullet, slid until her mouth was pushed hard against my pubic bone and my cock head was buried inside her throat.\n\nI felt the muscles in her neck contract and open around my cock, felt her head bob and I slid back out and then in again. She lifted her head and took a deep breath, took me back inside.\n\nDeep inside my asshole I was starting to ache. My balls pulled up and contracted against my body and Niki felt it as she cupped them. My cock seemed to expand a little more. \n\nWhen next she pulled away to breathe I took her chin and looked into her eyes. I said nothing at all, just watching her, and she said, \"I want you to let go, Thomas. I want you to cum in my mouth,\" and I nodded.\n\nShe took me inside again, breathing two or three times before she lowered her head and I groaned as I slid inside, touched the opening of her throat and then deeper. I felt the urge rise in me and gave into it, allowed myself to release. \n\nThe explosion started deep inside and flooded up through my cock, hot and almost painful but bringing glorious release. I felt the seed spurt from my cock and into Niki's throat, felt her swallow and try to take me and partially succeed with the first jet, but then a second, third and fourth quickly followed and I think she needed to breath so she lifted back and I came into her mouth and she breathed and I came on her lips and she licked it off and into her mouth and I came onto her chin and she pulled back a little more and I came onto her neck and she smeared my seed down over her skin and rubbed its slipperiness into her nipples. I came a final time, onto her left breast and she put her fingers into the slipperiness I had left and spread it onto her skin.\n\nMy cock began to soften and Niki propped herself on her elbows and watched it deflate, fascinated at the change, until finally it lay down on my thigh, still long but no longer threatening.\n\n\"How did you do that,\" I gasped.\n\n\"I don't know,\" she said. \"Because I wanted to. I wanted to do something special for you. I've never tried that before. But it wasn't so hard.\"\n\n\"Oh, I thought it was pretty hard,\" I said, and she slapped my stomach with the back of her hand.\n\n\"How long until you can get hard again, Thomas?\" she asked.\n\n\"I don't know. Not straight away, I guess. An hour or two probably.\"\n\n\"Okay. We'll wait until tonight then.\" She climbed up along my chest and kissed me. I could still taste my cock on her mouth, but now also my own cum. It still slicked her cheeks and lips, and I allowed myself to taste it.\n\n\"I would like that very much.\"\n\n\"That's good. But tonight I want you to fuck me properly. I have other needs you are going to fulfil. Okay?\"\n\n\"Okay,\" I said, \"I might be able to manage that.\"\n\nShe bounced up out of bed. \"Come on Thomas, come and shower with me and let me shave your balls for you.\"\n\nOh God, I thought, and the very last crystal of ice melted from my heart.\n\n***\n\nAll through the day my balls felt weird inside my shorts, too smooth, too sensitive. And at inconvenient times my cock hardened and bulged in my suit pants as I thought of Niki, so I had to pull in under the table to hide myself. But apart from these inconveniences the day went well, the client had come all the way back around and was ecstatic with my recommendations.\n\nAfter lunch I had a face to face with their CEO and filled her in on what my recommendations would be and promised a full report by the middle of the following week. She thanked me and walked me all the way out through the front of the office and shook my hand as I left. Maybe the thawing of my heart showed on my face, or in some other way, because it seemed that today people had been treating me differently.\n\nI caught a cab back to the hotel and went up to my room. It felt strange and empty, not a place I wanted to be. I changed, took my laptop up to the ninth floor and let myself into Niki's room. The maids had been around and everything sparkled and smelled fresh. I sat at the dining table and continued to work on my report, going fast so that I could get the skeleton of my recommendations down. I would fill the detail out during the following week.\n\nI was deep into the work when I heard the door open and looked up, expecting Niki. Instead Desi stepped into the room pulling two large wheeled suitcases. She stopped when she saw me and said, \"Oh.\"\n\n\"Sorry,\" I said. \"I was expecting Niki.\"\n\n\"Niki?\" She frowned, then said, \"Annie. You mean Annie? Yes. She's on her way. I've just come for... to pack some of the clothes. They need to go back to the...\" she stopped again, aware she was talking too much.\n\n\"That's fine,\" I said.\n\nShe started across the room, but still looked at me, her finely shaped brows drawn down in puzzlement. There was no need to be a mind reader to know what she was thinking. What the hell was Niki doing with someone like me?\n\nI felt no need to explain myself. One of the major advantages of almost reaching your fifth decade is that you stop worrying about what other people think.\n\nDesi stepped through into the bedroom and I heard her moving around in the closets and caught glimpses of elegant dresses being piled onto the bed. Then she appeared and started to carefully fold and pack them into the cases. By the time she finished Niki had still not appeared, and Desi stepped out and looked around. She seemed unsure of what to do next.\n\n\"I'm supposed to wait for Annie. I've got her itinerary for next week to go through.\"\n\n\"Fine. Can I get you something to drink?\"\n\n\"Uh, no... okay then. Mineral water please.\"\n\nI found a bottle of sparkling Pellegrino in the fridge and poured some into a wine glass for her.\n\nI sat on the couch and after a moment Desi sat across from me in the armchair.",
        "She sipped at her drink and looked at me again. She took a breath.\n\n\"I know it's none of my business... uh...\"\n\n\"Thomas,\" I said.\n\n\"Yeah, Thomas, I remember. I was just wondering... are you, you know, with Annie?\"\n\n\"With her?\"\n\nShe shrugged. \"As in with her?\" she said, emphasizing the word.\n\n\"We're friends,\" I said.\n\n\"Have you known her long?\"\n\n\"Oh, ages,\" I said. \"Since Monday.\"\n\n\"Monday... oh,\" she got my tiny joke and smiled without showing her teeth.\n\n\"I'm her safe haven for the week. I keep the bad guys away.\"\n\nDesi smiled again, this time her teeth flashing white between dark lips. \"I see,\" she said. She relaxed into her chair. She was happy now she understood my purpose.\n\n\"Do you leave tomorrow as well?\" she asked. \"Where do you live?\" She crossed her elegant legs, burnished and smooth. I could see how she could have been a model, could also see what Niki meant. Desi was beautiful, but she was only five-eight at the most, not model height, and her breasts pushed out against the front of her dress in a way Niki's did not.\n\n\"In the morning. Chicago.\" I said.\n\n\"Nice city,\" Desi said.\n\n\"Do you know it well?\"\n\nShe shrugged. \"I've been there maybe half a dozen times, so not that well. It just always seems a vibrant kind of place. Cleaner than New York. Maybe it's all that water.\"\n\n\"Yes, you're probably right. Where are you going to be next week then?\"\n\n\"I'm not sure I can... you understand?\"\n\nI smiled. Of course. She was being protective of her charge.\n\n\"Please,\" she said. \"You can continue working if you want. There's no need to entertain me.\"\n\n\"I've pretty much finished,\" I said. I was enjoying her discomfort. It was petty, I knew, but I was trying to get back at her for the way I knew she felt about me. Sad middle aged man, maybe a bit needy, latching onto a supermodel. I wondered if she thought I would turn into a stalker.\n\nI smiled at her and opened my mouth to speak when the door opened again and Niki came in, sweeping sunshine and light into the room.\n\n\"Thomas!\" she cried. \"Oh, it's so good to see you here.\" She came directly across the room and flung herself down onto the couch at my side, leaned over and kissed me on the lips, then put her arm around my waist and leant her head on my shoulder. \"You met Thomas, didn't you,\" she said to Desi.\n\nDesi smiled, the expression suddenly false on her lips. \"I've got your list for next week, Annie. And all the dresses are packed up. Someone will be up to take them in a while.\"\n\n\"Thanks Desi. You're an angel, you know that.\"\n\nDesi smiled, but her lips were tight again, and it occurred to me she was jealous. She got up and smoothed her dress down along her legs. \"I'd better be off then. I'll leave you two to...\" She realized there was nothing she could really add at that point.\n\nNiki uncurled and went across to her, put her arm around Desi's waist as she walked to the door. Their heads were together and I could not hear their whispered conversation. At the door they stayed for a while, Niki's arm still around Desi, their faces close together. Finally Niki kissed Desi on the cheek and closed the door.\n\nShe turned back and me and grinned. \"I love that woman to pieces, Thomas, but thank God she's gone. I want to strip you naked and fuck your brains out!\"\n\nAs greeting went, it was probably the best one I had ever had. I got up and went to her and folded my arms around her. I was beginning to get used to her height.\n\n\"Perhaps we'd better wait until they take those suitcases out,\" I suggested.\n\nNiki pouted. \"If we have to. But Thomas, I've been thinking about you all day. I've been thinking about that long penis of yours, and what I want to do with it.\"\n\n\"I've been a little distracted myself,\" I said. I didn't tell her I had asked my cab to swing past a pharmacy on the way back to the hotel. I had gone inside and asked about Viagra and been given a foil pack containing three small blue tablets. This was my last night with Niki. I wanted to stay hard for her all night long if that was what she wanted, and at my age a little help was not to be passed over. The man behind the counter said they could take twenty minutes to start working, so I planned to take one before we started to make love so that it would kick in after my first climax, hopefully boosting my recovery time.\n\nNiki hugged me tight to her and slid her hand down my stomach and over my cock. I was already semi-erect and she squeezed me through my pants.\n\n\"I can't wait,\" she said. \"Here, help me.\" She let me go and went into the bedroom, grabbed one of the suitcases and wheeled it out. I followed and pulled the other after her. She opened the door to the corridor and pushed the suitcase out and left it against the wall. \n\n\"They can pick them up from here, and then we won't be disturbed.\"\n\n\"Seems a good plan,\" I said.\n\nShe laughed and closed the door. She turned around and said, \"Unzip me, Thomas.\"\n\nI released the catch at her neck and pulled the zip down her long back. Niki tucked her shoulders and slid the dress off, tossed it onto the couch. She stood there in small high cut panties and a tiny bra that was cut low down to reveal the tops of her pink nipples. I lowered my head a little and sucked one into my mouth and Niki pushed her stomach against me.\n\n\"Come and shower with me,\" she said. \"I'm all hot and sweaty from today. Come and make me clean, and then come and make me cum. I want to make love to you all night, Thomas. Is that okay?\"\n\n\"That's more than okay.\"\n\nIn the large bathroom Niki turned on the shower. She unclipped her bra and dropped it on the floor, then pulled her panties down and stepped out of them. She turned to me and displayed herself, knowing how she looked and knowing my pleasure in the sight. I gazed in awe, and then removed my own clothes until we stood facing each other, naked, Niki's tall beauty and my shorter, well, not beauty.\n\nShe looked down at me as my cock filled and grew hard, then took me in her hand, gently, wrapping her long slim fingers around me, not moving, just holding me.\n\n\"Vitun iso,\" she said.\n\n\"Sorry?\"\n\nShe grinned. \"It's Finish. Means Fucking Big. That's what this is.\" She closed her hand, squeezing me.\n\nI moved towards her, put my arms around her waist and pushed her back into the shower. I released her and turned her around, took the soap and lathered my hands and began to wash her back, taking my time, fascinated by the smooth slippery feel of her perfect skin. Niki leaned forward, resting her palms on the tiles, her head under the spray, then took a deep breath I dug my fingers hard into her muscles.\n\n\"That's nice,\" she said.\n\nI continued to soap her back, digging my fingers and thumbs into any hard knots I found and I saw her knees and shoulders relax. I worked my way down, covering the round firm cheeks of her ass, knelt and worked my way down the back of her thighs to her knees, her calves. She lifted one foot and then the other so that I could soap them as well. Then I began to work my way up, stopping at her ass and spending more time there. It was unbelievably perfect, the shape, the texture, the size, the firmness. \n\nNiki put her feet wider apart and moved so that she was leaning forward more, pushing her ass back towards me and opening the crack between her buttocks. Water ran down from her head and along her back, down the crack and ran in a stream between her legs.\n\nI soaped my hands again and spread it in between her cheeks, running my fingers down both sides, over her rear opening, lightly tracing the outside edge, then moving on and tracing fingers along the inside of her thigh and then the outer edges of her labia.\n\nNiki sighed again and moved one foot and then the other to widen her stance. I touched her outer pussy lips again, lightly tracing them, keeping my hands away from their eventual target. Then I moved back to her ass, touched the edge of her asshole and then gently and deliberately pushed my fingertip directly into the opening.\n\nNiki said, \"Nnnh.\"\n\nI rubbed my fingertip around her opening, not pushing, not pressing, just massaging the puffed inner muscle. I felt her pushing her hips back onto my hand and moved to keep the pressure constant, then when she stopped I pressed slightly harder, opening her passage a little and she made that same soft grunt again.\n\nI moved my hand away and she sighed, letting her breath out where it had been held. I stood and turned her around, began to soap her front. I had hardly touched her breasts the night before, and I intended to make up for that omission now. I soaped them, massaged them, astounded by the way there was no sag at all. They were actually larger than I had thought, curving out from her ribcage, a perfect parabola rising to her nipples, which sat on a small triangle that pushed them upwards and out. Her nipples were long and pink. The aureoles showed hardly any color, just a slight pink wash around the base of each nipple. Above the firmness faded into the skin of her chest, and above that her long slender neck rose.\n\nNiki's hair hung long and wet to her shoulders, plastered tight to her skull and cheeks.\n\nI lowered my head, not by much, and pulled one of the long nipples in between my teeth, drawing its length inside my mouth and trapping it while my tongue flicked and played with the tip. Niki put her hand on the back of my head and held me there. I tugged her nipple with my teeth and when she moaned I bit harder until she gasped and jerked away. That was good. Now I knew how hard to be.\n\nI moved to the other breast and repeated the attention, using just the right amount of pressure this time. Eventually, I began to move down, licking the curved underside of her breasts. I took Niki's arm and lifted it, then licked along the underside of her arm and right into her armpit. She shuddered and dropped her head to kiss my cheek.\n\nAnd then I returned to my target, working my way down her long stomach, pausing at her navel and then descending, along the flat muscle above her mons, on down, moving my tongue along the inner edges of her hips, in the small channel that dipped there and she squirmed and tried to move her pussy onto my mouth and each time she did I edged away.\n\n\"Oh God, Thomas, don't... I need you so badly,\" she moaned.\n\nI teased her again, licking the inside of her thighs, lifting her leg to offer my tongue better access. Her pussy was still closed, the outer lips full and plump. Her thighs met and formed a small recess into which her pussy nestled and I worked my way along and into it.\n\nAfter several minutes I reached her outer lips and began to run my tongue up one side, across the top and down the other. On my fourth pass I moved lower and pulled the hard nub of her clitoris into my mouth and sucked on it. Niki groaned, and I sucked her more, then slid my tongue down directly over her slit, parting it with the tip and she pushed towards me and I took mercy on her and slid my tongue inside, tasting her sharpness, tasting the oiled inner folds.\n\nI raised one hand and cupped it around her buttock, laying my thumb up along the crack of her ass and pressing the thick part of it directly onto her rear opening. Then I began to seriously work my tongue into her, opening her inner lips and delving as far inside as I could.\n\nNiki pumped her hips onto my face, doing most of the work herself. She had thrown her head back and the spray now hit her on the chin and breasts, ran down her stomach and over my mouth. The position was difficult but I kept pushing into her, then took my other hand and inserted two fingers directly inside her, pushing them in and out. At the same time I moved my mouth up and drew her clitoris back between my lips and began to suck it in and out, trying to suck like it was a miniature cock.\n\nI could feel the muscles all along her legs tensing, and I knew she was very close. Unlike last night I did not tease, did not draw her back from the brink, instead I worked harder, bringing her to a climax swiftly and smoothly.\n\nHer right leg lifted and she laid it over my shoulder and I pulled her clitoris hard against my tongue, pushed my fingers deep inside her, pressed my thumb against her rear opening and felt her tremble, twitch and then cry out as her climax peaked and tore through her. She grabbed my head and pushed me hard against her, pumped her hips against my face, bent over as the passion left her powerless and I felt her cum spurt against my mouth and mix with the water from the shower.\n\n\"Vittu,\" she said softly in Finnish.\n\nI kept my mouth pressed against her as her trembling died away, and then she released the back of my head and I stood, a little stiffly, I have to admit.\n\n\"Thomas,\" she said, putting her arms around me, resting her head against mine. \"Thomas, you are fucking unbelievable.\"\n\n\"I take it you enjoyed that.\"\n\n\"Oh Thomas,\" she said, shaking her head, then lifting it and looking into my eyes. \"But now I must do something for you. Now you must cum like that as well. I want you to take me to bed and fuck me, Thomas.\"\n\nI reached around her and turned off the shower. We stepped out and I dried her with a towel, patting her all over, then she repeated the operation on me, hesitating as she knelt to do my legs and taking my long cock in her hands, for a brief moment opening her mouth and sliding me inside.\n\nShe rose and strode into the bedroom, laid on her stomach on the bed. I followed more slowly. Before leaving the bathroom I picked up my trousers and popped one of the blue tablets from its plastic and swallowed it dry. First time, I thought.\n\nAs I knelt on the bed behind her Niki half rolled over and looked back at me. \"I want you to fuck me like this, Thomas. I want you to stick that great long cock inside me and fuck me until you cum.\"\n\nI put my hand on her ankle and circled it, then ran it on up her leg, over the sensitive back of her knee and on along her slim thigh, my fingers finally touching her wet sex. She lifted her hips and moved back towards me, half turned, half kneeling, and her pussy opened to show me the darker, pinker interior.\n\nI moved up until the head of my cock hovered just behind her opening. She groaned and pushed back towards me. I started to move away, and then realized I didn't want to prolong this any more. I pushed back at her and my cock touched the slick opening of her pussy, parted her lips and slid inside. The head buried itself inside her, and I marvelled at how tight she felt.\n\nI leaned over her back to whisper in her ear. \"All of it, my love?\"\n\n\"Every fucking centimetre,\" she grunted hoarsely.\n\nI pushed and slid deeper into her and she sighed. When I was three quarter of the way inside I felt a pressure. I had reached about as far as I could go, but in some way Niki squirmed and twisted and I felt a myself slide further in. In this way, embedded as far as I could go, I began to pump my hips, sliding in and out.\n\nI almost forgot about Niki, how I cannot think, as my consciousness centered on my cock moving into this warm, wet cavity. I could feel Niki's vaginal walls harden and draw back from my cock. I opened my eyes and looked down at her, splayed beneath me, the long perfect length of her back, her sex opened and enfolding me, her ass parted to reveal her pink, perfect rear entrance. I touched it with my finger, applied pressure. I lifted my hand to my mouth and licked my finger, wetting it, then touched her there again, pushing until my finger parted the opening and slipped inside. The sight of my cock deep inside her and my finger inside her ass was more than I could stand and I felt myself tighten. The head of my cock ached, my balls ached, deep inside my ass I ached but it wasn't a pain but pleasure.\n\nI increased my speed and Niki panted, moving her hips underneath me.\n\n\"Cum, Thomas,\" she moaned, \"Cum inside me because I'm going to cum... again... too...now!\"\n\nIt was too much and I felt the release pour up along my cock and start to empty inside her. I think she must have felt that first explosion of seed too because she cried out and I felt her tighten on my cock. I shuddered and emptied more of my cum inside her, squirting again and again until nothing more would come and I collapsed onto her back, still buried inside.\n\nNiki squirmed her ass and I felt the wetness of her slide around me. I had been fucking her for half an hour, and the Viagra had kicked in and I found I was not going soft as I usually did. I was still rock hard, still buried deep inside my Finnish beauty.\n\nNiki turned and I slid out from her. She wriggled down until her face was level with my hips and grasped my cock, slid it into her mouth and sucked her juices off me.\n\n\"Still excited,\" she said when she popped me out between her lips.\n\n\"More?\" I said.\n\n\"Much more,\" she nodded, smiling. She slithered back up the bed and turned onto her stomach again. \"Lick me, Thomas, like you did last night. Lick me on my bum hole.\"\n\n\"You like that?\" I asked, knowing she did.\n\n\"Is it naughty?\"\n\n\"Nothing is naughty, Niki, nothing at all.\"\n\n\"Then lick me back there. And then... if you want to... fuck me there as well...\" She rolled around and looked at me. \"Do you want to do that, Thomas, fuck me in my ass with that big dick?\"\n\n\"Only if you want me to, Niki. Only then.\"\n\nShe stared at me, her face flushed and serious. \"I want you to do that, Thomas. I want you to fuck me in my ass. I always like my ass being played with, but I am often afraid to do what I want, because many men are pigs. I trust you - I know you will not hurt me.\"\n\nI hoped she was right, because lying spread out below me it was all I could do not to plunge my cock directly into her rear passage which lay exposed between her perfect cheeks. Her back was slick with sweat which gathered and pooled along her spine. Her hair was matted and stuck against her face and neck. A large damp stain spread across the bed beneath her pussy where her and my juices had dripped from inside. And still she was the most beautiful creature in the world.\n\nI pushed myself back down the bed and lay between her thighs. She shifted and spread her legs to accommodate me, laid her head back on the bed with a deep sigh.\n\nI leaned back to better see her exposed pussy and asshole and wetted the index finger on my right hand and gently spread my spit around her budded back entrance. I touched her as gently as I could, pushing just the tip of my finger inside, then licking it again and transferring more split. Niki moaned softly and rocked her hips from side to side.\n\nWhen she was wet I lowered my face and began to work my tongue on the same hole, letting spit run from my mouth onto her, working it in with my tongue, pushing more firmly now, making my tongue stiff and pushing it into her opening, pushing it inside her ass. I had hardly thought how she might taste, but now, as an inch of my tongue slid inside her rear passage I discovered she tasted good, musty and a little soapy and a lot of Niki, a hint of spice and sweetness.\n\nI continued to work her with my tongue, probing further, pushing as far as I could, opening that tight passage to me until it was soaking wet and slippery all the way inside. Only then did I lift my head and move up the bed.\n\nI placed the engorged glans of my cock against her asshole and left it there, resting both myself and her. I applied a very small amount of pressure and looked down, watching as the very top of my cock pressed and opened her, hardly penetrating at all yet, simply making that tight entrance widen and then pucker back as I pulled away.\n\nI continued to tease us both like this, pushing hardly any of my cock into her before withdrawing. Niki was beginning to breathe harder, and her hips rocked from side to side.\n\n\"Thomas... don't tease me... I want you to fuck me all the way inside my ass now... please Thomas, I want it so much...\"",
        "I lowered my head to her ear and whispered, \"I love you, Niki.\"\n\n\"Oh Thomas,\" she whispered into her pillow. \"My Thomas...\"\n\nI lifted my head and reduced the effort in my arms, allowing my weight to fall on my hips. The head of my cock pressed down into her tight back passage. For a moment the resistance kept me out, then slowly she opened for me and I slid inside. My head popped through the tight ring of muscle and I took my weight back on my arms, allowing Niki to get used to my cock being inside her ass. \n\nShe moaned and rocked her hips again and I relaxed and pushed and suddenly I was sliding slowly inside her, first it was two inches, then three, it was tight and enclosing but welcoming, there was nothing to stop me entering her further and I let myself slip inside and then there was four inches of my cock inside her ass and I watched it, stretching her, felt the warmth and slickness and the tightness.\n\n\"All the way, Thomas... push it into me as far as it will go...\"\n\nI pushed and two more inches slid in, pushed again and another inch went inside. Almost the entire length of my cock was now embedded inside Niki's ass and she moaned again, \"No, all the way... I need more!\"\n\nI pushed harder, my cock meeting more resistance now, but still she opened for me and I felt myself slide deeper, slide all the way inside, and my pubic hair flattened against her cheeks. Niki twisted sideways a little and I turned to accommodate her move and lifted one of my legs so that my cock managed to enter another half inch inside her. My balls were now pressed tight against her pussy, the base of my cock jammed hard up against her asshole, the entire eight inch length buried somewhere up inside her, quite where I had no idea, all I did know was that it was the most wonderful feeling I had ever experienced.\n\n\"Thomas...\" she whispered, and there was a note of awe or wonder in her voice, \"You are going to make me cum again... I have never felt... Thomas, it feels wonderful... I feel so filled, so wicked... nnnh... Thomas I am cumming again... fuck me Thomas, fuck me hard now...\"\n\nI rocked my hips, moving my cock inside of her, withdrawing a little and then sinking all the way back inside. I felt Niki trembling wildly beneath me, the muscles of her ass quivering. I reached around and held one of her breasts which was clear where she had twisted to one side, and rolled it in my palm.\n\nNiki cried out and her hips bucked underneath me and then stilled.\n\nMy cock felt enormous inside her ass, harder than I had ever been, but I was not yet ready to cum again so soon after the first time and I continued to thrust in and out of Niki. She groaned and pushed her face down into the bed. I took her long pink nipple between my fingers and squeezed it hard.\n\nThen I grabbed her around the waist and turned her, rolling my body over her to lie on my side. Niki came with me still embedded far into her ass and she lay turned half over, one leg lifted back over mine. I pushed my left arm underneath her to get at her breast, dropped my right hand to her pussy and inserted two fingers inside her. She was soaking, juice flowing out of her onto my fingers, and I started to pump myself in and out of her ass at the same time as my fingers moved in her pussy and she made a squealing noise deep inside her throat and started to cum again.\n\nI continued to work on her, pulling on a nipple, rolling her clitoris, pushing into both her front and back openings, and for several minutes she lost all control and I was making her cum continuously, peaking over and over again in one long rolling climax.\n\nI wasn't sure how much more of this she could take, and I was starting to feel my own climax building at last. I removed my hand from her pussy and gripped her hips, rolled her again, onto her face, lifted her up to her knees and pumped my cock deep in and out of her asshole. My head went back and I gasped for air. It was building. It was growing. It was coming. Finally, my release arrived. It began far back inside my own ass, a hot pleasurable ache that built and then shot up along the length of my cock. I felt the cum jet from the head of my cock deep inside Niki's ass, felt it gush against her insides, and she felt it too and trembled and I thought she peaked one last time.\n\nI pushed hard, burying my cock head inside her, reveling in the spasms of painful pleasure that gushed from my cock into her. My balls were pulled tight to my body, my hips were shaking and sweat poured from every inch of me, dripping onto Niki's alabaster skin.\n\nI believe I lost all sense of myself for a while. When I came to my cock was still hard, still buried deep inside Niki's tight asshole, and she was crying.\n\nI eased myself back, feeling her tighten on me and try to hold me there, but I pulled away and felt my cock slip out and away. It released from her asshole with a twitch and I ran my hand over it, checking for any mess but it was, unbelievable, perfectly clean.\n\nI pulled Niki's shoulder and turned her towards me, put my arms around her and held her to me as she sobbed. Her tears dripped onto my cheek and ran down to my lips and I licked them and tasted their saltiness.\n\n\"What is it?\" I whispered in her ear. \"My darling girl, what's wrong?\"\n\n\"I love you, Thomas.\"\n\n\"And I love you, Niki. With all my heart.\"\n\nShe took a shuddering breath and lifted her head and looked at me with pink eyes. \"You do? You're not just saying that...?\"\n\nI kissed her eyes, her nose, her mouth. \"You know who I am, Niki. I never say anything I don't mean. You have melted my heart this week. I never thought I could feel like this again, but you have changed me. I love you so much.\" I felt my own eyes start to well up and swallowed hard.\n\nShe pulled me to her and hugged me hard, forcing the air from my lungs. \"Thomas, I love you and I want you, in the worst kind of way. I ache inside for wanting you. I want you to fuck me for ever.\" Her hand drifted down over my stomach and circled my still hard cock. \"And this is amazing...\"\n\nI laughed. \"I cheated. I wanted to make tonight special so I, uh, enlisted a little artificial aid.\"\n\nShe stared at me with an open mouth and then burst out laughing.\n\nSATURDAY\n\nI woke as light filled Niki's bedroom. She still lay asleep, turned away from me, her long lean body curled forward, her ass cradling my cock which had finally lost its hardness some time after midnight. It had rediscovered it again sometime before dawn and now lay almost fully erect between the round curves of Niki's ass.\n\nMy right arm curled around her hip and lay flat against her slim stomach. I could feel it rise and fall as she breathed and slid it upwards and began to softly stroke her breasts. She did not wake, but her body began to respond, her nipples growing hard beneath my fingers. Once they were long and stiff I let my hand drift down to her smooth pussy. Her legs were closed together and I could feel only the very top of her slit, but enough to touch her clitoris and work on that as well. \n\nShe moaned slightly and pushed her ass back against me, her legs parting sideways and allowing me fuller access. I dipped one finger down and ran in along her slit, pushed slightly inside and withdrew it slicked with her fluid. Niki moaned again but I was not sure whether she still slept of had woken. I rubbed her clitoris with my thumb and pushed my finger back inside her, at the same time gently sliding my cock up and down along her ass.\n\nI kissed her shoulder, then began to work my way down along her back, all the time my hand continuing its work on her sex. When I reached the upper curve of her ass she sighed and rolled around onto her stomach and the movement told me she was now awake. I lifted her hips, raising her up and opening her ass to my tongue and began to make her wet, working my tongue all around her asshole and then pushing it inside.\n\nNiki lifted back against me, encouraging my violation of her.\n\n\"Fuck me, Thomas, she whispered, her breathing rapid. \"Fuck me again.\"\n\nShe rolled over, one hand pushing me back and down and in a single movement straddled me, her pussy flattened and wet against my belly, my cock quivering against her ass. She reached behind her and gripped me, lifted, guiding me to the soaked entrance to her pussy, then let me go as she sank down onto my cock. She lowered herself fully down onto me, her back straight, her arms at her sides, head back and eyes closed as she began to rock against me. This one was hers...\n\n\"All the way, Thomas, push it all the way inside, I love it when you fill me up.\"\n\nI applied more pressure and half my length slid into her tight wet hole.\n\n\"Yes Thomas, like that, fuck me like that. Make me cum like that...\"\n\nNiki's slumped forwards, slapping her palms onto my chest, rocking her hips against me, lifting herself away so my cock slid all the way out to rest lightly between her soaking labia, then sliding back down until I filled her. She grunted and panted, her mouth hanging open and saliva dripping from her lips onto my chest. I put my fingers inside her mouth, took them wet to her breasts and ran them over her nipples. She bit her bottom lip and opened her eyes, staring directly down into mine as she used me, riding me hard and wantonly, taking her pleasure,\n\nI was embedded deep inside her again now, and as she continued to stare at me I grabbed her around the back of the neck and pulled her face down to mine, kissed her wide open mouth and slid my tongue in, fighting with hers. I began to move my hips in time to hers, letting my own pleasure build, kissing her, pulling on her breasts, grabbing her ass with one hand and then slapping her.\n\nI made no effort to hold myself back, bringing Niki almost to the edge and then holding her there while my own explosion built. My cock was aching, my balls starting to tighten and pull up to my body and I knew I was very close.\n\nNiki began to tremble and shake, and I let my own climax tip over. Semen soared up the length of my cock and I felt myself erupt deep inside her. She felt it as well and her pussy tightened around me as she started to cum as well.\n\nI drove hard into her, as fast as I could and she cried out and I felt her gush hot fluid against my cock as I deposited load after load inside her.\n\nFinally we relaxed, my softening cock withdrawing and sliding out until when it slid clear Niki groaned and pushed herself down against me as though to keep me inside.\n\nI kissed her shoulder and neck, tasting the salty sweat on her skin.\n\n\"What am I going to do without you, Thomas?\" she said.\n\n\"You'll do very well.\"\n\n\"I don't know if I want to. You are so special to me, do you know that?\"\n\nI laughed. \"Me? Niki, you're the special one. You are the most gorgeous creature in the world. I have no idea what you see in me, but I'm very grateful.\"\n\n\"I see your kindness, Thomas,\" she said, and rolled over to hold me. \"That and your long, long cock!\"\n\nI laughed and she joined in. The day was beginning. Niki rose and showered, I dressed and before long Desi arrived and started to organize her, casting dark looks my way as though she knew how I had violated her charge.\n\nOther people arrived, and soon the room was crowded, and I quietly slipped outside and made my way back down to my room.\n\nMy week in Miami had been something special, but I expected nothing more from it. Niki had thawed my frozen heart, and for that I would always be grateful, but I knew I would never see her again.\n\nI packed my bags and checked out, hesitating only for a moment in the elevator before pressing the button for the ground floor. When my taxi arrived I stepped into it without looking back or up to the top floor. My flight home was at midday. By evening I would be back in Chicago, ready to start a new phase of my life. "
    ],
    "authorname": "harding",
    "tags": [
        "celebrities",
        "anal",
        "blowjob",
        "blonde"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/a-week-in-miami"
}