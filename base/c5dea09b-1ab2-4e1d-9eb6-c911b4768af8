{
    "title": "A Shoulder to Cry On",
    "pages": [
        "This story is a sequel to my previous story \"The Irishman at the End of the Bar\". I'd recommend reading that for the continuity. I would further like to the give a special shout to everyone who helped make the last story more successful than I ever imagined it could be. I never dreamed it would rank as all time number one for the genre on Literotica. I don't think lightning is going to strike twice, but here's hoping. Thanks for the love. \n\n\u2013 \n\nThursday \u2013 January 1, 2026 \n\n-Chase Kramner- \n\nIt is a brand-new year. It is time to dust off your resolutions and review which ones you managed to achieve or live by. At least, it would be, if I ever made resolutions. This year, I do have a few things I want to accomplish. I want to make something resembling peace with my family and myself. The first time I spoke to my father in nearly a decade was only a few weeks ago. I have not spoken to my sister for longer than that. \n\nBefore I can make peace with others, I need to make peace with myself. I need this time for introspection, to reflect on what role I played in that relationship. My relationships do not occur in a vacuum. \n\nI have the day for New Years to think, so I spend a part of it at the cemetery. \n\nA frigid cold front just swept through the city, so I am cloaked in one of my thicker jackets with a scarf protecting my neck and face. Directly in front of me is a grave marker with dimensions no larger than a shoe box. Inscribed on the marker is a name I am all too familiar with. \n\nPatrick Conrad O'Neil \n\n1996-2025 \n\nIt does not say anything more than that. It should. \n\nPatrick O'Neil was many things. A mob hitman who buried more people than the police are likely to ever discover is one of them. Some of his crimes if I was under similar circumstances, I do not have the confidence to say I would have acted much differently. God help the man who hurt a woman in front of him. It seems like even God did not judge him too harshly and turned a blind eye. \n\nI feel a presence approaching and turn my head to see a woman. She is clearly not from this climate and is under far more clothing than me. Her top layer is a Navy peacoat, her long black hair stretching out from under her wool cap, half frozen from the windchill with a permanent wave. She is darker skin toned, likely Hispanic or something with a similar complexion. \n\nAfter a moment of hesitation, we both realize we came to see the same headstone. \n\n\"Did you know Patrick?\" the woman asks with a notable accent. English as a second language, but it is not a caricature. She has been an American long enough that the syllables mesh, and I trust she understands English perfectly. \n\n\"Never met him personally,\" I say, and she has a confused expression. Then suddenly she has an idea of who I could be. \n\n\"You're a cop,\" she says. Something about my demeanor gave that away, but I cannot imagine what it was. \"Are you the one who killed him?\" \n\n\"No,\" I say, then look down at his marker again. \"I was investigating him though.\" \n\n\"He didn't kill that girl,\" the woman says, and I turn to her. \n\n\"I know,\" I say. \"He'd slit his throat before raising his fist to a woman.\" I am paraphrasing a person who knew him. \n\n\"Are you here to spit on his grave. To tell his friends he was a lousy criminal who is now where he is supposed to be?\" she asks. \n\n\"No. In fact, I'd tell them he was more good than he wasn't. He got dealt a shitty hand, but still had to play the game,\" I say, and she is quiet for nearly twenty full seconds. \n\n\"He was my friend. I know he likely did a lot of bad things. But he stood up for me when I didn't have the courage to stand up for myself, and he paid the price for it. That's on me.\" \n\nI think I know who I am talking to now. \n\n\"Michelle Sanchez?\" I ask, and she nods. \n\n\"It's Ortega now, but yes. He got kicked out of the Navy for attacking my rapist. He was a good man,\" Michelle says. \"He tried to leave that life behind him. Twice. He loved that girl. They were about to leave when she died.\" \n\n\"Patrick didn't accept things just stayed the same, did he?\" I ask. \n\n\"He certainly didn't. You want something to change, take the first step yourself,\" Michelle says, and I smile, which she returns a moment later. \n\n\"I'm sorry,\" I say, and I mean it. \"I'm sorry it ever came to a point Patrick and I were on opposite sides of a firing line.\" \n\n\"He go out fighting?\" Michelle asks. I open my jacket and pull up my shirt to show her the bruise from his bullet hitting my vest. \n\n\"He got his licks in,\" I say, and she smiles again. \n\n\"I'm sorry, I shouldn't be smiling about that,\" she says, now laughing a little. \n\n\"I get it. You just wanted to make sure he was still the same person you called your friend,\" I say, and she nods. \"He wasn't bad, he was just human.\" \n\n\"Thank you,\" Michelle says and looks at his gravestone. She stands to attention, holds a salute, releases it, gives me another smile then walks away. \n\nI look at his marker one last time as well before departing. As I am walking through the cemetery, the thought of taking the first step hangs in my mind. I stop walking to pull out my phone, and after much hesitation I make a call. It rings a few times before I hear it connect. \n\n\"Hello?\" I hear my stepmother Carrie ask. \n\n\"Carrie, it's um...it's...it's Chase,\" I say. \n\n\"It's been so long, oh my god! How's it going, what are you up to?\" Carrie asks. She is a sweetheart, always has been. So much so it almost comes off as fake, like a stepparent trying too hard. \n\n\"I'm good. Sorry to cut you off, but is...um...is,\" I say, really struggling to take this step. \n\n\"You okay?\" Carrie asks. \n\n\"Yeah, is...is dad there?\" \n\n\u2013 \n\nSunday \u2013 March 8, 2026 \n\n-Lauren Hill- \n\nIt has been so long since Chase and I have managed to get out for a date night. I honestly cannot remember our last one. Either I'm taking extra shifts for patrol or Chase is stuck in the office until midnight working on some case he can't talk about. After a few months, our schedules finally link up. \n\nChase wants to take me to a comedy club one of his friends performs in. I'm excited about meeting one of his friends who isn't in law enforcement. Up until this point I didn't even know he had any other friends. \n\nChase pays the cover charge at the door and we take a seat at a table close to the stage. It's a classic comedy stage, complete with a fake brick wall behind the microphone. There are thirty tables in six rows of five. I imagine Saturday is a little more crowded, because tonight the club is at half capacity. \n\n\"Chase,\" I hear a female voice say. Chase leaves his chair to hug his friend. He didn't tell me it was a woman. \n\n\"Lauren, this is Laurel,\" Chase says, over pronouncing both names to put emphasis on the differences. \n\nLaurel is a few years younger than us, putting her in her mid-twenties. She has natural beauty, as I cannot see any makeup on her in the slightest, or it's the most subtle application I have ever seen. Her hair is golden hay blond and crimped into waves that cascade down her shoulders with pins placed to keep it out of her face. Her eyes are Green and reflect like stained glass. All of that packaged in a rocker girl look with Vans, black jeans, and black leather jacket over a plain white shirt. \n\n\"Hi, nice to meet you,\" Laurel says and shakes my hand. If I bumped into this person at a social event, I wouldn't have imagined she knew Chase. \n\n\"Same,\" I say to be polite. \n\n\"Omar?\" Chase asks, and Laurel sighs. \n\n\"I tried making him stay home, but he's a stubborn son of a bitch,\" Laurel says, then turns to see someone emerging from behind the curtain. \"Yeah, I'm talking about you.\" \n\nOmar is a tall dark and handsome stereotype. Over six feet with dark olive skin. He's either Mediterranean or Middle Eastern if I had to wager, and I'm leaning more on Middle Eastern just from the name. He is dressed plainly with jeans and a t-shirt, contrasting him greatly with Laurel. His green eyes also reflect like stained glass, but the sun is shining at dusk. \n\n\"Omar, this is Lauren,\" Chase says. When I reach to shake his hand, he gestures me away. \n\n\"Not meaning to offend. I'm just a little sick and trying to keep that to myself,\" Omar says, and I say I understand. He certainly does look sick. His handsomeness is sunken into his face and his voice sounds weak. There is a sway in his body just trying to stand upright. \n\n\"Then go home. You can miss a night,\" Laurel says with concern. \n\n\"I asked to go first, I'll go home after my set,\" Omar replies. He's one of the comedians I'd take it. \n\n\"You typically close, and I hate following you,\" Laurel says playfully back. They're both comedians. \n\n\"I'll be fine,\" Omar says and looks over his shoulder to someone who peeks out from behind the curtain. The man flashes him a five with his hand to show how long until he's up on stage. \n\n\"Are you sure you're good?\" Chase asks. \n\n\"I think I puked most of it out yesterday, just a flu,\" Omar says before adding he'll talk to us later. He then vanishes back behind the curtain again. Laurel sits with us at the table, and people continue to fill in and take seats. \n\n\"You guys drinking?\" Laurel asks, and we both nod. We took a cab to get here so we could both drink. \"I'll get the first round.\" Chase and I let her know our orders and she goes to the bar to get it. She comes back just before the MC comes to the mic to introduce Omar. \n\n\"I hope everyone is having a good night so far,\" The MC says, and everyone gives a 'woo' in response. \"Give it up for our usual closer. Omar Asfour.\" \n\nThe room erupts in cheers and whistles as Omar comes from behind the curtain and comes to the stage. He has a few soft words with the MC before picking up the mic off the stand. \n\n\"Give it up for Andre everybody, our most gracious host,\" Omar says, and the room applauds for him. \"Great to be here. Great to be in America really. I mean that, I really do. People who look like me, we don't usually say that.\" \n\nThe room laughs a little and he continues after the applause. \"Hope everyone is drinking, have a few drinks, have a great time. I'm Muslim, so I don't drink, but have a few for me.\" Laugh break. \"Maybe that's what Islam needs. We need a few drinks, calm us down a little. I think it'll work wonders. We'll be like 'Omar, I think we should strap on a bomb vest and find a crowded area.' I'd get to be like 'Fuck you Ahmad, you're drunk.'\" The room laughs and I do too. \n\n\"Allahu Akbar!\" Omar shouts, and the room is half laughing and half quiet. \"That's a phrase that makes butts pucker. I saw it in the crowd, half you looked for the exit just in case.\" We all laugh, and he points to a table. \"That guy was looking at his buddy like 'I thought he'd bomb, but not like that.' I love the expression 'you da bomb'. At least in America I do. You da bomb is supposed to be a compliment. Middle east, that shit's a fucking argument.\" The room explodes in laughter. \n\n\"No, you da bomb,\" he says in an accent. \"Fuck you Ahmad, you're drunk.\" \n\n\"I'm actually from Saudi Arabia, I moved here when I was real little, and last year was the first time I went back in over twenty years. It was pretty cool, and pretty weird. I thought the goat and donkey fucking stuff was a western stereotype of the middle east. Then I went back, and...yeah, that shit's real.\" The room laughs again. \"Look at the options, a goat or playing wife roulette with a bunch of beekeepers. Eighty percent of the time it's your cousin. Like I said...glad to be in America.\" The room laughs hard this time, his applause break is nearly a full twenty seconds. \n\n\"All kidding aside, I went back for the Hajj, the pilgrimage. So the fifth pillar of Islam, is you have to make the journey to pray at Mecca at least once in your lifetime. It was my time, and I went. It's really interesting, and I had an amazing time doing it. Mostly because I had like nine of my uncles try to wed their daughters to me because I was coming back to the States. The awesome part is everyone wants a piece of this. The not awesome part is they were all my cousins. Different world entirely. Here, we make fun of crack head white people in Appalachia fucking their nieces, but over there...that's normal. Yeah, like I said, happy to be American.\" \n\nOmar has a small coughing fit during the applause and seems to clear it up before he starts again. \"I was so happy to come back to America, I bought four guns and a truck, put the confederate flag in the back window and threw my non-alcoholic beers out as I drove shouting Murica!\" \n\nThe more conservative parts of the crowd whistled, and Omar coughed again. He didn't recover as fast and tried talking again while it was still working its way out. \"Blaring country music...*cough*...beating off to NASCAR...*cough*...and...and...\" \n\nOmar didn't recover from the fit and wobbled on stage a little, Laurel standing up from her seat to help him just before he puked and collapsed into his own vomit. \n\n\"Omar!\" Laurel shouted, climbing onto the stage as Omar began to have a seizure. His body was convulsing, and Laurel rolled him to his side so he wouldn't choke. \"Someone call an ambulance!\" \n\nThe audience is backing away from the stage with gasps and whispered questions. For the first thirty seconds his choking, gargling sounds echoed in the room from the mic before someone finally cut the audio. Chase jumped onto the stage as well to make sure he didn't hurt himself while he seized as I called the ambulance. \n\n\u2013 \n\nFour hours after Omar collapsed, I'm in the hospital waiting room with Laurel and Chase. Both smell like vomit and had tried their best to clean it a little within an hour of arriving, but it was in their clothes. I'm sitting next to the Chase who is next to Laurel. The is stifling silent, until after several hours Laurel has had enough. \n\n\"I told him all weekend to get it looked at. He come down with something on Friday, and all of Saturday he was hugging the toilet bowl. Had to be the tough, stubborn man who doesn't need a hospital,\" Laurel says, seemingly because she can say I told you so but doesn't want to. She's not really mad, she's just venting. \n\n\"He could just be an undiagnosed epileptic. Food poisoning, who knows. He'll be fine though,\" Chase says to comfort her. \n\n\"We ate the same things. He's just too fucking proud sometimes,\" Laurel says. \"You guys can go, salvage what you have left of the weekend.\" \n\n\"We'll make sure he's alright before we go anywhere,\" I say, and Laurel looks at me. \"You don't need to be alone with this.\" \n\n\"Thanks,\" Laurel says with a smile. \n\nA man who looks like a doctor \u2013 white coat, clip board - comes through the door and asks for Laurel. Laurel stands up and walks to him, Chase and I following. \n\n\"Mrs. Asfour?\" he asks, and Laurel nods, and I see Chase look at Laurel with an inquisitive look. Are Laurel and Omar married? \n\n\"Yes,\" Laurel says, then looks at us. \"You can talk in front of them.\" \n\n\"We don't know what this is. It's not food poisoning, it's not neurological, or epilepsy. We do know he's suffered multiple organ failure and hypovolemic shock. We've giving him fluid to treat the shock, but his body isn't absorbing it.\" \n\n\"Hypovolemic shock?\" Laurel asks. \n\n\"There are too few fluids in his body. His kidneys have failed, so has his liver. Ma'am, he's likely not going to live through the night,\" the doctor says, and Laurel is frozen just trying to process that. She holds back tears, then fails at doing so. \n\n\"What can you do?\" Laurel half asks and half cries. \n\n\"We don't know what it is. We've pumped his stomach, and he's on oxygen therapy, but right now, we can only make him comfortable,\" the doctor explains, taking a deep breath before saying, \"I'm sorry.\" \n\nThirty-seven minutes later, Omar is pronounced dead. The doctor was kind enough to let Laurel stay in his office to cry away from the public, and Chase and I stay with her. When the doctor comes back to check, Laurel says she wants to see him, but the doctor advices against it. \n\n\"I want to see my fucking husband,\" Laurel says, and the doctor relents and prepares to take her to him. \"You guys, go ahead and go.\" \n\n\"Laurel, I'm not going anywhere,\" Chase says, and she shakes her head. \n\n\"What the fuck you going to do to help right now?\" Laurel asks. \"He's already dead. Please, just...let me be alone with him.\" \n\n\"Chase,\" I say, grabbing his hand. He looks over his shoulder to me, and I squeeze his hand tighter. \"We'll check in on her later.\" \n\n\"Okay,\" Chase says, looking at the ground and releasing a deep breath. \"Get yourself checked though, in case whatever it is was contagious.\" \n\n\"I will,\" Laurel says, and they hug, Laurel crying into his shoulder, and I can now see a few tears escaping Chase's eyes and rolling down his cheeks. \"When I know what it is, I'll let you know.\" \n\n\"Call us if you need anything. I will drop everything,\" Chase says, and I nod to agree with him. I barely know her, and I will. \n\nI can tell it bothered Chase to leave, but it was clear she wanted to be alone. Whether or not she should be alone is another thing entirely, but there is nothing we can do. She'd probably feel worse if we stayed against her wishes. \n\nWhen we arrive at the apartment, Chase drops his keys in the bowl and leaves to the bathroom immediately. I don't hear any normal bathroom sounds, only running water. He's likely washing his face, and I lean against the door frame and wait for him. \n\n\"Chase,\" I call to him, and the water stops. \"You okay?\" The door opens and he leans against the other side of the frame. \"Talk to me.\" \n\n\"I just watched my friend fall into a pool of his own puke and die. Don't ask me if I'm okay,\" he says, and I don't speak or move at all. \"I'm not okay.\" \n\n\"I'm sorry...\" \n\n\"...and we left her alone to deal with it?\" Chase asks and steps out of the bathroom and past me into the living room. \"I'm going back.\" \n\n\"Chase, stop,\" I say, jogging toward the door to block his path. \n\n\"Move.\" \n\n\"No,\" I say firmly, putting my hand on his chest. \"She needs space.\" \n\n\"She needs support...' \n\n\"...and that comes after she's had her space. I've only known her for a few hours, but does she ever cry in front of people?\" I ask, and he stops. He knows I'm right. Laurel cries in private, and we need to let her do that. \n\nChase's hand is hovering over the key bowl, but he retracts his hand and it falls to his side. \n\n\"I smell like shit. I'm going to shower,\" Chase says, pivoting back toward the bathroom and shutting the door. \n\n\"Chase,\" I say, and hear the water start running in the shower. I jiggle the doorknob to open the door, but it's locked. I knock on the door loudly. \"Chase, open the door.\" I pound on the door a moment later. \"Chase!\" \n\nIt doesn't open, so I storm to the bedroom and pull a loose hanger from his closet. I bend the top into a straight line as I walk back and use it to pop the lock on the bathroom door. \n\nChase is naked in the shower, facing the water with his head down, leaning forward with his hand on the wall for support. He's crying now and doesn't take any notice to my entrance. \n\n\"Chase. Talk to me,\" I say, and he sobs in the shower. \n\n\"What the fuck do I do?\" Chase asks, looking at me, the water drizzling across his face and off his chin. \n\n\"I don't know. Right now, you need to accept you can't do anything,\" I say, and he looks again, and his body shakes from taking in a breath too fast. \n\nI lean into the hall and toss the hanger away, before stepping to the shower fully clothed and hug him from behind. In seconds I am completely soaked, and I just hold him so he can cry. \n\n\u2013 \n\nMonday \u2013 March 9, 2026 \n\n-Midge Appletree- \n\nI wipe off the mirror to look at myself. The shower fogged it up, but after a few swipes with my palm I can see my head to my shoulders. I've been told my entire life I am one cute boy. Strange, because last time I checked I had a vagina. ",
        "Perhaps the boyish hairstyle and fair complexion do not aid in diffusing the initial assessment most people have when first meeting me. My breasts started forming when I was fourteen, then stopped as fast as they started. I'm an A minus cup if such a thing existed. I've literally never worn a bra. When I enter a room, people double take, trying to figure out if my chromosome is X or Y. \n\nEven though I'm androgynous looking, I still wrap my towel above my tits and enter my bedroom where Gianna is still sleeping soundly. She doesn't have to get up until eight, but I try to get to the station by seven thirty. It's currently six forty-five, giving me plenty of time to finish getting dressed for work. \n\nWhile I look like a boy, my wife Gianna looks like a woman. I have a hot wife, and I brag about it like a man would. She's gorgeous even when sleeping. Her red hair spread over her pillow, the yellow sunrise bleeding through the blinds makes it look alive. Under the covers I imagine the nightgown cutting off at her creamy thighs. The gown hides her shapely form, that round buttocks and firm perky breasts I couldn't help but suck on last night. Complete opposite to my straight rail of a body. It's the only thing about me that's straight. \n\nI finish drying after picking out my clothes which I lay on my side of the bed. My lady briefs slide up my legs, followed by my pants, but I leave the belt, button, and zipper undone until I put on my undershirt and blouse and tuck them in. I lean down to my nightstand and open a compartment which holds my safe. I type in a four-digit code and open it. Inside is my service pistol still in the holster, which goes on my right hip, followed by the weapon after I slap the magazine in. I do not chamber a round until I leave the house. I have a second, small safe on the top of my fridge downstairs. Still on a hanger in the closet is my suit jacket which I slide over my shoulders. I nearly leave the room without grabbing my detectives shield on the bathroom counter. \n\nI walk around the bed to Gianna's side and kiss her forehead. This kind of wakes her up, and she turns to kiss me on the lips, then rolls back over to sleep. I very much doubt she will remember that kiss. \n\nAfter I leave the bedroom, I walk down the hall and check on doors to see which of the kids are awake. I have two steps sons and a daughter from Gianna's past marriage, and they come in all shapes and sizes. Our moody fourteen-year-old daughter Wendy who is still angry her parents are divorced and loves to take it out on me. Our eleven-year-old son Preston who is getting in trouble at school for stealing kisses from girls at lunch. When the teacher told us that weak ass shit, I patted his shoulder and said 'get em tiger!'. Wesley, our six-year-old, who is basically my best friend. Love that little bastard. I know I'm not supposed to have a favorite, but I sure as shit have a preference. \n\nWendy is still asleep, so I knock on her door to wake her up, then point at my wrist which has no watch. \"You don't have a watch,\" Wendy says. \n\n\"You know what I mean smart ass, get up,\" I say and walk to the boy's room next. Preston is asleep but Wesley is awake and likely already in the kitchen, I knock on the door and give him the same gesture. He groans and I slap my wrist harder, so it makes a sound. \n\n\"I'm up,\" Preston says, throwing his blanket off his body. I cut back to Wendy's room, and she's out again. \n\nI slap the door to startle her, then throw a stuffed animal on her dresser across the room which hits her pillow. \"Aint telling you a third time, get up.\" \n\n\"Fuck off,\" Wendy groans. \n\n\"Fuck what young lady?\" I ask, and she lets out an aggravated, angsty, teen breath. \"How's about you watch your language and start getting up.\" \n\n\"You say it.\" \n\n\"I also pay the mortgage. You can expand your vocabulary as soon as you have bills. Get in the shower,\" I say. I head down the stairs, hearing the television in the kitchen and smell coffee brewing. Wesley is sitting at the island eating a bowl of cereal already dressed for school. He already made my coffee on the Keurig. This is why I love this little sycophant. \n\n\"Morning M,\" he says as I pick up my coffee and put the steam to my nose before taking a sip. He even used my English toffee flavored creamer. A little too much creamer, but I will never complain about the service. I put the cup back down. \n\n\"Thank you for the coffee, good morning to you sir,\" I say, kissing the top of his head, then putting my cheek on it and watching the tv sideways. \"Anything good?\" \n\n\"Just cartoon reruns. It's Monday,\" he says, taking a bite of his cereal, his chewing making my head bob up and down. I feel something brush by me and my body recoils. \n\n\"I must have coffee,\" I hear Wendy say as she reaches for my cup, brushing past me as she does. \n\n\"Get your own bitch,\" I say, holding it away from her. \n\n\"I need to watch my mouth?\" She asks, pointing at herself coupled with other hyper girly mannerisms. She's fourteen so she exaggerates everything. \n\n\"You ain't got bills. It's the swear tax.\" \n\n\"Yeah bitch,\" Wesley says, and I lightly tap his head with my fingertips. \n\n\"Very much applies to you too young sir. What bill did you pay?\" I ask him playfully. \n\n\"I paid the coffee tax,\" he replies, and I laugh. God, I love this little fucker. \n\n\"That you did, but it's not quite passing the bitch threshold. You get, one 'shit',\" I say, and he smiles. \"Has to be at home though. You can't be saying shit like shit at school. Home, you get one, got it.\" \n\n\"Per day?\" \n\n\"You keep making me coffee you can,\" I say, and take a sip. Way too much creamer. Love the enthusiasm, but it's so sweet it nearly hurts my teeth. \n\n\"You know it's bullshit and hypocritical, right?\" Wendy asks. I remember being fourteen. You're adorable sweetie. Wait for it...wait for it...there it is, the hand is on the hip. Where is the...boom, exaggerated hip swing. Some things are timeless. \n\n\"How about I let those go, you get one really loud fuck, and I let you finish my coffee?\" I ask, handing the cup to her. She hesitates for a moment but takes the cup. \n\n\"Fuuuuuuck!\" Wendy shouts, and I laugh. \n\n\"Better?\" I ask, and she nods. \n\n\"Yeah, thanks. Love you, see you after school,\" she says, then kisses my cheek, and because I see it coming, I don't flinch. \n\n\"Have a great day,\" I say as she sits on the couch. I hear the water running so I know Preston is showering. \"Tell your brother bye, I gotta go.\" I say, kissing his head again. \"Little less creamer next time.\" \n\n\"Got it!\" he says. \n\nI grab my keys and say more goodbyes as I exit the door to the porch. Our three-bedroom townhouse is part of a series of squished together buildings, all of which are similar looking townhouses with brick exterior with the occasional ivy on the side, but our home has no additional decoration. We have a very small lawn with a concrete path in the middle leading to a steel fence I swing open and shut in route to my car parked on the curb. \n\nTraffic hasn't built up yet, so getting into my car and merging is easy and within fifteen minutes I'm parking in the garage at the station. I'm on the second floor when I enter the building and take the elevator to the fifth floor. The elevator docks, and I follow the signs to the Homicide Department where my partner William Kaiser is at his desk, well before me like always. \n\nI was truly excited when I learned my partner was going to be William Kaiser. A respected and decorated officer, awaiting a promotion to Sergeant, co-lead investigator on taking out the Irish mob. Unlike the division captain, Lincoln Queen, who has disheveled facial hair, William Kaiser keeps his neatly trimmed in a goatee mustache encircling his mouth. Which almost draws the attention away from his advancing bald spot. His choice of clothes is pragmatic with a long sleeve shirt tucked into jeans with a tie under a blazer. The most casual part of his attire are his dark athletic shoes. \n\n\"Morning,\" he says, not looking away from his computer as he does. \n\n\"Coffee on the pot?\" I ask, placing my jacket on the back of my chair. I walk toward the back of the room where I placed my coffee pot. Will has already put coffee on. Best partner ever. \"Awesome.\" \n\n\"Don't you make coffee at home?\" Will asks, spinning around to look at me. \n\n\"I have an overzealous six-year-old who thinks coffee should look whiter than me,\" I say, pouring it into a cup I leave next to the pot at the end of the day. Next to the pot is a small fridge I brought in just to hold my creamer and whatever Will or the other officers want. I pour a little creamer in my coffee and return to my desk. I stir the coffee with a pen I pull from my pocket. \"I taught him coffee, now I need to teach portions.\" \n\n\"Baby steps,\" Will says, picking up his own coffee cup and taking a sip. \n\n\"We got more larceny case overflow?\" I ask. \n\nI just came to Homicide from Property Crimes, and I was excited to get a case that wasn't identify theft, larceny, or the occasional arson. Breaking and entering, burglary, muggings, all those reports are manually reviewed, and occasionally the department gets backlogged. Less active departments help pick up the slack. I left Property Crimes only for my first case to be another property crime. \n\n\"I think we're good for now. Though if we don't have a case, we have range safety officer duty on Wednesday,\" he says, and I groan. \n\n\"Why does Homicide get all the shitty additional duties?\" I ask. \n\n\"Because we're halfway through the fiscal year and we've only had five cases,\" he says. \"Property Crimes will have more than that in a week.\" \n\n\"Goddam damn piece of shit!\" I hear Officer Graham shout from his desk in the corner right before he slaps the side of it. When the hell did he get here? \n\nOfficer Jericho Graham is one of the plain clothed officers who works in the Homicide Department. Primarily doing the heavy digging in files and assisting investigations when needed. It comes in handy having an extra person around when Will and I must split up. Graham is six feet even, and all skin and bones. Blonde crew cut and a mustache with glasses. He's typically quiet and I often don't realize he's entered the room. One of those guys who was born to be a cop. \n\n\"Try a day,\" I say to Will regarding Property Crimes' case volume. \"I've paid my dues. I wasn't lucky like you to get put in Homicide first,\" I say, and take a sip. \"What's the workflow today?\" \n\n\"I got a box of records coming from downstairs, I've volunteered us for digitizing records duty,\" he says, and I groan again. \"You got something else to work on?\" \n\n\"Nope,\" I say, and place my elbow on my desk to lean my cheek against my hand. I hear Lieutenant Sweeney's phone ring in his office, and sigh. More bitch work? He talks to someone for a minute before hanging up and leaning out of his office. \n\n\"Kaiser,\" he says, and Will turns his head to him. \"I just forwarded you a report from the ME's office.\" \n\n\"Why, what's up?\" \n\n\"Some guy dropped dead last night. ME report came back, dude was likely poisoned,\" the Lieutenant replies and then disappears back into his office. \n\n\"Poison?\" I ask and look at Will. \"Poison means murder, murder means murder case,\" I say, and I don't realize I am smiling. \n\n\"Someone is dead and you're grinning like an asshole,\" Will says, and my face flattens back down. \"Let's go.\" \n\n\u2013 \n\nThe morgue smells like sterilized death. That overwhelming scent of over used cleaning products. The stench alone is enough to give me a headache, and the soft light of the florescent bulbs certainly do not help. It's also too quiet, so the sounds of our feet echo for nearly two full seconds with every step. \n\n\"I hate this place,\" I say, and he looks over at me as we walk. \n\n\"Get used to it, you're in Homicide,\" Will says. I try to pick my shoulders back up to walk straighter. I'm a Homicide detective now. Act like it, look like it. \n\n\"Suppose I have to get used to this,\" I say. We turn at the corner and sign in at a counter before we proceed to the medical examiner who is expecting us. \n\nDr. Gerard Grant is the medical examiner for the city. The man reminds me of a dwarf from fantasy books. He's as short as me with a long chest length beard of frizzy brown hair. The hair on his head is equally thick and slicked over his head, held together by an odorless product. His blood stained \u2013 at least I hope it's blood - lab coat was altered so it doesn't scrap across the ground. \n\n\"Morning Will, wish we could meet under better circumstances,\" Dr. Grant says as we enter a freezing room where a body is laid out on the table. Next to the table is a stool the doctor uses to reach the body. All the walls and shelfs are stain proof steel. The room has spotless white floors and a drain in the center of the room. I cannot even describe the smell. \n\n\"What do we have?\" Will asks, the doc handing him a box of gloves to take from, then handing it to me next. \n\n\"Healthy adult male, age twenty-six, drops from seizures and vomiting, dies about four and half hours later from multiple organ failure and hypovolemic shock,\" the doc explains. \n\n\"Hypo whato?\" Will asks. \n\n\"Hypovolemic shock,\" I say, and he turns to me. \"Not enough fluids in the body.\" He looks at me a few seconds longer than is needed. \"My wife is a nurse.\" \n\n\"She's right,\" Doc says then turns to the body and pulls the sheet down a little to show him with a slit down his middle. He steps on the stool and shoves his hand inside like it's a couch cushion. My stomach churns and I look away for a moment. \n\n\"Cause?\" \n\n\"Cell degradation like that, leads me to think there is something wrong with protein synthesis. Starting with the intestinal tract, then spreading to the rest of the organs. Liver, kidneys, stomach. I haven't hit the exact culprit yet, but definitely was a ribosome inhibiting protein,\" he says. \n\n\"What?\" Kaiser asks. \n\n\"Have a look,\" the Doc says. Nah, I'm all good. \n\n\"Rook,\" Will says, gesturing me over. I take a shallow breath and look at the exposed organs on my tippy toes. I immediately back away looking for a trashcan. That fucking smell. \n\n\"Like he rotted from the inside huh?\" Dr. Grant asks as I blow chunks into his waste bin. \"That's what organ failure does. I have mints in the drawer when you're done.\" \n\n\"You were saying ribosome inhibi...\" I start to say but hold back some puke. \"Protein?\" \n\n\"Pretend I'm stupid,\" Will says to him then pats my back and I jump. \"Sorry, forgot,\" he apologizes immediately. \n\n\"I'll skip to the point. He was poisoned,\" Dr. Grant summarizes. \n\n\"Accidental?\" Kaiser asks. \n\n\"Unlikely. Very unlikely. It has a similar composition to Ricin, but I did a tox screen for it already and it was negative. I have an idea of another culprit, but I need something to test it against. The test isn't common because this toxin has very few recorded uses as a weapon. Abrin.\" \n\n\"Abrin?\" Will asks and I am finally standing upright and wiping my mouth. \n\n\"Had to do a little research myself this morning to refresh my memory. It's from plant called Abrus Precatorius. Very common plant around the equator all over the world. Hell, you can even find it in some southern states like Florida. Invasive species. Again, very few recorded instances. I'll ask an associate of mine at the University if they have some samples.\" \n\n\"I'm going to ask you again, just so I can tell my boss I asked you twice. Murder or accident?\" Will asks. \n\n\"Whatever it is, was ingested in a powdered state. Someone took the time to cultivate it. I can't know for sure. I tell you how, not why. But if I had to, I'd say this was intentional.\" \n\nJust like that, we have a murder case. \n\nAfter we leave the room, Will is making phone calls as I take a minute to sit down and regather myself. I buy a can of soda from a vending machine that I place on my forehead. After ten minutes he hangs up and looks over at me. \n\n\"You good?\" Will asks. \n\n\"Not my finest moment,\" I say, lowering the can to open it and take a sip. I need the sugar more than anything. \n\n\"I puked my first time in there. Woman who shot her husband point blank with a shotgun. Not much of an upper half left,\" Will says and I close my eyes to focus on not visualizing that. \"He likes to mess with the rookies.\" \n\n\"Firstly, I've been a cop a year longer than you, and we took the detectives exam on the same day. Ease up on the rookie shit,\" I say, and he chuckles. \n\n\"I'll lay off, but we got interviews to do. His wife, and possibly witnesses at the comedy club he was performing at when he collapsed,\" Will says, and I nod before standing up. \n\n\"Let's get to it.\" \n\n\u2013 \n\nLaurel Smith was already at the police station waiting to answer questions. Accompanying her was Sergeant Kramner from Special Investigations. He's one of the biggest kiss asses in the entire precinct. They created a new position in SI just so he could work there. Can't complain, it opened the slot in Homicide for me. \n\n\"Chase?\" Will asks as we enter the conference room we planned on talking to Lauren Smith in on the first floor. \"You a part of this somehow?\" \n\n\"I was there when it happened. Omar was a friend of mine,\" Chase says, and Will hugs him for a moment then looks over to who I'll guess is Laurel. \"This is Omar's wife, Laurel. I'm glad to see the case is in good hands.\" \n\n\"You have my condolences,\" Will says and sits across from her, and I sit next to him. \n\n\"Chase said you two are homicide detectives. Are you treating it as a homicide because you think it's a homicide, or because it's possibly a homicide?\" Laurel asks. The first question she asks is about the status of the investigation. That's a big red flag. Maybe she's already done her crying, because I see her eyes are still red, but otherwise she looks collected. \n\nPoison is a woman's weapon, even if it's an exceedingly rare one. \n\n\"We are pursuing it as an intentional murder,\" Will says and pulls his notebook out of his pocket. \"Could you detail the last week you had with your husband?\" \n\n\"Last week?\" Laurel asks. \n\n\"Until we know for sure what was used to kill him, when it was given to him is speculative,\" Will explains. Laurel looks at Chase who nods to her. \n\n\"This time last week, he was fine. He goes to the gym in the morning then comes home to have breakfast. He's not traveling this week for work, so he's been at home while I'm at work. It's been the normal routine,\" Laurel says. \n\n\"Were there any changes in his dietary habits?\" I ask and Will tilts his eyes to me. I can tell he liked the question. \n\n\"He's Muslim, so he had the typical dietary restrictions. Alcohol, pork, you know,\" Laurel explains, and I nod in reply. \"No major changes though. He has a protein drink on his way back from the gym. Oatmeal after that usually. A salad for lunch. His dinner is usually balanced with meat, vegetable and starches like potatoes and rice. He is very...was...um...\" she says and needs a moment. She doesn't cry in public, I misjudged that entirely. \"...was...was...very health conscious.\" \n\n\"Fluid intake?\" Will asks. \n\n\"He didn't drink at all. Other than that, protein drinks and water,\" Laurel says, and Will writes that into his book. \n\n\"When did he start showing symptoms?\" Will asks. \"When you noticed he wasn't well.\" \n\n\"Friday,\" Laurel answers after thinking for a few seconds. \n\n\"Time?\" \n\n\"Evening, little later in the day. He wasn't feeling well. It started with stomach pain that nearly stopped him from sleeping at all. All day Saturday he was puking...\" Laurel says, remembering what that day was like before she stopped with the expression of restrained emotions frozen on her face. \"...I told him to go to the hospital. I fucking told him, all damn day, just go to the fucking hospital.\" \n\nIt's possible Omar might be alive if he had listened. This thing could have taken over two days to kill him, so if he had been checked they might have caught it in time. Just a like a man to not go to the hospital. ",
        "\"What is his Friday routine?\" Will asks. He wants to home in on this day because it's the day he was most likely given the poison. \n\n\"Gym, like always. Then he showers and attends prayer at the Mosque. Comes home, has lunch, does some writing for his comedy. We went grocery shopping, picked up his grass-fed beef and other stuff...\" \n\n\"...I need as much detail as possible, especially when we're talking about poison and food,\" Will interrupts, before she takes deep breath and nods. \n\n\"You're right. I can't remember everything we got, but we usually keep all our receipts,\" Laurel says, and Will says he will need to see that. \n\n\"He attends prayer?\" Will asks. \n\n\"Yeah, but only on Friday. He has faith, but he wasn't particularly religious. Like, you know, he didn't pray five times, but he does fast during Ramadan, you know,\" Laurel says, realizing a moment later she was interchanging past and present tenses and closes her eyes to breathe again. Small cracks in her composure. \n\n\"Where did he attend prayer?\" Will asks. \n\n\"Abu Bakr Islamic Center,\" Laurel says. \n\n\"Like, the leader of ISIS?\" I ask, and both Chase and Laurel look at me. \n\n\"No, like the first Caliph of the Rashidun Caliphate and the father-in-law of the Prophet Mohamad. Though al-Baghdadi did take his namesake from the Caliph, it was not actually his birth name,\" Chase says to me, and I can't help but feel condescended to. I heard he was kind of a douche. \n\n\"Anyway,\" Will says to defuse the tension, \"Who is the Imam for the Mosque?\" \n\n\"Imam Hamza Masri,\" Chase replies, and I look at him. I want to tell him to shut up, but I bite my tongue. \n\n\"Chase,\" Will says, looking at him as to say he was not being interview and wasn't her lawyer. \n\n\"Hamza Masri, what Chase said,\" Laurel replies, and Will writes that down. \n\n\"About what time did he collapse on stage last night?\" Will asks. \n\n\"A few minutes into his set. That started at nine, so a little after that,\" Laurel replies. \"Then he died a few hours later.\" \n\n\"Thank you for being able to talk with us so soon afterwards,\" Will says, Laurel looking down, then toward the exit. \"Let us know when you find the receipt, and if you have a record, for some reason, of his diet, please let us know that as well. It could help narrow down when he was likely poisoned, which could narrow down the who.\" \n\n\"Thank you, detectives,\" Laurel says, standing up from her chair and shaking both of our hands. \"Thanks Chase.\" \n\n\"I'll call later,\" Chase says, and she leaves the room and Chase stays. \"What do you guys know so far?\" \n\n\"Chase, you're too close to this,\" Will says, and I look for Chase's reaction. \n\n\"I just watched my friend die in a puddle of his own puke last night Will,\" Chase says, and Will takes a moment to think his next words to calm him down. \n\n\"I understand. But you need to understand, that is the reason you are too close to this,\" Will says, and Chase contemplates before slowly nodding. \n\n\"You're right,\" Chase says, standing up from his chair then leaning against it. \"I feel fucking useless right now.\" \n\n\"I get it man, but give us the space to do our jobs,\" Will says, and Chase, takes a deep breath with an audible exhale and leaves the room after saying another polite exchange. \n\n\"He's douchier than I thought,\" I say once Chase is fully out of the room. \n\n\"Shut it,\" Will says, and he is not joking. I think I truly pissed him off. \n\n\"I'm just say...\" \n\n\"...and I'm saying shut it. You just asked the spouse of a murder victim if her husband attended a Mosque named after a terrorist,\" Will says. Fuck, I did. \n\n\"That was my bad,\" I say, and Will doesn't let that go as easily as I tried to drop it. \n\n\"By the way, that is Sergeant Kramner, do not disrespect a superior officer in front of me. But if you do, at least have the stones to say it to his face,\" Will says and leaves the room. Holy shit. \n\nI exit the conference room and board the elevator with him to ride back up to the fifth floor and return to our office space. \n\n\"We doing interviews with the people at the club?\" I ask. \n\n\"No,\" he says, putting his book on his desk and leaning over it. \n\n\"Why not?\" \n\n\"What could we learn that we don't already know?\" He asks. \"Club owner, maybe. Audience is a waste of time though. I'm thinking he was poisoned on either Friday morning and began showing symptoms that evening, or Thursday night.\" \n\n\"Someone at the Mosque?\" I ask. \n\n\"Worth checking out, but let's work on some warrants for credit and finances on Laurel,\" Will says and I nod. \n\n\"Chase won't like us looking at her.\" \n\n\"He'll appreciate us ruling her out as soon as possible. He's knows we're going to, friend or not. Again, that is Sergeant Kramner.\" \n\n\"Oh fuck off,\" I say, tired of this high and mighty bullshit. \"You call him Chase.\" \n\n\"Because he was my partner, and I'm the acting Sergeant...\" \n\n\"...Come on, he turns a cop into IA and get a cushy desk job with SI that didn't exist before he did,\" I say. Will stares me down before he opens a desk drawer and pulls out a file he has in it. \n\n\"This is the file of all the evidence we had against Patrick O'Neil. He was an Irish Mob hitman. Hefty file, right?\" Will asks, handing it to me. His hand accidently touches mine and I force my hand to not shudder. \n\n\"Where are you going with this? The cop he threw under the bus is the person who shot this guy,\" I say, putting the file on my desk. \"So she ran a few off the book informants.\" \n\n\"This,\" he says, grabbing another, much, much, larger file from his desk. It's three of ones he just handed me in three separate folders held together by two extra-large rubber bands. \"This, is all the evidence we found on Sergeant Texada.\" I can exercise with this case file it weighs so much. \n\n\"What the fuck did she do?\" I ask. \n\n\"On the payroll for the Irish mob for several years. Assassinated one of her informants. Assisted in drug trafficking. Planted evidence in at least seven of her prior cases. Stole sensitive equipment from the precinct. That's just the first folder,\" he says. \"Thirty-seven of her prior arrests are pending appeal, nine have already been overturned, and the city is facing a lawsuit to the tune of seventy million dollars. That's what a dirty cop does. Makes the public distrust us more than they already do. Makes the streets a little more dangerous for people with badges. She did irreparable damage to this force. \n\n\"The only person who had the balls to do something about it, was Chase. Even I tried talking him out of it before we knew everything we do now. I should have listened to my partner, but I didn't, even after he spoke to Chief Whitaker on my behalf to clear up some misconceptions about me,\" Will says, and look at the file on Sergeant Texada again. \"If you're going to talk shit about my partner, do it in your fucking head.\" \n\nThat is one hell of a file I must admit. \n\n\"To be fair, he can be a little bit of a douche,\" Will says, and I look over at him, and his small smirk makes me laugh a little. I really do appreciate the olive branch. \"Just, know what you're talking about.\" \n\n\"Fair,\" I reply. \"But he's not your partner, I am.\" \n\n\"Fair,\" he replies, and starts looking for an address. \"You want the Mosque, or the club owner?\" \n\n\"Short haired dyke with a bad attitude around people who hang people like me off cranes?\" I ask sarcastically, and he shakes his head. \n\n\"Did you miss the cultural sensitivity briefs?\" Will asks, but I can hear his tone isn't serious. \n\n\"I was there, but then I went home and watched FOX news,\" I say and then double check my pockets for my car keys. \n\n\"Cute,\" Will says, writes down the address and then walks to the Lieutenant's door. \"Leo, going to interview the Imam at the Mosque the victim went to.\" \n\n\"The fuck you are,\" Leo says, and I turn toward the door. \n\n\"Why?\" Will asks. \n\n\"What's the protocol for interviewing religious leaders?\" Leo asks to remind him. Will is silent for too long. \"Mr. Soon-to-be Sergeant, you cannot interview a religious leader unless you yourself are trained, or accompanied by someone who is trained, on the customs of that religion. Can't have a cop going in there and saying the wrong things. Especially for Islam, this precinct will be on the news by the end of the day.\" \n\n\"I took the religious sensitivity class,\" Will says. \"We all have.\" \n\n\"Not the same class,\" Leo explains. \"At least three people per division are required to be trained. We just lost one to retirement, and another is on leave. You got one person.\" \n\n\"Fine, who am I calling?\" Will asks. I assume he answered his own question in his head. \"He's too close to this.\" \n\n\"You want to bring him. He has a preexisting rapport with the Mosque, and that is valuable,\" Leo says then turns back to his computer. \"Consider it an order.\" \n\n\"Fine, but if I think he's too biased I'm kicking him out,\" Will says, and Leo doesn't respond. \"Head to the club, talk to the owner. Meet back here at...\" Will says, checking his watch. \"...thirteen hundred. Suspicious behavior, recent changes, anyone who had a grudge, rumors of threats, jealous rivals. Repeat questions different ways if you have to.\" \n\n\"On it,\" I say, and take one of the officers with me. \n\n\u2013 \n\nI get in touch with the club owner Andre Reed who explains he is not at the club but is willing to talk at his apartment. It's a short drive from downtown, so only takes me ten minutes, but finding a parking spot takes me an additional five minutes. I press the button at his building to get buzzed in. He is on the second floor, so Officer Graham and I take the stairs and knock on his door. The door is just off the stairs on the right side of the hall. \n\n\"Come in detectives,\" Andre says after he opens the door, and neither Graham nor myself correct him. Graham does smile a little at the mistake. \n\nAndre Reed lives in a wide-open studio apartment and has a decent view from the back wall which is all windows and overlooks a park. His kitchen is older, but everything else is modern. His bed is to the back of the room behind a changing screen styled to look like bamboo and he has a pole across the entire back wall with clothes hanging from it. His wall is covered with photos of him with various celebrity comedians I recognize who have performed at the club. \n\nAndre is black with a lighter skin tone. Likely mixed race. Shaved bald head, goatee, and silver stud piercing on his right ear. He towers over me, but nearly everyone does. He is dressed in faded jeans, a sports jersey, and a pair of Nikes. Around his neck is a gold chain and around his left wrist is a gold watch. \n\n\"Drink?\" Andre asks, and we both decline, then he offers us seats. I sit in a pure black, leather sitting room chair that is so firm my scrawny ass barely sinks. Officer Graham decides to stand, looking like a cop. \"Dude, you're making me uncomfortable.\" \n\n\"Graham, I'm fine,\" I say. He nods and walks out to wait in the hall. \"Sorry, he lives and breathes cop.\" \n\n\"He needs to chill,\" Andre says, taking a sip of an expresso he has on a small plate and cup in front of him. \"You sure you don't want a drink?\" \n\n\"Thank you, but I'm okay,\" I say. My victim was poisoned, I'm not drinking anything from anyone even tangentially related to this. \n\n\"Last night was fucking crazy. My headliner, god dammit,\" Andre says, clenching a little as he says it. \n\n\"Just concerned your headliner is gone?\" I ask. He seems more angry than mad, and from a business perspective. He's mad his golden goose is dead. \n\n\"I'm upset Omar is gone, but also about my business. He brought in the crowds,\" Andre says as I pull my notebook out. \n\n\"Leading up to it, was there anything suspicious?\" I ask. \"Out of the ordinary? New faces, different people?\" \n\n\"Besides the crowd, nah. Same crew in the back, same everything. Omar did look shitty when he got there though. Like he'd drop at any second. He asked me to put him on first so he could get home earlier. I was cool with it. Other comics weren't because they hated following the guy.\" \n\n\"Which comics were mad?\" I ask. \n\n\"It's all petty bullshit, they weren't really, you know, like, mad, mad,\" he says. \n\n\"I still need names,\" I say, and he sighs. \n\n\"Joey Kristof was probably the maddest. Those two had some beef going back years,\" Andre says, and I tilt my head, and he knows my next question before I say it. \"Laurel used to date Joey, that's most of it. He also got pissed last year when some network execs were talking to Omar after a show one night. From Comedy Central, or Netflix, or some shit.\" \n\n\"Let me guess, Joey wanted that kind of exposure?\" \n\n\"Duh,\" Andre answers. \"All petty bullshit.\" \n\n\"Sounds like a lot of money. Some comics make millions for a gig like that,\" I say. \n\n\"Yeah, if you're Kevin Hart or Chappelle. No first special comic is making that kind of scratch. Don't get me wrong, tens of thousands is nothing to sneeze at either.\" \n\n\"Had Joey ever threatened him?\" I ask. \n\n\"Joey's a passive aggressive little beta bitch. He could never do anything like that himself. All self-deprecating humor talking about how useless men are and how great women are. Gets the bitches riled up though. He still never leaves with them,\" Andre says, laughing a little. I'm not a fan of beta males either. I've always found guys like that creepy. Joey is passive aggressive though. Use indirect means to kill him. \n\n\"Was Joey there last night?\" I ask. \n\n\"He's traveling right now, opening for some up and comer. I haven't seen him all month,\" Andre says. Dammit. I'll confirm that later. \n\n\"Can you think of anyone else who could have had antagonistic views toward Omar?\" I ask, and he thinks. \n\n\"Maybe not against Omar, but maybe Laurel,\" Andre says. \"I had to permanently ban someone last year. Some guy who was stalking Laurel. She asked me to keep it on the down low and not tell Omar, so I didn't, but that guy is still banned.\" \n\n\"You got a name?\" I ask. \n\n\"Not off the top of my head, it's been awhile. I think Laurel had an official restraining order against him,\" he says, and I write that down. \n\n\"Was he dangerous?\" \n\n\"I don't know, she didn't give me details, just asked me to throw him out and I did. He's respected the ban, no major incidents,\" Andre says, and I write 'find stalker' and underline it twice. \n\n\"Do you know if other comedians or audience members getting sick?\" I ask. \n\n\"Nothing like that,\" he says, and I close my book. This is good enough for now. \n\n\"Thank you for your time. If you think of anything else, give me a call,\" I say, pulling a card from my pocket and handing it to him. I can tell he touches my hand on purpose, and I jolt my hand back, dropping the card he picks up a moment later.  \n\n\"I'll give you a call, it might be unrelated though,\" he says with a grin. \n\n\"Flattered, married,\" I say, showing him my left hand. Married, and lesbian. \n\n\"I can be discreet,\" he says, and I stand up quickly. \n\n\"Thank you, have a nice day,\" I say, walking to the door with some pep in my step. I exit his apartment and pause in the hallway, taking a deep breath to calm down. I hate when men hit on me. I hate it when anyone touches me. The moment I feel the intent, I have a panic attack. Suddenly I feel like prey. \n\n\"You alright?\" Graham asks, and I jump a little. I completely forgot he was there. He didn't even need to touch me to startle me. \n\n\"I'm fine,\" I say, standing upright and sliding my hands down my shirt to straighten it out. \"Let's head back to the station.\" \n\n\u2013 \n\nMonday \u2013 March 9, 2026 \n\n-William Kaiser- \n\nTwenty minutes after I had to tell Chase he was too close to this case, I have to bring him along with me to the Mosque to visit the Imam. Regulations state one of us must be trained for these very delicate situations. I am not qualified, and the only person available who is, is Chase. \n\n\"Are you sure you're in the state of mind to work this with me?\" I ask Chase as I park in front of the mosque. It's in its own standalone structure with a golden dome on the roof with the crescent moon. The parking lot is mostly empty, so we are front row. \n\n\"No,\" Chase admits, unbuckling the seat belt and exited the car before I do. \"What kind of questions are you asking? \n\n\"How often Omar visited. If anyone in the community hated him. The usual stuff,\" I say. \n\n\"Let me do the talking,\" Chase says, and I shut my car door. \n\n\"How do you know the Imam?\" I ask. \n\n\"I studied Middle-Eastern policy in college. I spent the summer of my sophomore year in Cairo and Beirut. Omar I met last year when they did a fundraiser for a trip to Mecca. That's how I met Imam Masri as well,\" Chase explains, and I lock the car and walk around. \n\n\"Fine, you lead the conversation,\" I say, and he nods, then I look at his holster which is empty. \"Where's your sidearm?\" \n\n\"Do not bring a gun into the Mosque,\" Chase says, and I look through the window. \"It's in the glove compartment.\" \n\n\"I'm not leaving me gun out here,\" I say. \n\n\"They won't let in you, you don't have a warrant to force them, and good luck getting a judge to sign that,\" Chase says. I groan, knowing he is right, before I open the car and conceal my sidearm in the center console. \n\n\"Technically, we aren't supposed to do this,\" I say. \n\n\"I know,\" Chase says, and starts off toward the Mosque first, and I follow after locking the car again. \"Handshake with the right hand, left hand over heart. As-Salaamu alaykum.\" \n\n\"Ass salmon alazam?\" I intentionally over butcher. \n\n\"As-Salaamu alaykum,\" Chase says slower. \"Peace be upon you. Say it a few times.\" I say it a few times until Chase is satisfied before we finish walking to the Mosque and enter the front door. \n\n\"Shoes off,\" Chase says once we enter, and we see a man walk from an adjacent hall in front of us. \"Could you please let the Imam know Chase Kramner is here to speak with him?\" The man nods to Chase and leaves the way he came. Chase removes his shoes and socks, and I follow his lead, rolling up my pant legs a little. \n\n\"Chase,\" I hear a voice say, and see an older gentleman walking toward the entrance of the mosque. \n\nImam Hamza Masri is tall and thin, walking with a small lean from his advance age. He was likely very handsome in his youth. On his head is a white hat that appeared knitted, covering his brown hair. From ear to ear his facial hair is curly and brown, ending with a fist length beard. For an older man it hasn't started to gray, or he simply dyes it. Over his body is a thin white ankle length sleeved dress and over that is a brown cloak of similar length. He is barefoot. \n\n\"As-Salaamu alaykum,\" Chase says, placing his left hand on his chest and shaking his hand. \"Hadha Sadiqi, William Kaiser.\" \n\n\"I promise you my English is better than your Arabic,\" Hamza says and shakes my hand next. He certainly has an accent, but it is not making him difficult to understand. \"Pleasure to meet you William.\" \n\n\"You know I love the opportunity to practice,\" Chase says, and Hamza smiles at him. \n\n\"For the sake of brevity, I'd like to discuss why you are here and not stand on ceremony. I'd like to, what's the expression? 'Get to the point'?\" Hamza asks. \n\n\"Very well,\" Chase says, and the Imam directs us into the structure to talk privately. \n\nHamza's office is on the other side of the mosque, so we walk through an open room where a few people have mats on the ground and are all facing the same way. I am about to walk in front of him before Chase grabs my arm to stop me. \n\n\"Don't walk in front of someone at prayer,\" He whispers to me, and I nod before continuing to follow the Imam to his office. It is very quant with a desk in the corner and in the opposite corner is a red carpet with cushions and pillows for sitting. He directs us to the carpet, and I continue to follow Chase's example. \n\n\"Tea, coffee?\" Hamza asks and I start to refuse before Chase says he would enjoy some tea. Our victim was poisoned, what are you doing? \"William?\" ",
        "\"Tea,\" I say, but only because Chase has. \n\nThe tea was already set, and he pours it himself into small, clear glasses. He hands one to me, and then Chase, before pouring his own and situating himself for the conversation. \n\n\"William, usually in these kinds of meetings, we would discuss everything but the topic at hand. We talk politics, we talk family, we talk the weather, then speak about the true point of the discussion. However, today the conversation is far too important. A member of the Ummah is dead, so I will not, what is the expression? 'Beat around the bush'?\" Hamza asks. \n\n\"Thank you for being accommodating,\" I say, and Chase nods to agree. \"What was Omar Asfour's relationship with the Mosque?\" \n\n\"Believing, but practical. He was here for Jumu'ah and was active in community outreach,\" Hamza says, and my face must have asked the question. \"Jumu'ah is Friday prayer. You likely know this as Sunday prayer or the sabbath. Islam's sabbath is Friday.\" \n\n\"Was Omar at prayer this last Friday?\" I ask. \n\n\"He was,\" Hamza says, and I look at Chase. I just remembered he was going to direct questions, but he hasn't said anything to me about it yet. I think he's trusting me to do this, until he doesn't. \n\n\"Did Laurel ever attend prayer?\" I ask, and Hamza shakes his head. \n\n\"No. She's been to the mosque, many times, and is very welcome. But she quietly observes prayer,\" Hamza says, and I write that down on my notebook. \n\n\"Is there anyone in the mosque you can think of who had a grudge with Omar?\" I ask, and Hamza takes a sip of his tea. \n\n\"No. Omar was near universally liked. He led our fundraiser for the community's pilgrimage to Mecca last year. He attended it himself. It's not to say this mosque doesn't received threats, because we certainly do. Those are more directed to me however.\" \n\n\"What kind of threats? Anti-Islamic groups?\" I ask. \n\n\"We get our fair share of those, but we get more threats from other Muslims. You need to understand, we are a relatively moderate congregation. Extremists don't like us any more than they'd like you. I had to a warn the authorities of a man showing signs of radicalization to the FBI last year. He planned to shoot a Synagogue,\" Hamza explains. \n\n\"Was he a lone wolf or acting with a group?\" I ask. \n\n\"He acted alone, as far as I know,\" Hamza says, and I write that down. \"His name was Ishmail Ali, he's still in custody.\" \n\n\"How was he radicalized?\" \n\n\"Internet chat forums.\" \n\n\"Is there any chance the people he met are working to harm the people in your mosque?\" I ask. \n\n\"I suppose that's possible, but it's unlikely. The forum itself is scattershot. It wasn't directing actions toward specific groups, as much as hoping to inspire actions against a few broad targets.\" \n\n\"I understand. In the morning on Friday during prayer, is their food or drink served?\" I ask. \n\n\"After prayer, some people stay for breakfast and tea. Omar was not one of them, he had already eaten and said he wasn't feeling well,\" Hamza replies. \n\nOmar was already not feeling well early in the morning. When was he poisoned? Was it even earlier than we assume? He could have been poisoned on Thursday, but that would mean it took over two full days to kill him. I don't know much about poison, but I kind of doubt it. \n\n\"Omar already wasn't feeling well on Friday morning?\" I ask, and he nods. \n\n\"That is correct. How did he die, if I may ask?\" Hamza asks, and I look at Chase who shakes his head. \n\n\"This is still an ongoing investigation I'm afraid,\" I say, and Hamza leans forward a little. \n\n\"I see,\" Hamza says, thinking for a moment. \"No one else in the mosque has been sick to my knowledge.\" The mosque isn't the source of the poison it appears. I will still check with clinics and hospitals for any symptoms similar to Omar's. Besides that, I really want to see Laurel's finances. I hope that warrant is back by the time I am. \n\n\"Is there anything else you think may be important? Any recent visitors to the mosque?\" I ask, and Hamza hesitates his response a few seconds longer than he has been answering. It could be because he's trying to think, but his face shows reluctance, not like he is trying to recall information. \n\n\"Not that I can think of,\" Hamza says, and I think about repeating the question, but decided against it. We finish our tea before he begins talking with words to end a conversation. The Imam is gracious as he sees us out after we put our shoes back on. \n\nWe walk to the car together, Chase taking his seat after I unlock it. I sit a moment later and start the car. I then replace my sidearm I placed in the center console to my holster. \n\n\"Thanks for letting me run that conversation,\" I say, and Chase holstering his own gun from the glove compartment. \n\n\"I figured I wait until you said something completely wrong. You did fine. Hamza is very practical, he wouldn't take anything that was a mistake as an insult,\" Chase explains. \"Besides, this is your case, not mine. I'm just here to back you up.\" \n\n\"Thanks,\" I say, and put the car in gear and drive back to the precinct. \n\n\u2013 \n\nMidge is already back from talking with the club owner Andre Reed and is already going over Laurel's finances when I arrive with Chase in tow. Midge opens her mouth to talk before she sees Chase and looks to me to see if we can talk about this in front of him. \n\n\"It's fine, he's been put on as a cultural advisor,\" I say, sitting at my desk while Chase sits in a free chair. \"Time to compare notes. Club owner give you anything good?\" \n\n\"Two leads worth looking into. Joey Kristof, a rival comedian who was Laurel's ex,\" Midge says, and I look at Chase who nods and says he's familiar with him. \"And a guy Laurel had a protective order against named Ian Tyler.\" \n\n\"She had a restraining order on someone?\" I ask. \n\n\"Restraining order or order of protection? There is a difference,\" Chase asks, since in the last five seconds we've used both terms interchangeably. \n\n\"Restraining order,\" Midge says after reading the document on her desk again. \"It's already expired, about two months ago and it looks like Laurel hasn't petitioned for an extension. It was for stalking her. The guy wrote a letter to the judge in apology, explaining it was a misunderstanding. Fully cooperated with the order, even turning in his legal firearm which was returned to him once the order expired. Electrical engineer for the city's department of energy, fixes utility poles. No priors.\" \n\n\"Anything with Laurel's finances?\" I ask and look for Chase's reaction. He's confident there is nothing there. \n\n\"Her and Omar joined accounts when they got married four months ago. He paid off some debt she had, nothing major, just student loans. Omar inherited some serious money from his father's estate a few years ago,\" Midge says, and Chase is curious. \n\n\"Serious how?\" Chase asks. \n\n\"Omar was worth upwards to twenty million,\" Midge says, and Chase walks across the room to look at her files. \"I was shocked as well, especially for someone who lived so frugally.\" \n\n\"What the hell?\" Chase asks, looking at the records. \n\n\"You didn't know that, did you?\" I ask, and Chase shakes his head. \"When they got married, was Laurel put as the sole inheritor of his estate?\" I ask, and Midge nods. \n\n\"Doesn't mean anything,\" Chase says and looks at me. \"That's the legal default regardless. I doubt she even knew he was worth that much before they got married.\" \n\n\"It's not nothing Chase,\" I say, and he wants to say something, but doesn't. \n\n\"What about Joey Kristof?\" Chase asks. \n\n\"Out of town, and has been for several weeks,\" Midge confirms. \n\n\"What did his father do to leave him that kind of money?\" I ask, trying to get back to the finances. \n\n\"It's in a bunch of accounts, but it looks like oil money from Saudi Arabia,\" Midge says, and pulls up a few more items. \"Omar immigrated to the United States with his parents in two thousand three when he was just three years old. Both his parents and he became naturalized by twenty ten. They came here through asylum is all I've managed to find. I've sent some requests to the State Department, but I got a feeling FISA is going to be a real pain in the ass here.\" \n\n\"Probably right,\" Chase says and walks back to his chair. \"Have you guys confirmed the poison yet?\" \n\n\"Waiting for the ME. He's got good theory, but he needs to confirm it still,\" I reply. \n\n\"Next step?\" Midge asks. \n\n\"You got an address for Ian Tyler?\" I ask, and Midge confirms that we do. \"Let's pay him a visit. You coming?\" I ask Chase who shakes his head. \n\n\"Islamic cultural advisor is my left right boundary,\" Chase says, and I can tell he is restraining himself from getting more involved. \n\n\"Midge, let's go,\" I say, Midge following me to the elevator while Chase took the stairs to the next floor. \n\n\u2013 \n\nMonday \u2013 March 9, 2026 \n\n-Midge Appletree- \n\nIan Tyler lives toward the center of the city, and we typically do not like ambushing people when they are at work if they're not a suspect yet. It tends to create needless work conflicts with coworkers wondering why police are talking to you. We called his last phone of record and left a voice mail which said his name, so we knew it was likely still a good number. We stop by the city's Department of Energy who tells us he is currently fixing a tower that was hit by a car earlier in the day. We reroute to the crash site which takes us nearly an additional thirty minutes to drive to. When we finally arrive, we're toward the edge of the city right near an overpass without much traffic, but cones are set up to close the lane one hundred meters in advance. \n\nWill pulls up to a utility van pulled over on the side of the road. A few feet in front of the van in a powerline pole, on top of which a man is conducting maintenance. There is shattered glass still on the road from the crash earlier, and some discarded plastic pieces from bumpers brushed to the curb. There is orange paint on the pole, likely from the car that had collided into it, which was reported as a single vehicle accident. \n\n\"You Mr. Tyler!\" Will shouts up to the man on the tower. He looks down, lifting the rim of the helmet a little. \n\n\"Who's asking?!\" He shouts down. Will pulls out his shield and holds it up. \n\n\"Come on down, we need to talk to you!\" Will shouts, and the man starts scaling down the pole, and reaches the bottom over a minute later. He has spiked boots to climb, a one-piece uniform like a mechanic, and puts his helmet under his arm. \n\nIan Tyler appears late twenties with his hair styled in a high fade on the sides and cut short. Most of his body is obscured by his uniform, but he is tall and stocky, nearly six feet with a large neck and broad shoulders. He's an inch over Will, so he's nearly half a foot over me. \n\n\"Can I help you officers?\" Ian asks, almost annoyed we're bothering him. \n\n\"Perhaps. What do you know about a guy named Omar Asfour?\" Will asks, and I watch Ian's face. He knows the name at least. His eyebrows raised a little. \n\n\"I think he's a comedian,\" Ian replies. \n\n\"You think?\" Will asks, setting up a trap. \"His wife put a restraining order on you last year.\" \n\n\"Laurel Smith?\" Ian asks, and Will nods. \"Yeah, she did. Complete misunderstanding and I abided by all court instructions. I didn't know she was in a relationship let alone is married to that Omar guy.\" \n\n\"How do you know Omar?\" I ask. We're keeping the questions present tense to hide the fact he's deceased to see if he slips. \n\n\"I never said I know him,\" Ian says. Present tense. \"Laurel does comedy at a club downtown, and I went with a few friends from work a few times. Omar typically closes.\" \n\n\"Until you got banned?\" I ask. \n\n\"Because of Laurel. I had no issue with the club, so agreed to stop. Like I said, that whole thing is a misunderstanding.\" \n\n\"How?\" Will asks. \n\n\"Laurel and I talked for moment at the club the first night. I thought she was hot, took my shot, got shot down. Fine, happens all the time. A few months later, I run into her at the grocery store. Next day, the DMV. Soon after that her block loses power and I have to fix the pole, which was parallel with her bedroom window,\" Ian explains. \"A series of coincidences.\" \n\nSomething about this guy is just, off. Something smug about the way he talks in general. It's a real shame too, because even as a lesbian I can admit he's a handsome guy. I don't feel comfortable being this close to this man. It's the aura of entitlement he exudes that makes me the most nervous. Like he just takes what he wants. \n\n\"That's a lot of coincidences,\" Will says. \n\n\"What do you want from me? I stayed away, I turned in my gun, and the order has expired,\" Ian says, and he's right. He did everything he was supposed to do. \"Why are you even talking to me?\" \n\n\"Because Omar Asfour was murdered,\" I say, and Ian doesn't even flinch. No shock, surprise, or even 'oh shit'. Nothing. \n\n\"Sorry to hear that,\" Ian says with no emotion. \"Nothing to do with me.\" \n\n\"Where were you Thursday night and Friday morning?\" Will asks. \n\n\"Thursday night I was updating a utility pole route for seven hours. Friday I was off, so spent it sleeping,\" he says. \n\n\"You got something or someone to confirm that?\" I ask. \n\n\"Work logs from last night, from four to eleven. I live alone, but I slept in until noon before going to the gym,\" Ian says, and we write those down. I don't get a good vibe from this guy, but I got nothing to assume anything besides my own instincts. \n\n\"Thank you for your time,\" Will says and hands him a card. \"Remember anything, let us know.\" \n\n\"Sure,\" Ian says, and immediately starts getting back to work without even saying 'goodbye' or 'have a nice day'. \n\nWill and I return to the car and will now have to fight traffic to get back to the precinct. On the way we discuss where we are with the case right now. \n\n\"Suspects?\" Will asks. \n\n\"I'm leading with Laurel right now from lack of anything concrete. Going with the statistics,\" I say, as I'm sure he has that same opinion right now. \n\n\"Agreed. Feelings on Tyler?\" Will asks. \n\n\"Call it women's intuition. That guy was giving me a bad vibe,\" I say, and I see Will is trying to think about where I was getting that from. \n\n\"He just seemed frustrated he had to hear about something that's already resolved,\" Will says. \n\n\"He had no reaction at all to hearing Omar was dead,\" I point out. \n\n\"He didn't know him. What reaction are you looking for exactly?\" He asks. Will seems ready to rule him out entirely, but I cannot shake off that vibe. He just radiated negativity to me. \n\n\"I don't know, something more than nothing I guess,\" I say, not sure how to explain what I expected or how I felt. \n\n\"Laurel and he are married for a heartbeat, and he drops dead, leaving her as the sole inheritor of that kind of money,\" Will says. \n\n\"Spouses tend to inherit money. If my wife died, you'd see me receive an insurance policy even the next day because that's the first thing we did after getting married. That's what married people tend to do,\" I say, trying to explain having an insurance policy is ubiquitous. \n\n\"Who's a more credible suspect right now?\" Will asks, and I have no good alternative. At least not one that isn't instinct. \n\n\"Just saying, that guy gives me the heebie-jeebies,\" I say one last time before we talk about something that isn't work. \n\n\u2013 \n\nOverall, this has been a very stressful day. I puke on my first real case in Homicide, insult my boss' old partner who is a condescending douche, and accidently ask a spouse if her murdered husband went to a terrorist mosque. Not a great day. After a day like this, I need a drink. \n\nI do not like drinking alone, so I send two texts after I leave work; one to Gianna, and the other to my friend Shane. \n\nShane and I met eight years ago at a softball game between the police and fire departments. The firemen crushed us, but I got a friend out of the experience. We had a great relationship from the start. I didn't want anything from him, and he was married and deeply in love, so he didn't want anything from me. I loved his wife Sierra, who sadly died in a car crash roughly a year after we met. Shane was an emotional wreck afterwards, but he got through the worst of it, and years later the pain is still there, but he's trying to move on. \n\nThe first time I met him, I was playing catcher for the police when he came up to bat. My first impression of him was that I could identify him as a fireman even if he wasn't wearing a shirt saying so. Towering over me at six foot three, massive shoulders, thick biceps and chest protruding from his shirt more than mine. He wore shorts to play softball, shorts that cut off halfway down his sculpted thighs. His clean-shaven face shows off his perfectly cleft chin, and immaculately carved nose. \n\nI motioned the pitcher to walk him, because I have a feeling that ball is gone if he pitches something in the strike zone. The first two pitches are intentional balls to walk him. Shane chuckles and asked, \"Scared?\" \n\n\"I got a feeling I don't want you hitting,\" I said, and he chuckled again. \n\n\"I'm actually not that good,\" he said. \n\n\"I don't believe you,\" I said, and the third pitch is outside again, and I threw it back. The fourth pitch for the walk comes in, and he swung to force the strike. \"What the hell.\" \n\n\"Gimme something I can hit,\" he said, and the pitch was outside again, and he swung, again. \n\nI motion for a real pitch this time to see what happens. It was straight and Shane hits the ball so hard we all heard a car alarm going off in the parking lot. \n\n\"Thanks,\" he said and starts rounding the bases. \n\nI found out a few minutes later he hit my car. He promised to pay for it, and everyone went out for goodwill drinks after the game. \n\nYou'd think being short haired, flat chested, and clearly a lesbian would stop men from hitting on me. You would be very wrong. Sometimes it's even worse. Men who want to win a bet or make a decent woman out of me. Fuck me straight or some shit. \n\nOne of the firemen starts hitting on me at the bar, and I have my usual panic of wanting to get away as fast as possible. He asked again, and I had to hold back my freak out. Just before it's about to spill over into me straight up losing it, Shane wedged his way between the two of us, and the guy backed off. For a second, I got more nervous because Shane is such a big man, but he alleviates my anxiety immediately. \n\n\"If he gives trouble again, just let me know. He's a good guy, but he's not good at reading social cues,\" Shane said and left me alone. \n\n\"What?\" I asked, and Shane turned around. \n\n\"You don't like men hitting on you,\" Shane said, and I looked at him, utterly stunned he saw that from across the room. \"Your shoulders and arms flex inward, your entire body shifts toward the nearest exit, and you start reaching for the weapon you usually have on you, and panic when you realize you're not armed.\" I didn't even realize I was doing that, but I knew he was right. \n\n\"You can see that from across the room?\" I asked, and he nodded before slowly walking back and leaning on the bar. \n\n\"I can,\" he claimed. \n\n\"What can you see up close?\" I asked. I'm curious. \n\n\"You try to make your hair look like indifference, but it's salon quality. You have a military background. You've never worn a bra. You wear girl briefs because you like the way they hug your butt...\" he said after roughly ten seconds of observation. \n\n\"...Stop,\" I interrupted while laughing. \"Is that your superpower?\" \n\n\"What did I get right?\" He asked, and I cringe a little. \"I was a batting a hundred, wasn't I?\" \n\n\"Kind of creepy,\" I said, but I wasn't creeped out. I didn't get any of those vibes from him. He was funny and interesting. And married. Very married. \n\n\"You killed that game,\" I heard a voice say and turned to see a woman. She was eyeing me the way a girl does when she catches her man talking to another woman. She did the math, concluded lesbian, and ceased being concerned. \"Hi, I'm Sierra.\" ",
        "\"Midge,\" I said, and realized they were married when they kissed, and saw matching gold rings. \"He also destroyed my windshield.\" \n\n\"That was your car? I'm so sorry, I promise we'll pay for that,\" she said, and I laughed. \n\n\"It's fine, I got insurance,\" I said. \n\n\"Let's at least go half on the deductible,\" Sierra said. I relented and accepted the offer when I determined they wouldn't stop until I let them. \n\nSierra became my best friend after that. The person I went shopping with. We had lunch together during my breaks at work or when I had a minute. She was the only person I felt comfortable sharing all my secrets with. All the things I had held in for so long, expecting to never tell anyone. I was a woman she could trust around her husband, because, obviously. Even if I wasn't a lesbian, I'm sure she still would have. I had a different level of trust with Shane and Sierra than I ever had with anyone. They were two people I let touch me, even if only a hug. \n\nI remember vividly when we met for lunch to tell me after years of trying, they were finally expecting their first baby. I was so incredibly happy for them. They wanted me to be the god mother, and I happily accepted. If it was a girl, they wanted to name her Midge, and I begged them not to do that to a little girl. That ended up not mattering, because four months later her car was flipped by a drunk driver. \n\nShane was devasted, and I didn't know how to help him. This wasn't a tragedy I was ready for either. I came to the house they had just purchased because they were expecting. A home he had bought for the family he no longer had. When I entered the house after knocking, I saw him on the couch with his gun to his temple. Sprinting across the room, I ripped it from his hand and saw it was empty, but holy fuck did it scare the shit out of me. \n\n\"What the fuck are you doing?\" I asked him. He started crying and his body slumped toward his feet. \"Look at me.\" He didn't reply and I screamed at him. \"Look at me!\" \n\nShane slowly looked up at me and grabbed my hand. Instinctually I wanted to snatch my hand away, but I suppressed my impulse of not being touched. I took a deep breath, and hugged him, him crying into my chest. Such a strong, powerful man reduced to this. It was heartbreaking. \n\n\"I'm going to get you help, okay?\" I ask him, and he just cries. \"I miss her too. God do I miss her. You are going to get through this. I will not lose you too.\" \n\nShane got the help he needed. I didn't lose my other best friend. It's been almost seven years since Sierra died, and Shane has done his best to move on. As far as someone who lost the love of his life could. He's never been in a relationship longer than a month. \n\nSeven years later I still have my drinking buddy after a shitty day. \n\nI arrive at the bar first. I am one shot and half a beer in before he taps the bar to get my attention without touching me. He's already changed into jeans and V-neck shirt, and I can see the chain that is holding his wedding band around his neck. Once I know it's him, I can hug him without getting scared. He sits next to me, orders a bottle of beer, and takes a swig. \n\n\"Shitty day?\" Shane asks. \n\n\"Fucking Monday's,\" I say and take a good gulp of my bottle. \n\n\"What made it a Monday?\" Shane asks. \"Besides it being Monday of course.\" \n\nWhere to start? I tell him about my day, especially the puking part. That fucking smell is still in my nostrils. His day was responding to four people stuck in an elevator that malfunctioned. They had been in there for six hours by the time Shane pulled them out through the escape hatch. The smell of BO was overpowering, and we both get a laugh out of the stench of our respective workdays. \n\n\"You still seeing Mandy?\" I ask, and he shakes his head. \"You ever gonna get one to last?\" \n\n\"She wanted something casual,\" Shane says, finishes his second, then asks for water next. He's been doing that for years. Having a water every two drinks. I am not so responsible with my alcohol. \n\nI look at the time on my phone and see its nearly eleven. I had sent a text to Gianna saying I'd be home at about eleven, and it's a twenty-minute drive. \n\n\"Oh, fuck, I need to go,\" I say, stepping off the stool for the first time in hours and nearly wobble to the floor, but manage to redirect my weight back toward the bar. \n\n\"You're not driving,\" he says, him having only those two beers with a fried appetizer. He can't resist the cheese sticks. \"Give me your keys.\" \n\n\"Here,\" I say, reaching them toward him, then pulling them back at the last second. \"Nope.\" \n\n\"I'm serious,\" Shane says, and I pull away again, and start walking to the door. \"Midge,\" he says, and realizes he needs to pay. We know the bartender, so he just tosses a couple bills and then chases after me. \"Give me the keys.\" \n\nI'm at my car now, trying the door, but Shane reaches for the keys. I twirl around and lean against the car, holding them straight up above my head. He easily takes them from me, because not like I was really trying to keep them away. \n\n\"I'm taking you home,\" he says, leaning down to look at me and rattle my keys. When I don't start following, he picks me and flings me over his shoulder like I'm a little girl. I would be screaming if this was anyone but him. He puts me down on the passenger side of his truck a few spaces from my car and opens the door for me. \"Get in.\" \n\n\"Fine dad,\" I say, sticking my tongue at him before climbing in the truck. I clip in my seat belt and lean back, feeling the world spin from him carrying me and the effort getting into the truck. \"Damn I'm dizzy.\" \n\n\"Please don't puke in my truck,\" Shane says, and I giggle. \n\n\"I already did that today,\" I say, and play with the radio as he starts driving. Thankfully we like the same music, so he isn't trying to stop me. We bullshit most of the drive and are laughing when he pulls in front of my house which still has the porch light on. I look at the clock on the radio and see it's eleven thirty. \n\n\"Let me walk you in,\" Shane says, unclipping his seat belt and exiting the truck. I protest, but I'm glad he did after I forgot how big his truck is and would have faceplanted to the asphalt if he didn't catch me. \"Come on.\" \n\n\"Carry me, I'm a princess,\" I drunkenly request. He plays along by scooping me up bridal style and carrying across the threshold. \n\n\"Your home highness,\" he says, lowing me down to my feet at my door, and then handing me my keys. \n\n\"Thank you,\" I say and lean against the wall next to my door. \"We're going to have a really cute baby,\" I say as the door opens from the inside. \n\n\"Hey Gianna,\" Shane says, and she smiles with a small wave. \n\n\"Hey Shane, I'll take it from here.\" \n\n\"Have a good night,\" he says and walks to his truck with his hands in his pockets. Gianna leads me inside and puts me on the couch, and I lean in and kiss her deeply, her returning the kiss and smiling. \n\n\"What's the rule?\" Gianna asks. \n\n\"I'm not that drunk,\" I say. \n\n\"Really, you just said you were having a baby with Shane,\" she says, and I laugh and fall onto the couch. \n\n\"Meaning to tell you about that,\" I say, and Gianna sighs. \n\n\"Now you two are having sex?\" She asks, but she isn't serious, and I laugh a little. \"Midge, I don't like it when you drink this late. Or at all for that matter. You can't regulate it. What's the rule? \n\n\"Drunk Midge sleeps on the couch,\" I slur. \n\n\"Yes, she does,\" Gianna says, pulling the blanket off the back of the couch and spreading it over me. \"Love you, see you in a few hours.\" She kisses my head as I curl up and close my eyes. \n\n\u2013 \n\nTuesday \u2013 March 10, 2026 \n\n-William Kaiser- \n\nI wake up to the sound of a blow dryer from the bathroom turning on. I'm flat on my stomach, so look over my shoulder to see Abigail brushing her hair while the dryer is doing its thing. She is in a towel tightened at her breasts and tucked into her cleavage. Her shoulder length is dry, so she clicks it off as I commit to waking up. \n\nIt's five thirty when roll out of bed, and there isn't even a hint of morning from the blinds that face the sunrise. \n\n\"Morning,\" Abigail says as walk toward the bathroom. I kiss her on my way to the toilet and take a morning piss. This is where we are in our relationship. This is just normal. \n\nI sleep in only boxers, so undressing is easy. I start the water before stepping into the tub a few second later. I don't need a full shower right now, so I just rinse and step out once complete. There is a towel on a hook next to the tub that I grab to dry off with. \n\n\"What's the day looking like?\" Abigail asks from the main bedroom as she is getting dressed. \n\n\"Active case right now. Day two, still running it,\" I say, and step to the mirror to trim my beard. I look at the belly fat I can't seem to get off as the trimmer buzzes around my face. \n\n\"How's the newbie?\" Abigail asks once I turn off the trimmer. \n\n\"Rough, but more competent than not,\" I say and step out of the bathroom to get dressed. \n\n\"What does rough entail?\" Abigail asks. \n\n\"Puking at the ME, and just a few ignorant questions. Nothing I couldn't salvage,\" I say and drop the towel. I think I'll go with khakis and the long sleeve today, no jacket. \n\n\"Did the butler do it?\" Abigail teases. \n\n\"No, but the wife probably did,\" I say and sit down to put on my socks. \"Guy drops dead four months after getting married. Insurance policy, and the guy was worth a lot of money.\" \n\n\"It almost never is that simple,\" Abigail says. \n\n\"I think it is usually that simple. Occam's Razor,\" I say, finishing up the socks and standing up. \n\n\"Just keep an open mind,\" Abigail says. \n\n\"I'm still going to do my job, if there's no evidence then I drop it,\" I say and start working the knot of my tie. \"What's your day?\" \n\n\"Working a sensitive case with Lieutenant Eastland from SI,\" Abigail replies, and I am intrigued. \"I mean it when I say sensitive, don't ask.\" \n\n\"I know,\" I say, finish the tie, and besides shoes I am dressed. \"Is Helena okay with picking up Ursula after school?\" \n\n\"You'd be amazed what she'd do for fifty dollars,\" Abigail says, then realized her inuendo a moment later. \"Yikes, that sounded bad.\" \n\n\"No comment,\" I say, and she tosses a throw pillow across the room at me. \"Coffee?\" I say as I leave the room. \n\n\"Please,\" she replies when I'm in the hall. I walk past Helena's room where she is asleep, but I can hear the faint sound of her music still playing. In the kitchen I dump the grounds from yesterday, replace the filter, add fresh coffee grounds, and then fill the pot with water after rinsing it. I pour the water into the reservoir and start the pot, a red light illuminating on the side of the pot. \n\nI open a cabinet and see plates so open another and see spices. There is a good chance I'll be doing this for the next few weeks. Always happens when I move, and I no longer have any idea where the coffee cups are. Two weeks ago, Abigail and I moved in together. Most of my stuff is in storage. \n\nAbigail arrives and opens the cabinet with the coffee cups, which is directly above the coffee pot. That makes sense. \n\n\"You'll figure it out,\" she says, and puts two to-go mugs on the counter. \n\n\u2013 \n\nTuesday \u2013 March 10, 2026 \n\n-Midge Appletree- \n\nI hear cartoons on the television before I open my eyes. My eyes flicker open, and I see flashing colors on the screen. When my vision starts to refocus, I see a bottle of aspirin and a glass of water on the coffee table. Before I reach for the bottle, I feel something at my feet and my knees involuntarily coil toward my chest. \n\n\"Sorry M,\" I hear Wesley say from the other end of the couch with a bowl of cereal on his lap. Once I know who it is, I sit up and rub his hair before kissing his head. \n\n\"What time is it?\" I ask, then look over my shoulder and see it's nearly seven. Looks like I won't be getting a shower. \"I need to get ready for work, see you in a minute.\" \n\nI take the aspirin to preempt the headache and wobble up the stairs. I walk straight down the hall to the master bedroom where Gianna is tying her red hair behind her head. She doesn't even address me when I enter and strip off my clothes from yesterday. \n\n\"Do you need to do this every time I drink?\" I ask, Gianna continuing to ignore me. \"G?\" \n\n\"What did you mean last night?\" Gianna asks, finishing tying her hair and letting the tail drop to her back. \"You were going to have a cute baby with Shane?\" \n\n\"I was drunk,\" I say after too long of a hesitation as I was sliding off my briefs. I wipe away moister before putting on a new pair. \n\n\"I've seen you worse, don't avoid the question,\" Gianna says, putting her hands on her hips. Like mother like daughter. \n\n\"What do you think I mean?\" I ask, and she puts her hand out in front of her. \n\n\"Stop. Stop with that bullshit of a deflection, and answer the question,\" Gianna says, now crossing her arms over her chest. When I don't have a response after putting on a new pair of pants and applying deodorant she asks, \"Okay, what have you been meaning to tell me about?\" \n\n\"About what?\" \n\n\"About you and Shane having a cute baby. What have you been meaning to tell me about? You come back at least twice a week, drunk, with Shane. What have you been meaning to tell me?\" \n\n\"You think I'm fucking Shane?\" I ask bluntly. \n\n\"You tell me,\" she replies. \n\n\"Jesus fucking Christ,\" I say, pulling on an undershirt while looking for a blouse to put on. \"I don't even like being touched. I get anxiety panic attacks when men hit on me.\" \n\n\"Unless it's Shane carrying you newlywed style up the porch,\" Gianna shots back, and I stop at the first button to face her. \"You ever going to tell me why you don't like being touched?\" \n\n\"I've told you. I've always been that way...\" \n\n\"...bullshit,\" Gianna interrupts, the first time in this conversation her face looks angry. \"Shane knows more about you than I do. I'm your wife.\" \n\n\"I'm not keeping anything from you...\" \n\n\"...then answer the fucking question!\" Gianna shouts, and I sigh, turn away and finish buttoning my blouse. \n\n\"I'm going to be late,\" I say and walk out of the room. To my surprise she didn't shout after me. I walk down the stairs and say bye to the kids and walk out the door after grabbing my car keys off the counter. I get all the way past the gate before I realize where my car is. \"Shit.\" Now it makes sense why she didn't shout. \n\nI walk back through the gate and arrive at the porch where the kids all walk out being led by Wendy to the bus stop. \n\n\"See you after school,\" I say, Wendy and Preston ducking my kiss, but Wesley accepts it. Gianna leans against the door, waving, then looking at me once they're out the gate. \n\n\"Remember how you got home?\" Gianna asks sarcastically and locks the door behind her. \"Station or bar?\" \n\n\"Considering my sidearm is in the glove compartment, bar,\" I reply, and she gestures for me to follow her. \n\n\"We're not done,\" Gianna says, and I stop at the gate as she walks through it. She turns around when she doesn't hear it clang shut. \n\n\"Midge?\" Gianna asks. \n\n\"I'm not sleeping with Shane,\" I say, and she blinks a few times. \"I need to get to work, but I'll tell you everything when I get home. Okay?\" \n\n\"Everything?\" Gianna asks, and I nod. She walks to me and kisses me softly on the lips. \"Promise?\" \n\n\"Yes,\" I reply, and she nods in acceptance. \n\n\"Okay,\" Gianna says, a small smile forming, before she turns to the car. \n\n\u2013 \n\nAfter Gianna drops me off at the bar, I take my car to the station where Will is already at work. He of course has a pot of coffee brewed, and I must have a face saying don't even talk to me before coffee because he doesn't. Once I sit down with my cup, he spins his chair to me and extends a file. \n\n\"State Department didn't give us too much shit,\" he says. It's Omar and his family's immigration record. \"Nothing good. They claimed asylum in O three, changed their surname when they did to Asfour. His father Ishmael Asfour's birth name was Ibrahim Mohammad Abdulaziz. Get this, he's related to the royal family of Saudi Arabia.\" \n\n\"Get the fuck out,\" I say while I scroll through the documents. \"How is that nothing good?\" \n\n\"It doesn't seem all that relevant. It's a distant branch family, there are literally thousands of Saudi Princes. Explains the money though,\" Will says, and I have a feeling he knew some of that because of our cultural advisor. \n\n\"We still leaning on the wife?\" I ask, and he nods, though it's not very committed. \"What's the game plan?\" \n\n\"I got a few warrants to search Omar and Laurel's apartment, but I don't really need it because she's consented to search. You get to take a field trip today. In about thirty minutes, head down to the crime lab, you're transporting some samples for testing to the University. They got a toxicologist who has agreed to confirm the poison.\" \n\n\"Can I work the warrants instead?\" I ask, and he thinks for a second. \"Rock paper scissors?\" \n\n\"Fine.\" \n\nGraham sneezes and it scares the shit out of me. When the hell did he get here? \n\nI turn back to Will. \"Rock, paper, scissors.\" His rock beats my scissors. \n\n\"At least I get to finish my coffee,\" I say, and take a sip. \n\n\u2013 \n\nI am elated to discover the lab tech transporting the sample with me is the Chief of the crime lab Jill Whitaker. She is a fucking legend. \n\nFirst perfect score on the written test portion of the detective's exam for the precinct. One of the highest number of arrests as a patrol officer, and still holds the record for a single year. First living female officer to get her badge retired. Survived a gruesome on duty injury and forced to retire but came back swinging as a CSI. She's married to the Chief of Police, who himself is another legend. On top of all of that, she's a working mom with two baby girls at home. \n\nFor forty, Jill is a dime. Shimmering free flowing brown hair to her shoulders. Minimal cosmetic routine because she doesn't need much improvement. She is incredibly curvy in all the right ways. Her precinct t-shirt with 'CSI' on the back tucked into her beige cargo pants is inspirationally sensible. \n\nJill and I leave the parking lot in her CSI lab van after securing a few samples from Omar's body to test our poison against at the university. She asks me what I want to listen to, and I have to relent after I reject the offer twice. Classic rock, and she would have picked that anyway. Rolling Stones starts playing. \n\n\"You just started in homicide, right?\" Jill asks, and I nod, then verbally confirm it. \"You start in property?\" \n\n\"Yeah,\" I reply, still a little giddy I'm talking to her. \"I really wanted homicide or violent crime, so I chomped at the bit for the first chance.\" \n\n\"Property is a good department. I had good leadership when I was there. You know Captain Queen?\" she asks, and I nod. \"He was my partner.\" \n\n\"No shit?\" I ask, and she nods. \"Wow. Queen doesn't look it, but he's the real deal.\" \n\n\"He was then too. He saved my life when I got shot,\" Jill says, and I look over at her. \n\n\"Was...uh...that the one that...\" I start. \n\n\"...ended my career?\" she asks, and I nod. \"Yeah, that's the one. Dark times.\" \n\n\"That really sucks,\" I say from lack of anything better to say. \n\n\"I just became something else. I still put dick bags in prison. That's close enough for me,\" Jill says, and I smile. I can't believe this woman is only four years older than me. \"How's Kaiser as your partner?\" \n\n\"Will? He's good. He spent the first week thinking I was a dude,\" I say, and Jill laughs. \n\n\"Really?\" Jill asks. \n\n\"He's not the first. Will thought I said my name was Mitch. Light didn't turn on until I walked into the women's restroom,\" I say, and her laughing makes me laugh. \"He's protective of his old partner Chase Kramner though. That caught me off guard. You ever met the guy?\" \n\n\"Chase? We're friends,\" she says, and that surprises me. \"We certainly didn't start that way.\" ",
        "\"What was your first meeting?\" I ask. \n\n\"Murder case, double homicide that looked like a murder suicide at first glance. I corrected him in front of your boss Leo, and he called me a cunt.\" \n\n\"No fucking way,\" I say. \n\n\"Oh yeah. Queen fucking destroyed him. Tore his ass down to size. He ended up catching my son shop lifting, and when I didn't know what to say, Chase talked to Jesse for me. I don't know what he said, but Jesse really opened up to us after that. Chase has a weird relationship with his family, so I think he related to him because of it. That's when I reevaluated Chase, and I'm glad I did.\" \n\n\"How bad was the cop he turned into IA?\" I ask. \n\n\"The worst I've ever seen in nearly twenty years. You see the person he turned in; you don't see the people he didn't. He could have burned Lieutenant Eastland, and Will, and pretty much the entire SI and Narcotics Departments. He didn't, because they are good cops, who made a mistake. Even he sees the difference.\" \n\nI need to look Chase differently next time I see him. Maybe the blue wall does need to come down from time to time. Cops looking after cops needs to draw a line in the sand on who is worth protecting. \n\n\"Does he always come off like a douche?\" I ask. \n\n\"He's definitely an acquired taste. If you get an opportunity to work with him, give him a chance. His instincts are on point, and he is a pit bull of an investigator. Say what you will about the guy, but when he's on a case he's in the office past midnight and sleeps three hours if he sleeps. Chase is abrasive, but he's dedicated.\" \n\n\"He's our cultural advisor on this one,\" I say, and Jill smiles. \n\n\"Is he keeping his distance and letting you two run it?\" Jill asks. \n\n\"He forgets what his job is a few times, but Will reminds him, and he accepts it,\" I say. Come to think of it, Chase has been keeping his distance considering how close he is to this. \"The murder victim was his friend.\" \n\n\"That's rough for a guy like Chase,\" Jill says, and I nod after a few seconds. I think about what it would feel like if I got sidelined if my family or Shane was hurt. I'd probably lose my shit. \n\n\"Married?\" Jill asks, and I nod. \"Wife?\" \n\n\"Gianna. I bagged a hot red head,\" I say, and she giggles. \n\n\"Kids?\" \n\n\"Three, from her last marriage,\" I say. \"You got three as well?\" \n\n\"Jesse, from Derek's ex, and our twins,\" Jill says, smiling just thinking about them. \n\n\"When did you know you wanted them?\" I ask, and she thinks. \n\n\"One day you don't, and the next you do. It was that fast. He had always said he was ready when I was, so I didn't even tell him I stopped my birth control. Gave him the ultrasound picture for his birthday,\" Jill says. That's awesome. \"You want your own?\" \n\n\"I have three...\" \n\n\"...You know what I mean. You love the shit out of them, but something is different when the baby is yours. I don't like to think I love the girls more than Jesse, but it's different. I carried them myself, and that maternal instinct is much more potent. I can't help it.\" \n\nI think about what I need to tell Gianna. This could be a good test run. \n\n\"So, I'm obviously gay,\" I say, and she laughs, \"But I have a friend, a guy, probably my best friend. If I wasn't gay, I'd probably be bouncing off his dick right now to be honest. I asked him, and he said yes, to be a sperm donor for me.\" \n\n\"Wow,\" Jill says, and I sigh. \"What was that?\" \n\n\"I haven't told my wife I want to do that yet,\" I say, and she looks at me, then back to the road. \"We already have three, and I'm just so worried she'll say no. I really want to do this. I know the mantra of my body my choice, but it doesn't feel like that. These things don't just affect me anymore.\" \n\n\"I can understand that. You should have this conversation with you wife though,\" Jill says, and I ensure her I was planning to. \n\n\u2013 \n\nJill pulls into the parking lot outside of the medical center of the University. In her left hand is the carrying case for the samples. Meeting us in the parking lot is the dean of the school, a Ms. Theodora Phillips dressed rather dapper in a pencil dress suit. \n\n\"We are always willing to aid authorities anyway our expertise can help. Right this way,\" Theodora says after brief introductions. \"She's in a lecture right now, but it should be over momentarily.\" \n\nWe sit across the hall from the door of the auditorium which opens a few minutes later. There are two exits, and students flood out from both sides and the hallway becomes alive in conversation and movement. Once it dies down, we enter the auditorium from the left side. There are ten rows, each one slightly higher than the last of ten seats with pull out desktops. Three students are finishing up some notes or putting their schoolwork away, and we wait until they finish before we start talking to the woman at the front of the hall. \n\n\"This is Dr. Madison Somerton,\" Theodora says to introduce us. \"Madison, this is Detective Appletree, and Jill Whitaker, crime scene investigator.\" \n\n\"Please, just Mads,\" she says as we all shake hands. \n\nA college professor with hair not much longer than mine and a tattoo of a scorpion on her neck. I see at the cuffs of her shirt she likely has arm sleeves as well. I am getting a lesbian aura from her, and I like it. She has similar curves to Jill, but she appears more athletic. \n\n\"Midge,\" I say, and she smiles at me, then points to the case Jill is carrying. \n\n\"That the sample?\" Mads asks, and Jill nods. \"We'll head to the lab, start some tests. Dr. Grant said he ruled out Ricin. There aren't many things that cause this, so it shouldn't take long.\" \n\n\"Let's get started,\" Jill says, and we follow Mads to the labs on the other side of the building. It looks like the crime lab, but when we enter the botany farm that changes entirely. Students and researchers and working on various plants in multiple rooms. Some areas smell very earthy, others very sweet. \n\nMads stops at a woman in a lab coat and asks, \"Reginia, could you get me a few Rosary Peas?\" \n\n\"Why?\" Regina asks. \n\n\"Testing a toxin for police,\" she says, and Regina turns to us. \n\n\"Abrin? Who the hell uses Abrin?\" Regina asks. \n\n\"No one, it's why it's kind of brilliant,\" Mads says, and Regina shrugs and says she'll be back shortly with the plant. \n\n\"What is Abrin exactly?\" I ask. \n\n\"It's a toxin that naturally occurs in the seed of a plant. The seed is colloquially known as the Rosary Pea,\" Mads says before we keep walking to another lab where she takes a seat at her desk and asks Jill to put the sample on the counter. \n\n\"Rare?\" I ask. \n\n\"Use as an intentional poison, exceedingly. Otherwise it's so common it's considered an invasive species,\" Mads says. A minute later Regina enters the room and drops off the plant Mads requested. Regina touches her shoulder and Mads smiles, and I get another lesbian feeling between the two of them. Regina leaves a moment later, the door shutting behind her. \n\nThe plant Regina dropped is a skinny brown stick with a single stem. Thin green leaves grow out from both sides parallel to each other. On the end of the stick is a brown husk with red seeds inside of it. Mads snaps on a pair of gloves and pulls off a few of the seeds, and I see they have a black back to them. Now I get why they are called Rosary Peas. They look very similar to prayer beads. \n\n\"I'm going to tell you right now, if you even think about touching these seeds, you will wear gloves,\" Mads says, and hands both Jill and I some gloves which we both take. \"Some people develop rashes on their skin, but the shell of the seed is not particularly toxic. Do not smell it, do not lick it. You think I wouldn't have to say that, but I have grad students who ate tide pods.\" \n\n\"What is so toxic about this seed?\" Jill asks, picking one up with a gloved hand. \n\n\"There is a protein dimer called Abrin inside of it. It's a lot like another toxin you might have actually heard of; Ricin,\" Mads explains. \n\n\"What's the difference?\" I ask. \n\n\"Abrin is way more toxic. There are a few cases of intentional poisonings, but the symptoms occur fast and can be treated if detected early. The big problem is that some people don't show symptoms up to three days later. By then, it's more often than not too late,\" Mads explains, then asks Jill to open the case and give her the sample. \n\nInside of the case are a few petri dishes and several vials filled with blood and other fluids. Mads takes the sample in a petri dish labeled 'liver tissue' and rolls over to a large microscope. She makes some adjustments and rolls back to the case and takes a blood sample and checks that next. \n\n\"Is there a lab report in that case?\" Mads asks, and Jill pulls the file from a pocket on the top half of the case. \"Thank you.\" Mads looks that over for a minute, looking for something specific. \"White blood cells are certainly elevated. Definite cellular decay in the liver from failure of protein synthesis.\" \n\nMads then looks over more of the file, rolls back to the case to retrieve the 'stomach tissue' sample then rolls back to the microscope. \n\n\"No intact or partial rosary pea was found in his stomach. These things don't digest easily so someone could eat it and it goes right through them. Maybe some upset stomach but it'll pass. Dr. Grant says it was likely cultivated into a powered form. The damage started in the intestinal tract then stomach, liver, spleen, etcetera,\" Mads says, but almost like she's thinking out loud. \n\nI look over at Jill who is looking around Mads work area. There are several framed pictures on a shelf which feature Mads with children. One is of a girl posing for what looks like a school picture. Another is of a young boy and girl with Santa for Christmas. One is with a man who has a thick mustache, likely in his early sixties. I'll assume that's grandpa. \n\n\"These your kids?\" Jill asks, and Mads looks over her shoulder to see what Jill is asking about. \n\n\"Yes. I have three,\" Mads says, then returns to her work. \n\n\"Me too. I have a stepson from my husband, and I had twin girls about six months ago,\" Jill says. \"What ages are yours?\" \n\n\"My oldest is nine, Maxine, we call her Max. Our son Monroe is almost six. My youngest daughter Reagan is fourteen months,\" Mads explains. \n\n\"What's your wife's name?\" I ask, and Mads slowly looks over at me, then laughs a little. My gaydar is spot on. \n\n\"Kourtney,\" she replies, and returns to the microscope. I knew it. \"He prefers going by his middle name, York.\" \n\n\"Wait what?\" I ask. \n\n\"My husband's name is York,\" Mads says, and I stand there frozen. \"I understand the assumption, but I went dick ten years ago.\" \n\n\"Went dick?\" I can't help but ask. \n\n\"It's exactly how it sounds. My husband and I moved here two years ago when I got offered a job. Regina who you just saw is the one who recommended me, and she's also my ex. My husband York runs a private medical practice downtown,\" Mads says, and points to a picture on the shelf I somehow ignored. Her husband and her oldest daughter are holding up medals from a 10K race. York looks incredibly fit and appears to be a doting and attentive father. \n\n\"You got any kids?\" Mads asks me. \n\n\"I have three as well. Not mine, they're from my wife's prior marriage,\" I reply. \n\nMads spins away from the samples and removes her gloves with an audible snap when it releases her fingers. She stands up then walks over to a waste bin, opening it with a pedal and tossing the gloves in. She then washes her hands in the sink. \n\n\"I'm going with Abrin as well,\" Mads says while drying her hands. \"Ricin and Abrin are very identical but activate entirely different types of antibodies. His blood work shows those antibodies, but I'll double check that work. I'll do a few more tests to see if I can determine how much he was given. It's one hundred percent Abrin, just a matter of how much.\" \n\nThat's all I need to know. Murder weapon confirmed. \n\n\"I need to forward these results and some samples to the CDC, but I should be able to get them to Dr. Grant this time tomorrow. If anything changes, I'll let you know,\" Mads says, and we all shake hands again and prepare to leave. \n\n\u2013 \n\nTuesday \u2013 March 10, 2026 \n\n-William Kaiser- \n\nCSI lab techs have gone through exhaustive work of taking samples of the food in Laurel's apartment and the drinking containers. Her trash is taken for examination, as is the bottles of water in the refrigerator, open or otherwise. I am looking for any indication of the cultivation of poison. \n\nThe apartment is clean and tidy with the faint smell of pine from a candle wax melter on a side table. Pictures on the wall of both Laurel and Omar, and their respective families. Some pictures are from what I'll assume is his trip to Saudi Arabia. The living room has a matching three cushion couch and chair facing a large flat screen television on a table with several drawers and a sound bar. To the left and right are large bookshelves top to bottom with movies and seasons of television shows. \n\nThere are two bedrooms, the spare room is just an office with a desk and computer. The walls have more pictures carrying the same theme as the living room. The master bedroom has a king-sized bed with end tables on both sides, and a long dresser with two columns of three rows of drawers. More pictures. \n\nAn hour into the search, I receive a text message from Midge. \n\n'Dr. Somerton at the University confirms Abrin poisoning.' She then sends me a picture of a plant and another with red and black seeds. \n\nI tuck my phone into my pocket and step outside of the apartment. I see Laurel leaning against the wall, waiting until she can get into her home again. She has been cooperative but looks irritated. \n\n\"What was Omar's Friday routine again?\" I ask. \n\nLaurel looks to me, and sighs. \"I already told you.\" \n\n\"Refresh my memory, it could help narrow the focus of what we're looking for,\" I say, and she exhales deeply. \n\n\"He gets up really early on Friday to go to the gym before prayer at the mosque,\" Laurel says, and I pull out my notebook again. \n\n\"Times?\" I ask. \n\n\"He was out the door at about five, back by six, then headed to the mosque for prayer at seven. He stayed for the second prayer at eight thirty then went home,\" Laurel explains, and I write those times down. \n\n\"Imam Masri said he didn't eat at the mosque,\" I say. \n\n\"He doesn't usually. He had a protein drink after his workout. He typically drank it on his way home,\" Laurel says. Every time she interchanges her tenses it's like a gut punch to her. Like part of her still can't accept it. \n\n\"What did he drink it in?\" I ask. \n\n\"One of those blender shake bottle things. You know, with the metallic balls,\" Laurel explains, and I nod. Then I have a thought. \n\n\"What protein mix does he use?\" I ask. \n\n\"Whey protein, I'm not sure on the brand he used. Vanilla flavor, I think,\" she replies. \"It has a detachable compartment on the bottom. I fill it for him the night before.\" Her tenses are starting to bother me. \n\n\"Where is his bottle?\" I ask. Laurel thinks for a moment, then shrugs. \n\n\"I don't know. Dishwasher maybe,\" she replies. \n\nI excuse myself and enter the apartment again. Cutting straight through, I go to the kitchen and pull open the dishwasher. There is no blender bottle, and I ask the techs if they found one in the shelves. They didn't find one in the kitchen, or the entire apartment. \n\n\"Where is this thing?\" I ask himself, then ask a tech in the bathroom. \"Have you guys found a gym bag?\" \n\n\"No, nothing like that,\" he replies. \n\n\"Who is downstairs with his car?\" I ask. \n\n\"Heath should be leading that search,\" the tech replies. \n\nI grab my radio and ask, \"Team two, get me Heath,\" I say, and wait for a reply. \n\n\"Heath here.\" \n\n\"Is there a gym bag in the car?\" I ask. \n\n\"Sure is. Smells like it's been here a few days,\" Heath replies. \n\n\"Is there a bottle in it? Protein mixer variety?\" I ask and wait a few seconds. \n\n\"Black bottle with a detachable bottom. Recently used, still smells like rotten vanilla,\" Heath says. \n\n\"Prioritize that bottle. I think it's the delivery method for the toxin,\" I say, and Heath lets me know he is labeling it a priority as he speaks. I walk into the office again, and one of the techs is taking pictures in drawers as he removes items. On the wall behind the desk is a picture with Omar in Saudi Arabia, posing with a man and a little girl. Hanging off a nail next to the picture, is a string of prayer beads. All the beads are red and black. \n\n\u2013 \n\nI get authorization to put surveillance on Laurel in the event she attempts to flee. In the meantime, I'm waiting for the techs to get back with information on the blender bottle and the rosary. While I wait, I'm looking over Laurel's movements going back the last six months. She took a business trip to Panama five months ago. The Rosary Pea can be found in Panama. \n\nThe moment I get word of anything conclusive on the blender bottle, I'm making the arrest. \n\nMy desk phone rings. \"Kaiser, homicide.\" \n\n\"Detective, there is a mister Masri here who wishes to speak with you,\" the officer at the reception desk says. \"Do you want someone to escort him up?\" \n\n\"Don't worry about it, I'll be right down,\" I say and hang up the phone. What could the Imam want? I leave my desk and take the elevator downstairs where I see the Imam sitting in a chair near the entrance. \n\n\"Detective, I apologize for the sudden visit,\" Imam Masri says, standing up to meet me. \n\n\"Not a problem. Let's talk in private,\" I say, directed him past the desk and down the hall. I pick one of the larger conference rooms to make him feel comfortable. \"Can I offer you some tea or...\" \n\n\"...no thank you. I wanted to talk to Chase, but he ensured me you can be trusted. I will take his word on faith,\" the Imam says, and we both take seats. I sit next to him instead of sitting on the other side of the table. \n\n\"What do you want to talk about?\" I ask. \n\n\"You had asked if the mosque had recently been visited. I wasn't comfortable talking at the mosque. We have had a recent visit,\" he says, and I pull my notebook out. \"A man named Mohammad Mohammad Abdulaziz. A Saudi Prince, and Omar's first cousin from his father.\" \n\n\"So, his name has two Mohammads in it?\" I ask, and he nods. \"Could you confirm if Omar was also a Saudi Prince?\" \n\n\"Omar was not, technically. His father was however, until he fled the country in the early two thousands and was excommunicated. Not before putting money in accounts first. He wasn't stupid,\" Imam Masri explains. \n\n\"Why did he flee. His immigration record says he applied for asylum,\" I say. \n\n\"Justified, he fled the country after speaking out against the government. He died a few years ago sadly. Cancer. Good man,\" Imam Masri says, looking down in legitimate sadness. \n\n\"Why was Omar's cousin at the mosque?\" I ask. \n\n\"Mohammad and Omar met during Omar's hajj to Saudi Arabia. They became very close. Mohammad was visiting, and like any Prince he has his own entourage. One member of the entourage, a few things he said in the mosque, has me incredibly worried.\" \n\n\"What things?\" I ask. \n\n\"How I teach a heretical form of Islam, not true to the faith. How Omar was not a true believer. I'm not sure if it's related to his murder, but I feel it is something I needed to say,\" Imam Masri says. \"I fear this man may have bugged the mosque, hence why I didn't feel comfortable earlier.\" \n\n\"What's his name?\" I ask. \n\n\"Wasim Abdul Khan,\" he replies, and I have him help me with the spelling. \n\n\"Do you have anything else you need to tell me?\" I ask. \n\n\"No, that is all.\" \n\n\"Thank you for your time. If you feel it is necessary, I can request to put a patrol on you for your protection,\" I say. \n\n\"I wish to be proud and say no, but I will accept this offer. Thank you, detective,\" Imam Masri says, standing up, and shaking my hand with a slight bow. I ask him to stay around for a moment while I make the call for the protective detail. "
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "detective",
        "drama",
        "police",
        "romance",
        "straight",
        "romantic"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/a-shoulder-to-cry-on-3"
}