{
    "title": "Black Sheep Ch. 03",
    "pages": [
        "Hi Litsters,\n\nThanks to the overwhelmingly positive response to Black Sheep so far (and my editor egging me on), I have decided to prioritise this series. This particular chapter stars Katrina from my \"Living with Katrina\" series (although you don't need to read that in order to understand what goes on here).\n\nAs always, thanks to my editor, NaokoSmith, who is the sole reason this chapter is coming out weeks before my procrastinating ass would eventually get down to writing it.\n\n<p align=\"center\">* *</p>\n\n\"Another one?\" said Lucy, offering a joint to her friend.\n\n\"No thanks,\" said Katrina, letting a wisp of smoke float into the night sky. \"Let's catch another swim instead.\"\n\nThey were dressed in the tightest swimsuits humanly possible. Katrina stubbed out the final embers of burnt cannabis before diving headlong into the pool. Her lithe body cut through the cool blue water. She made it to the opposite side and back, her strokes as graceful as a swan.\n\nLucy watched her friend with a smile. Katrina swam to the edge of the pool and raised her head out of the water. She beckoned Lucy over with a finger. Lucy took a last drag before walking to her friend curiously. Katrina winked and then grabbed her suddenly. Before she could react, she was in the water as well.\n\n\"I'll get you back for that,\" hissed Lucy, coughing up some water. \"Mark my words.\"\n\nThey laughed and got out of the pool, taking a shower to get the stench of chlorine off. Katrina started grumbling as they were walking back to the Chandler mansion.\n\n\"It's hopeless,\" she exclaimed. \"I can't find one guy who fits the bill.\"\n\n\"What kind of guy are you looking for?\" asked Lucy, smoothing her hair over.\n\n\"A young, handsome guy with a smooth, slim body and...\"\n\n\"Wipe the drool off your chin, Kat,\" Lucy exclaimed with a laugh. \"Do you want this guy for your painting or tied to your bed?\"\n\n\"There's no reason he can't be both,\" Katrina replied with a wink. \"But yes, I need him right now for this painting. There are a group of patrons who have expressed interest in getting this shy, bashful guy on a canvas. There will be an auction for it sometime soon.\"\n\n\"And you haven't found someone yet?\" Lucy pondered. \"What makes this painting special?\"\n\n\"I dunno exactly. The model mustn't be overly muscled or rugged. I don't want to paint sculpted abs right now. He has to be in his late teens or early twenties, average height and should be slim. He should have an air of precocious innocence about him.\"\n\n\"That doesn't sound too tough.\"\n\n\"Believe me, I have looked everywhere,\" sighed Kat. \"The closest I have come to it is my prude of a roommate who would rather flee the country than even be semi-naked in front of me. The mere suggestion made him look like I asked him to give me his lung.\"\n\nThey walked to Lucy's room and settled down on the fluffy mattress.\n\n\"Any chance you could find someone like that? Although, it would be unlikely given the weird circles your family runs in.\"\n\n\"No weirder than yours,\" Lucy shot back.\n\n\"Exactly, that's why I'm having such a hard time,\" moaned Kat.\n\nLucy pondered over the dilemma for a while. Slowly, realization dawned on her. \"I think I know someone who might be just what you're looking for.\"\n\nProvidentially, there was a knock on the door. Lucy smiled wickedly and opened it.\n\n\"Katrina. Meet my brother, Damien.\"\n\nAs far as bad timing went, I could put Sarah Palin to shame.\n\n<p align=\"center\">* *</p>\n\n\"Okay, now I don't think you're joking and that scares me.\"\n\n\"It's not a joke, Damien,\" said Lucy's friend, playfully twirling a strand of her blonde hair between her fingers.\n\n\"You really want me to model for a nude portrait?\" I asked, flabbergasted.\n\n\"It was your sister's idea,\" Katrina riposted, pointing to the reclining form of Lucy, who grinned from ear to ear. I stared at her disbelievingly.\n\n\"You suggested this?!\"\n\n\"No need to get all high and mighty, bro,\" Lucy said casually. \"I thought it would be an interesting experience for you. It would be the closest thing you've had to a sexual experience yet. Unless, of course, you would prefer to be naked in front of a man...\"\n\n\"Lucy,\" I said wearily. \"Will you ever stop that? I am not gay.\"\n\n\"What's your opinion, Kat?\" Lucy asked, with a mock seriousness. Katrina studied me intently, running her eyes all over my body.\n\n\"I call bottom,\" she declared. \"Possibly into bondage. Needs a big, strong bear to show him what he's missing.\"\n\nI stood rooted to the spot, my face turning crimson. Lucy ignored me and answered.\n\n\"Maybe the bear in question could start him off with some ropes and cuffs. Get him used to the idea of being at someone's mercy.\"\n\n\"Could even be a maternity bed,\" said Katrina, picking up on the diabolical scheme being hatched impromptu. \"Padded restraints and stirrups to hold his legs apart.\"\n\nThere can be no merciful God, as otherwise he would surely have ripped out my eardrums in that moment. It was a choice between my hearing and my sanity and I could feel my sanity reeling at every syllable. Undeterred, my sister was continuing.\n\n\"Hypothetically, if I had to write this, the bear would start with fingers. Maybe insert one and twist it before trying another.\"\n\n\"If he's rough, he might not use lube. When he can get two fingers in, next up would be the large mushroom head of his cock.\"\n\n\"I can just picture the scene! My brother, gagged on a maternity bed, while a big, hairy man holds his thighs and pounds his pretty little asshole.\"\n\n\"If he's good, he might have Damien's nipples clamped. Nothing like pulling on the chain between the clamps while ramming the head of his member into his prostate.\"\n\n\"It would stretch him out nicely too. When he's about to cum, the bear would probably pull out and squeeze that cock between his lips.\"\n\n\"You have a point there, Lucy. Dominant bears like going ATM. It's like the ultimate humiliation for a twink to taste his own ass on someone's dick before being forced to swallow his jizz.\"\n\nLucy paused to cast a glance in my direction. I had turned an unnatural shade of red. My ears were burning and my mind was swimming in a sea of revulsion. She doubled over with laughter at my mortified state.\n\n\"Okay enough,\" she squeezed out between giggles. \"Any more and my baby brother will melt with horror.\"\n\nKatrina ran her eyes over me again, licking her lips like a lioness watching a deer drink water. In this Serengeti, I was in the presence of two predators, and barely protected from one of them by virtue of being a blood relation.\n\nThe two girls laughed to their heart's content, before Katrina took on a more serious demeanour.\n\n\"It would be entirely professional if you modelled, Damien,\" she stated. \"No teasing, flirting or anything which would make you uncomfortable.\"\n\n\"It's for the sake of Art,\" Lucy pressed on, looking earnestly at me.\n\n\"If I agree to be drawn, will you stop with the gay innuendos?\" I asked weakly. I was surprised to actually be arguing this, but the arts always fascinated me. I would be lying if I said I wasn't the least bit curious to be part of this project.\n\n\"Maybe,\" Lucy said, stifling another bout of laughter. \"You'd also make some money off this. Tell him, Kat.\"\n\n\"One-third of all profits,\" she assented. \"How does it sound?\"\n\n\"I don't know,\" I continued, not one to be tempted by money alone. \"I'm not exactly comfortable with the idea of a naked portrait of mine out there. What if somebody who knows me sees it?\"\n\n\"Your face will be hidden,\" Katrina reassured me. \"The idea is a faceless body of innocent youth. Innocence, shown in its untouched state.\"\n\n\"So how about it?\" said Lucy. \"All you need to do is pose naked in front of Katrina for a while. She's really good and very discreet. No one will ever know.\"\n\n\"And maybe we could go for dinner after that,\" Kat suggested.\n\n\"Whoa whoa, slow down,\" I replied, putting my hands up. \"Aren't we getting ahead of ourselves?\"\n\n\"You only live once, little brother.\"\n\n\"I'll think on it. But I have to ask, why me?\"\n\nKatrina walked up to my side and held my head with both her hands. Her fingers delicately traced down my neck and shoulders. I felt an involuntary shudder go through me when she trailed down to my sides.\n\n\"Because you're a virgin,\" she said. \"And my painting deserves nothing less.\"\n\n<p align=\"center\">* *</p>\n\n\"So you're painting Damien this evening?\"\n\n\"Yes,\" said Katrina, taking a sip on an iced coffee. She and Lucy sat in a rooftop caf\u00e9 overlooking Lower Manhattan. The waterfront peeked out at them through the concrete jungle. \"In my apartment studio.\"\n\nLucy looked at the pastry on her plate idly. She bit her lip and asked in a discreet tone:\n\n\"Kat, you and I both know you are going to come onto him sometime later today. All that talk about being professional with your models is bullshit. I was the muse for one of your raunchier pieces, remember?\"\n\n\"How could I forget?\" Katrina replied with a wink and a lop-sided smirk.\n\n\"All I'm asking is -- tread softly,\" Lucy said. \"Damien isn't like the rest of us. He's a shy, sensitive guy. If you come on too strongly, he'll run scared.\"\n\n\"Are you sure he's not adopted?\" Kat asked, not entirely joking.\n\n\"No, but that's beside the point. Are you attracted to him?\"\n\nKat paused and took a long sip out of her glass. The cool mocha washed over her mouth and covered her throat in a rich, bitter-sweet layer.\n\n\"Physically speaking, I'm sure you can guess the answer,\" she said. \"I would like nothing more than to rip his clothes off and have my way with him. Emotionally speaking, I'm intrigued by him. He's born into a family which revels in their sexuality and yet, he is celibate? I would like to get to know him some more.\"\n\n\"He's a sweet guy,\" reaffirmed Lucy. \"Sometimes I actually feel bad about the way we tease him.\"\n\n\"So you want me to lay off him?\" asked Katrina.\n\nLucy drained her entire glass in a gulp. Her tongue sloshed the remnants of liquid cocoa in her mouth, letting her taste-buds linger on the memory. She looked at Katrina and gradually the corners of her lips curled upwards in a wicked smile.\n\n\"Nah,\" she said, stretching out the syllable for effect. \"Teasing him is way too much fun to pass up. You have my blessing to make my brother go red and want to jump out of your window.\"\n\n\"I knew you were just joking,\" laughed Katrina, throwing her smooth hair back. \"I already have a few things planned for later.\"\n\n\"Do tell,\" said Lucy, lowering her voice to a conspiratorial whisper. Katrina obligingly leaned over and mentioned the outline of her scheme in her friend's ear. She watched with a grin while Lucy's eyes went wider and wider and her mouth hung open with a mixture of shock and amazement at the base depths of Katrina's fertile imagination. Kat leaned back in her chair and looked at Lucy with a mischievous glint in her eye.\n\n\"When you get back, take one last look at your baby brother,\" Katrina said dryly. \"Because he will never be the same again.\"\n\n<p align=\"center\">* *</p>\n\n\"Hi, there,\" said Katrina with a wide grin. \"Come on in.\"\n\n\"Nice place,\" I said. \"Here, take this.\"\n\n\"Such a gentleman,\" she replied, taking the bottle of Napa Valley's finest Gamay Rouge from me. \"Come on in and I'll show you where you'll be spending the next few hours.\"\n\nI followed her past a small living room and kitchenette before she opened the door to her studio. Several paintings in various stages of completion hung from the walls and the floor was a mess of colour.\n\n\"Get used to your surroundings,\" she said. \"The subject should be comfortable in their environment. It's key that you relax and show your natural self.\"\n\nI sat on the soft couch at the far end of the room. It was set at an angle to the glass door which let the setting sun cast its red hue over the plush seat. One side of it was raised and padded, no doubt for the subject to lie down and relax while their body was immortalized on canvas.\n\nI stretched my limbs. Katrina was momentarily distracted by a knock. I heard voices talking on the other side of the wall. A man in a black suit passed the door. He stopped when he saw me on the couch.\n\n\"You must be Katrina's next project,\" he said, genially. \"I'm Jake, her roommate.\"\n\n\"Damien, the nude art project,\" I said with an embarrassed laugh, and shook his hand.\n\n\"First time?\" he asked. \"You're probably the youngest of her models that I've seen.\"\n\nI gulped. He straightened his tie and spoke again.\n\n\"You look nervous. Don't worry. Katrina won't eat you.\"\n\nI nodded, still uncertain. Jake did a good job of putting me at ease.\n\n\"So, are you involved with her?\" I asked, lowering my voice.\n\n\"Just friends,\" he waved it off.\n\n\"Despite how much I try to persuade him otherwise, just friends,\" said a voice from the doorway. Our eyes turned to the curvaceous blonde form holding a bottle of cola. She tossed it to me.\n\n\"Drink up,\" she said. \"Sorry I can't share the wine with you. It would calm those nerves.\"\n\n\"I'll get going then,\" said Jake. \"I have to present our annual performance report to the board of directors at the Hollander tonight.\"\n\n\"See you then,\" said Katrina and kissed him on the cheek before he left. She turned her undivided attention back to me and brought her easel to the centre of the room.\n\n\"Now, where were we?\" she said. \"Ah yes, getting you at ease. Are you comfortable?\"\n\n\"I guess so,\" I said, wiping the remnants of cola from my chin.\n\n\"Good,\" she said, stepping in front of the easel. \"Now for the main event. Take off your shirt.\"\n\nI obliged. Kat stepped forward and caressed my smooth, hairless torso. Her deft fingers tickled my flesh, spreading goosebumps outwards. She stopped at my nipple and gently twisted it between her fingers. I yelped, making her chuckle.\n\n\"I don't think you realize exactly how beautiful you are,\" she said softly.\n\n\"Thanks,\" I said. I fleetingly mused on just how appropriate such a comment was between an artist and her subject. I supposed that Katrina just appreciated beauty; that was her talent.\n\n\"Now,\" she said softly. \"You should take off your jeans. Take your time. Make sure you don't feel awkward. We can take a break now if you want.\"\n\n\"I'd rather get this over fast,\" I muttered, yanking my jeans off. Her gaze seemed to be fixed in appreciation on my underwear, although I felt sure a professional artist would not be imagining what lay behind that flimsy layer of fabric.\n\n\"Very nice. Now onto the part you've been dreading all along.\"\n\nI stood, my hands trembling and palpitations going through my heart. I put my fingers on the waistband of the underwear, but could not bring myself to go through with it. Kat looked at me with a smile.\n\n\"Would you like me to do it for you?\"\n\nBefore I could make my mind up about this startling proposal, her fingers replaced mine. She yanked my jockeys down in one fluid motion. It was like ripping off a band-aid, rather than a slow humiliating experience. Suddenly, I felt naked, the cool evening air enveloping me in its clammy grasp. Involuntarily, my hands rushed to cover the part where the cold air had the greatest effect.\n\n\"No no,\" Katrina said, taking hold of my wrists. \"You can't hide the main part of my painting.\"\n\nGiving her a wry smile, I slowly let her lift my hands away. She sank to her knees and observed my member up close. Her eyes were mere inches from my hitherto underused appendage and her hot breath engulfed my glans. The flaccid object of such keen interest experienced a sudden rush of blood. My arteries were working overtime to impart unnecessary hardness. The process was further encouraged when I felt a hand encircle my shaft and another cup my sac gently.\n\n\"There's a good boy,\" she murmured, at the elongation and engorging of her masterpiece. It grew in size under her gentle ministrations until it stood out straight, pointing at her face. She released her grip and minutely observed my manhood.\n\n\"You have no idea how much self-control it's taking not to open my mouth and close it around that beauty.\"\n\n\"I appreciate it,\" I said, burning up. Blood pounded against my ears and my face was flushed.\n\nShe glanced up at me, her lips still inches away from my swollen head.\n\n\"Some day, I will have you naked in front of me without the pretext of a painting and then I'll scratch that itch... among others.\"\n\nKatrina rose and sat me down on the couch. I leaned back and draped an arm over my head.\n\n\"Let's draw the body now,\" she said. \"The hat to cover your face can wait. Are you ready?\"\n\nI nodded, feeling my turgid erection against my thigh. Katrina looked at it with a smile on her face.\n\n\"It's hardly fair that only one of us is naked, wouldn't you say?\" she said with a wicked grin.\n\nBefore the statement could register in my mind and give me any opportunity to dissuade her, I saw her gown drop around her feet and she stepped out of the satin puddle. Her curvaceous, smooth skin and plump breasts held my eyes prisoner, as did her megawatt smile.\n\n\"Told you I'm a professional.\"\n\n<p align=\"center\">* *</p>\n\n\"Hold your breath in.\"\n\nI tried, pushing my stomach below the level of my ribs. Katrina quickly stole a glance before turning her attention back to her canvas. Her easel was oriented sideways with respect to me, so I could see her side-on and also get an occasional peek at the work in progress.\n\n\"How are you doing there?\" she asked, getting the outline of my torso and abdomen down.\n\n\"I'm fine,\" I said.\n\nIt was past sunset. Katrina placed several scented and unscented candles around the room, casting eerie shadows over the floor and walls. It was difficult to paint in the given lighting, but she wanted the effect of shadows to come through clearly, so she stuck by it. A few beads of sweat formed on my forehead, dangling precariously before dripping onto the velvet.\n\nMy eyes were fixed on the artist. I was mesmerized by her naked form, contrasted against the multiple light sources, illuminating different parts of her in varying degrees. Sweat glistened off her side, shining in a bright layer. Her face was a picture of concentration against the slanting light of another candle.\n\nShe looked mysterious... alluring... sensual.\n\nShe turned to face me again, casting her face into the light. Her naked form was a mere few feet from me and I saw the left side of her torso in the dim glow. Her breasts were rounded and seemed so easy to the eye. My eyes trailed down to see a thin strip of hair leading to her mound.\n\n\"I hope you're enjoying the view,\" she said. \"I know I am.\"\n\nI nodded vaguely, focusing on remaining in my position. The strain south of my abdomen was excruciating, begging satiation. It twitched and pulsed, and every fibre of my being wanted to move my left hand from the armrest to the source of my discomfort.\n\nBut my professional obligation stood in the way. That and the distinct lack of privacy.\n\nKatrina clearly had a sixth sense when it came to this sort of thing. She stopped painting abruptly and stared at me. Her perceptive gaze rested on my chest and inexorably descended to the anatomical titbit in question.\n\n\"Do you need to jerk off?\"\n\n\"Excuse me?\" I asked, bewildered by her frankness.\n\n\"Jerk off. Masturbate. Rub one out. Whatever you kids call it these days. Do you want to do it?\"\n\nThe question and the way it was asked jolted me out of my abstinent haze. I looked at her standing with her arms akimbo and realized there was no point hiding it.\n\n\"Desperately,\" I admitted, my head slung low in shame.\n\nShe walked to the couch and laughed. Her hands held my chin and pushed it up till I was looking into her brown eyes.\n\n\"It's hardly something to be ashamed of,\" Katrina said mirthfully. \"You're every bit as cute as your sister promised.\"\n\n\"So, can I make a quick trip to your washroom?\"",
        "\"Why would you do that?\" she said with a grin. \"I've seen your dick. Might as well get yourself off right here, where I can see it.\"\n\n\"What? No!!\"\n\n\"I could help if you want,\" she said, reaching out and touching my hypersensitive head (not the one with eyes). That sent an electric current through me and I involuntarily jerked away from her touch, falling in a heap on the floor. She giggled before helping me up to my feet.\n\n\"So you'd rather suffer than jerk off in front of me? Am I that hideously unattractive?\"\n\n\"No,\" I blurted out. \"I'm just not comfortable with it.\"\n\nKatrina stared at me for a long while with her piercing gaze. Her lips broke into another wicked smile.\n\n\"Suit yourself, but the rule is this -- either spank the monkey in front of me or after the painting is done.\"\n\nShe puffed her chest out, letting her dominance hang in the air between us. I wish I could say I was new to women making such requests of me, but I am a Chandler after all. I knew what to do.\n\nSo I lay back on the couch and rested my hands on the wooden edge.\n\n\"I'm made of stronger stuff,\" I said bravely, hoping she didn't call my bluff. She calmly resumed her portrait, smiling at the increasingly pronounced spasming between my legs. Her naked form, curling against the subtle interplay of light and shadow, against the backdrop of the flickering flames all around was too strong a stimulus.\n\n\"All right,\" I declared, making the long overdue movement of my left hand to my shaft. \"Let's get this over with.\"\n\nImmediately, Katrina sat on the floor in front of me, her eyes fixed on my gripped organ. She had a look of wonder in her eyes, like a child in a planetarium.\n\nI closed my eyes, creating the illusion of solitude, but I could still feel her hot breath on my shaft. With every stroke, her moans got louder, indicating I wasn't the only one whose hands were at work.\n\nI dared not open my eyes until she screamed out loud. With a little more practice, she could surely shatter glass.\n\n<p align=\"center\">* *</p>\n\n\"Can I see it?\"\n\nKatrina was engrossed in her work. She barely noticed my question. Her eyes were narrowed and sweat formed over her brow as she concentrated on the work at hand. I tried peering into the canvas, but the angle made it impossible.\n\nHer strokes became finer. I only saw her wrist move minutely as she delicately sketched. Her brow furrowed with concentration. Some of the candles around us were dying, their weak flames flickering and causing the layer of sweat on her shapely curves to shine. Each time she turned, I stole a glimpse at her luscious breasts.\n\nAfter a long time, she stepped back. Her eyes ran lengthwise and breadthwise over her creation before she turned to me and smiled.\n\n\"Come have a look.\"\n\nInterested, I walked over to her and saw myself on the canvas. It was certainly well drawn, shaded differently in parts to mimic the effect of light and shadow. My eyes travelled down my torso, inwardly impressed at how she showed every minor contour. I chose to skip over the highlight of the painting and paid attention to the background.\n\n\"What do you think?\" she asked.\n\n\"I think you did a great job.\"\n\nShe beamed and put down her palette. There were a few stray streaks of paint on her face, but it did not mar her look of contentment.\n\n\"Thanks for putting up with it all,\" said Katrina, engulfing me in a tight hug. Her naked skin pressed against mine, causing an unwarranted reaction elsewhere. She felt the reaction against her thigh and winked at me.\n\n\"He seems happy.\"\n\n\"He doesn't know any better,\" I admitted sombrely.\n\nKatrina doubled over in a fit of giggles. She held onto my waist for support. I helped her up, but she did not release my naked waist from her embrace. Her face was inches away from mine, her large, brown eyes looming over mine. She breathed heavily, her lips trembling in anticipation of the unknown.\n\nI was frozen in place by this incredibly erotic entity. Her sumptuous red lips were very close to mine now. One of her arms wrapped around my back, pulling me towards her. I closed my eyes and hoped for the best.\n\nA bright bolt of lightning lit up the room. The flash was succeeded by a crack of thunder which injected a dose of sense into my dormant neurons. I opened my eyes and simultaneously felt her lips graze mine.\n\nImmediately, I took a step back. Katrina opened her eyes and looked at me with an expression of disappointment laced with longing.\n\n\"Someday,\" she said wistfully. \"Some day.\"\n\n<p align=\"center\">* *</p>\n\nSchool passed me in a blur of colours and shapes. I found myself brooding on my artistic endeavour. The more I tried to focus on my work, the more the beautiful artist came back to me in vivid technicolour. I stayed in this haze, even when I was called to Steinberg's office and his secretary, Lori, \"accidentally\" dropped something in the exact spot where she would have to \"accidentally\" brush her hand over my rear to pick it up. The hand lingered, molesting my rear end for a good few seconds.\n\nBut I was far removed from it all. I stayed that way even as I returned home.\n\nThere was a festive air in the Chandler mansion. My mother had invited several members of her ladies' club over. I smiled, shook a few hands, endured a few more \"accidents\" of the aforementioned kind.\n\n\"Damien, darling,\" said Marilyn, kissing me on both cheeks and my forehead. \"How was school?\"\n\n\"The usual,\" I shrugged. \"What's the occasion?\"\n\n\"Something silly for us cougars,\" she waved me off impatiently. \"You won't be interested.\"\n\n\"You're probably right, but I'd like to see it anyway,\" I said. \"It's not like you can shock me any more.\"\n\n\"Fine,\" Marilyn said, leading me into the group of women. I was surrounded on all sides by incessant chatter and exclamations. We went to the far side of the crowd, to the focus of all the attention.\n\nAdorning the whitewashed wall of the hallway, centred in a place where all could see, was the portrait of a young boy wearing nothing more than a flimsy fedora over his face. His faceless body reclined on a couch, subtly interplayed against a background of light and shadow.\n\n\"What do you think?\"\n\nThe non-existence of a merciful God was further proved in that instance. No deity with the remotest shred of compassion in their heart would not have torn out my eyeballs. Time froze, all thoughts of the attractive artist were replaced by a feeling of overwhelming disbelief. I stared at my personal Medusa, yet fate would not allow me the luxury of turning into stone.\n\n\"I got this piece at an auction last night,\" Marilyn twittered on, oblivious to my horror. \"My hormones have been on fire ever since I saw it.\"\n\nI still could not find the words to express my shock.\n\n\"Just look at that hot body,\" she went on, killing a little bit of me with every word. \"Who would not want to lick it all over?\"\n\nShe was joined by another middle-aged woman. The stranger nodded in assent.\n\n\"I'm so jealous, Marilyn,\" she exclaimed. \"Had I known this was for auction, I would have sold my car to get it. Who needs a car when you can stare at that lovely, hard cock all day long? I'm dripping wet just looking at it.\"\n\n\"It's too bad that we don't even know the model,\" Marilyn sighed. \"I'd fuck him till his cock falls off.\"\n\n\"I think I need to go,\" I croaked weakly. Colour had completely drained off my face.\n\n\"See you later, sweetheart,\" Marilyn said. \"I'm going to admire this extremely fuckable body for a while now. Fuck! I need to masturbate. I'm so turned on just by looking at this.\"\n\nAll around, people nodded and described what they would do to the cub in the painting if they got a chance. Suddenly, my only thoughts regarding Katrina involved ropes and a very dull knife.\n\nI saw Lucy leaning against the vestibule entrance as I walked through. She caught my glance out of the corner of her eye and winked mischievously. The people around her failed to understand why she inexplicably broke into a fit of uncontrollable giggles.\n\n<p align=\"center\">* *</p>\n\nAs always, your comments make me continue writing, so feel free to drop one on your way out. "
    ],
    "authorname": "LaRascasse",
    "tags": [
        "damien",
        "painting",
        "katrina"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/black-sheep-ch-03"
}