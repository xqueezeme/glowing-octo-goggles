{
    "title": "Master! Master! Pt. 05",
    "pages": [
        "The girls were sitting on the floor, eyes downcast in shame with me looking down on them.\n\n\"So, you watched HOW many porn videos?\"\n\nMomo and Sonja looked at each other and then held up both their hands. \"This many,\" Momo said. Beside them, Chloe looked like she was about to cry.\n\nI turned to Momo. \"And I'm guessing you were the ringleader?\"\n\n\"Ringleader?\"\n\n\"It was your idea.\"\n\n\"We thought we could impress you by using the computer and you would give us cake.\"\n\nIt's pretty hard to stay mad when they're so damn cute.\n\n\"Had you actually stayed on YouTube after getting back to it, I would have been proud. Not proud enough to get you a cake, but proud. Instead, now I'm mad and you all need to be punished.\"\n\nAll the girls shied away, trying to make themselves look as small as possible. In truth, I knew that they would inevitably start messing around on my computer. I had been reluctant to let them use it for their reading lessons but it was the best solution. Among the dangers of them exposing their existence on the Internet, I really didn't like them looking at porn. I mean, sure, it was hard to imagine Momo and Sonja seeing anything on that website that we already hadn't done (besides anal of course), and Chloe certainly got an eyeful the other night, but I just didn't want to expose them to that. These girls are more than just my pets, they're like my kids, and like kids, they are dumb as dirt and easily impressionable. The last thing I needed was them asking for a gang-bang or seducing the mailman like the countless pool boys and pizza delivery guys of pornos past.\n\nThe question was how to punish them? A whap on the head with a newspaper might be enough, but Chloe was so fragile that it might traumatize her for life. But nor could I go easier on her than on Momo and Sonja.\n\n\"Ok, I've decided your punishment. No more head pats for the rest of the night.\"\n\nThe girls all gaped at me in horror. No petting or having their ears rubbed for the rest of the night? They might as well be left to sleep in the rain! They rushed to me just like when I first came through the door, crying into my pants.\n\n\"We're sorry! We're sorry! We're sorry! We're sorry!\" they pleaded.\n\nCrap, now I'm hurting. When a girl is crying against you, you of course want to touch her! Especially if there are three of them! Besides, I was so used to petting them I might need to take up smoking just so that I could keep my hands occupied.\n\n\"I know you are, and hopefully you'll learn not to mess with things you don't understand.\"\n\nThey hugged me even tighter, rubbing their heads against my legs. Crap, this was too much. I had to do something for them.\n\n\"So, you really liked using the computer?\" They all looked up for me. \"I taught you three how to make spaghetti and meatballs, remember? So, if you three make dinner, I'll show you how to use my computer properly.\" Wide grins crossed their faces, once again making me want to pat their heads. They rushed into the kitchen while I collapsed on the couch.\n\n--\n\n\"Ok, so I'll start by making you girls your own account. That way you won't go digging around in my bookmarks.\" The girls were crowded around me on the couch. I had Chloe on one side and Sonja on the other, with Momo lying above us on the top of the couch, purring in my ear.\n\nI brought them onto their new account, with a blank desktop and generic galaxy background. All the girls awed at the picture. \n\n\"You like it? Well, if you want, I can show you how to get a different background. But we'll do that later. Ok, now what do you want to learn how to do first?\"\n\n\"Can we watch porn?\" Momo asked. \n\nI gave a deep sigh. \"You've all had more than enough porn for one day. What ELSE do you want to do?\"\n\n\"We used that Google thing to look at pictures,\" Chloe said.\n\n\"Well then I'll show you what else Google can do.\" I brought up a browser window, showing them Google. \"Ok, what do you girls want to know about?\"\n\n\"You mean with pictures?\" Sonja asked.\n\n\"No, I mean actually learn about. It's why I'm teaching you how to read. What interests you?\"\n\n\"Playing,\" said Momo.\n\n\"We're not watching any more porn. Ok, since you love cake so much...\" I typed it in and showed them the results.\n\n\"We can do that,\" said Sonja.\n\n\"Yeah, but you just looked at pictures. Here, you can read about it.\" I brought up the Wikipedia page. \"See, this is called Wikipedia. It's like Google, it will tell you everything you want to know about whatever you're interested in. See, look at all this information.\" I scrolled through the page, and while the huge wall of words intimidated them, they were also interested. I then bookmarked the main page and showed them how to get to it.\n\n\"Ok, now you've been using YouTube for your reading lessons, but you can watch plenty of other movies.\"\n\n\"You mean like-\"\n\n\"Momo, if you keep asking for porn, I won't give you any head pats tomorrow either.\" That shut her up. \"Ok, I'll show you some things you might like.\" I showed them cat videos, dog videos, and mouse videos, each of them making the girls wiggle in excitement.\n\nAfter that, I showed them a couple flash games websites, mainly old arcade games. Wikipedia, YouTube, and games, that's all I trusted them with as far as the Internet was concerned. I then showed them some applications like Photo Booth, Microsoft, and a few other things. Finally, I set up some strict parental controls.\n\n\"Ok, girls, that's all you need to know about the computer and you're now free to use it. However, I have rules. First rule: you are not allowed to eat or drink and use it. Second rule: no bringing it into the bathroom.\"\n\n\"But you do both those things,\" said Sonja. \n\n\"Because I know what I'm doing, you three don't. Third rule: no going outside with it. Fourth rule: You have to be ridiculously careful with it. Always carry it with both hands, keep it on the table, keep it charged, and close it if you're not using it. If it breaks or gets any damage, I'll give each of you a hard spanking.\"\n\n\"A spanking?\" Chloe asked.\n\nI clapped my hands together as loud as I could. \"I'll do that to your butt, several times.\" Now that scared them. \"Fifth and final rule: Unless you're all using it together, you're each limited to an hour use every day. If you behave well, I'll let you use it longer. Understood?\" All the girls nodded. \"Good, now let's go to bed. I'm exhausted.\"\n\n--\n\nI woke up the next morning being head-butted by three naked girls. Even Chloe had slithered under the covers and was lying on my chest. Since it was a new day, their punishment was over and they wanted to make up for lost time. I pulled them in close and rubbed their heads like I was trying to polish them, making the girls whimper in bliss. With only two hands and three girls to satisfy, I had to add my mouth to the equation, nibbling the ears of whichever girl I wasn't able to pet. Of course, it had been a strain for me to resist petting them last night, and with three naked girls rubbing up against me, my morning wood was getting an extra charge. \n\nFeeling my erection between her legs, Chloe's porcelain face became flushed and she moved aside in embarrassment. I had managed to resist temptation these past few days, but this month was really dragging on. Another few weeks would tell me whether or not she had a menstrual cycle, as well as solidify her trust in me. As such, she had already seen me play with Momo and Sonja, but her nervousness had yet to ease. Oh well, my balls wouldn't be turning blue anytime soon.\n\nSeeing my hard-on like the dot of a laser pointer, Momo pounced. She straddled my lap and stuck herself on my dick like a marker top. Sonja followed suit, joining her lips with mine. Luckily, I always set my alarm extra early so we'd have time for some morning coitus. After emptying myself into Momo and playing Sonja like a harmonica, I went downstairs with the girls cheering for breakfast. I no longer needed to prepare it for them. I had taught Momo and Sonja how to use the stove (but only when I'm home so I could turn it off if they forgot) and to cook eggs and sausages, and Chloe was a simple breakfast girl.\n\nI had a well-established morning routine. I would eat at the table, watching the girls eat on the floor in their usual bowed posture. I had my laptop with me, checking my email, the news, and of course, dank memes. After eating, I'd brush, shave, finish getting dressed, and then give the girls a kiss goodbye as they crawled back into bed for a nap.\n\n\"Ok, girls, I'm trusting you with my laptop. But first, you have to tell me the rules. I want to make sure you remember them.\"\n\n\"No using it around food,\" said Momo.\n\nI nodded. \"Good. And?\"\n\n\"No bringing it into the bathroom when we use the toilet,\" said Sonja.\n\n\"That's right. Chloe?\"\n\n\"I'm sorry!\" she squealed under the bed. \n\n\"Do you remember the third rule?\"\n\nHer white head poked out. \"No bringing it outside?\"\n\n\"Good girl. And the fourth rule is that you have to be careful with it. I want to be able to trust you with it, trust that you can keep it safe. Don't make me regret it.\"\n\nMomo sat up in the bed. \"Can we watch porn?\"\n\nHearing porn mentioned excited Sonja. \"Yeah! Can we? Can we?\"\n\nMy palms met my face.\n\nDear Vetquestions.com, my humanoid cat and dog are obsessed with watching pornography. Please advise.\n\n\"No, you cannot watch porn. You watch porn and I'll give you a spanking. Understand? Good, then I'll see you tonight.\"\n\nI gave them all a kiss and left them sound asleep in (and under) the bed.\n\n--\n\nHours later, the girls all woke up, though not quite at the same time. First was Momo, who first thing upon waking crawled under the bed to bully Chloe. The unwanted fingering awoke Chloe, whose whimpers of embarrassment and nervousness woke of Sonja. Then they all got dressed and went down for lunch.\n\n\"So who gets to use the computer first?\" Chloe asked after they ate.\n\nSonja stretched. \"I'm gonna go play outside for a while.\"\n\n\"Momo wants to look for something on the computer. Does Chloe want to do something?\"\n\n\"No! No! That's ok! I don't need to use it!\" her shy nature revealed itself, afraid of getting in anyone's way.\n\n\"Ok, then Chloe, come outside and play with me! Let's go look for firewood!\"\n\nBefore Chloe could object, Sonja pulled her outside. Momo sat down at the kitchen table and logged on to the girls' shared account. From there, the search was on. \n\n--\n\nSonja and Chloe returned after half an hour, dirty from carrying sticks. They found Momo with her head on the table, a true image of a broken soul. \n\n\"Momo, what's wrong?\" Sonja asked.\n\n\"Momo can't find the toy,\" she groaned.\n\n\"What toy?\" asked Chloe.\n\n\"The toy from the porn yesterday, remember? Those two girls used it? It buzzed like a bee. Buzz! Buzz! They seemed to like it.\"\n\n\"Oh yeah, I remember. Google isn't helping?\"\n\n\"No, Google is too dumb to get it.\"\n\n\"Well maybe Master will know what you're looking for,\" said Chloe. \n\nThe feline's ears perked up. \"Momo will draw Master a picture!\" she declared.\n\nShe ran off to find her crayons, leaving the computer with Sonja and Chloe.\n\n\"Do you want to use it?\" asked Sonja.\n\n\"I'm sorry! It's ok! I don't want it!\" she squealed instinctively.\n\n\"Let's play a game!\"\n\nTaking the computer, Sonja brought up the bookmarked game website, showing classic games like Pong and Space Invader. For hours they played together, taking turns or using games that allowed for two people to share the keyboard. True, they were breaking the time limit rule, but hopefully they wouldn't get in trouble.\n\nMomo being Momo, she finished her drawing and went upstairs to spend the day napping and masturbating.\n\n--\n\n\"Please tell me you girls haven't been on that thing all day,\" I said, coming through the front door. All the girls had greeted me as usual, but I could see a paused game on the open laptop.\n\nSonja and Chloe exchanged guilty looks. \"Not ALL day,\" said Sonja. \n\n\"Bad girls,\" I said, making the dog and mouse shy away. Momo came up, holding a piece of paper and looking very eager to tell me something.\n\n\"Momo, did you make another picture for me?\"\n\n\"Master, can Momo please have one of these?\"\n\nShe handed me the picture but I was unsure what she was trying to show me. It looked almost like an ice cream cone.\n\n\"What is it?\"\n\n\"Momo saw it used in one of the porns yesterday. Two girls were playing with it.\"\n\nJesus, she was asking for a vibrator! It was one of those big neck massager ones, which normally had to be plugged into the wall.\n\n\"First of all, it's pornOs. Porn is the subject, porno is the object. Second, no, I will not get this for you. This is exactly why I didn't want you watching these videos!\"\n\n\"Pleeeeeeeeease, Master? Momo will be really good!\" she begged.\n\nBoth Sonja and Chloe were looking at us, curious as to the outcome. I really didn't like the idea of Momo having a sex toy. For one thing, she spent enough time playing with herself already. Plus, I was afraid of further stimulating her curiosity. First she would ask for a vibrator and then who knows what. But on the other hand, it might be fun if I used it on the girls. I could see them now, moaning and squirming in bliss, calling me again and again. Hell, they might end up squirting like fire hydrants.\n\n\"I'll tell you what, if you make dinner for all of us for seven nights, I'll get you a vibrator.\"\n\nHer eyes sparkled. \"Really?\"\n\n\"Yep, but they have to be good. You'll have to remember everything I taught you. I'll make plans for dinners this week and get the ingredients, and it will be up to you to prepare them. That also includes washing the dishes and cleaning the kitchen.\"\n\n\"Momo will do it!\"\n\n\"Ok, but I'm trusting you with this, just like I'm trusting you with a computer. You have to share with Sonja and Chloe, and if you misbehave, I'll take it away. Deal?\"\n\n\"Deal!\"\n\n--\n\nRather than wait for Momo to prove herself, I decided to have faith in her and order the vibrator that night. It would arrive in the mail sometime that week, and hopefully the girls wouldn't notice and Momo wouldn't screw up. As much as I liked the idea of giving the girls vibrator reach-arounds, I couldn't break the rules I had established. I had to be careful about spoiling the girls, making sure that rewards only came with responsibilities.\n\nFor the rest of that week, Momo cooked everything I had taught her. She spent the evenings in the kitchen, wearing nothing but an apron, and had a look of almost predatory focus. Whenever I taught the girls how to prepare meals, I made sure to write it down in a notebook for them. Hearing her sounding out words and seeing her stare at the pages as she worked, I was filled with pride. She really had matured since she became like this. And best of all, her meals came out perfectly. \n\nAt the end of the week, I gathered all the girls at the table, having just finished eating some particularly good chicken nuggets (it's not like I was teaching the girls how to make souffl\u00e9s).\n\n\"Momo, I'm very proud of you. I gave you a challenge and you passed with flying colors.\" Momo purred at the praise, an adorable smile on her face and her tail twisting. \"A deal's a deal. Momo, have fun.\" \n\nI reached under the table and pulled out the vibrator, handing it to her like the Olympic torch. It was a smaller version of the neck massager model, battery powered rather than needing an outlet. Knowing Momo, I made sure to stock up on batteries. She took it gratefully, her eyes wide as dinner plates. She pressed the button on the side and the toy activated, a low hum echoing through the kitchen with the rubber head clearly shaking. Not only Momo, Sonja was gazing at the toy with a hungry expression. While she didn't play with herself as much as Momo did, she couldn't wait to try it herself. Chloe, on the other hand, shied away, as usual. Even a low buzzing enough to scare her.\n\n--\n\nI had never heard Momo cry out so loud. She was on her back, legs spread. I was kneeling perpendicular to her, giving steady thrusts while Sonja held the vibrator to her clitoris. Momo's cheeks were wet with tears and her tongue swept across her lips. One might think she was in pain (sitting in the corner, Chloe certainly thought so), but if I stopped my thrusts or Sonja stopped the toy, Momo would beg to have them returned.\n\nI leaned over Momo and nibbled on her ears, the last bit of stimulation needed for her to cry out from a tidal wave of orgasms. Her voice echoed through the house, until at last, she lay limp, glistening with sweat. She might be out for the count.\n\n\"Sonja, are you ready?\"\n\nThe blonde pup bounced on her knees, shaking the bed with her big yellow ears flopping. \"I wanna try! I wanna try!\"\n\nWithout me needing to tell her, she got on all fours, shaking her butt at me. How surprising that her favorite position is doggy-style. I mounted her from behind, her tail falling slack and an erotic smile on her face as she felt me penetrate her. As I started slamming into her, she brought the vibrator to her clit, starting her own choir of sexual bliss. Normally, she would stay on her hands and knees, letting her breasts clap together like a Newton's cradle. This time, however, the stimulation was too much for her to stay upright. She was face down, her rear end sticking up, her drool damping the sheets as bliss overwhelmed her.\n\n\"Mmmmmasterrrrr... this feels soooooo gooooooood,\" she groaned, looking like she had just taken a hit of acid.\n\n\"I can actually feel the vibrations through you, and I'm enjoying it as well.\"\n\nSonja didn't even give any warning, she just howled when she came. I pulled out of her, still full of stamina. Hopefully Momo was up for Round 2.\n\n--\n\nFor several days, buzzing and moaning could be heard almost nonstop. Momo spent even more of the daylight hours in the bedroom than before, putting the vibrator through its paces and switching out batteries like they were shotgun shells. Her masturbation habit had gone from being cute and sexy to being rather concerning. At this point, it was more of an addiction. And while I had originally gotten the smaller vibrator because it was cheaper than the plug-in model, the cost of batteries was burning through the savings like thermite.\n\nOne night, upon coming home, only Sonja and Chloe greeted me. Momo was absent. I sighed loudly and moved upstairs, finding her on top of some tangled and damp sheets. Whether it was the sound of the vibrator or her own moaning, she hadn't heard me come up the driveway. I stood over her, her back to me and her butt in the air, completely unaware that I was there. This was actually the same way I had found her and she first started flicking her bean.\n\nListening to her moans, a peculiar idea came to me. A catgirl pleasuring herself would probably attract a lot of fetishists, fetishists with money. Maybe she could become one of those webcam girls with the premium sites, pay to watch. Hell, her cutesy way of talking might drive some people wild, and if I put some tape on her butt and gave her some realistic-looking fake human ears, viewers would just assume that her ears and tail were just some really well-made props. Sonja and maybe even Chloe could also get involved.\n\nI immediately shot the idea down. For one thing, all my effort had to be put into hiding the girls rather than exposing him, plus... it felt like I would be taking advantage of them. They were in my care, so while having sex with them was one thing, putting them on the Internet to make money was approaching pimp levels. And they didn't know any better, so I didn't like the idea of making them do this when they couldn't comprehend it and understand the meaning and consequences. Oh well, the idea was always there.\n\n\"Momo.\"\n\nShe spun around, nearly falling off the bed as if she had just seen a cucumber. (Look it up.)",
        "\"Master!\" she exclaimed.\n\n\"Momo, you and I need to have a talk.\"\n\n\"Did Momo do something wrong?\" Crap, she was being cute again. I swear she's doing this on purpose.\n\nI sat down next to her. \"Momo, you've been using the vibrator too much.\"\n\n\"But Momo lets Sonja use it when she asks!\"\n\n\"I know, and I'm proud of you for that. But you're spending way too much time up here, playing with yourself. Do something else with your day. I got you books and art supplies and you can use the computer now, plus it's still plenty warm out if you put some clothes on, so maybe go run around with Sonja. I'm not taking it away, but from now on, you can only use it once a day, and I don't mean until it runs out of batteries.\"\n\nMomo's ears drooped. \"Okay,\" she mumbled.\n\n\"Come here, give me some love.\"\n\nShe crawled over and gave me a kiss, then curled up with her head in my lap. I stroked her hair and her cheeks, making her purr. \n\n\"I love you,\" I said.\n\n\"Momo loves Master, too,\" she replied.\n\n--\n\n\"Master!\" x3\n\nI woke up, quite unwillingly I might add. The girls no longer needed me to prepare breakfast for them, so I was finally able to sleep in on the weekends. At least that was the plan. They had left the bed to go eat, but immediately swarmed back.\n\n\"There had better be a fire,\" I grumbled, face-down on the bed.\n\n\"It's snowing!\" Momo exclaimed. \n\nI looked up at them. As expected, Sonja was overjoyed, Momo was pissed off, and Chloe was terrified. In the window behind them, I could see white flakes falling from the lightening sky. It was a flurry out there.\n\n\"Huh, the first snow of the season. Do you girls want to go play outside?\"\n\n\"Yeah!\" Sonja cheered.\n\nMomo just pouted and shrugged, as if I was responsible for the snow. Beside her, Chloe was pulling her ears down over her face and squealing in fear. The girls and I got dressed and headed downstairs, then added on some extra layers and went outside. With a coat, hat, snow boots, and mittens, Sonja rocketed out the door and began frolicking through the yard.\n\n\"Snow! Snow! Snow! Snow!\"\n\nI stepped out onto the deck, Momo beside me and Chloe behind me. Momo was scowling, and with her ears covered with a hood, she looked like your average bitchy teenager. \"Momo doesn't like the cold, Momo misses her fur,\" she said as she pulled the strings of her hood.\n\nChloe looked around, clinging to my jacket. \"Is it safe to be out here?\"\n\n\"Chloe, relax, it's just frozen water. See?\" \n\nI scooped up a handful of fluff and held it to her, the flakes as white as her hair. She leaned forward and sniffed it, wiggling her nose. I blew into the pile, spraying them into her face like she was a powdered donut. She jumped back, her eyes wide, not looking scared so much as unable to process the feel of the snow touching her skin.\n\n\"Come on, let's go for a quick walk before breakfast.\"\n\nThe girls followed me into the woods, and as one would expect, Sonja zoomed around us, eyes always upwards and her tongue sticking out to try and catch the flakes.\n\n\"Master, Momo's cold!\" the feline whined, clinging to me like a koala. The feeling of my arm between her breasts definitely kept the cold at bay for me.\n\nStrangely enough, Chloe was calm. She was paying more attention to her footing and steps but appeared to have gotten used to the presence of snow. Perhaps she was getting more mature. As she followed me, I crouched down and picked up a handful of snow. It was pretty cold outside, so there wasn't any moisture in the snow. I breathed into it, using the heat to melt the snow and then I formed it into a snowball. \n\n\"Hey, Sonja, catch!\"\n\nDown the path, Sonja turned around and I threw the snowball. She jumped up and it smacked her in the forehead. \"Again! Again!\" she hollered before I could worry.\n\n--\n\nAfter going back home, we all had breakfast and then crawled back into bed for a bit. Before falling asleep, I thought back to what the realtor agent had told me, about this house easily losing power. I still had yet to buy a generator and I needed to sign up for the plowing service. When we started getting real nor'easters, the last thing we needed was to be stranded out here without any power or food. After a brief nap, the girls and I got up, but Chloe only climbed out from under the bed so that she could crawl under the sheets and curl up in my warm spot. It seemed that she wanted to sleep a little longer.\n\nMomo, Sonja, and I headed downstairs and had lunch, and as soon as she had eaten, Sonja put on her coat and boots and ran back outside, of course leaving the door open behind her. After closing it, I turned to Momo.\n\n\"I'm going to go run some errands, I'll be back in a bit.\"\n\n\"Oh, can we have ravioli tonight?\" Momo asked.\n\n\"Sure thing.\"\n\nAfter I left, Momo found herself sitting at the table, unsure of what to do. She usually felt bored after naps, this was nothing new, but it was an annoyance. Maybe she could draw something? Nah. Play on the computer? Meh. Read a book. Yawn. She could always play with herself, but it would have to be on the couch. After all, Chloe had taken the bed. Chloe...\n\nMomo's ears perked up and she made her way upstairs. Reaching the bedroom, she stood at the foot of the bed, looking at the sleeping Chloe. Momo's tail was curling and her ears were twitching from her rising energy. She crawled into the bed, the shaking of the mattress awaking Chloe. Seeing Momo and knowing what she was going to do, Chloe whimpered and turned away. \n\nA deep purr in her throat, Momo pulled away the blankets, prompting Chloe to curl up the fetal position. Regardless of her passive resistance, Momo managed to work her hand between Chloe's legs, her probing fingers slipping inside her. Chloe continued to whimper from Momo's tickles, lacking the willpower to try and stop her. Chloe's whine made Momo purr even louder, her own body beginning to react. She leaned over and nibbled on Chloe's ears, making her shiver in response. She began to writhe and twist, feeling Momo's tongue and lips massaging the sensitive cartilage, all while her fingers whisked up her virgin nectar.\n\nIt took only a couple minutes for her to achieve an orgasm, prompting a particularly loud squeak. Chloe rolled onto her back, gasping for air. Momo sat up, normally leaving after managing to coax an orgasm from Chloe, but this time, she instead reached over to the bedside table, into a drawer. Chloe tensed up when she heard that signature hum. Her eyes were tearful, but she didn't resist Momo. Licking her lips, Momo brought the head of the vibrator to Chloe's clit, drawing a continuous whine from the mouse. \n\nMomo was curled up against her, purring with a small smile as she rubbed Chloe's pussy with the vibrator. She was leaking like a sieve, the buzzing of the head making her body tremble like ripples in water. But Momo wasn't satisfied with just making Chloe feel good. She climbed on top of her, similar to the missionary position. With their smooth legs intertwined, Momo began rubbing up against Chloe, letting the vibrator buzz against both their pussies. Due to the difference in height, Momo's breasts were smothering Chloe. At first, she thought it was just coincidental, but with the way Momo was rubbing her chest against her face, she realized that Momo actually wanted her to do something.\n\nHoping it would get Momo to stop, Chloe opened her mouth and began sucking on her breasts. Momo groaned in bliss, relishing the feeling of lips on her nipples while the vibrator buzzed against her clit. Her tail stood erect, and soon enough, she came. Maybe Momo would finally leave, that's what Chloe was hoping for. But Momo looked down at Chloe, staring into her eyes, and the hungry look on her face told her otherwise. Without saying a word, she began to crawl over Chloe, moving towards the headboard. She stopped once Chloe's head was between her legs, suspending her dripping pussy over the girl's tearful face. Sniffling, Chloe slowly extended her tongue, not having the strength to refuse.\n\n\"What the hell is going on here?!\"\n\nMomo looked over, seeing me in the doorway. It was a good thing I had forgotten my wallet on the bureau. Momo jumped off Chloe and hid behind the bed, while Chloe, crying, rushed over to me.\n\n\"Momo keeps tickling me! Make her stop!\"\n\nI looked at Momo. \"What have you been doing to Chloe?\"\n\n\"Momo just wanted to play with her!\" \n\n\"Even when she clearly didn't want to?\"\n\nMomo cocked her head to one side, not understanding why I was angry. What the hell was going on with her? Was Momo bisexual? Sure, I had seen Momo and Sonja lick my cum off each other's breasts, or finger each other, but they had never kissed or shown any real sexual interest in each other. Why would she go after Chloe but not Sonja?\n\nDear vetquestions.com, sorry about bothering you all the time, but my humanoid cat won't stop sexually assaulting my humanoid mouse and I need help. \n\nI looked back and forth between them, from Chloe's ears to Momo's. Oh for fuck's sake! Momo isn't molesting Chloe because she's bi, she's bullying her because they're cat and mouse! She's playing with her fucking food! She used to do the same damn thing when she was a kitten. She's catch mice and birds, and even when they were injured or dead, she would keep batting them around, trying to get them to fight back. I thought she had outgrown it, but Momo was still a predator and was picking on Chloe because she was small and weak.\n\n\"Momo, you're not allowed to play with someone when they don't want to! That's very bad! Very bad! You're going to spend the next few nights sleeping on the couch!\" I then stormed over and took away her vibrator. \"And you're not getting this back anytime soon!\" \n\n--\n\nFor the rest of the day, Momo made herself scarce, hiding in the woods. It's better that she did, because I was furious for the way she treated Chloe. I filled up her food bowl at dinner, but she didn't come in to eat until we had all finished and left the kitchen, at which point she waited for us to go to bed. Sonja was confused as to why I was bringing down blankets and a pillow and leaving them on the couch, with Momo sniffling in the far corner of the house.\n\n\"Master, what's going on?\" she asked as she followed me up to the bedroom.\n\n\"Momo has been very bad, so for the next few nights, she'll be sleeping on the couch.\"\n\nSonja froze, trying to imagine what Momo had done to earn such a horrible punishment. In the bedroom, we found Chloe, sitting on Momo's side of the bed. The blankets I had given Momo were from Chloe's nest under the bed. After we all brushed our teeth, we were about to climb into bed, but I instead saw Chloe crawl under it. Even without blankets and a pillow, she still planned on sleeping on the floor.\n\n\"Chloe, wait.\" She poked her head up from under the bed. \"I know you like to sleep on the floor at night, but there is plenty of room in the bed for you. Come on, it'll be too cold and uncomfortable for you down there.\"\n\nChloe's face turned red. Normally, she would only sleep in the bed for daytime naps, since at night, her rodent instincts told her to hide under things and avoid the nocturnal predators. She wasn't used to being so exposed at night. Plus, she and I had never slept in the same bed before. Even when I went to take a nap, Momo and Sonja would always flank me and leave Chloe to snooze underneath. After seeing what I did with Momo and Sonja, she was worried about what I would do with her so close.\n\nI held out my hand to her. \"Don't worry, it's ok. I promise you, you're safe.\"\n\nRather than take my hand, she slithered up from under the bed and into the covers. I could feel her beside me, taking the same kneeling pose she would to eat.\n\n\"Ok, everybody cozy? Goodnight girls.\"\n\n\"Goodnight, Master!\" said Sonja with a smile.\n\n\"Goodnight, Master,\" said Chloe, giving a muffled squeak under the covers. \n\n--\n\nThe next day, I decided to treat everything as I would normally. Momo was still grounded and would sleep on the couch for a few more days, but I didn't yell at her or anything like that. She had already run away once, back when she thought I loved Sonja more than her, and if I was mean to her, she might run away again. At the very least, she understood that she had done something wrong. I just had to hope that she would understand why it was wrong. \n\nAfter returning home yesterday and finding Momo and Chloe, I hadn't gotten anything done. I needed to get this place ready for winter. Having slept in a bit and had breakfast, I found the girls playing in the living room. Chloe was doodling, Momo was playing Space Invaders on the laptop, and Sonja was reading Dr. Seuss. \n\n\"Girls, I'm going to go out and run some errands.\"\n\n\"Bye, Master!\" they said.\n\nThey all looked up to me, and when my eyes met Momo's, I gave her a glare that said 'you're on thin ice, don't fuck this up'. I think she got the message; she immediately hid behind the laptop.\n\nDriving to the nearby town, I stopped at the hardware store and got some snow shovels, salt, sand, long-lasting candles, and a generator. I didn't need something too heavy duty, just enough power to keep the water running and maybe the stove and microwave. Either way, the cost was more than I expected and I could feel rocks piling up in my stomach. Chloe's addition hadn't raised living expenses by very much, but even as an office manager, I was living paycheck to paycheck. I still made enough to have some savings left over, but it was scary how often those savings got depleted. It was a good thing I didn't pay for heating oil or firewood.\n\n--\n\nThat night, we had ravioli and meat sauce, just like Momo wanted, sort of like a peace offering. But now, hanging from her shoulder like a purse, Chloe carried a water gun. I had gotten it for her at the store and instructed her to spray Momo if she ever got even a little bit touchy-feely. She appeared reluctant to use it, but I could also see that she was relieved to have it. Hopefully the relationship between them was still mendable. But I was happy that the four of us could again watch TV together on the couch.\n\n--\n\n\"Master,\" Sonja whispered.\n\nShe was on her back, her legs wrapped around my waist. Even the smallest thrust made her breasts jiggle like Jell-O. With Momo still sleeping downstairs, it was just me and Sonja. I decided to take it slow tonight, gentle, loving, contrary to the hardcore threesomes we usually had. She looked so beautiful, even in the darkness, her blonde hair catching the faintest light. My lips met hers, our tongues following suit, not even separating when I pulled out or rushed into her.\n\nIt was nice to do it this way for a change. Sometimes one on one is better than a threesome. Besides, seeing us as we were now, Chloe's expression was almost one of awe. Normally, she would look terrified when she watched me have sex with Momo and Sonja, but that was because we were normally much more hardcore in that scenario, fucking like porn stars. But now that she was seeing it this way, seeing how tender and caring it could be, her fear was disappearing. Lying just two feet away, wrapped in blankets, she watched with wide eyes and slick thighs.\n\nSonja finished, I coming in second. I kissed her on the nose. \"I love you,\" I said.\n\n\"I love you too, Master,\" she murmured.\n\nI moved off her and turned to Chloe, kissing her too on the nose. \"Goodnight, Chloe.\"\n\n\"Goodnight, Master.\"\n\n--\n\nI left home that frigid Monday morning with a bit of worry. Chloe had told me that Momo often came after her in the middle of the day, usually when she was napping. I had stepped out yesterday to run errands, but with the work week starting once again, that was more than eight hours a day where I wouldn't be supervising them. But I had left Sonja with the task of keeping Chloe safe, and the last time I checked on them, they were curled up in bed, Chloe with her water gun always in reach. Momo had one more night to spend on the couch, and I hoped for her sake that she didn't screw up.\n\nHours later, Chloe and Sonja woke up and headed downstairs. They found Momo on the couch, shaking her head after a very unsatisfying nap.\n\n\"Momo misses Master's bed,\" she whined.\n\nChloe hid behind Sonja, worried that Momo might do something to her in her frustration.\n\n\"Well it's your own fault,\" said Sonja. \"You made Master angry.\"\n\n\"Momo doesn't know why Master is angry.\"\n\nSonja cocked her head to one side. \"Huh, I don't know either. What did you do, again?\"\n\n\"She kept playing with me, even though I didn't want to,\" said Chloe.\n\n\"Momo thought Chloe was a toy.\"\n\n\"Well of course Master is angry at you! How could you think Chloe is a toy? Master doesn't think we are toys!\"\n\nMomo's ears twitched, the words finally getting through. \"Chloe, Momo is sorry,\" she said.\n\nMomo had already apologized before, or more accurately, been forced to, but Sonja and Chloe could tell that this one was truly genuine. Chloe stepped out from behind Sonja, holding her hands in front of her.\n\n\"I forgive you,\" she squeaked.\n\n--\n\nI came home, finding Momo and Chloe on the couch, reading a picture book together. Chloe didn't seem nervous and didn't have her water gun next to her. It warmed my heart, seeing them finally getting along. That evening, Momo seemed less miserable about sleeping on the couch. Perhaps she had realized what she did wrong and was willing to bear her punishment. Anyways, this was the last night she was grounded, and even I was glad that it was over. She and I hadn't had sex since I punished her, so it would be good for things to get back to normal.\n\n--\n\nI rolled off a very satisfied Sonja, finding Chloe watching us with wide eyes. \"Come here, cutie,\" I said, pulling her close. She tensed up when I put my arm around her, thinking I was going to use her for Round 2. Instead, I simply held her against me, her forehead pressed against my chest. \n\n\"M-Master?\" she asked.\n\n\"We don't cuddle enough.\" The bed began to shake and small yips could be heard. I looked back Sonja. She was sound asleep but wiggling and whining. \"Huh, look at her go. She must be dreaming about chasing squirrels.\"\n\n--\n\nIt was a new day and I was happy as could be. Sure, there was a frigid downpour outside and I had cut myself shaving, but neither of those could ruin my mood. Why? Because it had been more than a month since Chloe appeared, and never had she shown a single sign of a menstrual cycle, meaning she couldn't get pregnant and was open for business!\n\n\"Ok, girls, I'll see you tonight,\" I said as I got my shoes on. \n\nThe girls were still having breakfast, but they got up to say goodbye. Each of them gave me a kiss and then returned to her bowls, but I grasped Chloe's wrist before she could get away.\n\n\"Hold on a second, Chloe.\"\n\nIt took only an instant for her eyes to become watery and her ears to droop. \"Did I do something wrong?\"\n\n\"No, you didn't do anything wrong.\" I got down on one knee and kissed her hands. \"I just wanted to ask you something. I was thinking that maybe... you and I could play together tonight? You don't have to worry, I'll be gentle. But we won't do it if you don't want to.\"\n\nHer hair, ears, and tail stood on end and her body glowed red like a Christmas light. \"M-M-M-M-M-Master...\"\n\n\"Relax, you don't have to answer now. Think about it. Now how about another kiss?\" She was still petrified, so I kind of had to steal one.\n\n--\n\n\"Ah, time for a nap!\" said Sonja after washing the egg grease off her lips.\n\n\"Momo missed sleeping in the bed,\" the feline added.\n\nThe two of them walked towards the stairs but stopped when they realized Chloe wasn't following them. She was still standing by the door, nervous as could be.\n\n\"Chloe, are you ok?\" Sonja asked.\n\nChloe turned to them. \"Master said he wants to play with me tonight.\" She had her eyes downcast and was fidgeting.",
        "Contrary to Chloe's mood, Sonja perked right up and rushed over to her with a big grin. \"That's great! You're going to love playing with Master!\"\n\n\"But I'm too scared! I don't want it to hurt!\"\n\nMomo walked over. \"It only hurts the first time, then it feels great.\"\n\n\"How did you two do it?\"\n\n\"Momo started it first. Master didn't want to do it but he quickly changed his mind when his thing went in Momo.\"\n\n\"And I had to wait for Momo to go outside before Master and I could play together and we both had a great time.\"\n\n\"But what if Master doesn't like me?\"\n\nMomo and Sonja looked at her as if she had just spoken in gibberish.\n\n\"Why wouldn't he?\" they asked.\n\n--\n\nIt was a long day at work, but then again, the days are always long when instead of the ticks of the clock, you measure time by your heartbeat reverberating in your erect dick like it's a tuning fork. Hopefully Chloe had some good news, but even if she didn't, then at the very least I still had Momo and Sonja. Upon coming home, I rushed through the front door, and as usual, found the girls waiting to greet me. But instead of swarming to me, they were standing in the kitchen, Sonja and Momo side by side with Chloe, their hands resting on her shoulders.\n\n\"Master, I think Chloe has something she wants to tell you,\" said Sonja giddily. \n\nI looked to Chloe, who was blushing and wringing her tail. \"I want to play with Master,\" she squeaked.\n\nA smile on my face, I got down on one knee with my arms outstretched and Chloe rushed over and hugged me. \"I'm glad to hear that. And since Momo is no longer in trouble, both she and Sonja will be there to support you.\" She then pulled away just enough for us to kiss. \"How about tonight, after we've all had dinner, we take a bath, just the two of us, just as a warm up?\"\n\nShe finally smiled and nodded her head. \"'Kay!\"\n\n--\n\nHaving anticipated Chloe's decision, I cooked us up a special dinner: steak and mashed potatoes, though that brought about hilariously messy results. The girls normally ate like the animals they used to be, so with something like steak, they needed to use their hands. I know I could have cut it up for them into bite-sized pieces, but then I would miss the sight of them sitting on the floor cross-legged, faces caked with mashed potatoes and BBQ sauce, gripping their steaks and tearing pieces off with their teeth like vultures. I might need to give Chloe a shower before we even get in the bath. Of course, their clothes were ruined, but it was still pretty funny.\n\nRather than watch TV with the girls before going up to bed, I got the bath started right after dinner. I didn't want to stay up too late playing with the girls. Once the girls had washed their faces, I called Chloe upstairs. She met me in the steamy bathroom, jittery as usual. \n\n\"This is going to be nice,\" I said after locking the door.\n\nI started taking off my clothes and Chloe did the same. She had spent so much time naked in this house, but tonight, she seemed particularly nervous as she stripped, like a runaway 14-year-old in a truck stop bathroom, doing what she needed to do to get a ride to California. Ok, dark place, let's back it up and pretend that didn't happen. And of course, while she had seen me naked plenty of times, the sight of my throbbing member made her give a tiny squeak of fear.\n\nI got into the bath first, giving a slight wince from the heat. \"Ok, Chloe, come here.\"\n\n\"Um... how do I...?\" \n\n\"Just sit on my lap and lie back against me.\"\n\nTrying to contain her nervousness, she stepped into the tub, and as she flashed me her cute little butt, I couldn't resist leaning over and planting a kiss on the left cheek. Chloe froze up, not out of fear, but mere surprise that I would do something so bold. It took her a moment, but she managed to settle down on my lap, my manhood nice and cozy you know where (not there, we haven't gotten to that yet). She leaned back against me and I could tell she was relaxing.\n\nWe stayed like that for a good while, simply relishing the warmth of the water and the touch of each other's bodies.\n\n\"You know, this reminds me a lot of when we first met. You were this tiny little flower, afraid of her own shadow. You've grown up since then.\"\n\n\"Really?\"\n\n\"Yeah, but you're still as cute as you were then.\"\n\nShe looked at her hands. \"Do you know why I became like this?\"\n\nI sighed. \"No, I have no idea. I've been trying to figure it out but nothing has helped.\n\n\"I'm glad I got to become like this and got to meet Master.\"\n\nI kissed the top of her head. \"Yeah, me too.\"\n\n\"But I wish I was more like Sonja and Momo.\"\n\n\"What do you mean?\"\n\n\"They're tall and have big chests which you seem to like. And when we watched porn, there weren't any girls as small as me.\"\n\nI put my arms around her. \"Oh stop, you're perfect just the way you are. Believe me when I say this, you're cuter than Momo and Sonja put together. If they're dinner, then you're cake.\"\n\n\"Do you really think so?\" she asked with a shy smile.\n\n\"Of course. And besides, even if you have a flat chest, I can still play with these.\" I moved my hands under the water to her breasts and started tickling her nipples. \n\nShe squirmed and giggled. \"Master!\"\n\n\"And I can do this,\" I said as I started nibbling on her ears, making her giggling turn to moaning. \n\n\"Master!\" she panted.\n\n\"And you don't need to be tall for me to want to spend all day touching you here.\" One of my hands fell between her legs, touching her only lightly with my palm. Chloe became still, likewise making me tense up. Had Momo ruined my chances of actually getting to play with Chloe?\n\n\"Is it ok for me to touch you here?\"\n\n\"It feels good when Master touches me there,\" she whispered.\n\n\"Really? Well, does it feel good when I touch you... here?\" I tickled her left lip, nothing more than tiny strokes of my finger. Once again, Chloe began to squirm and giggle. \"And how about... here?\" I moved to the right, making her fidget with a cute little smile on her face. \"And how about down here?\" I probing the bottom of her pussy, where the lips converged. Chloe's breaths became faster. \"And I bet you like it when I touch you here.\" As expected, I saved her clitoris for last, and as I played it like a joystick, her panting deepened and her thighs clamped together.\n\nI left the job to my thumb and slipped my fingers inside her. Due to her small body, she was tighter than both Momo and Sonja, but the hot water was helping to loosen her up and keep her slick.\n\n\"Master!\" she whimpered, gasping for air as my fingers stirred inside her.\n\n\"Yep, this really is just like the first time we met. Come here and give me a kiss.\"\n\nShe rolled over and rubbed her chest against mine, now blushing with arousal. We began to kiss, our tongues entwining as she straddled my hand. Her small rear end, poking up above the water, would jiggle as she reacted to the movement of my fingers, sending ripples through the tub. She pulled her lips away, looking at me with eyes swimming.\n\n\"I love you, Master,\" she whimpered.\n\n\"I love you too, Chloe. Are you ready to move this to the bedroom?\"\n\nShe mustered up her courage and nodded, so I let the tub drain out. We both stood up and dried off with towels, and then I scooped her up and carried her out into the bedroom. Momo and Sonja were there, eager to support Chloe and hopefully get some playtime of their own. I sat Chloe on the bed and ruffled her hair.\n\n\"Ok, now the first thing we're going to do is you are going to suck on my member. I know you've seen Momo and Sonja do it. Are you ready?\" She nodded, but I could tell she was nervous. \"Girls, how about you show her how it's done?\"\n\nI didn't need to ask twice. The three of them kneeled on the floor, Chloe directly in front of me, staring at my manhood in both awe and fear. I turned to Momo, hefting it in her face. With plenty of experience, Momo began basting my cock with her mouth, drowning it in saliva while massaging it with her tongue and cheeks. I rolled back my head and groaned, overpowered by the sensation of her diligence. Chloe and Sonja watched her, Chloe taking mental notes and Sonja trying to contain her excitement.\n\n\"Ok, Momo, that's good. Now it's Sonja's turn.\" I turned to Sonja, unwittingly sending a drop of precum flying off and landing on Chloe's lip. She wasn't sure whether she could lick it or not.\n\nSonja decided to take a different approach. She started jacking me off, using Momo's saliva as lubricant, while she lowered her head and slurped on my testes. Even after taking a bath, there was still some salt from my sweat from her lick up. She gave them equal attention, vehemently sucking on one side of my nutsack and then the other. Feeling my balls dancing on her tongue was one of the greatest sensations of my life. Maybe they reminded her of tennis balls? Either way, her efforts were more than commendable, and I had to stop her before she milked me dry. \n\nI turned to Chloe. \"Are you ready? Just don't bite down. As long as you don't use your teeth, you can do no wrong.\"\n\nOk, it was her time to shine. Her eyes were a little tearful, but that was just the kind of girl she was. She didn't hold it in her hand, as if afraid of it, and started making small, timid licks up the shaft. Normally this level of stimulation would be rather disappointing, but I felt it matched her style; innocent and adorable. She licked it as if she were a puppy, her speed and courage building with time. Perhaps it was because it was our first time together, but that small contact was strangely satisfying, though it was time for the next level.\n\n\"You're doing great, Chloe. Now, try to fit it into your mouth and bob your head like Momo was doing.\"\n\nChloe kissed the very tip, then her lips parted and my cock slid into her small mouth. She was able to take half of it, but she couldn't deep-throat it yet like Momo and Sonja. She did most of the contact with her lips and then figured out how to use her cheeks and tongue. She was much gentler than Momo, her head moving back and forth much slower. It was a style that fit her personality, in a way making it feel more intense than it normally would have. My breathing became heavy, overwhelmed by what would have been considered a tepid blowjob if performed by anyone else.\n\n\"That's a good girl,\" I whispered, resting my hand on the top of her head.\n\nShe looked up at me, her eyes flushed with uncertainty. Certainly I had praised her, but she was worried I only did it at out pity. Was she doing this right? Was she as good as Momo and Sonja? I'll admit, seeing that adorable desperation and nervousness in her big beautiful eyes tickled a sadistic side of me a bit.\n\n\"Don't worry, you're doing great.\"\n\nShe tried to give a smile of gratitude, still with my dick in her mouth. She's just too damn cute. I gazed at the three girls, all looking up at me with their sweet, beautiful faces, and an idea popped into my head.\n\n\"Girls, there's something I want to try.\" I gave them instructions and saw a twinkle of playfulness in their eyes. \n\nChloe leaned back, focusing her attention on just the head, while Momo and Sonja took the sides, licking and kissing the shaft. Three heads were clustered around my manhood, three tongues and pairs of lips running across it, and of course three pairs of cute ears for me to play with while they pleasured me. Words fail to describe the sensation I was experiencing, both physically and mentally. I had made it. I reached the great halls of harem kings from ages past, my name carved into the walls of Elysium. I was on top of the world. All I needed was a fourth girl, maybe... a bird girl, to be kneeling under me and sucking on my balls, and dare I say a fifth girl, perhaps some kind of lizard, giving me a rimjob. But I'm pretty sure that at that point, Jesus Christ would ride down on a T-Rex and bitch slap me just for being the lucky piece of shit I am.\n\nThrough the combined efforts of the three girls, I was overwhelmed and could feel an imminent eruption. I held Chloe's head still. \"I'm going to cum! Make sure you catch it all and don't spill it!\"\n\nBefore she could react, I emptied myself into her mouth, unleashing a geyser of semen. Chloe fell back, miraculously able to keep it all in her mouth.\n\n\"Mathterrrr! Thith ith yucky!\n\nHuh, so she doesn't like the taste of semen. That's a new one.\n\n\"Open your mouth and let me see.\"\n\nShe leaned her head back and showed me her mouth. Her tongue and teeth were completely submerged under a lake of cum. I'll be honest, I just wanted to see her like this due to my need for self-gratification and sexual conquest.\n\n\"Ok, just give it to Momo and Sonja. Girls, open your mouths and she'll pour in it.\"\n\nMomo and Sonja resembled baby birds about to be fed, looking up at Chloe with mouths wide open. She pursed her lips and let my sperm trickle out, pouring half into Momo's mouth and half into Sonja. Chloe had to spit several times to purge her taste buds of the salty muck, but Sonja eagerly caught every drop from her. After a load like that, I had to buy some time to reflate my blimp.\n\n\"That was great work, Chloe. Now it's my turn to taste you. Lie back on the bed.\"\n\nShe assumed the position and I stood over her. Momo and Sonja were on either side of her, their luscious bodies almost framing her petite build. The frightened look on her face with her tearful eyes was cute beyond measure, and just the way her arms were twitching at her sides told me that she wanted to cover her small body, perhaps out of embarrassment when compared to Momo and Sonja, perhaps out of worry that I would do something painful. I had seen her frolic naked around the house for so long now, but never before her body enticed me so much. \n\nTo start, I leaned over and gave her a tiny peck on the lips to calm her down, then added some kisses on the forehead and cheek, moving down her slender neck to her collarbone. I took my time with her breasts, planting kisses upon her soft, ghostly white skin, using my lips to knead her delicate flesh and massage her nerves. Her breathing quickened as my mouth found her nipples, her arousal making them point like pink chocolate chips that I wanted to gobble up. At first, I simply traced around her areolas, as if the rings of small dots and bumps were a message in brail that I was reading with my tongue. I then closed my lips around one of the delicate nubs and gave a slight tug, drawing forth a gasp of bliss. Now that she was comfortable, I picked up the pace, switching between the left and right, kissing and sucking on her nipples with more gusto. I took turns with different techniques, either keeping my lips together and focusing the pressure on a small area, or opening my mouth wide and sucking on her breasts like I was trying to inhale them. Her breasts were so small, but I loved them.\n\nThe more I worked, the more Chloe reacted. Her soft voice preened and cooed, her thighs rubbed together, and her flat belly rose and fell with every trembling breath she took. She could finally understand why Momo and Sonja seemed to take such pleasure in me sucking on their breasts, and why Momo had made her suck on her breasts before. The sensations were almost too much to bear, but she knew that there was so much more to come. \n\nI left her breasts slick and glistening and moved downward, running my lips across her belly and even tonguing her navel. She raised her head and looked at me, fearful of what was coming. Maybe I did it as an act of kindness, to give her more time to prepare herself, or maybe I did it as an act of sadism, taking joy in teasing her, but I completely skipped past her virgin flower and showed her slender legs the attention they deserved. So soft, so smooth, I caressed her skin, licking away any bath water that still clung to her thighs. I reached her small feet and kissed the tip of every toe. The tickling sensation made her giggle, the giggle giving her a smile and easing her tension. I even nibbled on the tip of her tail a bit.\n\nNow that she was relaxed, I spread her legs, hungry for her honeypot. She held her breath, while I, almost ironically, teased her by blowing a stream of air onto her lips. That small chill from the movement of the air, on such a tender place, was enough to make her shiver. But that was enough procrastinating. Rather than warn her, I decided to just rip off the band-aid nice and quick and went down on her. My tongue penetrated her before my mouth met her entrance, sending a bolt of lightning up her spine. She cried out in happiness, nearly climaxing from that first touch alone. \n\nDue to her small body, her slit had a little less surface area for me to work with, but that just meant I could completely envelop it with my mouth and suck on it like I was trying to draw venom from a snakebite. I moved her legs up onto my shoulders and went to town, drinking her nectar while her moans bounced off the walls. Even after the bath, she remained tight, my tongue having to force its way through to tickle her interior. My efforts made Chloe arch her back and moan nonstop.\n\nSeeing the small girl react this way, Momo's predatory instincts were beginning to flare up. A curious gleam filled her eyes, her tail curled, and her ears twitched and flapped like she was trying to direct planes on a runway. I could see it happening and kept a close watch on her. She and Chloe had made up and Momo promised that she wouldn't bully her anymore, but the more aroused she got, the harder it would be to keep that promise.\n\nMomo began to move and I momentarily paused, waiting to see if I should stop her. Her lips found Chloe's small breast and enveloped her nipple, the movement of her tongue flushing Chloe with even more pleasure. I watched the two of them, still with my tongue inside Chloe. Chloe seemed aware of what Momo was doing, but the look on her face wasn't one of an unwilling victim. She didn't appear to mind receiving this kind of affection from Momo.\n\nSonja seemed to have the same idea I was having. She had her eyes focused on Momo and Chloe, watching for signs of discomfort or unease from the mouse. Finding none, she even decided to join in, sucking on Chloe's other nipple and making the pipsqueak moan even loader. I got to say, I had a pretty good view there. While I continued to drink in Chloe's arousal, I got to watch Momo and Sonja suck on her nipples like they were trying to leave hickeys, all while Chloe hollered from euphoria.\n\n\"M-M-Master! I'm c-c-c-cumming! I'm cumminggggEEEEEEEEEEEEEEK!\"\n\nHer tiny body shuddered as wave after wave of pleasure rushed through her, her mousy squeal sounding like a whistle. So, when climaxing, Momo meowed, Sonja howled, and Chloe squeaked. I have to wonder what would happen if I had sex with an elephant girl, the sound she would make. Maybe I'm going about this the wrong way. Maybe instead of hiding this from everyone, I should go public and travel the world. I could spend my life hunting down every single animal species on Earth, turning them into sexy girls, and then have wild sex with them! Hell, if I recorded it, I could make an audiobook of all their orgasm noises. People would probably pay good money for that.\n\nA smile crossed my face as I thought back to that barnyard animal spinner toy I had as a kid. Imagine if, in the future, I made one myself. I'd pull the lever, it would spin, and say \"the sheep goes 'oh God! Oh God! Oh... BAAAAAAAAAH!'\"\n\nBut enough about that, it was time for the main event. I got to my feet and leaned over, resting my manhood on her slippery opening. I had been waiting a month to take Chloe's virginity, I couldn't hold back any longer. Wait a second, when Momo was bullying Chloe, did her fingers accidentally... Holy shit. Holy shit, if Momo popped Chloe's cherry, I'll throttle her! No, no, get rid of those thoughts.\n\nI looked down at Chloe, shivering with nervousness, her eyes swimming, a pure maiden about to be defiled by my cock. I suspended myself over her, as if doing a push-up. \"Are you ready for this, Chloe?\" She nodded, not trusting her voice. I leaned down and kissed her, a little confidence-booster. Ok, maybe I could tempt fate just a little bit. \"Could one of you girls guide me in?\"",
        "Always eager for a chance to be helpful, Sonja smiled and grasped my manhood and helped me insert it. The head spread Chloe's lips, the tightness becoming apparent. Was this due to how tense and nervous she was, or the size of her body? Probably both. Chloe began to pant and whine as I penetrated her, trying to get into the right position for a fast insertion. If I tried to take it slow and wait for Chloe to get accustomed to it, I wouldn't reach her hymen until sunrise. It was better to just do it quickly, fast enough to get me all the way inside her without causing either of us injury.\n\nI felt it, our genitals lining up perfectly like a USB port, my penis perfectly in line with her sleeve. It was now or never.\n\n\"Chloe, take a deep breath. Now, this first time will hurt and it will take a bit for you to get used to it, but afterwards, it'll feel great all the time. I'll do it quick, which will hopefully make it easier. Are you ready?\"\n\nShe nodded again.\n\nI said nothing and instead thrust into her, gritting my teeth through the tightness. Chloe cried out and a ring of blood could be seen around the base of my manhood. Chloe was crying and looks of concern were on Momo and Sonja's faces.\n\n\"Chloe, are you ok?\" I asked, wiping away some of her tears. \"That's enough for tonight, we'll stop.\"\n\n\"No.\" She took a big sniff. \"I want to keep going.\"\n\nI leaned over her and kissed her on the forehead. \"Ok, but I'll give you a bit of time to settle.\" \n\nI pulled out of her, leaving her virgin blood to drip off my cock and stain the sheets. I continued to wipe away her tears while her breathing calmed. Then, when she gave me the green light, I penetrated her once again. She was ridiculously tight, almost more than I could handle. I began my slow thrusts, her small body being pushed back and forth as I hollowed her out. She still sounded sort of like she was crying and there were still tears in her eyes, but that didn't seem to change as time went on. Once again, the look on her face was tickling the sadistic part of me, but my concern overpowered it.\n\n\"Chloe, how are you feeling? Is it still hurting?\"\n\n\"Not really. It just feels really weird.\"\n\n\"Ok, just tell me when you're ready and I'll start picking up the pace.\"\n\n\"I'm ready.\"\n\n\"Are you sure?\"\n\nShe nodded, and while there were tears in her eyes, it no longer seemed like she was feeling pain. Maybe the tears were just a quirk of hers. Either way, it seemed like the worst was over, so I increased the speed and strength of my thrusts. Chloe's yelps loudened and she covered her face with her hands as if embarrassed, however, she never told me to stop or even slow down. The harder I worked, the higher her small white feet rose in the air.\n\n\"Hey, Chloe, there is an advantage that your tiny body has,\" I said. The look on her face told me she had heard me and was asking me 'what?' \"I can do... this!\"\n\nI moved my arms around her legs and under her back and then scooped her up. I stepped back from the bed, holding her with her knees close to her chin, her raised legs between us, and her upper body almost perpendicular to mine. She squealed in terror and tried to find something to hold onto with the tip of her tail unable to reach the floor. Holding her in my arms like this, I had perfect leverage and was able to begin moving both her and myself. I would raise her up while pulling my hips back, then bring us both slamming together and go in balls-deep. Her small body, light as a feather, was perfect for this position.\n\nEvery fierce impact sent Chloe's cries echoing through the house, all while Momo and Sonja watched with wide eyes. They certainly wanted to play like this too, but even they knew that due to their heights, the mechanics would be different. I didn't think I would be able to go as deep into her as I was now, her oiled interior smothering every centimeter of my cock and her lips stretching to accommodate me.\n\n\"Master! Master! Master! Master! Master!\" She moaned this nonstop, and it was music to my ears. There are few things more satisfying than a girl calling you 'Master' as you fuck her. \"Master, I'm going to cum again!\"\n\nI sped up my thrusts even more, releasing my inner porn star and hammering her like a jackhammer. Her moans turned into a loud squeak, so piercing that I thought the windows would break. Still holding her in my arms, I carried her to the bed and laid her down, watching her petite breasts rise and fall with her rushed breaths.\n\n\"Master, can Momo please go next?\"\n\n\"No!\" said Sonja, \"I want to go next!\"\n\n\"Sorry, Sonja, but Momo asked first, and it's been a while since we played together. Momo, come on up.\"\n\nMomo jumped off the bed and into my arms, and by the skin of my teeth, I was able to remain standing and not break through the window behind me. Our lips joined, followed by our tongues, with her tail matching the movements. I leaned her up against the wall and she wrapped her legs around my waist, allowing me to free up a hand and plug into her. She began to whimper and moan in tandem with my thrusts, having dearly missed her playtime. Her tits were pressed to my chest, the feel of such softness driving me nuts. She broke the kiss, a tender smile on her face, and rather than grip my shoulders for support, she wrapped her arms around my neck and pressed her forehead against mine, letting me stare into her glowing feline eyes. I thought she would say something, but she simply purred. \n\nBack on the bed, Sonja was starting to whine like her favorite tennis ball was stuck under the couch. She was getting impatient and really wanted her turn, probably because of how lovey-dovey Momo and I were being. It might be a good idea to change anyway, since holding Momo up like this for so long was really killing my stomach muscles. I had to cut my playtime with Momo short but I wasn't going to leave things unfinished. It was time to fight dirty.\n\nI reached out and grabbed the end of her tail. The loving, caring look on her face, deserving of a portrait, became lewd as a shiver rolled through her, making her almost stick her tongue out while her eyes rolled back. I rubbed the very tip between my thumb and finger, which to her was like a second clitoris. \n\n\"Master!\" she cried, achieving her orgasm.\n\nHoly shit, if I don't put her down now, my sphincter will blow out. I (rather ungracefully) dropped her onto the bed and looked at Sonja. \"Your turn, but I don't think I can hold you up.\"\n\nShe didn't seem to mind and she rushed to the wall and put her hands on it, leaning over with her back to me like I was performing a cavity search. She clearly wanted it in her favorite position and was wagging her tail as an invitation. An idea came to me.\n\n\"Actually, Sonja, how about you move in front of the window?\"\n\nShe didn't understand and didn't really care. She moved to the window and I took her from behind. Her face melted into a perverse smile as I penetrated her, grabbing her by the hips and beginning my onslaught of clam slamming. She looked into the window, giggling at the sight of her own reflection. It was for that reason that I had told her to move to the window, as now I could watch her downright ridiculous breasts swing and clap together every time I forced myself in. \n\nWatching them in the glass, those two tan melons bounce, I almost became angry. It just wasn't fair how sexy she was, no one has any business being this fucktastic. I wanted to bully those glorious tits like in bondage porn, put some clothespins on her nipples and whap them with a yardstick. Then her fluffy tail would sweep in my face and brush those dark thoughts aside. She was too sweet and innocent for stuff like that, and that was why I loved her, because she was a big glowing sun of happiness. \n\nAt the very least, I leaned over and grabbed her tits, holding onto them like handles as I rode her like a Harley. She liked it when I played with her breasts, especially during sex. \n\nShe looked at me with a smile and blushed. \"Master, you know how sensitive I am.\"\n\nI started patting her areolas, slapping them with just enough force to energize the nerve endings and make her shudder. \"And that's exactly why I'm playing with them.\"\n\nI then pushed her forward, up against the window. I continued slamming into her like a battering ram, letting her tits knock on the cold glass. She shivered from the chill, her areolas kissing the windowpanes and feeling the autumn bite. There was condensation on the glass, from both her breath and the sweat on her skin.\n\n\"My, my, look at how hard your nipples have gotten. They're almost like strawberries.\" I teased her, gripping her tits and pressing her nipples to the glass, just to see how large I could make them.\n\n\"That's because it's Master,\" she panted, suddenly looking embarrassed.\n\nI leaned forward and kissed her on the shoulder. \"But you know, more than your tits, I think what I love most of all are these soft puppy ears.\"\n\nI started nibbling on the furry flaps, bringing up Sonja's voice even higher. Having her ears nibbled, her boobs played with, and her pussy bombarded gave her a screaming climax, sapping all of her strength and leaving me to catch her. I was just about out of stamina and I had one more load to blow. It was time for the grand finale.\n\n\"Ok, girls, get on all fours with your tails pointed at me.\"\n\nThey got into position with Chloe in the middle and Momo and Sonja on the left and right. Before doing anything, I took a moment to appreciate the view, gazing as these three perfect asses. Life is good. I came forward and planted some kisses on their smooth cheeks, then stood up and leaned against Chloe. I guided myself into her, digging in balls deep. She moaned from the penetration, still not quite used to playing.\n\n\"Chloe, I want you to try moving this time. Can you do that for me?\"\n\nShe nodded and began rocking back and forth, at first moving just an inch at a time. Sonja and Momo looked at each other, wondering how long they would have to wait for their turns. Their answer came when I grabbed them both, sliding my fingers into their pussies at the same time. They moaned in euphoria, their sense of touch heightened after their last orgasm. I began fingering them, directing all the strength I had left into my arms. Thanks to Chloe, I was able to save my stamina, and she was gaining the courage to move more and more. \n\nBefore long, all three girls moaning like opera singers, and not just Chloe, but Sonja and Momo were both now rocking back and forth, slamming themselves against my hands to get my fingers as deep in them as possible. It was now taking quite a bit of strength to not be pushed away, but I had the sight of three beautiful girls to keep me going. I watched them, watched the muscles in their backs tense and relax beneath their smooth skin, watched them swing their heads like they were riding a rollercoaster, whipping their hair back and forth, and watched them look back at me, drunk from sexual euphoria but with eyes filled with love.\n\n\"ROOOOWR!\"\n\n\"ARUUUUU!\"\n\n\"EEEEEEEK!\"\n\nThe girls sounded off, each of them having a gushing orgasm, while I fired everything I had into Chloe, flooding her tiny body with my seed. We all collapsed onto the bed, using the last bits of strength to get under the covers. As usual, I was in the middle with Momo on my right and Sonja on my left, but this time, we had Chloe with us. She was under the covers, lying on top of me with her stomach against mine.\n\n\"See, Chloe? Wasn't that fun?\" I asked as I rubbed her head.\n\nShe looked up at me, a beautiful smile on her face. \"It was fun playing with Master.\"\n\nI laid my head back on the pillow, completely drained of strength. \"I love you girls,\" I said.\n\n\"We love you too, Master!\" they all cheered.\n\nWe pulled the covers over us and closed her eyes. I drifted to sleep, feeling Momo clutching one arm, Sonja clutching the other, and Chloe's soft breathing on my chest.\n\n***\n\nPlease comment! I really want to hear from you!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "animal girl",
        "cat girl",
        "dog girl",
        "comedy",
        "cute",
        "mouse girl",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/master-master-pt-05"
}