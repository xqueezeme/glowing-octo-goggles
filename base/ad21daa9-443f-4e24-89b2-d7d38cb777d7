{
    "title": "I Touch My Elf",
    "pages": [
        "\"So what do you want for Christmas?\"\n\n\"Laid.\"\n\n\"I'm being serious, sis.\"\n\n\"So am I.\" Standing against the kitchen's island, Eve idly twirled her spoon in the melted remains of her ice cream. \"I haven't gotten laid since June. Which, looking back, was a warning sign I completely missed. I should have known the bastard was getting some on the side.\"\n\nShe could hear an exasperated sigh from her sister on the other end of her phone. \"Eve, I keep telling you, you couldn't have known. No one knew! You know Mom would have been the first person to crow 'I told you so' if she had seen ANY indication that he was cheating on you.\"\n\nThe tip of the spoon scraped along the bottom of the ceramic bowl as Eve gathered up a runny mess of ice cream, chocolate syrup, and the remnants of a dollop of whipped cream. \"The one time I could have used Mom criticizing me is the one time she completely dropped the ball. So,\" she said as she swallowed the mixture of sweetness, \"what's your Christmas wish?\"\n\n\"For you to stop beating yourself up.\"\n\n\"I'll make it a New Year's Resolution. Fair enough?\"\n\n\"You HATE New Year's Resolutions.\"\n\n\"That's my point.\"\n\n\"OK. It's getting late and I have to finish wrapping presents. You ARE still coming for Christmas dinner tomorrow, right?\"\n\nIt was Eve's turn to sigh. \"I'll be there,\" she told her sister.\n\n\"Just do me a favor and dress up. Mom's still giving me an earful because you showed up for Thanksgiving in a ponytail and sweatpants.\"\n\n\"I wore lip gloss!\"\n\n\"Seriously, Eve. Promise me?\"\n\nWith a weary groan, Eve nodded even though her sister couldn't see her. \"I will make an effort to look presentable. I promise.\"\n\n\"Thank you.\" After a moment, her sister asked quietly, \"you're OK tonight, right?\"\n\n\"I think I am.\" Eve turned away from the kitchen island. Due to the lights being off, she could see the snow gently falling outside the window above the sink. \"This is the first Christmas Eve in five years that we're not together.\" Reaching behind her, she grabbed the empty bowl of ice cream and stepped over to the sink. \"Fortunately ice cream is a great distraction. Go wrap your presents, sis. I'll see you tomorrow.\"\n\n\"6 PM. Love you, Eve.\"\n\n\"I love you too.\"\n\nEve set her smartphone on the counter before washing out the ceramic bowl and putting it in the rack to dry. The dish sat alone, joined only by a single spoon. She couldn't help but feel the dissonance rolling over her at the sight. The kitchen was spotless, having been mopped and scrubbed earlier that day in a frenzied burst of cleaning. But several feet away, just outside the back door, was a garbage can overflowing with microwave dinner boxes and takeout containers. Even tonight's dinner had been delivered - sushi and wonton soup from A Taste of Taipei, with an entire quart of Reese's peanut butter ice cream for dessert. Eve knew that she'd regret it in the morning, but for the moment the ice cream coated and soothed the ache in her soul.\n\nAs she watched the snowfall through the window, Eve debated heating up a cup of hot chocolate but ultimately decided against it. A cold front had blown in over Emerald Pines that evening. Two, perhaps three inches of snow had fallen onto the windowsill, enough to cover the current snowfall with a fresh layer and guarantee central Colorado a gleaming white Christmas.\n\nAfter a few minutes of watching the swirling flakes as they gently drifted towards the ground, Eve found herself stifling a yawn. With a final glance at the snow, Eve left the kitchen, heading for the front steps. Her house, which thankfully had been purchased in her name, was an A-frame. The open-plan first floor consisted of a kitchen and dining area on one side and a living room on the other, separated by the staircase leading to the full bathroom/bedroom that comprised the second floor. The whole thing sat atop a two-car garage. It was meant to be a starter house for her and her former fiance, but now it looked like it would be Eve's home for the foreseeable future.\n\nShe switched off the front porch lights and walked into the living room area where a small writing desk sat in the corner. The brass lamp on the top shelf shone down upon a stack of unfinished...actually, Eve admitted, a stack of never-started...Christmas cards. Eve had set them down the previous weekend, intent on fulfilling her yearly tradition of keeping in touch with distant family and friends via a handwritten note. The cards were in a neat pile, as were the envelopes stacked next to them.\n\nEve's shoulders slumped as she stared at the pile of incomplete correspondence. \"Looks like you guys will be New Year's cards,\" she muttered, already knowing that promise was unlikely to come to pass. She reached out to turn off the lamp and head upstairs to bed. Before she could, however, her smartphone buzzed in the pocket of her sweatpants.\n\nUnlocking her phone rewarded Eve with a picture of her big sister. Her sis was surrounded by rolls of gift paper, several ribbon bows, and boxes of kids' toys waiting to be wrapped up. An exaggeratedly exasperated look was on her face as she gestured towards what Eve assumed was a pile of presents, all wrapped neatly in what appeared to be aluminum foil. The photo came complete with a caption - \"MY HUSBAND USED AN ENTIRE ROLL OF FOIL TO WRAP PRESENTS!!! IT LOOKS LIKE WE'RE GIVING BLOCKS OF UNCUT HEROIN FOR XMAS!!!\"\n\nImaging her sister bellowing those words in frustration brought about a tight smile and a quiet chuckle from Eve. She placed her phone on the writing desk as she slid into the chair. Pen in one hand and a fresh sheet of paper from the drawer in the other, Eve began to write. The pen painted black ink across the paper with smooth, bold, looping strokes. Once she was finished Eve blew on the paper to ensure it was dry before laying it out flat on the green blotter and giving her work a nod of approval.\n\n\"Dear Santa,\" she read out loud, \"this year for Christmas all I want is laid. Sincerely, Eve.\"\n\nShe took her phone and held it over the paper, taking a few seconds to get the best angle and lighting before snapping a picture and sending it to her sister. Once she heard the confirmation tone, Eve turned off the lamp and headed for the stars, leaving her comic missive to Santa behind on the desk.\n\nX X X X X\n\nAfter spitting her mouthwash into the sink, Eve leaned against the counter with both hands. In what had become an all-too-familiar addition to her nighttime ritual, she sighed regretfully as she looked at herself in the mirror. \"Eve,\" she told her reflection for the umpteenth time, \"you've got to stop letting yourself go.\"\n\nOnce upon a time, a slender, athletic, curly-haired 5'8\" blonde woman in her late 20's with a great rack and a fantastic butt would have been staring back at her. That version of her had come on sabbatical in mid-August. Now, her curls lay limp along her scalp. A body that once hovered around 150 pounds now sat just north of 170, with the extra twenty pounds spread out across her hips and midsection. The lean muscle she had worked so hard to pack on was melting away due to not having stepped foot in a gym since a half-hearted attempt Labor Day weekend. Worst of all, her posture was wrecked. Instead of standing tall and proud, Eve slumped when she stood up. Her shoulders hung forward and she could feel the hunch forming along her spine.\n\nThe deep breath she blew out caused her to slouch even further. \"Tomorrow,\" she lied to herself, also for the umpteenth time. \"I'll start fixing things tomorrow.\" She snapped the bathroom lights off, plunging the house into absolute darkness. She stripped down to her pink panties as she walked towards the king-sized bed, leaving her socks, sweatpants, and t-shirt scattered on the floor behind her. By the time she crawled under her thick quilt, Eve could barely keep her eyes open. Within a minute of her head hitting the pillow, she was out. The sound of her light snoring filled the A-frame as Eve fell asleep alone on Christmas Eve for the first time in five years.\n\nX X X X X\n\nThe clouds smothered the brightness of the full moon. The only illumination in the A-frame came from the glow of the street lamps reflecting off of the falling snowflakes. The light pushed its way through the living room window, drawing faint lines of orange on the edges of the furniture as well as along the corners of the fireplace. The gentle breeze accompanying the snowstorm shook the branches of the pine trees lining the opposite side of the road from Eve's house. The thin, spindly shadows cast into the living room shimmied and shook like an employee at an office's Christmas party after their third drink.\n\nThe shadows fell over Eve's mock letter to Santa, mixing the lines of shadow and ink. If one were to be standing in the living room at that particular moment and looming over the writing desk in that precise instant, they would have seen the shadows...bend somewhat. The wind outside the A-frame picked up, causing the pine trees to rattle from the abrupt onslaught. But while the shadows across the rest of the living room danced wildly, the shadows on the note continued to pull inward. When the shadows' tines touched the edges of the paper, the note crinkled. The shadows, now woven into a snaking series of five distinct lines, drew together until the edges of the paper were caught in their grip.\n\nThen the paper lifted off from the desk.\n\nThe shadows stood frozen and unmoving across the surface of the note as it hung in the air before drifting across the room. Turning end over end and side over side like a beanbag, the note coasted towards the fireplace and came to rest on the brick stoop. For a moment, nothing was stirring, not even a mouse. Then the wind intensified, enveloping the A-frame in its harsh embrace, and the piece of paper dashed into the fireplace and shot up the chimney.\n\nOnly to drop down into the ashes as it crushed itself against the closed flue.\n\nThe wind immediately subsided, becoming a gentle, muttering breeze for a moment before picking up again with a furious intensity that ripped through the air. The hatch to the flue dropped open with a deluge of gray soot. The crumpled letter to Santa began floating, hovering in the air several inches above the stoop before, with a final gust of wind, it flew up the chimney out of sight. The gentle clang of the flue closing echoed softly through the dark house.\n\nX X X X X\n\nA soft popping sound caused Eve to shift in her bed.\n\nThe sound of bottles and containers moving around saw her slowly opening one eye.\n\nThe loud clatter that arose from the kitchen made her shoot up in bed.\n\nSleep was quickly replaced by alarm. As she slowly regained her senses, Eve noticed a pale light shining up from the first floor. The sound of glass knocking against glass accompanied the light, along with what sounded like humming.\n\nShe glanced over at the alarm clock on her nightstand. Bright green numbers told her that it was 12:01 AM. As Eve slowly got out of bed, careful not to make any noise, the bright, cheerful humming continued from downstairs. Grabbing her t-shirt from the floor, Eve threw it on and tread softly down the stairs. She reached the bottom without incident. Looping around to the other side of the steps, Eve crouched down and peered around the corner. The light was coming from the open refrigerator and the humming was coming from whoever was going through her fridge.\n\nEve stood up, ready to go confront the intruder, before realizing she was wearing nothing more than a t-shirt and pink panties. A sense of exposure and vulnerability attempted to latch onto her, but it was quickly thwarted by the iron poker Eve grabbed from the fireplace. She gripped the poker in both hands as she noiselessly eased her way towards the kitchen. The intruder was still humming merrily while they rifled through her fridge. As she approached Eve recognized the tune as 'Carol of the Bells.'\n\nShe managed to make it all the way to the edge of the kitchen island, putting her within swinging reach of the intruder. The intruder made no sign that they noticed Eve. They were bent over at the waist, wearing a green dress with red trim that showed off a stunning pair of legs clad in red-and-white thigh-high striped stockings, topped off with a pair of shiny black leather ankle-height boots complete with three-inch heels. The intruder bounced slightly as they hummed the Christmas tune. Their hips swayed slightly, showing Eve a side-view of a firm, round, thick butt. If the intruder was wearing underwear, she couldn't tell from where she was standing.\n\nBringing the fireplace poker to the ready, Eve took a deep breath to screw up her courage before calling out. \"What the hell are you doing,\" she challenged boldly.\n\n\"Grabbing the milk,\" a high-pitched feminine voice answered casually. \"Here, take this, would you?\" An arm reached out towards Eve, holding a half-gallon of whole milk that Eve had purchased the day before. \"Just put this down on the counter for now.\" The request was accompanied by a gentle shake of the plastic jug, causing the milk inside to splash back and forth.\n\nEve blinked in surprise at the blatant display. The arm shook the container of milk with more vigor. \"Would you take this, please,\" the voice politely asked again. \"I still have to find the butter.\" When Eve didn't respond, the intruder sighed and tossed the milk behind her. The container landed perfectly on the island, barely wobbling as it settled.\n\nOf all the questions Eve had in that particular moment, it was the most unlikely one that she managed to ask. \"Why...why are you looking for the butter?\"\n\n\"To bake cookies,\" the intruder answered brightly. \"You didn't put up a tree this year, so the least you could have done was have some milk and cookies out for Santa. I found the milk but no cookies, so I'm just going to have to bake...there's the butter! Oooooooooh, salted...\"\n\n\"I...yeah, I prefer salted...wait! Who are you and why the hell are you in my house!\"\n\nThe intruder stood up. They closed the refrigerator and turned to look at Eve, holding the box of salted butter in one hand and waving in greeting with the other. \"Hello, Eve! I'm Holly, and I'm your Christmas present from Santa!\"\n\nThe fireplace poker came to rest against Eve's shoulder as she got her first real look at the intruder. They stood 5'1\", maybe 5'2,\" and weighed around 110 pounds if Eve had to estimate. The green dress she wore came complete with a black leather belt sporting a gleaming brass buckle and three peppermint-striped buttons leading up from the belt to the open red collar. Her lips were fire-engine red. Chocolate brown hair spilled out from underneath a tall green hat topped with a red fabric curl. The skirt showed off Holly's wide hips, while the shirt accentuated a pair of what Eve guessed was a firm pair of 36D's.\n\n\"You're...you're my what?\"\n\n\"Your Christmas present!\"\n\nHolly bounced on her feet as she answered. Eve's eyes were briefly drawn to her breasts as they jiggled on her chest, before reality set back in. She tightened her grip on the iron poker and brandished it towards Holly. \"I don't know who you are...\"\n\n\"I'm Holly!\"\n\n\"...but I want you to get the hell out of my house, right now!\"\n\nHolly set the butter down on the island next to the milk. Her hands went to her hips and a pout crossed her face as she looked at Holly. \"Why?\"\n\n\"...why? You broke into my house!\"\n\n\"No I didn't! I came down your chimney!\"\n\n\"That's...that's still breaking in!\"\n\n\"Well, how else was I supposed to get inside?\" She gestured towards the back door. \"All your doors and windows were locked. I wasn't going to smash the glass when there was a perfectly good chimney to hurry down!\"\n\n\"I...\" Eve leaned in close to study the intruder's green dress. \"If you came down the chimney, why aren't you covered in soot?\"\n\n\"I cleaned myself off! I wasn't about to walk through your house leaving ash everywhere! That would be rude!\"\n\n\"Look, I don't care how you got in here, but you have until I get upstairs and grab my phone to get out before I call the cops!\"\n\n\"Why would you do that?\" Holly motioned to her voluptuous body. \"I'm your Christmas present!\"\n\n\"Why do you keep saying that!\"\n\n\"Because that's what I am! You wrote a letter to Santa asking him to get laid for Christmas, so he sent me!\" Holly tilted her head and offered Eve a frown. \"And let me tell you, you got in JUST under the wire. We were actually about to shut down the mailbox for the year when your letter came ZOOMING past. I'm talking 11:59 and 55 seconds.\" Holly cocked her hip to one side and gently tapped a finger against her lips. \"Maybe that was for the best though,\" she hummed softly. \"If it had come earlier, you might have ended up with Noel. He's a little rough and usually gets sent to those on the naughty list.\"\n\nWhile Holly spoke, Eve's brain finished processing her initial statement. \"My...my letter to Santa? The one I wrote before I went to bed? How do you know about that! Were you watching me through the window or something! It was a joke between me and my sister! Besides, I haven't written a letter to Santa since I was a kid!\"\n\n\"Hey,\" Holly answered, still wearing that bright, friendly smile, \"rules are rules, no matter how old you are. You wrote a letter to Santa and since you were on the nice list this year, you get your present!\" Once again bouncing on her feet, Holly ran her hands over her shapely curves. \"Tada!\"\n\n\"You're my present. From Santa.\" Eve let the poker fall from her shoulder before pressing her palm against her face. \"I'm dreaming,\" she mumbled. \"I ate an entire quart of peanut butter ice cream before bed and now I'm having a weird dream because of it.\"\n\n\"You're not dreaming.\" Holly stuck out her arm. She turned it over and lightly pinched the skin of her elbow. \"Ow! See? I pinched myself and you're still awake.\"\n\n\"I said I'M the one who's dreaming...OW!\"\n\nHolly grinned as she pulled her hand back while Eve rubbed at the red spot forming on the back of her hand. \"See? That time I pinched YOU and YOU'RE still awake...hey!\" The intruder jumped back as Eve suddenly lashed out with the fire poker. \"OK, look, you're being a VERY naughty host right now!\"\n\n\"Get out!\" Eve swung again with the fire poker despite Holly being well out of reach. \"I don't care who you are or how you got in here, but I want you out of my house, right now!\"\n\n\"I told you, I shimmied down the chimney!\" Holly held up both her hands. \"I can prove it! There aren't any footprints on your back deck, your front porch, or outside your garage. If you check the alarm app on your smartphone it'll show that none of the door breaks were tripped. There's a pair of footprints in the ash on the log grille in your fireplace, and the letter from Santa isn't wherever you left it because it's currently at the North Pole!\"\n\n\"That doesn't prove anything!\"\n\n\"Um, it proves EVERYTHING,\" Holly said with the definitive tone of someone who spoke the absolute truth.\n\n\"Look, all I know is that I come downstairs at midnight because someone's raiding my fridge dressed like one of Santa's elves! Do you understand how that could be a bit unbelievable?\"\n\n\"First, it wasn't midnight, it was 12:01 AM. Second, I'm dressed like one of Santa's elves because I AM one of Santa's elves.\" She ran her fingers along the side of her head, pushing back her chocolate brown hair to reveal pointed ears. Eve inhaled sharply at the sight. A hint larger than normal ears, they tapered to a fine point against her scalp. With an eager grin, Holly knocked her fingers against the tips of her ears. \"See? Elf.\"\n\nAfter staring for a moment, Eve gently set the fireplace poker on the counter. \"You're...you're completely serious,\" she said quietly. \"You believe you're an actual elf. From the North Pole and everything.\"\n\n\"Yes I am!\" Holly's proud exclamation was accompanied by another joyful bounce.",
        "\"And you're here because you think I told Santa that I wanted laid for Christmas.\"\n\n\"There's no 'think' about it. You wrote it down in a letter to Santa, and Santa gets every letter that's addressed to him,\" Holly said earnestly.\n\nEve steepled her fingers over her mouth and nose. \"You know Santa doesn't exist, right? My Mom and Dad broke the news to me when I was seven years old. They brought me my presents, not Santa.\"\n\n\"Your Mom brought you practical presents like clothing and school supplies for Christmas every year. But remember when you were eleven years old and you REALLY wanted a Jet Ski Barbie? Your Mom told you not to be foolish, especially after you had written Santa for one.\" Eve slowly nodded before Holly continued. \"Come Christmas morning, wasn't there a Jet Ski Barbie waiting for you?\"\n\n\"Yeah...but...I figured Mom caved and bought it to shut me up.\"\n\n\"Then you don't remember your Mom shooting a glare at your Dad, who swore up and down he hadn't bought it for you? Santa got your letter, and since you had been a good girl that year, you got what you asked for.\" Holly offered Eve a sly grin. \"And that's just one example of all the times Santa's slipped a present or two under the tree for you.\"\n\nA distant memory of her Mom giving her Dad a stern talking to brushed at the edges of Eve's consciousness for a moment, before she shook her head. \"Lucky guess,\" she proclaimed. \"Besides, if, and I can't believe I'm saying this, you ARE a present from Santa, why did he send a girl elf?\"\n\n\"Like I said, you were the final letter we received for the year and all the other elves had been assigned! I was supposed to be on my way to Nevis right now for a well-earned vacation when your letter came in. And when duty calls, an elf always answers. If your letter had arrived ten seconds later, you would have had to wait until NEXT Christmas to get what you asked for! Well, maybe I could have shown up during Orthodox Christmas, but then I'd be treading on top of tricky theological territory...\"\n\n\"Look.\" Eve clutched her hands into fists and made a definitive gesture with them. \"Whether or not you're actually from Santa, I'm into guys. I'm not a lesbian...\"\n\n\"Amy Wickerman, Collette Hansen, Sierra del Sol.\"\n\nEve fell quiet. Her jaw slowly dropped open as Holly gave her yet another bright, friendly smile. \"You don't want your Mom to somehow find out. You're afraid she'd throw a fit, and you're right. Guys are your preference, but like a piece of spaghetti you're straight until you get wet.\"\n\n\"...how do you know that? I never told anyone, not even my fiance.\"\n\n\"Santa sees you when you're sleeping,\" Holly said matter-of-factly. \"Besides, all elves go every which way including loose. Oh, AND I managed to raid Santa's toy box before I got here.\" She pointed towards the kitchen table. Eve turned to see a large red canvas sack with white trim resting amidst the place settings. \"If you want to be happy in a million ways,\" the elf proclaimed, \"I have you covered.\"\n\nAs Eve stammered, trying to form words, Holly moved closer. Eve took an involuntary step back. Just one, however, as Holly came right up to her. The faint smell of gingerbread filled the air as Holly sized her up. \"OK. I admit that this is weird. I'm not exactly the kind of Christmas present someone finds under their tree. But I am telling you the absolute truth. I'm a gift from Santa. You ended up on the 'nice' list this year. Admittedly, it was by a technicality. You were actively nice to people for the majority of the year, but then you were...passively nice because you didn't do anything to offend or hurt anyone, and that's because you didn't do anything at all.\"\n\nHolly reached out and placed her hand on Eve's hip, just above the waistband of her panties. Her hand was warm, almost soothing, like the heat from a cozy fire. \"Still, you were a good girl this year,\" Holly said. The bright, overbearing cheerfulness in the elf's tone had been replaced by a quiet sultriness that reflected in both Holly's voice and in her eyes, which Eve noticed were sapphire blue. \"You deserve this. Either I'm a dream, and you can just sit back and enjoy yourself, or I'm truly a present from Santa Claus who's ready and willing to jingle your bells.\"\n\nEve stood frozen as Holly put a hand on her other hip. The elf leaned forward. Her breasts pressed against Eve, who trembled as she felt another body for the first time in months. \"So Eve,\" Holly whispered, her breath a warm breeze against Eve's ear and neck, \"are you going to accept your Christmas present or not?\"\n\nAfter a moment's deliberation, Eve's answer came by way of her arms wrapping around Holly's neck. The elf murmured happily as Eve cautiously embraced her. \"I've...never been with an elf before,\" she laughed quietly.\n\n\"Don't worry. You'll be gentle.\" With that, Holly pressed her full, beautiful lips against Eve's.\n\nThe elf tasted of cinnamon and spice. What began as a hesitant kiss on Eve's part quickly turned hungry as four months of pent-up frustration bubbled over. Eve pulled Holly into a tight embrace. Holly immediately responded. One hand slipped to the small of Eve's back, just above the waistband of her pink panties, while the other found itself tangled in Eve's blonde curls. Holly's lips were hot against Eve' and her tongue was sweet as it slipped inside Eve's mouth. Their tongues dueled one another in an intricate dance that ended only when Eve pushed her entire body forward, bearing down on the shorter Holly and all but shoving her tongue down the elf's throat. Eve's bold actions drew a joyful giggle from Holly as she tried to reciprocate.\n\nAt no point did Eve try to come to terms with the fact that she was apparently snogging a mythical creature in the middle of her kitchen while snow fell outside the window. She was hopelessly adrift in the kiss. A familiar pressure gripped Eve's lower body as she made out with Holly, a pressure she never realized she missed and now desperately craved. Her kiss turned from hungry to passionate. She turned Holly, pinning the elf against the kitchen island. \"That's it,\" Holly squealed happily, \"that's the concupiscence I was hoping for!\"\n\nEve had no clue what 'concupiscence' meant. Instead of asking she resumed kissing Holly. Trapped between Eve and the kitchen island, Holly returned the curly-haired blonde's kiss with an ardor that almost overwhelmed her. It forced Eve to redouble her efforts, which in turn made Holly turn the intensity up a notch. Eve quickly found herself short of breath, but instead of pulling away, she kept kissing Holly and kissing her hard.\n\nOne hand found its way to Holly's breast. Eve palmed the firm mound, which barely gave way to the passionate squeeze. \"Oh wow,\" the elf cried, \"that feels amazing! Do that again!\" Her cheerful request seemed out of place in the hot and heavy makeout session, but Eve did as asked. Her fingers slid across and around the swell, drawing a sigh of elation from Holly. \"Ooooooooooooh, harder please,\" she groaned when Eve pinched her nipple. It stiffened between Eve's fingers as she trapped the nubbin between her fingers, adding a slight twist that made the elf jump. \"That hurt,\" Holly admitted, \"in a good way!\"\n\nAs Holly resumed kissing Eve she pushed against the taller woman, trying to free herself from being pinned against the kitchen island. Eve refused to budge. She held her ground, which only made Holly try harder. The elf's hands went to Eve's breasts. Holly's fingers pressed and danced against her chest, causing the pressure between Eve's legs to build as if someone had just added high octane fuel to her raging libido.\n\nEve allowed her passion to build and build, savoring the flames and embracing them like a long lost lover. Eventually, much to her delight, it became too much for her to take. Her hands began clutching at the hem of Holly's dress, seeking the bare skin underneath. When her fingers brushed against Holly's bare thigh, the mere thought of what lay nearby caused Eve to shiver with desire.\n\nBefore she could move her hand closer, however, Holly broke their kiss. \"Wait wait wait,\" she said, waving her hands in an attempt to call Eve off. Caught off-guard, Eve backed off just enough for Holly to squeeze free from her confinement. The elf ran her hands along her face as she proclaimed, \"whoo hoo. I forgot how intense being with a woman can be. Golly, you're a spirit.\"\n\nTaking advantage of the pause to catch her breath, Eve used a nearby dishtowel, fresh from the dryer that afternoon, to wipe the thin layer of sweat from her face. \"Is something wrong,\" she asked, panting. \"Things were pretty...fierce back there.\"\n\n\"Oh no!\" The red tip of Holly's cap bounced about as she shook her head. \"No no no no no no no. You're fine.\" Holly reached up and booped the tip of Eve's nose, even making the accompanying sound effect. \"You're great! I'm great! This is great! I'm just...I almost made a mistake. You were trying to take my dress off, right?\"\n\n\"That was my immediate goal.\"\n\n\"Good thing I caught myself in time then.\" With that, Holly lifted her hand and snapped her fingers. In an instant, Holly's clothes were gone. In their place was now a two-piece bikini made of wrapping paper. Eve blinked as Holly looked nodded with approval at her near-naked body. \"There we go,\" she exclaimed proudly. \"NOW I look like your Christmas present.\" Holly's breasts were hidden behind green-and-stripped foil wrapping paper wrapped tightly around her chest, with just enough exposed skin to make Eve's mouth water. Her lower body was also covered, from her waist down between her legs. A few stray strands of brown hair poked out from the edges of the foil. \"Sorry about that,\" Holly offered, chagrined, \"but who waxes in winter?\"\n\n\"...how did you do that?\"\n\n\"What, change clothes? Magic, silly!\"\n\n\"Yeah, silly me.\" Disbelief was beginning to creep into the fringes of Eve's mind, but she did her best to shove it back into the mental ether. She could feel herself getting wet at the sight of the short and stacked Holly clad only in wrapping paper that begged to be ripped and torn away to reveal the soft-yet-firm flesh underneath. \"Um, you know,\" Eve said as she eyed Holly longingly, \"for a Christmas present, you're missing something pretty important.\"\n\nA frown crossed Holly's face. \"I am?\"\n\n\"Every present needs a bow, right?\"\n\nThe frown quickly turned into a smile that gleamed in the soft light coming from above the kitchen sink. \"Of course! What kind of Christmas elf would I be if I had overlooked the bow? I would have been the laughing stock of the North Pole! Good catch!\" She gazed down at her body, studying her makeshift bikini with intense scrutiny. \"What color ribbon should I...oh, DUH. I am completely distracted by the sexy tonight!\" With another snap of her fingers, Holly was immediately tied up with a silver bow. The ribbon crossed her body in an 'X' pattern, falling across her shoulders and around her waist. The bow itself rested against her impressively flat stomach. \"There we go! How do I look?\"\n\n\"Amazing,\" Eve said, licking her lips.\n\n\"Great! Then get over here and unwrap your present!\"\n\nEve promptly responded. She crossed the short distance between her and Holly and laid a firm kiss on her lover. The elf's hands pressed against the side of Eve's face with the warmth of a freshly poured cup of cocoa. \"Careful,\" she warned teasingly at one point, \"you don't want to crush the bow!\"\n\nEve took hold of one end of the silver ribbon. It took only a single tug for the bow to come undone. The ribbon flowed over Holly's shoulders and waist like mercury, drifting to the floor like a leaf caught on a gentle winter breeze.\n\nThe heat inside of Eve quickly reached the point it had before Holly's clothing change. Her fingers roamed her lover's body. Holly's smooth skin was free of blemishes, bumps, scars, or beauty marks. The wrapping paper crinkled noisily as Eve blatantly groped her like a curious teenager, causing the elf to coo merrily.\n\nEve's longing soon overcame her patience. She grabbed the foil paper top in both hands and eagerly ripped at it. To both her frustration and her delight, there was another layer of wrapping underneath. Peeling away the second layer only revealed a third. As handfuls of ruined paper began flying through the air, Holly beamed like a gift-giver watching someone opening their present.\n\nEventually, Eve pulled away the final layer, revealing a pair of breasts that filled her with envy. Holly's round, firm tits were practically perfect, with dark brown areolas topped with hard nipples the size of gumdrops. \"Oh my God,\" she breathed as she laid eyes on them. \"Those are amazing.\"\n\n\"Aren't they?\" Holly cupped them with both hands to give them a little jiggle. \"My friend Pepper thinks hers are better, but all they've got going for them is perkiness.\" The elf's eyes closed as she gave them a firm squeeze, a little sigh escaping from her as well. \"As far as I'm concerned, my plum puddings bring all the boys to the yard.\"\n\n\"The girls too.\"\n\nHolly opened her eyes. A sly smile crossed the elf's face before she grabbed Eve by the back of her head and unashamedly shoved her face first between her boobs, doing so while shaking her body.\n\nEve's mouth immediately found one of Holly's breasts. She licked and sucked the firm skin while letting her fingers glide over the other mound. Running her tongue along the underswell drew a gleeful reaction from Holly, whose fingers gently wove themselves among Eve's curly blonde hair. It had been several years since Eve had been with a woman but the feeling of Holly's boobs and the promise of what lay underneath the bottom half of her festive bikini combined to push Eve's arousal to heights she hadn't experienced in months. If she had been alone Eve would have torn off her panties and shoved her fingers wantonly between her legs. Instead, the wetness between her legs began to soak into her underwear as she enjoyed Holly's bounty.\n\nTo Eve's surprise, Holly's stiff gumdrop-shaped nubs tasted faintly of actual gumdrops; cherry, to be exact. She wrapped her lips around a nipple and gently pulled it into her mouth, running her tongue along the top and areola. \"Jiminy Christmas,\" she heard Holly gasp, \"you don't miss a lick!\" The elf's hand came up to Eve' against her other breast. Holly squeezed tightly, a signal Eve picked up on. She rolled and pinched one nipple while dragging her tongue across the other one. Holly's breath quickened. The grip of her fingers in Eve's hair only served to encourage her.\n\nBy the time Eve took Holly by her hips, the elf was panting slightly. With a yelp of surprise, Holly found herself lifted into the air, spun around, and set on the edge of the kitchen island. The elf quickly pulled Eve close to lay a sizzling kiss on the blonde. Holly's deft fingers clutched the front of Eve's t-shirt as they made out. \"Hey, this is his t-shirt, right?\"\n\n\"Yeah,\" Eve admitted. \"I never got around to throwing it out.\"\n\nThe rapid tearing of fabric filled the kitchen as Holly proceeded to tear the garment in half with one firm tug. The urgency that had fueled Eve's passion morphed into regret as Holly forced the ruined shirt down Eve's arms, revealing her neglected body. The extra inches around her waistline and the surplus pounds she had packed on since August cried out for attention. Once again, Eve began to have doubts about what was unfolding...\n\n\"WOW!\"\n\nThe tattered t-shirt fell to the floor as Holly bounced on the counter, clapping her hands together with vivacity. \"Fa la la la la, you look GREAT almost naked! I mean, that is just...\" The elf leaned to one side, whistling gaily as she did so. \"Oh golly, your butt looks fantastic too! Slice up the fruitcake, it's time we hung some tinsel on that evergreen bough!\"\n\n\"You're just saying that,\" Eve offered weakly.\n\n\"Hey,\" Holly squeaked, looking hurt. She jerked a thumb towards herself. \"Santa's elves don't tell lies! Just because you let yourself go a tad when your fiance left doesn't mean you still aren't to be admired!\"\n\n\"I can't...\"\n\n\"Ain't no can't, 'cause you're everything that's possible.\" With that, the elf leaned back on the counter, holding herself up with her arms. A saucy smirk spread over Holly's face as she teasingly spread her legs to reveal the gift-wrapping between her legs. \"Now, set the self-doubt off to the side. You've got a present to finish opening.\"\n\nEve stepped hesitantly between Holly's knees. Reaching out, she pulled the wrapping-paper bikini bottom away to reveal a fresh set underneath. Her self-confidence began returning in rolling waves with each layer she tore from the elf's body. The red-and-green foil filled the air like snowflakes in a howling storm. By the time she wrested the final pieces of paper away, Eve brimmed with the eagerness that could only be found on Christmas morning.\n\nThe wrapping paper cluttered the ground at Eve's feet as Holly's womanhood...elfhood? No, womanhood...was revealed to Eve in all its glory, crowned by a thick patch of brown hair a little overgrown and slightly wild. Her full, plump lips pressed together tightly, hiding the secret flesh underneath. Eve found herself taking a step back. Her eyes roamed the elf's body, from the bright, merry smile on her face down to her exquisite rack, along her flat stomach and coming to rest between her legs. The blonde trembled from the thrill she was feeling at that particular moment. When Holly teasingly reached down her body and carefully pulled her lips apart to allow a glimpse of the warm, soft pink flesh beyond, Eve's wet tunnel began yearning desperately for something, or someone, to clench and grip against. She eagerly licked her lips as Holly lewdly splayed herself open for her.\n\n\"Well,\" Holly teased with a racy tone, \"aren't you going to play with your present?\"\n\n\"I'm...taking a minute to admire it,\" Eve answered. \"You must be the hottest elf at the North Pole.\"\n\n\"Awwwwwwwwwwwwww! You know how to make an elf feel special! Between you and me though, Mrs. Claus is one hot-out-the-oven piece of Christmas cake, if you know what I mean.\" Holly offered Eve a brazen look before glancing down her body. Eve watched as Holly effortlessly dipped her finger inside of her pussy. A resonating sigh escaped from the elf. Her head fell backward as she slid her finger in and out of her body in a lewdly exaggerated manner. Her other hand went to her breast. Holly moaned as she pinched the gumdrop nipple between two fingers, giving it a slight twist that served to turn the moan into a high-pitched gasp of joy.\n\nHolly had begun to squirm on the countertop when Eve stepped forward. She gently took hold of Holly's wrist. Caught in the light from the snowstorm shining through the window, the elf's fingers gleamed with her wetness. Eve's eyes smoldered with lust as she brought Holly's hands to her mouth and licked her fingers like a candy cane.\n\nEve looked directly at Holly as her tongue pulled every last drop of wetness from her fingers. Holly's essence held a subdued hint of mulled apple cider. As opposed to the craving in Eve's eyes, Holly appeared jovial and carefree. It was as if the only thing she cared about was making sure Eve enjoyed herself.\n\nAfter positioning herself between Holly's legs Eve leaned in to kiss her. The cinnamon and spice of Holly's lips mixed with the lingering taste of cider to fill Eve with a flaring warmth. She began kissing her way along Holly's neck, drawing a merry murmur of approval from her lover. \"I have a question,\" she whispered. \"Would you get in trouble if I left any hickeys or marks on you?\"\n\n\"Of course not,\" Holly giggled. \"I'm YOUR present. You can do whatever you want to me.\"\n\n\"Anything?\"\n\n\"Anything, silly! I got a look at your file on the trip down from the North Pole and there's nothing you're normally into that would make me uncomfortable. I'll tell you what. If you start doing something that makes me feel icky, I'll tell you. Does that make you feel better?\" Eve nodded before resuming laying her lips against Holly's throat. \"Mmm,\" the elf said, resting one hand lightly against Eve's shoulder, \"you're a great kisser Eve. Has anyone ever WOWIE WOWIE WOW!\"",
        "Holly's loud exclamation accompanied her whole body jolting like a live wire as Eve nibbled on her pointed ear. Her nails dug into Eve's shoulder, sending a flare of pain through the blonde's body. \"Wow...oh, wow...\" Suddenly short of breath and trying to recover, she turned to look at Eve. \"I should have told you,\" she panted, \"an elf's ears are one big erogenous zone. You have to be careful when...\"\n\nEve' cut off Holly's warning by firmly biting down on her earlobe. Holly's back arched and she grabbed Eve's shoulders with both hands as Eve proceeded to ravish Holly's ear with her teeth and tongue. She took care when running her tongue along the pointed portion, but the sensation was still enough to cause Holly to writhe. While she nibbled on Holly's ear, Eve ran her hand gently along the elf's throat before bringing it down to her breasts. Her fingers sought out Holly's nipple. It was hard and firm under her touch, barely giving way when Eve gave it a determined pinch. Holly's gasps turned briefly into a high-pitched whine of ecstasy as Eve maintained the pressure for several seconds. Eve let up with her fingers only to immediately nibble on Holly's ear. She worked her way up to the pointed tip and lightly flicked it with her tongue.\n\n\"Ooooooooooooooh!\" A sharp quiver ran through Holly's body. She clutched at Eve as not to flop onto the kitchen island. Eve pulled her lips back, giving Holly a moment to catch her breath before clamping down on her nipple again. The sight of Holly's body reacting to her touch was intoxicating to Eve. The elf's breathing quickened as Eve began alternating between nibbling on Holly's ear and squeezing her breast, causing her to writhe on the countertop. Her other hand brushed against the inside of the elf's thigh. Holly groaned with anticipation, but the groan turned into a frustrated whimper as Eve dragged her fingers towards Holly's center, only to pull back at the last moment. Eve toyed with the dense thatch of hair between Holly's legs, all the while maintaining her alternating attention to the elf's ear and nipple.\n\nMaybe this wasn't a dream. Maybe there was a Santa Claus, and maybe he had sent one of his elves to sleep with her. Not just an elf, but a female elf. Eve had been exclusive and faithful to her ex-fiance for five years. The touch of a woman's body, its curves, its softness, its secrets...in one way, Eve felt as if she was reuniting with a long-lost friend, sharing and reminiscing over a cold beer.\n\nIn more crude, vulgar, and honest terms, Eve was incredibly turned on and desperate to fuck.\n\nThere was no hesitation on the blonde's part as she pressed her index finger against Holly's lower lips. They parted without effort, allowing Eve's finger to easily slip into Holly's soaked tunnel. A relieved moan escaped from Holly. The elf gripped the countertop as Eve relished in the sensation of the elf's soft, dripping walls pressing firmly against her finger. She pulled her hand back, leaving only the tip of her finger inside of Holly, before pushing forward again. Holly's head fell back, her eyes closed and mouth slack with pleasure, only to once again scream with joy as Eve's tongue ran across her stiff nipple.\n\nEve licked Holly's breasts, first one then the other, as she began fingering the elf. Any attempt to be soft and gentle quickly fell by the wayside as Eve quickly set a vigorous pace. The wet sound of her finger thrusting in and out of Holly's pussy filled the kitchen, and quite possibly the entire A-frame. Holly's legs were spread wide, giving Eve full access to her womanhood. The sensation of her fingers easily sliding in and out of Holly, glistening with her wetness, spurred Eve on. She could feel the pressure against her own pussy, desperately craving to be filled. It caused her to twist her wrist and begin fucking Holly with two fingers.\n\n\"Oh wow, wow, wow!\" The elf looked down between her legs, watching Eve's fingers sliding in and out of her at a rapid pace. \"That feels good,\" she proclaimed. When Eve curled her fingers slightly, dragging them across a textured patch along the ceiling of her pussy, Holly's eyes shot open wide. Her butt briefly came off of the counter before dropping back down. \"And THAT feels SUPER good!\"\n\nAfter several moments Holly began breathing rapidly. Eve bore down with determination, keeping the same rapid pace with her curled fingers. One of Holly's hands clenched into a tight fist. It slammed against the kitchen island's surface while her body started to shake. \"Oh wow,\" she exclaimed enthusiastically, \"oh wow, oh wow, oh...\"\n\nWhen Eve bit down on the trip of Holly's ear, the elf cried out with raw, primal bliss. Her hips bucking wildly as she came. Eve felt Holly's tunnel gripped rhythmically at her fingers before a rushing torrent of hot liquid flowed over them. Eve kept her fingers inside of Holly as the elf was lost in the throes of a potent orgasm. Eventually, her body came to rest. Eve carefully pulled her fingers from her body. They were coated with the elf's wetness. A single stray drop fell from the tip of Eve's index finger, splashing against the wooden floor. Panting hard, Holly could only watch as Eve once again proceeded to lick her essence from her fingers, relishing the muted taste of apple cider mixed in with the natural flavors. \"Wowie wowie wow,\" Holly said. \"That was...wowie.\"\n\nEve couldn't help but laugh at Holly's joyful nature. \"I hope that wasn't too much. It's been a while since I've been with a woman. I forgot...how into it I would get.\"\n\nHolly giggled. \"It's fine, silly! Like I keep telling you, I'm YOUR Christmas present! You can play with me however you want!\"\n\n\"Um, about that...\"\n\n\"What?\"\n\n\"...well...you get to play with me too, right?\"\n\nHolly lowered her head and stared at Eve with hooded eyes. \"Why do you think I brought the bag of toys,\" she asked sultrily before jumping down from the kitchen island. She seized Eve's wrists with both hands before kissing her, shoving her tongue into her mouth even as she drove Eve backward. Eve found herself wrested down onto the kitchen floor amidst the ruined foil wrapping of Holly's bikini. The cold floorboards, sitting above the garage, caused her to squeak in surprise until Holly pressed her warm body atop hers. Eve's hands were forced against the floor as the smaller elf somehow held her in place.\n\nHolly straddled Eve, pushing her hips down against hers. Eve moaned as the pressure in her lower body was relieved. She pushed back up against Holly. Holly continued kissing her fervently, keeping her pinned to the floor. A brief memory flashed through Holly's mind - her and her brand new fiance making love on the kitchen floor - before Holly squeezed her thighs against Eve, yanking her back the here and now.\n\nSweat was beginning to form on Eve's brow when Holly sat up, letting go of her wrists in the process. The elf's slender fingers moved down Eve's arms with a feather's grace. They drifted over her breasts, drawing a murmur from Eve, before coming to rest on her stomach. Holly traced small circles on Eve's skin. Eve sighed approvingly as the pressure between her legs continued to grow. When Holly ran her fingers along the waistband of Eve's panties, the blonde shifted her hips in anticipation.\n\nAfter teasing Eve for a moment, Holly lifted a hand into the air. With a beaming smile, she once again snapped her fingers. Something immediately pricked lightly against Eve's stomach. She looked down her body to see a bough of mistletoe resting just below her bellybutton. \"What's that,\" she inquired.\n\n\"I'm going to kiss you under the mistletoe, silly!\"\n\nGoosebumps rose along Eve's body in anticipation of what Holly promised. \"You're definitely into the spirit of Christmas, aren't you?\"\n\n\"Of course! Christmas is the BEST time of the year! Putting up reindeer, singing songs of joy and peace - that's why Santa does everything he can to make sure people are happy on Christmas Day. Like sending me to you!\"\n\n\"I guess I'll have to write him a thank you note then.\" Eve ran her hands along Holly's thighs. \"Would you mind if we took this to the bedroom? I'd rather be spending time with you in a warm bed than on a cold kitchen floor.\"\n\n\"Whatever you want!\" Holly snapped her fingers. The mistletoe vanished, as did the ruined pieces of crumpled wrapping paper on the floor. The elf leaped spryly to her feet, offering a hand to pull Eve from the ground. As Eve got to her feet, she noticed that the milk and butter were no longer sitting on the counter either.\n\nAfter a firm embrace and a brief kiss, Eve led the elf towards the stairs. The second floor was a loft that had been converted into an open-air bedroom and adjoining bath. A king-sized bed sat against the wall, with a thick down comforter pulled back to reveal red sheets underneath. \"Oooooooooooooooh,\" Holly exclaimed as she was brought into the bedroom. \"It looks cozy! This is going to be a lot comfier than the kitchen floor!\"\n\n\"That's the...oooof!\" Eve was cut off as Holly unexpectedly shoved her onto the bed before pouncing on her. Eve wrapped Holly up in a tight embrace, arms across her shoulders and legs behind her butt, as Holly pressed her down into the mattress. What followed was several minutes of hot and heavy makeout action. Eve couldn't keep track of what was going on. It was a hot, heavy, wet blur of lips, tongue, teeth, and fingers. Holly's body was warm against her. The faint scent of gingerbread mixed with the cinnamon and spice taste of Holly's lips to serve as a holiday-themed aphrodisiac.\n\nEventually, Eve began gently pushing against Holly's shoulders. Holly glanced up at Eve and gave her a wicked grin. Without breaking eye contact the elf kissed Eve's cheek before running her lips along the side of Eve's neck. Eve nodded in approval as Holly softly nibbled on her pulse point before continuing to move downward. She made a brief detour to lick Eve's nipples, first one and then the other, before dragging her tongue in the valley between her breasts. Holly's eyes never wavered while she kissed her way down Eve's stomach. The apprehensive Eve drew at the thought of the extra pounds around her midsection turned into a sharp gasp as Holly pinched one of her nipples, adding a little twist that caused Eve's back to arch slightly.\n\nAs Holly kissed Eve's belly button her fingers took hold of Eve's underwear. Eve could feel the soaked fabric peeling away from her body as Holly pulled her panties down, stripping Eve completely nude to reveal a thin layer of blonde fuzz atop her womanhood.\n\nHolly balled up the pink panties and casually tossed them over her shoulder. Without any dilly-dallying, the elf pushed Eve's knees apart and dove straight between her legs. A jolt of bliss shot through Eve when Holly firmly ran her tongue over her throbbing clit. As Eve shuddered from the intense sensation, Holly slippers her hands under Eve's butt. She gripped the firm flesh, holding Eve in place as she began licking her.\n\n\"Oh my God,\" Eve called out. Her toes curled, bunching the bedsheets between her toes. One hand twisted in her blonde hair as jolt after jolt of ecstasy raced through her body. It didn't take long for Eve to become a shuddering, quivering mess. Her soaked pussy begged for something to tense against, but Holly continued to pleasure her using only her tongue, lashing it against her clit with short, sharp licks. \"Oh God, Holly,\" Eve pleaded, \"use your fingers, please.\"\n\n\"Hmmmmmmmmmmm...nah,\" Holly said, shaking her head.\n\n\"Why not,\" Eve whined.\n\n\"Because you wanted me to play with you!\" A long, slow lick punctuated Holly's statement.\n\n\"This isn't...isn't playing. It's torture.\"\n\n\"It'll be worth it! Trust me!\"\n\nEve wanted to argue, but Holly's repeated licks were beginning to take her to the edge. It was a slow crawl, however. Each time Holly's tongue brushed against her clit was pure torture. Eve moaned desperately as each lick built the pressure higher and higher, bit by agonizing bit.\n\nShe was about to lose her mind when the familiar heat blossomed in her lower body. It flashed through her like a roll of thunder, heralding the arrival of an all-consuming orgasm. All the muscles in Eve's body tensed like a coiled spring while her pussy spasmed. Each pulse saw her tense more and more until all that energy was released in an erotic cry of torrid passion that resonated across the A-frame. A rush of wetness flowed from her like a raging river. The edges of her vision were framed in black for a brief moment before she collapsed onto the bed, her body spent.\n\nAs her breath fluttered just out of reach, Eve felt something curl up next to her. An arm was thrown gently across her stomach as Holly molded herself against Eve. \"So,\" she coyly inquired, \"worth it?\" All Eve could do was nod in tired agreement, but the slight acknowledgment still brought a squeal of joy from Holly. \"Yay! This old girl's still got it!\"\n\nEve turned her head to look at Holly. \"You don't look old.\"\n\n\"Oh, I'm over a thousand years old! Which, don't you worry, is well above the age of consent in Colorado.\" Holly tenderly ran her finger along Eve's stomach. \"Been a long time since you came like that, huh?\"\n\n\"Months,\" Eve answered. \"I can't even feel my toes. Wow. Just...wow.\" She smiled as she reached up to touch Holly's face. \"Wowie, even.\"\n\nHolly giggled as she snuggled up against Eve. \"Break time then. How about some water?\"\n\n\"Yeah...but I don't want to move and I don't want you to move...\"\n\nOnce again there was the snap of fingers, followed by Holly holding up a red-and-green striped squeeze bottle. The ice-cold water inside quenched Eve's parched throat. Holly took a swig as well before underhanding the bottle onto the nightstand where it landed perfectly. \"So,\" the elf asked as she ran her finger along Eve's ear, \"are you enjoying your Christmas present so far?\"\n\n\"If I am dreaming,\" Eve answered, \"this is definitely the most vivid dream I've ever had. The wettest too.\"\n\n\"Silly Eve. You're not dreaming! I keep telling you, I'm your present from Santa!\"\n\n\"Does Santa usually send his elves out as gifts?\"\n\n\"Only to good people who ask for it and deserve it. He's not a pimp, and we elves aren't a bunch of ho-ho-ho-hoes.\"\n\n\"And you don't mind?\"\n\n\"Duh! The entire point of working in Santa's workshop is to make people happy for Christmas! As long as no one gets hurt...well, no one gets hurt if they don't want to get hurt...this is just part of the job! A fun part too! And no,\" Holly said, putting a finger against Eve's lips, \"I'm not just saying that. You were magical with your fingers down in the kitchen. I watched you lick your fingers clean after all.\"\n\nEve turned onto her side. Holly's feet casually brushed against hers as the two women got comfortable. \"You...tasted like apple cider. Is that normal?\"\n\n\"Yep! Girl elves are made of sugar, spice, and everything nice,\" Holly explained. Her hands gently roamed Eve's flank, to the blonde's murmured approval. \"The gingerbread, that's my perfume. I was hoping to meet someone at the airport in Alert, a rugged lumberjack or lumberjill type, hit the Mile High Club like I do every year. Everything else, that's all natural.\" After a moment, Holly perked up. \"Hey, we're 8000 feet above sea level! Score! The streak's intact!\"\n\n\"Glad I could help,\" Eve chuckled. Her hands slipped around Holly's waist. The elf giggled as Eve cupped the soft flesh of her butt. \"Maybe I'm not dreaming. I'm not creative enough to imagine someone like you. And if I was dreaming, I'm pretty sure my ex would show up...\"\n\n\"Hey.\" Holly pressed her finger firmly against Eve's lips to shush her. \"No. Ex. Talk. He's up and gone. I'm here and now. You're not allowed to be sad this Christmas, Eve.\"\n\n\"I know. And I'm not.\" Eve sighed. \"But I spent five Christmases with him and he just up and ditches me for his co-worker. At least he left before we started putting deposits down for the wedding...\"\n\n\"There you go! Way to find the silver lining!\"\n\n\"Nothing ever gets you down, does it?\"\n\n\"There's always a thread of hope to pull on and unravel the sad!\"\n\n\"I wish I had your optimism.\"\n\n\"You don't need optimism, you just need your self-confidence back!\"\n\n\"I know.\" At the look of disbelief on Holly's face, Eve stressed, \"I know! Seriously, I know. Just...tomorrow. I'll start fixing things tomorrow.\" After a moment, Eve flopped onto her back. \"Who am I kidding? I've been saying 'tomorrow' since Cabrini Day. Is this where I'm supposed to say 'and this time, I mean it?'\"\n\n\"Yeah it is!\" With a bright, eager smile on her face, Holly crawled on top of Eve. \"Say it with me. And this time, I mean it!\"\n\nEve gave it her best effort. \"And this time, I mean it.\"\n\n\"Oh come on! And this time, I mean it!\"\n\n\"And this time, I mean it.\"\n\n\"Seriously?\" Holly sat up on her knees. She put her fists against her hips and gave Eve a disappointed pout. \"Muster up some enthusiasm! Hey, would it help if I played with my boobs?\" Holly clasped her large breasts with both hands. Eve shifted underneath Holly as she pinched both nipples, pulling them away from her body with a quiet groan. \"Actually, would it help if YOU played with my boobs?\" Holly grabbed Eve's hands and placed them against her chest. Licking her lips, Eve repeated Holly's actions. She tweaked the stiff nipples, squeezing them between her fingers. Holly nodded with approval. \"There you go,\" she sighed happily. \"Now, one more time, with authority. And this time, I mean it!\"\n\nLaughing with disbelief, Eve took a deep breath. \"And this time, I mean IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIITTTTTTTTTTTTTTTT!\"\n\nEve's hands fell away and her body arched off the bed as Holly reached between their bodies and ran her thumb over Eve's clit. The elf rubbed the nub several times, turning Eve's proclamation of confidence into an ardent cry of bliss. \"So,\" Holly said as she pulled her hand away, \"are you ready to get laid?\"\n\n\"God, yes,\" Eve managed to get out.\n\n\"Yay! Now, where did I leave that sack of toys...\" Holly looked over her shoulder and waggled her fingers. After a moment the red sack that had been sitting on the kitchen table rose into view above the wooden railing. Eve watched in amazement as the bag floated across the bedroom. Even as it landed on the mattress Holly was tearing it open with unrestrained glee. \"I had to grab whatever I could from the toy box,\" she explained, \"so I don't know quite what I have in here.\" She began rummaging through the bag. \"No, that's not fun...that one's too messy...don't like THAT one...oooh, maybe? Aw, it takes D batteries. Never batteries around when you need them...oh, wow! It finally came out!\" She pulled her arm from the sack and thrust it into the air. \"You are going to LOVE this!\"\n\nEve sat up at the sight of what Holly was holding - a thick seven-inch long cylinder with red-and-white striping, curved slightly in the middle with a familiar mushroom tip and a black rubber stopper surrounding the bottom. \"Is that...is that a candy cane dildo,\" she asked warily.\n\n\"It's a candy cane strap-on...ish.\" Holly twisted it in her hand, giving Eve a good look at it. \"The guys and dolls in the lab have been working on this since 1987. That was a fun year - every kid wanted a Koosh ball and they were SO easy to make!\"\n\nEve stared at the striped toy with apprehension. \"Um, Holly, that's not an actual candy cane, is it? Because I don't want to put anything that sticky inside of me.\"\n\n\"Oh, don't worry about that! It looks like a candy cane...\" Holly gave the strap-on a slow lick. \"...oooooooooooooooooh, it tastes like one too, but it DEFINITELY isn't sticky. See?\" She held it out towards Eve. Eve gently wrapped her fingers around the candy cane. It was smooth and firm under her grip, but her hand came free easily when she pulled away.\n\nDespite the unusual nature of the toy, Eve could feel her body beginning to respond. The strap-on was longer and thicker than her ex-fiance's penis. More importantly, it would finally satisfy the yearning of her pussy to be filled. \"OK. So, how does it work? I don't see any straps.\"",
        "\"That's cause it's a pop-on. Watch!\" Holly brought the toy down to her groin. Biting her lip in concentration, she carefully pressed it against the patch of brown pubic hair. After holding it in place for a second, there was a loud pop that caused both Eve and Holly to jump. \"Ooooooh, that's...different.\" Holly pulled her hand away. The candy cane hung from her body without any visible means of support. \"Wow, check THAT out,\" she joked. \"It's hands-free!\" Once again reaching down, Holly ran her fingers along the shaft. The motion caused her entire body to shake with a short, sharp motion. \"Oh, wow\" she shivered, \"it's connected right to my happy button!\"\n\n\"Your what?\"\n\n\"My happy button!\"\n\n\"You mean your clit?\"\n\n\"Yeah! My happy button!\" Holly stroked herself again. \"That's the stuff,\" she groaned.\n\n\"What's it feel like,\" asked Eve, curious.\n\n\"It feels good. Fantastic. But...like, a distant good. The pop-on is telling me that it feels good instead of it, you know, feeling good by itself.\"\n\n\"Well, does it have an instruction manual or some kind of guide?\"\n\n\"Maybe. I wouldn't be surprised if they forgot to include it though.\" Holly began rummaging through the sack once again. She squealed slightly as Eve gently brushed the candy cane with her toe. \"Hey, no distractions! It's a mess in here. Oh, wow, that's where that Beyblade went. That was a hectic year...wait, wait, I think...hey, they remembered them!\" The elf triumphantly pulled a small sheaf of paper from the bag. She squinted while beginning to read the instructions. \"Merci d'avoir achet\u00e9 le Joyeux Joyeux No\u00ebl jouet conjugal. Cet appareil doit \u00eatre \u00e9talonn\u00e9 avant utilisation. Oh, duh, it needs to be calibrated first!\"\n\n\"How do you calibrate it?\"\n\n\"Oralement. Orally.\"\n\nEve crossed her arms with a saucy smirk. \"Holly, is this your way of asking me to blow you?\"\n\nA rosy blush tinted Holly's cheek for a moment. \"I mean, if you want the pop-on to work so I can lay you properly. I'd do it myself, but I'm not THAT flexible.\"\n\n\"I suppose,\" Eve said with faux resignation, \"I'd be willing to make that sacrifice.\" She sat on the edge of the bed and motioned in front of her. \"Stand over here,\" she instructed Holly. Holly gracefully climbed off the bed while Eve slowly slipped down onto her knees.\n\nPart of her mind was trying to deal with the absurdity of the time past midnight - that she was about to give a blow job to one of Santa's female elves. Or that she was going to come off like one of those women in a 'lesbian' Pornhub video who moans wantonly while 'blowing' another vocal woman wearing a strap-on. The rest of her mind, however, was much louder and more vocal in telling her that she came this far.\n\nOnce Holly stood in front of her, Eve took hold of the candy cane pop-on in one hand. There was no stickiness, no sense of adhesion, and it was warmer and harder than any cock she had ever held. Shaking her head one more time in disbelief, Eve leaned forward and ran her tongue around the head of the toy. She was rewarded with the inviting taste of peppermint. \"Huh,\" she murmured, \"it DOES taste like a candy cane.\"\n\n\"Told you,\" Holly giggled. The giggle turned into a soft groan of approval as Eve repeated the action. Her tongue lingered a hint longer than before. Her fingers slowly stroked the toy's shaft. They glided easily up and down its length, causing Holly to hum quietly. \"Oh, jeez, no wonder the male elves masturbate so much,\" she observed. \"Your tongue feels SOOOOOOOOOOO good Eve.\"\n\nHolly's praise encouraged Eve. As best she could Eve wrapped her lips around the tip and gently sucked like...well, like she was sucking on a candy cane. Holly tensed up. One hand shot out to grip Eve's shoulder as she struggled to keep her balance. \"OK, OK,\" she panted, \"the sensitivity on this thing is turned up. You're going to need to go slow...OH WOW, THAT'S NOT SLOW!\"\n\nEve's hand rapidly jacked the toy's shaft while she applied firm pressure with her lips, adding a swirl of her tongue for emphasis. She began running her lips up and down the upper portion of the candy cane toy. Holly moaned. Her head fell back while her other hand gently played with Eve's blonde hair.\n\nAs Eve worked over the pop-on, she could feel it beginning to change. Her mouth slid further down the shaft as it shortened, enabling her to take a greater proportion between her lips. It also softened, going from 'hard' to 'firm.' Holly's gasps lessened in intensity however they became more frequent. \"Oh wow, oh wow, oh wow,\" she proclaimed acutely, \"it's definitely calibrating. This feels freaking amazing!\"\n\nEve pulled her mouth away. \"What's it feel like,\" she teased as she gently stroked the pop-on.\n\n\"Like your mouth is on my happy button non-stop.\"\n\n\"You know what this needs? Balls. Something to fondle and play with.\"\n\n\"Balls, yeah...or silver bells to jingle! I'll let the boys in the lab know.\"\n\nAs Eve resumed blowing Holly, she maintained the familiar, rapid pace. Sooner than she expected, Holly began shifting her hips, trying to keep the toy in Eve's mouth as much as she could. \"OK,\" she panted, \"I think it's calibrated now. You can...oh, wow...oh wow...ohwow...Eve, I think...I think I'm going to explode!\" Eve could hear the flapping of paper as Holly desperately flipped through the manual. \"En atteignant le point culminant, le prototype \u00e9mettra des flux color\u00e9s de...um, Eve, you might not want to swallow...oh no, oh no, here it comes!\"\n\nEve pulled the toy out of her mouth. By reflex, she aimed the tip towards her breasts as she would have with her ex-fiance. Holly's hands clenched and unclenched. She held them in front of her face with her forearms and elbows pressed together. She made a sequence of high-pitched noises before letting loose with a loud, strangled gasp. Eve braced herself, her face turned away from the toy as she eyed it warily...\n\n*POP*\n\nThe toy throbbed in her hand just before a powerful stream splashed against her chest, followed quickly by several more. Eve turned to look, keeping the toy pointed downwards, to see an outpouring of a glittering liquid coat her chest, painting it with rainbow hues. By the time Holly shuddered a final time with one last jet of liquid, Eve's torso was painted with sparkling ribbons of brightly colored cum.\n\nHolly stumbled to the edge of the bed. She sat down and fell backward, breathing heavily as she stared at the ceiling of the A-frame. \"By the North Pole, that felt amazing. I'm reeling like a merry-go-round.\"\n\nEve stood up and gestured to her dripping chest. \"You need to tell the engineers to turn it down a bit. It looks like an entire craft store came on my tits.\" As she spoke, a warm, pleasant tingle was beginning to spread across her torso. \"Holly, this stuff's non-toxic, right? I'm feeling a little tingly here.\"\n\n\"It's fine. The liquid's just super sweet. I didn't want you to end up swallowing enough sugar to put you right to sleep.\"\n\nCuriosity got the better of Eve. She scooped up a single drop of glimmering liquid and dabbed it against the tip of her tongue. Immediately a bomb of overwhelming sweetness exploded in her mouth. Eve gagged from the sheer ferocity of the taste. \"Oh my God,\" she croaked, \"that was ONE drop? It tastes like I just ate an entire CASE of cream cheese frosting from Costco!\"\n\n\"Sorry about that. I should have read the manual first. Apparently, this is just the prototype and it's not ready for release yet.\" She gestured towards the toy, which hung limp against her thigh. \"That's why the instructions were in French. Rochelle usually takes these kinds of toys for a test run, and she is on her way to Toulouse tonight for her vacation.\"\n\nThe warmth was continuing across Eve's body as the liquid ran down her stomach. \"In any case,\" she told Holly, \"I should probably wipe this off...\"\n\nHolly, moving with surprising speed, lashed out and grabbed Eve by the waist. In an instant Eve was thrown onto the bed, an action that caused a different kind of warmth to flare up deep inside her pussy. Instead of pouncing on Eve, Holly quickly used both hands to smear as much of the colorful liquid over the blonde's body, ensuring her back and butt were covered too. Somehow there was enough cum to coat Eve nearly from head to toe.\n\nThe heat soaked into Eve's skin as Holly turned her over. Her breathing quickened. A familiar red flush bloomed across her chest. Her nipples were as hard as diamonds. Her legs spread of their own accord. She was as soaked as she had ever been in her life, but somehow she could feel herself becoming even wetter. Overcome with lust, Eve began to writhe lewdly. Her sense of civility was replaced with a raw, primal, desperate urge to be fucked without mercy. \"Goodie,\" she heard Holly clap, \"they remembered the aphrodisiac!\"\n\nLost in the throes of anticipation, Eve looked at Holly. \"Fuck me,\" she pleaded desperately. \"I'm going to go insane if you don't.\"\n\n\"OK!\" Holly's eager reply was a stark contrast to Eve's needful request. \"Let me reset this first.\" The elf held out her hand, palm down, and snapped her fingers. A shimmering cloud of blue dust drifted over the limp toy. In a matter of seconds, the pop-on went from laying flaccid against Holly's thigh to proudly jutting into the air. Eve shifted her hips, offering herself to Holly. The elf positioned herself between her legs. Taking a firm grip of the toy, Holly teasingly ran its tip along Eve's drenched lips. The mere touch caused Eve to push forward, trying to catch the pop-on inside of her.\n\nWith a playful giggle, Holly pulled away. A distinctly unladylike tone escaped from Eve that spoke of desperate need. Holly pushed forward again, pressing the tip directly against Eve's clit, eliciting a cry of relief from the blonde. The rush of pleasure that raced through her, however, did nothing to quell her yearning to be stuffed like a stocking. She twisted on the bed, her craving obviously to Holly who continued to tease her.\n\nEve's body was a raging inferno, both inside and out. Only the tattered remnants of her pride stopped her from begging Holly to stop playing around and just fuck her. She was being subjected her to yet another round of exquisite torture when suddenly Holly threw her hips forward. Eve bent like a Christmas wreath, as the incredible feeling of the pop-on pushing her lips open to glide easily inside of her. Her pussy rejoiced with bliss that made her toes curl and her eyes roll towards the back of her head as her pulsing walls were finally pushed apart by the toy's thickness.\n\nHolly's shivering rejoinder held only a fraction of the pleasure Eve was enduring at that moment. \"Maybe they made that stuff too potent...\"\n\nEve lashed out with her arms, yanking Holly down atop of her. The blonde's hips started thrashing of their own accord, trying desperately to generate any sort of friction against the toy buried inside of her. Holly grabbed Eve's wrists and forced them down into the mattress while kissing her passionately. She brought her hips back before pushing, burying the pop-on deep inside of Eve. Eve's resulting moan was shockingly immodest. She had never felt so wickedly charged. The sensation of Holly pulling the pop-on out was exceeded only by the pure joy at her thrusting it back inside of her. \"Oh wow, it's so warm,\" Holly exclaimed. \"If this is what it's like for guy elves, no wonder they're so randy all the time!\"\n\nHolly began moving in and out of Eve with a steady pace. As she did Eve could feel the toy itself changing. With each thrust it became longer and thicker, filling more and more of her, touching every single inch of her velvet walls. She had never been penetrated so deeply, so fully. Her entire body felt engulfed in a searing inferno. Each time Holly drove inside of her was another can of gasoline poured directly onto her raging libido, sending the flames higher and higher. \"Harder,\" Eve urged. \"Harder, please!\"\n\nHolly responded. She braced herself above Eve, using her arms for support as she kept Eve pinned down. Holly's chest now sported several smeared streaks of the aphrodisiac. Her thrusts became more forceful. Each one threatened to drive Eve through the mattress down into the box spring. Sweat dotted Holly's forehead. Her fingers laced with Eve', giving her the balance and leverage to pound Eve hard and deep. \"You feel amazing Eve,\" Holly exclaimed lustfully as she ground her hips against her. \"So wet...so tight...\"\n\nEve began moving her hips, matching Holly thrust for thrust, helping the elf fuck her. Her legs were as wide as she could make them, further than Eve had ever had them before, opening herself completely to Holly. The elf stretched her pussy without mercy, slamming into Eve like a howling blizzard.\n\nEve's climax rocketed towards her, and she embraced it with a vivacious moan. Eve tried desperately to tear her wrists free from Holly's grip as she thrashed on the bed. When she finally came, it was with the force of a thunderous avalanche. Her lower body bucked wildly due to the wave of pulsing heat. The pop-on was caught in the vice-like grip of her pussy as it clenched against it, coating it with a torrent of hot liquid from deep inside of her. Bliss like Eve had never felt before tore against her body, resulting in a resounding high-pitched cry of pure pleasure.\n\nAnd through it all, Holly continued to fuck her.\n\nEve's climax darted from one peak to another, a constant rush of euphoria that threatened to overwhelm her. Every time it felt like Eve was beginning to come down, another thrust from the elf would prolong her orgasm. She could feel the essence flowing from her womanhood with every contraction. By the time it was over, Eve was covered with sweat. Her blonde hair was a sprawling, tangled mess across the sheets while her soaked tunnel quaked with aftershocks.\n\nAs she lay helpless on the bed, Holly pounded her mercilessly. Eve was a ragdoll, her legs and arms bouncing wildly while her face twisted in continued ecstasy. Another climax eventually wracked her body, and all Eve could do was ride it out and let rhapsody overtake her, moaning like the ravished woman she was as her pussy spasmed again and again. A third one soon followed. And then another. And another. She didn't ask Holly to stop, however. She craved more. She wanted her Christmas present to wring every last drop of wetness from deep inside of her. She yearned for the pop-on to fill every single inch of her.\n\nThrough the thick mist of rapture enveloping her body, Eve could feel Holly's thrusts become faster and deeper. \"Oh wow,\" she heard. \"Oh wow, oh wow...oh Dasher...oh Dancer...oh Prancer, oh Vixen...oh Comet oh Cupid...ohDonnerohBlitzen...RUDOLPH THE RED-NOSED REEEEEEEEEEEEEEEINNNNNNNNDEEEEEEEEEEEEEEEEEEEEER!\"\n\nEve managed a relieved cry as she felt the pop-on pulse inside of her before her pussy was flooded with wet warmth. A look of sweet torture crossed Holly's face. Her cry of triumph echoed all through the house. After several deep, shuddering breaths Holly fell forward, collapsing atop Eve. Both women were panting, their bodies slack and unable to do anything more than try to recover. Eve managed to pull her wrists feel from Holly's grasp. She flopped an arm over the elf's back, holding Holly close.\n\nIt was Holly who spoke first. \"The air is thinner in Colorado. I completely forgot about that.\"\n\n\"Mmm-hmm,\" Eve softly agreed. She sighed as Holly gently pulled the pop-on from inside of her leaving behind a delightful tingle thanks to Holly's cum coating its soft walls. Both women once again fell quiet. Eve's body ached deliciously. For the first time since late summer, she felt completely and utterly satisfied. Her entire body smoldered with a pleasant warmth. Holly's body weight pressing down on her was simply icing on the cake.\n\nA soft pop came from between them. Eve felt something soft shift across her thigh. \"Don't need that anymore,\" Holly muttered softly as she set the toy on the bed. \"That was almost too much, even for me. I came close to blacking out there at the end. Whoo. No wonder guys are tired after they're done.\" With a tired smile, Holly ran her fingers along Eve's scalp just above her ear. \"So, did you enjoy your Christmas present?\"\n\n\"Yes,\" Eve answered with tired enthusiasm. \"Very much so. I haven't been laid like that...ever. You put my ex to shame.\" She gestured towards the discarded toy. \"That thing is amazing but it's way too powerful to go underneath someone's tree.\"\n\n\"Oh, it's never going public.\" Holly rolled off of Eve. She flopped down onto her stomach and put her head against her arms. \"The lab isn't just about making toys for Christmas. It's about making toys for us elves too. When you're working at the North Pole it's easy to feel isolated, so Santa makes sure we get a chance to blow off steam.\"\n\n\"By having sex?\"\n\n\"Well, yeah. Sex is a GREAT way to pass the time. After the Christmas rush every elf has to leave the North Pole by 12:01 AM on December 26th. We all take a couple of weeks of vacation, come back to work Orthodox Christmas, and then start getting ready for next Christmas. Vacation aside we only get five days off a year - the equinoxes, the solstices, and May Day. And we celebrate all those with a big orgy.\"\n\n\"...I...OK, wow. I didn't think Santa Claus swung like that, but I guess...\"\n\n\"Oh, no, no no no, the big guy doesn't swing. He's got an image to maintain for kids all around the world. Now, Mrs. Claus, SHE'S a wild one. It was actually something she did with a candy cane back in the '70s that gave the boys in the lab the idea!\"\n\nEve laughed. She rubbed her hands over her face. \"I will never be able to look at a mall Santa and his elves in the same way again.\" When she pulled her hands away, Eve found herself looking at Holly wearing the joyful grin she had become familiar with in the past hour or so. \"Did you have bushels of fun being my Christmas present, Holly?\"\n\n\"Duh! I'm worn out but my happy button feels like a joy buzzer, AND I put a smile on your face on Christmas Day. My job here is done!\"\n\n\"It is?\"\n\nThe joyful grin faded a bit. \"You asked to get laid for Christmas. You got laid. So, yeah. There's nothing else left here to do for me to do.\"\n\nEve rolled onto her side. \"That kind of cold and clinical.\"\n\n\"Hey, it's the nature of being a Christmas present. Sooner or later, you get put away. It happens.\"\n\nEve's eyes roamed Holly's sweat-soaked body. As she took in the elf's large breasts, faintly painted with the smeared remnants of the toy's essence, voluptuous hips, and deep blue eyes, Eve felt something kindle between her legs. Despite the proper rogering she had just endured, the embers of desire began glowing inside of her once again. Her pussy burned with low, constant heat, and somehow she could feel her nipples stiffening. \"No,\" she said, shaking her head. \"No, I'm not ready to put you away yet.\"\n\nHolly smiled. \"You're sweet, but...\"\n\nEve pressed a finger against her lips. \"No buts. You're my present, right? I decide when I'm done playing with you.\" After a moment, she pointed towards the other side of the bed. \"Will that thing pop on to a human?\"\n\nHolly glanced over her shoulder. \"Ooooooooh,\" she whistled as she laid eyes on the discarded candy-cane-striped toy. \"Oh, Eve, I don't know. That toy was overwhelming for an elf. I don't know if you could handle it.\"\n\n\"I want to try.\" Eve got to her knees. As she reached over Holly's body, Holly raised her head and gently took one of Eve's erect nipples in her mouth. Eve took a hold of the toy but remained on all fours as Holly sucked on her tits, first one, then the other. She switched back and forth, lavishing both erect nubs with her tongue. Her actions were kindling to the heat building along Eve's womanhood. Her yearning to be filled had been quelled. What she felt at the moment was arousal born by curiosity. Here was a chance to experience what it was like for guys. Maybe it would give her some insight as to why her ex-fiance broke it off with her...",
        "...no. Forget him. Why he left didn't matter anymore. This was simply an opportunity for Eve to experience sex from the other side. No way was she able to pass it up.\n\nShe got back onto her knees. The toy was warm and once again hard as a candy cane. \"So how does this work,\" she asked.\n\n\"You just press it between your legs and it'll...pop on automatically. Eve,\" Holly said worriedly, \"are you sure about this?\"\n\n\"...yeah.\" She nodded confidently. \"I've never used a strap-on before. Tonight's been all about firsts, so what's one more?\" With a deep breath, Eve held the toy in both hands and pushed the black stopper against her thin layer of blonde pubic hair. When nothing happened, Eve tightened her grip and pushed harder, her forearms tensing...\n\nThere was a quiet pop. And then Eve felt the toy stiffening.\n\nThe sensation was overwhelming. \"Oh my,\" she breathed. It felt like blood was pumping into the throbbing toy. She took her hands away. The toy slowly rose, eventually pointing almost straight out from her crotch. The feeling of hardness was nothing that Eve had ever felt before. Not only could she feel it in the toy that was temporarily a part of her, but a dull, pulsing, needy ache was making itself known on her clit. Her fingers were spread wide, unable to close due to the unfamiliar sensation making its way throughout Eve's body. The yearning was once again present, but this time Eve didn't want to be filled. She wanted to fill something.\n\n\"How does it feel?\"\n\n\"...it kind of hurts. But in a good way,\" Eve clarified. All the arousal she normally felt inside of her was outside of her, save for the deepening pressure on her clit. She carefully wrapped one hand around the pop-in and ran it along its length. \"Oh my God,\" she whispered at the long, lingering sensation. \"This feels...so different, but so amazing.\"\n\n\"You know, it could feel better.\" A mischievous smile touched Holly's lips. \"It probably needs a bit of calibrating.\" With that, Holly slid forward on the bed. Before Eve could say a word, either in support or protest, the elf wrapped her lips around the tip of the pop-on.\n\nA wave of pleasure rolled down the shaft of the toy. It bloomed between Eve's legs, becoming unbearable for a moment before Holly pulled away, only to flare up again as Holly began exploring more and more of the pop-on with her lips and tongue. Eve groaned with ecstasy. The bliss resonated not just along the toy, but also in her clit, as if Holly was somehow blowing her and licking her simultaneously.\n\nHolly had been right. It was almost too much for Eve to take. She had to keep a hand on Holly's shoulder for balance. The simple act of Holly stroking the underside of the toy with her fingers caused Eve's entire body to quake. Soon after, however, the intensity began to lessen. Even as the toy hardened between Eve's legs the pleasure began to come in steady waves as opposed to crashing thunderbolts. It was enough to make Eve moan and pant, but not enough to break her. Holly pulled her head back. She ran her tongue along the tip of the toy with an eager smile before once again swallowing Eve.\n\nEve's other hand played with Holly's hair. When her stray fingers brushed against Holly's ear, the elf made a muted noise of approval before applying constant pressure on the toy with her mouth. She drew her lips up towards the tip, causing Eve's fingers to dig into Holly's shoulder. Holly began alternating between licking and sucking, keeping just enough of a rhythm to lull Eve into a false sense of security before switching techniques. Eve's attempts to play with Holly's ears fell short. Using her hands was the only thing she could do to keep herself upright under holly's oral assault.\n\nEventually, the pleasure began to once again ramp up. An unbearable pressure built inside of Eve, wrapping itself around the rigid shaft of the toy. \"Oh God,\" Eve exclaimed as the feeling peaked sharply to a point-of-no-return. \"Holly,\" she warned, \"I'm going to...\"\n\nEve misjudged the timing of her eruption, and Holly barely had time to firmly wrap her lips around the toy's shaft. It convulsed with a pain of the sweetest silver as Eve exploded in Holly's mouth. Euphoric cries accompanied Eve's orgasm. It felt like her clit was going to burst as pulse after pulse of cum flowed into Holly's mouth. The elf's eyes were closed, holding the toy with one hand as she greedily sucked down every drop that the toy could offer her.\n\nAfter pulsing one final time, Eve fell back on her knees, pulling the toy free from Holly's lips. She felt incredibly drained. If asked at that moment to describe the difference, Eve would have noted that female orgasms were internal, rolling throughout one's body, while the climax she had just experienced was external, focusing on the pop-on and clit. Her groin was sore, and at the moment she didn't feel like moving.\n\nHolly wiped her lips with the back of her hand. \"Wow, that IS sweet. They used a frosting base in there. I'm going to have all kinds of feedback when...when...\"\n\nThe elf fell quiet. Her head fell to one side. Eve watched as Holly's mouth dropped open. Her tongue ran loosely along the inside of her lips. \"Holly,\" Eve asked worriedly, \"are you OK?\"\n\n\"I...yes and no...\" Holly's pupils dilated while she spoke. A thin layer of sweat formed along her hairline. A red flush spread across Holly's chest like spilled wine, and as Eve watched Holly's nipples swelled on her chest, sitting atop her breasts like pebbles. \"I just swallowed...all of that aphrodisiac,\" she told Eve. \"It's...wowie...it's POTENT stuff. That's...oh jeez, I really should have read the rest of the manual...\"\n\nDespite the concern in Holly's voice, Eve could feel the pop-on beginning to harden. The sight of the elf beginning to fall sway to the toy's essence was turning Eve on. \"What...what do you need me to do,\" she asked, hoping for a specific answer.\n\nHolly was beginning to shiver. She ran a hand through her brown hair, pulling on it as her breath quickened. \"I need...I need...\" Suddenly Holly thrust her other hand between her legs. She moaned lewdly as she began rubbing herself. \"...oh wow, I need...I need you to play with me, Eve! Right now!\"\n\nAlthough she was working from a small set of data, the site of Holly furiously masturbating in front of her made Eve harder than she had been all night. \"Are you sure,\" she teased, resisting the urge to hurl Holly to the mattress then and there.\n\n\"Oh my stars, YES!\"\n\n\"Hmmmmmmmmmmm...nah,\" Eve said, shaking her head.\n\nHolly whined in frustration. \"Why not?\"\n\n\"You said the same thing to me earlier. Fair's fair. Unless...\"\n\n\"Unless what,\" Holly pleaded desperately.\n\n\"...you ask me nicely.\"\n\nHolly's eyes told the entire story of her arousal. \"Play with me,\" she asked, her voice inadvertently taking on a husky tone. \"Please, Eve. I want you to play with me.\"\n\n\"Then turn around and get on your hands and knees.\"\n\nHolly immediately followed Eve's orders. She faced the headboard and planted herself on all fours. Her ample butt cheeks framed her quivering silt. Eve ran her hand along Holly's flank, causing the elf to sigh in anticipation. Any urge to tease or engage in any sort of foreplay was far from Eve's mind. She settled onto her knees behind Holly and took the rigid pop-on in her hand. She placed the tip against the entrance to the elf's pussy. The simple touch sent a wicked charge through Eve. Without preamble, she shoved her hips forward.\n\nHolly moaned like an animal in heat as Eve plunged into her depths. The hot, tight, wet tunnel caused Eve to moan as well. She had to pause as the new sensation threatened to send her hurtling towards the same point-of-no-return she had felt during Holly's blowjob. She began moving with slow, careful thrusts. Holly voiced her approval and began pushing her hips back, trying to encourage Eve to go faster. The blonde took her time, however. She had only been inside of Holly for less than half-a-minute and the urge to simply go buck wild and cum as quickly as possible was threatening to consume her.\n\nWith each thrust, Eve could once again feel the pop-on changing. The sensitivity was toned down while at the time the toy grew longer and thicker, causing an unexpected sense of pride to fill Eve. She quickly found a steady rhythm. Her hips smacked against Holly's butt, causing the cheeks to ripple, as she pushed herself hard and deep inside of her lover, burying as much of the pop-on as possible as often as she could inside of Holly's silky smoothness. The warmth coating the toy felt amazing. Holly's essence dripped from Eve's faux cock each time she pulled out.\n\nIt was the friction, felt in her clit thanks to the technological wizardry of the North Pole, that spurred Eve on. Somehow each stroke squeezed Eve's button in a way she had never experienced before and would probably never again. She could feel her lungs working harder and sweat forming on her body. Her fingers dug into Holly's hips. Blissful moans came from both women as the wet sounds of their fucking filled the A-frame.\n\n\"Oh wow,\" Holly began to scream after several minutes. \"Oh wow...oh wow...OH WOWWWWWWWW!\" Her womanhood pulsed around the pop-on as the rest of her body seized up, lost in the beginnings of a potential orgasm. Eve continued thrusting, not letting up, keeping the same pace. Holly's upper body dropped to the mat, crying out passionately while Eve took her from behind. Eve almost came at the feeling of hot, sticky honey pouring over her pretend cock as Holly's body climbed for its climax.\n\n\"Uh! Uh! Uh!\" Holly pushed herself back to all fours. Her back arched as she raised her head to the ceiling. \"That's it,\" she called out as she finally came, \"that's it, that's it, OOOOOOOOH YEAH THAT'S IT!\" Eve gritted her teeth as Holly's pussy clenched her tightly. She had to force the pop-on deep, rewarding both her and her lover with exquisite bliss.\n\nWhen Holly finally collapsed onto the bed, spent, Eve stopped, only for the elf to look over her shoulder. \"Keep playing with me,\" she urged. \"I want to feel you inside...OH YES, YEAH, PLAY WITH ME, EVE! PLAY WITH YOUR CHRISTMAS PRESENT!\"\n\nEve had become a jackhammer behind her. Her body protested - her tired, sore, exhausted body. But the pop-on, the toy...her cock...demanded satisfaction. The scorching friction along her length burned her clit with a white heat. It climbed higher and higher with every single thrust, especially when Holly began screaming in orgasmic delight once again. Eve kept driving in and out of her like a hot running engine, all conscious thought giving way to nothing more than the urge to spill the toy's essence deep inside of Holly.\n\nHolly's moans slowly faded. They became little more than coos and whimpers as her body went limp. Eve barely noticed. She was holding Holly up by the hips, and her arms ached from the effort. Her whole body felt like it was on fire. Her skin burned with an erotic heat, especially where she was driving into Holly's pussy, and a raging inferno was threatening to consume her from the inside.\n\n\"Oh God,\" Eve exclaimed as the two fires began to merge, pushing her towards that unfamiliar but welcome point-of-no-return. Her hips became a blur. At this point Holly nothing more than a warm, tight hole begging to be filled. Holly was helpless, shaking like a ragdoll, as the ecstasy inside of Eve finally boiled over.\n\nThere was a brief moment where Eve felt nothing at all. And then the pop-on erupted. Pleasure she had never known before consumed Eve as her orgasm engulfed both her fake penis and her clit. She spasmed wildly each time the pop-on shot its load. Her hips shoved forward of their own accord, burying itself to the hilt deep inside of Holly, as she came and came again.\n\nThe outward explosion of bliss combined with the rhapsodic fire burning inside her was finally too much for Eve's body to take. Her head began to swim, and the darkness that had crept around the edges of her vision several times finally enveloped her like a weighted blanket. She fell backward. The pop-on pulled free from Holly's body, its shaft streaked with bright rainbow essence. As Eve collapsed onto the mattress, her final conscious thoughts were of wicked pleasures and the faint scent of gingerbread that filled the air.\n\nX X X X X\n\nThe first thing Eve realized was that she was cold.\n\nThe second thing Eve realized was that she ached both inside and out.\n\nOpening her eyes, she found herself staring at the wooden beams crossing her A-frame's ceiling. A groan came from her lips as she attempted to sit up, only for her body to utterly and completely ignore her. The simple act of trying to move set off a dull ache that convinced her that the best course of action was to remain where she was.\n\nAs she came to her senses, Eve realized that she was lying naked at the foot of her bed. The sheets were a tangled mess. Her hair was twisted in knots. And she was deliciously sore, especially between her legs where her pussy ached like it had been ridden hard and put away wet.\n\nEventually, Eve managed to get to her feet. Pale light shined through the bedroom window. She stumbled over to the window, her body protesting every step of the way. Outside the window, the evergreens were covered with sparkling snow. Eve could see some of the plows working to clear the mountain roads, while the sidewalks in the center of town had already been shoveled. Light flurries drifted through the sky, the final remnants of the snowstorm looking for their resting place.\n\nAs she looked out the window, fragments of the previous night began dancing in her head. \"Wow,\" Eve told herself, \"that was one hell of a wet dream.\" That's what it had to have been, right? One of Santa's elves making love to her? A female elf, no less? With a candy cane dildo? No, it had been nothing more than a dream brought on by months of a repressed sex drive, self-loathing, and a quart of chocolate peanut butter ice cream. An incredibly realistic dream, as told by the pleasant ache throughout her body, but a dream nonetheless.\n\nAfter watching the snow for a few minutes, Eve turned to clean up and begin her day. As she walked past the mirror on her dresser, however, she caught a flash of color. Her chest was dotted with faint streaks and dull swirls of what looked like dried chalk. She brushed her fingers against her skin. They came away coated with some sort of sticky powder.\n\nOne morning routine later, which included a hot shower and clean clothes, Eve held onto the rail while she cautiously made her way down the stairs on rubbery legs. Paramount on her mind at the moment was coffee, followed by a hot breakfast. She walked into the kitchen, one hand on the counter for support while she made her way to the fridge. As she approached the fridge, however, Eve came to a halt. The t-shirt she had worn last night was sitting on the kitchen floor, torn to shreds. And on the kitchen island was a tall glass of milk and a plate with a pair of warm chocolate chip cookies. Tucked underneath the plate was a handwritten note composed of neat, beautiful, old-style calligraphy.\n\nEve,\n\nGood morning! I'm sorry I couldn't be there when you woke up but I had to be back at the North Pole by sunrise so I could catch my flight to Nevis!\n\nPlease enjoy the milk and cookies. I baked a whole batch so you'll have something to take to your sister's for dinner. They're in the fridge. Also, don't forget to drink LOTS of water today! You're gonna want to flush the aphrodisiac from your system as quickly as possible.\n\nI hope you enjoyed your present from Santa! Take care in all you do next year and keep smiling through the days!\n\nMerry Christmas!\n\nHolly\n\nPS - Your ex-fiance couldn't perform last night with his new girlfriend. That one's on me.\n\nEve read the note several times. Her initial disbelief quickly faded away. Last night hadn't been a dream. One of Santa's elves came down from the North Pole and gave her the fucking of her life. \"Wow,\" Eve murmured. \"Talk about cum all ye faithful.\"\n\nShe put the note down and walked across the A-frame to the living room. Sitting down at the writing desk, Eve began writing on a fresh sheet of paper.\n\nDear Santa,\n\nI know this letter's past the postmark date, but please tell Holly I said 'merci' for the present. And thank you for the present as well. Merry Christmas and Happy Holidays.\n\nEve\n\nShe folded the letter, put it in an envelope, and after a moment's thought addressed it \"Santa Claus, North Pole.\" Leaving the envelope on the blotter, Eve got up and was heading back for the kitchen when her ears picked up a soft flutter. Behind her, the envelope had lifted off of the blotter. Eve watched with amazement as the envelope turned end-over-end, soaring across the living room and into the fireplace.\n\nWhen it collided with the closed chimney flue.\n\nEve's laugh of disbelief caused her side to develop a stitch. She winced as she walked to the chimney and picked up the envelope, now crumpled and covered with a fine coast of ash on one side. She pushed the flue open and held the envelope underneath the chimney. It took a moment before the envelope rocketed from her hand, shooting up the chimney and into the morning sky.\n\nWith a wistful sigh, Eve pulled the flue closed. \"Merry Christmas Holly,\" she smiled quietly."
    ],
    "authorname": "PoisonPen33",
    "tags": [
        "candy cane",
        "christmas",
        "dildo",
        "elf",
        "girl-on-girl",
        "lesbian",
        "strap-on"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/i-touch-my-elf"
}