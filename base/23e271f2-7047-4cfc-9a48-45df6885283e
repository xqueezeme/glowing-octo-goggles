{
    "title": "Celtic Mist Ch. 14",
    "pages": [
        "Chapter 14: Morrigan's Will\n\nEnniscorthy, County Wexford, Saturday, May 19, 1798\n\nMichael made her way in the grey dawn light to the Militia garrison. She had been providing Captain Fleetwood with regular reports on the Redcoats' activities that she observed there; thus would she continue her boot polishing work as long as such profitable intelligence was to be gleaned.\n\nShortly after breakfast, now as Kitty, Mrs. Sutton dispatched her back to the courthouse to continue her embroidery work on the tablecloth. This time, the clerk in the vestibule admitted her to the courtroom. Aoife blushed as she seated herself and positioned the embroidery frame, thinking on the romp that had here unfolded fewer than twenty-four hours ago. Today, however, there were no such remarkable distractions, and she worked for two steady hours before heading back to the shop.\n\nThere could now be no doubt that the Crown's bloody campaign to suppress the insurgents had arrived in County Wexford. In the wake of the public flogging of the blacksmith Rory Redmond, the burning of his forge, and the destruction of the mass house in nearby Davidstown, the somber atmosphere in the town was unmistakable. There were fewer people than usual on the streets, and their expressions were guarded. Scarce were the children playing on the sidewalks.\n\nPassing through the square, Aoife eyed the tall wooden triangles that yet stood there, the timbers and cobblestones splattered with Rory's blood --- the now black stains serving as a stark reminder of the Crown's power. At the sound of approaching boots, she joined the rest of the citizens hastening out of the way. A detachment of Yeomen marched past, their boots echoing on the cobblestones and their vile chant filling the air:\n\nYe croppies of Wexford, I'd have ye be wise\n\nAnd go not to meddle with Blaylock's Boys,\n\nFor Blaylock's Boys they vow and declare\n\nThey'll crop off your head as well as your hair.\n\nDerry-down, down.\n\nYe rebels take heed, we'll bloody the waters\n\nFarewell bid your wives and uncropped daughters,\n\nFor Blaylock's Boys on croppy hunts,\n\nWill pike your cropped heads, and cock-pike their cunts.\n\nDerry-down, down.\n\nA feeling of dread came over her. The last time the Yeomen had paraded so was before the flogging of Redmond and the destruction of his forge. What devilry were they up to today?\n\nIn the shelter of Mrs. Sutton's shop, Aoife could only speculate upon what was passing in the town. Nothing amiss was appreciable from the quiet workroom in the back of the building, and after a couple of hours of undisturbed peace, Aoife hoped her fears had been misplaced.\n\nCome early afternoon, Mrs. Sutton, Susanna, and she were engrossed in their sewing when the bell on the front door of the shop sounded. As usual, Mrs. Sutton doffed her apron and smoothed her gown before leaving the workroom to wait upon the customers.\n\nAfter several minutes, Mrs. Sutton called out from the front room, \"Kitty! Fetch a needle and dark blue thread for some quick mending!\"\n\nAoife set aside the sleeve she was stitching and went to the rack of threads on the wall. Collecting a needle, scissors, and two candidate blue spools, she turned to the open doorway into the shop.\n\nShe halted, her heartbeat surging. Two Yeomen were in the shop --- two officers! Their blue coats were encrusted with row upon row of silver braid, and long swords hung at their sides. As they stood conversing with Mrs. Sutton, they held their black helmets under their arms.\n\nBy God, one was Lieutenant Drury, the officer who had initially approved her working at Rossnalough Manor! The second was a taller man, his back towards Aoife, a blood-red sash tied round his waist over his uniform, and his black hair in a queue at his nape. Then he swiveled slightly.\n\n'Twas Blaylock.\n\nAoife went rigid. Her vision closed in tunnel-like in blackness, then expanded again in a rush of blazing color. Her hand curled into a fist about the spools of thread.\n\n\"Kitty?\"\n\nAoife snatched her spectacles from her apron pocket and thrust them on. As she walked towards them, their echoing voices were lost in the thumping blood in her ears. She began to tremble as she neared...either man might recognize her: Drury as Michael, and Blaylock as Michael or Aoife O'Farrell. Both men turned towards her.\n\n\"Oh no!\" Aoife gasped, tripping. She dropped a thread spool so that it rolled past them towards the windows at the front of the shop. \"I'm so sorry!\" Crouching, she scampered past the trio, her head lowered as she searched for the escaped spool on the floor. Once she had retrieved it, she straightened and faced them again, having put the light from the windows behind her. Immediately she curtsied, bowing her face again. \"Sirs,\" she murmured, hiding her shaking hands under her apron.\n\nMrs. Sutton shook her head. \"Kitty, whilst I assist the Lieutenant, the Colonel has a loose braid upon his coat that needs mending. Please attend to it. Fear not, Colonel. She is not as clumsy as she appears. Indeed, she is quite clever with a needle.\"\n\n\"No doubt she is.\" The unforgettable sound of that deep, decisive voice gripped Aoife's chest. Were his words a menacing message for her, or simply an off-handed gallantry?\n\n\"Where is it, sir?\" With the constriction of her throat, her voice came out nigh a squeak. She felt his eyes upon her but could not meet his gaze.\n\nHe rotated slightly and indicated a silver braid trefoil on the back of his coat, over his left hip, just below the belt of his sword scabbard. The loop of braid had come unmoored from the underlying wool. When she stepped behind him, nervously holding the two spools towards his coat to judge which color to use, she realized that he had somehow maneuvered such that she was facing the window light again.\n\n\"I beg your pardon, sir. Could you face the other direction so that the light falls upon your coat?\" she dared ask.\n\nMercifully, he complied without evident suspicion, addressing Lieutenant Drury as he did so. \"Did you send for the wagons?\"\n\n\"Yes, sir.\"\n\nStanding behind him with her face once more shadowed, Aoife struggled to thread a needle with her trembling fingers. At that moment Blaylock set his helmet on the little table next to them and unbuckled the belt holding his sword scabbard.\n\nThe motion of his arms working the belt buckle summoned forth an onslaught of horrific images in her mind: Blaylock striding out of the cottage, buttoning his breeches and fastening his weapons belt as Clodagh's sobs sounded from behind him. \"Well, lads, now that I've loosened her up, enjoy yourselves. When you're done with her, dispatch her to their popish heaven...\"\n\nThe fury burbled up, stinging and hot behind Aoife's eyes, threatening to erupt...her gut twisted and gathered, and for a second she felt herself on the brink of vomiting. She was standing directly behind him --- if only she had her dagger or pistol, she would kill him right now, so she would!...not even caring that Lieutenant Drury would immediately kill or arrest her.\n\nIn danger of throwing herself at him and stabbing at his broad back with her tiny sewing scissors, she forced herself to kneel behind him. He towered above her. She could have performed the task standing, and as much as she abhorred kneeling at this man's feet, Aoife felt the urgency of keeping her face as far away as possible from those piercing, dark blue eyes. Sliding her fingers under the lower edge of the coat, she held the braid in place with her thumb and began to sew.\n\nIn the background, Mrs. Sutton's conversation with Lieutenant Drury indicated that the man was wanting some pretty undergarment for his mistress. When he apologized to Blaylock for the delay, Blaylock shrugged and said he needed his coat mended anyway, then added, \"You're a fool, Drury.\"\n\nThe simple row of stitches proved to be a distressing task as Aoife struggled with the distortion of the spectacles, afraid of losing their cover by lowering them too far upon her nose. Her arms were wobbly with waves of hot and cold rage pulsing out to her hands.\n\nBlaylock glanced over his shoulder at her, and from the corner of her eyes over the spectacle rims, she saw his gaze was directed down at her bosom...a view no doubt sweetened by the advantage of height. Her initial relief that he was not looking at her face was quickly replaced by the fear that she had once more attracted his prurient interest.\n\n\"What is your name, girl?\" he asked, facing front again.\n\n\"Kitty McDonnell, sir.\"\n\n\"Where are you from, Kitty McDonnell?\"\n\n\"Dublin.\" She fought the quaver in her voice.\n\n\"Dublin? You don't sound like you're from Dublin.\"\n\nHer fingers began to shake again. Damn him! He had an astute ear for an Englishman. \"I'm from County Down originally,\" she lied, naming the county next to her home county --- the accent would be close enough. A quick glance aside showed Mrs. Sutton and Drury at the front of the shop looking at the rolls of fine batistes. \"I left after me husband died,\" she added in a low voice.\n\nA minute later she knotted the thread and buried the end. \"Done, sir,\" she announced briskly, snipping it.\n\nHis large, sinewy hand reached back and tested the braid. He gave a curt nod.\n\nStanding, Aoife bobbed a curtsey and retreated to the workroom. Out of sight and hearing of the shop, she collapsed back against a cabinet where she clutched the spools against her chest. Ironically, now out of Blaylock's sight, she was trembling even more violently than before. Under her fists, her bosom rose and fell with her agitated breathing.\n\n\"Kitty? Are you ill?\" Susanna asked.\n\nAoife's eyes focused upon Susanna's concerned visage, and she babbled, \"Oh...I-I'm so affrighted! That-that officer was the one in command at the flogging of that poor man!\" Her clenched hands came over clammy and sweat broke out upon her face. \"Excuse me,\" she muttered, dropping the thread and darting to the side door that led to the back hall. Fighting waves of dizziness, Aoife dragged herself up the narrow, twisting stairs to her room where she clawed her corset ties loose and fell upon the bed.\n\nHer mouth opened against the cool pillow as if to scream, but no sound issued.\n\nFor nigh a quarter hour she lay, inhaling deep breaths, then she rose to splash her face with cold water from the pitcher.\n\nOnce she had regained her composure, Aoife returned to the workroom. Blaylock and Drury had departed, and the shop was quiet once more. She sewed the remainder of the afternoon, outwardly calm.\n\nBut the excitement was not yet over for the day. As the three ladies hung up their aprons at the completion the day's work, Mrs. Sutton's son Samuel rushed in, flushed and breathless, and beckoned them to make haste to witness the remarkable happenings unfolding in the neighborhood. In mounting unease, Aoife followed the Suttons to a nearby respectable, middle-class street where far in advance they could hear the shouts and crying.\n\nThey joined a growing circle of onlookers round a well-kept, three-story wooden house. A contingent of some ten or so blue-coated Yeomen were swarming it, methodically divesting it of its valuables --- carrying out pieces of furniture, paintings, dishes, clocks, books, and tossing linens and clothes from the upper story windows to the arms of their comrades in the street. All was being loaded into two horse-drawn wagons, and several other horses waiting were nearby.\n\nAoife spotted Lieutenant Drury standing before the house, observing the proceedings with his hands upon his hips. Blaylock was nowhere in sight. A Yeoman was binding the wrists of a staid-faced man in his thirties, clad in plain but good quality garments, whilst nearby, another soldier restrained a young woman beseeching the Lieutenant as three small crying children clutched her skirts.\n\n\"Whose house is this?\" Aoife murmured in consternation to Samuel.\n\n\"William Murdoch, a solicitor.\"\n\nMr. Murdoch! Aoife knew of him. He was a United Irishman...fighting in the civilian sphere. She watched in helpless rage.\n\nEre long, the plundering of the house was complete, at which Lieutenant Drury raised his arm and barked an order. A spark flared, then a torch blazed alight. The onlookers gasped and stepped back. Another torch was lit, and two Yeos disappeared into the house wielding them. Within a minute, flames were visible in the upper windows. When the soldiers ran out, the two torches were thrown with lusty whoops --- one into the front hall, and one through a first-floor window.\n\nAs the roaring flames engulfed the house, the Yeomen mounted their horses and set off, Mr. Murdoch's bound hands tied by a leash to the saddle of one. He struggled to run alongside them as the horses broke into a trot. Mrs. Murdoch screamed and ran after them, the wailing weans trailing her, but soon she stumbled upon a cobblestone and fell to her hands and knees in the street, eliciting raucous laughter from the departing soldiers.\n\n\"Daddy! Daddy!\" the children cried. Several women rushed to the wife's side.\n\nAoife turned away with burning eyes, swallowing the lump in her throat. A cloud of smoke billowed over the street.\n\nShe returned to the shop feeling every inch her smallness and weakness.\n\nPast Saturdays, she oft had gone out to Fleetwood's farm at this time, but now she was torn. Aye, she did not want to encounter Declan, but that seemed a trifling concern compared to the monstrosity surrounding them. But she also ken that after Redmond's flogging, no new pike heads were there for her to sharpen, and she had already prepared all the powder horns and cartridge kits.\n\nUp and down Aoife paced in her room, now by habit spinning her dagger back and forth over her thumb knuckle between forward and reverse grips. Casting her eyes about for some occupation, her eyes fell upon something that gave her sudden inspiration.\n\n'Twas a roll of silk cloth that she had discovered in her attic room, behind the stacks of crates where the slope of the roof met the floor. It had been wrapped in linen, and with much curiosity had she unwrapped it. The fabric was an intense emerald green color and a good, sturdy weight. She had considered asking Mrs. Sutton about it, but uncertain of the woman's sympathies, Aoife did not want to give her anything to report to her friend the Magistrate, Captain Jacob. Given the roll's obscure location, she would simply suppose that her mistress would not miss it.\n\nNow as Aoife unrolled the green fabric upon her bed, an eager idea took shape in her mind. From the workroom downstairs, she gathered her embroidery frame, scissors, pins, a needle, thread, a measuring stick, and scraps of fabric from the remnant basket. Back in her room, she set to work.\n\n*****\n\nTURNING and turning in the widening gyre\n\nThe falcon cannot hear the falconer;\n\nThings fall apart; the centre cannot hold;\n\nMere anarchy is loosed upon the world,\n\nThe blood-dimmed tide is loosed, and everywhere\n\nThe ceremony of innocence is drowned...\n\n--- W.B. Yeats\n\nThat evening, Michael could scarce maintain her saunter as she approached the pair of glowing lanterns flanking the gate to Rossnalough Manor and once more faced those hated blue uniforms. She hid her revulsion as the sentries searched her and her knapsack.\n\nAgain, she polished the boots with all speed to reserve as much time as possible for her surveillance in the tunnels. Later, after washing her rags in the courtyard, she slipped into the carriage house and felt her way in the dark to the rack where she had seen the pistols and absconded with one, along with a handful of cartridges. 'Twould be too difficult to smuggle her own into the garrison, she had decided.\n\nInside the tunnel, by the light of her candle a safe distance away, she primed and loaded the pistol, setting it in the half-cocked position. It appeared identical to the pistol that she had found in the attic and had practiced with the one time with Declan. She wriggled the dagger and its scabbard out of the concealed pocket in the knapsack strap and secured the leather belt round her waist, thrusting the pistol under it on the hip opposite the dagger. Thus armed she returned to the musty passageway next to Blaylock's office.\n\nWith nervous hands and heart, she crept inside the wall and put her eye to the glowing peep-hole. The chamber was unoccupied, and a low fire was burning --- similar to last night. In anticipation of her attack, she used the time to plot potential scenarios of the confrontation. Some eight feet in front of the peep-hole was the desk --- if Blaylock was seated at it, his back would be towards her. How quietly could she pull the panel open?\n\nMichael tested it...tested opening it with one hand, whilst she arched her body out of the way of the door swing and brought her gun hand into position. The hinges and latch squeaked and the edge of the panel scuffed faintly in its frame. Softening a bit of wool wax between her fingers, she greased the hinges, latch, and panel edges. Again, she tried the maneuver from the fully closed position...now the panel opened silently.\n\nShe hoped to have the opportunity to deliver her message of wrath triumphant to his face, prior to killing him...which meant she either must deliver a non-lethal shot first, or delay shooting whilst she addressed him. Both options were problematic. She was not accomplished enough with the weapon to direct the shot appropriately...and any delay would give Blaylock a chance to escape or retaliate.\n\nAnd supposing she was successful in shooting him, what would she then do? No doubt the explosion would swiftly draw other Yeomen to the chamber...by the hall door and likely the guards at the window. Aye, she would need to flee posthaste back into the wall. Then what? Could she manage to calmly depart the estate by the front gate as usual, or would the garrison be in an uproar, with all routes of egress sealed? Would she need to hide in wait in the tunnel till the commotion had subsided?\n\nAs she practiced her attack, Michael noticed that something about the room was different from last night --- the map of the county was now flat upon a small table near the fireplace. When she crossed the room to investigate, she saw that arrayed upon the map were multiple, small, wooden peg-like markers of red, blue and green. 'Twas clearly a plan of some military strategy.\n\nHer mind racing, she hastened to the desk and drew out a sheet of paper. Noting the exact positions of the quill and ink well, she transported them to the table. Her hand flew as she roughly copied the map, marking the pegs as circles, squares, or triangles to correspond to the three colors. Soon finished, she returned the items to their original positions on the desk.\n\nBack inside the wall, she stood watch for some time, waiting for her quarry. But as the hour lengthened and the fire burned low without his appearance, Michael at last left her post, hiding the flintlock inside the wall at the ready.\n\nThat night, she lay abed with the covers clutched under her chin, too tense to sleep after the day's distressing events --- Mr. Murdoch's arrest and the burning of his house. The same day --- she had learnt from Samuel Sutton later --- the Yeos had served a second man in the same manner, one Mr. Preston, a chandler. Mr. Preston she also knew to be a United Irishman. Two members had been apprehended in one day! Perhaps the execution of such outrages explained Blaylock's prolonged absence from his office. Where did they take the prisoners? The same place as Father Noctor...wherever that might be?\n\nHow soon would the Yeomen or Redcoats discover Fleetwood's company and their cache of pikes and guns?",
        "She thought on the encounter with Blaylock in the shop, and despite herself, her body trembled under the quilt. Fair certain was she that her true identity had not been suspected, but the manner in which he had considered her bosom made her blood run cold. In dread of the possibility of him raiding the Sutton house and seizing her again, she had laid her dagger and pistol close at hand before climbing into bed. If the fiend was still on the hunt for virgins, she prayed that her lie about a husband had terminated any interest in Kitty McDonnell.\n\nUnable to sleep, Aoife at last rose and fetched her breeches and knapsack. Now that she had once more seen Blaylock in person after all these months, the long-sought confrontation was looming more and more fearsome. Picturing his office again and contemplating her dagger and the one shot with the flintlock, she had an additional idea to improve her prospects.\n\nInside the breeches, attached to the outer side seam, she fashioned from scraps of linen a long, narrow pocket some nine inches long and an inch wide that opened into the existing pocket. Constructing a second, similarly sized pocket, she concealed it in the strap of her knapsack, opposite the strap with the secret pocket for the dagger.\n\nShe tried one of her knitting pins in it: the quarter inch diameter, pointed wooden stick slid smoothly into both pockets. Aye, 'twas a feeble weapon, so it was...she shook her head ruefully. But the little task at least eased her agitation sufficiently to fall asleep.\n\nSunday dawned wet and cold, and without duties in the shop, Aoife was able to devote the day she would have otherwise spent at Fleetwood's farm to working on the green silk project --- the hours of stitching accompanied by the pattering rain on the roof and the cat Malachy sleeping on her bed.\n\nEven if she intended to avoid the farm for fear of seeing Declan, Aoife still had intelligence she must pass on to Fleetwood: the map from last night, the presence of Magistrate Jacob at the Yeomen's garrison, the documents and correspondence she had read in Captain Pounden's office, and various overheard and witnessed tidbits from the Militia garrison.\n\nLieutenants Foley, Coe, and Bolger were other United Irish officers to whom she might convey her report. Alas, she knew not where to find Bolger or Coe. Should she seek out Foley at his tavern? But...she was just as likely to encounter Declan there as at the farm.\n\nThat night she undertook an experiment. With Michael's usual arrival time at Rossnalough Manor, her work time overlapped with the officers' supper --- an arrangement beneficial whilst she had been searching the place. But now that she had found Blaylock's office, she needed to be there after he had left the dining room if she were to have her chance at him alone.\n\nTonight, she thus arrived some forty minutes later than usual. When the sentries at the gate remarked upon it, Michael replied that her master at the stable where she mucked stalls had required her to work later than usual. The soldiers had accepted the explanation without further query and passed her inside.\n\nWith the completion of her duties, she was at last able to climb into the tunnel. She extinguished her candle before advancing on her tiptoes inside the wall next to Blaylock's office, pausing to retrieve the pistol from where she had hidden it last night. She crouched at the peep-hole.\n\nHer ploy had worked! Someone was inside! There was more light than previously, and she heard a man's voice!\n\nMichael adjusted her eye at the hole. Two men were in the room --- sitting in chairs by the fireplace with a cut glass decanter on the table between them. One was indeed Blaylock; the other was the hawk-faced Magistrate, Captain Archibald Jacob.\n\nBy God, should she attack now and lose her liberty or perhaps her life, or wait till he was alone? Her eye glued to the hole, she watched and listened.\n\n\"'Twas a fair haul yesterday,\" Jacob said.\n\n\"There's better to be had,\" Blaylock replied.\n\n\"For instance?\" Jacob sipped an amber colored liquid from a crystal goblet.\n\n\"My spy reports that the blacksmith Redmond was attended by one Dr. Woods of Bellefield House. I understand he is a wealthy landowner in addition to being a physician.\"\n\nJacob nodded. \"Indeed. Bellefield is a fine home. Many are the treasures to be found there.\"\n\n\"Among them evidently, a lovely young daughter.\" The fire highlighted the creases in Blaylock's lean cheeks as he grinned.\n\n\"Ministering to the blacksmith is cause enough to arrest him on suspicion of treason.\" The Magistrate's solemn tone was belied by his sly smile. \"And 'tis true that my own spies have placed Dr. Woods, when last in Dublin, at a certain bookshop on Grafton Street with known United Irish connections.\"\n\n\"Indeed, the loyalties of the entire family are suspect. I intend to arrest and interrogate all of them.\" Blaylock's fingers tapped restlessly upon his knee. \"I am all eagerness to do so.\" A leer transformed his countenance.\n\n\"Dr. Woods, certainly. But mind how you address the situation of the family --- 'tis a delicate matter and we don't want another Bastille Day on our hands.\"\n\nBlaylock scoffed, crossing one booted ankle over his other knee and leaning back in his chair with a smile. \"The rebels will not be reformed by mercy, Jacob. General Lake has ordered that the insurgents be disarmed by any means necessary. Even if there is doubt that such measures are needed in County Wexford, I shall not be dissuaded from my plans. The dearth of evidence of rebel activity in the county proves nothing. They are here and we must be relentless in flushing them out, even if we must, alas, 'interrogate' their young daughters.\"\n\nThe Magistrate rotated his goblet slowly in the firelight.\n\n\"Take heart, Jacob. The capture of Fitzgerald gives us free rein to proceed without restraint or reproof.\"\n\nThe Magistrate nodded. \"A valid point.\" He held his glass as Blaylock leant forward to refill it. In a musing tone Jacob commented, \"I am astonished that that damned blacksmith even survived. I was certain that the cat had drained the life from him.\"\n\nBlaylock drank with a brusque motion of his wrist. \"I as well. 'Tis vexing, that. Had I been wielding the lash myself, as I used to do, then he would not have drawn another breath. But now I must preserve the distinction of rank.\"\n\n\"Oh, the botherations of being a Colonel!\" Jacob chuckled.\n\n\"To that point, tomorrow inaugurates our new programme of --- shall we say --- enhanced persuasion.\" Blaylock's teeth flashed. \"Indeed, let us go meet with the officers to discuss the particulars.\"\n\nCaptain Jacob nodded and emptied his glass. The pair rose to their feet and departed through the hall door.\n\nMichael straightened and immediately rotated to peer into the peep-hole in the opposite wall, but the library remained dark. Where were they headed? She struggled to remain soundless as she retreated inside the narrow space without her candle. Once back in the main tunnel, she relit her candle and hastened to the passageway between Hunt's and Pounden's offices --- no one was in them.\n\nDesperate to hear the rest of the conversation, Michael hurried into the tunnel under the east wing and the one stair with peepholes between the ballroom and billiard room. These were also unoccupied. Wherever the officers' meeting was taking place, she would not be privy to it.\n\nBut even the brief exchange she had overheard was sufficient to propel her with all urgency back through the tunnel, stable, courtyard, house, and out the front gate. Once out of sight on the sentries, she broke into a run.\n\nBy God, Dr. Woods must be warned! He had to flee, to hide his family! And what had Blaylock said about Fitzgerald? The Society's heroic leader, long fugitive, had at last been captured?!\n\nThe black road was muddy from the rain earlier in the day, and with the overcast sky, there was neither moon nor stars to light the way back to Enniscorthy. Panting harshly, Michael slid and slipped as she ran in the darkness, falling several times.\n\nHow could she get the warning to him? She knew not where Bellefield House was! Should she go to Colin Foley's tavern and tell him? But no --- Declan would be there --- Blaylock had said that his spy had apprised him of Dr. Woods' visit to Rory Redmond. Declan had known of that visit, so he had. If she went to Foley's, Declan might overhear and attempt to subvert the warning. Aye, she must tell Dr. Woods herself.\n\nWith lungs burning, Michael at last arrived in Enniscorthy, where she stumbled to a brisk walk. 'Twas very late. Directly to the O'Connor residence did she go and knocked, praying someone would answer. Eventually the door opened a crack --- Mr. O'Connor, thank God!\n\n\"Michael? What brings ye here at this hour?\"\n\n\"How is Mr. Redmond faring?\" she panted.\n\n\"He's holding his own.\"\n\n\"The Yeomen are planning to arrest Dr. Woods and his family --- I overheard them at the garrison. I must warn him, but I dinna ken where he lives!\"\n\n\"By God, the bastards! When?!\"\n\n\"I don't know! I must tell him tonight!\"\n\n\"Aye, ye must.\" O'Connor gave her quick directions. \"Godspeed, Michael.\"\n\nMichael thanked him and hurried away, making her way northeast. As she passed through Abbey Square, the stout struts of the triangles loomed dull and black over the glistening cobblestones.\n\n\"Hey!\" came a shout. \"You! Halt in the name of the King!\"\n\nIn panic, she beheld a pair of Redcoats hastening towards her from the east end of the square. She broke into a run.\n\n\"HALT! HALT OR WE'LL SHOOT!\"\n\nMichael dodged into a side street, hearing their boots thundering behind her. There was a deafening blast and a patch exploded in the bricks of the building next to her. What the Devil?! Why were they chasing and shooting at her?! Then it came to her --- she was out on the streets after the new curfew!\n\nThe soldiers' footsteps redoubled. Skidding and tripping on the wet cobblestones, Michael scuttled into an alley. From here, she weaved through narrow lanes and climbed through yards, hearing the pursuing boots at length mercifully fade away...only to be replaced by a trail of barking dogs.\n\nOnward she pressed, running on her toes to prevent the clatter of her shoes on the stones. Keeping to the side streets, she bypassed Market Square, where a brief glimpse between buildings revealed yet more Redcoats on patrol.\n\nAt last, the circuitous route brought her to a dark, quiet residential neighborhood on the edge of town. Bellefield House was a stately, but not lavish, stone and brick manse surrounded by gardens and a wrought iron fence. A low light was visible in one ground floor window, but the remainder of the house was in darkness.\n\nIn her mind's eye, Michael imagined the peaceful home transformed into a scene of terror...the rampaging Yeomen tearing through the gardens, breaking windows, parading out with furniture...saw the family struggling and crying as they were forced out...saw Blaylock's feral grin as a young lass was dragged before him.\n\nShe shook the gate, but it was locked, and she found no bell pull. Glancing about and spying no watchers, Michael grasped the iron bars and wedged her foot against a cross bar. Up the fence she hauled herself, tensing her belly against the metal spike tips as she rolled over.\n\nA flickering lantern at the front door guided her up the path between beds of dripping plants and flowers to a paneled door surrounded by leaded glass panes. Through their distortion, she glimpsed a dim, unoccupied entry hall. She rapped upon the door with the knocker. After a few minutes of silence, she knocked again harder, and soon thereafter a weary looking man holding a simple candelabra opened the door. His clothes looked hastily donned.\n\n\"Dr. Woods?\" she said.\n\nThe man looked her up and down, his expression impassive. \"Who shall I say is calling?\"\n\n\"Michael McArdle, from Mr. O'Connor's house...from Mr. Redmond. Please 'tis urgent!\"\n\n\"Wait here, please.\" The door closed again. Michael waited, shifting from one foot to the other. A glance downwards showed her coat, breeches, and hands to be smeared with mud, and she tried to scrape it off. When the door reopened, a short, squarish man of about fifty stood there, wearing a dressing gown. His wide, clean-shaven face had a kindly expression.\n\n\"Michael! Come in, do. I am Dr. Woods. You may go, thank you,\" he said to the manservant standing behind him.\n\nDr. Woods led her to a room off the entry hall where a fire crackled in the grate. The details of the room and hall were elegant but not ostentatious. This room appeared to be his study and was pleasantly cluttered with books and small wooden boxes on shelves. On the desk was a curious looking instrument composed of vertical brass tube seeming to be a telescope affixed in a stand.\n\n\"Please sit, you look all in. I'm pleased to at last make the acquaintance of the famous Michael. That unguent you made --- truly remarkable! I would love to know its constitution.\" Dr. Woods took a seat at his desk. \"But that is a subject for another time. What brings you here at this hour? Has Redmond taken a turn?\"\n\n\"Oh no, sir. He's stable. I've come to warn ye --- the Yeomen intend to arrest you and yer family.\" As Dr. Woods listened intently, Michael recounted how she came by the intelligence and what had been said. \"Please, you and yer family must hie away from Enniscorthy, or at least from this house!\"\n\nDr. Woods' earnest face had grown tight and grim. \"Aye, so it would seem...and posthaste!\" He stood quickly. \"You're a brave, honorable lad, Michael. God bless and protect you.\"\n\nAfter declining Dr. Woods' offers of tea and a ride home, Michael accepted his escort back to the gate. \"Are you certain I cannot send you home in my carriage?\"\n\nShe shook her head and thanked him.\n\n\"No, 'tis I who must thank you. Although my family may never meet the lad in whose debt they stand, their deepest gratitude goes with you as well.\" Dr. Woods glanced up and down the street. \"Take care, the Militia are enforcing the new curfew.\"\n\n\"Aye, I'll give them the slip,\" she said with a bleak smile and headed out into the dark street.\n\n*****\n\nFoley's Tavern, Enniscorthy, County Wexford, Monday, May 21, 1798\n\nMichael watched Foley's tavern from her concealed vantage point across the street. She was after polishing boots at the Militia garrison and had taken herself to this neighborhood directly following. Knowing that Mrs. Sutton had scheduled her to report after breakfast to the courthouse to finish her embroidery work on the judges' tablecloth, she had opted to forgo the morning meal in order to seek out Colin Foley and report her recent intelligence.\n\nReluctant to encounter Declan, she was monitoring the tavern in hopes of seeing Colin Foley alone. Accordingly, she situated herself across the street, a few houses down, sitting on the sidewalk and leaning against the front of a cooper's shop. A standing barrel next to the front door served as a screen against being seen from the windows of the tavern.\n\nIn the early morning light, Michael's curious eyes surveyed the modest little neighborhood --- some fractious misadventure had occurred here, so it had. There were numerous broken windows and hanging shop signs. Doors and walls had been vandalized with anti-Catholic and anti-rebel epithets. One such slogan was on the front of the cooper's shop --- a closer inspection of the letters above her shoulder told her that the rusty-blackish paint was blood...sheep's or cow's, she wagered.\n\nAll too unhappily it reminded her of her childhood in County Armagh...of the years of violence between the Defenders and the Peep O'Day Boys that had culminated in the fateful Battle of the Diamond in which her brothers and Hugh McDonnell had perished.\n\nMichael wondered what had happened here --- not having gone to Fleetwood's farm over the weekend, she was in ignorance of the latest tidings. If she had to guess, she would lay the responsibility at the feet of the Yeomen or the Orangemen --- the spiritual successors of the Peep O'Day Boys.\n\nA few people were about, sweeping up glass shards and scrubbing the bloody scrawls from their homes.\n\nA motion by the tavern caught her attention. The front door opened, and Colin Foley stepped out holding a mug. He called a good morning to a man across the way sweeping the sidewalk. As Foley crossed the street to converse with his neighbor, Michael eagerly rose and approached, keeping one eye upon the tavern door.\n\n\"Mr. Foley!\" she called.\n\nColin Foley turned. \"Michael!\"\n\n\"May I talk to ye?\"\n\nHe nodded and excused himself, walking back across the street at her side.\n\n\"I-I haven't been able to go out the farm, but I have intelligence to report.\"\n\nColin ushered her inside, where Michael looked about nervously. The tavern thankfully was unoccupied but was remarkable for the broken furniture arranged into two piles.\n\n\"What happened?\" she blurted.\n\n\"Orangemen rampaged in the neighborhood on Friday --- but they got a surprise in here: little were they prepared for Declan Quickfist, ha!\" He looked about with rueful humor. \"I wasn't here, so I'm relying upon Brian's accounting of it. So, 'twas either that, or he and Declan invited in a party of doxies for an orgy with the lads.\" He winked.\n\nMichael felt her cheeks pinken and she scanned the room again. \"Are ye...umm...alone?\"\n\n\"Aye, so I am. The lads are still lolling about the breakfast table. Would you like some tea?\" He gestured with his steaming mug.\n\nShaking her head, Michael crouched to extract the copied map from her knapsack. Upon it she had added notations of her other observations. Quickly she reviewed the paper with him, explaining the symbols on the map and the abbreviations for Yeomen and Militia.\n\nShe finished by recounting Blaylock's and the Magistrate's reference to the 'enhanced persuasion' programme to commence today, but left out the specific reference to Dr. Woods, still fearing that Declan, if he be the spy, might countermand her efforts to save the Woods family from Blaylock.\n\nShould she share her suspicions about Declan with Foley? Her anxious eyes darted to the hall leading past the bar...what if he overheard her?\n\nFoley was staring at the paper. \"Christ!\" he muttered. Then he collected himself. \"Fine work, Michael. I'll pass this on to Fleetwood sharpish.\"\n\n\"May I keep reporting to ye?\"\n\nColin Foley's mouth tightened, and he put his hand upon her shoulder. \"Have ye heard the tidings, Michael?\"\n\n\"About Lord Fitzgerald's arrest?\" she asked, fear prickling. Searching his face, she saw the several days' growth of red bristles flecked with grey...and the weary lines about his eyes.\n\n\"Aye, that and the rising has been fixed for Wednesday night. The company will be heading off.\"\n\nHer heart began to thump in her chest.\n\n\"Even though you're not going into battle, you have served the cause of freedom with rare courage and devotion, so ye have. By God, the risks you've taken! But, to your question, if ye have news and can find me, by all means report to me.\"\n\nMichael felt as if she were collapsing into a cold hollow in her belly. The rising was to start! Incoherent thoughts struggled on her tongue. Then she came over numb. Nodding, she shouldered her bag, and took her leave of the tavern.\n\nAoife continued in a state of insensate resolve for some time, scarce recalling her return to her room at Mrs. Sutton's shop and her transformation from Michael to Kitty.\n\nSomehow, she had made her way to the courthouse and now sat at the judges' bench, the partial coat of arms secured in the embroidery frame, her hand moving repetitively before her as if it were someone else's --- filling in the rampant lion with gold thread.\n\nThe day after tomorrow the rising would begin! All her comrades of the past weeks would be heading into battle with their pikes and muskets on their shoulders and the fire of righteous rage in their breast. The memory rose of her brothers and Hugh McDonnell waving farewell as their wagon pulled away from the farm in County Armagh...transporting them to their deaths.",
        "She thought on Lieutenant Bolger, the first United Irishman she had met...that night in the carpenter's shop in Ferns...genial, handsome, freckled Bolger, who had first invited her to join the Society. She thought on earnest, deliberate Captain Fleetwood...wry Colin Foley...jolly, randy Jamie Byrne...big-hearted Rory Redmond...rascally Brian Foley, his hair nigh as red as her own.\n\nAnd Declan. Strong, intense, green-eyed Declan...who had twice saved her from ravishment, who had run to warn the Defenders of the coming Yeos, who had trained Fleetwood's company to fight...who had pleasured her with his mouth and revealed to her the paradise of Medb's gifts.\n\nDeclan, who might be the traitorous bastard undermining their cause by his selective betrayals.\n\nShe looked under the judges' bench...for what? His ghost? Answers to a question she had not quite formulated?\n\nThen she pondered her other mission. Had she only two days to avenge her family? Would Blaylock and the Yeomen continue still at Rossnalough Manor once the rising began? Or would the fiend disappear again in the chaos of war?\n\nHer steady fingers flagged not, changing floss for the knight's helmet, then later for the family motto on a white banner. 'Twas midafternoon when she at last finished, unfastening her frame and tugging the cloth smooth. She thanked the clerk in the vestibule and left the courthouse.\n\nThe flat, grey sky matched Aoife's disconsolate mood as she headed back towards Mrs. Sutton's shop, her frame slung over her shoulder and her basket on her arm. By and by she began to note the unusual numbers of people hastening along the sidewalks in the same direction as herself. The hairs prickled in dread on the back of her neck...but as if under a spell, she was drawn against her will into the throng that spilled into Abbey Square.\n\nOh, no --- NO! NO!\n\nThe screams were audible ere she saw the cluster of Yeomen and Redcoats round the triangles. In the jostling crowd, Aoife realized that a second contraption of torture had been deployed next to the triangles.\n\nThis was a sturdy wooden rectangular frame some eight feet tall and four feet wide, standing on end, affixed to an axle mounted with broad wheels. Two Yeomen were holding it upright, and from the top center brace a man was hanging by his neck from a rope, purple faced and struggling, his hands bound behind his back. Good God! The terrible invention was a portable gallows!\n\nAs the victim's jerking began to ease, the two Yeomen who were holding the side struts tilted the rectangle down so that the man's body crumpled on the cobblestones. Another Yeo threw a bucket of water in his face. After a few moments, the victim returned to consciousness gasping and heaving.\n\nAoife identified Captain Pounden, the officer who had mounted the maid over his desk --- he kicked the groaning man and crouched to question him, the words inaudible over the surrounding noise. Then he signaled the two soldiers holding the rectangle --- at once they tilted it back up and the poor man writhed as he swung from his neck.\n\nThrough the stinging rage in her eyes, Aoife realized who the victim was: Thady Furlong, the carpenter who had made most of the pike hafts...who had played the pipes at the Byrnes' party. Again, before the life left his body, the Yeos lowered him and interrogated him.\n\nEven at the same time, a lad was suspended by his wrists from the triangles and was being flogged with the cat o'nine tails by another Yeoman, supervised by Lieutenant Drury. In disbelief, Aoife recognized Thady Furlong's apprentice Darby, not even a man full grown. A cloud of blood sprayed out from his back with each blow, and his screams rose piteously. Whatever he was saying when they paused to question him failed to appease them, and the lashing resumed.\n\nIn the surrounding circle, other Yeomen were making an example as they had done with Rory Redmond, smashing the implements of Furlong's trade on the cobblestones with sledgehammers. Redcoats at the periphery restrained shouting and flailing family members and kept the onlookers back.\n\nAoife's wild eyes scanned the square for some hope of God's mercy. In the shifting and pressing crowd, she searched the intent faces of her fellow Irishmen and beheld their varied reactions to the atrocities before them: people with their hands over their gaping mouths, children crying, people with silent tears upon their cheeks, women turning their faces away, others simply watching with blank countenances, and some openly gloating and cheering.\n\nOver the tops of the buildings on the north side of the square, the Hell was completed by a column of black smoke expanding in the grey sky.\n\nIn despair, Aoife turned away, using her embroidery frame to push her way through the crowd. She escaped the square by the first street she came upon, stumbling past even more citizens heading to observe the spectacle. Scarce did she mark her route, so distraught was she.\n\nWhen she finally collected herself several minutes later, she saw that she was heading in the wrong direction for the dressmaker's shop. Orienting herself, she adjusted course. When a second tower of black smoke rose before her, attended by shouts and wailing, 'twas clear that the outrages were multiplying. With a sinking heart she drew near another cluster of onlookers in a smaller square formed by the confluence of three streets. A long, low malt-house on one corner was ablaze, and the owner's pillaged possessions were piled in a wagon.\n\nA group of eight Yeomen were busy in the street in front of the burning building, and it took several minutes to appreciate the full horror of the scene.\n\nTwo men in working class garb with their hands bound behind them were reeling in the road wearing bizarre, conical, dunce-like caps upon their heads --- they were screaming in agony and dashing their heads over and over against the brick side of the neighboring building. From under the mottled linen caps, a thick black liquid was slowly running over their faces and necks.\n\nThe watching Yeos chortled with glee. A third man, similarly capped, was on the ground, slumped against the building, seemingly unconscious.\n\nIn the road was a squat iron kettle simmering over a firepit, and a soldier was ladling viscous black liquid from it into another stiff linen cone held by a comrade.\n\n\"Oh God! What is that?!\" Aoife gasped to a woman at her side who was pressing her apron to her mouth with both fists.\n\n\"'Tis p-pitch, so it is!\" the woman choked.\n\nA fourth man was kneeling in the road with his hands tied behind him, his expression stoic as a Yeoman hacked off his ginger hair with a large shears. Even as the tops of his ears were cropped off by the brutal barber, the man refused to cry out, merely grimacing.\n\nThe next moment, the pitch filled cone was upended atop the man's shorn head, and he could no longer contain his shrieks. Two Yeomen held his wrenching body down by the shoulders as the boiling tar oozed out from under the cap. When they at last released him, he fell to the ground, screaming and scraping his head against the dirt...then he staggered to his feet, running and tripping as the pitch flowed into his eyes. The Yeomen cheered and whooped.\n\nNo surprise at all was it when Aoife saw the officer in command of the savagery. Blaylock stood with his arms crossed over his chest, his face impassive as he directed his troops.\n\nHe barked an order, signaling towards the man slumped against the building, at which two soldiers hastened over, grasped him under the arms, and dragged him over the dirt road to Blaylock's feet. They heaved the man's torso upright so that he was kneeling, and Aoife saw that he was conscious.\n\nAnd she saw who it was: Lieutenant Bolger.\n\n\"Oh God!\" she whimpered. With the dried black runnels of pitch and blistered red flesh of his face, he was nigh unrecognizable. She remembered now that he owned a malt-house...no doubt 'twas his afire in the background.\n\nHis expression yielded nothing, even as Blaylock stared into his eyes.\n\nBehind him, the most recent man pitch-capped was stumbling about, begging for mercy, \"Please, PLEASE! Oh God! Make it stop! Please make it stop! I'll tell ye's anything, just make it stop!\"\n\n\"Shut your gob!\" Bolger growled over his shoulder.\n\nBlaylock's boot kicked Bolger in the gut, and he said something to him, inaudible over the background screaming. Bolger shook his head with a defiant expression, which seemed to please Blaylock. A smile lifted one corner of his mouth.\n\n\"Hold him!\" he commanded, and the two soldiers pressed down upon his shoulders. Blaylock unfolded his arms, seized the distorted point of the cap, and with a twist of his powerful hand, ripped the cap from his head, scalp and all.\n\nThe crowd cried out in horror --- a woman nearby swooned.\n\n'Twas as if Bolger's voice box had been torn out as well, for no sound issued from his gaping, tormented mouth. Blood erupted from the ragged hole of skin and in seconds his entire head was awash in it. He fell forward onto his face, his body shaking.\n\nTears burning and bile rising in her gorge, Aoife whirled round and shoved her way back through the crowd. As her vision blurred in sickening waves of expanding white, she swayed and tottered, falling to her hands and knees upon the ground. Her belly heaved for a moment, then she struggled to rise.\n\nA strong hand gripped her under her arm, lifting her to her feet. Through the oscillating brightness, she beheld the russet hair and hawk-like face of the Magistrate, Captain Archibald Jacob.\n\nHe quickly bent to retrieve her dropped basket and embroidery frame. So distressed and dizzy was she that she could not immediately understand his sudden appearance here. He supported her, guiding her away from the scene.\n\nThen Aoife remembered: he was part of the campaign of terror...he was Blaylock's associate in crime. He had been at the garrison last night to aid in the planning. Her vitriol urged her to throw off his seemingly solicitous arm, but her reason and self-preservation advised her not to provoke this man's rancor.\n\n\"Whither are you headed?\" he asked.\n\n\"Mrs. Sutton's shop,\" she mumbled.\n\nShe protested not as he escorted her back, his arm under hers in a gentleman-like fashion, carrying her belongings with his other hand. In truth, in her present state, she might not have found her way back from the unfamiliar neighborhood for some time. But when they arrived at the shop, 'twas locked --- the Suttons must be out observing the events.\n\nAoife fumbled in her pockets for her key, and they entered through the rear door by the kitchen, where the Magistrate set down her basket and frame and removed his hat. The servants Mary and Alice had evidently gone to gawk as well, for the house was silent.\n\nAnother wave of nausea came over her. Aoife swayed and reached for the wall.\n\nCaptain Jacob's arm went round her shoulders. \"My dear girl, you are quite unwell. Do sit down.\" He guided her to the parlour next to the kitchen and eased her onto a sofa. \"Let me fetch you a small restorative.\"\n\nVaguely she was aware of him crossing to the sideboard, but her mind was swimming with grief as she saw them again: Furlong's congested face and bulging eyes above the noose, Bolger's face frozen in pain below the tide of blood from his torn scalp, and all the others' contorted and wretched countenances.\n\nAnd Aoife knew there was no God.\n\nSobs wracked her body, and she covered her streaming face with her hands. If she had imagined herself inured to suffering, the new revelation of the depths of man's depravity showed how her heart yet beat vulnerable in her breast.\n\nThe brocade sofa cushion shifted next to her. \"Here Kitty, drink this brandy,\" Captain Jacob murmured.\n\nBut she only wept. Oh why was he yet here, this man?\n\n\"I am much aggrieved that you had to see that terrible sight, my dear girl,\" he murmured, his arm round her back, his hand gently squeezing her shoulder. \"'Tis indeed a shocking thing for a young innocent to behold. But know that no pleasure was taken in what had to be done. The rebels are naught but traitors bent on embroiling this peaceful island in strife and destruction and killing innocent citizens willy-nilly. Such draconian measures are necessary to weed out the criminals.\"\n\nGradually did Aoife's sobs subside, not from a soothing effect of his words, but from her rising vexation at his continued unwanted presence. She uncovered her face, gasping and hiccupping against her corset as her chaotic breaths slowed.\n\n\"There, there, sweet Kitty. Have you a handkerchief?\" His fingers plucked softly at the front of her bodice.\n\n\"Oh no, sir --- 'tis not there!\"\n\nHe withdrew his hand, and she groped in the folds of her skirts for her pocket, extracting a square of plain linen. As she wiped her eyes and blew her nose, he took her other hand and held it in his.\n\n\"Sweet Kitty...\" he repeated, his voice museful.\n\nAoife lowered the damp linen and realized that his brief search for the handkerchief had untucked the ends of the delicate white cambric fichu from her bodice, and above the edge the gown the swelling top of her bosom was now exposed nigh to the rosy crests, pressed upwards by her stays. The lilac fabric was spotted dark purple from her falling tears, and a few teardrops were sliding down her trembling breasts.\n\nIn sudden embarrassment, her eyes darted sideways. The Magistrate was sitting quietly, lightly pressing her hand. She dared not raise her eyes to see where he was looking, but with her quick glance she became aware of the outline of his cockstand tenting the front of his breeches.\n\nAt once she stood, turning to hide her blush as she discreetly pulled together the ends of the fichu to drape over her bodice. \"Captain Jacob, I must thank you for your kindness. But I shall be quite well now.\" She faced him again. \"I must return to work, and 'twould be unseemly for us to be alone together. I have no wish to cause embarrassment to Mrs. Sutton.\"\n\nHe stood as well, tugging his coat across his breeches. \"Are you certain you are well enough to be alone, Kitty? I would not wish to leave you in distress.\"\n\n\"I'm fair certain I've sufficiently recovered. As ye say, these measures cannot be helped.\" She crossed to the hall door.\n\nHe followed her into the shop and paused when she unlocked the front door. His smile was warm as he studied her face. \"Then I am glad to have had the opportunity to be of service to you.\"\n\n\"Aye,\" she agreed. \"'Twas indeed fortunate that you were close by when I stumbled. Thank ye again, sir.\" She held the door open.\n\n\"Another time, Kitty.\" He gave her a brief, civil nod, donned his hat, and departed.\n\nHow utterly strange it was, Aoife thought after locking the door behind him, repairing the disarray of her bodice, and taking up her unfinished sewing in the workroom. For a man of such dubious character to have expressed his amorous interest in such a courtly manner, all things considered. At least 'twas the only explanation that she could perceive for the awkward incident. Aye, there was no accounting for the vagaries of the human animal.\n\nShe recalled his conversation with Blaylock last night and prayed that Dr. Woods and his family had escaped.\n\nSo...today stood as testament to their new tactics of \"enhanced persuasion,\" did it now? Her heart ached for the future of Ireland.\n\nWhen the Suttons and the servants returned, Aoife was diligently sewing, once more master of herself. The lot of them had, as predicted, been watching the events in Abbey Square, and Mrs. Sutton was aflutter with her observations and exclamations about the ghastly happenings and the disgraceful rebels.\n\nAoife endeavored to blot out the disturbing, mindless chatter, but her ears did perk when Mrs. Sutton said, \"...and rumor has it that the Yeomen intended to arrest Dr. Woods for aiding the rebels, but when they arrived at Bellefield House, they discovered the family flown. The house and all its contents were seized as forfeit to the King --- so I heard from Mrs. Wright anyway. But half of what comes out of her mouth is folly, so I shall apply to Captain Jacob for the truth of it.\"\n\nIn silence did Aoife rejoice at that one tolerable development of the day. As soon as she finished her work, she decamped from the shop. On her way to the back stairs, Susanna Sutton came out into the hall and beckoned her.\n\n\"Kitty, with all the upsetting events, I almost forgot to tell you that someone called for you this morning whilst you were at the courthouse...a young man.\"\n\nAoife felt a nervous discomfiture. \"A young man?\" she repeated, confused.\n\n\"Yes, he came into the shop, but was clearly not a customer, being dressed...well...as a laborer. He was quite tall and strong looking with dark hair and the beginnings of a beard. He would not leave a name but said he would call again.\" Susanna nudged her with a coy look. \"You never mentioned you have a sweetheart, you sly thing.\"\n\nAoife's cheeks warmed. \"That sounds like the lad who helps on me cousin's farm.\" Having already established the fiction of the cousin's farm to account for her absences on the weekends, the lie came easily enough. \"He's not my sweetheart.\"\n\n\"Well, he's a handsome lad --- albeit in a rough, countryish fashion. Is he married? Does he have a sweetheart?\"\n\nAoife shook her head. \"Not that I know.\"\n\n\"Catholic, I suppose? More's the pity. Even so, I wouldn't mind a turn in his arms on the dance floor...just so long as Mama didn't hear of it.\"\n\n\"I'll be sure to inform him of your interest, and the pair of you's can create your own Romeo and Juliet story,\" Aoife teased with a tight smile.\n\n\"Kitty! Don't you dare!\" Susanna giggled.\n\nUpstairs in her room, Aoife spent the remainder of the afternoon stitching on the green fabric.\n\nSo, Declan had come by looking for her, had he? Her heart pattered despite herself. Before the outrages in town, by the sounds of it. What the Devil did he want? Was it about the incident in the courtroom, or was he angered about her interference in Dr. Woods' fate?\n\nThe sun at last set. Before heading to Rossnalough Manor, she hid her work in one of the crates along the side of the attic.\n\nShe again arrived at the garrison at the later time, but tonight had not the luck of the previous night. Inside the passage in the wall, she waited at the peep-hole for almost a half hour, but the chamber remained empty.\n\n*****\n\nEnniscorthy, County Wexford, Tuesday, May 22, 1798\n\nThe atmosphere at the Militia garrison was noticeably different than on previous mornings. Instead of the quietness of a not-yet-risen camp, there was terse, purposeful activity everywhere. In the grey dawn light, rows of Redcoats were already assembling for the morning formation. A pair of soldiers strode into the ordnance building, one with a book and pencil. The officers gathered as usual outside the room wherein their daily meeting occurred, but today they were taciturn.\n\nCould they know that the rising was to happen tomorrow? Or was the tension simply the reflection of the palpably increasing unrest in the county? Yesterday's mayhem? The Redcoats had assisted the Yeomen in the atrocities in Abbey Square, so they had.\n\nFrom the garrison, Michael hastened back to Mrs. Sutton's shop to retrieve the pistol she had discovered in the attic. Now that she had the stolen flintlock hidden inside the wall of Blaylock's office, she wanted to give this one to Fleetwood's company. Forgoing breakfast again, she used the time to return to Foley's tavern --- she would not let her skittishness about Declan stand in the way of adding another firearm to the United Irish cache.\n\nLuck was on her side in that regard. The lads had already left for Fleetwood's, Colin Foley said, and he himself was likewise soon headed there. She gave him the pistol.",
        "From Foley she learnt that the carpenter Thady Furlong had at last succumbed to the noose but had held his tongue to the end. Under the lash, his apprentice Darby had admitted to making the pike hafts, but was flogged to death unable to say where they went from the shop.\n\n\"The poor lad truly hadn't the know of it,\" Foley said.\n\nLieutenant Bolger had died from his wounds as well, Foley continued grimly. Of his three assistants at the malt-house who had also been pitch-capped, the lad who was a member of Fleetwood's company had been scalped and bled to death like Bolger. According to witnesses, neither United Irishman had yielded anything to the Yeos.\n\nBut the two others had babbled everything they knew of the comings and goings of their employer and workmate. They had been spared the scalping but were left with the caps yet adhered to their heads. \"I dinna think they had any useful information to give the bloody Yeos,\" Foley opined.\n\nMichael's heart was heavy as she returned to the Sutton shop.\n\nWiping away her tears, she began her day as Kitty. With the passing hours, her grief and despair gradually transmogrified into their cold counterpart: fury. Outwardly she calmly stitched, cut, and gathered fabric for some aristocratic lady whose life was so idle and foolish that she could concern herself over the trivialities of her finery, whilst inwardly, Aoife raged and screamed for justice.\n\nWhen her duties in the shop were concluded, she hastened up to the garret where she pulled out the green fabric and resumed her work. Her needle flew as the minutes ticked away...she must finish it! Some two hours later, she at last rejoiced at its completion. She spread it upon her bed, the dull sheen of the silk comporting with the satisfied gleam in her eyes.\n\nFrom the remaining, unused fabric, she cut as many neckerchiefs as she could --- seventeen.\n\nAfter a brief deliberation, she dumped out the contents of her knapsack and added a second rectangle of heavy linen to the back of the bag, fashioning a secret pocket. Into it she slid her green fabric handiwork, all folded and carefully distributed. She sewed the top edge of the pocket shut. Now the side of the knapsack that rested against her back had an even, subtle padding. Tonight, she would bring them to Fleetwood after leaving Rossnalough Manor.\n\nShe repacked the bag, adjusting the dagger and knitting pin in their hidden slots in the straps. Last night she had contemplated leaving the knife inside the wall with the pistol, but should she encounter Blaylock elsewhere than his lair, she had been loath to be entirely unarmed.\n\nAt ten past eight, Michael gingerly tilted open the window of the dormer and scanned the neighboring windows and dark alley below. Assured of being unobserved, she turned and extended her legs out the window, first one then the other, bracing her shoes against the shingles. Gripping the overhang of the dormer's roof, she pushed the window shut. By now she had memorized the route over the roof and avoided the loose shingles. She descended the side of the house with successive hand and foot holds on cool scratchy wood shutters, cooler brick ledges, and the hard, creaking drainpipe.\n\nCurfew was not till ten, so she took a direct route through the town, her steps brisk and her eyes alert. Several Redcoats did she spy, but they simply watched her pass without impeding her.\n\nSoon she was heading out into the dark countryside west of Enniscorthy, and the lights of the town receded behind her.\n\n*****\n\n\"PUT off that mask of burning gold\n\nWith emerald eyes.\"\n\n\"O no, my dear, you make so bold\n\nTo find if hearts be wild and wise,\n\nAnd yet not cold.\"\n\n\"I would but find what's there to find,\n\nLove or deceit.\"\n\n\"It was the mask engaged your mind,\n\nAnd after set your heart to beat,\n\nNot what's behind.\"\n\n\"But lest you are my enemy,\n\nI must enquire.\"\n\n\"O no, my dear, let all that be;\n\nWhat matter, so there is but fire\n\nIn you, in me?\"\n\n--- W. B. Yeats\n\nThe night was cool and clear, and a half moon lit the road to Rossnalough Manor. The rows of young crops and dim shapes of ruminating sheep usually were reassuring to her, but tonight there was a sinister quality to the dark fields. Perhaps it was the tainting of the fresh country air by the faint, residual acrid odor from yesterday's house burnings that yet hovered over the land.\n\nMichael's feeling of disquiet increased as she neared the pair of lanterns that marked the gateway to the Yeomen's garrison --- to her dismay, one of the two sentries on duty was an unfamiliar soldier.\n\nShe approached with her heart thudding distantly in her chest. The man she knew searched her knapsack as he oft had done, and she took up the usual stance for the frisking with her arms straight out and her feet about a half yard apart. Alas, 'twas soon apparent that the new sentry was decidedly more methodical in his search than his predecessor, and Michael struggled to maintain an easeful demeanor. Please, let him not feel her galloping heartbeat!\n\n\"What is this?\" the soldier demanded. His hands were moving up and down under her coat according to the usual procedure, but his more astute fingers had identified the top edge of her linen chest binding in the frayed armhole of her waistcoat.\n\nMichael swallowed, then lifted her gaze to meet his eyes that glinted in the lantern light. \"'Tis a bandage. I was playing with this stray cat at the stable last week, and she came over sort of crabbed-like and scratched me something fierce. Well, after that a big, red boil swelled in me oxter...fearsome painful, so it was. Anyways, the groom stuck it with a nail today and all this pus comes a-rushing out...I didn't want to soil me clothes.\"\n\nThe sentry hastily withdrew his hands. His palpation of her lower body was notably less enthusiastic. At last, they let her through the gate. Michael wryly considered how oft she had extracted herself from a scrape with a tale of a misadventure with a cat...that or pretending to stumble.\n\nShe got through the boot polishing quickly --- in her back and forth between the kitchen and row of boots under the main staircase, 'twas clear that the maids had stopped carrying up new food courses and were bringing empty dishes back from the dining room. But as to Blaylock's whereabouts, Michael could only guess.\n\nAs on the previous nights, she washed her rags in the courtyard, waiting for her chance to cross to the carriage house and sneak in. Across the grounds from the direction of the soldiers' tents, she heard sounds of chatter and intermittent bursts of raucous laughter. Among these men were those who had pitch-capped the men and manned the gallows, chortling at their victims' agony.\n\nThe cruelty of laughter at the suffering of another human was perhaps equal to the crime of the torture, Michael decided. Aye! All too well did she remember Blaylock's vile chuckle and grin as he stepped out of the Lanigan cottage buttoning his breeches...and the leering laughter of Blaylock, Lynch, and Bruckton as they held her down and pried open her most secret places.\n\nThrough the haze of rage, she was yet alert enough to note a new impediment to her plans: as she crouched by the well scrubbing her rags, two Yeomen entered the carriage house where the ordnance was stored --- one holding a lantern. What were they doing? Would they notice the missing pistol? Nay, she could not worry about that --- she had a mission to carry out.\n\nShe could get to the stall with the trap door from the stable, instead of by her usual route through the carriage house, but by this approach she could not as easily assess the stable for the presence of others before venturing in. As the two men failed to emerge from the carriage house after a few minutes, Michael realized that she would simply need to take the risk of the alternative means of entry.\n\nWaiting for the gap in the marching guards' sightlines, Michael scampered across the cobblestone courtyard and slipped through the door to the stable, immediately ducking down inside. She was in a space between two stalls which provided cover as she crept towards the main center aisle. Not a sound did she hear. Still crouching, she peeped round the edge of the stall --- nary a soul was in sight in either direction. Up she leapt and crossed to the stall wherein the entrance to the tunnel was located.\n\nIn a trice, she was climbing down the dank shaft on the rusty rungs. Lighting her candle at the bottom, she swiftly traveled the tunnel under the courtyard to the intersecting one inside the cellar wall of the mansion. At the foot of the narrow stairs up to Blaylock's office, she paused to fasten the dagger belt round her hips and transfer the knitting pin from the knapsack strap to the slot in the breeches along her right thigh.\n\nShe blew out the candle and ascended the stairs. In the utter blackness, she inched her way through the restricted space inside the wall, by feel extracting the flintlock from its hiding place between the studs. Her thumb checked the position of the hammer...aye, half-cocked and ready.\n\nThe tiny beam of dim light coming through the peep-hole in the wall beckoned her forward, and she eased herself soundlessly into a crouch to bring her eye level with the hole.\n\nThe chamber was unoccupied.\n\nHer hopes momentarily thwarted, she prepared herself to wait. She confirmed the ease of opening the panel and scanned the room, seeing nothing new since last night. Briefly, her eyes rested upon the portrait above the fireplace of the young auburn-haired woman who resembled Clodagh. Then she stepped back into the wall and pushed the panel shut.\n\nMichael waited, adjusting her cramped position after several minutes.\n\n'Twas not long after that she heard a sound --- she went motionless --- a door opened and closed. The hall door was outside of the range of vision of the peep-hole, but within seconds Blaylock was visible.\n\nAlone.\n\nHer heartbeat accelerated.\n\nHe went directly to the fireplace on the opposite wall, added another log to the low fire, and stirred it. The flames soon crackled higher. From the mantel he picked up a bronze candelabra, removing one candle to light it from the fire and lighting the other four from it. Now carrying the candelabra, he crossed the room towards her --- she resisted the instinctive urge to shrink away from him. He could not see her, she reminded herself. Now she noticed that he had a pistol and knife on a belt round his hips.\n\nHer quarry sat at his desk...his back was towards her hiding place, just as she had imagined the scene. Her left hand reached for the latch and her shaking right squeezed the butt of the pistol.\n\nThen she panicked --- what if he heard the cocking of the pistol?! She had not considered that! She should have cocked it full when he was across the room by the fireplace! Her teeth worried her lower lip as she watched him unlock a desk drawer and pull out a small book.\n\nThis is your chance, ye damn idiot! Dinna waste it! There below the queue of his black hair was the broad target of his back in the silver-braid-trimmed blue coat. Even with her meager shooting skills, she could not fail to hit it.\n\nBlaylock opened the book, took up the quill and tapped it briskly in the ink well. Michael's heart was thumping as she took a deep breath, placed her right thumb on the hammer, and drew the latch aside with her left forefinger.\n\nA sharp knocking sounded, and Blaylock's head turned towards the hall door. \"Enter,\" he said curtly.\n\nDamn! Michael's hand stilled on the latch.\n\nSounds of the door opening and closing.\n\n\"Colonel, sir!\" a clipped voice said. \"The guards apprehended an intruder on the grounds by the stable, armed with a pistol and dagger. They brought him to me as duty officer, but I wanted to check with you if we should secure him downstairs directly, or if you want to question him tonight.\"\n\nBlaylock only glanced up from his writing. \"Bring him in, Drury. Let's have a look at him.\"\n\nDoor opening...a muffled \"Bring him in.\"\n\nFootsteps...door closing...footsteps.\n\nTwo Yeomen marched into view with Declan Quickfist Muldowney O'Toole between them!\n\nHis hands were behind his back, bound Michael guessed, and his feet were tethered together by a rope perhaps a half yard in length, so that he shuffled as he walked. Each soldier was gripping him by the upper arm.\n\nAt that moment, Michael recognized the Yeomen as the pair who had been pouring and applying pitch caps at the scene outside of Bolger's malt-house yesterday. She wondered if Blaylock had assembled a select group of malefactors from among the soldiers in his company, as he had done at Kilmaedan Castle.\n\nThe trio halted near the center of the chamber, with Lieutenant Drury next to them. All the Yeomen were armed with a pistol and knife. Blaylock set aside his quill and leant back in his chair, facing the group. With his back towards her, Michael could not see Blaylock's reaction, and despite being able to see Declan's face, his expression as he regarded his former commander was unreadable.\n\nNow she would hear! Now she would know the truth! Michael lowered the gun and listened with all her ears. Expecting Blaylock to order them to release the prisoner for he was their spy, she was surprised at his silence.\n\n\"Lieutenant, you can go,\" he said at last.\n\n\"Yes, sir.\" Drury saluted and disappeared from view; the door opened and closed again.\n\nBlaylock calmly rose from his chair and crossed round the desk to stand in front of Declan. He folded his arms over his chest and simply looked at Declan for several moments, whilst Declan returned his gaze without flinching. Face to face, Michael noticed that as tall as Declan was, Blaylock was even an inch or so taller. She now had a partial view of Blaylock's face, and she grew increasingly puzzled at the silent exchange, then at the slow grin that creased Blaylock's cheek.\n\n\"Declan Quickfist,\" he said at last, pronouncing it with deliberate emphasis as if it were a sentence complete in itself.\n\nDeclan spoke not.\n\nBlaylock leant against the front edge of the desk and stretched his legs out before him, crossing one boot over the other. His arms remained folded, but his fingers tapped upon his upper arm. An amused expression grew upon his countenance.\n\n\"In the doomsday ledger of my career, there has long been a debt remaining outstanding. I must confess I never expected you to present yourself to settle it.\"\n\nThe corner of Declan's lips gave the faintest twitch. \"Of what unsettled score do ye imagine ye have cause to complain?\"\n\nBlaylock's face hardened. \"Surely, you are not pretending innocence. You're not that much of a simpleton. Where shall I start? Insubordination, dereliction of duty, desertion, and theft of the Duke's property.\"\n\n\"Was not the scarring of my back and forfeiture of my prizefighting winnings payment enough on those counts?\"\n\n\"For the first two, perhaps. But, as happy as I was to add your money to my coffers, neither corrected the other two offenses.\" Blaylock stood to his full height, his cold, blue eyes fixed on Declan's. \"No one defies me and gets away scot-free, Quickfist,\" he growled.\n\nDeclan did not blink. \"Muldowney,\" he said. \"My name is Declan Muldowney.\"\n\n\"So, you have adopted a new name...become a different man, have you? Such will not absolve you of your debt.\"\n\n\"'Tis no new name. 'Twas me birth name. My father was John Muldowney, the printer in Kilkenny whom ye murdered on June 7, 1787. Him and my mother Brigid Muldowney and my brother Rory Muldowney.\" Declan's green eyes shone.\n\nMichael stared, frozen in shock at the revelation. Declan had not been lurking about the Yeomen's garrison because he was a spy, but because he too was intending to avenge his family! He hadn't betrayed the rebels at all!\n\nThe two soldiers holding him glanced at each other.\n\nBlaylock too, for the first time since Declan entered, seemed taken aback. He stood with his hands on his weapons belt, studying Declan. \"The dark-haired boy who escaped.\" A wry smile twisted one corner of Blaylock's mouth. \"The boy who tried to fight me and gave me the scar by which I am named.\"\n\nHe began to laugh --- a low, mirthless chuckle. \"This is a fortunate day, indeed. Never did I suppose that I would see two old scores settled in one evening. To finally clear that blemish from my record...the little boy witness who escaped me...excellent!\"\n\nBlaylock continued his amused assessment of Declan and shook his head. \"No wonder you were such a ruthless fighter. But I am all puzzlement --- why did you join the Duke's guards and serve under my command...bearing this grudge of, what...eight years at that time?\"\n\nDeclan's mouth grew tight. \"I lost my memory the night you murdered me family. Had I known who I was, I would have killed ye years ago.\"\n\n\"Is that why you're here then? To kill me...to avenge your family? I see.\" Blaylock smiled. \"So, for two years you unknowingly served the pleasure of the man who had so wronged you? What a splendid farce! How I wish I had recognized you and enjoyed the comedy of your eager efforts to impress me --- your unknown, avowed enemy.\" He shook his head and chuckled. \"I was impressed --- truly I was. Indeed, I saw in you a lad whom I might mold in my likeness.\"\n\n\"Aye, I was a damned sapscull, so I was,\" Declan said matter-of-factly.\n\nBlaylock began to pace up and down before the desk, his arms crossed, his fingers tapping as he appraised Declan. His mouth pursed sagely. \"Let me guess --- you suddenly regained your memory that night whilst we had that red-haired cunt on the table?\"\n\n\"I saw your scar.\"\n\n\"So, you decided then and there to recast yourself as the noble hero, defender of the weak and innocent?\" He halted in his stride and studied Declan more intently. \"And then perhaps you appointed yourself an angel of justice as well?\"\n\nDeclan cocked an eyebrow.\n\n\"Not long after I left for England, I received word that Fitzgibbons and Burrows had been cut down in a manner that spoke to vengeance served. There are few men who could have accomplished the task alone. Was that by your hand?\"\n\nDeclan's chin lifted. \"Aye. So they deserved for what they did to the Lanigan family...and others.\"\n\n\"And that was what you were intending for me, I daresay? Before my soldiers caught you?\" Blaylock grinned. \"Excellent...and here I had resigned myself to a night bereft of diversion. But do enlighten me --- you participated that night as well, what is your punishment?\"\n\n\"To have the weight of it on my conscience all the months since. Had I known what the mission was to be --- had I known your true character --- I never would have done it.\"\n\nAgain, Blaylock contemplated Declan for a prolonged moment. \"Methinks these are not all the matters of interest between us, are they, Quickfist? Dare I say you've found some other occupation these past months aside from hunting me? Rumors were bubbling among the Orangemen of the remarkable fighting machine who routed their lads from a certain rebel tavern.\"\n\nNo response made Declan.\n\n\"So, if I were to guess, your noble fervor for justice has now found a home with the rebel forces. Nothing to say? You always did keep your own counsel. 'Twas one aspect of your character that I truly admired. But no worries, we can help you find your tongue.\" Blaylock signaled the two soldiers. \"Chair!\"\n\nDeclan struggled as the men abruptly dragged him backwards, whilst Blaylock crossed to the fireplace and thrust the poker into the flames. \"Take care, he's a wily one,\" he called over his shoulder.\n\nThe soldiers forced Declan to sit in a heavy, tall-backed oak chair a few feet behind him, where they threw wide leather straps round his torso and neck. The straps were affixed to the chair back, and as they buckled them tight, his bound arms were crushed between his back and the chair.",
        "His torso wrenched, and rasping breaths were audible from the compression of the band about his neck. He kicked and pushed against the floor with his tethered feet as the pair crouched and grabbed at his lower legs. One ankle was dragged aside and buckled to the sturdy chair leg with a rough jerk of a leather cuff that was fastened to the wood. Then they loosed the rope connecting his legs and drew his other resisting limb to the opposite chair leg, cuffing it fast so that his ankles were fixed some two feet apart.\n\nMichael watched in mounting agitation. She had noted the chair during her initial survey of the room, but apart from thinking that the heavy, carved, uncushioned object looked dismally uncomfortable, she had not appreciated the refinements that were now being employed.\n\nBlaylock observed the proceedings with satisfaction. The victim fully restrained, the soldiers straightened and took up positions on either side of the chair. Blaylock stood before Declan and looked down at him, his dark blue eyes glinting. \"Of all the interrogations I have conducted, I anticipate this one being the most gratifying of all...your suffering sweetened by our long personal connection.\"\n\nOne arm was folded on his chest, and a finger of the other hand tapped upon his chin as he considered Declan. \"But where to begin the repast, eh? So many delightful targets from which to choose --- eyeballs, ears, teeth, fingernails, ballocks.\"\n\nBlaylock appeared to arrive at a decision for he curtly barked, \"Shirt!\"\n\nOne of the men bent over Declan and tore open his white linen shirt, yanking it aside under the leather strap. Between the widespread edges of his coat, Declan's torso was bared --- one leather band at his throat, one about his chest, below the nipples.\n\nBlaylock's and Declan's eyes fixed upon each other. A sly smile lifted the corners of Blaylock's mouth. \"Notwithstanding the fact that it has been eleven years now, I do in fact remember your mother...fine Brigid Muldowney,\" he said in a musing tone. \"I was fresh in my career then --- with your lovely mother I first experienced the pleasure to be had in choking a woman as you fuck her...of the glorious, helpless spasms of a woman's cunt in her dying throes. Take heart, I daresay your mother was enjoying it as much as I was.\"\n\nDeclan snarled and shook in his bonds, the chair quaking against the floor. Blaylock laughed. Inside the wall, Michael's fist clenched tight upon the pistol handle, and her eyes stung with fury.\n\nBlaylock had returned to the fireplace and now pulled out the poker. No, not a poker --- 'twas a branding iron! At the end of the iron stake was a red, glowing brand in the shape of the king's crown. He crossed the room to stand again before Declan with the iron pointing at his breast. \"First, he needs to be reminded who his master is.\"\n\nBy God! She must do something! Think! Think!\n\nThe red-hot iron inched closer to Declan's chest, and he heaved back, rocking the chair.\n\n\"Usually, I invite my guests to persuade me to desist with the offering up of information, but in your case, we can dispense with that mummery and proceed directly to the entertainment,\" Blaylock commented, one cheek creasing with his half-smile.\n\nDeclan's gaze faltered not as he growled, \"Fuck you.\"\n\nBlaylock leant closer with the iron. The chair legs thumped and rattled. \"Hold the chair,\" he ordered. The two soldiers braced their weight on the oak arms.\n\nOh God! No! No! Blaylock's back was towards her hiding place, and the soldiers were intent upon their task. Her left hand slid the latch, and her right thumb cocked the pistol. Don't think! Don't think! She pulled the panel open --- her right hand immediately leveled the gun at Blaylock's back, and her finger squeezed the trigger.\n\nFire shot from the flashpan and muzzle. BLAAAMM!!!\n\n*****\n\nThere was a deafening explosion and flash of light --- the wooden chair collapsed sideways under him. What the Devil?! Lying on his side on the floor in the broken chair, Declan saw Blaylock in one motion whirl and fling the branding iron in the direction of the desk behind him. The red glowing iron flew end over end and thunked into something near the wall. There was a short groan and a small figure fell to the floor. Someone else was in the room --- someone unexpected!\n\nDeclan seized the distraction to flail against his bonds as he lay yet bound to the chair. \"Secure him!\" Blaylock snapped, leaping towards the wall. The two soldiers dropped to their knees and reclaimed his upper arms, whilst Declan's legs wrenched up and down. As near as he could tell, a gunshot had smashed the bracing of the chair on the left side, for his left ankle could kick almost freely, although the leather cuff still bound it to the broken chair leg in which the front cross rung was affixed.\n\nThe remainder of the chair understructure twisted and creaked as his other leg strained. The soldiers pulled at his arms. With a few sharp jerks of his feet, the other front chair leg snapped off --- his legs were free of the chair but were still cuffed to the broken legs and held apart by the sturdy two-foot-long cross rung.\n\nOver by the wall, Blaylock had hauled up the fallen intruder by the coat collar and was dragging the dazed, staggering figure towards the desk. As the soldiers lifted him by the arms, Declan's torso heaved backwards, momentarily escaping their hands and cracking the chair back from the seat. They collared him again, yanking him to his feet with the chair back still bound to him by the leather straps, and his feet braced apart by the rung and the splintered chair legs.\n\nDeclan at once lifted his feet, dropping his full weight on their unprepared hands --- he slammed to the floor and the chair back split lengthwise under him. When they again stood him up, the strap round his chest had torn free from its moorings in the wood, but that about his neck grew tighter under the full weight of the broken chair back hanging from it.\n\n\"Loose him!\" Blaylock barked as Declan began wheezing. \"I want him alive!\"\n\nOne soldier sawed at the leather band with his dagger and within moments the pieces of the chair back clattered to the floor. Firmly now did the Yeos hold him upright, drawing their pistols with their free hands and pointing them at him.\n\nCatching his breath, Declan saw that Blaylock had brought the intruder into the light of the candelabra at the front of the desk, some ten feet away from where he stood between the soldiers.\n\nMichael!\n\nShite! Shite! He could see that her breathing was labored --- she had been injured somehow. Even in Blaylock's instantaneous reaction to the gunshot, he had hurled the branding iron with astonishing accuracy at its source.\n\nDeclan stared at her in dismay --- the night had become one calamity after the other, starting with the unexpected pair of Yeomen emerging from the carriage house just as he had run from the shadow of the stable to the cluster of barrels. They had shouted for the guards, and the four men had subdued and disarmed him.\n\nAnd now both he and Aoife were at Blaylock's mercy!\n\nShe began to struggle against Blaylock's grip on her arm, wildly yanking her dagger from its sheath with her other hand. But his free hand easily restrained her forearm and smacked her wrist against the edge of the desk till she dropped the weapon.\n\nThat large hand now closed round her neck, lifting her off her feet by the chin and holding her fast with the back of her thighs against the edge of the desk. Her limbs flailed as she tried to strike and kick him, then claw at his hand, but when Blaylock drew his pistol and pointed it at her head, she ceased her attack, her breath rasping from his constriction of her neck.\n\n\"The dirty little boot black?!\" he jeered. He glanced towards a dark, open rectangle in the wainscoting, then snorted. \"So, you fancy yourself a spy, do you?\" His head swung towards Declan. \"One of your rebel comrades? A joint mission?\"\n\nDeclan had been struggling to control his face, but evidently without complete success, for Blaylock's dark blue eyes narrowed and he pronounced slowly, \"No...no mere comrade, 'twould seem.\" Still marking Declan's face, he cocked the pistol next to Michael's head. Declan tensed in the grasp of the soldiers.\n\nThere was a loud rapping at the hall door, and when Blaylock called, \"Enter,\" Declan heard behind him what sounded like three different voices inquiring about the gunshot and asking if all was well with the Colonel. \"An interrogation is in progress; all is under control,\" Blaylock replied and dismissed them.\n\nBlaylock resumed his scrutiny of Michael, roughly rotating her face towards the candlelight. \"Who is this lad to you to warrant such concern in your countenance?\"\n\n\"He's my boot black,\" Declan said. The soldier on his right started laughing, but quickly smothered it.\n\nMichael's breathing grew ragged under Blaylock's compressing hand. \"A brother? No. A cousin? I think not.\" He flipped the cap from her head.\n\nThe pale blue of her irises was nigh replaced by her expanded pupils as her eyes defiantly met Blaylock's. He released her neck. As her feet hit the floor, he jerked free the ribbon holding her hair back. His fingers twined in her loosed hair, twisting at the crown of her head and drawing up till she winced in pain --- then he let go. Her brown hair was a disheveled mop about her pale face.\n\nThe next moment he cupped the front of her breeches and vigorously delved between her legs --- she writhing and leaning away. She yelped. A grin overspread his face and he dropped his hand. Deep in Blaylock's chest, a low chuckle rose as she glared at him.\n\nThe chuckle rumbled louder and erupted in a harsh laugh. \"Aoife O'Farrell,\" he said at last. \"The girl with a face as lovely as her cunt and arsehole...as if I would forget. And the skittish little seamstress Kitty McDonnell at the dressmaker's shop!\" He shook his head. \"I tip my hat to you. Several times now have we crossed paths and I was none the wiser.\"\n\nWith the muzzle of his pistol, he flicked back a lock of her hair. \"'Tis truly remarkable, what you've done to that scarlet mane. I do hope you haven't done the same to that fiery little snatch of yours...'tis one of your most tempting charms.\"\n\nHer pale eyes blazed at him.\n\n\"Ah, yes, those strange witch eyes! Let me guess: you want revenge as well?\"\n\nBlaylock now turned to Declan. \"One's first supposition would be that you two are in alliance, but you truly were unhappily surprised to see her, weren't you? Which leads to the inescapable conclusion that you are each here on your own --- independently seeking vengeance. What a diverting coincidence! Indeed, I am honored by your attentions.\"\n\nHis mocking eyes traveled between them. \"Perhaps you should have coordinated your efforts, and you would have enjoyed more success.\"\n\nAll calmness, Blaylock crossed to a table near the fireplace and poured a measure of liquor from a crystal decanter into a goblet. With the pistol in one hand and the glass in the other he returned to his position half-way between them: Aoife standing, gripping the edge of the desk behind her, and Declan standing between the soldiers with his hands bound against his back and the chair rung yet strapped to his ankles. He and she both stared at Blaylock.\n\n\"Well lads, you're in for a treat tonight,\" Blaylock said to his soldiers. \"An evening which had originally promised nothing save the penning of tedious letters has now taken a most rewarding turn.\" He drank, then gestured towards Aoife with the glass. \"My frustrated plan to add this girl to the catalogue of my conquests has long rankled me.\"\n\nBehind his back, Declan again tested the binding of his hands. After they had first bound them, he had ascertained that it was a sturdy hemp rope, a half inch thick, and secured with multiple turns round and between his wrists. The knot was out of reach of his fingers. During the scuffle with the broken chair, there had been a shift in the binding, and he was now able to wriggle his hands a little.\n\nBlaylock addressed Aoife. \"Your sister was a fine fuck, with her big paps bouncing about...although, when put to it, I must say the pleasure was primarily to be found in her exquisite torment, for the actual fucking was a bit on the tame side. But you ---\" He cocked a taunting eyebrow. \"You offer a rare challenge: a spirit --- the conquering of which will bring a supreme thrill. 'Twas evident from the first and was confirmed when you stood stripped naked, and I perceived the fight in your nimble body.\"\n\nHe stepped before her, looking down into her eyes. \"Oh yes, Aoife O'Farrell...my recall is so detailed that I yet see you before me as you were at our last meeting: naked and spread on the table with your cunt and arsehole open for all to see.\" He grinned at her.\n\nDeclan saw the color rise in Aoife's cheeks, even as his own grew hot with rage. He twisted his hands within the subtly loosening ropes as he fidgeted side to side to distract the soldiers from the flexing of his arm muscles.\n\nWith a flick of his wrist, Blaylock downed his drink. \"I am all eagerness to begin the battle, little vixen --- to feel you fighting inch after inch as I plough your little cunt open.\" He stroked her flaming cheek with the gun muzzle. \"What is this? The blush of innocence? Are you virgin still?\"\n\nHe faced Declan. \"Quickfist! Did you not even claim your reward after all you endured to rescue her?\"\n\nDeclan gazed at him steadily but said nothing.\n\nBlaylock shook his head at him in exaggerated disappointment. \"There's the face of a mawkish chub if ever I saw one. Well, your cravenness only means more is the gratification for me, for the brutal triumph over a reluctant maidenhead is one of my particular joys.\" He winked. \"You lads can mount her next.\"\n\nThe two soldiers grinned and said in unison, \"Yes, sir!\"\n\n\"To force poor Declan to watch will be the most sublime torture we can inflict upon him, I warrant.\" Blaylock picked up the candelabra and crossed to the fireplace to set it upon the table next to the decanter. Declan urgently worked his hands behind his back.\n\nAoife's eyes were darting round the room as well as about her feet. She was searching for her dropped dagger, Declan realized, and he tried to signal her with his eyes that it was behind her on the rug under the desk. But she did not seem to comprehend him --- instead he made a subtle but pointed motion of his chin towards the opening in the wainscoting from whence she had entered the room. Her eyes fixed upon his with an anguished expression and she shook her head with a tiny motion. He gave a tight nod and more forcefully cast his gaze towards the wall.\n\n\"Keep watch over her,\" Blaylock commanded. He holstered his gun and unbuckled his weapons belt, tossing it upon one of the chairs by the fireplace. \"I'll even disarm to make it a fair fight,\" he chuckled.\n\nAoife flung herself round the desk and dashed for the hole in the wainscoting. Before the two Yeos could react, Blaylock leapt across the room after her, catching her coat collar just as she ducked through the dark opening. He yanked her back, sending her sprawling across the floor towards the desk.\n\nShe scrambled under it, spying and seizing her dagger from the floor as he approached, then she sprang to her feet on the far side, putting the desk between them. Crouching and poised lightly on her feet, she held the dagger at the ready, her gaze locked to his.\n\nBlaylock's blue eyes gleamed at her opening ploy. Grasping the desk chair, he cast it behind him so that it slid and fell against the wainscoting, the chair back partially inside the wall, blocking ready access to the escape route. With deliberate, unhurried steps, he made his way round the desk towards her --- she shifted side to side upon her toes. Abruptly she lunged at him, dagger first.\n\nBlaylock was startled, but not so much so that he failed to jump aside. He launched himself at her in answer, but she was quick as well, scampering back out of his reach. Again, she thrust the knife at him --- again he dodged the blade. They circled each other in the space between the desk and the watching men.\n\nTwice more did she attack without success --- Blaylock observing her with a humorous expression.\n\nDeclan's agitated heart thumped, and he shouted encouragement and warnings as he watched the wee lass battle Blaylock. She had good instincts and was applying the techniques he had demonstrated in drills --- nonetheless, Declan recognized that Blaylock was restraining himself. He was sparring with her in evident unalarmed admiration, but Declan knew all too well that Blaylock could disarm her with relative ease if he wanted.\n\nThe soldiers holding his arms were engrossed in the spectacle, and Declan used their inattention to tug more with more force against the rope about his wrists...there had been another sensation of give, and he had widened the bindings enough to allow the base of his thumb to squeeze into them. \"The Cassidy clip!\" Declan yelled. \"Use the Cassidy clip!\"\n\nWith her next lunge, Aoife's dagger connected with Blaylock, slashing his coat. He was momentarily taken aback, but when she quickly renewed her attack, he rushed at her, catching her wrist and spinning her back against his body with her knife hand before her.\n\nDeclan winced.\n\nPlucking the dagger from her hand and wrapping his other arm round her, Blaylock pressed her back against his torso and groped her breasts through her garments. With a twist of his shoulders, he threw the knife at the wall where it lodged tip first in the plaster, quivering and shining in the dark blue wallpaper above Aoife's reach.\n\n\"His gut! Go for his gut!\" Declan cried.\n\nJabbing an elbow back into Blaylock's belly, Aoife tore free from his arm and rushed for the hall door that was behind Declan and the Yeos. The men rotated to follow the action, each with one hand on Declan's upper arm and their other hand pointing a cocked pistol at him.\n\nShe yanked the door open, but Blaylock was too fast: his broad hand caught the door above her head and slammed it shut. As she backed away, he locked the door and pocketed the key. He arched an eyebrow at her.\n\nAoife swiftly sidestepped and jerked from its sheath the dagger of the Yeo holding Declan's left arm; with a growl she again faced Blaylock. Both of his hands otherwise engaged, the soldier's eyes dropped dumfounded to his empty weapons belt.\n\nBlaylock gave her a brief nod of acknowledgment. \"Clever girl.\"\n\nIn a flash, Aoife flipped the dagger in her hand from reverse to forward grip and bolted at him --- he dodged to the right, but not far enough. The blade sliced through his coat over his left flank. Blood sprouted over the slashed white shirt underneath and darkened the blue of his coat. The soldiers exchanged looks; Declan exulted.\n\nBlaylock looked down in surprise. \"A veritable hit...but not so deep as a well, nor so wide as a church-door,\" he muttered. He advanced on Aoife, the amused expression now vanished from his face. From Blaylock's movements, Declan guessed the wound was not mortal.\n\nHe redoubled the back-and-forth wrenching of his bound wrists.\n\nAoife charged again, but before the dagger point reached his chest, Blaylock seized her wrist --- his other hand prized the weapon from her fingers. She spun round attempting to flee, but he brought her up short with his hand on her arm, jerking her back against his chest as before, but now he twisted her arm behind her back and drew it sharply between her shoulder blades, making her cry out.\n\nHe stretched up his other hand and planted the knife in the plaster above the door frame, again far out of her reach. With a low chuckle he lowered his hand and grabbed her between her legs, bending his head to speak in her ear. Between his claim on her crotch and her arm pinned behind her, he gave her a rough shake.",
        "Aoife squirmed then raised one knee and drove the heel of her shoe into the instep of his boot ---- he grunted. Her free elbow jabbed back into his gut and she broke from his hold.\n\nHe nabbed her coat collar before she escaped, but as he hauled her back, she twisted her shoulders and slipped from the garment.\n\nDeclan's pulse hammered. \"RUN! RUN!!\"\n\nBlaylock tossed aside the empty coat, and Aoife ran towards the fireplace where she dived at Blaylock's weapons belt on the chair, yanking out his pistol and swinging her hand in the direction of her pursuer.\n\nBLAAAMMM!!! Fire flashed. The shot went wide, striking a bookshelf behind Blaylock.\n\nHurling the gun at him, she next went for the dagger, but knocked the belt off the chair. She dropped to her knees, scrabbling for the dagger handle as Blaylock threw himself at her, wrestling her arms --- the struggle knocked over the candelabra and the crystal decanter on the table next to them.\n\nWith a snarl, Aoife captured the knife.\n\nBut her triumph was short-lived for Blaylock's hand at once closed upon her forearm, forestalling any attempt to employ the blade. They were both on their knees panting, Blaylock behind Aoife, one hand on her arm and one twined in her hair. He forced her to bend forward and extended her shaking arm towards the fire --- in a moment, the dagger was in the flames and she dropped it with a squeal.\n\nBlaylock heaved her back from the hearth and threw her onto her back on the floor, whereupon he promptly straddled her hips --- enormous atop her petite form. Her limbs thrashed --- her legs kicking helplessly behind his back, her hands scratching and punching at him till he subdued them, one large hand holding both of her wrists against the rug above her head.\n\nShe spat at him, but he only sneered. Declan watched in horror as Blaylock's free hand ripped the front of her waistcoat open, sending the buttons flying. The white shirt was next, rent down the center to expose her slim, struggling pale torso with the white linen binding round her breasts. Blaylock yanked at the linen, but the multiple, snug layers resisted him.\n\nAoife continued to kick and writhe as he tugged at the binding. She got one hand free from his and groped wildly about the hearth above her head. Declan thought she was trying for the dagger in the flames --- instead her hand wrapped round the poker. Blaylock was too close to her for it to be effective! Declan despaired.\n\nBut, rather than swinging it like a club, she wielded it like a javelin, holding it at mid-shaft and driving it into Blaylock's neck.\n\nBlaylock recoiled with a harsh gasp.\n\nThe interruption was sufficient for Aoife to wriggle out from under him. Blaylock's hand closed upon the end of the poker as she sprang to her feet, and she yielded it to him, scrambling over the chair with a foot on the seat, then the back.\n\n\"RUN, AOIFE!! RUN!!\" Declan yelled.\n\nShe fled to the window, rattling the latched shutters for a second as Blaylock, now on his feet, headed after her. Finding no easy escape at the window, she turned, seizing a small table next to her and toppling it and its row of books into Blaylock's path, where it only briefly slowed his relentless advance.\n\nBack to the desk she raced, her savaged garments fluttering. She caught up the helmet from its stand and flung it at Blaylock's feet. As his boot faltered over the rolling helmet, Aoife again ran for the opening in the wainscoting. But he was too close behind for her to push past the desk chair he had tossed in front of it.\n\nShe crouched, her eyes darting about, then she jumped to retrieve from the floor the branding iron that Blaylock had hurled at her at the start. As Blaylock approached with the poker, she brandished it like a sword.\n\nAoife charged, and the iron implements clanked together. Even now, Blaylock's forward motion did not cease: in the extemporized sword fight, he forced her mercilessly back in a dancing retreat on her toes. Then she tripped over the fallen chair, tumbling backwards and smacking her head on the floor --- the branding iron clattered from her hand.\n\nAoife!\n\nSlowly she rolled to her hands and knees --- Blaylock tossed aside his poker and bent over her, lifting her by the linen binding between her shoulder blades and the back of her breeches.\n\nSwinging her small body off the floor like a sack of potatoes, he turned and pitched her face down onto the desk. Aoife groaned and writhed, stretching her hand and curling her fingers round the far edge of the desk. Dazed, she dragged herself on her belly across the desktop.\n\nBlaylock stood at the end of the desk by her feet, simply watching her and breathing heavily. Just as her head and shoulders got over the far end, he grabbed her ankles and abruptly hauled her back, flipping her over so that she was face up. She whimpered.\n\n\"A most stimulating exercise,\" he growled. \"I am more than ready for the...intimate battle.\" With his hands on her ankles, he jerked her down to the end of the table, simultaneously opening her legs and pressing the prodigious protrusion in his breeches against her crotch as be bent forward over her.\n\nShe shrieked and began flailing, but he once more pinned her wrists above her head with one powerful hand. Her desperate feet kicked against his buttocks and thighs.\n\n\"You as well, I see,\" he mocked.\n\n\"GET OFF HER, YE BASTARD!!\" Declan's arms strained and his teeth gnashed.\n\nBlaylock's other hand went to the front of the desk. For a moment, Declan lost sight of it, then it reappeared holding a knife. Still pinning her with his weight on her pelvis and her hands above her head, he slid the tip of the blade under the bottom edge of the linen binding and sliced it open, traveling from the lower edge of her ribcage to her breastbone. With the knifepoint, he folded the cut edges over, fully baring her chest.\n\nBlaylock studied her with close attention, his gaze traveling between her defiant face and her breasts that trembled with her struggling body. His hand entrapping her wrists suddenly shifted to her neck, his broad palm compressing her windpipe, his fingers digging into the flesh. Strangled sounds issued from her gasping mouth, and her eyes grew wider and wider as she clawed at his forearm...her breasts shook and her small pink nipples tensed and stood out in some primal response of terror.\n\nDeclan wrenched at his bonds in torment, insensible to the raw abrasion of his skin --- the ropes shifted, they were looser! He almost had the widest part of his thumb through!\n\nAoife snatched up the ink well next to her shoulder and blindly struck at Blaylock, smashing the porcelain container upon his shoulder. Blaylock released the pressure on her neck with a laugh. Aoife sucked in deep wheezing breaths, her hands lifting to guard her throat.\n\nWith the tip of the knife, Blaylock nudged her erect nipple. \"Oh yes, Aoife O'Farrell,\" he crooned, looking into her eyes, \"Oh yes.\" Now he straightened, lifting his hips off hers, and slid the blade down her belly which was violently hollowing with her labored panting...slid a couple of inches of the steel point under her breeches. With a swift twist of his hand, he slashed the thin leather strap of her dagger sheath, the waistband of her breeches, and evidently of her drawers, for with a single jerk, Blaylock got both garments down to her thighs.\n\nHe grinned. \"There's that little burning bush!\"\n\nFrom their position ten feet from the desk, they watched the unfolding scene --- the two soldiers in avid attention, Declan in anguish --- as Aoife, nigh stripped naked, fought anew, kicking and clutching at her breeches, her breasts jiggling, her slim waist and lithe hips arching, her little pink prize showing in flashes.\n\n\"This is a novel impasse,\" Blaylock said in an ironic tone, his hand pausing upon her breeches and drawers. At mid-thigh they were tethering her legs together, impeding his purpose. Declan's hand distorted as it squeezed within the rope constraints. He had been granted these extra few moments --- Blaylock would either need to yank off the clothes completely, or ---\n\nBlaylock cleaved the garments in two with a slash of the knife through both inseams at once. Each of her limbs now had its own loose leg of breeches and drawers. Apparently unhinged with terror, Aoife yet fumbled at the now useless breeches as Blaylock grasped her knees and forced her legs wide apart to lecherously gaze at her bare, spread cunny with its silky red adornment. The two soldiers gaped along with him.\n\n\"NO!! DINNA TOUCH HER, YOU GODLESS SHITE!! I'LL KILL YE!!\" Declan screamed.\n\nAoife's right hand flashed up in a stabbing motion.\n\n\"AAARRRGGGHGH!!!\" Blaylock reared back, a thin wooden stake protruding from his left eye.\n\n\"Jesus Christ!\" whispered one of the soldiers.\n\nAoife's frantic heels scuffed on the desktop as she pushed back from the injured man.\n\nDeclan wrested his hands free of the ropes and immediately swung his arms up behind the soldiers, slamming their heads together in front of him. As one, both collapsed and discharged their pistols.\n\nOblivious to the nearby scuffle, Blaylock yanked the stick from his eye. Blood and thick, clear jelly oozed over his contorted cheek. \"I'LL RAM THIS UP YOUR CUNT, YOU BLOODY BITCH!!\"\n\nThe Yeo on Declan's right was howling: his comrade's gunshot had struck him high in the chest and blood was bubbling over his uniform. On Declan's left, the stunned soldier wrapped his arms round Declan's leg ere he could move with his ankles yet braced apart by the chair rung. Declan threw himself on the man, driving a fist into his eye. The man swayed on his knees --- a second blow to the temple rendered him insensible.\n\nAoife half-fell, half-jumped from the far end of the desk, reeling to her feet as Blaylock flung the desk aside with a single hand. She staggered away, tripping on the dragging legs of her breeches whilst Blaylock pursued her, negotiating with his good eye the trail of objects strewn on the floor.\n\nDeclan scrambled to unbuckle the cuffs on his ankles, but the other downed soldier, in bitter devotion to duty despite being shot, stretched his arm, grasped the chair rung, and yanked Declan's cuffed feet back.\n\nAhead of him, Declan in panic beheld Blaylock tossing Aoife backwards atop the oak trunk. He bent over her with his knee on the lid and his hands flinging hers aside as they sought her neck.\n\nTwisting onto his back, Declan kicked free of the soldier's grip, but the man lunged towards him on his knees, dagger in hand. Declan raised both feet and crashed them down, snapping the sturdy chair rung in twain over the man's skull. The Yeo groaned, fell forward, and ceased moving.\n\nDeclan sprang to his feet and stumbled across the room, his limbs now separated, but his gait encumbered by the broken chair pieces yet strapped to his ankles. Blaylock's hands were round Aoife's throat; she was kicking and striking him, but her movements were feeble. One of Blaylock's arms cocked back --- the wooden stake clenched in his fist.\n\nDeclan drove himself shoulder-first into Blaylock's torso, knocking him off her and the stick from his hand.\n\nBlaylock landed on his feet in a crouch, his arms at the ready, his good eye fixed upon Declan. Fists raised, they circled each other with deliberate motions.\n\nBlaylock's lean cheeks creased with his malignant smile. \"You failed, Quickfist...again.\"\n\nIn his peripheral vision, Declan saw Aoife's small, pale body sprawled atop the trunk...unmoving. He could not tell if she was breathing. In a red tide of fury and grief, he rushed at Blaylock and launched a barrage of punches --- instinct, training, and heart melding in a raging assault without strategy or cunning. He pummeled the demon's face, chest, and belly with his throbbing fists --- colliding with Blaylock's fists and forearms as many of his blows were deflected. Several connected and his knuckles skidded in the gelatinous gore on Blaylock's left cheek.\n\nThe man seemed unhampered by the injury to his eye either in defending himself or attacking, for his punches came hard and fast with an accuracy equal to any opponent Declan had encountered in the boxing ring. Or perhaps the handicap was offset in a like measure by the impediment to Declan's movements from the broken chair rung dangling from his ankles.\n\nBack and forth, blow upon blow was blocked or landed. Declan took multiple strikes to his torso, arms, and face. Panting harshly, they traveled about the room, Declan tripping upon his awkward shackles, and both intermittently losing their footing in the disarray of toppled furniture, scraps of fabric, spilled books, objects from the desktop, and broken chair parts.\n\nIn a vigorous grunting volley of driving fists, smacking flesh, and spraying blood, Declan stepped back upon Blaylock's helmet. The broken rung strapped to his right ankle wedged inside the dome and pitched him off balance, his hands flailing. In that instant, Blaylock lunged at him and connected with a powerful uppercut to the jaw. Declan was thrown backwards, landing on his arse on the floor. He wrenched the helmet off his foot and hurled it at Blaylock. The solid thump to his belly stymied the approaching man for a moment, and Declan leapt to his feet.\n\nAgain their swinging arms engaged for another bout of fisticuffs. With the momentum of the fight, they were presently shuffling round and jumping over the soldiers' bodies. Blaylock now registered his fallen men. \"I bloody well told them you were a wily one,\" was his wry comment.\n\nDeclan's answer was a right cross that was blocked by Blaylock, but his left jab crushed into Blaylock's gut. Blaylock grunted and hunched forward --- Declan swung again, but the man had already backed away. Straightening, Blaylock's arm shot up and pulled from the plaster above the door the dagger he had earlier put out of Aoife's reach.\n\nBlaylock's eye glinted as he crouched, tauntingly switching the knife back and forth between his hands. Declan tried to kick at it, but his foe was too deft for his burdened foot. Blaylock surged forward with a slashing motion --- Declan leapt back but felt the burning line open along his flank, then the hot blood flowing. With his fists yet cocked, he staggered back, searching in the corner of his eye for the fallen Yeo's dagger. But he spied it not...it must be under the man's body.\n\nDeclan leapt backwards, his legs wide apart, and crouched to seize a panel of the broken chair back. With a roar, he charged, swinging the board. The makeshift weapon smacked into Blaylock's hand, sending the dagger in a high arc across the room to a clattering stop somewhere in the far shadows.\n\nIn the moment that Declan's body was off balance with the swing, Blaylock attacked anew, commencing with a heavy punch to his right kidney that made him reel with a wave of nausea. Blaylock pushed the advantage, driving Declan backwards towards the fireplace. His breath ragged through blood and spittle, Declan managed to parry the relentless blows, and by and by reversed the momentum with his own massive sequence of jabs, hooks, and crosses.\n\nBlaylock grunted and swayed, his head twisting and jerking with the strikes, his nose and cheekbone cracking under the force of Declan's fists, but then --- impossibly still conscious --- he regained his balance and faced forward again. Feeling a chair against the back of his calves, Declan hopped sideways, but the broken rung caught on the rug and made him stumble. Blaylock countered with a mighty kick to his belly.\n\nDeclan doubled over with a hoarse, retching cry. He saw Blaylock's hand close round the neck of the heavy crystal decanter on the table next to them --- too late --- it crashed over his head.\n\nWhiteness...pain...he came to upon the floor, Blaylock straddling him with his weight on his belly and his hands round his neck. Declan heaved and gasped, garbled sounds yet issuing through the constriction of his windpipe. His legs kicked and his fists struck out wildly, but the low angle diminished the impact of his blows, and Blaylock faltered not as the compression increased.\n\nHe couldn't breathe! Shite! Shite! His vision was wavering...a high-pitched wheeze reverberated in his ears. Ma! Da! Rory! Aoife! Forgive me!! Please God!! He clawed at Blaylock's hands.\n\nBlaylock sprang up with a howl.\n\nDeclan's vision refocused with several deep, sucking breaths, and he beheld Aoife in the shreds of her garments facing off against Blaylock with a bloody knife in her hand. Blood was pulsing from a wound in the back of Blaylock's neck.\n\nDeclan lurched to his knees, driving his shoulder into the side of Blaylock's leg, instantly bringing him down before the fireplace. He threw himself astride the monster, bludgeoning his face with his fists.\n\nThere was a crazed screaming like a banshee, and Declan realized that Aoife was on her knees behind him, plunging the knife over and over into Blaylock's belly and groin.\n\nBlaylock's body spasmed and arched, nigh throwing them off. He hissed blood between his teeth, and his right arm reached behind his head...extending without flinching into the fire to grasp the dagger he had forced Aoife to drop there earlier. Declan imprisoned Blaylock's head between his hands, and he smashed the back of his skull against the hearth stone.\n\nThe stench of burning hair rose, and Blaylock's hand emerged from the fireplace engulfed in flames and holding the glowing red dagger --- his dark blue eye bore into Declan's. In a frenzy Declan slammed Blaylock's head into the stone again...and again...and again...his fingers sliding in hot blood as the skull fragmented under the macerated scalp. Behind him he heard the repeated meaty stabs of Aoife's knife.\n\nAt last, Blaylock's hand fell back.\n\nHe moved no more.\n\nDeclan released Blaylock's head and rose to his feet. He turned. Blaylock's belly and breeches were a sea of blood. Aoife was standing as well, her feet on either side of Blaylock's knees, her knife hand hanging at her side, her face streaming with tears as she stared at the painting above the fireplace.\n\nHe pulled Aoife away. The candelabra, now on the floor, had just set fire to Blaylock's bloody breeches. Declan's eyes swept the scene of carnage. \"We must hie from here!\" he rasped. He bent to rip the cuffs from his ankles, then hastened to the soldiers on the floor. Crouching, he determined that one was dead from his comrade's gunshot, and the other was still alive, but unconscious. Finding the missing knife, he slit the throat of the yet breathing Yeo.\n\nFrom the men's hips he claimed the weapon and cartridge belts, tossing one set to Aoife. She had found and donned her coat and was using her knife to cut off the remnants of her breeches and drawers; into the fire she tossed them. Save for her shoes and stockings, she was naked below the waist. Whilst Declan pulled off the boots of the smaller soldier, she collected the pistols from the floor.\n\nA heavy knocking sounded at the hall door. \"Colonel Blaylock, sir? Is all still well?\" The locked door rattled. \"Colonel Blaylock?\"\n\nTheir eyes met in panic --- they yanked the man's breeches off.\n\nBrisk rapping now came from the windows as well, and lantern light from outside was visible between the shutter slats. A thudding came from the hall door. They were attempting to batter it in!\n\nAoife snatched up the breeches. \"Make haste! This way!\" she urged. She dragged the chair out of the hole in the wainscoting and ducked inside. Declan followed, hunching and twisting to maneuver his large body through the small opening to find himself inside a narrow, dark space between two walls. One last look at the chamber before pushing the hinged panel shut showed Blaylock's body consumed in flames.\n\nThey were now in complete blackness save for a tiny, glowing peep-hole in the wall. Declan rotated sideways and edged his way through the tight confines, guided by her hand.",
        "\"Fifteen steps down,\" she whispered. The noises from the chamber grew fainter as they descended a wooden stair.\n\nAoife halted him when they reached a wider space at the bottom, where the air was cool and musty smelling. \"Wait, I'm putting the breeches on,\" she murmured. There were soft sounds then a moment later, a small flare of light. She was crouched, clad in the dark blue breeches, holding a candle and putting a tinder box into a knapsack that she must have left here. Declan observed a long, dim passageway some two and a half feet wide, seemingly built into the mansion's foundation.\n\n\"This way!\" She slung on the knapsack and set off with a fast stride, holding up the oversized breeches with one hand. Declan unwound the rope that was yet hanging from his right wrist and passed it to her for a belt.\n\nThey proceeded several dozen paces, then descended a stone stair to another tunnel, this clearly carved from the earth, and Declan had to stoop in the damp-smelling passage. Aoife explained that they were crossing under the courtyard and that the tunnel exited in a stall in the stable.\n\nHis mind raced; from the stable they would need to get to the wall without being seen...he was fair certain there was a window at the far end where he had been scaling the wall.\n\nThe tunnel ended in a shaft with iron rungs on one side. Aoife extinguished the candle, and they climbed up into a dark stall cluttered with crates, barrels, and tools. Declan heard a scattered snort and hoof scraping but otherwise the stable was quiet. Peering round the edge of the stall, they saw no one.\n\nThe door into the courtyard was on the opposite side of the center aisle. Creeping up to it, they peeped through the glass pane. Across the grounds was visible an agitated cluster of Yeomen on the terrace by the windows to Blaylock's office; they were climbing by turns through a broken window. Others were running from the well with buckets of water. Declan realized that the two guards who patrolled this side of the manse were part of the group.\n\n\"Quick!\" he whispered. They rushed headlong down the center aisle past rows of stalls to the far end of the stable where there was indeed a small window. A brief survey through the dark glass, then he swung it open for them to climb out. Shouts came from the terrace as they emerged, whether at them or at the scene in Blaylock's chamber was uncertain. Immediately to the right was the tall stone wall enclosing the estate, and Declan gave Aoife a shove to hasten her ascent, then scrambled over himself. Were the voices getting louder?!\n\n\"This way, Aoife!\" Jumping over shrubs, he led them away from the wall, pausing to retrieve his own knapsack from the crotch of the oak tree that had been his lookout post.\n\nThey ran through the field of the adjacent farm...then scrambled over a low stone wall onto the land of the next farm. Field after pasture after field they crossed, panting...skirting wide to the north of the estate. The moon had set, and only starlight illuminated the terrain. Through rows of young barley they sprinted, their pace slowed and their footsteps muffled by the soft earth under their shoes...only to pick up speed in the grassy pastures as they dodged the shadowed forms of sheep and cattle. Stones tripped them...fences and walls emerged from the darkness to impede them.\n\nAt length they stumbled to a walk, their hoarse breaths gradually subsiding.\n\nDeclan judged they had put some two miles between them and the Yeomen's garrison, and by the circuitous route were approaching Enniscorthy from the northwest. Presently they reached a rise in the land from whence were visible the faint, scattered lights of the town. They stopped and contemplated the view for some moments.\n\n\"The Redcoats are enforcing the curfew,\" Aoife said, her voice raspy.\n\n\"Aye.\" In the dim light from the stars, he surveyed his blood-stained hands and sleeves. His breeches and coat-back were also soaked from the dagger slash on his side and from Aoife's knife attack on Blaylock. Her coat and the commandeered breeches concealed the lion's share of the blood that covered her torso and thighs, but either way, they could not risk being observed till they had washed.\n\nHer eyes appeared to be making a like assessment. \"I know somewhere we can go,\" she said.\n\n*****"
    ],
    "authorname": "astushkin",
    "tags": [
        "fighting",
        "fight",
        "action",
        "action adventure",
        "war",
        "rebel",
        "tavern",
        "violence",
        "justice",
        "rebellion"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/celtic-mist-ch-14"
}