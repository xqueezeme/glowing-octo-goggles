{
    "title": "A Stringed Instrument Ch. 14",
    "pages": [
        "14.\n\nPhoebe was still there in my arms when morning came. Not that morning was much to speak of; it was grey and cold, rain drumming on the roof of her little flat, staying-in-bed weather.\n\nI felt her wake, and as she snuggled back against my chest I murmured \"So, what do you have on today, love?\"\n\nShe yawned and stretched, then giggled as I reached around and scratched her exposed tummy. \"Tickles! Um, I'm giving lessons ten-thirty to twelve. You'll want to be out for that, little Amy's a wee bit rough on the ears. Another student four-thirty to six. Nothing else booked, but I do need to put in a lot of practice this week.\"\n\n\"What are you playing?\"\n\n\"A good question. The Offertorio from Verdi's Requiem, the opening from Strauss's Don Juan. No problem there, I know those. And the first movement from a concerto of my choice.\" She still had her back to me, but from the tone of her voice I thought she was scowling.\n\n\"So what are the options?\"\n\n\"I know the Elgar very well. I've been playing that one since I was fourteen, and it's a pretty popular option. It's just...\"\n\n\"Hmm?\"\n\n\"Bad connotations. Too much of death in that one, just at the moment.\" She squeezed my arm against her ribs. \"I'd rather not play it.\"\n\n\"Then don't. What else is there?\"\n\n\"Oh, Bach, Schumann, Shostakovich... I could do them, but I feel like I want to play the Glass. The one I picked up when I took you to that music shop. I just want to do something a little different.\"\n\n\"So can you do that?\"\n\n\"Yeah, but I'm not as practiced with it.\"\n\n\"You've got a week to sharpen up, right?\"\n\nI felt her chuckle. \"Oh, darling, I think I just heard you volunteer to be my page-turner. You are going to be so utterly sick of Philip Glass by the time you go home.\"\n\n\"Mmm-hmm. Bet I won't be sick of you.\" I propped myself up on one elbow, and stroked her face. \"Ten-thirty's not for a while yet.\"\n\n\"Is that so?\"\n\nI brushed a finger across her lips, trailed along the line of her jaw, traced the spirals of her ear. \"Last night was lovely. I want more.\" I licked her earlobe, tasted the skin just below her ears. It was a trigger point: she shivered, and her lips parted. Then she reached back, scooped up her hair between thumb and fingers, exposing her neck.\n\nI took the hint and kissed her there, slow and firm, my lips following the bumps of her spine. My hand was at her face again, playing over her mouth, drawing her lower lip down and dipping inside. She caught me between her teeth, explored my fingertip with her tongue, exhaled warm breath as I kissed just below the hairline.\n\nLast night we'd both been working off pent-up desire. Now we were relaxed, and our love-making was more like a slow wordless conversation about nothing in particular. The day brightened and the rain eased as we caressed and explored one another, more concerned with touching than with where we touched. When you're with the right person, sensation can be found anywhere. A whisk of Phoebe's hair brushed across my forehead; my lips dawdling at the back of her knee; her toes wriggling against my ankle. And often, just stillness and warmth and quiet contact.\n\nEven when the sensual drifted into sexual, there was no hurry about it. She spent an age with her cheek pressed to my chest, and another at my belly, and another at my thighs. Her tongue and I became reacquainted, her fingers slipped and curled inside me. I floated on a warm tide, and I was almost sorry when at last I felt the current carrying me to my destination. No shrieks, no fireworks, just a feeling of gentle release pulsing like a slow heartbeat.\n\nShe moved up alongside me to cuddle, and I ruffled her hair. As I did, my body made an unexpected crackling noise.\n\n\"What was that?\"\n\n\"My back.\" I wriggled my shoulders experimentally; it felt good. \"It's been out for weeks, too much computer work. And tension. Guess I just relaxed enough to loosen it up.\"\n\n\"Mine's been acting up too, I'll have to get a back rub off you some time.\"\n\n\"Deal.\" I pulled her against me, and I might have drifted off to sleep again, if her phone hadn't started ringing. Gilbert and Sullivan: her dad.\n\nShe'd left it on the kitchen bench and had to get up to grab it; I stayed in bed as she threw on a dressing gown and answered it.\n\n\"Hi Dad? Yeah, not bad, and you? No, that's okay, I was awake.\"\n\nI sat quietly while she listened and then replied.\n\n\"Yeah, we did most of it yesterday. Gia and Chloe \u2014\" her mother's sisters \"\u2014 and Scott. I picked out a box of books and stuff, and there were a couple of pictures that I didn't want to squash into my case. Gia's holding on to them for me, she's coming up to Sydney in a couple of months so she'll bring them then.\n\n\"Yeah, birth certificate and stuff like that. Are you going to need \u2014 oh, okay then, I'll hang on to them. And a few clothes, and Mum's jewellery \u2014 no, not much, but you remember the malachite earrings? Yeah, and the necklace. There were a couple of other pieces Scott gave her, and we all agreed he should have them. Some pictures and things. And, ah, I have her wedding ring. Yes, with the rest of the jewellery. Do you \u2014 oh, no problem, I thought you would but I just wasn't sure, you know. No problem, I'll get it back to you.\n\n\"No, I'm okay. It was sad, but... kind of good to do it, you know? Lot of little things I'd forgotten, it was good to see them again. And talk to Gia and Chloe. I should keep in touch with the cousins more, they're all on Facebook now.\n\n\"Oh, I was going to tell you! They called yesterday, they want me back for a second round on Monday... no, different pieces this time. Two they've set, and one of my choice. I'm going to do the Glass. Yes, the one you didn't like...\n\n\"No, just a few students... um, and. Yvonne's visiting. She's staying for a few days, but she knows I'll mostly be practising for this.\"\n\nI looked at her sharply, and she looked back at me and nodded, mouthed I love you. \"Yes, we did. But we talked it over yesterday, and we sorted out a lot of things, so... yeah, here we are. Yeah, Dad, I know. I've thought about it a lot and this is what I'm doing. I'll talk to you about it more later... probably send you an email? Don't \u2014\"\n\nShe paused again, pacing closer to me, as he spoke.\n\n\"No, Dad. Not an issue. They don't ask about stuff like that. It's none of their business anyway.\" She gave my shoulder a squeeze.\n\n\"No, I need to talk to her about it, but not until after my audition. I'll talk to her then, and I would really like you to back me up on that if you think you can... no, I don't mean that. Just, if she brings it up with you, make sure she understands this is something I've thought about long and hard. Yeah, I know. I'll talk more later, I promise, but I've got a student this morning and I need to get ready. Love you, Dad. Look after yourself, and I'll be in touch. Okay, bye now.\"\n\nShe put down the phone and stood there, taking a couple of deep breaths. \"Well, that's done. Half-done, anyway.\"\n\nI walked over and gave her a hug. \"How'd he take it?\"\n\n\"Well... not delighted. Lot of 'are you sure you know what you're doing?' and so on.\"\n\n\"And do you?\"\n\n\"Not really. Never stopped me before.\" She returned the hug. \"But I don't think you're going to get fired again. He hates having to go back on a decision even once.\"\n\n\"Glad to hear it. Um, does this mean we're out generally?\"\n\n\"Can I think about that a while? See how things go with Dad and Yaya, and then look at the rest of it?\"\n\n\"Sure.\" I squeezed her, then let her go. \"By the way, your student's due in, ah, nineteen minutes.\"\n\nWe showered and dressed in a hurry; since I hadn't brought a change of clothes, all mine were recycled from the day before, except the shirt that Phoebe had laundered for me. We wolfed down some cereal and I was just heading out the door as Phoebe's student Amy arrived.\n\nI spent the morning in Newtown, hitting the second-hand shops for a few days' worth of spares. I passed on several acres of corduroy and a pink faux-fur jacket that looked suspiciously like a skinned Muppet, but managed to get several decent shirts and a couple of pairs of jeans in my size. (By the way, this story was posted on lit erotica dot com and if you're reading it elsewhere, it's been ripped off without permission.)\n\nAmy was gone when I returned, and Phoebe was in the middle of something classical-sounding (the Strauss, as it turned out). I waited quietly until she finished, and then she rose and kissed me on the cheek. \"Hello, stranger. Is that lunch I smell?\"\n\n\"Got us some pies.\"\n\n\"Just the thing. I'm ravenous.\"\n\nAfter lunch I cleaned up. I looked back from the sink to see her sitting at her stool, holding her cello but not doing anything.\n\n\"Everything okay?\"\n\n\"Yeah, just gearing myself up for the Glass. It's a bit of a shift from the others.\"\n\n\"Do you need a page-turner?\" Although I had no idea whether I'd be able to follow the music; I hadn't read a score since school days.\n\n\"I'm trying to get by without. But if I get stuck...\" She handed me the sheet music. \"Hang on to it, I'll tell you if I need it.\"\n\nSo I pulled up a chair behind her, and she began.\n\nIt took me a while to come to terms with the music. I'd been exposed to the classical standards at one time or another \u2014 it's hard to avoid them altogether, even if you're not dating a musician \u2014 but Glass was not at all what I was used to. It was like trying to make sense of an unfamiliar programming language; at first it seemed jarring and discordant, and only gradually did I start to recognise its internal logic as its motifs emerged, disappeared, reappeared in new guises. Even then I couldn't decide whether it was brooding or hopeful, and I couldn't tell whether I liked it.\n\n\"Music, please.\" Phoebe had stopped.\n\n\"Oh, I'm sorry, I lost my place.\"\n\n\"Page eighteen, I think.\"\n\nI found the page and showed it to her.\n\n\"Oh, bloody hell. Always trip up on that bit. Let's try that again.\"\n\nShe restarted from somewhere in the middle. I watched her play; it looked like hard work, with a lot of intense bowing and some fast finger-work for her left hand. She went over the same passage three more times; I couldn't hear the problem, but she seemed more and more dissatisfied.\n\n\"For crissakes. I need a break. Can I get you to rub my back, love?\"\n\n\"Always.\"\n\nShe lay face-down on the bed and I did my thing, noting how tight her shoulders were. \"You'll get there,\" I told her.\n\n\"Hope so, or I'm screwed next Monday.\"\n\nI kept going until my hands got tired, and then I lay beside her and put my arm over her. She rolled over and cuddled me back, the cello abandoned for now, and we snuggled together in comfortable silence.\n\nI'd only meant it to be for a few minutes, but I was warm enough and cozy enough that I drifted into half-sleep and stayed there until Phoebe's alarm reminded her that it was four-fifteen and her next student was due in a few minutes.\n\n\"Gah. Meant to get so much more done. You're too distracting, love.\" But she kissed me as she said it.\n\nI cleared out for what remained of the afternoon. At first I explored a small park that I'd noticed on the way to the station; on a better day it would've been a fine place to sit and feed the ducks or read a book, but it was clouding over and threatening rain again. So instead I walked on to the neighbourhood shops. I sheltered under the awnings and browsed in windows, killing time, waiting for six o'clock... until all of a sudden I caught a whiff of something that put a smile on my face.\n\n\"I got us chips.\" I put a steaming-hot paper-wrapped bundle on a mat on Phoebe's table. \"Can't have winter without hot chips. Fish too.\"\n\n\"Chips? I love you too.\" She put down a book of cello exercises and helped herself to a seat. As I unwrapped the package she said, \"Dad used to buy us chips after my cello lessons, when I was about twelve. He'd get a cup of chips for me and one for himself, and then he'd try to distract me into turning around so he could steal a chip when I wasn't looking. He said they tasted better that way. Sometimes I managed to steal his, but he's pretty hard to trick.\"\n\n\"That's adorable. John and I used to pool our money and buy three bucks' worth after school.\"\n\nShe selected a chip, golden-brown and crisp, and tested it. \"Mmm. Good. I think I'll keep you.\"\n\n\"Delighted to hear it.\" I settled into my chair opposite her, and we played footsie as we got stuck into the fish and chips.\n\nWhen we'd nearly finished it off Phoebe paused, gesturing at me with a large chip held like a baton. \"Sweetie, how do you feel about me auditioning for this job? If I do get this position, it means I'm in Sydney for the foreseeable.\"\n\n\"I know. I... I'd like you to be closer, but this is your thing, you have to follow it. If that means us making a lot of long-distance calls and me coming up to Sydney when I can... well, you're worth it.\"\n\n\"Aww.\" Her eyes were bright, and she took my hand and pulled it toward her. \"You're sweet. And I promise I'll visit as often as I can. You never know, there might even be an opening for a cellist in Melbourne some \u2014\" Then her expression changed as she looked past me to the door, and she let go my hand in a hurry. \"I cancelled my seven o'clock, I know I did!\"\n\nI turned and looked toward the door, but there was nobody there. When I turned back, Phoebe had a satisfied grin on her face, and a couple of the chips nearest me were missing.\n\n\"I'll get you for that.\"\n\n\"Promises, promises.\"\n\nI walked around behind her, took her by the wrist, and brought her hand to my mouth. Her fingers were salty and I licked them clean, thumb tickling the inside of her wrist as I did so. With my other hand I stroked her lips and it wasn't long before she responded, catching my fingers between her teeth and laving them with her tongue, as dextrous and graceful as the fingerwork I'd watched a few hours earlier.\n\nI drew her to her feet, one arm around her waist, lips at her neck. But then she brought her hand between us, pushing me away.\n\n\"Stop.\"\n\nI stopped. What did I do wrong?\n\n\"I would love to climb into bed with you right now, but if I do that I'm going to be there till morning. And I haven't done nearly enough work today. Sorry.\"\n\nI hugged her and kissed her chastely on the forehead. \"I shall be good, then.\" And I cleaned up the remains of the chips as she washed her hands and returned to Philip Glass...\n\nAnd still she was struggling. Sometimes she stalled on the same passage that had caused her trouble before; sometimes she made it past there, but stopped abruptly later on. I couldn't hear the mistakes \u2014 if mistakes there were \u2014 but I could tell by the set of her shoulders and the hiss of her breath that something was still wrong.\n\n\"Phoebe? Is there anything I can do?\"\n\n\"I hate to say this, but...I don't think I can concentrate with you around. I'm sorry, I just \u2014\"\n\n\"It's okay. I was kinda getting that vibe. Hmm... look, it's getting late, not a lot of options tonight. But what if I make myself scarce tomorrow? I can go visit my aunt, see museums or whatever, leave you to practice in peace, come back in the evening. Would that work?\"\n\n\"I think so. Are you okay with that?\"\n\nI had to think carefully about my reply. It wasn't an easy thing to do; having almost lost Phoebe once, my instincts were screaming at me to cling to her, to spend every second I could with her. But...\n\n\"Yeah, I think I'll be okay. Just promise that when you're done for the day, and you feel you've done enough, you'll give me a call.\"\n\n\"I promise.\" She stood on tiptoes, kissed me on the nose. \"Let's give that a try.\"\n\nAnd it worked, well enough. After a quiet night cuddled up with Phoebe I spent Wednesday out with my aunt, who monologued on the Evils Of The World and the trouble I had saved myself by steering clear of men. (Having been divorced twice, she had strong opinions on the subject.) We visited a museum exhibition, and when she ran out of monologue I told her I was Seeing Somebody. She was pleased to hear it.\n\n\"Sometimes, Yvonne, I think my life would have been so much simpler if I'd been a Lesbian like you.\" I had my doubts, but I chose not to argue.\n\nWe parted at five, and since I still hadn't heard from Phoebe I checked myself into a movie that I'd been meaning to see. The opening credits had just started when my phone buzzed silently.\n\nHave been good today, lots of work done. When can you be home?\n\nI'm in town, can be back in thirty min-\n\nI paused, considered things, then deleted the message and started again. I wasn't a teenager; I didn't need to drop everything and come rushing, and nor did Phoebe need that of me.\n\nI'm at the movies, just starting. Home around 8?\n\nExcellent. See you then.\n\nShe met me at the door, with a boisterous hug that suggested her mood was greatly improved. \"How was the movie?\"\n\n\"Not bad. And you? How did you go with your friend Philip today?\"\n\n\"Much better.\" She hugged me again. \"The thing is, when you're around, I start thinking about what it sounds like to you, and what you're going to think of it. Then I find myself trying to play for you \u2014 do I need to emphasise this theme so Yvonne notices it? And it gets in between me and just playing the music, I get self-conscious and start tripping myself up. I need to think about the music first and get it right for me, and then you can listen. But not yet. It's silly, I don't mind if the neighbours hear it, but you're different.\"\n\n\"I'll take that as a compliment... I guess?\"\n\n\"You should. Not many people get under my skin like that. So, sweetie, what would you like to do tonight? I'm cooking.\"\n\n\"Cribbage?\"\n\n\"Love to.\"\n\nAfter she'd beaten me three games out of five, we retired to bed. We ended up head to foot, me playing idly with her toes as we talked.\n\n\"Phoebe, I've been thinking... I might head back to Melbourne tomorrow, leave you in peace to practice.\"\n\n\"You sure? You don't have to.\"\n\n\"I don't...\" I counted five little piggies, wiggled each toe in turn. \"But I know what this audition means to you. I'll be happier if I know you're absolutely free to concentrate on this without me getting in the way.\"\n\nI kissed the tip of her big toe. \"And whatever happens with the audition, I'll still be your girlfriend afterwards, and I'll come back soon.\"\n\n\"It's a date.\" She flicked off the light, then wrapped her arms around my ankles. \"By the way, I'm pretty broke, probably won't make it down before, but I'll be in Melbourne mid-August for my birthday.\"\n\n\"Not partying in Sydney?\"\n\n\"Might have a small get-together there. But it's the first one since Mum died, I want to do something with family.\"\n\n\"Ah, that makes sense.\" I squeezed her knees. \"How are you going with that stuff?\"\n\n\"Oh... okay? I guess. Still gets me sometimes. I dream that we're talking, just mundane stuff. One time she asked me if I was seeing anybody and I started to tell her about you. Then I woke up and remembered you said she'd already figured it out. And sometimes I catch myself thinking 'That'd be a good birthday present for Mum', stuff like that. But getting better, I think.\"\n\n\"I love you. Any time you want to talk about stuff, I'm here.\"\n\n\"I know. Love you too.\" A few minutes later I felt her relax into sleep, still cuddling my legs like a teddy bear, and not long after I dozed off too.\n\nWe said our goodbyes in the morning. I left one of my shirts down at the bottom of the bed, where she'd find it after I was gone. As I was about to go she said, \"Can I ask you a little favour?\"\n\n\"Sure, what is it?\"\n\n\"I need you to deliver this.\" She gave me a small envelope, with a name on it. I didn't open it, but from the weight and the shape I had a pretty good idea what was inside.\n\n\"Of course.\"\n\nI flew back to Melbourne that afternoon. The apartment was a mess: Aleks had been hit by inspiration and was furiously soldering bits of metal scrap into some sort of sculpture. Once I'd confirmed that he was using lead-free solder, I didn't bother remonstrating with him further. At least he'd put down a drop-cloth first.",
        "\"I don't see you since Monday,\" he said. \"You went away?\"\n\n\"Sydney.\"\n\nI must have sounded pleased with myself, because he replied, \"You're back with Phoebe, isn't it?\"\n\n\"Yes!\"\n\n\"Oh thank God. I have been THIS CLOSE to cut the cord on your stereo.\"\n\nI should have reminded him of the performances he invariably put on after a breakup. After the last one he'd spent four days painting a gigantic canvas of a demonic pig whose face bore a suspicious resemblance to his ex Wasim. But since I was in a good mood I startled him with a hug instead, then went off to unpack.\n\nOn Monday I went back to work. Since my employment had officially been terminated we had to go through the paperwork again; Susan had returned a week earlier, and I was pleased to see I was reporting to her once again.\n\n\"Good to see you back, Yvonne! It hasn't been the same without you.\"\n\n\"Good to be back! Speaking of which... I don't suppose you had anything to do with that?\"\n\n\"I have no involvement in hiring processes. Those are entirely RJ and Peter's prerogative.\" Was that a ghost of a smile? \"I do recall some sort of discussion with RJ, but it would only have been offering advice.\" And that was all she'd say on the matter. Zara, she told me, had moved to another school; she still fell into black moods from day to day, but she'd found a counsellor she liked, and overall Susan thought things were improving.\n\nIt wasn't until a few weeks later that my suspicions would be confirmed. One day while I was fixing the settings on Janelle's calendar she and I got to chatting, and she mentioned the day when Susan had come in unexpectedly \u2014 \"this was when she was still on leave\" \u2014 and marched into RJ's office. After a few minutes of raised voices Susan had come storming out again, and a couple of days later RJ had asked Janelle to call me about coming back to RJC.\n\nIn the meantime I had plenty to do. The contractors who'd been filling my shoes had kept up with the day-to-day maintenance, but they'd let the longer-term stuff slide, and the Redmond Barry website looked like something coded by a work-experience student full of Jagermeister. With Susan's permission I reverted to the last version I'd saved before they fired me, and started catching up from there.\n\nThere was an awkward moment when I bumped into Peter in the lifts at lunchtime; eventually he managed to say \"So you're back with us, then,\" and I answered \"Yes, I am.\" Then the lift arrived at our floor and we went our separate ways. I was sure I'd see him again soon enough, when next he found some new way to screw up his PC.\n\nIt was late in the afternoon before I had things under control. There was still a mountain of work waiting for me, but at least I'd made a list of what needed to be done. Only then did I feel I had enough breathing space to lock my computer and go knock on RJ's door.\n\n\"Come in.\"\n\nI pushed open the door and slipped inside, pulling it shut behind me.\n\n\"Ah, Yvonne.\" He rose and extended his hand, and I shook it.\n\n\"Mr. Churchill. Um, Phoebe asked me to give this to you.\" I reached into my pocket and held out the envelope she'd given me. He took it from me, frowning. Then his expression changed as he recognised the weight and the shape that bulged inside the envelope, the partner to the gold ring that he still wore on his own left hand, and I heard a faint sigh.\n\n\"Ah. Thank you.\" He tucked it away inside his suit jacket. \"I suppose \u2014\"\n\nMy phone buzzed, and at the very same moment his beeped. We both hesitated a moment, trapped by politeness, and then both of us checked our messages.\n\nOut of audition. Think I did OK, will find out in a few days.\n\nI looked up from mine to see RJ nodding at his own. I felt something had to be said so I cleared my throat. \"I guess that's good news.\"\n\n\"So far, so good... has she talked about what this means for her?\"\n\n\"Yes... yeah, we've discussed it a few times.\"\n\n\"I told her I'd support her, whatever she wanted to do for a living. And I'm proud that she wants to do it for herself. I was the same. But I worry about her a lot. I see how disappointed she is every time she fails an audition, it's hard on her.\"\n\n\"I know.\" I wanted to say more, but I couldn't figure out what was appropriate. I love her too. I worry about her too. She can stay at my place if she needs somewhere. I came home early so I wouldn't distract her. It all seemed too intimate; we'd reached some sort of truce, but I wasn't sure how far that extended. So I just stood there stuck for words until he cleared his throat. \"Well, I shouldn't keep you. I'm sure you have plenty to do.\"\n\n\"I do. Well, thank you.\"\n\n\"Thank you, Yvonne.\" And I slipped out again. I wanted to call Phoebe back to ask about the audition, but decided to give RJ a chance to talk to her first.\n\nIt took two more weeks, and one last round \u2014 an interview, to weed out any candidates whose musical talents couldn't make up for their personalities \u2014 and I spent a lot of nights trying to soothe Phoebe's anxieties over the phone. But on a Friday afternoon late in June I finally got the call I'd been waiting for.\n\n\"Hey sweetie!\" I had a guess what it was about, but I didn't want to ask her, in case it was bad news.\n\n\"Hey there, love. Just had a call... well, they offered me the job.\"\n\n\"Oh, yay! Oh, I'm so pleased! When do you start?\"\n\n\"I haven't accepted yet. I said I'd like to discuss it with my partner first.\"\n\n\"Ah. Hang on.\" I walked into the store-room for privacy. \"Well, this is what you want, isn't it?\"\n\n\"It is. But... I know you said you'd put up with the long-distance, but I still didn't want to give them an answer until I'd discussed it with you.\"\n\n\"Say yes. I think we can cope with the distance thing for a while... and then who knows? Maybe I can find something in Sydney. But call them back, and we'll talk later.\"\n\n\"Love you. Talk soon!\"\n\nShe called me back a few minutes later: they wanted her to start on August 13, a few days before her birthday. \"So I guess I'll have the party early... I was thinking, I can't take too long because I need to wrap up with most of my students, but I could come down on the Friday, have the party that night, then spend the weekend with you?\"\n\n\"Yes please!\"\n\nAnd so on a bleak Friday in August, I took an afternoon off work and met up with Phoebe at Southern Cross, and we talked on the way home. She had explained to her father, very tactfully, that although she intended to spend time with family she'd be staying with me while she was in Melbourne.\n\n\"So how'd he take it?\"\n\n\"Him? Not so bad. Yaya wasn't very happy though.\"\n\n\"Oh, I'm sorry. Is that about you not being there, or about you being with me?\"\n\nShe shrugged. \"A bit of both. It's complicated. She still likes you, she just doesn't think the relationship is a good idea. Keeps trying to tell me why it won't work. The main one is babies.\"\n\n\"Babies?\"\n\nShe lapsed into a good impersonation of her grandmother's voice. \"'Two girls can't get babies. You need a man for \u2014' oh, I shouldn't make fun. It's not easy for her. Dad's her only son \u2014\" I thought for a moment of his long-ago brother \"\u2014 and I'm her only granddaughter, and I think since Mum died she's been thinking about this stuff a lot more.\"\n\n\"So what did you say?\"\n\n\"I said there were options, but you and I hadn't discussed it yet, and it was still a bit early in the relationship for that.\"\n\n\"Fair enough.\" After a while I remembered something that had been niggling for a while, ever since she'd accepted the job: \"Love, if I'd said no to you taking the job...what would you have done?\"\n\n\"I think...\" She looked out the window. \"I would've said goodbye to you and taken it anyway. I'd have missed you terribly, but I would still have taken it.\"\n\n\"Uh-huh.\" It was what I'd expected.\n\nShe squeezed my hand. \"But I didn't think you were the sort who'd say no to that. So here we are.\" Then she looked at me, eyebrows arched. \"Does it bother you that you're sharing me with her?\"\n\n\"Her?\"\n\n\"My cello.\"\n\n\"Oh. Not really. Well, it did, but... I'm okay with it now. I love you, but I've seen couples who were completely wrapped up in one another, and in the end they drive one another crazy. It's good if you have your stuff and I have mine.\"\n\n\"I'm glad.\" She snuggled beside me, squeezed my hand again. \"I'm very glad you said that, because I'm thinking of bringing another cello into the relationship.\"\n\n\"Wait, you what now?\"\n\n\"You've met her. In Janos' shop.\"\n\n\"Oh, that lovely electric one \u2014 wait, I thought you were broke?\"\n\n\"I am, until I start work. And I owe back rent and bills, you don't want to know how much... but when I came down to help sort out Mum's stuff, we talked to her lawyer and he went over the will with us. Anything she didn't allocate otherwise goes to me. Which isn't much, mostly a lot of books and some old furniture. But there's her car.\"\n\n\"Oh.\" I hadn't thought of it in those terms \u2014 only as the setting of Helen's death - but of course, it hadn't been badly damaged. I supposed that with a little bit of panel-beating and new airbags, it would be quite drivable.\n\n\"I'll probably get a car for work eventually, but... not that one. It's still worth a few thousand, I'd rather sell it and not have to look at it.\"\n\n\"That makes sense. But \u2014\" I tried to recall our conversation from seven months earlier \"\u2014 I thought you wanted to earn the money for this one yourself?\"\n\n\"I did. But it all went on plane tickets and bills and stuff. I thought about waiting until I'm earning and I've paid off what I owe, but... by then, I'll have a lot more money than I'm used to, it won't mean as much. So I thought, this is Mum's money. I'll let her buy me something special for my birthday, something to remember her by. Maybe I'm just rationalising it.\"\n\n\"I think it's a good idea.\" I clasped her hand between both of mine, because she looked as if she was on the verge of crying. \"Just as long as I get to hear you play her.\"\n\n\"Deal.\"\n\nBack at my place we snuggled for a while, freshened up, and then dressed for the party. RJ had insisted on holding it at his place, and Phoebe had deemed it tactful to accept. Speaking of tact...\n\n\"You're wearing that?\" Phoebe asked. I was holding the candy-striped dress Yaya had given me.\n\n\"Considering it, if you'll help me get it on.\"\n\n\"I thought you never wore dresses.\"\n\n\"I don't. But I want to show her I appreciate the gesture. And besides, you said you'd do me in this. That's a pretty compelling argument.\"\n\n\"I did? Well, then.\" And in the process of helping me into the dress, Phoebe somehow managed to get me on my back, lips at my throat, hands all over...\n\n\"Oh dear, look at the time.\" She sat back and started straightening my outfit.\n\n\"Wait, you can't stop now!\"\n\n\"You'll get yours.\" She kissed me. \"Afterwards. Oh, don't pout like that, it's undignified.\"\n\nIt was only the second time I'd been to RJ's, and I felt as nervous and out-of-place as I had been at the Christmas party. There were about thirty people there, and I knew only a handful of them. I remembered Maria, Jill, and Ellen from our movie outing, and I recognised Phoebe's aunts from their photos. The rest were strangers to me, except sometimes by reputation: her other friends from school and elsewhere, music buddies, distant cousins, and some older folk who were mostly neighbours or friends of RJ's.\n\nShe introduced me simply as \"this is Yvonne\", leaving me to fend off the inevitable \"so how do you know Phoebe?\" with evasions and half-answers. I had to fight the urge to cling too close to her, lest I give us away; I hovered nearby as she began chatting with a couple of fellows who'd been to the Conservatorium with her, but soon realised I didn't know nearly enough about music to get involved.\n\nSo I drifted away, and to avoid orbiting the room all on my own I started up a conversation with Jill and Ellen: work, Jill's kids, the weather, all the safe topics.\n\n\"I'm sorry I walked out on that movie,\" Jill said. \"Just too much for me. Did you enjoy it?\"\n\n\"I don't know if 'enjoy' is the word, but... yeah, it was worth seeing. Not easy watching, though. It got rougher after you left.\" Alongside me, Ellen nodded.\n\n\"Ugh. What I saw \u2014 enough to give me nightmares,\" Jill replied.\n\n\"Me too,\" said Ellen. \"I heard Phoebe had a lot of trouble getting to sleep after, too.\" I started, and looked at her closely \u2014 was that an innuendo, had she heard something? Was I looking guilty, would she suspect something now? But I couldn't see anything in her expression.\n\n\"Yeah, um, I heard that too.\"\n\nSoon after Ellen and Jill got talking about Deb (absent, travelling overseas), and I drifted out of the conversation. I wandered out to the back yard; it was unpleasantly chilly, but I wanted the fresh air. I stood there, looking out into the blackness of the winter night, until I was surprised by a dry voice behind me.\n\n\"It suits you. I told you it would.\"\n\nThump-thump, the old familiar spike of adrenaline. I turned; Yaya had been there the whole time in her wheelchair, almost covered with in blankets, so still that I'd missed her. Only her eyes gleamed like black marbles.\n\n\"Uh, yes. It's a good fit.\"\n\n\"But you don't like to wear a dress. You're always in pants.\"\n\n\"Yeah. Um, I like clothes with pockets.\" There was a lot more to my clothing choices than that, but I wasn't equipped to discuss the complexities of identity with Yaya. \"I always have stuff I need to carry around, and I don't want to haul a bag everywhere.\"\n\n\"Come here. I show you something.\"\n\nI approached. The blankets shifted as she got her arm out from underneath. She wasn't wearing the brace any more, but her movements were slow and stiff as she clawed at my side.\n\n\"Here.\" She poked at a spot near my hip, in between the pleats of the fabric. I touched it, and my fingers slipped into a space I hadn't noticed: a pocket, concealed between the folds, large enough for a wallet or a phone. When I checked, there was another just like it on the other side.\n\n\"I put them in. Opened up the seam and sewed them in.\"\n\n\"Hey, that's really nifty.\" Still not my thing, but nifty.\n\nShe gave me a weary smile, wrinkles shifting on her face. \" I don't like bags either. Too many people stealing them... be a good girl and push me inside, it's too cold here.\"\n\nBy the time I got her inside and comfortable next to RJ, most of the other guests had already taken their seats for dinner \u2014 catered, of course \u2014 and I was left down at the end away from Phoebe, next to her aunt Gia. She seemed a nice lady but was a little hard of hearing, and I found it difficult to talk with her over the background noise. I looked at Phoebe as often as I could without being too obvious; occasionally she'd look back and smile at me, and once she pursed her lips into a brief hint of a kiss. But mostly she had her head down, looking quiet.\n\nA waiter did the rounds, filling up our glasses with wine and champagne; I substituted fizzy mineral water in mine. When everybody had a drink, RJ rose to his feet, tapping his glass with a spoon: ching-ching-ching. Across from us, Chloe had her camera out and was snapping photos of the party.\n\n\"Hello everybody, and thank you for coming. I'd just like to say a few words about how proud I am of my daughter. Today we're celebrating two milestones, her birthday and also her new job. I sat down this morning and I worked out that by the time she turned eighteen, Phoebe had done over five thousand hours of practice and a thousand hours of lessons, and now at last her hard work is paying off.\" He brandished a sheet of paper from his pocket. \"And now that she has this job, she can start paying me back for what we spent on lessons. Here's the bill, Bee-Bee!\"\n\nThere was a ripple of laughter, and she stuck out her tongue, and Chloe's camera flashed. Around us, waiters were bringing out the food.\n\n\"But seriously, I'm as proud as a dad could be. I know Helen would've been proud too. And I don't want to talk too long, so I'm just gonna ask you all to stand and raise your glasses. To Phoebe!\"\n\n\"To Phoebe!\" I kept my eyes fixed on her as I took a mouthful of bitter-tasting mineral water. She was smiling, but she looked pale in the camera-flash. And she was licking her lips, looking at her glass. As the rest of us sat back down, she stood.\n\n\"Thank you everybody. It's been... a bit of a rough year, hasn't it? But, touch wood, I think it'll get better from here. I'd like to thank Dad for getting up early to drive me to all those cello lessons. And all the other stuff.\" She pointed at the 'bill'. \"And my Yaya for nagging me when I got bored with scales and tried to cut corners. Don't try that with Yaya!\" Another ripple of laughter. \"And Mum. I wish she was here to see this.\" She sipped from her glass; I thought she looked nervous.\n\n\"And, uh, I'd also like to thank my partner Yvonne. For being there for me, and putting up with me. I love you, Yvonne. And to everybody else who's here. You might not know it, but all of you helped me get here. You're all my family. To family!\" And we followed suit as she toasted.\n\nI don't remember much of the meal; without any assistance from alcohol, the surprise and the unexpected attention had turned me into a blushing pile of incoherent mush. But a happy, bubbly sort of mush. It wasn't until after the mains that I ended up standing near Phoebe, and she took my hand and drew me aside.\n\n\"Hey there, sweetie.\"\n\n\"Um. I wasn't expecting that.\"\n\n\"I wasn't sure whether I was going to do it. Well, not tonight.\"\n\n\"I'm not complaining.\" I placed my other hand over hers. \"Well, what brought that on?\"\n\nShe glanced to either side, dropped her voice a little. \"I was thinking about Mum. About how I was going to sort that stuff out once the rest of my life was tidy and under control. And wondering whether it ever will be tidy and under control. There's always something. And thinking... if something happens. God forbid. But it can. If you or I died, love... what happened with Mum's funeral, I don't want it to be like that.\n\n\"And then... when I was talking to Yaya the other day, I talked about coming out. She said, what if you do this, and tell everybody, and then it doesn't last, and you've stuck your neck out for nothing. Because I'd already told her, I didn't go looking for a relationship with a woman, if I wasn't with you it'd probably be a guy.\"\n\n\"And?\"\n\n\"I thought, even if it happens like that... it's not for nothing. This is important to me. When I become the greatest cellist in history and everybody's writing books about me... you ought to be in those books. And Mum too. Both of you should be there. Even if you're the only woman in my life, that doesn't make you an experiment, it makes you unique.\"\n\nStuck for words, I drew her closer to me. I saw her eyes flicker as she looked around at the people nearby, some watching us, some oblivious... and then we kissed.\n\nFlash-flash.\n\nAnd now she's back in Sydney rehearsing for her first concert, and I'm here in Melbourne fixing printers and wrangling webpages, and each of us yearns after the other and counts the days until we're next together. But meanwhile, in a silver frame, there it stands on my desk at RJ Churchill: a photo of me and my partner.\n\n<ul> <li> * * * *\n\n</li> </ul>\n\nI wrote the first chapter of this story as a gift to my lover A, who was good enough to say 'yes' when I asked her approval to post it here. It was meant to be a one-shot, but I started wondering: what happens to these people the next day? It ended up a lot longer than I'd expected, but here we are at last.\n\nThanks to everybody who took the time to offer encouragement and feedback along the way, and in particular NJLauren who gave a lot of behind-the-scenes help with the musical details.\n\nExtra thanks to A, for inspiration and encouragement; and especially to R, my editor and partner in life, who's never afraid to tell me what works and what doesn't."
    ],
    "authorname": "Bramblethorn",
    "tags": [
        "lesbian romance",
        "lesbian novella",
        "coming out"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-stringed-instrument-ch-14"
}