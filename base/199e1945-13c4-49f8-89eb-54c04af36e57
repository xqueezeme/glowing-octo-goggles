{
    "title": "Apprehended Ch. 11",
    "pages": [
        "Things weren't looking too good for Rodina. Ethan had sequestered her to her cabin just off the main lake in Ethan's, \"woods,\" as he so eloquently labeled it. She was guarded all hours of the day in shifts. Males of the clan were the only ones allowed to be near her, as she was so fierce, no other female was willing to guard her. \n\nI was healing slowly. It was a painful process. One that I was accepting because I had no choice. Ethan carried me around like a broken piece of China and I had had about enough of not only his overwhelming scent, but his close proximity. He was fawning over me. I was getting annoyed. \n\nWell, not too annoyed. He smelled and felt amazing. Like a magnet, I couldn't help but be drawn to him. He didn't need to know that either. It seemed that he didn't need to know a lot of things. Including the fact that I had been eavesdropping whenever the opportunity presented itself. So far, I learned that Richen and several other males of the clan were in desperate need of their own mates, which were difficult to come by. It was purely instinctual. They couldn't choose. Their wolf did. \n\nIt didn't make understanding Ethan's life any easier. He offered-on numerous occasions- to shift for me. To be the beast of the night. The stalker and the protector. \n\nI declined each time. \n\nFor some reason, I was having difficulty seeing the man turn into the monster. I was not ready for that. I was just starting to come into terms with my being here. I had nowhere else to go. My room at the inn was no longer mine. I had assumed that because I never came back, I lost the fee I paid for the month and it was most likely rented out to someone else. \n\nWhich meant that I either stay here or stay in the street. This was better than living in the streets. But if it got bad here, I'd have no other options. Unless... \n\nI thought of Roy. He was a good buddy. Though, no one could really be trusted, could they? I didn't know him long enough or well enough. \n\n\"What are you thinking about, Luna?\" \n\nI blinked rapidly, focusing my attention on Jared, who sat beside me on a log. The night was bitter and brisk. The air was sharp, and the animals were quiet. I watched the fire cackle and spit in the pit as clan members arrived slowly but surely.  \n\nThis was a thing for them. Almost like a ritual. They would meet on what they called, the \"fairgrounds.\" It was the center of the clan. The center of their forest, homes and being. According to wolf lore, this specific forest aligned with the north star. Astronomy was sacred here. The night was revered, and the moon was a symbol of rebirth. Where the man and the wolf were separate but joined. Both sides of the moon. A rebirth of man to wolf and wolf to man. \n\nEvery Saturday-if the weather and circumstances permitted-the clan would meet here. They congregated to tell the stories of their ancestors. So far, I learned the origin of the wolves. And what a tale it was. Ethan retold it, just so I could hear it. The others-despite knowing the story of their derivation-listened on in intense silence, their eyes focused on their Alpha as he spoke the Tale of the Blutbaden: \n\nThere were once three brothers. Males of great worth and revere. They were born in the time of kings and queens, princes of the fair lands. They were known for their etiquette, charm, good looks, personalities and of course, connections to other seven lands. However, what most didn't know of their venerate princes, was their ability to lure females into bed with them. They wooed and charmed. They whispered promises of marriage and love. As bachelors, they were seeking. And what a seeking it was. In the dead of night, when the castle was filled with silence and cast in shadows, the princes would sneak off into the night in search of fair maidens to bed. \n\nEvery night, they took a different lass, seducing her with riches, empty promises of commitment and a life of blazoned passion. In the morning, when the golden rays of the sun rose above the peak of the snow-capped mountains, they would banish said maidens and discard them. Like rubbish, they would devoid their person of such affiliations and send them away. The town viewed these women as unclean, no longer the fair lasses of chastity. \n\nAngered by the lies of the princes, the maidens met by the famous waterfall of lore. There, their anger flourished, a palpable presence born from sadness, grief and hate. It shadowed and blanketed the lost damsels, shrouding them in the darkness of the shade. It fueled and fired, allowing the maidens to transform into the witches of the woodlands. \n\nRevenge coursed through their veins. Under the cover of nightfall, the witches snuck into the castle in search of the fair princes. When they were found, a curse was cast upon each one, to bear the physical representation of the monster within. They howled in pain and agony, their bones breaking and reforming. Hair grew and fair skin was no more. Gone were the princes of reverie, and in there place stood the beasts of the night-the Blutbaden. They went on a rampage, destroying the castle within and the town. Blood flowed and rivers ran red, covering the land in death and decay. \n\nWhen the sun rose again, the princes transformed into what they once were, a shell of their former life. They cried in woe. For everything they loved was gone. With nothing left but sorrow, the princes lived the remainder of their days as creatures of the darkness. As for the witches, they moved into the woodlands. Never to be seen or heard from again. \n\nI had listened intently, hanging on every word. Was any of this true? Was this clan the descendants of the cursed princes? Did that mean they were cursed? Was there a possibility that their offspring could be cursed as well? \n\nBy the time another tale was told, I was more confused than ever. This night was no different. Ethan came in later than the rest. Edwin had carried me here while Ethan, \"tended to some matters.\" What those matters consisted of was beyond me. \n\n\"That whole curse,\" I replied to Jared. \"Is it really true?\" \n\nHis eyes glowed blood red, the gleam igniting in the light of the fire. \"Every word, Luna.\" \n\nI huddled into Ethan's coat, my teeth chattering from the cold. \"How did you come about it?\" \n\nHe shrugged like none of this phased him. \"We're descendants. Though I'm pretty sure you've already gathered that.\" \n\nI looked him over with his tee shirt and ripped jeans. He wasn't even shivering. He looked warm; his skin aglow in the firelight. \"I know this sounds stupid,\" I muttered, \"but your skin isn't fair. If you're all descendants of the princes, why do you look different?\" \n\nHe chuckled lowly and grabbed a branch from the ground. He drew lines in the snow. \"This line here represents the pure lineage of the fair princes.\" He drew another, branching outward. \"This one here represents our ancestors straying from pure lineage and bonding with another. In our case,\" he said, gesturing to the entirety of the clan, \"with a Native American tribe.\" \n\nI nodded my head. Interesting. \"What tribe?\" I asked, curiously. \n\n\"The Apache's,\" said Ethan, joining the conversation. \n\nI stared. He showered, his hair wet and knotted on the top of his head. I got his scent from here; soap and forest. He was wearing a black tee with jeans. He chuckled lowly when he saw me staring. \n\n\"Oh,\" I said, looking away abruptly. I tried to make it look like I wasn't nearly drooling. \"I've heard of them.\" \n\n\"Beat it,\" Ethan said to Jared. Jared scoffed, flipped him the bird and punched him on the shoulder with a sharp smile. Ethan took his spot beside me. \"Have you?\" he asked. This time, he stared and made no move to hide it. \"What do you know about them?\" \n\nI thought about that. \"Not much.\" \n\nEthan smiled, the light from the fire casting shadows across his face. He hunched forward a little, twining his fingers together and leaning into his knees. \"Did you know that the Navajos are the Apache's distant cousin?\" \n\nI shook my head. \"No. I didn't know that.\" \n\n\"They are. The Apache's also migrated to various parts of the Americas, including this very spot. My people favored sheltered valleys, mountains, canyons and deserts. But here,\" he said, pointing to the snow-covered ground, \"they made their homeland in these very mountains. Amongst these very trees. These various migrations caused an integration of peoples. Inclusive of the cursed ones.\" He lifted a thick arm and ran a hand over his forearm. \"Apache blood with the blood of the ancestral princes.\" \n\n\"Why is it considered a curse?\" I asked. \"This clan doesn't look miserable to me.\" \n\nEthan barked out a laugh, his golden gaze sparkling as he focused on me. \"It's a painful process,\" he admitted. \"Shifting from man to beast and back again.\" \n\nI must have made a face because he lifted a hand. \n\n\"Don't get me wrong, love, I embrace the beast within. I was born with it, however. I didn't choose it.\" \n\nMy brows furrowed. \"Would you choose it if you had the chance?\" \n\nHe didn't answer that. \n\nI wanted to press. I wanted to know more about the animal and the man. Were the two one and the same? Did he feel like he was cursed? Just because the tale of the princes labeled it a curse didn't mean it was one. Right? Was any of this shit even- \n\n\"I can see the wheels in your head turning, my Luna.\" \n\nI gaped. \"What?\" \n\nHe chuckled and leaned over to tuck some hair behind my ear. The contact made me shiver. \n\n\"Cold?\" he asked. He opened an arm. \"Come and get warm.\" \n\nI stared at the empty space between our bodies. Ever since the oral sex we shared, no other form of sexual interaction occurred. I mean sure, Ethan kissed me a few times in between. Did I want that? I still wasn't sure. Did I make a vow? I did. \n\nI was just trying to figure out whether or not I should break it. I thought about how quickly he found me in Dr. Martin's clinic. Surely he could do it again. I realized that no matter where I went, he would find me. And just because this entire situation was difficult to process didn't stop everything from adding up. \n\nEthan would do things that were inhuman. Things like traveling long distances with a mere tee shirt, jeans and no shoes. He was never cold and always warm. At night, his vision was damn near perfect. His eyes glowed in ways that made the northern lights look like a cheap light show. His sense of smell was acute, and he would move around quickly. Too quickly. \n\nI recalled one particular evening, Richen had paid Ethan a visit. I was in the living room eating a bowl of chips and overheard the conversation. There was an injured owl perched on an elder tree. I asked to join when Ethan said that he'd bring it down and nurse it back to health. He was reluctant at first, but my constant nagging eventually made him cave. I got dressed and he carried me to the area, settling me on a blanket while he retrieved the animal. \n\nI watched in wonder as he scaled up a thick bark from a very long and old looking tree. He jumped nearly five feet above to the branch it was perched on. I still couldn't figure out how he was able to perform a move of that height and distance, but it confounded me even more when he threw himself off, the owl tucked into his arm safely. I screamed in horror, expecting him to die. The height was too great for anyone to survive a fall like that. \n\nBut Ethan landed softly, barely making an ident in the snow. When he saw my face and heard my scream, he came to me and tried to calm me down; showing me that he was more than okay. \n\nSeeing that changed things. It also made me afraid. I wasn't sure of what. Was I afraid to admit that this was not all a ruse? Clearly, I witnessed the unimaginable first-hand. Would seeing Ethan shift somehow validate the unknown and I was nowhere near ready to accept such a reality? \n\nI didn't know. \n\n\"Your teeth are chattering, mea vita,\" said Ethan, interrupting my thoughts. \"You either come to me or I'll go to you. Either way, you need to keep warm.\" He smiled softly; his sharp teeth exposed. \n\nI ignored the fangs and moved in a little. I didn't want to get that close. He was potent enough as it was. \n\nEthan grumbled under his breath and wrapped an arm around my lower back and waist, where he tucked me into his side fully. I squealed and looked up at him. \n\n\"Better,\" he said, rubbing my upper arm so I could get warmer. \n\nI had to admit. He felt like my own personal heater. I wasn't going to complain. I needed it. \n\nJust like I needed him. \n\nI scolded myself, telling myself that it was a lie, that needing him was a lie. Only...was it a lie? \n\n\"What are you thinking about?\" he asked, jarring me from my thoughts. \n\nI did not want to answer that so I changed the subject. \"How is Dina?\" \n\nHe gave me a look, one that clearly showed he knew I was avoiding something. \"The same. She's pissed.\" \n\n\"Shouldn't she be?\" I asked. \"She's been locked up in that cabin.\" \n\n\"For good reason,\" Ethan added. \"Do you think me harsh for doing it?\" \n\nI didn't answer that. I was not going to get into that. This was his business. This was his clan. Not mine. Although Dina did wrong me, it was not my place to judge. I had no idea what took place in the past. I couldn't even fathom the present. The future was something else entirely. \n\nI didn't fully know the relationship shared between her and Ethan. When she mentioned it, it didn't bother me then. I was trying to get away from Ethan. I didn't have time for jealousy. But now? Now that things were different and I had no other options for the moment, time was something that gave me moments to think. It also made me see Ethan in a few different elements; the way he treated others when he was around his brother or clan members. The way he moved. The way he grew quiet, lost in his own head when there was a lull in conversation. Or the way his dimple would emerge when he laughed during video game time with Richen or Jared. \n\n\"Annie?\" \n\nI looked at him, his face ignited by dancing firelight. He was astonishgly beautiful, with skin that was kissed by the sun yet deep for the silver of the moon. It was difficult not to stare at him. Even without knowing that he was inhuman, it was easy to be captivated by his otherness. No matter how normal he acted or how seemingly human, there was something different about his presence. \n\n\"How long were you guys together?\" I blurted. \n\nI'm not sure where that came from. I had no intention of saying it. But deep down, something in me yearned to know the extent of their relationship. Was it strictly sexual? Was it more? \n\nEthan stared at me with wide eyes. They gleamed dangerously. \"What?\" was all he said. \n\nI cleared my throat. Did he really want me to repeat it? I didn't want to. I decided to stick with, \"she seems jealous...lost...in a way.\" \n\nHis eyes never faltered. \"My past with her is strictly that-my past. There is no room for it here. Nor is there room for it in the future.\" \n\nThat didn't really answer my question. I sighed heavily. Ethan was a conundrum; a vexing confusion that never ceased to puzzle and bewilder. He was vague, never fully answered a question and was stringent in his views. Simply, what he said was all I was going to get. There was no wiggle room. There was no prodding. \n\n\"It's obviously affecting your present,\" I pointed out. It was like my mouth had word diarrhea and I couldn't stop. \n\n\"Yeah, well, that is why she is in the predicament she is in.\" \n\nTrue. But that still didn't change the fact that she couldn't seem to let whatever it was go. \"What do you guys usually do when it concerns crimes around here?\" \n\nEthan got up abruptly, the warmth he provided leaving and sending shivers down the length of my spine. I would be lying if I said that I didn't feel alone when he wasn't close. It was like losing a piece of myself. \n\nHe looked around. I followed his gaze, noticing that everyone had gone eerily quiet. \n\n\"To the left,\" Richen whispered. \n\nAll eyes-including mine-went to the left. I neither heard nor saw anything that indicated we weren't alone. I refocused on Ethan and tugged at his jeans. \"What's going on?\" I whispered. \n\nHe put a firm finger to his lips. \"Shh.\" \n\nA heartbeat passed. Then another. Then one more before all hell broke loose. \n\n\"Take her!\" Ethan shouted to Richen. \"Get her out of here!\" \n\nI nearly screamed at the sight. Large, hairy wolves the size of pick-up trucks exploded from the surrounding forest. Eight or more tore through the thickets, with snow plowing around in a frenzy as their paws dug into the earth. Feral, they growled and attacked. Spit and blood flew about, coating the snow as fur got torn off and people screamed. I noticed the clan members shift, their clothes ripping to pieces as a beast took its place. \n\nThe maw of the wolf was large enough to snap a man in half with ease. Thick hair emerged and nails the size of a man's hand clawed at the offending wolves. Each wolf had features identical to their human form, so it was easy to find Jared and Edwin amongst the mass. \n\nHowever, I wasn't looking at Edwin or Jared. I was focused on Ethan. He ran forward, charging into the fighting with a fierceness that bordered on the insane. As he ran, he shifted, his clothes exploding forth like a bomb. His skin rippled in the firelight before it ripped apart. He screamed in what sounded like a brief moment of agony before Ethan no longer existed...and a monster ten times the size of the surrounding beasts took his place. \n\nHis fur was sparkling; a gold unlike anything known to man covering the wolf's entire body. His teeth bared like knives in the dark. He snarled and attacked, his muscles rippling with aggression and untamed power. Never had I seen an animal so magnificent and strong. His size alone was terrifying, making the other wolves pale in comparison. \n\nI was so captivated by the majestic sight of him that I screamed in terror when I realized what Richen had done. He shifted, his coarse fur tickling my hands and body as he somehow managed to maneuver my body to ride atop him. I held on tight and tried to focus as chaos ensued all around me. \n\nSeveral wolves surrounded us as Richen began to run. In an instant, we went from unmoving to zooming by thick branches; some so close that I was afraid we were going to plow into them, dying before we even realized what hit us. \n\nBut Richen knew what he was doing. \n\nI felt the wind hit my face, making the small ice particles kick up as his large paws penetrated the snow and dirt. Wolves of various sizes and colors ran beside us, some attempting to snap their jaws at us. Richen swerved in and out of the dense trees, narrowly missing a bite or a trunk. \n\nI bounced along, gripping his fur so tightly that my hands ached with the severity of it. Richen was large. So large that my feet were nearly five feet away from the ground. His eyes glowed menacingly and he snapped at several wolves who were far too close. Puffs of smoke rose into the night air. Even though I was at the mercy of Richen and the wolves, I was panting as if I was exerting my own energy in defense. \n\nRichen continued, his pace fast and sure. \n\nBut there were too many wolves on us. Richen couldn't defend us and gain distance at the same time, so he did the only thing Ethan trusted him with-getting me to safety. \n\nIt seemed to go on forever, but Richen didn't stop. He ran and ran, his legs powerful and built for speed. I ducked several times, nearly losing my head over low branches. A few times, I not only nearly fell off as Richen jumped over fallen logs, but felt the heat of a wolf's breath as it nearly bit into my face. \n\nAhead, I spotted another wolf. It wasn't as large as Richen, but judging by the look on the wolf's face, I could tell he was not friendly. I pointed ahead and lost my grip on Richen's fur. \"Look out!\" I yelled. I lurched to the side just as Richen grounded to a halt, kicking up more snow. I screamed and flew off of Richen. The air was cold and the night was ice as my body careened out of control towards a thick tree trunk. ",
        "Bracing for an impact I could not avoid, I shot out an arm in order to protect myself and closed my eyes, knowing that this was it. This was the point in my life where I? was going to die. \n\nAnd what did I have to show for it? What accomplishments did I achieve? What lessons did I learn? How had I found myself...as a person...as a woman of independence? \n\nI couldn't answer that. \n\nAll I could do was accept my fate. \n\nI thought of Ethan; of his golden eyes and hard stare. I thought of the wolf. The same wolf that both frightened and enamored me. The wolf that I just saw for the first time, but knew that it lingered in the background. The wolf that made the man. The man that made the wolf. \n\nI expected an onslaught of pain; a taking of my face in a brutal clash of tree bark and flesh. \n\nOnly...it never came. \n\nInstead, I collided into something soft yet hard. It enveloped me in a warm embrace, taking the brunt force of the fall and shielding me from certain death. \n\nThen...silence. \n\nI shifted, suddenly feeling hot and covered in thistling fur. It tickled my nose and face. Warm, hot breath ran down the length of my entire spine and the animal that saved my life moved. I pulled back to gain my bearings and my distance. \n\nIt was dark and difficult to discern my surroundings. I blinked a few times, ridding my eyes of snow and ice. I managed to maneuver myself a little, shuffling back to gain some perspective on where we were and how Richen was. \n\nOnly...as I stabilized, stood up and found my balance, I realized four things. One: Richen was currently fending off four wolves at the same time-clearly losing the battle against the horde that attacked him simultaneously. Two: He was not the one who saved me even though he was currently keeping the wolves away. Three: Ethan got up from the ground and shook of his golden fur, chuffing and letting out a loud sneeze that made the ground tremble. \n\nFour: Ethan saved me. He somehow managed to break free from the fighting by the firepit and save me from what was going to be a painful death. \n\nWithout thinking and full of pure adrenaline and fear, I ran to him, wrapping my arms around his thick, wolf neck. It was impossible to fully envelope him in an embrace, but I did what I could in spite of his size. I felt my tears of gratitude fall and get absorbed in his hair. \n\nBreathing hard, he took a single step toward me and lowered his head to accept my affections. He was so warm, soft yet hard, and firm in all the places that mattered in an animal that was meant for destruction. \n\nI had never been so appreciative in a time when I should have been consumed with fear. I realized then, that this was it for me. That Ethan now represented the safety I had longed for. The safety I prayed for when Jerry did his damage. \n\nEthan was my safety blanket. The calm after the storm. Even now, when shit reigned all around us and I had no idea WTF was happening, none if it really mattered as long as he was there with me. \n\nBeside me. \n\nBut this moment was short-lived. \n\nEthan moved abruptly and nuzzled me behind him with a strong thrust of his head on my arm and back. I hid behind him, knowing that I was out of my element. There was nothing I could do to defend Richen, Ethan or myself. \n\nI could only watch. \n\nEthan forced me in between two large trunks that had somehow merged together to form a hidden cocoon of safety. He made a sound in the back of his throat, his golden eyes looking between me and the dark space. I knew what he wanted. He wanted me to go in there and hide. \n\nI didn't waste any time. \n\nEven though it was cold, dark and unfamiliar, I shoved my thick body inside and managed to wiggle into its depths. I had a perfect view of what was taking place before me. And what a sight it was. \n\nEthan stole one more glance to make sure I was well hidden before he took off to help Richen. He was beautiful. A golden god of wolves that represented sheer power. Once he arrived beside Richen, two wolves took one look at him and whined, cowering away with a yelp and a run in the opposite direction. \n\nThe other remaining wolves seemed intimidated, but whatever drove them to the attack was what kept them in place. They snapped at Richen a few times before putting some distance between Ethan and themselves. They huddled closer together and it was easy to see what they were communicating as they growled at each other. \n\nRichen shook himself off and stumbled a bit towards Ethan. Blood trickled from his fur and landed in the white snow, staining it a vivid red that nearly made me vomit. He was limping. It was obvious that he was injured, yet he was still willing to fight alongside Ethan. \n\nThey growled and spat, a feral sound that made my blood run cold. I waited in sheer terror and anticipation as the wolves danced, gliding back and forth, their eyes on each other. They waited what seemed like forever, but was in actuality a few tense minutes. \n\nThen all hell broke loose once more. \n\nThe other wolves struck first, going for Ethan. I bit back a scream as they bit and used their claws, fur coming out in tufts; along with skin and blood. It was difficult to keep track of. Their bodies were so close together and moving so quickly and maliciously that I didn't know where Ethan and Richen were in the fray. \n\nSeveral trees were knocked down, making the ground shake with the severity of it. Along with the wolves snarls and howls, the forest seemed to moan its indifference; suffering from the war it wanted no part of. \n\nAt one point, I lost track of the battle. I heard it some distance away, but the night had taken over. I heard the rapid, frantic beating of my own heart. I heard the owls hooting above. I heard the blood rushing to my head and ears, making me feel dizzy. I heard my short pants as panic consumed me. \n\nI felt trapped and helpless. \n\nIf Ethan and Richen didn't survive, I'd have no choice but to hide here until the coast was clear. The problem? I didn't know if the coast would ever be clear. What if the wolves lingered and I left the safety of tree cocoon? What if they found me wandering the forest alone? What would they do to me? Would they kill me? Take me? Would they know that Ethan already considered me his? Would they use me as collateral if he managed to survive? \n\nEverything began to spin. The dark was constricting. The cold stabbed my body like knives. The trees seemed to close in on me, squeezing the air out of the cocoon...out of me. \n\nAnd just like that. \n\nI blacked out."
    ],
    "authorname": "AnnieBaebee",
    "tags": [
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/apprehended-ch-11"
}