{
    "title": "Love Knows No Color Pt. 14",
    "pages": [
        "The day after Thanksgiving, I was awakened by Miracle crying. Shavonda was asleep, having been up earlier with the baby. I checked Miracle's diaper. She needed to be changed, which I did. But she still was fussy. I held her in my arms and rocked her, hoping she'd go back to sleep. She quieted down a bit but was still restless. Shavonda rolled over and sleepily murmured, \"Daddy, look in the fridge. I have some bottles made up already.\" Bottles? I thought we were breastfeeding.\n\nI carried Miracle to the living room and set her down in the baby carrier for a minute, and carried it to the kitchen. Opening the refrigerator, I saw 3 bottles of milk in the door shelf. Each had a little tab of masking tape with a date and time on it. Suddenly it dawned on me what had happened. My queen, organized as she was in her business life, had applied the same principles to childcare. I knew we didn't have baby formula around, so the bottles must be her own milk she'd pumped. The dates were so we could keep track of how long the milk had been there. I chose the oldest bottle and, removing the nipple, I heated it in a pot of hot water until it was warm. \n\nI picked up Miracle again, and fed her the bottle. She took to it like she'd done it before. Evidently, Shavonda had been busy while I was at work earlier in the week. I gained another level of respect for her. She'd set the bottles up so that either of us could feed the baby while the other slept. Miracle took about half the bottle and was soon asleep in my arms. I sat on the couch with her, gently rocking the sleeping baby as daylight slowly crept into the house. My parents and Grandma were still asleep, and soon I was drifting off myself. I walked back to the bedroom and put Miracle in her crib, before climbing back into bed and curling up to my sleeping wife.\n\nThis holiday weekend was going to be my time to truly bond with my little princess. I didn't have to be back on the job until Monday morning, so I had 3 whole days for us to get used to each other. Plus, Barbara hadn't taken the kids for the weekend, so we'd be a whole family this weekend. Mom, Dad and Grandma weren't going home until Sunday, so they'd be around as well.\n\nShavonda had taken to sleeping in her nursing bra, but other than that, she still preferred to be naked. The past few days, we'd fallen into a routine. We did a lot of kissing and rubbed each other's backs and sore spots, but tried as best we could to keep our touching above the waistline. Shavonda, even though she told me she still got urges, had to let her body heal. And for me, celibacy for the six weeks or so until she healed was a small price to pay for everything she'd brought to my life. Especially our little Miracle baby.\n\nOne thing we could do now, was indulge in the rum we'd stopped drinking because of her pregnancy. She'd had a few during Thanksgiving. It was a sort of family tradition, that while the men would watch the games and drink beer, the women would gather in the kitchen with their bottles of wine or E&J, or in Shavonda's case, Calico Jack, and cut up. Honestly, while I'd sat with the men for a while, I had zero interest in football, and wound up with the ladies, rubbing my beautiful wife's back while they all cut up.\n\nI figured, I'd let my queen sleep in, but I'd no sooner drifted off to sleep with her than I heard rustling in the kitchen. Mom, as usual, had gotten up at the crack of dawn to make breakfast. Soon I could smell eggs and pancakes cooking. Ethan and Brittany were now up. They loved Mom's pancakes. I wandered out to the kitchen and sat down, helping myself to the food piled on the kitchen table.\n\n\"Von's still sleeping,\" I told Mom. \"So's Miracle. I'm going to let them sleep.\"\n\n\"Was that you I heard up a little while ago with the baby?\" she asked. \"If it was, that was sweet.\"\n\n\"That was me. Von was tired, and she had bottles made, so I fed Miracle.\"\n\n\"Well, I'm glad you're still helping her out like that. And the baby is a cutie pie. She has your eyes. We're so glad to finally meet her. I can't wait until she gets a little older and we can spoil her,\" Mom was obviously thrilled.\n\nJust then, Shavonda walked in, sleepy eyed, dressed in one of the maternity dresses that now hung loosely on her body. She cradled a still sleeping Miracle in her arms. \"I smelled the food,\" she yawned. \"Sorry I wasn't awake or I'd have made you breakfast.\"\n\n\"Be quiet. You need to rest and heal,\" Mom said. \"I don't mind doing this while we're here.\"\n\nShavonda placed the baby in the carrier in the living room, then carrier her back into the kitchen. She sat down and helped herself to several pancakes, dousing them with syrup. \"It's nice not to have to watch what I eat anymore. Though I did like the bananas and the kids did too. But now I can eat whatever I want it's great.\" Turning to me she said. \"161.\" I knew what she meant. The baby had added 32 pounds to her weight, topping her out at 173. She'd lost 12 pounds of that since then. We intended to work on getting her back down to the 141 she weighed before the baby. \n\nNot that her weight was an issue for me. At 164 she was still an ebony goddess in my eyes. But I didn't want her beating herself up over something as insignificant as a few pounds. So, when we had warm days, I wanted to take her on the hikes we'd gone on the summer before. Or better yet, when I'd moved in, we found her old bike when we were clearing out the basement. It now resided in the tool shed in the backyard, along with mine and the kids' bikes as well. We could make it a family day on the trails along the riverfronts around town. \n\nShavonda continued, \"I can finally straighten my hair. Shaunice has offered to pay to get my hair done. I am looking forward to all the things I can do again.\"\n\nMom looked at me, \"Why couldn't she get her hair done?\"\n\n\"The chemicals used might have harmed the baby,\" I said. \"This may be our only chance to have one. So, she gave up anything that might harm the baby while she was carrying. Alcohol, getting hair done, certain foods, doing certain work on her jewelry, and pumping gas. Those are all things she couldn't do.\"\n\n\"Speaking of your jewelry,\" Mom changed the subject, \"Von, while we're here we'd love to see your business.\"\n\n\"I'll have to ask Mama if she'll sit the kids. We don't have room for everybody in the car,\" Shavonda grinned. She was very proud of the business she'd built from nothing. \"My jewelry and art started while I was back in high school, as a hobby. When I started wearing it to class, other people wanted some too. That's when I found out I could make money doing what I loved. And when I saw what similar jewelry was going for on eBay, I knew I could make a living at it. We started out doing flea markets and craft shows. Daddy insisted I go to college, so I studied art and business administration with the intention of starting the shop when I graduated. Well, I did, and the rest is history. I've been open 9 years now, and I still love what I do.\"\n\n\"Can't ask for more than that,\" Mom said.\n\nWe called Althea, and she came over to sit with the kids. I drove the Cruze, with Grandma in the front seat, and Shavonda and Mom in the back with Miracle strapped in her car seat between them. As long as we were visiting the stores, we figured the employees would like to see the baby.\n\nVelma and Ebony were at the Ellsworth store, and they were surprised to see us. Ebony was working the register while Velma was working on product in the back room. We gave Mom and Grandma a quick tour, including a quick demonstration on how the bracelets were made. Meanwhile, Ebony fussed over Miracle, who was in the detachable baby carrier portion of the car seat. \"If you see anything you'd like, take it,\" Shavonda said proudly. \"It's the least I can do.\"\n\nLeaving Ellsworth, we headed for the Carson Street store, where Andre was making stained glass sun catchers, and Nykole was minding the register. Once again, they fawned over Miracle, who was awake and smiling. Mom commented on the framed photos for sale, and I proudly told her that most of them were taken by me. Shavonda selected a couple of pendants from the display case, and gave one to Mom and Grandma. \n\nMom had asked Shavonda if she had any white employees. \"I have two,\" Shavonda replied. \"Jason you already know. Beth is in college, and she's home for the holiday. We didn't intend it that way, and race doesn't matter to me. But when we hire we first put out word in the church, and so far, they've referred 3 good employees to us. As long as they have the ability to learn the job and a good attitude I am happy.\"\n\nOn the way back, we treated Mom and Grandma to lunch at Ritter's, a local diner that served good food. Shavonda and I were back to ordering the same things off the menu, she no longer craved liver, though we were still eating a lot of fudge ripple ice cream. We had the fried chicken with fries. While we were waiting for our food, Miracle started fussing and Shavonda took her to the bathroom to feed her. Grandma remarked how well Shavonda was doing with the baby, and that she was a beautiful mother. \n\nWhen we returned home, Kenny was there with Edie. I hadn't realized it before, but they made a cute couple. Kenny was about my height, but slightly thinner than me, about 135 lbs. and 5 foot 10. He had wavy brown hair, cut just over the ears. Edie was a petite little lady, weighing maybe 110 and standing about 5 foot 2. She had beautiful round brown eyes, a cute button nose, and luscious full lips. Her hair was straight, in a short cut that looked good on her. She was a couple shades lighter than Shavonda, a medium brown tone. And though she was small, she curved in all the right places. When Kenny put his arm around her, she fit against him like they were made for each other.\n\nWe took them down to the game room and showed them our instruments. We even played a couple of songs for them, me on bass guitar while Shavonda played the synthesizer. Later, we all ran trains on my rebuilt railroad. Kenny had his own railroad back in Virginia where he lived, and Shavonda was familiar with my layout, so they had no trouble. Edie, however, had never been exposed to a working model railroad before, and had a hard time grasping some of the concepts. All in all, we had fun though. \n\nLater, the two of them started giving each other funny looks. I knew what was up and told them they could discretely use our room to scratch that itch. It was the most secluded part of the house. About an hour later, Kenny wandered out with Edie, with a funny look on his face. Pulling me to the side, he whispered, \"Now I know what Von looks like naked,\" with a smile on his face. It took me a minute to realize what he was talking about. We'd forgotten the nude African queen painting hanging on the wall. Due to the way the bedroom door was recessed into the room, the picture was on a wall in an alcove where it couldn't be seen from the bedroom door. That's why the rest of the family hadn't seen it when we gave the grand tour.\n\n\"That's not Von,\" I said. \"Though it does look a lot like her.\"\n\nI told Shavonda about the incident and next time she saw Kenny she said, with a straight face, \"That's not me on the wall. I'm several shades darker than that.\" Kenny turned beet red while Edie and I howled with laughter. \n\nThat weekend, we decided to try something new. Rather than having Miracle laying around in the carrier portion of her carseat, we bought a baby sling for her. That way, she could be kept safe and snug to either one of us. We took turns wearing the baby. Miracle seemed to enjoy the close contact, and spent a lot less time fussing and more time sleeping. An added advantage was that Shavonda could discretely breastfeed Miracle in the sling, even in public. It worked out pretty well for us. I know I enjoyed walking around the house with her strapped to my chest. \n\nSaturday afternoon, Kenny and Edie came back over, and we again played music in the game room. This time, Shavonda kept the baby strapped to her in the sling, while playing the keyboard. Kenny and Edie had found an old acoustic guitar in the attic at her Mom's house, and he played along with us. We'd been listening to music on the iPod earlier, and we decided to try and play Smashing Pumpkins' Pug. But they insisted I sing it. \"I've gone and sung my heart out to you all this time,\" Shavonda said with a twinkle in her eye, \"It's time you do the same for me. I know you don't think you can sing, but I want to hear for myself if you're that hopeless.\" She'd never expressed a desire to hear my voice before, knowing that I was ashamed of it. But she had a point. The song was too personal to let Kenny sing it to her.\n\n\"Kiss and kill me sweetly \n\nCome and drive me home \n\nDrag the miles in me \n\nI am yours alone \n\nInside where it's warm \n\nWrap myself in you \n\nOutside where I'm torn \n\nFight myself in two \n\nIn two \n\nInto you \n\nDesire me so deeply \n\nDrain and kick me hard \n\nWhisper secrets for me \n\nTry to go too far \n\nInside where it's warm \n\nWrap myself in you \n\nOutside where I'm torn \n\nFight myself in two \n\nIn two \n\nInto... \"\n\nThe song itself was relatively simple to play, especially the bass part. And it could be played at low volume and still sound good. It took a few tries before we got it right. And during that time, Mom and Dad came into the room and sat on the couch we'd put there, along with James and Althea, who'd dropped by for a visit. I did my best to concentrated on playing my bass part, while I sang to Shavonda. I didn't look at the others, I was too nervous about what I was doing. When we finished the song, our audience clapped.\n\n\"Boy, how come you never let us know you could sing?\" Althea asked. James nodded his approval, smiling broadly.\n\n\"I can't sing,\" I said. \"I know I sound horrible.\"\n\n\"Actually,\" said Kenny, \"Your pitch was spot on. Your voice is a little timid, though. But we can work on that. But you hit all the notes just where you should.\" I respected Kenny's opinion. He and his brother Calvin had a little folk-bluegrass duo called The Carbaughs that occasionally performed gigs back in West Virginia and Virginia, mainly fairs and weddings. If he thought I had potential, I probably did. \n\n\"I think it's a good start,\" Shavonda said with a smile. \"Your biggest problem is you don't think you can do it. We can work on your voice when we play. I'm not going to ask you to sing at karaoke or anything. Just sing for me when we play.\"\n\nWe played a few more songs, but I let Shavonda sing them. Edie sang backup when needed. We had a good time. I could see where this was going to become a tradition here, in the same way it was back on the farm. We stopped when Miracle started fussing. Shavonda discretely fed her a nipple, the baby sling was a godsend for this, as it kept the baby shielded from view while she nursed. Just to be on the safe side, Shavonda pulled a baby blanket over the sling. We all went back upstairs, and Shavonda sat on the couch feeding Miracle. Mom and Althea had retired to the kitchen and soon the aroma of good food filled the air. \n\nWith Miracle fed, Shavonda removed the baby and sling, and turned them over to me. It was my turn to bond. Since Shavonda had just nursed the baby, she poured herself a cherry rum and Dr. Pepper, and made me one as well. She was able to drink in moderation now, but the doctor advised her against nursing with alcohol in her system. That was one of the reasons she pumped her milk and prepared bottles ahead of time. Another reason was that with bottles made she didn't always have to be the one to feed the baby. I could do it as well, and if somebody babysat for us, there was milk for them to use as well.\n\nWe sat in the kitchen watching Althea teaching Mom how to make a dish that consisted of buttered and seasoned long grain rice, and split chicken breasts cooked in a pan. I'd never had that before, but it turned out to be delicious. \"I grew up eating this, the way you grew up eating pot roast,\" Shavonda told me. \"Now that I know you like it too, we can have it often. It's really quick and simple to make, and it's healthy too.\"\n\nAfter dinner, Brittany kept hanging around wanting to see the baby. I could tell she was in love with her little sister, and wanted to play with her. I had to tell her Miracle wasn't big enough to play yet. She seemed disappointed so I took Miracle out of the sling and put her in the baby carrier where Brittany could see her. \"DO NOT try to pick her up,\" I warned Brittany. \"You'll hurt her if you do. And then we'll all be mad at you. You don't want that, do you?\" Brittany shook her head no.\n\nEthan, for the most part, ignored the baby. I tried to give him some attention so he wouldn't feel left out. For Brittany, Miracle was like a living baby doll. She adjusted well. But Ethan had nothing to compare the baby with, so he chose to act like Miracle didn't exist. That was fine with me. I'd rather he got used to having a little sister around before he started to really interact with her. Shavonda and I were afraid he'd get jealous of the baby but so far that had not been a problem. \n\nAfter dinner, we gathered round the kitchen table and played gin rummy and Uno. Edie kept making cracks about playing poker so she could kick Kenny's ass. Kenny was uncharacteristically quiet. Normally, he was always cutting up, trying to embarrass me, especially after I'd met Shavonda. He kept trying to rattle her the way he could me, but she wasn't fazed at all. But this thing with Edie, it was affecting him, and he was easily embarrassed now when it came to her. It turns out, Shavonda later told me, that the first night Edie took Kenny home, they'd decided to play poker. As the alcohol took over, they bet their clothes. The game was so lopsided, Kenny was naked before Edie had to go topless. In desperation, on the last hand he'd bet spending the night as her slave against the rest of her clothing. She won, and he spent the rest of the night doing for her, and to her, whatever she wanted. She must have gone easy on him, though, because after that night he was smitten with her.\n\nAt any rate, it was good to see the good natured teasing she gave him. I wondered if that was how we'd come off when Shavonda first met my family. I knew that in the intervening months, our closeness had become apparent to everybody, to the point where it was hard to tell where I ended and Shavonda began. I hoped Kenny and Edie would find that kind of happiness, and the way it appeared, they were well on their way.\n\nThat night, as I cuddled with Shavonda in bed, it occurred to me how lucky we were. Our families had accepted each other, with one exception. Mom's parents and sister Nora had steadfastly refused contact with me and Shavonda. Even though they were invited to the wedding, none of them had shown up, and they hadn't sent so much as a card either. It kind of hurt a little. But I wasn't going to bring it up to my wife unless she asked. Some things are probably better left alone.\n\nThe next morning, the ladies made a big breakfast for everybody, and we waited for Edie to bring Kenny back. James and Althea had come over for the farewell breakfast, and even Barbara dropped in, invited of course. In celebration, Mom and Dad had slipped out in the predawn hours and bought steaks. We had enough steak and eggs for everybody, along with home fries and French toast. When Edie dropped Kenny off, we piled both their plates high with food as well. \n\nAll too soon it was time for my family to hit the road for the long trek back to Appalachia, and with tearful goodbyes they piled into Dad's Tahoe. We promised to all come down for Easter. \n\nAfter they left, we all got dressed for church. We took two separate cars, James and Althea in one and Shavonda, me, and the kids in the other. Shavonda drove, while I wore the empty baby sling. Miracle slept in her carseat between Ethan and Brittany.",
        "At the church, I quickly strapped Miracle into the sling, while Shavonda led Brittany and Ethan inside. As usual, everybody made a fuss over the baby. After the services, we stayed for the lunch the church usually served. Reverend Frazier came over to greet us. \"Good to see you two back so soon.\"\n\nWe discussed having a christening for Miracle, and decided to wait until after Christmas to do so. We scheduled a Saturday service the first weekend in January, with a small ceremony at the church, and a christening party afterward at our house. Since both parents had been raised in the Methodist church in one form or another (I was United Methodist, Shavonda was African Methodist Episcopal) we didn't see any problem with different beliefs. As a matter of fact, the AME church had accepted me with open arms, and I was proud to have them christen our daughter.\n\nAfter we got home from church, we let the kids play in the backyard, while we relaxed with Miracle in the living room. We were exhausted. In the past two weeks, we'd had 3 days in the hospital. (Yes, we. Once I got there just in time for the birth, I never left Shavonda's side until she was released.) We'd also had family stay over for 4 days and nights. All this time, Shavonda was trying to adjust to life with a newborn. I was too, but it was easier for me since my body hadn't undergone the strain of childbirth. \n\nI was thankful we'd chosen to live in Shavonda's house instead of mine. She'd inherited the house and two acres of land from her Grandmother, and the extension we'd put on the house gave us room inside the house while the huge backyard gave the kids a safe place to play outside. My old house was hemmed in on all sides in a densely-populated neighborhood, with a postage stamp sized yard and no room for expansion other than to buy the neighbor's house and tear it down. \n\nAfter dinner, the kids were sound asleep. Playing outside in the seasonably cold weather had worn them out, and the leftover turkey we had filled them with tryptophan. It was no wonder they conked out early. Shavonda had just nursed Miracle, and pumped her other breast, and she was beat as well. We put Miracle in her baby carrier, and cuddled on the couch watching a Tyler Perry movie. Yeah, I was domesticated. So what? For the first time in my life, I was truly happy this past year and a half. And I owed it all to the queen nestled in my arms. It was fitting that we'd come to make our life together in the very place we first made love. It seemed like an eternity ago. In all honesty, I had a hard time now remembering what life was like before Shavonda. \n\nThe influence this woman, this angel, had on the people around her was profound. First, she'd gently prodded me into taking a chance on her. She made me fall in love with her mind and personality long before we'd ever met in person. She'd believed in me when I felt I was alone against the world. And once we'd met, she quickly became my addiction. Or, I should say, we quickly became addicted to each other. As our love solidified, we wound up changing the very way my family saw race. They went from separate but equal to embracing our interracial marriage, and in the process gained another family, all based on the love they saw between us. Love that was instinctive. Though we were both highly intelligent people, we operated more on an intuitive level with each other. Most of the time, we anticipated each other's needs and accommodated them. In fact, her influence was so strong I was even starting to talk like her in subtle ways.\n\nOur first year had been a rough one, but we'd come through the trials and tribulations that would have broken up a weaker relationship. We were still dealing with the fallout from that first year, but every day it was becoming less. And to top it all, God had decided to give us the Miracle baby who peacefully slept in her carrier at our feet. \n\nKnowing that I had to work early the next morning, we took our first bubble bath since the baby shortly after dark, and I enjoyed once again soaping her lovely dark brown skin. She'd changed a bit. Because of the baby, I'd watched in fascination as she'd grown in size, never losing her intrinsic beauty. Even now, her breasts were swollen with milk, and though her belly was slowly shrinking she now had stretch marks. It didn't matter to me. I loved every inch of her body, and even found the stretch marks strangely arousing.\n\nWe kept our bath sensual but I kept away from her most sensitive areas. I didn't want to hurt her after all she'd been through. Shavonda, though, had other ideas. She soaped and lathered my private area with lavish attention. I couldn't help but become aroused. \"I missed doing that,\" she said. \"I love having that effect on you, more than you'll ever know. Tired as I am, it's torture knowing I can't take you inside me and ride you. I am so horny right now.\"\n\nWe towel dried each other and she led me to the bed, hand on my dick. Pushing me down on the mattress, Shavonda said, \"I can't take any more. I have to have you somehow. And this is the only way I can.\" She hovered her head over my shaft, before taking me fully into her warm wet mouth. Her soft, full lips worked their way down as her tongue did its wicked little dance over my sensitive skin. \n\n\"Are you sure?\" I asked. \n\nShe raised her head and popped me from between her lips, stroking my length with her hand. \"Yes, boo. You need this as much as I do. Don't worry. I'ma get mines. After I'm done, since you can't touch me where I want to be touched, you can worship my feet. I can still enjoy that. But for now, just lay back and enjoy this, knowing that I'm enjoying it as much as you are.\" She slipped me between her lips and resumed her tongue dance, making sure to hit my most sensitive spot. Working her head up and down now, she took me deeper, coating me with her saliva. Her lips felt so good on me. I'd come to love the way she went down on me, knowing what would eventually happen, and driving me toward the inevitable eruption with eager anticipation. \n\nI had my hand on her breast, kneading it absently as my pleasure built. Not knowing or caring if I was squeezing milk from it onto the bed. I guessed that since she'd just fed Miracle and pumped her milk she wouldn't be leaky yet. But in the end, neither of us cared. We'd wash the sheets if we had to.\n\nThe music played softly in the background, Luscious Jackson singing about naked being a state of mind. My personal state of mind was one of barely controlled lust as I involuntarily began to thrust upwards into her mouth. With one hand on Shavonda's breast, my other hand played in the tight curls of her hair. My pleasure was building in waves, each one threatening to take me over the edge. How I hung on for as long as I did, I'll never know. But she never let up her pace. Sensing by the urgency of my thrusts that I was getting near, she worked her hand over my balls, cupping them, playing with them. That was all I needed, and helplessly I was swept overboard by a wave of pleasure that caused me to erupt in spasms. I filled her eager mouth with shot after shot of thick, pent up sperm. \n\nI watched as she pumped her hand, trying to milk me dry. I saw her throat muscles swallow my seed, watched the little rivulets seep from the corners of her mouth. Satisfied she'd gotten it all, Shavonda raised her head and gave me a sticky smile as she looked deep in my eyes. \"That's just a small part of what I really wanted to do to you tonight,\" she said. \"But my body won't let me just yet. I promise you, as soon as the doctor clears me, I'ma wear your ass out.\"\n\nI kissed her deeply, happy to do anything she wanted the rest of the night. It was a game we played, taking each other to plateaus of barely controlled lust just to see where it would lead. Tonight, with her pussy off limits even to touch, I blazed a trail of smoldering kisses down her body, from her neck to her ankles. Finally reaching her feet, I had her already moaning in delight. \n\nI kissed the arches of her feet first, licking her insoles and she shuddered with pleasure. She lay there panting for a while as I worked my tongue and lips over the sensitive arch, before gasping, \"Jason, toes.\"\n\nOh, yeah, almost forgot about those. I took her big toe in my mouth and swirled my tongue around it as if it were a huge, bony nipple. She cried out, \"Jason, baby, that's the spot.\" I could feel her toes start to curl, and I knew she was close. \n\nPulling her toe out from between my lips, I asked, \"Can I take you over the edge, boo?\"\n\n\"We're not supposed to,\" she panted, \"But fuck that. I need this bad.\"\n\nI continued sucking on her big toe, feeling it curl in my mouth once more. Pushing her leg forward, I picked her foot up off the bed as I moved up the bed. Her leg bent as I moved, until her foot was adjacent to her other knee. That was where I wanted her. The spot was within reach now. She wanted to go over the edge, I was going to take her there. Reaching my hand down, I ran it up her inner thigh until I hit the magic spot where her ass cheek began. My fingers massaged that spot softly. \"Jason, no!\" Shavonda screamed in pleasure as she realized what I was doing. Her body convulsed in orgasm as the pleasure from her inner thigh and her toe overwhelmed her defenses. \"You bastard,\" she gasped as I looked deep into her eyes. I was laughing. It felt so good to finally get our releases out of the way. I know I felt much of the tension leave my body, and I hoped she had the same experience.\n\nHer labia glistened with her arousal. Bending my head down, I worked my way to her moist folds. \"Baby, I need a taste,\" I said. \"I promise I won't linger, but I need to lick up your juice.\" Before she could protest, I ran my tongue up and down her lips, circling her clit as I did so. I heard her breath catch as I touched her sweet nub. Then I pulled myself away in a feat of willpower. \"Are you okay?\" I asked. \n\nShavonda breathlessly nodded, her eyes ablaze with passion. Grabbing my shoulders, she pulled me up to her mouth for a deep kiss. Our tongues danced as we each sought out the taste of our juices. We lay back on the bed, cuddling in each other's arms as we let sleep overtake us.\n\nBack to work, I quickly got into a routine. Shavonda had opted to take it easy, stopping in to check on the stores during the day, but doing most of the work at home, assembling jewelry in the workshop, and updating the website in her home office next to the game room. She intended on doing this for at least another week, until she felt up to putting in full days at the stores again. In the meantime, I would continue to pick up the slack by concentrating on solder work in the evenings. That way we could keep the baby out of the workshop while solder work was being done. Even though we had a booth with a fan ventilating the lead fumes outside, I still didn't want to take the chance of Miracle breathing stray fumes. \n\nShaunice had followed through on her promise to get Shavonda's hair done. She opted to have her hair straightened, and cut short on one side while left its natural length on the other side. The effect was a sexy, asymmetrical cut that really highlighted her face and neck. It was a different look for Shavonda, but I loved it just the same.\n\nThe DA had been in contact with Shavonda about her testimony in Officer Shoemacher's upcoming trial. She told him she wouldn't make a decision without me, and set up a meeting at our house for one evening after work. We sat on the couch as the DA made his pitch. \"I know it's going to be hard for you, but we really need you to testify to show a pattern of conduct. All the other women who have come forward have credibility issues, either drugs or prostitution. But you are a respected businesswoman. You would have credibility they don't have. With your help, we can get him off the streets for good.\" He looked at me. \"Mr. Waite, your testimony would help buttress Shavonda's. You can testify how he broke protocol and essentially railroaded her. We also have the testimony of your friend who was at the party, and the zone commander. Altogether, it would be devastating to the defense.\"\n\n\"It's Von's reputation on the line,\" I said. \"The final decision is hers. Von, whatever you decide, know I am behind you 100 percent.\"\n\n\"If I do testify,\" Shavonda said sadly, \"I know the lawyers are going to have a field day. Understand that if I do appear in court, I am also going to be bringing a civil suit against the officer and the city for mental stress and other damages.\"\n\n\"Do what you must,\" the DA said. \"I can't offer you anything in exchange for your testimony. Your case would have to work its way through court, but the transcript should help you. On behalf of the City of Pittsburgh, I do apologize for what that officer put you through. He should have been taken off active duty, if not fired, long before it got this far.\"\n\n\"When will we have to give a deposition?\" Shavonda asked.\n\n\"The trial isn't until February. I'd probably set something up for early January.\"\n\n\"I'm not happy about this, but I will do it if it keeps him from ever victimizing anybody else,\" Shavonda said.\n\nSo, it looked like we were going to have to testify. I was glad Shavonda felt up to the task, but I knew they'd put her through the ringer. Not only the events of that night would be questioned, but her entire life as well. They'd look for something, anything, in her past to try to discredit her. She'd once mentioned to me that she'd done a nude photo shoot back during her college years. I hoped they didn't find those photos.\n\nEthan was starting to act up. Even though he was now 5 years old, he'd been the baby for his whole life. That had changed, and he resented it. He started demanding to be picked up and carried, at first, I humored him. But as Shavonda pointed out, the more we caved in to his demands, the more he would demand.\n\nIt came to a head one evening in Walmart. Ethan had demanded do be picked up and carried, Shavonda was in no shape to be lifting a 5-year-old, let alone carrying him. I was wearing Miracle in the sling, basking in the looks of approval from the older ladies in the store. I told Ethan that I was carrying the baby, and no way was I going to carry him too. He immediately fell out on the floor in a temper tantrum, kicking and screaming. In utter frustration, I told him in a menacing voice, \"Keep crying and I'll give you something to cry about.\" \n\nBy this time, people were staring at us. Shavonda was getting pissed and I'd about had it. I told Ethan that he was going to walk out of this sore with us. And if he didn't we were going to leave him there. We then walked around the corner where he couldn't see us between the shelves, but we could keep an eye on him. Once he could no longer see us, he stopped his act, and whimpered, \"Daddy? Ms. Von?\" We let him look around for a minute, then when he started to wander off in search of us, Shavonda quickly ran out and grabbed him by the hand.\n\nIn the meantime, store security had been called, and they saw Shavonda run out and grab Ethan. Next thing we knew, we were in a back room at the store, trying to explain that Shavonda was Ethan's legal guardian. They'd been freaked out by the sight of a black woman snatching up a small, crying white child. I told Ethan, \"You do that again and you won't get any presents this year.\"\n\n\"I'd have smacked his ass,\" Shavonda said.\n\n\"We can't do that in public,\" I explained. \"Especially not you. They don't know you are effectively his mother, so they'd do worse than what just happened. You'd end up in jail.\"\n\nWe sent Ethan to bed without dinner, and after he'd calmed down, I brought him a plate and sat down and talked to him about what he'd done. I also told him next time he threw a tantrum like that, I was taking one of his toys away from him. That seemed to calm him down for a while.\n\nThe next weekend, Barbara took the kids. We forewarned her about Ethan's temper tantrums. We knew he might say something, and we wanted to make sure Barbara knew the context beforehand. Besides, we figured she was going to take the kids to Muncy to visit Rose for Christmas, either this time or the next time she had them. We also gave Barbara a photo of Miracle, in case Rose wanted to see a photo of the baby. Given the correspondence we'd had from her, prison was mellowing her out a bit. Too little, too late, such a shame.\n\nThat Friday night after Barbara left, we dropped Miracle and several bottles off at Althea's house overnight so Shavonda could go to karaoke with Darren and Minnie. When we got to the bar, it was already packed. We got our usual steak hoagies and fresh cut fries, along with our drinks. Shavonda picked out some songs to sing from the catalog, and we awaited her turn. \n\nWhen she was called to the mike, before she could start her song, somebody heckled her from the back. In typical Shavonda style, she walked over to the heckler, wireless mike in hand. \"Nice to see you again, too,\" she said. \"So, what was it you said?\" She shoved the mike in the face of the older gentleman who'd heckled her the last time she'd sang here.\n\n\"I asked what you had,\" he replied. \"Obviously, you've had the baby.\"\n\n\"I had a little girl, named Miracle,\" Shavonda said proudly. \"Thanks for asking.\" The crowd hooted and hollered. They were pumped up tonight. Shavonda spoke to Minnie, who was in charge of the music. Minnie nodded her head, and searched the computer for Shavonda's request. \"I was going to perform a different song, but since you were kind enough to ask about the baby, I've decided to dedicate my first song to my daughter, Miracle Shavonda Waite, born on November 22.\"\n\nShavonda began to sing as the music began to play Stevie Wonder's Isn't She Lovely. The crowd grew quiet as she sang her heart out, about the birth of our lovely daughter. When she finished, the crowd went wild with applause. \n\nThe rest of the night was tame compared to that moment. Shavonda just had that knack of choosing just the right song for the occasion, and the voice to make any song her own.\n\nBy the end of the night, we were both tipsy, and we staggered across the street to our motel room. It was because we wanted the option to drink as much as we wanted that we rented the motel when we came out here in the first place. No sense in either of us getting a DUI. For me, that would be career suicide. Arriving in the room, Shavonda insisted that since we had no baby, that I drink her milk. Like I'd actually refuse. I loved the sweet taste of her secretions, and the only reason I left her alone most nights was so Miracle would have enough to eat.\n\nThe next day, Shavonda was in low spirits. The combination of our natural seasonal depression, and her post partum blues had her in tears. I held her while she cried on my chest until checkout time, then I drove her back home in a typical gray, dreary, dark Pennsylvania winter day. We stopped on the way home at a hardware store, and I bought some daylight spectrum bulbs. I couldn't give her the sun, but by changing the bulbs in the house with bright daylight bulbs, I could at least give her some artificial sun.\n\nOnce home, I installed the bulbs and Shavonda sat on the living room couch nursing Miracle in her sling. The combination of the baby and the bright bulbs seemed to pick her spirits up a bit, but she was still a bit gloomy. \"I got everything I wanted,\" she said sadly. \"I have a beautiful baby, a wonderful, loving man, and two children who love me like their own mother. I just don't understand why I'm so miserable.\"\n\n\"Your body is trying to get back to normal,\" I said. \"Your hormones are out of whack. And to top it all off, it's a dreary time of year. It'll get better. And until it does, I am here.\"\n\nThere was a Christmas card from my parents in the mailbox. I took it to Shavonda and together we opened and read the card. \"Best wishes for a Merry Christmas and a prosperous New Year. Love, Mom & Dad. P.S. I hope you enjoy the clipping.\" Neatly folded up in the card was a newspaper clipping from the Monroe County Times. ",
        "Births: \n\nWaite, Miracle\n\nBorn, on November 22 in Pittsburgh, PA, to Jason and Shavonda Waite of Pittsburgh, a baby girl, Miracle Shavonda Waite. The baby was 21 inches long and 7 pounds 12 ounces. Mother and daughter are healthy and recovering at home. Miracle is the granddaughter of Ed and Julia Waite of Waiteville.\n\n\"They really do take things seriously down there, don't they,\" Shavonda said. \n\n\"Yes, they do. Not much else going on there,\" I replied. \"Weddings, births and deaths are big news. Up here, Miracle's birth is lost among many. Down there it's news.\"\n\nWe had gotten into a routine of sorts. Ethan was still cutting up a bit, so I was trying to spend some time with him. At 5 years old, I figured he was old enough now to learn how to run my trains. I dug out one of my older locomotives, tuned it up and added a decoder so it would be compatible with my digital controllers, and let him run it to his heart's content. He was happy just to watch it make its way up the mountain and over the high bridge. \n\nBut Ethan didn't completely stop his antics. One evening, Shavonda had set Miracle in the baby carrier while she did the dishes. The baby was in the living room with Brittany and me. Miracle had started to cry. I checked her diaper and it was dry. I should have just picked her up and tried rocking her, but instead I went into the kitchen to tell Shavonda I thought Miracle was hungry.\n\nWe heard the little voice. \"You better shut up or I'll give you something to cry about.\" Ethan yelled at Miracle. We ran into the living room just in time to see Brittany smack Ethan right in the face. \n\n\"Don't you DARE talk to my baby sister like that!\" Brittany screamed. Miracle, frightened by all the noise, was screaming her head off. Shavonda picked her up and tried to quiet her, while I dragged Ethan from the room by his arm. I sat him down on his bed and told him, \"If I EVER hear of you threatening Miracle again, I'm taking one of your toys away!\"\n\n\"Brittany hit me,\" Ethan cried. \n\n\"And you were going to hit the baby,\" I said, \"Weren't you?\"\n\n\"Yes, Daddy,\" Ethan sobbed. \n\n\"Why?\" I asked. \"She never did anything bad to you.\"\n\n\"She stole my birthday,\" Ethan said. It dawned on me. We were supposed to have a small party for Ethan on Saturday the 23rd. Miracle was born on the 22nd. Shavonda and I had been in the hospital and Ethan's party was cancelled. No wonder he was acting up. I promised him we'd have a late birthday party for him at Chuck E Cheese sometime in January after we got the holidays out of the way. \n\nThe rest of December went relatively smoothly. Shavonda's postpartum depression lessened to the point where she could cope better, in part due to the daylight bulbs. By the second week of December, she was feeling well enough to start putting in a couple of full days a week on the job. She continued to slowly lose weight, and by Christmas day was down to 156. Half the baby weight was gone. \n\nShe insisted on having the traditional Christmas party for the employees at the house on the 14th of December. The early date was for Beth's benefit, as we knew Friday had been her last day of school before Christmas break. We had gotten pizza from Salvatore's like we had the year before, along with cake and ice cream. Brittany and Ethan ran around the house, excitedly. \n\nWhen everybody had gathered at the house, Shavonda started with her usual speech.\n\n\"I'd like to thank y'all for making this past year the best we've ever had. I know that I wasn't around as much as I should have been. Court cases and the baby made sure of that. Y'all really stepped up your game and got us through the year in great shape. We had considered adding another employee to pick up the slack, but we weren't able to find anybody I really liked. So I know we were shorthanded, but y'all pulled through for me.\"\n\n\"In the past year, our sales have increased 150%. Last year at this time, we'd just opened the Carson Street store. Now, barely a year later, that store does 58% of our business. So, Ebony, Andre, Tamika, thank you for making our expansion a success. But I can't forget about the original store. So Velma, Nykole, Beth, you deserve credit there. Thank you.\"\n\n\"I'd like to especially thank Velma, my mother's sister, who was my first employee. She's been there with me since the beginning, in the days when we didn't have a store and sold our jewelry at flea markets. Now she practically runs the Ellsworth store by herself. Velma, I couldn't have gotten as far as I did without you.\"\n\n\"Last, but certainly not least, I want to thank my loving husband Jason. Boy, you really looked out for me this year. Jason's concern about lead fumes from solder harming my unborn child led to him purchasing the ventilation booths we have in each of the stores, and helped make the workshops a little safer for everybody. Jason also did a lot of the prep work this year, allowing the rest of you to show your creativity without any drudge work to slow you down. Jason, thank you for believing in me, in us.\"\n\n\"Since our year was so prosperous, I was able to give each of you a $2000 Christmas bonus. Enjoy, do something special with the money, and by all means tell me what you did,\" Shavonda passed out the envelopes. \"Now, let's eat!\" \n\nWe all dug into the pizza and had a blast hanging out with each other. This was the first time we'd had the employees over the house since the wedding reception. We were lucky, there was not a bad one in the bunch. I could understand why Shavonda felt the need to do something nice for them every Christmas. \n\nThe next week went fast. On Tuesday, I was able to stop at an Amish shop and buy Shavonda's Christmas present. They delivered it the next day, and Althea had them put it in the old office space Shavonda had subdivided in the second bedroom, next to the kids' old bedroom. That room was now a storage space, and I didn't think Shavonda would look in there.\n\nFriday night, Barbara took the kids for the weekend and we spent the weekend alone in the house, just the two of us and Miracle. We sat and talked most of Saturday, listening to our music on the iPod. The conversation turned to the albums that had the most influence on our lives growing up. \n\nMine were pretty straightforward, and what was to be expected given my taste in music. They were: Thick as a Brick by Jethro Tull, the first album I'd ever fallen in love with. I'd liberated it from Dad's record collection and wore it out. Yes, Tales from Topographic Oceans; King Crimson, Starless and Bible Black; Smashing Pumpkins, Melancholy and the Infinite Sadness; Depeche Mode, Violator; XTC, Nonsuch; and Giles Reaves, Wunjo. The album that turned me on to ambient music. Ironically, it was also the one Shavonda had on repeat play in the birthing suite. Now every time I listened to it, I'd remember watching my baby girl pop into this world.\n\nShavonda's actually surprised me. They were a bit more eclectic than mine. Hers also reached into her college years as well. Angie Stone, Black Diamond; Macy Gray, The Trouble with being Myself; Spirit, The 12 Dreams of Dr. Sardonicus. A psychedelic masterpiece but not what you'd think she'd be listening to in the early 2000s. Brand X, Manifest Destiny. That one got her into jazz fusion. Radiohead, OK Computer; Morcheeba, Who can you Trust? Skye Edwards demonstrated that a black woman didn't have to sing soul/ r&b to make it big. \n\nWe spent the rest of the evening listening to our influential albums all the way through. No wonder I loved her so much. Like me, she'd taken the time to dig beyond what she was expected to listen to, and found gems she'd never known existed. Like me, she was still hungry for music yet to be discovered. And, though our musical tastes overlapped quite a bit, we were still discovering new things on our iPods, things that had come from the other person's music collection. \n\nOn Sunday night, when Barbara dropped the kids off, she had a letter for us from Rose:\n\nDear Jason and Shavonda,\n\nThank you so much for the photo of Miracle. I am glad that you had a healthy baby girl. She is a beautiful baby. Mother tells me that Jason was there with you, Shavonda, when you gave birth. I am happy for you. I know he would have been there for me too, but I insisted he drive long distance truck to support us. That was my mistake. I could have used the love and devotion he showed you when I gave birth. We missed out on that special time, twice.\n\nJason, Ethan told me you don't like him anymore. But Mother tells me that Ethan has been having trouble accepting his new sister. I hope you don't mind, but I talked to him about the baby. I told him that he has a new job now, to make sure nobody hurts his baby sister. I also told him that you and Shavonda still love him just as much as ever, but you have to make sure Miracle is taken care of first. Maybe that will help him to deal with not being the baby anymore.\n\nI hope you two have a Merry Christmas. I understand that if I had behaved differently towards you two, I would be there celebrating it with you. My Christmas will be a lonely one for the next few years, but I will survive. Believe it or not, Shavonda, your forgiveness of me has helped me to deal with the situation here. I take some comfort in knowing that you don't hate me for what I did, and I continue to work on my feelings towards you and Jason. \n\nRose M Waite\n\nMonday, December 23 was my last day of work before Christmas. Shavonda had scheduled appointments for both her and Miracle for their 4 week checkups. Everything was good. In fact, both mother and baby were doing much better than expected. I had gotten off the road early, and was home before Shavonda and Miracle. After I took a quick shower, Althea had made some chicken and rice for the kids, and we all sat down in the kitchen for a late lunch. It occurred to me how lucky I was to have a mother in law who actually loved me as one of her own.\n\nShavonda was giddily happy when she arrived home with the baby. She told Althea that the checkups went well, and the doctor wanted her to start on birth control asap. She had the prescription filled on the way home, and was to start taking the pills immediately. Interesting, I thought. Evidently, there was a very real possibility she could have more children. We were going to have to sit down and have a serious talk about this. I knew that I would father as many children as she wanted, but could she handle more than the 3 we were already taking care of? And if she could, how far apart did she want them in age?\n\nAlthea, meantime, was making more chicken and rice so Shavonda could eat as well. She stayed until well after dark, talking to us around the kitchen table while the kids played and Shavonda nursed the baby. It was amazing how nobody gave it a second thought when she did this now. With Miracle comfortably positioned in her sling, the only way you could tell what was happening was the soft sucking sounds the baby was making. And you had to be looking out for that or you'd never hear it.\n\nLater, after Althea had left, and the kids and Miracle were asleep, Shavonda pumped her other breast and made bottles for the baby. She smiled at me. \"See anything you like?\" she asked. Her brown eyes gleamed beautifully, telling me something was up. There was something she didn't want to tell me in front of her mother.\n\n\"Jason,\" she purred. \"The doctor told me to thank you for doing those massages on me before the birth. Evidently, by stretching me out, you had prepared my body enough for the birth that I have healed enough to be intimate again. He cleared me to have sex anytime I feel like it. And I feel like it right now.\"\n\nI smiled. This was going to be a good night.\n\n\"Not so fast, Jason,\" said Shavonda softly. \"First, there's something I've always wanted to do with you. Something I had intended to do the first night you spent with me. But the power outage prevented it. Since this is like our first time all over again, I'd like to do it now.\" She lifted her maternity dress over her head, and stood there in nursing bra and red panties. \"Remember, we started to slow dance while slowly undressing each other? I never got to dance naked with you.\" She slipped out of her bra and slid her panties down her legs, then stepped out of them. I quickly pulled my shirt over my head and dropped my pants to the floor.\n\nShavonda turned on the stereo, with one of the iPods in the dock. I came up behind her as she flipped through her playlists, selecting one called slow jams. She turned around and put her arms around my neck, kissing me deeply as the music started. We swayed to the beat, our bodies held close together as our tongues danced. It felt so good being in close contact with her soft brown skin once again. We should have done this the first night, and many times since then. But somehow, we'd always been clothed when we danced. I felt her body move against me as we danced, her breasts bouncing slightly against my chest, her stomach rubbing up against my erect penis. \n\n\"We'll just let our bodies tell us when it's time,\" she whispered. \"We've got all night.\" I nodded, looking deep into her beautiful brown eyes. They showed a mixture of contentment and need, I knew she wanted me as bad as I wanted her. 4 weeks of abstinence was killing the both of us. But at the same time, we were both enjoying the dance, and neither one wanted it to end just yet. \n\nWe must have danced for an hour or more, looking into each other's eyes, hands roaming freely, cupping, squeezing, feeling. It was so sensual, so natural. We were meant to be together as one. \n\n\"I'm ready,\" she said softly. She led me by the hand to the bedroom. I lay back on the bed, watching her sway and jiggle as she walked around the room lighting our pine scented candles. The flickering light set her dark skin aglow. Finished with the candles, she crawled up the bed to me. Straddling my hips, Shavonda whispered, \"I am still a little sore down there. I need you to be gentle. So, I want you to lay back and let me do the work. Don't try to help me. Let me get used to having you inside me again.\" She gently positioned my throbbing dick at her slippery entrance, slowly lowering herself onto me, then rising up before working my manhood just a little bit deeper inside her. I watched in awe as my white shaft slowly disappeared into her dark folds. They had shaved her bare for the birth, and Shavonda had maintained the bald look since then.\n\n\"I need to taste you,\" I begged.\n\n\"You will,\" she said. \"But first I need this. I've been waiting a long time for this. After, you can taste me all you want.\" Shavonda finally had me all the way inside her soaking pussy, her walls gently massaging me as she worked her way up and down, back and forth. My hands gently squeezed her hips as she rode me, breasts swaying gently just out of reach. She shuddered as the sensations took hold of her body. Her eyes closed as she moaned her pleasure. My queen was never more beautiful than at times like this, when she lost herself in her pleasure. At moments like these, nothing existed except our two bodies, joined as one, moving in mutual pleasure. \n\n\"Jason, baby, don't fight it. Let me take you over. I want you to come with me.\" Shavonda was moaning, her words punctuated by little grunts as she came ever closer to her peak. Her movements quickened, her muscles tightened around me as she reached her peak. \"Jason, baby, ooooooh.\" She'd reached the edge, her body tensed as she hesitated for a second before giving in to the urge. I was close as well, my toes curled on the edge of orgasm. Involuntarily, I began to thrust up into her hovering body. Shavonda hadn't expected me to take over like that, just as she reached her peak. \"That's it, baby. Fuck me hard,\" she screamed in passion. That was all it took, and I groaned animalistically as I gave up control of my body. Shavonda collapsed on top of me as I emptied myself deep inside her soaking pussy. I squeezed her tight to me as our spasms subsided.\n\nWe lay there a minute, catching our breath, before she slid her body off of mine. Our love leaked out of her as she repositioned herself. \"Now you can taste me, boo,\" she purred as she swung her hips over my face. I eagerly buried my face in her crotch as my tongue snaked out to lick our juices. I felt Shavonda lower her lips onto my wilted dick, her tongue licking me clean. I had missed this position so much. I missed her sweet taste, I missed the aroma of her arousal and our lovemaking. Most of all, I missed the feel of her labia gliding over my lips as my tongue probed deep inside her. \n\nShe ground herself against my lips, allowing me to pull another orgasm from her body. Her lips and tongue worked their magic on my other end. The combination of pent-up desire, her intoxicating aroma, and the sensations she was giving with her willing mouth were bringing me back to life. Round two anybody?\n\nThe second round was a slow, sensual missionary. I gently worked in and out of her body as she lay back, moaning softly. I was determined to make this one last. I loved watching her body react to me when we made love slow and easy. Her passion built in waves. Once primed and aroused, she was multiorgasmic, and she rode the mini orgasms moaning her pleasure as I watched her dark breasts gently bounce. We ground our hips into each other in a horizontal slow dance. My pleasure built slowly, and I stopped moving when I felt close to the edge. I let myself teeter on the brink of orgasm a couple of times, holding Shavonda's hips so she couldn't move. Even the slightest shift in her position would have taken me over the edge. \n\nOnce safely out of danger, I let go of her hips and let her move against me again. This time, she wrapped her legs around me, pulling me deep within her with every stroke. She was ready for the big one. I was too. I pulled her legs over my shoulders, lifting her ass off the bed as I did so, and drove deep into her. She moaned loudly as I did so, her hands grabbed my ass and she pulled me into her. \"Don't stop,\" she said breathlessly. \"I missed this.\" \n\nDriving deep and hard, I could feel her pulsing around me as her face contorted in the sheer pleasure of orgasm. Riding the edge of my own wave, I let myself fall over the edge into unimaginable pleasure as I plunged into her depths. We both shook with the intensity of our release, a month's worth of pent up love and lust flowing out in spasms as I filled her with what seemed like a never-ending series of spurts. She stared into my eyes, face contorted in a silent scream. It was awesomely beautiful. Someday I want to take a photo of her face as she comes. \n\nDrained, I collapsed on top of her quivering body, trying to use my elbows to keep some of my weight off her. Her legs were still slung over my shoulders, and I had to have been crushing her. \"Don't pull out,\" she said. \"I'm not ready to let you go yet. But I need to shift around.\"\n\nI instinctively knew what she wanted. Raising back up on my arms, I gently lifted one of her legs over my head, kissing it as I did, then letting it down beside the other as I carefully rolled onto my side. Still connected, she completed the move by rolling onto her side as well. We were now in spoon position, with me still buried deep within her. Her muscled still gripped me tight, the aftershocks of her orgasm gently massaging my dick. I put my arm around her and played with her nipple as I nuzzled her neck.\n\n\"Damn, boy,\" she exclaimed, \"You gonna put a sista to sleep like that,\"\n\n\"You wouldn't be the only one,\" I said. \"I'm exhausted. I can't do any more without rest.\"\n\nWe fell asleep like that, intimately curled up into each other. She was mine, and it felt good. Shavonda was well worth anything I had to go through to keep her. She was incredible in bed, beautiful and intelligent in the real world, and she made me proud wherever we went. And even though she was a strong woman who could take care of herself, she entrusted her well-being to me. It was an awesome responsibility, one that I took seriously. 19 months into our relationship, I finally understood what her being my queen meant. We were both the pillars the other relied on in bad times, and the person we most wanted to be with in the good times. It meant that we were more than inseparable. It meant neither of us was a complete person without the other. Emotionally, we were Siamese twins.",
        "Miracle had settled into a schedule where she slept most of the night, and woke when she heard me getting ready for work in the wee hours of the morning. Often, I would let Shavonda sleep and fed the baby a bottle while sitting on the couch. When she was done, I'd gently lay her on her back in the crib, wrapped in her blanket like a bundle, before gently kissing my wife on the forehead and leaving for work.\n\nThis morning, Miracle awoke on her own about 5:30. Shavonda was starting to stir by that time, so I gently peeled myself away from her warm body and brought the baby to her. \"Do you want me to feed her, or do you want to breast feed her?\" I asked.\n\n\"I got this,\" my queen said. She sat up on the bed. Leaning back against the headboard, and fed the baby cradled in her arms against her breast. When we had the extension put on the house, we'd specified heavier insulation than called for, and our bedroom was the warmest room in the house. Even on a cold winter day, one could sit naked in the bed without feeling cold, and we often slept without covers. I watched Shavonda's motherly instincts proudly, glad that I was able to give her Miracle, and that her body had allowed her to carry the baby to full term. \n\nIt was now Christmas Eve, and we had a full day ahead of us, one that I hoped would become a tradition with the kids. As with the previous year, we'd decided to hold the family Christmas here. That way, we wouldn't have to uproot the kids from their new toys. In addition to Shavonda's parents and sister Shaunice, we expected Tamika and Brian to make an appearance as well as a few other family members. Most importantly, her younger brother Marcus is visiting from California with his family.\n\nWhen the kids wake up, we dress them and make a quick run to the supermarket for supplies. Shavonda has prepared a list, and we load the cart with flour, sugar and other baking supplies. I wore Miracle in her sling, while Shavonda herded the kids. I couldn't help but notice the smiles on the faces of the older black women as they pass the young interracial family in the aisles. A few stop us and ask to see the baby. Miracle smiles back at them with her blue eyes. \"She is so cute. You two must be so proud,\" one lady remarks. I smile. Yes, I am proud of my family. We represent everything that is good in this country. We are hardworking people, raising a mixed family with all the love we have. We celebrate our differences as we build on our common ground. The result is a strong love I never believed existed, the kind they sing of in the beautiful songs. \n\nOn our way through the store, we come across electric roasting pans on sale. I buy two of them, but I am not sure why. We'd only need one. Shavonda wanted to try one out on the turkey we were having for dinner Christmas day. I also got a big box of mashed potatoes. Shavonda has tried to get me to eat homemade but I actually prefer the ones in the box. I always have. \n\nReturning home, we eat breakfast, then get started on the baking. We are soon up to our elbows in flour as the cookies cycle their way through the oven. The kids are busy licking the bowls when we are done with them. \n\nAlthea arrived around lunchtime, and we clear the kitchen table of the cooled cookies. We are by no means done yet, but she insists we stop for lunch. Shavonda fried up some hamburgers for the kids while I make a pot of mashed potatoes for us. I make bouillon cube gravy in a smaller pot. As we sit down to eat, Althea remarks how good the gravy is. \"Grandma taught me how to make it,\" I said. \"You should see what I can do with some beef drippings.\" My gravy has been thickened with flour to the consistency of pancake batter, and seasoned with a touch of salt. We wash it all down with ghetto Kool aid. I've always loved it ever since Shavonda introduced me to it when we first met. I'd have never thought of adding double the sugar to the Kool aid mix.\n\nSoon it was back to work on the cookies, but not before I had desert. While we were making our cookies from scratch using the recipes Mom had given Shavonda last spring, I had slipped a roll of sugar cookie dough into the cart this morning. When Shavonda had tried to bake it, I told her not to touch it, it was mine. Raw cookie dough has always been one of my weak spots, and I'd bought the roll specifically to eat raw. Shavonda also tried some, and I think I hooked her on it.\n\nShe'd saved the best for last. Our final batches of cookies were chocolate peepers, a cake like chocolate cookie with a marshmallow center. We all had fun rolling the miniature marshmallows in cookie dough, then placing them on the greased cookie sheet. The very last batch was the most special of all. Scottish shortbread using the old family recipe handed down for generations. The one that came from Scotland itself when my ancestors immigrated a couple hundred years ago. \n\nWith the cookies done and cooling, it was now time for dinner. Shavonda had pulled several steaks out of the freezer to thaw earlier in the day, and we pan fried them. For good measure, we also scrambled the rest of the eggs leftover from baking the cookies. Shavonda and I never tired of steak and eggs, and Althea enjoyed them as well. \"I see Jason's got you spoilt,\" she remarked. \"Is that oregano I taste on the steak?\"\n\n\"Yes, it is,\" I replied. \"I learned it from my old neighbors, the Zuccheros. They always seasoned the steak for hoagies with oregano.\"\n\n\"Well, it's delicious.\" Althea replied. \"Boy can cook, brings recipes for homemade cookies, plays music and can sing, works hard to support his family without complaint, and gives foot and back massages whenever you want them. Von, where'd you find this boy? You know how lucky you are? He even held your hand while you pushed out his baby. He's a one in a million.\"\n\nAfter dinner, I quickly did the dishes while Althea and Shavonda prepared the turkey that had been thawing in the refrigerator, and set it in the roasting pan. It would slow cook for most of the night. The other guests were all supposed to bring something to supplement our food, so we had only bought one turkey. I wondered if it were going to be enough.\n\nAfter dinner, I excused myself, telling the ladies I had to take care of something in the basement. Once down there, I worked on Ethan's present. I'd bought him a Thomas engine, but needed to install and program a decoder so that we could control it with our digital controllers. The process took me about an hour, and involved completely disassembling the engine and rewiring it so that all power went through the decoder. I programmed the engine and gave it a test run on the railroad. Thomas came with two coaches, Annie and Clarabel, and it was all he could do to get them to the top of the mountain at Spruce Bridge. But Ethan wasn't going to mind much that his engine couldn't pull a long train.\n\nThat evening after the kids were in bed, the baby started fussing. \"Hold on,\" I told Shavonda. \"Hold her off for a couple minutes before you feed her.\" I went to the old office, now storage room and wrestled Shavonda's present to the living room. Her jaw dropped when she saw the Amish rocking chair I'd bought her. \"Merry Christmas,\" I said. \"Now you have somewhere to soothe the baby while you feed her.\"\n\n\"Thank you, Jason,\" Shavonda said with tears in her eyes. \"It's beautiful.\" She sat down on the cushions tied to the wooden chair, and rocked the baby as she fed her. Soon, Miracle was fast asleep, lulled by the rocking motion, and I took her from her mother and placed her in the crib. When I came back to the living room, Shavonda handed me a package. \"Merry Christmas,\" she said. \"You deserve this.\"\n\nI opened the package. Inside was a box set containing the complete recordings of Bob Marley. While I'd always been a fan, his music had recently taken on special meaning for us when we realized that our musical setup of bass guitar and keyboards was ideal for playing reggae music. As such, we'd been selecting various Bob Marley songs and attempting to play them ourselves with some success. I ended up singing most of them, gaining a little more confidence in my voice. I still wasn't ready to do karaoke yet, but I did feel good singing Bob Marley in the privacy of my own basement.\n\nI retrieved another present from under the Christmas tree. \"Be careful,\" I said. \"It's very fragile. Andre showed me how to make it, and this was my first attempt. I hope you like it.\" She opened the wide, flat box carefully, and slid out the contents. I had worked for a couple months on it, sneaking time in when Shavonda wasn't home. I hoped we could replace one of the window panes with the strained glass creation I had made for her. Our likenesses were rendered in stained glass, facing each other, from the shoulders up in a round border similar to a coin. Around the edge of the border were the words Shavonda and Jason forever. The words were encircled by another border, and the outer edges were clear glass cut to fit one of the window panes in the front door. \n\n\"Jason, it's beautiful,\" Shavonda exclaimed. \"I'ma have to thank Andre for teaching you how to do this.\"\n\nAfter we'd retrieved the childrens' presents from their hiding place in the basement, and arranged them under the tree, we once again slow danced naked, this time to Bob Marley.\n\nChristmas morning, after the kids were done opening their presents, I took Ethan downstairs to the trains to try out his Thomas. He was thrilled beyond belief, and ran the wheels off the poor thing, running from one end of the line to the other. I even let him run on the extension, the one that would represent the railroad near my parents' farm. The extension Shavonda insisted I put in to represent the places that had become so special to us.\n\n. \n\nWhile I was downstairs playing trains with Ethan, the guests started arriving. Shavonda led her brother downstairs and introduced me to him and his wife, Tina. Marcus was about 5 years younger than Shavonda, with the same facial features and a goatee that made him look vaguely like Chester Cheetah. I am not saying that to be derogatory, as I have come to love the guy, but that was my first impression. His wife was a larger woman of caramel complexion, looking like a slightly older Tamika. She seemed friendly enough, but something felt off about Marcus. \n\nAfter the ladies, had gone back up the steps, we talked. Marcus seemed to be tiptoeing around something, and finally he just came right out and said it. \"Don't you dare hurt her, Jason. She's a special lady. You hurt her, I hurt you.\"\n\nAt that point, I lost it. I wasn't going to be threatened in my own house, for something I had no intention of doing in the first place. \"Who the fuck does you think you are?\" I said, my voice rising. \"Nineteen months we've been together, not once have I hurt her. Nineteen months! During that time, I haven't even spoken to you, let alone met you. Where were you for our wedding? I held her hand while she gave birth, where were you? We've been through hell together, I held her when they trashed her new store, fought with my own family members over her honor. Where the fuck were you? Now you come into our house and threaten me?\"\n\n\"It's Shavonda's house not yours,\" he said.\n\n\"The fuck, man?\" I was yelling at him now. \"I had my own house. I gave it up to come live with her. Both our families helped us enlarge it for the kids' sake. This is my home now, too. Nobody in your family has a problem with me but you! Don't even go there. I've proven myself over and over. You don't know me. You never bothered to talk to me to find out who I am and what I'm about! You need to get over yourself, dude!\"\n\nJames, Althea and Shavonda rushed down the stairs to see what the commotion was about. \n\n\"Jason!\" Althea yelled at me.\n\n\"Sorry,\" I said to Althea. \"Your son just accused me of hurting your daughter.\"\n\n\"Marcus, why would you do that?\" James was livid. \"This man has earned the respect of this family. I will not stand by and have you pick a fight with him in his own home.\"\n\n\"His own home?\" Marcus sputtered. \"Last I checked this was Von's home.\"\n\n\"He's her husband, Marcus. He stood by her through all the bullshit of the past two years, and never once has he not been there for her. You can't come in here and threaten him like that. If those two ever split up, we'd lose both of them. They're a part of each other now. You hurt one, you hurt them both. And I will not stand by and have you acting a fool in their house. You may be family but you're still a guest. Remember that!\" James gave Marcus a dressing down. For a minute, I actually thought James was going to kick Marcus's ass. But things were calming down.\n\nShavonda had come over to me, and stood behind me, her arms around my waist. I knew the symbolism was not lost on Marcus, who glared at his sister. \n\n\"Son you'd better go out on the porch,\" Althea scolded. \"You can come in when you've cooled down.\" Marcus turned abruptly and stormed up the stairs. \"Don't worry, he's not a bad kid. When he calms down, he'll be cool with you.\"\n\n\"I don't need this,\" I said sadly. \"All I ever tried to do is love her the way she deserves to be loved.\"\n\n\"You're right, Jason. Marcus is wrong. Don't know why he decided to show his ass today. But we all got your back.\" James patted me on the shoulder. \"You've earned the right to be in this family. I always dreamed that one day Shavonda would meet a man who loves her unconditionally.\" He chuckled. \"I just never dreamed he'd be white. But love is love and what you two have most people never know. Don't let the bullshit get to ya.\"\n\nWe all trudged back up the stairs and assembled in the living room. Instinctively, I picked Miracle up from the baby carrier where she lay cooing, and put her in the sling lying beside the carrier, before strapping her to my body. I sat down in the rocking chair, looking at her face as she smiled up at me. Tina remarked, \"He seems so comfortable with the baby.\"\n\n\"He is,\" Shavonda said softly. \"He feeds her almost as much as I do, and I'm the one with tits. I just wish your husband understood what a gem I have in Jason.\"\n\n\"He will,\" Tina said. \"Just give him a little space. I honestly don't think he thought Jason would stand up to him.\"\n\n\"Did you know Jason helped me throughout my pregnancy?\" Shavonda explained. \"He even gave me massages that helped prepare my body for the birth. They didn't have to cut me at all, and the doctor told me this week that I am healed enough to get on with my life.\" She grabbed her laptop from the end table and fired it up. She navigated to our web blog, and pulled up the slideshow I'd made of her pregnancy. Tina, Shaunice and Althea watched as the slides changed, showing week by week Shavonda's ever expanding body. The last slide showed mother and baby in the hospital bed. \n\n\"Jason took those?\" Tina asked.\n\nYes,\" Shavonda replied. \"He insisted that I pose every Sunday from the day we found out I was pregnant until Miracle came.\"\n\n\"Why'd you name her Miracle?\" Tina asked.\n\n\"The doctors all told me I couldn't have babies after Tony attacked me.\" Shavonda shook her head sadly. \"Then along comes Jason. He offers me the family I didn't think I'd ever have. That's Brittany and Ethan. We never thought I'd conceive, and we ignored the signs for the first couple months. Then I collapsed on our honeymoon and wound up in the hospital. That's how I found out I was pregnant. I was just barely starting to show. She a miracle baby, and Jason did everything he could to make sure she'd be healthy. Did you know he wouldn't let me pump gas or get my hair done for six months?\"\n\n\"Now that's love. He don't mind your hair a mess?\" Tina looked at me with respect.\n\n\"Actually, he prefers I wear it natural.\" Shavonda said. \"Says he love the way it feel when he run his fingers through it.\"\n\n\"How'd you get so lucky?\" Shaunice asked. \"I spend a fortune getting my hair done and all I get is dogs.\"\n\n\"I dunno, just lucky I guess. He even took music back up because I loved to sing. Now we play a mean Bob Marley. But it get even better. Did you know that man helped me and Mama in the kitchen all day yesterday, making cookies? Most of them are made from recipes his mama gave me. And he even made us mashed potatoes and homemade gravy for lunch.\"\n\n\"Turkey's done!\" Althea yelled from the kitchen, where she'd retreated to keep an eye on things. \"Jason, come work your magic!\"\n\nReluctantly, I unstrapped Miracle and handed her to Shavonda. In the kitchen, I spooned up the pan drippings from the turkey, added water and chicken bouillon cubes, and thickened the broth with a flour and water mixture, letting the pot simmer while I made a big pot of mashed potatoes from the box. When they were ready, I summoned the family, telling them, \"It's time to eat. But save the turkey legs for Tamika.\"\n\nShavonda laughed. \"Inside joke. Ask Meeka when she gets here.\"\n\nThe other members of the family had brought mac and cheese, stuffing, and a pumpkin pie. Althea and Shavonda had made pots of peas, corn and greens, and we even had cornbread just out of the oven. It was a feast fit for a king. And according to Shavonda, I was the king of this castle. I gladly filled my plate with mashed potatoes, and turkey, gravy over everything. Grabbing a couple of pieces of cornbread, I was on my way to the living room when I saw Marcus again.\n\n\"Sorry, man,\" was all he said. \"Shoulda asked the family about you before I said what I did. They all say you treat her like a queen.\"\n\n\"She's my life, Marcus.\" I said. \"I'd die without her. I can't lose her, ever. But if you'd have talked to your parents you'd already know that.\"\n\nJust then the doorbell rang, and I set my plate on the coffee table and let Tamika and Brian in. \"We saved the turkey legs for you,\" I said.\n\n\"Fuck you, Jason,\" Tamika laughed. \n\nTurning to the rest of the family, I explained. \"Brian works the Renaissance Festivals selling turkey legs. That's how Tamika met him. We set up a booth there and sell Von's jewelry at the fests, and Tamika kept buying us turkey legs so she'd have an excuse to see Brian. He finally got sick of looking at her googly eyes and asked her out. Now they're engaged.\"\n\nAfter dinner, we all went downstairs to the game room, where Shavonda and I performed some songs for the family, I did my Smashing Pumpkins song Pug, plus I sang several Marley tunes. Shavonda for her part had selected a few of her favorite songs including the ones she had sang at the wedding. We had rearranged them a little for bass and keyboards, but they still worked. Of course, Shavonda had poured me some black cherry liquid courage, and there was something right about sipping cherry rum and Dr. Pepper between singing reggae tunes. \n\nAll too soon, people started to head for home, and we sat in front of the tv with the kids, half blitzed, eating cookies and watching Thomas videos until they fell asleep. \n\nAnother Christmas had come and gone, and I had to work in the morning, so we curled up in bed and fell asleep in each other's arms.\n\nTo be continued..."
    ],
    "authorname": "bwwm4me",
    "tags": [
        "bwwm",
        "bw/wm",
        "black woman",
        "bfwm",
        "white man",
        "interracial romance",
        "interracial"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/love-knows-no-color-pt-14"
}