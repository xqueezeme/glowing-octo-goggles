{
    "title": "The Pleasure Cruise Ch. 05",
    "pages": [
        "This is the final chapter, and it's a long one. There's a lot of plot to wrap up before we get to the good stuff, but I hope the payoff is worth it.\n\nRavenna933 edited the story from the beginning, and her contributions made it immensely stronger and more coherent. Ninjasr4real also sent me a suggestion for the final chapter that I liked too much not to use. Thank you to both.\n\nI awoke with a start around 4 AM, and I instinctively reached over to Lauren's side of the bed to see if she was there. Nope. I was still alone. The guilt and regret over my actions last night, giving and receiving oral sex to and from an easy redhead whom I wasn't even that into after ruining my chances with Danielle, washed over me like a flood. You're an asshole. \n\n*\n\nI got up, used the bathroom, then lay awake for a while, feeling miserable, before I eventually fell back to sleep again under the powerful sedative influence of the ship's motion. When I next became conscious of my surroundings, it was morning, and I heard a light rapping at the door to my cabin. It clearly wasn't Lauren, as she'd be able to let herself in. I quickly checked the time -- just after 8:00 AM -- and then got up, recognized I was still nude, put on a ship's issue bathrobe, and opened the door.\n\nIt was Emily, wearing a similar ship's robe and wearing the relaxed, radiant glow of a woman who'd been fucked senseless the night before.\n\n\"Morning!\" she said chipperly.\n\n\"Good morning,\" I answered wearily.\n\n\"Mind if I come in?\" she asked.\n\nI gestured at the room, and she moved in, sashaying towards the bed and hopping on, sitting cross-legged. I returned to bed as well, crawling back to the warm spot and laying down, propping myself up on a pillow under the covers. I could easily see up Emily's robe to a pair of teal and pink panties, but she didn't seem to either notice or mind that she was flashing me.\n\n\"To what do I owe the honour?\" I asked sleepily.\n\n\"Danielle and Lauren are still sleeping in my cabin, and I'm awake and bored and tired of sitting in the dark having to be quiet,\" she answered. \"I just came up to see what happened between you and Danielle last night.\"\n\n\"Ugh.\" I sighed. \"What do you know?\"\n\n\"She came back to the room after Lauren and me...\" she caught herself. \"After we were done. She was really upset. I heard about the scratches on your back.\"\n\n\"Great, so you must think I'm a terrible person too,\" I said defeatedly.\n\n\"Not at all.\" She smiled. \"Danielle's overthinking it.\"\n\nI was surprised. \"What?\"\n\n\"Lauren and I teamed up on her last night to try to talk her out of it. We obviously let her talk out her feelings, and we were sympathetic, but she's got no reason to be jealous of you. You're a single guy, you can do whoever you want. It's not like you were cheating on her.\" Emily's bright tone of voice somehow didn't match the gravity of what she was saying.\n\n\"Sure, but that doesn't mean she still has to sleep with me,\" I countered. \"I don't blame her changing her mind.\"\n\n\"She really didn't change her mind, though,\" Emily said thoughtfully. \"She still really, really wants to. I just... well, Danielle overthinks everything. Remember, she's never had any experience with a random hookup.\n\n\"She's still in that high school mindset, thinking about it in terms of feelings, like does she like you, do you like her, will you someday be boyfriend and girlfriend, and so on. Sex is still a huge deal in her head. Which is not the right way to think about it. The right way to think about it is you're hard, she's wet, you both want it, the end.\"\n\n\"Please tell me she's not falling in love with me,\" I said cautiously.\n\n\"No. She's not. But part of her is telling herself that she should be feeling that way, and she should be treating this like you two are boyfriend and girlfriend already. Sex and love are the same, so if she wants one, she should be feeling the other.\" Emily shifted her position, and her robe fell open slightly. I couldn't see anything, but I was starting to suspect she wasn't wearing anything under it apart from the panties. \"How do you feel about Danielle?\"\n\n\"I really like her, and I think she's amazing, and smart, and beautiful, and I also recognize that when we're separating tomorrow and there's a fifteen-year age gap between us, there's no realistic chance of it being any more than a vacation fling,\" I answered.\n\n\"That's exactly how Lauren and I tried to tell her she needed to look at it when we talked last night,\" Emily said, smiling. \"Don't overthink it. Just do what feels right.\"\n\n\"Why did you come up here to tell me this?\" I asked.\n\n\"Because I wanted to find out if you felt the same way about her, and I wanted to tell you not to give up on my girl Danielle. I figured if you didn't know to keep after her, you'd stay away from her today. She'd never see you again, and she'd miss out on an experience that she really wants and needs to have.\" Emily smiled again, sweetly.\n\n\"You came to my cabin first thing in the morning to tell me to keep trying to shag your best friend?\" I asked incredulously.\n\n\"She needs to have sex with someone, and you're the one she likes. There's no accounting for taste, after all.\" Emily stuck out her tongue.\n\n\"Is she still mad at me? Did she listen to you and Lauren?\" I was having trouble processing this.\n\n\"She was never mad at you,\" Emily reassured. \"She was disappointed. She overthought it within an inch of her life, and she finally decided to have no-strings-attached sex for the first time ever. Getting to that point for a person like Danielle is a process. You've probably slept with tons of women in your life, right?\"\n\n\"I mean, I've never kept a list...\" I didn't know how to answer.\n\n\"Don't worry, I'm not judging. You're 35, never married, reasonably good-looking, and you know how to talk to women. I'm sure you've had sex with dozens of women, if not more. I'd be shocked if you hadn't. But this is Danielle's first time doing this, ever. You have to remember that.\"\n\n\"I do,\" I insisted. \"I've never pushed her into anything.\"\n\n\"She told me that,\" Emily smiled. \"She said you've let her ramble at you, never judged her, never pushed her, listened to her, supported and encouraged her, helped her to figure out stuff on her own. She said you were a really good guy, and Lauren's told me the same, and I've never seen anything to contradict that. Someday soon, once she has more experience, she'll realize it doesn't matter if the guy you're with has a history. But for now, she's just new at this.\"\n\n\"Do you think I should message her?\" I asked.\n\n\"Not yet. Leave it with me,\" Emily responded. \"I'll see how she's feeling this morning when she's up, and I'll update you later in the day. Sound good?\"\n\n\"Sounds good. Thank you for trying to hook me up.\"\n\nShe leaned over and hugged me. \"I'm not. I couldn't care less if you get laid. I care that my best friend gets laid, because that girl needs it so badly. She's the one who decided it should be you.\"\n\nWe sat eying each other for a moment.\n\n\"I miss Milos,\" she suddenly said, moping. She then lay down beside me in bed, pulling the covers up to her waist.\n\nI was surprised. \"That's an odd thing to say when you're lying in bed with someone else.\"\n\n\"We've been together since we were 16, Sean.\" Emily shot back. \"We almost broke up a year ago. I never told anyone that, until I told Danielle just the other day, when we had that long conversation.\n\n\"We love each other, and we wanted to stay together, but we both were feeling like we were missing out on dating other people. We were both each other's firsts, and we didn't want to be together for the rest of our lives without ever seeing what else was out there. So, we semi-opened our relationship. I'm not allowed to have sex with anyone else, and neither is he, but otherwise we have each other's permission to flirt with whomever we want.\"\n\n\"I know a few people in less traditional relationships around my age, but it's not common to be that comfortable with yourselves and each other in your early 20's. That's really cool.\" I was impressed.\n\n\"Thanks. He has a couple of girls in his life that he flirts with, and there's a girl in Australia he sometimes sexts that he knows from online. I don't want to know more than that, and I trust he's not going to do something I wouldn't be okay with. Me, I flirt like mad with anyone I'm attracted to, and sometimes I climb into bed with older men on a ship.\" She shrugged. \"It might not be conventional, but it works for us.\"\n\n\"That's really mature of you,\" I said. \"Danielle obviously didn't tell me.\"\n\n\"I don't think she got it,\" Emily said thoughtfully. \"She was convinced it meant I was cheating on him. I kept telling her it's impossible to cheat on him with his knowledge and permission. It's not the act of doing something sexual with another person that's cheating. It's lying about it. But she's too sheltered to really understand open relationships.\n\n\"I do have to say, though, that I'm glad I don't have to lie to her anymore about my relationship. I don't need for her to be like me. I only need her to accept me, and she always has, and I think she does about this too.\"\n\n\"You two really do seem to get each other,\" I observed.\n\n\"You already know how amazing she is,\" she gushed. \"Besides, even if she didn't get it, I'm sure she still told you I'm a huge flirt.\"\n\n\"She did,\" I confirmed, \"and I also have eyes of my own.\"\n\nEmily smirked. \"For the record, I'm not going to fuck you. Danielle wants you, and she can have you. But I'm comfortable enough from getting to know you over the past few days to know you're safe to flirt with, and that you're not going to push me past where I'm comfortable.\" She ran her fingertip up the lapel of her robe as she spoke, pulling it just enough to reveal another millimeter or two of boob.\n\nDamn, she is doing it on purpose. Well, two can play at that game.\n\n\"You know I wouldn't ever push anyone anywhere they didn't want to be pushed,\" I answered. \"But it's a little awkward wearing a bathrobe in bed, so I'm going to take it off.\" I made sure the covers were fully covering me below my waist, then pulled the robe off as Emily watched with interest.\n\n\"Are you wearing anything under there?\" she asked curiously.\n\n\"That's for me to know.\" I winked at her.\n\nShe thought for a moment, then wriggled down under the covers, up to her neck. Momentarily I saw her robe come out from underneath. She dropped it on the floor, then sat back up, keeping the covers anchored under her armpits and across her chest.\n\n\"You're right, this is better,\" she said innocently, clearly trying not to smile.\n\n\"So how was last night with Lauren?\" I asked.\n\nEmily finally broke into a huge, stupid grin. \"I'm glad you guys are our tablemates.\"\n\n\"That good, eh?\"\n\n\"I guess it makes sense, but a woman just knows instinctively what feels good,\" she explained. \"Don't get me wrong, Milos can play my body like a piano now, but he was a fumbling teenager once like any guy. It took time and a lot of coaching to get him to get him to the point where he can reliably get me off. Lauren just... knew.\" She shivered at the memory.\n\n\"I won't ask you to kiss and tell, particularly about my best friend, but I'm glad you had a good time.\" I felt around under the covers for her hand, squeezing it.\n\n\"Another item off the bucket list,\" she said happily.\n\n\"Will Milos be okay with it?\" I asked.\n\n\"I think so. I hope so. You know, I really didn't intend to go all the way with her. She's not the first girl I've ever flirted with. But Lauren...\" She trailed off, sighing. \"Milos always said jokingly that if I slept with a girl, it didn't count as cheating, because he'd find it too hot to think about being jealous. Lauren and I took a few naughty pictures for him last night. I hope he finds it as hot as he said.\"\n\n\"You've never cheated with a guy?\" I pressed, remembering what Danielle had told me the day before.\n\n\"Never,\" she answered. \"Flirted, gotten wound up, come within a hair's breadth of crossing a line? Sure. By some relationships' standards, we've cheated on each other, and it wouldn't surprise me if Danielle saw it that way. But not by ours. I stand by our record. We're getting to explore our sexualities, and we still have each other. He doesn't care who makes me horny, as long as I always come home to him when I want to do something about it.\"\n\n\"Very cool,\" I approved. \"Does it bother you knowing you'll never have sex with another man?\"\n\n\"I'm still young,\" she responded, \"and someday Milos and I will have a threesome, or a foursome. That's on my sexual bucket list, and he's mentioned he'd be interested too. So no, I'm not looking at it like I'm stuck with him. I love him, and I'm happy to be with him forever, but I somehow don't think I'll die as an old lady wondering what it's like to have another penis inside me. It'll happen at some point, with his knowledge and permission, and probably with him there participating.\"\n\nWe sat for a moment, feeling the ship's rocking motion.\n\n\"I was just thinking back to the good times I've had in this room,\" Emily finally started again.\n\n\"You'll never forget your first time with a girl?\" I asked with a smile.\n\n\"Yes; and playing that 'Last Time You' game sitting on this bed. Oh, my God, how hot was that?\" Emily exhaled.\n\n\"It was definitely one of the most sexually-charged rooms I've ever been in,\" I remembered. \"Were you disappointed in how it ended?\"\n\n\"A little,\" she answered. \"It felt like things were on the edge of getting out of control, and I wanted it to. But then, we stopped so suddenly. I was so unbelievably turned on, and I didn't get any release, and I think that's probably why I was so susceptible to Lauren's advances that night.\n\n\"I wasn't comfortable losing control around Liam, so it was the right decision. But that said, I've spent a lot of time since then thinking about what would have happened if he wasn't there and we'd kept playing.\"\n\n\"Thinking, or fantasizing?\" I asked.\n\n\"Both.\" She grinned.\n\n\"I have too,\" I said honestly. \"I'm pretty sure we would have kept going until we all wound up naked.\"\n\n\"For sure we would have,\" Emily agreed, \"and then we were all so turned on, we'd have had to have jerked off together.\"\n\n\"I'd believe it,\" I said. \"I could see it going that way. All six of us together.\"\n\nEmily sighed deeply. \"It's going to be a fantasy for the rest of my life, getting off staring three cocks and two pussies. It's too bad I never even got to see any dick. The boys got to see two topless women, while the girls got shafted.\"\n\n\"You saw three topless men, if I remember right,\" I pointed out. \"I'd call that even.\"\n\n\"Not the same at all,\" she said emphatically, laughing.\n\n\"Plus, I didn't see any pussy, and you've seen everyone's vagina who was in the room that day,\" I pointed out.\n\n\"I guess you're right!\" she said brightly. \"Though I've never really thought of Danielle in that way.\"\n\n\"No secret crushes?\" I asked.\n\n\"Never,\" she responded. \"She's more like a sister to me, though we're pretty open with things like nudity. She's beautiful, but I can't imagine being attracted to her, and I'd never fool around with her. Not that she would be down for that, either. She's very much a straight girl.\"\n\n\"Lauren and I are open with nudity like that, too,\" I mentioned.\n\n\"Lauren told me that,\" Emily said. \"It seems a little strange for opposite sex friends to have that relationship, but then again, I like girls too, and ogling the girls in the locker room doesn't seem weird to me.\"\n\n\"Is that hard for you?\" I asked.\n\n\"Sometimes it's wet for me,\" she responded drily. \"Not often. But it's happened.\"\n\n\"I bet. It'd be hard for me having to change in the women's locker room,\" I said thoughtfully.\n\n\"I'd be okay if you were hard in the women's locker room,\" she said, sighing. \"Oh! Not to change the subject, but I meant to ask you, can I see the scratches on your back?\"\n\nI groaned. \"Sure, I suppose.\"\n\nI rolled over in bed and Emily sat up, holding the blanket strategically over her chest. She looked at my back with interest, tracing Lena's patterns up and down. I suddenly felt the covers pull down over my ass.\n\n\"Hey!\"\n\n\"Can't you let a girl ogle your butt sometimes?\" she asked playfully. She gratuitously copped a feel of my butt. \"Nice scratches. Do you want to tell me what happened?\" She left her hand on my ass, gently stroking it.\n\n\"Do I have a choice?\" I asked.\n\n\"I'd really like to know. I won't tell Danielle, I promise. I'm just a huge pervert. I like hearing other people's sex stories.\" Emily smiled sweetly and turned her body as I rolled back over. She was now lying on her side, the blanket pulled down far enough to reveal cleavage, though no nipple.\n\n\"I'd have thought Lauren would have worn you out last night,\" I commented.\n\n\"She did,\" Emily confirmed. \"But that was last night. One week per month of my cycle, my libido is pretty much out of control. You met me during horny week.\"\n\n\"Lucky me.\" I proceeded to tell Emily all the dirty details about the bachelorette party that I'd held back the other night, including my night with Lena, and Oliver hooking up with Allison. I left out only the shameful hookup with Hannah I'd had last night. She listened in rapt attention as I tried to give her as much sexy detail as possible. It was official, I was now trying to turn her on.\n\n\"Super hot,\" Emily said once I'd finished. \"I'll never get to do stuff like that, but it's fun to live vicariously through other people's hookups.\"\n\n\"Does it bother you hearing about Oliver and Allison getting together?\" I asked. \"You seemed to like him.\"\n\n\"He's gorgeous,\" she responded, \"but no, I was never going to sleep with him. That would be crossing a line with Milos. It's just flirting. Same as you and I are doing right now. I'm glad he got laid. He's a good guy.\"\n\n\"I like flirting with you, but for all I know, you're testing me to report back to Danielle,\" I ventured carefully.\n\nEmily looked surprised. \"I hadn't even considered that,\" she responded finally. \"I mean, sure, if you tried to fuck me, I'd shut it down, and I'd definitely warn her. But I see you as a cute, safe guy to flirt with. You haven't done anything all week to make me think you were trying to hook up with me. You've been obviously focused on Danielle.\"\n\n\"I'm still really hopeful things can work out between Danielle and me\", I said, \"but regardless, I also don't want to do anything that Milos wouldn't approve of.\"\n\n\"I know, and I thank you.\" Emily leaned over and kissed me on the forehead. Once she'd kissed me, she rolled into me, and I felt her skinny, warm body curl into my arms. We lay there for a few minutes as I tried to ignore the feeling of Emily's naked breast pressing into my side, or her hands playing idly with my chest hair. I wrapped my arm around her, gently stroking the small of her back, occasionally letting my hand drift down to her small, firm butt. I wasn't sure where the line was with her, so I decided I was only going to touch her in places where she'd already touched me.\n\nEmily's phone eventually buzzed in her robe pocket on the floor. She sat up, nonchalantly revealing her topless body as she grabbed her phone out of her robe. \"Danielle and Lauren are up, and Lauren's on her way up here. I'm going to head down and shower,\" she reported.\n\n\"Thanks for coming up,\" I said gratefully. \"I appreciate your telling me what you did.\"\n\n\"If you want to seduce Danielle, the most important tip I can give you is not to give her a chance to think about it,\" Emily answered as I tried not to stare at her tits. \"If you can get her instinct to make the decision, then you'll get laid. If her brain makes the decision, she won't figure out that she still wants you until next Christmas.\"",
        "I nodded. \"Thank you. I really appreciate this.\"\n\n\"I'll message you once I know how she's feeling.\"\n\nEmily smiled sweetly, and then, before I could stop her, she rambunctiously bounded out of bed, taking the covers with her. She kept herself covered to the chest, but I was suddenly exposed. She turned and stared lasciviously at my dick, which wasn't fully hard, but had grown a fair bit.\n\n\"Hey!\" I bounded up, naked, and pulled on the loose end of the covers as she resisted. I had a tug-of-war with her for a moment as she started losing her grip, exposing her tits as she hooted with laughter. We kept that up for a moment before I remembered myself, let go of the blankets, and grabbed my robe off the floor, pulling it back on and cinching it at the waist.\n\nEmily made disappointed noises and dropped her end of the covers. She headed over, still topless, and grabbed her own robe off the floor. She threw it back over her shoulders, but left it open, her tiny breasts still hanging loose. I tried not to make my stare too obvious.\n\n\"This was fun,\" she said innocently. \"Thanks for flirting with me. Please don't be offended. I told you. I'm a pervert.\"\n\n\"We're not even anymore,\" I grumbled in mock indignation.\n\nEmily thought for a moment, then fully opened her robe and slid a hand into her panties. She quickly moved the gusset aside for a split second, exposing herself so quickly that I just saw a flash of her bare slit. \"Better?\" she asked slyly.\n\n\"Much better.\" I pulled her into me, hugging her. \"Thanks for telling me how Danielle is feeling. I would never have known.\"\n\n\"No problem,\" she answered. \"I'm glad Lauren's on her way up. I haven't had the best luck resisting temptation on this cruise, and I'm feeling some pretty strong temptation right now.\"\n\nShe quickly gave me a peck on the cheek, cinched her robe closed, and exited. I remade the bed then climbed back in, and a few moments later Lauren entered, still wearing the same formal dress as the night before.\n\n\"Good morning!\" she bounded energetically. \"I brought you some coffee.\"\n\nI eagerly accepted a steaming mug as Lauren quickly stripped out of her dress, then climbed into bed nude beside me with her own cup. \"I heard Danielle's side of it, but what happened to you last night?\"\n\nI quickly recounted my evening, leaving out nothing, including hooking up with Hannah after Danielle walked out on me.\n\n\"It's probably best if Danielle doesn't find that out,\" Lauren observed drily once I'd finished. \"But I probably would have done the same thing in your shoes. Lord knows I've had some shameful hookups in the past thanks to booze and hormones. I'm also proud of you, despite everything. Your confidence is definitely back, not that getting Hannah to suck your dick seems like it would have been much of a challenge.\"\n\n\"It wasn't,\" I responded, \"and I feel terrible about it. Last night it just beat jerking off after getting so wound up with Danielle.\"\n\n\"We've all been there,\" Lauren said sympathetically. \"I think Emily and I convinced Danielle you didn't do anything wrong. Did Emily update you on our conversation?\"\n\n\"She did,\" I responded.\n\n\"Good.\"\n\n\"We'll see what happens today,\" I continued. \"I'm not getting my hopes up about it, but it would be nice. I still really like her. Emily is going to message me when she knows more.\"\n\nWe sat in silence for a moment sipping our coffees.\n\n\"Speaking of Emily, how was round two?\" I asked.\n\n\"It was fun,\" Lauren responded. \"It was kind of like the first night, except Emily was less overwhelmed, more confident, less willing to lay back and let me take charge. She wanted to be an active partner this time, and it turns out she's a great fuck. Milos is lucky to have her. She's creative and energetic and really dirty-minded.\"\n\n\"And, how are you?\" I pressed.\n\n\"I'll talk later,\" she answered. \"I know I have to do that today. But not yet.\"\n\n\"I'll respect that.\"\n\n\"I know you will.\" She smiled. \"You know when to push me and when not to. Tonight, you might have to push me.\" She finished her coffee and set the cup down on the nightstand.\n\n\"I'll push you right now!\" I exclaimed, and I gently shoved her, playfully. She shrieked and attacked back, as the two of us started to playfight like energetic kids getting out excess energy. Lauren had always been strong for a woman, and I was a skinny guy, so while I was still stronger than she was, it was a fairer fight than one might think. It took some time, but I finally managed to pin her, holding both her arms above her head as I lay on top of her, pinning her torso as her legs kicked violently.\n\n\"You fucker!\"\n\nShe finally relaxed and stopped struggling, breathing hard, her face inches from mine. I suddenly realized my leg was pressed right between hers, and I became aware of rapidly growing damp heat on my thigh as my erection grew, hardening against her hip. Lauren suddenly moaned, quietly, gently.\n\nFuck! Abort! I quickly released her, and the two of us stared awkwardly at each other.\n\n\"Have you had a shower yet?\" she asked suddenly.\n\n\"No, have you?\"\n\n\"Yeah, in Emily's cabin.\" An awkward silence descended.\n\n\"I think I'll go have a shower,\" I said finally.\n\n\"Good idea. I'll be here.\"\n\nI turned and headed for the shower, turning it on and climbing in, trying not to think about what had just happened. I consciously forced myself to ignore my erection until it finally went away.\n\nI emerged back into the room in time, finding Lauren in a floral sarong covering her green and yellow bikini. She avoided watching me, seemingly deliberately, as I quickly threw on a bathing suit and a Hawaiian shirt.\n\n\"Any plans for today?\" she asked.\n\n\"None, apart from hoping Danielle still wants to hook up, and making you talk at some point.\" I smiled sweetly.\n\n\"I will.\"\n\n\"You?\"\n\n\"Allison invited us to lunch with her and Oliver,\" she said, reading from her phone. \"They've apparently decided to keep hooking up.\"\n\n\"Hannah and I kind of walked in on them last night,\" I admitted.\n\n\"Nice. What happened?\" Lauren smiled, expectantly.\n\n\"You were right, she does have nice tits.\"\n\n\"Told you.\"\n\nI pulled out my own phone, checking for messages for the first time that day. Lena had written to me earlier that morning:\n\nHey, sorry I missed your message last night. Brianna and I overdid it in the Dominican and went to bed early. I'd still love to see you at some point today.\n\nI read on to the next one, sent only a few minutes ago:\n\nHannah got you into bed last night, huh. She had been talking about it since Grand Turk, and usually she doesn't have any trouble convincing men to go along with what she wants.\n\nI wrote back: Yeah, it happened. She's very persuasive. I'm sorry.\n\nThe response came back quickly: You don't have to be sorry. Hannah is who she is, and I don't have any jealousy over you. We're total strangers who had a random vacation hookup. But if it comes down to it tonight, I hope you'd pick me over her.\n\nI absolutely would, no contest, I wrote. We had good chemistry together. &lt;3\n\nWe really did, she responded. And I might have bragged to the girls about how good you were a little bit yesterday... okay, maybe a lot. I was trying to make them all jealous, because I'm not usually the one telling hot stories about sexy boys. It was so much fun telling them all about the hung stranger that made me cum so easily. Hannah was already green with envy after she made a drunken fool of herself on scavenger night. She had wanted you then, so telling her what she missed out on was like throwing gasoline on a fire. I probably should have warned you.\n\nI'm not upset if you're not, I wrote.\n\nI knew what I was doing. Hannah might have been gasoline on a fire, but I was the one that doused her. I knew full well she was going to go straight to you with a book of matches in hand. But you boys are so predictable, she wrote. A guy would always light the match given the chance. \n\nI've avoided it before, I wrote. But yeah, not often.\n\nWe're going to spend the day by the pool, she wrote. Come find us if you'd like, stranger.\n\nSounds good, stranger. \n\n\"We have an invite to spend time at the pool with Lena, and I'm assuming some of the other sorority girls,\" I told Lauren.\n\n\"Sounds like it could be fun,\" she answered. \"So, does that mean you're giving up on Danielle?\"\n\n\"Not a chance,\" I responded. \"I wouldn't hook up with Hannah again, there wasn't much chemistry with her. I'm planning to leave that as a one-night stand. Lena, maybe, but I really like Danielle. I don't want to think of Lena as a consolation prize, but I would only sleep with her again if I knew Danielle wasn't an option.\"\n\n\"Listen to yourself, stud,\" Lauren shot back, her eyebrow raised. \"Trying to decide which of three beautiful women you're going to fuck today. You've come a long way over a six-day cruise, eh?\"\n\n\"I owe it all to you,\" I answered. \"I don't feel depressed anymore. But I'm still willing to play wingman for you and find a way to get you laid by some handsome man tonight, if you want the help. I owe you at least that much.\"\n\n\"It's not hard finding a man to fuck on my own, though I thank you for the offer,\" she answered. \"I don't honestly know why I haven't gone out and done it yet. But I'm not making any decisions now on what's going to happen tonight. Maybe I'll get myself laid by some strapping, big-dicked young stud after all.\"\n\n\"Do you want that?\" I asked.\n\n\"I don't know anymore, and I don't want to talk about it yet,\" she responded quickly. \"We have about an hour until lunch with Allison and Oliver. What do you want to do?\"\n\n\"I'm content just to sit here on the balcony and read for a bit,\" I said.\n\n\"Same. More coffee?\"\n\n\"Sure.\"\n\nLauren left, cups in hand, to head up to the Lido deck as I went out on the balcony, sat down in the patio chair, and pulled my book out. A few minutes later, Lauren returned, and the two of us sat silently in the late morning sun, engrossed in our reading, enjoying the quiet time together. It was our last day of warm weather and our last full day together before we parted ways, and I was determined, above all else, to enjoy her friendship today.\n\nI still had no speculation as to what was going on in her head, not that I ever really did. But I was still feeling like I owed her my time that evening, even if it came at the expense of a resolution with Danielle. If Lauren needed me today, I was going to be there for her.\n\nAfter an hour spent in total, blissed out silence, hunger pangs told me it was nearly lunchtime.\n\n\"Ready to head up?\" I asked.\n\nLauren stirred slightly; she'd apparently dozed off on the balcony. \"Sure,\" she finally said, groggily.\n\nWe made our way to the restaurant at the stern of the ship rather than to the Lido. While the buffet-style food was always available, one had the option of dining a la carte in the restaurant for brunch at no extra charge, and I was happy to give it a shot on our sea day. Our usual table was in the middle of the restaurant, but for lunch we were seated right at the ship's stern, able to look out the plate glass window at the impossibly blue sea foaming beneath us, churned up by the ship's wake several decks below.\n\nA few minutes after we entered, I saw Allison and Oliver approaching, holding hands. They were both dressed informally, he in a seersucker shirt and shorts, she in a see-through blouse over a bikini top and a loose, flowy skirt. As they sat down opposite us, I noticed a hickey on her neck that she had clearly tried to cover up with makeup.\n\nAfter making our greetings and placing our food orders with the waitress, Allison looked Lauren and me in the eye and began.\n\n\"I wanted to say thank you.\"\n\n\"You're welcome,\" Lauren and I said in unison. There was a pause.\n\n\"...Why?\" Lauren added.\n\n\"Because I was spending an expensive vacation in paradise sulking over being mistreated by my sister and her friends,\" Allison began. \"I wasn't having any fun. I was just counting down the days until it was over. But you lifted my spirits, and you made me stop feeling sorry for myself. You made me cheat my way into gaining my sister and her slutty friends' respect, if not their friendship. You made me remember to make my own fun on this cruise. And you introduced me to this guy here.\" She made puppy dog eyes at Oliver, who leaned over and kissed her on the forehead. \"I apparently needed a cruise fling. And look at him! He's way out of my league.\"\n\nOliver blushed. \"Oh, stop.\"\n\n\"It's true!\" she insisted.\n\n\"You are kind of gorgeous,\" Lauren observed.\n\nOliver turned even redder. \"I don't think of myself that way, but I appreciate the compliments nonetheless.\"\n\n\"We've met lots of new friends on this cruise that we're going to have to stay in touch with,\" I added.\n\n\"I heard,\" Allison said smugly. \"Two bachelorettes down, three to go, is it? Four if you count my whore sister.\"\n\nIt was my turn to blush. \"I don't like how Olivia and Andie treat you, so I wouldn't go there. I don't think I've even spoken to Brianna. As for you, I'm assuming that wasn't a proposition just now, given that you seem happy with this guy here. So no, I'm not thinking about it like that.\"\n\n\"I'm definitely good with Oliver here, and Brianna's a lesbian, so yeah, it was just an expression. But all I know is that Lena wouldn't shut up about how good you were in bed, so Hannah was determined to find out for herself,\" Allison giggled. \"Last night, after you were done with her, she came back to the room walking on air, and I got to hear all over again about your prowess.\" She turned to face Lauren. \"If you've never had the pleasure with Sean, I've got a couple of five-star Yelp reviews I could pass on.\"\n\nI rolled my eyes, then glanced at Lauren. It wasn't often I saw her off-guard, but something about that seemed to have struck a nerve as she looked away from me.\n\n\"Speaking of, sorry about walking in on you last night,\" I offered to the couple across the table, trying to change the subject.\n\nAllison and Oliver exchanged a knowing glance. \"Don't worry about it,\" she finally said. \"You wouldn't have known any better. I should have messaged Hannah telling her to stay out.\"\n\nWe just... kind of were in a hurry,\" Oliver added slyly. \"Sorry, not sorry.\" The two of them exchanged another deeply meaningful look, mutual lust in their eyes.\n\nJust then, our lunch was delivered, breaking up the moment.\n\n\"So, how's Liam?\" I asked as we dug in.\n\nOliver sighed. \"I'm finding him a little tough to take at the moment, and I've been happy having Allison as a distraction.\"\n\n\"Why's that?\" Lauren asked.\n\n\"Carnival ships kind of have a reputation as being floating parties,\" he began, \"and I think Liam went into this cruise thinking it was going to be easy to pick up chicks. As the cruise has gone on and he's struck out a few times with girls he's pursued, it's started to bother him that it hasn't worked out the way he expected. Plus, he knows Allison and I have gotten together, and he's heard Sean's gotten laid a couple of times, and all the girls in the bachelorette have hooked up at least once. Emily and Danielle have boyfriends, so they're kind of off limits, despite the way they were flirting with us. And Lauren, I'm not asking you to kiss and tell, but I'm assuming you would have gotten some by now if you wanted it.\"\n\n\"I've gotten laid this week, yeah,\" Lauren confirmed, without elaborating.\n\n\"And our tablemates at dinner are two honeymooning couples, which means they're fucking like rabbits every chance they get. So now every single person that he's met on the ship, male and female, has had sex since the cruise started, except him. It's bothering him, being surrounded by sex and not getting any himself, and as his entitled attitude gets worse, it makes it less and less likely that he's going to get any. Since I met Allison, I've mostly just been spending time with her.\"\n\n\"Why are you even friends with a guy like that?\" Lauren demanded.\n\nOliver sighed. \"He's a good friend and a good teammate. He's the captain of the lacrosse team. He's a born leader. The guys on the team would be willing to follow him into battle unconditionally.\"\n\n\"What happened to that Liam?\" Lauren continued.\n\n\"He...\" Oliver cleared his throat. \"His biggest character flaw is that he's a man's man. He has no sisters, no female friends. I think the only woman in his life is his mother, and they don't really get along. He doesn't see women as people, only as objects. I've told him before that all he needs to do is be himself, his true self, around women and he'd have a lot more success. To treat them like one of the boys. But he doesn't get it. I don't know if he ever will. He's never had a proper girlfriend who likes him for who he is.\n\n\"I like everything about him except the way he treats women, but this is the first time I've ever been one-on-one with him for this long, and I don't know if I would go on another holiday with him like this. He's definitely starting to get on my nerves.\"\n\n\"That guy just needs to get laid,\" I observed wryly.\n\nLauren punched me in the arm. \"Ow!\"\n\n\"He definitely didn't seem happy for Oliver that we got together,\" Allison continued. \"It was jealousy, or at least that was how I saw it. Plus, after we tallied the scores on scavenger night, Oliver and I left in each others' arms, Hannah was too drunk, you left with Lena, and my sister had that musician guy. He probably could have hooked up with Olivia without much effort, as long as he didn't mind risking getting an STD from the dirty bitch. She's not known for being picky, and Liam is still a good-looking guy. But I heard he tried to hit on the gay girl instead, and by the time Brianna had shot him down, Olivia had left.\"\n\n\"That was a fun night,\" I remembered.\n\nAllison blushed again. \"I've definitely never done anything like that before. Any of it. I had so much fun, even though I was terrified. I also heard all about that 'Last Time You' game you guys played together. I'm sorry I didn't know you then, it sounds like it was really hot. I don't know if I would have had the courage to join in, but I'd like to think I would have. I want to put myself out there more.\"\n\n\"So, when was the last time you had sex?\" Lauren deadpanned.\n\nAllison exchanged a knowing glance with Oliver. \"About... twenty-five minutes ago?\" she finally said, burying her face in her hands.\n\n\"Maybe thirty,\" Oliver added.\n\n\"Both of you lose clothing,\" I said solemnly. \"It's the rules.\"\n\n\"I don't want to get kicked out of the restaurant,\" Allison said fearfully, then realized I was joking. \"Sorry. This is still kind of new to me.\"\n\n\"It's too bad Liam kind of ruined the game,\" I continued.\n\n\"Is that what it was?\" Oliver asked, surprised. \"I should have guessed. It was escalating and escalating and then it just ended so suddenly.\"\n\n\"I would have kept going if Liam hadn't been there,\" Lauren confirmed, \"and Emily and Danielle said the same thing afterwards. He was just acting a little too creepy. Better to end with six terminal cases of blue balls than to go too far with someone you don't trust.\"\n\n\"Pity.\" Oliver looked disappointed. \"Have you seen Emily and Danielle since we played?\"\n\nLauren and I exchanged a glance. \"Yeah,\" I began, \"we're tablemates, so we see them every night, plus we've been hanging out a lot otherwise. They're great people. Danielle and I went on a hike together in Puerto Plata, and Emily and Lauren have been spending time together too.\"\n\n\"That's cool,\" Oliver said. \"If we had another couple of days on board, maybe we'd try something like that again, with Allison in place of Liam. But I don't think we're going to have much free time. I've got plans for her for the rest of the day.\"",
        "Allison looked away, embarrassed.\n\n\"I'm glad you could tear yourselves away from fucking long enough to have lunch with us,\" Lauren stated the obvious.\n\n\"Gotta replace those calories and keep hydrated,\" Allison mumbled sheepishly.\n\n\"It's obviously not going to be a long-term relationship,\" Oliver added. \"Oregon to Maryland is just way too long of a distance to be functional. But we're having fun while we can.\"\n\n\"I think having vacation flings has been good for everyone at this table,\" I said. \"I'm also really happy to have been the one to introduce you.\"\n\n\"Thanks, Sean,\" Allison and Oliver said together. They looked lustily at each other again.\n\n\"Should we let you get back to bed?\" Lauren asked, raising her eyebrow knowingly.\n\n\"I'm not used to having other people knowing when I'm having sex,\" Allison said sheepishly, still unable to meet Lauren's or my gaze. \"But whatever, it's cool. I already set a new personal best for most times getting it on in one day yesterday. Today we're trying to break the record. I'm going to be so sore tomorrow.\" I noticed her hand moving under the table, and Oliver's reaction indicated she was starting to touch him in a strategic area.\n\n\"Get a room,\" Lauren ordered, smiling.\n\n\"I think we will,\" Oliver said quickly, standing up. \"Thanks again, both of you.\"\n\nWe hugged to say goodbye, and then they were gone, disappearing in a hurry towards the elevator.\n\n\"They're so cute,\" I began. \"I've had weekends like that.\"\n\n\"Me too,\" Lauren agreed. \"It's that first onset of lust that just won't go away when you first get together with someone new. I miss having the kind of day where you have to keep pausing the movie you're trying to watch to have sex again.\"\n\nWe each pulled out our phones, and I saw a message from Emily that had arrived during lunch.\n\nI think it's going to be okay. Don't message her yet, but she's not nearly as upset. I'm in the cabin with her, listening to her trying to figure out how to get mentally back to where she was last night. Not as fun as sitting out by the pool, but whatever. I'll keep you posted.\n\nThanks for the update, I wrote back. Good luck.\n\n\"Is it cocktail o'clock?\" Lauren asked as I put my phone away.\n\n\"Sure. What would you like?\"\n\n\"Something tropical... maybe a mai tai.\" She licked her lips. \"Want to go check out the poolside bar, and see if we can find the Alpha Delta Pis?\"\n\n\"You read my mind,\" I answered.\n\nWe headed up to the top of the ship. It was a gorgeous summery day, mostly sunny with a few fluffy white clouds dotting the cobalt Caribbean sky. The sun was scorching down with early afternoon fury, but a light sea breeze kept it from feeling too oppressive. The pool deck was as crowded as I'd seen it so far on that cruise, with each cabana and chaise longue occupied. The pool was nearly full of adults floating around and a few rambunctious kids pinballing between them.\n\nWe ordered our drinks and then surveyed the scene. I spotted the five sorority girls, each in a revealing bikini, spread out over a couple of chaises longues and working on their tans. They hadn't noticed us yet, so I elbowed Lauren and pointed.\n\n\"Are you thinking this is going to be awkward, hanging out with two women you've banged in successive nights?\" she asked, eying them.\n\n\"I never had sex with Hannah,\" I answered, \"and based on messaging Lena earlier, no. She said they're shared men before.\"\n\n\"I would never, ever slut-shame another woman,\" Lauren asserted, \"and yet, girls with that level of wantonness put me to shame. Let's see what they're up to.\"\n\nWe headed over, and it was Lena who spotted us first.\n\n\"Sean!\" she called, bounding up and wrapping me in a hug. I knew her body intimately, and yet I was still surprised in the moment that she was even tinier than I'd remembered. She pulled back, smiling, and I glanced up and down her flawless caramel body, covered only by a hot pink string bikini that barely covered her private areas. She also wore oversized sunglasses and a straw sun hat.\n\n\"It's good to see you again, stranger,\" I said, smiling. \"You remember Lauren.\"\n\nThe two girls hugged briefly in greeting, and then she led me back to the group.\n\nHannah looked up first, making a sour face at us.\n\n\"So, you're the ones I have to thank for the fact I'm not allowed in my own cabin anymore,\" she grumbled. \"There's been a sock on the door all day long.\"\n\n\"How did you convince a handsome blond underwear model to sleep with my plain, boring sister?\" Andie added jealously.\n\n\"I don't think he's...\" I began.\n\n\"Enough\". Brianna spoke up, the first words I could remember her speaking. \"I've had it with this Mean Girls shit. Whatever issues you and Olivia have with Allison, I'm sick of hearing about it.\"\n\nAndie and Olivia exchanged a look, but they let the matter drop.\n\n\"I'm Sean, and this is Lauren,\" I held out a hand. I'd barely looked at her before, but she was just as pretty as the rest of them, with dirty blonde hair in a longer variant of a pixie cut. She filled out her navy and red bikini nicely, with smooth freckled skin and a toned, fit body. I noticed a rainbow necklace and a pink triangle tattoo, and I wondered to myself how on earth Liam hadn't realized she was a lesbian.\n\n\"Brianna,\" she said in return. \"I've heard great things about you.\"\n\n\"Yeah, you have,\" Hannah flashed a smile. \"Too bad you don't swing that way. He's worth switching sides for.\"\n\n\"I like her side!\" Lauren bubbled. Brianna raised her eyebrows, then moved her towel, motioning for Lauren to sit with her.\n\n\"Do you want to go for a swim?\" Lena asked me.\n\n\"Sure.\" I disrobed as Lena shed her hat, we grabbed our drinks, and we headed for the pool. It was crowded, but I found a small space on the edge with room for two, then hopped in, feeling instant relief from the oppressive heat of the sun. I was surprised to find the pool was fairly shallow, with the water only coming up to my chest. Lena quickly followed me in, and we stood together, cooling off, still hanging on to our plastic drink cups.\n\n\"How was your day yesterday?\" I asked her.\n\n\"It was good!\" she answered. \"Brianna and I went to the beach, did some tanning, got wasted, went to bed early. I hadn't gotten really drunk on this holiday before yesterday. It was fun.\"\n\n\"Were you hungover this morning?\" I asked.\n\n\"A little. I'm just powering through it.\" She indicated her drink, which appeared to be a mojito. \"I haven't partied like this since my sorority days. It's been fun letting loose.\"\n\n\"I bet. I've enjoyed it too.\"\n\n\"I heard,\" she said evenly. \"What else did you do yesterday, other than having Hannah suck your dick?\" I gave her a look, and she reached under the water and slapped my ass playfully. \"Don't look at me like that, stranger. You already know I'm not mad or jealous.\"\n\nI spent a few minutes telling her a PG-rated version of my day hiking with Danielle.\n\n\"Sounds like a good day,\" she said once I'd finished. \"And how was your evening?\"\n\n\"Hannah sucked my dick.\" I shrugged.\n\n\"Yeah, I heard all about that, plus I learned more about your oral skills from her than I did from when you actually went down on me.\" Lena smiled. \"Congratulations on being notch number 4,215 on Hannah's bedpost. You won't be surprised to hear she's already moved her attention on to another guy.\"\n\n\"Really?\" I asked, surprised.\n\n\"This is pretty typical for her, she gets bored easily,\" Lena said. \"Back in college, she tried to seduce everyone's boyfriend, but if it happened, it only ever happened once. She just wanted to know she could do it, to lure away anyone she wanted.\"\n\n\"That must have caused a ton of drama,\" I observed.\n\n\"It did. There were occasional screaming fights in the Alpha Delta Pi sorority house about her behaviour. We had to threaten to kick her out to make her leave other girls' boyfriends alone.\"\n\n\"But you're still friends with her,\" I pressed.\n\n\"Yep.\" Lena shot another look at the redhead. \"She's a bit of a ditz, but she's incredibly caring and sweet. She's so likeable. Girls can be cliquey, but she gets along with everyone, and everyone otherwise likes her. You had all those girls living together in a sorority house, and Hannah was the only one that completely avoided the petty cattiness that some women are famous for.\"\n\n\"And yet...\"\n\n\"I think she gets off on sleeping with guys who are taken. Once we threatened to kick her out, she stopped going after the boyfriends of other girls in the sorority, and that was really all we needed. I knew she'd try to seduce you after I bragged about banging you. I didn't care if she succeeded. You're not my boyfriend, after all.\"\n\n\"So, who's the new guy, out of curiosity?\" I asked.\n\n\"Andie and Hannah mentioned it just now. Allison's landed some insanely hot athlete, and he spent the night in her cabin with Hannah in the other bed. She apparently walked in on them fucking last night, and then she saw him in just a towel after he had a shower this morning, and that was enough. She was practically drooling talking about him at breakfast.\" Lena rolled her eyes.\n\n\"That must be Oliver,\" I said.\n\n\"That was his name! Oliver!\" Lena exclaimed. \"I don't know if she'll get him or not, he seemed really into Allison. But that's Hannah's fetish, so she's at least going to try.\"\n\nI shook my head. \"Weird. She's so far outside the kind of woman I'd normally be attracted to. I was never into Greek life in college. The idea of a frat or sorority party doesn't sound like a lot of fun to me, and the stuff that goes on there is a total mystery.\"\n\n\"It doesn't appeal to me anymore either,\" Lena admitted. \"I was into it back then. I had a couple of wild years. Partying, booze, drugs, bad sex with random frat boys. But I outgrew it. Somehow, I still made good enough grades to get into Stanford Law, and now studying is pretty much my life. There's a reason I don't have a boyfriend now; I wouldn't have the time for him.\n\n\"I've fallen back into that sorority mindset a little this week, hanging around with these girls again. I've kind of enjoyed it, though I don't do drugs anymore, and the random sex was surprisingly excellent.\" She grinned at me. \"But I'm already getting tired of some of the debauchery, because that's not who I am anymore. I'll be ready to go home after the wedding and start being a grown-up again. I'm sure you can tell which of us have grown up and which of us haven't since we were last all together.\"\n\n\"Brianna and you are grown-ups, Olivia and Hannah are still sorority girls, and Andie's turned into a stone-cold bitch,\" I guessed.\n\n\"Bingo. I'm chalking Andie's attitude up to Bridezilla Syndrome,\" Lena agreed, \"but it's still shocking how different she is from when I last hung out with her. If the old Andie doesn't come back after the wedding, I'm out. I don't need her negative presence in my life.\"\n\nShe pushed back from the edge, floating back on her back, getting her long black hair wet, and then swimming back to me, climbing into my arms and giving me a hug, legs wrapped around me under the water.\n\n\"So, what's the deal with Lauren?\" she asked, glancing over.\n\n\"What do you mean?\" I asked in return. \"I already mentioned she was my best friend.\"\n\n\"I mean...\" Lena trailed off. \"Have you really never noticed the way she looks at you?\"\n\n\"What do you mean?\" I asked again.\n\nLena paused, as though she'd found herself in a conversation she didn't want to be having. \"If I didn't know any better, I'd think she had a crush on you,\" she finally said, matter-of-factly.\n\n\"Are you serious?\" I asked.\n\n\"Yeah,\" she answered. \"I am. I don't know her well, or at all for that matter, but I know what a woman in love looks like.\"\n\n\"I don't think Lauren's in love with me,\" I said forcefully. \"There's too much history, too much between us, our friendship is too deep. If she was in love with me, she would have made a move years ago.\"\n\n\"You'd know,\" Lena said, clearly unconvinced. She glanced back up at the girls again, where Lauren and Brianna were having an animated conversation. \"I'm just telling you what I see.\"\n\nI thought back to the last week, to Lauren's dropping barriers around me, letting me see her cry, all the nudity. I thought back to literally everyone aboard the ship whom we'd met this week thinking Lauren and I were together. I thought back to the sexual moments we'd shared. Could I really be that dense? I asked myself. What if this is true? What if that's what's bothering her?\n\nI suddenly realized that several puzzle pieces from the past week, and indeed from many past years of our friendship, might fit together based upon Lena's observation, and I was seized immediately with panic. Oh, shit, I thought. I don't know how to deal with this.\n\nLena must have noticed, because she pulled me closer, putting her wet head on my shoulder. \"I didn't mean to scare you,\" she said soothingly. \"I'm sorry, it's really none of my business.\"\n\n\"It's okay,\" I lied. \"It's not your fault. I'll keep my eyes open going forward, and we'll see what the future brings.\"\n\n\"I'm probably wrong,\" she reassured, unconvincingly.\n\nJust then, a great booming voice came up from the pool deck. It was Trevor, the Cruise Director, an affable Australian whom I'd mostly tried to avoid since boarding the ship. The Cruise Director's job was essentially to emcee the shipboard activities and steer people towards having fun and spending money.\n\n\"It's the Hairiest Man competition! You should enter!\" Lena encouraged excitedly.\n\nI looked down at my body. While I wasn't exactly waxed smooth, I was less hairy than the average man, with hair only on my upper chest trailing down my stomach.\n\n\"You honestly think I stand a chance against guys like that?\" I nodded towards a massive Slavic-looking guy who was already getting out of the pool and heading in Trevor's direction, and who had enough back and chest hair to knit a sweater.\n\nLena shrugged. \"It's not as though the hairiest guy always actually wins. The winner is the one who entertains the crowd the best. The point is embarrassing the guys in front of an audience of drunk women.\"\n\nI shook my head. \"I'm not doing that.\"\n\n\"You're no fun. You know you'd have a built-in cheering section of six horny girls in bikinis, right?\" She squeezed her legs tighter around me for emphasis, grinding her mound against me under the water for a second.\n\nI looked back up at Trevor. He already had six guys beside him who'd immediately jumped at the chance, but he was calling out looking for two more contestants. I swallowed, downed the rest of my drink in one gulp, hoisted Lena easily up onto the pool deck, and then lifted myself out of the pool. \"Fine.\"\n\nLena smiled ear-to-ear. \"Go get 'em, tiger.\" She slapped my ass as I walked up to Trevor and volunteered. Fuck.\n\nIt took a few moments to get organized, including pulling three women out of the crowd to act as judges. One was a heavy middle-aged Black woman in a too-small bikini who was three sheets to the wind already, one was a younger sunburned woman in a one-piece who looked like she was seriously regretting agreeing to be a judge, and one was Hannah, because of course. She winked at me as Trevor made the introductions.\n\nI was at the end of the line, and I surveyed my competition as Trevor built up the crowd's enthusiasm with the practiced demeanour of a veteran game show host. The Slavic-looking guy -- Marko, apparently -- was easily the hairiest and fattest of all of us, but six of the eight contestants were either hairy and fat and guaranteed to get laughs, or muscular and smooth and guaranteed to get wolf whistles. The remaining two of us were a guy who looked at least seventy, and me, your average, run-of-the-mill guy in his thirties.\n\n\"I don't think we stand a chance,\" I whispered to the old guy.\n\n\"Speak for yourself, sonny,\" he shot back.\n\nI cursed under my breath as Trevor got to me.\n\n\"And last but not least, what's your name and where are you from?\" he asked.\n\n\"I'm Sean, from Toronto.\"\n\nThere was a huge uproar from my cheering section, led by Lena and Lauren, but I noticed even Andie and Olivia were making noise for me.\n\n\"Sean brought a fan club with him all the way from Toronto!\" Trevor preened. \"Good thinking! Was it all building up to this?\"\n\n\"I didn't know this contest was a thing until two minutes ago,\" I admitted.\n\n\"That works too!\"\n\nTrevor then explained the rules -- there were three rounds, where the first one we had to strut our stuff, dancing in front of an audience that -- Jesus, look at how much the audience had grown. People were clustered around all the railings watching us. The women judges would eliminate a couple of us, and then in the second round we'd all have to do a Tarzan yell. I might have a shot if I make it that far, I thought, thinking back to my college days when I worked as a voice-over announcer making low-budget radio commercials. I may not have been the most masculine man, but I've got a deep and powerful voice. Did I do a Tarzan commercial back then? I wondered. I couldn't remember.\n\nWith no further ado, the contest began. The first man up, an obese nerdy guy from England, strutted his stuff down the line, dancing up a shirtless storm without shame, before making it to the end where the three judges were sitting. The middle judge still looked like she wanted to be literally anywhere else, but Hannah and the middle-aged lady both got into it, slapping his ass as he danced provocatively around them.\n\nAnd so, the Hairiest Man competition's first round progressed. The crowd reacted positively to the guys with the lowest amount of shame on display, and booed the guys who seemed embarrassed, so as I sucked on another drink and watched the competition, I resolved to just go for it. The only way to really embarrass yourself here was to be too cool to try.\n\nFinally, it was my turn. I started slowly down the makeshift catwalk, dancing, trying hard not to be self-conscious, behaving like a ridiculous male stripper. I'd noticed a few of the women sitting along the catwalk had gotten handsy with previous contestants, and I made a point of dancing in front of each of them, allowing myself to be groped by several middle-aged women as I strutted. I could hear Lena's high-pitched girlish voice screaming itself hoarse above the crowd noise.\n\nI eventually made it to the judges, where I started with the Black woman, dancing around her, going close to lap dancing without actually making contact as she bounced in her seat, keeping rhythm with me and encouraging me in a heavy Jamaican accent. I mostly spared the embarrassed woman, only going through the motions with her. Then there was Hannah.\n\n\"Hey Sean!\" she called.\n\n\"Hi Hannah.\" I started dancing.\n\n\"Just like the first time we met!\" she remembered. \"It's your turn to give me a lap dance!\"\n\nI turned around and ground my ass into her lap as she cheered, pretending to ride me as the sorority girls shrieked their approval. I'd already noticed Hannah was clearly getting off on having the previous seven guys trying to seduce her in front of an enormous crowd. Her nipples were poking through her bikini, and her face and chest were flushed. I recognized the horny glint in her eye from last night.\n\nI danced in Hannah's lap for a few more moments before I felt her hand reach around and grab my crotch firmly and lasciviously.\n\n\"Hey!\" Trevor was all over it. \"That's crossing a line there, Hannah!\"\n\n\"He's cool with it!\" she insisted, leaving her hand in place.\n\n\"Even if he is, I don't want you getting us all arrested.\" Trevor quickly separated us and wrapped up the first round. I had to admit, he was quick on his feet.\n\nThe votes were tallied, and I was fourth of eight -- enough to make it to the second round. I'd had no illusions of winning, but I was still surprised to make it this far.",
        "For the second round, the remaining four of us were lined up, and while I don't normally talk myself up like this -- I nailed it. When it was my turn, I took a deep breath, and a Tarzan yell worthy of Weissmuller bellowed out of me. The crowd, easily hundreds strong by now, gave me more rapturous applause than I'd ever had in my life. Not counting public speaking for work, I hadn't been on a stage since playing in a shitty garage band as a teenager, and even then, this audience was easily ten times larger than the biggest group I'd ever performed in front of.\n\nAnd, with that, I was in the final, where the crowd voted on the winner of the trophy. For the first time, I honestly thought I might have a chance at winning, but at this point Trevor really played up the fact it was the Hairiest Man competition, and my co-finalist, the old guy, had a shag carpet on his chest and another on his back, plus his dancing had been shamelessly hilarious and his Tarzan yell had been second best to mine. The winner was determined by crowd noise, and to be honest, I'd have even voted for him. I wasn't shocked when Gary from Tucson was announced as the winner. I shook his hand graciously as he held his trophy aloft.\n\nLauren was waiting for me first when I got back to the girls.\n\n\"I have literally never been more attracted to you than I am right now,\" she said sarcastically.\n\nOrdinarily I'd have brushed it off, but Lena's observation earlier was still at the forefront of my mind, and I said nothing.\n\n\"Sean?\" She looked at me oddly. \"It was a joke.\"\n\n\"I know,\" I lied. \"Sorry. I was thinking of something else.\"\n\n\"You're going to be a celebrity tonight on the ship,\" Andie said brightly, patting me on the back. \"You did amazingly up there.\"\n\n\"Ugh.\"\n\n\"Let me buy you a drink.\" She headed off to the bar as I turned to Lena.\n\n\"This is the first time Andie's been nice to me,\" I observed. \"Apparently second prize in the Hairiest Man competition is what it took to earn her respect.\"\n\nLena giggled. \"You keep revealing all these hidden talents. Where did you learn to Tarzan yell like that?\"\n\n\"I did voice-overs years ago for radio commercials.\"\n\n\"I'd believe that,\" she cooed admiringly. \"You've got such a masculine voice.\"\n\nAndie returned with my drink. \"So, do you want some company tonight, Sean?\"\n\n\"Excuse me?\" I was taken aback.\n\n\"I've heard all about your... considerable talents from my Alpha sisters here,\" she continued. \"I feel like it's only fair that the bride-to-be has her turn.\"\n\n\"I'm not a ride at the fair,\" I insisted, offended. \"Plus, doesn't 'bride-to-be' imply that you're taken?\"\n\nAndie shrugged. \"I'm not married yet. My bachelorette's the last chance I've got to really let loose. And the princess gets what she wants.\"\n\nHer entitled attitude finally made me snap, and I got in her face, looking her right in the eye. \"I wouldn't sleep with you if you were the last woman on this ship! You've been nothing but a bitch to me since first meeting me, and now that you're finally desperate enough for one good fuck you think I'll just go along with it?\"\n\nAndie's face showed rising offense, and she started to say something, but I cut her off.\n\n\"I'm not fucking finished. I don't know what deep-rooted issues you and Allison have with each other, but I've gotten to know her over the past few days, and she's a lovely, caring, thoughtful person, unlike you. You treat the rest of your wedding party like they're your servants, not your friends. But really, none of that is any of my business. The only thing that's my business is that I'm not required to pretend to like you, and I'm not required to give you a good fuck just because your fianc\u00e9 isn't capable of it. Though judging by your attitude, you sure could use one.\"\n\nAndie reared back and slapped me. Her mouth was open in shocked indignation. Before I could react, Lauren was immediately in her face.\n\n\"Back off, you bitch,\" she fumed. \"Touch him again and you'll have two black eyes in all your wedding photos.\"\n\nAndie clearly thought about fighting for a moment before backing down.\n\n\"You're not worth the effort,\" she dismissed us. \"Come on, girls. We're leaving.\"\n\nThe group quickly started packing up, and Andie and Olivia stormed away, Hannah following close behind.\n\n\"Nice meeting you,\" Brianna said, apologetically, as she turned to follow.\n\n\"I guess I've gotta go,\" Lena added regretfully, watching her sisters depart the pool. \"It's been a long time since someone's put Andie in her place. Hopefully something you said got through to her. I'll message you later.\" She quickly kissed me on the lips, and then hurried after her sorority sisters.\n\n\"Nice one, Tarzan,\" a random guy nearby called out to me.\n\n\"What a cunt,\" Lauren said, still seething with anger. \"I don't use that word lightly. But that cunt deserves it. No one treats my Sean like that.\"\n\nWe sat down in the vacated chaises longues, both cooling off for a few minutes.\n\n\"Thanks,\" I finally said. \"I wasn't about to hit a girl.\"\n\n\"I would have. It's been years since I've been in a real fight,\" Lauren said wistfully. \"I could have taken her.\"\n\n\"No doubt,\" I agreed.\n\n\"Did she hurt you?\" Lauren regarded my cheek with concern.\n\n\"I'm fine,\" I said honestly. \"It stings a little, but she didn't hit that hard.\"\n\n\"I'm guessing that's the last we'll see of them,\" Lauren mused.\n\n\"Probably,\" I agreed. \"Were you hitting it off with Brianna?\"\n\n\"Meh. She's nice, she's pretty, but there was no spark.\" Lauren stretched out on the chaise longue, adjusting her sunglasses. \"Do you want to stay here for a bit? We seem to have found a seat.\"\n\n\"Sure.\"\n\nFor the next couple of hours, we tanned and occasionally swam in the pool, enjoying the sun, the drinks, the music, and for me, the newfound fame. Women kept approaching me for selfies, to talk to me about the competition, and so on. I saw Gary, the champion, similarly fending off attention from Hairiest Men groupies across the pool deck, and I reflected on how weird and unlikely this entire situation was.\n\nLate in the afternoon, Lauren and I retired to our cabin for a rest before dinner. She showered first, then me, and I emerged into the room to find her nude, laying in bed, on her phone. I'd gotten so used to her being naked that it barely registered.\n\n\"I have to ask if you'd like to deal with your mental state now,\" I said cautiously.\n\n\"Not yet,\" she said definitively.\n\n\"When should I stop taking no for an answer?\" I asked.\n\n\"Tonight. I'll deal with it before bed.\" She turned her attention back to her phone.\n\nI picked up my phone and saw there were a couple of notifications. The first was from Lena:\n\nYou've pissed Andie pissed off pretty good, stranger. She's forbidden any of us from seeing you again. I'm a grown woman, and she can't tell me what to do, but I can't let this turn into a major fight this close to the wedding, so I have to go along with it to keep the peace. I'm really disappointed I won't get to see you again later, but hey, your fantasy was sex with a total stranger. I guess it wouldn't count as satisfying your fantasy if we hooked up again tonight, much as I'd still like to.\n\nI guess not, I responded. But I would have happily done it anyway. it would have been fun. I understand though. Hoes before bros.\n\nExactly, she responded immediately. The wedding is this weekend, and then I'm flying back to Palo Alto on Monday. I probably won't ever see you again, and it's not like I have a place in my busy law student life for a boyfriend anyway, but since you've got my number, you're welcome to sext me sometime if you want. Orgasms are a great study break.\n\nI laughed. You've got a deal, stranger. I'd love to help you relieve some of that stress. It was a pleasure, and it'll be a pleasure again soon. \n\n\"Andie's not letting her flock see us again,\" I told Lauren. \"I'm honestly okay with that, because I wouldn't have known how to let Lena down gently if Danielle still wants to hook up.\"\n\n\"Have you heard from her?\" Lauren asked.\n\nI looked back at my phone. There was a recent message from Emily: Danielle wants to talk to you before dinner. Can you meet her in the Serenity Lounge at 7:45?\n\nSure, I wrote back. Is she okay?\n\nI think so, Emily wrote. It's not a shoo-in, but I think if you can have a good conversation with her, and if you don't say anything stupid, you'll be good.\n\nI really appreciate all your help, I wrote.\n\nI'm not helping you, I'm helping her, Emily responded. I wouldn't be doing this if I didn't think that deep down, this was still what she wanted. Plus, I've never seen her acting horny like she has been this week. She needs to get laid so badly, and I've heard you're pretty good at it.\n\nWhere did you hear that? I asked, immediately wondering what she knew about my shipboard adventures.\n\nLauren told me a few things, she responded. Not that she's ever had the pleasure, but she said she overheard you having sex many times when you lived together, and she can tell when a girl isn't faking it. \n\nShe had nothing but good things to say about you in bed too, I responded.\n\nI'm really surprised and happy to hear that, she answered. I wouldn't have expected to be any good my first two times with a girl. I'm glad she was satisfied. If I ever sleep with another girl someday, she'll have to be pretty good to top my first time. Lauren knows her way around a vagina.\n\nWe both do, I wrote back before I could stop myself.\n\nGood. Take your vagina-pleasing skills and go use them on Danielle. I hope she gets out of her own way enough to let you.\n\nThank you so much, I wrote.\n\nEmily messaged back a little pink heart.\n\n\"I think it's on with Danielle,\" I announced, and I briefly recounted the conversation to Lauren.\n\n\"Yay!\" she answered, smiling. \"I know how much you wanted this. It'll be good for you to have sex that's a little more meaningful. Not that that's any disrespect to Lena.\"\n\nJust then, another message came in, from Allison:\n\nFirst you introduced me to Oliver, and now I hear you put my sister in her place! You're my hero.\n\nI laughed and showed the message to Lauren, who cackled.\n\nI turned back to my phone. Someone had to, I wrote. It's good for her to have someone call her out.\n\nI call her out all the time, Allison responded, but she doesn't listen to me. Maybe you'll get through to her.\n\nI hope so, I said. I should warn you, too. I heard Hannah is going to try to seduce Oliver.\n\nI know what she's like, Allison responded. Besides, she's already tried. I'll spare you the details, but suffice to say, he turned her down.\n\nOK, good, I responded.\n\nI'm not sure he could get it up again even if he was into that skank, Allison continued. I've kind of worn him out!\n\nI'm happy for you both, I wrote. How's the world record attempt going?\n\nWe beat it about an hour ago! she wrote. He's taking a nap before dinner and then we'll try for number eight. I might have to do all the work, though. The poor varsity athlete is all tuckered out because he couldn't keep up with a chubby girl from Baltimore.\n\nI've never managed eight times in a day, I wrote. I think my record is six. Men have refractory periods after we cum. A woman in heat is insatiable when she really gets going. \n\nI know, she answered. Such a shame. And insatiable is a good way to describe how I'm feeling. All the stress and frustration over the wedding is being fucked out of me.\n\nIt's nice hearing you talk more openly about it, considering how hard you said that was for you, I observed.\n\nIt's still hard for me. But I'm trying, she responded. It's easier over text than in person. I want to be more open and less walled-off. Starting to talk frankly to people like you and Lauren is a good start. I don't think you'll judge me, and even if you do, I'll never see you again after tomorrow anyway.\n\n\"Are you messaging Allison right now?\" I asked Lauren, who was engrossed in her phone.\n\n\"Yep,\" she answered without looking up. \"From her descriptions, I'm really starting to be regretful I didn't hook up with Oliver when I might have had the chance.\" She fanned her brow ostentatiously. \"Remind me in the future not to judge a book by its cover. Just because he's young and hot and doesn't have to work for female attention apparently doesn't mean he's never learned how a clitoris works.\"\n\n\"I'm not getting that level of detail,\" I complained.\n\n\"She's reserved, Sean. You're not going to get her to girl talk with a guy she just met.\" Lauren leaned in. \"Besides, do you really need to know what sucking his dick is like?\"\n\n\"Probably not,\" I laughed. \"Do you?\"\n\n\"It's fun hearing about it. I want to hear all the details about Danielle tonight, too.\" She grinned. \"My favourite thing on this whole cruise has been cuddling naked in that wonderful post-orgasmic glow before falling asleep in your arms. I'm not giving that up on the last night. Not when I've missed out the last two nights in a row, and not when we're splitting up again tomorrow.\"\n\nI felt momentary panic hearing her verbalize it in those terms, but I swallowed hard and let it pass. I'll deal with that later, I thought. We're not going to bed tonight until we get to the bottom of this. \n\n\"OK, I'm heading up to meet Danielle,\" I said, ignoring Lauren. \"See you at dinner.\"\n\n\"I'm going to get dressed and go to the bar,\" she answered. \"I could use a little time to myself.\" She rolled into me and wrapped me in a deep, long, skin-on-skin hug, which I returned without enthusiasm.\n\nI got up and got dressed in my second-to-last clean remaining outfit, a bright purple polo shirt with khaki shorts, combed my hair, brushed my teeth, and then headed out.\n\nThe Serenity Lounge was the adults-only section of the ship where we'd flirted as a foursome the night before. I arrived a little early, checking the private loungers until I found a free one. I then pulled out my phone and messaged Danielle, I'm here. Lounger in the starboard corner by the railing.\n\nA few minutes passed, and then, suddenly, there she was. She looked so beautiful, her brown hair pulled back in a simple ponytail, her face radiant in the late evening sunset. Her eyes weren't angry or upset, but rather guarded. She was dressed in ultra-short jean cut-offs and a sheer black blouse through which you could almost, just, maybe make out the hint of her nipples unrestrained by a bra. She climbed into the lounger where I lay, but sat, cross-legged, far enough away from me that we were still physically distant.\n\n\"I'm sorry,\" I began.\n\n\"You don't have to be,\" she answered quietly.\n\n\"Will you talk to me?\" I asked.\n\nShe nodded. \"Last night, when I left your cabin, I was so upset. With you, with myself, with the situation. I felt hurt, betrayed, angry. I knew Lauren and Emily were hooking up in our cabin, so I just went down to the third deck, the outside part where all the lifeboats are stored. It's always really quiet down there, so I just sat there on the deck by myself for over an hour. I cried a little. I was trying to sort through what I was feeling, and where I ended up was that I never wanted to see you again.\"\n\n\"I'm glad that you didn't hold to that,\" I interrupted.\n\nShe ignored me and continued. \"Then, I got the all clear from Emily, and as soon as I told her and Lauren what happened, they both started trying to talk some sense into me. Emily's always been good at keeping her head while I'm losing mine, and she told me that it was stupid to be upset over you. Whether or not I ever saw you again didn't matter, but you're not worth being upset over, because this was never going to be more than a vacation fling. If it didn't work out, just forget it and move on.\"\n\n\"You're still entitled to your feelings, even if they're irrational, and I'm not saying yours were,\" I commented.\n\n\"Thanks, and I know,\" she answered. \"But I figured out laying awake last night what it was I was really upset with. It was half with you, and half with me.\"\n\n\"Which half do you want to talk about first?\" I asked.\n\n\"Me,\" she responded. \"It's my guilt complex. When I saw those scratches on your back, it felt like you had cheated on me. But, of course, that's ridiculous. We aren't in a relationship, and we're never going to be. This is casual. I know what casual means, even if I've never had it. You didn't break any rules. But, the repressed guilt over my cheating, the guilt which I've been holding back since I met you, it all blew up while I was standing naked on your balcony. It was projected on you last night, but deep down, it was about me.\n\n\"This cruise, already, I've flirted with a couple of other boys. I've made out with you. I've seen you naked, and I let you see me naked. I let you touch my pussy. I had an orgasm on the beach at Half Moon Cay while staring at your dick. All of that while Andre and I are still technically together. You can reassure me all you like that it's not cheating when I'm planning to break up with him. I don't care, it's still cheating. He's still my boyfriend.\"\n\n\"I wasn't going to try to convince you otherwise,\" I said. \"It's technically true.\"\n\n\"Emily said the same. She said it didn't matter.\"\n\n\"Does it?\" I asked.\n\nDanielle sighed again. \"I don't know, Sean. I'm still so confused.\"\n\n\"Are you still planning to break up with Andre?\" I asked.\n\n\"100%, yes,\" she said with certainty.\n\n\"Then I don't think it matters either,\" I said. \"If you cheat on someone you love and are planning to stay with, that's one thing. But you've already mentally ended things, you just haven't had the opportunity to tell him. Even if you could get a cell signal, it's not fair to do that to him by distance. You need a face-to-face.\"\n\n\"Of course. I wouldn't dare do it any other way but in person. I owe that to him,\" she agreed quickly.\n\n\"And would you have broken up with him already if you were home?\" I pressed.\n\n\"I think so,\" she responded. \"I wouldn't have rushed into it, and I wouldn't have done it if there was any other major thing going on in his life, but otherwise, yeah, I would have.\"\n\n\"Then you're already broken up. He just doesn't know it yet.\"\n\n\"I guess.\" Danielle was unconvinced.\n\n\"You told me in the hot tub on the first night that you want to have some time for you. You want to discover yourself. You want to figure out who you are as an independent woman. And you want to have a bunch of sex,\" I pointed out.\n\nDanielle giggled. \"Yeah, that's true. Figure out who I am before I settle down.\"\n\n\"You can't do any of that and stay with Andre, so what does it matter if you start the process a week before you make it official?\"\n\n\"Emily said the same thing,\" Danielle grumbled. \"You're probably both right.\"\n\n\"Not only that, but you already have started the process,\" I pushed. \"You're doing things that the old Danielle never would have done. Think back to all that's happened this week. You're living more independently than you were even a week ago. I can see it clearly, so I'm sure you can. Your decision was made in the hot tub, and you've already moved forward.\"\n\nDanielle stayed silent for a long time. \"You're right,\" she finally said. \"I'm feeling guilty over living the life I've been wanting to live, over putting myself first. I've never put myself or my own needs first. It's always been about what others want or expect from me.\n\n\"This week, for the first time ever, I've put myself first, the way I always should have been. The guilt is something inside me trying to tell myself I'm wrong for doing that. I still can't believe you're not a therapist.\"",
        "I extended my arms to her, and she thought for a moment, then tentatively curled up, snuggling into me and finally squeezing me tightly.\n\n\"Thank you,\" she whispered.\n\n\"My pleasure,\" I responded, breathing in deeply. We lay together for a few minutes, where all I was conscious of was the warmth of her body, her intoxicating scent, her shallow breathing.\n\n\"Shall we talk about the half of it that's about me?\" I finally asked.\n\n\"Yeah,\" she said.\n\n\"What is it?\"\n\nShe sighed. \"I think I figured out that my anger was mostly projection, and I'm not mad at you anymore. Do you want to know what else I felt when I saw those scratches, other than guilt?\"\n\nI nodded.\n\nDanielle looked embarrassed. \"I was jealous.\"\n\n\"Of me?\"\n\n\"Of the other girl.\" She gritted her teeth. \"Here I've been thinking for months about figuring out a new life, to a new me. I met you on this cruise, and in typical Danielle fashion, it took me five days to figure out that I wanted you, and that I was okay with having you. In the meantime, you clearly hadn't been waiting for me. I overthink everything, and while I was overthinking, you were fucking someone that wasn't me, when it should have been me all along. I can't be upset at you for sleeping with someone else when I wasn't allowing myself to be an option for you.\"\n\n\"I wasn't going to try to tempt you into cheating on your boyfriend,\" I pointed out. \"I liked you from day one, but I was treating you like you were off-limits. Everything we did up to yesterday, you were always the instigator.\"\n\n\"I know I was, and I appreciate that, Sean,\" she said. \"I haven't ever seen any sign from you that you weren't going to respect my relationship. You're a good man.\"\n\n\"Thank you.\"\n\n\"It's the last night of the cruise,\" she continued, \"and as of right now, I haven't decided if I'm going to sleep with you tonight or not. I want to, but I was also really hurt last night, and I needed this conversation right here. I needed to talk to you to figure out what to think.\n\n\"But last night, in your room, I had decided to do it. I had thought about it all day. I needed to fuck you. I was so wound up, so ready. I've never been surer of anything sexual in my life, not even the decision to lose my virginity to Andre. And when I finally was about to, some other girl, some girl who probably doesn't overthink anything, some girl capable of making a split-second decision about what she wants, had beaten me there. In that moment, I'd have given anything to be her, instead of me. I was so mad at myself for having taken so long to decide what I wanted, when if I'd listened to my instincts, I knew what I wanted the moment I kissed you in that hot tub.\n\n\"And now it's the end of the cruise, and I still haven't gotten what I want. If we do sleep together tonight, and I'm not saying we will, but if we do and it goes well, do you know what I'm going to be thinking all the way home?\"\n\n\"What?\"\n\n\"I'm going to be furious with myself for waiting until the last night, and only getting to do it with you once. What's held me back? Why didn't I fuck you on the beach at Half Moon Cay when I wanted to so badly? Why did I spend the entire strip game in your cabin worrying that I might lose, instead of enjoying it? Why didn't I follow through with fucking you on Grand Turk day when I'd thought about it all day? Why didn't I let you take me on the hiking trail yesterday? You wouldn't have had the option of sleeping with anyone else if I'd done what I wanted from the start, because I'd have fucked you so often, and so hard, that you wouldn't have needed to.\n\n\"I miss so many opportunities. It's the story of my life. And I need to change that, starting immediately.\" The frustration was evident in her tone of voice.\n\n\"What can I do?\" I asked. \"What do you need?\"\n\nShe took another long pause. \"I need to ask you something, and I need you to tell me the truth.\"\n\n\"Sure,\" I said.\n\n\"Promise me, Sean,\" she pleaded.\n\n\"I promise.\"\n\nShe locked her brown eyes onto mine. \"Who else have you slept with on this cruise? Was it just one girl, one time, or was there more?\"\n\nI knew in that moment that there was no getting out of it -- I had to be honest with her and let the chips fall where they fell. \"I'll tell you, but are you sure you want to know?\"\n\nShe nodded. \"I need to know. Tell me everything.\"\n\nWith that, I told her everything. I told her about the awkward foursome with Tom and Jill. I told her about accidentally spying on Emily and Lauren. I told her about the bachelorette scavenger hunt. I told her about Hannah and Lena competing for my attention, and Lena winning the battle when Hannah was too drunk to perform. I told her about the night with Lena, and her being responsible for the scratches. I told her about hooking Allison up with Oliver, and the two of them nearly putting on a live sex show in our cabin. And I told her about the mutual oral sex with Hannah the night before, after Danielle had walked out on me. It took at least ten minutes to recount everything, during which Danielle lay still, silently, not making eye contact, just listening, taking it all in.\n\nThe only thing I left out were the occasional moments with Lauren over the past week, because I still wasn't ready to think about what they might have meant.\n\nWhen I finally finished, Danielle looked up at me. \"Thank you for telling me the truth.\"\n\nWe lay silent for a few minutes as I let her process what she'd heard.\n\n\"Are you okay?\" I finally asked.\n\n\"If you were my boyfriend, I'd be so mad at you right now,\" she said, choking up as she spat the words out. I noticed tears welling up in her eyes.\n\nI waited, holding her close.\n\n\"But you're not my boyfriend. We never agreed to be exclusive. We're not even dating.\"\n\nI still waited.\n\n\"I want a do-over, Sean.\"\n\n\"What do you mean?\"\n\n\"I want to go back to Fort Lauderdale a week ago,\" she said, the words coming out as she had the thoughts. \"I want to have the cruise you just had. You've been living the life I've been dreaming about.\n\n\"I want the week you just had, only with men. I want to do it with you, in your cabin and in mine, in the shower, in that hot tub, on the beach at Half Moon Cay. I want to do it with Stephen, the guy I was flirting with in Grand Turk. Hell, I even want to go back and fuck Liam that first night, if only so I can have something to regret.\" She laughed bitterly. \"I've never even had bad sex. Every woman's had bad sex!\"\n\n\"I think it's important to recognize and reflect on the choices we wish we'd made throughout life,\" I mused. \"I think it's important to learn from them. When I was 23, I would have made similar choices, just like you made on this trip. I was a lot like you back then. I lost my virginity late, and I didn't have a real girlfriend until I was in university. Age and experience make it easier. Just... grow as a person and try to do better next time. It's all anyone can ever do.\"\n\nShe nodded. The tears had stopped.\n\n\"How are you feeling?\" I asked.\n\n\"I'm so angry at myself,\" she began. \"I'm so jealous of you. I'm so jealous of Lena. It should have been me leaving those scratches on your back.\"\n\n\"What else?\"\n\n\"I'm so turned on right now,\" she admitted. \"I don't know why hearing about your adventures did that to me. Maybe it was finally admitting to myself what I wanted as we've been lying here. But I'm horny as fuck all of a sudden.\"\n\n\"Were you imagining it was you in the other women's places as I was telling you about it all?\" I asked.\n\nShe nodded, embarrassed. \"Is that bad?\"\n\n\"I think it's hot,\" I said honestly.\n\n\"I've never felt my libido as out of control as it has been this week, not ever,\" she said, clearly agitated. \"I need to have sex so badly.\"\n\nI leaned in to kiss her, pausing briefly as though to ask permission. She moved up and kissed me back, aggressively, open-mouthed, desperately.\n\nWe made out vigorously for a few minutes, wrestling for position in the lounger. Her body was burning up, her kisses full of passion. I let my hands roam her body freely, running my fingers through her hair, playing with the back of her neck, holding the small of her back, pulling her ass closer to me, gently massaging her breasts through her top. Her hands roamed over me, drinking me in, touching my neck, hair, back, ass. She maneuvered my leg so that it was between hers, and she started rocking her hips on me, gently grinding the burning warm spot between her legs on my thigh as she kissed me.\n\nWe kissed like that for quite some time, the unspoken rules of decorum in a semi-public place the only thing holding us back. My hand was now permanently up her shirt cupping her braless breasts, tweaking her hardened nipples, as we ground our crotches together searching for relief of the incredible tension that we were both feeling.\n\nFinally, at some length, she pulled back, her eyes wild with desire. \"I've been thinking about fucking you in this lounger since yesterday, when the four of us were here together,\" she admitted. \"It's so dangerous, but I don't think the cameras can see us here.\"\n\n\"I'm proud of you, Miss Exhibitionist,\" I commented. \"I noticed your choice of blouse, too.\" I ran my fingertip over her erect nipple as she sighed with pleasure.\n\n\"I've never worn this top without a bra,\" she admitted. \"I've had it on all day. It feels so naughty.\"\n\n\"Did you get a lot of stares?\" I asked.\n\nDanielle nodded, unable to speak.\n\n\"Did being stared at turn you on?\" I asked.\n\nShe nodded again, blushing.\n\n\"Are you wearing panties?\" I asked.\n\n\"You should check,\" she whispered.\n\nI slid my hand up her inner thigh, feeling growing heat as I neared her core. Her cut-offs were so short that I was able to slide a finger easily up the leg opening, where I confirmed that she wasn't wearing panties. I slid the damp denim out of my way, and she sucked in her breath as I gently rubbed her outer labia, feeling her smooth, wet folds moving under my fingertips as I gently touched her.\n\n\"Touch my clit,\" she begged after a moment.\n\n\"Not yet,\" I answered smiling.\n\nShe groaned in frustration. \"Don't make me wait. Do you have any idea how long I've been waiting to get off again?\"\n\n\"Since Half Moon Cay?\" I asked.\n\n\"Yes,\" she pouted. \"I almost got there in the shower yesterday morning, but Emily walked in on me just before I finished. I had to stop.\"\n\n\"I'm sure she wouldn't have minded watching,\" I said.\n\n\"I'm sure she wouldn't have,\" Danielle agreed. \"But I'm not quite comfortable with that yet. I'd let you watch me. Just not another girl.\"\n\nJust then, I decided to touch her clit, finding the firm, erect button at the top of her opening, and she moaned under her breath as I locked onto it and started gently rubbing.\n\n\"Fuck...\" she breathed, squirming as I touched her. \"Do you think we could get away with having sex here?\"\n\n\"Do you want to try?\" I asked.\n\nDanielle rolled into me, reached down, and felt the hardness between my legs with her hand for the first time. She smiled to herself as she rubbed me through my shorts. \"I should say no, but I'm too turned on to care if we get caught. The danger is so unbelievably hot.\"\n\n\"Wait here,\" I ordered, shifting my erection to make it less obvious when I stood up. Danielle lay back, glassy-eyed, legs spread, unable to keep still. With her laying spread-eagled, I noticed her cut-offs were so short I could see her bare vulva up her leg. The crotch of her shorts was soaked.\n\nI quickly surveyed the situation. The identical crescent-shaped loungers were all closed off to the ship's deck by their semi-circular rooves, and open only to the sea. The deck was empty except for a few people in the hot tub and a bartender back under an awning. No one was paying us any attention. I headed nonchalantly over to the tub, grabbed a couple of blue ship's towels from a large, neatly-folded pile, and brought them back to Danielle.\n\n\"Coast is clear,\" I reported, curling back into her from behind in the spooning position and pressing my erection against her ass. She cooed with pleasure, grinding against me, taking me by the hand and placing it back on her breast.\n\n\"I can't believe I'm about to do this,\" she said, wild-eyed, her hair dangling in her flushed face.\n\n\"Are you ready?\" I asked.\n\nShe licked her lips, saying nothing, but her eyes were screaming yes.\n\nI covered up our respective crotches with the towels, then I unzipped my shorts, pulling my cock out as Danielle shimmied out of her cut-offs. I reached down between her legs from behind, tracing a line down her butt crack until I found the wet spot. I then slid my cock into her thigh gap. Danielle arched her back, presenting herself to me. The head of my dick found her sopping wet opening, and I coated myself with her juices, then slowly slid into her.\n\n\"Holy fuck,\" she breathed as I bottomed out inside her. \"Stop for a second.\"\n\n\"Are you okay?\" I asked.\n\n\"You're just bigger than I'm used to,\" she answered. \"I need a second to adjust.\"\n\n\"Take your time.\" I lay, unmoving, feeling completely sheathed by her tight, boiling vagina.\n\n\"OK, go slow,\" she finally said. I started slowly moving my hips as she moved against me, breathing hard, seemingly trying not to make noise. I felt Danielle's legs spread slightly and her hand snake its way down between them, then I felt gentle movement of her fingertips on her clit as I penetrated her. I held her close, my hand up her shirt, cupping her breast, kissing her neck and shoulder, breathing hard in her ear. Her body was molten to the touch, drenched in sweat.\n\n\"This isn't going to take me long,\" she confessed. \"This is the hottest thing I've ever done.\"\n\n\"Don't worry about it,\" I answered as I pumped into her harder and faster. \"We should probably be quick anyway.\"\n\n\"Help me stay quiet,\" she pleaded.\n\nI moved my hand up to her mouth, holding her as she fought to keep her noises in. Her free hand grasped my wrist, holding my hand over her mouth as the fingers on her other hand picked up speed between her legs. She was rocking her hips in time with my thrusting, and I could feel regular moans dying in the palm of my hand.\n\nThe angle of penetration was so tight, and Danielle was so wet. The buildup of the past week had me right on the edge quickly as her ass grinded against my crotch. Her little moans in my hand were so hot that I felt myself rapidly losing control. I slowed down, trying to keep from climaxing, but Danielle picked up her hip movements in response, and just as I was about to lose it, I felt her stiffen and then release, her body shaking. I took that moment to stop fighting the inevitable, thrust hard two or three more times, and then buried my rod as deeply as I could in her, emptying my balls in her pussy as I felt it contracting, massaging the cum out of my body and into hers.\n\nDanielle shuddered involuntarily as I felt her turn to jelly. The last spasms of my orgasm subsided, and we lay motionless together, me still inside her. In a few moments, I started losing my erection, and just before going soft, I pulled out.\n\nOnce I was out, she rolled slightly to look at me, a look of utter relief on her face. \"I can't believe we just did that,\" she said, sleepily, lazily, out of energy. She checked urgently to make sure the towel hadn't slipped, then looked around to ensure there was no audience. We hadn't been caught.\n\nI kissed her temple, and she cooed happily. \"I've needed that for a week,\" she admitted.\n\n\"Just a week?\" I asked.\n\n\"Longer,\" she admitted again. \"Months. Maybe a year.\"\n\n\"How was sex with someone else?\" I asked curiously.\n\n\"Different,\" she said, thinking it through. She was speaking slower than I'd ever heard her speak, like she was moving in slow-motion. \"Not necessarily better or worse. Andre's good in bed. But, like, I don't know if this makes sense, but even if I'd been blindfolded, I'd have known it wasn't him. You felt different inside of me. You sound different, move differently than he does. You feel different. Not better, not worse, just, a new experience.\"\n\n\"It makes sense, everyone's body is different, and it's the same for us,\" I confirmed. \"Every woman feels slightly different inside.\"\n\n\"How did I feel inside?\" she asked.\n\n\"Unbelievably good,\" I answered, squeezing her. \"Hot. Wet. Tight.\"\n\n\"That's nice to hear from someone who'd know,\" she smiled weakly.\n\nI took that moment to quickly stuff my package back in my shorts. Danielle grabbed her cut-offs and slid them back on. As soon as she'd zipped up, she turned to face me, the fire back in her eyes.\n\n\"We got away with it!\" She was exuberant.\n\nI kissed her. \"Are you hungry?\"\n\n\"I wasn't until I came,\" she said, \"and now I'm starving. Can we go to dinner?\"\n\n\"I'd love to,\" I smiled, \"but just so you know, I'm not through with you yet.\"\n\n\"Good,\" she smiled back, \"because one orgasm isn't going to be nearly enough to satisfy me tonight.\"\n\n\"Me neither.\" We turned to leave.\n\n\"I'm still mad at myself,\" she remarked as we headed for the elevator.\n\n\"For the same reasons?\" I asked.\n\n\"Because the reality was as good as the fantasy. Because I could have had you all week instead of just tonight,\" she said wistfully. \"I'm not going to want to let you go.\"\n\n\"At least we've got tonight.\"\n\n\"I promise you I will make the most of it,\" she said, kissing me again.\n\nAppetizers had already been served by the time we made it to our table. We took our seats, wearing big, stupid grins, and Emily and Lauren both saw through us immediately. But before they could speak, Miguel, uncharacteristically, spoke up.\n\n\"Tarzan!\"\n\nI rolled my eyes as Lauren snickered. \"You saw that, huh?\"\n\n\"What?\" Emily and Danielle asked in unison.\n\n\"Sean came second in the Hairiest Man competition today,\" Alejandra said proudly. \"His Tarzan yell was incredible.\"\n\n\"I have never regretted missing anything more than I regret missing that,\" Emily said bitterly, only half-joking. Danielle just stared at me, agog.\n\n\"People sometimes do things on vacation they wouldn't normally do,\" I shrugged.\n\n\"Speaking of which, should we order a cake for you guys?\" Emily asked, now smiling ear-to-ear. \"High fives? Songs of praise?\"\n\n\"Quiet,\" Danielle said, embarrassed.\n\n\"It must have gone well,\" Emily continued, needling into her friend. \"If I didn't know any better, I'd say you didn't get a lot of talking done.\"\n\n\"We were talking for almost the whole time,\" Danielle retorted.\n\n\"Almost?\" Lauren needled.\n\n\"Once we'd finished talking, it didn't take us very long,\" I finished, exchanging a look with Danielle.\n\n\"Attagirl. I am so proud of you,\" Emily gushed at her friend. \"You made the right decision.\"\n\nMiguel and Alejandra obviously hadn't been involved in any of this, but they figured out quickly what we were talking about. Alejandra volunteered that she hoped she was pregnant after all they'd been trying that week, to Miguel's slight embarrassment. Neither one of them mentioned Danielle's boyfriend, which I'm sure came as a big relief to her, and it was nice not to have to pretend we weren't together, at least for one night.\n\nThe last supper at sea was an all-out blowout, with expensive, delicious food, a tacky floor show, and amply flowing wine. Danielle was on a high, laughing a lot, her face glowing. She was touchy-feely, constantly putting her hands on me somewhere or other throughout dinner. The high-strung, slightly repressed woman I'd known for the past week was gone, replaced by someone looser and more relaxed.\n\nAt the end of dinner, we tipped our wait staff, then the four of us headed upstairs to get out of the crowd. We spilled out into the shops at midship to figure out what came next.\n\n\"So how did it go?\" Emily demanded as soon as we were somewhere semi-private.\n\nDanielle and I exchanged a knowing glance, smirking.\n\n\"He was really good,\" Danielle finally said, \"and we're not done. I'll tell you all about it later.\"",
        "\"You're okay?\" Emily asked.\n\n\"Better than okay,\" Danielle confirmed. \"I've never been better.\"\n\n\"I'm so happy for you.\" Emily turned to me. \"Take care of her, Sean. She's amazing, and she deserves every single orgasm you're about to give her.\"\n\nDanielle beamed.\n\n\"You're happy, Sean?\" Lauren asked.\n\n\"Very happy,\" I confirmed.\n\n\"Do you want to go back to your cabin and pick up where we left off last night?\" Danielle asked.\n\n\"I'd love to,\" I responded.\n\n\"What should we get up to?\" Emily asked Lauren shyly. \"I'd be up for going back to our cabin and... you know, fooling around again.\"\n\n\"I'm honestly not feeling it tonight,\" Lauren responded. \"We can keep hanging out, but I'd rather go hit the bar or the hot tub. Or, do you feel like dancing? I'll never get Sean dancing, which means I haven't been dancing this cruise.\"\n\n\"Sounds like fun,\" Emily grinned.\n\n\"Message me when you're done,\" Lauren ordered, turning to face me.\n\n\"I will.\"\n\n\"Don't forget, we have to pack tonight,\" Emily reminded us. \"We have to be off the ship by 8 AM, which means we need time to get our suitcases ready.\"\n\n\"Shit,\" Lauren mumbled. \"I forgot about that. Take your time with Danielle, but make sure we have enough time for packing, and for...\" she trailed off, kissing me on the cheek.\n\n\"What did Lauren mean just now?\" Danielle asked, with an edge of suspicion, as we watched our friends disappear into the crowds.\n\n\"She's been dealing with a lot of mental health issues, and she wants to talk about them tonight,\" I told her.\n\n\"That's good of you, Mr. Therapist. I'm sure it'll be good for her.\" Danielle turned, heading for the stairs. \"Come on, Sean!\"\n\n\"You're impatient,\" I observed.\n\n\"I'm horny,\" she answered. She took me by the hand and practically dragged me up to Deck 7, then navigated to our room.\n\nOnce we were in the room, she paused, surveying the familiar scene, then headed out to the balcony, motioning for me to join her. The sun had set, and the temperature had cooled a little from what it had been the last few nights, but it was still pleasant weather to be outside after dark. I could see a light on the horizon from a distant ship, but otherwise, we were alone. The sea was dark and calm.\n\nDanielle and I stood at the railing, gazing out at the water.\n\n\"How do you feel?\" I asked her.\n\n\"Good,\" she answered. \"Really good.\"\n\n\"No regrets?\"\n\n\"None.\" She turned to face me, smiling. \"The turmoil is gone. Maybe I just had to finally make the decision and follow through with it.\"\n\n\"I'm happy to hear that,\" I said.\n\n\"Or maybe I just needed to get laid.\" She grinned, and suddenly peeled her top off, then unzipped and shimmied out of her cut-offs. She quickly opened the door to the cabin, tossing her clothes inside for safekeeping, then sat down nude on the chaise longue, one leg stretched in front of her, one on the floor, so her vulva was wide open and exposed to the sea. She looked radiant in the low light.\n\n\"I guess I am an exhibitionist,\" she mused.\n\n\"How was showing off today?\" I asked.\n\n\"Good. Terrifying. Arousing.\" She thought for a minute. \"I wanted to get something out of this last day of the cruise just for me. Even if we didn't sleep together, I wanted to take a step that wasn't connected to you. I've never gone commando before. I've never gone braless in a sheer top in public before. I've never been nude in a semi-public place like I am now, at least until last night. I wanted to do those things for me. Sometimes starting something scary is the hardest part, so I was determined to do something to explore my sexuality before going home. Even if it was just me, I wanted to feel like I'd started.\"\n\n\"I'm proud of you,\" I said.\n\n\"I'm proud of myself,\" she answered. \"I was thinking more about it, and you're right. I did break up with Andre in the hot tub. The process of growing as a person has already started. And now I'm going to take another step.\"\n\nWith that, she slid her right hand down her body, and started gently massaging her labia. Her eyes were on fire with excitement as she nervously looked around.\n\nI took that moment to pull my polo shirt off, then my shorts and underwear, tossing them in the cabin. I then sat down in the other chair, put one foot up on the chaise longue beside Danielle, took my cock in my hand, and started to stroke it, slowly, gently, bringing myself to a full erection.\n\nWe watched each other for a moment.\n\n\"How does this compare to the beach at Half Moon Cay?\" I finally asked.\n\n\"I'm nude here,\" she answered, \"and I'm letting myself feel what I'm feeling. On the beach, I was trying to keep the feelings from getting in just long enough for me to cum.\"\n\n\"What are you feeling?\" I asked.\n\n\"I'm turned on,\" she said. I noticed her middle finger find her clit as she started focusing on that one spot. \"I'm free. I don't have to answer to anyone. I can be my own person. I can flash my vagina to a whole ocean if I want to.\" She paused again; eyes locked on my cock. \"I'm really turned on.\"\n\n\"I'm ready to fuck you any time you are,\" I said, still trying to stroke myself slowly.\n\n\"Yeah, okay. Come fuck me.\"\n\nShe shimmied lower on the chaise longue, putting her right leg up on the railing for leverage. I went to her, and she watched, eyes glued on my cock, fingers still hard at work, as I grew closer, finally making contact with her vulva. I gently wet the head of my dick with her juices as she stared, transfixed.\n\n\"Do you think I can moan out here?\" she asked.\n\n\"The ocean is pretty loud,\" I answered, \"and I don't think anyone will care if they overhear anyway.\"\n\n\"It's so hot thinking someone might hear me,\" she smiled. \"My whole life I've held it in. Even when I was alone, either with Andre or by myself, somehow, I couldn't let myself truly let loose. I have no idea why, but no more. This is a new Danielle that likes the idea of being overheard. This is a new Danielle that's ordering you to put your cock in her.\"\n\nI slid inside, slowly, mindful of the fact I was bigger than she was used to. I felt her boiling hot insides accept the intruder, squeezing me every inch of the way until I finally bottomed out.\n\nI held steady there, watching Danielle's face register slight discomfort, then relax. \"Okay,\" she said. \"Go.\"\n\nI started to make love to her slowly, going all the way in and then almost all the way out, not fully pulling out, but trying to savour her tightness on every inch of me. I watched her dark red lips sheathing and unsheathing me, her middle fingertip tracing circles on her clit with a steady pace but no urgency either. I watched her face, contorted with pleasure, glowing in the low light. I watched her boobs bouncing with the rhythm of my movements inside her. She was moaning softly to herself with each breath, like she was experimenting with the idea of letting her body take the lead.\n\nI fucked her slowly for a couple of minutes. Danielle's pussy was so damn good that I was still having a little trouble keeping control, and I was glad of my earlier orgasm to take the edge off.\n\nFinally, she pulled me down, on top of her, wrapping her legs around me, and whispered in my ear.\n\n\"Can I make a request?\" she cooed, her voice dripping with arousal.\n\n\"Of course you can,\" I answered.\n\n\"I want you to fuck me while I look out at the ocean,\" she said shyly. \"This is nice, but all I can see is the ship and you. And, I like the view of you, but I want to see the world.\"\n\n\"Do you want to lean over the railing, so I can fuck you from behind?\" I asked.\n\nShe shivered involuntarily. \"Yes. That sounds amazing.\"\n\nI stood, pulling out of her, and then she got up, moving the furniture out of the way. She then leaned over the railing. It was high enough there was no danger of going overboard, but the bottom of it was glass, so anyone hypothetically out there would see all of Danielle's tight naked body.\n\nI put my hand on her ass, felt around with my cock to find her wet opening, and then plunged back inside her. She moaned, loudly, defiantly, as I started to fuck her faster. The night air was alive with the sounds of her moans and the clapping noise of my body smacking her ass with each stroke. I reached under her, cupping her breasts, as she arched her back, focusing the penetration where she wanted it. Her fingers were still active on her clit, moving faster now.\n\nIn a few minutes I felt another orgasm coming on in a hurry, so I pulled out, and, inspired, I knelt, admiring her bare slit between her legs, and her shapely, smooth ass and hips presenting to me. I then placed my face right up to her pussy, starting to lick her clit from behind, my nose nearly penetrating her hole. I kept stroking myself to stay hard, but only slowly, letting the edge wane.\n\nDanielle yelped in surprise, then realized what I was doing, and started moaning louder, pressing her pussy into my face, trying to get me to increase the pressure. Within a minute or so I'd figured out what she liked -- short, firm licks right on the edge between her clit and its hood -- and I kept up the speed and pressure as she struggled to stay upright. I had a pane of glass between my ears and her face, but I could still hear her moaning my name at an incredible volume, to the point that I knew anyone out on their balcony within 50 feet probably could hear her.\n\nIt didn't take her very long. I felt her knees buckle, and with a final scream of my name, her legs gave out completely as she came, collapsing to the floor. I had to pull back to avoid her coming down on top of me.\n\nI held her head as she lay, unmoving, for a few moments, then her eyes opened, and she looked up at me, confused.\n\n\"Did I black out?\" she asked.\n\n\"I think so.\"\n\n\"That's never happened to me before,\" she said weakly. She attempted to stand, and her legs gave out again. \"That's the hardest orgasm I've ever had.\"\n\n\"Nice one, Sean!\" came a female voice from out in the blackness, then I heard muffled giggling. Apparently, someone out there had been listening to Danielle moaning my name.\n\nDanielle blushed. \"They can't see us, can they?\"\n\n\"No,\" I answered, looking around. \"I don't think so.\"\n\n\"That was amazing,\" she said carefully. \"But I think I'd like to go in now.\"\n\n\"Can you stand?\" I asked.\n\n\"I'm dizzy,\" she answered.\n\nI reached under her, picked her up, and carried her into the room, dropping her gently on the bed. I hadn't intended it, but her face wound up right at eye level with my erection, still raging.\n\n\"Oh, right.\" She took it in hand and started stroking.\n\n\"You can catch your breath if you need to,\" I said reassuringly.\n\n\"Yeah, maybe,\" she answered. She wriggled under the covers, and I joined her, where she curled up to me, her head on my shoulder. Her hand snaked down, finding my cock again, and started stroking it while she nibbled on my shoulder and neck.\n\n\"This is the first time I've gotten to touch it,\" she said approvingly. \"It's definitely bigger.\"\n\nI grinned. \"Did you like it?\"\n\n\"It filled me up more,\" she answered happily. \"It stretched me inside, in a good way. You felt really good in my pussy.\"\n\n\"You're so tight,\" I responded. \"And I love how wet you get.\"\n\n\"I've always wondered, do other girls get as wet as I do?\" she asked inquisitively.\n\n\"Some do, but you're definitely above average,\" I said. \"It feels amazing.\"\n\n\"Huh.\" She picked up the pace a little. \"It's not like I've ever seen another girl's pussy up close.\"\n\n\"Yeah, I hadn't seen another guy with a boner until this week,\" I remembered.\n\n\"I'm going to suck your dick now,\" she responded. She sat up, stripping the blankets off, and then went to town on me.\n\nDanielle's was enthusiastic, and she was clearly turned on by the idea of going down on me, but I could tell she wasn't used to having to fit her mouth around a guy of my size, as she kept gagging while trying things you could tell she was expecting would work. Finally, after being frustrated by failing to take most of my cock in her mouth a couple times, she settled on licking the head and underside and jerking me off with her hand.\n\nAfter a few minutes, the edge was starting to come back, and I think she could tell, because she stopped suddenly, clambering up to take up a position on top of me. She took my cock in hand and easily slipped it back inside her still dripping hole, then started to confidently ride me, hard and fast.\n\n\"Holy fuck, you're good at this,\" I exclaimed, surprised.\n\nDanielle smiled. \"It's my favourite position.\"\n\nI reached up, cupping her gumdrop breasts, playing with her nipples, as her hips rode me like a bucking bronco.\n\n\"Where did you learn to ride like that?\" I asked, impressed.\n\n\"I ride horses, remember?\" she grinned. \"I'm a cowgirl by nature.\"\n\nDanielle seemed to know exactly how to ride me to make it feel as intense as possible, and between that and her oral skills, it wasn't long before I was close again.\n\n\"I'm going to cum if you keep doing that,\" I warned her.\n\n\"I'd better stop then,\" she said, slowing down.\n\n\"Wait, why?\" I asked in frustration.\n\n\"You've already cum in my pussy,\" she answered. \"You haven't cum on my face yet.\"\n\n\"Is that where you want it?\" I asked.\n\nShe nodded shyly. \"I kind of like it when guys do that.\"\n\nDanielle climbed off me, moving to her knees on the floor, and started rubbing her clit fast and hard with one hand while jerking me off with the other. In a matter of seconds, I felt the start of an orgasm, and Danielle could tell, as she slowed down with me right on the edge, keeping me there for an agonizing few seconds before I came, blowing semen forcefully all over her face and into her open, waiting mouth. She clearly enjoyed it, as within a few seconds, her face contorted in pleasure, she moaned, and she climaxed again, shuddering as her legs clamped shut over her hand.\n\nOnce she'd finished, she stood up, white cum dripping down her face. She made a point of showing me she'd swallowed before grabbing a tissue, cleaning the rest of herself up.\n\n\"That was so hot,\" she said once she was clean. She climbed into bed and curled up with me. \"Thank you.\"\n\n\"Thank you,\" I responded. \"How do you feel?\"\n\n\"Like a weight has been lifted,\" she answered. \"This is right. This is what I want. More of this. I want to stop being tied down.\"\n\n\"I'm so happy to have been part of you taking the first step,\" I said. \"I'd love to stay in touch and hear more about your adventures.\"\n\n\"I used to go to summer camp when I was a teenager,\" she answered thoughtfully. \"You'd make these incredible, close, personal friendships with these girls. You'd tell them all your secrets and hear all of theirs. You'd be so upset at the end of the summer to have to split up. You'd swear to keep in touch and email every day. And, within a couple of months, you'd drift apart and never speak to them again. Summer camp friendships aren't meant to last.\n\n\"From where I lay right now, naked, beside you? Yes. I'd love to stay in touch. But this is summer camp, and you're the cute boy from the other camp across the lake that I have a crush on, and in a few months, we'll both have moved on.\"\n\nI looked at her with a newfound respect. \"You're probably right.\"\n\n\"Maybe this time will be different. I will text you when I'm home. I promise you that. But I'm not going to be unrealistic about this.\" She kissed me, long and deeply, smiling at me as we lay together. We cuddled in silence for at least twenty minutes, occasionally kissing, running our hands over each other's bodies. I focused on her breathing and the warmth of her skin pressed against mine.\n\nFinally, Danielle reluctantly sat up. \"I hate to do this, but we need to pack. I'm going to head down to my cabin.\"\n\n\"Sounds good,\" I said, picking up my phone and texting the all-clear to Lauren as we started to get dressed. \"Take care of yourself. I know what you said, but I'm willing to listen to you any time you need to talk.\"\n\n\"No promises, but I might just take you up on that,\" she replied. She headed for the door, kissing me one final time. \"Goodbye, Sean. You gave me the kick in the pants I needed to start working towards becoming a better me, and for that, I will always be grateful. Thank you for that, for listening to me ramble, and for fucking me really well right when I needed it most.\" She playfully grinned her brilliant grin one more time.\n\n\"I was stressed, depressed and overworked coming on this holiday, and you've been a total breath of fresh air,\" I answered. \"It's not just about the sex, as good as that was, but all of it. Making your friendship was terrific, and I've so much enjoyed all the time we've spent together. I'm so glad I met you here, and no matter what the future brings, you made a difference in my life, too.\"\n\nDanielle gave me a hug. \"Whatever comes next, I want you to know that I'll never forget you,\" she said, gazing up at me with her expressive brown eyes.\n\n\"I'll never forget you, either.\" I smiled.\n\n\"It's been a pleasure.\" She winked.\n\n\"It definitely was.\"\n\nAnd with that, she was gone.\n\nI headed back into to the room, pulled my suitcase out from under the bed, and started to empty drawers and cupboards around the room. About ten minutes later, I heard a keycard swipe at the door, and there was Lauren, glowing with sweat from her exertions in the dance club.\n\n\"How did it go?\" she asked.\n\n\"About as well as possible,\" I grinned.\n\n\"Tell me everything,\" she said excitedly. \"I need a quick shower and then we can start packing.\"\n\nI followed her into the bathroom and told her all about the evening in detail as she showered, leaving out nothing. She listened in rapt attention.\n\n\"Are you okay with how it's ending?\" she asked once I'd finished. Just then, she shut the water off and I handed her a towel.\n\n\"Yeah,\" I said. \"I am. We were never going to fall in love, but I got to at least meet another woman I really liked and hook up with her. I hadn't done that in ages, and it'll be a lot easier for me to go home now and get back on my bike.\"\n\n\"I'm glad,\" she said happily.\n\n\"This whole trip has been everything I needed it to be,\" I continued. \"I got out of my depression. I relaxed. I got laid more this week in a shorter time than I ever have been before. And I got to spend a ton of quality time with my best friend. I had a wonderful, wonderful time. Thank you for bringing me here with you.\"\n\n\"It was way more fun than coming alone,\" she agreed, stepping out of the shower and starting to pack, wrapped in her towel. \"It wasn't the vacation I thought I was going to have when I left Vancouver last week, but I'd never have had these adventures if I was here with Rolf. We'd probably have barely left the cabin.\"\n\nWe took another ten minutes or so getting all of Lauren's stuff together, and soon we were mostly finished packing up. Our toiletries were still out, and we each had reserved our last clean outfits for use tomorrow, but otherwise we were good to go. We zipped up our suitcases, stashing them by the door for an easy getaway tomorrow morning.\n\nLauren sat on the couch as I took the bed. She grabbed a cushion from the sofa, holding it close to her body, curling her legs under her. She still had the towel on and seemed disinclined to lose it. She looked quite vulnerable.\n\n\"How would you like to start?\" I asked.\n\n\"I don't want to,\" she answered quietly.\n\n\"I know, but we need to sort this out before you go home,\" I insisted.\n\n\"I know we do,\" she whispered.\n\n\"How do you feel?\"\n\n\"Scared.\" She shifted slightly, retreating even further within herself. \"I don't want to go home tomorrow.\"\n\n\"Why not?\" I asked.\n\n\"Because...\" she trailed off. \"Because you won't be there.\"\n\n\"I'll miss you too.\"\n\n\"It's more than that,\" she said quietly. \"I'm lost without you, Sean. I've been so lonely out west. I have friends, I have a good job, I have money, I have a good life, but it's not enough. I need you too.\"",
        "I swallowed. \"When you have all those things, what do you need me for?\"\n\n\"This!\" she exclaimed. \"All of it. Having adventures. Getting up to no good. Cuddling. Having someone I can talk to. I haven't opened up to anyone since I moved out west.\"\n\n\"You don't usually open up to me,\" I observed.\n\n\"You're wrong,\" she said sternly. \"I may not be in touch with my feelings or willing to talk about them like you, but I open up in my own way. I let you see the real me in a way no one else ever does. No one ever sees all the way inside me, but that doesn't mean what I choose to let you see isn't real.\" A single tear rolled down her cheek, which she made no effort to wipe away.\n\n\"I'm sorry,\" I apologized. \"I knew that deep down, even if you've never told me. I know you are who you are, and I accept you for who you are.\"\n\n\"I know you do, Sean,\" she said quietly. \"Even with how messed up I am, I know you've got my back. You get me like no one else does.\"\n\n\"What do you mean, messed up?\" I asked.\n\n\"You know what I mean,\" she said. \"I'm prone to depression. I'm flighty. I'm impulsive. I don't deal with my feelings. I drink too much. I self-medicate with meaningless sex. I've always been a hot mess of a person, but I've gone downhill since I moved out west. My career has taken off, but everything else is worse. I think having you around always grounded me. Without you there, things got a lot darker in my life. I haven't seen any light in months. Not until this week.\"\n\n\"What about all that stuff we talked about on the first night, settling down, having a real relationship?\" I asked. \"Wouldn't that be a source of light?\"\n\n\"Men don't fall in love with a girl like me,\" she sniffled.\n\n\"I did.\"\n\n\"I love you too,\" she said quickly. \"Everything I said that first night is true, I have been thinking a lot about the future. But I didn't tell you then what's behind all this deep down. Don't freak out.\"\n\n\"About?\" I swallowed.\n\nShe took a deep breath, as though gathering her courage. \"Have you ever thought about what would happen if we tried to be more than friends?\" she finally asked.\n\nMy heart started racing, and I had to take a few deep breaths as she watched me, expectantly. Her eyes betrayed no emotion.\n\n\"Many years ago,\" I began, my voice wavering. \"I had a crush on you when I was still dating Michelle, back when we first met. We flirted a lot back then, and I thought there was potential there, especially once I know Michelle and I were going to break up. But when she dumped me, I tried to gauge if I thought you'd be interested in me, and I never saw any signs you would be. I guess I eventually moved on.\"\n\nLauren took that in, lost in thought.\n\n\"I wasn't interested in dating you back then, Sean, but not because I wasn't attracted to you,\" she finally said. \"I didn't want to settle down with a boyfriend then. I was only in either open relationships or no relationship; I was fucking a lot of different men and women, and at that time in my life, that's what was important to me. And you, by comparison, were so... traditional.\n\n\"When I thought about us getting together, I could imagine you wanting us to get married someday, to settle down, and I didn't want that future in the way I knew you did. Our futures were irreconcilable with each other. I liked you a lot, but I don't think I let myself pursue you or you pursue me, because I wanted you to be happy, and I couldn't make you happy the way I thought you needed to be happy.\"\n\n\"And now?\" I asked.\n\n\"You first,\" she said timidly.\n\n\"I haven't thought about you like that for a long, long time,\" I said. \"You're a gorgeous woman, and I've never stopped noticing that. But the whole time we lived together, I never once thought about you as a potential girlfriend, since you'd made it so clear that wasn't an option. Though I still got a little thrill every time I saw you topless.\"\n\nLauren smirked. \"I knew what I was doing every time I flashed you.\"\n\n\"I knew you knew. But it was just flirting, and close friendship, and I never expected it to be more than that. I gave up my dreams of being an astronaut years ago. I'll never play defense for the Toronto Maple Leafs. And I'll never be with Lauren Kovalenko. I'm not the type of person to fantasize about something I can't have, so, a long time ago, I stopped. I accepted what you were and weren't offering me, and I've never had any regrets about that.\"\n\nShe nodded, thinking.\n\n\"What about you?\" I asked.\n\n\"I still can't be the kind of partner you need,\" she said. \"You've said for years that we are too alike to be in a relationship, and you're right. I agree with you on that. Plus, I'm emotionally walled-off, and you need a girlfriend who's more in touch with herself.\n\n\"I don't want to get married, ever. I don't want to live that kind of nuclear family life. I don't want to have to settle down as the price of admission to be with you, or with anyone. I know myself too well, unfortunately. Either I'd need an open relationship, or I guarantee I would eventually cheat on you, no matter how much I didn't want to.\"\n\n\"I asked what you feel, not what I need,\" I pointed out.\n\n\"It's still hard for me to talk about my feelings,\" she said plaintively.\n\nI waited, letting her think.\n\n\"We say 'I love you' to each other a lot,\" she finally began. \"It's friend love, it's platonic love, it's deep, caring affection for each other. But I need you to know... that I love you, Sean. I've always loved you. I love you in all the ways it's possible for a girl to love someone. I've never loved anyone else the way that I love you. I love you in a way that I otherwise don't think I'd be capable of loving another person. I've never managed to fall in love with anyone the way I love you. I don't know why I love you like I do. I've tried for years to talk myself out of it. But I can't change how I feel. You're the only person I've ever loved, and the only person I've ever said those words to.\n\n\"And at the end of the day, I can't reconcile my love for you with who I am, who you are, and what both of us need to be happy. I know we can't be together, and I still don't want the future that you do, so I don't know where that leaves me.\" She started crying, not the full-on meltdown of the first night, but just slow, steady tears.\n\nI went to her, offering a tissue, and wrapped my arms around her as she sat, quietly, letting her emotions out.\n\nWe sat like that in silence for a very long time. Eventually her tears ran out, and she sat, motionless, breathing slowly as I held her.\n\n\"Talk to me,\" she begged. \"I need to know how you feel.\"\n\n\"I don't know if I knew I felt it until I heard you say it right now, but I love you, too\", I began. \"I love you in all of the same ways.\"\n\nLauren sighed a sigh of relief. I hadn't realized she'd been holding her breath.\n\n\"Over the years we've known each other, I've wrestled with my feelings for you more than I ever let on,\" I continued. \"There were times I wanted you. There were times I daydreamed about you as a partner, a girlfriend, a wife. Of growing old together. There were times that I tried to figure out a way to make it work. But I never found a way. I don't know how we can be compatible as a couple.\"\n\n\"We can't be,\" she interrupted. \"I know that.\"\n\n\"I also don't think we need to be.\"\n\n\"What do you mean?\" she asked.\n\n\"I've been happier spending this week with you than I have been since you moved out west,\" I said.\n\n\"Me too.\" She smiled, her eyes welling up again.\n\n\"We need each other.\"\n\n\"We do.\"\n\n\"The best years of my life were when we lived together,\" I said honestly.\n\n\"Mine, too,\" she agreed.\n\n\"Why don't we go back to that?\" I asked.\n\n\"You mean...\" she said, thinking. \"You want me to move back to Toronto and move in with you?\"\n\n\"Yes,\" I said. \"Do you know those people who make a pact to get married if they're both still single by age 40?\"\n\n\"That's a stupid idea,\" she spat.\n\n\"I agree,\" I said, \"and I'm not offering. But you know that I've been with many different people that I thought were the one. None of them worked out. Maybe there isn't a 'one' for me. You're not the type to settle down with anyone. Maybe we're both meant to be perpetually single. So why don't we just start living together and stop looking for ways to fit into a traditional relationship? The answer is staring us in the face. Let's go back to what makes us both happy.\"\n\nI could see the wheels turning in her head. \"I guess I could start looking for a job in Toronto...\" she mused. \"I have lots of contacts in the industry there, and there are jobs at my level. I have other friends and cousins I miss in Ontario, and I've never felt truly at home in Vancouver. That's not a bad idea.\"\n\n\"I'd even sell you half the equity in my house, if you wanted,\" I continued. \"That way, even if you sell your condo, you can keep building up your assets. It would be nice having someone to split the mortgage with.\"\n\n\"That's really not a bad idea,\" she finally said. \"I don't care what we call it, but I don't want to live without you again, even for a day.\"\n\n\"Why don't you change your flight tomorrow?\" I asked. \"Take another week off and come home with me. We can trial run before you have to go back to B.C.\"\n\n\"I will,\" she finally smiled. \"That's a really good idea.\"\n\n\"You're the poster child for non-traditional relationships,\" I pointed out. \"So, let's have one. Let's be best friends, let's be roommates, let's be there for each other, let's play wingman for each other. Let's keep winding each other up and having fun. Let's do for each other what we did this week. Let's get each other laid. We don't need to ever give it a name, but this week is the life we're meant to be living. I've never been surer of anything in my life.\"\n\n\"I really like that idea.\" She smiled, but she looked nervous again. \"There's one more thing before I say yes.\"\n\n\"Okay...\" I waited.\n\n\"Sean Corcoran, how is it possible that we've never had sex with each other?\"\n\n\"Because you weren't interested when I wanted to, and I never saw any signs you'd changed your mind,\" I said quickly. \"I'd never make a move on a woman without seeing some sign she wanted me to. Before this week, I never saw that sign from you. You also never made a move on me, and goodness knows I've seen you make moves on men you were interested in sleeping with. I guess that just proved to me you weren't interested in me.\"\n\n\"I was always interested,\" she said emphatically. \"I was when I was twenty, and I still am. I never made a move because I was worried about what would happen after.\" She shifted on the couch. \"Do you ever think about me when you jerk off?\"\n\nI blushed. \"Sometimes.\"\n\n\"I think about you sometimes, too.\" She tossed the cushion aside suddenly, leaning back. The towel slipped a little, but she was still fully covered. \"I've been debating for fifteen years whether it's worth risking the friendship to finally get to be with you, and I still am no closer to figuring out the answer.\"\n\n\"Is that why it feels like we've been flirting way closer to the line than usual with each other this week?\" I asked.\n\n\"That urge has always been there,\" she answered. \"I used to lie there at night, listening to you having sex with some girl you'd brought home, playing with my vibrator, imagining that it was me you were getting to make those noises.\"\n\n\"I've done that while you were hooking up, too,\" I confessed.\n\nLauren's eyes lit up before she caught herself. \"But there was always a little voice in my head that kept telling me it wasn't worth risking this friendship, and I always listened to that voice.\" She licked her lips. \"The voice has been silent this week for the first time since I've known you. And I've been dangerously horny. My libido hasn't felt out of control like this since I was a teenager.\"\n\n\"I've noticed.\"\n\n\"I can't decide if the urge to fuck you that's been there all week, that's there even right now as I sit here, is from finally admitting to myself that I loved you and needed you, or from alcohol, hormones and my dry spell. I can't decide if it's a one-time thing I should ignore, or something deeper that I should act on.\" She shifted again, and I noticed she was starting to seem antsy.\n\n\"Are you propositioning me?\" I asked. I wasn't sure what I wanted the answer to be.\n\n\"I've wanted to since we were 20,\" she answered. \"But right now? I don't know if it's worth risking the most important relationship in my life. What if we do it and it ruins this strange, unconventional thing we have?\"\n\n\"It might,\" I said gravely. \"If we knew we'd be okay after, we'd probably have slept together years ago. But the reasons you've just said are the same ones that have made me fight you off this week when you've put the moves on me.\"\n\n\"Do you want to have sex with me tonight?\" she asked. I couldn't tell if she was gauging my feelings or making an offer.\n\n\"No, but that's probably because Danielle just completely drained my balls,\" I said with a smirk, avoiding the implication entirely.\n\n\"What a fucking bitch.\" Lauren smiled disarmingly to show she wasn't serious.\n\n\"I still have no idea if it's a good idea,\" I said, confused. \"All your come-ons this week have felt like one terrible idea after another. And they've all turned me on.\"\n\n\"I know,\" she said smugly. \"I like knowing I can make you hard.\"\n\n\"I like knowing I can make you wet,\" I answered.\n\n\"You're so good at it,\" she cooed. \"And it really doesn't help that now I know for a fact that you've got a really nice cock.\"\n\nI smiled. \"I'm not going to pretend I haven't imagined what the inside of your pussy feels like at least once a day this week.\"\n\n\"This friendship sometimes feels to me like it's been a fifteen-year clit-tease\", she continued, biting her bottom lip. \"We've kept building and building the sexual tension between us, and it's never had the chance to release.\"\n\n\"You're horny again,\" I observed.\n\n\"See?\" she responded, frustrated. \"You can read me like a book. You're the only one who can. I've never been able to be as mysterious around you as I wanted to be.\"\n\n\"I don't know if I'd be able to get it up again,\" I confessed. \"Danielle took a lot out of me, and I've had a lot of orgasms this week.\"\n\n\"It was important for you to hook up with Danielle,\" she pointed out, \"and that's good for both of us, because it saves us from having to make a decision tonight. That's probably for the best. I don't know if I would be capable of saying no to you right now if you made a move on me. All I want to do right now is drop this towel and kiss you.\"\n\n\"I can't pretend that isn't tempting, but you've told me all week that you needed good sex with a guy to get over Rolf, and to get over six months of celibacy,\" I pointed out. \"I don't want to be your rebound fling.\"\n\n\"I don't want you to be, either.\"\n\n\"If that's all this is, then it will probably ruin the friendship,\" I said. \"I want you to find that rebound guy, let him fuck all your frustration out, and then you can evaluate how you're feeling. I can help you find him if you need it. But you need to get your heart, and your pussy, in order before we decide to take that step.\"\n\nLauren thought about it. \"You're right. You're always right. I don't know how much of this is heart and how much of it is hormones. I'm not used to using my heart, and sometimes I don't know how to listen to what it's telling me. And if this is just my poor, neglected pussy making me feel this way, and that drives you away once she's finally satisfied, I'd regret it for the rest of my life.\"\n\n\"I can see us hooking up, someday,\" I said. \"But not here, and not now.\"\n\n\"I have an old fuck buddy in Toronto that was a solid 8 out of 10 in bed,\" she remembered. \"Maybe I'll text him when I get to town and see if he wants an easy lay.\"\n\n\"That's a great idea,\" I said encouragingly.\n\nShe leaned over and hugged me as the towel finally slipped off. She pulled me down to her breasts, holding my face against them, running her fingers through my hair. I held her in my arms for several minutes, breathing her in, feeling the slow rise and fall of her chest. Her skin was radiating heat, and I could hear her pulse racing through her breastbone. It felt like the most intimate moment yet in a week of them.\n\n\"Sean?\" she finally said.\n\n\"Yes?\"\n\n\"I don't want to talk anymore. Can we go to bed?\"\n\n\"I think that's a good idea,\" I said. \"It's an early morning tomorrow.\"\n\nWe rose, quickly brushed our teeth, and then I stripped one more time, packing the day's clothes into my suitcase as Lauren climbed into bed. Once I was done, I turned out the light, snuggling one more time into Lauren's nude body, her on her back, me curled in, arms wrapped tightly around her, head on her shoulder.\n\n\"I meant what I said this morning,\" she whispered. \"I want to make myself cum and then fall asleep in your arms.\"\n\n\"Is that dangerous?\" I asked.\n\n\"Probably,\" she answered, \"but I don't care. I need to have this moment with just you. I've wanted it for fifteen years. I didn't have good sex this week like I wanted to, but that's okay. I can wait a little longer. But I need this right now. I need to feel as close to you as I can. Please, let me.\"\n\nHer legs spread, making a tent in the blankets, and I felt her hand move down between her legs. I then felt the slow repetitive movement of her right arm against my body.\n\nI made my decision. I took her head, motioned for her to turn to me, and I kissed her for the first time. Her lips were soft and delicate, and she tasted of mint from having just brushed. We kissed slowly as I felt her hand doing its thing, and in time her mouth opened. We explored each other's lips and tongues, making out like teenagers. I could feel her heart racing with excitement and nervousness.\n\nAs her arousal grew, she started pulling back from kissing periodically to moan under her breath. I could feel the heat from her skin as I let my free hand roam her body. She suddenly took my right hand in hers, moving it up and placing it on her left breast. I felt her erect nipple beneath my fingertips, and I tweaked it gently, taking in the warm softness of her bosom. I kept kissing her, kneading and fondling her, feeling the pace of her intimate movements pick up their intensity. I could feel the tension rising in her body as she grew closer to the edge.\n\n\"Sean!\" she suddenly moaned, and her body clenched. I could feel her heart pounding through her chest, hear her moans in my ear. She shook six or seven times in rhythm before turning into jelly, her legs sinking down flat, her hand slowing its movements and then stopping. As she came down, she turned and kissed me one more time.\n\n\"I love you, Sean.\"\n\n\"I love you, Lauren.\"\n\nI held her for a long time like that, and at some point, we both fell asleep in each others' arms.\n\nEpilogue\n\nThe morning dawned early, with ship's announcements about the disembarkation process being pumped directly into our cabin at an annoying volume around 7 AM. We arose in a slightly hungover stupor, showered, dressed, grabbed breakfast, and were ready to leave the ship by just after 8. There was a complicated process for getting off if you'd wanted the porters to handle your luggage, but Lauren had recommended taking our own bags, and that process was surprisingly easy. We walked off the ship, cleared American passport control, and were out into the Arrivals Hall by 8:30, waiting for a bus to take us to the airport.\n\nIt was there, standing out in the early-morning Florida sunshine, that I heard a voice.\n\n\"Sean! Lauren!\"\n\nWe turned, and there was Allison, running up to us, Oliver in tow.\n\n\"I'm so glad I found you guys!\" she said. \"Didn't you check your messages this morning?\"\n\nI turned to Lauren and shrugged. We hadn't remembered to.\n\n\"Andie forbid any of us from seeing either of you again after you told her off yesterday,\" she said excitedly.",
        "\"I heard that,\" I smiled.\n\n\"So, I want to get a picture of the three of us together by the 'Welcome to Florida' sign,\" she grinned evilly.\n\n\"Sure,\" I said, \"but what are you going to do with it?\"\n\n\"I haven't gotten her a wedding present yet,\" she said slyly. \"I might get it printed and frame it for her.\"\n\nWe laughed. \"Sure,\" I said, \"go ahead.\"\n\nOliver snapped several pictures of us mugging for the camera, then shook my hand. \"Thanks for introducing us. It was great meeting you.\"\n\n\"You too,\" Lauren said. \"We'll all keep in touch.\"\n\nAs they walked away, Lauren and I boarded the bus, and after we sat down, I put my arm around her. She smiled, snuggling up to me with love in her eyes, her head resting on my shoulder.\n\nI had no idea what the next few months would look like, but for today, it didn't matter. I was happy like I hadn't been happy in a long time. I had my best friend back permanently in my life. I reflected on the past week as the bus pulled away and I saw the ship for the last time receding behind us. We'd had many pleasures on that cruise, but the greatest pleasure of them all was being back together with Lauren, in whatever form the future held for us."
    ],
    "authorname": "thatsbogus",
    "tags": [
        "balcony",
        "best friend",
        "blowjob",
        "caribbean",
        "carnival",
        "cruise",
        "cunnilingus",
        "exhibitionist",
        "masturbation",
        "vacation"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-pleasure-cruise-ch-05"
}