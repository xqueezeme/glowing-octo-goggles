{
    "title": "Unintentional Nudist Pt. 02",
    "pages": [
        "You have to read part one in order for part two to really work. I didn't want part one to be too long. Part two should be \"more satisfying\". As always, I appreciate votes and comments.\n\nI didn't have a good practice on Thursday as I was totally distracted. I'd masturbated to the video of Jan watching me jerk off through the window before I left and I did the same that night when I went to bed. Marcie and Jan had gone out to the movies that night so there was little interaction after that afternoon when they pulled that stunt and tricked me into stripping off. \n\nFriday morning was another opportunity to do better on the field. It didn't go well. Third base is not a safe place to daydream. Balls can come screaming at you off a player's bat when you play the \"hot corner\". That didn't happen but I wasn't paying attention on one pitch and as the runner at second tried to steal third base our catcher fired a rocket right down the third base line. If I'd had my head in the game and moved into position it would have been an easy put out. As it was the ball sailed into left field and the guy scored. If that had happened in an actual game I would have gotten my ass kicked (and deserved it). As it was the coach chewed my ass big time. I deserved that, too. I felt badly and it served as enough of a warning for me to pay attention for the rest of practice rather than fantasizing about Jan and Marcie and me. \n\nWhat the hell was up with that anyway I had no business fantasizing about Jan but the fact remained that I did fantasize about her just as much as I did Marcie. I vowed to get my act together so it wouldn't ruin my shot on the team or screw things up at home. That resolve lasted all the way until I got home from practice. Marcie and Jan were at the kitchen table waiting around for me. They announced that they'd done an internet search and located a nude beach out on the coast. It was just over an hour away and they wanted to go that afternoon and since Marcie walked over to our place they wanted me to drive; so much for my resolve to get my head in the game.\n\nI didn't have any expectations for what might happen that afternoon. I hadn't even fantasized about going to the nude beach as I never thought the girls would really go for it. Still, I was a teenage boy and I was up for almost any hint of a sexual situation. I'm sure the girls had already discussed it but I wanted to talk about our outing while we drove over.\n\n\"Are you two really going to get naked over there?\"\n\n\"We'll just have to wait and see. We have no idea what it will be like over there.\"\n\nEven the possibility that they might get naked was plenty for me. Besides, I was learning that I liked being naked in front of them. I guess I really would just have to wait and see...or not see. Marcie was the one who had done the research so she gave me directions as we drove along. Finally we got to a spot where there were about fifteen cars parked along the side of the road. There was no proper parking lot but you could safely pull off.\n\nWe struck off towards the ocean through a bunch of dunes. I'd driven past here before but never had any idea that a nude beach was on the other side of these dunes. We broke through the last of them and came upon the beach. There was hardly anybody out there and the men outnumbered women by about four to one. To make matters worse, none of them were even close to our age. It's not that they were unattractive; they were just much older than us. \n\n\"Maybe it gets better further down this way,\" offered Marcie.\n\nShe led us off to the left and we walked closer to the water than the dunes. People were up closer to the dunes and they watched us with great curiosity. All of them were naked and by the deep bronze you could tell they spent a lot of time in the sun. The men watched Marcie and Jan with great interest. The girls were wearing gym shorts and bikini tops. They were probably the hottest things these oldsters had seen in a long while. Maybe it was different on the weekend. \n\nWe got past what seemed to be the last of them and we couldn't see anyone further down in the direction we were headed. A bluff of sorts blocked us from going any further down the beach anyway so we called a halt and spread out some blankets. Once we got our blankets and towels arranged there was nothing left to do but find out what everyone's intentions were.\n\nI pulled my shirt over my head and kicked off my shoes without bothering to untie them. The girls were wearing sandals so those came off quickly. We all kind of looked at each other and smiled uneasily. I moved first and undid the button on my shorts and drew the zipper down. Both Jan and Marcie watched. I figured there was nothing left to do but go for it and I let my shorts fall to the ground and I stepped out of them. I wasn't wearing underwear so once again I was naked in front of them. \n\nNow it was my turn to watch. Marcie moved first and stuck her thumbs in the sides of her gym shorts and eased them off her hips. She paused to rearrange the strings of her bikini bottom before letting her shorts slide off. Jan followed suit. Marcie had on a string bikini but Jan was wearing that same one with the tube top style that tied in the back. \n\n\"Are you really going to do this?\" Jan asked Marcie.\n\n\"Why not...it might be fun.\"\n\nWith that Marcie untied the back of her top and lifted it over her head. Seeing her tits again was really something. Hell, watching a woman reveal her breasts is always a thrill. Marcie looked to me for my reaction and I was able to sum it up in one word. \n\n\"Niiiice!\"\n\nIt wasn't eloquent but it was heartfelt.\n\n\"It's your turn, Jan.\" Marcie coaxed.\n\n\"Don't rush me...\"\n\nI felt some compassion for Jan as this wasn't the sort of thing you should be pressured into. Actually, it takes all the fun out of it if it isn't fun for them.\n\n\"Leave her be. If and when she's ready, she'll go for it. In the meantime, you've still got some clothes on. Are you going further?\"\n\nMarcie just smiled and reached for the little ties on her hips. She made a point oh slowly tugging at each one in turn and then continued with the last one to pull her bottoms away from her body. This revealed a small, neatly trimmed patch of pubic hair.\n\n\"At the risk of repeating myself...niiiiice!\"\n\nMarcie grinned and Jan just rolled her eyes.\n\n\"I can't believe you.\"\n\n\"Hey, it's clothing optional and I just chose to exercise the option. You don't have to.\"\n\n\"No fighting ladies...let's just get some sun.\"\n\nWith no more dialogue, everyone just stretched out on their towels. Both Jan and Marcie opted to lie on their stomachs but I chose to lie on my back. I liked the way the breeze felt on my cock and balls. And if the girls wanted to check me out I was fine with that too.\n\nJan untied her top once she was safely on her belly. There wasn't much conversation and everyone was alone with their thoughts. I wondered what the girls were thinking about but I was consumed with the fact that I was laying on a beach stark naked with a beautiful nude girl...and my sister...well step-sister. That was a very strange dynamic but far from unpleasant. \n\nIt was very peaceful listening to the waves crashing and that was only interrupted by some occasional small talk between the three of us...pass the suntan lotion...the tide is coming in...swells are getting bigger...there are plenty of birds down here... After about forty five minutes Marcie floated an idea.\n\n\"Is anybody up for a walk?\"\n\nThat raised the stakes a bit. We'd largely been left to our own devices down towards this end of the beach. There were a few people that had been walking along the water but nobody bothered anyone else. \n\n\"Sure...we could do that. Jan? Are you up for it?\"\n\n\"Why not?\"\n\nThat surprised me a bit. But what happened next surprised me even more. Jan just stood up without bothering to tie her top. I'll admit that in the last few days I'd imagined what Jan's tits were like and I wasn't disappointed. They weren't large but they were perfect for her frame and they were tipped with rock hard nipples. \n\nMarcie and I looked at each other and then she asked. \n\n\"Did you forget something?\"\n\nJan issued a simple reply.\n\n\"Nope.\"\n\nAnd that's all that was said. I'd have felt weird commenting on her breasts and she didn't want to make more of the moment than it was.\n\nWe walked down the beach the way that we'd arrived. The men really took notice in a more obvious way but the women were looking as well. It was a turn on to think that the women were checking me out. In truth they might just as easily have been checking out the competition as the girls drew lots of attention but nothing was said. We walked for about twenty minutes before turning around. The crowd had thinned out by that time. As we turned, Marcie and Jan talked about the men checking them out. They acted more amused than turned on but it had to have appealed to them. As we made our way back we noticed that some more people had arrived at our end of the beach but it was not what I expected. Marcie wasn't as surprised.\n\n\"Well, I guess they weren't kidding.\"\n\n\"Kidding about what?\" I inquired.\n\n\"The website we looked at said that when the waves were good that some surfers showed up here. They're more interested in the waves than the fact that it's a clothing optional beach.\"\n\n\"Well this is going to be interesting.\"\n\nThere were four surfers already in the water, three guys and a girl. On the shore were three more girls and a guy. Two of the girls were making no efforts towards going in the water while the remaining guy and girl were putting on wet suits. The water is quite cold here. \n\nMarcie hesitated.\n\n\"What if we know some of them?\"\n\nJan totally surprised me at that point.\n\n\"Who cares? At least they're close to our age.\n\nAnd with that Jan led the three of us the rest of the way. In fact, rather than continuing right along the water, she started moving us in a straight line towards our stuff which took us much closer to the group on shore. I don't know what got into her. I expected her to avoid eye contact and get back to our stuff as quickly as possible so she could put her top back on. Instead she called hello as we got close and stopped to chat with them. \n\nThe conversation wasn't terribly interesting; their reactions to us walking up to them were. Everyone tried to be cool and act like adults (whatever that means) but in reality everyone was acutely aware that some of us were naked. The guys tried not to stare but couldn't help themselves. The fact that Marci was completely naked scored attention points for her but Jan's new found confidence and taking the lead in the conversation made certain that she was getting equal eyeball time from the guys. \n\nI was content to let them all talk while I concentrated on the girls. They alternated their time between acting like they cared about the conversation, staring at my cock and looking at each other while stifling a giggle. There were a few times that they each looked up at me and gave me a shy smile. Now don't get me wrong. These girls were attractive and I would have loved to see them naked, but me being naked while they still had their clothes on was very exciting and it started to have an effect on my cock. I really didn't want to get hard on in front of everyone so I started to break things up and lead us back to our towels.\n\nWhen we got back to our stuff, Marci checked her phone and said that her mom wanted her to get back home. It was just as strange for everyone to get dressed in front of each other as it was for us to strip off. It had been an odd, but fun, afternoon. I was kind of disappointed that it was breaking up. I was fine with heading home but I was kind of hoping something might happen with Marci when we got back to the house. I hadn't given any thought to how Jan would react or what she'd be doing but I was certainly thinking that I'd like to fuck Marci.\n\nThe conversation as we drove home was as surprising as Jan's change in attitude had been on the beach. \n\n\"What the hell got into you back there, Jan?\" \n\nMarci asked the question that had been bugging me. \n\n\"When we got there you didn't even want to take your top off. By the time we were leaving I thought you were going to jump one of those guys.\"\n\n\"I was thinking about it. \" Jan giggled. \"I was pretty shy at first but I figured I should at least take my top off and try it. It was kind of a face my fears sort of thing. That happened again when we saw those guys. I was scared at first and then I decided I needed to push myself. It was a real rush to show my tits to those guys. I really wanted to strip off my bottoms in front of them but I couldn't think of a way to make it look like I was being anything but slutty. I suspect if I'd come up with something I'd have been naked in a flash. Then I would have grabbed one of those guys by the hand and led him into the dunes to fuck his brains out.\"\n\n\"Is this really the conversation you and to have in front of me...your brother?\"\n\nMarci was the first one to respond. \"Again with the brother crap?\" \n\nJan finally moved away from the \"ewww yuck\" position she'd taken up until now. \"Look, I think we can dispense with the standard brother and sister fa\u00e7ade. Siblings don't normally go to nude beaches together and we weren't struck by any lightning bolts. We live in the same house and our parents were married...that's all.\"\n\n\"I still think it's weird\". That was true but this discussion made me really horny.\n\nMarci's phone rang again and her discussion with her mom effectively changed the subject and ran most of the course of the way home. She took off as soon as we got home. \n\nFor my part, I was anxious to get to my room and jerk off. I had lots of fantasy material in my head. Jan headed into the kitchen while I headed for my room. I closed the door, immediately dropped my shorts and launched myself onto the bed. I didn't even bother to fire up any porn. I quickly developed an erection as I started stroking. Then there was a knock at my door.\n\n\"Not now.\"\n\nKnock, knock, knock...\n\n\"Go away.\"\n\nWithout waiting any longer, Jan opened my door and walked inside. And there I was on my bed with a hard cock in my fist.\n\n\"What the fuck?!?\"\n\nI tried to cover myself as I watched Jan walk right up next to my bed. She was wearing her bikini as she walked in but started to untie her top when she got to my bed.It came free and she tossed it on the floor.\n\n\"What are you doing?\"\n\n\"I'm getting naked and then we're going to fuck.\"\n\n\"Just like that? Shouldn't we talk about this? What happened to ew, he's my brother?\"\n\n\"Marci's right. We're not technically brother and sister. I don't think it's disgusting at all. It's pretty hot. I just didn't want Marci to know so you can't tell her anything about this.\"\n\n\"Don't I get a say in this?\"\n\n\"Are you saying you don't want to fuck me?\"\n\n\"I just think we ought to talk about it.\"\n\n\"Fine. Go ahead and talk.\"\n\nAs I started to gather my thoughts to start a discussion, Jan untied one of the strings of her bikini bottom and let them fall to the floor. That certainly stopped my train of thought and I was struck silent. She then crawled onto the bed, moved my hands away from my cock and began teasing it with her mouth. Licking at the tip before gently taking it in her mouth only to swirl her tongue all around, it was driving me crazy. All thought of trying to rationalize what we would or would not do went right out the window. Jan paid close attention to the tip of my cock but would then pause and take it deep in her mouth nearly getting to the base of my dick. After a time she came back up and started licking up and down the shaft.\n\nI expected her to keep her eyes closed. Actually that's not quite right. I expected none of this. In hindsight I found it curious that she didn't have her eyes closed. She looked up at me and sought out the eye contact that was at once awkward and yet incredibly sexy. Well, sexy from where I was. I can't imagine that the mix of emotions and thoughts running through my brain would result in my expression being anything close to sexy.\n\nI thought my cock was going to explode and Jan must have sensed this. She had another idea in mind. She backed down towards the end of the bed and encouraged me to slide down as well. Once my head was off the pillow she crawled back up and put her knees on either side of my head. There before me was my sister's pussy...step-sister's pussy...Jan's pussy. There was only a moment as I marveled at that before I devoted all my attention to giving her as much pleasure as I possibly could with my mouth and tongue.\n\nI licked and teased for as long as I could. \n\nMy jaw began to ache and I thought my tongue was going to cramp up. I don't know if Jan sensed this or if she couldn't take the teasing any longer. She climbed off my face and worked her way back down until her hips were above mine. My cock was standing straight up and she bent low so her chest was parallel to mine. This allowed her to rub her pussy lips against my cock with letting it penetrate her. I had a hard time believing that she might take that ultimate step. \n\nFinally she raised her shoulders back up, kept her left knee on the bed but brought her right foot up so her hips were higher than my cock. She reached down and grabbed my cock and placed the tip right against the opening to her pussy.\n\n\"Are you ready for this?\"\n\n\"Oh god yes..\"\n\nThen she slowly...ever so slowly...let her body sink down my phallus until I was as deep inside her as I could possibly go. Jan let out a long sigh as she traversed those eight inches. She raised back up just as slowly and let herself slide down again slightly faster than the first time. \n\n\"Oh...my...god...\" Jan exclaimed.\n\nI was beyond words. I was speechless. I had no idea what to say and feared that if I said anything she'd snap out of her reverie and run from my room. That concern was baseless as Jan was getting exactly what she wanted and all thoughts of right and wrong were gone from her mind. \n\nJan quickened her pace but it was still measured and methodical. She was in complete control. This wasn't something I could take. This would only work as something she chose to give. And that's the way it remained for what seemed like ages. In that time I finally came to accept that this wasn't me taking advantage of her or even her taking advantage of me. These were just two people giving themselves over to the moment and relishing what was happening between them.\n\nReleased from my inhibitions, I began to meet her thrusts more and more until finally I just flipped her onto her back. I spread her legs wide and pulled her hips down beneath me. This time I grabbed my cock at her slit and marveled at how taut her abs were beneath me. I slowly slid my cock deep inside her that first time. After that I maintained a steady pounding until I couldn't take it anymore. We both embraced that frenzied pace before waves of pleasure overtook us.\n\nAnd then it was over. In place of that relentless obsession with getting off was the awkwardness of \"what the hell did we just do.\" I collapsed on the bed and stared at the ceiling. It seemed like the silence went on forever but in reality it was less than a minute. It was Jen who broke the silence.\n\n\"Well, that was fun...\"\n\n\"Yeah, but...\"\n\n\"Are you gonna get weird about this?\"\n\n\"It's not about me getting weird. It IS weird, isn't it?\"\n\n\"Only if we let it be. Look, we had sex. We're not really brother and sister. We're both eighteen and neither one of us did anything against their will, right?\"\n\n\"I suppose, but...\"\n\n\"There you go with but again.\"\n\n\"It's just that...well, I guess I don't understand...how did this happen?\"\n\n\"Do you really want to analyze this? After being at the beach I was horny as hell and you were already in here with a hard on. The truth is this is all your fault.\"",
        "\"How is this my fault?\"\n\n\"You need to learn to keep your curtains shut all the way.\"\n\n\"What do you mean?\"\n\n\"I was perfectly content with the way things were around here but one day I saw you in here jerking off...\"\n\n\"Oh my god...\"\n\n\"Yeah...that was when I stopped thinking of you as my brother and more like a pretty hot guy with a nice cock.\"\n\n\"When did you start talking like this?\"\n\n\"You've got to stop thinking about me as a sister and realize that I'm a girl who wants sex as much as anyone else.\"\n\nWhy was I fighting this? Finally I surrendered to the ever popular rationalization doctrine of \"she let me so it's okay\".\n\n\"So what happens now?\"\n\nJan replied that she was going to take a shower and suggested I do the same. Then she promptly left my room. I sat there shaking my head for a moment and then headed into my own bathroom for a shower.\n\nSpring Break was over and we returned to something approaching normal. On Monday when we got home from school Jan sketched out her notion of how we should proceed.\n\n\"Nobody can know about this. I'm okay with this but I don't want to explain it to anyone else or give them a chance to pass judgment...not even Marcie. We both know there can't be any sort of relationship but if ever we feel like fucking there's no reason in the world why we shouldn't\".\n\nSomehow Jan had found a new kind of confidence. She was no longer unsure and between her vocabulary and her bluntness there was no confusion about what she wanted. I had no such confidence. I couldn't verbalize what I wanted but I was certainly willing to go along with her vision for a new normal. \n\nAs it turned out the norm was pretty awesome. When Jan, Marci and I found ourselves alone at the pool I got naked. Marci inevitably shed her bikini top and Jan maintained that it would be weird for her to get naked on any level but if her \"pervert brother\" wanted to be a nudie she wouldn't complain. There was some grab ass between Marci and I in the pool but it never went past that. When Marci left Jan would often grab me by the hand and lead me to my bedroom where we'd go wild until Lisa was due home.\n\nI loved being naked with the girls in the pool. It didn't matter if they were naked or not. I started going naked around the house much of the time when Lisa wasn't home. Jan never said anything about it. Sometimes she'd grab my ass or fondle my cock if I was within reach. She spent more time in tiny panties and tops that showed her midriff but she was never naked. I never grabbed at her as it was clear that she called the shots. Maybe I was just too timid since part of me still looked at this as \"wrong\".\n\nThis went on for the rest of the school year. There was a two week period that was much like spring break right after we graduated. Marci, Jan and I went to that nude beach about three times a week. Jan drew a distinction between being naked in front of other guys and being naked just in front of her brother for the sake of appearances with Marci. \n\nBeing naked when only her brother might see her was weird. Being naked at the beach when her brother happened to be there was fine. Marci bought into that and all three of us would get naked as soon as we hit the beach. We'd go for walks from time to time and Jan always was on the look out for the guys that were there just for the surfing. She loved walking up to them and engaging them in conversation while we were buck naked. She seemed to revel in both the stares she got and the awkward attempts the more shy guys made at not looking. \n\nWe couldn't wait for Marci to head home once we got back to the house. We immediately made a bee line for my room and a fuckfest ensued. Jan always got very horny when we went to the beach. \n\nThis came to an end after two weeks because Marci took off for college. Obviously school wasn't starting for a couple months but she had gotten a job there. She and Jan were going to share a place but Jan wasn't leaving for a few more weeks. \n\nAfter Marcie left for college, Jan and I had no restrictions so long as Lisa was at work. We always started our afternoons out in the pool only now she was fine with being naked too. Also we didn't feel the need to restrict our fucking to my bedroom. It was lots of fun to turn the pool area into our sexual playground too. \n\nThis went on for a couple of weeks and it was amazing. There was only a week remaining before Jan would join Marcie at their college apartment. On this particular Friday we'd spent the afternoon fucking until we were completely sated. As had become my custom I stayed naked until about half an hour before Lisa was due home from her shift.\n\nI walked naked down to Jan's room to chat for a while safe in the knowledge that Lisa wasn't due home for about ninety minutes. Jan had some music playing that I learned was drowning out other sounds in the house. We decided some ice cream would be good so we started heading for the kitchen. I was walking backwards out Jan's door and down the hallway so we could face each other as we talked. I was a few feet down the hallway as Jan cleared the door to her room and turned down the hall. A rather shocked look appeared on her face so I turned to see what surprised her. There stood Lisa and she had a rather shocked look on her face as well. \n\n\"What the fuck?\"\n\nI had no words to reply to Lisa's exclamation. What the hell would I say anyway? I instinctively threw my hands over my cock. The good news was that Jan thought pretty quickly and had a story.\n\n\"It's not what you think. Dan has decided to try out becoming a nudist and has started going naked around the house most of the time.\"\n\nHey, that was a plausible excuse and it was better than having to admit that Jan and I had been screwing around. Still I hadn't had time to give any thought to the implications of that excuse.\n\n\"Is that true, Dan?\"\n\n\"Uh, yeah...it kinda is...\"\n\nLisa seemed to buy into this right away. \n\n\"You should have felt comfortable telling me about this. You don't have to hide this. You should feel free to be naked around here all the time if you want...unless there's some reason you'd only want to be naked in front of Jan and not with me.\"\n\nAnd there it was...the catch to the story that Jan came up with. If I was truly just trying out the nudist lifestyle there should be no reason why I wouldn't be naked in front of Lisa too...unless it made Lisa uncomfortable.\n\n\"I wouldn't want you to make you uncomfortable, Lisa.\"\n\n\"It's not a problem for me. When I was younger I went to a nude beach fairly often so I can understand why you could be attracted to being naked.\"\n\n\"Are you sure? I wouldn't want it to be weird for you.\"\n\n\"It would be unusual but not uncomfortable. Not many people choose to be naked all the time but there's nothing wrong with it at all. And it might be fun to have a naked man around the house.\"\n\n\"Mom!\" Jan was shocked by her mom's statement.\n\n\"Relax, Jan. I'm just trying to make light of an odd situation. Are you saying you don't like seeing naked men?\"\n\n\"Well, yeah, but he's kind of your son.\"\n\n\"He's as much my son as he is your brother and you seem to be okay with him being naked.\"\n\n\"Well yeah but...\"\n\n\"It's the same thing and there's nothing wrong with it so long as everyone is okay with it. Obviously you're fine with it. I have no problem with it and since Dan wants to see what being a nudist is like then he should feel free to be naked all the time. You're okay with it, right Dan?\"\n\nThere was really no reasonable way for me to back out now so I said I was good with it.\n\n\"Okay, it's settled then.\" And Lisa put an end to the discussion.\n\nI made the lame excuse that I'd just been getting ready to take a nap before dinner and scurried off to my room. When Lisa called me for dinner I said I wasn't really hungry. We all knew that was bullshit but it was accepted as reasonable that I might need some time to get used to this new paradigm. \n\nAnd that turned out to be true. I spent a fair amount of time reviewing how I got myself into this situation. This hadn't been my goal. In fact I hadn't had a goal. It had all happened so gradually. Well, except for that first time I stripped and jerked off for Jan. I don't think I could argue that a significant line hadn't been crossed there. \n\nI had been pleasantly surprised at how things developed with Jan. I hadn't ever expected to have sex with her but she made that decision on her own and I wasn't about to argue. Now after finding me naked with Jan and Jan offering up the nudist excuse, which saved us from the obvious conclusion that we'd been having sex, Lisa had taken control of the situation and paved the way for me to be naked all the time.\n\nAnd so now I was committed, at least for a while. There was really no reason not to be naked in front of Lisa and Jan both. I figured I'd have to maintain this charade for at least a couple of weeks to add some credibility to the story and not have it be about being naked with just Jan. After she went to school I could do it for another week or so and then say that I was done with that experiment and things could go back to normal. \n\nI awoke the next day with the usual morning wood. I knew there was no way my dick was going to go down until I'd pissed. This was another of those times I was very glad I had a bathroom attached to my room. As I peed I considered what was just ahead. I was going to be walking out into the kitchen without a stitch of clothing on and very likely both Jan and Lisa would be out there. \n\nI tried to decide how I felt about that. \n\nOn the one hand I'd never considered exposing myself to Lisa and I hadn't made the choice to \"be a nudist\". I expected nervousness would have caused my erection to disappear. The fact that it didn't go away entirely gave me a clue as to how I really felt about this. Could it be that I was looking forward to being naked out there?\n\nI didn't ponder it much longer and soon found myself walking out of the bathroom and then right out my bedroom door. \n\nI headed to the kitchen before I allowed myself to think about it. I no longer had an erection but I wasn't flaccid either. I could hear Jan and Lisa talking as I neared the kitchen. Jan stopped mid sentence as I rounded the corner. She was sitting at the table and had her back to Lisa who was cooking at the stove. \n\nJan broke into a wide grin as she saw me having to take this action as a result of the cover story she threw out there the day before. Since Jan had stopped speaking, Lisa turned from the stove and saw me walking in naked. Jan said nothing but Lisa offered a cheerful good morning. There was no trace of embarrassment on her face. She acted as if it was perfectly normal for me to walk in starkers.\n\n\"Mornin', Lisa\".\n\nI didn't feel the need to say anything to Jan.\n\n\"I'm making scrambled eggs. Would you like some?\"\n\nI said yes and thanked Lisa before getting a cup of coffee and taking a spot at the table. Nothing was said about my state of undress. \n\nBreakfast conversation centered mostly around our plans for the day. Typically we went our separate ways on the weekend. This weekend was different in that Jan and Lisa were headed out shopping to get some final things Jan would need when she left for college the following Saturday. Lisa suggested a few things I could do in the garden if I felt inclined. I stayed non-committal about that. In truth, I couldn't wait for them to leave so I could return to my room to jerk off.\n\nI finished my breakfast and got up to clear my plate from the table. Neither Lisa or Jan were finished. I rinsed my plate and put it in the dishwasher. I poured myself another cup of coffee and then it occurred to me that I should see if they wanted more. They said yes so I walked over with the pot and topped off their cups. I would have loved to pay more attention to their faces but I was focused on making sure I didn't pour coffee on them. With no more reason to linger I grabbed my cup and retreated to my room.\n\nWhile waiting for them to leave on their shopping trip I had time to think about this new dynamic. Jan was obviously enjoying the awkward situation. Lisa acted as if it was perfectly natural for me to be naked around the house. Was she really that unaffected? Honestly I was pretty disappointed that the sight of my cock wasn't worthy of more of a reaction. And what about me? I had to admit it was kind of a rush to be the only one naked in a room with clothed women.\n\nBeing nude in front of Jan was no longer a novelty but it was very new with Lisa. It was something of a let down that there was so little reaction from Lisa. Did she really buy into the myth that there was nothing inherently sexual about nudity? That had to be bullshit, right? I suppose that there are those that feel that way but come on! Either they or I are part of the lunatic fringe and I really didn't think it was me. \n\nThe rest of the week was oddly uneventful. There were more times when the three of us were together and I was naked. There was no change in their attitudes. One nice thing was Jan and I took every opportunity to fuck due to her impending departure. It's really not the sort of thing you can stock up on but I sure wasn't going to complain.\n\nSaturday morning rolled around and it was moving day for Jan. She didn't have all that much that she was taking but I went along to help move boxes and take care of the heavy stuff. It took about ninety minutes to get to Jan and Marcie's apartment. Shuttling the boxes inside didn't take all that long and so we were soon faced with goodbyes. Lisa suggested that I wait in the car as she wanted to talk with Jan. She said it was a mom/daughter thing. Jan and I shared a brief, awkward hug and I retreated to the SUV. It was only about ten minutes later that Lisa came back to the car. Her eyes were a bit red and misty.\n\n\"Are you okay?\"\n\n\"Yeah, it's just tough having Jan move out.\"\n\nIt's never easy for a guy to deal with a crying woman and I had virtually no experience with it so I made what I hoped sounded like a sympathetic grunt. Lisa didn't say anything. She just wiped her eyes one more time, put the car in gear and we started home.\n\nNow I was faced with a ninety minute drive with a weepy woman and I began to regret my decision to help with the move. Lisa broke the silence.\n\n\"So, what shall we talk about?\"\n\n\"I don't know. What do you want to talk about?\"\n\nLisa soon made me regret not coming up with a topic.\n\n\"Normally I'd ask what's new with you but I already know the answer to that. How are you feeling about your foray into nudism?\"\n\n\"Wow...uh... I don't know. Fine, I guess. It's still pretty new to me.\"\n\n\"How did this come about?\"\n\nJan and I had never really fleshed out a back story to this. I didn't quite know how much to involve her in this. Of course, she never discussed the idea of me being a nudist as a cover story either.\n\n\"I was home alone one afternoon and the idea of swimming naked popped into my head. I found I really liked the feeling of freedom it gave me and it kind of took off from there.\"\n\n\"When did Jan get involved?\"\n\n\"I don't know that I'd say she's involved, but she's okay with it. She came home early one day while I was out in the pool. I heard her come in but there was no way for me to get out of the pool and get covered before she saw me. I hadn't thought about what to say if I got caught. I figured the explanations were either that I was some kind of pervert or that I was a nudist and nudist won. Jan seemed pretty cool with that and said it was fine with her. At that point I figured if I backtracked it would seem like the pervert thing was closer to the truth so I started going nude more and more often. It turned out to be not that big a deal so I've stuck with it.\"\n\n\"That kind of repeated itself when I came home early, didn't it?\"\n\n\"Well, yeah, I guess it did.\"\n\n\"There's nothing perverted about being naked. I've been to nude beaches and I've also been known to swim naked in our pool, too. You don't have to worry about me judging you. If you want to be naked around the house, that's great. If you just want to skinny-dip sometimes, that's cool, too. If you want to go back to wearing clothes, I have no issue with that either. Heck, there are times I don't feel like wearing clothes so if the house became kind of a no judgment zone where we could do as we liked, I'd be fine with that.\"\n\nAnd so there was my out...if I wanted it. The question now was if I really wanted that. I knew I liked being naked around women whether they were clothed or not. It had been odd being naked in front of Lisa at first. If I'd had the option of bailing from \"being a nudist\" right away I'd likely have jumped at it. \n\nNow I wasn't too sure. And now Lisa said she sometimes felt like being nude. Would she do that in front of me? Did I want that? She's not really my mom and has never felt like it. It's more that she was my dad's wife though they never seemed like that much of a couple in front of Jan and me. I liked the idea of a no judgment zone but I know that if I was a sometimes naked person than I'd feel like my motives would be questioned every time I was nude regardless of how Lisa felt. If I was a nudist and sometimes I was seen with clothes on that wouldn't be a big deal.\n\n\"I guess being naked at home has been fine with me so as long as you're okay with it...\"\n\n\"I think it's great if that's what you want to do. Whatever you want is fine with me. Like I said, I spent a fair amount of time at nude beaches so it's not a problem for me at all.\"\n\n\"Okay, I guess that's settled then.\"\n\nTalking about this was just too weird so I took this opportunity to change the subject. The rest of the drive was mercifully uneventful. When we got home I disappeared into my bedroom. All the sex talk, even though it wasn't really sex talk, had gotten me quite excited so I pulled up the video of me jerking off with Jan peeping in my window and masturbated.\n\nOnce I cleaned up I played video games for a while and then dinner time rolled around. There was no need to dress for dinner or anything else for that matter so I walked out to the kitchen. Of course I'd been naked in front of Lisa a fair number of times by then but it was the first time when it was just the two of us. I was wondering if it was going to be awkward. Any awkwardness would have been on my side as Lisa took it very much in stride. I guess I was a little disappointed that Lisa really was nonplussed by the whole thing. \n\nIt was pretty hot out so we decided on just having a big salad. Conversation was light and came easier than I would have thought. Then came a topic from Lisa that I'd never considered.\n\n\"You know, we've never talked about how you want to handle things when people visit here.\"\n\n\"I haven't given that any thought. I suppose I'd hang out in my room or maybe put some clothes on. I don't want to freak anybody out.\"\n\n\"You shouldn't have to hide in your room or worry about people being freaked out. If someone just drops by for something quick then it makes sense for you to wait in your room but if it's someone that's going to spend any amount of time here then they should respect that you prefer to be nude at home. Marci spent a lot of time here. It must have come up at some point.\"\n\nOnce again I opted for making up a back story.\n\n\"Well, yeah...Jan and Marci came home early one day when I was out in the pool and found me naked. I think Jan was a little embarrassed at first but Marci thought it was cool. The next time Marci was here I just came out of my room naked. I guess part of it was to mess with Jan but I also liked how Marci reacted. If people aren't going to be freaked out then I don't mind being naked even if I'm the only one.\"\n\nLisa chuckled a bit as she considered my response.\n\n\"Mostly when I've been nude around other people it was at a nude beach and I wasn't naked alone but there have been a couple times when I've been the only one naked with other people around and I rather enjoyed it too.\"",
        "That was something of a revelation to me. No, that was quite a revelation to me.\n\n\"Wow, really?\"\n\n\"Yeah, really. I wasn't always this old.\"\n\n\"No, it wasn't an old thing. You're not old at all. It's just you and Dad... He never seemed... So I thought...\"\n\n\"It's true your father wasn't exactly the adventurous type but he was a very good man. Not to gross you out, but he was also damned good in bed. I miss him...for a lot of reasons. It's been a long while.\"\n\nThat brought about an awkward pause that was finally broken by Lisa.\n\n\"Well, this has taken a rather gloomy turn. You go on with your evening and I'll clean up in here. There's not much to do since we just had salads.\"\n\nI was happy to escape. It had been a very odd conversation. It wasn't just the topics of discussion. Lisa and I had never spoken like that. She had always been just Dad's wife and only marginally at that. They had never seemed like a real couple and now I was just beginning to think of her as a person on her own.\n\nLisa and I didn't see all that much of each other as we mostly kept different schedules. Between her work schedule and my baseball practices we just weren't home at the same time all that much. About three weeks went by and we'd shared a few meals and had a number of conversations but nothing more. One of those infrequent conversations happened on a Monday. We chatted about pretty mundane things for a while but then things got interesting.\n\n\"Have you heard of a nude beach out on the coast?\"\n\n\"Yeah, I'm familiar with it.\"\n\n\"So you've been there?\"\n\n\"I've been there a few times.\"\n\n\"What's the crowd like out there?\"\n\n\"It really depends on when you go. There are always more guys than women. It's more crowded on weekends. There aren't a whole lot of young people out there that go nude but there's a young surf crowd that hangs out from time to time. I guess the waves are often better there than other places on the coast. Why do you ask?\"\n\n\"Well, you know I used to visit nude beaches but I haven't been to one here. You dad wasn't into that sort of thing and I haven't found any of my friends that are open to it. Your interest in naturism has got me thinking about it again.\"\n\n\"You should check it out. It's a pretty nice beach.\"\n\n\"I'd like to but I'm really not comfortable going out there by myself.\"\n\nThere was a pause before Lisa continued.\n\n\"And like I said, none of my friends have seemed open to going.\"\n\nI wasn't about to say anything. I thought I knew where this might be leading but I didn't want to suggest it.\n\n\"Do you think maybe we could...I mean, would it be too weird if...\"\n\nI don't think I'd ever seen Lisa blush and she was always so confident. She seemed quite vulnerable and I found it appealing. It was appealing enough for me to bail her out and put myself out there for a change.\n\n\"Are you saying you'd like me to take you to the beach?\"\n\n\"Well, yeah...I guess I am. I'm fine with it but I wouldn't want you to be uncomfortable.\"\n\nI hadn't ever given any thought to this possibility. I really didn't consider Lisa a mom figure at all anymore. I hadn't for some time. The fact that she really didn't look like a mom helped me get past that. Okay, that didn't come out right. Lots of moms are very sexy. It's just the stereotypical mom... Oh, hell...You know what I mean.\n\n\"I guess I wouldn't be much of a nudist if I had a problem with anyone else being at a nude beach. Sure, we could go to the beach sometime.\"\n\n\"How about we go Thursday? I'm off from work and you don't have practice, right?\"\n\nWow. I thought I was agreeing to the abstract notion that some day we might go. I wasn't really thinking we'd go almost right away. Still, I couldn't think of an excuse not to go.\n\n\"Uh, sure...we could go Thursday.\"\n\n\"Great. This should be fun. It's been far too long.\"\n\nSo I had a couple days to think about it...and maybe chicken out. It occurred to me that I'd never even seen Lisa in a swimsuit. Somehow in the few years we shared the same home she was never out in the pool with us. In just a couple days I would be seeing her in even less than a swimsuit.The mind of a teenage boy can be quite active and now I had some real fuel.\n\nLisa had stayed very trim and looked more like she was in her mid-thirties rather than early forties. She never wore clothes that were terribly revealing but when she wore shorts I could see that her legs had very good tone. I had no idea what to expect when she shed her clothes but I had to admit I was looking forward to it.\n\nThursday finally arrived and we decided we'd leave the house about eleven. Lisa had our towels, sunscreen and some trail mix packed in her beach bag and I carried a small cooler with some drinks. There weren't too many people around as Lisa followed me towards the spot where I'd been with Jan. We arranged our towels and other things and then realized we'd run out of tasks to delay shedding our clothes. \n\nIt was easy enough for me to make the first move as I'd been naked in front of Lisa many times before. I dropped my shorts and stepped out of them and then tried to give Lisa a bit of privacy by looking away. I was trying to be respectful and she didn't need some kid gawking at her. I knew there'd be plenty of time to see her. She was wearing a baggy t-shirt and some khaki shorts. Lisa pulled the shirt over her head and revealed a blue bikini top. Her breasts were firm and proportional to her petite form. I was very pleasantly surprised to see how toned her stomach was. One would never know given the way she dressed.\n\nShe untied her bikini top and dropped it on her towel. Her nipples were hard and stuck out like little eraser heads. It didn't register with me right away but she didn't have tan lines up top. She undid her shorts and stepped right out of them. Her bikini bottoms were brief...very brief. She made no move to remove them.\n\n\"It's going to take some time for me to get comfortable getting totally naked again. I hope you don't mind.\"\n\n\"Not at all...do what you want when you want.\"\n\nShe then slowly turned around in a circle and asked me what I thought. There was hardly any material covering her ass and it was amazing. It was shapely and toned and again there was no sign of tan lines.\n\n\"You look great\"\n\n\"For a woman my age right?\"\n\n\"No, you really look great. There are no qualifiers to be added. Is it creepy if I say you look damned hot?\"\n\n\"I suppose it would be kinda creepy if we were going to cling to the idea that a mother/son thing exists but we're not going to do that, are we?\"\n\n\"I'm willing to try that.\"\n\nWe then settled down on our blankets and soaked up the sun for a good hour. The conversation wasn't provocative or anything and things seemed almost normal. Well, it was normal except for the fact that I was lying next to my nearly naked, not really my mom and I didn't have a stitch on. Other than that it was totally normal. \n\nAfter that hour Lisa suggested we take a walk so she could see the rest of the beach. I agreed and then began to tell her what to expect as we started to walk.\n\n\"We'll likely find a fair number of people who go completely nude here. Mostly they'll be older guys. One thing that may surprise you is that there are often younger people that don't necessarily get naked. The surf is good here so there's a group of late teen/early twenties that come down here to surf. They don't seem to care one way or the other if people are naked.\"\n\nSo we headed north along the beach sticking to the wet sand near the ocean. \n\nIt was a very pleasant day with temps in the low 80s and just a hint of a breeze. We passed a fair number of what one would assume were beach regulars. They were all nude and there was not a tan line to be seen. None of them were terribly young. We were able to walk about three quarters of a mile up the coast before we turned around and headed back to our towels. About half way back I saw that a group of young surfers had arrived at the beach. They were setting up their spots and getting into their wetsuits.\n\n\"Are you ready for this?\" I asked Lisa.\n\nShe'd seen them and knew just what I was talking about.\n\n\"Sure, this should be fun.\"\n\nRather than hugging the waterline, Lisa led us onto the dry sand and closer to the group of surfers. There were four guys and two girls. Their preparations for the surf slowed as we grew nearer. The guys tried to be cool but they made sure they got a good look at Lisa. She was certainly worth checking out. \n\nThe girls gave me the once over as well but they were much more circumspect. I still got a real charge out of it. Lisa gave them a wave and said hello as we passed. They returned her greeting and I waved as well.\n\nOnce we got out of earshot Lisa let her feelings be known.\n\n\"God, that was fun. I haven't done anything like that in years.\"\n\n\"I know the guys sure appreciated it. The ladies they typically see here aren't as young as you and not nearly as hot.\"\n\n\"You think I'm hot?\"\n\n\"Well, I could try to be coy and cool but the fact of the matter is that you're very sexy, Lisa.\"\n\n\"Thanks. It's good to hear that I can still get a rise out of guys.\"\n\n\"There is no still. You're a very good looking woman.\"\n\nWe got back to our towels and had a drink and a small snack before returning to our prone positions to soak up more sun. After another hour or so Lisa suggested we go for another walk.\n\n\"We can do that. I suppose you need to decide what you want to do though.\"\n\n\"What do you mean what I want to do?\"\n\n\"Are you going to lose those bikini bottoms for this walk?\"\n\n\"I hadn't given that any thought.\"\n\n\"Really? You hadn't considered being totally naked for those young guys?\"\n\nSome color was starting to rise in her cheeks as she realized that I had guessed what had been running through her head as we lay in the sun.\n\n\"No, of course not.\" \n\nThat's what she asserted but there was a hint of a smile on her face. I suspect she'd thought of little else since we passed those guys.\n\n\"Suit yourself.\"\n\nAnd so we started our walk along the waterline again. When we reached the part of the beach where the surfers were we found all four of the guys sitting on their boards out in the water waiting for a suitable wave. As we passed their attention was less on the water and more on the shore as their eyes followed Lisa. Little was said as we continued our walk until we reached the spot where we'd turned around before. Heading back towards our towels we could see that the surfers had ridden waves into the shore and were returning to the girls waiting with the towels and such.\n\n\"You know they got out of the water just so they could get a closer look at you, don't you?\"\n\n\"You're crazy.\"\n\n\"Am I? Look at those waves. Conditions are still great.\"\n\n\"Do you really think so?\"\n\nI don't know where my boldness came from. All my confusion about Lisa being in a pseudo mom role was gone. I was just thinking about Lisa as a woman...and a very sexy one at that.\n\n\"When they get home, each one of those guys is going to masturbate thinking about you and they want to drink in every image of you that they can.\"\n\n\"They probably all have girlfriends. They don't want to jerk off thinking about some old lady.\"\n\n\"They won't be jerking off to some old lady. They'll be remembering the extremely hot lady they had the good fortune to see on the beach today.\"\n\nWe were getting closer to them and you could see that they were all looking in our direction. We young guys are not the most subtle of creatures. We had gotten to within about thirty yards by this time.\n\n\"Take off those bikini bottoms and give them to me.\"\n\n\"You're nuts. I'm not going to do that.\"\n\n\"You want to. And when we get home all you're going to think about is missing the opportunity to be naked in front of them if you don't.\"\n\n\"If I did that now they'd know it was purely for their benefit that I stripped off.\"\n\n\"Right. And can you imagine how hot that would be for them? And if you were honest with yourself you'd admit how hot it would be for you, too.\"\n\n\"I don't know...\"\n\nIt was interesting how she had moved from no way to I'm not sure. I don't know how I sensed what she was feeling but I knew she wanted to do this but didn't want to admit it or make it seem like it was her idea.\n\n\"Those guys are dying to see you naked. They want that for their fantasy. Just picture them lying on their beds naked, stroking their hard cocks and thinking about you the whole time. How often do you get to help someone's fantasy come true. Make this happen for them. Let this happen for you. Give me those bottoms.\"\n\nStill she hesitated but she didn't say no. She was looking at them and they were looking at her. She turned to me and I just nodded in encouragement. She looked back at the guys and then slowly hooked her thumbs under the strings of her bikini and slowly slid them off her hips and let it fall to the sand. With her bottoms removed I could see that she did have some tan lines but it was just about the smallest triangle you could imagine. She kept a short landing strip of pubic hair that was very sexy. She stepped out of the bottoms, reached down and picked them up and handed them to me.\n\nYou could see the jaws drop. The girls looked from her to the guys and back to her. Their faces registered the anger that Lisa had grabbed all the attention but they were powerless to do anything about it. Now that Lisa was naked we continued our walk and passed close to them. There was a bit more sway to her walk and you could see that she was enjoying the attention. Nobody said a word.When we got back to our towels, Lisa finally spoke.\n\n\"That was amazing. Let's go home. My work here is done.\"\n\nConversation on the way home centered around the reactions of the guys and how empowered Lisa felt by the effect she had on them. When we got back to the house we unceremoniously dumped everything in the garage and walked into the kitchen. I was pretty uncertain what would happen next. Lisa was in front of me but stopped and turned.\n\n\"Are you as horny as I am?\"\n\nI was pretty shocked by that question. It was logical that we'd both be feeling that way but I never thought it would be acknowledged. Since she brought it up I figured I'd go with it.\n\n\"I don't know...I'm pretty horny.\"\n\nLisa began to slowly remove her clothes. Being the \"resident nudist\" you would think I'd strip as well but I was frozen.\n\n\"Are you going to be one of those guys that lies on his bed and strokes his cock thinking about what he saw this afternoon?\"\n\n\"Ummm...\"\n\n\"I've got a better idea. How often do you get the opportunity to help someone's fantasy come true?\"\n\n\"Er, what fantasy is that?\"\n\n\"Take off those shorts.\"\n\nI hesitated a bit. I'd been naked in front of Lisa before but I was halfway to a full erection. Still, I complied with her instruction.\n\n\"Now I want to see you stroke that cock until you're big and hard.\"\n\nI couldn't believe Lisa was saying that but I was powerless to resist. It took about two and a half strokes until I was as hard as I'd ever been. Lisa closed the three feet separating us and raised her lips to kiss me as she grabbed my dick. The kiss was soft and tender at first but soon became hard and passionate. Lisa then slowly dropped to her knees and began to kiss and tease my cock. She looked up at me and made full eye contact as she explored my dick. A woman that makes eye contact as she blows me is one of my favorite things in all the world.\n\nI was determined not to cum until I'd given her an orgasm so I reached down and guided her to a standing position. I then began kissing her and advanced on her until she'd back up to the kitchen table. It was natural to help her up onto the table so I could kiss my way down to her tits and tease her nipples before reaching her pussy. I loved teasing her with kisses and licks and probing fingers. It didn't take long for her to tense up and shudder as she climaxed. I just had to fuck her though. \n\nSeeing Lisa lying on her back with her legs spread beneath me was incredible. I positioned the head of my cock at her entrance and ever so slowly penetrated her until she'd taken every inch of my cock. It was amazing to watch the look on her face as I entered her. I took it slow as our hips joined again and again. The height of the kitchen table made things awkward so the next time our hips met I stopped and lifted her off the table and we sort of tumbled to the floor. It was not the most graceful move in the world but it got us to a place where we could more easily screw each other's brains out.\n\nLisa made a noise and stopped us for a moment. She turned over and got on her knees so I could take her from behind. This was great fun, too. I couldn't believe this was happening. As we continued she began to lower her abdomen closer to the floor and stick her butt higher and higher in the air. \n\nThere I was taking her from behind and staring at that little rosebud. I took a chance, licked my thumb and began massaging her asshole. I didn't go for it right away. I tried to make it seem like accidental contact at first but when she didn't object I'd massage it a bit, move away and then return to it a bit later.\n\n\"You'd better be careful.\" I finally said.\n\n\"Careful about what?\"\n\n\"I'm getting a hell of a view back here.\"\n\n\"I don't mind.\"\n\n\"I don't think you understand. If you keep sticking your ass in the air like that I'm going to want to shove my cock in it.\"\n\nLisa chuckled.\n\n\"I don't think YOU understand. I want you to shove your cock in my ass.\"\n\n\"Really?\"\n\n\"Yes really. Get the vegetable oil out of the cupboard. I've got lube in the bedroom but I can't wait to feel you in my ass.\"\n\nI had no idea that Lisa was this nasty. For that matter, I had no idea I could be this nasty. I'd certainly never done anything like this before. \n\nI grabbed the oil and started by pouring a bit on her asshole and my thumb and then went back to fucking her pussy while I slowly worked my thumb into her ass. She was incredibly tight but she relaxed more and more. Finally I pulled out, oiled up my cock and prepared to take her ass. \n\nI edged in a bit, backed out and then worked in a bit further each time. Lisa let out a deep moan as I got deeper and deeper. After I'd gotten a ways in I stopped and let Lisa control the tempo. She thrust herself back and forth on my cock. I couldn't believe the sensation as she was so tight. \n\n\"I'm having a hard time holding off. I'm going to cum pretty soon.\"\n\n\"Go ahead. You can come inside me or shoot it on my back. Do what you want.\"\n\nI was trying to decide which was the more respectful way to approach this, which is an odd thing to consider when you already have your cock in your step-mom's ass. The decision was taken from me though as at the end of a thrust my dick suddenly erupted in the most intense orgasm of my life. Lisa let out something like a cross between a squeal and a moan. We then collapsed on the kitchen floor and tried to catch our breath. I was the first to speak.\n\n\"I sure never expected that to happen.\"\n\n\"Me neither but I wanted it to ever since you started running around here naked.\"\n\n\"If I'd known that I'd have become a nudist long ago.\""
    ],
    "authorname": "largefan",
    "tags": [
        "fantasy",
        "reality",
        "nudist",
        "nudity",
        "nude",
        "naked",
        "exhibitionist",
        "exhibitionism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/unintentional-nudist-pt-02"
}