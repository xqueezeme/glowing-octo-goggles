{
    "title": "It Didn't Happen",
    "pages": [
        "The author asserts the moral right to be identified as the author of this work.\n\nThis is a work of fiction. The events described here are imaginary; the settings and characters are fictitious and are not intended to represent specific places or living persons.\n\n*****\n\nI was sitting outside Marco's uncle's caf\u00e9 in Naples late on a balmy summer evening. \n\nMarco and I had a standing joke. As usual he asked me:\n\n\"Roger, are you still wearing long socks?\"\n\n\"Of course. You know why.\"\n\n\"They'll get you into trouble one day.\"\n\nThat exchange happened every time Marco and I met. So far my long socks had kept out of trouble.\n\nI hadn't expected to be in Naples again so soon. I had stayed with Marco over the New Year, and he had visited me in England at Easter. We had thought, now that we had completed our advanced specialist training that we would not see each other again soon. But my father had pulled some strings. He had been sent to Aden for a few weeks on business and had arranged for my mother and I to meet him in Cairo, with a free flight on an RAF transport plane.\n\nHe had found 1st class cabins for us on a Dutch liner returning from Indonesia. We had joined the liner at Port Said and Naples was the next port.\n\nThe ship, or at least the 1st class part of it, was under occupied. I had spent most of my time on board in and around the swimming pool. The only people near my age were the stewards and stewardesses who had plenty of free time with so few passengers. I had enjoyed their company and had improved my few words of Dutch into some proper conversations, even if they preferred to practise their English.\n\nMy parents had arranged to visit Pompeii and Herculaneum before going on to another of Marco's relations for a sumptuous meal in Amalfi. I had seen too many Roman remains on my several visits to Italy over the years we had known Marco's family.\n\nOn the other side of the square there was a commotion. I heard a woman swearing loudly in Dutch and obviously upset. I stood up to see a tall young blonde woman being teased by some local men. One would pinch her bottom and when she turned around, another would pinch again. It might have been harmless fun between friends, but her distress seemed genuine. \n\nIf she had been local I would have ignored her predicament. But a Dutch woman must be from the ship. I crossed the square, not noticing that Marco was close behind. As I reached her, I could see that she was crying.\n\nI shouted, in Italian, at the men, telling them to leave her alone. One of them turned to challenge an obvious foreigner interfering with an Italian male pursuit. What he might have said or done stuck in his throat. I was angry, and my size can be intimidating. I am tall and muscular.\n\nMarco added a few words, quietly in the local dialect. He knew the man and addressed him by name. I understood Marco to say that the joke had gone too far and his English friend was not someone to challenge. I had brushed the men aside and put my arm around the woman's shoulder, telling her, in Dutch, that she was OK now, she was with friends.\n\nAs I started to speak Dutch she relaxed. When she recognised me as a passenger she threw herself into my arms and cried on my shoulder. I half-carried her across the square back to our table. Marco said a few more calming words to the men before following us.\n\nI recognised the woman as the baby of the stewardesses, probably about nineteen or maybe twenty years old. At twenty-eight I felt ancient holding her. She wouldn't let me go and I sat down with her on my lap. Her words were very slurred, so indistinct that I had some difficulty understanding her.\n\nMarco ordered some black coffee. I had to hold the cup while she sipped it. Gradually she calmed down. Apparently she had been with a group of stewards, including her brother. This had been her first voyage and she had never been to Naples. The stewards had been to several bars and had bought her several drinks before they decided to go to a night club. They were told that it was for men only. She didn't want to spoil their evening so she thought she could get a taxi in the square. But the men had started pinching her and wouldn't stop...\n\nI explained to Marco in Italian.\n\n\"Stupid brother!\" Marco said. \"This is Naples. A woman out this late, on her own, is considered fair game. He should have known better. What are you going to do with her, Roger?\"\n\n\"Try to sober her up. I think she has had more than a few drinks and possibly stronger than she expected. Then? A taxi?\"\n\n\"No taxi. They charge the earth at this time of evening. I'll run you two back to the ship - as long as she isn't sick in my car. Do you think more coffee would help?\"\n\n\"I don't know.\"\n\nThe woman whispered in my ear.\n\n\"Marco,\" I said, \"She needs a toilet. Is your sister around?\"\n\n\"No. She's with our parents. And my uncle doesn't have any women staff working evenings. Can you get her to the back of the restaurant? There's a staff toilet that would be more discreet than the customers' one.\"\n\n\"I can try. At worst, I could carry her.\"\n\n\"It looks as if you might have to, Roger.\"\n\nI tried standing her up. Her legs were like jelly. I lifted her in my arms and followed Marco. As we passed, Marco's uncle shook his head pityingly. Marco opened the toilet door. I carried her in and shut the door behind me. \n\nI had to sit her on the toilet, lift her dress, take her panties off, and hold her in place. I stuffed the panties in my jacket pocket. When she had finished I dried her, washed my hands, and carried her back outside. Marco was waiting.\n\n\"I think you should get her back to the ship now, before she is totally out of it.\"\n\n\"Too late,\" I replied. \"She's too far gone. Can you get your car?\"\n\n\"It's there, Roger,\" Marco said, pointing across the square. \"Let's go. We'll see each other again soon. I'm coming back to England next month for yet another training course.\"\n\n\"You've got a posting? That's good.\"\n\n\"Might have a posting in the UK, if I complete the training course, but my English has to be better. My parents want me to stay with you. The course venue is only a few miles away.\"\n\n\"Great. I'm sure my parents will agree, and...\"\n\n\"I want to practise my English with your sister, Roger. Is that OK?\"\n\n\"My sister! That's up to her, not me. I know she likes you, but she is her own woman. I wouldn't dare tell her what to do. She'd thump me. Watch out that she doesn't thump you. She has a mean fist.\"\n\n\"I'm sure she wouldn't...\"\n\n\"I admire your confidence, Marco, but be careful. She has got a worse temper than I have.\"\n\n\"But I have Italian charm.\"\n\n\"Maybe. But don't try pinching her bottom. Helen's reaction would be violent.\"\n\n\"I won't. What do you think of me as a prospective brother-in-law?\"\n\n\"You're serious, Marco, aren't you?\"\n\n\"Yes, Roger, I wouldn't have said that if I wasn't.\"\n\n\"I'd be delighted. If Helen wants you, I would congratulate you both.\"\n\n\"I've asked her twice. She hasn't said no...\"\n\n\"Nor yes?\"\n\n\"Not yet. She suggested that the answer could be maybe and that maybe could change if I can get a good posting and prospects.\"\n\n\"Best of luck. But we should get this sleeping beauty back to the ship, and forget we ever saw her.\"\n\n\"OK, Roger. I'll forget.\"\n\n\"Promise? This is important.\"\n\n\"It is? OK. I promise. I didn't see her and nothing happened, but you had better sit in the back holding her. She is just a limp heap.\"\n\nMarco drove us to the port. We had to argue at the dock gate. Taxis were allowed in, not private cars. But the guard knew Marco's parents and relented. Marco drove us close to the gangplank. I had to ease the woman out of the car and sling her across my shoulder in a fireman's lift.\n\nAt the top of the gangplank the Assistant Purser was standing watching me struggle up the steep slope. He should have asked me for my boarding pass. He didn't.\n\n\"What have you got there, Roger?\" he asked.\n\n\"Passenger and luggage re-embarking,\" I replied.\n\n\"Can you put your luggage down and have a quiet word, sir?\" he asked, pointing to a nearby bench.\n\nI put the stewardess down as carefully as I could. \n\n\"Any explanation, sir? Why have you returned with our Cissy as your luggage?\"\n\nI explained how I had rescued Cissy from unwelcome attention, and that I had just brought her back to the ship.\n\n\"And that?\" He pointed at the panties poking out of my jacket pocket.\n\n\"She needed the toilet, and help.\" I pulled the panties out and gave them to him.\n\n\"You haven't?\"\n\n\"No, sir,\" I protested. \"I have not. I would not. She is and was in no state to consent to anything. All I have done is return a crew member to this ship because she had been abandoned by her shipmates AND her brother. If necessary I have witnesses - my friend who drove us here, his uncle and the staff of the restaurant.\"\n\nThe Assistant Purser sighed.\n\n\"Then thank you, Roger. I appreciate what you have done. But what am I to do about your luggage? I should report her as being incapable on her return to the ship. That would be a serious offence and she has only just successfully completed her training. She could lose her job.\"\n\n\"Then don't. She did nothing wrong. Her shipmates did. They abandoned her in a rough part of Naples late at night when they had been giving her more alcohol than her capacity. She is the victim, not the villain.\"\n\n\"If it became known that she had to be carried up the gangplank, and particularly by a 1st class passenger, she would be discharged.\"\n\n\"She wasn't. I carried 'luggage' aboard.\"\n\n\"And you'd stick to that story, Roger? Why? What is she to you?\"\n\n\"I didn't even know her name until you told me just now. She is a member of the crew, and the crew have treated me very well. I would have done the same for any member of the ship's crew in trouble on shore - male or female. Cissy is still just a teenager. She is, isn't she?\"\n\nHe nodded.\n\n\"And this was her first time in Naples?\"\n\nHe nodded again.\n\n\"Then you tell me. How do we get my luggage aboard officially with no adverse consequences for her or you?\"\n\n\"Thank you for that 'or you', Roger. If it became known that I had bent the rules for Cissy there could be consequences for me as well as for her. None for you, of course. You are a passenger.\"\n\n\"So?\"\n\n\"If Cissy were to be found, although off duty, in the passengers' area and incapable, by one of her colleagues... Do you understand?\"\n\n\"I think so. For example if on my return from an evening in Naples I were to find a stewardess asleep in my cabin, and rang for a stewardess, that stewardess would probably arrange for the sleeping one to be discreetly removed... And if you just happened to make a note in that log book over there that a certain piece of luggage had returned to the ship a couple of hours ago...\"\n\n\"A small tick is enough, Roger.\"\n\n\"Then my luggage will cease to clutter up this area and a tick will be made?\"\n\n\"Thank you, Roger. But these should be correctly replaced.\"\n\nHe handed back the panties.\n\n\"They will be.\"\n\nI lifted Cissy up and carried her to my cabin. I laid her carefully on my pristine bed, gently lifted her dress and replaced her panties before arranging her clothing decorously. I rang for a steward and stood in my cabin doorway, hoping that the bell would be answered by a stewardess. It was, a woman in the thirties.\n\nI put my finger to my lips and whispered:\n\n\"I've just come back on board and found...\" I stood aside and let her see Cissy sprawled on my bed.\n\n\"Oh dear! Are you going to...\"\n\n\"Complain? Of course not. But I would like an unencumbered bed, soon, please?\"\n\n\"Of course, sir. If you can watch her for a few minutes I'll get a couple of stewards and the encumbrance will disappear.\"\n\n\"And as far as I am concerned, the encumbrance was never here. You understand?\"\n\n\"Yes, sir, and I appreciate that. She could be in serious trouble if a passenger complained.\"\n\n\"But this passenger has seen nothing and nobody.\"\n\n\"Thank you, Sir.\"\n\nShe returned with a couple of stewards and Cissy's limp body was removed.\n\nAfter breakfast I was sitting close to the swimming pool, wearing my swimming trunks and a t-shirt. When the morning coffee and cakes were due there would be a rush from the pool. I might have it to myself for half an hour.\n\nJust after the crowd had gone and I was about to enter the pool, a pale-faced Cissy approached me.\n\n\"Can I talk to you, sir?\" She asked nervously.\n\n\"Of course you can, but I would prefer to be called 'Roger', not 'Sir'.\"\n\nI waved a hand suggesting that we sat down. She perched gingerly on the deck chair as if it would collapse underneath her.\n\n\"I think I had better continue to call you 'Sir',\" Cissy said. \"I have been told to apologise to you...\"\n\n\"You,\" I emphasised the 'you', \"Have nothing to apologise for. If you want to talk about yesterday evening, I have deliberately forgotten everything, and given my word that I have - forgotten, that is.\"\n\n\"But, sir...\"\n\n\"No buts. No 'Sir'. If you want to talk about something that has been forgotten, then it must be between Cissy and Roger and not on the record. Do you understand? Officially nothing happened. If something did, it could have serious consequences for you and others. So it DID NOT HAPPEN.\"\n\nCissy looked as if she would cry. I held out a hand to her. She grabbed it as if it was a lifeline.\n\n\"If I can't apologise, can Cissy say 'thank you'?\"\n\n\"Of course you can, Cissy. If you want to, you can thank Roger, not a passenger who did nothing and saw nothing.\"\n\n\"But the Assistant Purser really tore into us this morning, Roger.\" My name was said reluctantly.\n\n\"I'm not surprised, that is if Cissy and Roger are talking about something that didn't happen. It didn't, did it?\"\n\nCissy nodded.\n\n\"Then I can say that he and I might have agreed on an unofficial course of action. I helped you. He helped you, and your brother and his friends. He went out of his way for all of you and IF what didn't happen was discovered, he too would be in trouble.\"\n\n\"But he was really angry...\"\n\n\"Of course he was. It could have ruined several people's careers, reflected on the crew as a whole, and the consequences for you could have...\"\n\n\"...been terrible. I don't remember much except you confronting the Italians in the square, giving me coffee and taking me to the toilet. After that I don't remember much until you were putting my panties back on in your cabin, Roger. You were very gentle but not very skilled.\"\n\n\"The Italian lads were teasing you. They didn't mean any harm but any woman on her own in that part of Naples at that time of night...\"\n\n\"...is likely to be a prostitute?\"\n\n\"Yes, Cissy. They knew you weren't but they wanted to show their appreciation of you in an Italian manner. They went slightly too far because they were nearly as drunk as you. But apart from a few bruises you would have been OK.\" \n\nCissy grimaced. \n\n\"I certainly have the bruises. But why was the Assistant Purser so angry?\"\n\n\"Cissy,\" I said, \"this is your first voyage, isn't it? And you've never been abroad before?\n\n\"I've been across the border into Germany a couple of times, but otherwise, nowhere.\"\n\n\"Just think. If the worst had happened?\"\n\n\"If I'd been raped? That what you mean?\"\n\n\"Yes. What would come next?\"\n\n\"The police?\"\n\n\"The police, the Dutch Ambassador, the ship's captain... The ship might not have been able to leave Naples. The passengers...\"\n\n\"The passengers would have been angry...\"\n\n\"More than that. They would sue the shipping company for the delay. The publicity might damage the whole company and make passengers choose another shipping line...\"\n\n\"Oh. All that for me?\"\n\n\"All that because the stewards and your brother were very stupid. Some of them must have known the risks of Naples at night for a young woman on her own. They imperilled you and the whole shipping company. That is why the Assistant Purser is very angry about something that MUST be forgotten. He can't do anything officially because if he did he would admit that something happened, and that he cannot do.\"\n\n\"How do you know so much, Roger? You aren't much older than me.\"\n\n\"I've been to more countries than the years you have been alive, and some very different countries. But you ought to have known the risk you were taking. What would happen to a lone young woman drunk in Rotterdam late at night?\"\n\n\"She might be raped...\"\n\n\"And if she was alone, drunk, in some of the other ports you've been to?\"\n\n\"Oh. She might be raped and killed.\"\n\n\"Exactly, Cissy. Now you know why the Assistant Purser was so angry. Your friends were more than stupid. They were reckless - with your life.\"\n\n\"And you saved me, Roger.\"\n\n\"I didn't have to do much. Those men didn't intend to do more than they did.\"\n\n\"But you did more than save me from them. You protected the rest of us, all the stewards out that night, and the Assistant Purser.\"\n\n\"Why not? It didn't take much to pretend that nothing happened. And nothing did. Remember that. We are talking about something that didn't happen, Cissy.\"\n\n\"But you're a first class passenger, Roger. Many of them treat us like dirt.\"\n\n\"I can't answer for them. I wouldn't. My parents wouldn't. We appreciate what you do for us to make our journey comfortable.\"\n\n\"I haven't, Roger. I'm not assigned to your part of the ship.\"\n\n\"So what? I didn't even know your name, Cissy. You were part of the crew in difficulty.\"\n\nCissy looked around before she kissed me on the cheek.\n\n\"Now you do know me, Roger. I owe you a lot. So do my brother and his friends.\"\n\n\"Forget it. As I keep saying, we are talking about something that didn't happen. Any acknowledgement might risk that something becoming a known event.\"\n\n\"I know. But as well as trying to apologise to you, I have been asked to give you this.\"\n\nCissy produced an envelope from the pocket of her uniform dress. It had a typewritten address to me, and was marked 'In Confidence' and 'By Hand'.\n\n\"What is it, Cissy?\"\n\n\"Open it, Roger. I don't know what it says.\" \n\nInside was a stiff card with the ship's crest. The captain requested my company in his sea cabin at 12 noon, dress informal. There was no indication of how I should accept the invitation.\n\nI looked at the clock above the bar. It was a quarter to twelve. I showed the card to Cissy. \n\nShe paled.\n\n\"The captain? He knows?\"\n\n\"I would think so, Cissy. But not officially. I don't know where the captain's sea cabin is? Do you?\"\n\n\"Yes. It's immediately aft of the bridge, a deck down.\"\n\n\"OK. I'll go and put some trousers and shoes on. Will you wait a couple of minutes and show me where to go?\"\n\n\"Yes, Roger.\"\n\n\"And when I'm close, you had better vanish.\"\n\n\"I will. I rarely go anywhere near the bridge.\"\n\nCissy waited for me outside my cabin while I changed, including putting my long socks on. She took me to the companionway leading up to the bridge. She told me to ask the Officer of the Watch for the Captain's sea cabin. She turned and almost ran away.\n\nI showed the card to the Officer of the Watch. He looked around the bridge as if checking that everything was in order. I followed him down the companionway. He knocked on the Captain's cabin door. He opened it, and announced me formally.\n\nThe Captain rose from behind a desk and extended his hand for me to shake.\n\n\"Drink, Roger?\" he asked. \"Your usual cold lager?\"\n\n\"Yes please, sir,\" I said as I accepted the lager.\n\n\"Not sir. My name is Hans and I want to talk between Hans and Roger, not between a Captain and a Passenger. That OK?\"\n\nI nodded.\n\n\"Because I want to talk about...\"\n\n\"...something that didn't happen?\"\n\n\"Yes. Off the record, as journalists say. The Assistant Purser told me a fairy story which I have difficulty believing.\"\n\n\"What story?\" I asked.\n\n\"Well, Roger, let's pretend. We will talk about non-events in Naples.\"",
        "\"I don't remember any events or non-events in Naples, Hans.\" I said firmly. \"I have forgotten everything about that night.\"\n\n\"So the Assistant Purser tells me. So does one of my Senior Stewardesses. It is a very convenient amnesia.\"\n\n\"If it is amnesia, I prefer to describe it as diplomatic, sir.\" \n\n\"Not 'sir', Hans. Remember?\"\n\n\"It has to be 'sir' if you are asking me about something that didn't happen, sir.\"\n\n\"Then we are at an impasse, aren't we, Roger?\"\n\n\"Yes, Hans.\"\n\n\"OK. I will tell you the fairy story that you have forgotten. But this fairy story will never be heard outside this cabin. Is that acceptable?\"\n\n\"If you say so, Hans.\"\n\nThe Captain's account was fairly accurate except for the transfer of Cissy from the restaurant to the ship, when she was incapable. The Assistant Purser had relayed our conversation almost verbatim, as had the Senior Stewardess.\n\n\"An interesting fairy story, don't you agree, Roger?\"\n\n\"As a fairy story or a fiction, yes.\"\n\n\"And what should I do about this fairy story? Can you advise me?\"\n\n\"Treat it as a fairy story, an impossible fiction, Hans, surely?\"\n\n\"But if it were true?\"\n\n\"Then you would have to have a reliable witness to everything. That you don't have.\"\n\n\"OK. Nothing happened. But assume it had. There are some facts the unreliable witness doesn't know but I do. Cissy isn't just a junior stewardess. She is the granddaughter of the Chairman of the Shipping Line, and her brother...\"\n\n\"...is the grandson.\"\n\n\"Yes. The brother was an idiot. A drunken idiot and even less sophisticated than his sister. It's true. He had a sheltered life because of childhood illness which was possibly overindulged. He has the makings of a reasonable person but needs to grow up. This is his second voyage, and but for the fairy story, he would have a good record on this one. His sister has done better than he has even though it is her first voyage. But there is this fairy story which causes me to doubt...\"\n\n\"It shouldn't, Hans,\" I said firmly. \"They were drunk. They have had a real fright - if the fairy story is believable. They have been given an unofficial but severe talking to, as have the other stewards who were with them. Those others should have known better than to take risks with the grandchildren of the Chairman...\"\n\n\"...They didn't know and don't know. Cissy and her brother are on board apparently as ordinary stewards. You know. I know. No one else, not even the Purser.\"\n\n\"Even so, they were stupid. They should have protected their fellow stewards.\"\n\n\"I agree. They are embarrassed that a passenger, a first class passenger, has done what they should have done.\"\n\n\"No. He hasn't. It is a fairy story, Hans. No passenger was involved.\"\n\n\"If you say so, Roger.\"\n\n\"I do. This is a talk about a fairy story.\"\n\n\"What do you think the grandchildren will tell their grandfather?\"\n\n\"Probably nothing. They would be too embarrassed. But if they did, he might approve of the officers' reaction to the fairy story - to act unofficially but to protect the reputation of the ship and shipping line.\"\n\n\"One thing I don't understand, Roger. I can see that rescuing a pretty girl was something a young gentleman would do, but I would have expected him to accept the recognition of his act. You don't, and won't. I can appreciate that you didn't want to get Cissy into trouble, but you had never met her before last night, had you?\"\n\n\"No. I had seen her at a distance when she was at work but no, I had never met her. All I knew was that she was possibly the youngest stewardess.\"\n\n\"Yet you protected her from the repercussions...\"\n\n\"Apparently not. She and the others have been told off in no uncertain terms.\"\n\n\"Only unofficially. There is no record of what happened nor of the 'telling-off'. That is your doing. Why?\"\n\n\"Captain. I knew nothing about Cissy. I know a lot about you.\"\n\n\"About me, Roger? What about me?\"\n\n\"I know your war record, your medal citations, what you did for the Allies while your country was occupied. If I was discreet, it was a small repayment for what you did. Anything that affected your crew would be your responsibility. Ultimately you would get the blame.\"\n\n\"I see. The buck stops with the Captain?\"\n\n\"You know it does. For every ship, for every Captain. You didn't need or deserve the repercussions of the fairy story - so it didn't happen.\"\n\n\"Thank you, Roger. I hadn't appreciated that you had thought through the consequences of the fairy story that far. What about your friend Marco? Will he be as discreet?\"\n\n\"Yes.\"\n\n\"You know something about me. That I didn't expect, Roger. But I know something about you and your parents. All three of you are listed on the passenger list as 'Civil Servants'. Your father is shown in the official list as a senior officer in the Admiralty. Your mother is also listed, a slightly less senior position, but still impressive. What surprised me is that you are listed too. Surely only senior civil servants are shown in the published lists?\"\n\n\"Yes. I am in the list. That list is classified Restricted. I can't tell you why I'm on the list. That would breach the Official Secrets Act.\"\n\n\"Even though I am still a reserve officer in the Navy of a NATO ally?\"\n\n\"You know better than that, sir. Need to know applies. You don't need to know, so I can't tell you.\"\n\n\"Even though I am aware that all three of you are on a list with a higher classification than Restricted?\"\n\n\"Yes, Hans. We shouldn't even talk about that list.\"\n\n\"OK, Roger. We won't. But I am grateful, personally and for Cissy. One thing I can do. Our shipping line has a register of passengers who have travelled with us. Like the list we can't talk about, it is confidential. Some of the information is innocuous such as your preference for cold lager. Some isn't such as whether the passenger is an awkward one who complains unnecessarily. But we also record those who are very welcome on board, as friends. You and your parents were already shown as representatives of a NATO ally. But now you will also be shown as friends of the ship's captain and company as well.\"\n\n\"Thank you, Hans. I don't know what that means, but thanks.\"\n\n\"It means that we will do our best to make any voyage with us as comfortable and enjoyable as possible. You will probably get a free upgrade of accommodation as a matter of course.\"\n\n\"Thank you. That might be welcome if we use this ship again.\"\n\n\"But now, Roger, I have to resume my duties as the ship's captain. However the stewardesses want to thank you too. The principal suite wasn't booked for this voyage. I understand that the stewardesses are waiting for you there, to thank you for something that didn't happen...\"\n\n\"It didn't, Hans.\"\n\n\"The stewardesses' thanks will also be something that didn't happen but...\"\n\n\"They're waiting for me...\"\n\n\"Yes.\"\n\nThe Captain stood up. We shook hands and I followed him up the companionway to the bridge. I could have left on the lower deck, but the Captain asked one of the junior officers to show me to the suite. We went down a different route. The principal suite was aft of the Captain's sea cabin. The officer opened the door and stood aside for me to enter. He closed the door behind me.\n\nTwo stewardesses hugged me. They kissed me. I knew both of them because they were assigned to the deck my cabin was on. I won't mention their names. One was blonde. The other was brunette.\n\n\"We want to show our thanks for looking after Cissy,\" the brunette said. \"We wouldn't let her do it herself.\"\n\nMy lifted eyebrow brought an explanation from the blonde.\n\n\"She's still a virgin. We're not, and we are on the pill...\"\n\nSo it was that sort of thanks. I might have protested but my mouth was stopped by the brunette's kiss. We undressed each other even if I had to take my long socks off discreetly with my trousers.\n\nThe large double bed was very comfortable. The blonde kissed me as the brunette started licking and sucking at my fast raised erection. She soon appreciated that if she carried on I would come too soon. She joined the blonde at my head. They presented four breasts for me to suck and nibble. I was lost in enjoyment of so many nipples.\n\n\"Do you like eating?\" The brunette asked.\n\nI nodded. I had a mouth full of the blonde's breast. That breast moved away and was replaced by a natural blonde bush. It tasted wonderful. The blonde positioned herself carefully so that her bush was above my face. I felt the brunette lower herself to my hips and gently ease my erection inside her. She began to squeeze and I was swamped by the sensation of two attractive young women's bodies. I couldn't hold out and I came into the brunette.\n\nThey held me cradled between their breasts as I recovered. They squirmed their tits over my face and torso until I was finally erect again. I had a brunette bush to lick and a blonde impaled on my erection. We lasted longer until the blonde pushed her bush hard against my face as the brunette clamped her muscles around me. I came again.\n\nWe rested together. I had a woman's head on each shoulder and a female leg draped across mine. We hadn't spoken during the whole time we were making love.\n\n\"We have to go,\" the blonde announced. \"that was the first instalment of our thanks. When you want more, just ring for a stewardess...\"\n\n\"While she's on duty?\" I queried. \"Wouldn't she get into trouble?\"\n\n\"Nothing any of us do for you, Roger, would get us into trouble,\" the brunette replied.\"We're not supposed to know, but we are aware who Cissy is related to. It wouldn't matter. We like Cissy. Her brother was a bit of a pain at first but is improving. The Assistant Purser really told him off for abandoning his sister, but the other stewards should have known better. The stewards aren't popular with the stewardesses at present, so fucking Roger could be a popular diversion - if you don't object.\"\n\n\"I'd be honoured, but whether I can...\"\n\nMy protest was stopped by two kisses.\n\nWe dressed. I had to be careful with my long socks. As I opened the door of the suite I saw a man standing at the foot of the companionway to the bridge. I shut the door quietly and turned to the women.\n\n\"Something's wrong,\" I said calmly. \"Please wait here for a couple of minutes. I'll be back soon.\"\n\nThey didn't understand but I think they sensed the seriousness of my statement. I opened the door a crack. The man was looking the other way, towards the normal route to the ship's bridge. I left my shoes inside the suite and crept out towards his back.\n\nI pulled a Skean Dhu out of one of my long socks. As I approached I could smell his body odour. He wasn't a member of the crew or a passenger, neither of whom would be carrying a shoulder-slung AK47, nor wearing a cloth covering his head and face.\n\nI clamped my hand over his mouth and cut his throat. The blood spurted forwards as I lowered his body to the deck. I just had managed to catch the AK47 with my knife holding arm. I stripped off his face covering, checked his body for any other weapons or identification. There was none.\n\nI rolled him to the edge of the deck under a lifeboat. Anyone passing might see him but very few were on this deck except crew. I went back to the suite, carrying the AK47 and the head cloth. The women were surprised by my acquisitions.\n\n\"Shh!\" I hissed. \"I think there is an attempt to hijack the ship. Can you get down to the Purser's office without passing the bridge?\"\n\n\"Yes,\" the brunette said. \"There is a crew access a couple of yards aft. But what...\"\n\nI held up the face cloth.\n\n\"He's dead. I don't know how many there are or where they might be. I think the bridge and the engine room are their targets. If you can warn the purser, he can act. I'm going to see what's happening on the bridge.\"\n\n\"Roger! That's risking your life!\" the blonde spluttered. \"We're told if we are hijacked to cooperate and wait them out. That's the company policy.\"\n\n\"But I'm not the company. If these terrorists are who I think they are, they aren't reasonable. They are going to kill people just to make a point. I aim to stop them.\"\n\n\"But...\"\n\n\"But what? They are killers.\"\n\nI held up the AK47.\n\n\"So am I. They're amateurs. I'm a professional. Off you go - aft. I'm going to the bridge and if they have already killed any of the officers they'll be revenged. Go!\"\n\nThe two women scurried aft, disappeared through a watertight door that they closed quietly. I put the headdress on, covering my face, slung the AK47 across my back and a held a Skean Dhu in my right hand. I went to the Captain's Sea Cabin and crept up her personal companionway. I poked my head cautiously at the top. As I had hoped, there were only two terrorists on the bridge. One was looking at the port companionway. I had killed the other at bottom of the starboard one. \n\nHe was obviously nervous. The ships' officers had their hands up, pressed against the glass, with their backs to him. They couldn't see whether he was pointing his AK47 at them or not. He wasn't. It was pointing down the port companionway as he tried to watch that and the officers at the same time.\n\nRight in front of me was the ship's wheel. Standing at it was the second terrorist, also dressed in a head wrapping. I checked that he wasn't one of the ship's crew disguised as a terrorist. His bare dirty calloused feet confirmed he was an intruder. I put my AK47 carefully on the deck in front of me. Quietly, watching the other one, I crept behind the steersman.\n\nI repeated the kill. He died without a sound. I lowered him to the starboard side of the wheel and took his place. If the remaining terrorist looked at me properly he would see I had taken over, but if he glanced - he would see what he expected to see.\n\nSuddenly he moved forwards, looking through the bridge windows to the port quarter. I dashed across the deck as he turned. He didn't react fast enough, confused by my headdress. My knife pierced his heart. He dropped his AK47 with a clatter and groaned once. I let his body fall and checked there were no other terrorists around. I wiped my bloody knife on his clothing.\n\n\"Captain,\" I said loudly. \"The bridge is yours.\"\n\nCaptain Hans turned round. His face briefly whitened as he saw the two dead terrorists. Then his expression turned to anger.\n\n\"There are two more in the engine room, Roger. The Chief was forced to speak to me. They told him they have a bomb by the propeller shafts.\"\n\n\"I doubt that,\" I replied. \"But the Purser knows there are terrorists aboard. What will he do?\"\n\n\"What he should do is keep the passengers safe.\" The Captain replied. \"Whether he will? He's ex-Navy, like me. I think...\"\n\n\"Can you talk to him without the terrorists knowing?\" I asked.\n\n\"I can use the ship's telephone. If he answers I'll know whether he has a gun at his head even if we have to use a Dutch dialect.\"\n\n\"Do it, please, Captain.\"\n\nThe Captain rang the Purser's Office. The Assistant Purser answered at first but put the Purser on the line. The Captain and Purser spoke their local dialect. Dutch is hard enough for foreigners. That dialect was almost gibberish. \n\nThe Captain put the phone down and addressed his officers and me.\n\n\"The Purser has broken out the arms store. All accesses to the engine room are guarded by armed members of the crew. The two terrorists can't get out but they can control the ship from down there. They can override the steering, cut the engines, even the air conditioning and lighting.\" \n\n\"Can you check whether the Chief is in control or not? They might expect course or engine commands.\"\n\nI pointed out of the window at a rusty freighter about two miles away on the Port quarter.\n\n\"That one was looking at that ship. It might hold more terrorists. Could we turn away?\"\n\n\"Good idea.\"\n\nThe captain took the ship's wheel, turned it to starboard, and rung the engine telegraph to 'Half Speed'.\n\nWe could feel the ship respond to the course change. The engine note altered as well.\n\nOver the bridge tannoy came the Chief's voice.\n\n\"Ahoy there you bastards! Your mates down here aren't in control anymore. You can swing the wheel as much as you like. Nothing will happen.\"\n\nThe captain lifted the telephone and switched it to the loudspeaker in the engine room.\n\n\"Chief! All those up here are out of action. I'm back in command of the bridge.\"\n\n\"How do I know you haven't got a gun to your head?\" came the Chief's response.\n\nThe Captain retorted with a torrent of Dutch obscenities, damning all disbelieving Engineers to eternal perdition unless they obeyed his commands.\n\n\"OK, OK, Captain. I hear you. These two are deceased, dead, battered by large spanners.\"\n\n\"And the three up here are as dead. Be careful if anyone leaves the engine room. There are numerous nervous ship's officers clutching guns they don't know what to do with.\"\n\n\"We're staying put till you call them off, Captain. I wouldn't trust those youngsters with a pea shooter.\" \n\n\"OK, Chief. I'll let you know when it's safe outside the engine room.\"\n\nThe Captain told one of his officers to go to the Purser and call off the armed guards. He turned to me.\n\n\"Well, Roger, what do I say?\"\n\n\"I'd give a few course commands, first, Captain. That freighter is still close...\"\n\n\"Shit! Quartermaster! Starboard gently and full speed ahead. Get us well clear of that freighter.\"\n\n\"Aye Aye, Captain!\"\n\nThe ship heeled as we turned and the engines responded. The Captain watched as the freighter receded. The officer returned to inform the Captain that all the guns had been returned. The Captain informed the Chief Engineer that the ship was now safe. He beckoned to me to follow him to his cabin. He poured two stiff gins.\n\n\"Roger? What do I do now? You seem more experienced at this than I am.\"\n\n\"My advice, Captain, is simple. After dark you hold five inconspicuous funerals at sea. Lose the bodies and the other evidence. It didn't happen.\"\n\n\"It didn't happen! Five men dead, blood on my decks, the ship hijacked and you say 'It didn't happen'?\"\n\n\"Think about it, Captain. The passengers know nothing. If you tell the crew to keep quiet, they will. If you tell anyone it should only be your country's security service. If this gets on the news it will damage you, your ship, your owners, and least important, me.\"\n\n\"You, Roger?\" \n\n\"Who killed three of the terrorists? Me. A passenger. Apparently a lower echelon British Civil Servant, which is what I am supposed to be...\"\n\n\"When you are actually a Major of Royal Marine Commandos, Roger.\"\n\n\"You're not supposed to know that, Captain. Nor my parents' roles. As Captain of this ship you are a Merchant Navy Officer, not a Dutch Navy Reserve Commodore.\"\n\n\"Can we do it? Keep it a secret, I mean?\"\n\n\"If you make it clear to your officers and crew that their colleagues in the engine room might face trial in an International Court. They wouldn't want that. They disobeyed Company instructions and a lawyer could tear them to pieces - and you.\"\n\n\"OK, Roger. I'll do it. Or try to do it.\"\n\nThat night five weighted bodies were dropped overboard followed by their weapons. The ship was back on course and on schedule.\n\nI wasn't there for long after the funerals. I was in the principal suite fucking and being fucked by stewardesses. But we won't talk about that. Until we docked in England I wasn't in my cabin any night. \n\nIt didn't happen. None of it happened. There is no record of any event in Naples or on board the ship.\n\nIt didn't happen. It's fiction. And that's the way it will stay."
    ],
    "authorname": "oggbashan",
    "tags": [
        "dutch",
        "liner",
        "naples",
        "stewardess",
        "roger",
        "hans",
        "cissy",
        "terrorist",
        "ak47",
        "skean dhu"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/it-didnt-happen-1"
}