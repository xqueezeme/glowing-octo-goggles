{
    "title": "A World for the Taking Ch. 07",
    "pages": [
        "\"Come on, Gamble,\" croaked Roy, pulling on the big stud's lead strap. His throat was parched, but he wanted to get a little more distance between him and his pursuers. \"I hurt too. Need to keep moving. Sorry, boy.\"\n\nGamble only moaned disconsolately as he allowed the teen to lead him between another set of boulders. The blackened streak on the steelie's flank no longer oozed blood, which was fortunate. Roy's med-kit was low on coagulant. He had used most of it to stanch Gamble's wound first, only afterward realizing how seriously he himself had been wounded during his ambush the previous day.\n\nA ragged, charred hole through his jacket and another along the thigh of his trousers showed scorched flesh beneath. Roy's thigh sent a constant burning up his side and the wound above his belt was an unending ache he had been able to do very little about. The worst part was that he did not know how many Dusig had been killed in the ambush. He was fairly sure one was dead and all but certain he had wounded two. The patrol he'd hit had not been as careless as the one he and Tammy had destroyed. They had immediately spread out and returned fire. Roy had bolted away after only a handful of shots. That was when they had almost gotten him.\n\nAfter several hours of evasion Roy was now on course to investigate the scene where the big Town Works lifter had gone down. He knew Tammy and the others had engaged it and knew the ship had been forced to land, but with the Dusig soldiers almost in his trap he had not looked to see what took place.\n\n\"A little further, boy,\" Roy encouraged Gamble. \"A little further and we can rest a bit. I want to see where the flyer is. You can take it easy for a while.\"\n\nGamble nickered and nudged Roy with his muzzle. Roy smiled at the old, familiar gesture. Gamble had done that ever since he was a colt.\n\nThey came out onto a spur of a hill among some low pines. The elevation allowed Roy to see up and down the river a long way. About a kilometer to the south and east was a wide swathe that had been burned five years before. He would need to skirt that when he got back to tracking the others. No sense in exposing himself.\n\n\"You wait here, Gamble,\" he said, dropping the lead strap at the stud's feet. \"Rest a bit. I need to get a better look.\"\n\nWith his binoculars in hand Roy moved quietly along the hill spur to a large boulder overhung by a leaning scrub cedar and a cluster of old juniper bushes. Their crazily tangled branches provided good cover to see the riverbank from. He turned his binoculars north first in hopes of spotting the patrol he had ambushed. Seeing no sign he turned his attention southward. He scanned for a bit until he sighted the lifter. That he had expected. What he had not expected was Mary Horne's dark blue flyer with its Tyne & Harper logo sitting in the shallows near the lifter. He did not recall hearing it fly by, but he had been fairly focused on evasion for the last few hours. Of course, it could also have come in from high altitude. It did not really matter. The flyer was there and so were the Dusig. Zooming in he saw three enemy soldiers milling about and a fourth figure he did not at first recognize.\n\n\"Vemmo Att Prei?\" he whispered, astonished to see the diminutive male Vespan, the father of Tammy's friend Te`ja Vemoar. \"What in the hell are you doing with those guys?\"\n\nRoy soon realized the Vespan was not there willingly. One of the Dusig held a rifle and stood back several paces as it watched Vemmo working on the lifter. \n\nThe ship had been shot to shit. Numerous bullet holes stitched the fuselage and here and there fist sized chunks were actually missing from the smooth duroplast* hull. The main drive exhaust had been detached and was now sitting on the rocky beach while Vemmo leaned through one of the service hatches.\n\n\"Alright,\" grumbled Roy. \"What do I do now?\"\n\nBriefly he considered killing the Dusig. They were within range and if he were lucky and skillful he could take them down. The problem was he might not be lucky or skillful enough. It was a very long shot even for a Johnson Big Bore. And even if he did kill all three of them, there might be a fourth or a fifth he could not see.\n\n\"And what if those fuckers from last night are closer than I think?\" he sighed, looking over his shoulder the way he had come. \"And where is Tammy?\"\n\nFor a moment Roy's heart ached. He had not wanted to part from his girl, but at the time he had felt it the best way to protect her and the others. Maybe it had been. Certainly he had delayed the patrol and set them off on his track. That had to count for something. But now Tammy was who knew where.\n\n\"On the other side of that hill, hopefully,\" he said aloud, looking at the large, buttressing hill that rolled down from high up the valley's wall. \"The tower's on the other side of that. They'd have to cross it. And I think there is a creek over there that leads down near Big Lake. That'd be the way I'd go. For a while, anyway.\"\n\nRoy shook his head to clear his thoughts. Musings like that were clouding his mind. He was too tired and worn to think properly. His side and thigh ached and all he wanted to do was sleep and maybe get a shower and a hot meal. His stomach rumbled at the thought of food and he took a ration bar from his pocket.\n\n\"When this over with, I'm never going to eat another one of these,\" he croaked as he chewed. A mouthful of water from his canteen made the food bar go down easier, but he was running short. He needed to find a stream or pool. Gamble would need water soon, too. Steelies could get most of what they needed from foliage and grass, but not if they were moving as hard as Gamble had been. The stud could go longer without water than Roy, but not much longer.\n\nAgain, Roy shook his head to clear his thoughts. He put his binoculars back to his eyes and looked to see if anything had changed down at the river. It had. Vemmo Att Prei was standing with his arms spread and shaking his head vehemently, as if trying to explain something to the Dusig who surrounded him. The petite Vespan was smudged with grease or soot and in his hand he held a long socket wrench. One of the Dusig raised his rifle, aiming it at Vemmo's chest, but another stepped in quickly and shoved the weapon down.\n\nRoy watched as things played out. The Dusig who had shoved the rifle put a hand to the side of his head and seemed to be speaking to no one. The other two watched Vemmo. An inspiration hit Roy and he scrambled to get his data pad out. There was a small chance he could intercept the transmission. With a quick flick of his finger he set the pad to scanning frequencies. Up and down the range it went without result. Disappointed, Roy returned his attention to the scene on the riverbank below.\n\nThe Dusig who had been talking turned to the others and apparently gave them some orders. The three aliens strode out into the water, making for the small flyer in the shallows. When Vemmo made to follow, the leader spun and kicked the Vespan in the chest, knocking him to the ground. Vemmo lay their gasping and watched the Dusig fly off to the south east.\n\nRoy was again tempted to try a shot, but the range was still long and he was unwilling to chance giving his position away to the patrol he knew was behind him. He turned his binoculars back on the beach. Vemmo stood forlornly with his hands at his sides, staring after the distant flyer.\n\n\"They just left him?\" he wondered. \"Maybe they expect him to repair the lifter while they're gone.\"\n\nRoy stood and felt his head spin. He dropped back where he had been and rolled to his back, his side afire with pain.\n\n\"Fuck this shit,\" he moaned without enthusiasm or heat.\n\nPlacing his med-kit on his stomach he administered a pain killer and a mild stimulant. A second or two later he felt much better and far more alert. It was a good feeling, but it was something he knew he needed to be careful of.\n\n\"Don't want to end up like Kandi Newfield,\" he chuckled, his mood vastly improved. \"That girl caused herself all kinds of problems.\"\n\nKandi Newfield had become functionally addicted to stims and ended up nearly losing her claim. Only because her parents had stepped in and paid for her to be incarcerated in the medical center for three months did she retain it. Had she been old enough to take responsibility for her shares of the harvest she would have been booted off the planet and sent back to the CP to fend for herself. Roy did not want that to happen to him, though, he doubted using a stim in the current situation would cause such difficulties. He was not likely to become addicted after only a single dose.\n\nWith his pain dulled and his mind clear the tall, red haired teen could think again. He rolled onto his belly and checked on Vemmo. The Vespan was still standing disconsolately on the beach, now looking at the open compartment of the lifter. Roy knew Vemmo and his family were not yet qualified to be in the wilderness alone. Probably the Vespan could survive a few days. Children who had gotten lost had survived a few days, after all. Roy could leave him and come back after the message was sent. But what if the Dusig decided to come back and kill Vemmo?\n\n\"Can't leave him,\" he told himself. \"Poor bastard. And he wouldn't leave me.\"\n\nRoy had spent some time in the company of the Vespan family. They had been to several cookouts at the Mackey homestead and of course had attended the Mid-Winter Festivals. He liked them. They were strange, but he liked them anyway. Admittedly, that was partly because Tammy liked Te`ja, but that was irrelevant.\n\n\"Going down to the river might set the patrol on the wrong course, too,\" he mused, looking northward again.\n\nRoy rose with more purpose and this time his head did not spin and his side did not ache so much. He went back to Gamble who chuffed a greeting and nuzzled him. The teen took up the end of the lead strap and began finding a path down.\n\n*****\n\n\"Mr. Vemmo?\" Roy called a couple of hours later as he approached the lifter on the river bank. \"It's Roy Dodge. Don't be afraid.\"\n\n\"Roy?\" Vemmo cried in surprise, seeing the teen coming along the stony shore. \"Where did you come from?\"\n\nThe small Vespan sprang lithely from the cargo compartment of the lifter and rushed to meet the young Human and his steelie. His eyes instantly focused on the rents in Roy's jack and trousers.\n\n\"You are injured!\" Vemmo exclaimed and pulled the jacket aside to take a look at Roy's wounds. \"You must sit down and let me tend to this.\"\n\n\"Are there any more Dusig around?\" Roy asked, pushing the Vespan back to arm's length firmly.\n\n\"No,\" Vemmo said. \"They flew off and left me. Come over here, Roy. I will get you patched up. How did this happen?\"\n\n\"We got shot,\" said Roy, allowing himself to be led to the lifter's cargo compartment. He let go of the lead strap and sat in the open door, sighing with some little relief. \n\n\"Your steelie is getting away!\" Vemmo said in alarm, snatching at the lead strap and missing when Gamble tossed his head.\n\n\"It's alright. He's thirsty,\" Roy assured him, smiling as his stud went knee deep into the river and began to drink. Roy got out his canteen and swallowed the last of the water in it. \"Why did they bring you here, Mr. Vemmo?\"\n\n\"They wanted me to fix this thing,\" the petite Vespan said, gesturing derisively at the damaged Town Works flyer. \"Someone shot it to pieces. You should see the inside of the engine compartment. I am surprised it did not crash and burn.\"\n\n\"Can it be fixed?\" Roy asked. If they could get the flyer going, they could intercept Tammy and the others and make a run for the tower.\n\nVemmo helped Roy off with his jacket and took a closer look at the wound on his side.\n\n\"I do not have the parts, Roy, and they did not understand what I was telling them,\" he said, peering intently at the scorched flesh. \"This looks bad. All the skin is gone. I can see fat and muscle. Looks like someone gouged it out with a teaspoon. Good thing you sprayed it with coagulant. It is starting to seep, though. Why did you not put a bandage on?\"\n\n\"Dusig were after me,\" Roy told him, wincing as Vemmo prodded the injury. \"Didn't have time.\"\n\n\"After you? Why?\" Vemmo asked. He stepped up into the cargo compartment and returned a second later with a large medical kit. \"What have you been doing out here?\"\n\nWhile Vemmo cleaned the wound Roy told him about the last few days and the mission to get the tower operational.\n\n\"Another like Tammy? I see. Will it work?\" Vemmo asked, sealing a bandage over Roy's wounded side. \"Drop your pants. I need to get your leg fixed up.\n\nRoy gave him a warry look.\n\n\"Roy, now is not the time for Human modesty,\" snorted the Vespan. \"Drop your damned pants. Just try to forget what I look like long enough for me to get you tended to.\"\n\nRoy reluctantly dropped his trousers, focused on the trees and tried to think of baseball. Coming in at around one hundred sixty centimeters tall and no more than fifty kilos with a narrow waist, small breasts and shapely hips, Vemmo would have made a very attractive nurse had Roy not known he was a male Vespan.\n\n\"Not as bad as your side, though you did not attend this as well,\" Vemmo pronounced after running the scanner over the injury. \"Skin is gone and I can see fatty tissue, but it did not get down into the muscle. What did they shoot you with? One of those rifles?\"\n\n\"Yeah,\" Roy grunted as Vemmo applied a cleanser. \"Got Gamble pretty good with the same shot. A little more to the left and they would have brought him down. We dodged just as they fired, though. Gamble got us into a wash and we lost them because they were being careful. Maybe they saw what me and Tammy did to the other patrol.\"\n\n\"Hold still.\" Vemmo pulled the thin layer of coagulant off the wound and blood poured out for an instant before he washed it away and applied a fresh coating. \"Give that a minute to set and we will get a bandage on your leg. You did not answer my question about the tower.\"\n\n\"What question?\"\n\nVemmo looked to see if Roy's pupils were abnormally dilated and realized the young man was simply worn out.\n\n\"Will installing the alien transceiver work?\" Vemmo asked.\n\n\"I don't know,\" Roy admitted tiredly. \"Yoshi thinks it will. When you see him, he's going to want to know about his parents.\"\n\n\"I can only tell him, when last I saw them, they were well,\" Vemmo said and got a bandage from the medical kit.\n\n\"So why are you here and what's been happening in town?\" Roy asked, looking at his wound. He grimaced at the charred flesh, but it wasn't nearly as bad as it felt.\n\n\"The day they landed, everyone in town was rounded up,\" Vemmo explained. \"Put us in the hall, they did. Gave us food and left some guards to watch us. After a while one came in that seemed to be an officer or something. He spoke Mandarin. A few words, anyway. Enough for me to understand. He told us he wanted the leaders. Mary Horne and Sheriff Brodie went without a fuss and I was taken because I understood him. We were kept in the sheriff's office. And then someone blew the hell out of their shuttles or whatever those ships were.\"\n\n\"I think that was Mr. Mackey,\" said Roy.\n\n\"Probably,\" Vemmo nodded. \"From what you have told me I would have to guess he was trying to get everyone out of there. The shuttles were wrecked and the Dusig were running around in a panic. We saw it from the window. I thought they were going to kill us.\"\n\n\"Did Mr. Mackey get anyone out?\" asked Roy.\n\n\"As far as I know everyone but the three of us in the sheriff's office escaped,\" Vemmo said and began wrapping the bandage around Roy's thigh. \"I do not think he knew we were there. I do not know if he could have gotten us out if he had known. I am just glad he rescued the others. My family is safe, at least. That makes me feel better.\"\n\n\"Why did they think you could fix the lifter?\" asked Roy.\n\n\"Well, I work for the Town Works Department,\" Vemmo explained. \"I know how to fix these things. I mean, I was not brought here as a mechanic, but that is where I started with Tyne & Harper. Before I was mated. A long time ago. How does that feel?\"\n\n\"Better,\" Roy said, flexing his knee and testing the bandage before pulling his trousers up. \"I need to see about Gamble and then we need to get going. Have to catch up with Tammy and the others.\"\n\n\"The jZav`Etch pilot, Roy,\" Vemmo said cautioningly. \"The Dusig are after her. Something about her knowing where they are. I do not know why. I only know they questioned us. They are afraid of her.\"\n\n\"That makes sense,\" Roy said, buckling his belt. \"At least it makes some sense. They chased her here for a reason. Come on. Need to patch up Gamble.\"\n\n\"You should, perhaps change your pants if you have another pair,\" said Vemmo.\n\nThey got Gamble back on dry ground and Roy dug out a pair of jeans he had intended for the wash. Now though, they were in better shape than the pair he was wearing. While he changed into them Vemmo examined Gamble's flank. \n\n\"It is not too bad, I think,\" Vemmo pronounced. \"Long but not as deep as yours.\"\n\nGamble bit at Vemmo when he touched the wound, but Roy slapped the stud on the snout and attended to the injury himself. A thick layer of synthetic skin would have to do in place of a bandage, but the wound was covered and Gamble seemed more at ease.\n\nThere was no food in the lifter and no weapons. Roy took the large med-kit, just in case. He made sure all his canteens were filled and waited until Gamble was done drinking before he mounted. With Vemmo riding behind him on the cantle they headed east in hopes of finding Tammy's trail.\n\n*****\n\n\"Would it not be faster to cross through this open land?\" Vemmo asked. \n\nThey had climbed for hours, more or less following the Dusig who had survived the crash of the lifter. When that trail diverted from where Roy thought Tammy would have gone he set out away from their track. It was now nearly evening, the suns were sinking low and he was pleased to discover he knew Tammy well enough to predict her movements. The prints of the four steelies had led southward and up through the more heavily wooded area of the hills. It would certainly provide better cover than lower down. What he did not like was where they now led. He and Vemmo stood under cover of the trees within sight of the burned area with its blackened trunks standing like grim sentinels among the living saplings and tall grasses.\n\n\"Faster but dumber,\" said Roy, disappointed in his girlfriend's judgement. He took out his binoculars and examined the area ahead. The others' tracks led straight to the open ground and he wondered that Tammy had not been more cautious. Even now the sound of Mary Horne's appropriated flyer came faintly to him from somewhere high to west. \"Damn. There are a bunch of little craters out there. Grass was trampled and some of the trees were knocked down.\"\n\n\"What does that mean?\" Vemmo asked.\n\n\"Tammy made a mistake and F`reet Do Hum didn't keep her from making it.\" Roy handed the binoculars to Vemmo and let him have a look. \"I think that is where they were when they shot up the flyer. See all the churned up soil?\"\n\n\"Is that a path through the trees at the upper edge of the clearing?\" the Vespan asked.\n\n\"Yeah,\" said Roy, nodding. \"A game trail, probably. Easier to follow one of those than to break new trail. Even if they don't go exactly where you want, it makes travel faster.\"\n\n\"Our friends would have gone that way, yes?\" Vemmo handed the binoculars back to Roy.\n\n\"Pretty sure they did,\" said Roy with a nod. \"If the bad guys weren't around, I would too.\"\n\n\"But it is not safe now?\" Vemmo asked.\n\n\"No.\"\n\n\"Roy, I am sore. My legs hurt,\" the Vespan said and squatted to stretch his muscles.\n\n\"We need to go a little further, Mr. Vemmo,\" Roy told him tiredly. He reflected that that had become his mantra over the last few days. Just a little further. A little further and we can rest. A little further and we'll be there. A little further and we can eat. Just a little further. Roy made a decision and sighed. \"Let's stay on foot a while. We can cut through the trees easier that way and skirt the clearing. See if there is some place over there we can hole up so me and Gamble can sleep.\"",
        "\"You do not wish to continue the pursuit?\" Vemmo asked, surprised.\n\n\"I'm done in,\" Roy said. \"Gamble is stumbling. It'll be dark by the time we get above the burn. Evening is already coming on, too. When the moons rise we'll have enough light to start again.\"\n\nIt took them another half hour to get to the place where Tammy and F`reet `du Hom had met Jean and Yoshi after the firefight in the burned field. The suns were sinking behind the western rim of the valley but there was still enough light for Roy to see the ground in some detail. There were strange, pear-shaped boot tracks all around and Roy examined them carefully.\n\n\"These are fresher than the steelie tracks,\" he said, using his flashlight to point them out.\n\n\"Can you be sure?\" asked Vemmo, looking over his shoulder.\n\n\"See how this one is pressed into the steelie print?\" said Roy, indicating where one of the boot tracks had squashed down the soil across a print of a steelie toe. \"This almost has to be one of Boudi's tracks. She's the biggest in that group. Almost as big as Gamble. Looks like there were only two of them. This couldn't be one of the patrols.\"\n\n\"From the flyer, you think?\" Vemmo asked.\n\n\"Could be.\" Roy considered the idea for a minute and nodded. \"Yeah. Probably flew to the edge of the trees and hopped out long enough to investigate. Has that flyer got a full sensor rig?\"\n\n\"Not a military grade rig,\" Vemmo said. \"It is intended for search and rescue. We upgraded it last summer.\"\n\n\"Just a full spectrum sensor, then,\" the teen sighed and sank to the ground wearily. \"Is it sensitive enough to detect weapons?\"\n\n\"It might be, but someone would need to recalibrate it,\" said Vemmo, sinking down beside Roy. \"The basic unit is designed to be easy to operate. Really, all you have to do is turn it on. It is preset to distinguish Human and Vespan signatures from those of animals at an altitude of seventy-five meters or higher. Someone familiar with the system would be required to make the fine calibrations necessary to do the specific adjustments to detect weapons or power cells.\"\n\n\"Good.\" Roy sighed and began to rise, but his legs betrayed him and he slumped back to the ground.\n\n\"Is it safe to rest?\" Vemmo asked. He sounded concerned.\n\n\"Gamble's had it. So have I,\" Roy said and forced himself to his feet. \"We can stay here for a bit. There's good cover and I doubt the Dusig will be looking for anyone here since they already checked it out.\"\n\n\"Then you and Gamble must sleep,\" Vemmo said solemnly. \"And I will watch over you.\"\n\nRoy took his pistol from his belt and held it out to Vemmo.\n\n\"Do you know how to handle one of these?\" he asked.\n\n\"Yes,\" Vemmo confirmed, accepting the weapon a little awkwardly. \"You Humans have such large hands. So many fingers.\"\n\nIt was a common complaint among Vespans who had only three fingers and a thumb on either hand. Roy gave him a weary, though, genuine smile.\n\n\"I don't have anything else, unless you want the rifle.\" \n\n\"That would kill me just from the recoil,\" chuckled Vemmo, though it was not true. He grinned impishly at Roy and shook his head. \"I will make do with this. Sleep now. I think I will get among those rocks. If something happens, I will wake you.\"\n\nRoy took a minute to remove the saddle from Gamble and then flopped down in a patch of thick grass with his rifle beside him. He was asleep in moments.\n\n*****\n\n\"Roy, you must wake up!\"\n\nRoy grunted and was sitting upright before he even realized Vemmo was shaking him.\n\n\"What's up?\" he asked, rubbing sleep from his eyes.\n\n\"I heard the flyer pass near,\" said Vemmo. \"I went to look. It was hovering low near the next spur of the hill. I saw a few of the Dusig moving among the trees there.\"\n\n\"Okay. Okay. I'm awake.\" Roy hacked and spat phlegm into a bush, then wiped a hand across his mouth. His tongue felt like someone had coated it with tar and tasted worse. He could not recall the last time he had brushed his teeth. He shook his head. That was not important. He blinked around him and up at the branches above. \"It's still dark. How'd you see them?\"\n\n\"I used your binoculars. There are many trees, but if I set them for thermal vision only I can see shapes fairly well,\" explained the Vespan.\n\n\"Right. What was I thinking?\" Roy shook his head, trying to clear his thoughts. \"Let's take a look.\"\n\nVemmo took the teen by the hand and led him through the darkened wood to a large boulder that sat like some ancient toad shrouded by bracken and wild rose. Roy ignored the tiny rose thorns as he climbed up it, though Vemmo cursed them. The top of the stone was relatively flat and wide enough for the pair to lay side by side. Vemmo looked through the binoculars first in order to find the spot he had seen earlier.\n\n\"There!\" he said and thrust the binoculars into Roy's hands. \n\nThough Roy could hardly see him, Vemmo pointed through the intervening trees at a saddle in the distant hill spur. Roy zoomed in on the spot. There was no sign of the flyer and he could not hear it, but he did see a handful of figures disappearing through the saddle to the other side of the slope.\n\n\"I see them,\" said Roy. \"Saw them. Gone now.\"\n\n\"What do we do?\" Vemmo asked apprehensively.\n\n\"Follow them,\" Roy replied firmly. He thought it odd to be the leader in this situation. Vemmo was considerably older than he was and should be in charge, but Roy knew more of the wild and the petite alien seemed willing to follow his lead. \"They're on Tammy's track and we can't let them catch up to her.\"\n\n\"We cannot fight that many, Roy.\"\n\n\"We can't let them catch the others, either, Mr. Vemmo.\" Roy slung the binoculars around his neck and climbed down from the boulder. Vemmo followed. \"I won't make you fight if you don't want to, Mr. Vemmo. I can leave you here. There's water, at least, and I can leave half my food and my pistol. Wouldn't be much good against something like a bear, but you could defend yourself from pumas or wolves.\"\n\n\"No,\" Vemmo said. \"I will stay with you. I do not know how much use I can be, but staying here is out of the question.\"\n\nSoon they had Gamble up and saddled. By the time they were ready, both moons were above the eastern hills. Fortunately they were waxing and spreading a good deal of their silver-blue light. Roy stayed alert for any sound of the flyer. Only a distant whine could be heard and he felt sure it was coming from the far side of the rise.\n\n\"I think they must be flying N.O.E.,\" he said absently.\n\n\"What does that mean?\" Vemmo wanted to know.\n\n\"Nap-of-the-earth,\" said Roy \"Means they are flying at treetop level. Following the terrain contours. Ground support fighters do that to keep out of the line of sight of enemy weapons.\"\n\n\"You think they are worried about us shooting them down?\" Vemmo asked.\n\n\"Maybe.\" Roy shrugged. \"After what Tammy and them did to the lifter, the Dusig might not want to take any more chances. It's not like that flyer is some kind of war machine. It isn't even as tough as the lifter. One rifle bullet into its grav plate would probably take it down.\"\n\nRoy was willing to take a few more chances now that he knew the flyer was not over them. Even so, it was getting on to midnight by the time they made it to the saddle. Roy dropped to the ground heavily and stretched his thighs and flexed his knees. There was a dampness under the bandages, but it did not feel as if his wounds had opened so he said nothing.\n\n\"You go ahead and ride, Mr. Vemmo,\" Roy said, slipping on his NVGs. \"I'm going to stay on foot.\"\n\n\"If your steelie is tired, perhaps we should both be afoot,\" Vemmo said, adjusting the hood of the poncho Roy had given him against the bite of the chill spring night. The garment was comically huge on the diminutive Vespan, but it was all Roy had.\n\n\"It isn't that,\" Roy said. \"You weigh half what I do. Gamble can carry you easy. I need to look for tracks and I can do that better down here.\"\n\n\"We know where your friends are going,\" Vemmo pointed out. \"Why not make for the tower?\"\n\n\"Because the Dusig are on their trail,\" Roy said. \"Come on.\"\n\nAs it turned out, Roy was right. They did pick up the trail. When he saw it, though, he felt a lump of ice form in his belly.\n\n\"What is wrong?\" Vemmo asked, seeing the teen stiffen.\n\n\"There are a lot more than I expected,\" said Roy, still looking at the tracks.\n\n\"More Dusig?\"\n\n\"Yeah,\" Roy confirmed. \"Keep Gamble here. I'll be back in a minute.\"\n\nRoy made his way northward back across the belly of the saddle. The further he went, the more he felt sure a second group of soldiers had joined the first. It was not until he found a split in the trail he understood two groups had passed the same way. He rushed back to Vemmo.\n\n\"I was right,\" he panted, taking up Gamble's lead strap. \"Looks like the first group has about ten or so. I figure they're from the lifter. Second group has maybe eight. Those are probably the ones I ambushed.\"\n\n\"That is a lot of soldiers for us to contend with,\" Vemmo observed in a worried tone.\n\n\"At least we aren't stuck between them,\" Roy said. He led the way down the slope. \"I just hope they don't join up.\"\n\n\"Would that not be a good thing?\" Vemmo asked. \"A single group would be easier to keep track of.\"\n\n\"It would be, but it would also mean they have more guns.\" Roy shook his head, trying to make sense of his situation. \"The first ones we fought, the ones at the crash site, were disorganized and stupid. We took them out pretty easy and got away without anyone really getting hurt. I mean, Tammy lost a chunk from her ear, but nobody was seriously wounded. Taking on eighteen of the bastards when they are alert and expecting trouble is going to be a lot different.\"\n\nOn through the night shrouded forest the pair journeyed. Roy kept them on course with the aid of his NVGs. Starlight and moonshine cast weird shadows among the trees, but he was used to such things and his goggles penetrated the darkness to reveal no threats. It was several hours before he noticed a dull glimmer in some of the tracks before them. The boot prints were ever the slightest bit warmer than the surrounding ground. Roy picked up the pace and soon a flicker appeared far ahead. Roy motioned for Vemmo to join him on foot and the pair left Gamble standing beside the trail where there were young shoots for him to crop while they went ahead to scout.\n\n\"You notice anything weird about that?\" whispered Roy, pointing down the trail.\n\n\"No,\" Vemmo replied, peering through the binoculars again. \"Except for the one at the fire they seem to be asleep. There are eight of them, as you said there would be.\"\n\nThe pair had stopped when they spotted the campfire through the trees. They were roughly three hundred meters out and Roy had a bad feeling.\n\n\"That first group had a fire and we wiped them out,\" he said. \"These guys, if they're the ones I ambushed, know about that. When I ambushed them, they reacted quick and almost got me. Tells me whoever is in charge down there knows a thing or two. And where is the flyer? I haven't heard it in a couple of hours.\"\n\n\"Most probably, it has landed,\" Vemmo said, lowering the lenses from his eyes. He cocked his head as if made warry by the caution in the teen's voice. \"The flyer is not large. It would need only a small clearing. Or it might be landed in a streambed. Anywhere there is enough room and firm ground would do.\"\n\n\"That's not my point,\" said Roy. \"Why did they stop the search?\"\n\n\"Do you believe they know we are hunting them?\"\n\n\"Could be.\" Roy wiped a dirty hand over his dirty face. \"Could be they want to lure us into a trap.\"\n\n\"We cannot know,\" said Vemmo. \"Do we go around them?\"\n\nRoy squatted down and peered through the night at the distant fire. His NVGs improved his vision so that he could see the enemy camp as well as if it were full daylight.\n\n\"You play chess, don't you, Mr. Vemmo?\" he asked after a while.\n\n\"Avidly,\" the Vespan confirmed. \"It is one of the greatest contributions you Humans have brought to the Universe.\"\n\n\"I play poker,\" said Roy. \"And I think we have... I don't know. A combination of the two games, maybe.\"\n\n\"I do not understand, Roy.\"\n\n\"Look at that and tell me it isn't a trap,\" the teen said. \"It's bait.\"\n\nVemmo crouched down next to Roy and considered the camp through the binoculars again. After a brief study he lowered them and nodded.\n\n\"They have exposed a piece with the intention of playing some gambit or other,\" he said slowly. \"I think I see what you mean. If we move past them to join your friends, we are caught between two forces. The larger force from the flyer and this one.\"\n\n\"That's the chess part,\" said Roy. \"The poker part is the bluff.\"\n\n\"What is the bluff?\"\n\n\"I don't think that camp down there is really what we are supposed to think it is.\" Roy took out his canteen and drank, then offered it to Vemmo. \"Suppose we try skirting around. I mean, that camp is right on the trail. We're in kind of a draw. The terrain, I mean. We'd have to stay pretty close or we'd have to climb up slope a good ways to get out of it.\"\n\n\"Ah! I see.\" Vemmo handed the canteen back and nodded. \"That is another chess move. They will have more soldiers in ambush. They will attempt to take us by surprise. Not checkmate, but certainly we are checked.\"\n\n\"Yep,\" Roy said grimly.\n\n\"We must proceed,\" said Vemmo, uncertainly. \"What do we do?\"\n\n\"We don't play their game.\" Roy rose and stalked silently back through the trees to where Gamble stood drowsing. Vemmo followed. Upon reaching the steelie Roy took up his lead strap and began making their way back up the trail towards the saddle.\n\n\"Where are we going?\" Vemmo asked, puzzled.\n\n\"I don't know this part of the valley all that well,\" the teen told him. \"Been fishing down on Big Lake a few times, but it's sort of a long way to go, you know. One time, though, my dad took my sister and me for trout.\"\n\n\"Your adopted father, you mean?\"\n\n\"Right,\" Roy confirmed. \"We hit a couple of good streams on that trip and I think we're close to them. I need to check the map. I just don't want to do it this close to those guys.\"\n\n\"Surely they cannot see us,\" said Vemmo, glancing over his shoulder.\n\n\"We don't know that,\" Roy said. \"My rifle scope can pick out a target at two kilometers. I know the CP has scopes that can scan out even further. Built right into the helmets. Marines especially. Yoshi said these guys might have stuff we don't know about. We need to assume they can do stuff we can't.\"\n\n\"If so, why have they not already swooped in and captured us?\"\n\n\"The last time they tried Tammy shot down their flyer,\" Roy pointed out. \"That's the funny thing about poker. You have to guess what cards the other players are holding. With chess, there's less guessing.\"\n\nWhen Roy found a spot he was happy with he took out his pad and called up the map. He did not expand it into a hologram which made it more time consuming to find what he was looking for, but eventually he got things narrowed down.\n\n\"Okay,\" he breathed, looking intently at the small screen. \"Right there. That's what I thought.\"\n\n\"Right where? What did you think?\" Vemmo craned his neck to look at the screen.\n\n\"See this creek?\" Roy pointed to a thin line on the map. He tapped the screen to enlarge the view. \"Right there a stream enters it. A couple of weeks ago that stream would have been full of water. The creek would have been real deep and fast flowing. Now, though, the runoff is less. Still more than what it will be in summer, but not as much as it would have been when the thaw came on.\"\n\n\"So?\"\n\n\"So those water courses can be used like roads.\" Roy expanded the view again and pointed to another spot. \"That is about where the Dusig camp is. Less than a kilometer from the creek. About two from where the stream joins it.\"\n\n\"Roy, I know little of woodcraft,\" Vemmo said, shaking his head. \"I do not understand what your point is.\"\n\n\"The tower is way the hell over here,\" Roy said patiently, indicating a pip to the south and west of their position. \"We know Tammy and the others are headed that way. The Dusig don't.\"\n\n\"Very well,\" Vemmo nodded. \"You will now go across country to the tower?\"\n\n\"Not yet.\" Roy scrolled the map all the way down to big lake. \"Not yet, Mr. Vemmo. See, Tammy is smart. Her dad says she's canny. She made that mistake back there at the burned field and she won't make another one like it. She learns quick and adapts. I think she's going to try putting the Dusig off her trail.\"\n\n\"By using the creek as a road?\"\n\n\"The creek and the stream,\" said Roy. He smiled knowingly. \"I'd do the same thing. See, I don't think she'll follow the creek all the way down to Big Lake. That would mean she'd have to climb way the hell back up these hills to the tower.\"\n\n\"The stream leads up towards the mountains, though.\" Vemmo shook his head. He did not understand.\n\n\"Sure it does,\" Roy almost chuckled. \"You're a Vespan. You aren't a soldier or hunter. You're smart enough to follow tracks in the dirt, though. If those tracks led you to a creek, would you continue to follow the creek?\"\n\nVemmo considered a while and finally nodded.\n\n\"I would, given two provisos,\" he said. \"First, I would look for any indication that the tracks exited the creek on the other side. If they did not, I would follow the creek until it met this stream of yours. There I would look for any indication the tracks, or rather, those making the tracks diverted up the stream. If not, I would follow the creek.\"\n\n\"But you wouldn't make for the tower,\" said Roy seriously.\n\n\"Only if I knew they were going to it.\" Vemmo shrugged. \"The Dusig do not seem to know that. At least, for the moment they do not. Two things occur to me, though.\"\n\n\"What two things?\"\n\n\"Firstly: When your friends turn their course more directly towards the tower, the Dusig are likely to send the flyer ahead of them.\" Vemmo shrugged. \"They may bombard the tower, even. I cannot say. Secondly: The Dusig do not know you and your friends removed the transceiver from the jZav`Etch ship. If they did, they would already be at the tower.\"\n\nRoy's stomach knotted and he began shaking in fear.\n\n\"What if they do know? What if it's another chess move?\" he said, breathlessly.\n\n*****\n\n*duroplast - A lightweight polymer used in a wide range of construction applications. Favored in the manufacture of aircraft."
    ],
    "authorname": "RipperFish",
    "tags": [
        "adventure",
        "cat",
        "furry",
        "sci-fi",
        "forrest",
        "multi-chapter",
        "future"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-world-for-the-taking-ch-07"
}