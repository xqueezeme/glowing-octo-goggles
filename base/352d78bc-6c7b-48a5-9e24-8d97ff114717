{
    "title": "A Tale of Revenge Ch. 07",
    "pages": [
        "Ok, I'm kind of nervous about this chapter. I rewrote a lot of it just recently. I'll get more into it at the end but for now please enjoy! Also, this will make little sense if you start with this section. If you're interested, I highly recommend you start with the first chapter.\n\n*\n\nThree weeks later, the promised weather had started in earnest. Anna and Dev had managed nearly every mercenary between them and the capital. As they traveled, the population became denser and they were able to stay in inns and eat in roadhouses instead of foraging for themselves. Anna took to disguising herself as a boy, magically and mundanely, to avoid questions and looks. She had stood out in her village for her dark hair and eyes and pale skin. As they got closer to the capital she was no longer so unique, but she preferred to draw less attention. They used the coin they took off their targets to pay their way. It seemed only fitting that the stolen money should help them to find those who took it.\n\nAnna and Dev had grown close as traveling companions. He never asked again about the marks he had seen, and for her part she all but ignored her magic until it was time to curse the men they had tracked down. She learned to draw a few runes and place basic healing spells but chose not to push it any further. Dev had quickly gotten over his initial interest in possessing magic as well, which helped soothe Anna's fears that she'd somehow corrupted him.\n\nDev had asked her to teach him how to fight and she had agreed happily. Unfortunately it became quickly apparent that, never having learned herself, she was completely incapable to instructing another. All she could do was provide Dev a sparring partner high above his own capabilities. Anna was never more aware of her lack of discipline then when she found how little control she had over her movements when confronted. More often than not Dev ended up in the mud, but his skills were improving, despite Anna's inability to hold back.\n\nDev had also come to terms with Anna's unique brand of dispensing justice. There had been one close call, when Anna had cornered a man Dev recognized as the one who had set the house alight with his father still inside. He had launched himself at the man, forcing him to the ground while holding an arrowhead against the great vein in his neck. Dev stared into the man's frightened eyes and understood, for the first time, what Anna was talking about. He wanted to kill this man, to watch him die at his hands, but he knew it would take more from him than it would put back in.\n\nFor Anna the weeks had settled into a strange rhythm that, oddly enough, was beginning to feel normal to her. During the day she was traveling with Dev, a partner in their quest for revenge. He finally managed to draw her out until she was regaling him with her father's stories and the gypsies' songs in return for his folk ballads and wistful recollections. Though she wasn't always the most cheerful traveling companion, they had found an easy pace between the two of them.\n\nAt night though, the god would come and take her away, awakening the darkest corners of her sexuality, wringing pleasure from her body as he played on her deepest desires. He bound her, whipped every inch of her, spanked her until she was sobbing and dripping wet. Each night he came to her, he would force her to a shuddering climax on his skillful hands and mouth. He left her exhausted and yet somehow unsatisfied.\n\nShe both dreaded and anticipated these meetings. Once he didn't come for three nights together and she had thought she might explode. When he did come the fourth night, he teased her mercilessly until he started in earnest. He had her lying back, arms restrained overhead, her legs bent and pulled back, tormenting her with his tongue and fingers. She had tried not to show her reactions. So he spanked her wet slit until she couldn't hold still any longer, forcing her to lose control once again.\n\nAnother night he returned her to the moving trees who were exceedingly eager to see her again and immediately wound around her like excited pets. Leonid had taken full advantage of her state, strung up, hands overhead and legs pulled apart. He clamped her nipples in unyielding metal while the branches twined around her breasts, binding them so tight that they throbbed in time with her heart. He was stroking her to near completion while occasionally pulling on the chain that linked the two clamps whenever she got too close. It was too much, the trees' constant embrace as it moved over her sensitive skin, squeezing her breasts as Leonid seemed to know exactly where to touch her and exactly when to pull away. Anna surrendered. She looked into his eyes and said his name, begging for release. She hoped she hadn't imagined the effect it had on him. His gaze grew intense and he finally entered her with three fingers, stroking her clit with his thumb. She had screamed his name again in climax. The wicked creature that he was, he released the clamps just as she began to clench around his fingers. The pain shot through her, the orgasm she had reached was at once overwhelmed with pain and pushed to an even higher peak. He had soothed her tortured nipples with his mouth as his hand brought her to repeated climaxes until they all bled together and she lost all sense of where her body stopped and her surroundings began.\n\nAfter he left her, or on the nights he didn't come, she would fall asleep and drift into dreams where he was there with her, facing her completely, no power play or dominance. In her dreams their couplings were anywhere from gentle to carnal in their urgency and they were satisfying in a way her waking interactions with him couldn't be.\n\nBut it wasn't always enough to keep her nightmares at bay. She often fell into those dreams of death. She would cover her ears to no avail as the sounds of her loved ones dying filled her mind. It was those mornings she woke with her dark purpose reaffirmed.\n\nNow, finally, they were on their last sell-sword before the capital. She could see the other soldiers were stationed in the palace. She was grateful they were all so conveniently located together. Tracking down all of these dispersed murderers was getting tiring. She and Dev had tracked this last one back to his home on the outskirts of a large town a day's ride from the capital. They had put up for the night in an inn, taking a day to rest their horses before they dealt with him and made their last push towards the city. Anna had settled into a deliciously warm bath she had commissioned from the innkeeper. She let the warm water sooth the aches from riding, along with the familiar soreness of her overworked core after a visit from Leonid the night before. She folded her long limbs in an attempt to submerge all of her skin away from the autumn chill. She felt wonderfully clean for the first time in weeks. She had been more careful to eat and not to overtax her magic and had managed to gain weight again, shedding the gauntness that had clung to her form since that day so long before.\n\nWas it really that long? Anna turned over the events of the past while. It had barely been two months since the soldiers had descended on her village. And they had arrived in high summer with barely any warning. Anna was well aware of the war in the eastern stretches of the kingdom. But her home, in the southwest, has barely felt a whisper of the conflict. As she and Dev neared the capital, the talk of the war had become more omnipresent. More men were being called up, more boys packed their bags for glory. It begged the question why, with so much at stake, an entire troop of soldiers and mercenaries showed up in a tiny village to wreak destruction and death only to disappear back into the land as if they had never been away. Anna frowned. This issue had bothered her before, but she found herself chasing the problem in circles and coming up with nothing. She had posed it to Dev as well with no real results.\n\nAnna sighed, sinking further into the bath, letting her dark hair flow around her head in an inky cloud. There were a few things that didn't add up. What was of so much interest in the tiny village? She considered the old healer woman. Anna had read the entirety of the book of magic she found there several times at this point. Perhaps the old woman was of some importance? Then why murder everyone? They didn't need to send 50-odd men to take out one country witch. And how was Leonid connected to this? He had never spoken to her again of the deal he had made with her ancestor. She had always meant to ask and it always seemed to slip her mind when he was around. Then again there were always more pressing matters to think of when he did appear.\n\nAnna dunked her head and came up for air, wiping the water away from her eyes. There was no use thinking of that. No good in getting all heated now.\n\n\"Penny for your thoughts.\" Anna started at the sound of his voice, but managed not to jerk towards his surely smirking face. The dirt beneath her fingernails got the appearance of her attention.\n\n\"You've paid much more than that for unlimited access.\" A sly smile played on her lips. \"Or do you just like sneaking in on women in the bath?\"\n\n\"Seems I paid for access to that as well.\" His voice held a promise underneath the teasing tone. Anna schooled her face against the shiver of excitement that shot down her back.\n\nShe turned towards him. Leonid was stretched out on the bed, propped up on his elbow, her favorite smirk planted on his lips. She placed her arms on the rim of the bath and perched her chin on top of them, giving him a smile.\n\n\"Even a paying customer can overstay his welcome,\" she remarked conversationally.\n\n\"Well, aren't you lucky that I'm no longer paying.\" His lips continued from the smirk to a cheeky grin. Anna sighed and turned back to her nails.\n\n\"I seem to recall you saying you would not be demanding. It seems to me you might be confused as to the meaning of the word.\"\n\n\"Are you attempting to educate me? Have you never learned to listen to your elders like a good little girl?\"\n\nAnna laughed at this. \"Well I suppose my bath is over then. If you intend on continuing my education.\"\n\n\"Oh I do,\" came a whisper right behind her, his lips against the hard shell of her ear. She couldn't stop the sharp intake of breath as arousal shot through her, heating her skin in the cooling bath. His fingers traced down her back between the soaked tendrils of hair clinging to her skin. \"There is still so much for us both to learn.\"\n\nAnna only somewhat managed to regain control of her voice. \"And here I was enjoying the first hot bath I've had in weeks. Your timing is not optimal.\"\n\n\"Oh?\" Leonid's voice slid over her as his lips met the column of her neck. \"This tepid water is so tempting? Perhaps I should allow you to finish.\" He pulled away.\n\n\"Well,\" she said with a sigh, \"all good things as they say.\" With that she stood up, letting the water cascade down her skin. She pulled her long locks over one shoulder to wring the water out, turning towards the god as the water rippled over her breasts. Part of her was aware that it was a bit silly to try tempting a god with her limited, mortal and ever imperfect assets. The bigger part didn't care. This was their dance and this was her part to play. She had stopped fighting it.\n\nShe looked up at him, hoping her insecurities weren't written all over her face. Vulnerability, she was learning, was almost infinite in its depths. Just when she thought she had bared herself completely, it seemed there was another corner left unexplored.\n\nLeonid was not looking at her face, to her small relief. But the way he looked at the rest of her set her off balance in an entirely different way. He walked towards her slowly. Anna let her fingers tangle at the edges of her hair, just below the curves of her breast but otherwise resisted fidgeting under his gaze. He raised his fingers and traced the wet skin from her bare shoulder, down to the top of her breast, then directly across her nipple and to the torturously sensitive underside. \"All good things,\" he said with a smile and dropped his hand.\n\nWith that the room around them disappeared and Anna was standing in a copse just beyond the boundary of the village. Leonid appeared behind her, his hands smoothing over her shoulders. She realized that the hair under her fingers was completely dry, as was the rest of her.\n\n\"And here I was all clean and you drag me back to the woods. Have you never thought of using a bed?\" she said, her exasperation only half faked. She had been looking forward to being warm and clean tonight.\n\nHis mouth was on her neck again. \"I promise to return you just the way you were.\" His hands came around her body, one to her breast, cupping it with his hands while his wicked fingers found the puckered nipple and started to roll it between them. The second went across her stomach and to the inside of her parting thighs, tickling the skin there.\n\nShe melted into him, pressing her body back into his embrace. She tilted her head, giving him better access to where her neck met her shoulder. His lips found the place where she was most sensitive. Anna bit back a moan as his fingers began stroking her outer lips, teasing in the rapidly dampening curls.\n\n\"Are we so eager tonight?\" Leonid said before sucking lightly on her skin.\n\n\"I suffer what I must,\" she said with a small smile.\n\n\"Don't get too smart. I have plans for you tonight. You wouldn't want me to have to teach you manners as well.\" His voice was light and laughing but the smile left Anna's lips. He would push her again, some new boundary she hadn't met yet. Part of her was scared but the other, deeper part of her, the part that loved the pain and craved the loss of control, that part rejoiced. He felt her stiffen at his words and he came around her front slowly, trailing one hand along her body so as not to lose contact.\n\nHer eyes fell to his other hand where a long black rope was hanging ominously across his fingers. She took a deep breath and looked up at him. He looked back at her and took her arm, running his hand up and down the skin before bringing one length of rope to her upper arm, looping it around above the muscle there. As he worked, the second length followed the same path on its own on her other side. He wound it around her arm twice, then a third time, forming a sort of cuff. She could feel it was made of the softest fibers but it was strong and firm against her skin. She took in a shaky breath.\n\n\"Do you remember when your father took you and your sister out and taught you how to tie rabbit snares?\" Leonid spoke as he continued to work. He tied off the cuffs around her upper arm, leaving a great deal of rope hanging down. His hands stroked the skin and he moved to coil the rope just below her elbow, forcing her forearms to bend at a sharp angle from her upper arm. Anna nodded, she did remember, but why was he bringing this up now? \"You and June practiced tying the slip knots around each other's wrists and pulling them. Do you remember?\" Again Anna nodded. Her body was sending terribly mixed messages back to her brain. It felt like her core was writhing though she couldn't be sure if it felt good or terrible. This was always the place he took her to, the line between pleasure and pain, between agony and ecstasy.\n\nHer brain felt cloudy as her breath picked up. His busy fingers had brought the rope to her wrists and wrapped the rope three more times, creating the last cuff. Still more rope hung down from each forearm, which were forced away from her body towards him, her wrists turned upwards as though offering him something from her hands. He tied the last knot at her wrist and Anna felt a jolt of arousal between her legs as if he had touched her but there had been no contact.\n\nAnna's eyes flew to his face. She had felt that before, that day in the woods. When June had pulled her slipknot tight, finally succeeding in getting it right, Anna had felt a shock in her core, just as she had when Geoff threw her into the water. She hadn't understood then what it was.\n\nLeonid bent down and placed a soft kiss on her parted lips. Before Anna had composed herself enough to respond he was gone, moving behind her. He drew her arms back with him, crossing her forearms across her back so they lay against each other. The position forced her back to arch and he used the ropes to secure her wrist to the opposite arm just above the bend of her elbow.\n\nAnna's breathing increased with every moment. The feeling of being so completely bound was both terrifying and exhilarating. Leonid came around her front again, his hand trailing over the line of her arched body, plucking her presented nipples and smoothing over her sides. A bench appeared behind him and he sat, pulling her kneeling onto his lap, her legs on either side of his thighs.\n\nAnna felt off balance, like she might fall at any moment. He wasn't offering her any support at the moment and she tugged her arms reflexively to try and find some purchase. When her arms couldn't come to support her she felt a small jolt of panic. The ropes began to snake their way across her body, crossing first in front of her and then again at her lower back before curling around her thighs, creating the same three turned cuffs around her upper thigh and then directly to her ankle, holding her legs in their bent position. Then back to the arm on the same side, forcing them to spread even further. She was totally helpless, her body held firmly in the embrace of the silk cords. Something like panic began to well up in her chest, her breathing was ragged and uneven, her ears roared. Her wide eyes met his eerily blue ones and she was afraid.\n\n\"Anna,\" his voice was soothing, his warm hands grasped her sides, holding her firmly on his lap. \"It's alright.\" His hands moved across her back, pulling her body more firmly against his, keeping her in a tight embrace. \"Anna, do you trust me?\"\n\nThat brought a halt to her reeling mind. She looked back into his face.\n\n\"What?\" she gasped.\n\n\"Do you trust me?\" he asked again.\n\nAnna shook her head confused, \"Don't you know?\"\n\nLeonid shook his head slowly. \"You are unsure.\"\n\nShe was unsure. Did she trust him? Could she trust him? He owned her, he had taken her and piece-by-piece unmasked her innermost desires and fears. He had invaded her mind and wrung pleasure from her unwilling body. And now he asks for trust?\n\n\"You forced me.\"\n\n\"I own you.\"\n\n\"I didn't like it.\"\n\n\"Do you like it now?\"\n\nAnna thought for a long moment before she nodded.\n\n\"Do you trust me?\"\n\nThere is was again, that disturbingly small question. There was no small answer. He owned her, for eternity, beyond the realm of her mortal life, beyond any timeframe she could possibly comprehend. Did she trust him? Could she even conceive of a trust that could withstand all time? No. She couldn't. But now, in this moment, could she trust him? He had pushed her boundaries, opened up her soul, but he had done it for her pleasure. He had seen in her the desires she had felt all her life but hadn't understood, the buried signs of her particular taste. Did she trust him to know her and bring her pleasure?\n\nShe bit her lip and looked at him.\n\n\"Well?\" he asked. Did he sound impatient?\n\n\"Don't you know?\"\n\n\"Contrary to what you might think I am not always listening in. I do love to be surprised.\"\n\nAnna smiled at that. She nodded.\n\n\"Say it.\" Anyone less used to the sound of his voice might not have noticed that it was slightly ragged.\n\n\"I trust you,\" she whispered.\n\n\"Again,\" he said, his voice dark and lustful. His eyes burned her and she felt like her entire body would ignite.\n\n\"I trust you,\" she said in a low voice. His kiss almost cut off her last word. His mouth was hot and demanding. Anna was swept up in his fervor. She wanted to tangle her fingers in his hair, to pull him into her as he was pulling her to him. But being bound and vulnerable sent a dangerous excitement through her. Her body moved with every pull of his hands, completely dependent on him. That deepest part of herself thrilled at the loss of power.",
        "His mouth trailed down her neck, devouring her skin and leaving a blazing trail of sensitized flesh behind it. Her back was arched towards him, offering her breasts up to his mouth. She moaned openly as his mouth closed over her aching nipple. His teeth scraped the sensitive skin and she squirmed as much as her bonds would allow. His clever fingers found her slit again and began to stroke her plump lips, pulling more whimpers and gasps from her, while his other hand held her ass firmly, grasping it as he held her on his lap. She felt assaulted with his touch, like he was coming at her all at once and she had no way to stop him. The dangerous tension in her core seemed to emanate outwards as she pulled at the ropes, his fingers swirling over her clit and his teeth biting down on her nipple. She whimpered in delight and building passion. She bit her lip to keep from calling out his name.\n\nHis caresses gained in intensity. Her eyes met his and he held her gaze. Seated astride him she was directly level with his face, which was turned towards hers. Her breath caught. The intimacy of his gaze was more alarming than her bonds had been. She found she couldn't look away. His hand between her legs grew bolder, his touch more firm. He held her eyes as he sank two fingers inside her slowly so that she could feel every moment of the penetration. His thumb ran teasing circles around her sensitive nub, sending shivers up her back. His other fingers slid back, teasing the puckered hole there. Anna's breath caught, her mind suddenly very focused on his fingers as he gently pressed against that forbidden place. And yet she did not want him to stop.\n\nHe held her there, his fingers agonizingly slow as they entered her before moving in and out. It was overwhelming how her body reacted, how the sensations running throughout her seemed to intensify beyond what she thought possible. And yet she still couldn't look away or close her eyes as the pressure rose in her chest. Some emotion clawed at her lungs as her breathing picked up again, his skillful fingers pushing her towards the edge. And still his eyes didn't leave hers. When the peak came, it felt like her lips were going numb, her fingers tingled and her entire body was wracked with a wave of pleasure that dragged on and on. She was sure she would tumble from his lap as her muscles shook with release but he held her firmly with his other arm, wringing every last moment of pleasure from her body. Tears formed in the corners of her eyes as she felt suddenly overwhelmed, a lump rising in her throat, the pleasure edging into pain. And throughout it all their eyes were locked on each other, tethering her to the earth though her body soared much higher.\n\nAnd then his eyes slid past hers, focusing just behind her. His face hardened imperceptibly to someone who was not so close nor looking so intently. All at once the spell was broken, his hand was gone, and she crashed back down to earth. He was still looking past her and she thought to turn her head and see what had caught his attention. Instead her head hung down in front of her, shielding her view with curtains of hair. Then her body moved, with a will that was not hers, until her bent forehead was resting on his shoulder. She tried move again and found herself locked tight through no choice of her own. A chill ran up her spine as fear washed over her.\n\n\"Imonesh,\" his voice was more cavernous and godly than ever. \"To what do I owe this interruption?\"\n\n\"Tisk, tisk, Leo,\" a godly female voice came from behind Anna. Something about it made her heart pound in fear. \"Don't be such a prat. I came to play.\" Anna could hear the other god moving as she spoke, coming nearer. \"After all, you are visiting near my realm. You can't blame a girl for wondering what's brought you to this part of the world.\"\n\nLeonid's hands were on Anna's thighs, holding her firmly. As her heartbeat climbed, his thumbs began drawing small circles on her skin. She assumed it was meant to comfort her but it did little to help as the other voice drew closer. She desperately wanted to look over her shoulder to see the threat but he was somehow keeping her head immobile. She had enough freedom to yank at her ties and couldn't quite suppress a whimper when she felt just as securely bound as ever.\n\n\"This one seems so deliciously frightened.\" The goddess was right behind her now. Anna gasped as fingernails made contact with her bare back and started tracing lightly over her flesh. They were sharp and the gentleness was laced with threat.\n\n\"And I have given you the impression that I want your company.\" Leonid's voice felt huge from where Anna sat, head bowed towards his chest.\n\nThe goddess's nails raked across Anna's skin harder, making her flinch and gasp. Being trapped between two gods was making her miserably aware of how precarious her position as a mortal was. She tugged uselessly at the ropes. It no longer felt good. She no longer wanted to be at his mercy as long as he let this woman touch her.\n\n\"Don't forsake my presence so quickly. We can still wring some fun out of her.\" The nails on her back dug further, painfully scratching her skin. She gave a soft cry and began squirming in earnest though her head remained firmly in place. Leonid's hands held her more securely.\n\nThen something very strange happened. Anna could still feel that the goddess was hurting her, she could even feel the pressure on her skin and she knew it hurt, but somehow she suddenly felt wrapped up in a comforting blanket inside her own head. Everything taking place around her and to her felt very distant and unimportant. Her body still reacted to the pain, she could hear the noises her own mouth was making as the goddess drew thin lines of red down her spine, but it all seemed like it was happening to someone else. Had she finally gone mad? Is this what it felt like?\n\nLeonid was saying something but again Anna was finding it hard to care. This strange scene, her bound body trapped between the two deities as they traded barbs over her bowed head, seemed unimportant to her. She was still rational, she knew she should care, but there was this lovely warm feeling of comfort that she decided she much preferred to focus on.\n\nImonesh's nails were raking her skin now. Her body was twisting in pain and she called out louder. The goddess's hand came to her upper back, between the tops of her shoulder blades. Her claws started pushing painfully into Anna's skin. Anna shrieked as the goddess pushed past her skin and into the flesh of her back. She sobbed into Leonid's shoulder, her body writhing in the tight ropes around her limbs. And still Anna was curled up inside her own mind, pleasantly removed from the pain her body was experiencing.\n\n\"You seem to think boundaries don't apply to you,\" the goddess was saying. \"You're wrong.\" With that she withdrew her hand, leaving five rivulets of blood flowing down Anna's back.\n\nThe ropes disappeared and Anna's body collapsed against Leonid's for the briefest moment before he pushed her off of his lap and onto the ground as if she were no more than a sack of grain. Her face was still turned away from them, covered in her hair so she couldn't see the face of her tormentor. She sobbed raggedly, her breath harsh in her throat.\n\n\"Well now that you've ruined my entertainment for the night we can stop with\u2014\" Leonid's voice was cut off suddenly and the forest around her disappeared. Anna's hands no longer rested on forest floor but on the wood of her room at the inn.\n\nThe comforting barrier in her mind had also vanished and she was fully and completely aware of the pain in her body. Whimpering slightly she lifted her hand and touched the sticky mess at her back. Pain shot through the fresh cuts when her fingertips brushed it. She stifled a sob and made her way back towards the tub on shaky legs. She sank into the cooled water, letting it wash the blood away.\n\nSomething worse than the pain was clawing at her insides. She tried to ignore it. She had no business feeling this way. She was a fool to have even considered him more than he was. He owned her. He could do with her whatever he pleased, including letting that psychotic woman attack her, all the while sitting there, holding her down, letting her fight the binds he'd placed on her so tenderly. And she had said she trusted him and she had believed it. The thought made her want to vomit.\n\nAnna tried to push it down again, but the emotion would not be denied. It crept up her chest, like slinking vines writhing inside her ribcage. Her throat tightened and her eyes burned. She pulled her legs into her chest, hugging them as she let the tears slip down her cheeks into the water of the bath.\n\nShe felt betrayed.\n\n*\n\nThe next morning she met Dev downstairs in the inn. The innkeeper served them a hot breakfast and they ate silently. Dev could sense something was wrong. It wasn't hard. Anna looked like she'd barely slept, her mouth was drawn in a tight line and she kept looking off, deep in thought with her brows knit together. Dev had traveled with Anna just long enough to know that it was probably magic related and she would refuse to talk about it.\n\nOver the past several weeks Dev was constantly aware that there were things going on around this girl that he was not privy to. She would go to sleep in one mood and wake up in a completely different. Sometimes she was well rested, sometimes exhausted. He had heard her once at night, in the throes of a nightmare much like he suffered, but his attempts to wake her resulted in an unconscious use of magic on her part and he had decided to leave well enough alone after that. Even the simplest attempts to inquire after her well being were all but ignored and Dev had learned it was just another thing he couldn't talk about, like her magic, her inexplicable skill with weapons, even her ability to read the small book she seemed to constantly consult.\n\nHe sighed as she once again frowned at the far wall, looking through it really. The sound caught her attention and she flicked her eyes towards him. She looked down at her food. If he didn't know better he'd think she looked embarrassed. Dev shook his head, no matter what there was always this strange barrier between them, her secrets a constant wall around her.\n\nThey packed up and left in uncomfortable silence. Anna seemed to grow more sullen as they rode out of the town towards the house she assured him the last sell-sword had been for the past week. He tried to ignore it but her hunched shoulders and far off frowns were wearing on his patience. Finally he drew up his horse, halting sharply and causing her to jerk out of her morose daze.\n\n\"Alright, out with it.\" Dev said sharply, more sharply than he had intended.\n\n\"What?\" Anna snapped back, her dark eyes flashing at him.\n\n\"Out with whatever it is that has you sunk under these rain clouds.\" Dev's tone lightened. He wasn't really angry, just tense. \"We're about to confront the last of these men before the capital and you are millions of miles away. Can you please focus a bit? At least for my sake?\"\n\nAnna opened her mouth as if to snap back at him but closed it again. Her brow drew even further together, something he hadn't thought possible. But she nodded, setting her eyes forward and kicking her horse into a trot.\n\nDev sighed and kicked his horse up next to hers. He looked at her again.\n\n\"Can't you tell me what's got you so glum?\" he said gently, trying to coax her again.\n\nAnna looked over at him. Her face softened and for a moment Dev could see the girl underneath it all. The scared, emotionally exhausted girl who was desperate for some amount of comfort as she navigated this miserable mission. He had caught a glimpse of her a few times these past few weeks. It helped remind him she wasn't just some rampaging demon of vengeful justice. But her face closed again and she shook her head.\n\nDev gave up, giving her one more sideways look. She is just a girl, he reminded himself. It was easy to forget.\n\n*\n\nAn hour later he was no longer so sure.\n\nThey had ridden up to the house and left the horses at the tree line, covering the ground to the house quickly. Anna assured him no one would see them coming. Magic, he decided when she didn't say anymore and he followed her. The sounds of sex had drifted through the window as they approached. A woman's gasping cry had sounded out and within an instant Anna had thrown herself at the door, breaking the wood into splinters with the force of her movement. Dev had hurried after her.\n\nNow here they stood, Anna with her hands outstretched, dangling a man in thin air by some invisible force. He was grasping at ghostly fingers at his neck and his legs kicked uselessly, tangled up in his pants, which had been shoved to his ankles for his previous activities. A woman lay on the cabin's wooden table, her mouth and eyes wide with shock as she watched the man twist in the air. The man made gurgling sounds as he struggled to breathe. Dev turned to look at Anna and there it was, the face, the vengeful spirit. But this time it was angry. She was losing control. It took everything he had not to throw himself from the house and run as fast as he could. He couldn't believe that he had wanted magic for himself once he'd learned of her powers. To possess whatever was inside her did seem to be more of a curse than anything else. Her power was devastating when unleashed.\n\nLuckily, the woman on the table had more of a vested interest in Anna's actions. Before he could react, she had gotten off the table and thrown herself at Anna, knocking her to the ground. The anger in Anna's face flickered with confusion and the man fell to the ground in a heap.\n\nDev lunged at the woman and pulled her off of Anna.\n\n\"Witch!\" the woman shrieked over and over as she tried to claw her way back to Anna.\n\nAnna, for her part, stayed on the ground for a full moment, staring at the woman she had thought she was saving. Dev held the woman's upper arms with some difficulty as she wrestled against him, her bosom spilling from her undone laces, her face red and furious as she continued to screech insults at Anna.\n\nThe man coughed and stumbled to his feet, disoriented. Only then did Anna right herself. The man turned to look at her and suddenly her body felt swept away by a wave of power. There he was, in her village, standing over her sister who was desperately trying to crawl away. The man laughed, grabbing June's ankle and dragged her back, settling himself between her legs. \"Oh no sweetheart,\" he said in mocking tones, \"you're going to stay and entertain me and some of the men. But I'll take you now before it gets too messy.\"\n\nWith a jolt Anna was back in the cabin staring into the bewildered eyes of the soldier as he hoisted his pants up. But his confusion was clearing and he made for his sword, hung on a nail on the wall.\n\nAnna threw up her hands. Black cords surged from her outstretched palms towards the man. In an instant he was bound, the cords around his arms and legs, gripping him tightly to a chair.\n\n\"Witch!\" the woman Dev was still restraining screamed at her display of power. Dev had to wrap his arms around her torso and arms to keep her from launching herself at Anna again.\n\nAnna was less interested in the woman than she was in the man, who had seemed to settle down very quickly, perhaps too quickly for her comfort. She walked toward him, her head cocked to the side as she gave him a malicious smile.\n\n\"So ready?\" she hissed. \"You seem unsurprised to see me.\"\n\nThe man glared at her but stayed silent.\n\n\"Well this won't do, will it?\" Anna said again. The ropes grew, winding themselves around his chest over and over again. She reached out her hand, relishing how his eyes widened at her magic, and clenched her fingers into a fist. The ropes, following the same movement as her finger, tightened unbearably around the man's chest, squeezing the air from his lungs. She watched as he struggled desperately to draw breath and then she relaxed her fingers. Anna was dimly aware of the woman behind her sobbing and screaming at her to stop.\n\nThe man gasped and regained his breath but continued to stare at her stonily. Twice more she squeezed his body until he broke.\n\n\"I knew you were coming,\" he gasped. His breath sounded rough against his throat.\n\n\"How?\" she said, keeping the twinge of fear she felt out of her voice. She had made sure that the men she had encountered up until this point would not be able to speak of her, Dev or what had transpired. They should not be able to spread the word about her.\n\n\"I knew someone was coming,\" he began again. \"Men have been dropping off the map. Two executed in tiny villages they should have been able to take care of with one hand tied behind their back, a few others found wandering about, no money, nothing on them, eyes hollowed out and such. The news has spread.\" The man spat at her feet. \"I just didn't know it was some cunt witch.\"\n\nAnna clenched her fist again and the man let out a strangled sound as the ropes squeezed him again. The woman behind her was sobbing again.\n\nAnna relaxed his ropes. \"You should keep a civil tongue in your head while addressing those in a position of power over you and those you care about.\" Anna turned slowly towards the woman. For the first time, the woman got the full force of Anna's glare and it quieted her some. Absentmindedly, Anna almost admired the woman for attacking her and continuing to call out. She looked properly scared but still defiant.\n\n\"What are you to him?\" Anna asked. Something about this woman's behavior irked her.\n\n\"His wife, you bitch!\" she cried out, renewing her struggles. Dev held on.\n\n\"And do you know, gentlewoman, what your husband does for a living?\" Anna inquired, a hint of mocking in her voice.\n\n\"He is a man of the sword.\" The woman sniffed, so she didn't like it, but she could tolerate it if he brought home money and took care of her. Anna moved towards her.\n\n\"Get away from her!\" the man called out. Anna whipped around towards him, a terrible look on her face.\n\n\"How does it feel?\" She hissed, \"how does it feel to have those you love in the clutches of someone who would do them harm?\" Anna moved towards the woman again, watching the man struggle uselessly. She turned back to the woman. \"Should I do to her what you did to my family? To my\u2014\"\n\n\"Shut up!\" the man screamed, desperation in his voice. \"Stop your jabbering you stupid, bloody cunt. You came here for me; get it over with and leave us in peace.\"\n\nAnna stiffened. \"You will never be at peace again.\" She promised him. She looked at the woman whose sobs filled the sun-lit cabin. The small room still stank of sex; the woman cried piteously, tears falling on her exposed breasts. Her husband had barely pulled his pants up. Dev held the woman, but for the first time Anna noticed he wasn't looking at their target, he was looking at her, with fear in his eyes.\n\nHer eyes jerked to Dev's face again and his gaze faltered. It was definitely fear. He looked down at the woman in his grip and then back at Anna. He thought she was going to hurt the woman. Anna shook her head at him, pulling herself together. She was letting this man get to her and was losing control. It was time to take it back. She took a deep breath and stood in front of the woman who sobbed at her closeness. The woman shrank away from her, trying to retreat into Dev's body.\n\n\"Your husband employs more weapons than just his sword. His cock is one of the favorite tools of his trade.\"\n\n\"Stop!\" the man called out from behind Anna. She ignored him. He continued shouting, trying to speak to his wife, to drown out Anna's words. She pushed the sound of his words away, leaving her inside a bubble of silence with his wife.\n\n\"He raped my sister and so many others. He would leave you here and go toy with helpless women as a gratuity for his work.\"",
        "\"I don't believe you!\" the woman cried. And she didn't, Anna could tell.\n\n\"I don't lie. He has brought you gifts he's taken from these women and enjoyed fucking you with their trinkets strung around your neck.\" She had seen it. The woman looked at her with angry eyes and still did not believe her. Anna raised her hands and placed them on the woman's cheeks, showing her image after image of her husband's crimes. She saw all the faces of the women he had taken. She saw the necklaces and shawls and other trophies he had brought home to her, ripped from their bodies. Anna didn't hold back, she gave her every last one of them, letting her see, in no uncertain terms, the truth behind her husband's loving ways. This woman would be fooled no longer. He wouldn't be able to lie and manipulate her anymore.\n\nThe woman's face lost her anger and instead she gaped in horror as she realized the depths of her husband's depravity. Anna dropped her hands and released the spell keeping the sounds of his voice from them.\n\n\"Darling look at me, don't listen to her. Leena! Don't listen to her! It's a trick, a spell. Leena, look at me!\"\n\nThe woman collapsed on the floor and Dev released her body now that she had clearly given up the fight. The woman looked up at her husband, disgust and heartbreak in every line of her body.\n\n\"You gave me their clothing, their baubles. You had me wear them.\" Her voice was shaking. She gathered the front of her dress together, hiding herself from him and she turned away.\n\nThe man's face turned white and then flaming red. For a moment he was silent, as though the fury had stolen his ability to speak. He sputtered angry sounds and turned his furious eyes to Anna. \"He'll take care of you, cunt!\" he screamed. \"He'll make you pay for what you did to me!\"\n\n\"Too whom are you referring now, my good man?\" Anna said, calm and cool in the face of his anger, driving him even higher.\n\n\"You don't mess with him. You'll get what's coming to you.\"\n\n\"And who, pray tell, is going to give it to me?\" she said sweetly.\n\nThe man almost smiled at her as he opened his mouth to tell her before he stopped, as though surprised at his own actions and snapped his mouth closed.\n\n\"Tell me.\" She said dangerously.\n\nHe simply kept his mouth shut and refused to answer.\n\n\"Tell me.\" Anna shouted at him. Nothing.\n\nShe advanced on him, watching his stony glare shift to his wife kneeling on the floor. Anna leaned over so she could look directly into his eyes. \"Tell me or you won't like what happens to her.\" It was an empty threat, but one she wasn't above making.\n\nThe man sneered at Anna, surprising her. \"What do I care what happens to her? You ruined her for me. She's useless now.\"\n\nAnna stared openly at the man. Cold fury trickled into her mind, clouding her senses. This man was beneath contempt. He was so quick to throw her aside, a woman he had every intention of protecting not moments ago. But he hadn't been protecting her from Anna, had he? No, only protecting himself by keeping the truth from her, so he could keep her under his thumb, convinced of his love. And now she knew, and couldn't be fooled. Was there no genuine affection for her at all? Apparently not. He was done with her as soon as she was no longer of use, as if she were nothing more than his favorite horse that had broken a leg. The deep hurt that Anna had been shoving away all day opened like a crack in her chest. The fury poured in, filling her body with an uncontrollable rage.\n\nThe man's eyes widened as he watched the change come over the girl in front of him. She grabbed his shoulders and threw herself on top of him. The ropes and the chair disappeared as his body met the floor with a thud. He brought his newly freed limbs up to fight her off but it didn't matter. Her blows were like hammers on his flesh. They struck with a speed that he couldn't hope to counter. He tried to shield his face with his hands but her fists simply broke his fingers against his own cheeks. And all the time her punishing hands struck him she screamed, the inhuman sound of her rage filling his ears.\n\nDev was in shock. Anna had thrown herself at the man and sat over his prone body, bringing her fists down on his body so fast they blurred in movement. It was only when he saw blood fly in long strings off from where the man's face had once been that he leapt forward. Anna was going to kill him and Dev couldn't let her do it.\n\nHe grabbed Anna around her waist and heaved with all his might, pulling her from the man's still form as her arms still swung towards him. The two of them landed with a crash on the floor and he quickly scrambled up, snatching her wrists and holding them up between them. The wild look in her eyes frightened him but he had to hold on.\n\n\"Anna!\" he shouted, trying to get her to focus on him. \"Anna stop! You are going to kill him.\" Anna pulled her wrists from his grip, still wild and intent on the man who hadn't moved. Dev put himself between her and the man. \"Anna, stop, focus.\" He placed his hands on her shoulders, just barely restraining her from moving forward. She was so strong, he felt like she would push him aside at any moment and he would go flying across the room. \"Anna!\" He shouted, and still she continued forward, completely unfazed and unimpeded by his attempts. In a desperate moment Dev pulled his hand back and brought it down on her cheek.\n\nAnna's head snapped to the side and she whipped back towards him, furious and focused on him. Dev felt a sudden grip of power around him, her rage pouring out as magic. It was hard to breathe as the air pressed in, but he held his ground. He hoped he hadn't overestimated her affection for him, because in this moment he wasn't sure whatever friendship they had was enough to keep her from killing him, as her power crackled around them. For a moment she seethed, denying his body air with her fury and then her eyes focused on his and the anger receded. He could see her reason return, and the grip of her magic faded. He breathed again.\n\nHer jaw twitched as she drew in a breath. She looked at him apologetically. \"Thank you.\" She said quietly. Dev nodded, his heart hammering in his chest, feeling a bit like he had dodged an arrow. They both turned towards the bloody mess of a man Anna had left on the floor. They could hear gurgling sounds from where his broken mouth was.\n\nAnna stalked over the body and looked down into the shattered face. \"You will not die of these wounds.\" As she spoke some nominal healing began, she drew a rune over his body to help the spell along. Nothing went back to where it was initially but she fixed enough to keep him from choking on his own blood. \"You will never find comfort again. You will suffer every day for the rest of your long, long life. The ugliness of your soul will be obvious to anyone who sees you. All will forsake you. And you will wake every morning with hope that today, someone might take pity and end your miserable existence, and every day your hope will be dashed to pieces. You will suffer the same indignities you wrought on others and your nightmares will be your reality. I curse you for my sister June, and for all those before her.\"\n\nShe straightened, feeling decidedly wobbly. The woman, Leena, was still crumpled on the floor, sobbing quietly. Anna swallowed a lump of something that felt a lot like guilt and hastened out of the cabin and into the blinding sunlight.\n\nDev caught up with her at the horses. Her hands were shaking so much she couldn't seem to untether their leads. The skin over her knuckles was still red with the man's blood. Her hair hung forward and masked her face but Dev could hear her unsteady breath. He decided to gamble again and reached for her hands, pulling them from the knot and holding them between his own larger hands. She let herself be turned to face him as he brought their hands up to his chest.\n\n\"Anna, what happened?\" His voice was kind and steady and she couldn't hear any fear though she was sure he was still afraid. She just shook her head, trying to fight back the tears that threatened her eyes. \"Please talk to me. I can help. I want to help you.\" He was sincere. She knew it even without her magic. She didn't need her sight to tell her that he cared for her despite his questions about her and his fear of her magic. But she used it anyway. She needed to know, to be sure.\n\nShe looked up at his face, taking in his worried brow and his small reassuring smile. Her sight reached into their shared past, seeing it from his point of view. She saw his initial fear, his wariness at her revelations. She saw his affection for her grow over their weeks together, despite the fact that she sometimes appeared to be not altogether human. She felt his concern and shock at discovering the marks of her beatings. She saw his confusion and fear when she had seemed to turn into something else, something beyond control. And even having seen that, he still cared for her. Anna looked down. She felt like she violated his privacy but deep down she knew she couldn't take the uncertainty with Dev as she had to with Leonid. She couldn't take that kind of betrayal again.\n\nFor the first time since her family had been killed, Anna dropped her guard. A cry of pure anguish wrenched itself from her and she sank into Dev's shoulder, tears streaming unrestrained from her eyes. He dropped her wrist as she moved into him and wrapped his arms around her, holding her in a tight embrace as sobs wracked her body. It occurred to her that she had done this countless times in her dreams with Leonid but it had never felt this comforting. The dreams could never replace reality\u2014with all the mess of his tear soaked shirt sticky against her face and his small stumble as she put more weight on him. For the first time, the touch of another felt truly comforting.\n\nHe held her for what seemed like a long time. Anna cried till she had nothing left. She cried for her family, for her friends, for herself and the things she had done. She finally let go. Dev overcame his initial surprise at her reaction. He had seen glimpses of the girl beneath the power but he had never suspected she was in so much pain. He felt at once relieved and guilty for not having realized it.\n\nWhen Anna finally stilled and she pulled away, her eyes puffy and cheeks tear streaked. She couldn't quite meet his gaze. They were quiet for a moment.\n\n\"Feeling better?\" Dev asked with a smile. \"You look like you've been dragged behind a wagon this morning.\"\n\nAnna nodded and looked at him, returning his smile with a small one of her own. It felt easier now than before. As if some weight had been lifted from her.\n\n\"You should see the other guy,\" she said softly.\n\nDev's eyes went wide and suddenly he was laughing, deep chest laughs. He wiped the tears from his eyes, and Anna grinned, glad to have been the source of a joke for once, macabre though it may be.\n\n\"We best be on our way,\" he said, the laugh still in his voice.\n\nAnna nodded and turned back to the horses' reigns. They had a long way to go.\n\n*\n\nSunset found her on a gentle slope above the capital. Anna stood in the deepening light, gazing out on the expansive city below her while Dev finished setting up their camp back in the cover of the woods. She could feel the soldiers there. But she also felt something else, something her sight was unable to help her see. She found herself pushing the magic as far as she felt she could with only the vaguest idea that the men were housed in the barracks near the castle. From the healer's book she surmised this meant a witch or sorcerer was in residence near them and had placed wards on the place, or at least nearby. Either way it would not deter her. The magic had already shown her these men's faces. All she had to do was get in and she could target those responsible.\n\nThe thought of responsibility troubled her somewhat. She still had no satisfactory answer for why these men were sent to her village in what appeared to be something more specific than your average raid and pillage. They had no sooner decimated her town than they turned back to the capital. She had tried reaching into their shared past, looking for motives, but the spell required a delicate hand and she did not possess one. She'd nearly burned down the campsite and the surrounding forest when she'd shoved her energy into it.\n\nAnna sighed and rubbed her head. Expending her magic like that had not been wise, especially considering how close they were to their target. She would have to sleep well tonight; in fact sleep already pulled at her. The day had been draining in more ways than one.\n\nShe pushed the loose strands of hair from her face, annoyed at herself as her thoughts turned once more to the night before. She had half hoped that she had cried that particular episode out that morning. She kept turning the feeling over and over in her head, hoping to find some way to move past it. Instead, her thoughts lead her right back to where she had been last night. He had convinced her to trust him, making her even more vulnerable to him, and then he had let her be mauled and shoved her bleeding, naked body onto the ground as if she was no more than dust on his trousers.\n\nAnna bit her bottom lip, holding back the angry tears that threatened her eyes. She would not cry for him. She would not acknowledge the truth of the deep hurt inside her; she could not face her foolishness at letting herself feel anything so favorable as to warrant the sorrow now. Shaking her head at her own folly, she turned to head back to her bedroll, praying no dreams would interrupt her tonight. She made her way back toward the tree line.\n\nA flash of color caught her eye as she passed an imposing tree and she turned her head quickly towards the unexpected presence. Leonid stood there leaning against the tree and smiling as if nothing had ever happened. Anna caught her breath and bowed her head to keep from making eye contact. She wasn't ready to face him. Her heart beat hard in her chest and her entire body tensed and prickled as he approached. She desperately hoped he wasn't inside her head now. She was not willing to admit how much he had hurt her because she couldn't bear how much he had mattered to her in the first place.\n\nLeonid pushed off the tree and came to stand before her. She fixed her eyes on his chest, looking intently at the woven cloth of his shirt in all its unearthly beauty. As was his way, he didn't start speaking immediately, as if giving the silence its due, but this time Anna was not willing to wait for him to break it.\n\n\"Is there something you needed from me?\" She said, trying to keep her voice neutral and failing miserably. How did she manage to sound angry, sad and nervous all at once?\n\n\"Eye contact would be nice.\" His voice was teasing and open as it had grown over their time together. Anna couldn't do it. She didn't trust herself. Instead she raised her gaze and settled it somewhere beyond his ear. Given their closeness she could still see his face close off, taking on his impassive godly self.\n\n\"Anything else?\" she said, dropping her eyes again. It would be easier if he closed off to her as well. It reminded her that he was not her lover or caretaker but her godly owner and nothing more.\n\n\"Yes, I'm here to tell you to turn back now. I think it's time for this mission of yours to end.\" His voice was dull and cavernous again.\n\nAnna's eyes flew to his in earnest this time. \"What?\" she managed to gasp through her fury.\n\n\"It's time for this to end. Travel to the capital is ill advised.\" His tone brokered no argument.\n\nIf Anna had been less angry she would have schooled herself to remember that he owned her and she should likely act accordingly. But as it was she barely managed to keep from shouting at him. \"Why? This is my mission; this was our deal. I am not going to turn around when I am this close.\"\n\n\"It is a great deal too complex for me to explain. Suffice it to say that my advice to you is to turn back.\"\n\n\"Advice or order?\" she snapped back.\n\n\"Advice, for now.\" His tone held a warning.\n\n\"Well at least attempt to explain it. Don't just expect me to trust you.\" She almost choked on the word.\n\n\"I am not putting up with a tantrum, Anna,\" Leonid said.\n\n\"I made a deal with you that I could seek justice for my family. I have not transgressed on my side of the deal for weeks and I have done my best to carry this out as you laid it before me. I will not just turn back because you gave me some cryptic counsel to simply give up.\"\n\n\"This is Imonesh's realm and she guards it jealously. If she learns you are tied to me it will make last night seem like a friendly handshake compared to what she could do to you. Try to listen this time.\" His voice was a bit louder now, and angry. But Anna was too far-gone for sense.\n\n\"So we are to capitulate to your handsy friend? Am I to turn tail and run every time we come across a god you're afraid of?\"\n\nSuddenly Anna found herself pressed against the great tree that only a moment before had been several paces away. Her hands were clasped over her head in Leonid's impossibly strong grip while his other hand held her hip tightly against the bark. His hard body pressed her into the tree and his furious face was terribly close.\n\nShe felt tears spark in her over-wide eyes. She looked into his chest again, breathing hard in fear. She had been so wrapped up in feeling betrayed she had forgotten what it truly meant that he didn't care for her\u2014he could do anything he wanted to her for eternity. She tried to slow her thudding heart. She was such an idiot, feeling heartbroken when she should have been terrified. He owned her death, her body, her soul. How had she managed to confuse his ownership of her with any kind of regard?\n\n\"I don't have to abide by the deal if you have already broken it.\" Leonid spoke through her turbulent thoughts. \"I could take you now for any of the deaths that came before and never have to answer for any of it. If anything I have been too lenient with you.\" His hand traveled up her side possessively. She whimpered as his hand skimmed the side of her breast and kept upwards, grasping her neck and tilting her head back so that she had no choice but to look up at him in all his fury. \"You are mine. And I am tired of you treating my words as a passing thought. You should heed me more carefully.\" His voice was cold with anger. She had never heard him like this before.\n\nAnna was having trouble thinking with him so close. Never had he held her like this, restrained her with his own body. It was so intimate and petrifying. She could feel his flesh move against hers, she felt her heart hammering off of his chest. He lowered his face until their lips were no more than a hair's breadth from each other. \"Or have you forgotten that this body is mine?\"\n\nHe kissed her neck then; his lips, tongue and teeth teasing and threatening to Anna's panicked mind. She let out a soft groan as he bit down right where her shoulder met her neck. \"I don't think you have,\" he said, kissing the spot that still stung from his teeth. His hand fell from her hip and rudely grasped between her legs. \"I don't need a bargain to tell me that.\" He was right of course; despite her fear, Anna was dripping wet. The press of his body and his overpowering presence seemed to set her off despite her mind denying it.\n\nYesterday she wanted to be his, she wanted him to have her. Today felt like a violation all over again. She sobbed as his hand worked its way into her breeches, his fingers finding her wet slit and immediately manipulating her sensitive flesh. \"Please,\" she managed to whisper.\n\n\"What do you want, Anna? Tell me.\" Leonid's voice sounded tight, though no longer with anger.\n\n\"Stop,\" she said more forcefully. \"Please, stop.\"\n\n\"Why should I stop?\" His fingers slipped into her slick heat, drawing a groan from deep within her. It felt so good.",
        "Anna tried to clear her mind with her anger, recalling with perfect clarity the feeling of nails sinking into the flesh of her back. \"You can't seriously claim to consider my body as anything more than a scratch post for your friends.\"\n\nLeonid's hand stilled, she felt a shudder go through his body as if he had felt those phantom nails in his own flesh. His face came back into view in front of her. His fury was more violent now and it seemed to crackle the air around him. Anna felt the prickly feeling over her skin, like tiny bolts of lightning. Why was she intent on baiting him constantly? Why could she not learn her lesson that he had all of the power and she was meant to submit and stay silent? He would take her for certain now. She had proven herself unsubdued too many times.\n\nSuddenly his mouth descended on hers with a ferocity she hadn't known he possessed. The arm that wasn't restraining her wrists went to her bottom and hauled her legs up around him as he ground into her. Anna yielded to him, softening under the assault, her fear finally overcoming her stubbornness. She had never felt this urgency from him either. He was always so tightly controlled. Would he take her now? Claim her as she had been waiting for him to do for more than a month now? Her stomach twisted in fear at the thought while her dripping sex ached for it.\n\nLeonid released her hands and grasped the base of her skull again, tilting her further towards him, deepening the kiss. Anna's hands went around his shoulders, touching him for the first time. She slid her fingers into his hair that flowed over her skin like water. Even his skin felt different, smooth and harder than her own. She felt him moan deep in his chest as she made contact. The press of their bodies was more promising than frightening and she felt her fear retreat. But she proved to be mistaken.\n\nThe prickling sensation intensified and Anna began to feel light headed. The sensation of his mouth on hers was quickly becoming overpowering as she struggled to draw breath. She felt a strange pressure over her skin, as if the air was pressing in on her from all sides. She tried to struggle against his body, to gain a modicum of space to catch her breath but she found she could barely move as the air squeezed in around her. Her eyes opened to darkness unlike anything she'd ever known. It seemed at once infinite and oppressively close, as if it had slid over her eyes in place of eyelids.\n\nShe tried to move again, frantic to pull away, but his body was still there, unseen and holding her against him. Terror gripped her. Was this the end? Would he take her so precipitously without allowing her a moment to say goodbye? She tried to fight again, screaming in her mind for him to release her.\n\nThen the darkness was pulling back, Leonid's body was gone from hers though she still felt his hands on her upper arm in a vice-like grip. Her sight cleared and she could finally see Leonid standing before her. His eyes were shut and it seemed as though the darkness was being pulled back into his body. The black cloud hovered a moment more, reaching out towards her, and then it disappeared into him.\n\nAnna finally managed to draw a desperate breath. She continued gasping deeply, feeling terribly light headed and nauseous. She tried to focus on Leonid's face but her eyes were not cooperating. Something deep inside of her still felt heavy; her terror could not simply be purged as the danger seemed to pass. She closed her eyes again, trying to steady her breathing before she fainted.\n\n\"That was not my intention,\" Leonid's voice sounded far away. She didn't trust herself to open her eyes without vomiting so she kept them closed, her breath still coming in heavy pants. \"I have lingered too long here. Imonesh is occupied for now but she must not learn that you are tied to me.\" He loosened his grip on her arms and she immediately started sliding towards the ground with a groan.\n\nLeonid caught her and lowered her to the ground, holding her behind her shoulders with one arm, the other one going to her chest, directly above her still hammering heart. \"Anna, open your eyes. We don't have much time.\" She opened her eyes slowly, fighting of the nausea that threatened to overtake her. Her eyes finally focused on his face and she tried to understand what it was she was seeing. Did he look sad?\n\n\"Anna, listen carefully. I cannot appear here unnoticed by Imonesh and if she learns that you are a human soul in my service she will attempt to sever that link in any way she can.\" He shook her body slightly as her eyes started to close. Her mind was still painfully present but she was having trouble focusing on anything.\n\n\"I'm here,\" she croaked, struggling to sit up. \"I just feel sick.\" He helped her to sit and she put her pounding head in her hands. His hand smoothed up her back in a soothing gesture. Anna was confused and still dizzy. She couldn't begin to unpack the creature who now comforted her with her furious owner and powerful god. She groaned as a fresh wave of nausea rolled through her.\n\n\"If it becomes known that you are using powers I gave you to damage Imonesh's proxies then it may end badly for me as well. You must not mention my name or make any allusion to our connection. Anna,\" he paused, drawing her face into his hands, asking her silently to look at him. His hands were hard and cool against her heated skin. She complied, tamping down her fear to open her eyes. \"I am trusting you with this. I will not bind you with magic.\"\n\nAnna finally locked her eyes on his as he spoke. Something told her to pay attention to him as he was now. He was trusting her. This act felt very significant. For the first time in her waking life she felt like he was leveling the pitch slightly, allowing her some power over him. Why would he do that?\n\n\"I did not intend for the events of last night, or today. My quarrel with Imonesh goes back very far and I lost my temper. I am asking you to turn back so you do not end up in the middle of it again. What awaits you in the capital is far worse than you know. I will not be able to intercede on your behalf until such a time as our contract is trespassed upon. Which means you may have to die before I am permitted to intervene. Do you understand?\"\n\nShe nodded. This had not occurred to her, that she would lose contact with him. He had become a fixture of her time, occupying her thoughts and claiming her waking and sleeping hours. She never thought to have his presence stripped away, to be without the possibility of his protection. Her head hurt like she'd been spun around for too long\u2014there were too many different emotions, too much new information.\n\n\"Will you not turn back?\" he asked her once more.\n\nBack\u2014the word threatened to make her ill again. There was nothing behind her. If it were over now, what would she do? Wander the world? Go back to her burnt out home? Return with Dev to his? No. None of this would do. She had to move past this. She could not turn away. She had been willing to die, willing to sell her soul once. She could never simply give up. Instinctually she knew, as he did, that nothing would end this before she was done except someone forcing her to stop, and he wasn't willing to.\n\nAnna shook her head. Leonid sighed. \"I knew before I asked but hope springs eternal.\" His hands moved to cradle her head once more and he kissed her deeply. Anna felt the nausea lift and the heaviness in her body dissipate. The kiss didn't end immediately and she felt something else from him, a longing perhaps. Was he saying goodbye? His lips on hers and the soft caresses of his tongue against her own were gentle again. Maybe she was a fool again for believing his softer side, but she so desperately wanted this from him.\n\nShe lifted her hands to reach for him but they found no purchase. He was gone.\n\n***\n\nOkay, THIS is why feedback is so important. I got an email from one of you lovely readers the other day where you said you didn't know what to make of Leonid because he seemed \"too perfect\" and how are we ever going to get more from him if he's always so controlled? So I thought, you're right, lets start poking holes in his perfect exterior. I think we need to know a little bit more about what is going on in his head, so it is time to start breaking down his perfect fa\u00e7ade. So I went back to the scenes in this chapter with Anna and Leonid and made some changes, including this entire last part, which before consisted of a rather tame exposition-laden conversation. I really hope you guys like it. This is the first time feedback has led to this extensive a rewrite on my end and I love it! Please keep it up! Every comment has been really helpful to keep me writing and excited about this. Thanks again you guys! This wouldn't be the same story without you.\n\nThanks to J.J. who read this and assured me it wasn't a complete mess. On that note if anyone here is willing to be a beta reader I'd much appreciate it. I got so wrapped up in re-writes that I can't tell if it's good anymore.\n\nAlso, I have to apologize because I'm going to be taking an extended hiatus from posting. I'm still writing (and thanks to your feedback I'm working a lot better than I was) but I want to try and (mostly) finish before I start posting again. I also have the US medical boards to take in September so the likelihood of finishing before then is...nonexistent. Look out for more chapters this fall/winter. And thanks for sticking with me. "
    ],
    "authorname": "AmoryParks",
    "tags": [
        "god",
        "submission",
        "owner",
        "bondage",
        "leonid",
        "anna",
        "pain",
        "revenge",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/a-tale-of-revenge-ch-07"
}