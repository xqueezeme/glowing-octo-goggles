{
    "title": "Campfire Talk",
    "pages": [
        "Note: If you're looking for sexual erotica, you may want to pass on this story. There's no sexual content in this story; just an old guy reminiscing around a camp fire with his family. A big thank you to my editors, LadyCibelle and Techsan, for making my stories much better reads.\n\n*\n\nI'll begin with saying that these are true incidents to the best of my knowledge and memory. When I was younger our family would sit around a campfire; actually we still do. We would roast corn, have hotdogs cooking over an open flame and make little pies and burn our marshmallows. The kids always like making smores, which is a combination of Graham crackers, melted marshmallows and chocolate bars. Mom or my wife would make hot chocolate or we would have hot cider.\n\nIt was in the fall around Halloween, we would sit around the campfire and take turns telling stories. A lot were about ghosts and goblins. Others were stories about going to the cemetery and how the dead would rise and come after us. A lot of horror stories were told, each person trying to gross out everyone else.\n\nI think the stories that meant the most to me were the true ones that happened on Halloween. We did a lot of things that most everyone has heard of or even done; soaping windows when we didn't get a treat or putting dog poop in a bag and set it on fire and watch the homeowner step on it. We really didn't ever do much damage, just tried to have fun. I remember old man Jenkins next door getting three pizza deliveries, compliments of us. We would then barter with the pizza delivery guys for a better price or he could take the pizzas back to his restaurant.\n\nI have three short stories to tell you about. As I mentioned they are true to the best of my knowledge. For those who aren't from a large city or familiar with Trick or Treat night, I'll try to explain what we did.\n\nAll the kids would get dressed up in costumes and go trick or treating. They would go door to door to the houses who had their porch lights on and yell, \"trick or treat\" or way back then we would say, \"Help the poor.\" Help the poor came about in the 1940's when money was pretty slim. A lot of kids would dress up like beggars or hoboes. We would take a pillow case or big sack and see how much candy and money we could get.\n\nBack then we didn't worry about children being taken or anything like that. We always went around with groups of kids and only on the streets of people we knew. That was the way it was supposed to be.\n\nStory #1, One of my stories:\n\nI started out by telling one of my old stories of Halloween night. I must have been thirteen or maybe even fourteen years old at the time. Two of my friends and I sat on the front porch and passed out candy to all the little kids that came by. It was usually hundreds of them in Detroit where I was from. Believe it or not, we missed not going out. We missed all the candy and even the pennies and nickels that so many people gave out. When the crowds of kids started to slow down, I asked Don and Leo if they wanted to go out. They told me we were way too old until I gave them my suggestion.\n\nI have older sisters and so did Leo and Don. We all got dressed up in our sisters' clothes. When I asked my sister to help us she had to laugh. We had on dresses, bra and all. It took a lot of tissue to keep the bra padded. I wasn't about to wear their underwear, but we did wear a half slip. My sister put make-up on all of us and clip-on earrings. We wore hats since our sisters didn't have any wigs. We tried to wear their high heels but they didn't fit and we would continually fall down. I now have great respect for my sisters. Putting on all this garb to try and impress a guy, I don't think so!\n\nDon, Leo and I headed a couple of blocks down the street to where the bars were. Where we lived there were about six of them in a four block radius. We went to each bar and asked for money. We were asked to leave in a couple of them but in the others we got a lot of laughs. The bartenders - some knew our dads - laughed and gave us a quarter of even up to a dollar. We would go up to the drunks and hassle them for their change.\n\nSome of the bar broads even laughed at us. What was bad was that some men were so drunk that they actually thought we were women. After we left one of the bars we trapped one man in a phone booth. We told him we wouldn't let him out till he gave us each at least a quarter. He was actually scared and said all he had was a dollar and gave it to me. I reached in my purse -- yes, we had purses - and put the dollar in it and gave Don and Leo each a quarter.\n\nWhen we got back home we had trouble getting the make-up off and at school the next day we took a little ribbing. We each had about ten dollars so it was a good night's work back then. I do have to say it was fun but I found new respect for women. I also realized what women mean when they say some men will chase anything in a dress. We were positive proof of that. I mean to tell you we were really ugly.\n\nAfter I told my story, every laughed except my dad. He didn't look too happy with me. I was his son and me dressing up like a woman didn't impress him. Of course I told him that was many, many years ago. I was married now with kids of my own so dad got over it quickly.\n\nI looked over at my wife and I could tell she was thinking. She had a slight smile on her face. \n\n\"Honey, what are you thinking about?\" I asked.\n\n\"My favorite Halloween,\" she replied.\n\nShe began her story.\n\nStory # 2, My wife's story:\n\nAs everyone knows, I come from a very large family having eight brothers and sisters. When I was growing up we never had much. All my clothes were hand-me-downs and we were lucky to have enough food on the table. I was only about six at the time but I remember it as though it was yesterday. We all dressed up for Halloween in anything we could find. I put on some of my mom's old clothes and her hat. My brothers and sisters said I looked like mini mom. I loved my mom so it really made me feel good.\n\nWe went house to house getting candy. It was the one time of the year that we knew we could get free candy which was something for a poor family like ours. I was the smallest one as I ran after my brothers and sisters. I had my bag of candy and I remember some people giving us some pennies. I had no idea what that would buy but I was going to give it to my mom because I always heard her talking to dad about money and feeding all us kids. I figured it would help her buy food.\n\nWe were almost finished for the night as porch light after porch light went off, meaning the house was out of candy. I walked up to this one house as my brothers and sisters were leaving. As I stepped up on the porch the lady turned the porch light off. My brother laughed and told me I was too late.\n\nThe lady at the door looked at me as I was turning to leave. I felt sad. She stopped me and said, \"Sweetheart, I'm all out of candy but if you wait a minute, I have something special for you.\"\n\nI'll tell you that I didn't know the lady but I will never forget her. She came back to the door and handed me the most beautiful baby doll I have ever seen. It was in a little bassinet with a little blanket and everything. I had tears in my eyes. No one has ever given me anything like this. Even at Christmas all I remember getting was a Goodfellow basket. My brothers and sisters got the same thing. In it were socks, some candy, a toy and those brown shoes. When we went to school we always knew who got the Goodfellow baskets because of the brown shoes they wore.\n\nI put my bag of candy in the bassinet with my new baby doll and thanked the pretty lady. I didn't stop at any more houses but walked straight home with my new baby doll. My sisters couldn't believe it when I walked in the house and they saw my doll. My mom just smiled at me and told the other kids that if they ever bothered my new dolly that there would be hell to pay. She really did say hell. She never said anything to me but smile. She knew I never complained and I did give her my pennies from trick or treating. I think my mom knew that the baby doll was extra special to me.\n\nI don't even know what house I received the doll at. All I knew is from that day forward; Halloween was a very special day to me.\n\n----------------------------- \n\nMy wife was telling the truth. Her face lights up every Halloween. She is a grandmother now but she still gets dressed up in a costume every Halloween and sits on the porch and talks to every child that comes to our house. If she knows a kid is from a less fortunate home she'll slip in some extra goodies into their sack.\n\nWhomever that lady was who gave my wife that doll long, long ago will never know all the goodness and happiness that she passed along through my wife. Some things in our lives are never forgotten.\n\nBack when my dad was alive he always told some of the best stories. He swears that this one was true. It's been verified by my mother who was there at the time.\n\nStory #3 As told by my dad;\n\nI was born and raised in the hills and valleys of Kentucky. My pa was a farmer and proud of it. We, my siblings and me, were raised on the farm all of our lives till we were adults. We didn't know much about city life. Of course when I was a kid, there wasn't any television. We did see some newsreels at the picture show as we were growing up.\n\nWe heard of Halloween 'cause it was on the calendar but we never paid much attention to it. We went to church most every Sunday and some people back then called Halloween a satanic day. We just never paid no mind either way.\n\nWhen I was in my twenties, I hoboed some. I would hop a train and go to different towns and even different states. That's how I met my wife Maria. I call her Mare. I was going through Ohio and got a job at the Wheeling Steel Mill in Steubenville back then. After we were married we moved up to Detroit when the auto companies started paying a five dollar a day wage. It was a pretty good sum of money in those days.\n\nMare and I moved into a duplex house. There was a stairway on the side of the house that led up to our apartment. It was small but it was something we could afford till we really got settled in. We usually left the porch light on in case anyone needed to use the stairs. We didn't want anyone falling down them.\n\nAs I mentioned earlier, we never paid any mind to Halloween. There was a knock on our door. We were a bit surprised since we didn't have a lot of family or friends visiting us yet. We'd only lived there for two weeks and hardly even had groceries bought.\n\nMare answered the door and there stood a poor looking kid. He was dressed in rags like a hobo and had a very dirty face. Mary called me to the door and I looked at the poor kid. He was lucky if he was eight years old. He had a pillow case and opened it up. \n\n\"Help the poor,\" the poor kid said. \"Help the poor.\" I looked in his sack and all he had was a few measly pieces of candy.\n\n\"What are we going to do?\" cried Mare. \"This poor kid is going around begging for food. We have to help him.\"\n\nWe had a baby of our own at the time and we thought about how sad it would be to have our kid going around begging for food. I agreed with Mare and invited the kid in. He stepped inside our kitchen while Mare and I talked. We didn't have much of anything ourselves but we couldn't let this poor kid starve.\n\n\"Mare,\" I said. \"Give him that ham bone that we have in the fridge. There ain't much meat on it but maybe the kids mother can boil it and add some beans and cook it up for the kid.\"\n\nMare, smiled at me and took the ham bone out of the fridge and wrapped it in a piece of paper and put it in a brown bag and put it in the kid's pillowcase. We also gave him a bag of peas that Mare was going to make for dinner the next day using the ham bone. This young boy needed to know that people cared.\n\n\"You're a good man, Harold,\" said Mare.\n\nThe boy gave us an odd look as he walked down long flight of stairs. We looked out the door and saw a lot of kids walking around in costumes. We had no idea what was going on. We turned off our porch light and went and listened to the radio. They didn't say anything other than it was Halloween and to watch out for the ghosts and goblins. All we knew is we did a good thing.\n\nAt work the next day some of the guys I worked with were telling me how many kids came to their house. They asked me if any came to our house seeing we lived upstairs. I remember telling him that we only had one.\n\nI asked a close friend about the ritual of the kids walking around and he explained the 'Trick or Treat', and what 'Help the poor' meant. We often wondered what that kid's parents thought when they looked through his goodies and found a ham bone and package of peas. We sure hope the mother knew how to make a good pot of pea soup. I hate to think that ham bone went to waste.\n\n---------------- \n\nWhen my dad was through telling his story we couldn't help but laugh. It's been twenty years since the passing of my mom and dad. They died a year apart. Mom went first and my dad less then a year later. They were good together.\n\nEvery Halloween when we get together with my kids and my grandkids they want to hear the story about the ham bone. It brings a tear to my eyes every time I tell it. I just want my dad to know that his story will be around forever. Everyone is laughing with him not at him. He was truly a good hearted man who would give you the shirt off his back or the food off his table to help a stranger in need.\n\n*\n\nI wish you all a Happy Halloween.\n\nThank you for reading my true story.\n\nOnly a few names were changed.\n\nComments are always welcome\n\nDG Hear\n"
    ],
    "authorname": "DG Hear",
    "tags": [
        "halloween",
        "holidays"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/campfire-talk"
}