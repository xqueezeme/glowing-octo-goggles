{
    "title": "Runner Girl Ch. 13",
    "pages": [
        "John heard Amy knock and let herself in. \"You don't have to knock, you know. You have a key, just let yourself in.\" \n\n\"Oh, okay. It just seemed like a courteous thing to do.\" \n\n\"We're way past that,\" John smiled and was met with a serious gaze. \n\n\"I have to show you something.\" Amy held a stack of magazines close to her chest. \"Remember how I asked if I could send that photo you took into Runner's World?\" \n\n\"What?\" John's face lit up. \"They actually used it?\" \n\nAmy grinned and nodded while biting her lip and looking down, she matched his exuberance with shyness. \"Page 42,\" she handed him a magazine. \n\nJohn flipped to the page and saw the photo of Amy, the one he took of her overlooking the Hudson Valley, sweat beads visible on her brow, a look of determination on her face. The photo took half the page, and underneath was an article. He looked up at her in surprise. \n\n\"I really didn't think they'd use it. But they did.\" \n\n\"Let's go sit,\" he said, and she followed him to the couch and they both read silently together. \n\nRunning Is My Solace, by Amy McGuinness \n\nI started running as a pre-teen, and it would be accurate to say that running molded me into the woman I am today. As I grew, I felt not only my legs and heart growing stronger, but my character as well. Running contributed to my independence, my health, and my competitive nature. I've often wondered how I'd have turned out if I hadn't been a runner. Sure I'd have many of the same values, but would I be the woman I am today? Would I have the inner strength and stamina to survive and even thrive with what was coming my way? \n\nA little over a year ago, I was the victim of violent crime. I was raped in my own home by a man I'd met on the internet, a man whom I'd just gone on a date with. That man is now serving time in prison for raping me as well as two other women. He lost his freedom, but it's taken me a while to get my own back. \n\nI never stopped running; in fact, I upped my mileage this past year. But I was also running away from an experience that I couldn't cope with, that I didn't want to have as part of my make-up, so I pushed the memory down and tried not to think about it. I didn't want anyone to know what had happened to me, so I didn't tell anyone. It was pretty easy to keep the secret, since I was relatively new to the city, and after the rape I became withdrawn and I was riddled with shame. I put in my miles, went to work, showed up, and fulfilled my commitments, but I was not flourishing, I was not thriving. I joined a running group, but mostly just for the accountability. I met the group on Saturday, but then took off on my own. I ran by myself and kept my problems to myself. \n\nI allowed the \"victim\" label to permeate and infiltrate my very being. Where I once had been confident and brave, I now looked over my shoulder. But it wasn't just the fear of being victimized again. I lived in constant fear that someone would find out and I would become known as the woman who got herself raped. \n\nBut that isn't what happened: I didn't allow this crime to happen. I was overpowered, and I am not responsible for what happened to me. I spent a year in therapy, which was really helpful, but it was in finally telling friends and family that I got my mental strength back. I wanted to do it alone, but letting other people help me actually made me stronger. Eventually I met a friend who also had things in his past he wasn't proud of, but he showed me how to put it to good use. That friend not only has freedom from worrying what people think of him, he has also used his awful experience to help others. He told me he can't change what happened in the past, but he does have the power to put the experience to good use. \n\nAt first I didn't believe that telling people I was raped would be helpful to anyone. But now I'm learning that it wasn't the crime that was important - it's what I've done since then that matters. \n\nI'm grateful that I had running to fall back on while I processed this. Running helps me stay strong physically and mentally, and it took a while, but I'm now even stronger than I was before I was raped. That four-hour ordeal that I suffered last October was horrible, but it was just something that happened to me. I didn't choose to have that experience, but while it is now a part of who I am, it doesn't define me. I'm a complex woman and a survivor. I'm a runner, I am strong, and I am free. \n\nJohn looked up at Amy and said, \"Wow.\" \n\nAmy didn't answer. She wasn't sure what to say. \n\nJohn spoke again, \"Wow. I'm really proud of you.\" \n\n\"You are?\" Amy's shoulders relaxed in relief. \"I mean, I may sound like I don't care what other people think in that article, but I really care about what you think.\" \n\n\"I think you are amazing.\" \n\n\"But... what if people who know you see this article.\" \n\n\"They will. They will because I'm going to show it to them. Is it out on the newsstands yet?\" \n\n\"I think people who subscribe already have it.\" \n\n\"Is it on the internet?\" \n\n\"I'm sure it must be.\" \n\n\"Wow,\" he said again. He hugged her again and went to the counter to pick up his phone. \"Oh look, William's already seen it. My sister Tori as well.\" \n\nAmy almost panicked, but shook it off. She needed to be okay with this. \n\n\"Tori loves the photo and says she wants to meet you. And she called you brave,\" John read from his phone. \"William complimented the photo and said the magazine has a circulation of over sixteen thousand. He said he's proud of you.\" \n\n\"Sixteen thousand doesn't seem like that much.\" \n\n\"People aren't buying magazines like they used to. The magazine claims to have five million readers online. Either way, a lot of people will see this. Aren't you happy?\" \n\n\"Yes, well... yes. I'm just so surprised. It was kind of a whim, really. I showed it to Anne and she said I should send it in, and I was like 'Oh, yeah, sure' and...\" She sat up straight and looked him in the eye. \"Very happy.\" Then she slumped again momentarily and said, \"What will my students think?\" Then she sat up again and said, \"I have nothing to be ashamed of. And it's a fantastic photo.\" \n\n\"Yes,\" John laughed looking at the page again, \"A beautiful photo of a beautiful woman. And now we're both famous!\" \n\n***** \n\nAmy walked into her classroom after the bell rang. She had been in the principal's office, showing him the article before he heard about it from someone else. He had been kind and completely supportive, but now she was a minute late to class. When she walked in, the students were whispering, but when they saw her the class fell silent. \n\nThey know, she concluded. It only took one person to see the article and the news would spread like wildfire. Amy took a deep breath and knew to focus on her lesson. Today she was teaching a creative writing lesson, one she really enjoyed, but she rushed through it quickly to get the students working and their eyes off her. When the bell rang, she dismissed the class and the students hurried out, except for Shelly, who lingered behind. Amy expected her to have a question about the lesson, since the girl was one of her more conscientious students, but instead Shelly just stood in front of her, speechless, with tears glistening in her eyes. \"Thank you,\" she said, then hugged Amy. Then she too, hurried out of the class, leaving Amy breathing deeply and swallowing back her own tears. \"You're welcome,\" she answered, although the girl was already gone. \n\nEPILOGUE: \n\n\"Did you miss me?\" John said, taking a seat next to Amy. \n\n\"Oh, I've been busy talking to Alicia and Ray, and then Beverly and Herman. I've probably been to only about a dozen weddings, but I must say it's probably the most fun of any I've been to.\" \n\n\"Yes, maybe William will quit his macho-librarian job to become a wedding planner?\" \n\nAmy laughed, \"Did you get some great photos?\" \n\n\"Yes, but pulling double-duty as photographer and best man has not left me enough time to spend with my own fianc\u00e9e.\" \n\n\"Well, luckily it is a small wedding.\" \n\n\"Yes, only one bridesmaid. You're going to need...\" John looked up at the sky like he was counting. \"Six at a minimum.\" \n\n\"How'd you calculate that?\" \n\n\"My sisters and yours equal five, plus Tracy?\" \n\nAmy laughed, \"Tracy will sure stand out in that line up!\" \n\n\"Tracy always stands out,\" John laughed as he gestured over to Tracy who was dancing with Ray. \"Even next to her identical twin sister, she manages to look unique and beautiful at the same time.\" \n\n\"That's Tracy,\" Amy laughed. \"Look at William.\" It was easy to find the groom in the small crowd: he was dancing with Beverly, Tracy's grandmother. \"Did you know he could dance like that?\" \n\n\"I taught him.\" \n\n\"Pfffft!\" Amy rolled her eyes and laughed. \"And I suppose you're too busy to dance with me, Mr. Heywood?\" \n\n\"Nope. I've taken over seven hundred photos. I think I've earned a break to dance with the future Mrs. Heywood.\" \n\nJohn stood and offered Amy his elbow, and the two made their way to join their friend on the dance floor. \n\nThe End \n\n***** \n\nThis is the end of my 'Manhattan Girl' trilogy. I would like to sincerely thank Gaius Petronius for all his hard work editing for me. This story would be full of errors if it weren't for his sharp eye, and if there are any typos, it's because I sometimes even overlook his edits! IanSaulWhitcomb reads everything I write and offers input and encouragement. He is a wonderful storyteller and a great friend. Michael is a mentor who pushes me to find my own voice. Someday I hope to evolve into the writer he already seems to see in me. I would like to thank Literotica for offering this free site to share my writing with a diverse group of readers around the world. Lastly, I would like to thank you, for reading my words, and especially if you bothered to vote, comment, or email. Please check my bio for updates on future projects. DB."
    ],
    "authorname": "DonnaBeck",
    "tags": [
        "romantic love",
        "romance",
        "new love",
        "new york",
        "manhattan",
        "manhattan girl",
        "runner",
        "romantic sex",
        "recovery",
        "healing"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/runner-girl-ch-13"
}