{
    "title": "There and Back Again Ch. 012",
    "pages": [
        "Chapter Twelve: And if I die before I wake...\n\n When I awoke, it was bright out. I was lying in a field, my overly full pockets bruising me. I heard a shout, and then the pounding of several pairs of feet running. The sun was in my eyes, and when someone's head suddenly blocked the glare I was left temporarily blind. I heard my name being called by a voice I recognised. And then something wet bathed my face.\n\n \"Now I know why everyone says Ferelden smells like wet dog.\" I grimaced at Prince, who chuffed happily and licked me again.\n\n \"Thank the Maker. We thought we had lost you.\" Strong arms grabbed my shoulders and lifted me bodily off the ground, holding me until I managed to find my legs under me. I blinked up at an enormous templar, and then realised that everyone else was standing there staring as well.\n\n \"How long was I gone?\"\n\n \"A little more than two days. When we woke to find all your things still there, even your clothes, but you gone...we thought maybe you'd decided to follow Tomas to Denerim. We couldn't tell what happened.\"\n\n \"Why would I follow Tomas to Denerim?\" Alistair coughed, and I noticed Aedan rolling his eyes. Right, they all think we're lovers. \"I mean, what possible good could that come to? I can't take care of myself. I would just get him killed.\" Leliana rescued me from my own awkwardness, surprising me with a hug.\n\n\"I'm just glad you're back. Do you still have those scissors? I want to fix Theron's hair at some point.\" \n\nShe dragged me off, chatting about nothing, leaving the men open-mouthed in shock. Except for Sten, who just narrowed his eyes. I swear he thinks I'm a mage. If he even mentions a collar I'm going to bite his knees.\n\nLeliana led me onto the road, and I was delighted to see a cart approach with two dwarves driving it. The older of the two hopped down as he noticed Leliana wave at him. \n\n\"You must be Lady Sierra! Welcome, welcome. When the Wardens mentioned they were expectin' someone, I never thought they meant in the middle of nowhere! Pardon me, my lady. Allow me to introduce myself. I'm Bodahn Feddic, and this 'ere's my son, Sandal. Say hello to the pretty lady, Sandal.\"\n\n\"Hullo.\"\n\nBodahn continued to chatter on, and I barely listened, knowing from the game most of what he'd say. I nodded in the right places, hoping he didn't need more of a response than that. I felt vaguely bad about it, but just couldn't seem to concentrate on small talk. While he spoke, Leliana went rummaging through his wagon, finally pulling out my pack, as well as a bundle of what I realised were the commoner clothes she had picked for me in Lothering. I slipped behind the cart and Leliana watched out for me as I quickly changed my clothes, bundling my jeans and all my new pocket possessions into my pack. I strapped my dagger into place on my thigh, then stared at the sword for a while, realising eventually I needed a sheath unless I wanted to carry it in my hand for the rest of eternity. Perhaps carrying it will gain me some of that upper body strength. Worth a try.\n\n\"It was really creepy going in to your tent to find your clothes laid out in your bedroll as though you were still sleeping, but you gone. And it's a good thing that Morrigan has been flying over us keeping an eye out or we never would have seen you in that field. I'd ask you to stop doing that, but I get the impression that asking you wouldn't help very much. Because if it were up to you, you probably wouldn't keep coming back, yes?\"\n\n\"You'd be partially right, Leliana. I wouldn't keep popping back and forth - I'd stay. You might try asking the Maker about it, because if he didn't do this, I can't imagine who else could have.\"\n\nAedan came around the corner, talking at the same time as Leliana. \"You'd stay? Whatever for?\"\n\nI started feeling a bit defensive now. \"Hey, I know I can't fight, so I'm not exactly helping in the combat department. But I'd like to think I'm not a total barnacle! I'm trying to be helpful.\"\n\nAedan chuckled, mouthing the word 'barnacle', and I blushed. \"It's a sea creature that likes to grow on the bottoms of boats. If you get enough of them, they create drag. They slow the boat, and you have to row harder or need stronger wind to get the same distance.\" \n\nAedan patted my shoulder while Leliana grabbed me in yet another hug. \"We didn't mean it like that, Sierra. We all missed you - even if you can't fight, your knowledge and your gadgets are incredibly useful. And you're the best cook among us, as far as I've seen! We just wondered why you would choose to be here when you could be at home, somewhere familiar and safe, with all your friends and family.\"\n\n\"I...would rather not talk about it, guys. Please. Just know I'd rather be here with you than there. If I leave, it isn't on purpose.\" Leliana took my pack and stowed it back in Bodahn's cart, and we started walking again. Everyone seemed eager to hear what I'd been up to and what I brought with me this time. I demurred, not having even thought about bringing gifts or anything. I did, however, show off the dark hair dye. I pointed at Theron and told him we had an appointment the next time we found a suitable stream. He groaned, and everyone else laughed.\n\nI was able to keep up with the rest of the group walking, but was bone weary when we arrived at the next campsite. Bodahn mentioned he knew of a place with a hot spring, and I dragged Theron to it and proceeded to dye his hair. I left the dye in as long as I dared, and when it was done his hair was a nice, uniform, dark brown. Back in camp I found my scissors and Leliana cut it for him, keeping it shaggy and much longer than Aedan's or Alistair's, but again much more attractive than the mop I'd cut with my dagger. He was still good looking, but unrecognisable. It was perfect.\n\nEveryone took turns using the hot springs. Morrigan, Leliana and I went together, them bathing and me mostly just soaking my sore legs. They were both delighted with my bar of soap and I let them each have a small amount of shampoo. I used the detangling spray sparingly and found I could at least get my comb through my hair to put it up when we were done. \n\nI thanked Morrigan for scouting while we were on the move and for spotting me in the field. She acted indifferent, but it felt like she warmed up towards me a little bit. I'll take what I can get!\n\nWe set up tents in no time, and ate dried meat and bread for supper. I sat by the fire, writing in my notebooks, what I could remember about the different areas I hadn't completed yet. Prince sat at my feet. Aedan made his rounds, even to Morrigan, talking and cajoling, getting everyone to open up a little bit. Just like I did in the game. Alistair went to sleep early, offering to take the late watch. Apparently they had decided that either Aedan or Alistair had to be awake at any given time so they could sense darkspawn. I decided to wait to talk to Aedan about how we had managed watch when Tomas needed rest. I didn't want to contradict him in front of everyone. So Aedan wandered off a little ways from the camp, and everyone else excused themselves and settled in to sleep.\n\nI stayed awake, scribbling in my notebooks by the fire. I knew it was just an excuse, knew I'd be exhausted in the morning, but I had developed some sort of fear of falling asleep alone in case I disappeared. I have no idea what I thought anyone could do if that happened, it was a completely irrational fear, but I couldn't help it. So I sat, and scribbled, and yawned, and eventually fell asleep, pen in hand, right where I sat.\n\nThe next morning, when I opened my eyes, I was in my tent. I thought back, and vaguely recalled waking briefly as I was being lifted, falling asleep again before I even figured out who it was that picked me up. Someone had carried me into my tent and tucked me into bed. I was embarrassed, but also felt sort of warm and happy that one of my companions had taken care of me. I briefly wondered who it was, assuming it to be one of the guys, but decided that asking would be even more embarrassing.\n\nI got myself straightened out and crawled out of my tent. Prince was asleep in front of the flap, feet twitching in some sort of doggy dream. I grinned. Alistair was sitting over a pot on the fire, but everyone else must still have been sleeping. I slowly rose, stretching out my stiff extremities, and made my way over to huddle beside Alistair, as close to the fire as I could get. He smiled and handed me a bowl of something that resembled porridge. I wasn't a fan, but it was warm at least, so I ate. We sat quietly together until the rest of the camp stirred, got fed, and we all packed up to head out.\n\nThe next few days were all filled with the same sort of monotony. Get up, eat porridge, walk, eat while walking, walk more. Finally collapse, set up tents, eat something else, and then get knocked over and smacked, over and over, by Aedan, or Theron, or Alistair, under the guise of teaching me. I'd never been so bruised in my whole life. Between Leliana and Aedan we were able to have fresh meat almost every night, and they seemed to be engaged in a friendly competition to outdo the other. We started drying some of the extra meat to replenish our rations. I tried rabbit, and didn't vomit. Small victories. A couple of times, I didn't fall over while sparring. Occasionally Bodahn would find us campsites he knew, with streams or swimming holes or hot springs we could wash in, other times we'd find a clearing just out of sight of the road. I suggested my plan that non-Grey Wardens could sit watch as long as we woke one of them every two hours or so, and Aedan and Alistair started looking better rested.\n\nI spent a lot of my walking time with Aedan. He was sweet and funny, and despite being good looking and flirtatious, I still found him totally non-threatening. He didn't give me the celebrity jitters the way Tomas and Theron and Alistair and Leliana did, since he was sort-of me. And it had the added benefit of keeping Theron away a bit. Theron and Aedan had developed a dislike for each other that I couldn't figure out, and I worried it had something to do with me. Theron had stopped actively trying to court me after our conversation, but the way he looked at me still didn't feel brotherly. I noticed Leliana didn't seem to spend much time with him either, after one day where he walked with her for most of the day, and I wondered if maybe he looked at all women like that.\n\nAedan asked me a lot of questions about home. Some I answered easily - explaining the difference between science and magic, seeing a healer or seeing a doctor, what sort of work I did - but some I sidestepped. I didn't want to talk about my family (or lack of one), or what was happening to my body back at home. I tried not to even think about the latter - when I did I started to panic about how long I'd been in Thedas, imagining my body wasting away for lack of food, or going into kidney failure from muscle breakdown from lying in my living room for days on end. I'd once read an article about that happening to someone who hit their head and was unconscious for days before being found. Sometimes reading a lot is a bad thing. I ruthlessly suppressed the fear of what would happen if my body at home died. I couldn't change it, so avoidance seemed to be the key to keeping my sanity.\n\nWe talked about his home life prior to becoming a Grey Warden. It seemed like telling me stories about the good times helped him cope with all he had lost. He would tell stories of pranks he and Fergus played on each other, or adventures the two of them had. He told me that he and Fergus had actually been the ones to discover the bolt hole in the pantry through which he and Duncan escaped when Howe attacked. He mentioned Ser Gilmore a few times, but talking about the knight was obviously painful for him. I assumed that perhaps they'd been lovers, but didn't have the heart to ask.\n\nWe spent some time trying to compare calendars between home and Thedas. The names of the months didn't line up, but otherwise it wasn't a bad comparison. We counted it out, and realised that, as best we could tell, Aedan and I shared a birthday. We were the same exact age, down to the day. Somehow that just cemented things for us, and I started thinking of him as actually being my brother, not just being 'like a brother'. It was an odd feeling, to think of myself as part of a family.\n\nI spent a bit of time with Leliana, but the bard was still play-acting her girly, ditzy Chantry sister role, and it felt too fake. I knew it wouldn't last, and strongly suspected I'd like her better when she reintegrated the fiercer aspect of her personality. Sten almost never spoke to me, although he seemed to tolerate me walking quietly by his side. I think he might even have been a bit intrigued that I was the only person who didn't pester him to explain aspects of Qunari culture. He was skeptical that I knew anything about his sword, Asala, but I wasn't worried. I really wanted Aedan to take credit for it anyway.\n\nMorrigan almost never travelled with us, preferring to spend her days flying above us in bird form. After some initial shock, it seemed everyone had accepted her shapechanging abilities and we now relied on them heavily to scout ahead. I did spend a fair bit of time talking with her in the evenings, though. Aedan made the effort, but none of the rest of the party seemed to bother getting to know the beautiful witch, and that bothered me. I was surprised that, once you could get past the prickly exterior, she was actually quite funny, in a sarcastic way, and she made fun of Alistair a lot less than I recalled her doing in the game. I was undecided whether the game just played that aspect up for entertainment value, or whether she had toned it down after I told her I knew that she didn't dislike him as much as she let on. I decided that it didn't matter which, since Alistair was being left alone, and the two of them could mostly stand spending time together without acting like children.\n\nI did find myself avoiding Alistair as we travelled. As I got more and more comfortable talking with Aedan, I got less and less so with the enormous templar. It wasn't that he was unkind, or disrespectful, or anything else bad. It was actually quite the opposite - he was so sweet, and thoughtful, and kind, and good looking, that I found myself awkward around him, stuttering, forgetting what I was saying, getting caught staring instead of listening. I had given numerous reasons to Tomas why we couldn't ever be together, and I meant them, but being around him made it hard to keep my resolve. So I avoided him. I tried to be subtle in my avoidance, but obviously didn't entirely succeed, because I found Aedan frequently giving me sympathetic looks when I switched between groups of companions.\n\nAnd each night it was the same. I'd stay awake, long after everyone else went to sleep, avoiding my lonely tent. I'd sit and scribble in my notebooks by the fire, or talk to whoever was on watch. I fell asleep on more than a few shoulders, slept on Prince a few times, finally being shaken awake and made to go to bed, and I woke up covered in a blanket by the fire or having been carried into my tent more than once. I became more and more exhausted as the days wore on, until finally one day Aedan insisted I sit on Bodahn's cart instead of walking. He tried to be kind about it, but I knew I was slowing them down. I agreed without argument and made a space for myself among all our gear on the cart. It wasn't comfortable, but I was so tired that eventually I fell asleep.\n\n********\n\nWhen I woke, I was far less uncomfortable than I had been while crammed onto the cart, and I wondered if someone had picked me up and put me in my tent or something. But as details flooded in, I realised I was in a bed, not on a bedroll, and I was wearing...not a lot. I opened my eyes to the tiled, ugly, industrial ceiling of a hospital room. I was wearing one of those horrible gowns, there was an IV in my arm...and this time, a catheter. Wonderful. \n\nI rolled to the side to push the button that raised the head of the bed, and as I sat up I realised I was in a large room with multiple other beds, all occupied. Most of my room-mates were in worse shape than me - several had breathing tubes, in addition to other unidentified wires and tubes snaking out from under the blankets. All of them had large, complicated, noisy monitors running, I assumed to keep track of heart beats and breaths and the like. I looked over and realised that I was also connected to monitors, although I didn't seem to have any tubes or anything I couldn't explain. As I struggled to sit up, the little thingy attached to my finger fell off, and the monitor began to beep.\n\nA couple of nurses bolted into the room, I assumed because of the noise, but when they saw me awake, one changed directions to go call the doctor. The other came over, trying to hide the shock and concern on her face behind a professional mask as she checked my monitors, took a blood pressure, and examined my IV site and checked my catheter bag, which was almost empty.\n\n\"What day is it?\" She told me, and I did the math - I'd been in Thedas for almost two weeks. I was continually amazed that the days lined up evenly like that. \"How did I get here?\"\n\nShe told me that someone had gone to my door, she didn't know who, and when I didn't answer they peeked in my window and saw me lying face down on the floor. They called 911, and the ambulance brought me in. I'd apparently only been in hospital seven days, so I must have spent the first six on the floor.\n\nJust then the doctor arrived, the same one I'd seen the last time. The one I had told about my dreams. His face was drawn, and he looked tired. I tried to be cheerful, but the look on his face was grim.\n\n\"What's up, doc?\" \n\n\"Hi Sierra. It's good to see you awake.\" He waved off the nurse, and she left us alone.\n\n\"You have a truly terrible poker face, doc, anyone ever told you that?\" He tried to smile and failed.\n\n\"So I've heard. I won't lie to you. You have me worried.\"\n\n\"What's happening? Was I in kidney failure from laying on the floor for so long? Is something else wrong?\" He looked surprised at the kidney question, but dismissed all my guesses with the wave of a hand.\n\n\"No, no. Nothing is exactly wrong. It's like I told you before - your body is completely fine, but your mind is just...gone. No brain activity, flatline EEG. And this time you were out for seven days!\"\n\n\"Thirteen, actually. I think I must have been laying on the floor a while when they found me.\"\n\nHe frowned. \"That can't be. They didn't mention anything about you having...uh...\"\n\n\"Wet myself? Yeah, it would seem I don't do that. It's not the first time. I've had a couple of other long blackouts since we last met, and I didn't then either.\"\n\n\"But you weren't dehydrated, or malnourished, and like you asked, you weren't in kidney failure. You must be misremembering.\" I shrugged. Medical explanation or not, I knew it had been two weeks. \"Have you been dreaming again?\"\n\n\"Yep. It's like I'm living two lives. I remember both, but they're separate. That one is sort of medieval. The number of days I'm unconscious even line up with the number of days I spend there.\" He shook his head, slowly, obviously confused.\n\n\"Well, let me tell you this. You're not going home any time soon. I want you here for observation at the very least.\"\n\n\"Can I have my own stuff? Can I visit my own house to get it? And can I wear my own clothes? This hospital gown is fashionable, but I'd really rather be in jeans.\" I'd really like to avoid waking in Thedas wearing only a hospital gown. Oh, damn, I just jinxed myself.\n\nHe nodded. \"The nurses can help make arrangements. You'll probably be moved to a different room. The ICU is no place for someone who's awake.\"",
        "\"Thanks, doc.\"\n\nHe was right about being moved - half an hour after he left, they had me in a semi-private room, catheter out, and had found me my clothes from when I'd been admitted. I put them on, at least relieved that they would be better than the gown. The nurses looked at me strange when I put on the extra t-shirt, the jacket, and the boots. I shrugged.\n\nI overheard a conversation between the doctor and some nurses. Apparently, the entire time I'd been out, my catheter had drained exactly how much fluid they had given me by IV, no more and no less. Which is evidently not normal. And when you don't eat, something weird is supposed to happen to the potassium levels in your blood, but despite thirteen days of not being fed, it didn't happen to me. They were debating whether I needed a feeding tube and permanent IV lines for the next time I blacked out. The protocols said yes, but my apparently strange responses indicated that somehow, my body didn't require that. I finally stepped in, politely refusing all of the procedures unless my medical condition was deteriorating during my next blackout. It wondered if, as long as my body in Thedas was being fed and allowed to manage its own issues - like peeing - my body at home would just continue on. I briefly wondered how many papers would be written about that. I tried very hard not to think about what would happen if my body in Thedas didn't stay healthy.\n\nI wasn't allowed to go home, but I managed to get hold of my landlady, a sweet older woman who agreed to go to my place the next morning and call me from there, and bring me anything I asked for. I got her to bring my laptop, my purse, a large bag with personal hygiene products like soap and shampoo, a bunch of clothes, and my remaining box of coin. She didn't even question why I wanted multiple pairs of socks, an extra pair of boots, and an extra jacket. \n\nI showered and got cleaned up, dressing again in heavy clothing once my landlady had come and gone, putting more coin, shampoo, and soap in my pockets, and then had nothing to do. I read on the wiki, refreshing my memory so I could write more in my notebooks when I got back. I slept, and ate, and chatted with the nurses, cleaning staff, and anyone else I could find. Apparently my fear of sleep only existed when I was in Thedas. I dealt with my insurance company, made sure every bill I had was set to be automatically deducted from my account, and got a Legal Will kit and information about enduring Power of Attorney from the hospital's social worker. And the whole time I was just entirely frustrated wondering what was happening in Thedas. It was only one day on Earth, but it dragged on for what felt like forever.\n\nThe morning of the second day, I was walking around the hospital ward, pacing really, when the dizziness hit. I sagged onto a nearby unoccupied wheelchair, reflecting that at least this time, I didn't have to worry about what would happen to my body while I was gone."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-12"
}