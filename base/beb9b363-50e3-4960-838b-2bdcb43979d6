{
    "title": "Private Lessons Ch. 02",
    "pages": [
        "2 weeks after chapter 1. There have been daily meetings and assignments.\n\nLacey Cambell smiled up at her Headmistress as she brought her to another orgasm with her hands. The smile only grew larger as she felt the large load splash onto her features. It felt thicker and more copious than when she started weeks ago, a sign that she was improving according to Headmistress Murbarak. She remembered to keep her mands moving as she listened to her teacher let out beautiful noises as she covered her.\n\nHer heart swelled. She was sure to get the best grade now. At the beginning she was lucky to get a single moan out of her, even when she was cumming. But now she had Headmistress making sweet noises and thrusting her hips from the second she started each time. She always was a quick learner.\n\nThis was Lacey's second favorite moment of their sessions. The warm semen on her face and the look in Headmistress' eyes as she orgasmed were second only to one thing.\n\nWhen the deluge stopped, and Headmistress regained her composure, she reached down, like she always did, and touched Lacey's head with a hand. Sometimes she brushed a cum stained strand out of her face, sometimes she cupped her cheek and wiped up some of her own cum with her thumb, and others it was a simple hand upon her head. But it was always this moment that made her heart skip a beat. When Headmistress would touch her head, look her in the eyes and go-\n\n\"Thank you, Miss Cambell.\" It was a genuine moment. She really felt like she broke past the teacher student line and had a genuine connection to one of her role models. And if that takes taking loads on her face from the woman she idolized to do it, then that's what she'd do.\n\nHer smile grew sly. \"My pleasure, Headmistress.\" And then she got a little brave. \"Or should I say, yours.\" Lacey froze when Headmistress looked down at her with an eyebrow raised. Did I cross a line? I know ladies are supposed to have a sense of humor but maybe not about something so crass. Please don't be mad at me. Her anxiety left her when the look of confusion turned into a smile and a soft chuckle.\n\n\"You would be right, Miss Cambell. Let's just say it's our pleasure, shall we?\"\n\nLacey let out a giggle of her own, while she sat on her heels with her hands neatly folded on her knees and her back straight. This was her third favorite part of their encounters. Headmistress would always kneel down with her on the stained floor, (they had both learned to take their stockings off before their lessons) and wipe down her face. Lacey imagined this is what it must feel like to have a mother clean your face after a day of playing in the dirt.\n\nShe waited until Headmistress had finished before she asked her usual question. \"How did I do?\"\n\n\"A.\" Lacey waited for the 'plus' that never came.\n\n\"Just an A?\"\n\n\"Are you questioning me young lady?\" Panic.\n\n\"No! I just wanted criticism so I could do better.\"\n\nHeadmistress sighed and looked Lacey in the eye. \"Honestly, I don't know. It's just a feeling. You are doing so well. I want you to know how proud I am of you.\" She placed a hand on Lacey's arm in an affectionate manner. Lacey resisted leaning into the soft touch. \"In such a short time you've become such a refined, wonderful little sl- young lady. The videos you send me are stellar. There's just something missing, but you're right there. It's a 95%. I believe you'll get there eventually.\"\n\nThat's just a long winded way to say I'm a failure. Lacey lost her smile and gained a frown. She had failed her mentor. She looked towards her fiddling hands. Headmistress is kind enough to spend her time with me and me alone. She shows me sides of her that she doesn't show anyone else. And this is how I repay her.\n\nHer sulking was interrupted by a soft hand cupping her chin and lifting her face. She was met with the caring eyes of her Headmistress.\n\n\"Hey. Don't be so down. I told you, I am so proud of you.\" She was surprised when Headmistress gave her a tight hug. Her nose tickled as the hug caused Headmistress' hair to graze it. Oh, right, No one gets to see this either. Her hair was always in the tight bun during the day, but recently she had begun letting it down during their sessions. She only gets comfortable around me.\n\nLacey was distracted from her inner monologue as she realized that the hug had continued for longer than five seconds, making it the longest one she'd ever received. She would know. She's counted. Even the maids that raised her in her childhood made sure to keep a healthy professional relationship. They made it clear they were master and servant instead of friends. And even with her 'friends,' or at least people she acts friendly with, it's usually a quick squeeze.\n\nSpeaking of squeezing, the hug had now surpassed 15 seconds. And Headmistress was still squeezing her tightly. This was a level of affection she wasn't equipped to handle. She started to cry.\n\n\"Oh. I'm sorry.\" She quickly ended the hug but still gripped the girl's shoulders. Headmistress seemed to be flustered by the tears. Another sight only for me. \"Was that the wrong thing to do?\"\n\nBetween her sobs she whipped her face. Despite the tears, she had a big smile. \"No! I'm sorry, it's just. I'm so happy. Thank you, for that.\"\n\nShe sat there and cried her tears of joy while Headmistress gave her tissues. She's too good to me. When she had calmed down, Headmistress spoke to her once more.\n\n\"If you want... we can move onto the next course of the lessons.\"\n\n\"Next course?\"\n\n\"Yes. You didn't think the only thing to pleasing your partner was using your hands, did you?\" Lacey shook her head. \"Now. Because you've been so good, we will be adding another lesson on top of the advanced one. Think you can handle it? You can always stop now and we can pick it up another time.\" And disappoint you more? I would rather die.\n\n\"I can handle it.\"\n\n\"Ok. As a reward for your improvement, we will be doing your course first.\" And as quickly as she melted, Headmistress returned to her proper and professional demeanor.\n\nShe extended a hand and helped Lacey to her feet, then walked behind her desk and sat in her chair. Then patted her lap.\n\n\"Please take a seat Miss Cambell.\" Lacey's eyes were locked onto the hard cock standing at attention in the woman's lap.\n\n\"Do you want me t-\"\n\n\"Is that a question, Miss Cambell?\"\n\n\"I apologize Headmistress but it's a clarifying question.\"\n\n\"I don't see what's so difficult about the command, but continue.\"\n\n\"Do. so you want me to sit on your lap or....\" her voice got small. \"Your- your penis?\" Despite her blush and hesitation, she felt herself get extremely wet at the thought. Please say penis.\n\nHeadmistress looked down and noticed the confusion. \"Oh no! I meant for you to simply sit on my lap.\" Lacey's heart fell.\n\n\"Oh, ok.\" She walked over and turned around. Awkwardly she sat on her teachers lap, or really her legs as she didn't make it past mid thigh, back straight and tense.\n\n\"Miss Cambell, this is the only time and place I will permit this. Relax. Lean into me.\"\n\n\"...Ok.\" Lacey scooted back a bit, into the lap, her heart rate quickening when she felt the undeniable shape of a cock slide between her buttcheeks and touch her lower back. Then she leaned backwards and pressed herself up against Headmistress' front. She felt the large breasts of her mentor press into her back through her blazer.\n\n\"I said to relax Miss Cambell.\"\n\n\"I'm sorry. I'm trying but-\"\n\n\"No matter. I'm sure you'll relax eventually.\"\n\nLacey was not prepared for her new lesson. She let out a squeak as she felt the strong arms of her mentor wrap themselves around her midsection. One hand lightly caressed her stomach as another fondled a breast through her blouse. She tried to stop the noises she made from the new sensations.\n\n\"Headmistress?\"\n\n\"Not another word Miss Cambell. This is your reward for such great progress as well as one of your next courses. You may have mastered the art of self pleasure, but you are still new to receiving pleasure. Starting from now I will be treating you as you have been treating me.\" She really is too good for me. Lacey let out a very unladylike groan as she felt a hand slide under her plaid skirt and wrap around her hard dick.\n\n\"Not refined at all Miss Cambell\"\n\n\"I'm so-\" Another gasp as the hand gripping her squeezed harder.\n\n\"I said no talking.\"\n\nShe felt the hand leave her length and she watched as it went back up to to fondle her other breast through her shirt.\n\n\"Nonverbal responses only. May I remove both your blouse and bra?\" Lacey grit her teeth and nodded.\n\nShe felt cooler air as one by one the buttons were undone, exposing more of herself to both the air and her idol. Then she effortlessly removed her bra. When her hard nipples reached the air, she suddenly felt a wave of shame. I can't be as ladylike as her. She's so beautiful. She has such wide hips, and wonderful breasts. I look like a child compared to her.\n\nHer lamenting was interrupted by the gentle yet strong hands of her mentor prying her arms open. She had crossed them over her chest in embarrassment.\n\n\"None of that young lady. You are beautiful the way you are.\" Can she read my mind? \"No, I can't read your mind. I'm remembering. I was your age once too.\" Headmistress cupped one of her small yet supple breasts and gave it a squeeze, causing another moan to slip past, albeit this one more ladylike than the last.\n\n\"You are perfect. So what if you aren't as big as me or don't have the same cup size as me? You are not me. You are Lacey Cambell, and you are a woman in your own right, not anyone else's.\" While she spoke she continued to grope the breasts. \"One upside of smaller breasts is that they are more sensitive.\"\n\nLacey couldn't handle it. To be rewarded by Headmistress, touched by Headmistress, complimented by Headmistress, and reassured by Headmistress caused her to fall into another fit of tears of joy within the arms of her mentor. She's nicer to me than my own mother.\n\nWithout missing a beat, Headmistress reached over and grabbed tissues, taking it upon herself to wipe up the tears streaming down Lacey's face. \"Miss Cambell, need I remind you that you are a grown woman? Do I have to implement a no crying policy for future meetings?\"\n\nBetween the tears and sobs, \"No, I'm sorry. I'll do better.\"\n\n\"You don't need to do better Miss Cambell. You are fine as you are.\" That only redoubled the tears.\n\nDistracted by her emotions, Lacey was caught off guard when she felt a cold sensation beneath her skirt. Headmistress had oiled up her hand and started applying it to her penis. Her body had to choose between sensations and it aptly chose to focus on the pleasure and stop the tears. She was then startled when she felt a warm feeling against her testicles. Headmistress had shifted so that her own shaft was now in the front, rising up from between both of their legs and brushing up against her own. Headmistress noticed her staring down at both of their dicks, Lacey's being slightly thinner and shorter than the thick, brown shaft.\n\n\"Don't even think about getting jealous again, young lady. As I said before, you are good the way you are. That includes penis size.\" To punctuate her point she extended her grip for a moment, wrapping her hand around both of their dicks and pressing them up against each other.\n\nShe's so warm. She felt the leaking from her pussy escalate, almost certainly staining the chair they sat on as it ran down both of their thighs.\n\n\"Now. Are you finished? Can we continue with the lesson?\"\n\n\"Yes Headmistress.\"\n\n\"No talking, remember?\" Lacey nodded. \"Now, sit back and try to enjoy it. Remember, when receiving pleasure, you must be totally relaxed. Don't hold back, don't hide how you feel. If you need to make a noise, let it out. Let your partner know how good they are making you feel. Genuine noises are the most ladylike. When one tries too hard or tries to hold back is when you get those base and barbaric grunts.\"\n\nAnd with that the \"lesson\" began. Lacey tried to relax as much as she could but was quickly overwhelmed by her feelings. She was already reeling so much from the sheer emotional aspect of this lesson that she barely made it five strokes.\n\nWhen she realized what was happening she wanted to warn Headmistress somehow. But without speech all she could do was moan loudly as she covered her own torso and Headmistress' hands in her cum. It felt as if all of the feelings welled up in her heart traveled down her body and out through her cock. The already incredible feeling of an orgasm amplified by a feeling wholly new to her. The feeling of love and being loved.\n\nAs she came she vaguely noticed that along with the feeling, the volume of her own cum was greater. As if her body wanted to return the love she was given and the only way it could think to do that was pump out as much of her cream as possible in appreciation of Headmistress.\n\nWhen it finally ended she fully relaxed against Headmistress for the first time, waiting for the reprimand or punishment that was sure to come. She also noticed that her cheeks were wet, though no cum had hit her face. During the orgasm she has started crying again.\n\nInstead of scolding, all Headmistress said was, \"As I said, you have limited experience being pleasured. It's a different sensation all together.\" As she wiped off her hands as she continued. \"Though I expected you to last a little longer than that.\" Before Lacey could go into another sadness fit she continued,\" But at the very least you let out a wonderful noise. Good job.\"\n\nHeadmistress returned her hand to Lacey's limp penis. She gave it a few strokes but it refused to grow again. After jerking off earlier and the mind-blowing orgasm she just had, Lacey was spent. Or so she thought. She felt the hand travel lower, under her testicles, and graze her lower lips.\n\n\"Looks like it's time for a quick anatomy lesson. Miss Cambell, do you know what the prostate is?\"\n\nBlushing, Lacey nodded. \"You can speak for now dear.\"\n\n\"Yes.\"\n\n\"Do you know that men can feel intense pleasure from having it stimulated?\"\n\nRemembering her search history, once again Lacey nodded before quickly adding, \"Yes, I do.\"\n\n\"Good. Now you probably know that some people refer to it as the 'male G-spot' because of the pleasure it can give men. But did you know that women also have a prostate?\" Her hand on her lower lips started to press a finger against her hole and it quickly gained entry.\n\n\"No?\"\n\n\"That's fair. This is fairly recent. Well, akin to calling the prostate the male G-spot, the G-spot can be referred to as the female prostate.\" Lacey whimpered as the finger began exploring her insides. \"The Skene's gland is a little gland on the upper wall of the vagina, where the G-spot is. When stimulated it causes great pleasure, like the prostate, and if stimulated enough it can even secrete a fluid, which results in female ejaculation. For a man, stimulating the prostate can be used to cause erections.\" Lacey moaned as she felt the finger gently slide against a spot within her, on the upper walls of her pussy that felt really good. \"Well, Miss Cambell, for women like us, who have both, these two glands are actually one and the same. Some studies have shown that we even feel a minor to significant amount of extra pleasure compared to people with only one set. We're going to try this lesson again, but first...\" Lacey quickly stiffened, her body trying to escape the pleasure but Headmistress's free arm held her fast against her as the finger within started to roughly stimulate the gland against her G-spot.\n\nThe results were immediate as her once soft penis soon rose to its full length once more, this time appearing to be harder than the last two times. Headmistress played with the button a little more, just to make sure the erection stayed. By the time she removed her finger, the cock was rock hard and leaking precum in a small stream.\n\n\"There we are. The 'no talking' rule is now in effect. Please try to last longer this time.\" And her hand once again began stroking.\n\nTo her credit Lacey did last longer the second time. She still whimpered and sighed at the touch of her Headmistress but she was able to hold on. At least until the hickies began. Lacey let out a startled yelp as she felt the lips touch her collar bone. She squealed when she felt the nip of her teacher's teeth upon her skin. And she came when her teacher began whispering encouragement in her ear. She whispered about how proud she was of her improvement, how much of a beautiful young lady she was, and the final straw was telling her how she wished she had a daughter as diligent and studious as her.\n\nAs she covered herself again her only thought was, I wish I had a mother as loving and caring as you.\n\nHeadmistress held the limp cock in her hand. \"Hmmm. Your stamina definitely needs work. But, you made wonderful noises. I'd give it a C, maybe a C plus. Not bad for your first time Miss Cambell.\"\n\nLacey struggled to recover from her second mind-blowing orgasm of the session. \"Than-thank you, Headmistress.\"\n\n\"Now. It's time for your other new course. On your feet.\" Lacey got up on shaky legs and turned to face her mentor. \"Now. On your knees.\" Lacey assumed the position she was in for every hanjdob she had given Headmistress. She sat on her knees with her back perfectly straight and her head held high. Notably, though, Headmistress stayed seated.\n\nShe watched with great interest as Headmistress spread her legs, giving more room around her pillar of learning. She reached out a hand and started softly running it through Lacey's hair, and petting her head. Lacey closed her eyes and reveled in the feeling.\n\n\"Your manual technique is superb.\" Lacey just moaned affirmation while the hand continued to pet her. \"Now it's time to learn the next step of pleasuring a partner.\" Lacey opened her eyes when the hand slowly reached behind her head and started guiding it forward until she was less than an inch from the penis of the woman she worshipped. \"Oral pleasure. It's not that different from using your hands. In fact in some ways it's easier. This way you can work the head, the shaft and the testicles at once.\" Lacey's head was moved the little distance there was between them until the head rubbed up against her lips. Then she was moved as Headmistress casually rubbed it against her cheek, spreading its precum on her face.\n\n\"Now, I will allow you to go at your own pace the first time. Just to get a baseline for where we are starting. But do remember, no teeth. Understood?\"\n\nLacey's eyes were glued to the length rubbing against her cheek, most of her mind focused on the wetness and warmth there. \"Mmmhmm\"\n\n\"Now. You may begin.\" Suddenly the hand was gone and she was in control of her own movements again.\n\nLittle did Headmistress know, much like the rest of her courses, Lacey was a goody two shoes in these lessons as well. She had \"read ahead\" so to speak. Or less read ahead and more prepared for this moment because she hoped it would come to pass. Many of the videos she had sent Headmistress were her pleasuring herself to the thought of orally pleasuring Headmistress. And sometimes being used by Headmistress fully. To say she was excited to show the results of her research would be an understatement. I'm definitely getting at least a B+.\n\nShe froze for a second when presented with the moment. But only for a second. Her excitement pushed her to motion and the first thing she did surprised both her and Headmistress alike. On instinct she went straight for something that she had wondered about since the first meeting, but never got close enough to experience.",
        "With one hand she took the cock and raised it while simultaneously shoving her nose into her idol's crotch. She pressed her nose right up against her testicles and took a deep whiff. I knew she would smell good. So strong and regal. Her nose filled with the strange mixture of masculine scent of a penis, combined with the natural feminine scent of a woman. She compared it to her own and found it, more pungent, stronger. A secondary, slightly fainter, but equally as strong scent reached her nose. It intrigued her.\n\nShe reached with her other hand and raised the testicles to reveal what she believed to be what the gates of heaven must look like. The glistening petals of her goddess. Before she could do anything else, she felt a hand on her own, causing her to push the orbs back down akin to a curtain falling.\n\n\"I appreciate the enthusiasm Miss Cambell, but that course is for another time. For now, just stick to what you know.\"\n\n\"Yes Headmistress.\"\n\nLacey decided to show off for Headmistress. This was another chance to show her gratitude for all she did for her. She opened her mouth and took one of the testicles into her mouth, sucking on it. Above her she heard Headmistress moan as the hand returned to her scalp and resumed its rubbing, encouraging her to continue.\n\nHer taste buds exploded with different flavors, all of which she assumed what the mythical ambrosia must have tasted like. The first taste was the salty taste of sweat from a day's work at the university. The second she recognized, because of some curious experiments of her own, to be her own taste from earlier when she leaked onto Headmistress' lap. And the third was similar to the second but different, which she deduced must have been Headmistress' own nectar. She moaned around the testicle, wanting to savor the flavor forever, but she had a job to do.\n\nAfter releasing the first one and quickly repeating the action with the second, she stuck out her tongue and slowly trailed it up the shaft, giving the tip a flick when she finished her lick. She looked up to meet Headmistress' eyes with a mischievous smile on her face. How'd you like that?\n\nShe felt the hand quickly grip a part of her hair before releasing it as Headmistress moaned from the action. Then she looked down at her student, eyes alight with both surprise and lust. \"Why Miss Cambell. You seem to have more skill than you let on. Have you perhaps taken this course before?\"\n\nNo one but you deserves my mouth. \"No. But I may have read ahead in the syllabus, if that's okay with you, Headmistress.\" She gave her an innocent look while simultaneously wrapping her mouth around the tip and began sucking.\n\nThis time as she moaned she raised her other hand to the head and threw her head back as she let out a noise that was simply divine to Lacey's ears.\n\n\"I believe you made the right choice Miss Cambell.\"\n\nThe next few minutes were heaven for both women. Lacey loved hearing the noises that came out of her mentor, they were much more numerous than when she just used her hands. Speaking of her hands, she made sure to use her hands to stroke the parts of the length that she couldn't fit into her mouth and fondle her testicles.\n\nLacey was trying out every single thing she had seen in the tutorial videos she watched and was pleased with the results. She twisted the hand she was stroking with, she gripped the testicles with a decent amount of force. She even allowed saliva to build up in her mouth to make the noises of her act much more audible and sloppy as she read somewhere that people like that. And as the Headmistress herself taught her, she moaned whoreishly throughout the process, letting her know just how much she enjoyed servicing her mentor's cock. Though up until this point she had mainly used her mouth to stimulate the head. But she wanted to show her full devotion to her Headmistress.\n\nSlowly she started lowering her head further and further down the shaft, until it hit the back of her throat. Then she immediately gagged and started coughing. I guess research can't make up for experience in some areas.\n\nShe was prepared to try again until the hands entangled in her hair gripped her golden locks and slowly but firmly pulled her off of the meatstick, much to her displeasure. She looked up and saw her Headmistress looking her over, seemingly checking her for damage.\n\n\"Don't do that again.\"\n\n\"But Headmistress I want to-\"\n\n\"I know, but things like that take time. First work on mastering the basics. Work at your current level. We'll get to that when the time comes. I don't want to see you hurt yourself because you got overzealous.\" While her cock continued to be soft, Lacey's folds fluttered. The genuine feeling behind the words, the worried look she was being given. Everything she had been missing her whole life was right here in this woman before her.\n\n\"Yes Headmistress.\"\n\n\"Now, you were doing a wonderful job Miss Cambell, but we've gone a little over time. I'm sure you have homework to do and I have plenty of grading. You wouldn't mind if I took over for the last bit would you?\" I am yours to use as you wish.\n\n\"Of course not, Headmistress.\"\n\n\"Good. Tap me three times somewhere if I'm being too rough.\" You can be as rough as you like.\n\n\"Yes Headmistress.\"\n\nWithout relaxing her grip, Headmistress stood from the chair, now staring down at her. She felt powerless before her, yet so safe. Even if something were to bother her, as long as it was in worship to Headmistress, she would bear it with a smile on her face.\n\nHeadmistress hissed through her teeth as she reinserted herself into the waiting mouth, which immediately latched onto her and started sucking. Without anything to do except suck and lick, Lacey continued looking up and starting into the woman's eyes as she used her. She only has that look when she's with me. I'm as special to her as she is to me.\n\nTheir moment continued for a minute or two longer, Headmistress slowly moving Lacey's head, back and forth along her length, never breaking eye contact. Then came the warning.\n\n\"I'm getting close.\" Lacey understood the warning as a question. A question that had only one answer. She tried her best to push her head further, but was resisted by the hands gripping her hair. But the message was received.\n\nThe home stretch swapped the motions. The grip held Lacey's head still while Headmistress gently thrusted her hips back and forth, running her head against the tongue that eagerly licked at every available inch. Lacey felt the power behind the thrusts and more specifically the lack thereof. They always started out with some speed but decelerated very quickly. Headmistress was holding back. That only made her suck harder. Use me. Fuck my mouth however you want. Don't hold it in!\n\nShe felt the cock in her mouth twitch in the ways she recognized from her previous manual lessons. Give it to me. Give it all to me.\n\nHeadmistress stopped her motions, throwing her head back and letting out the loudest noise yet in all of their sessions. It was a loud yell, surely to be heard by anyone in the hallways would anyone be there, but being how it was both after school and specifically the hallway where students knew Headmistress resided, it was sure to be empty as students steered clear of it.\n\nLacey let out a moan of her own as the tip in her mouth began to deliver her reward to her. Globs of cum filled her mouth immediately. She didn't have time to savor the first shot before she swallowed to make room for the second. Each shot went down slowly, as the thick fluid clung to and coated her throat. She felt the warmth travel down her esophagus and into her stomach. She kept her tongue moving all throughout, wanting to please Headmistress as much as she could.\n\nWhen the torrent ended and Headmistress removed herself, Lacey held the last shot in her mouth. She tasted it and it sent shivers down her spine before she swallowed the last of it. Then she opened her mouth wide with an \"Ahhhh\" to show Headmistress that she had swallowed it all.\n\nThe grip on her hair finally relaxed back into the comforting head rubs. Then one hand went down to cup her cheek, the thumb rubbing over her eye brow as in they stared into each other's eyes after the moment they just shared. No, the moment they were still sharing.\n\n\"Wonderful job Miss Cambell. A+. And I didn't even have to remind you that young ladies don't spit.\" Then the facade dropped again, just for a second. This look was the deepest into the true Headmistress Lacey believed she'd ever gotten. The closest she'd been to the real feelings behind the teacher act. The hand on her cheek suddenly conveyed a new feeling. Along with the comfort it felt almost... possessive. As if Headmistress was claiming her. I belong to only you. She tried to convey that though with her eyes. Headmistress then, let slip a line that she had meant to be purely a thought.\n\n\"Good girl.\"\n\nThat pushed Lacey over the edge she didn't even know she was at. She squealed as the sudden orgasm over took her. She felt the wetness on her legs as her pussy gushed out juices and felt the sticky sensation against her skirt as her still soft penis began letting a load of its own. This did not go unnoticed by Headmistress but she didn't draw attention to it. She just kept her grip on Lacey's head and stared inter her eyes as she came sans stimulation.\n\nThen, the moment was gone and they were right back to the status quo, Headmistress packed up her things and set her hair back into the tight bun. She prepared to leave while Lacey stayed behind to clean up the room. Before she left she added, \"Oh, and Miss Cambell? This will not be the last time you take the oral course. Just because you got an A+ once does not mean you can rest easy. Besides, it's going to take practice if you truly want to take me as deep as you tried to earlier.\" And with that she was gone.\n\nLacey spent the rest of her time cleaning continuously having to swallow as her mouth watered from the implications. I can't wait for tomorrow's session. Then she noticed that there was once again a tent in her skirt. Maybe she won't mind if tonight's homework video had a change of scenery, she thought to herself, as she pulled out her phone and lifted the skirt.\n\nAuthors note: As usual, whether it s something you liked or feedback, comments are welcome."
    ],
    "authorname": "SmuttySamoanMD",
    "tags": [
        "blowjob",
        "reach around",
        "futa",
        "futanari",
        "university",
        "cock worship",
        "forbidden love",
        "handjob"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/private-lessons-ch-02-1"
}