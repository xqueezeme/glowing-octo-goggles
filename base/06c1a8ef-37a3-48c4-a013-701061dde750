{
    "title": "Mira Ch. 15",
    "pages": [
        "Okay guys, it's been a fun ride, but this is it. Mira is over, sorta... Tee Hee... You'll find some hints in the epilogue. I've got a few ideas that I'm going to use. Don't take that wrong. I'm not doing a sequel to Mira. I'm going back to Leader of the Pack now. Yes you all heard me right. Keep an eye on my profile. You should be seeing more chapters of LOTP hitting Lit shortly. As for you Mira lovers, there is a revised version of Mira that will be available. And it is significantly different in some respects from what has been on Lit. Send me a feedback or check my bio info for more information on that...\n\n<CENTER>* * * *\n\n15\n\n* * * *</CENTER>\n\n\"Absolutely not,\" growled an ancient voice from the back of the room. Echoes of agreement bounced from one side of the room to the other. \n\nLilith waited for the group to calm down. \"I fully expected the reaction would be thus. Still, I propose that we all consider what I suggest.\" Knowing the value of letting others come to the correct decision on their own better than most, Lilith sat and allowed the various factions to argue.\n\n\"It certainly would solve a couple problems. Firstly, we wouldn't have to worry about sacrifices any longer. Secondly, if we wanted him to leave, he could.\"\n\n\"At the very same time, what prohibits him from merely going at that point, whether we want him to or not?\" \n\nMore rumbling filled the room as people voiced their concerns about giving Rillan a way to be free of them.\n\n\"We still need protection.\"\n\n\"Well maybe this kind of protection isn't right any longer.\"\n\n\"What do you propose?\"\n\n\"Get rid of the vampire. If we're going to start using the ancient rites again, then perhaps there would be a better solution to our protection than the vampire.\"\n\n\"Yes, something not so frighteningly dangerous.\"\n\n\"We need an army.\"\n\n\"An army whose loyalty is in the right place.\"\n\n\"One that can't be bought off.\"\n\n\"An army that doesn't need our blood!\"\n\n\"Give him Mira.\"\n\n\"Yes, give her to him.\"\n\n\"She wants to go. Let her.\"\n\nLilith waited until the general consensus seemed to favor sending Mira back to Rillan. \"I wish it to be made clear what we are suggesting here. Immortality is not a gift given lightly. Our people decided long ago that death is necessary to bring meaning to life. Without it we found that people fell into patterns of depravity. Without consequence it is difficult for a human mind to resolve questions of morality.  Rillan ap Tiernay was made into a monster on purpose. It was believed that his existence in death would remind him what he had been granted.\"\n\nThere was silence in the room. Most of the elders at some point had been told the origins of the vampire and why the ancients had chosen to create such a thing. Even so, those lessons were long ago and no one in the room seemed even a little hesitant to revisit the rites.\n\nLilith could almost see the thoughts floating about the heads in the room. \"Do we still want to grant Mira something so precious as eternal life?\"\n\"Lilith?\" The voice that spoke was small and quiet. The woman who spoke rarely said anything, but when she spoke everyone listened. It was assumed that she would one day take Lilith's place. \"Why do you insist upon leading us all by the nose? This is the point where the room has been cued to argue that Mira's consequence is to live eternally with the vampire and is therefore just as cursed as his existence. You have your way on this. I believe that the entire room has agreed. Enough guided debate. You skirt the true issue. We may have unleashed another.\"\n\nNo one had wanted to speak to the thought that Aris may have survived the fire. Now it had been said aloud.\n\nThe small woman continued to speak. \"So we create a companion for Rillan. And we face the possibility that Aris has escaped and we've unleashed something terrible. Is that a topic we are going to discuss? Is there even anything to discuss? Can we change it?\"\n\nArguing continued for hours. Loudly and quietly, sometimes even violently, people proposed solutions to dealing with the possibility that an insane vampire had escaped their village. \n\n<CENTER>* * * *</CENTER>\n\nThe storm had been threatening all afternoon. Darius ap Jos watched the sky through the tree branched with an impending sense of foreboding. It was nearly dark enough to call it evening instead of afternoon. With a sudden thunderclap the sky opened up. Even the cover of the forest foliage wasn't enough to keep the rain from soaking through his cloak. \n\n\"Fucking hired Empire scum,\" Darius swore to himself. \"If they had only listened to me.\"\n\nSpending most of his time walking in unknown directions, scavenging food, and blaming the Empire for his failure was leaving a bad taste in his mouth. It was all he could do to keep himself from believing that Marcus had sent the storm. No matter how he tried, Darius couldn't think his way out of this one. He wasn't welcome at the Circle and he was no longer welcome in the Empire. \n\n\"I will find a way. When I do, they'll all pay.\" \n\nSpotting a small cave mouth in the side of a hill Darius ducked in out of the rain, praying that it wasn't occupied. It looked the perfect home for a bear or worse. The rain was too heavy for him to think about it right then though.\n\n\n\n\"Who is he,\" Aris asked herself under her breath.  Rain pounded so loudly she almost didn't hear the strange voice.\n\nHe looks familiar. I don't really know.\n\n\"Poor soul. He's so wet and bedraggled. You could help him.\"\n\nHow?\n\n\"No one wants to wander alone. You certainly don't.\"\n\nDo you think he would want to come with me?\n\n\"Of course. What man wouldn't want what you can give? What woman wouldn't want it?\"\n\nI don't, Aris whispered.\n\n\"You're a cowardly child. Anyone else would give anything to live forever. Even their very souls.\"\n\nI don't think they would.\n\n\"You don't know human nature very well. Trust me. Have I lied to you?\"\n\nNo.\n\n\"Well then?\"\n\nSomewhere in the black of the cave Darius thought he may have heard something. Turning he stared into the abyssal darkness. Nothing.\n\n<CENTER>* * * *</CENTER>\n\nEven Helen had tried to convince Liam to wait for the elders. \n\nAdamantly Liam shook his head. \"They all knew when the handfasting was to happen. It isn't necessary for them to be here. I'm not waiting for anything else to go wrong.\"\n\nAll of the decorations had been washed away by the storm. Mira loved the clean smell of rain. It was as if the fates were reassuring her that the ceremony wouldn't happen. The entire clearing was a mess of trampled scattered plants and flowers. There was no convincing Liam that the ceremony wasn't going to happen. \"It's alright Helen,\" Mira said softly. She fiddled with the pendant around her neck as she spoke, not really looking at anything. \"The fates seem to rule my future no matter what I do. If this is what is meant to happen\u2014\"\n\n\"Finally some sense,\" Liam interrupted. He took Mira's hands in his, tearing her fingers away from the pendant. It fell in slow motion to land on Mira's chest between her breasts. As he took her hands the surrounding druids began to sing.\n\nNo joy or true feeling could be heard in the song. The druids were tired and upset that Liam was being so insistent. He hadn't even listened, when he was warned that after such tragedy and upset there was very little chance that they would be able to summon any of the fey. \n\nVoices droned on into the stormy sky, singing the familiar words without emotion, and a few lights began to blink and flicker around them. \n\n\"That's enough, Liam.\" Lilith's voice was enough to bring an end to the song and the ceremony, without hesitation.\n\n\"What do you mean by this?\" Liam seemed on the verge of tears. \"I thought we had your blessing Lilith.\"\n\n\"Liam,\" Lilith sighed in obvious frustration. She rarely allowed her emotions to show through. Between the meeting she just left and Liam rushing into the handfasting, she was losing her patience.  \"Even if the elders had no ulterior motives in canceling your handfasting, I venture to guess that you are intelligent enough to recognize that Mira is the only sacrifice left. Is there any chance that you may have attempted to push this through before the meeting finished in the vein hope that if you had already staked your claim to her we may not have sent her back to the vampire?\"\n\nIf not for the anger in her tone Liam may have tried to deny the accusations. But he would have been lying and it was obvious that would only make matters worse. Releasing Mira's hands, the cord meant to bind them together fell to the ground at their feet. \"Mira,\" he said softly, not able to look her in the eyes.\n\n\"I'm sorry Liam. This just wasn't meant to be.\" Mira wished she could take his pain away. He merely had the bad luck of being in the middle of a very difficult situation.\n\n\"He'll never be able to love you the way I could have,\" Liam said softly.\n\nReaching up Mira brushed Liam's hair back from his face and placed a gentle kiss on his forehead. \"Perhaps not. Still, I need to let him try. You don't have to understand.\"\n\n\"That's good,\" he answered angrily. Finally he looked up at her, tears on his cheeks. However his eyes were hard. \"I never will.\" With that Liam turned away and left the stones.\n\nMira turned toward Lilith. \"Is there nothing that can be done for him?\"\n\n\"Your heart is too good at times child.\" Lilith shook her head. \"There's no need. He'll get over this and take a different wife. He'll be fine. Liam is a good strong man. He'll learn that he's capable of loving another, in time.\"\n\nMira nodded. \"I guess this means that I'm going back?\" Fear and excitement blended together in a frustrating combination that had her stomach turning a bit.\n\nLilith started into her eyes as if she was reading the motivations there. \"Yes. The elders have decided to send you back. There is some preparation that must be done. Return here at sunset.\"\n\nDismissal obvious in Lilith's voice, Mira walked past the parade of various elders who were entering the stone circle. Each of them eyed her curiously as she passed. Sunset seemed to be forever away. \n\n<CENTER>* * * *</CENTER>\n\n\"What have I done?\"\n\nIt took Rillan an eternity to realize that Aris left. Barely enough daylight streamed into the cave mouth to show that day had come. However, it was enough to keep him inside. Roaring with frustration Rillan turned toward the darkness and stomped back down the hall. There was nothing else he could do about the situation right now. He couldn't decide if he should go after her come nightfall or if he should notify the elders and wait for their direction. \n\nShe could be anywhere, by the time they get back to me with any kind of decision. I'm not supposed to leave the caves unless under direct order. Rillan wrestled with himself. Play the part of the mindless servant-- Stopping in midstride, Rillan tried to get a hold of himself. He could feel the anger boiling throughout his body. He wanted nothing more than to bring the entire mountain down on himself and lie buried for a few centuries. Why shouldn't I be mindless? Look what I do when I think. Drive them insane, drive them away, kill them, bleed them... Roaring pain and frustration echoed down the halls and out the cave mouth.\n\nExploding down the hall Rillan began tearing at tapestries. He knocked a number of doors off hinges and burst into his practice room. Wood splintered, metal crashed against walls, fabric ripped and riddled the floor. Centuries of collecting was destroyed in moments.\n\n<CENTER>* * * *</CENTER>\n\nThe standing stones glistened with the remnants of the afternoon rainfall.Mira stood perfectly still, white shift blowing in the breeze. No one asked if she wanted to change her mind. No one spoke directly to her. She watched with a combination of awe and fear as the elders finished placing small clay bowls containing mud-like mixtures at the base of each of the nine stones. \n\nAs the druids moved amongst the stones they sang softly in unison. Mira thought she recognized the words, but somehow they didn't make sense. Slowly the entire circle began to shift around her. The ground seemed to move. Mira opened her mouth to speak, but couldn't find her voice. No one else appeared to notice. They all went about their tasks with efficiency. Finishing they each turned to face Mira and closed in around her.\n\nMira's perspective shifted and she found herself looking down on the ceremony from above. With detached curiosity she watched the druids remove her shift. Standing naked amongst them, she was suddenly grateful for the strange dizzying sensations. One of the men produced a bowl of the mud colored substance. Each of the druids dipped fingers in the bowl and began drawing runes over Mira's body. \n\nMuddy runes covered Mira's breasts and stomach, ran down her arms and legs, dripped along her back and across her buttocks and thighs. As the druids finished the runes on her body, tiny lights began to blink around the circle. With the song's crescendo the lights solidified. Tiny fey circled frantically, dipping close to Mira.\n\nDistracted by the fey, Mira didn't notice when all the druids left the circle. As each of the small fey blinked out of sight Mira found herself standing alone. The muddy runes burned into her skin. Her shift was at her feet and the moon was nearly at its apex.\n\nConfusion coursed through her. Embarrassed by her nakedness, Mira grabbed up her shift and pulled it on. Gauging by the moon, Mira guessed that she had been in the stone circle for hours. I don't feel any different, she thought with concern. Though that was the only truly coherent thought process she could manage. \n\nNot wanting to return to Liam's home and having nowhere else in the village to go, Mira's thoughts turned toward Rillan, the cave, and what she had come to regard as comforting darkness. I'm to go to him. But should I wait for the ceremony? There's nowhere else to go. I should ask Lilith.\n\nStumbling from the stones, Mira tripped her way down the forest path toward the village. When she finally looked up, she found herself standing outside the gate that surrounded the cave mouth. One of the young women who attended to Lilith stood silently staring at Mira. A ghostly expression fogged her beautiful brown eyes. Trance-like she swung the gate wide.\n\nHer actions were almost frightening to Mira. Spurred on by the strange behavior of the girl at the gate Mira almost ran to the cave. Stumbling haphazardly down the hall Mira tried to call out to Rillan, but her voice continued to fail her. \n\nEntering the main halls Mira began to wonder if she was hallucinating in addition to the shifting floors. In the black Mira tripped over tapestries that should have been on the walls, splintered wood that should have been doors, and other piles of things she couldn't identify. It was getting harder and harder for her to keep her feet. Mira had no idea how long she stumbled about in the dark. If not for how well she knew the halls Mira knew that she would have been lost to the darkness.\n\nBetween the effects of the ceremony and the strange piles of rubble in the halls Mira found herself more and more confused. It seemed to take forever, but she managed to find her way to her bedroom door. A sense of comfort and safety flooded her senses as she crawled down the hall. At least this hall is free of clutter and rubble. Running head first into her bed Mira pulled herself up onto the soft silken sheets.\n\nThe last thing she remembered was hearing terrifying shrieking echoing through the halls. Rillan will protect me, she thought, pulling the blankets up around her and allowing sleep to take her.\n\n<CENTER>* * * *</CENTER>\n\nWaking from a fitful sleep, Rillan found himself sitting in a corner of his bedroom beneath a pile of books. His head throbbed. Vaguely, he remembered having a great deal to drink and then trying to find a solution to his existence in one of the many useless books in his library. \n\nRillan stared at the ceiling. He refused to look at the mess he was going to have to clean up. At least fixing the mess should keep my mind off everything that caused the mess in the first place, he thought with little actual hope. The rising sun peaking at the edge of the open shaft urged Rillan to move.\n\nWith a heavy sigh Rillan stood up. He considered the next thing he should do as he picked his way through the mess on his floor to the shaft and forced the door shut. At least I didn't knock this door off its hinges, he thought. With the shaft covered he began a list in his mind.  I'll write a note to the druids to tell them about Aris. If they don't already know already. Then I'll get to work putting this disorder right. He laughed sardonically. Maybe I'll wait for the next sacrifice and have her clean it all up.\n\nRillan stacked the books in his arms and carried them down the hall. At first he couldn't place what was wrong. There was so much chaos in the hall that he didn't notice, until he was on his way back to his own room for another load of books. Mira's rooms. Was I in there?\n\nPlacing his hand on the door handle he almost pulled the door shut, assuming that he had been the one to leave it open. But he couldn't remember having gone into her rooms. There was a minute hope in the back of his mind that he refused to admit to. Perhaps I've gotten lucky and that girl isn't gone after all. If I get hold of her and destroy her then I might not have to admit to the druids what I did, he thought shamefully, not wanting to acknowledge the other thought in his mind.\n\nSeeing the lump in the bed dredged up all the anger from the night before. Tears formed in his eyes. He refused to allow himself to think that it might be Mira. That vampire bitch has no right to be in her bed, Rillan's thoughts were like acid in his head. Furiously, he threw the blankets back. Standing stunned, he didn't know how to react at first.\n\nSudden cold woke Mira from her nightmares of fangs and blood. Opening her eyes to blackness, she could imagine Rillan over, tying to stomach into knots. I wish I had started a fire, she thought. Her mind raced with uncertainty. Finally she decided that he had to be there. No other explanation made sense. \"Rillan,\" she whispered. \"I'm sorry. I was the only sacrifice left.\"\n\n\"What?\" All Rillan could think was, she's back. Why is she back?\n\nThe annoyed sound of his voice sent a jolt through Mira's body, and she forgot her fear. Rising to her knees on the bed she moved toward the sound, reaching out she found the blanket first and took it from his hand. She didn't know what to say or how to make him understand what she had done and why she was here. \n\nRillan reached out and stroked the hair back from her face. \"I believe I could be lost in those deep brown eyes.\"\n\nMira smiled, feeling his gentle touch and hearing the need in his voice. Placing her hand on the back of his, she closed her eyes and nuzzled her cheek against his palm. \"I missed you,\" she admitted.\n\n\"I don't believe I will ever understand you,\" he answered. Leaning down he kissed her forehead, her temple, her cheek, and finally her lips.\n\nPassionate fire exploded in Mira's chest and burned its way throughout her body. Her breathing grew shallow. She was scared to open her eyes, not wanting to find herself dreaming. I can't believe how much I missed this.\n\nMira felt the shift being pulled from her. She waited impatiently to feel his hands on her body. She knew they would be cold, at first. Met with nothing but air she fidgeted. \"Rillan?\"\n\n\"What have you done,\" he said breathlessly.\n\n\"Nothing. What do you mean?\"\n\n\"You're covered in runes, Mira.\" She flinched at the anger in his voice. \"What did you let them do to you?\"",
        "\"I wanted to be with you,\" she said, finding a strength in her voice that she didn't realize was there. \"Now. Like this. I can always be with you. No more sacrifices. I'm the last.\"\n\nRillan stared at her horrified. \"You don't know what you've done.\"\n\n\"I know better than you or any of the others think.\" \n\n\"I know you fear me, Mira. I feel you tremble when I feed on you. You can't survive an eternity of that. No matter what they may have changed you into. No one could.\" Rillan sounded as if he was pleading with her to change her mind.\n\n\"Don't underestimate me. It's too late. I feel no remorse,\" she told him. \"I did what must be done, because no one else can.\"\n\n\"What did you say?\" How many times over the centuries have I told myself that? Maybe it takes the Fates centuries to create two people capable of this kind of life.\n\nMira didn't answer him. He didn't need her too. She heard and felt the sound of his clothing being pulled from his body. The rustle of fabric dropping to the floor sparked a warm pleasurable anticipation in her belly.\n\nShocking cold flesh against hers made Mira gasp.  I'll have to make sure he doesn't get this deprived of blood in the future, she thought with amusement. His arms wrapped around her and his lips peppered kisses along her neck. Mira let her head fall back, trusting him, as he pulled her down onto her bed. \n\nRillan felt the heat of her body flood into him. She was so warm it almost burned to press against her. For the first time in the whole of his beastly existence, he didn't find himself wrestling with the vampire for control. \n\nMoving down along her body, Rillan gently urged her legs apart. Mira's breath came in short sharp gasps. Her hands reached out in the darkness to find him. She felt him lower himself between her legs.It was too long since the last time he tasted her, heard her whimper in excitement, or felt her needy touch. Her scent shot through him, driving him on. \n\nMira flinched when his cold tongue drew a tentative circle around her clit. Try as she might, she couldn't help the moans of pleasure that erupted from her body. Rillan sucked her clit into his mouth, flicking it with his tongue as he gently sucked. His hands slid up her legs and cupped her butt, holding her tightly to him. Squirming in his intense grip, she couldn't escape, not that she truly wanted to. \n\nAs Mira's reactions to his mouth calmed Rillan shifted his grip on her. Sliding one hand around her thigh he stroked up her leg and parted her wet lips with one finger. In a swift gentle movement he pressed his finger inside her, and began stroking the soft spot inside her. Within moments Mira convulsed, drew in a sharp breath and began trembling with the release.\n\nAs he felt the walls inside her grip his finger, Rillan intensified his sucking. She tried to pull away from him. The pleasure was near pain as he dragged her release out and caused a second peak in climax. Mira pushed at his head, trying to stop him. \n\nFinally, smile splitting his face, Rillan let her go, but only long enough for him to move back up her body and position himself to enter her. Mira felt as though the bed was spinning. Before she could get a grip on herself she felt Rillan's cock glide inside her. Mira gripped his arms and braced herself as he began moving against her, slowly at first and then with more force. The time he spent with his face between her legs had him ready before he even started. Rillan held back only as long as it took for her to reach her peak one more time. Her writhing beneath him was more than he could handle. Rillan released into her, letting his cold dead seed fill her body, feeling her warms wrap around him. \n\nHe wasn't actually sure that he heard it. She was so quiet. In the intense aftermath, just as he was collapsing onto her body, trying to control his fall so as not to put too much weight on her, Rillan could have sworn she said, \"I love you.\"\n\n \n\n\n<CENTER>* * * *\n\nEpilogue\n\n* * * *</CENTER>\n\nLilith found herself at the head of the elder's council table once again. Years wearing on her caused her handwriting to shake. Still she believed that this letter should be penned personally. Folding the paper over, she sealed it and handed it to the girl who waited patiently to deliver it.\n\n\"Now,\" Lilith intoned. Her voice reverberated in the silence of the room. \"I know we're all concerned about this decision. I urge you all to stay yourselves before leaving this room. We will all need to provide a strong front to reassure the populace that this is the correct course of action. That at least we all agree on.\"\n\nThe quiet rumble of reluctant consensus was interrupted when one of the older men at the table cleared his throat. \"Lilith,\" he replied in a voice that was far stronger than his fragile appearance would have suggested. \"It's not the vampire we're concerned with. You know that.\"\n\nLilith sighed. She appeared much older. \"Change weighs heavily on me,\" she said. \"I'll hear all suggestions.\"\n\n\"His replacement should be less violent.\"\n\n\"Should be loyal without our having to hold something over his head. Feeding the vampire kept it faithful, but hurt our people.\" There was wide agreement on that thought.\n\n\"His replacement should be strong enough to do all that the vampire did, but not so frightening.\"\n\n\"There should be more than one. I'll not support creation of a creature whose very existence is loneliness and torture.\"\n\nOne voice harrumphed. \"Some of the things you're all suggesting we dispense with were put in place by the ancients to allow us to control the beast.\"\n\n\"I agree,\" someone else chimed in, \"there must be some balance. We can't all suggest that we create something so incredibly powerful as the vampire, but without any of the consequences to his existence.\"\n\nA heavy silence descended on the room. No one knew what to do, and none of them had ever experienced so little guidance from Lilith. \n\n\"I'm just as concerned for the situation as you all are,\" Lilith said. \"If we are to preserve our peaceful existence we need an army. Not just any army, but one capable of standing up to armor and an advancing world of change. We want an army that we will not fill guilty for bringing into existence. We're asking the Fates to bring us a solution that will simply be a strong military breed who will choose to protect us and act with temperance and logic as we would. We want ourselves to be an army, but we don't want to pick up weapons. There isn't a mind at this table able to come to a solution which resolves this issue. The two thoughts are naturally opposed.\"\n\nEveryone in the room could feel the frustration in her voice. \"We need to consider one thing that no one has mentioned.\"\n\nLilith turned toward Alwyn and smiled wryly. She already knew what the small woman was suggesting. \"We need a protector capable of standing up to the vampire. Just in case one of them returns.\"\n\n\"We also need to consider that Rillan ap Tiernay may not be capable of dealing with Aris. Or worse, that Aris may create more vampires before Rillan ap Tiernay can destroy her.\" The matter of fact tone in Alwyn's voice sent chills down everyone's spine. \"We need to consider the possibility that there will be an entire army of vampires. I personally don't see the sense in creating another breed that may be able to multiply as easily as the vampire or cause as much damage as the vampire. To some extent I believe we've done enough damage pretending that we can stall the Fates. Perhaps we should consider resigning to our philosophies and allow the Fates to guide our existence. I even dare to suggest that the ancients laid aside the knowledge you're all considering evoking for a reason.\"\n\nThe debate had been going on all evening. The elders were scared. This was the first time the Circle had been threatened since the creation of the vampire. \n\n\"Perhaps Alwyn is right.\"\n\nA shrill scream shattered the tense silence in the room. After some confusion the elders flooded out of the council round house into the night. All around the village people were coming out into the night and searching frightfully for the source of the scream. \n\nA terrible feeling turned Lilith's stomach as she spotted two figures disappearing into the tree line.  Fortunately everyone's attention was diverted by the gruesome scene at a nearby roundhouse. From what Lilith could tell no one else saw the two figures. \n\nPicking her way through the crowd, Lilith arrived at the door of Liam's family home. Liam stood at the doorway, holding Helen and comforting her. Apparently Helen had been the one who screamed.\n\nA set of bloody footprints led to the pair. Lilith followed Helen's horrific trail into the round house. Upon entering the house, a distinct metallic odor assailed Lilith's senses. The bloody footprints led into the bedroom which belonged to Liam and Helen's mother. The woman had been very sick since the death of her husband and nothing that had been done for her seemed to be helping her to recover. It was all Lilith could do to keep from losing her stomach contents all over the floor. \n\nNever had Lilith seen such carnage in the whole of her life. No wild animal ever did to a person what had been done to the matriarch of the household. Liam's mother had been ripped apart. Pieces of her were scattered around the room and blood splattered walls and ceiling. Entrails led from the body across the floor. It almost looked as if the body had been fought over. The only thing that was worse than what Lilith could see was the fact that there were things she couldn't see. Specifically, pieces were missing. The woman's chest was torn open, and her heart was missing. Her skull had been shattered, and her brain was nowhere in the room. What's more, even though there was blood, there wasn't nearly as much as should have been coating the floor, after a body was shredded like this.\n\nTurning away from the nightmare, Lilith left the house, wiping tears from her cheeks as she went. Emerging from the house Lilith stared up at the moonlight sky. Gazing at the starry night, the world almost seemed to be okay with what had happened. Is this truly what the Fates want for us, she asked herself. Are we paying for what we created? Was it so wrong?\n\nAs if answering her thoughts, a lone wolf howled into the night sky. The beautiful wolf song almost sounded mournful. It was as if the creature knew the tragedy and was questioning the Fates as well. \n\n\"Lilith?\" \n\nThe elder refocused her gaze and found Liam standing in front of her. His face was angry, but resigned. \n\nHaving her attention Liam cleared his throat. \"Lilith, I know the elders are debating what is to come next. No one is saying it, but everyone is scared. If the Empire doesn't take us over the vampire appears to be willing to eat us. I want to be part of what is done. Please. Tell me we're not just going to accept this.\"\n\nSo it seems that the population of the village knows more than the elders believe about what goes on in the council round house, Lilith thought sadly. So much for protecting them. \"Alright Liam. Come with me.\"\n\nLeaving the distraught Helen with a small group of women to organize the cleaning of the mess, Lilith suggested that a group of men get together and create a watch for the rest of the night. \n\nLilith led the elders and Liam back to the council round house. Her confident demeanor had returned and put the elders more at ease than they had been in days. Once everyone was seated Lilith stood and looked them over. \"I understand Alwyn's concerns, and to some extent agree with her. However, I am unwilling to lie down and accept this change. I will concede to the decision of this council if that's what you wish.\"\n\n\"Lilith, you must have some new thought on the matter or you would not be speaking thusly.\"\n\nSmiling Lilith looked to Alwyn. Philosophy of acceptance or not, no one wanted to die or be forced to hand their knowledge over to the people in the Empire's senate. When no word of protest came Lilith continued. \"I believe that the wolves are our answer.\"\n\n<CENTER>* * * *</CENTER>\n\nLetter in hand, Mira quickly navigated the familiar halls. She could guess what the letter said. There were only so many reasons the druids contacted Rillan. Now that the sacrifices were no longer necessary, this could be only one thing.\n\nMira pushed open the door to Rillan's practice room. Even with her upset about the apparent new, she had to smile as she watched him busily cleaning the mess. It had taken weeks to clean up the halls and rooms he trashed in his anger. Still he did it all with a relatively good humor. The frequent breaks to make sure the beds were still in working order didn't hurt either. \n\nRillan knelt on the floor next to the practice dummy gathering the pieces into a pile. He couldn't stop smiling, and his face hurt. Without looking up he said aloud, \"I don't think my cheeks are used to being happy.\"\n\nChuckling, Mira leaned down and held out the letter, kissing him on the cheek. \"Not that I want to change that attitude,\" she teased. \"But I think this might fix it for you.\"\n\nRillan's brown furrowed, as he looked up from the shards of armor to see what Mira was talking about. He couldn't help the low annoyed growled that issued from deep in his chest. \"Of course we can't be left along for long.\" Standing, he unceremoniously took the letter from her hands, broke the seal, and flipped the paper open. \n\nPatiently Mira watched him read. Rillan's expression was nearly impossible to read. Finally he let the hand with the letter in it drop to his side. Without looking at Mira, he cast a gaze around the room.\n\n\"You look as though you're thinking very hard,\" Mira said with a note of worry.\n\n\"I guess I am,\" he sighed. \"It may sound odd, but I've grown rather used to this place.\"\n\n\"What? You're not making much sense.\" Mira placed a hand on his cheek, drawing his eyes to look into hers. \"What's going on?\"\n\n\"The Circle has decided that I've become a liability. They suggest that I take care of the problem I created...\"\n\n\"And?\" Mira prompted when his sentence trailed off.\n\n\"And I'm not to come back when it's done.\" Rillan read the letter one more time. Then folded it carefully and placed it in his pocket. The corner of his mouth rounded up in a half smile. Reaching out, he took Mira's hand. \"I actually expected something like this to happen someday. In the very beginning I thought they would be done with me much sooner than this. As the years continued and began bleeding together, I adapted and waited. My first thought was to where we could go.\" Rillan lifted her hand to his lips and placed a gentle kiss on her palm. \"But as I think about it,\" he continued, dragging his lips to her wrist and placing another kiss there, \"we can go anywhere you like.\"\n\nMira smiled, leaned in and kissed his cheek. \"So it seems that we're free to live our lives without the killing?\"\n\nRillan nodded and grabbed her up into his arms, swinging her around, and making her giggle. \n\n\"So where do we go first,\" Mira asked, suddenly excited.\n\nPutting her down, Rillan's face took on an apologetic expression. \"I think the Circle is right. We should deal with Aris.\" \n\nMira smiled widely. Although the topic was unpleasant and Rillan sounded so upset and guilty, he had said 'we.' \"Well, although there is some unpleasantness to deal with,\" Mira said cheerily, \"when it's over, there will just be you and I, forever.\"\n\n\"You truly are happy with that?\" \n\nStaring him in the eyes, Mira placed her hands on his shoulders and drew him closer. \"Forever,\" she whispered.\n\n<CENTER>*************</CENTER>\n\nAnd that as they say is that!\n\nPlease take a minute and vote, or send me feedback. I use the comments you guys send me! I really do. So please don't hesitate to drop me a line!"
    ],
    "authorname": "secretme",
    "tags": [
        "druid",
        "vampire",
        "vampyre",
        "dark",
        "sacrifice"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mira-ch-15"
}