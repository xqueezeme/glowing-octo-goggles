{
    "title": "Slayer vs. Succubus",
    "pages": [
        "Brother Hayes looked nervously around as he shuffled down the corridor. His candle sent flickering shadows across the walls. In his overwrought imagination they took on the fearful shapes of imps and demons, grasping and clutching at him.\n\nGod, please preserve my humble soul, he thought as he scurried down the corridor.\n\nWhat had they been thinking? For research purposes? Borgnine was mad and he was even more insane for going along with it.\n\nHe opened the door and entered the large cavern of the dining room. All the lamps were out and silver moonlight sent fingers of light along the tables and floor.\n\nHe might be okay.\n\nHe scurried across the floor and headed for the door to the kitchens.\n\nIt had seemed very busy with Borgnine when he'd run away. It might still be... still be... no best not to think of it.\n\nHe heard a noise from above him in the darkness. It sounded like claws scrabbling on stone. There was another sound as well, leathery, like bats leaving a cave at dusk.\n\nOh God, Hayes thought. He tried the handle of the door.\n\nLocked.\n\nHe fumbled with a heavy iron key ring.\n\nA shadow passed overhead. Something landed softly next to Hayes. He caught the scent of an exotic perfume.\n\nNo.\n\nHe heard a feminine giggle, sultry and full of malice.\n\nSomething leaned over and blew the candle out.\n\n*****\n\n\"Carpenter, as your Vatican appointed superior, I order you not to take this case.\"\n\nDebra Castle's angry face filled the monitor screen. \n\n\"I can handle it,\" Kurt Carpenter said. He put on an ammo belt filled with shotgun shells. He checked his gun and holstered it at his belt. He strapped a holster containing a wickedly sharp knife to his ankle.\n\nWhen did the church get so full of spineless pussies? There was a demon; he was a demon slayer, ordained by the pope himself. It didn't get much simpler.\n\n\"No you can't. This is too dangerous.\"\n\n\"They said that about the Shoggoloth. I took care of it. This is just a minor demon.\"\n\nCarpenter picked up a silver-edged katana from the rack on the wall and sheathed it behind his back.\n\nHe'd heard the same whines when he went after the Shoggoloth.\n\n'It's too powerful. It's too dangerous. We can't risk you. Blah blah blah.' \n\nCarpenter didn't know the meaning of 'can't'\n\nSure, the Shoggoloth had nearly killed him, but if he'd wanted an easy fight he'd have stayed in the marines to fight the camel-humpers out in Eye-Raq.\n\nDemons were tough but they weren't invincible. You just had to hit them a lot harder.\n\nCarpenter had dropped a church on the Shoggoloth and driven a burning fuel tanker into the crater. Job done.\n\n\"This is different,\" Castle ranted at him from the monitor, her pinched face red. \n\nCarpenter ignored her. He opened up a leather bag and threw in a mace, an axe, an ornate crucifix, a mallet, some stakes and several vials of holy water.\n\n\"We've invested too much time and money in training you for you to throw your life and soul away.\"\n\nCarpenter put on a heavy biker's jacket. A flaming hand with the legend 'The Lord's Vengeance' was painted on the back. He picked up a shotgun and propped it on his shoulder.\n\n\"Don't be an idiot Carpenter,\" Castle continued to rant, an irritating mosquito whine in the background. \"It's a succubus. Men can't fight --\"\n\nCarpenter switched off the monitor. He put on his shades and stole a glance at himself in a mirror as he walked out of the room.\n\nYeah, we're bad.\n\n*****\n\n\"So gentleman, I hear you have a demon problem.\"\n\nThe two monks stared at Carpenter as if he'd just touched down from Mars. He supposed they didn't get out that much. The brown robes they wore looked like they belonged to some other age about five centuries ago. The older one with the weaselly face was the abbot. The younger man with the ferrety face was the abbot's assistant.\n\nCarpenter hoped they hadn't sworn an oath of silence or anything like that otherwise this was going to be a real fucking pain in the ass.\n\n\"I'm the official demon slayer of the church,\" Carpenter tried again. \"I've come to kill your demon.\"\n\n\"The church sent you?\" The abbot sounded puzzled, although that could be his normal expression. He looked old.\n\n\"Oh thank the Lord,\" the younger man chimed in. \"Our prayers have been answered.\"\n\n\"So what can you tell me about this demon?\" Carpenter asked as he followed them both into the brooding mass of the monastery. It had taken him the best part of a day to get here and the sun was already low in the sky, sending out long claws of shadow as it kissed the stone walls.\n\n\"It arrived three nights ago,\" ferret-face said. \"I fear two of our juniors decided to experiment with forces far beyond their knowledge and summoned it. We found the remains of Brother Hayes in the dining room and Brother Borgnine in the library. The library is where the demon has taken up home. Every night it pollutes our dreams with... vile images. Two more of our junior brethren were unable to resist temptation and gave themselves to the demon.\"\n\n\"The demon is a succubus,\" the abbot said, \"a vile spirit of lust and lasciviousness. It is a sexual vampire that tempts men into sexual congress and then consumes their souls.\"\n\nThey took Carpenter through a large open court and then into a large dining area with long tables. Carpenter saw very little activity. Men in brown robes watched him from the shadows and spoke in hushed tones.\n\n\"Many of the brethren have fled,\" ferret-face continued. \"I fear for the monastery's future if we are unable to get it to leave.\"\n\n\"You can stop being afraid,\" Carpenter smiled wolfishly. \"Your little demon is about to get a first class ticket back to hell.\"\n\nThey left the main dining room and walked up a small flight of steps, entering a cold stone corridor just inside the monastery walls.\n\n\"Um, are you gay?\" the younger monk asked.\n\nCarpenter preferred to let his fists answer that question. He punched out two of the little faggot's teeth and watched him spin into the wall before slowly collapsing in a heap.\n\nThe abbot's eyebrows raised a little, but that was about as expressive as his face got.\n\n\"I think what my younger assistant was trying to point out -- albeit crudely -- is that the church never sends a male demon slayer to fight succubi. They are purported to have a legendary... ahem... arousing affect on men.\"\n\nCarpenter wondered what books the abbot had been poring over in the wee hours of the morning. Dirty bastard.\n\nCarpenter smiled. \"There's no need to worry about me,\" he said. \"I'm a man of the world. I don't think it'll be able to offer me anything I haven't already done.\"\n\nThey stopped outside a heavy wooden door. This place was positively medieval, Carpenter thought. That was the problem with the crusty church types; they never moved on.\n\nNever send a male slayer, what kind of stupidity was that. Some old bishop had probably spouted it in a drunken stupor centuries ago and everybody since was too afraid of change to countermand it.\n\n\"Is this the place?\" Carpenter asked.\n\n\"Yes,\" the abbot replied.\n\nCarpenter drew his shotgun and faced the door.\n\n\"Um. You appear to be carrying a lot of weaponry,\" the abbot said. \"I don't want to sound as if I have the wrong priorities...\"\n\nCarpenter lifted up a heavy boot.\n\n\"... but the library does contain a number of very rare -- priceless even -- books. I would like to ask you to please take this into account when...\"\n\nCarpenter kicked the door in with a spray of splinters. He charged in, keeping low with the shotgun primed and ready.\n\n\"Please be careful,\" the abbot called plaintively after him.\n\nShit, the room was bigger than Carpenter expected. He'd expected some poky little room with bookshelves along each wall. Instead the library was a stone hall about the length of a running track. Rows and rows of books stood like dominoes on either side of a central aisle.\n\nHe spotted the demon immediately. It was hanging upside down from a wooden beam like a bat, its black wings folded around its body. The setting sun sent shafts of light through the narrow windows behind it. An elaborate chalk circle was drawn on the stone floor beneath it. This must have been what the monks used to summon it.\n\nCarpenter's loud intrusion had already woken the demon. It snarled at him before unfurling midnight black wings.\n\nCarpenter brought up the shotgun and fired in one smooth motion. There wasn't a lot he could do at this range though. The demon dropped down from its perch and took cover behind one of the bookshelves.\n\nSo much for having the element of surprise, Carpenter thought as he sprinted down the aisle. He reached the last bookcase, turned and...\n\n...the demon was a babe.\n\nShe leaned against a bookcase, her hips pushed forward as she struck a provocative pose. She wasn't wearing a stitch of clothing. Her voluptuous figure was completely naked. Carpenter marvelled at the full swell of her ample breasts, her long legs and the elegant features of her face. Black hair cascaded down her back in waves.\n\nThe babe was a demon.\n\nHer skin was a deep blood red. Two black wings were folded behind her back. A tail, complete with a little arrow point, flicked back and forth between her ankles. Her ears were pointed, she had two horns on her head and her eyes looked like two doorways into the abyss. Despite this her face was still more beautiful than the most exotic model.\n\nShe was a demon babe. No, she was a demon mega-babe.\n\n\"So you're the big bad demon hunter come to send me back to hell,\" she pouted.\n\nShe turned towards Carpenter, showing him the hairless folds of her pussy. The labia were already moist.\n\n\"Are you sure you wouldn't like to play with me first?\" she asked. She held out her arms.\n\nFuck yeah, Carpenter thought. Then he remembered she'd already killed four monks.\n\n\"I heard you play rough darlin',\" he said. \"Guess what, so do I.\"\n\nHe levelled the shotgun in her direction and pulled the trigger.\n\nHe missed. Like a dancer she gracefully pirouetted away down the aisle. In the space she'd vacated books exploded in little white puffs of paper.\n\nHe'd missed.\n\nHow did that happen? He was standing practically right next to her.\n\nCarpenter gave chase to her slender form as she ran down the aisles. He got off two more shots, but both went wild, putting trashcan lid sized holes in the ornate bookcases.\n\nHe turned the next corner and slammed on the brakes as a razor-edged wing lashed out and nearly took his head off.\n\nGood job you've got panther-like reflexes, he thought.\n\nThe succubus followed up the attack as her red tail came at him like a whip. It coiled around the barrel of his shotgun, the arrow-tipped point slashing through his ammo belt on the way, bare millimetres from his chest. The demon gave a sharp tug and Carpenter's gun was wrenched from his hands to clatter away across the stone floor.\n\nWith his weapon out of the way the succubus came at Carpenter in a flurry of claws and black leathery wings. He somersaulted backwards as one of her talons neatly sliced open the arm of his leather jacket. As he fell back against a shelf he drew his handgun in one smooth motion and got off four shots. One missed, two punctured her wings and the fourth smashed into her shoulder, spinning her like a top.\n\nShe gave a shriek of both pain and fury before leaping up over a bookshelf. Carpenter fired twice more, but he was off balance and both missed.\n\nGotcha bitch, he thought.\n\nIt wouldn't be enough though. He'd hit her high on the left shoulder, a flesh wound at best. Contrary to popular superstition demons weren't invulnerable to conventional weapons, they just healed real fast. You either had to deal them massive amounts of damage to overwhelm their natural healing capacity or hit them with something that screwed it up.\n\nLike silver, Carpenter thought, drawing his katana.\n\nTime for slice'n'dice bitch.\n\nHe heard her chanting over to his right in a language he didn't understand. He doubted any human would. The syllables lingered and hung in the air as if they possessed a malevolent half-life of their own.\n\nThe mumbo-jumbo. Damn. He hated it when they started with the mumbo-jumbo.\n\nTendrils of pink mist rose up from the stone floor and suffused the library in a soft fog. The musky aroma of a subtle perfume playfully teased his nostrils.\n\nCarpenter continued to stalk her through the misty aisles. His cock was stiff in his trousers with the thrill of the hunt.\n\nShit!\n\nThe demon leapt out from his left in a blur of black claws. Carpenter frantically brought up the katana to parry while simultaneously swivelling sideways to dodge her attack.\n\nDamn, his reactions were off tonight. Her claws raked through his jacket, missing his flesh but ruining his coat.\n\nHe should have dodged that easily.\n\nThe demon carried on with her charge, scaling a bookcase and slipping out of sight. Carpenter's swishing blow after her only managed to chop a heavy tome in two.\n\nHis jacket -- his favourite jacket -- was toast. The bitch had slashed it to ribbons. He shrugged off the sad remains and continued to stalk through the mist, holding the katana out before him. Pink mist swirled through the aisles, narrowing visibility and filling the air with a musky aroma that reminded Carpenter of sex.\n\nWhere are you bitch?\n\nCarpenter heard chanting behind him and spun round just in time to see a ball of fire leave the succubus's hands and roar down the aisle towards him.\n\nShit!\n\nCarpenter tried to dodge, but his reactions really were shitty this evening. The fireball caught him on the side and blasted him backwards into a bookcase. A burning smell filled his nostrils and he realised it was probably him, or at least his clothes. They were still on fire. Carpenter frantically tore them off before they burnt the flesh beneath. The smouldering ash of burnt books floated around him like snow.\n\n\"Mmm, you're a big boy,\" the succubus said appreciatively as she looked over his mostly naked body.\n\nShe was leaning on a bookshelf at the other end of the aisle, her naked pussy still pushed alluringly forward.\n\n\"Do you still want to continue this ridiculous fight?\" she said. \"I can think of far better ways to spend our time.\" She pumped her hips forward and her pussy gaped invitingly open.\n\n\"Sorry babe, necrophilia ain't my thing...\"\n\nCarpenter reached down to his ankle holster, drew a silver knife and threw it at her in one smooth moment.\n\n\"...and you're about to be...\"\n\nAt the same time he was thinking about how much he'd like to fuck that nice piece of ass.\n\nThe knife whistled past her right ear and sank, quivering, into a heavy old tome.\n\nHe missed?\n\nThe succubus laughed mockingly and walked around the corner.\n\nWhat the fuck? He should have split her head in two.\n\nAngrily he picked up his sword and charged after her.\n\nI'll slice you to fucking ribbons with my sword, bitch, Carpenter thought. I'll thrust it right through your body. Thrust it right in and out. In and out...\n\nAn image entered his mind, but it was his cock he was thrusting in and out of her.\n\nWhat the fuck was wrong with him?\n\nHe rushed around the corner only to find the succubus waiting for him. She leant forward, put a hand to her pouting lips and blew him a kiss.\n\nThe blown kiss rushed into him like a physical force. It knocked him off his feet and sent him skidding backwards across the floor. He dropped the katana and it clattered away from him. A pleasant tingly feeling ran across his naked flesh.\n\nCarpenter didn't have time to recover his sword. The succubus was already pouncing, her breasts swaying hypnotically in the air.\n\nHe caught her claw-tipped hands at the wrists as her body crashed into him, knocking him back to the ground. Her fanged mouth snapped shut mere centimetres from his exposed throat.\n\nFuck, this was not the position he wanted to be in.\n\nThe fangs lunged again, almost close enough to graze his skin.\n\nShe was strong, maybe stronger than the average man.\n\nCarpenter was anything but the average man. His body was at peak fitness. He twisted an elbow under her chin and pushed up, forcing her teeth away from his throat.\n\nYeah, we're bad. I'll break you in half with my bare hands bitch.\n\n\"Silly men,\" the succubus said. \"So afraid of my fangs when it is my true mouth they should fear.\"\n\nShe thrust down with her hips, impaling herself on Carpenter's massive erection.\n\nOh fuuuuck.\n\nCarpenter's cock had just entered the tightest, hottest, juiciest pussy he'd ever felt in his life.\n\n\"Ah,\" the succubus moaned. \"I told you this was more fun than fighting.\" She straddled him and began to pump her hips up and down.\n\nRed mist boiled into Carpenter's brain.\n\nSo she wanted a fuck. He'd give her a fuck.\n\nHe stood up and rammed her body up against the nearest wall. She moaned in delight as her body jarred from the impact. Carpenter powered his big cock deeper into her hot cunt.\n\nYeah bitch. You want a fuck. This is a fuck.\n\nHe pinned her against the wall and growled as he thrust into her with strong pushes of his hips. He took satisfaction in her incoherent moans as his manhood ripped in and out of her tight cunt.\n\nYeah, take it bitch. This is what a real man feels like.\n\nHe rammed in and out. Juices dripped from her sopping wet pussy onto his legs.\n\n...succubi are purported to have a legendary arousing effect on men...\n\nYeah? Well she'd got him fully aroused now and he was going to make her pay. He felt a familiar twitching sensation begin in his balls. This was going to be a big one. He was going to blast her so full of cum she'd burst.\n\nHe thrust harder and faster, feeling her pinned body bounce helplessly against his.\n\nIt is a sexual vampire...\n\nCarpenter stopped mid-thrust, feeling a cold trickle run down his spine. Had he lost his mind? This was exactly what she wanted.\n\n\"Don't stop now, lover,\" the succubus chuckled darkly. She wrapped her legs around his waist. Within her vagina powerful muscles closed around Carpenter's cock and began to suck.\n\nFuck.\n\nPanic gave Carpenter both speed and strength. Before she was able to lock her legs together around his back and before her vagina clamped fully around his cock he managed to slam her against the wall, hard enough to jar her into loosening her grip. He put his hands on her hips and bodily threw her off him.\n\nHis cock twitched between his legs and a little dribble of pre-cum ran down the shaft. Thankfully that was all as his body cooled back down from the threshold of orgasm.\n\nIt would take more than that to take out the Lord's Vengeance, Carpenter thought.\n\n\"You tease,\" the succubus pouted, \"giving me a little taste and stopping like that.\"\n\n\"I'm sending you back to hell,\" Carpenter said. He was through playing around.\n\n\"You still have plenty of fight. That's good.\" The succubus licked her lips. \"It's so much more arousing when they wriggle.\"\n\nHer black wings expanded and she was about to take off when Carpenter leapt forward and grabbed her legs.\n\nYou're going nowhere bitch.\n\nHer wings were powerful enough to lift both her and Carpenter. She swooped low over a bookcase sending Carpenter into it with enough force to jar his spine and bruise his lower back. He slipped down her legs a little, but refused to let go.\n\nI'm the big bad demon slayer. You can't get away from me.\n\nHe clawed his way up her lithe legs, trying to get a better grip.\n\nThe succubus swung him into one of the walls and Carpenter's legs hit the unforgiving stone with a hard crack.\n\nHave to do better than that bitch.\n\nCarpenter refused to let go. She flew upwards now, heading between the wooden beams and up into the dark haunts of the high stone ceiling. She reached the high point and then turned her soaring ascent into a screaming dive.\n\nNot good, Carpenter thought. That stone floor looked awful hard and a lot further away than he would have liked. She'd also started up with the mumbo jumbo again.",
        "The succubus stretched her wings and brought her dive to an abrupt halt.\n\nCarpenter didn't.\n\nHe slipped down her legs until his hands were clutching at nothing but empty air. He gritted his teeth and prepared for impact.\n\nThis was going to hurt.\n\nA lot.\n\nThe impact never came. Carpenter fell into something soft that cushioned his fall like an airbag. He sank down into a pink substance that seemed as insubstantial as gossamer.\n\nIt was the succubus. She hovered above him, her black wings full extended. She chanted more of the strange words. Thick ribbons of what looked like solidified pink mist issued from her hands and lazily coiled down around him.\n\nCarpenter was getting tangled up in it. It felt soft and looked about as substantial as candy floss, but Carpenter had nothing to push against, just more of a pink substance that yielded beneath his body, but refused to release him. Trying to get his limbs free was hard, energy sapping work.\n\n\"That's better. A bed is far more comfortable than these cold stone floors don't you think,\" the succubus said, slowly descending until her feet touched down on either side of Carpenter's waist.\n\nHe continued to thrash ineffectually against the soft magical energies entangling his body. The succubus held up her hands, chanted a few more words and more of the pink energy drifted down to bury Carpenter's limbs deeper.\n\n\"There,\" the succubus said. \"That should hold you in place while we finish what we started.\"\n\nCarpenter thrashed against the entangling energy. He was the big bad demon slayer. He was going to break free and snap her neck with his bare hands.\n\n\"You've still got plenty of fight I see,\" the succubus said. \"That's good. You'll last for some time.\" Her tail coiled around his erect cock, holding it upright as she slowly squatted down on him.\n\n\"This isn't over,\" Carpenter said. It was only a matter of time before he got his hands and legs free.\n\n\"Yes it is,\" the succubus said. She slowly sat down on his cock and sighed as she drew it into her warm pussy. \"It was over when you entered me the first time.\"\n\nCarpenter groaned as he slid into her soft pussy. It fitted him perfectly, a warm fleshy glove for his cock. Now he was back in her, he wasn't sure he ever wanted to leave.\n\n\"My magic becomes more potent once I take the sexual fluids of my victim. I've already had a taste of you.\"\n\nHe just had to get his hands free, Carpenter thought. He strained against her magical bonds.\n\nThe succubus laid her hands on his chest and stared into his eyes with deep black pools. She rose up and down on his cock with brisk pumps of her hips, letting her wet pussy slurp and suck at his erection. Her full breasts swayed back and forth as she fucked him. Her magical bed gently rocked and undulated beneath them with the motions of her body.\n\n\"Can you feel it demon slayer? Your body is responding. Soon it will give me a spurt of your seed and then your body will be mine completely.\"\n\nCarpenter squirmed beneath her, his hands still trapped in the soft silk of the magic entangling him. An ominous tickling sensation had begun in his balls and was beginning to grow in strength. Her wet pussy felt so good as it slid up and down his shaft.\n\n\"Not going to happen,\" Carpenter said. He was the big bad demon slayer. He just needed to... gnh... get free.\n\nThe succubus smiled. She slammed her body up and down against his, harder and faster. Her breasts swayed as she bounced up and down. Her vagina gripped his cock with a silken fist.\n\nThe tickling sensation in his balls grew. His cock twitched within her.\n\nNo.\n\nCarpenter tried to look away. He tried not to think about the incredibly hot babe riding his body, tried not to think about the soft walls of her pussy clenched around his...\n\nOh god, he was going to...\n\n\"Yes, that's it,\" the succubus purred. She settled down on him, drawing his cock deep within her vagina. Powerful muscles closed around Carpenter's cock and began to suck. The motion was gentle at first, but it quickly grew in strength until Carpenter's nerves were stretched taut.\n\n\"Ughh!\" Carpenter groaned as the most powerful orgasm he'd ever experienced erupted from his cock. The succubus smiled in triumph as her pussy hungrily sucked down his seed.\n\n\"Now you are mine,\" she chuckled. She sat upright on his body and gently moved her hips back and forth. Her black wings opened wide behind her, like sails.\n\nCarpenter continued to struggle, but his movements felt weaker and less coordinated. The after-effects of the orgasm were still jangling through his body.\n\nAnd his body wasn't finished yet.\n\nHis cock was still hard and caught within the fleshy grasp of her pussy. Her powerful muscles continued to suck up and down the shaft and Carpenter could already feel the stirrings of another orgasm start up again in his balls.\n\nHe thrashed harder to try and free himself.\n\n\"The fight is over my poor prey,\" the succubus said softly. \"Now it's time for you to lie back and relax.\"\n\nShe raised her hands and whispered more words of magic. Little drifts of pink energy settled over and permeated Carpenter's skin. A warm glow spread through his body and erotic thoughts entered his mind. The succubus slowly flapped her bat wings, and a gentle, perfumed breeze passed over his body.\n\nHe was the big bad demon slayer. Any minute now he'd break...\n\n...uhhh.\n\nCarpenter's body thrashed again, but this time it was with another orgasm as he ejaculated more seed deep into the succubus. Her powerful vaginal muscles eagerly sucked it down and continued to contract hungrily around his cock.\n\n\"Yes, that's it, feed me more of your seed,\" the succubus purred.\n\nShe whispered more words and Carpenter's body became aflame with lust. It was difficult to think of anything else but the beautiful creature fucking him. He wanted to fill her with his sperm again and again.\n\nHis hips sharply bucked up as he spurted another jet of semen into her hungry vagina. She swallowed it deep inside her and sucked his cock harder with her juicy pussy.\n\nThe succubus settled down over his body. She didn't need to ride him any more. Her vaginal muscles were clenched tight around his cock and milking it with a steady action. She gently sucked on his lower lip before moving up and letting her full lips meet his in a soft kiss.\n\nIt was harder to struggle now. His limbs felt heavy as if his blood had turned to lead in his veins.\n\nHis back arched as his cock pumped more seed into her hungry suction. His life was being pumped out with it, he realised.\n\nThe succubus stopped the kiss and looked down at him with her limitless abyssal eyes, her exquisite face hovering just above his.\n\n\"It was very foolish of you to attempt to fight me,\" she said. \"In the most secret part of their hearts all men would rather fuck me than fight me. That part always wins.\"\n\nBut he was the big bad...\n\nCarpenter's hips bucked again as another orgasm rolled through his body.\n\n\"Your body is mine. Now enjoy the pleasure as my pussy drains you dry.\" The succubus leaned down and pressed her warm lips against his. \n\nCarpenter's struggles grew weaker until they ceased altogether. Struggling required energy and activity. It was much easier to lay back in bliss while the succubus kissed him, her warm body lying on top of his, a soft bed undulating beneath him.\n\nThe succubus enfolded him in her wings. Carpenter's body twitched and jerked as the pleasure of orgasm after orgasm pushed all other thoughts from his mind. Within her embrace the succubus's pussy sucked and sucked and sucked, until there was nothing left to suck any more. \n\n*****\n\nThe abbot and the abbot's assistant listened outside the door.\n\n\"It's gone very quiet,\" the abbot's assistant said. \"Do you think...?\"\n\nHe jumped back in alarm as the succubus walked out through the door. She glowed with a beauty that was both radiant and perverse.\n\n\"That was quite the dumbest demon slayer I've ever fought against,\" she said. \"Very tasty though,\" she added, rubbing her flat stomach.\n\nThe abbot's assistant quavered in fear as he tried to back away from the demon.\n\n\"There's no need to be afraid,\" the succubus chuckled. \"I'm too full to bother any of you monks tonight.\"\n\nShe blew the two monks a kiss and sashayed off down the corridor.\n\n*****\n\n\"What do we do?\" the abbot's assistant said as they looked down at Carpenter's body. Like all the others the corpse looked wizened as if it had been mummified centuries ago.\n\nWhy did they always have to have that ecstatic smile on their face, the abbot thought? It was most disturbing.\n\n\"We ask for more help,\" the abbot replied. \"I hear there's a girl up in Sunnydale...\" "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "demon slayer",
        "succubus",
        "magic"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/slayer-vs-succubus"
}