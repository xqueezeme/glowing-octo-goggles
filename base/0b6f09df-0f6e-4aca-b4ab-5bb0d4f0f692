{
    "title": "The Achen Enforcer Ch. 02",
    "pages": [
        "Hey, everyone. Chapter one is a good indicator of how this story is going to go. It might be a little dark for some.\n\nCHAPTER 2\n\nBode woke, immediately putting together when and where he was, and with whom. Lyric was in the bed with him, her marchette on a magnet above her head that could be rotated and to which one wrist was affixed. Any companion had to have a marchette in contact with the magnets in the sponsor's residence during the night, or it would set off an alarm in central. It didn't have to be the bed and it didn't have to be continuous, but it did have to register at one point or another.\n\nShe was asleep, naked, because that was how he slept. He was surprised to find he was molded to her, her back to his front, his hand on her belly.\n\nThat wasn't how he had gone to sleep. He slept on his back.\n\nHe put her on her belly and rolled on top of her. He wouldn't speak to her here. She woke up and cried out, immediately beginning to struggle. Bode held himself together, her movements just what he wanted at this moment. His cock was hard and he began rubbing himself on her.\n\n\"Don't, don't again, please--\" she said as he planted his elbow, slipping his hand over her mouth, a deep wave going through his belly, that sinking feeling.\n\nHe spread her legs wide and tilted her hips, getting over her, still under the covers.\n\nHe began rocking his hips, but he didn't enter her. They wouldn't know. His cock was rubbing between her legs, a friction he tried to ignore, his breathing ragged. She seemed to realize what he was doing. He felt her relax.\n\n\"Pretty companion,\" he grunted, thrusting sharply. \"Your tight pussy feels good.\"\n\nHis cock was traveling a path that was getting more slippery, repeatedly wedging between her pussy lips, rubbing. A small shift in his angle and he'd be inside her. A different shift at another angle and he'd also be inside her. Bode released his breath, his head hanging a little.\n\nThe fingers of his other hand came around her and between her legs. He began touching her pussy between thrusts, gentle, although you'd think he was pinching her, the noises she was making behind his hand, his elbow still planted. His cock pulsed. He leaned his head down and smelled her, feeling how wet she was getting. She liked what he was doing with his fingers.\n\nHer hips began to move. Bode clenched his teeth. Lyric had flowered open, her slick all over his cock, and now she was flirting with the angle. He wanted to. He rubbed her instead, keeping his hand steady over her mouth as she came under him, offering herself, jutting, matching her entrance and pulsing hard against the head of his cock.\n\nThat tested his control. He stopped moving, his hips shaking. His fingers left her and he reached instead to where they were meeting, creating a pocket with his hand, trapping his cock against her slippery cunt and thrusting sharply, changing the angle, careful.\n\nIt was a relief, fuck. He didn't want to stop. He thrust more sharply and grunted hard, coming, spilling onto the bed and onto her pussy and thighs and into his hand. His breathing was fast.\n\nHe wiped his hand on the sheets and rolled off of her, pushing her away and throwing the blanket over her in a careless move. On his back, he put his arm over his eyes, closing them, his other hand on his cock. He crooked his leg and sighed, sleepy now.\n\n#\n\nIn the morning, he woke to find himself behind her again, his hand spanning Lyric's belly, his elbow resting on her hip, her head under his chin. Her hand was extended above and in front of her now, Lyric having considerably wandered to his side, although he wondered if he hadn't pulled her there, the hold he had on her.\n\nThe covers were down around her waist, her breasts exposed. Her curls were everywhere, dark against her skin and the white of the pillow. He withdrew from her silently, his eyes lingering, going to the bathroom. He thought he would have exhausted himself, but she looked just as interesting to him this morning as she had last night, Bode waiting to piss.\n\nWhen he came back, she woke. She looked up at her hand. He walked to her, Lyric flinching as he hit the button to release her. She pulled the covers to her chin and sat up. Her face was bruised. Bode gestured. She nodded and dropped the covers, getting up, her hands crossed in front of herself, walking quickly past him to the bathroom. He watched her round ass, his brows going up, the first he'd seen it, her hair everywhere.\n\nBode stripped the bed and tossed the linens into the receptacle. He didn't let domestics into his rooms, so he did his own picking up. A new set of linens would arrive within the hour.\n\nWhen he was ready, he stripped, put her in the shower, and joined her. The shower muffled noise. He reached past her, speaking low. Surveillance was fully active in here, as much as in the bedroom. \"I have pain medication for the bruising,\" he said. \"Take the pill with your food when I give it to you.\"\n\nShe didn't look at him as he used the soap, lathering her warm curves, getting her all over. He washed her hair, his cock thick even before he started and semi-erect by the time he was done, Lyric glancing.\n\nHis eyes roamed over her and then he saw it. He pushed her hair back where it had covered the bruising. The bedroom had been too dark and he hadn't noticed it before. \"Who did this?\" he said, not caring at this moment who heard what. It had certainly not been himself.\n\nShe turned and looked at him, her eyes wide, opening and then closing her mouth.\n\nBode turned her to face her, crowding her, caging her against the shower wall, his mouth tight. \"I am your sponsor. Nobody can retaliate against you for telling me, but if you don't speak now, companion, I will take you down to Interrogation Room One and ask you there.\" Yes, he was erect now, his cock riding her belly.\n\nHer eyes were huge. \"An Achen guard struck me because I was walking too slowly, Enforcer.\"\n\n\"Which one?\" Bode demanded. He could feel her trembling against him, her body slippery.\n\n\"I don't know their names, Enforcer,\" she said, those beautiful eyes talking to him, telling him all about it.\n\nA wave went through him, Bode pressing against her a little, his breathing deeper. \"Describe him,\" Bode said, impassive, his voice so easily falling into that rhythm, the cadences of interrogation, his cock aching between them, her breath catching.\n\nShe heard his tone, responding to it. He could feel her heart pounding. Her eyes went up, trying to access the memory. \"He had brown hair,\" she said, her breath staggering out.\n\n\"Dark or light?\"\n\n\"Lighter, I think?\" she said. \"I'm sorry, Enforcer. It happened so fast. He was on a transport and I didn't look at them after that.\"\n\n\"What else?\" She wasn't being dishonest, although she was afraid he would think so.\n\nShe panicked a little, searching her mind. \"He was carrying a strap in his hand?\" she said. \"I saw him with it before he struck me, and I think that's what he hit me with.\"\n\nCarlile. Bode relaxed and stepped away from her, getting out and drying himself, ignoring her and his cock. She hesitated and then began wringing her hair, which was already curling. She stepped out. He turned to her, startling her, reaching for her with the towel. Drying her body, he looked at her shoulder carefully. It was a deep bruise, her shoulder delicate. He moved her arm. \"Does that hurt?\"\n\n\"No, Enforcer,\" she whispered.\n\nHe touched it lightly and she flinched. No injury to the muscle, but it was painful to the touch. Bode exited the bathroom and went into his bedroom and got dressed. When he came out, she was waiting, standing in the middle of his main room naked, her arms crossed in front of herself, her hair still wet.\n\nAnd, because he couldn't just go and get the fucker and punish him, Bode grabbed her arm on her good side and brought her to stand in front of the monitor. He turned her around, sweeping her hair aside. \"Don't move,\" he told her. He cued up the monitor, giving the code.\n\n\"Enforcer,\" the magistrate's voice said a moment before his face filled the screen. \"Good morning. What can I do for you?\"\n\nBode put his hand on the back of her neck and tilted her head, Lyric compliant. Bode brought her shoulder to the light. \"I didn't do that, Magistrate.\"\n\nTibrus looked her over, his eyes lingering on her ass because she was a fucking beauty there, too, and then they went to the black bruise on her shoulder, radiating out in colors.\n\nThe magistrate looked at Bode, his eyes interested. A perceptive man, and a dangerous man. \"She was not yet your companion, Enforcer.\"\n\n\"She was going to be somebody's companion.\"\n\nThe magistrate's mouth pulled up in a small smile, glancing at her ass again, amused. \"Agreed, Enforcer, and the Guard are given instructions not to have sexual contact or mark the women chosen as candidates. Do you know who did it?\"\n\n\"Carlile,\" Bode said, impassive.\n\nTibrus looked annoyed. \"An idiot, as I imagine you know. I will assume that your information is reliable, since you are the person to whom I would have sent her to find out,\" the magistrate said, finding this even more amusing. Tibrus cut the communication.\n\nBode's eyes lingered on her ass as he left her, stepping to the chute by the door. The light was green. He grasped the metal handle and pulled, the chute jutting into the room. Two meals were there, as well as companion clothing, the computer recognizing his sponsorship. When he removed everything, the box retreated and the light went off.\n\nHe brought breakfast to the table. \"Put that on,\" he said, tossing the dress to her.\n\nShe caught it and held it up. He was looking at one red nipple peaking out from behind her hair. She looked down, seeing it and pulling the dress in front of herself. \"Is there more of it elsewhere, Enforcer?\" she said.\n\nBode laughed softly, surprising himself. He stopped. He liked her way, her open quality, her outspoken intelligence and humor, but the Achen enforcer didn't laugh at his companion's jokes, and Achen companions didn't make them.\n\nIt was a companion dress, white with long trailing ribbons on each side under the arms. He came and took it from her, coming close behind her, his face expressionless again. He fit her with the delicate metal collar, his fingers at her neck, from which the halter fell, the silky material no more than a panel in front and in back.\n\n\"But how does it come together?\" she said, looking to the side.\n\n\"Shut up,\" he said. Bode watched her shrink, her alert manner becoming subdued, quiet. He felt a wave and ignored it, his lips tight as he threaded the long ribbons through the eyelets down one sweet waist and hip, crisscrossing, and then did the other. He stepped back when he was done, walking around her. Her sides were exposed. Her nipples showed in the material. Like she needed all this to tempt him.\n\nHe got close, cupping her breast, feeling the firm jutting weight of it, the sweet form. He rubbed her nipple, looking at her face, Lyric avoiding his eyes. He stood back, his breathing deeper. \"Eat,\" he said.\n\nShe seemed pleased to retreat, going to the table. There was still some food left when she pushed it back. He pushed it toward her again.\n\n\"I'm not used to so m--\" she began.\n\nHis hand shot out, grabbing her arm--not her bad side, not her hurt shoulder--and jerking her toward himself. She cried out, startled. He put the pill in her hand, nothing the cameras could see. \"Finish it,\" he said, releasing her roughly.\n\nLyric sat back, her fists clenched. She put them on her lap. \"Yes, Enforcer.\" She ate the rest, swallowing repeatedly. She put her closed hand over her mouth as if she were trying to keep it down, which she probably was. Taking the pill. She did it well.\n\nHe stood up. \"Don't try to leave the rooms. I'll just track you and then I'll punish you. The light will turn green when your food comes. Eat it all.\"\n\n\"Yes, Enforcer.\"\n\nHe stepped to her. He grabbed her hair, stretching her neck back. Grinning at her, he dipped, kissing her mouth, his hand going to her breast again, feeling the shape of it under the material, his cock responding as it had all morning. She gave a soft pain cry as he pinched her nipple, his cock jumping. Releasing her, he exited, the door locking behind him.\n\n#\n\nWhen Bode arrived at the Enforcer Division, he used the handscan to open the door. He usually only had to come in about once a week, subjects waiting. He got the punishment rod from the wall, opening his slate. The information came up.\n\nThere were five interrogation rooms and three subjects this morning. In Interrogation Room One, he had an Achen who had attacked another Achen citizen and put him in the robotic medical clinic. In Interrogation Room Two, there was an exile, a domestic, accused of stealing food. The exile in Interrogation Room Three was from Tr\u00edafarm, where Lyric had come from, and was accused of disobeying a citizen's directive.\n\nTheir pictures and exile numbers, as well as their crimes and the punishments that had been decided, were listed, the magistrate's scrawl at the bottom of each. Nothing unusual, except for the man in Room Three. He had one of the signals, two breaks in his left eyebrow, that indicated he might be from the Council of Ten.\n\nBode wouldn't know until he got in there, although he doubted it. Exiles weren't usually willing to be tortured just to speak with him.\n\nHe approached Room One when everything was ready. Pushing open the door, he closed it behind himself. The Achen was in restraints on a table, as they all would be, although the Achen man had his pants on, only his chest bare. The exiles would be naked. Bode walked to stand over him.\n\n\"Good morning, Enforcer,\" the Achen greeted him, his voice shaky, trying to smile.\n\nBode had no such difficulties, grinning at him, the Achen's smile withering. \"I don't often get an Achen on my table,\" Bode said.\n\nThe Achen man tried to smile again, laughing weakly as if Bode had made a joke. \"They didn't tell me what you were going to d--\" Bode took the punishment rod from its holster and the Achen stopped, swallowing, disbelief in his gaze. \"Surely they wouldn't allow you to use that on a citizen.\"\n\n\"The magistrate wants you to remember.\"\n\n\"I won't do it again,\" the man said. \"P-please, I won't. Let me talk to the magistrate. I'm a citizen.\"\n\n\"I'm just the enforcer,\" Bode said.\n\n\"Please, let me talk to him...,\" the Achen said, continuing on.\n\nBode had gone still, looking down at the Achen man with a fixed stare, unmoving, impassive. Bode did this with every subject, always for exactly twenty seconds.\n\nThe Achen had the typical response. At first, he didn't notice. Then, as Bode stayed still, the Achen seemed to realize, staring back at him. His wheedling got more stringent, more adamant, his demands to see the magistrate louder, his eyes on Bode's face. And, like the rest, after about ten seconds or so, the Achen went quiet, looking anywhere else but at Bode, his eyes dilated with fear.\n\n\"Why do you do it?\" the magistrate had asked Bode once.\n\n\"It heightens their fear,\" Bode had answered.\n\n\"But what do you gain from it, Enforcer?\"\n\nBode had replied, impassive. \"A person who's afraid feels more pain.\"\n\nWhen the twenty seconds were up, Bode triggered the rod. The red numbers came up on the wall. It was a light sentence.\n\n\"No, wait,\" the Achen said, renewing his pleas, as if Bode was going to release him just because he said these things. Often as not, Bode figured they weren't even talking to him. They were talking to their fate. \"Don't. Please! Wait!\"\n\n\"Run clock,\" Bode said.\n\nThe man's protests were interrupted when Bode touched the tip of the rod to his shoulder, the man yelling in surprise and then screaming. He tried to arch as Bode ran it over his body, his belly and chest. The clock stopped and Bode lifted it. The man still cried out, lower now, tears on his face.\n\n\"I suggest you don't do it again,\" Bode said. \"That was only eight seconds on a medium setting. The punishment for a second offense by an Achen citizen is twenty seconds at a higher setting. They will come to release you in about an hour.\"\n\n\"I won't. I won't do it again,\" the Achen said, still crying.\n\nBode turned to the door, putting the rod away. He exited, bringing his slate, sending the footage of the session from Room One to archive under the subject's citizen number.\n\nHe went into the second room. The domestic turned and looked at him, breathing fast. She was naked. This wasn't an Achen citizen. Her punishment wouldn't be so light.\n\n\"Please, Enforcer,\" she said, trying to hold it together. \"I didn't steal. I swear that I didn't.\"\n\nBode came and stood over her, his face impassive. \"It's not up to me,\" he said. \"I just carry out your sentence.\"\n\nIt was more than likely that she was telling the truth, that she had been sent for punishment by an Achen citizen for reasons that had nothing to do with stealing. She was too upset for him to try speaking with her. She would have to endure it. Bode had an interrogation later that day as well, an exile from En\u00e9farm. The magistrate would be viewing it remotely.\n\nBy the end of the twenty seconds, the woman was afraid, yes. \"It has an end,\" he said softly before he started, nothing the mics would pick up. \"Think about that.\"\n\nHer punishment was thirty seconds, standard for an exile. It was supposed to be a medium setting, but Bode thumbed it lower. She was scared enough to react as if it were higher. She was begging before the rod touched her. Exiles rarely stole anything. There was nowhere to bring it. Whenever they were accused of stealing, it was generally understood that an Achen wanted the exile punished for whatever reason.\n\nEven on a lower setting, it would be painful. The rod ran delicately over her body, her legs, her feet. Her screams reached that frantic pitch. Anyone waiting for him to come and enforce heard the screams of those who went before them, the sounds pumped into each of the five rooms. Bode did it for the allotted time.\n\nHe lifted it when the time was done. Stepping back, he put the rod in its holster. \"You will be released in about an hour,\" he said to the weeping woman.\n\nAn Achen citizen had requested viewing rights. Bode sent the footage to archive under the exile's sponsor number. He made the record of the punishment available to the Achen for three cycles, after which it would be sent to archive.\n\nBode walked into the third room, closing the door behind himself. The man turned and looked at him, seeming surprised, his eyes running over Bode. The exile was older, naked, his limbs spread. Refusal of a direct order from a citizen carried a heavy penalty.\n\nBode's eyes went to the man's right hand. The exile tapped his thumb against his middle finger three times, almost imperceptible, but clear to Bode, who was surprised in turn. The exile was from the council.\n\nWalking to the table, Bode reached into his pocket, feeling for the switch. Once he flipped it, anyone reviewed the feed would see Bode simply standing over the table, blocking the view of the person in it, not speaking, for twenty seconds, just as he always did.\n\nHe flipped the switch. \"Speak quickly,\" Bode said. \"There's not much time.\"\n\n\"The interrogation,\" the exile said. \"Is it death? Can you get Niter out, if it is?\"\n\n\"Not death. Pain. The magistrate will witness. He'll have to endure it, but he'll live.\" Bode stepped back, finding his mark on the floor and reaching for the switch.\n\n\"Wait,\" the exile said. \"My daughter. Dark curly hair, a limp? She was taken for a companion during the reaping games. They said she was chosen by the Achen enforcer. That's you?\"\n\n\"Lyric,\" Bode confirmed. \"Yes.\"\n\n\"She's safe, then?\" the exile said. \"You won't hurt her? You won't--\"\n\n\"She's a companion,\" Bode said, interrupting him. \"They monitor the rooms. I can't protect her from that.\"",
        "The man's face became bitter. He turned his head and faced forward. \"Do it then, you bastard.\"\n\nBode flipped the switch. He never discussed things for more than twenty seconds. He grinned at the older man, who glared up at him. Bode pulled out the rod. \"Do you remember the screams you just heard?\"\n\n\"How could I forget?\" the exile said, his lip curling.\n\nBode leaned in close, his voice low. \"Could you fake them and make it sound real? Blink twice if you agree.\"\n\nHe pulled back. The exile stared at him, Bode keeping his face impassive.\n\n\"Run clock,\" Bode said, triggering the rod, the red numbers of the countdown showing on the wall, Bode thumbing it to a high setting, bringing it down and the older man blinked twice.\n\nBode thumbed the controls, the lowest setting, which was merely uncomfortable.\n\nLyric's father did well, Bode running it over the places that were a part of his punishment. When the time was up, Lyric's father was panting and groaning, still crying out a little as the others had done.\n\nBode put the punishment rod away, picking up his slate. The exile watched him as Bode archived the footage under the exile's farm designation. \"They will release you in about an hour.\" Bode said before he went through the door, closing it behind himself.\n\n#\n\nBode went into the charnel room, which served as a supply room and also a crematorium, the huge oven squatting there. He inventoried. A couple of hours later, he received an alert. The magistrate's face came up.\n\n\"As you requested, Enforcer,\" the magistrate said. \"I have issued the order. He will be on your table shortly.\"\n\n\"Thank you, Magistrate,\" Bode said, putting things away.\n\n\"He is a stupid man,\" the magistrate continued, \"but remember that he is still a citizen, and a member of the guard. Stick to the punishment I have detailed while he's at the division.\" With that, Tibrus cut the communication.\n\nBode would be welcome to pursue the man privately, outside of the Enforcer Division, his father was saying without saying it outright, throwing the man to him. Bode grinned.\n\nWalking out into the main room of the Enforcer's Division, Bode waited for his subject to be delivered. In a short time, two of his friends were bringing the Achen guard into the Enforcer Division. Carlile was walking lightly, the strap he always carried hanging from his wrist, all of them talking. The Achen Guard were the elite of the city.\n\nThey all slowed when they saw Bode waiting. The guard feared Bode, and for good reason. They stopped.\n\n\"This is just a mistake, I'm sure, Enforcer,\" Carlile said, his voice radiating confidence, although he was scared under it. \"I haven't done anything. If you would give me a moment to speak to the magistrate.\"\n\n\"There is no mistake,\" Bode said to Carlile, gesturing at the strap. \"You marked my companion. The magistrate has given you to me. Put him in Interrogation Room One.\"\n\nCarlile looked down at the strap he carried like he'd never seen it before, like it had just arrived there out of the air. \"I didn't. I didn't hurt her. I didn't touch her. The exile is lying.\" As if he could feel the cold of their withdrawal from him, Carlile looked to either side of himself. \"Bran,\" he said. \"You're not seriously going to make me go in there--\" Carlile went quiet, seeming shocked when this friends took his arms, Bode grinning at him.\n\nThey brought him in, Carlile beginning to resist. When he saw the metal table and restraints, he panicked, yelling. Bode watched as the two men stripped his upper body and wrestled him onto the table, Carlile protesting, the two men's faces set in determination and disgust. All of them except Bode were panting by the time Carlile was secured, still protesting. They gave Carlile a pitying look before they retreated, leaving.\n\nWalking to the Achen, Bode pulled the strap off of Carlile's wrist, the Achen allowing him to do it. Bode looked at it, a large flat and heavy strap, stiff in the center and leather on the outside. Even a light blow would be painful.\n\nBode came to stand over him, leaning in, Carlile's eyes wide. Bode spoke softly. \"Don't think that when I'm done, it's over,\" he told the Achen. \"This is nothing. It won't be right away, but I'm going to find you alone somewhere and really hurt you, Carlile, and I'm going to do it with this strap. Go ahead and say something if you don't remember whose son I am and whose signature put you on my table.\"\n\nThe Achen had gone rigid, his eyes staring. Bode's threat wasn't idle, and Carlile knew it. The Achen Guard had sometimes tormented him as a boy, and Bode's sense of personal retaliation was active and well developed, honed to a sharp edge. He didn't care if they were the same guards or not. Bode didn't forget, not ever. He hunted the guard when he was bored. It was why they feared him.\n\nHis father knew about it, of course, and used Bode to intimidate and threaten and control them, sometimes sending Bode in the direction of a particular Achen. In return, the magistrate allowed Bode his small pleasures, his private talks with guards he chose, Bode careful not to inflict permanent damage. And the Achen guard couldn't come back at him as a group. He was the magistrate's son.\n\nCarlile would stick close to the others for a time, but that wouldn't matter. Bode could wait.\n\nThe numbers came up, Carlile's eyes drawn to them. Twenty seconds on a medium setting. It was a heavier sentence than Bode had expected, his father being generous, knowing how much it would please Bode. In this way, Bode and his father understood each other well and traded favors and got along just fine.\n\nBode grinned at the Achen guard, who froze, staring at the numbers.\n\n\"That's...no,\" Carlile said as Bode stood over him, staring at him, beginning his twenty seconds of stillness. By the end of it, Carlile was silent, his chest stuttering with his breathing, looking fixedly at the ceiling, small noises coming from his throat.\n\nBode raised the rod and triggered it and then he heard it, the fast pattering drips. Bode made a face. He hated the ones who pissed themselves. \"Run clock,\" he said, bringing the rod down, that initial yelling, the shock of it, and then the sweet sound of the Achen guard's screams. Bode drank them in.\n\nWhen Bode was done, Carlile was still crying out, his face covered with tears and snot and spit. Bode raised his slate, inputting a code.\n\nA face appeared. \"Central,\" the Achen said. He saw Bode's face and sat up straighter. \"Enforcer.\"\n\n\"I have a mess in Interrogation Room One.\"\n\n\"We'll send a domestic, Enforcer,\" the Achen man replied, his face neutral but his lips pulled up from his teeth. The guy from Central would spend the next minute-or-so wondering about the nature of that mess.\n\nBode looked at Carlile, who was still gibbering. \"They will come to release you in about an hour,\" Bode said.\n\n#\n\nBode performed the interrogation. Pain always had a scent to him, although he knew it was just fear-sweat. There was nothing Bode could do, the magistrate watching. The exile endured the agony, giving the information that the magistrate already knew--which was that there was no information to get. The harvest had been short because of an attack by insects, which had been reported. The purpose of the interrogation was to intimidate, not to actually extract information.\n\nEven an interrogation that was really a punishment was still different than just a punishment. An interrogation was active. One had to speak to one's subject, to pay attention, to improvise and interact. Bode looked up when the exile was broken, weeping and shuddering. He grinned at the camera. \"He's not lying.\"\n\n\"Then I think we are finished, Enforcer,\" the magistrate said through the overhead speaker and from the comfort of his rooms. \"It's always a pleasure to watch you work.\"\n\n#\n\nIt was almost dark before Bode came back to his rooms. He went into his office and did paperwork, walking through the house as if she didn't exist, preparing for the next day. He went back into his office and reviewed reports on surveillance, an analysis of keywords. When he was done, he leaned back in the chair, rubbing his eyes.\n\nHe didn't speak to her when he came out. He got himself a drink. Lyric was sitting in the chair by the doors leading onto the balcony. She had one of his print books on her lap, reading, her legs tucked under her, the position showing a creamy hip, her nipples jutting in the silky fabric. Bode sat in the other chair, turning toward her and leaning back.\n\nShe glanced up at him once and then looked down at the book again. Time went by. He watched her, his breathing even and deep. She didn't turn the page.\n\n#\n\nBode woke up in the middle of the night, molded to her, his hand on her belly, her curly head under his chin. His eyes opened, aware of her against him, of her smell and the feel of her. He didn't move for a time. He closed his eyes.\n\n#\n\nUsually it would be about a week before he was called back to the Enforcer Division. But only a day later, he was brought in to punish a companion, her Achen sponsor demanding it be done immediately and the magistrate inclined to indulge it. She was a pretty exile, her legs spread. Bode watched the tip as he brought the rod over her round, firm breast to her nipple, touching lightly, a part of her punishment, and then the other, the buds rising to taut red points. Her sponsor had requested a record of it.\n\nWhen it was time, he trailed up her inner thigh as she thrashed, listening to her begging. His breathing was heavy. He had always had difficulty disengaging from these, pulling back, so he had stopped fighting it. He slowly worked his way in, moving the rod up her inner thighs, and then to her naked cunt. He touched her clitoris, stroking, so many nerves. This was also specified in her punishment.\n\nThe woman shook with it, her face contorted with pain, her screeches deafening. He knew how to do it, had figured it all out a long time ago, his first sex-feelings. She stopped long enough to hitch and then she came, the nerves overwrought and confused, her pussy pulsing against the rod as he held it a breath away, a wave going through him. He ignored the tension in his gut, his cock thick, his eyes on what he was doing between her legs.\n\nIt was late afternoon before he got back to his rooms. Bode opened the door, moving quietly. She wasn't in the main rooms. Going to the sideboard, he got a drink, clamping down on his desires. He would wait, his work all bound up in his arousal. He heard the running water and turned his head and saw the open door, his drink stilling on the way to his mouth.\n\nLyric was sitting in the bathtub in hot water, soapy tits and all. She hadn't seen him yet. Reaching forward, she turned off the water. He was guessing that whoever was monitoring his rooms right now had his eyes glued to the screen and his hand down his pants. She was far too beautiful. No way would they believe he would pass that up. And no way was he going to, either.\n\nBode set down his drink and walked straight to the bathroom and through the open door. He was already hard, his belly sinking, aroused for days. He grinned down at her. She looked up and straightened, her arms crossing, the black thin metal marchettes on her wrists wet, her eyes wide. He reached down and hauled her up out of the bath, not on her bad side, careful of her foot.\n\nHe brought her to the sink facing the mirror, putting her side-on to the camera, giving them a pretty angle of a beautiful, wet body, soap suds still clinging to her hip and slowly traveling down her leg. He slammed her wrists to the wall. They stuck there. Lyric was staring into the mirror, her wrists held to the wall in front of her, her elbows planted, her ass back.\n\nShe tugged, his eyes going to her breasts in the mirror when they jiggled. She saw it and stopped tugging.\n\n\"Time to fuck,\" he said. \"Watch yourself in the mirror or I'll hurt you. I've been hurting people all day. It's all the same to me.\" He smacked her bottom, his cock jumping, and she cried out, shocked. He surged. She hadn't been spanked before, or even heard of such a thing, he imagined. He was hard already.\n\nHe grinned and did it again, watching her face, seeing everything she felt, another deep surge. \"Look at your nipples.\"\n\nHer eyes shifted, her breathing fast. His hands came under her arms, touching her tits, still soapy, slippery and firm heat, rolling the buds. He tugged and teased, watching her face. She began to flush, her lips parting, panting lightly. Her eyes went to his face again.\n\nHe grinned at her. \"Don't look away,\" he said, smacking straight down on her nipple. When she cried out, he did it more, one tit and then the other. He spread her legs, backing her off. \"Look in your own eyes.\"\n\nShe did what he said, her head up, her face close to the mirror. Her eyes rose to meet her own in the mirror. Her curly hair came down from the coil at the back of her head where she'd wound it to keep it from the water, slowly unraveling, sticking now to her shoulders and back, which were still wet. She smelled like soap and like her.\n\nHe put his fingers between her legs behind her, also still wet, the remaining soap a help, for sure. He rubbed, pressing, looking down at the pink pouch between her legs, her round ass, his gut tight. His other hand went to her nipples, tugging downward sharply.\n\nBode touched her, looking for what she liked, for what made her go still to feel it. There it was, long strokes down and up her slit, just inside the outer lips. That was good to know. His hand came around front for a different angle and his finger went into her, and then another, tight, his thumb wedging against her clit. That's where he wanted it, working her.\n\nHe felt it. That wasn't the soap. She was getting slick. Lyric looked away from her own eyes.\n\n\"If you look away again, I'm going to bite your nipples until they're sore,\" he said, his breathing ragged.\n\nHe would like that, too. Her eyes came up to his, wide, and she pulsed on his hand, once strong and then little ones. Her eyes went to her own in the mirror again. She had just gotten so much more slick. His fingers were moving fast now, Lyric staring at the mirror, not breaking her own gaze, panting. She began jutting, her thighs trembling.\n\n\"Watch,\" he said. He was excited, the images in his head violent.\n\nHer lips parted, her eyes heavy. She didn't look away from herself. Making a helpless sound, she rubbed herself on his fingers, ready for him, wanting.\n\n\"You are beautiful,\" he breathed, his voice low, his lips barely moving. He withdrew his hand, opening his pants.\n\nShe was breathing fast with small breaks in the exhales, small shudders in her hips. He pulled his cock out, no patience for anything else. There she was. Lining himself up, he pressed into her tightness, opening her fast. He bottomed out, a series of sharp thrusts. She cried out again, shaking her head, her elbows braced against the mirror.\n\nHis breath released. \"Look at me,\" he said. He met her eyes in the mirror, holding them. He took her hips, using her, varying it for his own pleasure, still staring back at her. She was tight. He gave her long strokes, deep ones that made her curl up, a series of thrusts that were fast and sharp. She winced and hitched through it, holding his gaze for as long as she could. She finally looked away.\n\nHe spanked her again, which brought his pleasure faster. When he was ready, he got very close to her and under her, his arms wrapping around her, his hips thrusting. He grunted into her ear, leaning to lick it, nipping, excited. He had left her alone as much as he could. He could fuck her every day and night. Her cunt was wet and hot, tight. He brought his hand between her legs and tugged, pinching and rubbing.\n\nHe felt it in the tension of her body, in the way she was beginning to meet him. Lyric cried out high, squirming beautifully all over his cock as he hammered into her. \"Pretty companion,\" he grunted. He put his fingers between her legs, long strokes in her slick just inside the lips. That did it.\n\nShe arched completely and climaxed. She spread, yelling out her pleasure, her round ass tilting, offering her sex for him to get deeper. He pumped into her a few more times and began to come, wrapped around her. She couldn't move, her voice high with the pleasure, her pussy convulsing on him. He thrust, crying out, the release of it taking him. He finally finished in her.\n\nBode was panting. He released her and pulled out of her in the same motion, giving her beautiful ass, red now, a last smack. He hit the button on the wall, releasing her, her hands coming down, staggering and catching herself on the sink. He left the bathroom, doing up his pants.\n\nHe glanced through the open door as she got back into the bath. Her eyes met his and she reached and pushed the door closed. He went into his office.\n\n#\n\nTwo days later, he brought her into his office.\n\nWhen he sat in his chair, she moved across the room from him, wary, as far away as possible. \"What do you want?\" she said.\n\nWhat did he want? He wanted to fuck her, wanted to put her on her hands and knees on the floor of his office and have her that way. \"I saw your father,\" he said.\n\nShe stared. \"What? My father? Where?\"\n\n\"On my table. He'd come to--\"\n\nHe was unprepared for Lyric's reaction. She cried out and flew at him, her fist striking at his face, his chest. Bode pulled his head back sharply and rose, turning her, getting behind her, his hand going over her mouth. He waited until she had exhausted herself and could hear him. She was still heaving for breath.\n\nHe spoke in her ear. \"He came looking for news of you. He got himself put there on purpose. I pretended to hurt him and then I released him.\"\n\nShe went still in his arms and then she went limp. He released his hold over her mouth. She began crying. He turned her around, holding her.\n\nShe relaxed, his hand stroking her hair. \"You didn't hurt him?\" she said into his shirt.\n\n\"He's a good actor,\" Bode replied. \"I wanted to tell you that I had spoken with him.\"\n\nShe drew back, looking up, her face wobbling, the tears there again. He knew what she was thinking. She had no way to know if he was telling the truth. Bode could have executed her father this afternoon for all she knew.\n\n\"All right,\" she said. Her eyes were swollen.\n\n\"Go to bed, dahlia. I'll be in soon. I won't trouble you tonight or tomorrow, but please act like you fear it.\"\n\n#\n\nOver the following weeks, a routine developed. Bode worked from home in his office most days, as he always had, ignoring her until he couldn't anymore, avoiding thinking about her until he couldn't stop himself. Walking out, he would take her on his wall, his face close to hers, his hips jerking, talking to her, all of it pleasure.\n\nWhen he could, he brought her into his office.\n\n\"I brought you more books,\" he said, pulling them out from under his desk. She was wary again, hesitating and then coming to look at them when he gestured. \"I'll put them on the third bookshelf from the door.\"\n\n\"Okay,\" she said, not meeting his eyes.\n\n\"I also wanted to show you this,\" he said, sitting and keying up his computer, putting in the code. The picture came up, at the Achen gates, which were monitored. Bode had gone through hours of footage\n\n\"That's my father,\" she said, coming closer.\n\n\"Yes. See the time stamp, dahlia? He's safe.\"\n\nHer eyes went to the date and then to her father, his face past another exile's. Her face wobbled, looking at him. She nodded, taking a deep breath, her exhale shaky.\n\nBode pulled a piece of paper out and stood up, gesturing. She eyed him and got in his chair. He set a writing implement in front of her.\n\n\"Don't give your name. Don't give his. You have...\" he said, looking at the display, \"six minutes.\"\n\n\"You can get it to him?\" she said, her eyes wide.",
        "\"Yes, dahlia. I won't read it, but please be careful not to say anything that would get either of us killed if it were found. I'll tell the person I give it to that your father can return a letter. He'll have the same instructions.\"\n\n#\n\nA week later, he brought her into the office and sat in his chair, going into his drawer and handing her the letter. She took it and walked to sit, not even noticing when he stood up to give her the chair. He watched her face as she opened and read it. She swiped at her cheeks. \"He says to thank you.\"\n\n\"He doesn't say--\" Bode said.\n\n\"No,\" she shook her head. \"He understands.\"\n\n\"Give it a week and you can reply,\" Bode said.\n\n#\n\nBode tried to stay away from her when he had to go into the Enforcer Division, all of it getting mixed up in his head, but there were times he didn't, too.\n\nWhen Bode walked back into his rooms from the enforcement division in the third week, he didn't even pretend, his cock already thick, surges in his belly. Lyric was sitting at the window, looking out at the courtyard. She turned her head and then scrambled up when he came for her.\n\nShe cried out, evading him. Bode laughed, catching her around the waist. She swung, connecting, a solid crack on his cheek that turned his head.\n\nBode laughed again, his cheek stinging, getting hold of her and putting her over his knee, pushing her dress up, that ripe and round bottom, still a little red because he liked punishing her this way. He spanked her. She had an especially beautiful, round and tight ass that jiggled, his eyes on her naked pussy.\n\nShe started with enraged yelling that moved to yelps of pain and then turned into tears. Bode finally stopped, his cock hard under her. He picked her up and put her on the wall, her arms and legs straight and spread wide, leaving her there. He ignored her protests, going to his slate and sitting, making notes. Her protests finally turned to rage and then to yelling.\n\nWhen that happened, he looked up at her. She stopped, going quiet. When he got up, Lyric shook her head.\n\nHe grinned at her, approaching, her eyes dropping to his pants where he was hard, tenting the fabric. She was at the perfect height, the perfect angle. He looked at her tits and leaned, his hands landing on the wall on either side of her, taking a nipple into his mouth. He went back and forth between them until they were red and swollen and she was flushed, almost panting.\n\nBode came up and grabbed her hair so she couldn't move her head. He kissed her roughly, cupping her pussy with his other hand, exploring with his fingers. She was wet, yes. He stroked through her slick, drawing back and holding her eyes, touching her clitoris, delicate strokes. He brought her slick up, polishing, his touch still light. She cried out, her voice almost inaudible, pulsing against his fingers.\n\n\"You sure do like to fuck, pretty companion,\" he observed, his breathing heavy. \"I like it, too.\"\n\n\"No,\" she said, denying it.\n\nHe stepped back and hit the button, releasing her. He caught her as she cried out, turning her in the same motion, flipping her around to face the wall, lifting her and slamming one wrist and then the other there. She hung there crying out as he got one ankle, bending her knee, and then the other.\n\nHer tits were pressed to the wall, face-on to it, her knees under her, her legs spread. He backed up, looking at her ass, so tempted.\n\nHer head was turned to the side, still yelling, her bottom still red. His fingers went between her legs from behind, stroking. She keened, beginning to cry. His cock was jumping in his pants as he angled his hand, tapping on her clit with his middle finger. Lyric jerked. She liked that. He tapped more sharply, her clitoris a hard slick nub, slowly pushing his thumb into her cunt.\n\n\"Stop!\" she cried. \"Please, stop.\"\n\n\"That's it, pretty companion,\" he said, a wave going through him, feeling her swelling and twitching under his fingers. \"Come hard for me. That feels good, doesn't it?\"\n\nShe gave a cry and strained against his hand. He stroked her clit steadily, making it last, watching her pussy convulse, her thighs trembling with her pleasure. He didn't stop when she was done, his strokes still steady and firm as her hips jerked, trying to escape.\n\n\"Don't,\" she said.\n\nBode was breathing heavily. He pulled the pants down just enough, his cock heavy in his hand. He ran his fingers through her slick repeatedly, fingering her, pulling his fingers back to his cock, Lyric crying out, sensitive, every time. When he had what he wanted, he began jerking off behind her, working himself, his eyes on her ass. His big hand came and spanked her, a series of cracks.\n\nThat feeling came, running up his spine, the point of no return. He brought himself to her, thrusting hard into her tight pussy. Getting under her, he pumped his hips. She was crying out, her eyes squeezed tight. It went on, the sensations rising, and then it was on him, his cries of pleasure in the room, her body jerking with his thrusts.\n\nHe stilled, panting, her warmth against him and all around his cock buried in her. He let his forehead rest on her for a moment like he shouldn't and then pulled out of her. He dressed himself and then slammed his hand on the release and caught her. Her struggles were weaker as he brought her to the bathroom, pushing her through and closing the door.\n\nWhen she came out, he grabbed her arm and brought her into his office. He'd put one of his shirts in here. He got it, reaching out to put it on her.\n\n\"Don't touch me,\" Lyric said sharply, slapping at his hand. She snatched the shirt when Bode handed it to her.\n\nHe watched her put it on, her movements jerky, pulling her hair through. \"You didn't give me your phrase,\" he said.\n\n\"Do you have to be so rough?\"\n\n\"I should be rougher,\" he said under his breath, stepping closer. He knew it was true. He should be hurting her so much more, so much worse.\n\nHer hair was soft under his hand when he touched it, black silky springy curls. He bent and kissed her, his hand going to her cheek, cupping it. His gut was tight as he pulled her even closer, keeping it gentle, his hand flat on her back under the shirt, her skin soft. He ran his fingertips down the sweet arc of her spine, feeling her shiver. She stayed still for it, enduring him. He straightened, his heart thudding.\n\nHe hadn't meant to do that. He released her, breathing, stepping away. Turning, he sat in his chair, picking up his slate. He could not lose clarity with her, that picture he held in his head of where all the pieces belonged and what roles they played. \"We have to get back out there,\" he said, \"but the day after tomorrow, we'll go outside. I have to do something in the Achen Square, and you're required to be there. I'll try to find a way for us to talk, after. Do you want to write to your father?\"\n\n\"Yes,\" she said.\n\nHe got the paper out, going to the other side of the office and getting his slate, pretending to look at it, giving her the privacy that he could, seeing her peer at him and then settle in to write."
    ],
    "authorname": "semiosis50",
    "tags": [
        "noncon",
        "maledom",
        "spanking",
        "sci-fi",
        "bdsm"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-achen-enforcer-ch-02"
}