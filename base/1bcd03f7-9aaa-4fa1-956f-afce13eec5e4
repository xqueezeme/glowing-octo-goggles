{
    "title": "Maleficent",
    "pages": [
        "\"OK, guys, listen up,\" announced Justin, the president of the Sigma Omicron Sigma fraternity. \"Halloween's just a few weeks away and we, fine brothers, will stun the university Greek party like no one else.\"\n\n\"Oh? What's up?\" asked one of the first-year members.\n\n\"Our fine service fraternity will be the one to win the costume prize for organizations. And we will donate our winnings to Toys for Tots this Christmas. So, to do that, we gotta think big, epic even. Any ideas?\"\n\n\"We could go as Star Trek characters.\"\n\n\"Or Star Wars!\"\n\n\"Let's go retro. How about characters from Blazing Saddles or Young Frankenstein?\"\n\nOver the next few minutes several other ideas were tossed out and discussed. Then Travis spoke up, \"Guys, those are so boring. We have to think big, really big, and unique.\"\n\n\"Got an idea, Travis?\" asked Justin.\n\n\"Well, everything so far has been OK, but not epic. When I hear the word 'epic,' I think about old movies, you know, like Ben Hur or something.\"\n\n\"Yeah,\" said another, \"We should look into some of the old movies, you know, the 'Cast of Thousands' type of movie.\"\n\n\"Alright, men, your assignment is to research old epic movies and we come back tomorrow at seven and kick it around. Let's go eat.\"\n\nThe next night there was a subtle buzz of excitement among the members. Obviously, Travis had hit on a good idea. They settled down and Justin turned to Travis and said, \"OK, Trav, you started this idea, what cha got?\"\n\n\"Uh, well, uh,\" said the obviously nervous sophmore, \"How about we act like old Egyptians. You know, the pharaohs and stuff. Like in Cleopatra.\"\n\n\"Yeah, I like it,\" responded Justin to the murmurs of assent among the other members. \"One of us will be the pharaoh and the rest can be various aides and slaves.\"\n\n\"I'll be the pharaoh,\" shouted several at once.\n\n\"Nope, as your elected leader, I get to decide who is pharaoh, and I hereby declare the president of the fraternity must be it,\" he announced to the laughter and boos from the members.\n\nThey kicked around a few ideas how to make the costumes of the various people before Travis spoke up once more. \"Guys, I just thought of something. We should have the pharaoh get carried in on a litter.\"\n\n\"A what?\"\n\n\"You know, a litter. He'll have a chair strapped to two long poles and four of us will carry him in on our shoulders, like slaves did in the old days.\"\n\nThere was sudden enthusiasm for this idea as several members agreed. Justin spoke up, \"Travis, your idea. Who should do the carrying?\"\n\n\"Well, they gotta have a little strength. Since you weigh less than two hundred pounds, I'm guessing, then four would need to carry less than fifty each on their shoulders. Should be manageable since the chair and poles won't weigh that much.\"\n\n\"Alright, I need volunteers. Anyone who can handle fifty pounds should stand right up.\"\n\nAfter some hemming and hawing, three volunteers came forward. \"Any more? Travis, it was your idea. Can you do it?\"\n\n\"Well, yeah. I may be skinny, but I'm a rock climber and swimmer so I've got some strength, I guess.\"\n\n\"OK, so it's settled. Now let's do some research on costumes and meet back here again tomorrow.\"\n\nOn the next night they worked together to figure out what other roles people could play. They all agreed the four litter-bearers would be dressed like slaves. They'd have loose, white garments around their waists and thighs but otherwise would be bare. They'd have fake whip marks across their backs. The pharaoh's costume would be the most ornate and the other costumes would be designed with their roles in mind.\n\n\"Hey, we need some female dancers, you know, like with veils and such,\" said one member.\n\n\"Actually, I was looking it up on Wiki and YouTube,\" said Travis, \"The veil thing was much later and in Arab times. The ancient Egyptian women would dance wearing long, white tunics with bare arms. You could practically see through the cloth. And they'd wear nothing underneath.\"\n\n\"So, any of your girlfriends willing to volunteer?\" laughed Justin.\n\n\"I think mine would,\" answered Aaron, \"She likes to show off. And maybe she can get a friend to go along with her.\"\n\n\"OK, you ask her and emphasize we'll pay for the costume. Everyone, we've got a great idea, thanks to Travis. We've got two weeks, so get cracking on your costumes. Oh, and by the way, don't tell anyone. Aaron, swear the girls to secrecy. It will be so much better if it's a surprise.\"\n\nBack in his room Travis suddenly got nervous. He was a math and computer science 'nerd' and wasn't used to being the center of attention. He was actually fairly shy but here he'd be wearing hardly anything but a small garment around his waist. \"I've got to get over it,\" he thought to himself. \"If I don't, I'll never find a girl. Maybe if I can pull it off, I'll meet someone nice.\"\n\nOver the next week all the members worked on their costumes. The four slaves used the same pattern and the costumes were easy to make. They fashioned a litter with a simple chair lashed to two eight-foot garden poles. They practiced lifting it until they could do so without dropping the pharaoh. Aaron's girlfriend and another female student promised to be dancers and made long tunics out of gauzy thin, white material. Aaron told them they were 'sexy as hell' as they practiced their dancing. \n\nTwo days before the party they assembled in an old gym and practiced how they would enter the party, how the dancers would behave and how the other members would present themselves. Travis had to agree with Aaron the two girls were extremely sexy in their costumes but when he tried to talk with the one girl, he got embarrassed looking at her barely concealed breasts and couldn't say much.\n\n\"Dammit,\" he thought to himself, \"She's pretty and sexy and when I'm with someone like that, I clam up.\" He promised himself he would try to do better at the party.\n\nThe weather Halloween night was perfect. A late Indian Summer lingered and the temperature was quite mild and all the Egyptians were perfectly comfortable in their costumes. They walked quietly as a group over to the large frat house where the party was being held. They could hear the music from the street and there was a fairly large crowd assembled outside the door.\n\n\"Hold up here, Guys. Let's get ready and approach the building with all the bells and whistles.\" The lead guys acted like guards. Behind them were two more who pretended to sweep the path to the door. Next came Travis and the three other litter bearers. They had hoisted up a King Tut-like pharaoh onto the litter and beside them were two more slaves who waved palm fronds on sticks to \"cool\" the pharaoh. Behind them were the two dancers and finally the rest of the frat guys wearing various costumes of tradesmen and soldiers.\n\nThe crowd was stunned into silence as they turned to see the approaching group.\n\n\"All hail the king,\" shouted out one of the lead guards.\n\n\"All hail the king,\" shouted the rest of the group in response.\n\n\"Make way for the king.\"\n\n\"Make way for the king.\"\n\n\"People of Egypt, I come in peace,\" shouted Justin.\n\n\"We come in peace,\" responded the entire group.\n\n\"Our journey has been long and we desire to stay with you humble peons until the morn,\" shouted Justin.\n\nSomeone in the crowd took up the theme and responded, \"Oh, King, we welcome you and your procession. We have libations for all of you.\"\n\n\"This will be good. May Ra shine on you and make your fields fertile,\" he responded. \"Slaves,\" he addressed the four litter-bearers, \"I shall proceed on foot. Lower me to the mortal earth.\" Travis and his companions slowly lowered the litter and allowed Justin to get up and walk to the door. He turned around and addressed the crowd, \"The King of Egypt wishes you and yours a wonderful night of partying and dancing.\" The two female dancers moved forward and gyrated sinuously between him and the crowd and to the applause of all. The frat members turned to enter the building to the whoops and applause of everyone.\n\n\"A success!\" thought Travis to himself. He was particularly proud it was his idea and all the frat members and the two girls played their parts perfectly. \"I'm sure we'll win the group prize,\" he thought.\n\nOnce inside his sudden burst of confidence seemed to melt away. There were dozens of fabulous looking girls, each looking better than the next. There were nurses with short, skimpy dresses displaying plunging necklines. A few fake prostitutes with torn fishnet nylons stood off to one side. Two go-go dancers with micro-small hot pants and bikini tops danced up on a raised platform next to the DJ. A few fake cheerleaders with micro skirts were in the crowd as were a couple of princesses who were wearing long gowns with necklines plunging down to the waist.\n\nOne of the princesses came up to him and said, \"My, you slaves are pretty ripped,\" as she felt his biceps. Travis was thin but, due to his climbing and swimming, he had definite muscles that clearly appealed to the girl.\n\n\"Uh, thanks, I guess,\" was all he could respond. He was nervous and had to fight to keep his eyes up from her chest. \n\n\"You work out?\"\n\n\"Yeah,\" he answered.\n\n\"Don't talk too much, do ya?\"\n\n\"Uh, I guess not.\"\n\nClearly, he was unable to engage in conversation with such a beautiful and half naked girl so she turned away from him with a tiny sniff and headed for the bar.\n\n\"Shit, why can't I even talk? She was nice, but...\"\n\nThen another girl approached him and the same thing happened again. He was tongue-tied, couldn't hold up his end of the conversation and she quickly tired of trying to talk with him. Discouraged, he went over to the bar and grabbed a beer before going over to the side of the dance floor.\n\nThere were dozens of people dancing, all seemingly enjoying themselves. He wanted so much to be out there but he couldn't get up the nerve to ask. And yet again it happened. This time it was a witch who came up to him. She was a little bit shorter than he was and had on a long, loose, thin black gown and a black witches hat covered with satanic symbols. There was an elongated nose that hooked down almost to her upper lip and her chin jutted out and down; both were clearly fake. Her face was a deep green color, she had on black lipstick and one large wart was on her nose and one on her cheek.\n\n\"Definitely ugly,\" he thought to himself.\n\n\"Uh, hi. You one of the slaves with the Egyptians?\"\n\n\"Yeah, I am.\"\n\n\"Cool idea you guys did. I'm sure you are a shoo-in for the group prize.\"\n\n\"That'd be great. We want to donate it to the Toys for Tots program.\"\n\n\"Oh? You must be in a service frat, or something, huh?\"\n\n\"Yeah, Sigma Omicron Sigma. We call ourselves SOS, either like wanting to get saved or the Same Ol', uh, well, you know.\"\n\n\"Same Old Shit! I get it! Cool name, by the way. What's your name?\"\n\n\"Travis. Yours?\" he asked realizing he was comfortable talking with her, unlike the babes who had approached him previously.\n\n\"Uh, well, I am Maleficent. Maleficent the Witch.\"\n\n\"Cute, from Sleeping Beauty. No, what's your real name?\" \n\nShe stretched up to whisper in his ear, \"I just told you, Travis. Don't you think that's my real name?\" Suddenly he felt it: Her right breast was rubbing up against his arm. At first, he thought it was a simple accident, but she reached up to his ear again and clearly was letting her breast rub on him once again. \"You don't believe me?\"\n\n\"Uh, no, I don't really. But let's forget that. Care to dance?\" he asked suddenly amazed at his own ability to talk. They went out to the dance floor with her holding his hand and pulling him through the crowd to a less crowded area on the dance floor. The music was loud and rhythmic with a strong beat that was great to dance to. They ended up fast dancing a foot or two apart but he held her hand loosely and even led her to a couple of spins under his hand held over her head. She laughed with apparent joy and when the song ended, she came up to him and gave him a big hug.\n\n\"That was fun! You know dancing, don't you? You like music?\"\n\n\"Yeah, I do. It seems easy for me somehow.\"\n\n\"Oh? You a music major?\"\n\n\"Nope. My majors are math and computer science.\"\n\n\"Oh, my gosh. A computer nerd!\" she laughed. \"Maybe I could hire you to be my personal techie until I graduate.\"\n\n\"I'm more of a programmer, not a hardware guy. But I might be able to help you with simple problems. What about you?\"\n\n\"Pre-law, but I might change it. I don't know, really.\"\n\n\"Why law?\"\n\n\"I want to help people. You know, maybe a lot of pro bono work or work for a public defender's office. Or maybe work with women's legal issues.\"\n\nThe DJ started to spin another tune and they went back to dancing. They both had a great time dancing, shaking, spinning. The nearby crowd even pulled back a bit so they could do more fancy moves, all to the clapping of the others. When the music set was over, they received a round of applause and cheering.\n\nThey stood there a few minutes waiting for the music to start up again and she loosely held his hand in hers. An attractive blonde in a cheerleaders outfit came up and asked Travis if he would dance with her but he looked at Maleficent and declined, \"Sorry, but I'm with the witch tonight.\" He could feel her hand squeeze his.\n\nAfter the cheerleader had left, Maleficent said quietly, \"That's so sweet of you, but it's OK if you want to dance with others.\"\n\n\"Yeah, I guess, but it was fun out there with you. I'd like to keep dancing with you a bit longer. OK?\"\n\n\"Sure! You make me feel like a million bucks in your arms.\" \n\nThe music started up again with a slow dance, one meant for couples to dance arm in arm. Travis was suddenly very nervous. He could feel her body press up against his. Her breasts, barely covered by extremely thin material, lightly brushed up against his bare, lower chest and her pelvis seemed glued to his. Of course, male physiology started to take over; he could feel himself start to harden and he knew she could feel it also. He tried to pull back a tiny bit but her hand above his butt held him firmly up against her.\n\n\"I'm sorry. Kinda embarrassing...\" he murmured to her.\n\n\"It's OK, really, it is,\" she said back to him. \"Makes this old witch feel attractive.\"\n\n\"I'm sure you are attractive no matter what costume you have on,\" he reassured her.\n\n\"But the nose, chin and warts are all real,\" she giggled.\n\n\"Somehow I doubt that.\"\n\n\"Well, someday I'll have to track you down and prove it to you. Hey, you wanna go outside for some fresh air once the music stops?\"\n\nAfter the slow songs were done, they headed outside to a large patio dotted with several large potted plants and multiple concrete benches. She gently dragged him over to the far side and sat down with him on a secluded bench.\n\n\"Now that you know I'm ugly, anything else you want to know 'bout me?\"\n\n\"Sure. Where're you from?\"\n\n\"I grew up in Colorado. Was in the marching band, played clarinet, got a few small scholarships to here, and so here I am.\"\n\n\"Dorm, sorority or apartment?\"\n\n\"None of those. I live in a coven,\" she laughed.\n\n\"You're crazy. No, really, where do you live?\"\n\n\"I might tell you, but it'll cost you.\"\n\n\"Oh? What?\"\n\n\"A kiss, a nice little kiss. And if I like it, I'll tell you. So, pucker up,\" she said as she reached up to him slightly. He was suddenly nervous again but leaned down to her. Travis had been out on dates before and had kissed several times, but he was nervous she might not like his kisses. He knew to keep his tongue inside, based on the recommendation of a girl he had dated in high school. He remembered her words, \"Most girls don't want to play tonsil hockey early on, if ever. Use the 'K.I.S.S.' principle and 'Keep it Simple, Stupid.\"\n\nWith those words ringing in his mind, he let their lips meet lightly and sensuously, barely touching, before applying a bit more pressure. Right as it was beginning to feel warm and sexy, her beaked nose poked him in the face causing her to break out in giggles.\n\n\"Oops, sorry,\" she laughed. \"I hadn't planned on that.\"\n\n\"Hey, you just told me it was a real nose,\" he teased. \"You should be used to it by now.\"\n\n\"Let's say we witches don't get to kiss very often, so I forgot,\" she laughed some more. She tipped her head back slightly and stretched her lips out for him to kiss again. This time her nose did not hit him and they enjoyed a most sensuous meeting of their lips until she gently broke it off.\n\n\"Mmm, nice,\" she whispered as she wrapped her arms around him. \n\n\"Mmm-hmm.\"\n\n\"Care for a repeat?\"\n\n\"Mmm-hmm,\" he responded as he approached her again. They shared one more, quick kiss before he turned to her. \"OK, now where do you live?\"\n\n\"I'm in a dorm.\"\n\n\"Which one?\"\n\n\"Oh, that wasn't in the original deal. Too bad!\" she giggled as she pulled away from him a bit.\n\n\"No fair! You cheated.\"\n\n\"No, I didn't. It wasn't in the contract, so: too bad. Remember, I'm thinking about a career in law,\" she laughed some more before she stood up in front of him and tipped her head back, inviting another kiss. He bent down to her and again enjoyed another most sensitive kiss. \n\n\"Now will you tell me?\"\n\n\"Hey, you seem like a nice guy, so I'll tell you. I live in Waterton Towers. There. Happy?\"\n\n\"Maybe. But it's huge. How about a room number or even a phone number?\"\n\n\"Hmm. I don't know. Maybe we should keep it a secret.\"\n\n\"Wouldn't you like to see me again? If you do, I'll need to know how to get ahold of you.\"\n\n\"Let's do it this way. I'll get ahold of you when the time is right.\"\n\n\"How will I know it's you for sure?\"\n\n\"We'll have a code. Some day when you least expect it, I'll walk up to you and say 'witch's wart' and you'll know it's me. OK?\"\n\n\"OK, I guess. And in the meantime, I hang around Waterton Towers staring at the women wondering which one is you, right?\"\n\n\"No, don't go acting like a weird stalker. I'll let you know soon enough. But for now, how about we go back in and dance some more. Interested?\"\n\n\"Sure, let's.\"\n\nShe took his hand and led him back inside the frat house. There were many more dancers than before and so Travis and Maleficent had to dance closer. He was able to see her breasts bounce slightly under the thin, black cloth of her gown. He tried to look away but his eyes constantly were drawn back to that beautiful sight. Once when he looked up at her face, he realized she knew what he had been doing. \"Caught red-handed, or red-eyed,\" he thought as he blushed deeply.\n\nThen the music slowed down. \"Come on,\" she whispered, \"Stay with me here.\"\n\nNervously Travis took her back in her arms and led her around the floor. She pulled herself close to him, rubbing her breasts into his lower chest and pulling her pelvis to his. In no time at all he developed a new and even harder erection than he had done earlier.\n\n\"I'm sorry, this is so...\"\n\n\"Sexy, that's what it is.\"\n\n\"Uh, if you say so.\"\n\n\"I do 'cause it is. And it feels good,\" she answered as she continued to snuggle herself up to him. After a few minutes he became a bit more comfortable with the whole situation and his erection subsided a tiny bit. When the song ended, she continued to hold him close. Their next kiss was a sweet and tender joining of the lips. She let her mouth slip open a tiny bit and teased his lips with her tongue. Travis opened his lips slightly and tickled the tip of her tongue with his, but he avoided plunging his tongue into her.\n\nThey broke for the next song, and afterwards they kissed some more. Soon it became a cycle of dance, kiss and repeat. Sway, smooch and repeat. He had never enjoyed a girl quite like he did that night. After a handful of slow dances, the DJ fired up a faster tune. As Travis went to break away, she shook her head 'No' and took him by the hand, leading him out of the dance area. Once in the foyer, she looked around and noted a staircase on the left.",
        "\"Come on,\" she giggled.\n\n\"Where...?\"\n\n\"Let's explore. You with me?\"\n\n\"Sure, I guess.\"\n\nOnce on the second floor she led him down the hall and finally found an open door on the right. \"Here, let's try this one.\"\n\n\"Are you sure it's OK?\"\n\n\"No, but who cares? All we want is some privacy, right?\"\n\n\"Uh, yeah, that'd be good, I guess.\"\n\nOnce in the room he realized it was a single, probably belonging to one of the upper classmen in the fraternity. She closed the door softly behind her, snapped the lock closed and turned off the overhead light. The room was softly lit in an eerie glow by an old-fashioned lava lamp.\n\n\"Now, where was I? Oh, yeah, I was enjoying your wonderful kisses. So, let me have a few more.\"\n\n\"Umm, sure.\"\n\nShe guided him to the bed, sat on the edge next to him and turned, her eyes demanding more. He slowly let his face drop to hers until their lips met once again. For the next fifteen, maybe twenty or thirty minutes, (Who kept track, anyway?) they continued to kiss and hold each other closely. Between kisses they talked a bit about the university, their classes, friends, the fraternity life.\n\nAt one pause in the conversation and before he started to kiss her again, it happened. He felt her hand grab his and bring it up to her breast.\n\n\"Go ahead, it's OK,\" she whispered.\n\n\"You sure?\"\n\n\"Mmm hmm,\" she answered returning for another kiss.\n\nHe gently palmed the entire breast, feeling it, hefting it, stroking the nipple and memorizing every detail of the first breast he had ever touched. He knew nothing of cup sizes, but he did know her breast easily filled most of his palm and hand. It seemed to be fairly firm but not rock hard. The nipple beaded up more and more as he touched her. She broke the kiss and had put her lips to his ear when he realized she was clearly excited. Her breathing was deeper and a bit more irregular and she clung to him, moving her torso in time with his stroking.\n\n\"Mmm hmm. Definitely OK,\" she said faintly in his ear. \"That's getting me pretty hot...\"\n\nTravis kept up his attention, enjoying the feel of her breast when he suddenly felt her hand move. She reached up, tickled his nipple, before bending down and kissing it, sucking slightly. It felt soooo good. He took in a little gasp of air as she worked on the nipple and felt his hard erection become even harder. Then it happened! Her other hand slid down his chest and stopped right on his cock! His tunic was fairly thin, only a couple layers of a light cotton material, and it seemed as if she was slowly exploring every inch. He could feel himself getting excited, too excited, so he reached down and gently pulled her hand from him.\n\n\"I, uh, I'm afraid something might happen, so you need to go easier, please.\"\n\n\"Don't you want 'something' to happen?\"\n\n\"Well, yeah, I guess, but I don't want to get this costume messy.\"\n\n\"I have the cure for that. Lie down.\"\n\n\"What?\"\n\n\"Lie down and relax. Trust me on this.\"\n\n\"Uh, OK,\" he responded as he stretched out with her sitting next to him. She reached down to his bare leg and slid her hand under the tunic and up the thigh. In a few seconds she worked her way up and felt his cock.\n\n\"That's going to make it happen faster,\" he moaned.\n\n\"Actually, I'm looking for the thing you've used to hold this thing up. Button, hasp...?\"\n\n\"Velcro. Over by my left hip.\"\n\nThe next sound was the telltale noise of two Velcro strips being slowly pulled apart. In no time at all she pulled the tunic open and grabbed for his cock once more. \"This is more like it,\" she giggled. \"And you've got a really nice cock,\" she said a few seconds later.\n\nHe didn't know what to say. His mind was racing, the sensations were unbelievable. Here he had felt her breast and now he was getting a hand job, his first ever! He couldn't believe his luck. He knew if he blew, come would be over his belly, saving his tunic from getting wet. She kept stroking him using little light strokes near the knob and firmer, longer strokes on the shaft. Suddenly he felt her bend over him and he opened his eyes in time to see her drop a large glob of saliva right onto him. Next came little strokes on his knob which were phenomenal. He became more and more excited until he whispered, \"I'm about to blow.\"\n\n\"We can't have that now, can we?\" she responded as she squeezed the base of his cock firmly and quit the stroking. His urgency eased off and when he started to relax, she started again.\n\n\"You're driving me crazy!\"\n\n\"Mmm-hmm,\" she replied, \"And you like it, don't you?\"\n\n\"Yeah...fantastic!\"\n\n\"Your cock has nice veins on it,\" she murmured as she traced one with her fingertip. \"And I can feel your heartbeat.\"\n\n\"Yeah?\"\n\n\"Umm-hmm. With each beat your cock throbs a tiny bit. Pretty cool.\"\n\n\"Glad you like it. I'm loving it!\"\n\n\"I can make you love it even more,\" she promised.\n\n\"How?\"\n\n\"With this,\" she said as she brought her lips down to his knob and started to lick him.\n\n\"Oh, God, you can't believe how good that feels...\"\n\n\"Like it?\" she asked as she pulled away from him a few seconds.\n\n\"Ohh, God, yes!\".\"\n\n\"Good. I think I'll keep going,\" she murmured as she attacked him with renewed vigor, stroking the shaft and licking and sucking on the head. He felt her slide down taking much of him into her mouth. As she pulled up she would pause a bit and lick him right below the head, driving him even crazier with lust. He moaned and writhed in glorious agony until he reached the point he knew he was losing control.\n\n\"I'm gonna come...\"\n\n\"Mmm-hmm,\" she murmured as she continued her activity unabated. Then it happened. Lightning bolts of pleasure shot from his cock to his brain and intense spasms of warmth pulsated through his body. His mind throbbed with pleasure and he was vaguely aware of his body arching and thrashing on the bed. Finally, he collapsed back down, gulped for air and lay there reliving the most phenomenal experience of his life.\n\n\"I think you did like it,\" she whispered up to him after a few minutes.\n\nIt took him a few seconds to speak again and when he did, his voice barely croaked out, \"Wow, yeah...\" She gently licked his slightly softening penis and let him regain his composure. \"I, uh, I've never had anything like that, ever.\"\n\n\"Was it your first?\"\n\n\"Uh, yeah, honestly, it was.\"\n\n\"So, you're no longer a BJ virgin. Congrats!\"\n\n\"Thank you, not for the congrats but for the whole thing. Wow.\"\n\nAfter a few seconds she crawled up to him and kissed him deeply. He did not pull back, something that completely thrilled her. \"You don't mind kissing me when you've just come in my mouth?\"\n\n\"No, why would I?\"\n\n\"I hear some guys don't like it. My experience is very limited and, well, uh, that's the first time I ever swallowed.\"\n\n\"You could swallow or spit, that's up to you. What happened before was absolutely phenomenal.\"\n\n\"Glad you liked it.\" After a minute or so she went on, \"You interested in returning the favor?\" \n\n\"Yeah, but I've gotta be honest. I've never done it before.\"\n\n\"That's cool. I'll get to teach you exactly what I like. I'm sure you have the basic anatomy understood, right?\"\n\n\"Well, yeah, you know, porn and all.\"\n\n\"OK. So, licking is super good, especially on the clit. But don't forget to lick and kiss the lips. And I like a finger inside at the same time. Curl it up and rub the front of my canal as you lick me. That's the G-spot and it's very sensitive, in a nice way, that is.\"\n\n\"All right, I'll do my best. Just tell me what feels good and what doesn't.\"\n\n\"Oh, I will,\" she snickered as she lay back down. Travis reached down and slowly pulled her witch's robe slowly up her legs until he could see her pelvis in the light of the lamp. She had no underwear on and he could see a little patch of fur above her lips, which came into view as she let her legs slip apart.\n\n\"You just gonna stare or what?\" she teased.\n\n\"You're so beautiful...\"\n\n\"Thank you. Wanna touch?\"\n\n\"Umm-hmm, I do,\" he answered as he let his fingers slowly slide up her inner thigh to her labia. With shaking hands, he lightly rubbed the outer lips and slid a finger between them. He was met with a warm, slippery liquid which enticed him to explore further. He let his thumb slip up to the juncture of her labia and the tiny nubbin of tissue between them. To her soft sigh, he started to rub in tiny little circles.\n\n\"Mmm. Nice,\" she whispered after a bit, \"But aren't you interested in tasting things?\"\n\nTravis slid down on his belly and slowly approached her wild with excitement and nervousness. As he came closer, he could smell a delightful earthy but clean smell. He'd heard about women smelling or tasting bad, but here she had a unique and wonderful smell, one he would, over the years to come, associate with one of the most intimate gifts a man could give to a woman.\n\n\"Tongue? Got one?\"\n\n\"Yeah, I do,\" he whispered back. \"You are so amazing...\" he responded as he lowered his mouth to her. He let his tongue slowly lick between her lips, savoring the tangy liquid. As he settled down between her thighs, he reached up and let his arms rest along her flanks.\n\n\"You can touch my boobs, too, you know.\"\n\n\"Honestly, I'd better not. Leave the robe there at your waist and I'll concentrate on your pussy...is it OK to call it that?\"\n\n\"Sure, vulva sounds too medical. You can even say 'cunt' as long as you don't call me one.\"\n\n\"Oh, I won't. Here, let me work with my tongue some more.\" He lowered his head again and licked slowly, then faster, then deeper, then more shallowly, all the time advancing and retreating from her clit. When his tongue-tip tickled her clit, she pushed him back a bit.\n\n\"Don't need to be so soft. It kinda tickles. Use your tongue with big, deep licks, apply a little pressure. You won't break anything. Yeah, there, that's better. Ooooh, that's a lot better.\"\n\nTravis began to use the top of his tongue rubbing up and down right over her clit, bringing soft moans of pleasure from her before he remembered her comment about using a finger. He slowly reached under his chin and let his index finger slide right into her warm, wet sheath. Inside he could feel an area of slight knobbiness, which when he touched it, seemed to bring even more moans of pleasure from her.\n\n\"Yeah, that's it. Keep working the finger right there, but don't forget the tongue!\"\n\nThe rest of his lesson was simple trial and error. He would try something and if she moaned in pleasure, he stored it in his memory to use again. If she quit moaning, he crossed it off the list. In no time at all she seemed to be getting more and more excited, particularly when he applied the broad top of his tongue on her clit while rubbing her G-spot with a second finger he had slipped into her. He kept doing this a bit longer, delighted she seemed to be enjoying it immensely, when he felt her hands on his head, pulling him tighter and tighter to her.\n\n\"I guess I'm not going to hurt her if I keep this up,\" he thought to himself as she took in a few deep gulps of air and arched her back, pulling at his head and moaning loudly.\n\n\"Oh, God, oh, God, that feels so...\" she cried out as she writhed in ecstasy. Eventually she relaxed back onto the bed as she caught her breath and asked him to ease off on the licking while she gently stroked his head. \"Wow! So mind-blowing. You sure this was your first time?\" she asked incredulously. \n\n\"Mmm-hmm, it was,\" he told her.\n\n\"Boy, you win Rookie-of-the-Year! That was fabulous. Kiss?\"\n\nTravis crawled up over her and held himself up on his elbows as he reached down to kiss her. She licked his lips lightly before joining her lips to them. The kiss was sweet and warm to begin with, then became deeper and more probing. She clung to his back and when he was least expecting it, she suddenly pushed him up and rolled him over with her now on top and her pussy rubbing his reinvigorated cock. It was surrounded on three sides by a wet pussy and was being rubbed as she thrust her pelvis up and down. It was beyond belief. Here he was being 'dry' humped by the wettest sensation he could ever imagine. He wondered to himself if this was truly 'dry' humping if it was so wet. Back and forth, up and down she slid her pelvis over him until he realized he was going to come again.\n\nBreaking the kiss, he whispered, \"I'm getting pretty excited again. You better stop.\"\n\n\"Why, hmm?\"\n\n\"I'm about to shoot.\"\n\n\"Look, after what you did to me, you deserve it. Just don't put it inside,\" she said as she increased the pressure on his cock and rubbed up and down until he took in a deep breath and grunted several times as he came on his belly. She stopped moving for a minute or so as they kissed each other tenderly. \"Here,\" she said eventually, \"Let's see if they've got any tissue. Can't go out like that, can you?\"\n\nThey did find a box of tissue and she gently rubbed his belly and cock dry. Sitting next to him, she smiled before giggling a tiny bit.\n\n\"What?\"\n\n\"Well, Mr. Egyptian, did you ever think this was going to happen to you tonight?\"\n\n\"Honestly, no, I didn't.\" He paused a few seconds before he went on, \"Uh, this was beyond phenomenal. I'd really like to meet up with you again. I mean, this was great and all, but I think you're a neat person. Would you consider going out with me sometime?\"\n\n\"Yeeaahh,\" she responded slowly and thoughtfully. \"I might. But first, we should get back out to the party. Let's dance some more and see where it leads.\"\n\nAfter he pulled on his tunic and she straightened out her robe, they peeked out the door and satisfied no one would see them, they snuck back down to the dance. There they danced a few more times until the DJ announced he was wrapping things up with a few slow tunes. \"Gitcher squeeze of the night and hold them close, I gotta few real sexy tunes to send you home with.\"\n\nAfter the third and last tune they held each other tightly for a few seconds and she whispered up into his ear, \"This night was fantastic. Majorly fantastic.\"\n\n\"Yeah, it was.\"\n\n\"Travis, I've been thinking about this ever since we came down stairs. As much as I'd like to get together with you again, I'm honestly pretty embarrassed. I've never considered myself a slut but tonight, I was pretty slutty. I'm not sure this is such a good way to start a relationship.\"\n\n\"Hey, it was fine. We clicked. We enjoyed ourselves. What's wrong with that?\"\n\n\"Maybe we should take it easy, you know, give it some time. Then we could meet again and see if we still have something special.\"\n\n\"No, I wanna see you soon. You know, how about next weekend?\"\n\nShe looked up at him with a solemn face and with a tear trickling down her cheek, she slowly shook her head. \"I'm going to go now. Don't follow me. I need to think things over. Once I have cleared my head, I'll find you. And if you never hear from me again, please understand, I really do like you. And I had fun tonight but this wasn't such a good way to start things off. Sometimes things just aren't meant to be.\"\n\nShe reached up and lightly kissed him on the lips and pulled herself from his arms before whispering, \"Witch's wart.\" She fled the dance floor weaving through other dancers. As she got to the door she turned around and smiled, blew him a little kiss and slipped out of the door and out of his life. He felt emptier than he had felt ever before in his life.\n\nBack in his room Travis kept thinking about Maleficent, or whatever her name was. She was nice, easy to talk to and not stuck up. He was totally able to get past his shyness with her. He was comfortable talking with a girl, probably for the first time in his life. But he still didn't know who she was! With his mind racing about the fabulous night he'd just had, he eventually fell into a troubled sleep.\n\n-----\n\nThe next few weeks were fairly busy with exams and papers to turn in. Although he thought about her often, Travis resigned himself to never knowing who she was. He thought maybe she was a tease, maybe she had done it on a dare from her friends. However, on the other hand, she seemed to genuinely like him. They did have a connection, or at least he thought they did. Winter break came and went without him ever hearing from her so he resolved to start the new year with a better attitude and try to be more comfortable around girls.\n\nRight after the new quarter started, he got a call from the student tutoring office.\n\n\"Hi, this is Bruce from tutoring. We've got three requests for a German tutor and we were wondering if you could help.\"\n\n\"Uh, I'm not in the German department.\"\n\n\"Yeah, we know, but your scores on your language aptitude test last year were the highest we've ever seen and you earned three years of credit for German. You obviously know the language. We were hoping you could help out. We'd pay you...\"\n\n\"I'm pretty busy, you know, and I'm doing two majors.\"\n\n\"Yeah, but our other tutors are swamped and these three women all had trouble with their grades in the fall quarter. They need a little help through the end of winter quarter. They all just want to get this required class behind them.\"\n\n\"Uh, what do you pay?\n\n\"We are authorized to pay twenty bucks an hour if you have two students at a time, or fifteen if it's one student.\"\n\n\"What about the three at once?\"\n\n\"We can't let that happen. Get too many in the room and you're not tutoring any more, you're teaching. So, interested?\"\n\n\"Yeah, maybe. When can I come down and get more information?\"\n\n\"Great! We're at Miller Hall, room 101. Come by anytime tomorrow.\"\n\nThe next day he dropped by between his classes. He was met by the staff who told him about the program. It sounded fairly good and he could work with one or two students at a time, depending on their needs. With a little hesitation he signed up for two one-hour sessions a week. He would show up at the empty classroom and the students would meet him there, do their work with him and sign his time sheet. The extra cash wasn't much, but it would help buy a pizza now and then.\n\nOn the next afternoon he nervously waited for the students. The tutoring office had suggested he work with two students each time with one getting two hours the first week, then the next week another would get the two sessions. It sounded a bit complicated but they had arranged for the schedule so all he had to do was show up.\n\n\"I wonder what they're like?\" he thought anxiously right as two female students came through the door. The first was a bit older, probably thirty or so, and introduced herself as Suzanne. She was attractive, fairly tall, had deep red hair and a nice figure. Suzanne told him she was going back to school after having two kids. She was studying English with an idea of becoming a teacher. She needed a second language to complete her degree.\n\nThe other student was younger, perhaps his age, and was beautiful. Her long, blonde hair reached almost to midback and her face was attractive with a button nose and sensuous lips. She had a nice figure with reasonable breasts and an ass to die for. Her name was Melissa, but she requested he call her Lissa. She was the kind of girl who could make him nervous to be around but he was able to stay calm and chat with both of them particularly by interacting more with Suzanne. \n\nOnce he had an idea of their issues and problems, he asked them to crack their books and he set out to explain how the verbs and tenses worked. The hour flew by and both thanked him for his help. Suzanne went on to say she finally understood the verb issue for the first time ever.\n\nTwo days later he was back in the room and Lissa and another student met him. Her name was Jackie and she clearly had some Asian in her background. She was funny and constantly cracking jokes. The three of them worked primarily on pronunciation until the hour was up. After they signed his time sheet, Jackie took off and Lissa waited for him to finish his paperwork.",
        "\"How come you know German so well? You a German major?\"\n\n\"No, I learned the language when I was a kid. My dad was an officer in the army and we were stationed there for three years. He made my sister and me go to German schools. Then in high school I spent a year in a small village outside of Berlin as an exchange student. I made it my mission to learn the language so I studied it every night after school.\"\n\n\"Cool. Will you be able to use it in your job?\"\n\n\"Probably not. I'm doing computer stuff. Maybe if some company wanted an international presence I could go there. I dunno.\"\n\n\"Well, I certainly appreciate your help. See ya next Thursday.\"\n\nOver the next two months he enjoyed working with the three of them. They all rapidly improved and reported their grades were significantly better. After the quarter ended, he got a text from Suzanne thanking him for his help. She got a B in her class and didn't need any more tutoring since her language requirement had been met.\n\nLissa and Jackie asked for another quarter of tutoring and they both came to each session. Travis found he enjoyed working with them. Once he got to know them, he was able to relax and not get so anxious. After some of the sessions Jackie would take off quickly to get to another class but Lissa would hang back, talk with him and even walk with him towards the dorm complex.\n\n-----\n\nOn one sunny April afternoon Lissa turned to him and asked if she could buy him an ice cream cone from a little kiosk by the sidewalk. He agreed and she led him to a grassy knoll by a small reflection pond. There were several other students, some wearing bathing suits and bikinis, enjoying the sun. Lissa took him to the far side right next to the water.\n\n\"I love listening to the water splashing over the rocks,\" she sighed. \"Reminds me of home when I go hiking in the Rockies.\"\n\n\"Yeah, it's nice. I'd love to go out there sometime for climbing.\"\n\n\"You climb? No wonder your arms look so strong!\"\n\n\"Yeah, I do most of my work at a climbing gym. But real rock climbing is my passion.\"\n\n\"I don't know too much about it, but I do know there are hundreds of good climbing areas back home. If you ever decide to come out, I could show you around. I'm sure Mom and Dad would be glad to open up my brother's old room, if you wanted to stay.\"\n\nSuddenly, he was nervous again. He had gotten used to her and was able to ignore her good looks while he was tutoring, but here she had basically invited him to her home. Maybe she liked him! And that thought gave him palpitations.\n\n\"Uh, yeah, maybe. That'd be nice, I guess.\"\n\n\"Maybe during summer break you could visit. I'd introduce you to the local climbing club and maybe they'd let you join them.\" She finished her cone, lay down on the grass and rolled up her shirt to expose her belly to the sun. \n\nHer smooth, flat belly was gorgeous. Travis could barely tear his eyes away so he decided to lie down next to her. He peeled off his own T-shirt before stretching out beside her.\n\n\"That's no fair,\" grumbled Lissa, \"You get to strip to the waist and I've gotta keep my top on.\"\n\n\"Yeah, too bad. It is one of the only advantages a guy has.\"\n\n\"What? You guys get all the breaks! You can stand up to pee, get better pay, have more sports opportunities; the list goes on and on.\"\n\n\"But you have one thing guys will never have.\"\n\n\"What's that?\"\n\n\"Well, there's a biblical explanation. It seems Adam and Eve were made without genitals. One day God came to them and told them they needed genitals. \"One of you will get a penis,\" God said. \"With it you can stand up to pee and you get to put it into the other one's new genitals.\" Adam replied, \"Oh, Lord, I want it, give it to me, please, please.\" And poof, Adam had a penis. The Eve said, \"What about me, Lord, what do I get?\" And God replied, 'Multiple orgasms'.\"\n\n\"I can't believe you said that,\" she laughed, \"I guess that's one place we have it on guys. You know,\" she said a few minutes later, \"You're a nice guy. How come you don't have a girlfriend?\"\n\n\"I guess I've got a case of terminal shyness, at least that's what my sister calls it.\"\n\n\"But you're not shy with me.\"\n\n\"Oh, yeah I am. If I wasn't so shy, I'd have already asked you out.\"\n\n\"Really? Maybe you should.\"\n\nThere was a pause in the conversation. Travis' mind was in a turmoil. Here she had basically said she'd like to go out with him but now that she was suddenly a potential dating partner, his nerves took over. And there was Maleficent. He couldn't forget her, either. He failed to say anything when he heard a soft sign next to him.\n\n\"So, maybe you don't like me after all,\" she whispered.\n\n\"N0! I do. I really do,\" he answered as he sat up to face her. And there on the grass was Lissa without a shirt on, wearing a modest bra, but otherwise bare to the waist.\n\n\"Oh, uh, excuse me,\" he stammered as he turned away.\n\n\"No, it's OK. Hey, my bikini top is smaller than this. I wanted to get more sun. Come on, it's OK to look.\"\n\n\"Geeze, Lissa, you have no idea how beautiful you are,\" he said still looking away. \"I see someone as pretty as you, well my mind just goes blank.\"\n\n\"You seem to be talking OK now. Look, Travis, I'll come out and tell you something. I like you. You've been a peach of a tutor and my grades are way better. And you're nice. You're not a lecher. And I would like to spend more time with you. What do ya say, huh?\"\n\n\"Uh, I guess I could do that. But please, I'm not very romantic. I don't know how to act around girls much.\"\n\n\"You're doing OK with me here, today. Just be yourself. Think of any time we get together as any old tutoring session. Just think about it, please. You'll do fine.\"\n\n\"Uh, then there's something else. Or, should I say someone else.\"\n\n\"Yeah? Who?\"\n\n\"I met someone at a party at Halloween. And I can't forget her.\"\n\n\"So, go after her.\"\n\n\"I don't know who she is! She had her face all made up and I never got her name. But there was something about her that really got to me.\"\n\n\"So, I get it that you're shy. And I get it there was someone, one time, who got your interest. But why does that make you not at least try and smell the roses now?\"\n\n\"I don't know. She was....she was special, somehow. And unless I find her and get her out of my system, I'll always be comparing any girl to her.\"\n\n\"She must have been something to get you interested and you don't even know her name or what she looks like. I don't know who could compete with that perfect girl in your mind.\"\n\n\"No! No! It's not a competition. I just want to get her out of my mind and to do that, I want to meet her one more time, you know, to see if there was anything there, besides...\"\n\n\"Besides sex, you mean?\"\n\n\"There wasn't sex, at least not real sex. You know, we didn't screw or anything.\"\n\n\"Must have done something if she's got this hold on you. Look, I won't embarrass you by asking details. But let me tell you this: You're a nice guy and I, for one, think you should get out there. Go ask someone out. Ask me. Ask Jackie. Ask anyone. But just ask. Test the waters. There's more than one girl for every guy and more than one guy for every girl. Think about it.\"\n\n\"Sure. Oh, and, uh, Lissa, thanks for your pep talk. I'll keep saying it to myself and someday I just may believe it.\"\n\n\"Travis, believe it. Really,\" she said as she reached over and gave him a tiny hug before pulling on her blouse. She stood and walked off leaving a stunned Travis behind. As she was about to round a bend in the pathway and without looking back, she raised up her hand beside her and gave a tiny little wave.\n\n-----\n\nDuring the next tutoring session Travis was so nervous he could barely talk. He ended up talking more to Jackie to divert his mind from Lissa. If Lissa was upset about it, she didn't appear to show it. As they wrapped up the two women invited him over to the student union for a cup of coffee. As they went there, he couldn't believe his luck. He walking between two very attractive female students. He wished his mind could settle down and not make him so nervous. \n\nAt the union they sat in a booth with Lissa across from him and Jackie at his side. This forced him to look at Lissa more. He kept remembering to smile, talk in full sentences and not talk so much about himself, things his sister had reminded him to do. After the coffees, they drifted down the steps where Lissa told them she needed to go to the library. Jackie walked beside him back towards the dorms.\n\n\"She likes you, you know,\" said Jackie.\n\n\"Who?\"\n\n\"Lissa, of course. She's had her eyes on you this whole time.\"\n\n\"You sure? I mean, we did spend some time by the refection pool the other day and she kinda suggested I should ask her out.\"\n\n\"What more do you need?\" she laughed. \"A girl says to invite her out? You invite, case closed.\"\n\n\"But I'm pretty shy and uh...\"\n\n\"Look. I want you to go back to your room and look in the mirror. What you will be seeing is a fine-looking guy. I should know. But what the mirror won't tell you is how nice you are.\"\n\n\"Uh-huh.\"\n\n\"Yeah, nice, as in boyfriend-nice. You give out 'good' vibes. You aren't like so many of the guys here who look at girls like they were just meat. You look at Lissa and me like we are people. You don't look down at us because we need a little help in our class.\"\n\n\"Maybe you're right. I dunno.\"\n\n\"Look, I can prove she's into you.\"\n\n\"How?\"\n\n\"After our next session, I'll fake being busy and leave right away. Then ask her out for a coffee, like we did today. Easy-schmeazy. I bet you she'll jump at the chance.\"\n\n\"Well, that'd be pretty easy.\"\n\n\"And don't be so nervous. Think about her like a guy-friend you might hang out with. Just talk, shoot the shit, be yourself. You'll do fine, I promise.\"\n\n\"OK,\" he said while puffing out his chest a bit, \"I'll do it!\"\n\n\"Atta boy, I knew you had it in you. She's a nice girl, really. And you'll have fun.\"\n\n----- \n\nFor the next few days Travis tried to force himself not to think about Lissa too much while at the same time trying to psych himself into relaxing and simply inviting her out for a cup of coffee. During the next tutoring session, he was fairly tense until he saw Jackie give him a tiny wink and a smile. He took it as encouragement and tried to relax more. \n\nBefore he knew it Jackie suddenly grabbed her book and papers and told them she had to rush off to a meeting in her department.\n\n\"Boy, she took off quick, didn't she?\" asked Lissa.\n\n\"Yeah, I didn't realize the hour was about up. So, any questions on conjugating those verbs?\"\n\n\"No, I think I got it,\" she replied as she stuffed her book into her backpack.\n\n\"Uh, Lissa, like a cup of coffee with me? Now, I mean?\"\n\n\"Sure, that'd be sweet, thanks.\"\n\n\"See. Stupid,\" he thought to himself, \"That's all it takes. Now talk to her normally.\"\n\nAt the union they sat across from each other at a tiny two-person table. Their knees bumped into each other's off and on bringing jolts of desire to his brain. Eventually, he realized Lissa was purposefully bumping his knees.\n\n\"You're doing that, aren't you?\"\n\n\"What?\" she asked with an air of total innocence.\n\n\"Bumping our knees.\"\n\n\"Moi? Whatever are you talking about?\" she giggled.\n\n\"I moved my legs out of your way and a few minutes later you managed to find them and 'bump' into them again,\" he laughed.\n\n\"I'm so busted,\" she said while blushing a bit. \"So, what are you going to do about it? Punish me?\" she teased.\n\nBefore he knew it and without forethought, he suddenly blurted out, \"You'll have to go out with me to see the dorm movie-of-the-week on Friday.\"\n\n\"Travis,\" she said with a slight mocking tone, \"Are you asking me out?\"\n\n\"Uh...\" he said suddenly getting nervous again.\n\n\"You sure? 'Cause if you are, then I accept.\"\n\n\"You do?\" his voice squeaked.\n\n\"Of course, I do. What's the movie, anyway? Oh, who cares? Let's just go and have a good time.\"\n\n\"Uh, great. Should I meet you there or ...?\"\n\n\"I'm in Waterton. Room 743. Movie's at seven on Friday. I'll be ready and in the lobby by six thirty.\"\n\n\"Uh, yeah, OK. Uh, see you then?\"\n\n\"Sure. Well, are you going to escort me back to my room or ditch me here?\"\n\n\"Oh, God, I'm so sorry. I'm not very good at this dating thing yet.\n\n\"OK. Ahem,\" he went on, \"Lissa, may I escort you back to your abode,\" he said in a stiff, formal voice.\n\n\"Why, Sir, I'd be delighted,\" she laughed as they got up and headed out the door. The walk to her dorm was fairly quick and she turned and gave him a tiny one-armed hug and reached up to his ear.\n\n\"I'm looking forward to this,\" she whispered. \"See you Friday evening.\"\n\nTravis didn't walk back to his room. He floated. He drifted. Somehow his legs eventually led him to his room where he collapsed on his bed.\n\n\"I've got a date, a real, honest-to-gosh date with a hot girl.\" Then his nerves kicked in. \"Maybe I'll screw it up, probably will,\" he thought. \"And what about Maleficent? I still want to meet her but I don't think she'll ever let on who she is.\" With his mind racing between excitement about Lissa and longing for Maleficent, he grabbed his phone and called his sister.\n\n\"Hey, Trav, what do I owe this honor to? You calling me, now that means something big is about to happen.\"\n\n\"Uh, hi, Lori. I do need some help. I've got a date\u2014\"\n\n\"A date?\" she screamed, \"My big brother has a date? It's about time. Did someone finally pin you down?\"\n\n\"No! I asked her, really.\"\n\n\"Well, good, I'm glad. My brother is a nice guy and someone, someday, will be lucky to land him. So, what kinda help do you need?\"\n\n\"I'm kinda nervous and uh...\"\n\n\"Look, Trav, I have one big bit of advice. No matter who she is, no matter what she looks like, she's a human female. And females want to be treated like people. Pretend she's a guy you're hanging out with. Talk about normal stuff, don't expect too much and you'll do fine. If she wants more, she'll let you know.\"\n\n\"But there's another problem. I kinda told her I was attracted to another girl.\"\n\n\"You idiot!\"\n\n\"I know, I know.\"\n\n\"Who's that?\"\n\n\"A girl I met at Halloween. She was great, but I don't know her name and I don't even know what she looks like. She told me she'd tell me someday with a code word, but otherwise I don't know if I'll ever see her again. And I kinda want to resolve the issue before...\"\n\n\"Before what? You don't know who she was or what she looks like. Get a life, Bro. Get out there. Take this new chick out and forget Halloween Girl.\"\n\n\"I know I should.\"\n\n\"And show the new chick how nice she is, how much you think about her and never, ever, ever again mention Halloween Girl to her.\"\n\n\"Yeah, you're right. Thanks.\"\n\nAfter they chatted a bit about her upcoming senior prom, they hung up. He felt a lot better about his situation and actually was looking forward to Friday.\n\n-----\n\nThe Friday evening started out nicely. After he had dinner, he went up to his room, showered, shaved and put on some nice but still casual clothes. Instead of jeans he wore some chinos, a button up shirt, a nice sweater-vest and a pair of comfortable, dark leather shoes. His roommate gave the thumbs up to his choice of clothes, so he felt better already. He went over to Lissa's dorm and waited for her to come down to the lobby. When he saw her, his barely concealed nervousness almost boiled over. She had on a pair of tight leggings under a chic, nearly sheer blouse that didn't quite hide a cute, lacy bra. She was stunning. Her dirty blonde hair spilled in nice curls down her back and she had a beaming smile surrounded by the cutest dimples imaginable. \n\n\"Hi, Handsome,\" she smiled. \"You sure do clean up nicely.\"\n\n\"Uh, thanks. You do too, you look great. What did you do with your hair?\" He was proud of himself for turning the conversation to her, as Jackie and Lori had coached him.\n\n\"Oh, you noticed! I curled it a bit and touched it up with a tiny bit of spray. I like your sweater. It's your color.\"\n\n\"Mom got it for me. It's too nice to wear to classes.\" Next, his mind went blank, he couldn't think of a thing to say. Fortunately, Lissa rescued him.\n\n\"Well, should we get going? Let's get there in time to get a decent place to sit.\" \n\nThey strolled over to the old Johnson dorm which had a huge common area which was converted into a movie theater each Friday night. Pillows and blankets were thrown out on the floor and people wandered in and sat down where ever they wanted. When they arrived, Travis offered to get some popcorn but Lissa declined.\n\n\"Thanks, but no. Just ate, but I'll take a diet soda, please.\" Once he brought back the drinks, they chose a big party pillow that could easily hold the two of them. As the room filled up, the students started to party a bit. Someone had brought a beach ball and was tossing it around the room while a few couples danced in the corner to the background music. More than a few were suspiciously sipping fluids from small thermoses. Lissa commented she hoped they wouldn't get so drunk that they talked too loud during the movie. After a bit the lights dimmed, the music faded and the movie started.\n\nTravis had not even thought about what the movie might be but once the credits started rolling, he realized it was a chick flick. Although he wasn't fond of them, he knew Lissa might like it. He relaxed back on the pillow before she lay down right next to him and grabbed his hand.\n\n\"You guys may not like movies like this, but they are fun. You get to see a couple in love, see their troubles, sometimes a little skin and then they have a happily-ever-after ending. What's not to like?\"\n\n\"So, you're not into sci-fi, huh?\"\n\n\"Nope. And don't get me started about violence. I hate it in a movie. It makes me feel queasy afterwards,\" she whispered as the action in the movie started. They settled down to enjoy the movie. Part way through the movie during a love scene, Lissa scooted closer to him, shivering a tiny bit. Travis put his arm around her as she whispered her thanks for keeping her warm. They stayed cuddled up together for the rest of the movie. At the final scene when the boy got the girl back, Lissa reached up and kissed Travis lightly on his cheek.\n\nOnce the lights went back up, an announcer told them they had a surprise double feature with the second movie being a bit racier. It was announced the movie was a 'hard R' so Travis asked her if she wanted to stay.\n\n\"I'm not shy about sex in movies, but I kinda wanted to get to know you a little more. Can't we go back to my room and, you know, talk a little bit?\"\n\n\"Sure,\" he answered nervously, \"Lead the way.\"\n\nOn the way back to her dorm she took his hand as they strolled and talked. He kept reminding himself to let her talk about herself so he remained fairly quiet as they strolled home. However, she was so pleasant and unassuming that he quickly forgot his nerves. Back at Waterton Towers she looked up at him and said, \"My roomie is gone for the weekend. Care to come up and have something to drink?\"\n\n\"Sure, I guess for a little bit, anyway.\"\n\nIn her room she had a tiny couch which pulled out into a bed as well as a single desk chair. He looked nervously around until she told him to sit on the couch. She pulled out a box wine and they sat talking and drinking. The wine loosened him up until they were laughing and telling jokes. \n\nOnce the campus clock tower chimed out eleven pm, he said quietly, \"Uh, maybe I better get going.\"\n\n\"You sure? The night, as they say, is still young. On weekends there's no curfew for guys in this wing. Here; have another wine.\"\n\nOnce she served him another wine, she sat down right next to him, rested her hand on his thigh and turned to him with sensuous eyes. \"Can I interest you in a kiss?\"\n\n\"You sure? I, uh, I...\"\n\n\"Yes, I'm sure,\" she responded as she reached up to him. Their lips slowly met in a wonderfully soft and sensuous kiss. Travis kept his hands lightly on her back as they continued to kiss softly. She broke off the kissing after a few minutes and looked him in the eyes.",
        "\"Nice. You kiss nice. You must have had a lot of practice.\"\n\n\"Not that much, really.\"\n\n\"Oh? I want to thank whoever it was who taught you,\" she giggled as she reached up for more. Travis was amazed. This attractive girl, woman, co-ed, female, whatever the right term was, clearly liked him and wanted more. Then it hit him. He was being a regular guy and not an anxious, quivering nerd. He smiled inwardly as he let his lips touch hers.\n\nAfter a few minutes she stood and excused herself to go to the restroom. Once she was back, she offered him the opportunity to go as well. As he opened the door back into her room, he saw immediately the lights were all off and the room was lit by a single candle. The couch had been pulled out into a bed.\n\n\"Here, let's get back to where we were. I believe you owe me a kiss,\" she said as she reached out for his hand. She pulled him over to her and stretched out on the bed. \"Here, lie down with me, please.\"\n\nTravis couldn't believe his luck. A beautiful girl was stretched out and waiting for him. He smiled and answered he'd be delighted. On the bed Lissa crawled on him, straddling his pelvis with her legs, and leaned down for more kisses. They explored each other's mouths lightly as she rubbed herself on him until he developed a full erection.\n\n\"Mmm, nice,\" she whispered, \"You can touch me, if you want.\"\n\n\"Sure?\"\n\n\"Mmm hmm.\"\n\nTravis let his hands roam down to her butt, worried she'd stop him, but she never did. With their lips still touching, she reached for one of his hands and pulled it right to her breast. As he started to stroke it, she murmured softly through her kisses. Her nipple beaded up under his hand as he suddenly realized she must have taken off her bra when he was in the john. She whispered in his ear, \"The buttons are simple to undo.\"\n\n\"You sure?\"\n\n\"Mmm hmm, I'm sure.\"\n\nAnd at that very moment, the image of Maleficent came racing back into his mind. He knew Lissa was excited, he knew she was interested, he knew this could be leading to something totally hot, but -- dammit -- that witch kept popping up in his mind. Somehow it was almost like he was cheating on her being with Lissa.\n\nSuddenly he wriggled around and struggled to sit up.\n\n\"What's wrong?\" she asked.\n\n\"Uh, nothing's wrong with you. It's me. I'm sorry, but I gotta resolve something in my mind before we go any further.\"\n\nLissa looked at him with astonishment in her eyes. \"Don't you like me?\"\n\n\"Oh, God, yes, I do. You're great. But I've got this little issue...\"\n\n\"Don't tell me! Halloween girl?\"\n\nHe looked down at the floor and silently nodded.\n\n\"OK, I've one thing to say to you.\"\n\n\"I know, you're going to kick my ass out. And I deserve it, I guess.\"\n\n\"Nope, that wasn't what I was going to say.\"\n\n\"Oh?\"\n\n\"No, I was going to say  Hexenwarze .\"\n\n\"Uh...wait. Did you say  Hexenwarze ?\"\n\n\"Uh, yeah, I did.\"\n\n\"Do you know what it means?\"\n\n\"Uh, yeah, I do. I looked it up weeks ago.\"\n\n\"But do you know what it really means?\"\n\n\"Yeah, I do,\" she paused before going on, \"Hi, I'm Maleficent. What's your name?\" she giggled as she held out her hand.\n\nTravis reached up and wrapped her in a big hug. \"I can't believe it's you!\"\n\n\"Well, you better, 'cause it is.\"\n\n\"Why didn't you tell me sooner?\"\n\n\"I wanted to get to know you more first, make sure you were the real deal. You know, I'm still embarrassed about what I did on Halloween. I'm usually not that kind of girl. But that night I was super attracted to you, I just knew I wanted you. Later I was so ashamed to be so slutty that I took off.\"\n\n\"What'd you think when I showed up to tutor you?\"\n\n\"I was absolutely blown away. Since then, though, I've realized you're the kind of guy I'd like to be with. I thought I'd play it slow and get you to go for me and hopefully forget about her. Then I'd never have to admit to anyone I acted like I did that night.\"\n\n\"Well, if you wanna know, you've been pretty good at making me forget her.\"\n\n\"But not all the way. And you know, I think it's kind of sweet that you were willing to leave because she was still on your mind. Tells me you're a nice guy and not gonna hop in the sack just to get lucky.\" \n\n\"Are you saying I was going to get lucky?\"\n\n\"Mmm, maybe,\" she giggled as she grabbed his hand and placed it back on her breast. \"Now, where were we, hmm?\"\n\nHe felt her lips touching his and her tongue tickling his. As he opened his mouth a tiny bit more her tongue danced on his, teasing, probing and promising. His hand teased her beading nipple until he felt her hand reaching between them. Slowly she unbuttoned her blouse and pulled it open. He didn't need any encouragement to gently stroke her nipples and gently palm both breasts. The more he stroked and teased the more excited she became until she said, \"You need to get your vest and shirt off, too.\"\n\nOnce they were off, she crawled on top and let her breasts lightly stroke his chest as she reached down to kiss him yet again. He reached behind her and let his hand slip down under her leggings to fondle her ass. Her cheeks were firm but with soft, satiny skin and she moaned as he rubbed them. \n\n\"No fair, you're feeling my ass and your pants are still on,\" she whispered in his ear before sitting up and grabbing his belt. After it was undone, she slowly pulled the zipper down to release a bulging cock. Reaching inside the opening in the front of the boxers, she grabbed it and pulled it out.\n\n\"Mmm, just like I remember,\" she giggled. \"Nice size. Feels good. Want to get completely naked?\"\n\n\"Yeah, I do,\" he responded as he sat up, slipped off his shoes and pulled down the pants and boxers. \"Now it's your turn.\"\n\nIn the candlelit room he saw her stand next to the bed and pull the leggings down to the floor. For the first time in his life, he was able to see a completely naked female in the flesh. Her enticing curves were accentuated by the shadows from the candle.\n\n\"You're beautiful.\"\n\n\"How can you say that? It's so dark in here,\" she laughed softly.\n\n\"I know what I know, and I know you're beautiful.\"\n\nShe lay beside him before they commenced to kiss and stroke each other softly. He let his fingers slip between her folds as she slowly pumped his cock up and down. As they both became more excited and their breaths came in little gasps, she whispered in his ear, \"Would you be interested in a little oral action?\"\n\n\"Mmm hmm. Yeah, that'd be great.\"\n\n\"Let me slide down here and check this bad boy out. Hmm. Just as nice looking as I remember,\" she whispered before she slowly licked him from base to tip.\n\n\"Like?\"\n\n\"Yeah. Definitely.\"\n\n\"Then relax back and let me have a little fun with him.\" She wet her fingers with her saliva and dragged them across his cock before slowly pumping him up and down. It felt wonderful but nothing like the feelings he got once she lowered her head to him again and took his entire bulb into her mouth. Her tongue rubbed up and down over the sensitive spot right below his knob as she slowly pumped him up and down, bringing him rapidly to the point of no return.\n\n\"Uh, Lissa, you've got me too excited. I'm gonna blow,\" he whispered.\n\nWhen she responded with an 'umm hmm,' the vibrations stimulated him even more. Suddenly, his torso rose up as he came with deep surges into her mouth. Once his moaning eased, he opened his eyes and glanced down at her. She was looking back up at him with his cock still in her mouth and an obvious grin on her face before she pulled away with a faint pop.\n\n\"Like?\"\n\n\"Amazing. Wow. Thanks, uh...\"\n\nShe lay there gently kissing his cock as it softened slightly before she crawled back up the bed and into his arms. \"Hey, I enjoyed it, too.\"\n\nHe gently stroked her back as she snuggled up with him. \"Any chance I can return the favor?\"\n\n\"Remember anything I taught you?\"\n\n\"Oh yeah. That night is imprinted on my brain, never to be forgotten,\" he said as he dipped his mouth to her breasts, kissing and licking them to her obvious delight. Once she was moaning in appreciation, he slid down the bed, let his knees hit the floor and brought his face to her pelvis. The wonderful smell of an excited female filled his nostrils and brain with wonderful memories. He slowly brought his tongue through the sparse hair and along her slit.\n\n\"Oh, God, that feels soooo good,\" she moaned, \"Keep doing it, oh, yeah, just like that!\"\n\nTravis let two fingers slide into her, rubbing her G-spot, like she had instructed him previously. He turned his attention to firmly licking and stroking her clit repeatedly in time with his fingers working their magic in her vagina. Her moaning continued louder and louder until she arched her back, clutched the sheets and cried out, screaming in release. He kept his attention on her pleasure as she seemed to rise up a second time, crying out as before.\n\nAfter a few seconds she patted his head whispering, \"Enough, please, go easy there.\"\n\nTravis eased off on the licking and stroking until he was merely holding his tongue flat up against her clit. After several minutes she gently patted his head and whispered, \"Come up here.\"\n\nAfter he crawled up her, she licked his face and kissed him lovingly. \"Mmm, tastes good,\" she chuckled. \"I like to taste myself like this. It's sexy.\"\n\n\"I like it, too,\" he responded as he bent over her yet again. They snuggled and kissed a bit longer before she asked him, \"Uh, might you be interested in anything more?\"\n\n\"What'd you have in mind?\"\n\n\"I bought some condoms just yesterday. Interested?\"\n\n\"You serious?\"\n\n\"Umm hmm. I think it's time...\" she responded as she sat up and reached over to a small paper sack at the end of her bed. \"Here, try this,\" she whispered as she tore one off the strip. \"You ever use one before?\"\n\n\"Uh uh. I think I can figure it out, though,\" he smiled. He tore open the envelope and pulled out the condom and rolled it onto his raging cock. \"Look, it fits. I'm glad you got large ones,\" he joked.\n\n\"Yeah! They came in three sizes; large, larger and largest,\" she teased.\n\n\"Oooh, you really know how to hurt a guy,\" he groaned.\n\n\"Hey, Trav, seriously, from what I've seen, you've got nothing to worry about. Uh, look, could I be on top?\"\n\n\"Sure. Why?\"\n\n\"It might be easier for me. I don't have a lotta experience with this...\" she replied as she gently rolled him over onto his back and crawled on top. They hugged and kissed for a bit until she asked, \"Ready?\"\n\n\"Yeah. You sure?\"\n\n\"Oh, definitely, I want this so much. Wanted it for weeks, months even,\" she sighed as she pulled herself up to straddle him. She grabbed his cock and gently slid it up and down her slit, lubricating and stimulating until he moaned softly right before she dropped down, impaling herself with his cock.\n\nAfter a few seconds she asked, \"You OK?\"\n\n\"Yeah.\"\n\nHe held her hips in his hands, guiding her up and down. It was a most wonderful sensation but after a while she whispered to him, \"Trav, maybe you should be on top after all.\"\n\n\"You sure?\"\n\n\"Yeah. I've decided I want you in charge.\"\n\nOnce she was off him, she stretched out and slid her legs apart as he crawled over on top. He was worried about finding her vagina with his cock, however she reached down and held him a bit, rubbed him between her folds until the lubrication seemed adequate.\n\n\"Here, push in a tiny bit. Yeah, there you go. OK, a bit deeper. Now, all the way. See? Easy-peasy!\" \n\nTravis found himself buried deep inside her and felt a wonderful, warm pressure along his entire cock. He so enjoyed the sensation that he lay there for a few seconds absorbing the entire sensation.\n\n\"Are you going to just lie there?\"\n\n\"No, but it feels so good, I want to remember this forever,\" he answered as he pulled out a bit and looked down at her. Her soft face was staring up at him intently with soft desire in her eyes and as he sank back down, her eyes closed and a look of ecstasy lit up her face.\n\n\"Ahhhh, so nice,\" she murmured, \"Again, please.\"\n\nHe rose up and again slid back down into her, hearing a similar response. Every time he sank back into her she would give a tiny sigh of pleasure while gripping his flanks. Eventually he plunged a bit faster and even deeper than before creating sensations he had never thought existed.\n\n\"Sweetheart,\" she whispered up at him, \"Change the angle a tiny bit. Come from a higher angle. Ooh, that's it. Now you're rubbing my happy button. Ooh, now you've got it.\"\n\nTravis got the hang of things, figuring out how to thrust and how to rub up against her clit. As he continued, her sighs morphed more into moans and her fingers were grabbing him harder and harder, her nails digging into his skin slightly. That unexpected sensation from her fingernails helped him with his control and he didn't feel an overwhelming urgency, no doubt aided by the previous blow job. He was plunging deeply, in and out, banging pubic bone onto her clit and enjoying the combined senses of extreme sexual pleasure with a sense of masculinity, of manhood, of control. Never in his life did he expect to have such powerful sensations overloading his brain, creating a sense of a new person, a new being and most importantly, a new man.\n\nHer moans became louder as she tipped her pelvis slightly and she clutched at him even stronger. Pretty soon her head curled forward and her brow creased deeply. \"Oh, Trav, feels soooo good. Don't stop!\" she said through gritted teeth. \n\nThere was nothing short of orgasm which could stop him at that point. He kept surging back and forth, in and out, until a light sheen developed on his back. Lissa's hands clung tighter and tighter until she threw her head onto the pillow, arched her back and screamed out, \"Oh, \n\nGod, oh God, oh God. Ooooh, so good. Ooooh, yessss.....\"\n\nSeeing her orgasm was like an electrical jolt to his cock and suddenly he felt the inevitable and surged deeper and deeper as she continued to moan and cry out. Once their orgasms subsided, he slowed down, eased off on the thrusts and tried to catch his breath. Eventually he stopped all together and opened his eyes just in time to see her open hers. A huge grin crossed her face and she reached up and grabbed him in a big hug.\n\n\"That was unbelievable, Trav. Absofucking unbelievable.\"\n\n\"Mmm-hmm, it was.\"\n\n\"I never thought it could feel so good. This was way more than just an orgasm for me.\"\n\n\"I know, I know. It felt like, uh, way better than earlier. Or at Halloween, even. I feel so close to you right now,\" he responded before giving her a soft kiss.\n\n\"Definitely close. Definitely way better. Oh, wow, what a, what a...\"\n\n\"What a what?\" \n\n\"I don't know. Like I said, 'orgasm' can't describe it. It seemed almost spiritual,\" she said.\n\n\"Yeah, spiritual. I agree. Maybe we should call it a \"spiritual event'.\"\n\n\"I like it. And if my parents want to know if I've had sex, I can tell them I went to a spiritual event,\" she giggled. \n\n\"Nice way to dodge the question,\" he chuckled.\n\n\"But there's one important thing we have to remember.\"\n\n\"What?\" he asked, alarmed.\n\n\"We don't want this spiritual event to create another event nine months from now. We'd better take care of the raincoat.\"\n\nTravis slowly pulled out, tossed the condom and rolled over on his back with her snuggled up along-side him, head on his chest. He lightly stroked her back as she gently rubbed his chest.\n\nAfter a few minutes she whispered, \"First time?\"\n\n\"Yeah, it was, and I'll never forget it. You?\"\n\n\"Technically, no, but emotionally, yes.\"\n\n\"What do you mean?\"\n\n\"Well...I did have sex, you know, regular sex a few times, but it wasn't nice and he never respected me and I never came. He just used me,\" her voice cracked and he could feel tears dropping on his chest. She gently wiped her tears where they fell before she went on, \"It wasn't anything like this. This was a thousand times better. Maybe that's why I turned to oral sex which never felt so...uh...uh... 'intimate.' That's the word I was looking for: intimate. Having someone put their cock in you makes you feel very vulnerable and, I think, it makes intercourse so much more personal. Oral sex? Well, not so much. \n\n\"This, tonight, was emotionally the best I could ever imagine. I've got to consider this my real 'first' time for making love and not just being screwed,\" she added.\n\nHe didn't answer or make any comment. They lay there quietly as he stared at the ceiling in the darkness. After a few minutes she asked, \"What are you thinking? You upset that I, uh, had already...?\" \n\n\"Upset? No, not at all. I'm the furthest away from being upset that you can get. You're right. This was super personal and I feel so close to you right now.\"\n\n\"Yeah, me too.\"\n\n\"I've got you and what's in the past is in the past. I hope I never meet the guy. Sounds like a jerk.\"\n\n\"Yeah, looking back on it, he really was.\"\n\n\"I am so glad to have found you. You have no idea.\"\n\n\"I thought I found you, Silly,\" she teased.\n\n\"Well, maybe. And I am so glad to have met Maleficent. She's one hot witch,\" he chuckled.\n\n\"You think? With her magic, wanna bet she can bring this big guy back to life once again?\" she giggled.\n\n\"Oh, I think she can. Here, let's give her a chance and see what she can do,\" he laughed softly as he pulled her over for another kiss.\n\nTrionyx54 -- "
    ],
    "authorname": "Trionyx",
    "tags": [
        "oral sex",
        "fellatio",
        "cunnilingus",
        "girl-on-top",
        "first time",
        "witch",
        "nerd",
        "missionary",
        "romance"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/maleficent"
}