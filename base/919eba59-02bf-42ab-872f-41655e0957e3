{
    "title": "Lost Camera",
    "pages": [
        "by Philip Johnson \n\nChapter One\n\nHer phone rang and when it's picked up I say, \"Hi Jennie, it's Alex. \n\n\"Alex, how are you?\" \n\n\"Almost as good as I'm likely to get. I called to see if you would like to spend the afternoon with me and since its July and hotter than hell, I thought we could rent a pontoon boat, have a picnic and maybe take a swim in the lake?\" \n\n\"Do you mean today?\" \n\n\"Yeah, sorry it's so last minute but I was supposed to work overtime and they cancelled it.\" \n\n\"I probably can but I'd have to be back by seven though. What time were you thinking?\" \n\n\"Let's see, its ten now so how about twelve or one o'clock?\" \n\n\"Should I wear a swim suit?\" \n\n\"Well, you can swim in street clothes, go naked and get arrested or wear a swim suit.\" \n\n\"Let's make it one instead of twelve then okay?\" Now, why what she wore made a one hour time difference I didn't know. \n\n\"See you then, bye.\" I called and reserved a boat then headed to the store for some things for the picnic basket.\n\nI've been dating Jennie off and on for a year or so. I'm thirty three and she is a few years younger than me, something to look at to say the least, has a great sense of humor and sex with her is mind blowing. But she would be the perfect dumb blond except she has brown hair. Actually she isn't dumb but she sometimes talks and acts without thinking first and can say some of the dumbest things sometimes. About the time I think maybe I'd like to see more of her she does or says something really strange and causes me to reconsider. Think of her as a Playboy centerfold. She looks that good looking and acts about as smart as that picture.\n\nI packed a picnic basket, put ice and drinks in the cooler, grabbed my camera and a blanket and headed to Jennie's apartment. I went to her door and knocked and waited. Then knocked and waited some more. Jennie finally answered the door in a bikini and she took my breath away. \"Sorry Alex I was putting my suit on and it took me a minute.\" \n\n\"That suits so small I can't imagine it took very long!\" \n\n\"I just need to get my sandals and I'm ready.\" \n\n\"Are you going to walk across the parking lot in your bikini?\" \n\n\"Oh... no I need a cover don't I?\" \n\n\"It's up to you. I think you look stunning but people just might stare at you.\" Jennie got her cover and sandals and we headed to the lake. It took about thirty minutes to get to the marina and maybe another thirty minutes to get the boat and life jackets. \n\nWe pulled away from the marina and Jennie took off her cover. God what a view. She was the reason I brought the camera! I ignored the helm and took several pictures of her. I set the timer and took several more with me holding her around the waist and my hand very close to her breast or her sitting in my lap. After the last one I had to adjust my suit just a little and sit down at the helm for a bit. I would need things like this to get me through the long cold winter. I reluctantly returned to the helm and we made our way up the lake. We were in no hurry so I eased off the throttle and enjoyed the breeze and the view. I know it's not polite to stare but I had my sunglasses on so she would never know. Besides, how could I not stare? Her suit was hot pink and very, very small. Her assets were not. \n\nThe lake we are on is Dale Hollow Lake in southern Kentucky and Tennessee. A very large Corps of Engineers lake so there are no lake front cottages. It can get busy in the summer but if you go north toward the smaller end and get into one of the coves you can get away from the speed boats and the water skiers. It can be amazingly quiet up there. We decided to ride for a little while closer to shore and enjoy the cool breeze and the lake view. The sky had large white puffy clouds here and there and the weatherman promised good weather at least through tomorrow. \n\nI asked Jennie if she would like something to drink. \"What do you have?\" \n\n\"I have diet Pepsi, water, wine and Sam Adams.\" \n\n\"Ooh, I want a Sam Adams!\" \n\n\"Coming right up.\" I got one for her and myself and slipped the cans into insulated covers handing one to Jennie. Ice cold beer, hot summer day and Jennie. Life was good. I abandoned the helm once again and took more pictures of us. I needed proof that I was with this beautiful creature.\n\nWe had been cruising for maybe one beer. That was how I was keeping time I decided. One beer or one glass of wine or one Pepsi. That seemed more significant to me than say, a half an hour. Anyway, I asked Jennie if she was getting hungry. I guess it was a tough question because it took her a couple of minutes to decide. \n\n\"Yeah, I guess I am Alex.\" I was glad she worked it out. \n\n\"I'll head toward the best area I know of for a picnic then.\" We cruised up the lake at a lazy pace because I figured if it took her that long to decide she was hungry she could wait a little longer to eat. As we continued I asked Jennie if she had put sun lotion on yet. The sun on the water could burn you to a crisp if you weren't careful and I didn't want that beautiful creature damaged in any way. Another pause. \"I guess I didn't Alex, did you bring any?\" \n\nI said, \"As a matter of fact I did bring some. Would you like me to put some on you?\" \n\n\"Would you?\" Now I can be a little slow some times but the thought of rubbing lotion all over Jennie required no hesitation on my part at all. \n\n\"I'll fix you up Jennie!\" I shut the boat off this time. I needed to be able to focus so I wouldn't miss any important parts. I was having trouble finding the lotion. I knew I had packed it now where the hell was it. I dug through the basket and it wasn't there, I checked the blanket in case I folded it in there and it wasn't. The only place left was in the cooler. I wouldn't do that would I? I lifted the lid and there it was. Nicely settled in the ice! This could be hard for her to take. \n\nI told her, \"I put it in the cooler by mistake Jennie, it's going to be colder than a witches heart for quite a while.\" \n\n\"That's okay Alex, I'm hot anyway.\" She had to be kidding. If she didn't have a heart attack when this hit her skin I'd be surprised. I went to the bow where she was lying and said, \"I'll try to warm it in my hand but it's going to be cold!\" \n\n\"You're sweet Alex. The lotion will feel good. My skin feels dry and tight right now.\" \n\n\"Okay Jennie here goes.\" I poured a good amount in the palm of my hand and it was like ice! I held it there for a minute then since she was lying on her back I started on her neck and upper chest. As soon as the lotion hit her hot chest she jumped up and said, \n\n\"Shit Alex that's cold!\" Duh. I wonder why. \n\nI repeated myself. \"That's what I just said.\" \"Maybe if you used a smaller amount next time and I'll be ready.\" \n\n\"Okay.\" As I got ready to put more in my hand I noticed the ice cold lotion had caused her nipples to jump up like little thumbs in her tiny suit! Get the camera, get the camera! I grabbed the camera and took some pictures up kind of close I guess you could say. \n\n\"Why take my picture so close Alex?\" I had to tell her. What lie would sound reasonable? \n\n\"I wanted to get a picture of your nipples sticking up from the cold lotion.\" \n\n\"Oh is that all? Here let me help.\" and she pulled her top to one side! Oh shit! Camera! I took more pictures. A lot more. \n\nI kissed her and her nipples and said, \"Thank you Jennie!\" \n\n\"No problem Alex. Your kiss felt good!\" Unfortunately she put her top back. I did more lotion but I had no idea if I did a good job. My hands were one place and my eyes were another.\n\nOnce I had regained control of my personal situation we motored on. This day could make me old before my time! I'll end up looking like I have a delayed case of Progeria. \n\nWe rode along the shore line looking for a smooth area without too much slope so we would be comfortable. We wanted to be able to swim and easily get out of the lake and lie on the blanket. A lot of the shoreline where we were was too steep to be comfortable. We found a promising looking spot and pulled in but realized there was nothing to tie the boat to that the rope would reach so we continued the search. Not much farther along there was another and it looked like it would work nicely. We pulled in and Jennie jumped to shore. Now there was something worth watching. I keep getting sidetracked. Jennie tied us to a bush and we went for a swim. The water felt fantastic! I didn't realize how hot I was. Jennie looked sensational in the water. It would have helped if she had long flowing hair but it was cut short. It was very cute but not sensual. Like she needed help.\n\nI swam over to her and put my arms around her and kissed her as we stood in neck deep water. That more than made up for the short hair. Jennie said, \"You sure know how to kiss Alex!\" \n\n\"You inspire me Jennie. Shall we try that again?\" We kissed again only longer that time. \n\n\"Whew Alex, maybe we should have lunch now.\" Like I said she wasn't dumb. She knew where that could go and so did I. Oh well, I guess I'd have to settle for food and wine instead. We got on the boat and Jennie sat at the table while I served cold chicken, cottage cheese, coleslaw and cubed melon and I poured us some white wine. We took our time eating and talking and I refilled our wine glasses until I had to open the other bottle. \"That wine tastes so good Alex.\" \n\n\"I'm glad you like it.\"\n\nI topped off her glass. Now if you were looking for me to display high moral values you \n\nwould be disappointed I'm afraid. It was my intention to use wine and line to win favors from Jennie. I wanted to see those thumbs on her chest again! You remember I said sex with her was awesome or something like that so you know I've been there before. That doesn't count. That was then and this is now. With a little help from me we finished the second bottle of wine. We lay back against the seat next to each other and closed our eyes for a minute. \n\nChapter Two\n\nAfter sitting there in the sun, full of wine and a little chicken I said, \"I need to get in the water and cool down again. Care to join me?\" \n\n\"I think I better, that wine has me so mellow I need to wake up a little.\" Well damn, did I over do the wine and under do the line? I helped her up and we dove off the side of the boat. The cool water helped some. We just floated and soaked for several minutes swimming just enough to keep us off the bottom. I eased over to Jennie and kissed her shoulder. \"That felt good Alex.\" \n\n\"If that felt good this should feel even better!\" and I kissed her chest right next to the bikini which was very close a thumb. Okay, nipple. \n\n\"Oh you're right that did feel better!\" \n\nI managed to reach bottom with my toes and said, \"This will be better yet.\" and I moved her top and kissed the nipple and put it between my lips. \"Oh yes, Alex that felt so good!\" I took the plunge and undid the top at her back and pulled her to me so I could pay my respects to all of both breasts. Jennie tilted her head back and encouraged me to continue and I did. I'll spare you the details but we ended up on the blanket with nothing on. We were more or less safe from passing boats but not entirely. Jennie didn't seem to care and neither did I. Afterward I took our picture lying on the blanket naked. Jennie with her eyes closed and me still saluting the clouds so to speak. These weren't pictures you share with your family or friends. Not even if I was drunk at the bar. We lay there for a while and Jennie leaned over and kissed me and got up saying she had to pee. I assumed she would walk into the water or over to the bush since she was still naked. Jennie just squatted and peed on the beach a few feet from the blanket! Then she waded into the water. Only Jennie would do that. I joined her in the water. I wished I could live on the lake and feel that warm softness everyday. For some reason bathtubs and pools just aren't the same to me. \n\nI said, \"I hate to say this Jennie but we have to get back before the marina closes.\" \n\n\"I hate to leave here Alex, I'm so comfortable. Let's do this again real soon then okay?\" \n\n\"I'd love to.\" We picked up the blanket and shook it out and folded it. Jennie untied the rope and we shoved off. Then Jennie put her suit on! That was a definite turn on but a risky one! We headed for the marina at a good clip. \n\nWe made it to the marina with thirty minutes to spare. We loaded stuff in the car and headed home and I walked her all the way to her apartment door. Since she had other plans for seven I gave her a long kiss and said I'd call her and then headed home. Being a bachelor has it's rewards but coming home early after an afternoon like that left me feeling like I'd just read the first half of a great book and it was taken away from me. I wanted to finish the story. \n\nI made a light dinner then considered my options. It was too late to call anybody, I almost never watch TV except the occasional movie, or I could read. On rare occasions I would go down to the bar and have a couple. I only allowed myself to do that on rare occasions because otherwise I'd be a fat, bankrupt alcoholic. I grabbed my keys and went to the bar. I saw a couple of guys I knew and we told lies and cursed the government. I hit my two drink limit and headed home. \n\nThe next few days were the usual work, eat and sleep. Nothing exciting but nothing harmful either. I had dinner with Rachel on Wednesday night and we had a lot of fun but it seemed we were more friends than potential lovers. She's a neat gal and I always enjoy being with her but that's it. On Thursday I worked late which made me more money so I could afford to wine and line again one day. \n\nSaturday morning it was overcast and threatening rain but at least it was still July and warm. I was considering my options when I thought I'd have some more coffee and look at the pictures of Jennie. I turned on the computer and reached in the closet for the camera and it wasn't there. Now where the hell did I put it? I'm getting as bad as Jennie! The more I looked the more I knew I wouldn't find it because it was still at our picnic sight. Damn! That was a four hundred dollar camera to say nothing of the pictures on it. \n\nI got in the car and tore down to the marina and rented a fishing boat with a large motor so I could get up there quickly. It had already been there a week so another hour wouldn't matter but I went full out anyway. I was up there in maybe twenty minutes. I jumped off the boat and looked all around and it was nowhere to be found. I was so mad I was cursing myself. I couldn't even blame Jennie. I didn't have four hundred bucks to throw away. I just stood there looking out over the lake like I expected it to magically appear.\n\nI heard thunder in the distance so I jumped in the boat and hauled for the marina. I almost made it. It poured down just hard enough and long enough to soak me to the skin.\n\nThat took my foul mood up another notch. I asked at the marina if anybody had turned in a camera and they said no. I didn't really expect a different answer but I had to ask anyway. Well, I hope somebody enjoys the camera. I hope they choke on Jennie's pictures and die! I also hope Jennie never asks about the pictures.\n\nI went home and sulked, pouted and generally stomped around the apartment. It's a good thing I'm on the ground floor. I was mad at myself the rest of the day. I had etched my name and phone number on the bottom of the camera along with the word \"reward\" but that was most likely a waste of time. Sunday I got groceries and ran other errands. I stopped and looked at new cameras and was happy to see they had come down in price but I would still have to wait awhile. Of course if I went to the lake with Jennie again I'd find a way to buy one regardless! I finished my errands and headed home. \n\nAfter putting the groceries away I noticed I had a message on the machine so I punched it and it was Gail. She was looking for some company and wanted to get together and watch a bad movie and eat Chinese. I could use a friendly face that's for sure. I called Gail and invited her over. There was sure to be a bad movie on cable. Gail said she'd bring the Chinese. \n\nChapter Three\n\nGail arrived about six and we set the food out. And the chop sticks. I said \"Are we really going to eat with those things?\" \n\n\"Sure, it's part of the experience grump!\" \n\n\"Why the hell did they ever start using these things in the first place? Can you imagine, thousands of years ago some Chinese guy was sitting in the forest and decided he was going to spend five years whittling a tree down to two little square sticks, then spend another five years to learn to eat with these two sticks. Where do you suppose the inspiration came from? It's hard for me to fathom!\" \n\n\"You are so crabby and negative. I should have made you pay for dinner!\" \n\n\"Sorry, I lost my four hundred dollar digital camera and it's my fault and I'm still mad!\" \n\n\"How did you manage to do something like that?\" \n\n\"I left it at the lake. When I went back a week later it was gone!\" \n\n\"Can you imagine that? A digital camera left on the beach for a week and it wasn't there when you went back! Wow!\" \n\n\"You are such a smartass.\" Gail just smiled. I should tell you Gail and I go way back. She is athletic and in fantastic shape but not masculine. She isn't the fine boned china doll type either. We frequently watch football in the fall and fight about who is best. We have also made love once. Neither she nor I expect the other to behave when with those of the opposite sex. All in all a fantastic friend and a good lover. \n\n\"So tell me lover, were there any pictures on this camera?\" \n\n\"Oh hell yes. A lot of them.\" \n\n\"And were these pictures of the lake and the trees?\" \n\n\"Some maybe.\" \n\n\"Alex you're full of shit.\" \n\n\"Well okay there were some um, artsy pictures.\" \n\n\"You convinced some babe to take it all off and took her picture and now you don't have them. Let me guess she doesn't know any of this.\" \n\n\"That's part of it.\" \n\n\"What do you mean part of it? That's quite a lot!\" \n\n\"There were also pictures of me on it.\" \n\n\"You're going to make me work for this story aren't you?\" \n\n\"Okay dammit, there were pictures of me on it and I was bare assed and had a woody!\" \n\n\"Now we're getting somewhere.\" \n\n\"Somebody is having a great time looking a couple of naked people and laughing their asses off looking at me!\" \n\n\"Honey, if it's a woman and she's looking at you, she ain't laughing!\" That made me take a breath. That was about as close to a compliment as I had ever heard from her. \n\n\"Thank you Gail. Keep that up and you'll take all the steam out of my tantrum. You also might give me a big head.\" \n\n\"That wasn't what I had in mind! Do I know the lady in question?\" \n\n\"I don't know if you do or not. Her name is Jennie and she lives in the apartments over on....\" \n\n\"Lancaster, Jennie Lancaster, am I right?\" \n\n\"Damn Gail, how do you know her?\" \n\n\"I don't remember. I really don't know her but I've met her. Shit Alex, she is one gorgeous woman!\" \n\n\"No shit.\" \n\n\"Why the hell are you here with me then?\" \n\n\"The reasons are many Gail. Jennie is a sweet, stunningly beautiful woman and she seems to really like me.\" \n\n\"I feel a \"but\" coming.\" \n\n\"But, she is a little ditzy.\" I have fun with her but sometimes by the end of the day she is driving me nuts!\" You on the other hand are a lot of fun to be with, sharp as a tack, very easy on the eyes and only occasionally drive me nuts!\" \n\n\"Alex you have never paid me a compliment in all the years we've known each other. You must be really stressed!\" \n\n\"I have too Gail!\" \n\n\"Okay Alex, I'll count them as you name a few.\" \n\n\"Now stop that!\" \n\n\"Gotcha!\" \n\n\"This is embarrassing. I've never told you I thought you were good looking?\" \n\n\"Not when I was conscious or sober enough to remember.\" ",
        "I stepped forward and holding her face between my hands I kissed her and said, \"I'm so sorry. That was nothing less than clumsy and insensitive on my part. You are indeed very good looking Gail.\" \n\n\"Thank you Alex, but I wasn't fishing for compliments just an observation.\" \n\n\"None the less I apologize and mean what I say.\" \n\n\"We better go finish eating our cold Chinese with those little trees.\" \n\n\"Gail if I didn't know better I'd think I made you uncomfortable telling you, you were good looking.\" \n\n\"You did not!\" \n\n\"That wasn't even a convincing denial!\" Damn I was having fun! \n\n\"Okay, maybe you did make me a little self conscious but that's all!\" I stepped over and kissed her firmly. \n\n\"Of course I think you are even better looking naked!\" \n\n\"Alex now stop it! You didn't even notice how I looked naked. You're just trying to rattle me!\" \n\n\"Gail, I'm a thirty three year old guy with good eyes and a good memory. When I see a woman naked and she looks fine I don't forget!\" Gail was actually blushing now. I should have felt guilty but I didn't. Besides I felt shitty for not telling her before that she was a good looking woman. I can be so insensitive some times. \n\n\"Alex you are making me blush. I've known you for years and now you make me blush. Now be honest, do you really think I look fine or are you trying to put salve on your conscience?\" \n\n\"I admit to a guilty conscience but I meant every word of it Gail.\" \n\n\"Thank you. I believe you think so. I don't believe I am but I believe you think so and that's close enough.\" \n\nI continued. \"I remember we were lying on the floor, leaning against the couch when I started to make love to you. I remember taking your clothes off of you and seeing you naked for the first time. I remember being impressed that you were hiding a great body under those loose clothes and I remember us making love very clearly!\" \n\n\"My God you actually remember that from how many months ago?\" \n\n\"About nine months ago.\" \n\n\"You even remember when! I'm impressed!\" \n\n\"I was too. That's what I'm saying!\" \n\n\"You are such a shit, you know that?\"\n\n\"I believe I've heard that somewhere yes.\" Gail came over and kissed me tenderly. \n\n\"Now eat your Chinese!\" We ate our Chinese. Food had become a defense line for Gail. \n\nI said, \"You know you're really best of friends when you take the other for granted. It's not a good thing to do but it happens sometimes. I took you for granted.\" \n\n\"You are going to make me cry here in a minute Alex.\" \n\n\"That's not my intention Gail. Sorry if I sound serious here but you are my dearest friend and I repeat, you are great looking in and out of clothes. Sorry I don't have a camera anymore or I'd take your picture!\" \n\n\"Oh sure now that you don't have a camera you want to take my picture!\" Gail was having fun at my expense now. \n\n\"Well even if I did have a camera you have all your clothes on.\"\n\nI was trying to turn the tables but Gail was quick. \n\n\"You only take pictures of women if they are naked?\" \n\n\"That certainly helps!\" \n\n\"You are so shallow\" \n\n\"But honest!\" \n\n\"So if I take my clothes off it doesn't count because you can't take my picture?\" \n\n\"If you take your clothes off, we won't have time for pictures!\" \n\n\"I see. You've been trying to get me to take my clothes off haven't you?\" \n\n\"Only since eating Chinese. There must be something in the egg rolls.\" \n\n\"Maybe I'll just take my clothes off and see if you're serious.\" \n\n\"If you take your clothes off, you're going to see more than if I'm serious because I refuse to be the only clothed one here!\" Gail looked at me and started to strip. I looked at Gail and matched her article for article. Once we were naked I said, \"There is the proof you have a great body. I rest my case.\" \n\n\"You go ahead and rest your case because the rest of you isn't going to get any rest!\" We made love on the living room floor. Very close to the Chinese food. We made love for a velly long time!\n\nAfterward we lay next to each other. Gail said, \"So would you rather have watched an old movie?\" \n\n\"Which one?\" \n\n\"You are a total shit. I said it before and I'll say it again. A total shit!\" \n\n\"You love me and you know it!\" \n\n\"You're ego is running your mouth. I'll admit to liking you a lot.\" \n\n\"Thank you. That means a lot to me.\" \n\n\"There you go being serious again. Every time you do that you make my eyes tear up.\" \n\n\"When I get a new camera can I take your picture?\" \n\n\"Not with my clothes off, you lose cameras!\" \n\n\"I've only lost one!\" \n\n\"We'll see hot shot.\" \n\n\"Can I take your picture with your camera then?\" \n\n\"With my clothes off?\" \n\n\"Yes.\" \n\n\"Maybe.\" \n\n\"You're not big on commitment are you?' \n\n\"I prefer to think of myself as cautious.\" \n\n\"I just prefer to think of you!\" \n\n\"Now stop that!\" \n\n\"Will you bring Chinese when you come the next time?\" \n\n\"What makes you think I'll come again?\" \n\n\"I was hoping you would miss me.\" \n\n\"There is that I admit.\" \n\n\"Don't make it too soon, you wore me out!\" \n\n\"I can see how worn out you are. Your fatigue barometer is telling another story!\" \n\n\"I don't think it's fair that women don't have external organs. You have all the advantages!\" \n\n\"You're breaking my heart lover boy. Now about that barometer!\" I sure slept well that night!\n\nChapter Four\n\nMonday and back to work. It's not a great job but it isn't bad. The pay is pretty good and it's clean work. I'm in computers along with half the world. I tried to get my boss to let me work from home but he insisted I would miss the social aspects of working outside the home. In other words, no.\n\nThursday after work Rambo called and wanted to get together and hoist a couple as he likes to say. I said, \"Sure but it has to include dinner. I'm starved.\" By the way Rambo's real name is Glen. I call him Rambo because he's into hunting, fishing, camping and all that testosterone stuff. We both work in computers in case you wonder how we ever met. I met Rambo at the Surf and Turf bar. I had the turf and a beer. Rambo had a beer. We talked and Rambo ate my fries. I said, \"Are you too cheap to buy your own dinner or has the boss fired you again?\" \n\n\"I'm still employed but I'm just not hungry.\" \n\n\"Hell no, you're not hungry, you just ate half my dinner!\" \n\n\"Maybe that's why. I didn't touch your beer though.\" \n\n\"That's because you don't like Sam Adams.\" \n\n\"Why don't you learn to drink good beer.\" \n\n\"Like Bud?\" \n\n\"Sure\" \n\n\"Not in this life time!\" Rambo wanted to talk about a position that was opening up in our department. I knew he didn't want my advice on skinning a deer. After convincing Rambo to stay where he was I went home. I had to pay bills and do that responsible adult stuff that gets in the way of fun and relaxation. \n\nThe phone rang and a voice said, \"Is there really a reward for your camera?\" \n\n\"Yes,\" I said excitedly. \n\n\"How much?\" \n\n\"One hundred dollars\" \n\n\"Can I get that in stud service instead?\" \n\n\"What? Who is this?\" \n\n\"It's Gail you dip. I can't believe I fooled you.\" \n\n\"You are toying with a desperate man.\" \n\n\"I was just calling to see if you ever heard from anybody.\" \n\n\"Hell no the camera is worth more than the reward and they probably assume that much. Besides they have all those pictures of Jennie Lancaster in the buff. Those are probably worth more than the camera!\" \n\n\"You sure screwed yourself on that one sweetie.\" \n\n\"Tell me about it! I'm waiting one more week them I'll start looking for another camera.\" \n\n\"Is that so you can try to get my clothes off again?\" \n\n\"I would never do that unless I thought it would work.\" \n\n\"Alex?\" \n\n\"Yeah\" \n\n\"Thanks for the other night.\" \n\n\"Don't thank me honey, you supplied you and the dinner. I was just there.\" \n\n\"You were there with me and we made sweet music didn't we?\" \n\n\"We sure did do that. I still haven't recovered.\" \n\n\"Bull shit but it's nice to hear. That's all I had. Hugs to you and I'll talk to you later.\" \n\n\"Bye\" Gail is one of a kind. If she ever gets married it will be a big loss to me. If she doesn't get married then all the guys around here are gay. Except me of course! \n\nThe boss just told me he wants me to go to Memphis for a week and get in-serviced on a new system that's coming up. Do I want to go? Hell no. What did I tell the boss? Hell yes! I do like being employed. I left Monday morning and drove. I'm not afraid of flying but I just prefer having my own wheels. The classes started Tuesday and it was obvious I needed to be there. There were a lot of changes coming down from the home office. As long as I was on the inside track I felt pretty safe. \n\nIf I'm out of town I usually check my answering machine. Even in this age of e-mail some people insist on the telephone. On Wednesday evening I checked the messages and after listening to Rambo rant on about my bad advice and Gail just checking in with me,\n\na strange voice came on. I thought \"Gail, you can't get me twice!\" The voice was definitely female and after a few words I knew it wasn't Gail. The voice said, \"I found your camera at the lake a few days ago. I didn't see your etch on the bottom at first so I took your memory stick and put it in my computer.\" I thought , oh shit here it comes! \n\n\"I have to say she is a spectacular looking woman. I also have to say you look incredible yourself!\" I sent her an email as she requested and I gave her my cell number. When she called the next night she again complimented me on my looks. \"Thank you, now about the reward money.\" \n\n\"How much.\" \n\n\"One hundred dollars.\" \n\n\"You must want this camera pretty badly.\" \n\n\"The camera and the memory stick with the pictures.\" \n\n\"Naturally. But I don't want your reward.\" \n\n\"You don't?\" \n\n\"No, I want to meet you.\" \n\n\"I don't think that would be such a good idea.\" \n\n\"I think it would be an excellent idea.\" \n\n\"I'll just send you the money.\" \n\n\"No, I have no need of your money.\" \n\n\"I'm in Memphis right now in school and I'll be here for at least another two weeks.\" I lied. \n\n\"I can wait. Give me an address where I can send you something. You will really like it I promise you.\" \n\nI said, \"Address it to S. Adams,\" and I gave her my work address adding put department three on it. \n\n\"Thank you Mister Adams. In a couple of weeks or so I'll call you again and see if you have reconsidered. Basically I'm holding your camera hostage. I assure you I'm not a dangerous nut and in fact you just might be pleasantly surprised if you saw me. I'll talk to you soon. Bye\" Now that was one weird call. She had a hell of a nice voice I'll admit that but that was weird. Holding my camera hostage? That was a new one. At least I knew or a least hoped Jennie's pictures were safe. \n\nI called Gail and thanked her for the call then told her about the call. She said, \"I think you handled it right. It would really be unusual for a woman to be a molesting nut case but why take chances? But I also have to admit it really makes one curious.\" \n\n\"I have to admit to being curious but also very wary. What do you suppose she is sending me?\" \n\n\"My guess is a picture of your camera with a gun to its lens, or its battery ripped out.\" \n\n\"You're a laugh a minute you know that?\" \n\n\"It's a talent I have, what can I say?\" \n\n\"Say good bye.\" \n\n\"Good bye\" That woman sure keeps me going. \n\nThe classes kept my mind pretty busy so I didn't have time to dwell on my camera except in the evenings. I did remember to call my department and told them of an envelope or package coming addressed to S. Adams and to hold it for me if it arrived before I got back. \n\nThe week went fast and I drove home after the last class Saturday, getting in about midnight. I was more tired from the classes than I would have been from working. I had a message from Jennie saying to call her. Oh damn, what would I tell her? I had to tell her the truth at least more or less yet make it sound like no big deal. I listened to my other messages then went to bed. I could worry about it tomorrow and call her maybe late tomorrow evening. That might buy me a couple of days. I didn't get up until ten the next morning and spent an hour making love to my coffee pot. Just staying home and feeling sorry for myself seemed to be the thing to do. Fat chance. The door bell rang. It was only Gail. No not Only Gail. I meant I was dreading seeing anybody but she was okay. I let her in and she kissed me on the cheek and got coffee. We sat at the counter and she asked me \"Have you heard from the terrible lady or received a piece of the camera strap in the mail?\" \n\n\"Gail Bennett, you crack you up.\" \n\n\"Grouch!\" \n\nI kissed her and said, \"Sorry. Yeah I guess I am. I worked my ass off in class for a week then drove straight home last night and I feel more hung over than if I'd been drinking.\" \n\n\"Why don't we go for a drive? I'll do the driving. At least it will get you out of the house and in some fresh air. Sitting here staring at the wallpaper will make you feel worse. Trust me on this one.\" \n\n\"How would you know?\" \n\n\"I've had my share of really bad days and spent them staring at wallpaper. It doesn't help and in fact makes it worse as I said.\" \n\n\"I accept your offer dear lady. Would you like me to change?\" \n\n\"Yes I'd like you happier.\" \n\n\"No, screwball, I mean clothes.\" \n\n\"Did you shower?\" \n\n\"Yes.\" \n\n\"Then no, not unless you want to.\" \n\n\"Why do you care if I showered if we are only driving?\" \n\n\"I don't want to be in a closed car with you if you spent umpteen hours in class and on the road then didn't shower.\" \n\n\"Always thinking of yourself.\" \n\n\"That's called self preservation.\" \n\n\"Let's go wherever we're going.\" \n\n\"You are going to be a laugh a minute I can tell.\" \n\nWe drove for a while and ended up near Dale Hollow State Resort Park. \"Why are we here?\" \"We are going to go for a walk in the woods and get fresh air that's why.\" \n\n\"If you say so doctor.\" We walked for quite a while. Damn if the doctor didn't know what she was talking about. \n\nWhen we finally got back to the car she said, \"Now we are going to my place for an early dinner.\" \n\n\"You had dinner planned did you?\" \n\n\"Pretty much yes.\" \n\n\"How did you know I'd agree?\" \n\n\"Like I said, I've been there before, besides I've known you for quite a while now. You don't want to go home yet.\" \n\n\"Your crystal ball is working pretty good sweetie! Take me to your house and feed me. But you have to provide coffee too!\" \n\n\"No dessert?\" \n\n\"What do you have?\" \n\n\"I'm not sure, we'll have to wait and see.\" We went to Gail's apartment. After dinner we had coffee and I said, \"You should move into the apartment next to me. We would save on gas and phone calls.\" \"Sure and then you'll marry the woman who has your camera hostage and I'll be stuck living next to a crabby grouch that is living a miserable life with a sixty year old lady blackmailer.\" \n\n\"My God you paint a horrible picture.\" \n\n\"Never mind about the apartment next door.\" I could never look you in the face again being married to a blackmailing senior citizen.\" \n\n\"Life can get complicated can't it?\" \n\n\"What about dessert?\" \n\n\"It was going to be me but since you don't want me living next to you I've changed my mind.\" \n\n\"My God you are one complicated woman. I always end up feeling a little dizzy after I've been around you.\"\n\n\"You get dizzy because you've been around me, isn't that what you meant?\" \n\n\"If you say so.\" \n\n\"You're hopeless.\" \n\n\"Was dessert really going to be you?\" \n\n\"Yes.\" \n\n\"Can I change my story?\" \n\n\"Yes.\" \n\n\"Can I just say I want you?\"\n\n\"Yes!\" You said the magic word so your prize is me!\" \n\n\"My luck has changed.\" Yes, we made love again, what can I say? Gail took me home early simply because I fell asleep with my head on her belly. When we got to my place I said, \"Thanks Gail. You saved me from myself today. And thank you for the wonderful dessert!\" \n\n\"It was a sacrifice on my part but what are friends for?\" \n\n\"You stood up to it well. Good night friend,\" and I kissed her good night. I called Jennie before I fell asleep on the couch. \n\nShe said, \"Hi stud!\" \n\n\"Hi Jennie, what's up? I held my breath. \n\n\"I just wanted to see how you were doing and see if you wanted to do the boat thing again one of these days.\" \n\n\"I'd love to but I'll have to get back to you. Work has been hell and looks like it will be for a while yet. Can I call you in two or three weeks?\" \n\n\"God Alex, that long huh?\" \n\n\"It doesn't look good right now sweetie.\" \n\n\"Okay then I guess I'll have to wait. Bye.\" I got a package in the mail a few days later. It wasn't from the blackmailer but the return address was my address. Weird. I opened it and pulled out an 8X10 picture. It was Gail. Nude but with her back to the camera. Damn she looked nice! The note said, \"Maybe just this one time.\" Thank you Gail. I called her right away but she was out so I just left a message of thanks and it meant a lot to me.\n\nChapter Five \n\nThe package finally came for S. Adams at work a few days later. I didn't open it until I got home. I had no idea what to expect. I cut the flap with a knife and pulled out two photos. One was of Jennie in all her glory! What a body! The second one was a close up of me. I was on my back next to Jennie. I had both of my hands under my head and I was pointing at the sky if you know what I mean. This woman was cold! She really had my pictures! The note said, \"Since I think we will be bargaining I thought you should see just a little of what you will be betting with. It's a simple matter of I have something you want and you have something I want. The solution can be very simple, painless and won't cost you the one hundred dollars. The ante to start the bargaining is an inexpensive dinner with coffee. See how simple, adult and cheap this can be? With love, just call me Gina.\" \n\nWhen I got home I was going to give Gail an up date but there was a message on the answering machine saying she would be in Florida for two weeks. Her grandmother was very ill and had asked for her. So Gail got some vacation time and flew to Florida to be with her. She said she tried to call me but kept missing me and would call me when she got home. She said check your e-mail once in a while! I guess I'm not very good about that. I logged in and had a long and very nice email from Gail. I sent her one and included the information about the package from \"Gina\". I told her I got a call from Jennie and dodged that bullet for at least two weeks. I said to send me more email and I promised to check more often. \n\nI was home from work two or three days later when the phone rang. It was \"Gina\".\n\nI paid more attention to her voice this time and it had a nice southern \"lilt\" and sort of a low sultry sound to it. If the situation wasn't so weird I'd be fascinated.\n\nGina asked, \"Did you get the package I sent?\" \n\n\"Yes I did Gina.\" What did you think?\"\n\n\"I don't think I captured my best side but other than that I don't know what to think.\"\n\n\"I think you captured yourself quite nicely Alex.\" \n\n\"So how does this bargaining begin?\"\n\n\"I want to meet you and have you buy me a very inexpensive steak dinner for starters.\" \n\n\"I need to know what you mean by starters. A steak dinner is no problem but this could drag on indefinitely and I'm not that interested in the pictures and the camera can be replaced.\" \n\n\"I quite understand that so my demands will not be unreasonable but I must make them in person only.\" \n\n\"You have to be one strange lady to do all this over a couple of pictures.\" \n\n\"Oh I'm not strange you'll see that for yourself and thank you for calling me a lady. You could call me far worse.\" \n\n\"Maybe I will but right now I don't know you and I seriously doubt your name is Gina.\" \n\n\"So what do you say? Do we have an agreement on the steak dinner at least?\" \n\n\"Where did you have in mind?\" \"There is a small steak house five miles south of Livingston. It will be on the west side of the road and I think it's call Lou's or something like that. It's hard to miss. They have very nice steaks and they are reasonable. I don't drink so there will be no bar tab. We can have a very pleasant and civilized dinner with coffee afterwards and I will put my cards on the table for you.\" ",
        "\"And then?\" \n\n\"And then we will see what we see.\" \n\n\"When did you see this happening?\" In spite of myself I was enjoying this little mystery being spun by the lady with the sexy voice. \n\n\"What evening is convenient for you Alex?\" \n\n\"How about tomorrow night? At say half past six.\" \n\n\"That would be perfect.\" \n\n\"How will I know you Gina?\" \n\n\"I'll know you remember?\" \n\n\"Oh yeah.\" I had no smart remarks for that one.\n\n\"I look forward to meeting you Alex. Oh and by the way my real first name is Elise. Bye.\" So I would meet her tomorrow night. It would be Thursday so I wouldn't even be giving up my weekend. \n\nI went to my computer and sent Gail an e-mail with all the details. I said in case she abducts me and makes me her sex slave you will be able to help the police save me. I went on to say I was willing to bet she would be short, dumpy and sixty years old at least.\n\nSexy voices never went with sexy people. I also admitted I was intrigued by the whole thing. I said I missed my best friend a lot and signed off. \n\nWork went smoothly or at least as smoothly as they ever do. I didn't have a lot of time to think about my dinner date or whatever the hell you'd call it. I just wanted my four hundred dollar camera back with all the pictures. At this point the pictures were more important than the camera. I really didn't want Jennie so mad she would never see me again. It wouldn't be long before I'd be ready to deal with her ditzyness again.\n\nI got home from work about half past four and jumped in the shower. I shaved and made sure my fingernails were clean. I dressed, combed my hair and brushed my teeth.\n\nThere. Now I was presentable to Elise. I had time to kill so I checked my email and read one from Gail. She said she had been in contact with the sex police and would have the place surrounded just in case. That girl needed help. I told her of my gentlemanly preparations, said again I missed my best friend and signed off. I wondered how many guys' best friends were women. It felt perfectly natural but I never seemed to hear about it from other guys. Whatever, she was my best friend and I would trust her with my life. That's more than I could say for Rambo.\n\nI didn't know exactly how much time to allow so I left a little early to be on the safe side. I'd decided to have fun with this. If I lost Jennie's pictures and she asked about them I'd make up lies till the cows came home. I'd still get a new camera and try again!\n\nNow it was more on principle than money. I wanted my camera. Hell let's face it the new technology was far superior to what I had so a new one wouldn't be all bad. You see how easy it is to justify a new toy.\n\nI found the restaurant and I was about twenty minutes early so I drove past and went to the gas station and topped off, peed and took my time going back to the restaurant. I parked and wondered if she would be in there and see me when I came in or she would wait until I was seated then join me. It was time to find out.\n\nI went in and waited for my turn with the hostess. When she asked I said,\" Two for non smoking please and the lady will be joining me shortly. Do you have a table a little out of the way so we can talk?\" Miss hostess did a right fine job. I was seated in a corner with windows to my back and my left. Across from us was one table and it was empty. If this experience was going to be bad this would make it really bad. On the other hand if it was good it would be much better. I was getting into this gambling thing!\n\nWould she be old, young, fat, thin, light, dark, hell she could very dark! She might only have one leg I didn't know. With my stakes now at a manageable level I could relax a little and have fun with it. The waitress came and I explained the situation and asked for decaf coffee. I didn't want to be edgy all evening. I sipped my coffee and discreetly looked at my watch then around the restaurant what little I could see of it. I didn't see a likely lady and she was now a fashionable ten minutes late. Wouldn't it be a pisser if she stood me up! I decided to giver her one more cup of time (there's that time measurement thing again) then I was ordering my steak then going home. The waitress brought my coffee and I sipped at it slowly. I looked around the restaurant again more boldly this time. The only female I saw that might be alone was a fortyish petite woman appropriately dressed for this place but very nicely dressed. I had nothing better to do so I named her Lucy and continued to evaluate the lady. Maybe five and a half feet or just under, very nicely proportioned and seemed very fit. She almost looked like someone who would have a personal trainer. But in this steak house? Not likely. Let's see, very light brown hair almost blonde, cut on the short side in an easy to care for style. Medium complexion so not a big sun worshiper or at least a very careful one. Very nice. Now where the hell is my lady. My last cup of time was up so when the waitress came back I was ordering. At least I'd get a steak out of it. I picked up the menu and studied my options. T-bone medium, fried potatoes, vegetable of the day and a house salad. That would work. As I looked up Lucy was sitting down at my table. I stood up so fast I almost spilled my water. I said, \"I'm sorry, I didn't see you coming!\" \n\n\"Don't you worry about it Alex. I'm sorry to keep you waiting so long. I really needed to watch you for a while and get a sense of who and what you might be. After all I only know how you look.\" \n\n\"I was giving you one last cup of time then I was ordering.\" \n\n\"Cup of time?\" \n\n\"I frequently measure my time in more practical units. Practical to me at least. I could say fifteen minutes. That's about the most I can get from a cup of coffee. But if I get impatient I don't want to make my coffee last fifteen minutes. I'll drink it faster. It's still my cup of time. It's kind of hard to explain but it works for me.\" \n\n\"That is fascinating Alex and makes a lot of sense. I just may use that some time if you don't mind.\" \n\n\"Be my guest Elise. Would you like some coffee? I'm drinking decaf myself.\" \n\n\"That would be perfect Alex thank you.\" This was certainly civilized as she said it would be. \"So tell me Alex, I noticed you checking me out, did you know it was me or were you window shopping?\" \n\n\"I was passing time actually. I was evaluating you but not as Elise. In fact I named you Lucy. Not that it fits you it was the first thing in my mind.\" \n\n\"Okay then, you evaluated me and what did you come up with?\" \n\n\"You are a very well provided for lady, you are very fit, possibly have a personal trainer, you don't worship the sun but you get some and you protect yourself with lotions because your skin doesn't have sun damage. You don't smoke, you are confident but not haughty, let's see, what else? You have a very pleasant but slight southern accent so you are most likely native but with possible boarding school in your background. You also have a sexy voice.\" I guess that's it for starters. How did I do?\" \n\n\"You did very well indeed Alex. I am very well provided for as you say. I am married at least in the technical sense, I don't have a personal trainer but I always use the same trainer at the club and I do take care of my self. I'm not a sun worshiper though I do like to get on the lake frequently. Let me see, I don't smoke you were right again, oh, and I did go to boarding school a long, long time ago. I'm afraid I was asked to leave after two years. I was a little too frisky in their opinion. And I am from Lexington originally. You did very well indeed.\" \n\n\"Thank you. Now if you would, what did you decide about me?\" \n\n\"Just from here or all together?\" \n\n\"Let's say all together.\" \n\n\"You are a bachelor, maybe thirty tops and you are in good shape and well proportioned in every sense of the word. You are careful, have a modest income at least by my standards, you have excellent taste in women that's for sure, you are well mannered, well groomed and like to have fun. Am I close?\" \n\n\"You did quite well. I am single, thirty three and I thank you for your guess, I try to stay fit but I don't work out as such. My income is modest by my standards as well, I must have excellent taste in women considering with whom I am sitting, and my manners and grooming I work at but you will have to decide that one.\" \n\n\"Alex, you are so smooth. You slipped a very nice compliment in there and didn't even pause for effect. I thank you.\" \n\n\"If I never lie I'll never trip over my own words.\" The waitress finally came back and I ordered decaf for the lady and another menu. \"I'd say we have gotten off to a very nice and comfortable start wouldn't you Alex?\" \n\n\"I'd say so yes.\" \n\n\"Dare I ask about the stunning woman you were with that day?\" \n\n\"I'll tell you her first name is Jennie and she is someone I date from time to time.\" \n\n\"You aren't seriously involved with that gorgeous creature?\" \n\n\"Not seriously no. Just occasionally.\" \n\n\"You are unique you know.\" \n\n\"Not necessarily but thank you for thinking so.\" \n\n\"You don't have anyone you are more than casually acquainted with?\" \n\n\"I have a very close friend of many years that I see frequently but there are no marriage plans or anything of that sort. If I may, you said you are married?\" \n\n\"Yes I am. The marriage consists of me being on his arm at certain social functions, have the occasional gathering at our home and so forth. Your basic window dressing I guess.\" \n\n\"Does he know you are meeting me now?\" \n\n\"Probably not but as long as I don't embarrass him he doesn't care. That's what makes this place perfect. His sort would never come here plus I'm not from tthis area.\" \n\n\"Interesting. May I order for you?\" \n\n\"Please if you would. I like my meat medium rare.\" The speedy waitress finally graced us with her presence and I ordered Elise a T-bone medium rare, baked potato with sour cream and butter on the side, the vegetable of the day, house salad with a light dressing on the side and more coffee. I ordered the same just to make it simple for the waitress. \n\n\"How did I do?\" \n\n\"You did perfectly. Are you sure you don't know me some how?\" \n\n\"I just followed logic. The T-bone is likely their most tender cut, you told me how you like it, greasy fried potatoes just didn't seem to fit you, by ordering sour cream and butter I covered both bases, I figured the light dressing was a safe guess and on the side in case they drown their salads here.\" \n\n\"Very nice. You do impress me Alex.\" \n\n\"Thank you Elise. I assume you would like to discuss business after dinner over coffee?\" \n\n\"Yes I would prefer that.\" \n\n\"Tell me what you like to do for pleasure.\" \n\n\"Some of that will come in our discussion after dinner. Other than that I like to go out on our boat on the lake, that's how I came to find your camera and I like to travel but not to exotic places.\" \n\n\"What about you Alex?\" \n\n\"Work doesn't leave me with a lot of time to develop a long list of pleasures so I try to grab my entertainment where and when I can.\" \n\n\"Enter the beautiful woman.\" \n\n\"Enter the beautiful woman.\" \n\n\"What of travel?\" \n\n\"I travel enough with my work so I don't do a lot for recreation. I'm sure that will change as time passes though.\" Elise was making great eye contact and I was doing my best to be the gentleman and not look at her cleavage but I was having a difficult time of it. Her blouse was cut sufficiently low for me to know she had nice breasts. Not huge by any means but very nice indeed. I finally said hoping to cover up a wandering eye, \"Forgive me Elise if my eyes wander a little but your skin is flawless and I can't help but notice it.\" I thought that sounded better than forgive me for staring at your tits! \n\nChapter Six\n\n\"Thank you Alex. That was a very sweet thing to say. I do try to take care of my skin. I'll be old and wrinkled soon enough.\" \n\n\"When you see eighty you will still have beautiful skin I'm willing to bet.\" \n\nElise put her hand on my arm and said, \"I wish I could keep you for myself!\" The waitress bringing our salads and more coffee saved me from myself. We ate and made light conversation. I'm a bachelor with fairly modest moral restrictions so I couldn't help wondering what she would be like in bed. She used the word frisky. Maybe she was still frisky! I still couldn't put an age to her. I knew she wasn't short, fat and sixty! \n\n\"I'm curious Alex, what were you thinking just then?\" \n\n\"To answer would be to commit a social error I'm afraid.\" \n\n\"Please. Don't worry about social errors for my benefit.\" \n\n\"When I told my friend I was coming up here I said she has a very sexy voice. Unfortunately, the voice never matches reality. This lady will most likely be short fat and sixty. I must have been trying to see how many ways I could be wrong. You most certainly do match your sexy voice. I don't know your age but you are many, many years shy of sixty, you are not short and if you were any farther from fat you would be too skinny. I also wondered what it would be like making love to you.\" Elise blushed! \n\nWhen she tried to talk she stuttered for a second then said, \"I asked what you were thinking and I got more than I expected!\" \n\n\"I'm sorry if I offended you but I gave you fair warning!\" \n\n\"I'm flattered Alex. And just so I can gain some control of myself I'll side step the last comment for the moment and ask what it is that makes me sexy to you?\" \n\n\"That is hard to answer.\" \n\n\"You can use any words you want Alex I'm not a china doll and I don't embarrass that easily...at least usually.\" \n\n\"I'm not sure I can put it into words. It's your bearing. It isn't regal yet it is erect. You face the world head on. I said your voice is sexy. It is low, soft and almost musical with that hint of Kentucky. It is sincere and not put on. As I said your skin is smooth and it asks to be touched and appreciated. You have beautiful breasts and your eyes have that clear, alert and moist look. That's the best I can do right now.\" \n\n\"Wow, Alex you make me feel like sex personified.\" \n\n\"To me sexy goes beyond sex. It means sensual and erotic as well as pure sex. I hope I'm not being too graphic now.\" \n\nElise took a deep breath and paused. \"You are not being too graphic Alex. I think you are seducing me and I love it!\" \n\n\"Maybe I am seducing you. That wasn't my intention, or at least my only intention, but by me telling you the truth I guess that's how it comes out. I guess I'm seducing you with honesty!\" The waitress brought our dinners finally which forced us to take a deep breath. We ate looking at each other. \n\nI must have smiled or something because Elise said, \"What are you thinking that's so funny?\" \n\n\"I just remembered when you said you were sending me a package. I told my friend and said I wondered what it could be. Her response was it would probably be a picture of my camera with a gun pointed at the lens. It just suddenly struck me as very funny.\" \n\n\"That is funny. I wish I'd thought of it. I was having fun at your expense I'm afraid.\" \n\n\"At first it annoyed the hell out of me, partly because I was mad at myself for losing it with the very personal pictures in it. I didn't want the pictures of Jennie falling into the wrong hands. Then I went from annoyed to curious and from curious to enjoying it.\" \n\n\"So you did enjoy it then?\" \n\n\"Once I felt Jennie was in no danger I enjoyed the mystery. Would you like dessert?\" \n\n\"No thank you. More coffee would be nice though.\" I did my best to get the waitress. I didn't know if I succeeded or not. \"I want to talk about an arrangement between us Alex and what you are doing to me with your words goes right to what I was going to offer. My God I actually got turned on listening to you! I've never done this kind of thing before so this isn't easy. Okay Alex here's the deal. I want you to make love to me in return for the camera and memory stick. When I say it, it sounds like I'm prostituting myself but when I saw your pictures I wanted you and I didn't know how else to go about it and have any chance at succeeding. There I said it.\" \n\n\"What else?\" \n\n\"Nothing else Alex, isn't that enough?\" \n\n\"I expected something unpleasant and the thought of making love to you is not unpleasant by any means! You mentioned discretion so I assume you have thought this through.\" \n\n\"I have. I was going to get a suite at the Comfort Inn for whenever it was convenient for you.\" That's pretty expensive isn't it?\" \n\n\"Alex, my husband is quite wealthy. I just spend it and he never asks about it.\" \n\n\"Elise, I would love to be with you. I'm glad you're the one to find the camera.\" \n\n\"Alex, I have to confess, I was going to give you the camera either way.\" \n\n\"Now that I've met you I want to make love to you even if you don't give me the camera.\" \n\n\"You really do?\" \n\n\"Most definitely! I wish we could have met under more normal circumstances. Now unless you have some particular reason not to, I have a request. Instead of the Comfort Inn perhaps you would feel better about everything if you came to my apartment. It isn't much but it would be warmer and more intimate than a motel room. And since I am seducing you now, I don't see how you can be prostituting yourself.\" \n\n\"So you don't mind if I know where you live?\" \n\n\"Not now no.\" \n\n\"I like the idea a lot Alex. Let me think about it while we have coffee.\" \n\n\"Isn't it interesting how less than two days ago I was very reluctant to even meet you and now I want you to come to my apartment so I can make love to you! I've never been so open about seducing or being seduced before. By the way, am I seducing you or are you seducing me?\" \n\n\"I'm not so sure now Alex. This sure has turned out far better than I had envisioned or hoped!\" \n\n\"I have to say Elise; this has been one hell of an experience.\" \n\n\"I have a feeling the best is yet to come Alex.\" \n\n\"I better stop and drink my coffee after that last comment! I still can't figure out who is doing what to whom! This is fantastic!\"\n\nWe sipped coffee and just looked at each other. I even kept my eyes off her chest for a couple of minutes. Elise reached in her bag and set the camera on the table in front of me. \n\n\"Did you have a certain time in mind for me to come see you?\" \n\n\"I wish it could be tonight but since it can't is tomorrow night too soon?\" \n\n\"Tonight is too far away but tomorrow night would be wonderful Alex. What time?\" \n\n\"Anytime from five thirty on is yours for the asking.\" \n\n\"Oh I like the way you phrased that! Five thirty it is then!\"\n\n\"I'll give you directions to my place and it's only about forty minutes from here. Do you have a pen and paper?\" Elise dug in her purse and handed me a very expensive pen and a piece of paper. I wrote the directions for her and made sure they were clear to her and gave her pen back. \"May I walk you to your car?\" \n\n\"Thank you Alex. I need the ladies room first though.\" \"I'll use the boys room and meet you at the front.\" We did our business and I paid the bill then walked Elise to her car. No major surprise, she was driving a BMW. A very nice one. I put my hands on her shoulders then kissed her gently. \"I'll see you tomorrow night then.\" \n\n\"Thank you Alex. I look forward to it to say the least.\" She got in her car and pulled away. Wow! What a bizarre evening! I was conned, hustled flattered and seduced all in less than two hours! Of course I did a little seducing myself as well.\n\nChapter Seven\n\nWhen I got home I had three messages waiting for me. The first was from Gail telling me to check my email. The second was from a co worker with a problem. Too late to help him with that one and the third one was from Elise telling me thanks for dinner and she had a wonderful time with me and was looking forward to tomorrow night. So was I.\n\nI checked my email and opened the one from Gail. She said her grandmother was not doing well at all and she had requested an unpaid leave from work for another thirty days. She was really depressed about it but it couldn't be helped. Was there any way I could get a few days off and come down to see her? Now that had potential! I had to use some vacation soon or start losing it. I replied saying I loved the idea and would look into it on Monday. Then I opened the attachment! There was Gail in all her naked glory on her back, in bed and blowing me a kiss! Maybe my old SUV would make a fourteen hour drive and not complain. I'd go to Florida if I had to walk! Nobody had a friend like I did.",
        "Work on Friday seemed to drag. I was actually nervous about Elise coming! I had no idea what to expect so maybe that was it. I felt like I had no control over the coming events so maybe that was the reason. \n\nI got home shortly after four thirty after stopping at the bakery for fresh bread and jumped in the shower. I got out, shaved and dressed then headed to the kitchen. I didn't know if she would be hungry but I would be and besides I didn't want to jump her as soon as she got here. Well actually I did but that would be crude. Just before five thirty I put decaf on and got out some cheese, summer sausage the fresh baked bread and iced shrimp. That would keep us from starving. We could always go out to eat later if we got bored. I was pretty sure my apartment, as nice as it was, would be pretty humble to her but it was furnished nice enough and I had it spotlessly clean and a hell of a lot nicer than an impersonal motel room.\n\nAt five thirty five my doorbell rang. I got to the door rather quickly let's say, and opened it. There stood Elise! She was wearing a white cotton blouse unbuttoned about half way down and very nice fitting slacks. I said, \"You look wonderful Elise! Please come in. I was afraid you would change your mind at the last minute!\" Elise kissed me before the door was closed! \n\n\"There was no way I was changing my mind Alex and thank you for your compliment.\" \n\n\"Would you like a cup of decaf?\" \n\n\"I would love one but only after another kiss.\" This was going to be a great evening! \n\n\"You have a very comfortable place here Alex. I like it.\" \n\n\"Thank you.\" \n\nThe damn phone rang and Elise said, You can get that if you like I don't mind.\" ' \n\n\"The machine will get it.\" It was Jennie. Good timing Jennie and thank you very much. \n\n\"She sounds very nice. Is she the beautiful one?\" \n\n\"She is very nice and yes she's the one.\" I wanted to say she could go from very smart to dumber than a bucket of rocks at light speed but I didn't. \n\n\"Did you have any problem finding my place?\" \n\n\"None. They were very good directions.\" \n\n\"Would you like something to eat?\" \n\n\"Not right now thanks Alex. The coffee is all I need at the moment.\" \n\n\"Do you turn into a pumpkin at eight o'clock or is the evening ours?\" \n\n\"The evening, the night and the morning are ours if we so desire!\" \n\n\"Wonderful. I'm hopeful we will desire!\" The damn phone again. \n\nThe machine kicked on and we could hear Gail say, \"Alex I'm so glad you can come to Florida to see me! Call me when you can. Bye sweetie!\" \n\n\"That would be my friend I was telling you about. She is in Florida seeing to a very ill grandmother for the next month and she is bored out of her mind.\" \n\n\"Alex to the rescue.\" \n\n\"Something like that. That is if my old mostly faithful SUV gets me there.\"\n\n\"Have you thought about us Alex?\" \n\n\"Elise I have thought about us ever since the steak house. I didn't think this evening would ever get here.\" \n\n\"I'm glad. I was afraid it would be out of sight out of mind.\" \n\n\"It's funny you should say that because I was afraid you might feel the same and not come.\" \n\n\"You couldn't have stopped me if you wanted to.\"\n\nI leaned over and kissed her lightly and said, \"I'm glad you're here.\" \n\nElise leaned over and kissed me back and said, \"Me too!\" \n\n\"Why don't we sit in the living room where it's more comfortable?\" \n\n\"Lead the way Alex!\" In most apartments the living room isn't far from the kitchen and the bedroom is visible from the living room. My apartment is no exception. It has its advantages! I made sure the bedroom door was open. I never said I wasn't devious. Not calculating certainly, but I'll admit to being just a little devious.\n\nElise said, \"Where would I find the ladies room?\" I pointed toward my bedroom and said, \"Right across from my bedroom there.\" \n\n\"I'll be right back.\" Elise came back and sat very close to me. She had undone another button on her blouse! There was a whole lot of cleavage to enjoy. I leaned over and kissed her long and gently. I looked at her cleavage again. I can't help it. I like low cut tops even on very small breasted women. It isn't as much what you have to show as it is just seeing the area where they might be. I've seen more women with small breasts and low front blouses that were a lot sexier than large breasted women. Sometimes more is not better. Elise had nice breasts. Not too small but just right for a woman her size. \n\nWe kissed for several minutes like that. When I came up for air I said, \"Elise, you could topple governments with your kiss! I can't get enough of them!\" \n\n\"I'm glad you like them Alex.\" \n\n\"I also like your blouse!\" \n\n\"My blouse or what's under it?\" \n\n\"Well to be technical what's under it. It's hard for me not to stare.\" \n\n\"You can stare if you want Alex. I'd like that actually.\" So I did. As I undid more buttons I said \"The more I look the more I want to see!\" \n\n\"Then you are doing what needs to be done.\" Elise removed her blouse and I saw a very small and revealing bra holding very nice breasts. \"I have to tell you, you have beautiful breasts!\" \n\n\"Maybe you should take my bra off so you can see them better.\" \n\n\"Maybe I should do that yes.\" I took her bra off and kissed her breasts in appreciation. I said as I reached a hand to them, \"I had to pay homage to them.\" This went on for some time with the obvious progression to the bedroom. I'll save the details for another time except to say she was passionate and loving. We had a fantastic evening and slept soundly next to each other.\n\nWhen we woke in the morning we didn't bother to dress. We showered together then had coffee and a little breakfast. Then we made love again. Then we showered again.\n\nAs we had the last of the coffee I asked, \"Will I see you again?\" \n\n\"I certainly hope so. Nothing would make me happier. You do want to see me again don't you Alex?\" \n\n\"I sure do and the sooner the better!\" \n\n\"Sooner would be good. Because of other things, later could be complicated. How would next weekend be for you or are you going to Florida?\" \n\n\"If I go to Florida it will probably have to be the week following.\" \n\n\"Then I'm going to say next Friday night again. If something comes up I'll call you but I doubt it. After that it may be a very long time before we see each other again.\" \n\n\"I'm sad to hear that but I understand.\" \n\n\"I had better dress and leave.\" When she was ready to leave I walked her to the door and kissed her goodbye. As she went down the walk she looked back and said, \"Don't forget to call Jennie and Gail, and remember to keep Friday night open!\" \n\n\"Bye Elise\"\n\nI went back in for more coffee and a few minutes to digest all that had happened. She was one hell of a lady no doubt about it, but other than sex we would never have much in common. It was two different worlds. I still looked forward to next Friday.\n\nI called Jennie and said it looked like I was going to Florida for a week or so. If things changed I'd call her otherwise I'd call her after I got back. She never mentioned the pictures. All that sweating for nothing. Then I called Gail. When she picked up I asked her if she'd had her fill of gator tail yet. \"Alex! I'm so glad you called. How are you?\" \n\n\"I'm still taking nourishment. I wanted to talk to you about me coming down there.\" \n\n\"I hope it happens soon big guy.\" \n\n\"The only things that will stop me are my boss but I don't see a problem there, or you saying don't come.\" \n\n\"Not gonna happen sweetie.\" \n\n\"What about a motel. Is there one close to you?\" \n\n\"I'll not have you staying in a motel buddy. There is a bedroom here for you no problem.\" \n\n\"What does your grandma think of this?\" \n\n\"She is all for it. My grandma is sharper than you or me. It's her body that's abandoning her.\" \n\n\"I'm sorry to hear it.\" \n\n\"When can you come?\" \n\n\"How about I leave here next Saturday afternoon or Sunday morning and get there late Sunday afternoon or late evening?\" \n\n\"I wish it could be a lot sooner but that's great! It's so boring for me here.\" \n\n\"We'll find something to get into I'm sure! I sure miss having you around to pester me!\" \n\n\"You're just horny!\" \n\n\"Only for you.\" \n\n\"You're full of it Mister!\" \n\n\"I'll show you when I get there!\" \n\n\"Seeing is believing! Before I forget, how did you make out with the old lady with your camera?\" \n\n\"I got my camera back and believe it or not she isn't a lot older than I am.\" \n\n\"What did it cost you?\" \n\n\"One steak dinner. A cheap one at that.\"\n\n\"You were so damn lucky you jerk\" You don't know how lucky! I gotta go tend to grandma. Talk to you soon. Bye\" \n\n\"Bye\" \n\nI didn't lie. Exactly. I'll probably tell her in person. For some reason I felt the need to hold back. Hell she knows I see other women. Why was this different? This was getting complicated. I had too many women in my life right now. After next weekend I'd be down to two. That's manageable. \n\nChapter Eight\n\nThe week went pretty fast all things considered. My boss okayed my vacation so I had two weeks just in case. Now all I had to do was convince my SUV to take me there without blowing up. \n\nFriday came and after work I raced home to shower and shave again. I didn't bother with much food this time, just coffee. I paced until twenty till then the door bell rang.\n\nI opened the door to Elise. She said, \"Hi Alex\" and opened her summer coat to show she had nothing on under it! I didn't tell her it was too warm for a coat. \n\nI said, \"My God Elise what a wonderful surprise! That is so sexy!\" I stepped forward and gave her a hug and a kiss. \"Come in before we get arrested! I wish I could have you ring my doorbell a lot more often! In fact you already ring my bell!\" Once again I'll spare you the details but you sure are missing one hell of a story! I got to take several pictures of her. She looked fantastic. Once again it was fantastic when we made love and she had no trouble keeping up with the desires she created in me. Elise stayed with me until almost eleven Saturday.\n\nWhen she got ready to go she had clothes on. She kissed me so warmly and asked me, \"Have you ever made love to an older woman. Someone quite a bit older than you?\" \"No I never have Elise.\" \n\n\"You have now honey. I'm fifty.\" \n\n\"Bull shit Elise. If you are forty five I'll kiss your feet!\" \n\n\"It's true Alex. I believe you are really surprised.\" \n\n\"I'm stunned! I honestly guessed you at nearer forty maybe less.\" \"God how I'm going to miss you Alex. I know this is what has to be. But it hurts so much.\" She started to cry. I held her for several minutes. When she pulled away I wiped the tears off and kissed her again and said, \"If you're ever in the neighborhood would you stop in? Please? Even if it appears I have company or whatever. I'd love to see you again sometime just for coffee even.\" \n\n\"I'll do that Alex. Take care of yourself. Bye.\" Elise was no longer in my life. What an incredible woman! I'll never meet her equal again. At least not at that age.\n\nI truly was sad to see her go. I moped around as I got packed for Florida. I was so glad I had Gail to go to. She always made me feel better. \n\nI had my bags by the door and was making sure everything was shut off when the doorbell rang. Did Elise come back? I went to the door and when I opened it a gentleman in a suit was standing there with a packet in his hand. Shit what was he trying to sell. \"Forgive the intrusion sir, are you Alex?\" \n\n\"Yes.\" \n\n\"This packet is for you then sir and have a very nice day.\" With that he left and I closed the door. What the hell? \n\nI opened the envelope carefully and inside was a letter from Elise. It said, \"Dearest Alex. Where do I begin? You have been an incredible experience for me. My heart is breaking because I love you so. I loved you the moment I saw you in person. I've never believed I could fall in love that fast or that hard. That is the reason I can't see you again and no other. Please have a good life and think of me often as I will you. I'm glad you took the pictures of me and hope they help you remember me. The keys in the bottom of this envelope go to the car in your driveway. It is a small token of my love for you. The papers are in order and provide you with plenty of time for a trip before you need to worry about anything. It is such a small gift compared to what you have given me. I love you so much.... Elise\" P.S. Don't lose anymore cameras. \n\nI was dumbfounded! My god I didn't know she was in love with me. I thought it was a lark. Something to entertain herself with in her rich boring life. Her husband had to be such a complete and utter jackass to say nothing of being blind! I couldn't even get in touch with her. I felt so hollow and empty right then. I sat and cried for her for almost an hour. I really did care for her a lot. I had to quit playing with other people's lives. I never considered the wake I might be making as I sailed along mindlessly. I needed to talk to Gail! I had to tell her the whole story. Maybe I was screwing up her life as well.\n\nI had to get on the road.\n\nI took the keys to my new car. Hell I didn't even know what it was yet. Grabbed my luggage and went out the door. It was a beautiful new Mercury Mariner. Emerald green. I loaded my bags in the back and opened the driver's door. There on the seat was a new digital camera! Shit. She was really pushing my buttons. I couldn't drive until I could get my mind to settle down. Not until I could get my wits about me. I made a pot of strong coffee and sat there drinking for an hour or more. Florida would just have to wait a little longer. I would give anything just to get a message to her. Hell I didn't even know her last name. I didn't even know what I'd say but I just needed to say something. Maybe someday I would have the chance after the hurt was less.\n\nI finally got on the road after calling Gail and saying I got a late start and would be in sometime Sunday evening. How would I tell her? Should I show her the letter? The two of us have always been happy and joking around each other. Well except for my temper tantrum. I drove until midnight.\n\nBy late Sunday I was feeling a lot better. The SUV was fantastic! I would probably have to hock my soul to pay the taxes but it was worth it! Gail was going to shit! Oh yeah, Gail. All of this might hurt her. This was too complicated! I had to tell her. I couldn't very well tell her I stole the car and she knew I couldn't afford it. I had to get it out in the open then tell her I wanted to stop catting around except maybe with Jennie! Maybe I better tell her I was cutting way back. I couldn't go cold turkey! I wasn't ready to settle down and get married yet! Gail would help me. \n\nI arrived about seven thirty. This was the address she gave me so I must be here. I left my luggage in the car and went to the door. I rang the doorbell and waited a second. The door flew open and Gail was in my arms crying! I sure had a way with women didn't I? I l held her close for a minute then pulled her away asking what was wrong. She said, \"You dumb shit I've missed you!\" \n\n\"Oh.\" I said, \"I've missed you to. A lot.\" We stood on the front step for several minutes hugging and looking at each other. Gail finally asked how the trip was and I said, \"Much better than I thought it was going to be a few days ago.\" \n\n\"How's that?\" \n\n\"Because of that,\" I said pointing at the car. \n\n\"Holy Fenders Bat Man where did that come from?\" \n\n\"It's a long, long story played out over a very short span of time. I have to tell you the whole thing but I want to wait until I can tell you all of it without interruption. Otherwise I'm going to cry, hurt your feelings and God knows what else!\" \n\n\"This must be one hell of a story. I've never seen you cry. Not ever.\" \n\n\"Now you will see the real me I guess.\" \n\n\"Let's take your luggage in and you can meet grandma and have some iced tea. Then we can figure where to have our talk.\" \n\n\"Sounds like a good plan. \"Did you really say holy fenders out there?\" \n\n\"I guess I did yeah.\" \n\n\"Just checking.\" \n\n\"That sure is a gorgeous car. Did you steal it?\" \n\n\"No I didn't steal it. Now stop with the questions already. When I get done with the story you will either hate me and make me leave or still like me at least a little. I don't know which. I doubt you will be neutral.\"\n\nWe went in and I was introduced to Grandma. Gail was right. This lady was sharp!\n\nAfter visiting with her for a few minutes she said, \"You two get the hell out of here. You two have a lot to talk about and some hugging to do and I need a nap!\" \n\n\"Okay grandma, we're out of here. I'll check in on you in a couple of hours.\" \n\n\"And if you don't that's okay too. Get your visiting done and when Hazel gets here go take a drive somewhere or something.\" As we left the room I asked who Hazel was and Gail said she was a home care nurse that came about every other day and tended to grandma which gave her a break.\n\nChapter Nine\n\nIt was pretty damn hot outside so we got more iced tea and went to the living room to talk. \"So do you want to tell me what's going on or do I have to wait forever?\" \n\n\"I guess this is as good a time as any. That way when you kick me out I have time to find a motel. Seriously Gail, I made some bad choices and hurt somebody. I truly didn't mean to. I got in over my head so fast I don't even know what to think even now.\" \n\n\"Will you just tell me and get it over with!\" \n\n\"Okay. You remember I said I got my camera back and it only cost me a dinner?\" \n\n\"Yeah.\" \n\n\"That was the truth as far as it went. I have never lied to you. Not ever. Holding back was the same as lying and I held back. When I met Elise at the restaurant I had plenty of time to really look her over both physically and emotionally. We spent a long time at the restaurant. This woman seemed so strong and in control. She took life head on is what I told her. This woman was also very, very good looking. Petite with absolutely pure complexion. Even her cleavage was perfect. She was sincere, forthright and engaging. After dinner she told me the terms of getting my camera back. I had to make love to her. Of course by then I already wanted to so that wasn't a problem to me. I'll save you all the sordid details but we both had an excellent time from Friday night to Saturday mid day.\" \n\n\"Damn you did have an excellent time!\" \n\n\"This lady was exceptional in everyway Gail, except one. Well maybe two. She is married. She is married to a very, very rich man who pays her no attention but gives her anything she wants otherwise. That's a biggie and I knew that fact up front. That's not something I'm proud of now. But even now I feel so sorry for her. Him I couldn't care less about.\" \n\n\"You said maybe two things.\" \n\n\"Keep in mind Gail, she is in excellent physical shape, has a body to die for, absolutely perfect complexion and even her breasts are perfect with out surgical assistance. She could pass for thirty and easily for thirty five.\"\n\n\"Go on you're driving me nuts here!\" \n\n\"She is fifty years old Gail!\" \n\n\"Bull shit.\" \n\n\"I'm dead serious. It blew me away! I'm still in awe of her.\" \n\n\"She must have some incredible genes!\" \n\n\"I admit I'm sure money helps but there was no evidence of any surgical assistance anywhere!\" \n\n\"So that's it? You bopped someone a lot older than you and she is married?\" \n\n\"I wish it were. When she got ready to leave Saturday morning, she said she was in love with me and started crying like a baby and held me close. Stay with me a minute and I'll continue.\" I took a couple of deep breaths and tried again. \"She said that was why she wouldn't see me again. She was so in love with me but couldn't do anything about it. So she left and that's it. I stood in my kitchen and cried and hated myself. I never dreamed she felt that way. I doubt I would have stopped even if I did know. I was way too focused on myself.\" ",
        "Gail was tearing up and asked, \"Is that the end of the story?\" \n\n\"Almost. About forty five minutes later the doorbell rings and this gentleman in a suit is standing there holding a package and there is a car in my driveway. He verifies I'm Alex, hands me the package and says have a very fine day then leaves! I close the door and open the package and there is a letter from Elise. It's a heart breaking thing to read I'm here to tell you.\" I wiped my eyes and continued. \"If you want to read it you can but I'm not sure it's a good idea. She explained the car more or less and in the bottom of the envelope were the keys to the new car. I finally went out to load my bags and come down here. I opened the door and there was a new digital camera on the seat. For whatever reason that pushed the last button for me and I lost it. I wasn't in love with her but I cried for over an hour. I had to wait until I could drive. This lady broke my heart with her breaking heart! I don't know what I could have done different but I've got to start reconsidering my priorities here.\" \n\n\"You silly bastard, you're making me cry.\" I hate the woman for sleeping with you and my heart breaks for her. I really know how she feels! Now are you done telling me?\" \n\n\"I think that's it Gail yes.\" \n\n\"Good. Now take me to bed. You don't need to make love to me but that's the least you can do. I need you to hug me until I hurt. Alex at some point down the road we have to have a serious talk, you and me after I get home. Speaking of which, soon after I get home you are going to get a surprise.\" \n\n\"Please no more surprises for a while!\" \n\n\"This one you may even like. I certainly hope so. Now are we going to bed or not?\" \"Let's go to bed Gail I want to hug my best friend.\" Gail hit me but wouldn't say why.\n\nWe didn't make love. We hugged an awful lot and kissed a little and talked a little, but mostly we were wrapped around each other. \n\nAfter I'd been there for a few days grandma called me in the room and wanted to talk.\n\nShe asked me what I thought of her favorite granddaughter. I tried to be as honest as I could and sang Gail's praises. \"Are you two sleeping in separate bedrooms while you're here?\" \n\n\"Yes.\" \n\n\"Why? You mad at her?\" \n\n\"Not by a long shot grandma.\" \n\n\"You doing it because of me?\" \n\n\"Probably but you'd have to ask Gail that one.\" \n\n\"So you'd sleep with her if she was willing?\" \n\n\"I guess I would yes. You sure ask a lot of questions.\" \n\n\"I have a lot more but I don't want to shock you just yet. \n\nAre you in love with Gail?\" \n\n\"You know, I don't know. We have been such great friends for so many years I guess that's as far as my mind has ever taken it.\" \n\n\"Interesting. Now go tell Gail I want to talk to her would you?\" \n\n\"Sure grandma.\"\n\nGail went in next and asked, \"You need me grandma?\" \n\n\"More than you know love. Sit down would you?\" Gail sat by the bed. \"Are you in love with Alex?\" \n\n\"I think I am yes.\" \n\n\"I thought as much. Do you think he's in love with you?\" \n\n\"Yes, I kind of think he is but doesn't know it.\" \n\n\"Does he know you love him?\" \n\n\"I doubt it grandma.\" \n\n\"Interesting. Are you two using the same bedroom here?\" \n\n\"No grandma we aren't.\" \n\n\"Why is that?\" \n\n\"Grandma!\" \n\n\"What, you think I'm going to sell your story to the tabloids? Hell Gail with any luck I'll be dead in another thirty days or less. Sleep with the man. He gets used to having you there he'll start rethinking his priorities.\" \n\n\"You must have been a powerhouse when you were young grandma!\" \n\n\"I held my own I guess. Would you like to have this house when I'm gone Gail?\" \n\n\"Grandma that is so sweet of you but I couldn't live in Florida.\" \n\n\"Well of course not. I mean to sell it and use the money to buy you one up north.\" \n\n\"Of course I would, but don't you have your will made out yet?\" \n\n\"Yes, I was just checking. He's a real handsome guy isn't he?\" \n\n\"He sure is grandma.\" \n\n\"Does he treat you right?\" \n\n\"He is wonderful to be around even when he's grumpy.\" \n\n\"Lord Girl, you are in love!\" \n\n\"I guess I am grandma.\" \n\n\"Good for you. Fight for him if you have to then. Be sneaky and devious if you have to. He already can't get along without you but he just doesn't know it yet. \n\nI'm going to take a nap now. Would you call my lawyer for me? I want to go over something with him before I check out.\" \n\n\"I'll go call now grandma. I'll check in on you in a couple of hours.\"\n\nGail and I waited for Hazel then we went out to eat and get a little fresh air then the lawyer was coming by this evening. Grandma was getting tired easier as the days passed so her time with us was getting short.\n\nChapter Ten\n\nIt was only five days later that grandma passed away. She got her wish at last.\n\nGail was pretty broken up by it even though she knew that was what grandma wanted.\n\nGrandma was cremated and laid to rest and we cleaned her house and got it ready for the real estate agent. The realtor had the key and the contract was ready once things were settled. We went home and waited for all the legal crap to take place. The lawyers earned their enormous fees finally.\n\nGail was back to work and so was I and things were back to normal. For whatever reason I suddenly flashed back to when I was explaining Elise go Gail, and Gail said I hate her for sleeping with you. Oh hell, do you...no it can't be. Gail is my best friend she can't be in love with me! Another time when I said I wanted to hug my best friend she hit me! Oh shit, now things are getting complicated. I've been talking to Gail about making love to Elise and Jennie and God knows who else and she's been just taking it. Plus coming over for movies or whatever and we would make love and...oh hell I knew I was in so much trouble! I'd pretty much told Jennie we would do something and what if I was wrong about Gail? I could just as easily have it all wrong. Didn't we just drive over a thousand miles together and got along like we always did? I had to be careful. I decided after my next date with Jennie I'd stop seeing her and focus on Gail. Maybe that would help me sort it out. At least I had a plan of sorts now.\n\nAs if life wasn't complicated enough, they apparently had leased the apartment next door because the sign was down. God I hoped it wasn't newlyweds staying up all night or something. \n\nI made my last date with Jennie for Saturday and we're doing the pontoon boat again. She had said she wanted to do that again real soon. Well this isn't real soon but at least we're doing it again. I talked to Gail last night and she seemed to be getting along okay.\n\nThey were still pissing around with the papers so the house wasn't on the market yet.\n\nSaturday came and we went out on the pontoon boat again. She wanted to go back to the same place for a picnic. I liked that. I brought my new camera too. We headed out into the lake and once again Jennie hadn't put lotion on. Do you think she was faking being dumb? It worked for me though! I put lotion on Jennie everywhere. I even put lotion on her \"thumbs\" and even where the sun doesn't shine. We both enjoyed that! It was getting late in the season so the boat traffic wasn't quite as bad this time. We cruised up the lake like we did before and had our picnic on the boat. You notice I've not mentioned any dumb statements? There is no point. You have the idea and if this is the last time I'm seeing her it doesn't matter.\n\nThis time we skinny dipped for quite a while and both of us enjoyed that. Maybe I'll bring Gail out here. She'd probably like it a lot. I guess I wouldn't mention about Jennie though. Okay yes we made love on the blanket for a while, well, quite a while then headed back for the marina. I was anxious to see the pictures with the new camera and yes I had it with me this time. This camera had sentimental value. I was really going to miss Jennie's body a lot! I had to remember that in a few years that body would fall to her waist or beyond and her common sense wouldn't get any better. That was hard to remember when I was sitting there staring at perfection. I didn't tell her I wasn't going to see her anymore. I thought I'd just let it die on the vine so to speak. If she called me I'd have to tell her then and that wouldn't be easy. I dropped her off, kissed her and patted her ass one more time then I went home to lick my wounds. Maybe a stiff drink would help when I got there.\n\nI pulled in my drive and they were moving furniture in next door. Furniture must look a lot alike because things they were carrying in looked familiar. I went in looking for that drink. I wasn't sad exactly I was, well maybe I was a little sad. I was ending a phase in my life I guess. \n\nI was sitting there bare assed sipping a Benchmark and water and trying not to think when the doorbell rang. I went bare assed and looked through the peep hole and saw Gail, I opened the door and when she came in she saw me and said 'Damn Alex you sure know how to welcome a new neighbor!\" \n\n\"If the new neighbors want to meet me they'll have to wait or meet me bare assed I guess.\" \n\n\"Another grouchy day is it?\" \n\n\"Yes. Wait a minute, what did you mean welcome a new neighbor?\" \n\n\"Pay close attention now Alex and I'll speak very slowly for you. Watch my lips. I'm your new neighbor!\" \n\n\"Bull shit.\"' \n\n\"I saw you look at my furniture going in, didn't any bells go off?\" \n\n\"No I was busy talking to myself and focusing on my drinking problem.\" \n\n\"You're so cute when you're in a foul mood. But I'll tear myself away and go NEXT DOOR TO MY HOUSE!\" \n\n\"You are really moving in next door?\" \n\n\"My God you are slow today. How many of those have you had?\" \n\n\"This is my first.\" \n\n\"You better make it your last. You are having trouble focusing!\" \n\n\"Why are you moving next door?\" \n\n\"I'll come back later and see if you haven't answered that for yourself. Bye.\" And she was gone! She sounded a little peeved.\n\nMy God Jennie was rubbing off on me. Maybe if I take a hot shower it might not be too late! I took a hot shower not because of Jennie but because of Gail. She was trying to surprise me and she sure succeeded! How do I explain where my mind was and why I felt down? Should I just keep my mouth shut? I liked the last thought for the time being. \n\nI got dressed and dumped my Benchmark down the drain then made coffee. What was it going to be like having Gail next door? It seemed like I was always either calling or seeing her for something or another. She was still my best friend and she was a good lover!\n\nI needed to mend a fence here. I went next door and rang the bell. It took a minute but Gail came to the door and said, \"Yes may I help you?\" \n\n\"Only if you have something that will stop me from being an idiot.\" \n\n\"That's a pretty tall order you know.\" \n\n\"That's putting it mildly. May I come in?\" \n\n\"Will you behave?\" \n\n\"I'll be on my best behavior.\"\n\n\"That leaves some room for improvement!\" \n\n\"Ouch.\" \n\n\"Come in and if I hear one grouchy thing out of you I'm kicking you out!\" \n\n\"Do you have coffee?\" \n\n\"Not made no.\" \"I have, would you like some?\" \n\n\"I believe I would thank you.\" \n\n\"I'll get it.\" Boy was that cold! I deserved it but I didn't like it. I came back with the pot and Gail stopped to have a cup. \n\n\"Can I do anything to help? Like give you a hug?\" \n\n\"How do you know that would help?\" \n\n\"It can't hurt I don't believe.\" \n\n\"Okay but watch your hands bub.\" We hugged a long time. \n\nI finally said, \"God it's going to be so great having you so close!\"\n\n\"Now you say that. It would have saved a lot of grief had you said that in the first place.\" \n\n\"Don't I know that?\" \n\n\"Just what was your problem anyway?\" \n\n\"I had made a decision that had to be made and it upset me more that I expected. You had the misfortune of being there at precisely the wrong moment. My mind was not where it needed to be and didn't want to come back I guess. Hell I don't know but the decision is made and the crisis is past and I'm officially welcoming you to the neighborhood.\" \n\n\"Thank you kind sir. Do kisses come in the official welcome?\" \n\nI didn't wish to seem eager so I said, \"On occasion yes.\" \n\n\"Is this an occasion?\" \n\n\"I believe it is yes.\" We kissed and hugged again. \n\n\"I think I'm going to like having you around!\" \n\n\"Actually the real reason I moved here is football season is not far away and you are forever rooting for the wrong team! It's my mission to cure you of that.\" \n\n\"You get upset because my team always wins!\" \n\n\"You're almost as full of it as the proverbial Christmas goose!\" \n\n\"I can see my work is cut out for me. More coffee?\" \n\n\"Yes please.\"\n\n\"So back to what I asked earlier, would you like my help unpacking or moving heavy objects or anything?\" \n\n\"You could hand me things and I could put them on the shelf and get done faster.\" \n\n\"What if I see you doing something wrong?\" \n\n\"Depends on how much you like breathing.\" \n\n\"I'm sure you'll do just fine. I'll just hand you things.\" \n\nIt didn't take long to have the kitchen done so we moved on to the bedroom. I handed her things on hangers and she hung them in the closet and so forth. When I picked up a light box and opened it, it was full of her underwear and such. I made a big production of putting my face in them before I handed them to her until she pushed me down on the bed and finished the job herself. I said, \"Well I guess my work is done here unless you need pictures hung or dragons slain.\" I gave her another kiss and a hug and went home.\n\nChapter Eleven\n\nI went over to Gail's later to see how she was coming and she asked, \"Alex, are you really glad I'm here?\" \n\n\"Gail honey, I couldn't be happier!\" \n\n\"Do you realize that is the first time you have ever called me honey and seemed to mean it?\" \n\n\"It can't be!\" \n\n\"Oh yes it can be!\" I hate her for sleeping with you. That went through my mind again. I was fighting it with all I had but the signs were really there. Gail was in love with me. Pretty soon I would have to decide just where the hell I stood or I could lose her. I would die if that happened. \n\n\"Gail would you come over and watch a movie with me tonight?\" \n\n\"Which one?\" \n\n\"Now don't start that.\" \n\n\"I guess I could pencil you in to my schedule this time. What time?\" \n\n\"The sooner the better but what ever works for you.\"\n\n\"Let me wash up and I'll be over. I'll bring snacks if you have something cold to drink.\" \n\n\"I have that covered.\" \n\n\"You just keep that covered too!\" \n\n\"Maybe yes, maybe no!\"\n\n\"See you in fifteen minutes.\" \n\nI went home and started looking at the movie guide. My God was it going to be that bad? The choices were gruesome. I called Gail and said, \"Why don't you bring your sexiest tiniest things over and I'll take your picture with my new camera.\" \n\n\"Really bad movie choices right?\" \n\n\"Well yes but I'd still like to take your picture.\" \n\n\"The way you lose cameras? I'd have to be crazy!\" \n\n\"Being a little crazy can be fun too.\" \n\n\"The next thing you will be wanting Chinese again and eat with little tree parts.\" \n\n\"That worked wonders the last time!\" \n\n\"I'll be over in a minute. Keep looking.\" \n\nGail came over and without tiny under things. We tried to watch a movie but it should have been burned a long time ago. Finally, after being quiet for awhile Gail asked, \"Do you still have that letter from Elise?\" \n\n\"Yes.\" \n\n\"Can I read it?\" \n\n\"You can but I don't recommend it.\" \n\n\"Why?\" \n\n\"It would hurt you.\" \n\n\"How can it hurt me?\" \n\n\"Because she talks of loving me greatly and so forth.\" \n\n\"And why should that hurt me?\" \n\n\"Because you are in love with me.\" \n\n\"I am not!\" \n\n\"Look me straight in the eye and tell me you do not love me Gail.\" \n\n\"Why\" \n\n\"Because you do love me. Can you get close and look me in the eye and you don't?\" \n\n\"No\" \n\n\"Because...?\" \n\n\"Damn you, because I love you okay!\" \n\n\"It's more than okay Gail. It's wonderful.\" \n\n\"But you don't love me so why is that wonderful?\" Gail was crying now. \n\n\"Do you know that I don't love you?\" \n\n\"You haven't told me you love me have you?\" \n\n\"No I have not. I won't say those words unless I'm absolutely sure I am and that it will never change. Without a doubt you are the most important thing in my life and even the slightest thought that I could lose you sends me in a tail spin. I've never been in love so I'm still learning. Do I love you? I don't know yet. If I don't I'm the biggest fool that has ever been. Do I want you to love me? More than anything in the world. Do I want to love you? Also more than anything in the world. Every time I do something stupid that hurts you I hate myself. You deserve nothing but the very best that the world has to offer.\" \n\n\"Alex, you are so screwed up its unbelievable. But I do love you and I couldn't change that if I wanted to.\" \n\n\"Gail, would you just hold me? We hugged and Gail cried and I got teary eyed. \n\n\"Now you know why I don't want you to read the letter.\" \n\n\"I know other women have loved you and probably still do. What concerns me is now and tomorrow. If Elise loves you it just proves she knows a good man when she sees one. But she's not here now. I am and I intend to keep it that way! I love you Alex and I think you love me and don't know it. If not you will. I'll see to that! Grandma says so and she was never wrong about affairs of the heart.\" \n\n\"I'm not going up against grandma. I'm not stupid all the time!\" \n\n\"We'll see about the last part. Now kiss me.\"\n\nWe kissed and hugged for God knows how long. \"Alex do you have any wine?\" \n\n\"Yes I do. White or red?\" \n\n\"I don't care. Just bring the bottle. My nerves are so charged up I need a little anesthesia.\" \n\n\"Coming up my sweet.\" \n\nWe drank and relaxed and she read the letter and teared up again. Gail mentioned the Florida house and said, \"If it doesn't sell in the next few months let's go down and stay a few days just to get away okay?\" \n\n\"I like the sounds of that. And if it does sell lets go down and get a room and still get away.\" \n\nWe went back to work and things settled down a lot. We had developed a routine that worked for us. I don't know why we kept two apartments because only one was ever occupied at a time. If I owned the building I'd cut a big doorway between the apartments. We still slept in our own beds at least some of the time but that was becoming less and less common. Every Sunday I'd read the paper and look at the homes for sale section and the plan of the week and so forth. I never said anything and I don't think I was even aware of it half the time. I was in such a state of denial it was unbelievable. \n\nOne afternoon several weeks after Gail had moved next to me and I'd just gotten home from work the phone rang. I picked it up and it was Gail on the cell phone and she sounded really rattled. \"I just missed getting killed by a drunk Alex. He came up over the sidewalk and missed me by less than a foot! He crashed and is hurt pretty bad. I'm so shook up I can hardly walk!\" \n\n\"Where are you honey?\" \"I'm at, oh hell where am I? I'm at Madison and fifth.\" \n\n\"I'm on my way honey. Don't try to walk or drive. I'll get you.\" \n\n\"I'm okay as long as I know you're there Alex. The police want to talk to me right now. I'll call you back when they are done okay?\" \n\n\"I'm right here honey. I love you!\" \n\n\"Bye.\" I really got rattled! I sat down and took a deep breath and thought about what had just happened. I came so close to losing Gail. I couldn't let that happen. Then I realized I had just told her I loved her! The phone rang and I picked it up right away. \n\n\"Did you just say you loved me Alex?\" \n\n\"I believe I did yes.\" \n\n\"This is your last chance to retract it and call it stress.\" \n\n\"I can't retract it honey. It would be a lie. I love you!\" \n\n\"Why the hell did I have to almost get killed before you could admit it?\" ",
        "\"I don't know.\" \n\n\"You can be such an ass sometimes. If I didn't love you so much I'd hang up on you! The police are here again. I'll call you back.\" I sat there holding the phone like she was still on the line. Why did I wait so long to say the obvious? I finally hung up the phone and waited. I heard a car outside and looked out to see Gail came screeching into the drive. She came running in the house and threw her arms around me and kissed me. \"You are such a shit! I could just hit you, you know that! I have to damn near get turned into a grease spot before you would say you love me! What am I chopped liver?\" \n\n\"No but you keep picking the wrong teams and it interferes with my emotions!\n\nI love you Gail.\"\n\n\"I love you Alex.\"\n\nThe End."
    ],
    "authorname": "thornapple",
    "tags": [
        "camera"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/lost-camera"
}