{
    "title": "Charlie and Mindy Bk. 02 Ch. 07",
    "pages": [
        "This is the last chapter of seven in Book&nbsp;2 of the Charlie and Mindy tetralogy&mdash;which is a story of forbidden love between a brother and a sister.\n\nWhile Book&nbsp;2 stands on its own, it refers to events that took place in Book&nbsp;1. Book&nbsp;1 also contains some of Charlie and Mindy's family history that bears on the story. You may therefore want to read Book&nbsp;1 before reading Book&nbsp;2.\n\nThis is a rewrite of a series I posted in the past and removed for a while.\n\nPlease leave your comments. I try to respond to non-anonymous comments within a few days.\n\n&mdash;CarlusMagnus\n\n+++++++++++++++++++++++++\n\n&#8230;my head hurt, and someone was shining a bright light into one of my eyes. I blinked furiously to try to make the light go away. I tried to turn, but for some reason, I couldn't move my head. My arms and my legs wouldn't move, either.\n\nA male voice said, kindly, \"Relax, lad. You've hit your head pretty hard, and we want to be sure you don't hurt yourself any more than that fall already did, so you're strapped down. The bright light is because I'm double-checking your pupils' responses.\"\n\nMemory flooded back. I remembered walking toward campus, The Doberman's rage, his attack, my response, and&#8230;Mindy! a wave of terror ran through me.\n\n\"Mindy!\" I squawked. \"Where's Mindy? Is she okay?\"\n\nI can't remember ever being as afraid as I was at that moment.\n\n\"Who is Mindy?\" the voice asked.\n\nThe light went away; after a few seconds, I could see that I was talking to a white-haired man wearing a doctor's white coat. And I was lying on a table surrounded by a green curtain that hung from rails. I could hear a good bit of hubbub beyond the curtain. a lot of people were carrying on a lot of conversations, but I couldn't distinguish any single voice. I gathered I was in an emergency room.\n\n\"She's my sister,\" I said. \"Please! I need to know where she is and if she's hurt. There was a dog&#8230;\"\n\n\"She's here. If you are who I think you are, she's been asking the same thing about you ever since the medics arrived at the scene of your unpleasantness. We know all about the dog. She has some pretty unpleasant dog bites, and a couple of them bled quite a bit. But she's going to be fine.\"\n\nI tried to get up, but he was right. They'd strapped me down so that, except for my hands and my feet, I couldn't budge.\n\n\"If she's hurt, I need to go to her,\" I said. \"Let me up.\"\n\n\"Right now, we're more worried about you than we are about her, so you're just going to have to stay put for a while. She's been hurt, but she'll be fine&mdash;and we'll see to it that someone tells her how you're doing.\n\n\"You're in the City Hospital Emergency Department, and I'm Dr.&nbsp;Morrow. We need to figure out how badly you hurt your head and if you broke your neck when you fell. We don't want to move you any more than we have to until we have answers to those questions, so we're going to get an X-ray machine in here and have a look. How do you feel?\"\n\n\"My head feels like someone just stopped hitting it with a hammer,\" I said, \"But I can live with it. My neck hurts, too. And my left ankle aches a little.\"\n\n\"Where does your neck hurt?\"\n\n\"Around my throat,\" I replied.\n\n\"I'm not surprised,\" he remarked, reaching for something out of my range of vision. He held it up; it was my bomber jacket. He pulled the collar up so that I could see the underside and the throat strap. The thick leather had a definite chewed look, including several slashes and some punctures. And the button that had held the throat strap in place hung by two or three threads.\n\n\"The EMTs who brought you in said that you had your collar raised and fastened. Good thing. Because this collar was there, you're just going to have some bruising. If you hadn't raised it and fastened it, you might not have a throat now.\"\n\nI gulped; there didn't seem to be much to say about that.\n\n\"I'll have a look at your ankle. Meanwhile, can you tell me what year it is?\"\n\nThat was the silliest damned question I'd ever heard&mdash;especially given the circumstances: My little sister was hurt and he wouldn't let me go help her.\n\n\"It's 1987, of course,\" I said.\n\n\"Good,\" he replied. \"And what's your full name?\n\nI remembered what I knew about head injuries. Of course! I'd hit my head, he'd said&mdash;so he was trying to see how well I was thinking.\n\n\"I'm Charles Edward Magness,\" I said. \"I was born on January tenth of 1968, and I'm 19. My sister is Melinda Lee Magness. She was born on May twenty-first of 1969. She's 18. And I need to go to her because she's hurt.\"\n\nAbout then I remembered my manners. \"Please,\" I added, only a little bit late.\n\nHe smiled, for the first time. \"You seem to be thinking well, and I don't think we need to worry about a serious brain injury at the moment. Your pupils are reacting normally, and that's another good sign. So is your concern for your sister.\"\n\nHe put a couple of his fingers into my left hand and told me to squeeze hard; I did. He did the same thing with my right hand.\n\n\"That's good,\" he said, \"That's very good. Move your feet.\"\n\nI did that. He had me push against his hand with each foot, in both directions; I did that, too. He looked at my left ankle, and had me rotate my foot some.\n\n\"Excellent,\" he said. \"I think you twisted your ankle some. But there's no swelling, and you're moving it without trouble. It should be fine by the time we're ready to let you go.\n\n\"I think it's unlikely that you have serious spinal cord injury. But we need to be very sure that you didn't break your neck when you fell; we always have to worry about that when somebody falls and knocks himself out. So I can't let you get up until we're sure. And you could have a skull fracture. That's something else we want to be sure about. And there are some other things that aren't so urgent now that you're awake, talking, and reasoning well. We can think about those things later.\n\n\"Mindy wants to see you, too. All I can tell you right now is that we're as sure as we can ever be about anything that she'll be fine. I'm afraid you're going to have to make do with that for now.\"\n\nA voice came from just outside the curtain. \"Bob,\" it said, \"Is that the young man from the dog incident you're with? Can I talk to him?\"\n\n\"That's one of the police officers who came in with you,\" the doctor said. \"Do you want to talk to him now, or wait until later. He'll be pretty persistent, and you'll have to talk to him sooner or later.\"\n\nForgetting, I tried to nod. Of course, I couldn't. So I said, \"Sure.\"\n\n\"Come on in, Andy,\" the doctor said.\n\nAndy turned out to be the police sergeant we'd seen at Burger Cheapie. He wanted to hear my version of what had happened. He wouldn't say anything, himself, about it until he'd gotten the story from my point of view&mdash;and he seemed to be particularly interested when I told him that the gate had been open. He said that nobody else had known that.\n\nWhen I'd gone through everything I could remember, I asked, \"What happened to the dog?\"\n\n\"Oh,\" he said, \"Li'l Abner shot the son of a bitch. Put a .357 Magnum slug into it. And that was that. Every cop in town knowed that dog, and we all reckoned one of us would have to kill it one of these days. I'm glad we killed it afore it killed a person&mdash;which, by the way, it come almighty close to doing to you and your sister.\"\n\nHe told me what he knew of what had happened, and how he'd come to know it.\n\nIt turned out that several students had been on their way to Krojer. They had been nearly right across the street from The Dog House as Mindy and I had first attracted The Doberman's attention. They'd seen the dog come bursting through the gate and pause. And they'd told the cop how I'd picked up that pipe while I pushed Mindy behind me, how I'd met the dog's first attack, and how I'd fallen down doing so.\n\nAndy and Li'l Abner&mdash;who had to be, and was, the giant cop who'd held the door for us as we left the burger joint&mdash;had no sooner stepped into the restaurant than they'd gotten a radioed request that they defer their supper to go and take a theft report. They'd been just about to get back into their car when they'd heard the dog's ruckus. That hadn't fazed them, being pretty much normal for the The Dog House neighborhood. Mindy's scream had not been normal.\n\nLi'l Abner hadn't even looked at his sergeant when he'd heard Mindy; he'd just taken off at a gallop for the sound. Andy, who considered himself in pretty good shape for his age, couldn't keep up with Abner&mdash;who, he said, was very fast on his feet in spite of his size. Andy rounded the corner from the parking lot several seconds behind Abner&mdash;but before the dog attacked, and in plenty of time to see me hit the dog, go down, and not get up.\n\n\"You hurt that dog considerable,\" he went on. \"You crippled it. It couldn't use its left front leg after you whacked it with that there pipe. And it knowed who'd hurt it. It went for your throat right after you landed, and I thought for sure that you'd be dead afore either Abner or me could get close enough to do you any good. I seen you fall, go limp, and roll flat on your back, and I knowed you was knocked out. Thank God for your jacket collar and for your sister!\"\n\nAs he spoke, I heard a commotion outside the curtain that supposedly provided privacy.\n\nI already knew about the jacket. \"My sister?\" I said. \"Mindy?\"\n\nHe began, \"That little gal is somethi&mdash;\"\n\n\"I am not little!\" came a familiar voice&mdash;a voice I'd never been happier to hear, saying the one thing that would reassure me more than anything else&mdash;from just beyond the curtain, from the vicinity of the activity I'd heard. She went on, and relief washed over me so that I almost missed what she said. \"Charlie? Are you in there? Are you okay? They won't let me see you!\"\n\nSomehow, I answered her. \"I'm fine. Except that I'm all tied up and being held against my will. There's a policeman in here that I'm going to complain about that to. Are you okay? I love you so much!\"\n\n\"I'm fine, too,\" came the reply, the volume diminishing as they rolled her out of the department. \"And I love you even more! But don't waste your time complaining to that sergeant. He wasn't any help at all when I wanted to see you.\" She said something else, but a door closed and cut her off.\n\nThe cop grinned at the doctor and me; the doctor grinned back.\n\n\"Looks like, between these two, you got your hands full, Doc,\" said the cop.\n\n\"This guy here sounds like his brain's working pretty well, Andy. I don't think he's got any cognition problems at all. So I'm hoping we can get rid of them fast,\" the doctor replied.\n\n\"You were saying about my little sister&#8230;\" I prompted the cop.\n\n\"Lad,\" he said, \"That little gal saved your life. When you went down and that dog went after you, she picked up that piece of pipe you dropped, and she fetched that dog a wallop like you wouldn't believe. She hit him right where you'd hit him, and that son of a bitch, he howled again and backed away from you.\n\n\"And then she stood over you with that pipe in her hand like a mother tiger protecting her baby. That dog kept slashing at her, and he chewed her legs up considerable&mdash;but she wasn't backing down for nothing. And she give him Hell with that pipe, too. I don't reckon I could of done much better my own self&mdash;except I'm stronger and I maybe could of hit him harder. And that animal probably weighed more than her.\n\n\"I been a cop for over thirty years now, and I don't believe I ever seen the like afore.\"\n\nHe looked me right in the eye, and said \"Charlie&#8230;lad&#8230;you got yourself one hell of a sister. Might could be she's a little gal on the outside, even if she don't think so, but on the inside, where it matters, she's every bit as big as Li'l Abner. And she's got a lion's heart.\n\n\"Even so, it's a good thing me and Abner was close, because that son of a bitch chewed her up pretty good, mostly on the legs&mdash;and I'm thinking she couldn't of stayed on her feet much longer. It took us less than a minute to get to you from that parking lot, but it seemed like a year.\n\n\"Li'l Abner, he got there first. And he just stepped in between your sister and the dog. And when the dog tried to jump him, why he shoved his gun down its throat and blew the son of a bitch to Hell.\n\n\"And when your sister seen that Abner was taking over the dog from her, why she dropped to her knees beside you and wouldn't leave you till we hauled her away&mdash;and, let me tell you, it took some hauling.\"\n\n\"She shouldn't have had to face that dog,\" I said. I was feeling a lot worse about that than about any of my injuries. \"I feel really bad about that. I'm her big brother, and I'm supposed to protect her. If I'd done my job right she wouldn't be hurt.\"\n\n\"No-sir!\" he replied. \"You done your full duty. You only got in one lick, but it was a damn good one. I think you busted that dog's shoulder when you smacked it. Li'l Abner hisself couldn't of hit that dog no harder&mdash;and I've seen him pound a full-growed man through a wall with one punch. If you hadn't done what you done, your sister couldn't of held that animal off the two of you the way she done. You done your duty right and good&mdash;cain't nobody ask a man for more. And if you hadn't been there, your sister would be dead now. You saved her life, lad. You ain't got nothing to feel bad about.\n\n\"I've been in this here protecting-people business for a long time now. It took me a while, but I've learned this: There ain't no way you can get it right every time. And when you don't get it right, it don't necessarily mean that you didn't try hard enough or that you done something wrong. It just means you cain't always do it. Like Abner and me, we couldn't get there fast enough tonight. 'Twasn't nothing we done wrong&mdash;we just flat couldn't do it.\n\n\"You and your sister, you both done good tonight, and you're both gonna come out of it okay. In the end that's what counts. And it's all that counts.\"\n\n\"Where is Abner?\" I asked, suddenly curious. \"I'd like to thank him\"\n\n\"He's out in the cap'n's car in the parking lot&mdash;filling out forms and explaining why he 'discharged his weepon'. That's how the brass hats say 'shot his gun'. He ain't in no trouble&mdash;there ain't no doubt but what he had to do what he done, and the cap'n, he knows that. But the brass, they do like their paperwork.\n\n\"And don't worry none about thanking him. It's our job to do what we done.\"\n\n\"Andy,\" said the doctor, \"When the captain is done with Li'l Abner, send him in here so we can look at his hand.\"\n\n\"I'll do that,\" said Andy, putting on his cap to leave. He turned to me.\n\n\"Now you take care of yourself, youngster. And keep on taking care of that sister of yours. Cause she is surely going to keep taking care of you&mdash;and that's a fact.\"\n\nAnd he was gone.\n\nThe doctor looked at me. \"If Andy says that Li'l Abner shoved his gun down that dog's throat, that's exactly what Abner did. Along with his hand. And Abner isn't the type to worry about 'just a little old dog bite'. But they can get badly infected. That's one of the things we need to be careful about with your sister.\n\n\"I'm going to leave you here for a bit, Charlie. I have other patients I have to attend to. But the X-ray should be here soon.\" He smiled at me; it was an evil smile worthy of Mindy. \"Behave yourself while I'm gone.\"\n\nAs if, strapped down so that I could move only my hands and my feet, there was any trouble I could get into.\n\nThe X-ray did arrive soon thereafter&mdash;probably even sooner than it seemed to me. The doctor came back in after the tech had taken the pictures.\n\n\"The radiologist just arrived, and we should know soon if anything's broken. My guess is that everything is fine&mdash;but the potential consequences of a bad guess are just too severe for us to take that risk. That's why I called in the radiologist instead of trying to read the films myself. Just be patient for a few more minutes, and we'll know what we have to do.\"\n\nAnd he disappeared again.\n\nIt was probably only fifteen or twenty minutes before he came back, but it seemed like hours to me.\n\nHe was smiling. \"Charlie, the films show that nothing's broken, so I'm going to let you leave. But there's a catch.\"\n\nI looked at him distrustfully, even though an orderly had followed him in and was unstrapping me.\n\n\"What's that?\" I asked, probably in my most suspicious voice.\n\n\"You were unconscious for twenty to twenty-five minutes, which means that you sustained a pretty sturdy blow to your head. The goose egg on the left side of your head confirms that.\" Having my arms finally loosened, I was in fact rubbing said goose egg somewhat ruefully as he spoke. \"Do you know what a hematoma is?\" he asked.\n\n\"Yes,\" I said, \"I've had some first aid training from the Mountain Odyssey Learning School, and I remember that.\"\n\n\"Good,\" he answered. \"They're a good outfit, and they've been doing good work recently with backcountry first response&mdash;so I'm sure they covered this kind of injury well. But just to be sure, I'm going to review it with you.\n\n\"Sometimes, when blood vessels get broken, blood leaks out and pools in the surrounding tissue. That's a hematoma. In most parts of your body, a hematoma is just a nuisance that your system pretty much knows what to do about. Once in a while, they harden and have to be dealt with surgically.\n\n\"But a subdural hematoma, or a hematoma between your brain and your skull, is very serious, because there's only a limited amount of space in there, and your brain needs all of it. When blood tries to take up some of that space, it compresses your brain. That can have undesirable consequences&mdash;like death.\"\n\n\"From my point of view,\" I said, keeping a straight face, \"that's certainly undesirable.\"\n\n\"Good,\" he said, smiling. \"We understand each other. There isn't any way for us to tell if you have a subdural hematoma, but there is a definite possibility that you do. And they can be very insidious. If you have one, it's altogether possible that you could feel fine for days, and then, without warning, collapse into unconsciousness.\n\n\"That would be unusual, but it does happen. Far more likely is that you would experience headaches that get worse over time, dizziness, vomiting, confusion, weakening on one side of your body, and/or unexplained drowsiness, before ultimately lapsing into coma. Do you understand?\"\n\n\"Yes,\" I said. \"I remember what kind of trouble head injuries can cause.\"\n\n\"Good,\" he said, again. \"Now if you should suddenly lose consciousness without warning, that would be a medical emergency you might not survive. But, as I said, that's unusual&mdash;especially in a case like yours, because you weren't unconscious for a half hour or more. But you need to be on the lookout for the symptoms I've mentioned. If you experience any of those, I want you to have a responsible person who knows about your injury take you to medical help immediately. And I do mean immediately, and not in twenty minutes or so. Have you got that?\"\n\n\"Yes, sir, I have that. 'Immediately.' I would like to avoid undesirable consequences.\"\n\n\"Exactly,\" he said. \"For the next five days, I don't want you doing anything that would raise your blood pressure. No physical exertion. No sports. No sex&mdash;just tell your girl friends that they'll have to wait a while. And, most of all, I don't want you to be alone for any extended period of time for the next few days. I've just talked to Dr.&nbsp;Baire at the campus infirmary. We want you to sleep there, where medical personnel can keep an eye on you through the night, for the next five nights. We've done this before with students, because you find it more convenient, and the college hospital can follow you more cheaply than we can here. So your student health insurance likes that.\"",
        "\"If you say so, Doctor,\" I said, unhappily.\n\n\"I do say so, Charlie. I know it will be a pain, and it's going to be even worse than you're thinking right now. Someone will be waking you up every two hours or so through those five nights, so that we can be absolutely sure that you haven't lapsed into coma during your sleep.\"\n\n\"Yes, sir,\" I said, even more glumly; there didn't seem to be anything else to say, and I didn't feel like saying it any other way.\n\n\"I'm very serious about this,\" he went on. \"Here's how serious. You're to show up at the campus hospital by nine-thirty every evening, after tonight, through Tuesday. If you don't, both campus security and the city police will come looking for you. Same tonight, if you don't get there within a half-hour of leaving here. Have you got that?\"\n\n\"I've got it. I wasn't planning to play hooky, though. I understand why you want me there&mdash;even if I don't like it.\"\n\nHe smiled at me. \"I know this is inconvenient. But it isn't nearly as inconvenient as what could happen if we don't watch you carefully.\n\n\"And I was right here, too, when Andy described your&#8230;ummm, adventure. This won't be anything compared to what you went through with that dog.\n\n\"How are you going to get to the college infirmary tonight? Do we need to find you a ride?\"\n\n\"I can afford a cab, and that's what I'll do. I'll stop by my house and get what I need for the night.\n\n\"What about Mindy?\" I changed the subject.\n\n\"She's going to be in surgery for a few hours. She has some torn muscle tissue we need to repair. And she has a couple of nasty little bleeds from small arteries that got damaged; we need to tie those off. She appears to be fortunate because no tendons or ligaments seem to be involved; they take a long time to heal. She'll be on crutches for a while, but she'll be fine before very long.\n\n\"And we have an excellent plastic surgeon on call tonight. He'll be doing some of his finest needlework. If she's really unlucky, she'll be the only person in the world who'll be able to see scars. But I'm betting that even she won't be able to see them.\n\n\"She'll spend the night here. If everything goes as it should, we can release her in the morning.\"\n\n\"Okay, I'll come by in the morning to see how she is,\" I said. \"If you've let her go, I'll take her back to her dorm.\"\n\n\"That will work,\" he said. \"But you'll need to bring her some clothes. The ones she was wearing are ruined. Even if we hadn't had to cut her jeans off, they were ruined by bloodstains.\"\n\n\"I'll do that,\" I said. \"Thanks&mdash;I wouldn't have thought of it. But can I ask you one more thing, Doctor?\"\n\n\"Sure.\"\n\n\"If it had been Mindy who had the head injury, would you be worried about her having a SHE-matoma?\"\n\nA stricken look appeared on his face, and he said, \"Get out of my emergency room before I reconsider and decide that you need a full body cast for the next eight months!\"\n\n~ ~ ~ ~ ~\n\nI got up at about seven the next morning. I didn't really have much choice, because the staff was bustling around making plenty of noise. I'd gotten to Merrill Hall, which was the official name of the college infirmary, a little before eleven and gone immediately to bed.\n\nAs promised, someone had made me talk to them every two hours to make sure that I wasn't trying to leave the planet for good. So, while it hadn't exactly been a short night, I wasn't in an altogether pleasant mood when seven o'clock arrived. My outlook improved somewhat when I found out that breakfast was included in the deal. It was no better than the food the dorms served, but it wasn't any worse either.\n\nI wanted more than anything to see Mindy, to find out how she was doing, and to get her side of the story. So as soon as I'd eaten, I went to Bussey Hall to get some clothes for her to wear home.\n\nFrom her roommate, Carol, I learned that news of the incident had made it all over the campus. The word was that The Doberman had finally broken through its fence and had attacked Mindy and me. Then a fleet of ambulances had allegedly carted us off to the hospital&mdash;or possibly the morgue. I was reputed to have been more dead than alive when last seen, and Mindy was said to have been bleeding to death. The good news, so to speak, had been that The Doberman was deservedly dead&mdash;having died in a hail of police bullets as he was doing his best to gut Mindy.\n\nI had to admit that the story Carol had heard was a damned good one, even if&mdash;possibly because&mdash;it stretched a point or two. The \"fleet of ambulances\" was an especially nice touch, I thought, suggesting as it did that at least one of us had left the scene in several pieces.\n\nAnd she did seem mildly disappointed to learn that the rumors were a bit exaggerated&mdash;she seemed really reluctant to give up the part about the hail of police bullets. But I had to give her some credit: She wasn't the least bit disappointed to learn that Mindy and I were going to survive without permanent damage.\n\nI got to the hospital in another cab at about half past eight, to find that they had released Mindy. They knew I was coming for her, so she was sitting in a wheelchair near the main entrance when I walked in. She was wearing a hospital bathrobe over one of those hospital gowns that always leave your ass hanging out. There were patches and bandages all over her legs&mdash;especially her left one. And a pair of crutches leaned against one side of the wheelchair.\n\nI'd never been happier to see her; at my first sight of her, I ran to her. She was just as happy to see me; she rose carefully out of the wheelchair on her right foot to greet me. Somehow, she hopped, one-footed, into my enveloping arms&mdash;wrapping her own little arms around me and placing her head on my left shoulder.\n\n\"Oh, God, Charlie! I was so afraid! You fell and you didn't get up! And that awful dog attacked you on the ground! You weren't moving! I was so afraid for you&#8230;\"\n\nShe was crying. I held her close, trying to comfort her&mdash;and myself.\n\nFor I realized that I was crying, too. Right there in public, and to Hell with the Fundamental Code&mdash;this was worth a good cry. My little sister, my lover, was going to be fine&mdash;even though I hadn't been able to protect her the way I'd thought I should have.\n\nShe pulled back to look at me, and I saw that in spite of the tears, she was laughing. And so, I knew, was I. For the first time for either of us, we were laughing and crying at the same time&mdash;and the two of us were doing that together.\n\n~ ~ ~ ~ ~\n\nI took Mindy back to her dorm in the cab&mdash;which I'd had wait for me. On the way, we talked about the restrictions the medical people had imposed on us. Hers were less severe than mine. She was to keep her weight off of her left leg for a few days, and she was to see Dr.&nbsp;Baire if there were any signs of infection. (The antibiotic she was taking should prevent that, she'd been told&mdash;but they wanted to be sure.)\n\nI would have carried her up the front steps to the door of the building, but I wasn't allowed to exert myself, and all I could do was be sure that she stayed upright as she crutched her way up. She sensed my discomfort, figured out the reason for it, and stuck her tongue out at me. I'm strong, too!\n\nI grinned at her: I've never doubted it; I just like doing things for you!\n\nHer tongue disappeared, and she returned my grin: I know!\n\nWe called Mom and Dad, collect, from the desk phone in the lobby. Dr.&nbsp;Baire had extorted a promise from me that we would do so&mdash;the alternative being that she would do it. I reckoned they deserved to hear, from us instead of from someone they didn't know, what had happened and that we were doing fine.\n\nNaturally, they wanted to get on the first plane and come nurse us back to health. With some difficulty, we talked them out of it. It helped that the two of us were there, talking to them, instead of some third party&mdash;Dr.&nbsp;Baire had been right to make us do this.\n\nMom cried some, and Dad harrumphed a bit. But, eventually, they agreed that we were (nearly) grownups, that the medical people seemed to think we were going to be fine, and that missing work could be a royal pain in the ass.\n\nWhat finally sealed it was our promise to call immediately if anything at all unexpected developed. After that, they finally agreed that they, the parents, needed to be with us more than we, the kids, needed them. Once they'd admitted that, they also had to agree that they were grownup enough to let us handle our healing on our own together&mdash;just as we had handled the emergency itself on our own together.\n\nWe ended the phone call, amidst mutual assurances of love, with promises that Mindy or I (or both) would call every day until we'd returned to normal.\n\nWhen we'd finished, Mindy allowed that she was hurting pretty good and thought she'd like to go to her room, take one of the pain pills they'd supplied her with, and take a nap. I could see that she didn't want to separate any more than I did, but that she needed both the pain pill and the sleep.\n\nFiguring that no one would think it strange after what we'd been through, I took her into my arms and gave her a good squeeze, while whispering into her ear, \"I love you so much.\"\n\n\"I love you even more,\" came back her own whisper as she tried, ineffectively, to return the hug while hanging onto her crutches.\n\nBy then, Mindy's friends in the dorm were gathering around her, clucking and making other motherly noises. Seeing that she would be looked after, I gave her a brotherly peck on the cheek, and walked back to my house.\n\n~ ~ ~ ~ ~\n\nThe worst part of the few days following our adventure had turned out to be that Mindy and I had very little time alone together. Not being able to make love was disappointing, but even worse was the fact that we couldn't even arrange the privacy we needed in order to talk to each other about what had happened and how we felt about it. On crutches, Mindy hadn't been able to get all the way down to the house, and we'd done our studying together in the library or in the student union&mdash;surrounded by crowds.\n\nI made it without incident through my sentence of five nights in Merrill Hall. Dr.&nbsp;Baire said that it was still possible that I had a bleed in my head, but that the chances were now vanishingly small. She cautioned me again about vomiting, dizziness, headaches, etc.&mdash;the same things that Dr.&nbsp;Morrow had mentioned&mdash;and said that unless I began to have such symptoms I could consider myself a healthy nineteen-year-old man again and return to my normal activities. I saw no point in mentioning it to her, but there was one particular activity, which I'd come to regard as normal during the last three months, that I very much wanted to return to.\n\nMindy, too, was healing well. She'd met me at Merrill on Tuesday morning at eight, and I'd waited for her while she'd had her stitches removed. That same morning, she asked the doctor if she could discard one of her crutches, saying that her left leg felt a lot better and she wanted to start putting weight on it. Dr.&nbsp;Baire said that as long as pain didn't make her want to use two crutches, it was fine to use only one&mdash;or even none when it felt reasonable to do so.\n\nMindy met me at Merrill again on Wednesday morning. She had only one crutch, and I could see by the glint in her eyes that her SSDD had ensured that she hadn't forgotten what would no longer be a forbidden activity for me. And I'd awakened with a magnificent morning boner that had reminded me that I was now suffering the pangs of DSB. But I made damned sure that I didn't act sick&mdash;not even a tiny bit&mdash;when I saw Mindy. And every bit of the climber's webbing in the house had been hidden&mdash;well hidden&mdash;for weeks&#8230;\n\nWhen we left Merrill Hall, Mindy handed me her crutch and tried walking a bit without it, but we'd gone only thirty yards when she said her left leg still hurt too much. She did fine with just the one crutch, though. By the time we got to my house, it was nearly nine, and George had left for his organic chemistry class. We knew that he would be gone until after the two of us had to be in our classes.\n\nOnce we were inside the front door, I lifted her little body into my arms, and I began climbing the stairs. She pulled herself up to whisper into my ear. \"I call a foul! Manhandling a woman&mdash;again!\" And she nibbled lightly on my neck.\n\n\"If you think this is foul&mdash;\" I began, intending to describe other, fouler, things I was about to perpetrate upon her lovely little body.\n\n\"But I do like it when this man handles me,\" she continued, interrupting me. \"And the fouler, the better.\"\n\n\"Then you are going to be very happy, very soon,\" I whispered back, \"because I plan to put my man handle where it'll do the most good.\"\n\n\"Not,\" she whispered, smiling wickedly, \"Before I handle your man handle.\"\n\nWe were rounding the corner from the stairs into the second-floor hall. My man handle was tenting my jeans.\n\n\"I call a foul!\" I said, smiling wickedly back at her as I carried her into my room. \"Threatening to woman-handle a man's man handle.\"\n\n\"Mmmm-hmmm,\" she hummed happily. \"And after I woman-handle it, I'm going to woman-mouthle my man's man handle.\"\n\nI turned to my left, bringing her within reach of the light-switch. \"Lean the crutch there,\" I said, \"And turn on the light.\"\n\nShe did both and brought her arm up around my neck. She pulled me down into a long, deep kiss as we stood there, just inside the doorway to the room.\n\n\"Damn!\" she said, when we ended the kiss. \"I've missed your man handle these past few days.\"\n\n\"SSDD?\" I asked, moving toward the side of the bed so that her head would be at the upper end of the bed when I laid her down. The last use my bed had seen had been for our afternoon delight the previous Friday afternoon, and it stood just as we'd left it&mdash;unmade, as required by the Fundamental Code.\n\nShe was nibbling on my neck again. \"Mmm-hmm,\" she hummed as she nibbled. She removed her mouth from my neck just long enough to ask \"DSB?\"\n\n\"Like you wouldn't believe,\" I said, bending over to deposit her, on her back, in the middle of the bed. She sat up immediately and reached for my belt buckle, as I reached for her shirt buttons. I kicked off my shoes as I unbuttoned her.\n\nShe returned the favor, and before long, we were naked&mdash;and our clothes were scattered on the floor near the bed. I reached with both hands for her amazing tits&mdash;the tits that I so adored and so loved to touch. Keeping her promise, she began to woman-handle my cock, stroking it and tickling it.\n\nHer nipples had already hardened, and I felt their stiffness against the palms of my hands as I cupped her tits. Eyes closed, she raised her face to me, her mouth open, seeking and finding my own. Our tongues met again, savored each other, thrust in and out of each other's mouths.\n\nI broke the kiss as I lay down beside her. She rose to her knees and pushed me over onto my back. Bending down, and, taking my cock into her little right hand, she guided it into her mouth. Her lips encircled me and slid all the way to the base of my shaft. The heat and the moisture of her mouth were exquisite, and I moaned my delight. I remained almost catatonic as my little sister held me, deep-throated, for half a minute.\n\nWhen she came up for air, I reached down and pulled her toward me, saying, \"C'm'ere, you!\"\n\nShe came, and lay on her side with an arm around my chest, stretching her lean, firm, naked little body out against me. She put her head on my shoulder, and I thrilled again to the touch of her little boobs against my side, the tickle of her little bush against my hip. She folded her leg up over my thighs, and the hot wetness of her pussy kissed the juncture of my thigh with my hip.\n\n\"You feel so wonderful, naked against me,\" I whispered to her.\n\nShe reached up with her right hand and caressed my cheek, raising her head to look at me as she did so.\n\n\"I do feel wonderful, naked against your naked body. It feels like where I belong,\" she whispered back.\n\nShe scooched up a little bit, to where her lips could reach mine, and bent down to kiss me. The slippery heat of her pussy stroked me as she moved. Our tongues intertwined again, and I held her little body, so different from my own yet so much the same, tightly to me. My cock&mdash;which had stiffened the instant I lifted her to bring her up the stairs&mdash;throbbed with desire and anticipation.\n\nShe backed away from our kiss, propped herself up on her elbow, and looked into my eyes&mdash;and her own deep blue eyes captivated me. Shaking off their spell, I rose to kiss her on the neck, and felt her raise her head to clear my target.\n\nAt first, I nibbled with my lips, and then, slowly, I brought my teeth and my tongue into play as I moved toward her throat and down toward the center of her chest. Gently, I rolled her over onto her back, and as I did so, my lips, teeth, and tongue climbed the mound of a tit, nibbling and kissing as they did so. When they achieved the peak, I sucked her nipple into my hungry mouth, where my tongue swirled around it, caressing it and flicking it.\n\nShe moaned at that touch, and thrust her chest toward me, demanding that I take her nipple deeper into my mouth. I sucked harder, flicked my tongue harder, brought my teeth into play&mdash;but gently, gently. She sighed, and I felt her hips begin to rotate.\n\n\"Uuuhhh!\" she groaned. \"That feels so good, Big Brother!\"\n\nI moved to her other nipple, and gave it similar treatment. Now her desire had become almost tangible.\n\nI was up on my own knees, now, and I kissed my way down into the valley between her boobs&mdash;using lips and tongue&mdash;and onward down to her bellybutton. She giggled a bit as I swirled my tongue in it.\n\n\"That tickles!\" she complained.\n\nOnward I continued, down the center of her abdomen, heading for the Promised Land&mdash;the scent, the marvelous scent, of which now filled my nostrils. My mouth trailed through her little bush, my lips sometimes tugging at the wiry little curls, my tongue sometimes penetrating to the underlying skin. I felt her breath quicken as she anticipated the touch that was soon to come. Her hips rocked in expectation.\n\nI was still on my knees beside her, and the long axis of my body now made almost a right angle with hers. The line of my lips was parallel to the line of her labia when I reached them, and so it was natural that I should kiss her cleft just as I had earlier kissed her mouth. I raised my head for a moment, in order to get a good look at one of my favorite views. I pressed my mouth against her, my lips puckered. And, just as when I kissed her mouth, my lips opened and my tongue entered her in the ultimate deep kiss.\n\nAt that touch, she stiffened and expelled her breath in a sound that combined moan and muted shriek. Her hands converged on my head and softly, gently, clasped me.\n\nSlowly, I wiggled my tongue, tickling her, savoring the taste and the feel of my little sister's most intimate place. The aroma of her most profoundly female part now had me almost in a trance&mdash;unable to think of anything but this most enchanting part of her enchanting little body.\n\nUnder me, her hips began to roll a little. Short, mewling sounds escaped from her mouth. Still her hands held me to herself, pleading without ordering, asking without demanding.\n\nHow long that kiss lasted, I don't know. It seemed to last forever, and yet take no time at all. At last, I withdrew my tongue and slid it, still extended, upward along her cleft&mdash;toward her waiting clit. Finding her little button, I circled it, teased it, tweaked it the way I knew she liked so much.\n\n\"Oh, God, Charlie! That feels so wonderful. Make me come! Lick my clit, and make me come!\"",
        "She was closer to her peak than I had thought, so I stiffened my tongue and attacked her clit more directly. Her hips bucked under me, and her hands, now ordering, now demanding, forced my mouth more tightly against her as the tip of my tongue plucked at her jewel in its soft, pink setting.\n\nAs I plucked and tweaked, I could feel my little sister's approaching climax almost as though it were my own. Her motions became more frantic and less organized; her utterances became less and less coherent. The full force of her orgasm grasped her; she arched her back, and her grip on my head tightened, driving my mouth against herself. She gasped out muffled sobs and moans, and I felt her muscles stiffen, contracting in waves as she reached for the peak of her ecstasy. Slowly, slowly, slowly, she subsided. Her muscles softened, her grip on my head relaxed, and her sobs quieted&mdash;though her moans continued.\n\nKnowing that her clit was now too sensitive to abide my touch, I shifted farther to my right, kissing my way back up through her fur, up to her belly button, beyond to her tits. I again took her right nipple into my mouth and sucked gently on it.\n\nAt the touch of my mouth on her nipple, her moaning intensified. Her hands had followed my head; she held me gently, stroking me. After a minute or two, she had recovered enough to speak.\n\n\"Oh, Charlie, that feels so good right after I've come. It's almost like I'm still coming&mdash;only in a gentler way.\"\n\nI made a mental note to myself that she liked attention to her nipples right after she'd come, and I kept on sucking. I hadn't come yet, but the little moans she emitted every now and then as I mouthed her nipple more than made the wait worthwhile.\n\nAfter a few more minutes, her caresses strengthened. Soon, she was touching not just my head, but also my ears, my neck, my shoulders, my back. Her hands returned to my head, and, taking hold, they brought me up to place my lips against hers for a long, deep kiss. As we kissed, she lowered her right arm and wrapped it around me, pressing my chest against her boobs.\n\nShe released me, and I raised my head to look at her smiling face.\n\n\"That was so good, lover,\" she whispered to me. \"But I think you'd better put him in me now.\"\n\nI kissed her again, briefly. \"I've been thinking about it.\"\n\nShe chuckled, reached up for another quick, tender kiss. \"Quelle surprise!\"\n\nI got up on my knees, and moved between her legs. \"I just love it when you talk dirty,\" I whispered as I placed the head of my cock in her cleft and slid it up and down a few times&mdash;before finally bringing it to the entrance to her body. She closed her eyes, wrapped her legs around my ass, and moaned as Big Brother's cock slid slowly into Little Sister's hot, tight, slippery depths.\n\n\"You feel so good in me. I've missed feeling you inside me the last few days. I like it too much to go without!\" She opened her eyes again; they smiled as if she were welcoming me home. She had wrapped both arms around me, and her hands were now on my lower back, holding my body tightly against her own. I kissed her again, and she moaned into the kiss. Her hips rocked a little, and her sheath caressed the hard rod it enveloped.\n\nMy own hips rocked, answering hers, and I her hands moved, stroking lovingly as they went, to my hip bones, where they encouraged me to plunge into her welcoming body, withdraw, plunge, withdraw, plunge&#8230; I lost all sense of time and place, obsessed now with the sliding friction of her sheath on my cock and the pressure it built inside me.\n\n\"I'm not gonna last long&#8230;\" I grunted out as my cock, now in complete control, thrust itself into her again, again, again, seeking release.\n\n\"Come for me, lover,\" she murmured to me, her hands still riding on my hips, driving my rhythm almost as insistently as my cock. \"Come in me! I need you so much! I love you so much!\"\n\nAnd at those last words, my hips rammed my cock deep into her body and I exploded into her. Again, again, yet again, my white-hot semen surged through the length of my cock into her, while she crooned sounds, meaningless to me in the throes of my orgasm, into my ears. Finally, when it seemed that it must end, came that final ecstatic spasm&mdash;paralyzing me for an endless thirty seconds.\n\nI collapsed into her arms, remembering, barely, to keep my elbows under me. Her hips still rocked beneath me, caressing my still-hard cock within herself as it began to soften. I gasped for air, and, when I'd regained my breath a little, I turned my head to nibble gently on her ear with my lips. She stroked up and down my body.\n\nRemembering what she'd said to me just before my cataclysm, I raised my head, and looked into the deep, deep blue of her smiling, loving eyes. \"I need you even more, and I love you even more,\" I said, and I kissed her.\n\nShe kissed me back, moaning as she did so. Her little hips were still rocking under me. My cock, pleased with the sensations she was causing in it, had stopped shrinking.\n\n\"I really like feeling you inside me,\" she whispered. Her eyes were closed again, and she was smiling.\n\nI rocked my own hips, intensifying the in-and-out motion of my cock inside her. She moaned again, and began to move a little more vigorously under me. My crown was still pretty sensitive, and long, deep strokes brought more stimulation than I could bear, but I found that I could maintain short, gentle ones&mdash;and even enjoy them, although I felt no need to come.\n\nBut it was different with her. I could see that she wanted to come again, so I continued to pump, using the short, gentle strokes I'd discovered I could enjoy.\n\nAnd, my own desire now satisfied, I found that I loved seeing her build slowly to another orgasm. I watched her expression pass from lazy, passive enjoyment through active desire to ecstatic agony.\n\nOnce more, she writhed, thrashed, and moaned under me. I felt her contract again and again in waves around me. And, finally, I saw her face relax again in the near unconsciousness of after-sex bliss. Gently, our bodies still joined, I kissed and nibbled at her while she slowly returned to me. At length, she opened her eyes and looked, smiling, directly into my own.\n\n\"I love coming with your cock in me, Charlie. It feels so&#8230;right.\"\n\nI leaned down and nibbled her right ear with my lips. \"I love it when you come with me in you, too,\" I murmured into her ear. \"I love feeling the way your pussy squeezes me and knowing that I've made you feel good.\"\n\nShe turned her head and kissed my neck. \"Mmmm. You do make me feel good.\"\n\nHer hands were again roaming my back, stroking it, tickling it. I raised my head again and kissed her on the lips. It turned into a long, loving kiss. When it ended, we looked into each other's eyes for a few moments.\n\n\"And I've missed making love with you,\" I said, as I withdrew from her body and rolled off of her onto my back. \"I wish I could've done a better job of protecting us.\"\n\nShe rolled toward me, placing her head on my shoulder and her bare little body against mine. Her leg she folded across my thighs, as her arm encircled me. Once again, I could feel her little boobs against the side of my chest, her pussy against my hip, dripping my cum onto me.\n\n\"Charlie,\" she said, \"Please don't beat yourself up about that. You did fine. Together, and with a little help, we came through it okay. You're fine, and I'm fine.\"\n\n\"I'm not beating myself up,\" I said, stroking her with my left hand. \"I meant exactly what I said. I do wish I could've done better, but it wasn't in the cards and I couldn't. What's done is done, and I'm not going to go off the deep end about it. Sergeant Andy convinced me that I'd done good before they even untied me that night.\"\n\n\"Yes.\" She snuggled in closer. \"You done good. I got no complaints.\"\n\n\"Me, either,\" I replied. \"And he told me what you'd done, too. You were the real hero. You saved my life.\"\n\n\"Oh, don't be silly, Charlie!\" She was actually outraged. \"I'm no hero. I just did what I had to do. &#8230;what anyone would have done.\"\n\nShe raised her head as she spoke and looked me in the eyes.\n\n\"You know,\" I said, \"I'll bet that's what every hero says.\"\n\n\"Don't! I'm not a hero! I was so scared. When you didn't get up I was afraid you were dead!\" Her eyes were sparkling; she was going to cry. The words came tumbling out: \"And then that God-damned dog went for your throat and you couldn't defend yourself and I knew that if I didn't do something it would kill you if it hadn't already&#8230; and I picked up that pipe and I hit it and I hit it and I hit it and it bit me and bit me and bit me and I hit it and hit it and it bit me&#8230; and I couldn't make it go away and it just wouldn't stop and if it hadn't been for that policeman&#8230; Oh, Charlie! I was so scared for you&#8230; I couldn't go on living without you!\"\n\nAnd she dissolved into great, body-wrenching sobs. She clutched at me, buried her face in my neck, and sobbed uncontrollably until lack of air forced her to quit. I held her tightly, stroking her nakedness gently, until the spasm had passed and she had regained her breath&mdash;along with a little of her composure.\n\n\"Mindy,\" I said, quietly, gently, lovingly, \"I couldn't go on living without you, either. You're my hero, and you always will be.\"\n\nShe was still sniffling as she raised her head again. Her tears tracked down her cheeks, but she managed a little smile, partly genuine, partly forced. She looked at me, and I saw that she was thinking about what I'd said, turning the idea over and over in her mind, inspecting it for holes, cracks, deformities, or other defects.\n\n\"Fair's fair,\" she said, at last. \"You're my hero. You always have been. And that will never change.\"\n\nShe kissed me gently, lingeringly, on the lips, and I tasted her tears.\n\nThe kiss ended, and she raised her head to look me in the eyes again; the half-real smile was still on her face.\n\n\"Big Brother and Little Sister,\" I whispered to her.\n\nShe whispered back, \"Best friends and lovers!\" And her smile deepened, turned real.\n\nClinging tightly to each other, we whispered together: \"Now and always!\"\n\n\"Little Sister,\" I said, \"I love you so much!\"\n\nShe put her head back on my shoulder, and she squeezed her bare little body even closer to me. \"Oh, Big Brother,\" she said, \"I love you even more!\"\n\n(End of Book 2)\n\nAs of May 2, 2016, Book 3 won't be ready for another four to six weeks. Family obligations and unexpected home repairs will prevent me from working for a while. But I fully intend to begin uploading the remaining two books in this series by this summer at the latest. Check my bio for updates.\n\n+++++++++++++++++++++++++\n\nComments are welcome. I don't comment on my own stories, so I have no way to respond to anonymous comments; I will try to respond to others.\n\n&mdash;CarlusMagnus"
    ],
    "authorname": "CarlusMagnus",
    "tags": [
        "brother and sister",
        "brother sister",
        "brother/sister",
        "incest romance",
        "love",
        "college",
        "sibling",
        "sibling sex",
        "siblings",
        "sister brother"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/charlie-and-mindy-bk-02-ch-07-1"
}