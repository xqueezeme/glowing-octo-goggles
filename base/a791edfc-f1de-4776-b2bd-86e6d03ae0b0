{
    "title": "Afterglow",
    "pages": [
        "Author's Note:\n\nA big thank you to the ever-lovely Randi for organizing the \"Highway Song\" event. To my team F.R., D.A., Laura L., Barry J., and Steve M. for being some fantastic betas. Dedicated to the two writers Bebop3 and MsCherylTerra, without whom this story would have never been finished. I am eternally grateful. \n\n\u2014\n\nThis story is set in 1993, a time when the Seattle music scene had put the final nail in the coffin of glam-rock, Seinfeld and Frasier ruled TV and the US still thought terrorism was a problem for other countries to worry about. All locations are real in the macro, but differ in the micro. The cities, locations, bazaars, etc exist and are accurately described, but license is taken with specifics.\n\n\u2014\n\nThe Drug Mule\n\n\u2014\n\nLAX.\n\nThe world's busiest origin and destination airport, it was built in a mid-century modern architectural style in 1928. It wasn't the prettiest of airports, but that didn't matter to me. I'd studied this airport, had pocketed all its secrets and had learned how to get around without being spotted by airport security. In the early days, I'd traveled by the private terminal, my organization paying over two thousand per flight, and an annual membership fee of four thousand just so I could go from car door to plane without a care in the world. The staff there had learned to turn the other way when elite customers smuggled in alcohol or some drugs, but it had all ended when security started bringing out the dogs. I opted out of VIP status, gave up first-class for economy, and blended in.\n\nAll so I could smuggle a backpack lined with dope behind the seams, a delivery to the cartel straight from Pakistan. I was an international mule in the drug world, one of the best, specializing in assignments from Thailand and Pakistan. I could move supply, and I could move it fast. In those days, a three-day turnaround had only been achieved by two people: El Chapo\u2014and myself. He used tunnels to smuggle; me? I used my pretty face. Big cornflower blue eyes, gold-spun blonde hair, and a dazzling white smile; I looked like a kid on her way back from a cultural trip in the east, like someone who'd grown up in a nice house with a white picket fence, who had rich parents that paid for my college education and supported me in traveling the world before starting my first job in the fall. \n\nMy real life was nothing like that. I had dead parents, a dead older brother, and three young mouths to feed\u2014Ashley, Danny, and Sophie. They were 13, 8, and 5. We lived in my parents' retired meth house in a scary part of LA, an old two-bedroom with one bathroom\u2014tiny, but it was home. The detached garage had been the meth lab, but that had blown up in a freak accident, killing both my parents. Sophie had only been a couple of months old. \n\n12:25 PM\n\nIn three minutes I would walk into the crowd, drop the backpack and walk away. I knew someone would be there to pick it up just seconds after I dropped it, but I wouldn't look. Everything in my world was need-to-know, and I didn't need to know who was picking up the drugs. My job was just to deliver them. \n\n12:26 PM\n\nI started to walk toward the trash to throw away the paper plate I'd been eating a pizza from. I'd bought it to kill time and satiate my hunger. Plane food isn't very filling, but a slice of warm, cheesy pizza always did the trick. The sounds of feet pattering, people talking, planes landing and announcements over the PA system filled my ears. I checked my watch again.\n\n12:27 PM\n\nA minute to go. I blended into the crowd, pulling my baseball cap down and keeping my head low. My sunglasses would've looked silly since I was wearing them inside the terminal, but it was a necessary precaution. I knew where the cameras were, knew how to obscure myself so that I was difficult to make out. There were multiple eyes from the cartel in this airport, each waiting to back me up. They were there to distract security and pick up my supply. \n\nAt exactly 12:28 PM, I made the drop. \n\n\u2014\n\nThe LA heat beat down on my bare shoulders. It had taken three different buses, traveling through LA like the local I was, taking public transportation because my beater car was parked at my house on the street. When I got to the house, I found myself smiling, my heart thumping at the thought of seeing my kids. The house was small with peeling white paint and needed a new roof, but it was home. The curtains were shut and the front and iron screen door were locked, just as I'd instructed. I dug in my pocket for my keys, jingling them. Just as I was about to stick them into the lock, the door burst open. \n\n\"Mommy!\" yelled a small voice, little hands reaching to undo the lock on the metal screen door. It was Sophie, sporting a smile with two front missing teeth. Her blonde hair was curly, but neatly brushed, and her big blue eyes had gone wide from the sight of me. I was filled with warmth from looking at my baby sister, the five-year-old that was the heart of this family. \n\n\"She is not Mommy. That's Sissy,\" Ashley hissed, rushing to the door. Almost as tall as me, with straight golden hair, Ashley was the person I trusted to look after Sophie and Danny. She was only thirteen, but she was a lot like me, resilient and responsible. Ashley was smarter than me, did better in school than I ever had, and was focused on making a better life for herself than the one I could provide. \n\nShe gave me an apologetic look as she picked up Sophie, putting her on her hip. She undid the lock and stepped back. \n\n\"She really shouldn't be\u2014\"\n\n\"Answering the door,\" Ashley finished for me. \"I know. She's just so... fast.\"\n\nI cracked a smile, giving her a one-armed hug. \"You used to be pretty fast yourself,\" I said, remembering when she had been Sophie's age. \n\n\"Yeah, well, I couldn't have been this bad,\" she grumbled. \n\n\"You're right,\" I said, walking into the small kitchen and picking up an apple off the counter. \"You were worse.\"\n\n\"Who's bad?\" Sophie asked, looking mildly upset. \n\n\"Not you, baby,\" I said, motioning her over. Ashley lowered her to the ground and she ran to me, jumping up and down as I cut a slice of apple with a pocket-knife I found in a drawer. She happily ate the apple slice I handed her as Ashley filled me in on their week. Danny had gotten an A on his spelling test. Ashley had outgrown her uniform and needed a new one. Sophie had been taken to the park every day except Sunday\u2014\"Church,\" Sophie said, mouth full\u2014and I raised an eyebrow. We weren't particularly religious.\n\nAshely shrugged. \"She wanted to go. Her friends from kindergarten were there.\"\n\nI cut the last of the apple and handed Ashley the slices to give to Sophie. \n\n\"I'll be back in a bit,\" I said, and went to the back of the house, sliding open the glass door to the backyard. I went to the shed and found a locked box on a high shelf. I dusted it off, unlocked it and found some of my personal stash of weed. It was the good stuff: purple OG kush. I needed a release, any release, and this was going to have to do. I rolled up a joint and lit up.\n\n\"Fuck,\" I said, taking in the scent of the weed; it smelled enticing. Next door I could hear the Juarezes, an old couple, screaming at each other, their TV blaring to muffle the sounds, but who were they kidding? They were loud as hell. On the other side, Mr. Patterson was grilling, sausage by the smell of it. Cop sirens blared nearby. \n\nThis was my neighborhood. A little drama, a little danger, and a lot of demons that resided in the people. They struggled every day to overcome them, but all weren't successful. Most of my neighbors were crackheads and tweakers. The innocent ones smoked weed like me, usually the teenagers, but in reality, they were nothing like me. \n\nI was dangerous. \n\n\u2014\n\nHigh as a kite, I went inside and helped myself to the mac n cheese with hotdogs that Ashley had made for dinner. It was gooey and cheesy and salty from the hotdogs and just about the best thing I'd ever tasted. I had two bowls of it, filling up my third from the stove when the front door banged open. I turned around, immediately reaching for the gun under the sink. \n\n\"Ellie? Is Ellie home?\"\n\nI grinned and drew my hand away from the sink. Danny. He walked in carrying a baseball mitt and a Slurpee from 7Eleven. His skin was tanned, and his blonde hair was bleached white from the sun. Out of all us siblings, he was the only one that got brown eyes. They were deep and rich, like melted chocolate on a hot summer day. \n\n\"Ellie!\" He ran over, throwing his arms around me. At eight years old, he somehow managed to be the smartest one in the family, the brainiac that always said that one day he'd go to college and then he'd take care of all of us. He never acted tougher than he was, never bragged about anything\u2014but he was a goody-two-shoes. There was no rule-breaking around him. \n\n\"Ashley had a boy over,\" he said almost immediately. \n\n\"Snitches get stitches,\" Ashley yelled from the other room. She stomped over and made a motion of gutting him with her pinky. Sometimes I forgot that Ashley was a kid, too. \n\n\"We'll talk about this later,\" I said, giving them both a look. \"Right now, I need a shower and then I'll head to work.\" When I said work, I meant that I was going to drop by Distribution and pick up my next job. Ashley and Danny knew what it meant.\n\n\"Can I come?\" Sophie asked, trailing in after Ashley. She had a baby doll in her arms. \n\nEveryone turned to her and answered at the same time. \n\n\"No.\"\n\n\u2014\n\nMy older brother Pete and I were my dad's bastards. We were born to different mothers, and our mothers died right around the same time from drug overdoses. We were paired up in the foster care system and sent from home to home until Dad got out of jail for drug possession, a sentence he'd been serving since before our moms had died. He'd taken one look at us, skinny and miserable, and decided to take us in. Sure, there were rules\u2014\"Don't touch anything, you little shits\"\u2014but it was home, somewhere permanent. \n\nThen Dad met Janet. She was the best thing that ever happened to us. Suddenly there was someone doing laundry, making meals, helping with homework. She was smart, and she was young and pretty. She called Pete and me her kids, and for the first time in our lives, we had a family. Dad married Janet, had Ashley and Danny, and we were all happy. Everything was going great until Dad lost his job. He'd cleaned up good for Janet, but now he had a lot of mouths to feed, and he started reverting to his old ways to put food on the table. Janet got pregnant and desperate. She was starving, Dad was starving, and even though we kids got most of the food that came from the food bank, we were starving, too. \n\nFirst came love, then came marriage, then came a meth lab in a baby carriage. Literally. After Sophie was born, Janet would go shopping and pick up pseudoephedrine, which was used to make crystal meth. It was an over-the-counter drug, a nasal decongestant found in many OTC cold medicines. She'd steal it, ripping it out of the package and putting it in Sophie's carriage, and then she'd walk right out with a smile on her face. I'd been eighteen, buying cigarettes instead of stealing them, and it hurt my heart to see Janet have to do that. She was a good person. She shouldn't have to steal drugs to survive. \n\nBut that was the path they chose. The woman who had become my mom was cooking meth in our garage, helping my dad who had plenty of experience in that department. He'd cooked meth before, and he was good at it. People paid good money for my parents' crystal, and before long, we were okay again. They paid off the house, got us the good stuff at the stores\u2014no more off-brand Oreos and cheap plastic toys. We got real Oreos, real cereal, real chips, real toys. This was a time before cellphones, but my brother and I were really happy with our Walkmans and cassette tape collection. We were happy in general\u2014until we weren't. \n\nThe garage blew up. Dad and Janet were in it. Thankfully, Sophie and Danny had been at daycare and Ashley at school. Pete had been at work, and I'd been fucking around with my friends downtown, smoking cigarettes and shopping for the highest, tightest jeans I could find. Boys had mattered back then. I'd wanted to impress them, wanted to be wanted, to be desired. I was just a dumb eighteen-year-old wasting her time instead of going to college. Not that I'd get the chance anyway. \n\nThe cops found the bodies, but they found the meth lab first. The place was closed off, and everything was seized and destroyed. Pete had been living with roommates in a small apartment in WeHo and I'd been couch surfing with friends, so there was no way we could be pinned for the drugs. CPS took the kids away, but Pete and I fought for them, and in a couple months, a judge ordered them into our care. We started raising them by ourselves, even though I was still a teenager and Pete had barely turned twenty. We got a lot of visits from CPS at first, but things cooled down after our first evaluation. Pete had a stable job thanks to his mechanic apprenticeship, and I was taking care of the house and kids. \n\nOur futures had looked bleak at the time. We'd sit on the front porch steps after the kids were put to bed, looking up at the smog of LA, sharing cigarettes and discussing life. We'd laugh, we'd cry, and we'd hold each other, wondering how the fuck we were gonna raise those kids right. We didn't want them to be fucked up like we were. Struggling to make ends meet, living in a tiny house, barely having enough money to put food on the table. \n\nAnd then Sergio came into our lives. \n\n\u2014\n\nPete and I had been saving up every spare dime and penny for weeks. We were gonna do Danny's fourth birthday at Chuck E Cheese. We couldn't afford a party, and we didn't have anyone to invite anyway, but we could at least pay for a pizza for the kids and some tokens for the games. It was their first time at a Chuck E Cheese so it kind of blew their minds. Sophie would be too young to remember, but Danny and Ashley had the time of their fucking lives. \n\n\"Look at them,\" Pete said, flipping his baseball cap back. He always did that when he came inside of a building, except the kids had kept him so busy that he hadn't gotten the chance until after they'd finished eating. With newfound energy, they'd gone off on their own, but still within eyesight. Sophie was asleep in a stroller next to us.\n\n\"I know,\" I said, smiling. \"We're not doing so bad, are we?\" We'd had the kids for a couple of months now, and even though we were struggling (and I mean struggling), we still managed to make them happy. Pete was just about to answer me when a man sat down across from us. The first thing I noticed were his neck tattoos, snaking up to his jaw, and traveling down to his arms, even his knuckles. Piercing green eyes, a handsome face, dark hair, and medium skin; he was the very definition of a bad boy\u2014and I loved bad boys.\n\n\"Not here,\" Pete said immediately, getting to his feet. He seemed to know the guy. \n\n\"Relax, sit,\" the stranger said. \"I'm out with my kid. See that one at the Whack-a-Mole? That's mine.\"\n\n\"This isn't a good time\u2014\" Pete began, but he was cut off. \n\n\"The hell it isn't.\"\n\n\"What's going on?\" I asked.\n\n\"You must be Ellie. I'm Sergio.\" His voice was rough yet smooth, like honey washing over river rocks. He put his hand out for a handshake, and I almost shook it. \n\n\"Don't talk to her,\" Pete hissed, lowering his voice to a whisper. \"I'll get you the money. I swear to fucking god that I'll get it to you. I just\u2014I need some time.\"\n\n\"You been sayin' that for months,\" Sergio said calmly. He folded his hands on the table and looked into my eyes, giving me a small smile. I blushed.\n\n\"But I mean it,\" Pete said. \"I've got a second job lined up. I start next week. I\u2014\"\n\n\"You didn't mean it before?\" Sergio asked in a dark voice, flicking his eyes to Pete. My brother looked terrified. I'd never seen anyone but our dad spook Pete before. \n\n\"How much to square up?\" I asked, swallowing down my nerves. \n\n\"Nothing to worry your pretty little head with,\" Sergio said, giving me a wink. \"This is between me and him.\"\n\n\"You deal with him, you deal with me,\" I said stiffly. This guy was bullying my brother. I didn't give a fuck that he was hot; nobody messes with my family. \n\n\"I like your sister, Pete,\" Sergio said, cracking a smile. \"Tell you what, I'll let this one go.\"\n\n\"What's the catch?\" Pete asked. He'd paled considerably. I had a feeling that Pete knew exactly what the catch was. \n\nSergio leaned forward, grinning. \n\n\"I got a job for you.\"\n\n\u2014\n\nThe Hitman\n\n\u2014\n\nI remember her. \n\nIt was early morning, right before sunrise, and I was praying Fajr, the first prayer of my day. I started each morning facing Mecca, worshipping the God in my sky, and afterward, I'd have a conversation with Him. I prayed for my son, the little troublemaker that was proving to be a lot like me, and then I prayed for her. \n\n\"Don't hurt me.\"\n\nI closed my eyes and begged God to forgive me. \n\n\u2014\n\nHand-to-hand combat, Jiu-Jitsu, Gun-Fu (martial arts with guns), and Muay Thai. I trained every morning after prayer, my body burning from the strain on my muscles, practicing the skills that would save my life and end another's. I had a heightened sense of proprioception, which was a fancy word for an enhanced sense of where every body part is. I'd taken anatomy classes, memorizing the human body from head to toe, but specializing in joints, main arteries, and the throat. I knew how to take a man down, but I also knew how to kill him immediately if I needed to. Most often, my job was to do the latter.\n\nThis morning I trained in multi-step exercises after my workout. It was an efficient way to work several muscles and body parts together. It was a dangerous combination, making me both sure-footed and deathly silent. I could cut through a room without making any sound, almost always getting the advantage on my targets. To do this, I had to train, and I had to train hard.\n\nI put my body through the wringer every single day, save for Fridays. Fridays were reserved for Jummah prayer, which was the Muslim equivalent of a Sunday church sermon. I'd be gentle with my body on those days, icing my sore muscles and drinking enough water to satisfy a horse. I ate clean, even though it could've been a cheat day, but there were no cheat days for people like me. \n\nHitmen don't cheat. \n\n\u2014\n\nThe streets smelled of betel leaf and ittar, a combination of the paan that most men chewed, and the musky cologne they wore. Dirt roads with open bazaars, donkeys pulling carts and beat-up Asian-made cars weren't an unusual sight. My boots crunched against the dirt and rocks as shopkeepers jumped at the sight of me walking past their stalls. Only one dared speak to me, greeting me warmly, inviting me in for a cup of chai. I raised a hand in thanks and shook my head. I had business to attend to today. \n\n\"Come, brother. Just one cup,\" said Bilal, the young owner of a small convenience store. He'd spoken in Urdu, which I was fluent in. I liked Bilal, liked that he was fresh-faced and untouched by the difficulties of life in the east. He came from a privileged background and instead of going to college, he'd stolen the funds to open up his humble store. His father had wanted him to become an engineer, but Bilal hated numbers. He'd left Islamabad, a six to seven-hour drive north, to hide away in the streets of Old Lahore. \n\nWe were in Pakistan, the world's sixth-most populous country. The people here were hospitable and friendly, especially if they got the feeling that you weren't from around here. I looked like a foreigner with my western clothes and American accent, but I was originally from Old Lahore. I'd been born here twenty-eight years ago. Where I'd spent the time in between\u2014that was a story I would never tell. ",
        "\"I will find you after completing my business,\" I said in rapid Urdu, clasping a hand on Bilal's shoulder. I gave him a firm shake and he grinned. \n\n\"Muscle Guy,\" he said in English, and I released him and went on my way. \n\nI caught a bicycle-pulled rickshaw down the road, not even bothering to haggle with the rickshaw wala\u2014or the rickshaw driver. Most people haggled around here and the shopkeepers and rickshaw walas often inflated prices in advance. A couple of rupees was nothing to me, but everything to them. Most had hungry mouths to feed, and I wasn't about to deny a child their next meal. I tipped well, which was not custom, but the rickshaw walas were grateful. \n\nI traveled through Old Lahore by rickshaw, passing the Mughal era mosque, the Badshahi Masjid. It was an impressive piece of Indo-Islamic architecture. Located within walking distance was the ancient Lahore Fort, which was a large palace, one I used to sneak into as a child to earn rupees and dollars from tourists. I would relay facts about the fort, how it had been built in 1566, how the Kings would ride upon elephants and pass through the iconic Alamigiri Gates to battle, how the architect Nawab Zain Yar Jang Bhahadur had also been a powerful religious preacher and had founded the branches of Khaksars in Hyderabad, India. I'd been seven years old, spitting facts and laying the charisma on thickly. I was paid well by most tourists. \n\nBut that was a long time ago. \n\nThe rickshaw wala pedaled us out of the outskirts of the Ancient Walled City and entered the Red Light District, an odd place for prostitutes to gather beside such a holy symbol. Some time ago, a prostitute's son had opened up a popular rooftop restaurant called Haveli, which overlooked the Badshahi Masjid. Here I would stop for kebobs\u2014and my next assignment. A courier was waiting for me, holding a briefcase with the case files. I already had the code and small key to unlock it. My lunch was delayed by traffic, but I wasn't worried. This was normal here, and I knew the courier had been instructed to wait as long as it took for me to arrive. I was certain that I could arrive a week from now and still find him there. \n\nThe rickshaw wala was a decent man, speaking proudly of his daughter who had gotten high marks in school. He said he worked day and night to earn enough money to pay her school fees. His wife worked as a maid in a rich neighborhood in Gulberg, and he only saw her once a month. Their daughter's name was Afreen, meaning beautiful and brave in Arabic. As most Pakistanis were Muslim, many were given Persian, or more importantly, Arabic names, the same language that the Holy Qur'an was written in. Hearing about his smart, rambunctious daughter made me smile\u2014something I rarely did. \n\n\"For your daughter,\" I said, handing the rickshaw wala two one-thousand rupee notes. It wasn't much, about ten dollars USD if converted, but considering that the fare was only fifteen rupees, it was generous as hell. The rickshaw wala began to cry and I made a swift exit. I found the entrance to Haveli Restaurant, making my way inside. A dwarf wearing a colorful, exquisite Punjabi tamba and kurta greeted me politely. He led me to the elevator, something very uncommon in Old Lahore to this day, and up to a host who seated me at a rooftop table overlooking the mosque. \n\nI hadn't yet opened the menu when a man with a briefcase approached me. He wore a traditional kurta, off-set by a pair of reflective aviators. He lifted the sunglasses, looking me in the eye. He needed to identify me. \n\n\"Naeem has sending me,\" he said quietly in broken English. The briefcase was handcuffed to him, and only I held the key. I gently picked it out of the breast pocket of my blazer. \n\n\"It's all there?\" \n\n\"I did not opening it, Sahib.\" Sahib meant \"sir\" in Punjabi. Lahore had a large population of Punjabi Muslims. \n\n\"Would you like me to release you?\" I asked in Punjabi. He looked relieved to hear his mother tongue. \n\n\"Yes, Sahib.\"\n\nI had him lay the briefcase on the table, and put one hand on the Glock at my hip, ready to protect the briefcase if I had to. With my free hand, I uncuffed him with the key. Within seconds, I had the handcuff snapped on my own wrist. Just then, the waiter arrived. The courier bowed, said one last \"Sahib\" and took his leave. I ordered two plates of Behari kebobs, no naan because I didn't want the carbs. My hand rested on my Glock as I waited for my meal.\n\nOne of the benefits of being in Pakistan was having easy access to my choice of weapons. The gunsmiths of Darra Adam Khel produced hundreds of guns a day in addition to their grenades and other weaponry. Painstaking copies of AK's, Desert Eagles and any other weapon were readily available and cheap. Because I had the money and because I was accustomed to it, I'd paid for a Glock 17, one actually manufactured by Glock USA. It was dependable and ubiquitous. I'd picked it up within half an hour of my plane landing in Lahore from Los Angeles.\n\nI knew where everyone on the roof was, knew what they were doing, and guessed what their next moves would be. It was a game I played to keep my mind sharp and keep track of my surroundings. I ate in silence when the food arrived, then quietly paid my bill and left.\n\nThe handcuff weighed heavily on my wrist as the elevator took me back to the ground floor. I was about to step back out into the world, but I'd be handcuffed to this briefcase, a prisoner to this life.\n\n\u2014\n\nThe Drug Mule\n\n\u2014\n\nHave you heard the expression 'turtles all the way down'? That's the trade I'm in. Drug dealers all the way down; from the multinational pharmaceutical corporations that turn a blind eye to what else their suppliers are doing, to the para-military government-sanctioned warlords running poppy fields in Afghanistan, to the kid slinging crack on a street corner.\n\nIf you've ever wondered where drug dealers get their supply, I'm here to tell you that the answer is quite simple: other drug dealers. Drug dealing is a hierarchical operation. Street dealers get their supply from low-level suppliers, who in turn get theirs from upper-level suppliers. Upper-level suppliers get their supply directly from distributors who are the head of transport and distribution in the entire country. Each person in this pyramid usually only knows the person directly above them, which is both a security measure and prevents dealers from cutting out the middle-man. \n\nWhere was my role in all of this? I was transportation. I moved drugs, and I was on high-level operations, trusted with international smuggling. I get top-grade heroin from Thailand or Pakistan, making it in and out of there within days, delivering a supply of uncut, pure drugs that wasn't easy to acquire. The drugs I brought went directly to Sergio, and he used them to secure business deals and entertain the elite. He wasn't low-level or even upper-level. You had to be deep in drug culture to know who a guy like Sergio was in the drug world. His family was distribution level. They bought drugs directly from the Diamante Cartel, the hella pure shards, brought them by the bulk into this country, and then moved it almost flawlessly across state lines. You don't meet a guy like Sergio by asking a street-level dealer who their boss is. You meet him by being something special. \n\nAt least, that's what he always said to me. \n\nI was headed to Distribution today, a location that wasn't really a location because it was always changing. I knew this day's address because I'd been briefed in Pakistan by Distribution there. It was all connected, and yet it wasn't. You couldn't pin this kind of shit on any one person, not in one lifetime, anyway. Sergio was high up there, but he wasn't the top. Whoever was perched up there was powerful\u2014and he or she could be anyone. \n\nIt was 11 PM and I still hadn't gotten any sleep, except for the few hours I was able to catch on the flight from Pakistan, which hadn't even been a direct flight. There had been a stop in Istanbul, Turkey and from there it was a 14-hour flight to Los Angeles. I was jet-lagged and grumpy, but I put aside all attitude as I reached the warehouse. This one was in Seal Beach, which is located in the westernmost corner of Orange County. The smell of the salty ocean filled my nostrils, along with the smell of diesel from the warehouses. The streetlights were dead out here, so it was dark as hell and eerily quiet in the area. Enforcers were waiting in the shadows, and one of them started shadowing me. I stopped to state my business. \n\n\"I got a meeting with Sergio,\" I said. A figure walked up to me, face half-hidden by a hood. He was large, buff and mean-looking. \n\n\"There ain't no one here by that name.\"\n\n\"Sergio is expecting me. I'm Ellie.\"\n\n\"I don't give a fuck who you are. Run along, kid.\"\n\nI lifted my sleeve and showed him the tattoo on my forearm. \n\n\"Oh,\" the enforcer said. \"You're one of those girls.\"\n\nI was used to this. Sergio had had me branded a year ago, marking me as one of his girls. As long as I showed this tattoo, I couldn't be touched. It was an intricate tattoo and could probably be replicated by a talented tattooist, but it wasn't worth the risk. That kind of shit gets you killed. \n\nThe enforcer looked at me like he expected me to die tonight. I didn't really look like one of Sergio's girls. Those women were sultry and sexy and I was\u2014well, cute and white. Affecting a calm I didn't possess, I had my head held high and inspected my nails as the enforcer made a call. He confirmed what I'd told him. \n\n\"You're good to go, Princess,\" he said after the call. \n\n\"Call me that again and I'll have you buried,\" I said coldly. He put up his hands and backed off. \n\nThe cool, crisp air came from the nearby beach, blowing gusts of wind. Chased by the cold, I hurried into the warehouse. Inside there was an overnight operation in the making, bustling and crowded, the lights bright and blinding. There were shards everywhere, and big barrels of the crushed crystal, ready for distribution after being weighed and individually packaged by the kilo. Most low-level meth went for $300 an ounce, but this was the good shit; it started at $2500 per ounce. The warehouse workers would have to get this shipment ready for distribution by tonight. By midmorning tomorrow it would be an empty warehouse with nothing left behind, completely clean. It was almost like magic. \n\nI passed by the people wearing hazmat suits, handling the fentanyl that would be mixed in with the methamphetamine to increase potency. There was no such thing as pure dope anymore. People wanted the extra high, wanted the kick that came from the fentanyl. The only problem was that it was highly dangerous. Just 30 kilos of fentanyl was enough to kill 14 million people. People died from fentanyl overdoses every single day. Narcan couldn't even save you. \n\n\"Ellie,\" said a rough, velvety voice from behind me. I turned around and found Sergio flanked by two of his bodyguards. The guns they held made me feel safe. They'd protect the drugs, and they'd protect people like Sergio and me. We were important to the Diamante Cartel. \n\nI was usually greeted like a queen when I was in Sergio's presence, but for whatever reason, everyone was avoiding eye contact with me. Sergio looked livid, as if I'd personally shat in his coffee that morning. \n\n\"Is something wrong?\" I asked. \n\n\"'Is something wrong?'\" Sergio repeated and laughed, but something told me that he didn't find it funny at all. His expression had darkened. \n\n\"Sergio\u2014\" I began. \n\n\"Come with me,\" he said and turned around. He walked away and I followed, the bodyguards ghosting behind us. Sergio led us to an office overlooking the warehouse. We climbed the steps. \n\n\"Espera afuera,\" he said to the bodyguards. Wait outside.\n\nSergio led me into his small office, closing the door behind him. \n\n\"Didn't think you'd show,\" he said.\n\n\"Why wouldn't I?\" \n\n\"Because you never made the drop.\"\n\n\"What?\" I said sharply. \n\n\"You didn't make the drop, Ellie.\"\n\n\"But\u2014I did. 12:28 PM just like discussed, exactly where I was instructed to.\"\n\n\"Not according to my sources,\" Sergio said. His eyes seemed to burn, and for the first time, it dawned on me that I really could die tonight. I thought of Ashley, Danny, and Sophie. How would they survive without me? The foster care system was scary. Over half of the kids that aged out of the foster care system ended up addicted to drugs, incarcerated or dead within the first two years. Half. \n\n\"Fuck your sources,\" I spat. \"I've been doing this job since Pete died. I've never failed to deliver.\"\n\n\"Until today.\"\n\n\"Sergio, you know me. I'm not a thief.\"\n\n\"Tell me who bought you out,\" he said, holding my gaze with those sharp green eyes. \n\n\"I wasn't bought out,'\" I said. \"I made the drop. Hack into the airport security cameras and see for yourself.\"\n\nSergio laughed, but it didn't sound like he actually found it funny. \n\n\"What do you think we are? The CIA? We've got enough eyes at the airport. I got six different sources tellin' me you never made the goddamn drop. Why the fuck you gotta embarrass me like that, Ellie? Everyone knows you're my girl.\"\n\nI wish I could say that I wasn't Sergio's girl, but I was. We had a strange relationship, one that made no sense. Our roles weren't equal; Sergio was the boss, and I was the employee. It was unethical, but what was ethical about drug trafficking operations anyway? We fucked when we needed the release, and I knew I wasn't the only one he came to. He had his harem of girls, all tattooed and worshipped by the masses. Those that gave him children were treated like royalty. Sergio had five kids, all under ten. He'd never let me get pregnant. I made him too much money. Not that I'd want to have his baby anyway. \n\n\"You're in deep shit, Ellie,\" Sergio said. \"I can't protect you from this one. We got powerful people that were waiting on this dope. We fail to deliver and we lose business. We lose business and we can't feed our people. You want our family to starve? You want yours to?\"\n\n\"Never,\" I whispered, taking a step back. Sergio took several steps forward in response and then grabbed me by the arm.\n\n\"Why didn't you make the drop, Ellie?\"\n\n\"I did make the drop!\"\n\n\"Don't fucking yell at me,\" he commanded. He got annoyed when people raised their voices around him. He was in a position of power, and that deserved some respect. Sure, he let me get away with a lot, but disrespect was one thing he couldn't let slide. That's how he controlled me. By keeping me in line. \n\n\"Now tell me who bought you out. I'll buy the supply back, probably double what I paid the Cartel, but we'll be able to at least break even after selling it to our special clients. Tell me and I'll send you and the kids outta town until things cool down. I said I wouldn't protect you, but fuck me, I can't with you.\"\n\n\"Sergio,\" I said, my eyes pricking with tears. \"I really did make the drop.\"\n\nHe sighed. \"All right, if that's how you wanna play it then fine. You owe me six hundred thousand dollars, Ellie. And that's me being nice. The street value of that shit is five times that.\"\n\n\"You know I don't have that kind of money.\"\n\n\"Well, you're gonna have to come up with it,\" he said. \"If you don't, it's gonna be someone's head\u2014and it ain't gonna be mine.\"\n\n\"Give me a job,\" I said. \"I'll move whatever you want me to move. Give me the opportunity to cover it.\" By now I was past pleading my innocence. It wasn't going to work. He was convinced that I'd given the supply to a competitor, even though it made no sense for me to. There was nothing in it for me except death, and I had three young mouths to feed. Now I had to fight to survive. \n\n\"You really think I'll trust you with more supply after this little stunt?\" \n\n\"Sergio, please,\" I pleaded. \"I got three kids that depend on me.\"\n\n\"We all got our stories,\" Sergio said. No sympathy. This was bad. \n\n\"If our relationship ever mattered to you, prove it and give me a chance,\" I said. Tears were falling and I couldn't stop them. Sergio looked like he'd gone a little soft. His body language told me so. He relaxed his shoulders, and his eyes became kind. \n\n\"Fine, but no one knows about this,\" Sergio said. \"I'll give you a job. One last job to make up for this. After that you're done, Ellie.\"\n\nI was being fired. Whatever. I was still gonna make it out alive. That was all that mattered now. \n\n\"So, what's the job?\"\n\n\u2014\n\nThe Hitman\n\n\u2014\n\nI could cave in a face with a roundhouse kick, and I was considering doing it now. I was in an alleyway at dusk, after having shared a couple of cups of chai with the shopkeeper Bilal. We'd had a dinner of pulao together, the stuff that was only a couple rupees for an entire plate. I'd eaten the chicken, passing on the rice. I was glad I had because I was currently facing three thugs, and they seemed to be really interested in my briefcase. \n\n\"What's in there? Money?\" one of them asked in Urdu. His eyes gleamed under the evening lights. I couldn't blame him. I was dressed like a foreigner, and a handcuffed briefcase usually meant money around here. It was how most businesses moved their cash to the bank. He was probably forgetting that they always carried guns, and I had my Glock. But I really didn't want to use my gun. The sound would thunder through the streets, and then cops would show up and demand to know what was in my briefcase.\n\n\"In the briefcase? Nothing to concern yourself with,\" I said calmly in Urdu. My American accent made them grin. \n\n\"Filthy American,\" a thug said. \"You take from our country, doing nothing for it in return.\" \n\nI said nothing, making tight fists that cracked my knuckles. This was going to be a minor nuisance. I let them corner me, taking steps back until I was against the side of a building. There were three of them, so keeping my back to the wall was imperative. The window had bars, as did most other windows in Pakistan. I had a plan to use them. I squared my shoulders and leaned back slightly to the side, taking advantage of their amateurish behavior and stretched. It had been a couple of days since I'd fought with a real person and this was going to be a glorified sparring session. \n\nOne of them had paused, a second pulled out a knife and the third moved towards me. \n\nHe was large, powerful-looking and slow as shit. He was probably using low-grade HGH, roids or both. If you can't have quality, go for quantity. It was obvious that they weren't the cream of the crop when it came to low-end thugs. When you have a crushed trachea, it didn't matter how large you were. I feinted to his crotch with a front snapping kick and when he turned to his side I slammed the edge of the briefcase into his throat, about three inches below his chin. As he made odd choked-off gurgling sounds and staggered back, I turned to his two friends. \n\nThe one with the knife pushed his friend forward. He seemed to know what he was doing as he shifted to my left, leaving Knife-Guy to my right. He'd clearly taken some lessons at some point, as he shot out a side kick towards my head. Weaving out of the way, I stepped back from him and felt the stinging heat in my arm that indicated Knife-Guy had cut me.\n\nGrimacing, I realized that I couldn't keep a man with a knife at my back, so I launched into a double leg take-down of the fighter. He went down on his ass and I quickly shifted behind him, getting him in a rear-naked choke. We were both on the ground now, but I was on one knee and had him between myself and Knife-Guy. I didn't have any qualms about killing him. He attacked me and it's what I do for a living, but it wasn't needed. He was out quickly. Standing, I kicked him in the head, ensuring he wouldn't be bothering anyone else for a while. ",
        "\"Just leave the briefcase and I'll let you go.\" \n\nLet me go? \n\nTaking a deep breath, Knife-Guy summoned up his courage and came at me. I blocked the knife with the briefcase and kicked his calf. He backed off, limping. Waving the knife in front of me like a third rate snake charmer, he moved in again. Thrusting the briefcase into his forearm, his slicing movement halted and I slammed my elbow into his head in a side arc. As he wobbled, I kicked his calf again, crushing into it with my shin. \n\nMy arm was warm with my blood and I wanted to end this farce. He shook his head to clear out the cobwebs, moved in again and I feinted with the briefcase. When he pulled the knife hand and arm out of my reach, I used that roundhouse kick to the head I'd contemplated earlier. He immediately fell to the ground and lay there unmoving. I hoped that I didn't break his neck, but it was a real possibility. \n\nPicking up the knife, I put it between two of the bars on the window and yanked back, snapping the blade in two. I left the broken men and weapon on the ground. The briefcase was in my hand, sprayed crimson with thug blood. I was satisfied. \n\nI hired a rickshaw to take me to 6 Chatterjee Road in Downtown Lahore, only eleven-minutes from the Badshahi Masjid. It was the location of Hotel One, which was where I planned to spend the night under one of my many aliases. I currently had six passports sewn into my blazer. I only needed a name and some cash, both of which I was ready to provide. When we arrived, I paid and tipped the driver, and ducked my head as I made my way into the hotel. \n\nIt was time to get myself a room and open the briefcase. \n\n\u2014\n\nThe Drug Mule \n\n\u2014\n\nI was flying Turkish Airlines again, headed back to a stop in Istanbul and then ultimately landing in Islamabad, Pakistan without even the chance of saying goodbye to the kids. I rang Ashley from a payphone at the airport and told her I'd be back in a couple of days. She was disappointed, but she wished me a safe journey and promised to look after Danny and Sophie. I felt guilty as hell; she was too young to be doing all of this. She wasn't getting the chance to be a kid. I was glad that this was going to be my last job. After this, I was going to find a normal career, something that wouldn't take me away for days or weeks at a time. \n\nCustoms and Border Patrol officers were patrolling the area as I waited for my flight. I paid them no attention, hardly sparing them a glance. I had nothing to hide. This was going to be a strange operation. \n\n\"No drugs,\" Sergio had said. \n\n\"No drugs?\" \n\n\"None.\"\n\nI was tasked with picking up a package from Murree and delivering it to Lahore, Pakistan. It sounded easy enough, but I'd been in Pakistan hundreds of times, and I knew that it was a 6-7 hour drive from Murree to Lahore with military checkpoints in between. I didn't know what was going to be in the package, but I couldn't imagine that it was going to be legal. I could end up in a Pakistani jail, and there would be no one to bail me out. I was a nobody. I doubted the embassy would even bother to help me if I called them. They weren't sympathetic to drug mules.\n\nThis wasn't going to be easy.\n\n\u2014\n\nThe flight attendant was pouring me a glass of Sprite when I first noticed him. He wasn't much taller than me, probably about 5'8\", and had a hardened expression that never left his pinched, ugly face. His wide shoulders made him look a little funny, like he was an action figure, but I wasn't laughing. I was spooked. \n\nI was hyperaware of my surroundings, and I always knew when I was being followed. I'd get this itchy feeling at the base of my neck and an urge to immediately stop all movement and carefully look around. I felt his eyes on me when I went to the bathroom. I tested him and made more moves. I went to the flight attendant to ask for a Sprite refill. I went to another seat and grabbed a magazine. I went to use the bathrooms in the back of the plane. No matter what I did, his eyes never left me. We were in a metal tube over the Pacific. Where did he think I was going to go? I was slightly reassured by what seemed to be his amateurish behavior but spooked by his dead eyes.\n\nI'd have to lose him in Istanbul. Leave the airport and then double back for a later flight to Islamabad. This wouldn't be the first time. I'd been tagged by competitors before, and followed so that they could find our distribution center. In places like Pakistan, distribution didn't really move from location to location. Local law enforcement took bribes, and the kind of money our operation paid was substantial. Still, it left the centers vulnerable. They were heavily armed, but there was the chance of a raid at any time. \n\nI knew this mean motherfucker across the aisle from me was ready to torture me for information. He'd start by intimidating me, and end by breaking each of my fingers, one by one. Then he'd beat me until I broke, and if I still didn't talk, he'd deny me water for a few days and then wait for me to beg for a drink. I'd been prepped for this, tortured by Sergio's guys, denied food and water, had my bones broken and then carefully bandaged. They'd made me tough. I was no snitch. I could take a secret to the grave. If I didn't, I put three kids' lives in danger. \n\nI didn't sleep. Fourteen hours to Istanbul, and I didn't get a wink. I drank a lot of caffeine and helped myself to snacks from the galley, hoping that'd give me some energy, and it worked for a while. By the last three hours, I was exhausted. I watched the screen, viewing the pixel plane fly closer and closer to the destination. It was the only thing I could do because I had to stay aware, and that meant no real distractions. \n\nWhen the plane landed, I was the first one off. All I had was a backpack, and I'd taken it and myself to the lavatory to the front of the plane and waited out the landing in the cramped restroom. When I popped out, the plane had barely landed and people hadn't even undone their seatbelts yet. The nearest flight attendant was mortified and asked me to return to my seat. I refused until the doors opened, and then I left. \n\nIstanbul was muggy, even inside of the airport. I fanned myself as I weaved in and out of the crowd, moving fast enough that I hoped I was at least confusing the asshole who was following me. I knew he was there, that he'd likely fought his way off the plane after he realized I wasn't coming back from the lavatory. I made my way to Customs, but before that, I ducked into a crowded bathroom. \n\n\"Who has a burqa?\" I asked in English. \"I will pay one hundred US dollars.\"\n\nA young student around my age pushed through the crowd and approached me. She opened up her carry-on duffle bag with surprising speed. She pulled out three fabrics and pushed them into my arms. \n\n\"I only have kaftan abayas,\" she said in English. \"Will it do?\" They were beautiful, the abayas. They were basically long, loose dresses in an Islamic style. I picked a black one out and handed her back the rest. I only needed one. \n\n\"Do you have a niq\u0101b?\" I asked. I would need the garment that would cover my face. That was most important. \n\n\"No, but I have a scarf,\" she said. That would have to do. I moved my backpack to my stomach, putting it on backward and then put the abaya on over my clothes. I let the girl help me wrap the scarf over my head and then my face, leaving only a slit for my eyes. My hair, nose, mouth, and forehead were covered. I looked like a pregnant Muslim woman. It was just the disguise I needed. I paid the girl and slipped back out into the airport, making my way down to Customs. \n\nThere was no way I could get on my connecting flight. For all I knew, another guy was waiting for me there. Instead, I decided my safest bet was to leave the airport for a couple of hours and then double back. I would've hired drivers to take me through Turkey, Iran, Afghanistan and into Pakistan, but in those days, the Taliban occupation was in Afghanistan. It was a war-torn country, and too dangerous to take by road. It was impossible for a woman to travel in Iran by herself, and getting to the Persian Gulf to take a speedboat to Pakistan would mean going through Iraq, which was just as dangerous. \n\nI knew my way around these parts. I was a smuggler, and I've had to change plans and routes before. This time I was truly stuck. The only upside was that I wasn't smuggling drugs or laundering money this time. \n\nThe moment I walked out of the airport, I realized that \"he\" had become \"they\". I knew gang members when I saw them, and it was obvious that they were from US soil. It was easy to pick them out in a crowd because the Americans were the only ones searching the crowd, pulling people aside, opening up bags, stopping taxis. As I sought a taxi, I realized quite quickly that one gang member was approaching me to harass me. I had to think fast. \n\nI turned around, located the biggest guy I could find, and rushed to him. \"Yard\u0131m,\" I said to him in Turkish. Help. \n\nThe gang member had stupidly followed me. The big guy took one look at him and then began yelling in Turkish, cursing at him. I slipped around him, ducked under two pedestrians, and hid behind them, walking slowly back toward the taxis. Within seconds, I pried open the door of a yellow cab and slid inside. \n\n\"Go,\" I said to the driver. \"Grand Bazaar.\" It was the first thing that popped into my head. I'd been there before. The Grand Bazaar was one of the world's largest and oldest covered markets. It was located inside the Walled City of Istanbul, situated between two mosques, Bey zit, and Nuruosmaniye. It covered 61 streets and had over 4,000 shops, attracting between 250,000 to 400,000 visitors each day. If there was one place I could disappear, it'd be there. \n\n\"Hey!\" someone suddenly yelled. \"Stop that taxi! We didn't check it!\"\n\n\"GO!\" I screamed at the driver. He seemed frozen by fear. I was panicking now. It was all over. \n\nThe driver door flung open and the driver was forced out of the car. I closed my eyes, ready to have the same happen to me, but instead, the car jerked forward. My eyes snapped open. In the driver's place was another man, built like a fighter with corded muscles on a body that looked hard even from the back seat. He glanced at the rearview mirror and for a moment our eyes met. His expression was so fierce that I had to look away. Something told me that he wasn't one of the bad guys, but that didn't mean he wasn't bad. \n\n\"Get down,\" he said in an American accent, suddenly putting the car in reverse. I ducked just as he threw an arm over the passenger seat headrest, looked over his right shoulder, turned the wheel and backed up. There was a sickening thud; he'd just run someone over. \n\n\"Stay down,\" he ordered sternly, putting the car into drive. \n\n\"Who are you?\" I asked, keeping my head down. He never responded, just drove with intense speed, weaving in and out of traffic. I had to grip the sides of my seat because there were no seatbelts in the back seat. I was jerked left and right, and occasionally the car would come to a screeching halt due to traffic. It didn't take long before there were gunshots. \n\n\"Lose them!\" I cried, covering my ears. A bullet came flying through the rear window, cracking it. The bullet grazed the driver's arm, but he didn't even flinch. Who the fuck was this guy? I didn't have too long to think about it. A moment later a black SUV pulled up next to us, windows rolled down. The driver was pointing a gun at us, screaming at us to pull over. \n\n\"Move to the left,\" my driver said, and as soon as I did, he slammed our taxi into the SUV, causing it to veer off into an exit. The timing was incredible. \n\n\"Why should I trust you?\" I asked.\n\nThe driver's eyes met mine from the rearview mirror again. His eyes were almost golden, like dark honey illuminated by the sun. His shock of dark hair was neatly brushed back. He had light skin, but he wasn't white. I'd seen guys like him before. Tall, red-blooded and fair-skinned. He had to be a Pashtun from Pakistan or Afghanistan. Pashtuns are fighters. If I could trust him, I was in good hands.\n\n\"You shouldn't,\" was all he said.\n\n\u2014\n\nThe Hitman\n\n\u2014\n\nI uncuffed the briefcase from my wrist and took a seat on the edge of my hotel bed, entering the code to snap it open. I found a single file inside. In it was some intel\u2014copies of a birth certificate, social security number, driver's license, some papers detailing a personality, strengths, weaknesses. There was also a picture of a girl; blonde-haired and blue-eyed with an innocent face, making her look like a young teen. In reality, she was a baby-faced twenty-three-year-old. I read further into her file, studying all the details, memorizing them\u2014when I came across her occupation: a world-class drug mule, worth a fortune to her organization. She was owned by a kingpin in Los Angeles. \n\nMy assignment was this girl. \n\n\"Don't hurt me.\"\n\nIt was her voice again, small and scared, lips quivering from the cold. She was parched and weak, eyeing my gun as I approached her. I pointed it at her head. The scream filled my ears, louder than the sound of the gunshot. Her eyes were brown, glassy\u2014lifeless. \n\nMistake. I'd made a mistake.\n\n\u2014\n\nThe farmhouse was located just outside of Lahore, a fifteen-minute drive. It was not so much a house as it was a mansion, a four-story building with arches and pillars, gleaming white marble and turquoise tile work. It was a grand home, belonging to the leader of the society, Naeem Badrashi, a man with more power than most politicians. His grounds were heavily guarded and he was not expecting me. \n\n\"What is your business here?\" A guard asked in Urdu when I stopped at the gate. He was holding an AK-47 lazily, pointed to the sky. \n\n\"I am here to see Naeem Badrashi.\"\n\n\"I have no orders of him expecting anyone today.\"\n\n\"He isn't expecting me.\"\n\n\"Then you must leave.\"\n\nI leaned my head out of the car window, looking him square in the eyes when I said, \"Ahmad Gahez does not leave.\" The guard's knees almost buckled. He immediately radioed in Head of Security and had the gates opened within seconds. He lowered his head in respect as I drove past him. \n\nI parked by the front steps, handing my keys off to Naeem's driver. He would move the car to the lot out back and give me a fresh one to drive when I left. The one I'd brought had too many bullet holes. \n\nThe door was answered by the m\u00fclaz\u0131m, or butler, who knew better than to ask me for my coat. \n\n\"Asalamu 'Alaikum, Ahmad sahib,\" he said. Peace be with you, sir Ahmad.\n\n\"Walaikum 'Assalam.\" And peace be unto you. \"Where can I find Naeem?\"\n\n\"He is praying Asr as we speak.\" \n\n\"I think I will join him,\" I said, and slipped out of my shoes by the front door. It was custom in Pakistan to take shoes off in the home. The m\u00fclaz\u0131m led me to an immaculate parlor, and turned toward Mecca was Naeem. He was just starting prayer. I shook a prayer mat open beside him and began to pray. He sensed my presence but said nothing. Prayer came first. \n\nI closed my eyes and saw lifeless brown eyes. \n\n\u2014\n\n\"Sit,\" Naeem said, gesturing to a sofa across from him. There was a tray of chai and biscuits in between us. \"Drink. Eat.\"\n\nI sat but did not help myself to the chai or the biscuits. Naeem himself had taught me to never accept food or drink from my enemies. In those days, he had been my friend, but that was a long time ago. \n\n\"To what do I owe this pleasure?\" Naeem asked. He picked up a cup of chai and settled back on his plush chair. \n\n\"The job,\" I said, cutting to the chase. \"I can't accept it.\"\n\nNaeem raised an eyebrow and looked a little amused. He took a sip of his chai, watching me with his dark eyes, the color of coal and soot. His white beard was neatly trimmed, but there was something wild about him. \n\n\"That is unacceptable, Ahmad.\"\n\nWe did not speak for a moment, sitting in the silence with our eyes doing much of the talking. Naeem was displeased with me, that much I could tell, but there was something more, something that filled me with dread. \n\n\"How is Jibril?\" I asked suddenly. \n\n\"Your son,\" Naeem said, his eyes sparkling. \"He is at madrassa.\"\n\n\"Madrassa?\" I fought to keep my sudden anger under control. \"I never gave permission to have him educated at a madrassa.\"\n\n\"You forget so easily that your permission is not needed here.\"\n\n\"I'll not have you turn my son into some kind of radical extremist!\" I snarled, unable to keep my temper under control. I knew madrassas, and I'd been schooled in one myself. They beat the religion into the child. I didn't want that for my son. I wanted him to be taught our religion with love, with patience, and with kindness because after all, the meaning of the word Islam was \"Peace\". Places like madrassas gave Islam a bad name. There were 2 billion Muslims in this world, and yet that less than 1% made us look like barbarians. I didn't want my son to become one of them. \n\n\"As I recall, you were raised in a madrassa for seven years. You turned out... fine.\"\n\n\"I'm the most fucked up person you know,\" I reminded him. \n\n\"Men piss themselves when you walk into a room. Don't you want Jibril to be as powerful as you?\"\n\n\"No,\" I said. \"I don't want him to pay the cost. My son will not be a killer.\"\n\n\"Then you will do the jobs I give you, Ahmad.\" \n\n\"I don't kill women.\"\n\n\"You've done it before,\" Naeem said, looking amused again. I had the urge to beat him into the ground, but I knew better. Naeem owned me. I was his slave. \n\n\"Not again. Never again.\"\n\n\"All this fuss over one woman?\" Naeem looked bewildered. \"She was a nobody! A banker's daughter!\"\n\n\"She was a person.\"\n\n\"So are all your victims, Ahmad,\" Naeem said coldly. \n\n\"I don't kill innocents.\"\n\n\"Don't worry. We paid the family. Gave that banker's daughter a prime minister's funeral,\" he said. \"Now, the assignment. That girl is no innocent.\"\n\n\"She's only a mule,\" I said. A criminal, yes, but not one deserving of death by my hands. \n\n\"You think that little bitch has never killed a person before? Those filthy American gangs kill everyone, even their own,\" Naeem said. Then he smiled wide. \"Your current objective is not to kill this girl, anyway. Which you would have known if you'd read your file thoroughly. You need only get her from Istanbul to Islamabad, Islamabad to Murree and then Murree to Old Lahore.\"\n\n\"I am not a babysitter.\"\n\n\"You're a killer. There will be much killing. She will be followed by rivals everywhere she goes. If she is captured, her organization will go belly-up in Asia. We're being paid handsomely to deliver her to Old Lahore. Do not fail this one, or you will ruin my hand in the drug trade.\"\n\n\"I have never failed a mission before.\"\n\n\"That is why I picked you, Ahmad.\"\n\n\"I won't kill any women.\"\n\n\"I'm sure our assignment can hold her own in a fight with a woman. I've heard she's quite the fighter herself.\"\n\nThere was no getting out of this assignment. Naeem was intent on completing this job, and he wanted me to do it. I thought about my son, about his golden lion's eyes, his bright smile, and those little legs, running toward me when I'd get a chance to see him. I prayed that he would be strong. I would get him out of that madrassa, one way or another.\n\n\"Look after my son, Naeem,\" I said. \"I will accept this contract.\"\n\nNaeem smiled wide and put his tea back on the tray. He poured some juice, but only one glass. I knew that I was being dismissed. \n\n\u2014\n\nI was in Istanbul, gunning it, driving from side to side, cutting off cars left and right. There were at least four cars on our tail, and they weren't about to give up capturing this girl. Naeem had been wrong about her. She was no fighter; she was small, weak and pregnant. I looked over my shoulder and looked her right in the eyes. ",
        "\"How good of a shot are you?\" I asked. She surprised me by grinning. \n\n\"You have a gun, dude?\"\n\nI nodded. Dude.\n\n\"Well, you should have said so. Give me the gun. You drive, I'll shoot.\"\n\n\"Don't shoot any innocents,\" I said, passing her a pistol. \"I'll get you within range.\"\n\n\"I don't shoot innocents,\" she growled. Okay, so she had a little fight in her. \n\nI allowed one of the cars to get close to us, and instead of shooting the driver, the girl took out the two left tires. She was a hell of a shot; she hadn't wasted any bullets. Just two well-aimed shots. Okay, so she wasn't weak either. This little thing was dangerous. My job had just become a whole lot easier. \n\nWe repeated the same with each of the three remaining cars. She shot, reloaded, shot some more. A professional must have taught this girl how to shoot, because shooting the tires of a moving car from another moving car was a hell of a lot more difficult than it looks in the movies. My hands clamped the steering wheel. I'd trusted this girl without a second thought, had let those cars get close to us. Where had that come from?\n\n\"Is that the last of them?\" she asked.\n\n\"I expect not. We will see more of them at every airport, and then again in Pakistan.\"\n\n\"Well, they obviously know it's me so there's no point in wearing this anymore,\" she said, undoing the scarf from her face and hair. Long golden hair fell to her shoulders, shining like warm sunlight, bright and blinding. Her face was... exquisite. She had angelic features; a pixie nose, big almond-shaped eyes, plump pink lips, and a killer resting bitch face. She was the most beautiful thing I'd ever seen.\n\n\"Where to, boss?\" she asked, her big blue ocean eyes glancing out the window. I cleared my throat. \n\n\"Sabiha Gokcen International Airport.\"\n\n\"That's smart,\" she said. \"Istanbul's infected by those fucking worms.\" I'd never heard anyone call their enemies 'fucking worms' before. It was amusing, but I didn't crack a smile. \n\nHitmen don't smile. \n\n\u2014\n\nThe Drug Mule\n\n\u2014\n\nWe drove by Sabiha Gokcen International Airport and found it overflowing with more worms, and with them was the police, trying their best to arrest the gang. There were cops everywhere. The driver changed our course, moving us from the airport back onto the main streets, taking us further and further north. \n\n\"Where are we going?\" I asked. \n\n\"Need somewhere to lay low.\"\n\n\"And where's that?\" I asked. \n\n\"Confidential.\"\n\nI snorted. \"I can see everything, you know.\"\n\n\"Use that scarf to blindfold yourself,\" he said. \n\n\"What? No,\" I said, and a moment later the smile was wiped off my face. A Glock was pointed right at my forehead. \n\n\"Do as I say.\"\n\nI held up the pistol, pointing it back at him. \"Try me, asshole.\"\n\nThe car screeched as he pulled over. He turned around on the seat, grabbed the pistol gripped in my hand and yanked it to his forehead. My finger hovered over the trigger. \n\n\"Shoot,\" he said, his eyes burning. A moment of silence passed before he spoke again. \"Never point a gun that you don't plan to shoot. It's not a fucking toy.\"\n\n\"You pointed your gun at me too,\" I pointed out, trying not to tremble. My hand was still wrapped around that gun pressed to this forehead. I could shoot, could blow his brains out right there\u2014but I wouldn't. I wasn't like this guy. And I wasn't like Pete. \n\n\"I would have shot you dead if I had to,\" he said coldly. I let go of the gun. \n\n\"I'm not a killer,\" I said. \n\n\"That makes one of us,\" he said, yanking the pistol out of my hand. He emptied the bullets and threw it on the passenger seat before putting the car into drive again. I put on the blindfold as he sped down the street. \n\n\u2014\n\nI couldn't check my watch to see how much time had passed, but I knew it had been at least an hour when the car had finally come to a stop. It was now evening, and I was feeling a little chilly. I felt around for my backpack and pulled a sherpa-lined denim jacket out, donning it to fend off the cold. \n\n\"Wait here,\" the driver said, and I obeyed. I didn't really know why I was trusting this guy. He hadn't said who'd sent him, and I was suddenly filled with the very real fear that he'd brought me straight to the competitors. I ripped the blindfold off, looking around at my surroundings. It was an old junkyard with rusted cars and parts lying around everywhere, like an auto graveyard where no one bothered to bury the corpses. I opened the door, stepping out onto the dusty ground. \n\n\"I told you to wait in the car,\" said a voice from behind me. I turned around and it was the driver, wearing his usual scent of Eau de Asshole. \n\n\"You just said to wait here. I'm still here, technically.\"\n\n\"I don't have time for games. Grab your stuff.\"\n\nI grabbed the scarf, certain I'd need it again. I was still wearing the abaya. When I turned around, I went up to the driver and shoved him. He didn't move an inch, just looked down at me like I was the most annoying thing he'd ever had to deal with. Hell yeah, I was. \n\n\"Tell me your name,\" I commanded. \"Give me a reason to trust you.\"\n\n\"Telling you my name should change nothing,\" he said coolly. \"You should never trust a man like me.\"\n\n\"Cryptic,\" I said, rolling my eyes. \"What should I call you?\"\n\n\"Nothing.\"\n\n\"Okay, 'Nothing,' what am I supposed to call you in front of people?\"\n\n\"You will not speak in front of people. I'll do all the talking. We'll be driving through Iran soon. Stay silent and it'll keep you alive.\"\n\n\"But I don't have a visa for Iran.\"\n\n\"You will.\"\n\n\"That could take weeks or months! I can't be away from the ki\u2014from US soil for that long.\"\n\n\"Forged documents don't take that long.\"\n\n\"Forged? You'll get us thrown in jail,\" I said. \n\n\"The alternative is going back to the airport where you'll be kidnapped, tortured and killed. Which do you prefer?\"\n\nI didn't answer. I had no choice. \n\n\u2014\n\nWe waited at the car garage for five hours before someone entered through a gate and came to greet my driver (I didn't know what else to call him). The man was thin and wore a blue suit, which was later explained when he told me that he owned a suit shop. He was dressed sharply\u2014sharper than my driver who was in a traditional black kurta, a leather jacket, and a pair of black boots. The men were different; my driver was unfriendly, but this guy was a total peach. \n\n\"Nice to meet you,\" he said, taking my hand and shaking it with both of his. \"I am Taimoor. I will get you prepared for travel through Iran.\"\n\n\"Thank you,\" I said, feeling much better to have a friendly face around. \n\nTaimoor smiled and turned to the driver. \"Any existing false passports, Brother Yusuf?\"\n\nYusuf. So he had a name.\n\n\"Yes,\" Yusuf said. \"I have six with me.\"\n\n\"You will only need one. You must discard the rest.\" Yusuf nodded.\n\n\"And you?\" Taimoor asked, turning to me. \n\n\"I'm using a fake passport, but my cover is blown.\" I was currently Anna Marie Johnson, and she had a target on her head. Time to let her die so that I could live. \n\n\"That won't be a problem,\" Taimoor assured me, smiling. \"I will arrange for a new one.\"\n\nYusuf slipped a hand into his back pocket, pulled out his wallet and handed a thick wad of cash held together with a rubberband to Taimoor. \n\n\"Expedite this, Taimoor,\" he said. \n\n\"Very well, brother,\" Taimoor replied. \"I will bring you passports in two day's time. In the meantime, I will bring you food, water, and provisions. Do not worry. I will protect your position.\"\n\nTaimoor left for fifteen minutes and returned with pilav, \u015fi\u015f kebap, k\u00f6fte, d\u00f6ner, and some Sprite, Coke, and hot Turkish tea. It was a fantastic feast of meatballs, rice, stick kebabs and some sandwiches with kebab meat. The smells were almost overpowering, filling my senses and making my stomach grumble. I hadn't gotten a chance to eat a real meal in a long, long time. \n\nTaimoor took his leave, promising to return in the morning. Yusuf turned to me, his eyes pausing on my belly. I realized I was still wearing my backpack under my abaya. He must think that I was pregnant. I didn't consider coming clean. Maybe he'd treat me better if he thought I was pregnant. And maybe he wouldn't perv on me either\u2014but something told me that this guy wasn't here for the sex. He was here because he chased a high. I just didn't know what it was yet. Money? I observed him and noted that he dressed ordinary, had an ordinary haircut and wore an ordinary, average-priced watch. This guy didn't care about money. \n\nSo what was it? I guess it didn't really matter. I only needed him to get me into Pakistan. I could make my own way from there. \n\nYusuf opened the trunk of the taxi, digging around until he found a rolled-up blanket. He shook it out, put it on the ground and opened and arranged all the food on top of it. So we were going to dine traditionally. \n\n\"Sit,\" he said after he'd finished pouring two cups of steaming hot tea. \"Drink. Eat.\"\n\nI did. \n\n\u2014\n\nI'd fallen asleep in the middle of my meal. The last thing I remembered was shoveling a spoonful of pilav in my mouth, leaning back in contentment and then putting my head on the blanket, cuddling up while Yusuf stared at me as if I was a disgusting bug that he'd just crossed paths with. I guess it was kinda rude what I did, but fuck him; I was tired as hell. I knocked out on the ground, and I was certain that I started snoring almost immediately. \n\nWhen I woke up, the sun hadn't touched the sky yet, but I could tell that it was early morning by the calls of birds. I sat up and something fell off my shoulders. I glanced down and it was a leather jacket. Yusuf's leather jacket. I felt my stomach clench in surprise, which was a pretty severe reaction to a guy giving you his jacket. Maybe it was because no one had ever really done something like that before. I'd always asked to borrow sweatshirts from ex-boyfriends, and even Sergio was distant, leaving me to sleep alone and naked in a bed while he took care of midnight business deals. Yusuf was the first guy who'd shown me an act of chivalry\u2014and it had been directed at me. It blew my fucking mind. \n\n\"Uh, Yusuf?\" I called, looking around. It was pretty hard to make out my surroundings. I finally spotted a figure kneeling on the ground, sitting back, weight resting on his calves. I immediately recognized it; he was praying. I got up, folded the jacket and gently put it down on top of the blanket. I walked over and sat beside him, closing my eyes and taking in the fresh air. I did some breathing exercises and cleared my head as he spoke to the heavens. I'd expected a lot from this guy, but I hadn't expected him to be religious. \n\nAfter a few minutes, I heard him get to his feet. My eyes popped open. \n\n\"What did you pray for?\" I blurted out. \n\n\"Peace.\"\n\n\u2014\n\nThe Hitman\n\n\u2014\n\nI started training immediately after prayer. There were no bands or weights, but my goal was endurance, not bulk. I completed 15-20 reps of a non-traditional muscle-building plan. Mobility, joint stability, explosive power, and injury prevention were the cornerstones. I did stretches, warm-ups, the workout, and probably would have gone for a run to cool down if I wasn't on assignment. My goal was to protect the girl. I couldn't leave her. \n\n\"You train like a SEAL or something,\" she said after I'd completed my workout. I wiped the sweat off my brow with my forearm, giving her a look that conveyed my disgust. I figured if I gave her enough of those, she'd stop asking me questions. I was wrong. \n\n\"You're built like a killer. You work out like one, too. You gotta be a contract killer or something. Are you?\"\n\n\"You think all men in the east are assassins and terrorists?\" I snapped. \n\nHer face fell. \"N-No, I didn't mean it that way. It's just\u2014my brother was a hitman. He acted and trained a lot like you do.\"\n\nI bent over, hands on my knees, and tried to take deep breaths. I was still winded from my workout. \n\n\"Your brother,\" I said in between breaths, \"What does he do now?\" \n\n\"He's dead,\" she said, blinking fast. Her golden hair rippled like water in the wind, sweeping across her face, a lock of it getting stuck on her eyelashes. I resisted a very strong urge to brush it away.\n\n\"I'm, uh, sorry to hear that,\" I said, clearing my throat.\n\n\"Me too,\" she said, her eyes full of tears. I turned and walked away so that I wouldn't see her cry. I didn't want to feel sorry for this girl. \n\nBut I already did. \n\n\u2014\n\nTaimoor brought us a traditional Turkish breakfast spread around 7 AM. Kahvalti was one of my favorite meals. It consisted of beyaz paynir (brine cheese), eggs, cucumbers, tomatoes, olives, kaymak (clotted cream), butter, jam, honey and some spicy sausages called sucuk. There was tea and coffee for the end of the meal. Taimoor had also brought a couple gallons of water in the back of his car, which I unloaded and then shared with the girl. I finished almost an entire gallon, chugging it down to quench my thirst. The girl drank a lot, too, but nowhere near as much as me. \n\nAfter breakfast, Taimoor helped the girl cover her face and hair with her scarf. \n\n\"Today is photo day. We must complete it all by mid-afternoon if we are to have the passports and visas ready by tomorrow,\" Taimoor said. He helped the girl into the backseat of his car, handling her with far more care than I had. He even drove slowly over bumps, checking every now and then that she was comfortable. I hadn't been raised to be this way. I hadn't been raised at all. I acted like an animal because I was one. Taimoor treated the girl the way she deserved to be treated and I was surprised that I recognized that. \n\nTaimoor drove us to the back of his suit shop. I noted where we were in relation to other buildings, how many options there were to get to the street and where the windows were. We exited the car and followed him into the back where there was a large open room full of sewing machines, fabric, and mannequins. Suits were hung up on poles that ran from one end of the room to the other. On one end of the room, a photo studio had been set up. Hung up on the pole closest to it were the outfits the girl and I would be wearing. There were two sets of outfits. One for the passport photos; and one for the wedding. \n\nI probably should have told her that we were getting married today. \n\n\"Have a seat, have a seat, Ellie,\" Taimoor said, rolling an office chair over. Taimoor kept her busy for the next ten minutes, chatting about the local cuisine (which she was now a huge fan of) and entertained her with some Turkish jokes. She smiled sweetly at him. The sight of it made my heart stop. She was so beautiful that it was distracting. I shook my head and turned away. \n\n\"Taimoor?\" said a feminine voice, opening the back door. A woman stepped inside. She wore a red dress and had a scarf loosely covering her hair, which was cut in a short bob. She looked like a movie actress with her red lipstick and darkly-lined eyes. \n\n\"Zehra,\" Taimoor said, looking pleased. \"You are here.\"\n\n\"I hurried over as soon as I heard, brother,\" she responded, smiling. \"Now, let's see the blushing bride.\"\n\n\"Who\u2014who's getting married?\" my assignment asked. I sighed. \n\n\"You cannot pass through Iran without a husband. You must marry Yusuf,\" Taimoor explained.\n\nShe looked at all of us, as if she expected us to burst out laughing and yell, \"Gotcha!\" \n\n\"I'm not\u2014no,\" she said, shaking her head. \"You must be joking.\"\n\n\"It's not a real marriage, sweetheart,\" Zehra said gently. \"Only a marriage between your two fake identities.\"\n\n\"Will there be a ceremony?\" she asked.\n\n\"But of course,\" Zehra said. \"We need a real imam to sign the marriage certificate and they will not do so without performing a real ceremony. But worry not, my darling. It will not be a real marriage to us or to you. This will merely get you across safely.\"\n\n\"Is there no other way?\"\n\n\"None that will get you ready to cross into Iran by tomorrow.\"\n\n\"I have to get back to the US as soon as possible, my...\" she paused, closing her eyes. When she reopened them, I could tell that she'd resolved her feelings. \"If this is the fastest way, then I guess 'I do.'\"\n\nThere wasn't a damn thing I could do to back out of it myself. My assignment was to get her to Pakistan, and that was why I had arranged this as a backup ahead of time with Taimoor. I'd never had a fake marriage before, and from the looks of it, neither had she. We were going to be married by a real ceremony but under aliases. Did that make us really married in the eyes of God?\n\nI tried not to think about it. \n\n\u2014\n\nThe Drug Mule\n\n\u2014\n\nZehra took me out back and helped me bathe with a bucket and a hose. The water was freezing cold, but I was grateful for the opportunity to be clean again. She had brought shampoo, conditioner and body wash. When I first took off the abaya, she gasped. \n\n\"You are not pregnant?\" \n\nI laughed. Of course I wasn't pregnant. \"No,\" I said, taking the backpack off and putting it down. \"Not pregnant.\"\n\n\"Clever girl,\" she said, grinning. She helped me strip down to my bra and underwear. Thankfully, the back of the store was abandoned, and we were given cover by the cars parked there. \n\n\"Thanks for this,\" I said, working the shampoo into my hair. \n\n\"Your American dollars does much for our family. I am happy to bring you everything you need,\" Zehra said. We shared a smile. \n\nAfter bathing, I wrung the water out of my hair, dried myself thoroughly with a towel and got dressed in the clothes for the passport pictures. It matched the fashion of that time, an early 90's loose blue suit with a long skirt and a creamy white blouse paired with low pumps. The pantyhose and underthings were new, courtesy of Zehra. She cleaned my clothes and hung them up to dry while I brushed out my long hair. The wind blew it half-dry. \n\nWhen I stepped back inside, I bumped into Yusuf. He had his arms crossed and was leaning against the wall.\n\n\"Were you watching me bathe?\" I asked. \n\nHe scowled. \"I have better things to do than violate a woman's privacy.\"\n\nThen his eyes fell on where my pregnancy bump was supposed to be. It wasn't there.\n\n\"You're not\u2014\"\n\n\"No, I'm not pregnant,\" I said. \n\n\"I was going to say 'dirty,'\" he said and began to walk away. I reached out, grabbed him by the sleeve and tried to yank him back. He didn't move an inch, but he did stop walking away. He looked over his shoulder, catching my gaze. \n\n\"Don't be a wise guy,\" I growled. \"Insult me again and I'll have you buried.\"\n\nBefore I knew what was happening, I was pushed up against the wall, hands on my throat. Yusuf leaned down, his lips coming down close to my ears. \"Empty threats irritate me, woman,\" he said in a dark voice, his breath hot on my ear. \n\n\"Fuck you,\" I choked out. \n\n\"Not interested,\" he said and released me. I took in fresh gulps of air and my anger rose. This asshole had put his hands on me! I mustered up the last of my courage and tried to slap him across the face, but he caught my wrist. We glared at each other. \n\n\"I hate you,\" I spat.\n\n\"Remember that when I save your life.\"\n\n\u2014\n\nZehra and Taimoor took our passport photos and then quickly got us changed for the wedding. My dress was simple, elegant and black with a sheer cape that served as a train. Zehra fitted me with a black scarf on my head and then covered my face with a gorgeous gold chain face veil. I looked like an eastern tribal bride. Yusuf looked like himself, wearing another black kurta, although this one was much nicer with some intricate patterns sewn on the shoulders and chest. He'd trimmed his beard and actually looked... handsome. With deep dimples, a strong jaw and fierce golden eyes, he looked like he could easily steal at least a million hearts in his lifetime.\n\nJust not mine.\n\nOnce we were ready, Zehra brought out the marriage contract and had us review it. There was a list of standards we were expected to meet, one of them being that we must treat one another with respect. Good thing this was a fake wedding because there was no way Yusuf and I were going to be able to follow that. ",
        "\"Now we must go to the mosque,\" Taimoor said after we'd both read the contract. \"The imam is waiting for us.\" The imam would be the man marrying us. They typically led prayer in mosques and were usually well-versed in the Qur'an. Since Taimoor was going to be one of my two witnesses, he couldn't be my \"wali\" which was the man who would give me away. Taimoor said that the imam had agreed to be my wali. Everything was all set.\n\nI kept my head low on the drive to the local mosque. It was around the time for Zuhr prayer, and I got to witness people literally pray on the streets as we drove by. When we got to the mosque, the imam had just finished leading the prayer. He introduced himself as Hamza and said he was very excited to marry off his first Canadians. I didn't act surprised. Taimoor was probably arranging for Canadian passports. \n\n\"You may want to pray first, Brother,\" Hamza said, turning to Yusuf. \"I will prepare the nikkah and review the contract.\"\n\nWitnessing Yusuf pray was like witnessing the sunrise; beautiful yet painful to look directly into. When he prayed, it was as if he transformed, as if he was no longer a beast, no longer a monster; he was human\u2014and that intrigued me. Guys like him had heartbeats just like the rest of us, and yet he was so unfeeling and cold when he wasn't praying. It was as if prayer brought out his soul, exposed it to the world, making him defenseless, making him human. I liked this vulnerable side of him. \n\n\"Ellie,\" he said after he'd finished praying. He turned his head and looked at me, holding out his hand. It was the first time he'd used my name. I wondered if his god had told him to treat me better. \n\nI walked over and took his hand. He gently tugged me down and I sat cross-legged on the floor beside him, facing Mecca. All the Muslims in this area were praying, facing in the same direction of the world, and for a moment I felt the force of all that faith. I was a part of something. I was a part of hope. \n\n\"We must actually enact a Muslim marriage ceremony here to draw the least amount of attention,\" Yusuf said. \"Is this okay with you?\"\n\n\"Yes.\"\n\n\"This ceremony will be real, and after it, we must act married. I will do everything expected of me. I will care for you and protect you from harm.\"\n\n\"I believe you.\"\n\n\"It is, ah, custom for the groom to gift his wife something. It's called 'Mahr.'\"\n\n\"I see. What will you give me?\"\n\n\"It can be anything. It is usually money or property or something of value. What would you like?\"\n\nI pretended like I had to think about it for a moment, but I already knew what I wanted.\n\n\"I want your kindness, Yusuf.\"\n\nHe closed his eyes and sighed. When he opened them, they looked at me as if I'd brought him the moon. It startled me, the warm look in his honeyed eyes. \n\n\"There's a part of me that will acknowledge this as a real marriage,\" Yusuf said. \"With God as our witness, I don't think aliases will matter. It will be souls, Ellie. Our souls will be married, and that's a connection that I can't disrespect. But kindness, I cannot give you.\"\n\n\"Why not?\" I asked. \n\n\"Because I have been trained to be unkind,\" he said, \"I can give you patience, but I am not capable of kindness.\"\n\n\"I'll teach you.\"\n\n\"No,\" he said firmly. \"You must not. We cannot distract one another. We will do this job, get a divorce and move on. We cannot be friends.\"\n\n\"Well, if patience is all you can give me, then I guess I accept that as Mahr,\" I said. \"Just, you know, don't be an assho\u2014\" I stopped myself, realizing that I was inside of a holy place. \"Don't be a jerk.\"\n\n\"Okay,\" Yusuf said. \"I will not be a jerk.\"\n\n\u2014\n\n\u2014\n\nThe Hitman\n\n\u2014\n\nIt is important to reflect the magnanimity of God at a wedding, so we ensured that the towns-people received were fed. We were treated like royalty. Our route planned, the car was gone over meticulously. The most important factor when determining our safety would be our ability to continue on without fear of stopping or having to stay in any one place for too long. If my calculations were correct, it would take us six days of driving eleven or twelve hours a day to get to Islamabad. \n\nWe had to drive the length of Turkey, across Iran and then through Afghanistan. I was being well-compensated and I knew that I was going to have to earn my pay. Turkey would not be too difficult, but Iran was still struggling to find work for the men who had been soldiers during the eight-year war with Iraq. Many were now unofficial mercenaries and unsanctioned law enforcement, which amounted to bandits. The mujahideen in Afghanistan had just ended their civil war and replaced Najibullah's Soviet-led regime, which led to anger with Pakistan, who supported Najibullah and the Soviets who had cut off aid. \n\nIt was a mess and I had to get a beautiful blonde American safely through all three countries. \n\nWar, while tragic for some, was a source of opportunity for others. The Americans and their coalition loomed large, even in their absence, and the people I associated with were thriving. The black market, forgers, and smugglers were making a fortune. There was a professional network and if I didn't know someone in the area who worked on the other side of the law, I had connections who would. \n\nI had compartments secreted into the car we were taking to hide tools of the trade and took three large cans of petrol that I would fill whenever we needed to refuel. We weren't stopping unless we had to. Making our way through Turkey wasn't onerous. There were only two concerns, the first was that Ellie seemed always on alert but appeared relaxed. I wondered how long someone could maintain that vigilance before cracking. The second was that to keep up the image of a married couple, we had to sleep in the same room. I took the floor, she took the bed. \n\nWe were between Tabriz and Zanjan and were staying at the home of someone eager for some of my money. It was a rural village and the homeowners stayed with relatives after preparing dinner for us. They would be back in the morning to prepare breakfast before we left. I'd tip them well and hopefully, we'd be able to take some patlicanli pilav and Mercimek koftesi to keep our bellies full. \n\nWaking up early, I went outside to exercise. When I was done, I moved towards the shouting and laughter of children. They were playing some game they made up with a well-worn soccer ball in the field next to the home. Walking over, I watched. The boys reminded me of my son, Jibril, and I tried to remember times I had seen him at play. I couldn't think of any since his mother had died. I visited him at the madrassa twice a year. Naeem Badrashi insisted that anything more would be indulgent.\n\nI had also attended a madrassa, the one where Naeem's pet assassin found me and decided that I would make a suitable killer for the great man. It was the same madrassa where I began my initial training under his private tutelage and where I was plucked from to marry my esteemed father-in-law's daughter. Yes, Naeem Badrashi was my father-in-law. He was wealthy, he was powerful and I was in awe. I would have done whatever he had asked and been grateful for the opportunity, but sacrifices weren't necessary. Aisha was beautiful, kind and much better educated than I was. Why she seemed happy with our match was a mystery to me, but I was smitten and quickly fell in love. \n\nShe died when Jibril was five and I was on a job. When I returned the great man told me that I shouldn't be dismayed and that he would find me another wife. That is how he expressed his sorrow over the death of his own daughter and the woman I loved more than life. I almost killed him. It was a dark time and I worked constantly. He told me that Jibril was with his cousins and he would come back to live with me when I was back in control of myself. Like a fool, I believed him. \n\nMy son was sent to a madrassa as a safeguard against my loyalty. \n\nThe assassin that had trained me now acted as the chief bodyguard for my father-in-law while I filled his old function as a killer for hire and family enforcer. While he had my son under his control, I was his loyal dog. He would line my kennel with gold, whispered endearments and promises for my son's future and like a good dog, I sat on my haunches and awaited my instructions. Not every job involved killing, but those that did invariably claimed two victims; the target and a piece of my soul. \n\nWhen I first began, they made sure that I was convinced that whoever I was eliminating was coming to kill the great man or his family. It was a defensive war and I was protecting a hero, the benefactor of thousands, the man who plucked me from obscurity and gave me purpose. Once the scales fell from my eyes they had my son captive. I continued or he would suffer. So I sold pieces of who I was for my son's safety. \n\nGo to America, Yusuf. This man is causing problems for the family.Off I would go, killing a rival in Dearborn, Michigan. A man is coming today, Yusuf. Eliminate his security. Shortly after he arrived he would find himself bereft of guards. Her name is Ellie, Yusuf. Fetch, boy. Bring her to Muree, get the package there, then bring her to Lahore. Keep her safe, Yusuf. Good boy, good boy. Like the dog that I was, I did his bidding, always and without complaint.\n\nThe scuffed up and underinflated ball rolled my way and some of the kids called out. \"Yella! Yella!\"\n\nJogging forward, I pulled back on the top of the ball with the tip of my shoe, let it ride up on my foot and lifted it a bit into the air. As it came down, I kicked it back up a bit and then over to the children. I don't think they had many adults that played with them. I was an anomaly. The ball was passed around a bit and then one of them kicked it over to me again. I headed it, bounced it on my knee and then kicked it back to the kid. \n\nWe continued for a while until I turned, letting the ball bounce off my chest and noticed Ellie standing there, watching me with a bemused expression. I realized I was laughing with the kids and immediately stopped. \n\nEmotions are a weakness that can be exploited. Hitmen don't show weakness.\n\n\u2014\n\nEllie's hand was on my arm as he approached us. \n\n\"This doesn't feel right.\"\n\nI agreed with her. We passed through a checkpoint when we first entered Iran and had no difficulties. It appeared... normal. Now we were six hours into the country and were approaching another checkpoint that seemed ramshackle and primitive. The barren land to either side of the road was littered with rocks that were up to two feet in diameter. I removed her hand from my arm while again reassessing my original impression of Ellie. She seemed to almost have a sixth sense for things that were \"off\" when it came to people in positions of authority. That would be a highly valued attribute in her line of work. \n\n\"Remember, no English.\"\n\nShe nodded as the man approached. He questioned me for a moment. Reaching for our ID's as asked, I spoke up in Urdu. \"Of course. Do you speak Urdu? My wife and I are headed home.\"\n\nHis accent was horrible, but he made himself known. \"Yes. Wait here.\" Taking our passports, he made his way back to his decrepit building. \n\nEllie was right. Something was definitely off. His uniform seemed disheveled and out of date, the building hadn't seen repairs in years and the wooden barrier blocking us seemed jury-rigged. It was almost as if this had been a fall-back checkpoint during the war with Iraq and had been abandoned long ago. When he stepped into the building and closed the door, I got out of the car and moved quickly to the door he stepped through. Pausing, I listened as he spoke to someone in Farsi.\n\n\"Blonde, I am sure.\" Pause. \"Early 20's. European.\" Pause. \"Just the two of them. I will need double. You will fetch much more than that for a blonde. She...\"\n\nPushing open the door, I put a bullet in his head. He fell to the ground, still holding the military-grade handset to his ear. I don't know who he was talking to, whether they were white slavers, human smugglers or something else. My not knowing was coupled with my not caring. We needed to get out of there as quickly as possible. I took his gun, put it in his hand and fired it at the doorway twice. \n\nGoing back to the car, I went into one of the compartments we'd had built into it and removed a packet of almost pure heroin and a small stack of Turkish currency totaling about 5,000 lira. I put the heroin under the corpse's belt and the money in his pocket. If he was in any way actually legit or had connections to anyone legit, I wanted it to appear as if he was involved in the drug trade. Investigators this far out would be looking for the simplest explanation and I was happy to give it to them. \n\nI got back into the car.\n\n\"What happened? What did you take from the car?\"\n\n\"Nothing. It's taken care of. Stick to Urdu. You need to do a better job of keeping your hair hidden. The next time we stop, get the blankets and water from the trunk. We're sleeping off the road tonight, no hostels.\"\n\nShe was quiet a moment before replying. \"Okay.\"\n\n\u2014\n\nThe Drug Mule\n\n\u2014\n\nHe wasn't kind during the weird fake wedding, but he was at least respectful. It seemed to matter to him somehow and it was difficult to keep thinking of him as this strange other. He was a man, not some stoic killing machine. When I saw him looking so sad and then playing with the children something inside of me changed and I couldn't put my finger on it. That initial shifting deepened and expanded. He wasn't just a man, he was someone with a background, a history and someone who had a soft spot for children. \n\nHis running around passing the ball and laughing made me think of my siblings and I wondered if he had any kids. \n\nIt was well after dark when we stopped. He used both of the large petrol cans and we pushed on for as long as possible. He had a knack for looking the same regardless of what was going on around us, but even I could tell that he was exhausted. Our stopping had only been for bodily functions and his praying. We were parked behind a small ridge, out of sight of the road and had a supper of dried fruit and pastirma, a flavorful dried meat. \n\n\"Yusuf, do you have any children?\"\n\nBefore turning from me I saw an ocean of pain in his eyes. He took a bite of the pastirma and gnawed on it for a moment. \n\n\"I will get you safely to Lahore. I will treat you... as respectfully as possible while we are together. I do not need to know about your family and you don't need to know about mine. It's simpler that way. Less... It's just simpler.\"\n\nWe set out our bedrolls and were asleep fairly quickly. I woke up a few hours later, my heart in my throat. I didn't know if it was due to a dream or something I sensed in the darkness, but it disturbed me on a very basic level. After laying there for half an hour, I finally got up and moved my bedroll next to his. \n\nI woke up in the morning with his arm over my shoulder, hand resting on my breast and what might be an erection pushing through both his bedroll and mine and into my butt. His soft, regular breathing was somehow reassuring and his warmth was welcome. The hand on my breast was starting a different warmth in me when he stirred. He began slowly pulling his hand and arm back, maybe thinking I was still asleep. I grabbed the hand and held it in place with my own. \n\nTracing my fingers over his, I realized he was missing the end of his ring finger. He flinched as I felt it. \n\n\"What happened?\"\n\nHe paused before speaking. \"Punishment. There were lessons I needed to learn when I was young. The inducements to learn were effective.\"\n\nYusuf always sounded so stiff, so distant. I could feel my nipple crinkling and hardening under his palm. \n\n\"In school? They... they did that to you for not learning something?\"\n\n\"It was at the madrassa, but it wasn't one of their teachers. It was the man who taught me to be who I am. He'd come every few weeks. Set up challenges for me, quiz me, see what I'd learned since the last time we spoke. There are rules we have to follow if we're to survive. I had to remember them, all of them and in order. My memory improved when this happened.\" He wriggled his fingers.\n\nI don't know why I did it, but I lifted his hand to my lips and kissed the finger. \"I'm sorry.\"\n\n\"I...I have to get up. Stretch. Pray. I...\"\n\nNeed to get away from me.\n\n\"I understand. I should have said this before. I appreciate what you're doing. I know it's a job for you, but, well, you're keeping me alive and I appreciate it.\"\n\nIn spite of his claim of needing to get up, he stayed where he was. It was a few moments before he spoke. \n\n\"A son. Jibril. I have a son.\"\n\nI didn't understand why, but I thrilled at his sharing this information with me. \n\n\u2014\n\nThe Hitman\n\n\u2014\n\nWe were consuming water faster than I had anticipated and that bothered me. This was part of my job. Ellie was supposed to be delivered safely and in good health. I had to balance that against the need to remain out of sight and off the beaten path. We stopped in Sabzevar, just south of the Golestan National Park. It was a surprisingly dense city and the people were friendly. \n\nIn the shadow of the Masjid Jameh of Friday mosque and it's twin minarets lay a large open-air market. Sabzevar was known for its dried fruits which were shipped throughout the middle-east and were exactly what I was looking for. Ellie kept her head covering tight and her eyes downcast, trying not to draw attention. The heat beat down on us, but we were both grateful to be out of the car for a short while and luxuriated in the limited freedom of just walking around. \n\nWe had just finished some samosa from a vendor and were looking to purchase an array of lavashak for dessert. The fruit rolls were cheap, delicious and omnipresent. The merchant also sold Coca-Cola from Mexico, which was a huge surprise. I was haggling over the price of a case and a box of lavashak when I caught something out of the corner of my eye. Turning, I saw Ellie standing there, body language tight. A man stood directly behind her and way too close. \n\nKeeping my hands at my side, I pivoted towards them slowly. Ellie was staring at me with what looked like a desperate plea in her eyes. I didn't know if it was for me to kill or spare this man. \n\nI spoke in Farsi. \"Is there a reason you have touched my wife?\"\n\n\"Your wife, my brother? I believed she was unmarried.\"\n\n\"You're not my brother and you haven't answered my question. Is there a reason why you have touched her?\"\n\nHe smiled at me. \"Who says that I have touched her?\"\n\nLetting it go would have been the smart move, the professional move; but I just couldn't. Something deep inside me pushed forward. It was new, disturbing and surprisingly exhilarating. He thought that he had a right to grope a woman. I was offended on a basic level and would have been so regardless of circumstances, but the woman was Ellie. My feelings were blurring from protective out of fidelity to the job to just protective. \n\n\"Is your hearing defective? I said so. Twice. Apologize to my wife and I will let you leave.\"\n\nHis supercilious smile faded. \"You are a guest here, foreigner. You presume to make demands upon me?\"\n\nLike a peacock, he was wearing shalvar long pants and jameh, both of bright blue. A merchant in a stall behind him seemed aghast and I saw other shoppers giving us a wide berth. It appeared that he was a big man in the area. I really should have let this go, but... Ellie. Two large men dressed in cheap suits came hustling over, stopping at the peacock.\n\n\"Mr. Shirvani,\" Bald with the thickest mustache I've ever seen, he gave a quick half-bow. \"Is everything all right?\"\n\n\"This man and his whore have insulted me.\"\n\nI smiled, my rules going out the proverbial window. \"You are making a huge mistake. Apologize and I will let you and your men leave. I will not make this offer again.\"",
        "The large man stepped towards me and tried to grab my shirt near the shoulder. Pinning his hand to my chest, I stepped back with the foot on that side, pulling him slightly off balance. The side of my lead hand shot out towards his throat, but he turned his head and tucked it in, taking the blow on his jaw. He was trained, which made this situation much worse. I kept the hand pinned to my chest, but twisted it round so the palm faced up and then lifted quickly. He had to close and elevate his arm or risk a broken wrist. As he tried to shift into a position that would remove the pressure, I hit him on the side of the head with an elbow, gained separation and kicked him in the sternum. \n\nThere was now space between us and the other large man rushed me and managed to get me in a double-leg take-down. Some of the best wrestlers in the world were from this region, stretching from Dagestan to Turkey. I did not want to be on the ground with this man. On my back, I swung one leg over his shoulder and the other across his neck. Managing to grab his arm, I straightened it and pulled it back against his elbow, using my own ribs as a fulcrum as I twisted. Either his arm was going to break or I was going to choke him out.\n\nOr neither. He grabbed my belt with his free hand and managed to get his feet under himself. With an amazing display of strength that was likely enhanced by HGH or steroids, he lifted me off the ground and then slammed me back down. My grip slipped from his arm and he used the freedom to grab me by the throat and repeat his jarring slam. It was like trying to choke a gorilla. \n\nHis grip was insanely strong and I was looking about desperately. The merchant had his wooden cases of Coca-Cola under his table. Stretching, I reached for one but missed. Up I went and then back down again. Something may have broken inside me, likely a rib. Stretching again, I felt the edge of the case and pulled it towards me, finally grabbing a bottle. The gorilla lifted me one more time, and I felt his position shift as my legs lost purchase. He was going to slam me down again, but this time focusing on my head hitting the pavement instead of my back. \n\nMy legs entwined around his waist and I almost did a sit-up. When I was close enough, I slammed the drinking end of the bottle into his right eye. It hit the orbit, but careened off into the eyeball, pushing it inwards. I used my other hand and slammed the back of the bottle, forcing it halfway into the man's eye. I fell to the ground as he stood and slowly topped backward. \n\nThe first man came towards me in a hurry. Still on the ground, I pivoted and put myself at a right angle to him, grabbed his right knee and used an ankle pick on his left foot to take him down. It was an unusual move from the ground and he fell hard. Rolling over his back, I grabbed his head and slammed it into the pavement three times. Looking backward, I saw the peacock reaching into his shirt, likely for a gun. I could roll over the unconscious man and use him as a shield but that would only work for one or two shots. \n\nI glanced at the table quickly, wondering if I could get under it in time when I saw Ellie step behind the peacock and hit him over the head with a metal display case she had taken from a merchant. He fell to his knees and she hit him again. He slumped to the ground and stopped moving. Standing, I winced at the pain in my side, grabbed the case and used it to catch the lavashak, nuts and other foods I was sweeping off the merchant's table. \n\nSpeaking in Urdu, I called to Ellie who was still standing over the peacock, seemingly in shock. \"Grab the water. And the coke.\"\n\nResting the case on my knee and holding it with one hand, I thrust a wad of bills at the merchant. It was more than he would make in a month. We hurried out of the market and to the car and hoped that we weren't being followed. A lot would depend on how despised the peacock was. If I pushed it, we could be in Afghanistan in 12 hours. We had food, water, a full tank of gas and two spare cans filled and in the back seat. \n\n\u2014\n\nThe Drug Mule\n\n\u2014\n\nI think I killed him. He was going to kill us, so I shouldn't feel like this, but that wasn't helping. After all of Sergio's training, I was still a wreck after possibly killing someone who needed killing. My hands wouldn't stop shaking, but that might have been adrenaline. I was having difficulty thinking, so I just listened to Yusuf and did what he said. \n\nThere was something missing in me. Something that kept me tethered to the real world. I kept losing that attachment to the every-day and seeing the kids would reaffirm why I was doing all of this. Mac and cheese with chopped up hot dogs with them was better than haute cuisine in the best restaurants with anyone else. I needed to see Ashley, Danny, and Sophie. I needed to feel their hugs and to know that they were real. \n\nThe best parts of me were slipping away and I needed the kids so damned much. \n\nI should have been back in California, flirting with some jocks, avoiding keggers and getting my degree. Instead, I was in the middle of Iran after having brained someone that looked like an extra from Disney's \"Aladdin on Ice\". He'd grabbed my ass. So what? After everything that I'd done with and for Sergio, some creeper playing grab-ass wasn't a big deal. Not to me. For Yusuf? It was clearly a big deal. \n\nThere was a look in his eyes that was both terrifying and exhilarating. He was always so pent-up, so tightly wound, but when he saw the creep something became unhinged behind his eyes, and it was for me. Not for the job, but for me, for Ellie. He killed at least one man and maybe a second because someone copped a feel. I sat next to him in the car as he drove and a mix of emotions ran through me. I was nauseated by my actions, I was scared to death that we were being followed and I was consumed with thoughts of Yusuf losing control again, this time with me under him. \n\nHis right hand was resting on the area between our seats where we kept the snacks and water bottles. I reached over and ran my fingertips over his wrist and hand. He began to pull away and then stopped. Turning the hand over, he gently squeezed mine, and turned it down again. I left my hand on his as we drove from danger. \n\n\u2014\n\nThe Hitman\n\n\u2014\n\nAyd Farooqi, the man who created me, lectured me endlessly on how stimulants were a weakness. Imbibing in drugs was for lesser men. We were professionals. If we began leaning on anything outside of ourselves, what would we do when it wasn't available? I thought of him as I was in my tenth hour of driving and finished consuming my fifth Mexican Coca-Cola. I sat on the floor at his feet soaking up his wisdom as a child, never considering that he always had a cup of chai or phitti hui at hand. \n\nFrom dawn to dusk he consumed caffeine and would lecture me about stimulants. Another item on his list of what hitmen do and do not do. I'd had enough of hypocrites. I'd had enough of my father-in-law and enough of Ayd. My lists and my codes were going to be my own. More importantly, driving through Iran while wondering how many more men I'd have to kill to keep Ellie safe, I decided that I was going to have to find my own way to keep my son safe. \n\nI wasn't going to depend on the generosity of Naeem when it came to Jibril. He was my son's grandfather, but he used his own daughter as a chain to keep me linked to him and the only thing he mourned at her death was the loss of a tool.\n\nThe next time we stopped to urinate, I splashed some water on my face from one of our bottles and tried to wipe the exhaustion from my eyes. When she came back from doing her business behind an outcropping, I spoke to Ellie. She walked towards me, moon behind her framing her beauty. I was at a loss. \n\n\"Are you okay? Would you like me to drive for a while? You look... I don't know.\"\n\nShaking myself from my reverie, I spoke up. \"No, no I'm fine. When we get to the border, you need to become a Canadian. There can be no references to Russia. At all. None.\"\n\n\"Okay.\" She touched her cheek. \"Why are you staring? Did I get something on my face?\"\n\nI turned back towards the vehicle. My voice was harsher than I intended. \"I'm not staring. Stop wasting time.\"\n\nWe couldn't see much as we drove. To our left was a series of hills that grew in size the farther they were from the road. To our right were extended communities every few miles. Each was walled and a few hundred meters long. Rounded clay and terra cotta buildings that abutted one another housed families that worked the sporadic irrigated farms. Three trucks to every car passed us in the opposite direction of this two-lane highway and we traveled on, silence resonating in the vehicle. \n\nWe were soon at the border. We passed a checkpoint in Iran without problem and I sighed with relief. I'd been concerned that we would have an ambush waiting for us. A few hundred yards ahead was the checkpoint run by the Afghanis. Not overly original, their currency was called afghanis. I had a stack of afghani notes in denominations of 500 ready and passed them and our ID's to the guard. \n\nHe raised an eyebrow, scanned the ID's and spoke in broken Urdu. \"Returning home?\"\n\n\"Yes, brother.\"\n\n\"Travel safely.\"\n\n\"Thank you.\"\n\nBoth Ellie and I relaxed as we made our way into Afghanistan, Iran at our backs. \n\nIt was late, we'd been driving almost non-stop for 12 hours and my side was causing me pain. When I could, I'd have to get some tape to bind my side. I was fairly sure that I had a fractured rib. We stopped at the first town we came to and filled the car and two cans at a petrol station. It was attached to a home and the owner had been asleep, but he was happy for the business and good-natured about being wakened by the bell. After we purchased more water and food, I used my broken Pashto to ask if he knew of a hostel where we could stay for the night. \n\nHe spoke glowingly of a man who had married his cousin. They lived just outside of town and she was supposedly an excellent cook. He was sure they would take us in for the night and treat us well for a very reasonable fee. He clearly saw me as a mark, but I didn't care. He could overcharge me all he'd like as long as I was able to get some rest. \n\nAfter I gave the cousin way too much money, I asked about extra food and wide strips of cloth. He spoke to his wife faster than I could follow, but she soon returned with the cloth and he promised that we would leave with plenty of food in the morning. They fed us, showed us their small home, set up fresh linens and spent the evening in their barn while Ellie and I took their bedroom. After praying, I returned to the bedroom. \n\n\"I, uh, I could use your assistance.\"\n\nShe was sitting on the bed wearing a light blue nightgown. It was opaque and yet somehow appeared diaphanous. The room was poorly lit but her pale skin and the blonde hair were clear in my eyes. \n\n\"Sure. What can I do?\"\n\nI paused. This was incredibly awkward and wouldn't be possible under other circumstances, but we were alone and technically married.\n\n\"I need to wrap my sides. I may have fractured a rib.\"\n\nShe was quiet for a moment and looked concerned. \"This morning? With those men?\"\n\n\"Yes.\"\n\n\"And... And you drove all this way without saying a word?\"\n\n\"Yes. It wasn't so bad.\"\n\n\"How... Yes, it was bad, Yusuf. You were hurt, for me. I... Take off your shirt and give me the cloth.\"\n\nI sat next to her and she used the basin of drinking water to dampen the shirt she pulled from her bag. Gently, ever so gently, she cleaned my side and back where the bruising was. I almost flinched from her touch, but not from pain. There was an intimacy and a frisson that stole my breath. She slowly wrapped the first strip around me, tied it and tucked the loose ends in under the material. Grabbing another, she repeated the process and then again and again. When she was done, she kissed my shoulder and I could feel her shudder. I stood slowly. \n\n\"I... Thank you, Ellie. I have kept my promise to not be a jerk, while you have been kind. It... Thank you.\"\n\nI again took the floor while she took the bed. \n\n\u2014\n\nThe Drug Mule\n\n\u2014\n\nI lay on the bed, staring at the ceiling, listening to him breathe. Every once in a while he would shift and move and there would be a slight grunt of discomfort or pain. I winced every time I heard it. My fingertips ran over my skin, pretending it was his, remember how he felt; hard but yielding and patient. Yusuf had no idea what it took for me to stop when I kissed his lean, muscled shoulder. I wanted to continue, but wasn't sure what he was feeling. As he labored trying to rest, I regretted my hesitation. \n\nWhat good did hesitation do us? If he'd hesitated for a single moment in the market, he would have been dead. I would have been dead. Dead, or dying, or taken from the market kicking and screaming to God knows where. \n\nI couldn't afford to be consumed by \"what-ifs.\" They were another step into the world where I was losing pieces of myself, where I didn't belong. I needed something real. I needed Ashley and Danny and Sophie, I needed California, I needed it all to stop.\n\nHalfway around the world, I didn't have any of that. What I had was a man taking staggered breaths, a man who had been wounded because of me. For me.\n\nAnd he was real enough.\n\nThere was no hesitation as I slipped out from the bed and across the room to Yusuf. I just needed to be close to him. I needed to feel something real against me, the presence and comfort of a person.\n\nAt least, that's what I told myself.\n\nHe was laying on his side on top of the bedroll, a thin blanket covering the lower half of his body. A light sheen of sweat covered his forehead. Though his eyes were closed, I knew better than to think he was asleep. The staggered breath was one clue; the other was that I knew he was far too observant to sneak up on.\n\nSilently, I lowered my body next to his, lifted the thin blanket, and tucked myself against him.\n\n\"You should be sleeping.\" The words were a tickled breath against my shoulder.\n\n\"So should you.\" \n\nHe didn't touch me, just let me settle myself against his body. With no bedrolls between us, I could feel every tense muscle, every degree of radiating heat from his skin searing through my nightgown. His shoulder bumped mine awkwardly, his arm stiff against the side of his body until I reached back and took his wrist.\n\nThere was the slightest tug of resistance before he let me bring the arm around me. I guided it across my ribs, brought my hand over the back of his, and pressed it to my breast.\n\n\"No.\"\n\nBut he didn't move his hand.\n\nWell, he did move his hand. He cupped it, embracing my breast through the thin fabric of the nightgown, and I knew he could feel my nipple hardening against his palm.\n\n\"Why not?\" I whispered.\n\n\"This is a job.\"\n\n\"You married me.\"\n\n\"You are not\u2014\"\n\n\"I'm your wife.\"\n\nHis hand tightened on my breast. I didn't know if he could feel how fast my heart was pounding, but I could feel how hard he was getting. In the absence of the bulky material of the bedrolls, this time I knew for certain what was pressing against my ass. \n\nI shifted my hips, pushing myself against the prodding hardness behind me, and he squeezed his hand again.\n\n\"You don't know what you're asking.\"\n\n\"You do.\" \n\n\"Are you testing me?\"\n\n\"Are you actually complaining that I want you to fuck me?\"\n\nFaster than should have been possible for a man with a fractured rib, he grabbed my shoulder, pushed me onto my back, and brought himself over me. A puff of exhaled surprise was forced from my lungs as dark, dangerous eyes met mine.\n\nThere was a quiet moment as he stared down at me, jaw clenched, expression undefinable. \n\n\"Do you\u2014\"\n\nI reached up, pulled his face down to mine, and kissed him.\n\nFor half a racing heartbeat, he seemed surprised. For a moment that lasted no longer than a drop of rain in a puddle, I had control. In less time than it took to blink, he had recovered, and a tempestuous, aching growl rumbled deep in his throat.\n\nHe didn't kiss me back; he seized my lips, crushing them beneath his, a bruising force of conflicted desire breaking through as he commanded my mouth. One strong arm held his body over mine. The other snaked up my side, returning to my breast, gripping it hard enough that I whimpered against his mouth. He used his knee to part my legs further, pushing the bulging hardness against the dripping center of my body. Again I cried out, his mouth muffling the sound of lust that surged through me.\n\nHe pulled back as I whimpered and I gasped, heat rushing through my body.\n\n\"So you do want to fuck.\"\n\n\"I do not fuck,\" he hissed, and caught my lips again.\n\n\"This isn't exactly what I'd call making love,\" I murmured against his mouth.\n\nHe responded by biting my bottom lip and grinding his hips against me again.\n\n\"If you want to make love, you should tell me to stop now.\" \n\nI responded by nipping at his lip. He groaned, a sound that made me pulse with a raging need, and pulled away.\n\n\"What\u2014\"\n\nBut before I could even ask, he had pulled me to my feet. \n\nI braced myself, expecting him to shove me across the room and onto the bed, but he didn't. Instead, he grabbed my head, pulling me in for another bruising kiss, and used his body to guide me back to the bed. \n\nI stumbled as the backs of my thighs hit the mattress, but he caught me by the waist before I tipped backward. His mouth still demanded mine, his tongue insistent to be allowed admittance to my mouth. I granted it access as he worked the nightgown up over my thighs. Moments later, the sound of threads snapping in the hem reached my ears as he tore it over my head, and I was naked.\n\nHe pulled away from my mouth long enough to look at me. I tried to make sense of the expression on his face. It wasn't appreciation or longing; it wasn't lust or hunger. It was somehow darker than those things, somehow deeper, and when his eyes met mine again, I nearly shivered.\n\n\"Lie down,\" he ordered.\n\nI sat on the bed and scooted back, watching as he undressed and revealed a body of hard, unflinching muscle. There would be no overpowering him, not by me. The moment he joined me on that bed, I would be at his complete mercy, and he had not promised me kindness.\n\nI had never wanted someone more in my life.\n\nHe climbed onto the bed, kneeling beside me.\n\n\"You are not lying down.\"\n\nI brought my hand to his neck and kissed him again. He responded patiently, letting me explore his mouth, allowing me to run my fingers along his shoulders and arms and down his chest. Then he was in control again, parting my thighs and guiding me to my back as he nestled between them.\n\nHe was so hard, and I knew he could feel how wet I was. He slid against me, his cock bumping against my pussy. He must have known how much I wanted him to push it inside me, but instead he pulled back from my lips and buried his face against my breasts.\n\nHe chose to use his power over me to explore, to bite at my nipples and circle his tongue around them. Large hands gripped my waist and my hips, fingers trailing down to my slit and tracing along my folds. He dipped the tip of his finger into my pussy, not enough to quench the gnawing need that drove every nerve in my body wild. I squirmed beneath him, panting, gasping, begging in all but words for more.\n\nHe had promised me patience, and patience is what he had. Every inch of my body was fondled with a firm grip, fingers prodding and stroking along my skin. His cock was hard, sticky fluid dripping from the tip as he probed and nudged, denying himself for whatever asinine reason he had to deny himself pleasure.\n\n\"Please, Yusuf,\" I finally begged. \n\n\"Ahmad.\" \n\n\"What?\"\n\nHe looked up from my breasts. There was a strange vulnerability hiding in his golden eyes.",
        "\"My name is Ahmad.\"\n\nOf course he hadn't told me his real name. He was too smart for that. He studied my face as I processed this new bit of information, rolling the name around in my mind, cautious that he had hidden it from me but thrilled that he had revealed it.\n\n\"Please, Ahmad,\" I finally said.\n\nHe groaned again, that sweet, quiveringly erotic sound that I felt in the pit of my stomach. Then he was over me, his mouth ensnaring mine as he trapped me beneath his body. The tip of his cock breached my pussy, he thrust forward, and I cried out as he finally plunged inside me. \n\nHe moved slowly at first, not in some show of making love but so that he could find a position that didn't hurt his ribs. He found it by grabbing my hips, pulling me closer to him, and resting my legs overtop of his thighs.\n\nThen he was moving hard and fast, shoving himself inside me, buried as deep as he could go each and every time. I moaned, relishing the feeling of fullness, the realness of him, of his body and the way it made every inch of me shiver and quake.\n\nI tried to push a hand between us so I could rub my clit while he fucked me\u2014because he was fucking me, despite his insistence that he \"did not fuck\"\u2014but his hand caught my wrist and shoved my arm to my side. I was about to protest when his fingers found my clit, stroking it as he took his pleasure from my body.\n\nI hadn't expected him to do it, and that made it all the more explosive.\n\nI writhed beneath him, gripping the sheets as he pounded me. The pit of my stomach tightened and clenched, the coals of arousal catching and building up until they were flaming, bursting, and I was coming.\n\nMy back arched and I bit back a shriek, feeling myself tighten around his cock as my body submitted to the intense fire of my orgasm. Ahmad's fingers left my clit and he fell forward, grunting as he lost any sense of rhythm. I tightened my legs around his waist and pulled his face to mine; as I kissed him, he came.\n\nHe didn't roar or moan; aside from a gasping, almost wheezing kind of grunt, he was quiet. The intensity was strung through his muscles, written across his face and in his eyes, and in the way he held his mouth tight against mine as he spilled inside me.\n\nIn the first blissful moments of afterglow, all that mattered was the feel of him against me, the comfort of his body and the tenuous connection to reality that it afforded me. \n\nWhen his eyes opened, hard and dark and cold, I shivered.\n\nWaking up, I felt odd, as if something was missing. It was Ahmad. I thought back to the previous night, how he felt and how he made me feel and lay there, luxuriating in the memories. Now he was gone and I missed his presence. Eventually getting up, I made my way to the kitchen after washing. The woman we rented the home from smiled and gestured to the table as she bustled around the corner. I sat down and wondered if he was still in prayer. \n\nAhmad walked in soon after, stopping abruptly when he saw me. Continuing in, he sat at the table. The woman was speaking rapidly and my erstwhile husband seemed to concentrate, trying to understand what she said. She carried over a large yellow and orange platter that had something resembling an egg, potato, and tomato frittata. Within moments, the table was covered in heaping mounds of other food. \n\nI took a mango from the bowl of fruit and Ahmad quickly reached out, gently took my hand and plucked the mango from my grasp. He still hadn't said a word to me from the time he didn't fuck me until now. Taking his knife, he quickly and expertly peeled the fruit and then cut it into quarters, placed it on a small plate and put it in front of me. Sitting there looking at it, I wondered how weird it would be if I just kept it and didn't eat the mango. His gesture was... kind. \n\n\u2014\n\nThe Hitman\n\n\u2014\n\nThere were people I knew in Kabul. I could speak to them about what to expect at the Pakistan border. I wasn't delaying. I wasn't trying to spend more time with Ellie. I was just being a professional. We would spend an afternoon there while I made some inquiries and re-established contacts. Maybe overnight, but certainly no more than that. There were a few places that I could show her, but that was incidental. I was going to complete the job, get the rest of my pay and figure out what to do about my son. And divorce Ellie. Why had I forgotten that? We needed to divorce.\n\nAs promised, we had plenty of food to take with us in addition to our refilled water bottles. Although I was restricting my movement due to my ribs, I still felt uncomfortable due to inactivity. My muscles ached to be used, and not just in the way that they were last night. I usually run at least 50 kilometers a week, but I couldn't exactly get up, tell someone that I was protecting that I'd be back in a while and run from them. Rigorous stretching helped, but I was hoping to find a gym I could use in Kabul. Isometrics was fine for would-be yogis, but I needed more. \n\nAfter tipping our hosts, we got in the vehicle and continued on our sojourn. Following A77, we drove along the two-lane highway, often a foot away from trucks heading in the opposite direction. I loathe western preconceptions of this part of the world, but as friendly as the people can be, there is no denying that the landscape was barren and monotonous. \n\nHours slipped by and, as she had on previous days, Ellie fiddled with the radio. I indulged her endless moving from one station to the next as I concentrated on the road. When she finally stopped and leaned back, I pulled out some of the remaining dried fruit and handed her some before indulging. When she finished, Ellie slowly, tentatively placed her hand on top of mine. I let it rest there. \n\nWe stopped around 10:00 pm and not knowing of any towns ahead, I again pulled over and put the car behind some large rocks. We took out the bedrolls, made a small camp and I prayed Isha'a prayer and asked forgiveness for skipping Maghrib prayer. After getting in what exercise that I could, I lay down within 10 feet of Ellie. It was a warm night and there was no need for a fire, but I kept one going to stave off any curious or hungry wildlife. \n\nI woke to hear Ellie moving towards me. She knelt down at my side and tugged at my bedroll. \n\n\"Stop pretending you're asleep. I think I heard a wolf or coyote or something. Let me in.\"\n\n\"You heard no animal.\"\n\n\"Don't argue with me, husband.\"\n\nThere was amusement in her voice and I found myself powerless to resist her. She joined me and I explored a new way to work on my cardio. \n\nIt was early afternoon when Kabul came into view. We veered north and instead traveled fifteen minutes to Lake Qargha on the Paghman River. A huge reservoir, it was a point of national pride for Afghanis and had a hotel on its shore, fish hatcheries, sport fishing, and water sports. Ellie's eyes grew wide and I had to stop myself from smiling at her surprise of this luxury amidst our spartan travels. \n\nWe got a room and Ellie spent almost 90 minutes in the shower. They had laundry facilities and we utilized the services. While she was in the shower I had called some colleagues and arranged to meet them at one of the two hotel restaurants for dinner. Not wanting her out of my sight, I took Ellie with me to the hotel gym. She lackadaisically worked out as I used the treadmill. Some men weren't happy with her presence, but I wasn't happy with theirs, so we were even. \n\nEllie was with me at the restaurant. I was known to be an elite in my field. That's not a point of pride, it's simply a fact. If they had a problem with her being there, they kept their concerns to themselves. There was as much bonhomie as was possible for people in our fields. Ellie and I broke bread with thieves, forgers, smugglers, fixers, and enforcers. Michel Ralinbow was someone that specialized in putting people together. He was a freelance go-between and if you needed to find someone in one of our specialties, he would put you in touch. I gave him the names and locations of the people who rented their homes to us during our travels and he took meticulous notes. \n\nThey'd be well-treated and considered a resource. \n\n\u2014\n\nShe woke up again in my arms, this time in a large, comfortable bed. She lifted the hand that was cupping her breast and kissed the knuckles. \"Morning.\"\n\n\"Good morning, Ellie. We need to leave in an hour.\"\n\n\"Mmmm... no. Too comfortable. Two hours?\"\n\nI didn't bother trying to hide my grin. \"All right. Two hours.\"\n\nCalling down for room service, I took a quick shower. The smell of coffee got her from the bed. I stared at her naked body as she pulled a sheet around herself and made her way to the small table. She picked and nibbled and then got up to take a shower. I watched as she walked away. Halfway there, she dropped the sheet, took two more steps and looked at me over her shoulder, smile in place. Taking a second shower that morning seemed reasonable. I got up and joined her. \n\nShe was surprised when I told her we didn't need the luggage. The shuttle bus took us to the dock and we spent hours fishing for rainbow trout. It was a new experience for me, so I enjoyed it through her eyes. There was no real sport involved, it was almost as if the fish were launching themselves onto our lines. She laughed and I could see the worry-lines disappear from eyes as she relaxed. \n\nWhen we returned to the hotel, Ellie stepped into the gift shop and returned with old copies of the Sunday versions of the Los Angeles Times and the Los Angeles Daily News. She pored over both papers that afternoon, reading every article. \n\n\"Is that where they are?\"\n\nShe looked up at me. \"Hmmm?\"\n\n\"Your children. They are in Los Angeles?\"\n\nEllie seemed to withdraw and pushed the paper away. \"I never said I had kids.\"\n\n\"Not with words, no. Sometimes you have the same look that I have when I think of Jibril, my son. You are an American far from home, engaged in dangerous work that you don't seem to enjoy. You're doing it for someone else. Who better than a child?\"\n\nShe paused. \"How old is Jibril?\"\n\n\"Eleven.\"\n\n\"Do you have any pics?\"\n\n\"No, it's too dangerous.\"\n\nShe smiled sadly. \"I bet he's a handsome boy like his father. The girls are going to love him.\"\n\n\"And they're not my kids,\" she added, \"they're my sisters and brother. Yeah, they're in LA. My parents, well, I'm sort of all the kids have.\"\n\n\"You wish to return to them?\"\n\n\"It's... Yeah, this is my last job.\"\n\nI nodded. \"That's for the best, Ellie.\"\n\nWe spent the night again, slept in late and headed for Islamabad. \n\n\u2014\n\nThe Drug Mule\n\n\u2014\n\nAhmad kept pushing me to hurry up in the morning that we were going to leave. I felt oddly conflicted. The sooner that this was over the sooner I could get back to the kids and be clear of Sergio. On the other hand, the sooner we were done, the sooner there would be no link between Ahmad and I. He came out of the shower, towel wrapped around his waist, and sat next to me on the bed. \n\nTears weren't threatening, but I wouldn't have been surprised if they were. I stared at the TV, ignoring the breakfast he'd had delivered. Ahmad watched for a while and I heard the confusion in his voice when he spoke.\n\n\"What on Earth is this?\"\n\n\"Ren and Stimpy. Sophie loves them. She can watch them all day long, every day.\"\n\n\"They are... very bizarre.\" He ran his hand through my hair. \"I understand. You will be back with them soon. You can have your California sushi and watch odd cartoon animals with the children and forget all of this. Go take your shower.\"\n\nI was conflicted and angry and sullen. Most of all, I missed the kids. \"Can you maybe go one day without barking orders at me? I'll take a shower when I'm ready.\"\n\n\"I'm not your enemy, Ellie.\"\n\nHe moved to the side of the bed, put his feet by the pillows and his palms on the floor and began doing push-ups. He'd do twenty fast and then ten extremely slowly. At the next commercial, I got up and took a shower. I had no idea when I'd next have the opportunity, so I stayed under the hot water for as long as I could. \n\nI bought some maps at the gift shops as well as some Sprite and Reese's Peanut Butter Cups. They were insanely expensive and considered an American luxury, but Sergio was paying, so, yeah, I indulged. It was about a six-hour drive from Kabul to Islamabad if things went smoothly at the border. We were mostly silent and I was irrationally letting Ahmad take the brunt of my frustration and anger. He said that he didn't fuck, but whatever the hell he did do, we did it every day since that first night. Like a piece of stone, that was it. He didn't talk about it, it didn't seem to mean anything to him and he'd likely be happy to be rid of me. \n\nI'd say that wasn't unexpected, but I didn't really know what I expected. I'd almost forced myself on him, so how angry could I be?\n\nAs we approached the border there were a number of brightly-colored paisley tour busses. They looked oddly out of place, as if they'd escaped the 60's and were migrating to Islamabad for a Grateful Dead concert. We had to begin queueing up to get checked at the border and it was more boring than anything else. \n\nAhmad cleared his throat. \"My... I'm not sure where my parents were from. I grew up in Old Lahore and there were rumors that my family was from Kabul. It... I try to stop there whenever I can. Thank you for...\" He paused. \"Thank you.\"\n\nDon't be sensitive now, Ahmad. We're almost done. Don't reveal parts of yourself, don't be vulnerable, don't be thankful. I already can't take this.\n\nI kept looking out my window at the families traveling and the trucks hauling goods. \"Yeah. It was nice.\"\n\nWe were three cars from the front of our queue, one of 12 that ran the span of this side of the border. Another six or so were on the other side, leading into Afghanistan. There was always a part of me that was watching and evaluating. I couldn't help it, it was a part of me. I'd outlasted every other one of Sergio's girls because I could see patterns where others didn't. A grouping of people would look off and I'd just walk in the opposite direction. I'd catch a reflection of some teenager walking in the same direction I was who wouldn't be watching my ass and something would click in the back of my head. I'd take the next exit out of the airport and wait to reenter. \n\nI survived. I trusted my instincts. It's why I was so valued. \n\n\"They're going to be coming this way.\"\n\nI'd grabbed Ahmad's arm and he began looking around. \"Who?\"\n\n\"Border guards. That guy with the clipboard. He's been looking over here and talking into that radio. Three more are headed towards him.\"\n\n\"No. Stay calm. It's just the pressure you've been under. It will be over soon.\"\n\n\"Thanks for being dismissive, jackass. You have any idea how long I've been doing this? That guy with the dog is joining them.\"\n\nThey began walking our way and Ahmad cursed. He tried not to be obvious as he reached under his seat and pulled out a gun. \"Keep quiet unless they ask you a direct question. Let me do the speaking. Your hair's poking out. Tuck it in.\"\n\nAnnoyed, I did so. Ahmad was good at what he did. Very good, actually. I wouldn't argue that. The problem was that so was I. Biting my tongue, I waited. \n\n\"There's a Walther under the dried fruit. Small, but it'll work. If necessary, run to the line of pedestrians while I distract them.\"\n\nDistract them? Was that a euphemism for a bullet in the throat? What exactly would he do? Would Ahmad sacrifice himself so I'd have a chance to escape? \n\nThey approached our car and I put my hand over the seat divider where our snacks were. Three men were on Ahmad's side and two were on mine. The dog was leashed and right next to my door. The men walked up and then... kept walking. They began speaking loudly and calling to the driver of the car behind us. My heart slowed as they forced him from his vehicle.\n\nThe car in front of us pulled forward and Ahmad followed suit. He put his hand on mine, over the fruit and over the Walther. \n\n\"You were right.\"\n\nDamned straight, I was right.\n\n\"Yeah, I just happened to catch it. Not a big deal.\"\n\nI didn't know why I was selling myself short. \n\n\u2014\n\nOnce we passed the border, it didn't take us too long to get to Islamabad. It was the most organized city I'd ever been to. Everything looked orderly. It was hard to describe, but it just felt artificial, like it had been planned out by an anal-retentive architect instead of growing naturally over time as a city should. It felt... sterile. I'd been here before often and was always disturbed by how unnatural it was. I liked messy. I liked small winding streets where I could lose someone following me. I liked finding customs and secrets that were decades or centuries in the making.\n\nI had to admit that it made driving and traveling easy. It was as if the city were laid out on a grid, like a huge game of Battleship. J6. You sunk my chance at a future with a man I was falling for!\n\nAhmad found us a hotel and I tried to convince him to let me meet him back there in a few hours. I had two apartments in the city that I paid a share of the rent. Each had cash, clothes and ID's hidden in the walls. He absolutely refused. I needed that money for me and the kids and the ID's wouldn't hurt. He'd killed for me and he'd been in me and yet I was still wary. \n\nHe didn't want me out of his sight and I didn't want to leave anything behind. We compromised and he went with me. My reluctance was silly. I had no plans to come back, so it didn't matter if he knew where I hid out. Everything in Islamabad was spread out, similar to LA, so we had to take the car. My first shared apartment was near the university, so we stopped at the open-air market and had supper at Majeed Huts. Placing our order at the folding table in front of the two men doing the cooking, we stood and waited. They worked on stoves built into the marble that was behind the tables and seemed to be a well-oiled machine. \n\nWe got a stew and two types of curry, each having both chicken and lamb. Sitting down on long benches under the tarps and trees, we ate amongst the students and other visitors. The food was delicious, spicy and filling. My apartment was a short walk away and I hoped that my two roommates were out. They weren't. I received a barrage of questions and two brief hugs as I made up answers to their questions about my studying abroad. \n\nWe were in and out in a few minutes. It felt odd and yet somehow right. I could pretend for a few minutes that I was a college student bringing a boy back to my place. I saw them checking Ahmad out and smiled. He was oblivious, as men usually are. \n\nMy other place was near the Shakarparian Hills. It was more rustic than the student apartment, but I didn't choose my locations for convenience or appearance. I wanted security. I felt like we were tourists and enjoyed our driving around, but it was tinged with the reality that the clock was ticking. My time with Ahmad was near its end.\n\nReturning to the hotel, I was reluctant to lay with Ahmad. We needed to pick up the package the next day in Murree and deliver it to Old Lahore and then we would be done. Murree was an hour and a half away and Lahore was about seven hours from there. We could be done by dinner time. Our end put me in a melancholy mood and he seemed to sense that. \n\nI read while he prayed, having bought a Clive Cussler novel in the hotel gift shop. \n\nWhen we went to bed, he gently kissed my forehead and rolled over. I lay there trying to gather my thoughts but fell asleep quickly. I awoke to find myself almost clutching him, heart pounding and a desperation in my soul. \n\nMaybe it was the way I clutched him, or maybe it was that his soul sensed the need in mine. Most likely, it was simply that Ahmad was aware of every little detail, even in sleep. I didn't know if he was capable of resting, truly resting, without some part of him awake and aware and ready.",
        "\"What is it?\" he asked.\n\nI shook my head. Ahmad shifted, shrugging my arms off him easily as he turned his body toward me. A strong hand came to my chin, tilting my face up. Golden eyes searched mine, perceptive even in the darkness of the room, finding the words I couldn't say written there.\n\nHe spoke without words as well. Without so much as a whisper, his lips pressed to mine.\n\n\"Don't,\" I whispered. He pulled back immediately, eyes cold in a way I hadn't seen before. Not disappointed or concerned, not guarded or regretful, but... something else. Something almost like fear.\n\n\"I will sleep on the floor.\"\n\nI stopped him before he could move off the bed.\n\n\"No, don't.\" \n\n\"What is it you don't want, then?\" His tone was neither kind nor unkind. \n\n\"Don't pretend like you care.\"\n\nHe stared at me, still as stone and about as expressive. \n\n\"It doesn't matter,\" I choked. \"I'm just a job anyway.\"\n\n\"You're wrong.\" \n\nI didn't want to be wrong. I didn't want to be right, either. \n\nNone of that mattered as he pulled my face to his again. He kissed me, really kissed me; softly, sweetly, as hungrily as each kiss had been up to that point and as intense as any kiss could ever be. \n\nSlowly, he worked my fears away. His hands slid up my body, his mouth kissed along my jaw and down my neck. He lay beside me, not over me, and aside from a brief moment where he pulled my body tight against his, his arms didn't surround me. He handled me delicately, trailed his fingers along my skin and up to my breasts. \n\nHis head shifted off the pillow as he dipped it to kiss my breasts. Any lingering worries disappeared as he took my nipple into his mouth, his tongue flicking against the hardening nub. At first hesitant, and then with more confidence, I brought my hand to the back of his head and embraced him as he kissed and licked and sucked. \n\nAhmad didn't tense as I touched the back of his neck; he didn't pull back as I softly explored his shoulders and back. He nuzzled against me, almost innocently, his mouth only leaving my nipple to switch to the other one.\n\nSomething more than desire was coursing through me. I didn't know what to name it, didn't want to name it, and refused to acknowledge it. Instead, I focused on the wetness between my legs, the absolute and complete need for him. It took everything in me to push on his shoulder, separating his mouth from my breasts. When he looked up at me, I kissed him.\n\nA strong hand gripped my side, but I resisted as it tried to direct me to my back. Instead, I pushed again on Ahmad's shoulder. I expected him to try again, but he relinquished control and let me guide him onto his back.\n\nThat thing that was something more than desire pulsed and I pushed it back again.\n\n\"Slide up a bit,\" I whispered. He obeyed immediately, leaning against the pillow as he sat up.\n\nHe touched me only to help steady me as I straddled his lap, then lightly rested his hands against my hips as I brought myself down on his cock. I hissed in relief as he entered me.\n\nAhmad kissed me again, his breath hot against my mouth, and I started moving on top of him. He made a soft noise, deep in his throat, and his fingers tightened on my hips just slightly. He wanted to grab me; I could sense it, feel it, knew he wanted to thrust up into me and take every bit of me the way he had again and again. He didn't, though. He fought against it, giving me the control he always maintained. \n\nI tried not to think about what that meant and instead rolled my hips, feeling every inch of him inside me.\n\nHis mouth found its way back to my breasts, one hand leaving my hip so he could cup it and bring my nipple back to his mouth. He remained there as I rode him, remained there as I drew myself closer and closer to orgasm, remained there as I cried out and dug my nails into his back and threw my head back as I came. He moved only when I slumped against him, panting, and finally took back the control he'd given to me.\n\nHe grabbed my ass, hands firm, and pushed up inside me as he brought me down against him. I gripped him tight as he grunted, unable to do anything but to hold on, to let him use me, to let him need me.\n\nHe didn't come quietly that time. He wasn't loud, but he did groan as he finished, stilling after pumping inside me those last few hard, erratic times.\n\nWe sat that way for some time, no words spoken until he looked up at me and brushed my hair off my forehead.\n\n\"I'm not pretending that I care.\"\n\nIt was all he said, and there was nothing I could say back. He didn't ask me to, but when I fell asleep, it was with his arms around me protectively. \n\nWe woke and spoke few words to each other. His eyes were more expressive than I'd ever seen them and I saw regret and sorrow in his gaze. Our relatively silent breakfast was followed by getting into the car and heading to the Murree Road. It had two lanes, the left for driving up the mountain and the right for driving down. Unfortunately, people weren't that diligent and often used both lanes for driving down. I'd notice Ahmad's jaw clench and rest my hand on his arm as he'd slow, move to the side and wait. \n\nIt was lush and verdant, a nice change from the endless yellow and orange sand and rock of Iran and Afghanistan. Another change, another signal that things were ending. To our left, the valleys and slopes of the mountain held trees and bushes as well as some occasional buildings and businesses on the side of the road. To our right was rock and trees climbing ever higher.\n\nThere were restaurants, schools and small communities that we passed as we continued our way up. The greenery was a nice change from the earlier monotony, but not doing much for my mood. Ahead of us lay a fog and Ahmad pulled over to the side of the road. We were near the top of the mountain and had to wait until the cloud passed before we could continue. It was surreal and beautiful. We sat there, together, cocooned in this white mist. I reached over and took his hand and felt the resentment and anger drain from my soul. He'd given me more than I'd expected, we'd had our time and while it wasn't enough, it was something that I could remember and treasure. \n\nHis voice was soft. \"Who are we meeting and where?\"\n\n\"Sister Maria Ignatius at the Holy Trinity Church.\"\n\n\"All right. She's expecting you?\"\n\n\"In general, yeah. Not a specific day or time. Supposedly everyone knows her and they can get her if she's not there.\"\n\n\"Okay.\"\n\nWhen the cloud lifted, we continued. It was bizarre and I had no idea how people in the area could get used to the fact that every once in a while they lived amongst the clouds. Onward we went. We'd seen people as we drove, hanging out in front of a building, walking up the mountain or just gazing off at the scenic views. When we grew close to the top, the population was denser. Markets sprung up, people were hawking their wares and the smells of open-air cooking wafted in through the windows. \n\nThe vista was breathtaking and once we parked, our walking was slow and deliberate as we made our way to the church. We both seemed to be savoring every last moment together. It was a large, stately brick building with long stained glass windows, a wooded courtyard and a three-story tower attached to the entrance. A man was raking the front yard when we arrived and seemed to be verbally impaired. When we asked about Sister Ignatius, he smiled warmly and gestured towards the building.\n\nThe door was unlocked and another man was inside waxing the floors while a woman was arraying votive candles. I approached the woman, not wanting to risk my footing on the floors. \n\n\"Excuse me, are you Sister Ignatius?\"\n\nI was surprised by her English accent. \n\n\"Oh, no dear. I'm Sister Margaret. Sister Ignatius is in the basement setting up the books for the children. Anything I can help you with?\"\n\n\"Uhm, no. Actually, maybe, yes.\" I looked over at Ahmad, who was waiting near the entrance. I spoke softly. \"I'm, ah, not really active. As a Christian, I mean. I think I was Baptized and my parents were Christians, but, it's not really been a part of my life.\" I looked back over my shoulder. \"If, let's say... I don't know the right way to ask this. How does a divorce work in the Church? How do you get one?\"\n\n\"Well, there are exceptions, but in general, there are no divorces in the Catholic Church. When you're joined as man and woman in front of God, it's forever.\"\n\nI didn't realize what I was doing until my arms were around her, but I stepped forward and hugged the frail woman. \n\n\"Thank you. That's... Yeah, I needed to know. Thank you.\"\n\n\"Well, you're certainly welcome. Do you still need to speak to Sister Ignatius?\"\n\n\"Yes, please.\"\n\nShe went to get her colleague and I wasn't sure what I should do. Do you tip nuns? Sister Ignatius gave me a leather satchel that seemed to hold a box or stiff valise inside. She refused money, so I put some cash in the poor-box on the way out. We were done with Murree, but I felt lighter somehow and more optimistic.\n\nIt was time to head to Old Lahore and put this all behind us.\n\n\u2014\n\nThe Hitman\n\n\u2014\n\nWe didn't speak more frequently and nothing outwardly changed, but it seemed that Ellie was more at peace as we left Murree. There was a long drive ahead of us, so I was determined to take a relaxed approach and find a hotel close to the city. We could deliver her package in the morning. I pulled the car over when we were about halfway down and walked over to a streetside merchant who was selling gulab jamun, the dessert balls so common in the area. When I purchased two bags, Ellie reached over to take one. I lifted it up out of her reach.\n\n\"No, that one isn't for us.\" I waved the one in my left hand. \"This one is.\"\n\n\"So, who's that one for, then?\"\n\nI pointed with my chin. \"Them.\"\n\nShe looked across the street and saw the gathering monkeys. Letting out a squeal, she checked for traffic and then ran across the street. Ellie looked young and joyful and it made me smile. Admiring the view as I sat on a large rock, I tossed her the paper bag. She'd pull out the treats slowly, one by one, and toss them to the capering monkeys. They'd chatter, scamper around the recipient and wait for the next gift. \n\nShe made me take some photos with the camera she bought at the hotel. I was adamant that it was a stupid risk but I couldn't articulate how or why. It couldn't be tracked electronically, but I never felt safe having my image out there.We got a good image of her with the monkeys behind her overlooking a mist-filled valley. We stopped once more on the way down and purchased some naarial paani coconut candy and milk from a guy on the side of the road. \n\nAfter paying the exit toll for the old road, we merged onto the expressway and drove into the afternoon, mountain and unguarded times behind us. \n\nThe contrast between our two destinations was stark. Murree was like stepping back in time to a less hectic era, one filled with gentility and beauty. Lahore was one of the world's largest cities and there was always something happening. I could sense Ellie growing more alert and tense as we drove into the city. It was around 8 PM and it seemed as though half the city was either driving or was walking on the sidewalks. Patrons were spilling out of restaurants, drivers were yelling at each other to either stop or hurry up and we seemed to never get any closer to the hotel I wanted us to stay at. \n\n\"This is ridiculous. I'm going to drive by the building where you have to make the drop. I can't stand this traffic and need to get out of here.\"\n\nI got us out of downtown as quickly as possible and the way to Old Lahore wasn't quite as frantic and packed. \n\n\"I have a vest for you in the trunk for tomorrow. What are you supposed to get from them for the package?\"\n\nShe looked at me. \"Uhm, nothing. That happens about half the time. It could be payment for something they've done or are going to do or maybe they've wired money already. Why the vest?\"\n\n\"Because I'm good. And being good means that I'm expensive. They don't pay enough money for someone like me for no reason. There has to be an expectation that there will be troubles. I have no idea what that trouble will look like, so I want to be prepared. I didn't think anything would happen in a tranquil church in a small town, but here? I wouldn't be surprised by anything.\"\n\n\"Okay, that makes sense.\"\n\nWe were quiet for a while before she spoke again. \"Ahmad, are you all right?\"\n\nI sighed. \"Yes. I spent most of my time as a child here. One of the poorer sections of Old Lahore. It was a religious school that took in orphans and was sponsored by the man who would eventually be my father-in-law.\"\n\nShe looked furtively at my ring finger. \"Are you...\"\n\nI shook my head. \"No. My wife is no longer with us.\"\n\n\"I'm sorry.\"\n\n\"As am I, Ellie. As am I.\"\n\nIt was still light out when we drove past the destination. It appeared to be a medical facility. I circled the building three times, noting points of exit, the shape of the building, neighboring shops and everything else I could observe.\n\nShe put her hand on my forearm. \"They look open. Should we see if we can get this done now? We could still stay the night in the hotel.\"\n\nI pulled into their parking lot, parked and turned to her. \"I wanted to take you to the Shalimar Gardens, but we can do that in the morning. You ready?\"\n\n\"As ready as I'm going to be.\"\n\nI was going to help her with the vest, but she seemed as conversant with it as I was. The electronic gates that opened to allow us into the parking lot had closed again, so we used a side entrance instead of the front. I approached a man who looked to be security. \n\n\"We'd like to speak to Dr. Shahid.\"\n\nHe looked us over before replying. \"And you are?\"\n\nI used the identity she was given. \"She's Amanda Pearson. Who I am is of no concern to you.\"\n\nAfter appraising me for a minute, he responded. \"Let me make a call.\"\n\nWe were soon escorted to an enclosed but open-air area in the rear of the building. Medical transport vehicles surrounded us, and we waited on the arrival of the man in charge. While we stood there a few other men filed out, joined by one woman dressed in surgical scrubs. She opened the back of one of the vehicles and a man helped her remove a rolling stretcher. \n\nEventually, the man we were waiting for strode through the door. He had an air of command and the others seemed to subconsciously shirk from him, almost looking down in deference. He walked over to Ellie. \n\n\"You have something for me?\"\n\nI put my hand on his shoulder. \"Do you have some form of ID?\"\n\nWatching the other men when I did so, I was able to quickly identify who was security and who wasn't, therefore determining the largest threats. He raised his hand and they backed up to where they were standing when I first put my hand on him. \n\nOffering a condescending smile, he nodded to Ellie as if complimenting her on my diligence. As if I wasn't the man he should be talking to. It shouldn't have bothered me, but it did. I was changing and I wasn't sure if that was a positive or a negative.\n\n\"Of course.\"\n\nPulling out his wallet, he moved it towards me and then passed me, handing it to Ellie. Just to anger me and show his disdain. It was a strategic blunder. She opened it, looked at the ID, nodded and went to hand it back. I reached over, took it from her hand, looked at the ID and held it out to him. \n\n\"Here you are, Doctor.\"\n\nWhen he reached for it, I didn't let go for a few seconds, smiling politely the whole time. \n\nEllie spoke up. \"I believe this concludes this part of the business you have with my employer?\"\n\nShe handed him the satchel. He opened it and then the second leather folder inside. It was a sheaf of paperwork. Taking the envelope that was on top, he opened it and read the contents. His eyebrows rose as he made his way down the sheet. When he was done, he wordlessly handed it to me. \n\n<center>Hand this to Ahmad as soon as you open it.\n\nAhmad, my beloved son, you have done well and I'm sure that Jibril is as proud of your efforts as I am. Know that he is well and will remain so. Our partner in the west coast of America needs this to happen. Kill the woman while maintaining the integrity of as many of her organs as possible. There should be cameras mounted in the area you are meeting the harvesters. Demand a copy of the video. Leave the corpse with them. Come back to us for a well-deserved rest and further instructions. \n\nYour proud father, \n\nNaeem Badrashi</center>\n\nThe man who handed me the letter stood watching me, an amused smile on his face. He pushed his glasses up on his nose and rested his hand on his bearded chin, rubbing his lower lip with his index finger.\n\nI smiled, pulled out my gun and shot him in the head.\n\nTurning, I picked up Ellie, ran and then dove behind a vehicle.\n\nShe yelled. \"What the fuck was that?!\"\n\n\"You were a gift to organ harvesters.\"\n\n\"I... No, I... Fucking Sergio.\"\n\nI scrambled up to the top of the vehicle and stayed on my belly. The woman in scrubs made a quick appraisal of her boss and ran back to the door. I wasn't sure if she was fleeing or going for help, so I shot her in the leg. Two of the men were running towards the vehicle Ellie was behind. I focused on one and was about to fire when the other fell to the ground after I heard gunfire from our side of the van. \n\n\"Gonna scoop up my organs? Come and get me, motherfuckers!\"\n\nShe was yelling and had dropped the man from under the vehicle. Did she pocket the Walther? Who was this woman?\n\nI shot the other security guy in the head, not sure if he was wearing a vest. More were pouring out of the door. When I shot one, they slowed down and then I was winged in the arm by someone on the roof of the building. We were outmanned and outgunned by people who knew the environment. \n\n\"Ellie, get in the vehicle! Check for keys!\"\n\nI fired twice at the man on the roof and then replaced my clip. I heard the medical van start up and shot at the door three more times, slid down and got in the passenger seat. She backed up and then gassed it towards the exit. We burst through the gate, got hit by a car on the street and kept going. Our damage was minimal. \n\nThis was the worst-case scenario. The letter was a veiled threat against my son. \n\n\u2014\n\nThe Drug Mule\n\n\u2014\n\nThis was the closest I'd come to seeing Ahmad panic. He was giving me directions, telling me where to turn and when. \n\n\"They... They have Jibril. In a madrassa somewhere. He's going to... When they find out, they're going to take my son and... Ellie, I don't know what I'm going to do. I have to go back to his home. I have to end this.\" \n\n\"The first thing you need to do is calm down. Which madrassa?\"\n\n\"I don't know. Don't you think that would be the first question I had?\"\n\n\"Okay, listen, you can't be flipping out here. They'd have to trust the person that runs the madrassa or have something over him, right? Can you think of any place that fits that bill?\"\n\n\"They wouldn't... My school. Where I was chosen. He funds it. He wouldn't use the same school, would he?\"\n\n\"Why not? It worked once. Where is it?\"\n\n\"I told you, I grew up here. It's in Old Lahore.\"\n\nReaching over, I took his hand while I drove with the other. \"Let's go get your son.\"\n\nWe pulled up outside a well-maintained building in a seedy part of Old Lahore. It was almost like a fortress. Ahmad wanted to immediately rush in and get his son. I slowed him down, took him into the rear of the van and bandaged his arm.\n\n\"This shouldn't take me more than half an hour. Hopefully much less. If that was the top man that I killed, it will take them time to figure out what to do and who to contact. If I'm not back out in 40 minutes, leave. Go back to Kabul and get a flight home.\"\n\nI looked at him for a minute, pulled him close and kissed him. \"If I'm not here when you get back with your son, you do the same.\"",
        "\"What? Where are you going?\"\n\n\"We need something a bit less conspicuous. I'll be fine. Get Jibril.\" \n\nThis time he pulled me to him, his lips finding mine and then he was gone, headed towards the front gate. Going through the medical supplies in the van, I found a splint that was inlaid with metal bands, using surgical scissors, I stripped it and pulled out three of the bands. I was able to bend them the way I needed, covered up as best I could and slipped out of the van. \n\nIt took me five minutes to find a suitable looking car. As I slipped the impromptu jimmy between the window and the door, someone grabbed my breast from behind and pushed his cock into my ass.\n\n\"Hello, my pretty thief. You spend some time with me in the alley, yes?\"\n\nNo. Turning, I shot him in the foot. \n\n\"Make a sound. Make one damned sound and I'm going to put a bullet in your eye.\"\n\nWhimpering and putting his hand over his mouth, he limped away in a hurry. I got the door open, cracked the steering column, used the scissors on the wires and started the car. When I got back to the madrassa, Ahmad was standing by the van with a terrified-looking boy. \n\nI had my money and ID strapped to my body under my clothes and we were headed back to the border with Afghanistan and then to the airport at Kabul. My heart wouldn't stop racing and I had to eventually stop and have Ahmad drive. A woman driving attracted attention and that's not what we needed. \n\nTaking a few deep breaths, I turned to the young man and smiled. \"Hello, Jibril, my name is Ellie. Have you ever been to Los Angeles?\"\n\n\u2014\n\nEpilogue\n\n-\n\nThe Hitman\n\n\u2014\n\nIt was odd to me that so many people hated the quiet so much that they felt compelled to fill it with noise. They'd talk just to hear a voice, turn on a radio to not feel so alone or tunelessly whistle to fill some void inside of themselves. I accepted this reality but it was bizarre to me. Solitude and silence were old friends of mine. Not making a sound was a habit that was beaten into me as a youth. There were countless times that stillness kept me alive when movement would have resulted in my death. \n\nEllie had a ramshackle shed in her backyard. I was surprised that it hadn't yet collapsed. I sat in the darkness, my back to its rusted wall and waited. Time ticked by and a part of my mind remained alert while I thought of my son. Children are resistant. He was a shy but intelligent boy. It took him a few hours to finally begin to open up to Ellie's brother and sisters but within a day they were as thick as thieves. \n\nThe man was loud, clumsy and carried a stink of cannabis and body odor. There should be no emotion. Anger and hatred played no role in my performance. Distancing yourself from your actions was one of the first things I was taught. And yet, it was there. Derision. This was who they sent? It was an insult, both to us and to him. He clearly had no professional pride. \n\nI slowly stood and waited while he peeked in the window and then entered through the back door. As he gracelessly entered, I walked to the house while attaching the Obsidian 9 suppressor to my Glock. Stumbling, he bumped into a table and cursed softly. I waited until he turned left and walked into the hallway before following him. He opened the first door, raised his 38 and fired at the bundle of clothes I'd arranged under the blanket on the bed. \n\nStepping up behind him, I put a bullet in the back of his head. \n\nPatting him down, I took his pager and wallet and went back out the door we'd entered. I hopped the fence behind the shed, hugged the shadows in the neighbor's backyard and made my way to the next street over. I assumed that his ride wouldn't be waiting on the same street as Ellie's house. It turned out that they were two blocks away in a tricked-out Lincoln. Why on Earth would you take a tricked-out car to a hit? \n\nI was surprised that there were people awake at two in the morning, but there they were; people moving in their homes, one sitting on his porch and a few teens at the other end of the block. The men in the car were just as professional as their colleague. They were passing a blunt back and forth and listening to some annoying music with the windows rolled down. \n\nWalking at an angle to the passenger side front door, I shot the passenger in the temple and then put three center mass into the driver. I wanted to send a message. The man on the porch slowly got to his feet and was inching towards his door, like a rabbit who hopes that his lack of sudden movement will hide him from a hunter. \n\nI quickly jogged over to him. \n\n\"Hey, man, I ain't seen nothin'. Not a damned thing. I don't talk to the cops. No one around here does.\"\n\nMy grins usually aren't reassuring to people, so I just spoke quickly. \"I'm not here to hurt you. There will be people here later. Not the cops. They'll be asking questions. When they talk to you, tell them you have a message for the person in charge. See if you can get some money from them. They won't kill an informant, it's bad for business.\"\n\n\"Yeah? I'll take your word for it.\"\n\n\"You should. I've known Sergios all my life. They are all the same, regardless of color, country or religion. When you speak to them, whoever says that they are in charge, tell him that they should have never come for her. If they end it here, so will I. If they don't, I will come back and kill every last one of them. Tell him that I said that the men they have working for them are amateurs. I am not.\"\n\nI pulled a wad of cash from my pocket and handed him five fifty-dollar bills. \"Don't make me come back here. Tell them exactly what I said.\"\n\nThey wouldn't drop it. Her being alive was an act of rebellion and it had to be squashed. Sergio couldn't allow people to believe that he could be defied. It was too expensive. This was my first attempt to make it even more expensive for them to continue. It was a chess game and I had taken three pawns when he tried to take my queen. He now had to decide if he was willing to risk a knight, bishop or a rook or if it would be wiser to resign from the board and pretend that Ellie didn't exist. \n\nWalking the three blocks to my car, I checked the wallet. I pocketed the cash, memorized the information on the driver's license and tossed the rest towards the feet of the young men lingering near my car. Heading back to Hermosa Village, I stopped at an all-night barbershop and had the old man working there remove my beard and mustache and then shave my head. When he was done, I used his bathroom to remove the button-down brown shirt and black pants I was wearing. \n\nWalking up to him in the garish bowling shirt and plaid shorts I had worn under my clothes, I left a hundred dollars next to his jar of disinfectant. \n\n\"It's a shame that you had no customers tonight.\"\n\nHe looked from me to the money. \"Yeah, a damn shame. Slow night.\"\n\nLeaving the car where it was, I walked the five miles to the hotel, got into my room and collapsed on the bed for a few hours of sleep. \n\nMoney wasn't an issue for me. I had been well-paid and led a spartan life. Using Ellie's real name and that of the kids, I purchased six tickets to Lyon, France from LAX. There was a scheduled layover, which worked better than a direct flight. I then used her primary alias and purchased six tickets to Brazil departing from John Wayne Airport in Orange County. Using her secondary alias, I bought six tickets from Ontario Airport just east of Riverside to JFK in New York. If someone was looking for us, I was sending them on a merry chase.\n\nUsing one of my ID's, I purchased a used Jeep Wagoneer. Ellie and the children had been laying low in a hotel outside of Disney. We had the basics packed in the vehicle and we'd stop at one of the outlets that lined the highways of America to pick up clothes and sneakers and whatever else the children needed.\n\nWe took I15 to I70 and continued along in a general northeastern slope all the way to Wisconsin. We had a rough idea to get far from Los Angeles, her past and the men who wanted her dead. I could lay in wait for hour after hour for my mark to pass by without losing my patience, but within hours of driving with four children, I would have ripped the hair from my head if I had any left. Looking back at my son and listening to him trying to convince the siblings that soccer was better than baseball soothed my nerves. \n\nHe kept looking up at me, as if to reassure himself that I was still there. I don't know where he thought I'd be going when we were in a car doing 65, but when I'd see his shy smile, I was happy to let him look as often as he'd like. When we'd stop he would stay close to me, touching me often. His shoulder against my side, his arm touching mine; he'd find incidental ways to establish contact and I despaired for the years I'd left him with people who showed my son no affection. \n\nEllie would take the kids to the pool at each hotel we stopped at and would keep them there until they worked off some energy. She did it when we arrived and before we left and I was grateful. I'd stay in my room and pray and then repeat the process with my son when he returned wet and tired. He would invariably have something for me from the vending machines and would take great pains to show how diligent he was in reciting the protection prayer Ayatul Kursi, as if he could convince me that he was a good son so I wouldn't leave him again. \n\nHitmen don't cry, but fathers do. \n\nIt took us four days of driving and an annoying amount of pit stops for the children's sake, but we finally arrived at a place called Wisconsin Dells. We saw billboards for miles before we got there. The ones advertising bottomless milkshakes at Gertie's Diner had the children clamoring for us to stop. \n\nThere seemed to be two general types of true blondes in the US. The first was the prototypical Californian surf bunny. Fit, tanned and slightly vapid; they were an unfair stereotype that became part of the cultural zeitgeist thanks to movies and Baywatch. The second was the cornfed middle-American blonde. These were the people of Wisconsin Dells. They appeared to be one or two generations from Scandinavia and Ellie and her siblings fit right in.\n\nThe town seemed to exist only for tourism. When we stopped to eat, the kids poured over the brochures. This was a town of attractions that sprung up due to its proximity to the highway and train station back when such things weren't as common. They had an outlet mall, waterparks, a large multiplex and everything else that was shiny and loud and captured your attention. \n\nMy son looked increasingly uncomfortable while we ate. \"Ms. Ellie, may I switch the seats with you?\"\n\n\"You... Sure, honey.\"\n\nThey switched seats and Ellie complimented Jibril on his English. I was convinced that he would be fully acclimated quickly, but I didn't want him to lose his heritage. He was happy. My son was smiling and that was everything to me. Jibril was never the first of the children to laugh or to join in on a joke, but once others did he followed suit. \n\nI looked down at him. \"This seat is better, Jibril?\"\n\n\"Yes, father. Ustad Farooqi says to always keep your back to the wall and the entrance in view.\"\n\nThere was a buzzing in my ears and my heart began pounding. I felt dizzy, as if I'd taken a blow to the ear and was experiencing vertigo. Grabbing his arms, I spun him to me and stared down at his little hands. The voices and ambient sounds of the diner grew to a buzzing around me as my mind raced. \n\nI don't know how much time had passed before I felt Ellie's nails scraping into the skin by my wrist. She was trying to hurt me. I looked up at her. \n\nHer voice was quiet, almost a whisper, but there was steel in her tone. \"You're hurting him.\"\n\nPushing myself from the table, my chair topped backward and I rushed to the bathroom. A man washing his hands saw my face and hurried out. I grabbed the sink and tried to control myself. They were training him. They were training my son. Ayd was creating the next generation of killers and was using Jibril, his master's grandson, my only link to my dead wife Aisha: my son. \n\nI thanked God that all of Jibril's fingertips were in place. If Ayd had done to my son what he'd done to me I would have left the children with Ellie and been on the next plane back to Pakistan. Slowly coming back to myself, I realized that I'd wrenched the sink from its moorings. Moving over one, I splashed water on my face as I fought for control.\n\nStanding there in my tourist clothes, looking at my image in the mirror, I let everything else drain from my mind. Jibril had my eyes, but his mother's shy smile. His nose was his own. I thought of what I had witnessed since we arrived. He always stood between the other children and traffic as we walked near a road. Jibril stood slightly in front of Sophie when we were near strangers, as if putting himself between the little girl and danger. \n\nAyd would have looked at me with disgust as the tears slipped from my eyes. Tears were for the weak. More of his rules. They were turning my little boy into an assassin. Fuck my father-in-law, fuck Ayd and fuck his rules. If I ever ran into either of them again I would gladly kill them. \n\nBrushing the tears away, I used more water to wash away the evidence of my crying, practiced a few smiles and went back to the table. Sitting, I put my arm around Jibril's shoulder and hugged him to me. \n\n\"I'm sorry, father.\"\n\nI almost began crying again, but instead leaned down and kissed his head. \"You have nothing to apologize for. Nothing. Let's eat.\"\n\nJibril was amazed at the size of the portions of food, as he had been since we arrived in the US. They ate their burgers, used way too much ketchup with their fries and were conspicuously loud as they mentioned all of the assets of the waterpark. Ellie looked up at me and winked before looking back down at her own brochure. It was from a realtor and listed apartments and homes to rent or purchase. \n\nAs we walked back to the vehicle, Jibril touched my arm. He spoke in Urdu. \"May we go to this place with the rides?\"\n\n\"English, Jibril.\" I checked my watch and sighed. \"Yes, we can go to the waterpark.\"\n\nWe were on no schedule and had no particular destination in mind. Ellie had told me that he needed more clothes and the outlet was near the park. Wisconsin Dells had homes to rent, Ellie's family would easily blend in and the children needed a break. Another stay at a hotel and then I'd possibly help her rent a place until she could decide what she wanted in her future. \n\nThis was an ending of a sort. I wore clothing that screamed 'tourist' and drove my SUV with a beautiful woman and a passel of kids to a town with a waterpark. It was a pleasant dream. These past four days had been an escape from my reality but that was coming to a close. I was introspective enough to know that my brooding was worse than normal as I drove.\n\nI knew what I was, what I had been crafted to be. I was a dog that was best kept on a leash. My father-in-law knew how deadly this dog could be and kept me tethered tightly. I finally had my son back and had slipped the leash, but I was still a dog; snarling, carrying the stench of death and unfit for civilized company. \n\nEllie was beauty. She was grace. A resourceful woman, she was amazingly dedicated to her siblings and they looked at her as more of a mother than a sister. She had sacrificed her dreams and her future to ensure theirs. If my son could not have the mother he was born to, this was the sort of woman I'd wish to fill that role. \n\nMy future was clear. I would be their dog; guarding them and ensuring they had what they needed. Watching from the outside, I would find my happiness in them living full, rich lives. Ellie could be convinced to raise him. It was her nature. I would continue my position as more of a beloved uncle to my son than a father and I would provide for them, seeing them when I could. \n\nMy heart betrayed me. It wanted more, but I couldn't lie to myself. She deserved better than the dog. The children deserved a good man, a civilized man; someone who would live a life of quiet consistency, offering an example of what a man should be. Ellie would find someone who deserved her and I would once again learn to close off my soul and do what I must to survive. \n\nWhat we'd had during our adventure had been a gift and its memories would sustain me. \n\nMy decision was made and it was for the best. Eyes on the road, I followed the directions she read off from the AAA travel guide. The children's incessant chatter grew louder and more excited when the waterpark came into sight. Ellie put the paper on top of the folded map and placed both in the glove compartment. \n\nWith the children pointing and rolling down their windows, she reached over and slipped her hand into mine.\n\nShe spoke softly so they wouldn't hear. \"I can actually feel it, like a physical thing. You're trying to pull away. It's not going to work. Find a way to wrap your head around it. You're mine. You don't get to walk away. You don't get to make noble sacrifices. There's been too much loss. I need you and you need me. Don't even think about arguing.\"\n\nSlowly shaking my head, I looked from the traffic to the park. It was easy for me to maintain an outward calm, I'd spent most of my life having to mask what I was feeling. Beneath the placid facade, I was panicking. The most dangerous thing imaginable was stirring in me again and it refused to die, to lay dormant and stay buried. \n\nI gently squeezed her hand. My enemy stirred in my soul and his name was hope."
    ],
    "authorname": "norafares",
    "tags": [
        "adventure",
        "afterglow",
        "arranged marriage",
        "fake marriage",
        "highway song story",
        "religion",
        "romance",
        "slow burn",
        "travel",
        "violence"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/afterglow-20"
}