{
    "title": "Boss Nanny Ch. 20",
    "pages": [
        "\"The guy's here to pick up the couch,\" Kase yelled across the apartment as he shifted Aidan from one hip to the other. He wasn't really into the whole packing Matt's apartment thing but he was nailing the keeping Aidan occupied and out of Matt's way. Each had their own value.\n\nHilary rushed to the door and met the guy who'd responded first to the ad. Matt was just going to donate everything but Hilary told him in no uncertain terms that he would do no such thing. She then proceeded to take pictures and post everything on various neighborhood apps. She brought the guy in and showed him the sofa, collected the money, and helped him and his friends navigate it out of the apartment. Once they were gone, she waved the money in the air. \"That makes twelve-hundred. I can't believe you were going to give all this stuff away.\"\n\nLike the sofa that he'd just gotten three-hundo for, Matt had gotten most of his stuff for free, so re-gifting it wouldn't have been a loss, but twelve-hundred was a nice profit.\n\nKase swayed Aidan back and forth. \"I have to take Laura to work. Want me to take him with me?\"\n\nThe apartment still had a long way to go before it was finished. Hilary was the type of person you wanted on your packing team. She had the whole place organized and had organized time slots for people to show up and take the rest of Matt's stuff. Aidan and Kase on the other hand were in the way more than anything.\n\n\"Sure, could you grab a pizza on the way back?\"\n\nHilary gave Aidan sixty dollars and made him promise to get something good. Matt tossed Kase the car keys and watched as Aidan waved the money gleefully as they left.\n\nWhen the door closed, Hilary was strategically tossing empty boxes around the apartment. \"Finally, now we can actually get some work done.\"\n\nThey spent the next ninety minutes going through Matt's bedroom, boxing stuff up, setting other things to the side to sell, and letting strangers in so they could pick stuff up. By the time Kase and Aidan got back with pizza, they were up another five-hundred and most of the apartment was emptied or boxed up.\n\n\"What are you going to do if Seamus doesn't want you to move in?\" Kase asked as they stood at the counter and ate over the pizza boxes. Hilary punched his arm, making the athlete grimace. \"I was just joking. Obviously he wants Matt to move in. Geez.\"\n\nMatt took a bite of pizza and watched his friends with much affection. Kase was still holding his little buddy and Hilary was...well, Hilary was...\n\n\"What?\" she said as she swallowed her food whole. \"I worked hard today.\" Kase and Matt looked at each other and laughed. Hilary wiped pizza from her face and pointed at her friends. \"You know you both owe me. Don't forget I'm moving to Atlanta in August. Be prepared.\n\nAnd they were. They already planned to take time off to help her move. Matt was looking forward to the road trip. A last college hurrah with his friends. They knew Hilary was far more nervous than she let on and they planned to make the transition as smooth as possible.\n\nWhen the pizza was gone, they got back to work. Hilary and Matt finished stacking boxes in the living room and deep cleaning the empty spaces while Kase entertained Aidan. The two brunettes had really bonded in the last year. Kase was always the one who scooped Aidan up anytime they swung by the caf\u00e9.\n\n\"Well, that's that.\" Hilary wiped the sweat from her forehead as she took in the room.\n\nThe friends stood in the living room of a mostly empty apartment. This was it. They all knew this was the first domino to drop in the long line to come. Things were changing. Such was life. Next was graduation, Hilary moving, Kase moving, etc.\n\nKase put his arm around his friends and sighed. \"I guess we better get used to this feeling.\"\n\n****\n\n\"Okay, I got my gift for Moose. Now it's your turn. What do you think he'd like?\" Matt lifted Aidan out of the cart and set him on the ground.\n\nThe first surprise after picking Seamus's up from the airport was going to be a little birthday celebration. Matt wanted to make Seamus feel special so he took Aidan shopping. Why he thought Aidan would be any good at it when he couldn't even behave at a cemetery, Matt would never know.\n\nBut he followed the toddler around the store and watched with great fondness as he ping ponged between one fascinating thing and another before excitedly handing the newest and best thing to Matt before ponging off again.\n\n\"This isn't a shopping spree. You actually have to think 'what would Moose want?' And then you get that thing.\"\n\nAidan stopped, grabbed a container of peanuts with both hands. It was heavy but he held it like he found the most perfect gift in the whole wide world. He proudly handed it over to Matt then pinged off again. With Aidan good and occupied, Matt returned the peanuts to the self like he'd done with all the other items.\n\nAidan finally found something that kept his attention for more than two second.\n\nMaybe he had noticed Matt taking things out of the cart after all because he wouldn't let Matt near the thing he finally picked out for Seamus. Two things, actually.\n\nWhen they got home, Matt started wrapping the gifts. Aidan wasn't very excited about that.\n\n\"This is how birthday's work. You have to wrap the presents so the birthday boy can unwrap them. It's more fun this way,\" he explained as Aidan stood on his tippy toes and reached for the gifts on the kitchen table. When Aidan's fingers got a little too close, Matt scooted them away and continued wrapping. \"And you can't open it for him. This is Moose's gift.\"\n\nAidan grunted and went to the other side of the table and tried again to reach the gifts.\n\n****\n\nMatt absolutely wanted to take Aidan to the airport so they could all have a perfect little reunion. But in a more real sense, he absolutely didn't want to take Aidan to the airport. He wanted Seamus all to himself. No distraction. So, mum was the word. As long as Aidan didn't know where Matt was going, he was happy to run into his grandpa's arms.\n\nMatt was about to vibrate out of his skin when he finally saw Seamus among the horde of people. Seamus tossed his bag down and hugged Matt with four weeks of pent-up emotion. Matt hugged back with equal fervor.\n\n\"I'm so happy to see you,\" Seamus murmured into Matt's neck as he breathed him in. Once he was satisfied with his scent, Seamus grabbed Matt's face and kissed him over and over. \"I'm so sorry.\"\n\nMatt pulled back and shook his head. \"We agreed not to go there.\"\n\n\"You agreed not to go there. I needed to say it to your face, so I did. Don't censor me.\"\n\nMatt chuckled and lightly kissed Seamus's lips. \"Okay, you said it, now it's time to move on to bigger and better things.\" Matt grabbed Seamus's bag and tossed it over his shoulder. \"Let's go.\"\n\nThey held hands as they walked. Matt took a moment to appreciate his boyfriend. He looked good, so good. His skin was perfectly sun-kissed and healthy looking. He wore a new Seahawks sweatshirt and his hat backwards. But the best thing he had on, the thing that made him so fucking sexy Matt could die, was the ear to ear smile he wore for Matt.\n\n\"Thirty looks damn good on you.\"\n\nSeamus leaned over and kissed Matt as they exited the building. \"Thirty feels good.\"\n\n****\n\nThey ate calzones and cupcakes before opening presents. Brad gave Seamus this gorgeous whiskey decanter that came with four glasses. Seamus was shocked. It was beautiful. A generational gift. The type of gift that had obviously been handed down.\n\nBrad grinned, pleased with Seamus's reaction. \"It was my father's. There used to be eight glasses but you know, the years aren't always kind.\"\n\nSeamus looked at Matt, half expecting him to be upset that his father had given him such a sentimental gift. Wasn't that something that belonged to Matt?\n\nHe leaned over and kissed Seamus. Matt didn't care. It was a gift that Seamus would appreciate it more than Matt ever could.\n\nMatt got Seamus a canvas print set for the loft. Huge black and white pictures of Aidan and Seamus at various points over the last eighteen months. One was of Seamus sitting at a table in the cafe working with pre-walking Aidan balancing against his leg, another of Aidan in a bumbo chair on the counter while Seamus did the dishes, and one of Seamus and Aidan holding hands as they walked down the street. They weren't super great pictures, just ones Matt had taken with his phone in secret, but they told a story of a man who loved a boy. And of a boy who loved a man.\n\nSeamus stared at them, then at Matt. He didn't say anything. He didn't thank Matt or gush over the photos. He simply leaned them against the chair and moved on.\n\nBut Matt was no fool. He saw Seamus barely hold back the emotion. If Seamus said even one word--\n\nSeamus cleared his throat and reached for the next gift. It was big but not too heavy. He shook it. \"Who's this from? Is this mine?\"\n\nAidan shook his head and pointed at his own chest. \"Me!\"\n\nSeamus frowned. \"But it's my birthday.\"\n\nAgain, Aidan shook his head, quite aggressively. \"No, me!\"\n\nMatt laughed and pulled Aidan to his lap. \"You picked it for Moose? Remember?\"\n\nSeamus ripped the paper off and gasped. \"This is the best present ever!\" He held up the big plastic dump truck with Bob the Builder and his friends. Brad started laughing and Aidan quickly slid off Matt's lap and reached for the gift he'd so thoughtfully bought for Seamus.\n\nIt was almost too big for the little guy to carry but he managed to get it from Seamus. He even made it a few feet before he dropped it and then tripped over it.\n\n\"He picked it out all by himself.\"\n\nSeamus watched Aidan with so much love. \"I bet he did.\"\n\n\"Along with half the store.\"\n\nEveryone at the table smiled as they watched Aidan. Then Seamus grabbed the other gift. It was smaller and wrapped poorly. Seamus glanced at Matt and smiled.\n\n\"You know he can't help himself. It's a problem.\"\n\nSeamus quickly shed the stuffed moose of its paper wrapping and smiled. Aidan was obsessed. Every time they went somewhere and there was a toy moose, Aidan wanted it. He always gave it to Seamus. His Moose. After Seamus had a few minutes to enjoy the gesture, Aidan was back with his little grabby hands. Every time.\n\nAidan looked up and saw what Seamus was holding. He scrambled off the floor and ran to Seamus. He pointed to the stuffed animal. \"Moose,\" he said. Everyone nodded. Then he pointed at Seamus, \"Moose.\" Then Aidan hugged the stuffed animal. \"My moose.\" Then he hugged Seamus' legs.\n\nBefore anyone could ahhh, Aidan took the moose and ran off, officially taking all the gifts with him.\n\nSeamus fidgeted with the whiskey decanter and looked at Matt and Brad. \"Thank you so much. This was by far the best birthday I've ever had.\"\n\nFather and son shared a knowing and conspiring look. Brad nodded for Matt to go, so Matt got up and held out his hand. \"I have another gift for you but you have to come with me.\"\n\nSeamus watched with suspicion. He hadn't expected anything and had already received so much. But he silently followed Matt's lead while Brad distracted Aidan. Not that he didn't want Aidan to come but...yeah, he didn't want Aidan to come.\n\n\"Where are we going?\" Seamus asked as he slid into the passenger seat of the suburban.\n\n\"Oh,\" Matt laughed as he started the SUV. \"We're not going anywhere special, just to my apartment.\"\n\nSeamus seemed fine with that. Not at all disappointed or suspicious. It wasn't until Matt paused outside the apartment door with his hand on the knob that Seamus looked at him funny.\n\nMatt twisted the door and slowly opened it, revealing an apartment completely void of life except a stack of boxes in the middle of the living room. Seamus entered slowly, almost skeptically, and looked around. When he finally looked at Matt, it was hard to tell how Seamus felt. Was he upset?\n\n\"You're moving?\"\n\n\"Yes.\"\n\nSeamus shoved his hands in his pocket. \"Don't tell me you're moving back to your dads.\"\n\n\"2511 Ellingston St NE #11.\"\n\nSeamus rushed him, wrapping him in his arms. \"You're moving in with me?\"\n\n\"Yes.\"\n\n\"You and Aidan?\"\n\n\"We are a packaged deal.\"\n\nSeamus ran his fingers through Matt's hair and pulled him in until they were kissing. This was exactly how Matt hoped he'd react and he smiled despite Seamus kissing the life out of him. Seamus ran his hands over every inch of Matt. He was frenzied, like he hadn't seen or touched Matt in a month.\n\nLike Matt was finally moving in with him.\n\nMatt opened Seamus's fly with one hand and fisted his shirt with the other. Seamus moaned and returned the favor. There wouldn't be full blown sex, there was literally nothing in the apartment, but it had been a month and they were desperate. Matt dropped to his knees first, beating Seamus by mere seconds. He ripped Seamus's pants down, damaging the zipper in the process but freeing Seamus's cock at the same time.\n\nHe kind of wanted to take his time and drive Seamus crazy but he had more plans for Seamus. Anyway, judging by hands messing his hair up, Seamus was already half crazy. What the hell, he thought. No reason to hold back. He went full porn star, taking Seamus all the way down and doing crazy things with his tongue.\n\nMatt was surprising himself. Can you have a double jointed tongue? Was that a thing? Probably not but Matt was pretty sure he was discovering new ways to blow a dick. He didn't get a chance to discover all that much before Seamus came so hard his knees buckled and he fell backwards on the boxes. Everything crashed down, including Seamus. He laid awkwardly on a box, panting, his legs spread; one leg bent and his pants around his thighs. Seamus was fucking wrecked.\n\nMatt loved it.\n\nSeamus stared at Matt with wild eyes. \"Holy fucking shit.\" Then he grabbed him and returned the favor. He pulled Matt forward so hard he almost toppled over the pile, as it was, he barely had himself propped up on a box as Seamus swallowed him. His pants were barely below his hips so he had no leverage with his legs as he leaned over his boyfriend. He was so keyed up he was close to edge within minutes. His arms shook as Seamus sucked an orgasm out of his damn toes. Once he'd given him everything he had, he joined the heap that was his boyfriend and his belongings.\n\nSeamus grabbed Matt's chin and brought him in for a kiss. \"You're finally moving in with me?\"\n\n\"Finally.\"\n\n\"This is the best birthday ever.\"\n\n\"What if I told you it wasn't over? I still have a trick up my sleeve.\"\n\nThe redhead gazed at Matt like there was no way in hell. Nothing could be better than a blowjob in the soon to be former apartment of the boyfriend who is finally moving in with you. \"I'd say you can't top this so you should probably save whatever else you have planned for next year.\"\n\n\"Or--\" Matt stood up, pulled up his pants, and pulled Seamus to his feet. He then straightened Seamus up and kissed him, long and slow. \"I will give you the gift tonight. If you don't want it, I'll take it back and give it to you next year. No harm, no foul.\"\n\nSeamus chuckled, confident that nothing could out do what he'd just been given. But sure, Matt, go ahead and try.\n\n****\n\nIt wasn't even eight when they got back to the loft but Aidan was passed out on the floor next to his--Seamus's--new dump truck. Brad shrugged, kind of laughing at how cute his grandson was.\n\n\"What do you guys have there?\" Brad knew why they were each holding a box but asked anyway if only to humor Seamus.\n\n\"Matt and Aidan are moving in, officially,\" Seamus beamed. Oh yeah, he was happy alright.\n\nBrad got up and gave Seamus a hug and whispered something in his ear that Matt couldn't hear. Whatever it was, it meant a lot to Seamus.\n\nThey set the boxes off to the side and helped Brad clean up. Then Brad excused himself and left the two to put Aidan away. At first, Seamus stood to the side, not wanting to overstep, but Matt motioned for him to go ahead.\n\nInstead of picking him up, Seamus kneeled down and hovered over the sleeping child, kind of cradling his large body around Aidan. Seamus softly kissed his cheek, grazed Aidan's face with his knuckles, and brushed the hair behind his ear all while speaking softly to the sleeping potato. It was...private. An intimate moment between a father and son.\n\nWhile Seamus was busy with Aidan, Brad hugged Matt. \"In my wildest dreams, I never could've created wanted more than you have right now. Seamus is, well, he's a gift. A precious gift. The same way that you're a gift and Aidan's a gift. You've made me a rich man beyond my wildest dreams. I love you. I love all three of you.\"\n\nEmotion bloomed in Matt's chest and his eyes swelled. \"I love you, too, Dad. I couldn't have done this without you.\"\n\n\"You could've, but I'm glad I got to be a part of it. And for you and Aidan alone, I'm glad I loved your mom. Without her, I'd have none of this.\" Brad kissed Matt's cheek and left the room.\n\nSeamus carefully got his arms under Aidan and hefted him up, draping him over his chest and shoulder. Aidan was getting so big. The chubby baby was gone and in his place was a slender and lanky toddler. Sassy and independent. Utterly frustrating at times but adorably precious.\n\nHe followed the pair and watched as Seamus gently set him in the crib, carefully stripped him of his clothes, and changed his diaper, all without waking him.\n\nMatt had a kind of elaborate plan for the final gift. It was a big deal gift and he wanted to give it to him in a big deal kind of way. But then Seamus had to go and be...he had to go and prove exactly why Matt had made the right decision. At that moment, it didn't matter what Matt had planned, it wasn't about the presentation. He slipped out of the room and grabbed the manilla envelope then slipped back in.\n\nSeamus covered Aidan with a blanket and watched him. He looked at Matt and smiled. His cheeks flushed. He went to Matt. \"I missed him,\" he explained.\n\nMatt pressed the envelope to Seamus's chest and held it there until Seamus took it. He was confused. \"What's this?\"\n\n\"Originally? It was your final birthday gift. But honestly, it's not a birthday gift. It's just--it's the way it should be.\"\n\nSeamus pulled out two sheets of paper. \"Samaritan West Providence Hospital...\" he read aloud, then scanned through the rest of the document. Then the second sheet. Then the first. His eyes darted back and forth then shot to Matt.\n\n\"I want to do something more permanent but it's a complicated process and a week wasn't really enough time to get it laid out. I figured once things settle, we can work on guardianship through a lawyer, together. Until then, I never want you stuck in the lobby of that godforsaken hospital, not where Aidan or I are concerned.\"\n\n\"You and Aidan?\"\n\nMatt plucked the papers from Seamus and held one in each hand. He wiggled the left then the right. \"This one's mine, this one's Aidan's. Should anything happen, you'll have, I don't what it's called, power of attorney or whatever. It's only good at Samaritan West Providence but it's a start.\"\n\nSeamus put his hands behind his head and turned away so Matt couldn't see him crying. When he dropped to his knees and hunched over, Matt was next to him, rubbing his back. This wasn't just big. To Seamus, it was everything.\n\nSeamus steadied his breathing. One breath, two breaths. He took the third breath in deep, gathering himself. He sat up and looked at Matt with wet eyes. \"Is this real? Are you sure? Because if you take this away--\"\n\nMatt gripped the back of his boyfriend's head and brought him in for a soft kiss. \"It's real. I'm sure. And I won't ever take this away from you.\"\n\nThat was all Seamus needed to hear. In the next breath, Seamus had Matt by the hand and was dragging him across the apartment and into their room.",
        "\"Best. Birthday. Ever,\" he said between kisses and they rushed to shed their clothes. They were haven't-been-intimate-in-a-month kind of quick to undress, thought-I-lost-you-forever quick to crawl on the bed, and I'm-sorry-for-being-stupid-fucktard quick to cum.\n\nWith the first round over embarrassingly fast, the second round could start. It was this-is-my-favorite-forever kind of love making. This time Matt got between Seamus's legs and entered him. They kissed and moved in rhythm. Seamus flipped them over and rode Matt. By the time they finished, they were damp and exhausted.\n\nAnd completely and utterly in love.\n\n****\n\n\"Good morning,\" Seamus purred as he rolled on top of Matt. The morning light was only beginning to peak. How Seamus was awake was beyond Matt. They'd only just gone to bed. How he was hard was another mystery. Seamus didn't care that Matt could barely open his eyes, he was kissing him and moving around his body with determination. A finger found it's way between Matt's cheeks, carefully prodding for entrance.\n\n\"Nghh,\" Matt moaned.\n\nOne finger.\n\nTwo fingers.\n\nSeamus tilted Matt's hips up and began to press into him. He only got a couple of tentative thrusts in before the bedroom door opened.\n\n\"Oh god!\" Matt cried. There was no worse-case scenario than someone walking in while getting fucked. Seamus scurried off Matt's ass and plastered himself against the headboard with the sheet tightened around his waist.\n\nThey sat frozen on the bed.\n\nAidan stood at the door smiling with his hands in the air. He'd just mastered opening the door's all by himself. Such a big accomplishment. He ran over and threw as much of himself on the bed as he could. Then he lifted his arms, waiting for them to pull him the rest of the way.\n\nSeamus was the first to get over the shock and lifted Aidan by the armpits. \"Good morning Sneaky Potato.\" Then he looked at Matt and whispered. \"You don't think he knows what we were doing?\"\n\nMatt shook his head. At least he hoped Aidan had no clue. He was only two and completely and wonderfully innocent. Matt reached for a spare diaper and quickly changed him. Then Aidan wobbled around the mattress, chatting incessantly about things that were so very important to two-year-olds. After a few minutes he grew bored, slid off the bed, and wandered out of the bedroom as if he hadn't just walked in on Matt getting his ass fucked.\n\n\"What the hell just happened,\" Matt asked.\n\n\"We just entered the lock your door phase of parenthood.\"\n\n****\n\nIn the midst of all the breaking and entering that Aidan was doing, they managed to make an appointment with a family lawyer. Matt wasn't sure what guardianship would look like but it wasn't as complicated as he expected. They filed paperwork, submitted it to the court, boom, Seamus now had rights.\n\nSeamus watched Matt carefully as they went through the process, looking for any signs of regret. Honestly, Matt expected to feel a little more anxious about it. What he ended up feeling was secure. He trusted Seamus explicitly. Despite the time he joked about Aidan climbing on the moving boxes, \"it's fine if he falls, I can legally make decisions for him at the hospital,\" Aidan knew that no one had Aidan's best interest at heart more than Seamus. Making it legal only made Matt feel more confident as a parent.\n\nThe rest of the school year flew by. Not that there was much of it left. He was excited to graduate but melancholy about growing up. He spent more time with Kase and Hilary since those days were numbered. They went out to the Bar every other week or so for a drink, Kase watched Aidan once a week while Matt and Seamus worked, and Matt stopped by the caf\u00e9 almost every time Kase and Hilary shared a shift.\n\nGraduation day was nothing like high school. Instead of sharing the stage with two-hundred kids, you shared it with two-thousand. It was a long ass day. Some might say it was worth it to stand on that stage for two seconds and get your degree but Matt would much rather stay home than sit through that crap again.\n\nGraduation also meant Matt was free to work full time for Seamus. Well, for Seamus was a weird statement. He didn't see Seamus as much as he expected. When he first started, Seamus was there all the time. Now it was a lot less frequent. He came in for scheduled meetings and updates, but that was it. He hired Matt for a reason, and in exchange for giving Seamus guardianship over Aidan, Seamus gave Matt guardianship over the business in the form of a job title.\n\nCFO: Matt Kessler\n\nIt wasn't something Matt took seriously. He was barely graduated. CFO was too much. But that didn't change the fact that this was his domain, or would soon be anyway. Rebecca was at the end of her contract. The new team was getting ready to start and they'd be under his watch. They had a detailed plan in place. It was no longer a one-man band stand. The checks and balances would assure no one the opportunity to do what Mike had done.\n\nThat guy was never far from their minds. They might not speak his name but what he did, both taking what wasn't his and then breaking the restraining order, had made it hard to go a day without thinking about him. He'd served a little jail time for showing up at the office but not as much as he deserved. The justice system was total insanity. Not knowing how the investigation was going or how much longer they'd have to wait, only made it worse.\n\nThen one day. Matt got a call at the office, which was weird. The lawyer usually called Seamus directly. Matt was quick to pass the message along.\n\n\"I'm heading there now. Do you want to meet me there or wait for me to get home?\"\n\n\"Kase is at the lake with Laura this week. So I'll stay home with Aidan. But hurry back.\"\n\nThe lawyer hadn't said much, just that they needed to meet with Seamus. Was the investigation done? Were official charges being handed down? Matt needed to know.\n\nIt was late when Seamus finally came through the door. Aidan was already asleep but only barely. Seamus held a thick manilla envelope which he set on the table with a thud. He leaned forward with his fingers pressed on top of the envelope.\n\nHe looked discouraged.\n\nOverwhelmed.\n\nThen he looked at Matt and shook his head. \"It's not good.\"\n\nThere was no way, no fucking way. How could they get away with this?"
    ],
    "authorname": "Mrsgnomie",
    "tags": [
        "gay novella",
        "gay romance",
        "romance",
        "drama",
        "love story",
        "gay drama",
        "gay love story"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/boss-nanny-ch-20"
}