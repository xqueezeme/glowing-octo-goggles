{
    "title": "Lost Empire Ch. 47",
    "pages": [
        "Derrick felt really bad as upset as Shelby had been. Hell he felt horrible though as Tempro had pointed out there was really nothing that they could have done. Well nothing beyond what they had. Tara's last message was still ringing in his ears. The amount of courage and bravery she had displayed made him feel worse that he couldn't save her.\n\nThey were finally starting to dock with Tempro when there were several alarms going off. \"Intruder!?\" Derrick's head snapped around to stare at Shelby. \"What in the hell did you do?\"\n\n\"I couldn't let her die like that; I couldn't Derrick not after what they both did.\" Shelby started to explain to Derrick.\n\n\"Again, I am this time demanding, what in the hell did you do?\" Derrick said as calmly as he could.\n\n\"I had to do it Derrick I felt I owed it to her I...\" Shelby started again.\n\n\"WHAT!\" Derrick almost shouted. \"Did you do?\"\n\nThe view screen changed showing a tall, blonde woman unconscious on the bio-bed. 'Strange, ' Derrick thought 'why does she look so familiar?' \"I saved her Derrick I had to.\" Shelby whispered.\n\nShaking his head he'd have to confer with Tempro to see just how badly Shelby had screwed up this time now. Sighing Derrick thought of Tempro waiting for the A.I. to appear. \"We'll have to decide what we are going to have to do now.\"\n\nSighing he felt Shelby finish her docking. \"Tempro I think we have a problem.\" Derrick said a moment later.\n\nTempro immediately appeared, \"I am not detecting anything wrong Sire. As a matter of fact I just felt a missing part of time slide into place. What seems to be the problem? I ... oh dear!\" Tempro said as soon as he saw the view screen.\n\n\"Yeah I kind of thought that myself when I saw her. You do know who she is I take it?\" Derrick said with an exasperated sigh.\n\n\"Yes Sire, she is Tara Devonnie, she was reported lost with her ship also named Tara.\" Turning toward Shelby, Tempro's mouth was hanging open. \"How did you know?\"\n\n\"Know? I didn't know I just had to save her. For all she did, I had to.\" Shelby replied.\n\nTempro could only shake his head suddenly realizing that this was supposed to happen, though it still surprised him when something like this did. \"More has shifted to what it should be Sire. I was wondering how we were going to repair the error in time. Here Shelby did it without the knowledge I posses which,\" here Tempro shook his head again. \"Was somewhat useless this time.\"\n\nDerrick was watching the exchange between the two A.I.s with interest. \"You can hardly be faulted Tempro. Not every facet of the past can be known. Even for a hero as she obviously is.\"\n\n\"Yes Sire, she was quite the hero. After this battle she was listed as dead, killed in action with her ship. Years later a woman matching her description appeared in a province near the one you grew up in. I believe it was called Tierra oculta.\" Tempro informed Derrick.\n\nDerrick's head snapped around from the view screen, \"Tierra oculta? Hardly near mine, it's on the other side of the planet. As I remember one of my outfit was from there Daniel Norman, Captain Callie's father--.\" Derrick suddenly stooped in mid sentence a strange look on his face. \"My god! Shelby do you have the DNA of Captain Callie still?\"\n\nShelby could only stare at Derrick then a moment later she nodded, \"yes Derrick I have all of their DNA. Especially after I took yours that first time, as I remember someone saying it helps to be well prepared.\"\n\n\"Good I want you to take a sample of Captain Devonnie's, run a comparison of it with that of Captain Callie's.\" Shelby still unsure of what Derrick was on about nodded and started the test. \"I'm afraid it will take a few hours Derrick.\"\n\nDerrick could only smile, \"it's not as if we have anywhere to go Shelby. We are after all five hundred years out of time.\"\n\nTempro had been following the conversation between the two with growing interest. \"Is there anything that you require of me?\" Tempro asked after Derrick had finished speaking.\n\n\"Yes, I want you to run a genetic search of all persons in the Tierra oculta. Pay attention especially to all families with the last name Callie, Norman, Devonnie,\" here Derrick stopped a moment thinking back to a few of the conversations he'd had with Sergeant Major Norman. Ah! Derrick thought, \"also look at families with the last name Griback, Astand I believe the last was hmmmm-- Ah! Tital!.\"\n\nTempro bowed smiling wide, \"I am running a search through all the names now.\"\n\nStopping suddenly Derrick added, \"You said a woman matching her description appeared in the Tierra oculta province. Do you perhaps know what her name was?\"\n\nTempro look down a moment then smiled, \"I never thought of that! Searching now.\" A moment later Tempro's mouth was hanging open. \"Sire? I have it she was called Tade, Ara Tade. A very clever play on words I have to say.\"\n\nDerrick nodded then sat, 'shit! All he wanted to do was go home!' Looking over at Tempro, Derrick could only shake his head. Sighing he was starting to wonder just how many things was he going to have to correct?\n\n\"I'm sorry Sire your thoughts are so loud. At present this is the only thing that I am seeing that we have to fix. Everything was fine as we were coming forward then I had to do a shut down as I felt that time had changed. I am afraid that this will happen 'til we fix everything.\" Tempro apologized.\n\n\"So you're telling me that everything is ok with the five hundred years before now?\" Derrick asked.\n\n\"Yes Sire, I have analyzed both events that we changed. These were extremely high profile events Sire. I am not really seeing anymore for at least three hundred years.\" Tempro replied.\n\nDerrick nodded about the time that the empire fell. Suddenly Derrick looked over at Tempro. \"I am not about to make sure that the royal family is killed!\"\n\n\"No Sire! I would never suggest that you do something as horrible as that!\" Tempro cried a look of absolute terror on his face.\n\n\"That's the only major event that I can recall three hundred years from now,\" Derrick told Tempro.\n\n\"No Sire nothing having to do with any of the royal family being killed. Though I have strange readings about the Empress and her son disappearing for a year before they were killed.\" Tempro told Derrick.\n\nWhy am I thinking that we are going to have to rescue the Empress and her son? Plus the fact that Derrick felt that it was going to be dangerous as hell?\n\n_____________________________\n\nDuke Risen was screaming when the Rangers pulled him from the command center. Greeson could only smile as the man started to threaten then try to bribe each and every man. Struggling, the Duke broke free only to be caught lifted then slammed to the ground by Greeson.\n\nShaking his head at the now unconscious man he activated his com. \"Alright Captain we have him, please inform the Empress.\"\n\nOn board the now regrown Tara, Mara nodded as she replied. \"I will Chief Warrant Greeson. Good job!\"\n\nGreeson looked around at several of the Rangers that were smiling at him. Blushing a moment Greeson gathered his wits. \"Alright enough of that! Let's get him in restraints before the ass wakes up, then I'll have to persuade him to nap again.\"\n\nA few yes sirs, then the Duke was trussed up and tied to a pole that they soon lifted. A few moments later they had him secured in a holding area. Greeson looked at the man once more before he moved on.\n\nMoving forward Greeson stopped at the training room when he saw Dempsy within. Stepping in Greeson removed his shoes then turned bowing to Dempsy. A slight smirk on his face Dempsy nodded as he also bowed then took a defensive position. \"I take it the pathetic one was no trouble?\" He asked.\n\n\"No not really, he tried to escape so I had to show an acceptation to it. You might say that we had to carry him aboard afterward.\" Greeson said.\n\nDempsy nodded a slight smile on his lips, \"perhaps he thinks his position will protect him?\"\n\n\"No, all of the Rangers guarding him were handpicked by the emperor. They are above reproach, besides he really has nothing to bribe with anyway.\" Greeson said as he rapidly threw attacks and hits at Dempsy.\n\nSmiling Dempsy blocked all of them, good he thought Greeson is finally realizing the true form of the art.\n\n_______________________________________\n\nKimison and Rayburn had been at it all day; they wanted to help but how? With the huge data banks that Tempro had nothing information wise they sent him would matter. The fact that he had Shelby meant he had fire power. Shaking their heads they started to go through everything again there had to be something.\n\nShelby had Celeste still watching over everything that the two did. The last thing she needed was for the ship to get propelled back in time like Derrick and Shelby had been. Sighing she was going over reports from the Duke's planet when Greeson called.\n\n\"Empress, he has been secured aboard. I made sure that no one watching him could be persuaded to let him go. Are you sure we should just hold him? I'd have thought that you would execute him.\" Greeson told her.\n\nShelby was in thought a moment then looked at the hologram of Greeson. \"I was, and then I had a thought. It would do more to cement the power of the emperor if he did. I am only the empress, in his stead I can rule. I am not of royal blood therefore I do not have absolute authority. I can however set many things into motion.\"\n\nMotioning for Hartwell he nodded then spoke. \"Warrant Officer Greeson for the bravery and decision making that you have shown it was decided with approval of the empress. You are hereby promoted to First Lieutenant effective immediately.\"\n\nMany of the men on board Tara started to cheer as did Mara. Quieting them down, Greeson then thanked the empress and Hartwell. Saluting he was suddenly knocked off his feet just as the connection went silent.\n\nLooking up he saw Dempsy smiling from ear to ear. \"'Bout time it happened to someone else besides me!\" Putting his hand out for Greeson he grinned even wider when Greeson's eyes narrowed.\n\nShaking his head no, Greeson slowly got off the floor keeping a watchful eye on Dempsy the whole time. \"That's alright Colonel.\" Greeson said drawing a groan from Dempsy. \"One attack I can accept though not a second!\"\n\nSmiling larger Dempsy withdrew his hand nodding. \"Good then get your ass off the floor, we still have training to do!\" All moved back as the two men started again at a blurred speed.\n\n_______________________________________\n\nIt was several hours later when Tempro alerted Derrick. \"Sire?\"\n\nLooking up from a design he'd been wanting to work on Derrick stated. \"Yes Tempro, what have you discovered?\"\n\n\"I went through all the names that you gave me. At the present time there are no Normans, Callies, Grisbacks, and Astands in the Tierra oculta province. Also an extensive search of the last five hundred years produced no Devonnie at all. I am reading a family Titals that will be moving there in two years. The rest appear at different times over the next three hundred years.\" Tempro informed Derrick\n\n\"Derrick?\" Shelby stated. \"I have the results it is a ninety point eight percent probability that Captain Callie is directly related to Captain Devonnie. Almost all genetic markers are a match.\"\n\nNodding his head Derrick had been going through all the medical records trying to find what he could on memory. They had to do a wipe of Tara, but the thing is, they had to wipe almost all her life. Shaking his head Derrick wasn't that happy to do that to the woman, then again he wasn't about to kill her either.\n\nSnapping his head up a moment later he looked at Shelby. \"I remember that we were going to do a small wipe on Hartwell and Dempsy. How much can we actually wipe out before reintegration of a new set of memories is impossible? I've been through a few ten thousand files and haven't found that much that is really helpful.\"\n\n\"Running a system check now Derrick.\" Shelby said then was quiet for a few minutes. \"It appears that the farthest I have ever gone back is a few years. I would say that three is the most. According to all information I have, we cannot do a complete wipe. We would have to install new memories at each instance of three or four years removed. Plus the apparatus I use can only be used twice, sorry Derrick it is too dangerous after two.\"\n\nDerrick was nodding deep in thought, three to six years wasn't going to do much though it was a good start. \"Sire?\" Tempro spoke up. Looking up Derrick nodded to Tempro. \"I believe that I may have a solution. Many centuries ago a young tech was working on something like you suggested.\" There was a whir then a disc appeared. \"As distasteful as this is I am afraid that this plan you have Sire is our only choice.\"\n\nTaking the disc Derrick started to go through it with almost blinding speed. \"Informative to say the least Tempro though I as of yet haven't seen the equipment that we'd need to achieve it.\"\n\nWith that a door opened at the back of the lab area. \"I believe what you will need is there Sire. Though I am afraid that it is only complete on the mind wipe side. I was destroyed while the tech was working on the second section. I am sorry Sire that last bit is all that I have to offer.\"\n\nDerrick was going through the second section seeing where it abruptly stopped. \"Yes I see. Actually he got quite a bit done. At least I have a damn good template to start with.\"\n\nTempro's eyes were wide, the emperor could do something with so little data? A sense of pride was showing on Tempro's face as Derrick started to type at a furious speed. \n\nEvery few minutes Derrick would enter the information he'd typed then start anew. After almost an hour Tempro was shocked that Derrick was almost finished with it. Well enough that Tempro could start to run scenarios with it. \"Starting testing now Sire. I should have an answer within a few hours.\"\n\nDerrick nodded as he went back to the design that he had been working on. A smile crossed his face as it started to take on more shape and form.\n\nIt was a few hours later when Tempro alerted Derrick, \"Sire I have completed all the scenarios. From all that you added it may be possible. I will have to adjust and build another machine and scanner.\"\n\nDerrick nodded, \"that's fine Tempro. How is our guest? Are you going to be able to keep her under long enough? I'm afraid that she might suffer mental damage if we keep her under too long.\"\n\nTempro was silent a few moments as he went through all the information that he had. Finally he spoke, \"I believe that we can keep her safely unconscious for another day. Might I suggest that we make our way two years from hence? Once we are there I can do a more accurate appraisal of the situation.\"\n\nDerrick was also silent as he considered everything that Tempro had relayed. \"Alright, I just wish we could get home.\"\n\nTempro nodded, feeling the want of the emperor. Securing everything and his self, Derrick watched as Tempro admitted a blue wave. Space started to ripple faster in front of them, and then Tempro shot forward into the ripples.\n\nIt seemed they had just entered the ripple when they were coming back out. At least it seemed that way to Derrick.\n\n\"Position?\" Derrick asked.\n\n\"We are approximately two years and a month further ahead in time. We need to begin working on her so we are ready when you put her there in Tierra oculta.\" Tempro reminded Derrick.\n\nDerrick nodded then went in the door that had opened. Looking around Derrick was surprised to find several machines for the brain. There was an extensive amount of scanning equipment also. Looking through all that he'd added Derrick sighed when he saw that it wasn't going to work as it was. Stepping up to a terminal he again started to type at a furious speed.\n\n\"I think I figured out what I was doing wrong Tempro. Please check these new configurations they should help it to be far safer than before.\" Derrick told Tempro as he continued to look over all that he was working on.\n\n\"Yes Sire I have already begun to run through them.\" A few moments later Tempro spoke up, \"this does appear to be better. I am afraid though that this section will still cause a bit of paranoia.\"\n\nDerrick's eyes went wide as he looked over what Tempro had pointed out. Son of a bitch! Tempro was right that section would have damn near killed the woman. Shaking his head Derrick again started typing, he had to get this right they were on a tight time table. Well at least for now they were he thought.\n\nDerrick had worked on it for hours having to revise it seemed every half hour. Finally with time starting to run out he felt he had it right, damn he hoped. \"Tempro is the replacement memories that we worked on ready?\"\n\n\"Yes Sire I finished them an hour ago. I have to say Sire you have finished the program in great time. As far as I tell there are no longer any glitches within it. I have to say Sire you have produced superior results.\" Tempro proudly told Derrick.\n\n\"I'm hoping so Tempro, I've not worked much with the mind. I took a type of crash course with all the information you and Shelby had.\" Derrick replied.\n\n\"For a crash type course you have completed the work of a man who had worked years on in an extremely short time.\" Tempro advised Derrick.\n\n\"I know Tempro then again I really didn't have a choice now did I?\" Derrick said.\n\n\"No Sire I believe not. I am sorry that I had no further information for you.\" Tempro stated then bowed to Derrick.\n\nDerrick nodded then started toward the med bay. Just as he reached the door an alarm started to sound. \"Tempro report!\" Derrick shouted as he was running back toward the command deck.\n\n\"I'm afraid that Captain Devonnie has awoken.\" Tempro advised Derrick.\n\n\"Shit!\" Derrick said as he appeared on the command deck before the view screen. Looking closer at Tara, Derrick asked, \"what in the hell is she doing?\"\n\n\"Oh dear.\" Tempro responded. \"It appears she is trying to over ride the terminal. My, she appears to have a higher level of understanding of the programs than any of the other Captains were reported to. Sire I suggest you keep her within the med bay. I have already locked access to all terminals and controls out of that room.\"\n\n\"Alright, thing is Tempro, can we keep her out of the rest of you? If she has superior knowledge, then it may take all three of us to subdue her.\" Derrick told Tempro.\n\n\"Sire?\" Shelby chimed in. \"I do not remember ever having any interaction with her in the past. Might I try to calm her as it appears she is becoming quite agitated.\"\n\nDerrick watched as the tall, blonde woman was working at the terminal trying to access what she could. Suddenly they heard her speak a deep rich voice ringing out. \"Alright, I know I am not a prisoner of the attacking raiders. Let me out, I am knowledgeable with ship systems. I might be able to actually help you if you need it.\"\n\nDerrick turned to Shelby with a shocked look on his face. \"Well I'll be, she's far smarter than I at first thought. Damn, still a little unsure of how to actually handle her. I don't think it would be a good idea to let her out though.\"\n\n\"I agree Sire, if she has as much knowledge as it appears she has, she might attempt to take over Shelby or me. Please forgive me Sire, a very knowledgeable tech could bypass almost every program that is set in. Even the orders you have in place. I have been moving to close every avenue that she would attempt. I am afraid though that there are still a few that are open.\" Tempro advised Derrick.\n\nDerrick was still for a few moments his brow furrowed in thought. Nodding to Tempro he then walked to a terminal starting in typing at a rapid pace. Tempro's face showed shock as every few minutes Derrick would send the upgrades he'd written to Tempro.\n\nTwenty minutes later Derrick stepped away from the terminal looking at Tempro. \"There I think that might add more than a few more safe guards.\"",
        "Tempro's mouth was hanging open as he was finishing up installing everything that Derrick had just written. Looking at Derrick, still a look of shock on his face Tempro nodded. \"You have covered a wide basis Sire. You have covered quite a few that I didn't even know of. With all of these, no path way can be encroached upon without triggering an alarm.\" Bowing low to Derrick, Tempro continued. \"Thank you Sire, I feel much safer now.\"\n\n\"As I told all of you, each one of you is more alive to me than almost all biological life forms. I may be the emperor but my subjects come first. That includes all of you A.I. ships.\" Derrick told both Shelby and Tempro.\n\nTempro could only stare, he'd thought that the emperor was serious about this before. Now he knew that the man was deadly serious about it. \"Thank you Sire, I will do all I can to help you achieve your mission. Well, after we solve all the things we have to do before we are home.\"\n\nShelby also knelt beside Tempro making Derrick growl a moment 'til she looked up with a look of absolute love. \"I will also do all I can, including sacrifice myself Derrick. I know you do not require me to bow to you, I feel that I should this time. You have brought such hope to me and all of my children. I can also feel something along the same from mother. She will never admit it Derrick, I feel she is prouder of you than any other emperor.\"\n\nWith a sigh Derrick nodded at Shelby's declaration. \"I thank the both of you, we need to get through this crisis right now, and then we can discuss this further.\n\nAs Derrick approached the med bay he was starting to hear Tara again. \"Hey! I know someone is there, this ship can't run its self. Hey! Let me out! I am an Imperial citizen! The living ships will hunt you to the ends of the galaxy! Let me out!\"\n\nTara pulled her ear from the door she could swear that she could hear someone approaching. A moment later the door slid open as a taller than her, sandy haired man walked in a smile on his face. Strange she thought the man looks fairly familiar.\n\nShe started to reach out when Derrick shook his head no. Undaunted she followed through with her punch connecting with the bulk head! \"Ow! Damn it! Who are you? Kidnapping Elite Imperial Guardian Personnel carries a heavy prison sentence!\" When the man only smiled at her she shook her head the man's face was still striking a chord deep in her mind. \"Why the hell are you smiling? Take me back to the Imperial planet now!\"\n\nFinally Derrick just sighed as he replied, \"I'm afraid I can't do that Captain Devonnie. You see you have been listed as missing, therefore dead.\" When Tara's mouth dropped open Derrick could only shake his head. Crap this was going to take a bit."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-47"
}