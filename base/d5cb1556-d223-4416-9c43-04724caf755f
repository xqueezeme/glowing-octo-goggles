{
    "title": "Lauren",
    "pages": [
        "The following story is based, in part, on actual events, conversations and text messages. I'm leaving it up to you to figure out the difference between fantasy and reality. Enjoy. \n\nYDW \n\n***** \n\nMy name is Mark Jones and two weeks before I graduated from high school my dad Brandon walked in from work and announced that he had been transferred to Tennessee. He was excited because the transfer was part of a promotion and with it came a substantial pay-raise. I knew it was a large one because when he handed the offer letter to my mom she read it and then sat down looking as though she had seen a ghost. \n\nI was fine with the move, although leaving the house I had grown up in was going to be a little sad. I was l leaving for college in September and not coming home to the only home I had known was going to seem strange. Ironically, I had enrolled at a small college only sixty miles from dad's new job location. I had played football as an outside linebacker, but my overall GPA wasn't high enough to play at the college level. My plan was to go to college for a year and then try out as a walk on my sophomore year. I tried to keep an upbeat attitude about the move; my baby sister on the other hand? Let's just say that didn't go too smoothly for my parents. \n\nJennifer had just finished up her junior year in high school. She is a real beauty and a cheerleader who also played on the girls' soccer team. She is a social butterfly who has more friends than she knows what to do with. She also has more male admirers than she knows what to do with and the only thing that kept them at bay was her snarling six-foot four inch, two hundred and forty pound big brother. I didn't want to think about what she was going to have to put up with once I was gone but she had to grow up sometime. \n\nFirst, she argued that she could stay with our mom's sister and finish school in Atlanta. When that didn't work, she pouted. When that failed, she pitched a fit. When that bombed, she screamed \"You hate me!\" and stomped out of the living room; slamming the door so hard that my mother immediately leapt to her feet and followed her to her bedroom. \n\nDad and I just sat there in the living room watching the Brave's game and listening to the screeching and shrieking that was coming from upstairs. It lasted all of two minutes before it suddenly went silent and Mom reappeared with a very subdued Jennifer in tow. Jennifer tossed her head, sending her blonde hair flying and then looked at my dad and said, \"Daddy, I'm sorry for acting like a spoiled brat.\" \n\n\"Anything else?\" my dad responded dryly. \n\n\"Yes sir. I don't have to like it, but I have no choice. You and Mom are the adults and you make the decisions.\" Jennifer said softly. \n\nThat mantra had been repeated to us since we were babies and when we really screwed the pooch, mom would make us say it back to them. It was humiliating but just the threat of it often worked wonders on our attitudes, especially when we were out in public. I found out later, from Dad, that Mom had threatened to take away her phone, tablet and then she told Jennifer that any chances she had of getting a car when she turned eighteen in August, were toast. \n\nThe day after I graduated we loaded up in mom's Tahoe and headed north up I-75 to meet with the realtor they had chosen and to look at a few houses. (A few being the first ten that mom had seen on the internet.) The town we were moving to was small by any standard, but when the realtor mentioned that the girls' soccer team had made it to the state semi-finals last year Jennifer's eyes got wide and she seemed to settle down a bit. \n\nWe were on house number eight on the second day of the trip when mom absolutely found the house of her dreams. It was a one hundred and ten year old Victorian home that had three stories, five bedrooms, three baths, a living room, formal dining room, a parlor and five fireplaces. It also had central heat and air conditioning and my dad groaned when he thought about what the electricity bill was going to look like in June, July, and August. \n\nI had picked the bedroom on the top floor as mine because Jennifer thought that it was too creepy up there and had settled for a room on the second floor. As I looked around I noticed the view from my bedroom window looked down on the back yard of the house next door, it was huge and there was a pool. \"Who knows?\" I said aloud, not realizing that my dad had entered the room, \"Maybe they have a hot daughter.\" \n\nDad walked up beside me and glancing out the window he added \"Or two, or three.\" \n\n\"Hey, a guy can dream, can't he?\" I said smiling at him. \n\n\"Absolutely son, absolutely.\" He said with a knowing grin. \"Just be careful, I don't want you back here next summer raising a grandchild in the house next door.\" \n\n\"Won't happen.\" I said, meaning every word of it. \n\n\"Cool, now let's go back downstairs and figure out how close to bankruptcy your mother is going to drive me fixing this place up.\" he said, seeming to resign himself to the fact that he was about to open a huge line of credit at the nearest hardware store. \n\nDad's company paid the closing costs on the house so that sped the process up and moving day arrived a month later. On July 2<sup>nd</sup> my family found ourselves standing in the font yard waiting on the movers to show up and Jennifer was in another huff because she had made plans with her friends to go to Stone Mountain and watch the fireworks display. \n\nOnce the truck showed up we all went to work with mom pointing and yelling like a tiny German Field Marshall at anyone moving anything into her new nest. Dad and I had wrestled the washer and dryer off the truck and they were sitting by the front porch. Around eleven or so we were discussing how to best move them into the house when a black Camaro pulled into the driveway of the house next door. \n\nThe driver's door opened, and a tall, lithesome brunette slid out. She was wearing a tight cream-colored pencil skirt, a black short sleeved blouse that was stretched to its limit across her chest, dark sunglasses and black stiletto heels. Two boys looking to be between nine and eleven hopped out of the passenger side door and raced into the house laughing. She stared at us for a minute and then smiled, waved and walked toward her front door. \n\n\"Damn!\" I muttered softly as dad and I stood there gawking at her. \n\n\"Umm, yup. I do believe that is what they call a MILF.\" Dad said almost whispering. \n\n\"No hot daughter though.\" I said, feigning sadness and praying to God above that MILF I was gawking at loved her pool. Who needed a hot daughter with a woman like that living next door? \n\n\"Good thing too, at least I don't have to worry about the grandkids living next door now.\" \n\nI didn't plan it, but it couldn't have worked out better if I had. Dad had gone inside to ask mom if she was ready to bring the washer and dryer in, when the lady next door came out and walked toward her mailbox. Dad yelled out for me to bring the dryer in, so I squatted and getting a good grip on it, I picked it up carried it up the steps. \n\nWalking back to the washer I did the same thing and when I stopped to grab the dolly to finish the move from the porch to the laundry room, I looked over to see her standing in her driveway staring at me. She had pulled her sunglasses down her nose and was standing completely still. I waved and as I started to turn my attention back to the task at hand, she pushed her glasses back up, spun on her heels and walked quickly into her house; leaving me with a great view of her ass moving under the tight confines of her skirt while she scurried away. \n\nTwenty minutes later there was a knock on the front door and when Dad opened it our new neighbor was standing there. She had changed and was wearing a white t-shirt, cutoff blue jean shorts that showed off her long legs and tennis shoes. She smiled and said brightly, \"Hi! I'm your new neighbor and I just wanted to drop in for a minute to introduce myself.\" \n\nMom walked over and holding out her hand said \"Michelle Jones; this is my husband Brandon. Please come in but the place is a chaotic wreck right now.\" \n\n\"That ok, I understand.\" She said laughing and stepping across the threshold, \"my name is Lauren, Lauren North, it is nice to meet you Michelle.\" \n\nJennifer had popped into the room to see what was going on and mom introduced both of us. Lauren looked at me and smiling said, \"That was quiet the display you put on in the yard a little while ago.\" \n\nSmiling and probably blushing a little, I said, \"Thank you, but it was just a washer and dryer.\" \n\nMom looked at us perplexed and then Lauren said \"Your son carried a washer up the steps by himself. When I got my new one last month, it took all the delivery guys could manage to get it onto the porch without hurting themselves.\" \n\n\"Oh, that.\" Dad said laughing, \"Yeah he is a tank alright. He benched twenty-five reps of two twenty-five at a combine this past spring.\" \n\n\"Very impressive!\" she said glancing toward me. \n\nI stood there silently and eventually sat down on the couch as her and mom started talking about things that women talk about. Where the nearest grocery store was, the salons in town, where to get a mani-pedi and then Lauren asked Jennifer, who was listening intently, \"Do you babysit?\" \n\n\"Sometimes. I'm good with kids.\" \n\n\"I go out occasionally and I might need a babysitter soon. Mine just got married and her new husband is in the Navy. They are moving to Guam in at the middle of the month. I'll pay you ten dollars an hour.\" \n\n\"Ten bucks an hour?\" I piped up. \"Who does your lawn?\" \n\nLaughing she said, \"I have a service that comes over twice a month to do that.\" \n\n\"It never hurts to ask.\" I said. \n\n\"Do you know how to take care of a swimming pool?\" she asked me. \n\n\"No, but I can Google it!\" I said laughing. \n\n\"That's not exactly what I meant Mark.\" she said laughing, \"I don't need mine done, my brother sends guys over to do it for me. He owns a pool service company and I don't know what he pays but I can call him to see if he needs any help. I know his guys make a ton of money during the season; and it is pool season. I'm out by mine every afternoon that it isn't raining.\" \n\n\"Please do ma'am. I would love to make some extra money before I go to school.\" I said, then praying silently I thought, \"Please God, if you've never heard a single prayer I've uttered before, listen to this one. Let there be a drought this summer. Please? Can You do that for me?\" \n\n\"Give me your number and I'll have him call you.\" \n\n\"Yes ma'am.\" I said as I rattled it off to her. \"Thank you, Missus North.\" I added. \n\n\"Lauren, please.\" She said smiling at me. \n\nTurning to mom she said, \"It has been nice meeting you, all of you, but I've got to get back and start making lunch for my boys, I have them this week and they get cranky if they don't eat.\" \n\nLaughing and nodding toward me mom replied, \"You should see this one when he goes at it. Sometimes I think his stomach starts in his feet.\" \n\n\"I bet! Bye for now. I'll be in touch Jennifer!\" she said waving back at us as she walked out of the door. \n\n\"Well, she certainly seems nice.\" Mom said; then turning to me and Jennifer and noticing that we weren't actively engaged in putting the house in order, she began to snap off commands that sent us running all over the house. \n\nAbout an hour later I had managed to escape the evil clutches of the little dictator and had retreated to my room. Setting the last box of my clothes down I glanced out the window and saw Lauren sitting in a chaise lounge by the pool while her boys splashed around in the shallow end. She was wearing a white bikini; dark sunglasses and her hair was held up in a loose bun. To say that she was stunning was an understatement and I felt my shorts start to tighten as I continued to watch. \n\nI felt like a world class pervert standing in my room spying on a neighbor that I had just met. I knew it was wrong and I knew that I shouldn't be standing here watching her, so I did the only thing I could think of. I grabbed a chair and sat down to watch. \n\nAfter about a half an hour she stood up and said something to the boys and they climbed out of the pool and headed into the house. The show was over, and I had just locked my door and laid down on the bed to relieve the swelling in my shorts when my phone chimed with a text message. I glanced down at UNKNOWN NAME and slid the screen only to have my heart stop and the hardon I had been sporting deflate like I had been kicked in the balls. \n\n\"Did you like what you saw Mark?\" ~ Lauren \n\n\"Aww shit! I'm busted! So much for the job!\", then I thought, \"Why try to deny it or lie to her?\" \n\n\"Yes, I did. You really do that suit justice.\" \n\nA minute later I read, \"Thank you. It is nice to be appreciated.\" \n\n\"Every afternoon huh?\" I replied. \n\n\"When it isn't raining.\" ;o) Came an immediate reply. \n\n\"I'll pray for a drought.\" I responded. \n\n\"LOL!!\" \n\nThen I got a picture of the most marvelous set of boobs that had ever come across my phone covered in the white bikini top. The material was stretched tight over them and I couldn't help but notice that her nipples were pierced. The caption said \"So you can see them up close. What do you think?\" \n\n\"Those are awesome!\" I typed as my hand began to tremble. \n\n\"Thank you! I'll call my brother John in a bit to see about getting you a job for the summer. Maybe you can be the one who comes by and takes care of things for me.\" ;o) \n\nI lay back on my pillow thinking \"I'm really going to need a box of tissues in here.\" \n\n\"Fifteen dollars an hour!\" mom exclaimed the next afternoon as I told her what the job offer was. \n\n\"Forty hours a week guaranteed plus at least ten hours in overtime. I did the math, that is over eight hundred a week between now and when school starts. He also said I could work after Labor Day if I wanted to drive home on the weekends. If it weren't for football season, I could make some serious cash working part time and sleep in my bed on Friday and Saturday nights.\" \n\n\"Cool,\" Dad said laughing, \"you can pay for your own classes now!\" \n\n\"Brandon!\" mom said in a tone that caused dad to throw both hands in the air. \n\n\"I was kidding! Besides, I'm kind of jealous of the lad. He is making good money to get to stare at bikini clad beauties all summer long. That's a dream job for a guy his age.\" \n\n\"Yes sir!\" I said smiling at him. \n\n\"MEN!\" mom said in a huff as she stormed out of the room. \n\nI climbed the stairs to my room and looking out the window I saw the boys playing in the pool, but Lauren wasn't present. Then I glanced at her house and just about passed out. She was standing in the master bedroom, on the ground floor and she was completely nude! She was looking down at the bed as if she was trying to decide something; then I saw her lift a red and blue bikini top up and look at them both side by side. \n\nGrinning, I fished my phone out of my pocket and quickly typed one word. \n\n\"Red.\" \n\nI hit Send and then stepped away from the window; a full minute passed before my phone chimed. \n\n\"LOL! Where the hell are you, Stalker!\" \n\n\"Watching a goddess getting dressed in front of an open window.\" \n\n\"Goddess huh? You win. Red it is. I hope you enjoyed the show; did you ninja any pics to remember it by?\" \n\n\"No.\" :o( \n\n\"Better luck next time Hun!\" ;o) \n\n\"Yeah.\" I thought sadly and then I walked downstairs to grab lunch and mow the lawn. \n\nAfter dinner Jennifer and I got dressed to go for a run. We both tried to do three to four miles a day to stay ready in the off season; occasionally we would do five if the weather was right. Tonight, the heat and humidity dictated a nice slow three. We were returning to the house about twenty-six minutes later when I saw a red Ford pick-up parked in Lauren's driveway. \n\nThe driver, who I assumed was Lauren's ex, was standing by the passenger door talking to her. Their boys were already in the truck and I could see them bouncing around excitedly. Lauren was looking down at the ground as her ex was talking and suddenly her head snapped up and we both clearly heard her say \"Screw you!\" Then she turned and stormed off toward the house. \n\nThe asshole was laughing as he shut the door and walked around the truck. He was still smiling as he climbed in it and drove away, but not before lowering his sunglasses and lewdly staring at Jennifer as he drove past our yard. She is only seventeen, but her body is very well developed. She was wearing a pair of running shorts and a sports bra and if you hadn't known how hold she was, you would have never guessed it. \n\n\"Perv!\" Jennifer exclaimed as he drove away. \n\n\"Yeah, I'm kind of glad he isn't living there. I'd hate to go to prison before I went to college.\" \n\nSmiling she looked up at me and said \"I love you Mark. You've got to be the best big brother ever.\" \n\n\"I try Jen.\" I said honestly as I looked at Lauren's front door wondering what he had said that had caused the outburst. \n\nAfter I showered I walked to my room and when I glanced down at my phone, I saw a missed text. \n\n\"I'm sorry you guys saw that. He was being a real jerk tonight.\" \n\n\"That's ok. I've seen worse.\" I replied, thinking back on some of the altercations I had seen between my friend's parents when they had divorced. \n\n\"You really are a sweet guy Mark. Some girl is going to be very lucky when she meets you.\" \n\n\"Thank you.\" \n\nI glanced out the window and couldn't see her anywhere. Laying back on the bed I waited for her response. When I didn't get one I took a guess and sent another message. \n\n\"Hey.\" I typed. \n\n\"What?\" \n\n\"Stop crying.\" \n\n\"LOL! Where are you now Stalker?\" \n\n\"In my room.\" \n\n\"How did you know I was crying?\" \n\n\"You were just in an argument with your ex. I took a shot.\" \n\n\"I was in an argument with my husband. The divorce isn't final yet.\" \n\n\"I hate semantics.\" \n\n\"I'm a paralegal, semantics pay my bills.\" \n\n\"Still hate them!\" \n\n\"Ok you're right. No more crying.\" \n\n\"Good. You're far too pretty to be crying.\" \n\n\"Aww, Thank you.\" \n\n\"You're welcome.\" \n\n\"So...\" \n\n\"So...\" \n\n\"Want to play a game?\" \n\n\"Sure, what's it called?\" \n\n\"Help the Neighbor.\" \n\nJumping to my feet I looked out my window and saw Lauren striding across her yard toward our house. It took all my self-control to walk downstairs instead of running. I timed it perfectly and had just gotten to the living room when the doorbell rang. \n\n\"I got it.\" I said, looking at mom, who was entranced in a new book. \n\n\"Thanks Mark.\" she said without even looking up. \n\nOpening the door, I looked at Lauren and smiling said, \"Hi!\" \n\n\"Hi yourself Mark! Do you know anything about garage door openers?\" \n\n\"Um, not really, why?\" \n\n\"Mine stopped working and I'm clueless about anything with a motor on it. I was wondering if you or your dad could come take a look at it for me?\" \n\nI glanced over at mom, who had put her book down and was walking toward the door. She looked at me and said, \"Mark! Where are your manners? Invite her inside!\" \n\nLooking at Lauren she added, \"I'm so sorry Lauren, I raised him better than this.\" \n\nLauren laughed and said, \"It's okay Michelle, I'm raising two of them, believe me, I know how boys are!\" \n\n\"I am so glad those days are behind me.\" Mom said smiling at her, then added, \"In a few years, they will both be gone, and I'll be looking forward to grandchildren.\" \n\n\"Gee Mom. Thanks.\" I said dryly. ",
        "\"Your dad is at the driving range; go on over and see if you can figure out what is wrong.\" Mom said turning back to the couch and her newest novel. \n\n\"Yes ma'am.\" I responded, then turning to Lauren I said, \"Lead the way.\" \n\nShe turned and walked back toward her yard with me trailing behind admiring the sway of her hips and the way her cutoffs appeared to be painted on her ass. I was thinking \"That dude is an idiot.\" before we had even made it out of our yard. By the time we got to her front door, I was convinced that legs and an ass like hers were the reasons that cutoff jeans were invented in the first place. \n\nWalking inside I glanced around and said, \"We just walked right past your garage.\" \n\nSmiling up at me she replied, \"And?\" \n\n\"The door was open.\" \n\n\"Yes, it was.\" \n\n\"So?\" \n\n\"So, I just wanted to see if I could be alone with you for a little while and not do anything stupid.\" \n\n\"Such as?\" I asked grinning down at her. \n\n\"Oh God! This is going to be more difficult than I thought.\" She responded. \n\n\"Why?\" \n\n\"Honestly Mark, do you really think I am that attractive?\" \n\n\"Well, Dad called you a MILF before I did, so, there's that.\" \n\n\"Really!\" \n\n\"Lauren, you turn heads from fifty-three down to nineteen.\" \n\n\"Your dad called me a MILF?\" \n\n\"Yep, the day we moved in; when you pulled up and we were standing in the yard.\" \n\n\"Wow! Ok. Um, that just boosted my ego a tad bit.\" She said with a dazzling smile on her face. \n\n\"What the Hell Mark? No balls, no Blue Chips.\" I thought to myself. \n\n\"Do you really want to know what I think?\" I asked her. \n\n\"Yes.\" \n\nI reached out and brushed the hair away from her cheek pausing for a moment as her eyes widened and her lips parted. Then I bent down and kissed her, smiling as I heard her gasp slightly when our lips met. I moved closer to her and ran my hands slowly down her sides as she wrapped hers around my waist. Resisting the urge to cup her ass, I simply let them rest in the small of her back. Pulling away from her, I looked into her incredibly green eyes and said, \"I think that if we had more than a few minutes, I could probably make you do something stupid.\" \n\n\"Jesus Mark.\" she said glancing down at the floor and then back up to me, \"I never meant for that to happen Honey. I know you must think I'm a tease, or worse, a slut. But I really didn't mean to lead you on; at least not like this. We have to stop this. Please?\" \n\n\"Okay.\" I said sadly, knowing full well that what might have been wasn't going to be, at least not this afternoon. \n\nThen, simply out of curiosity, I asked her, \"What did he say to cause you to react that way?\" \n\n\"He said that if I had taken better care of myself he wouldn't have gone looking for something else.\" \n\nI laughed. \n\n\"Gee, thanks.\" She said dryly. \"That helps.\" \n\n\"You have got to be kidding me?\" I replied as I walked toward through the kitchen and stepped into the garage. \n\n\"No, that's what he said.\" she answered, looking up at the ceiling and blinking back a tear in her eye. \n\n\"Fuck him!\" I blurted out then turned beet red, mortified at my choice of words. \n\n\"I'd rather not, if it is all the same to you Sweetie.\" she responded, laughing at the appalled look on my face when I realized that I had dropped an F bomb. \n\nFlipping the switch to the garage door I let it lower to the ground and then opened it. Turning around to make sure she was within my reach, I lowered it again and as the garage grew dark I reached out and pulled her to me. I ran my hands down her back but this time I did squeeze her ass; gently at first and then harder as I lowered my lips to hers. I listened to her moan softly as we kissed and I felt her body relax slightly; I reluctantly let her go and walked into the kitchen, with her following me. \n\n\"Did you enjoy that young man?\" she asked me with a smile on her lips. \n\n\"God no! I hated every second of it!\" I said grinning at her. \n\n\"You would be a lot more believable if you weren't grinning like a kid at Christmas.\" she replied. \n\n\"It was horrible.\" I said, stepping toward her and laughing as she held her hands out in front of her body and took a quick step back squealing, \"Liar!\" \n\nGrinning and taking another step toward her I asked, \"When is the last time someone chased you around the kitchen?\" \n\n\"It's been a while.\" \n\n\"Shame we don't have more time. I could find out how fast you can run.\" I said sitting down on a barstool at the kitchen island. \n\n\"I'm beginning to see that.\" She said, relaxing somewhat but stepping to the side to place the island between the two of us. \n\n\"My mother did her best to raise a gentleman Lauren. I'm going to take that as my reward for fixing your garage door and go on back home before we, as you put it, do anything stupid.\" \n\n\"Thank you, Mark. Your mother did a tremendous job; but a gentleman would never ask for a reward for helping his neighbor.\" \n\n\"Lauren?\" I asked pausing to wait for her reply. \n\n\"Mark?\" \n\n\"I didn't say asked; I said I took what I wanted.\" I said staring at her until a slow blush crept across her cheeks. \n\n\"Oh God! Maybe it is a good thing we don't have more time.\" she said, looking at me and shaking her head. I would have normally felt bad about being that cocky, but she was returning my stare with a playful smile on her lips. \n\n\"Goodbye Lauren.\" I said standing up and walking out of the kitchen, \"I'll see myself out.\" \n\n\"Goodbye Mark.\" She replied, watching me leave from the hallway to the kitchen as I opened the front door and headed back home. \n\nThe entire episode had, from start to finish, taken all of fifteen minutes and as I walked across the yard I realized that it would fuel quite a few late-night spank sessions. Damn that woman was a handful; literally, because her ass was a perfect fit for my hands. I was nineteen years old, I had just stolen a kiss, no, two kisses and grabbed the ass of the MILF next door; and she was smiling about it. \n\nLife was good. \n\nLater that night as I lay in bed watching TV my phone chimed and when I opened it up there was a text from Lauren. \n\n\"Still awake?\" \n\n\"Yes.\" \n\n\"Can I tell you a secret?\" \n\n\"Sure.\" \n\n\"I can still feel your hands squeezing my ass.\" \n\n\"And?\" \n\n\"I'm going to have to take care of something before I get any sleep. Think about that Stalker.\" \n\n\"I will. Goodnight Lauren.\" \n\n\"Goodnight Mark.\" \n\nA few minutes later I received a picture from her. She had arranged the sheets so that she was covered but it was obvious that she was nude. It was tasteful, classy, and it was damned hot. The caption beneath it said, \"Just to help you sleep and by the way, this is what I wear at the pool when the boys aren't here.\" \n\nDropping my head back to my pillow I moaned \"Oh fuck!\" and then grabbed my cock to 'take care of something'. I groaned so loudly when I came that Jennifer, whose room was directly beneath mine, knocked on my door a few minutes later and asked if I was alright. I lied and told her that I had twisted my ankle; her laughing response of, \"Okay. Sure!\" let me know that she didn't believe me. \n\nMy training week was the longest week of my life. I would have rather done two-a-days in the heat and humidity of July than repeat that week. By Saturday, I was sunburnt to a crisp and I had muscles hurting where I didn't know I had muscles. There is a vast difference in being in shape and being in shape to play football. I needed to gain weight that summer, instead I dropped ten pounds that first week. \n\nMy saving grace came from the fact that each night at eight, like clockwork, Lauren would send me a picture of some part of her body. It was like an erotic jigsaw puzzle that I could put together with my imagination. Monday, it was a picture of her right hip from the side. I could just make out the curvature of her ass laying on the bed. Tuesday's picture was her right leg cocked up with a book resting against her thigh, the book was shielding my view of her pussy and her left leg was stretched out full length on the bed. It was obvious that she was nude because there was a conspicuous lack of panties involved. By Wednesday I was mesmerized and on Friday night I got a picture of both her bare breasts. Not a full on frontal view; but the view I would have had looking down at them if I were standing in front of her. I was right about the piercings. \n\nWith each picture she sent me I made certain to compliment her. I was also sure that I didn't say anything crude or obnoxious either. The last thing I wanted to do was fuck this arrangement up. My phone was slowly becoming my own private MILF spank bank and the last thing any guy in my situation would do is piss that away. \n\nI woke up on Saturday morning, stumbled to the shower and then downstairs to grab some coffee and a bowl of cereal. I found a note on the counter telling me that Dad was at the golf course and that Mom and Jen had gone shopping in Knoxville and wouldn't be back until late that afternoon. So, I plopped down on the couch to watch TV and sat there thanking God that I had two days to recover before I really had to go to work. \n\nAround noon my phone chimed. Dad sent me a text telling me that he was playing a second round and wouldn't be home until four or so. I acknowledged it and then turned my attention back to the TV. The phone chimed a second time in as many minutes only this time there was a picture of a pair of incredibly long, tan legs held up in the air with a sparkling pool in the background. \n\n\"Having a wonderful time. Wish you were here.\" \n\nGrinning at the picture I responded with \"Be careful what you ask for Tease; you might just get it.\" \n\n\"Tease?\" \n\nThe next picture was one of her legs still in the air, only this time they were spread open with her left hand covering her pussy. \"Does this look like I'm teasing?\" It was clearly obvious that she wasn't wearing a bikini bottom. I started to walk upstairs and then thought, \"No, let's see how this pans out first.\" \n\n\"That depends on what your fingers are doing.\" \n\n\"They are having a wonderful time. Weren't you paying attention?\" ;o) \n\n\"You do realize I am at home, right?\" \n\n\"Really?\" \n\n\"Alone.\" \n\n\"Who is teasing whom Mark?\" \n\n\"Is that an invitation to come take a dip in your pool Lauren?\" \n\n\"Absolutely. I'll meet you at the gate to the back yard.\" \n\n\"Oh fuck!\" I thought to myself, \"This cannot be happening!\" as I started walking numbly toward her house. When I got to the gate I knocked on it and when it opened I stepped through. Lauren closed it quickly and smiling at me said \"Good morning Mark! So nice of you to drop by.\" \n\nShe was wearing a fluffy red cotton robe that was tied at the waist and I could tell from the cleavage on display that if she was wearing anything under the robe, it was tiny. \n\n\"Thank you for the invitation. Can I ask you something?\" \n\n\"Sure.\" \n\n\"Aren't you worried about your neighbors seeing into your yard?\" \n\n\"Nope! Thanks to the privacy fence, the only window with a view into this yard is yours and I don't mind a bit if you look all you want to. At least you appreciate what you see.\" she answered, looking me in the eyes when she said it. \n\n\"That I do ma'am, that I truly do.\" I said honestly. \n\n\"Let's go inside for a minute Sweetie, we really do need to talk.\" \n\n\"Okay.\" I responded, following her around the corner and into the patio door. \n\nLaruen walked to the fridge and reaching inside pulled out a bottle of water. She held it up offering it to me and when I declined she opened it and took a sip. \n\nShe paused for a minute and setting the water bottle down on the island she took a seat at the bar and said, \"One of our attorneys at the firm I work at; the one handling my side of the divorce told me, 'Lauren, I'm saying this as your counsel and not as your employer. Take a bungee cord and wrap it around both ankles; then take another one and wrap it around your knees until this thing is final. I don't care how rich, intelligent or good looking he or she is, don't sleep with anyone until you have a signed final decree in your hands.\" \n\n\"And yet here we are.\" I said becoming convinced that today was going to be another ride on the Blue Balls Express. \n\n\"Exactly. Here we are.\" she paused and then added, \"I just wanted you to understand the amount of trust I am putting in you to keep quite about this. John would disown me and then fire you if he ever got wind of it. Not to mention the damage it would cause if Ken found out.\" She said sincerely. \n\n\"Ken?\" then it dawned on me, \"Oh, never mind.\" \n\n\"Yeah, my husband, Ken. His attorney would have a field day if they thought I was having a fling with a nineteen-year-old, who was still in high school when this all started.\" \n\n\"I bet.\" then I added smiling at her, \"So we're a fling now?\" \n\n\"Do you see any bungee cords?\" \n\n\"No.\" I said as calmly as I could. \n\n\"You tell me.\" she responded with a wicked little gleam in her eyes. \n\nWalking up to me she reached out and took my right hand and placed it under her robe and against her bare breast. Then she lifted her arms around my neck and kissed me, all but backing me up against the wall as she did it. It took every muscle I had to stop her and hold her in place instead of backing up. \n\nGasping for air as we broke apart she asked me, \"How long do we have before your family gets home?\" \n\n\"Three, maybe four hours. Why?\" \n\n\"How many times can you do it in three, maybe four hours?\" \n\nLooking into a pair of green eyes while his hand is squeezing a warm soft boob can do wonders for a guy's self-confidence. \"Three, maybe four, depending on the motivation.\" \n\nShe reached up and removed my hand from inside her robe and still looking me in the eyes she tugged on the belt and let it slip off her shoulders and onto the kitchen floor. Her body was amazing. Her tits didn't really sag, they were still firm enough that they could still hold their own if she had entered a wet t-shirt contest. Her nipples stood out proudly, almost begging to be licked and they were accented by the stainless-steel studs. Her stomach was amazingly flat and toned and her waist was tiny compared to the flare of her hips. The area between her legs was shaved bare and looking at it I noticed a tiny glint of silver between her lips. It was obvious that she still took a lot of pride in her appearance. \n\n\"Clit stud too?\" I asked, trying to hide the tremor in my voice. \n\n\"I got them in on vacation in Pensacola this past May. Like it?\" she asked as she lowered her hand down and flicked a fingertip across it proudly. \n\n\"I love it. No tattoos?\" \n\n\"One. You'll see it in a few minutes.\" The impish grin she gave me spoke volumes. \n\nTaking me by the hand she led me to her bedroom and turning back the covers on the huge California King four post bed, she crawled onto it and then wiggled her index finger at me to join her. I sat down beside her and started to remove my shirt when she said \"No! That's my job.\" then she wrestled it over my head. Dropping it to the floor she ran her hands over my chest for a few seconds, then she looked at me and whispered, \"Lay back.\" \n\nDoing as she instructed I almost came in my pants as she leaned over me and slowly began to lower her breasts to my lips. Just when I thought I would be able to lick one, she would laugh, move them away for a second and start all over again. While she was teasing me, she was also running her hands up and down my abdomen and chest, pausing every now and then to dig her nails in sharply. I'd finally had enough and when she lowered herself to me the third time I reached up and pulled her down. \n\nI was done being teased. I had been teased all week long. Now I was here to take what she had been showing me, her body. \n\nLauren moaned as flipped her onto her back and placed my hand between her legs spreading them apart. She gasped sharply when my fingers started rubbing the lips of her pussy and she sighed as I lifted my hand to her lips. She was in the process of licking my fingertips clean when I gently slapped the inside of her right thigh. \n\nI simply said, \"Wider.\" then smiled in satisfaction as I felt her comply by opening her legs a bit further. Knowing that I had room now I slowly began kissing my way down her body as the fingers of my other hand worked on her clit. I had yet to put a finger inside her because I wanted her dripping by the time my mouth went to work on her. \n\nPausing and looking up at her I saw her eyes were closed and her lips were parted. Her chest was heaving up and down with her breathing and she had the sheet clinched in both her hands. Her hips were bucking up and down to the rhythm of my fingers working on her and her ass was slowly beginning to raise up off the bed. I slowed down the tempo of my fingers and again, I gently spanked the inside of her right thigh again and whispered \"Wider.\" \n\nLowering my head, I ran my tongue softly across her clit and paused to ever so gently pull on the stud as I slid a finger deeper inside her. Her moan filled the bedroom and then she settled back down and began to slowly grind against my hand. I moved lower, so I could really begin to eat her pussy and that is when I saw her tattoo. Three simple words on the very top of her inner right thigh, written in a flowing script no more than a quarter of an inch tall. You would never see it if she were wearing a bathing suit or panties unless you were looking at it from this angle. \n\n\"Come to Momma\" \n\nLowering my mouth to it I ran the tip of my tongue across the tattoo. I pulled my head away and said, \"So is this a request or a demand?\" as I traced it with a fingertip. \n\nShe didn't speak or open her eyes to look at me; she simply smiled and arched her back as she tightened her grip on my hair. Grabbing the back of my head, she moaned softly as she forced me to go back to work on her pussy. I slid a second finger inside her and without giving her a chance to protest, I slipped the tip of my pinky into her ass as I began to suck on her clit. \n\nFive seconds later she came so hard I thought she was going to hurt herself. I lay there beside her waiting for her to say something. After a full two minutes her body was still shuddering, and she had yet to open her eyes. When she finally did, she looked over at me and said \"Wow!\" \n\n\"That's it?\" I responded. \"Wow!\" \n\n\"Wow!\" \n\n\"So, I did okay?\" \n\n\"Wow!\" she said grinning broadly at me. \n\n\"Pretty good for a guy who still has pants on huh?\" \n\n\"Not for long Sweetie.\" She whispered as she closed her eyes again. \n\nI reached down and began to unbuckle my belt when she slapped my hand away. \"That's my job Mark. You just lay back and I'll take care of you.\" \n\nPushing herself up off the bed she smiled at me and then began tugging my shorts past my hips she paused as my cock came into view. She licked her lips and then slowly ran her tongue over the head. When I groaned she smiled and then engulfed about half the length before she began to gently suck on it pumping the remaining length with her hand. I was in Heaven for about three minutes, then she stopped suddenly and sat up. She finished removing my pants then lay back on the bed. Opening her legs widely, she looked up at me and said, \"You read the instructions Baby.\" \n\nI slid between her open legs, and holding myself above her I looked into her eyes for a moment before I lowered my body to hers. She sighed as my weight settled on her and then whimpered slightly as she felt the head of my dick slip between the lips of her pussy. I stayed still and felt her shifting beneath me desperately trying to pull me inside her. I pushed slightly as she wiggled around and felt a couple of inches slip into her. ",
        "\"Oh God yes.\" she whispered in my ear. \"That's it, that's what I want.\" \n\n\"Momma wants a hard dick?\" I whispered back as I pushed deeper still inside her. \n\n\"Yes!\" she hissed. \n\nPulling out until just the tip was inside her I eased in slowly again then whispered, \"Like this? Is this what you want Lauren?\" \n\n\"Yes.\" she said, shuddering and raking her nails across my back. \n\nI pulled out again and then said, \"Open your eyes and look at me.\" \n\nBiting her lower lip, she opened her eyes and looked up at me. I held her gaze as I slowly began to pump in and out of her. Small whimpering sounds were coming from her as I increased the tempo with each stroke. I felt her start to shake beneath me and she started to close her eyes as a small orgasm went through her. \n\n\"Better?\" I asked. \n\nShe lay there beneath me quivering and smiling, then she nodded her head slowly. \n\n\"Good, because we are just getting started.\" I said dropping my full weight on top of her, pinning her to the mattress. I smiled in satisfaction as I heard her moan \"Oh fuck!\" when I sank the full length of my dick inside her with one swift thrust. \n\nIt was ten minutes later when I finally came deep inside her. Not knowing if she was on birth control I tried to pull out, but she wrapped her legs around my back and held me to her. I groaned as I felt her pussy convulsing around my dick and her nails digging into my shoulders. She was sobbing beneath me and for a moment I thought I had hurt her, then I heard her whisper, \"God yes, all of it. Give it to me. I want all of it.\" \n\nYeah, you know what? A girl my age can have a much tauter body, but most are clueless about how to use it or what they want when it comes to sex. Lauren knew exactly what she wanted, and she wore my ass out taking it from me. She was as gentle as she was aggressive in giving me instructions on how to please her and by the time we finished the first round I had worked up a sweat. \n\nLying in bed beside her I was softly stroking her hair when I blurted out, \"When did you guys split up?\" \n\n\"Just over five months ago; right before Valentine's Day. By the way, this isn't what I expected for pillow talk after our first time together.\" \n\n\"Yeah? Well, inquiring minds want to know. What caused the it?\" \n\n\"I wanted a career, children and a family. He wanted an eighteen year old Hooter's waitress in Cleveland named Crystal.\" she said softly. \n\n\"His loss: my gain.\" I said as I moved my hand to her right breast, squeezing it so firmly that she gasped. \n\n\"Ya think so?\" she asked moaning as I softly pulled on the stud in her nipple through the sheet. \n\n\"Like those huh?\" she said, half moaning and half laughing now. \n\n\"Very much.\" \n\n\"I think I screamed so loudly when they pierced my clit that they heard me in the parking lot.\" \n\n\"It's hot enough that you should think it was worth the pain.\" I said leaning over and kissing her softly. \n\n\"You think so? You're the first man to see them.\" \n\n\"I know so.\" I said moving my hands down her ribs, over her waist and resting them on her hips. \n\n\"So,\" she said then looking at me added, \"my husband is banging a chick your age and you get stuck with the broken-down wife and mother.\" \n\n\"Stop fishing for compliments Lauren. It's not your style.\" I replied. \n\n\"Oh yeah? What is my style?\" she replied, rolling on to her side and looking me in the eyes. \n\n\"Walking into a room and turning on every man and half the women in it.\" \n\n\"Only half?\" she giggled. \n\n\"Still fishing?\" \n\n\"I guess so. Some things are hard on a woman's ego; but half is okay, I don't chase skirts anymore.\" she whispered. \n\n\"Anymore?\" \n\n\"Not since college.\" She said and then smiling she added, \"Shocked?\" \n\n\"No. Beautiful women can pick and choose their partners.\" \n\n\"Beautiful?\" she asked. \n\n\"Have you seen yourself in a mirror lately Lauren?\" \n\n\"This morning. Why?\" \n\n\"Then you got a good look at the cougar that I am going to spend the next three months hunting.\" I said \n\n\"Mark?\" \n\n\"Yes?\" \n\n\"Be very careful what you ask for Sweetie, you might just get it.\" \n\n\"I'm counting on it.\" I said lowering my head to her chest and nuzzling her nipple with my cheek as my fingertips strayed slowly toward her wet pussy. \n\n\"Really?\" \n\n\"Right now, if you let me.\" \n\n\"Oh God.\" she moaned as she rolled on to her back and spread her legs. \n\nAfter the second round I was sitting on the side of the bed getting dressed when Lauren stepped out of her bathroom wearing her usual attire of a pair of cutoffs and a t-shirt. Glancing at the alarm clock on the table beside the bed I didn't think the thirty minutes I had left would be enough time for a third go at her: considering we were both dressed at this point. \n\nI was wrong. \n\nWe walked to the front door and reaching for the knob I stopped and turned to give her a kiss that ended up with her pinned to the wall and both of us panting heavily when we broke apart. \n\n\"Good God! I am acting like a world class slut!\" she exclaimed. \n\n\"It's a good thing you are dressed, or I might say something that would cause me to be late getting home.\" \n\n\"Such as?\" she asked with a devilish gleam in her eyes. \n\n\"Take off your shirt.\" I said, pulling my phone out of my back pocket. \n\n\"What?\" she asked, sounding confused. \n\n\"That off your shirt Lauren.\" I replied, hopefully sounding more confident than I felt. \n\n\"Why?\" \n\n\"So, I'm not jacking off to a selfie when I go to bed tonight.\" I responded. \n\n\"Oh God!\" she moaned as she reached down and lifted her shirt over her head. \n\nHer breasts were covered by a black bra that was lacy and feminine and very full. Shaking her head to let her hair fall back into place she looked at me and smiled. Then, staring me in the eyes, she reached behind her back to unhook it. \n\n\"Wait.\" I said, holding my phone up and snapping a few pictures of her with the bra on. \n\n\"You like the bra?\" she asked me, grinning as she slid the right strap off her shoulder, pausing and blowing me a kiss over her shoulder as I snapped another picture. \n\n\"Love it.\" I answered honestly as she unhooked it and caught it by holding her arms against her breasts. Then smiling at me she lowered her arms and it fell to the floor. \n\n\"How about now?\" she purred. \n\n\"It looks a lot better on the floor.\" I said laughing and quickly taking a few more pictures before I switched from picture to video and began recording as she was talking to me. \n\n\"So, my stalker is going to jack off tonight to my tits with pictures that he took?\" \n\n\"Yes, he is.\" I replied. \n\nWalking toward me she lifted the right one then lowered her mouth to it, and running her tongue over the nipple she said, \"And when he cums, is he going to be thinking about that?\" \n\n\"Yes, he will.\" I replied. \n\nPulling at her nipples she said, \"They are so sensitive when I get turned on like this. Sometimes I can almost cum just playing with them.\" \n\n\"You're getting that turned on again huh?\" \n\n\"I'm not wet Mark; I'm gushing.\" \n\n\"Prove it.\" I said trying to control my breathing. \n\nShe paused for a minute as if she was unsure of what to do and then she slowly shaking her head and smiling up at me, she unbuttoned her cutoffs. Sliding her hand down the front of them she moaned and then pulled her hand back; her fingers were drenched with our juices. Slumping back against the wall and spreading her legs further apart, she ran her hand back inside her shorts and began to play with herself. It didn't take long at all before she tensed up and then whimpering she said, \"Oh fuck Mark, I'm cumming again!\" \n\nI kept the camera pointed at her recording the entire scene and thinking to myself that my life couldn't get any better. I was wrong. Without saying a word, she walked to me and dropped to her knees. Reaching out she unzipped my pants and then simply took my cock in her mouth and began giving me the most forceful blowjob I ever received; to this day. She attacked my cock, taking it down her throat like it was nothing. \n\nI lasted about two minutes before I came violently. Groaning, I let the phone fall to the floor and grabbed the back of her head to keep as much of my cock as I could inside her warm mouth for as long as possible. After a few seconds I released my grasp and as she was standing up she grabbed my phone. Looking at it, she burst out laughing. \n\n\"You recorded that?\" \n\n\"Yes ma'am.\" I said reaching out and taking my phone from her. \n\n\"Oh God!\" she laughed, \"I'm thirty-seven and I just made a porn movie with my teenaged neighbor for him to jack off to!\" \n\n\"Lauren with a body like yours, you could make a porn movie at fifty-seven that your teenaged neighbor would jack off to.\" \n\nPlacing her hands on her hips she glanced down and said, \"I don't know if my body will hold out that long, but thank you for the compliment. Do you know what the sad thing is?\" \n\n\"What?\" \n\n\"This is the second time I've done something like this.\" \n\n\"Yeah?\" \n\n\"Yeah.\" She said as her shoulders slumped as she reached down to grab her shirt. Pulling it on over her head she added, \"I made a masturbation video for Ken once and when I sent it to him, he never responded back to it. When he got home that night, he called me a whore and complained that I had disrupted a meeting with an important client.\" \n\n\"He's a fucking idiot.\" This time I didn't blush dropping an F Bomb in front of her. \n\n\"Thank you, Mark. You have no idea what that means to me.\" She said it so softly I wasn't sure I heard it correctly. \n\n\"Huh?\" \n\n\"When Ken left me, he was cruel about it. He flaunted the fact that he was leaving me for a much younger woman. He used every flaw on my body as a reason to hurt me more.\" Her tears were flowing in earnest now and it was pissing me off that she had been hurt like that. \n\n\"What flaws?\" \n\n\"Huh?\" she asked me, appearing confused by the question. \n\n\"What flaws did he point out?\" \n\n\"My stretch marks for one.\" She said sniffling. \n\n\"These stretch marks?\" I asked lifting the hem of her shirt up and running my fingertips across them. \"Those show your experience. What else did he point out?\" \n\n\"My boobs sag.\" \n\n\"These boobs?\" I asked, sliding my hands up her body until I had uncovered her breasts. She sighed as I cupped them both in my hands, then yelped as I leaned down and kissed each nipple. \n\n\"Sensitive!\" she squealed as she tried to wiggle away from me laughing and sniffling at the same time. \n\n\"What else?\" \n\n\"Do we really have to play this game Mark?\" she asked seriously. \n\n\"I'll stop playing when you come to the realization that what he said to hurt you is what I find intriguing and sexy.\" \n\n\"Baby, for a guy who is so young, you are a dangerous man.\" She purred, looking up at me and smiling. \n\nGlancing down at my phone I said, \"I'm also late!\" I need to get back home!\" then giving her a quick peck on the lips I added, \"I'll call you tonight instead of texting. Is that okay?\" \n\n\"Please do.\" she replied, grinning at me. \n\nI smiled and then slipped out the door; walking across the yard to my house I realized immediately that this episode was going to be one of many that summer. Lauren just needed a confidence boost and the cougar in her would really take over and I was the lucky bastard that got to give it to her: literally and figuratively. \n\nMom's plan for renovating the house was simple. Gut it, drive dad crazy picking out wall paper and paint, replace every appliance and put hardwood floors down in every room. Dad's plan was a bit more simplistic; he agreed to everything and stayed at work or at the golf course as often as he could. Mom told me that my room would be done the week after I left for school and I casually mentioned it to Lauren later that night while we were on the phone. \n\n\"So why are you telling me?\" she asked. \n\n\"I looked at a calendar and you don't have your boys that week. I thought you might want to know that there will be two or three men in my room with a perfect view of your pool.\" \n\n\"I guess they will get an eyeful huh?\" she giggled as she said it. \n\n\"Nah, you're a world-class tease but I don't think you'd let just anyone have a free peek.\" \n\n\"Tease? Really Mark? After what we did this afternoon; you're calling me a tease?\" \n\n\"I have a question for you.\" \n\n\"Yes?\" she replied. \n\n\"Are you always that responsive in bed?\" \n\n\"Pretty much. It's been over nine months since I've had sex so that might have been part of it. Honestly though, you seem to have a knack for finding all the right spots.\" \n\n\"Give me some time and a few more instructions, I'll give it my best shot at finding the rest of them.\" I said, meaning every word of it. \n\n\"Be careful what you ask for Lover, I've got a few secrets that might shock you.\" \n\n\"Such as?\" I asked, grinning up at the ceiling. \n\n\"You'll find out, eventually. It's late and I need to go to bed.\" \n\n\"Yeah, me too. I'll talk to you tomorrow. Goodnight Lauren.\" \n\n\"Goodnight Mark.\" \n\nI hung up and rolled over thinking about the past few days. If my first two weeks in this town were any indication of what I had coming, the rest of the summer was going to me awesome. I just had to play it cool and not do anything stupid for a couple of months before I left for school. \n\nIt was the day after Jen's eighteenth birthday party that my entire world came crashing down. \n\nMom was walking through the kitchen on Sunday morning when she tripped and fell, knocking herself out cold. We rushed her to the ER and after about an hour or so, the doctor appeared in the waiting room and motioned for Dad. They disappeared and when Dad returned he had a very somber look on his face; the MRI had detected a growth on Mom's brain stem. \n\nThe news was devastating. The next few weeks were a living nightmare that we couldn't escape, with every day bringing more bad news. The tumor was inoperable and was also a very aggressive form of cancer. The best-case scenario was that Mom would have four to six months; the worse-case was that she would have two to three. I had a fifty/fifty chance of spending one last Christmas Day with my mom. \n\nWhen I casually mentioned that I was thinking of delaying school to stay home and help take care of her, you would have thought that I had mentioned I was going to marry a porn star. Mom sat me down at the kitchen table and brought me back to reality in short order. \n\nNot mincing her words, she said, \"Mark, you will go to college in September; that is non-negotiable. I have your dad and Jennifer here to help me. You can always come home on the weekends to give them a break and let your dad run off and play golf. But you are going young man, do you understand me?\" \n\n\"Yes ma'am.\" Half grinning at her I started to say, \"I don't have to like it, but I have no choice.\" \n\n\"No Sweetheart.\" Mom interrupted me, \"You're are the adult now and it is time you started acting like one. Your dad and I raised you into an incredible young man who is capable of doing anything you set your mind to. All I want is for us all to enjoy what little time I have left.\" \n\n\"Yes ma'am.\" \n\nStanding up, Mom looked down at me for a moment and then ran her hand across my cheek. Smiling sadly, she leaned down and kissed the top of my head and whispered, \"I love you Mark.\" Then she turned and walked out of the kitchen, leaving me sitting at the table with tears streaming down my face. \n\nI have no idea how long I sat there lost in my thoughts. I heard the kitchen door open and Jennifer walked in talking to someone on her phone; she took one look at me and without saying goodbye, she hung up. Placing her purse on the counter she walked over and slipped onto my lap. Wrapping her arms around my neck she rested her head on my chest and sat there holding me. \n\nEventually I stopped thinking about mom and began thinking about the closeness Jen and I had always shared. She was one of my anchors, and always would be. Even though we got under the other's skin in the worst way on some days; she was always there for me and I would always be there for her. \n\n\"Thank you.\" I said quietly, almost afraid I was spoiling the moment by speaking. \n\n\"For what?\" \n\nI lifted her chin until I could see her face then I kissed the tip of her nose. \n\n\"For being you.\" \n\nHer smile lit up the room. \n\n\"Sentimentality? From you? You must really be upset.\" she said. \n\n\"I was, but I'm better now that my girl is here.\" \n\n\"Your girl?\" she gasped softly. \n\n\"Always Jennifer.\" \n\nShe looked at me for a second and then snuggled her head back to my chest, shifting her hips slightly she said, \"Am I too heavy for you?\" \n\n\"Nah, but you seem to have packed on a few pounds over the summer. You should have laid off the cake and ice cream at your party.\" \n\nShe her head snapped up and she slapped my chest. \"Dick!\" she said playfully. \n\nSmiling, I wrapped my arm around her and stood up. Jennifer squealed as I tossed her over my shoulder and started walking toward the living room. She was slapping my back and kicking her legs by the time we got to there. Mom was sitting on the couch talking to dad when we burst in on them. They both looked up with surprised looks on their faces and mom started laughing. \n\n\"What in the world are you two doing?\" she asked. \n\n\"Og find woman. Og trade for cow.\" \n\n\"COW?\" Jennifer screamed and began slapping my back again. \n\n\"Mark, put your sister down.\" Dad said, laughing for the first time in a week. \n\n\"Got cow?\" \n\n\"No.\" Dad responded. \n\n\"Og keep wench.\" \n\n\"WENCH!\" Jennifer squealed. \n\n\"How about two goats?\" Dad asked laughing loudly. \n\n\"GOATS! I hate you both!\" Jennifer yelled from behind my back. \n\nLowering her gently to the floor I looked at Dad and said \"Deal! She was getting heavy anyway.\" \n\n\"Hate! So much hate!\" Jennifer said, smiling up at me, red faced from being held upside down for so long. \n\nMom just sat on the couch, looking at us, shaking her head and smiling. It is a memory I will always have, and as silly as it is, I'm damn glad I have it now. \n\nOn Saturday Lauren called me and told me that she had received her final divorce decree and the next day I was mowing the front lawn when her, now ex-husband, pulled into the driveway to pick up the boys. The windows were down in his truck and he had a very young blonde sitting beside him with her feet up on the dash. From what I saw, she was extremely attractive and barely legal. He honked the horn and the boys flew out of the house and climbed into the truck and as soon as they were settled in he backed out and drove away. \n\nMom and Jennifer were at the mall and Dad was at the golf course, so I shut the mower off and walked over to Lauren's. I stood on the porch for a minute and then rang the doorbell. Lauren opened the door with tears streaming down her face. She looked at me and shaking her head she began to close the door. I put my hand out to stop her and then stepped quickly inside. \n\n\"He brought that little bitch here.\" she said, looking down at the floor. \n\n\"I know. I saw her too. That's why I came over, I knew you'd be upset.\" \n\n\"He brought her to my home.\" She responded. \n\n\"I would hug you but I'm all sweaty.\" I said, hoping it didn't sound as lame to her as it did to me. \n\nShe looked at me and then said, \"Come on into the kitchen and I'll get you something to drink.\" \n\n\"Thank you. I could really use some water.\" I said, following her into the kitchen. \n\nShe handed me a bottle of water and then said, \"I am going come over later today and talk to your mom. I wanted to tell her that I will help out as much as I can.\" \n\n\"Thank you, I'm sure she will appreciate it. She should be home in an hour or so.\" I said. \n\nShe paused and then said, \"What is wrong with me Mark?\" \n\n\"Huh?\" \n\n\"I have finally come to grips with the fact that Ken is gone, but why? What is wrong with me?\" \n\nArching my right eyebrow and letting my gaze run slowly up and down her body, I smiled and said, \"You're not naked?\" ",
        "\"God!\" she said, smiling up at me. \n\n\"Seriously Lauren? There is nothing wrong with you. He is an asshole and that little scene was nothing except high school theatrics played out to hurt you. Do you really think she is going to be a permanent part of his life? She will be gone by Christmas.\" I said. \n\n\"Do you think so?\" \n\n\"Yeah. Once he gets tired of his new play toy he will cut her loose and go find another.\" \n\n\"Like you will me?\" she said softly. \n\n\"Nope, you chased me down, you're the one who will cut me loose one day.\" I said, fully believing it. \n\n\"Then what?\" she asked. \n\n\"We will stay friends.\" I said and then grinning at her added, \"Hopefully with benefits.\" \n\n\"God!\" she said shaking her head and smiling. \n\nI stood up and walked over to her. Taking her shoulders in my hands I looked down at her then bent over and gave her a gentle kiss. She sighed as I pulled away and said, \"Thank you Mark.\" \n\n\"For?\" \n\n\"Making me believe in myself again.\" \n\n\"Anytime Lauren, but I'm going to be a bit miffed when you dump my ass for one of the attorneys at your firm.\" I said chuckling. \n\n\"Like that will happen.\" she said laughing. \n\n\"Walk in to work tomorrow wearing the outfit you had on the day I met you. Drop a pair of bungee cords on your attorney's desk, wink, blow him a kiss and walk out. I'll be a pleasant memory by Halloween.\" I replied. \n\n\"Oh! Now there's an idea!\" she said grinning then she paused and added, \"Hey! Are you trying to get rid of me?\" \n\n\"No, I'm trying to get rid of your clothes, apparently I need to step up my game.\" \n\n\"No, you don't.\" she said as she began pulling her t-shirt over her head. \n\nWe didn't have much time, so as soon as she wiggled out of her shorts I picked her up and carried her to the kitchen table. I sat her down, hearing her yelp in surprise as her bare ass hit the cold wood surface. I pulled a chair out, sat down, spread her legs and began lapping at her pussy like a hungry kitten would attack a bowl of warm cream. Within seconds her fingers were in my hair, her head was tossed back, and she was moaning. \n\nWhen her first orgasm rolled through her I stood up and pushed her back on the table. Pulling her hips toward me I reached down and dropped my shorts to the floor. She was literally panting when I rolled her over on her stomach and eased the head of my cock inside her. Grabbing the sides of the table she began to thrust back to meet me stroke for stroke. I lasted less a minute before I unloaded deep inside her. \n\nStepping back, I reached down and pulled my shorts back up. Lauren rolled over with a strange look on her face and asked, \"That's it? Wham, bam, thank you ma'am. Then you leave me laying here, legs spread open like I'm your personal slut; dripping your cum onto my kitchen table?\" \n\n\"Exactly.\" I said, reaching out and running my right index finger up her pussy, pausing and pulling softly on her piercing. \n\n\"Really?\" she asked hotly. She really seemed to be getting upset by it. \n\n\"Until later tonight.\" I said. \n\nRaising up on her elbows she asked, \"Yeah? What do you think will happen later tonight Mister?\" \n\nI began fingering her pussy in earnest, putting two fingers inside her with my thumb working on her clit. She was just beginning to move her hips when I leaned down and whispered in her ear. \n\n\"I'm going to come back over here, walk through your front door like I own the place, blindfold you, take you into your bedroom, tie you to the bed posts and keep you there until one of us can't walk.\" \n\nI pulled my hand away from her and walked off. When I got to the kitchen door I turned to looked back. Lauren was still half sitting up on the table; her head was thrown back, and she was furiously working on her pussy with her right hand. I smiled and walked out of the house. \n\nTrue to her word, Lauren knocked on our front door about an hour later. She, mom and dad sat in the living room talking for over an hour. I wish I had been invited to sit in on the conversation, but I wasn't, so I headed to the garage to do an oil change on my car. \n\nMy car is my baby and I take better care of it than I do myself. Jennifer has always said that if I had to decide between having a sister or having the car that she would be sitting on the curb before she could pack a bag. I wouldn't go that far but there weren't that many 1968 Pontiac GTOs on the road these days either. I raised the garage door to get let more light in and went to work. \n\nI was laying on the creeper under the front end of the car when I heard a soft cough. I scooted out and laughed when I realized that I had scooted out between a pair of long tan legs. I looked up to see Lauren standing over me, looking down with her hands on her hips and smiling at me. \n\n\"Young man, you are a handful.\" she said laughing at the grin on my face. \n\n\"I do my best.\" I said confidently and then added, \"I don't remember hearing you complain all that much earlier though.\" \n\n\"Who had time to complain?\" \n\n\"You had the chance to when I left.\" I said, grinning up at her. \n\n\"I was busy.\" she responded. \n\n\"I noticed.\" \n\n\"I bet.\" Then looking around quickly to make sure no one was watching, she pulled the right leg of her shorts aside and flashed me a brief glance at her tattoo. \n\n\"Is that a request Lauren?\" I said, smiling up at her. \n\nWinking at me she said, \"See you later tonight if you think you can pull it off.\" \n\n\"Leave your door unlocked and watch.\" \n\nShe did. That's it, that's the description, except to say that try as I might, I was the one who had trouble walking the next day. \n\nMy first semester at school was a whirlwind. I had promised myself that nothing was going to come between me and the GPA I needed to play football. It had already taken some fast talking to enroll here to begin with because my high school GPA was so dismal. I wasn't going to get another chance, so I buckled down and got to work. The upside was that by the Winter Break I had a 3.24 GPA; the downside was that I was perpetually horny because I had intentionally limited my trips back home to twice a month. Only three of them had resulted in timing that allowed me to be alone with Lauren. Crudely put, I needed to get laid. \n\nAs sick as she was, Mom was determined to have a special Christmas this year. The tree was huge and had been, under Mom's supervision, professionally decorated this year; the entire house had, from the lights outside to the garlands and wreaths inside. When I saw it for the first time, lit up at night, I was speechless. Sadly, that wasn't the only thing that caused me to become speechless when I got there. \n\nJennifer had warned me that Mom was looking worse and worse each day, but nothing really prepared me for what I saw when I got there. She was basically a walking skeleton and she struggled to make it across the living room to her bedroom. It hurt like Hell watching her struggling like that. Just a few short months ago she had been so full of energy and life and now: this. It sucked, but she had made it to Christmas. \n\nChristmas morning was fun, sad and a living testament to Mom's will to live her remaining days to their fullest. Jennifer made breakfast for us after we had opened our gifts and we sat around the living room reminiscing about Christmases past. The gifts we had received; good and bad, the fun we had and the memories we made. \n\nI gently broke the news to everyone that I had a date for New Year's Eve and wouldn't be here. Mom said that it was fine because she wouldn't be staying up anyway. Jennifer perked right up and said that she would make plans as well. Yes, we were sad knowing that Mom wouldn't be here next year, but she refused to allow our grief to kill the spirit of the holidays. \n\nMy \"date\" of course was Lauren. I was planning on sneaking over to her house after the sun went down and not leaving until right before it came up on New Year's Day. Strangely, for once, my plans came to fruition. I got there a little after six that evening and left a little after six on New Year's Day with a grand total of four hours sleep for the night. \n\nThe highlight of the evening came about a half an hour before midnight when Lauren got out of the bed and returned a few moments later with a set of ropes that had thick leather cuffs on the ends. Sitting silently on the bed she attached the cuffs to her ankles and then to her wrists. Rolling on to her stomach, she reached out and stuffed two of the pillows under her hips and looking over her shoulder at me said, \"Tie me to the bed posts.\" \n\nAfter I had finished she said quietly, \"Do you remember me telling you that I had secrets that might shock you?\" \n\n\"Yes.\" I replied as I tied her left leg to the post. \n\n\"Good. The lube is in the top drawer of my bedside table. Tonight, my ass is yours Mark, literally. Just go slow, and be gentle, it has been a while.\" \n\nGlancing between her legs, after I had tied her right leg to the bed, I saw the lips of her pussy separated and glistening with her juices. I reached out and ran my middle finger from her clit to her ass and slowly pressed against it until I felt the tip begin to sink inside her. I paused when she groaned and removed it and then secured her arms. \n\nI made sure to take my time and use a lot of lube as I began to work on her ass. By the time I had two fingers in her she was panting and asking me when I was going to stop teasing her and use my cock. When I did slide it into her, she groaned loudly, and I gave her a minute to adjust. After a moment, she started moving her hips and I began to pump into her, grabbing her hips for support. \n\nI was gasping and trying to control my breathing and keep from cumming when her first orgasm hit her, and she began to buck and scream. I gave up any hope of not cumming and simply grabbed her hips and began to pump her ass hard, ignoring the grunts and groans coming from her throat and mouth. When I did cum, I collapsed on top of her and lay there, pinning her to the bed with my weight as my dick softened inside her ass. \n\nWe lay there together for what seemed like an eternity and when I did pull out, she whispered \"Happy New Year Baby.\" \n\n\"Happy New Year Lauren.\" I said, reaching for the rope on her right wrist. \n\n\"Not yet Mark.\" \n\n\"Huh?\" I asked, slightly confused. \n\n\"There is one more thing for you to do.\" \n\n\"What?\" \n\n\"There is a ping-pong paddle in the top dresser drawer. I was kind of naughty last year and I need a good spanking to start the new year out with a clean slate. Would you care to do the honors?\" \n\n\"How naughty were you Lauren?\" I asked, retrieving the paddle. \n\n\"I spent a lot of time this past year flat on my back, with my legs spread wide open while a man that is young enough to be my son filled every hole I have with cum. Is that naughty enough for,\" \n\nThat was when I landed the first blow on her left ass cheek. Some were hard, some were soft, and some were with my bare hand. I settled for twenty-eight on each cheek. That totaled fifty-six, so she got one for each year of our combined ages. Her ass was a nice shade of rose red when I finally untied her. \n\nRolling onto her back she flinched when her ass hit the cold sheets and then she snuggled in next to me and said \"Ok, that was a bit more than I bargained for but God it was hot!\" \n\n\"Anytime.\" I said smiling up at the ceiling. \n\n\"Special occasions only.\" \n\n\"Yes ma'am. Now tell me which dude I have to kill in this neighborhood.\" \n\n\"Please don't. I may have one more chance to get another load out of him tonight.\" she whispered, sliding her hand down my stomach. \n\n\"I'll see if I can restrain myself.\" \n\nI did and so did she. I left for school on January 3<sup>rd</sup>, with some very fond memories to help me get through the rest of the month. \n\n\"Mark, you need to get home now! Mom has taken a turn for the worse and the nurses are saying it is a matter of hours not days.\" Jennifer sobbed into the phone. It was January the 10<sup>th</sup>, I had been back at school for a week. \n\nI had told each of my professors about the situation we were facing back home, and they were all sympathetic about it. I still got an angry look from my Algebra professor when I took a call in her class but when I looked at her and then grabbed my books and started to the door she nodded her head knowingly and continued with her lecture. I hurried to the parking lot and climbing into my car I backed out and headed home. \n\nParking lot to parking lot from my campus to the hospice mom was in was 65.3 miles. It took me forty-two minutes to get there. I walked down the hallway, moving with such a single-minded purpose that I didn't notice the staff and nurses scampering like mice to get out of my way. \n\nI walked into the room and saw Dad, Jennifer, my Aunt Beth, her husband Darrell and strangely, Lauren. Dad was standing by the bed holding mom's hand, Beth and Darrell stood together in the corner and Jennifer had her head on Lauren's shoulder crying softly while Lauren stroked her hair. \n\n\"Am I too late?\" I asked, terrified that I was. \n\n\"No. She is still here, but just barely.\" Dad said softly, never taking his eyes off mom's face. \n\nI walked toward the bed, cursing at God and all the Saints in Heaven for making me do this. I stared down at the woman who had given birth to me, who had sacrificed for me, who had held me when I was sick and scared and who had beamed with pride at my accomplishments and I cursed. I looked down on the cancer stricken body in front of me and I cursed. Then I saw my mother's face and I cursed the tears I felt falling from my cheeks. \n\nHer eyes were closed, and she was still breathing lightly. It was almost impossible to see the rising and falling of the blanket that covered her body. Her blonde hair was spread out on the pillow beneath her and I wished, just one more time for the chance to look into the blue eyes that Jennifer had inherited, and I cursed. \n\nI gently took her other hand in mine and squeezed it softly. Then I leaned over her frail form and whispered in her ear, \"Mom, it's Mark, I'm here now. It's okay, you can go Home. I love you.\" \n\nI kissed her cheek then stood up with my eyes filled with tears. Somehow, I stumbled to a chair and sat down. \n\nShe left us ten minutes later. \n\nShe had just turned 47 in November. The funeral was the following Monday in Atlanta and I was back in school on Tuesday morning. I guess life really does move on, it sucks some days, but it moves on. \n\nA few weeks later when I mentioned to Lauren that my Spring Break coincided with Ken having custody of the boys for the week. I asked her if she would like to go to Panama City with me for a few days. She looked at me funny for a few seconds and said she would think about it. \n\nTwo days later when she called me and said that she wouldn't be able to make if to Panama City I was a little depressed. I told her that I understood and that I was really disappointed that she couldn't make it. Then she said, \"Because we aren't going to Panama City, I'm taking you to St. Thomas in the Virgin Islands.\" \n\nThat week will be indelibly etched into my brain for the rest of my life. It wasn't a drunken orgy of debauchery on a beach on Florida. Instead Lauren turned it into a week of instruction on seduction for me. She started ten minutes after we checked into the room when she walked out of the bathroom nude and climbed into the hot tub on our private balcony. \n\nIf you think a woman turns loose in a strange hotel room, try a strange hotel room on a tropical island in the Caribbean. We spent most of our days on the beach or shopping in town and spent most of our nights testing the mattress in our room. On our last day we were walking along the beach when the sun began to set. Lauren had been holding my hand during the entire walk and she slipped it from my grasp and walked a few feet away from me to the shoreline. \n\nShe stood there silhouetted against the setting sun with a gentle breeze blowing her hair and skirt into the air. I lifted my phone up and grabbed one picture of her. When the shutter sounded, she turned and smiled at me and I snapped another. When she blew me a kiss, I snapped the last picture I would ever take of her while we were together. \n\nAfter dinner we headed back to the room. Lauren mentioned grabbing a quick shower to get the sand off her and immediately headed to the bathroom. I stood by the balcony door thinking about how lucky I was, when I suddenly realized that we had never made out in the shower before. Smiling I stripped off my clothes and walked toward the bathroom. \n\nAs I walked into the room I turned the lights off and heard Lauren gasp until she realized what was going on. She held her arms out and I slipped into them feeling the warmth of her body and the stinging heat from that water at the same time. As our lips met her arms tightened around my neck pulling me in closer and I felt her leg start to slowly slide up mine. \n\n\"It took you long enough.\" she said when we finally broke apart. \n\n\"I'm a little slow somedays.\" I replied, grinning down at her, my fingertips tracing circles in the small of her back. \n\n\"We've got one night left in paradise Mark. Let's make the most of it.\" \n\n\"I plan on it.\" I said as I moved my hands to the front of her body and began to soap her tits up. \n\nShe moaned softly and closed her eyes as I worked my hands across her body. She took my right hand and lowered it to her pussy as she spread her legs apart. I slipped one finger inside her and placed my thumb against her clit then whispered, \"That's it, that's all you get. I'm not moving them, you will have to show me how badly you want it.\" \n\nHer eyes flew open and looking up at me she smiled as she started to slowly grind against my hand. Her arms went around my neck and hanging on to me she whispered, \"You have no idea Lover.\" \n\nShe came within minutes. As her orgasm subsided she spun around and placed both hands on the shower wall. She wiggled her ass slowly at me as she looked over her shoulder she whispered, \"Please.\" \n\nStepping in behind her I lined my cock up with the opening of her pussy. She pressed back slowly and deliberately and sighed as I slipped inside her. \n\n\"Yes.\" she moaned as I sank deeper and deeper into her. \n\n\"Go ahead Lauren, ride it. It's yours. You did that to me; you made it hard, now ride it until you come.\" \n\n\"Oh God!\" she moaned as her hips went into overdrive. \n\n\"Be a good girl and come for me Lauren. Because if you don't I'm going to have to tie you to the bed until you do. I could put my dick anywhere once I have you tied down. Your mouth, your tits, your pussy, your ass. You won't have a say.\" \n\n\"Tease.\" she moaned. \n\n\"Really? Tease?\" I said as I grabbed a handful of her wet hair and pulled her head back, adding \"Come with me.\" \n\nI held her hair as I reached out and shut off the water and then I led her to the bed. I told her to lay down on her back and then I pulled four neckties out of my suitcase. Walking around the bed I tied each of her limbs securely until she was spread-eagle. Then I traced my fingers up her long legs, pausing when I came to her pussy. \n\n\"Please.\" she whispered lifting her head off the pillow to look down at me. \n\n\"No.\" \n\n\"God Mark. Please!\" she whined, adding, \"I need this so badly. Please Baby. Do me.\" \n\n\"Momma needs to cum?\" I said, resting my thumb against her swollen clit. \n\n\"Momma needs it badly Baby.\" she moaned. \n\n\"Let me tell you what is going to happen Lauren. I'm going to fuck you. I'm not going to make love to you, I am going to fuck you. I'm going to use your body and when I'm done, I'm going to leave you tied up until I get hard again and then I am going to fuck you a second time. I'm letting you decide where and in what order. That is all the control you get tonight. So, where do you want it?\" I said as my thumb pressed against her clit. ",
        "\"Oh God Mark!\" \n\n\"Where?\" \n\n\"My, oh God, my pussy. Do my pussy first then you can have any hole you want but do my pussy first. Please, I want that so badly.\" \n\nI did exactly as I promised her and sank myself into her with one thrust. In the ten months that I had known her I had never seen her this excited. She met me thrust for thrust, lifting her hips and grinding against me at every turn. Her eyes were closed, and her head kept twisting back and forth on the pillow. She begged me to fuck her and when I came inside her she moaned deeply and collapsed onto the bed. \n\nWhen I came I rolled off her and walked to a chair; moving it to the side of the bed I sat down and began to describe all the times we had been together and my reactions to her ability to turn me on. Occasionally I would reach out and pull on her nipples or run my hand down the inside of her thighs. Once, I slipped a finger inside her then moved it to her lips for her to lick it clean. I finally began to get hard and as I did I reached out and pinching her clit stud I pulled on it gently until she gasped and lifted her hips off the mattress. \n\n\"Where Lauren?\" \n\n\"Just give it to me again.\" \n\n\"Where?\" \n\n\"Untie me so I can give you a blowjob.\" \n\n\"No. Where?\" \n\n\"Please untie me. It is killing me not being able to touch you.\" \n\n\"No. Where?\" \n\n\"God! My ass. Do my ass next Mark.\" \n\nThe rest of the night was just as memorable. After I untied her Lauren immediately snuggled up against me with her head on my chest. \n\n\"Regrets?\" she asked softly. \n\n\"About this? You? Us? Hell no!\" I replied sharply. \"I would do it again tomorrow.\" \n\n\"All of it?\" \n\n\"From the first kiss to the last one Lauren. You are an incredible lady. You're a great lover and an awesome mother to your children. You are intelligent, witty, sexy, fun and beautiful. A man would have to be insane to walk away from any opportunity to be with you.\" \n\nShe lay there silently and when she lifted her head to look at me I saw tears on her cheeks. She moved up the bed and raised up over me. Looking down at me with her soft green eyes glittering with tears she lowered her head and kissed me softly. As she pulled back she simply said, \"Thank you Mark. I needed to hear that.\" \n\nThen she dropped her head to my shoulder, snuggled deeply against my body and drifted off to sleep. I lay there as her breathing evened out and thought to myself that I had been honest with her. I would have had to have been an idiot to walk away from this opportunity. Then I wondered how much longer I would have before she dumped of me. \n\nIt turns out that we had three more weeks. One day in early May, Lauren called and told me that she had decided to begin dating again. Even though I knew it was coming I was still devastated. Lauren had become more and more distant since we had gotten back from the Virgin Islands. Our conversations were shorter, and the phone calls and texting sessions were drifting further and further apart. \n\n\"Mark, you got through to me when no other man could have. I owe you for that. You were the one who gave me the self-confidence to do this.\" \n\n\"Gee. Thanks.\" \n\n\"Please Mark, don't make this any more difficult than it has to be.\" \n\n\"Yeah, whatever. What do you want me to say to you Lauren? Good luck? Have fun fucking my replacement?\" \n\n\"I'm hanging up Mark. I don't want this to turn into a shouting match that we will both regret later.\" \n\n\"Okay. Whatever.\" I mumbled into the phone. \n\n\"Goodbye Mark. I love you.\" she said softly. \n\n\"Yeah.\" I said, hanging up. Looking at the dark screen of my phone I whispered, \"I love you too, Lauren.\" \n\nThe few weeks I spent at home that summer was awkward, especially when Jennifer would mention that she was babysitting for Lauren that evening. I would see her daily and the only time she was at the pool now was when her boys were home. Even then she wasn't wearing a bikini, she was either in a one piece or shorts and a top of some sort. That was when I knew it was over and honestly, I couldn't wait to get back to school to start summer drills. \n\nOn the evening of August 20<sup>th</sup>, I got the news I had been waiting to hear and had worked so hard for. I had made the team as a walk-on player and I would be starting as one of the outside linebackers. I was thrilled beyond belief and immediately grabbed my phone to call Dad and give him the news. His phone went straight to voicemail, so I called Jennifer to find out what was going on. \n\n\"What are you up to Jen?\" I asked when she answered. \n\n\"I'm babysitting.\" \n\n\"Where is dad?\" \n\n\"On a date, if you can believe that.\" \n\n\"Really? A date? With who?\" \n\n\"Aren't you listening Dumbass? I'm babysitting.\" She said angrily. \n\n\"Really?\" \n\n\"Yes, really, he is out with your old girlfriend.\" Then she with pure snark she added, \"Pun intended.\" \n\n\"I haven't seen her since May.\" Then I immediately kicked myself for admitting it to Jennifer but honestly, I was so shocked that I didn't care that it had slipped out. \n\n\"I know, and I wish every night that I hadn't seen you and her on New Year's Eve. You know when she was tied to her bed and you were fucking her in the ass!\" she spat out with her voice rising to almost a shriek. \n\n\"You saw that? How?\" I asked, both shocked and mortified. \n\n\"My date was a bust, so I went up to your room to see if you were still home, but you weren't there. I happened to glance out the window and saw a movement in her bedroom. Then I got treated to the sight of my brother fucking the neighborhood slut!\" \n\n\"Jen, that is messed up.\" \n\n\"No shit big brother, you know what else is messed up? Realizing that I wasn't watching you two go at it for the first time. When did you start fucking her? Huh? Was she still married to Ken?\" \n\n\"Yes.\" I replied honestly. \n\n\"You were banging a married woman in the ass and you say I'm fucked up for calling you on it? Jesus! That is rich!\" She sounded almost hysterical as she said it. \n\nI was going to try and defend my actions, but I stopped because I realized she was right. Never argue with family, they know which buttons to push. Then, in anger, she said something that caused my blood to run cold. \n\n\"I mean Holy shit Mark, that bitch has fucked both of the men in this house in the same year! She is one up on Mom!\" \n\n\"Okay Jennifer, that crossed a line! Do not drag our mother's memory into this! Ever! Do you understand me?\" \n\n\"Why? Are you going to punish me by tying me to my bed and busting a nut in my ass too? You know what? Never mind, I know the answer to that! Women my age are too young for you to fuck!\" \n\n\"Goodnight Jen. Call me when you have calmed down.\" \n\nI hung up on her at that point and sat there stunned at what she had told me. Lauren was dating my dad? I slammed my playbook shut and went for a walk. \n\nLater that night as I lay in bed looking at the pictures and videos I had taken of Lauren, I reached a decision that affected the rest of my life. I slowly and deliberately began deleting each one after I looked at it. It had been over three months since she had told me that it was over between us and I finally realized that she wasn't coming back. I could get by with memories but having these on my phone would only make me wish for something and someone that I would never have again. \n\nBy the time I was done there were over two hundred pictures and thirty videos in my Deleted Pictures file and one left on my phone. Maybe I got sentimental or maybe there was a part of me left that had some hope that Lauren might change her mind and give me another shot someday. I made that one my Lock Screen then I hit the Delete All button. \n\nJennifer didn't call. Instead when I walked into the lobby of my dorm after practice on Monday she was sitting in a chair waiting on me. I walked over to her and sat down, then I looked at her waiting for her to speak. \n\n\"I'm sorry.\" she said quietly. \n\n\"It's okay. I deserved most of it.\" I replied. \n\n\"No, you didn't. Can we go to your room and talk? Privately?\" \n\n\"Sure, thing Sis.\" \n\nA couple of the other players gave me knowing looks as I walked down the hallway with Jennifer following me, so I stopped and introduced them to her. Once they found out that she was my sister their demeanor changed entirely, and they took an immediate interest in the attractive, leggy blonde in their presence. I kind of smiled as Jennifer came into her own in the hallway and walked away from the encounter with our starting quarterback's phone number. \n\n\"Are you really going to call him?\" I asked as she sat down on my bed. \n\n\"Hello!\" she snorted, \"I don't chase football players, they chase me. I may have to walk instead of run for that one though. He is kinda hot.\" she replied smiling sweetly at me. \n\n\"Somethings never change huh Jen?\" \n\n\"Nope.\" She said still smiling at me. \n\n\"So?\" I asked sitting down at my desk. \n\n\"So, I'm sorry. Seriously, I really am. This whole situation sucks, and I don't know how to handle it. I know it must be getting to you too.\" \n\n\"Yeah, it is. I mean if Dad ever finds out, it would crush him.\" \n\n\"Why is she doing this? Seriously, Mom liked her. She said Lauren was a good role model for me to follow.\" she said looking down at the floor. \n\n\"Well, she is intelligent, strong willed, independent and educated. You could do a lot worse for a role model in those aspects.\" \n\n\"She also banged my older brother and is currently banging our father.\" Reaching up she began to unbutton her blouse and added, \"Should I use her as a role model and fuck you while I'm here? Or should I go after Daddy when I get home?\" \n\n\"Neither.\" I said, taking her hand away from her now half open blouse, \"Jennifer, you need to understand something about me and Lauren.\" \n\n\"What?\" Jennifer asked as she began rebuttoning her blouse. \n\n\"I have slept with her, several times in fact. We split up in May and I haven't seen, touched or talked to her since. If she has moved on, she has moved on. The only weird part for me is that she moved from me to Dad, but honestly, they have more in common than she and I ever did. I wasn't exactly planning on a long-term relationship with her. She just wanted a fuck-buddy.\" \n\n\"Eww!\" Jennifer exclaimed. \n\nI laughed. \n\n\"So, you get to cross 'Bang a MILF' off your bucket list and she is free to go after Dad now? Is that what you're saying?\" \n\n\"If that is what Dad wants, then yes.\" \n\n\"It's only been seven months since Mom died Mark. Seven months.\" she pleaded. \n\n\"Yeah, I know.\" I said quietly, then I added, \"It's not like they are getting married tomorrow though; Dad was going to start dating eventually and honestly, we don't know that they're actually sleeping together. How long have they been dating?\" \n\n\"Friday was the first one that I know of.\" she answered. \n\n\"So, this whole thing could have been a huge over-reaction to a simple dinner date between two adults?\" \n\n\"God, I hate you right now!\" she said, blushing and looking back at the floor. \n\n\"No, you don't.\" I replied, chuckling at her then added, \"You're just taking your grief and anger out on Lauren without giving her the benefit of the doubt. I know her well enough to know that she didn't go after Dad, I promise you that he was the one who initiated it.\" \n\n\"Uh huh.\" Jen said sounding totally unconvinced. \n\n\"Look Jen, I love Dad just as much as you do, my biggest concern is him never, and I mean never, finding out that Lauren and I have a history. Can you understand that?\" \n\n\"Yes, and I agree, it would crush Dad if he found out.\" \n\n\"Besides, Mom was right, she is a good role-model for you.\" I said half laughing and waiting for the reaction I knew was coming. \n\n\"Yeah, right.\" Jen replied, adding, \"Mark, it almost sounds like you love her.\" \n\n\"Nah, I will always have some feelings for her but love? No.\" I said, lying to my sister for the first and only time in my life. \n\n\"Okay. I'll just go with the flow for now but promise me that you will call her and tell her that we know she is dating Dad.\" Jennifer said after thinking about what I had said for a moment. \n\n\"Deal. Now, how about I take my stunningly beautiful baby sister out to dinner and maybe a movie?\" \n\n\"Stunningly beautiful? I like that!\" she giggled, \"Dinner yes but I'll take a raincheck on the movie though. I still have to drive home; unless you're going to let me sleep with you tonight.\" \n\n\"Hell no, the bed is too small.\" \n\n\"Is that the only reason I can't crawl into bed with you?\" she asked, arching an eyebrow at me. \n\n\"Absolutely! Nice bra by the way. It almost matches the color of your eyes.\" \n\n\"Wanna see it again?\" she asked, raising her hand to her blouse. \n\n\"Nah, I'm good.\" \n\n\"Aww and I was just starting to get my hopes up again about getting you in bed.\" she said, winking at me. \n\n\"No, you weren't. Now let's go to dinner; Hell, you're good looking enough that I'm going to let you Super-Size your fries.\" \n\n\"You say the sweetest things; Jerk.\" she said dryly. \n\n\"Love you too Jen.\" I replied, holding the door open for her. \n\nA medium-rare sirloin, a baked potato and a deep-fried onion at our favorite Australian themed steak house and she was on her way home. Had anyone ever heard our flirty back and forth banter, they might have thought that something was going on between us, but nothing could be further from the truth. We have always flirted with one another. It got so bad on one family vacation that I thought Mom was going to have a stroke when Jennifer said, \"You know what Mark? Maybe if you could sweet-talk one of your football groupies out of her pants, you could stop trying to get into your baby sister's.\" \n\nWe cooled it for the rest of the trip, but the teasing was always there when our parents weren't around. Both of us knew that nothing would ever come of it and it really became a game between us to see who could make whom flee the room first. Honestly, more often than not, it was me, especially when she would start undressing in front of me. \n\nLater that night I sat at my desk trying to concentrate on my Biology homework and staring at my phone. I was really dreading the call I had promised to make. I finally gave up on the homework and reached for my phone. I knew it was going to seem strange hearing her voice after so long, but I respected her enough to give her a heads up. I hit the icon beside her name and listened as the phone began to ring. \n\n\"Mark?\" she asked as she answered the phone. \n\n\"Hi Lauren.\" \n\n\"Hi yourself Mark. How are you?\" \n\n\"All things considered, good.\" \n\n\"Great!\" she replied cheerily. \n\n\"Can you talk?\" I asked, half hoping she would say she was too busy. \n\n\"Sure.\" \n\n\"There is no easy way to ask this so I'm just,\" I began. \n\n\"We've gone out twice Sweetie.\" she said, answering before I could complete the question. \n\n\"Okay.\" I said quietly. \n\n\"Okay? That's it? Just okay?\" she replied sounding shocked. \n\n\"What were you expecting? A jealous rage and profanity?\" I said chuckling. \n\n\"I don't know, but after our last phone conversation, that answer didn't even crack the Top Ten.\" \n\n\"Can you do me a favor Lauren?\" I asked. \n\n\"Let me guess: don't hurt him.\" \n\n\"Yes and no. Yes, don't hurt him but what I was going to ask was that if you guys continue to date, find a different babysitter other than Jennifer. She is really upset about it.\" I said, bracing myself for what was coming next. \n\n\"Okay but why is she upset?\" \n\n\"Lauren, she knows.\" I said, hoping I wouldn't have to give a further explanation. \n\n\"Well of course she knows Silly. She was our babysitter.\" came her laughing response. \n\n\"No Lauren, she knows about us.\" I said flatly. \n\n\"What! How? Did you say something to her?\" she said in a panicked voice. \n\n\"Jesus Lauren! No!\" I answered far more harshly than I meant to. \n\n\"Then how?\" she asked quietly. \n\n\"I guess she went to my room on New Year's Eve to ask me a question and saw us through my bedroom window.\" \n\n\"What did she see?\" she asked with a tremble in her voice. \n\n\"Enough. Too much.\" I said trying desperately to change the subject. \n\n\"What did she see Mark?\" she asked, more firmly this time. \n\n\"Okay, just remember you asked. She saw you tied to the bed and me doing you in the ass. I'm pretty sure you can recall the rest of the details.\" \n\n\"Oh my God! I am so humiliated!\" she all but cried. \n\n\"Don't be, I'm not and she isn't mad anymore, at least not about us; we had a long talk. She is just concerned that Dad will eventually find out and neither of us want that. It would kill him Lauren.\" I said, almost sounding like I was pleading with her. \n\n\"Okay. Um, okay. Can you give me a second Mark?\" she asked sounding completely flustered. \n\n\"Sure thing, take all the time you need. It's a lot to digest isn't it?\" \n\n\"No shit!\" came her immediate response. \n\n\"Look Lauren, I care too much about both you and Dad to ever try and hurt either of you. Jen understands now that what happened between you and me is in the past. I'm just the lucky bastard that brought you back to life after a rough time. It's never going to happen again so, yeah.\" \n\n\"Fair enough. But I have a question.\" \n\n\"Shoot.\" \n\n\"You two really don't have a problem with the two of us, me and your father, seeing one another?\" \n\n\"Nah. Just remember, he's old so he probably can't keep up with you under the sheets. Try not to break his hip; it will take a long time to heal at his age.\" I said with a smile on my face. \n\n\"Noted!\" she said laughing loudly. \n\n\"Well, that was all I needed to say. So,\" \n\n\"Mark?\" \n\n\"Yes?\" \n\n\"There is one thing that has had me troubled since we, um, went our separate ways.\" \n\n\"What?\" \n\n\"All of the pictures and videos that you took of me? Are they still on your phone?\" \n\n\"I deleted all but one. That one stays even if you plead with me to get rid of it.\" \n\n\"Which one?\" she asked cautiously. \n\n\"Do you remember the last one I took of you on the beach in St. Thomas? The one where you were blowing me a kiss.\" \n\n\"Yes.\" She said softly. \n\n\"That one; it's my Lock Screen.\" \n\n\"Really? Your Lock Screen?\" \n\n\"You're not mine anymore Lauren; honestly you never were mine to begin with. It didn't seem right, you know, me keeping the others; but I wasn't going to delete that memory of you for anyone. That one I get to keep forever.\" \n\nThe silence was absolutely deafening and when she finally spoke I could have sworn I heard a small sob before she whispered, \"You really are a very dangerous young man Mark. Goodnight Baby.\" \n\n\"Goodnight Lauren.\" I said, smiling as I hung up. \n\nAll in all, I was proud of myself for handling it as well as I did. Having heard her voice, I missed Lauren more now than ever but at least I could concentrate on football. \n\nThe first home game of the season rolled around, and I was stoked to be on the field again. The excitement was building and so was the heat. This was going to be a long, hot September afternoon, with highs in the lower ninety-degree range and the humidity just as high, we were all going to be miserable. We won the toss and had elected to receive so I got a short break before I had to start playing. I was thinking about nothing but football until I looked up into the stands and saw my dad and Lauren sitting together. They got excited and waved at me when we made eye contact, but I was anything but excited. I was pissed beyond belief! \n\nI could handle them dating if they wanted to date but this was my first college game and it still hurt that my mother wasn't there to watch it. If that weren't bad enough, Jennifer wasn't there either and I knew that she wanted to be. The more I thought about it the angrier I got and when I put my helmet on to head onto the field the only sound I heard was the rushing of my blood in my ears. \n\nThe offense's first play came straight at me and when I hit their Fullback the collision sounded throughout the stadium. I took him straight to the ground and when I heard the pop and him scream I knew he was hurt; badly. I stood up and immediately motioned to their coaching staff to get someone on the field then looked down at him and watched him writhing around in pain on the grass. ",
        "\"Sorry man.\" I muttered as I turned and started walking back to my teammates. \n\n\"Asshole!\" he shouted at me. \n\n\"You have no idea motherfucker!\" I shouted back as the medical staff began to work on him. \n\nA ref stepped in between me and the staff and taking me by the arm, he started walking me toward the sidelines instead of the huddle. I shook my arm away from him and started toward my teammates when I heard \"Dead Ball Foul, Number 54 Defense, Un-sportsman Like Conduct, Number 54 has been ejected from the game. Fifteen yards will be added to the end of the run. First Down.\" \n\n\"WHAT!\" I screamed looking over at the ref who had grabbed my arm. Ripping my helmet off I started walking toward the little bitch; if I was getting ejected, I was going down big for it. Then, suddenly, half the coaches we had were standing around me pushing me back to the sidelines. When they finally got me settled down and heading toward the locker room the Head Coach stepped in front of me and said, \"Jones, you fucked up and you know damn well you fucked up. Man up and own it. We will talk at halftime.\" \n\n\"Yes Coach.\" I said, dropping my head and trotting to the locker room with an assistant trotting along beside me. \n\nI was still pissed, only now I was pissed that I had lost my self-control. I hadn't intentionally hurt the other player but maybe if I hadn't been so damned angry when I went on the field both of us would still be playing. Now he was heading to a hospital and I was in the locker room because a little bitch ref couldn't handle having his hand shaken away. \n\nI sat with the team, still in uniform, as the coaching staff went over the first half stats and then our game plan for the second. With about four minutes left the Head Coach called me into his office for a little chat. It wasn't much of a chat. \n\nHe did all the talking and with a right index finger bouncing off my nose, I was reminded that, \"You are a walk-on Jones, which means that your longevity around here depends on your team contributions. A starter is, by definition, a leader and a role model for the other members of the team. You can either pull your head out of your ass and come to grips with that, or you can join the other members of the student body in the stands for the rest of your academic career and wonder what the might have been. Now if you will excuse me Stud, I've got to figure out how to win a ball game with a second team linebacker. Get that damned uniform off, you can earn the right to wear it back Monday at practice. Oh, you're suspended for next Saturday's game.\" \n\nThat's Coach; short on words, big on motivation. \n\nBy the way, Monday was Hell on Earth. We went two for two in September. Want to guess which two games we lost? \n\nOctober was a little better, we went three for four. Our only loss was our last game of the month on October 27<sup>th</sup>. It was a home game so after it was over I headed to Dad's to attend the Halloween party that he and Lauren had planned. I tried to beg off, but Lauren cheated and put Jennifer on the phone. \n\n\"Please come home Mark! Please? If nothing else, please come home so I'm not stuck at a party with a bunch of old people.\" she begged me with Lauren laughing and screaming \"I'm not old damn it!\" in the background. \n\nJen called me back and told me that she was going as a saloon girl, and asked me to come up with something like that, so I decided to play along with the theme and go as an Old West Marshal. I had already dressed for the party and was standing in the living room when Jen walked in and my eyes bugged out. I love my sister to distraction but sometimes she can make me wonder if she is all there. Her costume left little doubt that her mind may have slipped when she picked it out, but her body more than made up for any mental deficiencies she might have had. \n\nHer costume must have come from the Slutty Section of the store she bought it in. If the corset she was wearing had been cut any lower in the chest, her boobs would have been on full display. She was wearing fishnet stockings with the stays from the garter belt showing because the skirt was so short. She also had on Ruby Red lipstick and had heavily applied her mascara and blush to the point that she looked like a perfect stereotypical whore from an old western. \n\n\"Well, if it isn't Marshal Jones!\" she said smiling as she sauntered up to me. Running a fingertip across my chest she looked up at me, pursed her lips and added, \"Are you here to let me help you shoot a load with your big gun Marshal?\" \n\n\"Not tonight Miss Jenifer ma'am. Tonight, I'm here to keep the peace in this seething den of immorality.\" I said, tipping my hat to her then piously removing her finger from my chest. \n\n\"Marshal, if I'm a bad enough girl tonight, can you put me in shackles and spank me? I hear you seem to enjoy doing that to some the women in these here parts. I thought you might like to, you know, try it with your favorite whore maybe?\" she whispered with a devilish smile on her face. \n\n\"If I weren't so sore Jen I might, but I played a game this afternoon. My body is shot until at least Tuesday.\" I replied to her, feeling every bump and bruise on my body. \n\n\"Is it that bad Mark?\" she asked me, showing genuine concern and dropping the role play instantly. \n\n\"Yeah, I'm pretty fucking banged up.\" I replied honestly. \n\n\"Show me.\" \n\n\"Huh?\" \n\n\"Lift your shirt Mark.\" \n\nI shrugged and then pulled my shirt up watching her reaction as multiple bruises came into view. She inhaled sharply then covered her mouth with her hand, looking at me with a cross between horror and disbelief. \n\n\"Oh my God!\" she gasped in shock. \n\n\"We hit a little harder at the college level than they do in high school.\" \n\n\"Oh my God!\" she repeated. \n\nKissing the top of her head I said, \"I'll be fine Jen. I'm going to spend a while tomorrow in the hot tub.\" \n\n\"Promise?\" she looked at me with such innocent concern that it was touching. \n\n\"Promise.\" I said, then I asked, \"Which shop did you buy that costume in?\" \n\n\"I just put it together with the stuff I already own.\" \n\n\"You own that corset and garter-belt?\" I said, hoping she was joking. \n\n\"No Silly, the corset has stocking stays on it.\" she said as she started raising the skirt, \"Wanna see?\" \n\n\"NOPE! I'm good!\" I said backing up. \n\n\"Are you sure?\" she said laughing and lifting the hem of her skirt dangerously higher, \"You don't wanna see what I'm not wearing under my skirt?\" \n\n\"I love you Jennifer.\" I said laughing and wrapping my arms around her, kissing the top of her head. \n\n\"I love you too Mark. You're the best big brother ever.\" she responded, looking up at me and smiling. \n\nDad and Lauren appeared a few moments later with Dad dressed as a 1930's gangster and Lauren as his Gun Moll. I thought the Old Guy was going to stroke out when he saw Jennifer's costume. Any complaints he might have had disappeared when Lauren gasped and then squealed, \"I love it! God, I wish I still had the body to pull that one off!\" \n\nJennifer stuck her tongue out at Dad then, for lack of a better word, she strutted out of the room with her hips rolling like a runway model as she walked away. Lauren all but cackled at Dad's wide-eyed reaction to her strut. I just stood there silently admiring my baby sister's skill at shutting Dad down; she was good. \n\nThe party was a success and by midnight all the guests had gone home. I had even managed to sneak a drink or three, so I felt pretty good as I climbed the stairs to my room. I turned the light off and had just thrown my jeans into a heap beside my bed when there was a soft knock on my door. I put on a pair of gym shorts and opened my door to find Jennifer standing there, wearing one of my high school game jerseys as a nightgown. She had scrubbed her face of the make-up and had become my fresh-faced baby sister again instead of a soiled dove of yesteryear. \n\n\"What's up?\" I asked, wanting nothing more than to crawl into bed and get some sleep. \n\n\"Me. I can't sleep for thinking about how badly you are beat up.\" \n\n\"I'll be fine Jen. I've looked like this from July through December since I was ten.\" \n\n\"Sit down.\" She said pointing toward a chair in my room in front of my desk. \n\n\"Huh?\" \n\n\"Sit!\" she demanded still pointing at the chair. \n\nI sat down at my desk and she stepped behind me. I felt a warm liquid hit my shoulders and before I could react to it I felt her hands begin to massage my neck and shoulders. God in Heaven it felt wonderful. She stood behind me for about five minutes, not saying a word, simply working on my shoulders and neck. Then pensively, almost as if she was afraid I would tell her no, she whispered, \"Go lay down on your bed.\" \n\nI stood up and smiled down at her, then lay down on my stomach listening to the bed creak. She slid on the mattress beside me, then rising she knelt and straddled the small of my back. I felt the liquid again and then her soft hands began kneading my lumbar muscles. She shifted her weight and asked me to wait for a minute and then I felt her sit back down and resume the massage. \n\nShe spent over a half an hour working over my back until I felt like a new man. Her fingers would dig in and then she would use the palm of her hands. I was almost asleep when I felt her lean forward and lay down on my back, slowly tracing her fingertips across my shoulders and neck. It took me a full minute to realize that at some point she had removed my jersey and was topless. \n\n\"Um, Jennifer?\" \n\n\"Yes?\" she cooed. \n\n\"Where is my jersey?\" \n\n\"On the floor at the foot of the bed.\" \n\n\"Why?\" \n\n\"It was getting in my way. Relax Mark, I'm not going to jump on my big brother's dick; not tonight or any night. There are some lines I am willing to cross with you, but playing Boink the Cheerleader with the family linebacker isn't one of them. A naughty backrub with my guy is as far as I am willing to go.\" \n\n\"Your guy?\" I asked, smiling into my pillow. \n\n\"Always.\" She whispered tenderly. \n\n\"So, you want me to find another naughty cheerleader to play with?\" \n\n\"If she loves you half as much as the one you are with right now, yes.\" \n\n\"I don't know if that's possible Jen.\" I said. \n\nJennifer softly kissed my shoulder and then scooting up my back, she whispered into my ear, \"Promise me you will try Mark. This is it, I don't think there will ever be a repeat performance.\" \n\n\"I promise.\" I said then pausing I added, \"I love you Jennifer.\" \n\n\"I love you too Mark.\" \n\nSighing, she pushed herself up and as she did I felt her nipples brush across my back. I involuntarily groaned as it happened. Jennifer chuckled, then she kissed my cheek and patting me on the butt whispered, \"I'll leave the oil here, so you can massage anything that might need it after I am gone.\" \n\n\"What about you?\" I asked, rolling over and watched as she bent down and scooped up the jersey from the floor. \n\nStanding at the foot of my bed, she paused for a moment and gave me a spectacular view of her half nude body from the moonlight streaming through my window. Winking at me, she threw the jersey over her head whispering, \"I have lube Mark, but I won't need it tonight.\" \n\nWith that, she opened my bedroom door and stepped into the hallway. \n\n\"Fuck.\" I whispered as I reached for the oil. \n\nThere was one girl, just one, who had caught my eye at school; a blonde in my English Lit class who was very pretty, extremely intelligent and had a dynamite smile. I thought she looked familiar when I saw her on the first day of class, but I couldn't place where I had seen her. Her name was Chris and she had made it plainly clear that she wouldn't mind going out if I were interested. \n\nI figured what the Hell and the following Wednesday I asked her if she wanted to go to the game on Saturday and then maybe an early dinner after. It was an away game, but it was only thirty miles from our school and tickets were hard to come by because it was a rivalry game. She stood there staring at me, with two of her girlfriends behind her smiling as I asked, and said, \"That sounds great! I'd love to go!\" \n\nI gave her a ticket after our Friday class and almost skipped to my Biology class thinking \"Life is good!\". God was I wrong. Life was about to become very complicated. \n\nDuring the pre-game warm ups, I glanced into the stands to see if I could spot her in the student section and sure enough, I did. It is a small stadium and it is easy to spot someone if you know where they are sitting. She had her hair pulled back into a pony-tail and was wearing cutoff jeans with a Hooters tank-top. \"My kinda girl.\" I thought innocently, ignoring the alarm bells that were softly ringing in the back of my head. \n\nWe lost, 24-21 and I was in a semi-foul mood when I met her in the parking lot after the game. I apologized for the loss, mumbling something like \"I finally work up the courage to ask you out and we blow it on the field.\" \n\n\"You got a solo sack, forced their quarterback out of the pocket twice and broke up three run plays with tackles for a loss; it wasn't a total bust.\" \n\n\"You understand football stats?\" I asked, kind of shocked by her response. \n\n\"My daddy coaches junior high football so I grew up with it. By the way, you signal a dead give-away before a blitz.\" she said seriously as I climbed into the passenger seat. \n\n\"Huh?\" \n\n\"You always take two steps back before the snap when you guys blitz.\" she said as she put the car into reverse and backed out of the space. \n\n\"Really?\" I replied becoming confused. \n\n\"Watch the game film tomorrow. Every time. I've seen every game this season Mark, trust me.\" \n\n\"Where have you been all my life?\" I asked laughing and not believing my luck. \n\n\"Cleveland.\" That should have made me listen to the second set of alarms ringing, instead I was smitten by the firm boobs under the tank-top. \n\n\"So where to?\" \n\n\"Pick a place.\" I said, still not believing my luck. \n\n\"Any place but here.\" She said pulling at her shirt adding, \"I work there during the summers.\" \n\nI all but jerked straight up in my seat and looked at her as one and one and one suddenly equaled three. \"No way! No motherfucking way!\" I thought, straining my memory to try and remember what the chick with Ken looked like that day in his truck.  \n\n\"No way!\" I mumbled out loud this time. \n\n\"Is something wrong Mark?\" she asked, surprised at my reaction. \n\n\"Um. I don't know. Maybe.\" I said as she turned onto the interstate. \n\n\"What is it?\" she asked with a concerned look on her face. \n\n\"Do you use your real name at work or a nickname?\" \n\nEven though I had heard her name dozens of times during roll call for our class, it hadn't clicked until now. How dense can a guy get? Seriously? \n\n\"Crystal is my real name, I use it there. Chris is my nickname, why do you ask?\" \n\n\"We've sort of met before.\" \n\n\"At work? Oh God did you hit on me there?\" \n\n\"Um, no, in my neighbor's driveway two summers ago.\" \n\n\"Huh?\" she said looking really confused. \n\n\"You were there with her ex-husband to pick up his kids for the week.\" \n\n\"Oh fuck!\" \n\n\"Yeah.\" \n\nShe pulled over on the side of the interstate and put the car in Park. She sat there trembling and suddenly she burst into tears. After a minute, she tried to regain her composure and then she started crying again. I didn't know what to do so I sat there waiting for her to kick me out on the side of the road. Instead she eventually stopped crying then wiped her eyes. After a few seconds, she slapped the steering wheel and softly said, \"Fuck me!\" \n\n\"Right now, or after dinner?\" I quipped. \n\n\"Not funny!\" she hissed at me. \n\n\"Bad joke Chris but I'm not upset. I just want you to know up front that his ex is dating my dad now.\" \n\n\"Are you serious?\" she exclaimed. \n\n\"Yes.\" I replied, shaking my head at the situation and then I just sat there staring at her. \n\n\"So where does this leave us?\" she asked. \n\n\"About a hundred yards west of mile maker 270.\" I replied, nodding my head up the interstate. \n\n\"That's all you have? You just found out that I am responsible for destroying a marriage and you're making jokes?\" she asked incredulously. \n\n\"I'd really like to have dinner with you.\" I said honestly. \n\n\"Why? So, we can make this more unreal and awkward than it already is?\" \n\n\"No, because I want to hear the whole story. Ken is a world-class prick and I'm damn near certain that there is more to the story than you are telling.\" I responded. \n\n\"Way more.\" she said, sniffing back the tears. \n\n\"Let's start with dinner and go from there. If nothing else, you get a free steak and out of it.\" \n\n\"Mark, if I just dropped you off at your dorm, would you be offended?\" \n\n\"No. Not really. I'm not going to force the issue, but I would really love to hear your side of it.\" \n\n\"Why?\" \n\n\"Like I said, I think there is more to it than you are letting on.\" \n\n\"Such as?\" \n\n\"I'm betting dollars to kisses that Lauren wasn't the only woman that bastard lied to last year.\" \n\n\"How many?\" \n\n\"A thousand, but you'll have to take a check for the balance.\" I said smiling at her. \n\nShe hesitated for a second then she unbuckled her seat belt and shifting around in the car she leaned over and kissed my cheek. Then she looked me in the eyes and said, \"Nine hundred and ninety-nine.\" \n\nI paused feeling the warmth of her lips on my cheek and said, \"Crystal?\" \n\n\"Yes?\" \n\n\"Go ahead and drop me off at my dorm. I'll pick you up tomorrow evening at six for dinner and no, you can't take a raincheck.\" \n\n\"Mark this is too weird for me.\" She said, putting the car into Drive and pulling back out on the interstate. \n\n\"You don't get a vote.\" I said smiling at her. \n\n\"I don't?\" \n\n\"No! My sister told to find a cheerleader to have fun with and I have.\" \n\n\"How did you know I use to be a cheerleader?\" she said laughing at me. \n\nLooking at her I said, \"With a smile like yours, if you weren't it would be a felony.\" \n\nShe blushed, shook her head and told me to pick her up at five instead. \n\nShe dropped me off and I walked inside the dorm; standing by the door I waited for her to pull out and then I walked out to my car and drove home. I was stiff and sore when I got out and hobbled into the living room collapsing on the couch. Jennifer wondered into the room with a curious look on her face and stopped in her tracks when she saw me. \n\n\"Hey you! I thought you had a game today.\" \n\n\"I did, but I needed to talk to you.\" \n\n\"What's up?\" she asked, sitting down beside me. \n\n\"Where is Dad?\" \n\nThe look she gave me was priceless. \n\n\"Guess who has a golf handicap of eight.\" she said slowly shaking her head. \n\n\"Who?\" \n\n\"Lauren.\" she responded \n\n\"No shit?\" I said, surprised that she had never once mentioned playing golf. Then again, the strokes I was interested in when I had been around her didn't involve a golf course. \n\n\"No shit.\" \n\n\"So, what's up?\" \n\n\"I met someone.\" I said trying to gage the reaction on her face before I continued with, \"She went to the game today with me and I had a date with her tonight, but I broke it to come here and get your advice.\" \n\n\"Well, first you get her to take her clothes off and then you get between her legs.\" Jennifer said grinning at me. \n\n\"Seriously Jennifer, I may have gotten in over my head here and I want your advice.\" \n\n\"Okay, shoot.\" she said. \n\nWhen I told her, her eyes got huge and her hands flew to her mouth. She began rocking back and forth on the couch looking at me and then burst out laughing. I would have been offended but the absurdity of it all came crashing down on me and I began to laugh as well. What else could I do? Seriously, what were the odds? \n\n\"You have GOT to be shitting me Mark!\" \n\n\"Nope. Thousands of women on that campus and she is the one I asked out.\" \n\n\"So, I guess she hasn't told you her side of the story.\" \n\n\"Not yet, I'm going out with her tomorrow night but I'm not going to pressure her to find out anything. If she tells me, she tells me.\" ",
        "\"Just so I fully understand what you are telling me here; you're going out with the girl who was banging the husband of the neighbor that you were banging for the past year? The same neighbor who is now dating our father?\" \n\n\"That pretty much sums it up.\" \n\n\"Maybe I should call Ken up and complete this twisted cycle.\" \n\n\"Not even close to being funny Jen.\" \n\n\"I know, but I mean come on Dude! This is freaking hilarious! I can see it now! \"Dad, Lauren, I'd like you to meet Crystal.\" Lauren's reaction will be over the top! I've got to record it!\" \n\n\"That is what I am trying to avoid.\" I said sadly. \n\n\"You really like this chick, don't you?\" \n\n\"Yeah, sadly, I really do. She reminds me.\" I stopped speaking. \n\n\"Reminds you of who Mark?\" \n\n\"She reminds me a lot of you.\" I said realizing just how twisted that sounded. \n\n\"Why is everyone in this version of Peyton Place getting laid except me?\" she asked loudly, slumping back against the couch cushions. \n\n\"Jen!\" I exclaimed, startled by her outburst. \n\n\"What? Ken has had Lauren, you have too, and Dad is doing her now. Ken has had Crystal and now you're trying to crawl between her thighs. I'm a comparative saint next to you Mark! You want my advice? Walk the fuck away from her! Lauren will shit bricks if you drag her up in here; and this twisted fairy tale you are living in will all unravel on you so fast that you won't know what the fuck has hit you!\" \n\nShe leapt up and stormed out of the room. I heard her bedroom door slam and realized that she was probably right. I should just walk away from Crystal and be done with it. I should, I wasn't going to yet, but I really should. \n\n\"Fuck it!\" I thought to myself, \"I'm taking a shower.\" \n\nI stood under the water, which was a hot as I could stand it, until the hot water ran out. I dried off and wrapping a towel around my waist I walked into my bedroom and dressed in a pair of jeans and a t-shirt then I slipped on my tennis shoes and walked down to Jennifer's room on the second story. Standing beside her door for a moment I thought to myself that I really owed Jennifer and apology for putting her through all of this then I knocked in her door. \n\n\"What.\" \n\n\"Hey Grumpy Chick, are you hungry?\" \n\n\"A little.\" came a reply through the wooden door. \n\n\"Can I come in?\" \n\n\"Sure.\" \n\nI walked into her bedroom and found her laying on her bed reading a paperback. \n\n\"Whatcha reading?\" I asked. \n\n\"50 Shades.\" \n\n\"What's it about?\" I said. \n\nLooking at me blankly for a second she laughed and said, \"I love you and you don't want to know.\" \n\n\"Ok. Um? Dinner?\" \n\n\"Maybe.\" She said softly. \n\n\"Then, let me rephrase the request. How about I take my beautiful baby sister out to eat and then take her to the movie that she still owes me?\" \n\n\"Maybe.\" She said smiling at me. \n\n\"Beautiful, sexy, intelligent, charming, delightful, alluring, hot, seductive, incredibly sexy baby sister?\" \n\n\"You said sexy twice.\" she said still smiling. \n\n\"I know.\" I said, winking at her. \n\n\"You win.\" she replied laughing as she swung her long legs over the edge of the bed. \n\n\"You were in the shower for a long time.\" she said as she slipped her shoes on. \n\n\"Rough game today. I was really hurting.\" \n\n\"I'm sorry.\" \n\n\"I'll be okay. It's a shame you couldn't have waited a week to give me that backrub. I could really use it tonight.\" \n\n\"Buy me cheesecake after dinner and you might get another one later. But this time, my clothes will have to stay on.\" she said, looking up at me with her blue eyes sparkling. \n\n\"Deal.\" \n\nWe had dinner and then we saw Paranormal Activity at the mall. Yes, I bought her cheesecake and yes, later that night after Dad had gone to bed, she snuck up to my room and gave me another backrub. Yes, her clothes stayed on the entire time and deep down inside I was glad they did. \n\nSunday afternoon I drove to Chris's dorm and waited in the lobby for her. When 5:30 rolled around and she still hadn't shown up I called her, and her phone went straight to voicemail. I walked down the hallway and knocked on her door. I waited a second and then figured, what the Hell? \n\nKnock, knock, knock. \"Chris?\" \n\nKnock, knock, knock. \"Chris?\" \n\nKnock. The door opened. \n\nKnock, knock. \"Chris?\" I said, completing the cycle and smiling at my own wit. \n\n\"What?\" she snapped at me. \n\n\"Wow!\" I said, taking an involuntary step backwards at the venom coming from her voice. \n\n\"Don't 'Wow!' me Mark! I dropped you off thinking I was giving you some space to think things through and you went home and took another girl to dinner and a movie? You are a dick!\" \n\n\"How do you know what I did last night?\" \n\n\"My girlfriend Connie is from your hometown and saw you two at the theater.\" \n\n\"Oh, she saw me out with a tall, attractive blonde who has spectacular boobs and a nice butt? In case you haven't noticed, I have a thing for women like that.\" \n\n\"Dick!\" she said loudly as she started to shut the door in my face. \n\nI put my hand out and stopped it. \n\n\"Chris, that was my sister Jennifer.\" \n\n\"Huh?\" she said, looking at me with a frown on her face. \n\n\"That was my baby sister, Jennifer. You're going to meet her next Saturday. Try not to claw her eyes out in a jealous rage alright?\" \n\n\"I haven't even gone out with you and you're wanting to introduce me to your family? Are you nuts?\" \n\n\"No. I'm introducing you to my sister, provided you promise me that you won't scratch her eyes out in a fit of jealousy.\" \n\n\"You're not nuts, you're crazy!\" she all but yelled. \n\n\"I'll concede that if you will stop trying to close the door in my face and get your purse, so we can go to dinner. Please? I swear to you Chris, she's my sister.\" \n\nWe stood there with our eyes locked, neither of us saying anything and finally I saw her shoulders slump and she mumbled, \"Fine, give me a second. I'll be right out.\" \n\nI held the car door open for her and she slid in saying, \"Thank you.\" \n\nAs I climbed in on my side she was adjusting her seat. Buckling her seatbelt, she looked over at me and said, \"A thing for tall, attractive blondes with spectacular boobs and nice butts huh?\" \n\n\"Yeah but I noticed your smile first.\" Which was, strangely enough, true. \n\n\"Uh huh.\" she said with a small grin on her face. \n\n\"Almost there.\" I said, looking at her and watching her grin grow larger. \n\n\"Almost.\" I whispered as she finally broke into a smile. \n\n\"There it is!\" I said, laughing. \n\n\"Shut up and drive Mark.\" she said, looking down at her lap and shaking her head. \n\n\"Yes Dear.\" I said, putting the car into Reverse and backing out of the space. \n\n\"I'm really sorry I called you a dick earlier.\" she said as we sat in the parking lot of her dorm after dinner. \n\n\"That's okay. I've been called worse.\" \n\n\"Thank you for dinner and thank you again for not asking about Ken tonight. God that whole situation is so humiliating.\" She muttered looking up at the roof of the car. \n\n\"He burned you pretty badly huh?\" I asked. \n\n\"Scorched and turned to ashes. It took me months to even talk to another guy after what he did to me.\" \n\n\"Whenever you feel like talking about it, I'm here.\" I said softly. \n\n\"You really are a nice guy Mark. I'm glad we went out tonight.\" \n\n\"Thank you, Chris. I am too.\" \n\nShe looked at me then leaned across the seat and kissed me softly. Getting out of the car she leaned back down smiling and whispered, \"Nine hundred and ninety-eight.\" Then she winked, closed the car door and walked inside her dorm. \n\nI was grinning like an idiot all the way across campus. \n\nThe following Thursday night Chris finally broke down in my room and told me about her time with Ken. I was dumbstruck at the way that asshole treated her. They had met at her restaurant, and he had managed to do what no her customer had done before; sweep her off her feet. \n\nHe had a set of dummy divorce papers that showed his separation from Lauren starting the year before. He kept insisting to her that Lauren was the one who had taken part in an affair with one of the firm's attorneys. It might have been hard to believe, but Chris had a copy of the paperwork and it really looked official. \n\nThe worst part was that she honestly bought his whole story. He spent money on her like he was made of it. A new tablet, iPhone, clothes, jewelry and fancy dinners. She was the perfect prey to his predator. Young, naive, and very pretty dangling on his arm at office parties. \n\nThen the real divorce finalized on that day in August, her fantasy came to an end. He had dropped her off at her parent's home and told her that he would be back to pick her up for dinner and a movie with the boys. Later he called and told her that he had to cancel because the youngest, Jeff, had gotten sick and was running a fever. \n\nShe called one of her friends and they went to dinner and a movie instead. And when they walked out of the theater, she spotted Ken and the boys with another woman; this one also closer to her age than his. She didn't cause a scene because she didn't want to scare the children, so she snapped a picture of them and sent it to him in a text message saying, \"Goodbye, you lying bastard.\" \n\nHis response was \"Goodbye, you stupid whore.\" \n\nShe was devastated. He had promised her everything but a wedding ring over the six months that they had dated and now all she had was an ex-lover who was not only cheating on her, but who had lied to her about being divorced. She also had a closet full of clothes that he had bought for her, a tablet, a cell phone and deep regrets about helping to destroy a marriage. \n\n\"And I finally thought that things were going good for me when you showed up.\" she said with tears rolling down her cheeks. \n\n\"Things are going good for you Chris.\" I replied. \n\n\"Yeah? How?\" she sniffled. \n\n\"I showed up.\" I said laughing. \n\n\"Oh goody. Now I get to relive it every time I see you on campus. Yea me.\" she said, clinching her fist and throwing it over her head. \n\n\"Eventually you will get over it.\" \n\n\"When?\" \n\n\"I'm hoping it's sometime before our wedding but don't stress over it. I'm patient.\" I replied with a grin on my face. \n\n\"You are certifiably insane.\" she said, looking at me in total disbelief. \n\n\"Your point?\" I responded. \n\n\"You need help.\" \n\n\"I want you to meet Lauren.\" I said quietly. \n\n\"What?\" she exclaimed. \n\n\"I want you to meet Lauren.\" I said slowly, moving my hands in the air as if I were using sign language. \n\n\"I don't think so Mark! And you're going to have to get over this foolish notion that we can keep seeing each other.\" She said, obviously becoming exasperated. \n\n\"Okay, fine! You're just delaying our wedding though.\" I said, looking her in the eyes and grinning. \n\n\"God!\" she muttered, throwing both arms into the air. \n\n\"We have a bye week, so I can take you there and I really do want you to meet her. She needs to hear your side of all this.\" \n\n\"She won't care.\" \n\n\"Maybe not and I'll happily take the heat for any fallout, but she needs to know that you were a victim as well.\" I said sincerely. \n\n\"I'll think about it, okay?\" \n\n\"Fair enough.\" \n\n\"Why are you still chasing me after everything I've told you?\" she asked quietly. \n\n\"Because you're walking away instead of running.\" I said, silently thanking Jennifer for that line. \n\nShe opened her mouth to speak then paused. She had a strange look on her face as she sat beside me on my bed looking at me. Finally, she shook her head as a slow smile crept across her face and she began to slowly lean towards me. \n\n\"Yes?\" I asked when our lips were a quarter of an inch away from one another's. \n\nShe kissed me gently then said, \"Nine hundred and ninety-seven.\" \n\nI lost count, but somewhere around Nine-hundred and seventy something we were nude in my bed trying to recover our breathing when there was a knock on my door. Chris quickly pulled the sheet over her head as my roommate Bill walked in. \n\n\"Sorry to interrupt Dude, but I really need my tablet.\" \n\n\"That's okay.\" I said smiling at him. \n\nHe pointed at the bed and mouthed \"Crystal?\" \n\nI grinned and nodded. Grabbing his tablet, he turned and walked to the door. \n\n\"See you in a few hours Dude.\" Then he added, \"Goodnight Chris.\" \n\n\"Goodnight Bill.\" came a soft voice from under the sheet. \n\nHe shut the door smiling. As soon as it clicked Chris tossed back the sheet and said \"God that was humiliating! I've got to go!\" \n\n\"What's your rush?\" I said as she climbed over me and began to get dressed. \n\n\"I'm not use to being spoken to while I'm hiding under a sheet. How did he know it was me?\" \n\n\"It could be because you're the only woman I've talked about for the past two weeks.\" \n\nShe paused and looked at me. \"Really?\" \n\n\"Yeah, Bill was the one who finally convinced me to ask you out.\" \n\nShe dropped her clothes back to the floor and quietly said, \"Scoot over, we still have a couple of hours.\" \n\nSex with Lauren and sex with Crystal was completely different. \n\nLauren was a slow burn that was like driving a classic muscle car down a back road. It was enjoyable, just because you were on the road with her. The curves were wide and smooth, and the straightaways were incredible because you could really build up some speed before you had to tap the brakes lightly and slow down to experience the next curve. \n\nCrystal was a sports car that wanted everything fast and hot. It was going to be an enjoyable experience to turn her from a Porsche into GTO. I lay there silently thanking Lauren for having the patience and understanding to teach me how to please a woman over the course of hours instead of minutes. Yes, we had more than our share of quickies, but she also taught me how to take my time. I more than proved that to Chris over the next hour and a half. \n\nDriving back to her dorm Crystal looked at me from across the seat of my car. \n\n\"Who was she?\" \n\n\"Who was who?\" I asked, knowing full well what Crystal was digging for. \n\n\"Who was the woman that taught you how to do some of the things you did to me back there?\" \n\n\"A gentleman doesn't kiss and tell.\" \n\n\"I'll accept that for now, but you have to promise me that one day you will tell me the story. No twenty-year-old guy knows how to treat a woman like that unless an experienced woman taught him.\" \n\n\"I promise.\" I said, really looking forward to the day I could work up the courage to tell her the story. \n\n\"YOU WANT ME TO DO WHAT!\" Lauren screamed into her phone, and by default, my ear. \n\n\"I want you to meet Crystal. You need to meet her Lauren.\" \n\n\"Bullshit! How could you even suggest that I meet that slut?\" \n\n\"Do you trust me?\" I asked. \n\n\"This has nothing to do with us Mark.\" she retorted. \n\n\"Yes Lauren, it does. More than you know.\" I said. \n\n\"Maybe, but she destroyed my marriage and you want to bring her here to meet me?\" \n\n\"There are things you don't understand and until you do you're going to be angry and bitter for no reason.\" \n\n\"She. Fucked. My. Husband.\" Lauren said coldly, emphasizing each word. \n\n\"Your. Husband. Fucked. Her.\" I said just as coldly and adding, \"Figuratively and literally.\" \n\n\"So? If he did, she got what she deserved.\" Lauren spat out angrily. \n\n\"Nobody deserves that Lauren.\" I said softly. \n\n\"She does.\" \n\n\"No, she doesn't. She is a good person who got burned by the asshole. Does that sound familiar?\" \n\nThe silence was loud. \n\n\"Fine. Bring her home. If nothing else I will have a chance to tell the little bitch what she did to my family.\" Lauren replied with a hint of resignation in her voice. \n\n\"Your house? Four o'clock? Sunday?\" I asked. \n\n\"Ken drops the boys off at five.\" \n\n\"I know; that's why I said four.\" I responded with an evil grin on my face. \n\n\"Fine! Four.\" she replied, not sounding happy about it. \n\nThen, without so much as a \"Kiss my ass.\" she hung up. \n\nBill looked up from his bed smiling and said, \"I take it you're going home this weekend.\" \n\n\"Yeah.\" I said, still grinning. \n\n\"Is your sister going to be there?\" he asked. \n\n\"Probably, but so is my dad. He hates football players with a burning passion.\" \n\n\"Why do I get the feeling you just don't want me sniffing around your sister?\" \n\n\"Because your IQ is above room temperature.\" \n\n\"Fair enough Dude.\" He said, turning back to his Sociology book. \n\n\"Honestly Bill, you're welcome there anytime you want to come, but this is going to be a weird trip and you don't need to see this level of crazy.\" \n\nYeah, Bill knew the entire twisted story about Lauren; all of it. I never had a brother and over the past few months he and I had grown close. Hell, I had to have someone to confide in or I would have gone batshit crazy. He was serious and mature and honest enough to tell me when I was fucking up. I glanced over at him and thought to myself \"Jennifer could do a lot worse. He really is a nice guy.\" Then I began to formulate my plan for Sunday. \n\nTo say that the meeting was awkward was an understatement. We all; Lauren, Crystal, Jennifer and I all sat in Lauren's living room as Crystal slowly began telling her tale. When she pulled out the phony divorce decree, Lauren initially refused to look at it. Then she reached out and picked it up by a corner as if it was a dead rat and she was grabbing it by the tail. She began to read it and slowly she started making comments, most of which involved the phrase \"fucking liar\". I took that as a good sign. \n\n\"Lauren, I swear to you that I didn't know you two were still married. I honestly thought your marriage had ended long before he asked me out the first time.\" \n\n\"Okay.\" Lauren said and let it drop. \n\n\"If I had known, I would have stopped immediately. You've got to believe that, I'm not a tramp.\" She said with more tears beginning to form in her eyes. \n\n\"It doesn't surprise me Crystal. Ken is an asshole.\" Lauren said, tossing the phony decree back on the coffee table. \n\n\"We can at least agree on that one.\" Crystal said, looking down at the floor and adding, \"Lauren, you have every reason in the world to throw me out of your home. I'm not suggesting that we will ever become friends, but will you at least stop thinking of me as an enemy?\" \n\n\"That I can do, we were both used: I can see that now. None of that was really your fault.\" Lauren said softly. \n\nI glanced down at my phone and asked, \"So, Lauren, is Ken always on time dropping off the boys?\" \n\n\"Like clockwork, he will be here in two or three minutes. Why?\" \n\n\"Oh, I'm just wondering how fast he will leave when he pulls up and sees his ex-wife and former mistress standing on his ex-wife's front porch hugging?\" \n\nAll three heads snapped around to look at me. \n\n\"That is evil!\" Jennifer squealed, clapping her hands together in delight. \n\n\"That is brilliant.\" Lauren said, beginning to smile. \n\n\"That is perfect.\" Chris said, her eyes meeting Lauren's for the first time in an hour. \n\n\"You're welcome ladies. Let's go outside and greet the asshole; shall we?\" I said, climbing to my feet and holding my hand out to Chris. \n\nFor the record, it took him one second after Jeff shut the truck's rear door and ran toward the house. If Hell hath no fury like a woman scorned; I can't imagine what Ken thought when he saw those two standing on the porch talking to two very excited young boys. \n\nIt turns out that they honestly missed Chris, \"All the other girls Dad has gone out with aren't nearly as fun as she is.\" Lauren was kind of dumbstruck by that and looked at me funny when the boys hugged Chris as we left to head back to the campus. I guess she had to admit to herself that Chris might just be a decent human being after all if William and Jeff liked her that much. \n\nI brought Chris and Bill home for Thanksgiving weekend. Dad is kind of old-fashioned, so Chris didn't sleep with in my room. Instead she had the guest room right next to Jennifer's bedroom and Bill slept in one of the others. I'm not saying there weren't a couple of midnight excursions made upstairs but for the most part, out of respect for Dad's wishes, the two of us behaved ourselves. ",
        "Jennifer seemed rather indifferent about Bill being there. She remained true to form and by Thanksgiving morning it was Bill who was doing the chasing. I noticed Jennifer looking at me and smiling a lot though and she, Chris and even Lauren seemed to have their heads together whenever Bill left the room. \n\nLauren walked up to me on Thanksgiving afternoon and handing me a glass of wine she turned and nodded her head toward Chris. \n\n\"Not that it is any of my business, but have you noticed how much she looks like your sister?\" \n\n\"Yes.\" I said, blushing slightly. \"Jennifer said she is going to figure out which complex I have and find me a therapist to talk to.\" \n\n\"How long have you to been,\" she paused and then said, \"you know?\" \n\n\"Sleeping together?\" \n\n\"Yes.\" \n\n\"The week before you met her.\" \n\n\"Mark.\" \n\n\"Lauren.\" \n\n\"If you hurt her, I will cut your nuts off. She has been through too much already.\" she said in a tone that made me wince when I heard it. \n\n\"So, we're still friends then?\" \n\n\"Always Baby.\" she said winking at me coyly. \n\n\"With benefits?\" I asked her, arching my eyebrows and grinning lewdly. \n\n\"God!\" she exclaimed, laughing and walking back into the kitchen to resume helping Dad. \n\nDad and Lauren were married the following summer. It was a simple outdoor wedding in her backyard with family and a few close friends in attendance. Her sons served as ringbearers and Crystal's niece served as the flower girl. Jennifer and Crystal were the Maid of Honor and Bride's Maid and me and Uncle Darrell were respectively, the Best Man and Groomsman. \n\nAfter the ceremony I was standing by the pool when I heard a voice say, \"Why so serious Mark? This is my wedding party, you're supposed to be smiling and telling me how beautiful I look.\" \n\nI smiled as Lauren slipped under my arm and gave me a chaste kiss on the cheek. \n\n\"In all honesty, I was looking up at my bedroom window and thanking God that Jennifer thought it was too creepy up there.\" \n\n\"Really?\" she asked. \n\n\"Yeah, the view of this pool was amazing two summers ago. I had some pictures, but I got rid of them.\" \n\n\"I love you Mark.\" she said, throwing her head back and laughing. \n\n\"I love you too Lauren.\" I said, meaning every word of it. \n\n\"Really?\" she said smiling up at me. \n\n\"Yeah, I really do.\" I kissed the top of her head and hand in hand, we walked back to the house to rejoin the party. \n\nOddly enough, Jennifer managed to keep a secret from me for almost eight months before I found out about it. It turns out that she and Bill began dating shortly after they met. I caught them at the mall one afternoon during summer break. Jennifer looked at me that evening over the dinner table and smiling at me said, \"What? You were the one that introduced us?\" \n\n\"If he ever hurts you, I'm pile driving his ass so deeply into the ground that all you will see of him are going to be the balls of his feet.\" I said, seriously. \n\n\"Please don't. I kinda like him a little.\" \n\n\"Did he tell you about the time he slept with two of our cheerleaders?\" I said, hoping to get a reaction out of her. \n\n\"We recreated it with one of them last Saturday. I still have a small hickey on my left boob that she gave me. Wanna see it?\" she said, smiling and reaching for the buttons of her blouse. \n\n\"Nope! I'm good.\" I said jumping up from the table. \n\nShe was still laughing as she followed me into the living room. \n\nOn a sunny Saturday this past May my dad tapped me on my shoulder and said, \"The Bride wants to talk to her brother. She is in her dressing room.\" \n\nI handed Chris my drink, kissed her on the cheek and said, \"I'll be right back Babe.\" \n\nI knocked on the door and heard Jennifer softly ask, \"Mark?\" \n\n\"Yes.\" \n\n\"Come in.\" \n\nI opened the door and stepped into the dressing room then stood there in silent awe as I saw my sister wearing Mom's wedding gown for the first time. She looked stunning, and I realized how incredibly lucky Bill was. I walked up to her smiling and kissed her cheek then whispered into her ear, \"You are beautiful Jennifer.\" \n\nShe blushed then said, \"I just wanted a few minutes alone with my guy before I walk down the aisle to promise to love, honor and cherish another man forever.\" \n\n\"I'll always be your guy Jennifer; vows or no vows.\" \n\n\"I hope so.\" She responded, looking at me and smiling. \n\nI leaned down and gently kissed her lips then smiling at her I said, \"Always.\" \n\n\"God, I am so glad you didn't do that the night I gave you that backrub.\" she said with a deep sigh. \n\n\"Me too. Do you still think about that night?\" I replied. \n\n\"Do you?\" she asked me with a shy glance. \n\n\"Often.\" \n\n\"Me too. Maybe a little too often.\" she sighed, \"We came so very close to messing up so very badly.\" \n\n\"I think ended well enough though.\" I said honestly then I added, \"Any regrets?\" \n\n\"One.\" She replied. \n\n\"What?\" \n\n\"That Mom isn't here to see this.\" she whispered. \n\n\"Yeah.\" I said softly. \n\nShe paused for a moment to regain her composure and then she looked up at me grinning that impish little grin that would always send me fleeing from the room a few minutes later. I also recognized the gleam that was starting to build in her eyes.  \n\n\"Hey Mark, wanna know a secret?\" she said smiling up at me, her blue eyes sparkling with mischief. \n\n\"Sure, why not?\" I said, folding my arms across my chest. \n\nShe turned around slowly and looking over her shoulder at me said, \"My panties match my bra.\" \n\nI stood there staring at her bare back in the opening of the gown and smiled at her. \"Really?\" \n\n\"Yeah, wanna see?\" she said winking at me. \n\n\"Yes!\" I said as I took a step forward. \n\n\"MARK!\" she squealed spinning around and crossing her arms in front of her chest. \n\nThere was a soft knock at the door and we heard Dad's voice say \"Jen? Honey? It's time.\" \n\nI smiled and taking her into my arms, I kissed the top of her head then whispered into her hair, \"Best baby sister in the world.\" \n\n\"Best big brother ever.\" \n\n\"Let's go get you married off to that idiot teammate of mine before he sobers up and makes a run for it.\" \n\n\"Dick.\" she said, slapping my chest. \n\n\"Tease.\" I responded, smacking her butt through the gown. \n\nThey live in Ohio. My nephew should be here by Easter. \n\nCrystal and I moved into Lauren's old house the day after we got back from our honeymoon this past September. As we lay in bed on our first night in our new home I began to tell Chris about the year I had with Lauren. I was about ten minutes into the story when she placed her index finger to my lips and shifted around in bed. \n\nSitting up, she grabbed her cell phone from the bedside table, typed out a message and quickly hit Send. A minute later her phone chimed. She responded then waited and when the reply came back she handed me the phone. \n\n\"He just told me.\" \n\n\"I told you he would.\" \n\n\"Thank you, Lauren. For everything.\" \n\n\"You're welcome Crystal.\" \n\n\"You knew?\" I said in a shocked tone. \n\n\"For about six months now. Lauren and I have gotten pretty close Mark and she didn't want any secrets between us.\" \n\n\"I will be damned.\" I muttered. \n\n\"For sleeping with Lauren before your dad did or for that backrub that Jennifer gave you?\" she said smiling playfully at me. \n\n\"You, um, know about that too?\" I asked nervously. \n\nHer blue eyes began to sparkle, and her grin turned into a naughty little smile as she pulled my college jersey over her head. She looked at me for a second then whispered, \"Roll over Mark so I can show you how a naughty backrub is supposed to end.\" \n\nLife is damned sweet some days. \n\nAs always, I hope you enjoyed it. \n\nYDW"
    ],
    "authorname": "YouDidWhut",
    "tags": [
        "older female",
        "younger male",
        "anal",
        "bondage",
        "spring break",
        "blowjob",
        "milf",
        "backrub",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/lauren-11"
}