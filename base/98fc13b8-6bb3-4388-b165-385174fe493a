{
    "title": "I Knew the Bride",
    "pages": [
        "There were a few artists that recorded 'I Knew the Bride (When She Used to Rock and Roll)', but our favorite is by the man who wrote it, Nick Lowe. It has a certain charm, hard to explain, but for us it paints an image of a woman who is a pleasure to know and watch as she dances through life - bringing joy to those around her. \n\nEveryone portrayed in the story below is over eighteen. This is fiction; as always, all characters and events, etc. are figments of our imagination and have no connection to any living or dead persons, real places, or true events. \n\nI Knew the Bride\n\nMy face broke out in a grin as I watched Lisa Casey walk up the aisle on her father's arm. I almost said out loud what I was thinking, \"My god, she is a beautiful bride.\" Lisa caught my eye, and in that way she has, gave me a secret smile in return. The wedding photographer, who was doing her best to be non-intrusive, took the bride's photo just at that moment, capturing it for posterity.\n\nLisa continued up the aisle. I looked up to her destination, the glassy-eyed groom standing near the altar, a giant grin on his face. Why not? He was about to exchange vows with the 'it-girl' of Liberty County, Texas - the female that almost every red-blooded heterosexual wanted to date, and/or fuck.\n\nI probably wouldn't have been invited to this shindig; but was currently dating Lisa's cousin Dana. I later learned that Francis Casey, Lisa's mother, asked her what the hell she was thinking, Francis considered it bad manners for Dana to ask me to be her escort, given my past relationship with Lisa. Lisa laughed when Dana teasingly told her Aunt Francis, \"I get horny at weddings and who better to relieve the itch than Nick?\" Dana said Lisa agreed with her and shut down the entire controversy by giving Dana a hug and telling her I was welcome. That's why I'm here, standing next to Dana and watching Lisa as she glides down the aisle in her classic wedding dress, approaching her intended, Trey Chase.\n\nThe reception, limited to one-hundred-fifty guests only because Lisa sternly told her father, \"This is MY wedding and not some damn political-business payback convention\" was held at the town's country club. The number of guests may have been fewer than whatever her mom and dad wanted, but her father, who happens to be the town's mayor and owner/president of our local bank, still insisted on hosting a blow-out affair. \n\nI watched as Lisa finished the traditional father-daughter and bride-groom dances before she cut loose, dancing to a fast number with her two bridesmaids. I've been to many weddings in my life, but don't remember any bride being able to move with such grace and passion. The woman loved to dance. Dana leaned over and whispered in my ear as we watched the dancers. \"I hope like hell the dress doesn't fall apart. It was her mother's wedding dress and they had a seamstress in last night making a few last minute adjustments.\"\n\nOf course, Dana and I both knew that there were a few score of men, young and old, hoping those seams did fall apart. But the dress held up and Lisa danced most of the night. At one point during a slow number, Lisa was dancing with Trey and I had Dana in my arms; there may have been a signal I didn't see because without a word, Lisa and Dana switched partners. \n\nLisa took the opportunity to talk. \"Thanks, Nick. You've always been a great friend and a wonderful gentleman. Thanks for staying true to our agreement by keeping our arrangement secret.\"\n\n\"You're the one who spilled the beans. I knew you told Dana, but Dana said your mom knew too.\"\n\n\"I did tell Dana; it just came out one night when we were drinking at home. She promised to keep our secret and I trust her. And you're the lucky recipient of my indiscretion; Dana couldn't wait to jump your bones after I got engaged to Trey.\"\n\nThat made me smile, but I had to ask. \"What about your mom; how did she find out?\"\n\nLisa leaned back and looked at me with those beautiful blue eyes. \"She caught me sneaking in one morning. I couldn't lie to her. Her lips are sealed.\"\n\nI had to ask, \"Trey doesn't know?\"\n\n\"We haven't shared our pasts; neither of us want to know. It's funny; I think he's afraid I have a dirty past because of the way I flirt and he's not willing to know about it. He'd probably be surprised to find out I've been to bed with three men in my life, including him. Luckily, one of those men was you and you showed me how good sex could be. Trey's the lucky recipient of your training.\"\n\nI looked over at the head table to find Lisa's mom giving me the evil eye. I smiled at her and made up my mind to ask Francis Casey to dance later just to let her know I didn't have any evil intentions. The song was about to end and Lisa had one last thing to say.\n\n\"I'm going to ask a favor of you, Nick. Trey grew up in a sheltered environment and I know he feels like a fish out of water in our small country town. He needs a friend like you. I know he's dying to go fishing, but he's embarrassed by his lack of knowledge. Think about it.\" And she squeezed my hand and walked toward the lucky groom. Dana came back and we walked back to our table with her arm in mine.\n\n************************ \n\nMy friendship with Lisa began three years before her wedding day, soon after my return from a four year stint in the Marines. I won't bore you with the details of my time as a Marine. I did come back in one piece, satisfied I'd served with honor and glad to be home with my family and good friends. The welcome I received in my hometown was almost overwhelming, I expected my parents and siblings to be there, but as I walked off the commuter jet at our local airport, I had to hide the tears when so many people showed up to welcome me home. \n\nThe second night home, Tom and Bill showed up at my folks' place. \"C'mon, we're headed to The Barn for drinks and dancing.\" Tom and Bill accepted my mother's hugs and her threat. \"Don't you two get my boy into trouble.\" \n\n\"Ma, you know better than that.\" Tom answered. My two best friends always called my mother 'Ma' and she loved it. \n\nWe walked into The Barn and it didn't take me thirty seconds before my eyes latched on to the spinning girl on the dance floor. Her dance partner was barely keeping up, although trying desperately. The song ended, the girl got on her toes to give him a quick kiss on the cheek before skipping back to the table where her girlfriends sat laughing and clapping. The man she left behind did his best to retain some dignity, walking back to his friends at the bar and taking a drink from his longneck.\n\n\"So, who is that?\" I asked Bill, gesturing with my head toward the girl. She was one of the prettiest girls I'd seen in a long time, even before your eyes moved down to the body poured into those tight blue jeans. \n\nBill wasn't surprised by my interest. \"Remember Dwight Casey's little sister?\"\n\nI had to do a double take. \"The one that was always trying to hang out with us and made a pest of herself? Dwight would always call his folks to get them to pick her up. She was what - four years younger than us?\"\n\nBill smiled. \"The age difference is huge between fourteen and eighteen, then shrinks to nothing between twenty-one and twenty-five.\"\n\nThe three of us sat at one of the tables and ordered a pitcher of beer. Bill continued to fill me in. \"Lisa Casey returned to town earlier this year after graduating from some community college in Florida. She's in here at least two nights a week. She dances and drinks, but never gets out of control. Lisa's earning a reputation as a tease, but even still, guys never stop asking her to dance. If you watch, she'll turn down most of the guys.\"\n\nTom added, almost to himself as he looked out at the dance floor, getting his courage up, \"Dancing with the boys, treating them all like toys.\"\n\nWe sat at our table drinking our beers; now and then Bill or Tom would ask a lady to dance. I held down the fort, positioning myself to watch Lisa Casey out of the corner of my eye. She was constantly approached; when she did get up to dance, it was a joy to watch. I've been to strip joints on three continents during my stint in the Marines, but I rarely saw a woman in any of those places that compared to Lisa when it came to moving with such eroticism - even though Lisa was fully dressed in a relatively conservative manner compared to most of the other ladies in The Barn. \n\nMy mother didn't raise a fool; when I saw half the men getting shot down and most of the other half being made to look silly out of the dance floor, I knew I'd have to up my game. The only men who got a second dance were the few that kept up with Lisa. I intended to be one of the lucky ones when I got a chance. I went home that night, slightly sober, with an additional item on my 'to-do' list. The first item was 'find a good job', the second item, 'get a girlfriend', and the newest addition, 'find a dance instructor'.\n\nFinding a job was relatively easy. One of the refineries just outside of Houston was hiring and the mechanical skills acquired during my time in the Marines were in high demand. Within a week of my return to town I had a decent job. Unfortunately, it was on the swing shift, which severely cut into my play time. I used my days by going back to school at the local community college, taking business classes and, believe it or not - dance classes offered by the PE department. \n\nReal life happens while you're working to make your plans a reality. My reason for attending a dance class was to polish my skills on the dance floor and wow Lisa. Then one afternoon, it was the fourth class, I was paired with Sandy Abbasi for the first time. Sandy stood five-ten in her heels and had the body of a pin-up. She fit perfectly in my arms and, as we danced to a fox-trot, her dark eyes looked up at mine. Her smooth right hand clasped my left with a strength I found appealing. My right hand was resting on her back, just above her waist, and I could feel the strength of her core. \n\nWe were both concentrating on where our feet should go, so there was little time for chit-chat or introductions until after the music stopped. Before we switched partners, I took a chance. \"My name's Nick Bottom; can I buy you a cup of coffee after class?\"\n\nHer face lit up when she smiled. \"Yes, I'd like that.\" She turned and walked toward the young man who was her next partner while I found myself standing in front of Jess. Jess and I previously danced together during the last class. As the next song started I wasn't paying attention and stepped on Jess' foot.\n\n\"Nick, pay attention with those size twelves!\"\n\n\"What?\"\n\n\"You stepped on my toes, dufus. Quit looking at Sandy and pay attention.\" Jess said this with a chuckle. Jess was a sweet girl; 'girl' being the operative word because she was only eighteen. \n\n\"Sorry Jess.\"\n\nAs I turned Jess so she was now facing Sandy, Jess laughed. \"You two have something going? She's giving me the stink eye.\"\n\n\"No, I just met her and asked her out for coffee.\"\n\n\"Well, I can see the attraction; that's one beautiful babe.\"\n\nI stopped dancing and looked at Jess. She straightened me out.\n\n\"I'm gay, Nick.\"\n\nThis was the first time Jess shared her sexual orientation and it surprised me. Most of the lesbians I knew in the service were sort of butch, Jess is a cute little nymph. \n\n\"There's going to be a lot of disappointed guys when you come out.\"\n\n\"Can't help it. My folks think it's a phase. Mom keeps hinting she went through a 'phase' during college. But at long as I remember, I've been attracted to girls.\"\n\n\"Me, too!\"\n\nJess laughed at my comment. The girl has a wonderful sense of humor.\n\n\"Thanks, Nick. You didn't change a thing or look at me funny when I told you. Your parents taught you well.\"\n\nSuddenly, I became concerned. \"Do you think Sandy's gay?\"\n\n\"Not unless my gaydar is broken; she's definitely into you.\"\n\nThe song ended and class was over. I gave Jess' hand a squeeze before I walked over to Sandy. \"Ready?\"\n\nSandy Abbasi was different from any of the women I dated up until that day. I always went for the blonde, blue-eyed cornflower girls; Sandy has dark almond-brown eyes with black hair. Her skin reminded me of the color of the sand after a wave washes ashore. \n\nOver coffee I learned how this Mid-Eastern beauty ended up living in South Texas. \n\n\"Dad left Iran immediately after Ayatollah Khomeini's takeover of the country. His father was a Muslim and his mother a Jew. Dad read the writing on the wall, left Iran and ended up in Houston working in the same industry as he had over there, as a chemical engineer in an oil refinery. He met and married Mom, a Jewish girl from Chicago. Actually, Mom's dad was Jewish, her mom a Catholic, so I'm kind of a mutt. Dad wanted to name me 'Jerusalem', but Mom vetoed that.\"\n\nI could relate to Sandy's religious mix since my mother is Baptist, Dad's an Episcopalian, neither are religious and for some reason they made me and my siblings attend church with my Lutheran Aunt Gloria until we left home after high school. Maybe they just wanted us out of the house for some Sunday morning 'private' time.\n\nOn our second date, I took Sandy out to my Uncle Jason's ranch and that's when I learned our time together would be short-lived. Sandy, the oldest of three children, was home temporarily from the University of Illinois to help her mother after her father's stroke and her mom needed help with the two younger siblings. Her father was recovering and Sandy would be heading back to Champaign-Urbana at the beginning of the next semester to finish her senior year. She'd already been accepted to U of I's College of Veterinary Medicine. Sandy told me all this while moving through Uncle Jason's horse barn; stopping to pet each of the newborns.\n\nI had to ask. \"So, what's with the dance class?\"\n\n\"I needed a PE credit. Seemed like a good way to get some exercise and get the credit. Are you complaining?\"\n\nI only smiled in reply, showing Sandy my best imitation of Teddy Roosevelt, hoping she'd accept that as an answer. How do you tell a woman you've only dated twice, haven't even kissed and is leaving soon - that you're already falling in love with her? Best to let some things left unsaid.\n\nThe surprise was that evening, on our way back to the city, Sandy asked if we could just have dinner at my apartment. \"Let's pick up a pizza, a bottle of wine and a movie.\"\n\nIt was a surprise, but not nearly the surprise I received when we walked in the door. I barely had time to open the wine before Sandy had her arms around my neck and pulled me down for a wonderful kiss. She broke the kiss but kept her eyes on mine. \n\n\"Let's skip the movie and eat in bed.\" She poured two glasses of wine and walked toward the hallway. \"This way, right?\"\n\nI picked up two plates and dished a slice on each plate, then followed her. By the time I reached the bedroom door, Sandy's blouse was on the floor and she was removing her bra. With a plate in each hand, I just stood and watched. The shorts and panties were next. She gave me a few moments to take in her beauty - a perfect set of C-cup breasts and the dark patch of hair hiding the juncture of a pair of long, shapely legs. Her brown skin practically glowed. \n\nSandy broke my spell. \"Your turn, Nick.\"\n\nI put the plates on the dresser and stripped. Sandy walked toward me and crushed our naked bodies together; her hard nipples pressing into my chest, her tummy against my semi-hard cock. \n\n\"I've wanted to see and feel your body since our first dance. I was disappointed you didn't get hard. My roommate's romance novels always have the guy getting hard when they dance with the beautiful princess. I thought maybe you didn't think I was sexy.\"\n\nI took Sandy's hand and put it on my cock, letting her feel it grow. \"Does that answer your question?\" I kissed her; one hand on her back, pulling her into me, the other hand on her breast, her nipple between two fingers. \n\n\"I've been a good girl, Nick. Not a virgin, but only with a few boys, all during long-term relationships and never after two dates. Make love to me, please.\"\n\nIf I was smart, I would have told her to get dressed and taken her home. It would have been the smart move because making love to this beautiful woman only led me deeper down the rabbit hole. As I laid her down on my bed, I took the time to kiss every inch of her body; from her lips to her neck, both breasts before turning her over on her stomach so I could start on her neck, down her back to the perfect globes of her ass. I turned her again and started at her feet this time, up her legs and finally to my ultimate goal. Although she kept a patch of hair above her vagina, her lips were shaven. My tongue played in between those lips, I spread them with my thumbs and dug deeper. Until now, Sandy was purring, but as soon as my tongue wiggled its way inside her pussy, she let out a moan and grabbed my head with both hands to pull me closer. I moved one thumb up to tweak the hard nub of her clit. In less than a minute I was rewarded with the sweet taste of her cum.\n\nI'm like most men, I love hearing a woman vocalize her orgasm and Sandy didn't disappoint. \"Oh Nick, Nick, Nick. Stop, no don't stop. Yes, stop, stop. Let me catch my breath.\" Sandy's cries were fairly innocent; it turns out she never curses, that includes taking the Lord's name in vain.\n\nBefore Sandy could recover, I moved up and kissed her. Sandy hesitated when she saw her fluid on my lips, but I didn't let her, I grabbed her head and wouldn't let her avoid either my lips or my tongue as it probed her mouth. My hips were between her legs and my hard cock was slowly teasing her clit, moving up and down. When we broke that kiss, Sandy looked at me. \n\n\"I thought it would taste icky. That's the first time for me; it's kind of sexy.\"\n\n\"Do I need a condom?\"\n\n\"You better. I'm not on birth control.\"\n\nI reached over to the nightstand, grabbed a packet and slipped the condom over my hard-on. Sandy was on her elbows watching me between her legs. I leaned forward, keeping the tip resting on her pussy lips. \"Put it in.\" I said.\n\nWhen she hesitated, I took her hand and placed it on my cock. \"I've never...\"\n\n\"Sandy, I want you to show me what you want. You don't have to, but I want to know if you want me inside you.\"\n\n\"I do, but...\"\n\n\"Then show me. Tell me where you want me. Not with words.\"\n\nSandy placed the tip at her opening, then pulled me toward her with her feet on my ass. She was wet from her orgasm and my cock slowly worked its way all the way until our pubic bones met. \n\nSandy had a beautiful look on her face, the kind of look a woman gets when the first bite of Tiramisu hits her tongue. \"So good, so good, Nick.\" That was my cue to begin working it. I kissed her lips and jerked my hips back and forth. Sandy grabbed my upper arms and put pressure on my ass, her feet mimicking my movements - pressure, release, pressure, release. Every time I reached the top or bottom of my stroke, I paused to give her an opportunity to feel emptied and then filled. Within ten or so minutes Sandy's hands squeezed my biceps, signaling a second orgasm. \n\nI watched her cum this time. Remember - the first time my head was not in position to see anything. It was thrilling to see her eyes flutter, her mouth form a perfect 'O', and her whole body shudder. When she finished, I stopped and withdrew. Sandy looked at my still hard cock inside the condom.\n\n\"Did you cum, Nick?\"\n\n\"No, I have another idea. Have some wine.\" \n\nI walked into the bathroom, removed the condom and used a washcloth to remove the condom taste from my cock. My cock was still three-quarters hard when I returned to the bed. Sandy was sitting up with her back against the bolster, sipping on the wine. I drank some of my wine, took her glass and placed it back down on the nightstand and kissed her, the taste of the chianti was on her tongue.",
        "\"I didn't want to cum in a condom. I want to cum inside you.\"\n\n\"But we can't, I could get pregnant.\"\n\n\"Not there, in your mouth.\"\n\nSandy looked shocked at my suggestion. \"I've never let a boy cum in my mouth.\"\n\n\"Have you given a blow-job?\"\n\nSandy's face changed from shocked to embarrassed. \"Yes, to my last boyfriend, but I always made John pull out.\"\n\n\"Tell you what, try it this one time. If you find it disgusting, I'll never ask again.\" I kissed Sandy and then guided her head down to my lap.\n\nIt was probably the worst blow-job I've ever gotten, but I could tell she was trying. And hell, a bad blow-job is still a blow-job and I hadn't cum in at least a month. Plus, while she was going down on me, it gave me a chance to play with those perfect breasts and tease those perfect nipples. Just before I came, I warned her.\n\n\"I'm going to cum, Sandy. Try to keep your mouth on the head of my cock and just let it fill your mouth. Try not to choke or spit it out, babe.\" Hot damn, she did it, she even swallowed it all. After I finished, I pulled her head up to mine and went to give her a kiss.\n\n\"Don't you want me to rinse first?\"\n\n\"No, it's no different than when I kissed you after you came in my mouth.\" \n\n\"OK.\" And she gave me a big fat kiss and our tongues met. \"You amaze me, Nick.\"\n\nWe ate cold pizza and cuddled in bed until it was time to take her home. The next day, Sandy went to a clinic and was fitted with a diaphragm. No more condoms. We spent the next two months dating, dancing and making love. \n\nAnd then she was gone.\n\nI don't think it was any easier on Sandy than it was on me. She asked if I could look for a job in Illinois. But we both knew it was a fantasy. She'd be busy studying to be a Veterinarian; long hours and intense studies. I'd be faced with relatively poor employment opportunities for a person with my skill set. Besides, I recently was placed on days at the refinery, despite my lack of seniority, and wasn't looking forward to going somewhere and being back on swing or night shifts. \n\nBut after she left, I missed her like crazy. \n\n************************ \n\nTwo weeks after Sandy left, Bill and Tom grew tired of my moping around so they took me back to The Barn for a few beers and to see if I could get back on the horse, that is the dance floor, again. Sandy and I had spent a few evenings in The Barn during the two months before she left town. I even danced with Lisa on a number of those occasions while Sandy danced with one of the local cowboys. \n\nThis evening I was on my second beer and hadn't gotten up to dance when Lisa stopped over at our table and asked me if I wanted to dance. As far as anyone at the table knew, this was a first, Lisa asking a guy to dance.\n\n\"C'mon Nick, give this girl a thrill and dance with me. I know Sandy went back to school and I can't remember you ever dancing a slow number with anyone but her.\" Lisa took my hand and led me out onto the floor, holding me tight as we danced to a slow number and then kept me out there for a two-step. We finished that dance and when the music picked up, Lisa kept me out there for a third. That song ended and she kept her hands in mine for a half-minute. \n\n\"Thanks Nick; that was fun. Let's do it again soon; don't be a stranger.\"\n\nOnce or twice a week I ended up back at The Barn and almost every time, Lisa and I spent a good part of the evening together on the floor. She never sat with me on those nights; she always stuck close to her girlfriends. Never accepted a drink from me or any of the other cowboys hanging at The Barn. Always drank from a bottle that she opened herself and kept the top on when she was out on the floor. I learned much later that her older sister had been drugged and date-raped at a fraternity party years before this.\n\nImagine my surprise when, hearing a knock on the door of my single-wide after an evening out, I looked out the window and saw Lisa standing there next to a bicycle. I opened the door cautiously, looking around. \n\n\"Can I come in, Nick?\"\n\nI opened the door wider for her to enter.\n\n\"Should I leave my bike out here?\"\n\n\"Better bring it in.\" I stepped out and carried the bike up the stoop and into the house. \"What the hell are you doing here, Lisa?\"\n\nLisa smiled and took a half-minute to answer, she spent that half-minute looking up and down my body, I forgot I was only wearing a pair of boxers. Is this how chicks feel whenever a guy looks at a girl, like prey? Oh well, I can live with it.\n\n\"Got a drink, Nick?\"\n\n\"Your usual, beer?\"\n\n\"I think I need something stronger. Could you pour me a whiskey, maybe with some ice?\"\n\n\"Coming right up.\" I poured two; hers with ice, mine neat. This being a special occasion, I poured the good stuff, each glass with two fingers of Knob Creek Rye. Lisa took a small sip, kind of shook a little, then started in.\n\n\"This is tough, Nick. I don't know how to ask, so I'll come right out with it. Ever consider a 'friends-with-benefits' arrangement with me?\"\n\nI almost burst out laughing. This didn't come out of right field; this was from another planet. Lisa turned red with embarrassment at my response; she stood up. \"Never mind. Stupid, stupid, stupid!\"\n\n\"Wait a minute, Lisa. Don't get mad. It's just so unexpected. Why would you ever ask me such a question?\"\n\nThere was an unexpected passion in her reply. \"Because I'm sick and tired of masturbating to get off; I need a man.\"\n\n\"Lisa, there are dozens of men in town just salivating to be your man. Why not find a nice guy to fall in love with and have a real relationship?\"\n\n\"Because I haven't met anyone who I feel that way about. And I know myself, if I think I'm settling, I'll regret it - not now, but sometime in the future and I'll end up either divorced or a cheater or both. And I don't want to be that woman. But in the meantime, I want to get laid! I've only had one lover in my life. I'm twenty-one and have only had one man in my life.\"\n\n\"So, you want me for a human dildo?\"\n\nLisa made a strange face. \"Gawd, that sounds so tawdry. But I guess that's what it is.\"\n\n\"Why me?\"\n\nHer honest answer kind of stunned me. \"A few reasons, Nick. Number one - I always thought you were the cutest of all my brother's friends and you were never mean to me back then. Two - you and I are so different; we aren't good long term relationship material. Three - you're in love with Sandy. She'll be gone at least three years and we both need a sexual outlet. Four - even though you and I aren't long-term material, you're gorgeous and you make me want you inside me.\"\n\nI couldn't help but chuckle. \"Well this is the coldest, most logical seduction I've ever received. It's like being romanced by Spock on Star Trek.\"\n\nThat made Lisa giggle. \"I guess I suck at romance. But it doesn't mean I don't find you incredibly sexy and handsome. I just don't want to fall in love with you.\"\n\nI was starting to warm to the idea. Lisa is a babe; kind of my type before Sandy showed up. Pretty face, long blonde hair, big blue eyes, c-cup breasts, narrow waist above nice hips, a great firm ass and those great legs. Yea, maybe I could make the sacrifice. \"So, how does this work?\"\n\n\"Well, call it fate or kismet, but your place is across the park from my family's house. I take my bike through the park once or twice a week and we screw each other's lights out. I head back across the park before the family gets up.\"\n\nLisa was right; through some quirk in the universe, the trailer park that housed my single-wide and forty similar domiciles was grandfathered on prime real estate right off one of the city parks, at least until some asshole figured out how to bypass the land grant and has us condemned. On the other side of this same three-hundred acre city park sat some of the toniest homes in all Liberty County. And of course, that was where the Casey family, toniest of all the county tony families, lived. \n\n\"When do we start?\"\n\nLisa answered my question by taking her top off. Those two firm breasts popped into sight, so firm that no bra was necessary to keep them up and just aching to be fondled. \"How about tonight?\"\n\nCould any red-blooded All-American, heterosexual boy resist? Not this boy. For the second time in the past four months, I had the pleasure of introducing a beautiful young woman with limited sexual experience to the delights associated with the many variations of sexual hedonism. \n\nLimited experience was the only thing Sandy and Lisa had in common. Whereas Sandy stayed in control and was somewhat inhibited during our love-making, Lisa let it all hang out. Ten minutes after that top came off, we were both naked, Lisa sitting on my lap with my cock planted all the way to her cervix, Lisa bouncing and rutting, her hips in a constant state of motion. No foreplay - just straight to the fucking. \"Fuck me, Nick; fuck me! Damn, that feels so fuckin' good.\" \n\nThe nice thing about this position is it gave me ample opportunity to nibble on those nipples, twiddle her clit with two fingers of my left hand and reach under her with my right hand to tease her rectum. I didn't stop to ask about the condom; we were both out of control. Lisa kept grinding until her orgasm hit and she flooded my cock with juice while the muscles of her pussy sent an electric charge up my spine. \n\n\"Oh fuck, Lisa.\" I let out as I felt stream after stream of spunk out and into her womb. I had to hold Lisa up so she wouldn't fall off my lap and onto the floor. Lisa's head collapsed on my shoulder and she stayed in that position until her breathing returned to normal; after all, she did most of the work. \n\n\"It's a little too late to ask, but should I have pulled out?\"\n\nLisa laughed. \"No, I'm safe. Lucky thing, too because you drenched my ovaries. I went on the pill last year before I lost my virginity to my boyfriend. Stayed on it, just in case.\"\n\n\"Are you going to spend the night?\"\n\n\"No, I'll go back home as soon as my legs stop shaking. Next time we'll spend more time together - if you don't mind. I need to make certain this sneaking in and out works. I'll ride back in a minute.\"\n\n\"Look, I'm not comfortable with you riding back through the park by yourself. I'll take my bike and ride back with you to make sure you're safe.\"\n\n\"See, that's why I like you, Nick. Thanks.\" Lisa gave me a kiss which confirmed her appreciation.\n\nThinking back on it the next day, I wondered if I was reacting to Sandy's leaving me. That night, I didn't care about Lisa; I only wanted to fuck and cum. Don't get me wrong; Sandy never led me to believe she would change her mind and stay in Liberty County to be with me. She made it clear from the start she was going back to Illinois to be a Vet. The problem was, I knew she loved me and I loved her. I took my frustration out on Lisa. \n\nAnd for the next five months we were never seen together unless there was a crowd of people nearby. If anyone knew about our arrangement, it wouldn't be because I said anything. 'Never look a gift horse in the mouth' is an excellent approach to life. \n\nIt never became serious. Lisa was right, we were just too different; we didn't share interests, ambitions, or politics. She never did or said anything to lead me to believe anything would change and I was happy with our arrangement. When I talked about hunting, fishing or camping; she'd listen politely. When we discussed politics, she never made me feel like a redneck. But I knew that if we married and had children, we'd argue about their upbringing. And if we miraculously made it to when the kids left the nest, we'd be one of those couples left staring at each other and eventually splitting. Best all - Lisa knew this, too. \n\nWe still danced together at The Barn, still moving to separate tables afterwards. Lisa continued to dance with the other cowboys, I danced with the other gals. No drama. Once a week or every other week, Lisa would come by the trailer and we'd haul our ashes. It worked for me because I wasn't interested in developing any other relationships and sex is almost always guaranteed to complicate things. After that first night together, Lisa ended up staying later; we would set the alarm for five and I'd ride next to her in the early morning back to her house, just to make certain she was safe. \n\nAnd the sex was great. We practiced every combination of two young, buff, in-shape boy-girl sexual delights. Then it ended as suddenly as it started. I left town for what should have been a month-long assignment when my supervisor asked if I could spend some time straightening out the maintenance department at one of our subsidiaries in North Dakota. Little did he know it would take much longer after I had to fire three employees: two for failing drug tests and one for theft. The 'month long' assignment took all of four months to get new people hired and trained. \n\n************************ \n\nTrey Chase moved to town while I was on that four month assignment in North Dakota. When I returned, two things had changed. Trey was the new assistant general manager of our facility, replacing a guy I absolutely hated. The second thing that changed was Lisa Casey was now dating Trey Chase, and it seemed serious. \n\nDespite my first impression of Trey as a guy who was born on third base, he did something to solidify my respect for him. We had a real asshole in the maintenance shop, Ike Flynn, who Trey got rid of. It wasn't only that he got rid of Ike, it was how he did it. Ike was a top welder, but he bullied people and most every female in the plant stayed away from him. He ignored all the warnings, he thought his welding skills were too valuable to be let go. Finally, management had enough and it fell on Trey to give the guy his walking papers. \n\nSomehow, Ike got wind he was getting axed. When our supervisor told Ike to report to Trey's office, he skipped out instead. Bright and early the next morning, Ike was punching in as if nothing had happened. 'Supe' was talking to me as Ike walked past us on his way to his workstation. \n\n\"Flynn, I told you yesterday to report to the AGM's office. Where the hell'd you go?\"\n\nIke ignored the question. \"Does he want me there now?\"\n\n\"Yea, he's waiting for you. Get your ass up there.\"\n\nIke turned and walked toward the admin offices; I thought it was odd, Ike still had his jacket on, zipped to his neck. \n\nNo one in the company would have ever known the total story of what happened next except Trey Chase had his admin assistant, Gloria, listening to the exchange via their old-school intercom. Two hours after the incident, Gloria was telling everyone in the breakroom, including me, about it.\n\n\"I let Ike into Trey's office, closed the door and sat at my desk listening in with the intercom Trey kept open. Mr. Clark from corporate HR was with Trey. Trey told Ike that he was being fired for repeated violations of corporate policies. Before Trey could say another word, Ike interrupts him and growls, \"I knew you dipshits were letting me go today. That's why I came in wearing body-explosives under this jacket.\"\"\n\nAs we listened to Gloria tell the story, I could still see the fear in her eyes. Gloria continued.\n\n\"When I heard Ike say that, I wanted to run or jump under my desk, but I was frozen in my chair with fear. I was facing Trey, looking right at him through his office window. I couldn't believe what he did next. Trey smiled right at Ike and cool as can be, he says, \"Cut the shit, Flynn. You got explosives, let's see 'em. Go ahead and show us. Otherwise, take your severance letter, empty your locker, tuck your tail and get the hell out of my plant.\" Trey picked up the phone and called Ernie in Security to escort Ike out of his office.\"\n\nGloria was surrounded by other plant employees as they came into the breakroom, repeating the story two more times. Gloria didn't tell anyone about Mr. Clark from HR wetting his pants. Trey had helped Mr. Clark get to his car in the parking lot without anyone but Gloria seeing the dark patch on his lap. I only found out about that a few weeks later when Gloria and I got drunk at the Labor Day picnic in town. \n\nA couple years later Trey and I were out fishing and I brought it up; asking Trey how he kept his cool considering he never had any training. \n\n\"To tell you the truth, Nick. I was worried about the guy; that's why I had a can of bear spray in my lap, ready to spray him. I worried he'd have a gun or knife. When he pulled the 'I have body explosives' routine, I figured I was safe. I mean, who the hell blows themselves up over a job?\"\n\nIt made sense; you read about guys going postal, but it's always a gun. Still, it proved Trey had cajones. \n\nThe other thing Trey did which helped me gain respect for the silver spoon kid was this - he spent a couple hours at least every other day on the shop floor. He knew every employee on both shifts, knew their spouse's name and probably half their kids. And it wasn't any of that phony bullshit. This guy really cared. When Manny Torres' wife miscarried their first, Trey told Manny to take a few days off without docking him. Flowers showed up the next day at Manny's house. That's just a sample of the kind of personal attention he paid to all of us at the plant.\n\nI didn't see much of Lisa after I returned from North Dakota. She and Trey didn't hang out at The Barn that often and, needless to say, she never visited my trailer again. Trey was my boss and we never spent any off hours together until much later, after his marriage to Lisa. \n\n************************ \n\nAbout a week after getting back to town, Tom and I were sitting at a table at The Barn one night. It was a slow night, no live band, some young thing was feeding the jukebox and the constant flow of love songs had me drifting off to sleep when something caught my eye. Jimmy Crawford was sitting at the bar with Betty Hudson, trying his best to make time with Betty, a girl totally out of his league. \n\nThe bartender set a drink in front of Betty, and just then Fred Morton came up on Betty's other side and said something to her. As Betty turned toward Fred, Jimmy seemed to put something in Betty's drink. \n\n\"Shit, Tom; I swear Crawford just spiked Betty Hudson's drink!\"\n\nTom looked toward the bar. \"You're kidding, right?\"\n\n\"No I'm not; I'd bet on it. Grab Bubba and get him over to the bar.\" Bubba is actually John Jacobs, but all the regulars called The Barn's big-ass bouncer 'Bubba'. I headed to the bar. \n\n\"Betty, hi.\" Betty looked at me with hope, as if silently pleading, 'Save me from these guys, please.' Jimmy and Fred gave me a different look and Jimmy said out loud, \"Get lost, Nick.\"\n\nBubba and Tom arrived at that moment. I grabbed Betty's drink and handed it to Bubba. \"It's been spiked, Bubba. I saw Jimmy put something in it.\" Jimmy went to grab the glass but Bubba held it away from him with his one hand and gripped Jimmy's hand with his other. \n\n\"On the floor, Crawford.\" Bubba was twisting Jimmy's hand in such a way that Jimmy had no option but to do as he was told. \n\nI saw Fred trying to sneak off, so I asked, \"Going somewhere, Fred?\" \n\n\"Heading home.\"\n\n\"Stay right where you are, asshole.\"\n\n\"I had nothing to do with any drugs.\"\n\n\"You can tell the sheriff. Until then, you stay put.\" I saw the hate and fear in Fred's eyes. I knew he roomed with Jimmy and I wanted to make certain he didn't have a chance to head home and clear their room of any evidence.\n\n\"You got no authority to hold me, Bottom.\"\n\n\"You're right there, Morton. But just try for the door.\" Fred Morton had always been a squirrely coward and I knew he was weighing which threat was worse - the beatdown I'd give him before making it to the door, or what would happen if the cops found whatever was on his person or in his room. The one thing about Fred, though, he was smarter than Jimmy. He knew if he went for the door, he'd not only receive the beatdown, he still wouldn't be able to hide any evidence if he was lying on the floor after I got through with him. ",
        "Within five minutes, two squad cars pulled up and both the sheriff and one of his deputies came in. They took Bubba's and my statements, the spiked cocktail; searched both Jimmy and Fred, found some powder in Jimmy's pocket, then cuffed both assholes and carted them off to jail.\n\nNo surprise, the cops obtained a search warrant and found more drugs in their apartment. The drink did turn out to be spiked with some date rape drug. I testified in court as to what I saw that night. Jimmy's lawyer tried to shift the blame to me, questioning whether I spiked Betty's drink and set up Jimmy. Tom was in the courtroom and said he could see the jurors' eyes rolling in disbelief as the lawyer spun this fantasy. They weren't buying it. \n\nAs I left the witness stand, Jimmy stood up and threatened to 'get my ass'. Did I mention Jimmy had anger issues? I wondered how those issues would serve him in prison. Jimmy Crawford and Fred Morton ended up pleading out before it went to the jury; Jimmy was sentenced to five years, Fred to four. \n\nI didn't take the threats seriously at the time - not until years later.\n\n ************************ \n\nAs Trey and I spent time together at the plant we developed a work-friendship, but it didn't carry over to outside of work. Trey and Lisa got engaged, Dana invites me to the wedding and during that dance at the reception - right out of the blue - Lisa asks me to spend more time with Trey. A few weeks after they returned from their honeymoon, I asked if he'd like to spend a few hours Saturday morning out fishing on my boat. Trey surprised me when he jumped at the chance.\n\n\"What do I need?\" You could tell he was ready to drive to Cabela's to buy some gear.\n\n\"Just a fishing license. Go into Ace and pick up a license. Meet me in the parking lot here Saturday at six. Wear a long sleeve shirt, long pants and a hat to keep from getting sunburned. I have everything you need for now. If you enjoy yourself, we'll make out a list of whatever you'll need for next time.\"\n\nAnd boy, did he ever enjoy himself. It was like watching a five-year-old when he hooked his first fish and reeled it into the boat. It was a nice redfish and would make good eating. Trey wouldn't let me gut it; just asked me to guide him so he could do it himself.\n\nAfter that first morning, Trey and I got closer. We rarely talked about his marriage or Lisa. I did ask him once if she still liked to dance. I figured that was public knowledge. Trey answered, \"I took her to a country club dance last month. She wore me out. When one of those other men came over and asked my permission for her to dance, I left it up to her. She refused. I was almost sorry because five minutes later she led me back out there and kept me out there for another half hour. I don't know where she gets the energy.\"\n\n************************ \n\nDana and I had been dating now for almost six months. We always had fun and the sex was always a thrill. Looking back on it now, I wonder why I didn't recognize how well we got along and how compatible we were. My only excuse is I still thought Sandy and I had an opportunity to be a couple when she returned from school. \n\nSince Dana's and Lisa's moms were sisters, they shared many of the same features. Both were athletically trim, where Lisa danced to stay in shape, Dana's four years on UT's varsity volleyball team left her with more muscle, which she maintained after graduating by lifting free weights and running. \n\nDana was a couple inches taller than her cousin, probably five-nine and almost as tall as me when she wore those four-inch sandals that made her long legs look even longer. She had one of those faces that didn't need a lot of makeup to look classy and Dana never wore too much makeup, although she did have a thing for bright red nail polish. Dana's blonde hair looked good no matter how she wore it, down until it curled at her shoulders, in a ponytail, or especially in a French braid. The few times she went water skiing with us, she wore a bikini that drove the boys crazy because it always threatened to reveal the naughty bits if she wiped out - but she never did, even on a slalom. \n\nDuring those six months, Trey asked a couple times if Dana and I would like to double, maybe we could go out dancing. I kept putting him off; somehow, I didn't feel comfortable with the idea. About the time I was running out of excuses, Dana took a job in Dallas and we stopped dating. \n\n************************ \n\nTrey and I fished throughout the summer, probably once every other week. When he found out I was going to spend a weekend on my uncle's ranch hunting the feral pigs causing damage on the ranch, Trey asked to come along. \n\n\"Hunting is different from fishing, Trey. Have you ever even fired a gun?\"\n\nTrey admitted he hadn't.\n\n\"Tell you what. Next week we'll go to the range and you can fire one of my rifles and one of my pistols. We'll see if you like it; not everyone does. After that, if you want to continue, we'll sign you with a shooting instructor. How's that sound?\"\n\nTrey agreed. We went out to the range, Trey fired one of my pistols and two of my rifles - I started him off with a rimfire .22 and then my lever action 30-30. He seemed to do OK and hired one of the range instructors for lessons. He was looking forward to stalking pigs on Uncle Jason's ranch the next time Tom and I went hunting. \n\nThese feral pigs have very few natural predators and can do a great deal of damage to the crops and to the environment on a ranch through rooting and disease. They are prodigious breeders; a sow can have her first litter at six months of age and have two litters of four to six youngsters in a year. Uncle Jason has three corral traps set up trying to catch as many of the wild pigs as possible, but the smart ones learn how to avoid getting trapped. Some of the local ranchers hire men to hunt with night scopes and suppressors, a good night hunter can kill an entire sounder (herd), but that only works in the open fields. The smart pigs go into the woods and we end up hunting in the woods on the ranch a few times a year.\n\nIt was maybe a month after our day at the range, Trey spent the month with an instructor. The instructor assured me Trey was a decent shot with my Winchester and more important, Trey knew and followed the rules associated with proper firearms safety. No one wants to hunt with a guy if you're worried about getting shot by a novice. Tom and I took Trey out to Uncle Jason's ranch that weekend and the first morning we were sweeping through the woods in the east eighty acres. Trey was between Tom and me when we spotted two boars. \n\nI whispered to Trey, \"Your shot; take the one on the right. As soon as you fire, Tom will fire at the one on the left. Trey nodded before putting the rifle up to his shoulder and took aim. He was aiming through the peek scope of the Winchester, his breathing was normal and I watched as his finger moved into the trigger guard and gently touched the trigger. Trey took two breaths and when he exhaled halfway through the second breath, I thought he was ready. Instead he released the trigger and looked at me.\n\n\"I can't. You take the shot.\" his voice low.\n\nI didn't argue. I put my own rifle into position; Tom was still waiting patiently for one of us to take that first shot so he could take the second. I fired and dropped the first hog, Tom followed my shot with his own; before the second hog had a chance to react to my shot, it was dead. \n\nOnly then did I ask Trey, \"What happened?\"\n\n\"I never killed an animal before. Fishing or shooting paper targets seems different somehow. I had the thing in my sight, I was ready to squeeze the trigger just like I've been taught, but I couldn't do it.\"\n\nTrey looked embarrassed as he answered my question. I'm certain he thought we'd think less of him. He didn't know Tom and I grew up hunting, we'd killed our share of deer, pigs and other game. It was second nature to us, but we'd seen guys who just weren't comfortable with taking a life - even if it was only a deer or pig. Some guys just don't have it in them. To each their own. \n\nTom and I dressed out the best meat from those two hogs while Trey went back to get the wheelbarrow to haul it out. A few of the ranch hands' families would be feasting on the meat the next couple weeks. \n\nAs we took turns pushing the wheelbarrow, Tom did his best to pep up Trey. \"You're not the only one, ya know. Notice Bill's not here today? Since he came home from overseas, he hasn't hunted with us. Said he's tired of it.\"\n\nYou could see Trey appreciated it. He simply said, \"Thanks Tom\" and continued walking.\n\nTrey never went out hunting with us after that day, but he did join us on the boat for fishing. Me, Tom, Bill and Trey made for an odd foursome - three rednecks and one golden boy - but for whatever reason, it made for some fun fishing.\n\n************************ \n\nOne day Trey came down to the shop floor and found me working on one of the drill presses that was giving the operator fits. Trey pulled me aside. \"Nick, Lisa asked me to invite you to dinner one night this week. Can you make it?\"\n\nWhen I hesitated, he continued, \"She was always sore at me that you never found the time to double when you were dating Dana. Do me a favor and come over. She thinks you're avoiding us because of the whole 'side of the tracks' business. I told her you're not like that, but she'll be hurt if you refuse.\"\n\nI felt a little funny but agreed to come by Thursday evening for dinner. Thursday, I went home to shower and shave, then drove to Trey's house with a bottle of wine and a bouquet of fall flowers. I parked my truck next to Trey's Tahoe and admired the Chase home as I walked up the steps. It was decent sized, but certainly not a McMansion. Kind of a surprise, really. \n\nLisa opened the door; she was five months pregnant and she just glowed. \"Welcome to our home, Nick. I'm so happy you finally made it.\" She gave me a hug, then took the flowers out of my hand with a simple, \"Thank you - they're beautiful.\" I followed her in.\n\n\"Trey's in the back getting the grill ready. I was going to make Italian, but Trey insisted on grilling. I think it's a 'man' thing.\" Then she lowered her voice. \"You've turned him into a cave man. I can't thank you enough.\" She squeezed my hand. \"Can I pour you a beer? Trey bought a keg frig and there's IPA on tap.\"\n\nI said, \"thanks, yes\" and headed out the back to join Trey. Lisa came out a minute later with two pints. \"The beans and cole slaw are made, are the coals ready?\" she asked as she handed us both our beers. \n\n\"Yea, bring 'em out, babe.\" I watched Trey watch Lisa as she turned to get the steaks. He stared at her backside; I did the same without appearing to leer. Lisa was wearing some kind of stretchy yoga style maternity pants and her ass still rocked. Trey caught me and I did my best to recover. \"You're a lucky man, Trey. She seems incredibly happy with the impending motherhood.\"\n\n\"She wants at least three. This is just the beginning.\"\n\nI seriously did not know how to respond to that, so I just tipped my pint to his in a silent toast.\n\nI'm certain I haven't had that wonderful of an evening in the two years since Sandy left town. The three of us sat and ate, drank bourbon (except Lisa, who only drank sparkling water), talked about every subject but one, and didn't stop until eleven. \n\nThe only bump in the evening was when Lisa brought up the unspoken subject to ask the inevitable question. \"Nick, whatever happened with Sandy Abbasi?\"\n\nTrey shot Lisa a look, Tom or Bill probably told him that subject was off limits because it never came up with the guys. \n\n\"I don't know, Lisa. She's been gone over two years now. If she's been home for holidays or such, she never called. We talked a few times the first year, but I always got the impression she was too busy, so it just faded away.\"\n\nLisa already caught Trey's look after asking her question, and if that wasn't enough, the tone of my answer convinced her to drop the subject. She said, \"That's too bad\" then brought up something to radically change the topic. \n\nI was invited back to the house the next month. In December, Lisa had a beautiful baby boy who they named Kyle. In the four months between the boy's birth and Christening, Trey probably spent one morning on my boat fishing. We talked at the plant, he told me how busy things were with the new baby, but he wasn't complaining. Trey was one proud papa. \n\nI was invited to Kyle's Christening and soon after, I received a few more dinner invitations. I became more comfortable around Lisa; our past relationship long forgotten.\n\nOne day, I got a call at work from Lisa. \n\n\"Nick, I need help. Trey's at that meeting in San Diego this week, the water heater is spraying water all over the floor and the plumber can't get here for at least four hours. Can you help me?\"\n\nI didn't think twice. I clocked out after telling my supervisor I had an emergency, stopped at home for my tools and hightailed over to the Chase household. Lisa's mother met me at the door, giving me a hug and kiss on the cheek. \n\n\"Lisa's upstairs nursing Kyle. Thanks for coming over. Lisa called me, but I don't know what to do.\"\n\n\"Don't worry, Mrs. Casey.\"\n\nI spotted the problem right away, turned the water off and spent all of fifteen minutes taking care of the leak. Mrs. Casey stayed nearby and chatted with me; she and I had a good truce going, ever since we danced at Lisa's wedding. Just as I was putting my tools away, Lisa came downstairs with Kyle. Her mom was mopping up the floor, something I never thought I'd see - the town's maven with a mop and bucket. Lisa saw the leak was fixed and the dry floor.\n\n\"Thank heavens, Nick; you're such a sweetheart to save us. I called Trey, but he hasn't answered his phone yet.\" Lisa gave me a quick hug. I finished packing up my tools and drove back to work.\n\n************************\n\n \n\nLife is full of surprises, but nothing could have prepared me for this one. Almost a week after fixing that broken pipe, I pulled up to my trailer a little before ten pm and was surprised to see Trey's Tahoe parked on the street in front. Trey stepped out of his vehicle and he didn't look happy.\n\n\"Were you ever going to tell me about you and Lisa?\"\n\nWow, where did this come from, I wondered. \"No, I wasn't. Why are you asking?\"\n\n\"I guess I'm wondering if everyone is laughing behind my back. I didn't know a thing about it until Tory Sue Edwards asked me if Lisa didn't get enough of you and if we were doing threesomes.\"\n\nThis came from left field, how did Tory Sue know about me and Lisa? \"Tory Sue Edwards loves causing trouble. What'd she say?\"\n\n\"I was having dinner at the Blue Parrot with a client when Tory Sue made a point of intercepting me as I made my way to the restroom. She said, \"Where's your wife tonight?\" Before I could answer, she said, \"Oh, you didn't know about Lisa and Nick? I figured you three had a thing, given how close you all are.\" I must have looked lost, Tory Sue stood there giving me her drunken grin.\"\n\n\"Tory Sue's an ugly drunk. She's always been jealous of Lisa and pissed at me since I never asked her out.\"\n\n\"Well is it true? You and Lisa...\" Trey didn't finish the sentence.\n\nI decided it was in my best interest to tell the truth. \"Yea, Trey. Before there was a Lisa and Trey, we were together a few times.\"\n\nTrey looked as if he was going to bust a gut. \"So, that's what this whole thing is about. Spend time with the cuck and have fun behind his back?\"\n\nThis really pissed me off and I raised my voice. \"Bullshit! Since you two got together I've danced with her a few times, always with you nearby; we've shared a couple friendly hugs. Nothing more. Gee-zus Trey, you ever notice how Lisa looks at you? You ever see her give me that look? Besides, I've never fucked over a friend in my life, and until tonight, I thought you were my friend.\"\n\n\"What about when I was out of town last week and you came over to 'fix my water heater'? Are you saying that was legit?\"\n\n\"For Christ's sake. Yea! Her mom was there. Ask Mrs. Casey.\"\n\nSuddenly, I had a chill run up my spine. \"Trey, tell me you haven't hurt or accused Lisa.\"\n\nTrey looked surprised; like it was the oddest question imaginable. \"I could never hurt Lisa, Nick. I was ready to divorce her if you two were having an affair; but I'd never hurt her.\"\n\nTrey looked defeated. \"So why are you hanging out with me? I'm about one-hundred eighty degrees from you and the rest of your friends.\" \n\nI almost laughed. \"Man, you are messed up. Our friends! Do you think so little of yourself? You, the guy who married the most bodacious woman in Liberty County?\n\n\"To answer your earlier question, 'Why am I hanging out with you?', for a couple reasons. In the beginning because I respected you as a manager and how you handled Flynn. Yea, then Lisa asked me to, said you were interested in learning how to hunt and fish. So I thought you might enjoy learning that shit. And now? Because you're now a friend and you have a unique perspective on things, different from me and my redneck friends that we all find refreshing.\"\n\n\"Really?\"\n\n\"You dense? Yea, really.\"\n\n\"I grew up different from you Nick - you, Tom and Bill - all of you here. Most of my classmates had an agenda; always an ulterior motive for hanging out and pretending to be a friend.\"\n\n\"Too bad, but you're living amongst good people now; get used to it.\"\n\n\"You going to tell Lisa?\"\n\n\"Not me. But I am going to find out how Tory Sue found out. As far as I knew, only four people knew about Lisa and me; and Tory Sue wasn't one of them. The last thing I need in this small town is some gossip about me and your wife.\"\n\nTrey seemed to be relieved, apologizing all to hell.\n\n\"Trey - see, this is the thing - friends let friends fuck up now and then, as long as they're not fucking with their wives or cars or their remotes. You want to apologize? Buy me a beer tomorrow and we call it even. Go home Trey. Go see your boy and hug the wife who thinks you're the best thing to come out of Tennessee since Davy Crockett. She loves you, buddy.\"\n\nThe next morning I was knocking on Tory Sue's apartment door. She looked out the little window in the door. \n\n\"Go away.\"\n\n\"Open the door, Tory Sue; we need to talk.\" \n\nShe opened the door just enough to see each other. \"I said go away.\"\n\n\"You have a choice. Open this door or I tell everyone we know about the Sigma Chi party up at UT.\"\n\nYou would have thought I punched the poor girl in the stomach, her reaction was almost as violent.\n\n\"How do you know about that?\"\n\n\"Because one of the guys from my platoon was in there when it happened. He heard you were from here and asked if I knew you; asked if I wanted to see the video.\"\n\n\"Did you?\"\n\n\"Nah, not my thing. But if you don't stop spreading rumors, I might still be able to get a copy. Probably make great viewing at all the local bachelor parties.\" \n\nTory Sue, looking defeated, opened the door. She saw the two cups of coffee and bag containing our breakfast of nutritious donuts in my hand. Tory Sue pointed to her kitchen table; I sat down while she went to put on something more than the t-shirt she was wearing. \n\nShe came back wearing some Longhorn sweats and took a sip of her coffee. I started right in.\n\n\"How do you know about me and Lisa Casey?\"\n\n\"You mean Lisa Chase,\" she answered.\n\n\"No, I did mean 'Casey' because I never touched Lisa Chase. Casey was her name when she and I were together. Now, quit being a shit and answer me or I walk out of here.\"\n\nThe remainder of any bravado left in that girl just disappeared. \"I saw Lisa riding through the park on her bicycle one night when I was there with Guy Turner. We followed her to your place. Your window was open, but the shades were drawn. We didn't see anything, but it was easy to hear you two going at it. We thought it was funny, I mean, Lisa always acted like the virgin princess and there she was howling like a whore.\"",
        "\"So, why now bring it up? That was years ago.\"\n\n\"Well I left for school in Austin a couple days later and forgot about it. Then, last month, you treated me like dirt at The Barn. I got pissed and decided to mess you and the princess. Trey obviously didn't know about you two when I told him about it.\"\n\n\"How did I treat you like dirt?\"\n\n\"I asked you to dance and you acted like I was radioactive or something. Shit, Nick, I've had the hots for you since I was a teenager and you never even ask me to dance. Every time, I do the asking. Then, it's one and done.\"\n\n\"Well Tory Sue, you're a beautiful woman, but I gotta be honest with you and tell you that you're just not my type. I'm not gonna lead you on, maybe screw you, then dump you.\" I knew the words would sting but thought it best to be right out front with her. \n\n\"You're still hung up on her, admit it.\"\n\n\"I am not hung up on Lisa!\"\n\nIt was as if a light bulb went off in Tory Sue's head. She stared at me with wonder. \"You've got to be kidding - after almost three years? You're still mooning over Sandy Abbasi!\" \n\nThe look on my face must have answered her question, she looked at me with pity. \n\n\"Damn Nick, here I was feeling sorry for myself. I can't believe your still hung up on Sandy.\"\n\nWe finished our coffees and ate half the donuts. She was practically in tears as she confessed to that one night at the fraternity house when she got wasted and pulled a train. She wondered if she ever be able to live it down. She wanted to leave town and go where no one would know her, but she couldn't see herself living so far from family. \n\n\"Tory Sue, no one I know has seen the video. My advice, be honest with any guy you get serious with, but first off, forgive yourself. One fuck up shouldn't define a person. You were a good, kind girl before you left for the U, and now you're a shrew, people stay away from you.\"\n\n\"That night changed me, Nick. My boyfriend broke up with me that morning and I was stupid enough to think I could drink away my hurt and show him up by screwing one of his fraternity brothers. I was drunk and they used me; after the one guy finished, a second took his place, and before I knew it, five or six guys had been inside me. It's the last time I had sex Nick.\"\n\n\"I'm not a therapist, Tory Sue, I can't tell you how to get well. But inside you is the same sweet girl we used to know. Get help and bring her back.\"\n\nWe said goodbye at her door. I called Bill from my truck and asked if he'd recommend the lady he was seeing for his PTSD to Tory Sue. It's funny how these things can happen. Tory Sue started getting help from Bill's therapist, Bill and Tory Sue started dating and things got serious. Anyone who saw them together knew they'd end up getting married. And yes, Tory Sue told Bill about that night and Bill responded as I knew he would - he gave her a hug, wiped away her tears and made love to her. Tory Sue told me all this, Bill would never kiss and tell, when she thanked me for being such a good friend. \n\n************************ \n\nIf anyone questioned how stupid that peckerhead Jimmy Crawford could be, those doubts were put to rest the night he got drunk in some bar and began mouthing off how little time I had left. Too bad one of the guys from work was sitting three stools down as Jimmy vowed I was soon to get my due. Hell - I didn't even know the dumb shit was out of prison until I got a call and a word of warning from my co-worker. The trouble was, now I had to watch my six, waiting for his first move.\n\nI did some asking around, seems both Fred Morton and Jimmy Crawford got out early on some budget saving program to let out guys who weren't violent offenders and were in prison for drug related charges. Crawford had ended up pleading out before his trial went to the jury, pleading guilty to possession if the DA dropped the attempted rape charge. \n\nFred found Jesus while in prison, Jimmy found the Aryans and now thought he was a tough guy.\n\nI spent the next week being extra cautious, keeping an eye out for Jimmy to sandbag me. Before anything bad happened though, Sheriff Mason, who had his eye out for Jimmy on my behalf, spotted Jimmy's car outside a 7-11. Mason parked his cruiser beside the store, waiting for Jimmy to come out. Imagine everyone's surprise as Jimmy runs out of the 7-11 after robbing the store with a cheap Chinese Saturday Night Special. Mason has the drop on Jimmy as he's halfway into his car. Jimmy gave up, immediately shipped back to the pen awaiting a new trial on all kinds of new charges and would be gone for at least ten years. This time the DA didn't let Jimmy plead out on lesser charges. I could breathe easy, for a while at least.\n\n************************ \n\nI've heard the term, 'life hangs by a thread' somewhere. Maybe it was in that literature class they made me take - back in high school; some Greek king had to sit under a hanging sword, at least that's the way I remember the story. The point is this - one more time my life hung by the thread woven by little things.\n\nIt was a beautiful morning, the sun just coming up and it promised to be a great day spent with a fishing line in the water and a beer or three in the hand. I parked at the marina, the first one there, grabbed my tackle gear out of the truck and headed to the boat. As I leaned over the gunwale with the tackle box, I felt the sharp pain in my back. Dropping to my knees, the next thing I felt was the blinding smack of a blackjack at the back of my head. Stunned, I fell face first onto the pier, then someone flipped me onto my back, driving whatever was in my back deeper. Looking up, Fred Morton's ugly mug is leering down at me. In his hand he held one of those military tactical style knives the survivalists all like to carry, the blade near my throat. \n\n\"Feel that Nicky? That pain in your back is from a sharpened spoon. Guess where I learned how to make a shank? Thought you should know what that feels like before I slit your throat.\"\n\nI tried to move, but after the blow to my head I was still too fucked up to make anything but a feeble effort. My mind debated whether to take a chance at grabbing the knife when it became unnecessary as I watched most of Morton's face turn to goo. I had time to grab his arm as the knife fell forward in Morton's lifeless hand, missing me completely.\n\nI was passing out from the pain when Trey came into view. The last words I heard before the world turned black were Trey's, \"Hang in their buddy, I called 9-1-1, an ambulance is on its way.\"\n\nWhen I woke up, it was obvious, even in my doped up state, that I was lying in a hospital bed hooked up to wires and tubes. It was dark, too dark to see and I may have been alone, it took me a while to understand what happened and why I was alive. Within minutes I fell back asleep.\n\nThe next time I opened my eyes, the first thing I saw was the last thing I saw - Trey's face. What a beautiful sight. I looked at Trey and had to ask, \"Are you OK?\"\n\nTrey shook his head in disbelief. \"Damn, you're lying here back from the dead and you're worried about me?\"\n\n\"You never wanted to kill anything.\"\n\n\"We'll talk about that later. Let me call the nurse.\"\n\nThe nurse came in, then a doctor. I learned the shank hit my right kidney and they had to remove it. I lost a lot of blood and almost bled out, but except for having to live with one kidney, I should make a full recovery. \n\nAs soon as the doctor left, my mom and dad came into the room, followed by my brother and sister. An hour later the nurse told everyone I needed to rest and chased them out. I fell asleep within minutes; maybe the meds helped me sleep. \n\nThe next time I woke, Trey and Bill were there. I saw Bill on the phone and within a half hour, Tom came into the room. \n\n\"Feeling better, Nick?\"\n\n\"Don't feel much but groggy. I think they need to dial back the meds.\"\n\nTom laughed, \"Mr. Tough Guy, as always.\"\n\n\"Wasn't so tough when Morton had that knife to my throat. Thanks Trey.\" Trey looked embarrassed. \n\nTom looked over at Trey. \"You doing OK, Trey?\"\n\nTrey shook his head, addressing Bill and Tom. \"First thing out of his mouth,\" pointing at me in bed, \"he asks 'Are you OK?' You guys are too much.\"\n\nBill spoke up, \"All three of us have taken a life while serving. We all know what it does to you. Some shake it right off; some carry it inside. No one knows how it effects them until that day.\" We all listened to Bill, knowing Bill was referring to himself, mostly. He never killed another thing after returning from overseas. Somehow, Tom and I got through it. I found out later that Bill spent some time counseling Trey when Trey began having trouble sleeping. \n\nThe four of us spent the next hour bullshitting about happier subjects until the nurse kicked them all out and I fell back to sleep. \n\nI wrote earlier about the thin threads our lives hang on, I'll give you two examples. The morning I got stabbed, Trey pulled into the parking lot five minutes after me. If Trey had driven his Tahoe that morning, chances are Morton would have heard the rumble of that big V8 and sliced me open instead of spending the time trying to terrorize me. Turns out that Lisa wanted to use the SUV to pick up garden supplies and Trey was driving Lisa's Tesla. Morton never heard the electric vehicle pull in. \n\nI didn't know it at the time, but Trey had started carrying his .45 two weeks prior to this incident after that whack-job shot up the Walmart in Mississippi. Trey later told me he couldn't forgive himself if he wasn't able to defend his wife and son. Personally, I've never carried a gun when I'm not hunting, but I'm awful thankful Trey had his that morning.\n\n ************************ \n\nI was due to be released on Friday, six days after getting stabbed. Doctor Murphy came in, checked me out, read my chart, talked to the physical therapist, and gave his OK for me to go home. I couldn't wait to get out of there. Don't get me wrong, everyone was nice as could be and took great care of me, but the food left something to be desired and you can only walk around the one hallway wheeling your IV stand so many times before going stir crazy. \n\nA half hour before I was set to get the hell out of there, who walks in my room but Sandy Abbasi. This had to be, at most, the third time I've seen Sandy since that day three years prior when she left for Illinois. Damn, she stood at the doorway, gorgeous as ever.\n\n\"Hi Nick.\"\n\nSimple as that, as if three years hadn't passed. We spent the half hour catching up, Sandy had taken a job working with a vet clinic south of Austin. Soon, the nurse came in with the wheelchair. I promised Sandy I'd give her a call. She kissed me on the forehead as I sat in the chair and reminded me of my promise to call. \n\n\"Pretty woman.\" said the nurse.\n\n\"Yea, I used to love her.\" was my reply as we wheeled down the hall. Something hit me hard when Sandy walked through that door, almost like a sour taste in my mouth after biting into a bad apple. \n\nMy brother and his wife drove me home. When I opened the door to my trailer, the aroma of Mom's stew greeted me. The place was spic and span, I'm not a messy person but now it was spotless. There were even a few plants here and there, replacements for the plants I already killed off. \n\nMy family stuck around for a meal, then two by two, they left me to rest. I pulled my sister aside before she walked out the door. \n\n\"Sis, you're on Facebook, right?\" I never went on Facebook, so I needed someone to help with what was on my mind.\n\nMy sister misinterpreted the reason for my question. \"Yea, but don't worry, I didn't post anything about you.\"\n\n\"No, that's not it. I need you to look up what Sandy has been up to - I figure there's a reason why she showed up at the hospital today.\"\n\nMy sister looked at me with pity. \"Oh Nick, you mooned over that girl for three years, waiting for her to come home. Now you're going to jump back into that relationship because she shows up?\"\n\nI had to defend myself. \"Look, I haven't been mooning, I've dated, I've had sex, and I've been busy finishing my AA degree. And you're mistaken, the reason I'm asking you to check out Sandy's Facebook is that it hit me like a ton of bricks today, I have the feeling I've been her backup plan. I need you to confirm it. Will you do that for me?\" \n\nSis looked relieved. \"When she first went back to school three years ago, I would check it out once and a while. I stopped when you made it clear no one could say a bad word about Sandy.\"\n\n\"I should have listened.\"\n\n\"Yea, doofus. Listen, Chuck's waiting for me in the car and he's being very patient. I'll be your private eye and get back to you soon. In the meantime, don't do anything stupid. If she shows up here and you propose, I'll never talk to you again.\"\n\nI gave her a big hug. \"Thanks; and thank Chuck. You sure got it right when you married him.\" My words about her husband brought a big smile to my sister's face.\n\nI did manage to avoid Sandy for the rest of the week. When I didn't call her, she called me and asked if I needed anything. I told her I was all set for now, but I'd see her soon. She was obviously upset by my putting her off like I did, the woman was used to getting her way. Two days after that phone call, my sister called to say she'd be right over with news.\n\nWe sat on the back deck after I poured her a cup of coffee, Holly got right to the point. \n\n\"Sandy's Facebook was practically empty of any personal romantic photos or news, but it only took a few clicks away on two or three of her friends' Facebook pages to piece it all together. Sandy spent most of the past two years involved with a fellow vet student, Kevin Ferrell. Sandy's best friend had a ton of photos of Sandy and Ferrell at various events - always kissing, hugging, giving each other goo-goo eyes. It looked like they were headed to the altar, then boom, nothing. \n\n\"I found this Kevin Ferrell's page and he ended up in Denver engaged to another woman. If I had to guess, Kevin dumped Sandy for this other woman and Sandy's back to claim her rebound guy. Which brings up something else you never knew. \n\n\"As I dug into one of Sandy's friend's old posts, I came across a few from three years ago. Sandy got dumped by the guy she was dating just before you met her the first time. Sandy's friend's post wrote about the rotten jerk that dumped her sorority sister, Sandy, when Sandy had to go home to help her mother after her father's stroke.\"\n\nMy sister quit talking, letting me absorb the news. She was being kind, not adding what a chump I've been. After a minute, she broke the silence. \"You gonna be OK, big brother?\"\n\n\"Yea, this just confirms what I've been thinking the past year. I meant what I said earlier, I didn't make a big deal out of it but I've been slowly getting over her for a while. I even thought maybe Dana was the one, then she ups and moves to Dallas.\"\n\nHolly gave me 'the look', \"You ever tell Dana how you were feeling?\"\n\n\"No, I never got around to it.\"\n\n\"Ever wonder why I call you 'doofus'?\"\n\nBoy, could my little sister make me smile. \"I was always afraid to ask.\"\n\n ************************ \n\nI could have been a jerk about it, but why not take the high road? After all, Sandy never promised me anything, if I read more into our relationship than she did, that was all on me. So, I called her up and asked her if we could have dinner the following weekend. Sandy sounded excited when she said 'yes'. I had made up my mind that I'd let Sandy know over dinner that there would never be an 'us'.\n\nI picked her up Saturday night and we drove into downtown Austin, chatting about everyday things, the kind of conversation two close friends would have. I choose an upscale spot, quiet with great food and service. A good place to cut through the BS and set myself free. \n\nSandy went all out, wearing a short red dress that highlighted her beautiful body. Her dark hair was pulled off her face in a French braid down her back. Her makeup was done in a minimalist style, which only confirmed Sandy is a natural beauty. As I looked at this woman, a woman I placed on a pedestal three long years ago, my resolve began to weaken. How could I possibly let this opportunity slip out of my hands when it was so close to being achieved? Sandy obviously wanted to renew our relationship, why not accept it?\n\nI believe Sandy recognized her power over me and as we continued through our dinner, something happened, and at that moment I felt as if a bolt of electricity ran through my body, but instead of hurting me, it caused me to see everything so clearly. \n\nSandy was in the middle of telling me about her recent visit to one of the local ranches to birth a colt and as I listened to the excitement in her voice, I looked down to cut another slice from my rib-eye. When my eyes raised to look at Sandy, she was still relating the story, but her eyes were focused to my left. It was only for a second, but before she looked back at me, I followed her eyes to see what had held her glaze.\n\nAt the table to my left sat two men, both men were looking at Sandy, hunger in their eyes. When my eyes tracked back to Sandy, there was nothing in her manner which would lead anyone to suggest that she'd been caught; in fact, she continued with her story. I looked back over to the table with the two men. They were sharply dressed in expensive suits, obviously well-to-do, their haircuts probably cost what I made in a day. \n\nI pretended not to notice what just happened and looked back down to cut another slice of steak, but in my peripheral vision, saw her eyes move to her right again - there it was. I thought about asking for the check and just getting the hell out of there, but this steak cost thirty-eight dollars and the price didn't include a potato, vegetable or any side, and besides, it was one of the best damn steaks I ever had the pleasure of sinking my teeth into. So, I kept my mouth shut and ate in silence. \n\nOnce we finished with the main meal, I asked Sandy if she'd mind skipping dessert and having a drink in the lounge instead. Sandy agreed and we found a table in the corner of the bar, ordered drinks, and I broke my silence. \n\n\"Why are you with me, Sandy?\"\n\nThe question seemed to stun her, she didn't answer, so I continued. \"I saw you and the two slicks giving each other the eye. If I thought you were going to spend out dinner date flirting with others, I wouldn't have bothered.\"\n\nSandy had the decency to avoid insulting my intelligence by denying what I saw. \n\n\"I'm sorry, Nick.\"\n\n\"You don't have to be sorry, just be honest with me. I know all about Kevin Ferrell, I know he's more your type, a guy with money and education. I can't figure out why, if that's who you want, why you're with me.\"\n\n\"Because you're a man's man, you are kind and sweet, and you make me melt in bed.\"\n\nAny man would love to hear a woman pay him those compliments, but tonight I wasn't going to allow myself to be sidetracked again. \n\n\"But it's not enough for you, is it?\"\n\n\"I wanted it to be, Nick. I did, but I guess I'm a product of my upbringing. My parents practically disowned me three years ago when I told them I was dating a maintenance technician at the refinery, a guy with a high school education. They're snobs, Nick, and they raised me to be the same.\"\n\n\"So, why hook back up with me again?\"\n\n\"Maybe I was trying to fool myself, maybe I thought I could love you and make it work.\"\n\n\"Until you saw the two suits sitting nearby. Come on, I'll take you home.\"\n\nWe didn't talk on the way to Sandy's apartment, until we pulled up to her door. Sandy squeezed my hand.\n\n\"Would you like to come in Nick?\"\n\nIt was obvious Sandy was offering a night of bliss. Was it in exchange for an expensive meal, to thank me for being such a gentleman as I was being dumped, or because I could offer her a multitude of orgasms? I didn't care what the reason was, I didn't feel like being a human dildo tonight.",
        "\"No, Sandy. This is good night and goodbye. I wish you all the happiness you deserve.\"\n\nI said it with a lightness which disguised my true intent on the meaning. Sandy looked at me with tears in her eyes, leaned over to kiss my cheek, and left my truck without saying another word. Like I said earlier, Sandy never promised me anything, so I can't really say she was wicked, she just never gave me all I hoped to receive. \n\nAnd I don't think I wasted those three years. I had physical, if not emotional relationships with Lisa and Dana; I got my degree, I was able to concentrate on my career which was going gangbusters. All in all, not a bad start to life. The only thing lacking was that hole in my heart where the love of a good woman would fit in. \n\n************************ \n\nLisa and Trey hosted a big weekend picnic. I showed up Saturday early afternoon and was surprised that at least twenty couples were gathered in the Chase's backyard. Across the yard, I spotted Tom talking to Dana. I grabbed a beer and headed their way, but before I could reach them, Mr. Casey, Lisa's father, stopped me. \n\n\"Nick, can you do me a favor, son? Could you please take a look under the hood of my Jeep? On the way over here it was sputtering.\"\n\nNow, if you know anything about how things happen in our town, you know not to blow off Mr. Casey. \n\n\"Sure Mr. Casey. Let's have a look.\"\n\nIt only took five minutes to find the problem, a loose connection on the negative pole of the battery. I grabbed a wrench out of my truck and had it fixed in another five minutes. Mr. Casey stood next to me the entire time, asking how I was recovering from the knife wound, how things were down at the refinery, etc. \n\nNow, some of you may think he was being a pest, but I don't see it that way. I've known tradesmen who, while doing a job for some wealthy client, get treated as if they're not human by the client. As if working with your hands makes an individual less worthy of consideration - people like Sandy's parents, for example. But here was the mayor of our town sticking his head under the hood, asking how I was doing and if I'd share some knowledge about automobiles. When I shut the hood, he thanked me with a handshake. He didn't insult me by offering to pay me either, but instead complimented me by saying, \"It's good to have friends who know this shit.\"\n\nWe washed our hands and headed back to the party. I grabbed another beer, looking to see where Dana was now. Lisa came up to me as I stood on the deck. \"What happened to you? Dana said she saw you and then you disappeared. Are you avoiding her?\"\n\nI would have laughed if it wasn't so ridiculous. \"No, your dad waylaid me to check his Jeep. It was giving him problems and probably would have quit on him on his way home.\"\n\nLisa looked shocked, I think from the idea of her mom and dad getting stuck on the road. \"Are you certain it's OK?\"\n\nI gave Lisa a look and she realized her mistake. \"Of course you fixed it. Thank you, Nick. How did you and Dad get along?\"\n\n\"Great, he asked if he could join us next time Trey and I go out fishing.\"\n\nThe entire time Lisa and I were gabbing, I was trying to find Dana. Then I spotted her down by the pool, talking to a group of young mothers. Lisa tracked my eyes. \"Let's go down and save her, Nick. With that group of women she won't get away for an hour. They'll bore her to tears bragging on their children.\"\n\nWe walked down to the ladies, said our 'hellos' and grabbed Dana.\n\n\"Thank you.\" she said with relief. \"I was afraid they were about to ask me to mediate on the question as to whose child is this most precocious.\"\n\nLisa didn't hesitate, \"Well, Kyle, of course.\" Then she walked away to allow me to spend some time with Dana alone.\n\nDana placed her hand on my arm, it felt intimate, warm and friendly. \"How are you Nick?\"\n\n\"I'm doing good - healing.\"\n\nThere was sadness in her eyes. \"I'm sorry I didn't come to see you in the hospital, I was in Seattle that week, then three weeks in LA. In fact I'm leaving from this party to fly out of George Bush to Chicago in three hours. I don't even know why I have an apartment in Dallas. I've only spent three nights there in the last month.\"\n\n\"Besides the travel, how's the job?\"\n\n\"It sucks. There is no, 'besides the travel', that's what the job is. I know they're taking advantage of me. I am well paid, but I don't have a life. I mean, how shitty is it that I couldn't get time off to visit a friend in the hospital?\"\n\nDana changed the subject. \"Lisa said Sandy's back in the area, graduated from Vet school and working near Austin. Are you two back together?\"\n\n\"No, we aren't. And we never will be.\"\n\nDana's hand squeezed my arm. \"I'm sorry Nick.\"\n\n\"I'm not. It gives me a great opportunity to understand who I should be with.\"\n\nDana gave me a look, then glanced over to her cousin. \"Is that why Lisa was adamant that I attend this picnic?\"\n\n\"I hope so. I think your cousin thought we should become reacquainted.\"\n\nJust as our conversation began to get heavy, one of the youngsters fell into the Chase's pool. All kinds of excitement followed. Of course, Trey and Lisa had hired one of the local teenagers as a lifeguard during the party. The young lady immediately jumped in, had the little boy in her arms within ten seconds, but it still created a scene. The young lady may have looked like a Baywatch actress in her one piece suit, but her actions spoke volumes about how professional she approached her position. \n\nBy the time things settled down, an old friend had grabbed Dana and they were catching up. I went over and spent the next hour with the men who were making plans for the fall hunts. \n\nWhen the brisket was served, I sat next to Dana and offered to drive her to the airport. Dana accepted my offer and we stuck to less personal topics with so many people nearby.\n\nOn the way to the airport, we finally returned to a serious discussion about 'us'. \n\n\"Tell me, if you thought we had a chance to be more than friends with benefits, why did you take this job and move to Dallas?\"\n\nDana looked at me, deciding to answer my question directly. \"I wanted you to tell me not to go.\"\n\n\"Games are a lousy way to start a serious relationship.\"\n\nThere was a bit of anger in her response. \"I was a twenty-two year old girl in love with the greatest guy I know. And it was breaking my heart to be your 'friend'. I took the job in Dallas because I wasn't going to hang around mooning over a guy who was in love with a ghost. You wouldn't ever be all mine as long as you hoped Sandy would come back home to reclaim you.\"\n\nBad timing, we just then pulled up to the terminal. I would have preferred to finish our conversation, but one of the airport cops came by and rapped on my hood, yelling I had to drop off my passenger and go. There wasn't enough time to take another loop around the terminal, park, and tell Dana all the things that needed to be said. Dana stepped out of my truck, grabbed her bag from the back and leaned in.\n\n\"I love you, Nick Bottom!\" She shut the door and turned away.\n\nI put my truck in gear, drove ten feet, shoved it back into 'Park' and almost got rear-ended by the guy behind me - who promptly blasted his horn, cursed me out while flipping the bird, and squealed his tires to maneuver around me - all at the same time. I think I shocked him by smiling in return as I stepped out of the truck.\n\n\"DANA!\" I shouted over all the noise, catching her attention just before she reached the terminal doors.\n\nDana turned around and met me halfway. \n\n\"What if I asked you to stay now?\"\n\n\"That's not fair, Nick. My company is counting on me to be in Chicago in the morning.\" She paused, putting her hand on my cheek and looking at me with concern. \"Who's playing games now?\"\n\nShe was right, of course. I was asking a woman who waited over a year for me to get my head out of my ass to chuck her job at the spur of the moment with the hope we had a future. And, of course, this was the moment the cop came back and gave me shit about my truck sitting in the lane. \n\n\"In thirty seconds, I'm calling the tow truck.\" He said it in a way which told me he understood how important our conversation was to two young lovers, he was giving me a chance to wrap it up.\n\n\"I'll pick you up when you return to Dallas Friday. Text me with your flight.\" I kissed Dana and jumped back into my truck as Dana stood on the curve with a smile filled with wonder on her face. I thanked the cop and drove off, knowing I finally understood what I was supposed to do with my life.\n\n************************ \n\nI took Friday off from work, got cleaned up and drove up to Dallas to meet Dana's flight from O'Hare when it got in at eight-thirty. This time I parked in short term parking and met her with a bouquet of roses as she exited the terminal security gate. Dana gave me a hungry kiss before taking the flowers from my hand. I picked up her travel case, wrapped my arm around her waist and led her to my truck. \n\n\"Are you hungry? Would you like to get a bite to eat?\"\n\n\"A little, what about you? Have you had dinner?\"\n\n\"Not yet, I just drove up from home, didn't have time to stop if I was going to meet your flight.\"\n\n\"Then let's get you something. I can nibble and have a drink.\"\n\nHow did I miss this before? Here I am asking if she needs to eat and she immediately turns it around and asks what I need. Maybe it's a little thing, but it just goes to show how some women care more about others than themselves. \n\nWe stopped at a little caf\u00e9 Dana likes a few blocks from her apartment. I ate my first quiche while Dana split a green salad with me. We both limited ourselves to one drink because it had been a long day. \n\nWe drove to her apartment afterwards. It wasn't presumptuous on my part to assume I'd be staying at her place instead of getting a hotel room, we worked it out earlier in the week when I suggested I could get a room. She practically tore my head off with, \"Don't you dare!\". \n\nWe didn't make love Friday night, both of us were too exhausted from our respective long days and we needed time to reconnect. Dana fell asleep in my arms and stayed there until I tossed sometime in the middle of the night. But when I woke, she was nearby and I pulled her back into my arms. She wore a thin long t-shirt and I had my boxers on. I slipped the t-shirt over her head and pulled my shorts off; it felt wonderful to have our naked bodies against each other.\n\nI told her, \"From now on, this is how we sleep together.\" Dana grinned from ear to ear.\n\n\"I'd like that.\" she said as she wrapped her soft hand around my morning wood. \"Do you need to pee?\"\n\n\"Give me a minute.\" I stood up and ran to the bathroom, relieved myself and jumped back in bed.\n\n\"My turn.\" Damn, she looked fantastic, her cute tight ass moving through the doorway. When she finished and came back, I noticed the full bush. \n\n\"You used to shave.\" \n\nDana looked down as she straddled my torso. \"I used to do that for you. Lisa said you liked it.\" Her hand ruffled the hair. \"I can start again if you like.\"\n\n\"Let's worry about that later.\" My cock was starting to grow as she wiggled back and forth, the lips of her sex had a dual effect, my cock was hardening and her pussy was getting wet in anticipation. I tweaked her nipples between my finger and thumb, something I remembered she craved. Dana leaned over to kiss me. We each moaned in response to all the stimuli.\n\n\"I want you,\" she said. Dana's hand lifted my cock, lined it up, wet the cockhead with our combined juices, then slipped the bulb between her lips and sank down until our pubic bones met. \"I love this,\" she whispered. \n\nDana seemed to take pleasure in holding still for a half minute, feeling the fullness, I assume, before gliding back and forth. I continued to play with her perfect B cup breasts until Dana had her first orgasm. As she settled down from that, I twisted her around until she was on her back, my cock never left her tight vagina. I put her legs up over my shoulders and began to pump in and out, letting the full length of my cock travel until the tip was almost outside the labia, then plunging in until my pubic bone hit her clit. Each stroke brought a sexual grunt from her lips. \n\nWe continued this way until Dana's second orgasm hit, then I let myself go. As my cock grew just prior to my orgasm, I could feel the tip tickle her cervix, Dana grabbed my upper arms and squeezed. \n\nI let Dana's legs down and we kissed, our bodies in a full body hug. We stared into each other's eyes.\n\n\"I love you.\" It was the first time I ever said those words to Dana. Her tears and the way her arms squeezed my torso gave me all the answer I needed.\n\nWe could have stayed in bed all day and made love, but sexual compatibility was never a question during our FWB months together. What we needed was to spend time outside a bed. Would we be compatible in our likes and dislikes, politics, goals - all the things that haunt a marriage after the red-hot passion cools off?\n\nSo, we got dressed, grabbed coffee and rolls before taking a walk around the city park, beginning the long task of learning about each other. There was one critical issue which needed immediate airing out. We never discussed our sexual histories or whether fidelity was important in a relationship. Let's face it, our previous relationship was centered around satisfying each other's sexual needs; neither of us knew how the other felt about commitment and fidelity. \n\nImagine my relief when Dana told me it was a non-starter, any relationship meant a commitment to being faithful, infidelity was unacceptable. \n\nAnd Dana was especially relieved to learn that although I had more than a few 'friends with benefit' relationships since I turned eighteen, they were long term relationships and I was never the kind of guy to score one-night stands or carve notches on my bedpost. Dana's sexual history pretty much mirrored my own, neither of us could be considered promiscuous. \n\nThat took care of the big elephant, but there were others in the room that required hours of discussion during the next day and a half. We got through many of them and still had time to laugh and make love. I drove home late Sunday night feeling on top of the world and slept like a baby as I laid in bed Sunday night. \n\n************************ \n\nIt was Monday evening and I just finished showering the work sweat and grease off when there was a knock on the door. I slipped on shorts and a t-shirt before opening the screen to let her in.\n\n\"Evening, Lisa.\"\n\nShe stepped inside and looked around, it had been over two years since the last time she was inside my trailer, but not much had changed in those two years and the smile on Lisa's face - the same smile she gave me as she walked down the aisle in her wedding dress, the same she used to give me when she was my FWB - told me she recognized the consistency of my home 'decor'.\n\n\"Hello Nick.\" She gave me a cheek kiss. \"Dana called me.\"\n\n\"Good news or bad news?\"\n\n\"Would I be jumping the gun if I guessed you and I will someday be related? Even if it's by marriage?\"\n\nI didn't contradict her, so she added. \"I've never heard her so happy. Tell me what you're thinking.\"\n\nIf it was anyone but Lisa, I may have told them to mind their own business. That's not completely true, my sister could have gotten away with it - but that's it.\n\nOK, maybe Mom, too. \n\n\"I'm thinking that I was a fool not to recognize it sooner, how much I love your cousin and how happy I am she's still available.\"\n\n\"I'm glad Nick. I know she's the one for you, you two were made for each other.\" Lisa didn't have to say it, she was saying Dana and I were compatible in ways that Lisa and I would never be, or Sandy and I for that manner.\n\n\"That's true, Lisa. Now, I need to pick the right moment to ask her if she'll marry me.\"\n\n\"That's good Nick, but not too long. Kyle needs more cousins.\" Lisa gave me another smile, patted my cheek and left. \n\nThe next Saturday morning found me back on the road, heading north to Dallas, looking forward to two more half days and one night together. And her answer. As I walked in the door of her apartment, I held her tight. \n\n\"Lisa came to see me, said I didn't have much time before I'm supposed to ask you to marry me.\"\n\nDana looked shocked, \"She did that on her own, I didn't say a thing except we were dating again. I'll call her and tell her to butt out!\"\n\n\"Why, when she's right?\" I dropped to one knee and took the small box out of my pocket. \"Dana, will you marry me?\"\n\nI didn't know her eyes could get that big, and I've never known her to be tongue-tied. It took her the longest time to get the words out. \"Yes Nick!\" and proceed to give me the best damn kiss I've ever received. \n\n************************ \n\nAnd that's how it started, when our relationship changed from 'just friends' to 'friends and lovers'. That was five years, one wedding, one child (with another on the way), a million kisses and twice as many smiles ago. Two months after that night Dana moved back home and two months after that, we were wed in her church. It took her those first two months to line up a new job in Houston, one that didn't require more than a couple days a month traveling. \n\nThe woman still amazes me. Not once has she ever made me feel anything but her pride in being a maintenance man's wife. She did convince me to go back to school, but that was only after I confessed my desire to write mysteries and maybe Westerns - as a hobby. She encouraged me to sign up for writing courses at the school and she became my editor. Some of my stories are surprisingly good, at least I think I'm improving. \n\nTrey and Lisa have three children now and Dana laughed when she told me Lisa is asking Trey if he'd like one more. Tom married Betty Hudson, the girl we saved from getting raped that night and she's expecting their first. Bill did marry Tory Sue and I think they'll be okay. One thing I learned, surrounding yourself with good people, people who care about their friends and put their family first, well - that just creates the right environment where love grows and fidelity rules. At least that's this simple man's take on life and love. \n\nBut right now you'll have to excuse me, the baby needs changing and it's my turn since Dana is busy editing my latest story. \n\nThe End"
    ],
    "authorname": "BillandKate",
    "tags": [
        "loving wife",
        "loving husband",
        "friends with benefits",
        "romance",
        "wedding",
        "wife",
        "romantic"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/i-knew-the-bride"
}