{
    "title": "Jim and Edie Again Ch. 09-10",
    "pages": [
        "<center>Chapter 9 - Shock and Awe</center>\n\nMatt and Amy were sitting on the side of the pool having an animated discussion about something. Edie had gone inside to put the breakfast dishes away. She was wearing her Daisy Dukes and a crop top, and also acting enticing.\n\nI was left sitting with my two children - Josh and Carolyn. Josh asked, \"How do you spend your time?\"\n\nI decided now was a good time to do a reveal. \"We have a very loving and romantic social life with two other couples and a couple of others we see less frequently.\"\n\nThey both frowned as their little thinking engines tried to work through the possibilities that my remark left open. I added, \"We get together at least once or twice a week, and tonight is one of those nights. I hope you'll excuse our absence, but we planned this romantic time long in advance and they mean a lot to both Edie and me.\"\n\n\"What do you mean 'romantic'?\" Carolyn asked.\n\n\"We make love to each other, although the men don't interact much.\"\n\nJosh managed to make the four syllables each into separate words: \"Sexually\".\n\nI nodded. \"I also take care of our two homes, inside and out; continue to work our investment portfolio; do a little genealogy; and I have a few other hobbies and projects, and there's some charity work I still do. I have about six novels going at any one time. Edie has been encouraging me to write some stories, too, and I wanted to get back into photography, especially having a model as a girlfriend. I bought a great camera just before Diane died, and I just lost my motivation. Edie is restoring my chi, so I'm getting interested again. Most of all I love being with Edie. We take romantic walks on the beach, and we talk about everything under the sun.\"\n\nJosh started sputtering, \"Wait. Wait. Wait. You have sex with Edie AND other people - other women?\"\n\n\"Yes. Mindy and Rita, and I love them, just not as much as Edie. They're both married, and their husbands are our best friends. Edie makes love with the men, too. We're all best friends.\"\n\nCarolyn sputtered, \"But ... but ... but ... that's so wrong.\"\n\nI countered, \"No it's not. Who told you that?\"\n\nShe was flummoxed and couldn't respond.\n\n\"Kids, we love our friends. Most of the world operates under the assumption that you can only love one person. THAT'S wrong! I know, because I live a life where I love more than one. I was just talking a few weeks ago to Edie's daughter's husband and his female friend about at least two models for how you can live your life and your relationships. I made a list for them. Here it is on my cellphone.\" I passed phone to Josh. \"I'm getting another cup of coffee. Get you any?\" They both nodded but were looking at the short list on my phone.\n\nIn the kitchen, Edie was just finishing. We both stopped and made out for five minutes. \"You got them cranked up?\"\n\nI laughed and nodded. \"Yep. They're stuttering because they're trying to tell me how wrong it all is.\"\n\nEdie laughed, \"Oh, a value judgment. Shame on them. Who's to say whether its right or wrong?\"\n\nI did mention that you made love with the men.\"\n\n\"Oh, great. Now, your girlfriend is a first-class slut that sleeps around.\"\n\nI teased, \"You don't seem to sleep when we see our friends.\"\n\nShe laughed and headed off to the bedroom. \"I think it's monokini time.\"\n\nI carried three mugs back to the table and distributed them. I sat back and looked out at the pool and yard.\n\nBoth Josh and Carolyn were warmed up for a salvo in my direction. I fired off the first shot. \"Now, please don't be shocked when Edie comes out. She's usually nude around the pool, but I think I convinced her to wear the lower half of her bikini. She doesn't like tan lines. She has done some other modeling recently, so it's important that she look uniform and at her best.\"\n\nThey both looked at each other, and then at Edie as she strolled onto the patio with her iPad. Edie did not have opulent breasts like some porn queens. They were full, ripe, and perfectly proportioned to her body. They were also perfectly formed, had good-sized areolas, and nipples like the end of your little finger. They'd sagged a little with age, but she always carried herself well with her shoulders back, and that posture supported more than many other women her age.\n\nShe stopped by the table, \"Everyone have what they need? There are more coffee and sweet rolls left, and we always have unsweet iced tea in refrig. We have all those great leftovers from yesterday for lunch, too.\" We all politely turned her down. I got a hug, that put my head between her breasts, and then a couple of sweet kisses.\n\nEdie went and joined Matt and Amy on the other side of the pool in the sun. I was mildly surprised a minute later when Amy removed her top. Josh looked stunned at his wife, but didn't say anything. Matt looked happy as he sat with his mother-in-law and sister-in-law.\n\nI relaxed and waited for that missing salvo. Josh said, \"I read that list. I'd like a copy, if you please. It's quite persuasive. You know I'm rooted in the first model - the paradigm on the left in your chart I think we mostly are. But when I read the words for the other model, that's where I want to live. How'd that happen? Why didn't you talk about with us earlier in our lives?\"\n\n\"Sorry about that. Your mother and I were raised and inculcated in the paradigm we all lived in. It's hard to see a different way when you living inside what you think is the only way. It's only been recently I've learned about the other possibilities where I thought there were none. Edie's on the same voyage of discovery. Our friends helped a bit, but I read a lot and started finding a better way. It's a voyage of discovery for all of us. A favorite book that influenced me a great deal was Heinlein's Stranger in Strange Land.  I recommend you read it.\n\n\"What else?\" Carolyn asked with a touch of eagerness in her voice.\n\nI laughed,  \"The Ethical Slut.  It's more contemporary and nonfiction, and it's fundamental manifesto is that consenting adults can do whatever they want about sex. With that as prologue, here I sit doing exactly that. Edie's in that boat, too.\" \n\n\"Do you think we should change?\" Josh posed.\n\n\"That's up to you. You need to judge whether you are ready to make that leap. It is not an insignificant one. You, of course, need your spouse along for the ride, as well as fortitude and resolve to make any relationship a success. Edie and I have those, we think.\n\n\"Now that you're adults, if I tell you to do something and you do it and it fails, you'll blame me. I don't want that burden. If you try, I ask that if you judge yourselves don't use the criteria people use in the old and most popular relationship behavior model. You need new yardsticks and measures of success. Edie and I are still making the transition, too, so you're catching us mid-stride. I hope I always encouraged you to be daring and have a willingness to take risks. That was what I tried to instill in all the people that worked for NASA. We'd have never made it to the moon and Mars otherwise.\"\n\nCarolyn looked out across the patio. Both Amy and Edie had moved to a chaise in the sun. Matt was applying sunscreen to Edie and not missing any spots. I laughed. He was being teased something fierce and apparently loved it.\n\n\"What would be the kind of things you've done to loosen up or to take risks?\" Josh asked.\n\nI laughed, \"Tell Matt to put lotion on Amy. Carolyn, you encourage him, too.\"\n\nJosh laughed and then yelled over, and also thanked him for protecting his precious wife. Carolyn said loudly so he could hear, \"Don't worry honey. I'm not jealous or anything. Just help both women ... and don't miss any spots.\"\n\nMatt was frozen in position looking over at his wife and brother-in-law in disbelief. Amy was laughing, and Edie just gave a little wave and then said something to Matt. He smeared on more lotion, this time working the cream into her breasts. A few minutes later he did Amy all over, but kept constantly checking with his wife. Carolyn watched and grinned.\n\nI asked, \"What are you feeling?\"\n\nJosh rolled his eyes. \"Aroused, elated, excited. He's touching places on Amy only I have touched for the past five years.\"\n\n\"Do you think Amy loves you any less?\"\n\n\"No. Maybe more. She likes Matt, and I suspect she's feeling many of the same things I am, especially aroused. I bet she likes being touched by another male.\"\n\nI pushed further, \"Just to push the point a little, what if you saw Amy push her bikini bottoms off and he started to finger her pussy as they kissed. What if she pulled his dick from his bathing suit and started to blow him, and then had him mount her and they started to make love.\" I held my hand up in a stop motion to Carolyn; her turn would come momentarily.\n\nJosh watched the couple diagonally across the pool. We could just hear the overtones of their conversation but not make out too many words. Edie was often part of the chat.\n\nJosh sighed, \"Wow! That's like crazy stimulating and arousing.\"\n\nI said, \"Model One would have you fly into a fit of jealous rage. You'd want to kill him and probably Amy. You'd scream and carry on. Maybe hit Matt for taking advantage of your wife. After all, she's your property and he violated her. If she loves him, she doesn't love you. You judge their behavior as outrageously bad, so bad that you engage a divorce attorney. You spread her bad reputation and misdeeds to all your friends, but they soon leave both of you; nobody likes that kind of drama or having to pick sides. Amy is pissed at your response, so she's not about to apologize or try to win you back; she gets the best divorce lawyer in the state and is out to make you penniless for a long time. The child custody battle almost makes national news.\n\n\"In Model Two, you watch and appreciate the love they're sharing. You know that the more people you love the more love you have to give and the more you get in return. Matt is a good friend and remains that way, even closer now that he has a comfortable relationship with your wife as well as you. You also hope Amy is having a great time as they make love. You want her to have orgasms from him. You bury any bad thoughts because they aren't contributing to your happiness over the event; there is nothing either good or bad, but thinking makes it so. You resolve to be encouraging of their love and friendship, and besides, perhaps it'll bring you closer to Matt's wife, who you also love and would like to engage in a similar way.\"\n\nI laughed at my ending to the little scenario. I was teasing the two of them about having a sexual relationship.\n\nJosh said, \"Yes, there's something to be said for the second model, but ... I have to learn to think that way.\"\n\n\"Carolyn, have any thoughts?\"\n\n\"Fuck yes! You just set me up to have sex with my brother. You have my husband going off to fuck Amy all the time and in love with her. What am I, chopped liver?\"\n\nI spoke calmly, \"The important question is 'What do you want to be?' The wronged wife, part of a loving group of people, a loving sister, or something else? Only you can decide.\"\n\n\"But ... but ...\"\n\nJosh leaned over the Carolyn, \"Honey, he's just pushing your buttons ... as he was pushing mine a moment earlier. He is right, though. He has given me - us - some serious things to think about. I'm thirty-two, and I have to decide if the way I've been living is something I want to continue. Of course, I need to talk to Amy. If you're contemplating all this, I suggest the four of us get together.\"\n\nI stepped in, \"You can start here, if you wish. I suggest you all come back in one or two months and take stock of where you are in your thinking. If you want, Edie could also introduce you to her daughter - at least electronically or over Zoom. She's also making a similar transition. David, her husband, had a small indiscretion with a pretty girl named Jean. Under Penny's aegis, the threesome is going to try living together in a group marriage.\"\n\nCarolyn lit up. \"I'd like to talk to her - wow! I need a woman's perspective. I assume she's about our age?\"\n\n\"Yes, she is. Twenty-nine if I recall correctly. Edie can tell you more about her.\"\n\nWe all looked over at Matt, Edie, and Amy. The three were laughing, and Matt was standing behind Amy and running his hands up and down the front of her body including her breasts. She was pushing up into his hands and laughing as they all looked over at us.\n\n<center>* * * * *</center>\n\nWe were in Hank and Rita's back yard on Saturday night. Everyone had just sat down to eat the standard fare of barbecued burgers, chicken, and various side dishes.\n\nMindy said, \"I'm aghast that your kids know you came here tonight to make love with us.\"\n\nBruce chipped in, \"You should have brought them. Penny took to this like a duck to water. They could have at least watched. After all, we are exhibitionists.\"\n\nJim spoke, \"In their case, it's too early. I asked them to think about all our philosophy and how it applied to them, and then come back to talk about it. Don't forget Penny had a little motivation since her husband had misbehaved back home.\"\n\nI added, \"My son Mark is overseas and I don't hear from him too often. He does not know about our social life. Given his mindset, he never will.\"\n\nAs it turned out, we were the only couple most of whose children knew about the loving group we'd formed. There didn't seem to be a rush to inform them either, although Rita perked up at the thought.\n\nOur group made love with each other that night, making sure that all combinations were covered except for our own spouses or partners. At one point the women lined up on the sofa, and the guys just came along in rotation doing' us for two minutes each. We were laughing, proving to me that sex can be fun as well as romantic.\n\nFor no particular reason, the evening ended early, so Jim and I set out for his home. Also, for no particular reason, he decided not to put the car in the garage; a move that would have created the rumble of the garage door going up and down.\n\nJim and I strolled into the house, only all was quiet despite the lights being on. Jim glanced down the hallway to the bedrooms and could see the doors open. He said to me, \"I think they must be outside by the pool.\"\n\nI looked out the door to the patio off the kitchen to see four nude friends scattered around the deck. Matt was in the pool, so I couldn't tell for sure whether he wore a suit, but Josh was standing talking to Amy and Carolyn. They were in their birthday suits.\n\nEdie turned and whispered, \"No suits.\"\n\nJim and I quickly stripped and then sauntered out the door to join the others. They exhibited the startle response by all jerking to attention and looking like they'd been caught with their hands in the cookie jar.\n\n\"Good evening everyone. Having fun?\" Jim spoke in a jaunty tone, as though nothing was wrong.\n\nJosh took the lead, \"Errr, you said that skinny-dipping was normal back here, and your neighbors seemed to be away.\"\n\n\"No problem. We swam in the same condition at our friend's house earlier this evening, but we did think we'd join you.\"\n\nWe walked up to the threesome but acknowledged Matt in the pool. \n\nI had to laugh less than sixty seconds later. Both Josh and Jim got hard-ons, and fairly noticeable ones, at that. I decided to play.\n\n\"Josh, it's refreshing to see someone as young as you responding to my old body.\"\n\nHe rolled his eyes, \"Old is not a term I would ever apply to you. Sorry, I can't help it. You are ... hot and obviously arousing.\"\n\nCarolyn grinned, \"It took him almost an hour to get over seeing his sister nude. Thankfully, women don't show their arousal quite so readily. I must say, however, I do feel a little squicky seeing my father respond to my nude body.\"\n\nJim rolled his eyes, \"And such a beautiful nude body it is, but give me a while to get used to the situation and I promise to not perv on your body so much.\"\n\nAmy teased, \"We thought you'd come home all sexually depleted, but that hardly seems to be the case.\"\n\nI tossed in, \"Oh, we only went around twice after dinner. Jim has more in him than that, but he didn't want to show up the other men.\"\n\nJosh and Carolyn looked especially surprised at that statistic. I just let it ride.\n\nJim asked, \"Did you ... engage sexually?\"\n\nJosh shook his head. \"No. Just a lot of ogling plus some grab-ass in the pool.\"\n\nCarolyn said, \"We were just going to experiment with each other to test how much further loosening up is needed.\"\n\nI asked, \"How were you planning to do that?\"\n\n\"Full body hugs and rubs with each other, although Matt and Josh weren't interested in doing that with each other. I should tell you that we had a long discussion over dinner about open marriages and libidinous behavior. We got turned on.\"\n\nJim and I laughed. He held his arms out to Carolyn. I was sure he was teasing, but she called his bluff, and their two nude bodies came together in a warm and loving hug. I was a little surprised at the romantic kisses - even French kisses - that followed. Neither seemed inclined to stop right away. The activity did not help Jim deflate. His cock was trapped between their lower bodies. When I could periodically see it, I could tell he had a massive hard-on.\n\nAmy moved in as Carolyn backed away. \"That looked nice. Me, too.\" She ignored the hard-on that now pointed at the North Star.\n\nAmy and Jim spent even longer hugging and kissing. Josh looked on and proceeded to get a lot harder and longer, ending with his cock pointed up at some other bright star nearly overhead. Amy had also trapped Jim's warm appendage between their bodies as she also squirmed around making sure they could both get aroused by her actions. Matt was watching with his mouth hanging agape at the erotic scene.\n\nNot to be left out, I moved to Josh and duplicated what Amy was doing. I took hold of Josh's cock and positioned it between our bodies so it pointed up at my breasts, and then we started to hug and I finally got him to kiss me in a significant way. Amy and Jim watched us with grins at our mischief.\n\nI could feel Josh harden further between us. I wondered whether he'd shoot off and I'd end up covered in cum, but he must have needed more stimulation. \n\nWhen we stopped about two minutes later, Matt was beside me. Although he was wet from the pool, I pulled him into me and did a similar positioning of his erection. Our French kisses didn't end for five minutes. We were both pretty worked up.\n\nAs we parted, Carolyn was there with two towels. She gave me and then one to Matt. \"Dry off. You and I are going inside and you are going to fuck me clear into next year. I'm so horny you can even do my ass again. Come on, see if you can make me scream my safe word.\"\n\nMatt looked most interested, and let Carolyn drag him away by his penis. She was sexy.\n\nJosh and Amy looked at each other. He then turned to his father, \"Are we allowed to do something here on the patio?\"\n\n\"You'd better. I think your wife is worked up a little. I don't think you'd make it to your bedroom before she detonates.\" Amy was nodding with an alluring and sexy smile.\n\nJim took my hand and led me to a chaise. In only a few second, I was on him cowgirl style. God, I loved this man. He hit places inside me that no other man ever had.\n\nOnly ten feet away on another chaise, Josh merged with Amy and they started romantic lovemaking. There were whispers, but I couldn't tell what was said.\n\n<center>* * * * *</center>\n\nI was up early. I anticipated that both my son and daughter would have some squeamish feelings about what they'd done the night before. I got a stirring in my cock when I recalled looking at and then briefly making out with my daughter. I don't think a father is supposed to think that way, but I did and it was all delightful.\n\nCarolyn was the first to show up. As soon as she saw me, she blushed. She was wearing her bikini - both parts.",
        "I held my arms up and she rushed into them and we hugged. I did manage to kiss her.\n\nCarolyn said, \"We were naughty last night.\"\n\n\"By whose standards? Were they yours, or standards that someone gave you or that you thought were implied that you should live by?\"\n\nShe hugged me and said, \"You're right, or course.\"\n\n\"Just so you're not in doubt, let me tell you what I thought. The small part of your evening that Edie and I got to sample I thought was fabulous. I loved holding your sexy naked body against me. If we never do anything further, that's your decision, but I will remember last night in favorable and arousing terms for the rest of my life. I also hope you'll think likewise about what happened.\"\n\nShe nodded, \"I do ... I will.\"\n\nI got another kiss from her, much hotter than her first a moment earlier.\n\nWe talked about breakfast and came up blank about any plans for the day except to maybe go to the beach. I reminded her that it was their last full day before they flew home. She said that wouldn't change anything.\n\nEdie showed up naked and looking a little groggy. She smelled and tasted of toothpaste when I kissed her. She just sat down beside Carolyn and didn't say anything, but she did kiss her. I started on some scrambled eggs and bacon for the crowd, and soon the others appeared, drawn in by the aromas.\n\nAmy visually checked to see whether anybody had their nose out of joint about what happened the previous night. No one did. Moreover, Edie's nudity inspired her, so she shed her bikini bra immediately. Josh was obviously turned on by his wife's partial nudity and by Edie's sexy and exposed body; not that I wasn't as well. Matt appeared, and just sat. He muttered, \"Coffee.\"\n\nThe high-test coffee helped awaken the crowd. I guessed that no one really slept when they first went to bed. When Edie and I passed their room, we could still hear Matt and Carolyn going at it.\n\nEventually, the visitors opted for going to the beach, but coming home before the peak of the afternoon sun. They were still a pretty pale bunch of northerners. Edie and I drove them in two cars.\n\nI had Josh and Amy in my car. As we left my neighborhood, I asked, \"We all right ... after last night, I mean?\"\n\nAmy said, \"We talked about it. We both wish we'd done more, and I mean making out or sexual things.\"\n\nJosh added, \"Watching my wife with Matt and then you, was a real turn on for both of us. I hope you don't think less of us because of that.\"\n\nI responded with surprise, \"LESS? Surely you jest. Edie and I went off to have an erotic evening with two other couples. I was more afraid you'd think we'd gone off the deep end. We return home, join your skinny-dipping yet participate eagerly in some short make out sessions. You know from our earlier discussions and my list of traits for an open marriage model that we have NO problems with any of what happened. My concern was coming on too strong or too soon or both.\"\n\nAmy said, \"I wanted more. I kept Josh up for another hour even after we went inside. We made love but we also talked about what had happened and shared what we thought about it all.\"\n\n\"I'm guessing you'd not seen your sister nude before.\"\n\nJosh chuckled, \"Not since I was maybe eight years old and she was six. She turned me on. I wish there weren't the taboos associated with incest.\"\n\nI muttered, \"Consenting adults can do whatever they want about sex or relationships.\"\n\nAmy said, \"I'd do Carolyn; at least we're not related. I think your sister is hot.\"\n\nJosh stated, \"I didn't even know you had a bisexual gene in your body until last night when I watched the two of you kiss and rub your boobs together.\"\n\nAmy laughed openly. \"I didn't either. I don't look at all women that way, only Carolyn ... and, to tell the truth, Edie. Jim, your girlfriend is really hot.\"\n\n\"If you're serious she will be, too. She's rediscovering her wild side after having submerged it for a few decades while she tried to a stereotypical adult. Now, she realized she doesn't need to pretend any further. I love her new side.\"\n\nJosh said, \"She almost made me cum last night. Thirty seconds more was all it would have taken.\"\n\n\"Didn't I ever talk to you about control.\" After a pause, I asked, \"How about you and Carolyn? Did you hug and kiss?\"\n\n\"Before you got home, yes. I think we both scared ourselves because we see the potential for something to happen there.\"\n\nAmy smiled, \"I'm all for it. I'm sure Matt would be, as well. I wouldn't mind making it with Matt. He's such a nice guy and I have great affection for him.\"\n\nI just nodded, \"Your life is a result of the decisions and choices you make, If you want a better life in some way, it is time to make different choices. Do remember, regardless of what others say, you're the one that'll have to live with the results.\"\n\n<center>Chapter 10 - Last Evening in Florida</center>\n\nAfter some beach time that included long walks along the fairly deserted beach, I led the group to the Beach Shack for a late lunch. I highly recommended their Grouper Sandwich, but other dishes were also excellent. Dan wasn't there; the place was staffed by his assistant manager who handled the lunch crowd.\n\nWe went back to the house after lunch, and people drifted around the house doing laundry and some repacking projects. About three o'clock, people started to reappear on the patio. I'd been doing some research on some stocks I was thinking of investing in and was sitting outside in the shade with my laptop wearing only my athletic shorts.\n\nWhen I'd gone out, Edie was already tanning naked on a chaise. Josh came out behind me. I handed him some SPF 50 lotion and said, \"Do Edie, please.\" He grinned and went to work. Amy had come out with him sans bikini bra, and she grinned broadly, knowing I was setting up some kind of sexual situation. She winked at me to show her approval.\n\nMatt came out with Carolyn. I aimed him at Amy with another bottle of lotion. He looked happy.\n\nI took a bottle and gestured where I wanted Carolyn to lie down. She was topless, but I hooked two fingers in the bottom half of her bikini, and pulled downward. She didn't argue as they slipped down her legs. She did smile in a coy manner.\n\nCarolyn asked, \"Are you going to try to turn me on?\"\n\nI shook my head. \"Oh, no. No, I'm not trying. I have no doubt about it. I am going to turn you on and make you the horniest woman in the state. Hell, you're already turned on.\"\n\n\"You're my father.\"\n\n\"True that, but relationships drift and change form over time. What if I want to change the nature of our relationship? This should be easier since you've been on your own for over a decade and we haven't seen that much of each other. We both have the foundation of loving each other. Maybe we should take it to the next level.\"\n\nI thought I heard her whisper, \"Yes, please.\" \n\nI never realized what a terrific ass my daughter had until I had two hands on it as she lay stretched out on her stomach waiting for me to apply sunscreen. Carolyn's beautiful legs ran right up to those sexy cheeks. I suddenly understood why she looked so good in slacks and shorts. Even her back was sexy.\n\nLying on her back a few minutes later, gave me new territory to work with. I checked and Josh was sucking on Edie's breasts with eagerness, as one of his hands slowly pulsed two fingers into her pussy. I only wondered how loud her orgasms would be, because in that scenario there was no doubt whether she'd start having them. I could hear her purring and low moans as she started to soar.\n\nMatt and Amy were kissing and she was stroking his cock with both hands as he fondled her breasts. They were both naked and kissing like the world was about to end. If ever there was foreplay, they were the embodiment of it.\n\nI sucked on Carolyn's breasts, going back and forth, licking and drawing out the nipples with my mouth and even my teeth. I'd pull her nipples away from her body, and then they'd break free from my mouth and snap back in place. Each time, she'd jerk as some jolt of sexual pleasure reamed through her body. Gradually, I got them coated with lotion, and thankfully the lotion tasted like bananas when I went back to licking and sucking. Carolyn was moaning almost as much as Edie.\n\nI applied the lotion down Carolyn's svelte body giving a deep massage as I went, and then up the front of her legs. I left 'ground zero' for last, but then it got special attention. I rubbed in the lotion making sure that every pore of her mons and vulva got special attention. I moved and started to use my tongue on key areas of her body, even pulling the flaps of her labia into my mouth and sucking on them. She squirmed at my ministrations, and just whispered, \"Don't stop - ever.\"\n\nNot stopping meant that I started to really eat her out, using all the talents I had available as well as the tools of fingers, mouth, and tongue. Long ago, Diane and I had studied a woman's pussy, with the goal being my expertise to turn my wife into a blithering basket of orgasming mush. Porn on the Internet later helped, too, along with books like the Kama Sutra. I got pretty proficient according to my wife, and Edie validated that when we started to have sex.\n\nTurned loose on Carolyn, I made her shoot into orbit and start circling the earth. I had two fingers in her cunt, carefully searching for interior erogenous zones that I could use to make her soar with orgasms. I used my mouth and even my teeth to carefully kiss and tactilely romance her labia majora and minora. My tongue increasingly made forays to the top of her slit where her clitoris stood proudly demanding attention.\n\nI'd also pause and move up her body so we could kiss and French kiss, with our tongues dancing in the air between our bodies. Carolyn held my cock through the thin fabric of my shorts part of the time. I moved down to eat her some more.\n\nCarolyn held my head and did a little steering, but on balance she just lay, squirmed when I'd touch an especially sensitive area, and occasionally had an orgasm. \"Oh, God ... Dad ... Jim ... you're magnificent. I love you.\"\n\nCarolyn's vaginal area was a work of art. Here minora were especially large and truly flappy, a phenomena I had learned was called labial hypertrophy. They did their job of protecting her clitoris, urinary opening, and vaginal orifice, but with me working on them, they were sending messages to the two of us to have sex. They were swollen and inviting. Along with that, she was exuding heavenly fluids that had a high attractive aroma.\n\nI'd talked to Edie about intercourse, and we both agreed that with both Josh and Carolyn we would postpone those kind of encounters to their next visit. Given where they were when they arrived, I wanted them to think more about what a change in their other relationships would mean. I didn't want to mess up their marriages more than I probably already had.\n\nNonetheless, I found it exceptionally rewarding and arousing turning Carolyn on the way I was. I brought her to three more orgasms, each about five or ten minutes apart from the previous one. I then started to back her down.\n\nWhen she sensed I was slowing, she launched herself into my arms with a boatload of kisses that were very stimulating. She yanked my shorts away, fondled my cock, and then went down on me. She seemed kittenish with her new toy, licking and sucking as she used a hand to stimulate me further.\n\nMy quick glance at the others revealed that blowjobs were popular. Amy was doing Matt, and Edie had Josh's cock completely down her throat. I knew she could do that from personal experience, but to see it nearby was very arousing.\n\n\"Carolyn, if you keep doing that, I'll cum in your mouth. Is that what you want?\"\n\n\"Mmmmm mmm.\" The tonal inflection meant yes. I wouldn't mind one bit.\n\nI managed five additional minutes before I felt the flexing of some internal muscles under the control of my autonomic response. I groaned and gasped, \"Cumming.\" She'd pushed me over the top of my ability to control things.\n\nCarolyn redoubled her effort and tried to take me deep.\n\nI blasted off one of the hardest orgasms I think I'd ever had. I spewed rope after rope of my potent semen into her, moaning with each surge as the pleasure swept over me. Gradually, I slowed and Carolyn pulled off of my spewing cock.\n\nShe opened her mouth and showed me that she'd kept all of my semen in her mouth. Some I could see had dripped onto her breasts and chin.\n\n\"Carolyn, share that with me.\" \n\nShe looked perplexed, but I sat up and pulled her to me. I then French kissed with her, and she got the idea quickly enough. We started to snowball the wodge of my cum between us. She moaned, and gradually after going back and forth a half-dozen times, it disappeared. We then did some serious French kissing.\n\nAs we slowed, Carolyn said, \"You are the sexiest man alive. I can't believe we just did that ... that you don't mind tasting your own jizz.\"\n\nI shrugged, \"You took the load, why not share it?\"\n\n\"Because guys don't like to touch their own cum.\"\n\n\"Old rule. Change the rule. The new one is more fun, more erotic, more stimulating, and in a world where nobody does it, it sets me aside as some super stud. That's what I want to be for you, one of your super studs. Work on Josh, and make him another.\"\n\n\"Where'd you ever learn to eat pussy like that. You are phenomenal. I love oral sex, but you were head and shoulders about any man I've ever experienced.\"\n\nI teased, \"Oh, experienced a lot, have you?\"\n\nShe lightly punched my arm. \"I lost my virginity a long time ago, and had a robust sex life through high school and college, and right up to meeting Matt, and then even with him. Now, you're broadening my horizons.\"\n\n\"Do you care whether he fucks Amy?\" I teased.\n\nCarolyn's head snapped around to the chaise her husband was on with Josh's wife. They were having a slow and romantic fuck in the missionary position. Their kisses were epic.\n\nI pulled Carolyn to me as she had her eyes glued to them. \"Remember what we talked about yesterday and the day before. Compersion. Say to yourself, 'I hope my husband is having one of the most romantic and joyful sexual encounters of his life with Amy. I hope he's bringing her pleasure, too. I love both of them and want them in my life forever. When they orgasm, I hope the sensations are terribly intense and delightfully memorable for both of them.\n\n\"'I am not possessive of Matt and do not insist on exclusivity. Being that way, opens us to having relationships at deeper and more rewarding levels with some close friends, relatives, and lovers. The love he expresses to Amy takes nothing from me, because love expands and expands as we love more people; we have more love to give and get tenfold that love back to share further.\n\n\"'I approve of what he's doing. I will not use old criteria to judge this situation or what he is doing. I will show with my love that I love what they have done and I may even join in some way when it won't break their romantic mood. This is the harmonious and joyful culmination of a love they've been building between them. I want it to continue.'\"\n\nCarolyn was quiet and I felt her body relax in my arms as we watched Amy and Matt build up to their orgasms.\n\nShe whispered to me, \"What should I do when they're finished?'\n\nI told her, \"I'd kiss them and tell them I love them. In your case, well ... if you truly want to set yourself apart from other women and cement your relationship with Amy, then you might eat her out and clean up your husband's mess.\"\n\nCarolyn turned her nude body to me to see whether I was serious. I was, she determined. I got a devilish grin.\n\nFive minutes later, after kissing the couple and pledging her love to both of them and hoping they really loved each other as much as it appeared, Carolyn started to eat Amy's pussy, using a finger or two to extract what Matt had left deep inside his sister-in-law.\n\nI looked on, pleased with Carolyn's reaction and developing sapphic skills. Matt looked at his wife and sister-in-law with awe. Josh was also watching the two women with obvious admiration and wonderment.\n\nEdie got up from the other side of the chaise that Josh was on and came over to where I sat. She cuddled into me, and I held her. She whispered, \"Happy?\"\n\nI grinned and gestured at Carolyn and Amy. \"Very. Everyone has taken steps in a direction I like.\"\n\n<center>* * * * *</center>\n\nOur last dinner together with my two children and their spouses was at a sports bar restaurant called Gecko's - a local chain. The six of us were vibrant and enthused. Not unpredictably, I learned more about Edie, my girlfriend as she responded to questions from the group.\n\nCarolyn and Amy asked Edie about her career in modeling. They were interested in both sides of the business - the actual runway and photographic work, and the business side.\n\nCarolyn teased, \"So, if I want a sexy woman, I'd just call you up and you'd deliver one to my doorstep. Sounds almost like you were pimping the girls out.\"\n\nEdie laughed, \"That's what we called it behind the scenes. Besides, in a few cases that's exactly what we did.\"\n\n\"Explain that,\" Amy said with a grin.\n\n\"We provided photographic and movie models, especially a lot for advertising. We had several studios that would occasionally come to us for actresses for their adult videos. That's all. We always had a few girls that didn't mind doing them. It was good money and fun.\"\n\n\"Porn?\" Carolyn asked.\n\nEdie laughed, \"Yes. It is a legitimate business, you know. They always paid their bills, and the girls never complained except to ask for more of the same kind of work.\"\n\nAmy pushed, \"Did you do any of that?\"\n\nEdie grinned, \"I did. It paid well, and like many that work on that side of the line, I needed the money. Later, as I got into more runway and studio work, I was making a lot more money on the fashion side of modeling so I devoted myself there.\"\n\nHearing that Edie had done some porn videos caught my attention. Instead of a negative reaction, I thought about how cool that was that she'd had the balls to do that.\n\nI asked, \"Do you have any of your films?\"\n\n\"Sure. They're back at my house. I haven't seen them for years. They're in mostly VHS format to show you how old they are. That was novel back then. I had a couple in Beta format, too, but I tossed those because nobody had a machine that could play them. Over a few years in my early twenties I did about twenty-five or thirty videos. My stage name was Lila Cummings.\" She laughed at the atrocious appellation.\n\nCarolyn asked, \"What kind of stuff did you do?\"\n\n\"Nothing that might leave a mark or cause pain. I started with couple porn, masturbation, then got into threesomes of both kinds and some group scenes, even a couple of orgy scenes; cheerleaders, two gangbangs, then they got me in a couple of lesbian films. The plots, if there were any, were weak and useless. I told Jim that I'd done some wild things back then.\"\n\nI asked, \"Were you into the accompanying drug scene?\"\n\n\"Only pot. I was too scared to get into anything else. One girl I knew through the agency OD'd and scared a lot of us about stronger drugs, plus I was trying to save my money. My preference was champagne and a few tokes.\"\n\nEdie added, \"Even in those days, almost all my effort was on the professional modeling work - the fashion and high-end photography work. There were some great gigs. One outfit flew me to St. Maartens', took pictures of me for a week in every possible thing you can imagine as well as nothing at all, and then flew me back. All very legit, and no sex involved. The hotel was top end, too. I never knew about that end of things until then. It made me want to move up, so I asked for more assignments like that and fortunately got them. The more assignments like that I got the more in demand I was. Success bred success.\"",
        "Amy asked, \"How does a company that wants to use photos know you'll display their products well? I'm not sure I'm asking the right question.\"\n\n\"Each model has what is called a 'Model Card' - like their business card - that gets sent to prospective buyers of our time. If they showed up at our offices, in those days they had to use our notebooks or computers to scroll through hundreds of them; now they're online with password access. Each card would have one to eight still photographs on it with our body specs and measurements - height, eye color, hair color, tattoos, bust, hips, waist, and even our dress and shoe size. On a large job, a customer would pick a half dozen, and then we'd go in and meet them. They'd narrow down to one or two of us. \"You could have one, too, both you and Carolyn. You're both good looking and present well. You should register with one of your local agencies.\"\n\nCarolyn said, \"But I've never modeled ... well except for Matt.\" She giggled.\n\nEdie said, \"We all have to start somewhere. You won't command top rates, but you might have some fun away from your usual job. You can even specify that weekend work is preferred, which kind of indicates you have another job.\"\n\nAmy asked, \"You really think someone would hire us?\"\n\n\"Sure. You may end up in hot pants and a sexy blouse holding up a can of motor oil or transmission fluid, and extolling its virtues in your car's engine, but it's nice work and sure different from office fare. Many companies like using 'virgins', too; actresses with no prior experience ... especially in some of the adult video stuff.\" She laughed at her add on.\n\nI tried to envision Carolyn in a porn film. That provided me an arousing daydream that I resolved to come back and revisit.\n\nLater, we swung by Edie's house and she retrieved several tapes and a couple of DVDs. At my house, Josh took one she recommended and cued it up in my old VHS player. Soon, I could hear Edie's voice of thirty years prior as she talked to some hunky guy in a warehouse. Ninety seconds later, she was sucking on his cock, and in another ninety seconds another guy had joined the couple. This was an M-M-F video, and she was very good in it. I got harder than a rock.\n\nJosh and Amy, Matt and Carolyn, and Edie and I had our clothes stripped away by our partners. We all started to pet. Josh laughed and suggested that the guys 'rotate' one girl to their right in the living room where we were watching the TV. We did, and I ended up with Carolyn again.\n\nWe made out. She asked, \"Are you going to fuck me?\" She held my cock and was stroking the shaft against her mons.\n\nI smiled, \"I would love to, but I don't want to hurt your marriage or your thinking about all of this without the peer pressure. I rather you leave wishing you had instead of wishing you hadn't. As I think I said earlier, come back after a few weeks of some heavy thinking and let's reevaluate after you've applied some clear thinking to your lives and maybe even done some research.\"\n\n\"What would you think if I fucked Josh - my brother?\"\n\nI chuckled, \"I would think you'd found a great guy to make love with. You're both adults. I hope you'd feel loved and want to repeat often because of all the feelings involved - emotional, physical, and spiritual love. I love you both, and would wish the same for him. If you continue on this path, I can see the two of us making love in the future. I just want you to take your time as far as I'm concerned. Remember what your mom and I told you growing up: 'Sex is never an emergency'.\"\n\nJosh said, \"Switch,\" and a few seconds later I had Amy in my arms and kissing me with a sense of urgency. A few seconds later she whispered, \"Josh wants us to fuck. He wants to see you nail me.\"\n\n\"And that won't hurt your marriage?\"\n\n\"No. He'll be aroused, not to mention how I'm feeling. I love you and Edie. I want to come back frequently, and I want the door to be open to our loving. We opened the door with Matt doing me earlier today, and I'm encouraging Josh to make love with Carolyn. Don't they look cute together?\"\n\nWe both looked. Josh was exercising two of his fingers on his sister's cunt. She was loving it, and kissing him in a way that expressed great passion. She held his cock in her left hand was doing all she could to stimulate him. Further over, Matt was similarly engaged with Edie.\n\nAmy leaned over and said to her husband, \"No more switching of partners until all these combinations have fucked each other into a state of oblivion.\"\n\nJosh laughed and then kissed Carolyn with a lot of tongue.\n\nI watched Matt mount Edie. He was worked up and his cock was about as long and round as her forearm. She made some mewling noises as he sank into her, and I got even harder and more aroused watching my girlfriend fucking my son-in-law.\n\nA shift of view, and I saw Carolyn lying back and spreading her legs in invitation to Josh to take her. He slid his cock up and down her slit a dozen times, as they starred into each other's eyes. Then suddenly, he hitched forward, and his generous man meat slid into his sister for the first time. She also made sounds of acceptance as she wrapped her arms and legs around him and pulled him in for more kisses and love.\n\nAmy cranked me up to a rigid state, in part by telling me what my daughter and girlfriend were doing and feeling with the cocks inside them. I respond well to 'dirty talk'. Amy mounted me, and sank her drippy pussy down my cock until I had nothing left to fill her with. We were kissing a lot, too; plus, I was planning on ingesting her great boobs in my mouth.\n\nNo one came right away. We did watch each other and obviously got off on it. Everyone changed positions a few times. We agreed that the spoon position or the reverse cowgirl revealed the most penetration to others in the room. We liked that.\n\nAll the while we were doing that, Edie was getting laid, fucked, and refucked by the guys in some hypothetical warehouse in the video that played on my TV set. What a mattress was doing in a warehouse was left unquestioned by the viewers.\n\nEventually, Josh, Matt, and I orgasmed ourselves out of the game, but not before pleasing our partners. I gave a demonstration on three women of how-to cleanup a sexual mess. I ended with Edie, and we then made love again. The others were with their spouses also making love again. This time, the men did eat out their wives after having sex.\n\nBreakfast the next morning was a busy time as last-minute packing occurred between bites of the pancakes Edie and I had made for everyone.\n\nI drove the two couples back to the airport for their return flight to Washington and their homes in Virginia. We stood curbside saying goodbye. Amy kissed me passionately as two of the security cops watched with great interest. She whispered, \"I love you.\" I shook hands with Matt and Josh, and did fist bumps of affection.\n\nCarolyn kissed me like the world was ending. She had tears in her eyes. \"I love you so much. Next time; yes, next time you won't get away. See you in a few weeks. I already know what my decision will be ... and so do you.\"\n\nI drove home and Edie and I shut up my house so we could move back to Edie's house for a few days."
    ],
    "authorname": "SteveWallace",
    "tags": [
        "polyamory",
        "loving wives",
        "group sex",
        "sex party",
        "old-young",
        "group incest",
        "porn",
        "mature"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/jim-and-edie-again-ch-09-10"
}