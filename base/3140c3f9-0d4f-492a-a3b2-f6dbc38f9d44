{
    "title": "The Devil Comes Out at Night Pt. 05",
    "pages": [
        "Jeana and I became obsessed with behinds, both male and female. Maybe obsessed is the wrong word, but we enjoyed talking about them and speculating about them, often giggling when we were at church events, the way girls do in junior high school.\n\nSeveral of the congregation's men had particularly nice behinds, and nicely tailored Sunday trousers that showed them off. The women, in their conservative dresses and skirts, were harder to read. In a congregation of nearly fifty women, there was usually at least a few each week that were in a peacock mood. That's what Jeana and I called it when a woman broke with the boring ranks on a particular Sunday; we'd say, \"Ooo, she's in a peacock mood.\"\n\nYou never knew who it was going to be, although there was quite a few who you knew it was never going to be \u2014 those most proper of church ladies. Cynthia Marley sort of fell into that camp, although, as I've told you before, if you're lucky enough to see her in bluejeans it's a completely different story. But those sightings are extraordinarily rare. Three times in nearly ten years. The body she presented on Sunday after Sunday was shrouded in frump; plain, loosely cut dresses that gave scarcely a hit at her big breasts and her trim waist and her eye-popping behind. Kardashian curves. Big booty. Junk in the trunk. Badonkadonk. I just looked that last one up to make sure I spelled it right, and the sentence to show how to use the word correctly was this: \"Her badonkadonk made a brotha pop mad wheelies.\" That made me laugh. We don't have any 'brothas' in the congregation, but men are men. On that work day in the Fellowship Hall, when Cynthia was on her hands and knees in her tight jeans, I'll bet more than a few of our men popped a boner, if not a full-on wheelie.\n\nI wasn't well acquainted with the Devil back then. Yes, I'd noticed Cynthia's ass that day. I mean, who didn't? It was so out there, and her super stretchy jeans so shockingly showed the topography of her big pussy. I certainly didn't know what to say, so I said nothing, and the many men in attendance that day didn't say anything either. I'm sure the last thing they wanted to do was have her leave in embarrassment and end the sexy show. I'm also sure they were all disappointed to see her revert to her frumpy dresses again, starting that next Sunday and continuing until the very summer I'm writing about, the summer when the Devil was changing some of our minds.\n\nThe beginning of her transition happened on a warm Sunday morning. The church's windows were open and birdsong filtered in, and she walked in wearing a dress I hadn't seen before.\n\n\"Cynthia's in a peacock mood!\" Jeana whispered, her voice excited. \n\nI nodded. Our silly little game of voyeurism had been going on for a while, and having Cynthia finally play into it was more of a thrill than it probably should have been. Jeana and I were critical of the nosy nellies in the church, but we'd become an odd bizarro world version of them ourselves, searching happily for glimpses of sexiness.\n\nCynthia was alone that morning, as always, and a big oversized handbag hung from her hand, as usual. What was different was the dress. It was a burnt orange color; not bright and flashy, but a stronger color than the muted tones she usually wore. The tailored shape of it was a departure for her, too; the mid-section actually curved inward and showed off her trim waist. Somebody smarter than me decided that things that curve inward must curve outward again, and on Cynthia that meant tits and ass. She wasn't just a frump in a tent, she was showing off more than a little badonkadonk! I gave Jeana a tilt of the head to have her follow me, and I marched right over to say hello.\n\n\"Hi Cynthia,\" I said. \"Gosh, I love the color of that dress. Is it new?\"\n\n\"Yes. Well, no. Sort of. I got a big box in the mail a few weeks ago, from my mother. This was one of hers, from back when she was my age. I wasn't sure if...does it look okay on me?\"\n\nCynthia stood there, nervously smoothing the dress over her hip with her hand.\n\n\"It's fantastic,\" Jeana said. \"Oh my gosh, I love it.\"\n\n\"I wasn't sure if it was right...for church.\"\n\n\"Why, because it's a little curvy?\" I asked. \"It's 2017, we need to come out of the dark ages around here. You look wonderful. Don't let all the nosy nellies discourage you. You know the ones I mean.\"\n\nCynthia nodded and looked down at herself. She seemed very unsure, and her lack of self confidence was palpable. \n\n\"Would you like to join our club, Cynthia?\" I asked. \"I don't know if you've noticed, Jeana and I have been trying to dress less conservative lately. We get the evil eye once in a while from some of the others, but it's fun to wear more womanly things. Maybe we'll start a trend.\"\n\n\"Yes, lets,\" Jeana said. \"You can sit with us, too, if you want. It's not a crowded pew.\"\n\n\"I noticed...you're sitting together now,\" Cynthia said. \"But...you're with your husbands...\"\n\n\"We'll put you right between Jeana and me,\" I said.\n\n\"Well...maybe...just for today,\" Cynthia said.\n\n\"Good,\" I said. \"This place is too stuffy with everyone sitting in the same place every week. Even Reverend James complains about it sometimes.\"\n\n\"Does he?\" Cynthia asked. \n\n\"We should take our seats,\" I said.\n\nWe walked up the aisle and found Bob, looking sharp in his summery linen suit, chatting with one of the elderly men.\n\n\"Cynthia's going to sit with us,\" Jeana said to him. \"Isn't that nice?\"\n\n\"That's fantastic,\" Bob said. \"That's a beautiful dress, Cynthia.\"\n\n\"Oh, thanks,\" she said, looking shy.\n\n\"We're right here,\" I said, shuffling my way into the long pew. I left a space at the end and sat down. \"Donald will join us when he's done ushering.\"\n\nCynthia sat down next to me, pulling the hem of her dress down over her knees as best she could. Jeana sat next to her and Bob sat next to Jeana.\n\n\"So, are we taking bets on what the sermon's about today?\" Bob said, leaning forward so he could speak to all three of us gals. \"I'm putting my money on Jesus.\"\n\nJeana elbowed him and chuckled. Cynthia chuckled, too, and I could see her relax. I was glad.\n\n\"That perfume is lovely,\" I said to her. \"Do you have men following you around wherever you go?\"\n\n\"No,\" she chuckled. \"I wish.\"\n\n\"Maybe your mother's dresses are the key.\"\n\nCynthia smiled. I remember thinking how odd it was \u2014 her using her mother's looks to be sexier, and me abandoning my mother's looks to reinvigorate my sex life. Such is the way it goes \u2014 different strokes for different folks.\n\nDonald slipped in next to me and leaned forward to say hello to Cynthia. I saw his eyes make quick, surreptitious work of her dress and her body. He smiled at me with an odd look in his eyes. Organ music soared and we all stood and sang. Sunday service was underway.\n\n\u2014\n\nThe coffee was piping hot in the Fellowship Hall after the service, and the trays of donuts seemed extra laden. Cynthia was still with us. She seemed happy to be included in our little group. I thought back to high school and all the cliques, and how easy it was to end up an outsider, even when you probably could have fit in. Donald and Bob were chatting with one of the men about a new car he'd just bought, and Jeana and I found ourselves alone with Cynthia, the three of us sitting on a couch against a long expanse of wall. Cynthia's pretty dress had ridden up a little and her knees were showing. It was a first for her, as far I knew.\n\n\"You should spend the day on the boat with the four of us,\" Jeana said to her, surprising me. \"We call it the bikini boat. It's the best place to get a tan. I think it's all the reflections from the water that makes it so good.\"\n\n\"Bikinis? You two wear them?\"\n\n\"Sure,\" I said. \"I know we're old, but...\"\n\n\"No, sorry, I didn't mean that,\" Cynthia said. \"It's just...I don't know...with your husbands...\"\n\n\"They love it,\" I said. \"Makes 'em feel young again. Us, too.\"\n\n\"It's a nice relaxed atmosphere,\" Jeana said. \"They're pretty laid back guys, even more so when they're away from here. We have fun. You should join us. Have you ever been on a big boat?\"\n\n\"No. My uncle has a pontoon boat at his camp. I've been on it a few times.\"\n\n\"Ours has a bathroom and a kitchen. Plenty of privacy to change clothes. It's like a floating camp. How about next Saturday if the weather's good. We're on Odaya Lake, at Pirate's Harbor Marina. You can meet us there.\"\n\n\"I Guess. I mean it's really nice of you to invite me. Yeah, I'd love to.\"\n\n\"Great!\" Jeana said. \"We'll get lots of sun. It'll be fun.\"\n\n\"Do you have a bikini, Cynthia?\" I asked. \"That store at the mall, Silkies, they have everything on sale right now. I was in there the other day.\"\n\n\"I have one. I only wear it in my backyard, when I'm tanning.\"\n\n\"Any cute neighbors?\" Jeana asked, winking.\n\n\"Not really, no.\"\n\n\"You probably see lots of cute guys at the bookstore.\"\n\n\"Oh, yeah. But I'm like the worst at any kind of flirting. It seems like every year I get farther and farther from knowing what I'm doing. I hate to admit it, but the last real boyfriend I had was back in college.\"\n\n\"Boy, I wish I knew someone your age to hook you up with,\" I said. \"Are you fussy about age? Do you like younger men and older men?\"\n\n\"Sure, I guess. I really shouldn't be fussy, still single at my age.\"\n\nI sipped my coffee and looked at Cynthia's bare knees. \"I really like that dress on you. You said there's others?\"\n\n\"Yeah, she sent a whole big box. There's probably a dozen. I don't think she wore them much. She was always into clothes, buying new things and not wearing them much. Sort of a shop-a-holic, I guess you'd say. I don't think they called it that back then.\" \n\n\"You can wear one each week to church. That'll take you right through the warm weather.\"\n\n\"Some of them are more, like, for cocktail parties.\"\n\n\"Everybody's so afraid to drink these days,\" Jeana said. \"Gosh, my parents had some rip-snorter parties and everyone drove home. I think life was a lot more fun back then.\"\n\n\"We just have to make our own fun,\" I said. \"Iced tea with rum in it, on a big boat in the sunshine. Be there or be square.\"\n\nJeana and I smiled, and Cynthia smiled, too.\n\n\u2014\n\nWhen Jeana and I talked on the phone I told her I was surprised that she'd invited Cynthia for a day on the boat. She said she thought it would be good for Cynthia, and I agreed. She said I should be able to keep my clothes on for one Saturday, and I agreed with that, too. I wasn't sure how the men would do. I worried about easily aroused boners under skimpy swimsuits and Cynthia getting freaked out by it.\n\nI hadn't talked to Bob about the plan for the day, but Donald seemed happy about it. He was surprised Jeana and I had encouraged Cynthia to wear a bikini, and he was certain she'd never do it. \"Not Cynthia. A bikini? With me and Bob there? No way.\" I bet him twenty dollars that she'd wear one, and he took the bet without hesitation.\n\nJeana called on Tuesday. She said both she and Bob were disappointed that the four of us would be missing out on our usual Saturday debauchery, and she asked me if Donald and I would like to come to their house for some pizza on Friday night. I told her I'd need to check with Donald. It seemed like a big step, having sex with them in their house, maybe even on their bed. The church would call it their marital bed. The Devil might call it that, too.\n\nOf course Donald said we should go. He's not one to turn down a chance at sex with Jeana. I was glad we were going, but it still felt like a big step.\n\nI spent the afternoon that day out in our backyard, working on my tan. After a while I felt guilty about just laying there, so I brought an exercise mat outside and I worked on some crunches and a low plank and some leg lifts and scissors. It was very hot out and I was sweaty and really in the zone, burning calories and sort of numb to the world.\n\nI heard a soft clicking sound so I looked next door, and there, twenty feet away from my sweaty, shiny body, was our neighbor Martin, clipping his long hedge with small little clippers, the kind meant to prune one small branch at a time.\n\n\"Oh, hi Martin,\" I said. It was his first look at me in full bikini regalia, without the sweatpants I had on the only other time he'd seen me out of my usual street clothes. \"Boy, it's another hot one, huh?\"\n\n\"It sure is,\" he said. \"I'm impressed with your endurance in these kind of conditions.\"\n\nI smiled. He'd obviously been watching me a while. \"What do you think?\" I said, holding my arms out wide at my sides. \"Am I worthy of a bikini yet?\"\n\n\"Oh, God yes,\" he said, without hesitation. \"Have been right along. Now I know how you keep that nice shape of yours.\"\n\n\"Oh, the exercise is a new thing. I wish I'd been doing it for years, but Donald and I have just been getting serious about it recently. We have church friends who have a boat, so we've been out of our clothes a lot more than we used to be.\"\n\nThe honesty of the statement made me tingle, and my nipples bloomed. Martin had seen it happen before, with a different bikini top, and the one I had on was just as bad at hiding my arousal.\n\n\"What kind of a boat is it?\" he asked.\n\n\"It's a big old wooden cabin cruiser. A Matthews. Forty-five feet I think. It's like fifty years old or something. It's in really nice shape though.\"\n\n\"Just like you,\" Martin said, with a twinkle in his eye.\n\n\"Oh, you're sweet, Martin. Gosh, I'm just dripping. Too hot for any more today. I'll see you, Martin. Tell Ellen I said hello.\" \n\nI sashayed my ass more than usual as I walked to the house. I wonder if Martin noticed me smiling.\n\n\u2014\n\nCynthia called. She said, \"I was thinking maybe I should get a different bikini. Do yours and Jeana's...how much coverage do they have?\"\n\n\"Ours are pretty skimpy,\" I told her. \"That's not what you thought I'd say, probably, right? Jeana's always worn them that way, I think, and I figured if you're gonna go bikini you might as well go all the way. Why, what's yours like? You said you just have the one?\"\n\n\"Yes, just one. I wear a one piece if I'm ever at a pool or the beach. Bikinis, though...I thought maybe I should get something with a little more...coverage.\"\n\n\"You said you wear it in your yard, didn't you?\" I said. \"I say go for it. No need to spend more money if you've already got one. We'll all be sort of alike. It'll be good.\"\n\n\"Okay. If you think so.\"\n\n\"Bring a towel,\" I said. \"The swimming's super nice in the lake. The water's really warm, I guess maybe because the summer's been so hot.\"\n\n\"Oh, okay. I guess I'll see you Saturday morning then. Thanks Margaret. Bye.\"\n\n\"Okay Cynthia. We'll see you there.\"\n\nAfter I hung up I wondered just how skimpy Cynthia's bikini was. I knew the boys would enjoy it, no matter what it looked like.\n\n\u2014\n\nFriday was an odd day. I work Mondays, Wednesdays and Fridays, so I was at the office with Reverend James all day. He was working on his upcoming Sunday service, and I was working on some bookkeeping and payroll issues. It was difficult to keep my mind on my work because I knew that in just a few hours Donald and I would be at the Smythe's house. I'd been there a few times but it was always in the daytime, usually before or after some shopping with Jeana. Going there to spend the evening, with Donald and Bob there, was a whole different thing. I was planning on wearing some of my sexiest new lingerie under my dress, and sitting there at my desk, listening to Reverend James paging through his big Bible looking for passages for his sermon, all I could think about was how long my dress would stay on after we got there. I wondered if Jeana would even bother with one \u2014 maybe she'd greet us at the door in a garter belt and stockings.\n\nShe ended up calling me to coordinate things, and we both decided sexy undies under sexy dresses would be fun. I could tell she was as nervously excited as I was; I could hear it in her voice. It's funny; I'd had Bob's cock in my pussy and in my mouth so many times I'd lost count, but going to their house to be real couple-swap swingers felt so decadent it made my toes tingle.\n\nWalking in through their front door felt like a dream. It was truly surreal, and I was wondering if Donald was feeling the drug-like rush of it the way I was. Jeana looked beautiful, as I knew she would, and Bob seemed taller and more imposing than usual, almost like a movie star on the screen. I got a drink in my hand as soon as possible and started sipping, and before long I relaxed.\n\nAfter a little while the casual cocktail party vibe was getting warmer, or maybe it was just me feeling the anticipation. Bob asked me if I wanted to see a project he'd been working on, and he led me up the stairs. I'd assumed all four of us would be going to the bedroom, but he surprised me by taking me to his office, a masculinely decorated space made out of a spare bedroom.\n\nBob, it turned out, was in the mood for some roll-playing. He pretended me and Donald being at the house was just a normal visit from church friends, and then he started to flirt the way a man might, asking me if I found him attractive. I smiled and let the fun of it draw me in and I played along, and soon he'd guided my hand to his crotch.\n\n\"Oh, my! Bob! What are you doing! Donald and Jeana are right downstairs! I don't...think about you that way!\"\n\n\"Are you sure, Margaret? You've made me wild with desire, ever since I met you.\"\n\n\"But that's...just wrong, Bob! We're...married!\"\n\n\"Do you feel me, Margaret? Do you feel how hard you make me?\"\n\nI was gently squeezing his growing lump through his khaki chinos. \"I...do this to you?\" I said.\n\nBob deftly unfastened the nice looking pants and he took hold of my hand and he moved it inside, to the warmth of his smooth, tight, boxer-briefs. \"I won't force you, Margaret; I know that's a bad thing to do these days. I just wanted you to see. I've sensed your curiosity, in your eyes.\"\n\n\"I am. I mean...I have been,\" I said quietly, pretending to be shy. \"You...every time I see you at church, it...makes me warm.\"\n\n\"I know, Margaret. I know. I burn with fire every time I see you.\"\n\nBob's cock was rock hard. Somehow I'd worked it out of the flap on the front of his briefs, and its length and size looked astounding to me, the way it surely would have if it was the first time I'd seen it.\n\n\"Good Lord, Bob!\" I exclaimed quietly. \"This is you?\"\n\n\"No, it's you, Margaret. It's you who make me this big, this hard. Take me in your hand. Please Margaret. Don't make me beg.\"\n\nA hand job started, my hand on Bob's big cock, and it was the most extraordinary thing. Nearly silent except for our heavy breathing and the sound of flesh on flesh, a sound that seemed to be amplified by the walls of the quiet office.\n\n\"We really shouldn't,\" I whispered, my voice all lusty breath. \"This is so wrong. You're supposed to be showing me church business.\"\n\n\"This is all I think about when I see you at church, when I see you in your Sunday dress,\" he said, his eyes dark and lusty. \"Are you a woman who enjoys oral sex, Margaret? I dream that you are.\"\n\n\"I...I never have. I've never tried it.\"\n\n\"I'm here for you, if you'd like to know what a man feels like in your mouth.\"\n\nI kept stroked the big cock with my hand, looking at it the way I imagined another random woman from our congregation would look at it. Bob interrupted my quiet trance when he pushed his pants and underwear down to his thighs, letting his cock spring upward again in front of my surprised eyes.\n\n\"Good Lord!\" I said, gazing lustily at the dark hairiness of his manly crotch.\n\n\"I'm here for you, if you want me,\" he said.\n\nMy mouth opened and I took his big, hard shaft in on my tongue, and I closed my lips around him and the most magical blowjob was underway. All I could think of was the first time I had him in my mouth, up in that Adirondack cabin. His is a cock meant to be sucked, a perfect specimen if their ever was one. Porn worthy. It's a shame the world can't see him disappear into an eager woman's mouth.",
        "It wasn't difficult for me to pretend I shouldn't be doing what I was doing; all I had to do was glance at the wedding ring that was on the finger of my hand as I held the base of Bob's big cock. As my mouth worked the first four or five inches of him I thought about his work as a church Elder, the nice way he dressed for Sunday service, and the readings he did once in a while at the pulpit. I thought about what a beautiful couple he and Jeana are, a happy husband and wife. I thought about how happily married I am, and how handsome my Donald looks at church when he ushers.\n\n\"Ohhh, Margaret!\" Bob whispered, looking down at his cock in my mouth. \"I've dreamt of this.\"\n\n\"This is wrong, Bob. We really shouldn't,\" I said, gently stroking the wet shaft. \"My God, you're...so hard.\"\n\nMy mouth took him in again, hungrier. I felt the Devil in the room, feeding me with lusty energy.\n\nBob held my head gently in his hands, and he was moaning, silently, under his breath. \"I need to touch you, Margaret. I need to taste you.\"\n\n\"We shouldn't,\" I said, as his cock slipped from my lips. \"We can't.\"\n\n\"We need to. You know we do.\"\n\nI stood slowly, holding his cock in my hand. I was drawn to the pure lust in his eyes and I kissed him, quietly moaning. His hands roamed on my hips and ass and dragged my dress upward, the hem rising up my thighs until it was above my new sexy lace panties. His hands were all over them.\n\n\"So beautiful,\" he mumbled in my mouth.\n\n\"I've never felt a man so hard before,\" I said, squeezing the hugeness of his hot shaft in my hand. \"I had no idea you were so big.\"\n\n\"It's all for you, Margaret,\" he said in a breathless whisper. \"I need to fill you. Will you turn around for me? Will you let me fuck you?\"\n\nI turned and bent over his desk. He pulled my panties down, all the way. He lifted one of my feet out of them but left them around my other ankle. He spread my feet apart, widening my legs. My body and my mind were electric with the thrill of it when his hands slid up the backs of my legs. His face pressed against my ass and his mouth tasted my pussy. I wanted him there, like that, but he stood, and his hard cock entered me.\n\nI thought of the first time, how huge and overwhelmingly filling he is, and my lungs gave up their fight and a deep moan escaped from me.\n\n\"Quiet, Margaret!\" Bob whispered. \"Jeana might hear you!\"\n\nEasy for you to say, I thought, as the intensity of his fucking began. You try being quiet when a man like you fucks you; you won't find it easy, I'll tell you that!\n\nIt was a silent fuck, just breathy huffs and wild lust, the way cheating people would do, and it took me to that place of orgasmic beauty that I adore; an alternate reality where God and the Devil are best friends, the two of them egging me on, with smiles and wide voyeuristic eyes on their faces. My orgasm was huge, and when I was still flying high from it Bob gushed his cum in my mouth, holding his ecstatic groans inside him in near silence. He'd just fucked the church secretary, and I could see the wild thrill of it in his eyes.\n\nIt went on that way for an hour, gradually getting naked, having whispery quiet sex that was intensified because of it. There was no noise from downstairs. The cheating felt real, and my orgasms were intensely, silently powerful.\n\nWe went downstairs and found Jeana and Donald naked and snuggly on the couch. We all snacked and had a drink, acting a little strange, and then we all went to the Smythe's big bed and had a beautiful, loving fourway.\n\n\"How was your time alone with Jeana,\" I asked, on the way home in the car, feeling a little sheepish about the topic.\n\n\"Oh. It was good,\" my man-of-few-words husband said. \n\n\"It was good? Don't you think we should talk about it? If we're going to do these real couple swap situations it all needs to be open to keep things healthy.\"\n\n\"I know,\" he said, keeping his eyes on the dark road. \"She...surprised me a little. It was roll playing, from the moment you and Bob went upstairs.\"\n\n\"Let me guess; you guys were cheating on us. A secret affair.\"\n\nDonald glanced over at me, and then back at the road. \"How did you know?\" he said. \"Did Bob tell you?\"\n\n\"No. We did the same thing. He led me right into it and I...I played along. It was odd. Did you find it odd?\"\n\n\"I did. Uncomfortable at first. I wanted to tell her it was wrong, but...it was just so sexy and...exciting.\"\n\nDonald didn't look at me when he said it. There was a little shame in his voice, and I understood it. I felt a little ashamed of what I'd done, too. \"I wondered why I couldn't hear you two,\" I said. \"Jeana's always pretty vocal when she's with you.\"\n\n\"She kept shushing me, with a really amazing look on her face. She's a good actress. So you and Bob...what went on?\"\n\n\"He took me to his office, the way he might at a cocktail party, and he seduced me, and...I let him. I gave him a blowjob, all dressed, with just one little light on. It was like in the movies, dark and shadowy, with the wife downstairs with her guests. I fell right into it. I really do feel oddly from it all. It seemed very real.\"\n\n\"Don't feel bad about it,\" Donald said. \"We were there to have sex with them. It's just roll play.\"\n\n\"Is that how you felt? When it was happening?\"\n\n\"No, but...Yeah, I get it. I get what you're feeling. I felt it too, but...doesn't that just mean it was good? The roll play, I mean?\"\n\n\"Oh, it was good,\" I said emphatically. \"Yeah, maybe we've all got cheaters inside us and that's the way to let it out without hurting anybody. I'm not sure I'm happy with Jeana, though, for being so sneaky about it. She never mentioned they were going to do something like that.\"\n\n\"I guess that's what made it work,\" Donald said. \"That element of reality.\"\n\n\"I guess,\" I said. The dark road was coming at us like a video game on a screen. There was nothing out there, and it made it easy to think.\n\n\u2014\n\nI was hoping Donald and I would get to the marina early, so we could spend fifteen or twenty minutes talking with Bob and Jeana about our fascinating night together at their house and in their bed, but the late night of fourway sex wore us to a frazzle and we could barely get showered and out of the house and make it there by the time Cynthia was supposed to arrive. We pulled into the parking area just as she was getting out of her car.\n\n\"Hi Cynthia! Cute shorts,\" I said. I gave her a little hug. Donald greeted her and hugged her, too, which was a first I think, although they've always had a nice easygoing rapport. I could tell we were all secretly looking each other over; it's always fun to see a 'church person' out in the real world.\n\nCynthia looked nice and casual. She has long streaky blonde hair, and at church she almost always has it scrunched up in a knot on the back of her head, held with a decorative clip. It was nice to see her with it down, looking natural, even if it was plain looking and a long way from stylish. \n\nShe had a gray t-shirt on, one with a deep v-neck, and the v was laced up loosely with gray cord through metal grommets, like an untied shoe. It looked sexy, giving more than a hint of her deep cleavage. I couldn't see any sign of her bikini top, but I assumed it was under there, giving her big breasts some needed support.\n\nHer shorts were white with thick black vertical pinstripes. They looked sort of 'yachty', and they fit her beautifully. She had slipper-like canvas shoes on her feet, adding to her casual look. She reached into her car for a big, oversized handbag made out of woven straw, and she proclaimed she was ready. She looked a little nervous.\n\nI had my canvas 'beach bag' and Donald had the box of food: cookies and some little cheesecake things with strawberries on them. Jeana had said she'd make the lunch, and Bob was on top of the booze situation, as usual.\n\n\"This is a bigger marina than I thought,\" Cynthia said, looking around. \"Lots of big boats. Which one's theirs?\"\n\n\"There they are,\" I said, pointing. \"See Jeana waving from up on top?\"\n\n\"Oh, wow! That's big!\"\n\n\"Yeah, it's nice,\" I said. \"You could live on it probably, if you wanted to.\"\n\nWe walked to the docks and I was glad to see Bob was wearing khaki shorts and a polo shirt. His big cock in a speedo first thing in the morning might have been to much for Cynthia. Jeana was similarly attired: a cute shirt, shorts and flip-flops on her feet.\n\n\"Hi you two,\" I said to them. \"Long time no see!\"\n\n\"Oh,\" Jeana said. \"Yes. How have you been?\"\n\n\"Fantastic,\" I said. \"I had the best dream last night. It wore me out, though. I could use a cup of coffee.\"\n\n\"Oh, I know. Bob and I are getting a slow start, too. Hi Cynthia! How are you! We're so happy you could come today.\"\n\n\"Welcome, Cynthia. Welcome, Norman's,\" Bob said. \"Looks like it's going to be another blistering hot day. What's with this summer? Climate change?\"\n\n\"I'm not complaining,\" I said. \"I'll take all the hot summer days I can get.\"\n\n\"Me too,\" Cynthia said. \"Your boat is awesome.\"\n\n\"Yeah, she's a nice old girl,\" Bob said. \"You can run her hard and she just keeps comin' back for more.\" He winked at me and I smiled. \"Why don't we stow that food and head on out,\" he said. \"I'll warm up the engines.\"\n\nI brought Cynthia inside and gave her the tour while Jeana and Donald handled the dock lines and helped guide the big boat out of its slip.\n\n\"This is where we usually change our clothes,\" I said, showing her the little bedroom at the front of the boat. \"It's got a door if you want privacy. I always wear my suit under my clothes so it doesn't matter much. Did you dress that way?\"\n\n\"Yes,\" Cynthia said.\n\n\"Oh, good,\" I said, \"so we can just...\"\n\nI pulled my shirt off over my head, and I straightened my glasses and I fingered my hair back into place.\n\n\"You guys don't wait until you...get somewhere?\"\n\n\"No, the fun part is walking around half naked,\" I said. \"Makes me feel like a fancy person for some reason. Like 'Lifestyles of the Rich and Famous'. Remember that show?\"\n\n\"No. A TV show?\"\n\n\"Yeah. You're too young to remember it.\"\n\nCynthia was watching me intently. I pushed my shorts down over my hips and took them off, and I put all my clothes and my sandals in my bag.\n\n\"I hope you don't mind me saying this,\" she said, \"but wow! You look really good, Margaret. Does anyone at church know?\"\n\n\"Ha!\" I laughed. \"No, I guess they don't. Thank you for the nice compliment. When you get to be my age you'll appreciate that kind of thing more than you know. I hope you don't mind me saying this, but I'm kind of interested to see you, too. It's funny how churches are, isn't it? It's like a whole separate thing that's not real life.\"\n\n\"I know,\" Cynthia said, kicking off her little shoes. \"I always think that, whenever I see somebody from church at the bookstore or somewhere. They're, like, in jeans and a t-shirt and I hardly even recognize them.\"\n\nCynthia crossed her arms and grabbed the hem of her shirt and she pulled it up and off over her head. Her less-than-stylish streaky blonde hair tumbled back down over her shoulders. Her breasts were big and natural, every bit the match for mine, but younger and sexier. They were cradled in a string bikini that was the color of an neon eggplant \u2014 deep purple, but vivid. The strings were thin, like purple dental floss. Well, maybe not that thin, but you get the idea. There was a massive amount of cleavage on display, the natural kind, unforced, just two perfect curves coming together in a most perfect way. Her curvy side boob showed, even from a straight frontal view, but it wasn't garish like a porn girl or a stripper. It was just lovely, and really sexy. The incredible package from the neck down only exaggerated the plain, near-homeliness from the neck up \u2014 her hair looks like she probably cuts it herself; her eyes are smallish, un-made-up and just a touch too close together; and the slightly generous size of her nose doesn't do her any favors. All little things, but they add up in an unfortunate kind of way.\n\n\"You think I'm a wow?\" I said, looking approvingly at the top half of her. \"Have you looked in the mirror lately?\"\n\nShe smiled shyly and took off her pinstriped shorts. The little purple bikini bottom was skimpier than anything I owned, with long strings tied in floppy bow knots at her hips. Her lack of self confidence was written all over her plain-looking face, but she looked pleased at my reaction to her unveiling.\n\n\"Is it okay?\" she asked, looking at down at herself shyly. \"I'm glad yours is...sorta like this.\"\n\n\"It's perfect, Cynthia. Jeana wears sexy ones, too. I think she said she was wearing her leopard print today.\"\n\n\"Oh, I like those. I've never been daring enough.\"\n\nI wanted to tell her that her neon purple with the dental floss strings was plenty daring, but I didn't want to embarrass her.\n\n\"Shall we?\" I said. \"We should be out in open water by now.\"\n\nI led the way and we found Donald and Jeana in the main room, mixing a pitcher of drinks and putting out snacks. Cynthia walked past us, to the sliding door that opened onto the back deck, and she stood there in the open doorway for a few long moments, watching the bubbly wake behind the boat and the marina receding slowly into the distance.\n\nIt turned out I hadn't seen one of the purple bikini's most incredible features: it was nearly thong-like in the back, showing off acres of sexy badonkadonk butt cheeks. It was an astounding thing to see, considering how conservatively Cynthia had presented herself at church for all the years we'd known her. All three of us were staggered by the unexpected sight of her, and it took a few moments to get our bearings.\n\nStanding there with my mouth hanging open, I realized why she'd been self conscious about wearing it, her only bikini. Maybe I'd misled her and she thought \"skimpy\" meant \"cheeky.\" I think Jeana and I both think we're too old for the kind of cheeky bottoms the younger girls wear, but I must say, Cynthia wore that style remarkable well. Her ass really is a work of art, perfectly smooth and roundly heart-shaped, and eye-poppingly booty-sized. Definitely a twenty-first century ass, the kind today's young men seem to go gaga over. I had a feeling Donald and Bob were going to be all gaga, too. There might even be drool involved.\n\n\"Here, try some Backyard Tea,\" Jeana said, offering Cynthia a big plastic glass full of the tasty, tan-colored drink. I nearly laughed, because \"backyard\" suddenly had a whole new meaning.\n\n\"There's rum in them,\" I said. \"They've got a nice kick. After Jeana and I have had a couple we start running around topless.\"\n\n\"You do not!\" Cynthia said, looking happily shocked. She glanced at Donald and back at Jeana and me. \"You shouldn't even kid around about that kind of thing.\" She smirked a little and took her glass from Jeana. \"What would Reverend James think?\"\n\n\"Our boat is a church free zone,\" Jeana said, taking a big sip of her own drink. \"Saturday is Saturday, and Sunday is Sunday. They can be very different as far as I'm concerned.\"\n\n\"Cheers to that,\" I said. \"You gonna put your suit on, hun?\" I asked Donald.\n\nHe nodded and Cynthia smiled. \"I'm picturing him with his Sunday suit and tie on,\" she said, \"but that would be way too hot on a day like this.\"\n\n\"Yes, and no fun to look at,\" Jeana said. \"We like our men to show some skin out here. Do you go to the beach much, Cynthia? Do you like man-watching?\"\n\nCynthia looked a little embarrassed by our decidedly un-churchlike candidness, but I think she was starting to get used to it.\n\n\"No, I'm not really a beach person these days. I used to be, when I was younger. I told Margaret the other day, I've only ever worn this at home when I'm trying to suntan a little,\" she said, looking down shyly at all the skin she was displaying.\n\n\"Well that's just a shame because you wear it beautifully,\" Jeana said. \"I kind of love it.\"\n\nI could tell Donald wanted to pipe in, but I was glad he didn't. A compliment from a man about her rockin' bikini body surely would have embarrassed her. Instead, he disappeared down the little passageway that led to the room where we changed. I had a vision of him snooping in Cynthia's bag, pulling out the little t-shirt with the sexy lacing at the neck, feeling the body-heat that was left in it and putting it to his nose for a sniff. It was an odd thing to have running though my head \u2014 I'd never thought about Donald doing such a thing before.\n\nWe three girls nibbled on some cut-up pieces of raspberry danish that Jeana had brought, and Donald was soon back, sporting his new aqua colored suit, a nice fitting one with white piping at the leg openings, orange piping at the pockets, and a wide white waistband with an external tie. I think having the tie on the outside is kind of sexy; right there for fingers to pull.\n\nIt was fun watching Cynthia's face when she first saw him. She seemed to light up a little bit, the same way she'd done when she first saw me in my bikini. We were all discovering each other, and it was fun.\n\nJeana was next, disappearing down the little hallway, returning a few moments later, looking sexy as hell in her leopard print.\n\n\"I know that one,\" Donald said, looking at her approvingly. \"That was our first.\"\n\n\"You've seen them all, I think,\" she said. \"Do you mind repeats?\"\n\n\"Not at all. I love that one.\"\n\nI was worried Cynthia would sense the ease in their conversation, and notice the lusty, loving look in their eyes. Maybe she did. Or maybe all it looked like was good friends. It was hard for me to know, hard for me to judge anymore. After spending the previous night in Bob and Jeana's big bed the four of us were starting to feel like a big married couple. A married quadruple. Is that a thing? I'll bet it is, somewhere in the world.\n\n\"You wanna bring Bob a drink, hun?\" Jeana asked Donald.\n\nHe left with a drink in each hand and I decided to stop worrying. The four of us had gotten so comfortable with each other there was no way to hide it. Cynthia would just have to deal with it, in whatever way she wanted. It was probably less of a big deal than I thought.\n\nWe three girls chatted in the kitchen area, and before we knew it the engines were slowing. Jeana went out and walked up the side deck to the bow to drop the anchor. Cynthia and I went out on the back deck and stood at the rail, watching ducks scatter as Bob deftly entered the little cove. \n\n\"I thought there'd be camps everywhere on this lake,\" she said. Her eyes gazed at the marsh grass on the shoreline, the meadow with the red-winged blackbirds, and the thick woods beyond. \"This is nice.\"\n\n\"We anchor here every week,\" I said. \"It's starting to feel like it's ours.\"\n\nThe engines switched off and Bob was down the ladder quickly. He had followed orders and stayed dressed, but it was easy to see he was eager to get a good close-up look at Cynthia in her cheeky little purple bikini. I can only imagine what Donald had told him about it when he brought him his drink.\n\n\"I think you've been lying to us all these years, Cynthia,\" he said. \"You're really Kate Upton's twin sister, right?\"\n\n\"Nooo!\" she said, smiling shyly, looking adorable.\n\n\"Who's Kate Upton?\" I asked.\n\n\"Only the smokinest Sports Illustrated bikini model this side of heaven!\" Bob said. He never was one to be understated.\n\nCynthia giggled. I was glad. Bob can be a lot to take in sometimes, but she seemed to be enjoying him. I had my fingers crossed, hoping she'd still be giggling when he had his gullet half full of rum and his speedo fully full of the erection I was almost certain he'd spring at some point in the day. It crossed my mind that maybe my first instinct had been right \u2014 maybe bringing a church friend into our unholy lair wasn't such a good idea.\n\nBob took off his shirt and his gorgeous top half was out, all tanned and hairy and masculine. I remembered what he'd told me in jest the first time I laid eyes on his flat, muscular abs \u2014 My wife won't put up with a belly. She starves me regularly. ",
        "\"How many days above ninety are we gonna have, I wonder?\" he said, looking up at the clear blue sky. \"The owner of the marina said it's the best year she's ever had.\"\n\n\"A woman owns it?\" Cynthia said.\n\n\"Yup. She's kinda cute, too. Not like you, but...\"\n\nBob winked at her and her eyes looked happily surprised. I've said before that Bob's the most handsome man in the church's congregation. I wouldn't be at all surprised if Cynthia thought so, too.\n\nBob unfastened his shorts and he stepped out of them. He was already barefoot and he had on a skin-tight speedo-type suit that I hadn't seen before, a white one that looked amazing against his tanned skin. His cock was half swollen and his lump looked positively huge. He looked like a woman's wet-dream, as usual.\n\n\"What do you think?\" Bob asked Cynthia. I wasn't surprised he was inviting her to have a look. \"You can be honest,\" he said to her. \"Margaret laughed at me the first time she saw me wearing one of these.\"\n\n\"It grew on me,\" I said. The chuckle I tried to suppress made its way out. Cynthia looked at me with wide eyes.\n\n\"You flirt!\" Jeana said to him. \"Quit showin' off! Go inside and have a snack. We won't be eating lunch for a while. You need something to soak up that rum.\"\n\nBob left, with his drink in one hand and his clothes in the other.\n\n\"He won't stop flirting,\" Jeana said to Cynthia. \"We're all used to it, but if it bothers you just jab him with your elbow.\"\n\n\"No, I don't mind,\" Cynthia said, looking amazed at what she'd seen and at what was happening. She didn't elaborate, but I could tell Bob's extroverted cock lump and his nearly nude hairy body was a nice surprise.\n\nWhen he came back I asked him why there was never another boat anchored in our quiet little cove. He said the big boats from the marina all usually headed out the connecting canal and took longer cruises for their weekend fun, and the smaller boats tended to go to a big, sandy-bottomed bay about two miles from us, where they anchored and rafted together and partied with loud music and lots of drinking and swimming. It was all fine with me \u2014 I was happy to have a quiet place where the Devil could easily find us, a place with no prying eyes, where we could do what we wanted.\n\n\"I thought maybe we'd take a canal cruise today, to show Cynthia the sights,\" Jeana said, \"but Bob wanted to come back here.\"\n\n\"It's more fun for me if I don't have to be driving all day,\" Bob said. \"I just like to kick back and enjoy the scenery. Speaking of which, hey Don, why don't you point out that heron's nest to Cynthia. She might like to see that.\"\n\n\"Oh, yeah,\" Donald said, giving Bob a subtle look. \n\nHe and Cynthia got up off their chairs. They walked to the rail at the back of the boat and Donald pointed at the big nest in the marsh grass at the edge of the water. I barely heard Bob say \"Jesus!\" under his breath. It was his first look at the backside of Cynthia in her bikini, his first slap across the brain by her badonkadonk, and he looked like he was ready to pop a mad wheelie.\n\n\"Easy, big boy,\" Jeana whispered. \"What do you have, a wing man now?\"\n\nBob's eyes were roaming all over the back of Cynthia, but mostly over her ass. For one of the first times since I've know him, he seemed to be rendered speechless.\n\nI shifted my view to Cynthia, and I wondered if she knew how out there her ass was. It was so unlike her. Maybe she doesn't have a big mirror at her house, I thought, or maybe she has a problem with her neck that makes it difficult to turn and look at that part of herself in a mirror. Or maybe she wasn't as shy and innocent as we all thought she was. Oh, I was sure her social awkwardness was real, but maybe it masked a different kind of woman. Maybe she was secretly enjoying showing herself that way, slapping some badonkadonk on a few church friends. The thought of it made me smile, and I was smiling when she and Donald returned to their chairs.\n\n\"There's a Bald Eagle nest not too far from here,\" Bob said. \"There's quite a few of them around here.\"\n\n\"Really?\" Cynthia said. \"That's so cool. I love nature. I take walks over at the nature center a lot. I read books to the kids there sometimes.\"\n\n\"Fifty Shades of Grey, and stuff like that?\" Bob asked.\n\nCynthia laughed. Her big breasts jiggled like Jello. Bob smiled, his teeth bright white in the sun. I had a feeling there'd be more jokes; anything to get those tits jiggling like that again. I heard a splash and he was gone. I wondered if his cock was hardening and he was hiding it. Into the lake for a cool-down. Bob wasn't one to just jump over the side, so I was pretty sure that was it.\n\nWe all swam for a little while, luxuriating in the feel of it. Cynthia was a back floater, often doing a slow, simplified backstroke, with her eyes closed and the hot sun beating down on her face. She drifted slowly around, with her purple-covered breasts above the surface of the calm lake, the soft flesh of the big things oozing outward to her sides, speckled with shimmering droplets of water. If the sight of her made me horny, I can only imagine what the men were thinking. I'm surprised they didn't stand in neck deep water and jerk off. Maybe they did.\n\nWe all dried off and had lunch, wonderful club sandwiches Jeana had made. She'd showed me the ingredients when we were at her house the night before \u2014 cold cuts and goat cheese, fresh tomatoes and lettuce from the farmer's market, and homemade pickled hot peppers for anyone who wanted them. Cynthia and I had them and they were plenty spicy. We both drank entirely too much Backyard Tea to wash them down. Jeana was keeping up with us with the drink, too, and Bob filled up our glasses again after we'd eaten the little cheesecake deserts. \n\n\"Tryin' to get us drunk, Honey, so you can have your way with us?\" I said, flirting openly with him, the way a Christian married woman shouldn't.\n\nBob just smiled at me. I should have known it was one of his \"No need to, you're already there\" smiles, but, I was already there, so I didn't notice. I wasn't drunk drunk, but I was close, in that happy place where my inhibitions dissolved. Bob knew it, hence that sexy, mischievous smile of his.\n\nThe boat's cabin, where we were eating at the table, was beginning to feel like an oven. All the windows and doors were open, but there's only so much you can do on a ninety-five degree day with no air conditioning, even when everyone is barely dressed.\n\n\"A little breeze would be nice today,\" I said to no one in particular, fanning myself with my hand. \"I think it's a skinny-dipping kind of day, don't you?\"\n\nI looked at Cynthia to judge her reaction. She was silent, looking at me with an odd little smile on her face. I'm sure she was surprised her church's fifty-one-year-old secretary was suggesting such a thing, but she didn't raise an objection.\n\n\"Are you a skinny-dipper, Cynthia,\" I asked. \"It feels so nice on a day like this.\"\n\n\"No,\" she said. \"Not since...just a few times in college.\"\n\n\"Oh, nice. Tell us about it.\"\n\n\"I went to school in Ithaca. You know all the gorges down there?\"\n\n\"Oh, yeah!\" I said. \"I've always wanted to swim in one of those. So, people get naked? Was there boys?\"\n\n\"Yeah. I've heard they cracked down on it some. People get hurt jumping off the waterfalls.\"\n\n\"So, there was boys?\" I said, pressing her for the good stuff.\n\nCynthia smiled at me. \"Yeah,\" she said, turning shy again. \"There was boys.\"\n\n\"It's the most fun when there's boys watching,\" I said. \"Right, guys?\"\n\nBob and Donald just smiled. I think they knew I was on a roll, so they kept their mouths shut, not wanting to say the wrong thing.\n\n\"Do you all...do it?\" Cynthia said, glancing at everyone. The only time I'd seen her nipples act up was when she was floating on her back in her wet bikini, but they were in bloom again as we sat there at the table, pushing out the purple fabric in a sexy way. \"I never would have thought you guys were skinny-dippers.\"\n\n\"Too old, Honey?\" I said. \"I'll tell you, I think it just gets better as you get older. I've never felt sexier in my life.\"\n\n\"Me too,\" Jeana said. \"It just gets better and better.\"\n\n\"Really?\" Cynthia said. \"I've sorta felt just the opposite. It's been all downhill since college.\"\n\n\"There's no men in your life these days?\" I asked.\n\n\"No.\"\n\n\"Been a while?\"\n\n\"Forever.\"\n\n\"Maybe you just need a jump start,\" I said. \"I needed one, a while back. You just need to sort of rearrange things, to start thinking of yourself as sexy again. Does wearing your bikini out with us feel good? It seems a shame to hide with it in your backyard. You were made for wearing that kind of thing.\"\n\n\"It does...feel good,\" she said, her glancing eyes barely grazing Donald and Bob. She smiled. \"Maybe it's the rum in this tea.\"\n\n\"No, I don't think it's that,\" I said. \"It's just getting the sexy side of your brain in gear. I went through the same thing. It was the first time Bob saw me in my swimsuit. And I remember the first time he saw me out of it. It was life-changing, in a lot of ways. In really good ways.\"\n\n\"Really?\" she said, glancing at Bob. \n\n\"You won't tell anybody about all this, will you?\" I said to her. \"You know how the church is.\"\n\n\"Oh, no! I won't! I'm...just glad you...trust me.\"\n\n\"Oh, sure!\" I said. \"Why wouldn't we? We've all always liked you. I don't know why we haven't become friends before.\"\n\nCynthia smiled and sipped her drink.\n\n\"God it's hot!\" Jeana said. \"I need to jump in the lake.\"\n\nI wanted to give Cynthia a few moments to wrap her head around things, and I wanted to be there if she needed me for support, so I didn't jump up and join Jeana. Bob did, which was probably a good thing. We watched the happy husband and wife walk out onto the back deck, strip off their swim suits and jump off the swim platform into the water. I was glad Bob had the good sense to keep his big cock mostly out of view. \n\nCynthia took another sip of her drink. \"You're a quiet one,\" she said to Donald. \"What are your thoughts on the subject?\"\n\n\"Skinny-dipping, you mean? Oh, well, I'm a guy, so...I'm definitely in favor of naked women,\" he said, smiling in his soft, unthreatening way. \"But...some things can be problematic.\"\n\n\"He's talkin' about boners,\" I said. Fatigue from the night before, too much rum and the oppressive heat had all conspired to get me drunker than usual, faster than usual, and my mouth seemed to have a mind of its own. \"He and Bob are easily excited. But that's what makes us girls feel sexy, right? I love makin' a man hard from him just lookin' at me.\"\n\n\"Margaret!\" Cynthia said, her eyes wide. \n\nI was glad she was smiling. \"Do I surprise you? Jeana's always saying I surprise her.\"\n\n\"You do!\" she said. \"But I like it. You're way more fun than I thought you'd be. I've always thought you were really nice, but...\"\n\nI smiled wide. It felt like it was time to pounce. \"Jeana's right, it's way too hot in here. Wanna swim with me? Don't do anything that makes you uncomfortable, but you could just try topless if you want. It feels soooo good.\"\n\nCynthia smiled and shook her head in a way that didn't mean no. \"You're very persuasive. What the heck; it sounds like more fun than the alternative. Just my top, though.\"\n\n\"Oh, fun!\" I said. \"Wow, those drinks are hittin' me nice. Yeah, let's do it! Donald, you comin'?\"\n\nCynthia giggled at my rum-soaked happiness. Donald nodded. He told me later that he was flabbergasted by the whole thing, the way I'd talked her out of her top, and the sight of her removing it. He said he didn't get up from the table right away because his cock was hard and he felt lightheaded. Cynthia Marley was stunningly cheeky and hugely bare breasted, and he couldn't believe his eyes.\n\n\"Those are some tits, girl!\" I said, staring right at them, watching her dark, bigger-than-a-silver-dollar areolas swell as her nipples grew even more aroused right before my eyes. Her big breasts sagged quite a bit without the support of her bikini top, but it was a sexy kind of sag. They hung on her in a most astonishing way. \"There's no way should be coverin' those babies up!\"\n\nCynthia giggled again. \"Come on!\" she said to me, glancing at Donald. \"I don't want to just stand here!\"\n\nI stripped myself bare from head to toe, took off my glasses, took her hand and led her to the swim platform. Bob wasn't too far away. His head was above water and his eyes locked onto Cynthia's breasts. She jumped in quickly. I jumped in after her.\n\n\"Oh, God that feels good!\" I said. \"It's like the whole lake is making love to me.\"\n\n\"It does feel good,\" Cynthia said. \n\nShe didn't float or swim on her back at first. Getting used to things, I remember thinking. She kept her distance from the rest of us, swimming in the direction of the heron's nest to get a closer look at it. Donald took advantage of her absence, stripping off his new aqua swimsuit and jumping in with a big splash to cool off his half-hard erection. Cynthia floated back toward us doing the slow, quiet, arms-under-water backstroke, with her lovely tits riding above the water. She was still nippley, beautifully so, and her soft wet flesh looked milky white and luminous. She rolled before she got to us, but we'd all had a lovey look and I think she probably knew it.\n\n\"That's a big nest!\" she said.\n\n\"You can tell the kids at the nature center about it,\" I said. \"Have you ever thought about writing a book of your own?\"\n\n\"I have. I've written a few, but they haven't been published. Some children's books and a young adult novel.\"\n\n\"Is that like an adult novel with younger people having sex?\" Bob asked.\n\n\"Nooo!\" Cynthia said, laughing.\n\nHe smiled at her and those gorgeous eyes of his twinkled the way that they do. \"You want a launch, babe?\" he asked Jeana.\n\nJeana flashed him a smirking smile. \"Do you really want to show yourself like that, you big showoff? Yeah, I guess, if you want too.\"\n\nA 'launch' was something Bob loved to do with us girls. There's a swim platform attached to the boat's transom; Bob would stand there and lift one of us up as high as he could, and heave us out over the lake, usually with a loud caveman grunt coming from his big lungs and Jeana or me screaming as we careen through the air and splash into the water. It's lots of fun, in a nakedly playful kind of way, and I was a little surprised he wanted to do it in front of Cynthia. That's Bob, though; nothing he does or says should surprise me.\n\n\"We'd better clear the area,\" I said to Cynthia. She and Donald followed me to water that was just below my shoulders so we could stand up. Cynthia is a little taller, so her lovely wet cleavage was above the water, and her hard nips were visible just below the surface. I was glad that she seemed comfortable that way, with me and Donald on either side of her.\n\nWe were only ten or fifteen feet from the boat, with a clear view of Bob climbing up the ladder that hangs on the swim platform. My heart still skips a beat when I see the guy in his altogether, especially when he's dripping wet, so I can only imagine what was happening in Cynthia's head. The youngest Elder at the church and the handsomest man in the congregation, standing there in the bright sunlight, sweeping water out of his dark hair with his hands, with his swollen cock hanging like a sausage between his muscular thighs.\n\nJeana climbed up and stood next to him, and he picked her up, trying to get a good grip on her slippery body. He bellowed like an Olympic shot-putter and she shrieked and flew through the air and splashed down. I giggled and Donald laughed. I wondered if Cynthia found it amusing; when I looked at her she was staring at Bob.\n\nFor some silly rum-soaked reason I decided right then and there that she needed to see him with an erection. It really was a wrong-headed thing to think, and all I can surmise is that the Devil had found us again. For whatever reason, I swam over and nudged Jeana aside, taking her place at the ladder. I climbed up and whispered to Bob, so the others couldn't hear: \"You like Cynthia's big tits? Her nipples are hard because she's been staring at your big cock. Why don't you make it bigger for her. Pick me up by my pussy, you big stud.\"\n\nAs I flew through the air toward the water I shrieked out a laugh. One of Donald's strong hands had indeed gripped me there, pussy and asshole, almost like a bowling ball. When I smacked the water I was stunned for a moment \u2014 too much rum! \u2014 and I was struck with a flicker of clarity. I needed to tone down the insanity. My reputation at church hung in the balance. Stop pushing! Just enjoy the day like a normal person!\n\nWhen I shook off the stun and wiped the blur out of my eyes I saw Cynthia swimming toward the boat. I didn't say anything when she passed me. Was she doing what I thought she was doing? Maybe I hadn't shaken off the stun at all!\n\n\"Are you all right?\" Donald said, when I swam over and stood next to him. \"You really hit hard!\"\n\n\"Yeah. That was an awkward angle.\"\n\nI watched Jeana fly though the air again and splash like a cannonball. Cynthia was already standing next to Bob, water dripping off her nearly naked body as she waited for Jeana to swim out of the way. I wiped the blur out of my eyes again and yes, Bob's cock was hard, just like I'd willed it to be. It wasn't point-at-the-sky hard, but it was huge and long and hanging at a forty-five degree angle out from his legs. I wondered how he'd get hold of Cynthia without her feeling it against her, and then I realized she probably wanted to feel it against her and he probably wanted it there, too. And then there was the shape of her \u2014 where to grip! \u2014 and the weight of her tallish frame and her big booty and her big tits. She was stunning to look at but she wasn't a lightweight. All that beautiful flesh added up. Jeana was at the ladder, holding on, looking up at them. Bob's big hands gripped wet flesh, Cynthia giggled, and giggled again. Strong muscles lifted her, a hand inside her thigh, a hand under her armpit. The thigh hand slid up toward the little purple bikini bottom \u2014was he touching her there? And then she was in the air and Bob nearly bellowed up a lung. He was suddenly a Soviet-era weightlifter, flexing his muscles, proud of his energy, proud to have his big hard cock out where everyone could see it.\n\nCynthia laughed hysterically when she surfaced. She loved it! She was going back for more! When she got to the ladder, Jeana was up, nearly sitting on Bob's shoulder, his hand under her ass, ready to launch her.\n\n\"If he gets too handsy just kick him in the nuts, okay?\" Jeana said, and then she flew out over the water and landed ass first with her arms in the air.\n\n\"Wanna flip me like a diver?\" I heard Cynthia say.\n\nBob smiled and nodded. \"Show me.\"\n\nCynthia had him hold his hands down right in front of his half-erect cock, with his fingers interlocked. She faced him and he bent down and she stepped onto the little platform his hands made. He lifted her slowly, maybe to be careful or maybe to savor the moment when his face slid between her wet breasts. And then she was up, in position. I doubt if Bob would have let the moment pass without making sure her toes touched his rising erection. His nose was smelling distance from her purple pussy and she steadied herself with her hands on his head. \"Ready,\" she said, and he heaved her into the air as high as he could. She tried to rotate and turn it into a dive but she came down all cockeyed, with a big splash.\n\n\"I can't lift you guys like a caveman,\" Donald said to me, \"but I can try that. Want me to do you?\"\n\n\"You're naked. In front of Cynthia.\"\n\n\"Is that all right?\"\n\n\"Of course it is,\" I said. \"I didn't know if you remembered.\"\n\nDonald smiled and swam for the ladder. I did, too.\n\n\u2014\n\n\"Here's your money,\" Donald said, after we'd gotten home that evening. He handed me a twenty dollar bill, and then he peeled off four more and handed me those, too. \"I never thought she'd do it. Never in a million years.\"",
        "\"A hundred dollars? Our bet was for twenty.\"\n\n\"Cynthia Marley? Wearing nothing but a thong bikini bottom? Good Lord, Margaret, I should give you a thousand.\"\n\n\u2014\n\nCynthia sat with us again for the Sunday service at church. She didn't say a word about our day on the boat until we were in the Fellowship Hall for coffee and donuts. She was careful and quiet about it, telling us it was the most fun she's had in fifteen years. She said it was so nice to play like a kid, without inhibition, and she said she was starting to understand what I'd said about needing a jump start to feel sexy again. She said she never would have believed anything about what happened out there on the boat if she hadn't experienced it, and she said she was glad she took the chances she did. \n\nWe told her we were glad too. There was sparkling life in her eyes that I hadn't seen before. Her hair looked cleaner and shinier than usual and she had another one of her mother's nice old dresses on, one that fit her shape perfectly. It was royal blue, with some nice white trim, and I found myself wondering what she had on underneath it. I could picture her under there, because I'd seen her. Her smooth, round ass, and those soft, extra-cleavagey breasts. I wondered if her bra was lacy, and I wondered what that amazing big ass of hers looked like in normal panties. And of course we asked her to spend next Saturday on the boat with us. She was thrilled.\n\nThe next few were weeks were fascinating. One night each week of fourway debauchery, either at the Smythe's house or at ours, and a playful, sexy Saturday on the boat with Cynthia. It all seemed almost too good to be true; just too much fun, as the saying goes, but none of us were complaining. Donald and I had lucked into something special \u2014 all of us had \u2014 and the blissful, way-too-hot summer rolled on.\n\nThe second Saturday with Cynthia was a lot like the first. A nice rum buzz, even more glutinous food and deserts. We graduated to nudity onboard as well as in the water, but Cynthia kept her bikini bottom on. It mattered not; she'd gone to the mall and bought some new ones, and the second one she wore was just as sexy as the first. It was the most amazing apricot color. Low rise and extra cheeky. I hardly even need to mention the top of it, because she was out of it so quickly. Donald told me seeing her tits the second time was almost better than the first. I think maybe we were all too stunned the first day to fully appreciate what was happening. \n\nThe other fun thing that happened that day was Jeana's makeup. She brought along a bagful and she spent some time fixing up Cynthia's eyes. It was an amazing transformation. You wouldn't think the difference between a topless woman and a topless woman with made-up eyes would give a guy a boner, but I saw it for myself. Bob had to jump in the lake when she showed off her new look. It was too funny. It was also the equivalent of gold when it came to Cynthia's self-confidence. \n\nJeana sent her home with most of the makeup. The next day at church she had some mascara on, and a little eye liner. It wasn't the all out sexy look Jeana had given her, but it looked wonderful on her; she was as radiant as I've ever seen her in public. Another of her mother's dresses even started some of the nosy nellie's tongues wagging. A little too short, and a little too low cut in the front. That was the buzz that I heard. We were proud of her, and we let her know it.\n\nCynthia's third time on the boat was special, but I don't want to neglect telling you about the weeknights that Donald and I were spending with Bob and Jeana. It felt like the height of luxury to get together with them. We'd have a nice dinner and some wine and then it all just seemed to flow, like it was meant to be. We sort of thought it might be fun to start out separate, real couple swapping, so that's how it went. Either Bob would take my hand or Donald would take Jeana's, and we'd split off \u2014 one couple on the couch and one couple upstairs in the bedroom. It was ridiculously hot and sexy; mindbogglingly so. I felt like I'd died and gone to heaven each time. Bob's cock just does things to me, you know? And then we'd all converge on the bed for a blissful finale. The Smythe's is a big king-size, but ours has a bit more togetherness. I thanked God every day for my new life.\n\nSo, Saturday number three with Cynthia. She showed up with dark smokey eye makeup that she did herself, and lipstick on her lips! It was a nice shade of pale red, and looked wonderful. Her bikini knocked us out. Strapless, but somehow supporting her and looking perfect on her big breasts, it was a jungle print called Smitten Kitten. She'd gotten quite a nice suntan over the last few weeks and the spotted print really popped on her, even in the filtered light of the cabin where we all were. It looked ridiculous, and yes, I mean the good kind. And then she took it off. All of it. The top and the bottom.\n\nOur poor boys almost needed CPR. It wasn't just them; I felt all the air go out of me, and it didn't come back for the longest time. I've wondered why, as I was writing this. I like women, sexually. I learned about that side of me with Jeana, and she likes women now, too. But there was something else going on with Cynthia. I've wondered if it was the conquest thing that men feel when they chase a woman. I shouldn't be so sexist, I'm sure women feel it when they chase a man. I guess I did, with Bob, although that was a drawn out, convoluted chase. But back to Cynthia...\n\nLabia Majora. I just looked it up, because I've never paid much attention to the scientific names for the parts of a pussy. Labia Majora is the puffy prominence all around the perimeter. It's what makes a camel toe a CAMEL TOE!, if you know what I mean. Some girls have it, and some don't. Jeana doesn't have it. I have a little of it, and I've got a lot of Labia Minora. That's the flower petal-like parts that stick out. Cynthia has a little bit of that, too, but it's the Labia Majora that makes her special. Majora means big, and yes indeed, she's got a big pussy.\n\nWe'd had plenty of hints at it. The big camel toe at the church work day that I told you about, and two different bikini bottoms that were saturated with lake water. But oh my gosh, seeing her standing there naked was so much more. \n\nPart of it was the naturalness. Not of her pussy, it wasn't hairy, it was shaved bare and looked baby-soft smooth. No, I mean the naturalness of our comfort together. Seeing her strip so casually, when the rest of us were still in our swimsuits and Donald was fully clothed; that's the kind of naturalness I mean. It was nice to see. It was like a gift, telling us she trusted us, that she was comfortable with us. It made me smile.\n\n\"That's how you do it, girl!\" I said, taking off my bikini to join her in nakedness. I looked at Bob while I was stripping. \"You boys better keep yours on until you get used to seeing her like this. Jeezaloo, Bob, you're gonna rip right through that poor little swim suit!\"\n\nCynthia giggled. Of course her tits did that magical giggle jiggle, and Bob got even harder. It actually lifted the tight speedo away from him a little and his hairy balls nearly tumbled out. I wanted to tell Cynthia she shouldn't bend over in his presence, but I tried to remember she was still just a church friend.\n\nJeana took off her top and she poured us all some Backyard Tea. Donald and Bob sat down at the table, sipping their drinks, watching us girls. \n\n\"How long have you guys been doing this?\" Cynthia asked.\n\n\"Friends, you mean, on the boat? Just this summer,\" Jeana said. \"It's funny how it grew out of just a casual church friendship. We used to be such good Christians.\"\n\n\"You still are!\" Cynthia said. \"Better than most. I know you break some big rules, but you're good people. No one else wanted much to do with me. I've been at our church for years. You guys are the only ones who treat me like a real friend, with real trust. That's what being a Christian is, I think.\"\n\n\"Aww, Honey!\" I said. \"That's a sweet thing to say. You're right though, we break some big rules. We love having you with us, but maybe we're not the best influence.\"\n\n\"I'm thirty-eight, Margaret. I'm past the stage where influence matters.\"\n\n\"That's a refreshing attitude,\" Bob said.\n\nA little while later we were all out in the sun, sprawled on lounges and sitting in chairs. The back deck was a full house of naked sun-worshipers.\n\nI was sitting on the edge of Jeana's lounge, massaging some sunscreen into her lower back, flirting with her ass, wondering if I should put my hands on it the way I do when Cynthia's not around. Cynthia was next to us, lying on her stomach, with her head turned, watching me.\n\n\"Sometimes I get the feeling I'm interrupting something,\" she said.\n\n\"What do you mean?\" I asked.\n\n\"You. The four of you.\"\n\n\"There's nothing to interrupt. We're just lazy bums who like to lie around in the hot sun.\"\n\n\"Yeah, but...there's more, isn't there?\" she said, lifting herself up on her elbows. \"I mean, you guys are awfully close. I'm not judging; I'm okay with it. I just...sometimes I feel like a fifth wheel.\"\n\n\"But Cynth...\"\n\n\"No, wait. Hear me out,\" she said. \"I don't know if I'll have the nerve to say this if I don't get it out right now. I...want to be a part of it. If what I'm reading into all this really is what I think it is, I want to be a part of it. You guys are the best people I've ever known. I don't want to be a fifth wheel. I want...all of it.\"\n\nJeana rose up on her elbows, too, and I knew Donald and Bob were attentive. I didn't know what to say, and none of them did, either.\n\n\"Am I crazy, or are you guys, like, one big couple?\" Cynthia asked. \"Do you have open marriages? That's the feeling I get. I've never been around it before so I'm...maybe I shouldn't be saying this, but...I'm okay with it. I want to be a part of it, if that's a...thing that could happen.\"\n\n\"I don't know what to say, Cynthia. I don't want to lie to you...\"\n\n\"Then don't. You don't have to worry, I'm okay with it. Really.\"\n\n\"But the church,\" I said. \"It's...delicate. My job, everything...\"\n\n\"I know,\" she said. \"Do you trust me? For three weeks I've tried to figure out how to get you to trust me. I really, really want this. I need it.\"\n\nThe total silence told me no one wanted to object. \"Are you sure?\" I said to her. \"Like we said earlier, it's breaking a whole lot of rules.\"\n\n\"That's the best part,\" she said. \"I'm tired of rules.\"\n\nThe horniness hovering over the aft end of that big wooden boat was palpable.\n\n\"I had a feeling you knew,\" Jeana said. \"You're a naughty girl, hanging around us like that, teasing us with your beautiful body. Would you like to know what my husband said about you, after that first day that you showed us your tits?\"\n\n\"Yes,\" Cynthia said quietly. \"Tell me.\"\n\n\"He said he wants to fuck you.\"\n\nCynthia blushed, her whole body looking pinker. She looked like she couldn't get a proper breath, like her lung muscles were out of whack. She barely got some words out. \"I want him to,\" she said.\n\n\"Do you want to go inside, on the bed with him?\" Jeana asked. \"Do you want Donald, too?\"\n\n\"Is it all right?\" Cynthia asked me.\n\n\"Enjoy yourself, dear. Let it all out, all those years of frustration. They're wonderful lovers.\"\n\nWe all watched as she took a deep breath and moved cat-like to a position sitting on her feet on the lounge. She looked especially bootylicious that way, with her hips spread and her trim waist looking even trimmer. The boys couldn't see her front, but it didn't matter.\n\n\"My God, Cynthia,\" Bob said. \"Has anyone ever told you you've got the nicest ass in all the world?\"\n\n\"I do not,\" she said, looking shyly over her shoulder at him. \"It's too big.\"\n\n\"I hope you like doggy style,\" Jeana said, saying exactly what I was thinking. \"Our boys are gonna go nuts on you.\"\n\n\"I do like it.\"\n\nHer face showed an adorable combination of shyness and mischief and excitement when Bob stood up to get things moving. His massive cock was fully hard and ready.\n\n\"Wow,\" Jeana said. \"You certainly got his juices flowing.\"\n\nCynthia was still sitting on her feet, watching over her shoulder as he approached. I thought he'd reach for her hand and escort her to the privacy of the cabin, but he moved in close and his eyes told her what he wanted. I saw her inhale deeply, taking in the scent of his sun-warmed cock. It was right there close, and she reached for it and she pulled it to her mouth. She moaned and sighed in a different kind of way, the way a woman does when an interminably long dry spell has just ended. And oh yeah, the fact that it was the nicest cock in the land might have had something to do with it.\n\n\"Come here, babe,\" I said to Donald. \"Lets have a party.\"\n\nCynthia was going to town on Bob, moaning with every breath; deep, affecting moans that reverberated. I could see her tongue swirling on him, and her cheeks bulged with the huge tip of him when she changed angles. Her hands were all over him \u2014 balls, ass, hairy abs, muscly thighs. I could tell she'd been thinking about it for a while, and the real thing was even better that she thought it would be. I knew the feeling well.\n\nBob's head was alternating from thrown back to watching her, thrown back to watching her. I'm sure he was amazed to have his cock in Cynthia Marley's mouth, and I'm sure he would have cum without much more effort, gushing right down her throat, but Cynthia needed to be fucked, and she needed it bad.\n\nShe watched me and Jeana give Donald a double team blowjob, and she made herself fuckable on her knees, shoulders down on the cushion, eyes facing us, with that badonkadonk ass and mouthwatering pussy up where Bob could make use of it all. His face went deep between those sweet butt cheeks and his head shook the way a dog's does when it's wrestling with a piece of meat it doesn't want to give up. It sounded like he cried out in joy, but it was muffled by all the sexy flesh.\n\nCynthia was already into the \"Oh God!\" phase, her hands clutching at the cushion, her eyes wide and her mouth open. It was a beautiful sight. I loved watching her reactions.\n\n\"Fffuucckk!\" Bob said quietly, taking one last long lick of the spectacular pussy. He put one knee on the cushion, next to her leg, and he pressed his rock-hard shaft into her. She rose up just enough so her tits were hanging free, and that big pussy absorbed him, with her eyes even wider and her silent mouth open even more. Bob's hands were on the round cheeks of her ass as his cock went deep, and the look on his face was priceless.\n\n\"Feel good, babe?\" Jeana asked him. \"You look like you're in fuckin' Heaven. Sexy as Hell.\"\n\nI smiled, stroking Donald's cock with my hand. Heaven and Hell, I thought to myself. God and the Devil, together again.\n\n\"Oh, shit, Cynth!\" Bob said, thrusting deep but slow. \"You feel fuckin' amazing!\"\n\nHe held his breath and fucked her slow; he huffed out a lungful, breathed deep and held it again. He looked like a delirious lost boy, drunk on the feeling but trying to hold it together. And then he started fucking for real. Vigorous, endlessly long strokes, deep into Cynthia's gut. She gasped and she started moving, her round hips meeting his thrusts, her big tits beginning to swing under her. She and Bob were both sweating, shiny and starting to drip from the relentlessly hot sun.\n\n\"Holy shhittt!\" she said, whispery but forceful. She was feeling it, fully involved. Bob's big hands moved to her shoulders for some purchase and he was thudding into her, making the flesh of her ass quake like nothing I'd ever seen. His potent thuds forced begging, crying, nearly screamed words out of her. \"Fuck!...Me!...Fuck!...Me!\" Her ass and her tits were alive, revved up, nearly out of control, but she wasn't. She held on, gripping tight, white knuckled, and Bob fucked her begging body with everything he had. Slapping together fast and hard. Dripping. Quaking. Pink flushed skin and a rash of goosebumps and hard nipples wildly grazing the cushion. He pulled her hair and she screamed for him to fuck her even harder. I could almost see the orgasm on the outside of her, but it was inside where she was melting down, eyes rolled back, open mouth gurgling with devilish noise. Bob was crying out and his eyes rolled, too. Everything he had was enough. Cynthia's dam had been broken. She was ours now.\n\nDazed and stunned but still hungry, she'd turned and was sitting, leaning back on her hands, her legs spread wide, feet on the deck on either side of the lounge. Her labia majora was bright pink, tenderized by Bob's hammering. The minora inside looked raw, like a gash that'd been ripped open. Not bloody, just raw, like woman's meat. Bob's seed leaked out, dripping down onto the cushion.\n\nShe'd glanced hopefully at Donald when she was repositioning, so I gave him a push that held my permission. A moment later he was there, on his knees, his arms encircling her thighs, his mouth kissing the warm smoothness of the inside of them. Her eyes were wild, crazed; her mouth still taking in huge lungfuls of hot summer air. \"I wanna be your slut,\" she said. I wondered if she'd read that line in a book, and I wondered how long she'd been waiting for the perfect time to say it.\n\nMy Donald's mouth attached itself to her tender, raw, pussy flesh, and a gravely, guttural groan emanated from her mouth. The Devil was in her, making himself known. Bob presented her with what was left of his cock. It was red from use, drooping some, and dripping some. Cynthia licked the white drips off the tip, and she stuffed as much of him as she could into her mouth. Her hand was on the rest of the long shaft, her fingers sliding on the white grease left behind from the depths of her pussy. She mouthed the big cock differently, with reverence, like it was even more special than she'd dreamed.\n\nDonald made her cum with his mouth, bless his heart, and then the machismo hit him and he pulled her by her womanly thighs to position her for his entry. His cock thrusted its way in with little effort, and I wondered what it felt like \u2014 a piston forced into a cylinder already filled with hot oil. I'm guessing it felt amazing, for Donald and for Cynthia, too. I know I love it when the boys do that to me.\n\nShe was flat on her back, and Bob was tending to her while Donald held her legs up and fucked her. First Bob kissed her, which surprised me by how surprising it seemed. Bob Smythe kissing Cynthia Marley! With tongues and moaning passion! A month before that day, I never would have guessed I'd see something like that.\n\nBob's hands were on her tits when he kissed her. Her breasts had been sexualized in all our minds, I'm sure, but seeing them like that, with a man's big hand fondling and squeezing, it showed how soft and delicious and sexually powerful they really were.  \n\nDonald's eyes were there, watching the tit play, watching her big dark nipples flick between Bob's fingers, watching the soft, round flesh that spread right off the sides of her.\n\nShe was coming alive again from Donald's insistent fucking, breathing hard through her gritted teeth, her wild eyes staring into his, egging him on. His rhythm was precise as he slowly sped up, reaching a sort of perfection when his body started slapping against her big thighs and the hot flesh of her quaking ass. \n\n\"Yeah, fuck me!...Fuck me!\" Her voice was desperate and wild and sounded ravenous. Impatient. Pleading for what she so desperately needed. \"Oh, God!\"\n\nBob's mouth was on her. He was ravenous, too, devouring her big, soft tits. The sight affected me deeply, my skin going full-body tingle, my pussy nearly dripping. I moaned and Jeana took my hand. It was as close as I've ever been to having an orgasm from just watching.\n\nCynthia's back arched up and she clutched Bob's head, holding his mouth tightly to her tits. She was cumming.",
        "\"Oh...yeah!...Oh...yeah!...Oh...yeah!...Oh...yeah!\"\n\nHer exclamations devolved into sexy giggling moans, followed by deeper, soul satisfying moans as her out-of-control body was lost in the stars and then reclaimed reality. Donald pulled out after one last hard thud against her, and his cum flew from the tip of the slippery cock in his hand, spurting farther than I've seen it go before. Bob was splattered with it, the back of his head and his ear, but he was a trooper and his happy mouth never left the tits he was devouring. Cynthia was glad, I'm sure; I know how amazing it feels to have a man's mouth on me like that when an orgasm peaks and wanes.\n\nCynthia's eyes were closed. She breathed deeply. Her back was still up in a nice arch, Bob was still nibbling, and her hand played in his hair. Her eyes opened, looking surprised.\n\n\"Did he...cum on you?\" she asked, feeling the warm stickiness on her fingers.\n\n\"Yup,\" I said. \"You're so sexy, you got our boys all riled up.\"\n\nCynthia giggled at me, looking as cute as I've ever seen her. She looked proud of herself, in an embarrassed kind of way.\n\n\"Do you guys always...watch each other?\" she asked.\n\n\"Sometimes,\" Jeana said. \"Did you like it? Having us here?\"\n\nCynthia nodded, looking even more embarrassed. Her face and body were so flushed and pink from two wild orgasms, I couldn't tell if she was blushing. I'm pretty sure she was.\n\n\"I...wouldn't have wanted it...away from you,\" she said. \"It would have...felt wrong. I've never cheated with a married man.\"\n\n\"Oh, we know, Honey,\" I said. \"No, you're not like that. This is different. It's all okay. That's what makes it so wonderful.\"\n\nCynthia smiled. Just a small, soft, happy looking smile. Her hand was still playing in the cum in Bob's hair. He was kissing her body. Her eyes closed again, and that beautiful smile stayed with her."
    ],
    "authorname": "riverboy",
    "tags": [
        "swinging",
        "swingers",
        "big ass",
        "booty",
        "skinny dipping",
        "church",
        "boat",
        "lake",
        "open marriage"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-devil-comes-out-at-night-pt-05"
}