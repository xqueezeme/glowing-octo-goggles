{
    "title": "All That Glitters Ch. 43",
    "pages": [
        "Life goes on, even in the Alliance.\n\nPreparations are made for new contacts. A surprise from the Asocans. The new Alliance finally makes it's presence felt.\n\n\u00a9 bigtddybr February 2022. This story 'All That Glitters - Ch 43' or the series 'All That Glitters' cannot be transferred to any other site besides Literotica.com in whole or in part without the prior authorizations in writing from the author and bigtddybr must be credited for this work.\n\nDue to the number of abbreviations, ship listings, and list of characters, in this story, I include a glossary that is now in a stand-alone chapter called 'All That Glitters: Notes'. Any and all information that you want or need to know about the series is included in Notes. It will be updated frequently simply by re-issuing the chapter to Literotica.\n\nThere is little attempt to explain the back story, so it is necessary to read previous chapters to fully understand where we are.\n\nAs before, I claim sole responsibility for the story line. This story is a fantasy, with no basis in reality. Any similarity that you may perceive to current events, people, or situations real or imaginary is completely unintended. Look no further than the story line for its intent and purpose.\n\nA big shout out to SaddleRider and my other editors, who wish to remain anonymous, for all their help.. With their guidance, I'm making fewer and fewer errors. If you find any errors still left in this chapter, they are mine, as I have ignored sage advice to make a silly point.\n\nPlease rate and comment. But keep your comments respectful. If you rant and rave or are disrespectful in your commentary, it will be deleted.\n\n'Nuff said...enjoy.\n\nConference Room One, Delta Deck, Liramor-23 Mining Platform, 109 Piscium System, 106 Light Years from Terra\n\nThe morning brief had just finished but Fiona asked those in attendance to remain as Dr. Sylvia Hitron had requested a briefing from the Piscium Scientific Investigation Team. Sylvia had only called for such briefs on a handful of occasions and had never disappointed the staff when she did so.\n\nSylvia filed in with a few of her people, along with Mind-Ur and Caye-Ur. She quickly set herself up and was ready to brief.\n\n\"Good morning all. I would like to announce that we now have a functional translator for the Maha-Rrin language, which means we can now formally contact the Piscium-B Society,\" Sylvia laid it open for all.\n\n\"I would like to personally thank the efforts that Mind-Ur and Caye-Ur provided to our team in assisting the translation. While the language was significantly different from Pod-Drran, without their assistance, we would likely still be working things out.\" Sylvia smiled and nodded to Mind and Caye, who nodded back in turn. They were pleased with the recognition.\n\n\"I hope that thanks was not the only compensation provided them?\" Fiona asked.\n\n\"No, ma'am, they were paid for their efforts. I just thought their contributions should be acknowledged.\" Sylvia replied.\n\n\"Very well. What is happening with the Djina\u00ebte Station, Dr. Hitron?\" Fiona asked.\n\n\"The Djina\u00ebte are starting to take it apart, ma'am, which means that in less than three months, my team will be redundant. The Djina\u00ebte have agreed to allow us to retain a number of the bodies from the station for scientific investigation,\" Sylvia stated.\n\n\"That is rather callous isn't it?\" Dianne Ancien asked.\n\n\"The Djina\u00ebte do not revere their dead, Dianne,\" Fiona explained. \"To them, the bodies are a resource. This attitude is what brought them into contention with the Pod-Drran when they raided one of the Pod-Drran cemeteries, which resulted in the destruction of their mining station and the death of so many of their people when the Pod-Drran returned to this system the previous time.\n\n\"Are there any plans to retain any members of the team in system, Sylvia?\" Fiona asked.\n\n\"That is still being determined. It is certain that we will lose the NS Wimple as a dedicated support vessel. It will become part of the Piscium Defence Force under your command. That means that any of us who are retained here will have to request transport when we are needed. We should know more at the end of this month, when Sector Forty-Two HQ sends out our new orders,\" Sylvia told them.\n\n\"I hope they retain a few of you,\" Fiona stated. \"However, you are a Navy resource and are subject to the needs of the Navy.\n\n\"Very well, I have a meeting with the Liramor Embassy Association immediately after I finish here,\" Fiona stated.\n\nShe turned to Mind-Ur. \"Is Nar-Tre Sai-Rai aware that the translation is completed?\"\n\n\"She is aware that we were close, however, Dr. Hitron only declared herself satisfied this morning,\" Mind replied.\n\n\"We shall go first to the Pod-Drran Embassy and speak to Nar-Tre, then I shall attend the bi-weekly Liramor Embassy Association meeting,\" Fiona said, dismissing her own group.\n\nPod-Drran Embassy, Interspecies Embassy, Liramor-23, The Piscium System\n\nFiona entered the Pod-Drran Embassy with Dr. Hitron, a few of her Linguists, Mind-Ur, and Caye-Ur in tow.\n\n\"We would like to speak to the Ambassador, please,\" Fiona stated to the Pod-Drran secretary.\n\n\"Yes, Director.\" The receptionist used the silencing mode of her comp to hide her conversation with the Ambassador. She loved the wrist comp that she had purchased and was still making herself familiar with all of its capabilities.\n\nA few moments later, she smiled at Fiona and pointed toward the Embassy's conference room, which Fiona and company immediately entered. Nar-Tre was not long behind them.\n\n\"Director Marsh, to what do we owe the pleasure of your company, especially with such a distinguished group of people?\" Nar-Tre asked on entering.\n\n\"Dr. Hitron told us in the morning brief that the Maha-Rrin language codex is ready,\" Fiona explained.\n\n\"Yes, I knew they were close but I did not know that they had completed it yet,\" Nar-Tre nodded.\n\n\"I declared it ready this morning, Nar-Tre. Mind and Caye from House Ur were instrumental in assisting us with the translation. We are certain that it is nearing 95% accuracy without a native speaker to assist us,\" Sylvia told them.\n\n\"Very well. I assume that you want us to be part of the initial contact process with the Maha-Rrin?\" Nar-Tre asked.\n\n\"Yes, I thought it might be better that something familiar be part of the introduction. I can use Mind-Ur and Caye-Ur for the introduction. However, since your two peoples will need to come together, according to prophecy, I think an official of your government should be in on the initial meetings,\" Fiona gave her thought processes to Nar-Tre.\n\n\"I shall send a missive to The Kumar-Pair on Pod-Saar and inform them of the situation. They will look forward to the meeting with our cousins,\" Nar-Tre gave a formal bow that Fiona returned.\n\nFiona thanked and dismissed Dr. Hitron's group and then she and Nar-Tre headed for the main embassy conference room for the bi-weekly Embassy Association meeting.\n\n************\n\nFiona entered the main embassy conference room for the bi-weekly meeting with Nar-Tre by her side. All of the Ambassadors stood and bowed to her. It was the first time that they had done this and it surprised Fiona.\n\n\"Ambassadors,\" she greeted them with a bow of her own before she took her place at the table. \"I have a few pieces of news you should be aware of:\n\n\"First, the codex for the Maha-Rrin language, the cousins of the Pod-Drran, is now complete, or as complete as we can make it without a native speaker assisting us. That means we shall soon begin to contact the other half of the former Piscium people, who refer to themselves as 'The Wise Ones'.\n\n\"We will have to coordinate this contact with the Pod-Drran as there are consequences of prophecy at issue, which some of you are aware of. As this is considered an internal matter for the Pod-Drran and the Maha-Rrin, we can give all the support they request but must leave it more-or-less to them to work things out between them.\n\n\"Second, some of you may be aware of this, but for those who are not, Pallanders Shipyard is constructing a new somewhat larger shipyard in orbit around Liramor Prime. They have named this vessel Pallanders Six. The vessel is being constructed with Jump-grid technology, which means it will be moved to its new location after its construction. That new location will be here in the Piscium System.\n\n\"Pallanders has offered to allow technicians from all of the Interspecies Community to work on the construction of Pallanders Six as the techniques are the same for many of the large ships we will be building. This will give your techs the knowledge of working on the outer shell of our large ship designs.\n\n\"And finally, we may have a breakthrough with our grievances with the Alliance, the other human faction. The Harradi have sent a Harla to verify the situation. Ambassador Clend will also be going to the Alliance to work out a deal between the Alliance and the Harradi.\n\n\"Now that the Greater Community gets involved with providing support to the Alliance, the Alliance will be requested to end their dependence on slavery and their support of piracy.\n\n\"The Union Navy recently captured a pirate fleet of thirty vessels nearly intact. That is a major blow to the Sagittarius Pirate Syndicate. As far as we are aware, there are three fleets in that syndicate. We have taken one of them, the largest of their fleets, out completely.\n\n\"That is three pirate fleets that have been destroyed in the space of one of our years. One was destroyed here in the Piscium system when they attacked this platform. One was destroyed during the recent Union raid on the Alliance, in which we successfully freed many of our citizens. The third has just been taken almost intact.\n\n\"All three fleets were from different pirate syndicates, meaning that we have punched a hole in the pirate formations that they will now be very hard pressed to fill, considering that the Alliance is being pressured from all sides to end their support of piracy.\n\n\"The Alliance has requested a prisoner exchange with our people and the pirates we recently captured. The TGA is seriously considering this option.\n\n\"It is not an end to the situation with the Alliance; however, it is a very good start. Any questions?\" Fiona asked. There were none on these issues.\n\nThe ambassadors made several formal requests of Fiona and Liramor Holdings, which owned the platform. They included additional space for specific functions for the needs of each of their people.\n\nFiona assured them that extra space would be available soon as Liramor Holdings was in the process of building Liramor-31, which would be brought to this system to take over the mining functions of Liramor-23, thus allowing Liramor Holdings to dedicate Liramor-23 to the functions of the Greater Community Embassy.\n\nThe ambassadors were pleased. Waiting was a game they knew well. In their terms, waiting meant decades. In human terms, waiting meant one or two years. The ambassadors could wait such short times.\n\nThat was when Dragon Ambassador Alvoie rose. \"I would like to inform the members of the Interspecies Embassy, that Asoc &gt;Catal Mutt Herrtt, the Supreme Ruler of the Asocan People, would like to see her new embassy on Liramor-23. She wishes to attend in ten days.\"\n\nThe Ambassador let them know that Asoc &gt;Catal would bring most of her senior ministers, all of them War Dragons, with her including the Minister for Interspecies Affairs. This would be a prime opportunity to conduct business at an Interspecies level.\n\nThe other embassies took note, as did Fiona and Ambs. Michelle Halten.\n\nAsocan Embassy, Interspecies Embassy, Liramor-23, The Piscium System\n\nDragon Ambassador Alvoie came back into his office after the Embassy Association meeting to see a shiny violet box on his desk.\n\n\"Utan&gt;, what is this?\" Alvoie demanded loudly of his secretary.\n\n\"Settle down, Alvoie, those who hear you will think you are a small male,\" Utan&gt; barked (a degenerate term for Asocan's. It has the same implication as an effeminate male would in human terms).\n\n\"Save me your platitudes,\" Alvoie snarled. \"Why is this box on my desk?\"\n\n\"It came from Terra on the latest supply ship and is addressed to War Dragon Klo\u00e4&gt;, Minister of Interspecies Affairs. The tag says it is a gift from his son, Guro&lt;, and was sent to us to see that it is forwarded to the Minister.\n\nThe tag was written in Asocan; however, it was poorly written, likely from a translation program. There was an oddly designed sigil on the right side of the box's top, where it was only visible if one looked for it.\n\n\"The box has been through detection, there are no poisons, nor explosive materials. It does have a weapon in it,\" Utan&gt; said.\n\nAlvoie snarled. Fortunately, he had Guro&lt;'s comm number from his visit to Denders Resort. He opened up a link to the home planet (the perks of being an Ambassador) and put in a call for a vid conference with Guro&lt;. An hour later Guro&lt; responded.\n\n\"Good day Dragon Ambassador Alvoie, why do you drag me from my studies?\" Guro&lt; demanded.\n\n\"I have received a box with a potential weapon in it,\" Alvoie responded, pointing to the offending object on his desk.\n\nGuro&lt; immediately perked up. \"It has arrived!!\" he exclaimed, surprising Alvoie and his secretary, whom he had asked to be in his office during the call (it was always safer to have a witness when dealing with the family members of senior ministers).\n\n\"Break the seals, let us take a look at it!\" Guro&lt; demanded excitedly.\n\nAlvoie looked at Utan&gt;, who just shrugged her shoulders.\n\nAlvoie broke the seals and opened the beautiful box. Inside was a beautifully constructed &gt;Curlat, a traditional Asocan battle weapon, now mostly used as presentation blades. It had the same sigil on it near the hilt that was one the box.\n\n\"Please, pick it up by your thumbs, and flick the blade with your talon,\" Guro&lt; husked.\n\nThe Asocan had two fingers and two thumbs on each hand, 'picking things up with your thumbs' was an admonition to pick something up delicately.\n\nAlvoie picked up the weapon. It was beautifully balanced and had enough weight to act as a weapon without having the traditional heft of a &gt;Curlat made on Asocan. He flicked the blade and the metal sang. The sound was magnificent.\n\nAlvoie and Utan&gt; looked at each other with awe on their faces. Alvoie flicked the blade again, this time in a different location. The sound was just as beautifully.\n\nThe Ambassador hefted the blade. Its balance was exquisite. He made a swipe of the blade from left to right across his body. The whisper it made as it moved told Alvoie that the blade was literally cutting through the air.\n\nAlvoie placed the blade back in its box and opened the box holding his blade of office. He flicked it at different places along the blade, bringing a different sound each time. The sound was dull in comparison to the new weapon.\n\nHe swung his weapon through the air in the first offensive pattern. Placing his own blade down, he picked up the new blade and made the same pattern. The difference was remarkable.\n\nThe new blade fit his hand like it was made for it. It seemed to want to be used as a weapon, asking to be moved through the pattern with all the speed and strength that Alvoie possessed.\n\nHe put the weapon down and motioned to Utan&gt; to pick up his own blade. Utan swung the blade through several offensive patterns. Then picked up the new blade and repeated them. The look on her face when she put the new weapon down was one of pure awe.\n\n\"Your assessment?\" Alvoie asked. Utan&gt; was a seasoned warrior who had used many different weapons throughout her life.\n\n\"Your personal weapon is one of the best made on the Home World,\" Utan&gt; began. \"However, comparing it to this new weapon, it appears almost crude. The new weapon literally slices through the air. It is just the right weight, just the right length, just the right width. It is as if the Holt Mottan made this weapon herself.\" (Holt Mottan is the Asocan equivalent of the Greek God Hephaestus but, where human males are the stronger of our species, Asocan females are the stronger of theirs, so the God of the forge and weapons of the Asocan is a Goddess, see the notes chapter v 11.)\n\nAlvoie nodded once to her, agreeing completely with her assessment.\n\n\"This human, Ha jim eh?\" Alvoie attempted the name. \"He can make more of these?\"\n\n\"I would have to ask him; however, his creations are worth a small fortune,\" Guro&lt; explained.\n\n\"How then did you afford one of his creations?\" Utan&gt; demanded.\n\n\"I asked nicely,\" Guro&lt; said with an Asocan smile. (Like the Pod-Drran, an open mouthed smile is seen as an aggressive action for Asocans). \"The master smith wanted to try his hand at making one of our weapons. I sent him a crude &gt;Curlat I picked up in the market. I think Hajime may have made himself a legend.\"\n\n\"How do I ask him nicely?\" Utan&gt; asked Guro&lt;, who laughed. \"You may ask Kim the next time she is on Liramor-23. She is familiar with the human. Her swords are his creation. There should be a sheath for the weapon.\"\n\nAlvoie closed the upper lid of the box and turned it over. There was another lid there. He opened it to find a beautifully, violet coloured sheath made of material he had never seen before. It too had the sigil he had seen on the box and on the &gt;Curlat.\n\nAlvoie opened his comp and asked the computer if Kim was on the station...\n\nLandstradt HQ, Adenomere City, Planet Adenomere, The Adenomere System, 182 Light Years from Terra\n\nAs soon as the Chair had called the Landstradt to order, Richard Bailay stood.\n\n\"The Chair recognizes Master Bailay of Planet Vuelta.\"\n\n\"Thank-you, Chair. Yesterday, as the Landstradt was finishing its afternoon session, we were presented with some rather unfortunate news, that one of the Sagittarius Pirate Fleets was captured nearly intact.\n\n\"This morning, I received a list of people who were in that fleet, including my eldest son, who is a captain on one of the warships, and three of my nephews, all officers in the fleet, one of which is also a captain of a ship.\n\n\"I would like to ask the Landstradt's indulgence and ask that we arrange a prisoner exchange with those who we currently hold and the bodies of the Union crew that we currently hold...\"\n\n\"NOOO!!! I want revenge!!\" Kevin Lindelle, patriarch of House Lindelle shouted.\n\nThe Chair gavelled him down. \"Master Lindelle, you do not have the floor!\" the Chair shouted. \"You will be given a chance to respond, WHEN, Master Bailay has finished speaking. Now sit down and remain in your seat until you are called upon!\"\n\n\"Master Bailay, please continue,\" the Chair indicated.\n\n\"Thank-you, Chair. The Union captured twelve warships, which, on average, hold 200 crew and eighteen supply ships, which, on average, hold 150 crew. That is a total of approximately 5,100 crew in that fleet.\n\n\"We have the bodies of 385 of the Union Navy crew, plus the six prisoners. I would ask that the Landstradt consider a prisoner exchange to see if we can get some of the members of Fleet Sagittarius back. Many of the elder Houses of the Landstradt have family as crew in that fleet, including House Lindelle.\" Richard Bailay then sat down, his head bowed.\n\nLindelle was up without being acknowledged. \"The crews of our fleet are aware of the risks they take when they ship out! That includes the possibility of capture, injury, and even death.\n\n\"The Union Navy attacked the Alliance and severely damaged our economy through its actions! We should not allow a prisoner exchange!\" Lindelle shouted.",
        "\"Yes, Master Lindelle. Those who do go to the fleets are indeed aware of the risks. However, it is rare that we lose an entire fleet, and when we do, there is usually a significant loss of life and material. It is also rare that we have the ability to make an exchange.\n\n\"In this situation, there has been a minimal loss of life. Only 62 of the crew were killed and a further 133 injured. The remainder were captured alive, along with their vessels.\n\n\"This is an unprecedented situation. The Landstradt is in that unique position of being able to offer a one-time deal to get back some of those who have been captured.\n\n\"We should consider this option. There has already been a significant loss of life for Alliance forces during the Great Raid. In addition, our economy has suffered. The Union, THE UNION! is providing us with a potential means to reverse our recent misfortune and get our economy moving again, if only in a limited means.\n\n\"That being said, we should realistically consider the prisoner exchange. That is my opinion as a member of the Landstradt. As the Chair, I now open the floor to debate on this issue,\" the Chair said and sat down.\n\nThe debate was lively and fierce. The debate did not center around whether or not to conduct the exchange but rather as to what level the exchange should be.\n\nAll noted that, while the crew knew the risks, no one expected that a fleet would be captured nearly intact. In the end, there was no decision. It was decided that if the exchange could be made, it should be.\n\nThe Chair called in the Union representatives.\n\n\"I would like to note that you have been exemplary prisoners, attending the sessions, and waiting patiently on us. The Landstradt thanks you for your attitude.\n\n\"However, the Landstradt finds itself in a situation where we must ask the Union if they would consider a prisoner exchange for our recently captured fleet with the bodies of the Union crew that died in orbit and are now in our possession and the six members of the Union fleet that were captured here on Adenomere.\n\n\"Would the Union consider such an exchange?\" the Chair asked formally of Ambassador Flynet.\n\n\"Chair, the Union will consider this exchange. We shall return all the crew that were captured, including the dead for burial, unless you specifically ask that we confer burial rites in space for those who have died.\n\n\"In exchange, we ask that all charges be dropped against Captain Raymond Clark, Sgt. Jacintha Aurans, Sgt. William Brogues, Tech. Sgt. Brian Donnes, Sgt. Melinda Tanten, Sgt. Brianna Wilder, and that all of our dead that are in your possession, be returned to us,\" Flynet stated.\n\n\"Why so generous, Ambassador?\" the Chair asked the question that all wanted to know.\n\n\"Chair, despite the acrimony in the recent sessions of the Landstradt, the Union and the Alliance have made great strides in recent days. We will consider this exchange as an act of good faith, in the hope that the Alliance will reciprocate and negotiate the return of our missing citizens.\n\n\"This would be a win-win for both the Alliance and the Union. The Alliance will have to cut its reliance on slave labour by returning our citizens. In doing so, the Alliance will find itself allowed to take part in the great leap forward that most humans are now enjoying,\" Flynet stated. \"We cannot force this on the Alliance, you must come to this decision on your own.\n\n\"However, we have noted that there is an intent on the marked improvement of slave conditions in the Landstradt, which means Union citizens will benefit from these changes,\" Flynet finished.\n\n\"Thank-you, Ambassador. There is also the question of the material. The captured ships are a significant investment for the Alliance,\" the Chair said.\n\n\"The TGA will consider returning the civilian cargo ships, the Navy Supply Ships, four Cormorant Class ships that were stolen from the Navy mothball yard, will be recommissioned as Union Navy Vessels. The two CP Naval Supply Ships, are unfit for continued use in space. They will be decommissioned and scrapped. That means we shall be returning twelve cargo ships of various configurations to you.\n\n\"All of the military vessels will be confiscated by the Union. Those that are still viable, will be recommissioned into the Union Navy. Those that are not will be scrapped. No military vessels will be returned to you as we do not want them to become pirate vessels again.\n\n\"Understand, that, as these vessels are considered criminal spoils, none of them should be returned to you, but the cargo vessels can be used for legitimate civilian purposes.\n\n\"However, should these vessels be found in another pirate fleet, the Union will consider that the Alliance is in breach of any contract that it will complete with the Union or the Greater Community. If that should occur, the Alliance will be banned from any future contact with the Greater Community and any benefits that could be derived from such contact.\n\n\"Do we have an understanding, Chair?\" Flynet demanded.\n\n\"The Landstradt understands what is being asked of it, Ambassador. There are some here that would spit in your face, however, doing so would not help the cause of the Alliance.\n\n\"We, the Landstradt, still have to determine if we shall accept the principal of ending piracy and slavery. If we should do so, we will accept the specified points of your prisoner exchange. Until then, let us consider a reciprocal act of good faith.\n\n\"The Landstradt will drop all charges against the prisoners and allow them to leave Alliance space. Will that suffice for now, sir?\" the Chair asked.\n\n\"Yes, Chair, that will be a suitable act of good faith. Thank-you, Chair.\" Flynet gave a low bow to the Chair, turned and bowed to the floor.\n\nThe Senate, Capital City, Terra\n\nThe Senators were watching the events in the Landstradt via ICS. When the news came out that the Union was going to release all of the recently captured pirates, the Senate exploded.\n\n\"YOU DID WHAT!?\" one of the senior Senators called out. \"How could you give away so many of the pirates when we could have used them to get some of our citizens out?\"\n\n\"Settle down, Senators,\" Senator Winslow of the Military Oversight Committee demanded.\n\n\"It has been decided to give them this concession as forcing them to give up our citizens for their captured would only foster resentment in the Alliance and would take months to negotiate. By being magnanimous, we set ourselves above the Alliance. That will work for us in the future, vice nit-picking on demanding a Union citizen for one of theirs,\" Winslow said.\n\n\"But that means our citizens will continue to live in the conditions that they have for some time to come!\" a Senator shouted from the floor.\n\n\"Yes, it does,\" Winslow agreed. \"However, the actions of many of the Landstradt to bolster the conditions of their slaves is a positive step forward. We do not want to throw the proverbial monkey wrench into gears of these changes. This gives us the advantage of the moral high ground under conditions that would otherwise have forced a major revolt against the Union by the Landstradt. The Landstradt mindset is changing. We must allow those changes to move forward...\"\n\nLandstradt HQ, Adenomere City, Planet Adenomere, The Adenomere System\n\n\"Ambassador, Lady Junelliya stated that the Harradi representative would be here today?\" the Chair asked.\n\n\"The Trine left for Liramor-23 this morning, sir. It should be back before the end of this afternoon's session,\" Flynet told him.\n\n\"Wait! It is 182 light years from here to Terra, and 106 light years from Terra to the Piscium System, that means a minimal flight of 286 light years to Liramor-23 if we don't go the long way along the tangent, which would end up being almost 289 light years. Yet that ship will be back by this afternoon?\" someone on the floor stated.\n\n\"As I have said, the Union has enjoyed a number of advancements since it has contacted the Greater Community. The modifications on that ship, Jump-grid technology, advanced Marilon/Aruna generators, and the ICS system, are but a few of them. That technology can add to the advancement of the Alliance or bring about its destruction. The choice is yours,\" Flynet gave another short bow and turned to leave. This time, no one stopped him.\n\nThe Harradi Embassy, Liramor-23, The Piscium System\n\nAmbassador Clend, it is good to see you again,\" Junelliya greeted the Harradi dignitary,\n\n\"And I you, Junelliya, especially when you bring us such an opportunity,\" Clend returned. \"I would like to introduce to you our Harla, Salum Fannett, who will be our representative to the Alliance.\"\n\n\"Well met, Harla Salum Fannett,\" Junelliya replied in the typical greeting of the Harradi. The Harradi were surprised that she wasn't using the translator codex but was actually speaking the words in Harradi, with near perfect inflection.\n\n\"Lady Junelliya, you need not be so formal, I would prefer that you call me Salum and that I have the opportunity to call you Junelliya,\" Salum replied, smiling.\n\nJunelliya returned the smile. \"That would be acceptable Salum. It will be good to work with you, though I suggest more formal titles when working with the Alliance people. They will be resistant to your proposals, keeping things formal will provide a start point for all negotiations.\"\n\n\"Thank-you for the advice,\" Salum bowed.\n\n\"Shall we move to my ship?\" Junelliya asked, turning to lead the way.\n\nThey were interrupted by a call from the Asocan embassy, asking for Kim...\n\nThe Asocan Embassy, Liramor-23, The Piscium System\n\n\"Kim, it is good to see you again. Thank-you for coming on such short notice,\" Ambs. Alvoie stated as Kim, Junelliya, Ambs. Clend, and a Harradi that Alvoie did not recognize came into his conference room. Kim noted the presence of another Asocan on the monitor.\n\n\"Good day Sensei,\" the Asocan, who Kim now knew was Guro&lt;, bowed to her.\n\n\"And you Gakusei (student),\" Kim returned. She saw a violet coloured lacquered box on the conference table and instantly recognized it as a human product. She saw the sigil of Tatsuya Hajime on the box and nodded.\n\n\"We have just received this box from one of your more prestigious Weapons Masters,\" Alvoie advised the group. \"It is a gift for Guro&lt;'s father, War Dragon Minister Klo\u00e4&gt;. However, after picking up and handling this weapon, I am curious as to how to ask for your Weapons Master to make more of the same?\"\n\nAlvoie opened the box and Kim saw, for the first time, the weapon in question. It was a double-edged weapon that was wider than her Katana, though not quite as long, with the far end from the hilt being fatter than most of the length. She noticed immediately the same sheen of metal that her own swords had.\n\nKim pulled her Katanya in the approved fashion and flicked her nail against the blade. It sang its song clearly for all to hear.\n\nAlvoie picked up the &gt;Curlat and flicked it as he had been shown. The sound it made was similar to but not exactly the same as the sound the Katana had made, understandable considering the difference in construction. Kim nodded and returned her Katana to her Saya, her eyes never leaving the two Asocan.\n\nAlvoie and Utan&gt; both noted the manner in which she replaced her weapon, shocked at how easily she did it. Utan&gt; recognized a practiced professional. Her opinion of Kim, already high from having witnessed her unarmed martial arts abilities, elevated another notch.\n\nAlvoie placed the &gt;Curlat back in its box.\n\nKim pulled a silk hair ribbon from her hair. She gave it to Alvoie and told him to weigh it. The ambassador noted that it did not weight much at all.\n\nKim then asked him to unfold it and let it float down to the table. The Ambassador did as directed, all present watching as the ribbon slowly floated down until it nearly touched the table where Kim snatched it from the air. She had Alvoie pick up the &gt;Curlat and hold it with a blade side up.\n\nKim floated the ribbon over the blade. Everyone watched as it sank down until it touched the blade. The ribbon folded itself over the blade, then, shockingly, parted in two.\n\nWith the exception of Kim and Junelliya, every mouth in the room was open in surprise.\n\n\"Such a blade could not keep its edge!\" &gt;Utan voiced her thoughts.\n\nKim drew her Katana again, showing the blade. \"I have now been in thirty-nine combats with this blade,\" Kim advised. \"There are no nicks nor is it any less sharp than when I received it.\n\n\"The blade is made with traditional steel; however, it is blended with new metallurgy that gives it special properties: it will not rust, it is highly resistant to damage, and it will keep its edge.\n\n\"These materials are not supposed to be able to bind to steel, Hajime-San has determined how to do this. These materials also give the blades their distinctive sound. One knows Hajime-San's work from the sound alone,\" Kim finished.\n\nShe showed them her blade and Alvoie ran the very edge of a talon over the cutting edge. It took off the tip of his talon.\n\n\"I will sharpen it for you later,\" &gt;Utan snapped at her boss, disgust obvious in her voice at the stupidity of his action. \"At least you had the sense to use your talon and not your finger,\" she mused, getting a smile from Junelliya at her antics.\n\nKim opened a link and threw it to another monitor. A minute later, the image of Hajime Tatsuya came up. He bowed to Kim, who returned her own.\n\n\"To what do I owe this extreme pleasure, Oshiiru Kimiko?\" Tatsuya asked in Japanese, which was dutifully translated by the comps each of the others were wearing.\n\n\"Master Smith, the Asocan Ambassador has the weapon you made for my Student Guro&lt; in his possession, meant for Guro&lt;'s father. He wishes to know how to order more of this weapon?\" Kim asked.\n\n\"Then the recipient is happy with the weapon?\" Tatsuya asked.\n\n\"The weapon is in the Asocan Embassy on Liramor-23,\" Kim answered, \"the intended recipient has not yet received it.\"\n\n\"Then I can do nothing for you,\" Tatsuya remarked. \"This was a one-of-a-kind weapon, meant for the War Dragon Minister Klo\u00e4&gt;. I would need his permission to make a copy of this weapon.\"\n\n\"I understand, Master Hajime,\" Kim replied. \"However, there is much interest in this weapon.\"\n\n\"As I would expect. Guro&lt; tells me that this will become a presentation blade for his Clan, Mutt Korld. As such, I am bound by my word. I cannot make a duplicate without permission. If you gain permission, I will take orders for new blades. They will take four months to make and will cost nearly 32,000 credits each,\" Tatsuya finished.\n\n\"We understand, Master Hajime. We will let you know of what happens,\" Kim assured him.\n\n\"As always, it is a pleasure speaking with you, Kim-Chan,\" Hajime bowed and closed the link.\n\n\"32,000 credits!?\" Alvoie exclaimed.\n\n\"Four months of hand forged, manual labour, each time handling the blade risking a mistake that would make it unsellable. Include the cost of materials and the time for each weapon made,\" Kim told them, shrugging.\n\n\"A weapon like this is cheap at that price,\" Utan&gt; exclaimed. \"I would beggar myself to own such.\"\n\n\"How long will it take to get this weapon to the Asocan home world?\" Kim asked.\n\n\"I have no idea,\" Alvoie admitted. \"We are still at the mercy of the Djina\u00ebte to move about.\n\n\"However, the Asoc is coming to Liramor-23. The Minister for Interspecies affairs War Dragon Minister Klo\u00e4&gt;, will be with her when she arrives. I will give it to him then.\"\n\n\"Guro&lt;, Hajime said that this was to be a presentation blade?\" Kim asked.\n\n\"Yes, Sensei. It was not made to be a family heirloom,\" Guro&lt; stated.\n\n\"That is how we will approach this with your father then,\" Kim told him and the others, who all nodded. \"You can probably have this blade laser etched by one of the techs on Liramor-23. That will allow you to make this a true presentation blade without overtly damaging the blade itself.\"\n\n\"Then we should make this a presentation blade from Liramor-23, with the crest of Mutt Korld, the Crest of Liramor-23, and the crest of Mutt Herrtt on the blade,\" Guro&lt; suggested, getting significant interest for his comment from Alvoie who understood immediately who this blade would be presented to.\n\nThe Trine, In Transit Liramor-23, The Piscium System to Planet Adenomere, The Adenomere System\n\nSoon, The Trine was on its way out of the VIP Bay and accelerating to speed for its first jump, Ambassador Clend, and Harla Fannett the only two passengers of note. They had just settled in when Sylvie Kinlo advised Junelliya that something of significance had happened at the Landstradt.\n\nThe three new people watched the recording of the offer and counter offers for the prisoner exchange.\n\n\"Good. As soon as we are able, we will have to take the prisoners on our ship and get them out of Alliance space. I do not want anyone to think they can take pot shots at them in order to break up the budding romance between the Union and the Alliance.\n\n\"What about the Ambassador?\" Sylvie asked.\n\n\"His ship is supposed to arrive on Adenomere before we return. That will give him a means of moving around that can support Salum, while providing her with a vestige of diplomatic immunity. However, when his ship arrives, our diplomatic immunity will be voided. We must leave as soon as we can get the prisoners aboard,\" Junelliya stated.\n\nCapt. Bellany gave the warning of impending jump as the ship made its first 190 light year jump, coming into an unnamed star system along the long axis of the route. An hour later, they jumped the final 99 light years to Adenomere and requested permission to bring the Harradi Ambassador and the Harla down to the Landstradt. Twenty minutes later, they were on the ground.\n\nThe hatch opened and Junelliya, Fayad, and Hanalei came down in the first row, Hanalei and Junelliya holding their respective child. Urano and Kim came immediately behind the trio, while the Harradi Ambassador and the Harla came down after. They were met at the ground by Ambassador Flynet and the Chair.\n\n\"Good afternoon, Chair. It is my pleasure to introduce to you Ambassador Hollard Clend of the Harradi, and Harla Salum Fannett,\" Junelliya said by way of introduction.\n\n\"We welcome you to the Alliance, Ambassador. Harla,\" the Chair replied in turn. \"Shall we enter the Landstradt?\"\n\nThe group followed the Chair into the Landstradt. For the second time in less than a week, the members of the Landstradt craned their necks to get a look at their second Alien species.\n\nThe Chair took his place and addressed the Landstradt. \"We have here before us, Ambassador Hollard Clend of the Harradi, and a member of his people, Harla Solum Fannett, who is the equivalent of a senior scientist among her people,\" the Chair told the Landstradt.\n\n\"Ambassador, you have said that you people could help the Alliance with its reliance on manual labour practices?\" the Chair began.\n\n\"Yes. That is not much of an issue. What I am hearing and seeing from electronic samples sent to me on Liramor-23, is that your people are in need of new techniques for the growth of your plants.\n\n\"The soil on Adenomere is weak and does not retain much of the elements needed for that which you grow to eat. You need new techniques to help enrich the soil before you can truly gain capacity in your crops.\n\n\"I am told that someone on Adenomere attempted to grow Cocoa and Coffee plants with little success other than getting a lot of pulp to use for paper. The weak soil is the reason why. There is no reason that you cannot grow appropriate crops on Adenomere if you correct for this,\" the Ambassador stated.\n\nThat surprised the Landstradt. They knew there were issues with the soil on Adenomere but no one had been able to figure out why. It had always been thought that there was leaching from the soil rather than an issue in the soil itself, which explained why they had not been able to adjust for it.",
        "\"Can you teach us how to manage this issue?\" the Chair asked.\n\n\"This is the simplest issue that you will have to deal with, Chair,\" the Ambassador assured them. \"There are many more that we have deduced from the electronic samples we have received but Harl Fannett will have to confirm them. If we get that confirmation, then we should be able to increase your crop yields significantly and show you new mechanical techniques that will help to sustain the soil and your crops.\"\n\nThe membership of the Landstradt looked at each other. They had been sceptical of the Harradi agricultural expertise, however, the Harradi had just walked in and already had potential corrections for problems they had known about but could not correct. What else could the Harradi do?\n\n\"What do we need to do to arrange for your assistance, Ambassador,\" the Chair asked.\n\n\"First, you will have to pay for the Harla's time, which does not come cheap as the Harla are the peak of our expertise. Then, we will determine what you should be capable of growing, what you wish to grow, and what we need to make that possible. From there we can determine what would be required to support your peoples agricultural needs.\n\n\"Once that is established, we will express what is a surplus. We will ask for one third of your surplus to assist the Harradi home world's population.\n\n\"We will never take from any holdings that are unable to produce a surplus and we are willing to wait for a surplus to form,\" the Ambassador stated.\n\n\"Those are actually quite liberal terms, Ambassador,\" the Chair stated.\n\n\"We find they have worked well for us in the past,\" the Ambassador admitted. \"However, there is a caveat. That caveat is your support for slavery. We, the Harradi people, cannot abide by slavery. We would ask that you seriously consider the abandonment of slavery among your people.\n\n\"We are aware that it takes time to move from one form of economy to another, from one form of labour trends to another. We are willing to give you this time, if you truly wish our assistance you must be serious in your wish to replace slave labour with other methods,\" the Ambassador finished.\n\n\"The Harla will make recommendations as to what will be needed to support farming on Adenomere?\" the Chair asked.\n\n\"Yes, however, her reports will go directly to me and to Ambassador Flynet vice to the Landstradt. We will negotiate the information you receive for specific actions on the ground. We will not provide you with data that will allow you to continue with slavery.\n\n\"The whole of the Greater Community abhors slavery and piracy,\" the Ambassador finished.\n\n\"You ask a great deal of us, Ambassador,\" the Chair said.\n\n\"We will give you a great deal in return, Chair,\" the Ambassador stated plainly.\n\nAdenomere Estate, Planet Adenomere, The Adenomere System\n\n\"Well, that was definitely an interesting session!\" Aurelia said by way of starting the conversation as they arrived back in the main room of her estate.\n\n\"This is your home, Aurelia?\" Ambassador Clend asked.\n\n\"Yes. I inherited it from my father-in-law and husband,\" Aurelia told them, leaving out the parts that made the story interesting.\n\n\"Then the people who work here are slaves?\" the Harla asked, a look of derision on her face.\n\n\"Hold your wrath, Harla,\" the Ambassador berated her. \"Aurelia has only just inherited this estate and is working to improve her people's welfare within the balance of Alliance ideals.\"\n\n\"Thank-you, Ambassador, for your understanding,\" Aurelia said with a bow.\n\n\"What do the Harradi eat?\" she asked.\n\n\"We can eat almost anything that humans eat. We are, however, not fond of meat products, though we like cheeses and eggs. There is little pasturage on our Home World so the Harradi never did develop a taste for meat products,\" the Harla replied.\n\n\"We can provide you with a lot of different vegetable products, and even some that come from off-planet, which The Trine brings in every time it goes out,\" Aurelia told them.\n\n\"Riley makes a dish she calls Poutine. I rather like it,\" Ambs. Clend told them, smiling at the group.\n\n\"I will see if it is a suitable dinner for us tonight,\" Aurelia told them, then explained that her people were slowly developing their appetite after having been on severely restricted diets for so long.\n\nRiley liked the idea of Poutine for the supper. It was easily digested, and easy to make, they even had the right kind of cheese to use from a local cheese factory. It didn't take long to make up the meal, which, while not initially appearing appetizing, was surprisingly tasty and filling.\n\n\"How soon before we can leave this planet?\" Sgt. Brogues asked, after they had finished eating.\n\n\"Once we have negotiated the contract between the Alliance and the Harradi,\" Ambassador Flynet told him. \"They will then allow you six to leave.\"\n\nJunelliya noted that Aurelia seemed a little crestfallen. Aurelia gave Raymond a side glance that no one else noticed. That brought a smile to Junelliya.\n\n\"Ask him,\" Junelliya whispered to Aurelia, a few moments later, getting a bright red blush in response.\n\n\"Junelliya, I thought you were not supposed to look into people's minds without permission,\" Aurelia whispered back. That brought a giggle from Junelliya.\n\n\"Oh, Aurelia, you do not need to be a telepath nor an empath to see what is on your mind. I think he has recovered enough. Just ask him,\" Junelliya reassured her. That brought another blushing smile from Aurelia.\n\nShe stayed close to Raymond for a bit, until he noticed her attention. He raised an eyebrow at her but she just shook her head and asked him to wait for more privacy. Eventually she broached the subject.\n\n\"This is supposed to be my Honeymoon Week,\" Aurelia told him. \"I have told my friends that Marius and I have had relationships just before he was arrested. That is a lie. That man would only want to lay with me to put a notch on his bedpost and I never gave him that pleasure.\n\n\"I timed this week for my Honeymoon for a reason...I am at my peak of fertility over the next few days. Raymond, I could never ask any of the Alliance men to be the father of my children. But I want to ask if you would grant me a special privilege and help me try for an heir to House Adenomere?\"\n\nRaymond blinked several times, then gave her a gentle smile. He nodded once, not trusting his voice at the moment. The two got up and left the room, only Kim and Junelliya seeing them depart together. The two gave each other a smile and a thumbs up. This would help both of their friends get by many of the issues they were currently being pressured by...\n\nAurelia's Private Quarters, Adenomere Estate, Planet Adenomere, The Adenomere System\n\nAurelia entered her private quarters to be greeted by Jirani and Kodani whose eyes widened in surprise seeing the pair holding hands.\n\n\"Not a word of this to anyone, you two,\" Aurelia admonished the pair, a dazzling smile embracing her face.\n\nThe two slaves looked at each other and smiled then gave a short curtsy to their mistress and turned their backs, looking up at the ceiling, pretending not to see anything, as the pair moved quietly into Aurelia's bedroom. They closed the door behind them and giggled as they ran to their own quarters within Aurelia's apartments.\n\n\"Can you trust them?\" Raymond asked as the door was closed behind them.\n\n\"With my life,\" Aurelia said with meaning.\n\nRaymond nodded, then placing his hand under her chin, he lowered his lips to hers. For the first time in her life, Aurelia felt the kiss of a lover. She savoured the moment and the feelings it brought to her.\n\nWhen Raymond broke the kiss, she sighed and leaned against him. His muscles were hard, his body solid. Aurelia was tall for an Alliance woman but Raymond was taller than her.\n\nHe reached behind her and unclipped the collar of her dress, then ran the nylon zipper almost down to her ass. His hands slipped into the now open back of her dress and slid up and down her soft flesh. Aurelia purred at the feelings he was bringing to her.\n\nHe slid his hands up over her shoulders and down her arms, bringing the dress along with it. In moments, her breasts were exposed to his eyes. He smiled at the sight of her partial nudity. Her breasts were exquisite, not too small, nor too large. They looked to be a small C cup with areola larger than his thumb and smallish nipples. Raymond liked larger nipples but the soft coral colour of her extended nipples let him know she was excited. That made him look up into her eyes, which were watching him.\n\nHe smiled at her and pulled her into his embrace, giving her another, even hotter kiss. She moaned into his mouth as he hugged her close, her breasts rubbing the cloth of his jumpsuit.\n\nWhen they broke their kiss, Aurelia stepped back and let the sleeves of her dress fall from her arms, slipping her hands into the sides and peeling it down over her hips. The dress pooled on the floor at her feet, leaving her in only her panties.\n\nShe stepped forward and broke the seal on the Velcro over the zipper to his jumpsuit, pulling the zip from his right shoulder, over his stomach, and down over the outside of his left hip, midway down his leg.\n\nRaymond pulled his arms out from the jumpsuit and helped it slide down over his hips. He slid his soft boots off and pulled the suit off his legs, leaving him in only a tight pair of boxers that clearly showed an excited Aurelia his burgeoning erection.\n\nRaymond stepped forward and picked Aurelia up, moving her to the bed, where he gently placed her down on her back. He slid over top of her and gave her a hungry kiss as she opened her legs to allow him to lay on her.\n\nThey kissed for several minutes before Raymond trailed his lips outward to her left ear, where he gently nibbled on the lobe, bringing giggles from the young woman. Raymond slid down, allowing his tongue to trail over her chin and then down her neck. Eventually, he arrived at the top of her left breast, where he spent some time tonguing, kissing, and licking the mound, slowly heating Aurelia up.\n\nHe latched his lips around her nipple and sucked gently on it, bringing a groan from deep in her belly. That brought a smile to Raymond as he suckled on her tiny teat. After spending some time on her left breast, he moved over to her right, which he had thus far ignored.\n\nWhile he kissed, nibbled, licked, and sucked on her right breast, he fingered her left bringing even more heat to Aurelia.\n\nHe spent some time working her breasts, before sliding down and kissing her stomach along the line of her panties. Aurelia moaned again as she felt the heat of his breath there. She could feel herself getting more and more excited. She could feel the heat in her pit and worried that he would not like the smell of her.\n\nThis close to her, Raymond could indeed smell her arousal. It was a heady scent that he hoped would translate into the taste of her. Sometimes, the scent of a woman was not at all like the taste of her.\n\nRaymond kissed all around her panties, spending time along the seam of each leg, getting close to her pussy with his tongue. Aurelia was now highly aroused and ready for Raymond.\n\nRaymond looked up at her from between her legs, smiling at her. He gripped the outside edges of her panties and pulled them down. Aurelia lifted her ass to assist him as the offending material was slipped down her legs. A moment later, she was completely naked, Raymond's mouth and tongue slowly moving up her right leg from her foot.\n\nAurelia moaned and opened her legs in invitation, an invitation that Raymond did not ignore. His mouth closed over her cleft and he finally tasted her. She tasted just like she smelled and it was delicious.\n\nRaymond's tongue swiped once from the bottom of her cleft to the top, causing Aurelia to cry out in pleasure. Her hands went to the back of his head and pulled him gently closer to her.\n\nRaymond closed his teeth around her labia and pulled gently, causing Aurelia to let out a trilling wail. His tongue sank deep into her now open well, tasting the fluids draining from inside of her. He closed his mouth over her clit and sucked gently on it, causing Aurelia to buck each time he pulled on the little morsel of flesh, until she finally exploded into his mouth.\n\nRaymond closed his mouth around her opening as she came hard, filling his mouth with her exquisite flavours. When she finally calmed down, he slid up and gave her a long, gentle kiss.\n\nAurelia tasted herself on his lips. It wasn't the first time that she had tasted herself, as she and Ria had played together before they were separated. Ria had taken her virginity with a vibrator, while Aurelia had only used her mouth on the girl, taking Ria's virginity would have brought down her father's wrath on her. She sighed at the sweet memory her taste brought back to her.\n\nShe also felt how hard Raymond had become, his manhood pressing into her groin.\n\nShe pushed against Raymond, rolling him over onto his back, then slid up on top of his muscular form.\n\nShe followed the same strategy that Raymond had used on her, kissing him in many different places as she slid down his body. Soon, she had arrived at his boxers. She didn't wait one moment but quickly pulled them off. She was treated to the sight of a rather large and rigid cock hanging over him, rigid enough that it didn't touch his stomach.\n\nAurelia had seen many cocks in her life, mostly from the porn sights on the internet. Slaves were often naked, but few of them were ever hard. Still, she recognized that Raymond was larger than average. She smiled as she made her way slowly up his legs, finally arriving just below his balls.\n\nHer tongue snaked out and lapped over one of the orbs, which she gently sucked into her mouth, causing Raymond to gasp out loud. That brought a smile to her face to know that she could cause this man that kind of pleasure.\n\nShe moved to the other orb, gently lathering it before taking it into her mouth and sucking on it.\n\nAurelia let the orb fall out of her mouth and looked up into Raymond's eyes as she tongued along the medium septum of the scrotum, the part that separated the two orbs.\n\nShe came to the bottom of his prick and slid her tongue up the length of it until she reached the head. Her eyes once again fixed on Raymond's as she deliberately took the head of his muscle into her mouth, closing her lips behind the head, and then sucked hard.\n\nRaymond growled and pushed up with his hips, forcing his cock deeper into Aurelia's mouth, or trying to, as she wouldn't allow that and simply rose up with his thrust, keeping just the head of his monster in her mouth.\n\nRaymond groaned at the rejection, while Aurelia laughed around the head in her mouth. As Raymond lowered his hips, she moved with him then allowed her lips to slide down a little of the length of him, rewarding him for being such a good boy!\n\nAurelia felt his cock pulse several times in her mouth, thrilling to the feeling of a live prick over a vibrator. She moved her head gently up and down his shaft feeling more than hearing the moan that rumbled through his body.\n\nShe kept moving further and further down his shaft until she managed to get about three quarters of the length into her mouth but could get no more without gagging. She bobbed up and down on him for several long minutes until she finally let him slip from her mouth, gently pumping him up and down with her small hand.\n\nShe smiled at him and moved up over top of him, throwing her legs wide around his hips. She lowered her cleft over the back of his cock and fingered her labia open, wrapping them around his hefty shaft.\n\nShe slid upwards a few centimetres, then came back to where she had started. She repeated the motion, finding it easier to slide forward now that her juices had lubricated him a little. She kept moving back and forth until she was sliding back and forth along the full length of him.\n\nAs she moved once more to the head of his cock, she lowered her face and kissed him gently, grinding her clit against him. She leaned upwards and moved forward slightly, putting her nipples to his lips.\n\nThat position left the head of his hard-on pressed against the entrance to her vagina. She pushed back gently, but with determination. She felt her cleft open and the head of his beast slowly enter her.\n\nAurelia could feel her heart beating a kilometer a second as, for the first time ever, she took a real cock into her body. He was wider than the vibrator she used, so it was a little bit uncomfortable, but only for a moment. Eventually, when half of him was seated inside of her, she sat up and allowed gravity and her leg muscles to help her to slide down completely onto him until her groin rested against his. Both of them let out a moan of pleasure as she stopped moving with him as deep as he could go inside of her.\n\nAfter a few moments of stillness, Aurelia began to grind her mound against him. She couldn't believe what was going through her body as the pleasure began to mount, the new feelings fluttering through her stomach. She was making sounds she had never made before as she felt herself building to an unbelievable climax.\n\nUnexpectedly, her orgasm washed over her as she let out a loud cry of surprise. The pleasure seemed to rush in pulses from her pussy all the way up to her brain.\n\nUnable to hold herself up any longer, Aurelia fell onto Raymond's chest. He wrapped his arms around her, one at her shoulders, the other bringing his hand down across her ass, which his large hand protectively cradled.\n\nRaymond rolled them over and spread her legs wide, his elbows moving behind her knees, pushing them back until they almost reached her ears. He began to pump hard in and out of her slippery chute, edging her orgasm even higher. The slapping noises of his hips colliding with hers reverberated from the walls of her bedroom as he pumped harder and harder against her.\n\nAurelia couldn't believe the pleasure he was bringing her, her orgasm was going through her in waves, getting stronger and stronger the longer they fucked, until...\n\nAurelie reached another, unprecedented peak and she felt herself shudder as her stomach clench hard. She felt her soul leave her body as she came harder than she had ever cum before in her life. She squirted...all over Raymond's stomach.\n\nRaymond felt the heat of her fluid spray his stomach and her deep muscles clench his cock, massaging him in an exquisitely wonderful manner. He couldn't hold back anymore and pushed himself as deep as he could inside her.\n\nAurelia felt his cock swell inside her and a wonderful blast of heat hit the back of her pussy. Again and again she felt the swell and the heat. She suddenly became aware that he was shooting his seed deep inside of her.\n\nAn unbidden image of his cock unloading ten days worth of seed all over the Landstradt floor flooded her brain, sending her pleasure even higher. She wrapped her legs and arms around him and screamed out her happiness as he seeded her body.\n\nThe two of them clung to each other for some time, until Raymond's cock withered enough to naturally fall out of her body. An act that took awhile considering how hard her pussy was clutching him and how big he was.\n\nTheir efforts had exhausted the pair. Raymond rolled over onto his back and Aurelia tucked herself in beside him, using his right arm as a pillow. The last coherent thought she had as she felt him pull the sheet up over them, was that she was going to make a mess of the bed with his seed slowly dripping out of her...\n\n************\n\nAurelia woke late the next morning, pleasantly sore from the previous night's exertions. She saw Raymond looking at her and shyly hid her face in her hair. Raymond just brushed it out of the way.\n\n\"Do we have to get up?\" he asked, getting a giggle from Aurelia.",
        "\"Yes, unfortunately, while the Landstradt is not in session Saturday and Sunday, there will be many of the members who will come to tea this afternoon, which means we have to prepare things for the day,\" Aurelia informed him. \"However, I hope we can do this again tonight?\"\n\n\"Why wait that long?\" Raymond asked. \"We have to shower to prepare for the day, do we not?\"\n\nAurelia smiled shyly, as Raymond slipped out from under the sheet, pulling her along. Aurelia felt bashful about him seeing her naked in the sunlight, which suddenly seemed strange to her as he had seen her naked in the lights of her bedroom. Somehow, the sunlight just made it all the more obvious. However, while she was somewhat shy of showing off her body to him, she did like the look of him in the morning light.\n\nRaymond guided her to the bathroom and the large shower, turning it on and setting a temperature that he hoped wouldn't be too unpleasant for her, while Aurelia shyly sat on the toilette. When she finished, he pulled her in with him and let both of them soak under the warm water for a bit.\n\nRaymond asked her which soap she preferred and used that to lather her body, his hands roaming pleasantly all over her from head to toe. Aurelia revelled in the feeling of his gentle hands soaping her up. Raymond then pulled her into his body and rubbed himself against her, setting up giggles from the young woman.\n\nAurelia returned the motions, rubbing the lather into both of them, her hands wandering equally extensively over his body. She eventually found his burgeoning tumescence, the actions of her hands swiftly bringing him to full erection.\n\nRaymond picked her up and lowered her until the crown of his cock touched her entrance. Aurelia shuddered in pleasure as the head of his marvelous muscle slid into her sore but welcoming pussy. She trapped her lower lip in her teeth as he slid deeper until she bottomed out against his groin. Her teeth let go of her lip as she opened her mouth in a deep moan.\n\nShe marvelled at the strength of the man as he slowly lifted and lowered her along the length of his rigid muscle. Her soreness was soon forgotten as another feeling started to creep into her body.\n\nRaymond kept up the actions for some time until he felt her clutch to him tightly. Her inner muscles hugged his prick, massaging him until he could no longer hold back and he came deep within her.\n\nAurelia felt the flood of heat within her and sighed at the feeling, her body welcoming the feelings she was enjoying. The pair clung to each other for several minutes, kissing gently until Raymond's shrinking appendage slipped out of her. She felt the flood of his sperm leaving her body though she still felt the knot of warmth deep inside of her.\n\nThey finished washing each other and were surprised by a blushing Jirani and Kodani, who were holding large, warm towels for them. The attendants smiled as they helped the couple dry off.\n\n\"I brought some of your clothes in for you,\" Kodani told Raymond as they moved into the bedroom, pointing to a jumpsuit on the bed. As Jirani helped Aurelia choose a gown for the day, Kodani asked shyly; \"Do you need help dressing?\"\n\n\"I wonder why everyone always asks me that,\" Raymond rumbled teasingly. \"I think I can manage on my own.\"\n\nKodani blushed as she watched Raymond slip on his tight boxers, hiding his masculinity from them. The jumpsuit was next. He pulled on soft deck shoes and turned to face the three women, who looked a little disappointed to see him dressed. He barked a laugh at the expressions on their faces.\n\n\"You will see me again tonight, if Lady Adenomere allows me to attend her again?\" Raymond asked.\n\nAurelia said nothing, just blushed and dipped her eyes. Raymond gave the ladies a small bow and left the apartment by a side door, so as not to compromise Aurelia any further. He knew that Jirani and Kodani had the best interest of Aurelia in mind, but not all in the household would.\n\nTea Party, Adenomere Estate, Planet Adenomere, The Adenomere System\n\nKorman and the household slaves set up the garden for the Saturday afternoon tea party under Aurelia's watchful gaze. They were expecting over one hundred guests, including the two Toolend and the two Harradi.\n\nAurelia had assigned Allen, with her private aircar, to shuttle the Harradi around to the different holdings which had requested their assistance. The Harradi were accompanied by Junelliya and Kim to ensure their safety. Once the Masters saw who was getting out of the vehicle with the Harradi, the mixed feelings they were showing against the Harradi shifted significantly. They suddenly became much more polite remembering the power that Junelliya had displayed earlier in the week, and the skill of Kim with her swords they had witnessed in vids since her previous visit to the Alliance.\n\nThe Harradi were thorough and efficient. Testing the soil, noting which crops were planted, noting the labour force or lack of it, the water supply and many other factors before moving on to the next holding. They managed to get through thirty holdings in the morning alone.\n\nThey returned to the estate in time for the afternoon tea. Junelliya and Kim went to their apartment to change, while the Harradi entered The Trine and swiftly changed into more appropriate attire.\n\nThe guests started arriving soon after. They enjoyed the culinary fair that Riley provided (she had taught the estate cooks how to make fine canapes and other treats), with teas, coffees, iced deserts, and other fare. The main event, however, was being able to interact with the two sets of aliens and the Union reps.\n\nThe guests were surprised when the Harradi told them they had looked at over thirty holdings and had discovered several trends for soil, water, elements, and labour issues for the local area. That pleased those who were there.\n\nRaymond started to get nervous near the end of the party.\n\nJunelliya finally brought out her Luttrell and began to play. As she picked up the instrument, Ikekia took note and called out \"Yeah! Mommy play!\" clapping her pudgy hands. That brought smiles mostly from the female guests.\n\n\"I will begin with an Anuuran lullaby,\" Junelliya said. As soon as the notes of the song started, Ikekia rebelled.\n\n\"No! Ikeki not sleepy!\" she said, again bringing smiles from the ladies.\n\n\"No, but Zarry is,\" Junelliya told the child. Ikekia looked over at her sister and reached out to pet her head, in much the same manner that she pet the Cats.\n\n\"Kay, Ikeki lissen,\" the child said, this time bringing smiles and giggles from most of the guests.\n\nJunelliya began to play the lullaby, a beautiful song that thrilled the audience to hear. They could feel the heartfelt tenderness of the song, a song from a mother to her child. Many of the ladies glanced over to see Zarrenia nodding off in the Nanny's arms.\n\nWhen Junelliya finished the song, she started in on the Pod-Drran 'The Song of Life'. While very few of the guests had ever heard the song before, all were amazed when Junelliya put her empathy into the song, showing the affection of a new mother for new life. It touched the heart of every lady in the audience and even a few of the men. Aurelia herself was not immune as she unintentionally rubbed her belly.\n\nJunelliya played a few more songs, then set the Luttrell in its holder and picked up Ikekia from Hanalei. \"Mommy play good,\" the little girl said and gave her a wet kiss on the cheek.\n\nAfter that, it was time to send the guests home. Every guest that came by Hanalei with Ikekia had to pay the toll of a hug for the little girl. None minded paying that toll.\n\nAs she was holding the sleeping Zarrenia, the guests quietly gave thanks to Junelliya for her music, not wanting to wake the child.\n\nThey thanked the Toolend, the Harradi, the Union Ambassador, and gushed their praises to Aurelia as they left.\n\n\"What do you think?\" Raymond asked the Toolend after the party.\n\n\"Most of the guests came here with sceptical hearts,\" Tougrate told him. \"However, they were swayed by the Harradi comments on the local land conditions and they found that we (the aliens and the Union reps) are nice people. They will go back and tell their contemporaries the same.\"\n\n\"That's what I am afraid of,\" Raymond mused.\n\n\"Raymond?\" Ambs. Flynet asked.\n\n\"Those who oppose us were getting more and more desperate as this week went along. They lost many of the senior Houses males, due principally to their own stupidity, and they were forced to concede the actions of many of their contemporaries in the episode of 'The Barn',\" Raymond explained his thinking.\n\n\"They will want to act soon if they want to keep things the way they are. Desperate people will do desperate things. We need to be prepared for that,\" Raymond finished.\n\nAmbs. Flynet nodded. \"Tomorrow's strategy session with Liana will be interesting,\" he intoned.\n\nLater that evening, Raymond snuck back into Aurelia's apartments. He spent the night and slipped out early in the morning, so as not to compromise Aurelia.\n\nAurelia was sad to see him go, knowing that this would be the last time they would be together. She hoped that their activities would bear fruit.\n\nLandstradt HQ, Adenomere City, Planet Adenomere, The Adenomere System\n\nThe mood in the Landstradt was noticeably different the following Monday being much lighter than the previous week.\n\nAs soon as the Chair opened the session, the Alliance stalwarts tried to get the Landstradt to throw out their commitments to the Union and to the Greater Community. They were denied their petition by a huge margin. Raymond was now openly worried.\n\nMany of the issues that Ambs. Flynet brought forth the previous week were discussed openly, with an obvious intent to consider them if not an open intent to implement them. The day seemed to go completely for the Union.\n\nThat night, the strategy session with Liana was heated, with plenty of discussion of 'what if' scenarios. They needed to be ready for the next few days, only they weren't.\n\n************\n\nThe next morning, as the Chair was opening the session, Jaar Adenomere walked into the Landstradt.\n\n\"Master Adenomere, why are you here and not in prison?\" the Chair demanded.\n\n\"I am here because fellow patriots freed me and others,\" Jaar proclaimed.\n\nJust then, several people that the Landstradt recognized as people awaiting trials for their actions from the previous week, stepped out from the wings and seized Master Grovern, hauling him down from his place on the Chair.\n\n\"Who freed you?\" Grovern demanded.\n\n\"I did,\" Kevin Lindelle shouted, gleefully. \"I and other patriots like Master Ronald Linge, Master Donald Kittering, Master Brendon Soulange of House Soulange, and other patriots!\"\n\nJaar took the Chair's seat.\n\n\"I now proclaim the Landstradt in session,\" he thundered. \"Not the new Landstradt, but the Landstradt as it was. We, the patriots of the Alliance, call an end to the changes that have been forced on us by the actions of the Union. We have seized the prisoners, the Union Ambassador, the four Aliens. We claim the ship, PV The Trine, as a prize ship and will break it apart to learn its secrets.\n\n\"Do not move, Lady Junelliya! We are aware of your powers. We have placed explosives against the hull of your ship. Enough to kill all on board, including your children if you use your powers against us!\" Jaar laughed a cruel laugh as he looked around the Landstradt.\n\n\"Oh, you have just made a serious mistake,\" Kim spoke, brining attention to her.\n\n\"What? Do not worry, little Kim, we will deal with you as well. We will place you in the circle outside of this building and allow anyone who wants a chance at you to send their champions to fight you. Your life will end this day!\" Jaar crowed.\n\nThe members of the Landstradt were looking around. Most of the new people were armed. The guards were either siding with them or had been arrested. It looked like the changes they wanted had been reversed.\n\nA woman rose in the bleachers. \"Cease this immediately!\" she shouted. Kevin Lindelle, I ask you to rethink what you are doing. You are in breach of a dozen Landstradt regulations and are committing an act of treason against the Alliance!\"\n\n\"Don't talk to me about treason, wife!\" Lindelle shouted back. \"These people, the members of the Landstradt, are ready to lay down and expose their throats and bellies to the Union wolves! I will not let that happen to my Alliance!\"\n\n\"You are not thinking one moment of the Alliance, Kevin Lindelle!\" his wife called out. \"This is all for you, not the Alliance! I ask you once more to stand down and stop this lunacy!\"\n\n\"Not a chance!\" Kevin shouted back.\n\n\"Then you leave me no choice, I and the senior members of House Lindelle will not support you in your actions. We renounce you as a member of House Lindelle. You are on your own!\" his wife shouted and sat down.\n\n\"You cannot do that to me! I am the Patriarch of House Lindelle...\" Lindelle began but was cut off by Jaar Adenomere.\n\n\"Enough!\" Jaar shouted bellowed from the Chair. \"Are there any others who wish to distance themselves from the actions of these patriots?\" Jaar demanded. \"I will go down the list of people here. I will not ask Lady Adenomere, however,\" Jaar sneered.\n\nAurelia rose. \"There might have been a time when I supported you, Jaar Adenomere, until you and Marius attempted to have me assassinated three times, until I discovered the extent of your depravity with slaves. One does not support a coward or a mass murderer, Jaar.\" She sat down without waiting for a response.\n\n\"That's all right, Aurelia,\" Marius mused. \"We will have our honeymoon week, then I will break your pretty little neck!\"\n\nJaar continued down the list of names, getting refusals for most of the families of the Great Houses.\n\nGloria Worsley stood and supported her husband. \"We are an old family, not of the first ships, but not long after. There is only the two of us now. Though I do not agree with my husband in this, I must, as a dutiful wife, support his actions.\"\n\n\"Thank-you for your candor, Lady Worsley. You and your House will be richly rewarded when we re-establish the old Alliance,\" Jaar said.\n\n\"I do not want a reward, Jaar Adenomere, I do not want to be left behind when my husband, and all of you, are executed. I wish to be with him...\"\n\nJaar bristled at the thought but said nothing.\n\nThen the Comms Tech called out.\n\n\"Chair, there is a communique from Adenomere Station! There are ships coming into orbit!\" he shouted.\n\n\"What do you mean ships?\" Jaar snarled.\n\n\"Union warships, Chair!\" the Tech said. He put the input from Adenomere Station on the main monitor. It showed the scan of local space with over a hundred ships in orbit, all marked with Union tags, with more and more ships coming into orbit nearly every second.\n\nFinally a large ship appeared near the station and opened a channel on the guard net.\n\n\"This is the NS Dewfall, Capt. Henadi Noor commanding. We are the flag ship of this fleet, with Commodore Liana Dostier in command.\" the voice of Capt. Noor said.\n\nA face came up on the monitor. \"This is Commodore Liana Dostier, commanding this fleet. I have 500 ships in orbit around Planet Adenomere, all warships. We plan to blockade the planet until such time as our people are released, unharmed!\n\n\"I demand the immediate release of the Union representatives with diplomatic immunity and the arrest of those who threatened them, the innocent crew and passengers of The Trine, the integrity of the Landstradt, and the negotiations between the Alliance with the Union,\" she snarled.\n\n\"What are you going to do now, Chair?\" Kim asked sweetly. \"Like I said, you have made a serious mistake,\" Kim stated. \"Now you have a decision to make and you have no resources but the people who supported you here in this Landstradt, your so called Patriots,\" she finished with disdain in her voice.\n\nJaar looked around the room in confusion. His claim to the Chair was now in jeopardy and he knew it. The guards who had initially been placed under arrest, moved to take into custody those who had arrested them. People in the Landstradt pulled their long knives and moved in on the so called 'Patriots'. They were swiftly subdued.\n\nMaster Grovern approached the seat of the Chair and bodily threw Jaar from it.\n\n\"Members of the Landstradt, I have allowed myself to be overthrown and have placed all of you at risk when I had pledged the security of this building. Do you still wish me to retain the position of Chair?\" he asked.\n\nA resounding \"AYE!\" sounded from the floor and a humbled Martin Grovern sat again in the Chair's seat to a round of applause from the floor.\n\n\"Members of the Landstradt, all those who stood with Jaar Adenomere and his clique are hereby under arrest under the constitution of the Landstradt. They have committed high treason against the Alliance while in the Landstradt. Do you agree?\" the Chair asked.\n\nOnce more a resounding \"AYE!\" came from the floor.\n\nThe Chair rose and turned to the monitor. \"Commodore Dostier, the Alliance conveys a vote of thanks and your ships for the quick response that you have made to the threat posed to the Alliance by the so called Patriots now under arrest. We now ask, humbly, that you take your ships elsewhere as soon as practical,\" the Chair said, bowing to the image on the screen.\n\n\"Chair, the Union will abide by your request,\" Liana said. \"However, we hold the right to intervene again if our people are threatened by the actions of the Landstradt or the Alliance.\"\n\n\"This is understood, Commodore. With such a number of ships, the Alliance could not prevail against you. You could simply demand what you wish of us. Why haven't you?\" the Chair asked.\n\n\"Chair, unlike the Alliance, we do not force our will on others. We will act to protect our people and the Union when forced to do so. We hope the Alliance will take note of this and act in a similar manner.\n\n\"However, do not think for a moment that we will not hesitate to return in numbers if you again force our hand,\" Liana stated and cut the link.\n\nAdenomere Station was again in control of the conversation and they noted that many of the ships were jumping out of orbit. Not long after, a quarter of the ships were left, along with the flagship the Dewfall. These ships were listed as older ships required to wait for their Marilon generators to recharge.\n\n\"Ladies and gentlemen of the Landstradt, you have just had a taste of some of the abilities of the Union Navy's capabilities,\" Ambs. Flynet stated. \"Five hundred ships jumped into orbit likely on the imagery of this Landstradt being hijacked by the so-called Patriots. Three-quarters of those ships are the newer models capable of multiple jumps and quick turn-arounds. They jumped in to suppress a threat, and then jumped out when that threat ended.\n\n\"We could blockade this planet with those five hundred ships or come with the intent of war against the Alliance with the same force. Yet we came for one purpose, to protect those with ambassadorial immunity and to protect the innocent on board The Trine. We did not impose any demands on you but that protection.\n\n\"The Union has proved its point, ladies and gentlemen. Now, what will you do?\" the ambassador asked, turned and left the building with the other Union reps in tow. They had a short wait while The Trine was cleared of explosives, then entered The Trine and left the area in the direction of the Adenomere Estates.\n\nThe Chair stood. \"We have a lot to discuss this morning,\" was all he said. Now that the so called patriots had been placed under arrest, the discussion was much less acrimonious.\n\nAdenomere Estate, Planet Adenomere, Adenomere System\n\nAurelia arrived back at her estate late in the afternoon.\n\n\"How did things go?\" Junelliya asked an exhausted but jubilant Aurelia.",
        "\"The change in the Landstradt is amazing,\" Aurelia gushed. \"The people are looking seriously at what is happening on each of the planets and there is a concerted effort to help each other.\n\n\"One of the Harradi's comments about having a mobile labour force that could assist holdings that are short on labourers has been enacted. There will be a force of 18,500 slaves on Adenomere, who will be allocated to temporarily assist holdings that are in desperate need of labour. Those slaves will be shown new methods of farming by the Harradi to help the owners of the holdings in their work.\n\n\"The ready force are all made up of non-Union slaves, meaning they will be there to assist even after the expected loss of labour,\" Aurelia stated.\n\n\"Then the Alliance has decided to give up its Union slaves?\" Flynet asked.\n\n\"In principle, yes. We will, however, have to negotiate a timetable on this issue. As well, we will have to start treating all of our slaves a lot better. I have indicated that my holdings have already enacted changes for the betterment of my workforce and many of those currently on Adenomere are asking to come to look at what has been done. It could get interesting here over the weekend,\" Aurelia finished.\n\n\"What about the prisoners?\" Flynet asked.\n\n\"The Landstradt will formally adopt the contract with the Harradi tomorrow. Once they do that, there will be no need to hold the prisoners. Their release will come tomorrow or Thursday,\" Aurelia said, looking a little sad at that thought.\n\n\"It had to happen sooner or later, Aurelia,\" Kim said.\n\nAurelia nodded than looked at Kim. \"Do you remember the girl I entrusted to you last year?\" she asked of the diminutive Asian.\n\n\"Ria? Yes of course. We found her extended family and her mother and father both escaped during the raid. They should all be together now. We can send her a message if you wish?\" Kim offered.\n\n\"I would have no idea what to say to her, Kim,\" Aurelia said. \"What do you say to a woman that you kept as a slave all of your life.\"\n\n\"How about, I am happy for you?\" Kim suggested.\n\nJunelliya took hold of one of Aurelia's arms and Kim the other. The trio walked into a private room where the contact was made.\n\n\"Aurelia!\" Ria screamed in surprise at seeing her on the monitor.\n\n\"Oh, Ria, I am so happy for you!\" Aurelia cried, tears streaming down her face. \"I am so glad that you got out alive. I feared I had made a terrible mistake entrusting you to Kim.\"\n\n\"On the contrary, Aurelia, it was the best decision that was ever made for me as a slave. You set me free, Aurelia. You gave me new friends, a new job, I found family that I did not know about, and now my mother and father have been rescued as well, though they are not here at the moment.\n\n\"I have been watching your exploits in the Landstradt. You have become the force of nature that I always knew you would be. You will be one of the great leaders of the Alliance, I am sure.\n\n\"I really am happy to see you once more, Aurelia.\" Ria said. \"I hope that we can keep in touch over our lives.\"\n\nAurelia nodded her head, not trusting her voice and tears streamed down. She waved to her life-long friend as Kim closed the link and sank into the warm and comforting arms of Junelliya.\n\nLandstradt HQ, Adenomere City, Planet Adenomere, The Adenomere System\n\nThe Landstradt made several key decisions over the next few days, agreeing on terms of services for 'The Indentured' and conditions of 'employment' for the same. This meant that all estates in the Alliance now had to immediately improve the quality of life for their people.\n\nDebate on the use of explosive slave collars was nearing its end, with an expected outcome of them being banned from use. The debate over the use of pain stimulus for the Indentured was also raging, though the outcome was not assured. It would likely take some time to remove such items from around the necks of the labourers. Aurelia was just glad to see the elimination of the word 'Slave' and the return to 'Indentured' in its place.\n\nThe Alliance decided to confirm its deal with the Harradi, who were now in the process of hiring a fast ship to bring all the Harla and Harge to their respective planets. The advice of the Harradi had brought immediate results with the creation of the 'flying squads' to help those who were desperate for help. The group had already assisted five holdings that needed labour for the harvest.\n\nThe hardest part for Aurelia was when the Landstradt agreed to drop all charges against the six prisoners and return their bond back to Junelliya, who actually received the money to the one who provided it, Lea Samson, all done electronically and instantly, something that the members of the Alliance took note of.\n\nAs soon as the formalities were completed and now that Flynet's ship had returned from getting its own ICS antenna, The Trine made ready for its departure. Many people came forward to see them off, including Aurelia.\n\n\"Ambassador Clend, thank-you for your perseverance in the negotiations with the Landstradt, for making all of this possible. Your people have already made a difference and I am sure they will make an even greater difference in the months to come,\" she gave the Harradi dignitary a bow which he returned.\n\n\"Kim, thank-you for coming to help your friends and keep them safe,\" she said as she hugged the diminutive Asian woman.\n\n\"Hanalei, it was a pleasure to meet you and to see your little one, Ikekia,\" at her name, Ikekia reached out and demanded a hug from Aurelia, which she laughingly provided.\n\n\"Fayad, you have only spoken a few times in the Landstradt, but each time you did so you made an impact. I am proud to have met you,\" she spoke quietly as she gave him a hug.\n\nJunelliya, I feel as if I am losing a friend, you're leaving me behind,\" she said, tears in her eyes.\n\n\"No, Aurelia,\" Junelliya replied. \"There comes a time in every young ladies life when she must cut ties with her past and move toward the future. This is your time to do so. I believe, like Ria, that I am watching the birth of a powerful figure in the history of the Alliance. May the Gods bless you, Aurelia.\" She gave the woman a sincere hug and Zarrenia lifted her arms to get her own hug and give Aurelia a kiss on the cheek.\n\n\"I hope that this will happen for me, too, in the near future,\" Aurelia whispered to Junelliya, who gave her a conspiratorial wink.\n\nAurelia then moved to the last person who she wanted to see go. \"Raymond, your presence in my life has made such an impact on me. You showed all of us in the Landstradt what true spirit and courage was all about. I thank-you for that.\n\n\"Our time together has been short, but meaningful. I will always remember you,\" she shed tears as she hugged the man tightly.\n\n\"I hope our time together will indeed prove meaningful,\" Raymond replied. \"Please keep in touch, Aurelia. I am sure that the ICS will come to the planets of the Alliance. Even if it doesn't, you can still use e-mails via FTL Comms Probes.\"\n\nThe group entered The Trine as those who were seeing them off moved back. The ship lifted not long after and quickly made its way into space and jumped..\n\nEnd of chapter forty-three.\n\nPlease rate and comment but remember to keep your comments respectful.\n\nCheers! See you all on Liramor-23!\n\nBe well, Be kind to one another, Be safe.\n\nbigtddybr"
    ],
    "authorname": "bigtddybr",
    "tags": [
        "sci-fi",
        "cunnilingus",
        "big cock",
        "breeding",
        "creampie",
        "erotic coupling",
        "first time",
        "fellatio",
        "impregnation",
        "shower sex"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/all-that-glitters-ch-43"
}