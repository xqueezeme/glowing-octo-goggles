{
    "title": "Mating Season",
    "pages": [
        "\u00a92020 Smuttyandfun\n\nThis one is for the Winter Holiday 2020 Contest, and as always, your votes and comments would be much appreciated. This story is longer than what I usually write, and hopefully you'll enjoy it. Stay Safe and Happy Holidays!\n\nTwo days till Christmas and Greg Hanson wasn't sure if once their semi-annual sales meeting was over he'd hop on a plane to somewhere sunny and warm and skip the family drama, or if he'd do as everyone hoped and expected he'd do, take the first flight back to New York, slap a smiled on his face, and just get through it.\n\nOf course his mother would be thrilled to bits if he showed up for Christmas. But then after an hour or two of seeing how happy and settled all his siblings were, with their little bundles of joy wrapped in their arms and their significant others tucked to their sides, and all of them dropping not so subtle hints about what a great father he'd make, he'd want to turn around and get on the next flight out of there.\n\nBut even as he wondered what he should do, his gaze kept drifting over to lovely Claire, the assistant to the VP of finance, one of the company's latest hires, who was already in line to replace her boss when he retired in January, she was so good at her job. Now he was really glad that they'd hired her. Since she had her attention focused on the wall-mounted TV monitor displaying their annual sales to date and next year's projected targets, he took the opportunity to admire her.\n\nAnd damn, she wasn't just pretty, she was stunning. With all that long, golden brown hair, curling enticingly down her back that he could already imagine fisting in his hand as he took her deep and hard. And the most expressive long-lashed green eyes he'd ever seen that seemed to sparkle whenever they'd talked. And he could almost feel those full lush lips stretched tight around his cock. And to top it all off, she had to have the most perfect rack he'd ever seen, so high and perky, he was curious to know what they'd feel like in his hands, never mind his mouth when he tugged at her nipples with his teeth, just to see what kinds of sounds she'd make when she was aroused, and especially when she came.\n\nHe shook his head, since he wasn't even sure if she'd be interested, while here he was already growing hard imagining what it would be like to get with her.\n\nAll he knew was he needed to get some relief, and soon. Since he'd taken over as CEO of his family company, just over two years ago in October, he'd been working too hard to consider even a casual hookup, just to take the edge off. But since the company was rewarding its staff for their best year ever, with ten days off over the holidays, at least he'd have enough time to finally find someone willing to share his bed and hopefully partake in a little harmless fun. And after waiting this long, he knew he needed more than just a quick little fuck. He needed something memorable enough to sustain him into next year. When he'd be right back at it, trying to grow the automotive parts business his father had left to him, when he'd died of a massive heart attack at only sixty three, probably from working his ass off, the way he was now.\n\nThen suddenly Claire turned her head and glanced over at him. And as her gaze met his, and she slowly began to smile, he could feel his heart beginning to pound. Jesus, she really was beautiful.\n\nStaring right back into her eyes, he was hoping she was feeling even a little of what he was. And when he saw her seductively slip her tongue out and lash it slowly across her lips, following it up with a sultry little smile, he actually felt his cock lurch in his pants. So it looked like he wasn't the only one looking for something to help get him through the night.\n\nAfter Will Davidson, their head of sales, finally got up to end the meeting, thanking everyone for their time, and wishing them all safe flights home as well as a very Merry Christmas, Greg watched as Claire hung back, shaking hands and saying goodbye and happy holidays to everyone without making a move to leave.\n\nUntil at last, once everyone else had left, they were alone, and it was just the two of them with no one to interrupt or hear their conversation.\n\nWearing a teasing grin, he got up from his chair, with his eyes fixed firmly on hers, and approached her. \"So, are you flying home tonight, Claire?\"\n\nLooking up into his smoky blue eyes, she shook her head. \"No. I thought I'd spend one last night here to try and rest up before heading home for the holidays that are always a real event with my family.\"\n\nHeaving a sigh of relief, he could actually feel the tension leaving him, glad to hear she'd be around for the night. \"Then maybe we could have dinner together,\" he suggested, his gaze dropping to her very sexy mouth, already imaging the pleasure he could find there.\n\nShe smiled. \"Sure, why not?\"\n\n\"And we could even have it in my room, so we could hear ourselves talk.\"\n\nWith a coy smile curving her lips, he watched her eyes begin to glimmer with something decidedly naughty, as she obviously considered what would go on in his room. \"Talk, huh?\"\n\nSeeing as she'd already picked up her bag and tablet, prepared to follow him, Greg put his hand to the small of her back and walked her out to the elevators, whispering into her ear as they waited for the next one to arrive, \"Yes, amongst other things.\" He couldn't see any point in beating around the bush, when all he wanted was to get her naked so they could share a few hours of carnal bliss. And if she wasn't on board with that, it would be better if she told him now.\n\nClaire shivered from the warmth of his breath tickling her ear, along with the touch of his hand on her back, sending a wave of heat straight down her spine till she could feel it pooling between her legs, getting her so tingly she could barely wrap her head around the fact that this was actually going to happen, and she was about to get it on with her boss. Part of her wondered if it was such a great idea considering who he was, but since she'd been lusting after him from the moment she'd first set eyes on him, thankfully her naughty side won out, and she decided to just go for it, sure that most likely this would be her one and only chance.\n\nTruth was, from the first moment she'd met him, when he'd wandered into her job interview, she'd not only been intrigued, considering he looked to be at the most in his mid-thirties, and obviously had to be brilliant to be running an empire the size of Hanson International, but there was just something about him. Maybe because of the way he looked at her, like he could almost see right through her clothes, especially the way he smiled, that killer smile, like he appreciated what he was seeing. Tall, with sandy blonde hair, sexy gray-blue eyes and a body she'd kill to see naked, she couldn't believe that he'd taken an interest in her of all people -- Claire Olson a farm girl from the outskirts of tiny River Falls Wisconsin.\n\nInside, she was quivering as she realized she really had made it to the big leagues, seeing as she was riding an elevator up to the penthouse with the company CEO, about to do things she'd only ever dreamed of, with undoubtedly the hottest man she was ever likely to encounter.\n\nOnce he'd unlocked the door to his suite, Greg let Claire lead the way, and smiled at the way she gasped at the opulence of his room. He finally looked around then, too, noticing it actually was pretty nice; big and airy with festive red poinsettias scattered around the comfortable outer sitting room, with a huge wall-mounted TV and a massive bedroom beyond, thankfully with a nice big California king size bed. So he knew they'd have plenty of room for what he had in mind. As he glanced around, it dawned on him why she was impressed, though he'd seen too many hotel rooms to care much about where he laid his head, or pay much attention to whether one was any better than the last, he had to admit, this one was a lot nicer than most.\n\n\"Wow, what a beautiful room,\" she remarked as she made her way over to the floor to ceiling windows. Her eyes widening as she took in the jaw-dropping sight of the Vegas strip glittering beneath them, bathed in a romantic red-orange glow, as the sun began to set over the mountain tops off in the distance. \"And you've got an incredible view, too.\"\n\nGreg came up behind her, slipped his arm around her waist drawing her back against his chest as he looked out over her shoulder. \"You're right, funny I never noticed.\" He pressed a kiss to the top of her head, and smiled as he inhaled her intoxicating scent that made him think of sunshine and flowers, and the fact that he wanted her more than his next breath.\n\nClaire turned her head and looked up at him with a cute little smile tugging at her lips. \"So, is it true what they say about Vegas, what happens here, stays here?\"\n\nCupping her face in his hand, with a gentle brush of his lips over hers, he smiled and assured her, \"It's true. Whatever happens here, stays here, I promise.\"\n\nUnable to resist the urge to actually taste his gorgeous lips, Claire turned in his arms, wreathed her arms around his neck and moaned when he cupped her ass, slipped his tongue between her lips and proceeded to nearly kiss her senseless. And damn was he ever hard, and so unbelievably thick and long, just the feel of him pressing against her belly through his clothes already had her shivering. And wowzers, did the man ever know how to kiss.\n\nSo lost in the taste of him, when he finally lifted his head and smiled into her eyes, she had to give her head a shake to try and snap out of it, so she could even comprehend what he was trying to say to her. As he traced a finger along her jaw, admiring her pretty face up close, he told her, \"I was thinking I should order us some dinner, so we can get to know each other a little more as we eat.\"\n\nTouched at his thoughtfulness, and that he was willing to wait, Claire smiled back. Deciding she liked that he wasn't planning to just strip her off, give her the old 'wham bam, thank you ma'am' and then show her the door. Seems he was a little too classy for that, which she'd already guessed.\n\nReluctantly Greg let go of her and walked over to the coffee table to find the room service menu, asking her as he went, \"So, anything you don't like?\"\n\nWhen he looked up, Claire waggled her eyebrows playfully. \"No, I think you'll find that I'm pretty adventurous.\"\n\nNow that was something he was glad to hear. He grinned. \"So, I guess that means we can try a little of everything tonight?\"\n\n\"Pretty much,\" she agreed, biting into her lip, wondering exactly what he had in mind for her.\n\nWith that thought filtering through his brain, he had to fight to concentrate on the menu, because now all he could think of was taking her every way his dirty little mind could imagine. And since he'd pretty much tried it all, there were a lot of things he knew she might enjoy, hopefully as much as he would.\n\nFinally, too wound up to even care what they ate, he gave up trying to make sense of the menu and told the kitchen just to bring them a sampling of their best dishes, along with some of their finest red and white wines and a magnum of champagne. If they were going to do this, and only do it once, he decided they might as well do it right.\n\nSeeing Claire still staring awestruck at the view outside, once he hung up the phone, unable to resist, Greg came up behind her, took her hands, trapped them over her head and blanketed her body with his, pressing her against the window, with his erection hard against her gorgeous ass. And as his lips traced a leisurely path along her neck to her ear, he smiled at the way she began to quiver. So responsive, he knew it was going to be good with her, which already had him wondering if he might need more than just one night with her to get his fill.\n\nClaire's eyes fell shut at the delicious feel of his rock hard body pressed tightly to hers. Already he had her trembling, the slow exploration of his hands nearly driving her out of her mind, never mind the tricks he was playing with his wicked mouth, lashing at her ear, along her neck and teasing at the corner of her lips.\n\nJust knowing the city was humming beneath them, and not a soul would even notice what they were doing, made it feel so much more erotic. As he slid her skirt up to her hip and began to smooth his hand along her outer thigh, her mouth fell open and her chest began to heave, her breaths coming closer and closer, she could feel her panties beginning to flood. Damn, she'd never felt more turned on in her life, and she had a feeling it had a lot to do with the sheer illicitness of what they were doing, with her practically on display for the whole city to see while he took his time exploring.\n\nAs he cupped one of her breasts in one hand, and slid his hand over her mound with the other, gently massaging her through her panties, she just about came, sure she'd never experienced anything hotter.\n\nFrom the moment she'd set eyes on him, when he'd wandered into her job interview, and shocked her with how playfully he'd smiled into her eyes, she'd always had a bit of thing for him. Especially after he'd picked up her CV and nodded looking impressed as he read it over, and really floored her when he'd suggested the HR manager hire her on the spot.\n\nAfter that first meeting, she'd noticed the teasing glint in his eye whenever he spoke to her, usually as they exchanged pleasantries passing each other in the hallways. So naturally, she'd enjoyed doing a little flirting, too. But despite the little sizzle in the air whenever he was around her, never in her wildest dreams had she ever envisioned them getting together like this in a hotel room, preparing to mate like bunnies.\n\nHe was just so hard against her ass, all she could think of was getting out of her clothes to sate the burning need he'd ignited in her that was nearly setting her ablaze. The way he suckled her ear lobe and began to slide his hand up over her breasts, tugging at her nipples through her blouse, she wondered if they'd even make it to his bed before he made her lose it. No one had ever got her tingling this fast or as hard before; already he had her so close she could almost taste it. Her poor pussy feeling like it was starting to ignite, all she knew was that she needed desperately for him to help her put it out.\n\nAnd to think they were still fully dressed, and all he was doing was running his hands over her body and teasing her with the warmth of his mouth. So she had a pretty strong feeling that once they got their clothes off, he'd nearly burn her alive.\n\nIt was all turning out to be so much more than she ever imagined. The quick little fling with the boss she'd agreed to was becoming the wildest thing she'd ever lived through -- providing she even survived.\n\nHe had her practically clawing at the window, sending a shudder racing through her as his warm breath whispered against her ear, \"Mmm, now I wished I'd told the kitchen to bring the food a little later, because what I'm hungry for is right in front of me, and I'm not sure I can wait.\"\n\n\"Then don't,\" she told him, shamelessly grinding her ass against every long hard inch of him, smiling at the deep throaty groan that escaped him as she delighted in teasing him right back.\n\nBut when he suddenly let go of her and stepped away, Claire felt not only bereft, but felt a chill run through her, already missing his warmth, wondering why he'd stopped.\n\nWhen she turned to face him, to try and figure out what made him step away, heaving a shaky breath, he said, \"I think we should eat first, and then,\" he grinned, \"we'll have the whole night to enjoy each other, knowing we won't be interrupted.\" And just to be sure, he took out his phone, and staring right into her eyes, made a point of turning it off and tossing it aside.\n\nAll he knew was once he got her naked, there was no way in hell he wanted anyone to disturb them, because right now, nothing else mattered as much as what they were about to enjoy together.\n\nBelatedly, his better judgement finally kicked in and he cocked an eyebrow and said, \"Just to be clear, you're okay with this, right? And I'm not going to be accused of pressuring you into doing anything that you didn't want to do.\"\n\nClaire's grin was positively devilish as she sauntered her sexy ass over to him, cupped his face in her hands, smiled into his eyes and told him, \"I assure you, that I'm right where I want to be with my eyes wide open.\"\n\nChuckling, he loosened his tie and tugged it off, playfully waggling his eyebrows. \"Well, at least for now they're open. Maybe I'll blindfold you later, for a little extra fun.\"\n\nClaire rolled her eyes, fighting back a shiver, wondering just how wild it was going get with a stud like him. Not that she was totally inexperienced. At twenty-four, she'd had a few men in her life, but never one that she knew would know every last thing that could possibly be done to a woman to make her scream his name.\n\nTaking her by the hand and leading her over to the couch in the sitting area, he told her, \"Why don't I get us a drink, while we wait for our dinner to arrive.\"\n\nWalking over to the bar, he let out a shaky breath. Sure if he hadn't decided to step back and slow things down, he knew he'd have been tempted to just hike up her skirt and take her right against the window, and to hell with dinner, he wanted her so badly. But now he needed a drink just to calm his nerves.\n\nClaire gladly accepted the single malt scotch he poured for her, imagining a little liquid courage might help her get through whatever it was he had planned for them, though truth be known, she could hardly wait to find out.\n\nThough he took a seat at the far end of the long, cream leather couch, with his arm resting across the back, obviously trying to cool things down, the air felt so thick with sexual tension, she could actually feel it cracking between them. And as she eyed him over the rim of her glass, she wondered if they'd race through dinner, just to get to dessert. Because what she was really craving now was a taste of him.\n\nTossing back a long swig of his scotch, Greg took a deep steadying breath to try and calm his racing pulse, before he asked, \"So where is it you're from, Claire?\"\n\n\"A little place I'm sure you've never heard of in Wisconsin.\"\n\nHe smiled. \"You never know, my ancestors settled in Wisconsin when they first came here from Norway, over a hundred years ago.\"\n\nShe looked at him surprised. \"Really? I just imagined your roots were in New York.\"\n\nHe shook his head. \"No. It's where we live now, and where my father set up the head office once the company started to expand into what it's become. But my family always took summer holidays and went for Christmas back in Wisconsin, where I've still got a lot of family, though mostly extended.\"\n\nShe pulled a comical face, at the thought of possibly getting it on with a cousin. \"Yikes. Then I just hope we're not related.\"\n\nHe chuckled, swirling the amber liquid in his glass. \"Believe me, so do I.\" He tipped his head, looking her over. Now that he realized how easy she was to be with, she had him curious to learn more. \"So, have you got a lot of family back home?\"\n\nShe laughed, rolling her eyes. \"Have I ever. I'm the youngest of seven and the only one who's not attached. So, I'm not exactly eager for the all questions about why I'm still single to start up again the minute I get home. My oldest sister actually took me aside at Thanksgiving and quietly told me that the family would still love me if I was gay, if that's the reason I've never brought a guy home.\"\n\nAt first Gabe laughed, but then he studied her a little more closely. \"But you can't be that old.\"\n\nShe shook her head, setting her glass down. \"I just turned twenty-four. But my three sisters were married by my age, and they've all started families. The oldest one's got three with one on the way. And my older brothers have three kids each, so obviously I'm the slacker in the family, being the only one single with no prospects.\"",
        "About to turn thirty-six, he hoped she wouldn't think he was too old for her, because he didn't think so. She was so bright and articulate, and easy to talk to she seemed more mature than a lot of women in their thirties he'd dated.\n\nThen he wondered if she was seeing anyone. \"So, there's no one in your life right now that you could take home, just to get the heat off?\"\n\n\"No,\" she said, looking straight into his eyes. \"Because if there was, I obviously wouldn't be here with you now, would I?\"\n\nHe nodded, pleased to hear that she wasn't the type to cheat, since he'd been burned by that before, and it was one thing he hated.\n\nThen he smiled, and told her, \"Funny, I thought I came from a big family, seeing as I'm the second eldest of four. And since all three of my sisters are married with kids, I know what you mean about getting the third degree about when I'm planning to settle down every time I go home. But Christmas has got to be the worst, since everyone but me has got kids who really get into the holiday, squealing over their toys and making everyone laugh, while I just sit there and smile. Of course I love my family, but I just wish they'd back off and quit trying to convince me that it's time I got serious and got myself married so I can start a family, like my sisters. And of course produce a Hanson heir to carry on the name and follow me in the family business.\"\n\nClaire nodded. \"I hear you. Last Christmas my eldest niece, who just turned nine, told me she was sorry to hear I was an old maid, and I couldn't believe my ears, considering I'd only just turned twenty-three!\"\n\nChuckling, he said, \"Then you must have been pretty young when you finished college.\"\n\nShe took a swallow of her drink. \"I was. I graduated high-school at fifteen, having skipped a few grades, and I couldn't wait to start my studies at college. I think it's the only reason my family hasn't tried too hard to match me up with anyone from back home, since I'm the only one in the family who's gone on to get my master's degree. And I guess they know I enjoy having a career, and that I'd never be happy living my life on a farm like the rest of them.\"\n\nImpressed beyond words, taking another sip of his drink, he eyed her a little more closely. Gorgeous, funny, sexy as hell and incredibly bright; turns out she really was the whole package. And if possible, he was finding himself even more intrigued by the little ray of sunshine he'd always enjoyed making small talk with, whenever they'd bumped into each other at the office.\n\nBut before he could say another word, there was a knock at the door, and then their food was being wheeled in.\n\nClaire's eyes went big when she noticed the cart was loaded top and bottom with too many dishes to count. \"Are you serious? This can't be all for us.\"\n\nGreg shrugged, trying not to laugh at the look on her face. \"Couldn't decide what to order, so this way we get to try a little of everything.\"\n\nBut then she smiled when she noticed the whimsical sprinkling of tiny candy canes scattered around the tray, a thoughtful little homage from the kitchen for the holiday. But they were soon forgotten when her stomach started to growl the moment Greg came back from tipping their server and began lifting the domes off all the different dishes, filling the room with one delectable aroma after another.\n\n\"Wow, everything just looks so good, I don't know where to start,\" she said, wondering if they'd collapse into a food-induced coma after chowing down on such a massive feast, without ever making it to bed.\n\nHe pulled out a chair at the small dining table for her, dropped a kiss on the top of her head, and suggested, \"Then just try a little of everything, I'm sure it's all good.\"\n\nHe was right about that, seeing as she shamelessly moaned over every bite. The prime rib was the most tender, tastiest slice of beef she'd ever had. And the chicken in a creamy mushroom wine sauce was so good she almost came in her pants. And the fork-tender lamb, covered in a delectable mint sauce, had her eyes rolling, it was just so amazing. The mashed potatoes were so creamy, and all the vegetables were perfectly cooked and seasoned. But it was just so much food she knew they'd barely be able to put a dent in it, before they were full.\n\nBy the time Claire finally put her fork down and pushed her plate away, deciding she couldn't possibly eat another bite, she laughed noticing that Greg was making a face and doing the same. \"It was good though, wasn't it?\" he said, reaching for his wine to wash it down.\n\nShe nodded as she wiped at the corners of her mouth with the white linen napkin she had in her lap, still rolling her eyes, just thinking about how good it all was as she patted her tummy. \"Definitely the best meal I've ever had. But I don't know how I'll ever be able to dig into another yucky frozen dinner when I get home to New York again, after feasting like that.\"\n\nAs Greg topped up her wine glass, he wondered if she'd consider seeing him again when they got back home. Surprised to discover she was delightful enough to enjoy even with her clothes on. He wondered if just maybe they could spend some time together that didn't necessarily have to involve sex.\n\nWhich was something he seldom did, was enjoy a woman without hoping for the evening to end with them tangled in the sheets, and banging each other silly, mostly because he hadn't had time for a relationship in years. Not that he intended to turn down the chance to get naked with her now, but for some strange reason it occurred to him that she was getting to him in ways no other woman had before, like they'd known each other forever.\n\nCasting his gaze from the top of her head to the tips of her toes, he thought it could be because she was so easy to be with, and wasn't going out of her way to try and be sexy, because she just was.\n\nHe eyed the last covered dish, wondering if he should bother with it. \"You have any room for dessert?\" he asked as he lifted off the top and eyed a plate of delectable looking sweets. \"Because I also got us a dessert platter that looks like it's got a little sampling of everything: fresh fruit salad, cherry cheesecake, some kind of chocolate fudge thing, a fruit flan and cr\u00e8me brulee, that we could share.\"\n\nClaire looked at him like he'd lost his mind. \"You have got to be kidding. If I eat even one more bite, I think I might actually explode -- no joke.\" She pointed at him. \"And you would be one that would have to clean it up.\"\n\nGreg chuckled and put the cover back on the dessert platter. \"Maybe later, then.\"\n\nRolling her eyes, heaving a few breaths, still patting her stomach, she nodded. \"Much later, like maybe sometime next week providing I'm still not feeling this stuffed by then.\"\n\nSeeing as they were a little too full to do much more than try and digest what they'd eaten, Greg reached for the remote and put on the TV, and smiled when he noticed it was the classic, \"A Christmas Story.\" Then he laughed when he saw it was the iconic scene with the leg lamp that the father was trying to convince his wife was perfect for their front window. \"Oh, wow, I love this movie, and I haven't seen it in years,\" he told her, and took a seat on the couch, patting the spot beside him so she'd come and join him.\n\nClaire had gotten so comfortable with him, without even thinking, she curled into his side and he hugged her close as they both enjoyed the movie. Looking down at her, wiping at her eyes, at one really funny scene, he decided he really liked her infectious laugh, not a supressed little giggle, but a full belly laugh, which had him in stitches, laughing right along with her.\n\nTill finally when it was over, they looked at each other, and could tell they were both wondering how they'd managed to spend the whole evening together doing nothing more than enjoying each other's company, while still fully clothed.\n\nBut since they'd both been pretty eager when they'd first got in the room, and he hadn't forgotten why he'd invited her up, Greg leaned in, tipped up her chin, touched his lips to hers and asked, \"So, are you ready for bed?\"\n\nSmiling into his eyes, she nodded, tracing a finger down over his nose, and circling his gorgeous mouth with the tip of her finger, she told him, \"Yes, definitely.\"\n\nRelieved, Greg stood up, took her by the hand and led her into the bedroom. Then he smiled into her eyes once they'd reached the bed, and told her, \"You know, I had such a good time with you tonight, that this feels like icing on the cake.\"\n\nClaire stepped into his arms and wrapped her arms around his waist, and whispered against his lips, \"I know just what you mean. I had a really nice time with you too, and I'm glad you invited me up.\"\n\nHe tipped his head, looking down at her. \"But you still want to get naked though, right?\"\n\nShe laughed. \"Oh, yeah. I think that goes without saying. Because there's no way I'd be happy going back to my room, without discovering what we'd be like together.\"\n\nHis kind of woman, not shy about telling him what she wanted, especially seeing as he wanted the same thing -- to get them out of their clothes so he could finally explore all the secrets of her gorgeous body.\n\nBut since he hadn't turned off the light on the nightstand, they coyly smiled into each other's eyes as they stripped each other off. As he pushed her white silk blouse off her shoulders, looking straight into her eyes, he told her, \"You know I really like you, Claire.\"\n\nWarmed by his words, she smiled, feeling the same way about him. \"And I like you, too. To be honest, I never thought we'd have so much fun together just hanging out. Now I'm glad I decided to just go for it and come up here with you.\"\n\nHis gaze dropped, and it finally occurred to him that she was standing in front of him in only a white lace push up bra, that gave her the most amazing cleavage, and a tiny pair of white lace panties that had his dick thickening just at the sight of her. And he knew he'd never wanted anyone more than her right now. Not only was she the sexiest woman he'd ever seen, and undoubtedly the most beautiful, knowing her the way he did now, what they were about to do suddenly felt like something more than just sex. It felt like they'd be connecting on a whole other level. And he could hardly wait to discover just how good that would feel.\n\nHis eyes on hers, he tugged her into his arms, and took his time savoring her lips, sliding his hand into the back of her panties he squeezed her ass, groaning as she circled his thigh with her leg, grinding herself against his erection. Damn, though he'd been with plenty of women, it struck him that it had never felt this good before, just to be able to kiss her and hold her. And now the anticipation of finally getting inside her was almost killing him.\n\nSo naturally the feeling of her slipping her hand between them, cupping him in her hand, and starting to stroke him up and down, had his eyes rolling all the way back in his head. For some reason, just knowing it was her hand, felt a million times hotter than he ever dreamed. Never in his life had he ever been as aroused or more stoked to finally get it on, and now that it was finally going to happen and they were about to make love, he knew he'd never felt so ready.\n\nAs he filled his hands with her breasts, teasing her nipples with his thumbs, Claire happily moaned into their kiss. There was just something about him touching her that just felt so incredible, like a whole new experience. It was like he already knew her body, and just what she liked.\n\nReaching behind her, he unclipped her bra, letting it fall to the floor. Gazing down, his eyes popped at the sight of her gorgeous full round, perky breasts, her dusky pink nipples standing proudly erect, practically begging for his mouth, he muttered without even thinking, \"Damn, Claire, you've got to have the prettiest tits I've ever seen,\" and she laughed.\n\nBut when he dropped to his knees, keeping his gaze on hers as he slid her panties down over her legs, groaning at the sight of her tight little pussy with the most delightful little tuft of golden curls on top, her breath caught in her throat and she stopped laughing.\n\nParting her thighs, lashing out his tongue, as he sunk into her deep, teasing her with little flicks, gently suckling at her clit, she had to hang on tight to his shoulders just to keep from collapsing, sure she was about to come where she stood, what he was doing just felt so insanely good.\n\nSlamming her eyes shut, breathlessly licking her lips, she couldn't believe how everything just felt so much hotter with him. And now she couldn't wait to find out how good it would feel when he finally filled her up with what was straining against his boxers, seeing as he already had her moaning out loud and her legs trembling as he took his time, feasting on her pussy.\n\nLordy and he knew just what to do with her, too. Sliding two fingers inside her, giving her a nice little finger fucking, the way he suckled at her clit, with teasing little flicks all around it, was enough to have her nearly ripping out his hair. Every inch of her shuddering, her heart nearly beating out of her chest, throwing back her head, she screamed his name and came all over his tongue. Clinging to his shoulders, trying to remember how to breathe, she'd shocked herself because she'd never screamed like that in her life.\n\nSavoring every drop she gave him, Greg smiled as he looked up in awe at the way she was shivering, deciding that seeing her fall apart like that had to be one of the most beautiful things he'd ever seen, and definitely the hottest. Desperate to hold her, he got to his feet, wrapped her in his arms and slid his tongue into her mouth, letting her have a taste of herself as he ground his erection against her. As the kiss went on and on, neither of them wanting to pull apart, worried she was getting him so pumped that he might not make it inside her before he lost it, he finally pulled back. His voice gruff, he told her, \"I've got some condoms somewhere in my luggage, but I swear I'm clean, so we can go without if you're okay with that.\"\n\nAnxiously nodding her head up and down her chest still heaving pretty hard, Claire whispered breathlessly, \"I'm clean too, and I'm on the pill, so no worries.\" All she knew was that she wanted him inside her -- and she wanted him now.\n\nRelieved, softly chuckling, he rolled his eyes, picked her up and carried her over to the bed. And the moment he had her on her back with her legs parted, he knew he'd found perfection. As he stroked his erection in his hand, she just looked so beautiful and so unbelievably sexy with her lips parted and her full breasts heaving, he wondered if once he got himself buried inside her, if he'd ever want to pull out.\n\nAnd damn, he was right. The moment he sank into her hot little pussy, sliding his tongue into her mouth, he held himself still for a moment, just to savor the feel of her. She just felt so good, so tight and warm around him, it was like she was made for him, and he realized one night with her would never be enough.\n\nSmiling into her eyes, he told her, \"You feel amazing.\"\n\nClaire ruffled his hair, grinning. \"And so do you.\" And did he ever, seeing as she'd never felt so overwhelmed or as overjoyed being with anyone before.\n\nTaking his time, Greg pressed kisses to her lips as he slowly slid into her body and then eased his back out, blown away by how incredible it felt to be with her like this. Somehow it felt like so much more than just sex, and already he knew he wanted more.\n\nWhen she started whimpering into their kiss, squeezing her legs around him, digging her heels into his ass, urging him to take her even deeper, with his weight on his hands, his heart pounding, he picked up his pace and gave her all he had. The feel of her warm, soft body wrapped around him, tightly clenching him deep inside, over and over like a warm, tight glove, it didn't take long till they were both shuddering and moaning as they came together in a rush.\n\nGreg kissed her hard on the mouth, both of them trembling, he felt himself letting go as the most indescribable wave of pleasure washed through him, shooting right down his spine. He thrust his hips and stilled, feeling himself pulsing inside her, he muttered, \"Damn, this feels perfect with you, Claire,\" and she just grinned, nodding her head, too overwhelmed to even answer. Smiling into her big green eyes, he knew she had to be the best he'd ever had. And he just couldn't imagine this being a one-time thing.\n\nStill slightly shivering, when she finally caught her breath and said, \"Wow,\" he laughed and nodded his head in agreement, because he felt so blown away, that he hated to pull out and lose the feeling of having her so close.\n\nEventually he reluctantly rolled to her side, took her hand and pressed a kiss to her fingers. Staring up at the ceiling together, their chests slightly heaving, neither of them said a word, too overwhelmed to even voice what they were feeling.\n\nAfter she'd gone into the bathroom and cleaned up, taking a moment to admire him, Claire smiled at the sight of him on his back, looking very relaxed and pleased with himself with his hands behind his head, the rumpled sheet barely covering his package, with a sexy dusting of golden hair trailing a path from his chest to his abs, she decided he had to be the sexiest man alive.\n\nBut suddenly feeling a little awkward, she shrugged and murmured, \"Well, guess I should be going,\" since she imagined he was done with her, and would expect her to go back to her room.\n\nGreg sat up in bed, a little surprised that she wanted to leave. \"Why not stay and sleep with me tonight, because there's plenty of room in here for two.\"\n\nShe bit into her lips. \"I don't know, I thought this was...\"\n\n\"What? A one and done kind of deal? No way.\" He patted the bed beside him, smiled and said, \"I'd love to wake up with you in the morning, Claire, unless you're trying to tell me that you'd rather go back to your room.\"\n\nShe shook her head, and started to grin. \"Actually, I'd love to wake up with you, too.\" And when he pulled back the sheet for her, she crawled in beside him, touched her hand to his chest and pressed a kiss to his lips, happily sighing as he wrapped her in his arms. At least they'd have one more night together, and tomorrow she'd be off to see her family and he'd be going to see his.\n\nAnd then once they got back to work after the holidays, Claire imagined that would be it, and it would be over.\n\nBut when she woke up in the morning, tucked in nice and close, smiling at the feel of him hard as a brick against her backside, she also got the feeling that he'd watching her sleep for a while. And when she opened her eyes, turned her head and realized that she was right, she smirked. \"How long have you been watching me sleep?\"\n\nHe pressed a kiss to her temple. \"Not long, only a half hour or so. But I had an idea, and I hope you don't think it's too crazy. When does your family have their Christmas dinner?\"\n\nShe blinked, looking confused. \"Tonight, Christmas Eve, why?\"\n\n\"Well, I was thinking, since my family does the turkey on Christmas day, what would you think if I went home with you and pretended that I was your boyfriend, so that your family lays off you about finding someone? And then you could return the favor, by flying home with me for Christmas day and we could tell everyone that you're my girlfriend, to get the heat off me.\"\n\nClaire blinked a few times, wondering if she'd heard him right. Leaning on her elbow, she looked up at him. \"I think I'm still half asleep. You want to run that by me one more time? Because I could have sworn you just suggested that we should try and fool both our families into thinking that we're involved with each other.\"",
        "He smiled, running a finger across her bare shoulder. \"That's it in a nutshell. Nobody gets hurt, we both get to see our families without having to get grilled about why we're still single, and everybody goes away happy.\"\n\n\"Except that we'd be lying to everyone, and at Christmas.\"\n\n\"Well, the other thing I was going to ask is what you'd think of us seeing each other once we get back to New York.\" Stroking a finger over her cheek, he brushed his thumb across her full bottom lip. \"I really like you, Claire, and I think we'd both enjoy spending some more time together. So we wouldn't really be lying if we've got plans to see each other again, because that's what couples do, right? They go out, have some fun, and of course enjoy sleeping together.\"\n\nShe stared at him for a minute, trying to think it through. \"You really think it would work?\"\n\nBrushing back the hair from her eyes, he shrugged. \"Can't see why not. And it's not like we'd have to fake that we like each other, because we do, right?\" He tugged at her nipple, laughing at the way she shivered. \"So, what do you say?\"\n\nClaire rolled her eyes, seeing as he had her pussy already tingling, just from his touch, obviously she more than liked him. \"Well, then we'd better get our stories straight. How long have we been seeing each other?\"\n\n\"A month?\"\n\nShe nodded. \"Yeah, a month would work. Because when I went home for Thanksgiving just over a month ago, they asked and I said I wasn't seeing anyone, then.\"\n\nHe pulled her onto his chest, smiling up into her eyes he kissed her chin. \"But then we noticed each other at work one day and just hit it off, and now we're crazy about each other. How does that sound?\"\n\nClaire grinned, because they really had hit it off, and she more than just liked him, so she wouldn't have to fake that.\n\nWith that settled, deciding she looked a little too tempting to resist, Greg nudged her legs apart, and when he stroked his hand over her damp little pussy and realized how wet she was, he flashed her a devilish smile. \"You know one of the perks of waking up together has got to be morning sex.\"\n\nWith a little smile on her lips, Claire wrapped her arms around his neck and tugged him close, pressing her lips to his, delighted to be enjoying a little more sexy fun before they had to check out to catch their plane. Because one thing she knew for sure, they wouldn't be sleeping together under her parents' roof. They were too old school for that, especially since they weren't even engaged and supposedly had only been seeing each other for a month.\n\nShe broke the news to him at the airport as they waited for their flight to be called. Wincing a little, she said, \"Um, just so you know, seeing as we're just supposed to be dating, especially for only a few weeks, my parents will expect us to sleep in separate rooms.\" Then she tried not laugh at the disappointed look on his face at thought of them sleeping in separate beds, especially after the wild night they'd just shared.\n\nFinally, resigned, he shrugged. \"Okay.\" But then he grinned, a very naughty grin as he informed her, \"But just so you know, my mother will be fine with you sharing my old room with me.\"\n\nClaire laughed, and heaved a sigh. \"I can't believe we're actually going to do this.\"\n\nReaching out, he covered her hand with his. \"It'll be fine. This way we both get to see our families without the hassle of having to explain why we're still single.\"\n\nClaire nodded and squeezed his hand. Of course he was right, but she still hated the idea of deceiving everyone, especially with them all together for Christmas.\n\nShe slept a little on the plane, with her head resting on his shoulder. And when the plane started the decent to land at Minneapolis-Saint Paul Airport, Greg dropped a kiss on the top of her head and told her, \"Hey, wake up sleepyhead, we're about to land.\"\n\nClaire blinked trying to figure out where she was. Then she smiled when she noticed he was close enough to kiss, so she did just that, happily pressing her lips to his, since she knew they'd have to resist the urge to do much more than hold hands in front of her family.\n\nAnd she liked the way he almost pulled her into his lap, when he really got into the kiss. Already she knew she was really going to miss him when it was over.\n\nAs they drove the rental car toward her family's farm, Claire told him the names of everyone, and explained that her family had been dairy farming in the area for well over a century. Greg nodded looking impressed as he tried to commit it all to memory. But he imagined once they got there, and he could put faces to the names, it would be easier -- at least he hoped.\n\nThe instant they pulled into the driveway, Claire's face broke into a smile, glad to be home for the holiday, and to have Greg at her side. The house just looked so warm and welcoming, and it really felt good to be back.\n\nThey'd barely stepped inside the big white farmhouse, with the festive red-ribboned wreath on the door, when her mother, with her silver-streaked brown hair up in a bun, wearing a pretty red dress and white apron, instantly laughed and pulled her in for a hug. Her mother smiled at him over her shoulder, as Claire tried to explain, while she almost squeezed the life out of her, that she was with her new boyfriend, Greg.\n\nThe instant her mom let go of Claire, Greg was pulled in for a big, warm hug, too. And her mother seemed to like him on sight, at least from the way she was smiling and squeezing him just as tight, was any indication, as she murmured, \"It's wonderful to meet you, Greg.\"\n\nClaire smiled to herself when she noticed her three sisters standing around grinning at the handsome man their kid sister had brought home for the family to meet, and at Christmas, no less.\n\nSuddenly, realizing that Claire had arrived, eager to see her, everyone seemed to come out of nowhere. And in no time the big farmhouse kitchen was full to bursting, with over thirty of them, laughing and talking all at once, counting all the kids that wanted hugs, making Greg realize that he wouldn't have a hope in hell of remembering all their names.\n\nExcept for one adorable little red-headed girl with big blue eyes, clad in a festive green velvet party dress, and shiny new black patent shoes, who patted his thigh, looked up smiled and introduced herself. \"I'm Reesa, and I'm four, what's your name?\"\n\nCaptivated as much by her pretty smile as the inquisitive look in her eyes, Greg stooped to her level shook her little hand, and told her, \"I'm Greg, your aunt Claire's boyfriend, nice to meet you, Reesa.\"\n\nShe nodded for a second. Then rocking on her heels asked him, \"You wanna go make a snow man with me later?\"\n\nReesa's father David, Claire's oldest brother, laughed and scooped her into his arms. \"This one's chatty, and a little precocious, so be warned.\" He extended his hand and gave Greg a firm handshake and told him, \"And I'm David, Claire's oldest brother, good to meet you, Greg.\"\n\n\"Good to meet you, too.\" He leaned in, and murmured in David's ear, \"But just between you and me, I have no idea how I'm ever going to remember all these names.\"\n\nDavid chuckled, and quietly whispered back, \"I can hardly remember them all, and I see them all the time. So no worries, just smile a lot and they'll be happy you came.\"\n\nGreg nodded and decided to take his advice, plastering a smile on his face as Claire began the round of introductions. And when she finished with, \"And everyone, this is my boyfriend, Greg,\" the warm way he smiled into her eyes at the sound of her of her calling him her boyfriend, had her grinning from ear to ear, and everyone else looking around and coyly smiling at each other, because it looked like they were very much in love.\n\nHer mother finally broke the silence, telling them, \"Well, you two are just in time, we're just putting out lunch,\" pointing at all the covered dishes sitting on the long kitchen counter, as well as the center island. Your father's still out in the barn with your brother Scott, checking on the cows, but they should be in soon.\"\n\nWhen Paul, Claire's youngest brother, walked over to shake Greg's hand, smiled leaned in and said, \"Nice to meet you, Greg. And don't let this crowd scare you, they're all pretty friendly.\" Greg decided he could relax, since he already felt like he'd been welcomed into the clan.\n\nBut then his eyes popped when he got a look at the array of food spread out, that looked like it was enough to feed an army. Though it was simple fare, it all looked pretty tasty and smelled even better. And since he couldn't remember the last time he'd enjoyed a home-cooked meal, he could hardly wait to dig in. But there was just so much of it: a big pot full of steaming meatballs, another of bubbling baked beans, a tray of macaroni and cheese, about a dozen different kinds of salads, a huge ham covered in pineapple rings, and a foot-long baked salmon with dill sauce, along with breads and cheese, all kinds of casseroles, veggies and dips, and even more still stuff being hauled out of the fridge and oven.\n\nAs Claire handed Greg a plate, she leaned in and whispered, \"Just remember, this is only lunch, and in a few hours we'll be expected to eat a turkey dinner with all the trimmings. So if I were you, I'd just graze.\" When he rolled his eyes at the prospect, she laughed and whispered into his ear, \"Kind of reminds you of the feast from last night, huh?\"\n\nThough he nodded, seeing as her family were all laughing and teasing each other, and obviously having a lot of fun together as they filled their plates, the house just felt so warm and inviting, that he was glad he could be a part of it. As he helped himself to the different dishes, he could see the food had been made with love, probably with everyone chipping in, and decided that this would be even better than what they'd enjoyed the night before, since they'd be sharing it with her big happy family. And he'd bet it would all be really good, too.\n\nIt made him feel kind of nostalgic to be sharing a real home-style family dinner, just like he remembered, with two long tables set up with her mother's best china and glassware on a red embroidered table cloth in the dining room, and two others set up for the kids.\n\nClaire was just glad that Greg was seated beside her, so that he wouldn't get stuck answering a lot of questions on his own, though she imagined there'd still be a few.\n\nJust as they were sitting down, her father and brother came in from in the barn, shedding their outerwear, with a dusting of snow on their eyebrows, rubbing their hands together, looking all rosy cheeked from the cold. Of course, as he always did, before he did anything else, her dad went over and kissed her mother hello. And after Claire had introduced them, they both came around the table and gave Greg a hearty handshake, her father telling him, \"I'm Jonas Olson, the head of this clan. Good to meet you, Greg, and welcome to our humble home.\"\n\nAfter her father took his seat at the head of the table, bowed his head and everyone gave thanks, they all dug in and enjoyed the food as well as the conversation, with Greg joining in, like he'd known them forever. Of course as a boy, when he'd visited his family near here, it was a lot like this; loads of relatives, lots of good food, plenty of lively conversation and a lot of teasing and laughing. And he found that he was really enjoying himself, glad now that he'd suggested he come with her to share this special day with her, even if they weren't being entirely honest about why they were together.\n\nBut as he watched Claire catching up with her sisters, he wasn't too sure what she'd think of his family once they joined them in New York. Not that they weren't friendly, but they were nowhere near as warm as hers. Already he'd been made to feel like he fit right in, although they'd only just met them.\n\nAfter he finished the last bite on his plate, he couldn't believe it when the table was cleared and a smorgasbord of delectable looking home-baked sweets was set along the length of the table right in front of him. Leaning close, he whispered into Claire's ear, \"I can't understand how everyone's in such great shape if they eat like this all the time.\"\n\nShe shrugged. \"Well, this is really just for Christmas, and farming's hard work, so they burn it off pretty fast.\"\n\nSpending most days sitting behind a desk at work, he had to stay in shape at the gym, and was still pretty careful about what he ate. But since he did have a sweet tooth, and everything looked pretty tempting, he decided he'd just have to work out a little harder after the holidays and throw caution to the wind and enjoy himself now. Especially because he didn't know if he'd ever get another chance to enjoy a home-cooked feast like this again.\n\n\"Oh, you have to try these, Greg,\" Claire's heavily pregnant older sister Tracy told him, passing him a dish with delectable looking chocolate covered treats. They're so easy to make, but they're sooo good, they're positively addictive.\"\n\nGreg rolled his eyes as he took a bite of the peanut butter and marshmallow chocolate covered treat that literally melted in his mouth. \"Wow, you're right they're really good.\" And then he realized his mistake when he was bombarded with one thing to try after another, since it seemed nearly everyone at the table, even the older kids had made something to add to the meal.\n\nFinally, blowing out a breath, realizing he couldn't eat another bite, he leaned in and said to Claire, \"Do I really have to try and eat a turkey dinner later?\"\n\nShe laughed and touched a finger to the end of his nose. \"Told you just to graze. But dinner's hours away, and since we always go on a sleigh ride after lunch and play in the snow with the kids for a while, you should be able to at least eat a little by then.\"\n\nHe'd have to take her word for it, because right now a nap sounded pretty good, just to try and digest it all. But despite how full he felt, he couldn't remember enjoying a meal more, probably because the company was every bit as good as the food.\n\nClaire's middle sister Lainie, walking around the table pouring everyone coffee, leaned in as she poured hers, and asked, \"You still having trouble with your crazy roommates, Claire?\"\n\nClaire gave her the side-eye, wishing she hadn't asked that in front of Greg. But deciding there wasn't much she could do, she nodded and quietly told her the truth, hoping no one else would hear. \"Yeah, it's gotten pretty bad, so I've been looking for another place to stay. But it's not easy to find somewhere affordable to live in New York.\"\n\nThen she turned her head, glad to change the subject, when her father looked over at them and asked, \"So how did you two meet?\"\n\nClaire smiled at Greg and told him, \"We met and work, and we just hit it off.\"\n\n\"So, I'm guessing there's no policy against fraternizing between employees where you work, then?\"\n\nGreg flashed Claire a secretive smile and said, \"No, there's not.\" Because if there was, he'd sure as hell want to change that policy the minute he got back to the office, now that he was seeing her.\n\nClaire didn't even realize they were just sitting and smiling into each other's eyes, remembering the night they'd shared, after he'd said that. Until her brother David finally cleared his throat and announced, \"Well, the horses are ready, so I guess once we've cleared this up, we should head out for a ride before it gets too late.\"\n\n\"But I don't really have anything in the way of snow gear,\" Greg told Claire as he considered how cold it would be on a sleigh at this time of the year. \"I don't even own a hat.\"\n\n\"Well, I'm sure we can find you something to wear. I've got extra clothes here, so I'll be okay. But we'll get you some boots and a hat and some warm gloves and you should be fine, too.\"\n\nHis voice low and sexy, so only she could hear, Greg nuzzled her ear with his lips, and asked, \"So will you cuddle with me on the sleigh to keep me warm?\"\n\nShivering from the warmth of his breath, she turned and grinned. \"You bet I will. And once we're covered up with a blanket we should be nice and toasty.\" They were talking so close, without even thinking she playfully rubbed her nose against his, and the way he was looking into her eyes, had her forgetting that this whole thing was supposed to be just for show, and that they had an audience watching their every move.\n\nFinally, aware that everyone was looking, she pulled back. But she refused to look around the table, since she was sure that everyone would be grinning at them like fools. Especially her sisters, who'd already told her in the kitchen that they thought Greg was drop dead gorgeous and they could understand now why she'd been so picky, seeing as she'd held out till she found someone as hot as sin to finally bring home to meet the family.\n\nBut Greg was thinking that now that he'd have Claire beside him, cuddled close in a blanket, he was looking forward to going out and facing the cold, deciding that snuggling with her on a hayride might be pretty romantic, though he'd never considered the idea of romance to be such a turn on before. But everything about her seemed to turn him on, even just her smile, especially with the way it lit up her beautiful green eyes.\n\nBut then all of them started laughing when her sister Lainie, with a green elf's hat on her head, dragging a big box into the room, said, \"Here you go guys,\" and began handing out ugly Christmas sweaters for all the men to wear. Greg wasn't spared, and he wound up with a comical Rudolph, with a light up nose. Once he tugged it on, Claire laughed, and said, \"Ooh, now that looks good on you.\" He just rolled his eyes and laughed along with everyone else, happy to be included in the fun.\n\nThen everyone was helping dress the kids, even Greg, who was given scarves to wrap around the faces of all the little ones, after they'd been bundled up and prepared to face the cold, snowy hayride.\n\nThe hay bale covered wooden wagon was long enough to fit them all. And as the six tall, sturdy white-footed chestnut Clydesdale's impatient huffs filled the air, and the festive sound of the sleigh bells circling their necks jingled as they shook their heads, everyone scrambled aboard securing the kids in the safest spots between their parents, before tucking them in with blankets.\n\nHer cheeks a rosy pink, Claire was positively glowing as much from the excitement of riding with Greg as from the biting cold nipping at their noses. He hugged her to his side, both of them grinning at each other as she carefully tucked them in up to their chests in a big red plaid blanket. \"You'll enjoy this,\" she told him as she leaned her head on his shoulder waiting for her father and brother to get the horses moving once everyone was settled.\n\nPressing a kiss to the top of her head, hugging her a little closer, he told her, \"I already am,\" because being able to hold her close again, even as bundled up as they were, felt pretty sweet.\n\nThough he'd never thought of himself as the type to enjoy something like this, he surprised himself when he realized that he honestly couldn't think of anywhere else he'd rather be on Christmas Eve than tucked in close with her going on a sleigh ride, surrounded with her big happy family. And he couldn't believe that the whole thing was only meant to be a quick fling, just a way to relieve some pressure, as it struck him that he couldn't remember the last time he'd felt as relaxed or as happy.\n\nAnd now he understood why his parents had brought him back to this place as a boy, so that he could enjoy simple pleasures like this away from the hustle and bustle of the city. It really was idyllic, with the wide expanse of brilliant white snow covered open field, and the big red barn surrounded by tall, snow-capped majestic pines, glistening in the afternoon sun.",
        "But he had a sinking feeling that Claire would realize pretty quickly that his mother's Manhattan condo didn't feel nearly as warm, or half as inviting as her family's home.\n\nSurprisingly he didn't feel the least bit cold, cuddled up close to his pretty 'girlfriend,' with their hands clasped together under the blanket, and him clad in her father's insulated snowmobile boots, with a hand-knitted wool hat tugged down on his head and heavy work gloves covering his hands. And what surprised him even more was that he knew he wouldn't mind, if he had a chance, to come back again next Christmas to join in the fun.\n\nBut then he wondered what Claire would think of him looking so far ahead, when they'd only agreed the night before that they might try dating once they got home to New York. Already he knew he wanted more with her maybe even like some kind of a future. Which was not only crazy but something he'd never even considered before, thinking about planning his life with someone else.\n\nHappy just to be able to touch her, he took hold of her chin, turned her face and pressed a kiss to her lips, deciding that showing how much he cared shouldn't look odd to her family, if they were supposed to be involved.\n\nDelighted at his show of affection, Claire just grinned and snuggled in even closer, playfully rubbing her nose against his.\n\nAnd he did like having her close, even if that's all they could have for now. Already he had a feeling that he was getting into her pretty deep, so he told her, \"You know I'm really enjoying myself with you.\"\n\nShe grinned. \"Me, too, this is fun.\"\n\nTruth was, she was fun and sweet and probably the most alluring woman he'd ever been with, for a lot of different reasons that surprisingly weren't only about how undeniably sexy she was. Especially since she was incredibly smart, too, which he also thought was pretty sexy. And a nagging little voice in his head had him starting to think that he'd be crazy to ever let her go.\n\nEveryone cheered the moment the wagon jerked ahead as the horses started up. And as they clopped along circling the barn before heading off on a path that lead out onto the pastures and into the open fields, everything just looked and smelled so fresh and clean covered in freshly fallen snow, that everyone seemed to inhale the clean, crisp pine-scented air all at once. Then kids started a chorus of Jingle Bells, and everyone joined in laughing, a few of them happily singing off-key as the horses took them across the fields. Greg decided then that he was pretty sure he'd be back, and she'd be right by his side, maybe with little ones of their own one day, at least if he could convince her that what they had was real, and there was nothing fake about it.\n\nAn hour later, the sleigh pulled up back in front of the barn, and everyone clambered off, with the kids all giggling, already playing in the snow, tossing around snow balls. Before they all dispersed, her brother Scott hollered, \"Hot chocolate's waiting inside for anyone who wants it, and a couple of us are going to build snow forts and snowmen out in front of the house for whoever wants to join in.\"\n\nGreg smiled down as Reesa waddled over in her snow boots and heavily padded pink snow suit, took him by the hand, looked up into his eyes and said, \"Okay, Greg, time to make a snowman.\"\n\nHe chuckled over her head at Claire as he told her, \"Sure, Reesa, just show me the way.\"\n\nShe nodded, making the little pom-pom on the top of her bright pink hat wobble on her head as she led him around to the front of the house with Claire and two of her sisters following behind them. The three sisters smiled at how cute they looked with big tall Greg being led around the house in adorable Reesa's tiny little mitten-covered hand.\n\n\"I hope you realize this one's a keeper,\" Claire's sister Tracy quietly told her. \"I don't think even when we were first dating Randy ever looked at me the way Greg looks at you, like he just can't wait to get you naked.\"\n\nHer sister Ellie, walking on her other side, nudged Claire with her elbow, leaned in and said in a low voice, \"If I were you, I'd take him out to the barn, and tell everyone you're just showing him around. Then you can have some fun without everyone knowing what you're up to, since I'm sure you'll be sleeping in separate beds tonight.\"\n\nTracy nodded in agreement, and warned her, \"But just remember mating season's not till spring, so be careful, since all of us Olson's are pretty fertile, and two of us got pregnant at Christmas.\"\n\nThough Claire rolled her eyes at them, since she was more careful than that, she still couldn't help but imagine how hot it would be to get Greg out in the barn, where no one could see them, or have any idea what they were getting up to.\n\nBut first things first, they all pitched in and had fun helping Reesa build her snowman, with Claire's mother bringing out a long straight carrot from the kitchen for the nose when they were almost done. And once they had it assembled, Greg got on his knees and helped her pack snow around the base, the waist and neck to make sure it would be sturdy enough to last. And he asked her as they finished, \"So, what are hoping to get for Christmas, Reesa?\"\n\n\"I just want one thing.\"\n\nHe looked down at her. \"And what's that?\"\n\n\"A baby doll with pretty hair and not a bald one.\"\n\nHe laughed and thought she was the cutest kid ever as he helped her get to her feet, since her bulky snowsuit was a little awkward to move around in. Then he lifted her onto his shoulders and stepped in close so she could finish it off by placing an old black felt hat on top of its head.\n\nWhen he stood back, so she could see what it looked like complete with coal for the eyes, and a smile made of stones, with the top hat and green scarf wrapped around its neck; gleefully laughing, she clapped her little mitt covered hands together. Then leaning over, she exuberantly pressed a loud smacking kiss to the top of Greg's head and told him, \"Thank you for helping me, Greg. Isn't he perfect?\"\n\nGreg flashed a smile at Claire and agreed, \"He sure is.\"\n\nSoon her father David came and took his daughter off his shoulders and told her to come and see the fort they were building, probably so Claire could have her boyfriend to herself for a while. Though Greg had actually enjoyed helping her build the snowman, which was something else he never imagined himself doing. And he was really starting to wonder what it would be like to have little ones of his own, especially in a place like this.\n\nBut he knew one thing, if he ever did have kids, he'd be the hands-on-type like her siblings. Doubting that any of their kids were enrolled in things like ballet or piano, mostly just to keep them out of their hair, like his sister's children, who spent more time with their nannies than they did with their own parents.\n\nBreaking away from the group, coyly waving goodbye to her sisters, who were heading inside, Claire took Greg by the arm and said, \"I was just thinking I should show you around, since we'll be gone by tomorrow.\"\n\nHe just nodded. \"Sure, I'd love to have a look around,\" and followed her over to the smaller storage barn, just behind the big red barn that housed the cattle.\n\nBut once she got him in the small heated outbuilding, the sultry smile she gave him had him cocking an eyebrow and starting to grin, wondering what she was up to. Though, he already had a feeling, if she was thinking what he was thinking, since they were finally on their own and away from the prying eyes of her family, he was definitely going to be on board.\n\n\"This smaller barn is where we keep our supplies,\" she told him, running her hand up his chest and stroking his cheek. \"And it's heated to keep the chemicals from freezing, and they use it for calving, too.\"\n\nHe tossed his hat onto a workbench and then his gloves. Keeping his steely gaze trained on hers, his voice low and husky, he murmured, \"Good to know.\"\n\nUnzipping his coat, and tossing that aside too, already feeling himself growing hard, he asked, \"Anything else you do in here?\"\n\nShe flashed him a sexy grin, waggling her eyebrows. \"Well, people have been known to come out here just for some alone time.\"\n\nGreg's grin turned devilish as he closed the distance between them, and started to unzip her coat, murmuring over her lips, \"And what exactly do they do when they're out here alone?\"\n\nPushing up on her toes, eager to have a feel of his big, hard body, running her hands over his chest and down over his abs, she pressed a lingering kiss to his lips. Looking up into his eyes, she whispered against his lips, \"Guess they just enjoy each other... making love.\"\n\nGreg could feel his cock growing painfully hard, and was already scouring the interior for the best place to get her on her back. But Claire was way ahead of him, grabbing a blanket off one of the old stall dividers she tossed it onto the clean hay scattered inside. And he happily followed her as she took him by the hand and led him into the stall.\n\nBut when she tossed her coat aside, then made quick work of her clothes, he blinked. And his pulse started racing when he realized she was standing in front of him gloriously naked, with her long pretty hair loose around her shoulders, her nipples hard as diamonds and aroused enough that he could smell the scent of her sex in the air.\n\nLooking up into eyes, smiling coyly, she licked her lips before she dropped to her knees. And Greg felt like his own legs were about to give out, just thinking about how incredible it would feel to have that pretty mouth of hers stretched tight around him. Never mind how hot she looked going down on him, especially seeing as she was naked as the day she was born.\n\nAs he watched her working at undoing his belt and lowering his fly, running his hands through her hair, staring down at the curve of her pretty ass, he asked, \"You ever bring anyone out here before?\"\n\nWhen she shook her head, smiled up into his eyes, and said, \"No, only you,\" he actually felt his chest swell, knowing that this would be a first for both of them.\n\nThen when she tugged his jeans and his boxers down to his ankles, and his cock sprang free, it almost bounced up and hit him on the stomach she'd gotten him so hard. Greg let out a groan the second she touched him, sure he'd never felt as elated to have a woman lay her hands on him, never mind the thought of how much pleasure she was about to give him with that sexy mouth.\n\n\"Oh, my, you really are a big one, aren't you?\" she remarked, admiring the beauty of him fully erect as she began to stroke him up and down in her hand. Definitely the most perfect specimen she'd ever seen, long and thick and just so velvety smooth, and yet so hard, with a tempting little bead of pre-cum glistening on the tip, that she just had to taste.\n\nSoftly moaning, she closed her eyes and lapped at him, licking him clean, lashing all around him, before she opened up and sucked in the swollen tip that amazingly seemed to grow even bigger in the heat of her mouth as she playfully teased him with little flicks of her tongue.\n\nSure he'd never been as turned on in his life, Greg could feel his heart pounding hard enough to hear it in his ears, practically beating out of his chest. Letting out a guttural groan, he fisted her hair in his hands, convinced he'd never seen anything hotter than her on her knees, with her lips stretched around him, sucking him in a little deeper with every stroke of her wicked tongue. If he thought last night with her was hot, tonight she was practically on fire.\n\nAs she bobbed up and down on him faster and faster, taking him as deep as she could, while gently rolling his balls in her hand, she smiled up into eyes, loving how zoned-out he looked as he flexed his hips and carefully slid deeper into her mouth. She felt just as blown away from the feel of him filling her up, even when he got a little more forceful and fisted her hair a little tighter. Till she could feel the slight sting in her scalp when he pushed in deep, twisting her hair in his hands, he really had her pussy tingling.\n\nWhen he slammed his eyes shut and told her, \"Damn, Claire, I'm going to come so damn hard if you keep that up,\" smiling around him, she just sucked him even harder. But then she let out a yelp, when he suddenly pulled out.\n\nBut he soon had her smiling with anticipation when he grabbed her by the hips, turned her around, and pressed down on her back, till he had her butt in the air. The shock of the cool air sweeping across her wet pussy had her nipples tightening, sending goosebumps racing over her flesh.\n\nJust the sound of his deep lusty voice had her shivering even harder, as he breathed, \"My turn,\" into her ear. On his knees behind her, sliding his tongue over her sex, he groaned as he slid into her with his tongue. Pushing in two fingers, teasing her clit with his thumb, he had her squealing and shuddering so hard, she wondered how many orgasms a girl could possibly survive.\n\nThen before she'd even had a chance to catch her breath, after coming hard enough to nearly collapse, he was clutching her hips, fisting his cock in his hand and thrusting his way inside her.\n\n\"Oh, damn, Greg,\" she cried out, clenching the blanket in her fists, her heart galloping out of control as he gave her the ride of her freaking life.\n\nGrunting and growling behind her, his hands dug into her hips, pushing in harder and deeper with every thrust, flesh slapping against flesh, his sweat trickling onto her back. Clenching the blanket tight in her fists, fighting just to breathe, she knew she'd never experienced anything as hot in her life. Lost in the feel of each other, mating like a rutting bull with his mate in heat, it felt so primal to be so wildly out of control, their bodies driving them to reach that pinnacle where they'd find their release.\n\nReaching under her, teasing her clit with his finger, murmuring, \"Come for me, Claire,\" that was all it took. With one more long hard thrust, she lost it and felt herself flying right over the edge, shuddering and shivering as she rode out the most amazing wave, coursing through her every nerve ending in her body. She had to pinch her lips tight to keep from crying out. Sure she'd never experienced anything like it, so overwhelmed, it felt like her legs were about to give out.\n\nWhen Greg threw back his head, letting out a fierce growl, slammed into her one last time and stilled, the feel of him pulsing inside her as he came, flooding her with his hot seed, sent another small ripple straight up her spine, like a tingly little aftershock making her shiver even harder.\n\nAnd when he wrapped her in his arms, pressing kisses long her back, murmuring, \"Oh, god what you do to me,\" she smiled, feeling the same way about him. Of course every time with him felt like magic. And she hated the idea that as soon as they got back to work that it would probably be over. And they'd go back to just smiling and saying hello whenever they passed each other in the hallway, like nothing had ever happened. Especially after experiencing something as earth-shattering as this, it would be hard to act like all they did was work together.\n\nAfter he'd helped her to her feet, Greg looked into her eyes, tipped up her chin and kissed her. And then reaching for her clothes to help her get dressed, he murmured, \"Damn, that was amazing.\" Smiling at how flushed she looked, he carefully picked the straw from her hair so no one would realize what they'd been up to.\n\nThough she managed a smile, as she looked up at him, she felt a little sad knowing that their time together was probably only going to last for a couple more days, especially when it been so good.\n\nAs he zipped up his jeans, he looked over at her, wondering why she was so quiet, and asked, \"Everything okay?\"\n\nThough she nodded and did her best to look happy, he had a feeling something had upset her, and just hoped it wasn't something he'd done. Not sure if he'd gotten a little too rough, he stepped closer, held her face in his hands, keeping his eyes on hers, he asked, \"I didn't hurt you, did I?\"\n\nHe felt relieved when she shook her head smiled and said, \"No, it was great, I loved it. Guess I'm just a little tired. It's been a long day.\"\n\nNot exactly sure if he should believe her, once they were dressed he took his time and kissed her till she was softly sighing and helplessly listing against him. Then he whispered against her lips, \"Thank you for this, Claire, all of it. I've love coming here to meet your family, and I've really enjoyed seeing the inside of this barn.\"\n\nShe finally managed to laugh. \"Well, I'm glad you enjoyed the tour. But we should probably get back, or they'll be wondering what happened to us.\"\n\nWhen they walked back into the house, the women were all busy in the kitchen and her two sisters, who knew about their little excursion, gave her knowing little grins the moment she stepped inside.\n\nAnd Claire just hoped she didn't look too flushed, or everyone would wonder what they'd been doing.\n\nJust to be on the safe side, once she got her coat and boots off, hoping to cool off, and get the flush out of her cheeks, she took a minute to stick her head in the fridge. Pretending to look for something, she mumbled to Greg that he should join the guys in the family room, where she imagined they'd be watching a movie with the kids.\n\nWith a teasing smile, her sister Tracy came up behind her and said into her ear, \"You planning on keeping your head in that fridge all night?\"\n\nClaire turned and narrowed her eyes on her. \"No. I was just looking for some butter.\"\n\nTracy waggled her eyebrows. \"Why did you forget your lube?\"\n\nClaire laughed out loud, and forgot about the flush in her cheeks. And finally she stepped away from the fridge and got busy helping to put together their dinner.\n\nSurprisingly, everyone was pretty hungry by the time the meal was served. And amazingly the huge thirty-five pound turkey and two big stuffed chickens, with all the trimmings, and another round of pies and sweets were nearly gone by the time they'd finished. Once they'd put down their forks, and pushed away their plates, her father raised a glass and said, \"Merry Christmas to all, and God willing, may we all have a very happy and healthy New Year.\"\n\nEveryone said, \"Cheers,\" and Greg smiled warmly into Claire's eyes as they took a sip of wine, really hoping the coming year would have them turning into a real couple, and they could stop pretending that they were together.\n\nHis father looked over at him, cleared his throat and asked, \"So, what is it you do for the company, Greg?\"\n\nBefore he could think of how to answer, Claire piped up, \"Actually, Dad, Greg runs the company I work for. He's the CEO.\"\n\n\"So you're a Hanson?\" her father asked, looking surprised.\n\n\"Yes. My grandfather started the company before I was born. And I've taken over the helm from my dad who passed away a few years ago.\"\n\n\"Oh, I'm sorry to hear about your father. But you also have roots here, no?\"\n\nGreg nodded. \"I do. And I've still got some family in the area.\"\n\nEveryone seemed a little surprised as they looked around the table at each other, once they realized who he was, since he didn't act like a man who had money. Then her father said, \"I know your family, Greg, and they're good people. And you're welcome here any time you'd like to come. But I just hope your intentions are honorable, since as you've seen, my Claire comes from a much humbler background than yours. And I'd hate to see her get hurt if you decide she's not quite right for someone of your status.\"\n\nClaire's mother shook her head at her husband. \"Jonas, I don't think we should be talking about this, especially tonight. They're both adults, and I'm sure they know what they're doing. And we have no business interfering.\"",
        "Just to reassure them, Greg covered Claire's hand with his and told her father, \"Believe me, I'd never dream of hurting your daughter. And I think you should be proud of her. She's great at her job, and we get along so well that I'm actually hoping we'll have a future.\"\n\nClaire's eyes shot open, shocked when he she heard him mentioning a future for them. And she wondered why he'd tell them something like that, when they both knew once the holidays were over, they probably would be, too.\n\nOf course the conversation went right over the kid's heads. All of them anxiously wiggling in their seats, hoping to get dinner over with so they could open their gifts that sat waiting for them in the living room, under the big Christmas tree, adorned with lots of handmade decorations that all the grandkids had made, and strung with festive popcorn and cranberry garlands.\n\nClaire had ordered their presents online, and had them delivered to the house. But she'd taken a moment to include Greg's name on the gift tags, so that they'd think he'd got them something, too, especially since they'd flown straight from Vegas with no time to shop.\n\nHer mother smiled and mouthed, \"Thank you,\" when she opened the pretty pale pink sweater she picked for her, along with a soft pink and white silk scarf. And once her father had un-wrapped his gift, he laughed at the new GPS she'd bought him, since he didn't know how to work all the apps on the cell phone that he seldom bothered to carry.\n\nBut the children squealed with delight when they opened their presents and saw all the carefully chosen toys she'd picked for each one. And all of them ran over to hug and kiss both Claire and Greg to thank them for everything, especially Reesa, smiling from ear to ear, looking thrilled to bits with her new blonde-haired baby doll carefully tucked in her arms. Then she held it out and let her new friend Greg have a closer look at it.\n\nOnce Greg told Reesa that he thought her dolly was pretty, he whispered in Claire's ear, \"I'll pay you back for everything.\" But she just shook her head, since she'd bought all the gifts before she even knew he was coming. So there was no way she'd let him pay her back. But then she smiled when he said, \"And we should get her a little doll carriage to go with it, too,\" which she thought was pretty sweet.\n\nWhen dinner was finally over and everything was cleaned up and cleared away, the ones that were heading home kissed and hugged everyone goodbye, wishing them all a Merry Christmas, and soon everyone was yawning, deciding it was time for bed.\n\nGreg was given the spare room at the end of long hallway upstairs -- at the opposite end from hers, about as far away as her parents could put him she realized, without making him sleep in the barn.\n\nHer arms loaded with bedding, Claire went in and helped him make up his bed. And once they were done, since they were alone, he took the opportunity to give her a kiss -- a delectably, long slow lingering kiss, that had Claire's knees nearly buckling and her toes curling into the carpet by the time they finally broke apart.\n\nHer breath a little shaky, smiling into his eyes, she whispered, \"I should go.\"\n\nReluctant to have her leave, his hands still on her hips, smiling, he kept plucking at her lips, till she was afraid they'd wind up tumbling into his bed. With his eyes on warm hers, Greg stroked her cheek. \"Guess I'll see you in the morning, then.\"\n\nShe nodded, touched her lips to his one last time and whispered, \"Merry Christmas, Greg.\" After he'd said it back, she turned and left, afraid if they kept kissing she wouldn't be able to resist him.\n\nIn the morning after a hearty farm-style breakfast, Claire's brother David was out early brushing the snow off the windshield of their rental car. When Greg walked out and saw him cleaning the last bit of snow off the roof, he said, \"Thanks, David, but I could have done that.\"\n\n\"No problem, I figured I'd help you two get on the road, so you wouldn't be late for your flight.\"\n\nGreg nodded looking around, realizing he was going to miss both the farm and her family, they'd made him feel so welcome. And then he eyed the little barn and his face broke into a grin, because that was something he knew he'd never forget. \"I really like it here,\" he remarked, more or less to himself, surprised at how at home he felt after only a day.\n\nDavid nodded. \"Not sure if you knew, but your family's old homestead is up for sale. Last owner just passed away, and it's just been listed.\"\n\nGreg eyed him, looking thoughtful. \"Whereabouts is it from here?\"\n\nDavid smiled, probably suspecting that he might want to have a look. \"It's not far, only about five or six miles up the road. You turn left at the church and it's the big red brick farmhouse set amongst the trees with the white wrap around veranda. It's got a good size barn, too.\"\n\n\"Thanks for letting me know. I think I might just take a look.\"\n\nFinally they said their goodbyes with lots of heartfelt hugs, and accepted a can of homemade cookies to give to his mother for Christmas, from her family. And as they drove off, Greg noticed Claire looked a little sad, like she was trying not to cry as she turned and kept waving, till they could barely see her mother waving back from the doorway.\n\nHe reached for her hand and gave it a squeeze. \"You've got a really nice family, Claire.\"\n\nShe swallowed hard, blinked a few times and nodded. \"I know. Don't mind me.\" She wiped at her eyes, feeling silly. \"I always get choked up when it's time to leave, just hoping everyone will still be here when I get back, hopefully next summer.\"\n\nHe patted her hand and assured her. \"They'll be here.\"\n\nWhen he turned right instead of left as they drove out of the long drive driveway at the edge of the farm, she looked confused. \"You remember that the airport is south from here, right?\"\n\nHe smiled over at her. \"I know. But I just want to see something before we go.\"\n\nHe followed the directions her brother gave him, pulled into the long driveway and turned off the car. And as he sat looking at the old brick farmhouse, the memories came flooding back from the time he was a boy and would visit his great-grandparents with his family. He glanced around the property, remembering how all the Nelsons would gather when they came. The men playing horseshoes in the shade of the old maple trees, while the kids would play tag, or have fun jumping from the loft in the barn onto the bales of hay below, hoping they wouldn't get caught, or wind up breaking anything.\n\nThe food was amazing then too, lots of Norwegian dishes he hadn't had in years that he could almost taste, as he gazed up at the grand old house.\n\nFinally, Claire reached for his hand. \"Do you know the people that live here?\"\n\n\"I used to. This was my great-grandparents place, the original Hanson homestead, and we'd come and see them every time we visited. The whole family would get together in the summertime just like yours.\"\n\nClaire looked up admiring the big wrap around porch. \"It's a beautiful old house.\"\n\nGreg tipped his head and looked up at the roof. \"It is, isn't it? And someone's kept it up. It looks like the veranda's got a fresh coat of paint, and the roof looks pretty new, too.\"\n\nShe turned and pointed at the realtor's sign. \"And it's up for sale.\"\n\nGreg smiled. \"I know. Your brother David thought I might be interested to see it. How about we take a closer look?\"\n\nHe opened her door, took her hand and they walked up the wide staircase together onto the big wrap around veranda. And as soon as he peered into the big front window, he shook his head, smiling. \"Wow. I can remember playing Go Fish and Crazy 8's on the floor in there with my cousins like it was yesterday.\" He pointed, and said, \"And their TV was in the corner, right where that flat screen is now, where all us kids would watch cartoons and have lunch together on the floor. It's like going back in time, seeing this again. I think I was about ten when my great-grandfather passed away, and then one of my great uncles owned it after that.\"\n\nHe got out his phone and started taking pictures, and then he turned and got a good shot of the realtor's sign, making sure he got the phone number. Then he looked at Claire, grinned and said, \"Smile,\" and he got one of her, too, flashing a really pretty smile.\n\nClaire watched him poking around, looking in all the windows, wondering what he was up to, but didn't know if she should ask.\n\nAfter they'd walked around the property, and he took a fast look in the barn, he looked at his watch, heaved a sigh and said, \"I guess we should go.\" Still looking a little confused, she just nodded.\n\nTheir flight to New York was a little over two hours, so they had some time to talk. After they'd discussed the fun they'd had with her family, and how much Greg had enjoyed himself, he tugged her hand and caught her off guard when he said, \"So, what's the story with your roommates from hell?\"\n\nClaire sighed, wishing he hadn't heard that. \"I just wish my sister had thought before she asked. It's not exactly something I like to share. And I know it worries my parents that I'm not exactly settled; like they're not already worried enough with me living on my own in the big bad city.\"\n\nHe squeezed her hand. \"So, tell me what's going on.\"\n\nShe blew out a breath, wondering where to start. \"Well, when I first moved to New York, after I got hired at Hanson, I couldn't believe how high the rents were. So for the first few weeks I wound up staying in a sketchy hotel in what I quickly discovered was a pretty bad part of the city. I was so nervous walking home from the subway at night, always terrified of being mugged, that I knew I couldn't stay there.\n\n\"Then one day when I was having lunch with one of the ladies in the office, when I mentioned how hard it was to find somewhere affordable and decent to live, she told me that her cousin Sue was looking for another roommate to go thirds on her rent. And she said the apartment was nice, in a pretty good neighborhood. So, of course I jumped at the chance to get out of that crappy hotel. Trouble was, as soon as I gave Sue the first and last month's rent, she explained that being the last one in, I'd have to sleep on the couch without a closet or anywhere to put my things. But I decided it was worth having to live out of a suitcase to get out of where I was staying, and I kind of got used to it, figuring I could handle it for now, at least until I discovered that one of them was a klepto, when my stuff kept disappearing. She helps herself to anything that isn't nailed down, so I have to take anything valuable with me to the office, which is kind of crazy that I can't trust the people I live with. But even worse, Sue's got a really short fuse, and she's a screamer, which is pretty nerve-racking, never knowing when she's going to explode. And nearly anything can set her off, even just a drop of water left on bathroom faucet, can send her into a tailspin, because she's a real neat freak, too. And now I know why they were looking for another roommate, seeing as they're both impossible to live with.\" She shrugged. \"So, now I'm looking for somewhere else to live again. And I've got an agent looking in New Jersey where the rents are cheaper. I figure I'll just have to get up earlier to commute.\"\n\nGreg could understand her wanting to move. Hell, now he wanted her out of there, just as soon as he could get her things packed. And before he realized it, he was saying, \"Well why don't you come and live with me? I've got a three bedroom condo. And if you wanted, you could have your own room. But you need to get out of there, Claire, it sounds like a nightmare.\"\n\nShe could hardly believe what he was saying, and wondered if he was serious, because there was just no way she could ever live with her boss, no matter how cozy things had gotten between them. \"Well thanks for the offer, but we both know I could never live with you.\"\n\nHe turned to face her. \"Why not? We like each other, we have fun. Why not give it a try? And I promise I'd never steal your clothes, because I doubt any of your stuff would fit me.\"\n\nThough she laughed at that, a moment later, she carefully said, \"But it could get kind of awkward with me there, if you ever wanted to um...\"\n\n\"Ever wanted to what?\"\n\nShe looked down at her hands, afraid to look at him when she quietly said, \"If you ever wanted to have a woman over, especially for the night. I think it would be kind of uncomfortable with me wandering around while you entertaining someone, don't you?\"\n\nGreg's stared at her, wondering if he'd heard her right. Then he lifted her chin so she'd have to look at him when he asked, \"And why would I want to do that?\"\n\nShe looked a little uncomfortable as she looked at him and gave a list of reasons why it would never work out, especially because she'd hate to impose on the head of the company of all people. \"Greg, remember this was just supposed to be about blowing off a little steam after the sales meeting in Vegas. And it's already a little crazy that we're putting on a show for our families and pretending to be involved. So there's no way we could ever move in together, because I like you as a friend, and things would probably change if I was around all the time. Plus, I'm not sure you'd know how to tell me if you wanted me to leave. And I really can't afford to risk my job. I work for you remember, you're my boss. Maybe we shouldn't have fooled around, but I don't regret anything we've done together. And I'd really hate you feeling like you had to tip toe around me in your own place if you started seeing someone else.\"\n\nAt first he didn't say anything, and just stared straight ahead, because he was too shocked to even voice what he was thinking. While he'd thought they were growing closer, maybe even looking into a future together, from what she was saying, she was getting ready to give him the kiss-off once they got back home.\n\nHe opened his mouth, about to ask her if she even liked him, but then he closed it again. First they'd get through Christmas with his family, but then they were going to talk. And he was going to move her into his place, just for his own piece of mind, whether she agreed to it or not. Even if she wanted her own bedroom, at least he knew she'd be safe.\n\nWhen they arrived at his mother's condo, as Greg wheeled their suitcases behind them, Claire looked around the elegant marble and brass lobby with a security guard stationed at the desk, and murmured, \"Wow, this is a beautiful building.\"\n\nHe nodded, looking around then, too. \"Yeah, it's nice.\"\n\nAfter they got in the elevator, he noticed she a looked a little nervous. Finally she looked over at him. \"I just hope they believe that we're a couple.\"\n\nHe'd make sure they did. Wearing a sexy smirk, with his eyes locked on hers, he stepped closer, slipped his arms around her, slid his tongue between her lips and really laid one on her. And the way she instantly started grinding herself against him, with her arms tight around his neck, and their hands diving into each other's hair, both of them moaning as the kiss went on and on, getting him hard and leaving them both breathless, he knew they had something pretty amazing going on, whether she wanted to admit it or not. Especially if all they had to do was share a kiss to lose themselves in each other.\n\nBy the time the elevator stopped at the penthouse, he stood back, smiling to himself, deciding that her swollen lips, flushed cheeks, and the choppy way she was breathing, fighting to compose herself with her hair a little tussled, looking like she'd just been tangling in the sheets with him, would let his family know that they weren't faking a damn thing.\n\nWhen his mother Cynthia answered his knock at the door, she smiled when she saw her son. And then her grin grew even wider when she got a look at the pretty woman standing beside him. \"Merry Christmas, Gregory,\" she murmured as she pulled him close and kissed his cheek. Then she stepped back and looked at Claire. \"And who is this lovely girl?\"\n\nSmiling at Claire, he said, \"Mom, this is my lady love, Claire.\"\n\nSurprised, Claire turned her head, and stared at him. Lady love, seriously? She thought he was laying it on a little thick, especially if they were only supposed to have been together for a few weeks.\n\nBut as his mother reached out to shake her hand, and wish her a Merry Christmas, if the lady love business surprised her, her jaw almost hit the floor when he grinned and said, \"And she's just agreed to move in with me.\"\n\nHis mother looked a little startled, touching a hand to her chest she stood staring back and forth between them. \"Well, it sounds serious then, doesn't it?\"\n\nGreg nodded, fighting hard not to laugh at the shocked look on Claire's face, as he confirmed, \"It is.\"\n\nOnce his mother finally turned and led the way ahead of them, he slipped his arm around Claire and brushed a kiss to her cheek. And she just turned her head, staring hard at him like he'd lost his mind, which made him want to laugh even more.\n\nBut before she could utter a word, and ask him what he was thinking, they were being surrounded by his family. And she couldn't believe how attractive his sisters were, all three of them blonde, slender, and absolutely gorgeous, much like their mother, all sharing the same striking silvery-blue eyes.\n\nGreg took a moment to introduce everyone, and Claire felt so overwhelmed by what he'd just said about them moving in together, that all the names went right over her head. Until an adorable little boy of about two, wound his way into the crowd and held his arms open for Greg to pick him up, and the way he smiled up at him, she couldn't help but smile, too, he was just so cute. Greg told her, \"And this is my favorite nephew, Ben, seeing as he's the only nephew I've got.\" Then he pressed a kissed to his chubby little cheek, and asked, \"So did Santa get you what you asked for, Ben?\"\n\nSmiling from ear to ear Ben nodded holding out a little red fire engine he had grasped in his fingers, for his uncle to see. His sister laughed and explained, \"That was in his Christmas stocking. And out of all the gifts he got, it's the only thing he cares about, and he hasn't put it down, even to eat.\"\n\nGreg nodded, and turned it in his hand. \"I can see why. It's a really nice truck, isn't it, buddy?\" Nodding, Ben smiled, squeezed his face between his hands and pressed a big smacking kiss to his uncle's cheek.\n\n\"As you can see, my son is smitten with his Uncle Greg,\" Sandra his second youngest sister told Claire.\n\nHis mother, pouring herself a glass of wine, piped up, \"We keep telling him that he'd make a wonderful father.\"\n\nClaire just nodded and smiled at everyone, remembering that this was why she was here to take the pressure off of him, so they'd think that maybe one day he might settle down and actually start a family of his own. So, she smiled at him, and said, \"Yes, he really is good with kids. My little niece bonded with him as soon as they met.\"\n\nGreg flashed her a smile, and she smiled back, because they'd bonded pretty quickly, too.\n\nActually, he was surprisingly good with kids, and Claire imagined if he ever did find the right woman to marry, that he'd be an amazing father. And he wouldn't be shy about letting them know that he loved them, just like her dad, who loved to show his affection.\n\n\"What can I get you to drink, Claire?\" his mother asked.\n\n\"I'll get it,\" Greg offered, handing his nephew off to his sister, with a ruffle of his sandy-brown hair.\n\nClaire walked over to where his mother was standing by the huge elegant Christmas tree, lit up with little white fairy lights and tastefully decorated with shimmering silver and gold bows. \"That's a beautiful tree, Mrs. Hanson.\"",
        "\"Oh, please call me Cynthia. She smiled up at the tree. \"I do love a real tree. And the smell really makes you think of Christmas, doesn't it?\"\n\nDrawing in a breath of the pine-scented air, she agreed. \"It really does.\" Then she handed her the gift bag with the can of cookies, and quietly said, \"These are from my mother, just a little something to add to your dinner.\"\n\nGreg walked out of the kitchen carrying two glasses of white wine, and when he saw her handing his mother the can of cookies, he said, \"Those are homemade, Mom, and they're really good.\"\n\nHis mother's face looked pinched when she smiled, staring at the can decorated with a comical looking snowman. \"How lovely. And I'll have to send something for your mother. But please thank her for thinking of us and sending them along.\"\n\n\"Oh, I will. And you really don't have to get her anything, she wouldn't expect it.\"\n\nGreg rolled his eyes, seeing that his mother was being his mother, already acting a little prickly. So he put his hand to the small of Claire's back and walked her over to see his nieces.\n\nHis older sister Alessa and her husband were sitting with their two pretty blonde daughters, Paris and Elise, both dressed in white velvet Christmas dresses, looking like perfect little ladies, though he could see that the girls were anxiously eyeing the gifts under the tree. So, Greg winked at Claire and said, \"How about you start handing out the gifts, girls.\"\n\nThe instant he said it, they both giggled and dropped to their knees and started reading all the names on the gift tags. \"This one's for Ben, can I open it for him?\" Paris asked, holding up a square book-shaped gift, wrapped in shiny green paper with a big red bow.\n\nHer mother shook her head. \"I think he's old enough to open it himself, but you can help if he's having trouble.\"\n\nParis just handed him his gift, and said, \"Here you go, Ben,\" and went back to checking out the rest of the presents under the tree.\n\nThen her and her sister both started squealing when they discovered the Gucci gift bags from their uncle. Excitedly pulling the little designer purses out of the bags, they shimmied and laughed and said in one voice, \"Thank you, Uncle Greg, they're just what we wanted.\"\n\nClaire's eyes almost popped out of her head when she realized he'd gotten them genuine Gucci purses that had to have set him back at least a few thousand dollars. Which made her realize how lucky she was that her nieces and nephews were pretty easy to please, and happy to get a few toys.\n\nGreg told them, \"Girls, don't forget to hand out the rest of the presents for everyone else,\" when they came and hugged his legs and thanked him again.\n\nAs the girls were handing everything out, he whispered to Claire, \"I let my sisters decide what to get their kids, because I don't Gucci from Walmart.\" She smiled at him, happy to hear that he didn't. That was something else she liked about him, he really didn't act like a guy who came from money, or she might not have been as interested.\n\nThen his mother caught her attention when she smiled at Greg and said, \"Thank you darling,\" as she held up and admired the gold and diamond panther broach that he'd chosen for her.\n\nThen when Paris handed Claire a present, she looked at Greg, confused. He shrugged. \"It's just a little something.\"\n\nWhen she unwrapped and opened the small blue-velvet covered box, she actually gasped at the beautiful heart-shaped diamond pendant sitting inside. \"I can't accept this,\" she told him, wondering what he was thinking, buying her something so expensive.\n\nHe kissed her cheek, reached for the necklace, slipped her around her neck, and whispered in her ear, \"Sure you can. I had to get something special for my sweetheart for our first Christmas together, or I wouldn't be much of a boyfriend, would I?\" And then it dawned on her that it was just for show, so that his family would think that he was serious about her.\n\nThen touching a finger to the pendant, she flinched when she thought about what she'd snuck away to buy him in the airport before they'd left Wisconsin. But before she could say anything, and tell him not to open it, his niece was handing him the big red gift bag. Then she wanted to sink into the floor as everyone watched him pull out the hand-knitted hat and lined leather gloves that she thought he'd like, before she realized that it was nothing like what he'd chosen for her. But he was so sweet about it and just tugged her close for a kiss and whispered, \"Just what I needed, baby, thank you.\" And surprisingly he looked like he meant it, too, the way he nodded looking them over, even trying on the gloves.\n\nAs the rest of the gifts were being passed around, mostly now for the kids who were having fun tearing apart the paper, Greg went to get more wine, followed closely into the kitchen by his mother and older sister. He'd just pulled a bottle out of the fridge, and turned around, and his mother was right behind him, saying, \"She's lovely, Gregory. But isn't she a little young for you?\"\n\nHe looked between the two of them, and shook his head. \"She's not that young.\"\n\n\"Then how old is she?\" his sister asked.\n\nHe narrowed his eyes. \"Old enough.\" There was no way he was going to tell them that he had twelve years on her, or he knew he'd never hear the end of it.\n\n\"And where did you meet her?\" his mother asked.\n\nHe rolled his eyes, because he should have known whether he brought someone home or not, they'd want to get their nose in his business and give him the third degree. Heaving a breath he said, \"She works at Hanson. And we just kind of hit it off and started seeing each other.\"\n\nHis sister cocked an eyebrow. \"And you're already moving in together? Don't you think that's a little hasty?\"\n\nHe tried to keep his voice even, but he hated having to explain why they were together, but if they wanted to know, he was damn going to tell them. \"Actually, no, I don't think it's too soon, because I've never met anyone like her. She's down to earth, a lot smarter than I am, fun to be with, and she's got to be the sweetest person I've ever met. And I'm crazy about her, okay?\"\n\nSmirking, his sister patted his cheek. \"Okay tiger, calm down.\" Still smiling, she poked him in the chest. \"So when are you planning to pop the question?\"\n\nGreg stared past her, a little shocked that he'd blurted that out. But the truth was, he was crazy about her. Or he wouldn't have bought her the necklace. He'd never in his life considered buying jewellery for a woman before, in case they got the wrong idea, thinking he was into them when he wasn't. But he was sure as hell was into her, and he wanted her to know it.\n\nHis mother, who wasn't as easily swayed, stood her ground, sounding imperious. \"I just want to know one thing. Was it her idea or yours that she move in with you?\"\n\n\"It was my idea. So if you're thinking she's after me for my money, you can forget it. That's not who she is.\"\n\nThen he picked up the wine and walked out of the kitchen, rolling his eyes.\n\nWhen he walked up to refill her glass, Claire looked at him, and said, \"Is everything okay? You look a little flushed.\"\n\nHe touched his lips to hers, and managed a smile. \"Everything's fine. But I was thinking, I'd rather just go back and stay at my place after this. I don't live that far from here, so after dinner we'll just go.\" No way was he going to stay and watch her get picked apart, imagining his mother would have a lot of questions for her, and then probably his sisters would start in on her, too.\n\nThough he'd told her that he normally stayed overnight for Christmas, because his mother expected it, Claire didn't argue. She liked his family well enough, but still felt a little like a duck out of water.\n\nThankfully, it wasn't long before the caterers arrived with their dinner. And once it was served, his mother smiled at everyone around the table, lifted her glass and made a toast. \"Merry Christmas, and blessing to us all for the New Year.\"\n\nThe meal, as always, was excellent, but Greg could barely taste what he was eating. Smiling over at Claire sitting beside him, he wondered what she thought of the fancy pear, gorgonzola, and candied pecan frisee salad appetizer, knowing that he'd enjoyed her mother's home-style potato salad a heck of a lot more.\n\nAs he picked his way through dinner, he kept thinking about what he'd said in the kitchen, surprising even himself when he admitted how he felt about her. He reached over and squeezed her hand in her lap, and he really liked the way she smiled back, with her eyes sparkling with a touch of mischief. Now he could hardly wait to get the rest of her things, and move her in with him.\n\nEven if she decided to look for another place, he couldn't leave her where she was, especially when he had two extra bedrooms that no one was using. But he really hoped, once he had her curled up in his bed beside him, that she might just decide to stay.\n\nThey both looked pretty relieved by the time coffee and liqueurs were being served, along with a decadent white chocolate yule log, with a tart raspberry coulis. And of course a pretty glass plate sat beside it with Claire's mother's Christmas cookies that everyone said were delicious.\n\nIn the kitchen, when his mother went to check on things, Greg took a minute to tell his mother that they would be leaving after dinner and wouldn't be staying overnight. And though she didn't look too pleased, she didn't say much, and just muttered, \"Well, I hope she makes you happy, because you I know I only want what's best for you.\"\n\n\"She does make me happy, and Claire's definitely the best woman I've ever met,\" he assured her, dropping a kiss on her cheek.\n\nAfter they'd said their goodbyes, they took a taxi to her apartment. When Greg offered to come up to help her pack, Claire shrugged. \"I don't really have much to pack.\" But he followed her up the stairs all the same.\n\nOnce they got inside, she was relieved to see that her two roommates were still both away with their families for Christmas, deciding she'd just leave them a note to tell them that she wasn't coming back. Since she'd paid her first and last month's rent, it wasn't like she owed them anything.\n\nAnd when she got out her big suitcase from behind the couch, where she normally slept, and went and got her toiletries and make-up from the bathroom, as he watched her tuck everything inside, Greg asked, \"So, is that couch you've been sleeping on, even a pullout?\"\n\nWhen she shook her head and said, \"No,\" he rolled his eyes, thinking of her having to sleep on a lumpy couch every night, while her roommates both had beds. Now he was really glad he was getting out of here and taking her home.\n\nHe looked around and asked, \"So, which one's the klepto's room?\"\n\nWhen she pointed to the door off to the left, and said, \"That one,\" he nodded.\n\nThen with a shrug, he said, \"So, before we go, why don't you take a look and see if she's got any of your things in there?\"\n\nClaire bit into her lip, not sure if she should. \"But wouldn't that be like stealing?\"\n\nChuckling, he shook his head. \"No. Not when she was the one who stole your things from you in the first place. Come on. Let's go and see what she's got.\"\n\nFinally she let out a breath and nodded, and led the way into 'The Klepto's room, but only because some of what she took was brand new, so it would be nice to get those things back.\n\nStill, she was careful not to poke around too much. Although her room looked like a bomb went off, with bras hanging off the lampshades and clothes strewn everywhere and a stack of dirty dishes still sitting on the nightstand, she didn't think she'd notice if anything had been moved around. Though she wondered what Sue the neat freak would think if she ever took a look in her room.\n\nBut then when she opened the wardrobe, she let out a gasp when she recognized at least a dozen of her things hanging up, including a new black pencil skirt, she'd just bought before she'd left for Vegas, still with the price tag attached. \"Why, that little witch!\" she muttered, as she started rifling through the closet, and snapping up everything she knew was hers. Then her eyes really popped when she looked down and saw her favorite pair of kid leather sandals, sitting beside her sexiest red heels. \"I can't believe it. She even took my shoes. And with feet the size of hers, she'd never be able to wear them. And I doubt any of my clothes would fit her, so I don't know why she'd even take them.\"\n\nHolding his arms out, while she piled on one thing after another, he shrugged. \"Guess she's into stealing stuff, and probably just likes the feeling of taking things that aren't hers, whether they'd fit her or not.\"\n\nClaire rolled her eyes, deciding she just wanted to leave and never look back. And if she could afford it, she knew she'd definitely be looking for somewhere to live on her own next time.\n\n\"I'm so glad I'm getting out of here,\" she muttered as Greg strode out with the stack of clothes in his arms, while she snatched up her shoes.\n\nThen deciding to take one last look around, she gasped and said, \"Really?\" when she discovered the engraved silver bracelet that mother had given her for her sixteenth birthday, sitting on the top of the dresser. Turning it in her hand, reading the inscription, \"Happy 16<sup>th</sup>, All My Love, Mom,\" she wondered how often she'd been going through her things. Now she was glad that he'd suggested she check her room before she left, even if only to get her bracelet back.\n\nOnce she'd finished packing her suitcase, with Greg helping her zip it up, he tipped up her chin and dropped a kiss on her lips, and said, \"Let's go, and you can put this place behind you.\" She was more than happy to do just that. And thanks to him, at least for now, she had somewhere else to stay.\n\nOn the way back to his place, sitting side by side in the taxi, with her hand tucked snugly in his, Greg looked over at the perfection of her profile as she gazed out the window, still amazed at how close they'd become. Though he'd always been attracted to her, which was why he'd always stopped to say hello and do a little flirting whenever they'd passed by each other in the office, he never imagined the little fling he was hoping for after their sales meeting in Vegas would -- if he was lucky -- have them becoming inseparable.\n\nNow he knew he had to find a way to let her know that he more than just liked her, and was hoping that maybe if they lived together for a while, she might eventually feel the same way about him.\n\nAs they walked into the ultra-modern lobby of his building, Claire's eyes looked big as saucers. \"Wow, what a beautiful building,\" she said, sounding a little awe-struck, as she looked all around, trying to take it all in. The high-ceilinged granite and glass lobby area with a long sleek concierge desk looked so clean and new, she wondered if he'd just moved in.\n\nThe moment the tall man at the desk saw him walking in with their suitcases, he rushed over with a luggage caddy and helped Greg load their bags. \"Thanks, Mike,\" Greg said, and then he smiled at Claire. \"Claire this is Mike, the best concierge in the city, and Mike this is my lady, Claire, who is just moving in with me.\"\n\nSmiling, Claire held out her hand. With a grin of his own, Mike accepted her hand, and said, \"A pleasure to meet you Claire. If you need anything, just call, and I'll be happy to help.\"\n\nOnce they got upstairs, walking down the hallway from the elevator, Claire was surprised that even the hallways were gorgeous, all done in shades of white and gray with sparkling glass light fixtures hanging from the ceiling. \"This really is a nice building,\" she murmured, standing beside him as he punched in the code to open the door to his condo.\n\nLetting her walk ahead of him, he just shrugged. \"It's just nice to have a place to come home to, that's not too far from the office.\"\n\nYeah, she could imagine it was, especially sleeping where she'd been sleeping for the last few months, this place was like heaven.\n\n\"Let's get your things put away,\" he suggested, wheeling her bags into one of the two spare bedrooms.\n\nThen her phone pinged with a text and she said, \"I'll be right there.\"\n\nThe rental agent was texting to let her know he'd found a few places in New Jersey that he hoped she might like, and thought maybe over the holidays she could take a look.\n\nAfter she'd texted him back that she'd be interested, and wanted him to line up as many places as he could, she followed Greg into the bedroom.\n\nHe had her suitcases sitting on the floor of a huge walk-in closet, loaded with built-ins that even had an entire wall just for shoes, which was something she'd only ever dreamed of in her wildest fantasies. But as stared at the empty shelves, knowing she wouldn't be staying long, she wondered if it was even worth unpacking. She'd lived out of a suitcase for so long, that she thought another couple of days wouldn't matter.\n\nTurning her head, she glanced around the bedroom, stylishly decorated in shades of grey and white with a few navy blue accents. \"Your condo's amazing, Greg, I've never seen anything like it.\" But her eyes really popped when she looked over at the bed, and knew it had to be a king size. She could already image how wonderful it would feel to sleep on something that size that would have her waking up feeling rested in the morning, with no backache.\n\nGreg slipped his arms around her waist, touched his lips to hers, and said, \"Well, make yourself at home, because you live her now, too.\"\n\nShe smiled, running her hands through his hair, amazed how every time he kissed her she could feel herself getting wet, and wanting to tear his clothes off.\n\n\"And I'd be happy to help you unpack, if you'd like.\" Or slip you out of your clothes. But he thought he'd better not rush things, since they'd just walked through the door, and he wanted her to feel at home, before they hopped into bed together.\n\nShe winced. \"Um... thing is, I just got a text from the rental agent, and he's got a few places lined up that he thinks I might like. So I'm not too sure if I should bother unpacking if I'm going to be moving out soon. And I just texted him back and asked him to line as many places as he could, so I can see them over the holidays. You've been so kind offering to let me stay here, but I don't want to overstay my welcome. So hopefully I'll be out of your hair soon.\"\n\nGreg just looked at her, not too sure what to say. It sounded to him like she could hardly wait to leave, while he'd been hoping that maybe they could try living together for at least a few months, to see how she felt about sharing the space as a couple. Because he already knew that he never wanted her to leave, but if she was desperate to go, he knew he couldn't stop her.\n\n\"Oh, and before I forget.\" She reached into her purse and handed him the little blue velvet box with the heart shaped diamond pendant. \"I hope you can get your money back, because I only wore it for a couple of hours.\"\n\nHe looked surprised, wondering why she was giving it back. \"You don't like it?\"\n\n\"Of course I do. It's the prettiest thing I've ever seen. But when you slipped it around my neck with all your family watching, I realized that you were just trying to pretend to that you cared, and I knew it was just for show.\"\n\nStaring at her for a minute, he thought it was time she knew the truth, even if she wasn't ready to hear it. So he took her by the hand, led over to the bed, sat down on the edge, drew her between his legs, and looked up into her eyes. \"Actually, I gave you that to try and show you how much I care. And it had nothing to do with putting on a show for my family. I meant what I said about wanting to give you something special for our first Christmas together, because I'm hoping this is just the beginning for us.\"",
        "For a moment all she could do was stare. \"But... I thought this was just supposed to be a way for us to get through the holidays with our families, by making them think we're together.\"\n\n\"Well, it might have been how it started. But, somewhere between our time together at the office, Vegas, the farm and here, I realized that I've fallen in love with you.\"\n\nHe smiled, feeling relieved when he saw the sparkle in her eyes and the way her lips were curling up in a smile. Then she slid her arms around his neck and brushed her lips to his, and murmured, \"Your nephew's not the only one who's smitten with you. Since that first day when you wandered into my interview, I kind of wondered what it would feel like even just to kiss you. So, I've always had more than a bit of thing for you. Which is why I agreed to go to your room that first night, which is something I'd never done before.\" Then she sank her tongue into his mouth and he cupped her ass in his hands and squeezed, thrilled to hear that he meant something to her. But when she finally pulled back, he thought everything was perfect until she said, \"The trouble is because of who you are I could never live with you. If anyone at work found out that we were staying here together, I'd never be able to live it down.\"\n\nSmirking, he dropped onto his back and tugged her down with him, wrapping her in his arms. \"But what if I promised not to fool around with you at work? I mean we talk nearly every day and I don't think anyone even notices, but I bet they'd wonder what was happening if I took you on my desk, especially if I got you squealing.\"\n\nChuckling, Claire shook her head. \"I'm serious. I don't want everyone gossiping about us. And they would, if they ever found out I was staying here with you, or even that we're just seeing each other outside of the office. You're still my boss, Greg. And you know how people love to talk.\"\n\n\"I'd never tell. So how would they ever know?\" Before she could answer, he rolled her onto her back, blanketed her body with his, slipped his tongue between her lips and really took his time and kissed her. And he let her have a feel of what she was doing to him, pressing himself between her legs, till she gave in and wrapped her legs around his waist, and he was right where he wanted to be, maybe even for the rest of his life.\n\nBy the time she opened her eyes, she could barely remember what they were talking about, he had her so aroused, and so ready, it was embarrassing. Smiling into her heavy lidded gaze, brushing a lock of hair behind her ear, he said, \"I don't want to have to drive to another state to see you, Claire. And I think we both know that what we've got between us is something pretty special. So why don't you call the agent and tell him you've found somewhere on your own to live, and thank him for his time.\"\n\nSmiling into the determined look in his gorgeous blue eyes, deciding that resistance was futile, since she could no more resist him than the urge to breathe, she heaved a sigh, nodded and said, \"Okay,\" Then she tugged his head down and nearly kissed him senseless. And until they had to go back to work at the end of the holiday, they decided it would be fun to spend every minute they could in his bed, which is exactly what they did.\n\n*****\n\nThree months later, since they had four days off for the Easter weekend, Greg suggested it might be nice to go and visit her family again.\n\nBut he made a stop first. When they turned into the driveway of the old Hanson homestead, Claire had to blink a few times she was so amazed by the transformation. There were pretty baskets of flowers around the veranda, the windows were sparkling, and the grass was lush and green, with beautiful landscaping around the house and the driveway, and even a new flagstone path leading up to the house.\n\nThen when he took her by the hand, smiled into her eyes, pulled out a key and walked her inside, looking around, she just couldn't stop staring. She'd seen inside through the windows before, and she realized that someone had done an amazing job of keeping true to the original character of the place, while carefully bringing it up to date, with shiny hardwood floors, beautiful furniture and an amazing kitchen. Then she looked at him, and said, \"Wait a minute. Why do you have a key for this place?\"\n\nSmiling, he tipped up her chin and whispered against her lips, \"Because it's ours now, sweetheart.\"\n\nShe looked around and said, \"You bought this place?\"\n\n\"Yeah, I hired your brother David to help me work on it remotely, and he found some local people that he knew he could trust to do the renovations. He and I talked to each other every day, while he kept checking in on them for me.\" He glanced around, nodding. \"And I think it worked out pretty well, and it looks even better than I remembered. I thought it would be nice to keep it in the family. And we could bring our kids here every chance we get.\"\n\nShe blinked. \"Our kids?\"\n\nChuckling, he dropped to one knee, pulled a ring box out of his pocket and looked up into her eyes. \"But we won't have any till after we're married. Maybe we could tie the knot in that little white church on the hill. So what do you say, Claire? Will you marry me?\"\n\nDeciding she didn't have much choice, because she was so in love with him that she didn't know what she'd do without him anymore. She smiled and said, \"I think that would be a great big, yes.\"\n\nHe got to his feet, slipped the ring onto her finger, laughing at the way she gasped, because he made sure he got her a ring that would let her know just how much he loved her.\n\nThen he smile and said, \"And just wait till you see our bedroom.\" Then he winked, and whispered in her ear, \"And I think you're really going to love the barn, because I know I will.\" Both of them laughing with her hand in his, he led her up the stairs, eager to christen their new home, but even more, start their future together as husband and wife. And hopefully by next Christmas, they'd be back, married, and just as blissfully happy, hopefully with a new little Hanson on the way."
    ],
    "authorname": "Smuttyandfun",
    "tags": [
        "doggy style",
        "kissing",
        "love",
        "oral"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/mating-season-8"
}