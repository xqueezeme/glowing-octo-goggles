{
    "title": "Poolboy Benefits",
    "pages": [
        "========================\n\nShe's desperate for help. The only question is how desperate?\n\nThis is an entry in the SUMMER LOVIN STORY CONTEST 2012. It's a little long - I'd normally break it up into two or three chapters, but as a contest entry, I made it one big story. \n\n========================\n\n\"Mom, gimme a break! I only got back from college two days ago. How about a little time to relax?\"\n\n\"If you're not going to work for you father, you're going to stick with our deal. I won't have you laying around the house all summer.\"\n\n\"All summer? I'm talking about a week's break, Mom. One week. Not a weekend. I'll start with the handyman services next Monday. I still haven't seen any of my old crowd or anything,\" I argued.\n\n\"Two days should be rest enough. Amy Daniels needs pool help in a bad way. I told her you'd stop by and see what you can do. Think you can find time for her in your busy day?\"\n\nAmy Daniels? \"Uh, when does she need me?\"\n\n* * *\n\n\"What's the verdict, Alex?\"\n\nShe'd been following me around for the last hour, like a nervous kid. The pool was a dark green swamp. I was trying to get to the root of the problem, but she was seriously distracting. I'd always had a thing for Mrs. Daniels, in a huge way, and her current outfit was reminding me why. She was wearing a bikini with a diaphanous waist wrap that left far too much of her MILFish body exposed for me to maintain my concentration on the task at hand.\n\nI'd glance at her at every opportunity, taking in every little detail of her bodacious body. Her bikini top squeezing her skin, the flesh of the tits bulging at both sides of her bikini top. How the wrap around her narrow waist hung at the swell of her hips. The way her skin glowed, moist with perspiration, little drops of sweat rolling down her cleavage. The fine down of nearly invisible hairs on her forearms. Bowed lips, with fine lines of worry at their corners, as she listened to me explain each issue. I could barely tear my eyes off of her.\n\nShe and Mom were friends, good friends, had been ever since she and her husband first moved into the neighborhood four years earlier. They'd been newlyweds - he was about my parents age; she was a lot younger, just a couple of years out of college and the perfect arm-candy a go-getter needed to move ahead in the business world. Or so Mom said when they had first moved in.\n\n\"Mrs. Daniels, how long has it looked like this?\"\n\n\"Since the end of pool season last year. Cash has been kind of tight, and we put off the work as long as possible, since we weren't going to use the pool,\" she admitted guiltily.\n\n\"Your pump is shot, the filter lines are clogged, and the scum on the bottom has gotten too good a hold to simply scrub off. No telling if the automatic cleaner is working at all. I imagine the filter itself is a complete mess. It's probably going to take a couple of weeks to get it clean. I think you're going to need professional help.\"\n\nShe was wringing her hands; I thought people only did that in movies. \"I've already talked to the pool people. They want more than $4,000 to fix it. And they quoted three weeks to get the parts in and get it cleaned up. I was hoping we could have it done this weekend. And four grand is way out of my budget.\"\n\n\"This weekend? I don't think I could get it done that fast if I worked day and night on it. And it would still cost thousands of dollars.\"\n\nShe sat down on the spa wall, her pretty head in her fine, long-fingered hands. \"Dale's going to kill me. It took me two years to convince him to put the pool in, and I promised I'd take care of it. Now we've got this huge party planned, and if it isn't perfect I'll never hear the end of it.\" She looked up at me, with her big green eyes. \"Isn't there anything we can do? Please?\"\n\nI sighed. For Amy Daniels, I knew I'd do whatever it took. \"Let me look into it, and I'll see what can be done. No promises.\"\n\nShe laughed, jumping up and giving me a big hug. \"Thanks, Alex. I can't tell you how much I appreciate this. I promise, you won't regret it.\" \n\nThe hug was definitely worth the effort of doing a little research. Four years ago she'd been this sexy older woman, tall and beautiful, who would come by the house regularly to cry on Mom's shoulder. When I was 15 years old, she'd been my favorite fantasy. At nineteen, my freshman year behind me, she was sexier than ever, a body of dreams, with long brown hair and the biggest green eyes I'd ever seen. I was taller than her now, by several inches, and she seemed smaller, frailer, someone who needed taking care of.\n\nIt was almost lunch time, so I headed back down the street. Mom fed me while I spent a little time on the internet and making a few phone calls. By the time I was finished I had a possible solution. \"You're killing me Mom. This pool job could kill half my summer. It's a mess.\"\n\nMom laughed. \"Don't be a drama queen. Just fix her pool, Alex.\"\n\n* * *\n\nMrs. Daniels was working on her tan, and she got up as soon as I opened the gate to the back yard. Same bikini, sans the cover-up. Wow.\n\n\"Alex! Any ideas?\"\n\n\"Maybe. Instead of cleaning the water, we could empty it. I could give the inside an acid wash, and refill it with clean water. I can probably clean the pool lines, with a simple fish tape, some acid and a pressure hose. The pump is a bigger issue, but I can replace the motor instead of the whole pump. That could get the price way down. I'll have to clean out the filter, and all the pipes. It's going to take a while. Won't know about a lot of things until we get to them, though.\"\n\n\"How much are we talking?\" she asked.\n\nI had completed my preliminary pricing and figured about $400 for the motor, $200 in chemicals, a couple of hundred in supplies, o-rings, baskets, and lube, and $300-$400 more if I had to replace all 8 filter elements. If the automatic cleaner was still working and the salt-water chlorine converter was functioning, it would still run at least $1200 in materials, and of course something for 3-4 days of my time. I wasn't working for free.\n\n\"I can probably keep it under $2000, and I'll have to work on it all week,\" I told her. \"I should be able to get it done in time.\"\n\nI thought that would be great news, but she was still acting distraught. \"$2000? Any way we could do it for under $1000?\" she pleaded.\n\n\"A thousand?\" I asked, incredulous. \"The new pump alone would be over $1000!\"\n\nShe came closer, putting her hand on my chest. \"Alex, please. As a personal favor? I'd owe you one.\" Her hand burned where it contacted my chest.\n\nA favor from Amy Daniels? Stay calm. Om-Mani-Padme... \"How am I going to buy at least $1200 in material, for a thousand dollars, Mrs. Daniels? As much as I'd like to.\"\n\n\"Call me Amy, Alex. You're a college man now.\" Her hand ran down my chest, coming to rest on my belt buckle. \"How about a barter system? Maybe I can do something for you, if you do this for me,\" she said. She was looking me in the eye, and I had a strong feeling that I knew what she was talking about. \n\nAnd it wasn't milk and cookies.\n\nIt made me a little nervous. Strike that - a lot nervous. This woman was several years older than me, and a good friend of my mother. On the other hand, she was my life long fantasy, and hot, really hot. Then again, she was married. But let's not forget, hot. She was way out of my league. And I dreamed about her more than any woman alive. Hot.\n\n\"What did you have in mind, Amy?\" I asked, reaching out and bravely placing a hand on her waist.\n\n\"How about if while you were working, I was sunbathing topless? If you could do the job for a $1000, I think I could 'accidentally' forget to wear my bikini top when you were over.\"\n\nNot quite the offer I was hoping for. $200 out of pocket, and working 4 full days for free, all to get a little peep show? Hopefully I could negotiate better. \"I could knock it down to $1500 for an offer like that,\" I countered.\n\nShe pouted cutely. \"And if I let you put sun-tan lotion on me? I'd need to be lathered up several times a day.\"\n\nI was slow to answer, thinking of rubbing my hands over her perfect body, especially her big, round, firm boobs. So close to my fantasies, but still so far away.\n\nShe was watching me and upped the offer. \"You know, Alex. I've even been thinking of doing a little nude sunbathing. I'm sure a clean pool would put me in the mood for it.\"\n\nThe offer was hard to reject. She was my fantasy after all. I moved a little closer, putting my other hand on her hip, and running both hands along her sides, feeling her warm, slippery smooth skin. \"It's a hell of an offer, Amy. Really. I wish I could do it. Believe me. But the parts are going to cost at least 12 to 14 hundred. And I don't have the kind of money to make up the difference. At $1200, I'd be working for free for a whole week.\"\n\nShe was thinking hard, and she moved closer, pressing her chest against me. \"$1000 this week, and $200 more two weeks from now. Say yes, and we can start the lotion now.\" She reached behind her neck and untied her top, lowering her hands quickly to hold the small bit of material against her large tits.\n\nDad owned his own business. He was in general contracting, with several sizable government projects. He'd always harped on me about three things required to succeed in business. One, have written goals, and refer to them often. Two, be scrupulously honest and fair, and you'll be able to live off repeat business and referrals. Three, all of life is negotiating, every business owner has to be his own best salesman. Nothing's done until something's sold. \n\nGod I wanted her. Time to see if my negotiating skills were up to par. \n\nI reached out to her, placing my hand on her cheek, my thumb rubbing across those luscious lips. \"Make it $200 in two weeks, throw in a blow job each morning, an afternoon in bed once the job is done, and you have a deal.\" I don't know where I got the courage to spit it out, but I did, taking my chances. I had her over a barrel, and maybe my dreams could come true.\n\nShe stepped back abruptly. \"Are you kidding? I can't do that!\"\n\nJesus. Me and my big mouth. Time for the either/or close. \"Amy, I really can't work for free. If you like, for $900 I'll fix the pump and filter for you, and I'll tell you what you need to do to clean the pool. It'll only take about 3 days of hard labor to get it cleaned up. Either that or I can do the whole job for you, and we can get a little creative on how to pay it off. Which would you rather do?\"\n\nShe turned her back on me, and I watched her re-tie her bathing suit top. \"I don't believe this is going to work, Alex. I'm disappointed in you. I think you'd better leave.\"\n\nI suddenly felt lower than low. Why had I run my mouth? \"Sorry I couldn't be of help, Mrs. Daniels.\" Fuck. For three hundred dollars I could have been rubbing her down right now. So close to my dream. And I'd still have had a chance later. Now I'd slammed the door shut. Damn it!\n\nI guess my sales technique needed a little work. Or a lot.\n\n* * *\n\n\"So? How did it go?\" Mom asked when I walked into the kitchen for a soda.\n\n\"It didn't. She needs a lot of work done, but can't even afford to pay for the parts. I guess she's going to shop around, or maybe try to do it herself.\" I tried to keep the disappointment out of my voice.\n\n\"Really? That's too bad. Are you sure you couldn't work out a deal? Maybe she could pay you over time.\"\n\n\"We explored the idea, but I still can't afford to buy the parts on my own.\"\n\n\"You could charge it on my card. That would give you close to 30 days to pay it off without any interest. Maybe she could make payments.\"\n\nI was rummaging through the pantry looking for a snack. \"I'll keep that in mind if she doesn't come up with a better solution on her own. In the meantime I'm going to fix that board in the fence, and you might put the word out to your other friends that I'm available for odd jobs.\"\n\n\"Ok. But I'd still appreciate it if you did what you could for Amy. She's having a difficult time right now. She could use a little sunshine in her life.\"\n\n\"Alright Mom. I get it. I'll talk to her tomorrow, to see what I can do.\"\n\n* * *\n\nIt was vacation. I'd stayed up late, and was hard at working avoiding getting out of my warm bed, when Mom knocked on the door. \"Are you awake, Alex?\"\n\nI rolled over and sat up. \"Sure. What's up?\"\n\n\"That was Amy Daniels on the phone. She wants to know if you can go over first chance you get.\"\n\nI looked over at the clock. 10:08 AM. Damn it. \"Got it. Thanks. I'll go right after I clean up.\"\n\n\"Good. And remember what I said. Do what you can, and you can use my card to charge any parts if you need. Please, Alex.\"\n\n\"Ok, Mom. I'll do what I can.\"\n\n* * * \n\nAmy Daniels met me at the door, a little more conservatively dressed than the previous day. Just a little. She had a black crochet cover-up on, that was more holes than material, and I could see she had a white bikini on underneath it. It might have been sexier than the bikini alone.\n\n\"Hi Mrs. Daniels. Mom said you called.\"\n\n\"I did. Come in, please,\" she turned and walked into the kitchen. \"Can I get you a drink, Alex?\"\n\n\"Light beer if you have it.\"\n\nShe didn't comment on my being underage, or drinking before noon, or any other such nonsense. She brought me my beer, and I saw she was working on a drink of her own. \"Have a seat.\"\n\nI sat on the couch, and she sat down next to me, turned sideways.\n\n\"I'm sorry about yesterday. It was just that your suggestion caught me off-guard.\"\n\nI turned to face her as well. \"Me too. I don't know what came over me. I hope you'll forgive my rudeness. I was way out of line.\" \n\nHer lips turned up in a poor imitation of a smile. \"Of course. It was all just a small misunderstanding.\" She took a deep drink from her glass, and put it back down. \"I know it's my fault. I started with the whole sunbathing nude, and putting lotion on. It's easy enough to jump to conclusions from there. But I'm not like that, you must know. I see how you look at me, Alex. I have for years. And I understand. I thought that a little show might be all it takes, but I forget sometimes you're not just a kid anymore.\"\n\n\"Please, Mrs. Daniels. You don't need to explain. I'd like to do this for you, if I can. Let's just figure out how. Anyway I look at it, it's going to come to at least $1200 in parts, maybe as much as $1500, and that's if we're lucky.\"\n\n\"I know. I made a few more calls, and I understand you are really doing your best. I had one company in here today, and to get it done by this weekend they wanted over $4500. It just seems crazy! That much to fix a pool! It was only $25,000 to put it in. Your estimate of $2000 was more than fair, I'm sorry about the way I behaved.\"\n\n\"No more 'sorries',\" I reminded her. \"How much money can you come up with now?\"\n\n\"A little over a thousand.\"\n\nI heaved a sigh. \"Could you make up the difference in the next 30 days?\"\n\n\"Another $1000?\"\n\n\"No, the rest of the cost of the parts, maybe $300.\"\n\n\"I can get you at least $250 in the next couple of weeks, and the rest after that.\"\n\n\"Ok. I can work with that. That takes care of the money for parts. Now what can we do about the rest? We have to come up with an answer quick, because if I'm going to get this job done in the next three days, I'll be working non-stop until then, and we don't have a minute to waste.\" I was hoping she was still willing to go along with the topless/nude sunbathing.\n\nI could see her blushing. \"To start, the sunbathing and lotion part is still on the table. If you'd like.\"\n\n\"That's a very nice start.\" Hell, I'd settle for that, if that's what it took, but it was too early to tell her that.\n\nShe looked down, unable to meet my eyes. \"I can't, I really can't be giving you blow-jobs every morning. Would a hand-job be enough? Maybe during your lunch break? I'll be happy to feed you while you're working here.\"\n\nDaily hand-jobs? \"Amy, that would be wonderful.\"\n\nShe seemed to perk up at my words, and she reached her hand out and put it on my knee. \"Really? You'd settle for that?\"\n\nNot much of a salesman. It was obvious I could have pressed for more. \"Amy, if that's all you're comfortable doing, I'm not going to force you into anything more.\"\n\nHer smile was back. \"Thank you Alex. I was thinking, if you'd like, after the job is done, you could come by once a week to take care of the pool. I could pay you $20 each time, and another hand-job, to kind of make up for things.\"\n\nJackpot. I'd hit the horny teenager lotto. I took her hand in mine, and gave it a squeeze. \"I'd love to be your pool-boy, Amy.\"\n\nShe turned away again, suddenly nervous. \"I guess that takes care of the daily payments. What are you going to need for the final payment? An afternoon in bed is simply out of the question.\"\n\n\"I'll tell you what. Let's get started. I have to get the pump motor as soon as possible, since nothing else can be done until that's fixed. If I somehow manage to get this pool clean in time for your party, you can decide what's fair as a final payment. I trust you.\"\n\nShe looked at me steadily. I wasn't sure what was going through her brain. She took a long sip from her cup. \"That sounds fair. We'll base it on how good a job you do. I'll do my best to make sure you're not disappointed.\" She scooted closer. \"Do you need your first payment now?\" She looked down at my crotch.\n\nPinch me. I'm dreaming. \n\n\"I'd love to, but we really need to get that pump fixed. I'll take the cash now, and we can leave the rest of the payment for later. I should warn you, I'm going to need some help from you if we're going to get this done in time.\"\n\n\"What kind of help?\" she asked hesitantly. \n\n\"Some jobs need more than one person. Especially scrubbing the pool. You don't mind helping with a little of the work, do you?\"\n\n\"If it'll get the pool clean, I'll do whatever I have to.\"\n\n\"Then we have a deal. Can you write out a check? If so, I can be back with the parts I need in about an hour.\"\n\n\"Let me get my pen.\"\n\n* * *\n\n\"Mom! Can I borrow you're credit card? I've got $1000 from Mrs. Daniels, which you can deposit. She'll pay the rest in the next few weeks.\"\n\n\"You worked out a deal? That's great! Thanks so much. I owe you for this one. I promise you, I'll make sure you get paid better in the future. Every job won't be a charity case.\"\n\nPaid better? That might take some doing. \"No problem. I didn't have anything lined up for the next few days, and when we're done, I'll have a regular job taking care of her pool each week.\"\n\n\"Terrific. Here's the card. And make sure you do a good job. And be respectful.\"\n\n\"I'll do my best, Mom. I promise.\"\n\n* * *\n\nTwo hours later, I was back at the Daniels', tools in hand, cursing the installer that had placed the pump in such an awkward position. Amy was standing nearby, watching me struggle. She was still dressed in her bikini and cover-up, and I wanted to remind her about the sunbathing nude deal, but didn't have the guts. \n\n\"Damn it!\" I growled, giving up on my current attack. \"I'll have to remove the surrounding pipe. Nothing's ever easy, is it?\"\n\n\"Nothing worth doing,\" she said. \"But I know you'll get it done.\" I felt her gentle hands come to rest on my shoulders.\n\n\"Damn straight I will. If someone got it in here, I'll sure as hell get it out.\" It was already after 1:00, and a sizzling 94 degrees outside. If the water was just a little less swamp-like, I might have chanced diving in to cool off.\n\n\"Let's take a break from this for a minute,\" I suggested.\n\nI saw her step back nervously. \"Oh.\" She looked at me expectantly. \"A break? Does that mean, uh, you want your payment now?\"\n\nI stood slowly, stretching. \"You're killing me, beautiful. I want it more than you could possibly imagine. But I've got to get this done, or we can't empty the pool, can't work on the inlets and pump line, can't do much of anything.\" I walked past her, toward the deck. \"Do you have a heavy duty extension cord we could use?\"",
        "\"Sure. There's one in the garage.\"\n\n\"I'm going to grab my sump pump to start the draining. Plug in the extension cord, and bring it here.\"\n\nIt took about 15 minutes, but we had a fat hose slowly draining the pool, and I was ready to attack the main pump again. I looked over at my partner and I could see color on her cheeks from the sun. \"Amy, your face is getting red. You better get some sun-block on.\"\n\nShe reached up to her face, then I saw the realization hit her. \"I'm so sorry. I promised to, um, dress down, didn't I? And you should be the one putting the lotion on me.\"\n\nI took her by the hand, and drew her over to the shade. \"Let's get you out of the sun for now. I can't have you burning up on day one, can I?\"\n\n\"I can't help you from over here,\" she argued weakly.\n\n\"Let's make a deal. I can handle pulling out the pump on my own. I might need a little help disassembling it and replacing the motor. Why don't you relax for a few minutes, and dress down for me? When I'm done pulling the pump, I'll lotion you up. That should be all the incentive I need. Once the motor is replaced, you can do a little something for me. And when it's back installed, you let me reapply the lotion. How's that sound?\"\n\n\"Can we get all that done before 6:00? That's when Dale gets home.\"\n\n\"If I don't, I guess I forfeit the payment.\"\n\n\"That wouldn't be fair!\" she practically whined. \"You've already worked so hard.\"\n\n\"Incentive. I think I'll get it done.\"\n\n\"You better get going then,\" she told me, giving me a little push, and the cutest little smile.\n\n* * *\n\nRemoving the line to the pump at the multi-port valve made the job a whole lot easier. It didn't take me 20 minutes to get the pump removed, including documenting the wiring. I carried the heavy pump into the shade of the porch where I had a table set up and my tools. I also had my printout for replacing the motor. I was surprised, and more than a little disappointed, to find that Amy wasn't there.\n\nI walked over to where the bare faucet exited the side of their house, and washed my hands and face the best I could, and giving myself a quick spray-down to cool off. When I got back to the porch, Amy was standing there, looking awfully nervous, next to a tray with drinks. She wasn't topless. She was naked as the day she was born.\n\n\"I didn't think you'd be done so fast,\" she hurried to explain.\n\n\"Incentive.\" I looked her over slowly. \"Damn, you are one beautiful woman.\"\n\nShe smiled shyly, her hands crossing over her crotch. \"Thank you.\"\n\nI took the Bud lite off the tray and downed half of it. \"God, I needed that. It's a scorcher today.\"\n\nShe watched me quietly.\n\nI saw there were several different bottles of suntan lotion on the table. I started looking them over. I looked back at Amy and her very clear tan lines. \"You don't sunbathe nude much, do you?\"\n\n\"Never.\"\n\nI selected a bottle of SPF 50 sensitive skin sun-block and an SPF 30 Hawaiian Tropic lotion. \"Looks like you didn't get too burned this morning, this should do the job. I'll put it on you now if that's Ok.\"\n\n\"That's the deal,\" she said softly.\n\nI grabbed the SPF 30, and squirted a liberal amount into my hand. \"I'm going to start with the areas that are already a little tan, and afterwards we'll protect those areas that aren't used to being exposed to the sun.\" I walked behind her, thankful her hair was tied up. I put my hands on her shoulders and started working in the lotion. Jesus help me, I was touching Amy Daniels' naked body. I took my time, carefully coating each slender arm and the entirety of her back. I bypassed where her skin was whitest across her back, and on her butt. She stood still for me, barely moving.\n\n\"How hard is it going to be replacing the motor?\" she asked.\n\nI was kneeling behind her working her toned legs. \"Spread your legs a little Amy, please.\" She opened them a little more than shoulder wide, and I felt her tremble when I coated the inside of her thighs up to her crotch. \"I'm not sure. I've done it once before, on a different model. It should be a little easier this time. Figure on less than two hours.\"\n\n\"Before 4:00 then? That would be good.\"\n\nI completed down to her ankles and rubbed some lotion into the top of her feet. Then I moved in front of her, watching her eyes tracking me. \"Hold your hair back from your face and close your eyes.\"\n\nShe caught her breath when my fingers touched her face, and she tilted her chin up. I carefully covered her face and neck making sure to get her ears and the top of her cheeks. She looked so damned pretty, I forgot myself and pressed my lips to hers. She jerked away for a moment, then leaned back into me, letting me kiss her, her eyes held tightly shut.\n\nIt was a soft tender kiss, my tongue barely outlining her lips. Her mouth opened slightly, and our tongues met briefly. \"We should get some chap-stick on your lips, gorgeous.\"\n\n\"It's on the table.\"\n\nSure enough. I held her chin still and painted her lips with the cherry lip-balm. I went in for another short kiss, tasting the difference. She responded sweetly, opening her lips to me quicker, her tongue grazing against my teeth.\n\nAgain I broke it off, grabbing the tanning lotion and traversing her front, still avoiding those areas I'd most like to be rubbing. I did a thorough job, exploring every square inch of her tanned skin. \n\n\"Ready for the rest?\" I asked her, putting the 30 aside and reaching for the 50.\n\n\"I guess so,\" she said nervously.\n\nI dipped my finger into a pool of lotion and drew a line across her back, just a little wider than her existing bikini top line. Loading up my hands with more of the cool cream, I dropped to my knees and placed my hands on her nice round butt cheeks. They flexed cutely under my touch. It was beyond comprehension, and my brain was in imminent danger of sensory overload shutdown. My hands grasped her white globes, squeezing gently, getting a feel for the flexibility, softness, and texture. I moved them, in small slow circles, gradually growing larger, exposing her most private parts to my hungry eyes.\n\nI blanketed them completely, spending as much time on her butt as I had on her complete back and legs. I carefully traced my fingers down her crack, brushing across her sexy little pucker repeatedly.\n\n\"That's a little much, Alex,\" she said softly.\n\n\"Don't want you getting your beautiful skin burned. Open your legs,\" I told her.\n\nShe was trembling as she spread her legs and leaned over, her hands resting on the table. I rubbed the lotion along the sides of her pussy, over and over again, slowly opening her up a bit. Her lips were swollen and I leaned in close, my face inches from her. I traced a finger up her slit, then into her, just enough to feel her silky moistness. She fought a losing battle to stifle a moan. \n\n\"Alex, please,\" she gasped.\n\nI had three days and countless opportunities ahead of me. That reminder to myself was enough to endow me the patience and restraint to finish without getting too carried away.\n\nI got up and she slowly straightened. I saw a hint of a smile. \"Pretty damn thorough,\" she observed.\n\n\"Always.\" I turned her away from the table, lathered up my hands and went at her remarkable tits.\n\nAgain, I enjoyed myself, feeling, kneading and fondling her full breasts, leaving no part of them untouched. Her nipples stood bravely at attention, and I played with them a fair amount. She was breathing hard by the time I was finished. \n\nI dropped to my knees, loaded up on sun-screen, and took care of the smooth white flesh down below. I behaved better this time, covering her thoroughly, but only spending less than a minute on her pussy, once more fingering her lightly before declaring my work done. I managed to stop before any more warnings.\n\nI was hard as a rock, my dick sticking straight out, tenting my bathing shorts obscenely. Amy was keenly aware of it, and reached down, grasping my shaft. \"Sure you don't want your payment now? You look like you really could use it.\"\n\n\"I want it. Desperately. So let's hurry and get this motor swapped out, before I lose my mind.\"\n\nShe giggled. \"Got you a little worked up, did we?\"\n\n\"A little? You've got the greatest body I've ever been close to. Touching you like that had my heart racing like a NASCAR winner.\"\n\n\"I guess we better get started.\" She leaned closer, \"I'm looking forward to paying you off,\" she whispered softly.\n\nThe difficulty lay in removing the pump assembly from the outer shell. Amy was leaning over the pump, her hands braced against it, all of her weight pressing down on it, to hold it still. Her tits were squeezed out between her upper arms, driving me crazy. I was tugging on the pump, pulling from side to side, trying to wiggle it out, and her tits were responding to my actions by shaking like crazy, making me want to throw everything to the side and gobble them up. \n\nI kept looking up at her as the plastic separated, a few millimeters at a time. \n\n\"What?\" she asked, catching my eye.\n\nI was honest. \"Your incredible tits are driving me crazy.\"\n\nShe giggled and gave a little shimmy. \"Oh, these old things?\"\n\n\"Damn you're hot, woman.\"\n\nShe smiled, then leaned forward, her weight still pressing downward, but about a foot closer. \"Hot for my pool-boy.\"\n\nShe was killing me. With a growl I yanked hard and the two pieces separated, almost landing me on my butt.\n\nShe laughed out loud. \"I see what you mean by incentive. If we get this done by four, I'll let you play with my tits while I'm paying you off.\"\n\nShe left me, with the excuse that she was going to clean up. I started the disassembly, and watched her lay out in the sun, chatting on the phone, completely naked. I wanted to throw the tools aside and jump on her.\n\nAt 3:44 I was attaching the last of the bolts. \"Done. Now to see if it was done right,\" I called out to her, mesmerized as she walked toward me, her body glistening in the sun. She was wiping herself down with a towel and casually wrapped it around her waist.\n\nI pulled out my test wiring harness, and plugged it in. With a flick of a switch, the pump came to life. \"Ta-da! Three-hundred thirty two dollars, and 3 hours later, we have ignition.\"\n\nShe smiled for me. \"The pool company wanted $1600 parts and labor to replace the pump.\"\n\n\"I guess you're getting your money's worth.\"\n\n\"And I imagine it's time to make sure you're rewarded for coming to my rescue.\"\n\nI didn't have any witty response for her, and thankfully didn't need one. She lowered my shorts, freeing my aching erection. Within a few moments she had me reclining on one of the loungers, sitting next to me, her hand holding my cock.\n\nHer hand glided up and down my shaft, silky soft against my tender skin. She grabbed a bottle of tanning oil, and drenched me, her hand sliding freely. I closed my eyes, as near to heaven as I was ever likely to get. \"God, please, let me die now.\"\n\nShe giggled. \"Now that would be a shame, since we still haven't gotten to the good part.\" Her fingers gripped a little tighter, as if trying to draw my essence outward. \"I've felt so guilty for the last few hours, seeing you working so hard, that huge bulge in your shorts never going down. You've been hard for me since you got back from the store, haven't you?\"\n\n\"A lot longer than that,\" I confessed. \"Years longer.\"\n\n\"Then it's about time I did something about it, isn't it?\"\n\nI groaned for her, thrusting back against her hand. \"This is incredible. Just like that.\"\n\n\"Hard to believe I let you talk me into doing this for you every week for the rest of the summer. Can you even imagine anything like it? Now every single week, I'm responsible for making sure that first we prime this monster of yours, and then we milk it dry.\"\n\nShe moved up the chair, until she was sitting beside my waist. \"You've always liked my titties, haven't you, Alex?\"\n\n\"Always,\" I managed to groan.\n\n\"You can touch them, if you like.\"\n\nI reached out and cupped her tit in my hand. So beautiful. So perfect. With a loud groan I came for her. She continued stroking me, drawing forth every last drop. \"Wow, Alex! You came a lot! Been saving up for me?\"\n\nI twitched when her hand cupped my sensitive head and twisted softly. \"Since last night.\"\n\nShe reached for a towel and wiped me down, before handing me the rest of my Bud. \"I hope I didn't disappoint you. But you better get going if you're going to finish in time to give me another lotion treatment.\"\n\nIt took a good bit longer to get the pump reinstalled. Close to an hour, including wiring and testing. I stood up and called out to Amy who was laying out under the late afternoon sun, watching me, when she wasn't texting her friends. \"Done. Time for the test.\"\n\nShe got up, and walked toward me, her naked body still an amazing vision. She giggled as she got closer. \"Hard again? Already?\"\n\n\"Still,\" I laughed with her.\n\nI leaned over and hit the filter button. The pump kicked on, and I heard the tell-tale hum and rhythm of the priming before the water from the bottom of the pool started to flow into the pump.\n\n\"Phase 1 is done. You've got a working pump again.\"\n\n\"Not a moment too soon. I'm overdue for another layer of suntan lotion.\" She walked over to her lounger, straightened out her towel, and laid down on her belly.\n\nI peeled off my sweaty shirt and walked over to the faucet so I could clean my hands and face. I splashed the water over my body a bit to cool off, then retrieved the suntan lotion from the porch.\n\nOnce again I started with the SPF 30 and applied it to most of her back and legs, enjoying the feeling of her skin under my hands. She was quiet, small sounds of satisfaction escaping her on occasion. Then I had the SPF 50 in my hands and I went to work on that beautiful ass. \n\nHer cheeks were full and soft and felt magical in my hands. After a minute or two when I started down her crack, she spread her legs for me, bending one knee outward to expose herself.\n\nI rubbed her soft pussy, feeling the light stubble at the top, teasing her, playing with her. I opened her up bit by bit, tugging on her fleshy lips, slowly insinuating a finger into her. She moaned for me, and I started pressing a second one in with the first.\n\n\"Enough, Alex,\" she managed to gasp, bringing her legs together.\n\nI pulled out, rubbing her sweet butt cheeks one last time.\n\nShe rolled over, her eyes intense. \"Somehow I don't think that last part was purely necessary. I don't see much chance of getting sun burned there.\"\n\nI grinned. \"You know I like to be thorough.\"\n\nShe gave a small shake of her head, then leaned back for me to finish my job.\n\nI started with the SPF 30 again, working the lotion into her skin, thorough as ever. She was relaxed, eyes closed, letting me caress and fondle her. When I reached for the SPF 50 she opened one eye, watching me. \"Not too crazy, Ok?\"\n\nI leaned over and gave her a soft kiss. \"Maybe just a little?\"\n\n\"A little, that's all,\" she murmured, closing her eyes again.\n\nI started with her breasts again, leaning over her and playing with them to my hearts content. Her nipples got hard almost instantly, and I tugged on them lightly, wrenching a soft gasp from her sexy lips. I tongued her nipple.\n\n\"Alex,\" she softly warned.\n\nI sucked the nipple into my mouth, ignoring the taste of the sun-screen.\n\n\"Alex!\" she barked, a little sharper.\n\nI heeded her warning and went to work down below. I made sure her pale white skin was well protected before I moved between her legs. She opened them for me, and I rubbed her softly before venturing to insert my fingers back inside of her. I heard a soft whimper escape her lips, driving me crazy.\n\nI climbed onto the lounge next to her, stretching out beside her, my fingers never leaving her warm nether embrace. She turned and looked at me, as I brought my face closer to her.\n\n\"You're being very naughty, young man,\" she whispered.\n\n\"Kiss me.\"\n\nShe closed her eyes and leaned her head closer. I pressed my lips to hers, and kissed her long and deep, my mouth claiming hers, my tongue exploring, while my fingers worked their magic inside of her. \"Alex, this is bad,\" she said softly while she squirmed under my touch.\n\n\"I want to taste you, Amy,\" I confessed.\n\n\"Down there?\" she whispered huskily.\n\n\"I could live down there, my tongue buried inside you.\"\n\nShe moaned, clamping her legs over my fingers, coming for me so sweetly. I eased back, stroking her lightly, showering kisses over her beautiful face.\n\n\"We can't Alex. Not now. Dale will be home soon.\"\n\n\"I know. Just remember that when you're thinking of ways to reward me when this is all done.\"\n\nShe gasped slightly as my fingers slid back inside of her. Then she chuckled. \"Reward you? That's a reward I'll have to work hard to earn for myself.\"\n\nShe reached out and pushed me away, closing her sweet legs. \"Enough. That was very, very naughty of you. I think you'd better get back to work, and I need to start getting ready for his Highness to make his appearance.\"\n\nShe sat up and put her bathing suit back on. \"Oh. I guess I didn't need all that lotion after all.\" She smiled her dazzling smile, and broke my heart for about the thousandth time.\n\nI had disassembled the big filter, and the grids were a mess. I made a quick trip to the pool store for 8 replacement filter elements, another $180 down the drain, and was finishing installing them when Dale Daniels came out to see what I was up to. \n\n\"Hey Alex,\" he called out, walking forward with his hand outstretched. I wiped my hand on my shorts and shook his. \"How's school been treating you?\"\n\n\"Not bad. Got a 3.8 GPA, and making some new friends,\" I told him.\n\n\"Not to mention all those young girls looking to expand their horizons, right?\" he laughed. \"God, I loved college. Freshman girls. Yum.\"\n\nI laughed along with him. \"Nothing to complain about there.\"\n\n\"I bet. You really think you can get this mess cleaned up in time for the party?\"\n\n\"I think so. I'll give it my best.\"\n\n\"If you need any help from Aims, let me know. I'll make sure she does her part. Can't believe she let it get like this after all those promises to take care of it.\"\n\nI felt the urge to defend her. \"It's not that bad. The filter and pump are back in top shape. I should have the water cleaned out by tomorrow evening.\"\n\n\"That'll be a miracle. I hope she's paying you enough. This is coming out of her household money, but if she can't cover it, let me know. I'll make up the difference and settle with her. Take it out of her cute little ass if I have to, if you know what I mean.\"\n\nThe man was a pig. \"I'm pretty sure we'll be fine, but I'll keep that in mind.\"\n\nHe slapped me on the shoulder. \"You do that. Good job here. Keep it up, and I might find some more work for you around the place.\"\n\n\"Thanks. I appreciate it.\" \n\nI had the chlorinator soaking in a diluted acid bath, cleaning the cells, when Amy made her appearance. She was dressed in shorts and a blouse, but I couldn't help but think of what was hidden underneath it.\n\nShe pulled up short, while I rinsed off the chlorinator. \"Jeez. Now I know what a sheep feels like walking into the lion's den. You look like you're ready to eat me alive.\"\n\n\"Given half a chance,\" I told her with a big smile.\n\n\"Shhh. Behave yourself.\"\n\n\"You started it.\"\n\nShe shook her head at me. \"How are we doing?\"\n\n\"Pretty much done here. Tomorrow we clean the lines, empty the pool, and scrub it down.\"\n\n\"What time are you going to be over,\" she asked.\n\n\"I figure around 9:00. Got a lot to do.\"\n\n\"Make yourself at home. I'll leave the gate unlocked. I've got a couple of morning errands to run, but I'll be back to help you as soon as possible, Ok?\"\n\n\"Perfect. I should be able to get a lot done, without a Goddess distracting me.\"\n\nShe rolled her eyes at me. \"Whatever. I've got to go in. See you tomorrow, poolboy.\"",
        "* * *\n\nI was waist deep in horrible green slimy water, the pump working diligently to drain the pool, when I heard her make her appearance the next morning.\n\n\"Jesus, Alex! How can you stand to be in that slop?\"\n\nI was pulling the fish-tape back out of the cleaner line, having spent the morning cleaning the intakes out of their accumulated debris. \"You do what you have to, when you have to, so that you can do what you want to.\"\n\n\"And what do you want to do bad enough that you'd be doing that?\"\n\n\"I'm quite certain you know, my Goddess of the morning.\"\n\nShe laughed at me, as I rolled in the last of the metal tape. \"I'm going to go change now, can I bring you something to eat or drink?\"\n\nI was slogging my way out of the gunk, and walking back to the intake valves which were half disassembled. \"Before you go, can you turn on the water at the faucet for me when I tell you to? Slowly at first, until I tell you otherwise.\"\n\nI had my Drain King bladder wedged into the pipe, ready to go. \"START IT,\" I shouted out, and she turned it on. I watched the bladder fill and seat itself, stopping the water from coming back out of the pipe. I got up and watched the pool end of the pipe. \"MORE,\" I shouted out. I watched the water start to flow, slowly at first then faster. Pieces of debris start to come out, then a large mass of mystery stuff blew out of the pipe, and water rushed out under pressure. I looked over and Amy was watching the results. \"That's it, you can turn it off.\"\n\nShe walked over to me afterwards, while I was pulling out the hose and removing the bladder. \"That's it?\"\n\n\"That was the last of three. All clear.\"\n\n\"A year ago the pool guy wanted $250 to clean those pipes.\" \n\n\"Didn't cost you a penny. I already had the fish-tape and bladder. Lucky you.\"\n\n\"You're a miracle worker, Alex. Have I mentioned that? You are really piling up the brownie points.\" She gave me a huge grin. \"So which bathing suit do you want me to not wear today?\"\n\n\"Boots, sweat pants, a long sleeve shirt and rubber gloves. And as much as I hate to say it, you're going to have to actually wear them.\"\n\n\"Really?\"\n\n\"Really. We're going to scrub down the inside of the pool. And we're using muriatic acid, which we are NOT letting touch a single inch of that heavenly body.\"\n\nShe sighed loudly, then turned away from me. For my part, I was still scooping leaves out of the bottom of the pool with a shovel. The water level was down to the point where it was only a few inches deep in the shallow end. I got out of the pool and started prepping the acid wash. \n\nI wanted to laugh when Amy made her appearance, but I valued my life too much so I stifled it. \"You look hot,\" I teased.\n\n\"I AM hot.\"\n\n\"Shouldn't be too long,\" I told her. \"Your job is pretty easy. While I wash down the sides with acid, you're going to follow behind and use the scrubber on the wall from the side. When we've finished an area, you'll rinse it with a hose, while I scrub from the inside. We're using a strong acid and the fumes are really bad for you, so you'll have to wear this respirator.\" I handed her the gas-mask looking device, watching her eyes bulge.\n\n\"Are you serious?\"\n\n\"100%. We'll be done in an hour, and your lungs will thank me for the precautions.\"\n\n\"How come you get to wear shorts and a t-shirt?\" \n\n\"My skin doesn't matter. Hell, a few nice chemical scars might give me some character. Plus I've done this before and I'll be careful. Notice I'm wearing boots and a respirator too. And I'll be wearing goggles, which you don't have to worry about, if you'll wear your sunglasses.\"\n\n\"Are we ready?\" she asked.\n\n\"Not quite. I want to get as much of this old water out first.\" The pump was still draining the bottom of the pool. I was pushing all the debris down to the bottom. \"You can spray the sides and bottom to clean them as much as possible,\" I told her.\n\nWe worked at it, and she made sure to hit me with the hose a few times. \"Hey!\" I barked at her, when she hosed me down pretty thoroughly from just a few feet away.\n\n\"Just wanted to make sure there was still a beefcake pool-boy somewhere under that slime-man exterior.\"\n\nIt was only a few minutes until the water at the bottom was only a couple of inches deep. \"Get ready to shut off the filter,\" I told her.\n\n\"How?\"\n\n\"On the panel. Press the button that says 'filter'.\"\n\nShe stood beside the pool panel, and when the water started gurgling at the bottom I told her to kill it.\n\nA few last minutes shoveling out all the old leaves, grime and dirt, and we were ready to go.\n\n\"Time to start cleaning. We'll work from the deep end to the shallow, so I don't end up standing in a pool of acid at the end.\" I had a standard sprayer filled with a 1 to 1 dilution of the acid. I sprayed a swath about 5 feet wide from the top to the bottom, starting in the deep end. The yellow liquid started bubbling immediately, and while she brushed the area, I watched for any stains that needed a second treatment. \"Looks good, now the rinse.\"\n\nWhile she rinsed the section, I took a long-handled scrub brush to it. A few seconds later we had a bright and shiny section of clean wall.\n\n\"That's amazing,\" she said through her muffled respirator.\n\n\"Yep,\" I was already onto the next section.\n\nThe walls only took about 20 minutes, but I was already getting overheated. I imagine she was doing worse. \n\n\"Five minute water break, and then we finish this up.\"\n\nShe stumbled over to the porch, removing her respirator, and peeling her shirt off, exposing a pink bikini top. She was definitely red in the face, and sweating profusely. \"I'm burning up,\" she said.\n\n\"I know, me too.\"\n\n\"Is all this really necessary?\"\n\n\"If you want you can leave the shirt off for the next part. Just stay above the acid line and spray toward me. The long pants and respirator have to stay.\"\n\n\"I had no idea it was this much work,\" she confessed.\n\n\"Ounce of prevention, pound of cure,\" I reminded her. \"With luck, you won't have to do this again for a very long time.\"\n\nShe polished off a beer with me, before we suited up and hit the pool again.\n\nAnother 30 minutes of me applying acid and scrubbing the bottom, with Amy spraying down the surface behind me, and we were down to the 'beach' entrance, which was the most dangerous for me. The shallow angle of the spray had the acid splashing up on my legs if I wasn't careful. We managed to complete that with most of my skin intact, and from inside the pool we washed all the liquid down to the deep end, around the drains. \"Get me the large container of soda ash, please.\"\n\nShe left the pool while I scrubbed the last area. She returned in a minute with container. \"What's this for?\"\n\n\"Neutralize the acid before we pump it out of the system.\"\n\nI dumped the mix into the standing water, stirred it up, and brushed the bottom again. \"Alright. Turn the filter back on, and we'll get rid of this junk.\"\n\nIt was nice to have her doing the running back and forth for me. My arms and back were aching from the continuous scrubbing. I heard the pump kick on and watched the water quickly disappear. I brushed the dwindling puddle toward the twin drains then grabbed the hose and sprayed it down until the last of the water vanished. \"KILL IT!\"\n\nI heard the pump shut down. \n\n\"So, what do you think?\" I asked her. \n\nShe was standing at the edge of the pool, stripping off the gloves and sweat pants. The respirator was already long gone. \"Looks like new.\"\n\n\"Doesn't it? We're two thirds done. It's clean. Now it has to be filled and opened, and we have to test the cleaner.\"\n\n\"Why were we in such a hurry? It only took two days.\"\n\n\"We got lucky. We could have ended up with a serious problem in the lines, or in the filter plumbing and that could have eaten up another day. Also, the water needs to circulate for 24 hours before people can use it and we'll have to tweak the water chemistry tomorrow and Saturday. Still lots of little jobs to do.\"\n\n\"Can we take a break?\"\n\n\"In a few minutes. Let's get started with refilling the pool. That's going to take a long time.\"\n\nLuckily, one of her sprinkler settings turned on a water inlet to keep the water level up during the hot season. Between that and the two outside faucets, we had the pool filling as fast as possible. \n\n\"Come on in, the water's fine,\" I told her, standing in the bottom of the pool.\n\nShe laughed and joined me, just in time to get sprayed by the hose. \"Damn it, Alex! That's cold!\"\n\n\"I thought you were hot?\" I teased.\n\nShe grabbed the second hose and sprayed me down pretty thoroughly. \"I thought you liked me hot.\"\n\nI went to her and took her in my arms. \"I love you hot.\"\n\n\"That's nice to hear,\" she said softly, leaning against me.\n\nI kissed her forehead. \"What do you say after we clean up a bit, we have some lunch, and then I oil you up nice and good before I start on my next chores.\"\n\n\"Mmm. Sounds like a plan.\"\n\nWe hosed each other down. Amy made me strip completely, and bathed me like a child, determined to get every last remnant of swamp water off of my skin. She was particularly mischievous cleaning between my legs, running the hose right down my crack while she rubbed her hand behind it. She made me sit on one of the built in underwater benches, and stood in front of me, pouring the cold water across my crotch, and running her hand through my pubes, and over my balls and cock. I was semi-hard, the icy water making it a challenge to firm up the rest of the way. \n\nShe stepped back, and looked me over. \"Much better. There's my handsome poolboy. Swamp Thing is gone at last.\"\n\nShe made us sandwiches while I put away all the caustic chemicals and rinsed off the sprayers and brushes. When she came out of the kitchen she was topless, and looked simply incredible.\n\nShe grinned at me watching her. \"Down boy. Lunch first.\"\n\nWhile we ate our sandwiches, washed down by a Coke, she surprised me.\n\n\"I was thinking. I can't stand the thought of you being uncomfortable all day. So I thought that whenever you get hard, I'd take care of you.\"\n\nI almost spit up my Coke. \"That's a hell of an offer but I don't think it'll work.\"\n\n\"Why not?\"\n\n\"I won't get anything done.\"\n\n\"How's that?\"\n\n\"You'll be taking care of me non-stop.\"\n\nShe laughed. \"No, seriously.\"\n\n\"Seriously. You know I jacked off 4 times last night just thinking about you.\"\n\nThe look on her face was priceless. \"Four? Four times?\"\n\n\"And that was just thinking about you. Yesterday I shot off pretty quick, but somewhere around the fourth or fifth time, it would probably take you half an hour or longer to finish me.\"\n\nShe just stared at me. Then she took a long drink from her cup. \"I guess that's just a chance we'll have to take. I bet you're hard now, aren't you?\"\n\n\"Of course.\"\n\nShe grinned. \"Shall we get started?\"\n\n\"At least let me lotion you up first, or you'll be doing me back to back.\"\n\n\"What are we waiting for?\" She stood up and removed her bikini bottoms. \"Do me standing. You're way too naughty once I'm laying down.\"\n\nI stood up and went to her little basket of tanning supplies.\n\n\"I want to try 30 all over. I'd like to start working on an all-over tan,\" she said.\n\nI stood behind her, and rubbed her down thoroughly, working straight down her body. I didn't spend an inordinate time on her ass, as much as I wanted to, but I did go back at the end and work my way over her pussy, taking the opportunity to explore her a bit. When she closed her legs, I knew it was time to move to the front. \n\n\"Can I have a kiss?\" I asked before starting. \n\n\"One. And just a little one.\"\n\nHer idea of a little one was perfect by me. She settled into my arms and kissed me back firmly and deeply. Then I was back to fondling her, under the guise of applying tanning lotion. I worked from head to foot, making sure her breasts were well taken care of. When I reached her toes, I started my way back up the inside of her thighs. \n\n\"If you're going to be thorough, wipe your hands down first. I have enough of that stuff inside me already.\"\n\nAll pretenses aside, I wiped my hands on a towel, then reached between her legs. I pulled her close and she hugged me, while I fingered her until I had her moaning nicely.\n\n\"Would you really like to lick me down there?\" she asked quietly.\n\n\"Please.\"\n\n\"Just a little, Ok?\" \n\nI picked her up in my arms, making her squeal, then lowered her onto the lounge. I parted her legs and moved between them, kissing the soft insides of her thighs. She jumped when my tongue brushed across her tender opening. I held her down and sucked on her lips, pulling them out, separating them with my tongue. She seemed to melt into the lounge while I lapped her warm slot.\n\n\"Jesus, that's nice,\" she gasped, running her fingers through my hair.\n\nI spent a long time playing with her. Nibbling her little clit, sucking on her, licking her. I teased her with a couple of fingers, feeling her excitement build for me. The sweetest sounds came from her, sighs, moans, squeals, whimpers, egging me on. Her sudden orgasm surprised me, but I rode through it, my tongue teasing her clit throughout her strong release.\n\nWhen she relaxed, breathing hard, I finished up, taking a last taste of my beautiful boss.\n\nShe sat up, looking at me with obvious wonder. \"God, a girl could get used to that.\"\n\n\"Yours whenever you want,\" I assured her.\n\n\"Get those shorts off.\"\n\nI obeyed, standing in front of her naked.\n\n\"Sit.\"\n\nI did, barely hitting the cushion before her hand was on my cock stroking me. \"Cum for me, Alex. Spray your cum on me.\" She stroked me hard and fast, eager to make me shoot. \n\nAll the warm up had done its job. It couldn't have been two minutes later, when I was gasping, trying to hang on, never wanting it to end. \"I'm gonna come, beautiful. Where do you want it?\"\n\n\"On my tits. Shower me.\"\n\nI stood and turned to her where she was seated. Her hand was a blur, jacking me off. \"Now,\" I warned her.\n\nShe slowed her pace and pointed my cock at her tits. Slow firm strokes drained me, and I squirted several ropes across her firm alabaster breasts. When I was done, she rubbed my cock head with her perky nipples, squeezing out every last drop. \n\n\"There, that should hold you for a while. Let me know when you need my help again.\" She got up and started clearing the lunch mess, my cum clinging to her skin. \n\nI didn't have the heart to tell her I could already use her help. I put my shorts back on, hiding the fact that I was still pretty hard.\n\nI got the pressure washer out and cleaned the area around the lip of the pool, then worked on the tile rim. I spent a good bit of the time watching her reading a book while she got some more sun. Naked looked good on Amy.\n\nThe ping of her phone getting text messages, and her constant responses had me wondering who she was communicating with, and if I was part of that conversation. \"Poolboy, could you come over here a second?\"\n\nI walked over and was surprised to see her hold up her phone, back pointed toward me. \"That was all, thanks. And let me know if you need my help with anything.\"\n\nI was putting away the pressure washer when she came over to help me. \"Looks like you could use some attention,\" she told me, with a meaningful glance below my waist.\n\n\"Lotion first?\"\n\n\"Sure, but make it quick. No fooling around, Ok? And take your shorts off first.\"\n\n\"Got it.\" It only took me a couple of minutes to get her nice and slippery again. I still spent more time on her butt and tits than was absolutely necessary, but she didn't give me too hard a time over it. \n\nThis time she had me sit on a chair, and pulled one of the cushions off so she could kneel on it, at my feet. I had only been semi-hard, but the act of rubbing her all over, and her sexy positioning had its expected effect.\n\n\"Sorry about that last one, you were driving me crazy,\" she explained, taking my cock in her hand and stroking me slowly.\n\n\"I wasn't complaining.\"\n\n\"No. I guess not. Still, I thought we could be a little more playful this time. Not be in such a rush.\"\n\n\"Sounds good to me.\"\n\n\"There's something I was thinking about. I thought maybe you'd like it.\"\n\n\"I imagine you're right, whatever it is.\"\n\n\"Good.\" She reached out for the tanning lotion and squirted a lot at the top of her cleavage. She rubbed it around, then leaned forward, wrapping her tits around my cock. She pushed them together and moved them up and down, sometimes together, sometimes separately. \"What do you think?\"\n\nI groaned, holding her shoulders and thrusting between her soft mounds. \"I think you are amazing,\" I groaned.\n\n\"You like it?\" she whispered shyly.\n\n\"Incredible.\"\n\nShe watched me, smiling sweetly, while her pillowy breasts pleasured me. I had never done anything like it before, but I swore by all that was Holy, I'd be doing it again.\n\n\"Is it exciting you? Can you come for me like this?\"\n\n\"Definitely.\"\n\n\"Do you want to hold them? Fuck my tits with your big fat cock? Tell me what you want.\"\n\nI couldn't even get any words out. I grabbed her soft tits, squeezing them together, and thrusting up between them. I spread my legs as wide as possible, allowing her to get closer. She giggled when she applied a new layer of lotion to her smooth channel. It was different, oily and slippery as hell.\n\n\"That stuff is good,\" I gasped.\n\n\"Fuck my tits, Alex. Use me,\" she whispered huskily.\n\nIt only took me a minute or so longer to reach the point of no return. \"Where?\" I gasped.\n\n\"Right there. Come for me Alex. Come on my tits.\"\n\nWith a groan, I acceded to her command.\n\nShe giggled, and rubbed my cock all over the mess I'd made of her, spreading my cum around her skin. \"I like to feel it on me, feel it harden under the sun, tightening, clinging to my skin.\" She blushed. \"When you told me you came 5 times thinking about me, all I could imagine was laying out in the sun, while you covered me with your spunk over and over again, my skin tingling wherever you coated me.\"\n\nI laughed. \"That's a fantasy I think I wouldn't mind working on. I could save up for a few days, and see how many times I could come for you, back to back to back, marking you as mine.\"\n\nHer hands moved up to her chest, fingers rubbing at my sticky cum. \"You do that for me, and I promise I'll find something equally as wild to do for you.\"\n\nAfter our break I went around the inside of the pool removing each of the water outlets, which took some doing, and re-seating each one after cleaning them. I aimed them upward just enough so that the water would break the surface. I inspected the entire surface, brushing away any last remnants of embedded algae, and working on the calcium deposits where the tile met the gunnite. I took my brush to the outside of each of the pool lights, then decided to test them. \n\nDead. Both of them.\n\n\"Whatcha doing?\"\n\nI looked around and Amy was watching me. \"Your pool lights are out.\"\n\n\"Oh. Yeah, they haven't worked in a while.\"\n\n\"Anything else not working I should know about?\" I may have said it a little more abruptly than I intended.\n\n\"Not really. I mean, nothing I can think of.\"\n\n\"It would help if you told me about everything. It would save a few trips to the store.\"\n\nShe pouted. \"You're not mad at me are you?\"\n\n\"Not mad. But you do need to start paying some attention to the pool if you want to enjoy it.\"\n\n\"I know. I'm sorry, but at least I'll have you to help me all summer, won't I?\"\n\n\"Of course. But if I find out anything else is wrong, I may put you over my knee and give you a reminder.\"\n\nShe giggled. \"Would you like to do that? Paddle my bottom? I deserve it.\"\n\n\"Maybe I should.\"\n\n\"As long as you promise to kiss it better after,\" she said softly.\n\nWith her bent over my lap, both of us naked, it only took me about a dozen smacks to have her buns nice and pink. I held her firmly in my lap, and administered a couple more for good measure.",
        "\"Ow, please Alex, that's enough, it stings,\" she whined.\n\n\"Its supposed to, naughty girl. How else will you remember to do what you're supposed to. Bad girls need guidance.\"\n\nShe was squirming and fighting me, but I could hear the excitement in her voice. Each new smack earned a small gasp, as she turned and twisted to escape the worst of each new blow. \"Please! I'll be good, I promise. Let me be good for you.\"\n\nI slid my hand between her legs and patted her pussy, short firm little slaps that turned out to be surprisingly wet. \"I'm sorry!\" she cried, squirming deliciously. I slid my fingers into her soaked pussy, making her cry out. She opened her legs, and I hammered at her pussy, two fingers pounding away inside of her.\n\n\"Please, Alex. Not like this. Don't make me come like this, it's embarrassing,\" she moaned.\n\nI reached my opposite hand across her body, and started pushing my finger tip against her little brown rose bud. \"No, Alex, that's dirty, stop, please.\"\n\n\"Who was the naughty little girl?\" I asked, my fingertip slowly working inside of her.\n\n\"I was.\"\n\n\"And what happens to naughty little girls?\"\n\n\"They're punished.\"\n\n\"That's right. They're spanked, and man-handled, and they come when they're told.\"\n\nShe couldn't hold still, and moaned sweetly when my finger slid into her butt to the second knuckle. With my other hand, I added a third finger and pumped her pussy hard.\n\n\"You're very wet, aren't you? What kind of a nasty girl gets this wet from playing with her bottom? You're a dirty little girl, aren't you?\"\n\nShe moaned. \"Yes. I'm a dirty, nasty, filthy girl.\"\n\n\"What do I need to do to make my dirty girl come for me?\"\n\n\"Just don't stop,\" she whimpered, writhing under my touch.\n\nI pushed my finger deeper into her ass, pumping it in and out, while my other hand was pushing, pumping, twisting inside of her pussy. I felt the trembling start, then uncontrollable quivering. Her legs were stretched out, muscles rock hard. She cried out, ass cheeks clenching, coming hard for me. I eased my fingers out of her, and rubbed her pink cheeks gently.\n\nShe climbed slowly off of my lap, then crawled over to the lounge. She knelt down on it, raising her bottom up, and lowering her head to the cushion. \"Kiss it better?\" she asked piteously.\n\nI knelt behind her, bestowing kisses all over her soft cheeks, before I opened her up. I stuck out my tongue and slowly licked around her tight rear hole, probing it gently.\n\nShe gave me a soft little moan. \n\n\"Dirty girl.\"\n\n\"Dirty,\" she whispered.\n\nI spread her cheeks wider, stretching them painfully outward, while my daring tongue probed deeper, feeling her tight hole slowly stretch open for me. \"Sweet Jesus,\" she gasped, when I pushed it in hard, moving it around.\n\nI eased back, kissing her softly. \"We're going to have to play here some more,\" I teased her. She shuddered, and I saw her butt-hole twitch and dilate. \"Naughty little girl.\"\n\nI moved lower and kissed her abused pussy, licking her gently, kissing her. I gently massaged her butt cheeks while my tongue apologized to her profusely for the punishment she'd had to endure. She trembled sweetly, her legs shaking, while I worked at her, determined to provide her one more release. She was practically crying, when I felt the weak little shudder run through her. I gave her pussy a last few kisses, before fondling those sweet butt cheeks.\n\nShe sighed, \"Thank you.\"\n\n\"All better?\"\n\n\"Much.\"\n\nShe moved away from me, turning around. \"That. Was. Intense.\"\n\n\"Not too much?\"\n\n\"Oh my God! I don't know when I've ever come that hard. Please tell me that you're hard.\"\n\n\"As carbon steel.\"\n\n\"Lay down.\"\n\nI did, watching her kneel between my legs. She started stroking me, then brought her face closer and closer. I watched in amazement as she started rubbing my cock against her face, across her lips, even up to her eyes. I groaned when she opened her eyes and extended her tongue, licking my entire length.\n\n\"I want to make you come with my tongue.\"\n\nI groaned as she started licking me all over, her hand stroking me when she began licking the head. She licked all around the crown, her tongue gentle one moment, then flicking out against me the next. She'd kiss the crown a couple of times, then run her tongue all around me, her hand slowly stroking. She was driving me crazy.\n\n\"God that's good.\"\n\nShe sat up looking at me, her hand stroking me sweetly. \"You like? Making me a slave to your beautiful cock? Making me lick it and kiss it, fighting the slut inside of me who wants to devour you and make you shoot your nasty load down my throat. Do you wonder how much longer I'll be able to resist these desires? I do. It's so hard holding back. I want to surrender totally, become your total sex slave. Would you still want me, if you knew what a total filthy slut I am deep inside?\"\n\nShe went back to my cock, her tongue working at me fiercely, twisting, turning, licking, teasing. She was absolutely amazing, and it was killing me. I could feel the tell-tale pressure building at the base of my balls, and my body tensed in anticipation.\n\n\"Are you going to come for me, baby? Come all over my pretty face? If you do I'll lick you clean.\"\n\nI pulled away from her and got up on my knees just in time. She leaned her head back, holding her tongue out for me. It only took a couple of strokes for me to erupt over her beautiful forehead, nose and cheeks. She reached out and took my cock in her hand, licking me, squeezing the last few drops out onto her tongue. Then she took my cock and rubbed it all over her face, coating it in my cum, before she licked me clean again.\n\n\"I'm not too dirty for you, am I Alex?\" she asked softly.\n\n\"You are a dream come true, Amy. Literally.\"\n\nShe smiled, giving me one last long lick before lowering her mouth over the head of my cock and sucking on it. She pulled back pouting, \"All empty.\"\n\nShe sat up abruptly. \"So, poolboy. Don't you have an errand to run?\"\n\nI stood up on shaky legs, and looked for my shorts. She laid back on the lounge, grinning at me. \"Hurry back, baby. It's after four. If you're quick, we might be able to get in one last playtime before the Lord and Master gets home.\"\n\nIt only took me about 5 minutes to open the light fixtures, and pull out the old bulbs. I was back in less than an hour, two new pool lights in hand.\n\nI entered the backyard, looking for my pool Goddess. I was about to call out for her, when she opened the back door. She was dressed in her bikini, with a sheer cover over it. She opened her eyes wide upon seeing me, and shook her head quickly. Right behind her Mrs. Thomas came out into the backyard, holding a drink in her hand. She was dressed in shorts and a t-shirt. \n\n\"You're sure I'm not interrupting anything?\" the newcomer asked, looking over at me.\n\n\"You know Alex - Marcy's boy. He's cleaning the pool for Saturday's barbecue.\" Amy turned to me. \"How'd the errand go?\"\n\n\"Great. They had the lights in stock. I'm going to install them now.\"\n\n\"You know Jenna, right?\" she asked.\n\n\"Of course. Nice to see you Mrs. Thomas.\"\n\n\"Please, call me Jenna. I didn't know you did pool work, Alex. I may have to have you over. Our hot-tub isn't working. Do you work on hot-tubs?\"\n\n\"Sure. If you'd like I could check into it on Monday.\"\n\n\"That would be wonderful. Don't let us get in your way, pretend like we're not even here.\" While she said that, she put her drink down and peeled off her shirt, exposing an almost non-existent bikini top. \"You have the best yard, Amy. The west exposure is perfect. And so private.\"\n\nI tried to ignore them as politely as possible. I took off my shoes and shirt and climbed into the pool. The new water was still only knee high in the deep end. I carefully inserted the new bulb using a rag, and closed up the housing, carefully aligning the lens, gasket and housing. Didn't want to have to do it over. Two more screws and it was firmly reattached to the pool wall. \n\nGoing to the shallow end of the pool, I peeked up over the ledge, where I could see the ladies were laying out, their legs pointed toward me, both open enough to give me a nice view. I could hear them talking. I sat down to work on the light, while listening.\n\n\"You've been holding out on me,\" Jenna said teasingly.\n\n\"How?\"\n\n\"You've got yourself a nice bit of eye candy, a hunky young pool boy. Is he full service?\"\n\n\"Shh! Behave yourself,\" Amy whispered.\n\n\"Come on. I know I couldn't keep my hands off that. Please tell me you're getting something off of him. A little afternoon delight?\"\n\n\"God! He's just a boy, Jenna,\" Amy said softly.\n\n\"Hardly. Did you see that package on him? I'd like to invite that thing to come out and play. Say, do you think he'd do my back?\"\n\nAmy giggled. \"He does do lotion, if you ask nicely.\"\n\nApparently that was all she had to hear. \"Alex? You almost done with those lights?\"\n\nI moved away from the wall back toward the deep end, to hide my eavesdropping. \"Just a couple of more minutes.\"\n\n\"When you're done, could you be a darling and put lotion on my back? I wouldn't want to burn.\"\n\n\"Of course. Gimme a minute to make sure everything's working.\" I went back and finished the install of the second light, returned to the breakers and turned on the fuse, then gave each light a brief test. Working like a charm. Things really were going smoothly.\n\nJenna was trouble. No doubt about it. When I turned to the ladies, I saw that she was topless. Big round fake boobs, sitting like ripe melons on her chest. Not that I had problems with soft, yummy melons.\n\nShe had sunglasses on, but her head turned toward me as I approached. She stretched, making damned sure I got an eye-full, then rolled over. \"Thank you so much, Alex.\"\n\nShe had a bottle of bronzing lotion next to her. I picked it up and squirted it into my hands. \"You have a great tan for so early in the season.\"\n\n\"Tanning booth. It gave me a head start. I've been trying to talk Amy into going.\"\n\nAmy's tan, though not as dark, I thought was much better. A nice smooth golden tone, bikini lines showing the sharp contract of her hidden white skin.\n\nI started on Jenna's shoulders and smoothed the oil into her skin, giving her a nice little massage at the same time, squeezing and kneading her muscles. I continued down her arms and started rubbing her back. \n\n\"Make sure you get the sides, sweetie. The tanning beds are lousy for the sides, and I'd hate to get burned.\"\n\nI added some more oil, and let my hands slowly drift down her sides. Her breasts were pushed out from the pressure of lying on them, and I slid my fingers down and around them, feeling their softness.\n\n\"That's perfect, sugar, be as thorough as you can.\"\n\nI reached further, rubbing her tits from the sides, up across the top, and on the bottoms. She raised her body up a bit, inviting more. I slid my hands underneath them, feeling the roughness of her nipples against my fingers. \"Mmm, you're good at this,\" she sighed.\n\nI gave her a couple of more good squeezes, even pinching her nipples between my fingers, before I returned to her back. She settled back down as I covered her lower back. When I reached the swell of her hips I rolled her bottoms halfway down her butt, before rubbing the oil in. She sighed contentedly. I let my hands wander under the material, giving her tight little ass a thorough massage. My motions pushed the material even lower, and she lifted her hips letting them slide downward. With her firm little butt completely exposed, I sat on the lounge beside her, and played to my heart's content, while she cooed contentedly.\n\nRolling the material back into place I started on her upper thighs. She reached back and pulled her bottoms up tight into her crack. I took the hint and massaged her ass some more, even reaching into her crack and teasing her a bit.\n\n\"Remind me to wear a thong next time I'm over,\" Jenna giggled.\n\n\"Jenna!\" Amy tried to act shocked.\n\nJenna opened her legs and I oiled both of them from top to bottom and then back up again, working along the inside of her legs on the return. When I reached the top I pulled the material on her butt back in place, then reached between her legs and tugged the material aside so I could rub the oil over her bald pussy. She cocked one knee open wide, and I slid my fingers along her moist opening, easing my middle finger into her. \"God, Amy. This one's a keeper.\"\n\nI probed her for a few seconds, until I was afraid that Amy could hear the squishy sounds of her wet pussy, with two fingers working her diligently. I started to pull out.\n\n\"Just a little more, please, baby?\" she pleaded. \n\nI moved up on her body, my fingers still playing inside of her, taking a few moments out now and then to tease her swollen clit, while my other hand rested on her upper back and shoulders, softly caressing her.\n\n\"Oh,\" she gasped softly, and I felt the spasming of her pussy around my wet digits. I felt her relax totally, and I carefully adjusted her bottom.\n\nI leaned over her and pressed my lips against her neck. \"Let me know if I can do anything else for you, Jenna.\"\n\n\"Monday,\" she said softly. \"Promise me you'll come over Monday.\" \n\n\"Of course,\" I told her, giving her bottom a soft pat. \"How about you, Amy? Can I do your back for you?\"\n\n\"Would you?\"\n\n\"I'd love to.\" I moved over beside her, getting the lotion and starting in on her shoulders. I took my time carefully covering her back, rubbing the sides of her breasts, making sure to take good care of her nice round bubble butt, and doing a thorough job on her legs. I did take a few liberties between her legs as well, but she was much better at hiding it.\n\nI leaned over and whispered in her ear, \"God, I want you right now.\"\n\nShe whimpered slightly, while I pushed my fingers deep inside of her. \"Later, I promise,\" she breathed into my ear.\n\nI only wanted to get her worked up, not give her any release. When I had her squirming, I pulled out of her, and adjusted her suit as well.\n\n\"Better get back to work,\" I finally explained, wiping my hands clean. \"The boss here is a real hard-ass.\"\n\nThat got a giggle out of both of them. \n\nI had barely started in taking the automatic cleaner apart when I heard the car pull into the driveway. \"Asshole's home,\" Jenna griped.\n\n\"Jenna, don't.\"\n\n\"Whatever.\" She stood up and put on her top, watching me watch her. Afterward she pulled on her shorts and shirt, then stopped by the table I was working at. \"Don't forget me, sugar. Stop by Monday, there's so much I've got for you to do.\" She leaned over and gave me a kiss on the cheek. \"Thanks for the O,\" she whispered.\n\nAmy was back in her cover-up, and came over to get her friend. \"Let's go, trouble.\"\n\n\"Who, moi?\"\n\n\"Yes, you.\" \n\nThey disappeared into the house, leaving me alone to work on the cleaner, and trying to ignore the painful hardon in my shorts.\n\nI was left by myself for a good while. I disassembled the cleaner and hit the store for $60 in replacement parts. I finished cleaning the parts, lubed and reassembled the bottom vacuum. I wouldn't know if it worked until tomorrow, but had a pretty good feeling about it. It had been gummed up pretty bad on the inside, but everything seemed in good shape.\n\nDale showed up as I was just putting in the last screws. He walked over to the pool and looked in. \"I wouldn't believe it if I didn't see it for myself. It looks practically new.\"\n\n\"It's coming along. Tomorrow we'll add the chemicals, adjust the skimmers and cleaner, and finish labeling all the filter lines. I think it'll be fine for you party.\"\n\n\"Damn, you're a hard worker, Alex. Amy didn't get in your way much, did she?\"\n\n\"Not at all. She even helped with the acid wash, spraying down the sides for me.\"\n\n\"Good for you, putting her to work. I should have had you take pictures. Nice to see her doing something other than shopping and laying about. I saw that Jenna was over. Not too much trouble from her?\"\n\n\"No sir. She wasn't here that long, and I was out getting supplies when she came over.\"\n\n\"Watch out for her. She'll eat you alive. But not a bad way to go, especially if you can reign her in. Stay away if she's drinking, or you'll end up with a lot of explaining to do, trust me on that one.\"\n\n\"Thanks for the warning. I'm going to be working on her hot-tub next week.\"\n\n\"Good for you. Just remember, she's lousy at keeping secrets.\" He put his hand on my shoulder again, giving it a squeeze. \"She might be tempting, but you're a whole lot better off sticking with the freshmen.\" He laughed at his own joke, before disappearing back indoors.\n\nI think Jenna had it right. Asshole.\n\nMy work done for the day, I was putting away the tools, when Amy came out. \"How's it going?\" she asked.\n\n\"Done for the day. You'll need to let the pool fill all night. You might want to turn off one of the hoses before you go to bed, and check the level first thing in the morning.\"\n\n\"Got it. Before you go, can you show me how to turn the lights on in the pool?\"\n\nI figured she knew, but she probably wanted to get away from the house and any prying ears. \"Sure, it's at the pool panel.\"\n\nThe pool equipment was behind a privacy wall at the end of the yard. As soon as we were around the corner, she was dropping to her knees, tugging at my shorts. \"I'm so sorry, Alex. I had no idea she was going to drop in.\" Her hand was already around my cock, stroking me to hardness.\n\n\"She's a bit wild, isn't she?\" I asked.\n\nAmy gave my cock a long lick. \"A little out of control. Careful with her. And if you fuck her, use protection. No telling where she's been. You should know that anything you do with her will probably be known to half the neighborhood before the week is out.\"\n\n\"So your husband told me.\"\n\n\"Don't remind me. I can't believe I'm still friends with her; she's screwed him at least twice that I know of.\" \n\n\"I'm sorry.\" I didn't know what else to say.\n\n\"Don't be. Jenna's right, he is an asshole. Even she wouldn't fuck him unless she was three sheets to the wind.\"\n\nShe had me hard, and was pumping me like there was no tomorrow. \"Can you come for me, Alex? I don't have much time.\"\n\n\"Lick me again?\"\n\n\"I think I can do better than that.\" She moved her mouth over my cock and slid the head between her lips.\n\nI hated the fact that it was almost pitch black where we were. I wanted to see that beautiful face full of my cock. I held her head and eased my cock in and out of her mouth, while her tongue did wonders inside that sexy mouth.\n\nShe held me in her hand, stroking me while she bobbed her head up and down on my cock, taking most of my length, bouncing me off the back of her throat. I groaned my enjoyment. \n\nShe pulled back for a moment. \"Jesus, you got hard fast, Alex. You like my mouth, I take it.\"\n\n\"Don't stop,\" I groaned, pulling her face back to my aching cock.\n\nShe sucked me with abandon, her hand stroking me, her mouth driving me crazy. I thought I'd shoot immediately after she first took me in, but the first urge had subsided, and I was enjoying this unimaginable first blow job. I leaned back against the privacy wall thrusting my hips out so she could continue her brazen act.\n\nShe found a rhythm I responded too, and worked me steadily. I felt like one of those carnival games, where you squirted water into the clowns face, making a bar raise until you popped a balloon. She had found the target and the bar was rising quickly. I was going to pop any minute. \n\n\"I'm almost there,\" I warned her.\n\nShe stroked me faster, holding the head in her mouth, her tongue working my sensitive crown over. I couldn't hold back even if I'd wanted to. I stifled a groan and let loose, filling her devilish mouth. She continued sucking on me, swallowing my seed, and keeping at it until I softened in her mouth.\n\n\"I'm sorry,\" she said, standing up and brushing off her knees. \"I was going to save that for the end, but I couldn't stand the idea of you leaving here tonight like that.\"",
        "I lifted her chin and kissed her. \"Best day of my life, Amy. Without compare.\"\n\n\"Good. Let's see if we can't make tomorrow even better.\"\n\nI turned to walk away, but she pulled me back. \"Touch me? Just a little.\"\n\nShe was wearing shorts, but they had big open legs. I reached up inside of them and found out she wasn't wearing panties. I held her in my arm, while I slid two fingers inside of her. \"God, I love your tight little pussy.\"\n\n\"If I let you have your way, I don't imagine I'd be tight for long.\"\n\n\"I guess we'll have to see about that,\" I told her, thrusting deep inside.\n\n\"I guess we will,\" she said softly, pulling my head down for a long hard kiss.\n\n* * *\n\nDad and Mom were in the kitchen cleaning up after dinner. \"How's the project going?\" Mom asked.\n\n\"Like a charm. The pool looks almost brand new, and we're refilling it as we speak.\"\n\n\"Did you get a chance to eat?\"\n\nOnly one of your best friends. \"I had a sandwich at lunch, but I'm starving.\"\n\n\"You'd figure she'd at least feed you, with all you're doing for her. Oh well. There's plenty of spaghetti in the fridge. There's meat sauce and meatballs. Leave some of the meatballs for Dad's lunch.\"\n\nLooked like Dad was in a talkative mood. \"Make sure you do a good job. Even if the pay isn't the greatest, you still give it your best. You never know where your next referral will come from.\"\n\n\"I don't think we'll hear any complaints from them. They seem ecstatic so far.\"\n\n\"That's good. Finish strong though. Anybody can start strong. Finishing strong makes winners.\"\n\nThat's my Dad for you. A never ending source of inspiration work ethic mumbo-jumbo.\n\nHe'd shot his wad with that last one, and parked his butt in front of the TV. Baseball time.\n\nMom hovered over me while I ate. \"You're sure everything's going well? I haven't heard from Amy since she called. I thought I would have heard something by now.\"\n\n\"I guess she's been busy with the party. She's been in and out running errands. And Mrs. Thomas was over this afternoon.\"\n\n\"Still, it's surprising. We talk almost every day.\"\n\nI shrugged. \"What do I know? I'm just the underpaid hired help.\"\n\nMom sighed. \"Don't get an attitude. We need to get you a cell-phone. We had a couple of calls about work, but I didn't want to call you on their phone. The Beales over on Hickory want to replace their fence. They want an estimate.\"\n\nI sighed, pushing away the empty plate which Mom rushed over to the sink for a quick rinse before putting it in the dishwasher. Heaven forbid we have a dirty dish in her kitchen for more than 30 seconds.\n\n\"Tell them I can stop by Sunday and take measurements. I'm going upstairs and take a shower. I feel grubby.\"\n\n\"Alright. And thanks for doing this one for me. I appreciate it, and I'm sure Amy does.\"\n\n\"No problem, Mom. I'm glad I could help.\"\n\nI was exhausted. Physically, mentally and sexually. After my shower I hit the bed. I thought about what tomorrow might bring, but when I started to get hard, I pushed the thoughts aside. Not tonight. I was saving up for the real thing. I had high hopes for Friday.\n\n* * *\n\nI was standing over the pool at 9:00 am on the dot. I'd gone to bed so early, I'd woken up at 7:00 and couldn't get back to sleep. A McDonald's Egg McMuffin was percolating in my belly, and I felt refreshed and renewed.\n\nThe pool was full, and the hoses were still going. I quickly turned them off, and rolled the hoses back up. Then I started the filter running. The sun was warm already. It was going to be a hot one. I peeled my shirt off and tossed it to the side, helping myself to some of Amy's sun-tan lotion, covering my shoulders and face.\n\nI went out to my car and got the chemicals out. Time for the magic. I walked the perimeter of the pool, adding stabilizer, algaecide, clarifier, and finally shock. I hauled out four 50 pound bags of salt, and started pouring the fine salt into the water, one bag at a time. I was working on the last bag when I happened to glance over at the porch and saw Amy there, leaning against the door watching me. She had on a robe, and an odd little smile.\n\nI finished emptying the bag, and headed her way. \"Good morning, beautiful.\"\n\nHer smile looked forced. \"Morning poolboy.\"\n\n\"What's wrong?\" I asked, moving closer to her. \n\n\"Nothing. Everything. I don't know.\"\n\n\"You're breaking my heart, morning Goddess,\" I teased.\n\n\"Please. Enough of the Goddess. I'm nobody's Goddess. Slut is more like it.\"\n\n\"Don't,\" I said firmly. \n\n\"It's true!\"\n\n\"Don't.\"\n\nShe covered her face with her hands. \"How can you even look at me after the way I behaved yesterday?\"\n\nI pulled her close and held her. She was stiff at first, then slowly melted into my arms, crying, tears running down my bare chest.\n\n\"Have you seen your pool yet?\" I asked when the sobs had almost disappeared.\n\nShe shook her head.\n\n\"C'mon then. It's time to see the fruits of your labor.\" I took her hand in mine and walked over to the pool. \"What do you think?\"\n\nShe smiled. \"A miracle. You saved my ass, Alex.\"\n\n\"Quite a nice ass to save, if you don't mind my saying.\"\n\nShe snorted, quite unladylike. \"You should know. You've seen more of it than anybody else has outside of my doctor.\"\n\n\"Are you mad at me, Amy?\" I asked.\n\n\"Mad at you? Hardly.\"\n\n\"Then what is it?\"\n\nShe leaned her head back with a sigh. \"I...I'm not who I thought I was. Amy Dixon would never have behaved like she did yesterday. I never thought I could be such a tramp.\" She crossed her arms over her chest, turning to face the pool. \"How desperate am I, that I would drag you into my backyard and blow you, with my husband sitting watching TV fifty feet away? That I'd let you finger me while laying out next to my friend, and almost beg for more when you left me hanging.\"\n\nShe turned to face me. \"I'm such a whore. I'm letting you do whatever you want to me, just so I can get my pool cleaned on the cheap. Hell, I practically begged you to spank me and came as hard as I'd ever come in my life, with your finger buried in my ass, God help me. Is this anyway for a married woman to behave? My mother would be so proud.\"\n\nI was lost for words. What could I say to her? \n\nI took her hand in mine, and walked her over to the covered porch. \"Sit,\" I told her, at the end of our favorite lounge chair.\n\nShe sat down stiffly, and I moved behind her, sitting with her between my legs. I wrapped my arms around her and held her. \"I don't have any answers Amy. I don't know your situation. I barely know you. You've been a mysterious fantasy for me ever since I was old enough to appreciate a woman. And in the last few days, you seemed like a happy girl, looking for a little excitement in her life, and willing to work for it. There's a wild, playful and extremely sexy woman inside you, looking to get out. I saw her. And I adore her.\"\n\nAmy sniffed loudly. \"She's a filthy little slut.\"\n\nI eased my hand inside of her robe, and found nothing but soft flesh. I cupped her bare breast in my hand. \"She's my naughty little slut, and she's amazing.\"\n\n\"How can you say that? I should disgust you.\"\n\nI squeezed her tightly. \"You are every man's dream come true. An Angel in public and a Devil in the bedroom.\"\n\n\"Right. I'm no Devil in the bedroom. I'm a boring lay, who can't even keep her man.\"\n\n\"That's crazy talk, woman.\"\n\n\"It's true. My sex life is miserable. I mean, we do it, more than most, from what I hear. But it's a couple of minutes of sweaty thrusting a few times a week, and that's it. If it wasn't for my shower massage, I wouldn't come more than once a year.\"\n\n\"That may be the saddest thing I ever heard. Keep it up, and you're going to see a grown man cry.\"\n\n\"It's true!\" she snapped.\n\nI held her, rocking her back and forth just a little. \"What do you want out of life, Amy? You're young, you're beautiful, and your whole life is ahead of you. What do you want?\"\n\n\"I wish you'd quit saying I'm beautiful.\"\n\n\"Not going to happen. You are, without a doubt, the most beautiful woman I've ever seen in person. Let's face it. Teens fantasize about movie stars and TV icons. I've fantasized about you forever. So much better than any celebrity, prettier and real. I've probably come into a dirty sock mumbling your name at least a thousand times over the years. God strike me dead, if I'm lying.\"\n\n\"And I'm not young. I'm 26 years old.\"\n\nMy hand was caressing her soft breast, toying with her hardening nipple. \"Oh my God, 26! I thought you were 25. You ARE old! Hell you probably only have 70 or 80 years ahead of you. When I'm 91 years old, you'll be 98! What was I thinking?\"\n\nShe poked my leg. \"Don't make fun of me, Alex.\" She twisted around and glared at me.\n\nI laid back on the lounger, and opened my arms for her. \"Come here, and let's talk. Let's really talk.\"\n\n\"No way. I lay down with you, the slut takes over, and I walk away bowlegged.\"\n\n\"Not this time. Come here.\"\n\nShe sighed dramatically before turning and crawling over me. I reached up. opening her robe, and saw she wasn't quite naked. She was wearing plain white panties.\n\nShe caught me looking. \"One word about the panties, and you'll walk away a eunuch.\"\n\n\"Let me hold you,\" I urged her, my hands inside her robe, pulling her down.\n\nShe stretched out against me, resting her head on my shoulder. I felt her legs shift, and her hips pressed against me. \"What? No hardon? Tired of me already?\"\n\n\"Silly. One look from you, one touch, and I'd be busting my shorts and you damn well know it.\"\n\n\"Really?\" She nibbled on my shoulder, grinding her hips against me. I reached down for her ass, and pushed up against her, squeezing her soft butt cheeks. It was only a few seconds before she felt my hardness pressing against her belly.\n\nShe giggled. \"That's oddly comforting.\"\n\n\"Think I'm tired of you?\"\n\nShe squeezed me in her arms. \"No.\"\n\n\"We're going to play a game, you and I. A variation on Truth or Dare. I ask a question, and you tell me the absolute truth.\"\n\n\"And?\"\n\n\"And nothing. That's it. Ready?\"\n\n\"That's not a game!\" she argued.\n\nMy hand was stroking the soft skin of her back. \"Ok, how do you want to play it?\"\n\n\"Regular Truth or Dare, except the first three rounds can only be Truth.\"\n\n\"Alright. Now are you ready?\"\n\n\"Who says you get to go first?\"\n\n\"Do you want to go first?\" \n\nShe gave me a poke. \"Damned straight. Truth or truth?\"\n\n\"Truth.\"\n\n\"When you came over the second day, and agreed to do the work, what was the absolute minimum I could have gotten away with offering?\"\n\n\"Expenses. When you agreed to cover the material cost, it was a go. When you asked for it as a personal favor I couldn't say no. The only real problem was I didn't have the money to cover the parts. Once Mom said I could use her credit card, and pay it off in 30 days, it was a done deal.\"\n\nShe leaned in and bit me on the shoulder. \"Ow!\"\n\n\"You little bastard! You left me out there worried you were going to turn me down, and I'd have to go crawling to Dale to get some contractors in here. That was mean.\"\n\n\"Sorry. I didn't think of it that way. You were the one who sent me away the first day. Any counter-offer that covered the costs would have closed the deal.\"\n\n\"Fine. But someday, you're going to pay for that one.\"\n\n\"Ok, Truth or Truth?\"\n\nShe giggled. \"Just ask the question already.\"\n\n\"What is the absolute most I could have gotten away with asking for.\"\n\n\"Everything.\"\n\n\"Everything? Everything what?\"\n\nShe sighed. \"Everything you asked for on the first day, and more. All that night I couldn't sleep, thinking of doing those things to you. Meeting you at the door on my knees each morning. Having you bend me over a table and using me for your pleasure whenever you needed a break. Being your play thing.\" She giggled. \"I mean, it takes a lot of nerve to tell a woman you want a BJ from her every morning. I soaked my panties the moment those words left your lips.\"\n\n\"Now who's the mean one?\" I teased.\n\n\"You. You could have pressed the issue, and had me totally at your mercy, but no. Meanie.\"\n\nShe raised her head, and gave me a sweet little kiss. \"Thanks for getting hard for me.\" She ground her hips against me for emphasis.\n\nI smiled. \"Anytime.\" \n\n\"Truth or truth.\"\n\n\"Truth.\" Like I had any option.\n\n\"Why? Why do you care? Why do you care about anything other than me willingly servicing you?\"\n\nI took a moment to phrase my answer. It was a tough question. \"I'm not sure I know. I want you to be happy. I don't know why, but it's as true as anything in my life. It must be the Neanderthal in me, or maybe Grandpa's Southern Gentleman upbringing. I want to protect you, defend you, and make sure you are as happy as you can possibly be. Anything I can possibly do to make that true is a small enough price to pay for one of your smiles. I want your heart to practically burst with joy.\"\n\n\"Funny. Beating my ass until it's red doesn't seem to jive with that,\" she teased.\n\n\"Really? Remind me, how hard did you come for me?\"\n\n\"You are a beast sir, and hardly a gentleman at all, to ask me such a personal question.\"\n\n\"Beast or gentleman, whatever it takes to make you happy, I'll gladly fill the role.\"\n\nShe was quiet after that, holding me tight, while my hands caressed her sweet ass cheeks. \"It's too much, Alex. You can't make yourself responsible for my happiness. It doesn't work that way.\"\n\n\"Too late, beautiful. I'm a slave to your joy. Accept it.\"\n\nWhen she didn't answer, I continued our game. \"Truth or truth, my morning Goddess.\"\n\n\"Truth, Beast.\"\n\n\"What do you want out of life, sweetness? What will it take to make you happy?\"\n\nI could feel her body shaking, and realized she was laughing.\n\n\"Was it that silly a question?\" I asked, smacking her butt.\n\n\"Spank me again, Beast,\" she giggled.\n\n\"Answer the question, Beauty,\" I growled, alternating smacks against her ass.\n\nShe giggled some more, then turned and pushed her panties down her legs, kicking them off. \"Again, with feeling. Beast.\"\n\nI gave her a nice firm wallop, the sound of my hand on her bare ass cracking loudly. \"Ow!\" she whined.\n\n\"Answer me,\" I demanded sternly, raining a stream of smacks on her tender skin. Her robe, still in place, prevented much of a 'wind-up' limiting the impact.\n\n\"Ok, enough, I'll answer,\" she whined. \n\nI rested my hands on her ass, rubbing her cheeks gently.\n\n\"What do I want? Damn, that's the $64,000 question isn't it.\" She wiggled into a more comfortable position, resting on me. \"Purpose. I need some purpose in my life.\"\n\n\"What kind?\" I asked\n\n\"I don't know. I'm a kept woman, Alex. I'm a college dropout, who's never worked an honest day in her life. My parents spoiled me, and my husband takes care of me. I don't do anything. Nothing that matters. If I were to die tomorrow, what would they say about me? 'She had a nice tan.' My only purpose in life is to act polite in public, look good at parties, spread my legs for my husband, and keep a clean house. Hell, I don't even keep house, Maria does. I couldn't even keep the pool clean. I need more. I need meaning.\"\n\n\"What do you want 'them' to say about you?\" I asked, all kidding aside.\n\n\"I don't know. That I made a difference? That I saved lives? A kid didn't go to bed hungry, a genius wasn't wasted, a girl didn't throw her life away. Something other than 'nice tan'.\"\n\n\"To live is the rarest thing in the world, most people only exist,\" I quoted Oscar Wilde. \"What do you say we get you living, not existing.\"\n\nShe snorted. \"Easier said than done.\"\n\nI lifted her up off of me, and sat her in my lap. \"Amy, today, as Clich\u00e9 as this may sound, is the first day of the rest of your life.\"\n\n\"Why, because you're about to screw my brains out?\" she asked snidely.\n\n\"No. Today we start on the path to finding your purpose, and fulfilling it.\"\n\n\"Sure. Why not. Might as well declare world peace while we're at it.\"\n\nI gave her a little shake. \"I'm serious. You'll see. It's not at hard as you want to believe it is.\" I stood up and wrapped her robe around her, even tying the belt in a nice little bow. \"I'd love to spend the day taking advantage of you, as wonderful as it would be, but it's time to start the change.\"\n\n\"You are weird, you know that?\" \n\n\"I am. Somewhat obsessive, and stupidly goal oriented. And absolutely crazy about a woman I'm only now getting to know as something other than a teenage fantasy.\" I gave her a brief kiss on the lips. \"I'm going to go get some things, and I'll be back in a bit. Why don't you put on a nice bathing suit for me, and make us some brunch.\"\n\nI left her, surprised that I could walk away from sex with my fantasy woman, in favor of helping her find meaning in her life. \n\nI think a lot of people would think I'm an idiot. Part of me agreed.\n\n* * *\n\nShe had cleaned up, no evidence of crying, sliced fruit and cold-cuts on the table, a sexy little gold bikini with black edging adorning her amazing body, a sheer black wrap finishing her ensemble.\n\nIt had taken me almost thirty minutes to pull together what I needed.\n\nI walked over and gave her the briefest of kisses. \"You look incredible.\"\n\nShe smiled. \"Thanks. Hope you're hungry.\"\n\n\"I can snack while we work.\" I opened up my backpack, and pulled out a notebook. \"20 pages of quotes about life here. Beautiful words from brilliant minds. Read them all through once, then go back and mark a few of the ones that really resonate with you. No more than half-a-dozen.\"\n\nShe looked shocked. \"Homework? At this hour? Isn't there something you'd rather be doing our last full day together?\"\n\nI shook my head. \"Nothing that would give me near as much happiness and satisfaction as helping you find your mission in life. Indulge me, while I do some more work on the pool. Let me know when you're done.\"\n\nThe salt in the pool had been mostly absorbed, allowing me to work on the bottom pool cleaner, finding the right suction settings, adjusting the movement screws, and getting the vacuum hose the right length. It was harder adjusting all the inputs, the skimmers, the cleaner, the bottom drains, but once it was balanced, the pump cavitation stopped, the vacuum pressure peaked, and the cleaner started on its merry way, mapping the pool bottom. I had a Sharpie in hand, labeling the maze of PVC lines, when Amy showed up.\n\n\"I'm done. That was actually pretty interesting.\"\n\nI put away the marker. \"Great, let me get a drink, and I'll lotion you up, while you tell me what you found.\"\n\nShe looked doubtful. \"Not sure how well I'll be able to talk about it, once you start with the lotion.\"\n\n\"Trust me, Sun Goddess. This will be tame, I promise. I want to hear what you have to say. As beautiful as the package is, for the moment, I'm a lot more interested in the contents.\"\n\nAmy still appeared unsure, but she took off her wrap and laid on her belly, the notebook in front of her. I pulled the string on her bikini top, getting a quick accusatory glare. A couple of ounces of suntan lotion in my hand, and I was rubbing her back while she read through the list.\n\n\"No particular order,\" she said, while my hands covered her back and arms.\n\n\"We have to dare to be ourselves, however frightening or strange that self may be. May Sarton.\"\n\nI rubbed her sides and the middle of her back, combining coverage with a gentle massage. \"What does that mean to you?\"\n\n\"No more easy road. Take some chances, live life the way you want to, even if it bothers your family and friends. Even if it scares me.\"\n\n\"Next?\" I asked, moving lower on her back.\n\n\"Sometimes I can hear my bones straining under the weight of all the lives I'm not living. Jonathan Safran Foer.\"\n\n\"And?\" My hands were easing her bikini bottoms down so I could rub her impeccable butt.\n\n\"I know this isn't right for me, there are so many possible paths, but my current life isn't one of them. And the knowledge that my life is wasting away, while all those other opportunities are out there, it's crushing me.\"",
        "I was concentrating on that sweet ass of hers, but didn't want to overdo it. I slid the bottoms back up and went to work on her legs. \"I like that one. Another?\"\n\n\"I'm selfish, impatient and a little insecure. I make mistakes, I am out of control, and at times hard to handle. But if you can't handle me at my worst, then you sure as hell don't deserve me at my best. Marilyn Monroe.\"\n\nI laughed, \"Who knew? And yes, I already know I don't deserve you at your best. What do you get out of that one?\"\n\n\"It's not about what I am now, it's who I should be. I don't take chances, and I stay in control, but it's grating on me. I struggle to be a good and decent trophy wife, but I hate it. I want to let loose. Take those chances, be more impatient, make mistakes, lose control. And I need a person that understands that, and loves me anyway.\"\n\nI completed her legs, and urged her to turnover, sparing a moment to take in her mesmerizing tits. \"Every time I see you, I have to pinch myself. You're beauty is breathtaking.\"\n\nShe smiled. \"I'm glad you think so.\" She waved the notebook. \"I have two more.\"\n\n\"Shoot.\" I sat beside her, applying the lotion from her shoulders out and then down across the tits of my dreams.\n\n\"Do not let your fire go out, spark by irreplaceable spark in the hopeless swaps of the not-quite, the not-yet, and the not-at-all. Do not let the hero in your soul perish in lonely frustration for the life you deserved and have never been able to reach. The world you desire can be won. It exists.. it is real.. it is possible.. it's yours. Ayn Rand.\"\n\nI had her breasts in my hands, massaging them to my heart's content. \"Atlas Shrugged.\"\n\nShe nodded, squirming a little under my touch. I didn't want to be that much of a distraction, and after one last tug on her hard little nipples, I moved down to her belly. \"Why that one?\" I asked.\n\n\"That phrase, 'hopeless swaps of the not-quite, the not-yet, and the not-at-all', it's like she's talking right to me about chances not taken, opportunities unfulfilled. The life I deserve. It exists and is possible, and mine if I'll just go out and take it.\"\n\nHer legs were a glorious thing to touch. I was almost sad she was running out of quotes. \"The last one?\"\n\n\"We are taught you must blame your father, your sisters, your brothers, the school, the teachers - but never blame yourself. It's never your fault. But it's always your fault, because if you wanted to change you're the one who has got to change. Katharine Hepburn.\"\n\n\"Wow,\" I said softly. \"What is it about her quote?\"\n\n\"I have a lot of anger toward my family, and toward Dale, and some of my old friends, College professors, others. I keep it clamped down inside of me. I hardly ever talk to my parents anymore except to exchange holiday greetings. But it's not their fault. Not really. My life is my own, not theirs to mold and shape. I have to stand up for what I want and start living a life I can be proud of.\"\n\nI pulled her up in a seated position, and applied the suntan lotion carefully to her face. \"Interesting selection. Not what I would have chose for the most part. But that's good. It's intensely personal. As a whole, what does it say to you?\"\n\nShe looked gorgeous concentrating on her answer. \"Mostly that there's a life that I should be living. A live out loud, boisterous, no-holds-barred, fight-to-the-end life that can make the world a better place. And if I'm ever going to know real happiness, I need to,\" she grabbed the notebook and flipped back a few pages, \"grab the world by the lapels. Life's a bitch. You've got to go out and kick ass.\"\n\n\"Maya Angelou,\" I said with a grin.\n\n\"She's right. Grab life by the balls.\"\n\nI laughed. \"OK. Imagine I'm life. What are you going to do?\"\n\nShe got a wicked teasing little smile on her face. \"Simple enough. First of all, I face it head on, no blinders, nothing between me and life and the things I want to achieve.\" She reached up and pulled my shorts down. \"Strip away the extraneous, until it's just me and life, mano-e-mano.\" She pulled off her bikini bottoms, leaving us both deliciously naked. \n\n\"I decide what I want, and the best way to get it. Like, what if I wanted to sip the sweet nectar of life?\" She reached out and took my semi-soft cock in her hands. \"I know what I want. I know where it is. I know how to get it. Now it just takes the will and determination to go after it.\" She brought her mouth to my shaft, licking me. \"I'm not going to wait for good things to come to me, I'm going to go after them.\" She took my cock in her mouth, sucking me, getting me hard in only a few moments. \"There, the preparation's done, all that remains is the effort to make it come true.\"\n\nShe pushed me back on the lounger, and started sucking me with complete abandon, stroking my hardness, taking me deep, pulling out and licking me all over. \"It might not happen instantly. Nothing worth having is easy, they say. But I won't give up.\"\n\nShe climbed on top of me, straddling me. \"I'll be tempted to take shortcuts, do things that challenge my morals and values.\" She leaned down and took my shaft in her hand, rubbing it against her moist opening. \"Take the easy route, where the ends justify the means.\" She lowered herself almost imperceptibly, my cockhead pushing its way into her. \"One little compromise, and I know my goal will be easily achieved.\" \n\nI looked at her. \"Don't. Don't compromise. No shortcuts.\"\n\nShe nodded. \"You're right. If it's worth doing, it's worth doing well. I know if I follow my original plan, I'll get there, it just might take a little longer.\" She lifted up, turned around and lowered her beautiful pussy down over my face. I felt her lips take me in once more, forcing a groan out of me.\n\nI licked her, sucking on her puffy lips, my tongue gently teasing her clit. It was hard to concentrate, she was doing a great job down below, bringing me closer and closer to my own finish.\n\n\"Don't hold back,\" she said, stroking me rapidly with her hand. \"Give it to me. You know what I need. Gimme.\"\n\nShe was right. I wanted her to get it. I concentrated on what she was doing, my efforts at pleasing her far less than they should have been. But I understood. For the moment getting her off wasn't the goal. She was unstoppable, her hand and mouth working in tandem, steady, repeatedly stroking me, bringing me closer and closer with no respite. \"Gimme,\" she gasped, before taking me in her mouth and going at it again.\n\nI was there, right on the cusp. She'd done it to me. \"You're about to get it.\" I groaned. \n\nI came for her. Hard. She moaned as she took my juices, swallowing, and sucking me dry. I could feel her responding, her pink lips quivering across my tongue, her legs tensing around my head. She continued sucking on me until the sensitivity had me involuntarily squirming against her touch. She finally pulled away, turning around and facing me. \"I'm going to get what I want, and I'm going to do it on my terms. I'm going to take life by the balls, and suck the sweet juicy goodness out of it.\"\n\nI chuckled. \"Life is in for a hell of a surprise. There's a new player in the game.\"\n\nShe grinned. \"God, that was so intense. I can't believe I came when I got you off!\"\n\n\"It's a head trip. So much of everything we do is mental. Like life I guess. You knew what you wanted, and you took it. You got off getting what you wanted, how you wanted.\"\n\n\"Not too weird for you? The teasing wasn't too much?\"\n\n\"Are you crazy? You are perfect. Absolutely perfect.\"\n\n\"I'm not.\"\n\n\"You are. At least for me.\"\n\n\"Was that our lesson for the day? Love life, and go out and take what you want from it?\"\n\n\"Lesson One. You're not done yet.\"\n\n\"Good. I liked that lesson. Can I have a refresher?\"\n\n\"Later. Next, you need to write down 100 things you want out of life. It could be things, places to go, things to learn, experiences, financial, spiritual, career, mental, educational. Whatever. Write down at least 100 things.\" I got up and kissed her heavenly lips. \"I've still got my work to do. Let me know when you're done.\"\n\n\"100? Isn't that a lot?\"\n\n\"I think you'll find that's not difficult. You may get rolling and write down as many as 200. I don't know. Don't over-think it. Just write.\"\n\nI went back to my pool tasks, sated for the moment. I finished labeling the pipes, then backwashed the filter, and added new DE to the skimmers. I added markings to the valves, showing their settings for a balanced cleaning environment. It would require some tweaking over time, but the baseline settings would be helpful.\n\nI cleaned the skimmers out and acid washed them when I noticed they were still green, skimmed the surface, and stood back looking at the immaculate pool, such a difference from a few days earlier. Amy was still working on her list, so I put away all my materials, and checked the water chemistry. Everything looked pretty good. The chlorine was a little low, but I knew that would change with the filter running overnight, as the chlorinator did it's job.\n\nI was setting all the pool panel settings, morning and night cleaning periods, level of chlorinator action, etc., when Amy showed up. \"I'm done. I went a little overboard.\" She was still going topless, but had slipped her bikini bottoms back on. \n\n\"Perfect timing. I'm done as well. What do you think?\" I walked with her over to the pool. \n\n\"It looks great! Almost brand new. I still can't believe you got it done in time. And for so cheap.\" \n\n\"Incentive is everything.\" I told her, reaching out and putting my arm around her. \"The water's still a little cloudy, but that will clear up overnight. What time is your party tomorrow?\"\n\n\"It doesn't start until 3:00.\"\n\n\"Sometime before noon, you should disconnect the hose at the side of the pool and take the cleaner out. You should also put three packets of shock in the pool. I'll leave those out. Sound like something you can manage?\"\n\nShe pouted prettily. \"I thought you were coming over tomorrow to finish?\"\n\n\"Not much left for me to do,\" I confessed.\n\n\"Dale goes golfing at 8:00. I thought I could give you your final payment then. He won't be home until after noon.\"\n\nI checked my watch. \"It's only a little after four now. Once we finish the next phase of your epiphany, I thought I could get a little reward.\"\n\nShe grinned, turning and hugging me. \"You're going to get a lot of reward. Tomorrow would just be a different one.\"\n\nI tilted her head up and kissed her softly. \"Alright. You've talked me into it. I'll be over around 8:30 tomorrow morning.\" I was melting out in the hot sun. \"I could really go for a dip in the pool. Sort of break it in. Care to join me?\"\n\nShe smiled. \"I'd love to. I think we've earned that much at least, don't you?\"\n\nI took her hand in mine and walked over to the beach entry, where we could slowly enter the pool. The water was still pretty cool, not having had much time to heat up in the last day. I dove under the water, preferring the all-at-once method of getting used to the water, while Amy slowly walked deeper, standing on tip-toes, squealing when the cold water reached her breasts. \"It's going to warm up, right?\" \n\n\"By tomorrow afternoon, it'll be 10 degrees warmer. Another reason to finish filling it as early as possible.\" I walked to her, and she wrapped her legs around me, her arms encircling my neck. I held her, moving slowly deeper, until the water was up to her neck. I stepped back toward the shallower water a few steps, until the water as armpit deep. \n\n\"It's not so bad now,\" she admitted.\n\n\"I wish this didn't have to end,\" I told her. \"I can't imagine not being around you every day.\"\n\nShe nodded, pulling me in close. \"I know. Back to the boring, hum-drum, everyday life.\"\n\n\"No. Not that. A new life, pursuing your dreams, right?\"\n\nShe nodded. \"I hope so.\"\n\nI pressed my lips against hers, and we kissed each other thoroughly, lovingly, deeply. I had my hands on her ass, fondling them, reaching inside her bottoms to feel her flesh.\n\nI walked her to the shallow end, and put her down. \"Wait here. I'll be right back.\"\n\nI went to the porch and retrieved the work she'd done, after drying my hands thoroughly. I grabbed the towels and set the towels and her writing down on the towels, along with a pen and the goals notebook to lean on. Then I got back in the pool and joined her at the side by her work.\n\n\"Find anything out, while you made your dream list?\"\n\n\"Did I ever. There's so many things I want to do. I probably could have added another 100 to the list.\"\n\n\"Like what? What really sticks in your head?\"\n\n\"I like doing new and unusual things, but I don't. Not anymore. Not since I was in high-school. I want to scuba dive on a sunken boat, I want to go hang-gliding. I want to parachute out of a plane. I want to spend an afternoon on jet-skis. I want to ride across country using the back-roads on the back of a motorcycle. I want to go on a safari. I want to climb Kilimanjaro. I want to hike the Great Wall. I...\"\n\nI laughed. \"I get it. Lots of things you want to do. How about education, career, financial. Any ideas there?\"\n\nShe nodded eagerly. \"I want to get a degree in marketing, and an MBA. I want to learn all about running and operating a non-profit organization. I'm going to work for one of the medium sized non-profits and see how things are really done, versus what they teach you in school. And then I'm going to figure out who I most want to help in the world, and dedicate my life to that. I'm not sure what that will be yet, but I know I want to help people, not endangered animals, not the environment, not politics. People who need my help, and whose lives can change dramatically for the better.\"\n\nShe was leaning over the side of the pool, flipping through her pages of writing, so animated it had me choking up. Such a difference.\n\nI was leaning against her body, looking over her shoulder. \"You know what I love about what you just told me?\"\n\n\"No. What?\"\n\n\"How you went from all the things you said you wanted to do, to telling me what you were going to do. You are going to work for a non-profit. You are going to figure out who you're going to help, and how you are going to dedicate your life to that. That's wonderful. You know. You have a purpose.\"\n\nMy hands seemed to have a mind of their own, and were busy wandering over her body. \n\n\"Did I say that? I didn't even notice.\"\n\n\"Yes, you went from a list of things you wanted to do, things that interested you but were not absolutes, to the core of what you wanted to do with your life.\"\n\nI turned her around so she was facing me. \"Tonight, you'll take that list, and using it you'll make a new one. You'll list five things you want to do, you want to have, you want to learn, and you want to be. Then you'll make a plan for achieving each one, with small goals that will get you to your final goal. For example, if you chose climb Kilimanjaro, you'd figure you what you need to know to do it, how you'll need to prepare, when you want to go, how much money you'll need to do it, etc.\"\n\n\"You're a slave driver, you know?\" she said with a grin.\n\n\"Yes. You'll thank me some day. But I'm not done yet. By Monday, I want you to make one initial step toward each of your goals. You're going to write down these goals, and you're going to read them every morning, the first thing you do when you get up.\"\n\n\"How do you know all this stuff, Alex?\"\n\n\"My father made me do the same thing when I turned 16. So that my final years of high-school would prepare me for what I wanted out of life. Make sure I go to the right college. Pursue the right degree. Things like that.\"\n\n\"You have a list then?\"\n\n\"I do. Let's get out of the pool and I'll show you.\"\n\nWe went to the porch, and dried off. \"Lay down. Time for me to lotion you up one last time,\" I told her. I went to my wallet and retrieved my list. It was laminated, folded in half, with writing on both sides. \"Once a month I update it. Rewriting my goals, removing things I've completed and adding new tasks is a powerful thing.\"\n\nI held it in front of her. \"It's a very private thing. I've never showed anybody this list. Some of the items are very personal.\" I put it in her hands.\n\n\"You'll let me read it?\"\n\n\"Of course. You are the only one I'd consider letting read it. You are on it.\"\n\nShe turned her head and looked at me in surprise. \"Me?\"\n\n\"Since I first saw you.\"\n\n\"You're kidding.\"\n\n\"Not in the least. At least one of my goals in every category is what I call a 'reach'. It's not likely to happen, but it's something that I can dream about. You've always been in that category.\"\n\nShe was scanning the list, and found herself. \"Make love to Amy Daniels. Written in italics.\"\n\n\"Italics are my reach goals.\"\n\n\"You've had my name on your list for how long?\"\n\nI grabbed the lotion and started on her back. \"Since I made my first list. Every month for the last 3 years I've made a new list, writing it from scratch, and you've always been part of it. I knew I didn't stand a chance, but a guy could dream right?\"\n\n\"This is pretty incredible,\" she said softly.\n\n\"I know. It's one of those goals I had no idea how to approach. A lot of people are talking about this whole idea of 'The Secret' where if you think about something enough and want it enough, and you open yourself to opportunities, the law of attraction will make it come true. I'm not much of a believer in that. I believe hard work and perseverance has a lot more to do with achieving your goals. But after this week, I'm starting to wonder.\"\n\nI reached down and eased her bikini bottoms off of her, and put the suntan lotion on her pretty pale cheeks. \n\n\"God, this is disturbing,\" she said. \"My name on your list, a goal of yours you've thought about for years. If you'd asked me a week ago if it would ever have happened, I would have laughed. And now the dream is yours, if you want.\"\n\nI was lotioning her legs. \"What do you think? Do I want it?\"\n\nShe shivered. \"I can't imagine wanting anything that much. And to think that I'm the object of that desire. Jesus, I don't know what to think.\"\n\n\"Does it make you think about the power of written goals?\"\n\n\"And then some. How many of your goals have you achieved?\"\n\n\"Hundreds. Every month I knock off more of the short ones. You would be the first top tier goal or reach goal. I think I might retire after that. No place left to go but down.\"\n\nI had her turn over, but she still had her nose buried in my list. \"2 Million dollars in 8 years?\"\n\n\"That one started out 1 million in 10 years. I now know that's two easy. Pretty soon I'll probably make it 2.5 million.\"\n\n\"Create something that makes the front page of the newspaper?\"\n\n\"Pretty cool, huh?\"\n\n\"Climb the seven summits? What's that?\"\n\n\"The highest mountain on each continent. Kilimanjaro's one of them. Looks like we have something in common.\" I was massaging her breasts. \"None of those peaks hold a candle to these. They'll be a let down after having summited yours.\" I pulled her nipples up, feeling the tips harden.\n\n\"And you look at this every day, and base your actions on these goals?\"\n\n\"That's it. Everything on that list that's not in italics, I'm going to do. No question about it.\"\n\n\"I wish I had your confidence, Alex.\"\n\n\"You will. Make your list. Read it daily. Let it guide your actions. And a year from now, when you've seen the incredible progress you've made, you'll know with complete certainty you can do it too.\"\n\nI was working on her legs. I'd skipped past her pretty little pussy, and she noticed. \"No attention for the kitty?\" she asked teasingly.\n\n\"Not yet. I don't like the taste of this suntan lotion.\" I parted her legs and moved between them, kissing the soft freshly shaven skin around her magical opening. \"Smooth,\" I murmured.\n\n\"Fresh, just for you,\" she said softly. She was still reading my list, obviously enthralled. \"Four categories, one to a page, three big goals on each page, smaller tasks below each one. This is what I should do?\"",
        "\"You can. It works for me. I have a bigger list, but this is the one I can carry in my pocket and reflect on.\"\n\nShe lowered the list, rubbing her fingers through my hair. \"You do that so well, Alex,\" she said softly.\n\n\"Talk to me, Amy. Tell me what I do wrong, what you'd prefer I do, whatever makes you feel best. Help me do the best I can for you.\"\n\nShe moaned a little. \"Less thrusting with the fingers, more pushing around the inside, top and bottom,\" she whispered. \n\nI turned my fingers over and pressed against the top of her pussy, massaging it.\n\n\"God, yes, like that. Top and bottom. Top shallow, bottom deep,\" she gasped.\n\nI alternated between the two, taking my time with each. I could feel her reactions, and soon learned where I had to apply the pressure, and how much. I could feel her pussy reacting, pulsing around my fingers.\n\n\"Less licking, more sucking,\" she pleaded.\n\nI moved my mouth over the top area, sucking in her lips, feeling her clit moving underneath the skin. I didn't have a lot of experience at this, and feeling that movement was enlightening. I moved my tongue against it, press and release, press and release, pulsing the pressure.\n\n\"Oh God, oh God, oh God, don't stop!\" she moaned sweetly.\n\nI turned my fingers upward, pressing in and drawing forward, feeling the bumpy texture of her g-spot, petting it directly. \n\nShe cried out, and my mouth was flooded with a light liquid, faintly sweet and salty. I pulled back a bit, surprised. I'd never had that happen before. I was hit with another strong squirt, on the chin. Amy moaned, and released a third smaller stream. My hand was caressing the outside of her pussy, soaked almost to the elbow. It was beyond amazing.\n\nShe was gasping, her whole body twisting. I was no longer touching her, but I could see her pussy trembling, and a smaller trickle of liquid escaped. I brought my mouth down over her, licking up her juices, trying to be gentle. \n\nShe rose up suddenly. \"Jesus, Alex! I'm sorry, did I pee on you?\"\n\nI laughed. \"Not hardly. I'm pretty sure you squirted. It's a first for me, but it's way too sweet to be pee. You taste amazing.\"\n\nShe was blushing, \"God, that was incredible! I've never felt anything like that.\"\n\n\"You want to feel it again?\" I asked, licking her gently.\n\n\"Do you think we can, that it can be like that again?\"\n\n\"All we can do is try, if you're willing.\"\n\n\"It's not gross? Squirting all over you like that?\"\n\n\"I loved it. Loved making you come for me. Making you lose control. Let me do it again.\"\n\nShe leaned back, and opened her legs back up. \n\nI learned something new. At least as far as Amy was concerned. Once you open the floodgates, it doesn't take nearly as long to reopen them. She squirted for more twice more, not nearly as much though, the second time losing control, her entire body squirming and twisting, unable to stop coming for a long time. \n\nI sat next to her, caressing her soothingly, calming her. She looked frightened at her own response, gasping, squirming underneath my touch. Running my hand down the inside of her thigh seemed to set her off again, moaning and twisting. I moved higher and brushed her hair back. \"Shh,\" I whispered, \"It's Ok.\"\n\nAmy rolled on her side, clutching my leg curling up protectively. I rubbed her back gently, waiting for her to calm down.\n\nShe buried her head against my knee, and once she started breathing normally, she pressed her lips against my skin. She slowly uncurled, rolling onto her back, her arms across her chest. \"No more,\" she whispered.\n\nShe sat up, turning, putting her feet on the ground. I helped her to her feet, and caught her when she stumbled, her legs still shaking. She clung to me, \"I have to go to the bathroom,\" she said.\n\nI walked with her to the door, letting her get her legs back under her. She turned and gave me a kiss at the door. \"I'm fine, Alex. I've got it from here.\"\n\nI watched her walk in the door slowly, still surprised at how she'd been effected.\n\nReturning to the lounge chair, I cleaned up after her, a puddle on the cushion evidence of her pleasure. I organized the space and went back to the pool, testing the water. I added some muriatic acid, trying to ignore my hard-on, until Amy returned. There wasn't a lot more I could do to the pool. It was about as good as it was going to get. \n\nI looked at it, and felt proud of what we'd accomplished.\n\n\"It's a miracle, Alex.\" Amy said, walking up beside me.\n\n\"Just hard work, we did well.\" I turned and took her in my arms. \"Feeling better now?\"\n\nShe grinned. \"Much. That was pretty crazy, wasn't it?\"\n\n\"To say the least. You're a little firecracker, aren't you?\"\n\n\"I guess maybe I am. Surprised the hell out of me.\" She took me by the hand, dragging me back to the shade of the porch. \"Time's running out,\" she said. \"I'll feel horrible if I can't do something for you before you leave.\"\n\nIt was a very nice something, a long extended blow-job. I watched her, stretched out between my legs, sucking away lovingly, playfully, licking, kissing, teasing, taking me in her mouth. I couldn't help thinking that I'd hoped for more. In particular access to that space between her legs, fulfilling my dream.\n\nInstead, I settled for letting her blow me, and giving her a mouthful of appreciation. She didn't linger, pulling up quickly afterward, and grabbing what little clothing she had outdoors. She gave me a quick peck. \n\n\"It's late. I gotta get dressed. I'll stop by and say goodnight once Dale gets home and settles in.\n\nI got dressed and did a last check of the water quality, and cleaned out the skimmers and pump strainer. I checked the pool controller settings, and started putting away my gear. Amy was cleaning up around the porch and headed back indoors only a few minutes before Dale drove up.\n\nI didn't have much more to do, other than load up my gear. I idled my time skimming the surface of a few stray leaves, waiting to see if Amy would show up and say goodbye.\n\nShe did come out, with her husband in tow. She'd put on a light summer dress which clung to her dynamite figure and looked amazing. I avoided staring at her, afraid my feeling would be obvious. My childhood fantasy had blossomed into full scale adoration. \n\n\"I wouldn't believe it if I didn't see it with my own eyes,\" Dale said, standing near the edge. \"It hasn't looked this good since it was first put in.\"\n\n\"He said he could stop by once a week, and take care of it for the summer,\" Amy told him.\n\n\"As long as it comes out of your household budget,\" Dale told her. He turned to me. \"Great work, Alex. You can count on us for any references you need. We'll spread the word about the miracle you performed here.\"\n\n\"I appreciate it. I couldn't have done it without your wife. She's been a lot of help.\"\n\nHe laughed. \"Nice of you to say so. I imagine lying around in her bikini, if not all that helpful, wasn't too distracting.\"\n\n\"No really. She did a great job scrubbing down the interior and helping with the acid wash.\"\n\n\"That's good to hear. If not more than a little surprising.\" He gave her a smack on the rear. \"We should have you help out more, next thing you know, you'll be actually contributing around here.\"\n\nShe didn't look too happy with him. \"I contribute. I do a lot.\"\n\n\"Of course you do, dear,\" he said condescendingly. \"You've showed her how to do basic maintenance, I hope,\" he asked me.\n\n\"Some. I thought I might go over a few last things tonight, and brush up on things when I come over to do the regular maintenance.\"\n\n\"Good. Don't let me keep you from finishing up, I imagine you must be tired of this place by now.\" He stuck out his hand, and as distasteful as I found it, I shook it. He turned back to the house.\n\n\"I'll be in as soon as we're done,\" Amy said to him, watching his back as he left us. She turned to me, \"You wanted to show me something?\" she asked, grinning wickedly.\n\n\"By the pool equipment?\"\n\n\"Lead on.\"\n\nBehind the privacy fence around the equipment, I turned on the light. \"Everything is setup to work automatically. The only thing you need to know is this button here. If you want to go swimming and the filter's running, you can turn off the pump here.\"\n\nShe moved in close to me, reaching between my legs. \"Is there anything back here I can turn on?\"\n\nI put my arms around her. \"No more than you already have.\"\n\n\"Good.\" She pulled down my shorts, squatting and taking my cock in her mouth, sucking me to hardness.\n\nI alternated my gaze between watching her pretty face going down on me, and looking back at the house. I could see through the slats of their blinds, Dale sitting in a chair, watching TV. \n\nWithin moments I was hard as a rock, and enjoying the hell out of her wonderful mouth. I reached down for her head, holding it in my hands, and moving her back and forth on my cock. She put her hands behind her back, yielding to me, letting me fuck her warm mouth.\n\nI pulled her down hard on my cock, feeling the resistance as I slid into her throat. She moaned sweetly, gasping when I pulled her off.\n\n\"Fuck my face, Alex,\" she begged me.\n\nI pushed back into her mouth, strongly, deep into her throat. Back and forth I moved her head, getting closer by the second.\n\nShe was moaning continuously, as I moved faster, feeling the ending coming. Saliva bubbled out around her lips, dripping down her chin. She gagged a couple of times, but gamely took me deep again after each. I pulled her off, leaving her gasping. \"This time,\" I told her.\n\nShe nodded, kneeling submissively, opening her mouth wide and sticking out her tongue, her eyes looking up at me eagerly.\n\nI slid my cock back into her mouth, fucking her face roughly. Her lips closed around my shaft, sucking. I was only fucking her mouth shallowly, but she pushed forward of her own accord, taking me into her throat again. I groaned, sliding in and out of her tight esophagus. I shoved it all the way in, her nose pressed against my pubes, and erupted.\n\nWhen I finished coming, Amy pulled me out of her throat, sucking me gently. She pulled my cock out of her mouth, and kissed the head sweetly. \"There. That should hold you 'til morning.\"\n\n\"God, woman! How is it possible that everytime with you is more incredible than the last?\"\n\nShe smiled. \"You liked that, huh?\"\n\n\"Like is not the word. That was beyond amazing.\"\n\nShe stood up for a kiss. \"Good. I always want to be amazing for you.\n\n\"I wasn't too rough on you?\" I asked nervously.\n\n\"Very rough. That's going to have to be an occasional thing. Besides, I didn't even get to taste you.\"\n\nI reached under her dress, sliding my hand up her thigh, to her bare pussy. I rubbed her softly, while she leaned against me. \"All yours tomorrow, baby. As much as you want.\"\n\nShe gently pushed my hand away. \"I've got to go in now. Don't beat off tonight. Save it all for me.\"\n\n\"Don't forget your homework,\" I reminded her.\n\n\"Homework?\"\n\n\"The five things you want to do, you want to have, you want to learn, and you want to be. And your plan for achieving each one.\"\n\n\"You're a slave driver,\" she said, sticking her tongue out at me playfully.\n\n\"You'll thank me for it.\"\n\nShe laughed softly. \"I'll be doing a lot of 'thanking' tomorrow. You better eat your Wheaties.\"\n\n\"I'll be doing a lot of eating tomorrow,\" I told her, kissing her softly.\n\n\"I really do need to go,\" she said sadly.\n\n\"8:30 tomorrow morning.\"\n\nShe nodded. \"I'll call if anything comes up.\"\n\n* * *\n\n\"How's the pool work coming?\" Mom asked over dinner.\n\n\"Almost done. Just a little last minute tune up tomorrow.\"\n\n\"That wasn't so bad was it?\" she teased. \"Getting to work with your childhood crush, everyday. I hope she dressed nice for you.\"\n\n\"Mom!\"\n\n\"Don't tease the boy, Marcy,\" Dad said.\n\n\"Did you call Carla Gonzalez?\" Mom asked. \"She wants you to put up two ceiling fans for her.\"\n\n\"Yes, Mom. I called. I'm doing it on Friday.\"\n\n\"Friday? Why so late in the week?\"\n\n\"Mrs. Thomas' hot tub on Monday. Mrs. Beale's fence Tuesday through Thursday,\" I explained.\n\n\"Fine. You should give me a schedule, so I can keep track of you.\"\n\nDad gave me a financial talking to after dinner. How much I was charging, opening a business account at the bank, keeping money out for taxes, getting a business account at the hardware stores and lumberyard, marking up materials. He insisted that if I worked hard, I should be able to save up over $5,000. All good stuff, but not much I didn't know.\n\nI listened patiently, although my mind was wandering. I couldn't get Amy Daniels out of my head. I begged off after a while, went to my room and did some gaming, hoping to distract myself. I went to bed early, resisting the temptation to pleasure myself. Amy had asked me to save it for her. How could I say no to that?\n\n* * *\n\nI was up early, 7:30 on a Saturday. First one awake in the house. I had breakfast and cleaned up thoroughly, shaving really close and doing all the usual. At 8:30 on the nose, I pulled into the Daniel's driveway. Dale's car was gone, which was a nice start. I let myself into their backyard.\n\nAmy was sitting on the porch, snacking on a bowl of fruit. She was dressed casually, loose cream shorts and a simple button up sleeveless shirt. I'd been hoping for less.\n\nShe got up and met me, slipping her arms around my waist. \"Good morning, Alex,\" she said.\n\n\"It is now.\" I tilted her head up and gave her a kiss.\n\n\"Sit, please. We need to talk.\"\n\nThat sounded ominous. Again, not what I was hoping for.\n\nShe poured me a glass of juice from a pitcher on the table, pushing it in front of me. \"I did my homework.\"\n\nI breathed a sigh of relief. That was talk I wouldn't mind hearing. \"And...?\"\n\n\"It was good. Eye opening. I really had to think some things through, and come to some hard decisions.\"\n\n\"You want to share your list with me?\"\n\nShe shook her head once. \"Not yet, Ok?\" She looked up at me, and I could see she was getting emotional. I reached out and grabbed her hand. \n\n\"What's wrong, Amy?\"\n\n\"You're going to hate me,\" she said, her voice barely a whisper.\n\n\"No. I'm not. Tell me what's wrong.\"\n\n\"I can't make love to you,\" she blurted. \"I know I promised, but I need to give my marriage a fair chance before I call it quits. There's so much I want to do, I have to do, and if I can do it while staying married to Dale, and if he and I can work out some issues, I'm going to try that first.\" \n\n\"That's good.\"\n\n\"Good? That's good? You should be furious with me, leading you on, and then hitting you with this.\"\n\n\"It's what you need. You said so. I'd be lying if I said I was ecstatic about it. I've wanted this so long, and to have it snatched out of my grasp at the last second is hard. But your happiness comes first.\"\n\n\"My happiness? This isn't going to make me happy. Happy would be taking you upstairs and making you fuck the living daylights out of me.\"\n\n\"Then why aren't we doing that?\" I asked.\n\nShe sat back and sighed. \"I don't think I could ever get back in Dale's bed after being with you. As it is, when he touches me, all I can think of is you. Last night we did it. And all I could think was that it should be you.\"\n\nI nodded. \"You're right. It should be me.\"\n\nShe was tearing up again. \"I know. But I do want to give this one more chance. I don't think it's going to work out, but I want to stay faithful until I decide it's over. I don't want to be a cheater. That's not the way to end this.\"\n\nI had to wonder about her idea of cheating, if all the oral sex we'd been having didn't count. Still, I understood. I didn't like it, but I understood.\n\nI squeezed her hand. \"We had a great thing. I'll never forget it. Now I want you to do what you have to do. Give it your best, and if it doesn't work out, walk away with your head held high. I'll be waiting.\"\n\nShe shook her head vehemently. \"No. Don't wait for me. That's not fair to you. Things may work out, but even if they don't, it's not going to happen overnight. I have no idea how long it will take.\"\n\nI stood and took her by the hand. \"Come on, Morning Goddess. Let's check the pool for your party.\"\n\nShe resisted, pulling me over to our favorite sunning lounge. \"One more time, Alex,\" she said softly.\n\nShe took her time stripping me naked, then unbuttoned her top and removed it for me. She wasn't wearing a bra. \"I'm going to leave my shorts on. I don't trust myself otherwise.\"\n\nI pulled her close and kissed her belly. \"Trust me for both of us,\" I told her, unbuttoning her shorts.\n\n\"Can I?\" she asked, hesitantly.\n\nI slid them down her hips, pulling her simple black panties down after them. \"Absolutely. Always.\"\n\nShe pushed me back down and knelt between my legs. I was soft, and I saw her smile. \"I don't think I've ever seen you this small before.\"\n\n\"It's been a rough morning.\" I told her with a wry smile. \"Make it better, Amy.\"\n\nShe took me in her mouth, sucking and tugging on my cock. Disappointed or not, having that gorgeous woman sucking me produced results quite quickly. After only a minute or two, I was once again as hard as I ever was.\n\nShe grinned again. \"Now there's the Alex I know and love.\"\n\n\"I love you too, Angel.\"\n\nShe gave me a sad little smile. \"I know.\" She licked my cock, teasingly. \"No more talk of love, Ok? This is difficult enough.\"\n\n\"As long as you know.\"\n\n\"I do.\"\n\nShe stopped speaking and starting sucking. It was different, loving and adoring, she seemed to worship my cock. She kept looking up at me, and I could see the desire in her eyes. It was too much. Knowing that she wanted me, maybe even really loved me, and this was possibly our last time. I wanted it to last forever, but fate had dealt me another hand. We were only a few minutes into it when I knew that I couldn't hold back.\n\n\"I'm going to come for you, beautiful.\"\n\nShe pulled off and licked me again, staring into my eyes and smiled. She sucked me hard, stroking my cock with her hand, using her tongue to tease my sensitive glans. I groaned, resisting until the last moment, and fired off in her loving mouth. She sucked me through completion, then sat up. She opened her mouth, showing me my spend, and closed her eyes before swallowing. She went back down on me, cleaning me, sucking gently, keeping me hard.\n\nAfter a while she laid down on me, her head on my shoulder, her legs open, soft thighs outside mine. \"Alex,\" she whispered softly.\n\nI hugged her, kissing the top of her head. \"Amy,\" I answered.\n\nShe reached down between us, and I felt her hand on my cock. She was rubbing it against her moist pussy lips.\n\n\"Don't, Amy.\" \n\n\"I want to feel it.\"\n\n\"I promised you we wouldn't. Don't make a liar out of me.\"\n\nShe rose up on her hands, lifting off me, her amazing breasts hanging down. \"Can you be strong for us? Let me feel it inside, once. That's all. Can we do that?\"\n\n\"We shouldn't.\"\n\n\"I know. Please, for me. One time. Just slide it inside and let me feel what it should be. But that's all, Ok?\"\n\n\"Will you be able to stop?\" I asked her.\n\n\"Maybe not. That's why I want you to be strong for both of us. Don't let me do anymore, no matter what. No matter how much I beg.\"\n\n\"You're asking a hell of a lot.\"\n\nShe kissed me softly. \"I know. And you've already done so much for me. You've change my life these last few days. Now I need you one more time.\"\n\n\"Put it in,\" I told her.\n\nShe sat up, raising her hips up high, and bent over, watching as she slid my cock inside of her slowly. She lowered herself, sliding down my shaft, watching the whole thing disappear inside of her.\n\nShe sat down, resting her full weight on my cock and sighed. \"Damn,\" she moaned. \"I knew it.\"\n\nI reached for her and pulled her down onto my chest, holding her in my arms my cock buried deep inside my dream woman's tightness. We stayed like that, kissing warmly and lovingly, my hands caressing her body, her tight confines pulsing around my cock. ",
        "She started to raise her hips up, and I grabbed her ass cheeks and pulled her back down hard. \"No.\"\n\n\"Just a little, baby?\" she pleaded.\n\n\"No. Relax. Let's stay like this a little while longer.\"\n\nShe ground her hips against me and I slapped her ass hard. \"Don't, Amy, or I swear I'll pull out.\"\n\nShe whimpered softly and settled back down. She buried her head in my shoulder, while I caressed that amazing body. I was rubbing her back when I felt the sobs start. \n\n\"Shhh,\" I whispered, hugging her.\n\nShe started crying, hard, the sobbing echoing through her body around my cock. I grabbed her ass again, holding her tight against me, my cock throbbing inside of her, while she let it out.\n\nWhen she calmed down, I let go of her ass, feeling her adjust herself and settle back on my cock. I wrapped her in my arms, kissing her pretty face, tasting the salt of her tears, all of which I kissed away.\n\nShe pressed her lips to mine, kissing me again. A long passionate kiss of desperation. She finished by nibbling my lip and pulling off of me. \"Thank you,\" she said.\n\n\"I love you,\" was all I could answer.\n\nShe nodded, then turned around, lowering her pussy over my face before taking me in her mouth. \n\nIt was beautiful. Magical. Just as she'd worshipped my cock, I did the same for her tasty little pussy. Teasing, kissing, tasting, memorizing ever little fold and bump, knowing this might have to last for a lifetime. I was able to get her to come for me softly, then once more, with my cock all the way down her throat, she came hard. My own need burst upon me unawares, and I thrust upward with my hips, shooting my load down her throat.\n\nShe pulled off in the middle of my cumming, sucking the head, and drawing every last drop out of me. I kissed her perfect pussy goodbye, my heart shattering in my chest.\n\nShe laid down on me, my softening cock in her mouth, my lips glued to her clit, sucking softly, never wanting to stop. I felt her head resting on my thigh, her lips still holding onto me gently. She held me in her mouth, her tongue slowly caressing my sensitive helmet. I licked her gently, lovingly, along each side fold and then up the middle and inside her. I relaxed, my mouth glued to her pussy, my tongue taking a last tender journey until I rested, the tip barely inside her.\n\nWe stayed that way for a couple of minutes until she slowly got up and turned around. I held her silently for a bit until she kissed me and got up. She was wearing a forced smile. \"Let's go, poolboy. We've still got some work to do, right?\"\n\nShe got up and slid her panties on, while I pulled my shorts up. She took me by the hand, her beautiful tits still on display, and walked to the pool.\n\nWe took a few minutes to check the water, add the shock, and check the skimmers. I showed her how to turn the salt-water chlorinator from it's super-chlorination setting to the normal level.\n\nI wanted to do more, but the pool was immaculate and our job was done. We stood by the side of the pool, looking at it.\n\n\"We did a good job, didn't we?\" she asked.\n\n\"We did. I have some good news. All the materials came to less than $900. We're even. No second payment necessary.\"\n\n\"I want to pay you the rest,\" she said.\n\n\"I won't take it.\"\n\nShe was holding my hand and gave me a squeeze. \"We're done, aren't we?\"\n\n\"As good as it's going to get.\"\n\nShe turned and hugged me. \"I...I don't want you to come around and clean the pool. I couldn't take it.\"\n\n\"I understand. I'll write up the directions for what you should do and email them to you.\"\n\n\"Thank you,\" she said softly. \n\nWe walked back to the patio and both got dressed. She escorted me back to my truck and gave me one last kiss, out on the driveway where anyone might see. Then she turned silently and ran back into her yard, closing the gate behind her.\n\nI hoped she'd find her happiness.\n\n* * *\n\nI buried myself in work, and wild stay-at-home MILFs. I didn't care that Jenna Thomas had a reputation for being a talker, I fixed her hot tub, and then spent the afternoon trying to forget about Amy by fucking the shit out of the buxom housewife. She was fun, and I had a great time. For a scant few minutes, I was able to force thoughts of Amy out of my head.\n\nI did the fence work, and my schedule started filling up.\n\n\"You're pretty much booked solid for the next few weeks,\" Mom told me over breakfast Friday.\n\n\"Great.\"\n\n\"Amy called, gushing over the work you did for them. And she wanted to thank you for the detailed directions on caring for the pool. That was really nice of you. I know it was a lot of work, but they seem to appreciate it. At least two of the jobs you have came from their recommendation.\"\n\nAmy. Why did she have to remind me?\n\n\"It all worked out. The materials cost less than I anticipated, and I was able to still make a little money. No complaints.\"\n\nCarla Gonzalez had been talking to Jenna. I installed two ceiling fans, and spent the better part of two hours eating her out. She didn't want to do anymore than that, and that was Ok by me. She was a cute, chubby little Latina who certainly enjoyed what I did for her, while expanding my knowledge in that area. I got a $100 tip. Unbelievable.\n\nIt turned out the suburbs are full of wild mommies, looking for a little fantasy getaway from their hum-drum world. About one in four of my jobs ended up needing 'extra' attention. Word must have gotten around. Diana Everson wanted me to play with myself and come on her face. Over and over again throughout the day. She wore it like a badge of honor. Lilly Banks loved to suck cock. I replaced a garbage disposal and got blown four times, twice before and twice after. \n\nNot everyone was so willing to break all the boundaries. I guess I had a reputation as a pool expert, and I was doing weakly maintenance on half a dozen of them by the end of the first month. A few of those women wanted me to lotion them up and massage them by the side of the pool. Two wanted me to finish the job by getting them off with my fingers. Not such a horrible job. I was charging 20 dollars for what was typically 15 minutes of work and maybe another 20-30 minutes of playing around. I usually walked away with an extra $20 for my effort.\n\nBut there were some more daring ones.\n\nJanine Anderson wanted me to fuck her in her wedding gown. How weird was that? She was a wild one, completely dressed up for the altar, including white stockings and veil. She was the first black woman I'd ever been with, and the contrast of the stark white cloth against her dark skin was mesmerizing. She wanted me to change all the light-bulbs in her house to the new energy saving ones, including some very difficult to access lights in their high ceilings. She insisted that any time she walked into the room, I should grab her roughly, lift up her skirt and slip, and fuck her. I didn't even have to finish, I just had to pound her for a while. By the afternoon, I was doing anything I wanted to her. I was making her blow me, bending her over a table and hammering her, even fucking her up her ample ass. I stood on a ladder, changing out the four lights in a ceiling fan, while she sucked my cock between the rungs of the ladder. I fucked her in every room in that house, including the garage, and came for her at least half-a-dozen times. She thanked me ardently at the end of the afternoon, and once again, I was thankful to be able to forget about Amy, if only for a few brief hours.\n\nI went to swap out a dishwasher at Angela Casey's house, and returned from the big box store to find a note in the kitchen. \"I'm in the bedroom,\" was all it said.\n\nI went and found her naked, gagged and tied up. I used her hard, right there one the bed, tossing her around like a rag doll and fucking her tight little pussy like there was no tomorrow. She was a petite thing, not the prettiest around, but a sexy little package. When I was done with my initial use, my cum leaking out of her, I picked her up and carried her to the kitchen, depositing her on the floor. I pulled out the existing dishwasher, then fucked her there on the cold tile. When I'd finished coming on her face, I took my time installing the new dishwasher, taking a break to pound her helpless pussy for a while. I cleaned her up, and put her back on her bed, still tied up. I finished the installation, loaded the old dishwasher on my truck then went into her bathroom and took a shower. I went through her bedside drawers while she watched me anxiously, and found some toys to use on her. I played with her bondage, trying different ways of tying her up, moving the ropes around, replacing them with her husband's ties, and tying her down to the bed. Before the afternoon was through, I'd fucked her ass twice, and pounded her pussy for what must have been half-an-hour, while she had a vibrator stuffed up her butt and turned on. She must have come a dozen times or more. I finished by ungagging her, roughly pulling off the duct tape across her lips and making her blow me before coming in her mouth.\n\n\"Should I leave you like this?\" I asked teasing.\n\nShe was staring at me with adoring eyes. \"You should take me home and lock me in your closet, using me whenever you want.\"\n\nI untied her, rubbing the marks on her skin, and held her in her bed telling her what an incredible fuck she was. She thanked me by sucking me off one last time, even though it took forever, and paid me $200 for the day's work. More than three times what I'd quoted her.\n\nErica Norton wanted me to rape her. I swear. I couldn't make this shit up if I tried. She handed me a note when I got to her house to install a new garage door opener. A tough job. \"Come in the house when you're done, and rape me. Hard. Abuse me. Then take all the money out of my purse.\"\n\nIt took a few hours, but I got the opener installed. I entered the house stealthily by the back-door. She was fully dressed, vacuuming the living room floor, with a set of headphones on, listening to her iPod. I sneaked in behind her, and grabbed her by the neck, pulling her to the ground. She fought me and I used the cord of the vacuum to tie her hands together before ripping her clothes off of her. She fought and struggled, yelling until I took a loop of the cord and put it around her neck, tugging it tight. \"Keep screaming, and I'll be just as happy fucking your cold corpse.\"\n\nShe was quieter after that, trying to reason with me. Begging me to stop, offering me her money, her jewelry. \"Take whatever you want. I swear I won't tell,\" she pleaded as I pulled her pants down and tore her panties off. \n\nI'm ashamed to say I got more enjoyment out of it than I should have. I fucked her over and over again, telling her I was going to make her pregnant. I made her blow me, then pulled out at the last minute to shove my cock up her sloppy cunt and deposit another load there. \"How many is that? Three? I'm nowhere near done with you, you little slut. I'm going to fill your pussy to overflowing.\"\n\nWhen she started crying, I slapped her around a little. Nothing hard, just enough to shock her. \"Keep it up, and I'll beat you until you have something to cry about.\" I was rough with her, mashing and biting her tiny tits, shoving my fingers up her tight ass dry, shoving my cock down her throat until she gagged. I choked her while I fucked her, her face turning red, and she came explosively. \n\nWhen I couldn't get it up again, I picked her up and left her at the foot of her bed, naked, my cum leaking out of her abused pussy. I found her purse, and was surprised to see three hundred dollar bills in her wallet, along with a thick stack of smaller bills. Almost $500 in all.\n\nI peeled off a twenty and knelt down next to her. She cringed, covering up. I pushed her hands out of the way and stuffed the well worn twenty into her dripping cunt. \"That will make sure no more leaks out. If you say a word about this, I will come back and take care of you and your whole family for good. Do you understand?\"\n\nShe nodded slowly. \n\n\"Good. Leave the door to the garage unlocked for now on. I have the code to the opener. We'll be doing this again.\"\n\nHer eyes grew wide, and she nodded.\n\n\"You're a hell of a fuck, lady. Make sure you name our kid after me.\" I kissed her hard, sticking my tongue halfway down her throat and left her.\n\nSure enough, Erica found two more jobs for me to do for her that summer. One was a two minute repair of a leaking toilet, followed by about three hours of rough play. She was my most generous customer, paying me over $400 each time. I'll say this for her, she was a lot of fun to role-play with, and I never thought of Amy at all when I was with her.\n\nMost of the women who required extra services became repeat customers. My fuckable bride had me change out most of the wall switch plates with nice decorator ones. And again, I fucked her in every room in that house, this time while she wore her high-school cheerleading outfit. She asked me to wear a football jersey, and I didn't mind going along. Jenna of the hot-tub became a weekly regular, where I took care of her pool and hot-tub for 15 minutes, then spent the rest of the morning casually fucking. My bondage queen Angela checked in every couple of weeks. The third time she had a friend with her. They were bound back-to-back, naked. Those two wore me out. I tied them together face-to-face, and made them kiss each other while I took turns fucking them in all their holes. Lilly Banks must have sucked me off thirty times from June through August. She wasn't the best ever, but you had to give her an A+ for effort and willingness. I even ran into her at the supermarket one day, and we ended up in her mini-van. She blew me twice, depending on the almost black window-tint for privacy. She tried to give me some money, but I wouldn't let her. I had a little pride.\n\nAnd still, after all of that, I fantasized about Amy all the time.\n\nShe became a ghost. I never saw her. She never talked to Mom again after that one phone call. Rumors abounded about her and her husband. I finally heard from Jenna that she'd moved out and back with her parents. We were taking a break between fuck sessions, and she had a hell of a time getting me hard again after that bit of news.\n\nI earned a shit-load of money during that summer break. I contacted all of my regulars and offered them a last free 'job' the week before I went back to school. Not one turned me down. I was doing two a day, starting at 8:00 am, and not finishing until late. \n\nAngela of the ropes let me know her husband was out of town on Wednesday. I ended up spending the night with her and her friend, Taylor. We took turns tying up one, then the other of the women, while whoever was free worked with me on whoever was tied up. They didn't seem to mind being very friendly with each other. I eventually tied them up in 69, getting a kick out of moving from one end of the pair to the other, fucking a pussy and a mouth at each end. I even went from Taylor's ass to Angela's mouth, and I was astonished at how hot all three of us found that to be. I finished in Taylor's tight little butt, and had Angela clean me up, holding her by the hair. Around 1:00 am we ditched the ropes and climbed into bed together, thoroughly exhausted. I held both of them while we talked about what we all liked most and least. I drifted off to sleep by two cute little well fucked heads on my shoulders, my arms around both of them, their upper legs draped over my thighs. I woke several times in the night to blow-jobs, which lead to more fucking, including taking advantage of whoever was sleeping. I was dragging ass when I stopped by Carla's in the morning for a few hours of oral. Thank God it was Carla. I don't think I could have gotten another hardon even for Amy.\n\nFriday afternoon I finished my summer of debauchery with Jenna. She was always a nice change of pace, wanting plain old sex, with a little oral thrown in for fun. She was talkative as usual grilling me on going back to school. \n\n\"Know where you're going to be living?\" she asked.\n\n\"Same dorm as last year. I've already checked it out. It's a nice room, second floor, on the end, away from the noisiness around the elevators and bathrooms.\"\n\n\"You thinking of coming back at all? Your college is only a couple of hours away.\"\n\n\"Just the holidays. Maybe a couple of weekends. Especially if the laundry backs up,\" I told her, while we laid together in bed, cuddling. She was nice to be with. And fun to hold. I loved the wildness, but having her once a week was probably my favorite in terms of relaxing good ol' fashioned fun. The fact that she had the biggest tits of all my girls, and that she gave me unlimited access, and even let me fuck them, didn't hurt. I realized I was going to miss Jenna.\n\n\"Anytime you're in town, feel free to call. I'd love to get together,\" she told me. \"You've made this summer wonderful.\"\n\n\"I'll keep that in mind. I love getting together with you.\"\n\nShe grinned. \"Want to get together again?\"\n\nI did, and we did, and it was good. Very good. But it wasn't Amy.\n\n* * *\n\nI moved back to school that Saturday. Mom was all weepy, and Dad was acting proud over my successful summer, earning nearly $24 grand. I'd worked six days a week, 8-10 hour days, for nearly three full months. I'd still had a chance to spend most evenings with old friends, going out, having a beer, catching a movie. All the usual. I didn't like to sit around the house; I always ended up getting depressed about losing Amy like I had. So I had stayed very busy. And it had paid off. I'd managed to bank over $19,000.\n\nI met my roommate and we worked out the room details, picking beds, closet sides, moving our furniture around. He was also a sophomore, ROTC, and had been going out with a girl the previous year. They hadn't stayed in touch over the summer and he was fretting about getting back together with her. He seemed like a pretty decent guy, and I was hoping we could be friends.\n\nI was unpacking the last of my clothing when I got an odd feeling. You know the one. Like someone is watching you, a cold chill running down your spine, a funny little twitch at the back of your head. I turned and found Amy Daniels standing in my doorway. She was a vision in shorts and a tight t-shirt, her long dark hair pulled back in a pony tail. I was stunned. I stood there staring at her, at a complete loss for words. My mind went blank.\n\n\"Should I go?\" she asked nervously, when I didn't say anything.\n\nI darted to the door, grabbing her by the hands and pulling her in. \"No. Never.\"\n\nShe smiled for me and slid into my arms easily, her body familiar. I could smell her shampoo, the same once she'd used over the summer, some fruity thing. One good whiff and I was taken back to her lying on me, my cock inside of her, holding her, while she cried. I didn't say anything, I just hugged her. I felt tears running down my face, and she looked up and brushed them away, ignoring the ones dripping down her own cheeks.\n\n\"What are you doing here?\" I finally asked.\n\n\"Going back to school. I need about two full years to finish my degree. My divorce is final, and I'm working on my list.\" She pulled my head down for a soft kiss. \"I'd like to share it with you now, if you'll let me.\"\n\nI'm sure all of this came to a shock to my roommate, who was sitting at his desk. He finally got up. \"I'm going to get some dinner. I'll be gone a while.\" He stopped at the doorway. \"Leave something on the door-handle if you need some privacy.\"\n\nAll in all, not a bad guy, it seemed.\n\nI got up and closed the door, then undressed Amy, while she undressed me. We got in my little single bed, and I put her on her back. She opened her legs for me, and I pressed my achingly hard cock against her moist lips and pushed. All the way in.\n\n\"God,\" she moaned softly. \"Even better than I remember.\"\n\nI stayed on my knees, looking down at her, taking it all in. Her ethereal beauty, amazing body, magazine cover-girl face. \"Take out the pony tail.\" I told her. I wanted to see her long hair unbound, the way I loved it. It only took her a few moments to get her hair free and shake it loose.",
        "\"Better?\"\n\n\"Perfect. Every damn last thing about you.\"\n\nI kissed her softly, then more fervently as I started fucking my dream. I fucked her hard and fast, unable to hold back, until those first few minutes of desperate need were behind us. I then took on the task of learning her. Trying different things, long slow strokes, grinding against her, stirring her insides, pounding her hard, taking her slow and easy. It wasn't long before she told me she was going to come, and I fucked her faster, straining to come with her, filling her just as she was coming off her first orgasm and making her come with me again.\n\nWe made love for a couple of hours, not talking about what had happened or what the future held. We were closing our final deal, the morning we'd missed out on. She rode me for a long time, obviously enjoying herself, playing around, trying different positions, and different actions. We did it on our sides, then doggy style, which I found that I absolutely adored with Amy. The view of her wonderful ass, narrow waist, smooth skin, little dimples that appeared and disappeared while I fucked her. Watching my cock pierce her repeatedly, the view of her tiny little pucker hole between her cheeks. Ridiculously sexy. And it was so easy, so comfortable, it seemed like I could fuck her forever like that. She seemed to enjoy it as well, coming several times for me that way, until she grew weak and collapsed onto the bed. I rode her down, and fucked her prone body, until I came again, having lost count of my orgasms by that time.\n\nWhen we were thoroughly fucked out she gave me a hug. \"Paid in full, poolboy?\"\n\n\"And then some.\"\n\n\"Feed me? I'm starving. My poor little body's not used to that.\"\n\nWe hit the IHOP, gorging ourselves, while I finally got her story. She'd given it a chance, but Dale was having none of her newfound need for independence, and refused to let her go back to school. He wanted her home, taking care of him, and available evenings and weekends, not having to compete with homework. According to him, she didn't need a job, he earned plenty, and her working would be selfish. \n\nShe'd moved home, and over the next few weeks had filed for divorce and worked out all her old issues with her parents and siblings. According to her, it had been difficult but rewarding. She swore she was closer with her mother and youngest sister than she had ever been in her life. Apparently they have money, and were 100% supportive of her going back to school on their dime. The divorce was icing on the cake. Turns out I wasn't the only one that didn't like the guy.\n\nShe had worked on her list, which she pulled out and shared with me. It was a little fold up sheet, two pages front and back, four pages in all, almost identical to mine. It was much of what we'd talked about, including completing her Bachelor's degree, getting a Master's, working at a non-profit, helping children. She still wanted to climb Kilimanjaro. She also wanted to see the pyramids and the Great Wall. She wanted to swim in the Red Sea. She wanted to learn to waltz in Vienna, and tango in Buenos Aires. The last page caught me by surprise. \n\n1. Make love to Alex Martin\n\n2. Live with Alex.\n\n3. Marry Alex.\n\n4. Have four children with Alex.\n\n5. Spend the rest of my life with Alex.\n\nI looked up and she was watching me. \"My happiness page.\"\n\n\"Have four children?\" was all I could respond.\n\nShe grinned. \"That number is negotiable. I have a small apartment off campus. Want to help me knock another item off my list?\"\n\nI smiled, leaning across the table and kissing her. \"I'm going to make sure we take care of every item on your list. I promise.\"\n\nShe smiled back. \"I know. And I'll help you with yours.\"\n\nAnd we did.\n\n================================\n\nCongratulations if you made it all the way to the end of this long story! I hope you enjoyed it. If you did, please vote and let me know. Thanks as always. "
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "oral",
        "squirting",
        "cheating",
        "blow-job",
        "gigolo",
        "fantasy",
        "milf",
        "goals"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/poolboy-benefits"
}