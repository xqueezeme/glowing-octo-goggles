{
    "title": "Duplicity Ch. 04",
    "pages": [
        "Jeffrey the footman brought in tea, then went to close all the window shutters in the Warwick's front parlor to ward off the rain that had started to fall. He stroked the fire in the fireplace a bit then bowed to the two ladies who occupied the room before he quickly retreated.\n\nLady Ann was a picture of serene elegance as she poured the tea. Beneath her cool exterior her stomach clenched and her mind raced. The tea and biscuits did not wash away the bitter bile in her throat. Still she gave away none of her inner turmoil as she petted Lady Evelyn, who leaned upon her so exhausted, and so distressed and so trusting.\n\nBeautiful, young, mysterious and now weary, Lady Evelyn. Ann was objective enough to know that her own fading looks could not compare to Evelyn's alluring freshness. The young woman was simply perfection and it wouldn't be hard for a man to lose himself in the deep pools of Evelyn's sapphire-blue eyes. Ann was hard pressed to believe that there might be intelligence there too. Afterall, Ann thought to herself, if she had been Lady Evelyn, she might wonder why, after ignoring her as the rest of the blue-blooded ladies had done, Lady Ann was suddenly offering her friendship. Perhaps Evelyn may even ask, what Ann's motivation might be as no one amongst this lot ever did anything without purpose. If Ann were Evelyn then she would have guessed that a sudden offer of friendship usually hides a deeper motive. As Ann carefully studied Evelyn's beautiful, sweet face, there wasn't a trace of suspicion behind those wide-set sapphire eyes.\n\nSo as the two ladies sat, shared tea and talked, Evelyn did not suspect at all that every time the name of Lord Davenport passed her perfectly shaped lips, her new friend dug her sharp nails into the palm of her hand. There was no way Evelyn could know that what she was telling Lady Ann were like icy blades slicing into the older woman's heart . \n\n\"Perhaps,\" said Lady Ann, \"perhaps in time, you may come to find that marriage to Lord Davenport, or to any man truly, is endless days of monotony. It may not be nearly as devastating or as thrilling as it all seems now. Think back to all the marriages you've observed and you will know that I speak truthfully.\"\n\n\"I can't say that I've ever truly observed a marriage,\" Evelyn blurred out, then hurriedly snapped her lips shut.\n\nAn uncomfortable silence fell between the two ladies. Ann wanted so very much to press Evelyn to say more about her life before, yet Ann's intuition told her to stamp down her curiosity. \n\n\"She must learn to trust me, rely on me. All in due time, she won't have a single secret or private thought that I will not be privy to,\" Ann thought to herself. \"I just need to be patient.\"\n\n\"I cannot imagine how life could ever be monotonous with Lord Davenport,\" Evelyn was saying, her eyes glowing, and looked off towards some distant memory. \"I cannot imagine life with him at all. Ohh.... I fear him. I dread him, yet I cannot stamp him from my mind. He behaved most outrageously towards me.... The things he said.... I should not give him another thought at all... Yet--!\"\n\n\"--Your heart races and you feel giddy just thinking of how his lips felt against your skin,\" Lady Ann concluded for her. \n\nEvelyn dropped her face into her outstretched hands in shame. \"Oh yes! Oh God! Oh God! Oh God, why have you made women so weak that our good judgment could be so compromised by the sight of a tall, beautiful man? I have always resented such female weakness in the penny dreadful romances. Now here I am, stepping into just such a role that I abhor.\"\n\nThe rain outside beat a rapid tempo against the shutters, in tune with Ann's rapid heartbeat.\n\n\"So he's kissed you?\" Ann finally asked her voice barely above a whisper.\n\nEvelyn reluctantly nodded, thinking the good Lady Ann must be shocked by the confession. But Lady Ann merely topped off Evelyn's tea cup with a reassuring smile. Once the words started flowing, it all came tumbling out and with each breath, Evelyn felt lighter and lighter till her weariness bordered on being tolerable.\n\nLady Ann's eyes gleamed brightly as she forced past her own emotions to offer a comforting smile. \"You poor, dear girl! The fault lies not with you but in part with your youth and inexperience. A few more Seasons and you'll learn that all men are cads! No, no! You mustn't think you're at fault. Men, like his lordship, so use to having any earthly desire granted without pause, will often make a sport of young women's virtues. It is our feminine duty to guard against their advances for often we mistake their attention for love. Women are such feeble, such trusting creatures that we would happily allow our hearts to override our good judgment.\"\n\nEvelyn grimaced and she touched the edge of Lady Ann's handkerchief to the tears streaming from her eyes again. \"Then he has done this with others?\" \n\nAnn inclined her head to one side, slightly, reluctantly. It was somewhere between a nod and a shake that paused midway. \"I have no personal knowledge and would not think to slander his lordship. But--\"\n\n\"But?\" Evelyn urged. \n\n\"Well, one does tend to... hears things....\" Ann allowed her voice to trail off as though she was speaking to herself. Then she quickly shook her head. \"But one must not give credence to ideal gossip--\"\n\n\"Where there is smoke, there must be fire,\" Evelyn insisted. \"Oh how foolish of me! Of course there must have been many others.\" \n\n\"I speak in general terms,\" Ann replied carefully. She would not be safe if Lord Davenport ever learn of this slanderous conversation. Especially when Lord Davenport wasn't known to seduce any innocent girl before. \"For a man, with such power and influence as he to have reached his majority without a wife---. Well he tends to develop tastes and habits that may be unusual for a young thing like you.\"\n\n\"I can't bring myself to think of it!\" Evelyn confessed miserably. \n\n\"Some men will and do tame their wildness once they are married,\" Ann assured her.\n\nTwo great droplets of tears rolled down the corner of her gleaming eyes, not out of sadness but out of remembrance of how HE had touched her.... Unconsciously, Evelyn's soft pink lips parted and she ran her tongue along the edge of her bottom lip as her face flushed at the memory. What lies within the confines of the marriage bed? she wondered. If it was anything like what she experienced in her carriage the previous night....! She swallowed tightly.\n\n\"Be wise my sweet child,\" said Ann, interrupting her train of thoughts. \"I feel your distress, but think a moment. Could you possibly break a marriage contract without bringing down the wrath of all involved? Including your guardian, a gentleman to be reckoned with, I'm sure, if he managed such a match for you. Now think on this. Most men of his ilk will tire of his wife within a year or two of marriage, after the children arrives. There will be mistresses aplenty to fulfill his baser desires and you will be free to come and go as you like.\"\n\nThe rosy color drained from Evelyn's face as her lower lip trembled. \"He cannot--- there's the Lord's commandments that forbids---!\" Her voice broke and faded.\n\nClearly the image of Lord John in flagrante delicto with another woman distressed Evelyn, Ann noted with interest. So the whole desire for escape was nothing more than some theatrical, self-deceiving attempt to fight her own feelings, Ann surmised. \n\n\"The theatrics of the virginal ing\u00e9nue!\" Ann thought disdainfully even as she continued to gently comfort Evelyn.\n\n*********************************** From where he stood, Jeffrey, the footman, would hear their words clearly. He had carefully left the door of the parlor ajar just a bit after bringing their refreshments, that left ample space for him to hear all that passed between the ladies. Now he waited, his tall, thin, wiry frame completely still, with bated breath for Lady Evelyn to reveal something of the Prince's visit earlier. All the female servants below stairs were in a state since the royal carriage came and went that morning. They were sure to give him quite the treat if he could return with some bits of news. How fortunate that the Baroness arrived so shortly after the Prince's departure, for if there's one thing Jeffrey counted on, it was the feminine love for tittle-tattle.\n\nJeffrey could just make out the Baroness's regal profile through the crack in the door. He loved to catch a glimpse of the great lady whenever she visited the Warwick's home. She always brought with her a waft of jasmine scent and an air of sophistication. \n\nAt one point, he felt sure that Lady Ann looked right at him leaning against the crack in the doorway, and even offered him a small wink and a secretive smile. She knew he was there! And she wasn't about to give him away! Jeffrey grinned widely. Perhaps her ladyship had taken a liking to him as well. Young Miss Mary, his mistress's sister had certainly been quite willing, one several occasions now, to give him her favors. \n\nSoon the news of Lady Evelyn's \"secret\" betrothal traveled below stairs. To the Marquis of Davenport! Jeffrey, the footman had whispered what he overheard to a passing scullery maid who ran downstairs to tell Cook, who in turn went out the servants door and spoke to her sister, the ladies' maid next door who in turn went and told her mistress. The original curiosity of Prince Edward's visit had been momentarily forgotten.\n\nThe rain had turned to just a drizzle made more miserable by the chilly winds that blew, but that did not impede the speed with which gossip travels.\n\nWhen the Baroness finally decided to take her leave, the news had already reached down the avenue and spreading even further. As it were, several servants had gathered just beyond the door of the Warwick's parlor with beaming faces and bobbed curtseys when Evelyn and her new finally emerged Both ladies hardly noticed at first, as they spoke a few soft words to each other\n\n\"Best wishes for your happy news my Lady!\" one of downstairs maid suddenly blurted out.\" I think you'll make a most beautiful bride! Much prettier than the Princess of Wales, I'm sure!\"\n\nBoth genteel ladies stopped in their tracks and whirled around, towards the girl said. \n\n\"What happy news? What do you speak of?\" Ann asked quickly and sternly.\n\n\"Lady Evelyn's engagement of course!\" the flushed faced servant blustered as she darted her panicked eyes back from one great lady to the other, suddenly realizing that she may have spoken out of turn. \"To the Marquis of Davenport! I'm wishing you a lifetime of happiness my lady, to his lordship--\"\n\n\"How--! Who did you hear this from?\" Evelyn demanded. All the color drained from her face then rushed back to color her bright red to the roots of her hair. The other servants read the situation quickly and correctly and scattered. \n\nLady Ann quickly placed her hands gently on Evelyn's shoulders to turn her away from the frightened servant girl. \"Clearly our conversation was overheard. One must remember in quarters such as these, the walls tend to have eyes and ear.\" She turned towards to the red-faced, flustered maid. \"Your mistress has been remiss in your training. Tell me, did you hear this from your footman or butler?\"\n\nThe frightened maid's face turned several shades of red. \"I mean no harm ma'am!\" the maid cried out, but bowed her head under Lady Ann's stern warning look. \"It was the footman mi'lady.\"\n\n\"There, you see!\" said Ann to a flustered Evelyn. \"Now you know to be on your guard around these two for their loose lips.\"\n\n\"But I wasn't!\" the maid protested. \"Honest! Jeffrey overheard you --. We were all so pleased for you---. I beg your pardon! I only meant to express--\" \n\n\"By now the news is halfway across London,\" Lady Ann predicted as she linked her arms through Evelyn's and headed for the front door. \"I'm afraid I must go, but prepare yourself child, for the well-wishers and the curious seekers.\"\n\n\"I cannot face it!\" Evelyn cried miserably with both misery and exhaustion. She allowed Lady Ann to hold her up. \"Not even a day... I wasn't given just a day to prepare myself. Once it is known there will be no getting out of this marriage contract without scandal and disgrace, will there?\"\n\n\"Chin up!\" Ann commanded cheerfully. \"Rarely do our plans succeed when God intend otherwise. We may yet devise a plan to your dilemma, or at least prepare your trousseau. I must confess, that I am surprised at your guardian for arranging such a match in such a manner. We are living in an enlightened age past the days of forced marriages. Who but the king has the power to command such a thing of his own children?.\"\n\nEvelyn returned to her room, without a glance towards Jeffrey who bowed low to her as she passed. How she despised that thin young man with the narrow face. His eyes were handsome enough but she thought him too sly the way he always looked lustfully at the young ladies of the household whenever he thought no one saw. Evelyn thought she imagined it but a few times, she could have sworn she saw Mary in some dark alcove with him, standing too closely. She must think of that now, but she will take care not to speak when he was near! ***********************************\n\nLady Ann returned home, tossed aside her wet things and immediately retired to her bedchambers. Sprawled across her chaise in an alcove, a handsome, auburn-haired, young man awaited he. He was dressed only in a ruffled silk shirt, brocade blue trousers with a matching brocade blue frock coat tossed carelessly across the back of the chaise. He had been staring up at dancing shadows cast by two tall candelabras that stood on either side of the chaise, lost in thought.\n\n\"Have you been waiting long, Henry?\" Lady Ann said with a flirtatious smile as she glided over to him, a vision of honey-color curls, pale coral pink skin in yards of pale green taffeta. \n\nThe corners of Henry's wide-set green eyes crinkled as he smiled up at her. \"Ah, but I expect that you have a delicious tale to tell,\" he replied with a mischievous curl of his thick lips.\n\nAnn allowed him to take her hands and lightly kiss each of her fingers for a moment before combing her fingers through his thick, auburn curls.\n\n\"That I have,\" she replied, sitting down on the edge of the chaise with him. She moaned softly when he leaned forward and nuzzled into her ample cleaved and deftly unlaced her bodice. Her large, dark nipples bounced slightly and popped out over the top of her corset. The dress soon discarded into a pool of pale green taffeta of her feet. She pushed her shoes off.\n\n\"Tell me,\" he said finally, over the peak of a nipple.\n\n\"It seemed I picked an opportune time as our ing\u00e9nue was in desperate need of a friend. She gladly unburdened some interesting news to me.\"\n\n\"What did she reveal to you? What juicy morsel of gossip can we use against her?\" he asked just before taking the nipple lightly between his lips, making her gasp.\n\nAnn released her pinned up hair into a tumble of golden, honey colored waves over them. Her hooded eyelids fluttered, when he returned his attention to her hands and sucked two of her taper fingers into his mouth, caressing the soft flesh there with his hot-wet tongue. He had such an eager tongue. She fell gracefully forward into his arms and allowed him to unhooked her undergarments, as he blew on her earlobe ever so slightly. Ann closed her eyes and forced herself not to think on how feminine and soft Henry's hands felt. She tried not to think of a set of longer, more muscular arms, a broader chest and more expert hands. \n\n\"She is engaged to be married --to none other than our dear friend Lord Davenport!\" she said woodenly\n\n\"Marriage?,\" Henry replied sardonically with a light chuckle. \"Didn't think he went for that sort of thing. And to Lady Evelyn you say? That surprises me though I suppose it oughn't. I suppose he charmed her till she couldn't refuse him?\"\n\n\"He's a proficient hunter,\" she agreed pulling back slightly to rid herself of the rest of her heavy undergarments until just her stockings and garter remained. \"But charm had nothing to do with it as she tells it.\"\n\nHenry licked his lips as grabbed a handful of her silky, thick dimpled. Henry teased the slightly saggy skin there before slapping her rounded rump. He wondered how long before the ravages of time fully claimed her hour glass shape. Lady Ann was still a great beauty, but there were already clear signs of her age in the thin lines across her forehead and down either side of her thinning lips. No doubt she fought a valiant battle again those lines with all the bottles of lotions and potions spread liberally across her vanity. Henry enjoyed the favors of a woman exceeding him in age. They tend to be so eager and grateful, he found.\n\n\"It seems he's not yet aware of his own good fortune,\" Ann was saying, completely unaware of Henry's line of thoughts. \"Lady Evelyn's mysterious guardian had negotiated a marriage contract with Lord Davenport's father, the Duke.\"\n\n\"How antiquated,\" Henry murmured against her hair. \"Though I must confess that such an arrangement is most appealing to me. Just have my father and mother select the bride and be done with the whole affair. The whole notion of a courtship, where one has to be poetic and gallant, it's so... tedious and common!\"\n\nAnn chuckled at that as she snuggled into his embrace. \"Well women do like to be romanced if even just a little. I dare say the poor little thing was quite devastated by the notion of being thrown into matrimony. She's merely conflicted of course. Behind all that fussy reluctant I'm sure she is merely just being coy.\"\n\nHenry had rolled her beneath him on the chaise and settled himself between her stocking clad thighs. He paused for a moment in his intended purpose and leaned back a bit.\n\n\"So, John Mallory you say?\" he asked with genuine surprise as the new sunk in. \n\nAnn smiled slyly. \"I dare you to be so familiar to his face!\"\n\n\"I wouldn't dare,\" Henry answered back humorously. \"Will you tell on me? But in all seriousness I didn't think him the sort to settle into domestic tranquility.\"\n\n\"Lord Davenport is a man full of surprises,\" Ann replied with contempt.. \n\n\"But I suppose if the lady is as beautiful as Lady Evelyn, who could blame the chap? She is quite breath-taking I must say. I've never encountered such beauty and grace-- \"\n\nLady Ann's whole body stiffened.\n\n\"With the exception of you my lady, of course\" Henry corrected himself quickly and moved up her body again. \"Your beauty is beyond compare. Davenport is a fool---\"\n\nShe raise up on her elbows and raised a naked foot to his chest, firmly pushing him back. \"I know what you meant!\" she cut him off sharply. \"My lord Davenport was quite taken with her, but this turn of events comes at no effort from his part as I've told you. Had there not been any outside intervention, I would imagine he would have dropped to a knee to her before too long. Your sex will often lose your senses over a fresh skirt. Though I suppose you all cannot be faulted for your weakness. It's how God made you.\"\n\n\"So will that be the end then?\" Henry chuckled as he continued as he slyly took advantage of her propped up leg to finger her soft, mound below. \"Our scheming put to an end before we've launched ourselves? They'll simply marry, spend most of the year in the country and make each other as miserable as the rest of the matrimonially tied lot.\"\n\nAnn eased the tension in her extended leg and allowed him to come closer \"Oh but there's fun to be had there too! One often grow weary of the monotony of marriage. One may and often do look elsewhere for satisfaction. I know something about that, after all. All the best country estates are fraught with intrigue of that sort. Marriage are rarely happy and it is often times just a brief pause in a story!\"\n",
        "Lady Ann spread her thighs and reached down to stroke the taunt outline of Henry's manhood over his trousers and felt his excitement grow. She fought to pushed another comparison out of her mind. \"Now show me how you've missed me!\"\n\nHenry swallowed past the lump in his throat as she caressed him and he couldn't resist grabbing a hold of her breasts.. \"Shall I ruined her for him then? Soil her innocence so he's forced to abandon her to keep his honor?\" He drew his breath sharply when her fingers gripped him. \n\n\"You shall play a part,\" Ann purred up into his ear. \"But I want him to suffer without the deed to be traced back to you or me. So they must marry and quickly.\" \n\n\"I'm afraid I don't understand? You want him married to the one he threw you over for---.\"\n\nLady Ann abruptly sat up and pushed him away. She crossed the expanse of her bedchamber to her dressing table in just gartered silk stockings and her tumbling honey-colored hair to hide her nakedness. Henry groaned in frustration as he watched her movements, so graceful and purposeful, like a cat. She fumble through all the varying shaped bottles and jars on her vanity, before finding an ornate box, and retrieved a cigarillo. \n\n\"Come back!\" he implored with a theatrical groan in frustration.\n\nAnn didn't reply as she lit the cigarillo and seductively arched her long neck to expel a puff of smoke. She leveled her cat-like hazel eyes on him again. \"I've never suffered any man to play me for a fool, Henry. Not my husband. Not any of my lovers. I intend to play the long game, \" Ann said softly, with stony determination. \"He will marry Evelyn and tie the noose of matrimony tightly so there's no escape. Then I will use the very object of his love against him!\"\n\nHenry felt a delightful shiver run up his spin at the throaty sound of her voice. Yet he did not feel convinced by her words. \"Unless you intend to turn his bride into a nagging shrew I don't see how that goal can be accomplished. Even so, a man would simply pack his wife off to the country to look after the children and carry on as he pleases. You know that. There's not much a woman could do in effecting the lives of men, even in marriage.\"\n\n\"You'd like to believe so wouldn't you?\" Lady Ann replied archly as she blew smoke out one side of her pursed lips. \"Allow me to enlighten you my dear boy. Never underestimate the power of women. Especially if you have the misfortune to fall in love with one. The greatest of men have been brought down by a weakly made woman simply because he loved her. There are many ways she may destroy your mind and wreck havoc without you even knowing it.\"\n\nHenry laced his fingers behind his head and studied her, lazily, still unconvinced. \"Not John Mallory surely! I doubt he is capable of any frailty, especially love. He never flusters. Doubt he broke a sweat during the whole bloody campaign against the Prussians. A man like that, was forged by sterner stuff that would take more than feminine wiles to break.\"\n\n\"Ah but the stronger, more unyielding a man may be, the harder he will break!\" Lady Ann retorted. \"No, dear boy John Mallory is not infallible as he would have the world believe. He is a man forged of his past and bears the scars both physically and hidden.\"\n\n\"What scars? Oh do tell!\"\n\nAnn smiled enigmatically. \"Some secrets I must keep, even from you, for now. Prove yourself useful and you shall be rewarded with my trust.\"\n\n\"What's to be my purpose then?\" \n\n\"Plenty,\" she replied biting down on the end of the cigarillo, and sucked puffs of smoke from it. \n\n\"When shall we act?\" he pressed further.\n\nAnn chuckled and shook her head. \"Patience dear boy! You see, that's the power of women you see. First we watch. We observe. We use the inherent weakness of our foes against them and move them as we like, like so many pieces on a chessboard. The key lies in understanding their motivations and weaknesses.\"\n\nHenry shrugged and conceded the point. He got up from the chaise and went to take her in his arms again. \"Fine. You shall play your feminine wily games. But later! Enough scheming for now. I'm bored with it. I've wait for you all afternoon and will claim my reward for my patience.\"\n\nLady Ann suddenly narrowed her eyes suspiciously as she leaned back, away from him to gaze deep into his green eyes. \"What has he done to garner your disdain? What do you hope to gain from my plans?\"\"\n\nHe wrapped his arm tightly around her and nuzzled her neck, the way he knew she liked. \"On the one hand, I should thank him for freeing your attentions,\" he said between kisses. \" These last few weeks have been divine with you my dear. One the other, he's won quite a sum from me at the card table.\"\n\n\"You hate him because he bested you at cards?\"\n\n\"Rather ruthlessly, when he deign to suffer my company!\" Henry quipped. The corner of his mischievous green eyes crinkled as he smiled. He stepped back to shed his shirt and unfasten his trousers.\n\n\"I don't hate him, my sweet.,\" Henry confessed light-heartedly as he grabbed her with one hand and held out his erection with the other. \" As I see it, it's quite unjust how God has given him with both hands. He's taller, far better titled and a better horseman than I. Society seems to move to the tempo he dictates and he's insufferably arrogant about it. Women desire him and men emulate him. Even the Whigs and Tories will pause to hear him speak and they never listen to anybody. Now he's to have the most desired debutant of this season? How is such a man tolerable? It's quite unthinkable-- no, it's my duty to see him humbled, don't you think? All in the name of fairness and restoring balance.\"\n\nLady Ann allowed Henry to draw her to him once more. She signed when he kissed the hollow of her neck, then drew in her breath sharply when he pushed up into her. \n\n\"Quite so,\" she thought ruefully as she clung to his shoulders to meet his urgent thrusts. \"Lord John had indeed been blessed with abundance in every conceivable way.\"\n\n************************************ As Lady Ann predicted, Evelyn had a sudden flood of visitors. Invitations to teas, picnics, theatre boxes and suppers poured in.. They were from the Countess this or the Duchess that. All the paragons of Society came calling to offer her their friendship and with more urgency than before to know the young woman who captured Lord Davenport's heart where so many had failed so miserably before. \n\nThere was no question that the young lady was beautiful enough to be worthy of a Romney portrait, but who was she? Who were her people that she should marry the heir of the Duke of Northumberland? Everyone who was anyone had to know!\n\nEvelyn tried to politely discourage their probing. Still they came day after day to sit, drink tea, play cards and probe for every detail of Evelyn's betrothal. Evelyn remained stoically silent, but this time the curious would not be denied. So when Evelyn sputtered for a response, her new friend, Lady Ann, came to the rescue. \n\n\"Why, they were spoke for each other since Lady Evelyn was a child. Evelyn returned from abroad since she came of age so they may marry. Certainly, you've all known of this?\" Lady Ann lied cleverly to the milieu, to Evelyn's look of relief and gratitude.\n\n\"Why yes!\" Lady Warwick was quick to agree. \"We thought it was common knowledge!\"\n\nNo one inquired further after that. Later Ann explained it thusly to Evelyn: \"None who believe herself to be the height of fashion and the pinnacle of her society will willingly admit she's not privy to all the secrets of her milieu. They can do nothing but pretend they've all known this all along.\"\n\nSure enough, it became generally accepted that Lady Evelyn had always been betrothed to Lord Davenport, as Lady Ann knew it would be. \n\nStill the ladies came to the Warwick's in anticipation of Lord Davenport. They all wanted to be there to bear witness when he shed his proud visage when he called on his intended bride! How thrilling they all agreed, to finally witness the great, self-possessed Lord John blush and simper as he utter words of love to Evelyn. All the ladies conjectured that he would be marvelous at reciting poems and sonnets as he was at everything else! So for a few hours each day the Warwick's parlor was clustered with ladies, nibbling on cakes and sipping tea, as they anxiously awaited Lord John's arrival. \n\nLord Davenport, did not come!\n\nLady Warwick wavered between elation over her new-found popularity and taking advantage of all the invitations Evelyn declined, to despairing the lack of even a note from Lord Davenport. She managed to learn of his favorite brand of Scotch and ordered her cook to only prepare his favorite foods. Her impatience was mounting though, and became more apparent with each passing day. She took to coming up with more and more outlandish reasons for why he was yet again detained. \n\nLady Ann again came to the rescue, when she informed all who queried that it was a busy time for the peerage, what with the question of reform coming before Parliament. Most of the ladies had no interest in the particulars of what men did, but they accepted that there might be more pressing matters of governance that may put a hold on romance. That, however, did not prevent them from returning home to grumble about the lack of Lord Davenport's sighting yet again.\n\nIn private the Lady Warwick wringed her hands and despairingly wondered out loud why he hasn't called on them, or even set an proxy. Surely he must formally propose to Evelyn, or make some form of gesture to his deep affections. There were matters of grave importance to be discussed that even a secretary would do. There's an engagement dinner to plan and even the wedding date to be set! More importantly, Lady Warwick thought, if his lordship became a regular at her townhome, no one could ever doubt her position in society ever again.\n\n\"He must come?\" Lady Warwick said to Evelyn yet again. \"As man of his station ought to bestow some token of affection to his bride to be. Has he sent no word to you? No gifts at all?\" \n\nThe household was gathered in the parlor that afternoon, all with the exception of the Earl of course. Mary and Regina darted glances at Evelyn sitting in a corner, her dark head bent over a book. \n\n\"How can he not!\" Lady Warwick wondered rhetorically. \"Perhaps he called while we were out?\" She asked the butler to check for Lord Davenport's calling card. The butler shook his head, no. His lordship hadn't been by.\n\n\"My dear Evelyn,\" Mary said at last. \"Perhaps you ought to invite him?\"\n\n\"Heavens!\" exclaimed Regina. \"Would that be proper? Surely he must call on her!\"\n\nBoth girls turned to their older sister, who was just as at a loss to the proper. \"Maybe you should send him a note?\" she finally suggested to Evelyn.\n\nEvelyn closed her book and stood up from her seat. \"I beg your pardon, but I think I'll visit with Lady Ann this evening. She's unwell and I thought to cheer her with a visit.\"\n\nIf there was one thing that her marriage would afford her was an escape from the insufferable Warwick's household, Evelyn thought with disgust as she quickly left the room. All they ever cared about was where they stood in society. Who ought they be seen with. Which invitations did they receive just so that they could return home later and tear apart their friends and acquaintances as surely as they were savaged by them. It was all meaningless, Evelyn thought with a frustrated growl. \n\nHer maid, Martha, bless the girl, quickly helped her find her hat and cape. If she didn't get out of that house immediately, Evelyn thought she would claw through her own skin. The constantly scrutiny and probing questions was more than she could take. All of which was made worse by her own lingering doubts over Lord Davenport or the particulars of marriage itself. Thankfully there was Lady Ann or Evelyn thought she would burst from all the indescribable emotions churning in her bosom.\n\nOnly Lady Ann was privy to how much Evelyn both dreaded and longed to see Lord Davenport's tall, looming figure. There were moments when she thought she saw him in the streets, or at theatre or across a ballroom. Her heart would jump to her throat and she would forget to breath until the gentleman turned and reveal himself to be someone else entirely. She soon discovered there was a fair number of tall, handsome men with black hair and blue eyes residing in London. None were quite as handsome, or had his gravitas. \n\nWhy has he stayed away? He, along with the rest of London, must have learned of their betrothal by now. Would he not come to claim her? Then the memory of their last meeting would flood her thoughts and Evelyn would inevitably blush with mortification. Perhaps he still thought her wanton and unworthy of marriage. Somehow that thought was devastating to her.\n\nThat afternoon, Evelyn found Ann tucked into her enormous bed with most of her head and part of her face beneath a cap. She beckoned for Evelyn to take a chair set beside her bed and held the younger girl's hands in her own.\n\n\"It's these impossible headaches I often get,\" she explained to Evelyn in a faint voice. \"I shall be better by and by. Tell me, what troubles you child?\"\n\n\"You are so good to ask after me,\" Evelyn said. \"I could not have asked for a better friend in this trying time.\"\n\nLady Ann's thin pale lips curled into her customary warm smile. \"Oh my honey, I'm shan't have you accuse me of saintliness when all I've done is no more than what any friend would do! How are you, really?\"\n\n\"I feel as though time has stopped,\" Evelyn admitted. \"I find myself laughing and crying all at once. Nothing interests me. Everything is irritating. I'm uncertain whether to be glad or horrified. Lady Warwick looks to me for answers, but I have none to give her. I do not know Lord Davenport's mind. I barely know my own. It's maddeningly how I could long to see him again and yet dread the moment when he finally comes to claim me. I recoil whenever his name is brought up and feel physically ill. Yet I long to hear more. Why hasn't he come? I've never felt such torment that feels as though my insides are being ripped to shreds!!\"\n\nLady Ann smiled enigmatically and closed her eyes to hide her own thoughts at Evelyn's confession. \"There's another reason I sent for you today, aside from the desire to see your lovely face again. I have made inquiries as you have asked. It would appear that your Lord Davenport is not in London.\" \n\n\"Not in London?\" Evelyn exclaimed as her eyes flooded with inexplicable tears. \"Gone? What does this mean? Am I free then?\" \n\nLady Ann reached out and cupped Evelyn's chin to turn the girl's beautiful, tormented face towards her own. \"He left rather abruptly my sources tell me, but he is not gone in the way you're imagining. I don't know more than that, but it may be a --- a rather private matter.\"\n\nSeeing Evelyn's blank look, Ann chose her works carefully. She had only heard that Lord Davenport had been called away on an urgent matter concerning some interests of his in shipping. But with enough ingenuity, she could cast just enough doubt that Evelyn would be driven mad by it. \"I have no personal knowledge of your Lord Davenport's habits. What I do know of men of the peerage, it would not be so unusual if he had... personal matters to settle when his marriage bans are read, to prevent complications from arising later. Of course marriage itself would not keep him from having-- dalliances he'd rather keep secret. Every wife would be well served to be understanding of such things.\"\n\nThe message slowly sunk in from the way Evelyn's face suddenly became emotionless as she stared, blankly, unseeing, into the distance. For the first time Ann noticed the dark circles under Evelyn's slightly sunken eyes and her face was deathly pale. \n\nAnn pointed to a large leather bound volume on a table beside her. \"Will you read to me my child? Let's turn our minds to more pleasant matters.\" \n\nIt was dark out, and the rain had yet again turned into a misty drizzle when Lady Ann shut her eyes and her breathing became slow and steady. Evelyn got up and quietly left the room. \n\nAs soon as the latch in the door shut, and Evelyn's footfall faded away, Ann pounced, quickly and quietly off her bed. She ducked behind a window curtain to watch Evelyn exit the house and climb into her waiting carriage.\n\nEvelyn dreaded privacy of her carriage, where she knew her composure would crumble, and she would be confronted with all that she had learned from Ann.\n\nSuddenly, Evelyn was jolted from her misery by a terrifying shriek, a shrill neigh from the horses, as her carriage came to a jolting halt! The impact threw her forward onto her hands and knees! As she tried to crawl back up again, the carriage lurched forth again. She could feel the horses bucking and bolting against the carriage over their terrified cries. The entire box was rocking back and forth!\n\nWhat has happened?\n\nCould the horses have been simply spooked, but surely the coachman would reign them in and calm them.\n\nShe could not hear the coachman's voice!\n\nEvelyn tried once more to climb to her feet. She reached out to grab ahold of something, anything, to steady herself when the carriage door was ripped open, bringing forth a gust of cold night air and rain! \n\n\"Help--!' she tried to cry out. \n\nA large cold, wet hand clasped over her mouth and jerked her against a damp, foul smelling, rough figure. Male figure! She couldn't see him, but his foul breath made her eyes water more than even his pungent body odor as his huge, hulking figure forced her to the ground. And he was whispering, wet and lustfully: \"Pretty, pretty!\" in Evelyn's ear. \n\nEvelyn gasped and pushed hard against the immovable creature when his cold slithering tongue touched her and licked her from her chin to her temple. It was intolerable that this creature was violating her so! There was no time for her to register fear. No time to gather her wits. Just act! She bite down on the clammy, leathery hand! Hard! \n\nHer assailant cried out a high-pitched shrieking cry but he held her firmly to him. \n\n\"He means to kill me!\" she thought wildly and uttered a blood curling scream. She was lost! \n\nAt that moment, the carriage door flew open again and Evelyn once more felt the cold, wet air. One moment the large reeking body was pressing down on her, the next moment he gave an angry cry and tumbled backwards as he was yanked from her! \n\nIt seemed as though the world was in an uproar! Evelyn squinted her eyes to the blustery wet rain and saw the edge of a pair of worn and dirty boots kicking out as he was dragged out of the carriage door. The carriage lurched again and Evelyn let out a shriek as she pitched forward once more; face first into the opposite bench. Even with the leather padding she felt her forehead strike the hard frame beneath. Her mouth flooded with a minerally taste and wetness dribbled down her chin. Then pain in her mouth. She must have bitten the inside of her mouth.\n\nJust outside the carriage, there were shouts of anger and fear, and the dull thud of fist striking skin again and again.\n\nAnd then a terrifying guttural cry, followed by a terrible crashing sound!\n\nEvelyn blinked rapidly, stunned by the blow to her head. Her head felt heavy and her eyes refused to focus. \n\nGentler hands reached around her shoulders now. A familiar kind face, full of concern was speaking to her. \"Are you badly hurt?\"\n\nEvelyn smiled weakly at the familiar deep masculine voice. Where has she heard it before. Her head felt odd and her body refused to move. Everything seemed to whirl and sway around her. She was being lifted and carried. When Evelyn could see again she thought she saw the pale and somber face of Lord John Mallory, Marquis of Davenport hovering over her before it all turned to darkness.",
        "**********************************\n\nLady Ann was in a rage as she paced the floor of her bedchamber. Her night dress bellowing behind her; her long curls hung wildly around her shoulders.\n\n\"I was very specific with my instructions!\" she hissed violently over the bowed figure of Henry. He sat once more on the chaise, with this elbowed propped on his knees and his hands cupped over his face. Half of his hunched figure was cast in shadows in the dark chambers, but Ann could still see how blood-shot his eyes peeking through his fingers by the pale orange glow the candelabras.\n\n\"The man was to attack her once her carriage neared the park, away from people so no one could interfere.! Then YOU were suppose to be there to rescue her!\" \n\n\"The lout was carried away, he acted too quickly!\" Henry mumbled miserably into his palms. \"By the time I got there John and Philip Mallory were already on him. Why were they there?! I thought you said Davenport wasn't even in London!\"\n\n\"My sources had him traveling to his country seat. Oh the stupid lout!\" Ann almost shouted. \"He has only himself to blame for his sorry fate. Is he quite dead then?\"\n\n\"Quite. I thought to send his family a pound or two.\"\n\n\"No!\" she shouted. \"We shan't involve ourselves now or the deed will be traced back to us. Not when it was not our intent for anyone to be hurt. He acted outside my instructions, therefore his unfortunate end is his own doing. You did make clear to him that he to stop the carriage then receive a few blows from you?\"\n\nHenry jerked his head in a nod.\n\n\"Being struck by that cart was his own fault. He acted of his own accord. We are blameless in his death!\" \n\n\"If only he had waited--\" Henry moaned \"It could not be our fault that Davenport attacked the poor sod and forced the knave to run out into the path of a brick cart. It was so terrible to the whole content of the cart topple over and bury him like that. I thought I would be sick!\"\n\n\"Had he not, Davenport may very well have killed him anyway,\" Ann reasoned. \"Where is Evelyn now? Was she terribly hurt?\"\n\n\"I entered the fray as a crowd was gathering then slipped away again before I could be detected. I dared not stay longer to discover more.\"\n\nAnn reasoned to herself as she looked down at her trembling hands. \"No one was intended to be hurt. I wanted Henry to rescue her. Ingratiate you to her so that she falls in love with Henry perhaps. It would have bruised John Mallory's ego for his intended bride to love another man. Let him feel the jealousy he evoked in others. That was all! That was all!\"\n\nYet she uttered a silent prayer for God's forgiveness.\n\n\"I could not see as it was dark and they bore her away immediately. Should Davenport find out that our hands were behind this?\" Henry groaned miserably, almost to himself as his green eyes opened wide with terror. \"He might kill me. They say he fought through seven assassins, alone!\"\n\n\"It was two at the last telling,\" Lady Ann quipped humorlessly. \n\nThe dubious pair fell silent for a time, each lost deep in thought. Ann watched the candle flame dance, casting long dark shadows against the walls, that she imaged may soon turn into demon shapes to drag her down to hell. She shuddered at the thought!\n\n\"I shall visit with her!\" Ann declared, her voice trembling.\n\nHenry dragged his hands over his miserable, stubble face. \"What are you planning?\" he asked glumly. \n\n\"We leave it all to Fate... for now,\" she replied as she rang the bell for her maid.\n\n*************** Evelyn slept fitfully. She dreamt she was swimming a sea of murk. She was pushing her arms out but her arms refused to move. She tried to turn her head but her head won't budge. Yet she could hear voices speaking all around her, there voices barely above a whisper and indecipherable. \n\nThrough the murk she thought she saw a veiled feminine figure hovering over her, and realized it was a recurring memory from her childhood. Dark blue eyes, so like her own, peered down at her through thick, dark, netting so lovingly.\n\n\"Mother!\" Evelyn wanted to cry out, but her lips wouldn't move. Instead her heart weep when the figure faded into the murkiness again.\n\n************************************** When Evelyn woke up, the first thing she was a dull, throbbing pain weighing down her skull. She had to catch her breath for a moment to allow the pain to subside. Then she sat up---\n\n--in an enormous, unfamiliar bed! The sheets were made of the softest cotton and dark, rich silk damask hung from the canopied bed. She could see that this deep chamber, with vaulted ceilings was richly, tastefully furnished and smelled faintly of cider. Her clothes had been removed and she now wore a sleeping gown. Before Evelyn could register all of this, she caught sight of a rosy and pleasant faced woman rushing to her bedside.\n\n\"There, there!\" the strange woman said as she came to prop up the pillows behind Evelyn's back . \"Rest dear. There's no need to fret. You're safe here.\"\n\n\"Where is here?\" Evelyn asked, mildly curious but unafraid. The other woman, with light brown eyes and brown hair pulled into a chignon, seemed harmless enough. There was something familiar about her handsome nose and strong jaw line. Her clothes were rather plain, her manner unguarded, but she was no servant either. Evelyn thought she rather liked her hostess's strong ruddy face and kind brown eyes. \n\n\"I am Mrs. Charlotte Fields, but I insist you call me Charlotte as we are to be family. And you, Lady Evelyn, are among friends,\" came the reply. \"What a fright you must have received last night. I suppose one must always be careful in town, as dangers lurk anywhere. How fortunate that you weren't gravely injured.\"\n\nEvelyn raised a hand and touched her damp and clammy forehead and gingerly felt a small bump there. Memories of what had happened came back to her and Evelyn swallowed past a lump in her throat. Yes, it was most fortunate that she didn't suffer a greater injury. \n\n\"I am grateful for your kindness,\" she said to Charlotte, still looking worryingly at her. \"I must have word sent to my hosts, the Warwicks, lest they should worry--\" Just as Evelyn tried to sit up, all her energy sapped from her and she was forced to lie back again.\n\n\"You've had quite the shock,\" Charlotte said kindly as she helped Evelyn settle back into bed again. \"You must still be weak from the fever then. Do try to rest some more. I'll have a clear broth sent up.\"\n\nBefore Evelyn could open her lips to speak, a knock on the closed chamber door stopped her short. Charlotte rushed over to admit a tall, slender young gentleman, dressed in a dark brown coat and trousers. Charlotte nodded meaningfully to him and allowed him to enter. It was Philip Mallory and Evelyn realized then why Charlotte looked so familiar!\n\n\"Thank God, Lady Evelyn!' Philip said with deep concern and relief. \"I'm happy to see you rested and looking better this morning. My sister, Charlotte, is the most diligent nurse.\"\n\n\"Then you are my savior?\" Evelyn said. Her eyes clouded with tears of joy and relief as she held out her hand to him. How could she have ever thought this man unremarkable, Evelyn thought with a pang of guilt. \"How could I ever thank you--!\"\n\nPhilip flushed deeply and held up a hand to stop her. \"There's no need for thanks as I shall soon call you cousin.\"\n\n\"Then you've heard,\" Evelyn replied thickly. There were so many thoughts that crossed her mind that Evelyn felt quite tired from it all. She sank back against the plush pillows.\n\n\"Quite so! \" said Charlotte as she sat down on the bed by Evelyn and looked up at Philip. \"We were all so delighted to hear that Cousin John will at last be wed. I do wish we were meeting under better circumstances--\"\n\n\"And I must disabuse any notion you may have over my heroism,\" Philip said. \"You see it was John who heard your cries and, as Providence would have it, came to your rescue, not I.\" \n\n\"BOTH of you,\" Charlotte corrected gently as she smiled warmly at her brother. \"Thank God, John and Philip were both on hand for the daring rescue. It was fortuitous that they came upon you just as the lout entered your carriage and they were able to fight him off before he could carry out his ill intent!\"\n\n\"I beg your pardon, Lady Evelyn,' Philip said then when he recognized the look of bewilderment on Evelyn's face. \"We don't mean to tire you or distress you.\"\n\nEvelyn had touched the back of one hand to her flushed cheek wearily. \"I am grateful -- I do hope I haven't inconvenienced you,\" she replied weakly. \"It is most unusual to be meeting like this.\"\n\n\"No matter, I'm happy to meet you at last,\" Charlotte said with such a warm smile, Evelyn could not doubt her sincerity. \"You must stay here with us as this is to be your home soon enough. Let me care for you now as a dear sister as I love John no less than my own brother.\"\n\nSuddenly, realization dawned on Evelyn. \"Am I in Lord Davenport's residence then?\"\n\nCharlotte looked at her, puzzled. \"Good heavens, you must call him John now,\" she said with a bewildered chuckle. \"And yes, we are in his home. John has always been so kind to invite Philip and I and all our families to put up here when we are in town. My husband prefer to keep to our home in the country, but I cannot resist these visit during the Season.\" \n\nEvelyn attempted a smile at the kind woman but her lips quivered instead and she closed her eyes.\n\n\"It's all rather incredible,\" Charlotte said to her brother when they left Evelyn to rest. \"To learn of John's sudden betrothal through strangers. Then to have his bride attacked so. It's all quite extraordinary.\"\n\nPhilip signed, knitted his brows as he stuffed his hands into his pockets. \"I must say that the attack on Lady Evelyn's person was most troubling. More troubling still that the Warwick's would allow her, a young lady, to be out alone on a dark, rainy night.\"\n\n\"I think it quite right that John had her brought here,\" Charlotte agreed, showing her distress that she had kept hidden from Evelyn. \"I cannot think what might have happened had you two not been there. Will further inquires be made of the matter?\"\n\n\"John and I have sent men out to inquire about that beastly creature. It seems his tragic life had been marred by drink and unsavory company. There's no family to speak of, and we believe he acted alone and on impulse. Of course more would have been made of the matter, had the creature lived or if Evelyn had been--\" Philip couldn't bring himself to finish the sentence as his face flushed with emotion.\n\nCharlotte let out a sharp breath and crossed herself. \"Thank God she was saved from such a...an... Unspeakable fate. I cannot help but hold Countess Warwick accountable somehow.\"\n\n\"Many do,\" Philip replied grimly.\n\n\"What of John? Where had he been since rushing out after bringing her last night? He ought to be here to sit with her. She's to be his wife after all.\"\n\nPhilip's shoulders sagged under the weight of the thoughts that crossed his mind then. He kept his tone even and light for his sister's benefit when he finally did speak. \"He spent the night in his rooms at the club. I doubt he will want Lady Evelyn to return to the Warwick's now. In which case, he would not stay here while they remain unwed.\"\n\n\"Nonsense!\" Charlotte exclaimed. \"With all of us here, it could not be seen as improper. And now that she is here with us, we must see to the wedding! I've longed for the day to see Cousin John wed, you know! Ever since---\"\n\nPhilip grimaced and hurried said. \"It's best this way really. He'd rather not be here--\"\n\nCharlotte stuck her hands on her hips and squared up her shoulders at her larger, taller brother and gave him a stern look that brooked no arguments. \"Philip Mallory, I can sense when someone is hiding something from me. What is Cousin John up to? What's happened that you are keeping from me.\"\n\n\"It's all rather difficult to explain--\"\n\n\"Do try.\"\n\nPhilip was still hesitant. \"Well, you know John. He hates to be forced to do anything. It's all--- well, you can image a grown man being told by his own father who he ought to marry and then have her just be shoved before him--\"\n\n\"Heavens! How could he possibly be oppose? She's an angel! And it's his own fault for waiting as long as he had. He will not back out now? Not when I've already put forth all the planning!\"\n\n\"Reluctant is not the same as being opposed,\" Philip assured her. \"As it were, he learned of his own engagement at the same time as I did, if you could believe that. Pretty much in the same matter as you had. It all rather seemed like idle gossip at first until a confirmation letter came from his father.\"\n\nCharlotte shook her head slowly in disbelief. \"I had thought it was a love match. To see her beauty and grace, it's hard to think otherwise. Such a regal mien in light of all she had suffered.\"\n\n\"You are right that Evelyn has many fine qualities to be admired,\" Philip agreed as he looked longingly past his sister towards Evelyn's chamber door. \"I dare say had Uncle secured Athena for John as his bride, John wouldn't like her any better,\" he quipped, though humorlessly\n\n\"This war between father and son surely must end!\" Charlotte said with a click of her tongue. \"John can be so stubborn! After all these years. Clara is long gone--\"\n\nAt the mention of that forbidden name, Philip grimaced and nervously glanced around him. Charlotte puffed out her cheeks impatiently at him and went on. \"Well, surely he could find forgiveness in his heart by now. This is a new day. New beginnings. A man without a wife is but half a man. She will be good for him if he will let her be. You must help him, Philip. Help him find happiness with her. If you give her your friendship and approval, I know whatever reluctance he may have will disappear. There's no one he trusts more than you.\"\n\n\"I will do all that I can, \" Philip promised, gravely and sincerely.\n\n************************************** The small bump on Evelyn quickly faded. Even the memory of her attack soon seemed nothing more than a bad dream. At Philip and Charlotte's insistence, Evelyn remained at Lord Davenport's magnificent home. Martha, along with the rest of her things at the Warwick's were sent for. \n\nLady Warwick came to see her once, and spent an afternoon full of tearful regrets. Soon after Lady Warwick disappeared from London after one too many cold glares and whispers at her expense. Even her more ardent friends, who had overlooked her many faux pas, couldn't help echo the grumblings over her neglectful guardianship. Why had she permitted Evelyn, a young woman, to venture out alone at night attended by only an elderly coachman? Evelyn found herself coming to the Lady Warwick ' defense but the strict rules of society could not be ignored without repercussion. \n\nLife under Lord Davenport's roof was quite pleasant and peaceful. Charlotte was eager to see to Evelyn's every comfort. She took extra care to show Evelyn every part of the house and made it quite clear she already saw Evelyn as it's mistress. Charlotte never failed to open every sentence with \"When this is all yours.\"\n\nPhilip was sweet to her, a bit shy and aloof at times. He too was on hand to fulfill any request Evelyn made, which often was simply to tell her more about her future husband.\n\nLady Ann came to visit often and Evelyn was sorry to detect a distinct chill there. Luckily neither women were openly hostile. Charlotte never spoke out against Lady Ann, and Ann seemed perfectly comfortable to ignore her too. Evelyn put it to their difference to the natural competitiveness of women and thought little of it. \n\nBeing in his house, Evelyn's mind was even more occupied by its missing master. How odd to be in his home, admiring his things and eating at his table without a glimpse or a word from him. Philip apologized profusely and assured Evelyn that business and government matters kept him away. He assured her that Lord Davenport, as Evelyn insisted on calling him much to Charlotte's chagrin, asked after her health constantly. \n\nEvelyn allowed Charlotte to take her through each room and recite to her the history of every portrait and painting they passed. The great mansion was solidly built and, tastefully furnished and decorated throughout with generations of Mallory family mementos throughout. As hard as Evelyn tried she could not see Lord Davenport's imprints on any part of the house. She imaged that his own effects lies behind the forebodingly closed doors of his study or behind the firmly shut double door to his bedchamber at the end of the long corridor opposite her own rooms. She couldn't bring herself to breach those barriers to his privacy as great as temptation tugged on her. \n\nMany times Evelyn found herself pausing as she headed to bed, just standing and staring at the dark, heavy doors to his bed chambers. Was he there now? Had he returned without her notice? Was he standing on the other side of those doors? Did he know she was there, and was even now staring at it as she was, like a great beast that sense the presence of his prey? Suddenly the footfall of an approaching chambermaid would startle Evelyn and send her rushing back to her own rooms her heart pounding loudly in her ears. \n\nSleep was rather difficult for Evelyn, under HIS roof, in his home. She spent many restless nights tossing and turning fitfully. All her senses were alert to every creak, every pop in the dead of night. Evelyn lost track of how many nights she had spent thusly, before exhaustion claimed her. \n\nAs she hovered between sleep and consciousness one evening, when she could no longer keep her own weariness at bay, a tall, shadowy, masculine figure quietly slipped into her room. Somehow she knew it was him. She heard him clear his throat and exhale deeply in that velvety baritone voice. His presence loomed large and his clean, earthy, masculine scent permeated the room. \n\nThe minutes ticked by. \n\nShe could hear an increase in the tempo of his breathing when he finally approached her bed. The bed beside her dipped under his weight. \n\nAn eternity passed. \n\nFinally a gentle hand tenderly caressed the curve of her face, before traveling lower to rest on a supple breast. His fingers gripped her. Slowly, so achingly slowly, kneading her flesh. \n\nWas she awake now or was she falling further and further into a murky dream state where she couldn't move a muscle or even utter a word? \n\nShe felt the air change when he rose over her. The bed dipped again when he swung his legs over hers to straddle her inert body. He brought up his other hand and pushed through the neckline of her nightgown till his large warm hands cupped her naked breasts. Evelyn's breath caught in her throat and she moaned with the rhythm of his avid ministration. Her skin tingled and screamed in delicious agony, yet she couldn't move at all. \n\nHis heavy weight sank down over her when his face lowered to hers and soft lips kissed hers... so tenderly. She heard him sigh again as his stubble covered chin nuzzled against her. The kiss lingered, then trailed down her chin to her neck. He was tracing the lines of her neck with the tip of his tongue. Softly. So achingly softly. \n\nThe bed beneath her liquefied and she was sinking into the thick, creamy murkiness as he worked her breasts. His mouth found its way between her orbs and licked her hardened tips. His hands were so firm. So hard. His tongue so achingly soft and gentle. He had ignited a flame within her that sent fire and chills coursing through her veins. She moaned as the indescribably feeling washed over her, urging her onward towards... she knows not what! She didn't want to believe that this was real, and yet she knew she would cry had she open her eyes to find that it was all a dream. \n\n\"Oh!\" she heard herself moan in a husky, desperate voice, barely above a whisper. ",
        "\"Hush,\" he whispered against a hardened nipple before taking a plump mound into his mouth and sucked, hard!\n\nEvelyn moaned, in anguish and in pleasure. It was hard to distinguish the feelings. Hardness. Softness. Pain. Pleasure. It all became one and the same. His mouth was drawing a tingling sensation from her that stole her sanity. She moaned again. It was more of a whimpering cry. She wanted him to stop! She needed him to continue! \n\nHe sucked his way to the tip of her nipple and released it with a flick. Evelyn moaned again to be so suddenly abandoned. He returned to kissing her again, hard! His mouth and his hands were all over her! She barely felt her gown being raised over her naked hips. He kissed the underside of her perky breast and worked his way down, lower, lower. \n\nEvelyn's back arched! Mouth wide open but she couldn't utter a sound! She had forgotten how to breathe! \n\nHis mouth! \n\nHis tongue!.....\n\nHer eyes remained squeezed firmly shut. She could feel, taste nothing but the mounting sensations he was forcing from her as his tongue licked and plundered her in tune to the rocking of his body against her thighs. \n\nHe held her firmly against the bed as he rocked back a bit, then gently licked her again. Once. Twice. Then he captured her in his mouth, hard! She was falling! She was soaring! Tears ran down the corners of her eyes from the tides of pleasure being ripped from her.\n\nIt was too much -- this flood of sensations coursing through her that reduced her to a gasping, thrashing creature, mindless of anything but what he was doing to her! Without her even realizing she was kicking her long, slender legs out, but he held her thighs firmly apart against his hot, open mouth. There was little to do but to surrender to him.\n\n\"My lord! Oh my Lord Davenport!\" she cried with her release.\n\nWhen reason returned, and her eyes finally snap open, she knew she was alone again. Yet his faint heady scent, mingled with her own musk hung heavy in the air. It was as though her entire universe was cooling after a raging fire, in tune with the rapid slowing of her own thundering heart beat. The embers still smoldered, but it was all growing cold in the darkness. \n\nEvelyn cried softly, soundlessly to be so abandoned. \n\nHis tongue had left a wet trail over her body. She shivered as it cooled and and dried on her feverish skin. She rolled over on her side and pulled a crumpled sheet over her shivering, exhausted body. \n\nSomewhere a clock chimed, followed by an echo of other dings through the sleeping house. \n\nWide awake now, Evelyn gingerly reached down to where her gown had bunched around her bare hips to where that place between her legs. Her flesh felt hot, tender, swollen, and slick with a thick wetness. \n\nShe had never felt so much thick wetness there before!\n\n\"It could not have been a dream,\" she whispered through her tears against the sweat-drenched sheets. \n\nThe vast, dark corridors yawned before Evelyn as she padded, barefoot from her room. She wore nothing but her night dress, still slightly damp and a long shawl over her shoulders to keep her from the chilly night air. The only sound she heard was the small rhythmic beating of her heart and the occasional pop in the skeletons of the silent house. \n\nEveryone was sleeping.\n\nExcept a small glow emanated from the stairwell. It came from the landing just below. \n\n\"Turn back!\" a voice said urgently in Evelyn's mind. \n\nShe couldn't turn back.\n\nHer legs moved of their own accord towards the expansive carved stairwell where a monstrously large chandelier hung. The tiny crystals sparked from the light below, like tiny eyes watching her. She swallowed around the tightness in her throat and followed the light to the slightly ajar door to the study that had never been opened before.. \n\n\"Steady your foolish heart,\" Evelyn said to herself as she pressed a hand over her chest as she approached. Part of her hoped that the room would be empty, that a servant had careless left a candle burning there. But the tingling between her thighs betrayed her desire to find HIM there. Would he welcome her, after leaving her so abruptly in her bed? \n\nEvelyn gave the door a gentle shove, and thanked the well-oiled hinges for not betraying her presence just yet. \n\nThe first thing she saw was a great, dark paneled room, much like the rest of the house, with frescoes decorating the vaulted ceilings that she could barely make out in the dimness. A small fire burned in the great stone fireplace, illuminating, with the help of several candlesticks, an enormous carved wooden desk covered with leather bound ledgers and books and piles of papers. She barely took in a large free standing globe and the walls of books before she saw him. \n\nLord Davenport was casually sprawled out in a high-backed chair behind the desk. He was reading some documents while nibbling on the end of a quill. He had no jacket, his white shirt was opened at the neck and his sleeves carelessly pushed up to his elbows, propped on the armrests. Straight black hair slightly tousled over furrowed brow deep in concentration. Evelyn had never seen him in such a state of undress. Yet he never looked more beautiful, or more dangerous, to her than at that moment. \n\nHis chiseled face was partially hidden by the documents he held before him, but she could see his dark scowl, in deep concentration. He appeared carved out of stone, so immobile he appeared, except for when his lips curved over the end of the quill. Those lips, those same lips that had sent her towards the heavens mere hours ago.\n\nEvelyn stood rooted at the doorway, unsure if she ought to disturb him, but she could not turn back. Just the sight of him was enough to turn her insides to mush. \n\n\"Come in Evelyn,\" he said finally, without looking up. His deep voice, cadenced with velvety timbres, cut through the silence and reverberated through the hollow chamber like a clap of thunder. Evelyn's heart leap to her throat and her own heartbeat pounded loudly in her ears. \n\nEvelyn took in his masculine features and noble mien as she envisioned him crawling down her body once more to....\n\nHe flicked his gaze up then and fixed his deep penetrating stare upon her. His light eyes appear colorless in orange candle light, but they lost none of their effect. She moved towards him as though not of her own accord.\n\n\"Sit,\" he said tonelessly.\n\nEvelyn followed his glance towards a chair across from the desk and she obediently went to it and sank down into the velvety cushion. He had returned his attention back to the document he was still holding before him. \n\nThe minutes ticked away as Evelyn sat, dumbly, waiting on him as he pursued the document. He seemed to have forgotten her presence all together. \n\n\"Are you well?\" he asked after a while, making her jump again at the sound of his voice. \n\n\"I've been looked after quite well by both Charlotte and Philip,\" she replied huskily. \n\n\"I asked how you are,\" he replied, tonelessly. \"Not how well you are cared for. I know my cousins would not falter in their hospitality.\"\n\n\"I am well,\" she answered with a deep blush. \"I must thank you for seeing to my care-- Truly, for saving my life...\"\n\n\"A man cannot be called such if he doesn't protect what's his,\" he replied curtly, tossing the documents aside. He formed a steeple with his fingers beneath his chin and studied her with an indiscernible glare. \n\nEvelyn felt like a child, her face burned hotly, as she drew her shawl closer around her shoulders. She could barely meet his gaze. She was suddenly at a loss as to her purpose there. Did she want a mere reassurance that what occurred in her bedchamber was not just a dream? Did she want some sort of acknowledgement from him? To what end? \n\n\"You look well,\" he said in his velvety baritone with a slight huskiness that wasn't there before. \"I am surprised that you are not asleep this late.\"\n\n\"I couldn't--\" she croaked, then cleared her throat to try again, \"I couldn't sleep, my lord. It must not be so late as you have not yet gone to bed yourself.\" \n\nHis thick dark lashes lowered and then flicked up again to glower at her beneath his heavy dark brows. \"Your wifely concern touches me,\" he said with a trace of sarcasm. \"Which brings up some interesting recent revelations does it not?\" \n\n\"My lord?\" She hadn't expected such... coldness from him. She wasn't sure what she had expected. Just not this. Perhaps what passed in her bed, hard all been a dream.\n\nHis eyes narrowed slightly as he curled his lips in a slight, bitter smile. \"Much has changed between us in a short period of time, has it not? How could I have imaged that fateful night I first laid eyes on you that I would have you here now, tonight.\"\n\nHer mouth dried and words escaped her as he rose to his feet then and rounded the desk to stand two paces from her. She might have gotten up and ran from the room had he approached her further, but instead he leaned back against the edge of the desk and folded his arms over his chest and crossed his long legs, clad in dark trousers and tucked into riding boots, at the ankles. Suddenly she wasn't sure where to look or what to do with her hands. \n\n\"I had a rather unexpected but quite enlightening conversation with Prince Edward recently,\" he continued smoothly when she failed to utter a sound.\n\n\"You've -- you've met with Edward?\" she inquired, wincing at her own obtuse question. \n\n\"A most enlightening meeting. There's much for me to uncover in my future wife it seems.\"\n\n\"You are mistake in your assumptions about Edward and I,\" she said quickly. Evelyn rose to her feet and ducked behind the chair she had just vacated. \"I must tell you before you jump to more assumptions.\"\n\n\"That was quickly made clear to me,\" he continued wryly, with a raised brow, still leaning against the desk, still studying her with mild amusement. \"He had much to share about the one who he calls his dear, sweet sister. It left me to wonder why you have not corrected my assumptions about you and he before.\"\n\nEvelyn could not bring herself to meet his icy blue stare. She trembled like a leaf under its intensity. \"I -- I hadn't corrected you--\"\n\n\"Yes, Evelyn?\" he inquired.\n\n\"I deemed it unworthy of a response,\" she almost whispered as she looked down at her clasped hands. \"It was ludicrous for you to assume such things and you had no right to question me-- at the time.\" \n\n\"So you bore my abuses instead?\" he asked softly. \"I believe I called you a demimonde. Did that not offend you?\"\n\n\"Of course!\" She shot to her feet then, but couldn't move further beyond that.\n\n\"Were you not outraged to have your virtue questioned? To have me handle you as I did that night in your carriage?\"\n\n\"Certainly I was offended!\" she protested, raising her eyes to his. \"You had no right--\"\n\nHe had crossed the distance between them and loomed but a hair's breadth from her. His familiar earthy, masculine scent invaded her senses and she drew in a shaky breath as her dark lashes fluttered. It was a struggle to keep her sanity with him so close and not remember how he had touched her, kissed her.... but, she might keep her composure and her modesty if she could just avoid his gaze, avoid looking at his open shirt. Her core started to burn hotly of its own accord.\n\n\"Did you secretly like it, Evelyn?\" he purred seductively. His face dipped down so his lips were close to her ear. \"Did you enjoy having my hands on you? Is that why you are here now?\"\n\nEvelyn fixed her unsteady gaze on the weaving patterns of his shirt as she breathed in his intoxicating scent. \n\n\"Do you want me to touch you again?\" he asked softly with a quiver in his own voice. \"Now?\"\n\nShe shuddered and squeezed her eyes shut, waiting, anticipating his touch of his long fingers on her burning skin. His tongue, when he flattened it against her and drew patterns...\n\n\"I have every right now, don't I?\" he said, his voice deep and husky as he deliberately raked his gaze over her body, so completely exposed beneath the night dress. \" I have every right to kiss those plush lips, to touch those supple breasts and everything else beneath this dress. THIS all belongs... to me!\"\n\nHe still hasn't touched her but the vivid memory of how he had stroked her, liquified her.\n\n\"For that privilege I'll be awarded immense riches. In less than a fortnight I will have it, and you! All of you and your -- considerable wealth, His Highness tells me. How fortunate am I? Should I simply enjoy my rewards, and not bother to wonder why I've been singled out for such fortunes? Why out of all His eligible peerage, His Majesty chose to give bestow His secret, bastard, daughter on me?\"\n\nEvelyn felt the wind knocked from her. She quickly recoiled from him and he stepped away from her too, his face a mask of indiscernible coldness.\n\n\"Sit down!\" he commanded.\n\nHer legs trembled as she sank down in the chair once more. \n\n\"So that's the mystery of Lady Evelyn?\" he was saying. \n\n\"I have no answer for you!\" she replied miserably as she willed herself not to cry. \"I cannot say why you were selected for me or I for you. The burden of my birth will not be a burden to you.\"\n\n\"You know that's of no consequence!\" he retorted sharply, suddenly alive with anger. \"Legitimacy of a king's child only matters in terms of succession. That has no bearing on you and certainly no bearing on your place in Society. So why the ruse? This elaborately concocted story involving of all people-- the Warwick's?\"\n\nEvelyn bit her lower lip and looked away. \"The Earl has faithfully served His Majesty for many years and one of very few who knows my secret.\"\n\n\"The Earl is a breathing corpse and his wife is a fool!\"\n\n\"Edward felt that I would be safe there,\" she replied woodenly.\n\nLord Davenport took a deep breath to maintain his composure. \"That's proven false when she allowed you, a maiden, to be out alone, at night! Do not forget, I'm intimately acquainted with just how well you've been looked after!\"\n\nHe took another breath and raised the book to rest his chin on the edge. \"Unless of course you had staged your own assault--\"\n\nEvelyn stood up again. \"I cannot think what I have done to make you think so little of me! To be capable of the deceit--\"\n\n\"Stay where you are madam!\" he commanded. She dropped back down onto the chair and kept her gaze fixed stubbornly away from him. \n\n\"Oh my darling, every one of your sex is capable of deceiving,\" he taunted her. \"I've bore witness to every conceivable game of deception and duplicity. Where women lack in physical strength she makes up for with cunning. So yes I think you perfectly capable of orchestrating that little farce for me to find when I refused you my attentions when our betrothal,\" he spat out the word, \"was so conveniently announced to the world. And here we are\"\n\n\"My dowry ought to be a salve for that inconvenience,\" Evelyn retorted.\n\n\"It certainly is,\" he smirked. \"What man wouldn't be soothed by such an attractive package.\"\n\nEvelyn sighed deeply with a heavy heart as she rose gracefully once more to her feet. She suddenly appeared weary and far older than her eighteen years. \"You speak in riddles my lord. I gather from the way you refuse to be direct that you think my being married to you is a peace offering for some previous slight. You might not tell me what that may be and I won't ask. We women are nothing more than pawns in the elaborate game men play after all.\"\n\nLord Davenport's jaw clenched tightly as he glowered down at her. \"Do you think that,\" he said flatly, rhetorically. \"An astute observer are you?\"\n\nThat roused Evelyn's ire. \"You don't know me at all! Yet you've made up your mind not to like me. What have I done that you toy with me so? While I remain grateful to you in the depth of my heart for coming to my rescue, even when you think it was... my manipulation. I will break this engagement and cause you no more distress. I will leave here in the morning and trouble you no more. Good evening!\"\n\nRather than refuting her, Davenport actually dropped his head, chastised. Then he peered up at her and watched her perfect lips form and shape every word. Suddenly he felt unsure of himself. It was a foreign feeling that this young woman, newly come of age, seemed to so easily wretch from him. \n\nEvelyn had turned to leave the room once more, but she was not quick enough. In two long strides he overtook her. He grabbed her shoulders and yanked her against his body. He couldn't let her go! \n\n\"My lord!\" she managed to gasp as he held her firmly to him with one hand and grabbed her chin with the other. \n\n\"It is done,\" he said heatedly. His breath blew hotly, tinged with whiskey and tobacco, down on her face. \"You and I will be wed before God and witnesses two days hence. There's no escape from fate. Not for you. Not for me. Though, you may come to rue the day you've ever set eyes on me!\"\n\nEnd of Chapter 4 "
    ],
    "authorname": "wws_wws",
    "tags": [
        "reluctance",
        "historical",
        "oral",
        "suspense",
        "romance",
        "danger",
        "sleeping",
        "cunnilingus",
        "drama"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/duplicity-ch-04-1"
}