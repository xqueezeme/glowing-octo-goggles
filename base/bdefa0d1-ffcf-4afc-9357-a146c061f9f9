{
    "title": "All Under Control Ch. 01",
    "pages": [
        "Mina's fingers encircled the head of my engorged cock as she directed my tip to her sopping pussy. Her other hand was busy with her own pleasure, her fingers teasing her swollen clit. I gazed into her gorgeous grey-blue eyes and waited at her entrance.\n\n\"Are you ready for me now?\" I asked.\n\nShe nodded, and I slipped into her pussy, the skin of my manhood feeling the exquisite friction of her tight hole. I was already on edge from her hands working me and had to concentrate to keep control as I buried myself into her.\n\n\"Go as hard as you want,\" Mina said, her hands now on my buttocks, pulling me deeper, \"Don't hold back.\"\n\nI began to thrust into her as she lay with her legs spread wide on the bed. Mina's ample breasts began to wobble as I completed each forceful stroke. I craned my neck to take a rock-hard nipple into my mouth, sucking and teasing it even as I buried myself to the hilt inside her. I could feel her contract around me, the root of my shaft grazing her clit as I completed my stroke.\n\nMina began to hiss through clenched teeth and I knew her own climax was close.\n\n\"Tell me when you're gonna cum,\" she breathed.\n\nThe way she said it, and the way her pussy walls suddenly gripped me, triggered something in me and I began to drive into her with an animal passion. My mouth moved to her other nipple, drawing it in and sucking it until it was swollen and hard. Mina began to groan and I felt her nails dig into my buttocks.\n\n\"Uh, yeah,\" she panted, \"That's it.\"\n\nI was so close. Her hand came up to my neck.\n\n\"You there, babe?\" she asked.\n\n\"Unnh huh,\" I replied, my mouth still working on her nipple.\n\n\"Roll me,\" she said, \"I need to go on top.\"\n\nI broke away from her breasts for a moment, to stare into her eyes. I could see the need in there, how close she was herself. I slid an arm under her and rolled us over so she could straddle me.\n\nMina took up position over my hips and began to grind herself down onto me. I raised my hips in reply, my balls slapping against her perineum. Her face contorted in ecstasy and she began to make a wild keening noise. My cock twitched involuntarily.\n\nShe slipped off me, sliding down the bed. Shocked by the sudden exit from her glorious pussy while teetering on the edge of climax, I began to sit up. Mina's head came down, engulfing my cock in her mouth, beginning to move up and down with powerful strokes, applying hard suction. It took three strokes and I came, erupting into her mouth and shooting my load into the back of her throat. She continued to pump and suck, until I was drained completely. I watched in amazement, her pretty face distended around my member, her light eyes never leaving my face, her dark hair in a delectable mess of disarray, strands sticking to her sweaty cheeks. She swallowed.\n\nWhen I was done, she slithered back up my body, laying close against my side, and wrapped her limbs around me. I could feel her pussy, still hot and wet, pressed firmly against my hip.\n\nMy face must have betrayed my confusion.\n\nMina looked at me. \"What's the matter?\" she asked, \"Didn't you enjoy that?\"\n\nI nodded, dumbly. \"It was out of this world,\" I said, \"But what about you?\"\n\n\"What about me?\" she said, snuggling her face into my neck. I was aware that our bodies were now tightly entwined from head to toe. I could feel her heat against me. I knew that she was still burning with desire. I moved my hand down to touch her clit but she swatted me away.\n\n\"There's no need,\" she said.\n\n\"Don't you want to...?\"\n\n\"Very much,\" she sighed, \"But I'm not going too.\"\n\nI felt her lips kiss the inside of my neck gently.\n\n\"I just want to lie here with you,\" she breathed, \"Go to sleep.\"\n\n---\n\nThe next morning, I broached the subject while we ate breakfast.\n\n\"Did you sleep okay last night?\"\n\nMina munched her toast and nodded, but offered no reply.\n\n\"Did it take you a while to drop off?\" I continued.\n\n\"A bit,\" she replied.\n\n\"You weren't like, uh, laying there?\"\n\nMina put the toast down and fixed me with a look, her elbows on the table and her hands cupping her face. She slept in an oversized t-shirt, baggy around her shoulders, but I knew it hid her full breasts and hourglass figure. The hem of the t-shirt stopped high on her thigh, revealing golden skin and sleek, shapely legs.\n\n\"You mean was I clinging to you after you went to sleep trying not to grind my needy crotch against your skin?\" she asked, \"Oh, yes, for about an hour.\"\n\n\"Why didn't you wake me up? I could have solved that problem for you,\" I said, smiling.\n\n\"I didn't want you to.\"\n\n\"I don't understand.\"\n\nMina shrugged and picked up her toast again. She bit off a mouthful and chewed, but didn't offer any further insight.\n\nI picked up my empty plate and put it in the dishwasher. Turning around, I took a good look at my girlfriend from behind. The short t-shirt was gathered under the tantalising curve of her pert bottom. I moved behind her and let my palm glide down the soft, worn cotton until I cupped her bum cheek in one hand.\n\n\"How're you feeling now?\" I asked, \"Horny?\"\n\nMina popped the last of the toast into her mouth and chewed. I stroked her bottom gently.\n\n\"Why don't you find out?\" she said at last, and she spread her legs.\n\nMy hand slipped under the cotton, fingers tracing over the top of her thigh and up the inside of her leg. She leaned back against me. My fingers found the top of her leg and the warmth of her slit: she was very wet. My fingertip grazed her lips until it came to rest lightly on her swollen clit.\n\n\"I'd say you're very horny,\" I said, \"Would you like me to do something about that?\"\n\nI felt my cock stir.\n\n\"Very much,\" she replied, \"But I'm not going to.\"\n\nMina shuffled off the stool and out of my embrace. She put her plate in the dishwasher and made her way to the bathroom. After a few moments, I heard the shower start.\n\nI was still confused quarter of an hour later, when Mina was sitting in front of me in a t-shirt and jeans ready to get on with the day. I felt I had to broach the subject again.\n\n\"Enjoy your shower?\" I asked.\n\nMina looked at me appraisingly, and replied, \"Do you mean, did I play with myself in the shower?\"\n\nI nodded.\n\n\"Yes,\" she replied.\n\n\"Why didn't you let me...?\"\n\n\"I just played,\" she interjected, \"I didn't let myself go any further.\"\n\n\"So, you're still horny?\"\n\n\"Oh babe, I'm gagging for it.\"\n\n\"But you don't want to...?\"\n\n\"Yes, very. But no, I'm not going to.\"\n\nI held up my hands in confusion, \"I really don't get it.\"\n\nMina took my hands in hers.\n\n\"Last night,\" she began, \"When you went to sleep, and I could still taste you in my mouth, I pretended that...,\" Mina blushed.\n\nI frowned. This was obviously something profound for her.\n\n\"I imagined that you'd told me to blow you, but that I hadn't done a good enough job.\"\n\n\"You had,\" I said, \"You really had earned a-\"\n\nShe shushed me. \"I imagined that my punishment was that I would need to wait until you allowed me to cum.\"\n\nI must have reacted to that, because she gave my hands a squeeze and rushed on with her explanation.\n\n\"And in the shower, I imagined that you'd fingered me at breakfast to put me on edge because you wanted to make sure the punishment was continuing.\"\n\nI finally found my voice. \"And you're still being punished? Right now?\"\n\nHer face became very serious and she moistened her lips. I could see that we had started conversation Mina had been wanting to have for a long time. She was revealing a deep secret to me.\n\nLooking at her beautiful face, her light eyes watching me intently, I made a decision. She wanted to play a game, so we would play. I reached out and took her chin in my hand, stepping closer to her. I spread the fingers of my other hand wide and pressed it over her crotch.\n\n\"Yes,\" I said, \"I did think you could have tried harder last night.\"\n\nHer lovely eyes went wide.\n\n\"I want you to take me into your mouth again, and if you've improved, I might let you cum,\" I said.\n\nHer hands went automatically to my waist. I caught her by the wrists.\n\n\"Not now,\" I said, \"I'm still good from last night. You'll have to wait for your chance.\"\n\nI leaned close and kissed her. She responded with passion, her tongue slipping into my mouth. I broke off the kiss abruptly.\n\n\"I imagine it's going to be hard on you, waiting,\" I said.\n\nShe nodded, her face very serious as if receiving an unfavourable appraisal.\n\n\"You should have thought about that,\" I said, \"In fact, you'll have all day to think about how you can improve.\"\n\n\"Yes,\" she said, then looked down. \"I'm sorry, I'll earn it, I promise.\"\n\n---\n\nAs it happened, Mina didn't live up to my expectations that night, and I left her hot and frustrated, nuzzling my neck and grinding herself against my thigh.\n\n\"Careful there,\" I chided. \"If you carry on like that I might require you back down at the business end in a few minutes.\"\n\nI pointed down at my softening cock, resting on my belly and still slick with a mixture of her pussy juices, my cum and her saliva.\n\nMina said nothing, but I could see her eyes were hostile. I had brought her right up to the edge and held her there before withdrawing and asking her to finish the job orally. She ground her pussy against my thigh forcefully.\n\n\"Are you trying to get yourself off by humping my leg?\" I asked.\n\nI was enjoying the game. I took her chin in my hand, forcing her to make eye contact. My smile faded and I became curious.\n\n\"If you carry on like that, do you think you would be able to orgasm?\"\n\n\"Yes,\" she hissed, still grinding.\n\n\"Then I need to let you know your options,\" I replied. \"If you cum, then that's going to be the only way you cum from now on, hip fucking me.\"\n\nMina's eyes narrowed.\n\n\"Or the alternative is you roll onto your back and go to sleep. I'll probably need to fuck you in the next day or two and that gives you another chance to earn an orgasm.\"\n\nI could see anger in her eyes, but also an unyielding need.\n\nAfter a few long moments, Mina shook her face free of my grip and rolled onto her back. She forced her hands down by her sides and closed her eyes, still clearly unhappy. I rested a hand on the flat of her stomach, feeling her silky soft skin, aware of the neatly trimmed square of pubic hair just beyond the reach of my fingers. I contemplated shifting my hand down slightly until I could run my fingers through the tight curls of her hair. Too cruel.\n\nI watched her breathing begin to slow and felt the pent-up energy begin to seep from her body. We lay in silence for a long time.\n\n\"Mina,\" I said eventually, \"I just want you to know something.\"\n\nShe didn't respond.\n\n\"If you're really mad with me, we can stop this. I like to see you frustrated,\" I admitted, finally also admitting it to myself, \"But if it gets too much....\"\n\n\"Cam,\" she breathed, \"I'm glad that you like it.\"\n\n\"I'm just not sure I totally get it,\" I admitted.\n\nMina was quiet again for a while.\n\n\"It's like this,\" she continued at last, \"Not being allowed is really hard on me. Being teased to the edge and then being denied is a lot harder.\"\n\n\"I'm sorry,\" I said, \"I won't tease-\"\n\n\"No,\" she interrupted, \"That makes it better.\"\n\n\"It makes you mad,\" I countered.\n\n\"Very. But also really horny. Look, how about this. Whatever I say, or whatever I do, don't stop.\"\n\n\"You mean I ignore what you're saying to me? What if you really don't want to be teased?\"\n\n\"Cam,\" she said, turning to me so she could show me how serious she was, \"I want you to make me so mad that I'm calling you all sorts of names, and you just tell me that the more I curse and swear and show bad behaviour, the longer it will be before I get to cum.\"\n\nShe put her hand on mine gently.\n\n\"If I really can't take any more, I'll look you in the eyes and say that I want release.\"\n\n\"Release?\"\n\n\"Yes.\"\n\n\"So when should I actually allow you to cum?\"\n\nMina nuzzled up next to me and kissed me.\n\n\"Whenever you decide. You're in charge now.\"\n\n---\n\nI held up my end of the arrangement. Mina held up hers, confessing to teasing herself in the shower until she was hot and slippery. As a penalty I told her to please me orally while also edging herself. To my surprise, she immediately got down on her knees between my legs and sucked me off. She moaned and gasped around my rigid member while bringing herself to the brink with her fingers. I exploded into her mouth and afterwards she carefully licked me clean. I stood over her as she swallowed the last of my juices, noting her puffy slit.\n\n\"That must be agony,\" I remarked, casually.\n\n\"More than you know,\" she replied.\n\nAn evil thought entered my head.\n\n\"I expect that you really need release about now.\"\n\n\"Yes,\" she confessed.\n\n\"Are you asking to cum, or do you want release?\" I clarified.\n\nShe looked up at me.\n\n\"I'm asking to cum,\" she said.\n\nI made a disapproving face.\n\n\"Oh babe.\"\n\n\"What?\" she asked, suddenly anxious.\n\n\"That's going to cost you,\" I replied, \"Trying to influence the outcome.\"\n\n\"I don't get it,\" Mina said, confused.\n\n\"That's right,\" I replied, \"You won't get it. I was going to let you orgasm tonight, but if think that giving me a blow job and then asking for it is going to sway the decision, you're right. Let's add another day.\"\n\nMina growled. \"I just went down on my knees and even swallowed for you, and I get another day? How's that fair?\"\n\nI crouched down so that our eyes were level.\n\n\"Ah Mina,\" I said, evenly, \"That little outburst just cost you another day.\"\n\nI brushed a loose strand of her hair behind her ear. I could tell that she was fuming.\n\n\"You started this game,\" I reminded her, \"And now you're going to need to abide by the rules.\"\n\n\"I didn't know that was a rule,\" she countered.\n\n\"The rules are that I make up the rules. Or,\" I stroked her cheek, \"You're going to be reduced to humping my thigh for the foreseeable future. Okay?\"\n\nShe seethed but then appeared to make an effort to calm herself.\n\n\"Okay,\" she said at last.\n\n---\n\nI met Mina in the city for lunch. Normally, my job takes me all over the city but today I had to do a floor survey in an office block near Mina's work. There was a food court a block away from the building, and so I grabbed a table and waited. It was past one o'clock; the midday rush was easing off and I watched people begin to filter back into the buildings. Mina was late and so I ordered lunch for myself from the Mexican place. I grabbed her some dessert.\n\nWhen I eventually spotted her through the crowd, she was head down and arm wrapped around her handbag. Mina was wearing business-casual: a cream open-neck shirt, the top two buttons undone, and a grey skirt that came down below her knees but revealing her shapely calves. She'd left the house in sneakers but was now in low heels.\n\n\"Hi, babe,\" I said.\n\n\"Hey,\" she replied.\n\n\"Hungry?\"\n\nMina slumped down into the chair. \"Not really.\"\n\nI pushed my tray towards her. I had a slice of untouched carrot cake on a plate.\n\nMina smiled slightly and began to pick at it.\n\n\"Not having a good day?\" I ventured.\n\nMina popped some cake into her mouth and chewed. \"Day's the usual. I'm just, I guess I'm just not feeling it today.\"\n\n\"You got enough time to come and see my job?\" I asked, pointing at one of the buildings, \"It's just there. Some insurance company's moving in. The boss has scored the fit-out contract for the lot.\"\n\nMina shrugged, noncommittally, and said, \"He must be excited.\"\n\n\"Oh, he's beside himself,\" I replied, \"But I need to take some photos and measurements. Come up with me?\"\n\nMina scooped up the remainder of the carrot cake and stood.\n\n\"Sure,\" she said, \"I got an hour.\"\n\nI took her hand and led her out of the food court. Mina didn't seem to be in a mood for talking, and I had a good idea why. It was all down to me. I'd teased her mercilessly before we left for work, bringing her to the edge in the shower twice. She had refused to ask for release, and I was beginning to wonder what was driving her to such acts of denial. In truth, I had wanted to bury myself inside her right then and there in the shower; I wanted her to want to give in, so that I could get my own release. I missed the feeling of her pussy around me.\n\nWe entered the lobby and I pushed the button for the tenth floor. When the elevator doors opened, they revealed a cavernous space, punctuated by regular rows of concrete pillars, sprayed white.\n\n\"Wow,\" Mina said.\n\n\"It's a big floor plate,\" I replied, \"They're throwing a lot of money at the fit out.\"\n\nI led her across the expanse of grey carpet tile to the far corner. The windows were wide and floor-to-ceiling.\n\n\"This is going to be a massive conference room,\" I said. \"But just look at the view.\"\n\nMina pressed herself up against the glass, watching the traffic streaming along the roads below. I stood behind her, admiring the way her grey skirt showed off the rounded curves of her bottom. She stood with feet together in the heels, and I let my eyes trace up the backs of her calves to the hem of her skirt. I planned to see more.\n\n\"You can see everything from up here,\" I said, stepping closer and cupping Mina's rear with my hand. I gave her cheek a light squeeze.\n\n\"Don't,\" she said, \"You're not helping.\"\n\nI slid my hands around to her hips and positioned myself behind her. The glass window was mirror-tinted and with no interior lighting I was confident that no-one from the building opposite would be able to see us. At least not clearly. I began to slide the fabric of her skirt up her hips, revealing her knees and then her thighs. Mina didn't move, her hands pressed against the glass and her protest ignored.\n\nI pulled her skirt up over her gorgeous bottom, revealing a tiny cotton g-string. We'd opted for cotton over anything fancier because of the issues she had developed with moisture. I looked down at the thin strip of fabric emerging from the cleft between her cheeks.\n\n\"I thought they were blue this morning,\" I said.\n\n\"They were,\" Mina replied, \"I had to change them.\"\n\nI traced a finger along the fabric and then brushed my hand against the warm, firm skin of her rear.\n\n\"When?\"\n\n\"Pretty much as soon as I got to work.\"\n\n\"So you were horny on the bus?\"\n\n\"Cam,\" she said, \"You know I was, you made me horny. You made me need to keep at least a couple of spare pairs in my handbag whenever I go to work.\"\n\nI slid my fingers into the waistband and pulled the g-string down her long, supple legs. She was now standing naked from the waist down at a window in front of the entire city.\n\n\"Horny now?\" I asked.\n\nMina turned, then looked me in the eyes with an expression mixed with desire and reluctance.\n\n\"Yes,\" she said, simply.\n\nI kissed her.\n\n\"Am I being too cruel?\" I asked.\n\nMina's eyes fluttered.\n\n\"Yes. I can't bear it.\"\n\n\"Then do you want release?\"\n\n\"Yes.\"\n\nI stroked her cheek with one hand, the other bunched in the folds of her skirt, revealing her crotch and the trim of pubic hair. I could see the burning need in her eyes.\n\n\"You just have to say it.\" I said.\n\nMina's mouth opened slightly. I brought my hand down from her face and placed my palm over her exposed slit. I could feel the heat and the damp there. I waited.\n\nShe looked at me, a lost expression on her face. I gave her nearly a minute to respond, letting the time drag out. Finally, I spoke.\n\n\"Ah,\" I said, \"You asked for release but won't say the words. You know what that means?\"\n\nMina's face crumpled.\n\n\"Say it,\" I prompted.\n\n\"Another day,\" she said in a tiny voice, \"I'm not allowed to ask. It's another day.\"\n\nI nodded and I could see Mina was genuinely unhappy. I marvelled at her ability to deny herself. But, then, that was the reason we were up here, secluded on the deserted tenth floor. I had plans.\n\n\"At my discretion,\" I said.\n\nMina stared at me, confused.\n\n\"I'm going to give you a chance,\" I continued, unbuckling my belt and dropping my pants to the ground. I hooked my thumbs into my underwear and dropped those too, liberating my already stiffening cock.",
        "Mina's eyes were wide as she watched me kick my shoes off and step out of the little bundle of clothing at my feet.\n\n\"Strip.\" I said.\n\nFor a moment, Mina didn't move.\n\nMy expression hardened, and I held up my phone so that she could see the screen. I brought up the timer app and set it for two minutes.\n\n\"What are you...?\" she asked.\n\n\"I'm giving you access to my thigh for two minutes,\" I said and started the timer.\n\n\"Huh?\"\n\n\"One minute fifty five.\"\n\nI could see that she was torn. On one hand, I was giving her a chance to orgasm, finally. On the other hand, she would have to strip naked in an open space and humiliate herself by grinding against my leg.\n\n\"Minute fifty,\" I reminded her.\n\nSuddenly, Mina was in motion, unzipping her skirt and popping the buttons on her shirt. She wrapped her legs around my thigh even as her hands went behind her back to unclasp her bra. I could feel the heat of her pussy lips against my skin.\n\n\"Minute forty.\"\n\nShe shook her gorgeous breasts free, her face now burning with eagerness, her hands on my shoulders. Mina began to rock her hips, grinding her crotch against me. I watched her body move against mine, and my cock swelled, standing proud. Mina's hand strayed down to touch my tip.\n\n\"I'd concentrate on yourself if I were you,\" I advised, \"You have a minute and a half.\"\n\nMina's lubrication smeared my skin and she began to rub her crotch up and down my thigh, crushing her clit against the hard muscle of my leg. I could feel the force of her movements and had to brace myself against the assault, wrapping my arms around her. She began to groan softly.\n\n\"Getting somewhere?\" I asked. Mina didn't reply, head down, watching her pussy as it rubbed up and down my thigh, seemingly hypnotised by it. Her groans became louder and I could feel sweat pricking on her skin from her exertion.\n\n\"That's a minute,\" I said, \"Are you close?\"\n\nMina just nodded abruptly, her whole focus on building up to her long-denied climax. The outside of her thigh rubbed madly against the head of my cock and I could feel myself begin to leak pre-cum onto her leg.\n\nMy thigh was saturated with her juices, greatly reducing the friction of her pussy against me, forcing her to work harder. I could see her stomach muscles bunching and rippling with the concerted effort, and began to imagine the burn of lactic acid building up in her lower body as she thrust and compressed herself against me.\n\nMina's mouth was wide open now, taking in gulps of air, panting heavily. Her moans had developed into little high-pitched squeals. I knew she was very close; if I remained silent for thirty seconds and let her concentrate on the waves of pleasure coursing through her, she would find a spectacular climax.\n\n\"Thirty seconds,\" I said instead.\n\nMina shrieked.\n\n\"Twenty five.\"\n\nShe was right on the edge. I pushed it a little further.\n\n\"You're running out of time,\" I said, \"Twenty seconds.\"\n\n\"Fuck,\" she groaned, \"Fuuuck. Fuuuuck.\"\n\n\"Fifteen.\"\n\nI was merciless.\n\n\"Nooo!\"\n\n\"Ten.\"\n\nHer head flipped back and she screwed her eyes tightly shut, desperately trying to keep concentration on the shockwave of pleasure in her groin.\n\nI bent my lips close to her ear, smelling the sweat on her body.\n\n\"Five,\" I said, \"Four. Three. Two. One.\"\n\nShe screamed, but not a scream of release, it was pure frustration. The timer buzzed.\n\nMina catapulted herself away from my body, standing on wobbly legs, chest heaving from the exertion and also the edge of orgasm. She stared at me, absolutely furious.\n\nI took a moment to survey her naked body, then my leg. I pointed at my thigh.\n\n\"You made quite a mess,\" I remarked, casually.\n\nMina grimaced and her mouth began to form words, but she clamped her jaw shut.\n\n\"Good choice,\" I said. \"Now, please clean me up and let's get out of here.\"\n\nI thought she would slap me. Her hands clenched into fists and I could see her knuckles turn white. Her body trembled.\n\nThen she dropped to her knees in front of me and began to lick her juices off my thigh. I could see that she was utterly defeated; it was a revelation, that she would submit like that.\n\nShe worked her way up my leg, her hair brushing against my swollen manhood. When she reached my crotch, she pulled back. Her mouth was positioned directly in front of my cock. She looked up at me expectantly.\n\n\"Oh,\" I said, \"That's a nice thought. And yes, I would very much like it. You put on a hell of a show.\"\n\nMina opened her mouth to take me in. I let her hover there for a moment.\n\n\"Get up,\" I said.\n\nShe froze, mouth open, inches from my tip. I slid my hands under her armpits and helped her to her feet.\n\n\"Put your heels back on. Stand against the pillar.\"\n\nI could see that Mina was totally confused now, finding it hard to process my instructions through the fog of arousal I had induced in her. Dumbly, she slid her heels back on and walked over to the nearest concrete pillar.\n\nI watched her move, the heels forcing her to lift her hips as she walked, making her bottom wiggle gorgeously. She reached the pillar and turned to face me.\n\n\"Pose for me,\" I said, bringing up my camera.\n\nMina the girlfriend would have told me to get fucked. Mina the submissive curled her hands behind her head and leaned back against the pillar. The afternoon sun angled in through the windows across her beautiful naked body, illuminating her soft curves and a lost look on her face, against a backdrop of regimented concrete pillars. I took the photo.\n\nWithout a word, I went up to her, shedding my shirt as I walked. I stood naked before her, my erection throbbing painfully.\n\n\"I expected you to crack,\" I said. \"I was too cruel.\"\n\nWe were alone in the quiet of the empty building. Her grey-blue eyes locked onto mine and I could read something deep within. We were living her fantasy: she wouldn't ever crack.\n\nI touched her breasts, stroking the soft skin.\n\n\"You were,\" she agreed.\n\n\"Do you hate me?\"\n\nMina softened. \"No,\" she said, \"I love you. I never thought I'd ever do this.\"\n\nI kissed her then, leaning into her body, my cock finding the heat between her legs and I slipped inside her. It felt glorious.\n\n\"This is for me,\" I said.\n\n\"I get it,\" Mina replied, \"I know you need it.\"\n\nI began to thrust into her. She moaned quietly in my ear.\n\n\"Do you want to cum?\" I asked, \"Not a trick question.\"\n\n\"It is. You're going to add another day if I say yes,\" she replied. Her fingers were tracing the contours of my back now, working their way down to my buttocks. I could feel how wet she was.\n\n\"Could you take another day?\" I asked.\n\n\"I couldn't take another minute,\" she replied.\n\nIt was all the confirmation I needed and I began to power into her more forcefully, pushing her back against the unyielding concrete.\n\n\"Your call,\" I said, grunting with the exertion of pushing up into her. \"Cum now, as many times as you can, until I'm done.\"\n\n\"Or?\" she asked.\n\nI laughed. \"Mina, seriously? You want an option two?\"\n\nShe laughed as well. She felt so good, her warmth enveloping my manhood.\n\n\"God, I've missed fucking you.\"\n\n\"Me too.\"\n\nHer nails dug into my bottom, and the sharp pain spurred me on. I began to pick up my pace, and Mina responded, grunting with each stroke, her own flames rekindled. I braced my hands against the concrete pillar, watching myself slip on and out of her. Mina's head was tucked next to mine, watching too. Her breath was coming in ragged bursts, and I felt a shudder in the walls of her pussy. She groaned in my ear.\n\n\"I'm sorry,\" she gasped, \"I can't hold on.\"\n\n\"Don't be,\" I panted, \"You earned it.\"\n\nShe began to grind her hips against me, matching my rhythm.\n\n\"Oh. Oh. Fuuuuck,\" she wailed.\n\nI felt her whole body tense. She stopped breathing.\n\nAnd then she came, squirting over me, her walls clamping down on my cock. I pounded into her, building up to my own release. I felt her shudder and spasm, but I was far past the point of playing the considerate boyfriend. I needed to penetrate her; it was a primal urge.\n\nMina clung to me tightly as I moved, merciless now with my strokes. I felt her body go rigid and she squeezed a high-pitched whine through clenched teeth as she climaxed again. Still I wasn't done.\n\nI pressed bodily against her, pinning her against the pillar with all my weight. She was standing on tiptoe now, in her little black heels, making wild keening noises, her pussy gushing wetly around my thrusting cock. I had never felt her this wet, or felt such an overwhelming urge to fill her with my seed. I was gasping, breathless with my own exertion. She clamped around me again, tighter than she had ever done before. It finally tipped me over the edge and I exploded inside her, pounding into her stroke after stroke even as I emptied myself, needing to prolong the feeling of release.\n\nAt last, we slid down the white-painted column, huddled together in a tangle of naked limbs, Mina's head buried in my neck. We were both sweaty and breathing hard.\n\nMina kissed my neck.\n\n\"That's probably going to cost me five to ten, isn't it?\" she asked.\n\nI laughed. \"You mean, cost me,\" I said. \"I'm going to need to be lenient. If I sent you down for ten days I'd probably get to the end and pump myself inside out.\"\n\nShe laughed at that. I could feel her diaphragm rippling, sending little shockwaves down her body and through my cock, still buried inside her.\n\n\"We'll work it out,\" Mina said, \"I'm sure we'll work it out.\""
    ],
    "authorname": "oneagainst",
    "tags": [
        "orgasm denial",
        "teasing",
        "female submissive",
        "chastity",
        "domination",
        "blow job",
        "public",
        "tease and denial",
        "edging",
        "control"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/all-under-control-ch-01"
}