{
    "title": "The Cherry Poppers Ch. 26",
    "pages": [
        "Chapter 26 -- The contest end draws near. \n\nJason opened his eyes, at first not sure of where he was, but quickly realized he was in his own bed. It was still dark outside and the room was quiet and still saves for someone moving next to him. It was then he also felt something, his dick was being touched. \n\n\"Connie, what're you doing?\"\n\n\"Sorry to wake you but I have to pee. This seemed a good way to get your attention.\"\n\n\"Go ahead,\" Jason said. \"You can use my robe.\"\n\n\"I'm scared to go alone, what if someone is in the bathroom? Could you go with me?\"\n\n\"Okay,\" Jason responded, realizing his bladder could use the relief too.\n\nThey quietly got out of bed, not to wake Sophie in Chad's bed. Jason strained his eyes in the dark to see if Chad had returned but it didn't look like it. He handed Connie his robe and just wrapped a bath towel around himself. Connie followed him out the door and across the hall; the frat was still completely quiet.\n\nConnie ducked into a stall while Jason stood before the urinal. He started to go and a moment later could hear Connie going too. He finished, washed his hands, and waited for Connie. He heard the toilet flush a moment before she stepped out. \n\n\"Hey, I'm sorry I drank so much yesterday,\" Connie confessed.\n\n\"No problem,\" Jason replied. \n\n\"I didn't get to see what happened at the end,\" Connie said moving closer to him. \n\n\"Sophie and I had fun,\" Jason commented with a smile.\n\n\"Did you...ah...fuck her?\"\n\n\"A guy shouldn't kiss and tell,\" Jason mused.\n\n\"Oh, come on. She's my roommate,\" Connie pleaded.\n\n\"Yeah, so...,\" Jason chuckled.\n\n\"I know you did. I touched you down below and you smell like you got more than a blowjob from her down there,\" Connie claimed. \n\n\"Smart, girl,\" Jason confessed.\n\n\"Do me too, Jason. I can't let Sophie be ahead of me when it comes to sex.\"\n\n\"Not much time. I have practice at seven.\"\n\n\"We could shower real quickly now and do it back in your bed? The clock by your bed said five-thirty when we got up.\" Connie offered. \n\n\"Okay, you start the shower and I'll get some soap and more towels.\"\n\nJason hurried back into the room without waking the sleeping Sophie. He grabbed an extra towel for Connie and his soap, razor, and shampoo. He was back in the shower area in just a minute or two. Connie had the water on and was already soaking her dark hair and slender body. \n\n\"Oh, this feels good after a night of drinking,\" Connie proclaimed.\n\n\"Headache?\"\n\n\"Surprisingly, no. I'm thirsty as all get out though,\" Connie declared.\n\nJason handed her the soap and she moved out of the direct spray of the water to let him in. He wet down and reached for the shampoo. He stepped out this time to let Connie rinse off. As he worked the shampoo into his hair, Jason watched Connie wash off. Curtains of soap suds ran from her olive skinned body as the warm water rinsed her clean. Jason noticed and loved the way the water cascade across and off her small perky tits and nipples. \n\n\"You're beautiful,\" Jason claimed, staring at her as she opened her eyes.\n\n\"Why thanks, kind sir. You're gorgeous too.\"\n\nThey exchanged places so Jason could rinse his hair. Connie used the shampoo next as Jason soaped up. The shower only lasted another couple minutes, just long enough for Jason to get a quick shave in and Connie to rinse her pretty dark hair. It wasn't as long as Beth's gorgeous red hair, or especially Kira's blonde tresses, but it shone like a polished onyx stone when she was done. \n\nFrom facing straight, Connie was indeed pretty. She could have been a model if not for her nose in profile. 'Not that she wasn't still cute, but a little plastic surgery would help Connie join the ranks of women all men would go nuts over,' Jason mused to himself as they dried off. \n\nConnie wrapped her wet hair into the towel Jason had given her as Jason wrapped his around him. He watched her small tits jiggle invitingly as she moved. They were very firm but still wiggled enticingly as she moved her arms overhead. With her robe back on they went back to the room. \n\n\"How should we do this?\" Connie whispered, after shedding the robe and crawling onto the bed.\n\n\"Well, we need to get things heated up first,\" Jason stated as he climbed in beside her. \n\n\"I know that...I just meant do you want me to suck...\"\n\nJason cut her words off with a kiss. He wrapped his arms around her and moved over her. Connie lay with her toweled head on the pillow as Jason kissed her. The kisses were tender yet ardent and she returned them equally. Their tongues danced together as Connie's hands caressed the taut muscles of Jason's chest as he held himself over her. He leaned down to feel the bullets of her small nipples graze across his chest. \n\n'A guy could get used to fucking this tight little vixen,' Jason claimed to himself as their kisses grow more urgent. He could feel his dick expand as he rubbed against her leg. \n\nWhen they finally broke the long kiss Connie said, \"Let me get on top please.\"\n\nJason rolled to the side and shifted under her as she gracefully swung above him. He watched as Connie sat on his lap, removed the damp towel, and dropped it to the floor. He loved breasts, all kinds of breasts, especially big ones like Stef's or Caitlin's, Beth's were magnificent, as were Sheila's, but there was something that made his dick twinge at the sight of Connie's little mounds shaking, quivering really as she moved. Her small tight bullets for nipples were mesmerizing as they jiggled. \n\n\"What?\" Connie whispered, seeing the look on his face. \n\n\"You're exquisite looking,\" Jason praised.\n\n\"You keep saying things like that and I might fall in love with you,\" Connie said, with only a hint of joking. \n\n\"I mean it,\" Jason said, moving his hands to knead her breasts and feel her nipples poke his palms. \n\n\"You don't have to convince me to let you fuck me, I already want you to,\" Connie claimed.\n\n\"I know.\"\n\n\"Jason...I'm a virgin.\"\n\n\"I know.\"\n\n\"You do?\"\n\n\"Sure...I could tell last night when I ate you.\"\n\n\"You could?\"\n\n\"Sure.\"\n\nConnie leaned down and kissed him with amazing passion. They kissed like long lost lovers for many moments. Connie's tongue invaded Jason's mouth seeking his. When they finally stopped, she looked into his eyes, and then descended on his body. He was already poking her belly as she moved down. \n\nJason looked at the ceiling as he felt her hand first and then her tongue. Connie licked his tip, making him groan, as more blood surged him to full hardness. What experience Connie lacked in mating was not evident in her talented tongue. She knew her way around a cock. \n\n\"Mmm,\" Jason moaned. \"That's nice, babe.\"\n\n\"I could learn to love this beautiful dick,\" Connie proclaimed.\n\n\"It feels the same way.\"\n\n\"Ah,\" Jason growled as she took him into her mouth suddenly. \n\nHe let her apply her skills for several long minutes. His cock throbbed by the time he pushed her gently away. She groaned her disappointment in being stopped. He looked down at her in the growing light, as dawn approached, slowly illuminating the room. \n\n\"You have to let me taste you sometime,\" Connie begged softly.\n\nHe loved her dedication to sucking him, but time was short, and he wanted to make sure they finished the way they both wanted. He pulled her from beneath her arms until she again could kiss him. They kissed as the end of Jason's cock probed between her parted legs. Connie sat on his abdomen, kissing him, and running her fingers through his short hair. Jason held her firm ass in both hands and slowly moved her around until his dick found its mark.\n\n\"Go slow,\" Connie whispered. \n\n\"I will...relax,\" Jason answered.\n\nIn this position, Connie could control the pressure Jason applied to her better than if he'd been on top. Though she let him have the greater power as a sign of surrender to him. He eased into her, as he had learned now to do after eighteen previous cherries. Hard thrusts were not always as necessary or as useful as applied pressure. The tender barrier could only withstand so much. Stretching it until it gave was far better for the girl anyway. It took longer, but easier on the girl, and allowed for greater enjoyment on her part quicker. \n\nConnie was a trooper and allowed him to continue pushing without let up. Her face showed the extent of her discomfort but she didn't stop him. Suddenly, he felt the head slip inside some. \n\n\"Oh, god,\" Connie moaned aloud.\n\nJason stopped, \"Just sit still and let it pass.\"\n\n\"Okay, but you're huge,\" Connie gasped.\n\nThey didn't hear Sophie stir as he pressed more of his cock into Connie. After every inch or so, he waited for her tight pussy to accept the big new invader. He held her tight to his body, feeling her tiny hard nipples scrapping his chest. Connie moaned lightly beside his ear. She nuzzled his shoulder and neck as his cock reached new depths. \n\n\"Good, god,\" Connie moaned. \n\n\"Just a little more,\" Jason avowed.\n\n\"You're going to pierce my insides,\" Connie hissed jokingly. \n\n\"It's meant to fit,\" Jason reminded her.\n\n\"You sure,\" Connie exclaimed with a gasp, as more cock filled her to capacity.\n\nNow that Jason had pushed through her hymen, he grabbed her hips, and flipped her over underneath him. Connie squealed as he managed to do it without totally unseating his cock from inside her. He pushed back in again until he reached his furthest point of penetration so far. Jason let over half of his cock rest inside her for a minute before pulling back slowly. Connie whined quietly as she felt him exit her stretched vagina. He pulled back until the bloated head was all that remained. A slight pause, and then he eased the thick shaft back into her tight chute.\n\n\"Ah...geez,\" Connie wheezed at the fullness again.\n\nHe started a slow rhythm which soon Connie got used to. It didn't take long before she met each thrust with one of her own. The sweet pleasure began to build within her pussy sooner than she expected.\n\n\"Oh, Jason, that feels so good,\" Connie moaned.\n\n\"You've got a fabulous pussy,\" Jason praised.\n\n\"Keep saying nice things like that and I'll want to do this every day,\" Connie warned.\n\n\"Wouldn't that be nice,\" Jason agreed.\n\n\"It would,\" Connie concurred. \n\n\"Aww...that's amazing,\" Connie added, as Jason increase his rate.\n\nJason leaned down and sucked on one of Connie's tiny nipples as he pushed deeper into her pussy. She moaned from the combination of pleasures to her nipple and cunt. His cock nudged Connie's cervix and drew a soft groan. She couldn't believe how far he was buried inside her pussy. She was completely amazed her slender body could contain almost all of his enormous cock. \n\n\"Mmm...aww,\" Connie muttered.\n\nJason increased the speed at which he fucked Connie. Her pussy was so tight he could watch it flare outward on each withdrawal as it clung firmly to his cock. Connie's hands squeezed Jason's sides as he propelled his large dick continuously into her. At this pace and angle, Jason couldn't suck her nipples any longer but he watched the small mounds wiggle as he fucked her.\n\n\"Oh, Jason...it feels so good now.\"\n\nHe had to admit she was entirely right. His balls grumbled with growing need as her pussy milked his cock. Jason increase the intensity of his stroke making Connie groan even louder.\n\n\"Oh, god, that's good...Mmm.\"\n\nJason fucked Connie in long deep strokes. His cock felt like a steel rod as it probed her depths. He leaned down and kissed her, battling tongues with her, as they both fought for breath. His balls had tightened and weren't slapping against her ass as hard as before. \n\n\"Good, God...I'm going to cum,\" Connie yelled too loud not to wake Sophie.\n\nJason's ass became a blur as he pushed to get her off before his cum flooded her cunt. Connie moaned loudly as her orgasm built to extreme proportions. She had never felt anything close to this good. His tongue had driven her crazy, but this threatened to rip the top off her head as the bliss seemed to consume her. \n\nJason could feel sweat forming on his body as he hammered his dick into her. His climax neared as Connie pushed up into each of his strokes. Her body felt like it was aflame. Connie reached the top of her pleasure peak and screamed out.\n\n\"Oh, fuck...fuck me, Jason.\"\n\nConnie's body froze and clamped down hard on Jason's cock. He tried to keep moving, but she was surprisingly strong, and he could only wait until she unclenched her vagina. His own orgasm hung just out of reach. He waited with some frustration as Connie groaned beneath him; enjoy the waves of pleasure enrapturing her body. \n\nThen Jason felt it. At first he wasn't sure where it came from but quickly realized Sophie was standing next to the bed. Her long skinny fingers were massaging his balls. At that ripe moment, it was all he needed to growl with release. His cock spewed forth a flood of hot sperm into the clenching walls of Connie's young cunt. \n\nConnie felt Jason's cock expand and then the deluge of hot cum. It pushed her to even greater heights as her orgasm persisted. Every time Jason's cock surged, Connie felt it, and groaned with her own constant bliss. Her body trembled like a leaf as the unbelievable delight overwhelmed her. \n\n\"Ah...,\" Connie moaned as the last wonderful feelings waned.\n\nJason finished cumming inside Connie, with Sophie smiling at him, as she milked his big balls to deposit more sperm into her friend. He fired off blast after blast into the tight pussy until he had nothing left to give.\n\n\"Oh, fuck, Sophie,\" Jason growled.\n\nConnie opened her eyes upon hearing Sophie's name. She thought, 'Jason doesn't even remember which one of us he's fucking,' and it kinda pissed her off until she saw Sophie next to the bed. \n\n\"What's going open?\" Connie gasped.\n\n\"I've been squeezing his balls,\" the once shy Sophie said.\n\n\"She surprised me with that,\" Jason declared.\n\nHe rolled off Connie to the wall side of the bed. His cock came out of her like a long cork in a bottle. As soon as it was free, a flow of cum began to exit Connie's tight pussy. It made a puddle on the sheets as it ran between the cheeks of her firm ass.\n\n\"Wow,\" Sophie exclaimed, \"look at all of it running out of you.\"\n\nWhen Connie leaned forward to look, more cum flowed out and down, adding to what was there. Jason looked too and commented, \"Geez, Connie, you're messing my sheets.\"\n\n\"Me,\" Connie proclaimed, \"it's your deposit.\"\n\n\"That it is,\" Jason agreed with a laugh.\n\n\"Here,\" Sophie said as she grabbed tissues from the nightstand and handed them to Connie. \n\nJason glanced at the clock which read six-thirty. \"God, I got to go,\" he affirmed.\n\n\"Where to Sophie asked? I was sorta hoping we could...you know...\"\n\n\"I have swim practice at seven.\"\n\n\"Darn,\" Sophie concluded.\n\n\"You've created a sex monster, Jason,\" Connie said with a giggle.\n\n\"Looks like it.\"\n\n\"Not fair. I just watched you two do it,\" Sophie protested.\n\n\"Tell you what,\" Jason said, \"I have two tests today and I'll feel like blowing off some steam afterwards. I need to go by the infirmary after our sociology test today. You two want to meet me back here around five?\"\n\nSophie looked at Connie and they both nodded agreement. \"Okay then,\" Jason agreed.\n\nJason jumped over Connie on the bed and pulled open the draw of his dresser. He grabbed a t-shirt and sweat shirt but no boxers. He decided with his dick still wet from their combined cum to go commando instead. No sense dirtying clean boxers since he had just done some laundry. He was just pulling his jeans on when the door opened. \n\nSophie was still sitting on his bed near Connie. Both were completely naked and screamed when Chad walked in. Sophie dove to jump into Jason's bed and get beneath the covers with Connie. They shrieked until they were both only heads peaking out. Their screams turned to giggles as they recovered though.\n\n\"What is this, roomie?\" Chad asked with a smile.\n\n\"Meet Sophie and Connie,\" Jason said introducing them with a chuckle. \"This is Chad, my roommate.\"\n\n\"Nice to meet you,\" Connie stated with a snigger.\n\n\"Oh, my, he saw everything,\" Sophie concluded with an embarrassed blush. \n\n\"That he did,\" Jason said, laughing as he finished getting dressed. \"Watch out for these two hotties while I go to practice, Chad.\"\n\n\"What...wait!\" Sophie yelled, \"You can't just leave us here like this.\"\n\n\"Got to go,\" Jason said, heading to the door. \"Chad can watch out for you.\"\n\n\"That is what we mean,\" Connie protested.\n\n\"Tell you what,\" Chad offered. \"I have to shower. You two can get dressed while I'm gone.\"\n\nChad peeled off his shirt, grabbed his towel and toiletries bag, and waved goodbye. He left for the bathroom before Jason was even out the frat door heading towards the gym. Connie and Sophie had watched Chad strip off his shirt with some interest. He wasn't as hot as Jason, or as built, but Chad was more in their league anyway. \n\nJason had a very good practice with Brad. He felt a little strange walking to earth science class with no boxers on. His dick rubbed somewhat on the inside of his jeans. He hoped he wouldn't spend the whole day walking around semi-hard. He spotted Kira and Tessa walking towards class too.\n\n\"Hey, you two,\" Jason called.\n\n\"Jason...nice to see you,\" Tessa said with a devilish wink. \n\n\"Yes...how have you been? You ready for this exam?\" Kira questioned.\n\n\"I think so,\" Jason said.\n\n\"We should have studied together,\" Tessa avowed, again with a wink.\n\n\"Stop it, Tessa,\" Kira said, catching the second wink. \"You've created a monster with this one, Jason.\"\n\n\"I seem to be good at that,\" Jason claimed.\n\n\"You sure are,\" Tessa said with another wink and this time they all laughed. \n\n\"I hear you two have been seeing people.\"\n\n\"We met some nice guys,\" Kira said. \n\n\"Good for you.\"\n\n\"Well, you were obviously taken,\" Tessa stated, referring to Beth.\n\n\"Yeah, still am.\"\n\nThey all sat together for the test. Jason was done a few minutes before the girls and he whispered by as he got up and handed his paper in. His stomach was screaming for food, so he headed for the student center. He had an hour before sociology, so he decided to get some last minute studying in as he ate. He had just finished eating and began reading when someone kicked his sneaker. Looking up from his book he spotted Beth.\n\n\"Hi, stranger,\" Beth said, but with a smile which he was glad to see.\n\n\"Hi, Beth,\" Jason said pointing to the only other chair at his table. \n\n\"I can't stay. I just wanted a coffee,\" Beth said, holding up a paper hot cup. \n\n\"When are you free?\" Jason asked.\n\n\"This week is tough with exams,\" Beth concluded.\n\n\"Agreed,\" Jason said, \"But I want to see you.\"\n\n\"How about Friday,\" Beth offered.\n\n\"How about all weekend?\" Jason asked with a smile.\n\n\"Wow, that's a change,\" Beth intoned.\n\n\"I know but I want to spend time with my girl for fall break,\" Jason claimed.\n\n\"I'd like that,\" Beth agreed. \"Call me Thursday.\"\n\n\"Okay,\" Jason said, standing and giving her a kiss goodbye. \n\nHe was glad when the kiss lasted a bit longer than just a quick goodbye. There was no way he wanted to lose this beauty over this contest even as he approached his goal of twenty cherries. He had to check the logs on Connie and Sophie at the infirmary before they disappeared. He thought he had some time on that though. \n\nJason finished eating and headed for sociology class. He was a bit early for once and had time to sit and talk with Connie and Sophie before the exam.\n\n\"You two ready for this test?\" Jason asked upon sitting down.\n\n\"We think so. Maybe we can study together from now on,\" Connie said with an implied double meaning.\n\n\"Good idea,\" Jason agreed with a chuckle.\n\n\"We can't wait for later,\" Sophie chimed in.\n\n\"Me neither,\" Jason declared. \"Hey, let me ask you ladies something. Could I have ever met you at the infirmary before we met here in class?\"",
        "\"What?\" Connie asked surprised.\n\n\"Maybe,\" Sophie volunteered. \"We've been there twice.\"\n\n\"Twice?\" Connie corrected her. \"Just once to see Dr. Jenny for the pill.\"\n\n\"No, don't you remember we went when we had the flu together.\"\n\n\"Oh, right. I forgot about that one. It was just for some medicine but she insisted we have a complete exam. That lady was thorough.\"\n\n\"Yes, that she was. The new doctor is going to change many things and not all for the better I fear,\" Jason stated.\n\n\"Why did you ask?\" Connie questioned.\n\n\"Oh, nothing. Just thought I might have seen you there,\" Jason fibbed, all the time thinking, 'Great...good possibility they are both registered then as virgins.'\n\nThe teacher arrived and quickly handed out the test papers. Once again Jason finished before the two girls. He handed his paper in and headed for the infirmary. He wanted to see for himself what changes had been made so far even though he wasn't scheduled to work. \n\n\"Hi, Dr. Clark,\" Jason said upon entering and seeing her at his old desk. \n\n\"Oh, hi, Jason. What brings you here?\"\n\n\"Just wanted to stop by and see how you're making out.\"\n\n\"Great,\" Dr. Amanda Clark said. \"Come see how I've scanned all the current student charts into a tracking program where I can better manage and preserve the records.\"\n\nShe showed Jason all the changes she'd made in the last week. They were pretty extensive. Her office was organized differently than Dr. Jenny had it. The office now had two computers and the card files Jason worked on were stacked on the floor next to packing boxes opposite his desk.\n\n\"What's going on here?\" Jason asked.\n\n\"Well, we don't need those card files anymore so I'm having them stored in central records. I know you're not supposed to be working but want to help me put them in the boxes in order?\"\n\n\"Sure,\" Jason said, anxious to get near the cards one last time before they disappeared for good. \n\n\"Great...I'll hand them to you and you can align them into the boxes.\"\n\n\"Okay,\" he said.\n\nThey began and in five minutes had all the A's and B's done. This wasn't working out the way Jason hoped. He never thought she was this far along already, and even though he came in time, he wasn't getting a chance to examine the cards one last time with her present. He was just about ready to give up hope on checking out Sophie and Connie when two girls came in to see Dr. Clark. She asked Jason to continue while see dealt with them. When the first girl was with Doctor Clark behind her office door, Jason had a brief opportunity.\n\nHe glanced at the other girl but she was examining the magazines on the table, looking for one to read. Fortunately for Jason, he had just learned Sophie's and Connie's last names as the tests were being passed out. He had written them on his palm not to forget. Connie's last name began with a P and he quickly located her card. 'Bingo, there's the asterisk,' he noticed. Jason looked over to the girl on the couch but other than a flirting glance she persisted in reading a magazine. \n\nHe quickly located the F's to find Sophie. He went through them all fast but didn't find her card. He began to panic as he heard the voices behind Dr. Clark's office grow louder as if they had moved closer to the door. He moved diligently back through the F's and finally found Sophie. \"Halleluiah,\" Jason mumbled under his breath loud enough to be noticed by the girl on the couch, who momentarily looked in his direction. She just smiled at him and went back to reading though. 'There it is,' Jason exclaimed to himself, 'the asterisk.\" Eighteen and nineteen cherries are confirmed. He could log them into the book. All that remained was one more.\n\nThat thought gave him an immediate new sense of panic as he quickly started packing the C's. He wanted to hurriedly get some more in the box so Dr. Clark wouldn't notice his lack of effort. He managed to get all the C's, D's, E's, and F's into the box, which was now full before Dr. Clark emerged from her office with the first girl. \n\nDr. Clark said a few more words to the first woman, summoned the second, and gave Jason a smile as she noticed his work before returning to her office with the second girl in tow. The first girl sat down to await her friend. This one didn't want to read and he could sense her watching him. 'Fuck,' Jason muttered to himself. He only knew of two more virgins, Sierra and Haden for sure. He had a couple other names but couldn't even remember what they looked like now to try to find them again. All he remembered, because he wrote the names down, were Meghan and Candace. Beyond that he had nothing but bare descriptions he had made for himself. \n\n'Great,' Jason murmured again to himself. 'To win the contest all I have to do is fuck my girlfriend's roommate or a girl that hates my guts.'\n\nJason couldn't do more than stack the cards in the boxes as the first patient watched him intently. He would have liked to look through the cards for more names but that would take time. Fewer than 10% of the cards, maybe fewer than 5%, were virgin girls. It would have taken hours to dig through the cards this way and that was not possible as Dr. Clark expected him to be making progress in packing them away, besides the fact that he was being observed.\n\n'Oh, well,' Jason thought, 'I should be glad I made it to nineteen to tie Mark and the others.'\n\nHe was up to the L's by the time Dr. Clark emerged with the second girl. He had two full boxes and was working on the third. He listened to Dr. Clark give the girl instructions on the prescription she gave her. It sounded like some woman problems to Jason. After the girls left, Dr. Clark helped him finish the cards. It took another half hour with them working side by side. They nearly filled five boxes by the time they were done. \n\n\"Wow, thanks, Jason...that was a job I wasn't looking forward to. Glad you stopped by. I'll pay you for your time.\"\n\n\"Thanks, Dr. Clark. Glad to be of help. Where can I put these heavy boxes for you?\"\n\n\"Over in that corner by the door would be fine. The custodians are coming for them in the morning. They're being sent over to the general storage area, but being kept in the locked cage over there for security.\" \n\n\"Okay,\" Jason said, lifting one of the heavy boxes.\n\n\"Jason, I'm afraid the need for help around here has been dramatically reduced with the computerization of the files. The President has told me to reduce the hours of the few part-time employees to cover the costs of the computers. I doubt I'll have any need for your help now until spring when one other student has to leave for sports,\" declared Dr. Clark. \n\n\"Oh, okay,\" Jason replied, acting a little disappointed, though he really wasn't.\n\nWorking at the infirmary just wasn't the same now that Dr. Jenny was gone and with all the changes Dr. Clark had already made. They parted company and Jason had to hurry to make it back to the frat by five. He got there exactly at five and Sophie and Connie were already in the room talking to Chad. \n\n\"Hey, Connie...Hi, Sophie,\" Jason said, settling onto his bed like Chad on his. The girls occupied the guys' desk chairs. \n\n\"Hi, Jason,\" they both responded.\n\n\"We were just starting to get acquired,\" Chad stated, as if to fill Jason in on what had happened so far. \n\n\"Good...you girls want a drink?\"\n\n\"No more wine for me,\" Connie declared, after her heavy drinking the day before. \n\n\"That's good,\" Jason retorted laughing, \"because I don't have any left.\"\n\n\"Just some water for me too,\" Sophie concluded, sharing his laugh.\n\n\"I'll get it,\" Chad offered.\n\nAs Chad got up to get the water from their refrigerator and glasses to pour it in, Connie looked at Jason.\n\n\"What should we do?\" Connie said with a nod towards Chad, he couldn't see with his back to the girls. \n\nSophie saw it and nodded too at Jason. Jason just shrugged his shoulders, indicating he wasn't sure either. \n\n\"We could go for a ride in my car,\" Jason offered as Chad handed the girls' their drinks.\n\n\"Thanks,\" Connie said, taking the water from Chad. \"But it's more comfortable here.\"\n\n\"Yeah,\" Sophie agreed.\n\n\"You guys want to be alone with Jason?\" Chad astutely gathered.\n\n\"Ah...,\" Sophie paused until Connie added, \"Not necessarily.\"\n\nJason looked her way and she mischievously raised her eyebrows as if to say, 'what.' He snickered and looked over at Sophie. She just smiled at her friend's boldness. Jason waved Sophie over to his bed. Connie noticed and looked at Chad, who was back on his bed.\n\n\"This is awkward,\" Connie said to Chad with an impish grin. \n\n\"I agree, but why don't you come over here anyway,\" he said, patting the bed beside him.\n\nConnie shrugged and moved towards him. Sophie had already climbed onto the bed with Jason. He had grabbed her hips and rolled her over him towards the wall making her squeal with delighted surprise. She laughed as he leaned over her, pinning her to the bed face up. \n\n\"What're you going to do now?\" Sophie asked amused.\n\n\"This,\" Jason said, leaning down for a kiss.\n\nSophie immediate returned his kiss and her fingers played with the short hairs on the back of his neck as his hand held her side. They kissed and battled tongues until both were breathing heavy. \n\nJason's hand stole up Sophie's side to caress her left breast. They both had worn jackets which they took off before Jason arrived. Sophie's was braless beneath her sweater and Jason's fingers easily found the nipple. He brought it to attention in no time. Sophie helped when he started lifting the bottom of the sweater. She was soon naked on top. \n\nJason stared at her beautiful breasts for a second before returning to pinching her nipple and kneading the soft mound. Sophie's moans told him she loved what he was doing. Her fingers began unbuttoning his shirt and Jason lowered his face to the nipple he'd left untouched to that point. \n\n\"Oh, god,\" Sophie gasped as Jason's mouth encircled her turgid bud. \"Oh my, that's so good.\"\n\nSophie tried to concentrate on opening Jason's shirt despite his leaning across her and the wonderful sensations spreading from her nipples. She could feel her pussy pulsing with need and a wetness starting. Somehow she got his shirt undone and tried to push it from his shoulders. Jason stopped sucking her nipples long enough to help her remove it. \n\nWith both now naked from the waist up, their skin seemed to glow with heat as their bodies presses together. Sophie pulled his greedily sucking mouth from her nipples so she could kiss him again. As they kissed, Jason took the opportunity to skillfully unbutton the top of her jeans. They both stopped kissing and looked deep into the others eyes after the sound of her zipper descending. \n\n\"Stand up,\" Sophie said in a near breathless exhale. \n\nThey continued to stare at each other as Jason stood beside the bed. Sophie quickly shifted with him and put her hands to his belt. She had to look down at what she was doing being a very new rookie in the practice of making love. Her fingers moved fast though and she soon had his pants open enough to push down. Jason helped and with no underwear his big dick, only half hard, still nestled cozily between his legs. \n\n\"Nice,\" Sophie declared as she stared at his third appendage. \n\n\"Play with it,\" Jason offered, but with a good amount of obvious pent up desire.\n\nSophie smiled weakly at him, her own desire evident as she reached for him. Her fingers ran down one side of his shaft and then cupped the blood filling head. She marveled at the soft velvety feel of his cockhead and teased along the ridge and underneath. Her delicate fingers made Jason moan softly with their light but delectable touch. His cock started to rise from its sleeping state. \n\n\"Mmm,\" Sophie hissed as she watched it fill and expand. \n\nLike most women, it gave her great joy to see the effect her touch could have to this large organ growing before her. To know her manipulations and caresses were exciting Jason to the point his cock filled to capacity and pointed at her, gave her delicious thoughts and both her pussy and mouth seemed to water together. She held him stiff before her and looked up into his eyes.\n\nJason looked down at her and boldly said, \"What do you want to do now?\"\n\n\"This,\" Sophie said and planted a kiss on the tip. \n\n\"No, what else?\"\n\n\"And this,\" Sophie replied as she flicked her tongue over the sensitive flesh.\n\n\"No, tell me. Tell me what you want to do.\"\n\n\"What,\" Sophie said, a little puzzled, but added, \"Take it in my mouth.\"\n\n\"Take what in your mouth?\"\n\n\"Your...ah...dick.\"\n\n\"And do what?\"\n\n\"Suck it.\"\n\n\"Suck what?\"\n\n\"Your dick.\"\n\n\"No put it all together,\" Jason instructed.\n\n\"I want to suck your dick,\" Sophie responded and as she did she got a sense of what Jason was after. \n\nThe naughty words made her pussy quake and she could feel her panties getting incredibly wet in the front. Her mouth wanted nothing more than to wrap her lips around him.\n\n\"Use the word cock,\" Jason insisted.\n\nSophie, now wise to his little game, smiled as she said, \"I want to suck your cock.\"\n\nSophie kind of enjoyed the game but was further shocked when Jason added, \"What does that make you?\"\n\n\"Ah...a cocksucker,\" Sophie reasoned.\n\n\"You're a what?\"\n\n\"I'm a cocksucker,\" Sophie affirmed, but even as she smiled at Jason her pussy throbbed with an intensity she'd never known. \n\nThe pulsing was so strong it created a near ringing in her ears. The words she just spoke echoed repeatedly in her mind until her eyes dropped from his to take in the object of her lust again. A drop of pre-cum oozed from the tip of Jason's cockhead. She hadn't realized it, but her hands had kept stroking him all during his little diversion. She felt a real compulsion to suck his cock. She whispered to herself as she leaned in to catch the tiny drop.\n\n\"I'm a cocksucker.\"\n\nJason moaned when her tongue flicked repeatedly across the hyper sensitive head of his cock. His legs shook from the intensity of her touch. He had meant to turn her on but in so doing elevated his own desire tenfold. \n\n\"Oh, god...be a good little cocksucker and suck it for me,\" Jason growled.\n\nSophie opened her mouth and took the whole head and maybe another inch inside her warm, moist cavity. Her tongue flipped back and forth as she applied pressure to the head. Her mouth wet the glans and captured the taste of his pre-cum.\n\nJason watched intently as Sophie sucked his cock. She was doing a great job even for a near amateur. He suddenly remembered they were not alone and looked towards Chad's bed. He needn't have worried about them. Their shyness must have been short lived as both were naked. Chad was on his back with Connie between his legs too. Jason couldn't see her face but the unmistakable bobbing of her head told the rest of the story. He glanced at Chad's face and his roommate gave him the two thumbs up sign and a huge smile. Jason smirked and smiled back. \n\nSophie moaned again when Jason pulled her from his twitching cock like the night before. If he was given much more of her growing natural talent as a cocksucker, he would have been making a huge deposit onto her tonsils soon. She pouted as he moved back. Her hands were still trying to hold his cock and balls.\n\n\"Again...why can't I finish?\" Sophie pleaded. \"Let me get you off.\"\n\n\"Next time,\" Jason voiced, but realized he have to cut this off soon enough with this little hottie or risk losing Beth. \"Let's get those pants off you.\"\n\nSophie reluctantly gave up and quickly got into the idea of availing her cunt to him. She nearly squealed with delight when he settled on the floor between her bare legs. He eased her back towards the wall on the opposite side of the bed as he got into position with his face over her pussy. Sophie remembered all too well the incredible feelings his mouth and tongue had given her the night before. She felt another surge of wetness and desire as she watched him descend. \n\n\"Oh, god,\" Sophie hissed at the first contact.\n\nJason kissed her inner thighs, enjoying the wonderful soft skin there. His hands held her down and her legs apart as he worked closer and closer to her steamy sex. Sophie felt like one touch to her exposed clit would send her off into wonderland. \n\nJason took his time. He teased the overly aroused girl until her ass trembled on the bed and her pussy nearly begged to be touched. Her hands grabbed handfuls of his hair and tried to guide him to the spot she wanted most. His resistance to letting her control the action only heightened her incredible lust. Sophie felt like a bomb about to explode as he sucked on her puffy outer lips.\n\n\"Jason. Oh, god, please. Oh, god.\"\n\nHe realized he'd made her wait long enough and used his fingers to further part her gash. She howled like a wolf when he drove his tongue deep into her receptive cavity. Her whole body stiffened and her back arched off the bed. Rockets when off in Sophie's head as she climaxed like a banshee. \n\n\"Oh, fuck...ah...oh,\"\n\nWaves of bliss enveloped Sophie like a warm blanket. Her whole body vibrated as they spread like wildfire from her cunt to all areas of her mind and body. Her long fingers nearly tore Jason's hair out by the roots as she rode out the storm of her pleasure. He lapped away at the wonderful nectar that flowed from her like a fountain. Her pleasure seemed to last forever but also ebbed way to soon. She eventually let her body relax and fall back limp to the bed. \n\nJason didn't give Sophie much rest though before his tongue once again tortured and tormented the inner folds of her vagina. It bore like a drill bit around the slick hole only recently protected by her hymen. Her body began to react even before her mind was totally ready. \n\n\"You're driving me crazy,\" Sophie gasped.\n\nJason had purposely avoided touching her clit to this point. He worked around a little more until he sensed Sophie was building towards her next orgasm. He increased the speed of his movements and even slipped a finger into her tightly clenching hole. He wiggled it around until he felt the telltale hardened surface of her g-spot. He teased there driving her mad with craving to cum. When he had her built to the height he wanted, he mercilessly sucked her clit directly into his mouth.\n\n\"Fuck,\" Sophie screamed so loud anyone walking down the hallway outside the door would have heard it for sure. \n\nThe once shy and reserved girl exploded in orgasmic bliss like a tsunami crashing on the shores. Her whole body shook nearly unseating Jason's diabolical lips as they sucked her clit. His tongue teased her little capture nubbin with quick flashes back and forth. His finger in her cunt became two and he rubbed her inner core. \n\n\"Oh, god...good god,\" Sophie howled.\n\nJason waited until Sophie crashed, nearly spent, to the bed before he let up. He immediately pulled his fingers from her and replaced them with the head of his pre-cum dripping cock. He was so excited, he wasn't sure how long he could fuck her without cumming. He wanted to give her a good fuck though, so he eased in slowly to her incredibly tight passage. \n\n\"Oh, geez...you're driving me wild,\" Sophie growled. \"Go slow. I'm still a little sore.\"\n\n\"Okay,\" Jason hissed between pleasure clenched teeth.\n\nJason inched his cock slowly into Sophie. It took a few minutes for him to touch home plate deep inside her. When he did, he withdrew slowly before easing back in. He built a steady pace until Sophie started to match his thrust with opposite ones of her own. Pretty soon he was fucking her and repositioning her on the bed for greater penetration. He pushed her legs up higher towards her head and pile drove his cock into her.\n\n\"Urgh...urgh,\" was all Sophie could gasp every time he probed against her cervix. \n\nJason fought hard not to abuse her near virgin pussy too much. The wonderful tightness and slick inner walls gripped his cock like a soft wet hand. His balls screamed for release but he willed himself to hold off a bit longer. He wanted to give her another orgasm at the same time if he could last. Sophie was fucking back into him nearly as hard as he was into her.",
        "\"Oh, god, Jason...I'm going to cum again,\" Sophie soon claimed.\n\n\"Do it, Babe,\" Jason growled as sweat wet his face.\n\nAnother couple thrusts and she let loose seconds before he finally lost it too. His cock detonated inside her with strong blasts of fiery hot cum. Sophie was riding her own delectable orgasm when she felt the incredible heat inside her like lava from the earth's core. It pushed her orgasm to wonderful heights and she moaned loudly as each new delicious surge of pleasure followed the last. \n\nJason shot what felt like a massive load of cum into Sophie. In no time, his cock was swimming in both their combined juices. The combined brew began to run like a river out of her stuffed cunt and down the crack of her ass to the bed. Jason's cock was coated as it remained deeply lodged inside Sophie. His spasms finally passed along with hers.\n\nBefore too long, Jason rolled to the side as he was exhausted. His face was covered in sweat and both their bodies glistened from the perspiration of intense lovemaking and the blissful effort. They lay besides each other struggling to regain their breath. \n\nFinally stirring, Jason looked first to Sophie but her eyes were still closed. He then remembered Chad and rose up on his elbows to observe the other bed. Both were under the covers and appeared to be sleeping. They must have finished a good bit before Sophie and him. Jason decided to just lie back with Sophie some more. \n\nHe woke with a start and glanced to the bed stand clock as if worried he missed something. He quickly realized he hadn't as the clock just read seven. Jason got up to pee and woke Sophie in the process.\n\n\"Where you going?\" She asked.\n\n\"Bathroom.\"\n\n\"I need to come too?\"\n\n\"Sure. Here's my robe. I'll use a towel.\"\n\nThe pee led to a quick shower together at Sophie's bequest. A half hour later they were back in bed and she had the cock she had played with in the shower even harder. Her hands were stroking him wonderfully. \n\n\"Mmm...I love the feel of it,\" Sophie whispered in his ear. \"It's so hard, yet soft too.\"\n\n\"Your hands feel great.\"\n\n\"Jason, don't stop me this time.\"\n\n\"What?\"\n\n\"I want to suck you until you cum.\"\n\n\"Okay.\"\n\nSophie smiled at him as she repositioned between his legs. As soon as she was set, her tongue began a pleasing dance on the head of his cock. Her hands kneaded his balls and stroked the hard shaft. She didn't wait long before taking the head into her mouth. Her eyes looked up at him for approval and he gave her a smile.\n\nSophie sucked on Jason's cock for over ten minutes. She tried taking him deep several times but gagged as his head entered her throat. She eventually settled into a wonderfully fast and then slower routine that had Jason hovering on the edge. When he finally couldn't take it anymore, he held her head, and guided the pace. Sophie got the idea and eagerly complied. \n\n\"Oh, Sophie...I'm going to cum.\"\n\n\"Mmm,\" Sophie moaned, giving her consent.\n\nJason lay back with his forearm across his eyes as her sucking mouth created delicious tingling sensations that drove him wild. His cockhead expanded in her mouth seconds before letting loose. The intensity of the first spasm caught Sophie a little by surprise. The cum almost made her choke but she managed to successfully close off the back of her mouth before that happened. She moaned as his cock continued to unleash spurt after spurt of hot cum into her mouth. Unsure exactly what do to as he came, Sophie sucked tenderly on the head, and flicked her tongue against the now seeping hole. \n\n\"Oh, geez...that's good, Sophie,\" Jason praised. \n\nCurious about her reaction to her first completed blowjob, Jason leaned up on his elbows just as Sophie pulled back. He smiled as her lips compressed and slipped off his crown. She obviously still held much of the cum in her mouth. She glanced up at him as if for approval and direction. Her eyes gave away her thoughts.\n\n\"Swallow it,\" Jason encouraged.\n\nShe hesitated for a minute but then she swallowed the thick cum in her mouth. Jason watched as she gulped down the big load, her first. He reached for her cheek to congratulate her. He rubbed her cheek affectionately.\n\n\"That was great.\"\n\n\"Really?\"\n\n\"No doubt,\" Jason effused.\n\n\"Thanks.\"\n\n\"How's it taste?\"\n\n\"Salty...strange.\"\n\n\"Yeah,\" Jason said with a smile.\n\nSophie still held his shrinking cock and looked down to see a few more drops dripping from the tip. She leaned down and took them into her mouth and swirl them around on her taste buds. \n\nThe girls stayed till nine before they left. Chad and Connie had apparently hit it off well and they kissed passionately goodbye. The kiss made Jason feel Connie would be back to see Chad and hopefully he'd get more time with Sophie too. After the girls left, and Chad settled into studying, Jason made his entries secretly into the log book for the contest. He entered Sophie and Connie as eighteen and nineteen. He was just one shy of the record. He checked his watch and dialed his cell.\n\n\"Hello.\"\n\n\"Big Brother.\"\n\n\"Little, how's it going?\"\n\n\"Not bad, Mark, but I got some news.\"\n\nHe told Mark about the changes at the infirmary and his cherry popping of Sophie and Connie. Mark was amazed that Jason had already tied him since it took him till a senior to make his nineteen. \n\n\"You're amazing! I can't believe you're at nineteen already,\" Mark declared.\n\n\"Yeah, it's been a whirlwind but I'm in trouble now.\"\n\n\"You sure are with the file cards gone. I guess I need to call Mr. Caulfield and tell him the news. Not sure what he'll say. Do you have any good leads on other virgins?\"\n\n\"Only two for sure and you know one.\"\n\n\"I do?\"\n\n\"Yeah, Sierra, remember.\"\n\n\"Oh, yeah...she's still a virgin, ha?\"\n\n\"Yeah and the other one is Beth's roommate, Haden.\"\n\n\"Oh, man...you're screwed. Those are the only two you know for sure?\" Mark queried.\n\n\"Yep,\" replied Jason. \"I have two other names but I don't remember much about either one of them and doubt I'd even recognize either one if I saw them again. I just know their names, Candace and Meghan.\"\n\n\"That's too bad, Little. I thought for sure you'd be able to break the record.\"\n\n\"I haven't totally given up yet,\" Jason claimed.\n\n\"Ha...good luck. I'll let you know what Douglass Caulfield says.\"\n\nThey hung up after some small talk. Jason studied for a bit with Chad before turning in for the night. Jason's next exam was not till ten so he got swim practice in before. He was walking to the classroom when his cell went off. The display told him it was Mark.\n\n\"Hey, Big, what's up?\"\n\n\"Jason, got some bad news. I called Mr. Caulfield while I was driving to work this morning. I got him right away. I told him of the changes at the infirmary. Surprisingly, he already knew. He's calling the contest over as of next month. He's planning a party for all the Theta Chi brothers in the family. He plans to make the announcements of the end of the contest then. \n\n\"No...he can't do that yet. I need more time!\"\n\n\"Sorry, Little. The old man is dying and he wants to conclude the contest now that the card files, which are our verification process, are out of use.\"\n\n\"Damn!\"\n\n\"I know...not real fair to you that you don't have as much time as the rest of us, but he wants to be there for this dinner and apparently his health is fading fast.\"\n\n\"Shit.\"\n\n\"He talked about doing it just before Christmas break, the Saturday of December 10th.\"\n\n\"That only gives me a couple weeks,\" Jason complained.\n\n\"I know but it's his contest and money after all. Some good news though. He told me over the years the kitty has grown tremendously. There is nearly thirty million to split amongst all the brothers. Can you believe that, man, thirty million?\" Mark exclaimed.\n\n\"You're kidding?\" Jason pronounced.\n\n\"No, and the numbers over forty years work out to thirty-two guys. If no one wins the extra million for being top dog, and you're the only one that could, even if it looks bleak, that means that each virgin is worth $84,507. There were 355 virgins whose cherries we popped over the last forty years. If the contest ends as it is now, you and I stand to make 1.6 million dollars each.\"\n\n\"Holy, shit!\"\n\n\"I know. Can you believe it? All for helping woman by relieving them of their cherries.\"\n\n\"That's incredible.\"\n\n\"You happy I got you involved now?\"\n\n\"Yes, definitely! I wasn't early on but the contest has grown on me and now that I see the fruits of our labors, I'm even more thankful you got me involved in this.\"\n\n\"You're welcome, but you've done great at it too. The best really. Too bad you probably won't hit twenty.\"\n\n\"I know. That extra million would be amazing.\"\n\n\"Sure would. You'd end up with something like 2.5 million dollars. Not bad for Beth and you to start life together on, huh?\"\n\n\"I'll say.\"\n\n\"Well, I got to get back to work.\"\n\n\"Yeah, I'm outside my class now too.\"\n\n\"Have a good one, Little.\"\n\n\"You too, Big.\""
    ],
    "authorname": "BlewWater69",
    "tags": [
        "virgins",
        "frat",
        "college",
        "roommates",
        "contest",
        "cherries"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-cherry-poppers-ch-26"
}