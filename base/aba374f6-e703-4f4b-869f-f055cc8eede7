{
    "title": "Louise Ch. 08",
    "pages": [
        "Hans swore at how slowly the line was moving. He was about to decide to try to force his way in when his cell phone rang.\n\n\"We're on our way.\" Patrick said and then hung up.\n\nWhile he waited, he thought about Barb and his responsibility to her. Yes, he was obligated to protect her but he wasn't obligated to love her. No, he had no real choice in who his mate was but he didn't have to accept her as she was either. He also conceded that she might have had a reason for acting as she did but from his point of view, there was never a good excuse for rudeness and that a person was responsible for their actions no matter what happened to them.\n\nThe line moved up another foot or so and then stopped for several minutes before moving ahead again. His cell phone chirped when he was halfway to the front door.\n\n\"We're here.\" Patrick said. \"As far as we know she's alright, she's dancing with Blackwell.\"\n\n\"What's the plan?\" Hans asked.\n\n\"You stay in line and hopefully you can get in. Ethan is going to call Blackwell to see if he'll let us in... of course, he won't but we're hoping that it will buy us some time. The other thing that will help is if Barb hasn't mentioned us. If she did, it's going to be even more difficult to get her out.\"\n\n\"Understood, keep me appraised.\" Hans said and hung up to wait for entrance into the club.\n\n********\n\nOnce they were on the dance floor, Thorne took Barb into his arms with a smile that looked sincere. Barb hesitated but reluctantly allowed herself to be held. \n\n\"You really are quite beautiful.\" Thorne murmured in her ear. \"How is it that the Sinclaire's have kept you hidden?\"\n\nThat one question was enough to make Barb forget her caution. She began to tell Thorne about how they had been treating her.\n\n\"You should see the room that they put me in! It isn't even a suite and I had to catch a cab to the hotel because their plans were more important than my arrival.\"\n\nThorne barely listened to the litany of complaints, he was thinking. Suddenly he smiled... \n\n\"How would you like to spend the rest of your stay in a much nicer place? You could have whatever it is your heart desires.\"\n\n\"Really? And where would that be?\" Barb asked.\n\n\"I have a number of homes each fully staffed with servants that can and will meet your every need.\" Thorne replied. He knew what buzzwords to use with Barb and then turned on the charm. \"Of course I would understand if you declined. After all we've only just met and...\"\n\n\"Where are your homes?\" Barb asked all sense of caution completely gone.\n\n\"All over the world but I have several here in California including a few on private beaches....\"\n\n\"I like the ocean, do you know that they never even took me to see it?\" she whined.\n\n\"That is a shame.\" Thorne commiserated. \"Then if you agree to come with me, it would be one of the beach houses.\"\n\nLittle by little, Barb was sucked in. Now if any of the Sinclaire's showed up, he could tell them that she chose to come with him and they could do nothing about it. It would also be too late for her to change her mind. He chuckled to himself; it had been awhile since he fucked around with the high and mighty Sinclaires.\n\nNot wanting to seem over anxious, he let the subject drop. Just as the dance ended, Allen approached him.\n\n\"You have an important call.\"\n\n\"Thank you Allen.\" Thorne said and turned to Barb. \"I apologize but as I said earlier, sometimes I must mix business with pleasure.\"\n\n\"I understand.\" Barb said sweetly and watched who she thought would give her everything that she ever wanted walk away.\n\n**********\n\n\"Hello Ethan.\" Thorne said pleasantly. \"What can I do for you? Who? Ah yes... she's here. Of course, she may leave if she chooses to. Certainly... I'll have Allen meet you at the front door... yes, of course... I'll see you in fifteen minutes.\"\n\nThorne hung up and laughed, it wasn't too often that he pulled one over on Ethan Sinclaire.\n\nHe went back to the table where Barb was impatiently waiting. He could tell that she had made her decision, the money hungry bitch he thought to himself as he smiled at her.\n\n\"Were you serious about your offer?\" she asked before he had gotten settled in his seat.\n\n\"I was.\" he replied.\n\n\"Then I accept!\" she said happily.\n\n\"Really? That's wonderful but aren't you concerned about going to an unknown place with a strange man?\" he asked covering his bases. \"After all, I could be a mass murderer or something equally as horrible.\" he added.\n\n\"I'm a good judge of character.\" Barb replied, \"And I don't believe that you're any of those things.\"\n\n\"Thank you for your trust.\" Thorne replied taking her hand in his. \"We'll be able to leave shortly.\"\n\n\"I don't have anything with me....\"\n\n\"No worries, we'll have everything that you need at the house.\" Thorne replied. \n\n\"Barb!\" she heard from across the room. She looked up to see not only Kevyn but also Patrick, Nathan, Louise, Hans and Ethan approaching the table. She rolled her eyes and waited until they were at the table before she said anything.\n\n\"What are you doing here?\" she demanded.\n\n\"Taking you out of here is what.\" Kevyn replied.\n\n\"I'm not going anywhere!\" Barb retorted.\n\nNo one except for Nathan noticed Louise looking at Thorne with a horrified expression on her face.\n\n\"Sweetheart?\" he murmured and pulled her into his arms as he realized that she had completely dropped her shields. He strengthened his own shields but not before she began to vomit.\n\n\"EWWW!\" Barb yelled as she backed away as a spray of liquid just barely missed her.\n\nThorne looked at Louise with a curious expression on his face. He jumped as he felt Louise probing him even as she vomited. He looked at her, letting her probe him as much as she wanted. He jumped again when he felt Kevyn in his head. \n\n\"Well I'll be damned.\" he said not caring that Kevyn could hear him.\n\nLouise had stopped vomiting and looked around for something to drink. Seeing nothing, she looked at Barb.\n\n\"Don't go with him.\" she said weakly.\n\nThorne didn't say anything; this had to be Barb's choice.\n\n\"Barb, listen to her... he's... wrong... he's evil, for once in your life forget about money and come with us.\" Louise begged.\n\nThorne watched as the sisters tried to convince Barb to leave with them confident that she wouldn't go. The lure of what he could give her was much too strong.\n\n\"Go home to your perfect lives with your perfect men and leave me alone.\" Barb replied.\n\nHans stepped up to the table and looked at her for several seconds.\n\n\"Please come with us, this.... Man means to harm you. Once you go with him, we... I can't help unless you leave with us.\"\n\n\"Now you want to help me?\" Barb asked. \"You're nothing but a hotel clerk! What can you do for me? Make my bed? What?\" she demanded.\n\n\"Barb.\" Louise said softly. \"Remember that verse in the bible that says to beware of the wolf in sheep's clothing? He's the wolf. He looks so nice on the outside but Kevyn is right... he's wrong and he's going to hurt you. You have to come with us....\"\n\nBarb moved so that she was standing by Thorne's side.\n\n\"Mr. Blackwell has graciously offered me a stay at one of his beach homes; I'll call you when I get back.\"\n\nEthan had been silent up to this point waiting to see if the sisters could sway Barb. It wasn't long before he saw that it wasn't going to happen. When Hans' stepped forward, he hoped that the pull of mates would trigger something but it didn't. It was now up to him to get Barb out of Blackwell's grip but if she continued to choose him, it was out of his hands. Not even going to the council would help as long as she agreed to be with him.\n\n\"Thorne.\" he said as he stepped forward. \"Let's call this what it is. You're using her to fuck with us. Let her go and we'll settle our differences some other way.\"\n\nBlackwell smiled but it didn't reach his eyes.\n\n\"She is free to leave if she chooses or she can stay but I will promise you this, she won't forget her time with me if she decides to come.\"\n\nEveryone except for Barb heard the implications of that statement. What she heard was the promise of being pampered, waited on and mind blowing sex. Louise tried again.\n\n\"Listen to what he's saying! You've always had good instincts, listen to them!\"\n\nFor a split second, everyone, Thorne included thought that she was going to change her mind. Pressing her advantage, Louise kept talking.\n\n\"Listen to yourself! You know that he's bad!\" \n\nShe was crying and trying to break free of Nathan's arms convinced if she could just touch her sister that she would see reason. In a final attempt to jar Barb, she screamed, \n\n\"Hans is for you!\"\n\nBarb hesitated once again, looked at Hans and laughed. Ethan tried again to talk to Thorne who responded by asking them all to leave.\n\n\"I believe that she has chosen and I allowed you into my club so that you could see for yourselves that she is perfectly fine. Please see yourselves out.\"\n\nEthan looked at Barb ignoring Thorne.\n\n\"Barb listen to me.\" He said. \"I know that you think that Thorne is what you want but trust me when I say that he isn't. I also think that deep down you know that. I also think that your instincts are telling you to run as fast as you can and you're letting what you think you want and need cloud your judgment. That's something that I have a little experience with and I can tell you that it caused a lot of pain and suffering that is still being felt to this day. Please think about what you're doing.\"\n\n\"Nice speech.\" Thorne said snidely.\n\nLouise made a desperate attempt to break away from Nathan and actually touched Barb's arm.\n\n\"Please?\"\n\nFor the third time, everyone thought that Barb was going to change her mind and leave with them and for the third time they were disappointed. They watched helplessly as she laid a hand on Thorne's arm, her choice made.\n\n**********\n\n\"I don't understand!\" Kevyn shouted when they were outside of the club, \"Why in the hell couldn't we just grab her and make her come with us?\" she demanded.\n\n\"There are laws in our world just as there are in the human world.\" Patrick explained. \"She chose to stay.\"\n\n\"He tricked her! He had to have!\" Kevyn retorted.\n\n\"No he didn't.\" Louise said. \"He told her the truth and let her interpret it any way she wanted to. She was going to go with him no matter what we said or did.\"\n\n\"Because of money?\" Kevyn asked.\n\n\"He knew what she thinks she wants and he used it to his advantage but deep down Barb knows that he's bad.\" Louise replied. \"She also knows why he chose her... Patrick, why does he hate your family so much? That's why he wants her; he wants to hurt this family.\"\n\n\"But what about Barb?\" Kevyn asked.\n\n\"We can only wait until she wakes up.\" Nathan said.\n\n\"What if he won't let her go?\" she asked.\n\n\"He will if she says she wants to leave.\" Ethan said. \"That was the only thing that I could get him to agree to and that he won't hurt her too badly.\"\n\n\"So there's a chance that she won't go with him?\" Kevyn asked.\n\n\"There's always a chance.\" Ethan replied.\n\nLouise didn't say anything, she already knew that Barb was going with Thorne; the pull of his money was much stronger than the pull toward Hans and her family. There was one thing that she did say and she said it with confidence.\n\n\"She'll be back and she's really going to need us.\"\n\nSuddenly she was exhausted but amazed that she hadn't fainted although vomiting had been bad enough. She didn't object when Nathan picked her up and carried her to the car, she was just that tired. Once in the car, she closed her eyes and said a prayer for Barb, she was going to need it.\n\n****** \n\nHans went back to the hotel and straight to his suite without letting anyone know that he had returned. He had to wonder how much of Barb's going with Thorne had been his fault but then he remembered how she had looked at him as if he was nothing. Even at the club she had looked at him that way when he offered his help. And that laugh when Louise told her that he belonged to her... no, he decided, she was exactly where she wanted to be. He could only hope that Thorne didn't hurt her too much before she realized that she was going to bed with a monster.\n\nHe realized with a start that he wasn't jealous of the fact that she would be going to bed with another and he wondered what it meant. For a brief second he thought that maybe the fates had changed their minds after all but he knew better.\n\nAfter what happened, he once again wondered if it was possible for Barb to change and if she did, how long would it last? He stopped thinking about it; there was no point in driving himself crazy thinking about her and the fates. With nothing else to do but wait, Hans decided to go back to work. Before he left his suite, he said a prayer to the fates that Barb would come to her senses before Thorne hurt her too badly.\n\n******\n\nNathan carried an exhausted Louise up to their suite, laid her on the bed and started the bathtub. When it was ready, he woke her by softly calling her name and kissing her until she was awake. \n\n\"Come on sweetheart.\" he said as he led her to the tub.\n\nHe wanted to get in with her but didn't think that she was ready for that yet especially since she was worried about Barb but it would feel so good to sit behind her with his arms wrapped around her as he ....\n\n\"Nathan?\" Louise called, \"Are you alright?\"\n\n\"I'm fine.\" he replied, \"I'll be outside. Call me if you need anything.\"\n\nLouise watched Nathan leave the bathroom and realized that she did a lot of watching him leave and wondered what she should do about it. She slowly lowered her shields; she wanted to know what he was feeling. \n\nShe audibly gasped as she felt Nathan's desire for her and gasped again as her nipples hardened and moisture gathered between her legs. She quickly stripped, got into the tub, turned on the jets only to turn them off. The bubbling water only made her nipples and the area between her legs throb even more. She finished her bath, dried off biting back a moan as she dried off her too sensitive nipples and her private area. When she stopped and thought about it, the feelings of arousal began to grow stronger once she said yes to being Nathan's mate. She knew what it meant but she wasn't sure that she was ready for that step and wondered how one prepared themselves for making love for the first time.\n\n*******\n\nNathan waited in the bedroom for Louise to come out of the bathroom. Even through the closed door he could smell her, he could hear the rapid beating of her heart and he could feel her uncertainty. It was a reminder that she really was an innocent and that maybe she needed to talk to Kevyn. He already suspected that the sisters needed some alone time anyway and made plans to go check on the progress of the beach house. In spite of Barb and her stupidity, life had to go on.\n\nThe twin's wedding was less than two weeks away and he wanted the house to be finished by then. He also wanted the mating to be completed as well and judging by what was happening in the bathroom that was a very real possibility. He decided that today, he wouldn't settle for lying in bed and holding hands, she was going to sleep where she belonged, in his arms. He also decided that he wasn't going to attempt to hide his erection. It was time for her to understand that he wanted and loved her. He paused, he had never verbalized his feelings for her to her and another little piece of the puzzle fell into place. \n\nHe went to the other room, moved his belongings into the suite and changed his clothes. While he waited for her, he called the house site.\n\n\"How are things?\" he asked. \"Good, I want it exactly as I drew it. I want it done in less than two weeks... I'm aware of that. Call in extra crews and I'll pay triple time... Yes. Call me with any problems.\"\n\nHe had just hung up when Louise walked in.\n\n\"Feel better?\" he asked as he stood up to walk over to her.\n\n\"A little but I'm scared for Barb.\" Louise replied.\n\n\"I know and understand.\" Nathan replied as he put his arms around her. \"Come on, you're exhausted. You expended quite a bit of emotional and psychic energy tonight.\"\n\n\"But I didn't faint!\" she said with pride.\n\n\"No you didn't.\" Nathan said, \"But why did you lower your shields like that?\" He asked gently.\n\nLouise hesitated, \"I didn't mean to, at least not all of the way. I just wanted to feel what he was feeling. I have never felt such... anger and hatred. As you know, it made me sick.\"\n\n\"What did you feel from Barb?\" he asked.\n\n\"That she's out to prove that she can get a rich man... but underneath she knows that he's evil but she's convinced herself that she doesn't care or that she's reading him wrong.\"\n\n\"What?\" Nathan asked when she paused.\n\n\"One of the things that she kept telling me was that I wasn't being honest with myself. She says that I'm really after your money and that I'll get away with it...\"\n\nNathan stopped her.\n\n\"You are in no way like her other than in familial resemblance. I know that money... mine or anyone else's doesn't matter to you. Ignore that part of your conversation. Let's get you into bed.\"\n\nNathan led her to the bed, helped her in and climbed in behind her. When she reached for his hand, he took it and pulled her into his arms.\n\n\"This is where you sleep from now on.\" he told her as he molded himself around her. \"If you prefer to face me, that's fine but no matter which direction you choose, you sleep in my arms as a matter of fact, face me now, I have something that I want to say to you.\"\n\nHe waited for her to face him and then he continued.\n\n\"While you were bathing, I realized something.\" he said. \"I realized that for you words are just as important as actions. All of this time I've been showing you how I feel about you but I haven't told you. Louise, I love you. I love your sensitivity and your quiet strength. I love how you love your sister even though she's hurt you and I don't see any redeeming qualities in her. I love your enthusiasm when you're cooking a meal or simply watching one of the cooking shows. I am blessed to have found you.\"\n\nLouise was speechless. She knew that he cared for her- loved her but to hear it gave her an almost surreal feeling along with a feeling of... she searched for the word... contentment. Here was someone who could and would care for her in a way that she had been missing and hadn't really realized it.\n\nShe lay there in Nathan's arms trying to think of how she should respond when it came to her. The truth. She couldn't very well expect Barb to accept who she was if she wouldn't accept a few facts of her own. She was in love with Nathan Sinclaire and it was time to accept and admit it to him and to herself.\n\nNathan waited and watched as she slowly accepted what he told her. He wanted nothing more than to peek inside of her head to see what her response would be but he resisted. He had waited this long and he would continue to wait without cheating.\n\n\"I think.... No, I know that I love you too.\" she finally said.\n\nWhile she was nervous, what she hadn't expected was to feel a sense of relief. She felt as if she had carried around a secret that she was finally free to share and was experiencing the relief of telling it.\n\n\"Louise, look at me.\" Nathan said gently. He waited until he had her full attention before speaking. \"Thank you.\"\n\nLouise gave him a confused look, she was certain that they would consummate their new relationship and was surprised by the simple thank you and the urging her to sleep.\n\n\"I want to wait until this mess with your sister is resolved.\" he said answering her unspoken question. \"I want no distractions when we make love for the first time and I don't want it to be here. Tomorrow night if nothing has changed, I want to show you something.\"\n\nLouise didn't argue, she was honest enough to admit to herself that she would feel awkward enough making love for the first time without it being in Kevyn and Patrick's house.",
        "\"Where are we going?\" she asked already half-asleep. Her admission seemed to have drained the rest of her energy from her.\n\n\"It's a surprise.\" Nathan said kissing her, \"and I need to go check on it before I take you. Now get some sleep.\"\n\nA few minutes later Louise was softly snoring nestled in Nathan's arms. As she slept, Nathan said a prayer that nothing serious happened to Barb. He had spoken the truth when he said that he didn't see any redeeming qualities in the woman but she was the sister to his mate and he would treat her with respect and extend his protection to her for that reason.\n\nLouise tensed, muttered something in her sleep and relaxed again. He wondered if she was feeling something concerning Barb and shielded her. He had the feeling that she was going to need all of the rest that she could get.\n\n*******\n\n\"Stupid!\" Kevyn yelled as she paced their bedroom. \"How fucking stupid can she be?\"\n\n\"Kev...\"\n\n\"No, really! How stupid can she be? Even without him, being what he is its risky behavior! And for her to laugh at Hans like that?\"\n\nPatrick didn't try to interrupt again deciding to let her vent. When she was finally through, he stood up and hugged her. He could feel her trembling, she was scared and feeling a little guilty.\n\n\"Maybe we should have let her stay here or given her a really nice room...\"\n\n\"Kevyn, sweetheart, it wouldn't have made a difference....\"\n\n\"You don't know that!\" Kevyn said interrupting him.\n\n\"Yes I do.\" he replied. \"Lou knows it and so do you. She chooses to treat people the way she does and she was given every chance to leave with us but she chose to stay and think about it, Blackwell did nothing but present to her what he had to offer and left her to make her choice. That's why we couldn't forcibly take her and if we did, she would have only gone back. As much as I hate to say this... maybe she needs a good scare.\"\n\n\"But he'll hurt her and she doesn't deserve that.\" Kevyn replied.\n\n\"No she doesn't.\" Patrick conceded, \"But what happens now is in her hands and by the way, you have no reason to feel guilty for anything that you did. She didn't deserve to have the red carpet rolled out for her but I still maintain that she needs a good scare.\"\n\nKevyn sighed and relaxed into Patrick's arms. He was right she realized, she had nothing to feel guilty about and maybe Barb did need a good scare but did it need to be by a vampire who was obviously dangerous? Silently she cursed Barb for her greed and stupidity and then she prayed that she would come to her senses and come out relatively unscathed.\n\n\"So what's the deal between you and Blackwell?\" Kevyn asked.\n\n\"It isn't just me, it's the Sinclaire family as a whole and it goes back centuries. What really happened depends on who you talk to, them or us.\"\n\n\"Is this a Hatfield and McCoy kind of thing?\" Kevyn asked.\n\n\"Well... I guess you could say that except that there were no murders that I'm aware of.\" Patrick replied.\n\n\"Then what? Why does he hate this family so much?\" Kevyn asked.\n\n\"Let's get into bed and I'll tell you.\" Patrick said taking her hands and pulling her toward the bed.\n\n\"Oooh a bedtime story!\" Kevyn said teasing him.\n\n\"With a few adult intermissions.\" Patrick replied his eyes gleaming.\n\nSeconds later, they were on the bed naked and Kevyn was pressed tightly against Patrick. She closed her eyes and inhaled. The scent of his cologne, her favorite, 'Aramis'. She remembered her trips to the malls just to look around and stopping at the cologne counter smelling all of the scents and being drawn to that particular scent. She started asking for samples and when she had enough, she would send them home to her dad. \n\nWhen she heard that he had died, she bought a small bottle, took it home and put it on her father's face during the family's private viewing. Afterwards, she laid the bottle next to him in the casket. Even with that memory, that scent remained her favorite.\n\nPatrick stilled knowing that she was thinking about her father. When she told him the story, he stopped wearing the cologne thinking that it would upset her. When Kevyn found the cologne, she wanted to know why he didn't wear it.\n\n\"I didn't want to upset you.\" he replied.\n\n\"It won't... I love it and it gives me good memories not bad so will you wear it every once in awhile?\" she asked.\n\nThis night was one of those nights and he was glad that he was wearing it. He began a slow exploration of her body with his hands. His fingertips barely touched her skin as he traced her full lips with the tip of his tongue before kissing her slipping his tongue into her mouth and gently touching hers urging her to offer hers to him.\n\nKevyn moaned into Patrick's mouth as she offered her tongue and ground against his erect cock that was trapped between them. He pulled his hips back, lifted her leg, slid his cock between her legs, and began moving back and forth, the length and hardness of it running across her clit.\n\nKevyn's move counter to his thrusts and within minutes was moving erratically. Patrick stopped her by placing his hands on her ass and holding her still. He slowed and then stopped moving giving them both time to catch their breaths before he began moving again, slowly sliding his cock back and forth over her swollen clit slowing or stopping when she was about to come.\n\nKevyn broke the kiss, put her mouth at the spot where his neck joined his shoulder and bit. Patrick moaned against her head and lost what little control he had left. He flipped her onto her back and slammed into her coming as he did with her orgasm starting just after his.\n\nHe rolled to the side of her pulling her into his arms as he moved and took a moment to thank her for being with him.\n\n\"I know that you don't think that it's necessary but for me it is. Your being here is something that I never want to take for granted and I want you to know that. Now, do you still want to hear about the Sinclaire's and the Blackwell's?\"\n\nKevyn snuggled closer and got comfortable.\n\n\"Okay, I'm ready.\"\n\nPatrick started the story at the beginning.\n\n\"We were actually friends and allies at one time. Centuries ago, it wasn't uncommon for different families to form alliances not only against other families but also against the hunters that were so rampant back then. We were such an alliance. The Blackwell's were every bit as powerful as the Sinclaires were so we made a formidable pairing. There weren't many who chose to go against us.\"\n\n\"Were you alive then?\" Kevyn asked.\n\n\"No but Martin and Ethan were but they were quite young. I came into being a couple of centuries after the rift between our families.\" Patrick replied. \"Anyway, from what I was told, things were going well until one of the Blackwell's... Hunters trapped Darien. He begged for his life and when asked what he had to trade for it, he offered to take them to the home of other vampires....\"\n\n\"Yours.\" Kevyn murmured.\n\n\"Yes... since we were allies, ours was the first name that popped into his head. The hunters had no idea of what we were and how they knew what the Blackwell's were is a subject of some debate but at any rate, the hunters thought that they had win the lottery and came to the house. Fortunately, no one was there, the family had already changed locations. The hunters thinking that Darien lied to them took him to his family home where they thought to kill everyone there. In their eagerness and stupidity, they lost track of time and almost all of the hunters were killed. When the dust cleared, there were bodies everywhere.\n\nWhen Darien's father asked him how he came to be with hunters, he lied. You have to understand that Arthur Blackwell was a very stern father and tolerated didn't weakness of any kind. He tolerated betrayal even less. Darien couldn't tell his father that he had led the hunters to our home first; he would have been severely punished. So he told his father that a Sinclaire had set him up.\n\n\"And he believed that?\" Kevyn asked.\n\n\"Arthur believed him because he didn't think that any of his children would lie to him. Had he taken the time to question Darien more thoroughly, he would have uncovered the truth. Instead, he and the other males in his family went to our home, burned it and came to the home where we had moved. It was common practice for allies to let the other know where they were going. That way if there was a problem, help could be found.\n\nWhen they showed up, my father thought that something had happened and went out to meet them. Instead of asking my father about the accusation made against the family, they attacked. By the time the battle and that's what it was, was over, Arthur Blackwell, his oldest son Horace, the next to the youngest Darien and the middle son Lee were dead. Thorne and his youngest brother Noel were the only ones left standing.\n\n\"Did they explain why they attacked?\" Kevyn asked fascinated,\n\n\"Not really, the story didn't come out for a long time and when it did, my father tried to talk to Thorne and his brother. By then, they were convinced that Darien had told the truth but he was dead, the truth dying with him. For several years after that we tried to tell them that we had nothing to do with the hunters but they wouldn't believe us.\"\n\n\"Wait... how did you find out? Darien was dead.\" Kevyn asked.\n\n\"Remember that I said that they had killed almost all of the hunters. One of them was found wandering in the woods and brought to us. Under compulsion he told us what happened. We contacted the Blackwell's and asked to meet. The request was denied.\"\n\n\"What happened to the hunter?\"\n\n\"If you're asking if we killed him, the answer is no although it was well within our rights. We erased his knowledge of that night and us. We also told him that there were no such things as vampires or any other being and took him home.\"\n\n\"And you've never run into the Blackwell's again?\" she asked.\n\n\"We knew that they were here but we make a conscious effort to avoid any trouble with them. On occasion, just to remind us that they're here and that they haven't forgotten they'll do something like buy tickets to one of Katrina's fundraisers. They never speak to us or approach us and when it's over they go home.\"\n\n\"And now Barb has opened another can of worms.\" Kevyn sighed. \"I'm sorry.\" she added.\n\n\"Don't be.\" Patrick replied. \"Something was bound to happen anyway.\"\n\nKevyn closed her eyes wishing that she could erase the negativity of the past weeks and that Louise and Nathan would have had time to work out their relationship in peace. She tried to concentrate on the positive with the biggest one being that Louise was finally going to be happy if they could get Barb taken care of.\n\n********\n\nBarb watched them leave the club and pushed away any urge to follow them out. Of everything that had been said to her, Ethan's words had hit her the hardest. How he knew that she was ignoring her gut she didn't know but in the end, she had disregarded him too. The thing that she had wanted most was within reach and after only one night.\n\nShe chuckled as she thought about her and Hans together. Louise had to have been desperate in order to say something like that. She had never thought about Hans in that way and it wasn't going to happen, not ever. As she made that resolve, she felt a twinge actually more of a pain in her chest. She frowned and went to place her hand on her chest but the sensation was already gone.\n\nThorne watched Barb as she watched her family leave. She was wrong about her sisters and if there were any way he could have gotten his hands on either one of them, he would have tossed Barb on her ass. The one that really had intrigued him was the one who had thrown up. He realized that of the three sisters she was by far the strongest and a true empath... one of the strongest that he had ever encountered. However, she was mated and off limits... too bad he thought. He would make do with the one he had.\n\n\"Are you ready to go?\" he asked lightly touching her back.\n\n\"Don't you have to stay?\"\n\n\"Another perk of my position.\" Thorne said smiling down at her. \"I can delegate.\"\n\n\"Then I'm ready whenever you are.\" she replied with a coy smile.\n\n\"Excellent! Give me a few moments to wrap things up and I'll have Allen bring the car.\"\n\nHe bent down and kissed her cheek, \"I'll be back.\" he said and walked away.\n\n******\n\nThorne found Allen in the office. \n\n\"Go get the car... the limo and bring it to the front. We can give the bitch a little of what she wants.\"\n\nAllen smiled and then frowned.\n\n\"Why did you agree to let her go if she wishes?\" he asked.\n\n\"Why not? They must be going out of their fucking minds worried about her and we'll get to fuck her good and proper before she realizes that she's getting more than she bargained for.\" Thorne replied as he picked up the phone.\n\n\"So we're not going to...'\n\n\"No, we're not going to mar or kill her. She'll serve as a constant reminder to them that I'm still around but what will make it even sweeter is that she's consenting. They can't go to the council with it.\"\n\nAllen smiled again, \"I like the way you think.\"\n\n\"I'm glad that you approve now go get the car.\" Thorne replied.\n\nAfter Allen left, he made a phone call.\n\n\"Noel? Thorne here... how are you? Good. Are you behaving? Good, I can't wait to see it and you. Keep being good for mother and I'll see you soon.\"\n\nThorne hung up, and blinked back tears. Noel should never have gone with them that night. He was far too young and too sensitive for the violence that had happened and was going to happen. He had tried to convince his father to let him stay behind but he had refused.\n\n\"He is a male in this family and it is his duty as such to defend it!\"\n\n\"Please father, let him stay here with mother. He can protect her from any other hunters who are in the area.\"\n\n\"He comes.\" his father said and walked away.\n\nNoel had never been the same. Seeing so much violence was contradictory to his naturally kind, artistic nature, it had destroyed him. It was one more thing to hold against the Sinclaires. Thorne squared his shoulders and left the office to meet Barb at the table.\n\n*******\n\nBarb sat at the table and began to feel the niggling of doubt forming but she pushed it away just as Thorne walked up to the table.\n\n\"Milady, your chariot awaits.\" he said holding out his hand.\n\nBarb giggled, took his hand and followed him through the club. She relished the envious and downright hateful stares she got as she allowed Thorne to lead her to the car. She almost melted when his lips lightly brushed across her temple. She smiled when someone called out \"Good for you!\"\n\nThorne helped her into the car making eye contact with Allen. He had decided to take her to the beach home furthest away from the city. One, he had no close neighbors and two; it was where a majority of his toys were. As he smiled down at her, he found himself that he had one of the other sisters instead of her. Instinctively he knew that she wouldn't last long, which meant that he had to be relatively gentle with her.\n\nBarb squirmed around the back seat of the limo like and excited schoolchild. She tried to look out of the window to see where they were going but couldn't because they were so dark. Seeing what she wanted, Allen opened the moon roof and watched as she stood up in the seat and squeezed her upper torso through the opening.\n\nAllen closed the roof just enough that Barb couldn't get free, glanced back at Thorne and winked. Thorne moved over so that he was sitting where Barb would have been sitting and straddled her legs so that her feet were in his crotch.\n\nHe ran his hands up her legs and then down again moaning when her feet pressed into his hard cock. When his hands reached the top of her thighs, he stopped and then moved them so that they were cupping the globes of her plump ass. He moaned again when he felt her cheeks tense and then relax in his hands. He found the waistband of her barely there panties and pulled them down smiling as he realized that she was struggling to get free of her makeshift restraint.\n\nHis nostrils flared as the scent of her pussy hit him. Even though she was struggling, she was aroused. He brushed his fingertips across her shaved mound sighing as she moved trying to keep his finger in contact with her skin. He moved his hand away and watched as her body searched for his hand. Without further ado, he slipped a finger between her vaginal lips and moved it around avoiding her clit. This was part of the prep. He would tease her until they were almost to the house and then he would abruptly stop but he would have released at least once just from her feet massaging his clothed cock.\n\n******\n\nBarb wasn't sure of what she was feeling at first. When she tried to get back into the car, she couldn't move and they couldn't hear her yells to be let back in but when his warm hands grabbed her ass... she stopped struggling. It had been a long time since she felt hands grabbing her ass like that and it felt good. She moaned into the warm air when she felt her panties being removed and the exploration of a finger. Her nipples were rock hard and demanding to be touched but she couldn't get to them. Her dress was pulled down tight over her breast so she massaged her nipples through her clothes groaning in frustration when the male hand touching her moved away.\n\n\"Touch my clit!\" she yelled as she tried to move her hips so that the hand would touch her there just once but it didn't happen. By the time she saw the house that had to be Thorne's she was frantic with the need to come. A few minutes later, the car was parked and Barb was sitting in the seat of the car waiting to be helped out.\n\n\"That was mean.\" she said when Thorne offered his hand.\n\n\"Was it?\" he asked. \"I thought that you enjoyed it.\"\n\n\"I did but...\"\n\n\"But what?\" Thorne asked coolly.\n\n\"I didn't come but apparently you did.\" She replied looking down at the large wet spot on the front of his slacks.\n\n\"So it would seem.\" he replied nonchalantly. \"Would you like to come in?\"\n\nBarb didn't like his tone but agreed to go in. Her mouth dropped open as she walked into the house where the foyer was large enough that it had a large fountain in the center of it.\n\n\"This is beautiful!\" she gushed.\n\n\"I'm glad that you like it.\" Thorne replied not caring whether she liked it or not. It wasn't as if she was his mate or anything like that. \n\n\"Follow me.\" he said his tone even cooler than before.\n\nBarb followed Thorne thinking that he was going to give her a tour of the house. She had become determined that she would be living in the house in the future. To her surprise, instead of a tour, he led her to a bedroom.\n\n\"The bathroom is over there, take your time.\" Thorne said and walked through a door that led to an adjoining room.\n\nBarb looked at the closed door, shrugged and went into the most luxurious bathroom that she had ever seen. She took the time to touch the gold plated faucets before turning on the shower and then stripping. She stepped into the shower-taking note of the variety of hair, skin and bath products and realized that her intended was a player.\n\n\"Not for long.\" she muttered as she chose a shampoo and body wash combo. When she was through, she combed her hair, brushed her teeth and oiled her skin. When she came out of the bathroom, a black teddy complete with garter stockings were laying on the bed.\n\nShe frowned wondering how he knew what size she wore but decided that he just had a good eye... any player did. She put the items on and sat on the bed to wait.\n\nThorne entered a few moments later completely nude and looked at her.\n\n\"Very nice.\" he said as he walked over and stood directly in front of her so that his cock was in her face.\"\n\n\"Ummm I don't do that.\" Barb said understanding what he was waiting for.\n\n\"Really?\" he replied mildly.",
        "\"Really.\" Barb replied.\n\n\"Fine.\" Thorne replied as he dropped to his knees, pushed her back, opened her legs and began to lick and suck at her clit. Within seconds, Barb had the most intense orgasm of her life. She screamed until her throat was sore and still Thorne didn't stop. \n\nWhen he was finished, he stood up, grabbed Barb's hand, pulled her up into a sitting position and told her to open her mouth.\n\n\"I... that was great but...\"\n\n\"It's my turn now open your mouth.\" Thorne demanded.\n\n\"I....\"\n\n\"Now.\" Thorne said his tone implying that he wasn't going to take no for an answer. \"And I happen to know that you have done this before.\" he added.\n\n\"Once but I didn't like it.\" she replied.\n\nThorne didn't reply but held his cock to her lips and waited.\n\nReluctantly Barb took the head of his cock into her mouth and began to suck on it. Tiring of her unwillingness, Thorne took her head in his hands and began to thrust in and out of her mouth only letting go when she was sucking him off on her own and actually seemed to be enjoying it. He came with a bellow when she inadvertently scraped her teeth along the sensitive underside of his cock.\n\n\"Very good.\" he said as he caught his breath.\n\nIt was then that Barb made another of many mistakes; she thought that she had Thorne under her control.\n\n\"Eat me out again but slower this time.\"\n\nThorne's eyes turned a hard green as he responded to her.\n\n\"You are here because I wanted you here. You are here to do MY bidding. You are here because you were stupid and greedy enough to come to the house of a man that you knew nothing about. You are here because you didn't listen to your instincts or to that fucking family of yours. YOU do not give ME orders! Do you understand or do I need to explain it again?\"\n\n\"I.... I get it.\" Barb whispered. The feeling that she was a lamb being led to slaughter returned as she watched Thorne bend over her, open her legs and ram into her. He didn't exactly hurt her but she had the feeling that he could if he chose to. In spite of the almost rough treatment, Barb felt herself responding and came just before he did.\n\n\"Go get cleaned up.\" he said gruffly as he rolled off her.\n\nWhen she came out, Allen was sitting on the bed.\n\n\"What are you doing here? Get out!\"\n\n\"Thorne asked me to keep you company. He also said that you do a decent job of sucking cock once you get into it. Care to show me?\"\n\n\"Get out! Before I tell Thorne!\"\n\n\"Sweetheart, he knows that I'm here now come over here and suck my cock!\"\n\n\"No. I'm here with Thorne...\"\n\n\"Let me ask you something, why do you think he chose you?\" Allen asked.\n\n\"Because ... I'm...\"\n\n\"Beautiful?\" Allen finished for her. \"That's true but Thorne loves to break women like you. He can smell a gold digging bitch from a mile away and you sweetheart reek. You came here thinking that you could control him and me but guess what? You were wrong.\"\n\n\"Are you going to rape me?\" Barb asked.\n\n\"As much as I would like to, no... There are boundaries that I can't cross tonight but that doesn't mean that I won't get what I want. How hard you make me have to work for it is up to you... I enjoy a challenge.\"\n\nBarb's heart pounded, this wasn't what she had planned on or wanted. \n\nAllen watched her fighting the urge to just grab her and fuck her brains out. He could tell that she was trying to work out some kind of deal when all the stupid bitch had to say was that she wanted to leave.\n\n\"If I do this, will you go and not come back?\"\n\nAllen smiled but didn't answer knowing that she would take his smile as agreement to her terms. A minute later, his cock was in Barb's mouth. Just before he came, he pulled out and slid into her almost gently.\n\n\"Hey!\" Barb screamed but he had already emptied inside of her.\n\nAllen got up, smiled at her and walked away.\n\n\"By the way, thanks for the fuck. Thorne is on his way up; you might want to get cleaned up.\"\n\nBy the time the night was half over, Barb had fully realized her stupidity. She had had enough and she wanted to get away from Thorne before he seriously hurt her. Each subsequent encounter presented a more demanding Thorne who no longer cared about her pleasure. She realized that he never had but it was the last time that they talked that she really understood that he didn't like her or the Sinclaires.\n\n\"So, how does it feel to be used and treated like shit?\" he asked her after he had taken her for the seventh or eighth time since they arrived at the house.\n\n\"What are you talking about?\"\n\n\"I'm talking about the way that you treat others. I treat people badly too but I admit it and don't care what people think about it. I love money and I don't care who knows it but you... you put on airs instead of saying what it is you want and then you try to control me. However, there's another reason for why I brought you here and it's a lesson that I hope that you will remember... I know the Sinclaires. We have quite the history and I love fucking them over...\"\n\n\"What? You mean....\"\n\n\"Exactly, but to be honest, I would have preferred the one who threw up... she would have fought and not rolled over like some bitch in heat looking for a payout. Oh wait... did you really think that I wanted you? That I was going to move you in here?\"\n\nThorne laughed and went for the final blow.\n\n\"You were a means to an end. As soon as you mentioned the Sinclaires, I knew that I had a way to stick a thorn - no pun intended, in their side. And by the way, you weren't even that good of a fuck.\"\n\nBarb's throat closed as tears ran down her face. All she wanted to do was go home.\n\n\"That lesson I mentioned?\" Thorne asked, \"Stop the damned name dropping. As you can see it got you more than you bargained for.\"\n\n\"I... I want to leave.\"\n\n\"Go.\" Thorne said coldly, there's the door.\"\n\n\"But I don't know where I am....\"\n\n\"Get dressed; Allen will drop you off somewhere.\"\n\nSomewhere turned out to be in the seediest part of town. Allen all but pushed Barb out of the car before he took off not bothering to look back to see if she was alright Barb stood on the corner trying to get her bearings. She had no idea of where she was and was too afraid to ask. She was about to start moving when a woman, a prostitute shoved her.\n\n\"Move it bitch!\" she snarled even as she plastered a smile on her face for the car pulling up to the corner. \"Hey baby...\"\n\n\"Not you... her.\" the man in the car said looking Barb up and down.\n\n\"No... I don't....\" she didn't finish her sentence and rushed away. \n\nShe ignored several rude comments as she looked for a place to sit down. She hurt all over, emotionally and physically but she kept walking until she found an all night coffee shop. She went in, sat down at a booth in the corner and began to shake.\n\n\"Hey, you alright?\" a gentle voice asked.\n\n\"Do I look like I'm alright?\" she snapped.\n\nThe young man who was on duty stepped back.\n\n\"Sorry... let me know when you want to order you can't just sit in here.\"\n\n\"Look, I'm sorry... I had a bad night... I'll take a coke.\"\n\n\"Sure thing.\" he replied and walked away.\n\nWhen he brought the drink back, Barb asked him where she was.\n\n\"Where do you need to be?\" he asked.\n\nHe whistled when Barb told him where she was staying, \"How'd you get all the way over here?\" he asked.\n\n\"Long story... how much do you think a cab will cost me?\" she asked.\n\n\"From here? A lot. Don't you have someone that can come get you? It would be cheaper and faster.\" he advised.\n\nThe one thing that she didn't want to do was to call Kevyn, she didn't want to hear the questions and if she got back to the hotel, she wouldn't have to tell them anything. She could just tell them that she wasn't going to see Thorne anymore.\n\nShe counted the money in her purse and counted fifty dollars in cash. She saw a bank across the street but was too afraid to go back out.\n\n\"Do you think that a cab will be more than fifty dollars?\" she asked.\n\n\"Shouldn't be if they're honest.\" he replied.\n\nHe left the table when a customer came in. The customer must have been a regular by the way the young man greeted him.\n\n\"What do we have here?\" he asked as he mentally undressed Barb.\n\nShe didn't hear the reply; she was on the phone with Kevyn.\n\n*******\n\nKevyn had finally drifted off to sleep when the phone rang. Patrick reached over and called it to his hand. \n\n\"Hello.\" he whispered.\n\nThere was no answer at first. Just as he was about to disconnect, Barb spoke.\n\n\"Hi... can you guys come get me?\"\n\n\"Barb? Where are you? Where? How in the hell.... Never mind, we're on our way.\"\n\n\"Kev? Baby wake up. Barb just called.\" Patrick said softly.\n\n\"Is she alright? Where is she?\" Kevyn asked as she jumped out of bed.\n\n\"What? He left her there?\" Kevyn asked.\n\n\"Apparently, I'll call Nathan, I'm sure that Louise will want to go along.\"\n\nLouise and Nathan met them in the garage by the Lexus Minivan. The ride to the coffee shop was quiet as each of them tried to imagine what condition they would find Barb.\n\n\"She can't be physically hurt if she's at a coffee shop right?\" Kevyn asked.\n\nPatrick wanted to agree with her but didn't say anything to either confirm or deny what Kevyn said. He didn't want to tell her that just because she was at the coffee shop; it didn't mean that she wasn't hurt. It seemed to take forever before they reached the coffee shop, which now had a few customers, most of whom were male.\n\nThey found Barb huddled in a corner booth trying to avoid the leering stares of some of the men. Kevyn and Louise rushed over to her and looked her over.\n\n\"Are you alright? Are you hurt?\" Kevyn asked.\n\n\"I'm ok, I just want to go back to my room and take a hot bath.\"\n\nLouise carefully lowered her shields. She didn't sense any real physical suffering but sensed a great deal of emotional pain. Thorne Blackwell had emotionally whipped her and then left her in the worst part of town to tell her exactly what he thought of her.\n\n\"You can come back with us...\"\n\n\"No but thanks, I need to be by myself for awhile. I'll call you later.\"\n\nKevyn started to insist but Louise shook her head. Whatever it was that happened at Thorne's house, Barb needed time to process it. She had to be the one to tell them when she was ready to talk. Louise sensed another thing that saddened her, Barb had turned away the one person who could have loved her. She just didn't know it yet.\n\nThey took Barb back to the hotel bypassing Hans who was at the front desk. Kevyn was puzzled by the fact that he didn't react when Barb walked by and chalked it up to him being angry not that she blamed him. Nathan and Patrick waited in the lobby while the women went up to the room.\n\n\"Barb, are you sure that you're alright?\" Kevyn asked.\n\n\"I'm really tired... Do you mind?\" she replied.\n\n\"Sure... just call if you need anything.\" Kevyn replied.\n\nAfter they left the room, Kevyn stopped Louise.\n\n\"What did he do to her?\"\n\n\"He hurt her but not physically at least not much... Kev, Hans isn't her mate anymore.\"\n\n\"What do mean? Of course he is! It's forever.\" Kevyn said\n\n\"But they never connected as mates and when he reached out to her, she turned him away. I don't know or understand the ramifications of it but that's why he didn't react when he saw her. He didn't care for her in that way anyhow, at least not the way she was but she didn't want him, she wanted the glitter that she thought Thorne was going to give her.\" Louise replied.\n\n\"Will she be alright?\" Kevyn asked looking back towards Barb's room.\n\n\"That like everything else is up to her.\" Louise replied.\n\nKevyn looked at Louise and realized how different she really was.\n\n\"You really are something you know that?\" Kevyn said as she put her arm around Louise's shoulder. \"You don't say a lot but when you do...\"\n\nLouise blushed. It was her turn to stop Kevyn.\n\n\"Can I ask you a really personal question?\n\n\"Sure... I think.\" Kevyn replied.\n\nLouise looked around to make sure that they were alone.\n\n\"How... how do you know when its time to... you know...\"\n\n\"Ummm oh boy... it's different for everyone but the main thing is whether you trust him and if you care about each other. Lou, do you love him?\" Kevyn asked gently.\n\n\"Y... Yeah I do.\"\n\n\"Have you told him?\"\n\n\"We talked after we got back from the club; he said that he loves me.\"\n\n\"Thank God!\" Kevyn exclaimed hugging her. \"I am so happy for you! But as to the other part, do what you told Barb to do... follow your instincts and Lou, trust Nathan.\"\n\n\"I know that they're waiting but can I ask another question? Why did you choose not to change?\"\n\nKevyn paused unsure of how to answer the question. The reality of it was she hadn't given it any thought mainly because she was happy as she was.\n\n\"I haven't really thought about it but that doesn't mean that I won't at some point. I think that I'm still adjusting to the whole mate thing and a few other issues. But Lou, if it's what you want then go for it.\"\n\n\"Thanks... I guess we'd better get going.\" Lou replied.\n\n\"Lou, they can wait... what else is on your mind?\" Kevyn asked.\n\n\"Nothing, just nervous I guess.\"\n\nThe sound of a door opening, closing and the sound of voices ended their conversation. An elderly couple joined them in front of the elevators and got off on the same floor.\n\nNathan and Patrick stood when they got off the elevators and met them partway.\n\n\"We thought that since it's so late that we would stay here. That way if Barb needs you we're close by.\" Patrick said after kissing Kevyn on her temple.\n\n\"I think that's a good idea.\" Kevyn replied looking at Louise who suddenly seemed even more nervous. \"Are you ok with this?\" she asked\n\n\"I'm fine.\" Louise replied softly. \n\n\"Good, I'll let Hans know.\" Patrick said.\n\n\"Is he alright?\" Louise asked.\n\n\"Believe it or not, he's fine for the moment.\" Patrick replied. \"I'll be right back.\"\n\n********\n\nBarb stood in the shower trying to wash the evening away. She regretted going to the club after she had been warned and she regretted going with Thorne Blackwell. She got out of the shower, dried off and climbed into bed without oiling her body as she usually did. She covered her head and cried herself to sleep.\n\n*******\n\nHans was relieved. Had she not broken the bond he would have honored it and found a way to live with her. But it was no longer an issue. Her breaking the bond had done something else; there was now the possibility that he would be given a new mate. It didn't mean that he wasn't concerned for her; he just didn't have to deal with her unless he chose to. The last thing he did before going to his suite was to check with Nathan and Patrick to make sure that all was well. Satisfied that they were pleased, he gave shift report and went to his rest with a relaxed mind.\n\n******\n\nLouise looked around the suite, which was even more elaborate than the one in Pittsburgh. She nervously looked at the bed and then at Nathan when she realized that they hadn't come prepared to sleep away from home.\n\nNathan knew what she was thinking and went into the bathroom and came out carrying a pair of pajamas. \n\n\"No worries but Louise, I sleep in the nude. I only slept in clothes at the house so that you would be more comfortable. But you can sleep in clothes if you want.\"\n\n\"You don't mind?\" she asked.\n\n\"I want nothing more than to rest with your skin touching mine but for now I don't mind.\" he replied as he held the pajamas out to her.\n\nLouise realized that she was at another impasse. Kevyn's words ran through her mind as she debated, \"trust your instincts and trust Nathan\". She took the pajamas from his hand, laid them on the bed and began to unbutton her top.\n\nNathan held his breath as Louise unbuttoned her blouse one button at a time with trembling hands. He wanted to tell her that they could wait but he didn't. It was time to see how far they were going to go. He stood still too afraid to move, not wanting to take his eyes from hers. He could see the uncertainty in her eyes and gave her an encouraging smile.\n\nFinally, the shirt lay open exposing her medium sized breasts that were being restrained in a plain white bra. In the back of his mind, Nathan made a mental note to take her shopping for pretty things but for now, that white bra was the sexiest piece of lingerie he had ever seen.\n\n\"You're gorgeous.\" he breathed as he moved slowly toward her.\n\nLouise bit her lip and looked down.\n\n\"Don't look away.\" Nathan said as he placed a finger under her chin and tipped her face up to his. \"You have absolutely nothing to be embarrassed about.\" \n\nLouise's eyes met his and the throbbing began. Her skin tingled where he touched her and the room suddenly felt too hot and her clothes too tight. Her lungs wouldn't expand enough to let her take in a breath and her heart pounded.\n\nNathan bent down and kissed one temple and then the other and then her lips.\n\n\"Sweetheart breathe.\" he said as he blew a gentle breath into her mouth repeating it when she still held her breath. \n\nThe second time he blew into her mouth, she let out a gush of air and was about to hold her breath again when Nathan stopped her.\n\n\"No, don't, you're going to pass out if you do.\"\n\nHe led her to the bed, sat her down and knelt in front of her keeping a close eye for any signs that she was getting overwhelmed. He took off her shoes and socks and rubbed her feet all the while looking up into her eyes. Finally, he stood, removed his shirt and sat next to her on the bed. Taking her right hand in his, he brought it to his lips where he kissed it and then laid it on his chest over his heart.\n\n\"I belong to you and no one else. There is no one or anything that will keep me away from you. Everything that I have is yours to do with as you wish. I have but one question; will you become my mate in body as well as in mind and spirit?\"\n\nLouise didn't trust herself to speak, she nodded her head yes.\n\n\"I need to hear you say it.\" Nathan said as he kissed her temple again.\n\n\"Y...Yes.\" she whispered so softly that had it not been for his enhanced hearing, he wouldn't have heard her.\n\n\"Thank you for accepting me as your mate and I accept you as mine.\" \n\nNathan stood and gently pulled Louise to her feet. When she was standing, he eased her blouse over her shoulders, down her arms dropping it to the floor. He bent down, kissed her trailing soft kisses along her jawbone down to her neck and back to her lips.\n\nLouise closed her eyes, began to relax allowing herself to enjoy the sensations of Nathan's lips and hands on her body. She barely noticed when her slacks were slipped over her hips and pooled at her feet. Now dressed only in her bra and panties, she was gently eased back onto the bed.\n\nNathan stood back and looked at her as if he was committing her to memory and then undressed. He stood in front of her for several minutes letting her see him nude for the first time. After several minutes, he lay on the bed next to her and took her hand in his.\n\n\"I want you to explore my body. Don't worry about hurting me, you can't. Take your time in exploring what belongs to you.\"\n\nLouise lay still for ten minutes while Nathan patiently waited. Finally, she reached over and touched his face. She remembered from some medical program the term \"head to toe assessment\". She ran her fingers over his eyes, nose, cheeks and lips blushing when he smiled.\n\n\"I like the way that you touch me.\" Nathan commented when she touched his lips. Taking that as a request to touch his lips again, Louise traced his lips with her fingertips jumping when he kissed them. He lay patiently as she made her way down his chest and lingered on his nipples. He closed his eyes and hoped that she would suck on one. When she didn't, he kept his silence and let her play. As the minutes ticked by, her touch while still gentle had become more confident. The only time he spoke was to tell her that he liked what she was doing. ",
        "He took a deep breath to calm himself when her hands skimmed over the skin of his stomach and held his breath when she finally reached his cock. \n\nLouise quickly learned what the different sighs and breaths meant. She couldn't believe that she was actually touching a man in a very sexual way and that he was enjoying it. She reminded her self that Nathan wasn't just any man. He was her mate. She loved the way his skin felt against her fingers as she made her way down his body. When she got to his cock, she stopped, looked at him, waited and gently took it into her hand. She was amazed at the contradiction in textures. The head was huge, soft and felt spongy while the shaft was rock hard but the skin was satiny smooth and soft. He was long but not excessively so but then she had no frame of reference and he was wide enough that she couldn't quite get her hand all the way around it. She gently took one ball and then the other in her hand marveling at their texture and weight.\n\nWhen she was done with the front, he turned over, lay on his stomach, and closed his eyes as she rubbed her way down his back to his ass kneading it gently. When she was finished, he told her that it was her turn. Like her, he started at her face and made his way to her breasts. Her hard nipples tented the fabric of the bra in invitation to be sucked on. \n\nNathan couldn't resist. He pulled the straps of her bra down over her shoulders, kissed them and then pulled the cups down exposing her dark breasts and chocolate colored nipples. He hardened even more when he heard Louise's gasp of surprise and moans of pleasure as he kissed and suckled one nipple and then other. He allowed his hand to drift downward as he sucked, nipped and rolled her nipples between his lips and teeth.\n\nLouise let out another gasp of surprise as Nathan touched where no one had ever touched her before. Nathan let the nipple fall from his mouth and moved so that his lips were pressed against her ear.\n\n\"Trust me.\" he whispered, \"Let yourself go and trust me.\" he said as he slipped a finger between her nether lips.\n\nThe throbbing between her legs was almost painful and she was soaked. Nathan made a slow lazy circle around her clit closely monitoring her reaction. Instinctively her hips jerked in response to the touch telling him that she wanted more.\n\n\"Open your legs for me, good... like that.\" he murmured against her ear. \n\nWith a thought, the panties were gone and Nathan had one finger deep inside of her while his thumb bumped and flicked across her clit. Then there were two fingers and then three slowly moving in and out while stretching her virginal vaginal entrance preparing her for him. His thumb increased the pressure and speed against her clit and suddenly, she stiffened and then began to writhe against him. \n\nThe orgasm had caught her unawares, she knew that it would happen but she hadn't been prepared for it. She tried to hold back the scream that escaped her lips but failed. Nathan held her sweat-slicked body close to his murmuring in her ear how much he loved her. When she calmed, he rolled so that he was on top of her supporting his weight on his arms.\n\n\"Sweetheart, are you ready?\" Nathan asked fully prepared to stop if she said no.\n\n\"I... yes.\" Louise replied her voice shaky.\n\n\"Quick is best so when I say three, take a deep breath.\" he advised. \"Alright, one... two... three!\" he said and rammed into her and then stopping when he felt her maiden head give. \"Sweetheart? Are you all right? It's done. We are officially mates... Lou?\"\n\nNathan looked at Louise closely.\n\n\"Lou? Baby wake up!\"\n\n\"I... I'm awake... I just didn't think that it would hurt that much. I'm ok.\"\n\nNathan sighed in relief. She had just lost consciousness for a few seconds. After making sure that she was all right, he began to move with barely perceptible movements increasing them as he felt her relax and begin to respond. He took his time making his thrusts slow and gentle. He didn't increase his pace even when he was close; he was all about the comfort of his mate. They both cried as they came together for the first time as mates. Afterwards, Nathan talked to her in low soothing tones until she stopped shaking. He held Louise as tightly as he could without hurting her planting soft kisses on her head.\n\n\"I love you Louise Sinclaire.\" he whispered.\n\n\"I love you too.\" Louise replied sleepily. A few minutes later, she was snoring.\n\n********\n\nBarb had finally fallen asleep when she woke up with a start. She sat up, looked around and seeing nothing that should have woken her, she covered her head and went back to sleep.\n\n********\n\nThorne and Allen were sitting in the den discussing the evening and laughing about Barb's reaction when she had been dropped off in the worse part of town.\n\n\"You should have seen her face!\" Allen said laughing. \"I still say that we should have slipped her something and then dropped her off.\"\n\n\"No... I...\" Thorne froze mid sentence. His face had an expression of shocked horror on it.\n\n\"Thorne?\" Allen called. \"Thorne! What the hell just happened?\"\n\n\"No way... no fucking way!\" he said as he stomped out of the den leaving Allen alone confused as to what had just happened."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/louise-ch-08"
}