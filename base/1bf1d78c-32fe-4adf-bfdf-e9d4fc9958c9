{
    "title": "WICKed Hormones Ch. 10",
    "pages": [
        "***** DISCLAIMER *****\n\nThis is a complete work of fantasy. All sexual participants are 18-years of age or older.\n\n***** AUTHOR'S NOTES *****\n\nOnce again a big thanks to my editor and to all of you that take the time to read my work. I hope you enjoy this installment...\n\nCHAPTER 10\n\nMelissa Turner sat on the comfortable sofa in the living room while Karen was getting them some fresh coffee in the kitchen. The young attorney finally made it back to the Mitchells' home after a couple of hectic and busy weeks. She came today with two things on her agenda; first, update Karen on the progress of the case against Dr. Michael Grant, and second, a \"visit\" with Jacob concerning his medical condition.\n\nFor Melissa, the past couple of weeks felt like an eternity. Due to a staff shortage, her fianc\u00e9 Donnie Baxter spent most of his time at the hospital. When the young doctor was at home, he mostly slept and rested to gear up for more double shifts. Therefore, Melissa's sex life had come to a virtual standstill.\n\nThe hormones in Jacob's semen had spiked Melissa's already high libido into the stratosphere. With Donnie either not around or out of commission, the young attorney had to shamefully resort to more masturbating to maintain a sense of normalcy. She found herself occasionally going to the ladies' room and locking herself in a stall for orgasm breaks in order to function at work.\n\nMelissa loved Donnie with all her heart, and there was no doubt they would one day be married. She would be his adoring wife and the doting mother to their future children. However, with their professional lives leaving them little time together, Melissa had physical needs and cravings that Donnie at this time could not fulfill. Therefore, Melissa returned to the Mitchells' lovely suburban home like a junkie looking for a fix, and Jacob, her discreet teenaged dealer.\n\nAs Melissa waited for Karen to return, she realized she was sitting in the exact spot where it all began. The young attorney's mind suddenly drifted back to when she first met Jacob Mitchell and was introduced to his intimidating and incredible freak of nature.\n\nThe memory of their salacious encounters and the immoral pleasures Melissa experienced caused her hungry vagina to salivate. She could already feel the moisture collecting in the gusset of the skimpy panties she wore underneath her black skirt. She hoped that soon her office attire would be lying on the floor in Jacob's bedroom while the teenager fed her ravenous pussy with endless servings of his delicious man-stick.\n\nKaren soon returned with a tray of coffee and refreshments then the two ladies picked up with their conversation. Melissa continued to summarize the status of the case and the plans going forward.\n\n\"So if I hear you correctly, the DA is planning to go ahead and cut a deal with Dr. Grant?\" Karen asked while stirring her coffee.\n\nAfter taking a sip from her cup, Melissa replied, \"Yes... it does appear so.\"\n\nPicking up her cup, Karen asked, \"So the victims and their families are on board with this? Letting Dr. Grant walk away with no jail time?\"\n\nNodding, Melissa replied, \"As long as the defense agrees to all the stipulations presented by the District Attorney's office... then yes.\"\n\nWith an angry tone, Karen said, \"I don't like it one bit! That man is a criminal and should be locked away for a very long time.\" The irate mother then sighed and softened her tone. \"But... I guess the most important thing is that Dr. Grant turns over the antidote, so Jake and the others get cured of their afflictions.\"\n\nMelissa chuckled and responded, \"Let's hope karma will end up getting his ass!\" After taking another sip of coffee she noticed Karen straighten up and grimace as the lovely mother rolled her shoulders. \"Are you alright?\"\n\n\"Yeah, I'm fine,\" Karen replied, waving her hand. \"I played tennis this morning, and somehow I twisted my back. My shoulders have been hurting ever since.\" She chuckled and added, \"My old body isn't what it used to be, I guess.\"\n\nSetting her cup down onto the coffee table, Melissa said, \"Well here, maybe I can help.\" She then scooched over closer to Karen and added, \"Turn your back to me.\"\n\nKaren scrunched her brow. \"What?\"\n\nMelissa put her hands on Karen's shoulders and said with a smile, \"Trust me... I think I can help.\"\n\n\"Okay...\" Karen responded with a confused tone as she turned away from the young woman. Melissa then slipped off her three-inch heeled pumps, got up onto her knees for better leverage, and then began to massage Karen's delicate shoulders. The effects were immediate, and the middle-aged mom groaned, \"Ohhhhh... my goodness!! Melissa... where did you learn to do that?\"\n\nMelissa giggled and replied, \"My mom's sister owns a day spa back in my hometown. When I was in college, my aunt used to let me help out during the summers to earn some cash.\"\n\nLeaning her head forward and sliding her hair off her shoulder, Karen asked, \"You mean you gave people massages?\"\n\nRunning her thumbs up and down the back of Karen's slender neck, Melissa replied, \"No... I wasn't licensed for that. I mostly helped out at the front desk. However, I was able to pick up a few things from the head masseuse.\"\n\n\"Mmmmmm,\" Karen moaned. \"I think you may have missed your calling.\"\n\nMelissa chuckled and replied, \"Well, I don't know about that, but it most likely would have been a less stressful career choice.\" The young lawyer then returned to massaging the stay-at-home mom's shoulders through the thin material of her cotton dress. She then commented, \"Speaking of stress... Karen, your muscles are as tight as a drum. It's no wonder you're in such pain.\"\n\nKaren sighed then responded, \"It's most likely from everything that's going on right now. First, there's Jake's condition and trying to keep that a secret from everyone. Plus, you throw in the...\" Suddenly the confused mother stopped speaking when she felt the zipper on the back of her dress lowering very slowly. Turning her head in an attempt to look back at Melissa, she asked, somewhat shocked, \"W--what are you doing?\"\n\nContinuing to run the zipper down, Melissa answered, \"If I'm going to do a proper job, I need to get you out of this dress.\" She then began to slide the loosened fabric off of Karen's shoulders and added, \"The material is preventing me from being able to fully manipulate your muscles. Trust me... you'll feel a remarkable difference.\"\n\nKaren turned her head back around and allowed her new friend to slide the top portion of her cotton dress down to her waist. She felt awkward sitting on her living room sofa with her bra encased breasts exposed out in the open; however, she went along with it and replied, \"Okay... if you're sure.\"\n\nMelissa then repositioned herself behind Karen and resumed massaging the supple flesh of Karen's delicate shoulders. The young lawyer noticed a soft mewing sound as the lovely mother dropped her head forward. She then softly asked, \"How does that feel?\"\n\n\"Wonderful,\" Karen replied in barely a whisper. \"It feels... wonderful.\" The stressed-out housewife couldn't help but give herself over to Melissa's gifted hands. She closed her eyes and moaned her approval as the young attorney skillfully kneaded her shoulders as a baker would a ball of dough.\n\nPositioned on her knees behind Karen allotted Melissa a perfect bird's eye view of the middle-aged mother's chest and her more than generous bosom. The young woman was mesmerized by the enticing deep cleavage of the luscious twin globes trapped inside the overworked lacy white bra. The heart-shaped piece of jewelry that nestled inside the deep cavern also caught her eye. Melissa commented softly, \"That's a lovely locket.\"\n\nWithout opening her eyes, Karen replied, \"Thank you. It was a Mother's Day gift from my husband years ago. It contains Rachel and Jacob's baby pictures.\" Then, after another soft moan, she added, \"I know it may sound silly, but in some small way, it makes me feel like I carry them close to my heart.\"\n\n\"I don't think it's silly at all,\" Melissa replied in a whisper. \"In fact, I think it's very sweet.\"\n\nSince she was sexually frustrated, Melissa was already burning with desire when she arrived at the Mitchell home. However, Karen's sweet scent and the feel of her silky smooth skin only further heightened the young woman's arousal. The MILF known as Karen Mitchell had inadvertently awoken lustful feelings inside Melissa that she had not felt since her college days.\n\nMelissa Turner did not consider herself a lesbian or even bi-sexual, for that matter. She usually would never think of another woman in a sexual way. However, while in college, she and her roommate/best friend Laura accidentally slipped into a mini-affair that, to this day, remained a secret.\n\nIt began when the heat in their dorm room went out. Initially, the drunk co-eds only shared the same bed in order to keep warm. However, the two friends ended up finding more than warmth in that twin-sized bed on that cold winter night. They ended up discovering each other's sexy young bodies along with new and unexpected sensual pleasures.\n\nThey continued their covert liaison for the rest of their senior year. After graduation, Laura married her military boyfriend, and they started a family. While Melissa continued her education, became an attorney, and eventually met her now-fianc\u00e9, Donnie. To this day, the two ladies remain the best of friends and share a special bond with untold precious memories.\n\nNow all these years later, Melissa unexpectedly felt those stirrings once again. Only this time, it was not her best friend but a married mother she was just getting to know.\n\nMelissa slid her hands off of Karen's shoulders and began massaging the area between her shoulder blades. The move to new territory caused increased moans of appreciation to escape the lips of the middle-aged mom. \"Ohhh... that's a good spot,\" Karen whispered as she closed her eyes and slumped her shoulders.\n\nA smile crept onto Melissa's pretty face. A devious plan ran through her mind to see if she could push things a little further with the gorgeous MILF. Without asking, she deftly and quickly unfastened the hooks of Karen's overworked bra.\n\nKaren gasped in surprise when she felt the straps go loose and the cups supporting her magnificent breasts give way slightly. Then, instinctively, she used both hands to catch and hold the bra to her chest as she asked, \"Oh my gosh! Why did you do that??\"\n\nAs Melissa slid the bra straps from Karen's shoulders and down her arms, she calmly replied, \"Relax, Karen. With the bra out of the way, it will help me better massage this area of your back.\" Melissa then gently ran her fingers over the deep indentions left behind by the straps... clear evidence of the intimate garment's heavy burden. She then added, \"Besides, a proper massage usually requires the client to be nude.\"\n\nKaren lightly scoffed, then said, \"Maybe so, but I'm not very comfortable with being half-naked in my living room.\"\n\n\"Don't worry about that,\" Melissa responded. She gently pulled on the loosened bra as a signal for Karen to release her grip. The modest wife and mother continued to hold the cups to her chest, attempting to conceal her bountiful bosom. The young attorney continued in a soft tone, \"It's okay, Karen... no need to feel embarrassed. There's no one here but us girls.\" She chuckled then added, \"Besides, you've already seen me naked several times... it's only fair, don't you think?\"\n\nKaren blushed as she remembered the time she saw Melissa fresh out of the shower in her bedroom. She felt embarrassed and ashamed about the impure thoughts that inadvertently crept into her mind that day regarding the young attorney's beautiful feminine body.\n\nReluctantly, Karen released her grip on the bra cups and allowed Melissa to pull the garment away, dropping it onto the sofa cushion next to them. Then, for purposes of modestly, the conservative mother Instinctively crossed her arms over her chest.\n\nMelissa then guided Karen to turn and sit sideways on the couch. The younger woman then sat directly behind her friend and said while gently pushing on her shoulders, \"Now just lean forward a little and relax.\"\n\nHesitantly, Karen did as Melissa asked. Then, while leaning over, she placed her hands on the sofa's armrest, allowing her naked boobs to hang down and swing freely from her chest.\n\nMelissa quickly resumed with the massage. She began kneading the muscles in Karen's back, paying close attention to the area close to her spine.\n\nKaren couldn't help but find this situation extremely awkward. Somehow she found herself sitting on her living room sofa, naked from the waist up, while receiving a back rub from another woman; not exactly proper behavior for a married Christian. However, the church-going mother had to admit she found the talented hands of the young lawyer to be quite soothing and therapeutic.\n\nFrom Melissa's current position, she could see the sides of Karen's magnificent breasts peeking around at her as they gently swung from the half-naked wife's chest like two ripe and juicy melons. The aroused young woman now had a burning desire to get her dainty hands on those heavy globes of flesh.\n\nMelissa could tell the massage was having a positive effect as Karen's sensual moans grew louder, and her body relaxed more and more. Taking this as a good sign, she slowly slid her hands outward to where they gently manipulated the muscles along Karen's rib cage.\n\nThanks to the skillful ministrations of Melissa's talented hands, Karen could feel the tension draining from her body. The effects were so tranquilizing that the conservative mother almost forgot she was half-naked in her living room. However, she was quickly reminded of the fact when she felt Melissa's soft hands creep forward and gently cup the sides of her tender breasts.\n\nKaren's breathing became more rapid and shallow. She noticed her vagina seeping fluid into her panties and her nipples hardening even more and beginning to tingle. Shamefully she was becoming sexually aroused by another woman.\n\nThe Christian mother knew this was wrong to allow another female to touch her this way. It was sinful and went against God's plan. However, at the same time, it felt so relaxing and soothing. She told herself it was just part of the massage and that Melissa was only trying to help relieve her stress.\n\nMelissa felt Karen tense up just a bit as she gently kneaded the sides of the married woman's supple orbs of flesh. Then, leaning in a bit, she asked in a husky whisper, \"Are you okay?\"\n\n\"Uh-huh,\" Karen softly responded while nodding her reply. Melissa was indeed talented at this craft, and the married mother could not deny how wonderfully relaxed she felt at the moment. Somehow the young lawyer had skillfully manipulated Karen's body to where she felt downright inebriated.\n\nKaren could sense Melissa's gifted hands inching closer and closer to her hardened nipples that tantalizingly buzzed with excitement. Up until now, she could justify everything as a friendly massage. The conflicted wife prayed Melissa would stop before things went too far; however, she secretly hoped her new friend would continue.\n\nBiting her bottom lip in anticipation, Karen tightened her grip on the armrest of the sofa. Another involuntary moan escaped her mouth as Melissa's skillful hands crept closer to their target. As sinful as it may be, the faithful church-going wife wanted nothing more at that moment than to feel the young woman's nimble fingers tightly clamp her sensitive nubs that begged for attention.\n\nWith her fingers only millimeters away from reaching Karen's burning nipples, Melissa released her grip on the aroused mother's quivering breasts. The sudden lack of sensation caused Karen to open her eyes... The dreamy fog, unfortunately, began to lift.\n\nMelissa leaned forward and whispered in Karen's ear, \"You know... I could do a much better job... if we went upstairs.\"\n\nThe feel of Melissa's warm breath on her ear made Karen shiver. Then, turning her head towards Melissa, she softly replied, \"Up... upstairs?\"\n\nSuddenly from the kitchen, \"Hey Mom! I'm home!!\"\n\n\"Oh my goodness! It's Jake!!\" Karen shrieked. She quickly scootched away from Melissa and desperately began putting her dress back on. \"Oh no, no, no!!\"\n\n\"Mom?\" Jacob called out again as he made his way through the house. He had rushed home with the hopes Ms. Turner this time would be able to make her scheduled visit to 'check up' on him. The mere thought of spending some quality time with the gorgeous attorney in his room gave him an instant erection.\n\nAfter getting her arms back into the sleeves, Karen whispered to Melissa, \"Quick... zip me up!!\" She then called out to her son, \"In here, Jake!\"\n\nAs Jacob neared the living room, he said aloud, \"I saw Ms. Turner's car in the driveway, and I thought she...\" At that moment, he turned the corner and entered the room to find Karen and Melissa sitting on the couch side-by-side. He then finished his statement, \"Must be here. Hey Ms. Turner!\"\n\n\"Hi, Jake!\" Melissa greeted him cheerfully but a little out of breath while putting her heels back on.\n\nAs calmly as possible, Karen asked, \"Honey? Why are you home so early?\"\n\nWhile setting his bookbag down onto the floor, Jacob replied, \"My last class got canceled... so they let us go ahead and leave for the day.\" The teenager may not be a detective, but he could easily sense something was amiss. Both ladies were breathing heavier than usual. Melissa had been barefoot, and his mother's dress appeared somewhat wrinkled and disheveled. He then asked suspiciously, \"Is everything okay?\"\n\nTrying to appear as normal as possible, Karen picked up her cup and, with a smile, responded, \"Of course, Sweetie.\" She then took a quick sip of her coffee and added, \"Ms. Turner was just updating me on the status of their case against Dr. Grant.\"\n\nAs Jacob stood in front of the coffee table, he noticed something on the far-end cushion of the sofa. Then, realizing what it was, he asked, \"Who's bra is that?\"\n\nBoth women looked over and noticed the discarded piece of lingerie. Karen gasped with embarrassment and quickly grabbed the forgotten garment and jumped up from the couch. Then, with her cheeks burning from the humiliation, she picked up the carafe and said the only thing she could think of as she left the room, \"I'll go make some fresh coffee.\"\n\nAfter getting her heels back on, Melissa stood up from the sofa and attempted to distract Jacob. \"So Jake...\" she began while stepping around the coffee table and then walking towards the teenager, \"It's been a while since I've seen you. How are things lately with your uh... condition? Are things getting any better?\"\n\nWhen Jacob took a good look at Melissa, he forgot all about the mysterious bra... at least temporarily. Instead, he couldn't help but think how gorgeous Ms. Turner looked in her sexy office attire.\n\nMelissa was wearing a knee-length black pencil skirt which was somewhat tight but still professional-looking. Her top was a red form-fitted button-up sweater with three-quarter length sleeves. The neckline scooped down just enough to expose some cleavage of her big mouthwatering tits. Jacob couldn't be sure, and maybe it was just the sweater, but her boobs appeared bigger than the last time he saw her. On the other hand, perhaps the hormones had affected her, too.\n\n\"No... not really. It's about the same, I guess,\" Jacob responded while he rubbed the uncomfortable bulge that continued to grow inside his pants and, along with it activating his powerful pheromones.\n\nNow standing close to Jacob, Melissa breathed in the teenager's unique scent, which further heightened her state of arousal. Her nipples began to hardened and tingle with the familiar buzzing sensation, and her hungry vagina drooled with anticipation.",
        "Wearing her heels made Melissa even taller than Jacob than usual. Looking down and noticing his 'Return of the Jedi' tee-shirt, she inquired, \"So ummm... how is your Star Wars collection coming along?\"\n\nWith excitement, Jacob replied, \"Funny you should ask, I'm working on a new model that Mom bought me last week. It's an Imperial star destroyer.\"\n\n'Once a nerd... always a nerd,' Melissa thought to herself as she suppressed a chuckle. She then asked softly, \"Weeellllll... would you like to... show me?\" The gorgeous older woman then bit her bottom lip and arched her brow.\n\n\"Oh!\" Jacob responded as he finally realized what Melissa was referring to. Then, with a grin, he replied, \"Yeah! As a matter of fact... I would.\"\n\nNow, up in Jacob's bedroom, Melissa had taken off her outfit and laid it across the back of the computer chair. Then, wearing only her skimpy bra and saturated thong panties, the lovely attorney knelt in front of the teenager while he sat on the bedside.\n\nMelissa quickly took hold of Jacob's throbbing erection and wrapped her sensual lips tightly around the drooling cock head. \"Mmmmmm,\" she moaned as her tongue swirled around the tip, collecting the creamy discharge and savoring the unique flavor.\n\nAfter a couple of minutes into the blowjob, Jacob let go of Melissa's beautiful black hair and leaned back on his elbows. While he watched the gorgeous woman sucking on his dick like a pro, he asked curiously, \"So tell me... what exactly did I walk in on earlier?\"\n\nMelissa pulled Jacob's cock from her mouth with a noticeable 'pop' sound and reared back just a bit. Then, after licking her lips and swallowing, she answered, \"Nothing really.\" While stroking Jacob's rock-hard shaft with her right hand and cradling his bloated testicles with her left, she commented, \"God... this thing is huge!!\" She was hoping to divert the conversation.\n\nJacob, however, continued, \"Nothing? I don't buy it.\" He then leaned up some and included, \"Come on Ms. Turner... something was going on. I mean, Mom left the room in an awful hurry carrying her bra, and she seemed to be quite embarrassed.\"\n\nSeeing that Jacob was not going to let this go, Melissa sighed then responded, \"Well, if you must know... I was giving your mother a shoulder massage. I was simply trying to help relieve some of her stress.\"\n\nOh... okay,\" Jacob responded. He then asked, \"Wait... for you to massage her shoulders, she had to take off her bra?\"\n\nContinuing with the hand-job, Melissa responded, \"Well yes... its standard practice for the person receiving the massage to be nude.\"\n\nJacob's eyes went wide. \"You had her naked? In our living room?\" The wrinkled dress now made sense. He knew something had been going on because his mother took great pride in her appearance. She was not a vain woman, but she would never entertain a guest with her clothes out of sorts that way.\n\nStopping her hand movements, Melissa replied, \"No! Well... not totally nude... just from the waist up.\" Then, resuming to jack off the teenager, she lowered her voice and continued, \"I was about to talk her into coming upstairs so I could give her a proper massage, but then you unexpectedly arrived home.\"\n\nThe thought of his super-hot Christian mother getting naked for the gorgeous attorney made Jacob's head spin. He said with a smile, \"That would have been so awesome!\"\n\nMelissa abruptly stopped her hand movements and insisted, \"You cannot tell your mom I told you any of this.\"\n\nShaking his head, Jacob replied, \"Don't' worry... I won't say a word.\" He then added, \"I'm just sorry I interrupted.\"\n\nIn a heavy whisper, Melissa replied, \"Me too.\" She then smiled, got up from her knees, and looked down at Jacob, still wearing his tee-shirt. She then reached behind her back and began to unfasten the straps of her overstuffed bra. \"Maybe it's time we move things along... what do you say?\" She had waited long enough... her wanton pussy was drenched and ready to swallow every inch of this boy's magnificent cock.\n\nUpon removing her bra, Melissa's breasts dropped and bounced enticingly on her chest. Again, Jacob's suspicions were correct... they were bigger and hung heavier... very similar to his mother's and sister's beautiful racks.\n\nMelissa caught Jacob starring and asked, \"What? See something you like?\"\n\nJacob nodded and replied, \"Your... your boobs... they're...\"\n\n\"Bigger? Yeah, I know.\" Melissa then cupped both of her meaty orbs and added, \"I guess I should give thanks to you and your hormone-laced semen that I've ingested.\"\n\nNot knowing what else to say, Jacob said, \"Sorry.\"\n\nShaking her head, Melissa replied, \"Don't be... I love them. Personally, I think they look great... I've always wanted to be a D-cup.\" She put her hands on her hips and turned to the side as if she were an underwear model. \"What do you think?\"\n\nStaring at the beautiful woman in her skimpy thong panties, Jacob nodded once again and said enthusiastically, \"Ms. Turner, I think you look perfect.\"\n\nA big smile spread across Melissa's face, and she gushed, \"Thank you, Jake... you are so sweet.\"\n\nJacob stood up from the bed and went over to his closet, where he kept the condoms safely hidden and pulled two gold wrappers out of the box. He planned to take advantage of his limited time with Ms. Turner and hopefully get multiple goes at her juicy quim.\n\nAfter rolling the uncomfortable condom down his pulsing shaft, Jacob looked up to find Melissa on his bed. She had discarded her panties and now lay on her back with her head slightly elevated on a pillow.\n\nMelissa's heels dug into the Star Wars comforter with her knees slightly spread apart. Her right arm above her head was gripping the headboard while her left hand lazily traced the outer edges of her freshly shaved vagina. Her swollen nether lips were glistening like the shiny diamond in her expensive engagement ring.\n\nMelissa knew she shouldn't be in this situation. After all, she was a well-respected assistant district attorney who promised herself to another man... a man she loved deeply. Yet here she was, naked as the day she was born in a nerdy teenager's bed. That same teenager was about to rearrange her insides with the insanely oversized cock attached to his skinny boy-like frame. She probably should have felt guilt or shame, but instead, she was as giddy as a high school girl on prom night.\n\n\"You know you don't have to wear those on my account,\" Melissa said in reference to the condom. \"After all, I'm on birth control.\"\n\nWhile climbing onto the bed, Jacob replied, \"Maybe so, but if Mom comes in here and sees me not wearing one, she'll have a cow.\"\n\nMelissa giggled at Jacob's response. Then, with no show of modesty, she slowly spread her long legs, giving the teenager at her feet an unfettered view of her steaming hot cunt. She then asked in a sultry voice, \"Well then... how do you want me?\"\n\nMoments later, Jacob steadily plunged his monster cock in and out of Melissa's clutching vagina, and his churning nuts slapped against her curvy butt. His mouth was greedily sucking on one of her tasty nipples while her other boob danced wildly around on her chest.\n\nMelissa had her right arm tightly wrapped around Jacob's shoulders. Her left hand cupped the back of the teenager's head, pulling him tight to her breast. A steady stream of \"Oh yes! Oh, Jake! Oh, yes!!\" poured from her pretty mouth. After weeks of frustration, the engaged woman was finally getting her itch scratched... and Jacob was scratching it perfectly.\n\nAt that moment, the bedroom door slowly opened, and Karen quietly entered the room. Upon entry, she was immediately immersed in the overpowering fragrance that flood the air elevating her own arousal.\n\nAs Karen sat down in Jacob's computer chair, she accidentally locked eyes with Melissa. The fiery look in the young woman's eyes and the tingling in her own breasts reminded Karen of the improper and sensual massage from earlier. Still feeling somewhat embarrassed, the conservative mother averted her eyes.\n\nShamefully, Karen couldn't help but appreciate Melissa's beautiful young body as her eyes traveled along her feminine curves down to where she and Jacob were coupled. However, she did feel some sense of consolation when she noticed Jacob was wearing a condom.\n\nMelissa became more vocal as the tension in her body increased. She ran her hands down Jacob's back and rested them on his skinny rear end. \"Ohhhhh yes! Go, Jake! Harder!! Ohhhhh!! Hardeeeerrrrr!!!\"\n\nWith her orgasm now within reach, Melissa then began pulling on Jacob's hips, trying to spur him on. When the teenager pushed her over the edge, she reached back with both hands and grabbed hold of the headboard.\n\n\"OHHHHHH!!!! YEEEESSSSSS!!!!\" Melissa cried out with joy as she arched her back off the bed and let the long-awaited orgasm take her away.\n\nAfter the massage incident from earlier and now watching Melissa thrash around underneath her son, Karen's clit was like a live wire. It took every bit of self-control Karen could muster not to hike up her skirt and slip her hand into her increasingly wet panties. Instead, she clutched her thighs together, relishing the sweet torture of teetering on edge.\n\nJacob's thrusts became erratic as he neared climax. \"Ugh... Ugh... Ms. Turner! Ugh! I'm gonna... Ugh!! Cum!!\"\n\nStill lost in a cloud of euphoria, Melissa couldn't form any words. She simply wrapped her widely spread legs around Jacob's skinny body as a sign for him to stay inside.\n\nJacob couldn't help but speed up. \"Oh, Ms. Turner... here it... COMES!! AAAAHHHHHHH!!!\"\n\n\"Mmmmmmm\" Melissa moaned as she felt Jacob's monster cock expand as it released his viral load into the condom. Even through the protective shield that surrounded his twitching phallus, she could feel the heat of the teenager's semen radiate deep in her tummy.\n\nAt first, Karen worried about the risk and thought she should intercede; however, since Melissa was on birth control and Jacob wore a condom, she decided it should be okay.\n\nA few moments later, the unseemly couple fought to catch their breath. Jacob lie on top of Melissa with his face resting on her soft and pillowy bosom. The engaged attorney clung possessively to the teenager as if reluctant to let him go.\n\nAs Karen sat idly in the chair watching them, she could not help but feel the familiar pang of envy along with her arousal. However, this time, she could not decipher which of the two she felt her jealousy towards... perhaps both. Suddenly her cell phone began to vibrate. Realizing the call was from Robert, she quickly stood up and left the room.\n\nAfter Melissa released her grip on the boy, Jacob lifted up and carefully removed his cock from her steaming hot snatch. The sudden feeling of emptiness caused her to moan in disappointment softly.\n\nJacob quickly disposed of the condom and walked back to the bed where Melissa reclined back, resting on her elbows, still recovering. \"You up for round two?\" he asked with a hopeful grin.\n\nMelissa's eyes shot wide as she noticed the teenager's monster was still fully erect and lewdly bouncing with each step. \"Uh-huh!\" the smiling attorney replied with a nod.\n\nAs Jacob picked up the second condom from his nightstand, he asked, \"Will you try with Mom again sometime?\"\n\nSitting up, Melissa questioned, \"With the massage, you mean?\"\n\n\"Yeah... and hopefully, you can get further along next time,\" Jacob responded while climbing onto the bed. \"It would be so cool to see you two together. Heck... maybe sometime I could even join in... that would really be awesome!\"\n\nSomewhat shocked, Melissa asked, \"You want to have a threesome... with your mom?\" She suspected from earlier conversations with Karen that the prim and proper mother was conducting some form of \"hands-on\" treatment to relieve her son. She just wasn't sure if the help included intercourse. The young attorney usually would have been appalled at the idea of incest, but in this instance, she found it kind of hot.\n\nMotioning for her to turn around, Jacob replied, \"Heck yeah! Would you be up for it?\"\n\nTurning with her back to Jacob, Melissa replied, \"I know I would... but do you think your mother would be open to it?\" Then, knowing what he had in mind, she went ahead and got down on all fours and widened her knees apart, lowering her curvy backside.\n\nJacob replied, \"I think she would eventually, but we should probably take it one step at a time,\" He then changed his mind about the condom and tossed the unopened packet onto his cluttered desk with it landing next to a textbook.\n\nJacob then got into position behind Melissa and added, \"For starters, maybe loosen her up with some lesbian stuff.\" The teenager then began sliding the tip of his bare cock between the juicy lips of Melissa's gushing wet vagina. \"Will you do that?\"\n\n\"Mmmmmm,\" Melissa purred from the electrical sensations of having her clit stimulated. She gave her flawless rear-end a seductive wiggle. \"Yeah, I can try at least. However, it may take me a little ti--Ohhhhh Yesssss!!!!\" she hissed as Jacob thrust forward, penetrating her dripping sex with his unsheathed manhood.\n\nThe engaged lawyer moaned and grabbed fist-fulls of the soft comforter and arched her back as inch after inch of Jacob's pulsing spear pierced deeper and deeper into her core. While gritting her teeth, Melissa commented in amazement, \"My God! That thing is unreal!!\"\n\nSoon, Jacob got into a steady rhythm of sinking his fleshy rod in and out of Melissa's sloppy vagina. A frothy ring of the cheating fianc\u00e9e's juices began to form around the base of the teenager's cock. Jacob would playfully slap Melissa's right butt cheek every few thrusts or so, causing her to yelp in between the \"ohs\" and \"ahhs.\"\n\nSince forgoing the condom, Jacob reluctantly decided it might be best to finish quickly in case his mother returned. He did not want her to come back and discover him riding Melissa bareback. He tightened his grip on the engaged woman's curvy hips, digging his fingers deeper into her soft, yielding flesh. The teenager began thrusting harder, and Melissa conveyed her approval with a steady stream of \"Oh Yes! Oh, God! Oh, Yes!\"\n\nMelissa lowered herself down onto her forearms and raised her butt higher into the air. This angle gave Jacob a perfect view of her asshole as it winked at him each time he plunged balls deep into her squelching pussy. The lawyer's dark pink rosebud already glistened with an abundance of vaginal lubricant; however, to be safe, the teenager popped his thumb into his mouth.\n\nOnce properly lubricated, Jacob slowed his thrusting, then placed the pad of his thumb onto its target and began massaging the slick, rubbery ring. Suddenly, Melissa became quiet and raised her head as if confused and trying to comprehend what was happening.\n\nJacob pushed forward, and his lubricated digit slid knuckle deep into Melissa's dark, forbidden passage. An audible gasp escaped her pretty mouth as she clutched tighter to the bedspread. The engaged lawyer was no stranger to anal play, and she was quite fond of it, but she was caught a bit off guard by the teenager's assertiveness.\n\nSensing no protest, Jacob gained confidence and slid his invading finger even deeper into her most sensitive and intimate orifice. As the probing digit sank further into her steaming hot rectum, Melissa confirmed the naughty pleasure with a long drawn out moan, \"OOOhhhhhhhhhh!!!\"\n\nWith his hand firmly pressed up against Melissa's curvy backside, Jacob could feel her anus tightly grasping on the base of his finger. He then began wiggling his thumb, and the additional stimulation caused the cheating attorney to push her ass back into him and whisper, \"Ohhhh my....God!!\"\n\nJacob quickly regained his former pace and rhythm of plowing into Melissa's dripping wet vagina. While he ravaged her body with both appendages, he also attacked her mind. \"Ms. Turner? Do you plan... ugh... to tell the good doctor... ugh... what a bad girl you've been today? How you fucked a teenager... with his thumb... in your butt?\"\n\nThe intense sensations of having Jacob's cock reaming her pussy and his finger drilling her ass had Melissa quickly ascending to a glorious orgasmic summit. An image of Donnie crept into her mind and, along with it, a wave of guilt. She could only imagine how devastated he would be to find out how she spent her afternoon.\n\nWhile Donnie was pulling an exhausting double-shift at the hospital, Melissa was getting double penetrated by a nerdy high school boy. While her soon-to-be husband was helping people and saving lives, she was bare ass naked on all fours allowing the gangly teenager to violate her quivering body... And like a shameless slut... she was getting off on it.\n\nHearing no reply, Jacob asked, \"How 'bout it... Ms. Turner? Are you gonna... tell him?\"\n\nShaking her head, she replied, \"No! God... NO!!!\"\n\nJacob pulled his thumb from the fiery chasm of Melissa's rectum and quickly replaced it with the combination of his forefinger and middle finger. Both digits easily slid up to the hilt in the lawyer's tightly grasping anus, and he then began to steadily finger-fuck Melissa's ass.\n\nThe intense stimulation caused Melissa to throw her head back and cry out to the toy spaceships hanging from the bedroom ceiling, \"Ohhh, Yess!! Fuck Me!! Fuck Meeee!!! Ohhhh GODDD!!!! FUCK!!! MEEEEE!!!\"\n\nSomewhere deep inside Melissa's brain, a fuse blew. She began to convulse as the orgasm surged through her sweat-covered body. \"AAAAAHHHHHHH!!!\" she continuously wailed while she experienced the sweet agony of the electrical-like currents lighting up her nerve endings.\n\nThe tight clutches and spasms of Melissa's climaxing pussy pushed Jacob over the edge... there was no turning back. He removed his fingers from her pulsing asshole and grabbed hold of her gyrating hips. \"Ms. Turner... I'm gonna cum. Can I... stay inside?\"\n\nStill riding the tail-end of the glorious orgasm, Melissa forgot all about the other possible side effects of Jacob's semen. Lost in the euphoric cloud, the young attorney simply nodded her approval.\n\n\"Oh yeah! Ms. Turner!! Here it comes!! Take it... take it... ALLL!!!\" At that moment, Jacob's cock erupted.\n\nMelissa's eyes shot wide open as the teenager's man lava hosed her insides. \"OH MY GOD!!\" she cried out in shock as the torrential blast of Jacob's massive load sparked a third orgasm.\n\n\"Ohhhhhhhh!!\", Melissa groaned in ecstasy as her arms gave way, and she lowered her head down onto the mattress. The climaxing woman kept her ass perched high in the air allowing Jacob to empty his churning nuts deep into her accommodating womb.\n\nMoments later, Melissa savored the occasional aftershock while she descended back down from Heaven. Then, finally, she lay flat on her tummy with her legs splayed wide open while trying to catch her breath.\n\nWhile sitting between Melissa's spread legs, Jacob proudly watched a steady stream of his thick and creamy jizz ooze out of the engaged woman's freshly fucked pussy. Because of the growing puddle, he knew later he would be changing the comforter on his bed, but it was well worth it.\n\n\"Hey, Ms. Turner...\" Jacob began as she reached over and gave Melissa's juicy ass a playful slap which resulted in a soft yelp. \"I need you to do me a favor.\"\n\nWithout lifting her head, Melissa grunted her reply, \"Huh?\"\n\n\"Whatever you do... don't tell my mom what I did. She would freak out if she found out that I finished inside you without a condom.\" Little did Jacob know that his mother knew what he had done.\n\nAfter ending her phone call with Robert, Karen returned upstairs; but she didn't go back into the bedroom. Instead, she stood outside and listened to the final moments of their indecent mating session.\n\nKaren Mitchell was just on the other side of the closed bedroom door and heard his little confession. Yet, at the moment, she was not in a position to confront the guilty parties.",
        "The conservative mother stood breathing heavily while supporting herself with her left hand against the door frame. Her panties pulled down to her knees with her right hand tightly pressed against her sopping wet vagina while recuperating from her own massive knee-buckling orgasm.\n\nIt made Karen feel ashamed that she had listened in and masturbated while her son had illicit sex with the engaged woman. Not long ago, she had scolded Jacob for basically doing the same thing to her and her husband. Now here she was, skulking around like some sort of pervert while having impure thoughts about another woman.\n\nAfter straightening herself up, Karen quietly went back down the hall. She told herself repeatedly it must be more side effects from the hormones because these were not the actions or thoughts of a proper Christian woman. The justification was a bit feeble; however, it was good enough to make her feel a little better and also helped to ease some of her guilt.\n\n********************\n\nOnce dressed for school, Jacob left his room to find Karen and remind her about his plans with Sara Miller. While walking down the hallway, he could faintly hear Karen's angelic voice coming from the master bedroom... it sounded as if she was singing.\n\nFinding the door to his parent's room partially cracked, Jacob slowly pushed it open further to see his mother making up her and his father's bed. She was singing a gospel hymn, but not one in which he was familiar.\n\nLike any other day, Karen looked beautiful. Today she had her long chestnut hair done in a side pony style. She wore an old \"Journey\" tee-shirt, and her black yoga pants fit as if painted onto her womanly curves.\n\nLooking up, Karen noticed Jacob standing in the doorway. She then greeted her son with a bright smile, \"Good morning, Sleepy Head!\" After fluffing a pillow and tossing it back onto the bed, she added, \"I was just about to check and make sure you were up.\"\n\nEntering the room, Jacob could hear the hissing sound of the shower alerting him that his dad had yet to leave for work. \"Morning, Mom! I could hear you singing all the way down the hall.\"\n\nWith a giggle, Karen replied, \"Sorry about that. I'm standing in for Mrs. Connors in the choir this Sunday.\"\n\n\"No need to apologize, Mom...\" Jacob always liked to hear his mother sing. It reminded him of when he was very young, and she would sing to him after reading a bedtime story. \"I mean... you sounded great... I just don't think I've ever heard that song before.\"\n\nKaren replied, walking around the bed, \"It's new... well, at least it is for the choir. Mr. Crenshaw thought it would be a good idea to add some new hymns into the rotation.\" Sitting down on the side of the bed, she continued, \"With it being a while since I participated in the Sunday choir, I figured I might want to practice the old pipes.\"\n\nSitting down beside his mother, Jacob said, \"Well, I think you sound perfect, Mom.\"\n\nKaren patted Jacob's thigh and responded with a slight chuckle, \"Thank you, Baby, but I'm a long way from perfect.\" She then cocked her head and asked, \"Did you need something?\"\n\nNodding, Jacob replied, \"Yes, ma'am. I wanted to remind you that Sara is coming over after school to work on our Chemistry project.\"\n\nGrinning from ear to ear, Karen put a hand over her mouth. \"Oh my goodness! That's right... your first study date with your girlfriend... how cute!\"\n\nPutting up his hand, Jacob replied, \"Woah... slow down, Mom... she's not my girlfriend. I mean, I'd like her to be, but we've only been on one date.\"\n\n\"Well, we all know it's only a matter of time until she is,\" Karen said reassuringly.\n\nJacob sighed then said, \"You really should take off the 'mom goggles' once in a while.\"\n\n\"Why would you say that?\" Karen replied with a surprised tone. Then, with her fingers, she brushed the hair on Jacob's forehead and added, \"What girl in her right mind wouldn't want to be with my little snuggle monster?\"\n\nPulling back just a bit, Jacob grimaced, \"Yeah... about that.\" He then said, \"Mom... remember... we discussed this? No silly nicknames when Sara is around.\"\n\nPulling back, Karen replied, \"I vaguely remember you saying something about that, but I don't recall my ever agreeing to it.\"\n\nStaring at Karen, Jacob said with a serious tone, \"Moooom??\"\n\nThrowing her hands up, Karen replied, \"Okay... okay. I'll behave.\"\n\n\"You promise?\" Jacob asked.\n\nWith a sigh, Karen said, \"Yes... I promise... cross my heart.\" Then with her finger, she marked an \"X\" on her chest.\n\nFeeling relieved, Jacob smiled and responded, \"Thank you!\"\n\nNoticing that the shower had gone silent, Karen could hear Robert at the sink brushing his teeth. She leaned in and whispered, \"What about your situation?\" She then motioned with her head towards Jacob's crotch and added, \"You think you'll be okay? I mean, with Sara around all afternoon?\"\n\nShrugging his shoulders, Jacob softly replied, \"Sure... why not? I've been able to hide it so far.\"\n\nArching her brow, Karen held her son's gaze and asked, \"Are you certain?\"\n\nSomething about the look in Karen's warm hazel eyes caused Jacob's monster to awaken and begin to stir. He then responded, \"Ummmm... you know what? Maybe it would be best if you helped me before she comes over... just to be safe.\"\n\nKaren's plump red lips curled into a smile.\n\n\"No, wait!\" Jacob added. \"Mrs. Miller insisted on picking Sara and me up after school and then dropping us off here.... so that means you and I won't have a chance to be alone.\"\n\nFrom the bathroom came the sounds of Robert continuing his morning routine of preparing for his day. Glancing at the partially opened door, Karen said softly, \"Just hang around until your dad leaves for work.\" Then, turning back to Jacob, she added, \"Afterwards, I'll drive you to school... that way, if you're late, I can sign you in.\"\n\nAfter kissing her husband bye for the day, Karen returned from the garage to the kitchen to find Jacob still at the table eating breakfast. She immediately took her son by the hand, and led him into the laundry room.\n\nJacob paid no mind to the familiar humming sound of the garage door lowering down as his father left for the office. Instead, his sole focus was that of Karen lowering down her yoga pants and panties across her magnificently soft and round backside. The teenager stood behind his mother, unbuckling his pants while watching her slide the skin-tight garment down to her knees.\n\nNow bent over the operating washing machine resting on her elbows, Karen turned and, looking back over her shoulder, said, \"Okay, Sweetie... we don't have much time.\" She then noticed Jacob stroking his fully erect and bare cock. \"Jake... don't forget the condom.\"\n\nTearing his eyes away from his mother's fleshy upturned ass, Jacob replied, \"Uh... condom? Sorry, Mom... I forgot to bring one down with me... it's still upstairs.\"\n\nTurning her head back around, Karen dropped and shook her head. She sighed with frustration and said, \"Jake... you must always use a condom.\"\n\nStepping up closer, Jacob rested his throbbing dick in the crack of Karen's soft and shapely butt. \"Maybe we could skip it this one time?\" He put his hands on Karen's wide hips and began to slowly slide his cock back and forth in the cleavage of her juicy naked bottom. \"Mom, I promise, I'll pull out before I finish.\"\n\nThe feel of Jacob's rock-hard shaft sliding along her butt crack caused a soft moan to escape Karen's lips. For safety's sake, the aroused mother knew it would be better if they used a condom. For a few seconds, she contemplated sending Jacob upstairs to retrieve one; however, against her better judgment, she relented, \"Fine... but Jake, you have to promise.\"\n\n\"I will, Mom... I swear!!\"\n\n\"Don't swear, Honey... just make sure you pull-- Oooohhhhhhh!\" Karen groaned aloud as the tip of Jacob's incredible cock penetrated the opening of her tight vagina.\n\nOnce given the green light, Jacob wasted no time. Soon, he was thrusting into Karen's pussy with long, deliberate strokes. The teenager noticed his shaft glistening with an abundance of her natural lubricant. \"Wow, Mom... this feels great! Your pussy... is so wet!\"\n\nKaren's cheeks burned with embarrassment. Her vagina was not only wet... it was saturated due to her arousal from the previous night. Robert, exhausted from a long day, fell asleep early, and left her alone to suffer with her chemically charged libido. She ended up sneaking into the bathroom and masturbating. But that would only be a temporary solution.\n\nEarlier this morning, Karen could feel the tingling sensations in her nether regions had returned, and she attempted to seduce Robert for some early morning action. However, with him oversleeping and running late, the horny housewife was once again denied some much-needed relief. Since she could not depend on her husband to fulfill his duties, she turned to her teenage boy and his enormous pussy pleaser to satisfy her needs.\n\nEven though teetering on the edge of her first orgasm, Karen couldn't help being a mother, \"Jake! Don't use... that nasty word!! Oh my! Ohhhhhhh... my goodnesssss!!!!\" To brace herself, she reached over and grabbed hold of the washing machine control panel as the first waves of immense pleasure rolled through her quivering body. \"OOOOOHHHHHHH!!!!!\"\n\nJacob could feel Karen's vagina twitch and spasm. \"Mom? Does that... feel good?\"\n\nThe term 'good' was an understatement. The orgasms Karen reached with Robert were considered 'good'. However, what Jacob's freak of nature did to her was on a totally different plane...more like an out-of-body religious experience.\n\nWith her brain still dealing with the sensory overload, Karen could only reply with a series of grunts and groans. \"Ughh!! Ughh!! Ughh!!\" She sounded like a wounded animal as she pushed her ass into her son's crotch, desperate to experience the thrill and ecstasy once again.\n\nFor the next couple of minutes, Jacob continuously slammed into Karen's matronly backside. He was fascinated by the ripples in her cushiony flesh each time their bodies collided.\n\nIn that time, Karen achieved a second climax. Afterward, she lowered herself so that her torso lay flat across the washing machine. While she floated in a post-orgasmic fog, Jacob continued to plow away at his mother's sopping wet pussy.\n\nAt that moment, the washing machine went into the spin cycle. The powerful vibrations worked their way through the thin fabric of Karen's tee-shirt and bra to her sensitive nipples. The intense stimulation in her breasts only added to her euphoria, causing her to moan. \"Ohhhh! That feels... niiiicccce!\"\n\nJacob could feel his release getting near. He grabbed hold of the bottom of Karen's tee-shirt and used it as a harness as he began slamming into her even harder. \"Mom... ugh! I'm gonna cum... where should I... Ugh... finish?\"\n\nBecause of the loud vibrating appliance, Karen didn't hear Jacob's question. Plus, she was lost in the combined heavenly sensations that were attacking her pussy and wobbling tits. She was quickly building up to a third mind-blowing orgasm.\n\nNot hearing a reply, Jacob grabbed hold of Karen's lustrous chestnut brown hair. He pulled her head back, causing his mother to arch her back and squeal out in surprise and delight. The conservative mother was beginning to like her son being a bit more aggressive.\n\n\"Mom... I'm almost... there! Can I... stay... inside?\"\n\nKaren was also about to peak. Her logical side knew she should tell Jacob no. However, she was desperately close to once again reaching paradise and did not want to give up the incredible feelings flowing through her nervous system.\n\nKaren tried to figure out if it was a safe time of the month; however, her mind was scrambled... so scrambled, in fact, she could not even remember what day it was. Finally, she decided to roll the dice and replied to Jacob, \"Y--Yes... Yeeesssss!!\"\n\nDelighted by her answer, Jacob let go of Karen's brown locks and grabbed onto her wide and fleshy hips. \"Oh yeah! Hang on, Mom... here it... comes! I'm gonna dump my load... deep inside you... AAAAAAHHHHHHH!!!!\" The teenager's climax was so intense it felt as if his swollen testicles exploded, and it caused a chain reaction for his mother.\n\n\"OOOOHHHHHH!!! MYYYYYYYY!!! YEEEESSSSSS!!!\" Karen cried out as her son filled her womb with his steaming hot man seed. The worry of pregnancy faded away and was replaced by pure orgasmic joy. Her only wish was that she could stay lost in this feeling forever.\n\nAfter a while, Jacob reluctantly pulled his deflating cock from Karen's twitching vagina. A river of cum immediately began to cascade out of her gaping pussy and travel down her long legs.\n\nTurning around, Karen noticed Jacob's dick and testicles covered in a frothy mixture of their combined fluids. With her yoga pants still halfway down her legs, she dropped to her knees and took hold of her boy's penis. She then lovingly used her mouth and tongue to clean away the sinful evidence of their unholy mother-son union.\n\nKaren pinched Jacob's cock just below the mushroom-shaped head. A final dollop of his creamy semen emerged from the slit, and the loving mom quickly lapped it up with her tongue. After a quick inspection, she gave the spongy head a motherly kiss, then stood up and said, \"There now... do you think you'll be safe around Sara today?\"\n\nWith a goofy grin, Jacob replied, \"Yes, ma'am.\" Then, as he noticed the stream of fluids running down her thighs, he added, \"Thanks, Mom, for letting me finish inside. That was awesome!!\"\n\nGrabbing a towel, Karen began to wipe between her legs and responded, \"You're welcome, but don't get too used to it. We still have to be on guard and use condoms.\" Seeing the smile drain from his face, she added, \"I know they're uncomfortable and annoying, but I ordered some that hopefully will fit you better than the ones you have now.\"\n\nJacob reluctantly nodded in agreement.\n\nIn her mind, Karen agreed with Jacob... it was awesome. Probably the most incredible thing she had ever experienced, however, it was too dangerous, and she had to stand firm. She knew if they played with fire, they would eventually get burned.\n\nAfter pulling up her yoga pants, Karen said, \"Okay... Let's get cleaned up, and then I'll drive you to school.\" They both noticed the small puddles of their body fluids on the floor. She then said, \"I'll take care of that when I get back home.\"\n\nLater on, Karen stood at the counter in the office at Jacob's school. She was in the process of signing him in and fibbing about the reason for Jacob being tardy. Her excuse was that they overslept because her alarm clock did not go off due to a freak power outage on their block.\n\nWhile Karen continued explaining her case to Mrs. Anderson, the doting mother could feel some of her son's baby batter drip into the gusset of her clean panties. What a shock it would be for the mild-mannered secretary to know the truth... to know the actual reason why this prim and proper mom was late bringing her son to school. The thought made Karen shiver.\n\nAfter handing the clipboard back to Mrs. Anderson, Karen looked down at Jacob and smiled. \"Bye, Sweetie... have a good day.\" She then leaned over and kissed the top of his head.\n\nWhile Jacob gave his mother a displeased look for her display of affection in front of the school secretary, Mrs. Anderson commented, \"Awwwww... that's so sweet!\"\n\nFeeling his cheeks turn red from embarrassment, Jacob threw his bookbag over his shoulder and quickly replied, \"Bye, Mom.\" He then turned and made a hasty exit out of the office.\n\nWhile Karen watched Jacob through the window as he walked down the hall, Mrs. Anderson said, \"They grow up so fast.\"\n\nTurning to Mrs. Anderson, Karen huffed and replied, \"Tell me about it. It seems like yesterday, I gave birth to him. Now my little man is going on dates and applying to colleges.\"\n\nMrs. Anderson chuckled then said, \"My kids now have kids of their own, but one thing never changes for us moms...\" The older lady then leaned on the counter and continued, \"No matter how old they get... they will always be our babies.\"\n\nKaren turned back just in time to see Jacob turn the corner and disappear. She smiled and replied, \"You're right about that, Mrs. Anderson... they will always be our babies...\" The sentimental mother then felt a delicious little quiver take place in her vagina as more of her \"baby's\" virile seed trickled into her panties. Then, taking a deep breath, she added, \"They always will be.\"\n\n********************\n\nEND CHAPTER 10\n\nSTORY WILL CONTINUE IN CHAPTER 11"
    ],
    "authorname": "RTR9209",
    "tags": [
        "incest-taboo",
        "mother-son",
        "big tits",
        "mom son incest",
        "milf",
        "older woman",
        "younger man",
        "mature",
        "teen"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/wicked-hormones-ch-10"
}