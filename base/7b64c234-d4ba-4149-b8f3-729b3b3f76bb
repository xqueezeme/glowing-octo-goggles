{
    "title": "A Gift From His Father Ch. 23",
    "pages": [
        "Thanks again to Spirit02 for editing and keeping me focused.\n\n*****\n\nFinally they were able to settle themselves and reluctantly disengaged themselves before looking to John. They were eager for more, when they heard a tiny voice call from across the room.\n\nStanding in the doorway, her peasant dress hanging off one shoulder exposing a large naked breast, the nipple being casually wrenched as if she were twirling a lock of her rich black hair, was a beautiful Latin woman.\n\n\"Excuse me, the door was opened. John you were going to take me home?\" she said, but it was more of a question.\n\n~~~\n\nConcerned that Rocky's information may be out of date having spent the last seventy-seven years imprisoned within the Ring of Power, John reluctantly accepted his financial advice. That had been several days ago. Although he had his doubts, he hoped that he didn't reveal them. Even if Rocky was out touch, he's John D Rockefeller, one of the wealthiest men who ever lived, even a bad guess would be better than what he or Mark were capable of, not that John had money worries. But he was investing heavily in his projects and he didn't want to have to actively follow his investments. He preferred to leave that to his brokers. \n\nHowever, his high school buddy Mark Taylor was becoming very proficient with finances and computer programming since John had given him a little boost. He had been subtle, Mark may not have known how John had amplified his curiosity and intellect, but he may be getting a little suspicious. John told him his educated guesses had been lucky but Mark knew it was more than that. The Boutique was now open in three major shopping malls and Cindy was spending her time commuting between the three. But she and Mark had ensured their employees were well trained and paid. So, despite the added responsibilities she wasn't working any harder and had time for relaxation from time to time. \n\nFor his part, John was simply a silent investor, willing to let Cindy buy him out whenever she was willing. The partnership was working well however; she loved the fact that the boutique was successful and she could finally have a life.\n\nIf the truth be known, it was probably due to the fact that she was finally well rested, that is when Mark wasn't fucking her silly that she began to notice a few little things. For example, that Mark seemed to be a little bigger than she remembered when they first got together. Also, he never seemed to tire and could cum as many times as she seemed to need him to without the number of his ejaculations dropping off. She attributed it to his youth. Not that she was complaining. But if she let him, he wouldn't stop fucking her until she would beg for him to stop and she'd walk funny for the next two days. \n\nIt was a good thing that he was taking classes at San Jose State University. She was worried when he first told her of his plans. She knew that she'd lose him to some young sexy coed with big tits and a nice ass. But, Mark told her he wasn't interested in anyone but her and proved it daily. She loved him, but she knew it wouldn't last. Nevertheless, she was happy to enjoy it for as long as it did.\n\nJohn and Mark talked daily, usually just to update John on his cash flow and alert him to any financial changes he needed to know about.\n\nSo it came to John as a complete shock when Mark called to tell him how his latest investments had paid off better than they could have dreamed possible. \"John, you are officially a tycoon,\" Mark told him. \"Your net worth is now somewhere over 50 million dollars. Whoever is giving you stock market advice, don't let them go!\"\n\n~~~\n\nAna hated cleaning the second story bedrooms and master suite, so it made no sense to the other maids when she traded duties and agreed to take it on full time. She was the senior maid having been employed just after Carmen and Maria left without giving notice. Ana was determined to find time to secretly use her employer's very special sex toy, the Sybian. The one time had changed her life and she was eager to try it again. She knew that she'd have to be very careful, so she planned on working very hard and as quickly as possible to make sure she could squeeze in her sessions.\n\n~~~\n\nDrunk with power, he wallowed at his success. Who knew that he could turn an innocent teenage girl into a lesbian by his mere thoughts of seeing all those young women naked in the locker room? He continued to ride unnoticed by his hostess in the back of her mind. \"She has a family, let's see how far we can take this,\" he thought. \n\nShe entered her home only a couple of miles from the high school. Like most teens her age she went to the fridge and pulled out the jug of milk and filled a glass. All that sex had made her thirsty. Her mind was still swimming with all the things she did with her girlfriend. \"I guess she really is my girlfriend now isn't she.\" As she walked to her room she bumped into her older brother, almost spilling the half full glass of milk.\n\n\"Hey kid, watch where you're going, unless you want to be on your hands and knees cleaning up that mess? You know how mom is about eating in our rooms.\" Her older brother said as he stepped past her on the way from the bathroom to his bedroom. \n\nDr. Smith got an idea. He began to tell the young girl how much she loved her brother and had lusted after him for years. It is time to act on that lust. \"Follow him into his room and make your move.\" \n\nShe remembered her earlier crush on her older brother. She did wonder what he was packing, she imagined it being a bit larger than average. She'd seen a glimpse or two of him when he was coming out of the bathroom having just finished a shower. Yes, it was time to find out just how big he was and if he knows how to please a girl.\n\nShe entered his room and closed the door, leaning on it. \"What's up sis? Lose your way?\"\n\nShe had a look on her face that he'd seen before, one of drunken lust. He'd seen it at a few of the frat parties he had attended. It worried him. \n\n\"Ahh what are you doing?\" he asked as she began unbuttoning her blouse, revealing her pink bra and flat stomach. \n\n\"What I have been dreaming of doing for a long time, dear brother.\" Discarding her blouse she lunged at him. But being larger than her and with a few years on the football team he easily knocked her away and yelled for her to cover up and behave herself.  \n\n\"He's only playing hard to get,\" she realized as Dr. Smith whispered, \"Lose the bra. Let him see what he's been missing.\" She stood and stared at him before she unhooked her bra, letting it fall to the floor in front of them. \n\n\"Have you lost your mind?\" he said at the same time ogling a pair of the nicest tits he'd seen in a long while, his cock hardening despite his outrage. \n\n\"Come on brother, you know you've secretly wanted to get your hands on these puppies for a while. Now's your chance, we've got about an hour before mom comes home.\"\n\n\"Are you nuts? That's incest. We are family, we don't do that. Who have you been hanging around?\" he said as she slowly advanced, backing him into a corner. \n\n\"For God's sake,\" Dr. Smith sighed and just like that he found himself within the young man's mind looking at a pair of perfect tits just waiting to be played with. \"What are you waiting for, you've been trying to sneak a peek at them for years and now there they are. Go for it!\"\n\n\"Well. Maybe if we keep this just between the two of us. I have to admit that I have wondered what they looked like.\" Drawn to his sister like a moth to a flame he pulled her close and began to feel her tits. He lifted them to feel their weight and then taking one of the pink nipples into his mouth, he sucked on it as it hardened. \n\n\"Oh!\" panted his little sister. He was turning her on more than she thought possible. She fumbled with his belt and pulled out his hard cock. He left her tit for a moment, and pulled down her panties and skirt. She was now completely naked, and had his hard cock in her hand. She quickly sucked it into her mouth before he realized what they were doing. \n\nShe marveled at how her day was going as she happily sucked her brother's cock. \"I guess I am not a lesbian after all,\" she thought as she brought her brother off and swallowed his juices, enjoying the taste as he passionately roared as he came, filling her mouth until it ran down her chin. \n\nThey sat back catching their breath, surprised at what they'd done, but feeling no guilt. She licked her lips and he stared back at her open pussy framed by soft blonde curls. He was beginning to soften, but he knew that he had to sink his cock in his sister's pussy or he'd go mad. She saw the look on his face and watched his cock begin to swell. Sitting on the floor now, she spread her legs and began to finger her pussy while curling her other index finger, beckoning him to her.\n\nWithout ceremony he lunged forward and she guided him into her wet and ready pussy. She shrieked as his large cock forced her wider than she'd been before. She was tight and he tried to be gentle but he was too eager and before he knew it he was balls deep. She sighed heavily while he rested, enjoying the tight fit.\n\n\"Well big brother, are you going to fuck me, or simply enjoy the view?\" \n\nHe needed no more coaxing, and began pulling back slowly, driving her crazy, and then slid back inside her quickly. \"Come on bro, fuck me,\" she taunted.\n\nHe began fucking her as hard as he could, each time he hit bottom his balls slapped her ass and echoed through the small room. He fucked her missionary for about four minutes before he switched and leaned her over his desk, fucking her from behind going even deeper than before. She shrieked, announcing her orgasm. \"My brother made me cum,\" she thought as her scream died to a soulful moan. They switched places again. This time she got on top and lowered herself onto him using her hands on his chest to steady herself, then she bounced on him as she came again. He came too, flooding her with his thick seed. \n\nJust then, the door opened. Their mother stood in the doorway. The stench of their fucking assaulted her, the smile disappeared from her face and she saw her naked daughter perched on her equally naked son, both panting, both realizing that they were in serious trouble.\n\n\"What are you doing? How could you do...\" their mother yelled and then froze mid-sentence before continuing, \"...this without me?\" She ripped open her dress, buttons flying everywhere, and joined her children on the floor. She pulled her son's softening cock out of her daughter's slippery pussy and into her mouth, savoring the taste of their combined juices. \n\nShe didn't remember ever seeing her mother naked, so while her mother sucked her brother's cock back to life, she released her mother's large breasts from the confines of her bra and slid her panties down her soft legs and over her heels. She took her place between those legs and ate her second pussy of the day. She quickly brought her mother to a climax, one the likes of which she'd never before experienced. Before long they had switched positions and she found herself on her hands and knees as her son fucked her from behind while she ate her daughter's pussy.\n\nHearing the noise upstairs, he climbed the stairs and followed the sound to his son's bedroom. The sight that he saw was unfathomable. He dropped his bible and study books, pulled the white collar from around his neck, and removed his cock from his pants, his daughter quickly taking him into her mouth.\n\nDr. Smith roared with laughter that only he could hear, as he saw how easy it was to manipulate and corrupt this family. No doubt they would be fucking each other for the rest of their lives now. He howled as he gave the pastor additional instructions to make sure to fuck his daughter in her tight virgin ass. She'd been saving it just for him. \n\n~~~\n\nStanding in the doorway, looking at the aftermath of the mini orgy, and obviously aroused as she pulled on her nipple as if she were simply twirling a lock of hair, she waited.\n\nEveryone looked at the girl and then at John, who merely shrugged and froze both the woman and April in place simultaneously. He turned to Elizabeth and Candace and explained who the woman was and that he'd temporarily made her believe that she was a simple hostess at a local chain of Mexican Restaurants. He explained that at the time he had had his hands full and that seemed to be the simplest solution. \n\nBoth Elizabeth and Candace were taken by the young woman's beauty, despite her being a potential enemy. John explained that he froze April because he was concerned she might remember the woman who may have played a part in her mental abduction. Were that the case, she'd be dealt with, but he had more important matters to attend to.\n\n\"I am going to wake the woman; I named her Linda del Rio. She will be your new maid,\" John told Candace. \"She'll know how your kitchen is arranged and where you keep your cleaning supplies. Anything else you'll need to supply. You can build any back story you like, she'll accept it.\" He turned and looked at his betrothed, he didn't like freezing April and keeping her in the dark, but he needed time to figure things out, and recapturing his father was at the top of his list. In a blink he was dressed and clean, smelling wonderful to the women. \n\nMeanwhile Linda's attire had changed too. In place of her long peasant dress and sandals she now wore a black skirt, white blouse and apron. Her hair was twisted and sitting on her head. She wore worn black work shoes with white socks turned down on her ankle and a minimum of makeup. She was still stunning. She looked like a cross between Rosario Dawson and Jennifer Lopez. Her dark features only made her look more exotic and alluring. \n\nJohn looked at his watch. He hated to leave, but he had a lot to do and he hadn't yet figured out how to completely stop time, something he was working on. \n\nCandace thought that a maid would certainly come in handy. How would she explain this charade to April? If they were to maintain hiding the woman's true identity, she didn't want April to get close to her, particularly if she was a potential enemy. She could use her mind control on her daughter as she had before, but she didn't like doing that, worried that it may have some ill effect. \n\n\"Ah, John...\" she hesitated. \"Master, I don't think it should be me having to explain this to April. You just proposed to her and she is an adult after all.\" Candace was of two minds. She was thinking maternally, but at the same time questioning her master, lover, and boss. It was getting confusing for her. But she was concerned for her daughter. It was different when they were alone, but she was in front of another agent and didn't want to seem disrespectful. \n\nJohn looked at Candace for a moment and realized that she was right; he was taking the easy way out. \"You're right,\" he said, and he walked over to April and took her hands in his and spoke to her as he unfroze her. \"Apes, the woman in the doorway is your mother's new maid. Linda del Rio. You are to treat her as hired help, don't get too close, she may not be here very long. It is a trial thing. You have never met her or seen her before.\" He kissed her gently on the lips as Candace and Elizabeth watched. \"I have to go but I will call you later.\"\n\nApril blinked, returning the kiss; it made her wet all over again. \"Okay,\" she said meekly.\n\nJohn walked over to where Linda stood, still motionless, and he unfroze her as soon as he was standing in front of her. \"Linda, Candace has decided that she wants to give you another chance. She hasn't been pleased with your work, but I convinced her that she should give you one final chance. As you know they don't wear many clothes around the house and I wouldn't be surprised if she required you to work only in your apron. You need this job, are you up to the task?\" \n\nCandace, April and Elizabeth had forgotten they were naked. John had erased from Linda's memory what she'd seen earlier; she was only aware of what she was able to see as she awoke. She began processing the information.\n\n\"Sir, I am so sorry. Thank you for standing up for me. I will work even harder,\" she said, eager to please.\n\nCandace took that opportunity to interject, \"Very well, Linda,\" she said as she sauntered up and curled herself against John. \"I am willing to wipe the slate clean and begin anew. Why don't you see what you can prepare for lunch? Afterwards we will reevaluate your duties and see what we can improve on.\"\n\n\"Yes, mistress,\" Linda smiled brightly, turned on her heels, and headed into the kitchen.\n\nJohn kissed Candace after pulling her into a close hug and whispered, \"Take care of my girl. I'll be back as soon as I can.\" He turned to Elizabeth. \"If you have nothing else planned I have a job for you. Catch up with me in an hour or so.\"\n\n~~~\n\nHer phone rang, startling her, but she managed to find it among the discarded clothes and seeing who it was, she quickly opened the line with a touch of the screen.\n\n\"Hello?\" she decided to act innocent. \n\n\"Hi, it's me. Are you alone? Can you talk?\"\n\n\"Sure. Go ahead.\"\n\n\"I have to see you again. That was wild, what we did at school in my van, I mean. I didn't know that you...\" She couldn't find the right words. \"I mean you were so good, I don't think I've ever come that hard before.\" She hesitated again. \"Can you get away? My folks are gone for an hour. We could explore a little more.\"\n\nWith Dr. Smith's influence it was easy to see how anxious her friend was, \"An hour isn't much time, why don't you come over here, my folks are cool, they won't mind. You could stay for dinner.\"\n\n\"Are you sure? I thought they were...ah you know kind of conservative.\"\n\n\"Not to worry, it will be fine. See you in thirty minutes, okay?\"\n\nShe didn't wait for a reply, she simply disconnected the call, moaning loudly and then panting.\n\n\"Get that mouth back over here and finish eating your mother's pussy,\" her mother said as she pulled her son's cock out of her mouth and then licked it like a dripping ice cream cone before putting it back in and closing her lips around it.\n\nHer daughter slowly responded. It was hard for her to move too quickly with her father's cock pounding her tight little ass from behind. He was close to coming; he couldn't believe how incredibly tight his daughter's ass was. His eyes were bugging out, but for some reason he wasn't quite there yet.\n\nDr. Smith was delighted with his improving control over the family. At first he had to bounce back and forth between each member, but soon he was able to convey his thoughts to each regardless of whose mind he was in. And soon he'd have another victim under his control. \n\n~~~\n\nThere was a bit of a chill in the air, the temperature only reaching the mid fifties. But it was a bright and sunny day. John was mentally preparing himself to meet with Dinah Cohen as he walked through the marina towards the restaurant. He needed to be an asshole and callous. He didn't want to be like that, but Dinah Cohen deserved nothing more.\n\n\"Sir, if I might add a thought?\" Rocky spoke to him as his father used to from the confines of the Ring of Power through some sort of telepathy. \"You don't have to be that way. It is taxing on you. Besides you've already punished her. John, perhaps if you were just yourself, be straightforward, no need to be nice. Feel free to snapping at her occasionally, to keep her off balance may be enough.\"\n\n\"Thanks, Rocky. I hadn't considered that. But what if I forget what it was that she did? In the short time you've know me, you know that I enjoy treating people well.\"\n\n\"In that case, why don't you simply tattoo a message on her forehead, one that only you can see and then you will remember every time you look at her?\" \n\nThis made John laugh loudly. \"That's a Great idea, Rocky. I'll do it.\"",
        "John arrived at the busy restaurant and he saw Dinah sitting near the window in a booth overlooking the marina. She was a beautiful woman, John had to admit, and she smiled as she saw him walking towards her. As he grew closer he took the opportunity to tattoo her with the words, \"I hurt April\" in bold red letters that only he could see.\n\n\"Hello, master,\" she said and batted her long eyelashes at him. \n\n\"Do you have what I asked for?\" he asked as he sat down.\n\nUnfazed, she smiled and handed him a new leather briefcase. John accepted it and opened it. Inside were several \"file folders\", a few cassette tapes, and a large box. He opened it, and found inside a large bottle of pills that was pressed into a foam cut out, which held the bottle firmly in place.\n\n\"Is this all of the drug?\" He looked at the contents, noting the bottle wasn't full.\n\n\"Yes, master,\" Dinah replied, expecting the question. \"This is everything I have. I have included details regarding the party that supplied me the drugs. It's all there.\" \n\nJohn closed the case and set it on the cushion next to him just as a waitress arrived. She efficiently took their order and left.\n\n\"Are you pleased master? I gave you everything you asked for. I was wondering if it would be alright if I could suck your cock. I am so horny. Since I am no longer a lesbian it's all I have been thinking about, large, small, fat, thin, cocks of all colors.\" Dinah asked John in a voice he never thought he'd hear the woman use. She was pleading with him.\n\n\"And why didn't you take care of this before you arrived? Am I responsible for your needs being satisfied?\" John looked at the woman incredulously.\n\n\"Oh, no master, I just thought that you might allow me to worship your cock as tribute to you.\" He could see the wheels of her mind at work, trying to figure a way out of the mess she'd made. \"Besides, master you've forbidden me from having sex during working hours, don't you remember?\"\n\n\"Of course I remember,\" John snapped, not willing to admit that he had indeed forgotten that in his anger he'd locked her into a routine that wouldn't give her much freedom. \"Perhaps that was a bit too restrictive of me,\" John admitted. \"Are you wet?\"\n\n\"Oh yes master. Would you like to feel?\"\n\n\"That won't be necessary. But you could remove your panties and hand them to me.\"\n\nDinah's eyes opened widely as she processed the request. It was one thing to fawn over her master in public. She could only imagine what she looked like as she tried to remain dignified as she begged him. But he had asked her for her panties, which she was only too happy to surrender if it would get her his or any other cock. But was he asking her to remove them in public? \"Certainly master, I shall be right back.\"\n\n\"Where are you going?\"\n\n\"To the ladies room,\" she replied. \n\n\"No need for that, take them off here,\" John said and smiled at her. \"You aren't going to make me wait, are you?\"\n\nShe swallowed her pride and shimmied in her seat as she pulled her skirt up and hooked her fingers on the sides of her panties and pulled, trying to maintain her fleeting dignity she reached down and pulled her feet out, ignoring the few stares she was getting from the people nearby. When she'd finished she balled them up and attempted to hand them to John. \n\n\"Are they wet?\"\n\nThey were indeed very wet; John could smell her from where he was sitting. \n\n\"Yes, master they are soaked with my juices.\"\n\n\"Open them up and smell them. I want you to be certain.\"\n\nShe realized that he wasn't going to let up and she needed to acquiesce before he embarrassed her further. She needed to face the facts. Her life as she'd known it was over. He would allow her the illusion of her freedom, but she was his to toy with and do whatever he asked. She was lucky that he seemed to have more important things on his plate just now or he'd make her his project and really take her down a peg or two. \n\nShe opened the red silk panties exposing the lacy gusset and pressed her nose in, taking a deep breath. Only a day or two prior, the odor would have enticed her further, but she was surprised to learn that the scent of a woman, in this case her own, no longer enthralled her. \n\n\"Very good, slave,\" John refused to use her name. \"You have learned two very important lessons. For that I am going to remove the restriction of having sex at work. You need a cock or two. It isn't to interfere with your work though. I need you to maintain your current position with the firm. Furthermore, you may say no only if saying yes will jeopardize your position.\"\n\n\"Thank you master,\" She was relieved.\n\nJohn picked up his phone and pressed a button, waiting a moment before the familiar voice on the other end answered. \"Hey boss. What can I do for you?\"\n\n\"Chance, are you busy this evening? I have an assignment I think you are going to like.\"\n\nJohn forwarded Chance Dinah's address and hung up. \"You'll be having company about nine tonight. You're not busy are you?\"\n\nShe shook her head slightly from side to side. She was still holding her panties in her hand when the waitress arrived with their order. The waitress looked at Dinah as she set the food down, then asked if there was anything else they needed. Hearing that there wasn't, she left, but not before looking back at Dinah with a look of pity.\n\nJohn accepted her moist undergarment, and he stuffed it into his coat pocket. \"You won't be needing these, in fact, I don't think I want you to wear panties or g-strings of any sort until further notice. I want you ready in the event that I should ever be in the mood to see that cunt of yours.\"\n\n\"Yes master,\" she replied. It seemed to make her pleased that her master might fuck her after all, someday.\n\nJohn nibbled on a couple of fries that looked appealing, and grabbing the briefcase, he stood. \"Be sure to tip the waitress generously.\"\n\n~~~\n\nShe nervously rang the doorbell and waited. She couldn't believe what she was feeling and with whom she was smitten, it was like a dream. \n\n\"Hey sweetie, come on in.\"\n\nThe nervous teen entered the home and was quickly introduced to the family, who seemed normal enough. They were winding down from their day; the television was on, mom was in the kitchen and dad was in his office.\n\n\"Let's go up to my room,\" she told her girlfriend. Bounding up the stairs they raced down the hall and into her bedroom before closing the door. Before the door was completely shut, they were in a passionate lip lock while their hands roamed over each other's bodies and under their clothes. Soon they were on the bed, their clothes discarded on the floor. They seemed to be repeating their earlier play as they quickly moved into a sixty-nine, their heads between each other's legs. They were so involved in what they were doing that neither heard the door open and her mother enter the room. \n\n\"Hello you two, I didn't think that you'd be this far along. You couldn't wait for me?\"\n\nThe girl popped her head up from her friend's pussy as she watched her new friend's mother remove her dress. She noticed that the woman was completely naked underneath. She was becoming nervous but her friend didn't seem too concerned. In fact she hadn't stopped eating her pussy and she was getting near to coming. She looked at the older woman as she crawled onto the bed and they kissed. Her own hands seemed to have a mind of their own and reached out and began fondling the C cup breasts being offered to her. She was delighted and after a few moments she found herself enjoying the touch of the older woman as she and her daughter focused their attention on her.\n\nIt was just as she was coming that she realized that someone else had entered the room. When she looked up she saw a large hard cock inches from her mouth. Looking up, she recognized the owner as her friend's older brother. She was a committed lesbian and had no interest in cock, but she opened her mouth and sucked her first cock in years. She seemed to know just what to do and could see that it was having quite the effect on the boy as he quickly spurted his juices into her mouth. \n\nShe wanted to gag, she hated this stuff. But instead, she made a show of displaying how much cum she had gotten and exchanged it with her friend's mother. Her friend was still working on her pussy and she soon found herself coming again.\n\nBefore she had completely come down from her high, she felt something warm and hard being inserted into her tight pussy. She looked up and saw Pastor Jones shoving his large cock into her. She wanted to cry out, she was a lesbian, she didn't do cock, and then she realized how silly that was, she loved cock. And she especially loved Pastor Jones' cock. It made her feel good. He really knew what to do with that thing; he was stroking into her hard and fast and she loved every moment of it. She looked up and saw her friend's brother playing with his cock as his mother squatted over his face. She decided that he had enough to do and pulled the cock to her mouth and repeated her earlier efforts.\n\nDr. Smith was once again elated by the results of his actions. He was becoming better at controlling their minds. He wondered what his limits were as he began to formulate a plan to capture one of John's agents or his daughters, anyone that would give him enough leverage to get the Ring of Vengeance from John and allow him to keep his freedom. \n\n~~~\n\nThere was a knock on the door, but before she could reach it, the door opened and in walked the largest black man she'd ever seen. He wasn't just tall, but was lean and muscular; the shirt he wore was almost bursting at the seams as his muscles flexed leisurely as he entered the room. Then she remembered seeing him the night she was hung on her wall, the night her entire world changed. \n\n\"Good evening Dinah. I believe you are expecting me. I thought I'd let myself in.\" The big man walked up to Dinah. She wasn't a petite woman, but next to Chance she was dwarfed. \n\n\"I am told that I am to reacquaint you with cock,\" he said and smiled as he looked down at her. \"You've been playing for the other team for a while.\"\n\nDinah almost swooned. At last she'd get properly fucked. She let out a weak response, \"Why don't we go to my bedroom?\" A second thought came to her mind, \"as big as he is his cock must be massive.\" \n\nChance followed the former lesbian through her home and into her sanctuary, a place no man had been before. It was spacious, a room befitting a queen. Chance sat on the edge of the bed and motioned to Dinah to lower herself to the floor and crawl to him on her hands and knees. She didn't think, she only responded. When she arrived at the bed she instinctively rose between his spread legs. \n\n\"Why should I waste my time on someone like you?\" he asked. \"I am here because the boss asked me, but I know who you are and I am not sure I should help you. Convince me that I should.\"\n\n\"Damn.\" Dinah thought to herself. \"What's a woman got to do to get fucked?\" So for the first time in a very long time, Dinah Cohen was going to tell the truth.\n\n\"Sir...\"\n\n\"Chance, you may call me Chance,\" he corrected her.\n\n\"Alright then, Chance, let me be honest.\" She paused as those words hung in the air. \"I am a self-centered rich woman of privilege; well that is what I used to be. I am accustomed to getting my way. I never had much need of male company having been a lesbian since my college years back in the late 70s. But all that has changed. I realized that I am lucky I wasn't turned into an old bag lady with a withering body, living in the streets. I realize that our master knows what he is doing because this life or the one as a bag lady is far worse a punishment than death.\"\n\nShe paused as a large tear fell from her right eye and ran down her face.\"The truth is that I am scared, frightened half out of my mind. Worse, I am horny as hell and need something large in my mouth, pussy and ass. I think about cock all the time and haven't any idea what to do. So, Chance...\" She paused again. \"Will you fuck me, make me suck your cock, fuck my ass so that I can satisfy these urges and then maybe master will find me worthy enough to rescind some of the punishment I have brought on myself.\"\n\n\"Pussy, mouth and ass, you must have really pissed him off.\" Chance chuckled. \"You realize that I am, let's say, rather large. I could seriously hurt you if I was... careless.\"\n\nChance looked at the woman who had just admitted she was beaten. He'd seen this before, she may simply be playing him, but he decided to give her the benefit of the doubt.\n\n\"Okay, I will train you. But, if you quit, it will be harder on you than you can imagine. You see, not only am I here to fuck you, but also to help decide what to do with you once your legal services are no longer required.\"\n\nDinah blinked. She didn't think that she would be so quickly discarded. Would he let her live, probably as a bag lady? She shuddered as the horrible image returned.\n\n\"So, why don't we see what I have to work with, stand up and get naked,\" Chance ordered.\n\nIn a daze, she quickly rose and began to undress. She began with her skirt; she hadn't changed from her work day clothes. She removed it and saw the immediate approval; she didn't have panties on, as she'd been instructed.\n\n\"Very good,\" Chance noted, \"continue.\"\n\nThat seemed to lift her spirits a bit and she unbuttoned her blouse, tossing it on the chair with her skirt, leaving her clad only in her red lace bra. Chance could see that it was expensive, she had good taste. She quickly shed it too and stood before him completely naked as he inspected her.\n\n\"How old are you?\" he asked. \n\nShe wanted to ask him how old he thought she was, but realized that this wasn't the time to be coy. \"Fifty four,\" she said, admitting her true age for the first time in years.\n\n\"I wouldn't have guessed. Turn for me, slowly.\"\n\nFeeling better, she began to slowly turn as his eyes memorized every curve and valley of her magnificent body. Her legs were shapely and toned; where they met she kept a short cropped landing strip of brown hair that matched the color of the hair on her head. Her stomach was flat and slightly muscular, which made her C cup bust look much larger.\n\n\"Lift them, your tits. Lift them up for me.\"\n\nShe did as he had asked. \n\n\"Have some work done?\"\n\nShe blushed and nodded. \"A little,\" she admitted, \"about three years ago.\"\n\n\"Good work, hardly noticeable.\" He paused a moment. \"Bend over and spread your cheeks.\" He was enjoying the show. \n\nShe complied and displayed her tight ass hole. He could clearly see her pussy from behind, almost grasping for something to enter it.\n\n\"Nice, very nice,\" he said. Come and kneel between my legs again, I think you are ready for your first lesson.\n\n~~~\n\nThere was a soft but noticeable knock at the back door. Mary was already in the kitchen and walked the short distance to open it. She was wearing only her apron; it was her habit to walk around the large, empty house nude, particular since she knew that George would be stopping by. They were becoming \"a thing\", although Mary had warned George that she wasn't into monogamy, they both really were enjoying their morning ritual. \n\n\"Mmm... you look good enough to eat,\" George said as he slipped into the house. Closing the door, Mary spun around on her toes allowing him to get a full 360 degree view of her fantastic body before he pulled her into his arms for their first passionate kiss of the day.\n\n\"I hope you do that and more,\" Mary said in a delayed response to his comment. \"But first, a bit of food to help you keep up your strength. You're gonna need it, I guarantee it!\" Mary said as she slipped from his embrace and sauntered to the stove where she was in the beginning stages of fixing her special omelet. \n\nGeorge slipped in behind her, pressing his hardening manhood against her fabulous firm ass and reaching around he began caressing her tits under her apron. \"Hmmm...I am going to give you ten minutes to stop doing that.\" She giggled, appreciating the attention.\n\nAs soon as the omelet was done they sat down to eat and talk like old friends. With the apron discarded George ate while enjoying the view. Mary slouched down in her chair and George laughed and teased her when her marvelous tits were resting on the table. She squealed and threw her napkin at him. They were indeed becoming very comfortable with each other.\n\nIn bed, George was a patient lover and although it wasn't necessary, he made certain that Mary came at least twice before he enjoyed his own release. The only exception was when Mary insisted on manipulating him orally first. Amazingly he was always able to rise to the occasion for a second, third or fourth round, despite his age. Of course, he didn't suspect that Mary's mind control played any part in his vitality.\n\n~~~\n\nLinda worked in the kitchen, preparing enough food for the three women. She assumed they were lesbians or nudist; it really didn't matter to her as she was being well paid; so what if they were a bit eccentric. \n\nShe shuddered thinking about what John said though, being asked to work in the nude. \"It could be fun,\" she thought to herself, but knowing how horny she always was, she'd probably wind up fingering herself several times a day. Just thinking about it now was making her pussy drip. \n\nShe quickly focused on the task at hand. She had prepared homemade chicken tortilla soup, and ham and turkey sandwiches. She made a note to buy some groceries.\n\nWhen she called the women, she was pleased to see that they had dressed. Not that she minded them being nude, but it was a bit of a distraction. That puzzled her. She seemed to think that she was attracted to both men and women. She laughed to herself, she just loved sex and she wasn't partial to where it came from. \n\nShe tried to focus on the job, which was why she was in trouble. It was difficult to stay focused on the work, but she needed this job, the pay was exceptional. Where would she find a job like this that included room and meals? She was determined to work harder. She didn't have a choice.\n\n~~~\n\nDinah found that with Chance everything was proportional. Even as she began sucking on his soft cock, which was about eight inches, training her throat and gag reflex, she realized that soon it would be too big for her to hold in her mouth. He was a giant man; of course his cock would be gigantic. But she was elated to finally have what she'd been craving for so long. She worked hard to show him just how much she appreciated him training her. Soon her jaw was aching and she could only get the mushroom head in her mouth. She was very careful to guard her teeth. Chance had warned her; that was an unforgivable blunder. \n\nUsing her hand she massaged the long cock, while following his instructions she licked and sucked on his huge balls. She even managed to take one in her mouth. She was indeed a quick learner and she was surprised at how turned on she was; she was nearly ready to climax and her pussy was dripping wet.\n\nIn a controlled voice that didn't betray how well she was doing, Chance told her, \"You are doing very well.\" He had to concentrate not to enjoy the tongue bath that she was giving his manhood. \"I believe that you are ready to be pierced. When was the last time you had a man inside you?\"\n\nDinah was on the edge, she reluctantly pulled her mouth away from him, panting now, his cock all she could think of. He was going to fuck her. That thought alone nearly made her cum. \"The last time...\" She tried to think. \"...was in college. It was my freshman year. He came I didn't.\"\n\n\"So,\" Chance said, with raised eyebrows, \"You've never been with a man.\"\n\nNot until he said it did she realize the truth, she had never been with a man, having sworn off men after the last of several unsatisfying experiences. But now, she thought, and before she could finish the thought, he pulled her to her feet and bent down and kissed her. ",
        "The kiss was all encompassing and Dinah swooned. When she awoke she was lying on her bed, the giant was naked lying on his side next to her. She looked at him. His body was chiseled muscle, from his broad shoulders and massive arms to his \"washboard abs\", looking at him she finally understood the meaning of the term.\n\n\"Good, you're back. I didn't want to start without you enjoying this first part.\" She looked at him and then down between his legs. His huge cock was pressed against his stomach, at least twelve inches long, black and shiny, and looking like a third leg.  \n\n\"I want you to do the honors,\" he said as he moved over her and she spread her legs to accommodate him. She reached for him with both hands, and bringing him to where her legs met, she waited for further instructions. \"Rub the head back and forth until you find your opening.\"\n\nShe did as he instructed, looking down as she moved his cock back and forth, opening her pussy wide until the tip of his cock was in the proper place and she stopped. She was trembling now, on the edge, secreting copious amounts of her juices knowing in a moment she would have a man, a real man, within her for the first time. It was like losing her virginity again.\n\nChance paused as he looked down and could read her face knowing instinctively what she was thinking. \"I am going to push inside of you now, don't let anyone ever tell you differently, this is the most blissful feeling for a man, second only to when he comes. I love this part and intend to take my time.\"\n\nHe slowly pushed forward, opening her wider and wider. She was tight, almost like a virgin. As soon as the head popped through, Dinah came. She screamed. \"Ahhh. Oh, it's so good, more! Mmmore!\"\n\nChance smiled. He still had ten more inches for her. This is going to be good. He pushed in and soon had more than half in. Dinah continued to come, seeing stars as she was filled more than ever in her life. \"Ahhhheeee!\" Going for broke, Chance wanted to see how much more she could take and pushed hard. He wasn't surprised when he hit bottom, but he was surprised he was all the way in, balls deep. It was indeed rare to find a woman that could take all of his amazing size. By now Dinah's eyes had rolled back in her head, she had never felt this full before. Chance decided to wait for her to settle down and enjoyed the feeling of being completely immersed, something he rarely experienced.\n\nAfter a minute Dinah calmed down, she was still stuffed, and realized that Chance was all the way inside and hadn't moved. \"Oh my God,\" she thought, \"he only put it in me. He hasn't begun to fuck me yet. I may not live through this. He may fuck me to death.\" Then she began laughing. \n\n\"Hey girl, are you alright?\" Chance asked. He was about to begin.\n\nTears were rolling down her face, she nodded.\n\n\"Good, because you are about to be fucked silly,\" he said and began to back out slowly. \n\n\"Oh,\" Dinah cried. Her pussy was clenching the mammoth cock and now it was being ripped from her grip. He agonizingly slowly pulled almost all the way out. When he had only the tip remaining inside, he pushed quickly back inside her. He hit bottom again and Dinah moaned as the being full feeling returned. Before she could fully enjoy the feeling she was beginning to love, he began backing out again. Then he pushed back faster, this time bouncing off the bottom and increasing his pace. The long hard strokes became faster and faster. From deep within her, intense warmth began to build in her pussy and expand outwardly rapidly as Chance pounded her ever harder as her moaning became more frequent. Her legs were spread wider than she thought possible as she was being split in half. \n\n\"Ahhhheee!\" She howled as the most mind blowing orgasm yet exploded through her body, and with her last ounces of strength she squeezed her pussy tightly, triggering Chance's orgasm. He roared and filled her pussy with more cum than she had had deposited in it in her entire life. Chance grabbed the woman and rolled over on his back, leaving Dinah squatting over him, still impaled on his massive tool. She was panting and sweating as she fell forward on his hairy chest.\n\n\"That was amazing\", she thought. \"I have never been so thoroughly fucked. Had I had a man like this when I was in college I'd never have explored sex with my roommates.\" Then she realized that he wasn't deflating, he was still hard. She looked up at the giant she was straddling and he flexed his hard cock, confirming that he was ready for more.\n\n\"You didn't think we were done so soon, did you?\"\n\nShe sat up on the huge cock enjoying the fullness she'd never felt until today and looked at her lover knowing that it wouldn't take much for her to get off again.\n\n~~~\n\nElizabeth enjoyed the lunch made by the former Mistress of the Ring of Vengeance, who now believed that she was Candace Martin's maid. She wondered what job John had for her and which of her skills she'd be asked to call upon. \n\nShe left the Martins to themselves. April was now herself and Candace was happy to have her daughter back, but she couldn't help but wonder what the addition of a maid, the former mistress of the Ring of Vengeance, would have on the family. As she walked to her car, she felt her panties sticking to her pussy, reminding her that she should have taken a shower; she kept spare clothes in the car. But, John had an assignment for her.\n\n\"How about that, John finally proposed to April,\" she thought as she buckled herself in and started the car. Within the car's confines she could easily smell herself and the sex of the others and decided that she needed to go home first to shower and change her clothing. There was no telling how long she'd be on assignment, nor what the assignment might entail. She had been practicing her invisibility, and so far was able to make her panties disappear along with the rest of herself. It was something that Dennis found to be hilarious as they practiced. Who could blame him, she too found it funny as she walked around the house, the only thing visible her bra and its overfilled cups. They both agreed that with several more hours practice she should be able to achieve the goal of complete invisibility while clothed. She would practice every chance she got. She didn't want to let John down and she hated to lose any more of her favorite outfits.\n\nAs she pulled into her parking space, she decided to try again. This time she managed to vanquish everything from the waist up. She laughed loudly as she looked down and saw her pants and sandals still sitting behind the wheel of her car. \n\n~~~\n\nJohn had begun to enjoy his discussions with Rocky. He wasn't at all like his father, who always seemed to be guarded and appeared to hold back on specifics. Rocky was honest and helpful. He even showed John how to monitor the submissions from his agents and in such a way that he could easily see who was meeting and exceeding their quotas, thus allowing him to know exactly how much energy he could expend and how long it would likely be before it was replenished. Rocky also showed John how to more efficiently store unused energy and build his reserves. This would come in very handy should he ever be in another fight for his life.\n\nBut most of all, John enjoyed his sense of humor and outlook on life. He seemed to enjoy his role, even embracing it, unlike his father who of course was simply looking for ways to escape.\n\nA message from Dennis interrupted their chat, alerting him to the fact that his father was preparing to make a move. John realized that his father seemed to be growing in strength, he didn't understand how he knew this, but he knew it was true. Rocky told him that there has never been an escape from the ring and since this was a first, it was likely that the ring was enhancing John's senses to assist in his father's capture and return to the prison. \n\n\"The ring is very distressed about your father's escape,\" Rocky told John. \n\n\"The ring is alive?\" John asked, hearing the statement again as if for the first time.\n\n\"In a way, perhaps sentient would be a better way to describe it,\" Rocky told him. \"And it likes you, better than any of the last several masters that have worn it. Keep doing what you are doing.\"\n\nThat statement caused John to blush. Up to now, he really had no idea how he was doing. His father never told him the ring was aware and whether or not he was doing a good job.\n\n\"Thanks, Rocky!\" he said after recovering. \"I had no idea.\"\n\nRocky continued to relay the ring's wishes and that it understood that his plans to recapture Dr. Smith seemed reasonable, but that should he fail the ring would act unilaterally. \n\nJohn didn't like the sound of that and knew that despite the ring being sentient, it wasn't human and likely lacked human compassion. John was certain that his plan would work; he only needed to wait for his father to reveal his plan.\n\n~~~ \n\nAfter finishing their mini orgy, they showered and changed into comfortable clothes before they all piled into Pastor Jones' minivan. They had no idea where they were going and that didn't concern them in the least. They all had pleasant smiles on their faces and enjoyed the Christian music that came though the car's stereo system. Even the former lesbian, dressed in the borrowed conservative clothing, looked and acted the part.\n\nDr. Smith bounced back and forth from one to the other, but mostly made sure the good pastor drove below the speed limit to their destination. It was time.\n\n~~~ \n\nDennis, still working under the cover of his shape-shifting disguises, alerted John they were on the move. \n\nJohn made sure they were ready. His agents had all been briefed and were prepared. John was certain that his father would be coming after one of his daughters so he stationed himself nearby. Everyone was on alert.\n\n~~~ \n\nGeorge was puttering around his house, making small repairs and doing the necessary maintenance that one must do in order to maintain a house, when the doorbell rang, followed by several knocks. He wasn't expecting anyone. He climbed down the short ladder he was using to change out the light bulb in the kitchen and marched to the front door. He was expecting to find a girl scout selling cookies, but was startled to find an entire family standing on his porch, five in all. They looked like Jehovah's Witnesses or Mormons; he could see the older male wearing a religious collar.\n\nGeorge opened the door. \"Hello. What can I do for you?\" he asked.\n\n\"Invite us in,\" the reverend said.\n\n\"What?\" George asked certainly not expecting that request.\n\nDr. Smith was getting anxious and leapt into the unguarded mind. George said, \"Where are my manners, please come in. Make yourselves at home.\"\n\nBefore he closed the door behind him, Dr. Smith had probed George's mind and learned everything he needed to know. It was better than he'd hoped. George was fucking his wife, or to put it correctly, his widow. He'd be able to get her alone easily and then he'd have her.\n\nMary was out. It was still early in the evening, too early for her to be out looking for sexual adventures. Dr. Smith had never told his son how angry he was that he had turned his own mother out to prostitute herself for his benefit. She seems to have kept George in the dark as to her lifestyle. Nevertheless, he had planned on using George's home as a launching place to capture his widow. This would only make things easier. \n\nAs Pastor Jones and his family made themselves comfortable, Dr. Smith found himself becoming angry; George Wilson was fucking his Mary. Perhaps he'd have to do something about that once he had Mary under his control.\n\nGeorge, under Dr. Smith's control, remained motionless, standing in the foyer for several minutes, while the Joneses did as they were told and made themselves comfortable. \n\nWhen Dr. Smith had gotten all the information possible from the man, he decided that he should be a good host and see to his guests. He heard the family in the den and walked the short distance to join them. \n\nWhat he didn't expect to find was Pastor Jones with his pants around his ankles as he was fucking his daughter from behind, while she was eating out her girlfriend, while the pastor's wife was on her knees and naked, sucking her son's cock.\n\n\"What the hell?\" George said, voicing Dr. Smith's thoughts.\n\nPastor Jones turned to the surprised host and said, \"You told us to make ourselves at home.\"\n\nJust as Dr. Smith was about to leap from George and restore order, the doorbell rang again.\n\nNot stopping to peek through the peephole, George opened the door to find Mary waiting. She quickly pushed him in and captured his lips with hers.\n\n*****\n\nTo be continued. More to come, watch this space! if you like what you've read, please score...5's are appreciated!"
    ],
    "authorname": "Absolutelywickedthoughts",
    "tags": [
        "mind control",
        "romance",
        "drama"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/a-gift-from-his-father-ch-23"
}