{
    "title": "Finally Ch. 04",
    "pages": [
        "At long last, the Finale of Finally. It would probably help to read the first three chapters of this, to understand this final chapter. I really enjoyed writing this couple's story. And though they're of my own creation I've grown very fond of Rico and Sherry, and I hope you'll enjoy this.\n\nSomething was off with Sherry. Rico could feel it, but couldn't figure out what it was. Though still pretty affectionate, somehow she seemed to be gradually pulling away and he had no idea why.\n\nLast night he'd confessed that he loved her, and she'd said it right back with no hesitation, and yet something had shifted between them. All he knew was that he wanted things to go back to the way they were before, when she'd laugh and tease as they made love, and they were happy and everything felt perfect.\n\nCould be he'd scared her and she wasn't ready to hear how he felt. But she had to know this thing they had going on was way more than just a fling. At least it was for him.\n\nHolding her close in bed, he watched her closed expression as she traced a fingernail around his nipple. She looked so serious and wasn't saying a word. Finally, unable to take anymore, he tipped up her chin, and asked, \"Hey, what's wrong? What's going on?\"\n\nDeciding there was no point in lying to him, letting out a sigh, she told him the truth. \"To be honest, lately I've been feeling kind of guilty and a little selfish being with you, when I know you should be with someone more your age who can give you everything you deserve.\"\n\nRico had no idea where she was going with this. \"I'm not following you, Sherry.\" Seeing as she was all he'd ever wanted, he couldn't imagine being with anyone else anymore, and hoped she'd know that by now.\n\nShe looked up into his eyes, and he could see the torment in hers. \"It's just that when I saw how good you were with your niece and nephew, I realized that one day you'll probably want kids of your own, and we both know at my age I would never be able to give you any.\"\n\nHe blew out an exasperated breath, surprised that his family, without even knowing it had changed things between them, or at least her perception of what she felt he needed.\n\n\"Yeah, I love 'em, they're great. And I also know that anytime I want to see them, I can. Liv's more than happy to have me take them out somewhere and even spoil them a little whenever I want. But, that's enough for me. When I take them off my sister's hands to give her a break, the kids and I get some alone time and everybody's happy. So, I don't need to have kids of my own to know what it's like. I've been helping her with the two of them since they were born. And sometimes I feel like more of a dad to them than their own father, who's never been overly involved in their lives.\"\n\nThough she nodded, Rico still thought she didn't look too sure.\n\nSmiling into her eyes, he squeezed her ass, and kissed her. \"But I'll tell you what I do need right now, though.\"\n\nSmirking, she had a pretty good idea what he needed, especially when she reached between them and felt how hard he was. Lifting her leg and resting it on his hip, spreading herself open wide, she took hold of him and pressed him to her opening. \"Am I getting warm?\" she asked, loving how blissed out he looked as she ran the tip of his cock up and down along her slit.\n\n\"You're way more than warm, baby, you're red hot. And you got me right where I need to be.\"\n\nImpatient for the feel of her, his hands tightening on her waist, he thrust his hips and pushed, till he was sliding into her nice and deep. Smiling into each other's eyes as he thrust, he let her have a feel of what she did to him every single time they were together, when she had him aching to get as close to her as he could possibly get.\n\nGently pushing her onto her back, he pulled out half-way and then thrust hard, till he was balls deep, right where he needed to be. As he slowly made love to her, he captured her lips with his, and soon she had her fingers tangling in his hair, softly moaning as he did his best to show her just how much he loved her.\n\nWhen he could feel she was getting close, he changed the angle, got up on his hands and gave it to her good and hard, just where she seemed to need it, if the way she was squealing and clawing at his back was any indication.\n\n\"Oh, yes, right there. Oh, fuck me, yes!\" she cried out tossing her head from side to side as she came with a shivering climax running right through her, hard enough he could feel vibrating into his cock.\n\nFollowing right behind her, feeling the familiar telltale tingle run down his spine straight to his balls, Rico threw back his head and growled as he ruthlessly pummelled her pussy, giving her everything he had, till both of them collapsed clutching each other tight.\n\nHer breasts still heaving hard, Sherry grinned coyly. \"Now that's what I'd call a nice way to wake up.\"\n\nRico chuckled, took hold of her by the chin and kissed her, knowing if she'd let him, he'd be happy to wake her up like that every morning for the rest of her life. But for now, he was just glad that she seemed to have accepted what he said about the two of them being enough for him.\n\nAnd hell, if she needed more, he figured he could always get her a cat.\n\nWhen he went downstairs to make them some breakfast and heard the shower start to run upstairs, he frowned as he went into the fridge to get what he needed to scramble up some eggs. As he cracked them into a bowl and tossed a few sliced mushrooms into a hot buttered pan, he wondered why she hadn't waited for him, since that was something else they'd always enjoyed doing together, having fun getting each other squeaky clean, so they could get busy all over again.\n\nThen he noticed his keys on the counter that he'd put there to remind himself that the desk light was out in her office where she wrote, so after they'd eaten he knew he had to go back upstairs and take a look at it for her.\n\nLooking up, staring at the ceiling, when she didn't come down right away for breakfast, he imagined she was in her office, probably looking over one of the stories she was working on. But when she did finally make her way downstairs, smiling to himself, he noticed she was dressed to go out in a short little black and white patterned sundress with some pretty sexy looking strappy red sandals. But since she didn't say anything about her plans, he thought it best not to ask.\n\nOnce she'd sat down and had a taste of the cheddar and mushroom scrambled eggs he'd made, she moaned. \"Hmmm, is this ever good.\" Then she reached across the table and squeezed his hand. \"Thank you for this, Rico.\"\n\n\"No problem. Glad you're enjoying it.\" Though he eyed her as he ate, since she wasn't giving any indication that she was upset anymore, he decided to just let it drop.\n\nOnce they'd finished eating, cleared the table and loaded the dishwasher, he was relieved when she finally told him what was going on. \"Oh, I forgot to tell you, I've got a meeting with my sister-in-law and editor Marie. But I should be back in a few hours, and it shouldn't take too long.\"\n\n\"No problem. And while you're gone I'll take a look at the light that's out in your office to try and see what's wrong with it.\"\n\nAbout to pick up her purse and leave, smiling into his eyes, Sherry wandered over, wrapped her arms around his neck and kissed him, whispering against his lips, \"Thank you for being so good to me.\"\n\nHis hands instantly slid up her thigh and under the back of her dress, till he was kneading her tight little ass in his hands, sliding his tongue between her lips, and kissing her right back. All he needed was a taste of her lips and he could feel himself growing hard. And so were her nipples, he realized, as she playfully brushed her breasts back and forth across his chest, starting to whimper and taunting him to take it even further -- which got him wondering if they had enough time for a quickie, even just to take the edge off, before she had to go. She'd got him so hard he knew it wouldn't take much for them both to get off. All he'd have to do was pull off her panties, slide in and give her a nice little send off before she had to leave.\n\nFinally, smiling, Sherry pulled back, shaking her head. \"Ooh, what you do to me. You know, if I didn't have to go out, I'd be tempted to let you have your way with me again, like that first night when you bent me over the counter and nearly fucked me silly.\"\n\nSliding his hands over her ass and squeezing, with his erection pressed tight against her belly, Rico grinned. \"You know I can be quick, right?\"\n\nSherry laughed and pushed on his chest. \"Save it for later, stud.\" She wiggled her eyebrows. \"And maybe we can do a little re-enactment when I get back.\"\n\nWith a playful swat to her backside, he nodded. \"You can count on it.\"\n\nHe walked her out to her car. And once she was seated inside and buckled up, he leaned in and kissed her goodbye, taking the time to linger over her lips to ensure that she knew he'd be waiting for her. She smiled, stroking her hand over his sexy bristled jaw, till he finally pulled back. Sighing, she said, \"I shouldn't be gone too long. And if Marie gets too long-winded, I'll just tell her I've got to get back to my book, and that usually works, since she's always after me to send her another chapter.\"\n\nWith one last peck on her lips, he winked and told her, \"Well, just remember I'll be waiting for you to make good on that promise.\"\n\nAs Sherry drove toward the city, grinning from ear to ear, thinking of him waiting for her back at home, probably naked and hard as a brick, she could feel every inch of her humming with anticipation. All he had to do was kiss her and he had her willing to do anything he wanted. Ooh, like take her hard from behind on the kitchen counter again. Her pussy already tingling, just imagining how good that would feel, she just hoped her meeting would be quick, or she knew she'd be squirming in her seat, since she was already feeling pretty anxious to get back to him.\n\nAfter he watched her drive away, shaking his head, Rico got his tool box out of his truck, went back inside and headed up to her office to see if he could figure out what was wrong with the light, hoping it was just the light bulb that needed replacing, he'd check that first.\n\nBut when he sat down at her desk and looked around her tidy office with row after row of books on the shelves, a lot of them her own titles, it felt kind of odd to be sitting in the chair where she created the fantasies women like his sister could hardly wait to read.\n\nThen he noticed that she'd left the computer on, and had only turned off the monitor. Curious, with his hand poised over the mouse, he wondered what she was working on, and decided to take a look.\n\nBut when the screen lit up and he started to read, he felt his heart sink down in his chest, till he swore it hit the floor as he read the last thing she'd been writing. 'As painfully hard as it would be, I knew I had to tell him that it was over. Though, what we had was beyond anything I'd ever dreamed of, I knew it couldn't last. Ruggedly handsome, virile men like him never stayed faithful for long. Before he strayed, I knew I had to let him go, no matter how much it would hurt to know that what we had was done and I was never likely to see him again.'\n\nUnable to read anymore, Rico reached out and turned off the monitor, sagging down in the chair. He wondered as he sat staring at the black screen how it could end like this, with just a few strokes on the keyboard sealing his fate. Obviously she'd been mulling it over for a while afraid that he would be the one to hurt her, she'd decided to cut him loose first.\n\nAnd if he wasn't so crazy about her, it wouldn't matter. He'd just head out and go on with his life, and probably find someone new. But seeing as she was the only woman he wanted and the only one he'd ever cared for this deeply, and already couldn't imagine his life without her, he had no idea what he was going to do.\n\nNever the type to grovel, he realized if she wanted him gone, it was probably best if he just left. No need to tell her why, since she'd already made up her mind about them when she'd typed that final passage, probably hoping he'd read it, when she'd conveniently gone out and left her computer on, knowing that he'd be checking the light. He pushed to his feet, picked up his tool box and headed out to his truck.\n\nAs he drove south along the highway toward the city, he just wished she'd have been honest with him when he'd asked her what was going on when they woke up together, instead of leading him on and acting all playful, making him think he still had a chance with her.\n\nShe'd told him once she was worried that someone his age could never really be serious about a woman old enough to be his mother, but if he was going to be honest, he'd never had a problem with the difference in their age, and had even surprised himself with how hard he'd fallen for her.\n\nBut as he drove into the underground parking garage at his condo, he knew he had to try and forget what they had, or he'd drive himself crazy with 'what ifs'.\n\nAfter what he'd read, he knew she wouldn't be interested in even seeing his face again, so he'd just have to move on and try and put it all behind him.\n\nLike that was going to be an easy thing to do. \n\nWhen Rico unlocked the door to his place, and saw his niece and nephew turn their head and their eyes go wide when they looked away from the TV and saw it was him, he laughed at the way they always ran to greet him, squealing, \"Uncle, Rico!\" with their arms open wide. As he scooped them into his arms, and pressed a kiss to each of their cheeks, he was just glad he still had a family that cared for him.\n\nHis sister Liv popped her head around from the kitchen, looking just as surprised to see him. \"Hey, I didn't know you were coming over. I was just making us some lunch. So if you're hungry, it's just tuna sandwiches and veggie sticks, and I can make some more if you want.\"\n\nHe shook his head, trying not to look as bad as he felt. \"No. I'm good. You guys go ahead and eat.\"\n\nLiv walked out of the kitchen, narrowing her eyes on him. \"So, what happened?\"\n\nHe shrugged, struggling to keep his voice steady as he tried to explain. \"Nothing really happened. I think she just decided she's done with me.\"\n\nNever one to hide what she was thinking, her eyes went big, her voice rose and she nearly yelled at him, \"What the hell did you do, Rico? Because I know last time I saw you two, you were like over the moon happy with each other, and Sherry was practically glowing, and come to think of it, so were you.\"\n\nThat got his back up, assuming it was his fault, and he stared her down. \"I didn't do anything, okay. I think she was afraid I might be growing tired of her, so she made the first move and ended it before anything could happen.\"\n\nHer expression softened, realizing how hurt he looked. \"Oh, Rico, I'm sorry. And I got a feeling you really cared for her, too.\"\n\nWhen she hugged him to her chest and started gently stroking his hair, he nodded, and told her the truth, fighting to keep the emotion out of his voice. \"Yeah, I really did.\"\n\n\"Well, you know what they say: There's plenty of fish in the sea.\" She pulled back and patted his cheek. \"And you're not a bad looking guy, so I'm sure before too long you'll find someone else to fill her shoes.\"\n\nTrouble was, as he stared blankly across the room, he already knew he'd never find anyone quite like her. And if he had any idea what to say to make her reconsider, he'd say whatever she needed to hear, but he had a feeling from what he'd read that the die was cast and he'd only be wasting his breath.\n\nBut, despite his mood, he looked down and smiled when he felt his niece Olivia tugging on his hand and quietly murmuring, \"Well, I still love you, Uncle Rico.\"\n\nLifting her into his arms, he pressed a smacking kiss to her cheek and said, \"Good thing I've still got you guys then, huh?\"\n\nThough Liv nodded, she just stared at her big musclebound brother, looking more vulnerable than she'd ever seen him.\n\nSherry's meeting with her sister-in-law seemed to drag on forever, since Marie had decided to go over every single item in her latest manuscript she felt was even slightly questionable, point by agonizing point, particularly her choice for the male love interest in her story that she wasn't too sure of. But as always, Sherry did her best to keep an open mind and listen to her suggestions. Especially since Marie was the perfect person to review the type of historical romance novels she mainly wrote, since she was basically an expert on Victorian nobility and the acceptable standards of the day. Sherry smirked, most likely because her sister-in-law was actually a bit of a snob herself, in addition to being a very supportive friend who just happened to be an expert in her field.\n\nAfter clearing her throat, Marie said, \"Though in theory I like that you've changed the male protagonist and the object of her desire from a wishy-washy blond aristocrat to a more swash-buckling sexy dark-haired rogue. I just wonder, coming from such entirely different worlds how Lady Madeleine and this new man could ever have a future together. Not that I'm totally against you breaking from the typical formula for this type of novel and trying something new. It's just kind of hard to conceive that they could make it work, and find themselves living happily ever after, as your readers would expect, unless of course Miguel turns out to be secretly fantastically wealthy, or despite the swarthy way you've described him, is actually an heir to a throne. Unless in the end, you plan to have her re-think her rash decision and eventually have her settling for someone more befitting her station in life that she knows in her heart of hearts, would be a far better match, as well as being more acceptable in her society than such a brash rogue would ever be.\"\n\nAs Marie prattled on, it occurred to Sherry since Rico had been the one to inspire her to change her character from a boring, blond pasty-faced dud to a more exciting dangerously attractive and far more sexy bad boy type for the lady in her story to fall head over heels in love with, she knew she was also defending her choice in choosing Rico in real life, too.\n\nWhen she noticed that Marie was waiting, she thought carefully as she explained her reasoning, trying not to give anything away about her own real life sexy rogue. \"Marie, I think that sometimes people are just drawn to each other, no matter if they come from different worlds. And when they've fallen as deeply in love as these two have, then nothing else really matters but them happily living out their lives together, and somehow they just find a way to make it work. I believe my readers will agree that Lady Madeleine choosing an exciting love-filled life with Miguel over a life of privilege with a cool, pompous man like the Duke, just to satisfy the expectations of her peers and family, is a far braver choice that I think they'll thoroughly enjoy reading, and find themselves rooting for a happily ever after for them, despite what anyone in her society might think.\"\n\nSherry thought about how hard she'd worked on the story before she'd given up and changed it, and added, \"I actually did give her a try with the Duke, and was going with that story line at first. But I just couldn't feel anything for them as a couple, even when he finally kissed her, it felt forced and lacked any real passion, because he simply didn't have an ounce of passion in him, though I tried my best to make him sound appealing. But when I let myself imagine her with the far more exciting choice of devilish Miguel, the story almost wrote itself. And the passion just flowed from them onto the screen. And I think I already know they'll have a happy ever that the fans will absolutely adore.\"",
        "As Marie considered her explanation, Sherry looked down at her tea cup, turning it in her hands and thought of the parallels in her own life. What she had with her first husband, though there was nothing wrong with their marriage, compared to what she now had with Rico, was like night and day, which might have been why she'd written the Duke the way she had; handsome, wealthy but devoid of any real emotion, very much like Brian. And she knew she'd never experienced true passion until Rico had shown her what it was like to let go and lose herself in a man like him. She also knew that she'd never loved anyone as deeply until he'd walked into her life and showed her what true love really felt like. So, all she had to do to create the character of sexy Miguel was think of the heated look in Rico's dark stormy eyes when he was aroused and looming over her. Or remember how he'd kiss her almost senseless, whenever they made love. She grinned. And with a body like his, she had all the inspiration she needed to describe a red hot, dangerously sexy lover that had the power to sweep a lady right off her feet.\n\nSo, it seems she was doing more than defending her choice of characters in her story. She was also confirming in her own mind that what she had with Rico was more than just a passing fancy, it was real love. And now she could hardly wait to tell him face to face exactly how she felt about him.\n\nDriving home, after a surprisingly cathartic and eye-opening visit with her editor and friend, Sherry felt even more convinced that if Rico was game, she'd be more than happy to work on their very own happily ever after with him.\n\nGrinning coyly, buzzing with anticipation, she decided the minute she got inside, instead of waiting to get upstairs and change, just to see his reaction, she'd tear off her dress right inside the front door and meet him in the kitchen in just her black lace bra, matching panties and sexy heels. Since she had a feeling he'd be waiting impatiently for her to follow through with the re-enactment of their first wildly erotic night together, like she'd promised, he'd definitely be game for a fun night of sensual exploration.\n\nBut when she drove up to her house and saw that his truck wasn't in the driveway, she wondered where he could have gone since he'd told her he'd be waiting. Then she remembered he'd mentioned the broken desk lamp in her office and thought he might have needed to get a part to try and fix it.\n\nAs thoughtful a gesture as that was, she was so eager to get them out of their clothes and naked in her kitchen that she hated that she had to wait for him to get back.\n\nSo, deciding to do as she'd promised, once she got inside she went upstairs and changed into her little tangerine thong bikini, just for the fun of seeing his eyes pop when she sauntered up to him, slipped her tongue between those perfect lips of his and kissed the hell out of him, knowing how quickly he'd be bending her over the counter to show her just what happened when she dared to tease him.\n\nBut after finishing her second glass of wine sitting out by the pool, she checked her phone and when she couldn't see anything she'd missed, and saw how late it was getting, she began to wonder what was taking him so long. She just hoped he wasn't running from store to store to find the right part, since the lamp wasn't that expensive, and could easily be replaced. However, seeing as her very own stud-muffin was the only one who could give her what she needed right now, she wondered if she should phone him and tell him she was waiting. But she nixed the idea when she thought of all the running around he'd probably already done to try and make the thing work, to have to tell him to forget about it and just come home.\n\nSo, she grabbed a big beach towel to cover up from the lounge chair beside her, and decided that maybe she'd have a little nap while she waited, since they had been up pretty late last night with all the kinky fun they'd had in bed.\n\nShe was asleep for hours, before she woke up feeling chilled. Blinking up at the star filled sky, she realized it was pitch dark out. Then, with a sinking feeling, it suddenly dawned on her that maybe he wasn't coming back.\n\nSitting in his condo, Rico had his phone in his hand, so tempted to call her. But hating the thought of having to hear her tell him it was over and that she never wanted to see him again, he put it back down, closed his eyes and tried again to fall asleep on the couch.\n\nAs he tossed and turned, he thought that the kids must have sensed that he was feeling down, since they went to bed pretty early without any arguing, and his sister had said goodnight and gone to bed right after them.\n\nSo, now all he had was his thoughts to keep him company; and an ache in his chest that just wouldn't go away.\n\nDeciding he wasn't coming back, Sherry made her way upstairs. When she got to her bedroom and looked down at the bed they'd shared, blinking back tears, she wondered why he'd just walk out and not even say goodbye. But then again, she'd always thought that one day he'd come to his senses and wonder what he was he doing with someone like her, when he could have almost anyone he wanted and most of them half her age, and able to provide him with something she never could -- children.\n\nBut just in case something had happened to him, she sat down on the edge of the bed, picked up her phone and decided to call him.\n\nWhen he answered, she cleared her throat and said, \"Hi,\" and then waited to see what he'd say.\n\nWhen \"Hi,\" was all he said back, she knew for sure that he'd left her.\n\n\"So...\" not sure what to say, to salvage what little was left of her pride, she blew out a shaky breath and said, \"...just thought I'd remind you that you left some of your things here, and I wasn't sure what you wanted me to do with them.\"\n\nRico sat up and looked at his phone, and realized that it really was over if she was only calling because she wanted him to come and get his stuff out of her house. Finally, he managed to say, \"You can put it in a box in the garage, or throw it out, it's up to you.\"\n\nSherry wiped at her eyes, shocked at how detached he sounded. So, they really were done, and he couldn't even be bothered to say goodbye, or even tell her why it was over. She never imagined he could be so heartless. After she managed to swallow past the lump in her throat, she nodded. \"Okay, I'll leave it in the garage for you. And you can get it whenever you want.\"\n\n\"Goodbye, Sherry,\" he said, hoping she'd say something so he could understand what went wrong.\n\nBut when all she did was say, \"Bye, Rico,\" he hung up and tossed aside his phone, dropped his head into his hands and tried to figure out what he could do, aside from begging, to make her reconsider.\n\nSherry barely slept a wink after that, so when she heard her phone chiming at ten in the morning, bleary-eyed, she threw her arm out and grabbed it, praying with everything she had that it would be him.\n\nBut when she blinked herself awake and looked at the call display, she was surprised to see it was his sister Liv. \"Hi, Sherry, hope I didn't wake you. It's Liv, Rico's sister. And I just thought I'd call and see how you were doing.\"\n\nTempted to lie and tell her she was fine, so she wouldn't have to admit that her brother had decided out of the blue to dump her, she thought, what the hell. Liv probably knew her brother better than anyone, and maybe she could fill her in on why he'd acted the way he had.\n\n\"Actually I didn't sleep too well last night. Not sure if your brother mentioned that we um... broke up.\"\n\n\"Yeah, he told me. And he didn't sleep much either, by the looks of him. He's in the shower now, and the kids and I are giving him a wide berth, so he can deal with what's happened.\"\n\nSherry decided to tell her the truth. \"What happened was he dumped me and never even bothered to say goodbye. There was no fight, no discussion, nothing. He just walked out and didn't even leave me a note.\"\n\nLiv blinked. \"Wait a minute. You're saying that Rico dumped you?\"\n\n\"Yes. I called him last night just to be sure he was okay, because I didn't know where he was. And I used the excuse that he'd left some of his things here, but he just said to put it in a box in the garage and then he said goodbye. So, obviously it's over.\"\n\nLiv sat down at the table, keeping her eye on the bathroom, just in case her brother walked out and overheard her butting into his business. \"Okay, then something's not making sense here, Sherry. Because Rico came home looking like he'd been run over by a truck. I've never seen him looking so devastated. And he told me that you were the one that tossed him to the curb, without even telling him why.\"\n\nSitting up in bed, Sherry couldn't believe her ears. Now she wondered what the hell had happened between the time she'd left the house, when they'd been planning a fun re-enactment of their first night together, and when he'd walked out deciding he was done with her.\n\nSo, leaving out the sexy plans they'd had, she told Liv what had happened before she left for her meeting with her editor, and how Rico even walked her out to the car and kissed her goodbye and told her he'd be waiting for her. And he said he was going to fix her lamp in her office... then her mouth fell open, as it struck her. Since she was in the habit of leaving her computer on, if he'd taken a look at the last thing she'd been writing when he was in there, he might have misunderstood and thought her decision to end it with the handsome rogue in her story was about them, when she'd only been creating some dramatic tension in her latest novel between the couple, who would eventually work it out.\n\n\"Liv, I think I know what happened.\" Then she told her about the book she was working on, and where she'd left it and that Rico might have thought it was what she was thinking about him, and that she'd decided to end it. \"So, I think he walked out on me so he wouldn't have to face me, assuming I was about to tell him we were done.\"\n\nLiv's eyes popped. \"Holy crow, I bet you're right. If Rico read that for sure he might have thought you meant him. And I could see his pride wouldn't let him stay to face you, if he assumed you were only going to tell him to leave. Sherry, I think you two need to talk this out. Or, if you want, I could ask him if he read anything on your computer, and see what he says. And I can call you back when he tells me one way or the other, then you can decide what to do after that.\"\n\nPretty sure of what he'd seen, and how he'd misunderstood it, Sherry shook her head. \"No, don't say anything about what he might have read. Just tell him I called and told him to come and get his stuff tonight, and we'll have our talk when he gets here.\"\n\nLiv started to grin. \"Okaay.\"\n\nLater that night, Rico pulled his truck into Sherry's driveway, wondering why the hell she'd call his sister of all people to tell him to come and get his crap now, like it couldn't have waited for another day. Deciding he might as well get it over with, he got out and walked to her front door and rang the bell, just like he'd done the first night he'd laid eyes on her in that tiny little thong bikini, that got him hard almost before he'd set foot in her house.\n\nA moment later he felt his mouth fall open when Sherry answered the door, once again clad in just that tiny scrap of orange Lycra that barely covered her amazing breasts and did nothing to hide the perfection of her tight little ass, never mind barely concealing her pussy.\n\n\"Come on in,\" she said with a crook of her finger, and proceeded to sashay her sweet little backside all the way to the kitchen, exactly like she'd done that first night. And his cock seemed to remember it too, because fuck, he didn't know if he'd ever been harder in his life. His mouth watering for a taste of her, he wondered why the hell she'd want to answer the door like that, unless she was hoping to make him lose his freaking mind. \"You want a drink?\" she asked him, holding up a bottle of white wine, once she'd reached the center island.\n\n\"Sure,\" he said, not even sure what she was trying to prove by teasing him like this.\n\nWhen she handed him a glass she said, \"Sorry, I didn't get a chance to box up your things. I've been busy writing all day. I've got this story I'm working on, and the woman has to decide if she wants to go against everything she's been conditioned to believe for the man she loves, a dark and handsome slightly dangerous rogue, or if she should go with what's expected of her and agree to a loveless marriage to a dead boring aristocrat. Yesterday before breakfast I started the scene where she contemplates ending her love affair with the man she really wants. But that's just dramatic tension designed to make the reader root for the two to make it work, hoping she'll pick the handsome swarthy rake over the uptight Duke. Because everyone knows the course to true love never runs smooth, or it would be a pretty boring read if it was nothing but rainbows and hearts and flowers from beginning to end. Don't you think?\"\n\nStaring at her hard, Rico put down his wine glass as he realized what she was saying. \"So, you're saying what you wrote yesterday... was just part of a story?\"\n\nTrying to keep a straight face, she nodded. \"Yes. I was writing what was going on in the lady's head as she contemplated breaking up with the man she loved.\"\n\nClosing his eyes, he shook his head. \"And I read that.\"\n\n\"Did you?\"\n\nHe nodded. \"Yeah. I went up to take a look at your light and noticed you'd left your computer on, and I was curious to see what kind of books you wrote. And I assumed from what you'd written that you'd had enough of me and wanted me gone.\"\n\nSeeing the pain in his eyes, she stepped close and stroked her hand along his bristled jaw, shaking her head. \"Never, Rico. Not when I love you as much as I do. I'd never do anything like that, letting you read what I feel about you on a screen, instead of talking it out with you face to face.\"\n\nStill not too sure, he narrowed his eyes on her. \"Okay, then why did you tell me to come get my stuff?\"\n\nSliding her thumb over his sexy full bottom lip, tempted to lean in and nip it with her teeth, supressing a smile, she said, \"So we could talk. Otherwise, I didn't know how I'd get you to come back.\"\n\nHeaving a sigh of relief, he slipped his arms around her and smoothed his hands down over the silky softness of her bare ass, and rolled his eyes, blown away by the feel of her warm, soft flesh that he never thought he'd get a chance to touch again. \"I can't believe I walked out without talking to you first,\" he murmured, dusting kisses along her jaw.\n\nShivering from the feel of his lips trailing a path to her ear, her breath already coming hard and fast, as her nipples began to tighten, she nodded. \"Seems neither of us could swallow our pride, because I couldn't bring myself to ask you why you'd left, which almost broke us up.\"\n\nRico pulled back and looked into her eyes, so relieved he could weep. \"Sherry, I'm not ashamed to tell you, just the thought of losing you almost killed me. And now that I really know how I feel about you, I never want to go through anything like that again.\"\n\nShe smiled, running her fingers through his hair. \"Believe me, neither do I. Funny thing was, after I'd finished my meeting with Marie, I was looking forward to coming home and slipping out of my clothes so I could tell, and show you, just how much you mean to me -- but you were gone.\"\n\nBlowing out a breath, he shook his head. \"I'm really sorry. I should never have walked out. And if I hadn't have been nosing around on your computer, none of this would have happened. But from now on, we're going to talk things out whenever we need to, I promise.\"\n\nCoyly smiling up at him as she ran her curious fingers down over her chest to his fly, Rico grinned right back and squeezed her ass, as his gaze landed on her full ripe breasts and the sight of her fully erect nipples poking at the fabric, that had his mouth watering for a taste.\n\n\"You know the other thing I noticed is that you're wearing the same little bikini you had on that first night I came over, when you got me so hard I bent you over the counter and let you have a feel of what you did to me. So... does this mean you forgive me for being such an ass?\"\n\nShe nodded and ran her hands up over his chest, till her fingers were sliding into his hair, softly moaning at the delicious feel of his erection pressing hard against her belly. \"Yes, I forgive you. And I've got a feeling I'm getting the same reaction tonight as I did then.\"\n\nHe grinned. \"Oh, you are definitely going to get it tonight.\" He took hold of her by the chin. \"But not until I get a chance to have a taste these lips.\"\n\nSighing, Sherry pushed up on her toes as Rico wrapped her tightly in his arms and kissed her till she was breathless and helplessly listing against him. \"Mmm, I'm so glad you came by tonight.\"\n\n\"You and me both,\" he said, dusting grateful kisses all over her face, overjoyed at the feeling of having her in his arms again. Slipping his hand behind her neck he untied her bra top, rolling his eyes at the sight of her gorgeous breasts spilling free, especially her delectably hard pink nipples, practically begging for him to have a lick.\n\nDropping his head, he groaned as he traced his tongue around each one, sucking them deep into the heat of his mouth one after the other, he feasted on her breasts, till had her squirming and mindlessly grinding her pussy against his throbbing erection, obviously desperate for relief. Slipping his hand into her bikini bottom for a feel of her, he muttered, \"Damn, baby, you're soaked.\"\n\nToo overwhelmed to even speak, all Sherry could do was nod, he had her poor pussy on fire, and her breasts tingling so hard she could barely think, never mind see straight, she needed him inside her so badly.\n\nWhen he pushed her bikini bottom down to the floor and slid two fingers inside her, the way she was twisting her fingers into his hair as he tugged at her nipples with his teeth, while giving her a juicy little finger fuck, he knew she was already close, and so was he, his cock already pulsing like a bastard, ready to explode. His balls had never felt so tight or as heavy, and he knew he had to get naked and slide inside her to give them both what they needed before he lost his freakin' mind.\n\nImpatiently tearing his clothes off, he cast them aside. His eyes roaming over her luscious body, her hair loose around her shoulders, naked and shivering, with her nipples diamond hard, and the air ripe with the scent of her arousal, looking too fucking hot to be real, he grasped her around the waist and turned her around, his cock visibly pulsing, all he knew was that he needed to fuck her and fuck her now.\n\nSherry was nearly crawling onto the countertop, clawing at the cold, hard granite, so eager to feel him pushing inside her, her breath coming hard and fast, her pussy almost convulsing with need, felt like it was going into spasms.\n\nAs he dug his big strong hands into her hips, his heart hammering in his chest so hard he could feel it echoing in his ears, Rico leaned close and whispered against her neck, \"Baby, I can't hold back. This is going to be fast and hard, but I promise later I'll give it to you nice and slow.\"\n\nDesperately panting, barely able to catch her breath, she gasped, \"I don't care. Just give it to me, Rico. Give it to me hard, and give it to me now!\"\n\nChuckling, he grasped his cock and slid it up and down over her quivering slit, so wet, and so hot and so fucking ready to be plundered. Eager to please, and give her just what she needed, he pushed in and thrust, till he had her hips slamming up tight against the counter and both of them gasping as he went balls deep, straight up inside her with one hard flex of his hips.",
        "\"Oh, fuck. Yes! Yes! Yes!\" she cried out as he instantly began tunneling in and out of her deep, hard and lightning fast, like his cock was on fire, and only her pussy could put it out. Pounding her like a rutting beast, the hard, thickness of him deliciously stretching her insides, even the slight sting just felt too good to wrap her head around, especially with how he had every inch of her trembling from her scalp to her toes.\n\nBending his knees, his pulse racing in his veins, digging his fingers hard into her hips, Rico gave it to her right where she needed it, slamming her tight little pussy over and over with all he had, groaning as she threw back her head and happily squealed.\n\n\"Damn, you feel good,\" he murmured, gritting his teeth, glancing down and watching his slickened cock slide in and out of her fast and furious, he could hardly believe he had her back. His chest heaving hard, knowing he was about to let go and fill her up with every last drop he had, he clenched his jaw and held on, desperate to see her fall to pieces before he lost it. \"Come for me, baby, come,\" he implored her, as he plowed into her as deep as he could go.\n\nPummeling her till his legs shook, with a line of sweat running down his spine, it was like this every single time with her, once he was buried inside her, he lost all control.\n\nBoth of them fighting to breathe, reaching around her, he worked her clit till he had her shuddering, throwing back her head and crying out his name, \"Oh, god, Rico! I'm coming so damn hard!\" Shaking right down to the soles of her feet as the most amazing climax probably ever recorded washed through her, her legs began trembling so hard it felt like they were about to give out from under her. Tightening her muscles around him, squeezing him over and over with all she had, she came in a blinding rush, shivering and quaking as she bathed his shaft in a flood of her juices.\n\nWith one last deep powerful thrust, Rico felt his balls letting go, his pulse roaring in his ears, sure he'd never felt his cock pulsating as hard in his life. He slammed his eyes shut, growling, utterly lost in the feel of her, he slowly kept pumping in and out, with her clenching and unclenching around him, he exploded inside her like a volcanic eruption, bathing her womb with wave after wave of his seed.\n\nAnd just like that first night, when he could finally focus again, he looked down and smiled with a sense of satisfaction, at the sight of his cum sliding down her legs like a white milky river, making a mess of the floor, proving just how hard she'd made him come. Wrapping his arms tightly around her, still buried inside her as deep as he could go, filling his hands with her breasts, he pressed his lips along her spine, kissing his way up her back, he whispered reverently into her ear, \"God I love you, Sherry.\"\n\nStill trembling, barely able to breathe, turning her head, happily gazing over her shoulder at him, she cupped his face in her hand, slipped her tongue into his mouth and kissed him desperately hard, clenching her inner muscles so he could feel her hugging him inside her. \"I love you, too,\" she whispered against his lips, \"with everything I've got.\"\n\nHumbled by her words, Rico finally pulled out and turned her around, thrilled just to be able to hold her and kiss her again, especially after coming so close to losing her.\n\nOnce they'd finally come up for air, after they'd nearly kissed each other senseless, gently brushing the damp hair out of her eyes, with a gentle little pat on her backside, he murmured, \"Why don't you go up and start the shower, and I'll uh...\" grinning, he looked down at the big white splotches on the floor, \"...clean up the proof of what you do to me.\"\n\nSherry looked down then too, her gaze widened, amazed at what she saw. \"Wow, just like that first night. Everything's the same, right down to you dripping out of me onto the floor, with how you always fill me up to overflowing.\"\n\nRico eyed her and shook his head. Not quite like that first night, because now he was in love with her, crazy in love with her. Though he was insanely attracted to her from the moment he first laid eyes on her, which he knew was why he had her bent over the counter with his cock buried in her almost from the first moment he walked in the door.\n\nBut he'd come to realize that what they had now was a lot deeper than simple lust, though he had to admit, fucking her up against the counter was still one of the hottest things he'd ever done, so he knew they'd definitely be doing that again.\n\nBut for him she was the real deal, and the sooner she understood how he felt, the more secure he'd feel, because he realized he just couldn't live without her.\n\nUpstairs, Sherry was so wet and warm and silky soft when he joined her in the shower, all soaped up and just waiting for him to get in and run his hands over her body. Cheeky little thing, grinned and reached for a feel of him the moment he stepped inside. And even after their little sexcapade in the kitchen, it didn't take long till she had him hard enough to pound nails. But holy shit, when she dropped to her knees, looked up into his eyes and slowly dragged her tongue along his shaft from balls to tip, Rico just couldn't look away. Not only was it hotter than hell to see her on her knees lapping at his cock, but just seeing the look in her eyes, like he was the only man in the world she'd ever want, was almost enough to bring him to his knees, too.\n\nAs she opened up and sucked him back, teasing him with her tongue; twisting his fingers into her hair, he gently thrust his hips, convinced that he'd never need anyone but her. She was it for him, and knew the sooner he told her the better.\n\nGently rolling his balls between her fingers, softly moaning as she slid him in and out between her lips faster and deeper with every bob of her head, Rico clutched her head in his hands, blown away by the feel of her warm soft mouth caressing him like he was the best thing she'd ever tasted. He groaned. \"Fuck, Sherry, I'm going to come so hard if you keep that up.\"\n\nIgnoring his warning, she just looked up at him and smiled around his shaft, and sucked him back even harder, till finally he threw back his head growled and let go, exploding into her mouth, shooting straight down her throat, with his poor heart nearly beating out of his chest all over again. Damn, what a feeling, especially knowing it was her that made it happen, only made it that much hotter. And thorough little thing that she was, even with the water pelting down on them, she smiled up at him as she meticulously lapped all around him, making sure to get every last drop.\n\nRico's heart just felt so full, sure that he'd never felt as blissed out, he looked down at her smiling up into his eyes, and he nearly asked her to marry him right then and there. But then he thought about it, and had a feeling, especially with her being a romance writer that she wouldn't want to think back to when he proposed, that she had his cock buried in her mouth sucking him dry, when he decided it was the perfect time to pop the question.\n\nIn bed the next morning, Rico pulled her into his arms and kissed her, lingering over her lips he gently massaged her scalp, loving how her eyes drifted shut as they always did whenever he ran his hands through her hair. It just felt so good to have her back in his arms that he actually hated the idea of having to get out of bed, wishing they could just live their lives naked and as blissfully happy as they were right now.\n\nBut, knowing he still had a few things to take care of in the powder room they were renovating, and that the rest of the crew would be showing up soon to put the final touches on her house, with one last soft kiss, he threw back the sheet and went to get a shower.\n\nSherry sighed enjoying the play of muscles on his back and the flex his gorgeous tight backside as he was walking out, just so glad to have him back, especially after coming so close to losing him.\n\nLater, Rico was busy working on the new light fixture in the downstairs powder room, when Artie the tile setter wandered in with phone in his hand. \"Hey, Rico, you know anybody who wants a cat? My sister's cat had kittens, so if you're interested, you can have the pick of the litter.\"\n\nHe took Artie's phone and instantly smiled at a little orange and white fluff ball with a comical white spiky mohawk standing straight up on its head. And the thing seemed to be looking right at the camera into his eyes, like it was telling him that it was the one he should pick. \"Yeah, maybe,\" Rico said, \"let me get back to you. He pointed at the screen. \"But I like this one, and I think I'd call it Spike, with that spiky hairdo it's got going on.\"\n\nArtie chuckled. \"Isn't that more of a dog's name?\"\n\nRico shrugged. \"I don't think the cat would care what I called it, as long as it got a good home.\"\n\n\"You're probably right,\" Artie agreed with a nod of his head. \"And I'll tell her you might take that one, then.\"\n\nSherry stayed upstairs while the work was going on, and Rico waited until the rest of the crew had left for the day before he cleaned up and started thinking about dinner. He shook his head, marvelling at her. When she was absorbed in her writing nothing seemed to matter to her, not even if she ate. But since he loved to cook, he was more than happy to take care of her.\n\nHe was just taking the salad he'd made out of the fridge, and nearly dropped it on the floor when he looked up and got an eyeful of her wandering down the stairs in her sexy little orange bikini with a naughty twinkle in her eye. And he forgot all about the cooked chicken in the oven, when all he could think of was how hot she looked as she sauntered over to him, slipped her arms around his neck and gifted him with a warm lingering kiss, teasingly smiling into his eyes as she wrapped herself around him. Of course he kissed her right back, and really took the time to let her know how happy he was that she'd decided it was time for some fun.\n\nWhen they finally broke the kiss, grinning coyly, she traced a fingernail around his lips. \"I was just writing a love scene that featured a very dashing, very sexy dark haired rogue, and I got so wrapped up in what was happening between them, that I got a little aroused.\"\n\nGrinning, he slid a finger into her bikini bottom and rolled his eyes when he felt how wet she was. Yeah, she was aroused alright.\n\nAs he tried to decide whether to take her outside and make love to her on the patio, carry her into the living room and spread her out on the couch, or just pull her down to the floor, as she impatiently started to tug off his t-shirt, and reach for his fly, he just shook his head smirking, seeing as she'd made up her mind that she wanted him, and she wanted him now.  No wonder he was crazy about her, when she was every bit as insatiable as he was, and neither of them could keep their hands off each other even long enough to eat.\n\nHappy to make it happen, Rico tugged his t-shirt over his head and kicked away his jeans. With his eyes fixed on hers, he unclipped her bikini top, pushed her tiny little bottoms down to her ankles, rolling his eyes at the sight of her naked, he sank his hands into her hair, and made love to her mouth as he pulled her down with him onto the hardwood floor.\n\nHe was already hard as a brick and she was nice and wet, and he knew all he'd have to do was push inside her. But curious, he stroked a finger across the swell of her breasts. \"So, what are these two in your story getting up to, exactly?\"\n\nSherry shivered as he traced a finger around her achingly hard nipple, making her breath catch in her throat. \"They're on a pirate ship, where he's just launched a long drawn out assault to rescue her from her captors, a band of blood-thirsty pirates. But as his crew overtakes the ship, he frantically looks for her everywhere terrified that he's lost her and that she might have been thrown overboard. When at last he finds her, hidden away in the Captain's quarters, it doesn't take long till he has her naked in his arms. And she's so relieved because the scariest thing for her was thinking that she might never see him again, and of course she happily surrenders herself to him.\"\n\nRico slowly nodded his head. \"I could understand that.\" Especially since he nearly lost his mind when he thought he'd lost her.\n\nShe wiggled her eyebrows making him laugh. \"And now, he's sliding into her nice and deep and making love to her, and as you'd expect, she's overjoyed.\"\n\nWith a naughty grin on his lips and his gaze fixed on hers, he parted her thighs, nudged at the opening of her hot little pussy with the tip of his cock, and asked, \"Like this?\"\n\n\"Oh, yes, just like that.\" Happily sighing, Sherry wrapped her legs around him and dug her heels into his backside as he began to thrust inside her.\n\nAs much as he wanted to give it to her just as hard as she needed it, he forced himself to slow it down, tenderly kissing and petting her as they made love. He wanted her to know just how deeply he loved her, and that what they had was about way more than sex, even as they were joined together as tight as two people could be. Like the guy in her book, now that he had her back, he wasn't about to let her go, and wanted her to know it, too.\n\n\"I love you,\" he whispered, tipping up her face so he could look into her eyes as he caressed her cheek with the back of his hand.\n\n\"And I love you, so much,\" she whispered back, hugging him close, with her breasts pressed tight against his chest. \"And being like this with you, feels... like a dream come true. I thought I was doing fine on my own and I never thought at my age that I'd ever meet someone like you, who I just can't live without.\"\n\nRico's could feel his heart swell in his chest, overjoyed to hear that she felt the same way as he felt about her. \"You know,\" he confessed, \"my favorite time of day is waking up in the morning and seeing you in bed next to me.\"\n\nShe smiled, running her hands through his hair. \"Hmm, mine, too. And just knowing you're beside me I sleep so much better, especially with you holding me close all night.\"\n\nWith his eyes smoldering, he lifted her legs over his shoulder, so he could go even deeper, as he thrust his hips and pushed inside her, he knew one thing, they were never going to sleep apart again.\n\nSoon Sherry cried out his name as she came and Rico followed right after, muttering, \"Damn, Sherry.\" Lost in the feel of her as he sank into her as deep as he could go with her clenching around him, he kept on thrusting, giving her everything he had, till finally they were breathlessly shivering together on the floor.\n\nHe smiled into her eyes, brushing back the hair back from her face, he knew he was right where he was meant to be, and the sooner he told her that she was it for him, the better he'd feel.\n\nThey were finishing their dinner out on the patio when Rico noticed a fluffy gray cat carefully picking its way across the fence. When Sherry looked over and saw it, she smiled and called out, \"Come here, Muffin,\" patting her lap.\n\nThe cat looked over at them, but for a moment all it did was sit and wash its paws, then in its own good time it wandered along the rest of the fence, jumped off, sauntered over and wound its way around Sherry's ankles, happily purring. Sherry explained, \"She belongs to the lady next door, and I go in to feed her sometimes when she's away. But Joyce doesn't normally let her out, so I should probably take her home.\"\n\nBut before she did, Sherry picked her up and enjoyed a little cuddle while Rico reached over and rubbed the little furball's ears. \"She's a pretty cat.\"\n\nSherry smiled as she stroked her head. \"And she knows it too, don't you, Muffin?\" The cat seemed to purr even louder, with her big yellow eyes contentedly drifting shut, once she'd said that.\n\nRico looked up at Sherry. \"You ever think of getting a cat of your own?\"\n\nShe nodded. \"I have thought about it. I grew up with cats, and I've always loved them. But my late husband, being such a germaphobe would never allow me to have a pet, not even a bird. And maybe one day I'll look into getting one.\"\n\nRico nodded and began to smile.\n\nThe next day, after he finished installing the lights in her beautiful new downstairs dove gray and white powder room that he knew she'd love once she saw it. Seeing as Sherry was still upstairs busy working on her latest book, he walked out and met Artie at his truck. And he shook his hand and thanked him for the cardboard box with air holes punched in the lid as he handed it over to him.\n\nOnce he got it inside, the minute he opened the box, Rico chuckled and smiled at the adorable little ball of fluff that let out a plaintiff little mewl as it looked up into his eyes. He picked it up, held it close and rubbed its little head. \"You're a real cutie, aren't you? And I know a lady who's going to fall in love with you the second she sees you.\"\n\nUnbeknownst to Sherry, Rico had already stashed a big bag of cat supplies in the laundry room. Carefully closing the door behind him, he set everything up for the cat, even before he showed it to Sherry to see if she'd like it, imagining she'd fall for it the instant she laid eyes on it.\n\nWith its big innocent blue eyes staring up at him, doing his best to give it a stern look, he pointed at the litter box. \"And you know what that's for, right? Just make sure you go in there and nowhere else.\" Unperturbed by his tone, the kitten happily curled up tighter in the crook of his arm and just kept purring like a little motorboat, making Rico laugh as he rubbed it's little head. \"Well, just try not to do anything to embarrass us, okay? Because I'm trying to make a home here for the three of us, so you'd better behave.\"\n\nWhile Sherry was busy on her computer crafting her latest book, Rico quietly made his way upstairs and set the kitten down on the floor of her office. And then he stood back and waited for her to notice.\n\nSlightly frustrated, when the words wouldn't come, rather than give up, Sherry went to work on researching the details for her story and started googling some images of antique jewelry. She was so engrossed carefully studying each piece, when Spike wandered over and curled around her feet, she looked down letting out a gasp, when it tickled her ankles. \"Oh, my goodness, aren't you precious. And where did you come from?\"\n\nInstantly she picked up the kitten and kissed its little head. Then she looked over and saw Rico standing smirking, watching them and gave him the sweetest smile. \"Oh, Rico, it's just so cute, thank you.\"\n\nPushing himself off the doorway, he wandered in and joined them. \"I like the little mohawk it's got going on, so I thought maybe we'd call it Spike.\"\n\nShe turned it over and looked between its legs trying to determine its sex, but it was still too tiny to tell. She looked up at him. \"So, it's a boy?\"\n\nHe shook his head, grinning. \"No, it's a girl.\"\n\n\"Oh. I don't know about Spike then, especially for a little girl as cute as this one.\" She nuzzled it with her nose, already smitten. \"But we'll think of a name for you, won't we, sweetie?\"\n\n\"Well, for now it's Spike. And if you're gonna call it something else, please don't go for anything too girly, because if I have to call it to come in if it gets out, I don't want to be calling out something silly like...\"\n\nSherry grinned. \"Fluffikins or Sweetums?\"\n\nRico rolled his eyes. \"Yeah, something like that.\"\n\n\"I won't, I promise. But now we'll have to go out and get it a litter box and a bed and some toys, and --.\"\n\nChuckling at how into it she already was, Rico shook his head. \"It's all taken care of, and I got everything all set up in the laundry room for her.\"\n\nHer eyes warmed as she crooked her finger beckoning him to come close. When he bent his head, smiling into his eyes, she pressed a warm kiss to his lips. \"You know this is one of the reasons I love you. You're just so thoughtful and sweet, to do something like this for me.\"",
        "\"So what do think? Is she a keeper?\"\n\nShe kissed its furry head, lifted it up and smiled right into its little face, and told him, \"Hmm, yes, I love her to bits.\"\n\nGlad that worked out, now he just had to convince her that they could make it work together, hopefully for the rest of their lives.\n\nJust about to leave her with the cat, Rico stopped in his tracks when he noticed what she had up on the computer screen -- that looked like engagement rings. He nodded to himself looking pleased. So, maybe they were on the same page after all.\n\nWhen Sherry noticed him looking, she explained, \"I'm just looking at engagement ring styles from around the 1840's, when my story takes place. Now that Miguel has decided that he wants to marry his lady love, I have to describe the ring he's chosen, as well the kind of reception he'll receive from her father when he has to face him to ask for his daughter's hand in marriage.\"\n\nRico tipped his head, studying the screen. \"I always thought engagement rings were kind of a modern day thing. Like women wearing white wedding dresses.\"\n\n\"No, engagements rings have been around for ages, at least since ancient Rome. But back then they were meant more of a sign of ownership and obedience and were made of more common things like ivory, copper, flint, iron or even bone. And later, around twelve hundred years ago, gold became more popular, when Pope Nicholas the First, decided that an engagement ring should represent a man's intent to marry, and also be used to signify mutual love. So, it's a fairly old tradition to present a woman with a ring when asking for her hand.\n\n\"And you're right about wearing white for weddings. It only became popular around 1840 after Queen Victoria wore a white gown when she married the love of her life and first cousin, Albert. But back in those days not all brides could afford to buy a dress just for one day, so the tradition of wearing a white bridal gown really only caught on in the last century. But my heroine will definitely be wearing white when she marries the man of her dreams.\"\n\nRico nodded, looking impressed, surprised at how much work was involved in writing historical fiction. \"I had no idea you had to put in so much research for one of these stories.\"\n\nSherry sighed, turning her attention back to the rings on the screen. \"I try my best to be accurate, which is why I'm looking for a perfect period engagement ring for Lady Madeleine and Miguel.\"\n\nRico looked over her shoulder at the different styles and pointed one out that caught his eye. \"That one's kind of nice, with the big diamond in the centre of the gold band and the smaller ones surrounding it.\"\n\nClicking on it, she smiled as she enlarged the image. \"That's my favorite, too. And I can just imagine Miguel on bended knee presenting her with a ring exactly like that as he asks for her hand.\"\n\n\"And where do think he'll propose?\"\n\n\"It all depends on whether her father eventually comes around and gives his blessing for him to marry his daughter, considering he has no title or family wealth, like the Duke her father had initially planned for his daughter to wed. But I imagine Miguel, being a wealthy privateer might propose to her on one of his ships, since he rescued her at sea, and they made love for the first time onboard one of his schooners as he sailed them back to England.\"\n\nRunning his hands through her hair, teasing her neck with his fingertips, sending shivers down her spine, smiling as he pressed his lips to her ear, he murmured, \"Sounds pretty romantic.\"\n\nNow that he'd got her all tingly, Sherry looked up at him and grinned. \"Hopefully my readers with think so, too. Because this is a big departure for one of my characters, normally they marry within their social set, and a lady of her status would almost never consider marrying a rogue like Miguel.\"\n\n\"But I guess true love conquers all, right?\"\n\nSherry looked up at him for moment and finally nodded. \"I think it does.\"\n\nIt seemed funny discussing the fictional plans for her characters engagement, when he was racking his brain trying to decide how he was going to ask her to marry him. Considering she earned her living spinning romantic tales, he knew he was going to have to come up with something pretty special that she'd never forget. So, doing something like dropping a diamond ring in the bottom of a champagne glass over dinner was sure as hell not going to cut it.\n\nAnd since she'd told him that she lost both of her parents when she was still in her twenties, at least he knew that he wouldn't have to ask her father for her hand, or have to worry about what they thought of their talented daughter marrying an electrician.\n\nOver breakfast a few days later, Sherry started smiling as she looked at her tablet. \"Oh, I'm so glad it's back, and I'll have to go this time. The Tall Ships are coming to the waterfront for a few days next week. And I'd love to go and have a look, just to see what it actually feels like to be onboard one of those old ships. It says that one of them is a schooner crafted to look like the original built in 1812. So, I'd really love to see that first hand, especially the Captain's quarters, where my characters would have made love. I've never seen one up close, so I'll have to get a few pictures.\"\n\nRico, supressing a grin, struck by an idea, he suggested, \"We could go and make an evening of it, maybe have dinner after.\"\n\nSherry agreed. \"Sure.\" Then she checked the times and looked to see exactly where they'd be moored.\n\nAs he poured her some more coffee, Sherry looked up at him, and remembered the light in her office was working. \"Oh, I noticed you fixed my desk light for me, thank you.\"\n\nRico nodded, rolling his eyes.\n\n\"Was it hard to fix?\"\n\n\"Not really.\" Looking a little guilty, and feeling even sillier, he told her the truth, \"Considering it just needed a new light bulb.\" They both laughed at that, realizing if he'd just changed the light bulb in the first place and not got into reading what she'd written, then taking it the wrong way, they wouldn't have had to go through the drama of almost breaking up.\n\nShe shrugged. \"Well, at least the light works now.\" Rico just shook his head, still annoyed with himself over what he'd almost done to them. Though he realized it had served a purpose, since they'd grown even closer after nearly losing what they had.\n\nA week later, on the Friday they'd planned to see the ships, Rico texted her: \"Sorry, baby, I'm running a little late. I'll have to meet you there. Just go ahead and get some pictures and I'll be there soon as I can.\"\n\nAs Sherry walked along the dock, where the ships were moored, with her phone in hand taking a few pictures, she realized they really were tall ships as she craned her neck, and had to tip her head all the way back to look up way at the top of the masts. And all of them were so beautifully maintained, like floating works of art. One of the crew noticed her looking around at the different ships and called down to her, \"Why don't you come aboard and have a look?\" Sherry looked behind her, but since she couldn't see any sign of Rico, deciding he'd catch up with her, she nodded and made her way up the gangplank, hanging onto the rope railing, she accepted his hand to help her step aboard.\n\n\"This really is beautiful,\" she remarked, looking around the long sleek ship and back up at the pair of big white sails brilliantly illuminated in the spotlights.\n\n\"It's based on a schooner built in 1812 and the builders tried to keep every detail true to the original.\"\n\n\"Well they did a beautiful job.\"\n\nWandering around, noticing the crew in period costumes she smiled and said hello. And each of them explained what their duties would have been if they'd actually been working as hands onboard the ship over two hundred years ago, doing things like; raising the masts, manning the winches, maintaining the rigging, and of course keeping it clean and ship shape as well as feeding the crew.\n\nOnce she'd seen most of the vessel, the young man who'd helped her aboard, pointed at one of the doors at the stern of the ship. \"Would you like to see the Captain's quarters now?\"\n\nWhen she nodded and said, \"Yes, I'd love to,\" he opened the door for her to step inside.\n\nOnce he'd closed the door behind her, Sherry glanced around the dimly lit quarters noting the double bed with a burgundy brocade quilt, and matching heavy velvet curtains imagining it was probably to keep the draft out while the captain slept, and took a moment to take a picture, imaging her couple curled up together in a bed just like it. There was a small desk in his quarters too, with a quill pen and some papers, since he would have been able to read and write, unlike most of his crew. And also a table and two chairs, sat near the wall, probably where he ate his meals. And there were lanterns hanging from the ceiling and even a carpet on the floor, making it feel kind of luxurious and a lot different from the tight quarters where the crew would have slept from hammocks suspended from the ceiling.\n\nAs she turned to see the rest, she let out a gasp when she realized she wasn't alone as a tall figure stepped out of the shadows. Her eyes went big when she realized it was Rico, dressed as a privateer in fitted leggings, tucked in knee high leather boots, with a white shirt open at the neck tight across his muscled chest, a red sash tied around his hips and a wine colored waist coat with silver buttons down both sides, and with a tricorn hat on his head. He just looked so dashing, and so hot, like a real live rogue, that at first she couldn't even speak.\n\nFinally, she blurted, \"What on earth are doing here dressed like that?\"\n\nWearing a teasing smile, he stepped close. \"I thought it would be fun to live out a real life fantasy with you.\"\n\nWhen he got down on one knee, Sherry could feel tears threatening, as he looked up into her eyes and pulled a blue velvet ring box from his pocket, shocked and touched beyond belief that he was about to propose, especially on a ship like this of all places.\n\nRico reached for her hand. \"And I was also hoping that you'd consider making me the happiest man in the world, by agreeing to marry me.\"\n\nSwallowing hard, wiping back tears, she nodded. \"Yes, I'd love to marry you, Rico.\"\n\nHeaving a sigh of relief, he opened the ring box, and her mouth fell open when she saw the ring he'd chosen. She stared at him, shocked. \"That's the ring... the ring I showed you.\"\n\nHe smiled. \"I had it custom made for you, hoping you'd like it.\"\n\nWhen he got to his feet and slipped the ring on her finger, she looked up into his eyes, fighting back tears. \"It's perfect, Rico. Thank you for all of this, I'll never forget it.\" He pulled her in for a kiss, wrapping her tight in his arms and suddenly everything else faded away expect for the feel of his mouth on hers, and how good it felt to have his big, hard body pressed against her.\n\nWith their lips locked in a steaming hot kiss, he backed her into the bed until her legs bumped against the mattress landing her flat on her back. He smiled down at her, wiggling his eyebrows and asked, \"Permission to come aboard?\"\n\nThrowing back her head she laughed, and finally nodded. \"Permission granted.\"\n\nWrapping her legs around his waist, with his erection pressing right where she needed him, she quickly lost herself in the feel of him as he claimed her lips in a desperate kiss, his hand sliding up her thigh he quickly had her panties soaked and her poor heart nearly pounding right out of her chest. Even fully clothed she felt like she was burning up, she wanted him so badly.\n\nFinally remembering where they were, she anxiously looked around, hoping no one would walk in on them. \"Much as I'd love to, if anyone catches us like this, I don't think they'd be too happy to find us making out on the Captain's bed.\"\n\nChuckling, Rico shook his head, still pressing kisses along her neck to her ear. \"I don't think they'll bother us. He said we can take all the time we need.\"\n\nHer eyes popped. \"So that man who showed me in here, he knew about this? How did you ever arrange it?\"\n\nWith a devilish twinkle in his eye, he shrugged. \"I might have offered to set up some new spot lights for them, because the ones they had weren't that great. And they were so happy with the ones I installed that really show off their sails, that when I asked if I could use the Captains quarters for a romantic setting to propose to my lady, they were all for it.\"\n\nSherry sighed, running her hands over his chest, blown away by how thoughtful he was. \"I can't believe you've gone to this much trouble.\"\n\nHis eyes warm on hers, he murmured, \"You know I'd do anything for you, even dressing up as a pirate to ask for your hand.\"\n\nShe tugged down his head and whispered against his mouth, \"I love you, Rico.\"\n\nHe grinned. \"Good thing, 'cause I'm crazy in love with you.\" He squeezed her backside and dropped another kiss on her lips. \"And I got us a room to celebrate in a hotel right across from here. So, we can order room service and spend the night enjoying ourselves, practicing for our honeymoon.\" He nuzzled his lips along her neck making her shiver. \"And I'll even leave on this pirate getup if you want.\"\n\nShe smirked, looking him over. \"I'd love that, at least for the fun part in bed. I've never made out with a privateer before. Which by the way is what you are -- one of the good guys because you're definitely not a blood-thirsty pirate.\" Then she bit into her lip, when she remembered the kitten alone at home. \"But I just hope Spike will be okay on her own until tomorrow.\"\n\n\"No worries, it's all taken care of. I brought her over and introduced her to your neighbor Joyce and the moment she saw her, she picked her up and cuddled her, and said she'd be more than happy to look in on her.\"\n\n\"It sounds like you thought of everything.\"\n\n\"I tried. But just so you know, my sister's waiting to hear that hopefully you said yes, and that we're engaged. And I know my mother will definitely want to have a party and invite the whole family over to celebrate, so at least you'll get to meet everyone at once.\"\n\nWhen she stayed quiet, looking a little worried, Rico tipped up her chin. \"Hey, everyone's gonna love you, maybe not as much as I do, but once they meet you, they'll fall for you, too, I promise. And my mother will be so happy that I'm finally settling down, she won't care about anything else.\"\n\nHer eyes steady on his, Sherry just had to ask, \"Even the difference in our age? Or that she'll never see any grandchildren from us?\"\n\nStill poised between her legs, Rico stroked the back of his hand over her cheek. \"Believe me, none of that'll matter once she meets you. Look at my sister; she wondered what we were doing together, at first. Then she got so worried when we almost split up that she conspired with you to trick me into coming back. That's how much my sister loves you, and already thinks of you as part of the family. Besides, my mother can hardly handle taking care of my sister's two kids on her own, so she's got more than she needs with the pair of them. Oh, and she's a huge fan of yours too, so she'll probably want an autograph along with most of my aunts and cousins, so be prepared.\"\n\nSherry just hoped he was right and that his family would accept her.\n\nRico helped her to her feet, and straightened out her dress. Then he cupped her face in his hands, and held her gaze. \"I think we'll do just fine. You, me, Spike and your little orange bikini -- what else do we need?\"\n\nSherry laughed, slipped her arms around his neck, and pulled him close, rubbing her nose against his. \"As long we've got each other, I think you're right, and we've got everything we'll ever need.\"\n\nRico heaved a sigh, and took her by the hand. \"Amen to that.\"\n\nWhen they walked out of the cabin together hand in hand, the crew didn't try and hide the fact that they were all gathered around waiting to hear the verdict. Rico smiling from ear to ear, held up her hand with the ring on it, to let them know that she said yes, and everyone applauded, and the couple of the guys he'd worked with on the spotlights even whistled their approval. And the young man who'd helped her come aboard stepped forward, shook both their hands and congratulated them.\n\nAs they disembarked, waving back to the crew, Sherry took a look down at her hand, still hardly able to believe that she was actually going to marry the man of her dreams, realizing it actually was like a fairy tale come true.\n\nRico looked so dashingly handsome in his privateer getup that everyone they passed did a double take, and Sherry also noticed a few young women giving him some pretty encouraging smiles. But with his hand firmly wrapped around hers, he didn't seem to notice, and just walked them straight into the hotel, and checked them in with his mind focused on giving her a night she'd never forget.\n\nAlone in their sumptuous suite, dinner was perfect; chateaubriand for two, with roasted vegetables, a good bottle of red, and strawberries with whipped cream and chocolate sauce for dessert, and for a little extra fun later in bed.\n\nBest part of it for Rico had to be Sherry naked in his lap wearing nothing but the tricorn hat and her engagement ring -- and of course, knowing that the beautiful woman, who just couldn't stop kissing him, would soon be his wife.\n\nThinking back, he thought he'd lost his mind that first night he'd met her, when he'd bent her over the counter and gave it to her like his life depended on it. And though he'd never even considered stepping over the line with a client before, he was so glad now that he had, or he wouldn't be thanking his lucky stars for finding the woman he could hardly wait to spend the rest of his life with.\n\nAnd he did give her a night she'd never forget. After their dinner, when he dimmed the lights and she crawled onto the bed, he took his red waist sash and slipped it over her eyes, whispering against her ear, \"Without your sight, you'll only be able to feel.\"\n\nOnce he had her on back, with her chest heaving, he reached for the bowl of whipped cream and smiled at her startled gasp as he began to paint her body, first circling her lips and fully erect nipples, then trailing a path down around her belly button, finally dabbing her mound with a nice thick coating of cream. As he worked at kissing and licking her clean, Sherry writhed and whimpered, clutching his head in her hands. \"Oh, you devil,\" she gasped as he chuckled, enjoying the taste of her sweet creamy flesh, as he licked and suckled at her diamond hard nipples, blowing hot air across them, getting her shivering hard, before slowly tracing his tongue lower, dipping into her belly button, until at last he was sinking his tongue into the sweetness of her tight little pussy.\n\nGoosebumps covering her skin, her heart hammering in her chest, Sherry couldn't stop shivering, already right on the edge as she felt him parting her thighs getting every inch of her humming so hard with just the touch of his tongue that she could barely catch her breath. \"Oh, my god, Rico, what you do to me,\" she murmured, anxiously digging her hands into his hair, sure that she'd never experienced anything as erotic.\n\nHe smiled up at the sight of her naked and blind folded, and shook his head, convinced he'd never seen a sexier sight in his life than her right now, with her breasts heaving, her pussy glimmering, and every inch of her quivering, fully aroused and just waiting for him to take her. Pressing hot, wet open-mouthed kisses to her inner thigh, he warned her, \"And I'm just getting started, baby, so hang on.\"\n\nAnd that was no lie. His tongue and his lips worked her pussy so hard, he had her nearly crawling out of her skin as he suckled her clit, nursing her through the most wickedly hard climax she'd ever felt as she came in a blinding rush. \"Oh, wow, I'm seeing stars,\" she cried out, tossing her head from side to side as he kept up his onslaught till he had every inch of her quaking right down to the soles of her feet.",
        "Then before she'd even had a chance to come down from that, with his shaft in his hand, he nudged at her opening, loving the way she was desperately panting after coming that hard, he could hardly wait to see her falling apart all over again as he gave her the ride of her life. Taking her lips in a deep hungry kiss as he sank into her body, her arms and legs wrapped tightly around him, he knew this was where he was meant to be for the rest of his life.\n\nAnd after they'd finally come together crying out each other's names, clutching each other tight with their chests heaving, both of them let out identical sighs, deciding that what they had was just about perfect.\n\nAfter they'd agreed to get married, they seemed to grow even closer, quickly settling into a life of domestic bliss. Planning to go out for a swim one night after Sherry had made them a delicious salmon and veggie stir-fry for dinner, about to step outside, when they looked up and noticed the sky had turned black and it was starting to pour with the threat of thunder rumbling in the distance they decided they'd better stay in.\n\n\"How about a movie?\" Sherry suggested, as they made their way back up to her bedroom to change back out of their swim suits.\n\nRico made a face, pretty sure her idea of a good movie would be a chick flick, considering the kind of books she wrote, he still shrugged and said, \"Sure.\" He could sit through a couple of hours of mushy stuff, at least for her.\n\nBut she surprised him once they'd crawled into bed together when she pushed a button on the remote, revealing that the framed watercolor on the wall actually held a pivoting flat screen T.V. He nodded as it rotated, displaying the nice big screen. \"Hey, that's pretty cool.\"\n\n\"Since I never bother to watch much, and don't really like the idea of having to look at big black screen on the wall, I thought this was a nice solution.\" Then as she scrolled through her movie list, she asked, \"So, would you be up for a Bond flick?\"\n\nRico blinked, not sure he'd heard her right; he sat up and looked at her. \"James Bond? Are you kidding me? You're looking at probably the biggest Bond geek ever born. I've seen them all at least a dozen times, and I've been watching them since I was a kid. My father, brother and I used to watch marathons together all the time. We'd spend whole weekends just watching one after the other, barely getting off the couch. But are you sure? Because if you'd rather watch something like a Bridget Jones movie or whatever you're into, I'd be okay with that.\" Though he had fingers crossed behind his back, hoping like hell she pick James over Bridget.\n\nSherry shook her head, smiling at him. \"Actually, I guess you could call me a Bond geek, too, because also I've been into them from the time I was a kid. Whenever a new one came out, my parents and I would go out for dinner, and then go and enjoy the movie together and talk about it all the way home. It was a tradition in my family, and we never missed a single one. And to be honest, I've never really been that into romcoms. Most of them are so sweet, they make my teeth ache. Although I write romance, I try not to write anything too gushy, preferring to have them chasing after each other on horseback or fighting a duel over the lady they both want, or having the hero risking his life at sea in a swashbuckling battle, like this latest one I'm writing now. They're really more like adventures, where the protagonists end up falling in love, of course winding up in bed, enjoying the hell out of each other. So, there are only a few romantic ones I like to watch, like Love Actually, which I think even you'd probably enjoy.\"\n\nRico nodded, impressed. \"Yeah, maybe we can watch that later. And remind me, that I've got to read this latest book of yours.\"\n\nTesting him, Sherry smirked. \"So, which is your favorite Bond movie?\"\n\nHe had to think about that, staring into space for a minute, he finally said, \"Hard to say, because I've enjoyed them all, even the cheesier ones. But if I had to pick, I think it would have to be Goldfinger, it's got everything, action, suspense, drama, and really good cast.\"\n\n\"Wow, that's one of my favorites, too. But I think On Her Majesty's Secret Service has got to be the best.\"\n\nRico turned and looked at her. \"Really? Is it because that's the only one where Bond finally commits to one of his women and gets married?\"\n\nSherry shook her head. \"No. I just think it's got a better plot than a lot of them, and the location is amazing. And I guess it doesn't hurt that he finally finds the woman he wants to spend his life with, considering how many women he's had hopping in and out of his bed.\"\n\nRico laughed. \"Yeah, no kidding.\" Which was probably one of the reasons as a teenager, he'd actually dreamed of being Bond and bagging every babe he saw on the screen. He stroked her thigh, glad that they could agree on a movie to watch, he said, \"Hang on and I'll make us some popcorn.\"\n\nSherry laughed when he came back balancing a big bowl of popcorn and two martinis on a tray. He winked as he handed her her glass, telling her \"Of course as you'd expect, these are shaken not stirred.\"\n\nAs they settled in to watch the movie with Spike curled up tight between them, she asked, \"So, who's your favorite Bond?\"\n\nHe wrinkled his forehead, trying to decide. \"That's another hard one. I gotta say I do like Daniel Craig, but Pierce Brosnan was good and so was Roger Moore, and Dalton, too. But Sean Connery is classic Bond, and I don't think anybody can beat him.\"\n\nShe reached for some popcorn. \"I think you're right about Connery. But it's hard to pick just one, since all of them were good.\"\n\nThen she smirked as she reached for her drink. \"But who was your favorite Bond girl?\"\n\nRico looked over at her chuckling. She had to be kidding, if she thought he was going to admit, while he was curled up nice and tight with his lady, that Barbara Bach did it for him like none of the others ever could, she was crazy. Then again, seeing Halle Berry rising out of the water in that orange bikini was a sight he'd never forget -- which got him wondering if that's why he'd get so hard whenever she'd slip into that little scrap of orange Lycra that fit her body like a glove. \"I think they were all great,\" he finally said, giving her a wink. \"But you've got to love the crazy names they gave them like; Honey Ryder, Plenty O'Toole, Xenia Onatopp, Dr. Goodhead, Octopussy and of course, Pussy Galore.\"\n\nSherry chuckled at how silly they sounded as she stroked the adorable little kitten from chin to belly, watching it languidly stretch out its little body, pressing itself tightly against her hip, purring its little heart out. \"I know they were so over the top, they made you laugh. Which I think is part of the fun of these movies, the suspension of belief where you just go with the adventure, enjoy the amazing scenery from around the world and that iconic music that let you know Bond was about to fight for his life. But whatever he got himself into, no matter how hopeless it looked, you knew he'd always make it out alive to star in the next one, still looking dashingly handsome, without a single scar.\"\n\nRico reached for his drink, kind of glad they were doing more than tearing up the sheets in bed for a change, as they got to know a little more about each other.\n\nAnd the more he learned about her, the more convinced he was that he'd met his match, and now he could hardly wait to call her his wife. So, naturally he pulled her in for a kiss, and as he always did, he totally lost himself in her and she had to pause the movie.\n\nA month later, on the first day of September, Rico could feel his heart clenching in his chest as Sherry looked up at him with a look of pure devotion in her eyes as she walked up the aisle of the church with her shimmering honey-brown hair loose around her shoulders, a teasing smile on her lips in a perfect little white dress that stopped just above her knees that had her legs looking amazing, with a bouquet of pale pink roses clutched in her hands. She had to be the most beautiful bride ever.\n\nHis brother nudged him with elbow and muttered, \"Wow, bro, is she ever gorgeous.\"\n\nRico smiled and said, \"I know,\" still hardly able to believe that she was about to become is bride.\n\nHe couldn't help himself, the minute Sherry reached the alter Rico slipped his arms around her and pulled her in for a kiss, instantly lost in the taste of her. It took him a moment to notice that everyone was chuckling and the priest was clearing his throat pretty loudly, until finally he realized what he was doing and pulled away.\n\nEven with everyone still chuckling, Sherry and Rico just grinned at each other, holding on tight to each other's hands, because they knew what they had was so solid and this was just to confirm that they were going to be together and committed to each other for the rest of their lives.\n\nThe priest smiled at the pair, shook his head and said to the congregation, \"Well, I think we can safely assume that these two are very much in love, since normally the groom waits until after they're married and I tell him that he may kiss his bride.\"\n\nEveryone laughed at that, but the two of them just kept smirking at each other, eager to say their vows and start their life together\n\nRico was right about his family. Once they'd said their I dos, and walked down the aisle together arm in arm as man and wife, outside the church they could hardly get a clear shot to pose for a few pictures everyone was so busy telling them how happy they were for them, and just wouldn't stop with the hugging and kissing.\n\nFinally, Sherry turned to her new hubby, wiggled her eyebrows and grinned when she noticed that instead of a traditional black vest and cummerbund beneath his perfectly fitted tuxedo jacket, he was wearing the burgundy vest with the silver buttons with the red sash from his privateer costume tied around his hips. She ran her hands down over the vest, and happily smiled up at the naughty glint in his eyes. \"So the adventure continues?\"\n\nGrinning, he pulled her in for a kiss, and murmured against her lips, \"Always and forever, baby, now that you're finally mine.\""
    ],
    "authorname": "Smuttyandfun",
    "tags": [
        "blow job",
        "commitment",
        "love",
        "oral"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/finally-ch-04"
}