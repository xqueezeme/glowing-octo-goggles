{
    "title": "The Worst Succubus",
    "pages": [
        "Author's Note: This story is about sex, but does not actually depict sex or eroticism. Even so, all characters are over eighteen. Well over, in some cases.\n\n****\n\nAztra fidgeted even more than usual in class. Her tail twitched back and forth incessantly, despite her best efforts to keep still and not attract attention.\n\nIt was always about sex. Always.\n\nSure, being a succubus made that kind of mandatory, but Aztra couldn't help feeling like there were other things she could be learning. Some other topics of conversation, even.\n\nHer friends didn't think so any more than the teachers did, though. Even her breaks weren't free from the subject. And it had only been getting worse.\n\n\"You know field trips are coming up next week,\" Dheni said with evident anticipation.\n\n\"Fuck yeah!\" Erota agreed. She stretched in a way that showed off plentiful midriff due to her too-small top. \"I'm gonna rock the whole seduction thing this time. Graduate early, hopefully.\"\n\n\"Pff, as if. You're so bad at sex. You remember last time you were in the human realm? You-\"\n\n\"I remember.\"\n\n\"-were only supposed to suck that boy-\"\n\n\"I said I remember!\"\n\nDheni waited a moment as though she wasn't going to continue, then grinned and launched into it anyway. \"Didn't he end up with a concussion?\"\n\n\"Whatever,\" Erota said with a scornful sniff. \"He panicked. I... made a poor decision.\"\n\n\"Yeah. Throwing him across the room could be called a poor decision.\"\n\n\"Ugh. One mistake. Jeez.\"\n\nDheni was still grinning as she turned to Aztra, who'd been doing her level best to be ignored.\n\n\"What about you, Az? You didn't do well last time either, as I recall.\"\n\nAztra squirmed and felt her tail start twitching again. She halfway wanted to reach back and grab it just to hold it still. But that would just look silly.\n\n\"It's gonna be mandatory, huh?\" Aztra said gloomily.\n\n\"I mean... yeah,\" Dheni said. \"But so what? It's gonna be so much fun. Getting out there with the mortals and all. They're gonna have to let us out of school eventually. Get to our real jobs.\"\n\n\"Yeah, but... you ever think maybe we could have jobs other than, like, sneaking into boys' rooms and sexually assaulting them while they sleep in order to steal their life essence?\"\n\nDheni and Erota exchanged glances.\n\n\"Not this again,\" Erota sighed. \"I swear. It's almost like you don't want to spend eternity taking advantage of random dudes for our own devious pleasure and sustenance.\"\n\n\"To be fair, I think we do anyone these days,\" Dheni said. \"Not just dudes.\"\n\n\"Wait, really? Since when?\"\n\n\"I dunno. Twenty years ago?\"\n\n\"Huh. Always changing rules. How's a demoness supposed to know what's going on?\" Erota clicked her long tongue thoughtfully. \"That's pretty neat though. I always wondered if it was silly to discriminate like that. You sure they changed the rules?\"\n\n\"It was in class,\" Aztra mumbled.\n\n\"What?\"\n\n\"Dheni's right. We've gone over it in class. Basically anyone's fair game now.\"\n\nAztra's friends both stared at her. She'd been expecting it. Practically knew what they'd say, she just wasn't totally sure which of them would speak first.\n\n\"The fuck you doing paying attention in class?\" Erota asked.\n\nAztra rolled her eyes. \"I mean, every now and then I feel like maybe I should. I don't know why I bother, really.\"\n\n\"Me either,\" Dheni said. \"I mean, there's so many more fun things to be doing.\"\n\n\"Texting,\" Erota supplied helpfully.\n\n\"Cheating.\"\n\n\"Masturbating.\"\n\n\"Sexy daydreaming.\"\n\n\"Sexy daydreaming and masturbating.\"\n\n\"So lots of things,\" Dheni said.\n\n\"Yeah, I know,\" Aztra said. \"Just... you ever think maybe if we paid attention sometimes, school could have been over in like a year or two, instead of decades?'\n\n\"Well... ok, that's kind of a good point,\" Dheni admitted. \"Would have gotten us to our jobs faster. Sweet, sweet balls to drain.\"\n\n\"Or pussies,\" Erota reminded her.\n\n\"Sure.\"\n\n\"Hey, does that mean butt play is on the table too?\"\n\n\"Always has been,\" Aztra said. \"It's just fallen out of favour somewhat 'cause it doesn't leave people feeling guilty and sinful the way it used to. You know they eat each other's butts basically all the time now?\"\n\n\"What!\" Erota said. \"They can't! That's our thing!\"\n\n\"Yeah,\" Dheni said. \"My great-grandma basically invented eating ass.\"\n\n\"Good thing I never listen in class,\" Erota grumbled. \"Probably it'd just piss me off.\"\n\n\"Humans are messed up. Pffuh.\"\n\nThere was a brief, thoughtful pause before Erota spoke again. \"You two wanna skip our next lesson and go do weird butt stuff?\"\n\n\"Fuck yeah I do!\" Dheni said. \"Az?\"\n\n\"Nah, you two go ahead,\" Aztra said. \"I'm gonna go to class, I think.\"\n\n\"Suit yourself, weirdo,\" Dheni said. \"I'll take some pictures and send them to you later.\"\n\nAztra winced. Her phone was already painfully full of sexual exploits. None of them even hers. Nor asked for.\n\n\"Sure,\" she said. \"You do that.\"\n\n****\n\n\"What's up with you today?\" Katrin asked.\n\nAztra blinked and looked up at her sister. She'd been zoned out, she realized.\n\n\"Nothing.\"\n\n\"Well it's definitely something.\"\n\nAztra sighed and nodded. \"Yeah. Field trips to the human world coming up again.\"\n\nKatrin grinned. \"Oh yeah.\" Her smile turned to frowning confusion. \"But those are fun.\"\n\n\"You know they aren't for me.\"\n\nKatrin nodded and sat beside her little sister, putting an arm around her. Katrin, as was the fashion, wore an outfit that was indecent at best. Short shorts and a crop top.\n\nAztra didn't have much choice in outfits, really. Only so many to choose from. She was used to being teased for the relative modesty of her wardrobe though.\n\n\"Hey, just nerves, yeah?\" Katrin said. \"You're still young. You just need some experience.\"\n\n\"I... don't know that that's true. I just think maybe... what if there are other options, you know?\"\n\nKatrin frowned again. \"Like what?\"\n\n\"I don't know. That's part of the problem.\"\n\nKatrin sighed and just kept holding Aztra.\n\nHer sister was the only family Aztra had most of the time. Their parents, being demons and all, weren't the most consistently familial. They usually showed up at least once a decade for some family time, but Katrin was mostly who Aztra had in her life.\n\nWhich was good, really. Katrin didn't understand her any better than anyone else, but she tried, and Aztra could always feel the love.\n\n\"I was nervous too, back in the day,\" Katrin said.\n\n\"I don't believe that.\"\n\n\"It's true. I mean, it didn't last long, don't get me wrong. Once I got a taste for it... I mean damn, Az. The rush you get off of stealing mortal sexual energies, so fucking good. You don't even know.\" Katrin grinned toothily. \"It's even better now. We don't just have to go after boys. Some of these girls out there, fuuuccck they taste good. And don't even get me started on the cute-as-fuck nonbinaries. Unf.\"\n\nAztra, having relaxed in her sister's comforting embrace, tensed up again. \"But I don't want to steal sexual energies!\"\n\n\"Pff. You say that now. But I mean, it's what we're made for.\"\n\n\"Says who?\"\n\n\"I mean... everyone.\"\n\n\"Right.\" Aztra sighed. \"You're right. It is literally everyone, huh.\"\n\n\"Mmhm. Tell you what, why don't we sneak on over to the human world tonight?\"\n\n\"Um...\"\n\n\"Get a head start. No pressure. Just the two of us. You'll have hours to play with. Lots of time.\"\n\n\"I don't think that's the-\"\n\n\"Or hey, you can just study some. You like studying, right?\"\n\nAztra blushed, which on her already reddish skin would hardly show up. \"Kinda.\"\n\n\"Great. So just study. Get some... data or something. Take some notes. Whatever it is you studying types do.\"\n\n\"Gee, so supportive.\"\n\n\"Hey, I'm your sister. I still have to pick on you some.\"\n\n\"I guess.\"\n\n\"But dammit, Az, I love you and I'm gonna help you, whatever it takes.\"\n\nAztra hesitated. \"And if I never want to be a nighttime seductress?\"\n\nKatrin had to consider. \"You know what, yeah. I need you to at least give it a real try, but if you want to do something else... which I don't know what... but yeah. I'll support your choices, ok?\"\n\nAztra smiled and nodded. It wasn't perfect, but she was glad she could still trust Katrin to love her and believe in her, even if she was taking the radical view that maybe she didn't want a career of engaging in consensually questionable sex every night. \n\n****\n\n\"Alright, this is the place.\"\n\nAztra stared up at the tall building in front of them. \"What, here?\"\n\n\"Yep.\"\n\n\"Isn't this one of those places where lots and lots of people live?\"\n\n\"An apartment building. Yeah.\"\n\nAztra frowned. \"So... which one?\"\n\n\"Whichever one you like. You've got a whole selection to choose from.\"\n\n\"But... there's loads of these buildings around. There's another one right behind us.\"\n\n\"Sure. So choose that one then. Up to you.\"\n\n\"Kat, I know you. Why did you choose here?\"\n\nKatrin grinned shamelessly. \"There's this super fun couple on the third floor. I'ma go hang with them while you're doing your thing.\"\n\n\"Ah. Of course. It's always sex.\"\n\n\"Yeah, sis. That'd be our nature.\"\n\nAztra sighed. \"I might hate our nature.\"\n\n\"Sure. Can't blame that one on me, though.\"\n\n\"Watch me.\"\n\nThey stood in silence a moment. A chill breeze drifted past, which wasn't a problem in their not-very-warm outfits the way it might have been for humans, but it was still not the most comfortable.\n\n\"Guess I should get this over with,\" Aztra said.\n\n\"That's the spirit. Just yell if you need backup.\"\n\n\"... will you hear if do?\"\n\n\"Maybe.\"\n\n\"And be able to find me?\"\n\n\"Hey, I'd burn this whole place down if I had to. You know that, right?\"\n\nAztra smiled. Katrin was joking, but also... she probably actually would, if it came to it. Whatever Katrin's faults, she was the best big sis Aztra could have asked for. Minus perhaps a little more understanding of who Aztra was as a demon.\n\nAztra shrugged and started climbing the wall. This part of her schooling had been some of the most fun. Learning to navigate human architecture. There was some actual skill to it, if one didn't rely on tricks or teleporting. Which, to be fair, most of them did sooner or later.\n\nBut flexing her claws, finding purchase, actually doing something with the deceptively strong muscles she possessed, Aztra quite enjoyed these things.\n\nShe scaled fairly quickly, partly because focusing on climbing was a distraction from having to pick a window to slip into at some point. Also just for the sheer joy of the climb.\n\nThen, abruptly, disaster. Or success, maybe, depending on how one looked at it. Aztra had to stop climbing as she came face to face with a human leaning out his window.\n\nThe two of them faced each other. The human was bewildered, as well he might be. Aztra was scared that now she'd have to actually act somehow.\n\n\"Who...\" the boy started hesitantly. Then, \"What...\"\n\n\"Shit,\" said Aztra.\n\n\"Are you real?\"\n\n\"In a manner of speaking, sure. Why aren't you asleep? Humans are supposed to be asleep at this hour.\"\n\nThe boy scratched his head. \"I feel like maybe I am asleep.\"\n\n\"I can assure you, you aren't.\"\n\nAztra looked down. Katrin had vanished from sight already. Off visiting her friends. Whatever room that was. No help to be had there. Aztra wasn't about to start screaming her head off just yet. It would just be embarrassing. Loving sister or not, Katrin would tease her ferociously for panicking at first contact.\n\n\"Can I come in?\" Aztra asked.\n\n\"Oh. Su- wait, no. No I shouldn't invite you in, right? Shit. Or does that matter?\"\n\n\"... do you think I'm a vampire?\"\n\n\"... are you?\"\n\n\"Ugh.\"\n\nAztra pushed the boy's face, giving him a good shove back inside his apartment. She glided lithely in the window in the space she'd made for herself.\n\n\"I mean, what do you even think vampires look like?\" Aztra complained.\n\n\"Well... to be fair, I didn't think they were real.\"\n\n\"That makes it better?\"\n\n\"I dunno. Under the circumstances, the long shot seemed appropriate.\" The boy hesitated. \"You're... not natural.\"\n\n\"The fuck you say?\"\n\nHe cringed back. \"I mean, well, look at you.\"\n\nAztra crossed her arms. \"What about me?\"\n\n\"... you're red. You've got a tail. And... and claws on your fingers. And... yeah, on your toes.\"\n\n\"And that makes me not natural?\"\n\n\"It makes you not human.\"\n\n\"That,\" Aztra said firmly, \"is a different matter entirely. Obviously I'm not human.\"\n\n\"Well... yeah. That's all I was saying.\"\n\nAztra sniffed and padded around the room. His bedroom, it seemed. On the messy side, perhaps. But then she didn't really know how to judge human cleanliness.\n\n\"Do you have a name?\" the boy asked.\n\n\"You first.\"\n\n\"Uh... I don't know if I should say.\"\n\n\"Then why should I?\"\n\n\"I can't use your name against you. Maybe you can-\"\n\nAztra sighed and put a hand to her face. \"What manner of creature are you confusing me with this time?\"\n\n\"... witches maybe? Not totally sure.\"\n\n\"I see. While I'm going to call you... Brittany.\"\n\n\"That's a girl's name.\"\n\n\"Yes. Now we're both being needlessly offensive, aren't we?\"\n\nNot-Brittany sat on his bed. \"Fair enough. I mean, it's very late, and you climbed up a wall like it was nothing to sneak into my room. I'm a little on edge, ok? I'm... sorry.\"\n\nAztra loosened. \"I didn't mean to come here specifically. But... thank you.\"\n\n\"Then why did you come here?\"\n\n\"I dunno. You'd seen me already, I guess.\"\n\n\"Oh.\"\n\n\"I'm just supposed to... you know. Sneak in to someone's room. Do some inappropriate things and sneak away with delicious sexual energies and life essences.\"\n\n\"... like a succubus?\" Not-Brittany asked, cringing slightly even as he hesitantly guessed.\n\n\"Correct.\"\n\n\"Phew. Got it in three. I'm Finan, if you care.\"\n\nAztra nodded. \"Aztra.\"\n\nFinan smiled cautiously. \"You want to sit?\"\n\n\"Sure.\"\n\nAztra selected a wheeled chair opposite Finan. She settled, finding it comfortable enough, but then frowned at the way he was looking at her.\n\n\"You don't have to stare like that,\" she said.\n\n\"Sorry.\" Finan jerked his gaze away. \"Just... your outfit. Quite revealing.\"\n\nAztra crossed her arms again, this time for some coverage. \"Yes. It's a problem. You should see what my friends wear.\"\n\nFinan swallowed and seemed to hold himself back from making a comment. Probably wisest.\n\n\"I don't have that much of a choice, honestly,\" Aztra said. \"Booty shorts and crop tops are actually some of the most sensible options available.\"\n\n\"Really?\"\n\n\"Mmhm.\"\n\n\"Couldn't you just... get some human clothes? They'd fit, right? Except for your tail, maybe. And... wait, do you have wings?\"\n\n\"... do you see wings?\"\n\n\"No. Silly question, huh.\"\n\nAztra sighed. \"No, I'll let you have that one. I'll probably learn to grow them at will some day. I'm young yet for a lot of demon tricks.\"\n\n\"Like, what, twenty? You look about twenty.\"\n\nAztra snorted. \"Twenty? What, do you think I'm a baby? I just turned a hundred and eighty. Hence getting kicked into the adult world soon.\"\n\n\"... you know human life spans are-\"\n\n\"Short. Right. I forgot. In that sense, I guess you're not super far off. Kinda.\"\n\nAztra looked around the room again. It was kind of fascinating in its disorder. So many things she couldn't initially see a purpose to. And so many enticing looking clothes just strewn about that seemed like they'd cover skin way better than anything she owned. Finan might be on to something with his idea for just taking some human stuff.\n\nThen again, the problem was less about acquisition than it was about not being teased for being a prude. Why did so much of her life come down to that?\n\nFinan was awfully fidgety too, Aztra noticed. Maybe that was fair. He had a stranger in his room.\n\n\"So, uh, are you gonna try to have sex with me?\" he asked eventually.\n\nOh right. That.\n\n\"Probably not,\" Aztra said.\n\n\"Oh.\"\n\n\"You're disappointed, aren't you?\" Aztra tried not to sigh in disgust. Always sex.\n\n\"I mean, more confused than anything. I thought you were here for... succubus things. Sex. You know. Life essences.\"\n\n\"Not feeling it.\"\n\n\"Oh. Because... I'm not your type or something?\"\n\n\"Nothing to do with you. Get over yourself. I'm just here 'cause my sister made me. Didn't want to be. She's trying to help, but... grrr. Just wish everyone would stop trying to help. I just don't want to do some stuff. That should be fine, shouldn't it?\" \n\nSurprisingly, Finan nodded immediately. \"Well yeah. Totally. If you don't want to, then don't. Obviously.\"\n\nAztra stared a moment. \"Obviously,\" she repeated faintly.\n\n\"You, uh, want to do something else then? As long as you're here? I wasn't sleeping well anyway, and I can't imagine it'll go any better now.\"\n\nAztra let herself unfurl. Finan was still sneaking peeks at her cleavage, but she didn't mind really. She had fantastic boobs and everything.\n\nHe was fine with not having sex. That was the important thing.\n\n\"What do you want to do?\" Aztra asked.\n\n\"Uh... video games maybe?\"\n\n\"You have those?\"\n\n\"Yeah.\"\n\n\"Neat. They're hard to get where I live.\"\n\n\"Really?\"\n\n\"Yep. Unless they're sexual. Just not a market for much else.\"\n\n\"Oh,\" Finan scratched his head. \"Well... any idea what you'd want to try.\"\n\n\"Nope. Pick me something good for beginners.\"\n\n\"Hm. Well... I mean Mario is a classic. And there's some that are multiplayer now. I'd have to borrow a console from one of my roommates though.\"\n\n\"Will they mind?\"\n\n\"Not at all. Just I have to sneak around the apartment for a minute if you're good here.\"\n\nAztra nodded. \"Sure. I can chill.\"\n\nShe probably had a time limit of sorts. Katrin would come looking for her eventually. But probably not for a while. She'd be busy doing all her fucking and kissing and eating butt and whatever for a while. And even once she was finished, she probably wouldn't mind if Aztra wasn't yet. Probably be proud of her until she realized no sexy times had happened.\n\nAztra continued to snoop about the room while Finan was gone. Once he came back, she watched with interest as he plugged the borrowed console into his tv.\n\n\"It's ready to go?\" she asked.\n\n\"Almost. Here, you take this controller.\"\n\nAztra nodded and took a seat on the floor facing the tv, with her back to Finan's bed. She waited impatiently to see what was going to happen. She'd played games before, but never for very long, and didn't have much general experience.\n\n\"Alright, you can pick a character now,\" Finan said. \"There's Peach, if you want. Or-\"\n\n\"There's a mushroom!\"\n\n\"Yes, To-\"\n\n\"Why is there a mushroom? Ha ha, I'm gonna be him.\"\n\n\"Uh... sure. Valid choice. Now we can start.\"\n\nFinan did his best to explain the game to Aztra. She only heard some of it. The basics of movement came easy enough, but goals beyond that were slightly beyond her initially.\n\n\"Ha! He fell down the hole.\"\n\n\"Well... yes. You have to jump over it.\"\n\n\"Wait wait wait. Ha! He fell down again. What an idiot!\"\n\nFinan tilted his head. \"You know he can only do what you control him to do.\"\n\nAztra sobered up slightly. Toad stayed still on the screen as she reflected.\n\n\"So he's even less in control of his life than I am,\" she mused.\n\n\"That's... one way to look at it.\"\n\n\"Sorry little buddy,\" Aztra said. \"I'll be more careful from now- oh hey fuck! That thing just killed my guy. Why did it kill my guy? Rude!\"\n\n\"You really haven't played many games, have you?\"\n\n\"Well it's rude is all. Hmph.\"\n\n****\n\nAztra lost track of time. At some point she realized she was playing alone, and when she looked over at Finan he was asleep.\n\nKatrin hadn't come for her yet, oddly enough, but it was still probably time to go. Aztra left everything right where it was, including Finan, and clambered back out the window. She scooted her way down to the ground where her sister was waiting.\n\n\"There you are!\" Katrin grinned. \"And you were saying you weren't...\" She stopped and sniffed. \"Wait, you didn't have sex at all, did you? You smell like you didn't.\"",
        "\"Well I told you I didn't want to.\"\n\n\"You did.\" Katrin glanced up the side of the building. \"What were you doing this whole time?\"\n\nAztra shuffled her feet. \"Playing Mario,\" she mumbled.\n\n\"For real?\"\n\n\"Yeah.\"\n\n\"Wow. Ok.\" Katrin turned around.\n\n\"Are you mad?\" Aztra asked.\n\n\"Nah, Az. If that's what you wanted to do... I don't know. I don't understand it, but I can't live your life for you.\"\n\nAztra smiled cautiously, even as Katrin worked on transporting them back to their home. \"I appreciate that.\"\n\n\"Yeah, well, I mean you've been saying it long enough. Just baffles me is all.\"\n\n\"I know. I have that effect.\"\n\n****\n\n\"Wait, so your sister sneaked you into the human world so you could have sex with basically any of them you wanted,\" Erota said slowly.\n\n\"And then you didn't?\" Dheni finished for her.\n\nAztra sighed. She had no idea why she'd thought telling them was a good idea. \"That's the sum of it.\"\n\nHer friends exchanged glances.\n\n\"You're really serious, aren't you?\" Dheni said.\n\n\"I am,\" Aztra confirmed.\n\n\"What are you going to do when we get our field trips soon?\" Erota asked. \"You won't be able to pass the final assignment if you don't have sex with someone.\"\n\nAztra shrugged. \"I haven't known you to pass anything in years.\"\n\nErota nodded proudly. \"Sure. But this is actually important. What if they don't give you your dimensional privileges? Then what?\"\n\n\"I dunno. Steal a pass, I guess? If I need to travel. I might not even need to. Although, this guy I met last night, he might be worth visiting again.\"\n\n\"Cute was he?\" Dheni asked, carelessly filing her extended claws into sharper points.\n\n\"Not really about that,\" Aztra said.\n\n\"Bet he was,\" Erota said, seizing on the moment. \"Bet that's it, huh? You want to get to know someone before you steal all their precious sexy essences?\"\n\n\"That's not-\"\n\n\"Weird, but makes sense,\" Dheni agreed. \"I've kind of always assumed I'll find some human who I like fucking, and I'll kind of keep going back every now and then. Build a real bond.\"\n\nErota raised an eyebrow. \"What, you too?\"\n\n\"Well, between random conquests, of course.\"\n\n\"Naturally.\"\n\n\"I just think it'd be nice not to always have to guess who you're gonna get. Some humans are hotter than others. You can't deny that.\"\n\n\"True.\"\n\n\"And if I found someone with totally dreamy eyes, and who'd let me tie them up and do things to their butt, that seems ideal. I mean, I know I could just tie them up anyway, but it seems like it'd be fun to have one special one to go back to. Maybe that's crazy.\"\n\n\"Nah, I get it.\" Erota sucked her lip thoughtfully. \"You know, I've imagined having a whole harem of cute boys. You think that's possible?\"\n\n\"Don't see why not.\"\n\nAztra sighed and tuned out of the conversation. She felt like she'd almost gotten through a little, but it wasn't a resounding success by any means. Still, at least they were bouncing their horny ideas off of each other, as usual, instead of pestering her about her lack of proclivities.\n\n****\n\nAztra waited a few days before asking, but she felt like it was something she had to do.\n\n\"Hey, Kat?\"\n\n\"Yeah, Az?\"\n\n\"You think there's any chance you could... send me back to that place we went the other night?\"\n\nKatrin looked at Aztra like she could see right through her. Aztra squirmed under her sister's gaze, but was still hopeful.\n\n\"You take a fancy to your boy?\" Katrin asked.\n\n\"It's not even like that. But... kinda, maybe. He was nice.\"\n\n\"Nice is good. Depending on one's mood.\" Katrin shrugged. \"You know it's forbidden.\"\n\nAztra tried to keep the disappointment off her face. \"I know. But you took me the other day. Just thought you might again.\"\n\n\"Oh I totally will. You think a little forbidding's gonna stop me?\"\n\nAztra cracked a smile. \"Not my sister.\"\n\n\"Damn right.\"\n\n****\n\nAztra was all on her own this time. She'd have to send a signal when she wanted Katrin to pull her back.\n\nShe stared up the side of Finan's building and took a deep breath, then extended her claws and started to climb.\n\nShe worried she might not remember exactly which window was the one she wanted, but it worked out ok. She realized she could just peer in as she was crawling past, and she was able to spy Finan in his room, right around where she expected him to be.\n\nAztra tapped on the window. Finan, intent on a book he was reading, glanced up, then smiled when he saw her. He quickly hopped up and moved to the window to let her in.\n\n\"I wasn't sure you'd be back,\" he said.\n\n\"I wasn't either.\"\n\n\"You, uh, didn't get in trouble did you?\"\n\n\"From who? No one knew I was illegally traversing dimensional lines, 'cept Kat and my friends.\" Aztra tilted her head. \"Or did you mean because I went back without having sex with anyone?\"\n\n\"Uh, yeah. The sex thing.\"\n\nAztra shrugged. \"Mixed bag, but generally came out ok.\"\n\n\"Cool. You want anything to drink or anything?\"\n\nAztra had to consider that one. \"You mean alcoholic?\"\n\n\"I didn't. But there's beers if you want.\"\n\n\"No thanks. I like getting drunk with my friends sometimes, but not in the mood right now.\"\n\n\"Yeah, no, like it can be something else.\"\n\n\"Like what?\"\n\n\"Um... water? Tea? Coffee? Chocolate milk? Jui-\"\n\n\"Wait... chocolate milk?\"\n\nFinan nodded warily. \"Yeah.\"\n\n\"That's a real thing? I always thought it was a joke. Like platypuses.\"\n\nFinan gave Aztra an odd look. \"We'll circle back on that one. But yeah, chocolate milk is a real thing. It's good.\"\n\n\"... can I try some?\"\n\n\"Absolutely.\"\n\n\"It doesn't come from tits, right?\"\n\n\"No. We don't drink milk from ti- well, babies do. And there are some kinks that... no, I'm getting off track here. Chocolate milk is regular milk-from cows, not tits-that gets mixed with chocolate somehow.\"\n\n\"Neat.\"\n\n****\n\n\"This is so fucking goooddd!\"\n\nFinan smiled ruefully. \"Yes. So you keep saying.\"\n\n\"Well I'm sorry,\" said Aztra, who wasn't. \"You've had this your whole life. I never knew it existed for real. I mean... chocolate milk. Who would have thought?\"\n\n\"Uh huh.\"\n\nAztra sipped more of her drink. She was thoroughly enjoying it, holding her cup with both hands and sitting cross-legged on the floor next to Finan's bed.\n\nFinan had gone for Mario on the assumption Aztra was going to join, but she'd deferred for the time being, having her focus on her sweet drink. So instead he'd started playing something else that she'd forgotten the name of already. It was a very, very different game at any rate. Quite violent. Finan's character was cutting down opponents at an alarming rate.\n\nAztra found it oddly fascinating. Even as the novelty of chocolate milk faded ever so slightly, she discovered she didn't really need to play, she was captivated right where she was just watching Finan. Mostly watching his character on screen, but sometimes watching him too. He had a focus to him that was new to her. As unimportant as the game was, just generally, he cared about it in the moment and was clearly good at... whatever it was he was doing.\n\n\"Hey Az?\"\n\n\"Hm?\"\n\n\"Don't you get cold? Like, you didn't wear even a jacket or anything either time you've come in.\"\n\nAztra curled up a little tighter. \"I don't really get cold. Not easily.\"\n\n\"Oh.\"\n\n\"I've been thinking about picking up some new clothes though.\"\n\n\"Yeah?\"\n\n\"Yeah. Kinda. Just... there's only certain things I can really wear without people... staring.\"\n\nFinan looked at Aztra incredulously. \"They don't stare at you now?\"\n\n\"They check me out, sure. That's different. If I wore clothes they couldn't check me out in... they'd stare. 'Cause... you know. You must have that sort of thing. Like if you wear something crazy.\"\n\nFinan nodded slowly. \"And modest clothing would be... crazy.\"\n\n\"Yes. You get it.\" Aztra shrugged. \"But I think I'd be a lot happier. Maybe at least I could wear it when I visit or whatever, even if I couldn't get away with it at home.\"\n\n\"That sounds so unbelievable to me,\" Finan said. \"But... I think about some of the stuff we do to fit in. Some of the fashion stuff and culture stuff. Maybe not so unbelievable.\"\n\nAztra nodded. \"Everyone has to fit in somehow, somewhere. I just don't really where I'm from.\"\n\n\"You could be from somewhere else.\"\n\nAztra smiled crookedly at Finan. \"Yeah. I just have a feeling I wouldn't necessarily fit in around here any better.\"\n\nFinan flushed rather adorably. \"Sorry, yeah. Maybe not.\"\n\n\"I appreciate that you don't seem to care, at least.\"\n\n\"... if I'm being honest, I like the way you look.\"\n\n\"Yeah. I know.\"\n\n\"Sorry.\"\n\n\"It's fine.\"\n\n\"Nah. You want to get away from that stuff, right? At least for a while.\"\n\nFinan paused his game. He went to the closet in the room, rummaging while Aztra watched curiously. He came back out with a hoodie.\n\n\"What's that?\" Aztra asked.\n\n\"A hoodie. It's-\"\n\n\"I know what it is. I mean... why are you showing it to me?\"\n\n\"I though... if you want... you want to try it on?\"\n\nAztra tilted her head. \"Really?\"\n\n\"Why not?\"\n\n\"Sure. Ok, yeah.\"\n\nAztra accepted the offer and pulled the sweater over her head. It was big on her and came down to her upper thighs. Her top half was covered completely, excepting her head. And when she pulled the hood up, even that was nearly hidden too.\n\n\"How's that feel?\" Finan asked.\n\nAztra slowly broke out into a beaming smile. \"Pretty fuckin' great.\"\n\n\"Yeah?\"\n\n\"Yeah. It's so... cozy.\"\n\n\"Hoodies are good for that.\"\n\n\"I should get one just like this.\"\n\n\"You can keep that one, if you want.\"\n\nAztra continued beaming. \"Ok. Thanks! You're not gonna mind not being able to check me out?\"\n\nFinan flushed again. \"I said I was sorry.\"\n\n\"Hey, no. I shouldn't tease. This is really nice. Thank you.\"\n\nImpulsively, Aztra hugged Finan. He didn't know what to do with it at first, but then he hugged her back. Maybe he was still appreciating her body. Maybe. But if he was, at least the hoodie shielded her from catching it. Aztra could already feel herself getting used to this.\n\nAztra snuggled back down in her seat, leaning against Finan's bed. She fussed with her new hoodie a bit, finding the optimal ways to sit to feel as cozy as possible in it.\n\nShe and Finan played some Mario together too before she went home. Aztra was feeling good enough by then she forgot to worry about wearing her hoodie home.\n\n****\n\n\"Az, what the hell are you wearing?\"\n\nAztra looked down at herself. \"It's a hoodie.\"\n\nKatrin gave her a look. \"I know what it is. I want to know why you're wearing it.\"\n\n\"It's cozy.\"\n\n\"You know no one can even see your boobs in that thing? Probably can't even see your ass either.\"\n\n\"Yeah,\" Aztra said defensively. \"Maybe I don't always want people to.\"\n\nKatrin sighed. \"You know I'm trying to understand.\"\n\nAztra nodded, softening a little. \"I know. I'm sorry I'm not sluttier.\"\n\n\"It's ok. You're still my sister. Just... I need a hot minute with this, ok?\"\n\n\"I'm not gonna wear it to school or anything.\"\n\nKatrin snorted. \"No kidding. You'd be torn apart. Kids can be cruel.\"\n\n\"Don't I know it.\" Aztra bit her lip. \"I'm probably gonna want to wear it around the house and stuff.\"\n\n\"Yeah, I know.\" Katrin pulled Aztra in for a hug. \"I may not understand you, but I love you, ok?\"\n\nAztra hugged her back fiercely. \"Love you too, Kat. You're the best sister.\"\n\n\"You're still going to see that boy again?\"\n\n\"Ideally, yes.\"\n\n\"Could you at least lie and tell me you molested him some this time?\"\n\n\"... I could say I neither confirm nor deny it.\"\n\nKatrin sighed. \"Probably as good as I'm getting. Alright, get inside. You've got school tomorrow.\"\n\nAztra giggled. \"You know, encouraging my schooling is probably where you went wrong with me.\"\n\n\"That's not funny.\"\n\n\"It is a little.\"\n\n****\n\n\"So I have something to ask you,\" Finan said.\n\nAztra nodded absently without taking her eyes off the tv. Finan had introduced her to Mario Odyssey, and was letting her play by herself. She was having an amazing time with it so far.\n\n\"What's that?\" she asked.\n\n\"So... how would you feel about meeting my roommates?\"\n\nAztra hesitated and paused her game. She turned to look at Finan. \"Why?\"\n\n\"Well, I live with them.\"\n\n\"Yeah, but they don't need to know.\"\n\n\"Hey, it's ok,\" Finan assured her. \"You don't have to. I was only asking. It's just... they've noticed I've had a girl in here. They're gonna keep asking questions. I tried to tell them she wasn't, like, a secret girlfriend or anything. I think that just made them more curious. They think I'm hiding you.\"\n\n\"Well they're not wrong,\" Aztra pointed out.\n\n\"I'm not hiding you. I'm just... I mean you come in through the window. That's just what you do.\"\n\nAztra nodded and started playing again. She was quiet for a long moment as she pondered.\n\n\"You think it'd be ok?\" she finally asked.\n\n\"Don't see why not. They're cool. I wouldn't live with them if they weren't.\"\n\n\"And you won't leave me alone with them?\"\n\n\"No reason to. This is where I live.\"\n\nAztra thought some more, even though she'd already basically made up her mind.\n\n\"Ah well, what's the worst that could happen?\"\n\n\"... I mean, I'd rather not think of it that way. But sure.\"\n\n****\n\n\"You've been spending a lot of time with that boy,\" Dheni said.\n\nAztra looked at her friend appraisingly. \"So?\"\n\n\"Just sayin'. You sure you're not banging?\"\n\n\"Yeah. Pretty sure I'd know it if we were.\"\n\n\"It's just, like, what do you do?\" Erota asked.\n\nAztra could tell there was genuine confusion there. \"Well... we hang out. Play video games. I've been checking out some of his books. Most of them aren't even dirty.\"\n\n\"Then what's the point?\"\n\nAztra ignored Erota's follow up question. \"I'm gonna meet his friends apparently.\"\n\nDheni and Erota exchanged glances.\n\n\"Az, you know you're doing this all backward,\" Dheni said with evident concern. \"You're supposed to have sex and not let things get serious. Not let things get serious and not have sex.\"\n\n\"I don't want sex,\" Aztra said. \"And things are not serious.\"\n\n\"You're meeting his friends,\" Erota pointed out.\n\n\"So? That's just... friend stuff. Meeting other friends.\"\n\n\"Is it?\"\n\n\"... I think so.\"\n\n\"He's not your boyfriend, is he?\" Dheni asked.\n\n\"No. Of course not. I said we haven't had sex.\"\n\n\"That's true. You did say that,\" Erota said.\n\n\"Can you two please just drop it?\" Aztra asked. \"Everything is fine. You don't need to worry.\"\n\n\"If you say so,\" Dheni said. She contemplated a moment. \"You think you're ever gonna introduce us to this boy of yours?\"\n\nAztra rolled her eyes. \"Would you try to get into bed with him the first chance you saw?\"\n\n\"... not the first chance. Probably.\"\n\n\"That's what I thought. Gonna have to pass for now.\"\n\n\"Aw.\"\n\nErota shrugged and stretched. \"Whatever. You guys wanna go set something on fire behind the school?\"\n\nDheni glanced at Aztra. Aztra in turn nodded, happy to have something different to talk about.\n\n\"Sure. I could go for some light arson.\"\n\n\"Me too,\" Dheni echoed.\n\nThe girls all hopped up and went to find something flammable. It seemed to Aztra like they didn't do enough silly fun things anymore. Like some innocence had been lost as they grew up and her friends started only thinking about sex all the time.\n\nSure, pyromania was a bit childish, but it was something they could all enjoy together. And really, it wasn't any fun having to grow up and leave all your favourite things behind.\n\n****\n\n\"You don't need to be nervous,\" Finan said.\n\n\"Who says I'm nervous?\" Aztra said distractedly.\n\n\"Well... you won't stop fidgeting, and you've been plucking at that loose thread on your hoodie for the past five minutes.\"\n\n\"I can't get it to come out!\"\n\n\"Just relax. My friends are cool. I promise.\"\n\n\"Yeah. Yeah ok. So we gotta go out and meet them?\"\n\n\"That's the idea.\"\n\n\"Ok. You first.\"\n\nFinan shrugged and led the way out of his room. Aztra cowered cautiously behind him, keeping a step behind and making sure she could easily duck out sight.\n\nShe honestly wasn't even sure what had her so worried. She wasn't usually timid. Unsure of herself in some ways, sure, but not scared of meeting people.\n\nThis felt different somehow. Like the stakes were higher. And Aztra didn't really know why, other than she liked Finan and didn't want any additional pressure on them.\n\nThe three people waiting for them were... not scary. As rationally expected. They were just kind of chilling, talking, one of the girls on her phone, though she put it away when Finan and Aztra joined them.\n\n\"Az, this is Kade, Mel, and Jen. Mel doesn't technically live here, but she spends enough nights with Kade these days that she really should be paying rent too.\"\n\n\"Oh whatever,\" Mel said. \"I bring class to this place and you know it.\"\n\nThere was evident gentle teasing from both Finan and Mel. Everyone's attention was firmly on Aztra, though, despite any banter between them.\n\nAztra stepped out, forgoing her shelter, and gave a small wave to the room. \"Hi.\"\n\n\"You're the mysterious Aztra, huh?\" Kade said. \"I genuinely thought Finan had lost it at first. Making up stories.\"\n\n\"Well I wasn't,\" Finan said.\n\n\"Yeah, no, I get that.\"\n\nJen urged Aztra over to sit with her. Aztra went along with it, though kept herself tensed up for the moment, not quite ready to let her guard down. She would have been happier if everyone wasn't staring quite so hard. She was used to stares, but in this case it didn't seem to be all about tits and ass, which she had altogether too much experience with and could tune out most of the time.\n\n\"Are you... an actual demon?\" Jen asked.\n\n\"Is it not obvious?\"\n\n\"It is, I guess. Just... I didn't think you were real.\"\n\n\"Very real, thanks.\"\n\nJen blushed. \"Sorry. Don't mean to be rude. I'm just fascinated.\"\n\n\"It's fine.\"\n\nIt took some time for Aztra to unwind herself. It helped that the conversation slowly flowed more and more naturally, and gazes began to only drift toward Aztra occasionally rather being a constant target. She was still somewhat alone and different, but not totally separate from the group.\n\nMel came over to join Aztra and Jen. Aztra gave a frantic glance over toward Finan, but he was still in the room, just engaged deep in some discussion with Kade. As long as he was there if she needed her, was all. She felt just a tad outnumbered with Mel and Jen flanking her.\n\n\"So what's the deal with you and Finan?\" Mel asked.\n\nAztra stared back blankly. \"What do you mean?\"\n\n\"I mean, like, how'd you meet? How long have you been together? I'd ask why he took so long to tell any of us about you, but that one's kind of obvious. I wouldn't know how to tell someone about my magical demon lover either.\"\n\nAztra sat back some. She curled her legs up and felt her hands retreating into her sleeves, seeking emotional protection where she could.\n\n\"We aren't... lovers,\" Aztra said. \"I don't know why you'd even think that.\"\n\nMel blinked. \"Oh. Sorry. Just... you've been holed up in his room by yourselves lots, right? And you're wearing his hoodie.\"\n\n\"So?\"\n\n\"... and aren't you a succubus? Wouldn't you... oh, no, you guys would just have sex anyway, huh. Wouldn't be about relationships and-\"\n\n\"Jesus, Mel, would you stop?\" Jen interrupted.\n\n\"What?\"\n\n\"You're being rude.\"\n\n\"I'm not.\"\n\n\"Yeah. You are. Aztra clearly isn't enjoying this conversation.\"\n\n\"I'm not,\" Aztra mumbled in agreement.\n\n\"Sorry,\" Mel said. \"Just... I don't know. I'm curious.\"\n\n\"Yeah, well, what if everyone who met you immediately started asking about when you're having kids?\" Jen asked. \"And how you enjoy spending all your time in the kitchen because you're a girl so you must looovvveee doing nothing but domestic shit?\"\n\nAztra was a little scared by Jen's rant, but in a way she could much better handle. There was a ferocity there, but also support and a certain understanding. Physically scary was way, way better than emotionally scary.",
        "Mel shook her head and took a deep breath. She pushed her hair back behind her ear as she bought herself a moment. \"Shit, yeah, you're right, Jen. Fuck. Sorry, Az. Really. That wasn't... that's not how I should have handled that.\"\n\n\"It's fine,\" Aztra said. \"But... I don't want to talk about that stuff, if that's ok.\"\n\n\"Sure,\" Jen said. \"We'll behave ourselves,\" she said, staring meaningfully at Mel as she spoke. \"Finan mentioned you like video games?\"\n\nAztra nodded and let herself smile cautiously. \"I really like Mario. He let me play that a lot. But I've been trying out some other games too. They're really fun. I never really got to play many at home.\"\n\n\"That's weak. 'Cause of your parents? Or just, like, something else?\"\n\nAztra flinched slightly at the mention of parents. She didn't much mind not really having any in her life. She had Katrin. That was enough. But it was another case of feeling like she didn't want to talk about it. Another way she might feel like an outsider.\n\n\"Kind of cultural, I guess,\" Aztra said evasively. \"Like... I knew some people who played. Got their own consoles even. But it was more of a rebellion thing, I think. Like... there's just not that much interest most of the time.\"\n\n\"Well shit,\" Mel said. \"I mean, I only play rarely. Not my thing usually. But... I mean we could all play together sometimes, if you want. I think that could be fun.\"\n\n\"Yeah, definitely,\" Jen agreed. \"If you want.\"\n\nAztra let herself uncurl a little more. \"That could be fun,\" she said cautiously. \"I definitely want to try more sometime.\"\n\nJen beamed. \"Great. Let's do it.\"\n\n****\n\n\"I don't like these new friends of yours,\" Erota said.\n\nAztra frowned at her. \"Why?\"\n\n\"I mean... they're a bad influence. Just look at you. Always wearing that... sweater. And playing those video games. Not even any sex in them. I've been watching.\"\n\nAztra stuck her tongue out and curled up tighter in the corner of Erota's bed. Dheni was lying on her back, head over the side, casually watching porn on Erota's tv.\n\nThe three of them had just been chilling, as they so often did, except that this time Aztra had a handheld game that Jen had lent her. Erota had been distrustful of it right off the bat.\n\n\"That's just Az,\" Dheni said, not looking away from her porn. \"Why you getting in her grill over this all of a sudden?\"\n\n\"I'm not,\" Erota insisted. \"Just... she might have fallen in with the wrong kind of crowd.\"\n\n\"Pff, what are you, a human grandmother in disguise? Wrong crowd. Really.\"\n\n\"Well just...\" Erota balled her fists up. \"You're spending so much time with them,\" she said to Aztra. \"Just like a lot.\"\n\nAztra relaxed some. \"Oh. Is that it? You know you're still my girls, right? I just... I want to hang out with them sometimes. They understand parts of me that other people never have.\"\n\n\"Well I try!\" Erota said. \"But... but you're gonna like them more.\"\n\n\"I'm so not.\"\n\nAztra tackle-hugged Erota, who in turn laughed and fought back in a way that was intended to get pleasantly inappropriate. Aztra had plenty of experience deflecting her friends' casual groping though.\n\n\"I love you both,\" Aztra said, rolling Dheni into the cuddle. \"That's not changing.\"\n\n\"Better not,\" Erota grumbled.\n\nAztra let her get a butt-squeeze in just to make her feel better, then forcibly disengaged.\n\n\"Kinda true, though,\" Dheni said, her attention finally ripped away from the sweaty action she'd been watching. \"If these new people have all these interests in common, and we don't...\"\n\n\"Just sex,\" Aztra said. \"That's the only one I don't really have.\"\n\n\"That's the best one!\"\n\n\"Uh huh.\"\n\n\"Friends have broken up over less,\" Dheni said.\n\nAztra rolled her eyes. \"My fuck, you two. So needy today. Listen, what if I just bring you to meet them, huh? Maybe you could try some of my new interests. It could be good for all of us.\"\n\nErota wrinkled her nose. \"Like... hobbies other that wanton, irresponsible sex?\"\n\n\"Sounds weird,\" Dheni said.\n\n\"Difficult.\"\n\n\"Unpleasant.\"\n\n\"Unnatural.\"\n\n\"Questionable.\"\n\n\"Possibly dangerous.\"\n\n\"Are you in or not?\" Aztra interrupted.\n\nErota and Dheni looked at each other then, nodded at the same time.\n\n\"Sure.\"\n\n\"Why not?\"\n\n\"Sounds like fun.\"\n\n****\n\nIntroducing her friends to each other was a bit awkward at first. Which didn't exactly come as a surprise to Aztra.\n\nIt did make her question some decisions, but she still felt like it had to be done. She didn't want to lose Dheni and Erota. They were her besties since forever. And maybe she thought this would help them understand.\n\nHowever, what mostly happened at first was Aztra's human friends all stared at the sudden bounties of lithe sensuality presented to them. Dheni and Erota reveled in the attention and got busy flirting right from the get go.\n\n\"I thought I asked you to dress a little more modestly than usual,\" Aztra mumbled to Dheni.\n\n\"Mmhm,\" Dheni said. \"My bits are covered, aren't they?\"\n\n\"I mean... technically.\"\n\n\"There you go then. Got panties on and everything. Wanna see?\"\n\n\"Dheni, everyone's seen by now.\"\n\nDheni beamed. \"They have, haven't they?\"\n\nErota was even less help, squeezing herself between Kade and Mel and encouraging Kade's wandering eyes at every opportunity. Aztra anticipated disaster, which was somehow averted by Mel, who actually was the first to cop a feel. Erota was as surprised as Aztra, but quickly shifted gears and shamelessly flirted back with Mel just as hard as she'd been seducing Kade a moment ago.\n\n\"You're brave,\" Jen murmured, sneaking up next to Aztra.\n\n\"Stupid, more like,\" Aztra sighed.\n\n\"I wouldn't say that. Although... maybe.\"\n\n\"I think it had to be done. Dheni and Erota were getting jealous.\"\n\nJen lifted an eyebrow. \"The way they came in here... I wouldn't have thought they could get jealous.\"\n\n\"Emotionally, not sexually. I don't think they have sexual shame at all.\" She frowned. \"Most of us probably don't, for that matter.\"\n\n\"Oh sure.\"\n\n\"Emotionally?\" Aztra shrugged. \"I don't think we ever get taught how to handle any of that particularly well.\"\n\nJen snorted. \"Not sure anyone does.\"\n\n\"Maybe. But you guys seem to at least understand it some. I've learned a bunch just from watching you. And your tv shows.\"\n\n\"Haha, not the best teachers, maybe, but I get what you're saying.\"\n\nAztra and Jen just watched the social carnage for a moment.\n\n\"You think this is all gonna blow up in my face?\" Aztra asked.\n\n\"I mean... maybe.\"\n\n\"Oh.\"\n\n\"Probably not,\" Jen amended hastily.\n\nAztra sighed. \"But definitely maybe.\"\n\n\"... yeah.\"\n\n****\n\nErota ended up disappearing with Kade and Mel at some point. They were surprisingly sneaky about it, and Aztra didn't notice at first. Once she realized all three of them were nowhere to be seen, she was quick to realize what had happened.\n\nAnd that was fine. If that's what they all wanted, who was she to judge.\n\nSomewhat less fine was Dheni slipping over next Aztra.\n\n\"Hey, so, your boyfriend...\" Dheni said.\n\n\"Not my boyfriend,\" Aztra mumbled.\n\nShe knew precisely who Dheni meant. Particularly since Dheni had been getting awfully flirtatious with Finan, who in turn didn't seem to know what to do with the overtly sexual demon girl, but seemed to be enjoying the attention.\n\n\"Right. Cool. So... is it ok if I bang him then?\"\n\nAztra felt a surge of something she didn't understand. Something almost physically painful inside her.\n\nHer initial urge was to say no, of course it wasn't ok. But why, though? She didn't want sex. Why should she care what her friends did together? She never had before.\n\n\"It's fine,\" Aztra mumbled.\n\nDheni cocked her head while bouncing anxiously on the balls of her feet. \"Yeah? You kinda sound like it isn't, though. Are you-\"\n\n\"Yes. It's fine. Whatever.\"\n\nDheni opened her mouth again, the shrugged and scooted away.\n\nAztra sighed heavily and stalked off to the kitchen. She needed something laden with sugar, for reasons she still didn't understand.\n\nJen was hiding out there already, as it happened. She watched Aztra cautiously as she approached.\n\n\"What happened?\"\n\nAztra shook her head. \"Nothing.\"\n\n\"Your tail's twitching awfully hard for it to be nothing.\"\n\nAztra tried to clamp down on her various body parts as she made her way to the fridge. \"Maybe this really was a mistake.\"\n\n\"Mmm. It's... a lot. I mean your friends seem nice though.\"\n\n\"They are. Sort of. Just... urgh. Why's it still always about sex?\"\n\n\"Oh. Erota and Kade and Mel? Yeah, that's... I mean whatever, it's their relationship.\"\n\n\"Right. Them too.\"\n\nJen's eyebrow went up. \"Who else?\"\n\n\"No one.\"\n\n\"Az, who else?\"\n\nAztra slammed the fridge door closed again. She didn't even know what she wanted anyway. \"Dheni wants to bang Finan. But whatever, right?\"\n\n\"Oh, Az...\"\n\n\"What?\"\n\n\"I'm sorry.\"\n\n\"Why?\"\n\n\"Why? 'Cause you like him.\"\n\n\"Sure. But not that way.\"\n\n\"You sure about that?\"\n\n\"I don't want to fuck him, ok?\" Aztra said, stomping her foot for emphasis. \"I know that.\"\n\n\"You can like someone without wanting to fuck them. It's not a requirement.\"\n\n\"As friends. I know.\"\n\nJen shook her head. \"No, like, more than that.\"\n\nAztra's brow wrinkled. \"I don't get it. What else is there?\"\n\n\"Relationships don't need to be sex based. That's all I'm saying.\"\n\nAztra squirmed uncomfortably. \"But... that's what relationships are, isn't it? Like when people mostly want to fuck one person? I don't want that.\"\n\n\"Oh, Az. I mean, yeah, some people think that way. But that's not really the main thing.\"\n\n\"Then... I don't get it.\"\n\n\"Maybe we should go sit somewhere. I'll try to explain it.\"\n\n\"Ok. I need chocolate milk for this first, I think.\"\n\nJen cracked a smile. \"You know what we could do, actually?\"\n\n\"What?\"\n\n\"Ever had hot chocolate? With Bailey's in it?\"\n\n\"... no?\"\n\n\"You're gonna like this.\"\n\n****\n\n\"Fuuuccck this is good!\" Aztra said.\n\nJen smiled over her mug. The two of them were barricaded in Jen's room for the sense of privacy and coziness.\n\n\"Thought you might like it,\" Jen said. \"Not too hot?\"\n\n\"No way. Hot is good.\"\n\n\"Mmhm.\"\n\nJen was still waiting for her drink to cool. Humans had more sensitive mouths, Aztra had realized.\n\n\"I gotta remember about this,\" Aztra said, taking another long sip of creamy, chocolaty goodness.\n\n\"For sure. So, like, Finan...\"\n\nAztra balled up tighter and tried to keep her focus on her drink. She curled her hands around the hot mug, deriving comfort from it. Her tail wrapped itself around her waist. \"Yeah?\"\n\n\"You know it's ok to like someone more than a friend, but not want to sleep with them, right?\"\n\n\"That's the part I don't understand.\"\n\n\"Why not?\"\n\n\"Well like... how can you be more than friends without sleeping together?\"\n\nJen stared at Aztra, then slowly and patiently answered. \"You just don't fuck. It's pretty simple.\"\n\n\"So then you're just friends.\"\n\n\"You... ugh, you don't have to be.\" Jen rubbed her forehead.\n\nAztra's tail twitched anxiously. She tried sipping more of her drink, but it wasn't sufficiently comforting.\n\n\"I don't think I like this conversation,\" Aztra said.\n\n\"I'm not explaining it well enough. I know.\"\n\nAztra shrugged. \"Maybe it's just not something I'd understand.\"\n\n\"I don't think that's true. Just, like...\" Jen took a deep, calming breath. \"Let's try something different. What do you want with Finan?\"\n\n\"Want with him?\"\n\n\"Like picture the two of you, right? Don't worry about anyone else. What do you picture?\"\n\nAztra cupped her mug in her hands and held it closer to her face. She felt oddly embarrassed at the question, and her mind's reaction to it.\n\n\"I dunno. Playing games together, I guess.\"\n\n\"And?\"\n\n\"And... I dunno. Laughing. Having fun.\"\n\n\"Aaannnd?\"\n\nAztra curled tighter again and had to consciously relax her tail. \"Nothin'.\"\n\n\"Not nothin'. Somethin'. What?\"\n\n\"... it's embarrassing.\"\n\n\"So? Who cares. I'm not gonna tell.\"\n\n\"Even Finan?\"\n\n\"Especially him. This is for you.\"\n\nAztra took a deep breath. \"Maybe... maybe I want him to look at me more.\"\n\n\"Look at you?\"\n\n\"You know. Like sometimes he has this look when he thinks no one's watching. I kinda like it. Or like... I like being close. We don't get that close mostly. I don't want him to start thinking about sex or anything. I mean, it'll probably happen sooner or later. I know how that goes.\"\n\n\"Nevermind what might happen,\" Jen insisted. \"Keep going. Focus on what you want.\"\n\nAztra was quiet a long moment, deep in thought and squirming about how much she wanted to share. \"I want to share hoodies with him,\" she finally said.\n\n\"Yeah, you do wear that one he gave you a lot.\"\n\n\"I maybe want to, like, just be close. Watching movies or something. Or when he teaches me a game. If we could just sit all close and stuff. And I didn't have to worry about it...\"\n\n\"Holding hands sometimes?\" Jen asked.\n\n\"... maybe that too.\"\n\n\"Going out doing stuff together? Coming home to each other? Telling each other about your day?\"\n\n\"Yeah.\"\n\nJen shrugged. \"So maybe you wanna be his girlfriend.\"\n\n\"I-\"\n\n\"Or friends. Maybe just friends is all. But, like, you don't need to limit it. Just think about it.\"\n\nAztra rubbed her mug with her fingertip and accidentally took a chip out of it with her nail. She frowned at the now marred cup, then took another drink from it anyway.\n\n\"Would he even be interested though?\" she mumbled unhappily.\n\n\"Finan really likes you. That's pretty obvious.\"\n\n\"But he likes sex too, doesn't he?\"\n\n\"I mean... I assume. I'll admit we've never really talked about it. But he is kind of a regular horny boy in some respects, yeah.\"\n\nAztra nodded gloomily. \"So even if I was into him-\"\n\n\"Which you are.\"\n\n\"Fine. Yes. Which I am. Even then... and even if he is too... it wouldn't really work, would it?\"\n\nJen shrugged. \"I don't know. Ask him.\"\n\n\"What if he says no?\"\n\n\"Then at least you tried.\"\n\n\"What if he says no and then doesn't want to hang out anymore?\"\n\nJen threw her hands up helplessly. \"I don't know. I want to say that wouldn't happen, but I've seen stuff like that definitely happen before. So... I just don't know. Az, I'll I'm saying is I don't want you to be miserable and making self-destructive decisions over this. We both know what you want, and I don't know if it's in the cards, but whatever you do you have to at least acknowledge what you're feeling, ok?\"\n\n\"I-\"\n\n\"You've got friends here. Especially Finan. I really can't believe he'd stop liking you even if... if things get a bit awkward for a while.\"\n\n\"Yeah. Yeah you're probably right.\"\n\nAztra finished the last of her drink. Jen gave a small, cautious grin.\n\n\"You want another drink?\" Jen asked.\n\n\"Kinda, yeah.\"\n\n\"Heavier on the Bailey's?\"\n\n\"... yes please.\"\n\n\"Good choice.\"\n\nAztra nodded absently. \"Or... is there somewhere we can buy more booze nearby?\"\n\n\"Ooh. That kinda mood, huh?\"\n\n\"I think so. I don't drink a lot, but I feel like maybe...\"\n\n\"Yeah, I hear you. Officially, I advise against drinking to solve problems, but-\"\n\n\"Not to solve. Just to... make them less important for a bit.\"\n\n\"Yeah yeah. Right. Either way, unofficially... I'm just gonna get my jacket.\"\n\n****\n\nAztra and Jen got stupid giggly by themselves in the living room. They didn't really talk about Finan any more than they already had. Mostly they played some video games, generally quite badly, or watched some tv.\n\n\"I think Mario Kart's more fun when neither of us is any good at it,\" Jen said.\n\n\"Speak for yourself. I'm twice as good as you.\"\n\n\"I'm last, you're second last. That's not-\"\n\n\"Twice as good! That's what I said.\"\n\n\"Pfff, ok, whatever.\"\n\nJen set her controller aside and took another drink. Aztra concentrated hard and finished the current race, but for the next one they both just forgot about the game and watched the AI opponents zoom past them while sipping more alcohol.\n\nErota came slinking out at some point and joined them. \"Ooh, getting drunk, Az?\"\n\n\"Maaayyybe,\" Aztra giggled.\n\n\"Neat. She doesn't do this with us much,\" Erota whispered to Jen.\n\n\"I do it when I want,\" Aztra said with drunk finality.\n\nErota swiped a drink and worked on catching up.\n\n\"How're Kade and Mel?\" Jen asked.\n\n\"Oh, they're fine,\" Erota said with a wide grin. \"Sleeping now. I wore them out, I think.\"\n\n\"Hehe. I can't believe they fucked you.\"\n\n\"Why not?\" Erota said. \"I'm very fuckable.\"\n\n\"Of course you are,\" Jen agreed easily. \"Just... they don't really do that kind of thing. With other people.\"\n\n\"I'm very, very fuckable.\"\n\nJen snorted and laughed some more. \"You're very sure of yourself.\"\n\n\"Well it's true. Az, tell her how hot and good at sex I am!\"\n\nAztra laughed too. She and Jen were feeding off each other in their mutual drunkenness, and Erota's minor crisis of sexuality just seemed hilarious for some reason.\n\n\"You are both those things,\" Aztra finally managed with a more or less straight face. \"All the reviews I've heard have been quite positive.\"\n\n\"Yeah,\" Erota said. \"Exactly.\"\n\n\"Well maybe I'll find out some time,\" Jen teased.\n\n\"Really? You want to-\"\n\nJen devolved into another giggling fit.\n\n\"I wouldn't listen to anything she says right now,\" Aztra said. \"She's drunk.\"\n\n\"I see that. But still, though.\"\n\nAztra waggled a finger. \"No taking drunk friends to bed. That's... cheating... or something.\"\n\nErota nodded reluctantly. \"That's fair. More fun when it's a proper seduction anyway.\"\n\n\"Mmhm. I'm sure it is.\"\n\nDheni came out shortly after and settled easily next to Erota, the two of them sharing Erota's drink as naturally as if they did it all the time.\n\nAztra frowned at Dheni, trying to concentrate for a moment in her slightly whirly mind. She looked over toward Finan's door, but there was no sign of him.\n\n\"Where's Finan?\" she asked.\n\nDheni handed Erota's drink back to her. \"In bed still, I think.\"\n\n\"Asleep?\"\n\n\"No. He just... got really quiet afterward. Didn't really want to talk or cuddle or anything.\" Dheni shrugged uncomfortably. \"I get wanting to hit 'em and quit 'em-\"\n\n\"You know it,\" Erota agreed, fist bumping Dheni without either of them even looking. \"The old fuck and forget.\"\n\n\"But that didn't even seem like what it was,\" Dheni said, an edge of frustration creeping into her voice. \"It was more like... like he wasn't even happy with the sex. I'm really good at sex. You know that.\"\n\nErota patted Dheni on the shoulder. \"We know, babe. Humans are weird about stuff sometimes. You know that.\"\n\n\"Yeah, that's true.\"\n\nDespite her friend's annoyance, or perhaps because of it, Aztra felt a small surge of hope inside her. She was too inebriated to really be taking on what she was contemplating, but she was also drunk enough too feel false confidence.\n\n\"I'ma go talk to him,\" she announced.\n\n\"Do you want-\" Jen started hesitantly.\n\n\"Right now,\" Aztra insisted.\n\n\"Ah. Ok then. Just remember you're drunk!\"\n\nAztra stumbled slightly on standing up, but after that was steady enough to walk in a mostly straight line. \"Only a little drunk,\" she said.\n\n\"More than a litt- oh whatever.\"\n\n****\n\nFinan's room was lit only by a bedside lamp. More than enough light to navigate by, while still affecting a dimmer mood in the room than if the main light had been on.\n\nAztra pattered over to the bed and sat at the foot of it. She sat with her legs folded and her tail in her lap where she could fidget with it.\n\nFinan lay mostly under his covers. He was clearly shirtless. Possibly naked still, given that he'd just finished fucking not too long ago.\n\n\"So how was it?\" Aztra blurted.\n\nNot the question she wanted to ask, but it was too late to do anything about that now. Maybe she should have let herself sober up a little first.\n\n\"Pretty hot,\" Finan said. \"But... weird?\"\n\n\"Ah.\"\n\n\"Yeah.\"\n\n\"Like weird how?\"\n\n\"I don't know exactly. I mean... shit, I don't know, Az. I shouldn't have just done that, I think. With your friend especially.\"",
        "\"I said it was fine,\" Aztra said.\n\n\"I know. That's what Dheni told me too. And, like, I don't know. That weirdly kind of hurt.\"\n\n\"Oh.\"\n\n\"Yeah. It's all weird. Still trying to figure it out.\"\n\nAztra squirmed and let her tail twitch free of her hands. It didn't want to stay confined in such an emotionally tense situation.\n\n\"I didn't want to say it was ok,\" Aztra admitted. \"Just... it felt unfair to say anything else. I don't want to have sex with you.\"\n\n\"I know.\"\n\n\"But I don't really want someone else to have sex with you either.\"\n\nFinan let out an audible sigh of relief. \"Ok, good. Az, I think I really like you.\"\n\n\"Same. I just... I don't know what to do with that. Jen's been trying to explain it to me. But I don't know if she really knows either. She just wants me to... think about things. Mostly.\"\n\n\"You guys were talking?\"\n\n\"And drinking.\"\n\n\"Ah.\"\n\nAztra threw her hands up helplessly. \"It's so confusing! I don't want to stop you having sex. That's not fair. But, like, maybe I really want to cuddle with you or something. Or just like... like... be your girlfriend maybe. Only I know it doesn't work.\"\n\nAztra slumped after her admission. It was all so dejecting again. She'd felt a glimmer of something before. Now, saying it out loud to Finan, it sounded crazy to her again.\n\nFinan sat up. He kept the covers over his lap, but he was definitely without a shirt.\n\n\"You know, I thought about asking you out,\" he said.\n\n\"You did?\"\n\n\"Yeah. I mean I don't know if it even made sense-\"\n\n\"Yeah. That's what I was afraid of too.\"\n\n\"No no. I mean, like, would you be comfortable, like, going out places? It'd be a lot more people, and you're... not human.\"\n\n\"Oh. That.\" Aztra considered. \"What's the worst that could happen?\"\n\n\"Impromptu exorcisms, I expect.\"\n\n\"... could that happen?\"\n\n\"I dunno. Maybe. I've never had a demonic girlfriend before.\"\n\n\"True.\"\n\nAztra went thoughtful again. Finan rubbed his face with his hand.\n\n\"Look, sex with Dheni was... I mean physically it was amazing.\"\n\n\"She knows what she's about,\" Aztra agreed absently.\n\n\"She does. But it's weird because, like, I don't know her. I don't like her. I don't dislike her either. But just... ugh, I don't know. That's what I'm supposed to be into. So society tells me. Casual hookups with hot girls who can blow my mind in bed, and no attachments after. That's supposed to be the dream. But it's all so... nothing. It feels good, but it's like emotionally complicated masturbation more than anything.\" Finan paused. \"Really, really good masturbation though.\"\n\n\"Sounds more like you're on the fence about this than actually rejecting it.\"\n\n\"I mean... maybe? I'm maybe not describing it well. Like, here's the thing. If I never met you, if Dheni had been the one to come into my room randomly some time, and she just kind of like... well if we bonded enough that it wasn't super weird to fuck around some... I dunno. I'd probably just kind of enjoy it for what it was. Maybe. Maybe I'd still feel weird. I definitely don't think I'd be ok with sex straight after she'd broken into my room and she was a total stranger and clearly not human and all.\"\n\n\"People are surprisingly ok with that sort of thing, from what I understand,\" Aztra said with a wan, crooked smile. \"Though convincing people it's a dream is an often used tactic as well. Among some other common ploys.\"\n\n\"Makes sense.\"\n\n\"So... you want to get to know her better?\"\n\nFinan shook his head. \"No. I mean, yes because she's your friend and seems kinda cool overall. But that was not at all the point.\"\n\n\"So what-\"\n\n\"The point was that... that sex isn't everything, you know?\"\n\nAztra smiled ruefully. \"I do know, in point of fact.\"\n\n\"Right. Of course you do.\"\n\n\"But that's 'cause I don't like sex. You do.\"\n\n\"Sure, but I like you too.\"\n\nAztra shrugged. \"So what do we do with that?\"\n\n\"I... don't fully know. And I'm not sure this is the best moment to try and figure it out. For either of us.\"\n\n\"Fair. I should go, maybe. You're very... naked.\"\n\n\"I am. But... maybe you don't go?\"\n\n\"Finan...\"\n\n\"I mean, let me get changed and stuff. But... I don't know. I'll meet you out there, ok? Let's just hang for a bit. Like we always do.\"\n\n\"Ok. Yeah. That sounds good. I might... sit a little possessively close to you out there.\"\n\n\"In case of your friends?\"\n\n\"Mostly. Also just because.\"\n\nFinan nodded. \"Works for me.\"\n\n****\n\nAztra did, indeed, sit close to Finan when he sheepishly came back out to join them.\n\nDheni looked eagerly toward him as he approached, but then pouted as he sat with Aztra. Aztra smirked and settled cozily with him. She was going to be just a little petty about this. That was just her mood at the moment.\n\nDheni was fine anyway. Jen was teaching her and Erota some drinking games with playing cards, and the demon girls were losing badly. But then, they might have just thought it was a good excuse to get drunk, which seemed like a solid option the way the night was going.\n\nReally, Finan didn't mean anything to Dheni. Just an excuse for sex. Aztra could be just as possessive as she wanted, and she probably wouldn't even get a fight. Still, it felt nice claiming him. She felt stupid for not doing it sooner.\n\nThe question still remained whether anything would come of their mutual like. Aztra truly didn't have an answer for that.\n\n****\n\nAztra woke up in the dark. She was disoriented at first. Maybe a little hungover too. She decided she probably should have had some water before bed.\n\nThough to be fair, she didn't seem to have made it to bed. She was on the couch with a blanket over her. She didn't know where the blanket had come from, nor where everyone else had gone. Though upon a moment's reflection, they'd probably just gone to bed like sensible people.\n\nAztra padded through the apartment, letting her dark vision guide her. She drank a glass of water and felt a little better. She also confirmed that she was the only one in the main area of the apartment. If Dheni and Erota were still around, they must have found somewhere to...\n\nHorrified at a sudden, baseless thought, Aztra scurried over to Finan's room. She softly opened the door and peeked in, then breathed a sigh of relief that Finan was alone in there.\n\nPattering closer, Aztra felt a longing to be close. Finan looked so peaceful, all asleep and unaware of the world as he was. Probably she shouldn't disturb that or intrude on his privacy. Any more than she'd already intruded, anyway.\n\nAztra compromised by curling up on the bed next to him. Not under the covers or anything. Just next to him where she'd be close. She'd only stay a minute. Wouldn't make it weird. Just a minute, then back to her couch bed.\n\n****\n\nAztra once again realized she'd fallen asleep without meaning to. The second time in one night. At least Finan was smiling when she cracked her eyes open.\n\n\"Hey,\" he said.\n\n\"Hey.\"\n\n\"You could have had some covers if you were gonna sleep here.\"\n\n\"I didn't mean to. Just kinda happened.\"\n\n\"Uh huh.\"\n\n\"That's not weird, is it?\"\n\n\"I don't think so,\" Finan said. \"It was kind nice to wake up to.\"\n\n\"Oh good.\"\n\n\"I think I want to wake up next to you more.\"\n\nAztra felt a warm flush in her cheeks. \"Oh. Ok.\"\n\n\"I mean... if that's cool.\"\n\n\"I think so. I... need to process some more stuff.\"\n\n\"Fair.\"\n\nAztra hopped out of bed and left the room. Everyone else was already out and seeing about breakfast. Including Dheni and Erota. Aztra cocked her head.\n\n\"Did you two stay here last night?\"\n\nDheni nodded. \"Yep yep. Stayed with Jen.\"\n\n\"Both of you?\"\n\nErota smiled happily. \"Mmhm!\"\n\nJen blushed, but could only shrug at Aztra's inquisitive stare. \"They're really good at sex.\"\n\n\"Thank you,\" Dheni said, beaming proudly.\n\nAztra thought about it a moment, then decided everything was cool. It had initially felt a little weird to her, but there was no particular reason it should. Dheni and Erota would boink basically anyone they felt like. As long as said person wasn't Finan, it was all good.\n\nAztra felt like it might have been the initial sense of surprise she'd experienced more than anything. She hadn't seen Jen going for that kind of thing, let alone the two of them at once. But there was no reason she shouldn't. Everyone else here had by now, barring Aztra herself.\n\nAs Finan stumbled out, Aztra once again formed up close to him. She was perhaps overdoing it, but she continued to feel the need to claim him. Dheni and Erota had both obviously clocked that she'd come out of his room, but neither made any comment about it. Yet.\n\nJen smiled happily for her, at least. She more than anyone knew what was going on there. Aztra felt weirdly good about that. Like it validated her in a way she really needed in the moment.\n\nAdmittedly, once Finan warmed up some, he was even more validating. He didn't quite seem to know what to do at first, which made sense because Aztra didn't either. But they both slowly got more comfortable being closer and engaging in some light touching. The latter being a bit tricky for Aztra to work her head around, since she didn't want to give Finan any sexy ideas.\n\n\"We're gonna take off,\" Dheni eventually said. \"We got school and all. You coming, Az?\"\n\nAztra glanced at Finan. \"I-\"\n\n\"I actually have to get to work,\" Finan said regretfully.\n\n\"Oh, right,\" Aztra said. \"Maybe I'll, uh, go home then. Come back this evening?\"\n\nFinan's eager smile just about made Aztra melt. \"I'll see you later then.\"\n\n\"Cool.\"\n\n****\n\n\"Did you even go to school today?\" Katrin asked.\n\nAztra, lying upside down on the couch and staring absently at nothing, shook her head. \"Nope.\"\n\n\"That's not like you.\"\n\n\"What can I say. I was thinking about boys.\"\n\nKatrin sat down next to Aztra, not yet discarding her 'worried big sister' face. \"And as happy as I am to hear that, I suspect you weren't thinking about boinking them.\"\n\n\"You know I wasn't.\"\n\n\"And... was it one boy in particular?\"\n\n\"Maybe.\"\n\nKatrin studied Aztra, who finally had to turn herself right side up as she felt at quite a disadvantage in the conversation from her previous position.\n\n\"You really like him,\" Katrin finally said.\n\n\"Yes. I do. And I learned that maybe that doesn't need to involve sex.\"\n\nKatrin struggled with that one for a moment. \"But then what does really liking someone mean? Isn't that just being friends then?\"\n\n\"That's what I thought too. But I also super didn't like it when Dheni fucked Finan. And... I don't know. Lots of complicated emotions.\"\n\n\"Sure seems that way.\"\n\n\"But...\" Aztra offered a cautious smile in her sister's direction. \"He really likes me too,\" she said quietly. \"And I don't know how this 'no sex' thing is really gonna work. For him, I mean. But so far he's into it.\"\n\n\"Really?\"\n\n\"Yeah. I mean, it could all go disastrously at any time. But I feel like I really need to try.\"\n\n\"Sure. I respect that. I may never fully understand it-\"\n\n\"I know,\" Aztra said, smiling crookedly now. \"No one gets it. But... Finan might. And even if he doesn't, there's Jen. She helped me understand this stuff a little better. I think maybe... maybe however this goes I want to spend more time in the human world. I might belong there more than I do here.\"\n\nKatrin took a moment, then nodded slowly. \"You might,\" she agreed softly. \"I'm sorry I couldn't be-\"\n\n\"No. No shush. You've been a great sister. It's not your fault. Not any of it. It's just... me. And society. We don't mix well. But maybe there's a place for me somewhere else is all.\"\n\n\"I hope so, Az. I really do. I want you to be happy.\"\n\nKatrin enfolded Aztra in a big, sisterly hug. Aztra happily hugged back. The embrace lasted longer than Aztra anticipated, but she stayed with it and just enjoyed it.\n\n\"You should come visit with me sometimes too,\" Aztra said. \"I mean, obviously please don't fuck my... my maybe boyfriend. But his friends seem into it. And I'm sure there's other options too. More people nearby. More friends maybe.\"\n\n\"Well I definitely need to meet this guy,\" Katrin said. \"But I promise no boinking him.\"\n\n\"Thank you. That's all I ask.\"\n\n****\n\nAztra was getting better at transporting herself between realms. She was doing it so frequently these days that she'd feel bad always whining to her sister to give her interdimensional rides. Her aim wasn't great yet, but she was really improving, she felt.\n\n\"So you really just, like, warp between worlds at will?\" Finan asked.\n\n\"Kind of. Not really, but close enough,\" Aztra said.\n\nShe sat curled up next to Finan on his bed watching him play his latest video game obsession. He'd expressed embarrassment at not being good at it yet. Aztra really didn't care.\n\n\"I mean, it takes practice,\" Aztra said as an afterthought.\n\n\"Well sure. But that's crazy though. Like if I could just practice hard and eventually learn to fly.\"\n\n\"Don't be silly. I can't fly.\"\n\n\"No I know. It was an example of how wild that is to me.\"\n\n\"Oh.\"\n\nSilence reigned for a while. Aztra lost in thought, Finan tactically smashing buttons.\n\n\"Should we... go out sometime?\" Finan asked.\n\n\"What?\"\n\n\"Like... like a date. Should we do that?\"\n\n\"Oh. Maybe.\" Aztra's tail twitched anxiously. \"That would be... a lot of people though, wouldn't it?\"\n\n\"Probably. I guess that'd be tricky, huh?\"\n\n\"Kinda. I think. Your friends are cool. But it took time for them to be cool about me. Like they don't even hardly look at me weird anymore.\"\n\n\"Be different in public,\" Finan said with an understanding nod. \"I get that.\"\n\n\"Yeah. Sucks though. I'd like to maybe go on... dates.\"\n\n\"Mmhm. Maybe... maybe we can disguise you.\"\n\n\"Disguise me?\"\n\n\"You know. Like covered up all over. Hood up. Might work. Always does in movies and stuff. At least for a while.\"\n\n\"Ah.\"\n\nAztra considered the idea. Her lips slowly twitched into a smile. \"Is it weird that I kind of like that idea? Like, even just no one really looking at me.\"\n\n\"Not that weird. Lots of people just want to do their thing without attention. You've probably got a better reason than most.\"\n\n\"Hm. Ok.\" Aztra smiled cautiously. \"I think we should do it.\"\n\n****\n\nThe dark theatre was nice. Aztra was all bundled up in jeans and the hoodie Finan had given her. Even with gloves to hide her hands, though she'd taken then off now.\n\nIt was nice feeling like no one could see her. Either from clothes or being tucked away in a corner of a dark room. The theatre was fairly empty, which left Aztra and Finan plenty of privacy.\n\n\"So explain this again?\" Aztra asked. \"Why is this different from watching a movie at home?\"\n\n\"... the screen's bigger?\" Finan said uncertainly.\n\n\"Oh.\"\n\n\"And it's louder.\"\n\n\"Ah.\"\n\n\"And...\" He trailed off blankly.\n\n\"So bigger screen, and louder,\" Aztra said, popping open a box of candy. \"And for that you pay money.\"\n\n\"Right.\"\n\n\"And you buy snacks-\"\n\n\"Overpriced snacks.\"\n\n\"Yes. Overpriced snacks. Instead of bringing your own.\"\n\n\"Not allowed.\"\n\n\"Mmhm.\" Aztra chewed on some candy thoughtfully. It was ok. Not as good as chocolate though. \"I'm probably missing some of the nuance.\"\n\nFinan shrugged. \"Well, for one, most of us don't buy one of every snack.\"\n\n\"I wanted to try them.\" Aztra opened another box. \"Besides, Katrin gave me all this money, and I don't have much else to do with it. She got all weird and proud about me going on a date finally. Even though I was very clear no sex is happening.\"\n\n\"Where did she get all that cash anyway?\"\n\n\"I dunno. People she fucked, I assume. You know people will actually pay for sex?\"\n\n\"I, uh, yeah. I was aware, actually.\"\n\n\"Oh. Seems weird.\"\n\n\"Well-\"\n\n\"You want anything?\"\n\n\"Sure. You got M&Ms?\"\n\nAztra dug through her small pile of sugary treats on the seat beside her. \"Probably.\"\n\nThe movie started and Aztra focused on it for a while. She sort of started to feel like she understood the point. The bigness and loudness were more compelling than she'd given them credit for. A much different experience to watching a tv at Finan's place.\n\nPlus she still enjoyed the experience for her own reasons. Out in public without any stares. No one checking her out, let alone staring because she wasn't human. It was nice. As was her abundance of snacks to occupy her.\n\nAnd just getting to sit beside Finan. She always liked that. In his room or otherwise. This was a pretty good excuse, as well as feeling more... official, somehow. Like there was a difference between sitting together just because they happened to be hanging out, and sitting together because they'd specifically made plans to do so.\n\nAztra leaned over against Finan, just tentatively at first, but when he wrapped an arm around her she gave in and settled herself nicely. This felt right. She liked it.\n\nShe even pulled her hood down. It was dark and probably no one else would even look their way.\n\nAztra liked that little extra closeness. Especially when Finan would absently toy with her hair. She wasn't even sure he realized what he was doing.\n\nIt was just really nice, was all.\n\n****\n\nAztra lay in bed that night next to a sleeping Finan. She'd cautiously asked if it maybe would be ok, and he'd seemed happy with the idea. They'd cuddled and just talked a while, then he'd drifted off.\n\nAztra couldn't sleep. She didn't need as much as he did anyway, but more importantly her head was too full and wouldn't slow down. It was good stuff, mostly, but it was a lot.\n\nShe didn't mind too much. She could lie there and watch him sleep all night. It was soothing. Not quite soothing enough to put her to sleep, but close.\n\nThe window started to slide itself open in the wee hours of the morning. Aztra lifted her head curiously, then wasn't overly surprised to see her sister peek in.\n\n\"Date went well?\" Katrin asked, smirking over at Aztra.\n\n\"Good,\" Aztra said. \"Really good.\"\n\nShe quietly and carefully disentangled herself, then padded from the bed to where Katrin clung to the wall outside the building.\n\n\"I didn't fuck him,\" Aztra said.\n\n\"Trust me, Az, I know.\"\n\nKatrin kept climbing. Aztra grabbed her favourite hoodie, then slunk out the window and followed her big sister up to the roof. The two of them sat at the precarious edge of the building, totally at ease with the height and the glow of the moon illuminating what lay below.\n\n\"You really like that ridiculous shirt,\" Katrin observed as Aztra slipped the hoodie on and embraced its coziness.\n\n\"It makes me feel like me.\"\n\n\"Yeah. I guess it does.\" Katrin idly kicked her leg back and forth, dangling it over the abyss. \"You think you're gonna stay with him? Your boy?\"\n\n\"Finan. You know his name.\"\n\n\"I do.\"\n\n\"We... haven't talked about it. Not about, like, anything permanent.\" Aztra brushed her hair back and smiled. \"I think I'd like to. Eventually. Maybe take it slow, though.\"\n\n\"Mmhm. I'm gonna miss you if you move here, you know.\"\n\n\"Aw, Kat. I'll visit lots. If that even happens. And you can come see me. I still want to introduce you. Finan's friends'll love you.\"\n\n\"Oh?\"\n\n\"Maybe Finan too. I haven't figured out the whole sex thing. He might need it sometimes. I kinda freaked out a little last time though.\" Aztra frowned. \"It shouldn't be such a big deal to just, like, let someone take care of that for me.\"\n\n\"Oh, Az. Maybe just trust your boyfriend, hm? Don't go causing problems by trying to solve issues you don't even have.\"\n\n\"That's fair. But... you saying you wouldn't bang him if I asked?\"\n\nKatrin grinned. \"Oh he's a cutie. I totally would. But... actually no. No I wouldn't. He's yours. Wouldn't be right.\"\n\nAztra smiled back and took Katrin's hand, squeezing it gently, sharing a sisterly moment.\n\n\"Thanks for not wanting to bang my boyfriend.\"\n\n\"Hey, what are sisters for?\"\n\nAztra curled her legs up, still smiling, and just sat and watched the moon for a while. Katrin was equally silent beside her.",
        "\"I should officially meet him at some point, I suppose,\" Katrin said.\n\n\"Mmhm. You should. I'll set it up.\"\n\n\"Cool. You need anymore money?\"\n\n\"Maybe in a while. I still got a bunch left.\"\n\n\"Well let me know. Don't need my sister turning to honest work when she gets desperate.\"\n\n\"Hey! I may be a prude, but I have standards!\"\n\n\"Hehe, yeah you do.\"\n\nKatrin leaned over and brushed Aztra's hair, softly kissing the side of her forehead. Aztra smiled at her, then turned back to the moon.\n\nKatrin sprawled out lazily on the edge of the roof and moon watched with her. They spent the better part of the rest of the night out there, just sitting together.\n\n****\n\nAztra gradually spent more and more time in the human world. She basically moved in with Finan, sleeping in bed with him more often than not.\n\nIt took some adjustment getting comfortable in the world beyond his apartment, but cunning use of concealing clothing helped with that.\n\nKatrin visited from time to time, as did Dheni and Erota.\n\n\"You've been missing a lot of classes lately,\" Dheni said one day.\n\n\"Yeah, I know,\" Aztra said. She was casually leaning her back against Finan and flipping through her new phone, still trying to get the hang of some things. \"How mad are my teachers?\"\n\nDheni and Erota exchanged glances, then laughed.\n\n\"They're so proud,\" Dheni said.\n\n\"They keep mentioning how you've finally turned things around,\" Erota said. \"They get kind of misty eyed.\"\n\n\"You were always such a good student.\"\n\n\"It was very worrisome.\"\n\nFinan, visibly confused, got Aztra's attention and silently pleaded for clarification.\n\n\"I used to show up to most of my classes,\" Aztra explained.\n\n\"... isn't that what you're supposed to do?\" Finan asked.\n\n\"Well... yes. But actually no.\"\n\n\"What?\"\n\n\"Um... how do I explain this?\" Aztra looked to her friends for help.\n\nDheni shrugged. \"What's to explain? There's schools in the human world, yeah?\"\n\n\"There are,\" Finan confirmed.\n\n\"And they kind of suck and no one wants to go to them?\"\n\n\"Well... you're not totally wrong,\" Finan said. \"But-\"\n\n\"So it's worrisome when someone's attendance is too high,\" Erota said. \"Like why aren't they out fucking and setting fire to things like a normal person?\"\n\n\"... I think there may be some cultural differences,\" Finan said.\n\n\"And I'm not actually doing much fucking or setting fire to things,\" Aztra pointed out.\n\n\"Yeah, interesting thing about that,\" Dheni said. \"Turns out that's made you quite a fascinating figure.\"\n\n\"Blowing off school just to chill with some boy and not even fuck his brains out,\" Erota said.\n\n\"Some see it as a higher form of rebellion,\" Dheni said. \"I mean, we know it's just you being you, but most don't.\"\n\n\"Getting some copycats and everything,\" Erota said. \"Nixie blew off classes all last week, and it was just to binge some shows. Or so she claims. I think she was probably fucking around some too.\"\n\nFinan shook his head. \"I don't know if I'll ever understand, Az.\"\n\nAztra shrugged. \"That's fine. I don't think I ever totally will either.\"\n\n****\n\nAztra visited her home at times, and showed up for the occasional class when she felt like it. Her friends were right about her social status having gone up. It was extremely odd to her to be able to go to school in non-revealing clothes and still have classmates look upon her with a certain envy, nevermind the total lack of shunning for not displaying her sexuality everywhere, as was the custom.\n\nShe bought more hoodies, though still favoured the one Finan had originally gifted her. A few of her more daring peers even wore one from time to time, though most weren't brave enough to show up at school without their cleavage on prime display.\n\nMost of her time remained in the human world. Aztra got used to living there, and became quite skilled at getting around without attracting too much undue attention. Living semi-anonymously as the only demon in a city full of humans wasn't easy.\n\nShe had more luck online, in some ways. She got into streaming, and playing new video games that way. Mostly people online seemed to assume she was cosplaying, which Aztra didn't deny since it was the easiest story.\n\nShe still got a fair amount of attention for her looks, but it was over the internet rather than in person, and her lack of revealing outfits dampened the worst of it. She could handle some small sexual attention. She'd been putting up with worse than that most of her life. And a lot of her regular viewers when she streamed just seemed pretty cool about stuff, which helped too.\n\nIn particular, Aztra really enjoyed settling into a routine with everyone in the apartment. She really felt like once everyone got used to her presence, that she was able to just exist without feeling out place.\n\n\"You know, I halfway forget you're a demon sometimes,\" Jen said one day while she and Aztra were chilling together playing Mario Kart.\n\nAztra smiled. \"Thanks.\"\n\n\"I just think about it sometimes. Like... you come from a whole other plane.\"\n\n\"You're not wrong. But... I appreciate no one making a deal of that. Or eyeing me all the time.\"\n\n\"You've certainly got the anti-checking-out outfits down,\" Jen said.\n\n\"Yeah,\" Aztra said happily. \"I kinda do.\"\n\nFinan came in and softly kissed the top of Aztra's head before sitting all snugly next to her. Aztra kind of liked those small affectionate touches. Ones that weren't sexual, but still displayed emotion and connection. It was still a bit of a game between them to figure out where her boundaries were, and it was kind of fun to explore them together.\n\n\"Your sister coming over for supper tonight?\" Finan asked.\n\nAztra nodded. \"Oh yeah. You're right. I almost forgot. She said she's got food under control though, so no need to worry about it.\"\n\n\"That's good. Neither of us has been all that great at making fancy dinners yet.\"\n\nAztra laughed. \"It doesn't even need to be fancy, you know. Kat doesn't care that much. It's just an excuse for her to check up on me, mostly. And hang out.\"\n\n\"I feel like it has to be somewhat fancy,\" Finan said. \"Katrin... she's intimidating.\"\n\n\"No she's not.\"\n\n\"You only think that because she's your sister.\"\n\n\"Finan's right,\" Jen said. \"Katrin is quite formidable. I mean, I really like her... but I'd be a bit scared to date her sister, I think.\"\n\n\"Pff,\" Aztra said dismissively. \"You guys are silly. I mean, yeah, maybe she'd disembowel you if she thought you were being horrible to me, but...\" Aztra paused. \"Oh. Yeah, ok, I see what you mean. She's maybe a little protective of me.\"\n\nFinan kissed Aztra's shoulder. \"More than a little, babe.\"\n\n\"I'll instruct her never to disembowel any of you no matter what,\" Aztra said. \"How's that?\"\n\nJen laughed. \"Oh Az. Maybe don't bring up disemboweling at all.\"\n\n\"That's fair.\" Their current race ended and Aztra offered her controller to Finan. \"You wanna play?\"\n\n\"You done?\" Finan asked.\n\nJen snorted. \"Of course she is. I'm crushing her.\"\n\nAztra snatched her controller back. \"Oh hell no you aren't! Just because you won that last one-\"\n\n\"That's right!\" Jen said happily.\n\n\"Hell no. Let's go again. You're getting creamed this time.\"\n\nFinan laughed and settled in against Aztra to watch.\n\nAztra, despite her competitive streak being engaged, also felt quite nice and comfortable where she was. Just hanging out with friends, being close with Finan, having a good time. Feeling like she belonged. It had been a long time coming, but it was so very nice."
    ],
    "authorname": "Xarth",
    "tags": [
        "ace",
        "asexual",
        "acceptance",
        "video games",
        "urban fantasy",
        "relationships",
        "chocolate",
        "identity",
        "plane shift",
        "gsrm"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-worst-succubus"
}