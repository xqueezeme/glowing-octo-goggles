{
    "title": "A Night at McHooligans",
    "pages": [
        "Steve Cullis watched the three newcomers enter McHooligans pub. Students, was his initial thought. He finished cleaning a pint glass and put it on the rack above the bar.\n\nWhat were they doing here? Were they lost? Did they pay any attention to the local news at all?\n\nThe three of them were dressed in fancy dress costumes for Halloween. Well two of them were, the third, a skinny blond kid, looked like any other student. He wore baggy blue jeans and a white T-shirt with a cartoon of a sheep striking up a Kung Fu pose on the front. An oversize pair of headphones hung around his neck and led down to an iPod clipped to his waist.\n\nCullis shook his head. Didn't they know where they were? You didn't show off your expensive gadgets around here. Not if you wanted to keep them.\n\nThe kid's blond hair was gelled up in crazy spikes. Maybe he was supposed to be a character from a Japanese anime series.\n\nThe other kid was wearing a tatty old black robe. What was he supposed to be? A Jedi? A monk? Either way it looked like someone with rudimentary sewing skills had been let loose on a piece of old sackcloth.\n\nCullis wasn't that interested in the two blokes anyway. It was the girl in the middle that caught his attention.\n\nWow, what a hottie.\n\nShe was smoking. Slim and long-legged like a fashion model, but with a pair of boobs a Page 3 girl would die for. Her face looked sweet and innocent, like the typical girl next door, but her large blue eyes, hidden behind a pair of spectacles, told a different story. Cullis was glad his significant other wasn't here tonight. He'd get an ear bashing for sure over the way he was staring at this scorching hot redhead.\n\nThe girl was dressed in a devil girl outfit -- complete with horns, wings and tail -- that suited her perfectly. The costume was really good. Cullis wondered if they were art students. The horns and wings looked as good as any prosthetics he'd seen in films.\n\nThis was no place for art students.\n\n*****\n\nPhil Rowling felt uncomfortable as soon as he walked through the door. There was a real atmosphere about the pub, and not a good one. Groups of sallow youths clustered around a couple of pool tables or in booths on the far side of the room. Phil felt beady eyes follow them all the way to the bar, like those of nocturnal predators.\n\nThis place was trouble.\n\nRosa and Carny didn't seem to notice at all. They walked up to the bar with the breezy smiles of lost tourists. Which was what they were, Phil supposed.\n\nPhil also noticed there were no women in the bar. Rosa was the only female present. Unsurprisingly all eyes, very hungry eyes, were fixed on her. Phil felt a momentary tinge of concern for her, then chided himself for being silly.\n\n\"Hi, nice little quiet place you've got here,\" Carny said to the barman.\n\nPhil put the barman as maybe a few years older than his own eighteen years. The man behind the bar didn't look like he belonged here. Phil guessed he was a mature student looking to top up his funds with a bit of extra work on the side.\n\n\"Quiet now,\" the barman replied. \"But it can get a little rough later on. You want to be careful.\"\n\n*****\n\nCullis wanted to tell them to get the hell out of here right now for their own good, but that witch Harriet Diamond had ears everywhere. If she found out he'd turned paying customers away she'd have his guts.\n\n\"We'll be fine,\" the girl in the devil costume said. \"We've got Phil to protect us.\" She hugged the robed guy's head, squashing it against the side of her ample breast.\n\nWere they on something? Cullis thought. The kid in the white T-shirt and the girl looked completely clueless. At least the one in robes, Phil, had the sense to look uncomfortable. Cullis didn't have much faith in the kid's abilities as protector. Underneath the robes he looked as skinny as a rake.\n\n\"What'll you be having?\" he asked.\n\nMaybe they'd notice the poisonous atmosphere choking the place and leave after one drink.\n\n\"A pint of lager please,\" Phil said.\n\n\"Bloody Mary,\" the redhead said.\n\n\"Just a bottle of water,\" the kid in the white T-shirt said.\n\n*****\n\nPhil had got maybe a third of the way through his pint when the front door slammed open and a crowd of shaven headed men with football scarves tramped in.\n\n\"Fucking joke. No way was that a penalty,\" the lead man said.\n\n\"That ref's always been a cunt,\" a second man said.\n\nThe two looked like they could be brothers, Phil thought. They were both tall with similar pudgy features. Despite their height they both had thickset builds with fists the size of hams. Though they didn't have the sharply defined figures of body-builders, it was obvious there was plenty of muscle hiding beneath their slabs of fat. Slap a coat of green paint on them and they'd make good orcs or ogres for a fantasy film, Phil thought.\n\nAs the crowd of football supporters entered Phil noticed one of the groups of youths slinking out of the side entrance. A pack of hyena's ceding ground to a pride of lions was his thought. He would have liked to have done the same but it was too late, the lead brother had already spotted them.\n\n*****\n\nFuck, the Lions had lost, Cullis thought as he watched the Diamond brothers and their firm enter the pub, and in dodgy circumstances by the sounds of things. That was bad. Lennie and Johnny would be in an ugly mood.\n\nLennie noticed the students immediately.\n\n\"What you fuckers doing here dressed up like that?\" he demanded.\n\nThe kid in the robes pointed to a sorry looking plastic skull mask hanging above the bar. \"We're in fancy dress,\" he said. \"For Halloween.\" He flashed the man a nervous smile, the kind that said 'we don't want any trouble'.\n\nThe kid looked shit-scared. Cullis didn't blame him. Lennie, and his brother, were the type that relished being trouble.\n\n\"What's with the robes?\" Lennie continued. \"You a flasher or something.\"\n\n\"He's a warlock,\" Rosa said, flashing them a bright smile.\n\n\"You his pet then?\" a younger member of the crew, a short kid with a weaselly looking face Cullis couldn't remember the name of, asked. \"Like off WoW?\"\n\n\"I'm a librarian,\" the girl said with put upon haughtiness. She pointed to her bookish spectacles.\n\n\"Librarian?\" Lennie said, doubtful.\n\nHer friend prodded her and pointed to the horns on her head.\n\n\"Demon librarian,\" the girl added.\n\nShe was either kooky or completely cuckoo. Cullis couldn't decide which. Absolute killer body though.\n\n\"Hey look,\" the weaselly-faced kid said, pointing to the miniature pair of bat wings the girl was wearing on her head. \"Innit cool how she makes them move.\"\n\nWow, that was pretty good, Cullis thought, watching as the girl gave them a sweet smile and the little wings on the side of her head flapped of their own accord. What was it, some kind of hidden air pump? Or strings? Either way she'd really made an effort on her costume.\n\n\"Where's your costume?\" Lennie asked the kid in the white T-shirt.\n\nThe kid looked crestfallen. He looked down at his clothes.\n\n\"And I made such an effort,\" he said.\n\nHe was just as barmy as the girl, Cullis thought. Nuts, both of them.\n\nIt worked though, or maybe because the girl had such a sweet smile. Either way Lennie left them alone and continued to the bar. Cullis suddenly had his hands full pouring drinks for the thirsty firm as they continued to swear and grumble about the refereeing decisions in tonight's game.\n\n*****\n\nPhil rushed his pint, wanting to down it and get out of here as fast as possible. They were outsiders here and the new arrivals looked like the type of men that didn't think a night was complete until they'd kicked the teeth out of somebody they didn't like the look of. He'd just finished his drink when Rosa plonked a fresh one down next to his empty glass.\n\n\"Come on slow coach,\" she cajoled.\n\n\"I thought we were leaving after one drink,\" Phil said.\n\n\"We like it here,\" Carny said. \"Very authentic.\"\n\nThey were both crazy. Those 'authentic' locals were currently staring at them with 'authentic' open hostility.\n\nWell, except for Rosa. They leered at her with open lust.\n\n\"Mmm, all this testosterone,\" Rosa murmured. \"My pussy is positively salivating.\" She crossed and uncrossed her legs.\n\n\"Hungry?\" Carny asked.\n\n*****\n\n\"Are you sure?\" Cullis asked in disbelief as the girl ordered a second round.\n\n\"We'll be fine,\" the girl replied with a breezy smile.\n\nWere they mad or just dumb? Cullis thought. Couldn't they sense the tangible threat of violence rippling through the air. The Diamond brothers were bad enough sober. With beers they were animals.\n\nThe students seemed totally oblivious. Middle class twits without a clue how the real world worked, Cullis thought.\n\nThen, right in front of everyone in the pub, the girl put her arms around the kid in the robes and leaned in for a very sloppy and passionate kiss.\n\nCullis was flabbergasted.\n\nAnd also a little turned on.\n\nDid they want to get to hurt? This was no place for a full-on Public Show of Affection. Especially not with your super hot girlfriend in front of a whole pub full of blokes that would really like to fuck her. That was like getting your tackle out and rubbing it right in their faces. Look what I'm getting tonight lads.\n\nLucky bastard.\n\nTo be fair the kid seemed as surprised about it as everybody else, not that it took him long to get into the mood once she pressed her lips against his. Cullis couldn't believe what he was seeing as the pair noisily made out against the bar. They didn't seem aware of anyone else in the room or maybe they didn't care. If they carried on like this it wouldn't be long before they were ripping off each other's clothes and fucking on the floor. He wondered if he should spray them with the soda fountain before they got that far.\n\nCullis's jocular mood evaporated as soon as he glanced over at the firm. Envious glances had turned to dark, hateful glances. Men with faces like quarry cliffs muttered to each other and nodded their heads. Lennie slammed his glass down on the counter and started to walk towards the students.\n\nFuck. It was going to kick off.\n\nAn image jumped, unbidden, into his mind.\n\nOn his knees, ambulance sirens in the distance, audible yet still too far away. The kid coughing and spluttering, his girlfriend weeping and wailing. Cullis's hands over the kid's throat, trying in vain to hold it together, hot blood gushing through his fingers in steady spurts, forming a growing pool around his feet.\n\nHe was never going to get rid of that one.\n\n*****\n\nPhil was still reeling from Rosa's kiss when he noticed the lead hooligan staring at him, his face red and blotchy with anger. He looked like a pissed off bulldog. Phil fell back to earth with a crash.\n\nUh oh.\n\n\"Oi, loverboy,\" Bulldog-face said. He beckoned Phil with a chubby finger.\n\nDouble uh oh.\n\n*****\n\nFuck Harriet, Cullis thought. She wasn't the one who had to ring for the damn ambulance.\n\nHe went up to the girl and the art student with the fancy headphones.\n\n\"Look, don't think I'm being a dick or anything, but you really need to leave now and take your friend with you.\"\n\n\"Why?\" the girl asked, a disappointed pout on her full red lips.\n\n\"See those two...\" Cullis motioned with his eyes to Lennie and Johnny. \"That's the Diamond brothers, Lennie and Johnny. They run the main firm around here.\"\n\n\"They do look a little intimidating,\" the art student with the headphones commented.\n\nIntimidating. Where was this kid from, Silver Spoon land?\n\n\"They're far worse than that,\" Cullis said. \"Both have been in and out of prison for GBH and Aggravated Assault. Their aunt owns this pub so they think that means they can do whatever the fuck they like here.\"\n\nHe leant in closer.\n\n\"That includes kicking the shit out of random people they don't like the look of. I don't want to have to ring for an ambulance for you and your friend.\"\n\nOnce was fucking enough.\n\nThe two students looked at each other, sharing a secret smile.\n\nWere they on something? Cullis thought. Were they even listening?\n\nThe hot girl looked back at Cullis and stared straight into his eyes. There were flames flickering in those blue eyes.\n\nCullis's spine froze solid. It felt like a bucket of ice water had been poured down his back. Even now it felt like the chill was spreading out along his blood vessels, sending crystalline tendrils of ice right into his bowels. He couldn't look away. Hidden in her eyes was an endless black abyss filled with raging fires and countless lost souls screaming in eternal torment. He couldn't look away. Her gaze held him and dragged him closer, ever closer to the edge of that precipice.\n\nThe corners of her mouth twisted up in a cruel smile. It was the kind of smile a cat might give a mouse before tearing it to bloody ribbons.\n\n\"Your concern for us is touching, but misplaced,\" she said.\n\nCullis trembled as she ran a hand along the side of his face. Those weren't fingernails; they were claws.\n\nThere was a reason her costume looked so good. It wasn't a costume.\n\nO Lord, please save my soul.\n\nViolent tremors ran through his body as he tried to fight the unbreakable hold her gaze had on him. He was paralysed, frozen in place by terror. She leaned close to him, close enough to whisper in his ear.\n\n\"Some very bad things are about to happen in this place,\" she whispered, words sweet like poison. \"I think now would be a very good time for you to take your break. A very long break.\"\n\nThe paralysis rooting him to the spot ended. Cullis didn't hesitate. He ran straight for the door as if his life -- and soul -- depending on it. Which it did.\n\nLennie Diamond, what had you brought down on yourself?\n\n*****\n\nThat was very uncharacteristic of you,\" Carny commented.\n\nRosa sucked up the last of her drink and then motioned to Phil with her head.\n\n\"Ah,\" Carny said, nodding his head.\n\n*****\n\n\"So what is it?\" Bulldog-face asked, jabbing a thick finger at Phil's chest.\n\n\"What's what?\" Phil replied. He didn't like how the other gang members had arranged themselves around him in a menacing semi-circle.\n\n\"What's the big secret loverboy?\" Bulldog-face said, nodding his shaven head towards Rosa. \"Money? Big dick?\"\n\n\"Maybe he's just more of a man,\" Rosa called out.\n\nPhil winced internally. Not now Rosa, he thought.\n\n\"Is that so?\" Bulldog-face said, his voice quiet and laden with menace. \"Your girl's got a mouth on her. Maybe you should gag her, before I do... with my dick.\"\n\n\"Look, we don't want any trouble,\" Phil said, holding up his hands.\n\n\"I'd be careful if I were you,\" Rosa called out. \"That's a warlock you're messing with.\"\n\nBulldog-face and the rest of his gang looked puzzled for a moment, then they burst out laughing.\n\n\"Woo, show us your magic Harry Potter,\" Bulldog-face said, waving his fingers in Phil's face.\n\n\"Burn this oaf's skin off,\" Rosa said, her voice sharp.\n\nRosa! Phil thought, glancing in her direction. He was trying not to provoke anything here. As he turned his head he noticed the barman running through the side exit. The man looked as white as if he'd seen his own ghost.\n\nWhat was that about?\n\nHe turned back just in time to see a fist the size and approximate weight of a small ham hurtling towards his face like a high-speed train.\n\n*****\n\nEarlier that same evening...\n\n\"Come on, come on,\" Rosa said, rushing around Phil's bedroom with giddy excitement. \"We'll be late.\"\n\n\"Late for what?\" Phil asked. He'd only just woken up.\n\n\"Our Halloween trip to Earth,\" Rosa said.\n\n\"Halloween?\" Phil said. \"I thought daemons and other creatures of the night didn't care much for Halloween. Like it was a clich\u00e9 or something.\"\n\nRosa paused and stared at Phil with her bright blue eyes.\n\n\"Whatever gave you that foolish notion,\" she said. \"Halloween is one of the few nights where it's easy for my kind to travel to the human world.\"\n\nRosa was a succubus. The human parts of her resembled a gorgeous college cheerleader. She had a lithe figure with a pair of large breasts. She also had horns, wings and a pointed tail. Currently she was wearing a short pair of glossy red pants and a matching top that was scarcely bigger than a bra. For Rosa it could be considered overdressed.\n\n\"Now come on,\" Rosa said, grabbing his hand and pulling him off the bed.\n\n\"I can't go like this,\" Phil said.\n\nHe was completely naked. The succubi of the castle regarded clothes as an annoyance.\n\nThe world was temporarily blotted out as a shapeless black mass wrapped around his face. Rosa had thrown an old pair of black robes at him. They smelt a little musty.\n\n\"One of your predecessor's,\" Rosa said.\n\nPhil was a warlock and in theory the master of Rosa and the other succubi of the castle. In practise he was fairly certain that word did not mean what he thought it meant.\n\n\"Um, are these burn marks?\" Phil asked, after putting on the robes and noticing scorch marks on the hem and arms.\n\n\"The last owner asked too many annoying questions and I set him on fire,\" Rosa said. \"Now come on!\"\n\nShe grabbed his arm and bodily yanked him out of the bedroom. A few steps down the corridor and she muttered some arcane words of magic. Phil felt a strange dislocation and realised they were no longer in the castle.\n\nEarth?\n\nNo. They were somewhere else in Hell. He could hear screams off in the distance. Barely audible, but screams nonetheless.\n\nA lot of screams.\n\nThey were standing in a small room with a simple cot-like bed. Rows of bookcases lined the plain grey walls. At the far corner a skinny young man was drawing an arcane circle on the floor in white chalk. He stopped to look up at them as soon as they materialised in the room.\n\n\"Hello Rosa,\" he said.\n\n\"Hi Carny,\" Rosa said. \"This is the new master,\" she said, introducing Phil. \"Master, this is Carnivrillarofax. He's a Kullockian rage daemon.\"\n\nCarnivrillarofax? That name was familiar to Phil, but he couldn't remember from where.\n\n\"Call me Carny,\" Carnivrillarofax said, offering his hand.\n\n\"Phil,\" Phil said.\n\n\"The new master, eh,\" Carny said. \"I hope the girls aren't exerting you too hard.\"\n\nNope, they'd only kidnapped him from Earth and nearly fucked him to death on multiple occasions.\n\n\"You seem quite mellow for a rage daemon,\" Phil commented.\n\nHe'd read about them back at Wargsnouts College for Warlocks. They were meant to be one of the more terrifying daemons. Carny didn't look terrifying. He didn't even look like a daemon. He looked more like a hip university student. He wore a white T-shirt and a pair of faded blue jeans. His blond hair was gelled up in spikes that resembled a Japanese videogame character. An iPod was clipped to his waist and an oversize pair of headphones hung loosely around his neck.\n\n\"I listen to Slayer,\" Carny said. \"Keeps me chilled.\"\n\nHe bent down and finished the last line on the arcane circle.\n\n\"Ready to go?\" he asked.\n\nRosa daintily stepped over the threshold. She turned round, grabbed Phil's hands and yanked him into the circle. Phil overbalanced and she drew him into a tight embrace, not missing the opportunity to press her large boobs against his chest.\n\nCarny followed them into the circle. He intoned some words in an alien tongue that slipped past Phil's ears without him being able to distinguish the words. The lines of the circle lit up with a bright blue light and they were surrounded by a swirling cloud of black smoke. Phil felt a similar sense of dislocation as earlier, but a lot stronger this time.\n\nThe smoke cleared and Phil was standing in a back alley. Stars twinkled in the dark blue sky above them.\n\nEarth, Phil thought. It was refreshing to breathe in air untainted by the musks and perfumes that pervaded the succubi's castle, even if this air carried its own taints: car exhausts and the other grey scents of the city.",
        "Rosa hugged him and giggled with excitement like the cheerleader she resembled.\n\n\"What now?\" Phil asked.\n\n\"Let's wander,\" Carny said. \"Soak up the atmosphere. Chill out.\"\n\n\"Aren't you worried we'll stand out?\" Phil asked.\n\nCarny looked fine, but Rosa still had her horns, wings and tail. He was also a strong gust of wind away from being a dirty flasher. Rosa had given him these robes to wear, but that was all she'd given him.\n\n\"It's Halloween silly,\" Rosa said, swinging her tail in her hand. \"Everyone will think we're in costume.\"\n\n\"Speaking of costumes,\" Carny said. \"I thought you were going to make an effort this year.\"\n\n\"Oh wait,\" Rosa said.\n\nShe produced a pair of wire-rimmed spectacles and put them on.\n\n\"What do you think?\" she asked, showing them off with a smile.\n\nShe'd changed from a smoking hot sex daemon from hell to a smoking hot sex daemon from hell with a pair of wire-rimmed spectacles.\n\n\"Very nice,\" Phil said.\n\n\"You almost look innocent,\" Carny said.\n\nThey left the alley and walked down some quiet city streets. Phil heard sounds of revelry from off in the distance, but these streets were currently empty of people. Silent windows stared down at them.\n\n\"You seem a good sort for a warlock,\" Carny said to Phil as they walked.\n\n\"Why, what are warlocks normally like?\" Phil asked.\n\n\"Obnoxious, arrogant, shouty,\" Carny said. \"Always barking out one order or another.\"\n\n\"It's probably because I'm not a very good warlock,\" Phil said.\n\nCarny smiled.\n\n\"Says the current master of Rosa and her sisters,\" he said.\n\nMost of the time it felt like the other way round, Phil thought.\n\n\"Do you have a master?\" Phil asked Carny.\n\n\"Nah,\" he replied. \"That's outmoded thinking as far as I'm concerned. I do favours for humans sometimes. Ah, here we are,\" he said, stopping outside a pub tucked away down a quiet side street.\n\n\"Really?\" Phil asked.\n\nThe pub was called 'McHooligans'. It looked grotty. The windows carried a thick patina of grime and the light emanating from inside was dim and yellow. This was not a city centre pub eager to attract new visitors with the lure of bright lights and a friendly atmosphere; this was a locals' pub where the locals came to drown their sorrows and grumble about their lot in life.\n\n\"Local colour. How charming,\" Rosa said before putting an arm around Phil and steering him up the steps and through the entrance.\n\n*****\n\nNow...\n\nPhil watched the fist rush towards him, transfixed like a rabbit in the headlights of a truck.\n\nThis is going to hurt, he thought just as the fist impacted on the side of his face. Phil span around, collided with the bar and then collapsed in an ungainly heap.\n\nOw.\n\nHis head rang with an annoying low buzz. He tried to stand back up only to find his legs currently had the same level of sturdiness as a bag of limp spaghetti. He fell back down and the world temporarily blacked out.\n\nPhil was only out for a few brief moments. When his vision came back he saw Rosa kicking and screaming as the big guy bounced her on his shoulder in a fireman's carry.\n\n\"Lock the doors,\" Bulldog-face called out to one of the junior gang members, the kid with the weaselly face that looked about the same age as Phil. \"It's time to show this bitch a good old-fashioned gang bang.\"\n\nRosa screamed, kicked and beat her fists ineffectually at the big man's broad back. She caught Phil's eye and paused long enough to flash him a sly wink, then she carried on screaming, kicking her heels and generally behaving as a stereotypical scream queen. The big thug dropped her down on the edge of one of the pool tables and leered as he pulled down her shorts with his coarse, chubby fingers.\n\nThis wasn't going to end well, Phil thought.\n\nRosa stopped struggling. Bulldog-face probably assumed she was another of those rape victims that resign themselves to the assault and do whatever they can to get it over with as fast and as painlessly as possible. He grinned as he dropped his pants and sat up on the pool table.\n\n\"Polish my knob,\" he ordered, pointing to an erect cock that was distinctly average for a man of his size.\n\nRosa acquiesced and bent down to take his member between her plush lips.\n\n\"Come on lads,\" Bulldog-face yelled out. \"We've got some ripe student ass here for you. Form an orderly queue.\"\n\nThe hooligans laughed and jeered as they dropped their shellsuit bottoms and got out their erect cocks.\n\n\"What'll it be,\" Bulldog-face asked a man with curly black hair and a large gold stud in his ear. \"Ass or cunt?\"\n\n\"Always partial to a ripe bit of pussy me,\" Goldstud said.\n\nHe reached under to grope Rosa's naked crotch and pulled his hand back in surprise.\n\n\"She's soaking wet down there,\" he said.\n\nBulldog-face guffawed. \"Your girl's a right dirty cow ain't she,\" he shouted down at Phil, who was doing his best to feign unconsciousness.\n\n\"Right fucking slut,\" Goldstud said, putting his hands on the round swell of Rosa's hips and driving his cock up into her.\n\n\"Experienced fucking slut,\" Bulldog-face added with a sharp intake of breath. Rosa was bobbing and twisting her head as she fellated him with the expertise of a back alley whore.\n\n\"You seem fucking calm about this, no-costume boy,\" the big guy that looked like Bulldog-face's brother or cousin said.\n\nCarny hadn't moved. He leant casually against the bar, a bottle of mineral water in his hand. He shrugged and sucked up another mouthful of water through a straw.\n\n\"Actually, this is my costume,\" Carny said, taking another sip.\n\n\"Yeah?\" Bulldog-face II said. \"You another one of these Harry Potter warlock types.\"\n\n\"No,\" Carny answered. \"I'm a Kullockian rage daemon.\"\n\nHe placed his bottle of water on the counter.\n\nBulldog-face II turned to his mates and laughed. He turned back to Carny.\n\n\"So what's a Kullockian rage demon when it's at home then?\" he asked.\n\n\"The thing that's just torn both of your arms off,\" Carny replied with a smile that showed off plenty of teeth.\n\nBulldog-face II opened his mouth to laugh and then stopped. His brow creased up in puzzlement. He looked across his broad shoulder to where a grotesque stump was all that remained of his right arm. His eyes widened.\n\nCarny held up two severed arms with an innocent expression as if to say, 'looking for these?'\n\nBulldog-face II began to bellow the moment blood started jetting out of the empty sockets where his arms had been. He turned slowly, spraying blood in a circle like a gruesome Catherine wheel.\n\nPhil's jaw dropped open in shock. He hadn't seen Carny move, not even a blur.\n\nCarnivrillarofax's smile grew wider and his lower jaw pushed further out, revealing a line of triangular pointed teeth. His body began to change. His backbone arched upwards, giving the daemon a noticeable hunch. His shoulders broadened and his arms lengthened. Phil heard popping sounds as wiry muscles stretched and flexed. Carnivrillarofax's fingers lengthened, the fingernails extending into viciously sharp claws. The daemon's skin darkened to a deep shade of blood red. It smiled and ran a black tongue over its wickedly pointed teeth.\n\nThe hooligans stopped laughing. They started screaming when Carnivrillarofax threw himself at them with a savage howl. Cries of pain and horrible gurgling sounds were added to the symphony of growing panic.\n\nPhil looked back at Rosa. The succubus appeared to be enjoying her 'rape'. She'd lost her skimpy top and was currently fondling her hanging breasts as her body swung back and forth. Bulldog-face was leaning further and further back on the pool table, his eyes closed as the pleasures of her fellatio overwhelmed him. Behind her it didn't look so much like Goldstud was driving her as he was hanging on while the lovely round curves of her ass pushed back and forth against him. The thick musky aroma of her arousal filled the air in a dense cloud and the other members of the supposed gang rape were enveloped by it.\n\nWhen the screaming started the men lining up to take a turn with Rosa didn't seem to properly acknowledge what was going on. They looked over to where the sounds were coming from, but their mouths were slack and their eyes full of stupor.\n\nRosa broke off from sucking Bulldog-face's cock and looked at them.\n\n\"You don't want to run off before taking your turn do you?\" she asked sweetly.\n\nShe put a hand to her mouth and blew them a kiss. The men's bodies stiffened and dancing flames were superimposed over their eyes. They ignored the screams and turned back to face the succubus. They stood jerkily in line like puppet soldiers, each stroking their own erections and oblivious to the rest of the room.\n\nRosa took Bulldog-face's cock back into her mouth and suddenly bit down. Bulldog-face shuddered as if electrocuted. His eyes rolled up and froth bubbled up out of the corner of his open mouth. She'd injected him with the aphrodisiac venom from her fangs, Phil realised.\n\nSweat pouring down his body, Goldstud continued to thrust against her.\n\n\"I'm coming,\" he groaned.\n\nHe gasped with the satisfaction of release, but the expression of pleasure quickly changed to surprise and then fear.\n\n\"I can't stop,\" he yelped.\n\nHis body was no longer his to control. The muscles of his buttocks clenched, driving him deep into her pussy and holding him there.\n\n\"Of course,\" Rosa said, turning with a cruel smile on her lips. \"Once you're in a succubus's pussy she won't let you go until she's sucked out all your life.\"\n\nGoldstud groaned again, pleasure thrumming through the taut tendons of his body.\n\n\"But don't worry, you won't want to leave either.\"\n\nRosa turned her attentions back to Bulldog-face. His cock was twitching and throbbing between her fingers, ready to go off at any moment. She ran her tongue over the mushroom head, licking up his oozing precum and savouring the taste.\n\n\"Yum, you'll make a nice meal,\" Rosa said. She coiled her tongue around his cock and engulfed it right down to the root.\n\nBulldog-face tipped his head back and groaned loudly as Rosa bobbed her head faster and faster. It was the most epic blowjob he'd ever experience in his life. Nothing would ever top it because it was also the last blowjob he'd ever experience in his life.\n\nIt was the last of anything he'd ever experience in his life. Already the great slabs of fat and muscle were starting to collapse in on themselves. Bulldog-face was past caring. He continued with his moans of bliss, helpless beneath her hot mouth and sumptuous lips.\n\nPhil didn't want to look, but he couldn't look away. The men were deflating like inflatable dolls with a slow puncture. Their middle-aged paunch narrowed first to slim, then to starving, then to far worse. Goldstud had stopped trying to thrust in time with her movements; he wasn't even moving. His head had tipped back, his tongue was hanging out and his arms were swinging loosely at his sides. Still he didn't fall. Rosa's vagina kept up her death grip on his cock. Still fellating Bulldog-face, she murmured her pleasure as Goldstud's skin stretched taut across stick-thin bones.\n\nThe worst part of it all was the men were still smiling and groaning in pleasure even as she drained all their life and turned them into living cadavers.\n\nFinally, when there was nothing left but skin and bone, Rosa released him and Goldstud's corpse collapsed back onto the floor with a dry rattle. Rosa lifted her head from Bulldog-face's emaciated corpse and licked her lips as she fondled her breast.\n\n\"Very filling,\" she said, before casually shoving the man's corpse off the table.\n\nShe jumped up and sat on the edge of the pool table. She turned her attentions to the next man in line, a stocky bald man with a wide scarf around his neck. She beckoned to him with one finger while the other slipped between the plush folds of her pussy.\n\n\"It's your turn,\" she said, her red lips turned up in an innocent smile. \"Don't be shy.\"\n\nStill entranced, still with those red flames dancing before his eyes, the man stepped forwards and between her legs. Rosa sighed as she crossed her legs behind his buttocks and guided him into her pussy. Her arms folded around his back as she completed the embrace.\n\nThe other side of the pub resembled a charnel house. Blood was sprayed up the walls and seats as if a mad artist had gone berserk with a bucket of red paint. The gang were arranged along the walls and booths like a flock of frightened sheep, each trying to keep the furthest away from the red-skinned daemon standing in the middle of the room.\n\nA wiry youth in a grey hoodie tried to make a break for it. He jumped up onto a table and threw himself bodily at the front windows... only to rebound. Ripples of subtle blue light spread out from the point of impact. Magic, Phil thought. Rosa and Carnivrillarofax were not about to let anyone escape.\n\nThe youth had fallen at Carnivrillarofax's feet. The rage daemon lifted him up above his head with arms that were now nearly as long as his body. Carnivrillarofax gave a savage roar of triumph as he tore the man in half as if he was no more than a piece of paper. Phil looked away, but not fast enough to avoid seeing the man's entrails spill out like the contents of a ghastly butcher shop pi\u00f1ata.\n\nLooking at Rosa was no better. Her head was angled upwards, a savage gleam of lust in her eyes as she hugged the man tighter in her embrace. His quivering form slowly shrivelled up to skin and bones and then collapsed to the floor. He was still moaning and grunting his pleasure even as he died.\n\n\"Aah, next,\" she sighed.\n\nMy friends are really fucking scary, Phil thought.\n\nHe tried again to get back to his feet. Again his legs were about as suitable at supporting his weight as molten cheese sticks.\n\nFuck, that big bastard really could hit hard. Phil closed his eyes and then blacked out again. When he opened them again it was in time to see Rosa discard yet another cadaver of a corpse from her embrace.\n\nOf the gang rape party there was only one man left, the weaselly-faced youth that had been sent to lock the doors. Flames were still twinkling in front of Weasel-face's eyes, but the light was dimmer and kept cutting out. Rosa's glamour was strong, but the youth had just watched six of his friends wither away to nothing in the succubus's arms while listening to Carny tear the rest of his firm to bloody pieces. That was enough to penetrate even the strongest glamours.\n\n\"Come here sweetie,\" Rosa said, her face innocent again. \"Come into my arms.\"\n\nWeasel-face didn't move forward. The flames before his eyes flickered out. He glanced nervously behind him at the exit.\n\nRosa beckoned again. She squeezed a lovely breast with her hand.\n\nWeasel-face shuddered as he fought the deadly attraction of Rosa's body. A trembling leg stepped forward, then slid back. Tears ran down the youth's cheek. He glanced again at the exit.\n\nRosa put a hand on her hip and pouted. Her demeanour hardened.\n\n\"You can try and run and Carnivrillarofax will tear your arms and legs off,\" she said. \"Or you can come here and experience the sweetest end as my succulent pussy sucks out your life. Your choice.\"\n\nWeasel-face turned and watched as Carnivrillarofax tore a man's head and shoulders off. He backed away, realised that was only taking him closer to the other daemon and then stopped. He stood there trembling, tears running down his cheek, before finally making a decision. His shoulders slumped in resignation as he turned to Rosa and shuffled forward.\n\n\"Mmm, good boy,\" Rosa said.\n\nShe stepped forward to meet him with a slinky sway of her hips. She wrapped her arms around him and pressed her soft lips against his. Weasel-face didn't resist as she pushed him back on top of the pool table and climbed on to straddle him.\n\n\"Don't worry,\" she said, wiping the tears from his cheeks. \"This won't hurt at all. I promise.\"\n\nWeasel-face's mouth formed a perfect 'o' as his cock head slipped between her cushioned labia and she slowly sank down his shaft. Rosa smiled above him, her face sweet and innocent again as her hips moved up and down with an easy rhythm. She cupped her breasts in her hands and sighed as her body went up and down.\n\nPhil watched them and felt the tip of his rock-hard erection nudge against his robes. How did they do it? He thought. Sex with them was deadly. They killed men, left behind hideously shrivelled cadavers and still Phil wished he could be where Weasel-face was right now.\n\nMurmuring soft nothings, Rosa folded her body over Weasel-face until her breasts were rubbing against his chest. She continued to rock back and forth until his resistance broke and he came with a loud groan. Weasel-face's cries as he was coming were high-pitched like a girl's. Rosa smothered them with her soft lips. She extended her wings and folded them down until they were both hidden. Beneath the red membranes Phil heard wet sounds as Rosa's pussy sucked the semen, and life, from the youth's body.\n\nThis went on for a few minutes until Rosa sat back up with a contented sigh. Her wings retracted and folded back behind her.\n\n\"Now that wasn't so bad, was it,\" she said, caressing Weasel-face's cheek.\n\nWeasel-face didn't reply. He looked like a centenarian left out in the sun for too long. His eyes were white and clouded over.\n\nRosa hooked a foot under his corpse and rolled him off the table. She looked around and pouted when she realised she'd run out of men.\n\nPhil tried to lie down and look inconspicuous. He didn't like the hungry gleam he saw in Rosa's eyes.\n\nThere was a thud above him. Phil looked up and saw Rosa perched on the edge of the bar like a bird of prey. She stared down at him, her blue eyes bright.\n\n\"There you are,\" she said.\n\nShe reached down and grabbed Phil's collar.\n\n\"Urk!\" was all he could say as Rosa lifted him bodily into the air.\n\nShe took off for a short flight that was barely more than a jump as they came back down on the same pool table. Of course Rosa was right on top of him. Her eyes gleamed with both hunger and lust as she opened up his robes and his erection bobbed into view.\n\n\"It's me!\" Phil yelled out as Rosa put a hand around his shaft and steered his cock to the dripping slit of her pussy. \"Phil. Your master.\"\n\nRosa paused and looked down at him with her clear blue eyes.\n\n\"Yes, I know,\" she said.\n\n\"I thought you were going to...\" Phil didn't want to think about the scraps of skin and bone that littered the floor beneath the pool table.\n\n\"Don't be silly,\" Rosa said. \"I've already eaten. Now I want to fuck.\"\n\n\"Oh,\" Phil said.\n\n\"Now shut up and let me fuck you,\" Rosa said.\n\nShe sank down on him and Phil felt his cock slide into her wet, warm and exquisitely soft vagina.\n\nPhil shut up.\n\nRosa was glowing with the energy she'd taken from the other men. The soft flesh of her pussy pressed snugly all around his cock like a tight-fitting glove. Inside she was hot, but not unpleasantly so. Instead it was a pleasurable warmth that sank through his skin and spread through his cock.\n\nRosa lifted her arms above her head and posed for him in all of her naked glory as she wriggled to find a comfortable position in his lap. Her beauty took Phil's breath away. It always did. He looked up and marvelled at the flat expanse of her stomach, the perfect rounded swell of her breasts, the elegant curve of her neck and that angelic face that currently looked anything but as she stared down at him with sultry desire. Her hips moved slowly up and down and her vagina clenched around and rubbed against his cock with each stroke.\n\nHe was still admiring her unearthly beauty as a thick spray of blood splashed across her chest. It looked like a demented artist had taken a paintbrush and daubed a thick line of red paint across her boobs.\n\nIt was enough to shake Phil out of his trance. He became aware of the chaos around them. The pool table was in the eye of a hurricane of panic-stricken people. They dashed to and fro while a savage beast slaughtered freely in their midst.",
        "Rosa didn't care. She ran her finger across her bloody breast, scooping up the blood. She looked down at Phil with an expression of coquettish innocence as she inserted the finger between her soft red lips and sucked.\n\nPhil gasped in pleasure as her vagina clenched around his cock and pumped it with muscular squeezes.\n\nOh fuck, Phil thought, trembling as warm waves of bliss washed through his body.\n\nAn object flew across his field of vision, trailing red droplets like the tail of a bloody comet. A warm liquid splashed against Phil's chest.\n\nFuck, was that someone's arm?\n\nIt was. The image of a slowly turning hand and part of a severed forearm was seared forever into Phil's memory.\n\nA heavy object landed on the table behind Phil's head with a wet thud and carried on rolling until it came to rest against one of the corner pockets. Phil didn't want to turn and see what it was. It sounded about the same size and shape as a severed human head.\n\nHis stomach shuddered.\n\nRosa grabbed the side of his head and forced him to look up into her piercing eyes. The blue orbs glittered with irritation.\n\n\"Hey warlock, don't lose focus while we're fucking,\" she said.\n\n\"Sorry,\" Phil stammered.\n\nHe tried not to think about the object he could just about see the edge of in the corner of his eye. He had a horrible feeling it was staring at him.\n\n\"I'm finding things a little off-putting,\" he said.\n\nRosa tilted her head to the side and frowned.\n\n\"It's not wise to criticise the erotic abilities of a succubus,\" she said. \"Now I'll have to use sex magic on you.\"\n\nRosa whispered words in an alien language that dripped from her lips like forbidden honey. Then she leant down so her face was right above Phil's and exhaled.\n\nA thick cloud of pink perfume enveloped Phil's head. The sweet scent filled his lungs and when the smoke cleared from Phil's eyes he found he was lying in a different room. The hard pool table beneath him was gone. Instead he was lying on a large, luxuriously soft bed with crimson satin sheets. The blood-spattered pub was gone. He was lying in an opulent bedroom, surrounded by mirrors and ornate jewellery. It could have been the bedchamber of a queen or princess.\n\nRosa was still there, still above him, still straddling his body. She placed soft hands on either side of his chest and let her hips rise and fall with slow strokes.\n\nAlready the memories of the charnel house pub and bloodstained pool table were fading from his mind. Like insubstantial wisps of perfume.\n\nPool table...?\n\nPhil's face scrunched up in confusion. What had he been thinking about?\n\nRosa gave a little sigh of pleasure as she impaled herself fully on his throbbing manhood.\n\nWhatever, it wasn't important. The only thing that mattered was this vision of beauty riding him. Philip placed his hands on the warm curves of her rump and tensed his buttocks as he drove his manhood up into her luscious folds.\n\nRosa's cheeks reddened and her eyes closed with pleasure. Such a heavenly creature, Philip thought. He pushed harder against the bed, straining to fill her completely with the meat of his sex. She pushed back at him, her vagina squeezing tightly around him. The room was filled with their sighs and moans, a soft duet of their shared pleasures.\n\nShe started to ride him with greater vigour and Philip was taken back by the force of her ardour. To think his pretty little Rose should be so keen. He ceased thrusting and let her have the whip hand as she rode him faster and harder. He lay back on the soft satin sheets and admired the perfect curves of her breasts as they bobbed and swayed before him.\n\nFaster and faster, her wet sex sliding over him like liquid silk. Philip trembled in blissful anticipation as he felt his juices rise.\n\nSo adept, his delicate little Rose.\n\nHer heavenly sex gripped and squeezed him, as dexterous as a hand.\n\nYes, he thought, feeling the blessed release as he emptied his seed into the moist earth of her womb. He collapsed back on the bed with a mighty sigh, letting the waves of the pleasurable aftermath wash through his body.\n\nHis Rose wasn't finished yet. Neither, Philip was surprised to find, was he.\n\nShe paused only to gather her breath and then began to ride him again. Faster. Harder.\n\nIt wasn't possible. He couldn't go again, not so soon. He couldn't... ooo...\n\nHer thrusting hips pressed against him and he sank deeper into the luxuriously soft bed. His manhood sank deeper and deeper between the dripping folds of her sex. Flesh softer than the plushest cushions pressed all around his manhood. Her sex engulfed him like a mouth and like a mouth it hungrily sucked on him, hungry for more of his seed. His juices were rising again even though that shouldn't be possible.\n\nHis Rose was not the fragile bloom she seemed.\n\nAnd she would not be denied.\n\nShe gripped his chest tightly and let her weight drive him deeper and deeper into the tight grip of her womanhood. The claws on her thumbs toyed with his nipples.\n\nHis Rose?\n\nHe looked up into the visage of a demon, as terrible as she was beautiful. Great red bat wings extended from her back. Curved horns, as red as blood, poked out of hair the colour of flame. Fires twinkled in the depths of her blue eyes. She stared down at him with a sultry smile, both possessive and triumphant.\n\nPowerful muscles tightened around his manhood and rolled up the shaft like the motions of a gulping throat. The sensation was exquisite. Irresistible. Philip cried out in surprise and ecstasy as his seed was pulled from his body. This was no release; her sex closed around his manhood and sucked the juice from his balls.\n\nAnd kept sucking.\n\nHe couldn't resist. The pulsing motions continued all along his manhood, her sex imbibing his semen like a throat gulping down the finest wine. Growling her pleasure the demon pressed him deeper into the bed, forcing his manhood further and further into her body until the tip pressed into a soft cushion of flesh. It felt heavenly and Philip couldn't resist as it engulfed the head of his manhood and pumped stronger and stronger jets of seed from his body.\n\nHe couldn't stop, couldn't hold back the flow.\n\nOn and on it continued as he felt himself emptying into her. All of him: his self, soul and thoughts. Shadows spread and darkness grew in the room as the demon threw back her head and cried out in wild abandon.\n\nNo Rosa. Too much, Phil thought. You're taking too much.\n\nThe shadows in the room grew darker. His vision began to fade.\n\n\"Ahem!\"\n\nThe spell was broken as Carny, back in human form, tapped Rosa on the shoulder.\n\n\"Don't drink the warlock,\" he said. \"He seems a nice enough fellow.\"\n\nRosa looked down at Phil. Her mouth formed an 'o'.\n\n\"Oops. I'm sorry. I got carried away.\" She got off him.\n\nPhil felt like he'd been released from a powerful force. He turned on his side and hacked up a series of weak coughs. He felt like he'd been forced through a twenty-four hour gym session. In the desert.\n\nCarny handed him a bottle of water and he gratefully accepted it.\n\nSo powerful, he thought.\n\n\"I thought you were done feeding,\" Phil said to Rosa. Little black spots were dancing in front of his eyes.\n\nRosa laughed like a ditzy blonde. \"I fancied a little dessert. Sorry.\"\n\n\"So greedy,\" Carny said, shaking his head.\n\nThey helped Phil off the pool table and he stood unsteadily on trembling legs. He looked around the pub.\n\nJesus fuck.\n\nThere was blood everywhere. It looked like someone had revved up a fleet of sentient buzzsaws and let them loose on a crowded party. Body parts were scattered across tables, on chairs, across the floor. Severed heads stared up at the ceiling with dead white eyes. Purplish-red entrails hung down from the ceiling like gory Christmas streamers.\n\nPhil blanched. He felt his gorge rise and choked it back down. He mustn't show any kind of weakness. Not to them.\n\n\"You okay there dude?\" Carny asked with a friendly smile. He was still holding onto a bottle of mineral water with a straw sticking out of it, still had those oversize headphones hanging around his neck. There wasn't a single speck of blood on either him or his clothes. Not a single speck.\n\nPhil nodded.\n\nSo powerful. And completely terrifying.\n\nRosa stretched, lithe like a cat. \"That was fun,\" she said.\n\n\"Why didn't you use magic on the big guy?\" Carny asked as they walked out of the abattoir that had once been a local pub.\n\n\"It didn't seem fair to use magic on someone who couldn't,\" Phil replied.\n\nCarny arched an eyebrow and gave Phil a quizzical smile.\n\n\"And how exactly is it fair for a two hundred and fifty pound man to beat on someone half their size with their fists?\"\n\nPhil paused as he mulled that one over. Good point, he thought.\n\nThey stepped out into the night and Phil was grateful for the fresh air to clear away the stench of blood. As they stood by the entrance Phil noticed something he'd missed on the way in. There was a collection of bouquets and wreaths resting against a lamppost to the left of the pub entrance. He walked over to take a closer look.\n\nSome of the silk flowers were tatty, as if they'd been there a long time. Amongst them were fresher arrangements. In the centre, leaning against the post itself, was a small wooden board. On the board and covered with a clear plastic sheet to keep off any rain was a photograph of a young black man. The man in the picture looked around the same age as Phil and had a pleasant, easy-going smile.\n\n\"We didn't come to this place by accident did we,\" Phil said.\n\n\"No, we didn't,\" Carny said.\n\nOver by the front door Rosa blew on her palm and a small ball of fire flew through one of the windows like a rock.\n\n\"Whuff,\" she said and flames sparked in the centre of the pub.\n\nPhil looked down again at the makeshift shrine, at a face forever frozen in time. Someone had spent a great deal of love and attention in maintaining this.\n\n\"I was asked a favour,\" Carny said, his face unreadable as he looked down at the picture on the board.\n\nBehind him glass popped and wood crackled as bright flames raged through the interior of the building. The pub continued to burn as the warlock, succubus and daemon walked off into the night."
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "demon",
        "warlock",
        "magic",
        "gang bang",
        "gore",
        "halloween",
        "blowjob"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/a-night-at-mchooligans"
}