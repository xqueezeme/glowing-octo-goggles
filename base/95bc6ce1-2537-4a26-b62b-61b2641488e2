{
    "title": "Tomboy Ch. 04",
    "pages": [
        "Be sure to read \"Tomboy Chapters 1, 2 and 3\" before starting this story. Do Tom and Jo get back together or does May move in? Everyone in the story is at least 18 years of age. Copies of this story may not be made for distribution, be publishing or copied to another webpage without explicit permission from the author.\n\n*\n\nTom sat on a corner bench on a dark street corner after his talk with Jo. He fought back the tears and thought about calling her again but he knew she had already made up her mind and her basketball scholarship and grades were more important to her than he was. The thought entered his mind to go home and lock himself in the basement but he knew he would be too depressed. He put the cell phone in his pocket and headed down the street to Jack's Diner where the teams were celebrating. \n\n\"Hey Tom over here!\" Calvin yelled at him from the back of the diner. Jack, the owner of the diner, was a big Central Catholic supporter and always had the teams over after the games. Most of the diner was empty except for the happy victors. \n\nTom staggered over trying not to look too sad about what had occurred with Jo. He saw Billie and Tina hugging in one of the booths and slid in before anyone else grabbed him. \"Hi.\" \n\nTina had talked to Jo before she cut out and knew what happened. Billie also knew but neither of them had told anyone else. They wanted to hear it from Tom first. \"Did you talk to Jo?\" Tina asked. \n\n\"Yeah, I can't believe she feels I'm the cause of her bad game or grades.\" \n\n\"She is messed up right now being in love with you. She told me she hoped you can wait until the season is over and to give her another chance,\" Tina whispered. \n\nTom shook his head. Things had been so perfect. He had found someone he really loved and he enjoyed his success on the team. \"God, it was just one game.\" He said as he leaned back and closed his eyes. He felt someone slide into the booth next to him. \n\n\"Nice game Tom,\" May whispered as she pushed her bare thigh against his leg. \"I heard Jo is not coming here tonight.\" \n\n\"Get lost May,\" Tina glared at her larger team mate. \n\nMay thought about telling her to get lost but just smiled. \"If you get lonely let me know.\" She stood and pushed down the short skirt before winking at him and walking away. \n\n\"We have a three day weekend coming up with no practices,\" Billie announced. \"What are you going to do?\" \n\n\"I think I'm going back to Clarkton,\" Tom said softly. \"I have some loose ends to take care of.\" \n\n\"Tom, Jo loves you,\" Tina said hoping he would not go looking for someone else. \n\n\"If she really loved me she wouldn't be doing this to me,\" he said as he moved out of the booth. \n\nAn hour later only a few kids remained and the manager told everyone the diner was closing. Tom grabbed another Coke and headed down the street to his Grandparent's house. He did not notice the other person walking behind him nor did he hear her footsteps as she drew near. \n\n\"Tom,\" the voice behind him said. He turned suddenly hoping it was Jo but saw May instead. \n\n\"It's not a good time right now May,\" Tom said as he waited for her to catch up to him. \n\nHis body was rapidly betraying him as he thought of them on the bed at the party and her long legs opened ready for him to enter her. \n\n\"I heard about Jo,\" she smiled. \"I just wanted to make sure you were alright.\" \n\n\"Not really,\" he answered. \"How did you find out so fast?\" \n\n\"There are not too many secrets at Central,\" she answered. \"My house is just around the corner if you want to stop for a while.\" \n\n\"I don't think that's a good idea,\" he replied. He remembered what his Grandmother had said about girls who come on too fast. \n\nShe laughed. \"I promise not to bite you.\" \n\nTom was hurting so much he did not want to be alone. He felt he could control himself around May and if things started getting out of hand he could leave. \"OK but only for a few minutes.\" \n\n*****\n\nJo had tried to go to sleep but was too messed up as she thought about Tom. Maybe she had been too quick to stop their relationship until after the season. She quickly dressed and walked down towards the diner. Even if she wasn't going to go in at least she would be able to see him from the distance. When she arrived at the diner most everyone had gone but she could see his tall form towards the back room. \"He's not having a good time,\" Jo thought. \n\nShe waited across the street behind a brick stairwell when she saw him come out. He walked slowly down the street towards his house. \n\n\"Maybe if they talked they could resolve some of her issues of him being in the stands and spending less time during school nights,\" she thought. As she moved up from the stair well she saw someone else come from behind the diner. It wasn't until the form moved under a large street light that she realized it was May. She tried to catch May before she got to Tom but couldn't and had to hang back as the two talked. Her worse fears suddenly came to be when they turned and walked down the street where May's house was. \n\n*****\n\n\"My mom and dad go to bed early so be quiet,\" May whispered as she led Tom to her bedroom which was on the first floor but towards the back of the home. \n\nTom realized May had done this many times before as she closed the door behind him and quickly cleaned up a few items of clothing. \"Sit on the bed and I'll be right back,\" she grinned. \n\nHe felt like the fly waiting for the spider to return as he looked around her bedroom. Her closet was open and he could see a few silky blouses and dresses hanging on the rack. He knew this was a big mistake and stood to walk out the door when the bathroom door opened and May came walking out wearing only a beige teddy. At first he thought she was completely naked. \n\n\"God,\" he muttered. She giggled, walked in front of him, and pushed him back on her bed. \n\n\"Do you like?\" she smiled as she did a slow 180 turn to show him her pink ass cheeks poorly hidden by the high rise teddy. \n\n\"May we can't do this,\" Tom said. His voice was saying one thing but his body said another. \n\n\"No strings attached,\" she smiled as she pinched the spaghetti straps on her shoulders and slowly pushed them down her arms. The beige silk moved like an apple peeling losing it's skin down her large mounds. \"No one will know.\" Tom's eyes widened when the top of her pink nipples appeared and then the long hard tips. \n\n\"This is not a good idea,\" he whispered but again did not move. Suddenly both of her naked orbs popped out before his eyes. \n\nShe didn't respond as she continued to push the garment down over her flat stomach and small butterfly tattoo. \"Do you like my butterfly?\" she teased as her fingers gently brushed over the design that rested just above the top of her trimmed bush. \"My butterfly likes to be kissed. Will you kiss it for me?\" She moved her body forward until her knees pushed against his. Her fingers reached out and captured his head and pulled until his lips were only a few inches away. \n\nHis muscles were like putty and had no strength to resist. He closed his eye and pushed his mouth forward until they touched the soft flesh where her tattoo was. \"No one will know,\" she repeated again as her own fingers pushed the teddy down past her dripping pussy to her ankles. She stepped out of the teddy and stood naked before him. \n\n\"Now you need to kiss my flower,\" she whispered. Her fingers gently pushed down his head until his lips moved over her thin sliver of pubic hair. As he moved lower his mouth automatically opened and his tongue licked at the top of her moist slit. She grabbed his hands and pulled them around behind her until they cupped her firm butt. \n\n\"No one will know,\" she smiled when the tip of his hot tongue flicked against her swollen clitoris. \n\n*****\n\nJo knew where May's bedroom was and hurried around the back of the house. She tried to peek in the small window but couldn't see around the curtains. She knew May was a slut and also knew Tom was weak after what she had done to him that day. Some how she needed to stop them. She wasn't sure where May's parent's bedroom was so she tossed small stones at all the windows on the second floor. At first she thought she was out of luck until a light suddenly came on. She ducked behind the garage cans. \n\n*****\n\nTom was in lala land as he sucked and licked May's experienced pussy. His fingers squeezed her ass as he felt her push him onto his back. He didn't resist as she quickly released his fly and pulled out his huge hard-on. He expected her to touch and explore him for a while and therefore was not ready as she quickly moved her hot hole over his shaft. As the tip pushed an inch inside her inner lips someone pounded on the door. \n\n\"May! Are you awake?\" May' mother's voice rang out. \n\n\"Shit,\" she said. \"Be quiet and I'll get rid of her,\" she whispered to Tom. \n\n\"Yes Mother,\" she yelled. She tried to lower her pussy down his shaft but Tom' hands on her waist prevented it. \n\n\"Someone is throwing rocks at the house!\" her mother yelled. \n\n\"They will go away,\" May said totally pissed. \"Go back to bed.\" \n\nThey both waited for a reply but got none. They heard her footsteps walking away. \"She's gone so do it,\" May grinned as she pushed her juicy opening down almost an inch again before Tom lifted her up and off of him. \n\n\"What are you doing?\" May asked totally exasperated. \n\n\"Something I should have done before,\" he said as he zipped up his shorts and moved to the door. \"I promised my Grandma.\" \n\n\"WHAT?\" May asked. \n\nHe smiled and slipped out into the hallway. \n\nHe did not see Jo hiding in the alley as he hurried down the street and back to his house. Grandma Bell was sleeping in the rocking chair near the door when he tried to slip in quietly. \"I can hear you,\" she said. \n\n\"Hi Grandma,\" Tom said as he kissed her on her forehead. \n\n\"Did you have a nice night?\" she asked. She stared into his eyes and could see something was bothering him. \n\n\"Not really,\" he said as he sat on the sofa across from her. \"Jo and I kind of broke up.\" \n\nOf all the girls Bell had met the only one she liked was Jo. \"And you are just going to sit there and not do anything about it? \n\n\"There's nothing I can do,\" he said looking downward. \n\n\"I've seen the way she looks at you and the way you look at her so don't tell me there's nothing that can be done.\" \n\n\"She had a bad game tonight and said it was because I was in the stands distracting her. And she also failed an exam because we are spending too much time together during the week.\" \n\nBell shook her head. \"Think about what you just said tonight and talk to me again in the morning. I'm going to bed.\" \n\nTom watched his elderly grandmother shuffle off slowly to her bedroom. He moved down the stairs and put on the DVD \"Love and Basketball\". As he brushed the fishy smell from his mouth and lips he looked in the mirror and smiled. \"Thank you Grandma.\" \n\n*****\n\nJo didn't get much sleep that night still worrying about her relationship with Tom. She told her sister at the breakfast table what had happened just to keep her quiet and waited until she left for school before she picked up her cell phone to call Tom. She wanted to tell him one more time she loved him but couldn't be with him until after the season was over. As she walked out the front door to walk to school she took a big breath and pushed the send button. Suddenly she heard the ringing of a phone and looked down to see Tom sitting on her front steps. He looked at her name on his cell phone caller ID and smiled. \n\n\"Hi,\" he smiled as he pushed his answer button and turned to look at her. \n\n\"What are you doing here?\" she asked into the phone. \n\n\"I had to see you,\" he answered with a grin. \"I love you Jo and can't wait until the season is over.\" \n\nShe hung up her phone. \"You have too,\" she said again almost in tears. \n\n\"Tell me you don't love me,\" Tom said as he stood to block her path down the steps. \n\n\"That's not fair,\" she said. \"I'm letting down the team.\" \n\n\"I won't come to your games,\" he said smiling remembering what his Grandma had hinted at last night. \n\n\"But I'll still be thinking of you,\" she whispered. \n\n\"Jo, I hope you will be thinking of me anyway. All I'm asking is for you to try it once. I know you and know you don't like to lose,\" he smiled. \"We can see each other on the weekends if this works.\" \n\nJo stopped and bit on her lower lip as she thought about what he had said. Then she remembered last night. \"I saw you go into May's house last night. If you really loved me you wouldn't have done that.\" \n\n\"Jo I fucked up,\" he said. \"I thought I could control my desires and was real lonely last night. If it wasn't for someone throwing rocks at her house I could have done something......\" Then it hit him. She had saw them going into the house which meant it was Jo who threw the rocks. \"Thanks,\" he said blushing. \n\n\"I did it for me not you,\" she said as she pushed him hard against his chest. \"If you ever think about cheating on me again I'm going to use bigger rocks and my target won't be a house.\" \n\nTom smiled. \"Does this mean we are still together?\" \n\n\"Maybe if you carry my book bag to school I'll think about it,\" she grinned. She moved into his arms and gave him the hottest, wettest, and sexist kiss ever. \n\n*****\n\nIt was later that day during the girl's practice that Jo got even with May. A group of older boys from the baseball team had started pre-season practice and were sitting around waiting for the girls to finish their practice so they could have the gym. It was during the last defensive practice set that Jo waited until May's rear faced the boys on the bleachers when she grabbed hold of her shorts and panties and yanked downward. Before May could react her naked ass was mooning the whole baseball team upperclassmen. \n\nCoach Meagan saw what Jo had done and thought about busting her but her star player had been having a rough time lately. Besides she figured May must have deserved it. She turned and left the gym before anyone saw her leave. \n\n\"JO!\" May cried out as she tried to bend ladylike to pull up her panties and shorts. The problem was that if she bent with her ass to the boys they would see up under her legs at her pink slit. If she turned they would see her bush and pussy. \n\n\"What the hell,\" she grinned as she turned and slowly pulled up her panties and then her shorts. The whole team was standing and applauding. \n\n\"Shit,\" Jo said to herself. \"She liked it.\" \n\nLater as Jo stood under the warm shower she peeked out to see May walk into the shower room. She was ready to throw a punch at the taller girl but saw May smile and glanced down at Jo's nearly perfect body. \"I can see what Tom sees in you,\" she said. \n\n\"You don't get it do you?\" Jo laughed. \"It's not the biggest tits or best blowjob. It's what's in here,\" she said pointing to the space between her breasts. \"If you ever look at him again I'll kick your ass.\" \n\nMay tried to smile but couldn't. \"He didn't do anything he didn't want to do.\" \n\n\"Just remember what I said,\" she said as she smacked May hard on her pink buttocks. The sound rang out into the locker room. \n\nTina and April were giggling when May walked out of the showers. They waited until she turned around before they saw Jo's hand print on her ass. \"We didn't know you were into spanking,\" Tina laughed. May's face turned red and she started coming at the smaller girl until Jo stepped around the locker. Jo was small too but they all knew she could fisticuffs with the best of the boys. May turned and quickly got dressed. \n\n\"So everything is OK with Tom again?\" Tina asked Jo as they walked to Jo's house. \n\nJo smiled and told her the whole story. \"I guess we will see next week at the game. We will see each other only on the weekends.\" \n\nTina remembered what Tom had said about going to Clarkton. \"Is he still going back to Clarkton this weekend?\" \n\nJo stopped walking and looked at her. \"He never told me he was going back there.\" Jo knew his old girlfriend Tracy would be waiting with open arms. \n\n\"He....,\" Tina hesitated. \"He must have forgotten or maybe he changed his mind?\" \n\nJo said goodbye to Tina and called Tom's cell phone. He had to be out of practice by now. He answered on the third ring. \"Hi,\" he said out of breath. \n\n\"Did I interrupt anything?\" Jo asked. \n\nTom realized she was referring to his heavy breathing. \"No,\" he laughed. \"I ran to the locker and had to fish out the phone. What's up?\" \n\n\"Are you going to Clarkton this weekend?\" \n\n\"I should have known Tina would have told her,\" he thought. \"Yes but I was going to ask you to go with me.\" \n\n\"When were you going to ask me tomorrow morning before you left?\" \n\n\"No, tonight when you come over to my house. We have the house all to ourselves. Even Grandma Bell will be gone.\" \n\nJo's pulse quickened. \"Alone? Just the two of us?\" \n\n\"That's OK isn't it?\" \n\n\"Oh yeah, that's better than OK. What time?\" \n\n\"My family is going out at 6:30PM so anytime after that.\" \n\nJo was waiting across the street at 6:20PM for the family to leave. \n\n*****\n\nTom told his family to leave and he would clean up the kitchen. It was getting late and he wanted them out of the house. \n\nAs soon as he heard their car leaving down the street the doorbell rang. He was wearing his Grandma' apron when he opened the door. \"Are you a hussy?\" he said in his best impression of his Grandma's voice. \"That skirt is a little short isn't it?\" \n\nJo laughed and pushed him into the door. She closed it behind her. \"Why Grandma what big eyes you have,\" she giggled. She pushed on his nose. \"What a big nose you have.\" Both were laughing as she picked up the apron and grabbed his forming bulge. \"And, what a big THANG you have.\" Tom sucked in a big blast of air as she stroked his shaft. \"Why Grandma,\" she giggled as she unzipped his pants and pulled out his hard-on. \"Is this for little red riding hood?\" \n\n\"Yes....dearie.......\" he gasped as she stroked him. He watched as she leaned forward and pretended to open her mouth over his huge crown. Suddenly she pulled back and ran down the hallway. \n\n\"Hey that's not playing fair!\" He yelled as he ran to catch up to her. His hard prick bounced up and down with each step. \n\nJo ran down the hallway and into a small closet off of the kitchen. She heard him coming and moved back behind some long coats. His footsteps moved down the hallway and stopped by the closet door. She held her breath as she waited for the door to open. But, it didn't open and she heard him walk away. \"Surely he saw me duck into the closet,\" she thought. \n\nJo remained in the closet for almost five minutes before she realize he was not looking for her. She moved out and peeked down the hallway. Nothing not even a sound. She left the door open and tip-toed into the kitchen. Still no Tom. A quick search of the first floor showed nothing either. She smiled as she moved down the squeaking stairs to his room in the basement. Again there was no Tom. \n\n\"OK enough is enough,\" she said softly as she climbed the stairs to the first floor and then the second floor. The first two bedrooms were empty but the third one had two candles lit and the bedspread turned down. She smiled as she entered. \n\n\"It took you long enough,\" Tom grinned when he saw her walk cautiously through the doorway. He moved from a small chair and walked up to her. \n\nJo giggled and looked at the bed. \"Are you planning something?\" \n\n\"Yes, and to make it interesting I'm challenging you to a game of HORSE.\" \n\nJo looked over his back at the small basketball goal mounted on the bathroom door. \"And what are we betting?\" \n\n\"First of all our clothing,\" he smiled as he unbuttoned the top button on her blouse. She smacked his hand away. \n\n\"And, second of all,\" she smiled. \n\n\"Whoever loses does what the other person asks.\" ",
        "\"You are so going to lose,\" she said as she tried to grab the small Nerf ball from his hands. \"Lady's first?\" \n\n\"Sure if there was lady present,\" he laughed as he ducked her over hand right. \"My house, my rules. Rule number one is that you must make exactly the same shot as the first player. Rule two is that you can do anything to distract the other player except physically obstruct the shot.\" \n\n\"Is that it?\" she grinned. \n\n\"Nope, rule three is that the loser must be the winners slave for rest of the night.\" \n\n\"I guess you have been practicing all day,\" she laughed. She quickly counted their clothing and saw they both were wearing four items not counting their shoes if you counted his belt as an item. \"No shoes,\" she said as she kicked her slip on sneakers to the side. \n\n\"OK my first shot is a hook shot from behind the bed,\" he smiled. Before Jo could react he swiftly moved behind the bed and swished it clean through the hoop. \"Looks like an \"H\" for Jo,\" he teased. \n\n\"I'll give you an \"H\" right here,\" she laughed as she grabbed his crotch. He jumped back before she got a good hold. Jo moved behind the bed and took a practice hook with an empty hand. As she concentrated on the shot and moved her arm back Tom's fingers moved up under her skirt and caressed her buttock. \"Hey!\" she yelled as the small ball barely struck the wire rim. \"That's not fair.\" \n\n\"Rule two,\" Tom laughed. \"Take something off.\" \n\nJo didn't like to lose at any game and smiled as she slowly unbuttoned her blouse. She teased him by turning the other way before she tossed the blouse on the chair and turned to face him. Her golden bangs fell down into her face. She blew them back and stuck out her chest at him. \"Don't miss or you will be in trouble,\" she joked. \n\nTom peeked at her tight bra as he moved down on the bed on his back. He took the ball above his head for a shot when her head moved down to nibble at the large lump in his shorts. \"Now that is definitely not fair,\" he moaned as he took aim again and bounced the ball high off the ceiling. It fell straight to the floor. \n\n\"AIR-BALL, AIR-BALL!\" she yelled as she grabbed the ball and ran up to the hoop for a dunk before he could grab her. \"Your shot big boy.\" \n\nIt as simple dunk however he knew she would grabbed at him as he went up. He held one hand out to block her as the other hand dunked the ball through the hoop. \"You can do better than that,\" he laughed. Tina moved up onto the bed and took aim across the room. She knew he would touch or something and was ready for it when he pulled down her bra allowing her breast to flop out. As he sucked on the hard tip she shot. \"SWISH BABY!\" she yelled as she pushed his lips from her nip and jumped off the bed. \n\nTom too anticipated she would grab him so he concentrated on the shot while he stood on the bed. But instead of grabbing him she ran over by the basket and pulled down both cups of her bra. Her two hard pink nipples looked at him. \"Shit,\" he muttered as he moved his hands back. Suddenly she wiggled her chest and the ball bounced off the backboard. \"Take something off,\" she giggled. \n\nTom pulled off his shirt and watched as she moved down on her back on the floor facing away from the basket. As she looked over her head at the hoop she felt her skirt being raised and the cool air on her thighs and stomach. She giggled as his wet tongue licked at the edges of her panties around her crotch. She aimed and fired. It banked in. \"Ummm, you can keep doing that if you want,\" she moaned. \n\nTom grabbed the ball. \"How can you make a shot like that with my tongue on your panties and you play like shit with me in the stands?\" he asked. \n\n\"I know where your tongue is now but not when you are in the stands,\" she giggled. \"Your shot.\" She moved up to allow him to take her place. \n\nTom took his position and waited for her to do something. She just smiled as she stood up next to his head. As he aimed the ball she pulled up her skirt until the damp crotch of her panties could be seen. \"That won't work,\" he laughed as he shot the ball. It went in and out. \n\n\"It won't huh?\" she laughed. She took the ball and watched as he removed his belt. \n\nJo quickly jumped to the side of him and shot the ball off the side wall. It swished through the tiny net. \n\n\"You've played this game before haven't you?\" he asked, now sweating. \n\n\"Yes, but not for these high stakes.\" \n\nAs he turned towards the hoop he felt her breasts push up against his back. This time he took his time and made the shot. \n\n\"Try this one,\" Jo said as she threw the ball up in the air and head-butted it in the hoop. \n\n\"Damn Jo, you must be the Nerf ball queen,\" he said as he tried to do the same thing but missed. He quickly pushed his shorts over his boxers. \"Is it cold in here or is it just me?\" he laughed. \n\nJo could see his level of arousement and wanted to get the game going. She hooked the ball poorly and missed. \n\n\"I guess the sight is too much for you,\" he laughed as he grabbed the ball and sat down in the chair. As he aimed the ball Jo's mouth sucked in his earlobe. Somehow he got the ball off and made it. Jo moved in his place and felt his lips do the same to her ear. He whispered just as she shot, \"I want to eat you up.\" The ball missed. \n\nBoth of them were breathing heavy now as she pulled off her skirt and stood in only her dainty undies. \"This game is too slow,\" she said seriously. \"From now on if we miss we take everything off.\" \n\n\"Rule four,\" he laughed as he stood against the back wall and took aim. He gasped when her fingers fished out his prick and her lips circled the tip. \"That's definitely not fair,\" he grunted as his shot bounced into the net. It was Jo's turn and if she missed she would be his slave for the rest of the night. \n\n\"You have to promise me that if I miss that you won't ask me to do something I don't want to do,\" she said as her mouth popped off of his hard-on. \n\n\"How would I know what you don't like to do?\" he asked. So far she had been willing to do just about anything. \n\nShe giggled. \"I'll let you know.\" She moved back against the wall and saw him drop down the front of her body. His fingers pulled her striped bikini panties down low enough for him to lick up and down her quivering pussy mound. As she threw the ball her legs buckled on her and she fell to the floor on top of him. Neither of them saw if the ball went through the hoop. \n\n\"Did it go in?\" he asked as he pulled her panties off her soft hips. \n\n\"No,\" she moaned. It didn't matter because she wanted to be his sex slave. \"What do you want me to do master?\" \n\n\"I never thought I'd hear those words from you Jo Thompson,\" he grinned. Her panties were gone and he was working on her bra. \n\n\"I never thought I'd say I love you,\" she moaned when his fingers split her damp blonde forest. \n\n\"Tell me you love me,\" he commanded. \n\n\"I love you,\" she whispered. \n\n\"Take off my boxers.\" \n\nJo smiled as she released the master's tool. She wanted to touch it and suck it but waited for his commands. \n\n\"Rub your breasts on it,\" he commanded. \n\nJo giggled as she did as he said. Her breasts were so firm and her nipples were do hard she had little trouble pushing them up and down his pink shaft. When the hard tip got to the tip she moved it around and around the damp crown. \n\n\"Ummm, I like that,\" he moaned. \"Squeeze it between your breasts.\" \n\nJo moved his pink pole between her mounds and pushed on the sides until only the purple tip stuck outward. She grinned as she lowered her body which moved his penis to her lips. She licked the pre-come from the tip and pretended to bite it with her pearly whites. \n\n\"Hey easy down there,\" he laughed. She rubbed her breasts a few more minutes up and down until he told her to lie onto her back. She did and stopped when she heard him to open her legs as wide as they could go. It would mean he could see everything. \n\n\"Come on slave,\" he chanted as he knelt between her legs. Finally her legs opened wider and wider until her pink gash was completely exposed. \"Spread apart the lips with your fingers.\" \n\nJo took a deep breath and did what he said. She knew he could now see her raised clitoris and her open pussy which was now dripping in anticipation of what was to come. \"Are you just going to look?\" she giggled. \n\n\"Quiet slave,\" he said seriously. He moved his body forward until the tip of his shaft pushed against her pleasure knob. She moaned and lifted her hips until he was poised to enter her dampness. \n\n\"Oh God Tom quit teasing me,\" she moaned. \n\n\"Call me master,\" he commanded. \n\nJo had reached the limit with the master and slave stuff. \"Fuck you master,\" she said as she grabbed his hard-on and pulled it until three inches sank into her hole. It was now lined up as she grabbed his ass and pulled him deeply inside of her. \n\nTom realized the game was over and the serious sex had started. He tried to think of something else to prevent ejaculating prematurely and it worked for almost a minute until her pussy squeezed him tightly. \"OH GOD JO I'M COMING!\" \n\nJo was ready too and quickly let her dam loose. \"ME TOO!\" Their bodies slapped together ten more times before Tom collapsed on top of her. \n\nFor the next hour all they did was kiss and snuggle. \"What are we going to do in Clarkton?\" Jo asked. \n\n\"I just want to show you where I grew up and meet some of my old friends.\" \n\n\"How about Tracy?\" \n\n\"Tracy is history,\" he smiled. Jo's fingers played with his softness until it began stirring again. \n\n\"Ummm, something wants more action,\" she giggled. \"Do we have time?\" \n\nTom looked at the clock and realized it was 8:00PM. \"Not really. They will be home around 8:30PM or so and we have to straighten up this room. \n\n\"We have the whole weekend,\" Jo smiled as she let go of his shaft. \n\n***** \n\nJo had a little problem convincing her parents to let her go alone with Tom to Clarkton and the only way they would let her go was if Karen went as well. It didn't make Jo happy but at least she got to go. \n\nTom borrowed his parent's car and the three of them left as early as they could. Being Saturday morning they made good time out of town and were well on their way to Clarkton. Tom looked at Jo who was wearing a short denim skirt but still had her basketball sneakers on. Her loose sweatshirt hid her well developed mounds. \"We are staying at my friend Eric's house. His parents are out of town so there should not be a problem of us sleeping together.\" \n\n\"How cute is Eric?\" Karen giggled from the back seat. \n\n\"I don't think he is cute at all,\" Tom laughed. \"Good,\" Jo said slapping him. \n\n\"Are you sure you can handle a whole night of me?\" Jo asked with a wicked smile. \n\n\"I brought my One-A-Day vitamins for Seniors,\" he laughed. \n\n\"Seniors?\" \n\n\"It's a private joke between Grandma and me,\" he chuckled. \n\nThe trip went quickly and soon they turned off the interstate and drove ten more miles to Clarkton. As they passed through the center of the town Jo laughed. \"This is it?\" She made note of a post office, a K-Mart, two gas stations, a food market, a motel and a police station. \n\n\"Well no,\" he smiled. \"We have a Toys R Us being built next month.\" \n\n\"Wow,\" she laughed. \"Is that a movie theater?\" \n\nTom looked where she was looking. \"Yes we have two screens now.\" \n\n\"Is GONE WITH THE WIND still playing?\" She laughed. \n\n\"Now be careful,\" he warned. \"You can joke with me about Clarkton but the locals here take this town seriously.\" \n\nJo smiled as they drove by the high school. \"So this is the famous Clarkton High.\" She noticed a few guys shooting some hoops on the three asphalt courts. \"You know those guys?\" \n\nTom pulled into a parking space next to the court and the four guys stopped playing and looked to see who was in the car. Tom rolled down the window and stuck his face out. \"You guys suck!\" he yelled. \n\n\"Not as bad as you,\" one of them yelled back. \n\n\"Come on and meet the guys,\" Tom said to Jo and Karen as he exited the car. \n\nJo and her sister hung back as Tom bumped and pushed the guys. He turned to Jo. \"Guys this is my girlfriend Jo.\" \n\nJo blushed realizing it was the first time she had ever been introduced as someone's girlfriend. \"Hi,\" she said as she moved onto the court. \n\n\"This is Jake, Eric, Tim and Jason.\" Tom said as he pointed to each of them. \n\n\"Where did you find a cute girl like this in the big city?\" Jason said as he stared up and down Jo's body. \n\n\"Don't let him bother you,\" Tom laughed. \"He's a harmless virgin.\" \n\n\"Old news,\" Jason laughed. \"I'll tell you about it later.\" \n\n\"Hello!\" Karen yelled from behind Jo. \n\n\"Who are you?\" Eric asked as he dribbled the ball towards her. \n\n\"Hi, I'm Jo's sister Karen,\" she grinned. She could see the three guys ogling her chest. \n\n\"Eric told us you will be staying the weekend,\" Tim said. \"Will you have some time to play some hoops with us?\" \n\n\"Sure, how about now?\" Tom asked. \n\n\"I'll sit out and take the next game,\" Jake said realizing there were five guys. \n\n\"Na, Jo can play on my team,\" Tom said winking at her. \"Losing team buys lunch.\" \n\n\"As good as you are you won't have a chance against three guys,\" Eric said. \"I hope you brought enough money to buy some cheeseburgers at Carol's Caf\u00e9. \n\n\"You will need the money not me,\" Tom laughed. He walked over and whispered in Jo's ear. \"Can you play in that skirt?\" \n\n\"Against these chumps I can play in an evening gown,\" she smiled. \n\n\"OK but hold back at first until they get to five points,\" he whispered. \"You'll see why.\" \n\nJo did as Tom said and was frustrated not to drive around these hick boys to the hoop. The first team to 10 baskets won and when the score got to be 5 to 2 their favor Eric started in. 'Ummm, those cheeseburgers are starting to smell real nice. I don't even feel bad beating you with a girl on your team.\" \n\nJo was steaming as she walked over to Tom. \"Can I do it now?\" \n\n\"Yes,\" he grinned as he took the ball out and tossed it to her on the wing. Jason was the shortest guy and was guarding her. He stood smiling about six feet away from her daring her to shoot. Tom had to turn the other way to keep from laughing as Jo's body jumped high and her high arching shot swished through the net. \"5 \u2013 3,\" Tom announced. \n\nIt was winners out so Tom again tossed it to Jo. She was surprised Jason still stood back from her. She didn't hesitate as she again popped a long shot. All three boys turned and watched it swish. Nothing but net. \"5 \u2013 4,\" Tom grinned. \n\nEven country boys learn after they get burned twice. As Jo caught Tom's pass Jason moved quickly towards her. She faked another long shot and when he left his feet to block it she dribbled between his legs. Eric and Tim were too shocked to stop her as she jumped high to lay it in. \"5 \u2013 5,\" Tom smiled. \"You know I can smell those french fries too.\" \n\nAs Tom took the ball out he whispered in Jo's ear. \"Don't jump too high. I could see your panties on that last shot.\" \n\n\"Getting jealous?\" she asked with a grin. \n\n\"You guard Jake,\" Eric said to Jason. \"I'll shut her down.\" \n\nJo smiled as Eric stood spread-legged in front of her. She took the inbounds pass and dribbled back and forth between her legs. She knew if she offered the ball he would soon lunge forward to smack it away. As soon as he did she did a quick cross over dribble and sped around him. Eric was watching her lacy panties as she again laid the ball in the hoop. \"I believe it's now 6 \u2013 5,\" Tom laughed. \n\nAs Tom prepared to throw the ball to Jo again he heard Jason whispering to Tim, \"Who is she?\" \n\nEric was steaming now and didn't want to buy lunch. He knew the best way to stop her was to prevent her getting the ball in the first place. As Tom stood with the ball Eric moved in close and held out his hands to push her away from the ball. It was nothing new to Jo because all the teams tried to be rough with her. As Eric pushed her hard on her side she ducked back and pulled his body until he flew by her. Tom passed her the ball on her way to the hoop. More lacy white panties. \"7 \u2013 5.\" \n\n\"Jesus H. Christ!\" Eric shouted to Tim and Jason. \"Can't you guys give me some help? \n\n\"But Eric it's just a girl,\" Tom laughed. \n\n\"She's got to prove it to me she is a girl,\" he glared back at Tom. Tom knew it was not the thing to say to Jo. \n\n\"Why should I do that?\" Jo said seriously. \"You haven't proven to me you are a man.\" \n\n\"Bring it on!\" Eric said as he moved down into the standard defensive stance. \n\nJo didn't smile this time and she dribbled left and then right. She dribbled up to him and then back. Eric thought he was stopping her but Tom knew she was just playing. The ball moved so fast between her legs and behind her back Eric suddenly became dizzy and tired. As he focused on her dribbling around him she moved into him and then back to shot a twenty foot jump shot. This time it hit the rim but rattled in. \"Damn, its 8 \u2013 5,\" Tom grinned. \n\nEric turned and huddled with Jason and Tim. \"Tom wants her to beat us so now we all guard her. If I'm going to loose it will not because a girl beat us.\" \n\nEven Tom was surprised when all three guys guarded Jo. He knew he could throw the ball to Jake who was standing alone under the basket waving his arms but wanted to get it to Jo. When she ran up to him he pressed the ball into her hands. \"Clear out,\" she grinned. Tom moved to the side and stood watching Jo dribble around with three 18 year-old boys trying to take the ball from her. \n\nShe faked Eric to the right and when he lunged back he crashed into Jason who was coming the other way. When they banged apart Jo cut between him. Only Tim was between her and the basket. She surprised him when she shot the ball quickly. When he turned to see if it missed or not she ran around him and took the rebound and laid it back in. \"9 \u2013 5,\" Tom laughed. He motioned for Jake to come back by him so Jo had the whole court to finish them off. \n\nJo knew the last point would be tough and they would do whatever it took. She knew she also had one advantage left that she would now pull out. She dribbled in place at mid-court smiling as the three guys moved closer and closer to her. Tom and Jake stood on the sideline. \n\n\"You will not score,\" Eric said sternly. \n\n\"You questioned if I was a girl before,\" Jo said smiling. As she dribbled with one hand the other hand grabbed the bottom of her sweatshirt and pulled it up over her breasts. She giggled as his eyes opened wide. \n\nAll three guys froze when they saw her pink mounds trying to burst out of her too tight bra. The white lace did little to hide her dark nipples. Before they could react, Jo shot the ball over their heads. They didn't have to turn to know it went it because the sound of the nets snapping back told them. \"10 -5,\" Tom laughed. He grabbed her sweatshirt and pulled it back down over her bra. \"This is a small town remember?\" \n\n*****\n\nJo thought the other three guys might be pissed that she beat them single-handedly but the opposite was true after she flashed her chestly treasures. \"Wow, you are some player,\" Jason said as he moved closer to her. \"What is your last name?\" \n\n\"Thompson,\" she giggled. She was not used to all the male attention she was now getting. \n\n\"Not THE Josephine Thompson,\" Eric said smiling. \n\n\"Don't act like you know her,\" Tom said embarrassed that his friends would be making such a fuss over her. \n\n\"First team All-America on many of the major sports networks. You made the McDonald AA team too right?\" Tim asked. \n\n\"Yes,\" she blushed. \"The game is in a few months.\" \n\n\"No wonder you kicked our asses,\" Eric said as he smacked her lightly on her back. \n\n\"So are you going to UCONN or Tennessee?\" Jason asked. \n\nJo looked at Tom because they had not talked about her getting the ship offers. \"I'm not sure.\" \n\n\"Tina told me about the offers,\" Tom whispered. \"Hey, I'm hungry for my cheeseburger deluxe. Let's get down to Carol's.\" ",
        "Tom noticed the other four guys did not have a car. \"You guys want to meet us there?\" \n\n\"Nonsense,\" Jo smiled. \"Tim is the biggest so he can ride in the front with Karen and I'll ride in the back with the other guys.\" \n\n\"But...........\" Tom started to say but it was too late as Eric, Jason and Jake sat in the back and Jo crawled onto their laps. She moved her body until she was lying across all of them. Karen smiled at Tim as she jumped on his lap. \n\n\"Be careful back there,\" Tom said nervously. He could see Eric's hand on her leg, Jason's on her waist and Jake's hand supporting her head. Her skirt had ridden high enough for both him and Eric to see the thin white strip of her panties. \n\nAs Tom backed out of the space he heard Jo giggle. He tried to look over his shoulder but couldn't see why she was laughing. \"Be good with my girl!\" he warned as he turned the car out of the parking lot. He was going too fast when the car hit the speed bump and Jo's body jumped up and then hard back down again. \n\nJo realized for the first time Tom was jealous of her instead of the other way around. And for the first time she was had the attention of three horny guys under her body. She pushed her elbow down into Jason's lap and immediately felt his penis under his shorts. It was so nasty she thought as she looked down to see her skirt riding high over the vee of her panties. She slightly opened her legs to give Eric a good view of the blonde bush through her semi-sheer panties. Suddenly the car hit another speed bump and Jo's head pushed down on Jake's lap. She giggled again when she felt his hard-on against her head. She knew if she turned her head she could kiss it if she wanted to. She giggled again and saw Tom try to look back in the rearview mirror. \n\nEric's fingers on her leg was moving cautiously north towards the silky white of her panties which were now almost totally exposed. Just a little more and his fingers would be pushing into the softness of her pussy mound. The car hit the last speed bump and Jo's body rose again and fell again. \n\nJake moaned when her head turn slightly which caused her face and mouth to push against the hard bulge in his nylon shorts. So did Jason when she moved her hand to her elbow and brushed her fingers up and down his hard shaft. It was Jo who moaned when Eric's fingers pushed hard between her damp thighs against the panty-covered swollen lips of her covered pussy. \n\n\"What's going on back there?\" Tom yelled when he heard the moaning and laughing. \n\n\"Nothing,\" Jo giggled as she grabbed the hem on her skirt and pushed it down her legs. Eric thought she would push his hand away but she left it covered. No one but Tom had really touched her there and since he messed around with May it was pay back time. They were two blocks from the caf\u00e9 when Eric's middle finger tried to move under her panties but Jo grabbed his wrist. When the car stopped Eric immediately pulled his hand from under her skirt and Jo moved her hand from Jason's lap. \n\n\"Wow,\" Jo giggled when Tom opened the side door and she crawled out over their bodies. \n\n\"Looks like you guys had just a little too much fun,\" he said looking at their hard-ons. He grabbed Jo's hand and led her into the caf\u00e9. \"What do you think you are doing?\" \n\n\"Why are you jealous?\" she asked. \"Now you know how it feels.\" She pushed him away and headed for the restroom with Karen to dry out her panties. \n\n\"Did you have a good time riding on Tim's lap?\" Jo asked her sister. \n\n\"Yes, but he was too shy. When I tried to move back he kept pushing me forward. I guess these country boys are not as aggressive as our guys back home.\"\n\n\"I wouldn't say that,\" Jo laughed. \n\n\"God Tom she is great,\" Eric said when he walked over to the booth where the four guys were sitting. \n\n\"Hands off,\" he said smiling. He still was taller and stronger than the four of them. \n\n\"Hi Tom,\" a voice behind him said. He turned and saw Tracy. \"Shit,\" he thought. \"She did not know about him and Jo.\" \n\n\"Why didn't you tell me you were coming home this weekend?\" \n\nTom looked at her and saw the guys trying to hold back their laughter. They knew Jo was in the restroom. \n\n\"Aren't you at least going to give me a hug?\" she said blinking her blue eyes. \n\nTom glanced at the restroom door and held his arms open for her to move into them. He tried to push her away but she held on tightly. He heard the door open and again pushed her back. This time her lips pressed against his. This time he used more force to get her away from him. He turned and saw Jo's shocked expression. Shit. \n\nTracy saw him looking behind her and turned to see Jo standing there. \"What is she doing here?\" \n\n\"She came with me,\" Tom said. \"We are going out.\" \n\nTears formed in Tracy's eyes. \"You could have at least told me.\"\n\n\"I did tell you it was over Tracy,\" he whispered hoping she would let it go. He glanced at the door and noticed a couple of young girls that had lived on his street and had thought he was the greatest person alive. He knew they would make a fuss over him. \n\n\"Hi Tom,\" the cute little thirteen year old blonde said smiling. \n\n\"Hi Amber,\" he said smiling. He held out his arms for a hug but she pushed him aside and walked up to Jo. \n\n\"Are you Josephine Thompson?\" Amber asked shyly. \n\n\"Why yes,\" Jo replied. She was still glaring at Tracy who had walked to the other side of the restaurant. \n\n\"Could we have your autograph?\" Both girls asked at the same time. \n\nOthers in the restaurant were now whispering and the word was out that a high school first team All-American girl basketball player was in Carol's Diner. \n\n\"Sit here,\" Eric said to Jo as she walked to the booth. She blushed and looked back at Tom who was quickly following her. Jo sat down on the end of the booth bench which left no room for Tom. \n\n\"Sit next to me,\" Karen said smiling. She had Tim on the other side of her. \n\nThings were not going as planned for Tom. People kept coming up to Jo to shake her hand or to get her autograph. He was quickly forgotten. He also kept peeking at how close Eric was sitting to his girlfriend. Suddenly his cell phone rang and it was Grandma Bell.\n\n\"Tom you got letters today from both the University of Connecticut and Tennessee. Do you want me to open them for you?\" Bell asked. \n\nTom glanced over at Jo who was laughing as Eric whispered something in her ear. \"Yes read them to me.\" \n\nTom waited until Bell read them both. It seemed both schools were suddenly interested in Tom's game and said they wanted to send some coaches out to watch him play. \"Thanks Grandma,\" he said. \"Yes, Jo likes it here very much.\" He looked at Jo who smiled back at him. \n\n\"Is everything OK?\" Jo asked. \n\n\"Yes, it seems both Tennessee and Connecticut are both interested in me now.\" \n\nJo knew right away the schools were interested in Tom because they wanted her to come to their schools. \"Good,\" she said smiling. \n\nThey were almost finished eating when a tall man walked up to the booth. Tom recognized him as the mayor. \n\n\"Welcome back Tom,\" he said shaking his hand. \"I hear we have a celebrity among us?\" He looked at Karen sitting next to Tom. \n\n\"Not I,\" Karen said smiling. \"It's my sister.\" She pointed to Jo. \n\n\"Ms. Thompson let me welcome you to Clarkton and if you need anything at all please call me personally,\" the mayor said as he handed her his business card. \n\n\"Thank you,\" Jo blushed. \"I love your town.\" She felt Eric's fingers tickling her left thigh. \n\nAfter the mayor left Tom grabbed Jo's arm and pulled her from the restaurant. As they walked towards his car he let her have it. \"When are you going to act like my girlfriend instead of like your sister?\" \n\n\"I thought you liked what my sister did to you?\" Jo shot back at him. \"And what the hell was that kiss with Tracy back there?\" \n\n\"I couldn't stop her,\" Tom answered. \n\n\"Well I couldn't stop Eric touching my leg either,\" Jo answered. She didn't want to tell him Eric was touching her pussy through her panties. \n\n\"And, don't think I don't know about the Tennessee and Connecticut letters,\" Tom shot back. \"They are only interested in me because of you.\" \n\n\"So, at least it will give you a chance to be seen by them,\" she replied. She could see he was pissed off and needed to calm down. \"You are good enough to play for either of those teams.\" Jo moved up to him and hugged him into her body. The other guys had turned her on so much she wanted him right there right now. \n\n\"Where can we go and be alone?\" she whispered as she nibbled on his ear. \n\n\"What about the rest of them?\" Tom whispered back. \n\n\"I'm sure Karen can handle them,\" Jo giggled. Karen had told her she had hoped to lose her cherry this weekend and now she had four guys to pick from. Tom remembered where the old swimming spot down by the river. \"How about a skinny dip down at the river?\" \n\n\"Is it private?\" she asked as she rubbed her thigh against his hard-on. \n\n\"It should be because the whole town is in the restaurant looking for your autograph,\" Tom whispered. \n\n\"Let's go,\" she giggled. \n\n\"Lets!\" he laughed as he smacked her lightly on her cute little ass. \n\nThey hurried to open the door and Tom sped from the parking space. \n\n***** \n\n\"Hey, Tom's leaving with Jo!\" Eric shouted as he peeked out the door. \"Let's go find them.\" \n\nThe three other guys stood but Karen stopped him. \"Why don't you leave them alone? After all you have Jo's twin sister.\" She smiled and stuck her breast out at them. \"Why don't you all give me a tour of your town?\" \n\n\"Let's go get my car,\" Tim said smiling. Karen was cuter than any other girl in Clarkton except for Jo and she was taken. The five of them walked quickly down the street. \n\n*****\n\n\"Are you sure no one can see us?\" Jo asked as they walked down the long dirt path from the roadway. \n\n\"Yes,\" Tom laughed as he grabbed the bottom of her sweatshirt and pulled it upward until it escaped over her blonde head. \n\n\"TOM!\" she cried as her hands covered her bra-covered mounds. \"We are not there yet.\" \n\n\"You have to be naked when you get there because you have to jump off the cliff,\" he laughed. \n\nBefore she could stop him he released her bra and pulled it down her naked mounds. \"Cliff? I'm not jumping off any cliff!\" she screamed. Tom pulled on her skirt and it slithered down to her feet. She stood in only her white laced panties. \n\n\"Sure you are,\" Tom laughed as he quickly undressed and grabbed her clothing. He ran ahead of her. \"If you want your clothes back you'll jump,\" he laughed as he ran through some thick underbrush. \n\nJo heard his scream and then heard a loud splash. She ran through the bushes and almost fell over the small cliff. She looked down about fifteen feet to see their clothes floating in the water. Tom had not surfaced. \"TOM WHERE ARE YOU?\" she screamed. She waited for ten more seconds. \"TOM OH GOD TOM WHERE ARE YOU?\" She wondered if he had drowned. Just the thought of losing him took away all fear as she took a running jump out over the water. She didn't know how deep it was and didn't care. She had to save him. \n\nTom sat on the rocks below the cliff and smiled when he heard her calling his name. Their clothing was starting to drift down the river and he had to get it soon or it would be gone. Suddenly off the cliff came Jo's panty covered body feet first into the cool water. He hoped she could swim as he waited for her to surface. \n\nJo' feet hit the sandy bottom and she opened her eyes to look around for Tom. She was a very good swimmer and used her ability to swim underwater looking for him. She had to take a breath so she quickly surfaced. As she started to go back down she saw him standing on the rocks waving. \"I'm going to kill you!\" she grunted as she swam like a shark for the kill. \n\nTom stood in his dripping boxers as she swam up to him. He pulled her up out of the water. \"That was mean,\" she said as she reached into his boxers to pull out his el. \"I thought you had drowned.\" \n\n\"Sorry, it's a prank we play on all the kids in town,\" he laughed. \n\n\"Did you play it on Tracy?\" she asked as she stroked him until he was rock hard. \n\n\"No she wouldn't play the game,\" he said remembering the time he had stripped to his underwear but she wouldn't do it. \n\n\"Good,\" Jo giggled. She looked around for a place they could get together. \n\n\"Back here,\" Tom said as he led her behind the rocks. As they sat down on the soft sand Jo realized no one could see them unless they were on the river. \n\n\"Hurry,\" Jo moaned as she pulled off her damp panties and waited on her back for him to join her. As his shaft slipped slowly into her quim she curled her legs around his hips. A few months ago Jo would have never guessed she would be fucking a guy on a river bank out in the open like this. \n\n\"God Jo you don't know how many times I thought about making love here at this spot,\" Tom moaned as she sucked on his hard nipple. \n\n\"Who did you imagine doing it with?\" she giggled. Their bodies were joined and were moving as one. \n\n\"You,\" he lied. \n\nShe bit down on his nipple. \"OUCH!\"\n\n\"OK, she was nameless but I know now it is you.\" \n\nHer lips moved up and sucked in his tongue and his fingers explored her back and ass. \n\n\"I'm getting close,\" Tom warned as he tried to hold back as long as possible. \n\n\"Not yet,\" she moaned as she pushed her hips upward until her clit was rubbed by his shaft. \"OK...I'm getting.........a little bit more.........NOW!\" she cried as she climaxed. Tom let go as soon as he heard the NOW. \n\nAs they lay hugging in the sand Tom said, \"I can't believe I just fucked the famous Josephine Thompson.\" \n\nJo smacked him on his white ass cheek and suddenly sat up. \"Where are our clothes?\" \n\n\"OH SHIT!\" Tom said as he jumped up and ran to the river bank. He looked down river as far as he could but they were gone. \n\n\"What are we supposed to do now?\" Jo asked as they stood bare ass naked on the river bank. \n\n\"You have your panties and I have my boxers,\" Tom laughed. \n\n\"Yeah, I'm sure Clarkton will love it when we go driving back through the town like this.\" \n\nAs they found their underwear and were putting it on they heard someone scream and then a loud splash in the water. Tom grabbed Jo's arm and pulled her behind some small trees. They glanced out to see a head submerge. It was Eric. \n\nThey heard two more screams and then Jason and Tim splashed down in the water. Jo and Tom got great shots of their naked ass just before they hit the water. \n\n\"I wonder if Karen is with them,\" Jo whispered to Tom. Suddenly a bunch of clothing fell from the cliff onto the rocks by the water and off the cliff came Jake's naked body. \n\n\"Come on don't be chicken,\" Eric shouted up at Karen who stood on the ledge looking down at four naked boys in the water. \n\n\"Do you think she will do it?\" Tom whispered in Jo's ear. \n\n\"Duh,\" Jo smiled. \"Four naked boys waiting for her. What do you think?\" \n\nTom didn't have time to think because Karen's dress fell down onto the rocks. \n\n\"Yeah!\" Tim yelled as he looked up at the golden goddess on the cliff reaching back behind her to release her bra. As many times as these boys had taken girls to the cliff none of them had undressed until now. Four hard-ons in the water were waiting impatiently for...........suddenly Karen pulled off the bra and stood displaying her firm breasts and pink nipples. \n\n\"You want me to take these off too?\" she teased as she toyed with the waistband of her thongs. \n\n\"YES! HELL YESS! DO IT! PLEASE!!!\" the boys chanted from the water. \n\n\"OK but you have to turn around,\" Karen yelled down. \n\nThe four boys immediately turned and did not see the black thongs fall to the rocks. They didn't know Karen had done it until her body splashed in the water behind him. \n\nKaren was also a very good swimmer and as soon as she hit the water she moved underwater towards the four guys. As they turned she got to check out their torpedoes. Of the four Eric was the biggest followed by Tim, Jason and Jake. She smiled as she surfaced in front of them. \n\n\"What do we do now?\" she asked. \n\n\"What do you want to do?\" Tim asked with a grin. He could barely see the tip of her nips through the clean water. \n\n\"How about Marco Polo?\" Jake asked. He moved towards the shore until he could stand with just his head out of the water. \n\n\"OK,\" Karen laughed. \n\n\"You're Marco first,\" Jake said as he swam away from her. Karen closed her eyes and moved towards where the boys were. She felt the bottom so she started walking towards them with her eyes closed and her hands straight out and that when she touched one of their hard-ons. \n\n\"MARCO!\" Karen giggled as she fondled the six-inch shaft under water. \n\n\"POLO!\" Jake cried out as she grabbed his balls and squeezed. \n\n\"You're it,\" Karen laughed as she moved away from him towards Tim who was grinning as her wet blonde mop moved his way. \n\nJake now glanced where Karen was and closed his eyes. As he moved in her direction he said, \"MARCO!\" \n\n\"Come with me,\" Tim said to Karen as he pulled her to the left. He shouted \"POLO\" to throw Jake off. \n\nKaren felt Tim's strong hand on her elbow as they moved backwards away from Jake. Suddenly Tim stopped but Karen's backside kept coming until her butt pushed into his lower stomach. Karen giggled and reached back to grab his prick. \n\nEric swam underwater up to Karen and saw her legs spread and the shadow of her bush. He moved forward until his face pushed between her legs and his tongue flicked across her virgin gash. \n\nIt was Karen's dream to be sandwiched between two naked guys. She jerked one of them off while the other one licked her pussy underwater. \n\n\"MARCO!\" Jake yelled when he realized she must have moved. \n\n\"POLO!\" Jason yelled from behind him. Jason could see Karen between Tim and Eric and wanted to lead Jake towards them as well. He moved to within a foot of Karen's body when her fingers moved out to curl around his shaft as well. \n\n\"MARCO!\" Jake yelled as he walked past the four hot bodies. No one answered so he peeked to see Karen being touched by Eric, Jason and Tim. \"Hey,\" he said as he moved towards the pile of bodies. \n\nKaren was in heaven because four naked guys were touching her and she them. She quickly compared the size and hardness of their penises and moaned when their fingers discovered she was a virgin. The only question she had was which guy was going to take her cherry. \n\nEric surfaced and his lips found hers. She broke away and said, \"Let's go to the bank.\" \n\n*****\n\nJo envied Karen in one sense because she had eight hands caressing her and four pricks to touch. \"Maybe I should go help her,\" she whispered to Tom who she discovered was hard again. \n\n\"No way,\" he chuckled as they watched the five of them walk onto the bank. \n\n\"Ummm, all those naked guys,\" Jo giggled when she saw four pricks swaying back and forth as they walked to the sandy area where she and Tom had fucked only minutes before. \n\n\"You don't like the one you have?\" Tom asked as he aimed his hard tip between her buttocks. She moved down on her hands and knees and continued to watch Karen move on her back. Tom's prick slipped between her thighs and into her dampness. \n\n\"I like it,\" Jo whispered. She watched as Eric moved down to lie with Karen first. Would he be the one?' \n\n\"Hey,\" Jake said seeing Eric move between her thighs. \"Don't we all get a chance?\" \n\nKaren laughed and looked at the other three guys standing over her with their hard-ons on display. \"The first guy to swim out to that rock gets to be first.\" She looked at a large rock in the middle of the river. Suddenly the three guys took off. \"HEY!\" Eric yelled when he saw them get a head start. As he stood to run Karen pulled him back down. \"I just wanted to get rid of them. I want you to be first.\" Her hand grabbed his body and pulled him between her open thighs. ",
        "*****\n\n\"That's my sister,\" Jo grinned when she heard what Karen said and what she did with Eric. She laughed softly as she watched the three guys swimming like crazy to the rock. None of them realized Eric was between Karen's legs pushing into her virgin gate. \n\n\"I hope he doesn't get her pregnant,\" Tom moaned as he pushed his whole length into Jo's hot oven. He suddenly realized he could get Jo pregnant. \"Shit,\" he said as he pulled out. \"I didn't use a rubber before.\" \n\nJo laughed. \"Our mother put us both on the pill.\"\n\n\"Good,\" Tom grinned as he restaked his claim to Jo's honey pot. \n\n*****\n\n\"Don't stop,\" Karen cried out as Eric broke through her maidenhead. \"Give it to me.\" \n\nEric had lied when he told Tom before he was not a virgin anymore but now he definitely wasn't and her hot pussy was too much for him to take. \"OH SHIT!\" he cried out as he climaxed. \n\n*****\n\n\"That's it?\" Tom laughed when he heard Eric's moan of pleasure. \n\n\"You weren't much better,\" Jo laughed remembering the first time in Tina's parent's bed. \n\n\"How am I now?\" Tom said as he pumped back and forth. \n\n\"You're getting a little better,\" Jo said feeling the dam about to burst. She looked out and saw Tim running up onto the river bank with his seven inch penis flopping up and down with each stride. \n\n*****\n\n\"Hey that's not fair,\" he said seeing Eric's body move from between Karen's thighs. \n\n\"He just got me ready for you,\" Karen said grinning. She pushed Eric away and pulled Tim into his place. \"This is not a race so take your time,\" she whispered as she grabbed his hard prick and aimed it at her broken gate. She moaned when his thicker shaft pushed inside of her. \n\n*****\n\n\"Shit, she's going to fuck them all,\" Jo whispered when she saw Tim take Eric's place. \n\n\"She's a hussy,\" Tom laughed while remembering what Grandma Bell had called her. \n\n\"What's a......................Hussy?\" Jo moaned. Tom's finger snaked under her stomach and found her hard clit. \n\n\"Not sure but it's definitely Karen,\" he moaned. \n\n\"I'm going to.....................come.............again.\" Jo moaned. \n\n\"Meee tooooo!\" Tom cried as he smacked against her ass. They had to bite their tongues to keep from being heard. \n\n****** \n\nTim lasted a little longer than Eric but not much. Karen glanced over Tim's shoulder and saw Jason waiting in line. \"Next,\" she laughed. \n\n\"This is my first time,\" Jason whispered to let her know he was not that experienced. \n\n\"Mine too kinda,\" she whispered realizing that Eric took her cherry but all four would get credit for fucking her. \"A little higher,\" she giggled when she felt his tip pressing against her anus. When he discovered her hot opening there was no holding back. \"SLOW!\" she yelled when his ass took off like a jack rabbit. She smacked him hard on his left buttock. \n\n\"What was that for?\" he asked looking into her eyes. \n\n\"Slow down and touch me,\" she said seriously. \n\n*****\n\nTom pulled Jo back and told her to put on her panties. He whispered to her and they moved slowly out of the line of trees. None of the guys or Karen saw them walk to the rocks and pick up the clothing. Jo grabbed Karen's dress and Tom grabbed Eric's shorts and tee shirt. \"Let's go,\" he smiled as he led Jo to the dirt path leading back to the car. \n\n\"They are going to kill us,\" Jo laughed as she pulled on Karen's dress and watched Tom pull on Eric's clothing. \n\n\"Na, they are so happy being laid for the first time they won't care,\" he laughed. \n\n*****\n\nKaren was almost there when Jason made a horrible face and cried out. \"OHHHHH!\" She didn't waste no time as she pulled him from her legs and pulled Jake down to take his place. She was surprised that Jake took the time to touch and kiss her. \"Aren't you going to put it in?\" she asked as he nibbled on her nipples. \n\n\"We have time for that,\" Jake smiled as he rubbed her little clitty. When her body was begging for him he entered her. \"OH GOD JAKE!\" she screamed when she came. She was now a woman and it was the smallest penis that had gotten her off. She held onto him for almost three minutes until she heard Eric's scream. \n\n\"Where are my clothes?\" \n\nThey all moved to the rocks and discovered Eric's and Karen's clothing missing. \"Maybe they fell into the water?\" Jake asked. \n\n\"What are we going to do?\" Karen asked. She stood naked with her bra and panties in her hands. \n\n\"Get in the car and hide down when we go through town,\" Eric said to her. He knew he had a pair of swim trunks in his trunk. \n\n*****\n\nJo and Tom realized they had their bags when they got back to the car but it was too late. They quickly removed Eric's and Karen's clothing and redressed into their own. They were sitting on the porch of Eric's house when Eric pulled up with an almost naked Karen giggling in the back seat between Jake and Jason. \n\n\"Someone stole our clothing,\" Eric said as he climbed from the car in his swim trunks. \"We were swimming in the river and someone took our clothes,\" he turned and everyone looked at Karen who stood proudly in front of his car in only bra and panties. \n\n\"What's everyone looking at?\" she giggled as she walked over to her bag sitting next to her sister. \"Would you open the door so I can get dressed?\" she whispered to Eric. Tom and Jo followed Eric and Karen into the house. \"Now you guys need to go home,\" Eric said to Jake, Jason and Tim who tried to get into the door as well. \n\n\"So what were you doing skinny dipping with four guys?\" Jo asked her sister as they stood in one of the bedrooms upstairs. \n\nKaren smiled. \"I'm not a virgin anymore.\" \n\n\"Halleluiah!\" Jo cried out. \"Which one was it?\" she asked although she knew the answer. \n\n\"Eric,\" Karen smiled. \"And we will be here for two more nights.\" \n\nThat evening after eating a pizza the two couples paired off in private bedrooms upstairs and didn't get to sleep until all four were completely exhausted. It was three AM when things finally settled down. \n\nThe next morning Jo woke up before Tom and headed to take a shower in the hall bath. Eric was downstairs and had just finished breakfast when he heard the shower running upstairs. He gulped down the last bite of the left over pizza and hurried upstairs to join Karen in the shower. She had told him she would be in the shower when he came back upstairs. \n\nJo's tired body was under the hot water spray when Eric slipped into the bathroom. He gently closed the door and tiptoed to the shower stall. He could see her pink nakedness through the frosted glass and smiled as he pulled open the door and climbed inside. He didn't say anything and just reached out and massaged her cute buttocks. \n\n\"Ummm,\" Jo moaned feeling, who she thought was Tom's, hands on her ass. She closed her eyes and moved back until his hard-on pressed against her butt. She didn't complain when his fingers moved under her arms and cupped her firm orbs or when his fingertips toyed with her hard nips. \n\nEric saw her move her hands against the front wall and opened her legs for him to fuck her from the rear. It was kind of slippery so he held onto the side rail of the door as he aimed his prick under her ass and across her moist slit. He pushed forward until the spongy crown entered her inner lips and then slowly inside almost an inch. Shit from the way she was positioned he could only get about an inch inside. \n\nJo was puzzled when his pubic mound crushed against her ass and he was only an inch inside. She pushed forward until he slipped out and then reached back to touch him. It only took her a second to realize the smaller dick she held in her fingers did not belong to Tom. \n\nShe thought about turning around and confronting him but realized he probably thought she was Karen. She had never touched another guy's bare penis besides Tom's and now had the chance. She wouldn't let him fuck her but maybe she could take a few minutes to explore. Her fingers moved down over strange hardness until she cupped his sac. \n\n\"What are you doing?\" He asked as she continued to explore and touch. After another minute she turned and looked at him. \n\n\"Eric I'm Jo,\" she whispered as she looked down at his hard-on. \"I thought you were Tom.\" \n\n\"Shit,\" he said. \"I thought you were Karen.\" \n\n\"It's OK,\" she smiled. \"I won't tell if you won't.\" She looked down again at his hard-on. \"I think I need to take care of that before you walk out of here,\" she giggled. \n\n\"What do you mean?\" he asked. He didn't want to piss Tom off. \n\n\"Tom's the only guy I've been with.\" \n\n\"You want me to..........?\" \n\n\"No, not that. I want to jerk you off. Can I?\" She smiled as she curled her fingers around his penis. \n\n\"I don't think we should do this,\" he moaned as her strong fingers started on their mission. \n\n\"Shhh, close your eyes and enjoy it,\" she giggled. She explored his sac with one hand as she stroked him with the other. \"Don't tell Tom you were inside of my pussy,\" she whispered. She felt his prick jump when she said pussy. She pumped him faster. \"Did you like the feel of my pussy?\" She giggled knowing he was ready to cum. \n\n\"OH GOD YES,\" he cried as he sprayed her stomach with his hot white juices. She laughed and turned into the shower to clean off her body. \n\n\"Now get out of here before Tom or Karen comes snooping around,\" she said. She heard the door close and smiled. \"Maybe now we are even Tom,\" she thought. \n\nThe rest of Saturday Tom showed Jo and Karen around Clarkton where he used to live and the Catholic Church his family went to. They met the priest and he had to get Jo's autograph as well. Eric stayed away from Jo as much as possible and a few times when they made eye contact they both quickly looked away. Tom saw something was going on and pulled Eric aside. \n\n\"What the fuck is going on between you and Jo?\" he asked as he pushed his friend up against the wall. \n\n\"Nothing,\" Eric said. \"I just don't want you to think I'm hitting on your girl.\" \n\n\"Well I hope not,\" Tom laughed. \"I think Karen has fallen in love with you.\" They both looked over at Karen eating a hotdog who smiled at them. \n\n\"She's nice,\" Eric said. Even thought the two girls looked alike it was Jo who turned him on more. \n\nIt was later that night when Jo was getting a glass of milk in the kitchen that Eric hit on her again. \"Why don't we slip away together tonight when Tom and Karen are asleep?\" he whispered. \n\n\"I thought Tom was your friend?\" Jo asked. \"What happened this morning was a mistake. It won't happen again.\" \n\n\"I hope Tom won't find out,\" Eric said sharply. He didn't know not to rile Jo up. \n\nJo grinned. \"If he does find out you just might lose this little dick of yours.\" She grabbed the crotch of his pants. \"We don't want that to happen do we?\" \n\n\"Nooo,\" Eric grunted. \"I won't say a thing.\" \n\n\"Good,\" She said as she let go of his privates and walked into the den carrying her milk. \n\nThat night no one slipped away as the two couples made another sex marathon of it. This time they went to sleep at midnight. \n\n\"I have something to do,\" Tom said the next morning after breakfast. \"I'll be back shortly.\" \n\nJo did not want to let Tom loose in Clarkton because she knew Tracy was waiting for the chance. She ran out as he was pulling away. \"Where are you going?\" She asked suspiciously. \n\n\"I have to see my cousin Jack,\" Tom answered. He kissed her and pulled out of the driveway. \n\nJack was working at his father's gas station when Tom pulled up. When he saw him walk through the doorway he immediately picked up a tire iron he had kept next to him when he had heard Tom was back in town. \n\n\"Stay away from me or I'll use it!\" Jack yelled as he held it back to strike at Tom. \n\nTom laughed. \"I'm not here to fight so put down the stupid tire iron.\" He sat on a small wooden folding chair across from Jack. \n\nJack cautiously dropped his arm but continued to hold on to the tire iron. \"I didn't mean for it to happen.\"\n\n\"You sound like Tracy. That's what she told me too.\" \n\n\"I'm sorry Tom but I thought you would not come back for her.\" \n\n\"At first I thought I would until I met Jo,\" Tom grinned. \"I thought I loved Tracy but now realize it was not love.\" \n\n\"I heard Jo was a real looker,\" Jack said as he dropped the tire iron on the floor by his chair. \n\n\"The funny thing is that it was not her looks that drew me to her. She is straight forward and if she has anything to say she says it. She was my best friend before I realized I loved her.\" \n\n\"You're lucky,\" Jack said. \"Tracy hasn't looked at me since she returned from the city.\" \n\n\"Believe me you are better off without her,\" Tom said. \"Tracy only cares about herself. I'm sure she will survive. I just wanted to say there are no hard feelings between you and me.\" \n\n\"Cool,\" Jack said as he stood and hugged his first cousin. \n\n\"Care if I used your restroom?\" Tom asked. Jack said no and when the door closed he saw Eric's car pull up to the pump and a short blonde haired girl come running out. Before he could say anything she ran up to him and grabbed his shirt collar. \"Where's Tom? If you hurt him I'll kill you.\" \n\nJack tried not to laugh. \"You must be Jo. Tom's alright and is in the rest room.\" \n\nTom washed his hands and was surprised to see Jo letting go of Jack's shirt. \"What are you doing here?\" \n\n\"I.......\" She started to say but realized she had put her two cents into something she shouldn't have. \n\n\"She just wanted to stop and say hello,\" Jack laughed as Jo moved back from him. \n\nTom said goodbye to his cousin and pulled Jo over when they got back to Eric's house. \"I told you to stop fighting my fights,\" he said trying to be serious. \n\n\"I know but I'm not used to loving someone so much,\" Jo said as she looked down at her feet. \n\nTom pulled her face up to his and lightly kissed her lips. \"That's what I love so much about you.\" \n\nAs they packed Tom's car Eric told Karen he loved her and glanced over at Jo who glared back at him. He promised to visit Karen during the summer and stay by Tom. \n\n\"I think I'm in love,\" Karen said from the back seat as the car sped back to the city. \n\n\"Which one?\" Jo laughed. \n\n\"Why Eric of course,\" Karen answered. She did not know her sister had watched the gang bang on the river bank. \n\n\"Good maybe you'll now leave Tom alone,\" Jo smiled as she moved closer and pulled his right arm over her shoulder. \n\n*****\n\nTom dropped off the girls and did not see Jo again until the next morning. \"I can walk you to school right?\" \n\n\"Sure, but we can't see each other during the week after school,\" Jo answered. \"We only have a few more weeks. Did you call the Tennessee and UCONN coaches back?\" \n\n\"Yeah, they said they heard about me after I scored 24 points against Trinity and want to come to this weekend's game with Holy Family.\" \n\n\"Good,\" she said smiling. If Tom got a scholarship to one of those schools they could still be together. \n\nThe week went real slow and both Jo and Tom were dying to see each other. Tom stayed in the locker room when Jo played in the first game and it worked because Jo scored a school record forty points and Central beat Holy Family 85 to 56. \n\nAs Tom ran from the locker room with the guys for the man's game he noticed Jo talking to a woman and a man in the bleachers. He saw them looking at him and smiled as he popped a twenty footer during the warm-up. \n\n\"OK, work the ball around to Calvin and Tom,\" Father Tim said to the team during the huddle. \"We can beat this team but we have to play as a team.\" \n\nAs Tom walked onto the court Calvin whispered, \"I know the coaches are here to see you but don't be a ball hog.\" \n\nTom had never been accused of being a ball hog before. \"Same back at you.\" \n\nHoly Family had heard about Tom so he didn't have the chance to surprise them. They put their best defender on him and the guy stayed in his face the whole first quarter. He managed to score on a steal and two more baskets on rebounds. But he only had six points and a few times Calvin did not throw him the ball when he was open. \n\n\"Fuck Calvin pass the ball,\" Tom said to the shorter guy when they lined up for a foul shot. Central was down by ten to a team they should be beating. \n\n\"Get open,\" Calvin snapped back at him. \n\nTom finally managed to hit a long three at the buzzer to cut the Holy Family lead to six and push his own total to nine at the half. As he walked down the hallway to the locker room someone grabbed his arm and pulled him into one of the doorways. \n\nHe turned to see Jo. \"What are you doing here?\" \n\n\"The guy is playing you to go right so you have to go left a few times to keep him honest,\" Jo said hoping he wouldn't be mad. \n\nTom was about to snap at her when one of his team mates walked by. She was right. He always favored going right and every time he did tonight the guy cut him off. \"Thanks,\" he said smiling. \n\nFather Tim chewed out both Tom and Calvin and told them both they had to step up their games in the second half. It was the last regular season game and they had to win to tie Trinity. He said a few prayers and the team rushed back out onto the court. Again he saw Jo sitting with the two adults. \n\nIt took Tom about ten seconds to realize how right Jo was. He faked going right and saw his defender rush to that spot. Tom made one dribble left and rose to shoot a long three. SWISH! He looked up at Jo and winked. \n\nFor the next two trips down he did the same until the defender started guessing left and then Tom went right. After three more long threes the Holy Family coach called time out and Central had a five point lead. The fans were going wild and the team mates were slapping Tom on his back. Tom looked over at Calvin. \"They will double team me so now we need you to hit some too.\" Calvin smiled as they walked back on the court. \n\nTom was correct because as soon as he cut to the left Calvin's man cheated in towards him and Tom bounced it to Calvin who swished another three. Central was up by eight and they had scored the last 12 points. \n\n\"Nice pass,\" Calvin said to Tom as they moved back on D. \"Nice shot,\" he yelled back. \n\nThe Holy Family coach tried to bring more help from underneath to guard Tom and Calvin so they just tossed it down low for easy lay-ins. After five minutes Central had a twenty point lead and Tom and Calvin were taken out of the game with standing ovations. Jo was leading the cheering and was whistling so loud the announcer had to tell her to stop. \n\nThe final score was Central 82 Holy Family 60. Tom was the leading scorer with twenty eight point followed by Calvin with twenty. As he walked back into the gym after the shower he saw Father Tim, Jo, and the man and woman waiting for him. \n\n\"Tom, this is assistant coaches Brown and Lewis from Tennessee.\" Father Tim said. They wanted to meet you. \n\n\"Hello Tom,\" the two coaches said smiling. \"Nice game.\" \n\n\"Thanks,\" Tom said while smiling at Jo who was making faces at him as she stood behind the two coaches. \n\n\"Did you receive our letter?\" the man asked. \n\n\"Yes,\" he answered. \"Thanks for coming.\" \n\n\"We are trying to figure out how you escaped all the recruiting publications,\" the man said. \"We checked back at your stats at Clarkton and saw you were a 48 % shooter from the three point range and a 90% shooter on fouls.\" \n\n\"Yes sir. My percentage dropped this year because my father lost his job and the family had to move.\" \n\n\"It dropped?\" the man asked smiling. \"What was it before?\" \n\n\"53% last year,\" Tom said smiling. \n\n\"We are looking for a two guard who can shoot,\" he said. \"I think you will be receiving an offer within the next week. By the way how are your grades?\" \n\n\"Thank you,\" Father Tim said smiling. \"I keep telling these kids to keep their grades up.\" \n\n\"All A's and one B,\" Tom said proudly. \"My SAT was 1390.\" \n\n\"Good,\" he said as he held out his hand to shake. \"And,\" the man said, \"We just found out tonight you are dating our number one woman recruit.\" They all turned to look at Jo. ",
        "\"You didn't know?\" Tom asked suspiciously. \n\n\"We truly didn't,\" Mr. Brown said. \"I'm Catholic too and would never lie in front of a priest.\" \n\n\"You better not,\" Father Tim said smiling. \n\n\"So think about coming to Tennessee and even if Jo decides to go elsewhere the offer stays on the table,\" the man said. They shook hands again and walked away. \n\n\"Wow!\" Jo said jumping into Tom's arms. \"Tennessee!\" \n\n\"Wait,\" Father Tim said. \"I got two more calls today from Rutgers and Penn State interested in Tom.\" \n\n\"Hey I don't have offers from them,\" Jo said looking sad. \n\n\"Maybe I can put in a good word for you?\" Tom laughed as he hugged her tightly against him. Things were looking good. \n\nEnd of Chapter Four. \n\nEnding Note: I really appreciate all the kind emails I received from the readers about this story. I've tried to keep things going slow but still interesting. The State playoff game is coming up and I'm sure Jo and Tom will be in the middle of it and I will not let it end up in a tragedy. Let me know what you think of the story so far and don't forget to vote.....Slick.  "
    ],
    "authorname": "Slickman",
    "tags": [
        "clarkton",
        "sweatshirt pulled",
        "grabbed jo",
        "guys tom",
        "eric touching",
        "cried climaxed",
        "jake eric",
        "eric shouted",
        "back clarkton",
        "walk school"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/tomboy-ch-04"
}