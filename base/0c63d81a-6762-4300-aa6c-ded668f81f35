{
    "title": "Ideal Suburbia Ch. 17",
    "pages": [
        "This is the final entry in a series of stories that are a sort of sequel to two text-adventure games. Each installment is a complete story on its own, but for a full understanding, the reader may want to start with Chapter 1.\n\nIf you have read all the story, thanks so much for your time and appreciation. I hope this last chapter is a fitting topper.\n\n+++++\n\nI looked at the marketing brochure mock-up in my hands. It was as perfect as I could make it. Printed on the highest quality stock, filled with beautiful illustrations, and selling a perfect product, I expected it to do its job admirably. It was time to publicly announce the founding of the Baker's Fields Golf and Country Club, the only private golf and athletic club on the entire west side of the city. The time had come to start selling the ultra-exclusive Founder's Memberships which would fund the next phase of development.\n\nThat meant it was time for other major changes.\n\nI would have to quit my excellent, well-paying job. So far, I had kept the development project out of the public eye, and burnt the candle at both ends is I could still perform to or above expectations at CKE Materials. But my name and face were right there in the brochure as Managing Director. And once I buckled down to selling Founding Memberships, then Equity Memberships, then Golf Memberships, and eventually Social, Fitness, and other memberships, I would no longer have time for both endeavors. And I did not want my boss to hear about my departure from anyone other than me.\n\nNot only was this going to be an expensive move for me, I had been making bank at CKE since they hired me, but I was very worried that my co-workers and especially my boss would see this as a betrayal. While my college training was in resort and leisure management, my knowledge of, and affection for, golf itself had been paid for entirely on the company dime.\n\nThe good opinion of the owner Cathy was very important to me. She had been a mentor to me. She had challenged me repeatedly, and I had learned for certain that I could rise to those and other challenges. She was a good boss to the whole company and was the object of fierce loyalty among her employees, including me. She was funny, and charismatic.\n\nAnd she was smoking hot. Let's not forget that. Cathy was, to my calculation, the hottest woman I had met in my life whom I had never tried to make a move on; one of the hottest women I had met at all, for that matter.\n\nShe was gorgeous, charismatic, funny, bawdy, and an invaluable mentor, and I was about to piss her off. The worst of it was, I wasn't sure how much I was going to piss her off. I picked up my resignation letter from my office printer, signed it, and drew a deep breath.\n\nI had called Cathy's assistant, Sean, and he had told me that she could see me in 15 minutes. That was 12 minutes previously. This was one meeting I was not going to be early for. I was never late for anything. I walked down the hall toward her office suite.\n\nSean barely looked up from his computer as I ambled in, as casually as I could manage, and just held up his hand. He punched the intercom and told her I was here. I heard her tell him to send me in, and he just thumbed me toward her office.\n\nI let one last shiver of anxiety run through me before I opened her door. I banished all physical signs of my doubts as I walked through the door. It's a damned valuable talent in so many ways. \"Hi Cathy,\" I said brightly as I closed the door behind me. \"Thanks for seeing me on short notice.\"\n\n\"Nothing has gone wrong today,\" she replied, making me wince internally, \"so I have plenty of time.\" She looked at me with a slow, speculative smile. \"What hare-brained scheme have you pulled this time that you want to warn me about?\"\n\n\"Um, I have some bad news and some good news,\" I said seriously as I approached her desk. \"The bad news first,\" I continued, placing the resignation letter face up on her desk.\n\nRaising an eyebrow, Cathy picked it up. Her face darkened at the first line, but she kept reading silently. The letter lead with my resignation, followed by fulsome thanks, the usual two-weeks notice, and an offer to delay my departure for longer if she felt it was necessary for the transition. I clutched my white club brochure in my hand like a life preserver.\n\n\"What. The Actual. Fuck?\" asked Cathy, looking at me intently. I could tell she wan't done, so I remained silent. \"I thought you were happy here. I know you have been wildly successful here. I'm guessing you haven't been hired away, or you wouldn't... couldn't offer this weird-ass notice period. Why are you bailing?\"\n\n\"An entrepreneurial opportunity arose that I just could not let get away,\" I replied. \"I've got a new project. It is located about three miles for my house... and about a mile from yours.\" With that, I laid the white folder on her desk.\n\nCathy is a very avid golfer. It was she who had insisted, and paid for, my learning to play golf. The largest frustration in her relatively charmed life, or the largest that I knew of, was that the best golf she could find was nearly an hour from her home and almost that far from her work. Her harping on that subject had been the germ of the entire country club idea.\n\nHer eyes widened at the pastel illustration on the cover of the brochure, and I immediately saw that she understood why I had lead with the location. She flipped open the document and started reading closely. She did not smile, but that didn't bother me. I knew her. What made me feel relieved was how intently she was reading every word. She flipped the page, and saw the caption under my name and picture. That earned me a look and she said quietly, \"So it really is YOUR baby...\" I simply nodded and she resumed reading.\n\nIt felt like an eternity as she absorbed and analyzed every detail. When she reached the end, she stoped, then flipped back through the whole brochure again. She looked up at me sharply and demanded, \"Where is my application form for one of these Founder's Memberships?\"\n\nI very nearly passed out in relief. \"I must have forgotten to put one in. You are the first person outside my organization to see that,\" I replied with the barest of frowns.\n\n\"Bullshit,\" scoffed Cathy. \"You left it out intentionally to make me ask for it. The last time you forgot something in a sales environment you were running a lemonade stand.\"\n\n\"It did seem like a good sales move,\" I admitted, \"but mostly I wasn't sure how mad you were going to be, and I didn't want to make it worse.\"\n\n\"Oh, I'm mad, just not at you!\" replied Cathy, unable to keep from thumbing through the brochure while she talked. \"I'm usually only mad at employees I'm firing. When someone quits, that just means I either have something to fix, or they found a great opportunity like you have. I'm mad because replacing you will be a cast iron bitch.\"\n\n\"I'm really sorry.\"\n\n\"Don't be. I'm going to profit immensely in the long run from your departure,\" she said evenly, giving me her undivided attention for the first time since I dangled that brochure in front of her.\n\n\"Excuse me?\" I asked, a little hurt.\n\n\"Welcome to being an entrepreneur. No asset is more important to me than my own time. Not even you, buster. This country club will save me hours a week in drive time that I will be able spend at work instead. And the location will improve my off-work quality of life, letting me productively spend even more time here. Keep that lesson in mind for yourself,\" Cathy explained calmly. The mentor was back.\n\n\"Why are still standing?\" she snapped at me, and I sank into a chair at last as she punched the intercom. \"Sean, see if Phil is in the building. If he is, tell him to get his ass in here stat, would you please? Then call Audrey and tell her that her dearest wish is coming true. Yes, tell her exactly that.\"\n\n\"We have a lot of planning to do to get you out of here so you can make sure that project opens on time.\"\n\nTwelve days into my fourteen days notice, my transition was going smoothly at last. We had found a good (or at least good enough) person to take over each of my major accounts, and we had met with the clients together to hand things over. Audrey in Accounting had danced her jig of joy when she heard I would no longer be sending her unorthodox expense account forms featuring strip clubs. I was one hundred percent caught up on my paperwork. A woman from our east coast office had been promoted to my position at headquarters and would be arriving in a day or three. All I was wondering was how long they would want me to show her the ropes before Cathy let me go and I could throw myself into the club's constructions and sales full-time. I was projecting no more than ten days, but I was worried it would be longer. If I could have been sure that Cathy would take my departure as well as she had, I'd have never offered to stick around so long.\n\nI was tidying up my desk at the end of the day, getting ready to head home and prepare to meet a few potential buyers of memberships late that evening. The candle was burning brightly at both ends indeed. Cathy called me and asked if I could swing by her office before I left. I told her that I'd be right there.\n\nWhen I arrived, Sean was just leaving for the day himself. \"She doesn't have anyone in there with her right now,\" he told me in passing. \"Just knock before you go in, in case she is on the phone.\" I waved goodbye and Sean headed out with his little lunchbox.\n\nI knocked on the door, waited for an invitation, and entered. Cathy was leaning agains the front of her desk as I entered. I paused a moment to close my eyes and gather myself, as I usually did when first seeing Cathy. She had an amazing ability to look utterly, stunningly, sexy in a conservative business suit. That day she was wearing a charcoal suit with subtle fuscia pinstripes. The skirt was showing a good three inches of leg above the knee, as opposed to her usual two (I always paid close attention to every detail of Cathy's appearance), and she had her beautifully shapely legs crossed as she lent against the desk. She wore a pink men's tie in a way that was somehow very feminine, and her suit jacket was delicately tailored to her every curve, showing off her every magnificent contour without ever appearing to pull tight anywhere.\n\n\"What's up?\" I asked, approaching her. We had been sending a lot of time lately, working on my departure. It had been an awesome bonus.\n\n\"I have bad news, and an explanation,\" said Cathy seriously.\n\n\"Oh dear,\" I said easily, inwardly wondering how long she was going to make me honor my offer to stick around past the obligatory two weeks. I hesitated in my approach.\n\n\"As of 5...\", began Cathy, looking at her watch, \"27PM today, your employment at CKE materials is officially terminated. It's been a pleasure, usually, having you work here.\"\n\n\"What?\" I asked, definitely confused but excited for all the added time in my schedule this meant for me. \"I still owe you at least two days, plus however long I need to get Patrice up and running when she gets here. And...\"\n\n\"Please,\" snorted Cathy. \"You are good, but hardly indispensable. The last items we really needed you for, you finished up for Alec today. I am therefore running you out of the building early for several reasons.\"\n\nShe began ticking them off on her long, ruby-nailed fingers.\n\n\"One, you bouncing around this building without any prey to hunt anymore has everyone as nervous as a cup of hot coffee.\"\n\n\"Two,\" she went on, grabbing her by now well-thumbed brochure off her desk, \"Time you are spending here is time not spent on your project. I saw that my check cleared yesterday, and I personally want you putting all your efforts into making sure my fucking country club is opened on time.\"\n\n\"And finally,\" said Cathy, her voice taking on a slightly different register as she straightened up from the desk, \"I am finding it increasingly irritating that I can't make a pass at a man who is still in my employ.\"\n\nAnd I had thought I was surprised and excited BEFORE she said that last. Now I was surprised, excited, and momentarily speechless. I stood there in the middle of the floor, unmoving.\n\nCathy smiled at me with what my mind only much later recognized as a hint of uncertainty, and walked around her desk to sit in her high-backed chair. She leaned back and placed one magnificent leg on the desk, then slowly lifted her other one to cross atop the first. The soles of her shoes were a brilliant scarlet red. \"Are those sufficient reasons for terminating your employment early?\" she asked softly.\n\n\"I, uh, yes.\" I replied, in a serious tone. \"The extra time will be a godsend. I have a lot that needs doing, but I confess a lot of time at first will be spent on simply catching up on sleep.\" I smiled increasingly broadly as I continued, \"And as for the rest, I can assure you that I will do my level best to make sure that any passes you might make in my direction will be wildly successful!\"\n\n\"Good...\" purred Cathy the edge of doubt I had not recognized gone from her voice.\n\nDid she mean here? Now?\n\nOne way to find out. I approached her desk, walking around it and sitting on the edge, right beside her legs. For the first time, I allowed myself to openly appreciate her appearance. I had previously been forced to satisfy myself with brief looks and furtive glances, and they had left me with indelible images of each of her outstanding features, but now I let myself drink her in from head to toe in a long, frankly hungry, appraisal. Most of all, I longingly gazed at her lovely face. I knew her eyes intimately, of course, since I had always focused my eyes on hers like a laser when we conversed, terrified about where my gaze would otherwise wander. But the rest of her visage was equally delightful. She possessed a long, graceful neck, a sharp, delicate jawline, a strong nose (with nostrils currently flaring under my gaze), a wide, lively mouth with subtle, rich red polished lips, and of course those violet eyes. And they were all illuminated by her lively intelligence and charisma.\n\nCurrently her features were also illuminated by desire, as I'm sure were mine.\n\nOf course, at that moment, Cathy's desk phone rang.\n\nI glanced back at the caller ID. \"Shit!\" I exclaimed. \"It's Petersen, the goddamned OSHA guy.\" I knew Cathy had to take the call. Petersen was simultaneously the biggest pain in the ass Cathy had, and the hardest to get ahold of. Cathy grimaced and gestured for me to hand her the receiver. She was placing a finger to her smiling lips in a 'shhh' as she took it from me.\n\n\"Frank!\" she exclaimed into the phone. \"What is the hardest working bureaucrat in government doing calling me at 5:30 in the evening? Shouldn't you be long gone from the office by now?\"\n\nShit. Shit. Shit. I had never spoken to Frank Petersen, but I knew his reputation. The guy was congenitally incapable of getting to the point, or of letting anyone else get to it either. Cathy was going to be on the phone for a while. I did not want this magical... no, miraculous... moment to slip away. I smiled at her and she smiled back frustratedly.\n\nI looked down at her legs crossed on the desk beside me and I idly began to trace my fingers up and down her calves. Cathy's eyebrow shot up, but her smile only grew. I had honestly not realized that her legs were bare until I touched them, they were so smooth. She was either a dedicated shaver, or she kept the entirety of her legs waxed smooth. As I continued to stroke and caress those calves, I hungrily wondered what else she kept waxed, and in what configuration.\n\nPetersen had apparently not gotten much past 'hello' in his interminable way, when I began to move my explorations of Cathy's legs northward. Her knees were elegant and the skin was luxuriously soft. I barely spent a few breaths caressing her knees though, as those supple thighs awaited me. The way she sat with her legs up on the desk left her skirt hiked up just slightly, exposing a bonus inch or two of bare, smooth flesh above her knees. My hands slid upward, left, and right over that exposed stretch of paradise, massaging her gently but firmly.\n\nI was looking into Cathy's eyes the whole time, except when one or the other of us stole a glance down to my advancing hand. I let my smile lurch into a cheerful leer as my hand began to explore her outer thigh up under the skirt for a few inches. Cathy's eyes widened in response. Her calm voice on the phone as she tried to guide Petersen to get around to his point was wildly, excitingly at odds with the expression on her face as I explored under her skirt. For the first time, she seemed not quite able to remain still under my caress.\n\nI slid my caress from the outside of her thigh around to where her crossed legs pressed their inner curves together. I slid a finger up and down that line, first idly, then pressing harder and almost demandingly. Cathy looked down at my hand moving just under her skirt for a while, then rolled her head away to stare off into space. Petersen must have paused to take a breath, because Cathy quickly began speaking, trying to get the conversation to go somewhere, anywhere, but hopefully to one of the many things she actually needed to talk to this bastard about.\n\nSlowly, idly, as if not paying any attention, she sinuously uncrossed her legs, letting them rest just barely apart.\n\nI resisted the temptation to let my fingers dive in instantly. That was not easy. But I managed it, and instead merely let them brush back and forth across first one inner thigh, then the other at the same depth under her skirt as I had already probed. I could see Cathy's face flushing in response to my caresses, and I could feel the heat of her thighs doing likewise.\n\nCathys' words and expression suddenly indicated that Petersen had slipped the conversational leash and wandered off again. I cruelly added to her frustration by sliding my hands out from under her skirt and from between her legs. She looked at me in exasperation. I merely smiled.\n\nThen I slipped off the edge of her desk and rose, looking down on her as she leaned back in her chair, arrayed below my gaze magnificently. Then I reached down and brushed my fingertips on the base of her richly patterned, heavy pink silk men's-style tie. I deliberately kept my touch feather-lite as I trailed my fingers upward. I was sorely tempted to go off-track when I reached the swell of her enticing breasts, but I kept my fingers on the tie and between her curves. After as slow a progress as I could manage, I reached her throat. The tie was tied in one of those complicated modern knots that I think look great, but have never managed to learn to tie for myself. Of course Cathy had mastered several of them. At the base of Cathy's elegant neck, the deeply layered knot looked both stylish and vaguely suggestive. I brought my other hand over and began to gently loosen the tie, then the knot itself. Cathy looked at me in curious anticipation as I finally, silently popped the tie free and slid it from around her neck. I slung the tie over my shoulder temporarily and unbuttoned the button at the neck of her dress shirt. Then I unbuttoned the next one down. Then one more.\n\nThen I stopped, stood up straight and walked across her spacious office toward the door to her private washroom. She kept a wooden suit butler there for when she needed to change outfits while at work. I dangled the tie around it. When I turned back to her, Cathy's grin told me that she had bought into my game, but in doing so, she seemed ready to take back some control from my teasing.\n\nI stepped next to her, but she forestalled my next play by tugging on my own necktie. She then made a loosening motion and stared at me significantly. I started to yank my tie off, but realized the idea was to go slow, so I instead began to unknot the tie with it still around my neck, pulling loose the lops one by one, then slipping it from around my neck only when fully untied. I liked my ties and was proud of my collection, but having just handled Cathy's sumptuous pink number, mine felt like a polyester clip-on from Sears. I rolled my unworthy tie up and popped it in my jacket pocket. Cathy then tugged at my jacket itself and leaned back to watch. I slowly slipped it off my shoulders, letting it slide off my arms under the power of gravity alone. I slung it over my shoulder and stepped to the nearby credenza where I neatly placed it. When I turned back, before I could approach her again, Cathy was playing with the unbuttoned collar of her blouse significantly, and pointed at me. Okay. I pulled my shirttails from my trousers' waistband and began to unbutton my dress shirt from the bottom up. Once I undid the collar, I let it hang open, exposing my chest while I undid the cufflinks on the french-style cuffs I preferred. I pocketed the links and slid the shirt off in similar fashion to the jacket. I folded it neatly and set it atop the latter.",
        "Smiling, I returned to tease Cathy some more. But she had other ideas. She pointed a finger demandingly at my trousers next. I dawned on me where this was going. I was eventually going to be standing buck naked in front of my fully-clothed (ex-)boss while she talked on the phone to a government bureaucrat.\n\nSounded good to me.\n\nI did worry about my shoes, or more specifically, my socks. Slipping a woman's stockings off her legs is one of the great sensual experiences. It feels great to both parties, looks elegant, and is oh, SO sexy. Taking his socks off is one of the least sexy, most ridiculous-looking things a man can do. The only thing more ridiculous, of course, is being a naked man in socks. That was a fate to be avoided at all costs. I leaned against the credenza to unlace my shoe. As I began to slip it off my foot, I tugged the sock down along with it. I managed the first one pretty smoothly. When I removed my second shoe, my sock got hung up on my ankle and I practically fell over while trying to look cool as I tried to free it.\n\nI will never figure out how to remove dress socks without looking like an idiot.\n\nStill, Cathy seemed more amused than disappointed with my antics. Mostly she acted impatient, stabbing her finger imperiously once more at my trousers. My currently very full trousers. Did I want to have her get a look at my tumescent junk through my underwear first, or expose it in all its glory right off? I was getting impatient myself, anyway.\n\nI undid my belt and fly, then I grabbed the waist of both trousers and underwear together and pulled them downward. I let them fall to my feet as my erection sprang free. The look of surprise on Cathy's face, pleased surprise, told me that she at least had not been privy to any rumors about me. At just under eight fairly chunky inches, I would not be a particularly impressive porn star, but I do stand out among regular guys. I let her gaze roam over it for a moment, before I bent to collect my pants and fold them with the rest of my suit. That let her get a good look at my ass. You know. In case she wanted to see that too....\n\n\"Frank?\" I heard Cathy interrupt on the phone. \"Frank? Listen, I'd love to keep talking but my alarm just went off. I... well... I have a date tonight, Frank. One I REALLY don't want to stand up,\" she laughed. \"What? Yes, he is very promising, in fact. You don't mind do you?\" she asked conspiratorially. \"Thank you so much. Oh! Before we get off the line, are we alright to proceed with OFT-234B? They finally processed it? We are go? You are champ, Frank. Call me again soon. We have a few other things to handle, don't we? Yes.\" Her eyes widened in horror suddenly. \"What? Yes, that is fascinating. Listen, I have some thoughts on that. I think that... Oh wait! My date, Frank. Call me tomorrow or next week and we can talk about that. Good. Yes, I almost forgot about the date. That was a close one, wasn't it?\" Cathy laughed over the phone while looking at my impatient erection and rolling her eyes. \"Bye Frank!\"\n\nCathy carefully made sure she hung up the phone, then burst out laughing. \"That,\" she said as she rose from her chair to approach me, \"was the single best phone call I have ever had with Frank Petersen. It was the shortest time I've ever wasted listening to him, I actually got an answer out of him, and...\" her voice grew husky, \"the background entertainment was, IS, all that and a bag of chips.\" She shook her head in bemusement as she stared at me.\n\n\"You ain't seen nothing yet,\" I boasted in reply.\n\n\"Ha! I think that I,\" laughed Cathy, indicating herself, \"HAVE seen everything.\" Then she reached for the remaining closed buttons of her dress shirt. \"'You ain't seen nothing yet' should really be MY line.\"\n\nShe stepped a bit closer to me but stopped far enough away for me to enjoy the whole view as she began to slip several more buttons open, revealing the white lace of something underneath. But just as the view became really interesting, she stopped. Instead she walked across the office to her clothes butler. She stared into my eyes as she slid her jacket off and hung it on the wooden structure, somehow managing to make even that utilitarian task seem seductive. Then she turned her back to me and, looking over her shoulder, she unzipped the back of her skirt. She took an excruciatingly long time letting it slip down her legs before stepping out of it. She bend over enticingly, letting her bottom waver a bit as she clipped the suit skirt to the butler. Other than a bit more delicious leg, I saw no more skin than before as her dress shirt's tails were quite long. She reached down to tug off one of those red-soled heels and I blurted out, \"No! Please. Leave them on.\"\n\n\"They are pretty, aren't they?\" mused Cathy as she straightened and stepped close to me again, resuming the slow unbuttoning of her shirt, keeping it held closed as she went. With the last button opened, she suddenly whipped the shirt wide open and off her shoulders. She did something to discard the shirt, but to this day I couldn't tell you what the fuck it was, as my eyes could see nothing but the fan-damn-tastic white teddy she had apparently worn for me. It was made of a very open lace, so open as to be practically transparent, not that that mattered much at all. It was cut very high at the hips and there was a \"modesty\" panel right at the crotch that made it opaque. The sides were open, leaving her flanks deliciously bare. The straps over her shoulders were broad and ornate.\n\nOh, did I mention that it was completely cupless?\n\nIt was completely cupless.\n\n\"Remember when you were showing us that purple teddy you bought?\" I said quietly. \"You complained that garments like this don't offer any support. Well, Ms. Ecklesford, you don't need ANY goddamned support!\"\n\nStanding there, naked, taking her in with my eyes made me feel like nothing more than a life-support system for an erection. Her breasts were gorgeous. They were rich, round, full, and smooth. Her eagerly erect, petite nipples were surrounded by bright, pink, perfectly round aureoles that were speckled, particularly around the perimeter, with enchanting little goosebumps. There was so much more perfection to drink in. Her slim waist flared out to firm, enticing hips. Her legs, which I already knew were fabulous were even better when I could appreciate their full sweep upwards.\n\nA small, quarter-sized birthmark lurked on her left hip. The tiny flaw just served to cement her utter perfection.\n\nWe both unconsciously found ourselves stepping closer. \"Support is not a shape thing, it's a comfort thing,\" Cathy smiled quietly.\n\nSuddenly we were kissing. I saw her eyes close right before my own involuntarily did as well. Our lips pressed together, hungering for each other. I reveled in the simple kiss until we simultaneously felt the need for more. Our tongues began to slip between our lips, probing teeth and lips and opposing tongues.\n\n\"Well, if support is a comfort thing, I want you to be comfortable,\" I managed to articulate around her questing tongue and at last allowed my hands to grasp her fabulous, no-support-needed breasts. The perfect mounds overflowed my hands and I massaged them gently.\n\n\"Squeeze...\" Cathy moaned. I sank my fingertips into her firmness eagerly in response.\n\nGasping, I stepped back a pace to take the sight of her in that teddy one more time. Then I reached out to the straps and tugged them off her shoulders. \"You don't like the teddy?\" asked Cathy with a smile.\n\n\"I love it. I want it to fulfill the destiny it was designed for: Being gently stripped from your fantastic body,\" I replied, matching actions to words. Cathy did nothing to fight my plan. In fact, she was quite helpful. We still took our time with it.\n\nAt last, we stood facing each other, totally naked except for Cathy's sexy heels.\n\nAfter a brief moment of staring at each other, we found ourselves embracing again. Our lips fought to contain each others tongues. Cathy's breasts pressed against my chest, our nipples rubbing hard against each other. And my cock pressed needfully against her naked abdomen....\n\nI could not help myself. I lifted Cathy slowly and laid her down across her broad, nearly empty, mahogany desk. I crawled up after her, moving between her legs. My cock dangled down, swaying over the dark triangle of close-shorn hair Cathy had retained in a sea of otherwise waxed-smooth skin. I lowered my hips so that the tip of my cock could drag across her abdomen, then her pubic mound. I dragged it along her thighs, and then up between them. As I slid it across her labia I could feel it was swollen and sodden with as much need as I felt. I pressed gently against her nether lips and the head of my cock slipped softly within them. I inhaled and began to smoothly thrust my entire length into her in one slow, smooth, inexorable stroke. I groaned with a year's worth of pent-up desire.\n\nCathy nearly shrieked as I penetrated her.\n\n\"Are you alright?\" I exclaimed, sliding swiftly out of her again in concern.\n\nCathy grasped my ass to prevent me moving any further away. \"I'm fantastic!\" she gulped. \"But next time you are going to stick a whole salami in a girl, how about a little warning?\" She laughed lightly, \"That really is a lot!\"\n\n\"Well, consider this your one-second warning then!\" I replied... and slid my entire length into her this time, much faster than before. But I did not start thrusting. I just kept myself buried to the hilt within her spectacular confines. I looked down at her and said, \"I've wanted you since the very moment I laid eyes on you. Every time you sucked on a bottle of water, every time you bent over to take a golf swing, or just pretended to, every time you'd pull out one of those incredible pieces of lingerie you had just bought for some lucky guy, hell, every time you simply walked down the hallway, I've wanted you.\"\n\n\"And now,\" I continued, my eyes boring into Cathy's, \"I'm going to fuck you. Comprehensively.\" With that, I began ever so slowly to thrust in and out of her. Each slow passage my cock in and out through her depths was ecstasy. \"And then, when we are done, I'm going to do it again, along with whatever else the two of us can dream up to do to each other.\"\n\n\"I have some ideas,\" crooned Cathy. She raised her legs up and I felt her press her ankles against my ass, her high heels digging into the back of my thighs. The new angle seemed to work much better for her as her breathing rapidly became much shallow and faster. Meanwhile, the heels against my ass really worked for me. I found images of all the fantasies I'd had and repressed about Cathy since coming to work for her floating through my head. I think they actually slowed down my inevitable orgasm, as none could hold a candle to the reality.\n\nBut nothing could slow me down much.\n\nMuch as I tried, I soon reached a point where I either had to stop entirely, or give in. I was not capable of even considering stopping. \"I'm. Coming!\" I gasped. Suddenly, I felt my hips lock in place with my tool at maximum depth and I swear my balls shuddered. I gasped incoherently, and I struggled to subsequently catch my breath as I felt my cum surging into Cathy for what seemed like seemed forever. Of course, it was barely a second or three. I'm not some hentai superhero.\n\nWhen I regained coherent thought, I found Cathy bucking her hips beneath me and thrashing. I quickly drew back and made a few desperate thrusts to help her final waves of orgasmic energy surface. I panted as I looked down at Cathy, her face covered in a sheen of sweat. My cock was assaulted with nerve stimulus. Just resting inside Cathy became sensory overload, and I collapsed to the desk beside her.\n\nAfter a few more breaths, I propped myself up on an elbow and gazed at Cathy some more. Her entire gorgeous body was glistening with perspiration, her magnificent breasts quivered as she recovered, and she looked back at me with those violet eyes.\n\n\"You are perfect,\" I blurted out.\n\nCathy would probably have blushed had she not already been completely flushed. \"Come on, pull the other one!\" she chuckled dismissively. \"I'm ten years older than you!\"\n\n\"What does that matter?\" I replied. \"Your legs are long, and smooth, and graceful. Your ass is... god, it's amazing. There isn't a trace of cellulite on you, nor any indication there will be in the future! Your belly is flat, and your waist narrow,\" I rambled, caressing the body parts in question. \"Your face is outright beautiful, and you don't have a crease on it. I can lose myself staring into your eyes, memorizing your every feature and I can't find a wrinkle. The only lines that might form any time soon are laugh lines, and when they do show, they will only make you look even smarter and more beautiful than you already are.\"\n\n\"You are going to turn a girl's head,\" smirked Cathy.\n\n\"And your breasts!\" I exclaimed, sliding a hand to ensure she knew what I was talking about. \"They are fucking incredible. I can't tell you all the things I want to... plan to do to and with them,\" I laughed, \"Starting with THIS!\"\n\nI dove my face down between her breasts and pressed them together against it. I shook my head back and forth and made outboard engine noises.\n\nCathy was laughing hard now. Her fingers buried themselves in my hair, incidentally keeping my face right where it was.\n\nThat was just fine. For a while.\n\nAt last, I needed to come up for air, and besides, I really wanted to take in every visual detail of those breasts. I'd dreamt of them for a year, and they were exceeding my expectations. Their skin was milky white and soft, but still tight and elastic over the firm flesh of her natural curves. Even with Cathy lying flat on her back, they still rose proudly above her chest and when I clutched at them they overflowed my grasp.\n\nIn a sudden burst of energy, Cathy grabbed me and rolled over atop me, knocking her pen tray and picture of her parents off the desk. She knelt over me on hands and knees, dangling her tits down over my face. \"You really do like them don't you?\" Cathy asked, letting them brush my lips as she swayed them over my face.\n\n\"What idiot who has been privileged to see them HASN'T loved them?\" I asked, between licks up at her passing treasures.\n\n\"Well, yeah,\" said Cathy with some satisfaction. \"But you really, really, really like them, apparently,\" she went on, lowering herself so that she was now dragging them across my face.\n\n\"They are magical,\" I replied between passes of said magical features over my face.\n\n\"Magical, huh?\" Cathy asked herself aloud. \"Maybe if they are so magical...\" she mused speculatively, and began to work her way down my body. \"Maybe their magic can wake the dead.\" With that, she worked her way all the way down to where her breasts hung over my exhausted, flacid penis. She stopped there, swaying, varying her height above me so that either her erect nipples just barely grazed my happily spent cock, or the full weight of her delicious breasts dragged across it, flopping it from side to side.\n\nI could feel my junk start to pulse with new life already.\n\nCathy felt my stirrings as my cock began to lurch slowly back to attention. She smiled up at me and nestled it between her breasts, squeezing them into a prison that she rubbed up and down my still soft shaft. Temporarily soft shaft. Briefly soft shaft. No longer soft shaft. Hardening shaft. Raging hard shaft. \"I guess that they are magical,\" laughed Cathy.\n\nI could not help myself, and began to thrust up and between her breasts eagerly. But Cathy had other ideas. She released my from between her tits and caressed my cock appreciatively. \"Speaking of magical,\" she murmured. Then she looked up at my commandingly, \"Get up. Off the desk!\"\n\nI stood up obediently, and Cathy shifted around to lie on her back on the desktop with her head next to where I stood. She leaned up and took my cock in her hand once more, pulling me close so that she could rub my shaft over and across her face. She kissed and licked at the tip, but could not reach more. She slid forward just enough that her head could hang completely off the desk. She arched her neck and the back of her head swung down toward the floor. With a smile, she grabbed me once more and pulled me forward until she could place my glans squarely into her mouth. Her tongue was alive inside, eagerly tormenting me. I tentatively slid more of my length past her lips. Cathy grabbed the base of my shaft and ran her hand up and down, squeezing gently.\n\nShe didn't fight my thrusting into her mouth and I realized that her hand was there as much to keep my from driving too deep as it was to pleasure me. With a smile, I leaned forward to caress a breast as I began to slide in and out with increasing vigor. Cathy just relaxed her jaw, keeping her lips wrapped tightly around me and her tongue pressed softly against the top of my cock. It was a fresh and fantastic sensation. I began to groan with pleasure. But when my enjoyment threatened to be too great, Cathy pushed me out of her mouth and rolled over to sit up on the edge of the desk.\n\nWe grinned at each other as I leaned in to kiss her deeply, standing between her legs where they hung off the desk. I cradled her chin in my hands, then slid them downward, unable to keep my hands off those breasts for very long. Our tongues explored each other once more as I groped her breasts, barely keeping my grasp gentle in my eagerness. Cathy let one hand stray back to my cock and caressed it lightly, intending nothing more than pleasant stimulation.\n\nI let one hand drop from a glorious breast to between her legs, with the intention of much more. My fingers stole across the surface of her labia, stroking softly, then pressing harder. My middle finger slipped inside her and Cathy moaned as I pressed deeper in her hot, wet interior. She moaned louder when I added my ring finger to my probe, and the two digits probed inside, stroking up and down, seeking her g-spot. Her moan rose to a high-pitched gasp when I found it. I probed there softly but urgently, and flicked across her eager clit with my thumb.\n\nCathy could not last long under my attentions and she flung her head back with a long, gasping shriek. Her hand on my cock clutched desperately, and I felt her body, from the breast in one of my hands to her steaming crotch being invaded by my other, rumble in release. I kept stroking her inside, but she pushed me away swiftly, before she even finished coming. She rose from the desk, body still quivering, and pushed my backward. I stepped back and fell onto one of the soft leather armless chairs people sat in for an audience with the boss.\n\nShe stepped forward, straddling me and grasped my cock again. She lowered herself top of me, guiding the point of my shaft into her receptive depth. Cathy wrapped her arms around my shoulders and let herself drop to my lap, impaling herself on me. I watched as her eyes closed happily while she sat on my lap feeling my cock resting inside her. Then she open them again and stared happily at me as she began to rise and fall atop me.\n\nI grasped her sweet, generous ass and held on as she rose and fell swiftly. A gasp escaped my lips while my cock throbbed inside her. Then I let my hands begin to wander across her body with soft caresses. I slid up her strong back and back down. One hand stroked up her flat, flexing stomach while the other brushed once more across a breast.\n\nCathy kept her hands crossed behind my head, her fingers running through my hair as she began to hump atop me faster. Her breasts began to bounce as she did, competing for my attention with the sensations along my cock.\n\nIn the aftermath of her self-interrupted orgasm before, Cathy swiftly showed signs that her body was eager to resume its release. That was good thing, because I too had no prayer of extending this coupling for long. I gasped and felt my seed rushing up and into her in a series of powerful spurts. I groaned a long, inarticulate expression of my satisfaction as my eruption slowed. Cathy lurched up and down on me fast as she could and in moments she screamed quietly while her body spasmed mightily in her own answering orgasm.",
        "I doubt either of us could remember how long we sat there with her in my lap, pressed together and gasping for breath.\n\nI would have been happy to sit there with my cock resting blissfully inside Cathy for as long as it remained stiff enough to stay in place, but Cathy at last chose to stand and my cock flopped down softly to the side. She looked down and kissed me. \"The shower in my private bathroom is pretty small, but I bet we can both fit,\" she observed. That motivated me to rise and follow her.\n\n\"I think you should know,\" Cathy said firmly and she led me to the washroom, \"as a Founding Member of your club, I'm going to require regular updates on how construction is progressing....\""
    ],
    "authorname": "Publius68",
    "tags": [
        "boss",
        "desk",
        "titfuck",
        "blowjob",
        "fingerbang",
        "oral sex",
        "stripping",
        "gorgeous",
        "mentor",
        "phone"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/ideal-suburbia-ch-17"
}