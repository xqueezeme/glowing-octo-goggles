{
    "title": "Miracle on RR34 Ch. 02",
    "pages": [
        "Disclaimer: All characters portrayed indulging in sexual activity are 18 chronological years of age or older. Any resemblance between these fictional characters and actual people is completely intentional and meant for parody. Reviews are welcome, flames will be snickered at. \n\nThis was done as a request for someone and it's dedicated to them. They know who they are. \n\n*** \n\nChapter 2- Yes, Virginia, There Really Is A War On Christmas \n\n\"Holy shit! What the hell is going on?! Is this really happening in my house?!\" \n\nGinny watched in shock as some dark shadow crashed through her bay window. The invader tumbled and splashed into her hot tub, thrashing about as he tried to regain his footing. Ginny shrieked in fright as more figures tumbled in after him. Another one burst through the far wall, some kind of weapon in his hand. \n\nThe lights were still out but the big room seemed even dimmer somehow, as if a living shadow had a stranglehold over the place. Dark shapes swarmed through the un-light, seemingly human in form, but she couldn't really be sure. \n\nThen he lunged past her, his massive frame almost a blur of motion, his golden-red hair and beard gleaming in the reflected light of the snow outside. Her eyes, wide with fright, now looked on in astonishment as he crashed into a knot of the intruders, his huge fists lashing out. One invader was knocked backwards, hurtling into the opposite wall with a resounding crunch, although whether that was the stone masonry of her wall or his bones giving way she couldn't tell readily. She dared not think about it. \n\nSanta spun around and drove his elbow into the back of another intruder. The vertabrae give way with a sickening crack and he went down. Without losing his momentum, the hulking harbinger of Christmas cheer lashed out savagely with his foot, the toe of the heavy black boot catching another foe under the chin and snapping his head back. The dark shape crumpled to the floor. \n\n\"Jesus!\" Ginny shouted in horror. \n\n\"Virginia, don't take the Lord's name in vain!\" Santa called out in a stern voice while he whirled about in a bloody orgy of violence. \"Do you want to end up back on the Naughty List?\" \n\n\"How can you be thinking about that at a time like this?!\" she exclaimed, staying flat to the wall, her eyes, wide in fright. \n\n\"I'm always thinking about that sort of thing,\" he explained as he wrestled an intruder into a headlock while looking at her. \"I'm constantly aware of-\" \n\nHe didn't finish the sentence as another enemy rushed up behind and slammed one of Ginny's chairs across his broad, muscular back, wood splintering as the stylish furniture sent him to the floor. \n\n\"Ow...\" he muttered, rubbing the back of his neck while the foe he had in a headlock escaped his grasp. \n\n\"Why the hell did you stop fighting and look at me?!\" Ginny shouted almost in exasperation. \n\n\"Because I have to,\" he responded as his foes piled on top of him, hammering away with their fists. \"Whenever one of my kids asks a question I have to give them my full attention and respond! That's how it works!\" \n\nHe surged up to his feet, throwing the crowd of assailants away. One foe threw a punch, but Santa grabbed the fist and twisted it over, causing his foe to shout in pain before he slammed his palm directly into the man's sternum, sending him flying while the arm remained firmly in Santa's grip. He then spun and slammed the bloody, disconnected shoulder remains across the head of a man behind him. \n\n\"Oh, gross!\" Ginny gasped. \"Why would you do that?!\" \n\n\"Because I want to live?\" he called back as he rammed his knee into another foe's chest, doubling him over before gripping and wrenching his neck with a sickening crunch. \"I really need to concentrate here!\" \n\n\"Sorry!\" Ginny said hastily. \"I'll try to stop asking questions now!\" \n\n\"Much obliged!\" Santa replied. In spite of her confusion and terror, Ginny watched in stunned fascination as the wild melee whirled before her- swarmed by foes, Santa fought back with a resolute and cold ferocity, never stopping moving but also tight and controlled in his movements. He stopped attacks and dropped his foes with single blow, doubtless a killing one. \n\nHis fighting style was efficient and... brutal. That's the only way she could describe it. \n\n\"Is that Krav Maga?\" she asked. \n\n\"It's not Krav Maga,\" he said flatly as he rammed his fist into a foe's ribcage. \"Trust me on this.\" \n\nShe yelped as the lights in the room went on and stung her eyes. She then gaped as she looked around her spacious living room. It was already a complete wreck, with the furniture trashed, holes in the wall and ceiling, and snow pouring into the center of the room from the ragged wooden wound above. Even though the room was fully lit, it was hard to focus on the swarming enemies infesting her house. They seemed shadowy, blurred or indistinct. How could that be? \n\nSomeone attacked Santa with a wicked-looking spiked hand-axe, something out of a sci-fi movie. He batted the weapon aside and clapped his open hands across the man's ears, busting his brain. Before he dropped, Santa grabbed the corpse and swung it around in a wide arc, smashing it into the foes surrounding him and knocking them back. \n\n\"Shit!\" Ginny squealed as one of the targets landed near her. \"It's like the fucking Matrix in here!\" \n\nAs he threw the corpse away, he paused very briefly and glanced at her. \"Since you happen to be right there, how about a little mood music?\" \n\n\"What?!\" \n\n\"I'm just saying some music would be nice if we're going to be doing this,\" he called. \"You're next to the entertainment system, how about putting something on?\" \n\n\"Youre shitting me, right?!\" she almost complained, wincing as she heard something delicate-sounding and expensive smash behind her amidst the wild brawl. She stared at the multimedia system, flapping her arms in frustration as she tried to focus through the noise. This couldn't be happening. She clutched the sleeves of her plush robe for a moment, trying to concentrate on its soft, fuzzy texture and center herself. She'd almost forgotten the large nerf gun in her hands but ignored it now, fixing her gaze on the mp3 playlist. She pressed a button. \n\n\"Silent night... Holy night...\" Bing crooned through the room. \n\n\"Not really what I had in mind!\" Santa mentioned loudly as he rammed his knee into a man's chin. \"Try again!\" \n\nGinny bit her lip and pressed the button again, this time rewarded with Gary Glitter singing 'Another Rock And Roll Christmas'. \n\n\"Still not quite there,\" he said as he snapmared another foe. \"Better, but not quite!\" \n\n\"Well I don't know!\" she shouted in exasperation. \"What kind of music do you put on while Santa kills things in your living room?!\" \n\nSanta turned sideways and thrust his foot out, kicking an intruder in the chest and sending him sprawling backwards, rolling head over heels until he thumped into the entertainment system, jolting it and skipping the player. \n\n\"I am a bitch. How do you want me? \n\nFrom behind, or on my knees? \n\nI am a slut, please hold me down, \n\nI'll be your noise, \n\nThis shit will fuck you up!\" \n\n\"Perfect!\" he declared as he fought, swarmed once again by foes. \n\n\"Seriously?!\" Ginny yelled. \"Combichrist is Santa's fucking fighting groove?\" \n\n\"I'm trying to figure out why you have it on your playlist,\" Santa replied. \"I don't remember you liking aggrotech!\" \n\n\"Why the hell do you of all people even know what it is?!\" she shot back, wincing as she watched another body sail into the opposite wall with a sickening crunch before dropping to the floor and leaving a huge, crumbling dent in the stone. \n\n'This Shit Will Fuck You Up!' \n\n\"I prefer the term 'Hellektro' myself,\" he added. \"And I know all songs, silly. I remember when the Dayglo Abortions wrote that 'Hey Santa!' song back in the '80's, they didn't get presents for-\" \n\n\"I didn't ask, why are you answering?!\" she hissed. \"Kill! Kill!\" \n\nAll the while, the pounding rhythms of the music filled the room. \n\n\"I am a bitch. How do you want me? \n\nFrom behind, or on my knees? \n\nI am a slut, please hold me down, \n\nI'll be your noise, \n\nThis shit will fuck you up!\" \n\n\"Well, at least we know why it's on your playlist, anyway!\" he mentioned as he broke someone's back over his knee. \n\n\"Very funny, red man!\" Ginny hissed, scowling. She ducked wildly as another assailant flew overhead and landed in the jacuzzi, his neck slamming against the hard edge with a snap noise and then tilting at a strange angle, his eyes wide and unseeing. \n\n\"Fucking hell,\" she muttered. \"These guys eat too much red meat!\" \n\nSanta smashed two heads together before punting a third man in the chest, sending him staggering back until he fell against the entertainment unit, right next to Ginny, his eyes spiralling in his head. She scowled down at him for a moment before smashing the pitcher of nog on his cranium and sending him to the floor. \n\nEvery single intruder stopped and turned to look at her suddenly, their eyes narrowing and turning very yellow. \n\n\"Eep...\" Ginny said quietly, going pale. \n\nThey all howled and lunged toward her, even as Santa fought to reach her first. She shrieked in fright. \n\n\"Darn it, Ginny!\" he shouted in what almost sounded like irritation. \"I told you not to do anything!\" \n\n\"You said not to use the stupid nerf gun!\" she shot back as she dodged wildly and began to run around, evading her persuers. \n\n\"I meant don't do anything to get yourself noticed!\" he growled as he bulldogged one man's head into the floor. He sprang to his feet and grabbed another man by the back of the head, ramming his face into the stone wall, creating a small crater from which the bodly slumped only slowly and wetly. \n\n\"How the hell did they not notice the mostly naked girl in the room?!\" she yelled, sprinting around the circumference of the room, being chased by yellow-eyed foes. \n\n\"They're mostly quantum, they don't always percieve real-state things or beings until they're interacted with!\" he answered. \"They weren't looking for you until you announced yourself!\" \n\n\"Oh, you and your weird physics shit!\" she groused, her robe coming more and more undone as she ran. One of her breasts was exposed, bouncing annoyingly and the nipple hardening as a cold wind from the endless holes in her walls and windows blew into the room. \"Now what?\" \n\n\"Well, since they know you're here, you might as well use the gun,\" he answered as he tackled a small knot of them who were looking to cut off her avenue of escape. \"At least then you can defend yourself if you're careful!\" \n\n\"The fuck am I supposed to do?\" she shouted angrily as she clutched the ridiculous, useless gun. \"Nerf them to death?! Hope I shoot one foam dart down a throat and hope the bastard chokes and dies?!\" \n\n\"Didn't you just let me inside all of your orifices?\" he pointed out as he spun low, sweeping one foe's feet from under him and then taking him by the ankles to slam him off the floor. \"Trust me, Virginia!\" \n\n\"Dammit!\" she spat, steeling her nerve, hoping her resolve was harder than her nipple currently was. Taking a deep breath, she stopped running and spun, pointing the gun and pulling the plastic trigger... \n\nShe yelped in astonishment as coruscating arcs of lightning crackled and lashed out from the muzzle, enveloping several foes, who wailed in glowing agony before disappearing from view. \n\n\"Jesus H Fucking Tesla!\" she exclaimed in amazement as she gaped down at her toy. \n\n\"Virginia, language!\" Santa warned. \n\nShe rolled her eyes and pointed at another man rushing her, pulling the trigger and watching him explode in a shower of scintillating particles. \n\n\"This shit will fuck you up!\" blared the speakers. \n\nThe wall splintered next to Ginny and several terrifying creatures barged in, causing her to shriek in fright- they were easily Santa's size, vaguely humanoid but covered in a greyish, segemented carapace, with insectoid heads, evil-looking mandibles and huge claws at the end of four arms. They hissed as the lunged for her. \n\n\"Fuckfuckfuck!\" cried out as she began running. \"Fucking hate motherfucking bugs!\" \n\nShe fired wildly behind herself without looking, managing to strike one of the new creatures but only slowing it down. Ginny raced for the stairs, stampeding up them only to find more of the yellow-eyed humanoids waiting for her. \n\n\"Santa!\" she cried out in terror. \"Help!\" \n\nHe glanced her way and grimaced at her predicament. \"Aw, hell...\" \n\nWith a strength born of the desperation to protect one of his precious children, he surged forward, shoulder-blocking his way through a knot of assailants, springing through the air with astonishing agility, alternately using the wall and railing of the stairs to get to the upper floor, twisting and executing a flying kick that downed a foe about to attack Ginny. \n\n\"Good thing I wore my enhanced parkour boots tonight, eh?\" he muttered as he glared at the foes crowding to get up the stairs or down the hallway at them. \n\n\"I don't even know what that means.\" Ginny snapped, backing up warily as the horde coming for them grew in numbers. \"If that's some sort of geek speak, then we- are you getting bigger?\" \n\n\"I guess I am,\" he replied, grimly, glaring at their foes. \"I don't expect what I'm saying to make sense, but the other iterations of me, my other selves, they're all coming here, merging with me to help meet the threat.\" \n\n\"You're... consolidating?\" she asked in disbelief. \n\n\"That's one way to look at it,\" he said, his blue eyes flashing. \"It's gonna make finishing the Christmas run tight if I get held up here much longer.\" \n\n\"Oh, terribly sorry if I'm inconveniencing you, your highness.\" Ginny said, trying to not sound too snide. He put his body between her and ther foes, backing her up against the wall. \n\n\"They can't come through the wall you're up against, it's the South wall,\" he said quietly but with a sense of urgency. \"You're safe from that angle. You can fire your gun past me or over the rail at the guys down below. Since they're trying to reach you that means they've solidified enough that they can't do crazy things like jump seven meters up to reach you, they'll have to use the stairs.\" \n\n\"I thought they were after you.\" Ginny said hotly. \n\n\"They were, until you announced yourself with a jug of nog,\" he pointed out. \"Now they want to destroy you to hurt me.\" \n\n\"Oh. Sorry.\" Ginny mumbled somewhat sheepishly. \n\n\"You can make it up to me later!\" he said as he surged forward suddenly, bulling his way through the approaching crowd, clotheslining several at once. Shouts went up and the fight was on again. Santa punched, kicked, elbowed, kneed and wrenched his way through the enemy horde. Ginny swore he was indeed bigger than he had been earlier. His already hardbody physique was almost bulging with muscles now, like a California beach bodybuilder. Black blood glistened on his flawless skin as he maimed the attackers. Droplets that hit the carpet sizzled and ate through it, burning the hardwood floor beneath. \n\n\"Noooo!\" Ginny wailed in despair. \"Not the hardwood! I loved that feature!\" \n\nShe glared and gritted her teeth as she leaned over the railing and pointed the nerf gun down at the endless crowd on the main floor, pulling the trigger. The crackling arcs of energy enveloped several foes, who wailed and vanished. Same as before, the giant insectoids rarely disappeared but seemed slowed or staggered by the attack. \n\nSanta fought his way forward, forcing the attackers back from Ginny. Try as they might, no one got by him, even if it meant that they could strike at him instead. He took their assaults resolutely, using his body as a shield to protect her. Before long, the floor of the hallway was littered with bodies, some barely stirring, others not moving at all. Still, the foes swarmed up the stairs. \n\nOne of the bug-things swiped at him with its vicious claws and he ducked under the blow before kicking his boot into one of the reverse-jointed legs, snapping it. The bug screeched and tumbled and he leapt onto its back, grabbing hold of one of the large, wet-grey chitinous plates that armoured its back and pulled- it tore away with a mushy crack and the beast's keened agony as it shuddered and thrashed. Without pausing, Santa whirled around and slammed the exoskeletal plate across several men's heads, dropping them. \n\nGinny kept firing the nerf tesla gun, wondering what sort of sociopath would invent a deadly weapon that looked like a famous kid's toy. She pushed it from her mind, realizing that she wanted to live and didn't care at the moment about the social mores of the issue. Santa was using the huge chitin plate almost like a shield, driving his foes back with it to the stairs. It finally cracked in half and he punched through the mess, unwilling to give the enemy time to regroup. \n\nHe spun one man around with a fist across the jaw before grabbing his arms from behind and ramming his knee into the man's back, lifting him off the floor and letting him slam his spine onto the stairs. Without waiting, Santa launched himself through the air, knee raised and smashed it into the face of a man on the stair's corner landing. The foe's head went back through the wall with a loud crunch and he hung there limply, no longer part of the battle. \n\n\"Ack!\" Ginny squawked as the nerf gun sputtered and let out several impotent flashes and then died. \"Not now! Nonononononono!\" \n\nOne foe had broken through the cordon and now raced toward her. She yelled loudly and smashed the butt of her nerf gun into his face, staggering him for a moment. She glared at him angrily, waiting for him to fall, but her didn't, so she kicked him in the crotch with her instep. He groaned and sunk to his knees, holding himself. Ginny was practically jumping up and down on top of him by the time he stopped moving. \n\n\"Stay... the... fuck... down!\" she shouted angrily as she turned his ribcage into powder. \n\nShe failed to notice the one last foe who rushed up behind her. \n\nBut then Santa was at her side and he delivered a devastating haymaker to the man's thorax. Stunned, the intruder staggered back against the railing. With a growl, Santa grabbed him by the face and ruthlessly bent his back over the railing before leaping over and slamming his elbow across the man's neck as he went down to the main floor. The lifeless form crumpled next to him as he looked around, glaring. \n\nNo foes remained standing. Aside from the music, all was quiet. \n\n\"It is safe?\" Ginny called from the gallery. \"Are the scary guys and bug-thingies all gone?\" \n\n\"No,\" Santa said warily. \"And the next wave is even bigger.\" \n\n\"Great!\" Ginny complained, tossing the useless nerf gun over the side. \"And according to you, there's no one that can help us!\" \n\n\"I didn't say that,\" he countered, beckoning for her to come down the stairs and be near him for protection. \"I just said there was no Easter Bunny.\" \n\n\"No Superman either, apparently,\" she grumbled as she approached him, letting him put a huge arm around her possessively. He was, indeed, bigger than ever. She was practically child-sized next to him now. \"So who the hell is there to help us?\" \n\n\"If help's arriving it had better get here soon,\" he said, taking her to the remains of her big glass bay windows and back door. The wind was howling as snow drove into the living room. What was left of it, anyway. Which was nothing. \"It's now or never. Can you see them?\" \n\nShe peered into the darkness outside and a chill ran down her spine- hundreds of red and yellow glowing eyes could be seen in the darkness. And they seemed to be getting closer. ",
        "\"Do... do they see me?\" she asked, swallowing nervously. \n\n\"I'm sure they do,\" he said, grimacing. \"Not going to take a chance and assume they don't. I'll do everything I can to protect you, of course.\" \n\n\"Is... is that going to be enough?\" \n\nShe could hear the angry hisses and an evil chanting outside clearly now, getting closer with each moment. It pained Santa that he couldn't lie to her. \n\n\"I don't know, Virginia.\" \n\nShe sighed and smiled weakly. \"Well, at least I know there's a Santa Claus now. And he gave me the night of my life before it all ended.\" \n\nHe returned the smile, trying to feign a cheerfulness he didn't feel. \n\n\"I don't...\" Ginny faltered, trying to find the words. \"I don't suppose that you'd... well... that you'd be willing to kiss me one last time? You know, before the end?\" \n\nHe turned to look down at her, his hands holding her arms with an unreal gentleness and a warmth in his eyes that comforted her even now. \n\n\"Nothing would make me happier, Virginia.\" \n\nShe smiled and closed her eyes. \"Merry Christmas, Santa.\" \n\n\"Merry Christmas, Vigrinia...\" he said softly as he leaned down to kiss her. \n\nThen the night was filled with high-pitched shrieks, a noise that made her eyes snap open. She'd heard noises like that before, once a long time ago in grade school. It sounds like the hissing passage of meteors above, and getting closer. Or what she imagined artillery sounded like when it was incoming, like in all those war movies. \n\nSanta's head turned and an almost evil grin crept over his face as he listened. \"That's more like it!\" he declared, standing tall and pointing at the blackness of the night. \"Watch the sky, Virginia...\" \n\nShe looked up and noticed glittering points of light, dozens of them, seeming to get closer. The hissing shriek was indeed their approach and they seemed to be aimed right at them. She felt Santa's hand squeeze on her shoulder, almost in excitement. His blue eyes were blazing ferociously. \n\nFinally, what looked like dozens of giant icicles, each larger and longer than a semi, lanced out of the night sky and slammed into the earth around her house, shaking it as they buried their tips in the frozen ground and came to a stop. Several impaled the intruders as they came in, while others kicked up a covering spray of snow as the enemy stopped and looked around in confusion. \n\nThen doors or portals opened on the sides of the titan icicles and tall, lithe beings began leaping out of them, wearing weird, form-fitting armour and carrying space-age guns and swords or axes. Their armour and long hair was a riot of colours that was reflected by the snow and ice. Wild, ululating warcries pierced the air. \n\nAnd a savage, bloody battle began on her property. \n\n\"Who the hell are they?\" Ginny almost yelled in astonishment as she watched. They moved with inhuman grace and speed, the ones not wearing helmets revealing long, beautiful facial features that were often frightening because of the wrath they displayed. The helmets were all tall and peaked, showing fearsome designs and glowing eyes. Weird runes pulsed and throbbed with light all over their armour. Guns hissed and shrieked while swords hummed as they slew. \n\n\"My elves,\" Santa said, clearly pleased and also eager to fight but not willing to leave her side yet. \"They got my call and converged on my position.\" \n\n\"Those are elves?\" she exclaimed in amazement. \"Aren't they cutesy little toy-shop people?\" \n\n\"Cute myth, but no, not these ones,\" he replied, watching as several elves wearing bone-white armour with feminine features raced past, throwing themselves into a knot of the hulking bugs. They screamed and the masks of their wild-maned helmets gave off vibrations that shook Ginny's teeth in her head as it melted their foes' faces off. \"No, a lot of my elves are warriors, meant to help me fight Krampus. They keep Christmas safe with me.\" \n\n\"What the hell are they wearing?\" she asked in disbelief. How could this weird night get any weirder? \n\nSanta sighed. \"Truth? They've been spending way too much time playing Warhammer 40k and they... appropriated armour, weapons and tactics from the Eldar faction. They're space elves.\" \n\n\"Wow. Gay...\" she muttered, shaking her head. \"Well, they're certainly earning their keep tonight.\" \n\nHe nodded. \"Been a long time since Krampus moved against us this hard. Apparently he got bored and was feeling uppity. That or he just forgot what a good thrashing felt like.\" \n\nGinny watched as three elves, clad in scary black armour and wearing helmets that looked like peaked skulls, marched relentlessly forward, firing little rockets from elaborate launchers they carried in their hands and on suspensor harnesses. The rockets punctured the bugs' chitin shells and exploded inside them, sending shards of exoskeleton and stinking goo in every direction. Ginny squeaked and hid behind Santa as some of the nasty effluence landed right where she'd been standing only a moment before. \n\nBeams of super-heated plasma and tiny, shuriken-like projectiles hissed and whizzed by them, the remains of her lovely house now the center of a battleground while the winter storm raged on. Warriors in green armour, carrying weapons that looked like a horrifying hybrid of sword and chainsaw, tore into a knot of foes, slicing them to bloody ribbons. As savage as the battle had been earlier, when it had just been her and Santa, she suddenly appreciated its relative civility. \n\n\"They need my help,\" Santa said finally, cracking his knuckles, his expression grim. \"We have to finish this off or Christmas won't come on time.\" \n\n\"I thought you said there was plenty of time.\" Ginny protested, frowning up at him. \n\n\"There was,\" he admitted. \"But in order to defeat Krampus' minions, I summoned every single quantum iteration of myself back to here to help me fight. No one is delivering presents anywhere at the moment. I can't change real-time if I'm here in my entirety.\" \n\nHe turned and looked at her. \"Hopefully we're keeping them busy enough that they don't worry about you. Stay against the wall and work the music, will you?\" \n\n\"Manning the music station,\" she said, nodding, focusing on giving herself a task. \"Music for Santa and his homocidal elves to kill by. Got it...\" \n\nShe watched as Santa leapt through the shattered remains of her bay doors into the howling storm and crashed into a knot of foes, savaging them. She watched in disbelief for some time, trying to figure out how Santa could kill anyone. I mean, even serial murderers got presents in prison, didn't they? Maybe they didn't, she had no way of knowing and chalked up thinking about this to what could only be described as the weirdest night of her life. \n\nShe squealed and dodged out of the way as a body came flying through the doors and landed next to her. She scrambled over to the entertainment center and stood in front of it, trying to figure out what the hell she should play. \n\n\"Okay...\" she breathed, trying to focus. \"Mass slaughter music... mass slaughter music...\" \n\nWhat constitued mass slaughter music? Death metal? Panic At The Disco? \n\nTeletubbies music? \n\nShe had no playlists, so she began cycling through the radio, hoping to find anything that might suffice. Oldies... Christmas music... hip-hop... trance... disco... \n\n\"Son of a fuck,\" she muttered. \"This is harder than it looks.\" \n\nShe finally came across a station playing 'Jailhouse Rock' and decided that was good enough, she was sick of looking. She winced, trying to ignore another splintering crash as a body came through her wall. She hugged herself but then felt her robe. She frowned as she looked down at it, realizing it had been thoroughly shredded in the fight earlier. Those shuriken-thingies had been cutting it real close. \n\nGinny grumbled as she pulled it off and threw it away, standing there completely naked- it hadn't been keeping her warm in its current condition and she was thoroughly beyond giving a shit at this point about who saw her naked. They were all too damn busy tearing one another apart anyway. \n\nAnd that sort of pissed her off. She was buck-naked and no one seemed to care. \n\nShe'd shaved her pussy for this? \n\n\"And I thought my night sucked before,\" she sighed to no one in particular. \"Not getting my cunt pounded had been my biggest complaint before this h-ACK!\" \n\nShe never saw the menacing shadow that had slipped up behind her. \n\n*** \n\nSanta picked one of his foes up overhead and hurled him into a cluster of foes, bowling them all over. He then punched another man as he tried to run by, knocking him off his feet and into his back. A quick stamp on his solar plexus made sure he stopped moving. The huge man thrust his fist in the air and shouted loudly. \n\n\"Clear!\" he thundered, indicating no other enemies surrounded him. His elves responded in kind, many of them gathering in a tight ring about him, weapons facing out as they sought to protect him. Hundreds of bodies lay strewn across the landscape, some burning from plasma blasts, other shredded and blown apart by rockets or sliced into bloody jerky. The storm seemed to be abating, no longer a blizzard so much as a stiff wind and swirls of snow. \n\n\"Sire, we detect no enemies in the immediate vicinity,\" one elf wearing blue armour with a tall, crested helmet announced, striding up and saluting by thumping his gauntleted fist over his heart. \"This attack has been defeated.\" \n\n\"Maybe,\" Santa said, looking around warily. \"But that doesn't mean anything just yet. We have to secure the area, make sure Virginia is alright and then get back to-\" \n\n\"Kringle!\" \n\n\"Damn,\" he muttered to himself. \"I thought this was too easy.\" \n\nHe made several complex gestures, sending his elves fanning out in a wide arc as he began trudging forward through the snow, heading toward where the voice had come from out of the night. The winds and squalls of snow continued to die down until there was an almost deafening silence, the moon shining brightly overhead and revealing the sheer carnage of the battle that had been waged- the snow and ice gittered with frozen blood. \n\n\"KRINGLE!\" snarled the inhuman voice angirly. \n\n\"I'm coming, I'm coming!\" Santa said loudly, scowling. \"Don't get your panties in a bunch!\" \n\nHe stopped in a clearing on the other side of the house, glowering at who confronted him- the beast was not as tall as he was, nor as muscular, but horrifying in aspect. The backward-jointed, hairy legs ended in wicked hooves. The skin not covered in coarse black fur was almost as dark and criss-crossed with innumerable scars. The vascular chest was crowned with a strong neck and sitting atop it was a blasphemous head, a demonic goat's visage from which grew four evil, twisting horns. The red eyes blazed like wrathful coals and sharp teeth glistened wetly inside the hateful mouth. \n\nKrampus. \n\nAnd in one of his powerful, clawed hands, he held Virginia by the neck, who looked like a rag doll. \n\n\"Hi, Santa...\" she said weakly, looking very apologetic. \n\nSanta kept walking forward, clenching his fists. \n\n\"By all means, Kringle, keep coming forward if you mean to slay the child.\" Krampus growled, starting to squeeze and causing Ginny to shudder in fear. Santa stopped dead in his tracks, his eyes narrowing. His elves had now cast a tight net around the scene, hemming in Krampus. One circle of warriors faced inward, pointing their weapons at the abomination while another behind them faced out, prepared for any further attacks. Santa didn't move. \n\n\"Let the girl go, Krampus,\" he said levelly. \"This doesn't concern her.\" \n\n\"Oh, I beg to differ,\" said the beastman in an almost non-chalant tone. \"It's always about the children, isn't it?\" \n\n\"Hey!\" said Ginny angrily. \"I am not a child, jerk! I'm twenty- GRRK!\" \n\n\"Oh, do stop talking, you're such an annoyance.\" Krampus said, giving her neck another warning squeeze. \"Let the adults work this out.\" \n\n\"There's nothing to work out, Krampus,\" Santa growled, his blue eyes flashing. \"You'll let the girl go.\" \n\n\"I think we both know that's not happening,\" intoned the vile intruder. \"She is my victory over you, and you know it. Revenge is not only a dish best served cold but often. And not often enough for me.\" \n\n\"About this cold revenge dish thing,\" Ginny said, squirming slightly. \"Couldn't... couldn't I just find you a nice tin can to chew on instead?\" \n\n\"Shut up, girl!\" Krampus said harshly while several elves could be heard to chuckle and even Santa smirked at her jest. \"I hold your life in my hands, to dispose of as I please.\" \n\nHis foul breath crackled in the cold night air. His touch was uncomfortably warm, almost hot and strangely kept her body from freezing in the winter night. His touch felt evil and her skin crawled in revulsion. His strength was terrifying. \n\n\"It wasn't enough that I slaved in coal mines for you, giving you carbon lumps to deliver to naughty children,\" Krampus growled, glaring at Santa. \"It wasn't enough that I found the worst of them and brought them to you in the night so you could lecture them.\" \n\n\"Hey, nobody asked you or ordered you to do the coal thing, pal,\" Santa said angrily. \"And the whole kidnapping kids thing was your idea. I decided to let you have some creative control and look what happened. When it didn't work out, you decided that beating naughty kids with reeds was the answer. You're damn right that wasn't good enough!\" \n\n\"SILENCE!\" Krampus snarled loudly, stamping one of his clawed hooves and making the ground shake dangerously. \"Your kind-hearted foolishness with these puny mortals changed nothing about their behaviour! Your failure to recognize their inherent selfishness was why our efforts were doomed!\" \n\n\"These puny mortals?\" Santa countered. \"You used to be one of them, Pete, remember? You were a well-behaved boy once.\" \n\n\"Shut up!\" growled Krampus. \n\n\"Well-behaved, but not good,\" Santa continued. \"You followed the rules and wanted everyone to follow rules. You were a control freak. I brought you north to show you what kindness could do, but you hated the cheer and the happiness and you fled to the coal mines in Greenland, hiding in the dark where the light of Christmas couldn't touch you! And when making kids feel bad with coal didn't bring them into line, you started the whole whipping them with reeds thing. Good job there, Pete!\" \n\n\"I'm warning you, Kringle...\" Krampus said dangerously. \n\n\"Ooh, he really gets your goat, doesn't he?\" Ginny sneered, causing several elves to laugh loudly. Krampus now snarled furiously and lifted her into the air by her neck, causing her to cry out in pain. Santa watched warily, knowing better than to make a move. \n\n\"We seem to have an impasse,\" Krampus said, an evil smile playing over his slavering mouth. \"You cannot harm me, because you know I can slay the child, but I cannot as yet slay her because she is my bargaining chip. But my need to hurt you, old man, is so very strong.\" \n\nHe lowered Ginny down until her feet were just touching the snow-covered ground. She frowned as she heard a wet slithering sound she could not identify. \n\n\"And there are other ways to hurt you than slaying the poor dear, aren't there?\" \n\nGinny felt something slimy touch her leg and then start to crawl up it, wrapping around her smooth skin. She shuddered and squirmed in horror as she realized exactly what was happening. The snake-like appendage wound up her thigh and then behind her. She gasped as it slid between her ass cheeks and then underneath to her pussy. She felt the blunt head split her lips and then move upward again. \n\n\"Don't do this, Krampus.\" Santa said, trying to figure out what to do without hurting Ginny. \n\n\"And why not?\" replied the qliphotic abomination. \"Don't you have a present for me? Then I guess I'll have to give myself one.\" \n\nKrampus' organ continued to slither its way around her body, leaving a glistening trail on her skin. She stiffened and moaned as his apparendage wrapped around her breasts, squeezing them, the head pausing and teasing the nipples. \n\n\"Hey, asshole, dinner and a movie first!\" she spat angrily. Ginny was about to say something else when the large, grayish cockhead snaked up in front of her face and then plunged into her mouth, causing her to gag and go silent. Her eyes widened and she thrashed furiously, but to no avail. He was simply too strong. \n\n\"Language, young lady.\" Krampus chided, still staring at Santa. \"Hasn't Santa taught you anything?\" \n\n\"This isn't gonna end well for you, Pete.\" Santa said, his tone dire. \n\n\"Christmas never does, Kringle,\" replied the demon, his cock sliding in and out of Ginny's mouth. \"I'm just hoping to make the holiday every bit as awful and intolerable for you as it is for me. After all, misery loves company.\" \n\nHe brought her body close to his head and his other hand reached over and stroked her netherlips, which were glistening. He leered at his foe, knowing Santa was helpless to get closer. \n\n\"Is she good down here?\" Krampus said mockingly. \"Nice and wet and tight for you? Was she the best one ever, in the endless list of good girls you have fucked?\" \n\nSanta said nothing, just glaring at Krampus. His knuckles were white as he clenched his fists. \n\n\"Sharing your toys is the spirit of Christmas, isn't it?\" Krampus said evilly, finally pulling his cock out of her mouth. Ginny coughed and sputtered, tendrils of resinous spittle and worse trailing away from her lips. She glared at Krampus but was still immobilized. \n\n\"Just get this over with and fuck me already, whip-prick,\" she spat. \"You won't be my first egotistical disappointment, trust me.\" \n\nKrampus' eyes blazed red and his tongue sped around her naked form blindingly quickly while he released her from his clawed grip. The tongue wrapped and immobilized her arms, holding them out straight while still encircling her breasts. It then snaked around her waist and legs, pinning those as well while his long cock, swaying about like a cobra, came to a stop in front of her swollen netherlips. The head teased and tapped against the opening, causing her to moan and squirm. \n\n\"As you wish, child...\" \n\nThe head forced itself through her lips, sliding deep inside her. Ginny cried out in a mixture of shock and indescribable pleasure. She felt the tip of his pointed tongue probe trailing around her nipples. The python-like length of his cock churned inside her pussy. \n\nThe blinding light behind her eyes finally receded and she lifted her head, looking out into the night, feeling his tongue constricting around her neck. She could dimly see a huge being in red pants and black boots watching nearby, his powerful chest exposed. The startling blue eyes flashed in the darkness of the night. She could tell he wanted to rescue her but didn't dare come closer. \n\nShe gasped and shuddered as Krampus' member pushed still deeper inside her. She felt fuller than she had imagined possible, the slithering appendage stretching her wide. The sticky, squelching noises were hardly to be believed. \n\n\"Ew, gross! Hentai noises!\" she thought in revulsion. ",
        "\"Krampus...\" Santa warned. His elves all pointed their weapons menacingly but he held up his hand, staying them. \n\n\"The child is naughty,\" Krampus said, smiling through pointed teeth. \"Very naughty. Such a sordid past.\" \n\n\"Hey, back off, she was young and needed the money!\" Santa snapped defensively. \"That thing with the midget and the donkey was-\" \n\n\"You're not helping here!\" Ginny shouted, blushing furiously, even as Krampus violated her. \n\n\"Wicked child,\" growled the vile demon, shoving his member in and out of her, the peristaltic actions of its length causing her to writhe and squirm in his grip, her breath coming in ragged gasps. \"Shameless. Even though I violate her, she finds a way to be concerned about how you perceive her. I find it... titillating.\" \n\n\"Oh, do I make you horny?\" she sneered, turning her head to smirk at him. \"Couldn't tell, looking at that head of yours.\" \n\n\"Silence!\" Krampus hissed, spittle flying from his jaws, his eyes flashing angrily. \"I hold your life and death in my hands.\" \n\n\"How would I know?\" she shot back. \"Hope you're better with your hands than you are with your dick, Billy G.\" \n\nHe plunged his cock deeper still inside her. She went rigid and cried out. \"That all you got?\" she rasped, trying not to faint as she felt popping inside her hips while he stetched her. \"My brother got in deeper than that when we were little!\" \n\n\"Insolent!\" Krampus snarled savagely, bouncing her up and down and he fucked her harder than ever, pulling on her arms and legs, stretching her joints til they creaked. She felt a deep, wet heat building inside her and in spite of the horror she consciously felt about the situation, even more dire was her need to cum. She felt her pussy squeezing around his cock. His snake-like tongue probed her ass and wriggled inside, further adding to her desperation. \"Intholent bith, you will be punithed!\" \n\n\"What was that?\" Santa asked, turning his head slightly and putting his hand to his ear. \"I couldn't understand you, it's like you have a lisp or something.\" \n\n\"Don't mock meef!\" Krampus said angrily, his tongue whipping out of Ginny's ass, causing her to yelp suddenly. \"I'll kill her, Kringle!\" \n\n\"Not before I cum, damn you!\" Ginny panted, her body flushed and covered in sweat as she twisted and writhed in his grip. \"Gnnnnnnnnn, so close, goddammit!\" \n\n\"Language!\" Santa and Krampus both snapped at her. \n\n\"Aw, c'mon!\" she wailed. \"You two are total pains in the ass! Do it, Billy! Show me what a ba-a-a-a-a-a-d boy you are!\" \n\nKrampus glared at her and began fucking her harder than ever. \"As you wish, child!\" \n\n\"Krampus!\" Santa shouted, reaching out his hand in alarm. \"Don't!\" \n\nKrampus grinned evilly at Santa, his teeth clenching as he drew close to climax. His cock seemed to swell along its length, stretching her wider still. She threw her head back and gritted her teeth, straining as she was overwhelmed by sensation... \n\nSanta's fist slammed across Krampus' jaw with a powerful crack. The demonoid's eyes rolled into his head and he crumpled to the ground. Ginny wailed in frustration as his cock pulled out of her and retreated back to his body, like a wet, slimy Stanley tape measure. She collapsed to her hands and knees in the snow, panting and shaking, her eyes wide. Santa raced up and knelt next to her, his eyes shining with concern. \n\n\"Fuck...\" Ginny whispered, gasping for air. \"Motherfucker...\" \n\nShe looked up at her rescuer now, her eyes flashing accusingly. \"The hell? Couldn't you have let him make me cum first?!\" \n\nSanta paused. \"What?\" \n\n\"I was so damn close!\" she hissed, standing up and stamping her foot. \"I was within half a second of the orgasm of my life and you had to choose that moment to intervene and play the hero! Don't expect a thank you card!\" \n\n\"Uh, Virginia,\" Santa said, rubbing the back of his neck awkwardly, trying to figure out what to say. \"If he had brought you to orgasm, it would have killed you. When Krampus climaxes, his appendage you were so attached to bursts into spikes, basically killing you from the inside while denying you your orgasm.\" \n\nShe paused and then deflated. \"Holy cobra dildos. What a bastard.\" \n\nGinny then pointed a finger at her saviour. \"But you still owe me an orgasm, then, pal. You may have rescused my from certain death, but that doesn't mean I don't need relief.\" \n\nSanta looked really confused. \"What, here? Now?\" \n\n\"Damn straight,\" she said firmly, suddenly remembering she was buck naked in a snow-storm. In spite of the no-doubt freezing weather, her body was still warm and very wet with need. She put her hand down her pussy and felt around for a moment before presenting her sticky palm and fingers to Santa for inspection. \"Do I look satified to you? You've already fucked me, Screamo the Goat Boy just fucked me, who cares if your freaky gay elves watch us? I need satisfaction now and I already am aware that you can't say no.\" \n\nSanta sighed. \"It's gotta be quick, Virginia. I'm really behind, now that I'm completely temporal in one location.\" \n\n\"Whatever, just get me to the promised land, man.\" Ginny replied, shrugging. \"Who knows, maybe your entourage might enjoy a show.\" \n\n\"Oh, right, about that,\" Santa said, standing up tall and shouting loudly. \"ABOUT... FACE!\" \n\nAs a single unit, the elves all turned around smartly on their heels, still arranged in a protective ring around their liege and his companion, weapons ready as they scanned the darkness for trouble, their eyes glowing menacingly inside their helmets. \n\nSanta strode up to Ginny, towering over her and ignoring the prostrate form of the still-unconscious Krampus, snuffling nearby. She smiled up at him, somehow warmed by his presence, in spite of the icy night she should have frozen to death in already. He pulled her into his arms and kissed her deeply. She moaned into his mouth as she felt her already molten core getting even more heated in response to his touch. Tongues tangled and played as he took her ass cheeks in his hands and squeezed them, making her shiver. \n\nGinny's hands fumbled with his large black belt until it fell away and then pulled down his red pants. He pulled her onto his powerful thighs, resting her on them. She hooked her legs behind his waist and began grinding her wet, eager pussy against his hardening cock, which swelled readily. Her head was almost spinning, she was so horny. \n\n\"Mmmmm, give it to me, baby,\" she purred, feeling the head of his cock touch her netherlips. \"Make me cum hard and fast.\" \n\nShe sighed loudly as he pulled her close, penetrating and sliding deep inside her. Ginny moaned shamelessly as Santa once again began to pump back and forth inside her. His huge cock stretched her pussy wide, but not in the violent, violating way Krampus did. This felt warm and utterly perfect. She nipped at the skin of his chest while he moved in and out of her. \n\n\"Yessssss,\" Ginny breathed as he began to moved faster, pumping strongly and rhythmically. She could feel her wetness trickling down between her cheeks, her pussy clutching at him hungrily, greedily and unwilling to let go until it was somehow sated. \"Ohhh, God, just what I needed. Yes, fuck me, Santa!\" \n\nHe gripped her tight and thrust into her, picking up his pace just the way she wanted. She was gasping and yelping now and he squeezed her cheeks, one of his fingers poking inside her puckered knot. She clenched her teeth and groaned at the intrusion, murmuring that she loved it. She grew warmer and warmer, her body tingling with an exquisite fire that rippled out from her core. \n\nSanta turned her around and set her feet on top of his boots, bending her forward and pulling on her arms. She cried out as he fucked her harder, his hips thumping against her ass cheeks. Her hands clenched wildly, her breath coming in gasps as his overwhelming strength dominated her. \n\n\"Oh, God!\" she panted, beginning to shudder uncontrollably, almost drooling. \"Gnnnnnnn, cum in me, dammit! Fucking cum in me!\" \n\nSanta pulled on her arms even tighter as his thighs slammed into her. Ginny strained, craning her neck, teeth clenched as she tried not to scream, but it was no use- she wailed loudly as he came inside her, filling her once again in a way she could not describe. Her orgasm shook every last atom of her being, transporting her to a world of nothing but pleasure, edged with mint. \n\nShe buckled, hanging loosely in his arms, exhausted. She'd been fucked hard at least five times tonight and had a dreadful suspicion that this experience would only make her libido even more hyperactive. She sighed as Santa scooped her naked form into his arms and cuddled her against the cold. Ginny purred and traced a fingerail across his broad chest. \n\n\"Thank you,\" she said quietly. \"Just what the doctor ordered. That quenched the flames, for now.\" \n\nHe finally put her down and she looked at the remains of her ruined chateau, which was completely leveled and now on fire. \n\n\"Poor Oatmeal,\" she murmured. \"Where am I going to live?\" \n\nShe scowled down at the still supine Krampus, anger flaring in her. \"It's this jackwagon's fault. You should totally napalm his face.\" \n\nSanta looked down at her in shock. \"Did you just say I should jerk off in Krampus' face?\" \n\n\"Damn right, he'd deserve it too.\" Ginny announced. \"That and shove your sleigh up his ass.\" \n\n\"I am not jizzing in Krampus' face.\" Santa said, clearly repulsed by the suggestion. \n\n\"Fine, leave a woman to do a man's job,\" Ginny said testily, striding over to Krampus and putting one leg on either side of his head. She stuck three fingers inside her pussy and managed to tease out considerable amounts of Santa's minty cum, which she smeared all over Krampus' face and into his fur with glee, even giving him a glistening white moustache. \"Take that, asshole!\" \n\nShe looked like she might have been done desecrating the unconscious form, but then she paused and squatted over him, peeing on his body and face, the stream steaming in the cold night air. She grinned evilly as she thoroughly baptised him. \n\n\"Teach you to mess with me.\" Ginny muttered as she walked back to Santa, nodding. The huge man had a wide smirk on his face and shook his head slowly. \n\n\"I can't believe you just pissed all over Krampus,\" he said, hugging her to him. \"However, you're going to freeze to death at this rate...\" \n\nHe held out his hand and one of his elves dutifully brought him a large, velvety red cloak, which he wrapped around her. She blushed and smiled gratefully at his consideration, but only until he slid it off her, revealing that she was now wearing some ridiculous 'Hot Christmas Elf' outfit, complete with striped stockings and high heels. She looked like a Yule whore. \n\n\"Seriously?\" she asked, unimpressed. \"This is your solution to my naked issues?\" \n\nHe shrugged. \"I liked you better naked, but you would freeze quickly.\" \n\n\"Whatever,\" she sighed, looking down and appreciating the considerable lift it gave her cleavage. It was incredibly warm, in spite of how scant it was. \"So now what? I still have no damn home, you and Goatse here blew it up with your little barnyard brawl.\" \n\nSanta looked around warily. \"That might be the least of your worries. The wind's picking up again, which means that another assault is coming. We need to get out of here.\" \n\n\"Sire!\" said one of the armoured elves, thumping his fist to his breastplate and bowing his head. \"We will cover you. You must go while you still have a head-start and the dark one is unconscious.\" \n\nSanta nodded. \"Yeah, he's not gonna be happy when he wakes up and he's really gonna want revenge on you, Virginia.\" \n\nShe felt her mouth go dry at the notion of another battle and Krampus waking up to even the score. \"So... now what?\" \n\nSanta shrugged. \"I'd say it's fairly obvious. I've still got to make my rounds before the night is over and I'm not leaving you here...\" \n\nShe gaped as he put his hands on her shoulders and looked down into her eyes. \n\n\"Virginia, you're coming with me and you're going to help save Christmas.\" \n\n*** \n\nAuthor's Notes: Apologies if this chapter and the third chapter did not manage to hit publication before Christmas Day, it's been crazy busy and for whatever reason my stories do not move through the queue the way an odt file is supposed to. It's probably something I'm doing wrong and just don't know it. \n\nChapter 3 will be the finale of this completely seasonal work (published off-season), and then it's back to my other stories. Hope you're enjoying this little romp, I'm keeping it as light and funny and off-beat as possible. \n\nMerry February! \n\n- Management."
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "humour",
        "violence",
        "non-consensual",
        "lover's quarrels"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/miracle-on-rr34-ch-02-1"
}