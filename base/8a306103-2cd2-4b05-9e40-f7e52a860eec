{
    "title": "Family Issues Ch. 08",
    "pages": [
        "Author's Note: Any and all persons engaging in any sexual activity are at least eighteen years of age.\n\nAs always, I need to thank, Stylus and Madison (ThanatopicFolds) my cool editors. If you spot any issues with grammar, it's because the editing came from Down Under where beer does flow and men chunder, so it's all good. \n\nChapters 7&8 were supposed to be a single chapter. I do tend to write longer prose than I plan. The immediate result was,\n\na. Some people got the impression that the story train went off the love-story rails (it didn't).\n\nb. There is a little imbalance of sex scenes. \n\nIt's a long story, but it has a frame. You'll just have to be patient, or not. \n\n$$$$$$$$$$$$\n\nThe human heart is a puzzle made from pieces of our lives. \n\nOur heart is a clean slate as we are born. Pure. A gift from the almighty, some say. We see the world through an innocent prism, unstained by prejudice or fear. Facts, questions, and eventually rebellion come only later. When we are young, we are an empty book waiting to be written. \n\nAnd that's when we are the most vulnerable. \n\n--\n\n\"Sodomites! Reprobates! They call them gay as if they are happy people. But the correct term is Sodomites!\" \n\nThe low rumble of the pastor's voice was comforting, despite the message. It wrapped around Kevin's body like a protective blanket. A man with a voice like that was the shepherd who leads the flock to the safety of shore. Far away from the teeth of the big bad wolf. \n\n\"If you feel offended, then you know what it tells me? It tells me the brainwashing is going very well. You've been told by Hollywood and the mainstream media that homosexuality is a normal alternative lifestyle. That the she-hag abominations called futanari should be allowed to march in Phoenix. Allowed to flaunt their disgusting and filthy lifestyle as if it is something to be proud of. But I will tell you today the word of God. And the word of God is crystal-clear on this subject.\"\n\nPastor Roy Anderson had kind blue eyes. He looked like a tall oak\u2014broad, strong, and just behind his podium. Like a movie star, and not like a small-town, part-time clergyman. His daughter, Laura, was the tallest kid in Kevin's class. Kevin had had a crush on her since second grade. \n\n\"Jeremiah chapter six, verse thirty. They are called rejected silver because the LORD has rejected them. Rejected! That what they are. The Lord says, 'Pray not for these people nor lament them.' Their acts of the flesh are evident, sexual immorality, impurity, and debauchery, their idolatry and witchcraft. Those who live like this will not inherit the kingdom of God.\"\n\nHis mother fidgeted in her seat, and Kevin turned to her. It looked like her lip got caught by one of his dad's jig hooks, because it started curving down. Kevin's big purple eyes searched her face for the cause. That frown was reserved for Kevin's father when he drank himself to silliness. \n\n\"And if you ever say the word LGBT to me...\" The pastor's voice rose, and the acronym LGBT was uttered with such disdain that Kevin thought it must have something to do with spinach. \"If you say LGBT or LGBTF, then you might just as well come to me and say, 'I'm a brainwashed idiot. I don't read the Bible. I don't love God.'\"\n\nTo everyone's surprise, Pastor Roy Anderson jumped onto his podium. He had to bend so his head didn't bump the ceiling, and it somewhat diminished the dramatic effect. \n\n\"I want each of you to look at the young ones sitting next to you. I want you to think of how those deviants will drag them to the gates of hell, smiling. I'm sick of it, and I ain't going to back down, and I'm sick of people not backing me up!\" He pointed at his flock of Christians. Kevin thought his accusing index finger was aimed at the only person missing from the congregation. Kevin's father never joined his family for Roy Anderson's sermons. \n\n\"Because when these deviants come to our house, I will not stand aside. No homos or she-fags will ever be allowed in this church as long as I'm alive. Never!\" \n\nThere were more than a few amens. Laura rose on her long feet and started clapping. Kevin stood and applauded too. He had no idea who the Sodomites were, or what they did to anger the pastor so much. He suspected they might be those mysterious people from the IRS his father grumbled about all the time. But he was ten, and in love, and he was willing to spit in every Sodomite's face if it would make Laura take notice of his existence. \n\n\"Kevin, grab your little brother, we are going home.\" \n\n\"What? We got to stay at least till the prayer.\"\n\n\"Kevin O'Brien!\" \n\n\"But Mom, we haven't\u2014\"\n\n\"This instant!\" \n\nHe looked desperately at Laura, hoping she didn't notice his mom disrespecting the pastor. Sadly, his complaints made her turn her head their way. Laura stared at Kevin for a second, and then her gaze turned to his mother, snarling. It was a look of pure hate. \n\n--\n\nThe Sodomites didn't drag Kevin to the gates of hell, he entered willingly. At least it felt that way. \n\nThe crop swished as it came down. It kissed Kevin's skin, like a dragon breathing fire directly against his butt and thighs. He saw the black tip rise, leaving an angry red stripe. \n\nThe crop fell again, and Kevin screamed.\n\n\"Just breathe,\" Sin said. \"Take deep breaths, and it will go easier.\" \n\n\"On one hand,\" his breath whistled as he struggled to take air in, \"on one hand your advice is totally demented, but on the other hand, it's totally demented. Please stop! Why are you doing this?\" \n\nHe heard the swish of the crop, but nothing happened. There was a stifled cry, and something heavy crashed, before a curse and the sound of a struggle. Kevin tried to look behind him, and when that didn't work, he swiveled, twisting the rope and chains. \n\n\"Her real name is Jenny, by the way,\" Nadine said.\n\n\"Huh?\" \n\n\"Jenny. She fakes a French accent because she thinks it makes her more exotic. But she's really Jenny, from Oklahoma. Daughter of two attorneys from the Midwest. I don't think you can get less exotic, more middle-class than that.\" \n\n\"Oh.\"\n\nSin writhed on the floor, clasping her genitals and moaning. Madam Hulk stood like a smug little mountain above her. The colossal wrestler had Sin's crop in her hand, and she swished it around, experimenting. \n\n\"He told you to stop, didn't he?\" Nadine had on a red, sheath-style evening gown, something classic. Kevin thought he had never seen anything so beautiful in his life. \"I thought your game was consent, Jenny?\" She kicked the downed girl's stomach. \"What did you tell him?\" She kicked again. \"Breathe. In and out.\" She gave another kick. \"He is right; it is kind of demented.\" \n\nNadine's kick connected with a kneecap, and Sin screamed.\n\n\"Stop!\" Kevin cried.\n\n\"What?\" \n\n\"You're hurting her.\" \n\n\"That's the point.\" \n\n\"Stop! Please, Nadine.\" \n\n\"You're an idiot, Kevin.\" \n\n\"I'm naked and hanging from the ceiling. So, yep. Pretty much.\" \n\n\"All right, the human hanger doesn't want to see me kick the crap out of you, Jenny. I guess it's your lucky day. Stand up!\" \n\nSin, whose real name was Jenny, stumbled up on wobbly legs. \n\n\"The key to the handcuffs,\" Madame Hulk said. \n\n\"It's in my duffel bag,\" Sin groaned. \"Just let me get it for you.\" \n\n\"No.\" Nadine patted her cheek. \"Piss off! If I ever catch a sniff of you again, you won't be so lucky. Care-Bear here won't be around to protect you.\" \n\nJenny didn't press her point about the duffel bag. She limped as fast as she could out of the basement.\n\n\"Thank god. That crazy bitch.\" \n\n\"Really? It seems you have been enjoying yourself.\" Nadine touched the point of Kevin's dick; the little Judas was up and excited. \"You have quite the leakage.\"\n\n\"She was hot in an abusive way.\"\n\n\"Want me to call her back?\"\n\n\"Nadine, it's not funny. My arms hurt. One moment she was sweet, the next she went Norman Bates on my ass. I have no idea why.\"\n\n\"That's why.\" Nadine pointed up to a white dome of a security camera. \"Smile, you're on camera.\" \n\n\"What?\" Kevin forgot that he was hanging naked from a chain and that his buttocks hurt. \"Is this uploading to some BDSM site for people to wank on?\" \n\n\"No, just someone who wanted to see you hurt.\" \n\n\"Why, for fuck's sake? What did I do?\" \n\n\"Nothing.\" Nadine turned to the camera and flipped her middle finger towards it. She pulled out her .45, the one with the green gem grip, and pulled the trigger twice. The shots boomed like a cannon's roar in the basement, and they resonated for some time. The white dome of the camera exploded, raining shards of glass and metal. \n\n\"Jesus.\" Kevin cringed. \n\n\"Did you figure it was a toy?\" Nadine pointed the gun at him.\n\n\"Nadine, stop it, you're scaring me.\"\n\n\"Scared? I remember our last call differently. You raised your voice and practically told me to fuck off. I can't recall the last time anyone talked to me like that. I can't have that. I'll lose respect.\"\n\n\"My mom said that violence is not the way.\"\n\n\"It's a shortcut.\"\n\n\"Not funny, Nadine. And I was mad at you.\"\n\nShe leaned over and gently pressed her beautiful lips on his. She was sharp edges and cruelty, and their time together had been two months ago, but his body awoke to her. \n\nMadam Hulk dumped the contents of the duffel bag on the floor and retrieved the keys. Nadine unlocked the handcuffs, and Kevin stumbled, rubbing his wrists to revive his circulation. He then sat down on the bed, careful not to let the burning sting in his buttock touch the mattress. Nadine sat beside him; her hand automatically went to his hair. \n\n\"I need a few minutes in private, Cecilia.\" \n\nThe wrestler blew Kevin an air kiss and left them alone.\n\n\"Why the hell would someone want to hurt me?\" \n\n\"She doesn't give a fuck about you. She wanted to send me a message.\" \n\n\"What's wrong with Gmail?\"\n\n\"She wanted to show me that I'm still vulnerable. That she can hurt the people I care about.\" \n\n\"Oh, so it was your fault.\" Kevin tried to put his angel costume back on and winced. \"I'm still mad at you, and now twice as much.\" \n\n\"Tough.\" \n\n\"You gave Diana the money to buy my dad's promissory note. There's no way in hell she could have gotten her hands on such a sum by herself. It was you, wasn't it?\" \n\n\"I didn't give her any money. Brigitte knows the cockroaches who owned your father's debt. They were more than happy to do her a solid when they heard it was for my sake.\" \n\n\"Even worse. It didn't cost you a cent.\"\n\nNadine shrugged. \"That's power for you.\" \n\n\"Why on earth would you want to help Diana screw me over? She's a nobody. She has no money or influence. What on earth could you want from her?\"\n\nNadine stared at him for a moment but didn't answer.\n\n\"And now Diana has me by the balls. Do you know what I like the most about being Diana's boyfriend?\" \n\n\"Enlighten me.\"\n\n\"That around the age of eighty I'll probably die of old age.\" He checked his phone. \"Not a single message from my girlfriend asking where the hell I am. What a shocker. She's partying with your lace boys, right?\" \n\n\"She's not the only one partying.\"\n\n\"Huh?\" \n\n\"Did Sin drag you here by force?\"\n\nKevin shook his head, slowly. \"Even though she tied me up, it felt like freedom, you know. An hour when I'm not Diana's good boy, sort of. I dunno, really, maybe I'm just full of shit, and I just wanted to try some kink, but you have no idea what it's like to live with Diana twenty-four seven.\"\n\n\"You know what to do if you want out, Kev.\" Nadine lay down on the bed and rubbed her eyes. \"The offer still stands.\"\n\n\"It's not that simple.\"\n\n\"It's not that complicated, either.\" \n\n\"I have a hard time wrapping my head around the concept. I mean...crap, it's...it's not that simple.\"\n\nNadine exhaled loudly. \"That's the most cowardly way to tell a girl that you're not into her.\" \n\n\"You think? I have dreams with you in them, and I always wake up with wet underwear. You're the hottest woman who ever wanted me, Nadine.\" \n\n\"I still do, you schmuck.\" \n\n\"It's not you, it's me\u2014well, it's not you, it's my standards.\"\n\nShe punched him in the stomach, hard enough to elicit an oof! from him. \"Glad to see you're enjoying yourself.\" \n\n\"That means you're not glad, and I won't be enjoying myself in a minute. Nadine, you're an extortionist. You're a sex trafficker. I've seen your lace boys filling the halls of this crazy place tonight. It's horrible. People treat them like sex toys, not like human beings.\" \n\n\"Nobody forced them to come here.\"\n\n\"I don't get it, why on earth would someone smuggle themselves to the US so they could be abused as a sex slave?\" \n\n\"Sex worker, and for the hundredth time, nobody forced them,\" Nadine growled. \"The average paycheck for an unskilled worker in Odessa is one hundred and fifty dollars per month. One hundred and fifty dollars for slaving in some stinking factory. No sunlight, ten to twelve hours every day. My lace boys and girls can earn that much in a single night.\" \n\n\"So they're desperate.\" \n\n\"It's supply and demand. If I weren't doing it, somebody else would have.\" \n\n\"That doesn't make it right.\"\n\n\"Grow up, Kevin.\"\n\nHe sighed. \"I can't be part of that.\"\n\n\"Did I ask you to run my fucking business?\"\n\n\"My mother used to say that the man who allows oppression shares the crime.\"\n\n\"I'll buy you your own apartment and a sports car.\"\n\nKevin curled his lip. \"So I'm a prostitute. Like a lace boy, only a little more expensive.\" \n\n\"God forbid,\" she said in mock horror. \"Look, Kev, I don't want you to be with me because I have a shitload of money. I want you to be with me because of who I am.\" \n\n\"A millionaire?\" \n\nShe guffawed. \"Exactly, you idiot. Everything gets a lot easier when you're driving a Testarossa, you'll see\u2014even flexing your childish morals. You're a professional diver, right? How about if I buy you a yacht?\" \n\n\"I wouldn't be able to look at myself in the mirror.\" \n\n\"I'll hire a girl to shave you every morning; you won't have to look in the mirror. I can buy you anything your heart desires, Kev.\"\n\n\"Just not a clear conscience.\" \n\n\"Fuck that, it's overrated.\" \n\n\"Maybe, but-\" \n\n\"Shut the fuck up!\" Nadine turned on her back again and closed her eyes. \"Just shut up and fuck off! I'm done with you.\"\n\nKevin leaned over to kiss her gently. \n\n\"Don't you dare!\" She pinched his nipple and pushed him away. \"It's so fucking easy for you, you over-spoilt, privileged dumbass. I wanna see you crawl out of the gutter like I did. See how you manage to keep your hands clean, you condescending prick.\" \n\n\"I'm not a condescending prick. Look, it doesn't count as condescending if I'm really much better than you, Nadine.\" \n\nHer shoulders started shaking in silent laughter, then it came out soft, but soon it burst out like TNT. Kevin couldn't help but join. He was angry at Diana, at himself for going into Sin's basement, at Nadine for her manipulation, at the world in general. He couldn't change the world, loving it as it existed wasn't an option, and he didn't want to hate it. All that was left was laughter. They laughed until their ribs hurt.\n\nNadine wiped the tears that gathered in the corners of her eyes. \n\nKevin leaned against his elbow, his athletic torso tilted towards her. She regarded him through half-shut eyes. Kevin watched her, his eyes searching hers. Just then their eyes locked, and for a moment there was nothing other than their light breathing. Her beauty and cruelty still dominated his dreams. She was the forbidden fruit and the gates of hell. No wonder Adam said yes.\n\nHer tits rose and fell under red silk; he reached for them, and she slapped his hand away.\n\n\"You had your chance, and you blew it.\" \n\nHe snuggled closer to her, his lips caressing her chin. \n\n\"Nope!\"\n\nHis hand traced the outline of her chin, inched farther to her nose and tenderly dropped to her lips. They were full and quite soft to touch, just as he remembered them. He tried again to claim them. For a fleeting moment, her lips resisted him, and then slowly and tenderly parted to his seeking tongue. She tasted of cigarettes and vodka. It went all the way to the tip of his cock because that sting was also how he remembered her. \n\nHe pushed his mouth harder into hers, and she pushed back, her teeth grazing against his. His mouth pulled away, moving to her neck. His lips ignited her nerve endings, her caramel skin tingling at his touch. Nadine moaned, and he kissed her lips again. \n\nKevin pulled up, just to see her face. She was trying to fuel her anger but was losing fast to lust. He reached out and undid her dress' fastening, then yanked it aside. \n\n\"Stop!\"\n\nHe opened the small buckle of her high heels, slowly removing one shoe and then its partner. \n\n\"Fucking amazing, Kev. I called you and practically begged you to come and see me, and you gave me the cold shoulder. Fuck it. You gave me the middle finger.\"\n\n\"So?\"\n\n\"Dumbass, so you don't get to...whenever you feel like\u2014ohhhh,\" Nadine moaned. \"Ooh, fuck,\" she said when he licked her toe and sucked it into his mouth like a pacifier. His tongue then licked her naked heel and the curve of her brown leg. \n\nNadine moaned. \n\nHe tugged on the red dress, slowly peeling it from her burning body. \n\nPastor Roy Anderson loved to quote from Romans a piece that some believed was God's opinion of futanari: \"For this cause, God gave them up unto vile affections: for even their women did change the natural use into that which is against nature... Know ye not that the unrighteous shall not inherit the kingdom of God?\"\n\nBut Nadine had caramel skin and naturally smoky eyes. She was the Alpha and the Omega, the first and the last, the beginning and the end. Her naked body was a temple and Kevin a devoted worshipper. Her breasts went up and down with her excitement. Her lacy black underwear could hardly contain her anaconda. It pushed the silk to the breaking point. \n\nKevin caressed the bulge with the tips of his fingers, and it jumped beneath the fabric like an animal crying to be released. \n\nNadine closed her eyes and moaned.\n\nKevin caressed the bulge again, enjoying himself when it moved and Nadine cried. The cloth around the tip of her cock was darkened by her pre. \n\nKevin's tongue traced over her collarbone before his lips began making their way down her chest. He unclasped her bra and tossed it, then took her breasts in his mouth, one after the other. A guttural groan spilled forth when her nipple was consumed by his hot wet mouth. She caressed Kevin's hair and then pulled him tighter against her breast. His other hand kneaded her other mound.\n\nHe pulled up. \"Any more complaints? Want me to stop now?\"\n\n\"You're on thin ice, baby. Thin ice.\"\n\n\"Is that a yes? A no? I never really understand you when you growl.\" \n\n\"Shut the fuck up, and don't you dare stop kissing.\" \n\nHe teased her with hot breaths between her tits. She took a bite of her lip, anticipating. Just when she didn't expect it, he licked her. His tongue slalomed up the hill of her breast and then played with her brown nipple. She squeaked like a little girl, and Kevin laughed.\n\nLetting her nipple fall from his mouth, he stared at her, smiling. Quakes were running through Nadine's whole body. She reached out for his lips, and she squeezed them gently with her hand, flexing her fingers repeatedly to part his lips slightly then let them close again. She teased for a second, then her finger entered his mouth. \n\nKevin's hand went down her panties and crawled under the elastic band. The back of his hand scraped against her massive cock, and Nadine gulped. He went farther down and felt her massive, hairless balls. His hand caressed the pair, letting skin rub against the skin. He squeezed a little and Nadine jumped.\n\n\"I fucking hate you, Kev.\"\n\nKevin moaned around her finger, his velvety tongue caressing her. \n\n\"And I fucking want you.\"",
        "His fingers traveled farther down, to the place Diana never allowed him even to touch. He reached, feeling Nadine's wetness, slipping his fingers easily between her swollen lips and into her liquid warmth. He dipped down to slide two fingers right up inside and curled them to apply pressure, rubbing gently and steadily. \n\nNadine squirmed under Kevin's touch. \n\nHer juices covered his fingers, then he nestled into the top of her slit and pressed onto the raised bump of her clit. She rolled her hips up again, fucking his fingers. Kevin pushed back in counterpoint each time she thrust. His other hand joined the dance, crawled and reached for her massive anaconda. He started massaging, letting his fingers slide against the panties' silk. \n\nHe pulled again, looking down at her, watching her lips part and her breath quicken each time he pressed into her. He reveled in the rippling of her breasts as she moved and the flushing of her skin. Finally, with three very long, hard thrusts, each accompanied by a deep guttural moan, she came. She tensed, closing her legs. Her vaginal muscles clamped around Kevin's fingers, and a warm stream of liquid poured over his palm. \n\n\"Kev... Kevin.\"\n\nKevin didn't stop massaging her panties over her iron-hard anaconda. She slapped his hand, but he held on, rubbing faster. She grabbed his hand but was too late. \n\nNadine screamed her ecstasy, and her cock started spewing massive amount of warm baby-making liquid. Her cock jumped around in her panties, darkening the silk, filling it, until it started dripping out on the bed. \n\nIt took her a few minutes to start breathing normally again. \n\n\"I'm fucking soaked.\" She wiggled out of her underwear. Kevin grabbed her soft anaconda; it was slick and messy in his palm, and he played with it, squeezing it like a toy. \n\nNadine suddenly growled and switched positions. She straddled Kevin and latched her mouth onto his nipples while she worked his dick with her free hand. Her hand grabbed his buttock, and Kevin hissed as she squeezed the red mark left by Sin's crop. \n\n\"That will teach you to not go into dungeons with crazy ladies.\"\n\n\"Said the crazy lady.\"\n\nNadine grabbed his hips and rolled again onto her back, pulling him on top of her. She lifted him, effortlessly, like he was a pillow and not a young man. She then pulled her hardening cock under him, pushing him down again. His ass cleft closed around her slick member. Nadine pushed him a little, making him slide onto her wet cock. \n\n\"You do make me kind of crazy,\" she said and pulled him to her. She just held him for several minutes, her cock hardening between his legs. Her head pressed against the curve of his neck, breathing in. There was something about his scent she found irresistible. \n\nHe tried to pull away, but she locked her hands around him, keeping him close. \n\nShe pushed him up again, lifting him in the air, spreading his legs. She watched his face as her cock went up and bumped against his skin. The head of her massive cock was red and angry again. She pushed Kevin's body a little until the monster's head found a perch in his tiny starfish. Gently, Nadine pushed against his butt and lowered him. Her slickness and her own cum drip lubricated his entrance. Slowly, she dipped her throbbing cock into Kevin's butt.\n\nKevin closed his eyes when he felt the head stretching him. \n\n\"No, open your eyes; look at me, baby. I've never met anyone with purple eyes before.\" \n\nNadine felt the head open up his outer sphincter, then she felt the pressure from the inner ring. She pushed him back up and lowered him again. His inner circle slowly expanded, feeling like a gentle wave riding along the head of her cock. \n\n\"Jesus, I forgot how big you are. Oh, God,\" he sighed. They both knew that she was in. Nadine paused to allow him to adjust to the new sensations, then she started rocking her hips little by little, drawing him deeper and then pulling back. His tunnel bathed her cock in wet heat and pressure. She watched her cock sink slowly into him, stretching him like no one else could.\n\n\"Down, baby, all the way.\" \n\nHer hands rubbed his thighs, encouraging him and taking his attention from the pain in his butt. Slowly, her snake disappeared inside his tight ring as more and more was fed into him. Kevin clenched his ass. His muscles gripped her cock, squeezing it, and Nadine moaned. She gave one last pull and felt his tiny ass on her pubes. Her entire fantastic length was inside him. \n\nShe looped her hand behind her neck, watching his athletic body speared on her member. \n\n\"You're beautiful, Kev.\" \n\nHe nodded.\n\n\"You're also an asshole.\" \n\nHe nodded.\n\n\"Ride me.\"\n\n\"Huh?\" \n\nHer hand went to the floor and found Sin's discarded crop. She swished it and tapped his back gently. \"Giddy-up.\" \n\n\"Put that damn thing away.\" \n\nKevin's hands went to her shoulders as he wiggled his hips, taking her within as he spread his knees farther. With a shaky sigh, Kevin oriented himself on her, settling down. A small whimper burst forth when he felt her flex her cock within his tunnel.\n\n\"Ride, baby.\" \n\nPlacing his hands on her beautiful mounds, he started to grind against her, losing himself to the rhythm. Despite the soreness in his buttocks, he thrust against her, his hips following the tempo. The friction between their bodies created electricity. Her hands slid along his body, her nails raked lightly down his chest.\n\n\"Kevin.\"\n\n\"What?\" he huffed.\n\n\"Kevin.\" \n\nKevin lowered himself and gyrated faster on her colossal womanhood, his hole stretching wide at the girth of her monster. His tunnel walls stretched out around her shaft and flexed. His little ring hugged her shaft lovingly as he started going up and down. His strong muscles, those of a jogger and a diver, set the steady pace. Never stopping. \n\nHe went all the way up and back down again, watching her smile turn to lip-biting as she fought her climax. Kevin's face was flushed, and beads of sweat rolled down his body to the crack in his ass and mixed with her own fluids. \n\nSomething touched the right button, and Kevin came first. He stopped and looked surprised at his own seed shooting into the air and landing on her caramel breasts. \n\n\"Don't stop!\" \n\nShe started thrusting up in earnest, plunging deep, making him moan. Her massive balls hit his ass with an obscene slap each time she bottomed inside him. \n\nA moment later her balls flexed and contracted, and she shot her first squirt of seed deep inside Kevin's body. \"I'm crazy about you,\" she whispered, surprising herself with a sweet moment of vulnerability. \n\n-- \n\nKevin's finger played on her lips, travelled down her chin, down her neck and all the way to her belly button. \n\nNadine sighed, taking him in. She felt absorbed by purple eyes and his smile. She cared for him deeply. No, care was a weak word for how she felt about him. He made her vulnerable, and that vulnerability was half the excitement. Still, vulnerability was a luxury she couldn't afford. \n\nThere was only one other person for whom she cared in this world, and Iman was safe behind tall walls and protected by armed guards. Her feelings for Kevin left her exposed and naked.\n\nShe placed her hands around his neck; her muscles flexed. All she had to do was squeeze, and she'd be safe again.\n\nKevin kissed both her hands, one after the other, and tasted her sweat; Nadine sighed and pulled them off. \n\nHe grabbed his mobile from the floor and started texting. \n\n\"Who the hell are you texting at two a.m.?\" \n\n\"I'm making a Snapchat story of us having sex.\"\n\nShe rolled him to the side, took a bite of ass-cheek, and Kevin yelped. Her hand, almost absent-minded, went down and started playing with his soft cock. Squeezing it.\n\n\"I'm texting Helen. I told her that I was on my way before you tricked me into staying and giving you two hundred orgasms.\" \n\n\"We didn't do it doggie-style, so you can't count in dog years.\"\n\nKevin shrugged. \n\n\"Are you...? You and Helen?\" \n\n\"What?\"\n\nShe frowned. \"Never mind.\" \n\n\"Oh, no, no. Nothing like that.\" He faked a laugh. \"No. No.\" \n\n\"Try not protesting so much.\"\n\n\"We're just good friends,\" he said. \n\nNadine rolled and grabbed her Treasurer cigarette pack. She offered Kevin a cig. \n\n\"My mom used to say that it's a nasty habit.\"\n\n\"She's like a Forrest Gump box of chocolates, your mom. Mark that one off. You always know what you're gonna get. Prude.\"\n\n\"Hey.\" \n\n\"What is she like?\" \n\n\"My mom? She died three years ago.\" \n\n\"Helen. She's nothing like Diana? Right?\" \n\n\"Hell no. Helen is so funny and smart and sweet, and kind. She's amazing.\"\n\nNadine felt a wave of hate for the woman she didn't even know. There was no denying Kevin's attraction to her. Even now as she touched him, she felt him harden again. But when Kevin spoke of Helen, his purple eyes shone. \n\n\"She's like Tom Hanks sweet, Princess Di generous, and Bruce Willis in Die Hard brave, all inside the body of a shy Julia Roberts.\" \n\n\"Great,\" Nadine growled and turned on her side, her back to him. \"Just fucking great.\" \n\nKevin hugged her from behind and kissed her cheek softly, surprised when he found wetness there. \"Hey, what happened?\" \n\n\"Shut the fuck up!\" she growled.\n\nThe Nadine Kevin knew had three modes. Angry, very angry, and furious. This was a new one. He stared at her confused. \"What?\"\n\n\"I'm just fucking tired.\" \n\n\"Did I do something wrong?\"\n\n\"When did you ever do anything right?\"\n\nHe hugged her head to his chest and covered her lips and forehead with soft kisses. For the time being it was enough for her. \n\n--\n\nThe long drive home was silent, mainly because Diana curled in the backseat and snored for three hours. She didn't reek of alcohol, which was surprising, and it didn't look like she was on anything more substantial either. She was just exhausted. \n\nShe didn't ask him anything, and he didn't feel he had any right to ask her anything. \n\nFrom time to time he stared at her in the rear-view mirror. She smiled in her sleep while she hugged a mysterious black suitcase and a box. \n\nKevin wondered if this was what his life would look like from now on. Her abusive love every day of the week, with short escapades into the arms of Nadine. \n\nAt five a.m. they reached the Brion penthouse. He asked Diana if she wanted to take a shower, and she just gave him her innocent smile and claimed his lips with a passionate kiss. She then curled up on their bed, and immediately fell asleep, still smiling. \n\nHer ability to wrap herself in a bubble was something that he would never be able to grasp. There was no way she didn't taste Nadine's cigarettes on his lips. \n\nAfter showering off the stench of the night, he went to the kitchen to grab something before going to bed, and was surprised to find Helen asleep there. Her head rested on her left hand, and her magnificent blonde mane was spread across the kitchen table. Early morning sun said hello from the balcony and kissed the unmarred right side of her face. It felt wrong somehow, because Kevin was now used to her scars and her eyepatch. They were non-interchangeable parts of this woman who had become an essential part of his life. \n\nHelen moaned in her sleep. She was probably having one of her nightmares again. The subject was too delicate, and she never brought it up, but he assumed she suffered from some form of PSTD, courtesy of her service in Iraq. \n\nHe touched her shoulder and shook it lightly. \"Hey, funny Valkyrie.\" \n\n\"What time is it?\" She blinked and coughed.\n\n\"Five thirty. I know you like my cooking, but hey, relocating to the kitchen is one step too far.\" \n\n\"I waited for you.\" She rubbed her eyes. \"Must have fallen asleep.\" \n\n\"Why?\"\n\n\"Sometimes when I'm tired, I fall asleep. Weird.\" Helen yawned into her fist.\n\n\"Why did you wait?\" \n\n\"You sounded distressed on the phone, and I didn't know where you were. I was worried.\" \n\n\"Had a crappy moment when you called, that's all. But I'm okay now.\" \n\n\"Wanna talk about it?\" \n\nHe opened the fridge and pulled out the milk and grabbed the cereal box with the smiling tiger from the Lazy Susan wall cabinet. \"Cereal! When I'm hungry, thirsty, and lazy at the same time.\" \n\n\"Kevin?\"\n\n\"Want some?\" \n\n\"Kevin?\"\n\n\"It has...\" He read the print on the cereal box. \"Vitamin E, riboflavin, and folate. Who can say no to riboflavin?\" \n\n\"Do you remember the presidential debate, when Anderson Cooper kept asking Donald Trump about 'grabbing the pussy'?\"\n\n\"Yeah, what a dick\u2014he stole my move.\" \n\nHelen gave a short burst of laughter. \"Cooper asked him four times, and Donald kept changing the subject.\" \n\n\"So?\"\n\n\"You're always doing just the same. Not just now, Kevin. All the time.\" \n\n\"Doing what?\"\n\n\"Dodging.\" \n\nKevin inflated his cheeks. \"I'm too embarrassed to talk about what happened.\" \n\n\"Come on, how bad could it be?\"\n\n\"Worse?\"\n\n\"Whatever horrible thing you think you did last night, it can't be that bad.\"\n\n\"You'd be surprised.\"\n\n\"Kevin, you're my role model for compassion and generosity.\" \n\n\"I'm a big phony, that's what I am. Look, my mom used to say that bad deeds and good deeds\u2014\" \n\n\"Are rewarded in this life, not just in the afterlife.\" Helen shook her head. \"You told me, more than once. Immanuel Kant, not Jesus Christ. I think she's part of the problem.\"\n\n\"My dead mom?\" \n\n\"I know it's a soft spot. Look, I don't mean to disrespect her memory. I learned my lesson the last time, okay? She was obviously an amazing person.\" \n\n\"She was.\"\n\n\"I get it, I wasn't cynical.\" Helen nodded. \"But maybe, just maybe, she set the bar too high?\"\n\n\"What bar?\" Kevin tilted the Organic Valley cardboard, and a large clump of curdled milk dropped on his mountain of flakes. \n\n\"Oh, yeah, we ran out of milk.\" \n\n\"Crap.\" \n\n\"Wait here for a sec,\" she said.\n\nHelen went out of the kitchen, and Kevin leaned back and massaged his temples. He felt the aftershock of the crazy night all over. His buttocks still hummed where Sin's crop marked him, and he knew that if he just closed his eyes, he wouldn't be able to open them again.\n\n\"Look.\" Helen returned with a photo album. The photos on the first page were all taken on a farm of sorts. There were apple orchards, growing in straight, neat rows, and a lazy river snaking between cedar tree-covered hills in the background. Most of the photos showed a dark woman with an auburn afro and green eyes, wearing overalls. In one picture, she had one hand on the wheel of a yellow tractor she was riding, and with the other she balanced a blond toddler on her knee.\n\n\"Is that\u2014?\"\n\nHelen nodded. \"My mom and me. She tried commune life in the late eighties, near Finn River, Washington.\" \n\nKevin stared at the woman in the picture, then back at Helen. \"Really? That's Fabienne?\"\n\n\"Yeah, I know.\"\n\n\"She's black,\" he said. \n\n\"Louisiana Creole, actually. Well, she had some Muscogee blood in her too. But that's a Brion family secret. Don't tell anyone.\" \n\n\"But Diana is a natural redhead, and you look like a Norwegian queen.\"\n\n\"You think I didn't ask her how come she's brown and I'm so white? It was a free-love and all-the-LSD-you-can-get kind of commune. Considering the wild parties they had there, she told me I should be thankful that I'm not barking instead of worrying about my complexion.\"\n\nKevin laughed. \n\n\"She wasn't a good mom. In fact, she was a terrible mother. Despite all the prejudice and the violence in West Englewood's projects, she never made an effort to move out. She couldn't hold onto a job or a boyfriend for more than two months. She got herself arrested for drunken fights. She was an alcoholic. I think I took care of her more than she did of me.\"\n\nKevin snorted. \"Sounds like someone I know.\"\n\n\"It runs in the genes, I guess. But you know what, Kev? My mom was nothing like your mom, but she did her best. She loved us so much. She simply accepted us for who we were. Myself with my insecurities and Diana, well...\"\n\n\"Diana was a problem kid?\" \n\n\"She took a police car for a joyride when she was sixteen.\" \n\n\"Jesus.\" Kevin laughed. He flipped the album's page. Six-year-old Diana wearing a tank-top and pigtails was sitting in a rowboat, pointing at a young, wincing Helen and laughing her heart out. \n\n\"Mom took this picture. We went for a rowboat ride, and I wanted to see some cows from up close. I grabbed their electric fence to help myself out of the boat and felt the shock all the way to my stupid ass. Mom and Diana couldn't stop laughing.\"\n\n\"It does look like a happy family.\" \n\n\"It was. I never felt anything but loved. I used to come from school crying, and my mom would hug me, and we would talk for hours and hours. I had only started writing my letters after she was gone, and I had no one to talk to.\" \n\n\"How did she...?\"\n\n\"There was this big LGBTF march in Phoenix. Same-sex marriage protest. My mom was an activist, and she would drag us to rallies every week. Someone threw a firebomb when we marched. Two people were killed, and my mother got burned badly. Two weeks later she had septic shock in the hospital, which is bad news when you also have a diseased, alcoholic liver. She went into a coma and never woke up.\" \n\nKevin stared at her for a while. She tried to read him, and as always, she failed.\n\n\"A firebomb at an LGBTF march in Phoenix?\" he said.\n\n\"Yeah, some group who called themselves God's Army. They caught the guy. Tom Murphy.\" She shrugged. \"He's in jail. It was a big thing back then. You were ten? Probably too young to remember.\" \n\n\"I'm so sorry,\" he finally said in a low voice.\n\n\"It was more than ten years ago.\"\n\nKevin did the math. \"If I was ten, you were eighteen.\" \n\n\"Almost eighteen. My mom left me no money, a few debts, and Diana to take care of. I didn't have a job or skills, so I joined the Marines. But you know what else she didn't leave me with, Kev? She didn't leave me a guidebook that makes me feel like I'm a failure every time I'm not up to par with its impossible standards. Your mom left you a super-heavy burden. It's unfair.\" \n\nKevin flinched, and Helen knew him well enough by then to know she needed to tread more carefully. \n\n\"Being kind to people isn't impossible,\" he said. \"It's not even hard when you're used to it. It's a really low bar.\" \n\n\"Didn't she have any vices?\"\n\n\"Of course she didn't.\" Kevin pulled out his mobile. \"That's her.\" \n\nThe stunning diver in the picture wore a black wetsuit and looked like the feminine version of Kevin. She had the same bleach-blond hair and purple eyes. In her arms, Kevin's mother carried a smiling, moon-faced blond baby. \n\n\"Well, she's a beauty queen. Not that I was expecting anything else. That's Ben?\" \n\n\"Aha.\" \n\n\"She's so young. She looks like a teenager.\" \n\n\"She was eighteen when she had me.\" \n\n\"Wow.\" \n\n\"Yeah,\" he yawned and rested his head on the kitchen table. \"My father was thirty five when they married.\" \n\n\"Really?\" She flipped through the pictures. Most depicted a tiny cottage by the seaside. Loam-colored bricks, black tiles, yellowing windows, a wet concrete porch, and a rusty garage door. An old-looking wooden promenade ran along the shore, and several restaurants stood in the background. The restaurant closest to the house had a blue neon sign that read, The Chatty Sea Bass\u2014Where food speaks to your palate. \n\n\"Hey, Kev, is that, is that the restaurant? ... Kev? Kevin?\" \n\nHis eyes were already closed, and he was snoring lightly. \n\n--\n\nThe secret to avoid kicking dust was to hold the broom at an angle and pull it using a single stroke. \n\nIt was an endless battle, because the Chatty Sea Bass stood on the shore, and the evening winds always carried the sand back in. Kevin loved it, nonetheless. It gave him a sense of pride when the restaurant's floor was spotless. Plus, he had OCD.\n\n\"Say broom,\" Kevin said.\n\nBen giggled and clapped his hands. ",
        "\"No, say broom.\" \n\nBen raised his hand in the air.\n\n\"Not high five. Say broom.\" \n\n\"Boom.\" \n\n\"What the...?\" Ben's Down syndrome affected his cognitive development. At the age of three he spoke only a handful of words. \n\n\"Boom.\" \n\n\"Dad?\" Kevin hollered. \"Daaaad?\" He picked Ben up and ran out of the restaurant and into the street. A bus honked and screeched to a stop. The driver pulled open the window and shouted \"Fucknugget!\" at him. He'd never heard that curse before, but it sounded like a good one, so he stored it for later use.\n\nHe found his dad across the street loading a rusty lawnmower onto his GMC truck.\n\n\"Dad! Dad! I made Ben say another word! He said broom! I made him! He can say that! Say broom, Ben.\" \n\nBen giggled. \n\n\"No, broom. Boom. Say it.\" \n\n\"Where is your mother, Kevin?\" \n\n\"He said it. I swear to God, he said broom.\" \n\nKevin's father clenched his jaw, never a good sign these days.\n\n\"She's still in the water, sir.\" \n\nHis father searched his face for some reason. \"She didn't go to church?\"\n\n\"No. Why would she?\" \n\nHis father nodded. \"Don't leave the restaurant like that.\" Without giving either of his sons a second glance, he climbed into the truck and drove away. \n\n\"But he did say broom. You did, Ben. I heard you.\" \n\nBen hugged Kevin's neck and kissed him. \n\nBack on the beach, he found the Murphy brothers, Justin and Cody, playing Wall Ball against the restaurant's wall. Kevin gave them a non-committal nod. He didn't like either of them. \n\n\"Think fast.\" Justin threw the tennis ball at him, and Kevin snatched it out of the air with his free hand. Having been the smallest kid in class, he was often the target in dodgeball, forcing him to adjust. \n\n\"Yo, Kev, did you see the faggot bus?\" Justin was shirtless, and there was a blue bruise on his cheek. \n\n\"What faggot bus?\"\n\n\"The one with the flag that looks like a rainbow.\"\n\n\"The tourist bus?\" Kevin stared at the bus parking down the street. People were pouring out. Other than the bus driver shouting 'Fucknugget' at him there was nothing out of the ordinary about it.\n\n\"It's not a tourist bus, it's a fag bus; they're all fags.\"\n\nKevin knew faggot was a serious curse word. He'd even used it a couple of times, though he was not really sure what it meant. The situation didn't help clarify anything because the people leaving the bus looked like regular men and women. \n\n\"The pastor's car is here.\" Justin pointed at Pastor Roy Anderson's Buick that was parking down the street, near Kevin's house. \"Probably came to say hi to the fags. Gonna be a hell of a show.\" Justin clapped his hands and smiled; three of his upper teeth were missing. \n\nKevin suddenly noticed seven-year-old Cody reaching into his bulging pocket and pulling out a familiar Charm Blow Pop. \n\n\"Hey, did you go inside for candies, Justin?\"\n\n\"So what?\" \n\n\"You got to ask permission,\" Kevin raised his voice, \"otherwise it's stealing.\"\n\nJustin flipped him the bird. \n\nKevin noticed Justin's pockets were bulging too. \"Did you and Cody take the whole jar?\"\n\n\"I didn't steal anything.\"\n\n\"Yeah?\" \n\n\"Take your retard brother and get the fuck away, bitch fag.\"\n\n\"Ben is not a retard.\"\n\n\"He's three and can't even speak a damn word. My dad says your mom is a whore, and that's why God punished her with a mongoloid retard. Two retards.\"\n\nKevin put Ben down and went for it. Justin was a year older and a head taller, but having been the smallest kid in class had also taught Kevin that not standing up to bullying had severe consequences. He tackled Justin's legs, flipping the bigger boy onto the sand. He jumped on Justin's stomach, arms flailing. Justin wasn't exactly a rookie when it came to fights, but Kevin managed to give as much as he got. \n\nIn the background, he could hear Ben crying hysterically when suddenly a strong arm lifted him off Justin, none too gently. He tried to dive right back into the fight when a harsh voice stopped him.\n\n\"Kevin O'Brien, don't you dare!\" \n\n\"But Mom\u2014\"\n\n\"What did I tell you about fights? \n\n\"But Mom\u2014\"\n\n\"Tell Justin you're sorry and shake his hand.\" \n\n\"I won't. He\u2014\" \n\n\"Kevin O'Brien!\" \n\n\"I'm sorry.\" Kevin didn't reach out his hand, and Justin snarled in return.\n\n\"Take your brother inside, Kevin.\"\n\nKevin took Ben back into the restaurant, still breathing hard. He kicked a wooden column and smashed his fist against the wall, getting a brief moment of satisfaction when the pain registered. His behavior frightened Ben, who started screaming again. The cries sobered Kevin quicker than his mother's rebuke. \n\nIt took a few hugs and some tickling for his little brother to stop crying. \n\nHis mom came in a minute later. Her wetsuit was still dripping, and she left smudges of seawater and wet sand on the freshly swept tiles. Her fish keeper carried no less than eight beautiful white sea bass, which she hung with her spear-gun on a hook. She then hoisted Ben up and placed him on the counter. A few strategically placed kisses under his armpits and his neck were enough to restore Kevin's little brother to his usual giggling, beaming self. Only then did she squat down to Kevin's level. \n\n\"Are you hurt?\"\n\nHe shook his head. \"But Mom\u2014\"\n\n\"What did I tell you about fights?\" \n\nHe lowered his head. \"Violence is not the way. But, Mom, he...he said...\"\n\n\"He said what?\"\n\n\"Hate words.\" He didn't want to tell her that it was Justin calling Ben 'retard' that had triggered him. His little brother's Down syndrome and late development kept her awake at nights. He did not think she needed more grief on top of that. \"Hurting words.\" \n\n\"They're just words, and they can't hurt if you don't allow them to.\"\n\n\"He stole candies from the bar.\" \n\n\"How do you know?\"\n\n\"I saw the lollipops from our jar in his pocket. Everyone knows his dad is an unemployed drunk who beats him and his mom every day and never gives him any money. He always steals.\"\n\n\"All the more reason to be kind to him.\" \n\n\"But Mom\u2014\"\n\nShe kissed his forehead. \"What are the three most important things in life?\"\n\n\"Be kind to other people, be kind to other people, and be kind to other people.\" \n\nShe kissed his forehead again. \"I'm going to the house to clean myself up, okay, sweetie? I'll be back in a jiffy. Clean the fish and store them in the fridge. No more fights.\" \n\n\"No more fights.\" Kevin sighed and took Ben with him to the kitchen. He knew not to argue with his mom and knew she was wrong about Justin Murphy. Kevin had tried her way against bullies, and it only made things worse. He was confident that Justin would now think twice before calling Ben a retard again. \n\nThe old clay fish pot needed scrubbing before he could rinse the fish in it. Kevin was halfway through the job when Ben curled into a little ball in the corner and fell asleep. He then heard voices coming from the restaurant.\n\n\"Is this place even open? It looks deserted.\" \n\n\"I don't know. Hello? Anyone here?\" \n\n\"Come on, Mom. It's not enough that we got stuck in hillbilly shitsville, but you had to pick the Krasty Krab? Let's go to that big restaurant near the pier where everyone else went.\"\n\nKevin grabbed a stack of menus and ran out of the kitchen. \"Please, come in. We're open.\"\n\nThere were three of them. Tall, taller than most adults he knew. The one who talked was a beautiful woman wearing a white twist-knot tank top and black jeans. It was a simple enough set, but she looked nothing like any women he knew. Her face was kind, and she had a constant warm smile that Kevin liked immediately. Behind the tall woman stood two tall teenage girls, a blond and a redhead. \n\n\"Oh, hello,\" she smiled. \"So you're open?\" \n\n\"Yes, ma'am.\" \n\n\"Aren't you just the prettiest little thing.\" \n\nHe didn't want to give her a chance to listen to her daughter and try the O'Sullivans' restaurant down the street. His mother always said that money didn't grow on trees. \"Thank you, ma'am. Please, ma'am, I'll fix your table for you in no time.\"\n\nThe woman laughed. \"Do you work here?\" \n\n\"Yes, ma'am.\"\n\n\"You seem a bit young.\"\n\n\"I'm just a little short for my age, ma'am, but I'm ten.\" \n\nShe laughed again. It wasn't the condescending kind of laugh, but one of joy. Kevin liked the sound of her voice and decided that Justin was just full of shit and didn't have a clue about these people or their bus. He rushed to the table beside them, cleaned it in a flash, and then pulled on an ornamented tablecloth before he laid the dishes. \n\n\"Are there any adults in, or are you the manager?\" \n\n\"My mom is the manager and cook, ma'am. Please, sit down.\" \n\n\"What is your name, sweetie?\" \n\n\"Kevin.\" \n\n\"Well, Kevin. You're not only the most handsome boy I've ever seen, you're also a very polite young man. I'm Fabienne.\" She offered her hand.\n\nKevin shook it and blushed. \"Thank you, ma'am. I'll bring your refreshment. It's on the house.\" He zipped back into the kitchen and returned two seconds later with a pitcher full of cold lemonade.\n\nHe heard the blond girl whispering. \"Mom, stop embarrassing him!\" \n\n\"You mean, stop embarrassing you.\" \n\n\"Just stop!\"\n\n\"So, Kevin, what do you recommend? Wait, are the sea bass hanging over there an option?\" \n\nHe nodded, relieved. His mother was sure taking her time with the shower, and there were only a few items on the menu that he felt confident enough to make on his own. Sea bass was a breeze, though. \"My mom just caught them a few minutes ago. But they'll need to be cleaned first.\"\n\n\"We have an hour.\"\n\n\"Oh, it will take maybe twenty-five minutes to clean them and grill them, ma'am.\"\n\nKevin dragged a chair to the beam where his mother had hung the fish. The tall blond girl beat him to it. She took down the fish, holding the hook at arm's length, and smiling, she gave it to him. \"There you go, Kevin.\" \n\nShe didn't look anything like Pastor Roy Anderson's Sodomites. She had piercing green eyes and a beautiful blond mane that framed her symmetrical face. Kevin thought she looked like a fairy or an angel much more than someone who is on her way to hell. \n\n\"Thank you, ma'am.\" \n\n\"I'm not a ma'am, I'm Helen.\" \n\nHe blushed and nodded, running to the kitchen. He fired up the grill, then scraped the scales, raking three of the heavier white bass from tail to head in smooth straight movements. He rinsed the scaled fish, then gutted them, removing the gills with long-nose pliers. It was a trick his mom taught him. \n\nThe seasoning mix was prepared in the fridge, waiting to be sprinkled. Kevin tossed the butter with chopped garlic and parsley in a pan and strategically placed the fish on the grill. He then rushed back to the restaurant, carrying a tray with creamed herring, salmon mousse, lobster dip and other pre-made starters for their choosing. \n\nThe other girl, the redhead, had her nose stuck in a mobile phone. She was constantly text-messaging. It didn't bother her mother, who kept asking her questions. The three bantered, they laughed, and they were comfortable with each other. Even Helen, who looked very shy, was laughing. \n\nKevin felt a pang of envy watching them, because dinners at his house were unbearable. Nobody said a word, and his father always looked angry nowadays. It was a relief each time they ended. \n\n\"Wow, this is officially the best sea bass I've ever tasted.\" Fabienne smiled when she tried the fish. \"Your mother is a talented cook.\" \n\n\"Thank you, ma'am, I'll tell her. I'm sorry it took so long.\" \n\n\"It's okay, sweetie. We'll have a takeaway if we run out of time.\" She suddenly noticed the tall man who stood on the restaurant's doorstep. He was staring at them, so she gave him her warmest smile. \n\n\"Howdy.\" When he wasn't in the office, Pastor Roy Anderson walked around in Wrangler jeans, cowboy boots, and cowboy hat. Maybe he missed his days out on the ranch and the cowboy halo that went with it. He was a hell-raiser in his youth and very popular with the ladies before he married and turned to the ministry.\n\nHe walked into the Chatty Sea Bass as if he owned the restaurant and patted Kevin on his head. He liked kids, but Kevin always felt the pastor had a soft spot for him. \"Well, heck. Looks like we got some company. You folks from the Human Rights branch in Virginia? Got lost on your way to Phoenix?\" \n\n\"Just a small detour.\" Fabienne smiled. \"We heard the seafood restaurants here are the best. You're the town welcoming committee?\" \n\n\"I'm the local man of the cloth.\" \n\n\"Well, preacher\u2014\"\n\n\"I'm a pastor, not a preacher.\" \n\n\"Well, I'm an atheist. I wouldn't know the difference.\" \n\n\"Of course you are.\" The pastor's smile wasn't kind. Fabienne appeared unfazed, Helen looked distressed, and the redhead looked bored. \"So I'm guessing you're on your way to that thing in Phoenix? The pride parade?\" \n\n\"It's a Proposition Eight protest. Same-sex marriage on the agenda today, pastor.\" \n\n\"Same-sex marriage? I remember a time when nobody would have dreamed of such a thing.\" \n\n\"Thank god we're long past those times.\" \n\n\"We live a simple life down here, Mrs.\u2014\" \n\n\"It's Ms. and call me Fabienne.\" \n\n\"Do my ears detect a slight Cajun accent?\" the pastor said. \n\nFabienne smiled. \"Vous avez raison.\" \n\n\"So you know we prefer to run things as they used to be. A bit old-fashioned. You know how it is down here.\" \n\n\"Oh, I sure do. I sure do, pastor.\" She nodded, and her eyes became sad. Probably touching an unpleasant memory. \n\n\"It's a funny thing, the name that you chose to call it. Pride parade. You see, I've not always been a pastor. I am a married man. Been around as they say. But I don't understand what the big achievement is. It's not an Olympic Games gold medal, and it's not a Nobel Prize. It's just sex, and unnatural sex at that. What's to be so proud of?\" \n\nKevin didn't understand most parts of the conversation, but he could read body language. He couldn't understand what fault the pastor found in Fabienne or her beautiful daughters. \n\nHe let out a breath he was holding when his mother entered the restaurant. \"Mom!\" he cried, hoping to break the tension. \n\nHis mother took a second to register the situation before she shot Pastor Roy Anderson a warning glance. \"Hi there, good evening,\" she said. \"I hope you're enjoying your meal.\" \n\n\"We certainly did.\" Fabienne rose from her seat. \"But unfortunately, we need to go back to the bus. I really thank you for the hospitality. Your son is an amazing host. I'm sure you're very proud.\"\n\n\"I sure am.\" Kevin's mom hugged him. \n\n\"Just a...\" Fabienne pulled forty dollars from her purse and left them on the table. \"Well, pastor. Imagine a young man or a young woman living down here, where it's simple. Ashamed of who they are because people who belong in the medieval period are all around them. People who seek to oppress and marginalize even people like me because God gave me a futanari gene. They feel uncomfortable at best, and that it's dangerous at worst, to be open about who they are. So when this young man or woman sees us marching, heads high, it gives them a glimpse of hope.\"\n\n\"Hope? What hope does your kind offer?\"\n\n\"Hope that things can get better. That everyone can be free, safe, and celebrated for who they are. Hope, is important, pastor, especially in places where patches of it are few and far between. So, hell yeah, I can certainly see something to be proud of.\" She motioned to her daughters. \"Helen, Diana, let's go.\" \n\nKevin stared after them when they left, with a sense that he'd missed something. He couldn't understand why a nice person like the pastor and a nice person like Fabienne didn't like each other. \"Mom, they didn't finish their meal,\" he suddenly said. \"They said they wanted a takeaway.\" \n\n\"Sure.\" His mother nodded. \"Go after them, but take Ben with you to Annie Jane, and then come back. I have reservations for tonight.\" \n\nShe packed the leftovers in a paper bag while Kevin grabbed his little brother from the kitchen. He ran outside, hoping the bus hadn't left. \n\nHelen noticed him first, and a shy smile lit her beautiful face. It made Kevin's heart beat faster. Diana smirked when she saw him, but Fabienne compensated with a huge smile. \n\n\"I've made you\u2014\" he huffed.\n\n\"You're beyond sweet.\" She took the bags. \"Who's the love bug? Your brother?\" \n\nKevin nodded. \"His name is Ben.\" \n\n\"Hello, Ben. By the way, don't think that I didn't notice that your mother, who was supposed to be in the kitchen, entered the restaurant from the front entrance. Very clever, Kevin.\" \n\nKevin blushed. \"I'm sorry, ma'am.\" \n\n\"What about? It was still the best sea bass I've ever tasted.\" \n\n\"Thank you, ma'am.\"\n\n\"So other than being so handsome, polite, and an amazing cook, is there anything else that you can do?\" \n\nKevin really wanted to impress her. He wasn't used to getting compliments from adults, and her words made him feel three feet taller. \"I...I invent jokes, ma'am. I want to be a stand-up comedian when I grow up.\" \n\n\"Really? Let's hear one.\" \n\n\"What's the similarity between a spoon, a shark, and an ant?\" \n\n\"Dunno.\"\n\n\"They all begin with the letter S.\" \n\n\"Ant?\"\n\n\"Her name is Suzan.\" \n\nFabienne laughed so hard she had to wipe tears; Helen sniggered, too, and even Diana smiled. \"I should give you Helen's phone number so you could call her when you grow up\u2014\"\n\n\"Mom, stop!\" Helen said.\n\n\"If it weren't a complete waste of time, as you can see. It was an amazing pleasure meeting you, Kevin.\" She leaned and kissed the top of his head. \"I hope we pass here on our way back because I want to hear the rest of your jokes.\" \n\nKevin stared after the bus until it cleared the bend. He was hoping they'd pass again. Especially Helen. \n\nHe started walking towards his aunt's house, a mile's walk, when he noticed Ben missing a shoe. It must have fallen off when he slept in the kitchen. He went back to the restaurant but paused at the door when he heard the arguing.\n\n\"That's the last time you share those views in front of my children, Roy.\" \n\n\"Come on, Sam. Futanari? Damnation! When I was a kid, someone like her would never\u2014\" .\n\n\"I don't care,\" Kevin heard his mother cut the pastor off in mid-sentence. \"Everyone is God's child. Everyone! No exceptions! You will not teach your hate to Kevin, you hear me?\" \n\n\"Come on, Sam.\"\n\n\"No!\"\n\n\"Please.\"\n\n\"Stop it\u2014not here, you idiot. Someone might come in.\" \n\nKevin saw his mother's silhouette from where he was standing. But then she moved as if pushed against the counter. Pastor Roy's tall body stumbled after her from the kitchen, and in front of Kevin's astounded eyes, the pastor hugged her lithe form from behind. One of his big hands went to her tit; his other hand went between her legs and lifted her dress. \n\nTom Murphy, Justin's dad, in one of his drunk episodes had once grabbed Kevin's mother at the local fair. Her slap sent him flying into the mud. Kevin expected the pastor to end the same way, on his ass. \n\nHis mother turned around. She lifted both hands and grabbed the pastor's neck, bringing his head down for a deep kiss. The pastor lifted her dress again, and Kevin's mom, Samantha, moaned. \n\nKevin ran away, his little brother in his arms, the shoe forgotten. He managed a hundred steps before he had to sit down on the pier because his legs were shaking. \n\nBen wasn't much of a talker, but he was attuned to his big brother's moods. He tried tickling Kevin, and when that didn't help, he tried giggling. It was usually enough to start Kevin laughing, too, but to Ben's surprise, Kevin began to cry. \n\n\"Boom?\" he said.\n\nKevin sniffed. \"Boom.\" \n\n--\n\n\"No good.\" The image on the living room's massive TV screen flickered. \"It's saying 'Bad Signal' again.\" Kevin put the cable company's support representative on speaker, ran to the kitchen, and added the heavy cream to the pot with the melted butter and garlic. He stirred, then turned down the heat and set the oven timer to ring in three minutes. ",
        "\"Sir, I need you to reset the set-top box.\" The support girl was as calm as she had been twenty minutes before, at the start of the conversation. Kevin found it annoying. \n\n\"That's the fourth time we're doing it.\"\n\n\"Yes.\"\n\n\"What's your name again Ms.\u2014?\" \n\n\"It's Kelly.\" \n\n\"I feel like we're running in circles, Kelly. Is there a plot twist somewhere in this story? A catharsis?\" \n\n\"Sir, I need to put you on hold.\" \n\n\"No, wait\u2014fuck!\" Kevin ran back to the living room and switched the cable box off. \n\nHelen stopped chopping the salad and looked up. \"Again?\" \n\n\"Yeah, I'm starting to suspect that my call wasn't really that important to them.\" Kevin rolled his eyes, and Helen mimed committing suicide with an imaginary gun. \n\n\"Don't shoot yourself just yet.\" He turned the box on. \"You're on dishes duty tonight.\"\n\n\"Hey, no spoilers.\" \n\nKevin went back to his ravioli, tasted the filling, and spread it on the dough. He then went back to the living room. \n\nDiana hollered her hello from the hallway. She kicked her boots under the big table, and with a heavy sigh collapsed on the couch. She was wearing a blazer and a long-sleeved, knee-length dress. Since she'd started her new job, it replaced the casual, sexy minis that were her trademark. \n\n\"New iPhone?\" Kevin asked. \"iPhone-8, really?\" \n\nShe shrugged. \n\n\"What happened to the LG you bought last week?\"\n\n\"You can have it if you like. Now shut up, I'm working. No, I wasn't talking to you, I was talking to my boyfriend. Yeah, I get it. Look, I know the margin sucks. I don't care if we don't make money on drinks. Yeah, I know it was different with Alice, but Alice was fired by the new owner because she was doing so great. Yes. I don't care. Alice again? Jesus. You know what? Alice, who the fuck is Alice? I'm the new boss. You don't have to understand, just do what I tell you to do.\" Diana punched 'end call.' \"Jesus. People are maggots. Seriously, so stupid.\"\n\n\"Look at you, all bossy and stuff,\" Kevin smiled. \"Kind of sexy.\"\n\n\"Come here and give me a kiss, Kev.\" \n\nKevin dutifully gave Diana a light peck. She grabbed his neck and pulled him into a slow French kiss. He frantically pointed at the phone. \"I'm with the cable company.\"\n\n\"What's cooking?\" \n\n\"Chicken and artichoke ravioli,\" Kevin said.\n\n\"What? I told you I hate that shit.\"\n\n\"Just so you know when it's done right it can be delicious.\"\n\n\"If you throw it away and order a pizza maybe.\"\n\n\"All right, sorry, I'll try to remember.\" \n\nBehind Diana's back, Helen created a little heart between the opposite forefingers and thumbs. She loved his ravioli and knew he cooked it just for her sake.\n\n\"Sir, did you reset the set-top box?\" \n\n\"So far so good,\" Kevin said to the cables support lady. \"The image is stable.\" \n\n\"No flickering?\"\n\n\"Wait for it, wait for it. Nope, it flickered again. No good.\" \n\n\"Are you experiencing a bad signal again, sir?\" \n\n\"Let me set the record straight, Kelly, okay? You're the cable company. You're experiencing a bad signal. Me, I'm experiencing frustration. Right now, I'm experiencing a thought that tells me to check out Netflix.\"\n\n\"I'm really sorry that you feel that way, sir.\"\n\n\"Yeah, you sound devastated.\"\n\n\"On our end, we can see that the signal is strong and steady, sir. Maybe you can connect the TV to the set-top box with an HDMI cable?\" \n\n\"To the wireless box?\"\n\n\"Yes.\"\n\n\"That's like my garage fixing my car by attaching it to a mule.\"\n\n\"Our technical team tells me that it must be something from your end that is messing with the signal. Could be a transmitter of sorts? Maybe something that the neighbors have installed?\" \n\n\"Probably the hipster couple from 54B. They're evil. What now?\" \n\n\"I'll send one of our technicians tomorrow, sir. Between nine and twelve sound all right?\" \n\n\"Don't you think someone older would be better?\"\n\n\"No, I meant...oh I see, sir. Like a joke only different. We'll contact you one hour before their arrival.\" \n\n\"Thanks.\" Kevin hung up the call. \"That wasn't a waste of time at all.\" He went back to his cooking while Helen prepared the table, laying plates, glasses, and drinks. Ten minutes later, dinner was ready. Kevin distributed the ravioli in three equal portions. Helen attacked her dish with gusto. \n\nDiana gave her plate a sniff, then dropped it on the table and grabbed the ketchup.\n\n\"No! Don't!\" Kevin grabbed the bottle. \"Ketchup is like makeup for food.\"\n\n\"So deep.\" Diana reclaimed the bottle and drowned her plate in red. \"Did you two go to the movies tonight?\" \n\n\"To a sci-fi flick Helen wanted to see. Valerian the City of a Something.\" \n\n\"Any good?\"\n\n\"It was okay,\" Helen said.\n\nKevin snorted. \n\n\"I didn't say it was a masterpiece, I said okay.\" \n\n\"The plot was stupid. Most of the time no one understood what was going on, including the actors and the director.\" \n\n\"I understood everything,\" Helen said\n\n\"Yeah, Helen pretended that she did, but she didn't.\"\n\n\"Totally did.\"\n\nKevin pulled the lid off a small pot with miso eggplants and added salt. \"There was this cute dragon, and it crapped beads, and this alien chick rubbed those ass-beads all over her face. Crazy. I thought we went into the wrong theatre and were watching fifty shades of Teletubbies scat porn.\" \n\n\"Cara Delevingne was hot, though,\" Helen said.\n\n\"So what? You're prettier than her. Doesn't mean I wanna see you in a movie anytime soon.\" Kevin changed to a gravelly movie trailer voice. \"In a time when Justin Bieber uses human appendixes to clone himself, the world calls on the only woman who can make a difference, Helen Brion. A suburban girl with no skills, sex appeal, or an appendix to call her own. This summer, Justin will be served. Appendixless Three.\"\n\n\"I do have sex appeal.\" \n\n\"Comme ci comme \u00e7a.\" Kevin made a so-so gesture. He fired up a butane torch, giving each eggplant slice a light searing. He should have taken the eggplants and the sauce out of the pot first because the oil caught fire, the flame jumped, and almost singed his eyebrows. He paled a little but tried to be nonchalant about it by humming and swatting the flame down with a spatula. \n\n\"This summer, houses will burn,\" Helen said. \"The show-off cook who thought he could.\"\n\n\"I did that on purpose.\" \n\n\"Just be more careful next time.\" Helen gave what she hoped was a patronizing eye roll. \n\n\"All part of the cooking plan. Yep.\"\n\n\"Saying a lie several times doesn't make it true, darling.\"\n\nDiana watched the banter between her sister and Kevin and had a nasty wake-up call. For the first time, she paid close attention to the dynamic and realized that under her nose, something unexpected was blossoming. \n\nHelen always wore shapeless suits to her office, and shapeless sweatpants and t-shirts at home. For her movie date with Kevin tonight, she wore a new, mustard sleeveless dress that accented her round chest, perfect figure, and long legs. But the main change wasn't her new dress code. Diana couldn't detect even a trace of the reserved, cold act through which Helen interacted with the world. She was a different person around Kevin. Her sister laughed, bantered, and smiled all of the time. Her walls and guard towers were down as if she felt completely safe around him, and Helen never felt safe around anyone. An outsider looking at the scene would have a hard time determining who the couple were and who was the third wheel. \n\nDiana didn't miss the fact that Kevin said that her sister was prettier than a Hollywood actress, nor did she miss the fact that Helen looked at Kevin as if he were the sun, the moon, and the stars. \n\n\"Okay, boys and girls.\" Helen tapped her glass with her fork. \"I have a huge announcement to make.\"\n\n\"You're pregnant with twins?\" Kevin said.\n\n\"Shuddup! Diana, remember how you've been trying for years to convince me that we both should go on a vacation?\" \n\n\"Yeah,\" Diana said dryly. She used to try and convince Helen to go on a European vacation. Now that she was starting to make good money on her own, the prospect of flying with her sister seemed less hot. \n\n\"Wow, and I thought Valerian was anticlimactic,\" Kevin said. \n\n\"It's my first vacation in, ever,\" Helen pouted. \"It's a big deal. I bought tickets to the Seychelles.\"\n\n\"Where's that?\" Diana said.\n\n\"Exotic islands in the Indian Ocean, near Africa.\" \n\n\"I always said I wanted to experience Europe, not some backwater island.\"\n\n\"One week on the islands, then we'll spend a week in Europe. We'll go through Slovenia, and from there to northern Italy, Venice maybe. Then we'll fly back home.\" \n\n\"Italy? Nice!\" Diana said. \n\n\"Look at that.\" Kevin showed them an underwater picture of a school of eagle rays. He pulled it from a Seychelles album of two female divers whose Facebook page he followed. \"Looks like a dream. Diana, you should get at least a single diving star before you go.\"\n\nDiana twisted her mouth. \"My Idea of an exotic island is a cocktail glass with umbrellas, a sandy beach, coconuts, and a tiny bikini.\" \n\n\"Wow, look at that manta ray. I don't envy you two at all,\" Kevin said. \n\nHelen gave a tiny smile. \"Why would you be envious?\" \n\n\"I'm not. Okay, maybe just a little.\" \n\n\"But you're coming too.\"\n\nKevin stopped swiping Seychelles underwater photos on his phone. \"No, I'm not.\"\n\n\"I already bought tickets.\"\n\n\"I can't afford anything like that, Helen. You know I don't have that kind of money.\" \n\n\"Who said anything about money?\"\n\nKevin blushed. \"I...I know your intentions are good, Helen.\" \n\n\"Then don't be a dick about it. Say 'Thank you, I'll be happy to come along.' Who else would be my diving partner?\"\n\n\"But I can't accept that kind of a gift from you. It's way too much.\" \n\n\"Diana can't manage two weeks without you.\"\n\nDiana squinted her eyes. She suspected that Helen wouldn't manage two weeks without Kevin either. However, there was no way she was leaving him at home. \"Yeah, Kevin, I won't go unless you're coming too.\" \n\n\"And I'm not going alone,\" Helen shook her head. \"Be a sport. You told me to start going outside my comfort zone. It's your fault. Take responsibility.\"\n\n\"Helen, I can't.\"\n\n\"You always pay for our movies, and I never bitch about it.\"\n\n\"Yeah, because that's exactly the same.\" There was a struggle on his handsome face. He'd never traveled abroad or even been on a plane before. \"I...\"\n\n\"We'll use force if necessary.\" \n\n\"I...okay, put it on my tab, with my other debt. I'll start paying it eventually.\" He blushed deeply. \n\n\"If that's what it takes to make you come, then I'm cool with that.\" \n\n\"Th...thanks. That's the, that's the nicest thing anyone has ever done for me.\" He kissed Diana's cheek and irritated her immensely when he went and kissed Helen's cheek too. \n\nHelen looked like she was willing to buy him a trip around the world and a private jet just to get another kiss. \n\n--\n\nHelen checked herself in the mirror and blushed. She toyed with the idea of changing into the red dress she'd bought for her date with Dennis, but that dress had an unpleasant history, and she wanted this night to be memorable. She purchased an emerald cocktail dress on a whim after the sales assistant told her she looked fabulous. In retrospect, it wasn't the smartest idea. \n\nIt hugged her body perfectly, and there was no skin showing in the back and very little in the front, which was perfect because of her scars. However, it ended above the knee, and she kept trying to pull it down. At last, she replaced her high boots with stylish silver stilettos and was satisfied. The dress was still too short, but the overall result felt more sophisticated, less slutty. \n\nHelen gave a low whistle as Kevin came out of Diana's room wearing a tuxedo, white shirt, and a bowtie. \"Wow. Big like.\" \n\n\"Not too shabby, eh?\" he said. \n\n\"Nice.\"\n\n\"Fuck nice. I can safely say that I'm killing it!\" \n\n\"So modest.\"\n\n\"I got the tux from a cousin of Mike's; he's got a dry-cleaning gig.\" \n\n\"Jesus, is this someone else's tux?\"\n\n\"Don't worry, it was dry-cleaned.\" \n\nHelen straightened Kevin's tie. \"You could've asked, and I would have rented you one.\"\n\n\"I feel like I'm taking you to the prom.\" \n\n\"I never went to a prom.\"\n\n\"I know.\"\n\n\"How do you...? Oh.\" She remembered writing about it in her letters to Andy. \n\nKevin spun and gyrated like Elvis. \"Did I ever tell you that I'm an amazing dancer too?\" He did a Michael Jackson \"Billy Jean\" and a nipple twist.\n\n\"Oh Jesus, gross! Don't ever do that again, Kevin. And we're not going to a dance. It's a fundraising event for a shelter for women at risk.\" \n\n\"Oh, in that case, we need to stop at an ATM then. Unless you guys take checks.\"\n\n\"As long as the check clears.\" \n\n\"Hey, that's the exact phrase I want on my tombstone. What about you? Aren't you getting dressed?\"\n\n\"Asshole.\"\n\nKevin laughed. \"Jesus, you're so easy, it's almost a shame. Almost. You look... you look like a wow.\"\n\n\"A wow?\"\n\n\"A massive wow.\" \n\nWhen they went down to the underground garage, he made her giggle because he ran and opened the car door for her.\n\n\"I'm giving you the prom experience,\" Kevin said. \"Minus the vomit, the stupid fashions, and the pressure of getting a date.\" \n\n\"Are you sure Diana is cool with us going?\"\n\n\"Dunno.\" Kevin pressed the ignition button and smiled at the engine's hum. Helen's Audi-4 was a dream car. \"She's probably not okay. I didn't ask her if I can escort you, I stated a fact.\" He adjusted her driver's seat to match his height. \"What's the game plan?\" \n\n\"What game?\"\n\n\"We should say I'm thirty-two, and I own a software company. A billionaire. No, too much. Just a millionaire. \"\n\n\"Sometimes I ask myself, Kevin, what goes on inside that head of yours?\" \n\n\"Why ask yourself when you can ask me? I'm sitting right next to you.\" \n\nHelen rolled her eye. \n\n\"You're twenty-nine years old, rich, successful, and beautiful. As for me, a guy tried to rob me today, saying 'Your money or your life.' I told him I don't have money or a life.\"\n\n\"Touching story.\" \n\n\"Your date is a twenty-one-year-old student who's almost on food stamps. That's so lame. The least flattering item that you have tonight is me. You can do way better.\"\n\n\"No, I can't.\"\n\nKevin shook his head. \"How about if we say I'm thirty, and I own Microsoft.\"\n\n\"No.\"\n\n\"So just rich.\"\n\n\"How about if we say nothing?\" \n\n\"And if someone asks?\"\n\nHelen looked at him, then rubbed her scar. \"I've been hiding from people all my life, Kevin. I'm tired of being a coward.\" \n\nKevin nodded. \"Just for the record, Helen. You're the bravest person I've ever met.\"\n\n--\n\n\"Wow, finally.\" William Richardson, co-founder and president of Richardson and Williams, shook Kevin's hand warmly. \"After so many years, we're finally getting to meet your famous boyfriend, Helen. Some of us were getting suspicious that he might not be real.\" He punched Kevin's shoulder and sniggered. \n\n\"Oh no, I eat pizza, therefore I exist, sir, I'm...\" he looked at Helen. She blushed because she hadn't told him anything about no boyfriend. \"I'm the...her boyfriend.\" \n\n\"Well, you're one lucky guy. Helen is one hell of a catch, and I'm not saying that just because she served in my beloved corps.\" \n\n\"Oh, you served with the Marines, too, sir?\" \n\n\"Major William Richardson.\" Helen's boss saluted Kevin and winked. When his hand went up, Kevin could see the end of his 'Semper Fi' tattoo. He had a 'well, fuck me running' moment, because William Richardson also wore a golden Rolex inlaid with diamonds. \n\n\"You're holding up the line, dear.\" Carmela, William's wife, a philanthropist and former Miss USA, nudged her husband. \n\n\"Yes, of course, dear. Right as always.\" \n\nCarmela gave William a stare that could freeze the melting ice caps. She stood two feet apart from her husband, and everything about her body language said disgust.\n\nThe Bowery Hotel rooftop's great hall was brimming with the upper class. People Kevin actually knew from the newspaper. Men in penguin suits and fine tailoring. Women wearing the most elegant designer clothes and enough diamonds to solve world hunger. The place itself overlooked the rich side of the bay. Rows of luxurious yachts adorned the docks in the distance. The great hall had ostentatiously detailed pillars painted brilliant white, soft velvet lighting emanating from a ceiling that looked like sea waves, and an orchestra performed on a raised stage. Waiters wearing black and white hovered around the guests, bearing trays laden with appetizers.\n\n\"Whew, that was super awkward,\" Kevin said to Helen once they went farther inside the hall.\n\n\"Yeah, I'm so sorry about that. I knew something like this could happen.\" \n\n\"What are you talking about?\" \n\n\"I kinda invented a boyfriend three years ago. I wanted people at the office to think I'm less of a loner weirdo.\" \n\n\"And I'm it?\"\n\n\"No, I wanted to impress William, honest.\"\n\n\"And?\"\n\n\"It felt so good that he thought that I have a boyfriend. That I was like everyone else...\" She blushed so deeply that Kevin felt like kissing her. \"You're not mad, Kev?\" \n\n\"I was talking about your boss, and his wife treating him like he has leprosy\u2014awkward. I don't mind being your boyfriend.\"\n\n\"Thanks.\"\n\n\"But you should have given me a heads-up. We need to be synchronized in case people ask questions,\" he said.\n\n\"What questions?\" \n\n\"How did we meet?\"\n\n\"In a...place.\" \n\n\"Good, keep it vague. Do we have a lot of sex?\"\n\n\"Once a year, on April first.\" \n\n\"What's your favorite thing in bed?\"\n\n\"Food?\" \n\n\"Hell, I knew that.\" \n\nHelen sighed. \"Look, I'll say you're just my date for tonight. I was too embarrassed, but I'm prepared now, okay?\" \n\n\"Sure.\" He gave her a kiss on the cheek. \n\n\"Oh my God, Kevin?\" A tall blond girl wrapped her arms around Kevin's shoulders and pulled him close into a warm hug. He found himself face to face with the magnificent hills of Sharon Richardson. \"What the hell are you doing here?\" \n\n\"I'm here with Helen.\" He pulled back, a little flushed. \n\n\"Oh, hi Helen.\" The tall futanari model and daughter of Helen's boss, leaned and kissed Helen's cheek. The two beautiful girls gave each other a quick scan, like lionesses establishing dominance. It wasn't a fair fight, because Sharon had the libido and the confidence of Tiger Woods and Donald Trump combined. \"You two? Wow. I didn't know you two dated. Kevin and I, we know each other from uni.\"\n\n\"Oh?\" Helen's smile was faint. \"Small world.\" \n\n\"Indeed. Oh my God, I can't believe you're here. Wow! Helen, you've got to let me steal him for a few moments.\" \n\n\"Sure.\"\n\n\"Ah,\" Kevin started. \"I'm not\u2014\"\n\n\"Come on, I've got to show you to someone.\" She pulled him after her. \"And I was sure this evening would be a fucking snore. I'm so glad you're here. Jesus, my mom wanted me to stand with her at the reception, but it's like the fucking cold war over there. Brutal.\" \n\n\"What happened?\" \n\n\"My dad cheated, is what happened. She caught him red-handed, well, again. He has this sweet tooth for futanari girls. Mom kicked his sorry ass to the curb. She only allowed him to return home a week ago, but it has been silent treatment since. Brutal.\"\n\n\"I'm sorry to hear that.\" \n\nShe shook her head, jouncing a pair of diamond earrings that could feed a homeless family for life. \"Meh. On the bright side, he's at such a low point right now that I can guilt him to do practically anything. I'm willing to bet that if I said 'Daddy, I want a private jet,' he'd just pull out a check. What an asshole, I hope he learned his lesson.\"\n\nKevin clenched his teeth. He sure wasn't going to tell her that her father was playing dangerous games in Sin's basement. He was confident that the tattoo and the golden Rolex belonged to the person he'd seen in the photo inside her armoire. \n\n\"You look hot, by the way, Kev.\" \n\n\"Thanks. You look...yep.\" \n\nSharon wore a black Dolce & Gabbana evening gown, and she looked like a photoshopped model from the front page of Vogue, which made sense, as she actually had been Vogue cover girl, twice. ",
        "\"Come on, let's check the bar, I'm jonesing for a drink.\" She dragged him again, and Kevin searched for Helen but couldn't see her anywhere. \n\n\"Hi. What would you recommend?\" he asked the Middle Eastern-looking bartender. \n\nThe man gave him a well-practiced smile. \"Domaine Leroy, sir.\"\n\n\"Oh, sorry, I'm Kevin.\" Kevin shook his hand.\n\nSharon snorted. \"It's the name of the wine, dummy.\" \n\n\"Oh, I knew that. I was just trying to be funny.\"\n\n\"Sure.\" \n\n\"That would be a hundred and fifty dollars, sir.\" \n\nKevin stared at him open-mouthed. \"You're fucking with me, right?\"\n\n\"Certainly not, sir.\"\n\n\"A hundred and fifty for two glasses of wine?\"\n\n\"Each.\"\n\n\"Ahhh, do you have something more...? Like a drink that doesn't require me to sell a kidney?\" \n\n\"What is your budget, sir?\" \n\n\"Probably less.\"\n\n\"Bottled water?\"\n\n\"Sure.\" \n\n\"That would be a hundred dollar for two bottles, sir.\" \n\n\"Jesus, I didn't ask to pay your water bill, just a bottle.\" \n\n\"I would like to point out, sir, that all of tonight's revenues will go to financing the shelter for women at risk.\"\n\nKevin sighed and pulled out a hundred-dollar bill. \"It's really hard sometimes to do the good thing. That's my lunch budget for three weeks.\" He sipped the water from the wine glass and clinked it with Sharon's. \"You said you wanted me to meet someone?\"\n\n\"See that tall Justin Bieber lookalike, talking with that brunette over there? That's Rob Fulton.\" \n\n\"Arctic Banana's drummer? He's your ex, right? Want me to meet him?\"\n\n\"Fuck no! Quick, he's looking our way.\" She grabbed Kevin's neck and pulled him for a deep French kiss. Her tongue entered his mouth and ran circles around his. They were both flushed when she pulled out, Sharon from excitement and Kevin due to embarrassment. \n\n\"What? Don't look at me like that. I just wanted to give the son of a bitch something to think about.\"\n\n\"Jesus, Sharon, we've been through that. And now I have a girlfriend, so\u2014\" \n\n\"Helen? She's way too old for you.\" \n\n\"First, she's not too old, she's twenty-nine, not sixty-nine, and second, she's not my girlfriend.\"\n\n\"Does she know?\"\n\n\"That she's not my girlfriend?\"\n\n\"Because she's head over heels for you.\" \n\nKevin waved his hand in dismissal. \"Fuck off. We're good friends.\" \n\n\"Yeah? If life were a Disney movie, she would have pink hearts circling her head and in her eyes right now.\"\n\n\"Based on what?\"\n\n\"Based on the fact that I'm a woman, and I saw how she looks at you.\" \n\n\"Bullshit!\" \n\n\"It's not so hard to figure out,\" Sharon smirked. \"Does she try to spend as much time with you as she can?\"\n\n\"She doesn't have many friends. What? I like spending time with her too.\"\n\n\"Aha! Does Helen go the extra mile to dress nicely when you're around? Does she laugh at your stupid jokes?\"\n\n\"My jokes are awesome, that's why she laughs.\" \n\n\"Aha! Is Helen dating anyone right now? Because she's a stunner, even with the eyepatch. It's not like she'd have any problem picking up guys.\"\n\n\"She's very insecure.\" \n\n\"You're an idiot, Kev. She doesn't date anyone because she has her sights set on you, hard. She's not emotionally available to other guys.\"\n\n\"Emotionally what?\"\n\n\"Available.\" Sharon shrugged. \"Wanna dance?\"\n\n\"Maybe later, I feel bad now for ditching her for so long. That was a dick move. I came tonight only because she needed my support. See ya sometime.\" He left Sharon at the bar and went to find Helen. He saw her at the other side of the hall talking to a tall, elderly woman. Helen's body language told him she was not enjoying the conversation. Her face lit up when she saw him, and she excused herself. \n\n\"Hey, there you are.\"\n\n\"Yep.\" \n\n\"Had fun with my boss's daughter?\" \n\n\"She's more than I can handle. I mean, she's just as spoilt as Diana, only she has unlimited access to money, and everyone on YouTube and Twitter keeps telling her how hot she is. Her ego is the size of Nevada. Scary.\" \n\nHelen laughed.\n\n\"Wanna dance?\" Kevin said. \n\n\"I don't dance.\" \n\n\"Why not?\"\n\n\"I don't dance!\"\n\n\"Is it because my head reaches your chin?\" \n\n\"Yeah, nailed it. You're too short, Kevin.\" \n\nKevin made a Bronx cheer. \"If I had a dollar for every girl who told me, 'You're too short, but I'll sleep with you anyway,' I would have lots of fifty cents coins right now.\" \n\nHelen laughed at Kevin's stupid joke. \"I don't qualify to dance.\"\n\n\"You've got limbs, that's enough qualification.\"\n\n\"I can't dance.\"\n\n\"You couldn't dive a month ago either. Come on, you think any of these monkeys in suits knows how to dance?\" \n\n\"Most of them are my colleagues, Kev.\" \n\n\"Most of them are clueless. None of them look as hot as you.\" \n\nShe smiled, gave him her hand, and he pulled her after him to a more secluded area on the dance floor. The band played salsa, not too fast, not too slow. Kevin placed his right on her hip, held her hand high and showed her how to put her other hand on his shoulder. \n\n\"I...\" \n\n\"Just follow my lead.\" \n\nHelen saw Sharon's little sister on the dance floor, dancing herself to oblivion with a slim Latino-looking guy. All of her boss's daughters were futanari, even though Carmela didn't manifest the gene. It made her feel a little better about Kevin and herself. \n\nForward, step, step, back, step, step. Kevin started a simple rhythm, and Helen did her best to follow. She glanced sideways at the people around her. Any minute they might notice the alien amongst them who couldn't move.\n\n\"Hey, relax, look at me.\" \n\nShe missed a step and almost stumbled, but Kevin steadied her and winked. Helen laughed. \n\nForward, step, step, back, step, step.\n\nLittle by little her breathing slowed and her jaw, which had unconsciously clenched, relaxed. All around her, people were focused on their own small worlds. She felt silly and concentrated on synchronizing her movements with the man holding her. \n\nForward, step, step, back, step, step.\n\n\"See? Easy!\" Kevin spun her around. \"And fun.\" \n\nIt really wasn't hard, and Helen wondered why the hell she'd never tried it before. It was fun. She had always been an athlete and like most athletes had good control over her body. Kevin's warm hand holding hers felt good, and so did his hand on her hip. \n\nForward, step, step, back, step, step.\n\n\"That older woman you were talking to?\" he said. \n\n\"Suzan Owens?\" \n\n\"Yeah, who is she?\" Kevin said.\n\n\"A stockholder. She sits on the board. Why?\" \n\n\"I could swear I recognize her voice from somewhere, but I can't exactly place it. Weird.\" Kevin shrugged. \"Okay, you've got the basics, let's go extra.\" His hand left her hip and took her hand off his shoulder. He pulled her body closer and tried to tilt her. Helen pushed back when she was supposed to relax. She lost her balance, decided to use Kevin's body as a counterweight, and then the laws of physics gave her the middle finger. They crashed together against the elevated stage. \n\nFor a few seconds, Helen was on top of him, her body against his, feeling him squirming against her. He was laughing. Helen had forced herself a long time ago to stop her daydreaming about him. She thought it was immoral to have these thoughts about a friend who cared about her so much, even if her fantasies remained confined to her skull. She abolished them, and they sneaked into her wet dreams. \n\nHelen felt herself harden, and she pulled back, alarmed. \n\n\"Sorry,\" Kevin laughed. \"That was massively stupid.\" \n\nThe traitor between her legs didn't think it was stupid. It acted like a dog that had just been asked, 'Who wants to go out?' It practically wagged. Helen felt herself grow and was grateful for the low lighting. \"I'm sorry, I need...\" She ran on her gazelle legs through the crowd, made her way to the nearest toilets, and locked herself in a booth, breathing hard. \n\nShe waited for her pulse to slow and the Judas to grow soft, but the bastard had a brain of its own. Feeling disgusted with herself, she stumbled out to the back of the hall. Helen found an empty balcony that was facing the city instead of the bay. Millions of lights caused the dense mass of skyscrapers to glitter. Below her, the streets were like veins of red, white, and blue. Her body finally relaxed in the cold air. \n\nThe orchestra stopped playing, and the people left the dance floor. Dinner was about to be served. \n\nShe checked her mobile for messages because now she felt sorry about bailing. She saw she missed a WhatsApp from Jack, the divemaster from the club and Kevin's assistant. \n\n\"Hey, there you are.\" Kevin stepped out from the hall. \"Why did you run off?\" \n\n\"I'm sorry.\" \n\n\"I'm the one who should be sorry. That was good enough to be a YouTube Fail video.\"\n\n\"Ouch.\"\n\nHe did a spin and a half salsa step. \"But nobody saw us crashing like idiots, so no harm was done. I'm still cool. You're texting me?\"\n\nShe pretended to look at the blinking lights below; it was easier than looking into his purple eyes. \"I'm texting Jack; he just asked me out on a date.\"\n\n\"Fuck yeah, high five!\" \n\n\"I told him 'Thanks, but not at the moment.'\" \n\n\"What? Why? He's a great guy. He's studying to be an architect, and he's got his own gig selling belts online. Diving is just a hobby.\"\n\n\"Still.\"\n\nKevin spread his arms. \"You're not getting married, Helen, it's just a date. Go have some fun, for fuck's sake!\" \n\n\"You saw what happened with Dennis.\"\n\n\"Dennis was a total tool. Jack is one of the good guys.\" \n\n\"I'm awkward around other people. I always feel like they're judging me because I'm a futanari and because...\" She pointed at her eyepatch. \"I never know what to do. Whatever I say, I feel like I'm embarrassing myself. I always end up acting like a cold bitch or a total fool.\" \n\n\"That's bullshit, Helen. Just be yourself, and you'll do fine.\"\n\n\"Be me?\" \n\n\"I know it sounds corny, but it's good advice. Be yourself.\"\n\n\"Because I intend to show up with a painted mustache and tell him that I'm Hitler?\" \n\n\"Just show him how smart and funny and loving you are, or you can show him your boobs. Guys aren't that complicated.\"\n\n\"Guys can be complex.\"\n\nKevin shook his head. \"We only have two states: horny and hungry. If a guy doesn't have an erection, just buy him a hotdog or something.\"\n\nHelen gave a short laugh. \"Hotdog, and personality doesn't count, boobs do. Great advice, Kev.\" \n\n\"Personality counts, but mostly when you're naked.\"\n\n\"Wait, I wanna write it down.\" \n\nKevin shook his head again. \"You're overthinking everything. Just do what you always do\u2014be yourself. Once you let people inside, even a little bit, it's impossible not to like you. Give Jack a call, come on! Be a sport!\" \n\n\"No.\"\n\n\"You don't like him?\" \n\n\"I do; Jack is cute, and I'm not just saying it because he's your friend. It's...It's not that. I just feel that if I want to date someone, I should be giving him my full undivided attention. I can't do that right now, and it's unfair because he really sounds like a great guy. I don't feel I'm emotionally available.\" \n\n\"So if not Jack, try someone else- I mean, what, wait, wait, what? What did you say? Emotionally what?\"\n\nThe orchestra started playing again, beginning with bass and slow cello. The lead singer joined, singing a soft, sad melody. \n\n\"Over a single sane moment, I could see the sorrow ships, \n\nThey sank beneath a deep blue of little hopes and wine.\"\n\nHelen turned to him with a faint smile. \"What? I'm not... I don't want to date anyone, Kevin.\" She turned back to the city.\n\n\"Over a single sane moment, I could see angels in the city skyline, \n\nAnd my, oh my, God was on our side.\"\n\nOver a single sane moment, Kevin finally could see what everyone else, including Diana, already knew, and his heart overflowed. He stared at her, mouth agape and eyes round with shock. \n\nThe human heart is a puzzle made of life pieces. \n\nThe pieces synchronized. Aligned, sharp edges gone, borders fused, and it became impossible to tell where one person ended and the other began.\n\nHelen had never looked as beautiful as he saw her that night under the city moonlight. Helen, the girl with the eyepatch and the deep scar that crossed her cheek all the way to her broken heart. Helen, born to a tragedy because no one was going to kidnap her to Troy, certainly not Kevin.\n\nBecause when the borders of delusion touched the frame of reality, Kevin suddenly remembered who he was, and who his real girlfriend was. \n\n\"I like the view from up here,\" Helen said. \"The city. You can't see the ugliness when it's dark. It's so beautiful.\"\n\n\"Mesmerizing.\" Kevin was staring at her. \"I wish she could be mine and I could be hers.\"\n\n\"What? The entire city?\"\n\nKevin didn't answer.\n\n*****\n\nTo be continued...\n\nYou know the drill. I sweat and write the story, you leisurely punch the stars and show me love/or hate. Yep, I'm an attention whore. No, seriously, I write stories, so people would read them not out of an artistic zeal. \n\nMore than a few rants, questions, recommendations, others, have accumulated in the postback/comments section. So, I'll start using the comments to answer, argue and rant right back at you. \n\nChapter 9 is being edited as we speak, yep. Chapter 10 is a work in progress."
    ],
    "authorname": "allthatisfuta",
    "tags": [
        "futa",
        "futa on male",
        "shemale",
        "shemale on male",
        "dickgirl",
        "dickgirl on male",
        "futanari",
        "futanari on male",
        "futa romance",
        "romance"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/family-issues-ch-08"
}