{
    "title": "In the Buff",
    "pages": [
        " This is my entry in Literotica's 2017 Nude Day story contest. I encourage readers to take a moment to rate this story when they are finished reading.\n\nI wrote this pure fantasy tale with fictitious locations for sexual activities between imagined characters. Any names or similarities to real people in my story are purely coincidental. All characters are over eighteen.\n\nI wish to acknowledge that the efforts of my husband were crucial in providing the male perspective. His usual editing expertise improved the grammar and mechanics of my wording. \n\nIn the Buff - Brett introduces a reserved woman to nudism.\n\n\u00a9 SandraMustard 2017\n\n* * * * *\n\nMovement behind my property caught my attention; a youthful looking woman was walking her dog. Her dancing gait and arm movements were reminiscent of Julie Andrews singing the \"Sound of Music\" opening. Her athletic exuberance captivated me.\n\nI spend considerable lengths of time in my backyard more than two hundred days every year, yet in the several years I've owned this house, I've never before seen anyone in the area behind it. Despite a back gate, I've ventured beyond my fence on just two occasions only to find little of interest. A retention pond sets between the edge of our residential properties and dense vegetation on undeveloped land beyond. A six-foot high flood-berm protecting residents from the pond provides a path of sorts but without connections to other trails or any signs of use.\n\nDuring my two brief excursions, I failed to notice the vantage point into my yard the berm's elevation afforded being located less than ten yards beyond my property. The dog walker enlightened me about that. Since I could see down to her knees, I immediately surmised she could see all of me over the seven-foot privacy fence that surrounds my backyard and swimming pool. Because of presumed privacy and my propensity for public nudity, I happened to be naked, reclined in a chaise lounge chair as she went by.\n\nI watched to see if she would notice me lying motionless in full view. Deciding to leave the outcome to chance, I didn't attempt to draw her attention with movement; she was nearly across the opening in the shrubbery anyway. A few steps from disappearing from my view, her head turned to look toward my yard. She seemed to hesitate then leap out of sight.\n\nMoments later, I saw patches of her colorful clothing move behind the end shrub. I couldn't see her face or head but I was certain she was peeking through the leaves. 'Go ahead and take a good look, honey,' I thought almost out loud. I enjoy women looking at my cock, especially when they show pleasant interest like this woman was doing. Her spying didn't last long enough for my cock to stiffen because almost immediately, her dog wandered into view. The dog looked up as if called, then bounded back out of sight and the light clothing disappeared.\n\nI waited at least thirty minutes for a possible return but she evidently left the berm a different way. After going inside to have lunch, I put on shorts and walking shoes to investigate the berm. I could see trampled grass where they had walked, especially where she lingered to spy, but I couldn't tell where they got on or off the berm.\n\nTurning to view my yard, I could see more than half of my pool surface. Undoubtedly, she had seen me on the pool deck at the far end. To the side, I could see the top half of the little hut that encloses the pool pump and swimmer conveniences. The lower half of someone using the outside shower would be hidden to someone on the berm. Now that I knew the sightlines of my exhibition stage, I hoped my voyeur friend would come around for another show.\n\n* * * * *\n\nWhen the woman walked her dog on the berm the next day, her actions proved she had noticed my naked presence the first time. I saw her dog first, drawing my attention before she stepped into the opening already looking toward my yard. Had she found my nudity to be repulsive or considered her vantage point an invasion of my privacy, she would either have avoided the berm altogether or kept her eyes averted. Instead, she slowly strolled across the opening, staring intently at my nakedness.\n\nHer leisurely pace gave me time to note some of her physical qualities. She was slender and petite with short, blonde hair, giving her a youthful appearance. Unable to perceive finer details because of the distance, I didn't recognize her as any neighbor I had seen before. I also reasoned she could tell little more than I was naked; well, maybe that I remove my pubic hair.\n\nSeveral days passed before she appeared again but she added a twist to her routine; she stopped for a long look. Reclined and motionless, I may have appeared to be asleep. I was emboldened by her interest in my nudity with thoughts of initiating an encounter with her, bold enough to acknowledge my awareness of her presence; I waved to her. Visibly startled, she glanced side to side before meekly returning the wave, and then walked away with eyes averted.\n\nThat seemed to break the ice. She came almost daily to see me. I waited excitedly for her to appear, disappointed when she didn't, regretful when I couldn't be there for my role. Her waves of greeting became open and energetic, accompanied by a toothy smile. If she arrived while I was swimming, she would stay until I climbed out and stood by my chair facing her to dry off. After a number of visits, I could see her stop behind the bushes again as she as leaving, a practice I didn't see the sense of.\n\nAs an exhibitionist, I reacted to the attention, of course. I could feel the heaviness build, my skin stretching. As long as my cock is when flaccid, I doubt she could see the difference from the berm, even the times full-fledged erections lifted off my belly. I often took care of my need for release immediately after she left. The routine was pleasant but I wanted to proceed to another level.\n\n* * * * *\n\nI was rinsing off under the outside shower after swimming. The afternoon had passed without my voyeur friend making an appearance. When I turned my back to the spray, I noticed her looking down from about fifty feet away. Despite knowing that she could not see below my chest, my cock tingled with excitement hanging free in her presence.\n\nI waved and bellowed, \"Hello!\"\n\nShe waved back and chirped cheerily, \"Hi there!\"\n\nCloser than ever before, she was still too far away to strike up a conversation but I decided to make the best of this opportunity. I gestured pointedly at the gate in my fence and she seemed to nod in acknowledgment so I walked toward the gate.\n\nDetermined to display my nudity, I intentionally swung the gate open wide. She stood there mouth agape, staring at my cock; one of her hands rose to cover her open mouth. She had come down almost to the bottom of the berm but had cautiously stopped about eight feet away. I stood silently, allowing her to take a long look.\n\nShe was wearing a white camisole under a floral-print blouse. Her white leggings were form fitting but not stretched tight the way some girls wear them. Her other hand at her side held a small black object and dangled a dog leash; her untethered yellow lab sat obediently beside her.\n\nAs if needing emphasis, she pointed at my cock. \"You're naked! Is this how you greet people?\" Meanwhile, her eyes remained fixed on my organ.\n\nAt that moment, I realized the black object in her hand was mini-binoculars. Stopping in the bushes made sense now. She had taken extra measures to get closer looks. She probably had been eager for an up close look before I invited her down.\n\nWith tongue in cheek, I brought her intentions and my attitudes out in the open. \"You expected me to be naked. I didn't want to disappoint you.\"\n\nShe looked up then, her eyes shiny with excitement. A blush colored her cheeks. Rather than admit or deny her interest, she sought answers to her curiosities. \"Are you a nudist?\"\n\nI'm more of an exhibitionist, but accepting her label probably aligned with her expectations and provided an acceptable excuse for my nakedness. \"I'm not hardcore because I practice mostly alone at home. Would you like to join me?\"\n\n\"That is rather bold! Do you invite everyone to be naked with you?\"\n\nI chuckled softly. \"I wasn't inviting you to take off your clothes although you are welcome to at any time. I'm inviting you to come sit down, have something to drink, and have a friendly little talk.\"\n\n\"I've never been naked outdoors and it doesn't seem like something I could take up now. I must confess that you are the first naked man other than my husband that I have ever seen. I imagine I've lived a very conservative lifestyle compared to yours. What if I find your nakedness too big of a distraction?\"\n\n\"I promise to cover up if my appearance becomes too hard on you.\" I smiled broadly at my purposeful word play. She bit her lip to suppress her own smile, undoubtedly picking up on the double meaning.\n\nBecause she mentioned a husband, I looked her over. Although she had a trim figure, the conservative way she wore her clothing concealed any signs of aging. With a clear complexion and smooth skin even around her bright green eyes, I still believed she was no older than thirty. She wasn't wearing a wedding ring, suggesting she might be divorced; I'm careful about getting involved with married women.\n\nShe seemed still hesitant to accept my invitation so I decided to tone down the sexual content. \"Perhaps you would be more at ease if we introduced ourselves. My name is Brett Saberman.\"\n\n\"Thank you for that, Brett. I'm Anna Fessler and my dog is Greta.\" Greta looked up at Anna and wagged her tail when she heard her name spoken. Without further ado, Anna started walking toward me. With her master's first step, the dog trotted ahead to greet me first. Anna voiced a warning, \"Watch out. She's so friendly she might jump at you. Her nails may scratch ... you in a bad place.\"\n\nI'd like to think I knew the word she decided not to speak, amused that my cock was still the focus of her thoughts. I wanted to work on this woman's conservative ways, to get her to open up, speak her mind, and follow her impulses.\n\nThe dog never jumped on me because I bent over toward her approach. Greta sniffed my offered hand then pushed her nose under my hand before flipping it up as she pressed her flank against my knees. The dog's behavior was indicating she liked to be petted which I did with both hands. I was using the petting as a visual distraction to hide the fact that my downcast eyes were actually watching Anna walk up.\n\nHer slender legs were marvelous displays of toned thighs and calves as she walked with an athlete's grace. Her bikini-style panty lines were visible across her twisting hips while her breasts were held motionless jutting out over her flat stomach. When she stopped two feet away, my lowered head was inches from her waist. Did she intend to be that close?\n\nWith hands at her waist, she stood with her legs slightly angled apart, enhancing her thigh gap. Her hips were tilted, thrusting her pubic mound forward. I found myself looking down at her beautifully sculpted sex showing just a hint of her Venus cleft. I wanted to see more of her body, my brain already imagining wild trysts with her perfect body riding my cock. My thoughts stirred my loins with anticipation.\n\nI turned my head before straightening up, catching her leaning to see around my head and shoulders to get an unobstructed view of my cock. She was smiling. Perhaps she noticed my building excitement, if not the added length, certainly she saw the way the ridge flared out from my engorged glans. It was all I could do to prevent lift off.\n\nI didn't want to scare her off. Despite some obvious interest in seeing me naked, I sensed a moral uncertainty making her reluctant to get involved further. I enjoy seducing my partners with patience, slowly overcoming inhibitions over days and even weeks leading to an explosive culmination. Anna was a prize worthy of a careful approach.\n\nI held my gate open and invited her into my yard. She asked if I wanted her dog on its leash but I told her Greta could have the run of my yard. As I turned my back to them to latch my gate, I heard Anna utter a sound of disgust. I turned back to see Greta hunched up, leaving a turd pile on a grassy patch next to the stone pathway.\n\nAnna apologized profusely but I assured her it was just nature taking its course. Nonetheless, she untied a doggy poop bag from the dog leash and immediately cleaned up after her dog. When she bent over, she treated me to an intimate view of her sweet ass displayed before me. With her task completed, I directed her toward my lounge chairs, and then followed her, watching the fabulous undulating motion of her firm buttocks as she walked.\n\nDid she know how sexy she was even in modest clothing? Did she know how easy she made it for me to study her body? Mentally, I threw cold water on my thoughts by cautioning myself about being disappointed if I learned she was unavailable. The hard part was ignoring her willingness to be with me while I was naked.\n\nShe elected to have sweet tea from the refreshments I offered. I took the baggie from her to drop in the trash when I went to fetch her drink, leaving her to settle into the lounge chair. As I prepared her iced tea, I looked out my kitchen window and noticed her taking a moment to adjust her clothes. First reaching inside her leggings to tug her panties, she carefully smoothed each clothing layer. I couldn't tell if she was carefully avoiding a cameltoe or just being fastidious about how her clothing adorned her feminine features.\n\nShe turned her head when she heard my screen door bang closed. Carrying her drink and a beer for me in one hand and a bowl of water for her dog in the other, I could see her eyes zeroed in on my swinging cock slapping against my thighs as I walked. The sight evoked an audible laugh from her. \"I never realized a man could have an issue with his penis moving while walking. Does it hurt?\"\n\nI handed her the sweet tea and responded as I stretched out in my chair beside her. \"No, it's not hitting my thighs that hard. Actually, like a lot of things when I'm naked, it's a bit stimulating.\"\n\n\"Stimulating? Do you mean sexually? What makes it stimulating?\"\n\n\"Well, my cock is sensitive to touch like everyone's is. So, yes, even touching against my own leg can be arousing but not intensely so. I mostly ignore the stimulation but the slapping is a constant reminder that my cock is uncovered.\"\n\nShe blinked reflexively with a little head jerk when I used the word cock, visibly surprised to hear the term apparently, although she didn't flinch at all when I said the word the second time. Sensitive to her reaction, I asked, \"It appears that you didn't like me using the word cock. I can call it my penis if that would make you more comfortable.\"\n\n\"I'm sorry I reacted at all. It's just that I seldom heard the word used so casually before, a sign of my really boring life.\" She paused for a long look at my member. \"I want to answer you this way. My husband had a penis; you have something more impressive. I have no qualms about referring to your cock by its rightful title.\"\n\nI noticed she said her husband had a penis, not has, and made a mental note. If she had a boring and conservative life up to now, she was coming out of her shell rather suddenly in my presence. She wasn't done with the sexual topic either. \"You said a lot of things arouse you when you're naked. Do you care to educate a na\u00efve woman?\"\n\n\"I can feel the warmth of the sun, the tickle of a breeze, and the flow of water over it when I swim. But, those are all mild stimulations. What really turns me on is when a woman obviously enjoys looking directly at my cock; better yet, when she's willing to talk about it.\"\n\nAmusement twinkled in her eyes; she seemed pleased to learn her mere presence had an effect on me. \"You're saying I'm turning you on by being here?\" She turned her gaze and locked onto my cock lying flaccid down between my legs, as if she was trying to imagine my member erect. \"I haven't noticed any physical reaction. Besides, I thought nudist don't get aroused from being naked.\"\n\n\"Oh, I've come close to getting an erection twice today. On previous days, I actually developed full erections just from you looking at me long enough from the berm. My arousal is not from being naked but from your interest in my cock.\"\n\n\"It sounds as though you are mostly an exhibitionist.\"\n\n\"To be honest, yes I am.\"\n\n\"Well, that is an astounding revelation! Here I thought I was a pervert because I enjoy seeing you naked. I justified looking because you seemed at ease with your nudity. Now I find out you have a perverted agenda to expose yourself to me.\"\n\n\"I don't dispute anything you said except I don't agree that we are perverts because we find pleasure in displaying and observing the beauty of the human body in its natural state. If you can just let go of your puritan beliefs, you will find there is a lot more to enjoy in life living like I do.\"\n\nI intentionally implied that she might be naked with me someday, wanting to plant the idea in her head. Getting her naked might lead to fun things consenting adults often do but first I needed to determine her marital status, something that's important to me if I want to get involved with a woman. I would get the answer without asking a direct question by engaging in small talk, offering details about myself to encourage similar responses from her.\n\nWhen she inquired about my hard northern accent, I used the topic shift to lead a diversionary discussion. I mentioned that I moved from New York City about five years earlier, looking for a warm climate conducive to my lifestyle preferences. She then shared that she moved from Atlanta just months earlier but mentioned no other details about circumstances or reasons.\n\nWe talked at length about my experiences living in the Big Apple. She showed particular interest in cultural activities on Broadway that I attended. I learned she took singing, dancing, and ballet lessons as a child growing up with dreams of performing on a stage. In college, she studied the Arts while participating in competitive swimming and track events. Although she never saw her dreams fulfilled, she parlayed her interests into running her own dance school for children.\n\nShe was curious about my occupation since I never seemed to work, able to spend almost every afternoon swimming and relaxing. I gave her a simple explanation how smart and in some cases, lucky investments have allowed me to live comfortably without working a regular job. She was surprised that I effectively retired at thirty when I moved to the Miami area. Turning silent, she didn't reciprocate with any details about her current occupation or means of support.\n\nI initially read her reluctance to share more of her past as a sign of a recent divorce and an unsettled life that she didn't want to explain. She proved me wrong immediately. She was so anxious to learn my personal information that she single-mindedly followed my answers with additional inquiries. When she finally did open up about her past, she surprised me with a background very different than I imagined.\n\n\"Forgive me if I'm being too forward. I think you live alone here. Have you ever had a companion live with you?\"\n\n\"Not since I moved here. I had several live-in girlfriends in New York but most didn't last because they didn't understand me.\"\n\nShe laughed sharply. \"I bet! What girl can understand her man wanting to be naked around others?\"\n\n\"Nude is how some people first meet me.\" I saw her smile coyly when she recognized herself in that group. \"Others get an early exposure. They all know what I'm about when they meet me. Knowing my activities didn't bother those girlfriends until they moved in, then they wanted to change my behavior. There have been girls who enjoyed and participated in my exhibitionism. In fact, it was my girlfriend Mara who introduced me to being naked for her friends. My habits grew from that because I found it's a special kind of excitement to be seen naked. Mara and I were together for several years.\"",
        "\"She didn't come to Florida with you?\"\n\n\"Our relationship ended when she left for Hollywood years before I moved here. She was my only serious companion and she has a lot to do with the way I am today. You're seeing me naked because of her. You seem comfortable sitting next to the first man other than your husband you've seen naked, as you described me, but does your husband care that you are acting so friendly with a naked man?\"\n\nA blank stare and a silent moment preceded her answer. \"My husband is beyond caring. He died more than two years ago of a heart attack.\"\n\n\"I'm sorry if my question was insensitive, Anna. I can understand how you might be struggling to deal with losing your husband at a young age.\" Another pregnant pause ensued without a response by her causing me to repeat, \"I'm sorry.\"\n\n\"No, you're good, Brett. You couldn't know unless I mentioned it. Besides, I'm not struggling with his passing anymore. Anyway, where did you get the idea he died young? He was fifty-eight, an overweight diabetic with lots of health problems. We were married more than thirty years.\"\n\nI sat upright in surprise, turning to stare at her face and then her body. She was double the age I estimated. \"You're in your fifties? I can't believe it! I thought you were no older than thirty.\" While I spoke, I re-evaluated her body but still could not jibe this woman's age with her body. \"I still think you look like you are twenty-something.\"\n\n\"I'm actually fifty-six. You are being very flattering, thank you, but is your opinion just wishful thinking to put me near your age or based on realistic observations you can define?\"\n\n\"Based on observations. You skin is the biggest tell, particularly on your face and neck. You have no wrinkles around your eyes, no skin tags or droopy skin on your neck, and no age spots anywhere. Your overall muscle tone is that of a teenager and shows no sign of sagging anywhere such as the underside of your upper arms.\" \n\nMy eyes had focused on each area as I described it but I drew silent as my gazed scanned her chest, flat stomach, and pubic mound. She remained silent until I looked up to her face; she had been watching me.\n\n\"You seem to have a critical eye for judging my body, Brett, but why didn't you say something about everything you looked at? Maybe you're too much of a gentleman, afraid you'll upset me, but I'm not a prude despite my limited experience. I'm interested in the rest of your thoughts. Tell me what you really think.\"\n\nI took her request as a signal that she wanted an intimate assessment and I gave her just that. Swinging my legs to the side of my chair, I sat facing her. When I looked down at her breasts first, she seemed to push them outward. \"Your breasts are the perfect size and shape. They don't droop or flop around when you walk but I can't tell how much of that is due to bra support. I wish I could see what kind of nipples you have and when they stand out. I wonder if they are now.\"\n\nMoving my gaze to her stomach, I added, \"Your stomach is absolutely flat without a hint of flab. You don't have love handles or a muffin bulge that usually comes with age. I can even see your abs. It takes effort to maintain that kind of muscle tone. I bet you can do fifty sit-ups. Do you exercise?\"\n\n\"I do daily yoga and lots of stretching and bending before practicing my ballet dancing.\"\n\n\"Someday I'd like to watch you dance,\" I suggested offhandedly. Shifting my gaze to her sex, I hesitated before speaking. Her pubic mound rising prominently over her wide thigh gap was so enticing that I felt a twinge of excitement stir my cock. \"A woman's vulva doesn't change much with age but your slender legs and flat tummy lets me see lots of detail.\" To get final approval, I asked, \"Should I continue?\"\n\nIn a husky voice, her answer was absolute. \"Yes, tell me what you see.\" She tilted her pelvis and turned her knees outward, giving me a clear view from two feet above her sex. I could feel my cock getting hard, but not yet rising above my thighs where she could see it.\n\n\"Your pubic mound bulges upward, tilting your sex in an inviting way. I can see the hem outline of your panties and even through your panties and leggings, I can see evidence of a thick mat of pubic hair. Judging from your eyebrows, your pubic hair is blonde. Your snug panty hems also highlight the bulge of your labia but there's enough slack in them and your leggings to show your cleft of Venus.\"\n\nHonestly, she was so fine, I wanted to fuck her right then. I was now fully erect but with her eyes watching mine look at her sex, she hadn't spotted my glans rising like a periscope above my thigh.\n\n\"Well!\" she declared forcefully. \"You were sexually explicit but complimentary. I've never had a man talk about me like that.\"\n\nMy cock was straining against gravity, rising high enough to feel breezes. I wanted her to see it rather than hide it. \"Especially a naked man.\"\n\n\"Especially a...\" Her gaze had drifted down to my legs and noticed my hard cock. It was her turn to sit upright suddenly. \"Oh my God! You have a freaking hard-on.\"\n\nSwinging my legs back onto my lawn chair, I stretched out, giving her an unobstructed view of my cock in all its glory. Turning the tables on her, I suggested, \"Tell me what you see.\"\n\nHer face turned toward me, her mouth still open in an expression of surprise. Some thought process seemed to give her the determination to seize upon the opportunity. Her mouth spread into an impish grin and excitement twinkled in her eyes. She took up a sitting position with her feet on the ground to look me over closely in the same manner I did to her.\n\nShe leaned forward and studied my member for several seconds, her head so close, I imagined her ready to take me in her mouth. I clenched my glutes to raise my hips and contracted my kegels to bounce my cock. She smiled and when she spoke, she described my sexual excitement instead of my general physique.\n\n\"I don't have the breadth of experience that you have but your cock is the biggest I've ever seen. It is circumcised, perfectly straight, uniformly thick, and topped by a large head shaped like ... Darth Vader's helmet. Your erection seems to have pulled your balls closer to your cock. You don't have any pubic hair; I didn't even know people remove hair there.\"\n\nShe continued her close inspection in silence and then she noticed a gossamer thread of pre-cum hanging from the tip. \"Your cock is leaking something. What is that?\" She seemed to entertain the idea of reaching out to touch it but pulled her hand back.\n\n\"Don't tell me you don't know what pre-cum is.\" She shrugged and shook her head, no. Despite her age, she really was uninformed about many things sexual so I explained it to her. \"It's a lubricant and chemical neutralizer of sorts that precedes ejaculation. It's similar to seminal fluid but generally doesn't contain sperm. Go ahead, you can touch it.\"\n\n\"No, I don't think I should be touching you sexually. What has made you so excited? Does the pre-cum mean you're close to orgasm?\"\n\n\"I wasn't suggesting a handjob, but rather a tactile learning opportunity.\" I gathered some pre-cum on my finger and rubbed it against my thumb to demonstrate. \"You'd see that the fluid has the consistency of semen. What made me excited was inspecting your body so intimately. I must admit, your body is so perfect that I developed an urgent desire to have sex with you. It would take more than looking at you to make me come, though. I would need some physical stimulation.\"\n\nWorried that pushing too hard too early might turn her interest into disgust, I didn't suggest self-stimulation or any assistance on her part to relieve my immediate raging desire. I believed my best chance to bed her was in a patient approach and bedding her, not just getting her clothes off, was my ultimate goal after appraising her body.\n\nAlthough our conversation continued along sexual lines, the details changed from intimate appraisals to past influences. As a result, my erection soon softened so that my cock settled onto my belly instead of levitating over it. She reclined again as well, repeating perhaps unconsciously, the clothing arrangement habit I witnessed from my kitchen window.\n\nAt her urging, to fully explain the origin of my exhibitionistic habits, I recounted how my girlfriend Mara began shaving my pubic hair and showing me off. She was interested in how I felt being exposed and whether shyness was ever an issue for me. She also asked many questions about removing my pubic hair, about both my motives and the waxing process. Although I mentioned some of the hijinks that ensued, I didn't elaborate on their effect on my relationships with Mara and other sex partners.\n\nIn fair turnabout, she detailed her life and marriage, giving me a full understanding of why a fifty-six year-old lived such a sheltered life. She wasn't just inexperienced outside of married sex attributable to fidelity attitudes; she had little secondhand knowledge of sexual practices beyond missionary sex in dark bedrooms.\n\nHer husband was a preacher's kid, introverted sexually by strict religious ideas. Being socially shy in her youth and even through college, she married him soon after graduation and felt comfortable hiding her ignorance about human biology behind the idea that good people don't talk about sex. The same moral rigors made her suppress any mental curiosities as sinful. That blockade around her knowledge persisted during her entire adult life until her husband's death.\n\nIncredibly, their marriage was almost devoid of sex. Their marital sex was infrequent early and mostly non-existent in the final years of their marriage due to his deteriorating health. They never experimented with positions, never discussed foreplay or arousal, and episodes were seldom satisfying for her. As another result of their attitudes, Anna had never experienced oral sex because they considered such acts as deviant behavior.\n\nHer husband's passing freed her from the constant reinforcement of his repressive attitudes but she didn't charge forward with new attitudes. If not for a life-long friend inquiring if she was dealing with menopause, she might still be hiding from her own desires. Anna knew what menopause was, but admitted she had never bothered to understand symptoms or remedies.\n\nThe revelation shocked her friend but the woman worked her way deeper into Anna's confidence and inside the conservative shell she never knew existed. Instead of only offering alternative beliefs about sex and divulging intimate details of her own experiences with multiple partners, the savvy friend provided informative reading material about human sexuality. She opened a new door to reality but didn't push Anna through it.\n\nAnna became receptive to looking at sex without repulsive reactions but found it hard to escape the reminders of her past that surrounded her life in Atlanta. Most imperative to finding her way out of repression, she concluded she needed to move far away from her husband's family.\n\nOne of the benefits of her marriage was a financially secure future. Never attracted to lavish expenditures and possessions, their modest home in what became a high-end location was mortgage free. In addition to a substantial life insurance death benefit, they had created large investment and retirement nest eggs. Since moving to the Miami area, she was renting a smaller home, adequate for her modest needs, while she searched for a permanent residence.\n\nWe had talked for hours. Nearing sunset, I offered to make dinner for her. She declined and said it was time for her to leave. I invited her to return anytime for more friendly talk and then suggested she could swim in my pool since her rented house did not have one. When she declared she would not swim naked, I said she could bring swimwear and mentioned that I have a changing room in the little pool house.\n\nI escorted her to my fence gate where I gently hugged her goodbye. Other than her arms around my shoulders, she stiffly limited the hug by bending at her waist to lean only her shoulders into me. I didn't know if she would ever come back. While the hours I spent naked with her were a significant step toward possibilities I could embrace, I would let her make choices without undue influence from me.\n\nMy hours-long exposure to a pretty woman meant I was horny as hell when I went to bed. When I closed my eyes, I saw her face leaning over my hard cock. My hand felt like her hand stroking me to quick relief.\n\n* * * * *\n\nTwo days later, I was thrilled to see her appear on the berm and wave at me. Instead of returning a wave of hello, my wave gestured for her to come in for a visit. The moment I rose from my chair, she started down the berm toward the gate to meet me.\n\nWhen I opened the gate, her eyes went right to my hanging cock. \"It's nice to see you again, Brett,\" she quipped without looking up to my face.\n\nAs her dog trotted past me, she approached me directly. I was pleasantly surprised when she stopped in front of me, inches away, and started to put her arms around me. I instantly reciprocated and we shared a mutually initiated hug that lasted several seconds. She clearly hugged me differently this time.\n\nAlthough my arms holding her were relaxed, she was pulling me close. Her breasts pressed firmly against my chest and her hips trapped my cock against her leggings. I enjoyed the body contact as long as she let it continue, certain she felt it too; the duration suggested everything was deliberate on her part.\n\nWhen she pulled back from the hug, I heard her tell herself under her breadth, \"That's wasn't so hard, now, was it.\" To me she added, \"I'm sorry, Brett. The old me reacted rather coldly to your hug when I left the other day. I'm trying to be more friendly with men I meet.\"\n\n\"I must say, you were very friendly this time. I really like the new you.\"\n\nShe smiled as we turned to enter my yard. She had on clothing similar to her first visit but I could not discern her panty lines as she walked in front of me. Could she be commando? I still saw her bra outline.\n\nWhen I inquired what was in the bag slung over her shoulder, she replied, \"My swimsuit and a few things.\" She stopped to pull a dog's water dish from the bag and asked, \"I came prepared. Would you get some water for Greta while I change? You said there's a changing room in there?\" she asked as she pointed at the pool house door.\n\nI nodded and went off to fill the water dish; she entered the pool house. Greta was a very docile dog, content to lie around for hours as long as she was within sight of Anna. Give her a bowl of water and one would hardly know she was there.\n\nI decided to bring refreshments for us but I didn't want to take ten minutes making iced tea for her so I opted to bring out two beers. I admit I was anxious to get back outside to see her in a bathing suit.\n\nThere wasn't much to see because she came out wearing a solid-black granny suit. Heavy fabric covered her entire torso, a small neck opening completely covering her cleavage, and a skirt veiled everything below her waist. Other than showing her upper legs with nicely toned thigh muscles, her suit was less alluring than the blouse and leggings she changed out of.\n\nAs she dropped her bag on the ground and stood between our chairs, I offered her the beer I brought for her. She seemed to hesitate. \"Don't tell me you've never drank beer.\"\n\nA wry smile and a 'heh' laugh preceded her reply. \"Not since my college days. I can understand why you might assume we didn't drink at all, but I have had an occasional mild cocktail.\" After I twisted off the cap for her, she took a little sip and sampled it in her mouth as if tasting wine. \"I remember it as being more bitter than this.\" She took two hefty swallows before setting the bottle down next to her chair. \"That's really cold, quite refreshing. I'll have to be careful I don't drink too much.\"\n\n\"Have you ever drank too much?\"\n\n\"Once in our dorm with a few other girls. It was a terrible experience. I was sick for days afterward. It was the last time I drank beer as I remember.\"\n\nWith her past, I thought using alcohol to relax her inhibitions would be difficult and any misstep might make it a closed door. I planned to proceed carefully but she quickly acquired a taste for cold beer. In retrospect, I believe she found that it helped her overcome doubts and she used it to unleash her inner desires more readily.\n\nShe was showing signs of coming out of her puritan shell even before drinking the beer. There was the way she hugged me, allowing my nakedness to touch her. The full body contact she caused would have been remarkable for her even if I had been clothed. Knowing I would be naked made her premeditated move daring.\n\nThen I noticed the way she put her clothes in her bag. Most women I know demurely hide their underwear inside or at least under their outer garments when leaving previously worn clothing visible in any way. I would have expected Anna to close the bag's zipper and put her bag in an inconspicuous place.\n\nInstead, her panties were on top, the open bag between our chairs. All articles were folded, even the panties, so she hadn't carelessly thrown them in as a bundle. No, she was purposely showing me the sexy, hem-less panties she had worn that day. It was a sign of her budding exhibitionism. Despite longing to see her wearing the panties, I passed on a chance to mention them ... at first.\n\nWe only talked a short while, about gardening of all things, before I invited her to swim. She was remarkable in the water. She had mentioned competitive swimming in college. After witnessing this mid-fifties woman swim a few laps, I suspected she was near-Olympian talent in her competitive days.\n\nI'm a good swimmer but I was no match for her. She seemed to glide effortlessly. I endured a demanding workout trying to keep up with her; she never seemed to tire. She eventually admitted weekly visits to the pool at the gym she joined. At least the senior woman who outclassed me wasn't also three decades out of practice.\n\nI asked her to show me her best. She was even faster, a bit splashier too, and she used underwater turns. That's where I got the Olympian idea. How much did the heavy suit material drag on her speed? I imagined her in a competition speedo. The beast in me wondered how fast she could swim naked.\n\nSince it was past noon, I offered her a sandwich. The kind of sandwich was important to her because she avoided processed lunchmeat. She wanted it clear that she wasn't a vegan but leery of the preservatives in most processed foods. I told her I would take care of it.\n\nI served what I planned for my own lunch and it was a big hit with Anna. I made stuffed pita pockets with cucumbers, tomatoes, red onion, and feta. On the side, we had bowls of chilled grapes and second beers to wash lunch down.\n\nWe settled back to rest after eating. Anna pulled out an aerosol can of sunscreen and began to spray herself. I warned her, \"Sprays can be wasteful in stiff winds, especially on the beaches. You should use a lotion next time. I'll get you some of the stuff I use.\" She appreciated my gesture.\n\nActually, I used the aerosols too, but I had suddenly realized lotions require hand application. Hands can't reach everywhere on a person's own body. I saw a real opportunity for both of us to assist each other. Yes, I can be that devious. I work other angles, too.\n\nShe asked me what I thought of her swimsuit; she wasn't begging for a compliment. Her voice inflections suggested she didn't like it herself and wanted encouragement to wear something more revealing. I told her it was too matronly. With her body and physical condition, why not show it off in a two-piece. We discussed a few other aspects of swimming suits. I emphasized that if important body parts are covered, it was socially acceptable to accentuate sexuality at the wearer's comfort level.",
        "I spotted her panties in her bag again and recognized a correlation I could draw upon. I looked up from her bag to see her watching me intently. Did she see me look directly at her intimate apparel? Was she fearing or wanting comment from me? I deliberately looked at her bag again and pointedly studied the panties. Her smile encouraged me to speak out.\n\n\"I see you already fancy panties that are more sensual than functional. Attractive swimwear should be no different.\"\n\n\"I can't say I fancy them. Those are the first pair I've ever worn.\"\n\n\"Do you like them?\"\n\n\"The silk is so lightweight and loose fitting, it felt like I wasn't wearing panties at all.\"\n\n\"How flattering that you wanted to wear them around me.\"\n\nBlushing noticeably, she began to stammer, \"I ... I didn't ...\"\n\nI didn't give her a chance to deny what I believed to be her intent. \"I think you did.\" I reached over and pulled the panties out of her bag. More than just holding them up, my fingertips rubbed the material to feel its silkiness. Her jaw dropped in apparent surprise when she saw my fingers touching the inside surface of the crotch area.\n\nI told her, \"These are sexy. You should wear this type all the time to enjoy the pantyless sensation. I go commando when I wear clothes because it makes me feel sexy.\" Holding them up by the waist to display their coverage, I added, \"This is the size of bikini panties you should wear.\"\n\nI grabbed her sturdy, padded, full-cup bra out of her bag for comparison too. \"This is overkill. You don't need this much support or coverage. A bikini top should be made of thin material so it allows movement, only large enough to cover your nipples. It should show off your cleavage and lots of skin.\"\n\nAnna didn't seem embarrassed by my recommendations to be more daring. In fact, I believe she reveled in an opportunity to experiment in the seclusion of my yard, knowing any choice would meet with my approval. Although she said she would think about it, I believed she had already made up her mind.\n\nFor the rest of the afternoon, we spent more time in the water than out to escape the heat; little of our emersion involved energetic swimming. Our main activity was standing close together in shoulder-deep water while talking, conversation that was animated and provocative because it was loosed by beer. She asked for a third beer that she kept at the pool's edge for regular sips, and then a fourth.\n\nContrary to her initial standoff shyness, she demonstrated a new willingness to be up close and friendly. Her touchy-feely mannerisms included placing her hand on my arm when she spoke to me and touching her cheek to mine when we hugged which happened more frequently as the day wore on. She giggled about silly things and laughed readily, often hanging on me as she did.\n\nThe beer made her tipsy, unable or unwilling to maintain control of her movements in the water. Because we stood so close, shifting around caused our bodies to repeatedly bump and brush against each other. Our body contact was too pervasive and at times prolonged to be entirely accidental. I know I purposely caused some of the contact and believed she did too. Her reactions suggested she didn't mind when any of it happened; her actions seemed to be intentional explorations beyond former boundaries.\n\nOur body contact started out innocently with accidental hip-to-hip bumps and hand-to-thigh brushes. In unspoken agreement to escalate, we both began making the body bumps purposeful and aimed but her heavy swimsuit material reduced the sensuality of them. As if playing chicken, our hand brushes lingered longer and teased closer to being sexual. Who would openly grope first? She did, with a little help from me.\n\nI commented that she seemed to be \"loosening up\" and I was enjoying being part of it. She hugged me in response, leaning herself against me fully frontal. In the hug, our bodies touched in the same way as our earlier hug, her breasts pressing against my chest and her hips centered on mine, except the heaviness of her swimsuit between us reduced the tactile sense. The head of my cock hung low enough to touch the skin of her thigh but I don't know if she could discern the difference from my leg touching her leg. She didn't act as though she did.\n\nPulling her head back from the hug, she paused to look me in the eyes while she continued to lean on me. Her head leaned forward again to put her cheek against mine and her lips gave me a little peck. She spoke softly, \"Thanks for your encouragement. I'm enjoying this too.\"\n\nAnna slid sideways from the hug, reaching for her beer that was behind me. Her trailing hand dropped from my shoulder, slid down my side and across my groin where her fingertips made fleeting contact while passing over my cock. Natural laws of gravity and physics can explain everything about the arcing path her hand took except the way her hand reached my thigh and suddenly stopped on top of it. Her arm unnaturally extended out a foot from her side to keep her hand in position as she reached for her beer.\n\nI turned around to reach for my own beer. My thigh effectively pulled away from her hand, but immediately my other thigh bumped into her hand, which was still reaching outward. Her hand was so close to touching my cock that I contemplated shifting sideways slightly to cause contact.\n\nAfter taking another swallow of beer, Anna turned her head to look at my face before dropping her gaze into the water in front of me. She could clearly see her hand on my thigh and right next to my cock. That's when she apparently made a decision to act. Her hand slid over and her wrist rotated, placing her palm on top of my cock. Her thumb and outer fingers moved over the sides into a relaxed grip of my shaft. Her longest fingers teased the ridge of my glans.\n\nHer touch was exquisite. I wanted to ask her to slide her hand up and down, deliberately stroking me, but I chose to wait patiently for her developing interests to progress at a pace comfortable to her conscience. After about five seconds of holding my cock, she giggled, gave my cock a gentle squeeze, and then let go before turning to swim away.\n\nShe had crossed into new sexual territory: touching. I believed it was just the beginning of her conversion into an impulsive, sexually liberated woman and that I would benefit from being the man who helped her realize true freedom. The longer it took, the sweeter the result.\n\nThe rest of the afternoon featured boisterous water play and cuddly moments. Much of the play was combative; splashing, chasing, and wrassling, giving us excuses for grabbing that included more groping. She did most of the groping, but that was what I wanted anyway, for her to take advantage of my nakedness. My ability to grope her was obstructed by the thickness her swimsuit. Ironically, I had one long grope of her that she created and controlled.\n\nI went to grab her from the side, my arms moving to encircle her. To escape me, she twisted her body sharply like a fish trying to wriggle away. I tried to take hold of her shoulder but my hand landed squarely on her breast. Instead of pushing my hand off, one of her hands gripped my wrist and held my hand in place. Dipping her shoulder under my arm, she turned her back to me, pulling my arm over her shoulder.\n\nBending at her waist and preventing my arm from slipping off, her ass pushing against my cock, she hoisted me onto her back until my feet came off the pool's bottom. My other hand, which had been on her stomach, began to move away as my body started to slip off sideways. She grabbed that hand as well, presumably to keep me in place, but then surprisingly guided my hand down onto her pubic mound.\n\nShe started walking through the water, carrying me on her back. I did more than hang on; I squeezed her tit and pressed on her crotch, encouraged by her hands on top of mine. I could not feel any breast softness or the presence of her nipple through her swimsuit's significant padding. Despite the material's thickness, my other hand could feel the bump of her clit, and her flexing glutes effectively massaged my cock. She took about ten steps before diving under water where she threw my hands off and swam away.\n\nIn between periods of water play were moments of quiet embracing when we stopped to catch our breath. I was playing it slow, letting her lead the way because she had a lot to overcome; she didn't need pressure from me. When we hugged, her body language confirmed she enjoyed my body in intimate contact with hers. By kissing my cheek, she signaled a growing desire to advance our acquaintance in romantic ways.\n\nWhen I finally acknowledged her signals by kissing her cheek in return, she reacted as though she was waiting for such an encouraging sign. Continuing to lean on me, her head pulled back so she could look deep into my eyes. Speaking softly, she sighed, \"Oh, Brett.\" Then throwing her arms around my neck, she kissed me firmly on the mouth. Even without tongue action, her soft, moist lips provided passionate sensations.\n\nThereafter, all our hugs included kissing and soon involved wonderful tongue action. She was a passionate kisser despite her repressed past. At the end of the day, after sharing a lengthy and heated kiss, she told me, \"Thanks for inviting me for a swim. I can't wait to come back for more good times with you like I had today.\"\n\nI liked how our relationship was developing. There was no doubt in my mind that she would reveal more of her body and eventually have sex with me. She was a generation older and a novice with men, but I believed she would be fantastic partner when turned loose. And, oh, that body; it was the objective I dreamed about at night.\n\n* * * * *\n\nWhen she came over three days later, it was already oppressively hot at ten in the morning. She wore cute cotton shorts and no blouse over her camisole to combat the heat. Her boobs swayed more than normal as she walked. When she got close, I noticed from the straps that she wore a lacey bra instead of her usually sturdy support.\n\nIn the days since her last visit, I had researched sunscreens because research is something I rely on to make informed decisions and I wanted to provide a good choice in case she checked up on me. After reading documented research by a Florida activist group that listed the pros and cons of sunscreen brands, I learned that major brands were the poorest choices for safety and effectiveness. Shopping for sunscreen based on the group's listings, I found Aveeno available at a local store where I bought two bottles.\n\nIt became evident that Anna took a similar step to advance the intimacy of our visits as well. When she walked out of my pool house, the sight of her wearing a hot-pink bikini surprised me. Just as I anticipated, the bikini accentuated her killer body in ways that almost gave me an instant erection. Although she could have been more daring by going with more chest exposure and thinner material, her choice of a bikini was a big improvement over the granny suit that hid everything.\n\nCompared to the granny suit, the bikini's lack of cup padding showed that her breasts were smaller than I had previous assumed; I realized they were no more than B-cups. Her breasts appeared to hang low naturally, not from sagging, and they had a cone shape that still jutted out over her flat stomach. Fully covered by fabric that provided moderate support, her tittie flesh wiggled only slightly as she walked.\n\nHer toned abdomen and narrow waist that I found alluring under her clothing were even more so in the flesh. I noticed her hipbones for the first time, particularly how they stood out and enhanced the flatness of her pubic region.\n\nThe prominence of her mons pubis created a well-defined mound in the bikini panty fabric. As she walked toward me, the fabric formed creases on alternate sides of the mound, drawing attention to her sex. Her wide thigh gap allowed me to see how her striding legs pulled the supple fabric over her vulva, highlighting the valley between labial hills.\n\nShe knew that I was studying her intently as she approached, my gaze probably contributing to her sense of exposure enough for her nipples to create little bumps in her top. She made a frowny face before she spoke. \"You wanted me to wear a bikini. I thought I'd get a bigger reaction.\"\n\nHer gaze directed at my groin caused me to look down and confirm the reason for her remark. My cock was hanging slack, indifferent to the beauty on display. I made jokes about the situation. \"My cock sometimes shows bad manners. He's pouting because you're not wearing an even smaller bikini, I guess.\" A funny expression crossed her face at those words, one I couldn't decipher.\n\nWanting to support her choice, I continued. \"I'm satisfied. Your body was made to wear a bikini. I don't see many women half your age look so sexy. I'm not one who's afraid to show appreciation for any change you make.\"\n\n\"No, you're certainly not the type who feels the need to hide anything,\" she snarked. \"As for your cock, maybe I'll get him interested later. Why don't you tell me what you were looking at a moment ago?\"\n\nI liked that her budding exhibitionism was seeking acknowledgment. I described in detail what I noticed about her bikini, especially how it enhanced her body as she moved. She wiggled with excitement as I spoke about her sexuality. With a big smile, she closed in to hug me when I finished. \"You make me feel like a special woman, Brett,\" she hushed in my ear. Her body felt exquisite touching me with softer material covering her feminine charms.\n\nThe kiss that became part of her greeting hug was deeply passionate, lasting over two minutes. Her hands clutched my shoulders, my back, and even my ass to pull my body against her. Her body movements were a clear attempt at seduction. Making sounds of pleasure, she swayed slightly, rubbing her sex on my stiffening cock.\n\nI copied her attack, placing a hand on her ass and squeezing her breast with the other. Turning my hips briefly, I let my erection spring up, and then turned back to trap my cock against her bare stomach. Our kiss concluded only after she pressed back for a dozen seconds.\n\nShe pulled back to admire my condition. With a coy smile, she joked, \"I knew my suit would get a rise out of your cock eventually.\"\n\n\"It was your kiss that woke him up,\" I countered.\n\n\"Your kiss woke up my vagina, too,\" she admitted. Becoming sexually aroused wasn't as remarkable as her telling me she was. I thought with her attitudes changing so fast, our relationship could turn sexual any moment. I wood [sic] be ready.\n\nWhen she prepared to spray on her sunscreen, I stopped her and presented her the lotion type I bought for her. She made a move to apply the lotion to herself when I suggested letting me apply it. She hesitated before answering so I assured her she could return the favor by doing me. I think she made up her mind after looking at my cock because she handed me the lotion when she did.\n\nI instructed her to lie on her stomach on the lounge chair and then I sat next to her legs. Starting with her feet, I worked up to her knee, first on one side then the other. I progressed slowly, methodically massaging the lotion over every inch of skin, intentionally making the process as sensuous as I could. The little mewing sounds she made indicated she was enjoying my touch.\n\nAs I worked the back of her thighs, I couldn't help staring at the way her suit covered her sex. With the wide gap between her legs, I had an unobstructed view and could see plenty of detail. She took a sharp breath when my fingers moved along the edge of her suit but she didn't object even though the side of my hand brushed against her labia underneath.\n\nWhen I did her hip and the portion of her buttocks not covered by her suit, I pushed my fingertips under the fabric's edge. After reacting with a little 'oh,' she asked in a humorous way if she needed sunscreen where the sun doesn't shine. I explained that I didn't want her to receive a line of sunburn if the material moved during the day's activities. I teased her with uncertainty about whether my fingers would remain under the fabric all the way back to her sex but I always stopped short. I touched under the waistband of her bikini panties in the same way to appear honest in my purpose.\n\nI asked for permission to unhook her top to make the same thorough coverage easier to apply. Instead, she did it for me, deftly sliding the straps off her shoulders, too. I caught a glimpse of her hanging breast before she settled down.\n\nWorking deliberately again, I started with her arms, then her neck and shoulders, before moving onto her back. The last place I applied lotion was her sides, starting at her waist and then moving up until I boldly covered the side of her breasts. She did not complain.\n\nWhen I said it was time to turn over, I expected her to secure her bikini top first. To my delight, she used an arm to hold it against her chest as she turned over, allowing it lie loosely with areas of tittie flesh exposed. Even with the implied invitation to get familiar with her breasts, I demonstrated patience by starting on her legs. I knew anticipation would increase the intensity of her reactions.\n\nApparently, she was interested in watching me because she raised the back of her chair slightly. When I reached the top of her legs, I avoided contacting her swimsuit fabric entirely, even skipping her waistline. Probably wondering how boldly I would touch her, maybe even hoping I would, she looked surprised when I didn't. I wasn't afraid to get near her vulva; I actually had a plan to come back for a finale after arousing her with boob work.\n\nTaking up a standing position above one shoulder, I had covered most of her arms from the backside so almost immediately I was working on her shoulders. Making sweeping moves downward, I worked over the top of her breast flesh, pushing her top down until the upper arc of her areolae were exposed. Watching me closely, she noticed the exposure; we made eye contact but I continued applying lotion.\n\nMoving around her armpits, I rubbed down over the sides of both breasts and around their curves to the pliable underside. My wrists, being under her loosely draped suit top, carried her top below her stiff nipples in the process.\n\n\"Aren't you being too liberal thinking where my chest risks getting sunburned?\"\n\n\"Because your suit is untied, I can't be positive where it covers so I prefer to be thorough.\"\n\nShe responded with a sarcastic, \"Uh-huh.\"\n\n\"I might as well do your entire breasts in case you decide to go topless.\"\n\n\"I don't think so.\" There was ambiguity in her answer. Did not refer to going topless or doing her entire breast? Did think not allow for maybe yes?\n\nRubbing another dollop of lotion on my hands, I boldly pushed her top off and massaged each breast in turn with two hands. My application method included plucking and twisting her nipples. The way she never flinched, I believe she expected me to do it but she didn't intend to be topless right away. When I left her uncovered as I moved down to her stomach, she draped her top back over her breasts.\n\nSliding my fingers under her suit's waistband, I combed through the upper extent of her pubic hairs. Edging under her suit from the leg openings, I again reached under the fabric until I felt hair. It was hard to control myself with her sex only an inch from my fingertips, but while I didn't want to reach under far enough to touch her clit, I purposely pushed her labia against it from the side.\n\nI turned to see how she was reacting. Her eyes were closed and she was biting her bottom lip back. Noticing her hands holding her top in place, I realized her fingers were pinching her nipples through the fabric. While it appeared I could touch her anywhere I wanted, I decided to deny her further arousal for the moment, hoping to make her want more the next time.",
        "I stopped abruptly with my hand outside her suit, resting on top of her mound. Her eyes opened to see me watching her hand activity. Without a trace of embarrassment, she remarked, \"That was quite the experience, Brett. I figured you would make it sensuous and you didn't disappoint me.\"\n\nGrabbing her top with one hand, she stood up before she casually put it back on, deliberately giving me another look at her lovely breasts. \"Let me do you now,\" she said, taking the lotion from my hand.\n\nI stretched out on my stomach to start, carefully positioning my cock between my legs. She worked as slowly as I did, combining sweeping palms and gently pressing fingers. Controlling her movements carefully, she only bumped into my cock once while working my inner thighs. She skipped doing my ass, moving to my arms and back next.\n\nAfter working her way back down, she spent extra time and energy on my butt. In addition to spreading the lotion, she took the opportunity to squeeze my cheeks vigorously. She boldly slid her fingers down my crack and over my anus, stopping only after brushing slowly over my nuts.\n\nAfter I turned over, she started again with my legs. When she reached my upper thighs, she moved my cock out of the way by placing it on my stomach. In the same manner as my backside, she saved doing my groin for last.\n\nShe had been giving a running commentary about my muscles, eventually asking about the exercising I do to maintain my manly physique. She seemed to admire my pectorals in particular and spent time playing with my nipples.\n\nHaving only my groin left to do, she stopped. \"I suppose you want me to put lotion on your cock too.\"\n\n\"Everywhere the sun shines,\" was my response.\n\nWith a smile, she grabbed my cock and held it off my stomach so her other hand could spread lotion on my skin where it had been lying. She gently put my cock back down and gave it a little pat when she finished.\n\nI imagined she was enjoying her exploration of male anatomy she had never seen before just because of the way she approached the application task. She told me to spread my legs so she would have more room. I dutifully complied, unconcerned about what body part she needed room to reach. Her hands were all over my balls, also lavishly covering my perineum and sneaking a few teases down to my anus. Did she have a curiosity about anal sex? I decided to test her receptivity if I ever had an opportunity.\n\nShe put a fresh dab of lotion on her hands and then wrapped them around my cock. The look of intense interest on her face as she slid her hands up and down was enough to stir my blood. She had perfect tenderness in the grip she used to spread lotion up and down my cock with the stroking motion. Holding my shiny cock vertical to admire her work, she seemed pleased with herself for causing it to swell to a full erection in her hands.\n\n\"Having never done this before, I thought I might need to ask if you liked it, but I can see you did.\" Using her thumb and index finger, she pinched my glans before standing up. \"Now Brett, honey, can you get me a cold beer? All this work has made me thirsty.\"\n\nWe sat down to chat and swig hard-earned beers but the intense sun quickly made us uncomfortably warm. Moving into the pool, we brought our koozie-covered beers to the pool edge. For two hours, we swam a little but mostly stayed immersed in the cool water.\n\nDespite consuming two beers each, our water activity wasn't as frisky as the last time. She did give my cock a few playful tugs and let me grope her a little but I sensed other attempts were discouraged. We only hugged twice and kissed once. Much of our mundane conversation involved financial investments.\n\nI sensed she was holding back, determined to keep our sexual contact from escalating further. Her change since the sunscreen application fun we had was puzzling. I wondered if I had done something to cause her mood change, or was she unhappy about what she did or allowed me to do. At least she wasn't angry and the little bit of play we did enjoy suggested all was not lost. I figured the only way to get past her funk was to be friendly and non-aggressive.\n\nWhen we got out of the pool to have lunch, I opened my patio table umbrella so we could eat in its shade. She stopped at the lounge chairs to pick up her tote bag. I wondered if she needed more sunscreen but I was leery of bringing up the possibly touchy subject. Because she was smiling and she had just cracked a little joke, I gambled but asked her in a non-suggestive manner.\n\nI was relieved when she sweetly told me, \"I have a beach cover-up to protect me for now. Let's wait 'til after lunch for more sunscreen.\" I watched her slip a simple, dress-like cover-up over her head. The white material was somewhat sheer, allowing the pink color of her bikini to show through.\n\nAfter leaving her sitting at the patio table, I busied myself in my kitchen making a grilled chicken salad and cutting up a honeydew melon. From my window, I saw her walk to the pool house, probably to use the bathroom. She was just sitting down again when I came out with our food.\n\nAfter being in my air-conditioned house, the outdoor heat and humidity felt like walking into a wall. I realized the lack of air-conditioning in the pool house made the changing room and toilet too stifling to use on hot days. While we ate, I talked about the heat and the conditions in the pool house. In conclusion, I suggested she use my house.\n\nFollowing a little laugh, she remarked, \"I thought you were going to suggest changing here on the patio.\"\n\nI was happy to hear her use sexual humor and laughed at her remark. \"Well, you certainly could do that too if you wanted to, but the offer is genuine.\" We also talked about the possibility of her using my pool even on days when I wasn't home. I told her I would unlock the latch on my fence gate so she could open it from the outside.\n\nWhile we talked and ate, I sensed something different about her appearance but I didn't identify what it was while my thoughts were busy following our conversations. After we finished lunch, Anna stood up and announced it was time to put on more sunscreen. While looking at her standing expectantly in front of me, I suddenly realized I couldn't see her pink bikini through her cover-up. Instead of broad swatches of pink, I could see smaller patches of yellow ... much smaller.\n\n\"Did you change into a different bikini?\"\n\n\"I'm surprised it took you so long to notice. I thought you notice everything about a woman's appearance.\" With a dramatic flair, she removed her cover-up. \"Well, how do you like me now?\"\n\nMy jaw dropped in stunned silence. She was wearing a miniscule string bikini. Small triangles of fabric hardly covered more than her nipples, leaving most of her whitish breasts exposed. An equally small strip, hanging from strings sloping down from her waist, barely covered her pubic mound. She turned around to show the backside was a narrow band that only covered her crack, leaving most of her luscious cheeks exposed.\n\nI finally found my voice. \"You look amazing in that. I'm surprised you found the nerve to wear it.\"\n\n\"I have no doubt you would have given me enough encouragement but you made me feel so sexy in the pink one, I was afraid you would talk me into going entirely naked before I could model this one for you. It would have been anti-climactic.\"\n\nI was glad to hear a reason for her morning behavior. I felt confident I could be aggressive again. \"I see lots of white skin. It looks like you'll need sunscreen on greater areas than this morning.\"\n\n\"We better get started then.\"\n\nAfter lying on her stomach on the lounge chair, she immediately untied her top without me asking. Other than the strip of fabric covering her ass crack, the woman I had been lusting over for the past few weeks was naked, waiting for my touch. I could hardly keep myself from rushing as I followed the deliberate routine I used just hours earlier.\n\nThe string bikini's fabric was unlined and as thin as a handkerchief. My hand easily slid underneath the strip, allowing me to put lotion on every inch of her ass. When my fingers followed her crack, they stopped to press on her anus. As I anticipated, her reaction was a favorable wiggle rather than clenching to deny access.\n\nWhen I asked her to flip over, she didn't bother to move her top with her; she simply rolled over topless. Her stiff nipples seemed to be begging for attention, which tempted me to grab her titties right away, but I stayed with my slow and steady routine.\n\nWhen I finally worked on her chest, her enjoyment and my fascination almost carried me away. For a mid-fifties woman, she had amazing shape and firmness to her breasts. I spent an inordinate amount of time rubbing, squeezing, and pinching. They had such a nice feel to them, I didn't want to stop. She enjoyed the way I manhandled her; I could tell by the way she stuck her chest out to encourage me, and the way her breathing became rapid panting. \n\nEventually, I left her happy mountains, headed for her valley of love. The first time my hand went inside her bikini panty, I had a palmful of her pubic hair. I pulled my hands back up around her navel and while I worked there, her hands slipped down to her hips and untied the suit's strings.\n\nI understood what she wanted me to do. I peeled her suit down and let it fall onto the chair between her legs. \"Expecting to go pantyless?\"\n\nHer voice was suddenly full of husky desire. \"You never know. You might as well be thorough. Cover everything.\"\n\nI had a clear edict from this naked woman to use my hands to complete her journey over to the wild side. I could reasonably expect success if I chose to seduce her right then. While seduction was my ultimate goal, our relationship had been such a wonderful journey already that I wanted to enjoy every little step.\n\nThe next step before me was applying sunscreen lotion to her exposed vulva. As my fingers started combing through her pubic hairs, I chose to make it titillating for her by describing her sex. My words were manna to her growing exhibitionism.\n\n\"You are a natural blonde, I see. Your pubes are a special color, like honey, a shade I haven't seen before. They're not a tangled mass either, lying straight in even coverage like you combed them. As if your youthful looking body isn't desirable enough, your pussy will draw a lot of attention when I take you to a nude beach.\"\n\nJudging from her sharp breath intake, I think I surprised her by suggesting a public setting for her nudism. She had been moving slowly toward this intimate display of herself, perhaps being willing only because she felt comfortable in the privacy of my yard or was seduced by my gentle encouragement.\n\nI pinched several golden pubes between my thumb and index finder, and gently pulled on them. \"I like the feel of them, too, so soft and fine. I'll tell you this; I recommend shaving or waxing to most people but in your case, with such a beautiful looking pussy, I say, leave it natural.\"\n\nI had pushed my hands along her groin creases a couple of times before asking her to spread her legs. I didn't really need more room; I just wanted her to feel vulnerable. After she complied without hesitation, I hooked a hand behind her closest knee and pulled her leg wider. My other hand rubbed on her tender inner thigh until reaching her labia. From there, my fingertips concentrated on applying lotion to her vulva, simultaneously probing and rubbing the things I described to her.\n\n\"Your legs have nice muscle tone, even on your inner thigh. Your labia majora structure, this part here, is wide and well padded. Labia are also part of the mons pubis, so yours contribute to both your prominent mound and the wide gap between your legs. There's a natural gap between your labia too, but yours is exceptionally well defined. It must make it hard for you to avoid showing a cameltoe.\"\n\nShe nodded and admitted, \"It sure does.\"\n\n\"If you realized how sexy that is to some men, me especially, you might want to embrace it as a natural ability to turn men on. Your wide slit also lets these thin folds of your inner labia protrude. They create a visible little ridge that I've noticed even through your bikini and clothing.\"\n\nI essentially massaged her labia under the guise of applying lotion, eventually pushing both sides inward to squeeze her clit, then seesawing my hands to twist it. I could feel the bump swelling.\n\n\"Your wide slit makes your clit stand out but also means it needs plenty of protection from the sun. A clitoris is like a tiny penis. It is extremely sensitive because it has more nerve endings that the head of my cock. That makes it a bad place to get sunburned.\"\n\nHaving explained the necessity of including her clit, I pulled her clitoral hood up and rubbed it vigorously. She reacted as one might expect. Her hips began to wiggle; her eyes closed; and whimpers of pleasure rose from her open mouth.\n\n\"Your clit is having an erection. They swell to hardness from an increase of blood just like a penis. Yours is quite pronounced, looking like a little white grape nestled in your labia.\"\n\nI slid a finger down her slit and curled it into her vagina, purposely pushing the heel of my palm firmly on her clit at the same time. She gasped as my finger entered her.\n\n\"You're so wet. I'm afraid I've made you sexually excited. I better stop.\" I pulled my hand away.\n\n\"No, you don't have to stop, Brett. I like what you've been doing.\" She grabbed my hand and tried to push my fingers back into her but I resisted.\n\n\"I'm sorry, Anna, I'm not going to do that yet. Maybe next time.\"\n\nHer expression showed her disappointment but only briefly. She recognized, after all, that I had promised further sexual play later. I had succeeded in overcoming her puritan views and made her willing to have sex with me but I was using an edging technique to build our growing excitement to explosive levels.\n\nWhen I helped her stand up, she left both pieces of her bikini on the chair. I wondered if she was going to remain naked now so I asked her.\n\n\"No, not yet. This tiny bikini was expensive and for what I paid for it, I'm going to wear it at least once.\" Her words included a promise for a different outcome to a later situation as well.\n\nShe took her turn applying more sunscreen lotion to my body. Despite taking less time than she had earlier in the morning, she was equally thorough in coverage. I attribute her efficiency to having less interest in exploring my anatomy. Even covering my cock didn't last long enough to give me an erection.\n\nWhen we entered the pool, she began swimming laps, presumably to work off some nervous energy. She stood up several times to adjust her bikini top; pushed by the water, her top kept slipping off to the side. I could see her uncovered nipples at times and she usually reached under water with both hands to yank her panties upward.\n\nWhen we stopped to sip our beers and chat, I looked at her breasts near the water surface. \"Your bikini material is so thin, it's translucent when wet. I can clearly see your nipples and even the little bumps on your areolae.\"\n\nShe tugged at her top but recognized the futility of her action. \"Gee, I wonder what the panty shows.\"\n\nShe had me assess the answer by floating on her back while pushing her mound out of the water. \"Well, the color of your pussy isn't dark enough to show through, but the fabric is so supple, I can tell where every hair lies. You also have a massive cameltoe going on. There isn't much detail about your vulva that is hidden.\"\n\n\"I guess I can't wear this in public,\" she concluded.\n\n\"Not unless it's your intention to give somebody a free show.\"\n\nWe spent about an hour in cuddly conversation. The looseness of her bikini made it easy to grope her. She allowed my finger to massage her clit and even slip into her vagina. In turn, she played with my cock and balls quite often, causing several erections. \n\nWhen I was ready to get us more beers, she asked to use my inside bathroom so I showed her the way. I was back in the water by the time she came back out. Walking toward me, barely covered by tiny pieces of cloth, she looked younger than ever. Instead of easing down the steps back into the water, she walked to the pool edge at the deep end and dove in.\n\nWhen she surfaced next to me, her top was severely askew. Instead of straightening it, she reached behind her back and untied it. Pulling it off, she tossed it on the pool deck. \"Damn thing won't stay in place, anyway,\" she complained.\n\n\"Don't be too upset. I'm happy you chose to take it off. I think you might as well lose the panties, too.\"\n\n\"I already have.\"\n\n\"Already have what?\"\n\n\"Lost my panties ... over there somewhere ... when I dove in.\"\n\nI put my hand on her pussy to confirm, and then I started laughing immediately joined by her. I knew I could bed her any time now but I wanted her to get used to being naked first so she would enjoy all the sensations without equating the situation with being seduced.\n\n\"I thought I would never have the nerve to be naked in public yet here I am. It sure didn't take you long to get me out of my clothes, you devil, you.\"\n\n\"No, I purposely took my time. If I was pushy, you would have stopped coming around. I never actually asked you to get naked. I just described why I do it, told you how good you would look, and let you decide for yourself.\n\n\"Besides, I hate to quibble with you but you are not naked in public. Not yet, anyway. You are covered by water, in a private yard, and there aren't any strangers here to see you. You've only learned to trust me enough to get over your severe shyness. Being naked in public requires another whole level of bravado. Let me try to describe to you what naked in public feels like.\"\n\nTaking her by the hand, we exited the pool and I led her to a small spot of sandy soil with no vegetation. I directed her to stand in the sand and close her eyes. Standing behind her without touching her, I spoke softly in her ear.\n\n\"Imagine you are at a beach. Feel the sand between your toes. Feel the sun on your skin.\"\n\nShe interrupted me, \"I can't, it's cloudy.\" She had allowed the reality of approaching rain showers interfere with her imagination.\n\n\"Work with me here. You'll have to use your imagination for most of this. You're at a nude beach. Feel the warmth of the sun on your bare breasts. Feel the wind tickle your pussy hairs. You are naked ... but so are most of the people around you.\" She reacted by covering her breasts and pussy with her hands. I gently pulled them back to her sides.\n\n\"The naked people are all different colors, ages, and sizes; white, black, and brown; fat and skinny; old and young. Most are nothing to look at. You can see men with shriveled up peckers under big beer guts, and women with big, saggy breasts hanging almost to their waists. In comparison, you are a beautiful goddess, the sexiest woman on the beach.\n\n\"Most nudists won't pay any attention to you. They are regular people, at the beach to enjoy the water and sun. They just don't care to wear clothes.\n\n\"There are always leering men around. They will make sure you can see their dicks. Some will touch themselves to get hard. They hope you spread your towel near them so they get long looks at your perfect body. There are crabby women who'll give you dirty looks. They're afraid their men will pop boners when they see you. They'd rather you move far away.\n\n\"It will take many visits to nude beaches to feel comfortable in nothing but your own skin. You will learn that you are in control; the creepy men can be made to leave with a simple request. You may start to enjoy the attention and excitement. You may even make new friends at the beach.\"\n\nI turned her around. \"You can open your eyes now. How do you feel?\"\n\n\"I'm trembling with excitement. I think I'd like to go to a nude beach sometime but I would need you with me to feel safe. Will you take me?\"",
        "\"Oh, Anna, I would love to.\"\n\nHer visit ended a short time later, curtailed when the rain arrived. The rain began to fall before we got out of the water. Anna retrieved her bikini from the bottom of the pool but exited the water naked and dressed on the patio. She put on her pink bikini and the beach cover up for the walk home, her clothes safely dry in her tote bag.\n\nThe weather wasn't particularly threatening, just a warm, steady shower that I expected to last less than an hour. I invited Anna to wait out the rain inside my house but she declined, saying she didn't want to bring her wet dog into my clean house.\n\nShe laughed when I offered an umbrella. \"For what? To protect my wet bikini?\"\n\n\"Your cover-up is soaked; it's transparent. People will think you're wearing pink underwear.\"\n\n\"Ooh, that's right. Maybe I should take off the bikini.\" She gave me a sly wink, called her dog, and they left.\n\nHer flippant remark gave me a stiffy when I imagined her naked body walking down the street. Why did the thought of her exhibitionism make me so horny? I waited until she was out of sight and then stroked out a massive load of cum onto the patio.\n\n* * * * *\n\nI knew Anna would visit me Friday morning because I met her at the grocery store the day before. I want to mention some oddities about that store encounter. First, her greeting set the tone.\n\n\"Oh, hi, Brett! I almost didn't recognize you with clothes on.\"\n\nShe said that within earshot of a woman shopper who must have caught the meaning because the woman looked at my crotch as she passed me. Anna was bubbly with excitement. I only noticed the twinkle in her eyes when I wasn't watching out for other shoppers that might get an earful.\n\nShe invited herself over to swim the next day after confirming it would be convenient for me. She even set her arrival time at ten o'clock. Then she discussed buying a case of beer (her turn, she insisted) and we agreed to meet in the parking lot so I could take the beer home to put in my refrigerator.\n\nWe went through separate checkouts and I was waiting at my car when she walked out. That's when I really noticed her. I admit to being an avid girl watcher. As many as I have watched and judged, I would put Anna at the top of the grade especially after I saw her for the first time in a public setting.\n\nShe was wearing a rather short, frilly sundress in a rainbow of pastel colors with a wide belt that accentuated her trim waist. I couldn't see any underwear outline or patch of color through the dress. The way her breasts jiggled and her nipples made bumps, I'm sure she was braless. I could only guess about her panties. Stiff breezes threatened to lift her dress hem but never succeeded.\n\n\"Why Brett, darling, your eyes practically undressed me just now. Why? You know what my pussy looks like ... or did you forget?\"\n\n\"I'll never forget that, but what's puzzling me is whether you're wearing panties right now.\"\n\n\"I guess I'll have to keep you guessing about that. See you tomorrow, darling.\"\n\nAfter I stowed her beer in my trunk, I stopped to watch her sashay across the parking aisle. There was a man putting groceries in his car who also stopped to watch her walk toward him. She had a bounce to her step; I think she was doing it to make her titties jiggle for him. She certainly had developed some attention drawing habits.\n\nShe gave him a cheery greeting then stopped when he spoke to her. He said something that made her put her hand on his forearm and laugh. What a flirtatious woman she had become!\n\nWhen I got in my car, I saw she had stopped at her car. I adjusted my mirror to watch her loading her groceries. She bent over for several seconds, moving things around in her trunk. The back of her dress had ridden up, exposing all of her shapely legs. I was praying for a strong breeze when providence smiled upon me. I saw her bare cheeks and the bright white strip of a G-string or T-back. Even from thirty feet, I could see her sex making the material bulge.\n\nWhen I turned to start my car, I caught sight of another man peering in Anna's direction. After backing out, I pulled up behind Anna's car just as she returned from putting her buggy in the corral. She leaned her head and shoulders through my passenger window to talk to me.\n\n\"You should be careful what you wear on windy days.\"\n\n\"Did you get your answer, Brett?\"\n\nI nodded and added, \"So did two other guys. You did that on purpose, didn't you? Make that three guys. There's a guy in a pickup truck behind you craning his neck.\"\n\n\"Let him look. You gave me the confidence to flaunt what I have. I'm suddenly aware of men watching me and many of them speak to me. Their attention excites me.\"\n\n\"What did that guy say to you that made you laugh?\"\n\n\"He asked if I was a movie star because he thought he recognized me from a film.\"\n\n\"Hollywood or porn?\"\n\nShe laughed. \"Who'd want to watch me having sex?\"\n\n\"Everyone.\"\n\n\"Well, if I ever make a porn film, I know whose cock I'd like to have fucking me.\"\n\nHer uncharacteristic remark left me speechless as she walked to her car.\n\nI was out early the next morning, anxiously waiting for her. While staring blankly at clouds overhead, I was thinking about how Anna had changed and what those changes meant for our future interactions. Would my cock be fucking her soon? I figured today would be an important day.\n\nI was so absorbed in my thoughts that I didn't know Anna had let herself through my gate until Greta trotted up to greet me. I sat up, petting her dog as I watched Anna striding toward me in her beach cover-up. I didn't see yellow or pink through her cover-up so I figured she didn't have her bikini on yet.\n\nThe unrestrained motion of her nipples poking against her cover-up and the dark circles of her areolae I could see through the thin material told me she was braless. Knowing her past, going without a bra was something she would have attempted only recently. Since she was braless when I encountered her for the first time in public the day before, I surmised she felt comfortable enough to make it a common practice, not just in my presence.\n\nI couldn't see any color around her sex either, not even deeper whiteness. Knowing the color of her pussy is close to her skin tone, I believed there was insufficient contrast to see even through the thinness of her cover-up. Such evidence made me wonder if she wore any underwear at all. Such daring aroused me.\n\nI stood up so we could hug. She practically attacked me, her body contacting mine so forcefully she almost knocked me off my feet. Putting her arms over my shoulders and around my neck, she pressed her body against me as we began to kiss. Her energetic tongue was saying much more than hello, suggesting she had deep passion she wanted to share.\n\nMy hand cupped a breast and tweaked her nipple until she mewed with pleasure. I let go of her breast so I could bring both hands up under her cover-up, filling them with her naked buttocks, discovering in the process that she was indeed commando. We were kissing like lovers now.\n\nShe began to grind her sex against me. When I pulled her cover-up hem to her waist in back, she leaned her hips away from me to allow the front to rise above her pussy as well. When she settled back, I could feel her pubes rubbing on my cock as she wiggled her hips against me.\n\nMy cock stiffened, rising up between her legs until it was horizontal, in contact with the entire length of her slit. She squeezed her legs to hold it there. I could tell she was aroused because I felt the warmth and wetness of her inner labia draped over my cock.\n\nI pulled my hips back a few inches then pushed forward. After a pause, I repeated the moves. She added her own surging to the next one. Soon, we were energetically doing a standing cameltoe slide. She tilted her pelvis until I felt the hard tip of her clit pressing on my cock.\n\nHer moans and gasps became so intense that she had to pull her mouth away from our kissing in order to breathe. She put her head in the crook of my neck and increased her stimulation efforts. I figured with a little help, she would have an orgasm. I snuck my hand between us to gather some of her juices on my fingers, and then worked a wetted finger down her butt crack. She drew a hissing breath when I pressed on her anus.\n\n\"Oh, Brett!\" she cried. \"I'm losing control.\"\n\nI pressed harder until my finger popped past her sphincter. She shrieked sharply and her efforts to rub her clit on my cock became violent. Her hands clutched at my back, digging her fingernails into my skin. I felt wetness from her oozing over my cock. I let her ride out her orgasmic shudders until she slumped against me, gasping for breath.\n\nWhen her breathing slowed to normal, she spoke. \"I couldn't help it, Brett. I didn't know I could orgasm from that. What must you think of me for being so wild.\"\n\n\"I think you are a beautiful woman finally discovering how much pleasure your body was meant to give you. That was incredibly erotic for me too. This is just the beginning of an amazing journey for you. I am thrilled to be a part of it. You know, I almost lost control, too. You have the power to do that to me.\"\n\nWhen we pulled apart, my cock was glistening from her juices. She smiled sheepishly when she saw it.\n\n\"Why aren't you wearing underwear today?\" I asked.\n\n\"Because today is July fourteenth.\"\n\n\"I don't get it.\"\n\n\"You don't know? I'd thought you of all people would know that today is National Nude Day. I was looking up information about nude beaches when I discovered it. I thought this would be an appropriate day to begin being a nudist.\"\n\n\"Yeah, you can get naked when you're in my yard, but it was quite daring to walk over here wearing nothing but that revealing cover-up. What if some other neighbor saw you?\"\n\nShe laughed sharply. \"I should tell you about talking to old man Rogers at his mailbox.\"\n\n\"Oh, please do. I can't wait to hear this.\"\n\n\"Mr. Rogers is a widower who lives two houses away from me; the first neighbor I met because he is always out puttering in his yard. I think he's lonely living by himself so he enjoys people stopping to chat, which I often do. He's so friendly and likes to pet Greta.\"\n\nI asked, \"Today was different?\"\n\n\"I'm sure he noticed my nipples. The way he kept staring at them made them tingle.\"\n\n\"That doesn't seem so unusual. You can get that reaction even when you wear a bra.\"\n\n\"But when he bent over to pet Greta, I saw his eyes trying to look up my legs.\"\n\n\"Did he see anything?\"\n\n\"Not at first.\"\n\n\"Oh, this is getting good.\"\n\n\"He started talking about how to check her for fleas and ticks. I think he did it to have more time, hoping to see something. I already know how to check her but I let him think I wanted to learn. I stepped closer and he lowered his head trying to see higher. He was trying so hard. I kinda felt sorry for him.\"\n\nWith a laugh, I asked, \"What did you do?\"\n\n\"He said he found a flea. I squatted down for a closer look. He moved his head to be over Greta right in front of my knees but I kept my legs together.\"\n\n\"What you did is called cock teasing. He must have been frustrated by it.\"\n\n\"Not for long. I shifted a little and let my legs come open.\"\n\n\"You deliberately flashed him! How did he react?\"\n\n\"He stopped talking. I looked at him out of the corner of my eye. His mouth hung open and I thought his eyes would pop out their sockets.\"\n\n\"How did showing him your pussy make you feel?\"\n\n\"Kinda naughty. Very excited. My heart was pounding. I wanted to rush over here to you.\"\n\n\"You're more than just a nudist, woman. You are an exhibitionist like me now.\"\n\nShe pulled her cover-up off. \"Well, we nudists need sunscreen. Let me do you first, this time.\"\n\nShe worked fast, making no effort to be sensual ... until she did my cock. After working me into an erection, she continued stroking me, tightening her grip and increasing the speed of her strokes. One of her hands played with my balls and made repeated forays down to tease my anus.\n\nWhen pre-cum leaked down my glans, she leaned her head close to study it. I began to squirm. Her mouth opened and inched lower, and then her tongue wetted her lips. The possibility of her sucking my cock pushed me to the edge of coming. Suddenly, she licked the dribble off my glans.\n\n\"Damn, I'm losing control,\" I warned.\n\nWith her hand making squishy noises stroking my cock, I raised my hips and groaned. She pushed a finger into my ass and I exploded. With an awed expression, she watched me shoot ropes of cum across my stomach.\n\nShe spoke with a sense of accomplishment. \"Wow! I made you come! I've never seen semen coming out of a cock before.\" She stuck a fingertip in a puddle of jizz and then put it in her mouth. \"Or tasted it.\" I suspected from her smile that soon she would be doing more than tasting it.\n\nAfter cleaning me up with a towel, she seemed eager for similar treatment, expecting me to give her a happy ending too. I would make sure she got one. I worked at a brisk pace, arriving at her sex for the finale in short order.\n\nWhen I asked her to \"open up,\" she put her feet on the ground on either side of her lounge chair, spreading her legs more than ninety degrees. The wide spread of her legs pulled her pussy lips apart, exposing her glistening inner labia and vaginal opening.\n\nI used both hands as she had, but I combined clit and G-spot stimulation for maximum arousal. Knowing her husband had serious foreplay deficiencies, I called upon my vast experiences to stimulate her clit with a variety of touches and pressures to overwhelm her with excitement.\n\nHer vaginal opening was wide like her thigh gap and she was already extremely wet with arousal. I easily pushed three fingers into her. Bending my fingers, I found the spongy pad of her G-spot. By her reaction when I pressed on it, hers was sensitive.\n\nHer arousal was amazingly easy to bring to a full boil. Her earlier orgasm caused simply by a cameltoe slide was not a fluke and not related to long abstinence. She was a passionate woman and would be a hot partner for any man; shame on her husband for being too backward to mine her gold that was right on the surface.\n\nAs she neared her climax, I could feel her vaginal spasms start. She was adding to the pressures of my hands with hers. Her hips bucked vigorously, driving against my hands as well. Acting as though driven by undeniable urges to get another release, she was essentially fucking herself on my hand. I could have been a statue with her providing enough motion to get herself off.\n\nMy vision was drawn to her head twisting from side to side with her eyes half closed, while her cries of delirious excitement filled my ears. I knew she would be well lubricated for my big cock because she produced copious wetness that oozed, not squirted, when she came.\n\nWhen she finished, I made a demonstrative display of sucking her juices from my fingers. \"Lovely. I want more.\" Her big smile said she understood the promise in my simple words.\n\nI left her to enjoy the afterglow while I fetched cold beers for us and water for Greta. By the time I returned, she was standing, ready to enter the pool. Walking naked without shame, she slipped her hand into mine. We didn't swim at all. As soon as we entered the water, she pulled us over to where I had set our beers on the edge. She took two big swallows; sensing she wanted to talk, I took a swallow and waited.\n\n\"I don't know how else to say 'Thank you' except from my heart.\" She put her arms around me and kissed me. There was body contact in the way a naked man and naked woman can't escape but not any sexual intent in her body language. All her emotion came through her lips in the tongue-less kiss.\n\n\"That's for what you have done for me. You've made me see a whole different world than the one I've lived in all my life. I can't believe the changes I've gone through but I don't regret any of them. I will never go back to the way I was. I'm ready to move on, to make more changes, to experience new things. You have what I seek. You've had wealth where I've been poor. I would love to have you show me the way to live like you do.\"\n\n\"Baby, you have stirred new feelings in me. I started out interested in my pleasures, in freeing your chains enough so I could have sex with your body. Somewhere along the way, I became interested in making you a complete woman where your desires create pleasure for you. I hope I'm a capable enough teacher that I earn the right to be your lover. Because of you, I've also learned how narrow-minded I've been about beauty and passion as we age.\"\n\n\"Darling, you've said the things I needed to hear. You gave me the two best orgasms of my life today and we haven't had sex yet. I want you to be the lover who finishes the beginning of my new life. I have deep feelings for you but don't worry that I will ever use the word love when talking about us. I don't think I will ever look for another husband so our age difference will never be an issue. Neither do I care to be or to have a live-in companion. But that doesn't mean our relationship can't last a lifetime.\"\n\nHaving settled her uncertainties, and a few of mine for that matter, we drank our beers and talked about how our lives entwined. At the same time, our bodies where simmering in slow-cooking passion. We both enjoyed keeping an arm around the other, ensuring constant touching. Our lips met often, beginning in friendly acknowledgements and becoming the source of building passion.\n\nBecause we were nudists, her breast pressing against my arm, her pussy leaning on my hip, or my cock poking her body seemed inconsequential to our awareness. Because we were intent on being lovers, her hand wrapped around my cock, my fingers caressing her nipples, or my thigh pressing into her clit while we kissed aroused our libido. By the time we engaged in full body contact and long, deep kissing, we had reached an urgency to our passion that had one possible outcome.\n\nShe was leaning on me at the end of our last kiss, pressing me against the wall. Her nipples poked against my chest, her pussy hairs tickling the base of my cock as it snuggled between her legs. She pushed herself away from me and looked down at my cock. Reaching down, she took hold of my cock and rubbed its head on her clit.\n\nLooking up, she told me in a husky voice, \"I need you, Brett.\" Her eyes searched mine for agreement; I nodded.\n\nShe took my hand again, this time wordlessly leading me from the pool to our chairs. Stopping to rub a dollop of lotion on her hands, he asked me to lie down on my back. After I had settled down as directed, she swung a leg over me to straddle my legs and sat down on my thighs. She was the aggressor and I chose to let her have her way.\n\nI had a great view of her golden pussy and her labia stretched open just above my cock. Within seconds, my cock was swelling with anticipation. She leaned forward and began spreading lotion on my chest. My stiff cock's head maintained contact with her ass cheeks, feeling her movements.\n\nPlacing her hands on my stomach, she leaned on them while rocking her hips, walking her position down my legs until the tip of my cock nestled against her opening. I thought she was going to lean forward and let me enter her but she went for more teasing as she rubbed my chest. I could feel her building wetness as my cock moved against her inner folds.\n\nOnce again, her hands on my stomach helped her adjust her position. Lifting her body high enough, my cock flipped onto my stomach. Then she moved forward, looking down to guide her sex down so that my cockhead was at the top of her slit.\n\nPlacing her hands on my knees behind her, she leaned back with her eyes closed and began sliding her hips back and forth. The hard button of her clit was bumping across the ridge of my cockhead. I reached up to take hold of her surging breasts. Our breathing had become raspy gasping accentuated by moans and grunts as she ground her sex on me. Her labia were engorged, waiting to be penetrated; I was rock hard, coated by her wetness; we were as ready as we could ever be.",
        "I pleaded, \"Baby, I want you so bad.\"\n\nShe rose up and demanded in a husky voice, \"Put it in me, Darling.\"\n\nI put a hand on her hip and grabbed my cock with the other. She bent forward at the waist and braced herself with her arms beside me so she could watch the big moment. I guided my cock to her opening and urged her down with my hand on her hip. Together, we watched my cock slide inside her. I felt heavenly warmth and wetness surround my manhood.\n\n\"Oh, you're so big,\" she gasped as I filled her with some of my cock still showing. She rose up then pushed herself down again. \"Oh, you're so big,\" she repeated. \"I can feel you stretching me.\"\n\nRiding my cock with obvious delight, she whimpered 'Ooh' or 'Ah' at the end of every plunge. Because she was on top, she was doing things her way, my hands on her hips encouraging her. Her body was providing most of the driving force while I added minor assistance by lifting my hips as she came down. The tempo of her plunging quickened, ramming our bodies together with increasing force as she watched my cock steadily disappearing further inside her. She begged, \"Give it all to me.\"\n\nWhen I was buried to the hilt at last, she stopped and looked up to my face. Panting from her effort, she declared, \"Darling, you are so big. I wanted to know if I could take it all.\" Her lips pulled back into a toothy smile, and then her eyes blinked in slow motion as she said, \"It feels sooo good!\"\n\nShe closed her eyes and began sliding herself up and down on my cock again. Expressions of pure joy rippled across her face. I was joyful as well; it felt wonderful to be fucking her after weeks of strategic edging; but watching her enjoy herself was the cr\u00e8me de la cr\u00e8me for me.\n\nShe found two actions that gave her the most pleasure, having my cock push all the way in and shallow strokes that rubbed the ridge of my glans on her G-spot. As I discovered earlier, it didn't take long for her orgasm to cook. Her first orgasm (third of the day) happened after only five minutes of fucking.\n\nI could tell when her climax happened from a number of indications. The rising crescendo of sounds from her throat matched what I heard earlier when she came. The force and speed of her pushing down on my cock became almost violent slamming. Because I pay attention to involuntary body signals from my partners, not just my own building orgasm, I felt a noticeable temperature rise inside her vagina coupled with spasmodic contractions and increased wetness oozing over my cock. The most telling, of course, was her declaration, \"I'm coming again!\"\n\nWhen her body's convulsions faded, she collapsed on my chest, still impaled by my cock. It took nearly a minute for her panting to subside. After she took stock in what just happened to her, she wondered about me.\n\n\"You didn't come, Brett?\"\n\n\"Not yet. I was holding back, concentrating on giving you pleasure. I let you discover yourself. Now let me show who I am. It's my turn to be on top.\"\n\nJust decoupling with her turned into an erotic event. Feeling her vagina pulling off my cock in one long slide, seeing my wet cock emerge like a sword from her scabbard, and hearing an audible 'slorp' sound all contributed.\n\nRe-entering her was an even hotter experience. I had been managing our interactions to seduce one of the sexiest women I had ever met. Now I had her perfect body, naked and waiting for me. I could see her honey-colored pussy crowning her sex between open legs. The entrance to her vagina was still open between puffy labia, all the folds glistening with her arousal. Sliding my cock back into her honey-hole was like returning home for Christmas.\n\nMy chest settled on top of her breasts so I could put my arms under her, allowing me to support my weight on my elbows while I kissed her. She hooked her legs around mine to lock her sex on my cock and cupped my ass with her hands to pull my pelvis against her as we fucked.\n\nI had learned what she liked from the way she rode me which I used now to pleasure her. Providing fast, shallow strokes exclusively, I blitzed her G-spot to another orgasm. What a trip to hear and feel this athletic woman orgasm on my cock under me.\n\nHer contracting vagina pulling on my cock had me close to coming so I prepared to let myself go with her next one. Before she even came down from her orgasm, I rose out of her clutches to kneel between her legs. Levering her legs onto my shoulders, I entered her one more time.\n\n\"What are you doing?\"\n\n\"Getting ready to dump a month's load of cum in you.\"\n\nShe might have realized the truth that I had already come that morning but she knew the implication was that she should get ready for my orgasm. For this fuck, I used long, slow plunges as deep as I could go. Mindful of my size and her lack of conditioning, I purposely avoided hammering the top of her vagina, first with short strokes and now with slow pushing. The only violent movement would be her body jerking through an orgasm.\n\nFor me, the hot, wet, convulsions of her vagina massaging my cock were mind-blowing. When the tingling in my groin pushed lava out of my cock, I was arching my back, holding myself deep in her, and growling like a bear. My obvious ecstasy was a source of childish glee for her, extending her orgasm.\n\nWithout pulling out, I let her legs down one at a time so I could lay on her again. We were done but I wasn't ready to disengage. Anna seemed to appreciate the post-orgasm cuddling while coitally connected. We shared tender kisses and hand caresses until my flaccid member slipped out.\n\nBecause we were sweaty and sticky, I suggested we rinse off under my outdoor shower and then relax in the water. From the shower, I noticed darkness on the horizon previously hidden by our proximity to my house.\n\n\"Looks like another storm is coming. Do you want to head home before it gets here or wait out any rain inside my house?\"\n\n\"I'm not ready for this day to end.\"\n\nI brought out beers and we drank, cuddled, and talked as we had earlier except we were lovers now. The change in our relationship meant greater tenderness in our caresses and honesty in our discussions about sex.\n\n\"Brett, I never knew that sex could be like this. I've told you how little sex I had when I was married. Before today, I only had two orgasms in the same day once and that was on my honeymoon when we made love in the morning and evening. Having five today has been a remarkable experience.\"\n\n\"Why stop at five?\"\n\n\"How many orgasms do you think we should go for?\"\n\n\"I like round numbers. Ten sounds good.\"\n\n\"Ten! Are you kidding? I'll be sore as hell.\"\n\n\"I'll take it easy on you. I can fuck you in ways that won't cause so much discomfort. Plus, we haven't tried oral sex yet. Yep, ten sounds about right.\" I didn't want to explain how quickly her body orgasms compared to other women, making reaching my goal easier. I expected to be able to bring her to five orgasms orally before she knew what hit her.\n\nWe were interrupted when Anna heard Greta whine. Greta left the shaded area in some mulch she preferred and waited expectantly at the door to my house.\n\n\"Greta knows a storm is coming. She doesn't like them.\"\n\n\"Actually, Greta is hearing thunder we can't. That means lightning is coming. Since the clouds have blocked the sun, we should think about heading inside now instead waiting to hear thunder ourselves.\"\n\nShe agreed and just as we turned, a lightning bolt flashed in the distance. I counted eight seconds until the thunder pealed loud enough to make Anna jump.\n\n\"Eight seconds, that lightning was only a mile-and-a-half away, too close to risk. Let's hurry.\"\n\nThe wind picked up and an ominous cloudbank was bearing down on us as we gathered our things. We were inside no more than two minutes when rain was falling so heavily, I could hear it drumming on my roof.\n\nAs I handed a beer to Anna, I noticed she had draped her towel across her shoulders. \"Are you cold? Why don't you put some clothes on?\"\n\n\"No, I'm a nudist now. I want to be naked, 'specially around you. I'll be alright if I dry off.\"\n\nI liked her commitment to nudism, so I grabbed her towel and dried her back. She didn't complain when I backed her against the side of the refrigerator and continued doing her front. After drying her breasts, I leaned my head in and gently suckled both nipples. I dried the rest of her lower body and while squatted in front of her pussy, kissed her on her thatch of golden hairs, too.\n\nWhen I stood up, I started to turn away to throw the towel over a chair when she stopped me by grabbing my arm. \"Brett, you mentioned us doing oral sex. I have to admit that I am very interested in trying oral sex but I'm not afraid to admit to you that I have never done it before. I have no idea what it feels like but I'm sure you would be the best at pleasing a woman. I want you to teach me the right way to please a man.\"\n\n\"With your past, I understand the lack of experience. I gather you've never seen anybody else perform fellatio, like in a video.\"\n\n\"I've heard about what's in porn movies but never actually watched one. I have a basic understanding of oral sex but I know there must be different techniques and I would pick yours without knowing what they are.\"\n\n\"You're very flattering. The best thing I can teach you is to be able to discover what your partner likes. Try what you like to do, but to be the best, you will have to experiment at times. I think you should watch some porn with me. See how people who are paid to suck cock do it. Then ... we'll just wing it.\"\n\nI led her to my office where I have my computer. With her sitting in my lap, her naked butt on one thigh and her legs draped over my other, I played short clips from various videos at sites I was familiar with. She asked questions that proved her na\u00efvet\u00e9 but also an unabashed desire to learn.\n\nI explained some basic concepts. Blowing or sucking isn't normally involved. A warm, wet mouth feels like a vagina with extra stimulation from tongue and lips. I added that most men are visually stimulated by watching and they pick up on when the woman enjoys doing it. I offered what women told me, that sucking cock gave them a sense of power and control.\n\nShe asked what she should do when I come. I said I would let her know when I was going to and suggested she had three options. She could switch to a handjob, take it in her mouth but spit it out afterward, or swallow. She gave me a smile instead of an answer when I asked what she thought she might do. The videos provided some cumshot examples.\n\nShe responded more than most women to the visuals of seeing other women sucking other cocks. Perhaps she had a fascination with oral. Building excitement made her shift position to straddle my thigh, bringing her wet sex to full bear on my skin. She pulled my hand that rested at her waist down to her clit, directing me to diddle her as she watched. I voluntarily cupped her breast and worked it with a little massage.\n\nMore wetness was making a mess of my leg but I didn't mind; she was holding and moving my cock in synchrony to the action on the screen. From over her shoulder, I saw her mouth absentmindedly open around an imaginary cock. Participation in the weird quasi-foursome made me hard; she noticed.\n\nLooking down at her fingers gripping my erection, she said, \"Oh good, I'm ready to wing it.\"\n\nI suggested the comfort of my bed and she agreed. I led her across the house to my room. Climbing on the bed first, I laid on my back in the center. She stood at the foot of the bed, looking at me. She had brought her bag with her to my room. Her simple answer to my query was, \"Humor me.\" Now, she was saying, \"I'm going to ask you to do something later. Trust me. I'll explain everything.\"\n\nShe crawled up from the foot of the bed on her hands and knees, her eyes staring at my cock like a panther stalking her prey. Crawling over my cock, she lowered her chest to rub her nipples along its shaft. She looked over at my eyes to see if I was watching, and then hung her head to rub her cheek on my cock. Forcing my legs apart and settling her body between them, her head hovered over my cock.\n\nGrabbing my cock with her hand, she held the glans against the corner of her mouth and looked at me. \"You have the most beautiful cock in world, Brett,\" she cooed. I felt the vibrations of her voice and the movement of her mouth on me.\n\nShe ran her nose down one side and up the other as if sniffing a cigar. \"Ooh, I love the smell of cock.\"\n\nLooking at me with dreamy eyes, she tilted and nodded her head, raking her tongue all around my glans and just under its ridge as if eating a drippy ice cream cone. \"Ooh, I love the taste of a man when he's excited.\"\n\nShe played with my cock as if it were a toy. She rubbed the glans all over her face, hugged it, kissed it, and talked to it. \"You are so cuddly, my little man. I want to hug you and squeeze you.\" She placed my cock in the crook of her neck and bent her head over to press it between her cheek and shoulder, nodding her head to slide her cheek on it.\n\nHolding me in front of her face with two hands, she told my cock, \"I'm going to eat you up.\" Looking beyond the erection in front of her, her eyes locked on mine. \"I'm a little nervous, Darling, but I'm dying to do this.\"\n\nShe pulled my cock to her lips and began bathing me with her tongue, and teasing me with pokes past her lips. Her eyes opened and closed slowly, alternately seeking out my eyes and focusing on my cock. With her hands, she gently stroked my cock and cupped my balls.\n\nShe began putting her lips around my entire helmet then pulling them back over the ridge. Moving slow and sensuously, she looked as though she was enraptured by her desire to suck my cock.\n\nHer routine abruptly changed. She put my helmet in her mouth but kept it in. Her tongue swirled over and around the tip. Opening her eyes slowly, she looked into my eyes. Continuing to look, her head swayed side to side and her mouth took another inch. Her tongue slid sideways under my helmet ridge.\n\nShe took several more inches step by step until her mouth could hold no more. After waiting a few seconds, she pulled off. Looking up to my face, she declared, \"I just found out, I love sucking your cock.\"\n\nTaking me in her mouth, still patient, still delicately, she sucked my cock. I was getting into her rhythm when she suddenly stopped. \"Darling, I want you to do something. I'm serious about this. I want you to take my phone and record me sucking your cock.\"\n\n\"What the hell...\"\n\n\"Don't ask me anything, just trust me. This is for my friend in Atlanta. You'll understand when you record me. Don't speak, I will. Make sure you can recognize my face in the video.\"\n\nI didn't know where this was going but I was intrigued enough to comply. She took her phone out of her bag, set up recording mode, and handed it to me. She held my cock vertical next to her face. When she was confident that I had her properly framed, she told me to start recording. I punched the red circle and nodded.\n\n\"Hi, Molly, this is Brett's cock, the one I told you about.\" She put both hands on me to scale my size for the intended viewer. \"Since you didn't believe me before, the only way to convince you about what happened today is to do this...\" She turned her head and gave a blowjob exhibition for the video using the method she just perfected. I watched her suck me through the phone display to keep it aimed, but at some point, the phone recorded only sound after I lost my concentration.\n\nAnna turned out to be a natural cocksucker. She loved it and had an incredible technique that I could not resist for long. Despite a short refractory period for me and two giant cum loads within recent hours, she brought me to orgasm a third time.\n\nI verbally announced my impending eruption. Her reaction was to squeal with a mouthful of my cock, take me deeper, and then nod her head with an 'mm-hmm' sound. I don't know how much cum I delivered; I never saw a drop escape her. I know there had to be some because of her reaction. She was obviously proud of herself.\n\nI was dog-tired, in a post-ejaculation energy low. I could have enjoyed a nap right then but she was waiting none too patiently to learn what cunnilingus felt like. How could I disappoint her?\n\nI called upon energy reserves and made myself into her gallant lover. I didn't need much strength or range of motion to dance my tongue in her sex. Soon, I was totally focused on eating the sweetest honey-pie I have ever known. Her clit was a jewel that powered her body. I did things to it with my lips, tongue, and even my teeth; things that I learned to do over the years; things she was experiencing for the first time in her life.\n\nShe was vocal and squirmed vigorously each time she came. Her hips bucked hard against my face, at times bruising my lips. She flooded wetness that covered my face, her legs, and even dampened the sheets. About the third or fourth orgasm, she discovered holding my face to her vulva by the hair as she came. I escaped suffocation during her lengthy fifth orgasm by being out of reach because my tongue was pushing into her vagina where it stayed to lap up her juices.\n\nI stopped eating her pussy because she begged me, but her begging was not to stop exciting her. Her face had tracks of weary tears, her body was limp, her chest heaving, and her sex gaping. She begged, \"Fuck me, Darling.\"\n\nHow can she want sex already after I fucked her so thoroughly a short time ago? I gave her my best and she wants more? What have I done to this reserved woman? I thought I would have to go easy on her but now I wondered if I had the endurance to be able to satisfy her pent-up passion. I was exhausted; yet, there I was, sliding into her heavenly body again. If she never lets me stop, then what will I do?\n\nI reminded her, \"You know, I counted ten orgasms for you so far today.\"\n\n\"Twenty is a nice round number, too,\" she purred as her legs wrapped around my hips and held me in. "
    ],
    "authorname": "SandraMustard",
    "tags": [
        "nudist",
        "mature woman",
        "big cock",
        "exhibitionism",
        "voyeur"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/in-the-buff-1"
}