{
    "title": "NewU Pt. 02",
    "pages": [
        "Somehow \u2013 and despite all expectations - I had managed to fall asleep. The doctors words and theories had bounced around my dreams like a drug induced vision; part of me wanted to laugh at the ridiculousness of what she had said, but another \u2013 bigger \u2013 part couldn't help but equate those theories with what I had been experiencing since I was woken up from the MRI incident. I had known about Jimmy's parents without him saying a word about them, and all that stuff from Amy... was she really unable to conceive? How the hell could I broach that subject to confirm my... abilities... without sounding like an insensitive, stalking asshole? \n\nBut whether I wanted to admit it to myself or not, I had felt different all day and there was no reasonable way for me to explain my experiences in any other way, at least not since Doc Harris had shared her wisdom. Let me be clear here, coming to the conclusion that I was somehow the next step in human evolution would never have even occurred to me without the doctor's input... that's just not the way my mind works. But once the idea had been seeded, it was difficult to ignore. \n\nAfter what felt like five minutes of actual restful sleep. I was pulled out of my dreams by an odd sensation, a sensation I could only describe as a fast approaching bubble of joyful apprehension and I knew immediately that it was not coming from me. I pulled my eyes open just in time to see Becky burst into the room like an emotional tornado \n\n\"Oh my god!\" she squealed happily as she noticed I was awake, \"I'm so happy you're ok!\" she flew across the room and practically jumped onto the bed, her arms squeezing me tight and her impressive chest mashing itself into my face... there were worse ways to wake up. \"After everything you had been through, thinking you have been hurt in some freak accident... on my watch... I just couldn't handle it! I was an emotional wreck... I guess I still am.\" She looked down at my face nestled comfortably between her scrub-clad cleavage, quickly composed herself, stood herself upright and apologized bashfully. \n\n\"Nothing to be sorry about,\" I grinned, \"in fact, feel free to wake me up like that every morning.\" \n\n\"Oh you!\" she slapped my arm playfully, allowing it to linger against my skin for significantly longer than necessary. Her outburst was a genuine result of overwhelming emotions. Amy had got it wrong, she didn't feel guilty about the accident because she thought it was her fault, it was more akin to survivors guilt... like she felt guilty that it happened to me and not to her, or to her ex \u2013 who definitely deserved to be in a lot of pain after fucking two of her best friends and trying it on with her sister. Despite the flirtatious act she put on for Jimmy yesterday, she did actually like me; the aforementioned ex had turned her off bad boys and players for life... it was one of the reasons she had no interest in Jimmy. She wanted a nice guy and I seemed to fit the bill... she didn't know how she knew - neither Jimmy nor anyone else had told her much about me - but she just knew. I wasn't bad looking either, I would probably be even more attractive once I'd had my shave and cleaned up a little \u2013 something she was increasingly excited to help me with. I may not have had the smoldering, panty wetting good looks that she usually went for, but \u2013 in the words of a recently released movie \u2013 mine was a face she would happily sit on... \n\nThe bulge she had noticed the day before was a definite improvement on any of her previous men, she'd already made her mind up to 'accidently' bring it to full mast while performing her promised bed bath duties to gauge it properly... the work policies were incredibly strict, but she was sure that with some imagination, she could figure out a way to get it into her sooner or later. If all else failed, she would accept the drink I had offered, go out with me once I had been discharged, take me back to her place and fuck the ever-loving shit out of me. She had spent a significant part of the previous evening, knuckle deep in her own wet sex thinking about just that... Not a bad way to spend a Wednesday evening in her book. \n\nHoly Fucking shit! If that was anything close to her actual internal monologue then... actually, nope, there was no 'then'... I would be in completely uncharted territory and would be happy to just go along for the ride. Were there other girls who thought like this? Had I missed out on previous carnal opportunities because I had missed or misread the signals that had been let out? Not that Becky was giving off many outward signals... at least none that I could spot. \n\n\"Hey...\" I said, suddenly realizing that her hand was still on my arm and I hadn't actually said anything back to her. \"...a beautiful girl jumping into my bed with that kind of enthusiasm isn't something that happens every day. Only a fool would feel anything other than lucky.\" \n\nShe swooned... she actually swooned. \"such a charmer, your girlfriend must be a very happy lady.\" \n\n\"girlfriend?\" I laughed, \"nope, been a long time since I had one of those.\" \n\n\"hmm... interesting.\" She mumbled to herself, removing her hand and starting on her work with the machines next to the bed. Yup, she was definitely gonna get some dick from me, she just had to make sure she locked the door before she started the bed bath... Privacy was paramount in a hospital so nobody would question the door being locked for that duty, it would give her plenty of time to run her little experiment... if all went well, she could get some dick sooner rather than later... if she couldn't do it today, she could just make sure I was extra clean so the bed bath time could be put to better use tomorrow. As far as my charts were concerned, I wasn't scheduled for any more tests so as long as she timed it between visiting hours... \n\nShe licked her lips in anticipation. \n\n\"So, what about you?\" I asked, interrupting her thoughts, \"any jealous boyfriends about to beat down my door for man handling his woman?\" \n\n\"Nope, you're safe\" she giggled, \"I've been waiting for the right guy to sweep me off my feet.\" \n\n\"I'll have to remember to bring my broom then.\" I smirked. \n\n\"Charmer like you? I bet you have the girls queueing up for a piece.\" \n\n\"Ha!\" I laughed again. \"I am not now, nor have I ever been a lady's man, I can say with confidence that there is no queue.\" \n\n\"got you all to myself then have I?\" she said with a seductive wink. \n\n\"I am all yours.\" \n\n\"I'll remember you said that.\" She winked. God dammit, if she spent any more time with me, she would need to change her panties! But I was definitely giving her the right signals; single, available and interested. She just hoped I wasn't too dense to pick up on her giving off the same vibes. She couldn't wait to touch me. \n\nWell, apparently, I am more than a little dense, because if it wasn't for her internal monologue, I would have absolutely no idea that she was being anything more that friendly and professional. This ESP thing was starting to show some promise. \n\n\"So, what time would you like that shave and help to clean up?\" she asked. \n\n\"Erm...\" I pretended to think for a second before repeating her own sentiments back to her, \"maybe it's best to time it around visiting hours. Wouldn't want to rush things because I am expecting guests.\" \n\nShe bit her lower lip, never taking her eyes off the machine she was working on, but her mind was screaming! My words were music to her ears, I might not be in a physical position to give her what she really wanted, not with my legs in a cast... even riding me might cause unwanted \u2013 and unexplainable \u2013 additional injuries to my already frail body. But she was adamant; the very least she was going home with tonight was the taste of my cum on her breath. \n\n\"What time is it now?\" I asked. \n\n\"Err... a little after 8.\" she answered after looking down at the watch pinned to her scrubs. \n\n\"and what time are the next visiting hours?\" \n\n\"9.30.\" \n\n\"Hmm.\" I thought for a second, not failing to notice that she had stopped what she was doing and waiting for my decision with literally bated breath. \"probably not enough time to do it now, what time do visiting hours end?\" \n\n\"11.30... in time for lunch, although I guess that doesn't apply to you,\" she laughed, gesturing to the tubes attached to my arm, \"then the visitors are back at around three.\" \n\n\"ah, now that's more like it. Think could book an appointment for my shave at, say, 11.45?\" \n\n\"and how long would you like this appointment to last?\" even I couldn't miss the seductiveness of her tone in that question. \n\n\"as long as you can spare me.\" I smiled. \n\n\"I'm sure I can find enough time to make sure you are properly looked after.\" She winked again. With that, and after apparently finishing her tasks, she sashayed out of the room, it was impossible to miss the suggestive swaying of her spectacular ass, a motion that I knew for a fact was entirely intentional. \n\n\"see you later, handsome.\" She called over her shoulder before exiting the room. \n\n\"Well, at least you're not dead.\" Jimmy's voice pulled me out of a particularly pleasant daydream I was having, although the entire scenario being played from Becky's point of view had left me with the distinct impression that it wasn't actually my daydream. If I was right, then that girl had some major plans for me. \n\nI pretended to look over my body, \"nope, it would seem that I am still in the land of the living.\" \n\n\"Outstanding!\" he smiled as he sat into his usual chair, \"so, any news on those results?\" \n\n\"all fine, as far as they can tell.\" \n\n\"really? That Doctor wasn't acting that way when she left.\" \n\n\"apparently there were some weird readings,\" I answered, surprising myself with the ease at which the lie came to me, \"but they were something to do with the machine, once that was sorted out, the results came back all clear.\" \n\n\"Good,\" he smiled, breathing a sigh of relief, \"that's really good.\" Jimmy had suffered his own restless night, the threat looming over those test results had bothered him more than he would ever accurately admit. That sigh was releasing more tension than I could have realized \u2013 at least more than I could have realized in the pre-ESP days. \n\n\"So, Jimmy,\" I said, pulling myself into a position where I could sit up and see him, \"how are things? What's the news? How is life on the outside?\" \n\n\"On the outside?\" he echoed with an amused look. \n\n\"I'm an institutionalized man.\" I replied in my best Shawshank impression. \n\n\"Well, nothing much to report,\" he answered after laughing at my awful impersonation of Morgan Freeman. \"Obviously I've dropped out of college...\" My eyebrows shot up, \"Well, not dropped out, deferred the semester, but I'm not there anymore so there isn't much difference at the moment. Everyone understood, the guys and the girls all send their love and best wishes, they all liked you by the way, they were as shocked as I was when you had your accident. But they have all moved on, I still meet up with them for a drink every now and again, but I've spent most of my time here, so...\" \n\n\"wait,\" I interrupted, \"You did what?!?\" \n\nJimmy sighed and sat back into his seat; he knew this was coming. \"The morning I found out about your crash, I came straight here, that was on the Saturday morning. By the time you had gone through your first rounds of surgeries and they had decided you were going to... err...\" he licked his lips nervously, \"...to make it, almost a week had past and I hadn't been to class, they just didn't seem important. The following Monday, I went in and saw the admin people; I explained the situation, the crash, your surgeries, your condition, my time at the hospital... at first I just wanted to make sure they didn't kick you out of college for not turning up, but then they asked what our relationship was; I guess I hesitated because she decided that we were 'partners' before I could say anything, maybe she thought I was embarrassed or something, the whole gay thing kinda came from there. \n\n\"anyway, they said that it counted as a close family emergency and that we could both defer the semester, I'm not even sure what that means but I think it means we can keep our credits from this year so far and finish the rest of them next year, or make up the difference in the third year... I don't know. But I've been here ever since. So...\" \n\nI nodded, grateful that Jimmy had thought of telling the college what had happened but concerned that his academic future may have been dragged down with mine. \"Thanks man.\" I said appreciatively, before changing the subject for him. \"So... any girls on the go?\" \n\n\"Actually, the girl from the bar that night was the last one.\" He smiled, happy with for the chance to talk about anything other than what had happened to me. \n\n\"You're shitting me!\" \n\n\"Nope, it's true,\" He laughed, \"You're looking at a man whose had no pussy in 2 months.\" \n\n\"that has got to be some kind of record.\" \n\n\"It's been a while since I've gone through a dry spell of this severity\" he agreed, still laughing. \n\n\"So, Chastity was your last conquest...\" I joined in the laughter, \"there has be another level of irony there.\" \n\n\"Oh shit, yeah, I forgot her name. How the hell do you remember that?\" \n\n\"Because as far as I am concerned, it happened, like, three days ago!\" \n\n\"well trust me,\" he said, \"if you saw how that girl acted in bed... hooo.\" He rubbed his hands together wistfully. \n\n\"that good, eh?\" \n\n\"That girl was...\" he paused for a second, looking off into the distance with a smirk, \"... fucking crazy!\" he laughed, \"an absolute demon in the sack though, wouldn't mind another run at her if I get the chance.\" \n\n\"And what about Phillipa? Or Charlotte?\" \n\n\"aww, have you met them yet?\" \n\n\"Nope, Amy was the only one left here last night, and Becky came in to say hello this morning, haven't met any of the others yet.\" I obviously \u2013 and intentionally \u2013 left out the more suggestive elements of the conversation between Becky and I; Jimmy could be accused of being many things, but discreet was not one of them. \n\n\"dude, you are in for a treat...\" Jimmy shook his head with a whistle, \"... put it this way, if either of them showed even a sniff of interest, I would hang up my player card for life and wife the fuck out of her.\" \n\n\"I'll keep that in mind.\" An exotic looking brown haired beauty wearing nursing scrubs walked into the room, Becky close behind her with a wry grin painted across her features. Either they had exceptional timing, or Jimmy was incredibly unlucky when it came to talking about women. \n\n\"Oh... Hey Philippa.\" He winced comically... again. \n\nConsidering this was the object of Jimmy's fantasy, I immediately took in the new nurse in my life. Philippa was - in a word \u2013 spectacular. Mixed pacific heritage gave her flawless skin an almost glowing bronze quality as it seemed to form to her frame in a way that screamed sexual perfection. Every move that she made, every gesture, every blink seemed to ooze with seductive energy and a simple flick of her glance was enough to induce a granite like erection. The deep brown molten pools she had for eyes were fixed on Jimmy with an air of playful amusement, her thin lips curled into a smirk as she beheld Jimmy's embarrassment. \n\nShe stood just inside the doorway \u2013 Becky had squeezed past with a giggle \u2013 and was striking a pose of faux indignation, thrusting her shapely hips to one side and holding one of her hands against it. I could definitely see why Jimmy was so taken by this woman; although \u2013 at least in my opinion \u2013 Becky had the more curvy and voluptuous body, Philippa had an air of confident, lustful sexuality that Becky seemed to lack, she was exactly Jimmy's type. \n\n\"So, I understand you have been less than candid about your relationship to my patient.\" She said to Jimmy with a raised eyebrow and a smirk. \n\nJimmy held his hands up in surrender with a chuckle of his own. \"I... err... did what I had to do.\" He offered from behind his smitten smile. \n\nBy this point, Becky was standing next to my best, watching the exchange with the same amount of amusement as I was. She wasn't touching me, but she couldn't resist her strong desire to just be close to me; her thoughts giving away the fact that although Philippa had come in her to introduce herself \u2013 she hadn't been on shift since I had woken up \u2013 Becky had no legitimate reason to be here, she just saw an opportunity to be close to me and took it, a reality that excited and concerned her in equal measure. \n\n\"So...\" Philippa said, turning towards me and leaving Jimmy hanging, \"It's nice to finally meet you, I'm Philippa. Good to see you awake.\" Her dazzling smile was enough to make me catch my breath. \n\n\"It's nice to meet you too, Jimmy has told me a lot about you.\" I smirked. Jimmy flashed an awkward look in my direction, but I ignored him. \n\n\"Has he now?\" Philippa eyed him with faux suspicion. \"I hear that you have offered to take us all out for a drink when you're all better, as a thank you.\" \n\n\"that's the plan.\" I nodded, \"Gotta thank you all somehow.\" \n\n\"will this one be there?\" she jerked her head in Jimmy's direction. \n\n\"probably.\" \n\nShe paused for a second, making an exaggerated attempt at looking thoughtful, \"I guess he can make up for lying to me with a drink then.\" She smirked at my slack-jawed friend, turning to face him. \"Mine is a red wine, you'd better not forget.\" \n\n\"definitely not.\" Jimmy mumbled in shock \n\n\"Good thing he's cute.\" She giggled before turning back to me, \"anyway, we're off on our rounds now that I've introduced myself, so I'll see you later.\" \n\nBecky \u2013 who hadn't moved from her place by my side, nodded and looked down at me. \"you still want that shave later?\" she asked with a sultry smile of her own, although her internal monologue was telling me that 'shave' was far from what she actually had in mind. \n\n\"Can't wait.\" I winked back. Her tongue darted out to wet her lips, and she ground her thighs together to scratch an itch that had been growing since this morning. She had no idea what it was about me, but she was starting to see the benefit of having a spare change of clothes in her locker, at this rate, neither her scrub pants nor her panties were going to make it to the end of her shift. With a flushed smile, she turned and followed Philippa out of the room. \n\nJimmy was so transfixed on the brunette the had completely missed the exchange between Becky and me, that was something I was grateful for. \"so, that was Philippa then.\" I asked with a grin. \n\n\"I... err... think I'm in love.\" \n\n\"and that promise about hanging up your players card?\" \n\n\"You can have it.\" He laughed. \"you think she is interested?\" As it happened, I knew she was interested, maybe not as interested in him as he was in her, but nursing was a busy profession that didn't allow her much time for her to socialize with visitors so she didn't know him well enough to make an educated assessment, but she definitely thought he had potential. Like Becky, she wasn't a fan of the players and bad boys either, and she absolutely despised liars; but Jimmy had a noble reason for his deceit and \u2013 to her - nobility and loyalty were vitally important \u2013 and attractive \u2013 qualities in a man. His constant, voluntary vigil at my bedside these long weeks had given her enough evidence that his good looks hid an equally good character; if he could show her both \u2013 and the equally important characteristic of being willing to commit - then she would definitely be more than interested. Her thoughts weren't quite as explicit as Becky's were towards me, but the idea of Jimmy worshipping her body, and her being happy to return the favor warmed her in places that had been sadly neglected for longer than she would like to admit. ",
        "\"I think that she would be, if you play your cards right.\" I answered. \n\n\"What do you mean?\" \n\n\"She doesn't seem the type that's after a one-night stand, I think you are going to have to woo her... put some effort in.\" \n\n\"Well, I can most definitely do that.\" He smiled with another wistful look towards the door. \"I'll buy her every bottle of red wine they have at the bar.\" \n\n\"that's not what I meant.\" \n\n\"I Know,\" he rolled his eyes. \"I may be a player, but I'm not an idiot; I know how to treat a girl right... if she's worth it. For her I'd be Prince fucking Charming!\" \n\n\"the one from Shrek?\" \n\n\"fuck off!\" he playfully snorted a laugh. \"So, Look.\" He started, suddenly growing serious, \"I had a message this morning off Professor Jacobs.\" \n\n\"Jacobs?\" I asked in surprise. He was the head of the department that covered our degree and the man responsible for overseeing all of the students on his courses, he also happened to be one of the lecturers for one of the modules Jimmy and I had taken, meaning we had both met the man a number of times. \n\n\"Yeah, he's asked if he can come here for a visit later in the week... while we are both here.\" \n\n\"Really?\" I exclaimed, Jacobs was like the king, most students never saw him \u2013 at least not outside of the classroom - unless they had done something incredibly good, or spectacularly bad and he never came to you voluntarily unless it was important. \"did he say what he wanted?\" \n\n\"No, and \u2013 to be honest \u2013 I didn't have the balls to ask. I just told him what times the visiting hours were and that I was here for all of them, and that he was free to come whenever he wanted... Sorry, I should probably have asked first.\" \n\n\"No, man, you made the right call.\" I mused. \"You don't keep the king waiting.\" \n\n\"all hail the king.\" Jimmy laughed. \n\nPhilippa chose just that moment to pop her head around the door, \"Pete, you have visitors.\" She smiled. \n\n\"well that was quick.\" Jimmy looked at me with an arched eyebrow. \n\nPhilippa pushed the door open, stepping to one side to allow entry to the last two people I ever expected to see. \n\nI pursed my lips, trying to stem the instant burst of anger I felt at seeing the two faces walk casually towards my bed. \"Phil, Debbie.\" I nodded, trying as a hard as I could to sound calm and passive. \n\nThe man looked at me angrily, his ill-fitting suit hanging loosely off his overweight and sweaty frame \"would it be too much for you to call us mom and dad?\" \n\n\"Yes, actually.\" I replied, noting the sudden tensing in Jimmy's posture out of the corner of my eye. \n\nThe woman formally known as my mother \u2013 dressed in a way which reminded me of the mother in the Matilda move \u2013 trotted over to Jimmy. \"Do you mind?\" she asked him, gesturing to the chair he was sitting in. \n\n\"Stay where you are, Jimmy.\" I barked as he attempted to stand. \"they won't be staying long.\" \n\n\"a real man would give up his seat for a lady.\" My mother growled, the hostility in voice impossible to miss. \n\n\"I agree,\" I replied, \"and I'll be sure to tell him to move when one arrives.\" \n\n\"Now listen here you little...\" Phil hissed before I cut him off. \n\n\"is there something I can do for you?\" \n\nPhilippa had followed the pair into my room with a frown \u2013 obviously neither her, nor any of the other nurses were aware of the strained relationship I had with my parents - leaving the door open behind her and standing \u2013 arms crossed \u2013 close to the door, Becky was standing with another group of male and female nurses, watching the exchange from just beyond the threshold. Phil \u2013 never one to mistime one of his abusive diatribes \u2013 took their presence as a hint to change the subject. \"Do parents need a reason to visit their sick son in hospital?\" he answered, his own efforts at trying to sound calm only obvious to my experienced ears. \n\n\"I don't know,\" I answered curtly, \"maybe you should find some and ask.\" \n\n\"you're acting like a child.\" Debbie cut in from her place behind Jimmy with a scowl of her own, \"Its not like you were dying or anything, it was only a car crash!\" \n\nPhilippa took this as her cue to cut in, \"Actually, Mrs Roberts, Pete suffered some very serious injuries during the accident and is very lucky to have survived.\" The warning in her voice was unmistakable. \n\n\"He did die.\" Jimmy added, the anger in his voice rising, \"three times, in fact.\" \n\n\"Nonsense,\" Debbie snorted dismissively, \"we all know he has always wanted extra attention and you nurses like to look for ways to justify your jobs. He's obviously fine.\" \n\n\"Are you fucking crazy?!?\" Jimmy barked incredulously. \n\n\"and I don't even know who you are,\" Debbie went on, not skipping a beat, \"but this is a family matter, so you can leave now. I'll have a cup of tea, if you don't mind\" She finished with a contemptuous glance at Philippa. A single look from me told both of them stay exactly where they were. \n\n\"What do you want, Debbie?\" I asked with a growl \n\n\"Don't speak to me like that, young...\" \n\n\"What \u2013 do \u2013 you \u2013 want?!? It's taken you this long to turn up so, whatever it is, it's obviously not important.\" \n\n\"Look,\" she said after an uneasy glance around the room and at our audience, \"I know we haven't been much but...\" \n\n\"Much?\" I interrupted, \"I'm sorry, did you say much?\" \n\n\"You're acting as if this is the first time we have been here.\" She said, trying to hide the condescending hiss in her voice. A quick perusal of her thoughts told me that was exactly the case, and even if her thoughts were not available to me, the blatantly obvious look shared between her and my father would have been enough to call her on her bullshit... but I decided to play along. \n\n\"isn't it? I asked her. \n\n\"Of course not,\" she replied with her best impersonation of a motherly smile. \"We haven't been here as much as we would have liked to, but we've come as often as we could.\" \n\nBoth Philippa and Becky \u2013 who had now wandered into the room next to her colleague \u2013 shared a confused and skeptical glance between them. Again, more than enough proof of the lie. \n\n\"Is that true?\" I asked Phil. \n\n\"Of course, son.\" Another awful excuse for a paternal smile spread over his lips. \"It hasn't been much, and you have every right to be upset, but we have visited a couple of times a week since you were admitted, you were just sleeping when we were here... and nobody else was around.\" \n\n\"Well obviously.\" I nodded, \"I was in a coma.\" I glanced over to Jimmy, his knuckles were white with the anger he was venting into the armrest, his jaw had tightened, and his face was flush. It was not the only time I had seen Jimmy angry over the course of our friendship, but this was genuine rage. Becky and Philippa weren't looking any happier about the situation, all three of them knew just as much as I did that these two assholes were talking total bullshit. \n\n\"It's funny.\" I put on a jovial smile, \"there's loads of things I thought I knew about being in a coma, but there's one thing that they don't put in the documentaries; did you know they keep a guestbook?\" I lied, \"They keep track of every person who visited me while I was 'asleep' and then they gave it to me when I woke up... Kind of a 'look how many people care about you' exercise so I wouldn't get depressed.\" Both parents gave each other a worried look, both nurses looked confused and Jimmy had started to relax as he realized where this was going... Phil and Debbie weren't the only one able to lie. \"do you know how many names were in the book?\" Pause for effect. \"One! ... His!\" I pointed to Jimmy. \n\n\"I... err...\" Phil spluttered in a desperate attempt to think of a way to explain their absence in this fictional book, a book he would have known didn't exist if he had ever been here before today. \n\n\"So,\" I continued, \"I have been here for 8 weeks, and you have visited a couple of times every one of those weeks, so even taking into account the extra visit one week, or the missed visit another, you are saying that you have been here... what... ten, fifteen times? And your name isn't in the book once. The nurses won't let you even enter the room without signing it so how do you explain that?\" \n\n\"We... erm...\" Phil was still spluttering, \"...We called.\" \n\n\"Ah I see...\" I laughed, \"I can understand the confusion. It's an easy mistake to make, you know, the difference between visiting your son in hospital a couple of times a week and 'you called', lots of people have trouble telling the two apart.\" \n\n\"Pete,\" Becky spoke up from the other side of the room, \"I know this is upsetting, but they've travelled a long way to get here. Maybe its best if...\" \n\nShe was interrupted by my snort of laughter. \"Becky, if you were to leave this hospital right now, how long do you think it would take you to get to your front door?\" \n\n\"Erm... I don't know,\" she replied in confusion, \"Maybe 40 minutes, depending on traffic.\" \n\n\"These lying fuckers live 25 minutes away.\" \n\nBecky's eye widened in shock, \"but they said...\" \n\n\"They lied.\" \n\nPhil's simmering anger came to sudden boil and he burst from his place against the wall to my right, his hands balled into fists, Jimmy leapt to his feet in a show of athletic reflexes that impressed even me; Jimmy was a good foot taller than me, and I was a few inches taller than Phil, it took less than a second for the overweight old man to realize the futility of his actions and quickly - and sheepishly - backed down. \"Do it,\" I barked at him, and holding a hand up to calm Jimmy down \"then hide... I won't be in this bed forever and we both know what happened last time you raised your hand to me!\" \n\n\"I think we should leave.\" He mumbled to his wife \n\n\"Good idea.\" I replied coldly, then watched as they both timidly made their way towards the door. \"One more thing,\" I called out as they were about to leave the room, \"it's probably for the best if you don't come back... and do us all a favor... lose my number.\" \n\n\"We're still your parents you ungrateful little...\" \n\n\"Not anymore.\" With an almost amusing pair of scowls, they walked out into the corridor \"Thanks for coming though.\" I called after them. \n\nSilence fell on the room, nobody wanting to be the first to speak as my other guests' eyes flashed amongst themselves. It was Becky who spoke first; \"Are you ok, Pete?\" her mind was a storm of mixed emotions, anger, pity, disgust at my parents and impressed with the way I handled them; but there also was an overwhelming urge to comfort me, to rush into my arms and let me know that despite my parents, there were people out there that genuinely cared for me and that she was quickly becoming one of them. If it wasn't for Jimmy \u2013 her thinking went \u2013 I would be the loneliest person in the word; her relationship with her parents was rock solid, she loved them more than she could ever describe and she knew \u2013 knew \u2013 that they felt the same way about her. She couldn't imagine what it was like to be me and the jovial, happy, easy going personality that I had displayed since waking up was even more impressive than she already thought. \n\n\"I'm fine.\" I smiled at her, \"I would be lying if I said that didn't hurt, but I'd also be lying if I said I was surprised.\" \n\n\"Fuck, dude...\" Jimmy muttered having returned to his seat and apparently calming himself down. \"I don't even know what to say.\" \n\n\"You don't have to say anything.\" I smiled again, \"but thanks for the backup, I appreciate it.\" \n\n\"Anytime... can't have some old prick beating up a cripple.\" He smirked. \n\nAnd that was it, the burst of laughter that came from me and the two nurses evaporated the last remaining tension in the room and \u2013 not that I could ever tell him \u2013 scored Jimmy some major brownie points with the silently swooning Philippa. \n\n\"Well, I hate to break up the gathering,\" Becky said as the laughter finally died down, \"but it's 11.20; visiting hours will be over soon and... err... Pete and I have an appointment with a razor.\" Her tongue instinctively slipped out to wet her lips, a gesture that seemed to have been noticed by the astute Philippa. The brunette seemed to know exactly what was on Becky's mind but in no way disapproved, in fact, she was pleased that her friend was letting her hair down and \u2013 in Philippa's words \u2013 'going for it'. \n\nJimmy's smile narrowed to a smug grin, \"See, I knew as soon as you woke up, I wouldn't get a look in with the ladies.\" He joked. \n\n\"Well that depends on how you play your cards, doesn't it?\" Philippa winked, still impressed \u2013 and more than a little moist \u2013 at Jimmy's display of manliness a few minutes ago. \n\nJimmy \u2013 in an uncharacteristic display of shyness \u2013 felt his jaw hit the floor before quickly composing himself and flashing a beaming smile at his admirer. With a nod to me, he got up and followed Philippa out of the room, \"I'm sure I heard something about you handing your players card in...\" Philippa's teasing words to my friend were the last things I heard before the door swung shut, leaving Becky and I alone in the room. \n\nWe stared at each other for a few moments, before her face split into a dazzlingly beautiful and seductive smile. \"So...\" she said, \"... ready for that shave now?\" \n\nMy body \u2013 or at least one particular part of it \u2013 instantly forgot the stress that my parents had brought into my day, and immediately stood to attention. Becky noticed immediately, arched an eyebrow, licked her lips and left the room without waiting for my reply. Apparently, a raging erection was all the confirmation she needed. \n\nAt 11.45, on the dot, the door opened, and Becky slipped into the room \u2013 locking it behind her. \"We have about 90 minutes,\" she almost whispered as she passed my bed - her arms filled with a bowel, flannels and shaving implements \u2013 and made her way to the basin against the wall to the right of my bed. She was practically trembling with anticipation; her mind had been filled with images of what she wanted to do to me since our appointment was set that morning, but as the hour drew nearer, she found herself having more and more doubts... what if she had misread my signals, or what if I was only harmlessly flirting with no desire or intention to follow through, or \u2013 worse \u2013 what if we both went as far as she wanted but were caught; that wasn't just a sackable offence, as a person in a position of power over me, and a moral obligation towards me, any sexual advances she made towards me would be seen as sexual assault by a court of law, maybe even rape. There was a genuine threat of prison time if she went through with this. But no matter how much her urges \u2013 and their consequences \u2013 scared her, they excited her more, and as the bowl filled with warm soapy water her inner conflicts seemed to be leaning more and more towards fulfilling a fantasy she had never realized she had. \n\nIn only a few minutes of pregnant, apprehensive silence \u2013 on both our parts \u2013 the water bowl was full, the flannels, cloths and towels were ready, and Becky \u2013 in a manner that was more professional than I expected \u2013 made her way over to my bed, lowered the guard rails and pulled back the sheet. \n\n\"Alright then sweetie,\" she said with a smile that in no way hinted at the mental images she was still projecting, \"we need to get your gown off, so I'll need your help.\" If it wasn't for the ESP, any hints I may have picked up on in the conversations leading up to this would have instantly been forgotten, there was no hint in her demeanor or tone of voice of the plans she was still harboring for me. I nodded nervously. \n\nMy gown was one of those open back things, were the thin material covered everything in the front but left your ass exposed to the breeze and was only held together by a pathetic overreliance on a thin piece of string... that and a whole lot of optimism. However, as she explained the task to me, I started to appreciate the insistence on this particular garment. \"Right, so I'm gonna roll you over and I need you to use this hand...\" she stoked my right arm, \"... and hold on to the guard rail on the other side of the bed, hold yourself there for as long as you can while I undo the string and give your back a bit of a wash, then we can let you back down. Any pain or discomfort, let me know, is that ok?\" \n\nI nodded again. It would seem that my powers of speech had deserted me at this crucial time. \n\n\"Excellent.\" Another brilliant \u2013 albeit thoroughly professional \u2013 smile brightened her face, \"alright, here we go.\" With an impressive display of strength, she put both of her hand underneath my right shoulder and pushed \u2013 or lifted \u2013 me into a roll, as instructed, my right hand gripped hold of the guard rail on the left hand side of the bed as her hands moved to my back and waist to steady me. Once we were both satisfied that I was steady and in no real pain, she used only her one hand to deftly undo the strings on my gown, flip the loose side over the front of me and reach for a flannel. \n\nMy whole body flinched as the first touch of the warm wetness touched my back, eliciting a cute giggle from this siren of a nurse. Contrary to the comedy sketches I had seen on tv where a nurse basically scrubs and scours a patients body until they were red raw, Becky's touch was delicate, soft, almost affectionate, as she gently rubbed the flannel over the exposed skin of my back, all the while cooing and whispering soft words of reassurance and encouragement... I couldn't tell you why they were needed, maybe she assumed that I was in more pain than I actually was, maybe it is what she did with all her patients, but no matter how unnecessary they were, they helped to calm the nerves that had sprung in my chest since the first time I had read her thoughts. This would be a make or break moment for me, if anything other than a wash and a shave happened here, it would be proof positive that the voices in my head were hers... and not mine. \n\nMy mind was yanked back to the moment and my whole body shivered as she removed the warm flannel from my skin and dropped it back into the bowel, the cool breeze instantly contrasting the new heat of my back. She giggled again. \"sorry about that,\" she purred, \"lets get you back to a more comfortable position.\" Slowly \u2013 and following her instructions \u2013 I was lowered onto my back again, taking a deep breath and looking up into those dazzling green eyes, eyes which were dancing playfully in their sockets as she beheld my nervous face. \n\n\"Ready to show me what you're working with, handsome?\" she asked, her voice thick with sultry double meaning. She was obviously looking at and referring to my chest \u2013 or at least the top part of my body \u2013 but the entendre was so obvious that nobody \u2013 not even me \u2013 could miss it. \n\n\"No pointing, no laughing and no flash photography,\" I replied, trying my hardest to take Jimmy's advice about confidence and humor to heart, my ability to speak surprising even me. \n\n\"I'm sure that you will be more than enough to keep me busy.\" She giggled with a wink, reaching into the water bowel to get another flannel. Her empty hand reached up to my collar, grasping the thin material as it rested against my neck and \u2013 now that it wasn't secured behind me \u2013 started dragging it down my body, agonizingly slowly, eventually bunching it up between my navel and my groin. I made the mistake of looking down at it, and the situation under the sheets a little further south. \n\nAny horniness on my part, any flirtatiousness, any humor or the remotest feeling of happiness, vanished in an instant. My chest, my belly, my arms; they all looked like something out of a horror film with deep, angry looking scars \u2013 some with the stiches still attached \u2013 crisscrossed almost every inch of exposed skin, the deformities of damaged muscles and broken bones created bumps and recesses in my skin which not only weren't there before, but made me look like the stunt double for the hunchback of Notre Dame. My wide eyes, pale faced expression, the frantically flicking eyes and the loud gasp of surprise and horror pulled Becky out of any revelries she may have been feeling. ",
        "\"Oh my god!\" she said, almost chocking on the lump in her throat, \"I'm so sorry, I didn't think.\" She quickly reached down for the discarded robe, making to pull it back up to cover me before I stopped her with my hand, my eyes never leaving my own body. \"is... is this the first time you have seen them?\" she asked softly, \"your scars, I mean.\" \n\nMy powers of speech failed me again, although for entirely understandable reasons this time. I could only nod and try to blink the tears out of my eyes. \n\n\"I know it doesn't look like it at the moment,\" she said with a strangely effective reassuring smile, \"but they are healing really well, they will hardly be visible at all by the time you go home.\" She wasn't lying, at least not according to her thoughts; given the scale and severity of my injuries, these scars were actually pretty minor considering the damage that they belied. And given that I was still alive, breathing, conscious, fairly mobile and cognizant, I had gotten off fairly lightly in comparison to others she had seen after similar accidents. If her thoughts were to be believed \u2013 and I had no reason to doubt them at all, assuming that they were, in fact her thoughts \u2013 I should be considering myself pretty lucky. \n\nI managed to pull my eyes away with a force of effort that surprised even me, flicking them up to the concerned face of my beautiful nurse. I nodded weakly, in one gesture accepting her reassurances and giving her permission to continue. \n\nShe dipped the flannel into the wash bowel, squeezing off the excess water and bringing the cloth onto my chest. \"this one...\" she said softly, tracing the scar that ran vertically up my chest before disappearing from view beneath my chin, \"... is from the surgery to repair your ribs and stop the internal bleeding.\" I had expected her touch on such raw and angry looking skin to hurt, or at least be uncomfortable, but the warmth of the cloth and the delicateness of her ministrations felt nothing short of exquisite \u2013 if I closed my eyes and ignored her commentary, nothing I felt would indicate that there was anything wrong with me. \"The ribs feel like they're healing nicely,\" she continued, retracing her route back up the scar. \"No bruising or tenderness and the stiches have already dissolved.\" She smiled while she re-wetted the cloth. \n\n\"This one...\" she started again, this time following a jagged looking scar on my right side, \"was where the glass from the car window cut into you, it was the glass that caused most of the internal damage,\" her hands felt like they were not washing me as much as they were caressing me, and despite my shock at my appearance, her touch was staring to have a very visible effect. \"No, bumps or objects under the skin, looks like the surgery to remove the glass was successful.\" She smiled again as she moved the flannel over my ribs to repeat her actions on the opposite side of my body, one of the few places with no obvious scars \u2013 or at least no visible ones. Her tongue wetted her lips, making my manhood twitch... Becky noticed, her thoughts told me so and she was more than happy that I was enjoying myself, but she was happier still that it was her that was having that effect on me. Her outward expression \u2013 however \u2013 showed nothing. I was starting to understand why I had been so unlucky with women; I seemed completely incapable of picking up on the physical, non-verbal clues that they gave off, even now \u2013 knowing what I was looking for and knowing that the signs were there \u2013 I could see nothing. \n\n\"This one...\" she said, bringing my thoughts back to the moment as she lifted my right arm, \"...was from the surgery to save your arm. The car hit the tree right on the driver's door, so your right-hand side took most of the impact. Two broken fingers...\" her fingers laced the flannel between my digits, there was something distinctly erotic about her actions, especially considering the context they were given in and the running commentary to go along with them, \"... a broken wrist...\" she moved the flannel up my hand and onto the wrist, my whole body trembled, \"... broken radius...\" her hand stroked up and down my arm below the elbow, \"...badly broken humorous...\" same treatment for my upper arm, \"... and a broken collarbone...\" her hands moved up over my shoulder and onto the nape of my neck. She caressed there for a few moments before retracing her route back down my arm, turning it over to show me the clean and straight looking scar running up almost the entire length of my arm on the outside edge \u2013 the side of my arm not visible to me without turning it over. She leant in and placed a soft, delicate and affectionate kiss on the scar... \"almost completely healed.\" She finished with a smile. \n\nShe repeated her actions with the other side, apparently there was only some bruising and a bad sprain on that side, but I was hard pressed to hear her exact commentary as to reach that arm; she had to lean her whole body over mine, giving me a beautiful and unobstructed view down the top of her scrubs... her glorious c-cup chest encased in a seductive black lace bra displayed for my viewing pleasure. Again, her thoughts told me that she knew I was looking, she was happy that I was looking, she had moved into this position to allow me to look and she had hoped I would take the invitation. The skin above her bra rippled with goosebumps as her excitement level went up a few notches. But again, I would have gauged none of that from her outward appearance. \n\nWas I really that dense? \n\nYes, Pete... Yes, you are! \n\nHer hands started to move lower, slowly back over the scar on my ribs, over my abdomen, around my navel and onto my belly \u2013 which, even to my eyes, looked a little more muscular that I remembered, not that I had looked at it that often. She remained silent as her hands moved around my bell button, her bottom lips caught between her teeth and her cheeks flushing slightly; I had never been particularly ticklish, but the parts of my belly that would have been ticklish in most people become highly sensate erogenous zones when I was horny, my whole stomach flinching and my cock jumping as she found the first one. Her eyes sparkled and she seemed to spend and inordinate amount of time trying to find more. \n\nBy this point, the bulge in the sheets had grown into a full blown tent, prominent enough to film an episode of game of thrones in it, each time her hand found a sensitive spot, or each time her fingers brushed further south than normal \u2013 each time just shy of the area that would confirm my suspicions \u2013 it would twitch a little more, eliciting another smile and another seductive lip bite from my assailant. She was teasing me now and she knew it. \n\n\"Normally,\" she said, her eyes fixed squarely on her prize, \"we aren't allowed to wash a patient's 'private areas'.\" Her eyes rose up to meet mine, the mischief and hunger in them impossible to miss, even for me, \"In fact, I could get into a lot of trouble for even offering; but considering you aren't able to do it yourself...\" she paused for a few seconds with me hanging off every second of her drawn out question, \"would you like me to.. err... give you a quick 'freshen up' down there?\" \n\n\"As long as you are comfortable with it,\" I breathed, \"I wouldn't want you to get into any trouble.\" \n\nMoment of truth... if there was ever a time for her to back out, this was it. \n\nShe looked up at me with a wicked grin, her eyes dancing with desire and determination; for her, it was my last chance to back out and I had given her all the permission she needed. Her mind was singing with excitement and eagerness. \"I won't tell if you won't\" she winked. \n\n\"My lips are sealed.\" \n\nHer hand \u2013 which had never stopped its search for my belly's sensitive spots \u2013 started to slide further down, brushing aside my discarded and bunched up robe and pushing the sheet away from her prize. She was very happy with what she saw. \n\nI suppose it is relevant for me to mention here that I am not what most people would consider to be 'well endowed'. I am not small by any means, probably a little over average.; I had measure once, years ago \u2013 in the time before my failure with girls had sapped me of my confidence \u2013 and had been thrilled to find that at 6.5inches, I was officially above average in size, it was impossible to measure girth with a ruler but \u2013 to me at least \u2013 my package seemed to be well proportioned. I had no reason to be self-conscious about what I was packing, and so, I never was. \n\nBecky, on the other hand, had \u2013 by her approximation \u2013 been quite unlucky in her choices of lovers over the years, not that there had been many. But my manhood, straight, hard and proud, standing at full attention a few inches away from her wandering hands and hungry eyes, was at least an inch or two bigger that the most 'gifted' of her previous lovers. Mine wasn't the thickest she had seen, but my girth wasn't lacking by much... besides, Becky had always been firmly in the camp that said size wasn't quite as important as knowing how to use it, but she had always hoped to find a man with both attributes. \n\nI will see what I can do, my dear. \n\nHer hands moved lower, her fingers just edging into my pubes before pulling away \u2013 this was no time to abandon a good tease, after all \u2013 and moving over my hips, washing every inch of skin on my pelvis and upper legs. Her commentary had stopped as her hands moved inexorably towards her goal; my thighs \u2013 especially the insides of them \u2013 were apparently deserving of some special attention, with each movement up towards my groin stopping painfully close to my balls causing another twitch or increased hardness in my manhood, which in turn never left her hungry eyes. Even from my angle, I could tell that her entire concentration was focused on my dick's reaction to her ministrations. \n\nFinally, after what felt time an eternity of teasing, her newly wetted flannel made contact with my pubes; never actually touching my shaft but instead, reaching down to wash the crevasse between my balls and thighs, my nuts resting happily on the back of her hand as she worked. After an agonizingly long wait, she finally turned her hand and cupped the jewels, simultaneously drawing a throaty groan from me, and confirming all my suspicions in a single touch... I had been following her thoughts for the entire time, counting down the time between movements, picking her next target, drawing out the tease for as long as possible. She wanted me ready to blow before she... well... blew. \n\nHer flushed face turned back towards mine as my groan died down in my throat, the hunger in her eyes had turned into a look of pure need, way past the point of being accurately called desire. Everything that she had wanted, every fantasy that had kept her fingers busy and her pussy wet for the past few days, every hope was a few moments away from realization. \n\nHer hands cupping my balls slowly \u2013 very slowly \u2013 moved up, her delicate, yet powerful fingers circling my shaft and climbing my pole with such slow deliberation that I almost begged for release. She knew exactly what she was doing, both to me and to my cock. After what seemed like an eternity, she reached the tip; holding there for a few seconds before lowering her hand to pull back my foreskin and 'washing' my sensitive head thoroughly, albeit slowly and seductively, before retracing her route back down my shaft and starting again. \n\nAfter a few 'pumps' she turned her head back to mine, her bottom lip firmly caught between her teeth and her cheeks flushed. \"That doesn't look comfortable,\" she smirked, gesturing down at my organ, still being held by her expert hand, \"we definitely aren't supposed to continue if the patient becomes aroused, but... err...\" this was it, her mind was screaming, the absolute last chance for either of us to back out. If I said anything other than 'stop', I was hers and she would do with me as she wished. \n\n\"I would definitely appreciate the help.\" I managed to say through gritted teeth. \n\nHer smile widened, her breathing instantly became noticeably heavier and the flush in her cheeks deepened. She leant down, her head millimeters away from my ear, \"just to be clear,\" she whispered as her hand started moving again, more deliberate this time, \"you want me to make you cum?\" \n\nThe change in her demeanor should have shocked me, and it probably would have if it hadn't been for the thoughts that had been screaming at me since she entered the room. \"Yes.\" I growled, the pleasure from my cock becoming almost blinding as soon as she started moving. \"please!\" \n\nShe giggled, \"Anything for my favorite patient,\" she whispered again. \"Just lay back and enjoy.\" \n\nHer movements \u2013 if deliberate before \u2013 now became focused on the its sole mission of bringing me to release and my god! This girl was good. I guess medical knowledge helps when deciding exactly where, when and how much pressure to apply because in all my years of masturbation, I had never come close to giving myself this level of pleasure. \n\nWithin moments, the clear fluid of my pre-cum started bubbling slowly from the tip, not enough so start dribbling down the sides \u2013 I had never been one to over-secrete \u2013 but easily enough to make itself known; her hand cupped over it on one of her upward motions, collecting it onto her palm with one deft movement and then spreading it over the head and down the shaft as her hand made her way back down to the base. \n\nBy the time her hand had made its way back up, there was another secretion waiting for it. Her eyes flashed back to mine, her spare hand coming up to her lips with a single extended finger, \"shhhh\" and \u2013 with a smile and a mind full of delirious levels of sexual excitement and hunger - her head quickly moved down my body. Her hair fell over her face \u2013 intentionally \u2013 obscuring my view but the gasp I let out well I felt her tongue on the sensitive underside of my helmet told her that I felt everything, even if I could see nothing. She flicked the tip of her tongue over my tip, licking up the waiting nodule of precum, swished it around her mouth, moaned in approval and then \u2013 sweeping her hair behind her ears to finally give me a good view \u2013 moved lower. Her tongue made contact with my balls, lapping around the sensitive skin before dragging the flat of her tongue slowly up the shaft, punctuating the movement with soft, yet passionate kisses as she went. \n\nHer eyes \u2013 far from what I had seen in porn \u2013 never left her task, if she couldn't see what she was doing, she closed them, her entire concentration dedicated to making this not only as pleasurable for me as possible, but enticing me to repeat performances in the future. This may not happen again at work, she thought, but it was certainly going to happen again somewhere. \n\nWith the only exception to the eye discipline, she looked towards me with an expression of hunger and amusement at my look of anguished pleasure before engulfing the head of my cock in her mouth, shutting her eyes again and pushing down. \n\nOh shit, oh shit, oh shit! She's going for it; she's trying to get as much of me in her mouth as she can! Holy fuck, this feels good! Urgh, what the hell is this woman doing with her tongue?!? Fucking hell, she needs to quit her job! She would make a fortune giving classes on how she does this. \n\nWith each slow bob of her head, she took more and more of me into her mouth, on the fifth or sixth descent, she achieved what I had always thought to be the impossible outside the adult art studios. With her lips pressed into my pubes, her tongue working furiously on my shaft and the short, labored breaths ticking the skin on my thighs, she became the first woman in my life to attempt \u2013 and succeed \u2013 to deep throat me. My groan - louder than it probably should have been \u2013 annunciated my approval as she slowly brought her head back up, sucking hard the entire length before repeating the action. It was almost too pleasurable to cum! \n\nThis continued for another few minutes, although I had no real concept of time by that point, before she pulled off, her hand slowly working me in place of her vacant mouth. \"fuck, you taste good.\" She mumbled, as if she was speaking to my cock and not to me. \"Now I really shouldn't be doing this, but I need you inside me!\" \n\nWith a quick, deft motion, her scrub pants were pushed down and flicked off her foot, her top disappointing me by instantly falling down to obstruct my view of her womanhood, but the scent of her arousal immediately made itself known as it filled the room and caressed my nostrils. She hoisted a knee on the bed, pulled herself up, lifted her other leg over my waist to straddle me and her hand reached down to grasp my cock, aim it at her entrance and push it home as she slowly sank down. \n\nIf there was ever any doubt at her level of arousal, the incredibly wet tightness of her sex would have instantly dismissed them as she slowly impaled herself on my dick. \"Big...\" she breathed breathlessly \u2013 if that's even possible. \"so fucking big!\" she held herself still for a few seconds allowing her pussy to acclimatize itself to the new intruder, her mind was howling in pleasure, small, almost undetectable orgasms rippling through her body as the sensations she had been envisioning for so long finally came to life. \n\nFinally, she came to her senses, no longer completely consumed from the feelings emanating from our coupling, her eyes flashed at me; a look of desire, awe and \u2013 strangely \u2013 gratitude. Even though I was almost motionless in her efforts so far, I was allowing her to live out a fantasy that she had never considered until meeting me \u2013 living out her fantasies, I quickly learned, was not something that any of her previous lovers had shown much interest in. Of course, there was no way I could normally have known that, and there was no way that she knew that I was aware of that now, but the feeling was there and neither of us were going to argue with it. \n\nShe lifted herself up, almost removing me from her sheath, before dropping back down with a wet slap. \"Oh fuck,\" she muttered to herself, she repeated the motion again, another \"fuck!\" escaping her lips, each \"fuck!\" becoming more breathy with each bounce and each bounce becoming increasingly enthusiastic as she allowed herself to be consumed with the pleasure that \u2013 up until now \u2013 only I had been privileged with. Bounce, slap \"fuck!\", bounce, slap \"fuck!\", bounce, slap, \"Fuck\", faster and faster, harder and harder, each bounce down met with a thrust up from me, her eyes flashing open on the first one and clenching closed again as her first orgasm approached rapidly. \n\n\"Fuck fuck fuck fuck fuck, I'm gonna cum!\" she whispered as loud as she dared, \"oh fuck, make me cum, makemecum, makemecummakemecummakemecum... Uuuurrrggghhh yes!\" her whole body tensed up, her chest flushed a bight hue of pink as she arched her back and her pussy started clamping rhythmically around my cock. She took a few moments to compose herself before she started moving again, this time grinding her pelvis into mine, her clit rubbing against my pubes and never breaking contact. \n\nBecky had never been multi-orgasmic, she usually came once \u2013 if at all \u2013 and that was it, so as far as she was concerned, the rest of our rut would be her working to get me off. With another devilish grin, she lifter her scrub-top up, for the first time exposing the thin patch of well-groomed hair above her slit and tossed it aside. Reaching behind her back, her bra quickly followed, I had to clench my groin as hard as I could not to cum right there; her tits were stunning; large C-cups of teardrop shaped perfection, topped with dollar sized, goose pimpled areola and rock hard, pencil eraser sized nipples jutting out into the warm air. She noticed me staring, giggled \u2013 and also warmed by my appreciative gaze \u2013 took both of my hands and placed them on the promised land of her chest as her grinding intensified. ",
        "I groped her tits, squeezing the soft pliable flesh with wanton need and pinched her nipples, not hard, but hard enough for her to notice and elicit another guttural groan, her thoughts telling me that I could go a little harder than that if I was feeling brave... I was feeling brave so happily obliged, her mind melting under the combined pleasure from her nipples and pussy yet singing in the knowledge of her finally finding someone who knew how to fuck properly. She closed her eyes. \n\nYou would normally think that a woman's mind drifting to another place while you fucked would be off-putting, especially if you could see those thoughts; but the visual imagery coming from Becky's mind was pure erotic filth! She had known from the start that I would never be able to give her what she truly wanted in my condition, it was simply not physically possible, but what she truly wanted was something to behold! \n\nThe images came thick and fast; A bedroom I didn't recognize with a large double bed, her laying on her back on the edge of the bed, her legs spread as wide as she could hold them, me feasting on her cunt \u2013 her word, not mine \u2013 and standing up, her juices spread across my face. She would pull me down, kiss me hard, licking the remnants of her pleasure off my stubbly skin \u2013 she likes stubble, I'll have to remember that \u2013 then lining myself up with her dripping hole and pounding into her as hard as I could, she would scream and howl in pleasure, pulling her legs back as far as they could, almost behind her own ears as I pummeled her dripping sex, I wouldn't cum in her, she loved the feeling but she wanted it dirty, I would whip out my cock at the last minute, she would dive off the bed and onto her knees infront of me, engulfing me to the root in one motion and once again, tasting herself on me, I would roar out my orgasm just in time for her to pull me out of her mouth, she would close her eyes, keep her mouth open and accept everything I had to give her... letting it land wherever it landed. She wanted to be covered, she wanted it all over her face, her tongue, in her hair, she wanted to be able to smell me on her skin for as long as she could. \n\nHer body trembled as another small orgasm crested in her pussy, the contractions on my cock pulling me out of her fantasies. By the time I had gone back in they had changed; now we were in a kitchen, she was cooking food and I had come over unannounced, I walk up behind her, she's wearing a skirt and I lift it up, she isn't wearing panties... she never wears panties at home. \n\nI spank her, hard. Her knees tremble in anticipation as I fish my monster cock out of my pants, I haven't come over to be romantic, this isn't a date... I am here to fuck! To use her cunt for my own pleasure and she is grateful to be along for the ride; she is already wet, she can feel her juices dripping down her leg as I line my dick up and ram it in. She wants it hard! She wants it so hard that her pussy hurts the next morning, she wants to be sore! She wants me to fuck her until her legs give out, but this isn't about her, this is about me! And she will take whatever the fuck I give her! But I give her everything, I pound into her, harder and harder, faster and faster, both of us speeding towards our mutual release... \n\nAnother orgasm crashed into her body, ripping us both out of her fantasies, her eyes glazing over as a silent scream escaped her lips and my groin was bathed in warm fluids. When her eyes refocused, they looked down on me with awe... she had found her man and she was going to make sure he came back for more. \"Don't cum in me,\" she whispered breathlessly, \"I want it in my mouth!\" \n\n\"I'm getting close.\" I replied through gritted teeth. I was honestly surprised I had lasted this long, her fantasies alone would normally be enough to send me over the edge, but coupled with the pulsing ripples of her climaxing pussy, they were enough to get me within a hairs breath of finishing. \"Fuck, you feel good!\" \n\nShe leant forward, her pendulous tits rubbing against my chest as her lips pressed into mine, her tongue demanding access to my mouth to wrestle mine for a few seconds before she lifted up slightly. \"Does that feel good, baby?\" she purred, fully sated and amazed that I hadn't exploded long ago, \"Does my tight little pussy feel good?\" \n\nI could only nod. \n\n\"Do you like fucking my slutty little mouth and my dripping wet cunt?\" \n\n\"Oh fuck.\" I whimpered, my cock twitching at the use of the expletive, \n\n\"Does my cunt make you wanna cum?... I am going to take it all in my mouth! I am going to swallow every last drop!\" she tormented me, annunciating every syllable. \n\n\"I'm there!\" I announced with barely a second to spare, \"I'm gonna cum!\" \n\nShe moved faster than I ever thought possible, in a flash she was back on her feet on the side of the bed, her mouth attaching itself to my cock and engulfing me in a single breath. My toes curled, fireworks went off behind my tightly shut eyes, my back arched, and my cock expanded as I took my last breath... and then release. I didn't cum, I erupted! 8 long weeks without release, nothing like this in the 20 years before that, visions of this sexual goddess's fantasies echoing through my mind all culminated in rope after rope after powerful rope of cum exploding from my cock and into Becky's mouth, an appreciative moan coming from her throat as she took as much as I had to give... and I had a lot to give. She held me between her lips, her tongue playing on my head as the aftershocks of my orgasm flexed my cock, depositing the last of my seed into her mouth. \n\nHer hand came up, gently squeezing my balls for the last of my essence, circling my shaft and dragging it up my length and onto her tongue... she savored me, her mind a blaze of pleasure and satisfaction as she allowed herself to taste me; not just let me cum in her mouth, but really taste me, her tongue swirling around my cock not to give me more pleasure before I became too sensitive, but to move my semen to different parts of her tongue so each of her taste buds were bathed in my scent. She allowed it to fill her nose, she wanted to be reminded of this feeling \u2013 and our coupling \u2013 for as long as possible, she wanted to bury her fingers into her thoroughly used and well sated twat as soon as she got home and still be able to taste me while she was doing it. A man's cum was the most intimate part of him, and drinking it, making it part of you without the biological function of procreation, was the most intimate act a woman could give to that man... that Becky could give to me. \n\nIt was only the softening of my member that prompted her to swallow; in one large gulp, it was gone, her mind reeling in delight at the aftertaste and the promise of its longevity. Her eyes \u2013 no longer consumed with their task \u2013 flashed up to me, both them and her lips smiling in euphoric happiness. \n\n\"that was incredible\" I breathed, still waiting for my heart to stop pounding in my chest. \n\n\"For you and me both.\" She grinned. She looked down to her feet, found her top and lifted it up to check the time. \"I've got about ten minutes to get back\" she sighed, gave my flaccid cock a gentle kiss before tucking him back under the sheets and making to dress herself. \"I'll leave the beard trimmer and razor here for you, we aren't allowed to use razors on patients...\" we both burst into laughter at the absurdity that that was the rule she chose to follow. \n\nIt took another few minutes for us to repeat the roll maneuver again so she could reattach my robe, make me decent for any visitors I may have later and check her own appearance before she sauntered back up to the bed. \"that was amazing,\" she beamed, \"if you ever need more help, make sure you let me know.\" With a wink and smile, she sashayed out of the room, the seductive sway of her ass not as intentional this time, just a side effect of the glow that filled her every being, a glow that she had not felt before but instinctively knew was the glow of being thoroughly well fucked... it was a glow she had every intention of getting from me again. \n\nAs the door swung shut, I slumped back into the bed. \n\nSo... Pete... it turns out that you can read people's minds. You should probably be far more concerned by this fact than you actually are. On the upside, you have just been fucked senseless by the hottest chick you could ever have hoped to score in the old days... so... there's that. Guess we'll have to see where that leads you, in the meantime, better get shaving... and don't forget the stubble. \n\nI picked up the trimmer and mirror and got to work. \n\nThank you for reading NewU Part 2. \n\nAs always, comments, suggestions and constructive criticism are always welcome, as would be any offers of an editor; the many \u2013 the annoyingly, infuriatingly many \u2013 spelling and grammar mistakes in the last chapter (and probably in this one as well) has highlighted the need for a second pair of eyes... if those eyes came with breasts, all the better... no offence guys, but the story has to appeal to women as well. \n\nHowever, many hands make light work... so, if you're interested in becoming an editor, send me a message through my profile and I will get back to you, it is very unlikely I will turn any offers down. \n\nPart 3 should be up shortly. \n\nUntil then, thank you for reading and I hoped you enjoyed. \n\nThe Novalist."
    ],
    "authorname": "TheNovalist",
    "tags": [
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/newu-pt-02"
}