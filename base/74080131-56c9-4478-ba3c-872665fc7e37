{
    "title": "Life's Changes Ch. 12",
    "pages": [
        "I woke up the next morning alone in my bed. Bill was nowhere in sight, Pam wasn't there with my coffee either. I figured that they were still out on their morning run. I went to the bathroom and relieved my self of my morning pee hardon. After wishing my cock away I took my morning shower. I checked myself to see if I need to shave my legs but I still didn't need to shave. When I walked back in the bedroom I found Bill bent over the back of the bedroom chair gasping for breath. I asked \n\n\"What's wrong are you okay.\" I could see Bill's tee shirt was soaked with sweat. \n\n\"You have to get rid of that girl. If you don't she may kill us all.\" He said between gulps of air.\n\n\"What girl, what happen?\" I asked \n\n\"I set a pretty grueling pace for them. Sorry Bill next time say something.\" Kim said from the doorway. She was leaning against the doorframe wiping her face with a hand towel. She was breathing hard but not near as bad as Bill was.\n\n\"I would have but I was too busy trying to catch my breath.\" Bill said still trying to get his breath back. \"Pam and I usually only do two miles how far did we go?\" \n\n\"Well I'm kind of winded so I figured about seven. I usually do ten. No wonder Pam dropped out after the first three.\" Kim said \n\n\"Where is Pam?\" I asked \n\n\"She's down stairs making breakfast. We didn't go very far, how far could I go.\" Kim said. \n\n\"Seven miles I never did seven miles before. Even when I was in high school.\" Bill said in shock then to me he said. \"You have to get rid of her she's going to kill me.\" \n\nKim laughed and said \"What doesn't kill you will only make you stronger.\" \n\n\"That's what I'm afraid of.\" Bill said but we all laughed Kim walked over to Bill and rubbed her hand over Bill's ass and said \n\n\"When I get done with you your going to be the sexiest she male walking. Now go take a shower before I see if that cock of yours can fit inside of me.\" Bill groaned then stood up and walked into the bathroom. Kim turned to me and said \"Exercise makes me horny and I love the smell of clean sweat. Not the kind where someone's been sweating all day but the kind right after a good run or work out.\" \n\nPam came in to the bedroom with my coffee and said after, giving me a kiss and a smile to Kim \"Good morning my Mistress here's your coffee and your fruit is waiting down stairs.\"\n\n\"Thank you Pam, you don't seem that winded.\" \n\n\"I've been back for a while I was when I got back. If there nothing else you would like I would like to take a shower now so I can get ready for work.\" \n\n\"That's fine. Go ahead I'll meet you down stairs.\" I told her \n\n\"Wait for me Pam.\" Kim told her then to me she said. \"We might as well shower together it'll conserve on the water.\" Kim gave me a lusty smile \n\n\"Just remember we all have to go to work today.\" I told Kim then turned my attention to my make up. After I was finished with my make up Bill came out of the bathroom and I said\n\n\"I'm going to contact the gnomes about the landscaping today is there anything special you want them to plant?\" \n\n\"You know how I love roses other than that no. Oh wait do you think they can put in a running track about two miles long and ten yards wide though the woods?\" \n\n\"I don't know I can ask. What kind of surface do you want?\" I asked \n\n\"I was thinking just dirt it would be a lot easier on the feet than Concrete or asphalt.\" \n\n\"I'll see what they say, if not maybe we can have Teven do it.\" I told him \n\nAfter I finished getting dressed and when down stairs. I sat to eat my breakfast while I spoke to the gnomes. By the end of the conversation I had agreed to let a band of gnomes move on to the property permanently which also meant I would have to let a flight of sprites move in as well since the sprites gave the light the gnomes need to do their work. So that meant there would be about a hundred gnomes and two hundred sprites on the property. The leader of the band of gnomes thanked me for letting them put in the track, because he said. The Trolls would come in with their bulldozers and tear up the place. If the gnomes did it, none of the tress would be killed and they could keep it looking perfect all the time. \n\nAfter Bill, Kim and Pam came down I told Bill about the track. Then I asked \"Has anyone heard from Mary this morning?\" No one had so I called Jenny \n\n\"Jenny, is Mary still there?\" \n\n\"Yes we just finished breakfast and she'll be home shortly. She's all ready for work, Jeri left about an hour ago so he could be to work on time. Oh and thank you, they were lovely. Jim really loved Jeri she was very sweet he said.\" \n\n\"I'm glad you all enjoyed yourselves. I was just making sure she was alright.\" \n\n\"Their both fine. What about dinner tonight any plans?\" Jenny asked \n\n\"We still have those steaks and lobsters we didn't cook on Saturday. We could cook them up tonight.\" I told her \n\n\"Ok that sounds good. Do you want me to make the hotel reservations for this weekend?\" \n\n\"No I'll take care of them. I want to try some place different.\" I told her. I didn't want to tell her that I wanted to try one of the hotels I owned. I thought it would sound like bragging. \n\n\"Ok love Mary's on her way home now. Jim's is going to drop her off. I'll talk to you tonight and thanks again. Hey just so you know I do love you.\"\n\n\"I love you to Jen. I see you tonight.\" I told her as I hung up \n\n\"Pam can you cook up the steaks for tonight?\" \n\n\"I didn't get the steaks or lobsters on Saturday I figured I could get them when we wanted them so they would be fresh.\" \n\nI handed Pam one of the credit cards that Sean gave me and said. \"See if Sharon and Sal want to come over and get enough for every one. You can keep that card for any purchases you make for the house hold.\" I knew she was going to argue with me \n\n\"Mistress our arrangement was for me to pay for all the food and anything I wanted.\" \n\n\"I just changed that arrangement. Do you have a problem with that?\" I could see Pam was fighting with herself. \"Pam if I find out you paying for something that I told you to use the card for I will be very displeased. Do you understand me?\" \n\n\"Yes Mistress I'll do as you say.\" Pam said as she submitted to my will. Mary came in just as Pam and I finished our verbal sparing. I turned to her and said \n\n\"Well how did you enjoy yourself?\" Mary's smile lit up her whole face \n\n\"It was wonderful. I hope it was ok that I let Jim use me for his pleasure this morning?\" She said as a blush came to her face. \n\n\"Of cause it was I'm glad you enjoyed yourself. Tonight I'll give you a reward for fulfilling my command. I also want you to help Pam in the kitchen tonight.\" When I said that I heard someone stomp her heel. I turned to Pam and said \n\n\"Was that you?\" \n\n\"Yes Mistress but it's my job to do all the cooking. You said so.\" \n\n\"I said that when there was just the three of us. I thought you could use the help. If you don't want it then you don't have to have it but I will not stand for you stamping your feet at me. Tonight you will submit yourself for punishment.\" I told her \n\n\"Yes my Mistress.\" She said as she caste her eyes to the floor, but I could also see a smile come to her lips. This was just what she wanted and I played right into her hand. The slut was looking for attention from me. I guess she deserved it since she hasn't had any in well over a week. \n\nAfter that I asked Kim if she was ready to go and she said she was. I kissed Mary and Bill good by, and then gave Pam a peck on the cheek. Not because I was mad at her but I wanted her to think I was. It was all part of the game. Once we were in Kim's car she asked \n\n\"Am I crazy or did Pam do that on purpose.\" \n\n\"Do you mean act up enough to get me to punish her?\" \n\n\"Yea it seems like she wants you to punish her.\" \n\n\"I think she was just looking for some attention and that was a way to get it. I can't blame her; I've been neglecting her lately. She does deserve some attention from me.\" I told her \n\n\"Do you enjoy punishing her?\"\n\n\"Not really. I get sexually excited when I paddle her or Bill for that matter but it's not something I crave. If I never had to do it again I wouldn't miss it.\" \n\n\"Then why do you do it?\"\n\n\"They enjoy it and it doesn't hurt me so why not. I'm a nymph I give my lovers what they want. As long as it's not to disgusting.\" \n\n\"I don't understand why some people like to be spanked. I let one girlfriend try spanking me because she liked doing it but it wasn't something I liked, it hurt to much.\" Kim confessed to me \n\nI don't understand it either but if they like it why not indulge them, they indulge me enough.\" \n\nAfter we arrived at work and we rode up in the elevator together I said to Kim as she was getting off. \"I'm going to try and leave work early today say around three. If you can't leave that early let me know.\" \n\n\"I'm going to try and stay down here as long as I can hold out. So I may not see you today.\" She said with a hopeful grin\n\n\"Ok I do need to come down for a work out around ten-thirty. So if you want to leave before I get there I'll understand.\" \n\n\"We'll see if I can hold out that long.\" She said with a laugh.\n\nOnce in my office I asked Ginger about my schedule. \"You have a farewell luncheon in the executive dinning room at noon. It's for Mr. Keys. Jeff wants to speak to you, I told him he'll see you at the luncheon but he wanted to speak privately with you. Other wise that's it.\"\n\n\"See if Jeff can come up early this morning. I want to try and get in a work out today.\" I told her \n\nI sat at my desk, bound and determined to get something done today. Twenty minutes later Ginger bussed me to let me know Jeff was here. I open my door and let Jeff in and locked my door as I closed it. Then I said so Ginger couldn't hear\n\n\"Strip I want to see if you did as I had asked.\" Jeff was wearing a dark blue suit with a white shirt and a tie. Once hearing my command he removed the jacket and tie and unbuttoned his shirt. Under the shirt he was wearing a white satin camisole. Once the shirt was all the way off I had him raise his arms and I found he had shaved his underarms. \n\n\"Now the pants.\" I told him. He went to take off his shoes I stopped him saying. \"Just drop your pants I want to see what you have on under them.\" \n\nJeff unbuckled his belt and undid the button on his pants and let them drop to the floor. He was wearing a pair of white satin panties under the white garter belt that held up white stockings. I then pulled his panties out so I could see his pubic area. His cock and balls were clean-shaven as well as the rest of the area. Jeff was starting to get an erection. I could see it swelling as I looked at it. It wasn't a monster cock like Bill's, but he definitely wouldn't be embarrassed by it either. \n\n\"How big will it get?\" I asked nodding to his dick. \n\n\"About eight inches my Mistress,\" He said with a blush coming to his face. \n\n\"Not bad, but you are going to have to learn some control over it. Next time put the panties on after you put on the stockings and garters this way you don't have to undo the garters to take off your panties. Ok now get dressed.\" Once Jeff was dressed I asked \n\n\"Did you enjoy yourself last night?\"\n\n\"Yes I did Mistress, Ginny was very patient with me. I believe she was happy with my efforts. Even though I was clumsy in my attempts to please her.\" \n\n\"What makes you think you were clumsy?\" \n\n\"I came to quickly when she wanted me to do her anally. And I gagged when I tried to do her orally. She must have enjoyed herself because I got flowers from her this morning.\" \n\n\"That was sweet of her. So I gather you'll like to do it again then?\" \n\n\"If that's what my Mistress would like I would love to give pleasure to whom ever she would like.\" \n\n\"Ok do you have something for me or was this visit so I would know you liked what happen and you want to do it again?\" \n\n\"I had a call from Sal when I got in this morning about setting up a interview.\" \n\n\"He's pretty eager. What position were you thinking of him filling?\" I giggled thinking about what a dirty mind could come up with to answer that question. Jeff realized where my mind had gone and chuckled too.\n\n\"I was thinking of putting him in the system information manager's spot if his references are any good he does seem to know quite a bit.\" That was Jeff's old position before he moved up to Department head. \n\n\"Ok have you set up a time yet?\" \n\n\"Two this afternoon. Do you want to interview him?\" \n\n\"No I think you can handle this if you have any problem don't be afraid to ask but I think you can run with this. I know you know your stuff when it comes to computers. So I'm sure you know what we're looking for when it comes to filling that position.\" \n\n\"Thank you for your confidence. Is there anything else you would like?\"\n\n\"Come over for dinner tonight. And tomorrow I want you to wear more feminine lingerie. Something in pink with lots of flowers.\" I saw a blush come to his face and then he said \n\n\"I was afraid they would show though my shirt.\" \n\n\"Then you should get a better quality of shirt or wear colored ones.\" I told him \n\n\"I'll stop on the way home Mistress. What time should I be there for dinner and what should I wear?\" \n\n\"Something pretty, a skirt would be nice. You could come over as soon as your ready, dinner won't be until seven-thirty or so. I want to see how feminine you can look with out magic. Ok go I have work to do and I want to get in a work out this morning.\" I said in a dismissive manner \n\n\"Yes my Mistress.\" He said before he bowed and went to leave.\n\n\"If you continue to bow to me I'm going to have your curtsy instead so make up your mind.\" I told him. Jeff gave me a small smile then left. \n\nI finally got to work, but before I knew it was ten-thirty. So I grabbed my gym bag and made my way down to the gym. I put on my work out sweats and went into the gym. I did my stretching then got on the Stairmaster. Two minutes in to my work out Kim came in and got on the other stair master. She touched my hand and I could see her visible relaxed. She must have been climbing the walls trying to stay away from me. I asked \n\n\"Do you feel better now?\" \n\n\"Yea, The guys in the other room are going to think I'm the biggest bitch alive by the time they're done.\" Then she looked over at the setting of my Stairmaster and asked. \"Do you always set it this low?\"\n\n\"Low this is on the medium setting.\" \n\n\"That settings for bored house wives that want something to do. If you want to put some firmness in those ass cheeks you'll need to go faster.\" She said as she reached over and turned up the speed of the machine. I kept up with it but just barely. Kim turned hers up even faster. We kept up the pace for twenty minutes then she reached over and turned mine down to the medium setting again. She turned hers down too, after a few minutes of the medium setting she slowed it down to a gentile pace then we got off.\n\n\"Not bad not bad at all. Now let's see what you can do on the tread mill.\" I looked at her and asked between breaths \n\n\"What is this some kind of test. Or are you just trying to kill me.\"\n\n\"I'm just trying to see how far I can push you. That's my job as personnel trainer.\" She said as matter a fact.\n\n\"Maybe I like the way I'm doing it and I don't want to be pushed.\" \n\n\"Sure you do. If you didn't want to be pushed you would have turned the speed down yourself. Now get you fat butt on the tread mill.\" \n\n\"My butt is not fat.\" I said as I walked over to the treadmill. Kim laughed as I got on the mill and she turned on the track. I started as a brisk walk, after a minute or so she turned up the speed to a slow trot. Then she turned it up to an all out run. I hated running, I hate it when my tits started flopping all over, which was when ever I ran. After five minutes of that I reached up and turned down the speed. \n\n\"What's the matter can't handle the heat.\" I would have answered but my main concern was taking in enough air to keep from passing out. After a few minutes of that she turned down the speed to a slow walk and then stopped the track. \n\n\"Not to good at running you'll get better. When you catch your breath we'll see how good you are at stomach crunches.\" She said as I groaned in protested to which she laughed and added \"Hey I told you I was good at what I do.\" \n\n\"I'll let you know right now I hate running. I hate it when my boobs flop all over.\" I told her when I could breathe and talk again. \n\n\"Then we'll have to get you a better support bra and that won't happen. And while we're at it you'll need better work out cloths those look like you've been training in them since you were in high school.\" \n\n\"I have a feeling I'm going to get a lot of complaints about you or no one's going to come in here.\" I told her as I lay down on a mat to start my crunches.\n\n\"Up. Don't worry about that I know just how far I can push someone. And I can push you pretty far. Down.\" Kim had me do about twenty crunches then had me do thirty pushups and said \n\n\"Your upper body strength is pretty good but you need to work on your stomach muscles, their kind of weak.\" Then looking at her watch she said \"You have twenty minutes to get showered and changed before your luncheon. \n\n\"How did you know about that?\" I asked as I started getting up. \n\n\"I called Ginger when you came in here, to see what time I had to have you back. Now if you don't get your fat ass in gear your going to be late.\" \n\n\"My ass is not fat.\" I said in more of a whine then in the confidence I felt. I heard Kim laugh as I made my way to the shower. What a bitch she was, I had a good mind to leave with out her then she'd play hell trying to catch me. Then I remembered we came in her car. Ok I'll leave her here tomorrow. I said to myself. \n\nI made it to the luncheon just in time. Malcolm gave Keys a watch and a plaque. Then we all stood around talking. I stood holding a glass of punch talking to Mike. The glass was shaking as my muscles unwound from my work out. Malcolm came up to me and asked \n\n\"Are you ok? You looked all frazzled at the edges and that glass looks like it's going to come out of your hand.\" \n\n\"I'm fine I just had a work out with the bitch from hell. I think I need to find a new trainer.\" Malcolm laughed and said \n\n\"Sounds like she's just what we need.\" \n\n\"Oh yea, give her a try. The worse part is she knows all the right buttons to push.\" \n\n\"Sounds like she just what we need. Maybe she can get some of these people in there. Don't fire her yet let's see how she works out first. Maybe she pushed you harder because you've trained more.\" \n\n\"If she says I have a fat butt one more time I going to put out a contract on her.\" I told him half serious. Malcolm laughed and said \n\n\"If she said you have a fat butt I not going anywhere near her.\" \n\n\"Oh big talk from the guy that says I should keep her on.\" Malcolm laughed along with Mike then Malcolm said \n\n\"Seriously give her a couple of months to see how she relates to the other employees.\" \n\n\"Ok but if you hear I had her killed don't say I didn't warn you.\" Malcolm chuckled and started to walk away. I grabbed his arm and said to Mike. \"I need to talk to Malcolm.\"\n\n\"Sure I need to talk to Keys anyway.\" After Mike left I turn to Malcolm and asked \n\n\"How much arm twisting did you have to use to get Keys to retire?\" \n\n\"Very little he was just bidding his time so he could get the full retirement package. When I offered to give him the full pension plus six months pay and to buy back all his stock at face value he jumped at it. He's going to retire one very rich man.\" \n\n\"That was very generous of you.\" I said \n\n\"You did say to make it worth his wile. The estate will buy back the stock then sell it at the next offering. If we merge again the price should double and your estate will stand to make a pretty good profit. He's happy, your estate's will be happy so we all make out.\" ",
        "\"Do you know of any mergers in the making?\" \n\n\"No nothing that I've heard of but you know the market anything's possible.\" I thanked Malcolm then went back to my office.\n\nI called one of the hotels for reservation. The first person I talked to was stand offish almost as if he was too good to take my call. Once I gave my name his whole manner seem to change.\n\n\"Mrs. Macon if it's not to much trouble would you hold for the hotel manager please.\" I told him I would hold. I wasn't too happy about the way I was treated to start with.\n\n\"Mrs. Macon I'm sorry to keep you waiting. My name is Stanley the hotel manager. How my I be of service to you today.\" I heard over the phone after I waited exactly two minutes.\n\n\"I would like to reserve some rooms for this week end if that is possible.\" I told Stanley \n\n\"This is kind of short notice ma'am. I'll see what I can do? How many would be in your party.\" I told him at least ten. \"Oh I'm sorry I have nothing available for that many for this week end at the hotel, but I do have a few houses in the area that would be quite comfortable. The only problem would be there is no room service.\" \n\n\"A house sounds nice and I guess we could bring food with us.\" I told him I'm sure he could hear the disappointment in my voice. \n\n\"Oh no need to bring food Ma'am I could have food sent in if you could tell me what you would like.\" \n\n\"I myself can't eat meat seafood is ok, everyone else can eat just about anything. We would need mostly finger foods. We'll also need chilled wines and soft drinks and lots of coffee in the mornings, breads and pastries as well.\" We discussed several things then he told me the address of the home and that it will be ready by ten on Friday. I thanked him and hung up. \n\nI did manage to get something done before Kim came in at three. \"Ready to leave?\" \n\n\"I guess so.\" I told her with a little hate in my voice \n\n\"Oh don't tell me your still mad at me.\" \n\n\"Yes I'm still mad at you. I work hard to keep my butt looking good.\" Kim came over and sat down on the corner of my desk and said \n\n\"Look I'm sorry I said you had a fat ass. It's really very pretty, but I know if I said you had a fat butt you would work harder. You don't like people making fun of you and to keep them from making fun you'll work harder. Some need to be told there always doing a good job to get them to work harder. With Bill all I had to say was, if a girl can do it you should be able too, and then he tried harder. It's all how you motivate some one. So I won't say you have a fat ass any more ok\" I told her Ok \"So let's get going chunky butt.\" I was about to say something when she laughed and said \"Come on we have to get you a decent training bra to keep those little tits from flopping around.\" \n\n\"They may be small but at least they won't be hanging down to my knees when I'm older.\" I told her which had us both laughing. \n\nWe left work and drove to a sports apparel store. \"What size do you wear?\" Kim asked I told her a two she said. \"Maybe we should go to the kiddie department.\" I stuck my tongue out at her. \"Oh now that brings back some very pleasant memories.\" \n\n\"If you keep making fun of me you'll never feel it again.\" I told her \n\n\"Now that's hitting below the belt. Here try these on.\" I looked at the size and said \n\n\"These are a one, I take a two.\"\n\n\"Look just try them on if they don't fit then I'll get you bigger ones.\" \n\nKim followed me into the dressing room. As I stripped off my suit I left on my bra and panties. Kim told me to take off the bra. I slipped on, or should I say pulled tugged and yanked the shorts till they were finally on. They hugged tightly to my hips and legs. They were the shortest, tightest pair of shorts I ever had on.\n\n\"I think they're to small.\" I told Kim \n\n\"No they're perfect, now try on the top.\" I pulled on the top that was also very tight. It compressed my breast against my chest till it looked like I didn't have any tits at all. \"That should keep those titties from bouncing. Go ahead and get dressed and I'll meet you out side. Oh do you happen to know what size Pam Mary and Bill wears.\" I told her as I pulled off the top. \n\nOnce I was finally dressed I found Kim with a shopping cart full of cloths. \"Who are all those for?\" I asked \n\n\"Five sets are for each of you. Now let's get you some cross trainers.\" On the way to the shoes Kim picked up a pack of athletic sox. Ripped open the package and handed me a pair. After finding just the right pair for me, and also a pair for everyone else. Kim and I made our way over to the check out. \n\n\"Well I see you found a new toy to play with Kim.\" Then to me the sales girl said. \"Leave her now before she breaks your heart.\" \n\n\"Gina, don't be this way I told you right from the beginning I was not looking to settle down with someone.\" Kim said to her. Looking at me Gina said \n\n\"You look like a smart women, get rid of her before you fall in love with her.\"\n\n\"I've been trying to get her to leave, but she just won't go.\" I told the girl which was true\n\n\"Then you're a better woman then I am. She left me quicker that I could shake a stick.\" Gina said with a note of sadness in her voice. After I paid for my purchases and Gina packaged up everything and Kim and I left the store Kim said \n\n\"I'm sorry you had to go though that. She just doesn't understand I'm wasn't looking for a girlfriend I was only looking for someone to have sex with.\" \n\nWe drove to Kim's house in silence. After we loaded the mustang with everything we could we drove home. After we got home Kim gave out the work out cloths to everyone. We all help bringing Kim's cloths to her bedroom. When that was done I took Mary's hand and pulled her into my bedroom and said \n\n\"I'm going to take a shower would you like to join me?\" \n\n\"Yes Mistress I would.\" She said \n\n\"Would you like Bill to join us?\" I noted a slight hint of fear in her eyes but then she nodded her head. I started undressing as I called to Bill when he came in the bedroom I asked \n\n\"Mary and I are going to take a shower would you like to join us?\" \n\n\"I can't think of anything I would like more.\" He said\n\nAfter we took off all our cloths I noticed that Mary had a full growth of pubic hair. Bill had gone to start the shower as I said to Mary. \"The first thing we need to do is remove you pubic hair.\"\n\n\"You mean all of it?\" Mary asked as her hand went to her mound.\n\n\"Yes love just like Pam's and mine. I want you always to remain hair free.\" \n\nI took Mary into the bathroom and had her sit on the counter. I took my beard and mustache trimmer I used to use on my own mound before I shaved it all off. I ran it over Mary's pussy mound removing as much of the hair as possible. Mary's pussy was starting to drip cream as the vibration from the razor got her excited. When I removed as much hair as I could I grabbed my shaving gel and couple of new razors. Then I took Mar's hand as we went into the shower.\n\nIn the shower I put the gel and razors on the shelf then I turned to Bill and kissed him very passionately, while I still held Mary's hand. When I pulled away from him I kissed Mary passionately for the first time. Her lips were soft and pliable and she opened her mouth willingly to my tongue as it probed her mouth. I felt her body melt into mine as we continued to kiss. My hand went down to her soft ass cheeks and I pulled her closer to me. \n\nWhen we broke our kiss I turned her toward Bill. She tentatively kissed Bill on the mouth. Bill gently took her in his arms and kissed her as passionately as he could kiss any woman that wasn't me. Mary melted into him as well once she realized that Bill wasn't going to hurt her. As they kissed I ran my hands up and down their backs, occasionally I would trace the crack of their butt cheeks with my fingers. \n\nBill and Mary broke there kiss I saw the lust in Mary's eyes that said she liked kissing Bill I knew it wouldn't be the last time. I grabbed a wash puff and started washing Mary. Paying a lot of attention to her breasts. While I was washing Mary Bill was washing my back and bottom. When I had her as clean as possible I turned her toward Bill and started on her back. Mary started washing Bills face and chest; she stayed away from his lower half. \n\n\"Go ahead touch it Mary, It won't bite.\" I said as my soap slick fingers slid between the soft cheeks of her ass.\n\n\"It's so big. It's huge compared to Ginny's cock.\" \n\n\"I know baby, but it can't hurt you. Bill would never hurt you.\" I said as one of my fingers massaged Mary's rosebud. Mary's body trembled at my touch. I watched as her hand slid down Bill's chest and stomach to rest lightly on Bill's hard cock. Bill stood perfectly still as Mary's hand lightly ran over his cock. Mary looked up at Bill face and said\n\n\"This is the first cock I ever touched. I didn't touch Ginny's I forgot she had one till she put it in me. It's so hard, but so soft at the same time. Can I touch your balls too?\" She sounded almost like a child. Bill nodded his head I think he was afraid to speak. \n\nI watched as Mary's hand touched her first set of male testicles. She lightly grasped them with soapy hands. I continued to massage her rear passage with my fingers, only now I could feel her sphincter grasping at my fingers. I watched as Mar got more bold in her handling of Bill's balls then her hand moved back up to his cock and started stroking it. I let Mary continue till I saw that Bill was very close to cumming. I then pulled her back toward me causing her to release her grip on Bill's cock. I could see the disappointment in Bill's face. I said to him\n\n\"Bill love Mary needs her pussy shaved would you do the honors?\" \n\n\"It would be my pleasure.\" He said as he turned and picked up the gel and razors. Bill got on his knees in front of Mary as I pulled her back to rest against me I asked her \n\n\"Did you like playing with Bill's cock?\" \n\n\"Yes but I was hoping to see him cum. I really like what you've been doing back there on my bottom too.\" She said as she kissed my cheek. We stood there kissing ever once in a while as Bill removed what remained of Mar's pubic hair when he was done he said.\n\n\"All done, now your as hairless as the day you were born.\" \n\n\"Are you sure there's no hair left down there? I think you should check to be sure.\" I told him. Bill understood what I was telling him to do. \n\nBill took his tongue and licked all around her. Then I watched as he covered her slit with his mouth. Mary moaned deeply as I felt her tremble. Her ass hole clinched at my finger, I swear trying to coax it inside. I held back waiting for when she was about to cum. \n\n\"Oh god that feels so good. Bill you're so good at this.\" Mary said as her hips started to grind her pussy onto Bills face. Mary's body really started to shake now as her orgasm got closer. When I felt she was as close to orgasm as she was going to get. I plunged my thumb up her ass pushing her over the top. \n\n\"Oh god oh fuck oh shit fuck god.\" She screamed as she grabbed Bills hair with both hands and pulled his face tighter to her. My thumb pumped in and out of her as I felt her ass hole grip it tightly. It was too much for her to stay up right. She collapsed to the floor of the shower dislodging my thumb from her ass and Bills mouth from her pussy. Mary threw her arms around Bill as she continued to tremble and if I'm not mistaken she was crying too. When she seem to calm down some I knelt down next to her and asked.\n\n\"Are you okay I didn't hurt you did I?\" Mary looked at me with glazed over eyes and said\n\n\"Oh god no I never felt this good before. It was so wonderful what you both did. I'm crying from shear happiness.\" Mar then threw her arms around me and held on to me. Bill stood up as the tile floor of the shower was starting to hurt his knees. I looked up at his cock it looked so yummy I wanted to take it in my mouth and suck it dry. But I wanted Mary to try it first. I said to Mary \n\n\"I think Bill need's to be checked to see if he needs a shave.\" \n\nI'm not sure if it was the after affect of her orgasm or what. But the next thing I knew Mary was on her knees licking all around Bill's cock. I sat back on my heels and watched as she ran her tongue all over him. She touched every inch of skin from his belly button to his balls. I watched as she ran her tongue all over his cock then I watched her lick his balls. She even took them into her mouth one at a time. Then I watched as she lifted his balls out of the way and forced him to spread his legs so she could lick between his legs. \n\nAll this time Bill's cock was getting harder and bigger. The head was purple with his need to cum. Mary now finished with her inspection knelt back slightly then thought a moment. Then she took the head of Bill's cock in her mouth and sucked it like one would an ice pop. This move took both Bill and I by complete surprise. \n\nWe both watched Mary as she forced two or three inches of Bill's fat cock into her mouth then sucked back till just the head was left in. We watched in disbelief as Mary continued to suck on it for a few moments. Then I heard Bill groan. I looked up and saw his eyes closed tightly as he concentrated on not cumming. \n\n\"Mary Bill's going to cum is it ok?\" I asked. With out a thought Mary nodded her. \"I mean is it okay he cums in your mouth?\" I asked again. And again She nodded her head quickly. I grasped Bill's cock in my hand, the part the wasn't going in Mary's mouth and said \n\n\"Cum Bill cum in Mary's sweet mouth.\" Immediately I felt Bill's cum squirt out of him. I felt each load of cum passed my hand on it journey into Mary's mouth. I watched as the first one hit the back of Mary's mouth. Her eyes popped open as it seared her throat. I watched as she swallowed it right down as the next load went charging past my hand. \n\nIn all I felt eight or nine squirts of cum pass my hand and Mary missed not a drop. Not the slightest drip of cum slipped passed her lips. When Bill was done and I do mean done I watched as Mary tried to suck out some more. Finally Bill collapsed against the wall of the shower pulling his quickly softening cock from Mary's hungry mouth. I asked Mary\n\n\"Do you want to explain what just happen?\"\n\n\"I'm sorry I get like that when ever I use my mouth on some one. Deb said I had an oral fixation. I'm not sure what it is but I love giving head. I thought it was just to women but now I guess it also goes for men too.\" \n\nI helped Mary to her feet then I turned off the shower because it was starting to get cold. As I stepped out of the shower with Mary in tow I asked Bill \"Are you coming?\" \n\n\"Give me a minute I'm still trying to get the feeling back in my feet.\" Mary and I laughed at that. \n\nMary and I rubbed moisturizer on to each other. I made sure to give her a good dose between her legs so she didn't get razor burn. Then I had her turn around and did her back, her lags and her bottom. While I was doing her bottom Mary leaned over and rested on the counter top and started to tremble slightly. I said \n\n\"Don't be scared I won't hurt you.\" \n\n\"I'm not scared I just remember how good your finger felt up there.\" I almost laughed but didn't as I slid my lubricated finger between her cheeks. As one of my fingers touched her hole Mary pushed back taking it inside of her. I worked that finger in and out of her then slid in a second. Mary purred her contentment so I asked'\n\n\"You like that don't you.\" Mary purred her yes so I asked \"Would you like to try a butt plug tonight. We can put one in before dinner and you can take it out before you go to bed.\" \n\n\"Will it hurt?\" \n\n\"I'll use a small one tonight and if you like that then we can put in bigger ones later.\" I told her and Mary agreed to try it. I pulled my finger from her as she groaned in protest. I then washed my hands and grabbed a hand towel as Mary followed behind me. We went into the bedroom just as Bill was getting out of the shower. I walked over to my toy box and pulled out a butt plug not the smallest one but the next size larger. It was no more then the width of my two fingers and maybe a little more. I also got the tube of anal lube. I had Mary lie down on the bed as I got on the bed with her. \n\nI didn't wasted any time as it was already six ten and I'm sure there will be others waiting down stairs. I applied the lube to my fingers and slid them into Mary's hole. If my suddenness hurt her she didn't show it as her bottom rose to met its invader. After finger fucking her for a few minutes I lubed up the butt plug and slid it in to her hole about half way. I began to work it in and out adding more on each inward thrust till just the thick knob at the bottom was left. I pushed the last bit in as I watched her hole stretch open then close between the knob and the bottom flange. Mary grunted at the very last. \n\n\"Are you ok?\" I asked she nodded her head \"not to painful I hope?\"\n\n\"No just very full and I feel like I have to go to the bathroom.\" She said with a smile on her lips.\n\n\"That will pass. I hate to seem cold hearted but we really need to get dressed before someone comes looking for us.\" I told her. Mary went to sit up and gave a moan and I asked \"Are you okay. Do you want to take it out?\"\n\n\"No, it feels great especially when I sit on it.\" She said as she wiggled her bottom on the bed. I looked over and saw Bill watching us. \n\n\"Would you like one too love of my life?\" I asked him \n\n\"If it's not to much trouble?\" He said as his face blushed up \n\n\"You're never any trouble sweet heart. Pick out the one you would like. Mary, go and get dressed please.\n\n\"Yes my mistress. What would you like me to wear?\" She asked \n\n\"Something very sexy please.\" I told her \n\n\"I don't own anything sexy. Deb wouldn't allow it.\" \n\n\"Well that will change this weekend. Go put on the sexiest thing you have.\" I watched as she left the room. Her ass swung in a way I never seen her ass swing before. I then turned my attention to Bill. \n\n\"After I punish Pam tonight would you please fuck her till she can't walk. We've been neglecting her lately.\" Bill handed me the biggest butt plug I had and said\n\n\"You keep asking me to do these really hard jobs around here I don't know how much I can stand.\" He said with a laugh \n\n\"Do you really want this huge thing inside of you?\" I asked holding the plug that he gave me.\n\n\"Yea I figured that someday your going to want to fuck my ass and I want to be prepared. Besides I like how it feels up me too.\" \n\nI installed the plug in his ass, which was a job, as it seemed not to want to fit. I slapped his ass several times for good measure and because he like it. When he turned over he was fully hard and I said \n\n\"Sorry but we don't have time to take care of that right now.\" Bill laughed and said \n\n\"It's ok I think that butt plug is inside my cock. Dam that thing is big. I never felt this full. But I definitely like it.\" \n\n\"I'm going to take a quick shower to rinse off the sweat I worked up getting that thing in there.\" I told him \n\n\"Maybe a quick cold one will get this thing back down.\" he said as we once more jumped in the shower. \n\nFive minutes later I was putting on my stockings. I know what you're saying why bother I'm not going anywhere. I put them on because I like how they feel and Bill likes how they look on me. Once the stockings were on I put on a short leather skirt and a crop top sweater, both in red. I then put on a pair of short heeled sandals and that was all, no panties no bra. I then but on lip gloss and did my eyes and I was ready to go. Glenda took longer to get ready so I said \n\n\"I'll meet you down stairs. I may send Jeri up if her make up isn't right is that ok.\" He said it was \n\nI went down to the kitchen and found Pam beside herself trying to get everything ready. Her hair was a mess and cloths were filthy. I looked at her and said\n\n\"I guess you should have taken that help I offered earlier.\" Pam looked at the floor and said ",
        "\"I'm sorry for acting out this morning and you were right about me needing help.\"\n\n\"I sorry you're sorry but you will have to be punished. Would you like that help now you look like you could use it.\" I told her \n\n\"Yes my mistress I would greatly appreciated it.\" She said almost in tears \n\n\"I'll ask Mary to give you a hand. Please be nice to her. \" \n\n\"Of cause Mistress I would never be mean to Mary.\" I went into the living room and found Mary talking to Kim, Sharon and Sal. I asked Mary to help Pam in the kitchen she said she would as if she had a choice. Just as I was going to say something to Sharon the doorbell rang. I open the door and found Jeri standing on the other side. Her makeup was a complete wreck. \n\n\"Go up to my bedroom, Glenda is there waiting for you and have her show you how to put on make up. I know you're new at this so pay attention.\" I told her probable harsher then I intended. Jenny and Jim came up the walk, as I was about to close the door. They followed me to the living room and Sal walked up to Jim and said \n\n\"Hi I'm Sal.\" He shook Jim's hand and Jenny said\n\n\"Sal honey you met Jim last night.\" \n\n\"I don't think so I only met women last night. I'm sure I would have remembered another man if I saw one.\" \n\n\"I know for sure you met Jim last night he was wearing a pink chiffon dress with blue pearls.\" Jenny told him Sal choked a little then said \n\n\"That was Ginger I remember that dress it was very pretty on her.\" \n\n\"That was Jim. He looked lovely didn't he?\" Sal was speechless when Jenny said this. Glenda had just come down with Jeri in tow and I said. \n\n\"Glenda love would you get Sal a drink he looks like he could use one.\" Sal nodded his head and said \n\n\"Scotch double straight up if you don't mind.\" After he took a big sip of his drink he said, \"Are you serious Jim and Ginger are the same person?\"\n\n\"Of cause I'm serious. I would never kid about a thing like that.\" Jenny told him\n\n\"You don't mind that your husband's a drag queen?\" Sal asked \n\n\"Ginny is not a drag queen. She's as much a women as any I've ever seen. She more feminine then most women I know and prettier then a lot of women I know.\" Jenny said in Jim's defense. Then she said \"Now admit it you thought of taking her to bed at least once last night didn't you? In fact I'm sure you thought about taking all us girls to bed last night didn't you?\" \n\n\"I'm only human.\" Sal said with a blush. \n\n\"Of cause you are. It would be only natural for you to think about have sex with all of us. Now the question is what would be your reaction when you found out that a few of us had the same parts you have.\" Sal looked at Sharon then at the rest of us. He could see we were waiting for his answer and his answer was a going to decide how long he was going to stay our friend. I could see him swallow down his fear then he said \n\n\"I wouldn't mind it a bit,\" he said with a slight bit of fear in his voice. \"I just have one question how many of you are women with the same parts I have?\" \n\n\"That's for you to find out.\" Jenny said and we all laughed. After that every one broke up into small groups and started talking. I took Sal to the side and asked \n\n\"How did your interview go today?\" Sal looked kind of shaken and said \n\n\"It went very well Mr. Franks offered me the job this afternoon when I got home he seemed to be impressed with my background. How did you know I had a interview?\" \n\n\"Let's just say a little birdie told me. I just didn't hear how it turned out.\" Jeri came up to us and Sal said. \n\n\"I wanted to thank you for telling me about the job opening.\" \n\n\"Your quite welcome.\" Jeri told him she was unsure of her voice so she didn't say much. I could see that Glenda did an outstanding job on her make up. She looked better then the girl at the make-up counter had done. Once Sal drifted over to Sharon and took her hand I said to Jeri \n\n\"You look wonderful. I hope you paid attention to what Glenda did so you can look this good all the time?\" \n\n\"Yes Mistress I did I have to practice like Glenda told me but I sure I can repeat what she did. My biggest problem is I try to use too much. Are we going to tell Sal about me?\" \n\n\"I don't see any reason just yet. Unless you want to have sex with him I don't think he needs to know. Do you want to have sex with him?\" I said\n\n\"If that's what my Mistress wants.\" \n\n\"Jeri I want to know what you want. If I want you to have sex with someone I'll tell you. If you want to have sex with someone then ask my permission I'm sure I'll give it unless I have other plans.\" I told him \n\n\"I just want to please you Mistress. I would like to try him once but I think I'll wait till we get use to each other. I am his boss I'm not sure whats proper just yet.\" \n\n\"I think you should wait too. By the way when is he starting?\" I asked \n\n\"In two weeks he felt it only proper to give a two weeks notice.\" \n\n\"If for some reason his present company let's him go sooner you can start him on Monday. I know some companies don't like keeping some people on when they have as much access to sensitive information as he does.\" I told him just as Sharon came over to us \n\n\"Thanks for trying to bring him out of his shell.\" She said \n\n\"I didn't have anything to do with it. That was all Jenny. Did it help?\" I asked \n\n\"No not really he doesn't believe that Ginny and Jim are the same person.\" She said depressed \n\n\"Well I'm sure I can at least prove that Glenda is really a man. Sal can you come over here?\" I said loud enough so Sal could hear me where he was talking to Glenda. When Sal came over I said \n\n\"I understand you still don't believe that some of the girls in this room are really males.\" I saw a smile come to his lips and he said.\n\n\"Look I'm sure that Sharon told you all about meeting me in the club and I sure you all want to see me dressed up as a girl but there's no way any of the girls in this room are really guys. And as far as Ginny and Jim being the same person I don't think that's a possibility. They don't even look a like.\" \n\n\"If you're so sure I'll make you a bet. If one of these girls is really a guy you have to get on your knees and kiss her dick. If there isn't then I'll get on my knees and suck you cock till it cums in my mouth.\" I asked loud enough for everyone to hear me. Again I saw a smile come to his lips \n\n\"I'm so sure that none of you girls is really a guy that if one of you are I'll suck that cock if Sharon wants me too?\" He said \n\n\"Sal love I would love to see you suck a cock but like I told you at least one of these girls is really a guy. And one of them has a really big cock. So if I was you I'd be careful.\" She told him\n\n\"I told you I'm bisexually I freely admit it. But I can't see I would be the one on my knees. Sheri I'll take that bet if there does turn out to be one here then I'll give Sharon what she wants as a reward for her acceptance of me and my lifestyle.\" I waved Glenda over and said \n\n\"Sweetie do you mind if I prove that some one in this room is really a guy dressed up in women's cloths?\" Bill shook his head no I took Sal's hand in mine and placed it between Bill legs. Sal's eyes popped open as his jaw dropped. \n\n\"No way I want to see it.\" He said in disbelief\n\n\"Oh you will dear heart. Do you want to suck it now or after dinner?\" I asked with a giggle to my voice\n\n\"That's up to you, you won the bet.\" He said as his hand still groped Glenda's crotch. \n\n\"I think after dinner I wouldn't want to spoil your appetite. But if you keep playing with it you'll find out how big it can get. Then Glenda will have a bulge that will ruin the way her dress looks.\" Sal pulled his hand away.\n\nMary had walked up behind me. She was now wearing a short black leather mini-skirt with a shear white button down blouse. On her feet she was wearing five-inch heels. Before I sent her into the kitchen to give Pam a hand she was wearing a pink wrap around dress that went to her knees. It was elegant but not what I would call sexy. The wrap around dress made her look older then me but now she looked more like a teenager. She was definitely hot. I realized that the skirt was one of the ones I bought for Pam. I asked \n\n\"Did Pam tell you to wear that?\"\n\n\"No Mistress I told her that you wanted me to wear something sexy and I didn't have anything. She suggested that I wear this. I hope you think it's sexy enough?\" She said \n\n\"It's beautiful, I love you in it. You have fantastic legs you should wear short skirts more often. The whole outfit is sexy but not trashy.\" I told her \n\n\"Thank you Mistress I'm glad your pleased.\" She said as a blush came to her face then she said, \"Mistress, Pam wants me to inform you that dinner is ready.\"\n\n\"Good I'm ready too.\" I told her \n\nWe all went into the dinning room. Pam served the lobsters and Mary the steaks. There was a leafy green salad and plenty of vegetables. The steaks were done medium rare and as long as I didn't concentrate on the blood I was okay with it. After a fine chocolate tort for desert Mary Jeri and Kim said they would do the dishes since Pam cook most of the meal. Once dinner was over Jenny said \n\n\"I think it's time for Sal to pay off his bet. Unless you four want to do that in private?\" I looked at Sal and he said \n\n\"I have no problem with doing it in front of everyone here. I have a very good feeling that it won't be the last time I suck cock in front of some one else.\" I kind of feel sorry for him being made to perform in front of all of us. \n\n\"Sal you don't have to do this if you don't want to. I only made the bet to get you to open up to us. I wanted you to be comfortable around us and enjoy your time with us, even as Sallie. I want you to understand that we all respect you no matter how you dress or whom you have sex with. We just want you to be you.\" \n\n\"Thanks Sheri I do appreciate that. It's hard to open up to people. I've been lied to before and the ridicule was too much to handle. I would like to pay off that bet but it's getting late can I do it some other time?\" \n\n\"Sure are you and Sharon coming this weekend? I planning a major shopping trip to Atlanta and were staying the whole weekend up there.\" I asked. Sal looked at Sharon and said \n\n\"We'll let you know. I need to talk to Sharon about it first.\" \n\n\"Okay let me know but you have to introduce us to Sallie at least once during the week end.\" I told him \n\n\"You have yourself a deal if we go.\" We all stood and walked into the living room. We talked for about a half hour then Sharon and Sal left Jenny and Jim weren't far behind. I turned to Pam and said. \n\n\"I think it's about time you went to get ready for your punishment.\" She caste her eyes to the floor and asked \n\n\"Do you wish to punish me in my domination gear Mistress?\"\n\n\"Pam I don't wish to punish you at all. I was hoping to never have to do it again. If I must then yes I want you in your domination gear.\" I told her. Pam said yes mistress and turned and walked away. Before she turned I saw that smile come to her lips again. I turned to Glenda and asked \n\n\"When you take her to her bedroom and make love to her is it okay if I take Jeri to bed?\" \n\n\"You don't have to ask permission.\" He said \n\n\"Yes I do he's a man. And I need your approval. I just want to make sure your okay with it?\" Bill took me in his arms and said \n\n\"I'm fine with it. Thank you for asking it means a lot that you did.\" \n\nKim Mary and Jeri came out of the kitchen. I said to Mary. \"Mar would you keep Kim company tonight. Pam's going to be busy.\" \n\n\"Of cause Mistress if Miss Kim wants me.\" I looked to Kim she nodded her head in agreement. I turned to Jeri and asked. \n\n\"Jeri what did you bring with you tonight?\" \n\n\"I brought two nighties and a suit to wear to work in the morning.\" He told me \n\n\"Shower in the bedroom that Pam uses. And get ready for bed I'll let you know where you going to sleep when I'm ready.\" I told him. I didn't want him to know he was sleeping with me I didn't want him to get too excited. \n\n\"Yes my Mistress.\" He said as he went to out to his car. I wound my arm around Bill's back and leaned into him and said \n\n\"Come on let's give Pam some attention.\" we walked up stairs together. As we walked into the bedroom we found Pam on her knees in the middle of the room. She was wearing her black leather corset. I still found her very attractive in it. Her hair was done in a tight French braid. She must have done that when she came up here. On the bed I saw my black leather bustier next to it was my fishnet stockings and the leather paddle. On top of the paddle was a tube of lube along with the nipple clamps. The penis gag laid along side the paddle along with a very large butt plug. The chains were all ready attached to the head and footboard as well as the frame of the bed. The wrist and ankle cuffs were already strapped to her arms and legs. \n\n\"You may dress me.\" I told her. Pam stood and came to me. She removed my sweater and as she went to her knees she removed my skirt and my garters and stockings. I looked down at her. She looked so sweet as she rolled each stocking down my legs. She then removed my shoes before removing my stockings. \n\nOnce I was completely naked. She started to dress me. First was the bustier. That fitted snugly around my stomach then she put on my black leather gloves. Then she went back to her knees and rolled up each fishnet stocking and attached them to the garters on the Bustier. Then she put on my five inch heeled calfskin boots. \n\nWhen I was dressed I had her stand then I retrieved two of the four-ounce weights that Sam had sold me. I took the first one and clipped it to Pam's nipple ring I then gently lowered the weight till it hung suspended from Pam's left nipple. Pam's eyes got that glaze in it that meant she liked what I had done. I watched Pam's body tremble as I added the second weight to her other nipple. Now both nipples stretched down to the floor. I reached up and gave both weights a pat to set them swinging. Pam's eyes shot open but the glaze never left. I pulled Pam's head down to me and kissed her on the mouth and said \n\n\"You know I love you don't you. Do you love me?\"\n\n\"Yes my Mistress I love you with all my heart, with my body and soul.\" She said in a childlike way.\" \n\n\"You know I don't do this because I'm mad at you don't you.\" I asked \n\n\"I know Mistress you do this because I want you to. Because I like to feel the paddle on my bottom. I like it when you put in the butt plug and when you fuck me in the ass. Now you can do it with a real cock so now you can get as much pleasure as I get.\" She said panting with her excitement.\n\n\"Before I but in the penis gag I want to feel your mouth on my hard cock. I want to see what it feels like to be sucked by a great cock sucker.\" Pam dropped to her knees at the same time a ten-inch hard throbbing cock appeared between my legs. \n\nPam took my cock in her soft hands. They surrounded the shaft squeezing it lightly. Her hands pumped the shaft as her lips surrounded the head. Her tongue ran rings around it bathing it in her saliva. She then pulled it from her mouth and her tongue licked the shaft down the underside. Tickling it with her butterfly licks till she reached the bottom close to the sack that held two oblong balls. Then she bathed the sack with her feather light licks. I truly felt she was making love to my balls with her tongue. \n\nWhen she thought she paid sufficient attention to my balls she then moved back to my hard shaft. Her tongue moved rapidly around the shaft leaving it wet with her spit. When the shaft was as wet as she could get it she slid the head into her mouth once more. I felt her smooth full lips surround the head as her tongue danced around it. \n\nShe then looked up at me as her mouth took in more of me. I felt her throat touch the tip of my cock before she stopped. Then she pulled back as she sucked. It felt as if she was trying to suck my cock into her mouth as she pulled back to the head. It was all I could do just to stay on my feet. \n\nBill came up behind me and placed his arms around my waist. At some time he had removed his dress and was now in his bra and panties. He still had on his stockings and garters, as well as his heels. I leaned against him as Pam continued to devour my cock with her hungry mouth. \n\n\"Doesn't it feel wonderful to have someone suck you cock that's really good at it?\" Bill asked \n\n\"It's fantastic. It's like your pussy only there's more moving parts.\" I told him \n\nI felt Pam's teeth nip at the head of my cock to get my attention. When I looked down our eyes locked as her mouth descended down the length of my cock till her lips touched the bottom of my cock. I felt the head of my cock push into her throat. At that moment I knew why everyone thought Pam and I gave great blowjobs. The warm confines of her throat felt fantastic as it surrounded my cock.\n\nMy eyes never left Pam's as she took all of me into her mouth. I saw her eyes look at me with a mixture of love and lust. Then I felt the greatest feeling of all. Pam's eyes smiled up at me and then she swallowed. I felt her throat muscles ripple past my cock followed by powerful suction. It felt like she was trying to swallow my cock. If it weren't for Bill holding me, I would have collapsed to my knees. Then I felt it again. \n\n\"Oh fuck Pam. Oh shit fuck. Suck me baby suck my cock. I never felt anything so wonderful. God this is great do it Pam do it some more. \" I cried. Pam did it several times more.\n\nHer mouth flew to the tip of my cock then back to the bottom. Every time she went to the bottom I felt her swallow. How I lasted as long as I did I'll never know. But it wasn't long enough. The pressure started to build in me as numbness over took my legs. My legs started to tremble as I used all my will power to remain standing. My breathing was short and raspy as if I was finding it far to breath. Then I felt the fire in my balls. My cock swelled and my balls pulled up inside of me. \n\n\"Oh god I cumming Pam I cumming in your fucking mouth.\" I screamed. \n\nPam's mouth flew to the tip of my cock. She sucked on just the tip as her hand flew up and down my over worked cock. I came hard. My whole body would jerk as each jet of fiery cum left my balls, seared though my cock and shot out the tip into Pam's cum hungry mouth. Pam was moaning as each load was deposited it her mouth. When Pam released my cock I slumped against Bill as he slowly let me sink to the floor. Where Pam took me in her arms and hugged me. I hugged her back as I felt the weights hit the underside of my breasts. \n\nPam and I held each other till we started breathing normally again. Then we kissed when I open my mouth Pam opened hers and my cum flowed from Pam's mouth into mine. I expected it to taste like Bill or Jim's but it was different. It wasn't as musky as theirs it was almost sweeter and it didn't have any bitterness to it. After we had ended our kiss and swallowed what we had in our mouths Pam said\n\n\"I think you have the best tasting cum I ever tasted. It's sweet like honey.\" \n\n\"I know it was good wasn't it. I guess we should get started, poor Jeri's in your room waiting to find out what I want him to do next.\" I told Pam. \"But first can you get me something cold to drink?\" \n\n\"Of cause Mistress. If you don't want to punish me tonight we can save it for another night.\" I knew she wasn't trying to get out of her punishment she really wanted it but she was looking out for me. \n\n\"No I told you, you will be punished tonight, so tonight it will be. Now get me something to drink, a diet cola would be good. Then we'll paddle your ass now move.\" I said sounding as harsh as I could. \n\n\"Yes my Mistress.\" Pam said as she jumped up to do my bidding. When she was gone I said to Bill \n\n\"Boy she's really good at giving head isn't she?\" \n\n\"Yes she is, but your still better.\" ",
        "\"Come on Glenda I can't be near as good as she is. That was the most amazing thing that ever happen to me.\" \n\n\"That's because it was your first. I had you do me for quite a few years now and I'm telling you, you're the best. I remember the first time you deep throated me I thought my head was going to cave in. And besides you taught her how to do it. She would never have been that good if you didn't encourage her. This time she pulled out all the stops so she could prove to you she was really good at giving head.\" \n\n\"Do you really think she was trying to prove herself to me?\"\n\n\"Of cause she's been looking forward to this since last Friday. When you showed her your cock the first time.\" Bill told me \n\n\"Well she really proved herself tonight. She was great. I think Mary's the next one to learn to deep throat she really gets into giving head. Did you see the way see went after you today and for being her first time?\"\n\n\"Your telling me. She'll be hell on wheels when she figures out how to deep throat.\" Pam came in with my soda and a beer for Bill. He said to her. \"Don't tell Kim about this she'll have me running two extra miles for this.\" Pam and I laughed but we knew he was serious. \n\n\"I can't believe your still wearing those weights. Don't they hurt after all this time?\" I asked Pam \n\n\"No they don't hurt at all and they send some really nice feelings though me when ever they start to swing.\" She told me. I stood and said \n\n\"I think I should take them off so they don't do any permanent damage.\" I reached for both weights and unclipped them at the same time. Pam sucked in a huge breath and dropped to her knees. She knelt there panting as her body trembled. \"Pam are you ok did that hurt.\" \n\nPam held up her hand then a moment later she said \"No, no pain unbelievable pleasure just past through me. It was just like the night you paddled me and fucked my ass. Remember when you pulled off the nipple clamps while Glenda was fucking me? It was just like that.\" \n\n\"You mean you just had an orgasm?\" I asked \n\n\"I think so it was so quick but yes I think so.\" She said still trying to get herself under control. I didn't know what to think. \n\nI had Pam stand when she was recovered enough. I reached over to the bed and picked up the penis gag. I placed in her mouth and clipped it behind her head then I picked up the nipple clamps and looked at her nipples. They were red and extended and as hard as rocks. I wasn't sure if I should put the clamps on. \n\n\"I think we'll forget these this time.\" I told her she gave me a look that was almost pleading like a puppy would look. \"Do you want these on?\" I asked holding the clamps. Pam nodded her head rapidly. I attracted one of the clamps, Pam's head when up to look at the ceiling then it came back to look at me. I saw tears in her eyes but that glazed lustful look was there as well. I asked if she was ok she nodded her head. Then I asked if she wanted the other one on she nodded her head rapidly again. I attached other one. Pam found it hard to stand in one place as she bounced from foot to foot. Her whole body seemed to tremble. \n\n\"Pam one last time are you ok?\" She nodded her head again. \"Down on the bed,\" I told her. \n\nPam laid down on the bed with her legs on the side and her hand reached across to the other side so Bill could attached the chains, clipping her wrists together. I took the anal lube and put some on my three fingers of my right hand. I spread her cheeks and lightly rubbed her hole with my fingers. I noticed that her hole didn't wink closed as it always did before this time she was open and ready for my penetration. What a slut I made her into. I almost felt guilty but I knew she came into this relationship with an open mind and she knew she could leave at any time. \n\nI pierced her anus with two fingers, which earned a groan from Pam. I knew it wasn't from pain as she tried to raise her ass to meet me. Then I slid in the third finger as I could almost hear her purr. I had this strange thought that if I tried I could get my whole hand up her ass and Pam would love it. After working my fingers in her for a few minutes I reached for the butt plug that Bill had already lubricated for me. Looking at the plug I realized that it wasn't much smaller then my hand was. \n\nWhen I put the plug to Pam's ass hole I watched as her hole opened to accept it. I pushed half the plug into her before stopping. Pam only moaned, there was no pain she just looked back at me with those glazed over eyes. I had about six inches of the eight-inch plug now up her ass and Pam loved every inch of it. The last two inches was the large knobby end before the flange that kept the plug from going all the way in her. I pushed with Pam moaning till the knob was inside her and her asshole closed around it.\n\nAfter wiping my hand on a hand towel that Pam had provided I picked up the black leather paddle. Pam was trembling in anticipation of what was to come. I quickly slapped Pam's ass four times with less then half my strength just as a teaser. Pam moaned into her gag on each and every slap of the paddle. \n\nI felt the weight of my cock as it swung every time I slapped Pam's ass. To my surprise my cock had started to swell and became hard. I had to admit if only to myself. That yes I did enjoy having Pam at my mercy and it was very exciting. I could do just about anything to her and she wouldn't be able to stop me. \n\nAfter the tenth slap of the paddle I started to give it to her with three quarters of my strength. I gave her six more slaps, three to each cheek. Then stopping I grabbed her hair by the braded tail and yanked her head up off the mattress. And said \n\n\"Those were for your pleasure. The next five are for the temper tantrum you threw this morning.\" While still holding her braided tail I hauled back and with all my strength I gave her five more slaps with the paddle. The last of which, I hit squarely on the crack of her ass driving in the butt plug. Pam screamed into her gag on the last. \n\nI threw the paddle on to the bed as I stared at Pam's ass. It was a deep red. When I touched it, it was extremely hot to the touch. I turned Pam over on to her back. As her ass touched the mattress she groaned into her gag. I raised her legs so Bill could clip the chains to her ankle cuffs. I then pulled out the butt plug and shoved my cock into her about half way. I had Bill remove the gag, once it was out Pam screamed \n\n\"Please Mistress fuck me please, please fuck my ass with your cock. Use me for your pleasure.\" I sunk all ten inches of my cock into her red-hot ass. Pam came hard. I watched as a river of pussy cum flowed out of her cunt and down over my cock as I pulled back out. \n\nI then started to fuck Pam in earnest. I had a strong need to cum and cum soon. As I watched my cock saw in and out of Pam's tight ass I heard a grunt come from Bill. I looked up and some how Pam had gotten a hold of Bill's hard cock and was trying to get it to her mouth. Bill was trying to hold back but Pam wouldn't release her grip \n\n\"Go ahead Glenda give it to her before she rips it off.\" I told him. Bill relented and allowed Pam to suck it into her mouth. \n\nI continued to fuck Pam's ass as Bill started to fuck her mouth. Seeing that Pam couldn't move her head very much. As I watched Pam arched her neck just so and Bill was able to sink his whole cock into her mouth. I picked up the pace of my fucking, as I got closer to cumming. I felt the pressure starting to build in me as Pam's ass contracted around my cock. She would squeeze my cock when I pulled out of her and release her grip when I pushed back into her. \n\nI could see why everyone wanted to fuck Pam she was a fucking machine when she got going. Bill didn't last long in her mouth. It must of had something to do with the fact that he still had a butt plug up his ass, plus watching me punish Pam wishing it was him and the way he was fucking Pam's mouth. I watched him pull his cock from her mouth and the he jerked it with his fist as his cum squirted out of his cock and into Pam's mouth. Pam held her mouth open wide to catch every drop. When Bill was done he gave just the tip to Pam so she could clean off the head. \n\nWhen I was ready to cum I told Bill to remove her nipple clamps. When he released them Pam's body started to shake violently. She looked like she was having a seizure the way she shook. This caused her ass to clamp down on my cock. With such force it pulled my cum right out of my balls. It was all I could do to keep standing and keep my cock moving in and out of her. When I came it felt like my whole body drain into her. She took everything I had and left nothing for anyone else. \n\nI pulled my cock out of Pam's ass with a slight pop; I took two steps back and fell into the bedroom armchair. Pam curled into the fetal position when Bill released her legs and arms. After what seem like an hour but was more like fifteen minutes Pam sat up wincing in pain. Then she stood and ran to the bathroom. Bill looked at me in shock and I said \n\n\"She must have started to leak. She really doesn't like that.\" Bill nodded his head and said \n\n\"I don't care for it either.\" \n\n\"Me either. That's why when you started to clean me up I was all for it. No more drips running down my legs.\" I then stood on shaky knees and said, \"I don't know about you but I'm ready for a shower.\" \n\nBill said he would join me. I took off my domination gear leaving it on the armchair knowing that Pam would have it clean and put away before I realized it. Pam was stepping out of the shower as Bill and I stepped in. After a rather quick shower Bill and I dried off. When I returned to the bedroom Pam had already put away all the cloths and changed the bed linen. Pam was wearing a nightshirt and was waiting by the bed. I said to her \n\n\"Honey tonight I want to take Jeri to bed. Can you and Glenda sleep in your room?\" \n\n\"Yes Mistress. I think Jeri should find out what pleasure her Mistress holds.\" She said though I could see the disappointment in her eyes. \n\n\"Thank you sweet heart and as a reward you can have as much pleasure with Glenda as you both can stand.\" I told her and she asked \n\n\"Do you mean that?\"\n\n\"Yes I do even if you two are to tired to go to work tomorrow. I want you two to enjoy yourselves.\" I could see this really excited Pam \n\n\"Is that ok with you Glenda?\" She asked \n\n\"Yes it's ok with me.\" Bill told her \n\n\"Can you turn into a girl so I can lick your pussy too?\" She asked \n\n\"Yes I'll turn into girl too. If you ask Mistress she may give you a cock to fuck me with?\" \n\n\"No I wouldn't want to do that. I don't think I can.\" I knew I was right when I told Jenny Pam wasn't aggressive enough to fuck some one and her statement just proved it. \n\nI put on a nightie and followed Bill and Pam down to the room that Pam and Mary shared. The other bedroom belong to Kim there was no doubt about that one. Jeri had been sitting at the makeup table practicing. When I walked into the room he jumped to his feet and caste his eyes to the floor. I looked at his face. His make up was heavier then when Bill had done it but not near as bad as when he first came over. \n\n\"Your getting better Jeri, still a little heavy on the mascara but much better then you were earlier.\" I told him to encourage him then I took his hand in mine and asked. \"Would you like to come with me?\" I felt him tremble as guided him to the door. \n\n\"Are you going to spank me too?\" He asked \n\n\"Do you deserve to be spanked? Have you done something wrong?\" \n\n\"I don't think so.\" \n\n\"I only spank those that deserve it and those that desire it. Do you desire to be spanked Jeri? I will if you want me too.\" I told him as reassuringly as possible. \n\n\"I don't know.\" He said but I had noticed that he was getting hard. His cock was pushing out the front of his panties. \n\n\"You should know if you want to or not. Maybe you're just afraid to admit you want to be spanked. Like Bill was afraid to admit he wanted to eat his cum from my pussy or that he like wearing women's cloths.\" \n\nWe had made it to my bedroom by this time. I sat on the bed and had Jeri sit along side me then I said \"Jeri I don't want you to be afraid of telling me anything. I want you to be as honest as you can be with me. If I find out that your doing something because you want to please me and you're really don't like doing it. I will not be pleased. In fact I'll be very displeased because you're being dishonest with me.\" \n\n\"Now if you don't want to dress like a girl or be treated like one, or if you don't want to have sex with other men. Please tell me. If you want to be spanked like I do to Pam and Bill then tell me that too.\" I stopped talking and waited for answer. Jeri thought for a few minutes then said \n\n\"I like wearing girl cloths I like being treated like a girl. Every one makes a big deal when I'm dressed up real pretty. And Glenda was real nice to me when she helped me with my make up earlier. I never had anyone be nice to me before. I've never been spanked before, but I do get excited when I read stories about someone spanking some one else. Ever since you put me in my place you've be so nice to me. You protected me from Debbie and you gave me the department head position at work\" \n\n\"Wait the promotion was because you deserved it, it had nothing to do with this. You're an excitant computer technician. That's why you got the promotion not because I put you in your place. If you weren't good at what you do I would have fired you on the spot.\" I wanted to get that point across before we went any further.\n\n\"Thank you I needed to make sure it was my abilities that got me the job.\" He said relieved. \n\n\"And as far as people being nice to you it's because you're nice to them. Ginger, my secretary, said that once I put you in your place you started being nice to everyone. So it has nothing to do with what you're wearing.\" I told him \n\n\"Yes but I was nice to other people so I wouldn't have you mad at me I couldn't stand it if you were mad or disappointed with me. I love you I always have. I was so jealous of Bill because he got to have you and I didn't. That's why I acted the way I did so you would pay attention to me. And when I thought you were going to fire me because of what I did I knew I went to far.\" He told me \n\nI was stunned I did know he felt that way, I just though he was a jerk. I took him in my arms and said \"I never knew you felt that way. I'm sorry you felt you had to be bad to get my attention. I hope you understand that I love Bill more than anything. He'll always be my first love. Some day I may come to love you too not like I love Bill. But a different love a special love between Mistress and slave. That's all I can offer you.\"\n\n\"It's enough for me just to be near you. I was satisfied to work for you this is even better if you still want me.\" He said \n\n\"Of cause I still want you. Now before I spend a fortune on girl cloths for you. Do you want to dress and be treated like a girl? Except at work.\" \n\n\"Yes I like wearing girl clothes I like how they feel next to my skin especially the silks and satins. I love wearing stocking to work under my male cloths. And before you ask I loved being with Ginny last night. I just want to get better at pleasing men.\" He said in all honesty. \n\n\"Well I can teach you about how to please men. I'm pretty good at it.\" I said with a laugh then I asked \"Did Ginny do you bottom last night?\"\n\n\"No I was too scared it would hurt. She said that I should ask you to train my ass to welcome that kind of lovemaking. And he also said that you can teach me to please a man with my mouth with out gagging.\" \n\n\"She did, did she well I guess I'll have to teach you like I taught Pam and Bill. We'll leave those lessons for another time. We have to go to work in the morning so we don't have all night. I crawled to the middle of my bed and patted the mattress next to me and said.\n\n\"Come and lay here with me.\" I could see Jeri started to tremble again so I said. \"Don't worry I'm not going to bite you, unless you want me to.\" I said with a giggle. Jeri giggled too then moved over next to me. \n\nHe laid on his back and I laid on my side. I saw the tent that his cock was making of his panties and there was a huge wet spot right where the head was. I knew he was excited and that he wouldn't last long once he was inside of me. We kissed for the first time. He was a really good kisser. His lips were soft, and his tongue was gentile. He didn't try to fuck my mouth with his tongue like some men do. He just played with my tongue. \n\nWhen we stopped kissing I took his right hand and placed it on my left breast. He started to massage my breast as I moved my hand down and moved the panties that were holding his dick down. It sprung up hard and ready, to ready by my estimate. I moved down dislodging his hand from my breast. I moved until my face was level with his cock. I grabbed it with my left hand and took it into my mouth.\n\nHis dick wasn't near as fat as Bill's so it wasn't a problem taking in four inches of it till it hit my throat. Pulling my mouth back up sucking as I went till just the tip was in my mouth. Jeri gave out a loud moan as I felt his cock swell and the first blast of cum fired into my mouth. I knew he was too excited. My hand pumped his cock as he fired four more squirts of hot cum into my mouth. \n\nI pulled my mouth from his cock and sat up. Jeri tried to apologize for cumming to soon, but I placed my finger on his lips to silence him. Then I put my mouth to his and when he open his mouth I open mine and let his cum flow into his mouth. Jeri wasn't expecting this.\n\nHe started to pull away but I held his head firmly. Then he started to gag a little. Finally he swallowed then I felt his cum covered tongue in my mouth. We kissed for a minute or so then I pulled away and said \n\n\"Don't apologize for cumming to quickly I knew you were excited. You no doubt have thought of this quite often. How do you feel about what we just did?\" \n\n\"Do you mean me cumming in your mouth or you feeding me my cum?\" He asked \n\n\"Me feeding you your cum silly. I know you enjoyed cumming in my mouth.\" I said with a giggle\n\n\"I mm, I didn't know what to think at first it surprised me. Then I wasn't sure if you wanted me to swallow or not. After I couldn't think what else to do with it I swallowed to get it out of the way.\" \n\n\"Okay, but how do you feel about it? Did it gross you out? Did you enjoy it?\" I asked still waiting for an answer to my queston.\n\n\"It didn't gross me out. Ginny came in my mouth yesterday, I really enjoyed that.\" \n\n\"So you don't mind swallowing your own cum then?\" Jeri shook her head no. \"Good because when you cum in me, or one of the girls you have to lick it back out. That's called cleaning up. If you want to clean out Bill's ass after you cum in it, that's up to you. I think that's gross but to each his own. What Bill, Jim and you do together is up to you all. I like have my ass licked out but not after someone's fucked it. And I like licking ass holes too. I hope you do?\" I told him. I laid down and rested my head on his shoulder and said \n\n\"I think it's time to go to sleep we both have to work in the morning. And Jeff I don't have to tell you that what goes on in this house stays in this house do I?\" \n\n\"Of cause not Mistress I would never tell anyone.\" I knew I didn't have to say anything but I felt more relieved once I said it. \n\nI reached over and set the alarm. I had Jeri roll over away from me and then I cuddled up to his back. I kissed him on the neck and told him good night."
    ],
    "authorname": "Scribler",
    "tags": [
        "malcolm laughed",
        "wearing girl",
        "plug pam",
        "steaks lobsters",
        "pam screamed",
        "cums mouth",
        "buy back",
        "afraid admit",
        "work cloths",
        "give pam"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/lifes-changes-ch-12"
}