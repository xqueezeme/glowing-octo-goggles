{
    "title": "A Victorian Sex Fantasy Pt. 17",
    "pages": [
        "Author's Foreword: This is the seventeenth part of much longer story, if you haven't read the previous parts, the story will make much more sense if you go back and start from the beginning. The first part is mostly background so is a bit boring but it isn't very long, the sex really gets started in the second part. Also, you should read A Victorian Sex Beginning Pt 01, before reading this part, as it is the story written by Hannah, Martha and Robert (Daniel's Grandfather, Grandmother, and great Aunt) about how they became lovers. Daniel and his lovers read that story in Pt. 16 Parts 01 to 13 are short, then they start getting longer. This part ended up being 17 pages long once published. Update: Sept 2021 error fixes and a few slight improvements made.\n\nWarning, this part and future parts will be filled with explicit incestuous activity between adult participants, all over 18 years of age, who share a forbidden love. If fictional incest offends you, please don't read this story. It is my intention to try and make this story romantic, I like romance in my sexual stories, where people care about each other rather than people who just use others to get off. This is a fantasy, do not try this in the real world.\n\nI am interested in hearing from readers what you think about the story. I do want to talk a little about a valid point that someone made on my not using Mummy rather than Mommy. I thought about this when I started writing this and made the decision to use the idiom I'm familiar with. I was afraid if I tried to use British idiom, I would make a lot of errors. So please consider this a 'Memoir' originally written in British idiom that has been translated into American for publication, as American publishers do with books written by British authors.\n\nEditor's Note from the Harem Historian:\n\nUp to this point, we have presented Daniel's story as he wrote it, years after the events he recounted. Some readers have complained that he spends too much time on uninteresting details of his daily life. I'm afraid that it only got worse as his writings continued. While it might be of interest to historians if we were to release his writings for general consumption, we, of course, cannot do that for obvious reasons. As a historian myself, I find the details of his life fascinating but realize that for the general reading members of the harem, who are interested in the formation and evolution of the harem and the salacious details of the love life of their progenitors, the details of general life are boring and slow the story down.\n\nSo, from this point forward, I, with oversight from senior surviving members of the harem, will be abridging Daniel's Tale, replacing sections of text that contain long descriptions of events that are felt to be extraneous to the main events of the story, which is ,how did Daniel's harem grow? Removed sections will be replaced by my brief comments in italics indicating what was removed.\n\nAnyone interested in more detail about specific events that have been summarized, are welcome to meet with me to learn more about those events or people. I love research, if I don't know the answer to your questions already, I will be happy to investigate and report back what I can find out. The creators of our harem were very good about keeping records and paperwork, as were Daniel's Grandfather, Grandmother and Great Aunt, whose archives came to us after the death of Robert and the merger of his harem with ours.\n\nAbridging Daniel's story may result in some chapters being very short, as large sections of text are summarized but we feel that it is important to preserve his chapter headings. It is possible that some chapters may be eliminated entirely, so don't be surprised if you find jumps in chapter numbering.\n\nAnd so, lets get back to Daniel's Tale.\n\nChapter Thirty-Nine: Preparing for London\n\nDaniel spent several pages describing the family's preparations for being away from the estate.\n\nMy sisters continued to come to my room with Mamma in rotation and while the intensity of the love making decreased, we still enjoyed ourselves immensely. I didn't think that I would be able to go back to sleeping alone in my bed.\n\nThe women packed what we would need to take with us, including for me. We were going to be getting new clothes in London but would still need to take quite a bit with us to use until the new clothes were completely ready.\n\nMamma and my sisters all spent a lot of time in each others company talking privately. I assumed that they were making plans for how we would spend our time in London and possibly planning for the future. On the last night before we left for London, I found out that they had been talking about a lot more than that. Also, I knew that letters had been written and dispatched.\n\nThat last night, once we knew we were alone in the house, Mamma let me in on what they had been discussing and deciding.\n\nMamma \"Dear Daniel. We need to fill you in on some of the decisions your harem has made. These decisions are subject to your approval, of course, but I wanted to get details worked out to present to you coherently, instead of your having to deal with ideas that were ultimately rejected.\"\n\nGail \"We want you to know that all four of us are in agreement with what Mamma is going to propose. We have thought about everything thoroughly and we are all happy with the plans.\"\n\nBeth and Cathy both nodded to indicate their agreement with Gail.\n\nMamma \"We have decided to go ahead with trying to include my sisters and their daughters in our harem. I have written to my sisters, informing them that we will be in London and that we would very much like to see them and their daughters while we are there and that we would love to have them come to visit us after we have returned home. Of course we haven't mentioned anything about the girls planning on marrying, as they haven't yet met their prospective spouses.\"\n\n\"Are you expecting me to woe them Mamma, while we're in London?\"\n\nMamma \"Not as such dear, just be your ordinary wonderful self as you've always been. But we do want them to have a chance to see what a wonderful person you are. My sisters have always had a high opinion of you and their daughters were definitely smitten with you the last times they visited. We just want to reinforce those feelings. So dance with all of them, you are a good dancer. Make an effort to get to know them better. I doubt we will attempt anything while we're in London to made things go further than that, we'll wait until they come to visit here where we'll have privacy. That said if an opportunity should open up, don't be afraid to take it.\"\n\nMamma continued \"The other thing we need you to do while we're in London, is to keep your eye out for any prospects you might come across that you think might make a good candidate for your wife. This is not a high priority, there isn't any real hurry for you to get married, unlike the girls. But there will be a lot more opportunity to meet women who might be suitable in London than here.\"\n\nI think I must have grimaced because Mamma reached out and touched my face \"We know you aren't enthusiastic about the idea but you have acknowledged the necessity. Hopefully you'll be able to find a lovely woman who will willingly join our harem.\"\n\n\"Because all of you wish it, I will keep my eyes open for suitable candidates. I'm just very unsure how likely we are to find someone who will want to join a harem. Frankly, I don't see how you are going to approach your sisters about joining, let alone ask them to include their daughters.\"\n\nMamma \"We have ideas on how to handle that. Part of it we will have to play by ear, see how they react to things I will tell them. I'm planning on letting them know first that I've taken a lover who is making me very happy, without telling them who. Then I will tell them that my lover has gotten me pregnant and that I'm very happy about that also. That should interest them, as they both wish that their husbands had given them more children. I won't be telling both of them at the same time, I'll do it individually so they won't worry about what the other may think if they want to ask questions. If they react the way I think they will, wishing that they could find a lover like I have, I'll hint that I might be willing to share and that I think it would be naughty fun to watch her being loved by my lover.\"\n\n\"And if one of them should agree, how do you plan on handling that? I just show up as your lover?\"\n\nMamma \"I'm thinking I would say that they need to wear a blindfold because you want to keep your identity a secret. Then, after you've made her cum several times and gotten her addicted to you, we reveal who you are. My sisters are a lot like me, I think the naughtiness of my lover and hers being my son will excite them. Plus, while you are loving them and they have gotten sufficiently excited, I plan on starting to participate, kissing my sister on the mouth, touching her breasts, sucking on her nipples. And then when she is getting ready to cum, I will tell her that I want to lick your cum from her pussy. And that is what I will be doing when you finally remove her mask and reveal who you are.\"\n\n\"Do you really think this will work? It could go so wrong!\"\n\nGail \"Don't you trust Mamma Daniel? Mamma knows her sisters better than we do. All of us have seen how much her sisters have enjoyed your company when they have come to visit. They are always watching you. They may not seek you out and follow you around like their daughters do, but now that we know more about the signs that a woman finds a man attractive, we realize we've seen our aunts showing those signs around you.\"\n\nMamma \"I certainly noticed and found it amusing that my sisters were so attracted to you and were trying to not show it and to not yield to it. I wondered if one of them might not yield to temptation and seek out your room and become your lover but I guess they were too afraid I might find out and be mad at them. Either that or they wanted to be true to their wedding vows, but their husbands certainly aren't so why should they be?\"\n\nBeth \"And Mamma thinks that we should seduce our cousins. Invite them to join us in our rooms for the night and show them how much fun loving another woman can be. We won't tell them right away that we're no longer virgins, until they are willingly joining in on our love making. Then we'll let them know how wonderful it is to be loved by a man that you love. We think that after we've loved them and they've seen us love each other, it won't come as too much of a shock when they find out we've become our brother's lovers and want to include them in the loving.\"\n\nI was a bit alarmed at what Beth told me \"I hope you don't expect me to make love to my cousins without their mother's knowledge. That would not be an ethical thing to do. Them having a little naughty fun with you girls is one thing but taking their maidenheads and ruining their chances of having a normal marriage would not be right.\"\n\nMamma \"We agree with you entirely dear. Our plan is that the first time you make love to your cousins, it will be with their mothers there participating and guiding your cock into their pussies. So it may take a while to get everyone to that point. Or, if all goes well, it could happen faster than you might think.\"\n\nI was reassured \"Well, I still have doubts but am certainly willing to do what I can to make this happen, since you all seem to want it to happen so much. Just remember that I am happy to have only the four of you for my lovers.\"\n\nMamma \"We know dear and we appreciate your feelings. But I want my sisters and their daughters to be as happy as we are. And I love the thought of being naughty with my sisters and watching them being naughty with their daughters, as I am with mine. Not to mention, watching them being naughty with you.\"\n\nChapter Forty: Off to London\n\nAnd so the next day, we went to the village station and caught the train to London. We'd alerted Grandpappa of our arrival, so he was there with sufficient transportation to hold all our luggage and us for the trip to his London residence. He had a very nice large residence on a square in an area that wasn't the most fashionable, being mostly occupied by well off business people rather than the gentry. But the residences in the area were all well maintained and obviously expensive.\n\nWe got settled in and then met with Grandpappa and Aunt Martha. Grandfather filled us in on his efforts to find potential husbands for my sisters, letting us know that it had gone well, that there were enough candidates that the girls would be able to pick and choose rather than having to take what was available, mentioning that if Mamma's plans to include our cousins in the harem worked out, they would be able to pick from those remaining and would still be able to have choices. He assured us that all the candidates were from good families and had spotless reputations, no drunkards or wastrels in the lot.\n\nAunt Martha told the girls that she would alert them to who the approved candidates were when they were introduced at the functions we would be attending. I had to admit that I was curious to meet the candidates, not sure what to expect of men who supposedly had no interest in women but were never the less willing to lend their name and consequence to women who would have a lover outside of their marriage.\n\nAunt Martha told us of the upcoming events we would be going to in order to meet the prospective grooms. It sounded like the next week and beyond was going to be very busy. We were all going to have final fittings tomorrow for new clothes, there would be more in the coming days but we would have new clothes in the current fashion to start attending events, the first of which would be tomorrow night, a ball being held to honor officers in the military who would soon be leaving to take up overseas assignments, an event being hosted by a peer of the realm who had several younger sons in the military.\n\nWhile we were discussing this, a gong sounded and Grandfather let us know that it was time to get ready for the evening meal, that dinner would be served when the gong sounded again. So we all returned to our rooms and dressed for dinner. I dressed more formally than I typically would at home for the evening meal but not full formal as it was going to be a family dinner without guests. When the second gong was struck, I descended to the dining room and joined the rest of the family.\n\nWe had an excellent meal, with good wines. With servants coming and going we had to be more careful about what we discussed, so the conversation was mostly about fashions and the upcoming events that we would be attending. Mamma mentioned that she was hoping that we would see her sisters and their daughters while we were in London.\n\nGrandfather let us know that our father would be attending many of the events and would graciously do his duty by his wife and daughters, dancing with each before beginning his politicking, his usual activity at social events. I don't think any of us were thrilled by this but realized the necessity of things looking normal. It wasn't unusual for husband and wife to lead separate lives but they almost always maintained a facade of loving family, which was what we would be doing. Of course most of our family was very loving, but that didn't include our father.\n\nGrandfather mentioned to me that he had several preliminary business summaries for me to read when I had free time, if I had any. If not, they could wait to be read when we returned to the estate. He also said that he planned on making me acquainted with some of the people who ran various of his businesses based in the London area.\n\nEventually the meal ended and we all retreated to our rooms. It wasn't long before Mamma and Cathy, whose turn it was that night, showed up in my bedroom. We eagerly made love to each other, and then, exhausted by the events of the day, feel asleep.\n\nChapter Forty-One: Our First Day in London\n\nDaniel spends several pages discussing his grandfather starting to introduce him to his businesses and business associates. Also discussed are clothes fittings for the latest men's fashions that he had to endure.\n\nHe then goes on to describe the event they all attended that night, where his sisters were introduced to many of their candidates for marriage. Daniel talks quite a lot about how surprised he was at how normal the men seemed, other than obviously being military officers.\n\nDaniel enjoyed dancing with his mother and sisters and danced with several old acquaintances of his mother's from when she still lived in London. Neither of her sister's were present and he didn't spot any likely candidates for his own wife.\n\nHis father did indeed make an appearance and danced a single dance with his wife and each of his three daughters before disappearing to the rooms that the gentleman who didn't enjoy dancing used for more 'manly' activities, like drinking, cards, and politicking.\n\nThat night, his mother and Beth spent the night in his bed but he doesn't go into detail other than saying they made love to each other and that he enjoyed having their company for the night.\n\nChapter Forty-Two: Our Second Day in London\n\nThere is more discussion of the grandfather's businesses and more clothes fittings, although he says he is doing a lot less of that than his mother and sisters. He does mention that several of his grandfather's daughters stopped by during the day to get reacquainted with his mother and sisters. His mother, after letting him briefly spend time with them, sends him away, saying they want to discuss women's things and he should go be with his grandfather.\n\nThat night, the family attends another function. His sisters further their acquaintances with their potential husbands as does Daniel. As he gets to know the men better, he is feeling better about them becoming his sister's husbands, feeling that they will fit in with the family when they are home on leave. Still no sign of Mamma's sisters and he makes no progress on his own prospects for marriage.\n\nAfter returning to his Grandfather's house, his mother and Gail spend the night with him. They again make love but no real detail is given but Daniel does record a conversation he has with his Mother and sister after they make love.\n\n\"Mamma, I'm curious why you want me to stay way from your sisters-in-law, considering that you want me to add your sisters to our harem. Could you explain?\"\n\nMamma \"I have different plans for them. Did you notice how sad your Grandfather and Aunt Martha were when they talked about how much they miss Hannah. I want to see if it looks like any of my sisters-in-law might have the same naughty inclinations that their parents have. I'm hoping that one or more of them might be tempted into becoming your Grandfather's and Aunt Martha's lovers. I have determined that they all would like to have more children, wouldn't it be naughty if their father made that happen for them?\"\n\nGail \"Plus Mamma feels that Aunt Martha's daughters ought to know who their true mother is and we all agree with her. She deserves to be acknowledged by them for bringing them into the world.\"\n\nMamma 'So, I don't want you giving their libidos another target. I think things look promising, they reacted as I hoped when I confided that I'd taken a lover and was very happy to be pregnant again. They are intrigued and a bit jealous. Of course so far I haven't given them any clue as to who my lover is, even though they want very much to know. They are also intrigued by the fact that I'm not keeping any of this a secret from my daughters.\"",
        "Gail \"Aunt Matilda got me alone and tried to get more details from me but I just looked knowing and kept Mamma's secrets, just saying that we were all so happy that she had found someone to make her happy again and that we were looking forward to having a little brother or sister.\"\n\nMamma yawned \"Now, I think we should go to sleep, it has been a long day and tomorrow promises to be more of the same.\"\n\nAnd so we stopped talking and Mamma and Gail were soon asleep. I wanted to think over what Mamma and Gail had told me, so I stayed awake a while longer. After thinking about it, I agreed with Mamma's plans, I loved my Grandfather and would be glad to see him and Aunt Martha happier. Having reached my conclusions, I let myself drift off to sleep, with Mamma cuddled up against me on one side and Gail on the other.\n\nChapter Forty-Three: More Business Study and Meeting with Managers\n\nDaniel spends several pages talking about the next morning and afternoon, which is devoted to study of business papers and meeting some of his Grandfather's business managers, getting to know them, being introduced as the eventual heir to the businesses. Daniel reports that the men seemed impressed with his grasp of their businesses, which were ones that his Grandfather had already had him study. Of interest to those who want to know about the evolution of the companies that comprise the holdings of the harem corporation today but for most part very boring.\n\nChapter Forty-Four: Meeting Aunt Patricia and Her Friend\n\nThat evening we attended another event. I danced with Mamma and my sisters and then left them to their suitors. I could tell that my sisters were beginning to show preferences for certain of their suitors and could tell it wouldn't be long before they make their choices. And then, we would have the weddings. I wondered if they would all decide at the same time and have a single three wedding ceremony or if they would be on different days.\n\nI circulated around the ballroom, keeping an eye out for acquaintances and also for younger women who might strike my fancy as possible wife material. In my circulating, I was near the entrance to the ballroom when two beautiful somewhat older women entered. One was my Aunt Patricia, Mamma's youngest sister but I wasn't acquainted with her companion. Like Mamma, Aunt Patricia was a blue eyed blonde, her companion was an emerald eyed redhead.\n\nI immediately moved to meet them \"Aunt Patricia! How wonderful to see you.\" and I gave her a hug and a kiss on the cheek. \"You're looking very beautiful tonight. As beautiful as your companion. Will you introduce me?\"\n\nAunt Patricia and her companion blushed at my compliments \"Daniel, how good to see you. It has been too long since I've been to visit. I was glad to hear from your mother that all of you would be in London so we could get together. Are your mother and sisters here tonight? But before you answer, this is my dear friend Emily Duncan. Our daughters are best friends, they're at another event tonight, my daughters will be very sorry to have missed you, they have been looking forward to seeing you again.\"\n\nI took the hand that Mrs Duncan held out to me and bowed over it, giving it a kiss, which heightened her blush. \"I'm very pleased to meet you Mrs Duncan.\"\n\nMrs Duncan \"Please, call me Emily. I've heard so much about you from Patty and her daughters that I feel I already know you.\"\n\n\"Then we'll have to get better acquainted so I don't feel at a disadvantage. Aunt Patricia, Mamma and the girls are in the room somewhere. Mamma is chaperoning the girls who are being courted assiduously by a bevy of military officers. Before you go off to find them, may I have a dance? And then may I have a dance with you Emily? It will make my evening so much better than it has been so far if you would both give me the privilege of dancing with two of the most beautiful women here tonight.\"\n\nOne waltz had just ended and another was getting started. Aunt Patricia gave me her hand and I led her the few feet to the dance floor and swept her into the dance, one arm around her waist and the other holding her hand. \"I'm so glad to see you tonight Aunt Patricia, it has made my evening.\"\n\nAunt Patricia blushed again \"Thank you Daniel, that is very kind of you to say. And please, I think you are old enough now to just call me Patty like my friends do, calling me Aunt makes me feel old.\"\n\n\"Certainly Patty. You're far from old, in fact I find it hard to believe that you have daughters my age.\"\n\nPatty \"Well, you'll see the proof tomorrow probably when we come to visit. But what has happened to you? You've really come out of your shell. You used to be so reserved and shy. Has some woman made you her lover and taught you how to flirt?\"\n\n\"Exactly. Does it show that much.\"\n\nPatty \"Really? I was joking mostly. Does your mother know?\"\n\n\"Of course. She's happy for me.\"\n\n\"Are you going to marry her?\"\n\n\"No, she's already married but like Mamma separated from her husband.\"\n\n\"So, an older woman?\"\n\n\"That's right, around your and Mamma's age.\"\n\n\"I think she's a very lucky woman. But what would she think about you flirting with other women?\"\n\n\"She wouldn't mind. She knows that we can't be a real couple and that I'll have to marry some day, she has explicitly told me that it is alright for me to take other lovers. In fact, she would like to be very naughty and join me and another woman in bed.\"\n\nWhen this conversation had started I had no idea where it would go, I just followed clues I was getting from my aunt. She didn't seem at all offended by our conversation, but rather was intrigued. My last statement caused her to blush very red\n\n\"Really? And would you like that?\"\n\n\"I think it might be great fun. She wonders what it might be like to kiss another woman the way she kisses me, what it might be like to touch another woman's breasts and suck on her nipples and maybe do even more intimate things. And I think it would be exciting to see her doing that with another woman.\"\n\n\"Oh my, that sounds very naughty. Do you think it will happen?\"\n\nI had been holding my aunt fairly close so that we could talk without being overheard, now I pulled her even closer, so that her stomach was pressed against mine, allowing her to feel my arousal and whispered to her. \"It already has. It was wonderful.\"\n\nMy aunt missed a step and I held her firmly so she didn't trip and fall. I was watching her eyes and saw her already expanded pupils widen even further \"Oh, that is so naughty. No wonder you have so much more confidence now, with women giving themselves to you this way.\" Then in an apparent change of subject \"Do you really think my friend Emily is attractive?\"\n\n\"Very, why do you ask?\"\n\n\"I think she needs a lover, she isn't as happy as she could be, plus she would like to have more children, which she isn't going to get from her husband.\"\n\n\"So you think I should become her lover and get her pregnant?\"\n\n\"Would you be interested?\"\n\n\"Very, she's very attractive. But tell me, would you like to be there and participate? Do you think you might like to show her how much you care for her?\"\n\n\"Oh dear, I couldn't. Could I? But that would be so naughty, you're my sister's son, my nephew. You couldn't possibly want me there?\"\n\n\"Can't you feel how I feel about it? I would love to be naughty with you, my darling aunt. And would like it even more if Emily were there also. Especially if the two of you showed physical affection towards each other.\"\n\n\"Oooh my. I don't know.\" She said but I could see that the idea intrigued her greatly.\n\nThe music drew to a close and I got one last whisper in \"Give it some thought. I would love to make it happen. I seem to remember that you would also like to have more children, I would love to give them to you.\"\n\nAt that, her knees almost gave way and only my arm around her waist kept her upright and I seemed to have rendered her speechless. I led her off the dance floor and back around to where Emily waited for us. The brief moments as we made our way back to Emily gave my aunt a chance to collect herself and she was back to her usual self as we got to Emily.\n\nPatty \"Emily, I'm not sure I should let you dance with Daniel. He has become positively wicked since the last time I saw him.\"\n\nEmily looked intrigued \"He won't hurt me will he? You don't seem to have taken any damage although I thought I saw you stumble a couple of times on the dance floor. That isn't like you, you're usually so graceful.\"\n\nPatty \"Daniel whispered very wicked things in my ear as we danced and I lost concentration. Fortunately Daniel is strong and was able to keep me on my feet. Are you going to take a risk and dance with him?\"\n\nEmily \"Well, I pretty much have to now, don't I? If only to find out what kind of wickedness he was whispering in your ear.\"\n\n\"Then, may I have this dance?\"\n\nEmily smiled and held her hand out. I took and led her to the edge of the dance floor as the music got started for the next waltz. I put my arm around her waist and drew her close. \"So what were you and Patty talking about that was so wicked?\"\n\n\"My aunt thinks that I should become your lover, and if you truly want another child, I should make you pregnant.\"\n\nEmily blushed furiously, which with her redhead's complexion, was fascinating to watch. I wished that the fashions of the day displayed more flesh, as I would have loved to see the blush travel to her bosom but I was hoping I might get to see that another time. \"Patty has told me that she thinks I should take a lover before, but this is the first time that I know of that she has proposed that to a man on my behalf. That is Patty being wicked, how were you wicked? Did you turn her down?\"\n\n\"Not at all, that wouldn't have been wicked at all. No, I proposed that she should be present and participate and I make both of you happy and that I would be glad to make her pregnant if she wanted as well, since I knew that she would like to have more children also.\"\n\nAnd now it was Emily's turn to stumble as she turned even redder. \"Oooh my, that would be wicked! So you want her to watch you make love to me? And vice versa? But I've never understood why she so wants me to have a lover, other than to get pregnant. She seems to feel that being loved can be very pleasant but I've never found it so.\"\n\n\"Really? Then your husband must be a complete idiot. Love making when done properly is the most pleasurable experience a person can have. Didn't your husband make any effort to prepare you for intercourse? A woman's first time can be a bit painful because of her maidenhead but after that it should always be a pleasure and even the first time if a woman is properly stimulated before starting and then again after her lover enters her, that first time should become pleasurable. Didn't he make any effort to make sure your pussy was properly wet so his cock would slid easily, giving you pleasure instead of pain?\"\n\nEmily looked confused \"I don't understand what you mean about making my pussy wet. I got wet when he came inside me but then he was done.\"\n\n\"You really do have an idiot for a husband. How long does he make love to you and doesn't he do anything to stimulate you? Play with your breasts? Suck on your nipples? Lick your pussy?\"\n\nEmily looked a bit shocked \"Is that what lovers are supposed to do? He would just get on top of me, put his thing in and push in and out a few time and cum, then he would get off and go back to his own bedroom.\"\n\n\"He's even worse than an idiot, that is criminal. You are a beautiful, vital woman who should be made love to slowly, and made to cum over and over. If that is your only experience, you may find it hard to believe that having a cock in your pussy can be extremely pleasant, once you have been properly aroused. We need to do something about this right away.\" and I checked where we were in the ballroom and began guiding us back to where we had left my aunt.\n\nEmily looked a little scared \"You can't possibly mean to make love to me here?\"\n\n\"No, not the way you are thinking, but if you or my aunt know of a place here where we can be private for a while, I can at least give you a glimpse of the pleasure that love making can bring you. Once you've experienced that, it will let you make a more informed decision if you might want to do more.\"\n\nWe had now reached the edge of the dance floor near Aunt Patty and I led Emily over to my aunt. \"Aunt Patty, is there somewhere private that you know of here that the three of us can go? We need to talk where we can't be overheard and I need to demonstrate to Emily that her body can give her great pleasure.\"\n\nAunt Patty looked at the two of us \"I've been here before visiting. I think I know where we can go. But surely you're not thinking of making love to her here? Shouldn't that wait until it can be done more comfortably?\"\n\n\"No, I'm not proposing to have intercourse with her, just use kisses, and my hands to show her that her body can experience great pleasure.\"\n\n\"Very well, follow me.\" and my aunt turned and led the way from the ballroom, down a couple of halls to where there were rooms on both sides of the corridor that opened into rooms that seemed to be setup as parlors. Picking one that was empty, she gestured us in and then closed the door behind the three of us. \"Will this room do?\"\n\n\"Definitely. Now, Emily, may I kiss you?\"\n\nShe looked a little hesitant and looked at Patty \"Go ahead dear. I'm here to make sure you are safe. Daniel's a good person, he won't hurt you or do anything you don't want him to but it sounds like you need to be shown how nice lovemaking can be.\"\n\nEmily looked at me \"Then yes, you may kiss me.\" and she turned her face up and pursed her lips.\"\n\nIt looked like her idiot of a husband hadn't even bothered to teach her how lovers kissed. \"No, not like that. Relax your mouth.\"\n\nShe did as I asked and I leaned in and brushed my lips over hers, keeping it light for now. I kissed her gently for sometime until I felt her relax into my arms, which I had put loosely around her. Then I pressed her a bit more firmly against me and deepened the kiss slowly, not wanting to scare her by going too fast. When I felt she was ready, I parted my lips and ran the tip of my tongue over the seam of her closed mouth, causing her to gasp.\n\nAunt Patty who was watching prompted \"Open your mouth to Daniel and imitate with your tongue what he does with his.\"\n\nEmily obediently opened her mouth and when my tongue entered her mouth searching for hers she shyly returned my lingual caresses. After kissing her for a couple of minutes, I pulled back. \"How was that? Did you enjoy being kissed that way?\"\n\n\"It felt very strange but I think it was pleasant. Is that really how lovers are supposed to kiss? Could I see you kiss Patty that way so I can see how it is done?\"\n\nI released Emily and turned to my aunt \"May I kiss you my dear aunt Patty? Are you prepared to be naughty with your nephew?\"\n\nAunt Patty \"I can't believe I'm going to do this, but yes, I want to kiss you very much. It was so exciting watching you kiss Emily. But I asked you to just call me Patty, did you forget?\"\n\n\"Not at all Aunt Patty, but it makes it so much naughtier to remind us that I'm your sister's son.\"\n\nI took my aunt into my arms and pressed her against me, again letting her feel my excitement against her belly and then I was kissing my aunt on the mouth, for the first time in my life. When my tongue touched her lips, she opened eagerly to me and we kissed passionately. I spent several minutes again, kissing her, caught up in the naughtiness of kissing another of my relatives as a lover. But, mindful of what I wanted to accomplish, I lightened and then ended the kiss, turning back to Emily.\n\n\"Did you like seeing us kiss?\"\n\n\"It gave me a funny feeling in my stomach. It seemed so naughty for you to be kissing your aunt like that, especially with me watching.\"\n\n\"What you're feeling is the beginning of arousal. Let me kiss you some more and we'll see if we can increase those feelings. This time, I will start using my hands to caress your body through your clothes to stimulate you in other ways besides the kiss.\"\n\n\"Could you show me what you are going to do by kissing Patty again and doing those things to her first? Would you mind Patty?\"\n\nAunt Patty a bit breathlessly \"I think I'm becoming very wicked, because I would like that very much.\"\n\nSo, I took my aunt back in my arms and resumed kissing her. This time while using one arm to hold her against me, I began to run my other hand over my aunt's body, at first just up and down her back, but then I ventured lower and ran my hand over her buttocks, causing her gasp into my mouth. I really wished we weren't wearing all the clothes we were, so I could have felt her skin but knew that that would have to wait. After playing with her buttocks for a while, I brought my hand up and around in front and cupped one of her breasts, giving it a squeeze as best I could through the layers of clothes that covered it. Even though she was wearing a corset under her dress that prevented real contact, it still drew another gasp from my aunt into my mouth where our tongues were still busily engaged.\n\nFinally, I released my aunt, terminating the kiss and the caresses. \"Patty, would you like to tell Emily if you liked what we just did?\"\n\n\"Oohh, Emily, It felt wonderful. It's been so long since anyone has touched me like that. I didn't realized just how much I missed it. Please let Daniel kiss and touch you like that.\"\n\n\"Alright, I'll give it a try.\" and Emily stepped up to me and I took her into my arms again, her arms seeming to naturally come up and go around my neck. She eagerly yielded her mouth to me and I began as I had with my aunt, running my hands over her back but quickly giving in to temptation and running my hands down over her buttocks, kneading her flesh gently through her clothes. This drew a gasp from her and she pressed herself harder against me and for the first time when my tongue retreated into my mouth, her tongue followed, beginning to explore my mouth.\n\nI spent a minute enjoying the fullness of her buttocks before bringing one of my hands around and cupping one of her breasts, squeezing the flesh as best I could through her corset and other clothes. This drew another gasp and she squirmed a little against me. I was going to have to convince the two of them to leave off the corsets from now on so I could make better contact with their breasts.\n\nFinally, I drew back and released her, and she reluctantly removed her arms from around my neck.\n\n\"So, are you enjoying the lesson so far?\"\n\n\"Oh yes, I had no idea that kissing could be so nice and it felt so naughty when you were touching me in places that aren't supposed to be touched.\"\n\n\"I'm glad. Now, I'd like the two of you to try an experiment. I'd like you to see how you feel if you kiss each other the way I've just been kissing you.\"\n\nEmily and my aunt looked at each other and blushed. My aunt responded first \"I'm willing to try it if you are Emily.\"\n\n\"Alright.\" Emily responded and they rather tentatively embraced and pressed their mouths together. I think it took a moment for my aunt to get up the courage to begin really kissing Emily but soon both sighed and it looked like the kiss deepened. Apparently they were enjoying kissing each other as neither seemed in any hurry to end the kiss, but eventually they pulled back and then released each other.\n\nAunt Patty \"That was nice. It made me feel quite naughty to be kissing you that way but I enjoyed it. It was very different from kissing Daniel but just as nice.\"\n\nEmily \"I feel the same. It is so much fun learning all these new wonderful things with you here.\"\n\nAunt Patty \"I agree. But now what Daniel?\"\n\n\"Now, it is time for me to help Emily experience what cumming feels like. Her idiot of a husband never made any effort to make her cum. So help me get her skirts and petticoats up out of the way so I can use my hand to play with her pussy until she cums. I think maybe she should lean back against the wall and you can hold her clothes out of the way while I caress her.\"",
        "So in a moment, we had Emily leaning against the wall and my aunt was gathering up her skirt and petticoats, revealing Emily's shapely, stocking covered legs and then her drawers covered belly. I moved closer but paused before touching her \"May I touch your pussy, darling Emily? I promise to be gentle and not hurt you.\"\n\n\"Please, yes. I want to know what it feels like.\"\n\n\"Then spread your legs for me please.\" and she obeyed, moving her two feet apart.\n\nI used one hand to find the slit in her drawers and drew it open and with my other hand reached in to feel for her pussy. I really wished I could just remove it but that wasn't a good idea under the circumstances. I was dying to get a good look at her pussy, to see if the shade of her pubic hair matched the fiery red hair on her head. I hoped that I would be able to find out soon. I was dying to see both women naked and hated to wait.\n\nI found my way through the forest of hair I found covering her mound and found her slit. She may never have experienced sexual arousal in the past but she was definitely feeling it now, her slit was very wet and slippery. \"Can you feel how wet your pussy has become? That is what is supposed to happen before a man makes love to you, so that his cock can slide inside without pain, only with pleasure. Like this.\" and I slid one of my fingers slowly up into her vagina, finding her a little tight but she didn't seem to experience any discomfort, rather giving a faint moan of pleasure. I worked my finger in and out of her vagina a few times, showing her how it didn't have to feel painful but pleasurable. But then I withdrew my finger and sought for her clit at the top of her slit. I was worried about taking too long and having someone come by and discover us.\n\nI found her clit easily, it had emerged from its hood and I began stimulating it gently, for the moment doing it indirectly. \"Ooh my god, that feels so good. What are you doing?\"\n\n\"I'm playing with your clit, it can be the most sensitive part of a woman's pussy. Can you feel what it is I'm touching? You can touch it yourself in bed at night if you want to give yourself pleasure.\"\n\n\"Really?\"\n\nAunt Patty \"Definitely. I do it fairly often. It's not as good as being made love to properly by a man but it is quite pleasant. Are you getting close to cumming?\"\n\n\"I don't know. Something is happening, what is supposed to happen?\"\n\n\"Aunt Patty, give Emily a good kiss and I'll finish her off so she will know what cumming feels like.\"\n\nMy aunt leaned in and began kissing Emily passionately on the mouth. I had been mostly stimulating Emily's clit indirectly but now I moved into direct contact, feeling that she was now excited enough to take the extra stimulation. It only took a few strokes and Emily experienced her first cum, moaning loudly into my aunt's mouth. I think she might have fallen if she wasn't leaning against the wall.\n\nAunt Patty removed her mouth from Emily's and looked at her friend's blissful face. \"Well, it certainly looks like she enjoyed that.\"\n\nI withdrew my hand from Emily's drawers and bought my wet fingers up to my mouth, licking Emily's juices from them, finding her taste to be quite delightful, different from Mamma and the girls but just as nice. Aunt Patty blushed, watching what I was doing with wide eyes. Had her husband never tasted her pussy juices? Maybe he'd never used his mouth to give her pleasure. If that was the case, I was definitely looking forward to watching the first time she experienced it, whether I was the one doing it or possibly her sister, my mother.\n\nDone, I dried my fingers on Emily's inner petticoat and then helped my aunt restore Emily's petticoats and skirt to their usual position covering her lower limbs.\n\nEmily was coming back from her cum, starting to take an interest in what was happening again.\n\n\"So, dear Emily, did you enjoy your first cum? Will you allow me to be your lover and continue to teach you how to enjoy the pleasures your body can give you? Will you let me love you and make you pregnant?\"\n\nAnd then I turned to my aunt \"Dear Aunt Patricia, Patty, will you become my lover also? Will you join with me in teaching Emily the pleasures to be found in naughty play? Will you let me make you pregnant also? Do you like the idea of you and Emily both being pregnant together, your bellies growing in unison?\"\n\nEmily and my aunt looked at each other and both blushed again but seemed to come to a silent understanding. My aunt turned back to me \"Yes, Daniel, we would like to become your lovers and I cannot believe that I'm saying this but I find the idea of you making me pregnant thrilling. Will we be able to keep it a secret? What would my sister, your mother think if she found out? What would my daughters think? You know they have a crush on you, don't you. They would be so jealous to find out that I get to have you and they cannot.\"\n\nEmily \"I hadn't really thought about how complicated it could be for you Patty. My husband won't care, he has his mistress, we never even see each other anymore. He doesn't even see our daughter. I don't think she'll mind, she's told me a couple of times that I should find a lover to make me happy.\"\n\n\"It sounds like you have a very nice, understanding daughter.\"\n\nAunt Patty \"She is very nice and smart and, if you can believe it, even more beautiful than her mother. She's been turning away suitors for a couple of years now, afraid that all men are like her father. Emily, maybe we should introduce her to Daniel, do you think if she married him she would be willing to share him with us?\"\n\nTo say that I was astonished would be an understatement. Frankly, I was astonished at how the whole evening had gone. Here we'd been worried about how were we going to entice my aunt into becoming my lover and joining the harem and by chance and by being bold and seizing opportunities as they presented themselves, the first objective appeared to be accomplished. And in addition, it appeared that Emily might provide the solution to my need to find a wife, if her daughter might be willing to share.\n\nEmily looked thoughtful \"I think it might be possible. Maybe because her father hasn't been around, she and I are closer than many mothers and daughters and she's never been a selfish person. Of course we'll have to see if she likes Daniel at all, let alone as a potential husband. I know that she has been intrigued by Patty's daughters singing your praises. Daniel, could you leave with us to go to the event our daughters are attending, so you can make her acquaintance?\"\n\n\"I would just need to find Mamma to let her know I'm leaving and where I'm going. I'm not really needed here, she is busy managing the army of officers courting my sisters.\"\n\nAunt Patty \"Is it alright if I don't go with you to tell your mother? I think I need more time to adjust to what we're going to do before seeing her. You're not going to tell her are you?\"\n\n\"What, tell her that I've seduced her sister and her sister's friend. Can you image how that would be received?\"\n\nAunt Patty looked relieved. Of course, that was exactly what I was planning on doing and I knew Mamma would be happy that her hopes had been partly realized.\n\nEmily \"Then Patty and I will go claim our wraps and have the carriage brought around front. We'll wait for you there. Please, I'd like another kiss before we go.\"\n\nSo I gave her a brief passionate kiss on the mouth and then did the same with Aunt Patty, before we opened the door and left the room. Emily and my aunt went one way and I went the other, making my way back to the ballroom, making my way around the edge to the far end where Mamma and Aunt Martha were supervising the courting of my sisters. All three of my sisters appeared to be on the dance floor as Mamma and Aunt Martha talking with officers who were waiting for their turns to dance.\n\n\"Excuse me gentlemen, I need to talk to my mother privately for a moment.\" and I drew Mamma away to where we could talk privately if we kept our voices low.\n\n\"Mamma, your sister Patty showed up a while ago with her best friend Emily. You may find this hard to believe and there isn't time to give you the details now, but I've seduced both of them and they have agreed they would both like to be my lovers, together. They've even said I should meet Emily's daughter, who is Patty's daughters' best friend, as a potential wife. They want to take me to the ball the girls are attending so I can make her acquaintance. They think her daughter might be willing to share her husband with her mother and Patty.\"\n\nMamma \"Oh my, really? I can't wait to hear the details of this. Did you make love to them here?\"\n\n\"No, I kissed them and I used my fingers to make Emily cum. Would you believe that she had never been taught to kiss properly and had never experienced an orgasm. I also got them both to kiss each other, which they enjoyed.\"\n\nMamma \"Very good. I so want to hear the details, will you be home later tonight or will you go home with them and complete your seduction.\"\n\n\"I'm thinking I'll see if I can get them to come back to Grandfather's, I would imagine that Patty's daughters would like to get together with our girls to catch up. I hope to get both Patty and Emily to my room so I can make love to them. Maybe you could come in and catch us just after I've made love to both. I'll leave it to you on how you want to handle it at that point.\"\n\nMamma \"That sound good. I'll think about how to handle it between now and then, but it may have to be improvised as it happens, depending on how they react.\"\n\n\"Very good. Now, I better go, I shouldn't keep them waiting too long, they might start having second thoughts.\" and I leaned down and kissed Mamma on the cheek and turned to leave the ballroom.\n\nChapter Forty-Five: Meeting My Cousins and Emily's Daughter\n\nArriving at the front entrance, I found a town carriage waiting with a servant holding the door open. I looked to make sure it was occupied by Aunt Patty and Emily and then got in, taking the seat opposite them, as they were seated side by side. The door was closed and we started on our way.\n\n\"How far are we going? Do we have time to have any naughty fun?\" I asked.\n\nAlthough there was a lighted coach lantern inside with us, the light wasn't very good, but I thought I saw both women blush.\n\nEmily \"We'll have about a half hour. I told the coachman to go the long way through Hyde Park. You aunt says she is in need of some attention like you gave me as she is feeling very over stimulated from all the naughtiness tonight.\"\n\nPatty \"Do you mind Daniel? You must be feeling over stimulated yourself, but I don't want our first time actually making love to be in a carriage, as naughty as that would be. Can you wait, while helping me?\"\n\n\"Of course my dear aunt. Come over here and sit in my lap.\" and I help my hand out to her and in a moment she was seated in my lap, facing her friend in the other seat. \"But just so you both know, I plan on having both of you before the night is over. I plan on inviting you and the girls to come home with me so the girls can get together with my sisters and the two of you will have your own rooms but will come to join me in mine, which has a large bed. I told Mamma I would be bringing you and the girls and she said she would make sure rooms were ready.\"\n\nWhile talking, I had been gathering up my aunt's skirt and petticoats and quickly had her lower body exposed, covered in stockings and drawers. I ran my hand over my aunt's thinly covered lower thigh, drawing a gasp from her.\n\n\"The stockings are very nice, but from now on, I want you to do without the drawers and no more corsets. I want to be able to feel you when I touch you, not whale bone and I want easy access to your pussies. Can you do that for me?\"\n\nAunt Patty \"Yes Daniel. I will do whatever you want.\"\n\nEmily \"It will feel naughty doing without them, I've worn them all my adult life except when I'm in bed. But feeling naughty is nice, I'm discovering.\"\n\nAunt Patty \"Would you like me to remove my drawers? It will make it easier to touch me.\"\n\n\"Emily, I want you to remove Patty's drawers for us.\"\n\nEmily moved forward on the seat and leaned forward. She reached out and found the ties at the waist of Patty's drawers and untied them. Patty raised herself up enough that Emily was able to slide the drawers out from under Patty's derriere and down her legs. I immediately moved my hand to my aunt's naked lower belly above her pubic mound, causing her to gasp.\n\nEmily held up the drawers \"What do I do with these?\"\n\nI moved my fingers down and began to play with my aunt's pubic hair. \"Move the window curtain aside and throw them out. Patty has no need of them any longer.\n\nEven in the low light in the carriage I could see Emily blush but she did as I asked, then sat back to watch my hand playing with her friend's pussy. Then, she reached down, gathered up her own skirt and petticoats and managed to remove her own drawers, which joined Patty's somewhere on the road in Hyde Park.\n\nEmily \"There Patty, now we're both naughty.\"\n\nKnowing we wouldn't have a lot more time, I moved my fingers lower and found my aunt's slit, finding when I slid my finger between her lips that she was very wet. She sighed \"That feels so good. It has been so long since anyone else has touched me, since anyone else has made me cum.\"\n\nI spent a moment exploring her slit as well as I could with touch and the limited visibility in the carriage. I was anxious to get both of them to Grandfather's where I would be able to finally see them naked and examine them properly. I slid a finger into her vagina, finding her snug and very wet. I slid my finger in and out a few time, getting it all the way in, causing my aunt to moan with pleasure. I then got my thumb wet and began using it to rub around her clit, which I found ready for attention.\n\nAunt Patty \"Please Daniel, make me cum. I need to so much and there isn't much more time.\"\n\nSo, wanting to please my aunt, I began direct stimulation of her clit with my thumb, while I moved my finger around inside her vagina. It didn't take long for that to bring on her cum and I felt her vagina clamp down on my intruding finger.\n\nEmily \"That looked so naughty. I had a fairly good view from over here, it was very exciting watching you putting your finger inside her. Are you going to taste her juices like you did mine?\"\n\n\"No, I want you to lean forward and take my finger in your mouth and taste her juices yourself.\" and I withdrew my finger from my aunt's vagina and held it out to her friend.\"\n\nEmily \"Oh my, really? Alright.\" and she leaned forward and took my dripping wet finger into her mouth, where after a moment I felt her tongue cleaning her friends juices. She had closed her eyes, I think to concentrated on tasting her friend's sex for the first time. After a moment, I withdrew my finger.\n\n\"Well, do you like the way Patty tastes?\"\n\nEmily \"I think so. I may need to taste more to be sure. I certainly didn't dislike it. I definitely liked how naughty it was. I think I may turn out to be a very naughty person, with a little encouragement.\"\n\n\"Well, I plan on giving you lot of encouragement to be naughty. You and Aunt Patty both, starting later tonight.\"\n\nAunt Patty \"I'm looking forward to being naughty too. Thank you Daniel, that felt so good. I can't wait to feel you inside me and to feeling you cumming inside me, maybe making me pregnant.\"\n\n\"Where are you ladies in your cycles? How likely am I to get you pregnant tonight?\"\n\nAunt Patty got up off my lap and moved back across from me next to Emily, letting her petticoats and skirt down again. \"My visit ended about a week ago. When was yours Emily?\"\n\nEmily \"About three weeks ago.\"\n\n\"So, from what I have been told, Patty, your most fertile time will be in about a week and Emily you may be past your best time for getting pregnant, so you may have to wait almost a month before getting pregnant. However, it will be fun to try anyway. It's nice that the process of getting pregnant is so much fun.\"\n\nBoth Emily and Aunt Patty laughed and my aunt said \"Well, I hope we can get lots of trying in.\"\n\n\"I'll do the best I can.\"\n\nThere was a knock on the carriage roof and Patty spoke up \"I told the coachman to do that when we were getting close, so we should be there in a minute or two.\" Both ladies made sure their petticoats and skirts were properly covering their limbs.\n\nIt wasn't long before the carriage came to a stop and there was a knock on the carriage door, then after a brief pause, the door was opened and we found ourselves before a imposing mansion that was brightly lite and from which we could hear music issuing. A servant handed down the two ladies and then me and we proceeded inside, where the ladies surrendered their wraps.\n\nWe then followed a servant to the ballroom where we were announced, although no one paid any attention. We began working our way around the large ballroom, looking for my cousins, who I was sure I would recognize. It hadn't been very long since I'd last seen them.\n\n\"Emily, is your daughter a redhead like you?\"\n\n\"Yes, although her hair shade is darker.\"\n\nSo, we were looking for two blondes and a redhead. I doubted that there would be more than one three woman group that would match that description, although they might not all be together, if they were dancing. We were lucky though, as the waltz currently being played wound down and the floor cleared for the moment. Continuing around the ballroom, Emily spotted them first.\n\n\"Over there by the first door that leads outside to the terrace.\" and she pointed to where three slender, graceful young women were just dismissing three gentleman that they had apparently been dancing with. The three then turned and, apparently wanting some air, exited to the terrace. We continued making our way toward where they had disappeared, when I noticed that one of their gentleman admirers had reversed his course and followed them out, looking slightly unsteady on his feet, possibly having had too much to drink.\n\nI hoped that he had just decided that he wanted some fresh air also but was afraid that maybe he wanted to impose himself on his dance partner. Emily and Aunt Patty had noticed the same thing so we hurried to reach the door to the terrace to be sure everything was alright. Exiting the ballroom, we looked around and found the three girls across the terrace at the railing, turned to confront the young man who seemed to be definitely annoying the girls. As we approached I heard him say to the redhead \"Come on, I just want a kiss, aren't redheads supposed to be passionate? I just want to find out.\"\n\nThe red haired girl spoke up \"Go away, I wouldn't kiss you for anything in the world. You got fresh while we were dancing and I told you to stop. If you don't go away, I'll report you to Lord Fell.\"\n\nThe lout didn't seem deterred and reached for the redhead, but by that time we'd reached them. I tapped him on the shoulder \"The lady said to leave her alone. I would take that advice if I were you.\"\n\n\"Daniel! We're so glad you here.\" It was Joyce, Aunt Patty's older daughter.\n\nThe lout turned around and scowled at me. \"Go away, this is none of your business.\"\n\n\"Preventing louts from molesting ladies is every gentleman's business. So please leave.\"\n\nI could see that he was preparing to try and hit me. Lots of gentleman took boxing lessons, so I knew I needed to be careful. Maybe if he'd been sober, he'd have done better but he telegraphed his punch and I caught his fist, spun and threw him over my hip so that he landed hard on the terrace, flat on his back, which knocked the breath out of him.\n\nSome servants came hurrying up, followed by an older gentleman, who I later learned was Lord Fell, the peer who was giving the ball. \"I'm so sorry. I don't know who this disgraceful young man is or who he came with but we've been keeping an eye on him since he started making an annoyance of himself. My servants will remove him from my house and he'll have to make his own way home. I'm not sure whoever he came with will want to claim his acquaintance. Please enjoy the rest of your evening. By the way young man, that was a very nice hip throw.\"",
        "\"Thank you sir, I took some lessons. This is the first time they really came in useful.\"\n\nThe servants had gotten the lout to his feet and they dragged him toward stairs that led down from the terrace. I assumed that they were escorting him to the nearest place they could eject him from the property. The older gentleman returned to his guests and I was now alone with five women who seemed very impressed by my actions. Joyce threw her arms around me and gave me a hug and a kiss on the cheek.\n\n\"That was very impressive Daniel. Not to mention brave. He was quite a bit bigger than you.\"\n\n\"Was he? I was too angry to notice.\"\n\nThen it was Carol's turn and I got another hug and kiss on the cheek. \"Thank you Daniel, he was making a bit of an annoyance of himself inside but we didn't expect him to follow us outside.\"\n\n\"It was my pleasure to be of assistance.\"\n\nNow it was Emily's turn to give me a hug and I think she almost gave me a kiss on the mouth, but remembering her audience managed to make it on my cheek. She held the hug for a long moment \"Thank you so much Daniel for protecting my daughter. I love her so much, it would have hurt me so much if she had been manhandled by that lout.\"\n\n\"My pleasure.\" I repeated.\n\n\"Mamma, please introduce me to my rescuer so I can thank him also.\" This was from the redhead.\n\nEmily \"Dorthy, this is Daniel, Patty's nephew, the son of her sister Rebecca. Daniel, this is my daughter Dorthy.\"\n\nI held my hand out to Dorthy, but she ignored it and in a moment I was getting another hug and kiss on the cheek. \"Thank you so much. I was trying not to show it but I was so scared. I'm glad to finally meet you, I've heard so many nice things about you from Joy and Carol but I don't think they did you justice. You're not only handsome but brave and a real gentleman.\"\n\nI think I should take a moment here to give better descriptions of all my companions. I've already talked a little about my aunt and Emily but should have done a more complete job. My aunt was clearly my mother's sister. All three of the sisters, while not coming close to looking like identical twins, had a clear family resemblance, which they all also passed on to their daughters. Patty was almost the same height and weight as Mamma with the same hourglass figure, slightly lush from having borne children. Her breast size looked to be about the same as Mamma's also. I've already mentioned that like Mamma, she is blue eyed and blonde haired. I was anxious to see if she had the same large nipples that Mamma and my sisters had.\n\nHer daughters were a little taller than their mother, like my sisters, and at this point in their lives had less flesh covering their bones, without being excessively skinny, having the same hourglass figures that seemed to run in our family among the females. Their breast size appeared to be about the same as my sisters but it was hard to tell for sure with all the clothes covering them. They were also blue eyed and blonde haired, as all the women in family seemed to be.\n\nAs I mentioned, Emily is an emerald eyed redhead. Just saying that doesn't do her justice. Her eyes are among the most beautiful I've seen and her hair is a fiery shade of red that makes me long to see what it will look like when it has been taken down and is falling over her pale naked body. At a guess, it looks like her breasts may be a little bit larger than Mamma's and Aunt Patty, but again it is hard to tell for sure because of all the clothes. While being a little less pronounced, she also has an hourglass figure, as far as I can tell through her clothes. I was really looking forward to seeing her naked for the first time and was dying to see what color her public hair was, I hadn't really had a chance to get a look when she had removed her drawers in the carriage.\n\nHer daughter Dorthy was not as exact a copy of her mother as my cousins and sisters were, while red haired, the shade of her hair was a rich deep red color with hints of brown in the tone. And while she also had green eyes, the shade of green was darker than her mothers. There also seemed to be more color in her skin tone, what I could see was several shades darker than her mother's almost colorless skin. Where her mother had pretty pink lips, Dorthy had lips that were a deeper red color and they appeared to be a bit lusher than her mother's. Her figure also appeared to be more lush, I was guessing that her body would be well covered with the bones being less apparent, without looking at all fat. And guessing at her breast size, I was guessing that her breasts already equaled her mothers. Dorthy was almost as tall as I am, with wide shoulders, a narrow waist and broad hips.\n\nI had gotten caught up in looking into Dorthy's eyes, watching as her pupils slowly expanded and a blush rose in her cheeks, until she shyly looked down and stepped back. \"I'm very pleased to make your acquaintance and look forward to getting to know you better. I hope you won't think I'm too forward in asking if I might call upon you? With your mother's permission, of course.\" and I looked at Emily.\n\nEmily \"We would be honored if you would come to call. But I'm certain you will be seeing lots of us as the three girls are inseparable, as are Patty and me and we've been hearing nothing from Patty and her girls but how much they are looking forward to seeing their relatives since Patty got your mother's letter. In fact, shouldn't you tell the girls the plans for this evening.\"\n\n\"When Aunt Patty mentioned how much you girls were looking forward to seeing my sisters, I checked with Mamma and she said that everyone can come and stay at Grandfather's tonight, were we are staying. That way you can get together with my sisters first thing in the morning and you can introduce them to Dorthy. In fact, tomorrow you should just send for your things and stay with us while we're in London. I'm hoping that when Aunt Deborah and her daughters arrive, they will come and stay with us also.\"\n\nJoy \"Really? That would be so great. May we mother? It has been too long since we had a chance to really talk with Daniel and his sisters.\"\n\nAunt Patty \"Yes, dear. That would give me a chance to talk to my sister also and make Emily acquainted with them too.\"\n\nCarol \"Could we go soon?\"\n\nAunt Patty \"Well, fairly soon. I would like the opportunity while we're at a ball to dance with my handsome nephew and Emily would probably enjoy doing that was well. And the three of you might want to each have a dance with him also. He is quite a good dancer.\"\n\nJoy \"Would you dance with us Daniel. I'd like that very much.\"\n\n\"Of course, I would enjoy dancing with all of you. I can hear that the current waltz in coming to an end, who would like to go first?\"\n\nChapter Forty-Six: More Dancing, More Seduction\n\nJoy and Carol looked at each other and Aunt Patty and Emily did the same, and all arrived at the same answer \"Dorthy should go first\" said a chorus of voices, as if it had been rehearsed.\n\nI bowed and held my arm out to Dorthy \"Might I have the honor of this dance?\"\n\nDorthy curtsied and placed her hand on my arm \"I would be honored to give my hero this dance.\"\n\nDorthy and I led the way back into the ballroom, where I swept her out onto the dance floor, my right arm around her trim waist, my left hand holding hers. She looked up into my eyes \"Do you feel like our relatives have an agenda having us go first?\" She asked.\n\n\"Well, I'm not sure about my cousins, but I know my aunt and your mother do. They brought me here specifically to meet you. Do you mind?\"\n\n\"No, how could I. I was curious to meet you before from how enamored your cousins are with you and after you saved me, I now want to get to know you even more. Why did you want to meet me so much that you left another event to come here?\"\n\n\"I enjoyed getting to know your mother when Aunt Patricia introduced us, finding her very attractive and when she assured me that her daughter was even more beautiful than she is, I just had to see for myself. I assumed that since she got along well with my aunt, who I have always found to be a good judge of character, that my observation that she was a nice person, as well as beautiful, was correct and that most likely you would be as well. And as far as I can tell at this point, you seem to be a wonderful person as well. A judgment supported by the fact that my aunt and cousins obviously like you a lot.\"\n\nDorthy blushed \"Well, I'd like to think I'm a nice person. But I don't think I'm prettier than Mamma, do you?\"\n\nI thought about it for a moment before responding \"No, I think you are just as beautiful as your mother, but in a slightly different way. Your coloring is a bit more vivid than hers, aside from the red hair, but I find you both equally attractive.\"\n\nDorthy's blush deepened. \"I'm glad you think I'm beautiful. Is that vain?\"\n\n\"Not at all. I hope you might think that I'm attractive.\"\n\n\"I do, and not just because of your looks. Do you think Mamma and your aunt hope that we might become a couple?\"\n\n\"I know they do, they told me so directly.\"\n\n\"And how do you feel about that?\"\n\n\"Well, I keep being told by my relatives that it is time for me to start looking for a wife. I promised them that I would keep an eye open for a likely candidate. I have to say, that I haven't found anyone more likely than you.\"\n\nDorthy looked pleased but rather uncertain \"Is that why Mamma and Patty seem so happy, thinking that they have found us someone to marry?\"\n\nDid I continue the bold approach to things I'd taken so far tonight so successfully? It had the potential to go horribly wrong, but things were going so well, that I decided to stay with my bold approach.\n\n\"No, your mother and my aunt wanting to pair us up has to do with both of them wanting to be my lovers and their hoping that you would be willing to share me with them.\"\n\nDorthy looked astonished and again I had to deal with a dance partner who stumbled \"And do you want to be their lover? Patty is your aunt!\"\n\n\"I want to be their lover very much. I know loving my aunt would be very naughty but I've learned that being naughty can be a great deal of fun. But I want you to understand, it is not about the fun. If I become their lover, I will love them with all my heart, I will not just be using them for my own selfish pleasure. Just as, if you and I marry, I will love you with all my heart. I think both your mother and my aunt could be much happier in life if they have someone to love them as they deserve. Their husbands certainly aren't making them happy, which is why they no longer live with them.\"\n\n\"So your idea of loving someone with all your heart doesn't mean only them? It requires them to share you?\"\n\n\"I have found that I can deeply love more than one person at the same time. For it to work, it is essential that my lovers know, love and trust each other, nothing can be hidden. You should understand, that the women I love also love each other, as well as me.\"\n\nDorthy looked blank \"I don't understand, how can women love each other.\"\n\n\"Now is not the time to explain, especially since you have never experienced being made love to, just trust me when I say that is possible and they enjoy it very much. Both because of the pleasure they give and receive but also because they really do love each other, just as they love me.\"\n\n\"So, if I were to marry you, I would have to share you, including with my mother and I would be expected to participate in making love to your other lovers? Would that include my mother?\"\n\n\"Sharing me would be required if we were to marry. I would hope that you would come to love my other lovers enough to want to participate. No one is forced to make love to anyone else, it would be entirely your mother's and your decision as to whether the two of you were to become lovers. But, I want to be honest with you, I think it would be very exciting to watch you and your mother show physical love for each other.\"\n\n\"And how many lovers would I have to share you with?\"\n\n\"To be honest, I'm not sure how many eventually. For some reason my lovers seem to want to spread our love and the happiness we feel around to more women who they feel would be happier as part of our group. I want you to understand, I haven't asked this of them, I would have been happy with the original group.\"\n\n\"So I'm assuming that they want you to include your aunt? Since as far as I know you hadn't meet my mother before tonight and I don't know of mutual acquaintances that Mamma might have with other people you know. So, they don't have a problem with you including a relative in the group. How will they feel about you wanting to include my mother?\"\n\n\"I think once they meet her, they will accept her gladly. She is obviously a wonderful person.\"\n\nDorthy seemed to be getting over the shock she had experienced at my revelations and now I began to see her mind going to work on the information she had accumulated.\n\n\"So, if they want you to find a woman you can marry, you obviously cannot marry one of them, so they must all be ineligible for one reason or another. Are all of them already married? Or might they be ineligible for other reasons?\" Dorthy was staring at me thoughtfully and I was coming to fear that she was smart enough to figure her puzzle out. \"They don't have a problem with you having a relationship with a fairly close relative, could that be why they are ineligible?\" I could practically see the pieces of the puzzle falling into place in her mind. \"Oh my god, are your lovers your mother and sisters?\" I guess she was able to see the answer in my face because she continued \"That is so naughty! And they love each other too? I still don't see how that works but I guess I'll find out.\"\n\n\"You aren't offended?\"\n\n\"Maybe I should be, but for some reason I'm not. I'm just extremely curious. Do Mamma or Patty know?\"\n\n\"No, not yet.\"\n\n\"Have you make love to them yet?\"\n\n\"Not completely.\"\n\nDorthy lifted a brow \"What does that mean?\"\n\n\"I discovered that your mother had never experienced any sexual pleasure, ever. I'm sorry to say that your father is a terrible husband and made no effort to help your mother feel any sexual satisfaction, in fact he didn't even teach her how lovers kiss. Your mother was curious about what was so good about love making so Patty and I decided that I should show her, so we went and found a room we could be private in and I taught her. I taught her how to kiss and she decided she liked it and she wanted to see what it looked like, so she had me kiss Patty. Patty found the naughtiness of kissing me very exciting and your mother enjoyed watching. Then I suggested they try kissing each other, they found that they liked that also. Then Patty helped me with holding up your mother's skirt and petticoats and I used my hand to caress her pussy until I made her cum for the first time.\"\n\n\"What do you mean come?\"\n\n\"Cumming when talking about love making means reaching the peak of pleasure. It is a very intense sensation of pleasure that is very nice.\"\n\n\"What about your aunt?\"\n\n\"On the way over here in the carriage, I held her in my lap and while your mother watched, I played with her pussy with my hand until I made her cum also. Would you like to know something naughty?\"\n\n\"You mean naughtier than what you've already told me?\"\n\n\"Your mother and my aunt are no longer wearing drawers under their dresses. I had them take them off and throw them out the carriage window, they are somewhere on the road in Hyde Park.\"\n\n\"Well, that is somewhat naughty but not nearly as naughty as a lot of the other things I learned tonight.\"\n\nAt this point we ran out of time as the waltz came to an end \"Will you dance the next waltz with me also so we can continue this conversation?\"\n\n\"I'd like to but what about the others? They're waiting for their turns.\"\n\n\"Let me see\" I looked over to the side of the room where we'd left the others and found them watching us. I looked my aunt in the eyes across the distance and held up two fingers, hoping that she would get the idea that I wanted a second dance with Dorthy. She caught on immediately and nodded and gestured for us to go ahead and then turned to the others to explain.\n\n\"There, we're good.\" and the next waltz started up and I took her back into my arm and we began dancing again. \"Now, where were we?\"\n\n\"So, when do you plan on really making love to Mamma and Patty?\"\n\n\"They are both supposed to come to my room tonight.\"\n\n\"Together?\"\n\n\"Yes.\"\n\n\"That seems so naughty.\"\n\n\"It is naughty. I'm hoping it will get very naughty.\"\n\n\"And when are they supposed to find out who your other lovers are?\"\n\n\"Later tonight. After the three of us have made love, Mamma is going to come in and discover the three of us naked in bed together. Your mother and Patty will expect Mamma to be upset, but Mamma plans to shed her robe and ask to join in.\"\n\nDorthy flushed and her pupils got larger \"Oh my, that does sound very naughty. I wish I could be there to see it.\"\n\nI thought about it for a moment \"We might be able to make that happen. Will you follow my lead when we get back to the others?\"\n\n\"You don't really think Mamma will let me be there do you?\"\n\n\"I think it might be possible. The first thing we need to do is this -- Dorthy, will be do me the honor of being my wife?\"\n\nDorthy got the idea immediately. We'd discussed that her mother and Patty thought it would be good if I married Dorthy, if Dorthy would be willing to share me with them. If we went back to them and announced that I had proposed and she had accepted, and that she would be willing to share me with them, it might make them willing to have her be present tonight.\n\n\"Daniel, I would be honored to be your wife. Do you really think if I'm your fiance that they will let me be there tonight?\"\n\n\"If we make it a condition for our getting married. We'll tell them you want to learn what love making is like so you'll know what to do on your wedding night. I think I had better not become your full lover before our wedding, We're already having to deal with the fact that my three sisters are pregnant and unmarried, which is why we are here in London looking for husbands for them.\"\n\nDorthy looked concerned \"You're planning on foisting off your children on unsuspecting husbands?\"\n\n\"Not at all. The men involved know what is going on. Not that I'm the father, but that my sisters have gotten in trouble and need husbands. This is complicated and I promise that soon you'll learn all the details about how all this came about and what is going on with the marriages but the thing to know is that the marriages, although legal, will not be real, the men will not act as my sisters' husbands except in public.\"\n\nDorthy looked confused \"Well, if you say so, but I can't wait to hear the explanations, they must be fascinating. I just can't imagine how you came to be your mother and sisters' lover.\"\n\n\"Well, if you're coming to like naughtiness, there will be lots of that.\"\n\n\"Good, I can't wait.\"\n\n\"Just for your reference, Mamma and my sisters refer to themselves as Daniel's Harem.\"\n\n\"Really? Yes, I guess that makes sense. So tell me, who else do they want to add to the harem besides Patty?\"\n\n\"They want to add my mother's other sister Deborah, and all four of Patty's and Deborah's daughters. And, of course, whoever becomes my wife. If they have other ideas, they haven't shared them with me yet. I don't know if they anticipated my mother-in-law being part of the harem. I'm hoping they will decide that that is enough, I'm not sure I could handle any more.\"\n\n\"With four lovers, do you get any chance to rest? How will you possibly handle the rest if they all join.\"\n\n\"Fortunately, they love me and realize I can't possibly make love to all of them every night, so except for the first few nights and a couple of special occasions since, Mamma and one of my sisters come to my bed each night. My sisters go in rotation, all three decided that they wanted Mamma to be there when they are with me so Mamma is there every night. By the way, I need you to know that the harem will have to approve your mother and you joining. I have promised them that I would not add anyone to the harem without their approval. I don't think it will be a problem, they know that I need to find a wife so that I can have children I can claim as mine, who can inherit the estate eventually, and I don't think they'll have a problem with including my mother-in-law, it will appeal to their naughty side.\"",
        "\"I hope you're right.\"\n\n\"Well, Mamma at least didn't seem to have a problem with my including your mother in my seduction of Aunt Patty.\"\n\n\"How did all this get started tonight anyway? Did you set out to seduce your aunt?\"\n\n\"Not at all\" and I filled her in on how one thing had led to another and that to my surprise I had seduced both my aunt and her mother.\n\n\"How naughty. And now you've seduced me.\"\n\n\"True. Tell, me are you ready to have a younger brother or sister? Your mother is hoping that I will get her pregnant. For that matter, my aunt wants the same thing. And you should know, that not only are my sisters pregnant, but my mother as well.\"\n\n\"Oh my, that really is naughty! Are you going to want to make me pregnant also? How long will we have to wait to get married so we can become full lovers?\"\n\n\"My sisters will be getting married very soon, by special licenses. If you want to marry me soon, we could probably join them and make it a four couple wedding.\"\n\n\"As far as I'm concerned, the sooner the better. And I like the idea of having your children and it will be fun being pregnant together with Mamma and the rest.\"\n\n\"I'm glad. Should we go now and let them know our news? I'm sure everyone is still going to want to have their dance with me before we leave. I can broach your joining us tonight when I dance with my aunt and then with your mother. It's possible you might have to talk to them alone to finish convincing them, we'll see how it goes.\"\n\n\"Yes, Let's go tell them. I image Joy and Carol will be very surprised and even Mamma and Patty at how fast what they want has happened.\"\n\nAs we were finishing our conversation, I had been steering us toward the side of the ballroom where the rest were waiting for us so we were soon where we could step off the dance floor and walk the few feet to rejoin the group. I kept Dorthy's hand in mine as we approached and I led her directly to her mother.\n\n\"Emily, Dorthy and I would like to have your consent to our marriage, will you give us your blessing?\"\n\nI heard gasps from my cousins and even Aunt Patty looked surprised, as did Emily. Dorthy tugged her hand free from mine and stepped to her mother and hugged her. \"Please say yes Mamma, I can tell that Daniel is perfect for me.\" and then she leaned in to her mother's ear and I was barely able to catch her whisper to her mother \"I promise I'll share him with you and Patty.\" which caused her mother to flush extremely red and look even more astonished.\n\n\"You're sure this is what you want? You've only just meet him.\"\n\n\"Yes Mamma, I'm very sure. I can tell that he is going to be just perfect for us.\"\n\nI don't think my cousins caught Dorthy's use of 'us' instead of 'me' but I could see that Aunt Patty did and I saw her eyes widen in shock. Emily took hold of Dorthy's arms and moved her back far enough that she could study her daughter's face and look into her eyes. Apparently what she saw reassured her.\n\n\"Yes, Dorthy. I will gladly give my consent to you marrying Daniel. But what about Daniel's family? Don't they need to be consulted before this becomes official?\"\n\n\"We will get that tomorrow but I know that Mamma will find Dorthy just as enchanting as I do.\"\n\nEmily looked a little uncertain but then Dorthy put her arms around her mother again \"Thank you Mamma, I promise you won't regret this.\" and she gave her mother a kiss, but this time, not on the cheek but on the mouth. It was a quick kiss, but I could see that it startled her mother.\n\nThen Dorthy turned to Aunt Patty \"You're going to be my Aunt now too. Isn't that wonderful?\" and she put her arms around my aunt and gave her a quick kiss on the lips also. She released my aunt and turned to my cousins and held her arms out. Both rushed to her and had a group hug \"And now we'll be related too, not just friends. Are you happy for me?\"\n\nJoy \"Yes, very happy! Both of us wish we could have married him but people don't approve of first cousins marrying, so Daniel marrying our best friend is the next best thing.\" Joy turned her face toward me \"Congratulations Daniel, Dorthy is a wonderful person and we'll miss seeing her all the time like we do now.\"\n\n\"I promise that you will be welcome to come visit as much as you want, all three of you. Our estate has lots of empty bedrooms that we'd love to have filled by friends and relatives.\"\n\nCarol \"May we visit Mamma? We have always enjoyed when we visited and now with Dorthy there it will be even better.\"\n\nAunt Patty \"Well, we'll have to check with your Aunt Rebecca to be sure it is alright but I don't see why not.\"\n\n\"Actually, my dear Aunt, while I know that Mamma will be very happy to have all of you come and visit, she always is, the only one who needs to give her permission is Dorthy, as she will soon be mistress of the household.\"\n\nCarol \"Oh, I hadn't thought of that. May we come to visit Dorthy? Will it be alright if we stay for a while?\"\n\nDorthy \"I would love it. I'm looking forward to all of us becoming even closer than we currently are.\"\n\nJoy \"And may we still have our dances with Daniel tonight?\"\n\nDorthy \"Of course you may. Daniel, the next waltz is just starting, make Joy happy by dancing with her.\"\n\nSo I obediently offered my hand to Joyce and led her over the floor and then swept her out into the swirling dancers.\n\nJoy \"That must have been quite the conversation you had with Dorthy while dancing. To go from barely acquainted to engaged in less time than two waltzes seems extraordinary. What did you say?\"\n\n\"We had a very frank discussion. I told her how attractive I found her and that I knew she had to be a good person if she was best friends with the two of you, as you were good judges of character, as is your mother. I told her what I was looking for in a wife and she said she would be happy to agree.\"\n\n\"And what did you tell her you were looking for in a wife?\"\n\n\"Some one who would love me and give me children. And who would love my family and share me with them.\" I told her the truth, knowing that she would not realize the implications of what I was saying.\n\n\"Well, that should be easy. Your mother and sisters are so nice it is easy to love them, and so are Aunt Debbie and her daughters. As long as you are not including your father in that requirement, he always makes me feel uneasy.\"\n\n\"Definitely, I'm not including father. But I am including his father and aunt, who are both wonderful people and whose London house we are staying at. Which you will probably see tonight as we thought you might like to get together with my sisters to catch up on things since the last time you visited.\"\n\n\"Really? That would be wonderful. It has been too long since we've seen them. Is Mamma alright with that?\"\n\n\"Definitely, she wants to see her sister also. Now, shall we enjoy the rest of this dance?\"\n\nJoy gave a contented sigh and I brought her closer to me and we concentrated on enjoying the waltz. Eventually it ended and I escorted her back to our group and held my hand out to Carol \"May I have this dance?\"\n\n\"Oh yes!\"\n\nAnd in moments we were on the dance floor when the music resumed. My conversation with Carol went very much as the one with Joy had gone, so I won't repeat it here. This time when we returned to the group after the dance ended I held my hand out to Emily \"Dear future Mother-in-law, may I have this dance.\"\n\nEmily blushed and gave me her hand and we moved to the dance floor, waiting a moment for the music to begin. \"What did you tell my daughter? Because Carol and then Joy were there, I haven't been able to interrogate my daughter, but it is obvious that she knows Patty and I are your lovers and she seems fine with it. How can that be? How did you seduce her in less time than it takes to do two waltzes?\"\n\n\"Well, it only took one each to seduce you and Patty. She asked me some pointed questions and I answered honestly. You have a very smart daughter, she filled in the blanks very quickly herself.\"\n\n\"And she doesn't mind that she will be expected to share her husband with her mother and her friend? And does she know that you have more lovers that she will be expected to share with?\"\n\n\"Yes, I disclosed all of that. I think you should know that it appears your daughter has inherited her mother's interest in being naughty.\"\n\n\"Well, I didn't even know I was interested in naughtiness until tonight, so how could I know my daughter would share what I didn't even know I had?\"\n\n\"You need to know though, that she knows you and Patty are going to come to my room tonight and become my lovers and you need to know that she wants to be there to watch and learn.\"\n\nEmily flushed extremely red \"Oh my god! I couldn't do that? Have her watching while you make love to me!\" The idea might have appalled her as a mother, but I could see her pupils had expanded and her tongue came out and licked her lips. It seemed her naughty side found the idea exciting.\"She can't really want to see me naked being made love to by her future husband.\"\n\n\"Oh, but she does. She wants to learn about kissing and touching and how babies are made. I told her that you and Patty both wanted me to make you pregnant and she thinks it would be wonderful for all three of you to be pregnant together.\" I saw her immediate look of concern \"Don't worry, I'm not planning on making love to her in that way until our wedding night. I don't want there to be any chance of her being shamed for having a baby too soon after the wedding, especially since the wedding will probably happen soon. But she might not be more than a month behind you in terms of getting pregnant. But, I don't think it would be nice to make her wait until after the wedding to experience the type of pleasure I helped you and Patty feel tonight, do you?\"\n\n\"No, I guess not. Just please treat her well.\"\n\nI noticed that she was no long protesting her daughter being present \"Do you really think I would treat her badly? Beside, you will be there to make sure we don't get carried away and do something we shouldn't. You can call a halt to things anytime it seems I'm not treating her right or if I were to get carried away.\"\n\nEmily seemed to take comfort in that. \"And will your aunt be alright with having Dorthy there tonight?\"\n\n\"Leave that to me. I think that as long as she knows you are alright with her being there, she will be also. By the way, Dorthy knows that you and Patty are no longer wearing drawers under your dresses and what happened to them.\"\n\nEmily flushed again. \"You told her about that?\"\n\n\"She was very curious about what we'd done tonight and I told her everything, although not in a lot of detail, there wasn't time.\"\n\n\"I'm so embarrassed! My own daughter knowing about the naughty things I've done.\"\n\n\"Well, soon she will know even more and will have personally witnessed it. And you will witness her experiencing some of the same things.\" and if I could cause it to happen, the two would do more than just witness what happened to each other, but would participate.\n\nWe fell silent and just enjoyed the rest of the waltz. I loved dancing with my lovers, getting to hold them in public with no one the wiser that we were more than just dance partners. The waltz came to an end and I led her back to our group and thanked Emily for the dance and then held my hand out to my aunt. \"I believe this is our dance, dear Aunt Patty.\"\n\nShe blushed but gave me her hand and I led her to the dance floor. We had to wait a moment but then the music started again and I swept her into the waltz, holding her close. We had pretty much the same conversation that I had had with Emily, although she seemed to accept Dorthy being present much more readily than Emily had. That reminded me of a question I had wanted to ask Patty \"Tell me, did you enjoy the fact that Emily was watching me pleasure you this evening. Did you like that she was sitting across from you watching me playing with your naked pussy, watching me putting my finger inside you?\"\n\nPatty blushed but confirmed \"Yes, it made me feel very naughty. And I enjoyed watching you pleasure Emily earlier, although I couldn't see very much as your hand was inside her drawers. I'm really looking forward to tonight to seeing both you and her naked and watching your cock sliding in and out of her pussy. And the thought that Dorthy will be there watching also, is very exciting. And it is exciting that they will both be there to see you making love to me. You said that you aren't going to take Dorthy's maidenhead until you're married but you are going to pleasure her tonight aren't you?\"\n\n\"Of course. I plan on teaching her to kiss, to enjoy being touched, to experience cumming. I won't put my finger inside her because of her maidenhead but I will use my fingers outside of her pussy and I will use my mouth and tongue on her breasts and pussy to make her cum, hopefully several times.\"\n\n\"It is going to be so naughty, watching you playing with a virgin, teaching her about love making. I really enjoyed watching you teaching Emily. Who would have guessed that a married woman would be so ignorant of sexual pleasure?\"\n\n\"Well, we'll soon change that. We've already made a good start. Tell me, did you enjoy kissing her? Had you ever kissed another woman that way before?\"\n\n\"Until you and I kissed this evening, the only person I'd ever kissed like that was my husband and it has been many years since the last time we kissed. He hardly ever bothers to come around anymore, not even to see his daughters. I enjoyed kissing you very much and also enjoyed kissing Emily, both made me feel quite wicked.\"\n\n\"Do you think you might enjoy kissing Dorthy?\"\n\n\"If her mother doesn't mind, I think it would be exciting to kiss a virgin so intimately. But only if she wants me to and her mother doesn't object. I love Emily and wouldn't want to cause her any pain or upset.\"\n\n\"So you wouldn't mind kissing Emily more? Do you think you might enjoy doing more.\"\n\nAunt Patty \"I would definitely enjoy kissing Emily more. What other things did you have in mind?\"\n\n\"Touching her breasts, sucking on her nipples, licking her pussy until she cums.\"\n\n\"Oh my, I've never thought about doing those things to another woman. Do your other lovers do those things together?\"\n\n\"Yes, they enjoy doing it very much. They enjoy it especially when I'm there to watch because they know how much I enjoy seeing them loving each other and and how much it excites me, but they also enjoy doing it when they aren't sharing my bed, just showing how much they love each other.\"\n\nBy this point I was a little surprised that Aunt Patty hadn't figured out that my lovers were Mamma and my sisters. How did she think I was carrying on with multiple women without Mamma and my sisters being aware of it, unless she just thought they were aware but had decided not to interfere. I guess it just didn't occur to her that my lovers could possibly be family members, even though I wasn't showing any shyness about making her my lover.\n\nAunt Patty \"So you would enjoy watching me being naughty with Emily? And maybe also with Dorthy?\"\n\n\"I would enjoy that very much.\"\n\nMy aunt looked thoughtful \"I think I wouldn't mind trying it. I enjoyed kissing Emily, so I might enjoy doing those other things also. It was exciting and very naughty when you had Emily taste my juices on your finger after you made me cum, it made me wonder what it tasted like. I do have to admit I'm looking forward very much to seeing what Emily looks like naked and also Dorthy. So we'll see how tonight goes, if not tonight, maybe another time.\"\n\nI left it at that and the waltz soon ended and I led her over to where the others waited. \"So, is everyone ready to leave?\"\n\nEveryone agreed that they were. So we found our way to the front of mansion and the women claimed their wraps and a servant was sent for our carriages. When the carriages arrived I instructed both coachmen on where my Grandfather's house was, they both assured me they knew the area and wouldn't have any trouble finding it. While I was doing that, Emily and Aunt Patty were organizing who was riding in which coach. Joyce and Carol were put in one and Dorthy, her mother and Aunt Patty got into the other and indicated that I should join them, disappointing my cousins, who had hoped I would go with them. I told them I would see them when we got to the house and closed their carriage door, sending them on their way, before getting into the other and sitting down next to my aunt, which was the place they had left for me.\n\nChapter Forty-Seven: Bringing the Three Together, Getting Them Naked\n\nWe were barely underway before Emily began interrogating her daughter. Did Dorthy really want to marry me? Did she understand that I had lovers she would have to share me with? Did she really mean she would be willing to share me with her and Patty? She couldn't really want to be there tonight to watch me make love to her mother and Patty? The questioning wasn't hostile, it was obvious her mother just wanted to be sure that her daughter understood the ramifications of her decision. Dorthy calmly answered her mother's questions, leaving no doubt that she did know what she was doing, even if she didn't understand all the sexual implications at this point, which was why she wanted to be there tonight, so she could learn.\n\n\"Look at it this way Mamma, if I find out that I can't stand seeing Daniel making love to other women tonight, we can end my engagement now, before it is known. If sharing him doesn't happen until after we're married, it will be too late. I don't think that will happen, I think I must be a much naughtier person than I would have ever thought, the idea of watching Daniel making love to you and his aunt I find very interesting and exciting.\"\n\nEmily seemed struck by this reasoning and rather reluctantly agreed that Dorthy could be there. Dorthy then reached down and began gathering up her skirt and petticoats. \"What are you doing Dorthy?\" her mother asked.\n\n\"I'm going to take off my drawers like you and Patty did. Daniel said he doesn't like having his lovers wearing corsets or drawers. We can't do anything about the corsets now, but I can get rid of the drawers. Would you help me with them Mamma?\"\n\nEmily rather reluctantly helped her daughter bare her legs and lower body. Even though the light wasn't the best, I was able to see that she had nice shapely legs covered by nice lace stockings and thigh carters. Once the petticoats were out of the way, Emily untied her daughter's drawers and when Dorthy lifted herself up, slid them down and off Dorthy's feet. I didn't get a very good look at Dorthy's pussy, because the light wasn't good and the clothes kept getting in the way, but still it was an exciting moment. I'd noticed that my aunt hadn't looked away but had seemed just as interested as I was.\n\nEmily \"What do I do with these now?\"\n\nAunt Patty \"The same thing we did with ours. Throw them out the window.\"\n\nEmily hesitated and Aunt Patty sighed. \"Here, give them to me.\" and she reached out and took them from Emily and a moment later they went out the window, causing Dorthy to giggle. \"I wonder that the people who find drawers on the streets tomorrow when it is light are going to think?\"\n\nBoth Emily and Aunt Patty blushed but also saw the humor and smiled.\n\nDorthy \"So, Daniel, did you like what you saw?\"\n\n\"Very much, although I really couldn't see much, other than you have very nice legs. Nice stockings by the way. I really looking forward to later tonight when I'll finally get to see all of the three of you.\"\n\nAll three blushed but didn't look displeased at the prospect. It wasn't too much longer before we arrived at my Grandfather's house. Joyce and Carol were handed down from their carriage first and then the four of us. The coachmen were instructed to return to the house where Aunt Patty and her daughters were staying, which it turned out was also where Emily and Dorthy were staying, and let the servants there know that they wouldn't be returning that evening.",
        "The door to Grandfather's house opened without my having to knock and Grandfather's butler ushered us in. He informed us that Grandfather had retired for the evening and that Mamma, Aunt Martha and the girls hadn't returned yet, which disappointed Joyce and Carol as they had hope to see their cousins. The butler informed us that my mother had sent word that her sister and friend and their daughters would be coming to stay and rooms had been made ready for everyone. Mamma had also let him know that the guests would be arriving without their luggage, which would need to be collected the next day, and that night clothes should be found for the new guests. She had also sent suggestions as to rooms, Mamma's sister's girls were to be on the floor where her girls were, Aunt Patty, Emily and Dorthy were to be on the same floor as Mamma and I.\n\nServants with candles lit our way, We said goodnight to Joyce and Carol as they were led further up the staircase. I made sure that Aunt Patty, Emily and Dorthy knew which was my room before wishing them a good night and they were escorted further down the hall to their rooms.\n\nI hurriedly made use of my water closet and then in my bathing room undressed, washed and brushed my teeth to be fresh for the guests that I hoped would shortly be showing up, assuming they didn't lose their courage and decide not to come. Once ready, I donned a robe and forced myself to sit down by the fire in my bedroom. Taking a look around, I decided to add more coal to the fire. The room temperature was warm currently but I wanted it to stay that way so we would be comfortable in only our skin. After adding more coal to the fire, I went into my dressing room and brought back a couple of candelabras and lit them so the room was brightly lit. I wanted to clearly be able to see my visitors when they disrobed. Having done that I sat back down after leaving the door to my dark dressing room slightly open, as that would be how Mamma entered my room, through the connecting door from her dressing room, and I wanted her to be able to see into my bedroom without having to open the door and maybe having the motion spotted.\n\nI was beginning to get worried when there was a quiet knock on the door, which I sprang up to open, finding all three of my hoped for guests, seemingly having done the same thing that I had done as they all seemed to be wearing robes and their hair was down, falling down their backs, woven into braids. \"Please, come in.\" and I moved to the side so they could enter, closing the door behind them once they were all inside.\n\nAll three looked rather nervous. \"Would you like something to drink? There is both sherry and port on the side board and also some whisky.\n\nAll three looked happy to get something to drink and requested sherry. I poured three glasses and then a little port for myself. I handed the glasses out and raised my glass in salute \"To three beautiful women who have decided to make me a happy man. I hope that I can do the same for you.\"\n\nThe three blushed and took rather large sips of their sherry, I think to fortify themselves for what was to come. I took a small sip from my port and then set my glass down on a table, I definitely didn't want alcohol affecting either my judgment or my ability to perform tonight.\n\n\"May I kiss you my dear Aunt?\"\n\nMy aunt shivered. The room was warm so I knew it wasn't from cold. She nodded. I think she was feeling a bit shy at this point because of the presence of her best friend and her friend's daughter. I stepped to her and turning us so that we were side on to the other two, put my arms loosely around her, leaned down and kissed her. I kept the kiss gentle at first, not wanting to spook her, but as she relaxed into my embrace, I deepened the kiss until she opened her mouth to me of her own accord. Then I tightened my arms and pulled her more firmly against me and began kissing her passionately. When she responded eagerly, I slid my hands down and cupped the cheeks of her buttocks and squeezed gently, causing her to moan into my mouth.\n\nI decided that it was time to get Emily involved. I lessened the passion of my kiss and slid my hands back up to Patty's back, then pulled back from her lips. She pursued my mouth for a moment before settling back on her feet, she'd put her arms around my neck and risen to her toes as we'd been kissing.\n\nWanting to get Emily warmed up so she wasn't worried about the fact that her daughter was watching, before making things naughtier, I now held my arms out to Emily \"May I kiss you Emily\"\n\nIt appeared that watching her dear friend being kissed had already loosened her reluctance, as she now stepped up eagerly to me and as I put my arms around her, she put her arms around my neck and turned her face up to me. I leaned down and kissed her, lightly at first but as she eagerly responded, I quickly deepened the kiss and began caressing her back with my hands. As she responded to that by pressing herself more tightly to me, I slid my hands down and caressed her buttocks also, causing her to pant into my mouth with her increased desire.\n\nEventually, I brought a hand up and around and cupped her breast in my hand, making sure I did it on the side where Dorthy was standing so that she could see what I was doing. I was able to get a much better feel of her breast now than I had earlier in the evening, she was obviously no longer wearing a corset and there seemed to be fewer layers of cloth covering her. I was pleased to find that I could feel a large hard nipple against my palm as I cupped the larger softer mass of her breast. My caress of her breast drew a moan from her and her kiss became more aggressive, her tongue invading my mouth in response to mine.\n\nDeciding that it was time to up the naughtiness, I slowly ended my caresses and kiss, bringing a little moan of protest from Emily.\n\nLooking down into her beautiful eyes, her pupils wide with desire, I told her \"I'm dying to get a look at Patty's naked body, would you undress her for me? And would you let her return the favor so I can finally see your beautiful nude body?\"\n\nEmily blushed furiously and looked uneasily in Dorthy's direction. Dorthy, catching her look, prompted \"Please Mamma, I want to see what you and Patty look like so much.\"\n\nEmily \"Oohh my! Very well.\"\n\nI finished releasing her from my embrace and moved to Dorthy, taking her hand. \"Here Dorthy, lets sit down so we can watch comfortably and I led her the few steps to where the chairs before my fireplace were, where I turned two to face where Patty and Emily were standing. I seated Dorthy and then took the other chair. \"Now, Emily, I think before you undress Patty, you should give her a good long kiss.\"\n\nBoth Emily and Patty blushed and looked uneasily at each other then at Dorthy \"Please Mamma, Daniel told me how much you enjoyed kissing Patty earlier tonight, I'd really like to see. It sounds very exciting and naughty.\"\n\nReassured that her daughter wanted to see her kiss her best friend, Emily turned to Patty. \"May I kiss you dear Patty? It was very nice when we kissed before.\"\n\nMy aunt did not speak but held her arms out and in a moment they were embracing and their open mouths were glued together kissing each other passionately. I heard a sigh from Dorthy next to me and looked to see her starring entranced at the sight of her mother kissing my aunt. I leaned over and whispered in her ear \"Would you like your mother to kiss you that way? Or would you prefer it was Patty?\"\n\nShe whispered back \"Both, but especially Mamma. That would be so naughty. Just thinking about it makes me tingle. Do you think she would?\"\n\n\"I think she might, if it is broached in the right way. Leave it to me but be prepared to join in, supporting the request. But it won't be for a while yet, we need to get her more accepting of doing things in front of you first.\"\n\nShe nodded to me in agreement and we returned our full attention to the two women kissing in front of us. The two were still kissing passionately, oblivious to their audience. As we watched, Patty's hand came up and cupped one of Emily's breasts through her night clothes, causing Emily to moan into her friend's mouth. We sat and watched for several more minutes as Patty and Emily continued to kiss passionately, before I called to them \"Patty! Emily! It is time to move on.\"\n\nThe women reluctantly ended their kiss, their lips seeming to cling together and when they separated, there was a momentary string of saliva that linked their two tongues, which seemed reluctant to abandon their caresses. Finally, the two women looked to us for further instruction.\n\n\"Emily, turn Patty to face Dorthy and me and stand behind her.\" Emily did as I said and once they were in position, I continued. \"Emily, reach around Patty and untie her robe, then open it and remove it, you can put it over that chair there.\" pointing to a chair to the side of where they stood.\n\nDorthy and I watched as Emily reached around Patty from both sides and untied the robe Patty was wearing. She then opened the robe enough that she was able to get hold of both sides of the front of the robe and draw it fully open, revealing that Patty was wearing a full nightdress that pretty much covered her from neck to ankles. Her feet still wore her ballroom slippers, I guess she hadn't found anything else to put on. \"Patty, can you slip out of your footwear and kick them to the side?\"\n\nPatty did as I asked, using the front of one foot to pull her heel out of the other shoe, which she then kicked to the side, repeating the process with the other shoe with her now bare foot. \"Very good. Now Emily, I want you to slowly gather up Patty's nightdress, gradually exposing her body, so that we can appreciate her beauty a little at a time, before you finish taking it off over her head.\"\n\nEmily obediently took hold of the sides of the nightdress at Patty's waist and began to gather material into her hands, slowly raising the hem of the nightdress from Patty's ankles, so her trim lower calves started to appear, then the middle of her calves, the upper calves, the knees, which I found quite attractive. Her lower thighs came next and then the upper thighs were exposed.\n\nEmily paused for a moment to get a better grip on the bottom part of the nightdress and then resumed. Now, a slight gap appeared at the top of Patty's thighs and then her pubic mound came into view. Lightly haired, a seeming family trait, I could make out her slit, like Mamma, it looked like her inner lips protruded beyond the outer lips as I could just make them out.\n\nI took a quick look to the side, to see Dorthy staring in fascination at Patty's pussy being displayed. I looked back at my aunt, looking up at her face. She was blushing but didn't seem disturbed and when I smiled at her, she smiled back. Emily had been continuing to slowly raise Patty's nightdress and her stomach to her belly button was exposed. Like Mamma she as a slight curve to her belly and her hip bones barely showed through the flesh of her body, but as the nightdress continued to rise, I could see that like Mamma, her hips at the top sloped into a narrow waist before gradually sloping outward again to accommodate her broad shoulders, although that wasn't really in view yet.\n\nThe bunched up nightdress had now reached the bottom of Patty's breasts and Emily had to move her hands holding the nightdress forward to have the slack to get them over the bulge. First the lower curves of Patty's breasts appeared with the shadowy gulf between them, then more and more of the curves until the slightly darker skin of her areola appeared and then her nipples were exposed. I was happy to see that she had the large nipples that seemed to run in Mamma's family.\n\nProgress stopped for a moment until Patty realized that she needed to raise her arms so that Emily could continue removing the nightdress. Patty's face disappeared until the nightdress cleared her head and a moment later, the nightdress joined the robe she'd been wearing on the chair. Patty lowered her arms to her side and stood before us in all her naked glory.\n\n\"I hope you don't mind, my breasts aren't as high and firms as they were when I was young and I have stretchmarks from having my daughters.\"\n\n\"You are absolutely beautiful. You're a mature woman and you show the effects of having brought new life into this world, something I want to help you do again. Your stretchmarks are something to be honored as far as I am concerned. Your breasts also show that you have given life and they are very exciting. I'm looking forward very much to exploring them with my hands and my mouth, especially those delectable looking nipples.\"\n\nPatty flushed with pleasure at my words. Emily, after having disposed of Patty's nightdress had stood for a moment admiring the back view of her friend but had since moved around to the front, to one side so as to not block the view.\n\n\"Emily, don't you think Patty's body is beautiful? Have you ever seen her naked before?\"\n\n\"This is the first time I've seen her naked, other than the brief glimpse I got when we were in the carriage earlier when you made her cum and the light wasn't very good so I really couldn't see as well as I would have liked. This is much better. I think she is very beautiful, and has a wonderful figure. And you're right, her breasts look luscious.\"\n\n\"Would you like to touch her breasts Emily? Patty, may Emily touch your breasts?\"\n\nAunt Patty blushed and looked uncertain \"I wouldn't mind if she really wants to.\" she looked at Emily \"Do you really want to touch my breasts?\"\n\nEmily blushed also \"Yes, I'm very curious to know what it feels like to touch them.\" She looked at me \"What do I do? I've never thought about touching another woman's breasts before.\"\n\n\"Patty turn toward Emily, that way she won't be between Dorthy and me and we will be able to watch her touching you.\"\n\nMy aunt obediently turned a little so she was facing Emily, who was off to the side of us but closer to Patty.\n\n\"Emily, I would suggest that you start by cupping your hands under Patty's breasts and lift them slightly, getting a feel for their heft. You can also squeeze them gently from below, getting a feel for their firmness.\"\n\nEmily reached our her hands but then hesitated. My aunt reached out and took Emily's hands and brought them to the underside of her breasts. \"Go on dear, I really would like to have you touch them.\", then letting go of Emily hands.\n\nWe all watched, Dorthy and I from our chairs, and Emily and Patty looking down, as Emily hefted Patty's breasts and after feeling their weight for a moment, gave the flesh she was holding a tentative squeeze.\n\nAunt Patty \"Do you like the way they feel? I like how your hands feel touching me.\"\n\nEmily \"Really? I'm not hurting you?\"\n\nAunt Patty \"Not at all, you don't have to be quite that gentle.\"\n\nEmily got a little more aggressive in touching Patty's breasts, watching her own hands touching her friend's intimate flesh. Patty gave an appreciative hum \"That feels very good, I like having you touching me. I would have never guessed that being touched by another woman would be so wonderful.\"\n\n\"If Emily were a stranger, you might not like it so much, but because she is someone you love, your mind accepts it and enjoys it. Tell me Emily, do you like Patty's large nipples?\"\n\n\"They look very nice, but are her nipples considered large? My nipples are even larger.\"\n\nI had thought that they might be from the feel I'd had of her breast earlier and was really looking forward to seeing them.\n\nAunt Patty \"Really? I can't wait to see them.\"\n\n\"One step at a time, dear aunt. We'll all see them soon enough. Tell us, did you enjoy breast feeding your daughters?\"\n\n\"Yes, most of the time. When their teeth started coming in it could be a little painful until they learned to not bite.\"\n\n\"Emily, why don't you reminder her what it was like to breastfeed her daughters. See how you like sucking on those delectable nipples that you admired.\"\n\nEmily and Patty blushed again but Emily obediently leaned down and took one of Patty's nipples into her mouth and began sucking on it. Patty moaned and Emily started to pull back but Patty cupped the back of her head and pushed her back \"Please, don't stop, that feels so good. It has been so long since anyone has sucked on my nipples, I'd forgotten how much I like it.\"\n\nDorthy and I watched for a while as her mother sucked my aunt's nipple. Emily had selected the nipple closest to us. Both women had their eyes closed, savoring the sensations they were experiencing.\n\n\"Emily, I'm sure Patty would love to feel you give her other nipple equal attention.\"\n\nAunt Patty \"Oh yes! Please?\"\n\nEmily released the nipple she was sucking and turned her head and sucked in the other one, provoking a moan of pleasure from Patty. We could also see that Emily's hands were continuing to caress Patty's breasts, which I'm sure was increasing Patty's pleasure.\n\nPatty had released Emily's head once Emily went back to sucking on her nipple. Now her hand came back up and cupped it again, pressing Emily harder against her breast. \"Please Emily, pinch my nipple and pull on it.\"\n\nEmily raised her mouth from my aunt's nipple. \"Show me what you want?\" and she slid her hand out from under Patty's. Patty's fingers immediately took hold of her saliva wet nipple and she squeezed it and pulled out on it. \"Like that!\"\n\nEmily replaced Patty's fingers with her own and began manipulating Patty's nipple. Patty's other hand pulled Emily's mouth back to her other nipple. \"So good, it feels so good. It has been way too long since anyone else has touched me like this. I think maybe I'm going to cum! Yes, here it is, I'm cumming!\" and we watched as she shook and seemed to get a little weak in the knees for a moment.\n\n\"Emily, stop what you're doing. Patty is going to need a minute or two to recover.\"\n\nEmily released Patty's nipples from her mouth and fingers and stepped back, looking at her friend with concern. \"Is she alright?\"\n\n\"She's fine. Remember how you felt when I made you cum while you were leaning against the wall? If you hadn't had the support of the wall, you might have felt a bit unsteady also.\"\n\nPatty opened her eyes and straightened up. \"That was wonderful, Emily, thank you. I didn't know I could cum just from having my breasts played with.\"\n\n\"I've seen it happen before. Apparently you have very sensitive breasts and nipples. I'm sure the naughtiness of the situation also helped.\"\n\n\"Patty, give Emily a nice kiss to thank her for helping you cum, and then it is time for you to undress her. I'm anxious to see her beautiful body.\"\n\nEmily blushed but when Patty took her in her arms she willingly returned Patty's kiss. I think Patty was eager to see Emily also, as she didn't draw out the kiss, but released her and turned her to face Dorthy and me. \"Are you ready?\"\n\nIt wasn't clear who she was asking was ready but I answered anyway \"Proceed.\"\n\nPatty, her naked body now mostly hidden behind Emily, reached around her and untied her robe and it soon joined hers on the chair, leaving Emily wearing only a nightdress. Having had her nightdress removed, Patty knew what to do. She prompted Emily to remove her shoes and they were quickly kicked to the side. Moments later, Patty was slowly raising Emily's nightdress, exposing her lower legs, then the upper legs and then her pussy. And finally, I was able to get a good look at her pubic mound. The hair covering it was much more plentiful than that on the women in my family and it pretty much concealed her slit. I'd thought that might be the case, from the feel of it when I'd worked my way through it to caress her slit. The color seemed to be a match to that of the hair on her head, a fiery red. Her skin was a very pale translucent white, through which her blood vessels clearly showed. More and more of that pale skin was being revealed every moment, her broad hips, narrow waist and then her stomach and lower ribs. Then Patty had to shift her grip the way Emily had, to have enough slack to get the nightdress over the obstruction of Emily's breasts, and then, the nightdress was off and Emily stood before us naked.",
        "It was fascinating to watch as she blushed, the color flowing down her chest onto her breasts, all the way to her extraordinary nipples, which were indeed a bit larger than Patty's. If she had areolas, it wasn't apparent and her beautiful nipples had much less color than any I'd seen until now, being a pale rose color. But still they looked wonderful and I was looking forward to examining them more closely and sucking on them, and eventually drinking breast milk from them.\n\nPatty, having deposited the nightdress on the chair, moved to stand beside me to get a good look at her friend. All three of us stared at her in silent wonder, which began to worry her \"Is something wrong? Don't you like the way I look?\"\n\nI finally found my voice \"You look wonderful, your beauty has just struck us all silent in awe. Don't you think your mother looks beautiful Dorthy?\"\n\n\"Oh yes Mamma, you are so beautiful. Thank you for letting me see you naked. I can't wait to see Daniel make love to you.\"\n\nWe got another vivid display of Emily's blush, as her daughter's compliments reminder her of how naughty what we were doing was and how much naughtiness was still to come.\"\n\nPatty \"I love how you look and your breasts look incredible. May I touch them like you did mine?\"\n\nEmily \"If you really want to.\"\n\nPatty \"I want to very much. But first I want to kiss you and feel my naked body pressing against yours, how it feels to have your naked breasts pressing against mine.\" and Patty moved to stand before Emily, turning her a little so Dorthy and I would be able to see what she did. She put her arms around Emily and drew their bodies together, so their breasts pressed against each other, causing both to give a little gasp. Then she leaned in and began kissing her friend passionately. Dorthy and I watched as Patty slid her hands down Emily's back and caressed her friend's buttocks, drawing another gasp from Emily, muffled by Patty's mouth.\n\nPatty didn't kiss Emily long, wanting to start exploring her friends breasts, so she released Emily and moved back far enough from her that she could easily use her hands to caress Emily's breasts. Dorthy and I watched eagerly as Patty started as Emily had, by hefting Emily breasts to get a feel for their weight, then she began exploring them with her fingers, tracing her fingers around her friend's nipples and then feeling the nipple's texture. \"I love your nipples. They are a little larger than mine and I like the color of them.\"\n\nEmily \"Really? I love how dark you nipples are, it makes them stand out much more looking at them.\"\n\nPatty \"Can I taste them?\"\n\nEmily \"Yes.\" and we watched as Patty leaned down and took one of her friends nipples into her mouth and began sucking on it. Emily gave a gasp.\n\n\"Do you like Patty sucking on your nipple Emily? Does it feel good, does it excite you like my playing with your pussy did?\"\n\nEmily \"Yes, it feels very good and so do her hands touching my breasts. I had no idea it could feel so nice to have my breasts played with. Well, I didn't know that it could feel good to have my pussy played with either. I'm learning so much today thanks to you and Patty.\"\n\nAt this point Emily was panting with passion from the feelings that Patty was giving her. I decided that it was time to get Dorthy involved. \"Emily, did you breastfeed Dorthy?\"\n\n\"Yes, of course.\"\n\n\"Did you enjoy it?\"\n\n\"It was very satisfying, feeding this beautiful little baby that I had given birth to.\"\n\n\"Dorthy, would you like to find out what it was like when you sucked milk from your mother's breasts?\"\n\n\"Oh yes, I would like that more than anything.\" and she got up from her chair and approached her mother and Patty. \"May I suck on your nipple Mamma? Please?\"\n\nPatty removed her hand from the breast she wasn't sucking the nipple of, leaving it free from Dorthy. I could see Emily struggling with her new found desires and what she thought she should do \"Please Mamma?\" and I saw Emily give in. \"Yes darling. It is very naughty but if that is what you want, go ahead.\"\n\n\"Thank you Mamma, I love you so much.\"\n\n\"And I love you too, my darling.\"\n\nAnd I watched as Dorthy cupped the underside of her mother's free breast and leaned down and took her mother's nipple into her mouth for the first time since she was an infant. I could see that Patty was watching while continuing to suck on Emily's other nipple, her eyes wide with surprise. I could see that Dorthy was exploring her mother's breast with her hand as she sucked on her nipple. Her hand squeezing the flesh to test its texture and sliding over and around the side and top and back down.\n\nEmily \"Oh my god, this is so naughty! But it feels so good. Oh Patty, I'm starting to feel the way I did when Daniel was playing with my pussy. Oh Daniel, I think my daughter and Patty are going to make me cum!\"\n\nI decided I would make sure of it and I got up and went to them, and reaching between Dorthy and Emily, I slid my fingers over her pussy. I didn't even have to find my way through her pubic hair, just the pressure of my fingers over her hair obscured clit gave her the extra stimulation that she needed to cum.\n\n\"Oh Daniel, that felt so nice. I'm cumming. I love all of you so much.\" and she staggered a bit but kept her feet. I tapped Patty on the shoulder \"Come and take the seat Dorthy was using.\"\n\nShe rather reluctantly removed her hands from Emily and followed me over to the chairs, where we sat down. We watched as Dorthy released her mother's nipple from her mouth and straightened up, before leaning down, she was taller than her mother, and kissing her mother on the lips. I think she had recognized that the time had come.\n\n\"Mamma, would you please teach me how to kiss properly? I want to be good at kissing when I kiss Daniel for the first time. And I would like to kiss Patty too, once I know how.\"\n\nEmily, her face red \"Are you sure you want me to teach you darling? Daniel did a good job of teaching me, I didn't know anything about kissing before he kissed me, and then Patty. Patty is good at kissing, wouldn't you rather she taught you? Mothers and daughters shouldn't kiss each other that way.\"\n\nDorthy \"I really want you to teach me Mamma. Grown daughters shouldn't suck their mother's nipples either but I loved it and want to do it again. You seemed to like it, a lot. I think you'll like kissing me too.\"\n\nEmily, looking searchingly up into her daughter's eyes \"I'm afraid that I'm going to like it too. Where is all this naughtiness going to take us? I had no idea that I could possibly want to be so naughty.\"\n\nDorthy \"Well, I think it will take us to a place where we will love each other more and more and be even closer than we currently are. We're both going to love Daniel and share him with each other and Patty and his other lovers and we will be naughty with them also and love them, because if they love Daniel, then they must be worthy of being loved by us also. And you and I and Patty and Daniel's other lovers will all be pregnant together and have his babies. And I can't wait to meet his other lovers and get to know them. So, please Mamma, will you teach me how to kiss?\"\n\n\"Very well my darling. Let us be naughty together. Now, the first thing Daniel taught me was that lovers don't kiss like this.\" and she pursed her lips \"Instead you leave your mouth relaxed. If you are starting out slow, you kiss each other with your mouth closed like this.\" and she stood on tiptoe and pressed her mouth to her daughters, moving her lips gently over her daughter's before pulling back \"When you want it to get more passionate, you open your mouth and you and your lover use your tongues to explore each others mouth's and play with each other's tongues. I would assume that there is quite a bit more about kissing that I don't know yet, because I'm only starting to learn about lovemaking myself. So this time when I kiss you, imitate what I do with my mouth and tongue.\"\n\nAnd Patty and I watched as Emily kissed her daughter open mouthed this time, her face tilted so that their noses didn't bump. We could tell that soon mother and daughter were using their tongues and the kissing became more passionate. Emily seemed to have come to terms with being naughty with her daughter, as she didn't seem to be in any hurry to end the lesson.\n\nI looked over at Aunt Patty to see how she was taking what was happening. She was staring fascinated, and seemed to find the sight arousing, one of her hands had come up and she was playing with one of her nipples. She caught me watching her and flushed and took her hand away from her breast.\n\n\"You don't have to stop, there is no reason why you can't touch yourself if you want. It is very exciting seeing mother and daughter being naughty like this, isn't it?\"\n\n\"Very exciting.\" and she put her hand back on her breast, giving it a squeeze \"Are you going to make love to Emily and I soon? I want to feel that cock that I felt against my stomach when we danced and when we kissed, inside me.\"\n\n\"Yes, it will be soon, I promise. First, I want Emily to undress Dorthy and then I will use my mouth on Dorthy's pussy to make her experience her first cum. Then I will be at your disposal. Who decides who I make love to first?\"\n\n\"Will you be able to make love to both of us? My husband was always done for the night once he had cum.\"\n\n\"Yes, I can make love to both of you. Whichever one I make love to first is likely to get a much larger load of my cum after all the stimulation I've had tonight but I can cum multiple times in a night with the right encouragement.\"\n\n\"What kind of encouragement is that?\"\n\n\"Well, visual and physical. I love watching my lovers being naughty together. And I love if my lovers use their mouths on my cock, that usually gets me hard quickly.\"\n\nEmily spoke up, I guess they had stopped kissing while I'd been talking to Patty. \"You'll have to teach us what to do. I've certainly never done anything like that, have you Patty?\"\n\nPatty \"No, but I'm certainly willing to learn.\"\n\nEmily \"So am I, what about you Dorthy?\"\n\nDorthy \"Oh yes, I want to learn everything.\"\n\n\"And I'm certainly willing to teach you everything but that won't happen in one night. But we can get on with the next lessons. Emily, please undress Dorthy for us, I'm dying to see her naked.\"\n\n\"Well, we can't have you dying, then who would make love to us?\" Emily moved behind her daughter \"Are you ready to be naked darling?\"\n\nIt seemed Emily had given up protesting against doing things with Dorthy, their kissing lessons seemed to have put all her qualms to sleep.\n\n\"Yes Mamma, I'm very ready.\"\n\nPatty and I watched as Emily repeated with her daughter what she had done in undressing Patty and that Patty had done undressing her. Dorthy was quickly out of her robe and shoes and then her mother was slowly raising Dorthy's nightdress, revealing her legs and then her virgin pussy and then her beautiful, bountiful, high firm young breasts, and then she stood before us gloriously naked.\n\nEven more than her mother, her pubic mound was covered by a thick covering of hair, completely obscuring her slit but I could seem some evidence of its existence, as the lower curls seemed to be moist from juices that had leaked from her in her arousal at the preceding events. Also like her mother, the color of her hair matched that on her head but maybe because it hadn't been tamed by brushing, her pubic hair was a mass of wavy curls. It also had enough volume that it stood out from her body. I was dying to get my fingers into it, to feel its texture and to part it to get to her virgin slit.\n\nI wondered what all three would think when they first saw the bald pubic mounds of Mamma and my sisters. Would they want the same? I hoped so, as I loved being able to see and get to easily with my mouth, the slits of my lovers, but I decided I would convince Emily and Dorthy to leave in place a good sized tuft of hair above their slits, their pubic hair was just too pretty to eliminate entirely.\n\nDorthy's breasts appeared to be slightly larger than her mother's, which made me wonder what they would look like after she had a child. I hoped they wouldn't get so large they would be uncomfortable for her. I'd overheard a neighbor woman who appeared to have a very large bust talking to Mamma, complaining about how they made her back hurt. I hoped that wouldn't be the case here, Dorthy's breasts, while appearing to be the largest of any of my women, didn't appear to come close to the size that woman's had appeared to be, so hopefully even if they got a little bigger with pregnancy, she would still be comfortable.\n\nDorthy also had the largest figure of the women in my harem. By that I do not mean that she was fat, her bones were sleekly covered so she didn't look bony, but she was going to be the tallest woman in my harem, with the broadest shoulders and widest hips. She was what is typically described as big boned. All together, she looked wonderful. With her larger frame, her larger breasts seemed perfect for her and even though she appeared to have the biggest waist, she still had an hourglass figure because of the width of her shoulders and hips.\n\nDorthy was starting to look uncomfortable, as all three of her audience had been staring at her now for some time without saying a word. I quickly broke my silence to reassure her. \"You are absolutely magnificent. I cannot believe that I am going to be so lucky as to have you as my wife.\"\n\n\"You don't think I'm too big? Sometimes I feel so large compared to most women. Mamma and Aunt Patty are taller than many women and your cousins are a little taller than they are, so I don't feel quite so much like a giant around them but I absolutely tower over many women. It is very nice that you are so tall, you make me feel more normal. I'm taller than quite a few of the men that I meet.\"\n\n\"I don't mind how tall you are at all. As far as I'm concerned, your body is perfectly proportioned to your height and you are breathtaking. Shall I call you my Amazon? Somehow when I look at you, that idea comes to my mind, you would make an amazing warrior woman.\"\n\nAunt Patty \"You're right Daniel, I was trying to think of an appropriate way to describe how magnificent she looks and Amazonian fits perfectly.\"\n\nEmily \"Ohh, that's perfect! My lovely Amazon daughter. Your father was good for one thing, he gave me you!\" and I watched as Emily embraced her daughter, for the first time naked body to naked body and she went up on her toes and kissed her daughter passionately on the mouth. Dorthy put her arms around her mother and kissed her back, just as passionately and then she slid one of her hands down her mothers back and caressed her mother's exquisite derriere, causing her mother to moan into her mouth.\n\nAunt Patty spoke up from beside me \"That is so exciting, watching mother and daughter being naughty. Both of them are so beautiful. But I'm dying to feel you inside me, my dear naughty nephew. And I cannot wait to see you loving Emily. And I'm anxious to watch you love Dorthy with your mouth.\"\n\n\"You'll experience my mouth on your pussy also, I plan on making love to all three of you that way first so you'll all have that experience.\"\n\n\"It sounds so intimate, do you really enjoy doing it?\"\n\n\"Very much, I love the way my lovers taste when they are excited and wet.\"\n\nAlthough deeply involved in their kisses, Emily and Dorthy heard what we were discussing and they brought their kissing to an end, separating rather reluctantly. Emily took her daughter's hand and they came to stand directly in front of Aunt Patty and me. It seemed to me I could see ample evidence of their excitement as both their lower pubic hair coverings seemed quite wet and I caught a strong scent of female arousal, one of my favorite fragrances.\n\nSo, who are you going to make love to first? Emily asked.\n\n\"I think it should be Dorthy, she has not cum yet and both of you have cum twice tonight. I will use my mouth to make her cum. Dorthy, have you ever cum before?\"\n\n\"I don't think so, I don't remember ever experiencing what Mamma and Patty went through when they said they were cumming.\"\n\n\"So, Emily and Patty, you will be able to watch as I make Dorthy cum for the first time. Who should I make love to orally next?\"\n\nEmily \"I'd like to watch you make love to Patty. Watching you being naughty with her in the carriage was very exciting, this should be much more exciting as the light is much better and she is naked. Will you be naked also? I'm looking forward so much to seeing what you look like naked.\"\n\nAunt Patty \"Are you sure Emily? I could wait if you wanted to go first.\"\n\nEmily \"Very sure.\"\n\nAunt Patty \"Thank you. Then the next time, you can go before me. But Daniel, you haven't answered her question. Are we going to see you naked now? I want that very much too and I'll bet Dorthy does also.\"\n\nDorthy nodded vigorously.\n\n\"I think I'll wait until I've loved all of you with my mouth before I remove my robe. If I take if off now, you'll probably all want to examine me and that would delay my making you cum, plus your examining me might make me cum. I'll keep my robe on until just before I put my cock in Patty's pussy, once we've both cum that way, the three of you can examine me all you want, which will help get me ready to make love to Emily.\"\n\nAll three of my ladies looked disappointed but seemed to understand my reasoning, so they didn't protest.\n\nDorthy \"So what do we do now?\n\n\"It is time to move to the bed, so we can be comfortable. Aunt Patty, Emily would you please pull back the covers on the bed so it is ready for us. Dorthy, may I hold you and kiss you? Other than dancing, I haven't really had a chance to touch you yet.\"\n\nDorthy \"Please, my hero, defender of my honor, I would love to have you kiss me. And I ache to feel your arms around me.\"\n\nI took my fiance into my arms, enjoying how nearly she of a height with me she was. I also enjoyed the silky smoothness of her skin under my hands, the only part of me that could feel her while I was still in my robe.\n\nDorthy \"Is that your cock that I feel pressing against me. Why don't we see them in the front of men's trousers, it seems like they should be very visible.\"\n\n\"Well, as you'll discover, most of the time they are soft and much smaller. And, for men, we are fortunate that current men's fashion calls for fairly loose trousers. I've seem accounts of men's fashions from the Regency era, where men wore skintight buckskin britches. I would image, they would show it anytime an man got excited.\"\n\nDorthy \"So we excite you?\"\n\n\"Very much. All three of you do. I would be excited if I was alone with any one of you under these circumstances, let alone being with all three of you together. If alone with only you, with you naked, my cock would be hard and waiting to make love to you.\"\n\n\"But you won't make love to me that way tonight?\"\n\n\"No, I will love you, but not with my cock. It will make life much less complicated if there is no chance of you getting pregnant until after we are married.\"\n\n\"But you don't seem to have waited with your sisters, what was different about that?\" Before asking me this question, Dorthy looked to be sure her mother and my Aunt Patty were busy at the bed and she lowered her voice.\n\n\"That is a very complicated story. I promise we will tell you the whole story soon but it wasn't our choice.\"\n\n\"Alright, but I want to know soon.\"\n\nMy aunt now called from beside the bed, where she and Emily had pulled the covers down to the foot of the bed. \"We are ready for you now Daniel and Dorthy.\"\n\n\"Give us a moment please, I haven't had a chance to kiss my fiance properly yet and I would like to do that.\"\n\nDorthy \"Don't you mean kiss me improperly? Considering that I'm naked, in the presence of two other naked women.\n\n\"Very well then, I want to kiss you improperly.\" and I leaned down only slightly and pressed my open mouth against hers. A moment later and our tongues were playing as I kissed Dorthy for the first time like a lover. Her mouth was sweet and I enjoyed kissing her tremendously, but I knew that my aunt and her mother were waiting for us, so I kept the kiss fairly short, releasing her much sooner than either of us would have preferred. \"Come, my dear Amazon, it is time for us to move to the bed.\""
    ],
    "authorname": "GeorgeEHeller1950",
    "tags": [
        "mother daughter",
        "sister sister",
        "nephew aunt",
        "first time",
        "lesbian",
        "creampie",
        "mother son",
        "harem",
        "cousins",
        "victorian style erotica"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-victorian-sex-fantasy-pt-17"
}