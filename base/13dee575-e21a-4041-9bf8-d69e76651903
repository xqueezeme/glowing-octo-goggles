{
    "title": "Chase",
    "pages": [
        "Chase:\n\nSophie took her time catching her breath, daring herself not to look back along the trail, then giving in and looking.\n\nNothing.\n\nShe shivered, partly from the cooling sweat on her chest, partly from the anxious knot that had gotten out of the car with her and followed most of the way around her usual circuit. Sophie sighed and tried to let it go, as much fun as it would have been to have her buddy again today, he hadn't showed.\n\nSophie began to give up on the expectation that he would come jogging around the corner and spot her, smile that smile, speed up to catch her whilst trying not to look like he was.\n\nShe felt the comfortable stretch of the small glass plug she had slipped into her ass before pulling up her shorts and leaving for her run. She clenched it a few times, gripped it within herself and felt the erotic pull, reminding her of the last time she had been so pleasantly filled.\n\nSophie waited another minute, took slow breaths and decided that it didn't matter if the guy from last time wasn't here. Just because she'd been thinking about him since she woke up that morning didn't mean she was offended that he'd said 'Same time next week' and then never showed.\n\nThe prick.\n\nSophie shrugged and looked ahead, getting into an easy jog that would chew up the distance to her car. If nothing else she'd had plenty of exercise bounding around her usual trail. The extra lap had been for her cardio, Sophie decided, not because she wanted to give the guy one more chance to suddenly show up.\n\nSophie relished the breeze on her exposed skin, everywhere not covered by the tight shorts and sports bra she had selected that morning. Her water bottle sloshing to the rhythm of her steps was a familiar white noise, and she left her earbuds around her neck to appreciate the crunch of her feet, the rasp of her breath.\n\nDespite her determination not to be hung up on the quiet stranger she had enjoyed last time, Sophie found herself replaying it. The blush under her skin was mostly caused by the memory of being picked up and taken, the visceral rush of his hands gripping her hips as his cock filled her.\n\nSophie found herself gearing up into a run, her legs bouncing her along as she came over a rise and descended through a tunnel of trees, the hot sun coming through in beams that flickered over her body.\n\nShe was fast even on a bad day, but she barely felt the path beneath her feet as she powered on. Sophie leaned in and sprinted now, like she were trying to take flight, looking but not seeing as the trees whipped past.\n\nIt was always fun out here, one way or another. Sophie felt her lungs begin to burn but carried on, craving the heat of exertion, wanting to stretch every muscle at once.\n\nShe felt a twinge in her hamstring and slowed, chiding herself for getting caught up. Sophie picked a fallen tree that seemed comfortable enough and stopped to sit, gasp air into her lungs, and feel her pulse steady into a familiar pounding.\n\n\"God...\" She sighed then chuckled to herself. Pent-up tension rose from her like steam and she gripped her thighs, grinned in the privacy of the woods.\n\nShe was still looking low at the ground and getting her breath when she heard footsteps ahead coming the other way as they slowed from a solid run to an easy jog, stopped.\n\nThe gasp as she recognised him was covered by her general panting for breath. Sophie forced herself into some kind of composure.\n\n\"Hey.\" She said in between deeper, slower breaths; bit her lip to suppress the smile, but smiled anyway.\n\nHe just smiled back, giving her a long look up and down that Sophie could almost feel under her clothes.\n\nShe returned the look, pretending that the blush in her skin was from exertion. The familiar outline of muscular shoulders, long legs, sweat making the definition in his arms gleam. Those wraparound shades not concealing the lop-sided smile beneath them.\n\nOh, there you are. The look said as its owner pushed bark brown hair from his face.\n\n\"Hey.\" He said aloud, but then grinned and took off his shades to more openly stare at her body.\n\nThis time Sophie smirked and gave him the strong-silent treatment. It had made her blush and bite her lip in the car on the way home before when she realised she never even got his name. In the last few days she had taken to mentally calling him Green, for the impermanent colour of his eyes when they'd lain together after last time.\n\nHe grinned again and stood there, taking her point along with the sight of her gently heaving chest, the mist of moisture on her blushing skin.\n\n\"It's good to see you.\" Green enjoyed a good understatement, but Sophie was more focused on the way that deep low voice of his made her clit ache for attention.\n\nSophie realised she wasn't going to win in a flirtatious stare-down right now, not with the joyous heat of her pussy melding with the taut sensations of the plug she wore, nor with the memory of him having her just seven days ago.\n\nShe stood with her feet apart, hands on her hips, affecting total confidence even though her legs wanted to melt. Some combination of the toy, the memory, and the extra lap she had just run gave her an unsteady rush.\n\nThere was another sound of footsteps and Sophie was about to start jogging again so they could talk on the move, but he gestured for her to stay and looked back over her head, recognising the newcomer.\n\nSophie took a nonchalant sip of her water and peeked over her shoulder as the footsteps got closer, hoping no-one noticed that she was still hot and pink and trembling inside as her body craved to just throw him down on the dirt and mount him right there on the trail.\n\nShe shivered as fresh sweat sprang out on her back for the breeze to lick at, the second man coasted to a halt and stood between them, forming a rough conversational triangle.\n\n\"Hi.\" The newcomer said.\n\nSophie was mid-sip from her bottle and didn't reply at first.\n\n\"This her?\" The new guy seemed to know her deep-voiced lover.\n\nGreen nodded, the pair shared a look. Then they both took a long look at her.\n\nSophie felt herself blushing more, her nipples raising bumps in the fabric of her sports bra.\n\n\"Gorgeous.\" The newcomer said, his permanent cocky grin increasing as he saw her reaction to them. They were all friends here, and apparently there were no secrets between them judging by the helpfully obvious way they were undressing her with their eyes.\n\nSophie caught the newcomer's gaze, considered checking his attitude right there, getting her playmate to herself for another of those sweetly savage fucks just out of view.\n\nBut she looked at Green, his expression telling her to trust him for a minute, see where it led. Then Sophie realised why the men had been running in opposite directions before.\n\nTo find her faster.\n\nSophie was convinced that they could see her getting wetter at the idea, as if she really needed more stimulation after running around with the pleasurably distracting toy inside her, the memory of last time promising more to come.\n\n\"Took you long enough to get here.\" Sophie enjoyed softly taunting them, had to bite her lip to stop from grinning as the implication settled easily into the conversation.\n\nBoth of them, here and now.\n\nSophie wondered if they were old friends, or more, or if they only met while putting their trainers on in the car park just now; and then decided not to wonder about questions that weren't important.\n\nThe important question was what she wanted, what she needed.\n\n... What she had needed all week.\n\nMore.\n\nIt seemed a silly thing to just say 'yes', even though that's exactly what she wanted to do. Instead, she took inspiration from Green and said it without words.\n\nSophie fixed them each with her gaze before looking away from the path into the trees, focusing on a spot, and confidently picking her way through the low branches, knowing they would follow.\n\nShe could feel their eyes on her back, her ass, roving along the insides of her thighs as she ducked and strode away from the trail, leading them in an unhurried chase.\n\nHer trembling knee buckled just a little as a branch shifted under her foot, but she bit her lip again and carried on, feeling the breeze wrap around her body in a lazy vortex.\n\nEvery sound seemed louder, each crackle and rustle of foliage under their feet, the gristle of bark under Sophie's hand as she gripped it for balance.\n\nShe looked back and watched both pairs of eyes slowly lift from her body to meet hers, the same expression on both faces. Sophie felt an anticipatory clench around her toy, she was really doing this...\n\nShe enjoyed the tease of it, skipping ahead a little so she could turn and watch them, waiting for them as she breathed deeper and felt her pulse as a steady bang against her chest.\n\nGreen grinned when he caught her eye, as the pair caught up in a small low clearing.\n\nThey were away from the trail now, someone would actually have to come looking to notice them here. But there were still occasional glimpses through the branches as the wind moved them, making Sophie's taut nipples pulse with the idea that someone would see just enough to be turned on.\n\nGreen came closer to her, his hand catching hers as she stepped in close. She found she had missed him, followed the suddenly strong urge to hug him for a moment.\n\nShyness seemed to come in waves, but she held on to him and shut her eyes for a second, let the feeling pass. Green's hands were affectionately caressing her body, his light touch exciting her exposed skin as he traced fingertips around the bottom hem of her sports bra, clearly looking forward to the moment when he would just lift up and expose her breasts.\n\nSophie wanted him to, and thrust her chest out as he tugged on the fabric, his other hand taking a squeeze of her ass that made her squirm and lean into him more.\n\nHer blush was radiant now, constant heat pouring from within. She was constantly aware of her hard clit, wet and eager inside her tight shorts.\n\nSophie felt the other man's eyes on her and shyly lifted her gaze to meet his, realising they hadn't gotten as far as introductions either.\n\nThe newcomer was a good mix of cute and handsome, perhaps slightly more the former. Not too tall or short, his muscles well defined without altering the slender lines of his shoulders. He watched her with an open appreciation, the almost-smug look of a guy who was biding his time, but with a sly edge in his blue eyes that couldn't quite believe what he was seeing. Sophie decided that Blue was a good enough name for her second anonymous lover.\n\nBlue seemed content to look for now, standing just out of arm's reach as Sophie brought her attention back to Green's grazing, teasing touches. He gripped her ass in both hands and Sophie clenched around her toy, the sensation taut and hot as she remembered the feel of his cock there.\n\nSophie squeezed her thighs together around his hand as he gripped her mound, sighing as the urgent tension in her clit threatened to burst.\n\nShe writhed and swayed in his arms as he turned her around for the other guy to see, displaying her for him. Sophie grinned and kept her eyes shut, a bargain with her own shyness so she could keep moving, keep thrusting her body to meet Green's wandering hands.\n\nHe tugged her sports bra up and off with the rattle of earbuds coming free, the delightful wash of air on her chest. She moaned softly as he slid one hand up her body to grasp and tug on her nipple, the other slid down beneath her leggings and stroked two fingertips easily into her soaked, clenching pussy.\n\n\"Oohh...\" She moaned again, a little louder this time. She turned her head to look at Green, plead with that warm smile to stop teasing her. She'd been ready for this since the second he ran up and smiled at her again. She'd fantasised about this every morning in bed since the first time, had re-enacted it in the shower with her favourite dildo a couple of times too.\n\nIt was different here though, where she could feel the breeze kissing her hot skin, his gentle fingertips slick in her pussy, his thick cock a hard bulge against her ass as she ground against him.\n\n\"Fuck...\" Sophie arched forwards as Green began slowly circling her g-spot, almost bent double with her ass snug in his lap. She hung there in his grip, teased beyond her ability to concentrate on anything else. \"Yes...\" She hissed softly as his rhythmic circling made her clench around her toy, grind against his cock.\n\n\"So beautiful...\" Blue said, Sophie looked up at him, saw he'd stripped off his hoodie and t-shirt, kicked off his trainers.\n\n\"Mmm...\" She bit her lip again at the sight of his body, eyeing him slowly up and down before Green's touches distracted her again.\n\nSophie was the last to notice crunching footsteps on the path, she hadn't gone far into the trees and they were only hidden from sight, not sound. Green's large hand clamped over her mouth and she shivered around his fingers still gently teasing her pussy.\n\nHe didn't stop though, even as both men held their breath just in case someone heard them. Sophie grinned against his palm and tried to keep still, compromised with a slow wriggle in time with his fingertips. He circled her g-spot and then ran his soaked fingertips slowly over her clit, back and forth, back and forth.\n\nSophie moaned quietly to herself, not really caring who heard so long as no-one stopped. Green kept it up until the slow footsteps were gone, nuzzled her ear as he chuckled softly at her predicament.\n\nReluctantly, he let his hand slip from her gasping mouth, slowly withdrew his fingers from her pussy; openly sucking her taste from them as he picked up Sophie's sports bra and headphones. Next he took her hand and led her a little further from the path.\n\nBlue went ahead, and Sophie felt a pulse run through her clit as he turned and she saw he was rock hard for her inside those shorts, even though he carried his bundled up hoodie in front of his lap.\n\nThe men seemed to silently agree on a spot, the edge of a clearing where there was soft grass, no signs of people wandering through.\n\nGreen gripped Sophie by the hips and turned her around for a long, slow, I-was-thinking-about-this-all-week-too kind of kiss. She enjoyed him, put her arms around his waist and squeezed his ass, feeling him up the same way he was doing to her.\n\nBlue came over, now the others had caught up, and leaned in to kiss Sophie's cheek. It was an oddly chivalrous gesture from a half-naked, rock-hard stranger and Sophie appreciated the thought.\n\nBut she'd been teased quite enough now, so she kissed him back and gently bit his lower lip. Blue was a good name for him, Sophie confirmed, but it didn't quite do those eyes justice. His hand rose to her breast, Green already having claimed her other one, and he toyed with her hard nipple as she kissed him.\n\nTheir other hands co-operated on some unspoken male level and peeled her shorts slowly down. Sophie kicked off her trainers too and hummed softly into another kiss as she was naked and free, worshipped by the two men's hands.\n\nSophie was turned around between them, Blue's hands on her ass pulled her closer to him. She kissed him again, enjoying his playful tongue against hers. It was a hell of an introduction, but like last time Sophie found herself going with it.\n\nGreen had taken a moment to shed his clothes, and Sophie felt the warm pulsing shaft of his cock first as it nestled snug against her ass. He cuddled her affectionately as she arched her back to feel him, big and thick and aching for her.\n\n\"God...\" Sophie crooned as they both picked the same moment to kiss either side of her neck; she was so sensitive there it made her legs go weak. Soft little kisses as Blue lowered his head to her breasts, as Green sucked her earlobe, as the three of them settled into an easy three-way hug.\n\nShe had a hot, gorgeous, rock-hard man in front of and behind her. She was dizzy and tingling with the sensation of four hands caressing her body, two mouths softly kissing her.\n\nGreen had noticed the flared base of her plug as he rubbed his shaft against her ass, chuckled softly against her cheek as he continued to teasingly make out with her.\n\nSophie was open-mouthed and panting as Blue sweetly bit her large nipple and then sucked on it, the warmth flooding outwards under her skin. Green was pressing on the base of her toy now, subtly fucking her, making her feel the fullness of it before he gripped it and slowly eased it out.\n\nSophie was looking straight up when she opened her eyes, her head relaxed against Green's shoulder as he started playing with her tits; gripping them just hard enough to make them throb with sensation, tweaking her nipples to make her writhe against his cock.\n\nThey turned her around, facing Green as Blue now became intensely interested in her ass. He sank to his knees and kissed her butt, nuzzling between her cheeks as his tongue licked slowly upward.\n\n\"Oh God...\" It was a familiar blasphemy for Sophie, but she said it with feeling as she felt Blue's tongue press into her. After the internal throb of her toy, the soft wet of his tongue was perfectly contrasting.\n\nShe wiggled against Blue's mouth as he lovingly kissed, licked, and softly tongue-fucked her ass; but Green took her chin in his hand and watched her up close, leaning in to kiss her cheek, teasing her by turning her face away when she tried to kiss his mouth.\n\nAlways playful, Green's eyes reflected the thrill in Sophie's. She reached down and gripped his cock by the base; bit his lip as he kissed her to focus his attention.\n\nFuck me. Sophie said without words. Fuck me right here.\n\nGreen held onto her chin as he kissed her, nodded as he bit her tingling lip.\n\nSophie felt a strong grip behind her knee and went with it, allowed herself to be half lifted, opened herself completely to them. Blue's tender ravishing of her ass combined with all of those teasing kisses had left her soaking wet, her thigh trembling as she stood on one foot being caressed by them both.\n\nBlue rose up behind her in a trail of kisses along her spine, licking her skin. Sophie wobbled as her other knee was hoisted up and she was suspended between them.\n\nGreen smiled at her, re-assuring and warm, kissed her chest as the men both lifted her up between them, each of her knees held in the crook of an elbow. She trusted them not to drop her, shivered with sudden nerves as she imagined someone watching all this.\n\nThey nuzzled and kissed her neck again, they caressed her exposed, blushing, spread-open body between theirs. Blue tousled her hair in his free hand, letting it down from the tight binding she used for jogging, keeping the hairband around his wrist. He nuzzled the back of her neck, breathing in her scent as he swept her hair over her other shoulder so he could kiss along the nape of her neck.\n\n\"Hold tight.\" Green grinned at her, caressing her ass with slow strokes of his palms as Blue gripped his cock and began rubbing it against Sophie's pussy.\n\nIt was another of their delicious teases, and she didn't really think about where it was going until Blue was rubbing the slick tip of his cock between her cheeks.\n\nSophie blushed in one long hot pulse, put her arms around Green's shoulders for support. She nodded, answering the question before anyone asked.\n\nShe was up for this.\n\nBlue teased her just a little more though, kissing her earlobe and then her cheek as he ground his shaft against her butt.\n\n\"Mhmm...\" Sophie buried her face in Green's shoulder as she got as close to pleading as she thought possible. She needed this. She'd needed this since last time, and she'd needed that for a long time before then.\n\nSophie stuck her ass out for his cock, busied herself kissing Green's neck as another wave of tingling flooded through her skin. Green stroked her hair away from her neck, caressing her ear with his thumb, soothing her in his arms.",
        "Blue pressed his pulsing tip to her ass and began to slowly thrust inside with a rising, sighing breath. His free hand was stroking her side where she was pleasurably mashed between them, slowly up and down, keeping gentle despite the urge to bury himself inside her.\n\n\"Ohh...\" Sophie felt herself relaxing, accepting his cock. She'd felt tiny compared to them before, but now she was lifted up to their level they shared an intimate space. Sophie focused on staying relaxed as Blue's cock subtly stretched her, glad she had come prepared with her toy again. She felt him throb inside her, heard his cute little moan against her neck as she took all of him in one slow stroke. \"Fuck... yes...\"\n\nSophie delighted in the warmth of them both holding her tight as Blue filled her and held himself there, grinding slowly as he let her get used to him.\n\nWith all the build-up, Sophie had been ready for a while. Now she just luxuriated in the intimate friction of his cock easing in and out of her by degrees, moaned into Green's shoulder as he stroked her spine slowly up and down.\n\n\"Fuck...\" Blue whispered. \"Fucking perfect...\" He complimented her just to see her blush, but he meant it too. He had an erotically explicit view of her, from where the shaft of his cock parted her ass to the way she nibbled the tip of Green's tongue as she moaned for them.\n\nCompletely exposed to them both, Sophie started rocking in their grip under her thighs, thrusting her ass back to meet Blue's cock. She turned from her kiss to meet Blue's gaze, daring him to go harder.\n\n\"Look at her go...\" Blue kept up the commentary between halting gasps at the feel of her flexing fit body bouncing on his cock. \"I can see why you like her.\" The guy teased, talking about her instead of to her.\n\n\"Cocky bastard...\" Sophie grinned and made a show of making out with Green, and then it stopped being a show as he began teasing her clit with the tip of his cock, dragging it down between the folds of her pussy and then back up. She was so wet he was already slippery, the feeling exquisite combined with the increasingly passionate fuck Blue was giving her.\n\n\"Mmmm...\" She crooned into the kiss, becoming obsessed with his lips as the other sensations lapped at her attention. She felt like she wouldn't be able to hold on for long and then remembered it really didn't matter. There was nothing in the pair of confidently strong grips on her body that suggested they would just stop right now.\n\nThe giggle bubbled up from her as she rocked between them, Blue fucking her hard and fast enough to make her nipples jiggle against Green's chest.\n\n\"Oh...\" Sophie pouted as Green continued his slow teasing of her clit, she looked right at him, gave him both barrels of her 'oh please mister' expression.\n\nEven the quiet giant couldn't withstand that look for long. He actually blushed, grinning at her.\n\nBlue stopped for a moment, they all seemed to be holding their breath as Green's cock pressed deep into Sophie's pussy, then all the way as he felt her accept him.\n\n\"Oh... Fuck!\" Sophie beamed at the sky through closed eyes, feeling either of them alone was wonderful, but feeling them both together was... \"Mmmff...\"\n\nSophie's train of thought was interrupted by Green's rough warm palm as he clamped it back over her mouth.\n\nOh yeah. Sophie remembered there were people jogging a few dozen metres away from her right now, blissfully unaware that she was being sweetly ravished by two big, naked, sighing, purring men.\n\nShe giggled into Green's hand and then was forced to go back to barely-suppressed moans of pleasure as his thick cock pressed snug inside her pussy. He moved his hand from her mouth, kissed her instead to keep her quiet.\n\nThey stood there with her, too distracted by the way she was writhing between them to do more than watch and groan at the sensations of her tight body filled with them both.\n\nSophie felt Blue's legs tremble as he sheathed himself in her, felt his hot breath between her shoulder-blades as he panted more from sensation than effort.\n\nShe saw the blissful blankness in Green's eyes, mumbled happily into his kisses as they both slowly started moving again.\n\n\"Oh...\" She whispered it now, gripping Green's shoulders tight. They felt bigger inside her, bigger still when they pressed together. \"Fuck yes...\" She kept her voice low but growled in passion at the overwhelming feeling.\n\nShe'd done this before with toys, had found it an interestingly intense sensation but hard to pull off alone. Now she was being held aloft and shared by the two men as they grunted and sighed, thrusting and touching and kissing without pause.\n\nSo... full. It seemed obvious but the sensation itself made it impossible to keep still between them. She struggled and giggled and moaned as she tried and failed to stop writhing and let them fuck her hard.\n\nInstead it was a slow, dancing, teasing sort of screw. Neither of them were in any hurry to do anything but feel her; Blue's free hand slid around her hip and he tugged her nipple, kissing her shoulder as he watched Green kissing her mouth.\n\nGreen smiled and lowered his head to suck the hard pulsing nipple Blue was playing with, letting Sophie turn her head to taste Blue's tongue. It sent freshly charged bolts through her body, seeming to spread outwards from her clit every time it grazed against Green's shaft, arcing out along her trembling thighs.\n\n\"Wow...\" She whispered as they both picked the same moment to thrust deep and give her a squeeze between them. She rocked like she were riding some powerful four-legged beast, then blushed as she realised she kind of was. When they moved together it was a series of bounding, squeezing, intense leaps; when they alternated it was an infinite loop of teasing friction and pressure that Sophie ground against.\n\nThey were both connected by her in more ways than one, the newcomer seemed to share Green's sentimental attitude to casual sex. Sophie was pretty sure they never stopped kissing her, there was always at least one of them sweetly smooching her skin or playfully tasting her tongue.\n\nSophie was so distracted by throbbing cocks and tender mouths that she only noticed the on-coming rush of orgasm when it was too late to do anything but yelp and then helplessly, breathlessly spasm between them. She shivered all over for long seconds as the stimulation went on and on, perfectly impaled by them both; every movement sent glowing bolts along her limbs.\n\nSophie seemed to dangle in space, the men fucking her all she could focus on. She writhed against the firm crush of their hips clamped to hers, eyes drifting closed as her mouth hung half open. She tensed up once, twice, and then shivered through a pattering of hot/cold drips that seemed to seep straight to her bones.\n\nShe realised she needed to breathe in again and did so, the tightening sensation deep within her resolving again into the slow easy thrusts of her lovers.\n\n\"God yes...\" Sophie's perspective tilted as her head nodded forwards, gasping her words. \"Fuck!\" She groaned low and hard as something like an aftershock wracked her again, making her clench around both of their cocks, grip Green's chest and hang on tight.\n\nHer reaction made them both gasp, thrust deeper and harder; both together making her clench, making them thrust, until finally Sophie couldn't do anything but grin and pant as the tension in every muscle unspooled at once.\n\nBehind her, Blue was straining and gasping as he held himself deep in Sophie's ass, grumbling that he had to hold back or risk her bucking clean out of their grip. He was cute about it though, she felt him kiss her shoulder-blade and then rest his face against her back, his cock still rock hard and pulsing.\n\nGreen was staring right into her eyes when she opened them, his face flushed with effort and his grip around her squeezed tight; similarly holding back for her, or maybe just to watch her. The animal glint in those hazel green eyes of his made Sophie tremble all over again; made her feel like she was being taken rather than seduced.\n\nThey stared at each other, just breathing and staring as Sophie's nerves sparked at random, making her twitch and sigh as they gave conflicting reports of impossible sensations. She knew she should probably feel precarious to be held up between them, but it was more like being wrapped in the most complete hug she'd ever felt.\n\nSophie really did feel dizzy now though, swayed a little in their arms and then tensed up as Blue slowly withdrew from her ass.\n\n\"Here.\" Blue said, his voice quietly intense as Green carried her over onto the grass. Sophie clenched around his cock playfully as his steps made her move against him, moaned as he released her legs one at a time.\n\nSophie felt tiny in his arms, his hands on her ass holding her aloft, keeping his cock inside her. She was only five-seven or so, he must've been six-three or four, so her feet dangled near his shins as she chuckled and hugged his chest, not wanting to let him go for a second.\n\nGreen knelt and laid Sophie easily down on the soft grass, she shivered as he kissed down along her body, watching Blue as he stroked his cock at the sight of them.\n\nThe men shared a look, and Sophie felt her breath catching as he lay down on the grass between her thighs and joined Green in his kisses as they trailed down from her generous breasts, across her flexing abdomen, and to her heated, sticky, throbbing pussy.\n\n\"Ahh...\" Sophie clamped her own hands over her mouth this time, a crimson blush rising through her as each of the guys put one of her thighs over their shoulder to spread her wider. \"Mmm...\" She allowed herself low hums of pleasure; let her arms fall out to the sides as she happily surrendered to whatever came next. The sun warmed her heaving chest as she alternated between tensing up and sighing in pleasure.\n\nOne of them, Sophie couldn't tell which right then, was lapping with teasing slowness directly up over her clit; the other was sucking softly on her lips, pressing their tongue into her for a taste.\n\n\"Yes...\" She hissed softly as they deftly changed over, Sophie couldn't quite divide the sensations anymore, didn't care. She was sensitive still, her thighs tensed as one of them kissed and then directly sucked on her clit. \"God...\" Her hands found fistfuls of grass to grab onto, she opened her eyes to the empty blue sky and whimpered in stifled ecstasy.\n\nOne of them was lifting her thigh, she thought she was about to be picked up again but instead she was tilted at the hips, her dangling foot alighting on someone's back as he nuzzled deeper between her legs and began licking her ass in long strokes.\n\nSophie turned onto her side for them and let her gaze wander down to where the pleasurable fizz was slowly coming back into focus.\n\nThe men were on their sides, facing each other as they each devoured her from a different angle. The thrusting of tongues and the low growls of approval they made as they tasted her sent Sophie into a long reverie of rolling her hips against their mouths, propping herself up on one elbow so she could see both of them at work.\n\nBlue's eyes were closed as he focused entirely on his task, which seemed to be fucking her just as deeply with his tongue as he had with his cock. Sophie rubbed her thumb across his ear by way of communication, got only a glimpse of a grin before he was too busy making out with her ass again. He felt so tender like that, lapping deep inside with his hot, soft, wet tongue. She held the back of Blue's head to keep him on-task and returned her attention to the man apparently obsessed with tasting her.\n\nGreen's eyes flickered as the shadow of her rocking thigh moved across them, he was the one so eagerly kissing her pussy. Sophie took a soft grip on the back of his neck, gripping his hair to pull him a little harder against her, wanting a little more pressure.\n\nGreen complied with another of those purrs, they made her pussy wet to hear them but feeling them transmitted through her mound was like a vibrator for a second. Sophie trembled all over as he did it, and then rocked as she giggled despite herself.\n\n\"That's so fucking...\" Sophie was interrupted by him doing it all over again, sucking on her clit this time to make it as intense as possible. \"Fff...\" She remembered in time and bit her lip, moaned as softly as her body allowed.\n\nGreen set her foot down on the grass and slid up next to her on his knees. He bent down for a kiss, which became a long, smooching, nuzzling affair that Sophie eventually noticed was probably his adorably direct way of keeping her quiet.\n\nShe had another idea though, and snaked her arm under and between his legs to take an insistent grip of his cock. Green hummed against her tongue as he carried on making out with her, his usual composure slipping as Sophie's hand stroked gently up the inside of his thigh.\n\nShe gripped Green's hard, thick cock by the base and gave him a squeeze. She loved how big he felt in her hand, how he pulsed against her palm as she closed her fingers around it and slowly stroked the shaft. She pulled on him to bring him closer, he shuffled on his knees a little as Sophie propped herself up again, and eased his aching manhood into her mouth.\n\nNot the only one who wants a taste... Sophie thought, looking up at his expression as her tongue swirled around the tip of his cock. She grinned around the hard shaft in her mouth as she saw he was blissfully distracted by the blowjob, his hand absently stroking Sophie's hair as he enjoyed every long deep kiss of her mouth.\n\nBlue, perhaps feeling a little left out, now gripped Sophie by the hips again and this time turned her onto her front, tugging on her hips from above until she was on all fours between them. Sophie felt herself throb with arousal as Blue lined up with her hips from behind, arched her back at the same time she engulfed Green's cock with another long sucking kiss.\n\nBlue pressed into her with a little more confidence this time, gripped her hips and pulled her ass back into his lap. Sophie chuckled around Green's cock as they moved her, happy to be their shared toy considering how much fun it had been so far. Blue seemed to be a fan of hard energetic fucks, which would have probably been too much for her if not for the preceding long minutes of soft tonguing and kissing.\n\nSophie could count on one hand the number of men she would trust to fuck her like this; and it was odd to think that two of them were inside her right now even though she didn't know their names.\n\nGreen thrust into her mouth now, unable to help himself with her tongue so hot around his tip; Sophie wasn't sure which she liked more, the feeling of being bounced between both alternating cocks, or the feeling of being squeezed from both directions as they fucked her in unison. They both had their charms, and Sophie was happy to muse on the issue as she slurped, licked, sucked, and then eventually deep-throated Green's thick cock.\n\nGreen held still for that, partly out of consideration for her but mostly because he knew he wouldn't be able to stop himself from just slowly fucking her tight throat until he came or she tapped out. He stroked the dark hair from Sophie's face as the breeze whipped it over her back; he rubbed her bulging cheek with his thumb as she sucked on the tip, slowly tracing his fingertip across her lips as she swallowed him.\n\nShe felt Green tremble as he had to remember to balance there on his knees, she shut her eyes to focus on the feel of both men inside her. More isn't always better, she knew, but this seemed to be one of the exceptions.\n\nLong moments like that as all three of them wordlessly agreed to slow down and enjoy every slow stroke, every sweet little kiss and suck.\n\nSophie came up for air and Green sat on the grass in front of her, giving her more comfortable access to his cock. She grinned as he tousled her hair and held it behind her neck to keep it from falling into view, feeling an oddly-proud blush at that, loving the fact that he enjoyed the visual just as much as the hot, tight friction of her mouth.\n\nBlue's hands on her back gripped her shoulders for more leverage; but then slowly meandered back to her hips as he kept staring at her gorgeous ass being pleasurably divided by his throbbing, aching, flexing cock.\n\nGreen lifted her up and Sophie was already leaning in to kiss his lips, her arms circled his hips and held him there. Sophie was discovering the thrill of contrast between the hard fuck and the soft kisses, she gripped Green's ass and nibbled the tip of his tongue between her teeth, making him smile.\n\n\"Having fun?\" Green whispered in her ear as he kissed it.\n\nSophie was about to answer but it came out as another giggling, whimpering, sighing moan as he punctuated the question by sliding his fingers into her pussy and going for her G-spot again. When he beckoned on that spot Sophie's body wanted to curl up into an orgasmic ball and explode, but on her hands and knees all she could do was wobble in place and try not to moan too loud.\n\nGreen pushed her upright and moved in close, hooking one elbow under Sophie's knee, an intense look in his eyes. Sophie was panting again as Blue did the same from behind and they lifted her between them again, just enough for Green to rub his slick shaft against her clit once, twice...\n\nAnd then thrust back into her eager pussy as Sophie let out a halting sigh, shuddering with each inch of him that stretched and squeezed her.\n\nShe almost expected another hand over her mouth, but instead Blue ducked his head under her shoulder and turned her a little. She was still erotically pinned between their rocking hips, but now her shoulders were side-on between them, one arm around each of them without having to twist too much. She was low enough to get her feet on the ground now, planted them solidly either side.\n\nSophie tried an experimental rock of her hips back and forth; let the guys shuffle a little to give her the room to swing her hips between them slowly, the feeling like before when they had been standing, but under her control now.\n\nShe tensed up a few times, arching her back slightly, sitting tall in their laps. The sensation was volatile and promising and she forgot everything else for a moment or two, just rocked back and forth and drove herself on with little shivering moans as she tried to stay quiet.\n\nIt was Blue that pulled her chin with a finger and hungrily made out with her as she took her turn on top.\n\n\"I almost stayed home today...\" Blue tutted, staring at her lips whenever he wasn't kissing them. His eyes lifted and they smiled at each other. \"You're incredible.\" He waited for her to blush on cue, started kissing the side of her neck as he chuckled.\n\nSophie turned to look at Green as she felt him leaning in close too; he deflected her with a little kiss of her lips before nuzzling under her jaw and licking her skin.\n\nTingles raised like static in her nerves, the almost-ticklish surge from each of them kissing her remained distinct from the churning roll of her body on theirs. She felt pressure deep within as she pressed herself intimately to one and then the other of them, the feeling seeming to slowly melt into something harder to suppress as she sped up.\n\n\"Perfect...\" Green mumbled against her neck as he kissed her, his low voice rising in urgency a little. They each had one hand on her breast to play with her, one on her ass to steady and encourage her. Blue seemed more interested in her ass, which didn't surprise Sophie.\n\nGreen seemed more interested in her eyes, keeping her facing him with kisses as he rose to look deep into her again.\n\nBlue was losing the battle of self-control, though he seemed to be giving up without too much of a struggle as he gripped Sophie's hips now and bounced her in his lap. The rolling, alternating mix of them each in turn became the hard pounding squeeze of them both together again.",
        "Sophie tensed up all over when she bounced particularly low in their grip. She loved the thrill of them both losing it because of her, watching those stern concentrated expressions turn to blissful blankness by degrees as she rode them. Her low moans were joining together into a crescendo, driving the men on harder, the cycle repeating until Sophie felt the wet heat of Blue filling her with hot, oozing cum.\n\n\"Mmm... Fuck, fuck, fuck...\" Blue's cursing went from hard to soft as he repeated the word, only relenting when Sophie turned her head to kiss him, nibble on his cheek as he wrapped his arms around her, still twitching as his long-awaited orgasm went on and on.\n\nIt felt... perfect to be filled like that, especially while she was still slowly, forcefully riding Green's flexing cock in her pussy. Sophie took long deep breaths as she felt her own orgasm not far off, now she'd had one of them this way she wanted them both this way.\n\nShe gripped Green's shoulders for better leverage and then thrust in and out of his lap in a tight embrace that made Green groan in approval and Blue haltingly sigh in over-sensitised pleasure as he leaned back and rested on his hands to watch Sophie's ass still wringing the sensation from his twitching cock.\n\nBlue's exasperated sighing at the back of her neck was sweetly intimate, and tingles ran along Sophie's spine every time she felt him twitch and ooze within her. Such a wantonly kinky feeling, one more on the large pile of kinky feelings so far today.\n\nSophie nibbled on Green's bottom lip as she hugged him tight and fucked him hard, his strong arms around her hips pulling her in tight before letting her wriggle around on his cock.\n\n\"Yes...\" Green's usual expression of casual confidence was completely replaced by the distractedly grinning pleading look he was giving Sophie now. \"Oh...\" His voice was a harsh growl as Sophie slammed back and forth in his lap, Blue's hands on her hips not doing much to restrain her wild bucking. The newcomer squeezed his eyes shut and held on in agonised bliss.\n\nSophie looked down at him staring up at her, riding high on them both, her feet planted on the grass to either side. She had them both perfectly in her grasp, both gasping and moaning for her; staring at her naked, flexing, dancing body as she fucked them; lust and awe in their eyes.\n\n\"Fff...\" Sophie didn't get as far as the curse, Green's deep thrust and clamping grip shocking her to silence as well as stillness as he seemed to tense every muscle in his body at once, struggled, and let go with a harsh growl that set Sophie shivering against him. Her fingers gripped at him in spasming waves, the feel of his thrusting cock flooding her pussy different but equally hedonistic to the first time.\n\nIt was as much as Sophie could take, and focused on holding onto him as her balance wobbled between them, her thighs trembling as they gave out, her feet dangling in the air as they held her in place.\n\nGreen thrust half in and out as he held her tight, softly bit the nape of her neck as he came hard into her; not stopping, just slowing to enjoy every bit of sensation. No words, just a happy growl and his hot skin pressed to hers as it felt like they were melting together into one.\n\nHe nuzzled her ear and purred as she grinned at the pulsing feeling of them both inside her.\n\nThey were both cuddling her tight now, Blue's arms affectionately circled around her hips, Green's hands gripping her ass were half appreciative feel and half sensual massage.\n\nSophie still felt like she were being subtly churned, but realised she was still clenching and gripping them with each aftershock. She couldn't stop and didn't really want to, they felt good so she held onto them.\n\n\"Mmm...\" She sighed against Green's neck, listening to the breeze as she felt Blue's hands circling her abdomen as it occasionally flexed. They both seemed to agree with her that it wasn't time to let go yet.\n\nSophie felt the warmth of the sun, stared into the red glow of her closed eyelids.\n\n\"God...\" She chuckled, not moving her limbs but still squeezing the men together inside her. \"You guys are...\" She gave up on words, stroked fingertips through their hair, turned to kiss them each in turn.\n\nBlue grinned, a little shy now the fevered urgency had passed.\n\nGreen watched her eyes, until his gaze drifted down to her mouth and he leaned in to kiss her again.\n\nSophie smiled and cuddled them both, then shifted back to Green's lap as Blue tapped out and fell back to the grass. Blue lay flat, basking in the afterglow, the others watched his victorious smile, chuckled.\n\nSophie felt the tension in her thighs and decided that laying on the grass looked comfortable. Green followed her down so she was in the middle again.\n\nShe giggled. It seemed funny, like they were a bunch of horny teenagers or something to just get naked and screw in the woods.\n\nSophie rolled over onto her front, resting her head on her crossed arms. The sun was warm on her back and she let the tension ease from her muscles, enjoyed the way the breeze dragged the heat from her flushed skin.\n\nBlue was the first to sit up, grinning and shaking his head at some private joke. Sophie turned her head to watch him pace around a couple of times finding all their shed clothes, putting them in a pile before taking his own.\n\nShe liked his legs, Sophie decided, and when he turned around to look back at her she decided she liked his semi-hard cock when it bobbed in front of him. If she weren't so utterly and contentedly lazy right now, Sophie mused, she might've asked him to stick around and share it with her one more time.\n\nBlue was still smiling at them as he dressed, still taking long appreciative looks at Sophie's body as she slowly turned over and stretched her legs one at a time, feeling his eyes on her blushing pussy as she brought her knee up and back, until it almost touched her shoulder.\n\nYeah, pretty thoroughly stretched already... She jiggled slightly in place as she made herself laugh.\n\nGreen had propped himself up on one elbow to watch the other two, Sophie felt them both staring again as she let her arms and legs fall to the soft ground, leaving her spread-eagled on the grass with the last beads of sweat making her skin shine.\n\n\"Need us to carry you?\" Green teased, his voice close to Sophie's ear as he stroked his hand slowly along her body and back.\n\n\"Not yet...\" She luxuriated in the lazy post-fuck mood; turned back over and hugged the ground, giving them both another show of her ass as she flexed it, feeling the sweet ache they had left in her. \"You have to go?\" Sophie was fine with staying here a little longer, until her limbs weren't so heavy and her clit stopped throbbing with every heartbeat.\n\n\"Yeah. I skipped work for this.\" Blue grinned at her, putting his hoodie back on and patting the pocket. \"See you around, gorgeous.\"\n\n\"Mmm...\" Sophie nuzzled the soft grass like it were the cool side of her pillow. \"See you around.\"\n\n\"Next time I won't have to ask you twice.\" Green said to Blue, getting only a chuckle back before he set off at a tired but acceptable jog.\n\nSophie just lay there and breathed, feeling cooler now, steadier. She almost felt as though her ears should be ringing as she mentally replayed the ferocity of both men taking her together, but she felt deeply warm and entirely relaxed; the afterglow somewhere between a hard workout and a deep massage.\n\nGreen leaned down to smooch her chest a few times, clearly willing to stick around too.\n\nSophie felt another soft wet kiss on her mound but this time it was colder, a raindrop.\n\n\"Unnhh...\" She grumbled at the sky, still too lazy to get up.\n\n\"Mmm...\" Green replied, his voice a low buzz. He leaned in and kissed the raindrop as it trickled gently into the groove of her hot, slick, fresh-fucked pussy.\n\nSophie didn't have the energy to squeal or recoil at the cold in her most intimately heated place, she squirmed softly, her hips lifting just off the grass before resting again.\n\n\"We'll get wet.\" She protested, wanting him to stay but not wanting him to get hypothermia.\n\n\"We'll get wet anyway.\" He soothed, stroking along her thigh, her hip, cupping her breast as he spooned behind her.\n\n\"... we'll get cold.\" The protest was more of a lament when she actually said it.\n\n\"I'll keep you warm.\" Green kissed her cheek and pulled her closer against him, his hands everywhere as he slowly seduced her all over again.\n\n\"Mhmm...\" Sophie arched against him, feeling the subtle ache in her hips indicating she had overdone that particular movement today.\n\nThe rain increased steadily until the white-noise hushed everything but their breathing. The cold drops made Sophie retreat against the bulk of her lover curled around her, though she made a play of hugging his big arm around her like a blanket.\n\nInstead he pushed her onto her front, straddled her hips and shielded her body with his. Sophie sighed low and loud, not worried about anyone hearing her through the rain. Everyone but them was probably jogging back to their cars now, even Blue probably thought he'd gotten out just in time.\n\nGreen didn't seem to think so, though.\n\nSophie felt his rain-slicked skin sliding across hers, the thick weight of his cock nestled against her ass, hot and twitching as he rubbed himself against her.\n\n\"C'mon...\" Sophie was incredulous. \"You've already...\" She trailed off as his hand slipped around her and cupped her pussy, pulling her harder against his cock, shifting his weight onto his other elbow, still needing his hand to tenderly massage her hanging breast. \"Oh...\" She whispered.\n\n\"One more.\" He crooned, teasing her clit by dragging it slowly along the groove between his fingers, slick with more than rain again by now.\n\n\"Mmm...\" Sophie found herself arching up to meet him, spreading her arms out wide under his. \"One more.\" She agreed.\n\nHis thighs kept hers clamped tight together, and Sophie twirled her fingers in the wet grass as he rubbed his cock sensually against her ass, between her thighs. He kissed along her back and shoulders as he thrust slowly against her, taking his time and bringing his mouth back to her ear as the tip of his cock pressed against Sophie's ass.\n\n\"Couldn't let you go without having you like this again.\" He whispered in her ear, and then growled sweetly as she tensed her cheeks around his cock and gave him a thrill.\n\n\"Have me then.\" She took her weight on her shoulders and let him nuzzle the curves of her back as he pressed himself into her again.\n\nHe felt bigger than she remembered, then reasoned it was her clamped thighs making her tight. She relaxed them a little as he pushed deep into her ass, her breath coming in a short unintentional sigh as his cock stretched her.\n\n\"Yeah...\" She grunted from beneath him as he withdrew halfway and then sank into her again. \"Oh...\" She moaned, squeezing her thighs together as he began to fuck her. She felt the tension and played with it as he revelled in the feel of her body pressed to his, her ass gripping him tight.\n\n\"God...\" He mumbled happily against her neck, kissing her wet skin as the rain continued to mist them. He thrust in deep again and Sophie settled on the grass, crossed her ankles to give herself a little more leverage to squeeze him. This last impulsive fuck felt like a dare, Sophie felt like showing off.\n\nTight, wet, squeezing, thrusting. Sophie started out half on her knees, but after a few thrusts she was flat to the grass and rocking back and forth as he fucked her.\n\nNow they were alone, now they had some privacy in the noise of the rain; Sophie let herself moan and grunt and giggle as she liked, let herself be pleasured by his need for her.\n\n\"You feel so fucking good...\" She encouraged, feeling his hips slap wetly against her ass as they were both by now soaked by rain.\n\nGreen was as good as his word though, he did keep her warm with his roving hands and loving mouth. He took her hard but at an easy pace, leaning in to kiss or whisper, or just growl affectionately in her ear to make her squirm under him.\n\nSophie squeezed her thighs together harder, managed to cross her legs under him a little, reminding her of the way she had enjoyed herself before discovering toys. The tension in her legs translated to tension around Green's cock, pleasurable ripples along her spine, untamed moans and whimpers tumbling from her open mouth.\n\n\"Yes... Fuck my ass... Fuck me...\" Unable to do much more than hump the ground and hang on, Sophie encouraged him with words while he pinned her body in place. A hard pounding fuck, without also being callous or hurried. He just needed her, needed her to feel it too.\n\n\"How does such a beautiful woman get such a foul mouth?\" He teased her for cursing, then shivered against her back as she pulsed the tension in her thighs, actually grinding him to a halt within her. \"Oh fuck...\" His voice trailed off into blissful disbelief but his fingers either side of her clit rubbed and beckoned faster.\n\nSophie humped against his hand as he fucked her, they moved sometimes in sync and sometimes out as each found the perfect pace to writhe or thrust. Her rocking nipples brushed against the cool wet grass, and Green was nuzzling the back of Sophie's neck as she began to shudder, gasping and cursing.\n\n\"Fucking... hell...\" She fought to grasp the sensation for long moments, rising up on her elbows as he squeezed her nipple and her clit slowly in unison.\n\nThey both stretched out for the feeling, having to work for it after so much stimulation already. Sophie was certain she would reach it first, until she felt his hot sticky seed pouring into her ass as he shuddered and hugged her tight.\n\n\"Fucking... perfect...\" He said between thrusts, finally slowing as he focused only on the feeling of her still humping between his hand and his lap.\n\nSophie grinned and rocked against his hand harder as the wave overtook her, leaving her swimming in a cloud of fizzing bubbles and clashing cymbals. She pointed her toes and hunched her shoulders, driving herself harder against him and holding there.\n\n\"Wow...\" She yelped as Green squeezed her nipple between finger and thumb; the tight, sharp edge fanning the heat under her skin to a blissful inferno.\n\nThey shared the bloom of warmth, cuddled tight as they slowed and finally stopped. Hushing noise and tingling rain, hot panting breath on skin.\n\n\"Mhmm.\" He purred as they both shivered and tensed against each other, he stroked his hand over her breasts now, smooched her shoulder as he eased his cock from her and sat on the grass, watching the raindrops trickle over her skin.\n\nThe cold rain had lost its shock, Sophie turned over and watched him watching her.\n\nAutomatically, her hands rose to her body, alighting on the curve of her thigh, the rise of her hip. She saw him staring at her tits, and enjoyed the attention, bringing her hands up to cup them; rubbing her thumbs over her nipples, feeling every erect bump as she circled them.\n\nGreen's hand joined hers as he sat closer, stroking raindrops over her flesh as his hand traced every contour of her chest.\n\n\"You have the most beautiful tits...\" He said, illustrating his point by leaning in to lick the rain from her left nipple before deeply kissing it. Sophie trembled pleasurably and turned to offer her right breast to his mouth, swiping his brown hair back from his face in a spray of drops.\n\nShe gripped his back as he kissed her breasts, and neither of them really noticed the rain for a while until Sophie noticed it had stopped.\n\nGreen was curled up with her on the grass now, stroking wet strands of hair from her face as he watched her.\n\nOne more. Sophie remembered with a smile and gave him a long, hard kiss before she reluctantly got to her knees and then stood.\n\nHe sat back for a second, admiring the low angle as she stood with her hands on her hips. She was a blushing, grinning, naked, wet goddess to him.\n\nShe offered a hand, enjoying the wet glistening of the rain on his skin, the shy edge to his smile as he took it and stood up.\n\nThey made their way back to the edge of the trees, where their clothes had managed to escape the worst of the rain.\n\nSophie squeezed the water from her hair and Green took her forgotten hairband from his wrist, it having exchanged hands from Blue at some point. The thoughtfulness touched her, along with all the other touches, and she was grinning as she tied her hair up again to avoid the freshly-fucked look.\n\nThey shared looks and smiles as they struggled to put wet limbs into damp clothes. Sophie left her sports bra until last, held it in one hand as she stepped in close and kissed him. She pressed her naked chest to his and hugged him, slipping her hands down into his shorts to grab his ass and give him a playful squeeze. It seemed only fair.\n\nHe returned the favour, and Sophie whimpered softly as he slid her glass plug back into her ass. It was definitely her lucky toy now, she mused, there was no contest.\n\n\"Next time?\" He asked, biting the corner of his lip.\n\nSophie nodded, took one more feel of him in her arms, and let go.\n\nHe stuck around long enough to watch her put her top back on, which she took her sweet time over, just because. She took a long drink from her bottle when she found it again, offered him some.\n\nHe drained the other half and handed it back, his hand brushing hers. He looked like he was about to say something, but Sophie followed her impulse to leave him wanting more and bounded off with one final smile.\n\nShe felt his eyes on her ass all the way. Her legs were tired and her hips ached, she felt like she'd been fucked all night long and then cuddled well into the afternoon.\n\nBut it was a good ache, a welcome exhaustion; the best kind of workout after too long spent in quiet and solitude.\n\nSophie was still trembling as she started her car, still catching her eye in the mirror and blushing as she remembered being worshipped in the woods.\n\nShe didn't wait for Green to catch up, he'd said next time and Sophie knew he meant it.\n\nSophie followed her usual post-workout ritual as soon as she got home. She stripped at the door, threw her soaked clothes into the laundry and turned the shower on. She caressed her tingling breasts, remembering their kisses. She stood under the water and let it flow down over her neck, taking her time cleaning her body after it had been so thoroughly tested.\n\nShe sighed and hummed at every ache, every twinge, every tremoring aftershock that occasionally tugged at her insides when she remembered being the object of their worship.\n\nSophie didn't bother with a robe or a towel, just crawled naked and wet into her bed, spread out on her front, and sighed softly in and out as she finally relaxed all the way.\n\nSophie drifted off in the warm tangle of covers, their kisses still on her skin as she sighed and nuzzled her pillows, a smile on her lips.\n\nUntil next time... Sophie thought, warm shadows caressing her all the way down."
    ],
    "authorname": "WritingForToffee",
    "tags": [
        "analingus",
        "big cock",
        "blowjob",
        "creampie",
        "cunnilingus",
        "double penetration",
        "exhibitionist",
        "public",
        "mmf",
        "threeway"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/chase-2"
}