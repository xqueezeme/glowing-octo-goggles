{
    "title": "Surefoot 11: Patterns, Repeated",
    "pages": [
        "Starbase 154:\n\nOne of the first things Jonas Ostrow was told when he set off for Starfleet Academy on Earth three years ago was: Expect the Unexpected. It was a Big Universe, after all.\n\nStill, he could be forgiven for not expecting to see Nazis window shopping.\n\nHe had been strolling along Broadway, the level of shops, restaurants and bars that ran the length of 154, along with Kit, Soolamea, Neraxis, and several other cadets who had chosen to stay on the station for their extended leave, rather than visit their respective homeworlds or the planets in neighbouring systems.\n\nNow they waited outside a vintage clothing shop as Kit emerged, sporting his latest purchase: a battered black leather jacket, festooned with chains, studs, spikes, patches and archaic slogans, over a low-cut blood-red T-shirt with strategic tears offering glimpses of his lime-green chest, and faded blue denim jeans and steel-toed black boots. He flipped the collar of his jacket up. \"Oy, Jonas, me old cock, check out me jazzy keks!\"\n\nJonas blinked, distracted. \"Your old what?\"\n\nKit dropped his arm, his face flushing red with delight as he dropped the attempt at an English accent. \"I respectfully requested that you scrutinise my outfit, Friend Jonas.\" He turned in place to show the rest.\n\nNeraxis read the slogan on the back of his jacket. \"Which Queen is God meant to save? For that matter, which God?\"\n\n\"I... I am not entirely certain at this point.\"\n\nSoolamea smirked, her dark-green segmented face curving with amusement. \"What's it all supposed to mean, Kit?\"\n\n\"I have been researching ancient youth subcultures, Friend Soo. This is the standard accoutrement of a Terran subculture called 'Punk', whose fashion, language and attitude was deliberately tailored to cause offence and outrage in the Establishment! Can you imagine, an intentional effort to offend?\"\n\n\"Yes,\" Jonas muttered absently, still staring across Broadway. It can't be...\n\n\"The music is equally offensive!\" Kit informed the others, taking out a small player. \"Full of nihilistic invective! Listen!\" He pressed the control, and the air filled with a metallic sound evocative of a shuttlecraft giving birth, and a snarling voice declaring, \"The sins of all our fathers, being dumped on us \u2014 the sons / The only choice we're given is how many megatons? / And I eschew you! / And I say, SCREW YOU! / And I hope you're blue, too-\"\n\nNeraxis reached out and turned off the music. \"Never play that again.\"\n\n\"I don't get it, Kit,\" Bill Beaudine admitted, his arm still around Charlie Ingalls', the pair of them the object of ship's gossip since becoming a couple. \"Why would that interest you?\"\n\n\"As a member of a protocol-driven society,\" Kit explained, \"I have been attempting to make myself more socially... flexible.\" He held up a conciliatory hand. \"Although I promise that should we slam our way into a gig, I will not gob on anyone.\"\n\nBeaudine nodded, bemused. \"That's... kind of you. I guess?\"\n\nIngalls chuckled, his grin wide and bright and his dark, walnut-coloured features a contrast to Beaudine's blonde farmboy looks as he moved in and kissed Beaudine on the cheek. \"I've studied Terran history; believe me, it's kind.\"\n\nJonas barely heard the banter, focused on the trio on the other side of Broadway, chatting amiably between themselves: pale-skinned humans or humanoids in identical jet-black uniforms, including peaked caps, shiny leather boots and thin baldrics. He did a double take, knowing he could be wrong and that it only resembled the uniforms he saw in history books and fictional videos.\n\nThen he saw the armbands: red background with a white circle, at the centre of which sat a black spider with legs twisted to form a clockwork spiral pattern. There was no misinterpreting those.\n\nJonas was also trailing behind his friends, but now stopped and stared, first in disbelief, and then in a growing astonishment. After several seconds, he became aware of the others rejoining him, Soo asking, \"What's up, Honey Bear?\"\n\nHis mouth was dry, and he realised that at some point his jaw had dropped. \"Am I seeing them? Are you guys seeing them?\"\n\nThey looked across to the trio, his Rigellian girlfriend shrugging. \"Do you know them?\"\n\n\"What? No, of course not! Why would you ask that?\"\n\n\"Why wouldn't I? What's wrong with them?\"\n\nKit drew up, curious. \"Good Friend Jonas, they look like the antagonists from that video of yours about the slovenly archaeologist.\"\n\n\"They are, Kit. They're Nazis.\"\n\nIngalls frowned in recognition. \"What the hell? It has to be a joke.\"\n\n\"Who would be so stupid as to think it a good idea to dress up like Nazis?\"\n\n\"What's the big deal?\" Neraxis asked, confused. \"So they're dressed as fictional villains from some ancient video, so what?\"\n\n\"They're not fictional!\" Ingalls exclaimed, \"I mean, the ones in that movie were fictional, but there were real Nazis on Earth in the Twentieth Century: totalitarian fascist supremacists, responsible for some of the most terrible acts in our planet's history.\"\n\n\"Really?\"\n\n\"Yes, really! Don't you know anything?\"\n\n\"Sure - I know the Daixxlos Autocracy who started the Rixel Wars on my homeworld eight centuries ago. Do you?\"\n\n\"Uh, no-\"\n\n\"Then stop being such a Terracentric jerk! Earth isn't the centre of the Universe, you know!\"\n\n\"Cut it out, both of you!\" Jonas was shaking his head. \"There has to be some sort of explanation.\"\n\n\"Perhaps they're actors in costume?\" Soo suggested. \"For a performance?\"\n\nJonas felt his face tighten, trying to recall anything on the Station's Entertainment Bulletin that might corroborate it. \"There's one way to find out...\" He strode forward, amazed at his own courage - or at least, how much his outrage could override his fear. \"Excuse me?\"\n\nThey turned to face him, the tallest one, a chubby middle-aged humanoid male with blonde hair, stubby nose and broad chin nodding politely. \"May we help you, young man?\"\n\nCloser now, Jonas examined their clothes more thoroughly: the tailoring, the stylised insignia, all of it seemed to match what he knew. \"Yes: what's with the costumes?\"\n\nThe man's gaze narrowed. \"These are not 'costumes'; these are our uniforms.\"\n\n\"Uniforms?\" Jonas echoed, feeling his friends draw up and flank him, and thankful for it. \"They look very much like the uniforms of a culture that once existed on Earth four centuries ago.\"\n\nThe man nodded, smiling at the recognition. \"Indeed: my people proudly adopted them.\" He held out his hand. \"I am Major Donald Hurensohn of the Ekosian Verhandlungskorps.\"\n\nJonas blinked, his Universal Translator having difficulty with some of the German-sounding words, and never shook the man's hand. \"Ekosian? I've never heard of you.\"\n\nHurensohn dropped his hand. \"Your ignorance is not our concern.\"\n\nHe started to turn away, but Jonas snapped, \"Wait!\" He pointed at the man's armband. \"This symbol - everything you're wearing - you need to know that it's highly offensive to Terrans. Especially for people with Jewish ancestry, like myself.\"\n\nThe man shrugged. \"Your offence is not our concern, either; we have as much right to express our cultural identity as you do. Would you be willing to remove your uniforms simply because someone has told you that they find them offensive?\"\n\n\"Well, no, but that's different-\"\n\nHurensohn smirked. \"Yes, it's always different when it's something that you revere.\"\n\nJonas felt a little confused by the turn of the conversation, as if a part of him was expecting the man to suddenly realise the grievous error he had made in appearing dressed like this, apologise and rush off to change into something less provocative. \"You- You don't understand what it means to us-\"\n\n\"On the contrary, we know of the Terran origins of our symbols and society, and what it might mean to you - far more than what you know of what it might mean to us. We have studied Terran history; your Jewish people have much in common with the Zeon race in our home system. Perhaps before you go out of your way to condemn others, you should know what you're talking about? Especially given your chosen profession?\"\n\n\"Our profession?\"\n\nHurensohn glanced past him, his reaction at some of Jonas' non-human-looking friends evident. \"You're all in Starfleet, yes?\"\n\nJonas frowned. \"Cadets. How did you know?\"\n\nThe Ekosian smirked now. \"I can't imagine any other environment where one would find himself having to keep such... colourful company.\"\n\nNeraxis stepped forward, her bald blue head darkening with anger, and her hands balled into fists. \"You have a problem with people of colour, pal?\"\n\nOne of Hurensohn's young aides stepped forward angrily, her face pinkening with anger beneath her tightly-bunned strawberry-blonde hair. \"Alien pigs! You do not intimidate us! The Ekosian race is superior to all others!\"\n\n\"Oh yeah? You want to try and prove it, bitch?\"\n\n\"Hold it!\"\n\nAll eyes turned to several members of Starbase 154's Security Team, enlisted members of Starfleet dressed in the expected mustard-black uniforms and striding purposefully forward. \"Any more disturbances here and we'll take you into custody!\"\n\nJonas had been grateful for the approach of the constables - until he realised the woman in charge was speaking directly to him and the other cadets, and not the Ekosians. \"Us? What about them?\"\n\nThe constable's gaze narrowed. \"I've been watching you: you approached them, spoke aggressively, and then your Bolian friend there made threats. Now move on, or I'll report you to your commanding officer!\"\n\nJonas felt Soo's hand on his forearm, and heard her whisper, \"Come on, let's go.\"\n\nHe tensed, feeling like he was losing the argument, especially when he saw Hurensohn smirking at the situation. Then he reluctantly replied, \"Yeah, let's go.\"\n\nLooking triumphant, the Ekosian youths suddenly stood to attention - and offered them a raised extension of their right arms and straightened hands. \"Hail Victory!\"\n\nJonas' hands turned into fists. \"You-\"\n\nBut Soo tightened her hold on him, pulling him back. \"No!\"\n\nAs he let the others lead him away, unable to unhear the laughter from the young Ekosians, he tried to relax the knots in his stomach, but they remained, twisting and tightening. \"I can't believe that. Nazis in the 24th Century. How is that even possible?\"\n\n\"They called themselves Ekosians,\" Kit recalled. \"I fear my knowledge of those people is non-existent.\"\n\n\"Mine too, Kit. But I'm gonna go back to the Surefoot and find out more now. Who's with me?\"\n\n\"Now?\" Soo asked. \"What about dinner and the cabaret?\"\n\n\"We have plenty of time to do both later.\" He looked to Soo. \"Aren't you in the least bit curious?\"\n\n\"Yeah, but...\" She shrugged. \"Well, I suppose we could take a few minutes.\"\n\nJonas smiled, looking to the others. \"What about the rest of you?\"\n\nThey looked dubious.\n\nHe smiled. \"The first round at the bar will be on me.\"\n\nThat won them over.\n\n*\n\nUSS Surefoot, Deck 1, Captain's Office:\n\nCommander T'Varik sat behind the desk, collating the data from the latest inspection on the shipframe from the Starbase engineering staff, her Vulcan reserves called upon to control her initial reactions to where their reports seemed to be leading. She had the comments from Chief Grev, the Tellarite as argumentative as ever - though tellingly, not about the findings of the report so much as the presence of the civilian staff.\n\nIt was a growing concern, and it seemed inevitable that she would have to contact Captain Hrelle before he completed his well-deserved extended leave on Cait with his wife and stepdaughter-\n\nHer attention was distracted by noises from the adjacent bridge. The ship was berthed, there was no one else on duty apart from herself; she rose and entered, finding a number of cadets manning the various stations around the circular bridge: Neraxis Nemm, Kitirik, Zaacool Soolamea, William Beaudine, Charlie Ingalls - and Jonas Ostrow in the Command Chair at the centre of it all. \"Is there an emergency I should be made aware of, Captain Ostrow?\"\n\nJonas bolted out of the seat as if it was electrified. \"Commander! You're here!\"\n\n\"It is good to see that your role as Alpha Squad's Deputy Leader has not dulled your powers of observation. Please explain your presence - utilising the ship's resources.\"\n\n\"It's, ah, a research project, Commander. We wished to learn more about a new race we encountered on 154. You don't have to stick around for it if you have things to do.\"\n\n\"Very magnanimous of you.\" She folded her hands behind her back. \"Proceed.\"\n\nHe paused, clearly waiting for her to be satisfied with his explanation and depart. When it was clear that she wouldn't, he steeled himself and turned back to the others. \"Okay, Kit, you start.\"\n\nThe Qarari shifted in his place at Science Station 1 and projected a planetary system onto the blank main viewscreen. \"The Ekosians' homeworld is the fourth planet in the M43-Alpha system, in the Marcoli Sector. It is one of two inhabited Class-M planets in that system, the other designated as Zeon; the two humanoid races share a common genetic ancestry, with Zeon being more technologically advanced and peaceful, having visited and settled in communities on Ekos over the previous century.\n\nThe Ekosians themselves were an industrial, pre-warp society in the throes of anarchy and facing self-destruction when the Federation sent a covert cultural observer, a Professor John Gill, on Stardate 2154.1. Friend Soolamea?\"\n\nSoo took over now from an adjacent station, bringing up a picture of a round-faced, elderly humanoid male with iron-grey hair. \"I found this in the Starfleet Archives: it seems that in the five years he was based alone on Ekos, Professor Gill had taken it upon himself to abandon the Non-Interference Directive and reshape the society in order to save it.\n\nTo that end, he established a modified version of the society of National Socialist Germany in the first half of Earth's Twentieth Century, complete with uniforms, ranks, language, symbols, weaponry - and himself in charge as their Fuhrer, their absolute ruler.\"\n\n\"That,\" Jonas announced slowly, frowning, \"Is undoubtedly the most utterly insane thing I've ever heard.\" He looked to T'Varik, feeling lost. \"Did you know about this, Commander?\"\n\nThe Vulcan nodded. \"Professor Gill was a controversial figure at the Academy in his day, espousing many disputed and antiquated views - in particular the notion that the original Nazi society of Earth's German state was the most efficient ever known, despite the evidence to the contrary. It was this belief that made him attempt to remodel Ekosian society in the Nazi image, attempting to curb the cruelty while still uniting the Ekosians and raising their quality of life.\"\n\n\"And was he successful?\"\n\nThe Vulcan looked to Soolamea to continue; the Rigelian's face darkened as she proceeded. \"Successful enough to unite the planet and advance them to the point of interplanetary travel. Then he was drugged and kept as a puppet ruler by one of his subordinates, who made scapegoats of the more advanced Zeons, persecuting those settled on Ekos, and planning on launching a nuclear strike on the rest of the Zeons, before it was all stopped by Captain Kirk of the Enterprise.\"\n\n\"Holy Hraxor,\" Neraxis grunted. \"Did anything happen in the 23rd century without him getting involved?\"\n\n\"Very little,\" T'Varik assured her dryly, interjecting. \"Cadet Nemm, I believe you are accessing the related files on Federation history and the Prime Directive?\"\n\nNeraxis swallowed, her bald blue head darkening in embarrassment at the attention on her now. \"Uh, yes, Ma'am. The events on Ekos triggered a radical change in Federation policy regarding the Directive and covert observation protocols, and experts were sent to help decontaminate the culture of the invading elements.\n\nWith limited success. Both planets were given protectorate status, with Zeon eventually achieving Federation membership in 2325. Ekos, however, preferred to remain independent, successive generations refusing to give up the Terran Nazi paraphernalia, believing it to have become a permanent fixture of Ekosian culture. The Federation has ensured they have been kept disarmed, but the Ekosians made contact with other non-aligned races like the Boslic and the Miradorn and began trading and exploring.\"\n\n\"Why are they here?\" Jonas asked, looking to Ingalls.\n\nThe other young man nodded. \"I've accessed 154's Information Board: that Major Hurensohn we met is with the Ekosian Interplanetary Corps; he and his people are here to meet with a Klingon delegation with a view to form an alliance, such as the one the Klingons have formed with the Ferasans, the Lyrans and the Hyrdan.\"\n\n\"A Klingon alliance with a planet inside Federation space?\" Neraxis frowned. \"Would we allow that to happen?\"\n\n\"It would not be unprecedented, Cadet,\" T'Varik informed her. \"Nor would we have any legal standing to prevent it, although the Klingons would need to include the Federation into subsequent negotiations involving passage through our space - dependent of course on the nature of the alliance. The Klingons may simply supply ships, arms and technology to the Ekosians, in exchange for a potential base within our space should our own alliance with the Klingons ever fail.\"\n\nLeaning over the panel beside his boyfriend, Beaudine looked at the readings and reddened. \"There's something else on the Net...\"\n\nJonas looked to him. \"Yes?\"\n\n\"They're marching tomorrow.\"\n\n\"Excuse me?\"\n\n\"There's a Rally scheduled for 1600 Hours Station Time tomorrow in 154's Main Assembly Hall, a celebration of their culture on behalf of the Klingons. They'll be marching along Broadway, flying their flags, singing the praises of Ekos and the Ekosian Master Race.\"\n\nJonas paled. \"How can they allow such an obscenity? We have to stop it-\"\n\n\"Mr Ostrow,\" T'Varik interjected. \"I believe your purpose here is fulfilled.\"\n\nHe turned to face her. \"Commander, you have to intervene, tell the station's administrators to cancel that Rally!\"\n\n\"I will do no such thing. Starfleet manages the security on Starbase 154, but the administration is under civilian authority.\"\n\n\"But you can still complain!\"\n\n\"And why would I do that?\"\n\nHe swallowed. \"Because these Ekosians are wearing uniforms, armbands identical to the German National Socialist government that started World War Two on Earth, that persecuted, that slaughtered Jewish and other peoples by the millions in concentration camps-\"\n\n\"I am intimately familiar with Terran history, Cadet, having studied it before you or anyone else here was even born. I am also aware that the Nazis responsible for the barbarities on your homeworld are over four centuries, many parsecs and an entire species removed from the ones you've encountered today.\"\n\nJonas started, obviously not expecting her reaction. \"I know that, Commander, but these Ekosians are no different from their Terran counterparts! They persecuted the Zeons, killed thousands of them, tried to wipe out their homeworld-\"\n\n\"And again, the Ekosians who did that are almost a century removed from the ones you've encountered today. For all you know, there may have been as profound a subsequent change in their character as was experienced between the Terrans who initiated the Third World War and their descendants who helped form the Untied Federation of Planets.\"\n\n\"Not if you heard them today,\" Ingalls pointed out angrily.\n\n\"Respected Commander,\" Kit offered, glancing at his display screens, \"They have published manifestos available for public consumption, extolling their racial and genetic superiority over all other peoples, condemning the Federation for encouraging miscegenation and equal rights regardless of race, belief, gender or sexual preference, and promising their eventual domination over the rest of the Galaxy.\"",
        "\"You see?\" Jonas exclaimed. \"No profound change there! They believe everything that Hitler and his followers did: in their superiority over others, in hate and bigotry! \"\n\n\"Many races emerged into the Galactic Community with similar bombastic attitudes; exposure to other worlds and cultures, and a greater sense of their own place in the Universe, inevitably helped them find perspective and rationality.\"\n\nJonas stared, clearly flustered by her calm reaction to his argument, before bringing up an image of the Nazi swastika onto the main screen, pointing at it. \"That symbol-\"\n\n\"-Was co-opted by the National Socialists, and for centuries before and after their rise to power, it was recognised throughout your world as a religious icon and sacred symbol of spiritual principles in Buddhism, Hinduism and Jainism.\"\n\n\"Why the hell are you taking their side?\" Jonas demanded, his voice raised.\n\nShe measured her response. \"I am not, Mr Ostrow, and I will ignore your insubordinate tone - this time. But I will remind you, all of you, that you will encounter many people during your tenure in Starfleet, people with whom you will strongly disagree. You need to learn to ignore them, and rise above whatever provocations they might offer. You are better than they are.\"\n\n\"That- That's-\" Jonas started, pausing and conceding, \"That's logical, I guess.\"\n\n\"One would hope so. Now, I suggest that all of you return to the station and enjoy yourselves. Unless you wish to stay and complete a more comprehensive report on the history and evolution of Prime Directive Protocols?\"\n\nNeraxis jumped to her feet. \"No thank you, Ma'am! Come on, guys, I want to see those Draylax cabaret dancers and find out if the rumours are true!\"\n\nSoolamea drew up and slipped an arm around Jonas'. \"Come on, Honey Bear, let's forget about those nasty Ekosians.\"\n\n\"Yeah, come on, Honey Badger,\" Neraxis teased, lightly smacking the back of his head as she passed him.\n\nJonas let them lead him away.\n\n*\n\nTo his credit, he did try to follow T'Varik's advice. They had a quick bite at a Replimat before heading for the Cabaret, relaxing, drinking and enjoying the various acts (and learning that the rumours about the Draylax were true).\n\nAfterwards, they found an al fresco bar near the Entertainment District (at least, as al fresco as a bar could get inside a space station), and he drank, bought another round, made the appropriate small talk, flirted with Soo, laughed when Beaudine and Ingalls would play-fight before Ingalls would embarrass his boyfriend by singing love songs to him. He even joked about how Sasha might have been coping on Cait with all the casual nudity from the natives that time of year, prompting Neraxis to go on a raucous ramble about the pros and cons of furred genitalia.\n\nAnd then the Nazis came.\n\nThere was ten of them, all young, all uniformed in various brown-coloured versions of the black uniform Hurensohn wore, two of them Jonas identified as being with the Major himself earlier. They shifted some tables together and summoned the waiter over, ordering a number of drinks.\n\nJonas was staring hard in their direction - until Soo put a hand on his forearm. \"Stop that, ignore them! We'll finish up and head back to the Surefoot.\"\n\nJonas grunted and shifted back in his seat to face the others. \"Sorry.\"\n\nKit leaned forward, his eyes glazed over from the honey-flavoured alcoholic drinks he favoured - heavily - slurring his attempt at an English accent. \"Don't be mithered by those - hiccup! - tossers, Good Friend Jonas, they're nuttin' but a pack of bloody wasters, innit?\"\n\n\"I understood maybe four of those words,\" Neraxis admitted, chuckling. \"Am I drunk or is he getting worse?\"\n\n\"Both,\" Beaudine assured her.\n\n\"Oh, look at the little Starfleeters!\" a snide voice called out.\n\nJonas glanced up, watching one of the Ekosians, the girl who had spoke up earlier, rose and smiled humourlessly in their direction, fed on a newly-arrived pint of beer and the laughter of her friends. \"You all seem so glum, so gloomy!\" She grinned at Neraxis. \"So blue!\" The blonde girl howled over the laughter of her friends.\n\nNeraxis turned in her chair, her beefy arm leaning over the back of it, her skin a deep dark cerulean from the alcohol. \"That's about as funny as it's original, you nasty little skank-\"\n\n\"Ignore them,\" Jonas warned, though he felt the same anger as his friend. \"Let's just drink up and get going.\"\n\n\"Oh, don't leave on our account!\" the Ekosian taunted, drawing closer, fuelled by the encouragement from her friends back at the table. \"We mean no offence! We like Starfleet! We like the Federation! We admire it!\" She focused on Jonas first. \"Where else in the Galaxy could there be a place for poor little Jews?\" She looked over at Beaudine and Ingalls. \"Or degenerates?\" Then her contemptuous glare encompassed the rest of them. \"Or these Untermenschen, the mongrel trash of the Universe?\"\n\nNeraxis kicked back her chair and rose up. \"Say one more thing, bitch, and the trash'll be taking you out!\"\n\nThe Ekosian's friends stood up, as did Jonas and the cadets, but Jonas was determined to not let this escalate. T'Varik was right; they were Starfleet. They were better than this. Glaring at the Ekosian woman, he announced, \"We're going. Come on, everyone - that's an order.\"\n\nThe cadets turned and started away.\n\n\"Of course, Little Jew, you run along!\" the Ekosian taunted, chuckling. \"You probably need to go de-worm your Captain.\"\n\nThe cadets stopped.\n\nJonas turned and faced the Ekosians again, his hands starting to tremble and his eyes going red with each passing second. \"What did you say about Captain Hrelle?\"\n\nThe Ekosian girl was grinning, drinking from her pint glass before replying. \"We've seen the pictures of him, the Caitian.\" She spoke his race's name like it was a curse. \"He's... adorable! So cute and cuddly, like a fat teddy bear!\" She confirmed with glances to the other Ekosians, then returned her invective to Jonas. \"But tell us... does he shed? Is he litter trained?\" She chuckled, her friends joining in. \"How can even a Jew possibly take orders from some filthy flea-bitten animal?\"\n\nSomething inside Jonas clicked to Red Alert.\n\nBut before he could react, Kit strode forward. \"BOLLOCKS TO THIS!\"\n\nAnd then headbutted the Ekosian girl.\n\nShe shrieked and staggered backwards, dropping and spilling her pint glass, her friends attempting and failing to catch her before she fell to the floor on her ass, clutching her bloodied face, her eyes wide in sheer disbelief.\n\nA disbelief Jonas shared, as he looked at his best friend. \"Kit! What the hell-\"\n\nBut the Qarari, the skin of his throat a royal purple flush indicative of both rage and inebriation, sneered and stuck two webbed fingers up at the stunned Ekosians. \"Well? Have ya had enough, ya Nazi bastards, or do ya want some more?\"\n\nThey wanted some more.\n\nJonas had no time to say anything to the others, before Broadway erupted into chaos, the cadets and the Ekosians grappling. Jonas took a punch to the jaw that staggered him backwards, but he rounded with a coiled fist and let fly into his opponent's broad nose. That felt- no, wait, that really hurt! He had never actually punched anyone before; Neraxis made it look so easy.\n\nSpeaking of which, the Bolian was leading the assault now, but he was more concerned about the others, none of them Security-trained. But they seemed to be holding their own; since their altercation with the stronger, more vicious Ferasans the other week, the cadets seemed more willing to engage in a fight.\n\nFists flew and bodies spun all around him, and he knew that they should stop this and get out while they could, but his fists were tingling for more and he couldn't make himself stop, his anger and stress over the last several hours bursting from him like gas from a broken pipe-\n\nUntil Station Security arrived, one of them getting Jonas in an armlock that quickly and efficiently took away his urge to continue fighting.\n\n*\n\n154's cells were large, given the number of people who frequent the station; the cadets were placed together, and to their credit, the Security staff provided him with a basic medikit to allow him to patch up the various cuts and bruises he and the others had received from the fight, until they were released and returned to the Surefoot.\n\nHe knelt beside Kit, who looked a little greener than usual and was moaning slightly. \"Kit, I have to admit that you were the last one of us I expected to start something.\"\n\nThe Qarari nodded weakly as Jonas passed the autosuture over one of Kit's scrapes, the reinforced bony structure of his skull ensuring the headbutting did less harm to him than one might expect, and he had momentarily dropped the English Punk accent and persona, looking more contrite. \"In my defence, Good Friend Jonas, I am drunk, and I really, really wanted to respond to that Nazi after what she said about the Most Respected Captain. Although I am feeling guilty about striking a female-\"\n\n\"Hey, cut that chivalrous shit out right now!\" Neraxis warned him, as she flexed her fingers and chuckled. \"She got what she deserved! Holy Hraxor, the look on their faces when you walloped her was priceless!\"\n\nBut Kit shook his head weakly. \"Please, Friend Neraxis, I am not proud of my behaviour.\"\n\n\"Don't knock yourself, buddy, it was terrific!\"\n\n\"No it wasn't!\" Soo countered, looking scared and annoyed. \"We can get into serious trouble because of that fight! We could end up with a criminal record! Maybe even expelled from the Academy!\" She was scowling at Jonas now while she said it.\n\nHe couldn't fail to notice it. \"What are you looking at me like that for? I didn't start the fight!\"\n\nThe Rigelian girl scowled. \"No, but you're the one who's been encouraging us to be mad at the Ekosians, and as far as I've seen, all they've done is make a few jokes at our expense! The Commander was right, we should be bigger than that!\"\n\n\"They insulted the Captain!\" Ingalls reminded her angrily, wincing at his own bruised jaw. \"They insulted all of us!\"\n\nShe looked to him. \"And so we had to sink down to their level? What did fighting them prove?\"\n\n\"It proved that Nazis don't stop unless someone stops them.\" Jonas set aside the medikit and stood up. \"And I'm not done stopping them. They're marching on Broadway tomorrow. I intend to do something about it.\"\n\n\"Yeah?\" Neraxis nodded in admiration. \"What have you got planned, Scrappy?\"\n\n\"I-\" He paused, too driven by the desire to do something to think exactly what. He wished Sasha had been here; if nothing else, her family was close to their Jewish roots, in fact still practised it, when he could only claim it in his distant ancestry. She'd understand what this was all about even more. \"I'm- I'm not sure...\"\n\n\"Firstly,\" Kit suggested. \"Filing a formal protest with the Station's Starfleet Liaison Office, which will require an appropriate investigation and response from their staff. Also, we shall submit a simultaneous request with the Station's Administrative Offices for an appropriate counter-demonstration, and arrange for a number of press releases with the local news media. We can send additional invitations to the ships currently docked here or about to arrive here to join us.\"\n\nJonas looked at him, impressed. \"You've thought this through.\"\n\nKit shrugged. \"I have had some... experience with political activism on my world. Would you please excuse me for a moment, Good Friend Jonas?\"\n\n\"Excuse you? For what?\"\n\nAlmost immediately Kit rose and then dropped to his knees in front of the toilet, retching loudly into the bowl. Beaudine rose and drew closer, obtaining a paper cup of water from the nearby wall fountain for the Qarari.\n\n\"Thanks, Bill,\" Jonas nodded, feeling queasy himself before looking to the others. \"Kit's got the right idea. We'll hold our own demonstration!\"\n\nThe others nodded and made sounds of agreement - except for Soo. \"Count me out, Jonas. I'm not getting into any more trouble. We'll be lucky if T'Varik doesn't leave us locked up here after what happened.\"\n\n\"A logical fear.\"\n\nJonas and the others turned and looked through the open doorway of their cell with its invisible forcefield, to the new visitors: Commander T'Varik; Major Hurensohn; an Andorian male in a Starfleet uniform with Lieutenant Commander's pips; and a Zakdorn male in oatmeal-beige civilian clothes. T'Varik stepped forward. \"Mr Ostrow, when I last saw you and your friends, I believe I suggested you return to the station and enjoy yourselves. Not to engage in a fight.\"\n\nJonas cleared his throat. \"To be fair, Commander... the fight was enjoyable.\"\n\nShe raised an eyebrow. \"Do I appear conducive to facetiousness at this point, Cadet?\"\n\nHe reddened. \"Sorry, Ma'am.\"\n\nHurensohn harrumphed. \"Typical! Joking about an unprovoked attack on my race!\" He looked to the Zakdorn. \"See? This is how Starfleet always behaves! Always superior, always belligerent!\"\n\n\"Hey, shithead!\" Neraxis snapped, \"Your nasty little racist assholes were the ones who started this! They're lucky they didn't end up blown out an airlock!\"\n\n\"Be quiet, Cadet!\" the Andorian ordered.\n\nNeraxis looked to him, but bit back any further retort, as ignorant as the rest of him to the man's identity.\n\nT'Varik resumed command of the conversation, indicating the Andorian. \"This is Lieutenant Commander Sevris, Starbase Chief of Security.\" Then she noted the Zakdorn. \"This is Mr Biryani, from the Station Administration Office. And it is obvious you already know Major Hurensohn.\"\n\nJonas ignored the leering, triumphant face of the Ekosian. \"Commander, I take full responsibility for the actions of the cadets on the station-\"\n\n\"No!\" Hurensohn butted in. \"They're all responsible! I want them all punished!\"\n\n\"The cadets are under my direct authority, Major,\" T'Varik informed him, never taking her eyes off of Jonas. \"And I will deal with them, as I see fit.\"\n\n\"I'm inclined to agree with Major Hurensohn,\" Biryani admitted, his beige face looking more like melted wax as he simpered at the jailed cadets. \"Their obviously intolerant behaviour does not put Starfleet in a positive light. I may have to file a formal protest with Starfleet Command.\"\n\nSevris turned to him, looking a little anxious at that. \"Mr Biryani, I can assure you that Starfleet respects and tolerates all cultures! You can't judge all of us by the actions of these young people.\"\n\nBeaudine stepped up to the doorway beside Jonas, careful not to get closer and get bumped by the invisible force field. \"Whose side are you on anyway? They approached us, insulted us, attacked us!\"\n\n\"Indeed?\" T'Varik asked. \"Who threw the first punch?\"\n\nThe cadets paused, looked to each other, before Kit joined them, swaying slightly, vomit on his leather jacket. \"Excuse me, Respected Commander, but it was not a punch, but a headbutt. They had exhibited the most rude attitudes towards ourselves and the Most Respected Captain.\"\n\n\"Lies!\" Hurensohn denied. \"Lies and propaganda spread by our enemies! We are not in the least bit bigoted towards anyone! We may be proud of ourselves and our accomplishments, but what race isn't?\" He looked to the Zakdorn. \"Mr Biryani, have there been any reports of trouble involving my party that didn't involve these Starfleet cadets?\"\n\nBiryani's gaze narrowed in consideration. \"No. You and your party have been most cordial during your stay.\"\n\nThe Ekosian nodded, satisfied. \"No, because we raise our young people to show discipline and respect for authority! And now these cadets have as much as admitted they intend to disrupt our Rally tomorrow! A Rally that you personally approved of! If they're allowed the freedom to do so, this could disrupt the delicate negotiations we are planning with the Klingon Empire! Do you want an interstellar incident on your station?\"\n\nPanic suddenly crossed Biryani's simpering face at the notion. \"Absolutely not!\" He looked to Sevris. \"I want them locked up for the duration of their stay here!\"\n\nThe young Andorian paused, and looked to T'Varik. \"That- That might be for the best, Commander.\"\n\n\"Thank you for your input, Lieutenant Commander, but I believe there is a more appropriate compromise.\" T'Varik turned back to the cadets. \"I am forbidding you from arranging or participating in any public counter-demonstration against the Ekosian rally. Any attempt to do so will result in your immediate expulsion from Starfleet Academy.\"\n\nJonas' jaw dropped. \"Commander... I can't believe you'd do this-\"\n\n\"We will not discuss this further here, Cadet.\" She looked to Sevris. \"Will you release them to my custody now?\"\n\nThe Andorian nodded, shutting down the forcefield. As the rest of the cadets rose to their feet, T'Varik ordered, \"Follow me. And do not speak.\"\n\n*\n\n<br >They obeyed, the Vulcan silently leading the way until they were back in one of the corridors of the Surefoot. Then she glanced at them and said, \"Dismissed.\"\n\nShe started to depart, but Jonas ignored the warning looks from the others to snap, \"Permission to speak now, Commander?\"\n\nShe stopped, turned and regarded him. \"Yes, Mr Ostrow?\"He started, swallowed and then continued. \"Commander, I'm- I'm appalled that, no matter your reasons, you would take the side of the fascists-\"\n\n\"Mr Ostrow, before you launch into what I am certain will be a florid polemic against the wrongness of my decision, allow me to cut to the proverbial chase: I have certainly not taken the side of the fascists. What I have done is remove you from the scrutiny of the station personnel.\"\n\n\"I can't believe-\" He paused. \"What?\"\n\nShe almost sighed. \"You appear determined to not ignore the Ekosians. Therefore, I am guiding you towards a more acceptable alternative to yet another inevitable altercation. I forbade all of you from arranging or participating in any public counter-demonstration to the Rally. I did not forbid you from finding a means of preventing the Rally.\"\n\nHe paled, eyes wide with confusion. \"Preventing it? How-\"\n\nShe set her hands behind her back, her tone becoming more familiar, more tutorial. \"Why are the Ekosians marching? What is their reason for being on this station?\"\n\nThe others drew up, Neraxis offering, \"It's a display, a show. They're here to make an alliance with the Klingons.\" The Bolian grunted. \"I'm sure they'll have a lot in common.\"\n\n\"Will they?\" T'Varik countered cryptically. Without offering a further explanation, she ordered, \"Report to Sickbay for detoxication before deciding on your next course of action. I recommend a perusal of the Khitomer Accords, for a start; however, I would strongly advise you that whatever you do, you take no illegal action whatsoever.\"\n\n<br >She left them at that.\n\n<br >*\n\n<br >They weren't long out of Sickbay when Jonas suggested, \"Let's get to the Mess Hall for some coffee; I think I have an idea.\"\n\n\"No,\" Soo announced bluntly, \"Count me out. I'm not getting involved in this anymore. It's not my fight.\"\n\nShe started back towards the cadets' quarters, but Jonas raced up to her, blocking her. \"Wait! We need you- I need you!\"\n\nSoo looked at him with a mix of emotions. \"Jonas, I know that this is important to you, I don't know why, it was over four hundred years ago-\"\n\n\"Soo,\" he started, swallowing and continuing. \"They killed my family.\"\n\nShe stared at him in confusion.\n\nHe paled, growing sadder. \"After that business meeting the 22nd Century Terrans on the Rising Star, I became more interested in learning about my ancestors. They- They originated in Warsaw, Poland. One Ostrow, Jakob, emigrated to America against the wishes of the rest of the family in 1933.",
        "It turned out that his decision saved his life; just a few years later, Nazis invaded Poland, herded my family along with many others into a ghetto, and then into camps. Camps with no other purposes than to exterminate them. To exterminate them for no other reason than they were of a particular ancestry that the Nazis believed inferior, believed didn't deserve to live and needed to be swept away to make room for their Master Race.\"\n\nSoo's expression matched his sorrow. \"Jonas, I'm... I'm sorry. I- I'll help, of course. But... what sort of help can I give you?\"\n\nHe looked at her, wanting to tell her a million things. Instead, he settled for, \"Well, for one thing, you have the most experience with holodeck programming...\"\n\n*\n\nStarbase 154, Residential Section 3:\n\n\"Excuse me, Advocate J'chaclath?\"\n\nThe tall, imposing-looking Klingon with the pepper-grey hair and beard and a scar bisecting his cranial ridges didn't even slow down as he strode from his quarters, looking at his PADD and pretending not to notice the young cadets, back in uniform.\n\nJonas quickened his pace along the corridor to move past the Klingon official, looking up at him. \"Good morning, sir. My name is Cadet Jonas Ostrow, of the USS Surefoot-\"\n\n\"I don't care,\" he replied simply.\n\nJonas glanced at Neraxis and Kit, who were following closely behind. \"Sir, I was wondering if we could have a moment of your time-\"\n\n\"No.\"\n\n\"It won't take that long-\"\n\nA little sneer lifted the corners of the Klingon's mouth. \"I do not have any time to spare for Starfleet ghu.\"\n\nJonas stopped in his tracks, as his friends caught up, Kit asking, \"'Ghu', Friend Jonas?\"\n\nJonas watched the Klingon continue on his way. \"'Babies', Kit.\" Suddenly he clenched his fists and shouted, \"Mev 'ej HI'Ijqu', petaQ!\"\n\nJ'chaclath stopped in his tracks, took a moment and turned around, glaring at the trio.\n\nUnder her breath, Neraxis asked, \"What the hell did you say to him, Scrappy?\"\n\nJonas just shushed her quietly, never taking his eyes off the Klingon.\n\nHe strode back towards them, looking impressed, annoyed... and amused. \"And what could possibly make you risk a blade in the belly by speaking to me in such a fashion, Baby Starfleet?\"\n\nJonas raised his chin to the much, much taller individual. \"'There is in the end only one true reason to face Death: the defence of Honour'.\"\n\nThe Klingon reacted with unabashed surprise. \"You know the teachings of Kahless?\"\n\nJonas crossed his arms over his chest. \"Of course. No man can truly find honour without knowing Kahless. Now, what I have to tell you, to show you, will not only help my family regain honour taken from it... but will save the Klingon Empire from potential dishonour for itself. Now, are you interested in learning more... or do I have to kick your ass around this hallway a bit first?\"\n\nJ'chaclath regarded him... and laughed, reaching out and slapping Jonas boisterously on the shoulder. \"Well said, Baby Starfleet! Come now, and teach this old warrior something new!\"\n\nHe led Jonas along, Jonas giving his friends a beckoning gesture to follow. Neraxis and Kit did, the Bolian whispering, \"Seriously, how did he stay a virgin for so long with that silver tongue of his?\"\n\n*\n\n\"You did this!\" Hurensohn accused T'Varik.\n\nShe had been on the station, in discussion with Commander Sevris regarding securing additional communications capacity, when their meeting was interrupted by Major Hurensohn and Mr Biryani. The Vulcan maintained her usual level of calm, offering only a bemused, \"May I assist you?\"\n\nThe pudgy pink face reddened. \"Yes! You can explain why you allowed those troublemaking cadets to return to the station and sabotage our Rally!\"\n\nShe straightened up. \"It is a large station, and your Rally is not due to commence for another 7.35 hours. Have you any proof that they are on the station to commit sabotage?\"\n\n\"They were witnessed visiting the Guest Quarters where the Klingon Advocate is stationed! And then seen walking with him towards the Entertainment District!\"\n\nSevris looked to T'Varik. \"Is this true?\"\n\n\"I cannot possibly confirm or deny that, as I have not been closely monitoring their activities.\" She eyed Hurensohn warily. \"Unlike you, apparently.\"\n\nThe Ekosian bristled. \"Given their hostile nature, are you surprised at our caution? I demand that you have your cadets be locked up and kept under control!\"\n\nT'Varik raised an eyebrow. \"You are in a position to demand nothing. I will address my cadets on their activities immediately, however.\" She tapped her combadge. \"Cadet Ostrow, respond immediately.\" When he didn't, she tried the others, all without success.\n\n\"There, see?\" Hurensohn declared. \"They're mutinous! They should be shot!\"\n\n\"Starfleet does not execute as a rule, Major, it is not conducive to morale.\"\n\n\"Maybe not,\" Biryani conceded, simpering, \"But if you don't want me to report this to your superiors-\"\n\n\"Wait, let me try something.\" Sevris tapped his own combadge. \"Sevris to Station Security: access the records on those cadets arrested last night and run a combadge trace. They were last seen approaching the Entertainment District.\"\n\nSeconds later, a voice replied, \"The last trace of them recorded is at the holosuites, Lieutenant Commander.\"\n\nThe Andorian looked to T'Varik. \"The holosuites block signals to ensure privacy.\"\n\nShe nodded at that. \"Then we shall go to them.\"\n\nAs the quartet emerged onto Broadway, Hurensohn snapped, \"I knew you would be too sympathetic to them! You let them walk all over you!\"\n\nT'Varik's stride was wider than his, allowing her to be a step ahead of him. \"Sympathy is an emotion, Major. I am not swayed by emotions.\"\n\n\"Well, then, maybe if you were, you would have predicted that Cadet Ostrow would have done something like this. Historically, his kind are notorious troublemakers.\"\n\nShe stopped and turned without warning, stopping him in his tracks, her expression taut. \"Explain what you mean by 'his kind'. Do you mean 'Terrans'? 'Starfleet cadets'? Or are you referring to something else?\"\n\nHe blustered, taking a step back, unable to hide the reaction from his eyes. \"I- I don't have to explain myself to the likes of you.\"\n\n\"No,\" she agreed coldly. \"You don't.\"\n\nHe raised his chin. \"We are Ekosians. We are strong-\"\n\n\"Not so strong that you could not stop from completely adopting an alien culture in place of your own. Of course, perhaps I know nothing. After all, you are, to judge from your manifesto, a member of the Master Race. And I am merely a Vulcan, with twice your intellect, strength, stamina and longevity.\"\n\n\"Commander,\" Sevris prompted nervously, \"This is getting us nowhere. Literally.\"\n\nShe nodded at that, turned and continued onward.\n\n*\n\nSevris' security clearance overrode the door locks, allowing them access into a frozen Hell: a snow-carpeted environment of stark unmarked windowless buildings of industrial purpose, barbed wire fences, watchtowers rising here and there like monsters on spindly legs, and men in uniform like Major Hurensohn's, or in plainer grey and black designs with round metal helmets and carrying ballistic weapons, whips and clubs.\n\nAt the edge of the facility, an open gate led to a long row of ancient railway cars, where hundreds of gaunt, frightened-looking men, women and children carrying meagre possessions were force-marched along by the guards. Those who were slow or stumbled from age or infirmity were mercilessly beaten, whipped... or in at least one case, pulled to one side and simply shot in the head, the dark red blood patterning on the thin white carpet of snow.\n\n\"What- What is going on here?\" Biryani demanded, stunned.\n\n\"This appears to be a holographic representation of a Nazi extermination camp,\" T'Varik explained, scrutinising the signs here and there, her eyes moving past the body in the snow and the nearest buildings to some stone chimneys, which spewed grey-black smoke into a cloud-canvassed sky. \"In the occupied nation-state of Poland. One of many camps constructed by the Nazis during Earth's Second World War.\"\n\n\"Lies!\" Hurensohn spat, making a visible effort not to look at the line of captives as they were herded behind some buildings. \"Fake news! This never happened! It was all a hoax concocted by inferior races!\"\n\n\"I- I-\" Lt. Commander Sevris was clearly disturbed. \"I can't believe that this is real. How could they get away with it without being stopped?\"\n\n\"They were stopped,\" T'Varik noted, \"But not before millions were exterminated. And they 'got away with it' for as long as they did at least part because people such as yourself were reluctant to believe that it could happen.\"\n\nThe Andorian frowned at her - but said nothing.\n\n\"Why recreate this here?\" Biryani muttered, wanting to look away from the horror but unable to do so. \"And bring the Klingon Advocate to see it?\"\n\n\"Perhaps we should ask them?\" T'Varik suggested, as she nodded towards Jonas and several other cadets coming into view, alongside a tall, older Klingon with markings of a senior rank within their High Council, clearly not part of the program. All looked shaken by what they had witnessed. Even the Klingon.\n\nJonas led the way, narrating as he did. \"Each of the four crematoria here had their own undressing rooms, gas chambers and furnaces. The new arrivals had been told they were being relocated to work camps east, that this was just a waystation where they would stay only long enough to be disinfected; the Nazis even set up fake signs and train schedules to keep their prisoners deceived and distracted, and gave them numbered hooks for their belongings in the undressing room to make them believe they would be returning for them.\n\nOnce they were locked inside the gas chambers, the diesel motors were started and the carbon monoxide gas was pumped in. Within twenty to thirty minutes, all of the victims were dead. Afterwards the work units moved the bodies out of the gas chamber, removed gold fillings, false teeth, hair, jewellery and eyeglasses, and disposed of the bodies in the adjacent furnaces. Then they cleaned the gas chamber for the next group. At its peak, the Nazis could kill up to three thousand people and dispose of their remains in under ninety minutes.\"\n\nJonas paused as he saw the visitors to the holosuite, before continuing to speak, his eyes fixed coldly on Hurensohn now. \"Here alone, between 700,00 and 900,000 men, women and children would be killed - including most of my own family; only a twist of fate kept my line alive, so I could stand here now and tell you - and warn you about the type of people you might be allying yourselves with.\"\n\n\"Enough of this!\" Hurensohn cried out. \"What are you doing here with Advocate J'chaclath? Showing him your false propaganda?\"\n\nJonas straightened up, his hands balled into fists. \"Not propaganda. The truth. The truth about what you Nazis are.\"\n\n\"No!\" He turned to the Klingon. \"It's all a liberal conspiracy, set up to demonise the National Socialist ideal on his world!!\"\n\n\"You are in error, Major,\" T'Varik corrected him coldly. \"Or in self-denial, or simply a liar. The forensic evidence available is overwhelming; the word 'genocide' was coined in 1944 to properly define the scope of the Nazi crimes against humanity.\" She looked to the Advocate. \"I have personally visited one such site during my stay on Earth. I give you my word of honour as a Vulcan that this is an accurate representation of such a camp, and the activities that took place.\"\n\nJ'chaclath grunted in satisfaction at that.\n\nHurensohn looked around, his boots crunching in the thin snow as he took in the angry, accusing faces. \"Well, even if it did happen - which it didn't! - this is still the work of Earthmen, from nearly half a millennium ago! We are Ekosians, here and now! We've never committed such acts!\"\n\n\"Lying dog!\" J'chalclath spat. \"These cadets showed me the Starfleet Archive recordings of the Zeon death camps you set up on your own world! The nuclear missiles you readied to launch against an unarmed planet!\"\n\n\"And we showed him all your predecessors,\" Jonas continued. \"Colonel Green's Purifiers, the Eastern Coalition Oubliettes, the Chechnyan camps, the Neo-Nazi terrorists. The terrible patterns, repeating, over and over.\" He held out his arms as if to encompass the surrounding horrors. \"But we had to show him where and how it all began. And where you'll end up.\"\n\n\"No! This is not who we are-\"\n\n\"This is EVERYTHING you are! The terminus, the endpoint, the ultimate goal! You can't wear those swastikas and strut about in those uniforms and spout your bile, and divorce themselves from where it all leads to!\"\n\nHe looked at the real people in the holosuite. \"Under his terrible, terrible ideals, no one here would survive! He and his people would slaughter us all! Because we're Jewish! Because we're gay! Because we don't meet his standards of racial superiority!\" He looked back at the Klingon. \"And if your people ally yourselves with them, equip them with ships and weapons and technology, this what they'll do. And their dishonour will be your dishnour!\"\n\n\"That will not happen, Cadet,\" J'chalclath assured him, facing up to Hurensohn. \"We would sooner ally ourselves with Romulans than the likes of you.\"\n\nHurensohn looked faint. \"N-No! Don't listen to them-\"\n\n\"I believe it is too late for that, Most Disrespected Major,\" Kit informed him. \"As we pointed out to the Respected Advocate, under the terms of the Khitomer Accords agreed upon by the Federation and the Klingon Empire, neither side will ally themselves with any power who has engaged in, or is willing to engage in, acts of genocide.\"\n\n\"Return to your wretched world, you petaQ,\" the Klingon growled at Hurensohn.\n\nThe Ekosian looked up at him, stunned at the sudden reversal of his fortunes, before turning on what he obviously thought was an easier target, striding up to Jonas. \"You dirty interfering little Jew-\"\n\n\"Shut up.\" Jonas swung back and connected his fist with the man's nose, sending him spinning to the ground. Hurensohn cried and fell.\n\nJonas ignored the ripping pain shooting through his fist and arm - how does Neraxis manage to do that so easily? - and looked to T'Varik, almost daring her to rebuke him. \"If you don't stand up to them, if you don't fight them, you might as well be on their side.\"\n\n\"Well said,\" The Klingon chuckled, touching the hilt of a knife on his belt. \"If you wish, Mr Ostrow, you may borrow my kut'luch to finish the job.\"\n\nJonas made a show of seriously considering it, enjoying the reaction on the Ekosian's face to the offer. \"Thank you, Advocate, but I would never sully your blade with the blood of this taHqeq.\"\n\nJ'chaclath grunted in amusement, and then departed, discernibly walking around Hurensohn, who clutched his nose and helped himself back to his feet, looking to Biryani, his voice nasal now. \"He assaulted me! I'm pressing charges against him! You saw it! Do something!\"\n\nBiryani glared, looking past him to the holographic horror around them, and announced, \"You and your party have one hour to book passage and get off my station. I don't care where you go.\" Then the Zakdorn nodded to the Starfleet officers. \"If you'll excuse me?\"\n\nAs Biryani left, Hurensohn blustered some more, seemingly unwilling to leave without regaining some footing. \"I'll complain to your superior about this!\"\n\nT'Varik remained unmoved. \"Captain Hrelle is currently on leave on his homeworld, but if you wish, I will hail him so you may address him directly. Be advised, however, that there is a 99.6% probability that his response will be an invitation for you to kiss his furred posterior - with supplementary labelling of you as various genitalia-themed insults, and instructions for you to self-fornicate.\"\n\nNeraxis looked at her. \"Only 99.6%?\"\n\nShe nodded. \"I am allowing for a 0.4% variance that, given his protective nature and that he was once married to a human woman of Jewish origin, the notion of a Nazi expecting a supportive response from him about a complaint regarding Jonas will leave him overcome with laughter.\"\n\nThe Ekosian looked around, blood dripping down from the hand covering his nose and beading his black uniform. He focused on Jonas. \"You'll get yours someday, Jew!\"\n\nJonas blinked and replied simply, \"Shalom.\"\n\nAs Hurensohn fled the Holosuite, T'Varik turned to Sevris. \"Lieutenant Commander, if I might offer some advice for one in your position? I would refer you to the Paradox of Tolerance, a decision theory formulated by a 20th Century Terran philosopher named Karl Popper. The paradox states that a society tolerant without limit will inevitably seized and destroyed by intolerant forces. Therefore, in order to maintain a tolerant society, that society must make one exception: towards the intolerant. Remember, you represent our ideals here. Do not be so accommodating in future with those whose who threaten them.\"\n\nThe Andorian regarded her, seemed ready to argue, but then just nodded and left.\n\nShe focused on the cadets once more - noting Jonas walking away from them, back towards the other side of the camp. She straightened up and folded her hands behind her back. \"My compliments, to all of you: you achieved your goal without disobeying orders, breaking regulations or causing violence - Cadet Ostrow's actions just now notwithstanding. Speaking of which: Cadet Nemm, you will provide Jonas with additional pugilistic tutoring; if he intends to continue punching Nazis, I would prefer he do it without damaging his hand.\"\n\nThe Bolian chuckled at that. \"Yes, Ma'am!\"\n\nThen Soo's gaze followed Jonas' departure. \"Is he okay?\"\n\n\"I will see for myself. All of you return to the Surefoot.\"\n\n\"Return, Respected Commander?\" Kit asked, swaggering and re-adopting his English punk persona. \"But we were gonna go down the mosh pits and get in a scrape with a couple of skinheads!\"\n\nT'Varik's gaze narrowed. \"I believe we've had enough of that, Cadet.\"\n\nKit appeared crestfallen. \"Bollocks.\"\n\n\"Never Mind the Bollocks.\" She walked past them, her mental disciplines returning to her to distance herself from what was happening around her... when the environment began shifting, changing: the buildings vanished, replaced with monuments, the snow on the ground with grass and pathways, the piles of gathered possessions with crystal markers in various Federation languages, and the cloudy grey sky with a bright blue Spring morning.\n\nShe found Jonas standing facing one of the markers. \"You included the modern version of the camp.\"\n\nHe nodded, without looking up. \"We accessed current footage to use as a base for the recreations.\" As she drew up and stood beside him, he announced, \"I'm sorry, Commander.\"\n\n\"What for?\"\n\n\"For doubting you understood why I felt like I did. For thinking you were-\"\n\n\"On the side of the fascists, I believe you put it.\" She nodded. \"Apology accepted.\"\n\nJonas looked at the words on the marker without actually reading them. \"I didn't know you visited one of the sites.\"\n\nShe nodded again. \"Treblinka. Although I recognised that there were other places on your world where greater numbers of Terrans were killed, still, I was moved by what I found there, the stories behind it.\"\n\nNow he looked up at her. \"You were?\"\n\nShe sighed. \"If you are going to once again express surprise that a Vulcan feels emotions-\"\n\n\"No, no, of course not.\" His gaze dropped. \"Faced with this horror, with what humans are capable of doing to each other, it's amazing that the Vulcans, that any race, would want to have anything to do with us.\"\n\n\"Regrettably, your people are not unique in the Universe, Jonas. Unlike others, however, you have grown, but you have not buried the memory of this monstrous time, and the monstrous thoughts and monstrous deeds that spawned it. You remember... and you remain ever vigilant that it will not be repeated. For now, though, leave the past here; I have tasks for you in the present.\"",
        "Jonas nodded, following her outside...\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN...\n\nCAITIAN HOLIDAY"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fanfic",
        "science fiction",
        "starfleet",
        "caitian",
        "alien11111",
        "nazi"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-11-patterns-repeated"
}