{
    "title": "Tybalt and Juliet Ch. 13",
    "pages": [
        "\"Oh, that's so romantic! Such a sweet present!\" Amy's mum gushed. She put an arm around me and squeezed me against herself.\n\nI'd been agonising about what to get my girlfriend for her nineteenth birthday. I wanted to surprise Amy, but had I asked her, I was certain that she'd say that all she wanted was to spend the weekend alone with me, something we'd been planning for the preceding three weeks. We'd be giving the double bed in her uncle's cottage a good workout, but I wanted to give her something tangible that she could take with her to university and not just the warm memories of good sex. All I'd come up with was a framed print of the selfie that the two of us had taken in Trafalgar Square on our first visit to London together. \n\nClueless, I'd turned to my friends for inspiration. Stijn, one half of the most durable couple at school, seemed the most likely to offer sensible suggestions, but when we'd met for a drink, he'd spent almost the entirety of the evening agonising over whether he should split up with Rachel. It seemed a little insensitive, when talk finally turned to my relationship with Amy, to ask for his advice on a birthday present.\n\nJames had given me far too much information about the bra-and-panty set that he'd purchased for Becky (and the night she'd given him in return), and I declined his kind invitation to accompany me to a lingerie shop. Perhaps I was too much of a prude, but I wasn't ready to buy Amy underwear and I suspected that she wasn't ready to receive it either. Above all, I wanted a present that she wouldn't be embarrassed to show her mother.\n\nLauren and Danny had returned penniless and exhausted from their grand tour of Europe, and had talked at nauseating length about their adventures. Male pride prevented me from admitting to my cousin that I was out of ideas and, had I asked him, Danny would only have referred me back to her for advice.\n\n\"Why don't you record yourself playing the guitar?\" suggested Mum, after I'd turned to her in desperation with under a week to go. \"Sing a few songs for her?\"\n\nIt was an inspired idea. I practised frantically to work up eight or so songs and a couple of instrumentals to performance standard. Then, two days before Amy's birthday, I found myself in the sound-proof studio at James' house, laying down the tracks with the help of his middle brother.\n\nI'm not going to pretend that I was a one-take wonder and it had taken the best part of four hours to record forty minutes of music, but I was pretty pleased with the end result. By mid-afternoon I emerged clutching my guitar and two memory sticks containing the precious audio files.\n\nI walked slowly from James' house into town. We were well into September now and the unbearable heat of summer had loosened its hold on the south of England. There was a cooler edge to the stiffening breeze; autumn was on its way.\n\nI'd finished my job at the Campsite at the end of August and was working at the Stables. Jackie, the owner, was still spending a lot of time with her frail mother up in Sheffield and, even if the school holidays were over, there was still plenty for me to do. It was nice to work with Amy, although opportunities to show affection for each other were limited. We'd had sex twice at the end of the summer, but our schedules, her period, and a general lack of privacy had prevented us from experimenting further. I couldn't wait to spirit her away for a romantic weekend.\n\nI'd been fairly good at keeping up with my school friends, all of whom were preparing to head off to university. Like Lauren and Danny, many had taken advantage of the longer vacation to go on extended trips away. Amy and I would undoubtedly have done the same were it not for the attack after the prom.\n\nI reached the caf\u00e9 in the town centre, where I'd arranged to meet Anna. She'd been Head Girl at school for our final year and would be going to Newcastle to study biochemistry. I wasn't entirely sure when her term was due to start, but she'd be leaving for the north of England soon.\n\nI liked Anna a lot. Perhaps that wasn't difficult - she was fun, confident and articulate. With the possible exception of Becky, she was the most attractive girl in our year group - tall, blonde, with the body of a volleyball player - in short, every male teenager's wet dream. Most of the boys at school had tried to come on to her, but without success. Ritchie had attempted to woo her several times, before turning his sights on Amy. As for me, I'd known all along that it wasn't worth trying; Anna was way out of my league.\n\nWe paid for our drinks and headed to a small table at the back of the caf\u00e9. We exchanged a few pleasantries about our respective summers and then the real reason for Anna's request to meet became clear.\n\n\"Er Jake,\" she began, \"I wanted to ask you something - about school. It's the prizegiving evening in December...\"\n\nI nodded. Our school was a little unusual in that our 'graduation ceremony' would take place almost six months after we'd left. The scheduling, although utterly illogical at first glance, was the first available point in the calendar after our A level results had been published and university places confirmed, when the vast majority of awardees were likely to be available to attend. (Any date in August or September was impossible because of summer vacations and the spread of start dates for university terms.)\n\nTradition dictated that the Head Boy and Girl would give a joint speech and therein lay the first problem: Ritchie was on remand in a young offenders' institution and therefore otherwise engaged for the evening. I'd suspected that she was going to offer me the opportunity to take his place, and I'd planned a respectful refusal. Anna would have to give the speech on her own.\n\n\"The invitations are going to go out in a couple of days' time,\" she continued. \"And, well, some of the others were wondering what we should do. You know how badly the school behaved about Ritchie, well, some people are saying we should boycott the ceremony and maybe do something somewhere else on the same night.\"\n\n\"A rival event?\" I asked, half-horrified. I hadn't seen that one coming.\n\n\"People have suggested booking the Town Hall,\" she stated. \"Invite the local press and make it a celebration of us as a year group and not let the school take the credit for what we've achieved.\" \n\nAnna was conflicted and cautious. I sensed a tremendous loyalty within her to the school, but there were clearly voices around her who thought that carrying on with business-as-usual in the light of the summer's events and revelations was hypocritical. Maybe they had a point.\n\nThe problem was that I knew who the voices were - a gaggle of about half-a-dozen students, whose raison d'\u00eatre was posting indignant comments on social media - shrieking banshees who'd jump on any bandwagon going. Where were the outraged when Ritchie was at the height of his power? Saying nothing and trying to sleep with him, in a pathetic attempt to improve their own standing - that's what they were doing. To be taking the moral high ground now was the very definition of sanctimonious duplicity.\n\nYes, the school had behaved appallingly over the Ritchie issue for several years, but various investigations (some led by the police and some by the council) were getting to the bottom of those events now. Wounds were beginning to heal and reopening them in such a petulant way was not going to help anyone. Mention of inviting the local press was the give-away - this was a stunt, nothing more.\n\nFinally there were the practicalities to consider. Just who was going to organise and pay for a rival event? It was all very well dreaming up big statements over the summer when time was plentiful and everyone was searching for distractions from boredom, but the idea of arranging something in the Town Hall through the final weeks of a busy university term from at least a hundred miles away was simply a non-starter. The virtue signallers would blithely make promises now, but the whole thing would be dumped onto Anna's shoulders as the time approached.\n\nThe Head Girl let me think for several seconds as I pretended to tussle with the issues. Eventually I shook my head.\n\n\"Anna,\" I began, \"I can see why some people think this would be a good idea and yes, I think the school's got a lot to answer for, but this isn't the way to put things right. There were some bad teachers, some very bad teachers, but they're gone now; the good ones are still there; we should thank them for what they did and let them celebrate with us.\"\n\nThere were signs of relief in Anna's face.\n\n\"You don't think we're endorsing a bad school?\" she asked warily.\n\nI shook my head.\n\n\"No,\" I replied. \"We're showing that we're proud of what we've achieved. Some people might have stood in our way, but so many more have helped us. And we should acknowledge that. We've got no idea what went on behind the scenes, maybe some of them took risks to protect us - we'll never know what they might have done.\"\n\nAnna nodded.\n\n\"And should I mention the attack, in my speech?\" she asked.\n\nI shook my head. The greatest insult we could pay Ritchie would be to ignore him completely, to expunge him from the record as if he'd never existed.\n\n\"Everyone knows,\" I said gently. \"Focus on what we did, not on the people who tried to stop us.\"\n\nAnna and I chatted for another twenty minutes or so as we finished our drinks. It was about half past four and the caf\u00e9 had pretty much emptied.\n\nWe walked the short distance to the town square, where our paths diverged.\n\n\"Well I guess this is it,\" I said, as we paused to say goodbye.\n\nAnna embraced me. \"Good luck Jake,\" she said. \"You're gonna do so well at Cambridge, you're gonna have so much fun.\"\n\n\"And you at Newcastle,\" I said. \"You'll speaking with a Geordie accent by Christmas!\"\n\nThere was a slightly awkward pause.\n\n\"I'm really pleased you got together with Amy,\" she said. \"You really deserve each other - you're so right for each other!\"\n\nI thought I detected a hint of regret in her voice.\n\n\"There's a really great guy waiting for you at Newcastle,\" I said. \"You'll find the one!\"\n\nAnna smiled, as if to humour me. We hugged once again and then turned to go our separate ways.\n\n\"Bye Jake,\" she called.\n\n\"Bye Anna,\" I waved back over my shoulder. \n\nI turned, swerving just in time to avoid a collision with Amy's mother.\n\n\"Jake!\" Jenny Norton exclaimed.\n\nA wave of panic washed over me. She'd seen me saying goodbye to Anna, hugging a girl who wasn't her daughter.\n\n\"Er I've just been saying goodbye to a schoolfriend,\" I stuttered nervously. \"She's leaving for Newcastle next week. I did tell Amy I was meeting her,\" I added defensively.\n\nJenny smiled, enjoying my obvious discomfort. \"It's OK Jake, you are allowed to meet up with female friends!\"\n\nI looked down at the pavement, feeling a little foolish.\n\n\"Actually Jake,\" she said. \"I wanted to talk to you on your own. Do you have time for a quick chat?\" she asked.\n\n\"Er, yeah.\" I swallowed nervously.\n\nShe glanced around the square, but all of the benches were taken.\n\n\"Let's go back to my office,\" she said. \"It's only a short walk.\"\n\nWe began to walk back along the High Street. I'd noticed it earlier, a few of the shoppers staring we passed, half-recognising me - one of the reasons I'd tried to avoid coming into town over the summer. \n\n\"You been playing your guitar?\" Jenny asked, motioning to the case I had slung over my back.\n\nI blushed. \"It's for Amy's birthday,\" I confided. \"I've been recording some songs for her.\"\n\n\"Oh that's so romantic! Such a sweet present,\" Amy's mum gushed. She put an arm around me and squeezed me against herself.\n\n\"Well I wanted to give her something to take with her to university, but she's not going to have very much room to store things,\" I muttered, embarrassed.\n\nJenny laughed. \"Amy's got caught up on the whole idea of moving into her own space. She's bought so much stuff. I've tried to tell her she'll be living in a shoe box for the next three years, especially in London.\"\n\nWe'd reached the entrance to the law firm and she led me up the stairs to her office.\n\nThere was a brass plaque on her door: 'Jennifer Norton MA BCL - Senior Partner' it read.\n\nIgnoring her mahogany desk, Jenny showed me to a couple of straight-backed armchairs at the far end of her office. I rested my guitar against the bookcase behind and sat down, waiting for her to begin.\n\n\"I wanted to talk to you about Richard's trial,\" she said, a little cautiously. \"I don't think the police will have told you yet, but we finally have a date for the case management hearing.\" She paused. \"It's about a month from now - I think it's the Friday before you go up to Cambridge.\"\n\nI sighed inwardly; it wasn't ideal timing. I'd been hoping that the court process would start after I got to university, so that I had some distance between me and my hometown. But no matter the date, wherever I was in the world, I'd still end up thinking about the trial. \n\n\"Now although you'll still be at home,\" Jenny continued, \"it's not a good idea for you to go along. The last thing you need is to come face-to-face with either Ritchie or his family.\"\n\nI nodded. I had no intention of going, unless I was called as a witness, and that wouldn't be until the main trial.\n\n\"As you know, there's a fair amount going on behind the scenes at the moment. But essentially what has happened now is that the judge has decided that the prosecution has enough evidence for the case to proceed.\n\n\"So when Richard gets into court, he'll be asked to enter pleas to the charges against him,\" she continued.\n\nI swallowed.\n\n\"Our firm isn't handling this, but I know the lawyers that are. I know them very well, both the prosecution and the defence.\"\n\nI nodded. Jenny had seen a lot of the papers connected to the case - she wasn't supposed to, but she'd pulled strings.\n\n\"The difficulties with the case are not really to do with a dispute about the facts of what happened - it's the severity of the attacks and working out what charges Richard should be facing,\" she continued, slipping subconsciously into a more formal, legal tone.\n\n\"The student that he attacked in the nightclub - her injuries looked horrendous, especially in the press photos - but it was mostly severe bruising and a broken nose. What was never reported in the papers was that she provoked him by pouring her drink over him - he'd been harassing her and instead of walking away and getting help, she decided to humiliate him. The sexual assault charge isn't going to stick, I'm afraid - the evidence simply isn't there.\"\n\nI swallowed, that was news to me. The press had suggested that Ritchie might even stand trial for attempted rape; now it was clear that their sensationalist reporting at the time was based more on rumour and hearsay than concrete facts.\n\n\"Because of the provocation defence and the fact that the attack wasn't planned, the most he's going to be charged with is actual bodily harm. The CCTV evidence isn't as clear as we were led to believe. I'm afraid to say he might well plead 'not-guilty' and the case will be sent to trial.\"\n\nMy stomach turned over. I'd always thought that the assault on the student was the more serious incident. Now I feared for my own case.\n\nJenny could see the signs of alarm and concern in my expression. \"And the attack on me?\" I asked nervously.\n\n\"Richard has been charged with Grievous Bodily Harm,\" Jenny continued, \"and, as you know, that's under Section 18, which is the more serious option. It's always been a possibility that the defence would arrange a plea bargain and that he'd plead 'guilty' under Section 20 instead.\"\n\nI nodded. Jenny had explained the mechanics of a potential plea bargain and it had always seemed a likely outcome. (In fact, she'd been upfront from the outset that if Ritchie was her client, she'd advise him to accept one.) Section 20 would limit his sentence to five years, but given his age, it would be considerably less.\n\n\"There's no easy way to tell you this, Jake, but I'm afraid what I'm hearing now is that Richard's defence team want your case downgraded to actual bodily harm.\"\n\nI gave a sharp intake of breath and I felt the colour drain from my face.\n\n\"Will they let him do that?\" I stammered, my faith in the law beginning to flounder.\n\n\"No, absolutely not,\" Jenny said firmly. \"The prosecution would never agree to it and the CCTV evidence is clear. So, there's a strong likelihood that he'd plead 'not guilty' to the more serious charge.\"\n\nMy mind was beginning to race. A 'not guilty' plea meant that I'd have to appear as a witness. I could just image Ritchie turning on the charm to the jury, playing the 'sweet-and-innocent card' that he'd used against me so many times in the past, then swaggering out of the court scot-free, a supercilious smile plastered over his sneering face.\n\nJenny spoke again, more softly this time. \"Jake, I know this is a shock to you, but a lot of this is part-and-parcel of the normal negotiations and conversations that happen before a trial. There's nothing unusual here; Richard's defence team aren't playing the system - they're just arguing the case for their client as best they can.\"\n\nI nodded. There was a crumb of comfort there, somewhere. I looked down at the floor, not wanting to make eye contact.\n\n\"I'm just worried about having to be in court as a witness. And the defence team trying to rip me apart and blame the whole thing on me,\" I bleated.\n\nJenny nodded sympathetically.\n\n\"Well,\" she said. \"The good news is that the prosecution can probably arrange for you to appear by video link from Cambridge. So you wouldn't be in the same room as Richard.\n\n\"And as far as cross-examination goes, we'll make sure that you're supported and prepared before it happens. If you don't want me to help you, that's fine, then James' mum, or even someone from another firm can help. \n\n\"Pro bono,\" she added\n\nI gave her a quizzical look.\n\n\"It means we won't charge you.\"\n\nI smiled weakly, trying to pretend that I was reassured. \n\n\"Jake,\" Jenny said gently. \"Everything you did that night - on the night of the prom, was exactly right - everything. \n\n\"When Richard threatened you with that knife, you did nothing to inflame the situation, you tried to back yourself and Amy away from danger and only when it was completely unavoidable did you repel him with force. You were calm and collected when it mattered - under the most extreme provocation. You showed courage, wisdom and maturity far beyond your years - far beyond your years. I should know - I prosecute these sorts of cases for a living.\"\n\nI looked up at her. \"Really?\" I asked.\n\nJenny nodded and attempted a reassuring smile.\n\n\"You did everything right, Jake,\" she said. \"And if the case does go to a full trial and you're called as a witness, I promise we'll make sure that you're fully ready.\"\n\nI nodded. \"Thank you,\" I said quietly.\n\nI leant back in the chair and tried to take everything in. Jenny walked across to her desk and poured a glass of water, which she offered to me.\n\nI drank gratefully.\n\n\"Does Amy know?\" I asked. \"About the plea bargains I mean?\" My girlfriend had been at work at the Stables all day and I hadn't spoken to her. I had a sudden feeling of panic that she'd been carrying this information around inside without being able to talk to me.\n\nJenny shook her head. \"No, not yet,\" she replied. \"I thought it was fair for you to know first. I will tell her this evening, so don't say anything yet. It's probably best to wait for me to talk to her before you speak to her tonight.\"\n\nI nodded. Jenny was right - it was better for mother and daughter to talk first.\n\nI took a few deep breaths.\n\n\"I know, it's a bit of a shock to hear this,\" Jenny said. \"But what's happened so far in the process is completely routine. The prosecution are just trying to get the best chance of a conviction in both cases. The defence team are trying to do their best to represent their client. I wouldn't have done anything differently.\"",
        "We were quiet for a few seconds.\n\n\"So how will I find out how Ritchie has pleaded?\" I asked.\n\n\"I'm going to sit in the public gallery and listen,\" Jenny said. \"I owe that to the two of you - to you and Amy. Richard's parents will probably be up there too, but I can deal with that - we don't have to say anything to each other.\"\n\nI nodded. It was strangely reassuring to hear that my girlfriend's mother would be there.\n\n\"When it's over, I'd like to come and talk to you face-to-face, like this, to explain what's happened. The prosecution will contact you, but not until the following week at the very earliest.\"\n\n\"If it's the Friday, I'll probably be at home,\" I said, \"packing my stuff for Cambridge, but I can come in and meet you here.\"\n\n\"I think it's better if I come to you at the farm,\" Jenny said, \"if that's OK? I'll be in the car anyway and there's no point making both of us battle through the traffic.\"\n\nI nodded.\n\n\"And if you want your mum or dad to be there, that's absolutely fine,\" she added.\n\nI nodded. \"Thank you,\" I said.\n\nJenny shifted her position in her chair, as if to indicate that she'd said everything she needed to.\n\n\"Is there anything you want to ask me?\" she offered.\n\nI took a deep breath.\n\n\"There is something,\" I said tentatively. \"It's not to do with the attack - it's about Amy. But maybe I shouldn't.\"\n\nJenny gave me a slightly wary look. \"Go on,\" she said cautiously.\n\n\"I'm sorry,\" I said. \"But I didn't want to mention it to her, in case it upset her. But her dad? What happened to him?\"\n\nJenny took a deep breath, breaking eye contact and sinking a little into her chair. There was a long pause.\n\n\"I'm sorry,\" I said apologetically. \"I shouldn't have asked.\"\n\nJenny shook her head. \"It's not an unreasonable question Jake. And maybe you're right, it's better that I tell you rather than Amy.\" She paused. \"You've been with her for a long time now and I think it's fair you should know.\"\n\nJenny crossed to her desk again and poured another glass of water, this time for herself. She sat down again in the chair and cleared her throat.\n\n\"Amy's father and I worked at the same law firm in London - one of the top firms in Lincoln's Inn Fields. This is twenty years ago now. I was a Pupil, a graduate with a full scholarship, a kind of apprentice if you like. He was older, one of my mentors.\n\n\"It was just before Christmas and we'd been on a night out to celebrate, maybe a dozen of us in total. Yes, I'd drunk a bit, but he'd had more. We ended up being the last two people in the bar and then he took me home and, and, well, he attacked me.\n\n\"Then a few weeks later I found out I was pregnant.\"\n\nMy stomach lurched. I'd had no idea. I'd certainly never have asked if I'd had any inkling.\n\n\"Amy's father committed suicide about a month before she was born,\" Jenny continued without emotion. \"I knew that Amy would start asking questions as she got older. I told her he'd died of cancer, but I was going to her the full truth before she went to university.\"\n\nAnother pause; another deep breath.\n\n\"I could have cut off all contact with his family,\" she continued, \"but his parents offered to help as much as I wanted and I did want them to be involved; it seemed the right thing to do for Amy. She's very close to them now.\"\n\nI nodded. I knew that one set of Amy's grandparents were still alive, but I'd always assumed when she talked about them, they were her mum's parents.\n\n\"The summer we moved here, she was sixteen, she found his death certificate. I'd tried to keep it hidden, but everything got disorganised in the move. It said the cause of death was suicide. She confronted me; I had to tell her everything.\"\n\nJenny paused again, breaking eye contact with me.\n\n\"Amy really struggled to deal with it; the truth crushed her. She barely spoke to me for a week afterwards; it was hell. She'd never been the most outgoing of teenagers, but she'd had a group of close friends at her old school. Her personality changed overnight; she was sullen at home and when she was with other people, she was quiet and shy. She had trouble fitting in and finding new friends. Her academic work dipped and she got rejected by Cambridge. The only time she was really happy was when she was looking after the twins.\"\n\nJenny looked away into the corner of the room. There was a long silence, but I sensed that she didn't want me to interrupt.\n\n\"And then suddenly you appeared on the scene.\" Jenny gave a thin smile. \"I mean really suddenly; not a hint that she was interested in any boy at school. To be honest, I panicked a bit, especially when I found out what happened at James Masters' party. I could see history trying to repeat itself. It frightened me. I was suspicious of your motives, I'm afraid Jake. And I thought that Amy getting her first boyfriend immediately before her A levels was a recipe for disaster.\n\n\"But she was adamant, adamant - she wanted a chance to have a relationship with you. There were lots of holes in the story she told about that party - that was obvious.\" She gave another half-smile. \"I'm a lawyer - I can tell when people are lying to me, especially my own daughter.\n\n\"But I told myself that Amy was an adult - she had to make her own choices, even if I disagreed. My big fear was losing her; she'd threatened to run away from home when she found the death certificate. I told myself that I'd give you the two weeks of the Easter holiday and if it wasn't working, I'd break the two of you up.\"\n\nI swallowed.\n\n\"So I tried to find out as much as I could about you. But I think you knew that Jake,\" she added gently.\n\nI nodded.\n\n\"I talked to James' mother about you, came home unexpectedly a couple of times to try to catch you out, but the two of you just had your heads down revising. Rob and I thought you were the most boring teenage couple we'd ever known!\" she teased. Jenny was smiling now. \"And when your exam results came out, we knew the two of you really had been working all the time.\"\n\nI blushed.\n\nJenny paused again. \"But most importantly Amy was happy,\" she said slowly, thoughtfully. \"And to see her laugh and smile in a way she hadn't for, what, a year and a half - that was a joyous relief. I don't think I'll ever forget those photos we took before the prom.\"\n\nThere was a pause. Jenny's smile became a frown.\n\n\"And then you got attacked. She was so brave, so calm - she kept everything together the whole time you were in hospital. It was when you got home, that's when she cracked. I think she thought you'd be the same old Jake, except with a bandage on your arm. Seeing you with your concussion, that's what shocked her. \n\n\"And she blamed herself, only herself. For the first few weeks, she was convinced that you weren't getting better. And then she started to hear all those horrible rumours. She thought the Norton curse had struck again.\"\n\nJenny took a deep breath.\n\n\"Well, you know the rest Jake. The mental stuff was always going to take longer - you had your injuries to fight against, but Amy didn't. She felt powerless, she felt she couldn't talk to anyone, not even you.\"\n\n\"Oh no, really?\" I despaired. \"I'm so sorry.\"\n\n\"No Jake,\" she responded. \"You have nothing to apologise for. You were strong when she needed you to be strong.\"\n\nI shook my head. Jenny gave me a gentle smile.\n\n\"You've done everything right Jake, everything. You've behaved with such maturity all the way through and you've supported Amy so well. I'm your girlfriend's mother, I'm meant to be your biggest critic. No one could have asked anything more from you - not even me! I mean that.\"\n\n-\n\nI drove up to the top of the hill behind the farm, to give myself time to think and to process the afternoon's revelations.\n\nThe news about Ritchie had come as a bit of a shock, but as I walked along the ridge, I began to question whether things were as serious as they'd first seemed.\n\nAmy's big fear had been that Ritchie would only receive a short sentence and that he'd track the two of us down to exact his revenge. He'd been released on bail after the first attack and my girlfriend, certainly, had worried about coming face-to-face with him unexpectedly.\n\nHer worries had been largely relieved after the nightclub attack; Ritchie's breach of his bail conditions had resulted in him being placed on remand in a young offenders' institution until his trial. I'd fallen into the trap of thinking that his conviction, for both offences, was a foregone conclusion - that he'd do the sensible thing and plead 'guilty' to both.\n\nNow it was clear that the nightclub attack had been misreported by the media; the alleged attempted rape was in fact merely assault. That appeared to put the pressure back on me, as the stabbing after the prom was now the more serious charge. Hearing the talk of negotiation over the severity of the offences and the issue of plea bargains being discussed, had made the one thing I feared most - appearing as a witness - considerably more likely.\n\nMy thoughts were running away from me now. If Ritchie was considering a 'not guilty' plea, that had to mean the case against him was weaker than everyone had said. I could picture the scene in court - him in the dock, me in the witness box, the cross-examination twisting the facts to paint me as the aggressor. That confrontation would play to Ritchie's strengths, he loved an audience and the smarmy git could charm anyone - as soon as he opened his mouth, his acquittal would be a racing certainty...\n\nBut the professors at Oxford hadn't fallen for his bullshit - I had to believe the jury wouldn't either.\n\nI took some deep breaths, trying to calm myself. If the news about Ritchie's trial had been unwelcome, then the revelations about Amy's father had been truly earth shattering. I'd always suspected that her dad had died a long time ago, but the circumstances had come as a shock. How Jenny had coped, at such a young age, was simply beyond me. Her fledgling career had been well and truly derailed by her pregnancy and she'd sacrificed so much to bring up her daughter single-handedly. Clearly, she was capable of being so much more than a small-town lawyer.\n\nI felt I understood Amy far better. She'd reacted pretty badly to the attack after the prom and I'd felt at the time that her reactions had been fairly extreme - particularly when she'd run off to spend a week with her grandparents. Now I understood her fear that history was repeating itself and the blame that she felt (whether justified or not) that she might have lead Ritchie on while dating me. So much of her character now made sense.\n\nBut most importantly, the circumstances of Amy's conception and birth had put Ritchie's attack on me into full perspective. I'd recovered from the worst of my injuries in three weeks and had been fully healed after six. But Jenny Norton had been bringing Amy up for almost nineteen years - the rape had changed her life in ways that I could only begin to comprehend. Everyone had praised my bravery for fending off Ritchie's attack, but I couldn't hold a candle to Jenny's courage. No one could.\n\n-\n\nI crunched up the driveway, clutching Amy's presents. Grey clouds blanketed the September sky and there was a definite chill in the air. I rang the bell a little nervously. I could hear my girlfriend's footsteps inside the house, running down the stairs.\n\n\"Hello lovely!\" she called as she swung the door open and dragged me inside. She flung her arms around me and gave me a big kiss.\n\n\"Happy Birthday!\" I said, pulling her against me and nuzzling her hair.\n\n\"I'm just finishing packing,\" she apologised. \"But Mum's in the kitchen - she wants to give you a lecture on safe driving!\" She rolled her eyes, then leapt away, back up to her bedroom.\n\nI made my way down the hallway to the kitchen and opened the door.\n\n\"Ah hello Jake,\" said Jenny with a smile. \"The kettle's just boiled. Cup of tea?\"\n\n\"Yes please,\" I responded and sat as directed at the kitchen table, placing Amy's presents in front of me and awaiting the barrage of rules, instructions and conditions.\n\nJenny brought over two steaming mugs of tea and three cupcakes, one with a candle on top. She sat down opposite me. \n\n\"I promised the twins we'd have her main birthday cake on Sunday afternoon,\" she said, referring to Amy's eight-year-old stepbrothers, \"but I think we can have these now.\"\n\n\"They'll miss Amy when she goes to university,\" I said - more of a statement than a question.\n\n\"I don't think they really understand what it'll mean,\" smiled Jenny. \"But they'll be alright; I think they'll enjoy ruling the roost!\"\n\n\"Was she OK when you told her about Ritchie?\" I asked. I felt a bit uncomfortable asking about Amy behind her back, but I wanted to be sure that my girlfriend wasn't going to have a meltdown over the weekend.\n\n\"She was a bit unsettled - like you were,\" Jenny said, \"but she's alright now. She knows she's got to focus on getting ready to go to university and there'll be plenty of distractions once she gets there.\"\n\nI nodded. In eight days' time, Amy would be moving into her halls of residence. In fact, most of my school friends were heading off to uni the same weekend. The Cambridge term didn't start until the second week in October - I'd be the last to go. The town was going to feel very quiet.\n\n\"She doesn't know that I told you about her father,\" cautioned Jenny, as we heard Amy's footsteps on the stairs again. \"I'm sure she'll tell you when she's ready, but it won't be this weekend.\"\n\nAmy entered the kitchen, smiling broadly. She sat down next to me and kissed me lightly on the cheek. We sang to her and she blew out the candle.\n\n\"Happy birthday!\" I said again and slid the envelope and the brightly wrapped parcel across the table to her.\n\n\"Hmm, what should I open first?\" she asked in mock indecision, resting a finger on her bottom lip.\n\n\"Open the parcel,\" I suggested. I wanted to save her main present until last.\n\nAmy felt across the surface, trying to guess what was beneath. \"Interesting...\" she said slowly.\n\nShe neatly undid the paper and pulled out the photo frame. That had also been my Mum's suggestion. I'd originally planned a single photo of Amy and me in London (a copy the one I kept in my own bedroom at the farmhouse), but she'd persuaded me to give my girlfriend a multi-aperture frame with about half a dozen pictures taken over the course of the summer.\n\n\"Oh look, there's us in Trafalgar Square,\" she squealed delighted, \"and you with the twins playing football!\" \n\nThere were a couple of photos of her with horses, plus a few pastoral scenes of the countryside surrounding the farm. On Mum's advice I'd tried to pick images which weren't too 'Jake-heavy', but would still remind her of the happy times she'd spent with me.\n\nShe was showing her mum the photo frame excitedly.\n\n\"Yes, that's a lovely present,\" agreed Jenny, indulging her daughter's child-like delight.\n\nAmy turned her attention to the envelope. She could feel the memory stick in front of the card, but couldn't work out what is was. She smiled at me, intrigued. Then she tucked her finger under the flap and tore the envelope open. The USB drive clattered onto the kitchen table.\n\nMy girlfriend looked up at me expectantly. \"What's this?\" she asked.\n\n\"You'll have to plug it into your laptop,\" I replied with a secretive smile.\n\n\"Can I do that now?\" she asked, as if unsure whether the contents were safe for her mother.\n\n\"Yeah, you can if you like,\" I answered, \"or we can wait until we get back.\"\n\nAmy had leapt out of her seat and was running out of the door and up the stairs before I'd finished speaking. She returned seconds later with a brand-new computer. She unlocked the screen with her password, then plugged the drive into one of the USB ports. A prompt flashed up, asking if she wanted to import the files into the media library.\n\nMy girlfriend looked up at me for reassurance.\n\nI nodded. \"Click OK,\" I said.\n\nThere was a delay of a few seconds as the media player program opened and the opening chords of 'Wild Mountain Thyme' began to sound through the speakers.\n\nAmy looked up at me as the verse started.\n\n\"This is you?!\" she gasped in amazement.\n\nI nodded. She scrolled through the track list.\n\n\"And you recorded all of these?\"\n\n\"Yup, I did it on Wednesday, just for you.\"\n\nAmy flung her arms around me and kissed me on the cheek. Her mum was still sitting opposite us at the kitchen table; I felt my face reddening with embarrassment.\n\n\"Oh Jake,\" my girlfriend cried, \"that's so sweet of you. I can listen to you singing whenever I want now!\"\n\nI kissed her on the side of her head.\n\n\"You two ought to think about setting off,\" said Jenny smiling. \"You don't want to get caught in the traffic.\"\n\n-\n\nAmy's POV\n\nIt was two weeks since I had lost my virginity with Jake. In total we'd only had sex twice, both times in my bed over the bank holiday weekend when my family were away. Since then, it had been impossible for the two of us to find any private time together and the unwelcome arrival of my period in the first week of September, had dampened my enthusiasm for any sort of intimacy. \n\nThe irony was that Jake and I were spending more time together than ever before. My boyfriend had left his job at the Campsite to cover for Jackie's absence at the Stables and so I'd had to deal with the sight of him, wearing his tight jodhpurs, mostly stripped to the waist, pretty much all day, every day. I'd have given anything for a roll in the hay, but there was a constant flow of customers to the riding school, even as the season drew to a close.\n\nI found it difficult to talk to Jake about sex. I don't really know why - I was still a little shy about that sort of thing. I'd had a few hang ups about being naked in front of him - perhaps that came from growing up in a house with an unrelated adult male. I'd never felt confident enough to tell Jake when I was on my period, but I suspected that after six months of being together, he'd worked out the pattern.\n\nJake could be prudish too at times. I'd noticed when he was with his male school friends, he'd never join in if the banter turned to toilet humour and dick jokes - perhaps that was just when I was around, but Frankie had noticed the same thing. \n\nIt had taken a little over two hours to drive down to my uncle's holiday cottage in Dorset. Although Mum had let Jake take us in his car, she'd insisted that we stop for a mid-way break and that I text her when we finally arrived.\n\nThere was something troubling Jake, I could tell. On the journey down his conversation was slightly forced, his enthusiasm a little over-egged to cover his anxieties, but there were also long periods when he was silent. I let him concentrate on the road - this wasn't the time or the place for a deep-and-meaningful - but I suspected that the conformation of Ritchie's first Crown Court date, and the news about likely plea bargains, had unsettled him.\n\nJake cooked dinner for the two of us; he wanted to be on his feet for a bit after being cooped up in the car. I'd been given some pre-semester reading by my university and settled on the sofa in front of the fire, pretending to work, glancing up at regular intervals to watch him in the kitchen.\n\nMy boyfriend was becoming a very good cook. His mum had made it her task that summer to 'domesticate' him in preparation for life at Cambridge. Early shifts at the Campsite allowed him to be home by three in the afternoon and the deal was that he'd then cook the evening meal. (If he was working the late or overnight shifts then he'd miss supper anyway.) There was an open invitation for me to join his family, which I did about once a week.\n\nOf course, he'd mastered the staples of British home cooking in a matter of weeks - pies, crumbles, pasta dishes - the usual fare. But that wasn't good enough for Jake and he'd delved further into more exotic and elaborate creations, almost to the point of obsession. Whenever I took a sneaky look at the browsing history on his phone, there'd be pages of recipes that he'd been looking at. I was coming to realise that, secretly, Jake liked the chance to show off a little; he was always modest in conversation, but deep down, he enjoyed performing, whether in a play, with his guitar or in the kitchen. ",
        "I glanced up from my book. Jake was setting out the glasses and cutlery on the dining table between the kitchen and living areas. He had his back to me. My eyes alighted on his butt; even through his jeans you could tell he had a fantastic bottom. Pert, firm, muscular. I shivered in anticipation. I was so lucky.\n\nI don't remember the first time I saw Jake. But certainly, by the end of my first term at the school, I was aware of a handsome blond, about six feet tall, who carried his guitar on his back. He was one of the small group of students who lived in exile in the science block; I never saw him in lessons. For a long time, I wasn't even sure if he was in my year group - maybe I thought he was in the Upper Sixth. In any event I assumed he was already spoken for; Lauren seemingly never left his side.\n\nMaybe it wasn't until Mr Lane put us together at the last minute for the Easter concert, that I actually spoke to him. I remember being struck by the sound of his speaking voice - a soft baritone that conveyed wisdom and authority in equal measure. \n\nThe following term, I saw Jake more frequently: The school put on weekly interview preparation classes for the students who were applying to Oxford or Cambridge. There were three of us - me, Jake and, of course, Ritchie. We'd meet with the headteacher for an hour to talk about current affairs, normally with a few newspaper articles to start us off.\n\nPerhaps I should have wised up to Ritchie's character at that point, but I was still a little star-struck by the Head Boy's presence. He was brimming with confidence, born of a certainty that he was destined for one of the country's top universities. He had a chummy, smirking rapport with the headteacher, which he'd exploit to great effect - often to take over or pour scorn on a point that Jake was making. It was a routine honed to perfection in the confines of the school classroom, but in a professor's study in Oxford, it had fallen flat. Without Jake's ideas to steal or shoot down, Ritchie was simply lost - the empty vessel that made the greatest sound, as Shakespeare would have put it.\n\nJake participated in those classes as well as he could, despite Ritchie's interruptions and grandstanding. He'd speak slowly, thinking through the various aspects of an issue before coming to a position. There was a methodical character to his reasoning, which I think impressed his interviewers at Cambridge - they weren't looking for someone who'd prattle off a simplistic, one-dimensional answer and then sit back waiting for applause.\n\nI shuddered. Why was I thinking about Ritchie on my 19th birthday?\n\nThere was the sound of a cork popping. I glanced up from my book. Jake was standing with his back to me, pouring out the wine. He picked up a box of matches and lit the candles on the dining room table. \n\nHe turned and smiled. \"Dinner is served,\" he said quietly.\n\n-\n\nAfter the meal, we settled down to watch a DVD on my new laptop, the one I'd received as a birthday present from Mum. We'd watched Am\u00e9lie together on our first visit to Dorset but, although Jake seemed to enjoy it, he really wasn't into romcoms. I'd been at a bit of a loss as to what to choose this time, until Rob had suggested Rear Window as a good introduction to Alfred Hitchcock. That was a great success and the two of us snuggled together on the sofa as the movie played on the small screen.\n\nAfter the film was over, I cleared away the things from dinner and went upstairs to prepare for the night to come.\n\nWhen I returned, Jake was sitting on the goatskin rug in front of the fireplace. He'd put a couple more logs into the grate and was watching as they caught light. He didn't react when I came down the stairs behind him, but just sat there staring into the flames.\n\nI knelt down next to him and put my head on his shoulder.\n\n\"What's wrong?\" I asked gently. \"Is it Ritchie?\"\n\nJake kissed me on the side of my head and the two of us stared for a few minutes at the burning logs.\n\n\"I don't know,\" he said slowly. \"I suppose it's lots of things.\"\n\nI stroked my hand across his back and gave a low murmur of encouragement.\n\n\"But yeah, now we've got the date of the hearing, maybe it's all suddenly got real.\"\n\nThere was a hiss and a crackle as one of the logs shifted slightly in the grate.\n\n\"Everyone thinks I'm a hero for fighting him off,\" he continued, more than a hint of frustration in his voice. \"Even your mum.\" He turned to me, an earnest look in his eyes. \"But I'm not; I'm really not.\" He shook his head slowly.\n\n\"If I'd have been a hero, I'd have told the teachers about the scrap I had with him in the bathroom and taken you straight home. We should never have stayed at the prom. I'm sorry Amy, I let you down. I put your life in danger.\"\n\nI shook my head. \"But you didn't know he was going to do it,\" I said. \"Nothing you did made Ritchie pick up that knife. That was his choice - that's why he's being tried.\"\n\nHe shook his head.\n\n\"But if Billy hadn't been there, who knows what Ritchie would have done with that broken glass bottle in his hands. I was out cold on the ground - I couldn't have protected you. I let you down. I'm sorry.\" he said miserably.\n\nI shook my head. Jake hadn't talked like this before. I was a little shocked - he'd been keeping this inside for all this time.\n\n\"But Billy was there,\" I said quietly.\n\n\"That's not the point,\" he snapped, exasperated.\n\n\"It's exactly the point,\" I retorted.\n\nI got up and walked over to the chair where his jacket was hanging. I fished in the pocket for his phone and unlocked the screen. I made my way back to the fireplace, scrolling through the photo galleries.\n\nI found the picture I was looking for: two boys with blond hair, dressed in tuxedos, excited and ready for the prom, arms on each other's shoulders, smiling together as if the best of friends - Jake and Billy.\n\n\"I know you asked Billy for this photo,\" I said, presenting the screen to him. \"I know you did. You told him that you'd look back on it when you were old men and wonder why you'd hated each other.\"\n\nTears were welling up in Jake's eyes.\n\n\"This is the moment, Jake, that your enemy became your friend,\" I continued, more softly this time. \"This is the moment you made sure that Billy ran after Ritchie. This is the moment you made sure I wasn't left on my own. This is the moment Jake, that you protected me.\"\n\nI flung my arms around him, embracing him. He buried his head against my shoulder as he fought against his tears. He'd been my rock for the past six months - he'd shown me the person I really was; now I was holding the mirror up for him.\n\nA long silence passed between us, punctuated only by the crackling of the fire.\n\n\"It's such a waste,\" he said quietly. \"Ritchie's ruined his life for what - two minutes of anger. He's a bright guy, he deserves his time at university - a good university. He'll be inside while we're having the best years of our lives. He's thrown all that away, all of it - for nothing.\"\n\nI turned and stroked my boyfriend's cheek gently, wiping away the tears. Ritchie would have loved to think he could get under Jake's skin from the comfort his cell. He'd have revelled in the knowledge that Jake felt hatred and anger towards him - that there'd still be a score to settle, years down the line.\n\nBut Jake didn't feel any of that at all: No anger, no hatred, not even fear. \n\nPity was the only emotion Jake felt for Ritchie. Whether he knew it or not, that was the greatest insult he could pay him. His attacker's defeat was absolute - he had no way back into Jake's head, he never had. That was Jake's victory.\n\nMy Jake. My hero.\n\nI stared deep into his crystal-blue eyes. My heart surged with love as I held his hands in mine. I wanted to honour him, to be united with him, to give my body to him, more than ever.\n\nI put my arms around him and pulled his chest against mine, holding him close as he nuzzled my hair. I felt him gently stroke my back through the soft cashmere of my sweater, as the shadows around us danced in the firelight. I felt so secure in his embrace. \n\nI thought back to the first time Jake had held me in his arms. We'd been at the party at James' house and I'd run into the kitchen to get away from Ritchie. I'd been frightened, so frightened - scared that the same thing that'd happened to Mum would happen to me. But at the very moment I needed a protector, Jake had appeared from nowhere - ready to defend me, ready to comfort me. Within seconds, he'd sent Ritchie packing and then he'd held me, safe, as I sobbed quietly into his chest, waves of relief washing over me.\n\nMy Jake. My hero.\n\nI pushed back a little, watching the soft glow of the fire shining in his eyes. I kissed him lightly on the lips, then pressed against him more firmly.\n\nI felt him recoil slightly in surprise, but he responded willingly, letting his tongue play against mine. The heat was rising in my core; I moaned into his mouth, betraying my passion to him.\n\nBlindly my fingers searched for the hem of his sweater. I gripped the smooth cotton of his shirt and pulled it upwards, freeing it from his trousers. I ran my hands under the fabric, exploring the cool firmness of his skin.\n\nI broke the kiss and pressed my forehead against his, praying that he wouldn't push me away, fearing he'd protest that he wasn't in the mood.\n\nBut to my relief he didn't.\n\nI held my fingers against his stomach, feeling the ridges of his muscles and the line of hairs leading downwards from his navel. How I longed to follow that trail, to dip below his waistband, to take hold of him.\n\nI pushed away from him and our eyes met. I recognised the look he was giving me, it was the look he gave when he wasn't sure what I wanted - confused, slightly anxious even - wanting me to take the lead, however briefly, to show him what I needed him to do.\n\nHe stiffened a little as I removed my hands and the tiniest flicker of disappointment flitted across his face. But I grabbed the hem of his sweater and slid it upwards, trying not to catch the buttons of the garment beneath. He reached down to help me pull it over his head.\n\nNow the shirt. It was the same one he'd worn on the night we lost our virginities. The cuffs were fiddly to unfasten, I remembered - nerves had made the task so much harder. I moved down the line of buttons on the front, releasing each one in turn, revealing his torso methodically, unwrapping my real birthday present!\n\nI slipped my hands across his chest, raking my fingers through his little wispy hairs, then eased the shirt from his shoulders. I pressed my head against his pecs, inhaling his scent. Magnificent. Heavenly. Intoxicating. \n\nI held my balance as I rolled back a little and swung my legs either side of his - now I was sitting, not kneeling.\n\nI felt him delicately kiss my forehead, almost in encouragement, as if he knew what I was about to do. I reached upwards, holding both arms above my head and looked again, deep into his eyes.\n\n\"Please,\" I whispered.\n\nHe obeyed and lifted the hems of my sweater and blouse, pulling them together over my head. Cradling my face in his hands, he held his fingertips against my jawline as we kissed.\n\nI leaned backwards, lowering my body to the rug, sinking my shoulders into the soft fur of the goatskin. Jake was still kneeling upright, alert between my legs. His bronzed skin glowed with a radiance that I hadn't seen before and the silky, golden threads on his chest shimmered in the light of the fire. \n\nMy mouth was dry with anticipation.\n\nI tried to picture the image I presented to him: Lying below him, my face framed by the dark curls of my hair, my upper body naked except for the peach satin bra I'd bought for only him to see.\n\nI looked upwards. I knew that expression so well - the lopsided half-smile, his eyes glazed, lust painted all over his face.\n\nI reached up with my right arm, took his hand and gently pulled him downwards to lie on top of me. Jake's face moved over mine and he looked down at me. He stroked a few stray curls from my face.\n\n\"You're so precious to me Amy,\" he whispered. \"I love you so much.\"\n\nI reached up to wrap my legs around his bottom, pulling his crotch against mine. He was so hard! I gasped in delight. His smile widened.\n\nAgain, I was transported back in time: Easter Saturday - the first time we'd made out properly. Our relationship was barely a week old, but I'd seen Jake every day. He'd sat opposite me in our dining room, working diligently away on his exam revision. Six feet of blond magnificence, across the table from me - a forbidden fruit - the ultimate torture. I'd longed to explore his body, to kiss him, to caress him, but I couldn't. My family were always in the house with us; Mum was trying to catch us out; I didn't dare do anything.\n\nAll week, the monotony of schoolwork had stoked the tension within me. I'd lain awake on the Friday night, gently stroking myself to orgasm, imaging Jake's firm body on top of me, his hardness against my sex, his skin against mine. I'd cum so hard, so, so hard. I wanted him, I needed him.\n\nI'd woken on the Saturday morning, hornier than ever before. Finally, we'd be alone in the house together!\n\nBut of course, it had been nearly impossible to get my chivalrous boyfriend upstairs. It had taken three goes before he finally crossed the threshold to my room. I'd jumped on him, had ripped his top from him and then let him do the same to me. I'd asked to keep my bra on, quite why I don't know, and then he'd lain down on top of me. We'd ground against each other - it hadn't taken much, I'd been on the edge all week - he'd made me cum for the first time - held me as the waves of pleasure crashed through me.\n\nThe fire crackled, waking me from my memories. I looked up into my boyfriend's eyes.\n\n\"Please Jake,\" I whispered. \"Make love to me.\"\n\nHe glanced across the room, looking towards the stairs, as if deciding how best to carry me to the bedroom.\n\nI placed a hand on his upper arm.\n\n\"Here Jake, please,\" I whispered, \"in front of the fire.\"\n\nHis eyes widened and an excited smile crept cross his face. I felt the soft touch of his lips on mine, then down my neck to my collarbone. He kissed across the tops of my satin-clad breasts and down the little valley between them. I hoped he'd notice the clasp was at the front, I hadn't worn a bra like that before.\n\nMore kisses, across my abdomen. He looked up at me, his eyes shining.\n\n\"You're getting a six pack!\" he teased. \"It's all that riding!\"\n\nI smiled back but didn't answer. There was only one thing I'd be riding this weekend and that was Jake.\n\nHe kissed across the waistband of my jeans, then, after a quick glance to check it was OK, he unfastened the button and cautiously slid the zip downwards. He shuffled back on his knees, giving himself space to ease my trousers from me, revealing first the peach satin panties that matched my bra, then the knee-length white stockings that I'd bought at the same time. \n\nJake's mouth hung open; his eyes wide with delight. He was mute, dumbstruck by the vision before him, bewitched by the sight of my body below him. He was under my spell - that was so hot; I nearly came there and then.\n\nHe searched for words, struggling to find his voice.\n\n\"Fuck Amy, you are so beautiful, wow, just amazing!\" he gabbled, delirious with lust.\n\nI lifted my legs to place my feet on his abs. I could see the outline of his cock slung diagonally towards his hip, imprisoned by the denim. That had to hurt - the poor boy was straining for release. I ran one of my big toes along his bulge, testing his length. I always marvelled at his size, even now after six months.\n\n\"Fuck Amy,\" he groaned, closing his eyes and leaning back a little.\n\nEmboldened, I gripped his cock between my feet and rubbed across the surface of his jeans. He caught one of my ankles and lifted my foot to his face. He kissed the end of my toes and the the sole of my stocking.\n\nI let him push my legs either side of his. He moved forward a little, catching my waist and pulling my crotch upwards to meet his; I ground against him, my shoulders still resting on the rug, straining to rub my mound against his hardness, gyrating my hips like a slutty pole dancer. I was shocking myself with my own behaviour; nice girls didn't do things like that. But I didn't want to be a nice girl anymore, I wanted to be Jake's bitch!\n\n\"Fuck Amy!\" he cried, \"that's so fucking hot you little minx!\"\n\nHe bent forwards again to kiss me, then lay down on top of me again. I threw my arms around him and gripped his hips more tightly with my legs. He pressed against me again, harder this time, grinding against my furnace.\n\n\"Amy,\" he whispered, half-catching his breath. \"I'm gonna flip us over.\"\n\nNow I was on top of him, rocking my hips, rubbing my sex against the monster hidden in his jeans. We were both hot and horny, both breathing hard. Our skin glistened with perspiration as the flames danced in the grate beside us.\n\nMy fingers scrabbled for the brass button on his waistband. I found it and ripped the fastening apart. I released the zip, then stood as I removed his trousers and socks with a flourish.\n\nMy boyfriend lay beneath me, naked except for his white boxer briefs, the embodiment of divine beauty, a demi-god ready to unleash his power on me. My eyes alighted on his delicious cock, ready to burst from his underwear. A little drop of pre-cum had seeped onto the fabric - I licked my lips. My heart pounded in my chest and my nipples throbbed in anguished anticipation. \n\nIt took all my self-control not to leap on him and ravish him as he lay there. But I couldn't -we needed to be protected.\n\nI bent down and kissed him. \"I need to go upstairs,\" I whispered. \"I'll come straight back. I promise.\"\n\nI ripped my eyes away from my man and ran up to the bathroom to grab a towel; then, to the bedroom, to retrieve two condoms and a bottle of lube from my bag. \n\nI flew back down the stairs to rejoin him. Jake was kneeling with his back to me, stoking the fire. I picked up a cushion from the sofa and crouched down behind him, wrapping my arms around his chest. We watched together in silence as the fresh wood caught alight, the flames licking greedily at the new logs. \n\n\"Time to fuck the birthday girl!\" I whispered in his ear.\n\nI pulled him to his feet, manoeuvring him into the centre of the rug. Proudly I stood before him, watching as he feasted his eyes on my body. Slowly he reached forwards with both hands and undid the clasp at the front of my bra. I purred with delight as the cups fell open, exposing my breasts to him for the first time that evening.\n\nHe swept his palms across my pert mounds, then drew his hands upwards to slide the loose straps from my shoulders. He bent forwards to kiss me, brushing the underside of my jaw with his fingertips, spreading that warm, tingling sensation throughout my body. He was such a good kisser - the way he let his tongue dance with mine - simply magical - sometimes softer, sometimes firmer, swirling, caressing, always tender. \n\nJake picked up the cushion from where it was resting against the coffee table and placed it on the rug in front of me. Then, resting his hands lightly against my hips, he knelt to worship my breasts. \n\nInstinctively I moved my hand to cradle his head, sinking my fingers into his rich, blond curls. How I loved his hair, the way it would move and shimmer as he laughed. I closed my eyes as I felt his tongue sliding across my nipple.\n\nI loved the way that Jake kissed my breasts. The two of us had spied on his cousin and his best friend making out in one of the barns back in the spring. Danny's technique (if that's what you could call it) could not have been more different; he'd slobbered over Lauren's ample bust with the grace of a thirsty bloodhound, noisily coating her nipples with enough saliva to sink the Titanic.",
        "But Jake was a musician, and a scientist. He knew that the smallest movements of his mouth and tongue, so precisely directed, would resonate the pleasure within me and topple me headlong into the throes of orgasm. \n\nHe'd soothe my aching buds with his spittle, lightly blowing across them with the sensitivity of a flautist. He'd stimulate my tips with his tongue, tapping delicately on the sides like a percussionist at the xylophone, flicking across each tip pizzicato, as if plucking the strings of a harp. Then those broad allegro strokes around the rim, filling me with a rich heat, with the melodic lustre of a cello. He'd add the lightest, most exquisite pain, taking my nipples so delicately between his teeth - gentle pressure like the high-pitched ring of a bell, cutting through the harmonic complexity of his orchestra, sending sparks of delight through my spine to every fibre of my body. Then with the power of the greatest maestro, he'd crescendo his music through me, until finally at the climax, I'd shudder with the crashing pleasure of orgasm.\n\nAnd he hadn't even touched my knickers yet.\n\nI fought for breath and opened my eyes.\n\nJake was still kneeling beneath me - smiling up at me, smug as a nine-year-old spelling champion. He planted a kiss on my belly button.\n\nI wanted to punch him so much.\n\nHe kissed me again, a little lower this time.\n\n\"Would you like me to take your panties off?\" he asked in a low, seductive voice.\n\nI really, really wanted to punch him.\n\nBut it was my time to play my part - to be his innocent ing\u00e9nue. I brought a finger to my bottom lip and nodded demurely.\n\nHe kissed down my stomach and across the top edge of my knickers. I felt the gentle warmth of his breath caressing my skin. He knelt back and feasted his eyes on my satin-clad sex.\n\n\"You're so beautiful,\" he marvelled.\n\nI buried my hands again in his hair as he nuzzled against me. His cool lips brushed against the inside of my thighs, tantalisingly close, but yet so far from my centre. I longed for him to slide my knickers down my hips, to reveal my most delicate flower. I was so wet for him, dripping with sweet nectar. Surely, he could smell the perfume of my arousal.\n\nWith a final, tender kiss on the little bow on the waistband, he hooked his fingers behind the elastic and eased my panties over my hips.\n\nHe gasped. \n\n\"You're beautiful!\" he whispered in wonderment.\n\nHe leant forwards and placed a gentle kiss on the dark hair that covered my mons. How l longed for the touch of his tongue against my lips.\n\nJake helped me to step out of my knickers, then turned to pull the coffee table towards us.\n\n\"Can you lift your leg up?\" he asked.\n\nI nodded and rested my right foot on the smooth wooden surface.\n\nJake planted a row of kisses from the top of my white stocking along the inside of my thigh. He looked up at me again, he could see the anxiety in my eyes; I felt a little exposed above him. \n\n\"It's OK,\" he said reassuringly, \"I won't let you fall; hold onto my hair.\"\n\nI nodded shyly and gripped his blond curls. I felt him take my slender hips in his powerful hands and a shiver ran through me as he blew across the moistened lips of my sex. He reached forwards to plant a kiss on my mons. My eyes closed as he parted my dripping labia, licking repeatedly upwards to my clitoris. I could hear the sounds of his tongue, spreading my wetness as he lapped across the entrance to my channel. I moaned in frustration, trying to capture his tongue and suck it inside me. He took my lips between his and pulled gently, sending sparks shooting through me. I gasped with pleasure.\n\nI began to buck my hips, trying to spread my juices all over his face as he presented his tongue to me. I was doing all the work now, pulling his head against my sex, directing him to where I needed him to go. I could feel the heat rising within me. Not yet, not yet! I fought to resist my climax.\n\nI ripped him away from me and pulled him to his feet. I kissed him frantically, crushing his firm body against mine. His face glistened with my arousal; I could taste myself on his lips. Now I needed to taste him.\n\n\"I want you,\" I said simply.\n\nI dropped to my knees. There was his magnificence, betrayed by the folds of his boxer briefs, straining to escape. He was fully turned on, I could tell - that little darkened spot of fabric five times larger than before. \n\nI kissed the soft cloth, inhaling his scent, revelling in the musky perfume of his masculinity. How I loved nuzzling against his hardness. I kissed him again then eased the waistband from his hips.\n\nHis cock sprang out, angry and alert - like a tiger, shut in its cage for too long. His foreskin was pulled fully down; his wrathful head, red and raw. I kissed him meekly, trying to comfort him, to make amends for the confinement that he'd endured. Gently I slid my lips over his tip, coating his fury with my saliva, trying to soothe his rage. \n\nI loved the taste of Jake's cock, it was such a turn on. I'd feel the wetness swell between my legs as I took him into my mouth. I savoured his salty sweetness, infused with that hint of metallic bitterness. I murmured my appreciation.\n\nHis hips gave an involuntary twitch, pushing his rod deeper. I loved that - feeling the power of his meat against my throat!\n\nI looked up at him, his dick still filling my mouth. His eyes were apologetic - that had been an accident, he hadn't intended it.\n\n\"I'm sorry,\" he muttered embarrassed. \"I didn't mean to do that.\"\n\nI pulled off him. \"No Jake,\" I said. \"Do it again, I really like it! Please do it again!\"\n\nI grabbed his hips and pulled him back into my mouth, holding my head still, pleading with for him.\n\nHe was gentle, I'd have liked him a little rougher, but we'd work on that, we were getting to know each other's bodies, what we liked, how to communicate. We were only just getting started, we had all the time to explore - at least I hoped we did. All I needed in that moment was to feel his shaft filling my mouth, as his bulbous tip prodded insistently at my throat.\n\nI choked a little and Jake pulled away from me in concern. I felt his cock leaving my mouth, and I forced my head forward, trying to take as much of him inside me I as could. The room reverberated with the sounds of my retching and my eyes began to water. \n\nI pulled off him, gasping for breath, spittle hanging down from my mouth. I looked up at him in triumph. He bent down and kissed me deeply. I could taste myself on him and he could taste himself on me. I shivered with excitement!\n\nNow I felt the insistent heat of my core calling, demanding to claim what my mouth had relinquished. I fumbled beside me for the condoms. He straightened up again as I tore a packet open. Proudly he stood before me, offering his cock to me, letting me unroll the sheath over his erection. I liked the way he did that, let me feel in control of making us both protected. I placed the cushion and the towel behind me on the rug, then slicked up his shaft with some lube.\n\nI lay back onto the goatskin, feeling the soft fur against my back, caressing my shoulders. I looked up, watching Jake watching me. \n\nThat towering figure of blond magnificence was standing over me; his manhood alert and ready, jutting forwards from the dirty-blond curls at its base. Unbidden, my hand snaked down to my mons, the vermillion petals of my sex throbbing in expectation.\n\nHe knelt between my legs, his erection bobbing in front of me. I reached up to catch it as he lowered his body to mine, holding him as my aching nipples nestled in the soft fuzz of his chest hair. He stroked a stray curl away from my face and kissed me tenderly.\n\n\"I love you Amy,\" he said quietly, sincerely.\n\nI rubbed his latex-clad penis against my lips, then set him against my opening, bracing myself for the pain of his entry. I looked deep into his eyes and our souls connected. \n\nGingerly he pushed forwards and my lips parted willingly before him - no pinching, no stinging, no discomfort. My face broke into the broadest smile and I felt my eyes shining up at him. I released his cock from my hand.\n\n\"You OK?\" he asked.\n\nI nodded. \"That feels really nice, really nice! I can feel you filling me up.\" I kissed him again on the lips.\n\nThere's always something magical when Jake's enters me - that's the bit I look forward to whenever we have sex. It's the part when I kiss him into me with my lips and the two of us unite as he stretches me open; it's not just my body, he's rediscovering the parts of my soul that I keep only for him.\n\nDon't get me wrong, he has the stamina of a thoroughbred and he'll fuck me with a passion that leaves me shattered and spent. But the blazing white heat of orgasm could not be more removed from the cool intensity of the first entry: For me, it's our special moment, when gentle Jake is at his most tender, when I can look into his crystal-blue eyes and see the depth of his love for me.\n\nI felt his balls coming to rest against me as his cock reached all the way inside. I wrapped my arms and legs around him, tightly clinging to him, willing him never to leave. He caressed my hair tenderly and whispered his love for me. I felt the power of his shoulder blades under my fingers - I was safe and secure in Jake's embrace.\n\nI weakened my grip on him and he pushed himself upwards, extending his arms, so the two of us could look to where we were joined. His dirty-blond forest nestled against the short dark hairs on my mons, hiding completely the ring of rolled latex that encircled his cock. \n\nI took a sharp intake of breath as Jake's hips began to withdraw; his condom-covered shaft emerged from me, slick with my juices.\n\n\"That looks amazing!\" I said.\n\nHe began to push in again, stoking the fire that would build me to orgasm. I looked up at his face. He could see my eyes filling with tears.\n\n\"Are you OK?\" he asked anxiously. \"Am I hurting you? Should I stop?\"\n\nI shook my head. \"No, don't you dare!\" I replied. \"This is so fantastic; I'm just so happy; it feels so good.\"\n\n\"But you're crying!\" he replied, still concerned and a little baffled.\n\n\"They're tears of joy, Jake,\" I said. \"This is so perfect, this is what I imagined tonight would be like. I'm so lucky to be with you. I really am!\"\n\nHis eyes were beginning to water too now; he could be sentimental too at times. He bent down and kissed me on the lips. I watched as his eyes roamed over my breasts.\n\n\"You're beautiful,\" he whispered.\n\n\"It's all for you,\" I murmured. \"Only for you.\"\n\nHe withdrew again and thrust forwards, a little more firmly this time, his eyes always watching mine, reading my pleasure as he slid in and out of me. I moaned to encourage him onwards and he began to pick up speed.\n\nI felt him take my hands and pin them above my head - he'd done that the last time - I loved that, loved the way he showed his dominance over me, that he was in charge and in control.\n\n\"Yuss,\" I hissed each time he pounded into me, grunting and squealing as his balls slapped against my thighs. \"That feels so-so-so good.\"\n\nEvery movement of his steel within me spun ripples of excitement throughout my body, pumping the tide of my pleasure ever higher. \n\nHarder. Faster. Deeper.\n\nI reached up and pulled him back down against me, squeezing my nipples against his torso. My breasts shook as he fucked me relentlessly. I pressed my forehead against his, grinding my teeth as I prepared to plunge over the edge.\n\n\"I'm getting close, I'm getting close,\" I growled.\n\n\"Yeah!\" he shouted, \"you gonna cum for me?\" \n\n\"Yeah, yeah, yeah!\" I squealed.\n\n\"Cum for me!\" he commanded. \"Fucking cum for me.\"\n\nThe dam broke and my climax burst through me. I screamed, expelling the air from my lungs at full velocity. I arched my back against him, gripping him tightly inside. My legs caught his hips, pulling him ever more deeply into me. I rode the wave of my pleasure, aftershocks rippling through me as I spasmed around his hardness.\n\nHe held me. Held me tightly, tenderly. Comforted me as I lay beneath him, fighting for breath, floating back to earth, basking in the afterglow.\n\nI opened my eyes again. He was looking down at me, with that ridiculous smile he wore whenever he'd made me cum and he hadn't. That punchable smugness made me so angry; I needed revenge - I'd get my revenge; now it was my turn to conquer him.\n\n\"Jake,\" I asked in a small voice. \"Can I go on top?\"\n\nHis eyes widened and he kissed me tenderly on the lips. Wordlessly he pushed up and stood before me, offering his hand to help me to my feet, chivalrous to the last.\n\nAgain we kissed, our tongues writhing in each other's mouths. I could feel his condom-clad shaft, slick with lube and my juices, digging insistently against my stomach. My hands gripped his muscular buttocks and pulled him closer - such a fantastic bottom. A shock of electricity ran through me.\n\nHe lay down on the rug and I stood over him, legs astride his. He held his cock at the base, supporting it with his finger and thumb so it pointed up at me, calling me, calling me downwards. With my right hand I began to make small circles over my mons, as my eyes swept over the man beneath me, burning his image into my memory.\n\nI smeared a little more lube on his latex-covered rod.\n\n\"Jake,\" I said nervously. \"Let me do this, please don't push. I need to do this at my speed.\"\n\nHe nodded and smiled as I crouched over him and rubbed his head against my gaping sex. It must have taken all his self-control not to thrust up into me.\n\nI took a deep breath. This was going to hurt, I was sure. Maybe it'd take a few goes to get the angle right. It was hard to see what I was doing and keep my balance.\n\nI felt his tip against my opening. Tentatively, I sank lower, but as I did, I twisted my leg, losing my footing. I plunged straight down his shaft. I gave a little yelp of surprise as my buttocks pressed sharply against his thighs.\n\n\"Are you OK?\" he asked, extending his arms towards me, a look of concern on his face.\n\n\"Yuh,\" I gasped, breathlessly - a little winded. \"Just didn't quite expect that. I didn't think you'd go in all at once! I'm alright, I just need to get used to you.\"\n\nHe rested his hands on my thighs and gently stroked my skin.\n\nIt didn't hurt, but it did feel different. I wasn't sure why. Maybe it was just the speed at which I'd impaled myself - I hadn't meant to do that - it had forced all the air from my lungs. But I'd taken him deep as well, deeper than before.\n\nI leaned forwards a little and placed my palms on Jake's chest, trying to transfer as much of my weight away from my sex. That was better, less uncomfortable - changing the angle helped. He held my gaze, his eyes wanting to reassure me.\n\nI rocked forwards a little more - that felt good. His cock was hardly moving inside me, but I could press my clit against his pelvis. I rocked a little more; a low, appreciative moan emanated from my chest.\n\n\"That feels good,\" I whispered, perhaps a little too tentatively.\n\n\"Yeah, you like that?\" he asked encouragingly.\n\nI nodded. \"Is that good for you?\"\n\nHe smiled. \"Perfect.\"\n\nI leant forwards even further to kiss him on the lips. That felt even better - his cock was straighter, the pressure inside me was more even. I shifted my knees back a little. Ah ha! That was it.\n\nJake's hands rested reassuringly on my back. I pressed my forehead against his and began to rock again. Slow gentle movements, a couple of centimetres at the most. I closed my eyes, focusing on the new sensation; it was different being on top - a nice kind of different; a warm heat began to spread through me.\n\nJake cradled my head between his hands and kissed me tenderly on the lips. How he was managing to keep his hips on the floor and not to thrust up into me, I had no idea; his self-control was astonishing. \n\nMy eyes flashed open and met his again. Gone was the concern he'd shown when I'd first jumped on top of him. He could see I was enjoying it and that was turning him on too.\n\nI pushed up a little, not fully upright - I was still taking some of my weight on my hands. I could feel the pressure shift within me, the way he was rubbing inside me was different. That gave me an idea - maybe if he could press into me, I could control the angle more easily.\n\n\"Jake,\" I gasped, \"Can you push up a bit - with your hips?\"\n\nA smile swept across his face; this was what he'd been wanting.\n\nSlowly, cautiously he began to thrust - the smallest movements, matching my pace. His eyes scanned mine, searching for any signs of discomfort, ready to stop if he thought he was hurting me.\n\nI craned my neck downwards, looking to see where we were joined. My boyfriend's fat cock, swathed in its latex sheath, was slick with my juices. It glistened in the firelight. I felt his position shift a little as he propped himself on his elbows. He was watching, he was enjoying it too. So hot! I shuddered with pleasure.\n\nI flung myself backwards, tossing my hair behind me, driving myself down onto Jake's spike. I moaned as he worked ever deeper into me. There was a change in our tempo now, I felt him picking up speed. \"Yeah, yeah, yeah,\" I grunted as I urged him on.\n\nJake's eyes flicked upwards and he gazed hungrily at my breasts. Through the haze of my pleasure, I saw him collect some spittle from his mouth, then reach out to caress my nipples with the cool wetness.\n\n\"Uuuhhhh,\" I moaned. \"That feels so good.\"\n\n\"Yeah?\" he cried. \"You like it when I touch your breasts?\"\n\nI nodded, unable to speak through the intensity of our coupling.\n\n\"Yeah, let me hear you say it!\" he persisted, pinching my nipples between his fingers. \"You like it when I touch your breasts?\"\n\n\"Yeah, I fucking love it,\" I shouted.\n\n\"And you like it when I fuck you with my big hard cock?\" he demanded.\n\nI flung myself down onto his chest, forcing my forehead against his. Aggression and lust boiled through my gritted teeth.\n\n\"Yeah Jake,\" I growled, \"I fucking love it. I fucking love it when you fuck me with your big fat fucking cock!\"\n\nMy mouth attacked his and our tongues wrestled as I gripped his hair tightly. The sounds of Jake's hammering reverberated around us, the heady smell of passionate sex filling the room. \n\nWith rash impulsiveness, I threw my body backwards again, clutching my breasts as they jumped with the intensity of Jake's thrusts. That felt so good, I was getting the hang of this.\n\n\"Harder Jake, harder!\" I barked.\n\nBeneath me my boyfriend's body gleamed, shining with sweat in the glow of the fire like a well-oiled machine, his muscles pumping with the rhythm of an industrial powerhouse. He was gripping my hips firmly as he pushed upwards, mesmerised by the sight of his cock sliding in and out of me.\n\nI had a thought. I leaned back still further, grabbing his shins with my hands, exposing the full redness of my flower to him. I felt the pressure increasing at the front of my channel as I squeezed him against me. Wow - exhilarating!\n\nJake was enjoying it too. I could see his eyes transfixed by my breasts, which danced in time with his exertions. He'd slowed his pace quite a bit, it was harder for him to push with his penis at this angle.\n\n\"Let me,\" I gasped and I swung my legs round, placing my stocking-clad feet flat on the rug. Now I could slide up and down, fucking myself on his pole. I rocked my hips lazily - that was the best way of doing it - I'd need to practise this on my own.\n\nI looked down at Jake's face, framed by my breasts. His eyes were out on stalks. The poor boy had never imagined anything like this in his wildest dreams! This was some fuck I was giving him for my birthday.\n\nWe'd both been fighting for breath, but the slower pace was giving us both the space we needed to prepare for the final race to the climax. There was a fire in Jake's eyes, a hunger for what was to come. He knew what he had to do to drive us both to ecstasy.",
        "I shifted my position again, placing my hands on his chest once more, setting my hips so that he could thrust vertically up into me. I smiled down at my magnificent man.\n\n\"Fuck me!\" I commanded him.\n\nHe smiled and obeyed, slowly at first, building his rhythm, accelerating with cautious determination.\n\n\"Go, go, go!\" I urged him on. I rocked my hips in tune with his pace, matching his thrusts; this was easy - this was like riding a horse!\n\nJake was feeling it too, the way our bodies were moving in unison, hurtling together towards orgasm.\n\nSuddenly he changed gear completely, jumping to light speed, hammering up into me like a pneumatic drill. That sent me over the edge; I threw my head back and screamed as I clamped around him.\n\n\"Fuck, fuck, fuck!\" we shouted in unison.\n\nI came hard.\n\nI collapsed onto Jake's chest, my heart pounding in my ears, fighting for breath as his roars filled the room. His arms encircled me, holding me close as I soared across the galaxy, propelled by the white heat within me. I closed my eyes and surrendered unconditionally to the intensity of my climax.\n\n-\n\nI don't remember how we made it upstairs - I think Jake must have carried me. When I woke, I was in the big double bed, curled against the coolness of his naked body, his strong arms still around me.\n\nThere was a little gap in the curtains and the light from the full moon was streaming through, illuminating the two of us. For a few moments I lay there, bewitched by its spell, enthralled by its power.\n\nJake gave a little murmur as I slid sideways away from his embrace. He shifted his position slightly. Relief - he was still asleep.\n\nI made my way over to the window, preparing to reach up to shut out the silver rays. I turned to look back at the bed, where my boyfriend lay in deepest slumber, his face bathed with light.\n\nHe was beautiful.\n\nMy thoughts snapped back. This could not be! That jealous moon was trying to shake him from his sleep, to rouse him from our bed, to take him from me.\n\nI shut the drapes briskly, banishing the covetous intruder. No one would outshine me. I was Jake's Juliet, I was his sun.\n\nI crawled back across the bed and placed a gentle kiss on his forehead. That poetry, learnt long before, called back to me:\n\n\"And yet I wish but for the thing I have;\n\nMy bounty is as boundless as the sea,\n\nMy love as deep; the more I give to thee,\n\nThe more I have, for both are infinite.\""
    ],
    "authorname": "SpindleTop",
    "tags": [
        "birthday",
        "fire",
        "fireplace",
        "fireside",
        "first love",
        "high school",
        "romance",
        "rug",
        "weekend break",
        "18-year-old"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/tybalt-and-juliet-ch-13"
}