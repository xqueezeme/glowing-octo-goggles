{
    "title": "Past, Present and Future Ch. 03",
    "pages": [
        "<center>A short tale of sugar relationships.<br>It's a stand-alone tale but follows from and builds on Chapters 1 and 2. <br>Please enjoy. \n\n+</center>\n\n\"He doesn't play games.\"\n\nMarcy looked at me over the rim of her coffee mug. It was a coffee mug, no matter what she put in it.\n\n\"Games?\"\n\nI thought for a moment.\n\n\"Look, when a boy is interested in you... No, when you are interested in a boy, what do you do?\"\n\nHer eyebrows went up. \"You mean how do I get him to notice me?\"\n\nI nodded. \"Exactly &mdash; making eye contact, but not too much or too long, leaning in towards him, laughing at his stories, batting your eyelashes, shy smiles, playing with your hair, all of it. We all do it. It's part of every girl's bag of tricks, that little social dance we do to get a cute boy's attention, right?\n\n\"Well, he doesn't do those, Marcy, or, rather, he doesn't allow himself to react to them. I tried and he cut me off at the knees. He wasn't surly or creepy or anything; he just made it clear &mdash; politely &mdash; that we were both adults and, if I wanted to see more of him, it would be on his terms.\"\n\n\"Which were?\"\n\nShe was grinning now, having seen me leave and return with my over-weekend luggage consisting of my flute and one very small purse.\n\n+\n\n\"And you said yes? Spent the whole weekend bare-assed? Playing flute sonatas for him in the buff?\"\n\nI blushed a little, nodded. \"Yes, but not sonatas, those are...\"\n\n\"Whatever,\" she said. \"You spent three days butt-naked, playing your flute the whole time? Kinky.\"\n\nI tried to control my blushing.\n\n\"No, not all the time. I mean, not with the flute.\" The more I said, the sillier it sounded.\n\n\"So, I'm rooming with a sugar-baby?\" she giggled.\n\nThat got my dander up. \"No. No way!\"\n\nShe stared at me, the challenge clear on her face.\n\n\"Well, not yet,\" I admitted. \"Maybe.\n\n\"I mean, he asked. Sort of. I told him I needed to think about it.\" \n\nMarcy came over, hugged me. \"So, at least tell me what he's like.\" \n\nShe reached out with the wine bottle. I held out my own mug and she poured me a sizeable splash. I sipped, searched for an answer. How to do justice to Anthony diRossi?\n\n\"Well, he's really kind and generous, once you get inside his walls.\" \n\nMarcy giggled. \"'Kind and generous'. That's what Katie said about her 73-year-old sugar-daddy last year.\"\n\nI glared at her. She wilted a little, shrugged. \n\n\"Sorry,\" she said, meekly.\n\n\"Well, he is!\" I said. \"But, let's see...\n\n\"He's had a rugged life in many ways. His father died when he was a little boy and there wasn't a lot of money. His wife deserted him for his best friend and that really hurt him. He was a firefighter until a helicopter crash cost him his career, meaning his friends and his support network, too. He wound up living with his uncle in Watford and started coming to class here to avoid having to be a farmer. Then his uncle got killed by a drunk driver and, well, Tony owns the farm now. \n\n\"He really enjoys learning, but all the students are like our age and, oh heck, Marcy, the more he went into it, the more I could understand why he hasn't been more open. He's all alone, sort of.\"\n\n\"Maternal instinct in four...\" she smirked. \"In three... in two...\"\n\n\"Stop that!\" I snapped. \"It's not that, either. Look, he's... well, i think he's just too darned proud to work at fitting in. Truth is, I think he's the most masculine&hairsp; man I've ever met &mdash; in the best sense of the word. When he lets himself be real, he's... I don't know, overwhelming? In a really good way, I mean; he makes you feel really good about being a woman.\"\n\nShe nodded a bit sadly at that, obviously thinking of the weak-wristed mama's boys the campus was increasingly infested with. The best that could be said for some of them is that they didn't bring their teddy bears to lectures.\n\n\"He's got really good taste. He renovated the old farmhouse and, Marcy, it's gorgeous!&hairsp; West-facing floor-to-ceiling windows, with the most incredible sunsets. He kept most of the original stone walls, but everything's modern and warm and there's a pool and walking trails and...\"\n\nShe giggled at my enthusiasm. \"So, what's he like?\"\n\nI thought. \"I could say 'distant' or 'reserved', and I wouldn't be wrong, but I think it's just a shield, something to keep himself from being hurt again, which is weird, 'cause he's generally really confident.\"\n\n\"But old.\" I saw the look in her eyes as she said that.\n\n\"Late 40s, I guess. I didn't ask. And, yes, he has white hair, but it's hard to tell 'cause he was always really blond. He's in very good shape, works out at the gym here a lot. And he dresses super well, better than half the gay guys I knew. And he's an amazing cook!\"\n\n\"How's his package?\" Dark eyes gleamed over her coffee cup.\n\n\"Marcy!\" Even for her, this was pretty brash.\n\n\"Well?\"\n\nI blushed. \"About average, I guess. But, girl, it stayed up all night and he really knows what to do with it!\"\n\nMy eyes closed, my mind flitted back to Tony driving me off cliff after blissful cliff with hands, mouth and cock. The guy was patient, capable, imaginative and as gentle or as forceful as needed. He'd also had all weekend to learn what rang Stephanie's chimes, oh yes. \n\nI shivered happily. Delete 'chimes', insert 'carillon'. \n\n\"I saw that memory!\" Marcy giggled.\n\n\"I came about twenty times, and that's no exaggeration. The guy's a machine, Marcy!\"\n\nShe laughed openly now, her eyes sparkling.\n\n\"And...?\"\n\n\"And what?\" I asked.\n\n\"When are you seeing him next?\"\n\nI sagged just a little. \"At the lab, Tuesday.\" Tony and I had been lab partners. Were still lab partners, I mean. I hoped. His having seen every bit of me for three days, what would Tuesday morning be like?\n\n\"How's the sugar?\" she grinned. Marcy was always going on about sugar-daddies.\n\n\"No sugar, Marcy. Well, he offered me a necklace, like about next year's tuition.\"\n\n\"Where is it? I wanna see!\" \n\n\"I said no. He's not going to buy me, Marcy. I told him that.\"\n\nShe had a curious expression on her face. Disappointment? Jealousy, maybe? I couldn't read it.\n\n\"Well, if it was that nice, I just wish I could have seen it.\"\n\nI blushed again.\n\n\"You've got a photo of it, don't you!\" Marcy could be pretty perceptive sometimes. \"Show me!\"\n\nI thought for a moment. Marcy and I were roomies in the rez. We'd seen each other bare before. \n\nOn the other hand, when Tony had taken a photo of me yesterday, it wasn't casual, pardon-me-while-I-change-my-bra nudity. I'd been sleepily basking in the sunshine on Tony's back deck, wearing only the necklace. When he'd held up my phone, his eyebrows raised in unspoken question, I'd lazily put my hands behind my head, arched my back a bit to emphasize my boobs. The photo showed the sheen of perspiration on my body; my face had that unmistakable, wildly-contented, just-laid look.\n\nLooking at it afterwards, I was surprised my phone hadn't melted. \n\nIf this worked out, I was thinking of having the photo framed as a gift for Tony. Of course, I'd have to get it done mail-order so I wouldn't have to face the clerk at a framing shop...\n\n\"No,\" I replied firmly. \"Ain't happening.\"\n\n\"Oh, come on, Stephanie &mdash; 'sharesies' on everything, that's the residence rule, right?\"\n\nShe laughed, pointed at me. \"Stephanie's got a sugar-daddy! Stephanie's got a sugar-daddy!\" \n\n\"Stop it!\" I protested, giggling. \"He's not...\" But Marcy's laughter is super-infectious and I wound up laughing myself.\n\n\"Show me, show me, show me!\" She jumped over to my bed and started tickling me. It was an old game, one I couldn't win. I shrieked and tried to get out of her clutches, but it was hopeless.\n\n\"Show me!\" she insisted, \"or I'll tell Tony you showed me anyway!\"\n\nThat killed the tickle like a bucket of ice water. She saw the look in my eyes, let go of me right away. \"Sorry,\" she apologized again. \"I wouldn't, Stephanie. You know that, right?\"\n\nI nodded, managed a forgiving smile. It was hard to stay angry at Marcy.\n\nIrrepressible, she jumped on me again, fingers in my ribs. \"Show me, show me!\" the chant started again. I screamed, wriggled and finally gave up. \n\n\"OK, OK, but stop it!\"\n\nShe sat beside me on the bed, passed me the phone from my desk.\n\n\"You have to promise, Marcy! Promise you won't tell anybody!\"\n\n\"I promise,\" she assured me. \"Let me see!\"\n\nI pushed my thumb on the phone screen, which obediently unlocked itself. When I found the photo, I was still amazed at how hot I appeared. I handed it to her, looked away.\n\n\"Oh my god, Steph!\" she gasped. I turned back. I'd never seen her eyes that wide. Her hand over her mouth, her eyes were sweeping back and forth between the phone image and the real me in front of her.\n\nEventually, using both thumbs on the screen, she enlarged the photo, zeroing in on the necklace around my neck.\n\n\"Holy crap!\" she whispered. \"That's gorgeous!\"\n\n\"Yeah.\"\n\n\"And you gave it back?\"\n\n\"Of course, Marcy. I don't want him to think he can buy girls. Especially not me.\"\n\nI thought for a moment, added softly. \"And I didn't want to think of myself as a girl who could&hairsp; be bought. I told him that I'll wear it when I visit him.\"\n\n\"Oh. Gotcha.\" Her fingers swept over the screen, restoring the image to its normal size. She stared at it again and took a deep breath before handing the phone back to me.\n\nShe hugged me again, hard. \"Sounds like you had a really good time.\"\n\n\"Yeah. I really did.\"\n\nShe giggled slightly, pulled her head away to look at me. \"So, when do I...\"\n\nI interrupted. \"When do you&hairsp; get to meet him? How about 'never'? Can we put 'never' on your calendar?\" I grinned at her.\n\n\"Stephanie! I know you can't be embarrassed, but tell me you're not jealous!\"\n\n\"Marcy, there's no way I'm going to let him get a look at you; he'd be gone in a minute. Any man would.\"\n\n\"Now you're being silly,\" she said, her eyes on mine. \"Me, compared to the girl in that photo? No way!\"\n\nI was indeed mainly teasing and, in any case, there'd have been no point to my being possessive of Tony. He had the charm, the money, the good looks; if he could overcome his own issues, old or not, he could have any girl on campus. The mere fact that he'd asked me&hairsp; in the first place &mdash; and then asked me back &mdash; was a solid confidence-builder for me.\n\nBut, Marcy... \n\nWell, yeah. She could make any woman jealous and possessive in the blink of an eye, just by existing.\n\nShe was smaller than average, almost petite, much shorter than me. She had the long, long dark brown hair, come-hither eyes with long lashes and a sizzling figure. She was also, no kidding, a football cheerleader, traveled all over the place with the team. Super-fit, wearing her purple-and-white costume, she made the boys in the stands drool. She also had a tough, spunky attitude, something she needed to keep the linebackers, um, in line.\n\nI shrugged. \"I'm sorry, Marcy. No, I think I can trust both of you. But this is all really new. I'm not sure where Tony and I are going. It's way out of the normal.\" \n\nShe took my hand, squeezed; her face became almost serious. \"I know, Steph, I know. I'm happy for you, really.\"\n\nHer eyes brightened and the old mischievous grin popped onto her face. \"But I do want to meet him! Maybe I could just drive by his farm, by accident, some weekend when you're there?\" She batted her eyes, giggling.\n\nI looked at her, tried not to giggle myself.\n\n\"I'm pretty sure you'd have to follow the local dress code,\" I grinned.\n\nThat set her back. My grin grew wicked.\n\n+\n\nI was waiting for him Friday evening, wearing a long t-shirt dress. It showed up my legs nicely, I thought. Maybe that would make up for him having to wait for me through my late practice. \n\nI'd seen him last in the lab on Tuesday, where he'd been his usual distant self. At first it had upset me, but then he gave a wink and I realized that he too could keep confidences. That was something good to know, something I needed, I thought.\n\nTonight, he appeared in the Jaguar again, the little sports car. Polite as always, he hopped out and opened the door for me. He looked smashing &mdash; grey flannel trousers and a tie, no kidding.\n\nIt felt odd hugging him with clothes on, odd to feel his hands on me with my clothes on, but I did my best before tossing my purse, laptop and knapsack into the back and slithering into the seat. \n\n\"Tony,\" I said when he'd got behind the wheel. He looked at me. I put my left arm behind his head, pulled him in for a solid, toe-curling kiss. I put everything into it and, a second later, he responded and my&hairsp; toes were curling.\n\n\"That's for not pushing back when I asked you to pick me up here,\" I said.\n\n\"I'd wondered. The heating plant instead of your residence?\"\n\nI hesitated. \"Tony, you're a dear, but, well, a man of your age &mdash; I mean your distinguished appearance &mdash; picking up a girl from the Zoo on a Friday night would cause talk.\" \n\nI squeezed his arm with my hand. \"Please?\"\n\nHe smiled. \"No worries. Anyway &mdash; ready to go?\"\n\n\"Please.\"\n\n\"Oh,\" he said. \"I forgot.\" His hand emerged with the necklace he'd tried to give me our first night together. \n\n\"You said you'd wear it at the farm,\" he smiled. \"We're on our way there; is that OK?\"\n\n\"Very much OK.\" \n\nI leaned over, let him put it around my neck. I took a deep breath, smiled at the weight of it, ran my fingers over the complex pattern of links.\n\n\"Thank you,\" I said. I never felt so pretty as when I was wearing it. I looked at my image in the makeup mirror and was ready for anything.\n\nWe'd just passed Hyde Park Road when I spoke up. \"May we have the top down, Tony? Please?\"\n\nHe was happy enough to oblige. Driving in a convertible with her hair blowing in the breeze is something every girl should try and driving that convertible with a laughing blonde, her hair streaming behind her, is something every boy can be happy with.\n\nThe sun was setting by the time we were fifteen minutes out of town on old Highway 22. I started to wiggle in my seat. Tony's head half-turned towards me.\n\n\"You OK?\" \n\nWithout answering, I slipped the shoulder belt down and did the little squirmy dance that allows you to remove your bra without taking off your dress. After unhooking it in back, I pulled the shoulder strap out of my left sleeve and over my hand. When I reached up the right sleeve and pulled on the other strap, the whole thing came out in my hand. \n\nTony was watching the process out of the side of his eye. I grinned, held it up over my head, let it flap and dance in the wind. I opened my fingers and set it free, a pale shape vanishing into the dim light behind us. \n\n\"Oopsie!\" I said, solemnly. \n\nHis smile was amazing. I could see I'd hit precisely the right button to please him.\n\nTo start.\n\nI'd shifted far enough that I wasn't sitting on my dress anymore. Reaching down with crossed arms, I found its hem, leaned forward and pulled it over my head in one long motion. \n\nThe expression on his face was priceless as he tried to watch both me and the road ahead.\n\nI lifted it up into the windstream with both hands. The fabric flapped and roared over us in the darkness like a flag in a gale. I opened my hands with a loud Wheeee! and it was gone instantly, leaving me dressed in Tony's silver and a really nice smile. \n\nThis too is something every girl should try at least once. Trust me. \n\nThe leather seat felt soft and comfortable against my bum and back. The night wind on my bare shoulders and boobs was strange, but welcome. I could feel my nipples tighten a little; I couldn't tell if it was from the wind or from anticipation and excitement. Either one worked for me. \n\nI was enjoying myself thoroughly and I liked Tony, very much so. Maybe more than that. \n\nThe elephant in the room, of course, was his offer. \n\nA week ago, I wouldn't have believed myself capable of even considering such a proposal, but it was a new Stephanie now, a girl far different from the former me. But... \n\nAs much as I liked Tony, as much as I liked everything else, the concept of being his sugar-baby was something I hadn't come to terms with. I put the question aside for now, focussed on the moment.\n\nThere were houses here and there along the highway, some with lights on, some not. I wondered if anybody was watching as we flew by. I didn't think it mattered much. I wondered if I would think so if the light was better. A few cars passed us, heading east into London, then a big semi-trailer. My boobs showed clearly in the truck's headlights; the driver was high enough that he could easily have seen me had he been looking. I smiled, hoped he'd enjoyed himself, wondered how long the memory would stay with him.\n\nI could sense Tony's surprise, his enthusiasm, his new-kindled expectancy. It felt great. I was confident this time, like I was finally getting into my stride.\n\nThe car veered slightly as he glanced down at me. I touched his shoulder with my hand.\n\n\"Tony, dear, you need to keep your eyes on the road.\"\n\nLaughing, he did, but let his right hand explore. That, too, was welcome. His fingers found my thigh, roamed up and down. The back of his hand traced its way up over my stomach. It found a breast and I laughed as Tony caught my nipple between thumb and forefinger.\n\nI reached out with my left hand, found his leg, stroked the fabric of his trousers, found a lurking hardness underneath. The car veered again as I ran my fingers over it, squeezed.\n\n\"Hey! Rubber side down!\" I giggled. \n\nHe turned his head for a quick glance at me. \"Do you have any idea how good that feels, Stephanie?\"\n\nI squeezed again, caught the hand on my boob with my own. \"I think so,\" I said. \n\nTony signaled, turned south off the highway. A few minutes later, we were pulling up to the old barn. He backed in, parked. As polite as ever, he opened my door and held out his hand to help me.\n\nUnlike the first time, his eyes were definitely on my legs. \n\nAmong other things.\n\nI'd been shy the first time Tony had brought me here - embarrassed, uncertain, nervous. Now, naked as a bird under a cloudless night sky, I was running hand in hand with him from the barn, laughing in delight.\n\nTony was trying to unlock the door and I was making harder for him by fumbling with his belt buckle, pulling his slacks down around his ankles. \"If you keep doing that, Stephanie,\" he chuckled, \"I'll jump you out here on the balcony.\"\n\nI giggled, reached around behind him to seize his stiff organ. My hand slid inside his boxer shorts; I began to run my hand along his length, barely touching. \n\n\"And the downside of that would be what, Tony?\"\n\nI looked around. A hundred years ago, there might have been chairs under the broad porch, a swing glider perhaps, to pass sultry evenings in. Now, there was only the empty porch.\n\nI pulled my hand out of his boxers, let my thumb circle the slippery fabric over his taut head. He missed the keyhole with the key.\n\nDon't say it.\n\n\"Having problems?\" I giggled.\n\nHe eventually managed to get the door open. He dropped my backpack on the deacon's bench inside and, still hobbled by his fallen trousers, spun around. Throwing a long arm around my waist, he pulled me to him.\n\n\"You are such a tease!\" The delight was clear in his voice. My reply was cut off as his lips met mine. Our tongues met, explored, played. I giggled again, thinking of his expression when I'd been doing my strip-tease on the country highway.\n\n\"A tease, Tony?\" I said softly. \"I'll take that as a complement. Or would you prefer me to stop?\"\n\nHis hand touched my face. \"Yes, it was and no, don't ever stop.\"\n\nI felt the nubby silk of his shirt and tie against my nipples and the skin of my tummy, pulled against him with all my happy strength.",
        "He broke the hug and started to pull me inside the house. I pulled back, pointed up at the sky. Out in the country, away from the lights of the city, there was a carpet of stars above us. \n\n\"Look, Tony, there's Orion.\"\n\n\"You're an astronomer now?\"\n\nI poked him in the ribs.\n\n\"I'm blonde, Tony. That doesn't mean I'm dumb. Look, over that tree.\" I pointed. He put his head on my shoulder.\n\n\"Nope, sorry.\"\n\n\"Well, trust me, Tony. I think it's very romantic. Go fetch a blanket, sir, please.\"\n\n\"Stephanie...\"\n\n\"Oh, come on, Tony! &hairsp; Blanket. &hairsp;And something to drink, please. Trust me, you'll enjoy this.\" I stroked his hardness, then knelt, took hold of his slacks around his ankles. \"Lift.\"\n\nHe pulled his feet out, leaned down, patted the side of my head gently.\n\n\"OK, wine and blanket. What will you be doing?\"\n\nI leaned in, seized his boxers with my teeth, pulled them down, let them fall.\n\n\"Waiting, Tony.\" I gave his cock a wide lick with my tongue and he laughed. \"Waiting eagerly, so hurry.\"\n\nI opened my case and assembled my flute, then turned off the porch light. Tony didn't take long, but I passed the time with soft music, letting my eyes adjust to the darkness.\n\n\"Are you hungry?\" he said, emerging from inside. \n\nHe'd managed to lose his shirt and tie and I could dimly see his form against the stars. I ran my hands up his thigh, caught his sac, slid my fingers up his length.\n\n\"Only for this.\"\n\nWe stepped down onto the grass, found a level spot away from the trees. The stars in their profusion seemed to hang just out of reach. I felt that I might actually catch some with my hand if I jumped really high.\n\nIt was a good Spumante he'd brought, Italian champagne. The cork made a good pop, flew away into the darkness as I spread out the blanket.\n\nI caught his hand, pulled him down, pushed him to his back. I could sense his cock bouncing as he landed. My imagination had been running full-throttle since we'd left the university grounds. I was ready &mdash; nipples, labia and clit swollen, wet, woman anxious to be filled with man.\n\nI straddled him, found his shaft with my hand and began to sweep his head along my now-fluid ladyparts. I could see his grin, white teeth under starlight. \n\nI lowered myself onto him, caught my breath as his length filled me, stretched me. \n\n\"Tony,\" I whispered, \"you make a girl feel so good!\" His reply became a gasp as I clenched him inside, rolled my hips once.\n\nI stopped moving, looked down at him. \"This one's on me, Mr. diRossi, if you'll let me.\"\n\nHe let his hands answer, sweeping slowly over my hips, my waist.\n\nI found the glasses and bottle, poured and handed him one. He sipped quickly. I bent down, my nipples dragging gently over his chest, my lips kissing love and Spumante.\n\n\"Enjoy yourself, Tony,\" I said softly. \"Let me do it for you tonight.\" \n\nSitting upright over him, I picked up my flute. \"Just lie still and enjoy. Watch the stars.\" \n\nHe lay back, glass in one hand. His other slowly roamed over my hip and abdomen. \n\nI thought 'Stairway to Heaven' would be fitting and it is pretty flexible. I deliberately played it slower than I would normally, trying to pace the music to my hips rolling over him. Tony's eyes were wide in the starlight. His hand slid up my waist, cupped my boobs. It was going to be hard to concentrate. His manhood was sending happy ripples through my sex, his fingers had moved up and were exploring a nipple.\n\nThe tune drifted across the lawn, into the night, up to the stars. I tried to draw out our lovemaking, make it last, but it was becoming increasingly difficult. I lost my place as he rolled my nips with thumbs and fingers. I started again, picked up the speed a little, made it a little jazzier. I could hear Tony's breathing speed up.\n\nI finished the tune and laid my flute to one side before bending down to brush my lips over Tony's. Our tongues met, said hello, embraced, tangoed.\n\nI sat up, found the glasses and handed one to my man before &mdash; being at the moment both needy and greedy &mdash; gulping mine. \n\n\"Having fun?\" I whispered, taking his glass and setting it aside with mine. In response, he half-sat up, pulled my head down for another blistering kiss. \n\nI leaned up, put my hands on his chest for balance and began to bounce on him, using my legs to lift me up off his manhood, my weight to pull me back onto him. His hands settled on my boobs, caught my nips tightly, stretching them each time I moved.\n\nI felt him flowing against my lining, felt it stoke the fires he'd lit in my boobs. I squeezed myself tightly around his shaft, rose again, faster this time, falling hard onto him. He began to growl and his thighs rose, pressed against my butt; his hands tightened on me, fingers sinking into my bum, pulling me down hard against him.\n\nA shimmy started deep inside me, flowed up and out, a flare of happiness, a burst of wonder and I fell onto him, gasping and shaking in my joy. His hips moved under me and I could feel his orgasm burn through him, felt his heavy pulsing within me.\n\nFeeling sleepy and utterly treasured, I lay on top of him, felt his hands cuddle my bum and lower back. They felt warm, loving.\n\n\"So, that's astronomy, is it?\" he whispered.\n\nI giggled gently.\n\n\"Not too boring for you, Tony?\"\n\n\"I could get to like it, actually. I think I just discovered a comet or something.\"\n\nI squeezed him inside again. The summer night made a good bower, the stars a nice ceiling. We both slept for a while. \n\n+\n\nI spent much of Saturday morning either practising my music or sunbathing by the pool. I was starting to get a pretty nice overall tan.\n\nI took a tube of tanning goo inside and asked Tony to help me with my back. He led me out onto the deck again where, he said, 'the light was better'. Well, perhaps it was, but he could have done it with his eyes shut.\n\nThe goo was cold from the tube, but his hands were warm as they began to smear it over my shoulders. I lifted my hair up in my hands and felt him rubbing some on my neck and ears. His hands slid down my back, smoothed goop over my waist before doing an extra-good job on my bum.\n\n\"Turn around,\" he said. His hands worked down the front of my shoulders, along my collarbones, over my pecs. I wasn't surprised when he made very, very sure that my boobs wouldn't burn. His palms spread extra lotion on them, his thumbs worked it into my nipples, around and around.\n\n\"Tony,\" I half-moaned, \"I'm not sure how much relaxation I'm going to be able to do if...\"\n\nHe pinched my buds gently and almost had to catch me when one knee buckled a little.\n\n\"Tony...\" \n\n\"This pleases me, Stephanie.\" And that was all he had to say.\n\nHe grinned, kissed me and knelt, goo-coated hands moving onto my stomach, lower, along my legs. Had his fingers even touched my pussy, I would have exploded on the spot, but they merely swept by, a finger-breadth from my lower lips. I shivered at that much. Again and again, his long, soft, knowing fingers stroked my sensitive inner thighs. The man knew my body better than I did. I could feel my own ladyjuice oozing down to be mixed with the sunblock.\n\nI began to breath heavily, stroked his white hair as he knelt before me.\n\nLong fingers spread goo down each leg, including the bottom of my feet. To my surprise, Tony didn't try to tickle; he just did a thorough job. \n\n\"There,\" he said, rising. \"All done.\" He smiled mischievously.\n\nHe had me ready. More than ready. A shifting of his trousers showed me he was as turned on as I was. I took his hand, looked for a good spot. He didn't budge when I pulled.\n\n\"Not yet, Stephanie.\" \n\n\"What? After that, Tony, you've got me wound like a top. You can't...\"\n\nI saw the look in his eyes, stopped. Yes, yes of course he could. I had the option of going home at any time, but here, in the meantime, it was his fancy.\n\nI sagged just a little, took a deep breath, let my eyes rise to meet his.\n\n\"This is what pleases Mr. diRoissi this morning, is it?\"\n\nHis hand caressed my cheek softly. His smile was kind, almost loving.\n\n\"Yes, Stephanie. Yes, it pleases me very much. You have a special look in your eyes when you're, uh, like this. It's remarkably appealing. So, yes, like this. For a while, please.\"\n\nHe was always polite.\n\nWell, two could play at this game.\n\nI knelt in front of him, wrapped one hand around a leg and began unzipping his trousers with the other. He didn't try to stop me; sauce for the goose, right? His face had a soft smile on it as I reached inside and pulled out his already stiff member and wrinkled sac.\n\nI was concerned about the brass zipper teeth so close to precious property, so I released his leg, unfastened his trousers and let them fall about his ankles.\n\nI gave a long lick up under his shaft, kissed his plum lightly and, leaning my head down, began to tongue behind his tender pair. His hands came down, wrapped themselves in my hair as my tongue moved forward, circled the boys. I sucked them into my mouth, one by one, pulling my head back until they emerged with a soft pop.\n\nI looked up at Tony. He was smiling; understanding the game and happy to be playing it. I gave a bright smile.\n\n\"And this, too, pleases you, Tony?\"\n\nHis smile grew brighter.\n\nRising on my knees, I brought my lips down over his swollen crown, brought him half-way into my mouth. I began to stroke his underside with my tongue while pumping the bottom half of his shaft with one hand. His male scent filled my nostrils and I felt my labia swell still more.\n\nThere was no subtlety in what I was doing. I wanted to bring his arousal up as fast as possible. My head bobbed up and down over his hardness, my cheeks sucked in, my eyes watching his whenever I could.\n\nAt length, I could feel a growing tightness in his stomach, his thighs.\n\nI pulled off him, slowly, very slowly, gave his slit a light, quick flick with the very tip of my tongue as it emerged. His crown glistened now in the sunlight, swayed between us.\n\n\"How pleased are we, Tony?\" I giggled.\n\nHe brushed hair off my face, laughed. I could see that he liked a bit of fight-back spirit in me. Another clue.\n\nI got up from my knees, kissed his cheek.\n\n\"Thanks for your help with the sunblock, dear.\"\n\nWith that, I stepped to the diving board and did what I thought was a pretty good dive. Under the circumstances. \n\nBut that 'cold shower' thing? Nope. I was still hornier than any girl should be. Well, Tony no doubt had had a plan, but he wasn't any better off now. I grinned to myself.\n\nWhen I surfaced, Tony had gone back into the house. I toweled myself off and went back to practising my flute, this time in the sun.\n\nTony came back outside eventually and sat in the gazebo looking at me. The man had the patience of a lizard when it came to watching me in the nude. He'd replaced his trousers with sandals and a pair of shorts. I could still see the lengthy bulge. He had a better tan than I did and it contrasted well with his white hair and beard. \n\nSuch a handsome man! \n\n\"Are you about ready for lunch?\" he asked. \"I've packed a picnic basket.\"\n\n\"Your secret Superman spot?\" I asked. He'd taken me to a childhood haven last week. \n\n\"No, another one this time.\"\n\nTony emerged from the house and handed me a wicker basket, keeping a blanket for himself.\n\nThe basket was heavy and I raised my eyebrows at him.\n\nDelicate little girl here? Heavy basket? A little help, maybe?\n\nHe laughed, slapped me lovingly on one buttock.\n\n\"You're young and fit,\" he said. \"Besides, if you were carrying the blanket, I wouldn't be able to watch your butt as you walk.\"\n\nTypical Tony. I would have scratched the eyes out of a man my own age saying something like that. With Tony, it felt natural, happy-making. It gave my beauty purpose, I thought. Women ought&hairsp; to be admired by men.\n\nI smiled. \"Where to, then?\"\n\nI hadn't realized that many farm fields are edged not only by fences, but by narrow laneways. The one we were on now was wide enough for a tractor, bordered on the left side by a three-strand barbed wire fence and on the right by a low hill covered with what appeared to be a very old apple orchard, most the the trees being long past their prime.\n\nThe land beyond the fence stretched out for a long way before rising onto a low, tree-covered ridge. The field wasn't cultivated, so far as I could tell; a small herd of black-and-white cattle moved slowly in the distance. I could see some sort of farm building on the far horizon, an hour's walk away, but we seemed to be the only people here.\n\nLovely as it was, I was still slightly nervous wandering around in my skin. I stopped, turned to him.\n\n\"Tony, I'm sorry, but are we still on your farm?\"\n\n\"No.\" He wrapped his free arm around my shoulder, pulled me in for a hug. \"No, we're on a neighbour's land, but Dan and Vivian are going to be in town today. There's nobody else here, Stephanie.\"\n\nThe thought of being caught trespassing stark-naked had had me worried. \n\n\"You're sure?\"\n\nHis hand turned my head up, his lips kissed mine softly.\n\n\"I'm sure.\"\n\nI felt myself relax. Tony had pushed my boundaries quite a bit but had always been careful not to damage my pride. \n\n\"As sure as I am of this,\" he said gently. His hand reached up, fondled one of my breasts, then the other. My arousal, which had faded from a hurricane to only a major gale, shot right up again. I would have wiggled loose, but his lips came down on mine, his tongue swept my teeth, flowed over the roof of my mouth. I wiggled, but in another fashion.\n\nI broke loose, gasping. \"Tony! You're going to kill me!\"\n\n\"You'd die with a smile.\"\n\n\"True.\"\n\nMy whole body was tingling as, hand in hand, we walked on for another 10 minutes or so. The dirt laneway turned to a path, became overgrown with waist-high grass. White heads of Queen Anne's Lace poked up here and there.\n\nWe came to a ruined building on our right. It looked very old. Most of it had fallen in on itself, with a now-freestanding stone chimney and some very broad, weathered boards still showing where somebody's hopes and dreams had been. There were grey, crumbling remnants of a wood rail fence, split logs laid in zig-zag, but no evidence of any normal farm buildings like a barn, stable or sheds. \n\nTony led me by the hand to what must have been the front yard. The grass was shorter there, softer and he spread the blanket out. I put the basket on it. We were on the crest of a low hill, with endless fields in the distance.\n\n\"It's lovely,\" I said. \"How old is the house?\"\n\n\"Not sure. Probably 1860s or 70s. The earlier ones around here would have used more logs and fewer boards. Money was tight and trued lumber expensive, so logs were used whenever possible.\"\n\n\"How do you know all this stuff?\"\n\nHe snorted. \"I went to school back in the day when the public wanted their kids to learn something asides from advanced grab-ass. History was a core subject every year.\"\n\n\"Oh. Did your family come over then?\"\n\nHe snorted louder now, but with a hint of a smile on his face. \"Give land grants on Queen Victoria's primo real estate to a bunch of left-footer Dagos? Not likely!\" His smile broadened into a wolfish grin.\n\n\"Things weren't quite as delicate back then, Stephanie. Discrimination was pretty blatant and almost all of the original settlers around here were from the UK. My great-grandfather didn't immigrate until 1919; he set up a grocery stand in the city. That was pretty typical of Italian immigrants at the time, actually, but Angelo was single, worked his butt off and saved his money. He bought into the stock market in 1928 and was smart enough to overrule his broker and get out at the peak a year later, just before everything crumbled.\n\n\"With that, he had enough money to ride out the Great Depression. But he'd always been a farm boy at heart; owning land made you somebody special back in the old country. A lot of people around here lost everything in the Depression, so he was able to buy the farm and still have enough to keep going until things picked up.\n\n\"Oh, yeah, and to send home for a plump young bride. He met her for the first time at the dock in Montreal and it was a two-day train ride to here, with a short detour on the way to the train station to actually get married. They had six kids and the first one was probably launched on that train ride.\n\n\"So, us wops wound up owning some prime land here without even having to clear forests or whatever. It worked out.\" His grin stretched across his face now.\n\nI'd never heard him talk of anything like this.\n\n\"Well, it's really pretty.\" I got up and took a couple of steps to explore.\n\n\"Don't go too close to the house,\" he said. \"I keep expecting that chimney to have fallen every time I come here. Oh, and over there in the corner, there's an old well or root cellar. Be careful; it'd be easy to fall into.\"\n\nI strolled carefully around. The view was outstanding.\n\nA minute later, Tony had unpacked lunch &mdash; crusty Italian bread, prosciutto ham and some sort of cheese. He was working on putting together a couple of simple sandwiches. He motioned towards a thermos. \"Tea. Pour for us, please.\"\n\nI sat beside him, enjoying the warm breeze on my nakedness. The sandwiches were scrumptious. There were three kinds of olives and he'd brought pears for dessert. The tea was sweet and refreshing, even in the warm sun.\n\n\"You're going to make me fat, Tony.\"\n\n\"Doubt it, Stephanie. I've watched you swimming.\"\n\n\"You're sweet, Tony and thanks for sharing your family history.\" I laid my head on his shoulder, put my arm around his waist.\n\nI felt hishand sweep up my arm, move to my waist for a hug.\n\nA bird started to sing. I couldn't see it.\n\n\"What is that?\"\n\nHe listened. \"Not sure. A vireo, I think. Never learned all my bird calls.\"\n\n\"Too busy being Superman?\" \n\n\"That, and helping Leo with his beets.\"\n\nI felt his hand slip further around my waist, cup under my boob.\n\n\"Among other things,\" I giggled. \n\n\"Among other things.\" His fingers gently caught my nipple, pulled slightly. The fires which had almost died down inside me got a big burst of oxygen. \n\nI let myself groan, just a small one. \"Tony, you can't keep me like this forever. Please.\"\n\nHe chuckled. \"What sort of girl can&hairsp; I keep like this forever?\" He turned, found my other boob with his other hand. Yeah, zero to sixty in about five seconds &mdash; I felt wetness on my thighs, my heart pounding. The man was a boob wizard.\n\nI had a thought. i knew his childhood comic-book favourites.\n\n\"Not Supergirl!\" I shouted. \n\nWith that, I lunged, straight-armed him on both shoulders. He fell back and I leapt on top of him, slid my hands onto his wrists and pinned them down. \n\n\"Oh!\" he grinned. \"Nobody can fight back against Supergirl.\" With shoulders and arms like his, he could have pushed me off, lifted me off bodily. Instead, he played along, let himself go limp.\n\nIt turned out he was still strong enough to keep me from sucking his tongue out of his head. I tried, mind. \n\nI wanted this man.\n\nI moved far enough to one side that I could unfasten his shorts. He lifted his hips and I pushed them down around his knees before rolling back. Lying full length on top of him, I licked his ear, kissed his lips, more gently this time. He pulled his hands loose, brought them around my waist and hugged me as he kissed back. His tongue explored the roof of my mouth, between my teeth and my lips.\n\nI adjusted my hips, slid my wet sex up and down his hardness. He grinned, kissed my forehead.\n\nThis was a good&hairsp; man, I thought to myself,  a strong, caring man.\n\nA man I knew now that I loved.\n\nHe stroked my back and bum, then rolled, winding up on top of me. I could feel his length caught between us. I was ready and he knew it; there was very little time for pretence in Tony's world.",
        "I felt him lift his hips, probe between my thighs, miss. I reached around, found him, aimed him at my opening and sighed as he slid home. I could feel his rim stretch my ribbed wetness as it moved. I shivered in happiness.\n\nHe paused, his eyes looking down at mine. \"How's Stephanie?\" he said softly.\n\nI tried to move my hips, but he had me pinned. \"Eager, Mr. diRossi. Keen. Waiting.\"\n\nI smiled, clenched him inside me. \"Horny.\"\n\nHe began to move in and out of me, the age-old dance of love. I spread my legs as wide as I could, delighted in the feeling of his weight landing on my mound, of my bud being shifted with each stroke of his cock. I began to whimper as pulses of pleasure rippled through my body.\n\nTony rose to his knees, grasped my hips and lifted them up off the blanket. I locked my heels behind his back. My boobs swayed and bounced every time he filled me. There was perspiration on his brow now and his eyes were closed as he hammered into me. \n\nThe songbird and I exploded at the same time, joyous tunes. I wondered what it thought of my cries as they rang across the grass and trees.\n\nTony froze, his hands dug deep into my hips, his nostrils flaring for air. After a moment, he relaxed, fell onto his side, pulling me with him. My orgasm continued, fading very slowly.\n\n\"Thank you,\" I whispered. \"Thank you, thank you, thank you.\"\n\nHis hand stroked my hair, gently, lovingly and I fell into the sweetest sleep in the world.\n\n+\n\nPi, the farm's owner, bumped our ankles in greeting when we walked in the door an hour later. I bent down. \"Hello, Pi.\" The cat curled around our ankles.\n\nTony pulled me against him, ran one hand over my head, back and bum as his other held me tight. It felt wonderful and I allowed myself to melt against him.\n\n\"Let me freshen up, Tony. I'll be right back.\" \n\nWhen I returned, Tony had already laid out an array of weaponry to make dinner. Smiling he waved me to the stool, followed.\n\nI was about to sit down when he again caught me, both hands around my waist from behind, pulling me against him.\n\n\"Have you any idea of how beautiful you are, Stephanie?\" he whispered into my ear.\n\nI wriggled my bum against him, felt his hardness through his slacks.\n\n\"I think that's a clue,\" I snickered. \n\nHe laughed in response, helped settle me on the stool, trailed his fingers over my back as he passed me on his way back to the island.\n\n\"What's for dinner?\" I asked.\n\n\"Turkey meatballs with zucchini noodles,\" he said. \"Very traditional.\"\n\n\"Really?\"\n\n\"No.\"\n\n\"What would you like to hear?\"\n\n\"Surprise me.\"\n\nI thought a moment, raised the flute and began the second movement of Mozart's Concert for Flute and Harp. It was a personal favourite and, from the way Tony was swaying to it, it pleased him.\n\n+\n\nWe were watching the sunset from his deck.\n\nI smiled at its beauty, thought aloud. \"Marcy would love this!\"\n\n\"Marcy?\" he asked.\n\n\"Oh, sorry. My roommate.\"\n\nHe looked sideways at me. \"Farm girl, is she? Likes the country?\"\n\nI giggled, poked him in the side.\n\n\"No, she's a Fine Arts student. She's been doing a bunch of landscapes and sunsets this year, trying to learn how to use water colours properly. This is a gorgeous view, Tony.\"\n\n\"And...\" he smiled. \n\nI could hear the unspoken question. When do I get to meet this artistic roommate?\n\n\"Forget I even mentioned her, sir. Ain't never gonna happen.\"\n\n\"'Ain't never gonna'?\" he chuckled. \"How many negatives is that?\"\n\n\"Not enough,\" I said. \"If it matters, she's already asked to meet you. I said no.\"\n\n\"No?\"\n\n\"She's prettier than me, Tony,\" I said, laying my hand on his arm. \"Permit me a little bit of female jealousy.\" \n\nTony smiled slightly. \"I doubt that. Her being prettier, I mean.\" His fingers ran tenderly through my hair. I liked it, leaned into his palm.\n\n\"Look, I trust both of you, but I told her that if she came anywhere near you, I'd claw her eyes out.\"\n\n\"Possessive much?\" he grinned.\n\n\"Darn it! That's exactly what she said.\"\n\nHe reached out, took my hand. \n\n\"What did you tell her?\"\n\n\"The truth, Tony. Girls talk and she's my best friend.\"\n\n\"'The truth?'\" he echoed. \"How much of 'the truth', Stephanie?\"\n\n\"I told her that you were really handsome, really fit, very sexy, that you had white-blonde hair and whiskers &mdash; OK, mainly white now &mdash; that you dressed super-well and that you were an amazing cook. The truth.\"\n\nHe had that annoying ability, being able to lift just one eyebrow. \n\n\"Stop it!\" I blushed. \"It's all true!\"\n\n\"Indeed. Indeed, it is, but how much more of 'the truth' did you share?\" He squeezed my hand, smiling.\n\nI took a deep breath, let it out slowly. I couldn't hide much hide from Tony. \n\nI looked him in the eyes. \"You sure you want to hear?\"\n\nHe squeezed my hand, sat back in his chair with his hands behind his neck. \"I'm all ears.\"\n\nRight then, he was all eyes. They roamed slowly over my bareness a foot away.\n\nI found myself blushing again. \n\n\"I told her about being naked here for you to see and playing my flute for you and the necklace you tried to give me and about going on a nude walk and about Pi and about you being a freaking virtuoso in bed and...\"\n\nHe broke out laughing. \"A 'virtuoso', am I? Good for a man's morale, hearing that.\"\n\nHe thought a moment. \"Did you tell her about...?\"\n\nI nodded. \"I said that you had very generously offered to help me with tuition, but that I told you I had to think about it.\"\n\nHe looked at me. I couldn't read his expression.\n\n\"Look, it's all just girl-stuff, Tony. I only mention it in case she runs into you on campus.\"\n\n\"She knows what I look like?\"\n\nI grinned. \"Tonybabe, every girl on campus knows what you look like. White hair, beard, handsome, perfect sense of style &mdash; you're kind of distinctive.\n\n\"But if you get approached by somebody about five feet tall, big eyes, long dark hair and cheerleader fit, I shred both of you if you smile back.\" He could see my smile as I said that.\n\n\"'Cheerleader fit'?\"\n\n\"Yeah, she's a cheerleader. I'll shred&hairsp; you, Tony!\"\n\nHe looked thoughtful. \n\n\"Tiny little woman, the one topping that... pyramid... thing that cheerleaders do?\" Of course. Tony liked watching the Mustangs' home games.\n\nI sighed. Obviously, Tony knew her to see her. And Marcy was gorgeous. For her size, she had a better figure than me.\n\n\"Tony...\"\n\nHe pulled me into a hug, stroked my back. \"It's ok, Stephanie. It's you, Stephanie. Only you.\" He paused a second. \"Even if you haven't given me an answer to my 'generous offer'...\"\n\nI rested my head on his chest.\n\n\"Tony,\" I said softly, \"it's harder for girls.\"\n\nI looked up at him, ran my fingertips through his chest hair. \n\n\"For you this might be a little thing, just a favour for a friend, something you can afford, something that'll leave you feeling good about yourself.\n\n\"But reputations still count for girls, Tony, and women can be so viciously bitchy. More important, this is about how I see myself. Taking money from a man I've slept with is...\"\n\nI turned my head down, was comforted by his hand moving over my back, gently, compassionately. \n\nI turned my head back up. His lips came down on mine, gentle and soothing.\n\n\"Just give me some more time to think about it, OK? Please?\"\n\n\"I understand,\" he said. \"No pressure, Stephanie. Truly.\"\n\nHe was such a thoroughly decent man, I thought to myself. It would be a lot easier if he was really old or a total jerk. I would still be faced with a decision &mdash; and my looming tuition bill &mdash; but at least it wouldn't be complicated by my liking him.\n\nI hugged him, fiercely, as long as my arms could.\n\n\"Anyway,\" I said, breaking into giggles, \"I told her that, if she ever came out here, she'd have to conform to the local dress code. That shut her down.\"\n\nI actually heard his laugh echo from the wall of the barn. \n\n\"She said no to that, I take it?\" \n\n\"The no was from me.\" I poked him again, smiling.\n\n\"Ah. There go my daydreams of a threesome,\" he grinned.\n\nMy poke was harder this time.\n\n\"Tony! She's not that kind of girl.\"\n\nHe exploded with laughter, sputtering, trying to speak and failing. \n\n\"What?\" \n\nHe finally choked out it. \"She's not that kind of girl...?\" \n\nHe caught my finger on its way back to his ribs. I glared at him in mock indignation and he hugged me again. I allowed myself to be mollified.\n\nWatching the sunset, I wondered what I would have done if he'd said that he'd be pleased to host Marcy and her watercolours. I wasn't sure how ready I was for that.\n\nIt got a little cool once the sun was all the way down. Rather than bring me a blanket or letting me put some clothes on, Tony simply picked me up and carried me inside. He had, no kidding, a bear rug in front of the fireplace, something left over from generations before, from the days when bears were a serious and all-too-common menace to livestock and children.\n\nLowering me onto the rug, he lit a fire, closed the screen in front of it.\n\n\"Warm enough now?\"\n\nThe fur under me was soft and very warm; I just nodded. I held up my hand in invitation, but he stepped back.\n\n\"Would you like something to drink. Stephanie?\"\n\n\"Surprise me.\"\n\nI watched him move about the kitchen. Age, someone said, is a state of mind. Despite his white hair, there was little evidence of Tony's being 'old' in any meaningful way. His step was quick and firm, his form slim and muscular. And he had a masculine assertiveness I found deeply appealing, something that resonated deep within me. \n\n\"Tony? Could you come here for a moment?\" I beckoned him with a curled forefinger. He came over, a curious expression on his face. \n\nI got up on my knees, stroked his flat stomach with the palm of my hand.\n\n\"I know I am here to please you, Tony, but sometimes, I think, it should go both ways.\"\n\nWith that, I started unfastening his belt, paused and looked up at his eyes.\n\n\"Tony, I'm finding that I very much like being bare for your pleasure. It goes against the grain of everything I'm supposed to think, but... I like you watching me, sir. It makes me feel very feminine when I see that look in your eyes.\"\n\nI took a deep breath, wondered if I might be pushing his envelope a little, smiled just a bit timidly.\n\n\"Would it bother you, once in a while, to be on display for me?\"\n\nGrey eyes twinkled down at me. \n\n\"Whatever you have in mind for right now is just fine, Stephanie.\"\n\nNot exactly a long-term commitment, but it would do. I finished unfastening his belt, undid his trouser button. The shorts fell loose and I helped him step out of them. Commando as he so often was, his manhood was still soft. \n\nI leaned forward, kissed it lightly, inhaled his male odor. Something growled deep in my reptilian brain.\n\n\"Thank you, Tony. And yes, I'm still thirsty.\"\n\nHis fingers stroked my hair before he turned and went back to the kitchen. I watched his firm bum as he walked. \n\nHe returned with an herbal tea, hot and sweet, tasting of smoke and cherries. He sat beside me; I ran my fingers over his legs. I'd been shocked when I first saw the scars. It had been a bad crash and his periodic use of a cane in cold weather was understandable. Now, I no longer found them disturbing, but did on occasion want to kiss them, take away the pain he'd once had.\n\nI put my tea to one side, turned on my knees towards him. I stroked his face with my hand. \n\n\"Thank you.\"\n\n\"For?\" \n\n\"For all this.\" I waved my hand around the house, outside at the scenery. \n\n\"And for this,\" I said, running it over his bare chest. I smiled at him, trying to express the happiness he had given me.\n\nHe leaned in. Our lips joined in a long, gentle kiss.\n\n\"I would never have guessed, Tony.\"\n\nHe smiled, ran a forefinger down my nose. \"I would have.\"\n\nI giggled a little at that.\n\nI slid my palm over his chest, feeling his hair, his muscles, a flat nipple. I heard him inhale.\n\nI looked him in the eyes. \"And thank you for your patience with me, Tony.\" I leaned against him, hugged him. \"You're very good for a girl.\"\n\nHis hand pulled my head onto his shoulder, held me tenderly. It was warm on the rug, warmer in my heart.\n\nI hissed happily as I felt his hand cup a boob. He squeezed a little.\n\n\"Thank you for what you have brought me, Stephanie.\"\n\nLooking down, I giggled again at seeing his manhood slowly rise from between his thighs. I pointed.\n\n\"Don't let Pi see that! She'll think it's a snake and try to defend you.\"\n\n\"Pi's smarter than that.\" His hand touched under my jaw, lifted my head towards his. His lips came to mine now, harder, more demanding. His hand switched from one boob to the other, fingers stroking, feeling. My nipples sprang up under his teasing; I could feel my tummy tighten, my pussy quiver.\n\nI gave a slight moan as a gentle finger stroked between my thighs, spread my slickness over swollen labia. I found his cock, squeezed its head, tickled behind his balls.\n\nHe shifted, moved behind me, still kneeling. Strong hands swept over my legs, belly and boobs. My head fell back on his shoulder and I moaned softly.\n\nHis hands around my waist, he lifted me, lowered me onto his hardness. I gave a cry as I slid deeper onto him. His hands met on my stomach, kept me upright. There wasn't a lot of room to move on him, but I tried and clamped down on him inside. He chuckled, pinched my nipples gently.\n\nHe bent at the waist, his chest pushing against my back and I fell forward, landing on my hands. Tony bent over me, kissed my ear and began working his length in and out of my sex. I could help now, pushed back with my hips to meet each of his thrusts, gave a little side-wiggle as he withdrew.\n\nThe position let him reach deeper into me and I gave another cry each time his stiff cock head swept over my G-spot. Then his hand caught my boobs swaying under me, felt for a nipple, pulled on it. I felt a growing monsoon of sensation. His hand continued down over my stomach, found my clitoris. A gentle forefinger circled it, covering it with my own slipperiness. It pressed a bit harder, stroking back and forth now and I came, shuddering, squealing in joy. \n\nStill Tony continued to drive into me. My arms and legs collapsed under me and I fell onto the rug beneath. He shifted his legs to rest outside my hips and continued his lunges into me. \n\nInexorable, irresistible, my orgasm built and grew. I leaned over my shoulder, tried to kiss him, but couldn't match the waves of ecstasy taking over my world; my head fell back to the bearskin. Tony's thrusts grew more powerful and even the soft fur shifting beneath my nipples seemed like fuel on my fire. Crying with happiness now, I called his name, over and over.\n\nHe stopped, his cock jerking and pulsing inside my pussy, before rolling over to lie beside me on the bearskin. I went to sleep on the rug, feeling him slowly soften inside me. \n\nSometime, sometime, strong arms picked me up and carried me to bed.\n\n+\n\nI listened to his slow breathing next to me, felt his warmth. I ran my hand over his arm. Again. He shifted slightly.\n\n\"Tony,\" I whispered into the darkness. I sensed him come awake beside me.\n\n\"Yes?\"\n\n\"Yes.\"\n\n\"Yes, Stephanie?\"\n\n\"Just yes. If you're still willing.\"\n\nHe rolled over in bed. His sidelight came on. His face was mostly in shadow, but it was enough.\n\n\"You're sure?\"\n\n\"Yes, Tony. Yes, I'm sure. I'll be your sugar-baby and thank you.\"\n\n\"I really don't like that term, Stephanie.\"\n\n\"Well, I don't like 'mistress', Tony. And there are worse terms, come to think of it.\"\n\nHe rolled out of bed, went to his dresser. A minute later, he was back, a small blue box in his hand. I recognized the brand; it had specialized in high-end jewellery for over a century.\n\n\"I saw this coming,\" he said softly. His grey eyes were warm enough, but some of the old Tony lingered.\n\nHe hesitated a second.\n\n\"This isn't what it looks like, Stephanie, but it might permit you to dodge some bitchy comments.\"\n\nHe opened the box and my hand flew to my mouth. Inside was an engagement ring, a sizeable single diamond. It was clear that it matched my &mdash; Tony's &mdash; necklace, that he must have had it commissioned specially.\n\n\"Tony,\" I whispered. My eyes went up to meet his. \"We've been through this before. I can't...\"\n\nHis finger rose to my lips.\n\n\"This isn't buying you, Stephanie. I know how you feel about that. Nor am I proposing marriage, but hear me out. You just accepted my offer; now I'm asking you to take this as a symbol of that agreement, for however long it lasts. \n\n\"You can tell your friends and family that we're engaged; I'll back you up if asked. Young-woman-marries-rich-older-man has a long history in our society. There's no shame to it; everybody accepts it. In public, I'll be your fianc\u00e9 and you can give the finger to whoever makes catty remarks. You'd hardly be the first or the only woman planning to graduate with an 'MRS' degree, anyway.\"\n\n\"But then? What happens when I do graduate?\"\n\n\"That's two and a half years off,\" he said. \"We'll talk about it in a couple of years.\"\n\nI picked the ring out of the box. Even in the low light, it flashed and sparkled.\n\nTony had obviously been thinking this sugar-daddy thing through, had foreseen problems and solved them before I could even mention them.  This could work,&hairsp; I thought.\n\n\"Oh,\" he said, \"it's platinum, not silver; it's ok to take it into the pool.\" His smile was knowing, kind.\n\n\"I think I'm still dreaming, Tony.\"\n\nHis long fingers took the ring from me, held it out, just in front of my left hand.\n\nI looked him in the eyes. \"I can give this back?\"\n\n\"Of course. I just said so, but it's yours for as long as our agreement lasts.\"\n\nI smiled, shifted my hand. Tony's ring slid over the ring finger of my left hand. To my wonder, it even fit.\n\nI looked at it, amazed, turned my hand to examine it, flung my arms around his neck, unable to speak.\n\nI loved the touch of his hands sweeping over my hair.\n\n<center>+</center>\n\n<center> Thanks for reading.<br>\n\nIf you enjoyed this tale, please remember to vote or comment.</center>\n\n<center>+ + + + +</center>\n\nFor those who enjoyed Stephanie's tale so far, a sample of Chapter 4:\n\nFor the next half hour or so, Tony simply sat where he was in the sunshine, enjoying my music, the scenery and the presence of two lovely, perfectly bare young women in front of him. Once or twice, he rose and, without touching her, came to stand by Marcy, taking in the fine details as she painted. Each time he did so, he returned to his seat only after coming to me, kissing the back of my neck and gently caressing me as I played. \n\nHe'd placed me behind Marcy, so his fondling and kisses were not obvious, but she turned once and saw his fingers drifting off my nipples. Blushing, she turned away. He'd noticed it, smiled at me, kissed his fingertips and pressed them to my cheek. I knew then where his priorities lay and glowed inside with happiness. In front of me, it took Marcy a minute to restart her painting."
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "nudity",
        "sugar daddy",
        "outdoor nudity",
        "flute",
        "outdoor sex",
        "outdoor love",
        "picnic sex",
        "doggy-style",
        "cmnf",
        "tease and denial"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/past-present-and-future-ch-03"
}