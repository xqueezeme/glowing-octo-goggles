{
    "title": "Reese Ch. 04",
    "pages": [
        "\"We're done!\" Lewis hissed. \"Where is my son?\"\n\n\"As I said,\" Reese said patiently, \"he is safe but I still need you.\"\n\n\"That wasn't the agreement! I did what you wanted...\"\n\n\"Yes you did,\" Reese agreed, \"and you did very well. As a reward I will allow you to talk to your son. I know that you will ask him where he is-he will not be able to tell you. Neither will you be able to trace the call. When you are through talking with him and are convinced that he is well; we will arrange a time to meet. Let me remind you of the rules. You are to tell no one about me. If you do, Edgar will pay the price and then I will come for Jean. I want you to destroy the phone than you are now using and get another one.\"\n\n\"I already have one,\" Lewis said. \"If you wait I'll give you the number.\"\n\n\"You are prepared, I like that,\" Reese said. \"Keep doing what you are doing and all will be well.\"\n\n\"What about Paolo?\" Lewis asked. \"He'll come after me.\"\n\n\"You need not concern yourself with him,\" Reese replied. \"He is in the afterlife.\"\n\n\"He's dead?\" Lewis asked flabbergasted.\n\n\"Yes he is dead,\" Reese replied. \"Get the phone number. I will wait.\"\n\nLewis turned to see Jean looking at him. He could see the questioning look on her face but didn't take the time to address it. Reese was waiting and he had no desire to test the vampire's patience.\n\n\"Not now Jean,\" he said as he hurried past her. \n\n\"Lewis? What's going on and who are you talking to?\" she demanded following him.\n\n\"You may tell her,\" Reese said, \"but remember the rules. If she talks to anyone, Edgar pays and I come for her or someone else in your family.\"\n\n\"I understand... when can I speak to Edgar?\"\n\n\"Soon-do you have that number?\"\n\nLewis went to his office to get the phone glad that he had thought to charge it up and activate it. He gave Reese the number and jumped when he heard the soft click of a disconnection.\n\n\"Hello? Hello!!\" he shouted into the phone.\n\n\"Lewis! What's happening?\" Jean asked.\n\nHe had no choice but to tell her the whole truth.\n\n\"I thought that he would release Edgar and you would be none the wiser. Now he wants me to help him again.\"\n\n\"How do you know this vampire?\" Jean asked.\n\n\"I don't know him, but he knows me. The bottom line is this... Paolo is dead. I took him to that party. If he killed Paolo then he will have no problem with killing Edgar or us for that matter.\"\n\n\"I'll call my father,\" Jean said. \"He'll know what to do.\"\n\n\"Didn't you hear what I said?\" Lewis asked his tone sharp. \"If we call anyone, he'll know. He'll kill Edgar and come after someone else and that someone else will be you.\"\n\n\"How would he know?\" Jean countered. \"We can grab him when you meet with him and make him tell us where Edgar is.\"\n\nJust then the prepaid phone rang. Lewis stared at it as it rang a second and then a third time. Finally he answered it.\n\n\"From now on you will answer when you hear the first ring. Is that clear?\"\n\n\"Yes,\" Lewis whispered.\n\n\"Good- I suppose you told your wife?\"\n\n\"I told her.\"\n\n\"Does she understand the rules?\"\n\n\"I explained them,\" Lewis replied.\n\n\"That isn't what I asked,\" Reese said. \"Does she understand what will happen if she talks to anyone?\"\n\n\"I was in the process of explaining that to her when you called...\"\n\n\"Put her on the phone.\"\n\n\"I'll make sure that she...\"\n\n\"Put her on the phone-now,\" Reese said.\n\nLewis handed the phone to Jean who slowly took it and put it against her ear.\n\n\"Do not talk, just listen,\" Reese said. \"I have your son Edgar. He still lives because your mate has done as I have asked. He will continue to live as long as he and now you continue to do as I ask. If you don't, whatever happens to Edgar is on your hands. If I have to kill him, I will replace him with someone else from your family. Now, put your mate back on the phone.\"\n\nJean numbly handed the phone back to Lewis. Lewis, she realized; was right. The vampire on the phone wouldn't hesitate to kill Edgar or anyone else who got in his way.\n\n\"I believe that she understands,\" Reese said. \"You may now speak with your son.\"\n\n****\n\nEdgar lay on the small bed wondering what was happening at the party. With nothing else to do-he had tired of working on his gifts, he decided to see if there really was no way out. He started with the most obvious place-the door. He stood before it knowing that it was locked, but was it warded? He suspected that it was. Reese had struck him as too meticulous to not only have the door warded but the entire house. The one thing that he did remember from his classes was that wards were nearly impossible to break. Those who could break them were very much in the minority as were those who could make them.\n\nWith nothing to lose, he reached out and touched the door knob surprised that he could actually touch it. He wrapped his hand around it and tried to turn the knob. It simply vanished from his hand and reappeared somewhere else on the door. He spent several minutes trying to touch it again before giving up and actually touching the door which vanished and appeared on the ceiling.\n\n\"Damn it!\" Edgar swore and abandoned the door which was now in its original place. There were no windows that he could see, but for all he knew they were there; but invisible to him. He did the one thing that he was good at-levitation and rose off the floor for a better look. He cursed again when he saw nothing that indicated that there was a window and then he laughed.\n\n\"Edgar you idiot, you're in a panic room; there won't be any windows!\"\n\nHe landed back on the floor with a light thud and continued his inspection of the room. Three hours later he was back at his starting point. What possible points of escape he found had been warded off making him realize something. Even if by some stroke of luck the house was found, they wouldn't find this room. He also suspected that even if he managed to get out of the room he wouldn't be able to leave the house. He was simply stuck and all he could do was hope that his captor was successful in meeting whatever goal he had.\n\nOnce again bored, he wished that he had a book to read. When he looked at the table, there were a stack of books that hadn't previously been there. Edgar blinked. It couldn't have been him or had it been? To find out, he wished for one of his favorite foods...tacos.\n\n\"Well damn!\" he thought as the tacos appeared on a plate next to the books. \"Can I have a beer with those?\" A big smile covered his face as he realized that it indeed had been him that conjured the things. He wondered if he could send things out as well as receive them. If he could, he might be able to reach his father. He thought up a pen and paper and hastily scribbled a note to his father.\n\n\"Father,\n\nI am unhurt and actually rather well cared for. I wish that I could tell you where I am, but I have no idea. All I know is that the house has a panic room in which I am being held. I can also tell you that the room is warded so that even if you do manage to find the house, you won't find the room. Father, I don't know what this person wants you to do, but if it is something that endangers you or anyone in our family-don't do it. I would rather die than to see anything happen to any of you.\n\nYour son,\n\nEdgar\"\n\nHe folded the note, sealed it with a thought and wrote his father's name on it.\n\n\"Here goes nothing,\" he murmured as he sent the note on its way. His heart leapt as the note floated across the room and to the door. \"Go! Go!\" he thought as the note reached the door and.... Burned to ashes and floated to the floor. Edgar let out a small cry of dismay and wrote another note. This time he tried to send it through a wall. Once again it burst into a small flame, the ashes floating to the floor. He tried several more times before giving up and accepting the fact that he wasn't going anywhere until he was released.\n\nThe books and tacos forgotten, Edgar went back to the bed and laid down to think about his predicament. Knowing that he still would be captive even if he had all of his vampire gifts did little to make him feel better. Reese, he decided had been right about several things. A newborn vampire was stronger than he was and would have at least fought to escape and he should have had full command of his gifts long before now. He sat up on the bed and tried to remember the things that they had tried to teach him in class but it had been too long ago.\n\n\"Shit,\" he muttered as he lay back down. \n\nHe woke up to Reese standing in front of him with a phone in his hand.\n\n\"Talk to your father,\" Reese said holding out the phone.\n\n\"Is this a trick of some kind?\" Edgar asked looking at the phone.\n\n\"No trick,\" Reese replied. \"Your father has done what was asked of him and talking to him is the reward.\"\n\n\"You're going to let me go aren't you?\"\n\n\"Talk to your father,\" Reese said and vanished to a corner.\n\n*\n\nEdgar looked around before putting the phone to his ear and speaking.\n\n\"Dad? Are you alright?\"\n\nLewis hesitated. He had half expected a whiny, tearful Edgar to be on the phone. He was pleasantly surprised to hear otherwise. Had Edgar always been this way? It disturbed him to admit that he really didn't know.\n\n\"I'm fine son, how are you? Did he hurt you in any way?\"\n\nIt was Edgar's turn to be surprised. He couldn't remember the last time that his father had called him son or asked about his wellbeing. He swallowed the lump that had formed in his throat before he answered.\n\n\"I'm fine- he hasn't hurt me in any way but dad, I don't think that he's going to let me go. I tried to send you a message but the room is warded. I just wanted to say that if what he wants you to do puts you and mom in danger, don't do it. I'll stay here and die if I have to.\"\n\nLewis felt a tear trickle down his face. He had seriously misjudged his son because of his sexual preference. Unfortunately it took a kidnapping to make him see that.\n\n\"Edgar-I was so wrong about you...I'm so sorry. After this is over, I'll apologize in person but for now, we need to deal with this situation. You're right in that he won't release you and-it would be more dangerous to deny him what he wants than to do as he says. Just know that we'll do whatever it takes to get you out of there. Your mother would like to talk to you.\"\n\nReese let Edgar talk to his mother before reappearing and holding his hand out for the phone.\n\n\"You've been busy,\" Reese commented as he put the phone in his pocket. \"Good.\"\n\n\"I tried to send a note out,\" Edgar confessed. \"As you can see, I wasn't successful.\"\n\n\"I would have been disappointed if you didn't try,\" Reese replied. \"Edgar, I have no desire to hurt you or your family. You are a means to an end-but....\"\n\n\"You will hurt me if you have to, I get it,\" Edgar said calmly. \"What do you want with us?\"\n\n\"I suppose,\" Reese said after a brief hesitation, \"you are entitled to some kind of explanation. I am looking for some people. I have been searching for them for a long time-why doesn't matter. I found one of them tonight and he no longer walks this earth...\"\n\n\"Paolo Rossi... you killed him? Is that why you went to the party?\"\n\n\"Yes to both questions,\" Reese replied. \"I had every intention of letting you go but that changed when I found out that Paolo couldn't help me with the ones that I really need to reach. In other words he was useless to me. Your father on the other hand is in a perfect position to help me because of what he does for a living.\"\n\n\"What are you talking about?\" Edgar asked. \"He plans parties! He...\"\n\nEdgar began to understand what was happening. \n\n\"There are others aren't there? How many more? Do you plan to keep me here until you're done?\"\n\n\"If all goes well, you will be released in a few weeks,\" Reese replied.\n\n\"A few weeks?\" Edgar asked alarmed. \"Are you serious? You can't expect me to stay in this room for a few weeks! What about companionship? What am I supposed to do with my time?\" But he was talking to air. Reese was gone.\n\n****\n\nMarco kept looking at his phone and checking his email. Surely the party was over. He knew that Reese wasn't dead; he could feel his presence although it felt very far away. To kill time, he checked on the vampire news website to see if there was any news on Paolo's party. He wasn't surprised to see that there was nothing, it was much too early. He left that website and went to another one. This one was the equivalent to the human gossip papers. Instead of weekly updates, this ran twenty-four seven. If there was anything on the net about Paolo's party; it would be there.\n\nAfter almost an hour of watching, Marco was about to log off of the site when someone who had attended the party was being interviewed.\n\n\"That was positively the worst party that Paolo has ever thrown!\" A disgruntled female vampire complained. \"He threw everyone out before it got interesting and we couldn't even keep the party favors!\"\n\n\"What do you think the problem was?\" The interviewer asked.\n\n\"Hell if I know,\" the vampiress replied. \"All I know is that the party was substandard. I would have been better off finding my own toys and staying home.\"\n\n\"What about the party favors?\" The interviewer asked. \n\n\"Obviously you have never been to one of Paolo's parties- there are three phases. The first phase is the tame one. The weak of heart come, pick out a party favor that they fuck and then they leave with them. The second phase which is the point where we were all kicked out is the more hard core stage. The toys come out and things become wilder. The third stage which happens to be my favorite is where everyone lets loose and lasts until the last party favor is either turned, owned or dead.\"\n\n\"That sounds-exciting,\" the interviewer said suitably impressed.\n\n\"Oh it is...\" the female vampire agreed. \"Just the thought of it makes me water. Too bad we couldn't take any of the party favors with us. I had my eye on several well hung males.\"\n\n\"Thank you for your time,\" the interviewer said as a way of dismissing the female. \"Well there you have it...\"\n\nMarco logged off of the website and went back to planning the trip to Germany. The problem was that he didn't know how long they would be gone. Erring on the side of caution, he figured on six weeks. If Reese finished his business sooner, he would stay behind and tour the country. He thought about Edgar and wondered if he had ever been to Germany.\n\n\"Damn,\" he swore under his breath. \n\nThe last time they had been together, Edgar had wanted to exchange blood. Things were moving faster than Marco had wanted and he said no. The other reason for the refusal was because he was using Edgar. \n\n\"Stop lying to yourself,\" he grumbled.\n\nThe truth was that Edgar was too clingy. At first he had liked it, but it soon grew old. In retrospect, Marco realized that Edgar didn't know that he was bothered by the clinginess. The fact that he was using him was an excuse as well. Had he been honest with Edgar before he told Reese about him, he may have willingly helped him. Had he exchanged blood with him, Reese may not have taken him. Part of Edgar's being taken was his fault.\n\n\"Some protector I am,\" he muttered under his breath.\n\nThe laptop dinged indicating that he had a message. His eyes closed in relief when he saw that it was from Reese.\n\n\"Marco,\n\nAll is well. Paolo Rossi is in whatever version of the afterlife that one such as him goes to. I know that you are concerned about Edgar-he is well and actually helped me... that is something that will not be forgotten. Before I killed Paolo, I found out that he is connected to the people that are at the top of my list. Once I figured out that he would not be able to help me, my plans for Edgar changed. I will need to keep him for the next several weeks. I can imagine your anger, but it cannot be helped. I give you my word that I have no plans to harm him unless I am given no choice. \n\nI am sure you are wondering why I am not calling you to tell you about this development. I plan to within the hour. I want to give you time to get over your anger and then we can proceed. I am aware that I promised you that you would be able to speak with Edgar- that will happen during our phone call. Also, I want to hear what plans you have made for the trip to Germany and of any news regarding Paolo's death.\n\nReese\"\n\nMarco reread the email three times becoming angrier with each reading while asking why he was so angry. It wasn't as if Edgar had been anything more than a casual fling he thought completely forgetting his earlier musings.\n\nBy the time Reese called, he was relatively calm and ready to accept what Edgar was to him. \n\n\"Why did I make that so hard?\" he asked out loud.\n\n\"Reese,\" he said as soon as he answered the phone.\n\n\"Dante? I mean Marco?\"\n\n\"Edgar? Are you alright?\"\n\n\"I'm ok... are you? Does he have you captive somewhere too?\"\n\n\"Uh no, listen Edgar; we need to talk. We don't have much time but I know the vampire who has you. Just do as he says and you'll be fine.\"\n\n\"What? You know him? How? Are you lovers or something?\"\n\n\"No we're not lovers-he's my maker. I'm the reason why you're there. It's too much to explain now, but Edgar, I'm sorry and I hope that you can forgive me for that amongst other things.\"\n\n\"I don't understand... why is it your fault that I'm here?\"\n\n\"I... I gave him the information that led him to your father-I wanted to warn you but it was safer for you if I didn't.\"\n\n\"You knew about this and you didn't tell me?\" Edgar asked in disbelief. \"You're working with him?\"\n\n\"Edgar...\"\n\n\"He's gone,\" Reese's calm, deep voice said.\n\n\"Put him back on! I need to explain things to him.\"\n\n\"He isn't ready to listen...\"\n\n\"This is your fucking fault!\" Marco screamed at him.\n\n\"Is it?\" Reese asked his tone cool. \"Was I the one who denied what he was?\"\n\n\"But you knew!\" Marco replied. \"You knew...\"\n\n\"Yes, I knew but you were the one in denial. I specifically asked you about your feelings for him and you lied. Be that as it may, I kept my word and I haven't harmed him. In fact, I think that he would tell you that I have been treating him better than his own father has. Now we have things to discuss.\"\n\n\"You really are a bastard,\" Marco said bitterly.\n\n\"The sooner we begin planning, the sooner this will be over,\" Reese replied nonplussed. \"What have you found out?\"\n\n\"News of Paolo's demise haven't hit the net yet but word that his party was a flop has,\" Marco said his anger still evident. \"As far as the trip goes, I planned for six weeks. The guest list for the gala still isn't up and neither is the date and time for the party. The guest list and the details of the party won't be announced until just before it happens. I booked our flight for tomorrow night-Reese what about Edgar? Are you just going to leave him there?\"\n\n\"What is he to you?\" Reese asked.\n\n\"He is mine,\" Marco replied.\n\n\"I will call you back.\"\n\nReese hung up, looked at Edgar and vanished to the kitchen of the house to think. Marco's claiming of Edgar changed things. As focused as he was on his goals, not even he would keep mates apart. He would just have to find another way to keep Lewis on board.\n\n****\n\nElena for the most part had been successful in making her mate and owner forgive her for her insolence- she thought. She catered to his every sexual whim eagerly and without complaint. Not once did she beg for permission to come even though her body screamed for it. She was so sure that she had gained forgiveness... so certain-until he spoke.\n\n\"Why do you think that you have been forgiven?\" he asked as he shoved her away from him. \"Do you think that because you did what you are supposed to do is reason enough?\"\n\n\"No... yes my lord,\" she replied amending her answer in the hopes that he would reward her for her honesty.\n\n\"How many times have I punished you for thinking of him?\"\n\n\"I... I don't know my lord,\" she replied. Again; it was an honest answer.",
        "\"After each punishment, I granted you forgiveness and yet you still think of him.\"\n\n\"No my lord... it is only on occasion...\"\n\n\"And now you negate your honesty with a lie,\" Cristiano interrupted. \"I know each and every time he crosses that pretty little mind of yours. Do you understand what that means? It means that you are still giving what does not belong to you away. Your thoughts should always be on how you are going to please me. Do you agree?\"\n\n\"Yes my lord,\" Elena replied her mouth dry. All thoughts of coming were gone. It was clear that Cristiano had not forgiven her as he had in the past.\n\n\"My question to you is this,\" he said in a deceptively soft voice. \"What will it take to erase the human peasant from your mind? Do I need to burn my name across your forehead? Do I need to fuck you until my name is an emblem on your brain? Tell me my sweet, what will it take?\"\n\n\"My lord, please... it was a lapse in judgment. As I said before, I only think of him as a mother would think of her child.\"\n\n\"Again you lie,\" Cristiano said. \"A mother does not become wet at the thought of her son. Do you think that I do not know what happens during the times that I am away? I give you permission to pleasure yourself and who do you use to fuel your passions? It isn't me so once again you give away what isn't yours to give.\"\n\n\"Cristiano-please... It was only a few times and... and ...\"\n\n\"And I never punished you for those times. I am regretting my decisions on that... prepare for your punishment.\"\n\nElena opened her mouth to speak, closed it and then went for broke. She was already in trouble and her punishment would be harsh. She spat out the question that she had always wanted to ask.\n\n\"Why was he so special that you would mistreat me so? He was nothing but a human male with who I took my pleasure! I will concede that I did it against your wishes...\"\n\n\"If he was just a human male that you took pleasure from, why is he still in your mind?\" Cristiano shot back at her. Why do you risk my wrath and punishment to steal thoughts about him? Tell me that my sweet, insolent mate. \"You have taken pleasure with many human males over the centuries and you think of none of them. So you tell me, what makes him so special?\"\n\nElena realized that she should have kept her mouth shut. Cristiano wanted an answer- it was an answer that she didn't have. She tried to backpedal, but he wouldn't allow it.\n\n\"What? Do you have no response? But my dear, I demand one. What is the human peasant to you? Oh... forgive me- you turned him. That begs a question... why haven't you tried to reach him? As his maker you have that ability... you may answer and it had better be the truth.\"\n\nWhen she didn't reply, two guards appeared on either side of her.\n\n\"Prepare the crimson room and tell the servant girls to get her ready. I will be there by evening.\"\n\nElena's heart beat in terror. All of their homes had a crimson room but it had been over a century since she had been inside of one. The infraction that earned the visit had something to do with the male that she had turned. She whined as she thought about the things that had been done to her there. As she was taken away, she asked herself the same question that Cristiano had: why couldn't she keep the peasant out of her mind? \n\nCristiano watched as Elena was taken away. For the most part he was pleased with her or had been until she disobeyed him and fucked the human peasant. She had always been a little willful, but he enjoyed that part of her and took great pains not to destroy it. Now he was going to have to- there was no choice other than to kill her. Whether she knew it or not, he was probably saving her life. This would be the last ditch effort to keep his mate and slave at his side- or so it would appear to others.\n\nHis curiosity about the peasant however was piqued. He knew for a fact that he wasn't dead because if he was, Elena wouldn't be thinking about him. So where had he been all of this time? What had he been doing? Had he mated or was he thinking about Elena? Somehow he didn't think so at least not in the way that Elena might have been hoping for. He had heard about the man's screams as Elena took him against his will. The one thing that he did agree with her on was the old woman. Elena had seen something that he hadn't and he had ignored her warnings. It wasn't until the old woman had betrayed them that he saw that Elena was right. As her reward, he allowed Elena to drain the old woman dry and then feed her to the wolves that guarded their property. But it was too little too late. The humans were at their door at the break of dawn. He never did find out what had become of the wolves that were supposed to protect them.\n\nCristiano stood up and stretched. It was going to be a long day and night of pleasure for him, but quite the opposite for Elena.\n\n****\n\nVangie slept for most of the twenty-four hours after the change. Donatello stayed close in case she wanted or needed anything. He was amazed at how well she did with the pain. He had seen males cry and plead for death at the worst of it. But not Vangie. Once she understood what was happening, she seemed to embrace the pain instead of fighting it. \n\nDonatello gently washed her face and roused her enough to feed her a small amount of blood. He looked around to make sure that he was ready for her when she woke up. When she was back to sleep, Donatello turned on his laptop. It had been a few days since he had checked the news or been to the website.\n\nGlancing at Vangie, he logged into the news site. There was nothing of interest until a news bulletin flashed across the screen. \"Paolo Rossi missing!\" Donatello listened as the vampire reporter who in his opinion was much too pretty to be a male talked rapidly.\n\n\"No one knows where he is, but not only that-his entire household is gone as well! If you will recall, I interviewed a female who attended his party. According to her, the party was substandard and Paolo was not himself. There is some speculation that his house staff was somehow involved, but most don't believe it....\"\n\n\"He's dead,\" Donatello whispered and then went back to the broadcast.\n\n\"The other perplexing thing is what happened to all of the humans that were to serve as entertainment? The vampiress that I interviewed said that the party favors as Rossi called them stayed. There were no live humans at the house so where are they? I happen to be of the opinion that Rossi is in the afterlife. I also believe that it was another vampire who did this horrible thing. Why? I can only guess but Paolo had his share of enemies. What's so ironic about this is that the technology that he trusted so much failed him...\"\n\nDonatello stopped listening. A feeling of dread settled in the pit of his stomach. He fought the urge to pack up and leave, but he promised Vangie that they would stay- that he was done running. Still unsettled, he logged onto the Borcelli website. As he suspected, there were no new details about the gala. Like Paolo, he had only been invited to one and it was the same one as Paolo had attended. He remembered how pleased he was to have received the invitation and wondered why he was invited. It wasn't until a long time afterwards that he figured out why. That night was yet another thing that he was ashamed of and something that he would have to tell Vangie about.\n\nA low soft moan pulled his attention away from his thoughts. Vangie's eyes were still closed, but she had kicked the sheet off exposing her naked body. Donatello watched transfixed as her hands sensually stroked her body starting with her face. When she reached her breast, she pinched her nipples until they were hardened points and then she plucked at them. He started to call her name but didn't- he wanted to see what was going to happen.\n\nHe sat the laptop aside and slowly changed his position so that he could watch and have access to his cock which now tented the front of his lounge pants. With a thought the pants were gone and his hand was loosely wrapped around his cock. His member jumped and then began to leak when he heard Vangie whisper his name. But still, he made no move toward her.\n\nHe took a sharp breath when her fingers disappeared into her mouth and she began to suck on them only pulling them out to flick the tip of her tongue across them. He realized that she was dreaming of sucking him. It was all that he could do not to replace her small fingers with his now throbbing cock, but he held off.\n\nVangie removed her fingers from her mouth and circled her erect nipples with them moaning when she ran them across the tips. Donatello was stroking his cock enjoying the vision before him. While he loved Vangie's breasts, just this once he wished that they were large enough so that she could suck on her own nipples.\n\nHe gave his balls a hard yank when one of Vangie's hands made its way to the vee between her legs and tangled in her coarse pubic hair. He yanked again when a finger slipped between the lips of her pussy and began to rub in fast, hard circles. Finally, he couldn't take anymore. He moved so that his lips were above a nipple, took it into his mouth and began to suck on it.\n\nVangie arched into him almost throwing him off the bed as she continued to finger herself. Donatello moved so that his cock rested on her leg and began to grind against it.\n\n\"Oh god... in me!\" Vangie screamed with her eyes still closed. \"In me!\"\n\nDonatello wasted no time in complying with her demands. He released the nipple, stretched out on top of her and slammed into her. Vangie reached around and grabbed his ass and held him in place as she bucked and writhed beneath him. When she came, it was with a screech that made Donatello's ears ring, but she didn't stop. Donatello lost track of how many times she came and just went with it. Finally, she let him go and seemed to go into a deeper sleep. He slowly moved off of her, took her into his arms and rested.\n\nWhen he opened his eyes, Vangie was awake and looking down at him.\n\n\"Is it over?\"\n\n\"Yes darling, it's over. You are now as I am.\"\n\n\"Was I horrible?\" She asked concerned.\n\n\"Sweetheart, don't you remember anything?\" Donatello asked not sure if he should be concerned or not.\n\n\"Not really... why? What did I do?\" she asked anxiously. \"Did I hit you or call you names?\"\n\n\"No, in fact you did better than I did when I was turned,\" Donatello replied. \n\n\"What about the need to make love right afterwards? Is there something wrong that it didn't happen?\"\n\nThe anxiety on her face told him that she really didn't remember. \n\n\"Vangie, it happened while you were asleep. Touch yourself and you'll see what I mean.\"\n\nVangie looked down and saw that her nipples were swollen like they always were after they had made love for an extended period of time. She touched one and winced. They were sorer than they usually were after such sessions. Next she touched her mound and was shocked that it was saturated with their combined fluids.\n\n\"See? It happened. I'm sorry that you don't remember it, but trust me when I say that it was beyond phenomenal. In fact, I hope that we can do it again when you are awake.\"\n\n\"How could I sleep through that?\" Vangie asked perplexed.\n\n\"I don't know, but I'm glad that you're awake- are you hungry?\"\n\n\"I think so... do I need blood?\"\n\n\"I've been feeding you the entire time that you were asleep, so there's no need unless you are still hungry for it.\"\n\n\"I think that I'm okay... I want to try eating food,\" Vangie said.\n\n\"Alright, but take it slow. It may be a few days before your new system can tolerate human food,\" Donatello said as he handed her a small piece of buttered bread.\n\nVangie took the bed and crinkled her nose. The smell was much stronger than she remembered although it wasn't unpleasant. She held the bread for several seconds before taking a small bite and chewing it. She swallowed and waited for the anticipated nausea to come. When it didn't happen, she took another bite of the bread and then another until it was gone.\n\n\"Well, I guess that answers that doesn't it?\" Donatello asked. \"I think that you should wait until later to eat anymore. Are you ready for a bath?\"\n\nVangie leaned back in Donatello's arms as the hot water of the Jacuzzi bubbled around her easing the soreness of her muscles. Even though he was being attentive, she sensed Donatello's unease and asked about it.\n\n\"What happened while I was asleep?\n\n\"Let's eat first and then I will tell you,\" Donatello replied as he massaged her shoulders.\n\nHe couldn't believe it, but yet he did. Paolo Rossi was missing-no not missing- dead. Someone had killed Paolo Rossi in his own home. The feeling of unease in his stomach grew as he wondered who would be next. The bigger question was who killed Rossi. He thought back to the ones that had been turned with him and how many of them were still alive. He counted only two and that included him. The other two were their makers-the Borcelli's.\n\nSuddenly he realized that the ones that had died had been killed by the same person. He didn't know how he knew that, but he did. That meant that he was being searched for too. He hadn't been wrong after all. The danger hadn't been imagined. His first thought was of Vangie and what would happen to her if they were found. The best case scenario would be that she was killed instantly. The worst case scenario was that whoever was after him would keep her alive to use as he saw fit. Images of Elena Borcelli and Lisbeth crossed his mind. He couldn't allow that to happen. He needed to teach Vangie how to kill herself in the event that they were captured.\n\nHe tightened his arms around her as everything that could be done to her flashed across his brain. He would kill her himself if he had to. He held Vangie even closer making her squeal. He loosened his hold and apologized.\n\n\"Donatello, what's going on?\" Vangie asked.\n\nThere was no reason to avoid telling her everything now. Both of their lives could depend on it and now was as good a time as any since they wouldn't be going out for several days. Donatello helped Vangie out of the tub and dried her off before wrapping her in a dry towel.\n\n\"Let's go to the living room,\" he said. \"I don't want to discuss unpleasant things where we make love.\"\n\nHe took Vangie's hand and led her to a sofa in the living room. He sat down and then pulled her into his lap.\n\n\"Let me begin by saying that I am no longer that man that I am about to tell you about. That man died when he did something horrible. I am not proud of what I was and if I could go back and change it, I would. I would not have taken the Borcelli's up in their offer-but I'm getting ahead of myself- are you comfortable?\"\n\nHe waited until Vangie was settled and began to tell her about himself.\n\n\"I was born to a wealthy family- although we weren't always wealthy. The first physician in my family was a man of the people. According to my father, he cared not if the person had money or not- all that mattered was that they needed help and if he could help them he did. As the years passed, my family became less concerned about the welfare of the less fortunate and turned their attention to those who could afford to pay with money instead of with chickens or eggs. The story goes that one of the senators had an epileptic fit and one of my ancestors aided him. He gave him a small amount of opium which calmed the seizures and was thus declared a hero. From that moment on, we never attended the ones who truly needed our help again.\n\nWe moved to larger homes and began to live more lavishly- we had completely forgotten where we had come from. As time passed, we became just as gluttonous as the senators and idle rich that we served. We gave them whatever they wanted even though we knew that it was harmful-we created drug addicts. It was easier to give in to their whims than it was to try to reason with them. Our coffers were full and we wanted for nothing. All we did was attend lavish parties and got paid for doing nothing.\n\nVangie... there were people lying on their death beds in pain that a bit of opium would have given comfort to... there were people with no food on their tables and yet we were having food fights. When food was passed out to the people, it was often spoiled and not even fit for hogs-that was the kind of man and physician I was.\"\n\nVangie didn't say anything, but kissed his cheek and stroked his face.\n\n\"Thank you my dear, but I am not telling you this so that I can be comforted. I don't deserve comfort any more than I deserve you. Anyway, things were going rather well for us- we were on permanent on retainer for several of the senators and their families... what more could we want? But it wasn't enough. It became easier and easier to ignore the sufferings of our fellow man.\n\nOne day, a sickness came. At first I ignored it. I thought that it was the peasants with their over active imaginations and claims that god was punishing us. Who had ever heard of a disease where the neck swells? I should have investigated but I didn't. Chances are that I wouldn't have been able to do anything to stop it, but I will never know will I?\n\nSoon the bodies were piling up in the streets. The potters fields were filled to capacity and something had to be done. So someone started burning the bodies. One would think that with all of the suffering going on around me that I would have done something-anything, but I didn't. My first responsibility was to the Paolo Rossi's of the city.\"\n\n\"Donatello... you're right, you are no longer that man. You have to know that there was nothing that you could have done even if you had tried.\"\n\n\"That isn't true,\" Donatello said with a sad smile. \"There were those who were working to try to find the cause of the illness. There were priests who at great risk to themselves who were going into homes of the dying and caring for them. There were people who had almost nothing who were sharing with their neighbors. There were people taking in children who lost their parents. I had more than enough money- I could have taken in several of those children. I could have given opium to the priests to administer to those who needed it. So do I know that I couldn't have done anything? No I don't but I could have eased the suffering of some of them.\n\nOf all of the people that begged me for help, I remember one vividly. If I close my eyes I can still see him standing before me and begging me to help his baby daughter. But it was too late. Her neck was already swollen. I can still see him with tears running down his face, \"I have money,\" he told me. It was only a few coins and he was probably going to use it to buy a bit of meat or bread for their evening meal. I asked him once again about the child's symptoms-when he repeated them to me, do you know what I said to this grieving father? I told him that he didn't need me and that he needed a priest. I was so... heartless.\n\n\"Why do you remember this one man?\" Vangie asked.\n\nDonatello paused before answering. It was something that he had wondered about himself and now he thought he knew the answer.\n\n\"Even as he begged for my help, there was a dignity about him. Had he been born in another time or place, he would have been something great. He also did something that I believe he had never done before- he dropped to his knees, wrapped his arms around me and begged. He abandoned all dignity offering himself as my servant if only I would help his child and still I walked away. He followed me for a short time and I gave him a small amount of opium to help ease the child's suffering. I saw him once more after that night. But even after all of this time he is never far from my thoughts.\"\n\n\"You place a heavy burden on your shoulders,\" Vangie said softly. \"There were others who failed to help as well. What about the senators that you worked for?\"",
        "\"I am responsible only for myself and my lack of action,\" Donatello replied. \"I cannot use the excuse that there were others, but I'm afraid that there is more. After I left the man, I went to Paolo Rossi's home because I had been summoned- I was going there when the man stopped me. I had expected to find him gravely ill, but what I found was a party. I couldn't believe it! There were two senators that had been on their death beds the day before eating and drinking! How can this be? I asked Paolo. Is there a cure for this illness? I looked around to see bodies on the floor with gaping wounds in their necks and groins. What is this madness? I asked.\n\nI cannot die! Paolo screamed and then laughed. How would you like to live forever? I thought that he was drunk-except he wasn't. I took a closer look at him and noticed that he was pale. Then I noticed the small holes in the side of his neck. The first word that came to mind was vampiro, but I was a man of science and did not believe in such creatures. Before I knew it, I was being offered the chance to become an eternal being. It sounded so promising ... I told myself that if I converted, I would have an eternity to make a contribution to mankind. You see-I was already feeling guilty for my past actions.\"\n\n\"What was the catch?\" Vangie asked. \"There's always a catch-what did you have to promise in return for your immortality?\"\n\n\"Nothing on the face of it,\" Donatello replied. \"I had to agree to help them if the need arose. I could not ask questions- I was only to obey. At the time it seemed like such a small thing but I now know that it wasn't. I spend each day wondering when I am going to get a summons. That is why we moved so frequently although it was pointless. As my makers they can find me anywhere.\"\n\n\"Who are they?\" Vangie asked.\n\n\"The Borcelli's- Cristiano and his mate Elena. They give the appearance of being benign but they are as malevolent as they come. It is them that I was running from, but I believe that there is another who is looking for me, but once again, I am ahead of myself. The next thing that I am about to tell you will confirm that I am a horrible man.\n\nYou are aware of the galas- what I haven't told you is that the Borcelli's are the hosts. I was invited to one gala as were the others who were turned with me that night. Elena Borcelli is a beautiful woman. Like you are not only my mate, but my slave; it is the same for her and Cristiano. Cristiano is a cruel master as Elena found out at the gala. Apparently, Elena disobeyed Cristiano by sleeping with a human male. He might have forgiven her for that if she hadn't turned him. I don't know the entire story, but there was a reason why Cristiano didn't want this particular male turned.\"\n\n\"Oh god... Vangie whispered, \"What did he do to her?\"\n\n\"I don't know what he did to her before the gala, but I can tell you what happened to her during the gala because-I was a part of it as was Paolo Rossi and at least twenty others. Vangie-we used her in every way imaginable. I was drunk on my new life and thrilled that my cock could stay up all night. I was thrilled to have a chance to use it and it didn't matter who I used it on. Cristiano allowed us to do something to her that was rare- we were allowed to come inside of her...\"\n\n\"You did that?\" Vangie asked shocked and appalled. \"Twenty of you abused that poor woman? What if she had gotten pregnant? I know what you're saying about your new life but Donatello...\"\n\n\"I know and it's not something that I'm proud of,\" Donatello said. \"It is one of many things that I wish that I could change. That was the first and last gala that I had been invited to- we were invited there just as punishment for Elena. Cristiano knew that we hadn't yet adjusted to our new strength and used us to hurt his mate.\"\n\nVangie shook her head in disbelief that her mate could have done something as horrific as he had just described and then there was Lisbeth...\n\n\"I know that there's more, but I need a break,\" she said fighting back tears.\n\n\"Of course, are you hungry?\"\n\n\"I can't eat right now... I'll be back later.\"\n\nDonatello watched Vangie walk away. She loved him and would be back but he knew that he had hurt her. He questioned his wisdom in telling her about Elena, but she had to know. While he waited, he went to the office and logged onto the desktop. He went to the news site first hoping for more news of Paolo.\n\n\"Here's the scoop,\" the pretty faced male reporter said. \"Paolo Rossi is still missing. Investigators did find a pile of dust in one of the basement playrooms, but aren't sure that it belongs to Rossi. My guess is that it's him. All of his servants are still missing as are the party favors that didn't leave with guests... wait... It has just been confirmed that the dust is indeed Paolo Rossi! The next question is --who killed him? Stay tuned and I'll keep you updated...\"\n\nDonatello logged off of the site and went to the Borcelli web site. There was still no guest list, or any other details listed. He half wondered if there would actually be a gala. As far as he was concerned, he could have cared less. He wasn't going even if he was invited- but then he wouldn't be invited-he would be summoned and there was no getting around that.\n\nHe needed to relax. He logged onto the chess website and was glad to see that he had several games to catch up on. Before he started, he looked through the list hoping that his favorite opponent had played. He wasn't disappointed. He had played not more than three hours ago. Donatello started with the easiest opponent and ended with his most challenging one- his favorite opponent. Before taking his turn with him, Donatello went to check on Vangie. She was sitting on the back porch looking out into the darkness. \n\n\"I need more time to process things,\" she said without looking at him.\n\n\"I know dear heart,\" Donatello replied. \"Let me know when you are ready to continue.\"\n\nHe could have forced it, but this wasn't the bedroom where he had control. They were now equals and he had to allow her time to process what she had been told. He went back to the desktop and began staring at the board. He saw a move, but didn't take it-it was too easy. He looked again and saw the trap. If he had taken it, he would have been forced to expose his queen.\n\n\"Nicely played,\" Donatello murmured as he examined the board for another move. He found another move, hesitated and just as he was about to take it; he saw another trap. \"Aren't you the smart one?\" he muttered under his breath. Once again, he wondered about his opponent. Whoever it was --they were obviously brilliant. He toyed with the idea of sending a message but nixed the idea. He was taking enough risks as it was. He felt Vangie standing behind him and waited to see what she would do. If she touched him, all would be well. If not...\n\nHe felt her indecision and he understood. It was one thing to not help those in need and another to have taken part in the abuse of another. She stood behind him for several long minutes before she placed her hands on his shoulders. Donatello let out a breath that he didn't know he was holding and placed his hands on top of hers.\n\n\"Let's finish this,\" Vangie said hoping that there were no more horrific secrets. It had taken her some time to reconcile the man that Donatello was with the man that she knew him to be. \n\nDonatello logged off and followed her to the living room. When they were sitting, he took her hands in his, brought them to his lips and kissed them.\n\n\"Thank you for understanding...\"\n\n\"I don't understand,\" Vangie interrupted. \"I don't understand how you could do what you did and I don't think that I ever will. The bottom line is that I love you and the man from that time is gone now tell me the rest of it.\"\n\n\"So,\" Vangie said when Donatello was through, \"You think that the same person killed Rossi and some of the others who were turned with you.\"\n\n\"Yes and I believe that whoever it is will come after me as well.\"\n\n\"Do you have any idea of who it might be?\"\n\n\"No,\" Donatello replied, \"It could literally be anyone including one of us that were turned that night. There is only one other than myself left and the Borcelli's\"\n\nVangie began tapping her fingers on his leg-something that she always did when she was thinking. Donatello couldn't remember when she started doing it, but at first it had annoyed the hell out of him. It hadn't taken him long to realize that it helped her to think and he stopped complaining about it. He loved watching her during those times. Her eyes were closed and her face scrunched up so that her nose crinkled. He watched her chew her lower lip unaware that her fangs had descended. \n\n\"Sweetheart...\"\n\n\"We have to figure out who it is,\" she said suddenly. She frowned, touched her lips with her fingers and then looked at them. \"I guess I'd better be more careful.\"\n\nDonatello leaned forward and licked her lips clean before replying.\n\n\"You will learn to control that-what do you mean that we have to find him?\"\n\n\"We have to find him before he finds us. Maybe if we talk to him... and do you want to know what I think? I think that if he had a choice between you and the Borcelli's he'd choose them.\"\n\n\"What are you proposing?\" Donatello asked.\n\n\"I propose that we find him-and it is a him and offer to help him get rid of the Borcelli's...\"\n\n\"Vangie...\"\n\n\"Hear me out-you're at the beck and call of the Borcelli's right? They could call you at any time and demand that you do something for them and you would have no choice but to obey am I correct?\"\n\n\"That's true, but Vangie the Borcelli's are centuries older than I am. Not only that, how do you plan to find this person? Where would you even begin?\"\n\n\"Let me worry about that,\" Vangie replied her eyes glittering. She loved puzzles and this was a huge one. Her gut was telling her that if she didn't solve it, she would lose Donatello and that was unacceptable.\n\n\"What do you need from me?\" Donatello asked oddly calmed by Vangie's take charge attitude.\n\n\"I need you to run your programs over the laptops and desktop-better yet I need another laptop. I need one with every bell and whistle imaginable and with the top of the line security system. I'll merge your system with that system and create a double wall of sorts-what?\" Vangie asked when she realized that Donatello was looking at her.\n\n\"I... nothing... I had forgotten just how brilliant you are, but Vangie this is a dangerous game that we're playing. If the Borcelli's even suspect that I'm betraying them-we're both dead.\"\n\n\"If we sit here and wait for him to find us we're dead anyway. I don't know about you, but I would rather try to find a way out of this.\"\n\n\"Agreed,\" Donatello said after a few minutes. \"But before we continue, you need to feed.\"\n\n\"Okay,\" Vangie replied absently. She was already making plans on how to find the unknown threat.\n\n*****\n\n\"What are we going to do?\" Jean asked Lewis.\n\n\"What can we do but follow his directions?\" Lewis replied. \"Edgar is safe for the moment...\"\n\n\"I still think that we should call my father-how would he know?\" Jean asked.\n\n\"Jean-listen to me,\" Lewis said with patience that he didn't feel. \"That vampire went to party, manipulated things so that he could get Paolo alone. He kills him and gets away with it- What does that tell you about him?\"\n\n\"We could turn him in-murder is punishable by death. We could make a deal with him-tell him that he'll live if he tells us where Edgar is.\"\n\n\"Jean-no. I forbid you to contact your father or anyone else for that matter. For one thing, he would know. He wouldn't hesitate to kill Edgar and do you know who he would come for next? You! Edgar told me that the room he's in is warded. That means that even if we found the house, we still wouldn't find him. I would also bet that the house is warded too. So even if we captured this Giovanni Barresi, we still wouldn't find Edgar. Our best hope in getting him back is to do as we're told.\"\n\n\"I think that you're giving this Barresi character too much credit...\"\n\n\"And you didn't meet him!\" Lewis snapped. \"He's a man on a mission and that makes him even more dangerous. I repeat- do not contact your father and do not talk of this to anyone.\"\n\nJean agreed albeit reluctantly. \n\n*****\n\nReese took his turn on the chess website and logged off. He had finally come up with a compromise regarding Edgar. He needed him-that was all there was to it. Without Edgar, Lewis wouldn't help him. The question was how much did he really need Lewis? All he really needed was to get invited to the gala... once that was done, he wouldn't need Edgar, but what was to stop Lewis from reneging? To complicate things even further, Marco had claimed Edgar. If he released Edgar, Marco would die protecting him.\n\nReese logged back on to the chess website and pulled up an empty board. He began to move pieces onto the board. Each piece represented someone. The black king and Queen represented the Borcelli's; the white King and Queen represented him. Edgar, Lewis, Jean and Marco were pawns. He realized that he had no knights or did he? He was sure that the Borcelli's did and he needed to find out who they were. As far as pawns... maybe the doctor and Emilio-but who else?\n\nLooking at the chessboard helped. Finally, he came to a decision. He was going to let Edgar go, but not before he had an invitation to the gala in hand. As much as he wanted to, he wouldn't be able to go as himself. It was going to be hard enough avoiding Elena. He was certain that she would know him if only by scent. There had to be a way around that too.\n\nBut first things first-Edgar-what to do about Edgar...let him go, but he had to do something first. He picked up the phone and called Marco.\n\n\"What?\" Marco snapped.\n\n\"We need to discuss Edgar,\" Reese replied ignoring Marco's tone.\n\n\"What about him and why do you want to include me now? You didn't care before.\"\n\n\"Are you going to pout like a spoiled brat or are you going to listen to my proposal?\" Reese asked his tone icy. He had no time to soothe hurt feelings.\n\n\"I'm listening,\" Marco grumbled.\n\n\"I have been trying to get around needing Edgar to continue my plans....\"\n\n\"You're not going to release him are you?\" Marco asked.\n\n\"Do not interrupt me,\" Reese said sharply. \"As I was saying, I need Edgar. There is no getting around it. I am going to release him into your care...\"\n\n\"You are?!\"\n\n\"Marco...\"\n\n\"Sorry... continue,\" Marco said contritely.\n\n\"But that does not come without its risks. I will present these risks to you and you need to think very carefully before you reply. First, I will take some of Edgar's blood-that way I will always be able to locate him no matter where he is. Secondly-he will be your responsibility. If you try to run off with him-I will find you. If you try to betray me in any way-I will find you and kill you both. While he is with you, he will be allowed one phone call per day to his father and it will last for no longer than a minute. If you decide to do this, he goes to Germany with us. Just so that you are aware, he will be a walking ward.\"\n\n\"A walking ward?\" Marco asked. \"What in the hell is that?\"\n\n\"I will ward Edgar as well as the house,\" Reese explained. \"He will be visible only to you and me.\"\n\n\"So we could go out?\" Marco asked his voice filled with hope.\n\n\"You could,\" Reese replied, \"but I wouldn't suggest it. In a matter of weeks this will be over and you and Edgar will be free to do as you wish. Think about it- I will call you tomorrow.\"\n\n\"Reese- can I ask you something?\"\n\nMarco took Reese's silence as consent.\n\n\"What are you going to do when this is over? Will you kill yourself? Your entire existence has been about finding these people and now it's almost over. What are you going to do?\"\n\nReese hadn't thought about it and he wasn't going to think about it now. There was too much to do. Instead of telling Marco this, Reese hung up. He wasn't going to say anything to Edgar or his parents until Marco had given him his decision. Reese already knew what he was going to decide, but he had to hear the words. When they talked again, he would go over the terms again-there would be no room for misinterpretation.\n\nTo pass the time, he logged onto the news site to see what updates there were on Paolo Rossi. He didn't react when they announced that they found ashes and then later confirmed that they belonged to Rossi. He didn't feel gratified that he had killed; the gratification came from the fact that one more name was crossed from his list. Marco's question popped into his mind. It was a valid question, but still one that he didn't want to think about.\n\nHe was saved from further thought by the sound of his cell phone ringing.\n\n\"What is it Marco?\n\n\"I'm in and before you ask, I understand the terms.\"\n\n\"Do you understand that if you betray me in any way that both you and Edgar will die?\"\n\n\"I just said...\"\n\n\"Answer the question,\" Reese demanded.\n\n\"I understand,\" Marco replied.\n\n\"Do you understand that you are to speak to no one of this?\"\n\n\"Yes.\"\n\n\"Do you understand that you cannot tell Edgar's family where you are?\"\n\n\"Reese, I understand!\" Marco exclaimed now frustrated. \"I will not betray you! I will not do anything to stop this fucking suicide mission that you're on. I will continue to help you as I always have! What else do you want from me?\"\n\n\"That will be all,\" Reese said. \"Add Edgar to our reservations, but use an alias that does not begin with the same first and last letters as his name.\"\n\nReese hung up without saying goodbye and vanished to the panic room. Edgar was lying on the cot staring at the ceiling. He sat up when he sensed Reese in the room.\n\n\"You are improving,\" Reese said.\n\n\"When are you going to let me go?\" Edgar asked ignoring the compliment.\n\n\"I have a proposition for you,\" Reese said as he pulled a chair up in front of the cot.\n\nEdgar listened without interruption and didn't say anything for a long time after Reese was finished.\n\n\"So,\" he said finally, \"I'm still a captive but instead of this room, it will be in a pretty cage.\"\n\n\"You could look at it that way,\" Reese replied. \"But in the pretty cage you won't be alone.\"\n\n\"Dante-I mean Marco will be there?\"\n\n\"Yes and your fates are tied together. If he betrays me because of you, then you both die.\"\n\n\"Has he agreed to this?\" Edgar asked his heart pounding.\n\n\"He has, but Edgar-you need to understand that his life is in your hands. If you escape, I will find you and Marco will pay the price.\"\n\n\"And what about my family?\" Edgar asked.\n\n\"As soon as your father does what I need, then I will release you to do as you will.\"\n\n\"Just like that?\" Edgar asked not quite believing him.\n\n\"Just like that,\" Reese replied, \"but there are one-actually two more things. I will take some of your blood. If you do escape there will be no place that I can't find you. The second thing is that you will be warded. You will be invisible to all except Marco and me. If one of your family accidentally stumbled upon you they would not only be unable to see you, they won't be able to hear, feel or sense you.\"\n\n\"There is another option,\" Edgar said. \"You could just let me go and my father still helps you.\"\n\nReese laughed.\n\n\"Edgar, even as we speak your mother is trying to convince your father to betray me. What do you think will happen if I release you? I cannot let you go. You have two options, you stay here or you go with the plan that I just explained.\"\n\n\"I guess I'll go, but have you talked to my father yet?\"\n\n\"I will later,\" Reese replied and vanished.\n\n*****\n\nElena stood statue still as her hair was washed and warm, scented water was poured over her. Ordinarily she loved the attention, but not now. \n\nThe crimson room was waiting. The memory of the blood red walls sickened her. She had barely survived mentally intact from the last time she was there. This time she was sure that she wouldn't. Cristiano would make sure of it. She had tested his patience one time too many and like him, she was at a loss as to why she couldn't understand why she couldn't stop thinking about that male. She stopped. Thinking about him was what put her in this position. She began to hope that Cristiano would change his mind about the crimson room and let her be used as she had been before. That had been far from pleasant, but mentally she would survive.",
        "Her impulsiveness was one of the things that he had loved about her-maybe she could appeal to that love. She would try to get him to see reason- she would be nothing more than something to fuck. His life would be dull, but then a memory hit her. She wasn't Cristiano's first mate. There had been another- Adalina, but she was dead. Cristiano had killed her for some infraction that on the face of it looked like a major thing. The reality of it was, it was something petty that he had blown out of proportion. He took her-Elena as his mate less than two weeks after Adalina's death.\n\nElena jumped when the servants began to wash her body-she was going to die. She just knew it, but... not in the traditional sense. Cristiano wanted her alive. To have killed his first mate and to take another was against tradition. He wouldn't do it twice... it was all about appearances. He could keep her as his mate, but he would fuck another. This other female would take her place at his side and no one would question it. All he had to say was that she had been put to ground in order to heal-and he would put her to ground for eternity. After a while no one would remember who she was. Rarely shed tears ran down Elena's face as she tried to accept her fate. All too soon, the bath was over and her skin was being oiled.\n\n\"Please just let me die,\" she prayed to whoever was listening. She stopped praying when she remembered the human male who had prayed to his god while she took his seed-\"your god is not here,\" she told him. Now here she was praying to that same god-one that she had forsaken so long ago. Deciding that she had no right to ask god for deliverance, she didn't finish the prayer.\n\nShe didn't move when her hands were chained together with black chains instead of the pure gold ones that meant that she was in his favor. Nor did she move when a matching black collar went around her neck. There was no point to resisting. Her only chance was to convince him that she was more valuable with her mind intact than she was without it.\n\n\"Come my lady,\" a female servant said gently as she pulled lightly on the chain. \"Our master is waiting.\"\n\nElena looked into the servant's eyes and saw pity- she knew what was going to happen. For the briefest of seconds Elena thought about vanishing. But where could she go that he couldn't find her? Even if she made it out of the house no one would dare help her- no one considered her worth dying for. She squared her shoulders and prepared for become nothing more than a shell of what she was.\n\nThe servant led her to the room without speaking. She was actually trembling as much as Elena was which told Elena something- the servant had been a guest of the crimson room at some point in time or she was afraid that she had to stay. Maybe it was both. Cristiano had a cruel streak a mile wide and it wouldn't be beneath him to add to her humiliation by fucking another female in front of her. Elena looked at the female and wondered if she was the one that he was going to use to replace her. She didn't think so-the female was too skittish for him. She wouldn't be able to withstand his punishments and he would quickly become bored with her.\n\nSuddenly the door to the crimson room loomed before them. Like the room, it was blood red. Once again she thought about running. Wouldn't it be better to die trying to escape than to live as a walking vegetable? That's what she would be by the time Cristiano was finished with her-but then; there would be no guarantee that he would kill her. He could draw out her punishment and then offer her body for use at the gala. Her mind spun with the seemingly endless possibilities of her fate.\n\n\"Please don't do it my lady,\" the servant said. \"You know that he will find you within the hour and your punishment will be worse.\"\n\nWhat the servant wasn't saying is that until she was brought back, she would have to take Elena's place. Cristiano would hold her responsible for the attempted escape. Elena didn't reply. One- she could have cared less about the fate of the female servant and two; she was right- She would be found and brought back within the hour. The only thing that she could do was to hope for the best and pray that he would change his mind.\n\nThe door to the room seemed to open of their own accord, but there was a male servant on the other side waiting for their arrival. As soon as they were inside, the female servant was dismissed. The dismissal hadn't even been totally spoken and she was already halfway down the hall. Elena looked at the male servant taking note of the way that his eyes ran over her scantily clad body.\n\n\"Do not think it,\" Cristiano said as he walked into the room via a door on the other side of the room.\n\n\"I... please my lord- will you not reconsider my punishment? I am but a silly woman...\"\n\n\"Whom I have forgiven time after time,\" Cristiano replied.\" \n\nWas he weakening already? Elena wondered as she continued her defense.\n\n\"This is true my lord, but have you not said that one of the things that you love the most about me is my impulsiveness? So tell me ...\"\n\n\"What you say is true, but it isn't your impulsiveness that is the issue,\" Cristiano interrupted. \n\n\"I understand,\" Elena replied. \"I have disrespected you by thinking of another when my only thought should be of you and how best to please you.\"\n\nCristiano's eyes narrowed in anger.\n\n\"Do you think me a fool?\" he roared as with the flick of a finger he flung Elena against a wall. \"Did you really think that I would fall for this feeble attempt to manipulate me? Answer me!\"\n\n\"No my lord!\" Elena cried as she stood up. \"I was only admitting that I was wrong and throwing myself upon your mercy.\"\n\n\"Tell me why I should reconsider,\" Cristiano said as he took a seat. On a table next to the chair was a paddle with holes in it. He picked it up and stroked it as if it was a lover and waited for her to reply.\n\nRealizing that this was her one and only chance to escape the horrors of the crimson room, Elena took her time. She had to offer him something that he couldn't resist. Sex was out of the question, he could get that from any of the servants. It had to be something that only she could offer and she could think of only one thing. But she had to be certain. Did she really want to take such a gamble? Yes-she decided.-especially if she wanted to keep all of her mental faculties intact. The question was- how important was it? Important she thought. The sound of the paddle meeting flesh told her that Cristiano was growing impatient. She looked up to see him slapping the paddle against his hand.\n\n\"My lord- I have already admitted to my wrong doings and I agree that you have been more than patient with me...\"\n\n\"Get on with it!\" Cristiano said impatiently.\n\n\"If you will give me but one more chance you will not regret it,\" She stopped and took a deep breath. If he said no then it was over. \"If you will give me another chance and I fail-you may kill me. That will free you to take another mate.\"\n\n\"Interesting offer,\" Cristiano said as he played with the paddle. \"And when you fail- and you will fail- you will try to manipulate your way out of our agreement.\"\n\n\"You have my word that I will not try to bargain my way out of it. As a token of my sincerity- I willingly offer myself for use at the gala.\"\n\n\"You forget,\" Cristiano said evenly, \"you have nothing to offer. You belong to me- a fact that you seem to have difficulty remembering. You would be offered for use if I desired it.\"\n\n\"I have not forgotten,\" Elena replied. \"But my lord, what will your friends and allies think of you when you tell them that your mate is willing to please them in order to show you honor? If I should fail, I will not try to as you say bargain with you- I give you my word.\"\n\nShe held her breath as Cristiano considered her offer.\n\n\"If I agree to this,\" he said after several long minutes, \"this is what's going to happen. You will be punished-there is no escaping that. You will agree to be used in any manner that is requested of you. The only things that cannot happen are your death and you cannot be permanently marked- that is for me to do. After the gala you will join the slave pool- in other words technically you are still my mate, but you will be demoted. All of the privileges that you have as my mate are null and void and another will take your place in my bed. You may not think of him... if you do, you die. What say you? And there is no further negotiation.\" \n\nElena blanched. She knew that he would have his own terms, but he was taking everything. Was her sanity worth that much to her? It was she decided. There was always the possibility that she could work her way back into his favor and bed.\n\n\"I agree,\" she replied with her head bowed. She jumped when what little clothes that she wore were ripped off of her. The golden chain around her waist was removed and replaced with a plain black string signifying that she was the lowest of his slaves. She looked up at him shocked. When he said that she would be demoted, she didn't think that it would be to the bottom of the heap. She also thought that he would wait until after the gala.\n\n\"You will have to explain your fall from grace to your friends won't you?\" Cristiano asked snidely. \"Oh, by the way- that string will be all that you wear from here on out. You will service anyone who demands it of you and I don't care who it is. If you refuse...\"\n\n\"This wasn't....\"\n\nShe stopped when she saw Cristiano's raised eyebrow. He wanted her to argue with him so that he could kill her where she stood. \n\n\"Yes?\" he taunted. \n\n\"When do I begin?\" Elena asked softly. She was now wondering about her decision.\n\n\"Too late for regrets,\" Cristiano said with a cruel grin. \"It will be very enjoyable starting over with you. You begin now and with me. Get your ass over here.\"\n\nElena hesitated even though she knew better.\n\n\"Now bitch,\" Cristiano said. \n\nThat alone told Elena that he was serious. He never called the new slaves by their names. It was always bitch, cunt or something even more degrading. When she reached him, he grabbed her and threw her over his lap.\n\n\"Start counting,\" he snarled as he delivered the first hard whack of the paddle on her ass. \n\nElena cried out the number one even as the second whack came.\n\nWhack.\n\n\"Two master,\" she was already crying. He was starting out hard and it the paddling would only get harder. Twenty excruciating whacks later, he was done.\n\n\"Maybe my mistake was that I was too gentle with you,\" he said as he ground his hard cock against her belly. \"What do you think?\"\n\nElena couldn't answer, she was crying too hard. Cristiano pushed her off of his lap and made her get onto all fours. He got behind her and rammed into her and ground his pelvis into her sore and excoriated ass. She thought that it would never end. When he was about to come, he pulled out and ejaculated on her back. He was telling her that she wasn't worthy of receiving his seed inside of her.\n\n\"Get up,\" he said, \"and turn around.\"\n\nElena struggled to her feet and struggled to keep her balance.\n\n\"You will walk around like that for the rest of the day- now get the fuck out.\"\n\nElena stumbled toward the door grateful that Cristiano hadn't used any if his other toys that were expressly meant to cause pain. The paddle had been bad enough. When she reached the door, the guard stepped in front of it. \"On your knees bitch.\"\n\nElena looked behind her to see Cristiano watching her-waiting for her to refuse. With tears running down her face, she dropped to her knees and took the offered cock into her mouth. The guard wasn't gentle.\n\n\"I've always wanted to do this,\" he confessed with a moan as he held her head between his hands and pushed the entire length of his cock into her mouth. \"Sire,\" he called to Cristiano, \"may I empty into her mouth?\"\n\n\"You may empty in her anywhere you wish,\" Cristiano replied.\n\n\"Thank you sire!\" the guard exclaimed. \"Use your tongue bitch!\"\n\nMoments later, the guard was coming in Elena's mouth. And so her life as a slave began.\n\n****\n\nLewis and Jean were still arguing about what to do when the prepaid cell phone rang. They looked at each other with Lewis's look being accusatory.\n\n\"He can't possibly know can he?\" Jean asked afraid again.\n\nLewis didn't answer her, but picked up the phone.\n\n\"I certainly hope that you didn't do as your mate wanted,\" Reese said his tone cool.\n\n\"No!\" Lewis exclaimed. \"We talked to no one.\"\n\n\"Good,\" Reese commented. \"Does your phone have a speaker?\"\n\n\"Yes.\"\n\n\"Turn it on, I am only going to say this once,\" Reese said.\n\nWhen the speaker was on, Reese began to talk.\n\n\"This is what needs to happen in order for you to see your son again. I need to get into that gala and I don't care how it happens. I know that it is a by invitation only event so that means that you get me in another way.\"\n\n\"Where is Edgar?\" Jean asked.\n\n\"I'll get to that,\" Reese said his tone cold. \"And do not interrupt me again.\"\n\nJean looked at Lewis and then grabbed his hand.\n\n\"As I was saying,\" Reese said, \"get me into that gala even if it's as kitchen help.\"\n\n\"That's impossible!\" Lewis exclaimed. \"Everyone has to be approved...\"\n\n\"Figure it out,\" Reese snapped. \"In regards to Edgar, he will be with an associate. As soon as I am inside of the gala, he will be notified and Edgar will be released unharmed. I have already taken some of Edgar's blood so if you betray me- I will find him. Do you have any questions?\"\n\n\"No,\" Lewis said quietly, \"wait... May we speak with him?\"\n\n\"I see no harm in that,\" Reese replied after thinking about it.\n\nA few minutes later, Edgar's voice came over the speaker.\n\n\"Mom?\"\n\n\"Hi sweetie, we're here. Are you alright?\"\n\n\"I'm fine-I guess he told you that he took some of my blood.\"\n\n\"Yes he told us,\" Lewis replied. \"We'll do whatever we have to do in order to get you back safely.\"\n\n\"I know,\" Edgar replied, \"but please do not endanger yourselves.\"\n\nLewis heard it again- strength.\n\n\"Edgar, I must beg your pardon for not allowing you to call me what I am-father. I... we love you and I am proud to call you son.\"\n\n\"I don't know what to say,\" Edgar replied, his voice choked.\n\n\"There is no need for you to say anything,\" Lewis replied. \"When this is over, we will sit down and talk as father and son.\"\n\nThe next voice Lewis heard was Reese's.\n\n\"Do what I ask and you will have that talk.\"\n\nBefore Lewis could say anything, Reese hung up.\n\n\"We have to do as he says,\" Jean said all ideas of talking to someone forgotten. \n\n\"Agreed, we just have to figure out how to get him in without being checked out. Jean... you were right about Edgar. I'm sorry that I kept us from being a family.\"\n\n\"We'll deal with that later,\" Jean replied as she leaned forward and kissed him. \"The important thing is getting him out of there alive. Now as far as getting Giovanni-if that's his real name in, we can't figure that out until we know where the gala is going to be held. I don't think that he'll pass security so we'll have to sneak him in. Once we've done that; our obligation to him is over.\"\n\n\"I hope so,\" Lewis replied sounding doubtful. \"He'll always have access to Edgar. What if he wants us to help him again? All he had to say is that he'll take Edgar and we'll have no choice but to do as he says-there is no keeping Edgar safe. In fact none of us are safe.\"\n\n\"One thing at a time, darling,\" Jean soothed as she reached between his legs and took a hold of his stirring cock.\n\n****\n\nEdgar lay on the bed wide awake long after Reese had gone. He couldn't believe that Marco had been a part of the whole kidnapping scheme. As angry as he was, he was aroused. Reese taking blood from him had started it- someone taking blood from him had always been like an aphrodisiac although in those cases a connection hadn't been established. It was simply a part of making love. He looked down at himself and tried to ignore his rapidly hardening cock. Marco had been the last to touch it. The thought of it made his member stand at attention. No longer able to ignore his arousal, he stripped. The days of not being touched and the feel of being feed from intensified the sensations to his rigid member. The thought of Marco's mouth on him made him leak. Closing his eyes, he wrapped a hand around his member and began to slowly pump it. He made himself go slow- he wanted to enjoy his first orgasm in several days. In spite of his determination to prolong his orgasm for as long as he could- he sped up. In no time flat, his seed was shooting toward the ceiling as he moaned out Marco's name.\n\nNow that the immediate need was taken care of, he could think. His anger at Marco had cooled. He couldn't have had a choice Edgar deduced. That had to be the reason that Marco had helped with the abduction. His head swam with questions. Some of them he could answer but many he couldn't. He did however come to the same conclusion that his parents had- they would be forever tied to Reese because Reese took his blood. He now understood how the blood taking worked. What happened during the taking was determined by the intent. With the others, the intent was only heightened arousal. With Reese it was because of control. He would remain in Reese control because Reese wished it. He also knew that he wouldn't be free of Reese until one of them was dead. He wasn't sure of how he felt about that, but he pushed the thought aside. He took his mother's stance and decided that first things first- they needed to get through this.\n\nHe switched his train of thought to Marco. What would he say to him? Would he finally tell him exactly what he wanted? He was tired of playing games and ready to settle down. When this was over, there would be no more parties and trolling for cocks. It was going to be Marco or no one. After he made his decision, he felt better. He calmed enough to sleep.\n\n****\n\n\"We need to start in the present and work our way backwards,\" Vangie said more to herself than to Donatello. \"Whoever it is must have left a cyber-trail. We'll start with Paolo's party. We need the guest list. Can we get it?\"\n\n\"I believe so,\" Donatello replied still marveling at how Vangie's mind worked. She loved puzzles and he had just handed her a big, life sized one.\n\n\"Good, we need it as soon as possible. How many people usually attend these things?\"\n\n\"It varies- the one that I attended had over one hundred vampires in attendance. What are you thinking?\"\n\n\"That whoever killed Paolo Rossi is on that list- he or she is also the one who killed the others that you told me about.\"\n\n'It's a male,\" Donatello said. \"I don't know how I know that, but I do and it's someone that all of us have wronged somehow.\"\n\n\"You told me about the Borcelli's- do you think that this person would know them? And is it possible that whoever is doing this was someone that was turned with you?\"\n\n\"I thought about that,\" Donatello replied. \"The only one left other than me is Emilio and I don't believe that he is behind it. He loves this life and he thinks that he Borcelli's are greater than god himself. Of course there are others who were turned that I'm not aware of- that number could be in the hundreds if not thousands. The Borcelli's are several centuries older than I am so it stands to reason that there are those that I have had no contact with.\"\n\n\"That's the key,\" Vangie said. \"This is someone who knew you and my hunch is it goes back to the time of the plague. It has to be someone that you came in contact with.\"\n\nDonatello thought about the young father that had begged him for help and discounted him. Surely he had died- but he had seen him once more after he was turned. He had been walking along the road toward the potter's field carrying a small bundle. But he was dead- unless....\n\n\"What is it?\" Vangie asked. \"You thought of something.\"",
        "\"The only person who comes to mind from that time is the young father that I told you about- but that isn't possible.\"\n\n\"Unless he was turned,\" Vangie said, \"but what are the chances of that happening?\"\n\n\"Better than you might think,\" Donatello replied. \"During that time anyone unaffected by the disease was a prime target for us. We could drink the blood of the infected, but it tasted for lack of a better term-dead. Many of those that were used for food were killed, but there were some that were turned whether intentionally or by accident. Whether the man in question was turned- I don't know.\"\n\n\"Would he have known the Borcelli's? Vangie mused. \"If he did, that simplifies things. What I don't know is how we're going to find out if he was turned or not. And there's another thing, just because he was doesn't mean that he survived.\"\n\n\"That is also true,\" Donatello agreed, but his gut was telling him that if the man had been turned- he would have survived.\n\n\"Let's start by watching the news, maybe some clue has popped up. The other thing is this- let's assume that he knows the Borcelli's...\"\n\n\"The gala,\" Donatello murmured. \"If he was bold enough to infiltrate Paolo's party, then he'll be bold enough to try to get into the gala which would be in my opinion; a suicide mission.\"\n\n\"But maybe he feels that he has nothing to live for other than revenge,\" Vangie replied. \"Think about it- he lost his family to a horrible disease and then he was turned- probably against his will. So maybe he's planning on dying at the gala. But I have a question- he had to have had help to get into Paolo's party. He couldn't have just walked in- so who would have helped him?\"\n\nIt was a good question to which Donatello had no answer.\n\n\"Donatello, is there anyone that you trust enough to help us with this?\" Vangie asked.\n\n\"I'll have to think about it,\" he replied. \"I've kept myself out of the loop for a long time.\"\n\n\"What about this Emilio? Shouldn't we warn him? Maybe he'll want to help...\"\n\n\"Emilio is a bastard!\"\n\n\"Maybe, but Don we may need him. What he is doesn't have anything to do with it. We need to find whoever is killing your little group off before he finds us and believe me-he will and we need to be ready.\"\n\nWhatever nervousness Donatello was experiencing disappeared when Vangie used the shortened version of his name. It told him that she was in this for the long haul. He logged off of the chess website and pulled up the twenty-four hour news site. He pulled Vangie into his lap and let her settle before they watched. After fifteen minutes, he heard nothing new but Vangie was listening intently.\n\n\"We need to talk to that female vampire,\" she muttered. \"She seems very observant,\" she said to Donatello. \"Can we find out who she is?\"\n\nDonatello was feeling better by the second. He was wishing that he had confided in Vangie much earlier than he did instead of hiding. He shrugged off the feeling of regret and focused on the task at hand. When Vangie was finished, he planned to show her just how much he loved and appreciated her.\n\n***\n\nSalzburg, Germany\n\nMarco walked around the large villa checking and double checking the internet connection. He had to be sure that there were no dead zones or spots where the internet was slow. Satisfied, he checked the laptops by running them through the security programs that he designed. The last thing that he did was to make sure that all of the batteries were fully charged and that each laptop had a spare battery sitting next to it. When he was through, he went to the room that he hoped to share with Edgar. He hadn't tried to speak to him since the last time. \n\nReese and Edgar would be arriving within the hour and Marco was nervous. He hoped that Edgar was no longer angry although he wouldn't blame him if he was. To kill time, he looked through the brochures that he had printed off of the internet.\n\nGoing to the Sound of Music tour topped the list. Going to Hitler's retreat, the 'Eagle's Nest' wasn't an option. He had fought in the war and had no desire to see Hitler's get-a-way. He regretted that it wasn't winter- he would have loved to have taken Edgar on a horse drawn sleigh ride, but that could be arranged for another time. \"After this is over,\" he murmured.\n\nHe felt rather than heard Reese's presence in the house. A moment later, he felt Edgar's. His heart pounded as he went to the living room where Edgar was standing next to Reese. His mouth was dry as he tried to figure out what to say. How did one apologize for being an idiot?\n\n\"Marco, it's alright,\" Edgar said as he took a step forward. \"Reese explained most of it.\"\n\nMarco gave Reese a grateful look and then looked back at Edgar. \"I am so sorry that I got you into this.\"\n\nEdgar didn't say anything but opened his arms. Marco hesitated and then ran into Edgar's arms. Reese gave them a brief glance and disappeared to do a check on the wards. After he made his check, he went to his room and logged on to the Borcelli website. Finally there was a new announcement.\n\n\"The date and time for the gala will be announced soon. Once you receive your invitation, you must respond within twenty-four hours. Late responses will not be accepted for any reason. Please be aware that once you submit the name of your guest, that it cannot be changed.\"\n\n\"They are taking no chances,\" Reese muttered as he reread the announcement. He wondered if Lewis knew anything. He was part of the planning team; he had to know more than what was on the website. He dialed Lewis's number and was pleased when he picked up on the first ring. \n\n\"Is Edgar alright?\" Lewis asked without a greeting.\n\n\"He's fine,\" Reese replied. \"He's with my associate. What do you know about the gala? And don't say nothing. I just saw the announcement on the Borcelli website.\"\n\n\"All I know is what's going to be served,\" Lewis replied. \"We won't find out the date, time and place until two days before and then we will all be sequestered at that location. You should also know that our cell phones will be taken.\"\n\n\"Let me worry about that,\" Reese said. \"As soon as you hear anything, call this number. It's a prepaid phone and untraceable.\" \n\nReese gave him the number and hung up. He logged off of the Borcelli website and onto the chess website. His opponent hadn't played yet. As he surveyed the board, Reese wondered which trap the opponent would choose. There was a third option that would involve a small sacrifice, but it would only be found if the opponent was patient enough. Reese took his turns with the other games and logged off. It was time for him to go out and find a willing bed partner- he was long past due. As he vanished, he realized that this could be the last time that he made love. The thought didn't sadden him as it should have. Nor did the idea of dying frighten him- after all, what was the question that he had asked himself every day for centuries?\n\nDo I want to live?\n\n****\n\nElena's life was hell. In retrospect she wished that she had let Cristiano take her mind. She now knew that he had always planned on demoting her. He had always planned in humiliating her at the next gala- he was biding his time. That's why he had let her get away with thinking about the human-he had always planned to use it against her. There had been no real forgiveness. She had offered herself to do what he was going to do anyway- she just made it easier. When all was said and done, she would be as mindless as he was going to initially make her. He was watching her suffering and enjoying it. At that moment she hated him more than anyone that she could think of. That hate was mixed with love- he was still her mate and she loved him even if he no longer loved her. What was she going to do? \n\nShe switched to thinking about something else. She never knew when Cristiano was lurking about in her mind. \"I am going to survive this emotionally and physically intact,\" she vowed. \"I will not allow him....\" a white hot pain burned inside her head dropping her to her knees. She slapped her hands to her head and moaned in pain as tears ran down her face.\n\n\"What are you supposed to be thinking about slave?\"\n\nCristiano asked from inside of her head.\n\n\"You master,\" Elena replied through gritted teeth. \n\nJust when she thought that her head was going to explode, the pain eased. She lay on the floor gasping in relief that was short lived. She scrambled to her feet when she heard male voices. She didn't think that she could bear to be touched one more time or to suck one more cock. She had only been demoted for a few days but it already felt like a lifetime.\n\nShe was gone just before the males rounded the corner. They were looking for her- she just knew it. She was still a novelty and probably would be for a long time to come. She made it to her room without incident, curled up on her bed and tried to keep her mind blank. She now understood that I wouldn't take much for Cristiano to kill her although she doubted that he would. He was having too much of a good time humiliating her.\n\nShe closed her eyes and began the relaxation breathing techniques that she had learned centuries before. Before long she was resting and dreaming of a much happier time. Ironically, that time included Cristiano. They had been together for so long that she couldn't remember her family. That wasn't exactly true- she remembered that they disapproved of Cristiano as soon as they saw him. Her mother had noticed from the beginning that there was something odd about him, but even then; Elena had been strong willed. All she knew and needed to know was that Cristiano Borcelli was strong, handsome and very, very rich. And she belonged to him.\n\nTheir wedding was everything that she had wanted and more. Cristiano wined and dined her, took her to every boutique and let her spend to her hearts content. He hadn't told her what he was until a month after their wedding night, but by then; she didn't care. The fact that he wasn't honest with her didn't matter. The fact that he made it clear that theirs was not a partnership didn't bother her. Neither did the fact that she was for all practical purposes his sexual slave. She loved him and she thought that he loved her.\n\nBefore he began to train her, he turned her and it wasn't in the most gentle of manners. She understood that the way that they made love before her turning was gentle. Her training lasted for months and by the time he was finished with her- he had the perfect mate-he thought. Elena tried to pin point where things began to go awry. She knew that her impulsiveness had something to do with it, but there had to be more. When her mind began to wander into forbidden territory, Elena pulled back and thought about something else.\n\nShe wondered how the plans for the gala were going as she was no longer in the loop. The only thing that she knew for sure was what she would be wearing-nothing but a piece of string to announce her fall from Cristiano's good will. She could hear the whispers now. She had made no friends over the centuries and had several enemies who were going to delight in watching her being used like a common whore.\n\nShe jumped at the banging on her door. Her respite had just ended.\n\n*****\n\nReese wandered the streets of Salzburg looking for a bed partner and someone to feed from. Marco's question about what he was going to do once he had found everyone plagued him. The truth was he hadn't really thought about it. He hadn't expected to find so many of them so close together. In a few weeks it would be all over-everyone who had died at the hands of those he sought would be avenged. He didn't feel joy at the prospect of killing, but it had to be done.\n\nHe walked for a long time before he found a tavern of his liking. He slipped in and found a spot where he could watch without being noticed. He was there for almost an hour before someone caught his attention. She was military- the Army according to her insignia, she was a captain, but she wasn't alone and that presented a problem. The woman seemed to know that she was being watched because she glanced around the room. Her eyes lingered in the general area where he stood. He liked that- it showed that she had good instincts.\n\nFrom where he stood, he could see that she was very pretty and of mixed heritage. Race had never mattered to him- a woman was a woman and he thought all women beautiful. But this one.... Now she was staring at him, her expression unreadable. Reese smiled and then nodded at her before looking away. Another hour passed before the people that had come in with the woman left leaving her alone. He watched her as she looked into her drink-the same one that she started out with and thought that she looked sad. Taking his now warm beer with him, he approached her.\n\n\"Hello,\" he said softly as he sat next to her.\n\nShe looked at him, but didn't speak. Reese changed his opinion about her looks. Close up she was beautiful. She looked up at him and then looked away without speaking.\n\n\"May I buy you a fresh drink?\" Reese asked as he settled in the seat.\n\n\"No-thanks. Look, if you're looking for an easy pick up, I'm not your girl.\"\n\nReese smiled, he liked her. She was a straight shooter.\n\n\"What if I told you that my intent was to seduce you?\" he asked. \n\nShe looked at him surprised by his directness.\n\n\"I've been watching you from the moment you walked in but then, you know that.\"\n\nHe now had her full attention. \"How about that drink?\" he asked.\n\n\"I don't drink,\" she replied, \"and neither do you. I can tell by the lack of foam on the top of your beer and it looks flat.\"\n\n\"Impressive,\" Reese said meaning it. \"Why are you here if you don't drink?\"\n\n\"I could ask you the same question,\" she replied, \"but to answer you- I didn't want to be alone tonight so I came for the company which as you can see is gone. Your turn- why are you here if you don't drink?\"\n\n\"I was looking for someone to go to bed with,\" Reese replied. \n\n\"Really? And you're still here?\" she asked. \"This place is full of women who would leave with you in a heartbeat.\"\n\nReese blushed and then grinned at her.\n\n\"I'm rather picky and once you walked in no one else interested me. My name is Reese.\"\n\n\"You are some player aren't you?\" she asked laughing for what seemed to be the first time in a long time. \"My name is Alex- short for Alexandra.\"\n\nInstead of getting her to leave with him, they stayed at the bar until last call. He was surprised by two things. One he didn't used an alias. Two the need and desire for blood and sex seemed to have taken a back seat. He really liked the woman who was now more relaxed and seemed happier. For that matter, so did he. He walked her back to where she was staying and kissed her.\n\n\"Alex- I would like to see you again,\" he said as he stroked her caramel colored skin. \"How long will you be in Germany?\"\n\n\"A few weeks,\" she replied surprised that he hadn't asked her what she did for the military or made any more references to going to bed with her. She surprised herself by agreeing to see him again. \"I have meetings during the day, but I'm free most evenings.\"\n\n\"That is perfect,\" Reese replied touching her face again. \"I too will be here for a few weeks. The evenings are the best time for me as well. Will you have dinner with me tonight?\"\n\nThey exchanged cell phone numbers and kissed again. Reese was reluctant to leave her alone. Finally he released her from his embrace and told her to be careful.\n\nReese waited until Alex was inside before leaving. As soon as he could, he vanished to the villa feeling lighter than he had in centuries. He appeared in the living room where Edgar and Marco where sitting on the couch watching television. Marco looked up at him and stared.\n\n\"What happened? You look ... different.\"\n\n\"Is there anything new regarding the gala?\" Reese asked ignoring the question.\n\n\"Reese...\"\n\n\"Is there anything new?\" Reese repeated not hiding his impatience.\n\n\"No... I checked a few minutes ago... so she must have been something...\"\n\nMarco was talking to air- Reese had vanished.\n\n****\n\nReese paced the length of his room thinking not about the gala, but of the woman that he had just spent the evening with. The same protectiveness that he had felt toward his wife and children resurfaced after being buried for centuries. It excited, frightened and invigorated him. It also told him something- he and Maria were not meant to be. If that were the case, he wouldn't have left. That realization didn't change the fact that she needed to and would be avenged.\n\nAs excited as he was about Alex, it added a complication. He had someone else to think about although he hadn't admitted to himself who and what she was to him.\n\n\"Damn it!\" he swore. \"Why now?\"\n\nAfter several more minutes of pacing, he picked up the phone.\n\n*****\n\nLeo was busy trying to help his fellow slaves acclimate to the fact that they were free. Shirley had transferred money from Paolo's accounts into new accounts for all of them. What was happening was that several of them decided to stay together. He thought that maybe it was for the best. Of all of them, Natalie was having the hardest time. She had really loved Paolo and believed that he had loved her. Of all of them, she was also the most likely to commit suicide so she was never left alone. As for him, he had no problems making the transition from slave to freedman. In his mind he was never a slave but a victim of circumstance. In his mind he was in holding until he could find a way to kill Paolo thus freeing all of them and it had finally happened. He was helping three of the others choose where they wanted to live when the phone rang.\n\n\"Leo- how are they doing?\" Reese asked genuinely concerned.\n\n\"As well as can be expected, but I think that they'll be alright. Some of them have decided to stay together which is a good idea. Giovanni- I don't know how to thank you for helping us. I know that we weren't the reason why you were there and it doesn't matter. You could have left us there. We are forever in your debt.\"\n\n\"You owe me nothing,\" Reese replied, \"but I would ask a favor of you.\"\n\nLeo listened as Reese told him what he needed.\n\n\"She will be safe,\" Leo said when Reese was done. \"Giovanni, I meant it when I said that I am forever in your debt. If I can help you in any way, please allow me to do so. I am at your disposal.\"\n\n\"Let me repeat,\" Reese said. \"You owe me nothing and I thank you for helping me.\"\n\nReese hung up satisfied that Alex would be safe during the evenings when he couldn't be with her. The day time provided another challenge. He was beginning to see that Marco had been right when he told him that he needed to expand his base of support. He went back to the living room where Marco and Edgar were acting like a pair of newlyweds.\n\n\"Marco- we need to talk,\" Reese said interrupting them.\n\n\"Now?\" Marco asked tersely.\n\n\"Now and if you didn't want to be interrupted you do have a room,\" Reese replied dryly.\n\n\"That wouldn't have stopped you,\" Marco said.\n\n\"No,\" Reese admitted, \"now let's go- we have things to discuss.\"\n\n\"Go on,\" Edgar said with a wave of his hand. 'I'll be in the bedroom.\"\n\nThey waited until Edgar was gone and Reese explained what was happening.\n\n\"Thank god!\" Marco exclaimed. \"So where is she? What's her name? Is she your mate? I guess she has to be if you're going to protect her! Dude- this is huge! What do you want me to do?\"\n\n\"Are you done babbling?\" Reese asked slightly amused.\n\n\"Yeah... sorry,\" Marco replied grinning.\n\nHis qualms about what was going to happen to Reese after the gala were quieted. As angry as Reese could make him with his cool demeanor and hard ass ways, he still considered him a friend even if Reese didn't feel the same way. He was also a big believer in fate. He and Reese were meant to meet that night in San Francisco and he was meant to meet whoever this woman was.",
        "\"Her name is Alex,\" Reese began. \"Whether she is my mate or not is none of your concern. I have come to believe that you were right about something. You once told me that I needed to widen my base of support...\"\n\nMarco's mouth dropped open. Reese had never admitted that he-Marco had been right about anything.\n\n\"Damn- are you alright?\"\n\n\"Close your mouth and listen up,\" Reese said with a trace of amusement. \"I have someone to watch her at night when I can't be with her. What I need is someone to watch her during the day. I know that you have a vast network of contacts and I want you to choose someone-preferably female to keep an eye on her. I also want to meet this person beforehand.\"\n\n\"Can you at least tell me a little about Alex? That way I can make a good match.\" Marco said.\n\n\"She's a captain in the army and will be here for a few weeks. She doesn't drink or smoke- is that enough information?\"\n\n\"That's plenty,\" Marco replied. \"Reese- I'm happy for you man. I was worried about what was going to happen to you after all of this was over.\"\n\n\"Let me know when you've found someone,\" Reese said and vanished to his room.\n\nThe next day, Marco presented Reese with three names. Of the three, Reese met with two. Of the two he chose Emma Hardy because she hadn't hesitated when he told her that he wanted to take her blood.\n\n\"I understand the terms of my employment,\" she said. \"I have nothing else going and Marco says that I'll be set up for eternity when this is over- is that true?\"\n\n\"Do you understand that this woman is to be protected at all cost?\" Reese asked his eyes glittering.\n\n\"I understand, now where can I find her?\" she asked holding out her wrist.\n\n****\n\nA week passed and still no word about the gala. It was something that frustrated Reese to no end. He wanted it to be over with. When he wasn't making plans, he was either playing chess or spending the evenings with Alex. They still hadn't done more than kiss and hold hands, but he was more than content with that. By the end of the week, he was ready for more and was sure that she was too. The problem was that she still didn't know the truth about him and he couldn't release inside of her until she did. She was his mate- he could say it now and if they made love and their fluids mixed... she would be immortal. He wouldn't and couldn't do that to her without her knowing everything.\n\nFor the first time in his long life he had to think about contraceptives. He left the villa and went to a pharmacy. He turned down all and any offers of help especially from the women who kept gazing down at his crotch. A couple of the male clerks weren't any better. Finally he made his selection choosing the 'Crown Skinless Skin' which according to the package was the thinnest and strongest condoms made. He also purchased a top of the line lubricant for Alex's comfort although he didn't think they'd need it. He smelled the scent of her arousal when he kissed her goodnight the last time he saw her.\n\nWhen he left, he had an erection that was almost painful. For a brief moment, he felt guilty. Before Alex, it was always thoughts of Angelica that would make him so hard. But he knew-he knew that she would understand and give him her blessing. As soon as he made it to his room, he stripped, lay on the bed took his pulsing cock into his hands and murmured Alex's name. He came hard and fast with his seed arcing into the air and landing on his stomach and the bed. He was still hard but ignored it. The immediate need for release had been met.\n\nAfter he showered, he made reservations at a nice restaurant. The feeling that this could be the last time that he had sex was gone. This was the first time since his wife that he would be making love and it wouldn't be the last time. He had no worries that Alex would reject him when he finally told her everything- he knew that she would accept it just as he knew that he would never ask himself if he wanted to live again.\n\nThe day passed slowly for him and he wondered if it was going as slowly for Alex. He had already spoken to her once to tell her where they were going for dinner. \n\n\"I've heard about that place, but Reese we don't have to go there. I'm content to go to the park with a picnic basket.\"\n\nHe wasn't surprised by her response. Like him, she had come from humble beginnings. \n\n\"Then allow me to bring the picnic basket,\" he replied. The idea of finding a secluded spot and making love to her under the stars appealed to him.\n\n\"Deal,\" Alex replied. \"I have a few things to finish up so I'll see you soon.\"\n\nAlex was waiting for him when he arrived. He greeted her with a kiss and pressed against her so that she could feel his erection. He helped her into the car and drove to a spot that he knew would be secluded, but to be safe; he warded it and lit some candles. They chatted about inconsequential things as they ate and then some big things afterwards.\n\n\"Why aren't you married?\" Reese asked. \"You are beautiful, intelligent and would make any man proud.\"\n\n\"I was married,\" she replied softly. \"He died a few years ago in the Middle East.\"\n\n\"I'm sorry- was he also military?\"\n\n\"No... he was part of a civilian humanitarian group. He helped in any way that he could. The night that we met was the anniversary of the day that I found out that he was killed.\"\n\n\"But your friends- they left you alone,\" Reese commented.\n\n\"They don't know,\" Alex replied. \"I didn't want a pity party- I gave myself plenty of those and I don't want one now. Rob died doing what he loved to do- helping people. Not many people get to die doing what they love. What about you? Have you even been married?\"\n\n\"I was and I had three children,\" Reese replied. \"They all died of a disease for which there had been no cure.\"\n\n\"I'm sorry for your loss,\" Alex said taking his hand.\n\n\"Thank you,\" Reese said giver her hand a squeeze, \"but like you, the time for self-pity is past. I still miss them as I'm sure that you miss your husband, but I have come to the conclusion that my family would want me to be happy again. That night that we met, I was looking for someone to take to bed and instead I met you.\"\n\n\"Are you saying that you don't want to take me to bed?\" Alex teased.\n\n\"Oh no! I'm not saying that at all,\" Reese replied his tone serious. \"In fact, it's all that I've been thinking about. I was glad when you mentioned a picnic- Alex will you make love with me?\"\n\n\"Here?\" Alex asked looking around. \"What if someone walks by for a moonlight stroll?\"\n\n\"They won't,\" Reese assured her. \"I have it on good authority that this part of the park isn't used.\"\n\n\"I don't know...\"\n\n\"About which?\" Reese asked. \"Making love with me or making love with me here?\"\n\n\"Both,\" she replied although she was wiggling around and trying to ignore the spurt of wetness between her legs.\n\n\"Tell me your concerns,\" Reese urged as he stroked her arm.\n\n\"Aside from the fact that we've known each other for a week?\" she asked laughing. \"Let's not forget that we're in a public place and I'm an officer of the United States Army and I'm not on birth control.\"\n\n\"Alex- do you feel safe with me?\" Reese asked.\n\n\"Yes or else I wouldn't be here,\" she replied now playing with his fingers wondering what they would feel like dancing across her skin. \n\n\"This place is deserted,\" Reese continued pleased with her answer and the fact that she was touching him. \"No one will see or hear us- I promise and as far as the birth is concerned, I came prepared.\"\n\nAlex wavered; it had been so long since anyone had touched her in more than a platonic way. That, she supposed was her fault. Many had expressed interest in her but she couldn't make herself go out with someone so that she wouldn't feel so alone. Instead she had thrown herself into her work now here she was with a man that she had only known for a week dying for him to touch her.\n\n\"Alex- make love with me,\" Reese repeated. \n\nSlowly, Alex nodded her head yes.\n\n\"Thank you,\" Reese said as he brought her hand to his lips and kissed the inside of her wrist. He was going to strip them, but remembered at the last second that she didn't know about him. He unbuttoned her top revealing her black bra as he kissed her lips gently tugging at her lower lip with his teeth. Alex was already breathing fast telling him that it had been a very long time for her.\n\nHe took a sharp intake of breath when her hands went under his shirt and massaged his bare skin and then his nipples. She slipped her tongue into his mouth and moaned when he sucked on it. Getting to her knees, Alex pressed into him as the kiss deepened. Suddenly she was filled with an urgency to be completely nude so that she could feel him on and in her. The intensity of the feelings startled her. She attributed it to her self-imposed celibacy.\n\nShe yelped when Reese nipped on her tongue and began to suck on it even harder as he palmed her 'B' cup breast and began to knead them. He ran his tongue over her teeth savoring the taste of her blood. His jeans felt as if they were two sizes too small as his cock grew in length and girth. He broke the kiss and pulled the cups of her bra down so that he could look at her breast. His mouth watered as he looked at the erect, deep brown nipples. Without warning, he took a nipple into his mouth and sucked on it moaning along with Alex. He released the nipple and took the other one into his mouth sucking on it as greedily as he had her tongue and the other nipple. He pulled her onto his lap so that her legs straddled his hips and began to frantically grind against her as he kissed and then sucked on her neck. They were both panting and crying out as they ground against each other. \n\nReese stopped. He didn't want to come like some horny teen having sex for the first time. This first time was supposed to be about her. He gently moved her from his lap and laid her on the blanket. She had already unzipped her jeans and was trying to take them off by the time she was on her back. Reese helped her undress and then undressed himself.\n\nHe knelt before her letting her get a good look at what now belonged to her.\n\n\"I belong only to you,\" he said after a few seconds. He opened her legs and inhaled. He had to taste her. There was no help for it. He was grateful that he could drink her fluids and that the small amount of saliva that would mix with them wasn't enough to make her immortal.\n\n\"Reese... oh my god!\" Alex screamed when his tongue and then his lips wrapped around her clit and gave it a quick kiss and lick. Reese took his time in lapping up her juices massaging her clit to make more. Alex was clawing at the blanket and thrashing beneath him as the inevitable orgasm drew close. He reached up and took a nipple in each hand pinching and rolling them between his fingers as he went from licking to sucking on her nub.\n\nSuddenly, Alex's whole body stiffened. Her hips were raised off the ground and her back was arched. Her mouth was open in a silent scream as Reese sucked her clit and slid a finger as deep inside of her as it would go. Then she was erratically moving against him riding out the rest of the most intense orgasm she had ever experienced.\n\nReese held her tight against him and talked her down as he rubbed her arms and back. He let her doze until she woke up on her own.\n\n\"That was... incredible,\" she said when she woke up. \"Where are those condoms?\"\n\nReese retrieved them from the picnic basket and lay on his back while Alex explored his body with her hands and mouth. By the time she reached his cock, he knew what she was going to do and stopped her.\n\n\"Not yet,\" he said gently wishing that he could let her put her mouth on him.\n\n\"Why not?\" She asked. \"Turnabout is fair play.\"\n\n\"I'll explain later, but as much as I want to feel those beautiful lips wrapped around me; it has to wait.\"\n\n\"So this isn't a one night deal?\" Alex asked.\n\n\"This isn't a one-time deal- I swear it,\" Reese replied.\n\nAlex believed him and felt her anxiety ebb. If it had been a one-time deal, she would have dealt with it and moved on. She nodded at him, took his cock between her hands and began to stroke it until it pointed at the sky. She opened a condom and slid it over his cock. Reese's moans fueled her arousal. She couldn't believe that she was ready again-she had always been a one shot sally. One orgasm and she was done. Again she attributed it to her long dry spell and didn't argue.\n\n\"Ride me,\" Reese murmured.\n\nAlex straddled him so that his cock was in front of her pussy. She then moved forward so that it rested between her lips and held it in place as she rubbed her clit against it. Reese moaned at the contact, but it felt far away. He decided that he had to tell her the truth as soon as possible so that he could get rid of the condoms.\n\nHe helped Alex position herself over his waiting cock and then slowly easing her down on it. The contact was amazing if not a little dulled. He was now glad for the condom. He knew that without it, he would have come as soon as he was inside of her. Still he didn't like the fact that a thin piece of material separated them. He held her in place relishing her tightness around his cock. He pulled her down to him for a kiss tangling his hands in her hair. The only thing that stopped him was the tight bun that she had it in. He tried to undo the bun but quickly tired of trying to do it the human way. With a thought he loosed her hair and ran his fingers through it. It barely reached her shoulders, but to his hands it felt like the finest of silk.\n\nHe nipped her lower lip just enough to draw blood anxious to taste her again. When a small bead of it appeared, he licked it off. If Alex noticed the bite, she didn't give any indication of it. Instead she kissed him even harder. He tweaked her nipples making her shudder with pleasure. Breaking the kiss, he took a nipple into his mouth and gave it a long, hard pull. His orgasm began as soon as her vaginal muscles began clench around him. He screamed the word \"mine!\" as he emptied into the condom.\n\nAfterwards, he rolled on his side still holding Alex in his arms. They lay still for several minutes trying to catch their breath. He knew that the questions would begin and prepared himself. He kissed her head and waited.\n\n\"Why did you say mine?\"\n\nReese hesitated debating on how much to tell her. After thinking about it, he decided to tell her everything.\n\n\"Alex- I need to tell you something...\"\n\n\"What are you into?\" Alex interrupted as she sat up. \n\n\"I promise to tell you, but first I want to tell you who you are,\" Reese replied pulling her back into his arms.\n\nAfter Reese gave her the condensed unsweetened version of whom and what he was and their relationship, Alex didn't know whether to laugh, cry or run. In the end, she did none of it. Instead she began to interrogate him. When she was through, she believed him although she didn't quite understand why.\n\n\"You believe me because you know that I can't lie to you and you can't lie to me,\" Reese explained answering her unspoken question.\n\n\"So you're going to tell me the truth?\" Alex asked.\n\n\"Yes,\" Reese replied. \"By the way- what do you do for the army?\"\n\n\"Intelligence, now start talking.\"\n\nThat explained it Reese thought as he thought about the questions she asked. But he had a question of his own.\n\n\"Aren't you concerned about the fact that I'm a vampire?\"\n\n\"Should I be?\" She countered. \"I've seen and heard a lot of strange things in my life and vampires are the least of them. Did you know that several countries- us included are researching the paranormal as a possible weapon of war? Our tax dollars at work.\"\n\n\"I could be lying,\" Reese said watching her reaction.\n\n\"You could be, but you aren't. I'm also aware that I can't say anything to anyone about you. If I did, you'd be penned up in no time. I also want to thank you for using the condom. I kind of get the feeling that you didn't really want to. One question before you tell me what you're up to- do I have to drink blood?\"\n\n\"If you want to be as I am, then yes,\" Reese replied amazed at the ease at which she seemed to be accepting things. \"But I don't want to turn you- if that's what you want until my business is concluded. I want and need to be with you when it happens- it is far from pleasant. I also want to remind you that turning isn't a requirement. I want you to take as much time as you need to make your decision.\"\n\n\"Reese- do you care if I keep calling you that? You're going to do something dangerous aren't you?\"\n\n\"Yes you may call me Reese and I wish that I could say no to your last question.\"\n\nReese explained what his mission was and why he was doing it. \"I have only four left on my list and then it is finished.\"\n\n\"Why can't you just walk away?\" Alex asked. \"This sounds like a suicide mission-is that what this is supposed to be? Is it your plan to die?\"\n\nReese didn't answer for a long time. He had never considered walking away- he had made a promise. Was it a suicide mission? He hadn't thought so, but maybe it was. He had to admit that there was a small part of him that hoped that he didn't survive.\n\n\"I can't walk away,\" he finally replied. \"I made a vow and I must honor it. As to the suicide part of it, I confess that there was a small part of me that hoped to die. Every morning I asked myself the same question- Do I want to live? The answer was always yes, but it was only because of my vow that I said yes. I now have another reason for saying yes- you. I am going to survive this and we will begin to plan out future together.\"\n\n\"I understand, or think that I understand why you can't walk away, but Reese these people that you swore to avenge- they won't know...\"\n\n\"But I will,\" Reese said gently. \"I can't begin a life with you unless I finish this.\"\n\n\"Then let me he...\"\n\n\"No!\" Reese said more sharply than he had intended. \"Alex- I'm sorry for my sharp tone, but I have lost so many because of these people and I don't want to lose you too. I need for you to be safe and not to try to help me.\"\n\n\"Is that why you put a tail on me?\" Alex asked. \"I spotted her the other day- she's good, but not that good.\"\n\n\"Yes,\" Reese replied, \"and I have someone watching you at night when I can't be with you.\"\n\n\"Let me make sure that I understand,\" Alex said her tone irate. \"I'm supposed to sit at home like a good little woman while you go off and try not to kill yourself killed. In case you've forgotten, I am an officer of the United States Army and am quite capable of taking care of myself and helping you.\"\n\n\"Alex listen to me,\" Reese said hugging her. \"Before you I had no 'Achilles Heel. If you help me and it goes wrong, you could be used against me and they would either turn you or kill you. I know that you can defend yourself but these aren't humans. I want your word that you will do as I ask.\"\n\nAgainst her better judgment, she agreed.\n\n\"In retrospect, I should have waited until this was over before I approached you, but once I saw you... Alex, I need for you to be safe. Give me your word that you'll stay out of this.\"\n\n\"I already agreed!\" She snapped and then immediately apologized. \"I guess that I'm just nervous.\"\n\n\"Alex...\"\n\n\"Just don't do anything stupid so that I'll have to break my word,\" she replied. \"When is this supposed to be happening?\"\n\n\"Soon I hope,\" Reese replied pulling her tight against him. \n\nIt couldn't be soon enough\n\n****\n\nMarco was waiting for Reese when he got home.\n\n\"I was going to call, but didn't want to interrupt anything- the gala- the guest list is up and guess who's on it?\"\n\n\"Marco...\"\n\n\"Alright- I'll tell you- Emilio and Paolo! Do you know what this means?\" He asked excitedly. \"It means that the gala is going to happen soon! The fact that Paolo's name is on the list tells me that they don't know that he's dead! That also means that they haven't put the pieces together. Reese thought about assuming Paolo's identity and then decided against it. All it would take is for one person to mention the fact that Paolo was dead and it would be all over.",
        "\"What else?\" Reese asked.\n\n\"Emilio has already responded and he is attending alone. His was the only name on the list that I recognized. The doctor may be on there, but I don't know his name.\"\n\n\"I will know him,\" Reese replied as he walked away.\n\nHe went to his room to think and to call Lewis.\n\n\"What do you know?\" he asked as soon as Lewis picked up the phone.\n\n\"I know that the guest list is up which means that me and the others will soon receive word on when we will be taken to the site of the gala.\"\n\n\"Add my name to the list of your assistants and then all me as soon as you receive notification,\" Reese said his tone telling Lewis that the matter wasn't up for debate.\n\n\"How will you pass inspection? They already have the names of all of the staff.\" Lewis replied.\n\n\"Then I will assume his identity,\" Reese said curtly and hung up.\n\n**** \n\n\"The guest list is up,\" Donatello remarked.\n\n\"Are you on it?\" Vangie tiredly asked. She had made little progress in finding out who was after Donatello. When he didn't reply, she asked the question again.\n\n\"Yes I'm on the guest list,\" he replied. \"And so is Emilio- I have to try to talk to him again.\"\n\n\"Don- he doesn't care...\"\n\n\"But he might if he knew that our would be assassin will be at the gala,' Donatello interrupted.\n\n\"You're going?\" Vangie asked shocked.\n\n\"Yes and you're staying here out of harm's way.\"\n\n\"Absolutely not!\" Vangie exclaimed. \"I will not stay out of harm's way while you're on the other side of the world! In case you've forgotten, outside of the bedroom; we're equals. I'm going with you- when do we leave?\"\n\nThe argument went on for another two hours before Donatello reluctantly gave in, but not before he made promise a few things.\n\n\"You are not to leave my side for any reason. If I tell you to leave, then you leave with no questions asked- am I being clear?\"\n\n\"I understand,\" Vangie said taking his hands in hers. \"But I'm not Lisbeth. You won't let what happened to her happen to me. I won't allow it to happen- I will kill the first person who touches me. Now when do we leave?\"\n\n****\n\nElena knew from the increase in activity that the guest list had been posted. She wondered how many of the attendees were going to be new vampires who hadn't yet gained control over their strength. Those were the ones that would use her the hardest. Unfortunately she wasn't close enough to the other slaves to ask. Her previous treatment of them had come back to bite her in the ass. They still called her mistress, but it was meant as an insult.\n\nCristiano still called for her and after the last time informed her that her ass and cunt were off limits- her mouth however was another matter. She had lost track of the number of cocks that she had sucked and had quickly gotten to the point where she couldn't stand the taste of come. Still, the fact that she couldn't be fucked was a small comfort. She knew what Cristiano was doing. He wanted her to rest so that she would last as long as possible before she finally broke. She wondered how long it would take. The last gala-the one where he allowed her to be used lasted two nights. She was only used for one of them. This time it would be for the duration of the gala- could she survive that? She had to she decided. The question was how.\n\n*****\n\nReese knelt in front of the open window in his room and began to talk to the god that he had never really lost faith in. He told him how he wished that he could leave things as they were and walk away, but he couldn't and asked for understanding. He asked that Alex and all those that he cared for would remain safe while he completed his mission and finally, he asked that he be allowed to live. His conversation with god over, Reese stood up and began to prepare for the gala. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "interracial",
        "sexual slavery",
        "white males",
        "black females"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/reese-ch-04"
}