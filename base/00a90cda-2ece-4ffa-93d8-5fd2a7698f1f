{
    "title": "The Home & Family Pt. 05",
    "pages": [
        "On Sunday, Luke woke early and rode back down to the bed and breakfast. Then he took his truck back to the Children's Home and picked up Lazeras. The boy was beside himself with excitement over getting to spend the day with Luke. Luke was pretty excited himself. He was looking forward to the two most important people in his life meeting each other. The two of them picked up a picnic lunch from the store before heading back to the bed and breakfast. Then they mounted up on Luke's horse and rode up to the cabin. Luke enjoyed having Lazeras on the horse with him.\n\nWhen they got to the cabin, it was early afternoon. Dakota came out to meet them as soon as she heard the horse. Lazeras looked uncertainly up to Luke, but Luke just smiled at him and handed him down to Dakota. She didn't even sit Lazeras on the ground - she just pulled him up on her hip and started talking to the boy. Luke listened as she told Lazeras who she was and how glad she was to meet him. Lazeras played with her curls while she talked to him. When she finally sat him down, she dropped a kiss on his forehead. Luke watched as Lazeras followed Dakota into the cabin. It appeared that she had yet another loyal follower.\n\nDakota had waited on them for lunch and the three of them picnicked in the yard. Luke showed Lazeras all of the work that he and Dakota had done during the week. Although the little boy had no idea how much labor it had all entailed, he acted suitably impressed and paid attention to all that Luke told him.\n\nLuke had brought Lazeras' swimsuit, so the three of them went down to the creek and played in the water for awhile. They had splash wars and spent awhile lounging in the sun. Then it was time to go back to the bed and breakfast. Dakota had packed everything up during the morning, so now all they had to do was to load up the horses. Lazeras chose to ride the first part of the trail on Luke's horse, then he asked to ride with Dakota.\n\nIt was close to suppertime when they finished unloading the horses and rubbing them down. Luke didn't really want the evening to end just yet, so he suggested that they stop by the pizza lodge in town to grab a bite to eat before heading back to the Children's Home. Lazeras practically jumped out of his skin with excitement. First he wanted cheese pizza, then he wanted pepperoni, then he wanted sausage, then he wanted pepperoni with sausage. And that was all before they even got to the restaurant!\n\nLuke ordered two medium pizzas, one with pepperoni and one with sausage. Lazeras beamed his approval, then asked for a quarter to go play one of the video games. Luke gave him two and watched as he chose his first game.\n\n\"He looks like he's had a good day,\" Dakota said.\n\nLuke grinned, \"Yeah, I can't remember too many days like this when I lived at the Home. The week-ends were always really long. Saturday wasn't too bad, but by Sunday night, all you could do was pray that Monday came quickly. It was too quiet since a lot of the boys went away on Sunday to visit friends or extended family.\"\n\nLazeras turned and waved at them before he moved on to his next game. Dakota smiled back at him. \"Luke, he's a beautiful child. He looks just like you. Your grandfather must have had some potent genes to have two grandchildren look so much alike. Are you thinking about getting more involved with Lazeras?\"\n\nPursing his lips, Luke looked from Lazeras to Dakota. He said, \"I sure want to. I was just thinking that maybe it would be easier if I wasn't doing it alone. I was hoping that you might be inter - \"\n\nLuke was interrupted by the flash of human flesh that landed in his lap, \"Luke, Luke! I won an extra turn and then I got to go up this mountain and there was this boulder and out from behind it came this bad guy and I jumped up and hit him in the head with my walking stick, then - \"\n\nLaughing at Lazeras' joyous account of his brief video game, Luke hugged the boy to him. When Luke started to finish his earlier sentence to Dakota, the pizza arrived. Resigning himself to having to wait, Luke resolved to continue the conversation later.\n\nThe pizza was delicious and Lazeras was one tired little boy by the time that they dropped him off at the Children's Home. Even though he was getting whiny, Luke still had trouble handing him over to the Dorm Dad. Lazeras gave Luke a quick hug and a kiss on the cheek then turned and did the same to Dakota. He then giggled and ran down the hall toward his bedroom.\n\nWith a sigh, Luke dropped his arm around Dakota's shoulders. \"I guess the week-end's over.\" The two of them walked quietly back to the truck, just looking up at the stars and thinking about all that had happened over the last few days.\n\nDakota broke the silence after they were both in the truck. \"Luke, thank you so much for helping me this week. I couldn't have done it without you.\"\n\nLuke looked over at her and wrinkled his brow. \"I hope I was more than just a handy man, Dakota. I didn't go with you because you needed a hand laying flooring. I went because I wanted to be with you.\"\n\nEven in the dark, Luke could tell that Dakota was blushing. He smiled to himself and shook his head. Even after all that they had been through, she still blushed when he tried to tell her how important she was to him.\n\nLuke pulled the truck into the parking lot at the diner, beside Dakota's car. Both of them tensed up when they recognized Wiley Stone, Senior leaning against the wall of the darkened diner. When he recognized them, he pushed off from the wall and sauntered over toward them. Luke braced himself for what he expected.\n\n\"Evenin',\" Wiley said as he neared Dakota and Luke. \"Dakota,\" Wiley said, \"I've been meaning to speak to you and I guess it's only right that Rydell be here to hear me. I owe you an apology and I ain't too proud to say that I'm sorry. I ain't treated you right since you got here to Sterling and I regret that.\"\n\nIf a strong wind had swept down the street at that moment, it would have knocked Luke right over. He couldn't believe his ears. From the look on Dakota's face, she felt about the same. Right then, though, the jingle of the bell over the door of the diner caused them all to look in that direction. Ruby was coming out, locking up for the evening. When she finished securing the door, she walked over toward their group. Wiley reached out his arm and pulled Ruby to his side. Clearly bewildered, Luke and Dakota both stared at the couple.\n\nWiley smiled down at Ruby before looking back at Dakota. \"Like I said, I'm sorry for the way I acted. Now, Ruby and me has some . . . uh . . . some errands to run, so we need to be going.\"\n\nAs the two of them turned to walk away, Dakota seemed to find her voice. \"Thank you, Wiley,\" she called after them. Wiley just waved his hand over his shoulder and kept going.\n\n\"Well, Dakota, if I hadn't heard that with my own ears, I wouldn't believe it,\" Luke said.\n\nDakota was still standing in the middle of the sidewalk looking like she had just seen a ghost. \"I'm just glad you were here to tell me that I didn't imagine it. I would have thought that I dreamed it all up if I didn't have a witness!\"\n\nLuke wanted to ask Dakota when he could see her again, but before he could figure out how, Dakota tiptoed up to kiss him on the cheek. With her hand on his arm, she said, \"Luke, I really need to run, too. Thank you so much for your help. I'll see you soon, ok?\" Then she was gone.\n\nLuke shook his head in disappointment. How many times was that woman going to drive off and leave him standing alone? How many times was he going to let her?\n\nChapter Nineteen\n\nOn Monday morning, Luke was busy at work, counting the hours until he could leave and try to find Dakota. It was barely 10:00 when his phone rang. \"Luke Rydell,\" he answered.\n\n\"Luke, this is Ms. Lily. Son, I hate to do this to you, but I need for you to come out to the Home after work. I'm afraid that I have messed up the paperwork on Lazeras' records and the state is insisting that I have the next of kin's signature to correct it. I'm truly sorry, but this has to be done today. Can you come?\"\n\nLuke wanted to scream. He didn't have time to drive out to the Home - he needed to get to Dakota. But he didn't know what she was doing today. Luke reasoned that he could leave work a little early and drop by the Home before looking for Dakota. So Luke agreed to meet Ms. Lily in her office at 4:30 and take care of the paperwork.\n\nIt was actually about 4:25 when Luke pulled up in front of the main building. He was anxious to get this over with, so he could get on with the rest of his evening. In his pocket, there was a gold band with a small diamond mounted on it, and Luke wanted to get that ring on the hand of the woman he loved.\n\nMs. Lily met Luke at the door and said, \"Follow me.\"\n\nLuke thought that her greeting was a little abrupt, but he was in too much of a hurry to want to spend time chit chatting anyway. He followed her through her door and into her office.\n\nWhen Ms. Lily stepped behind her desk, Luke saw that there were two other people in the room. As his eyes adjusted to the lighting, he realized that it was Dakota and Lazeras. Before Luke could move toward Dakota, though, Ms. Lily said sternly, \"Please have a seat, Luke.\"\n\n\"Luke,\" Ms. Lily began gravely, \"Luke, we seem to have a problem. There has been a request to begin adoption procedures on one of our boys.\" Ms. Lily looked pointedly over toward Lazeras before she continued, \"I'm afraid that in a situation like this, the next of kin must be notified and must agree to the terms of the adoption. I have called you here because this directly affects you.\"\n\nAs Luke began to understand that someone wanted to adopt Lazeras, he suddenly felt like a huge weight was crushing his chest. He had just found the child and someone wanted to take him away?\n\n\"Luke, are you comfortable with adoption? Do you understand what it entails? If you agree to it, it dissolves all other prior relationships and henceforth creates a new family for the one adopted.\"\n\nLuke couldn't believe his ears. He figured that Ms. Lily was using slightly stilted language in an attempt to spare Lazeras' feelings, but what about his own feelings? She didn't want the child to know that she was asking Luke to give up his claim on the boy, but couldn't she tell how much it was hurting Luke to be asked to do it?\n\nStruggling to understand, Luke asked, \"Would I still be able to see him?\"\n\n\"Who? Lazeras? Of course, if you agree to the adoption,\" Ms. Lily said.\n\nLuke was surprised and hurt that Ms. Lily seemed to want him to agree. Just last week she had wanted Luke to take Lazeras. This must be some wonderful opportunity to have changed Ms. Lily's mind so quickly.\n\nIn a strained voice, Luke finally managed to whisper harshly, \"Do you think this is best, Ms. Lily? You've worked here for a long time and seen a lot of kids come and go. Is this really the best thing for Lazeras?\"\n\nMs. Lily cocked her head to one side and said, \"Luke, an opportunity like this doesn't come along often. What we are talking about here is the chance to create a real family. For a lost boy to finally find a home and be surrounded by people who love him and want him forever. Do you really mean to tell me that you have any questions in your heart about this? Surely even you can understand how important this chance is.\"\n\nLuke's heart was heavy in his chest. He was amazed that he had spent years being emotionally unattached and, suddenly, after only a short time with Dakota, he had not only fallen in love with her, but he had opened his heart up to this little boy as well. The pain he was feeling reminded him of why he had long ago stopped listening to his feelings. It deeply hurt Luke to think about losing the hope of having Lazeras as his son after only a few days together.\n\nLuke met Ms. Lily's eyes, looking at her with distress in his eyes. He said, \"I had hoped . . . Well, I haven't had the chance . . . Oh, hell, if you think this is what is best. . . . \"\n\nMs. Lily gave a curt nod of her gray head and picked up the paper in front of her. \"Lazeras, I need you to sign here,\" she said, pointing to a blank spot on the official contract.\n\nIt surprised Luke that Lazeras had to sign the document, when he was barely old enough to scribble his name in print. But with a certain amount of self derision, Luke realized that he had no idea how the adoption process went - no one had ever wanted to adopt him.\n\nAfter Lazeras very solemnly signed his name and returned to his seat, Ms. Lily pushed the paper toward Dakota. \"Ms. Matthews, I need you to sign here.\"\n\nLuke's head jerked around to look at Dakota. He had forgotten that she was even in the room. Yet here she was, and she had moved forward to casually sign her name on the document.\n\n\"What are you doing?\" Luke practically yelled. \"Why are you signing that paper? Are you adopting Laz?\" When he realized that Dakota wasn't answering him, he jumped up and turned to Ms. Lily. \"Why is she signing that paper? What's going on here?\"\n\nMs. Lily gave Luke a stern look, \"Young man, sit down. I will not tolerate such an outburst. Now, you agreed to this procedure, so please, calm down and let us get finished.\"\n\nLuke was fuming as he sank back into the chair. He wasn't sure at all what was going on, but he wasn't about to let Dakota adopt Lazeras without him. Before he could get those words out, though, Ms. Lily shoved the paper in front of him. She said, \"Sign here, Luke!\"\n\nThrough gritted teeth, Luke grabbed the single sheet of paper. He glanced over it briefly and started to say something, when his mind suddenly registered what his eyes had seen. Looking back down at the paper in his hands, he read the words, \"Adoption procedures for Luke Rydell\". Confused, Luke looked back up at Ms. Lily and then over to Dakota and finally down to Lazeras. All three were beaming at him.\n\nAgain, Luke looked back at the paper. He slowly read the document. It said . . .\n\n\"Let it be known from this day forward that Luke Rydell is no longer an orphan, with no family ties or obligations. By the power invested in Lillian Covington (a.k.a. Ms. Lily), Luke Rydell is officially bound to Lazeras Jones and Dakota Matthews by the bonds of love. Although this document has no legally binding power, it has been created and signed with the full intention of helping Luke Rydell realize how much he is wanted. Henceforth, Luke Rydell, according to the freedoms created by love, will be known as a man with a family - a family that loves him very much.\"\n\nBelow the paragraph was Lazeras' and Dakota's signatures. When Luke finished reading, and re-reading, he looked up, first at Ms. Lily who was smiling broadly, then to Dakota who had tears running down her face and finally to Lazeras who was bouncing up and down in his seat. The implications of the \"adoption\" slowly began to crystallize in his mind. He wasn't here to sign away his rights to Lazeras - he was here to be adopted himself.\n\nWhen Dakota got up and came to stand before him, Luke realized that he was looking up at her with his mouth still hanging open in shock. Dakota bent over and lifted his chin to close his mouth, causing him to shake off a bit of his surprise. She said, \"Luke, when you were left here as a child, you came to believe that no one wanted you. Even as you got older, you didn't believe that anyone would ever think that you were the 'special one'. But Luke, I know that you are the special one for me. You have shown me that I'm special. You are my soulmate and I never want to be away from you again. I know this whole adoption process might seem a little corny, but I want you to never forget what it feels like to be wanted. I want you very much, forever and always.\"\n\nLuke pulled Dakota down on his lap and kissed her with all of the emotions he was feeling. Never in his life had anyone done anything this extreme for him. It was silly, it was ludicrous and it was powerful. It touched all of the places in his heart that Dakota had been thawing from the long freeze in which he had lived. Dakota had been willing to make a fool out of herself in order to let him see how much he meant to her. Luke had never been so moved in his life.\n\nIt wasn't until Luke felt someone patting him on the hand that he broke his kiss with Dakota. He looked up to see Lazeras standing front of them with a questioning look on his face. The little boy said, \"Luke, I wanted to adopt you, too. Even if we don't get to go out again, I want you to know that I will always be your cousin, if you ever need to talk - you know, like man to man. I know Dakota is all nice and all, but she is a girl and sometimes us boys need to do boy things together. So, if you get tired of Dakota and want to hang out with a buddy, I'll be here.\"\n\nTears filled Luke's eyes as he reached his free arm out to hug the boy to him. Lazeras threw his arms around Luke's neck and held on as tightly as he could. Luke was thankful that Ms. Lily had included Lazeras in his \"adoption\". It had given Lazeras the chance to choose Luke. And Luke knew that soon, he would be choosing Lazeras. Luke's heart was close to bursting as he looked back and forth between the members of his new \"family\". When he finally felt like he could talk without crying, he cleared his throat and said, \"Why don't we all go and get a bite to eat?\"\n\nChapter Twenty\n\nAfter supper, Lazeras had to go back to the Home. Then Luke and Dakota headed to his house. Luke had planned on spending some time discussing his feelings with Dakota. He had even rehearsed how he was going to give her the ring and ask her to be his wife.\n\nBut Dakota had different plans for the evening! Before they had even managed to get into Luke's house, Dakota had unbuttoned half of Luke's shirt. The second the door closed behind them, she had stripped off her own shirt. Luke had realized that his plans were out the window and that he really liked Dakota's idea better anyway. He grabbed her up and carried her into his bedroom. There they touched one another's souls through their caresses. Their bodies exploded into climax as their hearts joined to beat as one.\n\nIn the aftermath of their passion, Luke whispered, \"Dakota? Dakota? Are you awake?\"\n\nDakota nodded her head and lifted her eyes to meet his. Luke dropped a kiss on her lips. He had worn his jeans into the bedroom and dropped them near the bed, so he would be able to reach them when the time came. Now, he slipped his hand into the pocket and pulled out the small velvet box.\n\nOpening the box and handing it to Dakota, Luke said, \"Dakota, earlier today, you adopted me into your heart. I want you to know that there has never been a moment since I laid eyes on you that you weren't at the center of my heart. Will you marry me?\"\n\nDakota's eyes widened. Her fingers trembled as she took the box and said, \"You had this all along?\"\n\nLuke just grinned. He pulled the ring out of the box and slipped it onto Dakota's finger. Finally he said, \"Yeah, I guess great minds think alike. I was going to ask you to be a part of my life forever tonight, too. You just beat me to the punch!\"\n\nTears began coursing down Dakota's face. \"Luke, I'm so sorry that I ran away from you. I was just so scared that I wasn't good enough for you . . . \"\n\nLuke brushed away the tears with his thumbs, then whispered, \"Dakota, it's ok. I didn't think I had anything to offer you. But I do. I have my heart.\"\n\nDakota reached up to press her lips against Luke's lips. Without words, she began telling him how much he meant to her. She brushed her hands over his chest and caressed his shoulders and arms. Luke found himself moaning in pleasure. When her fingers brushed over his sensitive nipples, he shivered in anticipation. He watched as Dakota then lightly stroked her fingers over her own breasts. It was almost more than Luke could take.",
        "Luke's moans seemed to light a fire inside Dakota as she closed her eyes and licked her lips. Without any more foreplay, she straddled Luke and took him inside her. With every ounce of energy that she had, she rode him to another shattering climax. As she snuggled wearily into Luke's side, he watched as the diamond on her ring caught the light and seemed to wink at him. He smiled in satisfaction. Yeah, family was an awesome thing.\n\n?Epilogue\n\nThe sun beat down upon the heads of the crowd gathered out by the stables for the afternoon festivities. About a dozen adults stood around the yard and about twice that many children ran through the adjacent field. Dakota was waiting with the crowd and was beside herself with anticipation and excitement. James had taken Luke off fishing that morning and they were due to arrive back any minute.\n\n\"Dakota, where is that boy?\" Ms. Lily O'Connor asked as she rounded the corner, carrying yet another tray of food out to the picnic table. Her new husband, Saul, was right behind her with more food. So far, every square inch of the table was filled to overflowing, and Dakota had no idea where Ms. Lily was going to put the plates she and Saul were carrying.\n\n\"I don't know! I wish they were here!\" Dakota said as she peered once again down the road. Just about that time, Lazeras came running toward her.\n\n\"Mama, Mama, look what Aunt Linda Jane gave me!\" He was holding out a brand new carving of a baby wolf cub. \"Uncle Marshall carved it and he says that it goes with one that he done already gave to you.\"\n\n\"Has already given to me, sweetie,\" Dakota corrected her son. Lazeras had been officially adopted by Luke and her almost before the ink was dried on their marriage certificate. That had been almost a year ago. The three of them had grown into being a family with relatively few emotional bumps and bruises. Dakota was amazed how much it had changed all three of them to be a part of one another. But Luke had changed the most. He had gone from being a man who prided himself on his need for no one to a man who believed that he couldn't live without his wife and son. She only hoped that Luke could extend that love even more.\n\nSuddenly a trail of dust was seen coming down the road. \"He's here! He's here! Daddy's coming!\" Lazeras yelled.\n\nEveryone took their places behind the wall of the barn, so Luke wouldn't be able to see them until he walked around the corner of the building. Everyone was quiet as they heard Luke and James climb out of the truck. Dakota could just make out Luke's words. She heard him say, \"Yeah, I used to hate coming down that driveway, because I thought I would always be alone, but, you know, now coming here feels like a new chance. Driving down that drive now reminds me that I am a part of a family - one that chose me and wants me.\"\n\nJames said, \"Yeah, but don't you ever wish we could have had just one of those 'family' birthday parties like we always dreamed about? One with the cake and all our friends - you know - the ones where our family showed us how much they loved us?\"\n\nLuke and James were walking closer and closer with each passing step. Dakota could now clearly hear Luke's answer. He said, \"Yeah, that would have been nice, but some things were just wishful kid's dreams.\"\n\nAt that moment, Luke and James turned the corner around the barn and dozens of voices yelled, \"Happy Birthday, Luke!\"\n\nLuke stopped cold and stood with his mouth hanging open in surprise. He barely managed to put his arms up to catch Lazeras as the boy bounded into his daddy's chest. \"Daddy, Daddy, we have a party for you. It's your birthday and this is your party. We have presents and cake and lots and lots to eat. Happy Birthday, Daddy!\"\n\nLuke hugged his son to him and looked over the boy's shoulder to see Dakota standing nearby. Luke caught his breath at the sight. Dakota was a beautiful vision to him. She was dressed in a bright yellow halter dress that showed off all of her curves and lots of skin. Luke loved the dress, and he loved knowing that Dakota was wearing it especially for him. She had changed so much over the last year and her self confidence seemed to grow by leaps and bounds. Luke knew how lucky he was to have her, and thank God, she thought she was lucky to have him. He pulled her into his side with his free arm and held her close to him.\n\nDakota whispered to him, \"Luke, I love you so much. I wanted you to have a party like the ones that you always missed. And it seemed like we needed to have it here so it would help you put to rest some of those demons from your past. Happy birthday, sweetheart.\"\n\nLuke's heart felt like it was close to bursting from love inside his chest. It was then that he noticed that the entire group of people all seemed to be staring at him, waiting for some kind of response. Luke's face burst into a huge smile as he said, \"So, this is what 39 feels like! Well, I can't wait to see what you all do for 40!\"\n\nWith that, the happy noises of a birthday crowd began. Luke ate fried chicken and potato salad with rolls and iced tea. Then, even though he couldn't think of anything that he wanted in life that he didn't already have, he made a wish and blew out his candles. The group cheered and everyone helped him eat his birthday cake. Right after that, Lazeras led him to a table covered with presents of all kinds. Luke was pleased to see that most of the gifts from the adults were checks made out to the Children's Home. Most of the gifts from the kids were handmade quilt squares that Sarah Hytree promised to sew together for him. It was a perfect birthday party and a perfect birthday for Luke.\n\nExcept for one thing. It bugged Luke in the back of his mind all through the party and all through the gift giving and all through the clean up. Even though Dakota and Lazeras stayed close by him, they never gave him a gift of their own. He had expected them to give him one early this morning. Then, when he realized that they had planned this party, he thought they would give him one at the gift giving time. Then he thought that maybe they would give it to him after everyone was gone. But now the party was over, they were back home, it was supper time and they still hadn't given him anything. Luke chastised himself and told himself that it was enough that they had thrown him such an awesome party, but in his heart, he wanted a gift.\n\nLuke was getting irritated by the time he sat down to dinner. Lazeras and Dakota were acting like nothing was unusual. But try as he might, Luke just wasn't able to act nonchalant. He was just about to say something about it when Lazeras jumped up from the table and asked to be excused.\n\n\"Son, you haven't finished your dinner,\" Luke said.\n\nBut Lazeras looked agitated and asked again to be excused. Luke shrugged his shoulders and let the boy go. He turned to speak to Dakota, but she jumped up right then, as well. \"I need to go to the kitchen,\" she said.\n\nLuke threw his hands up in frustration. What was wrong with these two people? Luke went back to eating his supper, but somehow, it just didn't taste very good at that moment. It wasn't any fun eating alone.\n\n\"Luke, could you come help me for a moment?\" Dakota called from the front door. Luke wondered what she was doing in there, but he followed the sound of her voice anyway. It wasn't like he was enjoying his supper much anyway.\n\nWhen Luke found Dakota, she was wrestling a large box through the doorway. Lazeras was outside, trying to help her push it into the house. \"What's this?\" Luke asked as he moved to help get the box inside.\n\n\"This. . . this is your . . . your birthday present,\" Dakota said, between tugs.\n\nFinally, the three of them managed to get the box through the door. \"What is it?\" Luke asked excitedly, looking sideways at the picture on the side of the box. It looked a lot a like a cage of some sort. A cage with legs. He frowned at the box and looked along the edges for a description of some sort. When his eyes landed on the words, \"Heavy Duty, Deluxe Crib\", he wondered why Dakota had bought him a crib. Then he saw the words, \"Let your baby sleep in all the comfort and safety of a Bryer's baby bed.\"\n\nWith a questioning look, Luke turned to Dakota. He said, \"Dakota? Why did you buy me a baby crib?\"\n\nWhen the slow smile began spreading across her face, Luke suddenly realized why they needed a crib. \"Dakota?\" Luke said, with his eyes practically popping out of his head.\n\n\"You did say you wanted a family for your birthday, didn't you?\" Dakota whispered.\n\nLazeras was less inhibited and started jumping up and down. \"Daddy, we're going to have a baby! Happy birthday!\"\n\nAnd standing there with his wife, his son and his future baby, Luke realized that it really was the best birthday he had ever had - he had finally gotten what he always wanted."
    ],
    "authorname": "JewelTran",
    "tags": [
        "luke grinned",
        "asked excused",
        "whispered dakota",
        "lazeras luke",
        "gave luke",
        "luke wanted",
        "dakota face",
        "luke found",
        "dropped kiss",
        "paper front"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-home-and-family-pt-05"
}