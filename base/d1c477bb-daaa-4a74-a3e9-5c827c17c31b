{
    "title": "My Little Ventrue Pt. 04 Ch. 10",
    "pages": [
        "~~Eric~~\n\nFuck fuck fuck fuck fuck. \n\nHe clutched the small woman against his body, tight enough so he could keep running, but there was no hiding that she was bleeding on him. Her blood was soaking through his suit and onto his skin. Each labored breath he took filled his lungs with the smell of it; and the smell was so damn famliar. Blood, life, from this dying creature in his arms.\n\nHe shook his head. What the fuck, get a grip.\n\n\"Just... find me a place... really... really dark. Completely... dark.\"\n\n\"You have a bullet in your fucking stomach, Fiona!\" He winced as another bullet snapped nearby, crashing into his shadow as he rounded another corner. Those psychos were a ways behind him, slowed down by that weird web thing the girl had made, but they were going to catch up.\n\n\"Darkness... all... I'll need...\"\n\n\"Darkness? Like, a shadow.\"\n\n\"Darker... complete... darkness.\"\n\n\"You need a hospital you fuck\u2014\"\n\n\"Darkness!\" She grabbed his suit jacket, and managed to shake it a couple times as she raised her eyes to glare at him. Christ she was pale.\n\n\"Alright, alright! Fucking darkness, alright.\" He looked around as he ran. Easier to ignore the grinding pain in his knee this way at least, panicking about the bleeding-to-death girl in his arms and trying to find some place where he could get the sort of darkness she was looking for.\n\nIt was night time, and he was on the edge of North Side and South Side. Only a mile from the neighborhoods, and he could run that. It'd destroy his knee, but he could run it. The girl was insistent though, very insistent on the darkness crap, and after seeing her defeat four psychos using some very weird shit, he really should just do what the girl said. If girl was even the right word to describe her.\n\nWas she a monster? Or a regular every day Spider-Man? Far as Eric knew, Spider-Man didn't stab people with giant black blades. And that was a comic-book character. This girl had done insane fucking shit right in front of him, summoned something large, with eight legs that doubled as blades, and she'd attacked with them. Shadows that vanished after she used them.\n\nShe'd told him to not say anything, as if this was something she'd anticipated. God damn it, the fuck sort of ridiculous shit did he get caught up in?\n\nHer blood was dripping down into his clothes. The feel of its warmth on one of his legs cracked across his brain like a whip. Find darkness, get to some fucking darkness.\n\nA nearby building, some old, decrepit multi-floor building that was abandoned, waiting to be renovated and fixed. The door wasn't locked; most of the super old shit wasn't, worthless as the property was. He leaned down to open it, one arm hooked behind Fiona's shoulders, the other under her legs. With a little maneuvering, the two of them slipped into the darkness of the old building that was bound to fall on their heads at any moment.\n\nHe was panting, gasping, and every word stung his lungs. \"You'd think... with how much money is rolling around South Side... they'd have enough money to fix... all these abandoned buildings... North Side.\"\n\n\"Old... town.\" She was gasping too, coughing, choking, but no blood came out of her mouth. Not lung shot, but the bullet had definitely ruined her side, her waist, and he was afraid to look down and see. She could start vomiting blood any minute. Just keep moving, keep moving.\n\nNo wonder the place was abandoned. The brick walls were filled with half-broken slabs, bits of ceiling had fallen apart and rained wood chunks over the equally destroyed floor, and old lighting fixtures hung empty. So dark, so very dark, dark enough he had to squint to see the silhouettes of the walls, and that was with his better eyes.\n\n\"D... Darker.\"\n\n\"Darker, right, darker. You know you're going to bleed to death? And I'm going to go to prison for it. You think a black guy won't get pinned with first degree murder, getting caught with a dead white girl in his arms?\"\n\nShe laughed, then let out a quiet, low whine as the pain ravaged her, left her shivering and curling up against him. Don't make jokes, bad time for jokes.\n\nThe building looked like it must have been used as a private office building, probably for lawyers or accountants or something, with a secretary behind the large desk he found in what looked like something between a living room and a lobby. Falling apart benches lined the walls to his left and right. The drapes were rotting, and horrible.\n\n\"B-Basement... hurry... I have to see her.\"\n\nSee her? Basement? Cold started to work up his toes and into his legs, until his heart sped up for more reasons than adrenaline. He gulped as he looked down at the bleeding woman, the bleeding monster in his arms, and winced as he noticed her getting paler again. She was already pale, redhead and freckles and all, but his eyes could make out the white showing through as the blood drained out of her.\n\nSecond time he'd ever met this girl, and she was going to bleed to death in his arms. Fuck. Fuck fuck fuck.\n\nBreathe, just breathe. Remember the shit in your dreams. Breathe.\n\nHe started wandering around, feet tripping over random bits of rubble. No time no time, go faster, find something. There were hallways lined with doors, and he peeked into them as he went past them as fast he could, but a basement wouldn't be connected by a door in the hallway. Think. End of the hallway? No, a lot of these old buildings put a basement door near the bathroom.\n\nBingo. He pulled the door open, and gulped again.\n\nBlackness.\n\nWhen he was a kid, he'd visit his uncle and aunt's place. A nice home, pretty big, fancy, old. It had a basement, deep and large, with stonework straight out of the medieval ages, exposed pipes and wall studs that still hadn't been covered in drywall. It was a great place to goof around with sticks or a soccer ball, but the light switch was on the wrong end of the large room, far away from the staircase that lead back upstairs. Come nightfall, turning off the light meant navigating the large basement in pitch black to reach the stairs.\n\nHe was always sure, each night that it had happened, that a monster was going to get him. It never happened, but he could still remember how fast it got his heart beating, navigating the blackness to find the old wooden stairs. Stairs just like the ones he was looking at. Blackness, just like the blackness in front of him.\n\n\"Ok, yeap, I'm going to die. We're both going to die, in a black abyss in an old building.\"\n\n\"Please... hurry...\"\n\nGritting his teeth until it hurt, he started to walk down the stairs. His eyes were better now, so much better, and they couldn't see shit. It was just blackness ahead, complete black, and with his hands underneath Fiona's body, he couldn't feel what was ahead of him either. Couldn't reach out to brace the wall beside him, at least, until he turned his body a touch so he could nudge his shoulder and Fiona's feet against it. A wall meant something, and something was far better than empty black, than endless nothing.\n\nHe'd probably make a horrible astronaut. Floating out there in the black, in the endless nothing? He shivered, and stared ahead into what might as well have been the same empty, colossal space before him. Breathe, just breathe.\n\nEach step slow, each step painful as his knee fought against him, each step like walking into an obsidian chasm. He did his best, poking out with his foot and looking for the step below, and each time he managed to find it, covered in dust or bits of broken wood. If he stepped on a large bit of broken anything, good chance he'd trip, and tripping right now was a bad idea. Slowly, he took each step, and stabilized on each step before he took the next.\n\nHe almost tripped when he ran out of steps.\n\n\"We're uh... at the bottom. I can't see shit.\" He glanced back up to the stairway. Just a glimmer of a glow from the doorway above and behind them was the only light source, and it wasn't reaching down where they were, in the pit of death.\n\n\"Put... me down, and take... my hand.\"\n\n\"Girl, you're bleeding out, and\u2014\"\n\n\"Just... do it.\"\n\nGod this girl. Not long ago the best he thought of her was that she was a fun, bubbly glass of champagne. Now, the girl had grit, serious grit, the sort of grit that made you keep fighting even when your knee was destroyed, the sort of grit that usually backfired and got you killed. Reality wasn't a fucking movie, you didn't get to succeed just because you were determined.\n\nBut at this point, she was going to die either way. She felt cold, and she wouldn't stop shivering. Her voice wavered and cracked. She felt lighter.\n\nHe set her down, and kept one hand underneath her armpit, the other holding her free hand while she cradled her wound. He thought. He couldn't see to be sure.\n\n\"Just... follow me... and... d-dinnae freak out.\"\n\n\"I'm beyond freaking out. You're shot, you're bleeding out, and instead of running to a hospital, we're in the basement of an abandoned building. I... I saw you do things, Fiona.\"\n\n\"Aye. Ye'll... get to see more... in a moment.\"\n\nWonderful. Fucking wonderful.\n\nHe supported the girl as best he could. She managed a step, and then another, and her clothes shifted as she moved her hands in ways he couldn't see. He could hear the drip of blood against the concrete beneath them, and each made his muscle tense and heart ache. Girl was going to die, and\u2014\n\nSomething wet soaked through his shoes, his nice shoes too. He almost laughed at the concern, and raised the shoe to try and look at it. No good, still pitch black, and whatever the liquid was, it couldn't have been blood, unless Fiona had suddenly turned into a pool of blood ahead of him. Nope, girl was still holding onto his hand, his holding hers and the other under her shoulder. But, each step soaked his shoes, and each step sank his shoes into something soft. Soft but kind of hard though, like wet mud over earth.\n\nHe tripped. Fuck, fucking fuck. So careful, every step had been so careful, but whatever he was walking in didn't give a shit, and gripped on a shoe hard enough that it forced the step to follow shallow. Toe collided against something solid, and he spiraled with it, flopping forward and landing hard on his hands, both of them. Something wet and soft covered his suit head to toe, and soaked into it until he felt it on the skin.\n\nShit, Fiona! He turned to face where she'd be falling, and waited for the sound of her crashing into the wet crap beside him. But she didn't.\n\n\"... this is home...\" She smiled at him. Smiled. He could finally see, just enough lighting, just enough of a shade for him to catch her silhouette, and then the most basic features.\n\nShe didn't look like Fiona. She didn't sound like Fiona. Accent gone, replaced, changed, and her body rising higher, and higher, before in a gentle sway, it melded into the bending shadows of the leaves and vines around him.\n\nLeaves? Vines? He jumped up, and groaned as bone ground on bone in his knee. He fell over again, but this time managed to catch himself against a tree. Tree. A fucking tree. What?\n\nBreathe, just breathe. And with every breath, his eyes opened wider, adjusted to the glimmer of light that was hitting him and the mud around him through the canopy above, and exposed more of the impossible. A forest. A jungle. The heat was immense, and it wasn't long before beads of sweat started to drip from his body. The smell was intense, of plant life, of animals, of rot and shit and fungus.\n\nBreathing wasn't so easy anymore. He forced it, made each breath happen, but each was flooding him with a billion smells, and he almost started to panic. He'd never had a panic attack before, but he could feel it coming, feel his muscles lock and started to shake, feel his lungs refuse to listen. He forced them to listen. Fucking breathe.\n\nHe gripped the tree beside him, felt the moistness of its bark, and whatever was growing on that bark. He felt his shoes push and shift against mud, and grass, and rocks and roots, and mulch. He felt the oppressive heat and humidity push through his suit. He felt eyes on him, everywhere, beady little eyes watching from branches and hanging vines from high above.\n\n\"... I'm in a fucking jungle.\"\n\n\"You are.\"\n\nHer voice, not the same voice anymore, but someone else's. Or was it even the same girl? Someone in her spot had sort of just, lifted off of the ground, and vanished into the trees and darkness around him. Maybe something had dropped down from above, grabbed her, and yanked her away?\n\n\"Where's Fiona?\"\n\n\"I am Fiona... I am Vrallar'trakla of the Eight Blade Arach.\" A raspy voice, powerful. Frightening.\n\n\"Those are two different names.\" And one of them was a very weird name with a weird title attached to it.\n\n\"That is... how it is for me, us. Not for most others of my kind, but for some, for me.\" The invisible voice moved with rustling leaves, drifted above him, over and around him, like the shadows were whispering to him.\n\n\"... where are we?\"\n\nShe laughed, a deep and powerful sound. Nothing like Fiona's laugh.\n\n\"You remind me of Damien.\"\n\n\"... what?\"\n\n\"A vampire that stumbled into my home. Do not worry about him.\" The voice sighed what sounded like relief, and pushed aside some of the canopy.\n\nOnly then could Eric see everything clearly, and he wasn't so sure he wanted to. His eyes locked onto the two moons, one large, soft red, the other smaller but glowing a strong white. Not strong enough to provide much light beneath the canopy of what was apparently a jungle, but strong nonetheless.\n\nBut with the canopy pushed aside, he could finally see Fiona, or Vrallawhatchamacallit. And his jaw dropped as he stared at the exposed monster.\n\nA humanoid shape floated many feet above the ground, and eight gargantuan spider-like legs came out of her back, long, slim, blade-like, with four of them stabbed into the earth while four others were touched and balancing against nearby trees and branches. The girl held by the legs looked absolutely nothing like Fiona, at all, not even close. Dark steel-colored skin, and instead of feet, her legs came to end in points, like her spider legs, like stiletto shoes without the shoe part, only the stiletto. Her hands were similar, with only two fingers and a thumb each, and those two fingers were long black blades like the rest of her limbs.\n\nShe was wearing a white dress, of what looked like the same spider silk material he'd seen her use a few times already. It dangled off of her, loose, pretty revealing too, and as much as he was looking at some sort of monster creature straight out of a nightmare, she had curves. Nice curves. Inhumanely nice, in fact, as he noticed her waist was too small for all her organs to fit, or a human's organs anyway. But, a tiny waist paled in comparison to her other inhuman features. Especially the crown of horns. \n\nShe had a mouth and nose like a human, except for the dark, steel color. But she had no eyes. Black spikes curved outward from where eyes should have been, and joined many other spikes of similar shape that jutted outward from her skull, coiling backward and creating a sort of crown shape. Like some sort of beautiful, ancient creature, with a myriad of spikes flowing backward over her skull, instead of hair.\n\nBeautiful, in a strange please-don't-kill-me sort of way.\n\nShe smiled down at him from above. Her new mouth was smaller than her old one, subtle black lips offering him a warm smile.\n\n\"You're... you're um... I uh... dreaming, yeah I'm dreaming.\" He pinched his skin on the back of his hand. Still in the jungle. He slapped himself hard enough to spark a fresh headache. Still in the jungle.\n\n\"I have invited you into this little pocket of nightmares, Eric. I... would have preferred to do this more gently. Or perhaps after Avery had spoken to you of your condition. None of this is as I had hoped.\" The spider creature lowered herself down to him, but she never quite touched the ground. Always her legs dangled underneath her a few inches over the mud, with her sharp, pointed blade feet grazing against grass.\n\n\"Ok, not dreaming. I'm not dreaming, and you're a spider monster, and I'm in a jungle. Where... where's the city? What the fuck is going on?\"\n\n\"... perhaps not so much like Damien. But then a vampire would have an easier time accepting this than you.\"\n\n\"Vampires!?\"\n\nShe chuckled. God, she sounded nothing like she did before. The weird rasp to her voice, its power and size despite her normal-sized humanoid body, it was hard to accept that this was Fiona. But it was Fiona.\n\n\"W-Wait, you're not bleeding?\"\n\n\"No. Vrall has healed my wound, but at a cost. I hunger.\" \n\nYeap, that sounded straight out of a nightmare. He backed up again, but a tree was behind him, and he wasn't about to dart into the dark jungle blind, with nowhere to go. Christ, he was in a fucking jungle! Where the fuck was the city, the abandoned building, the distant honking of car horns and the smell of asphalt and gasoline. Fuck, it was all gone, all replaced. Now there was nothing but jungle.\n\nBreathe.\n\n\"Ok, um, my shit can wait. For now, can you explain to me where the fuck I am, and... and... what the fuck you are?\"\n\nShe sighed, nodded, and reached out a hand for him. If she'd had a blue and red pill in that hand, he'd have taken the blue and just closed his eyes. But he was neck deep in this shit whether he wanted to be or not, so, he took her hand, and waited. Her skin was oddly soft despite its dark steel color, and despite how the two fingers and thumb looked like black blades more than anything.\n\n\"At least I know you better than Damien, the first time this happened. That man hunted me into my lair, and I thought for sure he was out to kill me.\"\n\n\"Damien... and\u2014\" He gasped and clenched his jaw as Fiona, or Vrall, started to pull him up, and up. Her other hand reached out to hook under his shoulder, and she steadied him as she took him higher. Strong, damn strong. Her massive spider legs had no issue carrying the two of them, and within moments she'd lifted them fifteen feet into the air, and set them both onto a large branch. Up in the canopy instead of underneath it, it was easier to stare out through the levels of vines, leaves, and branches to see how the white and red moons bathed the jungle in their light.\n\nA small part of him thought this could be romantic. A much bigger part was flipping the fuck out. Fiona had set him near the trunk of the tree though, and he braced against it with one arm as he looked down into the darkness beneath him, and then out over the rolling land of jungle.\n\n\"My phone. I need to contact Natasha, and tell her of these four, that they were indeed hunters and are now chasing me. They may know where the boy Jack is.\" She frowned, though without eyebrows, or eyes for that matter, it was hard to tell. Only the subtle scrunch of her small nose gave it away.\n\nGod, she sounded nothing like Fiona, not even in dialect, and he couldn't place the foreign accent either. Brazil maybe?\n\n\"Like I said, uh, Fiona, your phone's destroyed.\"\n\n\"Damn it.\" She sank some of her claws into one of the branches passing overhead, and Eric pulled his head back as it snapped like a twig in her sharp grip. \"We made a mistake, a bad mistake, Eric. Now they know about me, and you, and... I'm sorry, for dragging you into this. I thought we'd get to see what they were up to, and not get spotted.\"\n\n\"I guess we underestimated them.\" He said it with raised eyebrow and eyes darting around, both at the jungle around him, and the monster girl in front of him. Still had a million reflexes telling him this couldn't be happening, but with the hallucinations he'd already started suffering\u2014\"Wait, am I hallucinating this?\"\n\nShe turned to face him, blade legs hovering a single inch above the branch where her feet should have been. \"Of course not.\"",
        "\"You say that, but here I am, regular Joe, in some sort of nightmare jungle with a half naked spider lady.\"\n\n\"... I imagine in your hallucinations, there is only the one moon... and... perhaps she speaks to you?\"\n\n\"How do you know that?\" He reached out for her, grabbed her bare arms, and shook her. The crown of enormous horns that coiled back from her forehead and eye sockets shined in the strange moonlight. All her skin did. She really was soft. \"How... I... I don't...\" \n\n\"... perhaps, as you said, we should focus on our present circumstances? I can explain about you, later, but for now, you should understand that you are in my lair. Please, tread lightly. I am... there is... you are in a dream, Eric, but you are not dreaming.\"\n\nHe frowned. This was turning into some ridiculous Disney movie spiel, about how he'd stumbled onto something magical, and his life would forever be changed after this moment. Yeah, changed, because now people were shooting at him, and he was going to go home with fucking malaria.\n\n\"A dream?\"\n\n\"A pocket of dream. A nightmare. A... very old nightmare, where... Vrall nested.\" She gestured to herself, her body. \"I told you about my nightmares. I guess I was just... trying to bond with someone who was going through their own changes, not so long after I went through mine only a year ago.\"\n\n\"And\u2014\"\n\n\"And you are not a Begotten. But changes are upon you, and... ugh, this is a mistake. This is all a big mistake. I should not have involved you, I should have let you be, and later when you came into your own, maybe then...\"\n\n\"Yeah, well, too late for that.\" He sounded angry. He was angry. Christ, he was always fucking angry, and whatever was happening to him was adding some straight up hunger and aggression to go with it. Breathe. \"I really am a fucked up person to help you with... whatever it is you're doing, you know. Did you not piece together the train wreck that is my life?\"\n\nShe tilted her head to the side. Without eyebrows, he guessed it was the best way she had to express surprise, or interest, or something.\n\n\"That is a part of the reason I was delighted to see a change was upon you. You seemed so... normal, compared to my vampire friends.\"\n\n\"And vampires, vampires are a thing?\" Again, his hands went up, and again he braced against the tree in case sneaky gravity decided to break his neck.\n\n\"Yes. But we can talk of them later. For now, just understand that you are in my lair, my home, a nightmare. I am a creature of the nightmare, and you are within that nightmare. Please stay close, or the nightmare may attack you.\"\n\nUgh, this was some fucking Amazon jungle nightmare shit right here.\n\n\"Ok, I'm just going to turn off the smart part of my brain, and just go stupid kid mode here. I'm in a dream world, a nightmare, got it. You're a nightmare creature, some magical, terrifying, creature. Got it.\" He almost said busty, cause the little silk dress thing she was wearing was barely more than a sash, and it didn't do a good job of covering up her exaggerated proportions. Made sense, he supposed, if she was a dream creature thing. Combining sexy with terrifying was a staple of nightmares, and slasher movies. \"And those dudes chasing us?\"\n\n\"Hunters. Killers of vampires and other creatures. Perhaps of Begotten as well. I wanted to follow them because it is possible they know where Jack is. A friend who has disappeared. A vampire.\"\n\n\"O... k. Friend, vampire, vanished, think he might be alive. So we were going to tail these four and now everything is fucked.\"\n\n\"Yes. I\u2014\" Her body went rigid, her lowered head raised to stare straight, and then snapped around to look down and behind her.\n\nLight beneath them, flickering as it passed leaves and vines, white light, the sort of light you got from LED.\n\n\"They're here.\"\n\n\"They followed us?\n\n\"... they must have followed my trail of blood into the building and its basement.\"\n\n\"You didn't, I don't know, close the crazy fucking magical gateway behind you?\" Getting snippy wasn't going to help, but then, this was why he normally just kept his fucking mouth shut, because he turned into a snippy asshole bastard when he started mouthing off.\n\n\"It takes a moment to close, and... and the gateway is large, it filled all the darkness of the basement. They must have been right behind us. It is closed now, but... too late.\"\n\nBad to worse, always bad to worse. Why the fuck did things always go from bad to worse?\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nThe pain went from bad, to worse. He was never going to get used to pain.\n\nPart of him thought he might. Memories of what Viktor did to him weren't old enough to be forgotten. Memories of Damien stabbing him through his stomach were definitely not old enough to be forgotten. He still winced when he remembered Julias's lesson about how much fire hurt Kindred, and how the older a Kindred was, the more damaging fire and sunlight could be.\n\nIt all sort of amalgamated into a searing poker of experience that stabbed through his brain, along with the sword stabbing through his leg.\n\nHis screams continued for ten seconds, until at last the agony became manageable, enough so he could stop screaming at least. He stared at the hand holding the large knife, the knife itself, and where it penetrated through his suit pants, his flesh, and through the bone of his leg. Never, ever, had a pain hit him with such vivid clarity, as a knife jammed through his bone. Viktor cutting his face and chest in half an inch deep had been overwhelming, almost surreal. This was all easily defined, radiating from a specific point, and making the muscles in the leg flex in some sort of futile attempt to expunge the blade. Each flex forced groans from Jack, each blinding him with flashes of white pain, until he started to go limp.\n\nHe grit his teeth, started breathing through them, and forced his eyes to look up at the psychopath.\n\n\"Stop...\"\n\nJeremiah twisted the knife.\n\nAll at once the pain renewed, bones bending, flesh scraping along the side of the blade, bone too, until he felt something snap. Pain worked up and down his body in waves, each hitting his skull and forcing his stomach to squeeze on itself. Trying to make him vomit. Kindred wouldn't vomit, not like this, but he could still feel his body trying to make it happen.\n\n\"Azamel's nightmares spread, vamp. She grows hungry. You don't even know what I'm talking about and you still defend her?\" He almost snarled, but opted for twisting the knife more instead.\n\n\"Stop! Stop, please!\" He wanted to vomit twice over, for saying those words. But for all the movies he'd seen and stories he'd read about heroes resisting torture, nothing could prepare him for real pain. Not resisting it, anyway. If some empty words could get it to stop, then he'd fucking say them.\n\nHe remembered once a book he'd read, where one of the main characters was a torture survivor. The man had described in vivid detail how his permanently ruined body had been flayed, burned, cut and dug through, but it was the passages about having his teeth broken apart and the nerves prodded that made Jack's body sick with worry.\n\nThe man smirked, and yanked the blade out. Jack screamed again, and threw his head back as he felt metal destroy muscle and skin and bone on the way out. But again, he grit his teeth, and forced himself to breathe on useless air; it stopped his screaming, and for the moment that was the only goal he could focus on.\n\nThe two guards at the door winced, a few times at that, and glanced between each other before looking to the two nutjobs intent on torturing him. They didn't seem the same as the psychopaths. And, when he managed eye contact with them, he could feel the mind of a kine, like he should have been able to.\n\nNot the two in front of him though. Jeremiah, and Angela, he couldn't get past their eyes. Something in their gaze, something in them in general was blocking him, holding him at bay. But if he could tap into the other two, then it wasn't the cuffs blocking his Kindred abilities, or not completely anyway. And his leg was healing, so the cuffs weren't working some crazy magic magic to keep his vitae-infused blood from healing him. The cuffs were doing something, but not that.\n\nEver since he'd seen Lucas summon a bolt of lightning, he tried to keep an open mind about magic. Antoinette had called it Theban Sorcery. Made swallowing the fact they'd put some sort of enchanted cuffs on him easier.\n\n\"You're young,\" Angela said.\n\n\"... y-yeah... you could say that.\" Groaning, stifling a whimper, he looked down at his leg and the closing wound. His blood realigned the twisted and punctured bone, set its contents, and let him relax as the pain lowered from agonizing, to only extremely painful.\n\nShe reached out, grabbed his chin, and forced him to look her in her good eye. Hard hands, callouses and all. \"What would Azamel want with you?\"\n\nUgh, moving into territory of sensitive information. He shouldn't tell them he was sort of an intermediary with the Uratha; they didn't seem to know the werewolves were even in the city though. But Azamel wanted him for the same role, and he shouldn't bring that up.\n\nAngela's grip tightened, let go, and then turned into a fist to crack backward against his jaw. She hit hard for a human, and his head jerked to the side fast enough to wrench his muscles. Bone to the skin, hard enough to damage and split the skin at the lip. Kindred wouldn't bleed from that, and the wound started to slowly heal; which just pissed her off, and earned another backhand against his face, twisting his head the other way. A strange sensation, feeling your brain bounce around inside your skull. And then the pain replaced it, headache, then migraine.\n\nIt healed quickly, but he did his best to not let Angela know that. Better to act like he was in agony at this point. And he was, fucking hell he was, just not dying of it like a kine would have been. Silver lining, always look for the silver lining.\n\nScratching metal drew his eyes. Sparks, and then, flame.\n\n\"I asked you what Azamel wants with you.\"\n\nHe pulled his head away, and tried to do the same with his body. But the chair was bolted down, and as he jangled the cuffs behind him, he could tell the cuffs were chained to it. He couldn't even shift his hands from side to side, which meant the cuffs were solid connected to the chair somehow.\n\nHe was avoiding the question, and that was probably the last thing he should have been doing. Angela brought the blowtorch closer, and closer, until the flame cut across his face only inches from his lips. Heat, fire, panic. He started fighting against the chair harder and harder, but all it did was jingle the chains louder, and earn a smile from the woman with the glass eye.\n\nJeremiah pushed down on her hand, and inched the fire away from his face. \"You really have a lot of respect for Azamel.\"\n\n\"... respect?\" Jack said. \"Just... fear, really.\"\n\nJeremiah raised a brow, wiped the ashes from his knife, and slipped it back into some pocket inside his trench coat. \"Afraid of her are you?\"\n\n\"Like you guys said, I'm young. Afraid of a lot of things.\"\n\n\"Not of us it seems.\" Angela brought the flame closer again, and Jack twisted his head side to side as he pulled it back. Maybe if he still had a functioning bladder, the piss soaking his pants would have backed up his claim.\n\n\"... you're... the first hunters I've ever seen.\"\n\n\"Dolareido,\" she said as she pulled back the flame, \"isn't too high on the local hunters' list. You vamps keep a low profile, here in slut city.\" \n\n\"... the Prince encourages Kindred to feed without killing.\" Maybe he could talk to these people? No need for all this violence, right? Ugh, just fooling himself. They were going to stab him again, or punch him again, or torch a hole through his chest, and he was really just talking to avoid that from happening.\n\n\"Lucky you.\" Angela shrugged, let the blowtorch go out, set it aside, and leaned over the back of the chair while she flicked the lighter. \"In other cities, where the vamps are real fucking maggots, we're not so nice in getting the info we want.\" She brought the lighter closer, lit it, and held it inches from his face. Inches, only because he couldn't pull his trembling head back any further. \"Great thing about vamps though, is you can torture them so much more than most things. Ever seen what happens to a vamp when you cut off their arms, and their legs, with barbed wire?\" Chuckling, grinning, she brought the lighter in closer still, until all he could see through one eye was the flame, and the death it represented an undead thing like him.\n\n\"Sounds... horrible.\"\n\n\"It was.\" Jeremiah grabbed a nearby chair and sat down, though not reverse like before, like Angela was. He folded a knee over the other, took out a leather-bound journal, a pen, and started writing in it. He was halfway in the beam of light that came through the open door, and he aimed his book toward the light as he wrote.\n\n\"Jeremiah is a little soft when it comes to vamps,\" she said.\n\nOh Christ, if he was soft, the fuck sort of duo was this? Bad cop and sadistic cop?\n\n\"You'll have to forgive Angela, Jack. Bad history. But then I suppose that's how all of us get into this sick little game, a bad history.\" He shrugged, jotted a few more notes, and gestured to the two guards. \"Angela and I aren't hunters though, not like the ones you're thinking about, none of this Vigil shit. We're not here for you worthless blood suckers. We're here for bigger prey.\"\n\n\"... Begotten.\"\n\n\"Bingo.\" Angela closed the lighter, putting out the flame. Once between her fingers, she gripped it in her palm, squeezed on it, and used the fist to punch him. Brain bounced around in his skull, headache throbbing and pulsing through his body. The damage to his face, his lip, his jaw, all superficial sharp stings compared to the migraine.\n\nHadn't even asked him a question and she was hitting him. The fuck was he supposed to do?\n\n\"Azamel's domain,\" Jeremiah said. \"Ever been there?\"\n\n\"... domain? She... she lives in the tunnels. You already know that.\"\n\nThe man nodded and closed the book. \"Well, she's hiding down there. But that's not what I'm talking about. I'm asking about her domain. Have you seen it, or any of its chambers?\"\n\n\"No... I've talked with her once, and it was in the tunnels.\"\n\n\"Why?\" And again, Angela drilled her fist into him. His chest this time, and he coughed up on the air he was going to use to speak. She liked hitting him. A human her size shouldn't have been able to hit him this hard.\n\nBefore he could say anything, she punched him again. Crack. He groaned a scream, gargled messy sounds, and stared down at his shirtless chest, where her fist was pressing and grinding knuckles into his breaking ribs.\n\n\"Angela, he's a vamp but he still needs lungs to talk.\" Jeremiah opened the book again, and started jotting down more notes. \"Jack, keep talking and she won't cut a hole through your stomach with that blowtorch.\"\n\nThe woman flicked her lighter a few times, and adopted her grin again. Jacob's grin, when he was feeling playful. Jack winced as he saw it, and did his best to ignore the trembling in his legs and the pain in his chest.\n\n\"I don't... know anything... She showed up some months ago, randomly.\"\n\n\"Not so random.\" Jeremiah lifted the journal, and showed him a page. A drawn picture of Lucas's face. Made sense, since you couldn't take a good picture of a vampire.\n\n\"H... How did you... manage to draw that?\"\n\n\"I didn't. A hunter did, many years ago. Way I hear it, there was some fighting between the vamps here some fifty years ago, and Lucas disappeared. Only to show up again after that Viktor vamp died. And then he died too.\" The old man shrugged, leaned back into his seat and flipped to another page, slow and controlled. \"Azamel didn't get along with those two.\"\n\n\"How... do you know all this? I\u2014\" A fist crashed into his face, and his skull whiplashed backward, bouncing against tightened muscles behind him. Pain came a second later, and he choked down a sob as the pulsing agony exploded outward from his face. Not a good time to cry, so he wasn't going to cry. He was a Ventrue, and he was going to bite his lip and figure out a way out of this. And crying would let them know how fucking close to broken he was.\n\n\"Hunters are a pretty dedicated sort. Useful. Aren't you?\" The old man looked to the two at the door, and they returned some sneers. Not happy to be working with this guy then, maybe. Made sense, given that Angela and Jeremiah were sending him all sorts of psycho killer vibes.\n\nHunters must have been in Dolareido for some time then, or at least, humans who knew about vampires, and kept their eyes open. Reporting information to someone? Kindred told him hunters were just people, or groups sometimes, wandering around and killing paranormals they got their hands on. For understandable reasons really, as vampires like Viktor or Lucas toyed with the lives of kine like cats toyed with mice before killing them.\n\nA lost family member, a lost love, killed by a hungry Kindred that made a mistake in their hunt, got seen, or let the other person go. Said person gets it into their head to get revenge, and gets sucked into the world of paranormal. Might make a good novel to read, if said persons weren't currently beating his face in.\n\n\"What did Athalia want to talk to you about,\" Jeremiah said.\n\nJack winced, and looked down. Mistake. Angela cracked her fist against his chest once again, and he whined as he felt knuckle crash against muscle and bone. A second punch caught him when he didn't expect it, couldn't brace for it, and the pain of a wrenching neck joined the breaking agony of knuckles, again, colliding with his face.\n\nHis head fell forward, but not because he was looking down. He wasn't looking at anything. Body refused to work anymore as everything went blurry, as the waves of pain had him shaking, spots filling his vision, tremors working down his chest and into his core. Part of him wanted to ask, beg her to stop beating him, but he knew she wouldn't. He knew that, despite their words, they weren't going to let him leave alive.\n\nTwo options then: stall until someone came to his rescue, or figure a way out of his current circumstance.\n\nWell, there was a third. Tell them everything he knew about Azamel and Athalia. They might let him live, at least for a little while. Hell if they were nice they might let him go; no fucking chance. The thought almost made him smirk, but a nauseating wave of pain had him choking on air instead. He could tell them all he knew, little as it was. It might make the pain stop for a little while, if nothing more. Or get him a death with less torture involved. No, fuck that, he wasn't going to die here.\n\nOnly reason he wasn't telling them everything was because he was afraid of Azamel, afraid of what she might do if she found out a vampire spilled everything. But he had nothing to spill! At least, he thought he didn't. Did he? What detail would be the detail they needed to do whatever, he didn't know.\n\nAngela lit the blowtorch again, and brought the insane flame closer to his face like before.\n\n\"Talk.\"\n\n\"I... I don't know... anything...\"\n\n\"That's not true. You spoke to Athalia, and you spoke to Azamel. You know something.\" Jeremiah jotted down a few more notes, and shrugged as he brought the pen up to his lips to nibble on it. \"Did you see the heart of her lair, hmm? Did you see the great temple?\"\n\nGreat temple? He managed to raise his head and look at the man, only to draw his head back as Angela moved the torch in close enough for him to feel the heat waft against his eyes.\n\n\"I've seen where she's staying in the tunnels! But that's it, I swear!\" Please take the fire away please take the fire away.",
        "She lowered the torch, but didn't pull it away. She traced the waves of its heat over his chest, held to the side so it didn't hit him. But it was fire, insanely hot fire, melt through metal fire, and being anywhere near it was terrifying. Just a tiny little blue flame sticking out of a metal pipe, but hot enough to annihilate him and the metal chair he was sitting in if she wanted to.\n\n\"And the others?\" she said. \"Where are they nesting?\"\n\n\"Athalia? She... she's with Azamel I think. I've never even seen Mark!\" What details could he give them that wouldn't have Azamel coming to kill him? Best he could imagine was avoiding telling them that the Invictus were holding her home hostage with explosives, and that the woman had wanted to speak to him privately about becoming a new intermediary. Everything else? Any detail he could use to keep that blowtorch away from him, the better.\n\n\"Why did you visit her the first time?\" he said.\n\n\"We... we had an infestation, in the sewers.\" Careful, leave Avery out of this. She might be your only hope for all you know. \"Some sort of mindless monster thing. Looked like a spider. Azamel showed up not long before they did, so I asked her about it. She helped us pin down their location.\"\n\n\"Monsters in the sewers?\" Angela turned off the torch again, and shrugged as she looked at Jeremiah.\n\nHe returned the shrug, and took down a few notes. \"Arachnid monsters hiding out in old tunnels and sewers are not unheard of.\"\n\nJack doubted they meant Azlu, which meant there were other kinds of monsters that were spider-like. Ugh, why was the world dumping all this scary shit on him now, when before it'd been perfectly happy to let him live in ignorance of all this paranormal insanity.\n\n\"Something to tell Joanna about?\" Angela said.\n\n\"Maybe. I\u2014\" A phone rang. Jeremiah sighed, put his journal away, stood up and pulled a smart phone out of his pocket. \"Yeah? ... shit. Angela.\" The man nodded his head to the side, toward the door. She made an annoyed groan to match his, and walked after him.\n\n\"Wait,\" one of the guards said. \"What do we do with the vamp?\"\n\nAngela shrugged and pointed at Jack. \"Kid isn't even a year embraced. He's not getting out of those cuffs and he can't brainwash you with them on. Don't be an idiot and you'll be fine.\"\n\nAnd with that, they were gone, leaving Jack alone with the two guards. Finally, a god damn moment of peace, a moment to heal, to get his vitae working and fixing his wounds. Broken ribs, a concussion, lots of split skin, a hole in his leg. And it was only going to get worse. They were going to come back, and they were going to use that blowtorch to cut off his limbs, and then draw the alphabet into his stomach. They were going to fucking kill him.\n\n\"Shit, another? Stay on their tail.\" Jeremiah's voice, from down the hallway.\n\nHe had to get out of here, back to Antoinette, back to Julias and the Invictus, back to a simple vampire's life of manipulating kine for money, for blood, but no one getting too hurt for it. Back to hiding in the shadows and, much as hiding in shadows sucked, back to enjoying the joys of his second life. Back to enjoying being in Antoinette's arms, his face in her breasts, melting into her. He was going to get back to that life, he was going to escape, one way or another.\n\nJack let his head droop, and let the pain make his body shake, let the quivers work up and down his legs, and let some small sobs break through. He wanted to cry, but right now, he wasn't sobbing to let out the need to cry. He was sobbing, quietly, barely, so the two hunters would think he was broken and weak. He wasn't. He was a Ventrue. A fucking Ventrue. He would not be broken by this.\n\nHe was stronger than Kindred his age. He knew it, Julias knew it, and other people were starting to realize it. But these hunters didn't know it. To them he was just another young Kindred they could bully because they knew what vampires were weak to, what they were afraid of. And yet, they were kine, and that meant they were his prey, not the other way around.\n\nThe two psychos may have been able to block his mind, his brainwashing abilities, but he doubted they could block bullets.\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~Eric~~\n\nWhat drugs had he taken to get him this high? Alice in Wonderland much? Maybe he was still falling down a well, or rabbit hole, and just going down and down into a pit of insanity that made no sense.\n\n\"Beast! Show yourself!\" The four hunters moved through the black, two of them holding rather powerful LED flashlights, held reverse grip under hands holding pistols. They were trained. The other two walked forward with shotgun in one hand, knife in other, hacking and slashing away at the vines of the jungle.\n\nBut Eric and Fiona had gone higher, and higher. She took his hand and guided him up branches, and branches, and more branches, until they were a hundred feet up in the canopy. He could hear howling, like monkeys or apes. And every so often, he could hear a growl, and as far as he knew, big cats didn't go around randomly growling.\n\nThis jungle wasn't normal. Fucking felt like he'd been dropped into Jumanji. God he wished he was dreaming.\n\n\"Stay here,\" she said, raspy voice almost inaudible in the jungle's breathing.\n\n\"... what?\"\n\n\"I must deal with these hunters. Please stay here, remain safe.\" The spider monster pat his shoulder, and hovered away, her spider legs moving through the canopy of trees and green with barely a sound.\n\nIt was more than just barely a sound. It was without a sound. Her spider legs brushed against the foliage and leaves, but the foliage and leaves didn't respond. And as he squinted to see her movement, she faded away.\n\nFaded. Just fucking faded. Vanished. It wasn't that she was just a dark-colored creature in a dark place, but something caused her body to blend into the black far more than she should have. The only thing he had to go by was the direction she was originally moving in, toward the hunters beneath them.\n\nOne of the hunters had a glowing necklace as well, something that was emitting white light in a slow pulse. The necklace had begun glowing when Fiona had started doing inhuman shit, attacking these 'hunters' with the crazy comic-book insanity.\n\nMonsters. And apparently vampires? Wait, she'd laughed herself into stitches about the him getting fed to Jessy comment. Oh fuck, were Jessy and Natasha monsters too? Or vampires? Oh god oh fucking god what crazy fucking world had he\u2014\n\nGunfire. He almost jumped, but his grip was a constant vise on the tree trunk beside him. He was in dress shoes though, and they had no fucking grip for a mother fucking god damn wet-from-the-humidity tree branch. Fuck. Fuck fuck. He crouched as best he could, one hand still on the trunk, and another testing a vine. Stable. He held it tight, and stared down into the blackness below.\n\nNo way the hunters would be able to see him. From below, he'd just look like a part of the canopy, pitch black as it cast overwhelming shadows upon those under him. Their sources of light couldn't penetrate the canopy, and it was enough for him to see them, a little at least.\n\nWhoever these people were, they were organized. They moved as a unit, even as they cut apart a jungle. Other than some mumbling curses, or demands for Fiona to show herself, they kept quiet. Not like people couldn't hear them, with all the chopping they were doing, but they didn't waste words either. Sometimes they turned to face each other, and in the light made some hand gestures; very trained, very professional.\n\nHunters, she'd called them. She was a monster. They were hunters. Was he on the wrong side in this? Why wasn't he running up to the hunters and asking for their help, for them to save him from the terrifying monster?\n\nUgh, cause if anything, you're part monster, with all the fucking crazy shit happening to you, and Fiona was a monster willing to help explain it. Lovely, just lovely, he was a bad guy in this shit show. Maybe he should just run up to them anyway, ask for their help, throw Fiona under the bus. He'd never done a damn fucking thing to deserve getting lumped in with monsters.\n\nAnd he considered doing that for a second. Climb down the tree, hopefully not fall to his death in the process, and ask for their help. Explain it was all a misunderstanding.\n\nCause sure, that'd work. Just as likely to get a bullet between the eyes. And he couldn't do that to the girl. She'd done nothing to earn any ire from him. Hell if anything, she was the nicest girl he'd ever talked to, and that included Sheryl during their honeymoon phase. Monster? Yeah, apparently she was a monster, at least in the physical sense. A monster with a tiny waist and a huge rack.\n\nThat was kind of strange, wasn't it? The monster in the jungle looked like she had a rather sexually exaggerated figure, with a bunch of spikes and sharp limbs on top of it. It was creepy. Beautiful, and creepy, and scary. But, it wasn't as scary as it should have been. Rewind a few weeks and he was sure it'd be terrifying, sure that Fiona's monster side would have rendered him paralyzed in fear. Not anymore. A bit scared, yeah, but not terrified.\n\nHe stared from above, and tried to see if he could spot Fiona. Vrall. Whatever. Couldn't see her, but he could see some leaves and vines adjust ever so slightly, enough so he could get at least some idea of where she was. But those massive spider legs made it difficult.\n\nShe was doing something, ahead of the four. Unseen, silent, she was weaving something, drops of white flicking across the tree trunks and buried in the shadows. She worked fast, still borderline invisible, but the white lines she created were not. He stared on, squinting to see through the darkness, and watched as black blades flicked through the dark, each planting another white line in the shadows. She was weaving a web, a big web, big enough for a human.\n\nA spider in the dark, setting up the trap.\n\nShe'd told him about nightmares, her nightmares, from when she was younger. It was obvious she was looking for someone to put her woes on, to share some of her baggage with, and find a shoulder to lean on. Maybe he should have listened more, because it didn't seem like such juvenile baggage anymore, having a bunch of nightmares. Now it felt real. Now it felt like he should pay more attention to his own dreams, if this girl's nightmares about something dragging her into the dark was now what she was actually doing herself.\n\nGunfire. He almost fell of again, and dropped down low to squeeze the trunk and stabilize himself as best he could. In the hushed whispers of jungle life, and even the loud howls of nearby animals, it paled in comparison to random gunfire. His heart nearly jumped out of his mouth, and he swallowed it back down as he stared into the black. White flashes joined the lights, and again, more bangs.\n\n\"Get this shit off of me!\" a woman said. Someone was trapped in one of the webs.\n\n\"Shit is fucking tough.\"\n\n\"Here, I got it. Watch my back.\"\n\nQuick, seamless, a unit used to working together. They didn't hesitate to cover each other's backs and help each other the moment one of them was trapped. Really did make him wonder if he was actually helping the bad guy in all of this, and these hunters were the good guys. Good guys covered each other's backs like that. Good guys helped each other without hesitation. But, he didn't feel that, didn't sense that, didn't get any of that from these four from the way they looked at him, and Fiona. The sheer hate in their eyes, when they caught him and Fiona off guard? Now that had been terrifying.\n\n\"There!\"\n\nA shotgun blast. And then, screams, inhuman, loud, ear piercing. A weird rasp that would have fit a banshee. Eric winced and pulled his shoulders up to his ears, and another blast forced them higher. No scream this time.\n\n\"Jeremiah better get here soon. No fucking bane for this monster.\"\n\n\"He didn't mention anything about this Begotten.\"\n\n\"Think he set us up?\"\n\n\"Unlikely. You saw the size of his troop. Others hunters seem to think he'll do right by them.\"\n\n\"Or he's just a good liar.\"\n\n\"Stow it. And he did say use the knives. Better than nothing.\"\n\n\"You really want to go melee with this thing?\"\n\n\"Better than wasting bullets.\"\n\nThey were whispering. Eric could hear them, over the jungle noise and through the canopy, ears straining but hearing. The four kept moving as they talked, and as they moved, two new blades were drawn. He could see the blades by the glint of moonlight; really fucking shiny knives. Too shiny, unnaturally shiny. Yeah, those weren't regular knives. No idea what was special about them, but seeing them move through the jungle night, he felt his hairs stand up.\n\n\"Get out of my home.\" Vrall's voice, bouncing off of trees and mixing into the vines. Couldn't locate the raspy voice, but its power echoed through the life and death of the jungle without issue.\n\nThe hunters said nothing, but their knives cut through more of the vines, and more as they pushed forward. Fucking fearless.\n\n\"Get out!\"\n\nFiona's body slashed through the walls of the jungle, appearing from the side, and half of her massive blades sliced down through the branches, vines, and trunks of nearby trees alike.\n\nThe four hunters dived out of the way, rolling in the mud, catching twigs and roots and rocks on their bodies. Groans and curses abound, but their reactions were fast and harmonious, each throwing themselves out of the way with full commitment, and then rolling onto their feet and unloading their ammo. Two kept their pistols up, firing into the black and lighting it with their flashlights, while the ones with knives slashed out at the nearby limbs, their spare hands holding flashlights.\n\nFiona screeched, a splatter of blood painting nearby trees in red, a brighter shade of it than Eric expected. Again she disappeared into the black, and Eric winced for the hundredth time. They'd hurt her, bad.\n\n\"Get out!\" Again the monster cried out, but remained hidden this time. Learned her lesson he guessed; the hunters were too damn fast.\n\n\"Fuck you, monster. Working with Azamel, or that psycho Athalia? Her daughter's going to do her in, Jeremiah's going to do Azamel in, Mark's next, and then we're going to clean this city up,\" one of the men said.\n\n\"Derrek, shut up.\"\n\nDerrek shrugged. Probably thinking there was no way Fiona was going to get out of here alive, no harm in spilling info. A fatal flaw, or earned confidence.\n\nSo many names he'd never heard. Remember them, could be important.\n\n\"I've done nothing to harm you!\" Fiona said. A blur of her shadow shot across the dark, and the two hunters unloaded more shells into the black. They missed. Fiona was dark, and right now, so dark even Eric couldn't see her unless she was moving.\n\nOne of the hunters leaned in to her friend, shotgun still held up and aiming at anything that moved. \"How the fuck is Jeremiah supposed to get here from the prison?\"\n\n\"He said trust him.\"\n\n\"I don't fucking trust him.\"\n\n\"I\u2014shit!\"\n\nThe four hunters dived out of the way, each throwing themselves at full forced into different directions, whatever got them out of the way of the collapsing tree. A big tree, a tree so tall it reached past the top of the canopy, and its weight tore through the limbs of its brethren. That included Eric's branch.\n\nShit.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\n\"Then follow them!\" Jeremiah's voice echoed through the hallway outside Jack's cell. Metal and concrete had a habit of doing that.\n\nThe conversation didn't stop, but it did go further away, two steps of boots thudding against the hard floor. Thank god, thank fucking god. He choked down a sob, but another one came after, and he let it leak out of him as the pain blinded him. If he got out of this alive, he was going to go to Antoinette's, not leave her tower for the next month at least, and fall asleep holding her tight every morning. Cause fuck this, fuck this shit, fuck these hunters and these fucking psychos. Fucking having them in the city, skulking around, hunting, killing. Killed Barry for nothing.\n\nAnger. Anger was good. Anger he could use. Pain invited anger, and anger was one way to get the beast to the surface, to get that creature in his guts to bare its fangs and tear into something.\n\nHe inched his head upward enough to glimpse at the faces of the two remaining hunters. These two weren't the same as Jeremiah and Angela. They\u2014fuck, what was it about Angela's face that seemed so familiar? Certainly not the glass eye. He'd probably remember meeting someone with a glass eyes. Either way, these two weren't the same as those other two. These two felt like normal kine, and when he managed eye contact with them, they adjusted their eyes and posture like normal kine would. Like nervous kine would.\n\nHe tried to pull up his vitae, to empower his body, to regenerate his wounds, and maybe tap into some of that resilience Ventrue and Gangrels were known for.\n\nIt wasn't happening. Not easily, at least. It had to be the handcuffs suppressing it, making it difficult to pull and manipulate the flow of vitae, it had to be. Enchanted fucking handcuffs. He pulled at them, squeezed on his muscles hard, and pried against the metal.\n\n\"Give it up kid,\" one of the hunters said. \"Vampires a lot older than you have been trapped by those.\"\n\nHe kept trying, engaging his shoulders and pulling his arms apart harder, and harder. The metal started to cut into his wrists, splitting the skin enough to make him bleed if he'd still been human. Kindred blood took a more serious wound to warrant coming to the surface, but he was getting there, twisting and grinding his wrists and hands against the metal. Deep in his guts, he pulled at the pool of vitae in his core, in his being, in his beast, and forced it through the murky waters that buried him. These handcuffs were a pale comparison to the sorcery Lucas had used, and if Antoinette could still fight an army after that, then the least he could do was escape some handcuffs.\n\nThat's what he would have liked to think. And maybe if he could summon the raw strength of a Daeva or Nosferatu, or a Ventrue a hundred years older than him, he'd do that. But the metal wasn't bending, and he doubted most Kindred, Daeva or Nos or otherwise, would be able to get out of those cuffs at his age.\n\nBut he wasn't most Kindred.\n\n\"... how many vampires have you killed?\" he said.\n\n\"What?\"\n\n\"How many of us have you killed?\" He grit his teeth and started to squeeze on his muscles again. The hunters were watching him, but he needed them to lower their guard, to not fear him. To get closer. \"I'm... pretty young, and... never really... thought hunters would come here.\"\n\nOne of them scoffed, and adjusted how she held her shotgun, unnecessarily.\n\n\"Been hunting for almost a decade, kid. How many do you think?\"\n\nHe sighed and twisted his head a little. He could feel the vitae in there, buried and suppressed. But he could get it, he could find it, scratch it out of the weird layer of what-the-fuck-ever was keeping it down. These handcuffs weren't perfect, and he was going to get past them.\n\n\"... A few?\"\n\n\"Try dozens.\" She came in closer, and leaned in to glare at him. A hard face, someone who'd seen a lot of shit, someone who wanted vampire dead cause she was a vampire hunter. What sort of twisted story did she have? Something worthy of a book, surely.\n\n\"... why?\" Let's find out. Get her closer.\n\n\"Why? Cause you fucks are a menace, spreading like flies and hiding in the shadows, killing people, ruining lives, why\u2014\"\n\nThe other hunter reached out and touched her shoulder. \"Stace, he's just goading you.\"\n\n\"I'm... not goading.\"\n\n\"How many people have you killed?\" the hunter Stacey said. She came in closer, and poked his skull with the butt of her gun. \"You started this. How many humans have you killed?\"",
        "One human, just the one, and it wasn't his fault. Not his fault. Not his fault.\n\n\"... one. I... it was an accident.\" Should have lied. Why didn't he fucking lie?\n\n\"Yeah, hear that a lot. But here's the big secret, fucking vampire.\" She leaned in closer still, got right into his face, and glared at him. \"You wouldn't be the first vamp with only one or two kills under their belt, where it was an accident. In fact, it's pretty god damn common. Strange how that keeps happening, isn't it? Almost as if vamps are a bunch of rabid monsters that can't control themselves, and need to be put down.\" She poked him again, harder, and got into his face until he could feel her breath and fury against his skin.\n\nHe almost said he was sorry. He almost said that he regretted his one and only human kill to this day, that sometimes it haunted him, that sometimes he checked on Mrs. Pavala's family, just to torment himself, just to remind himself how easy it was for a vampire to become a fucking monster. He almost spilled his guilt, his self loathing and pain over her, and asked for her forgiveness.\n\nAnd then he grew the fuck up. He wasn't human anymore, and he had to accept that. He'd had. It wasn't murder anymore, it was feeding. A predator feasting on prey. They didn't have to kill their prey, but sometimes it happened, and sometimes that hurt. That was the struggle of a vampire, balancing the beast with their humanity. A kine would never truly appreciate that until they had a beast in their guts, changing their instincts, their reflexes, changing how they felt about everything. He wasn't human anymore, and that was that.\n\nAnd that's how it was going to be, he realized. There'd be no even ground with these kine, these hunters, no way to get them to accept that Kindred were higher on the food chain. And maybe that's how it had to be, maybe that's how it should be, with hunters killing vampires who got too cocky, and vampires forever hiding in the shadows, protecting the Masquerade. No way for Kindred to ever truly reach a sort of compromise with kine. How do you convince sheep to let the wolf suck their blood on occasion, along with occasional fatalities? You don't.\n\nStrange. Staring this livid woman in the eyes, it was oddly freeing, realizing that he could not ever come to peace with her. A ceasefire, maybe, hell maybe even a tense truce, but peace? Vampires preyed on humans, and no human would ever accept that. Why would they?\n\nA small smile crept onto his face as he met her gaze of fire. No need to ask her to look into his eyes, none at all. And through the heavy weight of the handcuffs, he found his depths, found his beast, and pulled it up through the weight pinning it down. No, not pulling it. Breaking the chains that held it.\n\n\"You... are mine.\"\n\n\"What? You can't be fucking serious. Kid you are a twerp, a tiny little vamp, young as fuck, and you're wearing those... hand... cuffs...\"\n\nHe smirked, and tore through her eyes and into her soul. \"You. Are. Mine.\"\n\n\"Stacey, the fuck?\" The other hunter stepped in, and Jack threw his gaze at him as well.\n\n\"You. Are. Mine.\" This was one easier. This one didn't have fire to break through, tempered steel. This one was a pawn, a puppet, mind unguarded and soul exposed. And Jack reached out, and grabbed it.\n\nThe two hunters stood in front of him, and with wide eyes, jaws dropped, they waited.\n\n\"Good. The two of you will guard me with your lives until I am safe. I am your master from now on.\"\n\n\"Yes master,\" they said, in unison.\n\nJack breathed deep, and sat up straight. This wasn't the usual way to dominate a mind, this wasn't the gentle caressing he normally used to coax people's thoughts, to mesmerize. This was different, this was total domination. Through the weight crushing his insides and trying to keep his Kindred disciplines at bay, the beast in him roared, snarled, free of the chains binding it, and unleashed its will upon the two helpless fools in his cell with him. This was something Viktor would do, break people and turn them into meat puppets; Julias didn't like it, and neither did Jack. \n\nHe was going to get out of this prison though, one way or another.\n\n\"Where are the keys for the cuffs?\"\n\n\"The handcuffs do not open with a key, or anything, master. They cannot be removed.\"\n\nGod fucking damn it.\n\n\"How are the cuffs bound to the chair?\"\n\n\"A padlock, master.\"\n\n\"Keys for the padlock then?\"\n\n\"Angela has them, master.\"\n\nMother fucking piece of god damn worthless fucking shit fuck.\n\n\"Either of you have a crowbar, or can you get one?\"\n\n\"No, master.\"\n\nFuck. Fuck! He twisted and turned and banged his cuffs around against the back of the chair. The chair was bolted down, and the padlock wasn't going to break this way. If Angela had left the blowtorch, maybe that would have worked, but she hadn't.\n\nOk, maybe crushing their minds into mindless puppets incapable of a coherent thought wasn't the best plan. At the time it was the only way he could push past these damn cuffs, and the only way he'd get these two pawns doing what he needed them to do. But now his plan hit a wall, and quickly at that. So much for feeling so damn superior. Hubris, fuck you.\n\nNo, no, no. Fuck that. Fuck that, he wasn't going to just sit here and die to a couple of torturing psychos. He was getting out of here, no matter what it took.\n\n\"... You.\" He nodded to the man. \"Get out your knife, and cut off my hands. And do it fast.\"\n\nHis whole body paralyzed. He'd said the words. He fucking said them, cause it was the only plan he could come up with. Hands off, handcuffs slide off, and he'd be free. Regrowing hands? Sure, he could do that, right? Probably. Maybe. Hopefully.\n\nGod, he was going to need a lot of blood, and several nights sleep, to regrow two hands.\n\nFlip the switch in the brain, make logical decisions, and ignore the emotional state of the mind. Emotions are not logical, emotions are reactive and mindless and without concern for reality. Emotions did stupid shit like make you not do something because you were afraid of pain, even if you logically knew the outcome was worth it. He was good at flipping that switch.\n\nBut he wasn't good with pain.\n\nThe hunter didn't hesitate. He grabbed one of Jack's hands, and started cutting. Jack thought he knew pain, but every fucking day of this second life, it found ways to introduce him to new levels of it.\n\nMetal, cutting through skin, slicing through muscle, tendon, cartilage. And then, using pure strength, the hunter cut through bone. It took a moment for the pain to kick in, just like getting a really nasty paper cut and the sting only happening a second later when the body realized what just happened. Except a million times worse.\n\nHe started to shake, and then, to scream. They'd hear, and they'd be running down to see what was going on. He had maybe twenty seconds he figured to get control, to manage the outcome, to guide the events a way a Ventrue should.\n\n\"The other! Quickly!\" God, his voice was a wavering, cracking mess. Anymore and he was going to burst into tears, and he wasn't even blushing life. Fuck, please, let this work, he couldn't take any more of this. No more, no more pain for just a few seconds.\n\nAnd then the hunter started cutting off the other hand, with just as much brutality and brevity as before.\n\nThe sound of his hands falling to the floor, withered husks quickly drying to a corpse, were the biting ice on the scorching inferno of pain working up his arms. Any and all DNA evidence was ruined, just a pile of compromised ashes in the shape of a hand. Older vampires would leave nothing but ash behind, but not him, he was way too young.\n\nIt wouldn't have been so overwhelming if he'd only needed to get one hand off, but the cuffs wouldn't fit through where the padlock was locked to the chair. He needed both off. And now with both off, he forced himself to stand, and looked at the jagged stumps of his limbs.\n\nStay. Standing. Stay. Standing.\n\nBone and flesh, the dried and withered flesh of a vampire. The thick Kindred blood that coated the bones worked quick to keep more of the blood from pouring out, but the wound was too great to stop it completely. And, as he let his arms drop to his sides, he heard the splish splash of his blood hitting the floor of the prison.\n\nStay. Standing. Ignore the pain. Ignore the agony, the searing fire working up through your limbs. Every part of him wanted to squeeze on something, and every time his muscles made the attempt, his body started to shake with new waves of pain. He had no hands. He had no fucking hands. Another scream escaped him as the pain struck him like a steel pipe against his skull, acid working down his limbs and back up into his brain until it felt like it was going to explode.\n\nFootsteps, rushing down the hall. No time, no time to stand here and agonize over his agony. No. Fucking get ready, get ready. Get ready!\n\nTwo hunters came through the doorway. \"What the fu\u2014\"\n\n\"Kill them.\"\n\nThe two hunters at Jack's side unloaded their shotguns. They weren't just kine with shotguns, they were trained marksmen, trained killers. They didn't miss or hesitate or any of the things he'd have to worry about with dominating normal kine. These tools were perfect.\n\nThe two other hunters managed only a second of surprise, eyes wide, panicked, torn, before they both went down. His tools didn't aim to wound, they aimed to kill, as he instructed. The enemy fell backward, chunks of their faces and skulls splattered against the cell wall. And Jack should have looked away. But it was only a second's time, just long enough for him to see the look of death in their eyes before they were murdered.\n\nDon't think about it, keep moving. He couldn't wait, couldn't stand here and get trapped, get pinched inside the cell. He had to get out there and get moving.\n\n\"You, what's your name?\"\n\n\"Henry, master.\"\n\n\"Henry, you will cover our back. Stacey, cover the front.\"\n\n\"Yes master.\" Again, in unison.\n\nJack marched forward, two living tools at his side, and stepped over the bodies. Ignore the fact they were the first humans you'd ever killed while in control of yourself, ignore that, ignore that you'd turned these kine into tools and were probably going to get them killed as well. The pain of his wounds was constant, unending, like he'd stuck his hands inside boiling water and he'd just left them there. And he ignored it. Lament the pain later, when it was safe, when he could take the time to get a proper meal. Flip the switch. Logical choices only.\n\nA prison. Cells, bars, and lights. He didn't know how they had power going in an old abandoned prison, but then maybe that's why they picked this place to take him. So they must have known. Jeremiah and his psycho partner may not have been setting up a base here, but it wasn't just some random drop off zone for him. That meant there may very well have been more hunters.\n\nAnd there were more. He could hear them, boots hitting the floor, many of them ahead. Had Jeremiah lied to him about this not being his base? Either way, there were a lot of people coming to investigate the noise.\n\nHe walked forward, passing the empty cells, stumps dripping blood at his side for each step. Shirtless, pants a mess and with a big hole through one leg of them. He wasn't blushing life, so his skin was pale, body thin, musculature more defined like a dehydrated person's would be. Hell, he must have looked like a zombie. He smirked through the pain, and kept walking.\n\nSomeone must have seen what was happening, and communicated it out to the others, because instead of another hunting running in blindly to see what the shooting was about, three hunters poked their heads around the doorway at the end of the hallway. And then they opened fire.\n\nCrushing minds and communicating with animals, Jack knew these skills were coming to him quickly. Ventrue were also naturals at resilience, to be able to take a bullet to the chest and get right back up. And Jack knew he sucked at it. He threw himself to the side and into one of the cells, and screamed as he landed on his side, one of his stumps smacking against the concrete floor.\n\nHis two slaves opened fire, each ducking into their own cells and poking their heads out only long enough to unleash some bullets or shells.\n\n\"Jack you fucking little shit! Let them go!\" Angela's voice echoed down the hall. Sounded pissed. \"How the fuck did you get out of those cuffs? Should have locked down any piss-ant vamp!\" And when she was pissed, she had a habit of saying too much, giving stuff away. Good to know. \"Where are Mitchell and Jacky?\"\n\nDamn it. Would have been easier if he didn't know their names. Attaching names to their shocked expressions before shotguns tore them apart was not a good thing to do.\n\n\"Dead.\" Maybe, if she was pissed off enough, she might make a really bad mistake.\n\n\"You're fucking dead! Dead! I'm going to split you open, rip out your guts, and send the ashes to your girlfriend, you fucking shit welp! Dead!\"\n\nHoly crap. If he couldn't get out of here, she really would do that shit, and it'd take him days to die as she slowly tortured him to death. Christ she was terrifying. And insane. And stupid.\n\nNo Jeremiah though, where was he? The fuck had the phone call been about? Whatever, an opportunity was an opportunity and\u2014a rat! Hiding in the corner, in the darkness of the empty cell,.\n\nJack almost rolled onto his nonexistent hands, before he stopped. The pain had become a constant drumming, persistent, almost overwhelming but not quite, enough that he could function. And, with a single glance at the rat, he grabbed its mind. \"Come here.\"\n\nIt sprinted over to him and stood at attention.\n\n\"Good. Now, get your friends. I'm not getting out of here without an army. I need an army.\"\n\nThe rat nodded, and scurried out into the hallway before disappearing down its length, away from the gunfire.\n\nJack forced himself back to his feet. Don't use your hands, don't use your fucking nonexistent hands. If anything, keep your mind half on the pain, to remind yourself you don't have hands anymore. Once standing, he looked out past the bars of the cell enough to see the hunters waiting for him. They'd stopped firing. The only people still launching bullets were Jack's new bodyguards, and only when they saw an opportunity to try and land a shot. But so far, no one had shot anyone. Angela's hunters were reluctant to shoot their friends, and reluctant to stick their own heads out and get shot.\n\nA minute or three was exactly what he needed. Rest for a second, tap into his core, pull at more of his vitae, and wait for his army to amass. And he knew he could do it. Somehow, he fucking knew it. He should have been wiped, should have been on the ground screaming about his hands, crying out in agony and then falling into torpor, no energy to remain conscious. But he wasn't, and he knew, as he grit his teeth until his jaw clicked, that he could do more.\n\n\"Let me go and no one else has to die.\"\n\n\"Like I'm going to let some fucking vamp outta here!\" she said, voice bouncing down the hallway.\n\n\"You started this!\" He poked his head out enough to see down the hall, and glanced around to take some stock of his situation. No catwalk over him or anything, just a single floor hallway with probably eight cells on each side, and he was close to the wrong end of the hall.\n\n\"You're just a leech, a stupid fucking blood leech. Your words mean nothing. Lay down and fucking die.\"\n\n\"... you're not making a good argument for me to spare the lives of your friends.\" He looked across the hall to his tools. Man and woman, each poking their heads out just enough to keep an eye on the enemy, each with empty gazes almost like porcelain dolls. \n\n\"This isn't a fucking conversation you fucking insect. Let them go and I'll kill you quickly, best offer.\"\n\n\"... you suck at negotiating. You wouldn't last five minutes at an Invictus contract meeting.\"\n\n\"Shut up! You're a cancer, a fucking cancer. You're all ants to be walked on to get to my real goal. Housing fucking monsters, fucking Azamel, and just letting them nest? I'm going to rip out your fucking throat and film it all so your fucking bitch girlfriend can see it. And then I'm going to burn down this city, all of you, and record the fucking screams for a nice fucking lullaby to sleep by!\"\n\nWow. Just wow. Psycho was right on the money. And, as he listened to her insane babbling, a familiar chill worked through his body, fear on his toes and traveling up his spine. This woman was terrifying. Reminded him of Athalia, hate and anger included.\n\nSome squeaks behind him drew his attention. More rats, a dozen, and more coming in through the cracks of black, through the shadows, quick scurrying in front other cells, and more through the holes years of neglect and weather caused. More, and more, and more. They kept coming, droves of them, dozens, and then dozens more, and then hundreds. They stood in lines, rows and rows of beady eyes starring up at him. And more. And more.\n\nHe stood there, and watched the cell floor around him grow into a carpet. So many rats. His voice had carried far more weight than he'd realized, and it'd somehow echoed throughout the rats that had spread it. That wasn't normal. But, normal or not, it's what was happening. More rats came in through the holes in the walls, and many from other cells did their best to remain hidden to join his growing army.\n\nThere must have been food, rations or something in the basement of the prison, some place where they stored provisions, for so many rats to be here. Negligent of the government; nothing new there. He smiled as he watched the army grow, and felt his pride begin to swell as his army swelled along with it. It was almost enough to make him forget the pain he was in.\n\nWould Viktor have been proud? Did he want that old monster to be proud of him? Viktor had been a powerful Kindred, even for his age. Julias was the same, better even, relative to his age. And Jack was following in that path, he knew that, and this was proof. What sort of history did Viktor have, where did his bloodline come from, did bloodline even play a factor in any of this? No one fucking knew, except for maybe the Lancea et Sanctum and their records.\n\nMental note: ask Damien. For now, survive.\n\nHe looked at his amassing army, and again reached down into his gut, into the pool of unlife, of energy, of vitae he had within him to enact his commandments. \n\n\"All of you, protect me with your lives.\"\n\nThe multitude of rats nodded. Unending, alive, an army of claws and teeth and scurrying little bodies.\n\n\"Now, come, we\u2014\" The tink tink of metal rolling along the floor yanked his attention, and he spun around. Grenade? No, Angela wanted to save the lives of her hunters.\n\nThe object rolled onto the floor by his cell. Longer, thinner than a grenade. And a lifetime of video games told him what that was. That was fucking flash-bang.\n\n\"Cover it!\" He threw up his arms to cover his eyes, and screamed in agony as once again, muscles squeezed down to try and work hands that weren't there anymore. But he kept his arm there, turned around, and waited for inevitable explosion, the sound, the light. It didn't come. Instead, a loud but pale comparison to the expected noise erupted, nothing more than a muffled cry. And no light followed.\n\nHe turned around. In the center of the hallway, a pile of rats were spread about, dead or injured, and dragging their half-torn bodies across the concrete with trails of blood. The shards of the flash-bang sat in the hall, surrounded by dead rats.\n\nHe frowned, and again began to grit his teeth. Enough of this fucking absurdity.\n\nHe stepped out into the hallway, and pointed his bleeding arms down its length. His two hunter friends jogged ahead of him, each ducking into cells and readying their guns. But it wasn't them that he was relying on to get him out of here, it was his army of rodents.",
        "The rats came to him, and swarmed ahead of him, each only a tiny body, but together they flooded down the hall as a battalion. Perhaps it was his blood, how it still dripped from him, how he'd left a trail of it behind him as he walked that had summoned so many rats? Viktor had done similar to summon his army, and perhaps Jack had accidentally done the same. No, that wasn't how disciplines worked, you didn't accidentally do them. And yet, the rats came to him, rushed past him, and flooded him, just like that night Viktor had summoned thousands of them.\n\n\"Hunters, guard me. Rats, ahead.\"\n\nThe rats didn't hesitate. The unending swarm flooded ahead, and as they poured through the bars guarding the ending of the hall, the screams began. Then, the gunshots.\n\n\"Get off me, get off me!\" Angela's voice. No girly screams though, just pure rage, frustration, and more shotgun shells met with the squeaky deaths of his army.\n\nHis two hunters each took a side at the end of the hall, backs to the wall, each guarding the other's six as they both peeked into the hallway that they were trying to reach. The hallway gate was closed, but not locked. They probably couldn't find the key to lock it, thank god; he couldn't mind control a metal door to open. He groaned as he stuck his stump through the bars, and forced the gate to slide over.\n\nHe looked down the hall, both sides, and frowned. The hunters were retreating down one of the halls, shooting at the rats, or tearing them off of their legs. One of the hunters had fallen, and was roaring agony as he ripped the biting, clawing little balls of fur off his body. He was close, close enough for Jack to see his eyes.\n\n\"You. Get over here. Now.\"\n\n\"Fuck you! Fuck... you...\"\n\nLike crushing grapes. He could feel it, feel their mind even from such a distance, even through this chaos, even with only glancing eye contact.\n\n\"Come. Here.\"\n\n\"Don't listen to him Johnny, don't\u2014\" Another shotgun blast into the unending flow of rats. The swarm was unending, and the hunters knew if they didn't keep it at bay, it would overrun them. To be devoured alive by rats, even he did not wish that fate on these hunters. But if given the opportunity, he'd take it.\n\nJohnny came closer, and closer, until he stood only inches from Jack. Eyes, empty. Arms limp at his sides, gun loose in his hand.\n\n\"Lower, so I may drink.\"\n\nThe mindless man leaned down, and Jack did not hesitate to crane his neck to meet him. He sank his fangs into his neck, and began to kill the man.\n\n\"Johnny no!\"\n\nThe drama of it all. It was sickening. In another circumstance, he might have laughed at how bad of a ridiculous action movie this whole situation reeked of, hunters on the retreat from a swarm of mind-controlled rats, and screaming out for their doomed comrade. Being in the situation destroyed any humor for it. This was horrible, and every passing moment he felt more horrible. But he needed blood, and Johnny was going to give it to him.\n\nHe spared no mercy with the Kiss. Done hard, done fast, done rough, there was no pleasure to be given to the prey here, only a nigh paralyzing exhaustion. For the Kindred performing the act, it was exhilarating. It was a rarity for Jack to ever feed like this, brutally, but each time it was a mark on his memory, each time it left its imprint in him, how satisfying it was to give into the beast's desire to satisfy its hunger. Blood, sweet, delicious, thick blood coating his tongue, his mouth, his throat, filling him with life itself.\n\nHe growled. The beast growled. The man fell to his knees, exhausted to the point he couldn't stand anymore, but still Jack didn't let go, bite secure on the hunter's muscle. More, and more. He drank it all, drank it until it stopped coming out easily, drank it until it stopped coming out on its own at all, drank until he had to suck on the puncture wounds to pull out the last of the blood. Only then did he release his bite, and let the man, the corpse fall.\n\nHe stared at the empty eyes of Johnny. God he wished Angela hadn't said his name. Like Mrs. Pavala, more names he'd never forget, and that was not a good thing. It would eat at him when this was over, claw at his conscience, gnaw at his heart until he was a mess. A weak, crying mess.\n\nBut it wouldn't do that now, he wouldn't let it. For now, he growled a vampire's growl, and let the flood of energy fill him. He wouldn't be regrowing his hands yet, but the stumps healed over now that he had fresh blood within, and the pain greatly subsided.\n\nAs sickening as it was to be killing, murdering, a small part of him was enjoying how good he was as it, too good for a vampire his age.\n\nHe looked down at the rats that still surrounded him. \"Destroy the evidence, destroy the body.\"\n\nLoyal to the core, the rats pounced upon the corpse of the hunter. They bit through the clothes, swarmed over his flesh, and began to devour him. No time to lick the fresh bite wounds closed, and the body had to be removed regardless. A bloodless corpse would attract attention, especially considering all the other traces of paranormal violence that were being left around.\n\nJack felt alive again, as much as a vampire could be. The blood pulsed through him, and he growled louder as he felt the sated beast purr its satisfaction, inside his guts. Satisfied, but also, empowered. He could keep going, he could go on. He could break these hunters, and get out of here, back to Antoinette, back into her arms, even if he had to walk over the corpses of a hundred hunters. Even if he had to make a bridge of corpses to cross.\n\n\"You,\" he said to a group of the rats behind him. \"Spread out, find more, bring more of your kind here. Bring all that you can find to me.\"\n\nHe stepped out into the next hall, and continued his march. His two guards dashed in after him and darted ahead, each taking up positions along the long hallway. Nothing to duck behind this time though. There were other cells, but they were isolation cells, closed. Behind him was a dead end, and ahead of him was Angela and more of her crew. How many hunters did she have?\n\nHe marched forward, rats pouring in from more cracks, more and more, until they poured over each other to try and fit along the hallway floor. The hunters at the end of the hall, poking their head around the corner and looking through the bars, gasped.\n\n\"Get out of my way and you get to live.\"\n\n\"Fuck you! What the fuck is this? You're just a fucking kid, a fucking fledgling vamp, you don't get to do this!\"\n\nShe wasn't doing a very good job with the morale. The hunters looked panicked, eyes wide. And why wouldn't they be? He was coming for them, bloody stumps for arms, shirtless, and with an army of rats at his beck and call. He only now realized that blood was on his lips, his chin, and some had run down his neck and onto his bare chest. The blood of their friend, their comrade Johnny.\n\nHe must have looked like a god damn monster.\n\nHe snarled as he marched forward. A glance left and right showed more beady eyes, more rats poking their noses out of their hiding holes. Instead of running from the madness, the echoes of his command drew them.\n\n\"You. Are mine. Defend me with your lives.\"\n\nThe new rats nodded, and jumped into the fray, chittering, scurrying, and they joined the flood of brown fur. Many stayed close to him, flowing around his steps, avoiding getting crushed by his shoes, and yet pouring over them at the same time. They joined the teeming masses of his army, and poured out into the hallway, like ocean waves.\n\nIs this what it felt like for Viktor? Did the elder find it so strangely easy to break the minds of others, to grab their conscious thoughts and crush them until they were mindless, obedient puppets? Did he find it so easy to summon animals to his side, to defend him and be his scouts, be his army of teeth and claws? Did it feel so empowering, so amazing for him too?\n\nJack walked forward, and the rats flowed around him, an aura of squeaking death. Another flash-bang was tossed into the hallway, and again the rats swarmed it, far more of them this time, a couple hundred pilling into a riling mass of little bodies. Many died to the resulting explosion, but the sound, the flash of the device was suppressed to nothing more than a quiet plop, and Jack continued on without stopping. If the enemy had been smart, they'd have tossed a grenade or molotov, and accepted the loss of their friends Henry and Stacey. Probably still hoping they could save them. Their hopes would be their undoing.\n\nHe felt good. He felt great, pain and death and the taste of blood mixing into a crescendo of euphoric violence, silencing his grief over the murders he'd committed. He felt Viktor's bloodline coursing through his veins. He felt like crushing more of these idiot hunters beneath him. How dare they underestimate him because he was young, the youngest in Dolareido. How dare they try and bully him, torture him, break him. How dare they injure him. How dare these lowly bloodbags try and manipulate him.\n\nHe could hear shouting from beyond the hall of metal and concrete, the loading of weapons, the hollers of commands being given. 'Spread out'. 'Get behind these tables'. 'If we have to kill Stace and Henry then do it'. They'd learn, they'd all learn.\n\nAt first, he was only going to kill if necessary. But now the sweet blood was on his tongue, and he couldn't help but lick his fangs as he continued into the awaiting maw of his enemies.\n\nIf there was one way he was going to die, it wasn't here, to this, to them. He was going to kill every last one of them."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "slow",
        "supernatural romance",
        "sci-fi",
        "fantasy",
        "violence",
        "werewolf",
        "vampire",
        "vampire romance"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-04-ch-10"
}